
2e34241064787da9ca26aa762927ec475e8d08ec124441a78acd7cbd82e4a3d6.exe:     file format pei-i386


Disassembly of section .idata:

00401000 <.idata>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	push   ecx
  401004:	add    DWORD PTR ds:0x426688,0x7e77
  40100e:	push   ecx
  40100f:	xor    eax,0x5bb6
  401014:	mov    DWORD PTR [ebp-0x4],0xdf2eff5
  40101b:	mov    eax,DWORD PTR [ebp+0x8]
  40101e:	sub    DWORD PTR ds:0x4266d0,0x426650
  401028:	mov    al,BYTE PTR [eax]
  40102a:	add    al,0x62
  40102c:	add    DWORD PTR ds:0x4266d0,0x426650
  401036:	xor    al,0xad
  401038:	mov    DWORD PTR ds:0x42663c,0x2068
  401042:	push   esi
  401043:	push   edi
  401044:	cmp    al,0x2
  401046:	mov    DWORD PTR ds:0x426690,0x7ccb
  401050:	jne    0x401146
  401056:	inc    edi
  401057:	mov    eax,DWORD PTR [ebp+0x8]
  40105a:	and    DWORD PTR ds:0x426644,0x0
  401064:	jmp    0x401078
  401069:	xor    ecx,ecx
  40106b:	add    ecx,DWORD PTR ds:0x426644
  401071:	inc    ecx
  401072:	mov    DWORD PTR ds:0x426644,ecx
  401078:	cmp    DWORD PTR ds:0x426644,0x12
  40107f:	jae    0x401097
  401085:	cmp    DWORD PTR ds:0x426644,0x18
  40108c:	jne    0x401092
  401092:	jmp    0x401069
  401097:	mov    ecx,DWORD PTR [ebp+0x8]
  40109a:	add    ecx,DWORD PTR [eax+0x3c]
  40109d:	mov    eax,ds:0x426650
  4010a2:	sbb    DWORD PTR ds:0x4266f8,eax
  4010a8:	mov    edi,0x75683590
  4010ad:	mov    DWORD PTR ds:0x42671c,0x4d29
  4010b7:	mov    DWORD PTR [ebp-0x8],ecx
  4010ba:	mov    eax,DWORD PTR [ebp-0x4]
  4010bd:	mov    ecx,DWORD PTR [ebp-0x8]
  4010c0:	and    DWORD PTR ds:0x426700,0x0
  4010ca:	jmp    0x4010dc
  4010cf:	mov    esi,DWORD PTR ds:0x426700
  4010d5:	inc    esi
  4010d6:	mov    DWORD PTR ds:0x426700,esi
  4010dc:	cmp    DWORD PTR ds:0x426700,0x17
  4010e3:	jae    0x4010fb
  4010e9:	cmp    DWORD PTR ds:0x426700,0x24
  4010f0:	jne    0x4010f6
  4010f6:	jmp    0x4010cf
  4010fb:	xor    eax,edi
  4010fd:	mov    esi,0x789ada65
  401102:	sub    eax,esi
  401104:	cmp    DWORD PTR [ecx+0x54],eax
  401107:	je     0x401132
  40110d:	push   DWORD PTR [ebp-0x8]
  401110:	push   DWORD PTR [ebp+0x8]
  401113:	call   0x40349f
  401118:	mov    ds:0x426490,eax
  40111d:	mov    eax,DWORD PTR [ebp-0x4]
  401120:	mov    ecx,DWORD PTR ds:0x426490
  401126:	xor    eax,edi
  401128:	sub    eax,esi
  40112a:	cmp    ecx,eax
  40112c:	jne    0x40113e
  401132:	mov    eax,DWORD PTR [ebp-0x4]
  401135:	xor    eax,edi
  401137:	sub    eax,esi
  401139:	jmp    0x401153
  40113e:	mov    eax,DWORD PTR [ebp-0x8]
  401141:	jmp    0x401153
  401146:	mov    eax,DWORD PTR [ebp-0x4]
  401149:	xor    eax,0x75683590
  40114e:	sub    eax,0x789ada65
  401153:	pop    edi
  401154:	pop    esi
  401155:	leave  
  401156:	ret    0x4
  401159:	mov    eax,0xd9850b38
  40115e:	ret    0x28
  401161:	inc    eax
  401162:	mov    eax,0xe47b6478
  401167:	ret    0x28
  40116a:	push   ebp
  40116b:	mov    ebp,esp
  40116d:	sub    esp,0xc
  401170:	mov    DWORD PTR ds:0x426600,0x1c05
  40117a:	mov    DWORD PTR [ebp-0x8],0xdf2eff5
  401181:	sbb    edx,DWORD PTR ds:0x4266fc
  401187:	mov    DWORD PTR [ebp-0xc],0xdf2ef05
  40118e:	mov    eax,0xdf2eff6
  401193:	and    edx,edx
  401195:	mov    DWORD PTR [ebp-0xc],eax
  401198:	mov    ecx,DWORD PTR ds:0x42667c
  40119e:	add    DWORD PTR ds:0x426648,ecx
  4011a4:	mov    ecx,DWORD PTR [ebp-0xc]
  4011a7:	and    DWORD PTR ds:0x4266bc,ebx
  4011ad:	mov    edx,DWORD PTR ds:0x426024
  4011b3:	push   esi
  4011b4:	sbb    esi,DWORD PTR ds:0x42670c
  4011ba:	mov    esi,0x75683590
  4011bf:	push   edi
  4011c0:	xor    DWORD PTR ds:0x426678,edi
  4011c6:	xor    ecx,esi
  4011c8:	mov    DWORD PTR ds:0x426654,0x16
  4011d2:	cmp    DWORD PTR ds:0x426654,0x0
  4011d9:	je     0x401204
  4011df:	cmp    DWORD PTR ds:0x426654,0x1a
  4011e6:	jne    0x4011ec
  4011ec:	mov    edi,DWORD PTR ds:0x426654
  4011f2:	dec    edi
  4011f3:	mov    DWORD PTR ds:0x426654,edi
  4011f9:	jmp    0x4011d2
  4011fe:	adc    DWORD PTR ds:0x4266b8,ecx
  401204:	mov    edi,0x789ada65
  401209:	sub    ecx,edi
  40120b:	mov    DWORD PTR ds:0x4266fc,0x3f2c
  401215:	cmp    ecx,edx
  401217:	je     0x401312
  40121d:	mov    DWORD PTR [ebp-0xc],0xdf2effa
  401224:	mov    BYTE PTR [ebp-0x1],0xe6
  401228:	sbb    ecx,0x4ae3
  40122e:	mov    DWORD PTR [ebp-0xc],eax
  401231:	mov    eax,DWORD PTR [ebp+0x8]
  401234:	and    DWORD PTR ds:0x4266c0,0x0
  40123e:	jmp    0x401250
  401243:	mov    ecx,DWORD PTR ds:0x4266c0
  401249:	inc    ecx
  40124a:	mov    DWORD PTR ds:0x4266c0,ecx
  401250:	cmp    DWORD PTR ds:0x4266c0,0x1e
  401257:	jae    0x401293
  40125d:	cmp    DWORD PTR ds:0x4266c0,0x5
  401264:	jne    0x40126a
  40126a:	cmp    DWORD PTR ds:0x4266c0,0x4
  401271:	jne    0x401284
  401277:	mov    ecx,DWORD PTR ds:0x4266c0
  40127d:	inc    ecx
  40127e:	mov    DWORD PTR ds:0x4266c0,ecx
  401284:	jmp    0x401243
  401289:	sub    DWORD PTR ds:0x4266f8,0x5bfc
  401293:	mov    eax,DWORD PTR [eax+0x1c8]
  401299:	mov    eax,DWORD PTR [eax]
  40129b:	mov    ecx,DWORD PTR [ebp-0x8]
  40129e:	xor    DWORD PTR ds:0x4266f8,0x255b
  4012a8:	xor    eax,esi
  4012aa:	xor    ecx,esi
  4012ac:	add    eax,0x8765259b
  4012b1:	sub    ecx,edi
  4012b3:	cmp    ecx,eax
  4012b5:	je     0x401312
  4012bb:	mov    eax,ds:0x4261c8
  4012c0:	mov    eax,DWORD PTR [eax+0x194]
  4012c6:	mov    ecx,DWORD PTR [eax]
  4012c8:	mov    eax,DWORD PTR [ecx+0x3c]
  4012cb:	push   DWORD PTR ds:0x42629c
  4012d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4012d5:	push   DWORD PTR ds:0x426024
  4012db:	add    eax,ecx
  4012dd:	mov    ecx,DWORD PTR ds:0x4261c8
  4012e3:	mov    ecx,DWORD PTR [ecx+0x194]
  4012e9:	push   DWORD PTR [ecx]
  4012eb:	call   eax
  4012ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4012f0:	mov    DWORD PTR [ecx],eax
  4012f2:	mov    eax,DWORD PTR [ebp-0x8]
  4012f5:	xor    eax,esi
  4012f7:	sub    eax,edi
  4012f9:	mov    ds:0x426240,eax
  4012fe:	mov    eax,DWORD PTR [ebp-0x8]
  401301:	xor    eax,esi
  401303:	sub    eax,edi
  401305:	mov    ds:0x426248,eax
  40130a:	mov    eax,DWORD PTR [ebp-0xc]
  40130d:	jmp    0x401315
  401312:	mov    eax,DWORD PTR [ebp-0x8]
  401315:	xor    eax,esi
  401317:	sub    eax,edi
  401319:	pop    edi
  40131a:	pop    esi
  40131b:	leave  
  40131c:	ret    0x8
  40131f:	push   ebp
  401320:	mov    ebp,esp
  401322:	sub    esp,0x34
  401325:	or     DWORD PTR ds:0x426644,edx
  40132b:	mov    DWORD PTR [ebp-0x10],0xdf2eff5
  401332:	and    DWORD PTR ds:0x42671c,0x4266d4
  40133c:	push   ebx
  40133d:	sub    eax,DWORD PTR ds:0x426700
  401343:	mov    DWORD PTR [ebp-0x20],0xdf2eff6
  40134a:	mov    eax,ds:0x426600
  40134f:	adc    DWORD PTR ds:0x426700,eax
  401355:	xor    ebx,ebx
  401357:	mov    DWORD PTR ds:0x426648,0x656
  401361:	mov    DWORD PTR ds:0x426394,0x40131f
  40136b:	mov    DWORD PTR [ebp-0x4],ebx
  40136e:	mov    eax,DWORD PTR [ebp-0x20]
  401371:	push   esi
  401372:	mov    esi,0x75683590
  401377:	push   edi
  401378:	xor    eax,esi
  40137a:	mov    edi,0x789ada65
  40137f:	neg    DWORD PTR ds:0x4266bc
  401385:	sub    eax,edi
  401387:	mov    DWORD PTR [ebp-0x18],eax
  40138a:	not    eax
  40138c:	mov    DWORD PTR [ebp-0x28],ebx
  40138f:	mov    eax,DWORD PTR [ebp-0x18]
  401392:	mov    DWORD PTR ds:0x426710,0x7d2d
  40139c:	cmp    ebx,eax
  40139e:	jae    0x40162c
  4013a4:	mov    eax,DWORD PTR [ebp-0x10]
  4013a7:	and    DWORD PTR ds:0x4266f8,0xea2
  4013b1:	xor    eax,esi
  4013b3:	xor    DWORD PTR ds:0x426700,0x58d8
  4013bd:	sub    eax,edi
  4013bf:	mov    DWORD PTR ds:0x426600,0x6eac
  4013c9:	cmp    ebx,eax
  4013cb:	mov    DWORD PTR ds:0x4266f8,0x428d
  4013d5:	jne    0x4015f4
  4013db:	push   DWORD PTR [ebp+0x8]
  4013de:	call   0x401000
  4013e3:	xor    ecx,ecx
  4013e5:	add    ecx,DWORD PTR ds:0x42660c
  4013eb:	and    DWORD PTR ds:0x42667c,ecx
  4013f1:	mov    DWORD PTR [ebp-0x18],eax
  4013f4:	sbb    ecx,eax
  4013f6:	mov    eax,DWORD PTR [ebp-0x10]
  4013f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4013fc:	or     DWORD PTR ds:0x426718,0x426600
  401406:	xor    eax,esi
  401408:	or     DWORD PTR ds:0x426648,0x2e10
  401412:	sub    eax,edi
  401414:	mov    DWORD PTR ds:0x42664c,0x1c6c
  40141e:	cmp    ecx,eax
  401420:	je     0x401767
  401426:	and    DWORD PTR ds:0x426690,0x0
  401430:	jmp    0x401440
  401435:	mov    eax,ds:0x426690
  40143a:	inc    eax
  40143b:	mov    ds:0x426690,eax
  401440:	cmp    DWORD PTR ds:0x426690,0x1e
  401447:	jae    0x401461
  40144d:	cmp    DWORD PTR ds:0x426690,0x25
  401454:	jne    0x40145a
  40145a:	jmp    0x401435
  40145f:	xor    eax,eax
  401461:	mov    eax,ds:0x426490
  401466:	and    DWORD PTR ds:0x4266bc,ecx
  40146c:	mov    eax,DWORD PTR [eax+0x18]
  40146f:	add    DWORD PTR ds:0x42668c,edx
  401475:	mov    DWORD PTR [ebp-0x18],eax
  401478:	adc    eax,DWORD PTR ds:0x426644
  40147e:	mov    eax,ds:0x426490
  401483:	add    DWORD PTR ds:0x4266c4,edx
  401489:	mov    ecx,DWORD PTR [ebp+0x8]
  40148c:	mov    DWORD PTR ds:0x426694,0x6268
  401496:	add    ecx,DWORD PTR [eax+0x20]
  401499:	mov    eax,ds:0x42664c
  40149e:	adc    DWORD PTR ds:0x4265fc,eax
  4014a4:	mov    DWORD PTR [ebp-0x24],ecx
  4014a7:	mov    DWORD PTR ds:0x426644,0x1f
  4014b1:	cmp    DWORD PTR ds:0x426644,0x0
  4014b8:	je     0x4014e3
  4014be:	cmp    DWORD PTR ds:0x426644,0x2e
  4014c5:	jne    0x4014cb
  4014cb:	mov    ecx,DWORD PTR ds:0x426644
  4014d1:	dec    ecx
  4014d2:	mov    DWORD PTR ds:0x426644,ecx
  4014d8:	jmp    0x4014b1
  4014dd:	or     DWORD PTR ds:0x4266c4,edi
  4014e3:	mov    eax,ds:0x426490
  4014e8:	mov    DWORD PTR ds:0x42664c,0x1c
  4014f2:	cmp    DWORD PTR ds:0x42664c,0x0
  4014f9:	je     0x401576
  4014ff:	cmp    DWORD PTR ds:0x42664c,0x2a
  401506:	jne    0x40150c
  40150c:	xor    ecx,ecx
  40150e:	xor    ecx,DWORD PTR ds:0x42664c
  401514:	dec    ecx
  401515:	mov    DWORD PTR ds:0x42664c,ecx
  40151b:	jmp    0x4014f2
  401520:	mov    DWORD PTR ds:0x426684,0x1f
  40152a:	cmp    DWORD PTR ds:0x426684,0x0
  401531:	je     0x401576
  401537:	cmp    DWORD PTR ds:0x426684,0xa
  40153e:	jne    0x401544
  401544:	cmp    DWORD PTR ds:0x426684,0xb
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426684
  401557:	dec    ecx
  401558:	mov    DWORD PTR ds:0x426684,ecx
  40155e:	mov    ecx,DWORD PTR ds:0x426684
  401564:	dec    ecx
  401565:	mov    DWORD PTR ds:0x426684,ecx
  40156b:	jmp    0x40152a
  401570:	and    DWORD PTR ds:0x42671c,ecx
  401576:	mov    ecx,DWORD PTR [ebp+0x8]
  401579:	adc    DWORD PTR ds:0x4265fc,0x426690
  401583:	add    ecx,DWORD PTR [eax+0x24]
  401586:	movzx  eax,WORD PTR ds:0x426678
  40158d:	add    DWORD PTR ds:0x426648,eax
  401593:	mov    DWORD PTR [ebp-0x2c],ecx
  401596:	adc    DWORD PTR ds:0x4266cc,ecx
  40159c:	mov    eax,ds:0x426490
  4015a1:	and    DWORD PTR ds:0x426684,0x0
  4015ab:	mov    ecx,DWORD PTR ds:0x426684
  4015b1:	inc    ecx
  4015b2:	mov    DWORD PTR ds:0x426684,ecx
  4015b8:	cmp    DWORD PTR ds:0x426684,0x1d
  4015bf:	jne    0x4015c5
  4015c5:	cmp    DWORD PTR ds:0x426684,0x1a
  4015cc:	jb     0x4015ab
  4015d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4015d5:	and    DWORD PTR ds:0x426684,0x5d25
  4015df:	add    ecx,DWORD PTR [eax+0x1c]
  4015e2:	mov    DWORD PTR ds:0x42663c,0x5d2f
  4015ec:	mov    DWORD PTR [ebp-0x30],ecx
  4015ef:	jmp    0x401694
  4015f4:	mov    eax,DWORD PTR [ebp-0x24]
  4015f7:	mov    ecx,DWORD PTR ds:0x426718
  4015fd:	xor    ecx,DWORD PTR ds:0x426704
  401603:	mov    DWORD PTR ds:0x426718,ecx
  401609:	mov    ecx,DWORD PTR [ebp+0x8]
  40160c:	add    ecx,DWORD PTR [eax+ebx*4]
  40160f:	not    eax
  401611:	mov    DWORD PTR [ebp-0x1c],ecx
  401614:	mov    eax,DWORD PTR [ebp-0x1c]
  401617:	mov    DWORD PTR ds:0x426684,0x30bf
  401621:	je     0x401694
  401627:	jmp    0x40167b
  40162c:	mov    eax,DWORD PTR [ebp-0x10]
  40162f:	mov    ecx,DWORD PTR [ebp-0x4]
  401632:	sbb    DWORD PTR ds:0x4266c0,0x42664c
  40163c:	xor    eax,esi
  40163e:	and    DWORD PTR ds:0x426704,0x426648
  401648:	sub    eax,edi
  40164a:	mov    DWORD PTR ds:0x426648,0x309d
  401654:	cmp    ecx,eax
  401656:	je     0x401767
  40165c:	mov    eax,DWORD PTR [ebp-0x28]
  40165f:	add    DWORD PTR ds:0x426608,0x5f75
  401669:	test   eax,eax
  40166b:	mov    DWORD PTR ds:0x4266fc,0x46
  401675:	je     0x401783
  40167b:	lea    eax,[ebp-0x4]
  40167e:	push   eax
  40167f:	push   DWORD PTR [ebp-0x1c]
  401682:	push   DWORD PTR [ebp+0xc]
  401685:	adc    DWORD PTR ds:0x426654,0x488a
  40168f:	call   0x40311a
  401694:	mov    DWORD PTR ds:0x426678,0x1b
  40169e:	cmp    DWORD PTR ds:0x426678,0x0
  4016a5:	je     0x4016ea
  4016ab:	cmp    DWORD PTR ds:0x426678,0x4
  4016b2:	jne    0x4016b8
  4016b8:	cmp    DWORD PTR ds:0x426678,0x5
  4016bf:	jne    0x4016d2
  4016c5:	mov    ecx,DWORD PTR ds:0x426678
  4016cb:	dec    ecx
  4016cc:	mov    DWORD PTR ds:0x426678,ecx
  4016d2:	mov    ecx,DWORD PTR ds:0x426678
  4016d8:	dec    ecx
  4016d9:	mov    DWORD PTR ds:0x426678,ecx
  4016df:	jmp    0x40169e
  4016e4:	adc    DWORD PTR ds:0x426640,ebx
  4016ea:	mov    eax,DWORD PTR [ebp-0x10]
  4016ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4016f0:	xor    DWORD PTR ds:0x4266f8,0x426678
  4016fa:	xor    eax,esi
  4016fc:	sub    DWORD PTR ds:0x426710,0x426608
  401706:	sub    eax,edi
  401708:	mov    DWORD PTR ds:0x426694,0x2aff
  401712:	cmp    ecx,eax
  401714:	mov    DWORD PTR ds:0x426718,0x3091
  40171e:	je     0x401757
  401724:	mov    eax,DWORD PTR [ebp-0x2c]
  401727:	movzx  eax,WORD PTR [eax+ebx*2]
  40172b:	mov    DWORD PTR ds:0x426640,0x1e0b
  401735:	mov    ecx,DWORD PTR [ebp-0x30]
  401738:	mov    DWORD PTR ds:0x4266d0,0x6428
  401742:	mov    eax,DWORD PTR [ecx+eax*4]
  401745:	mov    DWORD PTR [ebp-0x34],eax
  401748:	mov    DWORD PTR ds:0x4266f8,0x533b
  401752:	jmp    0x40162c
  401757:	mov    DWORD PTR ds:0x426710,0x162f
  401761:	inc    ebx
  401762:	jmp    0x40138f
  401767:	xor    eax,DWORD PTR ds:0x42664c
  40176d:	mov    eax,DWORD PTR [ebp-0x10]
  401770:	xor    eax,esi
  401772:	mov    DWORD PTR ds:0x4266d0,0x560a
  40177c:	sub    eax,edi
  40177e:	jmp    0x4018cd
  401783:	mov    eax,DWORD PTR [ebp-0x34]
  401786:	not    DWORD PTR ds:0x4265f8
  40178c:	add    eax,DWORD PTR [ebp+0x8]
  40178f:	or     DWORD PTR ds:0x426720,0x2bb
  401799:	mov    DWORD PTR [ebp-0xc],eax
  40179c:	mov    eax,DWORD PTR [ebp+0x14]
  40179f:	test   eax,eax
  4017a1:	je     0x401838
  4017a7:	mov    DWORD PTR [ebp-0x14],0x0
  4017ae:	push   0x3
  4017b0:	xor    edx,edx
  4017b2:	pop    edx
  4017b3:	add    edx,0x8
  4017b6:	push   edx
  4017b7:	pop    ecx
  4017b8:	push   0x6
  4017ba:	dec    ecx
  4017bb:	pop    ebx
  4017bc:	dec    ebx
  4017bd:	xchg   ebx,ecx
  4017bf:	sub    ebx,ecx
  4017c1:	xchg   ebx,ecx
  4017c3:	dec    ecx
  4017c4:	mov    eax,DWORD PTR [ebp+0x14]
  4017c7:	imul   eax,ecx
  4017ca:	sub    esp,eax
  4017cc:	mov    DWORD PTR [ebp-0x14],esp
  4017cf:	mov    eax,DWORD PTR [ebp-0x10]
  4017d2:	xor    eax,esi
  4017d4:	sub    eax,edi
  4017d6:	mov    DWORD PTR [ebp-0x18],eax
  4017d9:	mov    eax,DWORD PTR [ebp-0x18]
  4017dc:	mov    ecx,DWORD PTR [ebp+0x14]
  4017df:	cmp    eax,ecx
  4017e1:	je     0x401838
  4017e7:	lea    ebx,[ebp+0x14]
  4017ea:	mov    eax,DWORD PTR [ebp-0x18]
  4017ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4017f0:	add    ebx,0x4
  4017f3:	mov    edx,DWORD PTR [ebx]
  4017f5:	mov    DWORD PTR [ecx+eax*4],edx
  4017f8:	mov    eax,DWORD PTR [ebp-0x20]
  4017fb:	mov    ecx,DWORD PTR [ebp-0x18]
  4017fe:	xor    eax,esi
  401800:	lea    eax,[eax+ecx*1-0x789ada65]
  401807:	push   0x426398
  40180c:	mov    DWORD PTR [ebp-0x18],eax
  40180f:	call   DWORD PTR ds:0x407004
  401815:	cmp    eax,0x9aeae
  40181a:	jle    0x40182a
	...
  401828:	add    BYTE PTR [eax],al
  40182a:	mov    eax,DWORD PTR [ebp-0x18]
  40182d:	mov    ecx,DWORD PTR [ebp+0x14]
  401830:	cmp    eax,ecx
  401832:	jne    0x4017ea
  401838:	mov    eax,DWORD PTR [ebp-0x10]
  40183b:	xor    eax,esi
  40183d:	sub    eax,edi
  40183f:	push   0x4263a0
  401844:	mov    DWORD PTR [ebp-0x8],eax
  401847:	call   DWORD PTR ds:0x407004
  40184d:	cmp    eax,0x9aeae
  401852:	jle    0x401862
	...
  401860:	add    BYTE PTR [eax],al
  401862:	mov    ebx,0x3860
  401867:	add    ebx,0x6e13
  40186d:	xchg   ebx,esi
  40186f:	xor    ebx,ebx
  401871:	push   esi
  401872:	mov    esi,ebx
  401874:	pop    ebx
  401875:	mov    edx,esi
  401877:	add    ebx,0x6352
  40187d:	lea    eax,[ebp-0xc]
  401880:	add    edx,eax
  401882:	add    edx,0x5
  401885:	push   edx
  401886:	inc    esi
  401887:	pop    ecx
  401888:	dec    ecx
  401889:	xchg   ecx,eax
  40188a:	dec    eax
  40188b:	xchg   ecx,eax
  40188c:	dec    ecx
  40188d:	xchg   ecx,edx
  40188f:	dec    edx
  401890:	push   edx
  401891:	mov    edx,ebx
  401893:	pop    ebx
  401894:	dec    ebx
  401895:	call   DWORD PTR [ebx]
  401897:	cmp    DWORD PTR [ebp+0x10],esi
  40189a:	je     0x4018b9
  4018a0:	xchg   edx,eax
  4018a1:	push   0xb
  4018a3:	pop    ecx
  4018a4:	push   0x4
  4018a6:	pop    ebx
  4018a7:	inc    ebx
  4018a8:	xchg   ebx,ecx
  4018aa:	sub    ebx,ecx
  4018ac:	xchg   ebx,ecx
  4018ae:	dec    ecx
  4018af:	dec    ecx
  4018b0:	mov    eax,DWORD PTR [ebp+0x14]
  4018b3:	imul   eax,ecx
  4018b6:	add    esp,eax
  4018b8:	xchg   edx,eax
  4018b9:	push   eax
  4018ba:	xor    ebx,ebx
  4018bc:	mov    edx,esp
  4018be:	dec    edx
  4018bf:	inc    ebx
  4018c0:	add    ebx,DWORD PTR [edx+ebx*1]
  4018c3:	dec    ebx
  4018c4:	xor    edx,edx
  4018c6:	add    DWORD PTR [ebp-0x8],ebx
  4018c9:	pop    ebx
  4018ca:	mov    eax,DWORD PTR [ebp-0x8]
  4018cd:	pop    edi
  4018ce:	pop    esi
  4018cf:	pop    ebx
  4018d0:	leave  
  4018d1:	ret    
  4018d2:	push   ebp
  4018d3:	mov    ebp,esp
  4018d5:	mov    eax,ds:0x4261c8
  4018da:	xor    DWORD PTR ds:0x426680,0x426608
  4018e4:	mov    eax,DWORD PTR [eax+0x198]
  4018ea:	and    DWORD PTR [eax],0x0
  4018ed:	not    eax
  4018ef:	mov    eax,ds:0x4261c8
  4018f4:	adc    DWORD PTR ds:0x426690,0x426604
  4018fe:	mov    eax,DWORD PTR [eax+0x198]
  401904:	sub    esp,0x4c
  401907:	mov    DWORD PTR ds:0x4266f8,0x70f5
  401911:	cmp    DWORD PTR [eax],0x0
  401914:	mov    DWORD PTR ds:0x426688,0x6e00
  40191e:	jne    0x40225c
  401924:	mov    DWORD PTR [ebp-0x18],0xdf2eff5
  40192b:	mov    DWORD PTR [ebp-0x30],0xdf2eff9
  401932:	lea    eax,[ebp-0x28]
  401935:	and    DWORD PTR ds:0x426710,0x0
  40193f:	jmp    0x401953
  401944:	xor    edx,edx
  401946:	or     edx,DWORD PTR ds:0x426710
  40194c:	inc    edx
  40194d:	mov    DWORD PTR ds:0x426710,edx
  401953:	cmp    DWORD PTR ds:0x426710,0x17
  40195a:	jae    0x401992
  401960:	cmp    DWORD PTR ds:0x426710,0xc
  401967:	jne    0x40196d
  40196d:	cmp    DWORD PTR ds:0x426710,0xb
  401974:	jne    0x401987
  40197a:	mov    edx,DWORD PTR ds:0x426710
  401980:	inc    edx
  401981:	mov    DWORD PTR ds:0x426710,edx
  401987:	jmp    0x401944
  40198c:	adc    DWORD PTR ds:0x426608,ecx
  401992:	mov    DWORD PTR [ebp-0x20],eax
  401995:	xor    DWORD PTR ds:0x4266bc,edx
  40199b:	lea    eax,[ebp-0x1c]
  40199e:	push   edi
  40199f:	mov    DWORD PTR [ebp-0x34],eax
  4019a2:	lea    eax,[ebp-0x10]
  4019a5:	and    DWORD PTR ds:0x426638,0x0
  4019af:	jmp    0x4019c1
  4019b4:	mov    edx,DWORD PTR ds:0x426638
  4019ba:	inc    edx
  4019bb:	mov    DWORD PTR ds:0x426638,edx
  4019c1:	cmp    DWORD PTR ds:0x426638,0x18
  4019c8:	jae    0x401a0c
  4019ce:	cmp    DWORD PTR ds:0x426638,0x8
  4019d5:	jne    0x4019db
  4019db:	cmp    DWORD PTR ds:0x426638,0x7
  4019e2:	jne    0x4019f5
  4019e8:	mov    edx,DWORD PTR ds:0x426638
  4019ee:	inc    edx
  4019ef:	mov    DWORD PTR ds:0x426638,edx
  4019f5:	jmp    0x4019b4
  4019fa:	mov    edi,DWORD PTR ds:0x42668c
  401a00:	sbb    edi,DWORD PTR ds:0x426700
  401a06:	mov    DWORD PTR ds:0x42668c,edi
  401a0c:	push   ebx
  401a0d:	mov    DWORD PTR [ebp-0x2c],eax
  401a10:	sub    edi,edx
  401a12:	mov    eax,0x75683590
  401a17:	adc    DWORD PTR ds:0x4266bc,ecx
  401a1d:	mov    ecx,0x789ada65
  401a22:	adc    DWORD PTR ds:0x426694,edx
  401a28:	mov    edi,0xabb4479
  401a2d:	add    DWORD PTR ds:0x4266c8,0x426648
  401a37:	push   esi
  401a38:	mov    DWORD PTR [ebp-0xc],0x1000
  401a3f:	mov    edx,DWORD PTR [ebp-0x18]
  401a42:	and    DWORD PTR ds:0x426704,0x0
  401a4c:	xor    esi,esi
  401a4e:	add    esi,DWORD PTR ds:0x426704
  401a54:	inc    esi
  401a55:	mov    DWORD PTR ds:0x426704,esi
  401a5b:	cmp    DWORD PTR ds:0x426704,0xe
  401a62:	jne    0x401a68
  401a68:	cmp    DWORD PTR ds:0x426704,0xd
  401a6f:	jne    0x401a82
  401a75:	mov    esi,DWORD PTR ds:0x426704
  401a7b:	inc    esi
  401a7c:	mov    DWORD PTR ds:0x426704,esi
  401a82:	cmp    DWORD PTR ds:0x426704,0x18
  401a89:	jb     0x401a4c
  401a8f:	mov    DWORD PTR ds:0x426680,0x5ca6
  401a99:	xor    edx,eax
  401a9b:	mov    DWORD PTR ds:0x426704,0x19
  401aa5:	cmp    DWORD PTR ds:0x426704,0x0
  401aac:	je     0x401ad3
  401ab2:	cmp    DWORD PTR ds:0x426704,0x21
  401ab9:	jne    0x401abf
  401abf:	xor    esi,esi
  401ac1:	xor    esi,DWORD PTR ds:0x426704
  401ac7:	dec    esi
  401ac8:	mov    DWORD PTR ds:0x426704,esi
  401ace:	jmp    0x401aa5
  401ad3:	sub    edx,ecx
  401ad5:	inc    esi
  401ad6:	mov    DWORD PTR [ebp-0x1c],edx
  401ad9:	and    DWORD PTR ds:0x42670c,0x654
  401ae3:	mov    edx,DWORD PTR [ebp-0x20]
  401ae6:	and    DWORD PTR ds:0x426720,0x0
  401af0:	jmp    0x401b04
  401af5:	xor    esi,esi
  401af7:	add    esi,DWORD PTR ds:0x426720
  401afd:	inc    esi
  401afe:	mov    DWORD PTR ds:0x426720,esi
  401b04:	cmp    DWORD PTR ds:0x426720,0x1c
  401b0b:	jae    0x401b73
  401b11:	cmp    DWORD PTR ds:0x426720,0xc
  401b18:	jne    0x401b1e
  401b1e:	cmp    DWORD PTR ds:0x426720,0xb
  401b25:	jne    0x401b38
  401b2b:	mov    esi,DWORD PTR ds:0x426720
  401b31:	inc    esi
  401b32:	mov    DWORD PTR ds:0x426720,esi
  401b38:	jmp    0x401af5
  401b3d:	mov    DWORD PTR ds:0x42668c,0x13
  401b47:	cmp    DWORD PTR ds:0x42668c,0x0
  401b4e:	je     0x401b73
  401b54:	cmp    DWORD PTR ds:0x42668c,0x1f
  401b5b:	jne    0x401b61
  401b61:	mov    esi,DWORD PTR ds:0x42668c
  401b67:	dec    esi
  401b68:	mov    DWORD PTR ds:0x42668c,esi
  401b6e:	jmp    0x401b47
  401b73:	mov    DWORD PTR [edx],0xdf3eff5
  401b79:	mov    edx,DWORD PTR [ebp-0x20]
  401b7c:	mov    DWORD PTR ds:0x426688,0x1c
  401b86:	cmp    DWORD PTR ds:0x426688,0x0
  401b8d:	je     0x401bd2
  401b93:	cmp    DWORD PTR ds:0x426688,0x7
  401b9a:	jne    0x401ba0
  401ba0:	cmp    DWORD PTR ds:0x426688,0x8
  401ba7:	jne    0x401bba
  401bad:	mov    esi,DWORD PTR ds:0x426688
  401bb3:	dec    esi
  401bb4:	mov    DWORD PTR ds:0x426688,esi
  401bba:	mov    esi,DWORD PTR ds:0x426688
  401bc0:	dec    esi
  401bc1:	mov    DWORD PTR ds:0x426688,esi
  401bc7:	jmp    0x401b86
  401bcc:	xor    DWORD PTR ds:0x426604,ecx
  401bd2:	mov    edx,DWORD PTR [edx]
  401bd4:	inc    esi
  401bd5:	xor    edx,eax
  401bd7:	sub    edx,ecx
  401bd9:	sbb    DWORD PTR ds:0x426650,0x44f
  401be3:	mov    DWORD PTR [ebp-0x28],edx
  401be6:	mov    edx,DWORD PTR ds:0x4266dc
  401bec:	mov    edx,DWORD PTR [edx]
  401bee:	and    DWORD PTR ds:0x426678,edx
  401bf4:	mov    edx,DWORD PTR ds:0x426298
  401bfa:	neg    esi
  401bfc:	mov    edx,DWORD PTR [edx]
  401bfe:	mov    DWORD PTR ds:0x426610,0x19
  401c08:	cmp    DWORD PTR ds:0x426610,0x0
  401c0f:	je     0x401c3c
  401c15:	cmp    DWORD PTR ds:0x426610,0x27
  401c1c:	jne    0x401c22
  401c22:	xor    esi,esi
  401c24:	add    esi,DWORD PTR ds:0x426610
  401c2a:	dec    esi
  401c2b:	mov    DWORD PTR ds:0x426610,esi
  401c31:	jmp    0x401c08
  401c36:	add    DWORD PTR ds:0x426684,edi
  401c3c:	mov    edx,DWORD PTR [edx]
  401c3e:	movzx  esi,WORD PTR ds:0x426708
  401c45:	or     esi,DWORD PTR ds:0x426648
  401c4b:	mov    DWORD PTR ds:0x426708,esi
  401c51:	mov    esi,DWORD PTR [ebp-0x34]
  401c54:	add    edx,DWORD PTR [esi]
  401c56:	mov    DWORD PTR [ebp-0x14],edx
  401c59:	sub    esi,DWORD PTR ds:0x426704
  401c5f:	mov    DWORD PTR [ebp-0x8],0xdf2eff6
  401c66:	xor    DWORD PTR ds:0x42668c,0x1845
  401c70:	mov    DWORD PTR [ebp-0x8],0x1
  401c77:	sub    DWORD PTR ds:0x426608,ecx
  401c7d:	mov    edx,0x549c
  401c82:	mov    WORD PTR [ebp-0x4],dx
  401c86:	mov    esi,DWORD PTR [ebp-0x28]
  401c89:	sbb    DWORD PTR ds:0x426684,0x925
  401c93:	mov    edx,DWORD PTR [ebp-0x14]
  401c96:	neg    DWORD PTR ds:0x4266c0
  401c9c:	mov    edx,DWORD PTR [edx]
  401c9e:	add    DWORD PTR ds:0x42663c,0x426700
  401ca8:	dec    esi
  401ca9:	add    DWORD PTR ds:0x426710,0x5ef2
  401cb3:	not    esi
  401cb5:	adc    DWORD PTR ds:0x426600,0x1d5
  401cbf:	and    edx,esi
  401cc1:	mov    esi,DWORD PTR [ebp-0x2c]
  401cc4:	mov    DWORD PTR [esi],edx
  401cc6:	mov    edx,DWORD PTR [ebp-0x10]
  401cc9:	mov    DWORD PTR [ebp-0x4],edx
  401ccc:	and    DWORD PTR ds:0x426720,0x0
  401cd6:	jmp    0x401ce8
  401cdb:	mov    edx,DWORD PTR ds:0x426720
  401ce1:	inc    edx
  401ce2:	mov    DWORD PTR ds:0x426720,edx
  401ce8:	cmp    DWORD PTR ds:0x426720,0x12
  401cef:	jae    0x401d5c
  401cf5:	cmp    DWORD PTR ds:0x426720,0xc
  401cfc:	jne    0x401d02
  401d02:	cmp    DWORD PTR ds:0x426720,0xb
  401d09:	jne    0x401d1c
  401d0f:	mov    edx,DWORD PTR ds:0x426720
  401d15:	inc    edx
  401d16:	mov    DWORD PTR ds:0x426720,edx
  401d1c:	jmp    0x401cdb
  401d21:	and    DWORD PTR ds:0x426684,0x0
  401d2b:	jmp    0x401d3d
  401d30:	mov    esi,DWORD PTR ds:0x426684
  401d36:	inc    esi
  401d37:	mov    DWORD PTR ds:0x426684,esi
  401d3d:	cmp    DWORD PTR ds:0x426684,0x19
  401d44:	jae    0x401d5c
  401d4a:	cmp    DWORD PTR ds:0x426684,0x1f
  401d51:	jne    0x401d57
  401d57:	jmp    0x401d30
  401d5c:	mov    esi,DWORD PTR [ebp-0x4]
  401d5f:	movzx  esi,WORD PTR [esi]
  401d62:	mov    edx,0x26b
  401d67:	sbb    DWORD PTR ds:0x426718,0x6fc7
  401d71:	sub    si,dx
  401d74:	or     DWORD PTR ds:0x426700,0x1e28
  401d7e:	xor    esi,0x37e
  401d84:	movzx  edx,WORD PTR ds:0x426700
  401d8b:	add    edx,DWORD PTR ds:0x42664c
  401d91:	mov    DWORD PTR ds:0x426700,edx
  401d97:	mov    WORD PTR [ebp-0x4],si
  401d9b:	or     esi,DWORD PTR ds:0x42663c
  401da1:	mov    DWORD PTR [ebp-0x14],0x0
  401da8:	not    esi
  401daa:	mov    DWORD PTR [ebp-0x14],0xdf2effa
  401db1:	mov    edx,DWORD PTR ds:0x4266cc
  401db7:	or     DWORD PTR ds:0x426680,edx
  401dbd:	mov    edx,DWORD PTR [ebp-0x18]
  401dc0:	mov    DWORD PTR ds:0x426650,0x17
  401dca:	cmp    DWORD PTR ds:0x426650,0x0
  401dd1:	je     0x401dfc
  401dd7:	cmp    DWORD PTR ds:0x426650,0x25
  401dde:	jne    0x401de4
  401de4:	mov    esi,DWORD PTR ds:0x426650
  401dea:	dec    esi
  401deb:	mov    DWORD PTR ds:0x426650,esi
  401df1:	jmp    0x401dca
  401df6:	or     DWORD PTR ds:0x42667c,ecx
  401dfc:	mov    esi,DWORD PTR [ebp-0x14]
  401dff:	adc    DWORD PTR ds:0x426710,0x4266f8
  401e09:	xor    edx,eax
  401e0b:	dec    DWORD PTR ds:0x426614
  401e11:	xor    esi,eax
  401e13:	sub    edx,ecx
  401e15:	add    DWORD PTR ds:0x42671c,0x4266cc
  401e1f:	sub    esi,ecx
  401e21:	mov    DWORD PTR ds:0x426648,0x5650
  401e2b:	cmp    edx,esi
  401e2d:	mov    DWORD PTR ds:0x4266fc,0xe6e
  401e37:	jae    0x40200b
  401e3d:	adc    DWORD PTR ds:0x426678,edx
  401e43:	lea    esi,[edx+0x789ada65]
  401e49:	add    ebx,edi
  401e4b:	mov    DWORD PTR [ebp-0x8],esi
  401e4e:	xor    edi,0x1d39
  401e54:	mov    edi,DWORD PTR [ebp-0x8]
  401e57:	xor    edi,eax
  401e59:	or     ebx,0x4cba
  401e5f:	lea    esi,[ebp+edx*4-0x4c]
  401e63:	mov    ebx,0x9b82837
  401e68:	sub    ebx,edi
  401e6a:	mov    DWORD PTR ds:0x426610,0x19
  401e74:	cmp    DWORD PTR ds:0x426610,0x0
  401e7b:	je     0x401ec0
  401e81:	cmp    DWORD PTR ds:0x426610,0xc
  401e88:	jne    0x401e8e
  401e8e:	cmp    DWORD PTR ds:0x426610,0xd
  401e95:	jne    0x401ea8
  401e9b:	mov    edi,DWORD PTR ds:0x426610
  401ea1:	dec    edi
  401ea2:	mov    DWORD PTR ds:0x426610,edi
  401ea8:	mov    edi,DWORD PTR ds:0x426610
  401eae:	dec    edi
  401eaf:	mov    DWORD PTR ds:0x426610,edi
  401eb5:	jmp    0x401e74
  401eba:	add    edi,DWORD PTR ds:0x426610
  401ec0:	mov    edi,DWORD PTR [esi]
  401ec2:	add    ebx,edi
  401ec4:	mov    DWORD PTR ds:0x42670c,ebx
  401eca:	mov    DWORD PTR [esi],ebx
  401ecc:	mov    DWORD PTR ds:0x4266c8,edx
  401ed2:	mov    edi,DWORD PTR [esi]
  401ed4:	mov    DWORD PTR ds:0x426714,0x7533
  401ede:	cmp    edi,0xee852518
  401ee4:	mov    DWORD PTR ds:0x4266fc,0x1023
  401eee:	jbe    0x401eff
  401ef4:	add    DWORD PTR [esi],0x94a7459
  401efa:	jmp    0x401f0f
  401eff:	xor    DWORD PTR ds:0x4265f8,0x4266d4
  401f09:	add    DWORD PTR [esi],0xf758cba7
  401f0f:	mov    esi,DWORD PTR [ebp-0x14]
  401f12:	or     DWORD PTR ds:0x426638,0x42663c
  401f1c:	xor    esi,eax
  401f1e:	sub    DWORD PTR ds:0x426720,0x426608
  401f28:	inc    edx
  401f29:	inc    DWORD PTR [ebp-0x8]
  401f2c:	xor    DWORD PTR ds:0x4266fc,0x5b6c
  401f36:	sub    esi,ecx
  401f38:	mov    DWORD PTR ds:0x42670c,0x64d6
  401f42:	cmp    edx,esi
  401f44:	mov    DWORD PTR ds:0x426680,0x390c
  401f4e:	jb     0x401e4e
  401f54:	mov    edi,0xabb4479
  401f59:	jmp    0x40200b
  401f5e:	and    esi,edx
  401f60:	mov    edx,DWORD PTR [ebp-0x10]
  401f63:	and    DWORD PTR ds:0x426700,0x7ed1
  401f6d:	mov    esi,DWORD PTR [ebp-0x20]
  401f70:	sub    edx,DWORD PTR [esi]
  401f72:	mov    esi,DWORD PTR [ebp-0x2c]
  401f75:	or     DWORD PTR ds:0x42671c,0x3f60
  401f7f:	mov    DWORD PTR [esi],edx
  401f81:	mov    edx,DWORD PTR [ebp-0x10]
  401f84:	mov    DWORD PTR [ebp-0x4],edx
  401f87:	mov    esi,DWORD PTR [ebp-0x18]
  401f8a:	mov    edx,DWORD PTR [ebp-0x14]
  401f8d:	xor    esi,eax
  401f8f:	xor    edx,eax
  401f91:	sub    esi,ecx
  401f93:	sub    edx,ecx
  401f95:	cmp    esi,edx
  401f97:	jae    0x401ff3
  401f9d:	lea    edx,[esi+0x789ada65]
  401fa3:	mov    DWORD PTR [ebp-0x8],edx
  401fa6:	mov    edi,DWORD PTR [ebp-0x8]
  401fa9:	xor    edi,eax
  401fab:	lea    edx,[ebp+esi*4-0x4c]
  401faf:	mov    ebx,0x9b82837
  401fb4:	sub    ebx,edi
  401fb6:	mov    edi,DWORD PTR [edx]
  401fb8:	add    ebx,edi
  401fba:	mov    DWORD PTR [edx],ebx
  401fbc:	mov    edi,DWORD PTR [edx]
  401fbe:	cmp    edi,0xee852518
  401fc4:	jbe    0x401fd5
  401fca:	add    DWORD PTR [edx],0x94a7459
  401fd0:	jmp    0x401fdb
  401fd5:	add    DWORD PTR [edx],0xf758cba7
  401fdb:	mov    edx,DWORD PTR [ebp-0x14]
  401fde:	xor    edx,eax
  401fe0:	inc    esi
  401fe1:	inc    DWORD PTR [ebp-0x8]
  401fe4:	sub    edx,ecx
  401fe6:	cmp    esi,edx
  401fe8:	jb     0x401fa6
  401fee:	mov    edi,0xabb4479
  401ff3:	mov    esi,DWORD PTR [ebp-0x4]
  401ff6:	movzx  esi,WORD PTR [esi]
  401ff9:	mov    edx,0x26b
  401ffe:	sub    si,dx
  402001:	xor    esi,0x37e
  402007:	mov    WORD PTR [ebp-0x4],si
  40200b:	mov    dx,WORD PTR [ebp-0x4]
  40200f:	mov    esi,0x549c
  402014:	cmp    dx,si
  402017:	jne    0x401f5e
  40201d:	mov    edx,DWORD PTR [ebp-0xc]
  402020:	add    DWORD PTR [ebp-0x10],edx
  402023:	dec    DWORD PTR [ebp-0xc]
  402026:	cmp    DWORD PTR [ebp-0xc],0x1
  40202a:	jae    0x401a3f
  402030:	dec    DWORD PTR [ebp-0x10]
  402033:	mov    edx,DWORD PTR [ebp-0x10]
  402036:	mov    esi,DWORD PTR ds:0x4261c8
  40203c:	mov    esi,DWORD PTR [esi+0x198]
  402042:	mov    DWORD PTR [esi],edx
  402044:	mov    DWORD PTR [ebp-0x14],0xdf2eff5
  40204b:	mov    edx,DWORD PTR [ebp-0x14]
  40204e:	xor    edx,eax
  402050:	sub    edx,ecx
  402052:	mov    DWORD PTR [ebp-0x14],edx
  402055:	mov    edx,DWORD PTR ds:0x4261c8
  40205b:	mov    esi,DWORD PTR [edx+0x198]
  402061:	mov    edx,DWORD PTR [edx+0x198]
  402067:	mov    edx,DWORD PTR [edx]
  402069:	mov    ebx,DWORD PTR [ebp-0x14]
  40206c:	mov    esi,DWORD PTR [esi]
  40206e:	mov    esi,DWORD PTR [esi+0x3c]
  402071:	lea    edx,[edx+ebx*8+0x78]
  402075:	mov    edx,DWORD PTR [edx+esi*1]
  402078:	mov    DWORD PTR [ebp-0x14],edx
  40207b:	mov    edx,DWORD PTR [ebp-0x18]
  40207e:	mov    esi,DWORD PTR [ebp-0x14]
  402081:	xor    edx,eax
  402083:	sub    edx,ecx
  402085:	cmp    esi,edx
  402087:	je     0x402245
  40208d:	mov    edx,DWORD PTR ds:0x4261c8
  402093:	mov    edx,DWORD PTR [edx+0x198]
  402099:	mov    esi,DWORD PTR [ebp-0x14]
  40209c:	add    esi,DWORD PTR [edx]
  40209e:	mov    DWORD PTR [ebp-0x14],esi
  4020a1:	mov    BYTE PTR [ebp-0x1],0x0
  4020a5:	mov    edx,DWORD PTR [ebp-0x18]
  4020a8:	mov    esi,DWORD PTR [ebp-0x14]
  4020ab:	xor    edx,eax
  4020ad:	sub    edx,ecx
  4020af:	cmp    esi,edx
  4020b1:	je     0x4020fd
  4020b7:	mov    edx,DWORD PTR [ebp-0x14]
  4020ba:	mov    esi,DWORD PTR [edx+0xc]
  4020bd:	mov    edx,DWORD PTR [ebp-0x18]
  4020c0:	xor    edx,eax
  4020c2:	sub    edx,ecx
  4020c4:	jmp    0x4020ed
  4020c9:	mov    ebx,DWORD PTR [ebp-0x18]
  4020cc:	xor    ebx,eax
  4020ce:	sub    ebx,ecx
  4020d0:	cmp    edx,ebx
  4020d2:	jne    0x4020e9
  4020d8:	mov    ebx,DWORD PTR ds:0x4261c8
  4020de:	mov    ebx,DWORD PTR [ebx+0x198]
  4020e4:	mov    ebx,DWORD PTR [ebx]
  4020e6:	mov    DWORD PTR [ebp-0x24],ebx
  4020e9:	inc    DWORD PTR [ebp-0x24]
  4020ec:	inc    edx
  4020ed:	cmp    edx,esi
  4020ef:	jb     0x4020c9
  4020f5:	mov    edx,DWORD PTR [ebp-0x24]
  4020f8:	mov    dl,BYTE PTR [edx]
  4020fa:	mov    BYTE PTR [ebp-0x1],dl
  4020fd:	mov    dl,BYTE PTR [ebp-0x1]
  402100:	add    dl,0x62
  402103:	xor    dl,0xad
  402106:	je     0x402259
  40210c:	mov    esi,DWORD PTR [ebp-0x14]
  40210f:	mov    edx,DWORD PTR ds:0x4261c8
  402115:	mov    edx,DWORD PTR [edx+0x198]
  40211b:	mov    edx,DWORD PTR [edx]
  40211d:	mov    esi,DWORD PTR [esi+0xc]
  402120:	mov    dl,BYTE PTR [esi+edx*1]
  402123:	mov    BYTE PTR [ebp-0x1],dl
  402126:	mov    DWORD PTR [ebp-0xc],0x858a267c
  40212d:	mov    DWORD PTR [ebp-0x14],0xdf2ef25
  402134:	mov    edx,DWORD PTR [ebp-0x14]
  402137:	xor    edx,eax
  402139:	sub    edx,ecx
  40213b:	mov    DWORD PTR [ebp-0x8],edx
  40213e:	jmp    0x402190
  402143:	mov    edx,DWORD PTR [ebp-0x8]
  402146:	mov    esi,DWORD PTR [ebp-0x14]
  402149:	add    edx,ecx
  40214b:	xor    edx,eax
  40214d:	add    edx,edi
  40214f:	xor    edx,esi
  402151:	mov    esi,DWORD PTR [ebp-0xc]
  402154:	imul   edx,esi
  402157:	mov    DWORD PTR [ebp-0xc],edx
  40215a:	mov    edx,DWORD PTR [ebp-0xc]
  40215d:	cmp    edx,0xf4bb7b09
  402163:	mov    edx,DWORD PTR [ebp-0x8]
  402166:	mov    esi,DWORD PTR [ebp-0x14]
  402169:	jbe    0x40217f
  40216f:	add    edx,ecx
  402171:	xor    edx,eax
  402173:	add    edx,edi
  402175:	or     edx,esi
  402177:	sub    DWORD PTR [ebp-0xc],edx
  40217a:	jmp    0x40218d
  40217f:	add    edx,ecx
  402181:	xor    edx,eax
  402183:	add    edx,edi
  402185:	and    edx,esi
  402187:	add    edx,DWORD PTR [ebp-0xc]
  40218a:	mov    DWORD PTR [ebp-0xc],edx
  40218d:	dec    DWORD PTR [ebp-0x8]
  402190:	mov    edx,DWORD PTR [ebp-0x8]
  402193:	jne    0x402143
  402199:	mov    dl,BYTE PTR [ebp-0x1]
  40219c:	add    dl,0x62
  40219f:	xor    dl,0xad
  4021a2:	cmp    dl,0x60
  4021a5:	je     0x402259
  4021ab:	mov    edx,DWORD PTR [ebp-0x14]
  4021ae:	xor    edx,eax
  4021b0:	sub    edx,ecx
  4021b2:	mov    DWORD PTR [ebp-0x8],edx
  4021b5:	jmp    0x402207
  4021ba:	mov    edx,DWORD PTR [ebp-0x8]
  4021bd:	mov    esi,DWORD PTR [ebp-0x14]
  4021c0:	add    edx,ecx
  4021c2:	xor    edx,eax
  4021c4:	add    edx,edi
  4021c6:	xor    edx,esi
  4021c8:	mov    esi,DWORD PTR [ebp-0xc]
  4021cb:	imul   edx,esi
  4021ce:	mov    DWORD PTR [ebp-0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp-0xc]
  4021d4:	cmp    edx,0xf4bb7b09
  4021da:	mov    edx,DWORD PTR [ebp-0x8]
  4021dd:	mov    esi,DWORD PTR [ebp-0x14]
  4021e0:	jbe    0x4021f6
  4021e6:	add    edx,ecx
  4021e8:	xor    edx,eax
  4021ea:	add    edx,edi
  4021ec:	or     edx,esi
  4021ee:	sub    DWORD PTR [ebp-0xc],edx
  4021f1:	jmp    0x402204
  4021f6:	add    edx,ecx
  4021f8:	xor    edx,eax
  4021fa:	add    edx,edi
  4021fc:	and    edx,esi
  4021fe:	add    edx,DWORD PTR [ebp-0xc]
  402201:	mov    DWORD PTR [ebp-0xc],edx
  402204:	dec    DWORD PTR [ebp-0x8]
  402207:	mov    edx,DWORD PTR [ebp-0x8]
  40220a:	jne    0x4021ba
  402210:	mov    edx,DWORD PTR [ebp-0x18]
  402213:	mov    esi,DWORD PTR [ebp-0x1c]
  402216:	xor    edx,eax
  402218:	sub    edx,ecx
  40221a:	cmp    esi,edx
  40221c:	mov    edx,DWORD PTR [ebp-0x30]
  40221f:	jae    0x402236
  402225:	xor    edx,eax
  402227:	mov    esi,ecx
  402229:	sub    esi,edx
  40222b:	add    esi,DWORD PTR [ebp-0x1c]
  40222e:	mov    DWORD PTR [ebp-0x1c],esi
  402231:	jmp    0x402245
  402236:	mov    esi,DWORD PTR [ebp-0x1c]
  402239:	xor    edx,eax
  40223b:	lea    edx,[edx+esi*1-0x789ada65]
  402242:	mov    DWORD PTR [ebp-0x1c],edx
  402245:	mov    edx,DWORD PTR ds:0x4261c8
  40224b:	mov    edx,DWORD PTR [edx+0x198]
  402251:	and    DWORD PTR [edx],0x0
  402254:	jmp    0x401a38
  402259:	pop    esi
  40225a:	pop    ebx
  40225b:	pop    edi
  40225c:	leave  
  40225d:	ret    
  40225e:	push   ebp
  40225f:	mov    ebp,esp
  402261:	push   ecx
  402262:	mov    DWORD PTR [ebp-0x4],0xc7b147a
  402269:	mov    DWORD PTR ds:0x42670c,0x466c
  402273:	mov    DWORD PTR [ebp-0x4],0xc7b2439
  40227a:	mov    DWORD PTR [ebp-0x4],0xc7b2436
  402281:	mov    DWORD PTR ds:0x426694,0x3f7
  40228b:	leave  
  40228c:	ret    0x18
  40228f:	mov    DWORD PTR ds:0x426610,0x7077
  402299:	sldt   WORD PTR [eax]
  40229c:	mov    al,ds:0xff0000f
  4022a1:	mov    DWORD PTR ds:0x42671c,0x1b1e
  4022ab:	sldt   WORD PTR [eax]
  4022ae:	mov    al,ds:0xff0000f
  4022b3:	mov    eax,0xc7b2479
  4022b8:	ret    0xc
  4022bb:	push   ebp
  4022bc:	mov    ebp,esp
  4022be:	sub    esp,0xc
  4022c1:	cmp    DWORD PTR [ebp+0x8],0xdf2ee4e
  4022c8:	mov    DWORD PTR ds:0x4266c0,0x3a82
  4022d2:	lea    eax,[ebp-0x8]
  4022d5:	mov    DWORD PTR ds:0x4266fc,0x559
  4022df:	mov    DWORD PTR [ebp-0xc],eax
  4022e2:	mov    DWORD PTR [ebp-0xc],0xdf2eff6
  4022e9:	mov    DWORD PTR ds:0x42663c,0x48a9
  4022f3:	mov    DWORD PTR [ebp-0x4],0xdf2eff5
  4022fa:	mov    DWORD PTR ds:0x4261c8,0x426050
  402304:	mov    DWORD PTR ds:0x426608,0x2699
  40230e:	jne    0x402328
  402314:	call   0x4018d2
  402319:	mov    DWORD PTR ds:0x42663c,0xf1f
  402323:	jmp    0x4023c1
  402328:	cmp    DWORD PTR [ebp+0x8],0xdf2ee16
  40232f:	mov    DWORD PTR ds:0x4266f8,0x46db
  402339:	push   esi
  40233a:	push   edi
  40233b:	mov    esi,0x6a28
  402340:	mov    edi,0x75683590
  402345:	mov    esi,0x789ada65
  40234a:	mov    DWORD PTR ds:0x4266d0,0x175e
  402354:	jne    0x4023a8
  40235a:	mov    eax,ds:0x426628
  40235f:	xor    ecx,ecx
  402361:	add    ecx,DWORD PTR ds:0x426670
  402367:	sub    eax,ecx
  402369:	imul   eax,DWORD PTR [eax+ecx*1]
  40236d:	mov    eax,DWORD PTR [ebp-0x4]
  402370:	mov    ecx,DWORD PTR ds:0x426478
  402376:	xor    eax,edi
  402378:	sub    eax,esi
  40237a:	mov    DWORD PTR ds:0x426644,0x54ab
  402384:	cmp    eax,ecx
  402386:	mov    DWORD PTR ds:0x4266bc,0x3585
  402390:	jne    0x4023bf
  402396:	push   DWORD PTR [ebp-0x4]
  402399:	push   0xdf7383a
  40239e:	push   0xdca0a4a
  4023a3:	call   0x4023c8
  4023a8:	cmp    DWORD PTR [ebp+0x8],0xdf2efe7
  4023af:	jne    0x4023bf
  4023b5:	mov    eax,DWORD PTR [ebp-0xc]
  4023b8:	xor    eax,edi
  4023ba:	sub    eax,esi
  4023bc:	mov    DWORD PTR [ebp-0x8],eax
  4023bf:	pop    edi
  4023c0:	pop    esi
  4023c1:	mov    eax,DWORD PTR [ebp-0x8]
  4023c4:	leave  
  4023c5:	ret    0x4
  4023c8:	push   ebp
  4023c9:	mov    ebp,esp
  4023cb:	sub    esp,0x44
  4023ce:	xor    eax,DWORD PTR ds:0x4266f8
  4023d4:	mov    DWORD PTR [ebp-0x18],0xdf2eff6
  4023db:	mov    DWORD PTR [ebp-0x3c],0xdf2eff9
  4023e2:	movzx  eax,WORD PTR ds:0x426654
  4023e9:	sbb    DWORD PTR ds:0x426614,eax
  4023ef:	push   ebx
  4023f0:	mov    ebx,0xdf2eff5
  4023f5:	mov    DWORD PTR [ebp-0xc],ebx
  4023f8:	mov    DWORD PTR [ebp-0x34],0xdf2efff
  4023ff:	add    DWORD PTR ds:0x426720,ecx
  402405:	mov    DWORD PTR [ebp-0x38],0xdf2efe9
  40240c:	xor    eax,eax
  40240e:	or     eax,DWORD PTR ds:0x426704
  402414:	sub    DWORD PTR ds:0x426718,eax
  40241a:	mov    eax,0xdf2ef13
  40241f:	mov    DWORD PTR [ebp-0x3c],eax
  402422:	movzx  ecx,WORD PTR ds:0x426608
  402429:	sub    DWORD PTR ds:0x42663c,ecx
  40242f:	mov    ecx,DWORD PTR [ebp-0xc]
  402432:	sub    DWORD PTR ds:0x4265fc,0x6385
  40243c:	push   esi
  40243d:	sbb    esi,0x1e73
  402443:	mov    esi,0x75683590
  402448:	sub    DWORD PTR ds:0x4266d4,0x7d12
  402452:	push   edi
  402453:	xor    ecx,esi
  402455:	mov    edi,0x789ada65
  40245a:	sub    ecx,edi
  40245c:	mov    DWORD PTR ds:0x426638,0x3ef5
  402466:	xor    edx,edx
  402468:	mov    DWORD PTR ds:0x4266cc,0x6264
  402472:	mov    DWORD PTR [ebp-0x30],ecx
  402475:	mov    DWORD PTR [ebp-0x30],edx
  402478:	mov    DWORD PTR ds:0x426644,0x1c96
  402482:	cmp    DWORD PTR ds:0x4262d8,edx
  402488:	mov    DWORD PTR ds:0x426700,0x2e47
  402492:	jne    0x402a0b
  402498:	mov    DWORD PTR ds:0x426690,0x19
  4024a2:	cmp    DWORD PTR ds:0x426690,0x0
  4024a9:	je     0x4024f6
  4024af:	cmp    DWORD PTR ds:0x426690,0x9
  4024b6:	jne    0x4024bc
  4024bc:	cmp    DWORD PTR ds:0x426690,0xa
  4024c3:	jne    0x4024d8
  4024c9:	xor    ecx,ecx
  4024cb:	or     ecx,DWORD PTR ds:0x426690
  4024d1:	dec    ecx
  4024d2:	mov    DWORD PTR ds:0x426690,ecx
  4024d8:	xor    ecx,ecx
  4024da:	xor    ecx,DWORD PTR ds:0x426690
  4024e0:	dec    ecx
  4024e1:	mov    DWORD PTR ds:0x426690,ecx
  4024e7:	jmp    0x4024a2
  4024ec:	adc    DWORD PTR ds:0x426714,0x5ea9
  4024f6:	mov    DWORD PTR [ebp-0x14],0xdf2e9f5
  4024fd:	mov    DWORD PTR ds:0x426700,0x7b66
  402507:	mov    ecx,DWORD PTR [ebp-0x14]
  40250a:	xor    ecx,esi
  40250c:	adc    DWORD PTR ds:0x42671c,0x5df6
  402516:	sub    ecx,edi
  402518:	adc    DWORD PTR ds:0x42668c,0x4266c0
  402522:	mov    DWORD PTR [ebp-0x30],ecx
  402525:	adc    DWORD PTR ds:0x4266cc,0x426714
  40252f:	mov    ecx,DWORD PTR [ebp+0x10]
  402532:	adc    DWORD PTR ds:0x4266f8,0x4266c0
  40253c:	sub    ecx,eax
  40253e:	mov    DWORD PTR ds:0x426638,0x731e
  402548:	je     0x402621
  40254e:	not    DWORD PTR ds:0x4266c0
  402554:	sub    ecx,0xd6
  40255a:	mov    DWORD PTR ds:0x4266c8,0x76b0
  402564:	je     0x4025bf
  40256a:	sub    ecx,0x16
  40256d:	mov    DWORD PTR ds:0x42663c,0x595d
  402577:	jne    0x402746
  40257d:	mov    DWORD PTR ds:0x4265fc,0x6493
  402587:	mov    eax,ds:0x426020
  40258c:	mov    DWORD PTR ds:0x426648,0x5c84
  402596:	mov    DWORD PTR [ebp-0x1c],eax
  402599:	mov    eax,ds:0x426684
  40259e:	mov    eax,ds:0x42624c
  4025a3:	mov    DWORD PTR [ebp-0x20],eax
  4025a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4025a9:	mov    eax,DWORD PTR [eax]
  4025ab:	mov    ds:0x4262d0,eax
  4025b0:	mov    eax,DWORD PTR [ebp-0x20]
  4025b3:	mov    eax,DWORD PTR [eax]
  4025b5:	mov    ds:0x4262d4,eax
  4025ba:	jmp    0x402746
  4025bf:	and    DWORD PTR ds:0x426654,0x0
  4025c9:	xor    eax,eax
  4025cb:	or     eax,DWORD PTR ds:0x426654
  4025d1:	inc    eax
  4025d2:	mov    ds:0x426654,eax
  4025d7:	cmp    DWORD PTR ds:0x426654,0x1c
  4025de:	jne    0x4025e4
  4025e4:	cmp    DWORD PTR ds:0x426654,0x1b
  4025eb:	jb     0x4025c9
  4025f1:	add    eax,DWORD PTR ds:0x426708
  4025f7:	mov    eax,ds:0x4262d0
  4025fc:	mov    ecx,DWORD PTR ds:0x4262d4
  402602:	xor    DWORD PTR ds:0x4266d0,0x426708
  40260c:	sub    ecx,eax
  40260e:	add    ecx,0x4
  402611:	mov    ds:0x4262c8,eax
  402616:	mov    DWORD PTR ds:0x4262cc,ecx
  40261c:	jmp    0x402746
  402621:	movzx  eax,BYTE PTR ds:0x4266fc
  402628:	mov    eax,ds:0x4261c8
  40262d:	mov    DWORD PTR [ebp-0x14],0xdf2ef35
  402634:	mov    DWORD PTR ds:0x426688,0x757f
  40263e:	mov    DWORD PTR [ebp-0x30],eax
  402641:	cmp    DWORD PTR ds:0x4262d0,edx
  402647:	mov    DWORD PTR ds:0x426714,0x339c
  402651:	je     0x402736
  402657:	mov    DWORD PTR ds:0x4266d4,0x31c2
  402661:	cmp    DWORD PTR ds:0x4262d4,edx
  402667:	je     0x402736
  40266d:	lea    eax,[ebp-0x40]
  402670:	push   eax
  402671:	add    DWORD PTR ds:0x4266f8,0x4266bc
  40267b:	mov    eax,DWORD PTR [ebp-0x14]
  40267e:	xor    eax,esi
  402680:	mov    DWORD PTR ds:0x426694,0x4c0a
  40268a:	sub    eax,edi
  40268c:	push   eax
  40268d:	and    eax,0x4c71
  402692:	push   DWORD PTR ds:0x4262cc
  402698:	mov    eax,ds:0x4261e8
  40269d:	mov    DWORD PTR ds:0x426720,0x534e
  4026a7:	push   DWORD PTR ds:0x4262c8
  4026ad:	and    DWORD PTR ds:0x4266c8,0x4b7d
  4026b7:	push   0x4
  4026b9:	push   0x1
  4026bb:	and    DWORD PTR ds:0x4265f8,0x4266c8
  4026c5:	push   0x42613e
  4026ca:	sub    DWORD PTR ds:0x426608,0x7008
  4026d4:	push   DWORD PTR [eax]
  4026d6:	call   0x40131f
  4026db:	add    esp,0x20
  4026de:	add    DWORD PTR ds:0x4266f8,0x1787
  4026e8:	test   eax,eax
  4026ea:	je     0x402736
  4026f0:	and    DWORD PTR ds:0x4266f8,0x0
  4026fa:	jmp    0x40270d
  4026ff:	xor    eax,eax
  402701:	xor    eax,DWORD PTR ds:0x4266f8
  402707:	inc    eax
  402708:	mov    ds:0x4266f8,eax
  40270d:	cmp    DWORD PTR ds:0x4266f8,0x15
  402714:	jae    0x40272c
  40271a:	cmp    DWORD PTR ds:0x4266f8,0x20
  402721:	jne    0x402727
  402727:	jmp    0x4026ff
  40272c:	mov    DWORD PTR ds:0x4262dc,0xdf2eff6
  402736:	or     eax,DWORD PTR ds:0x426710
  40273c:	mov    DWORD PTR ds:0x4262d8,0x1
  402746:	and    DWORD PTR ds:0x4266b8,0x0
  402750:	jmp    0x402760
  402755:	mov    eax,ds:0x4266b8
  40275a:	inc    eax
  40275b:	mov    ds:0x4266b8,eax
  402760:	cmp    DWORD PTR ds:0x4266b8,0x1f
  402767:	jae    0x402797
  40276d:	cmp    DWORD PTR ds:0x4266b8,0xe
  402774:	jne    0x40277a
  40277a:	cmp    DWORD PTR ds:0x4266b8,0xd
  402781:	jne    0x402792
  402787:	mov    eax,ds:0x4266b8
  40278c:	inc    eax
  40278d:	mov    ds:0x4266b8,eax
  402792:	jmp    0x402755
  402797:	mov    eax,ds:0x4262dc
  40279c:	sub    DWORD PTR ds:0x42660c,0x4b1e
  4027a6:	xor    eax,esi
  4027a8:	sbb    DWORD PTR ds:0x426640,0x25b0
  4027b2:	sub    eax,edi
  4027b4:	mov    DWORD PTR ds:0x4265f8,0x3354
  4027be:	je     0x40298a
  4027c4:	and    DWORD PTR ds:0x42670c,0x0
  4027ce:	xor    edx,edx
  4027d0:	add    edx,DWORD PTR ds:0x42670c
  4027d6:	inc    edx
  4027d7:	mov    DWORD PTR ds:0x42670c,edx
  4027dd:	cmp    DWORD PTR ds:0x42670c,0x24
  4027e4:	jne    0x4027ea
  4027ea:	cmp    DWORD PTR ds:0x42670c,0x1c
  4027f1:	jb     0x4027ce
  4027f7:	mov    eax,DWORD PTR [ebp-0xc]
  4027fa:	mov    edx,DWORD PTR ds:0x42673c
  402800:	mov    ecx,DWORD PTR ds:0x4266a4
  402806:	sub    edx,ecx
  402808:	imul   edx,DWORD PTR [edx+ecx*1]
  40280c:	xor    eax,esi
  40280e:	and    DWORD PTR ds:0x426718,edx
  402814:	sub    eax,edi
  402816:	mov    DWORD PTR [ebp-0x24],eax
  402819:	mov    eax,ds:0x4262cc
  40281e:	and    DWORD PTR ds:0x4266cc,0x0
  402828:	jmp    0x40283a
  40282d:	mov    ecx,DWORD PTR ds:0x4266cc
  402833:	inc    ecx
  402834:	mov    DWORD PTR ds:0x4266cc,ecx
  40283a:	cmp    DWORD PTR ds:0x4266cc,0x13
  402841:	jae    0x402891
  402847:	cmp    DWORD PTR ds:0x4266cc,0x21
  40284e:	jne    0x402854
  402854:	jmp    0x40282d
  402859:	mov    DWORD PTR ds:0x4266d0,0x12
  402863:	cmp    DWORD PTR ds:0x4266d0,0x0
  40286a:	je     0x402891
  402870:	cmp    DWORD PTR ds:0x4266d0,0x20
  402877:	jne    0x40287d
  40287d:	xor    edx,edx
  40287f:	xor    edx,DWORD PTR ds:0x4266d0
  402885:	dec    edx
  402886:	mov    DWORD PTR ds:0x4266d0,edx
  40288c:	jmp    0x402863
  402891:	mov    DWORD PTR [ebp-0x14],eax
  402894:	mov    eax,ds:0x4262c8
  402899:	mov    DWORD PTR [ebp-0x28],0xdf2ee90
  4028a0:	mov    DWORD PTR [ebp-0x10],eax
  4028a3:	mov    eax,0xdf2effa
  4028a8:	mov    DWORD PTR [ebp-0x2c],eax
  4028ab:	mov    DWORD PTR [ebp-0x30],ebx
  4028ae:	mov    DWORD PTR [ebp-0x4],0xdf2eff6
  4028b5:	mov    DWORD PTR [ebp-0xc],0xdf2eff7
  4028bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4028bf:	xor    ecx,esi
  4028c1:	mov    edx,edi
  4028c3:	sub    edx,ecx
  4028c5:	add    edx,DWORD PTR [ebp-0x14]
  4028c8:	mov    DWORD PTR [ebp-0x8],edx
  4028cb:	mov    DWORD PTR [ebp-0x44],eax
  4028ce:	jmp    0x40297f
  4028d3:	mov    eax,DWORD PTR [ebp-0x4]
  4028d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4028d9:	xor    eax,esi
  4028db:	xor    ecx,esi
  4028dd:	lea    ecx,[eax+ecx*1+0xeca4b36]
  4028e4:	mov    eax,DWORD PTR [ebp-0x8]
  4028e7:	xor    edx,edx
  4028e9:	div    ecx
  4028eb:	mov    eax,DWORD PTR [ebp-0xc]
  4028ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4028f1:	xor    eax,esi
  4028f3:	xor    ecx,esi
  4028f5:	sub    eax,ecx
  4028f7:	cmp    edx,eax
  4028f9:	jne    0x40293a
  4028ff:	mov    eax,DWORD PTR [ebp-0x8]
  402902:	add    eax,DWORD PTR [ebp-0x10]
  402905:	mov    ecx,DWORD PTR [ebp-0x24]
  402908:	mov    al,BYTE PTR [eax]
  40290a:	test   ecx,ecx
  40290c:	jne    0x40291b
  402912:	xor    al,0xad
  402914:	sub    al,0x62
  402916:	jmp    0x402932
  40291b:	mov    ecx,DWORD PTR [ebp-0x28]
  40291e:	xor    cl,0x90
  402921:	mov    dl,0x65
  402923:	sub    dl,cl
  402925:	mov    ecx,DWORD PTR [ebp-0x2c]
  402928:	xor    cl,0x90
  40292b:	add    al,dl
  40292d:	sub    cl,0x65
  402930:	ror    al,cl
  402932:	mov    ecx,DWORD PTR [ebp-0x8]
  402935:	add    ecx,DWORD PTR [ebp-0x10]
  402938:	mov    BYTE PTR [ecx],al
  40293a:	mov    eax,DWORD PTR [ebp-0x8]
  40293d:	mov    ecx,DWORD PTR [ebp-0x30]
  402940:	add    eax,edi
  402942:	xor    eax,esi
  402944:	cmp    eax,ecx
  402946:	jne    0x402970
  40294c:	mov    eax,DWORD PTR [ebp-0xc]
  40294f:	mov    ecx,DWORD PTR [ebp-0x4]
  402952:	xor    eax,esi
  402954:	xor    ecx,esi
  402956:	sub    eax,ecx
  402958:	add    eax,edi
  40295a:	xor    eax,esi
  40295c:	mov    DWORD PTR [ebp-0xc],eax
  40295f:	mov    eax,DWORD PTR [ebp-0x4]
  402962:	xor    eax,esi
  402964:	mov    ecx,edi
  402966:	sub    ecx,eax
  402968:	add    ecx,DWORD PTR [ebp-0x14]
  40296b:	jmp    0x40297c
  402970:	mov    eax,DWORD PTR [ebp-0x4]
  402973:	xor    eax,esi
  402975:	mov    ecx,edi
  402977:	sub    ecx,eax
  402979:	add    ecx,DWORD PTR [ebp-0x8]
  40297c:	mov    DWORD PTR [ebp-0x8],ecx
  40297f:	mov    eax,DWORD PTR [ebp-0xc]
  402982:	cmp    eax,ebx
  402984:	jne    0x4028d3
  40298a:	mov    ecx,DWORD PTR [ebp-0x18]
  40298d:	mov    eax,DWORD PTR [ebp+0x10]
  402990:	xor    ecx,esi
  402992:	xor    eax,esi
  402994:	lea    eax,[ecx+eax*1-0x789ada65]
  40299b:	jmp    0x4029f6
  4029a0:	mov    ecx,DWORD PTR [ebp-0x34]
  4029a3:	cmp    eax,ecx
  4029a5:	jne    0x4029b6
  4029ab:	push   eax
  4029ac:	push   0xc7b243d
  4029b1:	jmp    0x4029dd
  4029b6:	mov    ecx,DWORD PTR [ebp-0x38]
  4029b9:	cmp    eax,ecx
  4029bb:	jne    0x4029cc
  4029c1:	push   eax
  4029c2:	push   0xc653908
  4029c7:	jmp    0x4029dd
  4029cc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4029cf:	cmp    eax,ecx
  4029d1:	jne    0x4029ea
  4029d7:	push   eax
  4029d8:	push   0xd86243d
  4029dd:	add    eax,0x789ada65
  4029e2:	xor    eax,esi
  4029e4:	push   eax
  4029e5:	call   0x4023c8
  4029ea:	mov    eax,DWORD PTR [ebp-0x18]
  4029ed:	xor    eax,esi
  4029ef:	lea    eax,[eax+edi*1-0x789ada65]
  4029f6:	xor    eax,esi
  4029f8:	mov    edi,eax
  4029fa:	xor    edi,esi
  4029fc:	lea    ecx,[edi-0x789ada65]
  402a02:	cmp    ecx,0x28
  402a05:	jb     0x4029a0
  402a0b:	pop    edi
  402a0c:	pop    esi
  402a0d:	pop    ebx
  402a0e:	leave  
  402a0f:	ret    0xc
  402a12:	xor    ebx,0x15f3
  402a18:	push   ebp
  402a19:	mov    ebp,esp
  402a1b:	sub    esp,0x40
  402a1e:	mov    DWORD PTR ds:0x426700,0x542b
  402a28:	mov    DWORD PTR [ebp-0x8],0xdf2eff5
  402a2f:	mov    DWORD PTR [ebp-0x4],0xdf2eff6
  402a36:	mov    DWORD PTR [ebp-0x4],0x50
  402a3d:	jmp    0x402ba5
  402a42:	and    DWORD PTR ds:0x426640,0x0
  402a4c:	xor    ecx,ecx
  402a4e:	add    ecx,DWORD PTR ds:0x426640
  402a54:	inc    ecx
  402a55:	mov    DWORD PTR ds:0x426640,ecx
  402a5b:	cmp    DWORD PTR ds:0x426640,0x7
  402a62:	jne    0x402a68
  402a68:	cmp    DWORD PTR ds:0x426640,0x6
  402a6f:	jne    0x402a84
  402a75:	xor    ecx,ecx
  402a77:	xor    ecx,DWORD PTR ds:0x426640
  402a7d:	inc    ecx
  402a7e:	mov    DWORD PTR ds:0x426640,ecx
  402a84:	cmp    DWORD PTR ds:0x426640,0x11
  402a8b:	jb     0x402a4c
  402a91:	xor    eax,eax
  402a93:	and    DWORD PTR ds:0x4265f8,0x0
  402a9d:	jmp    0x402ab1
  402aa2:	xor    ecx,ecx
  402aa4:	xor    ecx,DWORD PTR ds:0x4265f8
  402aaa:	inc    ecx
  402aab:	mov    DWORD PTR ds:0x4265f8,ecx
  402ab1:	cmp    DWORD PTR ds:0x4265f8,0x12
  402ab8:	jae    0x402aec
  402abe:	cmp    DWORD PTR ds:0x4265f8,0x5
  402ac5:	jne    0x402acb
  402acb:	cmp    DWORD PTR ds:0x4265f8,0x4
  402ad2:	jne    0x402ae7
  402ad8:	xor    ecx,ecx
  402ada:	add    ecx,DWORD PTR ds:0x4265f8
  402ae0:	inc    ecx
  402ae1:	mov    DWORD PTR ds:0x4265f8,ecx
  402ae7:	jmp    0x402aa2
  402aec:	mov    ecx,DWORD PTR [ebp-0x8]
  402aef:	inc    DWORD PTR ds:0x426608
  402af5:	xor    cl,0x90
  402af8:	sub    cl,0x65
  402afb:	mov    BYTE PTR [ebp+eax*1-0x40],cl
  402aff:	mov    DWORD PTR ds:0x426678,0x43fb
  402b09:	inc    eax
  402b0a:	cmp    eax,0x32
  402b0d:	mov    DWORD PTR ds:0x4266c8,0x35b5
  402b17:	jb     0x402a93
  402b1d:	xor    DWORD PTR ds:0x426694,0x55df
  402b27:	push   0x426338
  402b2c:	adc    DWORD PTR ds:0x426700,0x4266d0
  402b36:	lea    eax,[ebp-0x40]
  402b39:	push   eax
  402b3a:	call   DWORD PTR ds:0x407010
  402b40:	lea    eax,[ebp-0x40]
  402b43:	sub    DWORD PTR ds:0x42671c,0x4266cc
  402b4d:	push   eax
  402b4e:	xor    DWORD PTR ds:0x4266d4,0x2a65
  402b58:	call   DWORD PTR ds:0x407000
  402b5e:	cmp    BYTE PTR [ebp-0x3f],0x74
  402b62:	jne    0x402ba5
  402b68:	mov    DWORD PTR ds:0x426648,0x1d
  402b72:	cmp    DWORD PTR ds:0x426648,0x0
  402b79:	je     0x402ba2
  402b7f:	cmp    DWORD PTR ds:0x426648,0x2d
  402b86:	jne    0x402b8c
  402b8c:	mov    eax,ds:0x426648
  402b91:	dec    eax
  402b92:	mov    ds:0x426648,eax
  402b97:	jmp    0x402b72
  402b9c:	xor    eax,DWORD PTR ds:0x4266f8
  402ba2:	dec    DWORD PTR [ebp-0x4]
  402ba5:	mov    eax,ds:0x4266f8
  402baa:	and    eax,DWORD PTR ds:0x4266b8
  402bb0:	mov    ds:0x4266f8,eax
  402bb5:	mov    eax,DWORD PTR [ebp-0x4]
  402bb8:	xor    DWORD PTR ds:0x426710,0x6806
  402bc2:	test   eax,eax
  402bc4:	jne    0x402a42
  402bca:	and    DWORD PTR ds:0x42668c,0x0
  402bd4:	jmp    0x402be4
  402bd9:	mov    eax,ds:0x42668c
  402bde:	inc    eax
  402bdf:	mov    ds:0x42668c,eax
  402be4:	cmp    DWORD PTR ds:0x42668c,0x1e
  402beb:	jae    0x402c03
  402bf1:	cmp    DWORD PTR ds:0x42668c,0x2d
  402bf8:	jne    0x402bfe
  402bfe:	jmp    0x402bd9
  402c03:	add    DWORD PTR ds:0x426320,0x2000
  402c0d:	mov    eax,ds:0x426478
  402c12:	cmp    eax,0x6f6c93b9
  402c17:	jne    0x402c27
  402c1d:	mov    DWORD PTR ds:0x426478,0x0
  402c27:	lea    eax,[ebp-0xc]
  402c2a:	mov    DWORD PTR [ebp-0x4],eax
  402c2d:	lea    eax,[ebp+0x4]
  402c30:	mov    ds:0x426330,eax
  402c35:	mov    eax,ds:0x426334
  402c3a:	test   eax,eax
  402c3c:	jne    0x402c4e
  402c42:	mov    eax,ds:0x426330
  402c47:	mov    eax,DWORD PTR [eax]
  402c49:	mov    ds:0x426334,eax
  402c4e:	mov    eax,ds:0x426330
  402c53:	mov    eax,DWORD PTR [eax+0x4]
  402c56:	mov    ds:0x426324,eax
  402c5b:	mov    eax,ds:0x426330
  402c60:	mov    eax,DWORD PTR [eax+0x8]
  402c63:	mov    ds:0x426328,eax
  402c68:	mov    eax,ds:0x426330
  402c6d:	mov    eax,DWORD PTR [eax+0xc]
  402c70:	mov    ds:0x42632c,eax
  402c75:	mov    eax,ds:0x426324
  402c7a:	mov    ds:0x4262f8,eax
  402c7f:	mov    eax,ds:0x42632c
  402c84:	mov    ds:0x426300,eax
  402c89:	mov    eax,ds:0x426328
  402c8e:	mov    ds:0x4262fc,eax
  402c93:	mov    eax,DWORD PTR [ebp-0x4]
  402c96:	push   0xf5ba2909
  402c9b:	push   0xf4bb7b18
  402ca0:	mov    ds:0x426304,eax
  402ca5:	call   0x402d1a
  402caa:	mov    eax,DWORD PTR [ebp-0x4]
  402cad:	mov    ecx,DWORD PTR ds:0x426304
  402cb3:	mov    ecx,DWORD PTR [ecx]
  402cb5:	mov    DWORD PTR [eax],ecx
  402cb7:	mov    DWORD PTR [ebp-0x8],0x0
  402cbe:	mov    eax,ds:0x426248
  402cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  402cc6:	cmp    eax,ecx
  402cc8:	jne    0x402cea
  402cce:	mov    eax,ds:0x426248
  402cd3:	mov    ds:0x426240,eax
  402cd8:	mov    eax,ds:0x426334
  402cdd:	mov    ecx,DWORD PTR ds:0x426330
  402ce3:	mov    DWORD PTR [ecx],eax
  402ce5:	jmp    0x402d11
  402cea:	mov    eax,ds:0x426240
  402cef:	mov    ecx,DWORD PTR ds:0x426248
  402cf5:	xor    eax,ecx
  402cf7:	mov    ds:0x426240,eax
  402cfc:	mov    eax,DWORD PTR [ebp-0x8]
  402cff:	mov    ds:0x426248,eax
  402d04:	mov    eax,ds:0x426330
  402d09:	mov    ecx,DWORD PTR ds:0x426240
  402d0f:	add    DWORD PTR [eax],ecx
  402d11:	mov    eax,DWORD PTR [ebp-0x4]
  402d14:	mov    eax,DWORD PTR [eax]
  402d16:	leave  
  402d17:	ret    0xc
  402d1a:	push   ebp
  402d1b:	mov    ebp,esp
  402d1d:	sub    esp,0x28
  402d20:	mov    eax,ds:0x426614
  402d25:	mov    eax,ds:0x426304
  402d2a:	mov    DWORD PTR [ebp-0x10],0xdf2eff5
  402d31:	mov    DWORD PTR ds:0x426710,0x6575
  402d3b:	push   esi
  402d3c:	mov    esi,0x496c
  402d41:	mov    DWORD PTR [ebp-0x14],0xdf2eff6
  402d48:	push   edi
  402d49:	mov    DWORD PTR [ebp-0x8],0xdf2e909
  402d50:	not    edi
  402d52:	mov    DWORD PTR [ebp-0x20],eax
  402d55:	mov    edi,DWORD PTR ds:0x4266cc
  402d5b:	mov    esi,0x75683590
  402d60:	mov    edi,0x789ada65
  402d65:	jmp    0x402f0f
  402d6a:	mov    ecx,DWORD PTR ds:0x426680
  402d70:	sub    DWORD PTR ds:0x426688,ecx
  402d76:	mov    eax,DWORD PTR [ebp-0x8]
  402d79:	and    DWORD PTR ds:0x426690,0x0
  402d83:	mov    ecx,DWORD PTR ds:0x426690
  402d89:	inc    ecx
  402d8a:	mov    DWORD PTR ds:0x426690,ecx
  402d90:	cmp    DWORD PTR ds:0x426690,0xc
  402d97:	jne    0x402d9d
  402d9d:	cmp    DWORD PTR ds:0x426690,0xb
  402da4:	jne    0x402db7
  402daa:	mov    ecx,DWORD PTR ds:0x426690
  402db0:	inc    ecx
  402db1:	mov    DWORD PTR ds:0x426690,ecx
  402db7:	cmp    DWORD PTR ds:0x426690,0x19
  402dbe:	jb     0x402d83
  402dc4:	mov    ecx,DWORD PTR [ebp-0x14]
  402dc7:	inc    DWORD PTR ds:0x4266c8
  402dcd:	imul   eax,ecx
  402dd0:	add    DWORD PTR ds:0x42660c,0x5e16
  402dda:	mov    DWORD PTR [ebp-0x1c],eax
  402ddd:	mov    eax,DWORD PTR [ebp-0x8]
  402de0:	adc    DWORD PTR ds:0x4265f8,0x78ea
  402dea:	add    eax,DWORD PTR [ebp-0x10]
  402ded:	adc    DWORD PTR ds:0x4266fc,0x2dcc
  402df7:	mov    DWORD PTR [ebp-0xc],eax
  402dfa:	mov    eax,DWORD PTR [ebp-0xc]
  402dfd:	mov    eax,DWORD PTR [ebp-0x1c]
  402e00:	push   DWORD PTR [ebp-0x8]
  402e03:	and    DWORD PTR ds:0x4266b8,0x28b2
  402e0d:	call   0x4022bb
  402e12:	mov    DWORD PTR [ebp-0x1c],eax
  402e15:	mov    eax,DWORD PTR [ebp-0x14]
  402e18:	mov    ecx,DWORD PTR [ebp-0x1c]
  402e1b:	or     DWORD PTR ds:0x42668c,0x426644
  402e25:	xor    eax,esi
  402e27:	sub    eax,edi
  402e29:	cmp    ecx,eax
  402e2b:	mov    DWORD PTR ds:0x42668c,0x677b
  402e35:	jne    0x402ece
  402e3b:	xor    eax,eax
  402e3d:	add    eax,DWORD PTR ds:0x426600
  402e43:	adc    eax,DWORD PTR ds:0x426708
  402e49:	mov    ds:0x426600,eax
  402e4e:	mov    eax,DWORD PTR [ebp-0x10]
  402e51:	mov    DWORD PTR ds:0x426720,0x14
  402e5b:	cmp    DWORD PTR ds:0x426720,0x0
  402e62:	je     0x402e8d
  402e68:	cmp    DWORD PTR ds:0x426720,0x23
  402e6f:	jne    0x402e75
  402e75:	mov    ecx,DWORD PTR ds:0x426720
  402e7b:	dec    ecx
  402e7c:	mov    DWORD PTR ds:0x426720,ecx
  402e82:	jmp    0x402e5b
  402e87:	and    ecx,0x42d7
  402e8d:	xor    eax,esi
  402e8f:	sub    eax,edi
  402e91:	mov    DWORD PTR [ebp-0xc],eax
  402e94:	adc    ecx,0xb8
  402e9a:	mov    eax,ds:0x4262f4
  402e9f:	xor    DWORD PTR ds:0x4262f4,eax
  402ea5:	mov    eax,ds:0x4262f8
  402eaa:	dec    ecx
  402eab:	mov    ds:0x42627c,eax
  402eb0:	adc    DWORD PTR ds:0x426644,0x50cb
  402eba:	mov    eax,ds:0x4262fc
  402ebf:	mov    ds:0x426024,eax
  402ec4:	mov    eax,ds:0x426300
  402ec9:	mov    ds:0x42629c,eax
  402ece:	sbb    DWORD PTR ds:0x42668c,ecx
  402ed4:	mov    eax,DWORD PTR [ebp-0x8]
  402ed7:	mov    ecx,DWORD PTR [ebp-0x14]
  402eda:	xor    eax,esi
  402edc:	sub    DWORD PTR ds:0x42663c,0x4266d4
  402ee6:	xor    ecx,esi
  402ee8:	sub    eax,ecx
  402eea:	adc    DWORD PTR ds:0x426688,0x7a81
  402ef4:	add    eax,edi
  402ef6:	add    DWORD PTR ds:0x4266c0,0x426650
  402f00:	xor    eax,esi
  402f02:	adc    DWORD PTR ds:0x426608,0x4266c4
  402f0c:	mov    DWORD PTR [ebp-0x8],eax
  402f0f:	and    DWORD PTR ds:0x426610,0x0
  402f19:	jmp    0x402f29
  402f1e:	mov    eax,ds:0x426610
  402f23:	inc    eax
  402f24:	mov    ds:0x426610,eax
  402f29:	cmp    DWORD PTR ds:0x426610,0x16
  402f30:	jae    0x402f60
  402f36:	cmp    DWORD PTR ds:0x426610,0x9
  402f3d:	jne    0x402f43
  402f43:	cmp    DWORD PTR ds:0x426610,0x8
  402f4a:	jne    0x402f5b
  402f50:	mov    eax,ds:0x426610
  402f55:	inc    eax
  402f56:	mov    ds:0x426610,eax
  402f5b:	jmp    0x402f1e
  402f60:	mov    eax,DWORD PTR [ebp-0x8]
  402f63:	mov    DWORD PTR ds:0x4266d4,0x3ba4
  402f6d:	xor    eax,esi
  402f6f:	sub    eax,edi
  402f71:	mov    DWORD PTR ds:0x426718,0x58d2
  402f7b:	jne    0x402d6a
  402f81:	push   DWORD PTR [ebp-0x20]
  402f84:	or     DWORD PTR ds:0x4266fc,0x1b14
  402f8e:	push   DWORD PTR ds:0x4261c8
  402f94:	xor    DWORD PTR ds:0x42667c,0x426708
  402f9e:	call   0x40116a
  402fa3:	xor    DWORD PTR ds:0x4266d4,edi
  402fa9:	mov    DWORD PTR [ebp-0xc],eax
  402fac:	mov    ecx,DWORD PTR ds:0x426744
  402fb2:	mov    eax,ds:0x4266d8
  402fb7:	sub    eax,ecx
  402fb9:	sub    ecx,DWORD PTR [ecx+eax*1]
  402fbc:	mov    eax,DWORD PTR [ebp-0xc]
  402fbf:	and    DWORD PTR ds:0x4266c0,0x0
  402fc9:	jmp    0x402fdb
  402fce:	mov    ecx,DWORD PTR ds:0x4266c0
  402fd4:	inc    ecx
  402fd5:	mov    DWORD PTR ds:0x4266c0,ecx
  402fdb:	cmp    DWORD PTR ds:0x4266c0,0x1b
  402fe2:	jae    0x402ffa
  402fe8:	cmp    DWORD PTR ds:0x4266c0,0x1d
  402fef:	jne    0x402ff5
  402ff5:	jmp    0x402fce
  402ffa:	add    eax,edi
  402ffc:	xor    eax,esi
  402ffe:	mov    DWORD PTR [ebp-0xc],eax
  403001:	mov    eax,DWORD PTR [ebp-0xc]
  403004:	mov    ecx,DWORD PTR [ebp-0x10]
  403007:	cmp    ecx,eax
  403009:	jne    0x403105
  40300f:	mov    eax,ds:0x42601c
  403014:	mov    eax,DWORD PTR [eax]
  403016:	and    DWORD PTR [ebp-0x18],0x0
  40301a:	or     DWORD PTR [ebp-0x18],eax
  40301d:	mov    eax,ds:0x4262ec
  403022:	mov    DWORD PTR [ebp-0x20],eax
  403025:	mov    DWORD PTR [ebp-0x20],0xdf2ef35
  40302c:	mov    DWORD PTR [ebp-0x14],0xdf2effa
  403033:	lea    eax,[ebp-0x28]
  403036:	push   eax
  403037:	mov    BYTE PTR [ebp-0x1],0xe6
  40303b:	mov    eax,DWORD PTR [ebp-0x20]
  40303e:	xor    eax,esi
  403040:	sub    eax,edi
  403042:	push   eax
  403043:	mov    eax,DWORD PTR [ebp-0x14]
  403046:	xor    eax,esi
  403048:	sub    eax,edi
  40304a:	push   eax
  40304b:	push   DWORD PTR ds:0x4262f0
  403051:	mov    eax,ds:0x4261e8
  403056:	push   0x4
  403058:	push   0x1
  40305a:	push   0x42613e
  40305f:	push   DWORD PTR [eax]
  403061:	call   0x40131f
  403066:	mov    al,BYTE PTR [ebp-0x1]
  403069:	mov    ecx,DWORD PTR ds:0x4262f0
  40306f:	xor    al,0xad
  403071:	sub    al,0x62
  403073:	mov    BYTE PTR [ecx],al
  403075:	mov    eax,DWORD PTR [ebp-0x14]
  403078:	xor    eax,esi
  40307a:	sub    edi,eax
  40307c:	mov    eax,ds:0x4262f0
  403081:	sub    edi,eax
  403083:	mov    eax,ds:0x4262e0
  403088:	mov    ecx,DWORD PTR ds:0x4262f0
  40308e:	add    esp,0x20
  403091:	add    eax,edi
  403093:	push   0x426308
  403098:	mov    DWORD PTR [ecx+0x1],eax
  40309b:	call   DWORD PTR ds:0x40700c
  4030a1:	cmp    eax,0xa
  4030a4:	jne    0x4030d7
  4030aa:	push   DWORD PTR ds:0x4261c8
  4030b0:	mov    eax,ds:0x426394
  4030b5:	push   DWORD PTR [ebp-0x18]
  4030b8:	mov    DWORD PTR [ebp-0x24],eax
  4030bb:	push   DWORD PTR ds:0x42629c
  4030c1:	push   DWORD PTR ds:0x426024
  4030c7:	mov    eax,ds:0x4262f0
  4030cc:	push   DWORD PTR ds:0x4262f8
  4030d2:	push   DWORD PTR [ebp-0x24]
  4030d5:	call   eax
  4030d7:	lea    eax,[ebp+0x4]
  4030da:	mov    ds:0x4262f4,eax
  4030df:	mov    eax,ds:0x4262f4
  4030e4:	mov    ecx,DWORD PTR ds:0x426240
  4030ea:	add    DWORD PTR [eax],ecx
  4030ec:	mov    eax,ds:0x4261c8
  4030f1:	mov    eax,DWORD PTR [eax+0x1cc]
  4030f7:	mov    ecx,DWORD PTR [eax]
  4030f9:	mov    eax,ds:0x426304
  4030fe:	or     DWORD PTR [eax],ecx
  403100:	jmp    0x403114
  403105:	mov    eax,DWORD PTR [ebp-0x10]
  403108:	mov    ecx,DWORD PTR ds:0x426304
  40310e:	xor    eax,esi
  403110:	sub    eax,edi
  403112:	mov    DWORD PTR [ecx],eax
  403114:	pop    edi
  403115:	pop    esi
  403116:	leave  
  403117:	ret    0x8
  40311a:	push   ebp
  40311b:	mov    ebp,esp
  40311d:	sub    esp,0x5c
  403120:	neg    eax
  403122:	mov    ecx,DWORD PTR [ebp+0x8]
  403125:	sbb    DWORD PTR ds:0x426638,ebx
  40312b:	mov    eax,0x37e
  403130:	or     DWORD PTR ds:0x426684,0x426710
  40313a:	xor    ax,WORD PTR [ecx+0x20]
  40313e:	and    DWORD PTR ds:0x4266c0,0x0
  403148:	mov    ecx,DWORD PTR ds:0x4266c0
  40314e:	inc    ecx
  40314f:	mov    DWORD PTR ds:0x4266c0,ecx
  403155:	cmp    DWORD PTR ds:0x4266c0,0x22
  40315c:	jne    0x403162
  403162:	cmp    DWORD PTR ds:0x4266c0,0x13
  403169:	jb     0x403148
  40316f:	and    DWORD PTR ds:0x4265f8,0x0
  403179:	mov    ecx,DWORD PTR ds:0x4265f8
  40317f:	inc    ecx
  403180:	mov    DWORD PTR ds:0x4265f8,ecx
  403186:	cmp    DWORD PTR ds:0x4265f8,0x1d
  40318d:	jne    0x403193
  403193:	cmp    DWORD PTR ds:0x4265f8,0x11
  40319a:	jb     0x403179
  4031a0:	mov    ecx,DWORD PTR ds:0x42661c
  4031a6:	mov    ecx,DWORD PTR [ecx]
  4031a8:	or     DWORD PTR ds:0x4265f8,ecx
  4031ae:	mov    ecx,0x26b
  4031b3:	mov    DWORD PTR ds:0x4265fc,0x6343
  4031bd:	add    ax,cx
  4031c0:	movzx  eax,ax
  4031c3:	or     ecx,DWORD PTR ds:0x4266d0
  4031c9:	mov    DWORD PTR [ebp-0x18],eax
  4031cc:	sub    ecx,0x5713
  4031d2:	mov    BYTE PTR [ebp-0x1],0xce
  4031d6:	not    ecx
  4031d8:	lea    eax,[ebp-0x1]
  4031db:	add    DWORD PTR ds:0x426714,edi
  4031e1:	mov    DWORD PTR [ebp-0x14],eax
  4031e4:	sub    ecx,0x4ed
  4031ea:	mov    al,BYTE PTR [ebp-0x1]
  4031ed:	xor    DWORD PTR ds:0x426700,0x14a5
  4031f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4031fa:	and    DWORD PTR ds:0x426600,0x42667c
  403204:	xor    al,0xad
  403206:	and    DWORD PTR ds:0x426684,0x426694
  403210:	sub    al,0x62
  403212:	mov    BYTE PTR [ecx],al
  403214:	xor    eax,0x6447
  403219:	mov    DWORD PTR [ebp-0x8],0xdf2eff5
  403220:	and    DWORD PTR ds:0x426714,0x0
  40322a:	jmp    0x40323c
  40322f:	mov    ecx,DWORD PTR ds:0x426714
  403235:	inc    ecx
  403236:	mov    DWORD PTR ds:0x426714,ecx
  40323c:	cmp    DWORD PTR ds:0x426714,0x1a
  403243:	jae    0x40326c
  403249:	cmp    DWORD PTR ds:0x426714,0x20
  403250:	jne    0x403256
  403256:	jmp    0x40322f
  40325b:	mov    eax,ds:0x426724
  403260:	mov    ecx,DWORD PTR ds:0x426728
  403266:	sub    ecx,eax
  403268:	imul   eax,DWORD PTR [eax+ecx*1]
  40326c:	mov    DWORD PTR [ebp-0x10],0xdf2eff6
  403273:	mov    ecx,DWORD PTR [ebp-0x8]
  403276:	mov    eax,ds:0x426610
  40327b:	adc    DWORD PTR ds:0x426714,eax
  403281:	mov    eax,0x75683590
  403286:	xor    ecx,eax
  403288:	push   esi
  403289:	sbb    DWORD PTR ds:0x426638,0x5d76
  403293:	mov    esi,0x789ada65
  403298:	add    DWORD PTR ds:0x426650,0x426638
  4032a2:	sub    ecx,esi
  4032a4:	mov    DWORD PTR [ebp-0xc],ecx
  4032a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4032aa:	xor    ecx,eax
  4032ac:	dec    DWORD PTR ds:0x426688
  4032b2:	sub    ecx,esi
  4032b4:	mov    DWORD PTR ds:0x426640,0x6484
  4032be:	cmp    ecx,0x40
  4032c1:	mov    DWORD PTR ds:0x426684,0x715b
  4032cb:	jae    0x403402
  4032d1:	push   ebx
  4032d2:	mov    DWORD PTR ds:0x426694,0x260d
  4032dc:	push   edi
  4032dd:	mov    dl,BYTE PTR [ebp-0x1]
  4032e0:	mov    BYTE PTR [ebp+ecx*1-0x5c],dl
  4032e4:	mov    DWORD PTR ds:0x426710,0x7788
  4032ee:	cmp    ecx,0x3f
  4032f1:	jne    0x4033f6
  4032f7:	mov    edx,DWORD PTR [ebp-0x8]
  4032fa:	xor    edx,eax
  4032fc:	sbb    DWORD PTR ds:0x42667c,0x42668c
  403306:	sub    edx,esi
  403308:	jmp    0x4033dc
  40330d:	and    DWORD PTR ds:0x426710,0x0
  403317:	jmp    0x403329
  40331c:	mov    ebx,DWORD PTR ds:0x426710
  403322:	inc    ebx
  403323:	mov    DWORD PTR ds:0x426710,ebx
  403329:	cmp    DWORD PTR ds:0x426710,0x14
  403330:	jae    0x40336c
  403336:	cmp    DWORD PTR ds:0x426710,0x5
  40333d:	jne    0x403343
  403343:	cmp    DWORD PTR ds:0x426710,0x4
  40334a:	jne    0x40335d
  403350:	mov    ebx,DWORD PTR ds:0x426710
  403356:	inc    ebx
  403357:	mov    DWORD PTR ds:0x426710,ebx
  40335d:	jmp    0x40331c
  403362:	xor    DWORD PTR ds:0x4265fc,0x6774
  40336c:	mov    ebx,DWORD PTR [ebp+0x8]
  40336f:	and    DWORD PTR ds:0x426694,0x0
  403379:	jmp    0x40338b
  40337e:	mov    edi,DWORD PTR ds:0x426694
  403384:	inc    edi
  403385:	mov    DWORD PTR ds:0x426694,edi
  40338b:	cmp    DWORD PTR ds:0x426694,0x16
  403392:	jae    0x4033aa
  403398:	cmp    DWORD PTR ds:0x426694,0x17
  40339f:	jne    0x4033a5
  4033a5:	jmp    0x40337e
  4033aa:	mov    edi,0x37e
  4033af:	xor    di,WORD PTR [ebx+edx*4+0x2]
  4033b4:	mov    ebx,0x26b
  4033b9:	add    di,bx
  4033bc:	movzx  edi,di
  4033bf:	mov    DWORD PTR [ebp-0x1c],edi
  4033c2:	mov    edi,DWORD PTR [ebp+0x8]
  4033c5:	movzx  edx,WORD PTR [edi+edx*4]
  4033c9:	mov    edi,DWORD PTR [ebp-0x1c]
  4033cc:	xor    edx,0x37e
  4033d2:	add    edx,ebx
  4033d4:	mov    BYTE PTR [ebp+edi*1-0x5c],dl
  4033d8:	mov    edx,DWORD PTR [ebp-0x14]
  4033db:	inc    edx
  4033dc:	mov    edi,DWORD PTR [ebp-0x18]
  4033df:	mov    DWORD PTR [ebp-0x14],edx
  4033e2:	cmp    edx,edi
  4033e4:	jne    0x40330d
  4033ea:	mov    edx,DWORD PTR [ebp-0x8]
  4033ed:	mov    edi,DWORD PTR [ebp+0x10]
  4033f0:	xor    edx,eax
  4033f2:	sub    edx,esi
  4033f4:	mov    DWORD PTR [edi],edx
  4033f6:	inc    ecx
  4033f7:	cmp    ecx,0x40
  4033fa:	jb     0x4032dd
  403400:	pop    edi
  403401:	pop    ebx
  403402:	mov    DWORD PTR [ebp+0x8],0xdf2dff5
  403409:	jmp    0x403481
  40340e:	mov    ecx,DWORD PTR [ebp-0xc]
  403411:	mov    cl,BYTE PTR [ebp+ecx*1-0x5c]
  403415:	mov    dl,BYTE PTR [ebp-0x1]
  403418:	cmp    cl,dl
  40341a:	je     0x40346c
  403420:	mov    ecx,DWORD PTR [ebp+0x8]
  403423:	mov    edx,DWORD PTR [ebp-0x10]
  403426:	xor    ecx,eax
  403428:	xor    edx,eax
  40342a:	sub    ecx,edx
  40342c:	add    ecx,esi
  40342e:	xor    ecx,eax
  403430:	mov    DWORD PTR [ebp+0x8],ecx
  403433:	mov    ecx,DWORD PTR [ebp-0xc]
  403436:	mov    cl,BYTE PTR [ebp+ecx*1-0x5c]
  40343a:	mov    dl,BYTE PTR [ebp-0x1]
  40343d:	cmp    cl,dl
  40343f:	je     0x40346c
  403445:	mov    ecx,DWORD PTR [ebp-0xc]
  403448:	mov    cl,BYTE PTR [ebp+ecx*1-0x5c]
  40344c:	mov    edx,DWORD PTR [ebp+0xc]
  40344f:	cmp    cl,BYTE PTR [edx]
  403451:	jne    0x40349a
  403457:	mov    ecx,DWORD PTR [ebp-0x8]
  40345a:	mov    edx,DWORD PTR [ebp+0xc]
  40345d:	movsx  edx,BYTE PTR [edx]
  403460:	xor    ecx,eax
  403462:	sub    ecx,esi
  403464:	cmp    edx,ecx
  403466:	je     0x40348e
  40346c:	mov    ecx,DWORD PTR [ebp-0x10]
  40346f:	mov    edx,DWORD PTR [ebp-0xc]
  403472:	xor    ecx,eax
  403474:	lea    ecx,[ecx+edx*1-0x789ada65]
  40347b:	mov    DWORD PTR [ebp-0xc],ecx
  40347e:	inc    DWORD PTR [ebp+0xc]
  403481:	mov    ecx,DWORD PTR [ebp+0x8]
  403484:	xor    ecx,eax
  403486:	sub    ecx,esi
  403488:	jne    0x40340e
  40348e:	mov    ecx,DWORD PTR [ebp-0x10]
  403491:	xor    ecx,eax
  403493:	mov    eax,DWORD PTR [ebp+0x10]
  403496:	sub    ecx,esi
  403498:	mov    DWORD PTR [eax],ecx
  40349a:	pop    esi
  40349b:	leave  
  40349c:	ret    0xc
  40349f:	push   ebp
  4034a0:	mov    ebp,esp
  4034a2:	push   ecx
  4034a3:	mov    DWORD PTR ds:0x42660c,0x1c
  4034ad:	cmp    DWORD PTR ds:0x42660c,0x0
  4034b4:	je     0x403503
  4034ba:	cmp    DWORD PTR ds:0x42660c,0x7
  4034c1:	jne    0x4034c7
  4034c7:	cmp    DWORD PTR ds:0x42660c,0x8
  4034ce:	jne    0x4034df
  4034d4:	mov    eax,ds:0x42660c
  4034d9:	dec    eax
  4034da:	mov    ds:0x42660c,eax
  4034df:	mov    eax,ds:0x42660c
  4034e4:	dec    eax
  4034e5:	mov    ds:0x42660c,eax
  4034ea:	jmp    0x4034ad
  4034ef:	xor    eax,eax
  4034f1:	or     eax,DWORD PTR ds:0x4266dc
  4034f7:	mov    edx,DWORD PTR ds:0x426624
  4034fd:	sub    eax,edx
  4034ff:	imul   eax,DWORD PTR [eax+edx*1]
  403503:	push   ecx
  403504:	and    DWORD PTR ds:0x4266b8,0x0
  40350e:	mov    edx,DWORD PTR ds:0x4266b8
  403514:	inc    edx
  403515:	mov    DWORD PTR ds:0x4266b8,edx
  40351b:	cmp    DWORD PTR ds:0x4266b8,0x4
  403522:	jne    0x403528
  403528:	cmp    DWORD PTR ds:0x4266b8,0x3
  40352f:	jne    0x403544
  403535:	xor    edx,edx
  403537:	xor    edx,DWORD PTR ds:0x4266b8
  40353d:	inc    edx
  40353e:	mov    DWORD PTR ds:0x4266b8,edx
  403544:	cmp    DWORD PTR ds:0x4266b8,0x10
  40354b:	jb     0x40350e
  403551:	sbb    edx,DWORD PTR ds:0x4266c4
  403557:	mov    DWORD PTR [ebp-0x8],0xdf2eff5
  40355e:	adc    edx,edx
  403560:	mov    DWORD PTR [ebp-0x4],0xdf2eff6
  403567:	mov    eax,DWORD PTR [ebp+0xc]
  40356a:	mov    eax,DWORD PTR [eax+0x78]
  40356d:	mov    DWORD PTR [ebp+0xc],eax
  403570:	mov    eax,DWORD PTR [ebp-0x4]
  403573:	push   esi
  403574:	mov    esi,DWORD PTR [ebp-0x8]
  403577:	mov    edx,0x75683590
  40357c:	xor    eax,edx
  40357e:	xor    esi,edx
  403580:	mov    ecx,0x789ada65
  403585:	sub    eax,ecx
  403587:	sub    esi,ecx
  403589:	imul   eax,esi
  40358c:	mov    esi,DWORD PTR [ebp+0xc]
  40358f:	cmp    esi,eax
  403591:	mov    eax,DWORD PTR [ebp-0x4]
  403594:	jne    0x4035ad
  40359a:	mov    esi,DWORD PTR [ebp-0x8]
  40359d:	xor    eax,edx
  40359f:	xor    esi,edx
  4035a1:	sub    eax,ecx
  4035a3:	sub    esi,ecx
  4035a5:	imul   eax,esi
  4035a8:	jmp    0x4035c0
  4035ad:	xor    eax,edx
  4035af:	sub    eax,ecx
  4035b1:	mov    ecx,DWORD PTR [ebp+0xc]
  4035b4:	imul   eax,ecx
  4035b7:	add    eax,DWORD PTR [ebp+0x8]
  4035ba:	mov    DWORD PTR [ebp+0xc],eax
  4035bd:	mov    eax,DWORD PTR [ebp+0xc]
  4035c0:	pop    esi
  4035c1:	leave  
  4035c2:	ret    0x8
  4035c5:	add    BYTE PTR [eax],al
  4035c7:	add    BYTE PTR [eax],al
  4035c9:	mov    al,ds:0x4d75eb
  4035ce:	add    BYTE PTR [eax],al
  4035d0:	add    BYTE PTR [edx],al
  4035d2:	add    BYTE PTR [eax],al
  4035d4:	add    BYTE PTR [ebx+0x0],bl
  4035d7:	add    BYTE PTR [eax],al
  4035d9:	push   eax
  4035da:	imul   eax,DWORD PTR [edx],0x2415000
  4035e0:	add    BYTE PTR [ebx+0x45],cl
  4035e3:	inc    edi
  4035e4:	pop    edi
  4035e5:	ss inc edi
  4035e7:	dec    esi
  4035e8:	pop    edi
  4035e9:	dec    esp
  4035ea:	push   esp
  4035eb:	dec    ebp
  4035ec:	dec    ebx
  4035ed:	add    BYTE PTR [ebx+0x34],cl
  4035f0:	push   ebx
  4035f1:	pop    edi
  4035f2:	push   edi
  4035f3:	cmp    BYTE PTR [ebx],dh
  4035f5:	dec    edi
  4035f6:	dec    ebp
  4035f7:	pop    edi
  4035f8:	pop    edx
  4035f9:	inc    ebp
  4035fa:	push   ecx
  4035fb:	dec    esi
  4035fc:	add    BYTE PTR [edx+0x4e],dl
  4035ff:	dec    ebx
  403600:	pop    edi
  403601:	inc    edi
  403602:	dec    esi
  403603:	inc    edx
  403604:	cmp    BYTE PTR [eax],bh
  403606:	pop    edi
  403607:	push   ebx
  403608:	cmp    BYTE PTR [ebp+0x52],dl
  40360b:	add    BYTE PTR [esp+esi*1+0x47],dl
  40360f:	xor    ebx,DWORD PTR [edi+0x53]
  403612:	xor    al,0x45
  403614:	push   edi
  403615:	ss pop edi
  403617:	push   ecx
  403618:	inc    edi
  403619:	add    BYTE PTR [ecx+0x50],al
  40361c:	xor    BYTE PTR [edi+0x39],bl
  40361f:	dec    eax
  403620:	push   edi
  403621:	aaa    
  403622:	xor    eax,0x5a325900
  403627:	pop    edi
  403628:	push   esp
  403629:	ss push ebx
  40362b:	pop    edi
  40362c:	xor    esi,DWORD PTR [esi]
  40362e:	add    BYTE PTR [ecx+edi*1+0x48],al
  403632:	pop    edi
  403633:	xor    DWORD PTR [eax],esi
  403635:	dec    ecx
  403636:	dec    esp
  403637:	inc    edx
  403638:	xor    esi,DWORD PTR ds:0x4e355f
  40363e:	inc    ebx
  40363f:	aaa    
  403640:	cmp    BYTE PTR [ecx],bh
  403642:	pop    edi
  403643:	xor    eax,0x3649484e
  403648:	push   eax
  403649:	add    BYTE PTR [esi+0x52],cl
  40364c:	push   esp
  40364d:	xor    esi,DWORD PTR [eax]
  40364f:	pop    edi
  403650:	push   edi
  403651:	inc    ebp
  403652:	inc    ebp
  403653:	push   edi
  403654:	pop    edi
  403655:	inc    edi
  403656:	inc    esp
  403657:	add    BYTE PTR [ebp+0x59],dl
  40365a:	cmp    BYTE PTR [edi+0x59],bl
  40365d:	xor    eax,0x5f575053
  403662:	dec    ecx
  403663:	inc    ebx
  403664:	add    BYTE PTR [ebx+0x46],al
  403667:	push   edi
  403668:	pop    edi
  403669:	dec    ebp
  40366a:	xor    BYTE PTR [eax],bh
  40366c:	xor    eax,0x514c5f32
  403671:	add    BYTE PTR [ebx+0x31],al
  403674:	xor    al,0x5f
  403676:	cmp    DWORD PTR [eax],edi
  403678:	inc    ebx
  403679:	xor    BYTE PTR [edi+0x4b],bl
  40367c:	dec    edx
  40367d:	pop    eax
  40367e:	cmp    BYTE PTR [eax],bh
  403680:	add    BYTE PTR [edi+0x56],dl
  403683:	push   edx
  403684:	pop    edi
  403685:	push   edx
  403686:	cmp    DWORD PTR [edi+0x4f],eax
  403689:	add    BYTE PTR [edi+0x4a],dl
  40368c:	dec    esp
  40368d:	xor    eax,0x334c4e5f
  403692:	push   esp
  403693:	push   esi
  403694:	pop    edi
  403695:	push   edi
  403696:	xor    BYTE PTR [ecx+0x0],al
  403699:	pop    edx
  40369a:	dec    ecx
  40369b:	push   eax
  40369c:	xor    esi,DWORD PTR ds:0x514b335f
  4036a2:	add    BYTE PTR [esi+0x47],dl
  4036a5:	inc    ebp
  4036a6:	cmp    DWORD PTR [edi+0x36],ebx
  4036a9:	cmp    BYTE PTR ss:[ecx],dh
  4036ac:	add    BYTE PTR [edi+0x0],cl
  4036af:	push   edi
  4036b0:	add    BYTE PTR [ebp+0x0],dl
  4036b3:	xor    eax,DWORD PTR [eax]
  4036b5:	xor    al,BYTE PTR [eax]
  4036b7:	pop    edi
  4036b8:	add    BYTE PTR [ebx+0x0],al
  4036bb:	xor    al,0x0
  4036bd:	dec    edx
  4036be:	add    BYTE PTR [ebp+0x0],cl
  4036c1:	pop    edi
  4036c2:	add    BYTE PTR [edx+0x0],cl
  4036c5:	add    BYTE PTR [eax],al
  4036c7:	dec    edi
  4036c8:	add    BYTE PTR [edx],dh
  4036ca:	add    BYTE PTR [eax],dh
  4036cc:	add    BYTE PTR [edi+0x0],bl
  4036cf:	dec    eax
  4036d0:	add    BYTE PTR [ebx+0x0],al
  4036d3:	push   esp
  4036d4:	add    BYTE PTR [eax+0x0],dl
  4036d7:	xor    eax,DWORD PTR [eax]
  4036d9:	pop    edi
  4036da:	add    BYTE PTR [edi],dh
  4036dc:	add    BYTE PTR [esi+0x0],dl
  4036df:	add    BYTE PTR [eax],al
  4036e1:	dec    ebx
  4036e2:	add    BYTE PTR [eax],dh
  4036e4:	add    BYTE PTR [edx+0x0],bl
  4036e7:	aaa    
  4036e8:	add    BYTE PTR [edi+0x0],bl
  4036eb:	inc    ebx
  4036ec:	add    BYTE PTR [ecx+0x0],cl
  4036ef:	dec    esp
  4036f0:	add    BYTE PTR [eax],al
  4036f2:	add    BYTE PTR [esi+0x0],dl
  4036f5:	cmp    DWORD PTR [eax],eax
  4036f7:	pop    ecx
  4036f8:	add    BYTE PTR [edi+0x0],bl
  4036fb:	pop    ecx
  4036fc:	add    BYTE PTR [eax+0x0],cl
  4036ff:	inc    edi
  403700:	add    BYTE PTR [ebp+0x0],dl
  403703:	pop    eax
  403704:	add    BYTE PTR [ecx],dh
  403706:	add    BYTE PTR [edi+0x0],bl
  403709:	inc    ebp
  40370a:	add    BYTE PTR [eax+eax*1],dh
  40370d:	add    BYTE PTR [eax],al
  40370f:	push   ebp
  403710:	add    BYTE PTR [ebx+0x0],al
  403713:	inc    ecx
  403714:	add    BYTE PTR [edi+0x0],bl
  403717:	push   esp
  403718:	add    BYTE PTR [esi],dh
  40371a:	add    BYTE PTR [eax+eax*1],dh
  40371d:	pop    edi
  40371e:	add    BYTE PTR [ecx+0x0],dl
  403721:	push   esp
  403722:	add    BYTE PTR [edx+0x0],al
  403725:	add    BYTE PTR [eax],al
  403727:	dec    ecx
  403728:	add    BYTE PTR [eax],dh
  40372a:	add    BYTE PTR [eax+eax*1+0x5f],cl
  40372e:	add    BYTE PTR [edx+0x0],dl
  403731:	inc    edi
  403732:	add    BYTE PTR [ecx+0x0],bl
  403735:	cmp    DWORD PTR [eax],eax
  403737:	pop    edi
  403738:	add    BYTE PTR [edx+0x0],bl
  40373b:	dec    eax
  40373c:	add    BYTE PTR [ecx],dh
  40373e:	add    BYTE PTR [esi],dh
  403740:	add    BYTE PTR [eax],al
  403742:	add    BYTE PTR [ecx+0x0],cl
  403745:	dec    edi
  403746:	add    BYTE PTR [eax+eax*1+0x5f],cl
  40374a:	add    BYTE PTR [edi+0x0],cl
  40374d:	xor    al,0x0
  40374f:	cmp    DWORD PTR [eax],eax
  403751:	pop    edi
  403752:	add    BYTE PTR [ecx+0x0],dl
  403755:	cmp    BYTE PTR [eax],al
  403757:	inc    esp
  403758:	add    BYTE PTR [eax],al
  40375a:	add    BYTE PTR [ebx+0x0],cl
  40375d:	xor    DWORD PTR [eax],eax
  40375f:	aaa    
  403760:	add    BYTE PTR [edi+0x0],bl
  403763:	dec    ebx
  403764:	add    BYTE PTR [ebp+0x0],dl
  403767:	add    BYTE PTR ss:[eax],al
  40376a:	add    BYTE PTR [eax],al
  40376c:	sbb    al,BYTE PTR [eax-0x1d]
  40376f:	dec    esi
  403770:	jecxz  0x403711
  403772:	iret   
  403773:	iret   
  403774:	iret   
  403775:	sbb    BYTE PTR ds:0xf30a8414,dl
  40377b:	cli    
  40377c:	cld    
  40377d:	stc    
  40377e:	ret    0xa84
  403781:	sti    
  403782:	cmc    
  403783:	cld    
  403784:	stc    
  403785:	ret    0xa40
  403788:	mov    DWORD PTR [esi+0xa],0xf30240c7
  40378f:	mov    al,0x5f
  403791:	cmp    ah,BYTE PTR [edi+0x7a]
  403794:	cmp    BYTE PTR [eax+0x51916ab7],al
  40379a:	ja     0x4037bc
  40379c:	xchg   DWORD PTR [esi+0x2],eax
  40379f:	test   DWORD PTR [eax+0x2],0x208038f3
  4037a6:	xchg   DWORD PTR [esi+0x2],eax
  4037a9:	inc    DWORD PTR [eax+0x2]
  4037ac:	repz cmp BYTE PTR [eax+0x2468720],al
  4037b3:	jmp    0x4037f5
  4037b5:	add    dh,bl
  4037b7:	cmp    BYTE PTR [eax+0x42468720],al
  4037bd:	ja     0x40378b
  4037bf:	int3   
  4037c0:	int3   
  4037c1:	test   BYTE PTR [edx],cl
  4037c3:	lahf   
  4037c4:	cli    
  4037c5:	jl     0x4037bf
  4037c7:	ret    0xa84
  4037ca:	jmp    0x4037c6
  4037cc:	in     al,dx
  4037cd:	stc    
  4037ce:	ret    0xa84
  4037d1:	inc    ebx
  4037d2:	idiv   ah
  4037d4:	stc    
  4037d5:	ret    0x2861
  4037d8:	push   ss
  4037d9:	inc    esi
  4037da:	add    ch,bh
  4037dc:	inc    esi
  4037dd:	add    ch,bh
  4037df:	popa   
  4037e0:	push   0xef024616
  4037e5:	inc    esi
  4037e6:	add    ch,bh
  4037e8:	test   BYTE PTR [edx],cl
  4037ea:	out    dx,eax
  4037eb:	add    bh,cl
  4037ed:	iret   
  4037ee:	iret   
  4037ef:	test   BYTE PTR [edx],cl
  4037f1:	out    dx,eax
  4037f2:	push   cs
  4037f3:	iret   
  4037f4:	iret   
  4037f5:	iret   
  4037f6:	inc    eax
  4037f7:	add    dh,bl
  4037f9:	cmp    BYTE PTR [eax+0x2468720],al
  4037ff:	out    dx,eax
  403800:	inc    eax
  403801:	add    dh,bl
  403803:	cmp    BYTE PTR [eax+0x2468720],al
  403809:	out    dx,eax
  40380a:	test   BYTE PTR [edx],cl
  40380c:	fwait
  40380d:	sbb    cl,cl
  40380f:	iret   
  403810:	iret   
  403811:	test   BYTE PTR [edx],cl
  403813:	xchg   edi,eax
  403814:	cmp    bh,cl
  403816:	iret   
  403817:	iret   
  403818:	test   BYTE PTR [edx],cl
  40381a:	xchg   ebx,eax
  40381b:	je     0x4037ec
  40381d:	iret   
  40381e:	iret   
  40381f:	inc    edx
  403820:	mov    dl,0x1f
  403822:	int3   
  403823:	int3   
  403824:	int3   
  403825:	inc    edx
  403826:	mov    edx,0xcccccc3f
  40382b:	out    0xc1,eax
  40382d:	(bad)  
  40382e:	iret   
  40382f:	iret   
  403830:	int3   
  403831:	add    dl,BYTE PTR [ebx+0x2cce17a]
  403837:	xchg   edi,eax
  403838:	jp     0x403827
  40383a:	int3   
  40383b:	add    bl,BYTE PTR [ebx+0xa84997a]
  403841:	xchg   edi,eax
  403842:	ror    BYTE PTR [edi],0xcf
  403845:	iret   
  403846:	inc    eax
  403847:	or     dh,bl
  403849:	cmp    BYTE PTR [eax+0x51916a8d],cl
  40384f:	ja     0x403871
  403851:	test   DWORD PTR [esi+0xa],eax
  403854:	jecxz  0x403896
  403856:	or     dh,bl
  403858:	dec    eax
  403859:	push   0x47
  40385b:	iret   
  40385c:	cmp    BYTE PTR [eax+0xa468520],cl
  403862:	xchg   ebx,eax
  403863:	imul   ebp,DWORD PTR [esi-0x30303029],0x46
  40386a:	or     al,BYTE PTR [edi+0x40]
  40386d:	(bad)  
  40386f:	inc    esi
  403870:	dec    edx
  403871:	jnp    0x40383f
  403873:	int3   
  403874:	int3   
  403875:	inc    eax
  403876:	movnti DWORD PTR [esi+0xa],eax
  40387a:	dec    ebx
  40387b:	inc    eax
  40387c:	or     al,bh
  40387e:	inc    edx
  40387f:	add    al,BYTE PTR [edi+0x46]
  403882:	inc    edi
  403883:	scas   eax,DWORD PTR es:[edi]
  403884:	into   
  403885:	iret   
  403886:	iret   
  403887:	inc    eax
  403888:	or     al,bh
  40388a:	inc    edx
  40388b:	inc    edx
  40388c:	jnp    0x40385a
  40388e:	int3   
  40388f:	int3   
  403890:	inc    esi
  403891:	inc    edi
  403892:	stos   DWORD PTR es:[edi],eax
  403893:	into   
  403894:	iret   
  403895:	iret   
  403896:	inc    eax
  403897:	or     al,bh
  403899:	int3   
  40389a:	jp     0x403863
  40389c:	inc    edx
  40389d:	add    cl,BYTE PTR [ebx+0x46]
  4038a0:	inc    edi
  4038a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038a2:	into   
  4038a3:	iret   
  4038a4:	iret   
  4038a5:	out    0x97,eax
  4038a7:	and    al,0xcf
  4038a9:	iret   
  4038aa:	inc    eax
  4038ab:	add    dh,bl
  4038ad:	cmp    BYTE PTR [eax-0x78cf62e0],al
  4038b3:	fmul   QWORD PTR [ebx-0x78]
  4038b6:	leave  
  4038b7:	iret   
  4038b8:	iret   
  4038b9:	inc    eax
  4038ba:	or     al,bh
  4038bc:	inc    eax
  4038bd:	dec    edi
  4038be:	pop    ebx
  4038bf:	into   
  4038c0:	iret   
  4038c1:	iret   
  4038c2:	inc    eax
  4038c3:	mov    DWORD PTR [eax+0xa],0x5b4f40c7
  4038ca:	into   
  4038cb:	iret   
  4038cc:	iret   
  4038cd:	inc    eax
  4038ce:	iret   
  4038cf:	enter  0x330e,0x40
  4038d3:	add    al,bh
  4038d5:	inc    eax
  4038d6:	inc    esi
  4038d7:	fwait
  4038d8:	into   
  4038d9:	iret   
  4038da:	iret   
  4038db:	inc    edx
  4038dc:	pop    edx
  4038dd:	jg     0x4038ab
  4038df:	int3   
  4038e0:	int3   
  4038e1:	sbb    DWORD PTR [eax+0x1a],eax
  4038e4:	mov    DWORD PTR [eax+0x59],0xcfcfce43
  4038eb:	inc    eax
  4038ec:	fxch   st(0)
  4038ee:	pop    edi
  4038ef:	inc    edi
  4038f0:	iret   
  4038f1:	iret   
  4038f2:	iret   
  4038f3:	popa   
  4038f4:	retf   
  4038f5:	int3   
  4038f6:	mov    edi,0xcfcfcf43
  4038fb:	sbb    esp,ecx
  4038fd:	push   ds
  4038fe:	ror    esp,cl
  403900:	jp     0x4038c9
  403902:	inc    eax
  403903:	jb     0x4038cc
  403905:	inc    eax
  403906:	or     al,bh
  403908:	inc    eax
  403909:	pop    edi
  40390a:	mov    bh,0xce
  40390c:	iret   
  40390d:	iret   
  40390e:	test   BYTE PTR [edx],cl
  403910:	mov    bh,0x68
  403912:	ja     0x403984
  403914:	jbe    0x40389a
  403916:	or     dh,BYTE PTR [ebx+0x654c6967]
  40391c:	test   BYTE PTR gs:[edx],cl
  40391f:	(bad)  
  403920:	fstp   QWORD PTR [esp+eax*4+0x77c5ab0a]
  403927:	(bad)  
  403928:	test   BYTE PTR fs:[edx],cl
  40392b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40392c:	jge    0x4039a4
  40392e:	(bad)  [eax-0x7c]
  403931:	or     ah,BYTE PTR [ebx-0x2d829bb4]
  403937:	test   BYTE PTR [edx],cl
  403939:	mov    edi,0x76616971
  40393e:	test   BYTE PTR [edx],cl
  403940:	mov    ebx,0x9cdd6765
  403945:	test   BYTE PTR [edx],cl
  403947:	pop    edi
  403948:	lds    esi,FWORD PTR [edi-0x39]
  40394b:	test   BYTE PTR fs:[edx],cl
  40394e:	pop    ebx
  40394f:	jge    0x4039c7
  403951:	(bad)  [eax-0x7c]
  403954:	or     dl,BYTE PTR [edi+0x4c]
  403957:	fs jge 0x40392c
  40395a:	test   BYTE PTR [edx],cl
  40395c:	push   ebx
  40395d:	jno    0x4039c8
  40395f:	popa   
  403960:	jbe    0x4038e6
  403962:	or     ch,BYTE PTR [edi-0x6324989b]
  403968:	out    0xb,eax
  40396a:	and    al,0xcf
  40396c:	iret   
  40396d:	pop    ds
  40396e:	inc    eax
  40396f:	or     al,bh
  403971:	inc    eax
  403972:	dec    edi
  403973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403974:	into   
  403975:	iret   
  403976:	iret   
  403977:	int3   
  403978:	aas    
  403979:	out    0x9a,eax
  40397b:	sub    bh,cl
  40397d:	iret   
  40397e:	dec    edx
  40397f:	(bad)  
  403980:	jp     0x4039a1
  403982:	inc    eax
  403983:	or     al,bh
  403985:	inc    eax
  403986:	dec    edi
  403987:	fwait
  403988:	into   
  403989:	iret   
  40398a:	iret   
  40398b:	inc    eax
  40398c:	jb     0x403955
  40398e:	dec    eax
  40398f:	(bad)  
  403990:	retf   
  403991:	inc    esi
  403992:	or     ah,bh
  403994:	inc    eax
  403995:	or     al,bh
  403997:	inc    eax
  403998:	pop    edi
  403999:	mov    bh,0xce
  40399b:	iret   
  40399c:	iret   
  40399d:	out    0xdc,eax
  40399f:	and    al,0xcf
  4039a1:	iret   
  4039a2:	pop    ds
  4039a3:	inc    eax
  4039a4:	or     ah,bh
  4039a6:	int3   
  4039a7:	fisttp WORD PTR [edx-0x71]
  4039aa:	jp     0x4039d1
  4039ac:	inc    eax
  4039ad:	or     al,bh
  4039af:	inc    eax
  4039b0:	dec    edi
  4039b1:	fwait
  4039b2:	into   
  4039b3:	iret   
  4039b4:	iret   
  4039b5:	inc    eax
  4039b6:	jb     0x40397f
  4039b8:	dec    eax
  4039b9:	(bad)  
  4039ba:	fild   WORD PTR [esi+0xa]
  4039bd:	out    0x40,eax
  4039bf:	or     al,bh
  4039c1:	inc    eax
  4039c2:	pop    edi
  4039c3:	mov    bh,0xce
  4039c5:	iret   
  4039c6:	iret   
  4039c7:	out    0xea,eax
  4039c9:	and    eax,0x401fcfcf
  4039ce:	or     ah,bh
  4039d0:	int3   
  4039d1:	fild   WORD PTR [eax+0xa]
  4039d4:	repz inc eax
  4039d6:	add    dl,BYTE PTR [edi-0x7adf77c8]
  4039dc:	xor    BYTE PTR [esi-0x3181b424],cl
  4039e2:	iret   
  4039e3:	iret   
  4039e4:	inc    eax
  4039e5:	or     bh,bl
  4039e7:	cmp    BYTE PTR [eax-0x78df62c0],cl
  4039ed:	enter  0x9702,0x40
  4039f1:	or     ah,bl
  4039f3:	xor    BYTE PTR [esi-0x31eebb24],cl
  4039f9:	iret   
  4039fa:	iret   
  4039fb:	test   BYTE PTR [edx],cl
  4039fd:	out    0xcf,eax
  4039ff:	iret   
  403a00:	iret   
  403a01:	iret   
  403a02:	int3   
  403a03:	jp     0x4039cc
  403a05:	inc    eax
  403a06:	jb     0x4039cf
  403a08:	inc    eax
  403a09:	or     al,bh
  403a0b:	inc    eax
  403a0c:	pop    edi
  403a0d:	mov    ebx,0xe7cfcfce
  403a12:	push   eax
  403a13:	and    eax,0x401fcfcf
  403a18:	or     al,bh
  403a1a:	inc    eax
  403a1b:	dec    edi
  403a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a1d:	into   
  403a1e:	iret   
  403a1f:	iret   
  403a20:	int3   
  403a21:	aas    
  403a22:	out    0x23,eax
  403a24:	sub    bh,cl
  403a26:	iret   
  403a27:	inc    eax
  403a28:	add    al,bh
  403a2a:	inc    eax
  403a2b:	inc    esi
  403a2c:	push   ebx
  403a2d:	into   
  403a2e:	iret   
  403a2f:	iret   
  403a30:	inc    esi
  403a31:	into   
  403a32:	inc    eax
  403a33:	or     al,bh
  403a35:	inc    eax
  403a36:	mov    bh,0x9b
  403a38:	into   
  403a39:	iret   
  403a3a:	iret   
  403a3b:	inc    eax
  403a3c:	jp     0x403a05
  403a3e:	cmp    BYTE PTR [edi-0x18a0e5be],cl
  403a44:	lods   al,BYTE PTR ds:[esi]
  403a45:	and    eax,0x401fcfcf
  403a4a:	or     al,bh
  403a4c:	inc    eax
  403a4d:	dec    edi
  403a4e:	push   ebx
  403a4f:	into   
  403a50:	iret   
  403a51:	iret   
  403a52:	int3   
  403a53:	aas    
  403a54:	int3   
  403a55:	adc    al,0xc7
  403a57:	inc    esi
  403a58:	or     ch,bh
  403a5a:	inc    eax
  403a5b:	or     al,bh
  403a5d:	inc    eax
  403a5e:	mov    bh,0x9b
  403a60:	into   
  403a61:	iret   
  403a62:	iret   
  403a63:	inc    eax
  403a64:	jp     0x403a2d
  403a66:	cmp    BYTE PTR [edi-0x1854e5be],cl
  403a6c:	je     0x403a93
  403a6e:	iret   
  403a6f:	iret   
  403a70:	pop    ds
  403a71:	inc    eax
  403a72:	or     al,bh
  403a74:	inc    eax
  403a75:	dec    edi
  403a76:	push   ebx
  403a77:	into   
  403a78:	iret   
  403a79:	iret   
  403a7a:	int3   
  403a7b:	aas    
  403a7c:	int3   
  403a7d:	adc    al,0xc7
  403a7f:	dec    eax
  403a80:	push   0xffffff9b
  403a82:	iret   
  403a83:	inc    eax
  403a84:	or     bl,BYTE PTR [ebx+0x48c4ef48]
  403a8a:	(bad)  
  403a8b:	ds pop ds
  403a8d:	int3   
  403a8e:	sbb    ch,bh
  403a90:	dec    edx
  403a91:	(bad)  
  403a92:	jp     0x403a5e
  403a94:	or     al,BYTE PTR cs:[ebx+0xa4027e0]
  403a9b:	mov    DWORD PTR [eax-0x49],0xcfcfce9b
  403aa2:	inc    eax
  403aa3:	jp     0x403a6c
  403aa5:	cmp    BYTE PTR [edi-0x1848e5be],cl
  403aab:	aaa    
  403aac:	and    eax,0x401fcfcf
  403ab1:	or     al,bh
  403ab3:	inc    eax
  403ab4:	dec    edi
  403ab5:	push   edi
  403ab6:	into   
  403ab7:	iret   
  403ab8:	iret   
  403ab9:	int3   
  403aba:	aas    
  403abb:	int3   
  403abc:	adc    al,0xc7
  403abe:	inc    esi
  403abf:	or     al,BYTE PTR [ebx+0x489b0acc]
  403ac5:	jb     0x403a62
  403ac7:	fistp  QWORD PTR [ecx-0x4a]
  403aca:	inc    eax
  403acb:	or     bh,bl
  403acd:	inc    eax
  403ace:	jp     0x403a97
  403ad0:	cmp    BYTE PTR [eax+0x51916a8c],cl
  403ad6:	ja     0x403af8
  403ad8:	test   BYTE PTR [edx+0x5a],al
  403adb:	pop    ds
  403adc:	int3   
  403add:	int3   
  403ade:	int3   
  403adf:	out    0xc8,eax
  403ae1:	and    eax,0x401fcfcf
  403ae6:	or     dh,bl
  403ae8:	inc    eax
  403ae9:	jp     0x403ab2
  403aeb:	cmp    BYTE PTR [eax+0x5a428420],cl
  403af1:	aas    
  403af2:	int3   
  403af3:	int3   
  403af4:	int3   
  403af5:	out    0xe2,eax
  403af7:	sub    cl,bh
  403af9:	iret   
  403afa:	pop    ds
  403afb:	int3   
  403afc:	sbb    al,BYTE PTR [ebx+0x38f30240]
  403b02:	and    BYTE PTR [eax],0x9c
  403b05:	xor    BYTE PTR [edi+0xa84c47a],al
  403b0b:	out    0xce,eax
  403b0d:	iret   
  403b0e:	iret   
  403b0f:	iret   
  403b10:	inc    eax
  403b11:	or     bh,bl
  403b13:	inc    eax
  403b14:	add    ah,bl
  403b16:	cmp    BYTE PTR [eax+0x50c74b42],cl
  403b1c:	sub    ch,BYTE PTR [edx+0x44]
  403b1f:	inc    esi
  403b20:	or     ah,bl
  403b22:	inc    eax
  403b23:	or     ah,bh
  403b25:	dec    edx
  403b26:	(bad)  
  403b27:	jnp    0x403b02
  403b29:	inc    eax
  403b2a:	or     bh,bl
  403b2c:	inc    eax
  403b2d:	add    dl,BYTE PTR [ebx+0x4b428838]
  403b33:	(bad)  
  403b34:	push   eax
  403b35:	sub    ch,BYTE PTR [edx+0x44]
  403b38:	inc    esi
  403b39:	or     dl,BYTE PTR [ebx+0x38fb0a40]
  403b3f:	mov    BYTE PTR [eax],ah
  403b41:	test   eax,0xa409772
  403b47:	jecxz  0x403b79
  403b49:	test   ah,bl
  403b4b:	inc    ebp
  403b4c:	mov    al,ds:0x8dcccccd
  403b51:	push   0xffffff91
  403b53:	push   ecx
  403b54:	ja     0x403b96
  403b56:	or     dl,BYTE PTR [ebx+0x30e30240]
  403b5c:	xchg   DWORD PTR [edx-0x22],edi
  403b5f:	int3   
  403b60:	jp     0x403b29
  403b62:	inc    edx
  403b63:	or     bh,bh
  403b65:	pop    ds
  403b66:	out    0x46,eax
  403b68:	cmp    al,0xcf
  403b6a:	iret   
  403b6b:	inc    esi
  403b6c:	or     dh,bh
  403b6e:	loopne 0x403b33
  403b70:	inc    eax
  403b71:	or     dh,bh
  403b73:	inc    eax
  403b74:	add    bh,bl
  403b76:	cmp    BYTE PTR [eax-0x38c162e0],al
  403b7c:	inc    eax
  403b7d:	or     dh,bl
  403b7f:	inc    eax
  403b80:	add    dh,bh
  403b82:	cmp    BYTE PTR [eax-0x71cf7ae0],cl
  403b88:	fmul   QWORD PTR [ebx+0x41]
  403b8b:	enter  0xcfcf,0x40
  403b8f:	or     dh,bl
  403b91:	inc    eax
  403b92:	add    bh,bh
  403b94:	cmp    BYTE PTR [eax-0x71cf7ae0],cl
  403b9a:	fmul   QWORD PTR [ebx+0x77]
  403b9d:	enter  0xcfcf,0x40
  403ba1:	add    dh,bl
  403ba3:	cmp    BYTE PTR [eax+0x29e09d20],al
  403ba9:	inc    eax
  403baa:	or     dh,bh
  403bac:	enter  0x468e,0xa
  403bb0:	out    dx,eax
  403bb1:	popa   
  403bb2:	sub    eax,0x99388e40
  403bb7:	ins    BYTE PTR es:[edi],dx
  403bb8:	hlt    
  403bb9:	hlt    
  403bba:	inc    eax
  403bbb:	or     ch,bh
  403bbd:	daa    
  403bbe:	fild   WORD PTR [eax+0xa]
  403bc1:	sti    
  403bc2:	cmp    BYTE PTR [eax+0x50ce4342],cl
  403bc8:	sub    ch,BYTE PTR [edx+0x44]
  403bcb:	inc    eax
  403bcc:	or     bh,bh
  403bce:	xor    BYTE PTR [edi+0xa409479],al
  403bd4:	repz inc eax
  403bd6:	or     bh,bh
  403bd8:	inc    eax
  403bd9:	add    dh,bh
  403bdb:	out    0x89,eax
  403bdd:	aas    
  403bde:	iret   
  403bdf:	iret   
  403be0:	inc    eax
  403be1:	test   DWORD PTR [eax+0xa],0x430240c7
  403be8:	inc    eax
  403be9:	dec    edi
  403bea:	fwait
  403beb:	into   
  403bec:	iret   
  403bed:	iret   
  403bee:	cmp    BYTE PTR [eax+0x401e9d20],al
  403bf4:	add    ch,bl
  403bf6:	cmp    BYTE PTR [eax+0x401e9d20],al
  403bfc:	add    dh,bl
  403bfe:	cmp    BYTE PTR [eax+0x1e9d2014],al
  403c04:	int3   
  403c05:	pop    ds
  403c06:	fild   DWORD PTR [eax+0x2]
  403c09:	repz cmp BYTE PTR [eax+0xa469d20],al
  403c10:	jmp    0x403c42
  403c12:	xchg   esp,ebx
  403c14:	dec    ebx
  403c15:	or     edi,0xffffffcf
  403c18:	iret   
  403c19:	adc    al,0x1f
  403c1b:	int3   
  403c1c:	jp     0x403c1d
  403c1e:	inc    eax
  403c1f:	adc    dh,bh
  403c21:	out    0x2d,eax
  403c23:	cmp    al,0xcf
  403c25:	iret   
  403c26:	inc    eax
  403c27:	or     al,bh
  403c29:	inc    eax
  403c2a:	jp     0x403bcb
  403c2c:	inc    eax
  403c2d:	dec    edi
  403c2e:	fwait
  403c2f:	into   
  403c30:	iret   
  403c31:	iret   
  403c32:	mov    cl,0x5f
  403c34:	cmp    ah,BYTE PTR [edi+0x7a]
  403c37:	cmp    cl,bh
  403c39:	mov    dh,0x6a
  403c3b:	xchg   ecx,eax
  403c3c:	push   ecx
  403c3d:	ja     0x403c5f
  403c3f:	(bad)  
  403c40:	adc    eax,0x38f37a40
  403c45:	stc    
  403c46:	and    dh,bh
  403c48:	adc    eax,0xccf77acc
  403c4d:	pop    ds
  403c4e:	xlat   BYTE PTR ds:[ebx]
  403c4f:	inc    eax
  403c50:	or     ch,bl
  403c52:	inc    esi
  403c53:	or     dh,bh
  403c55:	inc    esi
  403c56:	jb     0x403c57
  403c58:	inc    eax
  403c59:	or     bh,bh
  403c5b:	cmp    BYTE PTR [ecx+0x717b8f4a],bl
  403c61:	dec    eax
  403c62:	push   0xffffffe3
  403c64:	iret   
  403c65:	inc    eax
  403c66:	add    bh,bh
  403c68:	and    BYTE PTR [edx],al
  403c6a:	jecxz  0x403ccd
  403c6c:	fbld   TBYTE PTR [eax]
  403c6e:	adc    DWORD PTR [edi],0xc7748730
  403c74:	inc    eax
  403c75:	or     bh,bh
  403c77:	and    BYTE PTR [edx],cl
  403c79:	jecxz  0x403c9b
  403c7b:	mov    DWORD PTR [esi],esi
  403c7d:	or     ah,bl
  403c7f:	js     0x403ca2
  403c81:	inc    eax
  403c82:	jp     0x403c7b
  403c84:	enter  0xe37a,0x41
  403c88:	or     ecx,0x8940e302
  403c8e:	mov    fs,edi
  403c90:	retf   
  403c91:	inc    ecx
  403c92:	xchg   esi,eax
  403c93:	sub    ecx,eax
  403c95:	dec    edi
  403c96:	call   0x502131c7
  403c9b:	out    dx,al
  403c9c:	enter  0xe6f5,0xbe
  403ca0:	int    0x21
  403ca2:	xchg   edi,ecx
  403ca4:	ret    
  403ca5:	aad    0xcc
  403ca7:	or     ah,bl
  403ca9:	loopne 0x403c5c
  403cab:	cmp    BYTE PTR [esi+0x20ff7a40],al
  403cb1:	(bad)  
  403cb2:	popa   
  403cb3:	(bad)  
  403cb4:	and    cl,bh
  403cb6:	pop    ss
  403cb7:	xor    bh,bh
  403cb9:	je     0x403c7f
  403cbb:	inc    eax
  403cbc:	or     bh,bh
  403cbe:	and    BYTE PTR [esi-0x78cf76e0],cl
  403cc4:	js     0x403c86
  403cc6:	inc    eax
  403cc7:	or     dh,bh
  403cc9:	enter  0x278e,0xc3
  403ccd:	fisttp WORD PTR [esi]
  403ccf:	loopne 0x403c64
  403cd1:	inc    eax
  403cd2:	or     bh,bh
  403cd4:	dec    eax
  403cd5:	mov    DWORD PTR [edi],ecx
  403cd7:	xor    BYTE PTR [edi+0x6a8d4579],bl
  403cdd:	xchg   ecx,eax
  403cde:	push   ecx
  403cdf:	ja     0x403c91
  403ce1:	pop    edi
  403ce2:	cmp    ah,BYTE PTR [edi+0x7a]
  403ce5:	inc    eax
  403ce6:	or     bh,bh
  403ce8:	cmp    BYTE PTR [esi-0x288470b6],al
  403cee:	inc    eax
  403cef:	or     dh,bh
  403cf1:	inc    ecx
  403cf2:	retf   
  403cf3:	mov    DWORD PTR [eax+0x1a],0x23a23bf7
  403cfa:	imul   eax,DWORD PTR [edi-0x35],0xff0a40c1
  403d01:	push   cs
  403d02:	xor    BYTE PTR [edi+0xa40e779],al
  403d08:	test   DWORD PTR [esi+0xa],0xfb0a4093
  403d0f:	inc    eax
  403d10:	add    dh,bl
  403d12:	cmp    BYTE PTR [eax+0xa848520],cl
  403d18:	mov    edx,esp
  403d1a:	sub    al,0xd4
  403d1c:	fld    QWORD PTR [edx+ecx*1-0x2b382b79]
  403d23:	iret   
  403d24:	loopne 0x403d64
  403d26:	inc    eax
  403d27:	sbb    dl,BYTE PTR [ebx-0xfc709c0]
  403d2d:	inc    ecx
  403d2e:	inc    ebx
  403d2f:	xor    ch,BYTE PTR [edx+ebp*1+0x6a]
  403d33:	inc    esp
  403d34:	fmul   QWORD PTR [ebp+0x2a50d45b]
  403d3a:	push   0x44
  403d3c:	dec    edi
  403d3d:	(bad)  
  403d3e:	mov    ds:0xdc69e64f,al
  403d43:	mov    ch,0x86
  403d45:	xor    BYTE PTR [esi+0x240d77a],bl
  403d4b:	sti    
  403d4c:	cmp    BYTE PTR [eax+0x50364342],al
  403d52:	sub    ch,BYTE PTR [edx+0x44]
  403d55:	cmp    BYTE PTR [eax-0x30d09b2],al
  403d5b:	stc    
  403d5c:	ret    0x847a
  403d5f:	loopne 0x403d25
  403d61:	inc    eax
  403d62:	or     dh,bl
  403d64:	cmp    BYTE PTR [eax+0x2408520],cl
  403d6a:	repz cmp BYTE PTR [eax-0x78cf62e0],al
  403d71:	fmul   QWORD PTR [ebx+0x61]
  403d74:	into   
  403d75:	iret   
  403d76:	iret   
  403d77:	inc    eax
  403d78:	or     dl,BYTE PTR [ebx-0x7b38f0c0]
  403d7e:	or     bh,bl
  403d80:	cli    
  403d81:	cld    
  403d82:	stc    
  403d83:	ret    0xa84
  403d86:	jmp    0x403d93
  403d88:	and    bh,al
  403d8a:	ret    0xa84
  403d8d:	cmp    edx,0xffffffec
  403d90:	stc    
  403d91:	ret    0xa84
  403d94:	out    0xf6,eax
  403d96:	cld    
  403d97:	stc    
  403d98:	ret    0xa46
  403d9b:	xchg   edi,eax
  403d9c:	inc    eax
  403d9d:	or     al,bh
  403d9f:	inc    eax
  403da0:	add    ah,bh
  403da2:	cmp    BYTE PTR [eax+0x401e9d20],al
  403da8:	add    al,BYTE PTR [ebx-0x3164b0c0]
  403dae:	iret   
  403daf:	iret   
  403db0:	cmp    BYTE PTR [eax+0x401e9d20],al
  403db6:	add    ch,bl
  403db8:	cmp    BYTE PTR [eax+0x401e9d20],al
  403dbe:	add    bh,bl
  403dc0:	cmp    BYTE PTR [eax-0x33e162e0],al
  403dc6:	pop    ds
  403dc7:	fild   DWORD PTR [eax-0x9]
  403dca:	inc    eax
  403dcb:	or     al,bh
  403dcd:	inc    eax
  403dce:	add    ah,bh
  403dd0:	inc    eax
  403dd1:	dec    edi
  403dd2:	fwait
  403dd3:	into   
  403dd4:	iret   
  403dd5:	iret   
  403dd6:	cmp    BYTE PTR [eax+0x401e9d20],al
  403ddc:	add    al,BYTE PTR [ebx-0x62df7fc8]
  403de2:	push   ds
  403de3:	inc    eax
  403de4:	add    bh,bl
  403de6:	int3   
  403de7:	jp     0x403d80
  403de9:	cmp    BYTE PTR [eax-0x33e162e0],al
  403def:	pop    ds
  403df0:	fild   DWORD PTR [eax+0x2]
  403df3:	sti    
  403df4:	cmp    BYTE PTR [eax+0xa469d20],al
  403dfa:	out    0x30,eax
  403dfc:	pushf  
  403dfd:	fmul   QWORD PTR [ebx+0x9]
  403e00:	into   
  403e01:	iret   
  403e02:	iret   
  403e03:	inc    eax
  403e04:	add    bh,bl
  403e06:	cmp    BYTE PTR [eax-0x78cf62e0],al
  403e0c:	fmul   QWORD PTR [ebx+0x38]
  403e0f:	into   
  403e10:	iret   
  403e11:	iret   
  403e12:	test   BYTE PTR [edx],cl
  403e14:	jmp    0x403e0d
  403e16:	cld    
  403e17:	stc    
  403e18:	ret    0xa84
  403e1b:	inc    ebx
  403e1c:	hlt    
  403e1d:	cld    
  403e1e:	stc    
  403e1f:	ret    0x240
  403e22:	jmp    0x403e73
  403e24:	(bad)  
  403e25:	pop    edi
  403e26:	dec    edi
  403e27:	out    0x6a,al
  403e29:	inc    edi
  403e2a:	fadd   QWORD PTR [eax+0x2]
  403e2d:	sti    
  403e2e:	dec    edi
  403e2f:	(bad)  
  403e30:	pop    edi
  403e31:	dec    edi
  403e32:	out    0x6a,al
  403e34:	inc    edi
  403e35:	sbb    al,0xce
  403e37:	inc    eax
  403e38:	add    al,BYTE PTR [ebx+0x4f]
  403e3b:	(bad)  
  403e3c:	pop    edi
  403e3d:	dec    edi
  403e3e:	out    0x6a,al
  403e40:	inc    edi
  403e41:	sbb    al,0xc9
  403e43:	dec    eax
  403e44:	push   0x4f
  403e46:	iret   
  403e47:	dec    eax
  403e48:	stos   BYTE PTR es:[edi],al
  403e49:	jae    0x403e17
  403e4b:	int3   
  403e4c:	int3   
  403e4d:	iret   
  403e4e:	inc    edx
  403e4f:	inc    edx
  403e50:	jae    0x403e1e
  403e52:	int3   
  403e53:	int3   
  403e54:	push   ds
  403e55:	int3   
  403e56:	jp     0x403def
  403e58:	pop    ds
  403e59:	inc    edx
  403e5a:	or     cl,BYTE PTR [edi+0x1f]
  403e5d:	inc    eax
  403e5e:	or     dl,BYTE PTR [ebx+0x40c37fcc]
  403e64:	or     dh,bh
  403e66:	dec    eax
  403e67:	(bad)  
  403e68:	fistp  WORD PTR [edi]
  403e6a:	adc    al,0xe7
  403e6c:	int3   
  403e6d:	into   
  403e6e:	iret   
  403e6f:	iret   
  403e70:	inc    esi
  403e71:	or     ch,bl
  403e73:	inc    eax
  403e74:	or     al,bh
  403e76:	inc    eax
  403e77:	add    bl,BYTE PTR [edi-0x3164b0c0]
  403e7d:	iret   
  403e7e:	iret   
  403e7f:	cmp    BYTE PTR [eax+0x401e9d20],al
  403e85:	add    bh,bl
  403e87:	cmp    BYTE PTR [eax+0x141e9d20],al
  403e8d:	int3   
  403e8e:	pop    ds
  403e8f:	xlat   BYTE PTR ds:[ebx]
  403e90:	inc    eax
  403e91:	or     ch,bl
  403e93:	retf   0x916a
  403e96:	push   ecx
  403e97:	ja     0x403ed1
  403e99:	mov    BYTE PTR [edx],dh
  403e9b:	cli    
  403e9c:	cld    
  403e9d:	stc    
  403e9e:	ret    0xa40
  403ea1:	mov    DWORD PTR [eax+0x4f],0xcfcfce9b
  403ea8:	inc    eax
  403ea9:	add    bl,BYTE PTR [edi-0x7fc7d186]
  403eaf:	and    BYTE PTR [ebp-0x4fdbfe2],bl
  403eb5:	cmp    BYTE PTR [eax-0x33e162e0],al
  403ebb:	jp     0x403eb4
  403ebd:	int3   
  403ebe:	pop    ds
  403ebf:	xlat   BYTE PTR ds:[ebx]
  403ec0:	inc    eax
  403ec1:	or     ah,bh
  403ec3:	inc    esi
  403ec4:	or     dh,bh
  403ec6:	inc    eax
  403ec7:	or     dl,BYTE PTR [edi-0x1f00f5ba]
  403ecd:	fdivr  DWORD PTR [eax]
  403ecf:	and    BYTE PTR [eax],0x9d
  403ed2:	push   ds
  403ed3:	inc    eax
  403ed4:	add    bh,bl
  403ed6:	cmp    BYTE PTR [eax-0x33e162e0],al
  403edc:	jp     0x403ec5
  403ede:	int3   
  403edf:	pop    ds
  403ee0:	xlat   BYTE PTR ds:[ebx]
  403ee1:	int3   
  403ee2:	jp     0x403eab
  403ee4:	inc    eax
  403ee5:	or     al,bh
  403ee7:	int3   
  403ee8:	mov    edi,0xcfcfce83
  403eed:	inc    edx
  403eee:	dec    edx
  403eef:	ja     0x403ebd
  403ef1:	int3   
  403ef2:	int3   
  403ef3:	pop    ds
  403ef4:	inc    eax
  403ef5:	or     al,bh
  403ef7:	inc    eax
  403ef8:	dec    edi
  403ef9:	mov    ecx,esi
  403efb:	iret   
  403efc:	iret   
  403efd:	int3   
  403efe:	aas    
  403eff:	inc    eax
  403f00:	or     al,bh
  403f02:	inc    eax
  403f03:	dec    edi
  403f04:	(bad)  
  403f05:	into   
  403f06:	iret   
  403f07:	iret   
  403f08:	int3   
  403f09:	aas    
  403f0a:	int3   
  403f0b:	jp     0x403f0c
  403f0d:	int3   
  403f0e:	jp     0x403f07
  403f10:	out    0x14,eax
  403f12:	fmul   st,st(7)
  403f14:	iret   
  403f15:	inc    esi
  403f16:	or     ch,bl
  403f18:	inc    eax
  403f19:	or     dh,bl
  403f1b:	inc    eax
  403f1c:	add    dh,bh
  403f1e:	cmp    BYTE PTR [eax-0x71cf7ae0],cl
  403f24:	jnp    0x403f52
  403f26:	inc    eax
  403f27:	or     al,bh
  403f29:	inc    eax
  403f2a:	add    bl,BYTE PTR [edi-0x3164b0c0]
  403f30:	iret   
  403f31:	iret   
  403f32:	cmp    BYTE PTR [eax+0x401e9d20],al
  403f38:	add    dh,bl
  403f3a:	cmp    BYTE PTR [eax-0x33e162e0],al
  403f40:	jp     0x403f39
  403f42:	int3   
  403f43:	pop    ds
  403f44:	xlat   BYTE PTR ds:[ebx]
  403f45:	ins    BYTE PTR es:[edi],dx
  403f46:	ins    DWORD PTR es:[edi],dx
  403f47:	adc    BYTE PTR [esi+0x1acfcb89],al
  403f4d:	inc    eax
  403f4e:	jecxz  0x403f6e
  403f50:	push   ds
  403f51:	inc    edx
  403f52:	or     dh,bh
  403f54:	inc    esi
  403f55:	or     dh,bl
  403f57:	adc    eax,0xb7f37a40
  403f5c:	add    BYTE PTR [ecx-0x3ab93d06],al
  403f62:	inc    eax
  403f63:	jp     0x403f5c
  403f65:	xor    bh,bh
  403f67:	ins    DWORD PTR es:[edi],dx
  403f68:	jp     0x403f31
  403f6a:	test   DWORD PTR [esi],ecx
  403f6c:	rcr    DWORD PTR [ebp+eax*4-0x7a2838f7],0x9
  403f74:	rcr    DWORD PTR [ebp+eax*4-0x798d36f2],0x88
  403f7c:	sbb    al,BYTE PTR [eax-0x1d]
  403f7f:	push   ds
  403f80:	push   ds
  403f81:	inc    edx
  403f82:	or     dh,bh
  403f84:	inc    esi
  403f85:	or     dh,bl
  403f87:	inc    eax
  403f88:	sbb    dh,bl
  403f8a:	mov    bh,0x3c
  403f8c:	push   0xffffff9c
  403f8e:	ret    0xc946
  403f91:	inc    eax
  403f92:	sbb    dh,bh
  403f94:	xor    BYTE PTR [edi+0xa40dc7a],bl
  403f9a:	mov    DWORD PTR [ebp-0x7a8f39f2],0x852fc40f
  403fa4:	push   cs
  403fa5:	lds    esi,FWORD PTR [edi-0x7b]
  403fa8:	push   cs
  403fa9:	enter  0x8660,0x89
  403fad:	retf   
  403fae:	iret   
  403faf:	sbb    al,BYTE PTR [eax-0x1d]
  403fb2:	push   ds
  403fb3:	push   ds
  403fb4:	inc    edx
  403fb5:	or     dh,bh
  403fb7:	inc    esi
  403fb8:	or     dh,bl
  403fba:	inc    eax
  403fbb:	sbb    dh,bl
  403fbd:	mov    bh,0x0
  403fbf:	and    esp,edx
  403fc1:	ret    
  403fc2:	inc    esi
  403fc3:	leave  
  403fc4:	inc    eax
  403fc5:	sbb    dh,bh
  403fc7:	xor    BYTE PTR [edi+0xe85cb7a],bl
  403fcd:	les    ebp,FWORD PTR [edi]
  403fcf:	inc    eax
  403fd0:	or     al,bh
  403fd2:	test   DWORD PTR [esi],ecx
  403fd4:	into   
  403fd5:	test   DWORD PTR gs:[edi],ecx
  403fd8:	(bad)  
  403fd9:	rol    BYTE PTR [esi+0x1acfcb89],1
  403fdf:	inc    eax
  403fe0:	jecxz  0x404000
  403fe2:	push   ds
  403fe3:	inc    edx
  403fe4:	or     dh,bh
  403fe6:	inc    esi
  403fe7:	or     dh,bl
  403fe9:	adc    eax,0xb7f37a40
  403fee:	jae    0x404055
  403ff0:	add    eax,ebx
  403ff2:	inc    esi
  403ff3:	lds    eax,FWORD PTR [eax+0x7a]
  403ff6:	div    DWORD PTR [eax]
  403ff8:	jmp    FWORD PTR [ebp+0x7a]
  403ffb:	rol    DWORD PTR [ebp+0x6573cb09],0x84
  404002:	push   cs
  404003:	enter  0x7360,0x85
  404007:	leave  
  404008:	mov    DWORD PTR [esi-0x1cbfe578],0xa421e1e
  404012:	test   DWORD PTR [esi+0xa],0xf31a40f3
  404019:	mov    bh,0x70
  40401b:	push   0xffffff80
  40401d:	ret    0xc946
  404020:	inc    eax
  404021:	sbb    dh,bh
  404023:	xor    BYTE PTR [edi+0xa40c07a],bl
  404029:	mov    DWORD PTR [ebp-0x7a8838f2],0x8565ce0f
  404033:	push   cs
  404034:	retf   0x867b
  404037:	mov    ebx,ecx
  404039:	iret   
  40403a:	adc    eax,0x86e79c40
  40403f:	int3   
  404040:	int3   
  404041:	int3   
  404042:	inc    eax
  404043:	xchg   esp,eax
  404044:	inc    eax
  404045:	popf   
  404046:	test   ebp,eax
  404048:	addr16 out 0x5f,eax
  40404b:	int3   
  40404c:	int3   
  40404d:	int3   
  40404e:	adc    eax,0x5859c40
  404053:	retf   0xe77b
  404056:	sbb    cl,ah
  404058:	int3   
  404059:	int3   
  40405a:	adc    eax,0x77c50585
  40405f:	out    0xd7,eax
  404061:	int3   
  404062:	int3   
  404063:	int3   
  404064:	test   DWORD PTR ds:0x954072c9,eax
  40406a:	out    0x92,al
  40406c:	int    0xcc
  40406e:	int3   
  40406f:	adc    al,0x15
  404071:	sbb    BYTE PTR [edx],bl
  404073:	inc    eax
  404074:	jecxz  0x4040b6
  404076:	or     ch,BYTE PTR [ebx]
  404078:	into   
  404079:	or     ah,BYTE PTR [edi]
  40407b:	pop    ds
  40407c:	repz inc eax
  40407e:	jp     0x404057
  404080:	into   
  404081:	jp     0x404056
  404083:	adc    eax,0xa2db7a40
  404088:	pop    ecx
  404089:	sbb    DWORD PTR [ecx+0x1d],eax
  40408c:	int    0x48
  40408e:	xchg   esp,ecx
  404090:	cwde   
  404091:	out    dx,eax
  404092:	hlt    
  404093:	lahf   
  404094:	pop    ds
  404095:	inc    ecx
  404096:	popf   
  404097:	dec    eax
  404098:	xchg   esp,ecx
  40409a:	cwde   
  40409b:	out    dx,eax
  40409c:	hlt    
  40409d:	lahf   
  40409e:	pop    ds
  40409f:	leave  
  4040a0:	add    DWORD PTR [eax-0x33],0x20c3e348
  4040a7:	(bad)  
  4040a8:	nop    DWORD PTR [edi]
  4040ab:	pop    ds
  4040ac:	pop    ds
  4040ad:	pop    ds
  4040ae:	adc    al,0x20
  4040b0:	cmc    
  4040b1:	adc    eax,0xb7cc8048
  4040b6:	iret   
  4040b7:	enter  0xcfcf,0x98
  4040bb:	out    dx,eax
  4040bc:	inc    edx
  4040bd:	inc    edi
  4040be:	xor    eax,0xb7cfcfc4
  4040c3:	iret   
  4040c4:	retf   
  4040c5:	iret   
  4040c6:	retf   
  4040c7:	sahf   
  4040c8:	out    0xf8,al
  4040ca:	mov    al,ds:0xe716ca61
  4040cf:	in     eax,0xc9
  4040d1:	iret   
  4040d2:	iret   
  4040d3:	jmp    0x427583ce
  4040d8:	or     al,0x40
  4040da:	jb     0x4040cf
  4040dc:	inc    eax
  4040dd:	or     bh,bh
  4040df:	and    BYTE PTR [edx+0x2b],dh
  4040e2:	sub    BYTE PTR [esi+eax*2-0x304018f6],al
  4040e9:	out    0xe8,eax
  4040eb:	leave  
  4040ec:	iret   
  4040ed:	iret   
  4040ee:	fmul   QWORD PTR [edx+0x5a]
  4040f1:	iret   
  4040f2:	iret   
  4040f3:	iret   
  4040f4:	inc    ecx
  4040f5:	add    bh,bl
  4040f7:	sub    BYTE PTR [edx-0x1d],dh
  4040fa:	cwde   
  4040fb:	in     al,0x4f
  4040fd:	out    0xc7,al
  4040ff:	cmc    
  404100:	xchg   esi,eax
  404101:	cwde   
  404102:	std    
  404103:	pop    ss
  404104:	enter  0x6dcd,0x42
  404108:	xor    ecx,DWORD PTR [esi+ecx*4-0x1c]
  40410c:	(bad)  
  40410d:	xor    eax,esp
  40410f:	adc    DWORD PTR [edx+0x43],eax
  404112:	dec    ebp
  404113:	arpl   bp,bx
  404115:	iret   
  404116:	iret   
  404117:	push   ds
  404118:	adc    eax,0xcfcecf8d
  40411d:	iret   
  40411e:	pop    ds
  40411f:	mov    edi,0x403b79ce
  404124:	jb     0x404119
  404126:	and    BYTE PTR [edx-0x6d],dh
  404129:	fdiv   QWORD PTR [ebp-0x7c9dbff4]
  40412f:	sahf   
  404130:	in     al,0x40
  404132:	popf   
  404133:	sub    ah,dh
  404135:	enter  0x429d,0x63
  404139:	add    cl,bh
  40413b:	out    0xbf,eax
  40413d:	leave  
  40413e:	iret   
  40413f:	iret   
  404140:	inc    eax
  404141:	xchg   DWORD PTR [esi-0x11b73803],ecx
  404147:	into   
  404148:	xor    dh,bh
  40414a:	(bad)  
  40414b:	iret   
  40414c:	into   
  40414d:	iret   
  40414e:	iret   
  40414f:	jp     0x40412e
  404151:	xor    BYTE PTR [ebp-0x241f6b87],al
  404157:	inc    eax
  404158:	bound  eax,QWORD PTR [ebx-0x3036a119]
  40415e:	iret   
  40415f:	syscall 
  404161:	dec    eax
  404162:	out    0xce,eax
  404164:	dec    eax
  404165:	std    
  404166:	into   
  404167:	xor    BYTE PTR [ebp+0x911e379],al
  40416d:	dec    eax
  40416e:	icebp  
  40416f:	retf   0x4001
  404172:	cmp    DWORD PTR [ecx-0x24],0xc0f14809
  404179:	add    DWORD PTR [esi+0x7986cdcb],edi
  40417f:	retf   
  404180:	mov    esi,0x2086cdc4
  404185:	sahf   
  404186:	sbb    eax,esp
  404188:	sbb    al,0xbf
  40418a:	mov    cs,ebp
  40418c:	xchg   edi,esp
  40418e:	sbb    al,0xc9
  404190:	iret   
  404191:	iret   
  404192:	jp     0x40416f
  404194:	pop    ss
  404195:	ins    BYTE PTR es:[edi],dx
  404196:	adc    DWORD PTR [esi],edx
  404198:	adc    DWORD PTR [esi],edx
  40419a:	int3   
  40419b:	cmp    ebp,DWORD PTR [ebx]
  40419d:	push   ds
  40419e:	sbb    DWORD PTR [ecx-0x30303a95],esi
  4041a4:	mov    esi,0xbf78e0cf
  4041a9:	or     ch,0x87
  4041ac:	out    0x3f,eax
  4041ae:	leave  
  4041af:	iret   
  4041b0:	iret   
  4041b1:	jp     0x4041f0
  4041b3:	mov    edi,0xe787cdfe
  4041b8:	fcmove st,st(1)
  4041ba:	iret   
  4041bb:	iret   
  4041bc:	jp     0x4041d6
  4041be:	pop    ss
  4041bf:	xor    eax,esp
  4041c1:	mov    edi,0xbfc979c6
  4041c6:	rcr    BYTE PTR [edi],0x40
  4041c9:	jp     0x4041be
  4041cb:	and    BYTE PTR [edx-0x6d],bh
  4041ce:	xor    BYTE PTR [edx+0x2b],bh
  4041d1:	fmul   QWORD PTR [ecx-0x62]
  4041d4:	into   
  4041d5:	iret   
  4041d6:	iret   
  4041d7:	mov    ds:0xa1f37240,eax
  4041dc:	out    0x5d,al
  4041de:	into   
  4041df:	iret   
  4041e0:	iret   
  4041e1:	mov    edi,0xcef6e797
  4041e6:	iret   
  4041e7:	iret   
  4041e8:	inc    eax
  4041e9:	jp     0x404182
  4041eb:	jnp    0x4041bd
  4041ed:	mov    edi,0xcee2e7eb
  4041f2:	iret   
  4041f3:	iret   
  4041f4:	inc    eax
  4041f5:	jp     0x404192
  4041f7:	jnp    0x4041bf
  4041f9:	inc    eax
  4041fa:	jp     0x40419b
  4041fc:	inc    eax
  4041fd:	add    bl,BYTE PTR [ebx+0x409f0246]
  404203:	add    dl,BYTE PTR [edi+0x409b0246]
  404209:	add    dl,BYTE PTR [ebx+0x46970246]
  40420f:	jp     0x4041a4
  404211:	pop    ss
  404212:	ins    BYTE PTR es:[edi],dx
  404213:	push   ss
  404214:	mov    cl,0x67
  404216:	ror    edi,0xcf
  404219:	mov    esi,0x1994c8c7
  40421e:	adc    al,0x33
  404220:	les    eax,FWORD PTR [ecx-0x72]
  404223:	jns    0x4041ee
  404225:	retf   
  404226:	enter  0x401f,0x62
  40422a:	and    edi,0xffffff8d
  40422d:	into   
  40422e:	iret   
  40422f:	iret   
  404230:	jp     0x40420d
  404232:	inc    eax
  404233:	or     ah,bh
  404235:	inc    eax
  404236:	jb     0x4041bb
  404238:	mov    gs,edi
  40423a:	enter  0x8620,0x61
  40423e:	(bad)  
  40423f:	ins    DWORD PTR es:[edi],dx
  404240:	inc    edx
  404241:	jae    0x404247
  404243:	retf   
  404244:	loopne 0x404280
  404246:	inc    eax
  404247:	bound  eax,QWORD PTR [ebx-0x183675b8]
  40424d:	push   edx
  40424e:	into   
  40424f:	iret   
  404250:	iret   
  404251:	jp     0x40422a
  404253:	inc    eax
  404254:	or     ah,bh
  404256:	inc    eax
  404257:	jb     0x4041dc
  404259:	mov    gs,edi
  40425b:	enter  0xc761,0x16
  40425f:	popa   
  404260:	(bad)  
  404261:	ins    DWORD PTR es:[edi],dx
  404262:	inc    edx
  404263:	mov    bl,0x4
  404265:	retf   
  404266:	into   
  404267:	iret   
  404268:	iret   
  404269:	loopne 0x40424a
  40426b:	mov    ebx,cs
  40426d:	leave  
  40426e:	iret   
  40426f:	iret   
  404270:	enter  0x8372,0x61
  404274:	fist   WORD PTR [esi]
  404276:	(bad)  
  404277:	iret   
  404278:	into   
  404279:	iret   
  40427a:	iret   
  40427b:	inc    esi
  40427c:	add    ch,bl
  40427e:	and    BYTE PTR [edi-0x1803bff1],cl
  404284:	addr16 into 
  404286:	iret   
  404287:	iret   
  404288:	inc    eax
  404289:	xchg   DWORD PTR [eax],esp
  40428b:	popf   
  40428c:	jns    0x404286
  40428e:	into   
  40428f:	add    ch,bl
  404291:	dec    eax
  404292:	jb     0x40421f
  404294:	retf   
  404295:	fmul   QWORD PTR [eax-0x41]
  404298:	iret   
  404299:	iret   
  40429a:	iret   
  40429b:	dec    eax
  40429c:	or     cl,BYTE PTR [ebx-0x14fdbf3c]
  4042a2:	dec    eax
  4042a3:	test   bl,0x79
  4042a6:	enter  0xc861,0x16
  4042aa:	inc    eax
  4042ab:	jb     0x404234
  4042ad:	mov    gs,esi
  4042af:	lds    esp,FWORD PTR [eax]
  4042b1:	(bad)  
  4042b2:	punpcklwd mm1,DWORD PTR [edi]
  4042b5:	ins    DWORD PTR es:[edi],dx
  4042b6:	inc    edx
  4042b7:	mov    bl,0x1c
  4042b9:	outs   dx,DWORD PTR ds:[esi]
  4042ba:	enter  0xcfcf,0x40
  4042be:	cld    
  4042bf:	out    0x23,eax
  4042c1:	into   
  4042c2:	iret   
  4042c3:	iret   
  4042c4:	inc    eax
  4042c5:	xchg   DWORD PTR [eax],esp
  4042c7:	popf   
  4042c8:	jns    0x4042c2
  4042ca:	inc    esi
  4042cb:	add    ah,bh
  4042cd:	inc    esi
  4042ce:	add    dl,BYTE PTR [ebx+0x79cbf648]
  4042d4:	js     0x404316
  4042d6:	dec    BYTE PTR [eax+0x6a]
  4042d9:	xchg   ebx,eax
  4042da:	into   
  4042db:	sahf   
  4042dc:	std    
  4042dd:	dec    eax
  4042de:	add    dl,BYTE PTR [ebx-0x9b7e237]
  4042e4:	fnstsw WORD PTR [eax-0x2a]
  4042e7:	mov    bh,0xbc
  4042e9:	leave  
  4042ea:	iret   
  4042eb:	iret   
  4042ec:	and    BYTE PTR [esi+0x6a999d40],cl
  4042f2:	xchg   ebx,eax
  4042f3:	enter  0x930a,0x9e
  4042f7:	out    dx,eax
  4042f8:	enter  0x870a,0x46
  4042fc:	or     al,BYTE PTR [ebx-0x2b7dd20]
  404302:	retf   
  404303:	out    0xaa,eax
  404305:	iret   
  404306:	iret   
  404307:	iret   
  404308:	sahf   
  404309:	loopne 0x4042a9
  40430b:	push   0xffffff93
  40430d:	ss adc ch,bh
  404310:	jns    0x4042d7
  404312:	int3   
  404313:	or     dl,BYTE PTR [ebx+0x1def1226]
  404319:	jp     0x404302
  40431b:	mov    bh,0xb
  40431d:	(bad)
  404320:	enter  0x870a,0x46
  404324:	or     al,BYTE PTR [ebx-0x346c9572]
  40432a:	popa   
  40432b:	retf   
  40432c:	ins    DWORD PTR es:[edi],dx
  40432d:	and    ah,cl
  40432f:	add    al,0x40
  404331:	test   BYTE PTR [eax+0x62],al
  404334:	and    edi,0xffffffb5
  404337:	iret   
  404338:	iret   
  404339:	iret   
  40433a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40433b:	into   
  40433c:	jnp    0x404306
  40433e:	(bad)  
  40433f:	jb     0x4042d4
  404341:	sahf   
  404342:	in     al,0x1d
  404344:	jp     0x404329
  404346:	loopne 0x404317
  404348:	int3   
  404349:	or     dl,BYTE PTR [ebx+0x48eb0240]
  40434f:	mov    cs,ecx
  404351:	inc    eax
  404352:	jb     0x404347
  404354:	inc    eax
  404355:	test   BYTE PTR [eax],ah
  404357:	or     ch,BYTE PTR [ebx]
  404359:	or     dl,BYTE PTR ss:[ebx-0xbbffe8c]
  404360:	and    BYTE PTR [edx-0x6d],bh
  404363:	inc    eax
  404364:	sbb    ah,BYTE PTR [edi]
  404366:	mov    ds:0x78f130a1,eax
  40436b:	enter  0x7a06,0xf4
  40436f:	inc    esi
  404370:	jb     0x404365
  404372:	fdiv   QWORD PTR [ebp+0x277230ff]
  404378:	fmul   QWORD PTR [ecx+0x10]
  40437b:	repnz int3 
  40437d:	int3   
  40437e:	out    0x21,eax
  404380:	iret   
  404381:	iret   
  404382:	iret   
  404383:	and    BYTE PTR [edi+0x332b6342],cl
  404389:	inc    eax
  40438a:	sbb    ch,BYTE PTR [edi]
  40438c:	inc    eax
  40438d:	jp     0x404386
  40438f:	and    BYTE PTR [edx-0x29],bh
  404392:	inc    esi
  404393:	cmp    DWORD PTR [eax+0x1a],eax
  404396:	and    eax,DWORD PTR [eax+0x72]
  404399:	repz and BYTE PTR [edx+0x2b],dh
  40439d:	inc    esi
  40439e:	xor    DWORD PTR [esi-0x769392f0],eax
  4043a4:	ror    edi,cl
  4043a6:	ins    DWORD PTR es:[edi],dx
  4043a7:	pop    ss
  4043a8:	and    BYTE PTR [edi+0x4e97e00f],cl
  4043ae:	lock iret 
  4043b0:	iret   
  4043b1:	iret   
  4043b2:	into   
  4043b3:	jns    0x404383
  4043b5:	mov    BYTE PTR [esi+0x4015c7e8],cl
  4043bb:	jp     0x4043b4
  4043bd:	xor    BYTE PTR [edx-0x2d],bh
  4043c0:	js     0x4043ad
  4043c2:	inc    eax
  4043c3:	or     ch,bh
  4043c5:	mov    gs,edi
  4043c7:	(bad)  
  4043c8:	mov    ds:0x46ef0a46,eax
  4043cd:	jp     0x4043c6
  4043cf:	ins    DWORD PTR es:[edi],dx
  4043d0:	mov    BYTE PTR [eax+0x2],al
  4043d3:	mov    ebx,esp
  4043d5:	mov    ch,0x8f
  4043d7:	mov    gs,esi
  4043d9:	retf   
  4043da:	enter  0xe70a,0xc8
  4043de:	mov    fs,eax
  4043e0:	(bad)
  4043e3:	(bad)
  4043e7:	inc    eax
  4043e8:	bound  eax,QWORD PTR [edi-0x30f59cbe]
  4043ee:	and    BYTE PTR [edi-0x30f59cbe],cl
  4043f4:	dec    esi
  4043f5:	lock iret 
  4043f7:	iret   
  4043f8:	iret   
  4043f9:	into   
  4043fa:	js     0x4043cf
  4043fc:	inc    eax
  4043fd:	add    ebp,DWORD PTR [ebx]
  4043ff:	aaa    
  404400:	mov    gs,WORD PTR [ebx+0x2b]
  404403:	das    
  404404:	(bad)  
  404405:	xor    BYTE PTR [ebx],al
  404407:	sub    edx,DWORD PTR [ebx]
  404409:	js     0x40445e
  40440b:	inc    ecx
  40440c:	fmulp  st(4),st
  40440e:	or     ebp,DWORD PTR [ebx]
  404410:	aaa    
  404411:	mov    gs,eax
  404413:	mov    DWORD PTR [edi+0x1b],0x80402f2b
  40441a:	fdiv   QWORD PTR [edx+ebx*1-0x3f197131]
  404421:	fdivr  QWORD PTR [ecx+eax*4+0x2f2b0336]
  404428:	js     0x4043fe
  40442a:	inc    eax
  40442b:	xchg   esi,eax
  40442c:	mov    dh,0xcf
  40442e:	(bad)  
  40442f:	iret   
  404430:	iret   
  404431:	and    BYTE PTR [ecx+0x65cae68e],al
  404437:	into   
  404438:	add    cl,bh
  40443a:	enter  0x428f,0x63
  40443e:	sub    ecx,DWORD PTR [edi]
  404440:	mov    BYTE PTR [esi+0x326cae1],cl
  404446:	sub    ebp,DWORD PTR [edi]
  404448:	and    BYTE PTR [esi-0x30e5d99b],dl
  40444e:	enter  0x488f,0x8f
  404452:	into   
  404453:	inc    edx
  404454:	arpl   WORD PTR [ebx],bp
  404456:	js     0x1f238476
  40445c:	inc    eax
  40445d:	inc    ecx
  40445e:	pop    ebx
  40445f:	into   
  404460:	iret   
  404461:	iret   
  404462:	adc    eax,0x40c77a40
  404467:	xor    eax,0x41403e46
  40446c:	pop    ebx
  40446d:	into   
  40446e:	iret   
  40446f:	iret   
  404470:	inc    eax
  404471:	mov    BYTE PTR [eax-0x47],0x5f
  404475:	into   
  404476:	iret   
  404477:	iret   
  404478:	inc    esi
  404479:	fld    QWORD PTR [eax+0x49]
  40447c:	pop    ebx
  40447d:	into   
  40447e:	iret   
  40447f:	iret   
  404480:	inc    eax
  404481:	mov    DWORD PTR [eax+0x6],0x84c7c833
  404488:	or     dh,bl
  40448a:	cli    
  40448b:	pushf  
  40448c:	stc    
  40448d:	ret    0xa40
  404490:	repz fdiv QWORD PTR [esi+eax*1+0x3a5f3ad5]
  404498:	addr16 jp 0x4044bd
  40449b:	push   0xffffff91
  40449d:	push   ecx
  40449e:	ja     0x40450d
  4044a0:	dec    edx
  4044a1:	mov    ?,WORD PTR [ebx-0x3d]
  4044a4:	inc    eax
  4044a5:	dec    ecx
  4044a6:	xchg   esi,ecx
  4044a8:	iret   
  4044a9:	iret   
  4044aa:	test   bh,cl
  4044ac:	cmc    
  4044ad:	cld    
  4044ae:	stc    
  4044af:	ret    0x8986
  4044b2:	retf   
  4044b3:	iret   
  4044b4:	sbb    al,BYTE PTR [eax-0x1d]
  4044b7:	dec    eax
  4044b8:	jecxz  0x4044dd
  4044ba:	dec    eax
  4044bb:	push   0xffffffef
  4044bd:	iret   
  4044be:	test   BYTE PTR [edx],cl
  4044c0:	out    0xfa,eax
  4044c2:	in     al,dx
  4044c3:	stc    
  4044c4:	ret    0xa84
  4044c7:	xchg   ebx,eax
  4044c8:	cmp    bh,ah
  4044ca:	stc    
  4044cb:	ret    0xa84
  4044ce:	fwait
  4044cf:	idiv   ah
  4044d1:	stc    
  4044d2:	ret    0xa84
  4044d5:	jmp    0x4044cb
  4044d7:	cld    
  4044d8:	stc    
  4044d9:	ret    0xa84
  4044dc:	fwait
  4044dd:	cli    
  4044de:	jl     0x4044d8
  4044e0:	ret    0xa40
  4044e3:	das    
  4044e4:	inc    eax
  4044e5:	dec    edi
  4044e6:	pop    ebx
  4044e7:	into   
  4044e8:	iret   
  4044e9:	iret   
  4044ea:	inc    esi
  4044eb:	or     bh,bl
  4044ed:	inc    eax
  4044ee:	or     ch,BYTE PTR [edi]
  4044f0:	sbb    BYTE PTR ds:0xce5fbf40,dl
  4044f6:	iret   
  4044f7:	iret   
  4044f8:	inc    eax
  4044f9:	or     ch,BYTE PTR [edi]
  4044fb:	inc    eax
  4044fc:	dec    edi
  4044fd:	inc    ebx
  4044fe:	into   
  4044ff:	iret   
  404500:	iret   
  404501:	inc    esi
  404502:	or     dh,bh
  404504:	inc    eax
  404505:	iret   
  404506:	adc    al,0x46
  404508:	jp     0x4044ed
  40450a:	dec    edx
  40450b:	(bad)  
  40450c:	jp     0x4044ce
  40450e:	int3   
  40450f:	jp     0x4044e4
  404511:	inc    eax
  404512:	sbb    ch,BYTE PTR [edi]
  404514:	out    0xc,eax
  404516:	int3   
  404517:	int3   
  404518:	int3   
  404519:	inc    eax
  40451a:	lds    eax,FWORD PTR [eax+0x2d]
  40451d:	enter  0x3317,0x40
  404521:	or     al,bl
  404523:	inc    eax
  404524:	add    dh,bh
  404526:	inc    eax
  404527:	(bad)  
  404528:	lea    ebx,[edi+0x3a]
  40452b:	addr16 jp 0x404566
  40452e:	test   DWORD PTR [edx+ebp*2+0x20775191],ecx
  404535:	test   BYTE PTR [eax],dh
  404537:	mov    ds,esp
  404539:	dec    edx
  40453a:	fmul   st,st(1)
  40453c:	iret   
  40453d:	iret   
  40453e:	inc    eax
  40453f:	or     bh,bl
  404541:	inc    eax
  404542:	iret   
  404543:	inc    esi
  404544:	or     bh,bh
  404546:	inc    eax
  404547:	or     ch,bl
  404549:	cmp    BYTE PTR [ebp+0x401f8420],al
  40454f:	or     ah,bh
  404551:	cmp    BYTE PTR [ebp-0x33e07be0],al
  404557:	js     0x404578
  404559:	inc    eax
  40455a:	or     al,bh
  40455c:	cmp    BYTE PTR [ebp-0x309e7be0],al
  404562:	popa   
  404563:	retf   
  404564:	pop    ds
  404565:	inc    eax
  404566:	or     ch,BYTE PTR [edi]
  404568:	retf   0xcfa1
  40456b:	iret   
  40456c:	iret   
  40456d:	pop    ds
  40456e:	inc    eax
  40456f:	or     ch,BYTE PTR [edi]
  404571:	inc    eax
  404572:	dec    edi
  404573:	push   edi
  404574:	into   
  404575:	iret   
  404576:	iret   
  404577:	int3   
  404578:	aas    
  404579:	inc    eax
  40457a:	or     bl,bh
  40457c:	int3   
  40457d:	lahf   
  40457e:	inc    eax
  40457f:	add    bh,bl
  404581:	inc    eax
  404582:	mov    BYTE PTR [eax+0x1a],0xf7
  404586:	inc    esi
  404587:	rol    DWORD PTR [eax+0x2],0xe3
  40458b:	inc    esi
  40458c:	into   
  40458d:	inc    edx
  40458e:	add    ch,bh
  404590:	push   ds
  404591:	inc    eax
  404592:	add    dl,BYTE PTR [ebx+0xa469d38]
  404598:	shl    DWORD PTR [eax],cl
  40459a:	pushf  
  40459b:	push   ds
  40459c:	int3   
  40459d:	js     0x4045be
  40459f:	pop    ds
  4045a0:	inc    eax
  4045a1:	or     al,bh
  4045a3:	cmp    BYTE PTR [ebp-0x349e7be0],al
  4045a9:	pop    ds
  4045aa:	inc    eax
  4045ab:	or     ch,BYTE PTR [edi]
  4045ad:	retf   0xcffd
  4045b0:	iret   
  4045b1:	iret   
  4045b2:	pop    ds
  4045b3:	inc    eax
  4045b4:	or     ch,BYTE PTR [edi]
  4045b6:	inc    eax
  4045b7:	dec    edi
  4045b8:	push   edi
  4045b9:	into   
  4045ba:	iret   
  4045bb:	iret   
  4045bc:	int3   
  4045bd:	aas    
  4045be:	inc    eax
  4045bf:	or     bl,bh
  4045c1:	int3   
  4045c2:	lahf   
  4045c3:	dec    eax
  4045c4:	mov    ecx,DWORD PTR [edi]
  4045c6:	dec    edx
  4045c7:	(bad)  
  4045c8:	jnp    0x4045f2
  4045ca:	dec    eax
  4045cb:	push   0xffffffc3
  4045cd:	iret   
  4045ce:	dec    eax
  4045cf:	jo     0x4045f0
  4045d1:	iret   
  4045d2:	jne    0x4045aa
  4045d4:	inc    eax
  4045d5:	or     dl,bl
  4045d7:	inc    eax
  4045d8:	add    bh,bh
  4045da:	and    BYTE PTR [edi-0x333124bf],al
  4045e0:	or     al,bl
  4045e2:	inc    edi
  4045e3:	fild   WORD PTR [eax+0x1a]
  4045e6:	ret    
  4045e7:	wrmsr  
  4045e9:	sbb    BYTE PTR [edi],bl
  4045eb:	jns    0x4045e9
  4045ed:	inc    eax
  4045ee:	sbb    dl,bl
  4045f0:	inc    eax
  4045f1:	add    DWORD PTR [ebx],esi
  4045f3:	enter  0x4081,0x4e
  4045f7:	scas   eax,DWORD PTR es:[edi]
  4045f8:	iret   
  4045f9:	iret   
  4045fa:	iret   
  4045fb:	inc    eax
  4045fc:	xchg   ecx,eax
  4045fd:	and    BYTE PTR [edx],dl
  4045ff:	dec    eax
  404601:	mov    DWORD PTR [esi+0x12],eax
  404604:	ret    
  404605:	inc    eax
  404606:	push   ss
  404607:	daa    
  404608:	enter  0x4691,0x2
  40460c:	fwait
  40460d:	inc    esi
  40460e:	adc    ah,bh
  404610:	test   BYTE PTR [edx],cl
  404612:	test   edi,0xe0cfcfcf
  404618:	jbe    0x404662
  40461a:	mov    edi,esi
  40461c:	sahf   
  40461d:	loope  0x404665
  40461f:	sbb    ch,bl
  404621:	jnp    0x404633
  404623:	inc    edx
  404624:	pop    ds
  404625:	mov    DWORD PTR [esi+0x1a],0xeb1a40f3
  40462c:	inc    esi
  40462d:	sbb    ch,bl
  40462f:	inc    eax
  404630:	sbb    dh,bl
  404632:	fdiv   QWORD PTR [ecx+ebx*8+0x4e971a46]
  404639:	jmp    0xd010230a
  40463e:	inc    esi
  40463f:	sbb    ah,bl
  404641:	inc    eax
  404642:	sbb    dl,BYTE PTR [edi-0x373c1e72]
  404648:	xchg   esp,eax
  404649:	cmp    BYTE PTR [ebp-0x3080eb2],dl
  40464f:	stc    
  404650:	ret    0x297a
  404653:	inc    eax
  404654:	(bad)  
  404656:	sbb    ah,bl
  404658:	inc    eax
  404659:	adc    dl,bl
  40465b:	dec    eax
  40465c:	xor    edx,ecx
  40465e:	iret   
  40465f:	jnp    0x40463f
  404661:	inc    eax
  404662:	add    al,bl
  404664:	enter  0xd1c3,0x40
  404668:	(bad)  
  40466a:	sbb    ah,bl
  40466c:	inc    esi
  40466d:	ret    
  40466e:	rol    DWORD PTR [eax+0x2],1
  404671:	fwait
  404672:	inc    eax
  404673:	adc    ah,bh
  404675:	dec    eax
  404676:	or     dh,bl
  404678:	leave  
  404679:	int3   
  40467a:	add    ch,bl
  40467c:	jp     0x40463c
  40467e:	inc    eax
  40467f:	sbb    bh,bl
  404681:	into   
  404682:	sbb    dh,bh
  404684:	inc    eax
  404685:	sbb    dh,bh
  404687:	xor    BYTE PTR [esi-0x55],bl
  40468a:	iret   
  40468b:	iret   
  40468c:	iret   
  40468d:	js     0x40466d
  40468f:	enter  0xfb0a,0x40
  404693:	pop    ds
  404694:	retf   
  404695:	inc    esi
  404696:	sbb    bh,bl
  404698:	dec    edx
  404699:	cdq    
  40469a:	fmul   QWORD PTR [edx+0x76]
  40469d:	int3   
  40469e:	int3   
  40469f:	int3   
  4046a0:	inc    edx
  4046a1:	or     ch,bh
  4046a3:	pop    ds
  4046a4:	inc    eax
  4046a5:	or     dl,BYTE PTR [ebx-0x7bdf7ac8]
  4046ab:	pop    ds
  4046ac:	int3   
  4046ad:	jle    0x4046ce
  4046af:	inc    eax
  4046b0:	or     al,bh
  4046b2:	int3   
  4046b3:	jp     0x4046b4
  4046b5:	cmp    BYTE PTR [ebp-0x349e7be0],al
  4046bb:	pop    ds
  4046bc:	inc    eax
  4046bd:	or     ch,BYTE PTR [edi]
  4046bf:	retf   0xcffd
  4046c2:	iret   
  4046c3:	iret   
  4046c4:	pop    ds
  4046c5:	inc    eax
  4046c6:	or     ch,BYTE PTR [edi]
  4046c8:	inc    eax
  4046c9:	dec    edi
  4046ca:	push   edi
  4046cb:	into   
  4046cc:	iret   
  4046cd:	iret   
  4046ce:	int3   
  4046cf:	aas    
  4046d0:	inc    eax
  4046d1:	or     bl,bh
  4046d3:	int3   
  4046d4:	lahf   
  4046d5:	inc    eax
  4046d6:	or     ch,BYTE PTR [edi]
  4046d8:	inc    eax
  4046d9:	dec    edi
  4046da:	dec    edi
  4046db:	into   
  4046dc:	iret   
  4046dd:	iret   
  4046de:	enter  0xc30a,0x40
  4046e2:	add    al,bl
  4046e4:	inc    esi
  4046e5:	mov    DWORD PTR [eax+0xa],0x4b4f402f
  4046ec:	into   
  4046ed:	iret   
  4046ee:	iret   
  4046ef:	inc    eax
  4046f0:	iret   
  4046f1:	inc    eax
  4046f2:	iret   
  4046f3:	dec    eax
  4046f4:	mov    ebp,DWORD PTR [edi]
  4046f6:	int3   
  4046f7:	jp     0x4046d0
  4046f9:	test   DWORD PTR [ebx],ecx
  4046fb:	xlat   BYTE PTR ds:[ebx]
  4046fc:	into   
  4046fd:	ret    
  4046fe:	int3   
  4046ff:	jp     0x4046dc
  404701:	int3   
  404702:	jp     0x4046d7
  404704:	int3   
  404705:	cwde   
  404706:	inc    eax
  404707:	or     al,bl
  404709:	enter  0x2f0a,0x42
  40470d:	add    cl,bl
  40470f:	inc    esi
  404710:	or     ch,BYTE PTR [edi]
  404712:	inc    eax
  404713:	or     ch,BYTE PTR [edi]
  404715:	inc    eax
  404716:	or     ch,BYTE PTR [edi]
  404718:	inc    eax
  404719:	pop    edi
  40471a:	pop    edi
  40471b:	into   
  40471c:	iret   
  40471d:	iret   
  40471e:	inc    eax
  40471f:	or     ch,BYTE PTR [edi]
  404721:	inc    eax
  404722:	dec    edi
  404723:	inc    ebx
  404724:	into   
  404725:	iret   
  404726:	iret   
  404727:	inc    eax
  404728:	aas    
  404729:	ss ds jns 0x404759
  40472d:	inc    eax
  40472e:	cmp    DWORD PTR [eax+0x31],eax
  404731:	inc    eax
  404732:	jne    0x404767
  404734:	inc    edx
  404735:	jnp    0x40476b
  404737:	pop    ds
  404738:	inc    eax
  404739:	aaa    
  40473a:	enter  0x360d,0x36
  40473e:	js     0x404703
  404740:	inc    eax
  404741:	aas    
  404742:	inc    eax
  404743:	into   
  404744:	inc    eax
  404745:	fldenv [eax]
  404747:	test   eax,ecx
  404749:	lahf   
  40474a:	inc    esi
  40474b:	fiadd  WORD PTR [eax+0xa]
  40474e:	ret    
  40474f:	loopne 0x40475f
  404751:	int3   
  404752:	jp     0x404783
  404754:	out    0xd8,eax
  404756:	dec    esp
  404758:	int3   
  404759:	inc    eax
  40475a:	or     ch,BYTE PTR [edi]
  40475c:	inc    eax
  40475d:	dec    edi
  40475e:	xchg   esi,ecx
  404760:	iret   
  404761:	iret   
  404762:	inc    eax
  404763:	iret   
  404764:	cmp    BYTE PTR [ebp+0xa408420],al
  40476a:	das    
  40476b:	jp     0x404742
  40476d:	inc    eax
  40476e:	add    ch,BYTE PTR [edi]
  404770:	inc    eax
  404771:	inc    esi
  404772:	or     esi,0xffffffcf
  404775:	iret   
  404776:	int3   
  404777:	ds inc eax
  404779:	dec    edi
  40477a:	fwait
  40477b:	into   
  40477c:	iret   
  40477d:	iret   
  40477e:	int3   
  40477f:	pop    ds
  404780:	daa    
  404781:	loopne 0x404745
  404783:	inc    eax
  404784:	dec    edi
  404785:	jae    0x404755
  404787:	iret   
  404788:	iret   
  404789:	inc    eax
  40478a:	mov    DWORD PTR [edx+0xa],0x38c7cecb
  404791:	(bad)  
  404792:	ins    BYTE PTR es:[edi],dx
  404793:	ins    DWORD PTR es:[edi],dx
  404794:	adc    BYTE PTR [esi+0x1acfd389],al
  40479a:	inc    eax
  40479b:	jecxz  0x4047eb
  40479d:	jecxz  0x404756
  40479f:	iret   
  4047a0:	iret   
  4047a1:	iret   
  4047a2:	sbb    BYTE PTR [eax-0x78],al
  4047a5:	pop    esi
  4047a6:	inc    eax
  4047a7:	or     al,bh
  4047a9:	dec    edx
  4047aa:	(bad)  
  4047ab:	fmul   QWORD PTR [ebx+0x53]
  4047ae:	retf   
  4047af:	iret   
  4047b0:	iret   
  4047b1:	test   BYTE PTR [edx],cl
  4047b3:	idiv   edx
  4047b5:	cld    
  4047b6:	stc    
  4047b7:	ret    0xa84
  4047ba:	sti    
  4047bb:	cmc    
  4047bc:	cld    
  4047bd:	stc    
  4047be:	ret    0xa40
  4047c1:	rol    DWORD PTR [esi+0xa],cl
  4047c4:	shl    DWORD PTR [edi-0x303032a7],cl
  4047ca:	gs inc esi
  4047cc:	dec    edx
  4047cd:	pop    ss
  4047ce:	int3   
  4047cf:	int3   
  4047d0:	int3   
  4047d1:	adc    eax,0x40167f42
  4047d6:	test   DWORD PTR [ebp+0x46],esp
  4047d9:	dec    edx
  4047da:	adc    esp,ecx
  4047dc:	int3   
  4047dd:	int3   
  4047de:	dec    eax
  4047df:	(bad)  
  4047e0:	mov    al,0x65
  4047e2:	inc    esi
  4047e3:	dec    edx
  4047e4:	adc    ecx,esp
  4047e6:	int3   
  4047e7:	int3   
  4047e8:	inc    edx
  4047e9:	add    eax,0x4a4665f3
  4047ee:	ins    DWORD PTR es:[edi],dx
  4047ef:	int3   
  4047f0:	int3   
  4047f1:	int3   
  4047f2:	dec    eax
  4047f3:	(bad)  
  4047f4:	mov    edi,0x6f4a4665
  4047f9:	int3   
  4047fa:	int3   
  4047fb:	int3   
  4047fc:	inc    edx
  4047fd:	add    eax,0x4a4665f7
  404802:	imul   ecx,esp,0x8f48cccc
  404808:	mov    dh,0x65
  40480a:	inc    esi
  40480b:	dec    edx
  40480c:	imul   ecx,esp,0xffffffcc
  40480f:	int3   
  404810:	inc    edx
  404811:	add    eax,0x4a4665f5
  404816:	gs int3 
  404818:	int3   
  404819:	int3   
  40481a:	dec    eax
  40481b:	pop    DWORD PTR [edi+0x674a4665]
  404821:	int3   
  404822:	int3   
  404823:	int3   
  404824:	inc    edx
  404825:	add    eax,0x4a4665fc
  40482a:	popa   
  40482b:	int3   
  40482c:	int3   
  40482d:	int3   
  40482e:	inc    eax
  40482f:	test   DWORD PTR [ebp+0x46],esp
  404832:	dec    edx
  404833:	arpl   sp,cx
  404835:	int3   
  404836:	int3   
  404837:	dec    eax
  404838:	(bad)  
  404839:	loopne 0x4048a0
  40483b:	inc    esi
  40483c:	dec    edx
  40483d:	jge    0x40480b
  40483f:	int3   
  404840:	int3   
  404841:	mov    bh,0xbb
  404843:	pop    esi
  404844:	iret   
  404845:	iret   
  404846:	gs inc esi
  404848:	dec    edx
  404849:	jg     0x404817
  40484b:	int3   
  40484c:	int3   
  40484d:	mov    bh,0xba
  40484f:	push   ebp
  404850:	iret   
  404851:	iret   
  404852:	gs inc esi
  404854:	dec    edx
  404855:	jns    0x404823
  404857:	int3   
  404858:	int3   
  404859:	mov    bh,0xaa
  40485b:	scas   eax,DWORD PTR es:[edi]
  40485c:	iret   
  40485d:	iret   
  40485e:	gs inc esi
  404860:	dec    edx
  404861:	jnp    0x40482f
  404863:	int3   
  404864:	int3   
  404865:	mov    bh,0xa9
  404867:	mov    edi,0x4665cfcf
  40486c:	dec    edx
  40486d:	jne    0x40483b
  40486f:	int3   
  404870:	int3   
  404871:	inc    edx
  404872:	add    eax,0x4a4665f1
  404877:	ja     0x404845
  404879:	int3   
  40487a:	int3   
  40487b:	test   DWORD PTR [edx],ecx
  40487d:	jecxz  0x4048ea
  40487f:	test   DWORD PTR [edx],ecx
  404881:	loop   0x4048e3
  404883:	test   DWORD PTR [edx],ecx
  404885:	std    
  404886:	test   DWORD PTR gs:[edx],ecx
  404889:	cld    
  40488a:	aaa    
  40488b:	test   DWORD PTR [edx],ecx
  40488d:	push   DWORD PTR [esi]
  40488f:	test   DWORD PTR [edx],ecx
  404891:	(bad)  
  404892:	pushf  
  404893:	test   DWORD PTR [edx],ecx
  404895:	jmp    0x404908
  404897:	test   DWORD PTR [edx],ecx
  404899:	jmp    0x8561:0xe50a8577
  4048a0:	or     ah,ah
  4048a2:	jbe    0x404829
  4048a4:	or     ah,bh
  4048a6:	aaa    
  4048a7:	test   DWORD PTR [edx],ecx
  4048a9:	out    0x36,al
  4048ab:	test   DWORD PTR [edx],ecx
  4048ad:	loope  0x40484b
  4048af:	test   DWORD PTR [edx],ecx
  4048b1:	xchg   ebx,eax
  4048b2:	ja     0x404839
  4048b4:	or     dl,BYTE PTR [edx-0x12f57a9c]
  4048ba:	push   0x7bec0a85
  4048bf:	test   DWORD PTR [edx],ecx
  4048c1:	out    dx,eax
  4048c2:	jge    0x404849
  4048c4:	or     ch,dh
  4048c6:	dec    esp
  4048c7:	mov    dh,0xa2
  4048c9:	iret   
  4048ca:	iret   
  4048cb:	iret   
  4048cc:	test   DWORD PTR [edx],ecx
  4048ce:	jmp    0xe84ace38
  4048d3:	pushf  
  4048d4:	cmp    BYTE PTR [ecx+0x14fe0e42],bl
  4048da:	inc    edx
  4048db:	jae    0x4048b7
  4048dd:	jecxz  0x4048bb
  4048df:	mov    ch,0x2c
  4048e1:	cmp    BYTE PTR [esi+0x470997c8],dl
  4048e7:	sub    al,0x48
  4048e9:	icebp  
  4048ea:	lds    edi,FWORD PTR [ecx-0x1e]
  4048ed:	cmp    BYTE PTR [ecx-0x14258cbe],bl
  4048f3:	fdiv   QWORD PTR [ebp-0x3769c7d4]
  4048f9:	xchg   edi,eax
  4048fa:	or     DWORD PTR [edi+0x2c],eax
  4048fd:	dec    eax
  4048fe:	icebp  
  4048ff:	les    edi,FWORD PTR [ecx-0x1e]
  404902:	cmp    BYTE PTR [ecx-0x6c258cbe],bl
  404908:	fdiv   QWORD PTR [ebp-0x3769c7d4]
  40490e:	xchg   edi,eax
  40490f:	or     DWORD PTR [edi+0x2c],eax
  404912:	dec    eax
  404913:	icebp  
  404914:	(bad)  
  404915:	jns    0x4048f9
  404917:	inc    edx
  404918:	or     cl,BYTE PTR [edi+0x40f30a46]
  40491e:	add    dh,bl
  404920:	mov    bh,0x20
  404922:	jnp    0x40499b
  404924:	push   ecx
  404925:	inc    esi
  404926:	into   
  404927:	inc    eax
  404928:	add    cl,BYTE PTR [edi-0x228578d0]
  40492e:	test   BYTE PTR [edx],cl
  404930:	mov    edi,edx
  404932:	cld    
  404933:	stc    
  404934:	ret    0xa84
  404937:	mov    esp,DWORD PTR [edi]
  404939:	cld    
  40493a:	stc    
  40493b:	ret    0xa40
  40493e:	rol    DWORD PTR [eax+0x47],cl
  404941:	inc    ebx
  404942:	into   
  404943:	iret   
  404944:	iret   
  404945:	cmp    BYTE PTR [edi+0x4adcce36],cl
  40494b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40494c:	leave  
  40494d:	iret   
  40494e:	iret   
  40494f:	inc    eax
  404950:	add    dl,bl
  404952:	inc    eax
  404953:	inc    esi
  404954:	jae    0x404924
  404956:	iret   
  404957:	iret   
  404958:	inc    esi
  404959:	into   
  40495a:	inc    eax
  40495b:	add    dl,bl
  40495d:	inc    eax
  40495e:	inc    esi
  40495f:	dec    edi
  404960:	into   
  404961:	iret   
  404962:	iret   
  404963:	inc    esi
  404964:	into   
  404965:	mov    bh,0x75
  404967:	repnz iret 
  404969:	iret   
  40496a:	gs inc esi
  40496c:	or     bl,BYTE PTR [edi-0x49]
  40496f:	dec    eax
  404970:	int    0xcf
  404972:	iret   
  404973:	gs inc esi
  404975:	or     bl,BYTE PTR [ecx-0x49]
  404978:	dec    esp
  404979:	repnz iret 
  40497b:	iret   
  40497c:	gs inc esi
  40497e:	or     bl,BYTE PTR [ebx+0x48]
  404981:	(bad)  
  404982:	clc    
  404983:	gs inc esi
  404985:	or     dl,BYTE PTR [ebp-0x49]
  404988:	inc    edi
  404989:	int    0xcf
  40498b:	iret   
  40498c:	gs inc esi
  40498e:	or     dl,BYTE PTR [edi-0x49]
  404991:	jo     0x404985
  404993:	iret   
  404994:	iret   
  404995:	gs inc esi
  404997:	or     dl,BYTE PTR [ecx-0x49]
  40499a:	dec    edi
  40499b:	int    0xcf
  40499d:	iret   
  40499e:	gs inc esi
  4049a0:	or     dl,BYTE PTR [ebx+0x40]
  4049a3:	test   DWORD PTR [ebp+0x46],esp
  4049a6:	or     ch,BYTE PTR [ebp+0x72428f38]
  4049ac:	scas   eax,DWORD PTR es:[edi]
  4049ad:	popa   
  4049ae:	(bad)  
  4049af:	mov    al,gs:0x165f0a42
  4049b5:	mov    cl,0x4d
  4049b7:	enter  0xcfcf,0x65
  4049bb:	cmp    bh,bl
  4049bd:	mov    WORD PTR [eax-0x37],fs
  4049c0:	iret   
  4049c1:	iret   
  4049c2:	gs enter 0x6594,0x46
  4049c7:	fisttp WORD PTR [eax-0x71]
  4049ca:	leave  
  4049cb:	push   es
  4049cc:	jp     0x4049b2
  4049ce:	inc    edx
  4049cf:	or     bl,BYTE PTR [edi+0x1f]
  4049d2:	inc    eax
  4049d3:	or     bh,bl
  4049d5:	mov    WORD PTR [edi+0x3a],ds
  4049d8:	addr16 jp 0x404a13
  4049db:	test   BYTE PTR [ecx-0x32],ah
  4049de:	mov    al,0x6a
  4049e0:	xchg   ecx,eax
  4049e1:	push   ecx
  4049e2:	ja     0x404a04
  4049e4:	mov    BYTE PTR [edi],bl
  4049e6:	inc    eax
  4049e7:	or     dl,bl
  4049e9:	retf   0xcf47
  4049ec:	iret   
  4049ed:	iret   
  4049ee:	pop    ds
  4049ef:	inc    eax
  4049f0:	or     dl,bl
  4049f2:	inc    eax
  4049f3:	dec    edi
  4049f4:	push   edi
  4049f5:	into   
  4049f6:	iret   
  4049f7:	iret   
  4049f8:	int3   
  4049f9:	aas    
  4049fa:	inc    eax
  4049fb:	or     al,bh
  4049fd:	int3   
  4049fe:	lahf   
  4049ff:	inc    eax
  404a00:	add    dh,bh
  404a02:	cmp    BYTE PTR [eax+eiz*1-0x2474b780],bl
  404a09:	inc    esi
  404a0a:	or     cl,BYTE PTR [ebx+0x2d7a8e30]
  404a10:	scas   al,BYTE PTR es:[edi]
  404a11:	and    ebp,DWORD PTR [edx+0x44]
  404a14:	xchg   esi,eax
  404a15:	ret    0x6a20
  404a18:	jbe    0x4049fa
  404a1a:	test   al,0x23
  404a1c:	push   0x44
  404a1e:	xchg   esi,eax
  404a1f:	retf   0xd000
  404a22:	push   esi
  404a23:	xchg   esi,eax
  404a24:	test   al,0x23
  404a26:	push   0x44
  404a28:	xchg   esi,eax
  404a29:	out    0xd9,al
  404a2b:	into   
  404a2c:	iret   
  404a2d:	iret   
  404a2e:	dec    eax
  404a2f:	push   0xfffffff3
  404a31:	iret   
  404a32:	popa   
  404a33:	das    
  404a34:	pop    ss
  404a35:	gs inc esi
  404a37:	dec    edx
  404a38:	pop    es
  404a39:	int3   
  404a3a:	int3   
  404a3b:	int3   
  404a3c:	gs inc esi
  404a3e:	dec    edx
  404a3f:	add    esp,ecx
  404a41:	int3   
  404a42:	int3   
  404a43:	gs inc esi
  404a45:	dec    edx
  404a46:	add    ecx,esp
  404a48:	int3   
  404a49:	int3   
  404a4a:	popa   
  404a4b:	jp     0x404a64
  404a4d:	inc    eax
  404a4e:	jp     0x404a23
  404a50:	gs inc esi
  404a52:	dec    edx
  404a53:	sbb    eax,0x61cccccc
  404a58:	js     0x404a71
  404a5a:	gs inc esi
  404a5c:	dec    edx
  404a5d:	pop    ds
  404a5e:	int3   
  404a5f:	int3   
  404a60:	int3   
  404a61:	popa   
  404a62:	jne    0x404a7b
  404a64:	gs inc esi
  404a66:	dec    edx
  404a67:	sbb    esp,ecx
  404a69:	int3   
  404a6a:	int3   
  404a6b:	popa   
  404a6c:	and    edx,DWORD PTR [edi]
  404a6e:	gs inc esi
  404a70:	dec    edx
  404a71:	sbb    ecx,esp
  404a73:	int3   
  404a74:	int3   
  404a75:	cmp    BYTE PTR [edi+0x65ab0a47],cl
  404a7b:	inc    esi
  404a7c:	dec    edx
  404a7d:	adc    eax,0x42cccccc
  404a82:	jb     0x404a2e
  404a84:	mov    al,ds:0x38a1a065
  404a89:	pop    DWORD PTR [edx+0x1a]
  404a8c:	xchg   DWORD PTR [edx+ecx*1+0x707d2c87],eax
  404a93:	test   BYTE PTR fs:[edx],cl
  404a96:	adc    esi,0x61
  404a99:	imul   esi,DWORD PTR [ebx-0x7c],0x617a9f0a
  404aa0:	(bad)  
  404aa1:	push   0x7d9b0a84
  404aa6:	jb     0x404b17
  404aa8:	ja     0x404b0f
  404aaa:	test   BYTE PTR [edx],cl
  404aac:	xchg   edi,eax
  404aad:	fstp   QWORD PTR [edi+eiz*8-0x30302ac8]
  404ab4:	pop    ds
  404ab5:	inc    eax
  404ab6:	or     bh,bl
  404ab8:	int3   
  404ab9:	jp     0x404a46
  404abb:	lea    ebx,[edi+0x3a]
  404abe:	addr16 jp 0x404af9
  404ac1:	test   DWORD PTR [eax],esp
  404ac3:	mov    BYTE PTR [ecx-0x37],ah
  404ac6:	pop    ds
  404ac7:	inc    eax
  404ac8:	or     dl,bl
  404aca:	dec    eax
  404acb:	(bad)  
  404acc:	or     ebx,DWORD PTR [edi]
  404ace:	inc    eax
  404acf:	or     dl,bl
  404ad1:	inc    eax
  404ad2:	dec    edi
  404ad3:	push   edi
  404ad4:	into   
  404ad5:	iret   
  404ad6:	iret   
  404ad7:	int3   
  404ad8:	aas    
  404ad9:	inc    eax
  404ada:	or     al,bh
  404adc:	int3   
  404add:	lahf   
  404ade:	inc    eax
  404adf:	idiv   DWORD PTR [eax]
  404ae1:	(bad)  
  404ae2:	pop    ds
  404ae3:	pop    ds
  404ae4:	popa   
  404ae5:	mov    DWORD PTR [edx+0x2],0xcc611eab
  404aec:	inc    edx
  404aed:	inc    edx
  404aee:	pop    es
  404aef:	int3   
  404af0:	int3   
  404af1:	int3   
  404af2:	push   ds
  404af3:	pop    ds
  404af4:	pop    ds
  404af5:	inc    eax
  404af6:	or     bh,bl
  404af8:	cmp    BYTE PTR [ebp-0x389e77e0],al
  404afe:	pop    ds
  404aff:	inc    edx
  404b00:	dec    edx
  404b01:	pop    ss
  404b02:	int3   
  404b03:	int3   
  404b04:	int3   
  404b05:	pop    ds
  404b06:	inc    eax
  404b07:	or     dl,bl
  404b09:	inc    eax
  404b0a:	dec    edi
  404b0b:	push   edi
  404b0c:	into   
  404b0d:	iret   
  404b0e:	iret   
  404b0f:	int3   
  404b10:	aas    
  404b11:	inc    eax
  404b12:	or     al,bh
  404b14:	int3   
  404b15:	lahf   
  404b16:	dec    eax
  404b17:	mov    eax,DWORD PTR [edi]
  404b19:	inc    edx
  404b1a:	or     ch,BYTE PTR [ebx+0x4f94cc1f]
  404b20:	jb     0x404ac7
  404b22:	jne    0x404b00
  404b24:	dec    edx
  404b25:	sub    esi,ecx
  404b27:	iret   
  404b28:	iret   
  404b29:	int3   
  404b2a:	or     dh,bl
  404b2c:	dec    esi
  404b2d:	jb     0x404b22
  404b2f:	iret   
  404b30:	into   
  404b31:	iret   
  404b32:	iret   
  404b33:	fmul   QWORD PTR [ecx-0xa]
  404b36:	int    0xcc
  404b38:	int3   
  404b39:	inc    eax
  404b3a:	int    0x8d
  404b3c:	loopne 0x404b0b
  404b3e:	iret   
  404b3f:	iret   
  404b40:	mov    dh,0x58
  404b42:	int    0xcf
  404b44:	iret   
  404b45:	inc    eax
  404b46:	mov    fs,WORD PTR [ebp+0x46]
  404b49:	or     ah,BYTE PTR [ebx+0x40c68f48]
  404b4f:	lahf   
  404b50:	gs inc esi
  404b52:	sbb    bh,BYTE PTR [ebp+0x65fe1e42]
  404b58:	inc    esi
  404b59:	sbb    bh,BYTE PTR [edi-0x300d8c4f]
  404b5f:	iret   
  404b60:	gs inc esi
  404b62:	sbb    bh,BYTE PTR [ecx+0x65cd8948]
  404b68:	inc    esi
  404b69:	sbb    bh,BYTE PTR [ebx-0x300d894f]
  404b6f:	iret   
  404b70:	gs inc esi
  404b72:	sbb    dh,BYTE PTR [ebp+0x65f48948]
  404b78:	inc    esi
  404b79:	sbb    dh,BYTE PTR [edi-0x4efdb99b]
  404b7f:	inc    eax
  404b80:	popf   
  404b81:	gs inc esi
  404b83:	add    dh,BYTE PTR [ebx-0x300d874a]
  404b89:	iret   
  404b8a:	inc    eax
  404b8b:	sahf   
  404b8c:	gs inc esi
  404b8e:	pop    edx
  404b8f:	jae    0x404b5d
  404b91:	int3   
  404b92:	int3   
  404b93:	inc    eax
  404b94:	lahf   
  404b95:	gs inc esi
  404b97:	pop    edx
  404b98:	dec    ebp
  404b99:	int3   
  404b9a:	int3   
  404b9b:	int3   
  404b9c:	mov    cl,0xab
  404b9e:	int    0xcf
  404ba0:	iret   
  404ba1:	gs inc esi
  404ba3:	sbb    cl,BYTE PTR [edi+0x65]
  404ba6:	inc    esi
  404ba7:	or     cl,BYTE PTR [ecx+0x42]
  404baa:	or     ebp,esi
  404bac:	gs inc esi
  404bae:	or     cl,BYTE PTR [ebx+0x7]
  404bb1:	gs inc esi
  404bb3:	or     al,BYTE PTR [ebp+0x42]
  404bb6:	or     ebx,esp
  404bb8:	gs inc esi
  404bba:	or     al,BYTE PTR [edi+0x65]
  404bbd:	inc    esi
  404bbe:	add    al,BYTE PTR [ecx+0x65]
  404bc1:	inc    esi
  404bc2:	jp     0x404c07
  404bc4:	inc    eax
  404bc5:	or     dh,bh
  404bc7:	fdiv   QWORD PTR [edx+eax*2-0x3333338d]
  404bce:	cmp    BYTE PTR [eax+eiz*1+0x658e3888],al
  404bd5:	inc    esi
  404bd6:	dec    edx
  404bd7:	jae    0x404ba5
  404bd9:	int3   
  404bda:	int3   
  404bdb:	inc    eax
  404bdc:	or     dh,bh
  404bde:	fdiv   QWORD PTR [edx+eax*1+0x208438a3]
  404be5:	mov    BYTE PTR [eax],bh
  404be7:	mov    fs,WORD PTR [ebp+0x46]
  404bea:	or     ah,BYTE PTR [ebx+0x46658f38]
  404bf0:	or     ah,BYTE PTR [ebx-0x5cf5b99b]
  404bf6:	inc    eax
  404bf7:	or     al,bl
  404bf9:	int3   
  404bfa:	jp     0x404bcf
  404bfc:	int3   
  404bfd:	jp     0x404bd6
  404bff:	int3   
  404c00:	jp     0x404bdd
  404c02:	int3   
  404c03:	jp     0x404be4
  404c05:	int3   
  404c06:	jp     0x404bcf
  404c08:	int3   
  404c09:	jp     0x404c02
  404c0b:	int3   
  404c0c:	jp     0x404c09
  404c0e:	out    0xae,eax
  404c10:	test   esp,0xd30acecc
  404c16:	inc    eax
  404c17:	or     dl,bl
  404c19:	inc    eax
  404c1a:	or     dl,bl
  404c1c:	inc    eax
  404c1d:	mov    bh,0x5f
  404c1f:	into   
  404c20:	iret   
  404c21:	iret   
  404c22:	inc    eax
  404c23:	or     dl,bl
  404c25:	inc    eax
  404c26:	dec    edi
  404c27:	inc    ebx
  404c28:	into   
  404c29:	iret   
  404c2a:	iret   
  404c2b:	inc    eax
  404c2c:	aas    
  404c2d:	inc    edx
  404c2e:	add    cl,bl
  404c30:	inc    eax
  404c31:	fidiv  WORD PTR [eax]
  404c33:	xchg   ebp,eax
  404c34:	jns    0x404c10
  404c36:	inc    eax
  404c37:	les    eax,FWORD PTR [eax+0x77]
  404c3a:	xor    eax,DWORD PTR [eax+0x73]
  404c3d:	les    ebx,FWORD PTR [edi]
  404c3f:	enter  0x30cd,0x94
  404c43:	js     0x404c0a
  404c45:	and    BYTE PTR [ebp-0x31b97638],al
  404c4b:	ins    BYTE PTR es:[edi],dx
  404c4c:	ins    DWORD PTR es:[edi],dx
  404c4d:	adc    BYTE PTR [esi+0x1acfd789],al
  404c53:	inc    eax
  404c54:	jecxz  0x404c9e
  404c56:	jecxz  0x404c2b
  404c58:	adc    eax,0x4e40ff40
  404c5d:	pop    edi
  404c5e:	into   
  404c5f:	iret   
  404c60:	iret   
  404c61:	dec    eax
  404c62:	aaa    
  404c63:	iret   
  404c64:	fmul   QWORD PTR [ebx-0x3f]
  404c67:	into   
  404c68:	iret   
  404c69:	iret   
  404c6a:	dec    edx
  404c6b:	cdq    
  404c6c:	fmul   QWORD PTR [ebx-0x37]
  404c6f:	into   
  404c70:	iret   
  404c71:	iret   
  404c72:	dec    edx
  404c73:	cmc    
  404c74:	fmul   QWORD PTR [ebx-0xf]
  404c77:	iret   
  404c78:	iret   
  404c79:	iret   
  404c7a:	inc    eax
  404c7b:	inc    ebp
  404c7c:	inc    edi
  404c7d:	iret   
  404c7e:	iret   
  404c7f:	iret   
  404c80:	dec    edx
  404c81:	(bad)  
  404c82:	fmul   QWORD PTR [ebx-0x1c]
  404c85:	iret   
  404c86:	iret   
  404c87:	iret   
  404c88:	dec    eax
  404c89:	lea    eax,[ebx-0x31]
  404c8c:	iret   
  404c8d:	iret   
  404c8e:	(bad)  
  404c90:	dec    ebx
  404c91:	xchg   ecx,eax
  404c92:	iret   
  404c93:	iret   
  404c94:	iret   
  404c95:	ss adc eax,0x9e4bdc3b
  404c9b:	iret   
  404c9c:	iret   
  404c9d:	iret   
  404c9e:	inc    eax
  404c9f:	mov    esi,0xcfcfce43
  404ca4:	dec    eax
  404ca5:	push   0xffffffff
  404ca7:	iret   
  404ca8:	inc    eax
  404ca9:	and    DWORD PTR [eax],0xdc89c8dd
  404caf:	mov    ah,0x1f
  404cb1:	ret    
  404cb2:	inc    esi
  404cb3:	add    ch,bl
  404cb5:	fdiv   QWORD PTR [edi+eax*1-0x237e3723]
  404cbc:	dec    ebx
  404cbd:	mov    ebp,0x42cfcfcf
  404cc2:	pop    es
  404cc3:	fistp  DWORD PTR [eax]
  404cc5:	inc    esi
  404cc6:	add    ah,bh
  404cc8:	(bad)  
  404cc9:	int3   
  404cca:	int3   
  404ccb:	int3   
  404ccc:	dec    esp
  404ccd:	adc    al,0x4a
  404ccf:	ds jnp 0x404d1e
  404cd2:	inc    eax
  404cd3:	fimul  WORD PTR [eax+0x6a]
  404cd6:	sti    
  404cd7:	iret   
  404cd8:	sub    BYTE PTR [ebp-0x4b236038],dl
  404cde:	jno    0x404cbd
  404ce0:	fdiv   QWORD PTR [ecx+edx*1+0x7bf0c8c3]
  404ce7:	inc    dx
  404ce9:	add    ebx,ebx
  404ceb:	inc    esi
  404cec:	add    ah,bl
  404cee:	dec    edx
  404cef:	ds jnp 0x404d00
  404cf2:	inc    eax
  404cf3:	(bad)  
  404cf4:	dec    eax
  404cf5:	push   0xfffffff7
  404cf7:	iret   
  404cf8:	sub    BYTE PTR [ebp-0x4b237838],bl
  404cfe:	jbe    0x404cdd
  404d00:	fdiv   QWORD PTR [esi+edx*1+0x7bf0c8c3]
  404d07:	and    BYTE PTR [edx+0x76],al
  404d0a:	fild   DWORD PTR [esi+0x72]
  404d0d:	repz inc eax
  404d0f:	jb     0x404d04
  404d11:	inc    eax
  404d12:	or     al,0x4a
  404d14:	int3   
  404d15:	jnp    0x404cdc
  404d17:	inc    eax
  404d18:	adc    ch,bl
  404d1a:	into   
  404d1b:	rol    esp,cl
  404d1d:	fdiv   QWORD PTR [esi+esi*2+0x16b4dcdd]
  404d24:	ret    
  404d25:	int3   
  404d26:	or     dh,bh
  404d28:	dec    eax
  404d29:	or     dh,bl
  404d2b:	(bad)  
  404d2c:	enter  0x36f0,0x72
  404d30:	idiv   DWORD PTR [ecx-0x70]
  404d33:	fdiv   QWORD PTR [ecx+esi*2+0x11b4dcdd]
  404d3a:	ret    
  404d3b:	inc    eax
  404d3c:	add    ah,bl
  404d3e:	int3   
  404d3f:	or     bh,bl
  404d41:	dec    eax
  404d42:	mov    es,edi
  404d44:	enter  0x46f0,0x2
  404d48:	jecxz  0x404d80
  404d4a:	jb     0x404d47
  404d4c:	jns    0x404cfd
  404d4e:	inc    eax
  404d4f:	add    ah,bh
  404d51:	fdiv   QWORD PTR [edi+ebx*1+0x77b4dcdd]
  404d58:	ret    
  404d59:	int3   
  404d5a:	or     bh,bh
  404d5c:	dec    eax
  404d5d:	mov    es,edi
  404d5f:	enter  0x4694,0x2
  404d63:	out    0x36,eax
  404d65:	sbb    bh,bh
  404d67:	fmul   QWORD PTR [ecx+0x6e]
  404d6a:	int3   
  404d6b:	int3   
  404d6c:	int3   
  404d6d:	ins    BYTE PTR es:[edi],dx
  404d6e:	adc    BYTE PTR [eax],bh
  404d70:	(bad)  
  404d71:	pavgb  mm1,mm1
  404d74:	cmp    BYTE PTR [edi+0x1a88866d],cl
  404d7a:	inc    eax
  404d7b:	jecxz  0x404dbd
  404d7d:	inc    esi
  404d7e:	pop    edi
  404d7f:	into   
  404d80:	iret   
  404d81:	iret   
  404d82:	inc    eax
  404d83:	or     al,bl
  404d85:	dec    eax
  404d86:	jecxz  0x404d67
  404d88:	sbb    BYTE PTR [eax],bh
  404d8a:	nop
  404d8b:	adc    eax,0xdcd63614
  404d90:	dec    ebx
  404d91:	dec    ecx
  404d92:	iret   
  404d93:	iret   
  404d94:	iret   
  404d95:	xor    BYTE PTR [eax+0x17364d7b],cl
  404d9b:	ja     0x404e17
  404d9d:	retf   0x8f38
  404da0:	pavgb  mm6,QWORD PTR [ebp+0x40]
  404da4:	emms   
  404da6:	enter  0xc70a,0x40
  404daa:	pop    es
  404dab:	rol    DWORD PTR [eax+0x1f],cl
  404dae:	sub    eax,DWORD PTR [eax+0x7f]
  404db1:	fild   DWORD PTR [eax+0x77]
  404db4:	xlat   BYTE PTR ds:[ebx]
  404db5:	enter  0xc702,0xc8
  404db9:	sbb    al,bh
  404dbb:	inc    esi
  404dbc:	jp     0x404db1
  404dbe:	xor    ah,dh
  404dc0:	je     0x404d8a
  404dc2:	inc    esi
  404dc3:	jb     0x404db8
  404dc5:	inc    esi
  404dc6:	adc    dh,bh
  404dc8:	ss adc dh,bl
  404dcb:	jne    0x404d6b
  404dcd:	xor    BYTE PTR [edi],dl
  404dcf:	fstp   TBYTE PTR [eax-0x3b]
  404dd2:	fdiv   QWORD PTR [ebx+edi*1+0x40c9e011]
  404dd9:	clc    
  404dda:	inc    edx
  404ddb:	cmp    edi,DWORD PTR [esi-0x33b5f2c0]
  404de1:	jnp    0x404e09
  404de3:	enter  0xc772,0x46
  404de7:	jb     0x404de8
  404de9:	xor    bh,dh
  404deb:	jne    0x404dcc
  404ded:	inc    eax
  404dee:	adc    al,bl
  404df0:	inc    eax
  404df1:	adc    BYTE PTR [ebx-0x38],dh
  404df4:	xchg   edi,eax
  404df5:	xor    al,dh
  404df7:	js     0x404dc4
  404df9:	inc    eax
  404dfa:	xor    eax,0x7220c7e0
  404dff:	mov    DWORD PTR [esi+0xd],0x4aff7a40
  404e06:	cmc    
  404e07:	jnp    0x404de6
  404e09:	inc    eax
  404e0a:	adc    dh,bh
  404e0c:	or     BYTE PTR [esi+0x12],al
  404e0f:	div    DWORD PTR [eax]
  404e11:	adc    dh,bl
  404e13:	jns    0x404dcc
  404e15:	loopne 0x404e5b
  404e17:	cmp    BYTE PTR [edi-0x79ef9294],cl
  404e1d:	mov    edi,eax
  404e1f:	iret   
  404e20:	sbb    al,BYTE PTR [eax-0x1d]
  404e23:	dec    eax
  404e24:	jecxz  0x404e49
  404e26:	mov    cl,0xfa
  404e28:	cld    
  404e29:	stc    
  404e2a:	ret    0x1a46
  404e2d:	repz test BYTE PTR [edx],cl
  404e30:	div    ebp
  404e32:	cld    
  404e33:	stc    
  404e34:	ret    0xa40
  404e37:	repz inc eax
  404e39:	add    dh,bl
  404e3b:	inc    eax
  404e3c:	add    dh,bl
  404e3e:	inc    eax
  404e3f:	add    dh,bl
  404e41:	inc    eax
  404e42:	add    dh,bl
  404e44:	inc    eax
  404e45:	add    dh,bl
  404e47:	sbb    BYTE PTR [eax+0x12],al
  404e4a:	fist   WORD PTR ds:0x673a5f8d
  404e50:	jp     0x404dd6
  404e52:	or     bh,bh
  404e54:	add    dl,cl
  404e56:	mov    dh,0xc6
  404e58:	inc    eax
  404e59:	add    dh,bl
  404e5b:	inc    eax
  404e5c:	push   eax
  404e5d:	pop    edi
  404e5e:	into   
  404e5f:	iret   
  404e60:	iret   
  404e61:	adc    al,0x8c
  404e63:	push   0xffffff91
  404e65:	push   ecx
  404e66:	ja     0x404ea0
  404e68:	popf   
  404e69:	cmp    BYTE PTR [ebp-0x63df7be0],al
  404e6f:	inc    esi
  404e70:	or     ah,bh
  404e72:	xor    al,al
  404e74:	fmul   QWORD PTR [ebx+0x70]
  404e77:	leave  
  404e78:	iret   
  404e79:	iret   
  404e7a:	inc    eax
  404e7b:	adc    dh,bl
  404e7d:	inc    eax
  404e7e:	add    al,bl
  404e80:	cmp    ch,ch
  404e82:	and    ah,ch
  404e84:	xor    BYTE PTR [esi-0x3699b424],dl
  404e8a:	iret   
  404e8b:	iret   
  404e8c:	inc    eax
  404e8d:	adc    dh,bl
  404e8f:	inc    eax
  404e90:	inc    esi
  404e91:	dec    edi
  404e92:	iret   
  404e93:	iret   
  404e94:	iret   
  404e95:	cmp    ch,ch
  404e97:	and    ah,ch
  404e99:	xor    BYTE PTR [eax-0x36e3b424],al
  404e9f:	iret   
  404ea0:	iret   
  404ea1:	enter  0xc702,0x46
  404ea5:	add    bl,BYTE PTR [ebx-0x12c76ec0]
  404eab:	and    ah,ch
  404ead:	inc    esi
  404eae:	adc    bh,bh
  404eb0:	inc    eax
  404eb1:	adc    bh,bh
  404eb3:	xor    BYTE PTR [ecx+0x1a40d97b],dl
  404eb9:	inc    DWORD PTR [eax+0x12]
  404ebc:	repz pusha 
  404ebe:	cdq    
  404ebf:	fstp   TBYTE PTR [eax]
  404ec1:	in     eax,dx
  404ec2:	and    ah,ch
  404ec4:	ss rol ecx,cl
  404ec7:	jp     0x404e9d
  404ec9:	inc    eax
  404eca:	sbb    bh,bh
  404ecc:	inc    eax
  404ecd:	adc    dh,bl
  404ecf:	pusha  
  404ed0:	cdq    
  404ed1:	fstp   TBYTE PTR [eax]
  404ed3:	in     eax,dx
  404ed4:	and    ah,ch
  404ed6:	ss adc eax,ecx
  404ed9:	(bad)  
  404edb:	dec    ebx
  404edc:	leave  
  404edd:	leave  
  404ede:	iret   
  404edf:	iret   
  404ee0:	inc    eax
  404ee1:	or     dh,bl
  404ee3:	inc    eax
  404ee4:	adc    dh,bl
  404ee6:	inc    eax
  404ee7:	or     bh,bh
  404ee9:	pusha  
  404eea:	(bad)  
  404eeb:	fcmovne st,st(0)
  404eed:	mov    es,WORD PTR [eax+0x7]
  404ef0:	(bad)  
  404ef2:	add    al,bh
  404ef4:	cmp    ch,ch
  404ef6:	inc    esi
  404ef7:	add    ch,bl
  404ef9:	inc    eax
  404efa:	add    dh,bl
  404efc:	inc    eax
  404efd:	sbb    dh,bl
  404eff:	cmp    BYTE PTR [ebp-0x6ac763e0],bl
  404f05:	inc    esi
  404f06:	add    dl,BYTE PTR [ebx-0x6bdf38c0]
  404f0c:	and    ah,ch
  404f0e:	xor    BYTE PTR [ecx+0x2c8c57b],al
  404f14:	mov    DWORD PTR [esi+0x2],0xf3024093
  404f1b:	cmp    BYTE PTR [ebp+0x40c307c8],bl
  404f21:	or     al,bh
  404f23:	inc    edx
  404f24:	dec    ebx
  404f25:	into   
  404f26:	push   eax
  404f27:	sub    ch,BYTE PTR [edx+0x44]
  404f2a:	inc    esi
  404f2b:	or     al,bl
  404f2d:	test   BYTE PTR [edx],cl
  404f2f:	xchg   edi,eax
  404f30:	icebp  
  404f31:	cld    
  404f32:	stc    
  404f33:	ret    0xa40
  404f36:	(bad)  
  404f38:	jp     0x404efd
  404f3a:	inc    eax
  404f3b:	dec    edi
  404f3c:	fwait
  404f3d:	into   
  404f3e:	iret   
  404f3f:	iret   
  404f40:	int3   
  404f41:	fild   WORD PTR [eax+0x2]
  404f44:	repz cmp BYTE PTR [ebp+0xa469c20],bl
  404f4b:	sti    
  404f4c:	xor    BYTE PTR [edi+0xa40d97a],al
  404f52:	(bad)  
  404f54:	jp     0x404f19
  404f56:	inc    eax
  404f57:	dec    edi
  404f58:	fwait
  404f59:	into   
  404f5a:	iret   
  404f5b:	iret   
  404f5c:	int3   
  404f5d:	pop    ds
  404f5e:	ret    
  404f5f:	inc    esi
  404f60:	or     bh,bl
  404f62:	test   BYTE PTR [edx],cl
  404f64:	out    dx,eax
  404f65:	sbb    eax,0x844b631a
  404f6a:	or     ch,bh
  404f6c:	in     eax,dx
  404f6d:	loopne 0x404f68
  404f6f:	ret    0xa40
  404f72:	repz cmp BYTE PTR [ebp+0xa308420],al
  404f79:	sti    
  404f7a:	jp     0x404fa4
  404f7c:	inc    eax
  404f7d:	or     dh,bh
  404f7f:	inc    eax
  404f80:	add    ch,bh
  404f82:	cmp    BYTE PTR [ebp+0x53429d38],al
  404f88:	enter  0x2a50,0x6a
  404f8c:	inc    esp
  404f8d:	inc    eax
  404f8e:	or     bl,bh
  404f90:	inc    eax
  404f91:	dec    edi
  404f92:	fwait
  404f93:	into   
  404f94:	iret   
  404f95:	iret   
  404f96:	and    BYTE PTR [esp+ebx*8-0x33e17f44],bl
  404f9d:	pop    ds
  404f9e:	sub    eax,DWORD PTR [eax+0xa]
  404fa1:	repz cmp BYTE PTR [ebp+0xa308420],al
  404fa8:	sti    
  404fa9:	jp     0x404f87
  404fab:	inc    eax
  404fac:	or     dl,BYTE PTR [edi-0x7bdf7ac8]
  404fb2:	xor    BYTE PTR [edi-0x338eba24],dl
  404fb8:	int3   
  404fb9:	int3   
  404fba:	inc    eax
  404fbb:	or     dh,bl
  404fbd:	cmp    BYTE PTR [ebp+0xa308420],al
  404fc3:	sti    
  404fc4:	jp     0x404f9a
  404fc6:	inc    eax
  404fc7:	or     dh,bh
  404fc9:	inc    eax
  404fca:	add    ah,bh
  404fcc:	cmp    BYTE PTR [ebp+0x50ce4b42],al
  404fd2:	sub    ch,BYTE PTR [edx+0x44]
  404fd5:	inc    esi
  404fd6:	or     ah,bh
  404fd8:	out    0xfc,al
  404fda:	iret   
  404fdb:	iret   
  404fdc:	iret   
  404fdd:	test   BYTE PTR [edx],cl
  404fdf:	jecxz  0x404fe3
  404fe1:	sbb    dh,BYTE PTR [edi-0x3f]
  404fe4:	test   BYTE PTR [edx],cl
  404fe6:	ret    
  404fe7:	add    BYTE PTR [ecx+eax*1],al
  404fea:	hlt    
  404feb:	inc    eax
  404fec:	adc    dh,bl
  404fee:	cmp    ch,ch
  404ff0:	and    ah,ch
  404ff2:	out    0x89,al
  404ff4:	iret   
  404ff5:	iret   
  404ff6:	iret   
  404ff7:	inc    eax
  404ff8:	or     dh,bl
  404ffa:	cmp    BYTE PTR [ebp+0xa468420],al
  405000:	jecxz  0x405042
  405002:	or     dh,bl
  405004:	cmp    BYTE PTR [ebp+0xa468420],al
  40500a:	ret    
  40500b:	inc    eax
  40500c:	add    dh,bl
  40500e:	inc    eax
  40500f:	or     dl,BYTE PTR [ebx-0x63df62c8]
  405015:	xor    BYTE PTR [edi-0x34bf3a85],al
  40501b:	push   edi
  40501c:	inc    esi
  40501d:	or     ah,bl
  40501f:	inc    eax
  405020:	or     ch,bl
  405022:	inc    eax
  405023:	retf   
  405024:	push   edi
  405025:	inc    esi
  405026:	or     al,bl
  405028:	inc    eax
  405029:	or     dh,bl
  40502b:	inc    eax
  40502c:	add    ah,bl
  40502e:	cmp    BYTE PTR [ebp-0x71cf7be0],al
  405034:	jnp    0x40505c
  405036:	inc    eax
  405037:	or     dh,bl
  405039:	inc    eax
  40503a:	add    ah,bl
  40503c:	cmp    BYTE PTR [ebp-0x19717be0],al
  405042:	sub    al,0x30
  405044:	mov    ?,WORD PTR [ebx-0x29]
  405047:	inc    eax
  405048:	add    ah,bl
  40504a:	inc    eax
  40504b:	or     bl,bh
  40504d:	inc    eax
  40504e:	dec    edi
  40504f:	fwait
  405050:	into   
  405051:	iret   
  405052:	iret   
  405053:	fdiv   QWORD PTR [esi+eax*4-0x48533e2]
  40505a:	int3   
  40505b:	pop    ds
  40505c:	(bad)  
  40505d:	loopne 0x405035
  40505f:	inc    eax
  405060:	or     al,bl
  405062:	enter  0xc70a,0x40
  405066:	add    bl,bh
  405068:	inc    eax
  405069:	inc    esi
  40506a:	fwait
  40506b:	into   
  40506c:	iret   
  40506d:	iret   
  40506e:	dec    eax
  40506f:	(bad)
  405073:	jp     0x405070
  405075:	int3   
  405076:	push   ds
  405077:	mov    DWORD PTR [esi+0xa],0xf30a40c3
  40507e:	inc    eax
  40507f:	add    al,bl
  405081:	cmp    BYTE PTR [ebp-0x71cf7be0],al
  405087:	inc    eax
  405088:	or     dh,bh
  40508a:	jp     0x40506a
  40508c:	inc    eax
  40508d:	add    ah,bh
  40508f:	cmp    BYTE PTR [ebp+0x50ce4b42],al
  405095:	sub    ch,BYTE PTR [edx+0x44]
  405098:	inc    esi
  405099:	or     ah,bh
  40509b:	loopne 0x40507c
  40509d:	inc    eax
  40509e:	add    al,bl
  4050a0:	cmp    BYTE PTR [ebp-0x43237be0],al
  4050a6:	mov    es,WORD PTR [eax+0x2]
  4050a9:	jmp    0x4050f1
  4050ab:	retf   
  4050ac:	push   esi
  4050ad:	inc    eax
  4050ae:	or     dh,bh
  4050b0:	cmp    BYTE PTR [ebp+0x50c85342],al
  4050b6:	sub    ch,BYTE PTR [edx+0x44]
  4050b9:	inc    eax
  4050ba:	or     dh,bl
  4050bc:	inc    eax
  4050bd:	add    ch,bl
  4050bf:	cmp    BYTE PTR [ebp-0x34c97be0],al
  4050c5:	push   esi
  4050c6:	fmul   QWORD PTR [edx+0x20]
  4050c9:	int3   
  4050ca:	int3   
  4050cb:	int3   
  4050cc:	inc    eax
  4050cd:	sbb    bh,bh
  4050cf:	inc    eax
  4050d0:	or     ah,bh
  4050d2:	inc    eax
  4050d3:	add    bl,BYTE PTR [ebx-0x6e9a76b2]
  4050d9:	push   ecx
  4050da:	ja     0x405114
  4050dc:	xchg   ebp,eax
  4050dd:	out    0x8a,al
  4050df:	repnz int3 
  4050e1:	int3   
  4050e2:	inc    eax
  4050e3:	add    dh,bl
  4050e5:	cmp    BYTE PTR [ebp-0x71cf63e0],bl
  4050eb:	inc    eax
  4050ec:	or     dh,bl
  4050ee:	jp     0x4050b7
  4050f0:	inc    eax
  4050f1:	or     dh,bh
  4050f3:	loopne 0x4050bd
  4050f5:	inc    eax
  4050f6:	or     dh,bl
  4050f8:	cmp    BYTE PTR [ebp+0x6d6c8420],al
  4050fe:	adc    BYTE PTR [esi+0x1acfc389],al
  405104:	inc    eax
  405105:	jecxz  0x40514f
  405107:	jecxz  0x405130
  405109:	test   BYTE PTR [edx],cl
  40510b:	repz cli 
  40510d:	cld    
  40510e:	stc    
  40510f:	ret    0xa84
  405112:	xchg   edi,eax
  405113:	cmc    
  405114:	cld    
  405115:	stc    
  405116:	ret    0xa40
  405119:	ret    
  40511a:	inc    esi
  40511b:	or     al,bl
  40511d:	adc    eax,0xa408f40
  405122:	repz inc eax
  405124:	jp     0x4050ed
  405126:	mov    dh,0x5f
  405128:	cmp    ah,BYTE PTR [edi+0x7a]
  40512b:	cmp    BYTE PTR [esi+0x51916ab1],cl
  405131:	ja     0x405153
  405133:	mov    DWORD PTR [eax],esi
  405135:	(bad)  
  405136:	fmul   QWORD PTR [ebx+0x2b]
  405139:	into   
  40513a:	iret   
  40513b:	iret   
  40513c:	inc    eax
  40513d:	or     al,bh
  40513f:	inc    eax
  405140:	jp     0x405109
  405142:	enter  0x337f,0x14
  405146:	inc    esi
  405147:	jp     0x40510c
  405149:	test   BYTE PTR [edx],cl
  40514b:	jmp    0x40513e
  40514d:	cld    
  40514e:	stc    
  40514f:	ret    0xa40
  405152:	jmp    0x405194
  405154:	jp     0x405149
  405156:	inc    eax
  405157:	jb     0x40511c
  405159:	cmp    dh,bh
  40515b:	cmp    BYTE PTR [esi-0x44c906e0],cl
  405161:	test   BYTE PTR [edi],bl
  405163:	and    ah,BYTE PTR [esi]
  405165:	xor    ah,bl
  405167:	dec    ebx
  405168:	std    
  405169:	iret   
  40516a:	iret   
  40516b:	iret   
  40516c:	inc    eax
  40516d:	jp     0x405132
  40516f:	inc    eax
  405170:	or     al,bh
  405172:	enter  0xaf45,0xcf
  405176:	iret   
  405177:	iret   
  405178:	inc    eax
  405179:	jp     0x405142
  40517b:	inc    eax
  40517c:	jb     0x405141
  40517e:	and    BYTE PTR [ebx+edi*1+0x40],dh
  405182:	jb     0x405177
  405184:	cmp    dh,dh
  405186:	and    cl,dh
  405188:	inc    esi
  405189:	jp     0x40511e
  40518b:	xor    ah,dh
  40518d:	fmul   QWORD PTR [ebx-0x7c]
  405190:	iret   
  405191:	iret   
  405192:	iret   
  405193:	inc    eax
  405194:	jp     0x405189
  405196:	cmp    dh,bh
  405198:	and    cl,bh
  40519a:	inc    esi
  40519b:	jp     0x405194
  40519d:	sbb    BYTE PTR [edx+ecx*1-0x6030801],al
  4051a4:	ret    0x51e6
  4051a7:	iret   
  4051a8:	iret   
  4051a9:	iret   
  4051aa:	inc    eax
  4051ab:	jp     0x4051a0
  4051ad:	cmp    dh,bh
  4051af:	inc    edx
  4051b0:	jo     0x4051a9
  4051b2:	and    cl,bh
  4051b4:	sahf   
  4051b5:	cld    
  4051b6:	xor    ah,dh
  4051b8:	js     0x405239
  4051ba:	and    ch,cl
  4051bc:	inc    edx
  4051bd:	adc    edi,DWORD PTR [edi-0x39]
  4051c0:	inc    esi
  4051c1:	jb     0x4051aa
  4051c3:	fdiv   QWORD PTR [eax+edi*1-0x23331ab2]
  4051ca:	iret   
  4051cb:	iret   
  4051cc:	inc    esi
  4051cd:	jp     0x4051b2
  4051cf:	inc    eax
  4051d0:	jb     0x4051b5
  4051d2:	inc    eax
  4051d3:	aas    
  4051d4:	inc    edx
  4051d5:	mov    ebx,0x51916a34
  4051da:	ja     0x405214
  4051dc:	inc    BYTE PTR [esi+0x7a]
  4051df:	out    dx,eax
  4051e0:	fdiv   QWORD PTR [eax+edi*1+0x46c3fd8e]
  4051e7:	jp     0x4051cc
  4051e9:	inc    eax
  4051ea:	jp     0x4051db
  4051ec:	inc    eax
  4051ed:	jb     0x4051b6
  4051ef:	cmp    dh,bh
  4051f1:	inc    edx
  4051f2:	mov    ebx,0x6a2a500d
  4051f7:	inc    esp
  4051f8:	inc    esi
  4051f9:	jp     0x4051ea
  4051fb:	inc    eax
  4051fc:	jp     0x4051fd
  4051fe:	inc    eax
  4051ff:	jb     0x4051e4
  405201:	cmp    dh,bh
  405203:	and    cl,bh
  405205:	xor    ch,cl
  405207:	jp     0x4051de
  405209:	inc    eax
  40520a:	jp     0x40520b
  40520c:	inc    eax
  40520d:	jb     0x4051f2
  40520f:	cmp    dh,bh
  405211:	and    cl,bh
  405213:	xor    ch,cl
  405215:	jp     0x4051de
  405217:	inc    eax
  405218:	jp     0x405209
  40521a:	inc    eax
  40521b:	jb     0x4051b0
  40521d:	into   
  40521e:	or     eax,0xccc98848
  405223:	add    ah,bh
  405225:	jp     0x40527a
  405227:	inc    eax
  405228:	adc    bh,bl
  40522a:	into   
  40522b:	adc    dh,bh
  40522d:	inc    eax
  40522e:	jp     0x40521b
  405230:	inc    eax
  405231:	jb     0x40522a
  405233:	inc    eax
  405234:	adc    al,bl
  405236:	cmp    dh,bh
  405238:	xor    BYTE PTR [ebx+0x26221bf8],dh
  40523e:	xor    BYTE PTR [eax-0x29],bh
  405241:	enter  0xfb0a,0x40
  405245:	jp     0x40523a
  405247:	inc    eax
  405248:	pop    ss
  405249:	retf   
  40524a:	cmp    dh,bh
  40524c:	and    cl,bh
  40524e:	inc    esi
  40524f:	adc    bh,bl
  405251:	xor    ch,ch
  405253:	fmul   QWORD PTR [edx+0x1e]
  405256:	int3   
  405257:	int3   
  405258:	int3   
  405259:	adc    BYTE PTR [eax+0xa],al
  40525c:	xchg   edi,eax
  40525d:	ins    BYTE PTR es:[edi],dx
  40525e:	loopne 0x405228
  405260:	inc    eax
  405261:	or     dh,bl
  405263:	cmp    BYTE PTR [esi-0x799276e0],cl
  405269:	mov    edi,eax
  40526b:	iret   
  40526c:	sbb    al,BYTE PTR [eax-0x1d]
  40526f:	dec    eax
  405270:	jecxz  0x40528d
  405272:	test   BYTE PTR [edx],cl
  405274:	repz cli 
  405276:	cld    
  405277:	stc    
  405278:	ret    0xa84
  40527b:	xchg   ebx,eax
  40527c:	cmc    
  40527d:	cld    
  40527e:	stc    
  40527f:	ret    0xa40
  405282:	repz sbb BYTE PTR ds:0x673a5f8d,dl
  405289:	jp     0x4052c3
  40528b:	test   DWORD PTR [eax+0x7751916a],esi
  405291:	and    BYTE PTR [eax+0x40e70a46],cl
  405297:	or     dh,bl
  405299:	cmp    BYTE PTR [ebp+0xa468820],al
  40529f:	out    dx,eax
  4052a0:	adc    al,0x40
  4052a2:	jb     0x4052d3
  4052a4:	inc    eax
  4052a5:	or     bh,bh
  4052a7:	inc    eax
  4052a8:	add    bh,bh
  4052aa:	cmp    BYTE PTR [esi+0x4eff0a46],cl
  4052b0:	or     bh,bh
  4052b2:	cli    
  4052b3:	in     al,dx
  4052b4:	stc    
  4052b5:	ret    0xa40
  4052b8:	test   DWORD PTR [eax+0x2],0x468e38f7
  4052bf:	or     dh,bh
  4052c1:	dec    esi
  4052c2:	or     dh,bh
  4052c4:	cmp    bh,ah
  4052c6:	stc    
  4052c7:	ret    0xa40
  4052ca:	sti    
  4052cb:	inc    eax
  4052cc:	add    bh,bl
  4052ce:	cmp    BYTE PTR [esi+0x4efb0a46],cl
  4052d4:	or     bh,bl
  4052d6:	idiv   ah
  4052d8:	stc    
  4052d9:	ret    0xa40
  4052dc:	jecxz  0x40531e
  4052de:	add    ah,bl
  4052e0:	cmp    BYTE PTR [esi+0x4ee30a46],cl
  4052e6:	or     ah,bl
  4052e8:	cli    
  4052e9:	jl     0x4052e3
  4052eb:	ret    0x53b7
  4052ee:	sbb    ecx,edi
  4052f0:	iret   
  4052f1:	gs inc esi
  4052f3:	or     ch,BYTE PTR [edi]
  4052f5:	inc    eax
  4052f6:	or     al,bh
  4052f8:	dec    edx
  4052f9:	(bad)  
  4052fa:	fmul   QWORD PTR [ebx-0x18]
  4052fd:	enter  0xcfcf,0x40
  405301:	or     al,bl
  405303:	dec    edx
  405304:	(bad)  
  405305:	fmul   QWORD PTR [ebx-0x69]
  405308:	enter  0xcfcf,0x40
  40530c:	or     dl,bh
  40530e:	dec    edx
  40530f:	(bad)  
  405310:	fmul   QWORD PTR [ebx-0x7e]
  405313:	enter  0xcfcf,0x65
  405317:	inc    eax
  405318:	or     ch,BYTE PTR [edi]
  40531a:	mov    dh,0x4d
  40531c:	enter  0xcfcf,0x65
  405320:	cmp    BYTE PTR [esi-0x30369f4a],cl
  405326:	iret   
  405327:	gs enter 0x408e,0x2
  40532c:	(bad)  
  40532d:	gs ss into 
  405330:	fmul   QWORD PTR [edx-0x5e]
  405333:	enter  0xcfcf,0x40
  405337:	or     dh,bl
  405339:	inc    eax
  40533a:	add    al,bh
  40533c:	inc    eax
  40533d:	or     al,bh
  40533f:	enter  0x330e,0x46
  405343:	or     al,bl
  405345:	inc    eax
  405346:	nop    DWORD PTR [edx-0x71]
  40534a:	fmul   QWORD PTR [ebx+0x58]
  40534d:	enter  0xcfcf,0x84
  405351:	or     bl,BYTE PTR [ebx-0x3d760306]
  405357:	inc    eax
  405358:	or     bl,BYTE PTR [ebx-0x77df7ac8]
  40535e:	inc    esi
  40535f:	or     bl,BYTE PTR [ebx+0x40f30a40]
  405365:	inc    esp
  405366:	pop    edi
  405367:	into   
  405368:	iret   
  405369:	iret   
  40536a:	inc    eax
  40536b:	mov    DWORD PTR [eax+0x6],0x40c7c833
  405372:	or     dh,bl
  405374:	inc    eax
  405375:	inc    esp
  405376:	inc    ebx
  405377:	into   
  405378:	iret   
  405379:	iret   
  40537a:	inc    eax
  40537b:	fild   WORD PTR [esi+0x2]
  40537e:	jmp    0x4053c6
  405380:	sbb    ch,BYTE PTR [edi]
  405382:	xor    BYTE PTR [ecx+0x4440387a],bl
  405388:	fwait
  405389:	into   
  40538a:	iret   
  40538b:	iret   
  40538c:	inc    edx
  40538d:	sbb    ah,bh
  40538f:	sbb    DWORD PTR [eax+0x1a],eax
  405392:	idiv   DWORD PTR [eax]
  405394:	xchg   ebp,eax
  405395:	and    BYTE PTR [eax+0x1f7ecc19],bl
  40539b:	int3   
  40539c:	jp     0x4053cd
  40539e:	int3   
  40539f:	pop    ds
  4053a0:	rol    DWORD PTR [eax+0x2],cl
  4053a3:	jmp    0x4053e5
  4053a5:	push   cs
  4053a6:	sbb    eax,DWORD PTR [eax+0x6]
  4053a9:	pop    ds
  4053aa:	and    BYTE PTR [edi+0x1e2f0ac8],al
  4053b0:	pop    ds
  4053b1:	out    0xe,eax
  4053b3:	(bad)  
  4053b4:	iret   
  4053b5:	iret   
  4053b6:	inc    eax
  4053b7:	sbb    ch,BYTE PTR [edi]
  4053b9:	inc    eax
  4053ba:	inc    esp
  4053bb:	pop    ebx
  4053bc:	into   
  4053bd:	iret   
  4053be:	iret   
  4053bf:	inc    esi
  4053c0:	fild   WORD PTR [eax+0xa]
  4053c3:	ret    
  4053c4:	int3   
  4053c5:	jg     0x4053e2
  4053c7:	int3   
  4053c8:	jp     0x405391
  4053ca:	sbb    edi,esp
  4053cc:	popf   
  4053cd:	(bad)  
  4053ce:	iret   
  4053cf:	iret   
  4053d0:	inc    eax
  4053d1:	add    ch,BYTE PTR [edi]
  4053d3:	inc    eax
  4053d4:	push   cs
  4053d5:	xor    ecx,eax
  4053d7:	mov    ds,esp
  4053d9:	mov    ah,0x7
  4053db:	fild   DWORD PTR [edx+0x3]
  4053de:	into   
  4053df:	xlat   BYTE PTR ds:[ebx]
  4053e0:	inc    esi
  4053e1:	add    dl,bh
  4053e3:	inc    eax
  4053e4:	add    dh,bl
  4053e6:	fdiv   QWORD PTR [edi+ebx*1+0x209d38c5]
  4053ed:	add    BYTE PTR [esi+0xa],0xc3
  4053f1:	xor    BYTE PTR [esi-0x3058b424],bl
  4053f7:	iret   
  4053f8:	iret   
  4053f9:	inc    eax
  4053fa:	add    dh,bl
  4053fc:	cmp    BYTE PTR [ebp+0x2468020],bl
  405402:	out    dx,eax
  405403:	inc    eax
  405404:	add    dl,BYTE PTR [ebx-0x3ae04b24]
  40540a:	cmp    BYTE PTR [ebp-0x673761e0],bl
  405410:	ss sbb ch,bh
  405413:	fadd   QWORD PTR [edi+eax*2-0x31]
  405417:	iret   
  405418:	iret   
  405419:	inc    eax
  40541a:	sbb    dl,bh
  40541c:	dec    eax
  40541d:	mov    edi,eax
  40541f:	inc    esi
  405420:	sbb    dl,bh
  405422:	loopne 0x4053ec
  405424:	inc    eax
  405425:	sbb    dl,bh
  405427:	inc    eax
  405428:	getsec 
  40542a:	inc    edx
  40542b:	pop    es
  40542c:	int3   
  40542d:	inc    esi
  40542e:	or     bl,BYTE PTR [edi-0x71b536c0]
  405434:	jnp    0x4053fa
  405436:	hlt    
  405437:	sahf   
  405438:	sub    BYTE PTR [esi+0x1f9f0ac8],cl
  40543e:	inc    eax
  40543f:	or     ebx,ecx
  405441:	enter  0x2f0a,0x1f
  405445:	out    0xa2,eax
  405447:	(bad)  
  405448:	iret   
  405449:	iret   
  40544a:	inc    eax
  40544b:	sbb    dh,bl
  40544d:	inc    eax
  40544e:	or     dl,bh
  405450:	inc    eax
  405451:	pop    es
  405452:	(bad)  
  405453:	cmp    BYTE PTR [ebp-0x7ecf67e0],dl
  405459:	jnp    0x40542f
  40545b:	push   ds
  40545c:	inc    eax
  40545d:	add    al,bh
  40545f:	enter  0xc307,0x40
  405463:	bswap  ebx
  405465:	enter  0x2f0a,0x1e
  405469:	pop    ds
  40546a:	out    0x3c,eax
  40546c:	(bad)  
  40546d:	iret   
  40546e:	iret   
  40546f:	inc    eax
  405470:	or     dl,bh
  405472:	inc    eax
  405473:	add    dl,BYTE PTR [ebx+0x48ef1a40]
  405479:	(bad)  
  40547a:	daa    
  40547b:	cmp    BYTE PTR [ebp+0x50c14342],bl
  405481:	sub    ch,BYTE PTR [edx+0x44]
  405484:	inc    eax
  405485:	sbb    al,bl
  405487:	inc    esi
  405488:	or     dl,bh
  40548a:	inc    eax
  40548b:	or     dl,BYTE PTR [ebx-0x3ae64b24]
  405491:	cmp    BYTE PTR [ebp+0xa409f20],al
  405497:	ret    
  405498:	enter  0x4698,0x2
  40549c:	out    dx,eax
  40549d:	xor    BYTE PTR [ecx+0x2404875],al
  4054a3:	repz inc eax
  4054a5:	push   esp
  4054a6:	inc    ebx
  4054a7:	into   
  4054a8:	iret   
  4054a9:	iret   
  4054aa:	cmp    BYTE PTR [ebp+0x2468020],bl
  4054b0:	xlat   BYTE PTR ds:[ebx]
  4054b1:	inc    eax
  4054b2:	add    ch,BYTE PTR [edi]
  4054b4:	xor    cl,al
  4054b6:	jp     0x4054dc
  4054b8:	inc    eax
  4054b9:	inc    esp
  4054ba:	fwait
  4054bb:	into   
  4054bc:	iret   
  4054bd:	iret   
  4054be:	inc    edx
  4054bf:	sbb    ah,bh
  4054c1:	sbb    DWORD PTR [eax+0x1a],eax
  4054c4:	sti    
  4054c5:	cmp    BYTE PTR [ebp+0x40199820],dl
  4054cb:	sbb    ch,bl
  4054cd:	int3   
  4054ce:	jns    0x4054eb
  4054d0:	push   ds
  4054d1:	int3   
  4054d2:	pop    ds
  4054d3:	ror    DWORD PTR [edx-0x71],cl
  4054d6:	fmul   QWORD PTR [ebx-0x9]
  4054d9:	into   
  4054da:	iret   
  4054db:	iret   
  4054dc:	inc    eax
  4054dd:	or     al,bl
  4054df:	inc    eax
  4054e0:	pop    esp
  4054e1:	xchg   esi,ecx
  4054e3:	iret   
  4054e4:	iret   
  4054e5:	inc    eax
  4054e6:	(bad)  
  4054e7:	cmp    BYTE PTR [ebp+0x4bdc8020],bl
  4054ed:	ret    
  4054ee:	into   
  4054ef:	iret   
  4054f0:	iret   
  4054f1:	dec    eax
  4054f2:	push   0xffffff97
  4054f4:	iret   
  4054f5:	mov    bh,0x72
  4054f7:	repnz iret 
  4054f9:	iret   
  4054fa:	gs inc esi
  4054fc:	or     cl,BYTE PTR [ebx+0x48f18f48]
  405502:	push   0xffffffc7
  405504:	iret   
  405505:	gs inc esi
  405507:	or     al,BYTE PTR [ebp-0x3032bb49]
  40550d:	iret   
  40550e:	gs inc esi
  405510:	or     al,BYTE PTR [edi-0x300db349]
  405516:	iret   
  405517:	inc    eax
  405518:	xchg   DWORD PTR [ebp+0x46],esp
  40551b:	or     al,BYTE PTR [ebx-0x30321f49]
  405521:	iret   
  405522:	gs inc esi
  405524:	add    al,BYTE PTR [ecx-0x62f5b99b]
  40552a:	inc    eax
  40552b:	or     al,bh
  40552d:	inc    edx
  40552e:	or     ecx,DWORD PTR [edx]
  405530:	mov    esi,DWORD PTR [esi-0x303037b3]
  405536:	gs cmp bh,al
  405539:	mov    cl,0x60
  40553b:	leave  
  40553c:	iret   
  40553d:	iret   
  40553e:	gs enter 0xcc81,0xa
  405543:	(bad)  
  405544:	dec    eax
  405545:	jb     0x40550e
  405547:	lds    esp,FWORD PTR [ebp+0x46]
  40554a:	(bad)  
  40554b:	jns    0x4054df
  40554d:	test   BYTE PTR [edx],cl
  40554f:	mov    ds:0xca7660c8,eax
  405554:	test   BYTE PTR [edx],cl
  405556:	mov    edi,0xc1607265
  40555b:	test   BYTE PTR [edx],cl
  40555d:	mov    ebx,0x75767072
  405562:	test   BYTE PTR [edx],cl
  405564:	mov    bh,0xca
  405566:	jae    0x4055de
  405568:	fld    QWORD PTR [edx+ecx*1+0x766060b3]
  40556f:	popa   
  405570:	test   BYTE PTR gs:[edx],cl
  405573:	(bad)  
  405574:	ja     0x4055ed
  405576:	test   DWORD PTR [edx],ecx
  405578:	mov    DWORD PTR [eax+edi*1-0x3df4bd7a],ebx
  40557f:	mov    ds:0xf94fdf41,eax
  405584:	mov    ds:0xe69e14f,al
  405589:	inc    edi
  40558a:	fisttp WORD PTR [eax-0xa]
  40558d:	aam    0x79
  40558f:	jecxz  0x4055d1
  405591:	inc    esp
  405592:	fwait
  405593:	into   
  405594:	iret   
  405595:	iret   
  405596:	inc    edx
  405597:	add    cl,BYTE PTR [ebx-0x34e033e2]
  40559d:	inc    eax
  40559e:	pop    esp
  40559f:	fwait
  4055a0:	into   
  4055a1:	iret   
  4055a2:	iret   
  4055a3:	inc    edx
  4055a4:	sbb    ah,BYTE PTR [ebx+0x1ecc1f19]
  4055aa:	mov    DWORD PTR [edx+0x2],0x5c401e97
  4055b1:	inc    ebx
  4055b2:	into   
  4055b3:	iret   
  4055b4:	iret   
  4055b5:	int3   
  4055b6:	ds int3 
  4055b8:	lahf   
  4055b9:	inc    eax
  4055ba:	or     dl,BYTE PTR [edi+0x317b8f4a]
  4055c0:	inc    esi
  4055c1:	or     al,bh
  4055c3:	loopne 0x405586
  4055c5:	inc    eax
  4055c6:	iret   
  4055c7:	inc    esi
  4055c8:	or     dl,BYTE PTR [edi+0x7bc70a30]
  4055ce:	ret    0x1f40
  4055d1:	xlat   BYTE PTR ds:[ebx]
  4055d2:	inc    eax
  4055d3:	pop    esp
  4055d4:	inc    ebx
  4055d5:	into   
  4055d6:	iret   
  4055d7:	iret   
  4055d8:	xor    dh,bl
  4055da:	jp     0x4055c2
  4055dc:	inc    eax
  4055dd:	pop    ds
  4055de:	xlat   BYTE PTR ds:[ebx]
  4055df:	inc    eax
  4055e0:	pop    esp
  4055e1:	inc    ebx
  4055e2:	into   
  4055e3:	iret   
  4055e4:	iret   
  4055e5:	xor    dh,bl
  4055e7:	jp     0x4055c7
  4055e9:	inc    eax
  4055ea:	sbb    ch,bl
  4055ec:	inc    eax
  4055ed:	pop    esp
  4055ee:	pop    edi
  4055ef:	into   
  4055f0:	iret   
  4055f1:	iret   
  4055f2:	inc    eax
  4055f3:	sbb    DWORD PTR [edi],esp
  4055f5:	enter  0x46de,0x1f
  4055f9:	rol    DWORD PTR [eax+0xa],cl
  4055fc:	ret    
  4055fd:	adc    al,0x1f
  4055ff:	int3   
  405600:	jp     0x405631
  405602:	out    0xd6,eax
  405604:	test   esp,0xdc8f4acc
  40560a:	dec    ebx
  40560b:	mov    cl,bh
  40560d:	iret   
  40560e:	iret   
  40560f:	int3   
  405610:	jp     0x4055d5
  405612:	inc    eax
  405613:	pushf  
  405614:	int3   
  405615:	jp     0x405646
  405617:	out    0x12,eax
  405619:	hlt    
  40561a:	int3   
  40561b:	int3   
  40561c:	dec    edx
  40561d:	(bad)  
  40561e:	fmul   QWORD PTR [ebx-0x41]
  405621:	iret   
  405622:	iret   
  405623:	iret   
  405624:	inc    eax
  405625:	or     al,bl
  405627:	inc    eax
  405628:	sbb    ch,BYTE PTR [edi]
  40562a:	inc    eax
  40562b:	pushf  
  40562c:	out    0x2e,eax
  40562e:	cmc    
  40562f:	int3   
  405630:	int3   
  405631:	dec    edx
  405632:	(bad)  
  405633:	fmul   QWORD PTR [ebx+0x50]
  405636:	iret   
  405637:	iret   
  405638:	iret   
  405639:	adc    al,0xcc
  40563b:	jp     0x40566c
  40563d:	out    0x8e,eax
  40563f:	icebp  
  405640:	int3   
  405641:	int3   
  405642:	dec    edx
  405643:	(bad)  
  405644:	fmul   QWORD PTR [ebx+0x41]
  405647:	iret   
  405648:	iret   
  405649:	iret   
  40564a:	inc    eax
  40564b:	inc    esp
  40564c:	inc    ebx
  40564d:	into   
  40564e:	iret   
  40564f:	iret   
  405650:	inc    eax
  405651:	sbb    ch,BYTE PTR [edi]
  405653:	xor    bh,bl
  405655:	jp     0x405628
  405657:	inc    eax
  405658:	inc    esp
  405659:	fwait
  40565a:	into   
  40565b:	iret   
  40565c:	iret   
  40565d:	inc    edx
  40565e:	add    ah,bh
  405660:	push   ds
  405661:	int3   
  405662:	jp     0x40564b
  405664:	inc    eax
  405665:	add    ch,bl
  405667:	int3   
  405668:	jle    0x405685
  40566a:	sbb    esp,ecx
  40566c:	pop    ds
  40566d:	rol    DWORD PTR [eax+0x1a],cl
  405670:	das    
  405671:	inc    eax
  405672:	inc    esp
  405673:	xchg   esi,ecx
  405675:	iret   
  405676:	iret   
  405677:	inc    eax
  405678:	iret   
  405679:	cmp    BYTE PTR [ebp+0x347b8820],al
  40567f:	inc    eax
  405680:	add    al,bl
  405682:	inc    eax
  405683:	push   cs
  405684:	daa    
  405685:	test   BYTE PTR [edx],cl
  405687:	(bad)  
  405688:	cli    
  405689:	pushf  
  40568a:	stc    
  40568b:	ret    0x7a40
  40568e:	(bad)  
  40568f:	int3   
  405690:	jp     0x40566d
  405692:	dec    esi
  405693:	cmc    
  405694:	pop    edi
  405695:	cmp    cl,bh
  405697:	iret   
  405698:	int3   
  405699:	jp     0x40567a
  40569b:	dec    esi
  40569c:	test   DWORD PTR [eax+0x2a],edx
  40569f:	iret   
  4056a0:	iret   
  4056a1:	gs (bad) 
  4056a3:	jle    0x40567a
  4056a5:	enter  0x1989,0xcc
  4056a9:	lahf   
  4056aa:	test   BYTE PTR [edi+ebx*4-0x32],al
  4056ae:	iret   
  4056af:	iret   
  4056b0:	cmc    
  4056b1:	cld    
  4056b2:	stc    
  4056b3:	ret    0xc3e0
  4056b6:	inc    eax
  4056b7:	or     al,bl
  4056b9:	inc    eax
  4056ba:	(bad)  
  4056bc:	enter  0x6189,0xcf
  4056c0:	int3   
  4056c1:	lahf   
  4056c2:	inc    esi
  4056c3:	or     ch,bh
  4056c5:	inc    eax
  4056c6:	or     ch,bh
  4056c8:	inc    eax
  4056c9:	add    dl,bl
  4056cb:	inc    esi
  4056cc:	into   
  4056cd:	test   BYTE PTR [edx],cl
  4056cf:	xlat   BYTE PTR ds:[ebx]
  4056d0:	into   
  4056d1:	iret   
  4056d2:	iret   
  4056d3:	iret   
  4056d4:	dec    eax
  4056d5:	jb     0x4056ae
  4056d7:	iret   
  4056d8:	jp     0x4056a5
  4056da:	dec    eax
  4056db:	push   0x2f
  4056dd:	iret   
  4056de:	inc    eax
  4056df:	or     ch,BYTE PTR [edi]
  4056e1:	loopne 0x4056ac
  4056e3:	cmp    BYTE PTR [edi-0x79ef9294],cl
  4056e9:	mov    ebx,edx
  4056eb:	iret   
  4056ec:	sbb    al,BYTE PTR [eax-0x1d]
  4056ef:	fdiv   QWORD PTR [esi+ebx*1+0xeb4dcc5]
  4056f6:	fistp  DWORD PTR [eax]
  4056f8:	adc    al,0x38
  4056fa:	int3   
  4056fb:	inc    edx
  4056fc:	or     eax,edi
  4056fe:	xlat   BYTE PTR ds:[ebx]
  4056ff:	dec    edx
  405700:	cdq    
  405701:	jnp    0x40572f
  405703:	inc    eax
  405704:	pop    es
  405705:	ret    
  405706:	inc    edx
  405707:	sar    DWORD PTR [esi],cl
  405709:	ss adc al,bh
  40570c:	jns    0x4056d1
  40570e:	inc    eax
  40570f:	pop    ss
  405710:	(bad)  
  405711:	enter  0xc896,0xed
  405715:	ss adc al,bh
  405718:	jns    0x4056db
  40571a:	dec    eax
  40571b:	(bad)  
  40571c:	daa    
  40571d:	add    al,0x30
  40571f:	icebp  
  405720:	jns    0x405710
  405722:	cmp    BYTE PTR [edi-0x76edef94],cl
  405728:	retf   
  405729:	iret   
  40572a:	sbb    al,BYTE PTR [eax-0x1d]
  40572d:	dec    eax
  40572e:	jecxz  0x405757
  405730:	test   BYTE PTR [edx],cl
  405732:	(bad)  
  405733:	cli    
  405734:	cld    
  405735:	stc    
  405736:	ret    0xa84
  405739:	jmp    0x405730
  40573b:	cld    
  40573c:	stc    
  40573d:	ret    0xa84
  405740:	xchg   edi,eax
  405741:	hlt    
  405742:	cld    
  405743:	stc    
  405744:	ret    0x47b7
  405747:	int    0xcf
  405749:	iret   
  40574a:	gs inc esi
  40574c:	or     bh,bl
  40574e:	dec    eax
  40574f:	(bad)  
  405750:	das    
  405751:	gs inc esi
  405753:	or     dh,bl
  405755:	mov    bh,0x7e
  405757:	repnz iret 
  405759:	iret   
  40575a:	gs inc esi
  40575c:	or     dh,bh
  40575e:	mov    bh,0x5e
  405760:	int    0xcf
  405762:	iret   
  405763:	gs inc esi
  405765:	or     dh,bh
  405767:	inc    eax
  405768:	or     al,bh
  40576a:	inc    esi
  40576b:	or     ah,bl
  40576d:	inc    eax
  40576e:	or     al,bl
  405770:	inc    esi
  405771:	or     ah,bh
  405773:	inc    eax
  405774:	or     bh,bh
  405776:	sbb    BYTE PTR [esi+0x7a673a5f],dh
  40577c:	cmp    BYTE PTR [esi-0x1c85bfeb],cl
  405782:	mov    cl,0x6a
  405784:	xchg   ecx,eax
  405785:	push   ecx
  405786:	ja     0x4057a8
  405788:	mov    DWORD PTR [eax+esi*1],edx
  40578b:	(bad)  
  40578c:	fmul   QWORD PTR [ebx-0x9]
  40578f:	into   
  405790:	iret   
  405791:	iret   
  405792:	inc    eax
  405793:	or     bh,bh
  405795:	inc    eax
  405796:	jp     0x40577f
  405798:	cmp    BYTE PTR [esi-0xcf76e0],cl
  40579e:	fmul   QWORD PTR [ebx-0x1b]
  4057a1:	into   
  4057a2:	iret   
  4057a3:	iret   
  4057a4:	inc    eax
  4057a5:	or     bh,bh
  4057a7:	cmp    BYTE PTR [esi+0xa468920],cl
  4057ad:	out    dx,eax
  4057ae:	inc    eax
  4057af:	or     bh,bh
  4057b1:	cmp    BYTE PTR [esi+0xa468920],cl
  4057b7:	xchg   ebx,eax
  4057b8:	fdiv   QWORD PTR [edx+edi*2+0x72b4dcf3]
  4057bf:	sti    
  4057c0:	mov    bh,0x4d
  4057c2:	enter  0xcfcf,0x65
  4057c6:	cmp    bh,bh
  4057c8:	mov    al,0x4d
  4057ca:	enter  0xcfcf,0x65
  4057ce:	cmp    al,dh
  4057d0:	mov    bh,0x60
  4057d2:	leave  
  4057d3:	iret   
  4057d4:	iret   
  4057d5:	gs enter 0x65ff,0xc8
  4057da:	mul    DWORD PTR [eax]
  4057dc:	int    0x65
  4057de:	inc    esi
  4057df:	jb     0x4057dc
  4057e1:	inc    eax
  4057e2:	jp     0x4057d3
  4057e4:	inc    eax
  4057e5:	jb     0x4057ca
  4057e7:	gs inc eax
  4057e9:	cmp    esi,DWORD PTR [ebp+eiz*2+0x46]
  4057ed:	jp     0x4057b6
  4057ef:	inc    eax
  4057f0:	jp     0x405785
  4057f2:	inc    eax
  4057f3:	jb     0x4057dc
  4057f5:	gs inc eax
  4057f7:	cmp    esi,DWORD PTR [ebp+eiz*2+0x46]
  4057fb:	jp     0x4057c0
  4057fd:	lea    edx,[eax+0x2a]
  405800:	iret   
  405801:	iret   
  405802:	out    0xc7,al
  405804:	into   
  405805:	iret   
  405806:	iret   
  405807:	inc    eax
  405808:	jb     0x405809
  40580a:	gs inc eax
  40580c:	adc    al,bl
  40580e:	dec    esi
  40580f:	hlt    
  405810:	pop    edi
  405811:	cmp    cl,bh
  405813:	iret   
  405814:	enter  0x65cd,0x30
  405818:	in     al,dx
  405819:	fmul   QWORD PTR [ebx-0x2f]
  40581c:	into   
  40581d:	iret   
  40581e:	iret   
  40581f:	inc    eax
  405820:	jb     0x405821
  405822:	inc    eax
  405823:	adc    bl,bh
  405825:	cmp    dh,dh
  405827:	and    cl,dh
  405829:	xor    ah,ch
  40582b:	gs inc eax
  40582d:	jb     0x4057f2
  40582f:	gs inc eax
  405831:	adc    al,bh
  405833:	fmul   QWORD PTR [ebx+0x42]
  405836:	iret   
  405837:	iret   
  405838:	iret   
  405839:	gs xor ah,ch
  40583c:	fmul   QWORD PTR [ebx+0x42]
  40583f:	iret   
  405840:	iret   
  405841:	iret   
  405842:	gs inc eax
  405844:	jb     0x405839
  405846:	mov    al,0x4d
  405848:	enter  0xcfcf,0x65
  40584c:	cmp    al,dh
  40584e:	gs inc eax
  405850:	adc    al,bh
  405852:	gs enter 0x65f7,0x30
  405857:	in     al,dx
  405858:	jns    0x40587f
  40585a:	gs inc eax
  40585c:	jb     0x405855
  40585e:	mov    al,0x4d
  405860:	enter  0xcfcf,0x65
  405864:	cmp    al,dh
  405866:	gs inc eax
  405868:	adc    al,bh
  40586a:	gs enter 0x65f7,0x30
  40586f:	in     al,dx
  405870:	je     0x40584f
  405872:	fdiv   QWORD PTR [edx+esi*2+0x12b4dcc7]
  405879:	sti    
  40587a:	enter  0x65f0,0x46
  40587e:	jb     0x405847
  405880:	gs inc eax
  405882:	jb     0x405877
  405884:	mov    al,0x4d
  405886:	enter  0xcfcf,0x65
  40588a:	cmp    al,dh
  40588c:	gs inc eax
  40588e:	adc    al,bl
  405890:	gs enter 0x65f7,0x30
  405895:	in     al,dx
  405896:	jns    0x4058bd
  405898:	gs inc eax
  40589a:	jb     0x405893
  40589c:	mov    al,0x4d
  40589e:	enter  0xcfcf,0x65
  4058a2:	cmp    al,dh
  4058a4:	gs inc eax
  4058a6:	adc    al,bl
  4058a8:	gs enter 0x65f7,0x30
  4058ad:	in     al,dx
  4058ae:	je     0x40588d
  4058b0:	fdiv   QWORD PTR [edx+esi*2+0x12b4dcc3]
  4058b7:	sti    
  4058b8:	enter  0x65f0,0x46
  4058bc:	jb     0x405881
  4058be:	gs inc eax
  4058c0:	jb     0x405885
  4058c2:	gs inc eax
  4058c4:	adc    al,bh
  4058c6:	gs xor ah,ch
  4058c9:	fmul   QWORD PTR [edx-0x50]
  4058cc:	iret   
  4058cd:	iret   
  4058ce:	iret   
  4058cf:	inc    eax
  4058d0:	jb     0x405869
  4058d2:	inc    eax
  4058d3:	adc    ah,bl
  4058d5:	cmp    dh,dh
  4058d7:	inc    edx
  4058d8:	mov    bl,0x2c
  4058da:	push   eax
  4058db:	sub    ch,BYTE PTR [edx+0x44]
  4058de:	inc    esi
  4058df:	jb     0x4058c4
  4058e1:	inc    eax
  4058e2:	jb     0x40587b
  4058e4:	inc    eax
  4058e5:	adc    ah,bh
  4058e7:	cmp    dh,dh
  4058e9:	inc    edx
  4058ea:	mov    bl,0x2c
  4058ec:	push   eax
  4058ed:	sub    ch,BYTE PTR [edx+0x44]
  4058f0:	inc    esi
  4058f1:	jb     0x4058da
  4058f3:	inc    eax
  4058f4:	jb     0x4058e5
  4058f6:	inc    eax
  4058f7:	adc    ah,bl
  4058f9:	gs inc eax
  4058fb:	xor    esi,DWORD PTR [eax+0x65]
  4058fe:	inc    esi
  4058ff:	jb     0x4058c8
  405901:	inc    eax
  405902:	jb     0x405897
  405904:	inc    eax
  405905:	adc    ah,bh
  405907:	gs inc eax
  405909:	xor    esi,DWORD PTR [eax+0x65]
  40590c:	inc    esi
  40590d:	jb     0x4058d2
  40590f:	inc    eax
  405910:	jb     0x405911
  405912:	gs inc eax
  405914:	adc    al,bh
  405916:	dec    esi
  405917:	hlt    
  405918:	pop    edi
  405919:	cmp    cl,bh
  40591b:	iret   
  40591c:	enter  0x65cd,0x30
  405920:	in     al,dx
  405921:	fmul   QWORD PTR [edx-0x11]
  405924:	int    0xcc
  405926:	int3   
  405927:	inc    eax
  405928:	jp     0x405915
  40592a:	cmp    dh,bh
  40592c:	inc    eax
  40592d:	add    bh,bh
  40592f:	and    cl,bh
  405931:	fdivr  QWORD PTR [esi+edi*8-0x1f0085ba]
  405938:	fld    DWORD PTR [eax+0x1a]
  40593b:	(bad)  
  40593c:	cmp    BYTE PTR [esi+0x42eb0240],bl
  405942:	inc    ebx
  405943:	rcl    DWORD PTR [eax+0x2a],0x6a
  405947:	inc    esp
  405948:	inc    esi
  405949:	add    ch,bl
  40594b:	inc    eax
  40594c:	sbb    ch,bh
  40594e:	inc    eax
  40594f:	jp     0x405934
  405951:	gs inc eax
  405953:	cmp    edx,DWORD PTR ds:0x20658740
  405959:	(bad)  
  40595a:	mov    cl,0x4d
  40595c:	enter  0xcfcf,0x65
  405960:	cmp    cl,bh
  405962:	mov    dh,0xe0
  405964:	int    0xcf
  405966:	iret   
  405967:	gs xor dh,bh
  40596a:	jp     0x405942
  40596c:	inc    eax
  40596d:	jp     0x405902
  40596f:	inc    eax
  405970:	jb     0x405959
  405972:	gs inc eax
  405974:	cmp    esi,DWORD PTR [ebp+eiz*2+0x20]
  405978:	jmp    DWORD PTR [ebp+0x38]
  40597b:	stc    
  40597c:	gs xor dh,bh
  40597f:	jp     0x40594c
  405981:	cmp    BYTE PTR [edi-0x70c73c20],cl
  405987:	pavgb  mm0,mm4
  40598a:	inc    eax
  40598b:	or     ch,bl
  40598d:	cmp    BYTE PTR [esi+0x6d6c8920],cl
  405993:	adc    BYTE PTR [esi+0x1acfc389],al
  405999:	inc    eax
  40599a:	jecxz  0x4059ba
  40599c:	gs inc eax
  40599e:	(bad)  
  40599f:	adc    eax,0xcfc9608d
  4059a4:	iret   
  4059a5:	and    BYTE PTR gs:[ebp-0x3037b273],bl
  4059ac:	iret   
  4059ad:	cmp    BYTE PTR gs:[ebp-0x30321f73],bl
  4059b4:	iret   
  4059b5:	test   BYTE PTR [edx],cl
  4059b7:	repz sti 
  4059b9:	cld    
  4059ba:	stc    
  4059bb:	ret    0xfab1
  4059be:	cld    
  4059bf:	stc    
  4059c0:	ret    0x3065
  4059c3:	popf   
  4059c4:	jnp    0x4059d8
  4059c6:	sbb    BYTE PTR [esp+ebx*8],dl
  4059c9:	mov    ah,0x86
  4059cb:	mov    WORD PTR [edx-0x6f],gs
  4059ce:	push   ecx
  4059cf:	ja     0x40595e
  4059d1:	pop    edi
  4059d2:	cmp    ah,BYTE PTR [edi+0x7a]
  4059d5:	mov    al,0x5c
  4059d7:	int    0xcf
  4059d9:	iret   
  4059da:	xor    BYTE PTR gs:[eax+0x1a46c87a],al
  4059e1:	repz inc edx
  4059e3:	adc    al,0xce
  4059e5:	cmp    BYTE PTR [ebp-0x32c70ec0],dl
  4059eb:	gs inc eax
  4059ed:	inc    ebx
  4059ee:	ja     0x405a25
  4059f0:	add    BYTE PTR [ecx-0x369f4f23],al
  4059f6:	iret   
  4059f7:	iret   
  4059f8:	and    BYTE PTR gs:[eax-0x3037b250],al
  4059ff:	iret   
  405a00:	cmp    BYTE PTR gs:[eax-0x30321f50],al
  405a07:	iret   
  405a08:	xor    BYTE PTR gs:[eax+0x240877a],al
  405a0f:	rep ins BYTE PTR es:[edi],dx
  405a11:	adc    BYTE PTR [esi-0xa],cl
  405a14:	sti    
  405a15:	cld    
  405a16:	stc    
  405a17:	ret    0xc67b
  405a1a:	cmp    BYTE PTR [ebp+0x37074b42],bl
  405a20:	add    BYTE PTR [ecx-0x77799223],al
  405a26:	sbb    al,BYTE PTR [eax-0x1d]
  405a29:	push   ds
  405a2a:	adc    eax,0xf30a8414
  405a2f:	sti    
  405a30:	cld    
  405a31:	stc    
  405a32:	ret    0xfa8d
  405a35:	cld    
  405a36:	stc    
  405a37:	ret    0x10e7
  405a3a:	int3   
  405a3b:	int3   
  405a3c:	int3   
  405a3d:	inc    eax
  405a3e:	test   DWORD PTR [ecx-0x3c],0xa23b69cb
  405a45:	xor    ebx,DWORD PTR [ebx+edi*2-0x4e7bbf92]
  405a4c:	push   0xffffff91
  405a4e:	push   ecx
  405a4f:	ja     0x405a07
  405a51:	pop    edi
  405a52:	cmp    ah,BYTE PTR [edi+0x7a]
  405a55:	sbb    BYTE PTR [ebp+0x40],ah
  405a58:	iret   
  405a59:	mov    al,0x60
  405a5b:	leave  
  405a5c:	iret   
  405a5d:	iret   
  405a5e:	and    BYTE PTR gs:[eax-0x3037b250],cl
  405a65:	iret   
  405a66:	cmp    BYTE PTR gs:[eax-0x30324d50],cl
  405a6d:	iret   
  405a6e:	xor    BYTE PTR gs:[eax+0x7a46c87a],cl
  405a75:	repz inc edx
  405a77:	jns    0x405a47
  405a79:	cmp    dh,bh
  405a7b:	inc    eax
  405a7c:	xchg   ebp,eax
  405a7d:	cmp    BYTE PTR [esi+0x35144b42],bl
  405a83:	add    BYTE PTR [ecx+0x4fd741dd],al
  405a89:	mov    BYTE PTR [ecx+0x4f],ch
  405a8c:	clc    
  405a8d:	mov    ds:0x7a9cf04f,al
  405a92:	mov    BYTE PTR [eax+0xa],al
  405a95:	repz adc BYTE PTR [edx],dh
  405a98:	sti    
  405a99:	cld    
  405a9a:	stc    
  405a9b:	ret    0xc37b
  405a9e:	cmp    BYTE PTR [esi+0x46658638],cl
  405aa4:	inc    ebx
  405aa5:	add    al,0x35
  405aa7:	add    BYTE PTR [ecx+0x6c8440dd],al
  405aad:	ins    DWORD PTR es:[edi],dx
  405aae:	xchg   BYTE PTR [eax+0x1ee3401a],cl
  405ab4:	adc    eax,0xfbf30a84
  405ab9:	cld    
  405aba:	stc    
  405abb:	ret    0xfa8d
  405abe:	cld    
  405abf:	stc    
  405ac0:	ret    0x99e7
  405ac3:	int    0xcc
  405ac5:	int3   
  405ac6:	gs inc eax
  405ac8:	(bad)  
  405ac9:	mov    cl,0x60
  405acb:	leave  
  405acc:	iret   
  405acd:	iret   
  405ace:	and    BYTE PTR gs:[ecx-0x3037b24f],al
  405ad5:	iret   
  405ad6:	cmp    BYTE PTR gs:[ecx-0x30321f4f],al
  405add:	iret   
  405ade:	xor    BYTE PTR gs:[ecx+0x1418147b],al
  405ae5:	fdiv   QWORD PTR [esi+eax*4+0x51916ab1]
  405aec:	ja     0x405a7a
  405aee:	pop    edi
  405aef:	cmp    ah,BYTE PTR [edi+0x7a]
  405af2:	mov    al,0xb2
  405af4:	int    0xcf
  405af6:	iret   
  405af7:	xor    BYTE PTR gs:[eax+0x7a46c87a],al
  405afe:	repz inc edx
  405b00:	jns    0x405ad0
  405b02:	cmp    ah,dh
  405b04:	inc    eax
  405b05:	xchg   ebp,eax
  405b06:	cmp    BYTE PTR [ebp+eiz*2+0x351f4340],dl
  405b0d:	add    BYTE PTR [ecx-0x369f4f23],al
  405b13:	iret   
  405b14:	iret   
  405b15:	and    BYTE PTR gs:[eax-0x3037b250],al
  405b1c:	iret   
  405b1d:	cmp    BYTE PTR gs:[eax-0x30321f50],al
  405b24:	iret   
  405b25:	xor    BYTE PTR gs:[eax+0x724e877a],al
  405b2c:	repz sti 
  405b2e:	cld    
  405b2f:	stc    
  405b30:	ret    0x106c
  405b33:	jnp    0x405aff
  405b35:	cmp    BYTE PTR [edi+0x38c9e00f],cl
  405b3b:	(bad)  
  405b3c:	ins    DWORD PTR es:[edi],dx
  405b3d:	xchg   BYTE PTR [eax+0x1ee3401a],cl
  405b43:	inc    eax
  405b44:	or     al,bh
  405b46:	fdiv   QWORD PTR [edi+eax*8+0x5a4e4215]
  405b4d:	repnz int3 
  405b4f:	int3   
  405b50:	lea    ecx,[ebp-0x38]
  405b53:	iret   
  405b54:	iret   
  405b55:	adc    al,0x38
  405b57:	test   DWORD PTR [eax+eiz*8+0x46cfcfcd],ecx
  405b5e:	sbb    dh,bl
  405b60:	xor    BYTE PTR gs:[ebx+edi*2-0x38f5bfe0],al
  405b68:	and    BYTE PTR [ecx-0x1f38f5ba],cl
  405b6e:	enter  0xa40,0xc7
  405b72:	gs inc esi
  405b74:	ror    DWORD PTR [eax-0x77],0xc9
  405b78:	fdiv   QWORD PTR [ebx+esi*1+0x4e9c40df]
  405b7f:	test   BYTE PTR [edx-0xe],bl
  405b82:	int3   
  405b83:	int3   
  405b84:	cmp    ch,cl
  405b86:	mov    bh,0xe0
  405b88:	int    0xcf
  405b8a:	iret   
  405b8b:	gs xor bh,dh
  405b8e:	jp     0x405b7c
  405b90:	cmp    BYTE PTR [edi-0x36b99a94],cl
  405b96:	inc    eax
  405b97:	or     dh,bl
  405b99:	ins    DWORD PTR es:[edi],dx
  405b9a:	xchg   BYTE PTR [ecx+0x401acfcb],cl
  405ba0:	jecxz  0x405bea
  405ba2:	jecxz  0x405b7b
  405ba4:	test   BYTE PTR [edx],cl
  405ba6:	jecxz  0x405ba2
  405ba8:	cld    
  405ba9:	stc    
  405baa:	ret    0xa84
  405bad:	out    0xf5,eax
  405baf:	cld    
  405bb0:	stc    
  405bb1:	ret    0xa40
  405bb4:	jecxz  0x405bf0
  405bb6:	pop    edi
  405bb7:	cmp    ah,BYTE PTR [edi+0x7a]
  405bba:	and    ch,BYTE PTR [edx-0x6f]
  405bbd:	push   ecx
  405bbe:	ja     0x405c06
  405bc0:	or     dh,bh
  405bc2:	test   BYTE PTR [edx],cl
  405bc4:	push   edx
  405bc6:	cld    
  405bc7:	stc    
  405bc8:	ret    0xa84
  405bcb:	sti    
  405bcc:	idiv   ah
  405bce:	stc    
  405bcf:	ret    0xa84
  405bd2:	repz hlt 
  405bd4:	cld    
  405bd5:	stc    
  405bd6:	ret    0xa40
  405bd9:	jecxz  0x405c15
  405bdb:	pop    edi
  405bdc:	cmp    ah,BYTE PTR [edi+0x7a]
  405bdf:	inc    eax
  405be0:	add    dh,bh
  405be2:	inc    edx
  405be3:	dec    ebx
  405be4:	into   
  405be5:	push   eax
  405be6:	sub    ch,BYTE PTR [edx+0x44]
  405be9:	inc    eax
  405bea:	add    ah,bh
  405bec:	dec    esi
  405bed:	(bad)  
  405bee:	pop    edi
  405bef:	cmp    ah,BYTE PTR [edi+0x7a]
  405bf2:	dec    esi
  405bf3:	out    0x6a,al
  405bf5:	xchg   ecx,eax
  405bf6:	push   ecx
  405bf7:	ja     0x405c39
  405bf9:	sbb    bl,bh
  405bfb:	fdivr  QWORD PTR [esi+ebx*4+0x48dc8930]
  405c02:	loop   0x405bd3
  405c04:	iret   
  405c05:	iret   
  405c06:	inc    eax
  405c07:	or     bl,bh
  405c09:	inc    eax
  405c0a:	add    dh,bh
  405c0c:	and    BYTE PTR [esi+0x4eff0240],cl
  405c12:	(bad)  
  405c13:	pop    edi
  405c14:	cmp    ah,BYTE PTR [edi+0x7a]
  405c17:	dec    esi
  405c18:	out    0x6a,al
  405c1a:	xchg   ecx,eax
  405c1b:	push   ecx
  405c1c:	ja     0x405c4e
  405c1e:	mov    ?,WORD PTR [ebp+0x3f]
  405c21:	inc    eax
  405c22:	or     al,bh
  405c24:	enter  0xf70a,0x40
  405c28:	add    al,bl
  405c2a:	enter  0xf702,0x40
  405c2e:	fiadd  WORD PTR [esi-0x21]
  405c31:	inc    eax
  405c32:	push   es
  405c33:	retf   
  405c34:	inc    esi
  405c35:	pop    es
  405c36:	retf   
  405c37:	inc    eax
  405c38:	or     bh,bh
  405c3a:	cmp    bl,BYTE PTR [edi+0x3a]
  405c3d:	addr16 jp 0x405c80
  405c40:	add    dh,bh
  405c42:	inc    edx
  405c43:	dec    ebx
  405c44:	into   
  405c45:	push   eax
  405c46:	sub    ch,BYTE PTR [edx+0x44]
  405c49:	inc    esi
  405c4a:	or     dh,bh
  405c4c:	out    0x52,al
  405c4e:	iret   
  405c4f:	iret   
  405c50:	iret   
  405c51:	inc    eax
  405c52:	or     bl,bh
  405c54:	inc    eax
  405c55:	add    dh,bh
  405c57:	and    BYTE PTR [esi+0x4efb0240],cl
  405c5d:	(bad)  
  405c5e:	pop    edi
  405c5f:	cmp    ah,BYTE PTR [edi+0x7a]
  405c62:	dec    esi
  405c63:	out    0x6a,al
  405c65:	xchg   ecx,eax
  405c66:	push   ecx
  405c67:	ja     0x405c99
  405c69:	mov    ?,WORD PTR [ebp+0x24]
  405c6c:	inc    eax
  405c6d:	or     al,bh
  405c6f:	enter  0xf70a,0x40
  405c73:	add    al,bl
  405c75:	enter  0xf702,0x40
  405c79:	mov    BYTE PTR [esi-0x39],0x40
  405c7d:	or     bh,bl
  405c7f:	cmp    bl,BYTE PTR [edi+0x3a]
  405c82:	addr16 jp 0x405cc5
  405c85:	add    dh,bh
  405c87:	inc    edx
  405c88:	dec    ebx
  405c89:	into   
  405c8a:	push   eax
  405c8b:	sub    ch,BYTE PTR [edx+0x44]
  405c8e:	inc    esi
  405c8f:	or     dh,bh
  405c91:	loopne 0x405ca3
  405c93:	inc    eax
  405c94:	or     bl,bh
  405c96:	inc    eax
  405c97:	add    dh,bh
  405c99:	and    BYTE PTR [esi+0x4ef30240],cl
  405c9f:	(bad)  
  405ca0:	pop    edi
  405ca1:	cmp    ah,BYTE PTR [edi+0x7a]
  405ca4:	dec    esi
  405ca5:	out    0x6a,al
  405ca7:	xchg   ecx,eax
  405ca8:	push   ecx
  405ca9:	ja     0x405cdb
  405cab:	mov    ?,WORD PTR [ebp+0x26]
  405cae:	inc    eax
  405caf:	or     al,bh
  405cb1:	enter  0xf70a,0x40
  405cb5:	add    al,bl
  405cb7:	enter  0xf702,0x65
  405cbb:	inc    eax
  405cbc:	(bad)  
  405cbd:	gs inc esi
  405cbf:	mov    DWORD PTR [eax+0xa],0x3a5f3af3
  405cc6:	addr16 jp 0x405d09
  405cc9:	add    dh,bh
  405ccb:	inc    edx
  405ccc:	dec    ebx
  405ccd:	into   
  405cce:	push   eax
  405ccf:	sub    ch,BYTE PTR [edx+0x44]
  405cd2:	inc    esi
  405cd3:	or     dh,bh
  405cd5:	loopne 0x405cab
  405cd7:	inc    eax
  405cd8:	or     al,bh
  405cda:	enter  0xf70a,0x40
  405cde:	add    al,bl
  405ce0:	enter  0xf702,0x41
  405ce4:	mov    BYTE PTR [edi-0x39],0x40
  405ce8:	or     dh,bh
  405cea:	cmovbe ecx,DWORD PTR [edx]
  405ced:	mul    esi
  405cef:	jmp    0x405cbe
  405cf1:	int3   
  405cf2:	int3   
  405cf3:	xchg   BYTE PTR [ecx+0x401acfc3],cl
  405cf9:	jecxz  0x405d19
  405cfb:	push   ds
  405cfc:	test   BYTE PTR [edx],cl
  405cfe:	repz cli 
  405d00:	cld    
  405d01:	stc    
  405d02:	ret    0xa84
  405d05:	div    ebp
  405d07:	cld    
  405d08:	stc    
  405d09:	ret    0x8f38
  405d0c:	(bad)  
  405d0e:	cmovo  ecx,DWORD PTR [edx]
  405d11:	repz cmp bl,BYTE PTR [edi+0x3a]
  405d15:	addr16 jp 0x405d3a
  405d18:	push   0xffffff91
  405d1a:	push   ecx
  405d1b:	ja     0x405d53
  405d1d:	or     al,bl
  405d1f:	jp     0x405cea
  405d21:	loopne 0x405d46
  405d23:	inc    eax
  405d24:	or     dh,bh
  405d26:	cmp    bl,BYTE PTR [edi+0x3a]
  405d29:	addr16 jp 0x405d4e
  405d2c:	push   0xffffff91
  405d2e:	push   ecx
  405d2f:	ja     0x405d71
  405d31:	add    al,bl
  405d33:	and    BYTE PTR [edi+0x40c30246],al
  405d39:	or     dh,bl
  405d3b:	cmp    bl,BYTE PTR [edi+0x3a]
  405d3e:	addr16 jp 0x405d63
  405d41:	push   0xffffff91
  405d43:	push   ecx
  405d44:	ja     0x405d86
  405d46:	add    al,bh
  405d48:	enter  0xc302,0x47
  405d4c:	into   
  405d4d:	loopne 0x405cff
  405d4f:	xchg   BYTE PTR [ecx+0x401acfc7],cl
  405d55:	jecxz  0x405da5
  405d57:	jecxz  0x405d2c
  405d59:	leave  
  405d5a:	iret   
  405d5b:	iret   
  405d5c:	test   BYTE PTR [edx],cl
  405d5e:	repz cli 
  405d60:	cld    
  405d61:	stc    
  405d62:	ret    0xa84
  405d65:	jecxz  0x405d5c
  405d67:	cld    
  405d68:	stc    
  405d69:	ret    0xa40
  405d6c:	fild   WORD PTR [eax+0xa]
  405d6f:	repz inc eax
  405d71:	add    al,bh
  405d73:	adc    eax,0x3a5f8c14
  405d78:	addr16 jp 0x405db3
  405d7b:	test   BYTE PTR [ebp+0x7751916a],cl
  405d81:	and    BYTE PTR [ebp+0xa408e30],al
  405d87:	repz jp 0x405d50
  405d8a:	cmp    BYTE PTR [eax+eiz*1-0x305c197b],al
  405d91:	iret   
  405d92:	iret   
  405d93:	inc    eax
  405d94:	add    al,bl
  405d96:	cmp    BYTE PTR [eax+eiz*1+0x7a8e3085],al
  405d9d:	retf   0xa40
  405da0:	repz loopne 0x405d87
  405da3:	inc    edx
  405da4:	dec    edx
  405da5:	jmp    0x405d99
  405da7:	int3   
  405da8:	int3   
  405da9:	inc    esi
  405daa:	or     dh,bh
  405dac:	inc    eax
  405dad:	or     al,bl
  405daf:	inc    esi
  405db0:	or     bh,bh
  405db2:	inc    eax
  405db3:	or     dh,bl
  405db5:	cmp    BYTE PTR [eax+eiz*1-0x20f5b97b],al
  405dbc:	inc    eax
  405dbd:	or     al,bl
  405dbf:	sbb    bh,ah
  405dc1:	loopne 0x405db6
  405dc3:	int3   
  405dc4:	int3   
  405dc5:	inc    eax
  405dc6:	xchg   edi,eax
  405dc7:	inc    eax
  405dc8:	or     al,bh
  405dca:	inc    eax
  405dcb:	pand   mm4,mm0
  405dce:	pop    ss
  405dcf:	inc    eax
  405dd0:	or     al,bl
  405dd2:	dec    eax
  405dd3:	out    0xc7,eax
  405dd5:	inc    esi
  405dd6:	or     bh,bl
  405dd8:	inc    eax
  405dd9:	or     bh,bl
  405ddb:	inc    eax
  405ddc:	(bad)  
  405dde:	out    0xba,eax
  405de0:	lock int3 
  405de2:	int3   
  405de3:	inc    esi
  405de4:	or     bl,bh
  405de6:	int3   
  405de7:	jp     0x405dc8
  405de9:	inc    eax
  405dea:	sbb    dh,bh
  405dec:	out    0x1d,eax
  405dee:	repnz int3 
  405df0:	int3   
  405df1:	inc    eax
  405df2:	or     dh,bl
  405df4:	cmp    BYTE PTR [eax+eiz*1+0x7a883085],al
  405dfb:	mov    DWORD PTR [eax+0xa],0xf329e7f7
  405e02:	int3   
  405e03:	int3   
  405e04:	inc    eax
  405e05:	or     ah,bl
  405e07:	cmp    BYTE PTR [eax+eiz*1+0x7acc1f85],al
  405e0e:	dec    esp
  405e10:	jp     0x405e09
  405e12:	out    0xd8,eax
  405e14:	test   ah,0xcc
  405e17:	inc    eax
  405e18:	add    dh,bl
  405e1a:	cmp    BYTE PTR [eax+eiz*1+0x7b8e309d],bl
  405e21:	sub    BYTE PTR [eax+0xa],al
  405e24:	ret    
  405e25:	inc    eax
  405e26:	iret   
  405e27:	inc    esi
  405e28:	or     al,bl
  405e2a:	inc    eax
  405e2b:	or     al,bh
  405e2d:	inc    eax
  405e2e:	add    al,bl
  405e30:	dec    eax
  405e31:	(bad)  
  405e32:	(bad)  [eax]
  405e34:	xchg   DWORD PTR [edx+0x57],edi
  405e37:	inc    eax
  405e38:	or     dh,bl
  405e3a:	cmp    BYTE PTR [eax+eiz*1+0x6d6c1085],al
  405e41:	xchg   BYTE PTR [ecx+0xa40cfc3],cl
  405e47:	sti    
  405e48:	inc    eax
  405e49:	pmovmskb esp,mm0
  405e4c:	(bad)  
  405e4d:	sbb    al,BYTE PTR [eax-0x1d]
  405e50:	inc    eax
  405e51:	or     al,bl
  405e53:	dec    eax
  405e54:	jecxz  0x405e35
  405e56:	dec    eax
  405e57:	jb     0x405e20
  405e59:	iret   
  405e5a:	sbb    BYTE PTR ds:0xbc4bdc14,dl
  405e60:	iret   
  405e61:	iret   
  405e62:	iret   
  405e63:	dec    edx
  405e64:	(bad)  
  405e65:	fmul   QWORD PTR [ebx-0x5c]
  405e68:	iret   
  405e69:	iret   
  405e6a:	iret   
  405e6b:	fdiv   QWORD PTR [edi+ecx*1+0x4687402f]
  405e72:	or     bh,bh
  405e74:	cmp    BYTE PTR [ecx-0x4808e5d2],bl
  405e7a:	dec    ebp
  405e7b:	enter  0xcfcf,0x38
  405e7f:	xchg   DWORD PTR [esi-0x72],ecx
  405e82:	pusha  
  405e83:	leave  
  405e84:	iret   
  405e85:	iret   
  405e86:	inc    esi
  405e87:	add    bh,bl
  405e89:	dec    eax
  405e8a:	push   0xfffffff3
  405e8c:	iret   
  405e8d:	cmp    BYTE PTR [esi+0x656c8661],al
  405e93:	xor    BYTE PTR [edx],al
  405e95:	sti    
  405e96:	js     0x405f03
  405e98:	inc    edx
  405e99:	mov    ecx,0xccccf25a
  405e9e:	cmp    bh,bh
  405ea0:	fdiv   QWORD PTR [edx+eax*1-0x3cedbf0d]
  405ea7:	inc    edx
  405ea8:	ret    
  405ea9:	inc    eax
  405eaa:	gs ss jle 0x405e77
  405eae:	jp     0x405ee4
  405eb0:	fdiv   QWORD PTR [esi+eax*8-0x30321f74]
  405eb7:	iret   
  405eb8:	xor    BYTE PTR gs:[edx+edi*2-0x38edbf3d],bl
  405ec0:	fdiv   QWORD PTR [ecx+esi*8-0x30d3ccb1]
  405ec7:	jnp    0x405eeb
  405ec9:	inc    eax
  405eca:	adc    al,bh
  405ecc:	fdiv   QWORD PTR [ecx+esi*8+0x338ddc65]
  405ed3:	sub    al,0xb0
  405ed5:	pusha  
  405ed6:	leave  
  405ed7:	iret   
  405ed8:	iret   
  405ed9:	gs and al,dh
  405edc:	gs cmp bh,dh
  405edf:	xor    BYTE PTR gs:[ebx+edi*2+0x6c9c61d9],bl
  405ee7:	int3   
  405ee8:	or     dh,bl
  405eea:	gs inc eax
  405eec:	add    bh,bl
  405eee:	gs ss add dh,bl
  405ef2:	jns    0x405e97
  405ef4:	loopne 0x405ebb
  405ef6:	int3   
  405ef7:	or     dh,bh
  405ef9:	popa   
  405efa:	popf   
  405efb:	ins    BYTE PTR es:[edi],dx
  405efc:	inc    eax
  405efd:	jp     0x405ec6
  405eff:	fdiv   QWORD PTR [ecx+eax*4-0x30c1ccb1]
  405f06:	jnp    0x405ee0
  405f08:	or     DWORD PTR [eax-0x34],ecx
  405f0b:	pushf  
  405f0c:	fmul   QWORD PTR [edx+0x74]
  405f0f:	int3   
  405f10:	int3   
  405f11:	int3   
  405f12:	cmp    BYTE PTR [edi-0x79ef9294],cl
  405f18:	mov    edi,eax
  405f1a:	iret   
  405f1b:	inc    eax
  405f1c:	add    dh,bh
  405f1e:	dec    esi
  405f1f:	mov    ds,WORD PTR [edx-0xe]
  405f22:	int3   
  405f23:	int3   
  405f24:	cmp    BYTE PTR gs:[edi+0x30658f38],al
  405f2b:	add    bh,bh
  405f2d:	fcomp  QWORD PTR [ebx-0x71]
  405f30:	loopne 0x405f1b
  405f32:	sbb    al,BYTE PTR [eax-0x1d]
  405f35:	dec    eax
  405f36:	jecxz  0x405f57
  405f38:	adc    al,0x40
  405f3a:	test   DWORD PTR [eax+0x44],0xcfcfcea7
  405f41:	dec    eax
  405f42:	aaa    
  405f43:	iret   
  405f44:	jp     0x405f0a
  405f46:	cmp    BYTE PTR [edi-0x3031c01a],cl
  405f4c:	iret   
  405f4d:	popa   
  405f4e:	and    ecx,esp
  405f50:	jp     0x405f19
  405f52:	out    0xaf,eax
  405f54:	repnz int3 
  405f56:	int3   
  405f57:	inc    eax
  405f58:	push   esp
  405f59:	mov    ds:0x42cfcfce,eax
  405f5e:	add    al,0x29
  405f60:	inc    esi
  405f61:	or     bh,BYTE PTR [ebx+0x460b0442]
  405f67:	or     dh,BYTE PTR [edi+0x46650442]
  405f6d:	or     dh,BYTE PTR [ebx-0x30b8bbbe]
  405f73:	iret   
  405f74:	iret   
  405f75:	inc    esi
  405f76:	or     cl,BYTE PTR [edi-0x305ebbbe]
  405f7c:	iret   
  405f7d:	iret   
  405f7e:	inc    esi
  405f7f:	or     cl,BYTE PTR [ebx-0x307cbbbe]
  405f85:	iret   
  405f86:	iret   
  405f87:	inc    esi
  405f88:	or     al,BYTE PTR [edi-0x3002bbbe]
  405f8e:	iret   
  405f8f:	iret   
  405f90:	inc    esi
  405f91:	or     al,BYTE PTR [ebx-0x3120bbbe]
  405f97:	iret   
  405f98:	iret   
  405f99:	inc    esi
  405f9a:	or     bl,BYTE PTR [edi-0x31c6bbbe]
  405fa0:	iret   
  405fa1:	iret   
  405fa2:	inc    esi
  405fa3:	or     bl,BYTE PTR [ebx-0x31e4bbbe]
  405fa9:	iret   
  405faa:	iret   
  405fab:	adc    al,0x46
  405fad:	jb     0x405f6e
  405faf:	inc    esi
  405fb0:	or     dl,BYTE PTR [edi-0x30300e19]
  405fb6:	iret   
  405fb7:	pop    ds
  405fb8:	inc    eax
  405fb9:	inc    esp
  405fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fbb:	into   
  405fbc:	iret   
  405fbd:	iret   
  405fbe:	int3   
  405fbf:	aas    
  405fc0:	out    0x5d,eax
  405fc2:	repnz int3 
  405fc4:	int3   
  405fc5:	inc    esi
  405fc6:	or     bh,bh
  405fc8:	dec    edx
  405fc9:	(bad)  
  405fca:	fmul   QWORD PTR [ebx-0x5e]
  405fcd:	iret   
  405fce:	iret   
  405fcf:	iret   
  405fd0:	inc    eax
  405fd1:	pop    es
  405fd2:	xor    ebx,DWORD PTR [eax]
  405fd4:	adc    eax,0x77ce7b40
  405fd9:	enter  0x40ff,0x4d
  405fdd:	sub    eax,DWORD PTR [eax+0x1d]
  405fe0:	rol    DWORD PTR [eax+0x15],cl
  405fe3:	das    
  405fe4:	inc    eax
  405fe5:	ins    DWORD PTR es:[edi],dx
  405fe6:	xlat   BYTE PTR ds:[ebx]
  405fe7:	enter  0x46f7,0x72
  405feb:	out    dx,eax
  405fec:	inc    eax
  405fed:	dec    ebp
  405fee:	fcmovne st,st(0)
  405ff0:	xchg   eax,ecx
  405ff2:	lahf   
  405ff3:	inc    esi
  405ff4:	add    bh,bl
  405ff6:	inc    esi
  405ff7:	sbb    ch,bl
  405ff9:	inc    esi
  405ffa:	jb     0x405ff3
  405ffc:	xor    al,dh
  405ffe:	je     0x405fc8
  406000:	inc    esi
  406001:	adc    dh,bh
  406003:	cmp    BYTE PTR [eax+0x36e71246],dl
  406009:	adc    dh,bh
  40600b:	jne    0x40608a
  40600d:	loopne 0x405fd7
  40600f:	inc    eax
  406010:	sbb    ch,bl
  406012:	inc    eax
  406013:	jb     0x406004
  406015:	fdiv   QWORD PTR [ebx+esi*1-0x2892cf94]
  40601c:	js     0x406030
  40601e:	xor    BYTE PTR [ebp-0x25],cl
  406021:	js     0x40603a
  406023:	inc    eax
  406024:	rcl    DWORD PTR [ecx+0x40],cl
  406027:	sbb    al,bh
  406029:	inc    eax
  40602a:	xor    esi,DWORD PTR [esi+0x42f31a46]
  406030:	sbb    bh,BYTE PTR [edi-0x8376838]
  406036:	and    BYTE PTR [edx],bl
  406038:	mov    DWORD PTR [edx+ecx*1-0x30303f1d],0x931a46cf
  406043:	inc    eax
  406044:	sbb    dh,bl
  406046:	dec    eax
  406047:	xor    edi,ecx
  406049:	jp     0x40601b
  40604b:	inc    eax
  40604c:	or     dl,BYTE PTR [ebx+0x18df3bcc]
  406052:	out    0xf5,eax
  406054:	repnz int3 
  406056:	int3   
  406057:	inc    eax
  406058:	add    bh,bl
  40605a:	dec    edx
  40605b:	(bad)  
  40605c:	jnp    0x406028
  40605e:	inc    eax
  40605f:	or     dh,bl
  406061:	inc    esi
  406062:	aaa    
  406063:	inc    eax
  406064:	or     bh,bh
  406066:	dec    eax
  406067:	or     dh,bl
  406069:	retf   
  40606a:	int3   
  40606b:	add    ah,bl
  40606d:	jp     0x40600a
  40606f:	inc    eax
  406070:	adc    ah,bh
  406072:	or     BYTE PTR [esi+0x12],al
  406075:	out    0x30,eax
  406077:	adc    dh,bh
  406079:	jns    0x4060d6
  40607b:	ins    DWORD PTR es:[edi],dx
  40607c:	adc    BYTE PTR [esi+eax*4-0x77],ch
  406080:	retf   
  406081:	iret   
  406082:	sbb    al,BYTE PTR [eax-0x1d]
  406085:	inc    eax
  406086:	or     al,bh
  406088:	adc    eax,0xce9bbfcc
  40608d:	iret   
  40608e:	iret   
  40608f:	inc    edx
  406090:	mov    edi,0xcfcfce57
  406095:	inc    eax
  406096:	or     al,bh
  406098:	out    0x5a,eax
  40609a:	int    0xcc
  40609c:	int3   
  40609d:	inc    eax
  40609e:	fld    QWORD PTR [esi-0x32]
  4060a1:	inc    eax
  4060a2:	lds    edi,FWORD PTR [eax]
  4060a4:	xchg   BYTE PTR [esi],dh
  4060a6:	(bad)  
  4060a7:	ins    DWORD PTR es:[edi],dx
  4060a8:	fcomp  QWORD PTR [edx-0x72]
  4060ab:	inc    eax
  4060ac:	mov    ss,WORD PTR [edx]
  4060ae:	mov    ebx,ecx
  4060b0:	iret   
  4060b1:	inc    eax
  4060b2:	pop    esp
  4060b3:	inc    edi
  4060b4:	into   
  4060b5:	iret   
  4060b6:	iret   
  4060b7:	sbb    al,ah
  4060b9:	fdivr  DWORD PTR [edx]
  4060bb:	dec    ebp
  4060bc:	enter  0xcfcf,0xca
  4060c0:	pusha  
  4060c1:	leave  
  4060c2:	iret   
  4060c3:	iret   
  4060c4:	gs inc esi
  4060c6:	into   
  4060c7:	dec    eax
  4060c8:	mov    cs,ecx
  4060ca:	dec    eax
  4060cb:	mov    ecx,ecx
  4060cd:	fdiv   QWORD PTR [ecx+ecx*8-0x30321f50]
  4060d4:	iret   
  4060d5:	xor    BYTE PTR gs:[eax-0x70c71086],cl
  4060dc:	gs inc esi
  4060de:	into   
  4060df:	inc    eax
  4060e0:	inc    esp
  4060e1:	inc    edi
  4060e2:	into   
  4060e3:	iret   
  4060e4:	iret   
  4060e5:	adc    BYTE PTR [eax+0x40f74014],cl
  4060eb:	inc    ebp
  4060ec:	inc    edi
  4060ed:	into   
  4060ee:	iret   
  4060ef:	iret   
  4060f0:	mov    fs,esp
  4060f2:	(bad)
  4060f5:	loopne 0x4060b8
  4060f7:	dec    edi
  4060f8:	(bad)  
  4060f9:	mov    ds:0x4769e64f,al
  4060fe:	(bad)  
  4060ff:	wbinvd 
  406101:	inc    ecx
  406102:	ror    DWORD PTR [edi-0xa],0x9c
  406106:	jp     0x406104
  406108:	test   edi,ecx
  40610a:	iret   
  40610b:	inc    eax
  40610c:	inc    ebp
  40610d:	inc    edi
  40610e:	into   
  40610f:	iret   
  406110:	iret   
  406111:	enter  0x6c84,0x88
  406115:	sbb    al,BYTE PTR [eax-0x1d]
  406118:	dec    eax
  406119:	jecxz  0x40614a
  40611b:	sbb    BYTE PTR [eax-0x3d060306],dh
  406121:	inc    esi
  406122:	adc    dh,bl
  406124:	inc    edx
  406125:	add    dh,cl
  406127:	inc    esi
  406128:	add    ch,bl
  40612a:	inc    eax
  40612b:	or     dh,bl
  40612d:	inc    eax
  40612e:	sbb    al,bh
  406130:	adc    eax,0x673a5f8d
  406135:	jp     0x40616f
  406137:	test   DWORD PTR [esp+ecx*4],edx
  40613a:	push   0xffffff91
  40613c:	push   ecx
  40613d:	ja     0x40615f
  40613f:	test   BYTE PTR [eax],dh
  406141:	lahf   
  406142:	inc    eax
  406143:	or     dh,bl
  406145:	fmul   QWORD PTR [ebx-0x34]
  406148:	iret   
  406149:	iret   
  40614a:	iret   
  40614b:	inc    eax
  40614c:	sbb    al,bl
  40614e:	cmp    BYTE PTR [ebp-0x60cf7be0],al
  406154:	fmul   QWORD PTR [ebx-0x1e]
  406157:	iret   
  406158:	iret   
  406159:	iret   
  40615a:	inc    eax
  40615b:	or     bl,bh
  40615d:	inc    esi
  40615e:	or     bh,bl
  406160:	inc    eax
  406161:	or     al,bl
  406163:	inc    esi
  406164:	or     dh,bh
  406166:	inc    eax
  406167:	or     al,bh
  406169:	test   BYTE PTR [edx],cl
  40616b:	call   FWORD PTR [edi-0x3]
  40616e:	stc    
  40616f:	ret    0xa46
  406172:	repz inc edx
  406174:	or     dl,cl
  406176:	inc    esi
  406177:	or     ah,bl
  406179:	inc    esi
  40617a:	adc    ah,bh
  40617c:	inc    esi
  40617d:	add    al,bl
  40617f:	test   BYTE PTR [edx],cl
  406181:	fcomip st,st(4)
  406183:	cld    
  406184:	stc    
  406185:	ret    0x240
  406188:	ret    
  406189:	cmp    BYTE PTR [ebp-0x61df6bc0],bl
  40618f:	enter  0xf71a,0x46
  406193:	sbb    al,bh
  406195:	inc    esi
  406196:	or     ch,bh
  406198:	out    0x51,al
  40619a:	iret   
  40619b:	iret   
  40619c:	iret   
  40619d:	inc    eax
  40619e:	or     al,bl
  4061a0:	inc    eax
  4061a1:	add    al,bl
  4061a3:	cmp    BYTE PTR [ebp+0x43429d38],al
  4061a9:	(bad)  
  4061aa:	xor    eax,0x40dd8100
  4061af:	or     al,bh
  4061b1:	cmp    BYTE PTR [ecx+0xa40fef4],bl
  4061b7:	fild   WORD PTR [eax+0x2]
  4061ba:	ret    
  4061bb:	cmp    BYTE PTR [ebp-0x71df62c8],al
  4061c1:	xor    BYTE PTR [edi+0xa403b7a],bl
  4061c7:	(bad)  
  4061c8:	enter  0xf30a,0x40
  4061cc:	add    bh,bl
  4061ce:	inc    ecx
  4061cf:	iret   
  4061d0:	dec    edx
  4061d1:	xchg   BYTE PTR [edx-0x3b],bh
  4061d4:	cmp    esp,DWORD PTR [edx-0x2b1f96dd]
  4061da:	inc    eax
  4061db:	add    bh,bh
  4061dd:	dec    edi
  4061de:	(bad)  
  4061df:	pop    edi
  4061e0:	mov    ecx,0x409e216a
  4061e5:	add    ah,bl
  4061e7:	dec    edi
  4061e8:	(bad)  
  4061e9:	pop    edi
  4061ea:	leave  
  4061eb:	mov    DWORD PTR [edi-0x1a],ecx
  4061ee:	push   0xffffff99
  4061f0:	xchg   DWORD PTR [eax+0x2],eax
  4061f3:	(bad)  
  4061f4:	enter  0xf302,0x47
  4061f8:	into   
  4061f9:	inc    eax
  4061fa:	or     al,bh
  4061fc:	inc    eax
  4061fd:	add    ah,bh
  4061ff:	enter  0x3884,0x85
  406203:	xor    BYTE PTR [esi+0xa402e7a],cl
  406209:	fild   WORD PTR [eax+0x2]
  40620c:	ret    
  40620d:	cmp    BYTE PTR [ebp-0x71df62c8],al
  406213:	enter  0x3884,0x85
  406217:	inc    esi
  406218:	or     bl,bh
  40621a:	inc    eax
  40621b:	or     al,bl
  40621d:	cmp    BYTE PTR [ebp-0x78df63c0],al
  406223:	enter  0xf702,0xe0
  406227:	ret    
  406228:	inc    eax
  406229:	or     al,bl
  40622b:	cmp    BYTE PTR [ebp-0x78df63c0],al
  406231:	enter  0xc702,0x46
  406235:	add    al,bh
  406237:	inc    eax
  406238:	or     bl,bh
  40623a:	xor    BYTE PTR [eax-0x33efb524],cl
  406240:	int3   
  406241:	int3   
  406242:	inc    eax
  406243:	or     ch,bl
  406245:	loopne 0x40620f
  406247:	inc    eax
  406248:	or     dh,bl
  40624a:	cmp    BYTE PTR [ebp+0x6d6c8420],al
  406250:	adc    BYTE PTR [esi+0x1acfc389],al
  406256:	inc    eax
  406257:	jecxz  0x4062a1
  406259:	jecxz  0x406236
  40625b:	test   BYTE PTR [edx],cl
  40625d:	(bad)  
  40625e:	cli    
  40625f:	cld    
  406260:	stc    
  406261:	ret    0xa84
  406264:	repz cmc 
  406266:	cld    
  406267:	stc    
  406268:	ret    0xc840
  40626b:	inc    esi
  40626c:	or     dh,bh
  40626e:	test   BYTE PTR [edx],cl
  406270:	sti    
  406271:	repnz cld 
  406273:	stc    
  406274:	ret    0x1415
  406277:	test   BYTE PTR [edx],cl
  406279:	jecxz  0x406255
  40627b:	addr16 xor al,bl
  40627e:	inc    eax
  40627f:	jb     0x406274
  406281:	inc    eax
  406282:	add    bh,bh
  406284:	mov    bh,0x5f
  406286:	cmp    ah,BYTE PTR [edi+0x7a]
  406289:	cmp    bh,dh
  40628b:	mov    cl,0x6a
  40628d:	xchg   ecx,eax
  40628e:	push   ecx
  40628f:	ja     0x4062c9
  406291:	xchg   DWORD PTR [eax],esp
  406293:	icebp  
  406294:	and    BYTE PTR [ecx-0x1f094324],al
  40629a:	add    eax,0x40f70240
  40629f:	jp     0x406294
  4062a1:	cmp    BYTE PTR [edi-0x7edf00c8],al
  4062a7:	and    cl,bh
  4062a9:	dec    edx
  4062aa:	popf   
  4062ab:	inc    eax
  4062ac:	jp     0x4062a5
  4062ae:	inc    eax
  4062af:	add    dh,bl
  4062b1:	jnp    0x40628d
  4062b3:	cmp    BYTE PTR [edi-0x7edf00c8],al
  4062b9:	and    cl,bh
  4062bb:	cwde   
  4062bc:	std    
  4062bd:	inc    eax
  4062be:	add    ah,bl
  4062c0:	cmp    BYTE PTR [edi-0x1c77ee0],al
  4062c6:	loopne 0x406289
  4062c8:	cmp    bh,bh
  4062ca:	cmp    BYTE PTR [edi-0x7edf06e0],al
  4062d0:	cwde   
  4062d1:	std    
  4062d2:	inc    esi
  4062d3:	jp     0x4062cc
  4062d5:	inc    eax
  4062d6:	add    dh,bl
  4062d8:	cmp    BYTE PTR [edi+0x50dcb342],al
  4062de:	sub    ch,BYTE PTR [edx+0x44]
  4062e1:	inc    eax
  4062e2:	add    bh,bl
  4062e4:	inc    eax
  4062e5:	jp     0x4062da
  4062e7:	cmp    bh,bh
  4062e9:	cmp    BYTE PTR [edi-0x9cf62e0],al
  4062ef:	jne    0x406292
  4062f1:	inc    eax
  4062f2:	or     dh,bh
  4062f4:	ins    BYTE PTR es:[edi],dx
  4062f5:	inc    esi
  4062f6:	enter  0xa40,0xf7
  4062fa:	ins    DWORD PTR es:[edi],dx
  4062fb:	xchg   BYTE PTR [eax+0x4ee3401a],cl
  406301:	jecxz  0x406332
  406303:	retf   
  406304:	iret   
  406305:	iret   
  406306:	test   BYTE PTR [edx],cl
  406308:	jecxz  0x406304
  40630a:	cld    
  40630b:	stc    
  40630c:	ret    0xa84
  40630f:	sti    
  406310:	cmc    
  406311:	cld    
  406312:	stc    
  406313:	ret    0xa84
  406316:	out    0xfa,eax
  406318:	std    
  406319:	stc    
  40631a:	ret    0x8418
  40631d:	or     ch,bl
  40631f:	sti    
  406320:	cld    
  406321:	stc    
  406322:	ret    0xa40
  406325:	jecxz  0x40633c
  406327:	lea    ebx,[edi+0x3a]
  40632a:	addr16 jp 0x406341
  40632d:	cmp    BYTE PTR [ebp+0x51916a8c],al
  406333:	ja     0x406355
  406335:	test   BYTE PTR [esi+0xa],al
  406338:	test   DWORD PTR [edx+ecx*1-0x6030d11],0xf30a84c2
  406343:	fisub  DWORD PTR [edi+0x30]
  406346:	fadd   DWORD PTR [edx+ecx*1-0x30303801]
  40634d:	iret   
  40634e:	inc    eax
  40634f:	xchg   BYTE PTR [eax+0xa],al
  406352:	sti    
  406353:	inc    eax
  406354:	add    ah,bl
  406356:	cmp    BYTE PTR [ebp-0x7bdf62c8],al
  40635c:	and    BYTE PTR [esp+ebx*8+0x3ee08ebc],bl
  406363:	inc    eax
  406364:	or     dh,bl
  406366:	enter  0x3884,0x85
  40636a:	inc    esi
  40636b:	or     dh,bh
  40636d:	inc    edx
  40636e:	adc    dh,bh
  406370:	out    0xef,eax
  406372:	int    0xcc
  406374:	int3   
  406375:	inc    esi
  406376:	or     dh,bh
  406378:	inc    eax
  406379:	or     dh,bh
  40637b:	inc    eax
  40637c:	add    dh,bl
  40637e:	inc    esi
  40637f:	dec    ebx
  406380:	inc    edx
  406381:	out    dx,eax
  406382:	lock int3 
  406384:	int3   
  406385:	inc    eax
  406386:	or     bh,bl
  406388:	inc    eax
  406389:	add    dh,bl
  40638b:	cmp    BYTE PTR [ebp+0x50c74b42],al
  406391:	sub    ch,BYTE PTR [edx+0x44]
  406394:	inc    esi
  406395:	or     dh,bl
  406397:	inc    eax
  406398:	or     ah,bh
  40639a:	inc    eax
  40639b:	add    bh,bl
  40639d:	cmp    BYTE PTR [ebp-0x71df7ac8],bl
  4063a3:	inc    eax
  4063a4:	add    dh,bl
  4063a6:	xor    BYTE PTR [edi+0xa40b675],al
  4063ac:	jmp    0x4063e6
  4063ae:	test   DWORD PTR [eax],esp
  4063b0:	test   BYTE PTR [esi+0xa],al
  4063b3:	test   DWORD PTR [edx+ecx*1-0x6020419],0xe09040c2
  4063be:	ins    DWORD PTR es:[edi],dx
  4063bf:	inc    eax
  4063c0:	add    ch,bh
  4063c2:	inc    eax
  4063c3:	or     dh,bh
  4063c5:	cmp    BYTE PTR [ebp-0x186763e0],bl
  4063cb:	inc    esi
  4063cc:	or     dh,bl
  4063ce:	inc    eax
  4063cf:	or     al,bh
  4063d1:	inc    ecx
  4063d2:	mov    DWORD PTR [edi+0x2],0xc00241c0
  4063d9:	inc    eax
  4063da:	sbb    dh,bh
  4063dc:	fdiv   QWORD PTR [ebp+0x46813886]
  4063e2:	add    al,bh
  4063e4:	inc    eax
  4063e5:	add    ah,bh
  4063e7:	inc    eax
  4063e8:	sbb    al,bh
  4063ea:	cmp    BYTE PTR [ebp-0x7ed763e0],bl
  4063f0:	inc    eax
  4063f1:	inc    ebx
  4063f2:	inc    edx
  4063f3:	out    dx,eax
  4063f4:	lock int3 
  4063f6:	int3   
  4063f7:	inc    eax
  4063f8:	sbb    dh,bl
  4063fa:	cmp    BYTE PTR [ecx+0x40f70246],al
  406400:	add    bh,bl
  406402:	cmp    BYTE PTR [ebp+0x50c74b42],bl
  406408:	sub    ch,BYTE PTR [edx+0x44]
  40640b:	inc    esi
  40640c:	or     al,bh
  40640e:	inc    eax
  40640f:	or     bh,bl
  406411:	cmp    BYTE PTR [ebp-0x78df63c0],al
  406417:	enter  0xff02,0x46
  40641b:	add    bh,bh
  40641d:	inc    eax
  40641e:	or     ah,bl
  406420:	inc    eax
  406421:	add    bh,bh
  406423:	cmp    BYTE PTR [ebp-0x78cf7be0],al
  406429:	jp     0x406486
  40642b:	inc    eax
  40642c:	or     ch,bl
  40642e:	inc    eax
  40642f:	add    dh,bh
  406431:	cmp    BYTE PTR [ebp+0x6d6c8420],al
  406437:	cmp    BYTE PTR [esi-0x347679f0],cl
  40643d:	iret   
  40643e:	sbb    al,BYTE PTR [eax-0x1d]
  406441:	inc    eax
  406442:	or     dl,bl
  406444:	inc    eax
  406445:	add    al,bh
  406447:	inc    eax
  406448:	sbb    bl,bh
  40644a:	inc    eax
  40644b:	dec    edi
  40644c:	pop    edi
  40644d:	into   
  40644e:	iret   
  40644f:	iret   
  406450:	inc    eax
  406451:	iret   
  406452:	dec    eax
  406453:	jecxz  0x4064c0
  406455:	sbb    BYTE PTR ds:0x3a5f8c14,dl
  40645b:	addr16 jp 0x406496
  40645e:	pushf  
  40645f:	mov    al,0x6a
  406461:	xchg   ecx,eax
  406462:	push   ecx
  406463:	ja     0x406485
  406465:	xor    BYTE PTR [eax],0x81
  406468:	jp     0x406446
  40646a:	dec    esi
  40646b:	ret    0x6b70
  40646e:	push   esi
  40646f:	mov    BYTE PTR [ebx],0xca
  406472:	addr16 and dh,0xf2
  406476:	retf   
  406477:	iret   
  406478:	iret   
  406479:	inc    eax
  40647a:	add    al,bh
  40647c:	inc    eax
  40647d:	jp     0x40645a
  40647f:	inc    eax
  406480:	aad    0x38
  406482:	pushf  
  406483:	and    BYTE PTR [eax+0x4bdc9e30],al
  406489:	stos   DWORD PTR es:[edi],eax
  40648a:	retf   
  40648b:	iret   
  40648c:	iret   
  40648d:	inc    eax
  40648e:	add    dl,bl
  406490:	inc    esi
  406491:	or     ch,bl
  406493:	inc    esi
  406494:	add    dl,bl
  406496:	inc    eax
  406497:	add    dl,bh
  406499:	inc    eax
  40649a:	lds    eax,FWORD PTR [esi+0xa]
  40649d:	out    dx,eax
  40649e:	test   BYTE PTR [edx],cl
  4064a0:	(bad)  
  4064a1:	cli    
  4064a2:	cld    
  4064a3:	stc    
  4064a4:	ret    0xf5b1
  4064a7:	cld    
  4064a8:	stc    
  4064a9:	ret    0x1a46
  4064ac:	test   DWORD PTR [eax+0xa],0xd30a46d3
  4064b3:	inc    eax
  4064b4:	or     dl,bl
  4064b6:	inc    eax
  4064b7:	dec    edi
  4064b8:	pop    edi
  4064b9:	into   
  4064ba:	iret   
  4064bb:	iret   
  4064bc:	inc    eax
  4064bd:	iret   
  4064be:	inc    esi
  4064bf:	add    dl,BYTE PTR [ebx+0x40d30240]
  4064c5:	inc    esi
  4064c6:	pop    edi
  4064c7:	into   
  4064c8:	iret   
  4064c9:	iret   
  4064ca:	inc    eax
  4064cb:	(bad)  
  4064cc:	enter  0x3307,0x46
  4064d0:	add    bl,bh
  4064d2:	inc    eax
  4064d3:	or     al,bh
  4064d5:	cmp    BYTE PTR [eax+eiz*1-0xcf5b978],al
  4064dc:	inc    eax
  4064dd:	or     al,bh
  4064df:	cmp    BYTE PTR [eax+eiz*1-0x28f5b978],al
  4064e6:	inc    eax
  4064e7:	or     bl,bh
  4064e9:	inc    eax
  4064ea:	nop    DWORD PTR [eax-0x19]
  4064ee:	ret    
  4064ef:	inc    esi
  4064f0:	or     dl,BYTE PTR [edi+0x40df0a40]
  4064f6:	getsec 
  4064f8:	inc    eax
  4064f9:	add    bl,bh
  4064fb:	pop    es
  4064fc:	dec    edx
  4064fd:	push   cs
  4064fe:	sbb    eax,DWORD PTR [eax+0xa]
  406501:	fistp  QWORD PTR [ebx-0x29]
  406504:	inc    eax
  406505:	getsec 
  406507:	inc    eax
  406508:	add    bl,bh
  40650a:	inc    eax
  40650b:	push   es
  40650c:	sbb    eax,DWORD PTR [edi]
  40650e:	hlt    
  40650f:	lahf   
  406510:	sub    BYTE PTR [edi+0x40df0a40],al
  406516:	getsec 
  406518:	enter  0xe08e,0xc8
  40651c:	inc    eax
  40651d:	bndstx [esi+0xa],bnd0
  406521:	rol    DWORD PTR [eax+0xa],cl
  406524:	(bad)  
  406525:	cmp    BYTE PTR [eax+eiz*1-0x28f5b978],al
  40652c:	inc    eax
  40652d:	or     al,bh
  40652f:	cmp    BYTE PTR [eax+eiz*1-0x28f5b978],al
  406536:	inc    eax
  406537:	or     al,bh
  406539:	inc    eax
  40653a:	add    dl,BYTE PTR [ebx-0x77df7bc8]
  406540:	inc    esi
  406541:	into   
  406542:	inc    esi
  406543:	sbb    dl,bh
  406545:	test   BYTE PTR [edx],cl
  406547:	xlat   BYTE PTR ds:[ebx]
  406548:	hlt    
  406549:	cld    
  40654a:	stc    
  40654b:	ret    0xa84
  40654e:	xlat   BYTE PTR ds:[ebx]
  40654f:	idiv   esp
  406551:	stc    
  406552:	ret    0xa84
  406555:	xlat   BYTE PTR ds:[ebx]
  406556:	idiv   ah
  406558:	stc    
  406559:	ret    0xa40
  40655c:	test   DWORD PTR [eax+0x2],0x208438d3
  406563:	mov    ah,bl
  406565:	mov    esp,0xc702408e
  40656a:	inc    eax
  40656b:	sbb    dl,BYTE PTR [edi+0x43429c38]
  406571:	ficom  WORD PTR [eax+0x2a]
  406574:	push   0x44
  406576:	xor    BYTE PTR [esi-0x375cb724],cl
  40657c:	iret   
  40657d:	iret   
  40657e:	inc    eax
  40657f:	or     al,bh
  406581:	cmp    BYTE PTR [eax+eiz*1-0x28f5b978],al
  406588:	inc    eax
  406589:	or     dl,bl
  40658b:	enter  0xeb0a,0x46
  40658f:	or     dh,bl
  406591:	int3   
  406592:	jp     0x406587
  406594:	inc    eax
  406595:	jp     0x406582
  406597:	inc    eax
  406598:	add    bl,bh
  40659a:	out    0x2,eax
  40659c:	dec    ah
  40659e:	int3   
  40659f:	inc    esi
  4065a0:	or     al,bl
  4065a2:	test   BYTE PTR [edx],cl
  4065a4:	out    0xf2,eax
  4065a6:	cld    
  4065a7:	stc    
  4065a8:	ret    0xa40
  4065ab:	out    0x38,eax
  4065ad:	test   BYTE PTR [eax],ah
  4065af:	mov    BYTE PTR [edi],bl
  4065b1:	inc    edx
  4065b2:	or     cl,BYTE PTR [edi-0xbcd18e1]
  4065b8:	int3   
  4065b9:	int3   
  4065ba:	inc    eax
  4065bb:	or     al,bl
  4065bd:	dec    edx
  4065be:	(bad)  
  4065bf:	jnp    0x4065de
  4065c1:	inc    eax
  4065c2:	or     ah,bh
  4065c4:	cmp    BYTE PTR [eax+eiz*1+0x7acc1f88],al
  4065cb:	ret    
  4065cc:	inc    edx
  4065cd:	or     cl,BYTE PTR [edi-0x57918e1]
  4065d3:	int3   
  4065d4:	int3   
  4065d5:	inc    eax
  4065d6:	or     dh,bl
  4065d8:	inc    esi
  4065d9:	or     ah,bh
  4065db:	inc    eax
  4065dc:	or     ah,bh
  4065de:	inc    eax
  4065df:	add    ch,bl
  4065e1:	and    BYTE PTR [esi+0x40e70a46],cl
  4065e7:	or     al,bl
  4065e9:	inc    eax
  4065ea:	add    al,bl
  4065ec:	inc    eax
  4065ed:	pandn  mm1,mm0
  4065f0:	push   cs
  4065f1:	ret    
  4065f2:	inc    eax
  4065f3:	add    ah,bh
  4065f5:	xor    BYTE PTR [edi+0xa40d579],al
  4065fb:	ret    
  4065fc:	inc    eax
  4065fd:	movnti DWORD PTR [eax+0x2],eax
  406601:	ret    
  406602:	enter  0xc70e,0x40
  406606:	add    ah,bh
  406608:	and    BYTE PTR [esi-0x3036021a],cl
  40660e:	iret   
  40660f:	popa   
  406610:	ret    
  406611:	int3   
  406612:	jp     0x406607
  406614:	inc    edx
  406615:	or     bh,BYTE PTR [ebx-0x5b118e1]
  40661b:	int3   
  40661c:	int3   
  40661d:	mov    bh,0xfa
  40661f:	cld    
  406620:	stc    
  406621:	ret    0xa46
  406624:	fwait
  406625:	test   BYTE PTR [edx],cl
  406627:	lahf   
  406628:	cmc    
  406629:	cld    
  40662a:	stc    
  40662b:	ret    0xa84
  40662e:	xor    esp,0xfffffffc
  406631:	stc    
  406632:	ret    0xa84
  406635:	xchg   edi,esi
  406637:	cld    
  406638:	stc    
  406639:	ret    0x242
  40663c:	fwait
  40663d:	inc    esi
  40663e:	add    bh,bl
  406640:	inc    edx
  406641:	add    bl,BYTE PTR [edi+0x42ff0246]
  406647:	add    al,BYTE PTR [ebx+0x42c30246]
  40664d:	add    al,BYTE PTR [edi+0x40e30246]
  406653:	add    al,bh
  406655:	cmp    BYTE PTR [eax+eiz*1-0x18fdb980],bl
  40665c:	out    0xf4,al
  40665e:	into   
  40665f:	iret   
  406660:	iret   
  406661:	xor    dh,ah
  406663:	cld    
  406664:	stc    
  406665:	ret    0x4bdc
  406668:	int    0xce
  40666a:	iret   
  40666b:	iret   
  40666c:	inc    eax
  40666d:	add    dh,bh
  40666f:	cmp    BYTE PTR [eax+eax*2+0x468020ff],bl
  406676:	add    dl,bh
  406678:	inc    eax
  406679:	or     ah,bh
  40667b:	cmp    ah,dh
  40667d:	inc    edx
  40667e:	dec    ebx
  40667f:	lds    edx,FWORD PTR [eax+0x2a]
  406682:	push   0x44
  406684:	inc    esi
  406685:	or     ah,bh
  406687:	inc    eax
  406688:	or     dh,bh
  40668a:	inc    eax
  40668b:	add    ah,bh
  40668d:	cmp    BYTE PTR [eax+eiz*1+0x7a873088],al
  406694:	fadd   DWORD PTR [eax+0xa]
  406697:	(bad)  
  406698:	cmp    BYTE PTR [eax+eiz*1-0x3c9ee078],al
  40669f:	inc    edx
  4066a0:	or     bh,BYTE PTR [ebx-0xe9d18e1]
  4066a6:	int3   
  4066a7:	int3   
  4066a8:	inc    eax
  4066a9:	or     bh,bl
  4066ab:	inc    eax
  4066ac:	iret   
  4066ad:	cmp    BYTE PTR [ecx+eax*2+0x2a1cca4b],al
  4066b4:	push   0x44
  4066b6:	inc    eax
  4066b7:	add    al,bh
  4066b9:	cmp    BYTE PTR [esp+ebx*8-0x7fdf704b],bl
  4066c0:	xor    BYTE PTR [esi-0x3188b424],cl
  4066c6:	iret   
  4066c7:	iret   
  4066c8:	inc    eax
  4066c9:	or     bh,bh
  4066cb:	inc    eax
  4066cc:	iret   
  4066cd:	cmp    BYTE PTR [ecx+eax*2+0x2a1cca4b],al
  4066d4:	push   0x44
  4066d6:	inc    eax
  4066d7:	add    al,bh
  4066d9:	cmp    BYTE PTR [esp+ebx*8-0x7fdf704b],bl
  4066e0:	xor    BYTE PTR [esi-0x31e8b424],cl
  4066e6:	iret   
  4066e7:	iret   
  4066e8:	inc    eax
  4066e9:	or     al,bl
  4066eb:	inc    eax
  4066ec:	iret   
  4066ed:	cmp    BYTE PTR [ecx+eax*2+0x2a1cca4b],al
  4066f4:	push   0x44
  4066f6:	inc    eax
  4066f7:	add    al,bh
  4066f9:	cmp    BYTE PTR [esp+ebx*8-0x7fdf704b],bl
  406700:	xor    BYTE PTR [esi-0x31c8b424],cl
  406706:	iret   
  406707:	iret   
  406708:	inc    eax
  406709:	or     ah,bl
  40670b:	inc    eax
  40670c:	iret   
  40670d:	cmp    BYTE PTR [ecx+eax*2+0x2a1cca4b],al
  406714:	push   0x44
  406716:	inc    eax
  406717:	add    al,bh
  406719:	cmp    BYTE PTR [esp+ebx*8-0x7fdf704b],bl
  406720:	xor    BYTE PTR [esi-0x3128b424],cl
  406726:	iret   
  406727:	iret   
  406728:	inc    eax
  406729:	or     bh,bh
  40672b:	inc    eax
  40672c:	iret   
  40672d:	cmp    BYTE PTR [ecx+eax*2+0x2a1cca4b],al
  406734:	push   0x44
  406736:	inc    eax
  406737:	add    bh,bl
  406739:	inc    eax
  40673a:	(bad)  
  40673b:	cmp    BYTE PTR [ecx+eax*2+0x2a1cc243],bl
  406742:	push   0x44
  406744:	cmp    DWORD PTR [esi+0x40c30240],ecx
  40674a:	(bad)  
  40674b:	cmp    BYTE PTR [ecx+eax*2+0x2a1cc243],bl
  406752:	push   0x44
  406754:	ror    DWORD PTR [esi+0x40fb0240],0xc6
  40675b:	cmp    BYTE PTR [ecx+eax*2+0x2a18c243],bl
  406762:	push   0x44
  406764:	xor    DWORD PTR [edi-0x3064b524],eax
  40676a:	iret   
  40676b:	iret   
  40676c:	inc    eax
  40676d:	or     al,bl
  40676f:	inc    eax
  406770:	iret   
  406771:	cmp    BYTE PTR [ecx+eax*2+0x2a1cca4b],al
  406778:	push   0x44
  40677a:	inc    eax
  40677b:	add    bh,bh
  40677d:	inc    eax
  40677e:	(bad)  
  40677f:	cmp    BYTE PTR [ecx+eax*2+0x2a1cc243],bl
  406786:	push   0x44
  406788:	cmp    DWORD PTR [esi+0x40e30240],ecx
  40678e:	(bad)  
  40678f:	cmp    BYTE PTR [ecx+eax*2+0x2a1cc243],bl
  406796:	push   0x44
  406798:	ror    DWORD PTR [esi+0x40ff0240],0xc6
  40679f:	cmp    BYTE PTR [ecx+eax*2+0x2a18c243],bl
  4067a6:	push   0x44
  4067a8:	xor    DWORD PTR [edi-0x30a0b524],eax
  4067ae:	iret   
  4067af:	iret   
  4067b0:	inc    eax
  4067b1:	or     ah,bl
  4067b3:	inc    eax
  4067b4:	iret   
  4067b5:	cmp    BYTE PTR [ecx+eax*2+0x2a1cca4b],al
  4067bc:	push   0x44
  4067be:	inc    eax
  4067bf:	add    al,bl
  4067c1:	inc    eax
  4067c2:	(bad)  
  4067c3:	cmp    BYTE PTR [ecx+eax*2+0x2a1cc243],bl
  4067ca:	push   0x44
  4067cc:	cmp    DWORD PTR [esi+0x40fb0240],ecx
  4067d2:	(bad)  
  4067d3:	cmp    BYTE PTR [ecx+eax*2+0x2a1cc243],bl
  4067da:	push   0x44
  4067dc:	ror    DWORD PTR [esi+0x40c30240],0xc6
  4067e3:	cmp    BYTE PTR [ecx+eax*2+0x2a18c243],bl
  4067ea:	push   0x44
  4067ec:	xor    DWORD PTR [edi+0xa401f7a],eax
  4067f2:	jecxz  0x406834
  4067f4:	iret   
  4067f5:	cmp    BYTE PTR [ecx+eax*2+0x2a1cca4b],al
  4067fc:	push   0x44
  4067fe:	inc    eax
  4067ff:	add    bh,bl
  406801:	inc    eax
  406802:	(bad)  
  406803:	cmp    BYTE PTR [ecx+eax*2+0x2a1cc243],bl
  40680a:	push   0x44
  40680c:	cmp    DWORD PTR [esi+0x40ff0240],ecx
  406812:	(bad)  
  406813:	cmp    BYTE PTR [ecx+eax*2+0x2a1cc243],bl
  40681a:	push   0x44
  40681c:	ror    DWORD PTR [esi+0x40e30240],0xc6
  406823:	cmp    BYTE PTR [ecx+eax*2+0x2a18c243],bl
  40682a:	push   0x44
  40682c:	xor    DWORD PTR [edi+0xa42df7a],eax
  406832:	mov    ebx,0xf18be71f
  406837:	int3   
  406838:	int3   
  406839:	inc    eax
  40683a:	add    dh,BYTE PTR [ebx-0x3e8471d0]
  406840:	inc    eax
  406841:	or     al,bh
  406843:	cmp    BYTE PTR [eax+eiz*1-0x28f5b978],al
  40684a:	inc    eax
  40684b:	or     dh,bh
  40684d:	cmp    BYTE PTR [edx+eax*2+0x2a503f4b],al
  406854:	push   0x44
  406856:	cmp    BYTE PTR [eax+eax*2+0x1a40c702],al
  40685d:	xlat   BYTE PTR ds:[ebx]
  40685e:	cmp    BYTE PTR [eax+eiz*1-0x2361cf80],bl
  406865:	dec    ebx
  406866:	hlt    
  406867:	repnz int3 
  406869:	int3   
  40686a:	inc    eax
  40686b:	or     al,bh
  40686d:	inc    eax
  40686e:	add    dl,bh
  406870:	cmp    BYTE PTR [eax+eiz*1+0x7a873088],al
  406877:	fiadd  WORD PTR [eax+0xa]
  40687a:	test   DWORD PTR [eax+0x2],0x428438d3
  406881:	dec    ebx
  406882:	(bad)  
  406883:	push   eax
  406884:	sub    ch,BYTE PTR [edx+0x44]
  406887:	loopne 0x4068fd
  406889:	popa   
  40688a:	xlat   BYTE PTR ds:[ebx]
  40688b:	int3   
  40688c:	jp     0x406881
  40688e:	inc    edx
  40688f:	or     dl,BYTE PTR [ebx+0x1f]
  406892:	out    0xc4,eax
  406894:	clc    
  406895:	int3   
  406896:	int3   
  406897:	inc    eax
  406898:	or     al,bh
  40689a:	inc    eax
  40689b:	add    ah,bh
  40689d:	cmp    BYTE PTR [eax+eiz*1+0x7b8e3088],al
  4068a4:	fadd   DWORD PTR [eax+0xa]
  4068a7:	(bad)  
  4068a8:	cmp    BYTE PTR [eax+eiz*1-0x289ee078],al
  4068af:	inc    edx
  4068b0:	or     dl,BYTE PTR [ebx+0x1f]
  4068b3:	out    0x12,eax
  4068b5:	test   esp,0xf30a40cc
  4068bb:	dec    eax
  4068bc:	(bad)  
  4068bd:	xlat   BYTE PTR ds:[ebx]
  4068be:	inc    esi
  4068bf:	or     dl,bh
  4068c1:	int3   
  4068c2:	jp     0x406883
  4068c4:	int3   
  4068c5:	jp     0x40689e
  4068c7:	inc    eax
  4068c8:	or     ah,BYTE PTR [ebx+0x1fef0ac8]
  4068ce:	out    0x80,eax
  4068d0:	stc    
  4068d1:	int3   
  4068d2:	int3   
  4068d3:	inc    eax
  4068d4:	or     al,bh
  4068d6:	inc    eax
  4068d7:	add    ah,bh
  4068d9:	cmp    BYTE PTR [eax+eiz*1+0x7b8e3088],al
  4068e0:	fisub  WORD PTR [ecx-0x31]
  4068e3:	int3   
  4068e4:	jp     0x4068a5
  4068e6:	inc    eax
  4068e7:	or     ah,BYTE PTR [ebx+0x1fef0ac8]
  4068ed:	out    0x28,eax
  4068ef:	test   esp,0x930a40cc
  4068f5:	inc    eax
  4068f6:	add    bh,BYTE PTR [edi+0xa40c7ce]
  4068fc:	mov    edi,0x46d30ac8
  406901:	or     dl,bl
  406903:	inc    eax
  406904:	or     dh,bh
  406906:	inc    eax
  406907:	add    dl,bl
  406909:	cmp    BYTE PTR [eax+eiz*1-0x71432378],al
  406910:	inc    eax
  406911:	add    al,bh
  406913:	inc    eax
  406914:	sbb    dl,BYTE PTR [edi+0x43429c38]
  40691a:	ficom  WORD PTR [eax+0x2a]
  40691d:	push   0x44
  40691f:	xor    BYTE PTR [esi-0xcebb624],cl
  406925:	int3   
  406926:	int3   
  406927:	inc    eax
  406928:	jp     0x406905
  40692a:	inc    eax
  40692b:	or     ch,bh
  40692d:	inc    esi
  40692e:	(bad)
  406931:	inc    eax
  406932:	add    al,bh
  406934:	inc    eax
  406935:	sbb    al,bl
  406937:	cmp    BYTE PTR [eax+edi*1+0x20802094],bl
  40693e:	cwde   
  40693f:	xor    BYTE PTR [ecx+0x13aed97a],al
  406945:	add    al,0x61
  406947:	dec    ebx
  406948:	data16 (bad) 
  40694a:	and    BYTE PTR [ebx+0x71],bh
  40694d:	imul   ebp,DWORD PTR [eax+0x4b610413],0xffffffe0
  406954:	cs inc eax
  406956:	add    al,bh
  406958:	cmp    BYTE PTR [eax+eiz*1+0x7b8e3080],bl
  40695f:	ret    
  406960:	dec    esi
  406961:	retf   0x1573
  406964:	cmp    ebx,0x73
  406967:	ins    BYTE PTR es:[edi],dx
  406968:	popa   
  406969:	jnp    0x40694b
  40696b:	ror    DWORD PTR [esi+0x2a],0x13
  40696f:	rol    DWORD PTR [edi-0x6a],0x70
  406973:	retf   
  406974:	popa   
  406975:	mov    al,0x6c
  406977:	ins    DWORD PTR es:[edi],dx
  406978:	adc    BYTE PTR [esi+0x1acfd789],al
  40697e:	inc    eax
  40697f:	jecxz  0x4069c9
  406981:	jmp    0x40697a
  406983:	inc    eax
  406984:	or     ch,BYTE PTR [edi]
  406986:	dec    eax
  406987:	jecxz  0x406964
  406989:	sbb    BYTE PTR [eax+0x12],al
  40698c:	fist   DWORD PTR ds:0xfcfa3214
  406992:	stc    
  406993:	ret    0xc17a
  406996:	addr16 cmc 
  406998:	cld    
  406999:	stc    
  40699a:	ret    0x39e6
  40699d:	into   
  40699e:	iret   
  40699f:	iret   
  4069a0:	inc    eax
  4069a1:	or     ch,BYTE PTR [edi]
  4069a3:	xor    dh,ch
  4069a5:	cld    
  4069a6:	stc    
  4069a7:	ret    0xc17a
  4069aa:	addr16 hlt 
  4069ac:	cld    
  4069ad:	stc    
  4069ae:	ret    0x2de6
  4069b1:	into   
  4069b2:	iret   
  4069b3:	iret   
  4069b4:	inc    eax
  4069b5:	or     ch,BYTE PTR [edi]
  4069b7:	xor    dh,ah
  4069b9:	cld    
  4069ba:	stc    
  4069bb:	ret    0xc17a
  4069be:	addr16 idiv esp
  4069c1:	stc    
  4069c2:	ret    0xc1e6
  4069c5:	into   
  4069c6:	iret   
  4069c7:	iret   
  4069c8:	inc    eax
  4069c9:	or     ch,BYTE PTR [edi]
  4069cb:	xor    dh,bh
  4069cd:	cld    
  4069ce:	stc    
  4069cf:	ret    0xc17a
  4069d2:	addr16 idiv ah
  4069d5:	stc    
  4069d6:	ret    0xf5e6
  4069d9:	iret   
  4069da:	iret   
  4069db:	iret   
  4069dc:	inc    eax
  4069dd:	add    ch,BYTE PTR [edi]
  4069df:	mov    bh,0xf3
  4069e1:	cld    
  4069e2:	stc    
  4069e3:	ret    0x8730
  4069e6:	fmul   QWORD PTR [edx-0x4b]
  4069e9:	iret   
  4069ea:	iret   
  4069eb:	iret   
  4069ec:	inc    eax
  4069ed:	or     bl,bh
  4069ef:	inc    esi
  4069f0:	or     ebp,DWORD PTR [ebx]
  4069f2:	ret    
  4069f3:	inc    eax
  4069f4:	or     dl,bh
  4069f6:	inc    esi
  4069f7:	or     ebp,DWORD PTR [ebx]
  4069f9:	fild   DWORD PTR [eax+0xa]
  4069fc:	ret    
  4069fd:	inc    esi
  4069fe:	or     ebp,DWORD PTR [ebx]
  406a00:	xlat   BYTE PTR ds:[ebx]
  406a01:	inc    eax
  406a02:	or     al,bh
  406a04:	inc    esi
  406a05:	or     ebp,DWORD PTR [ebx]
  406a07:	fild   WORD PTR [eax+0xb]
  406a0a:	sub    ebx,edi
  406a0c:	inc    eax
  406a0d:	add    ebp,DWORD PTR [ebx]
  406a0f:	fisttp DWORD PTR [edi+ebx*2+0x387a673a]
  406a16:	test   BYTE PTR [ebp+0x7751916a],cl
  406a1c:	and    BYTE PTR [ebp+0xb40ce46],al
  406a22:	sub    eax,ebx
  406a24:	inc    eax
  406a25:	dec    edi
  406a26:	pop    ebx
  406a27:	into   
  406a28:	iret   
  406a29:	iret   
  406a2a:	inc    eax
  406a2b:	mov    DWORD PTR [eax+0xb],0x4f40c32b
  406a32:	pop    ebx
  406a33:	into   
  406a34:	iret   
  406a35:	iret   
  406a36:	inc    eax
  406a37:	iret   
  406a38:	enter  0x330e,0x40
  406a3c:	add    ebp,DWORD PTR [ebx]
  406a3e:	ret    
  406a3f:	inc    eax
  406a40:	inc    esi
  406a41:	fwait
  406a42:	into   
  406a43:	iret   
  406a44:	iret   
  406a45:	inc    eax
  406a46:	push   es
  406a47:	(bad)  [ecx-0x35]
  406a4a:	addr16 iret 
  406a4c:	aas    
  406a4d:	iret   
  406a4e:	iret   
  406a4f:	int3   
  406a50:	jg     0x406a71
  406a52:	popa   
  406a53:	iret   
  406a54:	int3   
  406a55:	sahf   
  406a56:	inc    esi
  406a57:	enter  0xb40,0x2b
  406a5b:	(bad)  
  406a5d:	jnp    0x406a8a
  406a5f:	ret    
  406a60:	cmp    BYTE PTR [eax+eiz*1+0x2b0b4685],al
  406a67:	das    
  406a68:	inc    edx
  406a69:	or     ebp,DWORD PTR [ebx]
  406a6b:	das    
  406a6c:	pop    ds
  406a6d:	sbb    ah,cl
  406a6f:	jnp    0x406a9c
  406a71:	das    
  406a72:	int3   
  406a73:	jnp    0x406aa0
  406a75:	daa    
  406a76:	int3   
  406a77:	jnp    0x406aa4
  406a79:	sub    esp,edi
  406a7b:	mov    esi,?
  406a7d:	int3   
  406a7e:	int3   
  406a7f:	inc    eax
  406a80:	or     ebp,DWORD PTR [ebx]
  406a82:	fild   WORD PTR [eax-0x40]
  406a85:	cmp    BYTE PTR [eax+eiz*1+0x7b873085],al
  406a8c:	adc    eax,DWORD PTR [eax+0xb]
  406a8f:	sub    edx,edi
  406a91:	inc    eax
  406a92:	add    ebp,DWORD PTR [ebx]
  406a94:	fstp   TBYTE PTR [eax]
  406a96:	test   BYTE PTR [eax],ah
  406a98:	test   esp,ebx
  406a9a:	mov    esp,0x46d32b0b
  406a9f:	into   
  406aa0:	loopne 0x406aa6
  406aa2:	inc    eax
  406aa3:	add    ch,BYTE PTR [edi]
  406aa5:	dec    esi
  406aa6:	div    dh
  406aa8:	cld    
  406aa9:	stc    
  406aaa:	ret    0xc47a
  406aad:	addr16 icebp 
  406aaf:	cld    
  406ab0:	stc    
  406ab1:	ret    0x2de0
  406ab4:	inc    eax
  406ab5:	add    ch,BYTE PTR [edi]
  406ab7:	dec    esi
  406ab8:	div    cl
  406aba:	cld    
  406abb:	stc    
  406abc:	ret    0xc47a
  406abf:	addr16 lock cld 
  406ac2:	stc    
  406ac3:	ret    0xc3e0
  406ac6:	inc    eax
  406ac7:	add    ch,BYTE PTR [edi]
  406ac9:	dec    esi
  406aca:	div    al
  406acc:	cld    
  406acd:	stc    
  406ace:	ret    0xd77a
  406ad1:	pop    ds
  406ad2:	int3   
  406ad3:	jp     0x406aa8
  406ad5:	int3   
  406ad6:	jp     0x406aaf
  406ad8:	sbb    ah,cl
  406ada:	jp     0x406abb
  406adc:	int3   
  406add:	jp     0x406aa2
  406adf:	int3   
  406ae0:	jp     0x406aa9
  406ae2:	out    0x55,eax
  406ae4:	int    0xcc
  406ae6:	int3   
  406ae7:	inc    esi
  406ae8:	enter  0xc840,0x6c
  406aec:	ins    DWORD PTR es:[edi],dx
  406aed:	adc    BYTE PTR [eax-0x16],al
  406af0:	adc    cl,BYTE PTR [ecx+0x401acfd3]
  406af6:	jecxz  0x406b40
  406af8:	jecxz  0x406abd
  406afa:	mov    bh,0xfa
  406afc:	cld    
  406afd:	stc    
  406afe:	ret    0xa46
  406b01:	test   DWORD PTR [edx+ecx*1-0x6030a05],0xf70240c2
  406b0c:	dec    esi
  406b0d:	(bad)  
  406b0e:	pop    edi
  406b0f:	cmp    ah,BYTE PTR [edi+0x7a]
  406b12:	dec    esi
  406b13:	out    0x6a,al
  406b15:	xchg   ecx,eax
  406b16:	push   ecx
  406b17:	ja     0x406b5f
  406b19:	add    dh,bl
  406b1b:	inc    eax
  406b1c:	add    al,bl
  406b1e:	pop    ds
  406b1f:	inc    esi
  406b20:	add    al,bl
  406b22:	int3   
  406b23:	jp     0x406ae8
  406b25:	inc    edx
  406b26:	or     dh,bl
  406b28:	int3   
  406b29:	jp     0x406af2
  406b2b:	pop    ds
  406b2c:	int3   
  406b2d:	jp     0x406af2
  406b2f:	int3   
  406b30:	jp     0x406b2d
  406b32:	int3   
  406b33:	jp     0x406b2c
  406b35:	out    0x8,eax
  406b37:	int    0xcc
  406b39:	int3   
  406b3a:	inc    esi
  406b3b:	or     dh,bl
  406b3d:	inc    eax
  406b3e:	or     dh,bl
  406b40:	xchg   BYTE PTR [ecx+0x401acfc7],cl
  406b46:	jecxz  0x406b96
  406b48:	jecxz  0x406ad1
  406b4a:	iret   
  406b4b:	iret   
  406b4c:	iret   
  406b4d:	adc    eax,0xa84f538
  406b52:	mov    bl,0xdd
  406b54:	mov    bh,0xc0
  406b57:	test   BYTE PTR [edx],cl
  406b59:	pop    ecx
  406b5b:	retf   0xc4cb
  406b5e:	test   BYTE PTR [edx],cl
  406b60:	mov    eax,ebp
  406b62:	into   
  406b63:	iret   
  406b64:	enter  0xa84,0x87
  406b68:	leave  
  406b69:	rcl    bl,cl
  406b6b:	sub    al,0x84
  406b6d:	or     al,BYTE PTR [ebx-0x2f2829d3]
  406b73:	test   BYTE PTR [edx],cl
  406b75:	lahf   
  406b76:	rcr    edx,1
  406b78:	fcmovnbe st,st(4)
  406b7a:	test   BYTE PTR [edx],cl
  406b7c:	fwait
  406b7d:	aad    0xde
  406b7f:	jge    0x406be7
  406b81:	test   BYTE PTR [edx],cl
  406b83:	xchg   edi,eax
  406b84:	addr16 pusha 
  406b86:	popa   
  406b87:	push   0xffffff84
  406b89:	or     dl,BYTE PTR [ebx+0x6e65646b]
  406b8f:	test   BYTE PTR [edx],cl
  406b91:	out    dx,eax
  406b92:	outs   dx,DWORD PTR ds:[esi]
  406b93:	push   0xa847269
  406b98:	jmp    0x406c0d
  406b9a:	dec    esp
  406b9b:	dec    ebp
  406b9c:	jbe    0x406b22
  406b9e:	or     ah,bh
  406ba0:	ja     0x406c12
  406ba2:	jno    0x406c1e
  406ba4:	test   BYTE PTR [edx],cl
  406ba6:	jecxz  0x406c23
  406ba8:	je     0x406c1f
  406baa:	jle    0x406b30
  406bac:	or     bh,bh
  406bae:	or     al,0xd
  406bb0:	ss aaa 
  406bb2:	test   BYTE PTR [edx],cl
  406bb4:	sti    
  406bb5:	xor    BYTE PTR [ecx],dh
  406bb7:	cmp    bh,BYTE PTR [ebx]
  406bb9:	test   BYTE PTR [edx],cl
  406bbb:	div    DWORD PTR [esi*1-0x70c7ccd1]
  406bc2:	fdiv   QWORD PTR [ebp+0x4eb3ca03]
  406bc8:	(bad)  
  406bc9:	mov    ds:0x4ecfcfcf,al
  406bce:	mov    gs,WORD PTR [ebp+0x47cfcfcf]
  406bd4:	add    cl,ah
  406bd6:	inc    ecx
  406bd7:	add    cl,ah
  406bd9:	fdiv   QWORD PTR [ebp-0x3db4b87a]
  406bdf:	aaa    
  406be0:	int3   
  406be1:	int3   
  406be2:	int3   
  406be3:	cmovs  esi,edi
  406be6:	vmwrite edx,DWORD PTR [esi+0x7a368638]
  406bed:	(bad)  
  406bee:	fadd   QWORD PTR [ebp-0x5a]
  406bf1:	iret   
  406bf2:	iret   
  406bf3:	iret   
  406bf4:	adc    al,0x41
  406bf6:	retf   
  406bf7:	(bad)  
  406bf8:	xor    esi,DWORD PTR [edx]
  406bfa:	jp     0x406bc7
  406bfc:	cmp    BYTE PTR [edi-0x4a233f20],cl
  406c02:	(bad)  
  406c03:	fdiv   QWORD PTR [ebp-0x33c835b5]
  406c09:	int3   
  406c0a:	int3   
  406c0b:	push   cs
  406c0c:	inc    ecx
  406c0d:	fcmovnbe st,st(6)
  406c0f:	dec    edi
  406c10:	icebp  
  406c11:	xor    bh,BYTE PTR [edx-0x3b]
  406c14:	dec    eax
  406c15:	push   0xffffffb7
  406c17:	iret   
  406c18:	loopne 0x406bf7
  406c1a:	fdiv   QWORD PTR [ebp+0x5bb5dc99]
  406c20:	fidiv  DWORD PTR [edi]
  406c22:	int3   
  406c23:	int3   
  406c24:	int3   
  406c25:	inc    esi
  406c26:	sbb    dh,BYTE PTR [edi-0x2924bef2]
  406c2c:	dec    edi
  406c2d:	icebp  
  406c2e:	xor    bh,BYTE PTR [edx-0x35]
  406c31:	cmp    ah,cl
  406c33:	loopne 0x406bf5
  406c35:	fdiv   QWORD PTR [ebp-0x4c4a2367]
  406c3b:	fidiv  DWORD PTR [edi]
  406c3d:	int3   
  406c3e:	int3   
  406c3f:	int3   
  406c40:	push   cs
  406c41:	inc    ecx
  406c42:	fcmovnbe st,st(6)
  406c44:	dec    edi
  406c45:	icebp  
  406c46:	xor    bh,BYTE PTR [edx-0x35]
  406c49:	cmp    BYTE PTR [ecx-0x4a233f20],bl
  406c4f:	cdq    
  406c50:	fdiv   QWORD PTR [ebp-0x33c825a5]
  406c56:	int3   
  406c57:	int3   
  406c58:	mov    gs,edi
  406c5a:	(bad)
  406c5d:	mov    bh,0xe
  406c5f:	mov    gs,edi
  406c61:	(bad)
  406c64:	mov    gs,edi
  406c66:	(bad)
  406c69:	xor    BYTE PTR [edx-0x21],bh
  406c6c:	js     0x406c98
  406c6e:	inc    eax
  406c6f:	jb     0x406c34
  406c71:	inc    eax
  406c72:	lahf   
  406c73:	mov    fs,ecx
  406c75:	fild   WORD PTR [edi-0x25]
  406c78:	or     eax,0xdf7a3005
  406c7d:	js     0x406c5a
  406c7f:	inc    eax
  406c80:	lahf   
  406c81:	mov    fs,ecx
  406c83:	mov    DWORD PTR [edi-0x25],0x7a30050d
  406c8a:	fistp  QWORD PTR [eax-0x3b]
  406c8d:	inc    eax
  406c8e:	xchg   esp,eax
  406c8f:	inc    edi
  406c90:	retf   
  406c91:	aad    0x5
  406c93:	xor    BYTE PTR [edx],al
  406c95:	(bad)  
  406c96:	fmul   QWORD PTR [ecx+0x16]
  406c99:	int3   
  406c9a:	int3   
  406c9b:	int3   
  406c9c:	ins    BYTE PTR es:[edi],dx
  406c9d:	ins    DWORD PTR es:[edi],dx
  406c9e:	xchg   BYTE PTR [ecx-0x66c7303d],cl
  406ca4:	dec    edi
  406ca5:	jae    0x406c75
  406ca7:	int3   
  406ca8:	xor    bh,BYTE PTR [edx-0x32]
  406cab:	or     DWORD PTR [edi+0x73],ecx
  406cae:	into   
  406caf:	int    0x32
  406cb1:	jp     0x406c81
  406cb3:	or     DWORD PTR [esi-0x709f3619],ecx
  406cb9:	enter  0x8920,0x88
