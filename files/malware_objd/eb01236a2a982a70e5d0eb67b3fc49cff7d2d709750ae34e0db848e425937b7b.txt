
eb01236a2a982a70e5d0eb67b3fc49cff7d2d709750ae34e0db848e425937b7b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sbb    ecx,0x40a3
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	mov    ecx,DWORD PTR ds:0x42a1b3
  401019:	adc    DWORD PTR ds:0x42a14f,ecx
  40101f:	push   esi
  401020:	push   edi
  401021:	and    DWORD PTR ds:0x42a183,0x0
  40102b:	jmp    0x40103d
  401030:	mov    edi,DWORD PTR ds:0x42a183
  401036:	inc    edi
  401037:	mov    DWORD PTR ds:0x42a183,edi
  40103d:	cmp    DWORD PTR ds:0x42a183,0x17
  401044:	jae    0x401067
  40104a:	cmp    DWORD PTR ds:0x42a183,0x1c
  401051:	ja     0x401067
  401057:	jmp    0x401062
  40105c:	call   DWORD PTR ds:0x42a293
  401062:	jmp    0x401030
  401067:	mov    esi,0x75108a8
  40106c:	mov    DWORD PTR ds:0x42a13f,0x1f
  401076:	cmp    DWORD PTR ds:0x42a13f,0x0
  40107d:	je     0x4010bf
  401083:	cmp    DWORD PTR ds:0x42a13f,0x2c
  40108a:	ja     0x4010bf
  401090:	jmp    0x4010ad
  401095:	push   DWORD PTR [ebp-0x1c]
  401098:	push   0x6c93
  40109d:	push   0x429093
  4010a2:	push   0x400000
  4010a7:	call   DWORD PTR ds:0x42a297
  4010ad:	mov    edi,DWORD PTR ds:0x42a13f
  4010b3:	dec    edi
  4010b4:	mov    DWORD PTR ds:0x42a13f,edi
  4010ba:	jmp    0x401076
  4010bf:	xor    eax,esi
  4010c1:	sbb    DWORD PTR ds:0x42a18f,0x4c4b
  4010cb:	mov    edi,0x3272ef
  4010d0:	and    DWORD PTR ds:0x42a13f,0x59cd
  4010da:	add    eax,edi
  4010dc:	mov    ecx,DWORD PTR ds:0x42a13b
  4010e2:	sbb    ecx,DWORD PTR ds:0x42a17b
  4010e8:	mov    DWORD PTR ds:0x42a13b,ecx
  4010ee:	mov    DWORD PTR [ebp-0x40],eax
  4010f1:	mov    DWORD PTR ds:0x42a167,0x1b
  4010fb:	cmp    DWORD PTR ds:0x42a167,0x0
  401102:	je     0x40114e
  401108:	cmp    DWORD PTR ds:0x42a167,0x3
  40110f:	jb     0x40114e
  401115:	jmp    0x401120
  40111a:	call   DWORD PTR ds:0x42a29b
  401120:	cmp    DWORD PTR ds:0x42a167,0x4
  401127:	jne    0x40113c
  40112d:	xor    ecx,ecx
  40112f:	add    ecx,DWORD PTR ds:0x42a167
  401135:	dec    ecx
  401136:	mov    DWORD PTR ds:0x42a167,ecx
  40113c:	mov    ecx,DWORD PTR ds:0x42a167
  401142:	dec    ecx
  401143:	mov    DWORD PTR ds:0x42a167,ecx
  401149:	jmp    0x4010fb
  40114e:	mov    eax,ds:0x4292af
  401153:	mov    eax,DWORD PTR [eax]
  401155:	xor    ecx,ecx
  401157:	or     ecx,DWORD PTR ds:0x42a27f
  40115d:	mov    ecx,DWORD PTR [ecx]
  40115f:	sbb    DWORD PTR ds:0x42a15f,ecx
  401165:	mov    DWORD PTR [ebp-0x3c],eax
  401168:	sub    ecx,0x5dee
  40116e:	mov    eax,ds:0x4294bf
  401173:	and    DWORD PTR ds:0x42a1b7,edx
  401179:	mov    eax,DWORD PTR [eax]
  40117b:	and    DWORD PTR ds:0x42a18f,0x0
  401185:	jmp    0x401197
  40118a:	mov    ecx,DWORD PTR ds:0x42a18f
  401190:	inc    ecx
  401191:	mov    DWORD PTR ds:0x42a18f,ecx
  401197:	cmp    DWORD PTR ds:0x42a18f,0x1d
  40119e:	jae    0x4011d3
  4011a4:	cmp    DWORD PTR ds:0x42a18f,0x22
  4011ab:	jg     0x4011d3
  4011b1:	jmp    0x4011ce
  4011b6:	push   DWORD PTR [ebp-0x10]
  4011b9:	push   0x1d13
  4011be:	push   0x42920b
  4011c3:	push   0x400000
  4011c8:	call   DWORD PTR ds:0x42a2a3
  4011ce:	jmp    0x40118a
  4011d3:	mov    DWORD PTR [ebp-0x1c],eax
  4011d6:	sub    ecx,eax
  4011d8:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  4011df:	mov    DWORD PTR ds:0x42a16b,0x4da
  4011e9:	mov    eax,DWORD PTR [ebp-0x34]
  4011ec:	dec    ecx
  4011ed:	xor    eax,esi
  4011ef:	xor    DWORD PTR ds:0x42a1a7,0x5e5b
  4011f9:	add    eax,edi
  4011fb:	add    DWORD PTR ds:0x42a16f,0x6276
  401205:	mov    DWORD PTR [ebp-0x40],eax
  401208:	and    DWORD PTR ds:0x42a147,0x0
  401212:	jmp    0x401226
  401217:	xor    ecx,ecx
  401219:	or     ecx,DWORD PTR ds:0x42a147
  40121f:	inc    ecx
  401220:	mov    DWORD PTR ds:0x42a147,ecx
  401226:	cmp    DWORD PTR ds:0x42a147,0x15
  40122d:	jae    0x401250
  401233:	cmp    DWORD PTR ds:0x42a147,0x19
  40123a:	jle    0x401250
  401240:	jmp    0x40124b
  401245:	call   DWORD PTR ds:0x42a2a7
  40124b:	jmp    0x401217
  401250:	mov    eax,ds:0x42942f
  401255:	mov    DWORD PTR [ebp-0x40],eax
  401258:	mov    eax,DWORD PTR [ebp-0x3c]
  40125b:	mov    DWORD PTR ds:0x42a18b,0x16
  401265:	cmp    DWORD PTR ds:0x42a18b,0x0
  40126c:	je     0x4012a7
  401272:	cmp    DWORD PTR ds:0x42a18b,0x20
  401279:	jg     0x4012a7
  40127f:	jmp    0x401295
  401284:	push   DWORD PTR [ebp-0x28]
  401287:	push   0x42a137
  40128c:	push   DWORD PTR [ebp-0x28]
  40128f:	call   DWORD PTR ds:0x42a2ab
  401295:	mov    ecx,DWORD PTR ds:0x42a18b
  40129b:	dec    ecx
  40129c:	mov    DWORD PTR ds:0x42a18b,ecx
  4012a2:	jmp    0x401265
  4012a7:	mov    DWORD PTR [ebp-0x14],eax
  4012aa:	sub    ecx,eax
  4012ac:	mov    eax,DWORD PTR [ebp-0x14]
  4012af:	push   0x4
  4012b1:	xor    ecx,ecx
  4012b3:	xor    ecx,DWORD PTR ds:0x42a1cb
  4012b9:	xor    DWORD PTR ds:0x42a143,ecx
  4012bf:	pop    ecx
  4012c0:	or     DWORD PTR ds:0x42a197,0x7ab3
  4012ca:	sub    ecx,eax
  4012cc:	add    DWORD PTR ds:0x42a13f,0x1333
  4012d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4012d9:	movzx  eax,BYTE PTR ds:0x42a187
  4012e0:	xor    DWORD PTR ds:0x42a14b,eax
  4012e6:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4012ed:	mov    DWORD PTR [ebp-0x18],ecx
  4012f0:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  4012fa:	add    DWORD PTR ds:0x42a1b3,0x1736
  401304:	mov    eax,DWORD PTR [ebp-0x14]
  401307:	mov    DWORD PTR [ebp-0x9c],eax
  40130d:	and    DWORD PTR ds:0x42a1ab,0x0
  401317:	jmp    0x40132a
  40131c:	xor    eax,eax
  40131e:	xor    eax,DWORD PTR ds:0x42a1ab
  401324:	inc    eax
  401325:	mov    ds:0x42a1ab,eax
  40132a:	cmp    DWORD PTR ds:0x42a1ab,0x18
  401331:	jae    0x401364
  401337:	cmp    DWORD PTR ds:0x42a1ab,0x1e
  40133e:	jb     0x401364
  401344:	jmp    0x40135f
  401349:	push   0x8043
  40134e:	push   0x4a07
  401353:	push   DWORD PTR [ebp-0x24]
  401356:	push   DWORD PTR [ebp-0xc]
  401359:	call   DWORD PTR ds:0x42a2af
  40135f:	jmp    0x40131c
  401364:	mov    eax,DWORD PTR [ebp-0x18]
  401367:	xor    DWORD PTR ds:0x42a18f,0x63f7
  401371:	mov    DWORD PTR [ebp-0x98],eax
  401377:	mov    eax,DWORD PTR [ebp-0x2c]
  40137a:	sbb    DWORD PTR ds:0x42a18f,0x379e
  401384:	xor    eax,esi
  401386:	add    eax,edi
  401388:	mov    DWORD PTR [ebp-0x94],eax
  40138e:	or     DWORD PTR ds:0x42a16b,0x36f8
  401398:	lea    eax,[ebp-0x48]
  40139b:	mov    DWORD PTR [ebp-0x90],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0xa0]
  4013a7:	inc    DWORD PTR ds:0x42a18b
  4013ad:	xor    eax,esi
  4013af:	sbb    DWORD PTR ds:0x42a18b,0x42a177
  4013b9:	add    eax,edi
  4013bb:	or     DWORD PTR ds:0x42a19b,0x42a15b
  4013c5:	mov    DWORD PTR [ebp-0xa0],eax
  4013cb:	sub    DWORD PTR ds:0x42a143,0x1d49
  4013d5:	lea    eax,[ebp-0xa0]
  4013db:	push   eax
  4013dc:	neg    eax
  4013de:	mov    eax,DWORD PTR [ebp+0xc]
  4013e1:	sub    DWORD PTR ds:0x42a17b,0x2c11
  4013eb:	xor    eax,esi
  4013ed:	add    eax,edi
  4013ef:	push   eax
  4013f0:	mov    eax,ds:0x42944f
  4013f5:	push   0x4293a5
  4013fa:	mov    DWORD PTR ds:0x42a157,0x524d
  401404:	push   DWORD PTR [eax]
  401406:	call   0x40a8fb
  40140b:	xor    edx,edx
  40140d:	add    edx,DWORD PTR ds:0x42a16f
  401413:	and    DWORD PTR ds:0x42a15f,edx
  401419:	mov    ebx,DWORD PTR [ebp-0x14]
  40141c:	mov    eax,DWORD PTR [ebp-0x18]
  40141f:	mov    DWORD PTR [ebp-0x58],eax
  401422:	mov    eax,ds:0x42a1d7
  401427:	mov    edx,DWORD PTR ds:0x42a21f
  40142d:	sub    edx,eax
  40142f:	sub    eax,DWORD PTR [eax+edx*1]
  401432:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  401439:	mov    eax,0xf89c85bb
  40143e:	mov    DWORD PTR [ebp-0x1c],eax
  401441:	xor    DWORD PTR ds:0x42a157,0x37ec
  40144b:	lea    ecx,[eax-0x2]
  40144e:	and    DWORD PTR ds:0x42a1b3,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42a1b3
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42a1b3,edx
  40146a:	cmp    DWORD PTR ds:0x42a1b3,0x18
  401471:	jae    0x4014be
  401477:	cmp    DWORD PTR ds:0x42a1b3,0x4
  40147e:	jge    0x4014be
  401484:	jmp    0x40149f
  401489:	push   DWORD PTR [ebp-0x18]
  40148c:	push   DWORD PTR [ebp-0x14]
  40148f:	push   0x42a1af
  401494:	push   0x249d
  401499:	call   DWORD PTR ds:0x42a2b3
  40149f:	cmp    DWORD PTR ds:0x42a1b3,0x3
  4014a6:	jne    0x4014b9
  4014ac:	mov    edx,DWORD PTR ds:0x42a1b3
  4014b2:	inc    edx
  4014b3:	mov    DWORD PTR ds:0x42a1b3,edx
  4014b9:	jmp    0x40145d
  4014be:	mov    DWORD PTR [ebp-0x28],ecx
  4014c1:	movzx  edx,WORD PTR ds:0x42a173
  4014c8:	sbb    DWORD PTR ds:0x42a157,edx
  4014ce:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4014d5:	mov    DWORD PTR [ebp-0x8],eax
  4014d8:	mov    eax,DWORD PTR [ebp-0x10]
  4014db:	xor    eax,esi
  4014dd:	and    DWORD PTR ds:0x42a14f,0x0
  4014e7:	jmp    0x4014fb
  4014ec:	xor    edx,edx
  4014ee:	or     edx,DWORD PTR ds:0x42a14f
  4014f4:	inc    edx
  4014f5:	mov    DWORD PTR ds:0x42a14f,edx
  4014fb:	cmp    DWORD PTR ds:0x42a14f,0x18
  401502:	jae    0x401551
  401508:	cmp    DWORD PTR ds:0x42a14f,0x5
  40150f:	jb     0x401551
  401515:	jmp    0x401532
  40151a:	push   0x42a167
  40151f:	push   DWORD PTR [ebp-0xc]
  401522:	push   0x4290bb
  401527:	push   0x429032
  40152c:	call   DWORD PTR ds:0x42a2b7
  401532:	cmp    DWORD PTR ds:0x42a14f,0x4
  401539:	jne    0x40154c
  40153f:	mov    edx,DWORD PTR ds:0x42a14f
  401545:	inc    edx
  401546:	mov    DWORD PTR ds:0x42a14f,edx
  40154c:	jmp    0x4014ec
  401551:	mov    edx,0xffcd8d91
  401556:	or     DWORD PTR ds:0x42a137,0x42a15b
  401560:	sub    edx,eax
  401562:	not    eax
  401564:	mov    DWORD PTR [ebp-0xc],edx
  401567:	mov    DWORD PTR ds:0x42a19f,0x2809
  401571:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401578:	mov    DWORD PTR ds:0x42a13b,ecx
  40157e:	mov    eax,DWORD PTR [ebp-0x8]
  401581:	mov    DWORD PTR ds:0x42a193,0x7f63
  40158b:	mov    DWORD PTR [ebp-0x3c],ebx
  40158e:	mov    DWORD PTR ds:0x42a193,0x4784
  401598:	cmp    eax,ecx
  40159a:	mov    DWORD PTR ds:0x42a1d3,0x12a
  4015a4:	je     0x40185b
  4015aa:	and    eax,ecx
  4015ac:	mov    eax,DWORD PTR [ebp-0x10]
  4015af:	and    DWORD PTR ds:0x42a163,0x0
  4015b9:	jmp    0x4015cb
  4015be:	mov    ecx,DWORD PTR ds:0x42a163
  4015c4:	inc    ecx
  4015c5:	mov    DWORD PTR ds:0x42a163,ecx
  4015cb:	cmp    DWORD PTR ds:0x42a163,0x10
  4015d2:	jae    0x401614
  4015d8:	cmp    DWORD PTR ds:0x42a163,0x6
  4015df:	jbe    0x401614
  4015e5:	jmp    0x4015f5
  4015ea:	push   0x4c56
  4015ef:	call   DWORD PTR ds:0x42a2bf
  4015f5:	cmp    DWORD PTR ds:0x42a163,0x5
  4015fc:	jne    0x40160f
  401602:	mov    ecx,DWORD PTR ds:0x42a163
  401608:	inc    ecx
  401609:	mov    DWORD PTR ds:0x42a163,ecx
  40160f:	jmp    0x4015be
  401614:	mov    ecx,DWORD PTR [ebp-0x10]
  401617:	sbb    DWORD PTR ds:0x42a13f,0x6da3
  401621:	xor    eax,esi
  401623:	xor    ecx,esi
  401625:	or     DWORD PTR ds:0x42a193,0x42a197
  40162f:	lea    ecx,[eax+ecx*1+0x64e5de]
  401636:	xor    eax,DWORD PTR ds:0x42a1c7
  40163c:	mov    eax,DWORD PTR [ebp-0xc]
  40163f:	xor    edx,edx
  401641:	div    ecx
  401643:	sub    ecx,eax
  401645:	mov    eax,DWORD PTR [ebp-0x8]
  401648:	mov    ecx,DWORD PTR [ebp-0x10]
  40164b:	sbb    DWORD PTR ds:0x42a18f,0x52cd
  401655:	xor    eax,esi
  401657:	xor    ecx,esi
  401659:	sub    eax,ecx
  40165b:	cmp    edx,eax
  40165d:	mov    DWORD PTR ds:0x42a15b,0x4928
  401667:	jne    0x401805
  40166d:	add    DWORD PTR ds:0x42a1ab,edi
  401673:	mov    eax,DWORD PTR [ebp-0xc]
  401676:	add    DWORD PTR ds:0x42a17b,ebx
  40167c:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  401683:	mov    eax,DWORD PTR [ebp-0x28]
  401686:	xor    DWORD PTR ds:0x42a16f,0x3725
  401690:	mov    ecx,DWORD PTR [ebp-0x18]
  401693:	add    DWORD PTR ds:0x42a13f,0x6412
  40169d:	xor    eax,esi
  40169f:	xor    ecx,esi
  4016a1:	add    eax,edi
  4016a3:	xor    DWORD PTR ds:0x42a15f,0x42a18b
  4016ad:	add    ecx,edi
  4016af:	mov    BYTE PTR [ebp-0x21],dl
  4016b2:	cmp    eax,ecx
  4016b4:	jae    0x4017dd
  4016ba:	lea    ecx,[eax-0x3272ef]
  4016c0:	mov    DWORD PTR ds:0x42a183,0x1c
  4016ca:	cmp    DWORD PTR ds:0x42a183,0x0
  4016d1:	je     0x401709
  4016d7:	cmp    DWORD PTR ds:0x42a183,0x23
  4016de:	jg     0x401709
  4016e4:	jmp    0x4016f7
  4016e9:	push   DWORD PTR [ebp-0x20]
  4016ec:	push   0x5db4
  4016f1:	call   DWORD PTR ds:0x42a2c3
  4016f7:	mov    edx,DWORD PTR ds:0x42a183
  4016fd:	dec    edx
  4016fe:	mov    DWORD PTR ds:0x42a183,edx
  401704:	jmp    0x4016ca
  401709:	mov    DWORD PTR [ebp-0x14],ecx
  40170c:	xor    DWORD PTR ds:0x42a1af,ecx
  401712:	mov    edx,DWORD PTR [ebp-0x14]
  401715:	xor    edx,esi
  401717:	add    edx,0x7f55d8fb
  40171d:	mov    DWORD PTR ds:0x42a14b,0x52dc
  401727:	lea    ecx,[ebp+eax*4-0xb4]
  40172e:	mov    DWORD PTR ds:0x42a16b,0x1786
  401738:	mov    DWORD PTR [ecx],edx
  40173a:	not    edx
  40173c:	mov    edx,DWORD PTR [ecx]
  40173e:	mov    DWORD PTR ds:0x42a13f,0x42a6
  401748:	cmp    edx,0x244ecb9c
  40174e:	mov    DWORD PTR ds:0x42a187,0x6943
  401758:	jbe    0x40177d
  40175e:	add    DWORD PTR ds:0x42a147,0x3ac8
  401768:	add    DWORD PTR [ecx],0x405fcdd
  40176e:	mov    DWORD PTR ds:0x42a17b,0x6763
  401778:	jmp    0x40178d
  40177d:	add    DWORD PTR ds:0x42a12b,0x42a18b
  401787:	add    DWORD PTR [ecx],0xfdaf4323
  40178d:	sub    ecx,0x38f7
  401793:	mov    ecx,DWORD PTR [ebp-0x18]
  401796:	xor    DWORD PTR ds:0x42a1a3,0x8c7
  4017a0:	xor    ecx,esi
  4017a2:	dec    DWORD PTR ds:0x42a137
  4017a8:	inc    eax
  4017a9:	sbb    DWORD PTR ds:0x42a1ab,0x42a1bb
  4017b3:	inc    DWORD PTR [ebp-0x14]
  4017b6:	add    DWORD PTR ds:0x42a1cf,0x42a16f
  4017c0:	add    ecx,edi
  4017c2:	cmp    eax,ecx
  4017c4:	mov    DWORD PTR ds:0x42a1af,0x74e1
  4017ce:	jb     0x40170c
  4017d4:	not    DWORD PTR ds:0x42a18b
  4017da:	mov    dl,BYTE PTR [ebp-0x21]
  4017dd:	xor    DWORD PTR ds:0x42a12f,edi
  4017e3:	mov    eax,DWORD PTR [ebp-0x34]
  4017e6:	xor    al,0xa8
  4017e8:	mov    cl,0x11
  4017ea:	sub    cl,al
  4017ec:	add    dl,cl
  4017ee:	mov    ecx,DWORD PTR [ebp-0x1c]
  4017f1:	xor    cl,0xa8
  4017f4:	sub    cl,0x11
  4017f7:	ror    dl,cl
  4017f9:	xor    eax,eax
  4017fb:	mov    eax,DWORD PTR [ebp-0xc]
  4017fe:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401805:	mov    eax,DWORD PTR [ebp-0xc]
  401808:	mov    ecx,DWORD PTR [ebp-0x28]
  40180b:	sub    eax,edi
  40180d:	xor    eax,esi
  40180f:	cmp    eax,ecx
  401811:	jne    0x40183b
  401817:	mov    eax,DWORD PTR [ebp-0x8]
  40181a:	mov    ecx,DWORD PTR [ebp-0x10]
  40181d:	xor    eax,esi
  40181f:	xor    ecx,esi
  401821:	sub    eax,ecx
  401823:	sub    eax,edi
  401825:	xor    eax,esi
  401827:	mov    DWORD PTR [ebp-0x8],eax
  40182a:	mov    eax,DWORD PTR [ebp-0x10]
  40182d:	xor    eax,esi
  40182f:	mov    ecx,0xffcd8d91
  401834:	sub    ecx,eax
  401836:	jmp    0x40184a
  40183b:	mov    eax,DWORD PTR [ebp-0x10]
  40183e:	xor    eax,esi
  401840:	mov    ecx,0xffcd8d11
  401845:	sub    ecx,eax
  401847:	add    ecx,DWORD PTR [ebp-0xc]
  40184a:	mov    DWORD PTR [ebp-0xc],ecx
  40184d:	mov    eax,DWORD PTR [ebp-0x8]
  401850:	cmp    eax,0xf89c85b9
  401855:	jne    0x4015aa
  40185b:	mov    DWORD PTR [ebp-0x34],0x9
  401862:	mov    ecx,DWORD PTR [ebp+0x8]
  401865:	xor    ecx,esi
  401867:	add    ecx,edi
  401869:	jmp    0x40a889
  40186e:	lea    eax,[ecx+ebx*1]
  401871:	mov    DWORD PTR [ebp-0x2c],eax
  401874:	mov    eax,DWORD PTR [ebp-0x58]
  401877:	sub    eax,ecx
  401879:	mov    DWORD PTR [ebp-0x1c],eax
  40187c:	mov    eax,DWORD PTR [ebp-0x1c]
  40187f:	mov    DWORD PTR [ebp-0x14],eax
  401882:	mov    eax,DWORD PTR [ebp-0x2c]
  401885:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  40188c:	mov    DWORD PTR [ebp-0x54],eax
  40188f:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  401896:	mov    eax,DWORD PTR [ebp-0x38]
  401899:	xor    eax,esi
  40189b:	add    eax,edi
  40189d:	mov    DWORD PTR [ebp-0x10],eax
  4018a0:	mov    eax,DWORD PTR [ebp-0x38]
  4018a3:	xor    eax,esi
  4018a5:	add    eax,edi
  4018a7:	mov    DWORD PTR [ebp-0x8],eax
  4018aa:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  4018b1:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  4018b8:	mov    eax,DWORD PTR [ebp-0x38]
  4018bb:	mov    edx,DWORD PTR [ebp-0x14]
  4018be:	xor    eax,esi
  4018c0:	add    eax,edi
  4018c2:	cmp    edx,eax
  4018c4:	je     0x40a87d
  4018ca:	mov    eax,DWORD PTR [ebp-0x20]
  4018cd:	xor    eax,esi
  4018cf:	mov    edx,0xffcd8d11
  4018d4:	sub    edx,eax
  4018d6:	add    edx,DWORD PTR [ebp-0x14]
  4018d9:	mov    eax,DWORD PTR [ebp-0x20]
  4018dc:	mov    ebx,DWORD PTR [ebp-0x10]
  4018df:	xor    eax,esi
  4018e1:	add    eax,edi
  4018e3:	imul   eax,ebx
  4018e6:	cmp    eax,edx
  4018e8:	ja     0x40a87a
  4018ee:	mov    edx,DWORD PTR [ebp-0x10]
  4018f1:	mov    eax,DWORD PTR [ebp-0x14]
  4018f4:	mov    ebx,DWORD PTR [ebp-0x2c]
  4018f7:	sub    eax,edx
  4018f9:	xor    ebx,esi
  4018fb:	xor    edx,edx
  4018fd:	add    ebx,edi
  4018ff:	div    ebx
  401901:	mov    DWORD PTR [ebp-0x8],eax
  401904:	mov    eax,DWORD PTR [ebp-0x44]
  401907:	mov    edx,DWORD PTR [ebp-0x8]
  40190a:	xor    eax,esi
  40190c:	add    eax,edi
  40190e:	cmp    edx,eax
  401910:	jbe    0x401920
  401916:	mov    eax,DWORD PTR [ebp-0x44]
  401919:	xor    eax,esi
  40191b:	add    eax,edi
  40191d:	mov    DWORD PTR [ebp-0x8],eax
  401920:	mov    eax,DWORD PTR [ebp-0x2c]
  401923:	mov    edx,DWORD PTR [ebp-0x8]
  401926:	xor    eax,esi
  401928:	add    eax,edi
  40192a:	imul   eax,edx
  40192d:	mov    DWORD PTR [ebp-0x8],eax
  401930:	mov    eax,DWORD PTR [ebp-0x38]
  401933:	mov    edx,DWORD PTR [ebp-0x8]
  401936:	xor    eax,esi
  401938:	add    eax,edi
  40193a:	cmp    edx,eax
  40193c:	je     0x40a863
  401942:	mov    eax,DWORD PTR [ebp-0x8]
  401945:	mov    DWORD PTR [ebp-0x18],eax
  401948:	mov    eax,DWORD PTR [ebp-0x10]
  40194b:	add    eax,DWORD PTR [ebp-0x54]
  40194e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  401955:	mov    DWORD PTR [ebp-0x8],eax
  401958:	mov    eax,0xf89c85ba
  40195d:	mov    DWORD PTR [ebp-0x28],eax
  401960:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  401967:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  40196e:	mov    DWORD PTR [ebp-0x30],eax
  401971:	mov    eax,DWORD PTR [ebp-0x1c]
  401974:	xor    eax,esi
  401976:	add    eax,edi
  401978:	jmp    0x40613f
  40197d:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  401984:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40198b:	mov    eax,DWORD PTR [ebp-0x30]
  40198e:	mov    edx,DWORD PTR [ebp-0xc]
  401991:	xor    eax,esi
  401993:	add    eax,edi
  401995:	imul   eax,edx
  401998:	mov    edx,DWORD PTR [ebp-0x8]
  40199b:	mov    al,BYTE PTR [eax+edx*1]
  40199e:	mov    BYTE PTR [ebp-0x1],al
  4019a1:	mov    eax,DWORD PTR [ebp-0x30]
  4019a4:	mov    edx,DWORD PTR [ebp-0xc]
  4019a7:	xor    eax,esi
  4019a9:	add    eax,edi
  4019ab:	imul   eax,edx
  4019ae:	mov    edx,DWORD PTR [ebp-0x5c]
  4019b1:	xor    edx,esi
  4019b3:	add    eax,edx
  4019b5:	mov    edx,DWORD PTR [ebp-0x8]
  4019b8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  4019c0:	mov    edx,DWORD PTR [ebp-0x4c]
  4019c3:	xor    edx,esi
  4019c5:	lea    eax,[edx+eax*1+0x3272ef]
  4019cc:	movzx  edx,BYTE PTR [ebp-0x1]
  4019d0:	xor    edx,eax
  4019d2:	mov    BYTE PTR [ebp-0x1],dl
  4019d5:	mov    al,BYTE PTR [ebp-0x1]
  4019d8:	mov    edx,DWORD PTR [ebp-0x30]
  4019db:	mov    ebx,DWORD PTR [ebp-0xc]
  4019de:	xor    edx,esi
  4019e0:	add    edx,edi
  4019e2:	jmp    0x403d52
  4019e7:	and    ebx,DWORD PTR [eax-0x16]
  4019ea:	daa    
  4019eb:	lea    eax,[edi+0x3005549b]
  4019f1:	repz rcl DWORD PTR [ebp+0x78],1
  4019f5:	mul    ch
  4019f7:	jp     0x401a73
  4019f9:	jp     0x401a75
  4019fb:	das    
  4019fc:	pop    edi
  4019fd:	jp     0x401a79
  4019ff:	and    DWORD PTR [eax],ebp
  401a01:	daa    
  401a02:	cmp    eax,0x2f1b3125
  401a07:	jno    0x401a43
  401a09:	jne    0x401a81
  401a0b:	dec    ebp
  401a0c:	ja     0x401a78
  401a0e:	push   0x69
  401a10:	inc    edx
  401a11:	rcr    eax,1
  401a13:	std    
  401a14:	ins    BYTE PTR es:[edi],dx
  401a15:	push   esp
  401a16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  401a1a:	jl     0x401a85
  401a1c:	gs iret 
  401a1e:	pop    ecx
  401a1f:	dec    edx
  401a20:	cmp    al,0x88
  401a22:	cli    
  401a23:	xchg   edi,eax
  401a24:	xchg   BYTE PTR [edi+0x49],ah
  401a27:	jg     0x401a70
  401a29:	mov    WORD PTR [esi+0x3bb2bc7f],?
  401a2f:	sub    bh,bh
  401a31:	jbe    0x401a0b
  401a33:	cli    
  401a34:	arpl   WORD PTR [edi+0x1e],di
  401a37:	jmp    0xe9fae381
  401a3c:	xchg   edi,eax
  401a3d:	and    ebx,esi
  401a3f:	mov    esi,DWORD PTR ds:0x8aab650f
  401a45:	rol    BYTE PTR [edi],1
  401a47:	imul   ebx,ecx,0xfa0ee010
  401a4d:	ss and al,0x54
  401a50:	or     BYTE PTR [esi],dh
  401a52:	imul   esi,DWORD PTR [ebp+eax*8-0x51],0x23
  401a57:	pop    ebp
  401a58:	adc    DWORD PTR [esi+0x2b55f5ff],esi
  401a5e:	add    BYTE PTR [edx-0x2c],0x5b
  401a62:	add    eax,0xbd84fa1a
  401a67:	jae    0x401a42
  401a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6a:	pop    edi
  401a6b:	mov    edi,DWORD PTR [ebp+0x4d922017]
  401a71:	add    ebx,DWORD PTR [esi+0xb838238]
  401a77:	fisubr DWORD PTR [ecx]
  401a79:	bound  ecx,QWORD PTR [ecx-0xc9fbcc0]
  401a7f:	iret   
  401a80:	mov    dh,BYTE PTR ds:0xc8c7cc95
  401a86:	xchg   esp,eax
  401a87:	ins    DWORD PTR es:[edi],dx
  401a88:	lock push ecx
  401a8a:	bound  ecx,QWORD PTR [eax+0x8]
  401a8d:	add    eax,DWORD PTR ds:[esi+0x13]
  401a91:	test   eax,0x4cb7ca4b
  401a96:	fcom   QWORD PTR [eax]
  401a98:	data16 stc 
  401a9a:	bound  esp,QWORD PTR [esi-0x4f]
  401a9d:	add    eax,0x5204bf74
  401aa2:	and    DWORD PTR [ecx],ebx
  401aa4:	mov    ds:0x559a443a,eax
  401aa9:	adc    ch,BYTE PTR [ebx+edx*8]
  401aac:	sahf   
  401aad:	cmp    ch,BYTE PTR [esi+0x1a47d528]
  401ab3:	pop    es
  401ab4:	mov    ds:0x3c338bf1,al
  401ab9:	push   eax
  401aba:	mov    ch,0x8b
  401abc:	xor    BYTE PTR es:[eax],dh
  401abf:	clc    
  401ac0:	ss xor al,0x71
  401ac3:	and    BYTE PTR [eax+0x69],al
  401ac6:	jecxz  0x401af4
  401ac8:	sbb    cl,ah
  401aca:	stc    
  401acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401acc:	mov    ?,edi
  401ace:	add    dh,BYTE PTR [ebx+0x25ec4d4c]
  401ad4:	stc    
  401ad5:	push   di
  401ad7:	pushf  
  401ad8:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  401ada:	jbe    0x401ab9
  401adc:	jg     0x401b19
  401ade:	mov    al,0x5f
  401ae0:	and    al,0xdd
  401ae2:	mov    al,ds:0x7cfdd5cc
  401ae7:	jns    0x401b68
  401ae9:	or     BYTE PTR [edx-0x1497eb87],ah
  401aef:	leave  
  401af0:	mov    bh,0xc
  401af2:	adc    ebp,DWORD PTR [edx*2-0x559bf596]
  401af9:	jmp    0xb99bdb34
  401afe:	ret    0xb900
  401b01:	out    0xf,al
  401b03:	ss xor eax,0x716a5a89
  401b09:	std    
  401b0a:	fdivp  st(2),st
  401b0c:	add    al,0x5a
  401b0e:	mov    DWORD PTR [eax-0x29],ebx
  401b11:	adc    BYTE PTR [ebx+0x517f1575],bl
  401b17:	lods   eax,DWORD PTR ds:[esi]
  401b18:	inc    esi
  401b19:	inc    ebx
  401b1a:	fild   WORD PTR [ebp+ebp*4+0x73]
  401b1e:	leave  
  401b1f:	push   0xeace20a3
  401b24:	pop    esp
  401b25:	jle    0x401b97
  401b27:	add    dl,ah
  401b29:	xchg   ecx,eax
  401b2a:	mov    eax,0xae2a9453
  401b2f:	je     0x401ade
  401b31:	mov    edx,0x785958c9
  401b36:	cmp    bh,BYTE PTR [ecx]
  401b38:	jno    0x401ac9
  401b3a:	add    edi,esp
  401b3c:	call   DWORD PTR [esi]
  401b3e:	xchg   esi,eax
  401b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b40:	sbb    BYTE PTR [ecx-0x64],bl
  401b43:	test   DWORD PTR [esp+edi*4-0xa],esi
  401b47:	stos   BYTE PTR es:[edi],al
  401b48:	and    edi,0xffffffd3
  401b4b:	into   
  401b4c:	dec    esi
  401b4d:	xchg   DWORD PTR [ebx+ebx*2+0x47],ebx
  401b51:	pop    eax
  401b52:	xchg   esi,eax
  401b53:	sahf   
  401b54:	sbb    BYTE PTR [eax+0x22d16579],al
  401b5a:	mov    dh,0x6e
  401b5c:	or     ah,BYTE PTR [ebp-0x80316be]
  401b62:	pop    ebp
  401b63:	add    ebx,DWORD PTR [ebx]
  401b65:	xchg   BYTE PTR [ecx+0x22f43095],al
  401b6b:	push   edx
  401b6c:	dec    edx
  401b6d:	out    dx,eax
  401b6e:	inc    esi
  401b6f:	sahf   
  401b70:	inc    eax
  401b71:	jp     0x401af7
  401b73:	xor    edx,DWORD PTR [edx-0x355c7db4]
  401b79:	push   ebp
  401b7a:	push   0x66
  401b7c:	outs   dx,BYTE PTR ds:[esi]
  401b7d:	mov    esp,0x4e981441
  401b82:	(bad)  
  401b83:	jmp    0x6befc4fb
  401b88:	dec    esi
  401b89:	pop    esp
  401b8a:	jecxz  0x401b18
  401b8c:	jmp    0xcb7f553f
  401b91:	mov    eax,ds:0x61ad6ff4
  401b96:	scas   eax,DWORD PTR es:[edi]
  401b97:	inc    cx
  401b99:	shl    BYTE PTR [edi],cl
  401b9b:	dec    ecx
  401b9c:	mov    bl,0xb1
  401b9e:	adc    bl,BYTE PTR [ebx+0x36cbe39a]
  401ba4:	mov    ?,WORD PTR [ebp-0x7b34b376]
  401baa:	jge    0x401bfe
  401bac:	icebp  
  401bad:	mov    BYTE PTR [ebp+eax*8-0x29],al
  401bb1:	pop    eax
  401bb2:	xchg   DWORD PTR [ecx+0x66122739],edi
  401bb8:	repnz push ds
  401bba:	jnp    0x401be7
  401bbc:	repnz mov ds:0x397fabe2,eax
  401bc2:	mov    ch,BYTE PTR [edi]
  401bc4:	or     al,BYTE PTR [edi+eax*2]
  401bc7:	cmc    
  401bc8:	cmp    esp,DWORD PTR [ecx-0x50]
  401bcb:	mov    bl,0x91
  401bcd:	adc    bh,BYTE PTR [eax+0x25]
  401bd0:	test   DWORD PTR [ecx-0x1114dca5],ecx
  401bd6:	daa    
  401bd7:	sbb    al,0xcf
  401bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bda:	jmp    DWORD PTR ds:0xda170d8e
  401be0:	and    ebx,DWORD PTR [edx-0x67211f6f]
  401be6:	(bad)  
  401be7:	pop    eax
  401be8:	lahf   
  401be9:	mov    ch,0xa2
  401beb:	mov    esi,0x4d312733
  401bf0:	push   0xffffff8b
  401bf2:	or     cl,BYTE PTR [eax]
  401bf4:	add    bh,BYTE PTR [edx+0x460ec14f]
  401bfa:	mov    al,0x22
  401bfc:	inc    ebp
  401bfd:	mov    dh,0x98
  401bff:	mov    esi,0xfe8ed071
  401c04:	mov    ds:0x98775203,eax
  401c09:	jb     0x401c71
  401c0b:	push   ds
  401c0c:	icebp  
  401c0d:	jo     0x401b96
  401c0f:	xor    BYTE PTR [ebx],ah
  401c11:	ret    
  401c12:	cwde   
  401c13:	lea    eax,[edi]
  401c15:	rcl    BYTE PTR [edx-0x42],cl
  401c18:	lock mov ecx,0x2001cff0
  401c1e:	push   ecx
  401c1f:	mov    ds:0x3132f822,eax
  401c24:	ins    DWORD PTR es:[edi],dx
  401c25:	outs   dx,DWORD PTR ds:[esi]
  401c26:	fstp   DWORD PTR [esi]
  401c28:	pushf  
  401c29:	rcr    DWORD PTR [edi+0x306c5b],0x35
  401c30:	or     esi,esi
  401c32:	test   ebp,edx
  401c34:	dec    eax
  401c35:	xchg   ebx,eax
  401c36:	add    al,0xff
  401c38:	aad    0xab
  401c3a:	push   edi
  401c3b:	mov    al,0x6
  401c3d:	mov    DWORD PTR [esp+eax*1-0x11a47cdd],esp
  401c44:	paddq  mm6,QWORD PTR ds:0xef37df06
  401c4b:	mov    edi,0xe2ee10fd
  401c50:	and    DWORD PTR [edi+0x3c],esp
  401c53:	cmp    esi,DWORD PTR [edx]
  401c55:	cs das 
  401c57:	inc    edi
  401c58:	fsub   st(3),st
  401c5a:	inc    ebx
  401c5b:	jle    0x401caa
  401c5d:	nop
  401c5e:	cmp    DWORD PTR [ecx+0x310018f8],ebp
  401c64:	mov    al,ds:0x486625c8
  401c69:	pop    esi
  401c6a:	rcl    BYTE PTR [ecx+ecx*1],cl
  401c6d:	add    al,0x65
  401c6f:	dec    ebp
  401c70:	dec    eax
  401c71:	and    al,0xab
  401c73:	and    DWORD PTR [ecx],esi
  401c75:	sbb    eax,0x32360da6
  401c7a:	repz out 0xd8,eax
  401c7d:	push   edx
  401c7e:	sti    
  401c7f:	push   es
  401c80:	jecxz  0x401c76
  401c82:	out    dx,eax
  401c83:	sub    al,0x9f
  401c85:	dec    DWORD PTR [ecx+0x46a2c040]
  401c8b:	xchg   DWORD PTR [ebx+0x39],esp
  401c8e:	shl    ebp,0x98
  401c91:	bound  edx,QWORD PTR [eax-0x2b]
  401c94:	ret    0x2d15
  401c97:	jg     0x401c81
  401c99:	pop    eax
  401c9a:	jecxz  0x401c9a
  401c9c:	cdq    
  401c9d:	test   BYTE PTR [edx-0x58],dh
  401ca0:	cmp    esp,esi
  401ca2:	scas   eax,DWORD PTR es:[edi]
  401ca3:	push   edi
  401ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ca5:	scas   eax,DWORD PTR es:[edi]
  401ca6:	lahf   
  401ca7:	pop    ss
  401ca8:	cmp    edi,DWORD PTR [edx-0x68]
  401cab:	or     BYTE PTR [ebp+esi*1-0x4005cbde],ch
  401cb2:	adc    BYTE PTR [ebp+ebp*8-0x51],bh
  401cb6:	inc    ecx
  401cb7:	xchg   esp,eax
  401cb8:	daa    
  401cb9:	or     dh,BYTE PTR [ebx+0x22fa32b]
  401cbf:	cmp    ebx,DWORD PTR [ecx-0x75]
  401cc2:	in     eax,0x62
  401cc4:	test   al,0xa2
  401cc6:	rol    DWORD PTR [edi+0x664161c7],0xbd
  401ccd:	and    eax,0xe4ff6c86
  401cd2:	add    ch,BYTE PTR [ecx+ebp*2+0x77]
  401cd6:	push   edx
  401cd7:	ss mov cl,0x5a
  401cda:	push   eax
  401cdb:	ficomp WORD PTR [ebp+0x1508e5c6]
  401ce1:	shr    al,1
  401ce3:	leave  
  401ce4:	or     al,0x8
  401ce6:	outs   dx,BYTE PTR ds:[esi]
  401ce7:	xchg   ecx,eax
  401ce8:	pop    ebp
  401ce9:	mov    edx,0x6108e656
  401cee:	lahf   
  401cef:	or     eax,0x3b1c297c
  401cf4:	add    DWORD PTR [ebx-0x78],ecx
  401cf7:	das    
  401cf8:	mov    ebx,0xe359d03d
  401cfd:	and    esp,edx
  401cff:	std    
  401d00:	arpl   ax,si
  401d02:	xor    bl,BYTE PTR [ecx+0x7f]
  401d05:	inc    ebx
  401d06:	sub    eax,DWORD PTR [ebp-0x95e8737]
  401d0c:	gs imul esp,DWORD PTR cs:[eax],0xfdd9da9c
  401d14:	sbb    al,BYTE PTR [ebx-0x7f]
  401d17:	xchg   esp,eax
  401d18:	cmp    al,0x94
  401d1a:	xchg   DWORD PTR [edi],edi
  401d1c:	xor    eax,0x5f19e02f
  401d21:	and    ebp,DWORD PTR [ebp+0x67]
  401d24:	in     eax,dx
  401d25:	ins    DWORD PTR es:[edi],dx
  401d26:	outs   dx,DWORD PTR ds:[esi]
  401d27:	dec    esi
  401d28:	mov    ah,0xc8
  401d2a:	mov    bh,0xbc
  401d2c:	inc    ebx
  401d2d:	mov    cl,0xa2
  401d2f:	imul   BYTE PTR [esi-0x6e]
  401d32:	jns    0x401d0e
  401d34:	push   DWORD PTR [ebx]
  401d36:	data16 je 0x401d22
  401d39:	mov    dh,0xa9
  401d3b:	adc    DWORD PTR [ecx+eiz*8],0x4172294e
  401d42:	dec    edi
  401d43:	iret   
  401d44:	idiv   eax
  401d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d47:	hlt    
  401d48:	(bad)  
  401d49:	popa   
  401d4a:	aam    0x63
  401d4c:	jl     0x401d1c
  401d4e:	stc    
  401d4f:	mov    ch,0x9d
  401d51:	sub    DWORD PTR [ebx-0x3d349d3],edx
  401d57:	jno    0x401d1d
  401d59:	xchg   edi,eax
  401d5a:	xchg   ebx,eax
  401d5b:	pop    esp
  401d5c:	shr    DWORD PTR [edi-0x41],cl
  401d5f:	inc    esi
  401d60:	add    ch,al
  401d62:	arpl   WORD PTR [ecx],bx
  401d64:	sub    eax,0xffffffa6
  401d67:	out    0xa8,al
  401d69:	int3   
  401d6a:	mov    esi,0x53f532b6
  401d6f:	xor    BYTE PTR ds:[ebp+0x24c388ed],bl
  401d76:	ins    BYTE PTR es:[edi],dx
  401d77:	in     eax,dx
  401d78:	stos   DWORD PTR es:[edi],eax
  401d79:	pusha  
  401d7a:	jnp    0x401d5e
  401d7c:	xor    al,0x2e
  401d7e:	shl    ebp,0x46
  401d81:	dec    ebp
  401d82:	cmc    
  401d83:	or     al,0xd0
  401d85:	jmp    0x401dfc
  401d87:	jnp    0x401d55
  401d89:	enter  0x899,0xb5
  401d8d:	test   BYTE PTR [esi-0x3b],dl
  401d90:	mov    ebx,DWORD PTR [ecx-0x36]
  401d93:	stos   BYTE PTR es:[edi],al
  401d94:	pop    edx
  401d95:	sbb    eax,0x34ed60d2
  401d9a:	sub    eax,eax
  401d9c:	lock mov ds:0x5afc403b,eax
  401da2:	push   ss
  401da3:	cmp    al,0x53
  401da5:	stos   DWORD PTR es:[edi],eax
  401da6:	mov    esi,0x16ffed21
  401dab:	adc    BYTE PTR [edi-0x16a63bf8],al
  401db1:	pusha  
  401db2:	cmp    BYTE PTR [ecx],cl
  401db4:	pop    ebp
  401db5:	cmp    edx,DWORD PTR [edx+eax*8-0x57]
  401db9:	adc    BYTE PTR [eax+0x46f7513e],al
  401dbf:	out    dx,al
  401dc0:	es aam 0xa7
  401dc3:	push   esi
  401dc4:	nop
  401dc5:	idiv   DWORD PTR [eax-0x74]
  401dc8:	xor    dh,al
  401dca:	dec    edi
  401dcb:	mov    bh,0xfb
  401dcd:	mov    dh,0xfa
  401dcf:	jecxz  0x401e1a
  401dd1:	out    dx,eax
  401dd2:	and    esi,DWORD PTR [ebp+0x60]
  401dd5:	mov    ch,0xd3
  401dd7:	mov    al,0x6
  401dd9:	pop    ebx
  401dda:	xor    ebp,DWORD PTR [esi-0x7b083f53]
  401de0:	cli    
  401de1:	jae    0x401e0a
  401de3:	sbb    BYTE PTR [edx-0x3b],dl
  401de6:	and    DWORD PTR [ebx-0x4b],edi
  401de9:	sub    dl,cl
  401deb:	fwait
  401dec:	xchg   esi,eax
  401ded:	ja     0x401e3b
  401def:	pop    edi
  401df0:	popf   
  401df1:	push   0x3c
  401df3:	and    eax,ebp
  401df5:	xor    eax,0xf3aad1ee
  401dfa:	imul   ecx,DWORD PTR ds:0x1420b56,0x54
  401e01:	lds    eax,FWORD PTR [ebx]
  401e03:	(bad)  
  401e05:	leave  
  401e06:	mov    al,0x88
  401e08:	push   edi
  401e09:	in     eax,0xf8
  401e0b:	scas   eax,DWORD PTR es:[edi]
  401e0c:	out    dx,al
  401e0d:	inc    ebp
  401e0e:	push   eax
  401e0f:	mov    bl,0xae
  401e11:	push   ebx
  401e12:	sub    esp,DWORD PTR gs:[ecx*1+0x19a6e054]
  401e1a:	mov    ah,0x7f
  401e1c:	(bad)  
  401e1d:	pop    esi
  401e1e:	das    
  401e1f:	sub    dh,BYTE PTR [esi]
  401e21:	rol    ecx,0xb7
  401e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e25:	sar    DWORD PTR [edi],1
  401e27:	mov    cl,0xc6
  401e29:	enter  0x4ec2,0x6b
  401e2d:	adc    eax,0xb12f9b17
  401e32:	sbb    dh,BYTE PTR [esi+0x6711be75]
  401e38:	dec    BYTE PTR [edx+0x26]
  401e3b:	add    dl,0xa0
  401e3e:	es data16 jns 0x401e6b
  401e42:	dec    ebx
  401e43:	mov    eax,0xab065f8d
  401e48:	jne    0x401e0b
  401e4a:	sbb    al,0x9a
  401e4c:	ja     0x401e68
  401e4e:	and    ebp,DWORD PTR [ecx+0x453b5daa]
  401e54:	or     ch,dh
  401e56:	jl     0x401ec5
  401e58:	call   0x963c9177
  401e5d:	push   0xac0ad37
  401e62:	cmc    
  401e63:	inc    eax
  401e64:	cmc    
  401e65:	cmp    ah,BYTE PTR [edx+0x6e]
  401e68:	scas   eax,DWORD PTR es:[edi]
  401e69:	adc    BYTE PTR [edx+0x5801c15c],ah
  401e6f:	mov    esi,0xa7ae5ac5
  401e74:	aam    0x49
  401e76:	int    0x63
  401e78:	push   ds
  401e79:	push   ebp
  401e7a:	(bad)  
  401e7b:	out    dx,al
  401e7c:	inc    ecx
  401e7d:	sahf   
  401e7e:	mov    DWORD PTR [ecx+0x4621fe84],ecx
  401e84:	mov    bl,0xf
  401e86:	mov    cl,BYTE PTR [ecx-0x2ac3f3b2]
  401e8c:	pop    ebx
  401e8d:	pop    ds
  401e8e:	cmp    eax,DWORD PTR [esp+esi*1+0x4e14ddca]
  401e95:	std    
  401e96:	add    BYTE PTR [edi+0x614b6c48],dh
  401e9c:	sar    BYTE PTR [esi-0x22],1
  401e9f:	or     al,0xee
  401ea1:	xchg   ebp,eax
  401ea2:	and    al,0x9d
  401ea4:	mov    cl,BYTE PTR [ecx]
  401ea6:	jecxz  0x401e9f
  401ea8:	je     0x401e53
  401eaa:	call   FWORD PTR [edx]
  401eac:	ja     0x401e3c
  401eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eaf:	(bad)  
  401eb0:	scas   eax,DWORD PTR es:[edi]
  401eb1:	fnstcw WORD PTR [ebp+0x166e8185]
  401eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eb8:	mov    al,ds:0xa21d450d
  401ebd:	cmp    BYTE PTR [edi-0x41],bh
  401ec0:	cs sub eax,0x8cf9184c
  401ec6:	jge    0x401f1c
  401ec8:	mov    al,0xf7
  401eca:	push   edx
  401ecb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  401ecd:	outs   dx,BYTE PTR ds:[esi]
  401ece:	push   0x7d394fa2
  401ed3:	test   eax,0x5aa7e35e
  401ed9:	lds    edi,FWORD PTR [ecx]
  401edb:	push   es
  401edc:	mov    edx,0xe9e650fe
  401ee1:	cmp    edx,DWORD PTR [eax]
  401ee3:	int3   
  401ee4:	icebp  
  401ee5:	mov    edi,0xc085370c
  401eea:	js     0x401f56
  401eec:	js     0x401f4d
  401eee:	mov    cl,0xdf
  401ef0:	dec    edi
  401ef1:	(bad)  
  401ef2:	sbb    dl,dh
  401ef4:	mov    fs:0xe3b1776f,eax
  401efa:	jno    0x401ec7
  401efc:	in     al,0x7a
  401efe:	and    DWORD PTR [edx+0x7ee57851],ecx
  401f04:	xor    DWORD PTR [edx],0xffffffc7
  401f07:	ja     0x401ef8
  401f09:	mov    edx,0x4094b934
  401f0e:	arpl   WORD PTR [edi],bx
  401f10:	cwde   
  401f11:	inc    esi
  401f12:	mov    ds:0x15dff3dd,al
  401f17:	outs   dx,BYTE PTR ds:[esi]
  401f18:	xor    eax,0xffd82f10
  401f1d:	ja     0x401f41
  401f1f:	sub    edx,ebp
  401f21:	or     eax,DWORD PTR [ebx]
  401f23:	mov    eax,ds:0x28590590
  401f28:	pop    edi
  401f29:	pop    esp
  401f2a:	xor    BYTE PTR [ecx],ch
  401f2c:	out    dx,eax
  401f2d:	lods   al,BYTE PTR ds:[esi]
  401f2e:	mov    es,WORD PTR [eax]
  401f30:	repnz (bad) 
  401f32:	push   ecx
  401f33:	xor    BYTE PTR [edx-0x360183d2],dh
  401f39:	shl    DWORD PTR [eax],0xa6
  401f3c:	mov    ds:0xc49c117e,al
  401f41:	iret   
  401f42:	and    al,0xef
  401f44:	and    cl,dh
  401f46:	inc    esi
  401f47:	enter  0x57d7,0xdc
  401f4b:	sbb    edi,DWORD PTR [edx-0x5746e9f9]
  401f51:	ds push 0x157a6116
  401f57:	pop    ebp
  401f58:	xor    DWORD PTR [ecx+0x5338f160],ebx
  401f5e:	dec    esp
  401f5f:	jmp    0x6d242c66
  401f64:	icebp  
  401f65:	sbb    DWORD PTR [edi-0x5c1ec79b],edx
  401f6b:	pop    esp
  401f6c:	cmp    ebx,edi
  401f6e:	stos   BYTE PTR es:[edi],al
  401f6f:	pop    esi
  401f70:	jge    0x401fab
  401f72:	xlat   BYTE PTR ds:[ebx]
  401f73:	out    0xbf,al
  401f75:	jmp    DWORD PTR [esi-0x632cccef]
  401f7b:	out    0x1b,al
  401f7d:	aas    
  401f7e:	jmp    0x4523:0x7bbde035
  401f85:	cli    
  401f86:	sbb    eax,0xa3328bb1
  401f8b:	inc    ebx
  401f8c:	cmc    
  401f8d:	nop
  401f8e:	(bad)  
  401f8f:	jmp    DWORD PTR [ecx]
  401f91:	or     eax,0xdc3fa93b
  401f96:	call   0xe35493da
  401f9b:	popa   
  401f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f9d:	test   BYTE PTR [eax+0x55],dl
  401fa0:	xor    BYTE PTR [ebx+0x55cd3504],bh
  401fa6:	push   0x2
  401fa8:	or     eax,DWORD PTR ds:0x56b324ba
  401fae:	mul    DWORD PTR [eax+0x6046d18f]
  401fb4:	mov    esp,0x4ea09816
  401fb9:	inc    eax
  401fba:	pushf  
  401fbb:	dec    esp
  401fbc:	int    0xcc
  401fbe:	sub    ch,BYTE PTR [ebp+0x30]
  401fc1:	int    0x5b
  401fc3:	ins    DWORD PTR es:[edi],dx
  401fc4:	std    
  401fc5:	stc    
  401fc6:	nop
  401fc7:	or     bh,BYTE PTR [edx-0x5948a2af]
  401fcd:	ss mov ebp,0x4ea63738
  401fd3:	pop    ss
  401fd4:	cmp    al,0x18
  401fd6:	sbb    al,0xef
  401fd8:	mov    edi,0xcd2a198c
  401fdd:	cmp    eax,0x286781b3
  401fe2:	cmp    BYTE PTR [ebx+0x17],bh
  401fe5:	inc    edx
  401fe6:	add    BYTE PTR [edi+0x7c81bcde],dh
  401fec:	sbb    eax,0x15f44e69
  401ff1:	cmc    
  401ff2:	mov    ds:0x64a52f15,al
  401ff7:	call   0xe887:0xb4b190e8
  401ffe:	icebp  
  401fff:	mov    edx,edx
  402001:	mov    al,ds:0xec29990a
  402006:	loope  0x401f94
  402008:	retf   
  402009:	sub    eax,0xea6ee6d0
  40200e:	mov    WORD PTR ss:[eax-0x72],cs
  402012:	jl     0x401f9d
  402014:	stc    
  402015:	mov    dh,0x46
  402017:	fisub  WORD PTR [ecx+0x46]
  40201a:	sbb    BYTE PTR [eax-0x2e6ef533],dl
  402020:	adc    BYTE PTR [ebx+0x68562cf5],0x21
  402027:	xor    BYTE PTR [eax+ebx*4],bh
  40202a:	xchg   ebp,eax
  40202b:	or     ax,0x6702
  40202f:	dec    ebp
  402030:	aas    
  402031:	inc    ebx
  402032:	adc    al,BYTE PTR [ebp-0x49]
  402035:	or     al,0x4c
  402037:	dec    eax
  402038:	shr    ebp,1
  40203a:	in     eax,0x26
  40203c:	cld    
  40203d:	iret   
  40203e:	mov    eax,ds:0x3e1cc9aa
  402043:	adc    eax,0x6cf6e1d1
  402048:	add    BYTE PTR [ebx+0x74],0xca
  40204c:	mov    dl,0xc
  40204e:	fldenv [esi+0x2b]
  402051:	push   es
  402052:	adc    ecx,DWORD PTR [ebx-0x2accd061]
  402058:	addr16 push ss
  40205a:	in     eax,0xd5
  40205c:	into   
  40205d:	movaps XMMWORD PTR [ebx-0x51],xmm7
  402061:	add    DWORD PTR [ebp+0x5b09fd1c],esi
  402067:	push   eax
  402068:	lock push eax
  40206a:	dec    edi
  40206b:	cmp    BYTE PTR [edx+0x4c185cc],dl
  402071:	or     dh,dl
  402073:	and    eax,0x6dc2a9dc
  402078:	mov    bl,0xe0
  40207a:	sub    eax,0x29ec981f
  40207f:	icebp  
  402080:	and    DWORD PTR [ecx+ebx*4],edi
  402083:	jne    0x4020d0
  402085:	jne    0x4020fc
  402087:	mov    DWORD PTR [ebx],esi
  402089:	scas   eax,DWORD PTR es:[edi]
  40208a:	or     esi,DWORD PTR [edi]
  40208c:	loope  0x4020b8
  40208e:	sub    DWORD PTR [ebp-0x15],edi
  402091:	cmp    eax,0x31347aba
  402096:	aas    
  402097:	mov    ah,0xa8
  402099:	mov    eax,0x7e31fbd6
  40209e:	inc    edi
  40209f:	aaa    
  4020a0:	test   eax,0x14d21ad0
  4020a5:	pop    esp
  4020a6:	(bad)  
  4020a7:	cmp    ecx,ebp
  4020a9:	and    dl,BYTE PTR [edi+0x4a]
  4020ac:	mov    al,ds:0xe32fd725
  4020b1:	test   al,0xc0
  4020b3:	sub    bl,BYTE PTR [ebx-0x18d57a42]
  4020b9:	test   eax,0xd4637311
  4020be:	gs mov dl,0xa3
  4020c1:	xchg   BYTE PTR [esi+0x11],ah
  4020c4:	and    ah,ah
  4020c6:	xor    al,0x26
  4020c8:	mov    ds,esi
  4020ca:	lahf   
  4020cb:	mov    eax,0xc8c02919
  4020d0:	cmc    
  4020d1:	retf   0x46aa
  4020d4:	dec    edx
  4020d5:	push   ds
  4020d6:	lahf   
  4020d7:	mov    gs,WORD PTR [ebx+0x271d1668]
  4020dd:	mov    BYTE PTR ds:0x18384c52,dh
  4020e3:	outs   dx,BYTE PTR ds:[esi]
  4020e4:	cs push esi
  4020e6:	sbb    BYTE PTR [eax],dh
  4020e8:	cmp    bh,bl
  4020ea:	pop    es
  4020eb:	jecxz  0x4020a5
  4020ed:	out    0xb,al
  4020ef:	mov    ebp,0x79e58d14
  4020f4:	das    
  4020f5:	push   ds
  4020f6:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020f8:	jae    0x4020e8
  4020fa:	dec    ebx
  4020fb:	lds    edi,FWORD PTR [esi+0xf]
  4020fe:	rol    DWORD PTR ds:0xb5cb4d86,1
  402104:	sub    ecx,DWORD PTR [eax-0x63]
  402107:	(bad)  
  402108:	mov    edx,0x6683c378
  40210d:	jbe    0x402112
  40210f:	cmp    al,0x7b
  402111:	mov    edi,0x479bdd06
  402116:	pop    edi
  402117:	sub    al,0x1c
  402119:	adc    al,0x43
  40211b:	add    eax,0xa98d78e
  402120:	inc    esi
  402121:	add    eax,0x46e3c160
  402126:	jo     0x402192
  402128:	cwde   
  402129:	or     eax,0x35f8bbbd
  40212e:	mov    esp,esp
  402130:	pop    es
  402131:	mov    ds:0x1c0c7477,eax
  402136:	in     eax,dx
  402137:	jno    0x4020fb
  402139:	das    
  40213a:	adc    edx,ebp
  40213c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40213e:	bound  esi,QWORD PTR [edi+esi*4-0x30]
  402142:	sbb    eax,0x8d0d3d17
  402147:	sbb    esi,DWORD PTR ss:0x2d778400
  40214e:	(bad)  
  402150:	scas   eax,DWORD PTR es:[edi]
  402151:	pop    es
  402152:	jmp    0x4020d6
  402154:	jle    0x402169
  402156:	xor    al,0x14
  402158:	mov    ds:0x4c625922,al
  40215d:	push   esp
  40215e:	loope  0x4021cf
  402160:	xor    edi,ebx
  402162:	xor    eax,0x3ebe23e3
  402167:	xchg   ebx,eax
  402168:	dec    esp
  402169:	pop    esi
  40216a:	adc    BYTE PTR [ebx-0x65],0xfa
  40216e:	lods   al,BYTE PTR ds:[esi]
  40216f:	pop    es
  402170:	pop    esi
  402171:	push   edi
  402172:	dec    edx
  402173:	pop    ecx
  402174:	imul   eax,DWORD PTR [eax+0x7833b8c8],0x15fea82c
  40217e:	add    al,0xe4
  402180:	jnp    0x40219b
  402182:	stos   DWORD PTR es:[edi],eax
  402183:	and    ebx,DWORD PTR [edi-0x59]
  402186:	sbb    BYTE PTR [eax-0x85f5750],bh
  40218c:	mov    ah,0x63
  40218e:	xor    eax,0x5a59c9d9
  402193:	loopne 0x4021fa
  402195:	(bad)  
  402196:	js     0x402214
  402198:	push   ebp
  402199:	loop   0x4021f8
  40219b:	mov    eax,0x5e60718c
  4021a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021a1:	and    eax,0x1c119ef4
  4021a6:	daa    
  4021a7:	pop    esp
  4021a8:	jl     0x402202
  4021aa:	stos   BYTE PTR es:[edi],al
  4021ab:	gs cli 
  4021ad:	jno    0x40221a
  4021af:	lahf   
  4021b0:	test   BYTE PTR [ebp-0x3a0307df],al
  4021b6:	dec    esp
  4021b7:	push   cs
  4021b8:	mov    ch,0x6d
  4021ba:	and    ebx,DWORD PTR [edx-0x2ec1a759]
  4021c0:	not    esp
  4021c2:	or     bh,BYTE PTR [edi+0x79]
  4021c5:	loope  0x40220e
  4021c7:	sbb    al,0x3e
  4021c9:	test   DWORD PTR [esi+0x33b15f62],esp
  4021cf:	and    edx,DWORD PTR [ebx]
  4021d1:	sar    BYTE PTR [edx-0x630dba26],1
  4021d7:	data16 xor BYTE PTR [ecx-0x2b],0x11
  4021dc:	adc    BYTE PTR [edx],al
  4021de:	mov    esp,0x8b969d26
  4021e3:	or     ah,BYTE PTR [edx+0x3c]
  4021e6:	sbb    cl,BYTE PTR [edi]
  4021e8:	jae    0x4021d2
  4021ea:	cmp    bh,dl
  4021ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ed:	jbe    0x402217
  4021ef:	arpl   WORD PTR [edi*2+0x19ec93b9],ax
  4021f6:	push   0x37
  4021f8:	into   
  4021f9:	mov    bl,0x40
  4021fb:	xchg   ebp,eax
  4021fc:	pop    eax
  4021fd:	je     0x4021bc
  4021ff:	xchg   BYTE PTR [ebx-0x77d8cfbc],dl
  402205:	aas    
  402206:	int    0xe1
  402208:	mov    edx,DWORD PTR [esi-0x7f]
  40220b:	cmp    BYTE PTR [ebp-0x1f03bbd8],ch
  402211:	mov    ds:0xf73cdb5d,al
  402216:	xor    DWORD PTR [eax+0x16],0x24ae5038
  40221d:	adc    ecx,edi
  40221f:	adc    edx,esp
  402221:	fdiv   QWORD PTR [esi-0xb]
  402224:	xor    eax,DWORD PTR [eax]
  402226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402227:	sub    eax,0x6b880d6b
  40222c:	inc    ebp
  40222d:	ret    
  40222e:	out    dx,al
  40222f:	fsubp  st(0),st
  402231:	jae    0x402279
  402233:	sub    DWORD PTR [edx-0x6a],0xcdbb19e8
  40223a:	les    edi,FWORD PTR [edi]
  40223c:	dec    ebx
  40223d:	push   cs
  40223e:	mov    eax,ds:0xf1dc337b
  402243:	sti    
  402244:	call   0x97e6:0xa2892a92
  40224b:	mov    ebp,0x5f2f1ebe
  402250:	jno    0x4022b9
  402252:	push   edi
  402253:	dec    edx
  402254:	out    0xdb,eax
  402256:	ret    
  402257:	jmp    0x402222
  402259:	push   eax
  40225a:	xor    cl,dh
  40225c:	ficomp DWORD PTR [edx+0xb65dcb1]
  402262:	push   0xb
  402264:	retf   
  402265:	retf   0x6a00
  402268:	mov    eax,0x9b4e9195
  40226d:	xor    al,0xa5
  40226f:	jo     0x40224f
  402271:	cmp    al,0xdc
  402273:	je     0x4022c4
  402275:	call   0xcd467c72
  40227a:	icebp  
  40227b:	shr    DWORD PTR [ecx-0x4476f429],cl
  402281:	cmc    
  402282:	push   ss
  402283:	lods   al,BYTE PTR ds:[esi]
  402284:	cmp    eax,0xca6259af
  402289:	loope  0x402282
  40228b:	jne    0x40222e
  40228d:	adc    BYTE PTR [ebx+0x1f5d2b85],dl
  402293:	rol    DWORD PTR [eax],1
  402295:	(bad)  
  402296:	loopne 0x402246
  402298:	or     BYTE PTR ds:[esi],al
  40229b:	outs   dx,DWORD PTR ds:[esi]
  40229c:	arpl   bx,cx
  40229e:	test   al,0x85
  4022a0:	pusha  
  4022a1:	pop    ebx
  4022a2:	call   0x5b5a:0x3ec77ccf
  4022a9:	aaa    
  4022aa:	or     esi,DWORD PTR [esi-0x6]
  4022ad:	(bad)  
  4022ae:	adc    eax,0xd453cbca
  4022b3:	neg    DWORD PTR [edx+0x637bbf33]
  4022b9:	mov    eax,ds:0xff304554
  4022be:	sbb    edx,DWORD PTR [eax-0x37e6fdf]
  4022c4:	shr    cl,cl
  4022c6:	dec    ecx
  4022c7:	test   BYTE PTR [esi-0x50],dh
  4022ca:	push   es
  4022cb:	jl     0x40230c
  4022cd:	mov    BYTE PTR [ecx-0x65781b1d],bl
  4022d3:	inc    ebx
  4022d4:	aaa    
  4022d5:	fcmovnbe st,st(5)
  4022d7:	loop   0x40230a
  4022d9:	xchg   edi,eax
  4022da:	xchg   edx,eax
  4022db:	pop    ecx
  4022dc:	adc    ch,ah
  4022de:	sub    eax,0xd5b2fa20
  4022e3:	(bad)  
  4022e4:	and    bl,BYTE PTR [edi-0x57d8744]
  4022ea:	enter  0x8773,0x55
  4022ee:	in     eax,dx
  4022ef:	xlat   BYTE PTR ds:[ebx]
  4022f0:	mov    ecx,0xaa1d53ce
  4022f5:	add    BYTE PTR [ebx+eiz*2-0x60],0xde
  4022fa:	and    BYTE PTR [eax],dl
  4022fc:	pop    ecx
  4022fd:	xchg   esp,eax
  4022fe:	mov    ds:0x6e5b5964,eax
  402303:	retf   0xfbee
  402306:	(bad)  
  402307:	sub    dl,BYTE PTR fs:0x193c27c5
  40230e:	and    al,BYTE PTR [edi-0x71]
  402311:	mov    al,BYTE PTR [ecx-0x3d662c0]
  402317:	or     al,0x5a
  402319:	lds    ebx,FWORD PTR [edi-0x38545d29]
  40231f:	inc    ecx
  402320:	sbb    edx,DWORD PTR [edi-0x60]
  402323:	jle    0x4022a5
  402325:	cdq    
  402326:	mov    ecx,0xca5159ec
  40232b:	mov    ds:0xa83db432,eax
  402330:	lock pushf 
  402332:	or     BYTE PTR [edi],al
  402334:	ror    BYTE PTR [ebx+ebx*1],0x34
  402338:	jp     0x4022ef
  40233a:	retf   
  40233b:	pusha  
  40233c:	mov    ebx,ebp
  40233e:	pop    ss
  40233f:	jg     0x40234e
  402341:	mov    ecx,0x2412f26b
  402346:	cmp    al,0xc1
  402348:	and    esi,DWORD PTR [edx-0x1a76fe97]
  40234e:	jmp    0xc10e:0xe1b8b1ba
  402355:	icebp  
  402356:	aad    0x92
  402358:	and    DWORD PTR [ecx],ecx
  40235a:	in     al,0xa8
  40235c:	jmp    0x4023cc
  40235e:	sub    esp,DWORD PTR [esi]
  402360:	xchg   DWORD PTR [ebx+edi*1-0x6606b522],ebx
  402367:	imul   edi,DWORD PTR [di-0x6a],0x73
  40236c:	loop   0x40235c
  40236e:	pop    ss
  40236f:	jg     0x40235a
  402371:	call   0x8e96:0xb2a7e82
  402378:	and    DWORD PTR [ecx+0x76],eax
  40237b:	pop    edi
  40237c:	mov    dh,0x5c
  40237e:	imul   edx,DWORD PTR [ebx-0x433bf551],0x1fd52f8e
  402388:	mov    dl,0x8e
  40238a:	jl     0x40240b
  40238c:	xchg   esp,eax
  40238d:	daa    
  40238e:	inc    esp
  40238f:	scas   al,BYTE PTR es:[edi]
  402390:	jo     0x402338
  402392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402393:	sbb    al,0xd8
  402395:	push   cs
  402396:	mov    ecx,gs
  402398:	scas   al,BYTE PTR es:[edi]
  402399:	dec    edi
  40239a:	push   0x101aba29
  40239f:	imul   BYTE PTR [edi]
  4023a1:	xchg   ebp,eax
  4023a2:	dec    ebx
  4023a3:	retf   
  4023a4:	pop    edi
  4023a5:	cmp    bh,BYTE PTR [ecx]
  4023a7:	hlt    
  4023a8:	in     eax,0x7f
  4023aa:	xchg   edi,eax
  4023ab:	dec    ecx
  4023ac:	or     BYTE PTR [edx],bl
  4023ae:	stos   DWORD PTR es:[edi],eax
  4023af:	div    DWORD PTR [eax+0x17a1346]
  4023b5:	pop    ds
  4023b6:	and    esi,DWORD PTR [ebx-0x69]
  4023b9:	lods   eax,DWORD PTR ds:[esi]
  4023ba:	in     al,0x3a
  4023bc:	fidivr DWORD PTR [edi+0x1768a13e]
  4023c2:	fild   QWORD PTR [eax+ebx*2+0xd83cc63]
  4023c9:	out    dx,al
  4023ca:	icebp  
  4023cb:	dec    eax
  4023cc:	call   0xc028ce4b
  4023d1:	jnp    0x40240a
  4023d3:	sbb    al,0xce
  4023d5:	sbb    DWORD PTR [ecx],0x997d565a
  4023db:	dec    eax
  4023dc:	clc    
  4023dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023de:	adc    BYTE PTR [esi-0x7f],0xd0
  4023e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e3:	jge    0x402462
  4023e5:	in     al,dx
  4023e6:	rcl    bl,cl
  4023e8:	xchg   edx,eax
  4023e9:	scas   eax,DWORD PTR es:[edi]
  4023ea:	jbe    0x402399
  4023ec:	inc    BYTE PTR [ebx-0x4f]
  4023ef:	(bad)  
  4023f1:	xchg   esp,eax
  4023f2:	xchg   ebx,eax
  4023f3:	xchg   edx,eax
  4023f4:	dec    esi
  4023f5:	inc    edi
  4023f6:	xor    bl,BYTE PTR [ebp+0x4ec0d1db]
  4023fc:	sbb    ah,bl
  4023fe:	mov    ch,0x28
  402400:	sub    DWORD PTR [ecx],edx
  402402:	cdq    
  402403:	(bad)  
  402404:	(bad)  
  402405:	ins    BYTE PTR es:[edi],dx
  402406:	pop    eax
  402407:	jae    0x40240a
  402409:	jmp    0x7f32:0xdcf485c6
  402410:	loop   0x40244c
  402412:	pop    esp
  402413:	sti    
  402414:	pop    esi
  402415:	mov    bh,0xea
  402417:	jns    0x4023e6
  402419:	xchg   edi,eax
  40241a:	and    al,0xf2
  40241c:	stc    
  40241d:	sub    eax,0xcc60864f
  402422:	jmp    0x402460
  402424:	pop    ss
  402425:	loope  0x40246f
  402427:	push   ds
  402428:	sub    al,0x7e
  40242a:	and    eax,0xdd30153c
  40242f:	adc    dh,dh
  402431:	or     cl,BYTE PTR ds:0x9312e0bc
  402437:	mov    edi,0x9d9d2e4
  40243c:	cmp    DWORD PTR [edi-0x9],0x31d3747d
  402443:	mov    esi,0x27aec7b0
  402448:	ds inc eax
  40244a:	jp     0x4024be
  40244c:	je     0x402475
  40244e:	cwde   
  40244f:	paddq  mm4,QWORD PTR [esi-0x72e315c6]
  402456:	jno    0x40242f
  402458:	dec    ebp
  402459:	lahf   
  40245a:	sub    DWORD PTR ds:0xf3888cb,edi
  402460:	test   al,0x8b
  402462:	xor    eax,0x34d0f306
  402467:	push   edi
  402468:	retf   0x629e
  40246b:	cmp    DWORD PTR ds:0xd65a8037,0xfffffff3
  402472:	adc    ebp,esi
  402474:	add    dl,bl
  402476:	xchg   ecx,eax
  402477:	jmp    0x402446
  402479:	push   ecx
  40247a:	jno    0x4024e1
  40247c:	loopne 0x402492
  40247e:	dec    edx
  40247f:	xchg   al,bh
  402481:	inc    ebp
  402482:	arpl   si,sp
  402484:	inc    edi
  402485:	mov    ebp,0x21ecd5ce
  40248a:	or     eax,0xedda65d4
  40248f:	adc    ebx,DWORD PTR gs:[eax-0x59f66ed2]
  402496:	adc    bl,BYTE PTR [ebp+0x3b]
  402499:	and    al,0x3f
  40249b:	push   ecx
  40249c:	inc    esi
  40249d:	pop    esp
  40249e:	fs dec edx
  4024a0:	adc    edx,DWORD PTR [ebx-0x6a]
  4024a3:	mov    esi,0xa0ba763a
  4024a8:	adc    esi,ebp
  4024aa:	pop    ds
  4024ab:	sub    bh,BYTE PTR [edi+0x51]
  4024ae:	add    DWORD PTR [eax],edx
  4024b0:	jg     0x402518
  4024b2:	aaa    
  4024b3:	bound  edx,QWORD PTR [edi]
  4024b5:	lock aad 0x77
  4024b8:	sub    eax,0xa95bf129
  4024bd:	pop    eax
  4024be:	or     BYTE PTR [edx],bl
  4024c0:	cld    
  4024c1:	je     0x4024e0
  4024c3:	pushf  
  4024c4:	dec    edi
  4024c5:	add    ah,BYTE PTR [eax+eiz*2-0x640d565f]
  4024cc:	push   ss
  4024cd:	mov    ds:0x20c0e476,eax
  4024d2:	push   ss
  4024d3:	adc    ebp,DWORD PTR [edx+ecx*1-0x577d715a]
  4024da:	leave  
  4024db:	imul   ebx,DWORD PTR [edi],0x598c2507
  4024e1:	fmul   DWORD PTR [ebp-0x3b]
  4024e4:	test   ecx,ecx
  4024e6:	push   bp
  4024e8:	fwait
  4024e9:	mov    al,ds:0xba22ddba
  4024ee:	mov    edi,ecx
  4024f0:	sti    
  4024f1:	xor    ebx,esp
  4024f3:	leave  
  4024f4:	add    edx,0x21
  4024f7:	inc    ebp
  4024f8:	iret   
  4024f9:	push   ecx
  4024fa:	outs   dx,BYTE PTR ds:[esi]
  4024fb:	push   ecx
  4024fc:	mov    edi,0x632c2f15
  402501:	xchg   edi,eax
  402502:	mov    ch,0x4d
  402504:	sub    edi,eax
  402506:	xor    ah,BYTE PTR [edi]
  402508:	mov    WORD PTR [ebx],?
  40250a:	push   ss
  40250b:	aas    
  40250c:	jnp    0x40254f
  40250e:	jnp    0x40251c
  402510:	not    BYTE PTR [esi]
  402512:	imul   esi,DWORD PTR [esi-0x6a],0xd7465e4b
  402519:	and    bh,dl
  40251b:	ret    
  40251c:	gs pushf 
  40251e:	jne    0x4024af
  402520:	inc    ebx
  402521:	fistp  WORD PTR [ecx+0x645110a0]
  402527:	dec    edx
  402528:	sahf   
  402529:	jae    0x40251c
  40252b:	sar    BYTE PTR fs:[eax+0x5561dcb0],1
  402532:	hlt    
  402533:	jne    0x402560
  402535:	mov    cl,0x5d
  402537:	fwait
  402538:	or     al,0xa9
  40253a:	rcr    DWORD PTR [esi-0x1d],cl
  40253d:	jmp    0xeb65:0x9ed61b39
  402544:	jbe    0x4025b6
  402546:	retf   
  402547:	mov    al,0x4c
  402549:	fdiv   DWORD PTR [edx+eax*4-0x6acf61cb]
  402550:	(bad)  
  402551:	int3   
  402552:	test   eax,0xa3d549f1
  402557:	(bad)
  40255b:	mov    esp,0xb5896dde
  402560:	into   
  402561:	retf   
  402562:	xchg   ebp,eax
  402563:	es push es
  402565:	inc    ebx
  402566:	mov    ebp,DWORD PTR [esp+esi*4]
  402569:	fadd   QWORD PTR [ebx+0x74]
  40256c:	outs   dx,BYTE PTR ds:[esi]
  40256d:	test   DWORD PTR ds:0x17e90b00,edx
  402573:	pop    ecx
  402574:	cld    
  402575:	(bad)  
  402576:	addr16 mov bh,0x26
  402579:	mov    ecx,0xafa5161a
  40257e:	aas    
  40257f:	int    0x9b
  402581:	sub    DWORD PTR ds:0x4bc15f7c,ebx
  402587:	and    BYTE PTR [ecx],0x15
  40258a:	sub    al,0x93
  40258c:	sub    BYTE PTR [ecx],al
  40258e:	aaa    
  40258f:	loopne 0x4025b7
  402591:	xor    BYTE PTR [eax+edi*2],cl
  402594:	je     0x402516
  402596:	popf   
  402597:	inc    edi
  402598:	mov    dh,0xb7
  40259a:	cli    
  40259b:	xor    BYTE PTR [edx],ch
  40259d:	sbb    eax,0xbf6978b7
  4025a2:	and    edx,DWORD PTR [eax+0x4bf1a145]
  4025a8:	and    eax,0x3895b1cb
  4025ad:	ja     0x402565
  4025af:	mov    ebx,0x5819bb28
  4025b4:	jmp    0x402619
  4025b6:	ror    BYTE PTR [edx+0x78],1
  4025b9:	push   edx
  4025ba:	inc    edx
  4025bb:	shl    BYTE PTR [ecx+0xbc33d87],1
  4025c1:	sub    DWORD PTR ss:[ecx-0x49],0xfffffff7
  4025c6:	mov    bh,0x86
  4025c8:	out    0xc0,eax
  4025ca:	and    ah,BYTE PTR [bp+si]
  4025cd:	mov    esp,0xa9a93ae
  4025d2:	(bad)  
  4025d3:	xor    eax,esp
  4025d5:	or     ch,BYTE PTR [esi-0x63762170]
  4025db:	xchg   edi,eax
  4025dc:	iret   
  4025dd:	xchg   ebp,eax
  4025de:	push   0xd263e758
  4025e3:	ja     0x40256a
  4025e5:	int3   
  4025e6:	rdpmc  
  4025e8:	scas   eax,DWORD PTR es:[edi]
  4025e9:	or     ebp,DWORD PTR [edx+0x73]
  4025ec:	or     al,0x93
  4025ee:	sub    DWORD PTR [ebp+0x2e],edi
  4025f1:	cmp    BYTE PTR [ebx],0x38
  4025f4:	dec    ebp
  4025f5:	push   es
  4025f6:	(bad)  
  4025f8:	fiadd  DWORD PTR [ebp+0x7b]
  4025fb:	sub    BYTE PTR [edx-0x66fb2dd9],al
  402601:	cmp    al,0xc2
  402603:	outs   dx,BYTE PTR ds:[esi]
  402604:	mov    edi,0x6c65fd12
  402609:	leave  
  40260a:	(bad)  
  40260b:	aam    0x91
  40260d:	dec    edi
  40260e:	fdivr  DWORD PTR [esi+0x594f60be]
  402614:	add    DWORD PTR [ecx+0x3b],ebx
  402617:	vmread DWORD PTR [ecx],esi
  40261a:	ja     0x40268b
  40261c:	push   0x65
  40261e:	sub    eax,0x82bbdaec
  402623:	(bad)  
  402624:	jg     0x402673
  402626:	add    al,0xb2
  402628:	add    edi,edi
  40262a:	hlt    
  40262b:	add    ah,bl
  40262d:	pop    ds
  40262e:	cli    
  40262f:	test   DWORD PTR [ebx-0x3e],ebp
  402632:	les    esp,FWORD PTR [ecx]
  402634:	out    dx,eax
  402635:	stc    
  402636:	pop    ebp
  402637:	enter  0x5a77,0xf0
  40263b:	ja     0x40268d
  40263d:	mov    esp,0x88a722cd
  402642:	test   bl,cl
  402644:	push   ebp
  402645:	sub    eax,DWORD PTR [eax+0x22]
  402648:	jno    0x402665
  40264a:	add    eax,0xa67c586e
  40264f:	jge    0x4025f9
  402651:	popa   
  402652:	sbb    DWORD PTR [ecx],ebp
  402654:	push   ss
  402655:	sti    
  402656:	fadd   QWORD PTR [edi]
  402658:	pop    eax
  402659:	fwait
  40265a:	rcl    ah,1
  40265c:	mov    ch,0xc
  40265e:	aas    
  40265f:	icebp  
  402660:	adc    al,0x24
  402662:	popa   
  402663:	or     al,0x9f
  402665:	jp     0x40265c
  402667:	leave  
  402668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402669:	sub    eax,0xba70a88f
  40266e:	call   0x5a954708
  402673:	jg     0x4026ad
  402675:	dec    esi
  402676:	pop    ss
  402677:	cmc    
  402678:	shl    BYTE PTR [edx+edx*2-0x74],cl
  40267c:	adc    dl,BYTE PTR [ebp+0x55145e29]
  402682:	inc    ebx
  402683:	int    0xf9
  402685:	mov    ebp,0x6d1160d3
  40268a:	or     cl,BYTE PTR [ebx-0x764f3152]
  402690:	shl    dl,cl
  402692:	xchg   DWORD PTR [ecx-0x6d],ecx
  402695:	xor    DWORD PTR [ecx-0x60],ebp
  402698:	lds    eax,FWORD PTR [ebx]
  40269a:	xchg   DWORD PTR [ebp-0x1e0e12fa],esi
  4026a0:	(bad)  [ecx-0x47]
  4026a3:	jnp    0x40271e
  4026a5:	mov    esi,0xf88fd5bb
  4026aa:	nop
  4026ab:	gs fxch st(5)
  4026ae:	mov    ecx,DWORD PTR [ecx+0x419fc921]
  4026b4:	ret    
  4026b5:	mov    esp,0xe315d433
  4026ba:	jnp    0x4026b2
  4026bc:	lods   al,BYTE PTR ds:[esi]
  4026bd:	fs inc ebp
  4026bf:	leave  
  4026c0:	pop    ecx
  4026c1:	retf   
  4026c2:	int    0xac
  4026c4:	push   ecx
  4026c5:	pop    esi
  4026c6:	lods   eax,DWORD PTR ds:[esi]
  4026c7:	jge    0x40267e
  4026c9:	lock pop eax
  4026cb:	inc    ebx
  4026cc:	cmp    DWORD PTR [edi],esi
  4026ce:	std    
  4026cf:	mov    ebx,0xb502fa13
  4026d4:	xor    al,0x98
  4026d6:	popf   
  4026d7:	mov    dh,0xdd
  4026d9:	shl    BYTE PTR [eax-0x40],cl
  4026dc:	add    DWORD PTR [edx+0x1a8788b1],edi
  4026e2:	icebp  
  4026e3:	int    0xfc
  4026e5:	nop
  4026e6:	in     al,dx
  4026e7:	arpl   WORD PTR [edi+0xd046a8b],sp
  4026ed:	sar    BYTE PTR [ecx+0x54],1
  4026f0:	out    dx,al
  4026f1:	(bad)
  4026f4:	or     BYTE PTR [edx+0x3dbcce2e],bl
  4026fa:	(bad)  
  4026fb:	or     ebp,DWORD PTR [edi+0x14]
  4026fe:	push   ecx
  4026ff:	icebp  
  402700:	adc    al,0x4a
  402702:	or     BYTE PTR [eax-0x2f],bl
  402705:	in     eax,dx
  402706:	cmp    al,0x80
  402708:	dec    esp
  402709:	mov    eax,ds:0xda7f22ea
  40270e:	or     DWORD PTR [edx+0x732e502],ebp
  402714:	in     eax,0xe6
  402716:	fiadd  DWORD PTR [esi+0x1]
  402719:	xor    eax,0xabcff0bc
  40271e:	das    
  40271f:	xchg   ebp,eax
  402720:	push   ebx
  402721:	cli    
  402722:	mov    bh,0xf9
  402724:	cmp    al,0x79
  402726:	sub    DWORD PTR [esi-0x10bd59d2],edx
  40272c:	test   ebx,eax
  40272e:	ds pop edx
  402730:	inc    esp
  402731:	jmp    0x402738
  402733:	data16 fist DWORD PTR ds:[esi-0x30c7c493]
  40273b:	lods   al,BYTE PTR ds:[esi]
  40273c:	retf   0xbda
  40273f:	or     al,ah
  402741:	repnz lea edx,[esi+0x47a54c50]
  402748:	stos   BYTE PTR es:[edi],al
  402749:	out    0x2f,al
  40274b:	sbb    eax,0x7010d849
  402750:	ror    DWORD PTR [ebx+0x7e],cl
  402753:	sub    eax,0xa056bf
  402758:	xchg   dl,dh
  40275a:	ins    BYTE PTR es:[edi],dx
  40275b:	lahf   
  40275c:	(bad)  
  40275d:	repnz mov cs,esp
  402760:	sub    eax,0x2676f550
  402765:	ret    
  402766:	je     0x40273d
  402768:	or     bh,BYTE PTR [esi]
  40276a:	jecxz  0x40273f
  40276c:	ffree  st(2)
  40276e:	popa   
  40276f:	pop    ebp
  402770:	ins    BYTE PTR es:[edi],dx
  402771:	and    eax,DWORD PTR [edx+0x63]
  402774:	push   0xde4f170a
  402779:	or     edi,DWORD PTR [ecx+0x1b]
  40277c:	sti    
  40277d:	js     0x4026ff
  40277f:	stc    
  402780:	adc    al,0x58
  402782:	xchg   ebp,ecx
  402784:	xchg   edi,eax
  402785:	xchg   ebp,eax
  402786:	xor    eax,0xa47f451f
  40278b:	mov    edx,0xdcf95a56
  402790:	arpl   WORD PTR [edx],si
  402792:	js     0x402732
  402794:	shr    DWORD PTR [edi],cl
  402796:	loop   0x402766
  402798:	sub    bl,BYTE PTR ds:[edi+edx*8-0x2e0e99cf]
  4027a0:	daa    
  4027a1:	adc    ch,BYTE PTR [eax+0x64]
  4027a4:	adc    al,0x4d
  4027a6:	js     0x402776
  4027a8:	sbb    eax,esi
  4027aa:	aas    
  4027ab:	test   DWORD PTR [eax+eiz*2+0x1e],ecx
  4027af:	pushf  
  4027b0:	xor    al,0x58
  4027b2:	in     eax,dx
  4027b3:	and    DWORD PTR [edi],esi
  4027b5:	dec    ebp
  4027b6:	adc    eax,0xa366d96a
  4027bb:	repnz dec esi
  4027bd:	ja     0x4027d1
  4027bf:	push   esp
  4027c0:	mov    ah,0x6e
  4027c2:	nop
  4027c3:	outs   dx,DWORD PTR ds:[esi]
  4027c4:	sbb    ebx,DWORD PTR [ecx-0xb69211]
  4027ca:	daa    
  4027cb:	push   edi
  4027cc:	mov    esi,DWORD PTR [ebx-0x8]
  4027cf:	add    eax,0x25ce7011
  4027d4:	sbb    edi,DWORD PTR [ebx-0x2d8830d9]
  4027da:	adc    BYTE PTR [ecx-0x50c6df17],cl
  4027e0:	push   eax
  4027e1:	jp     0x402819
  4027e3:	and    al,0xe4
  4027e5:	xchg   ebx,eax
  4027e6:	scas   al,BYTE PTR es:[edi]
  4027e7:	hlt    
  4027e8:	dec    esp
  4027e9:	js     0x40280d
  4027eb:	pop    es
  4027ec:	push   0xffffffaa
  4027ee:	jne    0x402839
  4027f0:	sbb    DWORD PTR [edx],0x5f
  4027f3:	je     0x40278f
  4027f5:	mov    BYTE PTR [eax-0x56a1f3dc],bl
  4027fb:	add    DWORD PTR [eax],ebx
  4027fd:	add    cl,cl
  4027ff:	iret   
  402800:	outs   dx,BYTE PTR ds:[esi]
  402801:	mov    ds,WORD PTR [edi+0x7b]
  402804:	fs stc 
  402806:	mov    esi,0xf07ac5a7
  40280b:	xchg   di,ax
  40280d:	push   cs
  40280e:	cld    
  40280f:	adc    DWORD PTR [esi+edx*1-0x723cda89],0x2ab24293
  40281a:	ins    DWORD PTR es:[edi],dx
  40281b:	das    
  40281c:	adc    ch,BYTE PTR ds:0x33ef4c98
  402822:	lods   eax,DWORD PTR ds:[esi]
  402823:	(bad)  
  402824:	leave  
  402825:	adc    esi,DWORD PTR [edi+0x1fa4bac0]
  40282b:	pusha  
  40282c:	xchg   edx,eax
  40282d:	mov    eax,ds:0xcd9ecbe9
  402832:	ins    DWORD PTR es:[edi],dx
  402833:	sbb    BYTE PTR [esp+eiz*2],ch
  402836:	cmp    BYTE PTR [ecx-0x17],dh
  402839:	and    eax,0xbff950d9
  40283e:	repz pop esp
  402840:	pop    es
  402841:	adc    bl,0xb
  402844:	(bad)  
  402845:	repnz div DWORD PTR [edx-0xa]
  402849:	dec    ebx
  40284a:	in     al,dx
  40284b:	je     0x402884
  40284d:	adc    BYTE PTR [ecx+0x16d6f66b],0x18
  402854:	pop    eax
  402855:	dec    ebx
  402856:	jnp    0x40288e
  402858:	(bad)  
  402859:	stos   DWORD PTR es:[edi],eax
  40285a:	jle    0x4028c4
  40285c:	push   ds
  40285d:	fwait
  40285e:	dec    edi
  40285f:	jmp    0xa2a2:0x5d45b6e1
  402866:	aas    
  402867:	sti    
  402868:	(bad)  
  402869:	sub    ah,BYTE PTR [ebx+0x1]
  40286c:	xchg   ebx,eax
  40286d:	push   ebx
  40286e:	fwait
  40286f:	mov    esp,0x4d246170
  402874:	aam    0x5a
  402876:	cld    
  402877:	ins    DWORD PTR es:[edi],dx
  402878:	sbb    dh,dh
  40287a:	adc    eax,0xdbaee32a
  40287f:	in     eax,dx
  402880:	retf   
  402881:	sub    BYTE PTR [edi-0x5a],ah
  402884:	mov    eax,ds:0xfeb2d9eb
  402889:	ds push 0xc74da727
  40288f:	push   ss
  402890:	xchg   ebx,eax
  402891:	ficom  DWORD PTR [ecx]
  402893:	dec    edx
  402894:	mov    ds:0xb76e4f96,eax
  402899:	add    eax,0x48f7ec04
  40289e:	scas   eax,DWORD PTR es:[edi]
  40289f:	call   0xbcd84cb7
  4028a4:	xor    ebp,edx
  4028a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a7:	call   0x6c59:0x2b4647d7
  4028ae:	clc    
  4028af:	add    al,dh
  4028b1:	loop   0x402913
  4028b3:	adc    eax,0xa1f47dc5
  4028b8:	std    
  4028b9:	mov    edi,0x7e620e13
  4028be:	outs   dx,BYTE PTR ds:[esi]
  4028bf:	jnp    0x4028bc
  4028c1:	mov    DWORD PTR [ecx],esi
  4028c3:	leave  
  4028c4:	(bad)  
  4028c5:	test   DWORD PTR [esi+edi*4-0x2a],0x196b8937
  4028cd:	and    al,ch
  4028cf:	ror    BYTE PTR [edi],cl
  4028d1:	inc    esi
  4028d2:	std    
  4028d3:	pop    edx
  4028d4:	ret    
  4028d5:	mov    ecx,0xd06e5ca1
  4028da:	mov    dl,0x28
  4028dc:	mov    bl,BYTE PTR [ebx-0x7a7f3fc6]
  4028e2:	mov    WORD PTR [ebx],?
  4028e4:	out    0xff,al
  4028e6:	dec    eax
  4028e7:	adc    eax,0x5f0b1dcb
  4028ec:	xor    eax,0x73b515c6
  4028f1:	xchg   edx,eax
  4028f2:	les    edi,FWORD PTR ds:0xbe658242
  4028f8:	sar    bh,cl
  4028fa:	jle    0x4028b2
  4028fc:	mov    dl,0xea
  4028fe:	ins    BYTE PTR es:[edi],dx
  4028ff:	inc    edx
  402900:	leave  
  402901:	pmaxsw mm0,QWORD PTR [eax]
  402904:	icebp  
  402905:	dec    esi
  402906:	outs   dx,BYTE PTR ds:[esi]
  402907:	call   0x1149f50a
  40290c:	mov    ds:0xa818b961,al
  402911:	mov    ds:0xcf24a833,eax
  402916:	stos   DWORD PTR es:[edi],eax
  402917:	stos   BYTE PTR es:[edi],al
  402918:	jns    0x402946
  40291a:	loopne 0x402911
  40291c:	in     al,dx
  40291d:	fwait
  40291e:	arpl   bp,ax
  402920:	(bad)  
  402921:	shl    edx,1
  402923:	adc    al,0x1a
  402925:	push   ecx
  402926:	fwait
  402927:	repz dec eax
  402929:	sub    DWORD PTR [ebx+0x597ab680],esi
  40292f:	add    DWORD PTR [edi],ebx
  402931:	ret    0x18ea
  402934:	xchg   esp,eax
  402935:	jmp    0x72db:0x3acb46a4
  40293c:	sbb    cl,BYTE PTR [esi+0x24]
  40293f:	ror    BYTE PTR [edx-0x14],cl
  402942:	mov    edx,0x7b233c8b
  402947:	and    al,BYTE PTR [edx-0x23]
  40294a:	adc    eax,0x52e0c802
  40294f:	push   ss
  402950:	mov    edi,0x52198d51
  402955:	shl    cl,0xa1
  402958:	or     eax,0x2688d21d
  40295d:	pop    ecx
  40295e:	push   cs
  40295f:	xchg   DWORD PTR [ebx+0x630088af],eax
  402965:	lea    esi,[ebx+0x541c7bd3]
  40296b:	add    BYTE PTR [eax-0x29c43713],bh
  402971:	jp     0x4028ff
  402973:	scas   al,BYTE PTR es:[edi]
  402974:	mov    esi,cs
  402976:	xchg   DWORD PTR [ebx+edi*4],esi
  402979:	imul   ebp,DWORD PTR [eax],0x698f6af7
  40297f:	or     al,BYTE PTR [ecx+0x5]
  402982:	inc    esp
  402983:	cmp    al,BYTE PTR [ebp-0x39]
  402986:	push   ebp
  402987:	les    esp,FWORD PTR [ecx*8-0x2d24f182]
  40298e:	(bad)  
  40298f:	push   0x8f7d4e9b
  402994:	push   0x6b6f14e
  402999:	jnp    0x40296f
  40299b:	mov    esp,0xf6a32ca4
  4029a0:	push   edi
  4029a1:	jae    0x402952
  4029a3:	mov    eax,0x92d0fab2
  4029a8:	xor    al,0xa3
  4029aa:	cmp    eax,DWORD PTR [esp+edi*1+0x501e468a]
  4029b1:	out    0x54,al
  4029b3:	add    DWORD PTR [ecx],esi
  4029b5:	in     eax,dx
  4029b6:	lods   eax,DWORD PTR ds:[esi]
  4029b7:	jge    0x40297e
  4029b9:	(bad)  
  4029ba:	(bad)  
  4029bb:	fdivr  st,st(6)
  4029bd:	push   0xffffffc2
  4029bf:	mov    eax,0xe5cd705a
  4029c4:	xchg   esp,eax
  4029c5:	and    al,BYTE PTR [ecx+0x4e]
  4029c8:	xor    edi,DWORD PTR [ebx-0x718c776f]
  4029ce:	popf   
  4029cf:	mov    ebp,0x400a70cf
  4029d4:	cdq    
  4029d5:	inc    ebx
  4029d6:	adc    edx,ecx
  4029d8:	sub    eax,0x1808ca8a
  4029dd:	adc    dh,bh
  4029df:	mov    bh,0x89
  4029e1:	rcl    esp,0x8b
  4029e4:	add    esp,DWORD PTR [esi+0x55a063]
  4029ea:	adc    eax,0x8eb069c2
  4029ef:	xor    DWORD PTR [esi],ebp
  4029f1:	mov    ebp,0x5a9898ad
  4029f6:	fild   WORD PTR [ebx]
  4029f8:	mov    ds:0x6d24b03a,al
  4029fd:	arpl   WORD PTR [edx-0x62f9c0ae],dx
  402a03:	sahf   
  402a04:	inc    edx
  402a05:	es adc esp,ebp
  402a08:	sti    
  402a09:	fldenv [edi+0x5ec6e408]
  402a0f:	imul   edx,DWORD PTR [ebx-0x12],0xf5c57029
  402a16:	dec    esi
  402a17:	mov    ch,0xbe
  402a19:	in     eax,0x61
  402a1b:	add    eax,DWORD PTR [eax-0x77]
  402a1e:	sbb    esi,edi
  402a20:	push   ebp
  402a21:	jo     0x402a3f
  402a23:	lahf   
  402a24:	xor    ah,0xc6
  402a27:	pop    edi
  402a28:	cmp    BYTE PTR [edi-0x40a8a4b9],dh
  402a2e:	das    
  402a2f:	jge    0x402a6f
  402a31:	dec    DWORD PTR ds:0x5cb898a2
  402a37:	adc    dh,BYTE PTR [eax]
  402a39:	xor    ecx,esi
  402a3b:	and    eax,0x7267af9e
  402a40:	in     al,0xd5
  402a42:	lods   eax,DWORD PTR ds:[esi]
  402a43:	fmul   st(6),st
  402a45:	and    al,0xc
  402a47:	xchg   edx,eax
  402a48:	pop    esi
  402a49:	and    eax,0xb5de7911
  402a4e:	div    BYTE PTR [edi+0x2b84fe8c]
  402a54:	push   eax
  402a55:	or     al,0xdf
  402a57:	mov    cl,0xc7
  402a59:	loopne 0x402a3a
  402a5b:	int    0x4a
  402a5d:	or     ebx,DWORD PTR [edi+0x24]
  402a60:	mov    al,ds:0x23f21691
  402a65:	ja     0x402ad8
  402a67:	mov    dh,0x1c
  402a69:	inc    edi
  402a6a:	inc    eax
  402a6b:	rcr    eax,cl
  402a6d:	xor    al,0xc6
  402a6f:	add    cl,BYTE PTR [ecx-0x7c]
  402a72:	aas    
  402a73:	sub    al,0x4a
  402a75:	or     eax,0x5c7f9afc
  402a7a:	jmp    0x402af6
  402a7c:	in     al,0x5e
  402a7e:	adc    al,0xec
  402a80:	adc    ch,0x47
  402a83:	(bad)  
  402a85:	inc    eax
  402a86:	inc    esi
  402a87:	jbe    0x402a25
  402a89:	call   0x91a4:0xb6c4e437
  402a90:	imul   ebx,DWORD PTR [eax+0x920f70b],0xffffffd3
  402a97:	in     eax,dx
  402a98:	mov    bh,BYTE PTR [esi]
  402a9a:	jbe    0x402afe
  402a9c:	outs   dx,DWORD PTR ds:[esi]
  402a9d:	cwde   
  402a9e:	mov    esi,0x6032a475
  402aa3:	std    
  402aa4:	jmp    FWORD PTR [ebp+0x2f]
  402aa7:	test   BYTE PTR [esi+0x387223d4],dl
  402aad:	(bad)  
  402aae:	sar    DWORD PTR [ebp+0x1d0b5c70],1
  402ab4:	es xchg ebp,eax
  402ab6:	mov    dh,0x80
  402ab8:	aas    
  402ab9:	std    
  402aba:	xor    edx,edi
  402abc:	add    DWORD PTR [ebx+ebx*8-0x5a87ab3d],edx
  402ac3:	and    esp,DWORD PTR [edx+0x13395292]
  402ac9:	adc    dh,BYTE PTR [ecx-0x48]
  402acc:	add    edi,ecx
  402ace:	pop    ss
  402acf:	dec    ebp
  402ad0:	mov    ebx,0x40ce5c60
  402ad5:	pushf  
  402ad6:	stos   DWORD PTR es:[edi],eax
  402ad7:	or     eax,edx
  402ad9:	add    eax,0x59ffe927
  402ade:	and    ah,BYTE PTR [edx-0x4d736aa9]
  402ae4:	sahf   
  402ae5:	ret    0x2b66
  402ae8:	push   edi
  402ae9:	mov    ss,ebp
  402aeb:	jne    0x402b6c
  402aed:	mov    esp,0xdb670de2
  402af2:	adc    bh,BYTE PTR [ebx-0x72663a8a]
  402af8:	inc    ebx
  402af9:	int    0xfe
  402afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402afc:	cwde   
  402afd:	jle    0x402b39
  402aff:	add    eax,0xfab50982
  402b04:	das    
  402b05:	jnp    0x402b0f
  402b07:	adc    esi,DWORD PTR [ebx+0x75]
  402b0a:	lods   al,BYTE PTR ds:[esi]
  402b0b:	adc    DWORD PTR [ebp-0x16],esi
  402b0e:	xchg   edx,eax
  402b0f:	iret   
  402b10:	call   0x4c0467ac
  402b15:	cld    
  402b16:	xchg   esi,eax
  402b17:	cmp    ebp,esi
  402b19:	fidivr WORD PTR [ecx]
  402b1b:	mov    esp,0xa1870211
  402b20:	jo     0x402ab7
  402b22:	mov    bl,0x1f
  402b24:	jp     0x402adf
  402b26:	daa    
  402b27:	or     DWORD PTR [ebx+0x21],esi
  402b2a:	fild   DWORD PTR [edx]
  402b2c:	xchg   ebx,eax
  402b2d:	adc    ch,BYTE PTR [ebx+0x7]
  402b30:	call   0xf585:0x23169a5a
  402b37:	mov    eax,ds:0x1619db5c
  402b3c:	out    0x4d,al
  402b3e:	jbe    0x402b43
  402b40:	xor    ch,bh
  402b42:	mov    bl,0xaa
  402b44:	mov    ecx,0x6a966794
  402b49:	cmp    ebx,edi
  402b4b:	adc    esp,DWORD PTR [ecx+0x2342078b]
  402b51:	out    dx,eax
  402b52:	push   ebp
  402b53:	test   dh,bh
  402b55:	jns    0x402bb6
  402b57:	iret   
  402b58:	or     al,BYTE PTR [edx]
  402b5a:	xor    eax,0x9838d5b6
  402b5f:	ficom  WORD PTR [edx]
  402b61:	(bad)  
  402b62:	mov    esp,0x4c01468a
  402b67:	inc    edi
  402b68:	and    al,0x64
  402b6a:	(bad)
  402b6f:	lea    esp,[esi+0x14fb8fe8]
  402b75:	and    dh,BYTE PTR [edi]
  402b77:	push   cs
  402b78:	dec    ecx
  402b79:	fidiv  WORD PTR [edx-0xf]
  402b7c:	loop   0x402b51
  402b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b7f:	fwait
  402b80:	mov    ?,ebp
  402b82:	rcr    BYTE PTR [eax+0x3b7326be],0x7e
  402b89:	aad    0xfc
  402b8b:	lods   eax,DWORD PTR ds:[esi]
  402b8c:	xor    ebp,esp
  402b8e:	jle    0x402b52
  402b90:	jle    0x402b47
  402b92:	add    BYTE PTR [ebp+0x17],ah
  402b95:	sub    ecx,esp
  402b97:	add    al,0x94
  402b99:	inc    edx
  402b9a:	fs xchg esp,eax
  402b9c:	jnp    0x402bdd
  402b9e:	adc    eax,0x21a20324
  402ba3:	adc    eax,0x17116f02
  402ba8:	imul   esp,DWORD PTR [ebx+edi*8],0xffffffe9
  402bac:	sub    BYTE PTR [ebx],al
  402bae:	add    eax,0xc5080c96
  402bb3:	xchg   ebx,eax
  402bb4:	in     al,0xb
  402bb6:	jae    0x402b8b
  402bb8:	add    dh,BYTE PTR [ecx+0x76]
  402bbb:	sub    DWORD PTR [ebp-0xee3b33],0xffffffba
  402bc2:	gs clc 
  402bc4:	fld    st(6)
  402bc6:	ins    DWORD PTR es:[edi],dx
  402bc7:	mov    eax,esp
  402bc9:	or     al,0x54
  402bcb:	or     eax,0x2c0b4661
  402bd0:	jle    0x402b60
  402bd2:	adc    bh,BYTE PTR [ebp-0x21]
  402bd5:	mov    ch,0x76
  402bd7:	sbb    al,0x10
  402bd9:	jnp    0x402c11
  402bdb:	mov    edx,DWORD PTR [edx+0x31]
  402bde:	(bad)  [ecx+ebp*8-0x4f19f794]
  402be5:	jno    0x402c51
  402be7:	jns    0x402c31
  402be9:	cmc    
  402bea:	pop    ecx
  402beb:	fdivp  st(3),st
  402bed:	cmc    
  402bee:	mov    cl,0xfe
  402bf0:	jmp    0x402c28
  402bf2:	add    esi,DWORD PTR [edx+0x6030c3]
  402bf8:	out    dx,al
  402bf9:	cmp    al,0x52
  402bfb:	jmp    0x402c55
  402bfd:	test   DWORD PTR [eax],esi
  402bff:	cld    
  402c00:	cmp    ebx,DWORD PTR [ebx*8+0x78260d17]
  402c07:	xor    bh,dh
  402c09:	call   0x47263b95
  402c0e:	sub    edx,DWORD PTR [edx-0x1e]
  402c11:	sbb    DWORD PTR [eax],ecx
  402c13:	js     0x402be6
  402c15:	cmp    edi,DWORD PTR [ecx+edi*2-0x79]
  402c19:	sub    ah,ch
  402c1b:	push   esp
  402c1c:	test   DWORD PTR ss:[ebx-0x2f17d5eb],0x28f5dd22
  402c27:	imul   edi,DWORD PTR [ecx],0xffffffa8
  402c2a:	adc    cl,BYTE PTR [ebx]
  402c2c:	push   ebx
  402c2d:	jbe    0x402bb4
  402c2f:	dec    esi
  402c30:	call   0xbda1:0x56707b44
  402c37:	sbb    ebx,DWORD PTR [ebp+edi*2-0x8]
  402c3b:	repnz cli 
  402c3d:	pusha  
  402c3e:	popa   
  402c3f:	push   0xffffffb4
  402c41:	mov    ds:0xeb1c3450,al
  402c46:	sub    cl,BYTE PTR [ebx+0x57195963]
  402c4c:	xlat   BYTE PTR ds:[ebx]
  402c4d:	push   0x45
  402c4f:	pop    eax
  402c50:	jbe    0x402c57
  402c52:	sysexit 
  402c54:	sbb    edx,DWORD PTR [edi+0x6a]
  402c57:	in     al,0xc0
  402c59:	mov    al,BYTE PTR [ecx+0x10]
  402c5c:	mov    edi,0x90aaeb9b
  402c61:	jmp    0x402c9c
  402c63:	retf   0x55eb
  402c66:	(bad)  
  402c67:	dec    ebp
  402c68:	or     ebx,DWORD PTR [bx-0x654a]
  402c6d:	mov    ch,0xb9
  402c6f:	dec    ecx
  402c70:	lods   al,BYTE PTR ds:[esi]
  402c71:	ficom  DWORD PTR [ecx]
  402c73:	push   ebx
  402c74:	iret   
  402c75:	test   BYTE PTR [ecx],ch
  402c77:	sub    ah,BYTE PTR [ecx-0xf]
  402c7a:	add    ebp,edx
  402c7c:	adc    al,0x61
  402c7e:	push   edi
  402c7f:	call   0x81bf:0xb86541c5
  402c86:	adc    DWORD PTR [ebx],0xffffff84
  402c89:	test   eax,0x32f07044
  402c8e:	shl    esi,1
  402c90:	inc    edx
  402c91:	inc    ebx
  402c92:	pop    ebx
  402c93:	jnp    0x402d0a
  402c95:	mov    edx,ecx
  402c97:	jno    0x402c90
  402c99:	out    0x19,eax
  402c9b:	or     al,0x21
  402c9d:	popa   
  402c9e:	fcmove st,st(5)
  402ca0:	sbb    BYTE PTR [edx+0x2dac0a15],0x91
  402ca7:	scas   eax,DWORD PTR es:[edi]
  402ca8:	jle    0x402cc1
  402caa:	fidivr WORD PTR gs:[edx]
  402cad:	test   BYTE PTR [edi],ah
  402caf:	cwde   
  402cb0:	adc    edx,DWORD PTR [ecx]
  402cb2:	xchg   edx,eax
  402cb3:	mov    al,ds:0x6bcccb33
  402cb8:	and    cl,BYTE PTR [ebp+eax*1+0x70482eed]
  402cbf:	aas    
  402cc0:	int3   
  402cc1:	mov    dh,0x97
  402cc3:	outs   dx,DWORD PTR ds:[esi]
  402cc4:	push   0x4e
  402cc6:	lock push ebx
  402cc8:	adc    eax,0x6aca716a
  402ccd:	and    BYTE PTR [edx+ecx*4+0x27b2834],0x34
  402cd5:	in     al,0x7c
  402cd7:	add    ch,BYTE PTR [ebx]
  402cd9:	pop    ecx
  402cda:	loopne 0x402c95
  402cdc:	(bad)  
  402cdd:	push   edi
  402cde:	pop    ebx
  402cdf:	mov    dh,BYTE PTR [ecx]
  402ce1:	and    BYTE PTR [ebx-0x22],0x39
  402ce5:	add    al,0x8b
  402ce7:	fsub   QWORD PTR [edx]
  402ce9:	cmp    eax,0x71b4238b
  402cee:	ja     0x402c88
  402cf0:	mov    ds:0xd8126c77,al
  402cf5:	xchg   BYTE PTR [ecx],ah
  402cf7:	sbb    BYTE PTR [edi-0x4b],bl
  402cfa:	pop    edx
  402cfb:	sub    eax,0xea70e101
  402d00:	xor    DWORD PTR [ebx],0x2f838b17
  402d06:	gs jo  0x402c97
  402d09:	call   0x37f6:0x290996cf
  402d10:	sbb    eax,DWORD PTR [eax+0x60152d3f]
  402d16:	call   0xd6a2:0x5148499c
  402d1d:	add    esi,DWORD PTR [esi+0x6d52c42e]
  402d23:	loop   0x402d32
  402d25:	push   0xffffffda
  402d27:	and    eax,0x6cec39de
  402d2c:	pop    esp
  402d2d:	add    BYTE PTR [ebx+0x4dfaf279],bh
  402d33:	stos   DWORD PTR es:[edi],eax
  402d34:	mov    bl,dh
  402d36:	ficom  DWORD PTR [edx-0x3f992af]
  402d3c:	into   
  402d3d:	cwde   
  402d3e:	sub    ebx,esp
  402d40:	test   DWORD PTR [ebx+0x6c],edx
  402d43:	daa    
  402d44:	rol    ah,cl
  402d46:	sbb    DWORD PTR [ebx],ebp
  402d48:	xchg   esp,eax
  402d49:	into   
  402d4a:	retf   0x2f55
  402d4d:	push   es
  402d4e:	dec    esi
  402d4f:	xor    ebp,DWORD PTR [ecx+0x1d]
  402d52:	in     eax,dx
  402d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d54:	and    ch,BYTE PTR [ebx+ebx*8-0x61]
  402d58:	stos   DWORD PTR es:[edi],eax
  402d59:	iret   
  402d5a:	pop    ss
  402d5b:	mov    ds:0x2ca453d,al
  402d60:	mov    bh,0x7
  402d62:	hlt    
  402d63:	jle    0x402d28
  402d65:	(bad)  
  402d66:	cmp    eax,0x71979d23
  402d6b:	jne    0x402d91
  402d6d:	mov    bl,0x6e
  402d6f:	xchg   ebp,eax
  402d70:	pop    edx
  402d71:	mov    ds:0x19b58d14,eax
  402d76:	pusha  
  402d77:	mov    esp,esp
  402d79:	fs mov edx,0xbb942e01
  402d7f:	jl     0x402dbd
  402d81:	icebp  
  402d82:	jne    0x402d07
  402d84:	jns    0x402dcb
  402d86:	mov    cl,0x7d
  402d88:	cld    
  402d89:	addr16 mov ah,0x4b
  402d8c:	outs   dx,BYTE PTR ds:[esi]
  402d8d:	adc    BYTE PTR [edi-0x54a46ed],al
  402d93:	cmp    dh,BYTE PTR [edx+0xa]
  402d96:	ins    BYTE PTR es:[edi],dx
  402d97:	ret    
  402d98:	sti    
  402d99:	mul    DWORD PTR [edi]
  402d9b:	aaa    
  402d9c:	jecxz  0x402d76
  402d9e:	lock mov ds:0xa653142f,al
  402da4:	stos   DWORD PTR es:[edi],eax
  402da5:	jae    0x402d55
  402da7:	pop    edx
  402da8:	adc    cl,BYTE PTR [esi+0xb]
  402dab:	in     al,dx
  402dac:	mov    ah,dl
  402dae:	or     edx,esi
  402db0:	mov    ds:0x4217de91,al
  402db5:	mov    bh,0x9c
  402db7:	imul   eax,DWORD PTR [ebx],0xffffffe6
  402dba:	inc    edi
  402dbb:	pop    ss
  402dbc:	jns    0x402e28
  402dbe:	xchg   BYTE PTR [eax+0x15],bh
  402dc1:	push   ebx
  402dc2:	mov    eax,ds:0x8ec315e8
  402dc7:	xor    ah,BYTE PTR [esi]
  402dc9:	out    0x9f,al
  402dcb:	xor    ebp,edx
  402dcd:	push   eax
  402dce:	dec    edx
  402dcf:	gs in  al,0xec
  402dd2:	xor    al,cl
  402dd4:	repz aas 
  402dd6:	inc    ecx
  402dd7:	mov    eax,0xaa8646ed
  402ddc:	jp     0x402d5e
  402dde:	pop    ebp
  402ddf:	arpl   cx,si
  402de1:	pop    eax
  402de2:	sbb    al,ch
  402de4:	aas    
  402de5:	nop
  402de6:	xor    al,BYTE PTR [edx+ebx*1]
  402de9:	add    eax,edx
  402deb:	gs call 0x881f:0x674ef18b
  402df3:	add    ah,dh
  402df5:	sub    al,0x5e
  402df7:	xchg   edx,eax
  402df8:	mov    ds:0x6850101b,eax
  402dfd:	add    BYTE PTR [ebp-0x6dc38be4],bh
  402e03:	pop    edx
  402e04:	xchg   esi,eax
  402e05:	xchg   esi,ebx
  402e07:	cmp    eax,0x45e3839f
  402e0c:	fnstsw WORD PTR [edx]
  402e0e:	fsubp  st(7),st
  402e10:	imul   esi,DWORD PTR [ecx+0x2c55db0c],0xffffffbe
  402e17:	cmp    al,0xcd
  402e19:	pop    ebp
  402e1a:	mov    DWORD PTR ds:0x80aca160,ebx
  402e20:	call   0xcda7a513
  402e25:	(bad)  
  402e26:	mov    esi,0x67ece35c
  402e2b:	mov    cl,BYTE PTR [edx-0x3b]
  402e2e:	lods   eax,DWORD PTR ds:[esi]
  402e2f:	or     ecx,esp
  402e31:	hlt    
  402e32:	leave  
  402e33:	nop
  402e34:	xchg   ecx,eax
  402e35:	out    dx,al
  402e36:	or     eax,0xc1db622e
  402e3b:	dec    eax
  402e3c:	pop    edi
  402e3d:	pop    edi
  402e3e:	(bad)  
  402e3f:	jmp    0x402e89
  402e41:	test   eax,0x5758fb90
  402e46:	jp     0x402e69
  402e48:	mov    DWORD PTR [ebx],ecx
  402e4a:	imul   edx,DWORD PTR [edi],0xc2a47cf5
  402e50:	jnp    0x402e7d
  402e52:	mov    cl,0x5e
  402e54:	sahf   
  402e55:	ss jge 0x402df7
  402e58:	loope  0x402ddb
  402e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e5b:	lock inc ecx
  402e5d:	in     eax,0xa6
  402e5f:	jnp    0x402eb5
  402e61:	xchg   edx,eax
  402e62:	inc    edx
  402e63:	dec    edi
  402e64:	aam    0xf8
  402e66:	cdq    
  402e67:	and    al,cl
  402e69:	out    dx,al
  402e6a:	ss lahf 
  402e6c:	retf   0x1d00
  402e6f:	mov    eax,ds:0xb1da2776
  402e74:	xchg   DWORD PTR [ecx+0xd90d9b1],edi
  402e7a:	mov    cl,0x89
  402e7c:	ret    0x4950
  402e7f:	shl    DWORD PTR [esi],cl
  402e81:	call   0x6897c103
  402e86:	push   0x1
  402e88:	paddsb mm5,QWORD PTR [ebp+0x1f15caa5]
  402e8f:	xchg   ecx,eax
  402e90:	pop    eax
  402e91:	xor    BYTE PTR [eax-0x75],ah
  402e94:	pop    esi
  402e95:	arpl   WORD PTR [ebp-0xc],bp
  402e98:	or     dh,BYTE PTR [ebx+eiz*2]
  402e9b:	and    cl,0x20
  402e9e:	jmp    0xdc2c:0x1321ffc5
  402ea5:	mov    eax,ds:0xe6d246e5
  402eaa:	test   BYTE PTR [eax+0x7c],ch
  402ead:	xor    BYTE PTR [edi],bl
  402eaf:	jmp    0x402e6c
  402eb1:	arpl   WORD PTR [edi+0x225a7ffd],bx
  402eb7:	ret    0x1a17
  402eba:	xchg   esp,edx
  402ebc:	or     edi,DWORD PTR [esp+ebx*8-0x4040530c]
  402ec3:	je     0x402ec5
  402ec5:	dec    eax
  402ec6:	and    eax,0x903e6ef1
  402ecb:	das    
  402ecc:	mov    DWORD PTR es:[ebx],0x1ec18c88
  402ed3:	sahf   
  402ed4:	addr16 fwait
  402ed6:	inc    edx
  402ed7:	sbb    eax,0x64f5d8db
  402edc:	adc    bh,BYTE PTR [eax+edi*8+0x3f]
  402ee0:	jbe    0x402f02
  402ee2:	sbb    al,0xaf
  402ee4:	cmp    bh,BYTE PTR [esi-0x26]
  402ee7:	dec    ebp
  402ee8:	inc    esp
  402ee9:	lods   eax,DWORD PTR ds:[esi]
  402eea:	sub    edi,DWORD PTR [edx+0xdf3b2a8]
  402ef0:	adc    al,BYTE PTR [edx-0xf]
  402ef3:	fcmovnb st,st(1)
  402ef5:	mov    DWORD PTR [eax],0xddb48724
  402efb:	in     eax,0xec
  402efd:	add    DWORD PTR [edx-0x77c839e8],edx
  402f03:	ret    0xfc88
  402f06:	xchg   bl,ch
  402f08:	stos   DWORD PTR es:[edi],eax
  402f09:	out    0x16,eax
  402f0b:	and    edi,edx
  402f0d:	mov    edi,0xc4a32739
  402f12:	mov    eax,ds:0x63486490
  402f17:	and    ebx,DWORD PTR ds:0x44a79730
  402f1d:	inc    bl
  402f1f:	mov    WORD PTR [edi],?
  402f21:	jecxz  0x402f48
  402f23:	xor    eax,0xf0cd2b91
  402f28:	jne    0x402f46
  402f2a:	or     BYTE PTR [edx-0x60aa60c2],dl
  402f30:	inc    edx
  402f31:	in     al,0x4a
  402f33:	aad    0xed
  402f35:	loop   0x402eed
  402f37:	leave  
  402f38:	inc    edi
  402f39:	fisttp DWORD PTR [edi-0x23]
  402f3c:	lahf   
  402f3d:	clc    
  402f3e:	enter  0x43a9,0x97
  402f42:	inc    esp
  402f43:	mov    ebx,0xec99ce05
  402f48:	adc    eax,0xe5f55e5b
  402f4d:	pushf  
  402f4e:	dec    edx
  402f4f:	cmp    DWORD PTR [ebx],ecx
  402f51:	cmp    al,0xbc
  402f53:	imul   edi,edx,0x6d
  402f56:	jmp    0x3166:0x619b350b
  402f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f5e:	out    dx,eax
  402f5f:	mov    ebx,0x6b5d5c43
  402f64:	add    cl,BYTE PTR ds:[ebx-0x6a]
  402f68:	or     ebp,DWORD PTR [ebp+0x3f]
  402f6b:	xor    BYTE PTR [esi-0x5f],0x12
  402f6f:	dec    esi
  402f70:	aam    0xfa
  402f72:	(bad)
  402f76:	sub    DWORD PTR [eax+ecx*2+0x5ba56f2c],ebp
  402f7d:	jns    0x402f3c
  402f7f:	popa   
  402f80:	not    dl
  402f82:	fwait
  402f83:	xchg   edx,eax
  402f84:	mov    cl,0xce
  402f86:	cld    
  402f87:	loop   0x402fc2
  402f89:	adc    cl,BYTE PTR [ecx-0x21]
  402f8c:	xchg   DWORD PTR [ebp+0x4116cc4e],ebx
  402f92:	mov    eax,ds:0x256e76a
  402f97:	mov    bh,0x3a
  402f99:	repnz cmp BYTE PTR [ecx],al
  402f9c:	cmp    eax,0x8413fdc5
  402fa1:	call   0x7a0a:0xd3039bb
  402fa8:	(bad)  
  402faa:	cmp    al,bh
  402fac:	fs addr16 ja 0x402fb7
  402fb0:	retf   
  402fb1:	xchg   edx,eax
  402fb2:	ins    BYTE PTR es:[edi],dx
  402fb3:	push   ebp
  402fb4:	xor    BYTE PTR [esi-0x4c],0x39
  402fb8:	xchg   esp,eax
  402fb9:	les    edx,FWORD PTR ds:0x44eba9f
  402fbf:	ss int 0x1f
  402fc2:	sub    DWORD PTR [eax],esi
  402fc4:	mov    esp,0x11af9110
  402fc9:	add    eax,0xa6bbce03
  402fce:	retf   0xdbea
  402fd1:	(bad)  
  402fd2:	into   
  402fd3:	cwde   
  402fd4:	das    
  402fd5:	pop    esi
  402fd6:	retf   
  402fd7:	arpl   WORD PTR [ebp-0x1f],cx
  402fda:	or     al,0x74
  402fdc:	fisttp QWORD PTR ds:0x32cc61fa
  402fe2:	sahf   
  402fe3:	pop    es
  402fe4:	in     al,0x2a
  402fe6:	repnz cmc 
  402fe8:	imul   ebp,DWORD PTR [esi],0xa335635b
  402fee:	outs   dx,DWORD PTR ds:[esi]
  402fef:	and    dh,dh
  402ff1:	mov    ds:0xee924b0a,eax
  402ff6:	cmp    al,0xed
  402ff8:	cmp    ebx,0xffffff91
  402ffb:	test   edx,esp
  402ffd:	pop    ebp
  402ffe:	pusha  
  402fff:	xchg   esp,eax
  403000:	call   edi
  403002:	add    DWORD PTR [bx],0xdf8afc07
  403009:	sub    DWORD PTR [esi+0x60858397],edx
  40300f:	stos   DWORD PTR es:[edi],eax
  403010:	hlt    
  403011:	sub    bh,BYTE PTR [ebp+0x3d]
  403014:	mov    ecx,0xa6942b29
  403019:	add    ecx,DWORD PTR [edx]
  40301b:	xor    bl,ah
  40301d:	inc    edx
  40301e:	mov    bl,0xfa
  403020:	sub    DWORD PTR [eax-0x5950e3d4],ecx
  403026:	push   edx
  403027:	jae    0x403031
  403029:	sub    dh,ch
  40302b:	scas   al,BYTE PTR es:[edi]
  40302c:	mov    al,ds:0x3f0a2ea6
  403031:	cmp    eax,0x5f830ecf
  403036:	mov    DWORD PTR [esi+0x5b8ecca2],esi
  40303c:	pusha  
  40303d:	popa   
  40303e:	inc    ebx
  40303f:	je     0x402fdd
  403041:	(bad)  
  403042:	sbb    DWORD PTR [edx],eax
  403044:	mov    ds:0x5455dcab,eax
  403049:	cmp    eax,0x7ab76287
  40304e:	or     edx,edi
  403050:	cmp    eax,0xe49067f5
  403055:	dec    eax
  403056:	adc    al,0x1
  403058:	fsubr  DWORD PTR [edi*8-0x4c41f64b]
  40305f:	out    0xc5,eax
  403061:	adc    edx,DWORD PTR [ebp+0x1d]
  403064:	mov    ebx,0x4c056686
  403069:	adc    BYTE PTR [edx],ch
  40306b:	dec    ebp
  40306c:	dec    ecx
  40306d:	fs inc esp
  40306f:	ret    0x9f4c
  403072:	pop    edi
  403073:	enter  0xc8c8,0x45
  403077:	test   BYTE PTR [ebx+0x6f51163d],cl
  40307d:	les    ebp,FWORD PTR [eax+esi*4+0x61]
  403081:	ins    BYTE PTR es:[edi],dx
  403082:	adc    DWORD PTR [eiz*8+0x2c5c4546],edx
  403089:	cld    
  40308a:	retf   0x2ecc
  40308d:	or     bl,BYTE PTR [edx-0x6d]
  403090:	stos   DWORD PTR es:[edi],eax
  403091:	push   ds
  403092:	mov    eax,0x6967d70
  403097:	leave  
  403098:	mov    ecx,DWORD PTR [ebp-0x78]
  40309b:	outs   dx,DWORD PTR ds:[esi]
  40309c:	rcl    DWORD PTR [eax+ecx*2],0xa1
  4030a0:	mov    DWORD PTR [ebx+0x153345e8],ecx
  4030a6:	stos   DWORD PTR es:[edi],eax
  4030a7:	jl     0x4030e6
  4030a9:	xchg   esp,eax
  4030aa:	jg     0x403107
  4030ac:	cmp    eax,0xda982bc6
  4030b1:	outs   dx,DWORD PTR ds:[esi]
  4030b2:	mov    esi,0xffc057b7
  4030b7:	(bad)  [ebx]
  4030b9:	iret   
  4030ba:	jg     0x4030d8
  4030bc:	cmp    eax,0x62b0a2db
  4030c1:	pop    esi
  4030c2:	mov    bh,0x5b
  4030c4:	xchg   ebx,eax
  4030c5:	test   BYTE PTR [eax+0x5c7f7356],cl
  4030cb:	mov    WORD PTR [ecx-0x22],fs
  4030ce:	fcom   QWORD PTR [edx+0x354bcf70]
  4030d4:	hlt    
  4030d5:	fdiv   QWORD PTR [eax]
  4030d7:	pop    edx
  4030d8:	dec    ecx
  4030d9:	test   ch,ah
  4030db:	mov    ecx,0x162bba28
  4030e0:	shl    DWORD PTR [edi-0x4e],cl
  4030e3:	pop    ebx
  4030e4:	mov    BYTE PTR cs:[esi+edi*1+0x10a0a929],0x54
  4030ed:	leave  
  4030ee:	std    
  4030ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f0:	inc    esi
  4030f1:	int3   
  4030f2:	int    0x93
  4030f4:	jmp    0x4030dd
  4030f6:	pop    es
  4030f7:	in     al,dx
  4030f8:	aaa    
  4030f9:	retf   
  4030fa:	inc    edi
  4030fb:	xor    BYTE PTR [ecx-0x54],al
  4030fe:	fdiv   DWORD PTR [ebx]
  403100:	loop   0x4030f3
  403102:	test   al,0x6a
  403104:	sahf   
  403105:	fwait
  403106:	mov    bh,0x3e
  403108:	in     eax,dx
  403109:	cli    
  40310a:	ret    0x9f4b
  40310d:	sub    BYTE PTR [ecx],bh
  40310f:	leave  
  403110:	dec    ebx
  403111:	cmp    al,0xff
  403113:	int    0x85
  403115:	mov    ah,0xb9
  403117:	add    al,0x50
  403119:	popf   
  40311a:	sub    al,0x55
  40311c:	jle    0x4030fd
  40311e:	call   0x321ba063
  403123:	xor    dl,BYTE PTR ds:0xc3a5c326
  403129:	sahf   
  40312a:	adc    DWORD PTR [eax+0x2f],eax
  40312d:	test   al,0xd
  40312f:	pmaddwd mm0,QWORD PTR [esi+0x32]
  403133:	ss mov al,0xb5
  403136:	xor    eax,0xd9f33b36
  40313b:	popa   
  40313c:	jg     0x4031b7
  40313e:	jnp    0x403162
  403140:	ins    BYTE PTR es:[edi],dx
  403141:	sbb    eax,0xc74ca26a
  403146:	add    BYTE PTR [ebx-0x53],bh
  403149:	(bad)  
  40314b:	add    BYTE PTR [eax],al
  40314d:	ret    0x34c5
  403150:	add    edx,ecx
  403152:	xchg   edx,eax
  403153:	or     BYTE PTR [esi-0x4071bbf7],dh
  403159:	sub    BYTE PTR [edi+0x72d69c05],bh
  40315f:	or     DWORD PTR [ebx-0x46],edx
  403162:	fpatan 
  403164:	jae    0x403197
  403166:	mov    esi,0x5d139441
  40316b:	rol    DWORD PTR [edx-0x18],0x54
  40316f:	stc    
  403170:	xchg   esi,eax
  403171:	sub    eax,0xdf501d8
  403176:	mov    BYTE PTR [edx],bl
  403178:	push   0xffffff83
  40317a:	pop    ss
  40317b:	arpl   WORD PTR [ecx+ebx*2],dx
  40317e:	or     esp,DWORD PTR [edx+0x19]
  403181:	dec    eax
  403182:	adc    BYTE PTR [esi-0x44],ah
  403185:	dec    ecx
  403186:	mov    DWORD PTR [esi+esi*1],ebx
  403189:	js     0x4031c3
  40318b:	adc    BYTE PTR [eax+0x7961d20b],dh
  403191:	in     eax,dx
  403192:	cmp    ebx,DWORD PTR [ecx]
  403194:	sub    al,0x1d
  403196:	fs cwde 
  403198:	pop    ds
  403199:	lock adc eax,0xb3920241
  40319f:	les    ecx,FWORD PTR [esi+ecx*8-0x31]
  4031a3:	aam    0x83
  4031a5:	lahf   
  4031a6:	retf   
  4031a7:	lea    esi,[edi-0x4c]
  4031aa:	add    ebx,edi
  4031ac:	xlat   BYTE PTR ds:[ebx]
  4031ad:	inc    eax
  4031ae:	xor    BYTE PTR [ecx],dh
  4031b0:	pop    DWORD PTR [edi+0x20c02406]
  4031b6:	xchg   BYTE PTR [eax+0x4ab58fca],ah
  4031bc:	sbb    BYTE PTR [edi],0x3e
  4031bf:	pop    ebx
  4031c0:	das    
  4031c1:	and    BYTE PTR [esi],0xb9
  4031c4:	pop    eax
  4031c5:	les    edx,FWORD PTR [ebx]
  4031c7:	sbb    eax,0x2c1c177b
  4031cc:	sbb    bl,BYTE PTR [edi-0x10888a40]
  4031d2:	shl    ecx,0x5f
  4031d5:	xchg   ebx,eax
  4031d6:	jle    0x40317d
  4031d8:	out    0x50,al
  4031da:	inc    ecx
  4031db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031dc:	std    
  4031dd:	lods   eax,DWORD PTR ds:[esi]
  4031de:	inc    esi
  4031df:	pop    ebx
  4031e0:	mov    al,0x3c
  4031e2:	jmp    0x52c9:0xd9f189c5
  4031e9:	daa    
  4031ea:	mov    edi,0x6665d797
  4031ef:	mov    eax,ds:0x83c3b8e2
  4031f4:	mov    ah,BYTE PTR [ecx+0x26]
  4031f7:	xor    al,0xc7
  4031f9:	jle    0x4031d3
  4031fb:	and    eax,0x66121d2d
  403200:	add    BYTE PTR [ebp-0x3854ba18],dl
  403206:	sar    BYTE PTR [ecx],cl
  403208:	imul   eax,ebp,0x61
  40320b:	pop    eax
  40320c:	cwde   
  40320d:	xchg   edx,eax
  40320e:	and    eax,DWORD PTR [edx+ebp*8]
  403211:	inc    ebx
  403212:	out    dx,eax
  403213:	hlt    
  403214:	xchg   ecx,eax
  403215:	das    
  403216:	inc    esp
  403217:	cmp    BYTE PTR [esi-0x4ad9b3c0],dl
  40321d:	xor    DWORD PTR [esi+0x12bcd2c6],0x32690aa9
  403227:	and    BYTE PTR [ebx-0x31],al
  40322a:	outs   dx,DWORD PTR ds:[esi]
  40322b:	fist   WORD PTR [edx]
  40322d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322e:	icebp  
  40322f:	shr    BYTE PTR [ebx],cl
  403231:	fmul   st,st(1)
  403233:	shl    BYTE PTR [edi-0xf57cca4],1
  403239:	jge    0x4031e3
  40323b:	xchg   ch,bh
  40323d:	not    BYTE PTR [ebx+0x4b25a4b2]
  403243:	lods   eax,DWORD PTR ds:[esi]
  403244:	test   DWORD PTR [eax-0x1a],esp
  403247:	iret   
  403248:	adc    eax,0xa5aa6824
  40324d:	test   eax,0x376b9a43
  403252:	data16 jo 0x403283
  403255:	sub    eax,0xf5484fff
  40325a:	adc    dh,BYTE PTR [esi-0xa0dafea]
  403260:	rdmsr  
  403262:	mov    eax,es:0xcb2bdf40
  403268:	mov    al,0x91
  40326a:	je     0x40329d
  40326c:	sbb    dh,BYTE PTR ds:0x3b3aa418
  403272:	inc    ecx
  403273:	jecxz  0x40322d
  403275:	xlat   BYTE PTR ds:[ebx]
  403276:	mov    esi,0x7f921e03
  40327b:	das    
  40327c:	repnz ss (bad) 
  40327f:	arpl   WORD PTR [esi+0x489dd41f],cx
  403285:	pop    ds
  403286:	and    al,0x6
  403288:	xchg   esi,eax
  403289:	repz xor bh,BYTE PTR [edi+ebp*4-0x150ff9ea]
  403291:	jg     0x403228
  403293:	push   esi
  403294:	sub    ecx,ecx
  403296:	jmp    0x40328d
  403298:	or     al,0x2c
  40329a:	jp     0x403255
  40329c:	std    
  40329d:	into   
  40329e:	outs   dx,BYTE PTR ds:[esi]
  40329f:	adc    ch,0x3f
  4032a2:	dec    ecx
  4032a3:	pushf  
  4032a4:	pusha  
  4032a5:	xlat   BYTE PTR ds:[ebx]
  4032a6:	and    BYTE PTR [edi+0x23],ah
  4032a9:	mov    eax,ds:0xc6d31c28
  4032ae:	mov    edx,0xfb47e3cf
  4032b3:	das    
  4032b4:	ret    
  4032b5:	test   BYTE PTR ds:0x9a5b0256,0x3
  4032bc:	mov    ecx,eax
  4032be:	enter  0xa72b,0xa0
  4032c2:	pop    ecx
  4032c3:	sbb    bl,BYTE PTR [edi]
  4032c5:	lock ficomp WORD PTR [eax+0x689ac6f1]
  4032cc:	inc    edi
  4032cd:	jl     0x403304
  4032cf:	aad    0xf9
  4032d1:	mov    edi,0x33da5b76
  4032d6:	or     edx,DWORD PTR [ecx-0x66]
  4032d9:	xor    DWORD PTR [eax],eax
  4032db:	call   0x204126bb
  4032e0:	jge    0x40333e
  4032e2:	adc    DWORD PTR [ecx+esi*8-0x33],ecx
  4032e6:	hlt    
  4032e7:	mov    esi,0x10ed5f18
  4032ec:	inc    ebx
  4032ed:	add    BYTE PTR [esi],0xef
  4032f0:	pop    es
  4032f1:	inc    edi
  4032f2:	jg     0x4032c8
  4032f4:	add    eax,0x129fd804
  4032f9:	std    
  4032fa:	lods   eax,DWORD PTR ds:[esi]
  4032fb:	(bad)  [ebx]
  4032fd:	fcmovnu st,st(1)
  4032ff:	cld    
  403300:	bnd ret 0xb9f4
  403304:	js     0x403378
  403306:	or     eax,0x7d05ac3d
  40330b:	arpl   WORD PTR [eax+0x5e],dx
  40330e:	(bad)  
  40330f:	shl    eax,cl
  403311:	jo     0x403301
  403313:	jmp    0x5ec6a0e1
  403318:	sar    al,0x29
  40331b:	bound  esi,QWORD PTR [ecx]
  40331d:	inc    edi
  40331e:	sbb    BYTE PTR [ebp+eiz*4-0x23f942d6],0x2a
  403326:	lock test al,0x81
  403329:	push   ds
  40332a:	out    0x94,al
  40332c:	cmp    BYTE PTR [esi+0x0],0x71
  403330:	mov    dh,0x1a
  403332:	mov    bh,0x54
  403334:	cmc    
  403335:	jge    0x4032e2
  403337:	(bad)  
  403338:	fiadd  WORD PTR [ebp+0x152abeab]
  40333e:	jp     0x40338b
  403340:	push   ebp
  403341:	and    BYTE PTR [edx+ebx*2-0x39],bh
  403345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403346:	and    eax,0x4855ab5e
  40334b:	loopne 0x403319
  40334d:	inc    edi
  40334e:	lock test BYTE PTR [esi],0xb6
  403352:	sar    BYTE PTR [eax],1
  403354:	mov    ss,ebp
  403356:	out    dx,eax
  403357:	jae    0x403368
  403359:	out    dx,al
  40335a:	mov    eax,ds:0x8e960e9d
  40335f:	test   esp,edx
  403361:	jge    0x40334c
  403363:	sbb    dl,bl
  403365:	enter  0x4486,0xd6
  403369:	cmc    
  40336a:	jmp    0x7a4f:0x2cb1e623
  403371:	lahf   
  403372:	cmp    eax,0x9078068a
  403377:	inc    ebx
  403378:	dec    BYTE PTR [ecx]
  40337a:	lods   eax,DWORD PTR ds:[esi]
  40337b:	pop    esi
  40337c:	jo     0x4033df
  40337e:	mov    edi,0xa321a4c3
  403383:	mov    dl,0x93
  403385:	inc    edx
  403386:	fs daa 
  403388:	xor    bl,BYTE PTR [eax+0x14]
  40338b:	or     al,BYTE PTR ds:0x5fa9be07
  403391:	pop    ebp
  403392:	dec    ecx
  403393:	test   DWORD PTR [ecx+0x2ba86c32],ebp
  403399:	test   DWORD PTR ds:0x93c2193d,ecx
  40339f:	mov    ds:0x54ae0473,eax
  4033a4:	pop    eax
  4033a5:	xor    BYTE PTR [esi-0x198782c8],bl
  4033ab:	int3   
  4033ac:	mov    DWORD PTR [ecx-0x6559fb47],esp
  4033b2:	dec    ebp
  4033b3:	jl     0x4033b5
  4033b5:	cmp    BYTE PTR [ebp-0x4604fb9a],0x67
  4033bc:	sti    
  4033bd:	pop    ecx
  4033be:	mov    BYTE PTR [edx],0xb
  4033c1:	cmc    
  4033c2:	scas   al,BYTE PTR es:[edi]
  4033c3:	pop    esi
  4033c4:	neg    edi
  4033c6:	test   al,0x93
  4033c8:	repnz mov bl,0x4a
  4033cb:	pop    ss
  4033cc:	out    dx,al
  4033cd:	rcr    BYTE PTR gs:[ecx],0xae
  4033d1:	mov    ah,0x2c
  4033d3:	pcmpgtb mm2,QWORD PTR [ebx]
  4033d6:	aaa    
  4033d7:	shl    BYTE PTR [ebx+0x5f],1
  4033da:	jecxz  0x40343b
  4033dc:	into   
  4033dd:	call   0xbdab:0xf31ede41
  4033e4:	mov    esp,0x3cd970a1
  4033e9:	js     0x4033c7
  4033eb:	mov    al,0x83
  4033ed:	mov    dl,0x1f
  4033ef:	mov    eax,ds:0xbaf444eb
  4033f4:	mov    ebx,0x8096e0c1
  4033f9:	dec    eax
  4033fa:	ror    BYTE PTR [ebx-0x2d],cl
  4033fd:	push   esp
  4033fe:	popf   
  4033ff:	ins    BYTE PTR es:[di],dx
  403401:	dec    edx
  403402:	add    eax,0xd05b10a9
  403407:	add    DWORD PTR [ebx+0xb],ecx
  40340a:	ins    DWORD PTR es:[edi],dx
  40340b:	psrad  mm6,QWORD PTR [edx+eiz*2+0x0]
  403410:	sbb    ch,BYTE PTR [ebx+ecx*4]
  403413:	imul   esp,ebp,0xe3de961d
  403419:	(bad)  
  40341b:	ret    0x74d0
  40341e:	int    0x8f
  403420:	stc    
  403421:	push   ebp
  403422:	es and eax,0xa545e099
  403428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403429:	data16 mov ds:0x4051ecd9,al
  40342f:	icebp  
  403430:	mov    ebp,0x4fcae852
  403435:	clc    
  403436:	pop    esi
  403437:	loope  0x4033e0
  403439:	shl    DWORD PTR [ebp-0x66],1
  40343c:	inc    eax
  40343d:	shr    BYTE PTR [esi+0x7a14123c],0xed
  403444:	xchg   BYTE PTR [eax],ah
  403446:	cwde   
  403447:	add    al,0x77
  403449:	cmp    al,0x25
  40344b:	fwait
  40344c:	inc    ebx
  40344d:	ror    BYTE PTR [edi],1
  40344f:	dec    ebp
  403450:	mov    esi,DWORD PTR [esi-0x5d13ef8f]
  403456:	push   cs
  403457:	pushf  
  403458:	push   cs
  403459:	lahf   
  40345a:	mov    bh,0x15
  40345c:	cmp    al,0x3a
  40345f:	outs   dx,BYTE PTR ds:[esi]
  403460:	int    0xb9
  403462:	(bad)  
  403463:	int    0xf6
  403465:	pop    ebp
  403466:	loopne 0x40347a
  403468:	jno    0x403453
  40346a:	cwde   
  40346b:	xor    BYTE PTR [eax+0x61],0x30
  40346f:	stc    
  403470:	nop
  403471:	adc    al,0xba
  403473:	out    0x1b,al
  403475:	mov    esi,0x40da2bae
  40347a:	inc    ecx
  40347b:	add    al,0xd7
  40347d:	mov    edx,0xdbedb1ab
  403482:	cdq    
  403483:	mov    ds:0xf06ef63,eax
  403488:	lea    ebp,[esi]
  40348a:	inc    ebx
  40348b:	fild   QWORD PTR [esi+0x4c9314d7]
  403491:	pop    edx
  403492:	(bad)  
  403493:	fwait
  403494:	mov    ?,WORD PTR [esi-0x2e6443bf]
  40349a:	sahf   
  40349b:	icebp  
  40349c:	enter  0x6966,0x6d
  4034a0:	fistp  QWORD PTR [ecx-0x413bb38a]
  4034a6:	je     0x40346d
  4034a8:	jb     0x4034c0
  4034aa:	imul   edx,DWORD PTR [edx],0xb7840473
  4034b0:	pop    ebx
  4034b1:	ss leave 
  4034b3:	push   eax
  4034b4:	jne    0x403463
  4034b6:	mov    bl,0x89
  4034b8:	cli    
  4034b9:	ja     0x40348e
  4034bb:	gs ret 
  4034bd:	mov    esp,0xb585c440
  4034c2:	mul    DWORD PTR [ebp-0x7c]
  4034c5:	repz dec edx
  4034c7:	mov    ah,0xa1
  4034c9:	test   BYTE PTR [ecx-0x29],al
  4034cc:	sub    bl,dl
  4034ce:	repz pusha 
  4034d0:	mov    ds:0x90fe7123,eax
  4034d5:	rcl    BYTE PTR [ebp+edi*1+0xe],1
  4034d9:	jbe    0x403530
  4034db:	jb     0x4034f7
  4034dd:	mov    al,ds:0x353ac0b5
  4034e2:	icebp  
  4034e3:	enter  0xc09e,0xd0
  4034e7:	and    DWORD PTR [esi-0xe],0x4fb67b56
  4034ee:	cdq    
  4034ef:	ins    DWORD PTR es:[edi],dx
  4034f0:	ja     0x403493
  4034f2:	ss in  al,0x86
  4034f5:	cmp    al,0x35
  4034f7:	pop    eax
  4034f8:	dec    edx
  4034f9:	nop
  4034fa:	mov    eax,0x90236e03
  4034ff:	sub    al,0x2
  403501:	push   es
  403502:	cmp    DWORD PTR [eax+ebx*2],eax
  403505:	jp     0x4034a1
  403507:	jmp    0x14166827
  40350c:	aaa    
  40350d:	ins    BYTE PTR es:[edi],dx
  40350e:	or     esp,ebx
  403510:	iret   
  403511:	inc    eax
  403512:	jne    0x4034ce
  403514:	xchg   esp,eax
  403515:	push   0xb3ef212c
  40351a:	sbb    al,0xd8
  40351c:	push   0xffffff86
  40351e:	leave  
  40351f:	fsubr  st,st(4)
  403521:	(bad)  
  403522:	aad    0x3a
  403524:	pop    es
  403525:	fisub  DWORD PTR [edx-0x3d]
  403528:	out    dx,eax
  403529:	xor    al,0x97
  40352b:	push   ebp
  40352c:	inc    esp
  40352d:	in     al,dx
  40352e:	or     bh,ch
  403530:	pop    ebp
  403531:	or     BYTE PTR [ebx],al
  403533:	push   ebx
  403534:	mov    ebx,0xa1b1b799
  403539:	push   ss
  40353a:	mov    ah,0x34
  40353c:	xor    BYTE PTR [ecx+0x14813330],0xfb
  403543:	bound  eax,QWORD PTR [edx]
  403545:	cmp    eax,0x550b080a
  40354a:	push   cs
  40354b:	shl    DWORD PTR [ecx-0x48],0xe7
  40354f:	pop    ebp
  403550:	aaa    
  403551:	outs   dx,BYTE PTR ds:[esi]
  403552:	aad    0x24
  403554:	(bad)  
  403555:	adc    eax,0xe396a9ca
  40355a:	int3   
  40355b:	lock mov ecx,0x824e4cfe
  403561:	inc    bp
  403563:	dec    ebx
  403564:	fistp  QWORD PTR [esi-0x4324fbc2]
  40356a:	or     DWORD PTR [edx-0x3e],edi
  40356d:	ins    DWORD PTR es:[edi],dx
  40356e:	xor    al,0x73
  403570:	dec    esp
  403571:	popa   
  403572:	test   eax,0xd4fe7b46
  403577:	fcompp 
  403579:	sti    
  40357a:	out    dx,eax
  40357b:	in     al,dx
  40357c:	pop    ds
  40357d:	shl    DWORD PTR [ebp-0x3a],cl
  403580:	lahf   
  403581:	idiv   BYTE PTR [esp+ecx*2+0x66011ad8]
  403588:	sub    eax,0x1b5d262e
  40358d:	lds    edi,FWORD PTR [ecx-0x1d]
  403590:	inc    edi
  403591:	xor    al,0xea
  403593:	fdivr  DWORD PTR [edx+0x59]
  403596:	jno    0x4035a9
  403598:	push   ebp
  403599:	pushf  
  40359a:	fst    QWORD PTR [ecx+0x30]
  40359d:	inc    esi
  40359e:	push   ecx
  40359f:	fwait
  4035a0:	mov    ebx,0x72416c4a
  4035a5:	pusha  
  4035a6:	aaa    
  4035a7:	out    dx,eax
  4035a8:	shl    DWORD PTR [edx+0x1078b11d],0xb8
  4035af:	dec    ebp
  4035b0:	fs (bad) 
  4035b2:	sbb    eax,0xebe859ea
  4035b7:	xor    DWORD PTR [eax],esp
  4035b9:	mov    bh,0x5f
  4035bb:	mov    bl,0xea
  4035bd:	dec    esp
  4035be:	cmp    al,0xab
  4035c0:	aas    
  4035c1:	je     0x40362e
  4035c3:	xchg   edx,eax
  4035c4:	xor    al,0xc5
  4035c6:	push   cs
  4035c7:	fmul   QWORD PTR [ebx]
  4035c9:	push   edx
  4035ca:	ss and eax,0x8264e930
  4035d0:	cld    
  4035d1:	inc    edi
  4035d2:	adc    DWORD PTR [ebx],eax
  4035d4:	cmc    
  4035d5:	mov    al,ds:0x8b81fa79
  4035da:	dec    ebp
  4035db:	repz mov ecx,0x5fa58c59
  4035e1:	sbb    ch,BYTE PTR [edi+ebx*2]
  4035e4:	mov    eax,0xdff2bb2
  4035e9:	js     0x40361d
  4035eb:	cwde   
  4035ec:	mov    edx,0xd46248e4
  4035f1:	inc    esi
  4035f2:	(bad)  [ecx]
  4035f4:	jno    0x40366b
  4035f6:	or     eax,0x9503c847
  4035fb:	xchg   ebp,eax
  4035fc:	xchg   ebx,eax
  4035fd:	or     DWORD PTR [edx],eax
  4035ff:	mov    edi,0x493de030
  403604:	push   esi
  403605:	push   cs
  403606:	stc    
  403607:	jo     0x4035da
  403609:	mov    al,ds:0x5b1ce37f
  40360e:	cli    
  40360f:	sbb    edx,DWORD PTR [ebx]
  403611:	stos   BYTE PTR es:[edi],al
  403612:	mov    WORD PTR [eax],ds
  403614:	test   eax,0xe3e93d15
  403619:	pop    edi
  40361a:	sahf   
  40361b:	int    0xf5
  40361d:	test   al,0x7a
  40361f:	sub    eax,0xa379d0a7
  403624:	and    BYTE PTR [ecx],dh
  403626:	cli    
  403627:	popa   
  403628:	in     eax,0x9f
  40362a:	jnp    0x40366f
  40362c:	jle    0x403640
  40362e:	hlt    
  40362f:	arpl   di,sp
  403631:	mov    ebp,0x95ec402b
  403636:	inc    esi
  403637:	cmp    dh,BYTE PTR [eax]
  403639:	add    dh,BYTE PTR [eax]
  40363b:	xchg   ecx,eax
  40363c:	stos   DWORD PTR es:[edi],eax
  40363d:	xor    eax,0xb5d25cd3
  403642:	pop    ebp
  403643:	dec    edx
  403644:	int3   
  403645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403646:	xchg   ecx,eax
  403647:	out    0xcd,eax
  403649:	jb     0x4035f6
  40364b:	or     DWORD PTR [edx+0x74],ebp
  40364e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40364f:	es gs jnp 0x4035ef
  403653:	push   0x4a202f85
  403658:	mov    ebx,0xc11dae76
  40365d:	js     0x40369d
  40365f:	retf   
  403660:	das    
  403661:	jle    0x403658
  403663:	mov    cl,0x9e
  403665:	in     al,0xf6
  403667:	adc    eax,esp
  403669:	ss xchg sp,ax
  40366c:	jmp    0x403645
  40366e:	mov    esi,0x150b1e08
  403673:	push   ebp
  403674:	das    
  403675:	rcr    DWORD PTR [eax+0x63],cl
  403678:	cld    
  403679:	add    al,BYTE PTR fs:[ebp-0x570426]
  403680:	add    DWORD PTR [esp+edx*2],ecx
  403683:	mov    eax,DWORD PTR [ecx-0x6b7d5cdc]
  403689:	xor    BYTE PTR [esi-0x37],0x58
  40368d:	dec    DWORD PTR [edx-0x37]
  403690:	sub    DWORD PTR [edi+0x62],esp
  403693:	loopne 0x4036b4
  403695:	push   edi
  403696:	cmp    BYTE PTR [ebp-0x17555efc],bh
  40369c:	xchg   esp,eax
  40369d:	(bad)  
  40369e:	xchg   edi,eax
  40369f:	lock mov edx,0x307672ce
  4036a5:	call   0x83ab9965
  4036aa:	mov    bh,0xee
  4036ac:	jp     0x4036ea
  4036ae:	jecxz  0x4036a4
  4036b0:	in     al,0x8d
  4036b2:	fld    st(0)
  4036b4:	icebp  
  4036b5:	out    dx,al
  4036b6:	adc    al,0x21
  4036b8:	sub    DWORD PTR [esi+0x4ac7f2f8],esp
  4036be:	scas   eax,DWORD PTR es:[edi]
  4036bf:	push   eax
  4036c0:	pop    ss
  4036c1:	cmc    
  4036c2:	jo     0x4036a2
  4036c4:	ins    DWORD PTR es:[edi],dx
  4036c5:	pop    esp
  4036c6:	pop    ds
  4036c7:	add    DWORD PTR [edi+0x63],0x5f
  4036cb:	iret   
  4036cc:	mov    esi,0xde088693
  4036d1:	cmc    
  4036d2:	push   cs
  4036d3:	inc    esi
  4036d4:	or     DWORD PTR [ecx+0x28f9226c],edi
  4036da:	fidiv  WORD PTR [edx]
  4036dc:	and    BYTE PTR [ebx],dh
  4036de:	sub    al,0x2b
  4036e1:	mov    ds:0x908b6c2d,eax
  4036e6:	pop    ecx
  4036e7:	push   esp
  4036e8:	and    BYTE PTR [eax],0x4
  4036eb:	mov    bl,0x94
  4036ed:	leave  
  4036ee:	push   ebp
  4036ef:	mov    ah,0xab
  4036f1:	js     0x4036ae
  4036f3:	and    al,0x2a
  4036f5:	pusha  
  4036f6:	jg     0x4036bb
  4036f8:	ins    DWORD PTR es:[edi],dx
  4036f9:	pop    esi
  4036fa:	push   esp
  4036fb:	mov    ds:0x2beb6d24,eax
  403700:	mov    ds:0x7ef7a85f,al
  403705:	into   
  403706:	add    edx,DWORD PTR [ecx]
  403708:	push   eax
  403709:	jp     0x40370c
  40370b:	cmp    BYTE PTR [eax],dh
  40370d:	ins    DWORD PTR es:[edi],dx
  40370e:	aas    
  40370f:	fcom   DWORD PTR [ecx+0x46d95ef4]
  403715:	cs test al,0x61
  403718:	ja     0x403784
  40371a:	fiadd  DWORD PTR [esi]
  40371c:	mov    ebp,0xe36f6cf8
  403721:	ror    DWORD PTR [ecx-0x38],cl
  403724:	rcr    BYTE PTR [eax-0x54],0xe
  403728:	je     0x4036b1
  40372a:	out    dx,al
  40372b:	xchg   ah,dh
  40372d:	sub    DWORD PTR [eax+0x62f53750],esp
  403733:	outs   dx,DWORD PTR ds:[esi]
  403734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403735:	jne    0x4036cb
  403737:	push   ebx
  403738:	adc    eax,0x9ac76e91
  40373d:	or     BYTE PTR [ecx+eax*8],al
  403740:	ins    BYTE PTR es:[edi],dx
  403741:	in     al,dx
  403742:	and    al,0x5a
  403744:	pop    ds
  403745:	aam    0x52
  403747:	imul   ebp,DWORD PTR [ebx+0x25],0xcb0f8842
  40374e:	cmp    ah,BYTE PTR [edi+0x37]
  403751:	adc    DWORD PTR [edx],ebp
  403753:	cmp    eax,0xcceb1f4b
  403758:	sbb    esi,DWORD PTR [esi]
  40375a:	fadd   DWORD PTR [eax+0x48cae651]
  403760:	and    al,0x88
  403762:	out    dx,eax
  403763:	sub    edi,DWORD PTR [esi]
  403765:	mov    eax,ds:0x89ea4605
  40376a:	dec    ebp
  40376b:	and    eax,0x2aedc07b
  403770:	jmp    0x403764
  403772:	jmp    0x1ba0:0xd011dcf5
  403779:	loop   0x40371a
  40377b:	jns    0x4037f0
  40377d:	push   ecx
  40377e:	popf   
  40377f:	xor    eax,0x1f619408
  403784:	stos   DWORD PTR es:[edi],eax
  403785:	dec    esp
  403786:	and    BYTE PTR [ecx],bl
  403788:	not    DWORD PTR [esi-0x26]
  40378b:	out    0xd4,al
  40378d:	or     eax,0x3aec2b8b
  403792:	fs xchg esp,eax
  403794:	sub    eax,0x2dfb3e4a
  403799:	xchg   BYTE PTR [ecx],bh
  40379b:	test   esp,esi
  40379d:	leave  
  40379e:	jnp    0x403758
  4037a0:	popf   
  4037a1:	cmp    al,0x65
  4037a3:	mov    bh,0x9b
  4037a5:	stos   BYTE PTR es:[edi],al
  4037a6:	push   0x7ed79064
  4037ab:	shl    DWORD PTR [eax-0x6f],cl
  4037ae:	and    DWORD PTR [eax+0x61],ebx
  4037b1:	(bad)  
  4037b2:	je     0x403752
  4037b4:	out    dx,al
  4037b5:	ret    0xd059
  4037b8:	sub    BYTE PTR [ebp+0x10f5225c],ch
  4037be:	add    esp,ebp
  4037c0:	sub    ecx,DWORD PTR [ebx+0xe2566c7]
  4037c6:	psraw  mm5,QWORD PTR [ebp+0x56c28b88]
  4037cd:	(bad)  
  4037ce:	out    0xc7,eax
  4037d0:	pop    esi
  4037d1:	les    edx,FWORD PTR [ebx-0x73807175]
  4037d7:	ficomp DWORD PTR [esi+0x3f]
  4037da:	sub    eax,0x57fe92f8
  4037df:	add    BYTE PTR [eax-0x15],ah
  4037e2:	dec    esi
  4037e3:	sub    BYTE PTR [edi+0x6ec77ad6],0xca
  4037ea:	ret    
  4037eb:	jns    0x40383e
  4037ed:	(bad)  
  4037ee:	ins    BYTE PTR es:[edi],dx
  4037ef:	iret   
  4037f0:	imul   ecx,DWORD PTR [edx+ebx*2+0x2c16c677],0xf165c9db
  4037fb:	int3   
  4037fc:	stos   DWORD PTR es:[edi],eax
  4037fd:	jbe    0x40381c
  4037ff:	and    al,0xa5
  403801:	popa   
  403802:	pop    ebx
  403803:	outs   dx,DWORD PTR ds:[esi]
  403804:	or     BYTE PTR [ebp+0x0],bl
  403807:	xchg   DWORD PTR [eax-0x5b210116],ecx
  40380d:	outs   dx,BYTE PTR ds:[esi]
  40380e:	add    eax,0x7ca7d2e9
  403813:	xchg   esi,eax
  403814:	test   DWORD PTR [ecx],ebx
  403816:	fwait
  403817:	and    al,BYTE PTR [ebx+0x2df58be9]
  40381d:	lods   eax,DWORD PTR ds:[esi]
  40381e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40381f:	jb     0x403833
  403821:	les    ecx,FWORD PTR [ebp+0x7c361172]
  403827:	nop
  403828:	popf   
  403829:	cmp    DWORD PTR [esi-0x9f0b47f],ecx
  40382f:	sahf   
  403830:	test   ebp,edi
  403832:	jmp    DWORD PTR [eax-0x742c9c03]
  403838:	mov    bh,0x94
  40383a:	(bad)  
  40383c:	add    eax,0xb51d085a
  403841:	xlat   BYTE PTR ds:[ebx]
  403842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403843:	es fs push 0x7e27a9d5
  40384a:	jmp    0x4037f8
  40384c:	jle    0x4037fd
  40384e:	push   es
  40384f:	push   cs
  403850:	dec    eax
  403851:	mov    al,ds:0xad56f212
  403856:	mov    ebx,0xfaf4159b
  40385b:	xor    ebp,DWORD PTR [edi-0x35]
  40385e:	xor    eax,0xe80fb50b
  403863:	xor    al,0xbf
  403865:	sub    edi,DWORD PTR [edx]
  403867:	mov    eax,0x9ad89337
  40386c:	inc    esp
  40386d:	mov    BYTE PTR [ebp+0x3],0x8
  403871:	mov    ch,0x95
  403873:	jmp    0x403819
  403875:	fsubr  QWORD PTR [ebx+eax*4+0x3]
  403879:	clc    
  40387a:	pop    esp
  40387b:	arpl   WORD PTR [ebx+0x5f805506],bx
  403881:	pop    ds
  403882:	into   
  403883:	(bad)  
  403884:	inc    esp
  403885:	ret    0x1fa6
  403888:	sbb    eax,edx
  40388a:	and    BYTE PTR [ebx],dh
  40388c:	call   0x7b27:0xbad099c1
  403893:	jmp    0x3dfa:0xc152002
  40389a:	and    DWORD PTR [ecx+0x74dc9335],0xb4a8a4ef
  4038a4:	pop    ds
  4038a5:	lea    ebp,[ebx+eax*1]
  4038a8:	stc    
  4038a9:	push   cs
  4038aa:	into   
  4038ab:	ins    DWORD PTR es:[edi],dx
  4038ac:	xchg   esp,eax
  4038ad:	(bad)  
  4038ae:	or     al,0x61
  4038b0:	(bad)  
  4038b1:	daa    
  4038b2:	fidivr WORD PTR [ecx-0x17]
  4038b5:	adc    ah,BYTE PTR [ebp+0x1b03856b]
  4038bb:	jmp    0xd736cbb0
  4038c0:	je     0x4038b0
  4038c2:	mov    ah,0xa3
  4038c4:	daa    
  4038c5:	push   cs
  4038c6:	jle    0x4038b4
  4038c8:	xor    ebp,DWORD PTR [esi+0x6c6f5d24]
  4038ce:	sub    ch,BYTE PTR [ecx+esi*1-0x43]
  4038d2:	cmc    
  4038d3:	sub    eax,0xdb2e38dd
  4038d8:	jl     0x4038a8
  4038da:	mov    al,ds:0x8c57ecb8
  4038df:	fisubr WORD PTR [ecx+0x59]
  4038e2:	ja     0x4038e6
  4038e4:	in     eax,0x28
  4038e6:	test   al,0x23
  4038e8:	add    al,0x80
  4038ea:	icebp  
  4038eb:	shr    DWORD PTR [eax],1
  4038ed:	sub    al,0xb3
  4038ef:	loopne 0x403926
  4038f1:	and    al,0x1e
  4038f3:	push   es
  4038f4:	xor    al,0x5a
  4038f6:	or     eax,0x4e59b7d1
  4038fb:	sub    dh,BYTE PTR [ebp-0x5b]
  4038fe:	adc    edx,0x8
  403901:	in     al,dx
  403902:	les    ebp,FWORD PTR [eax+0x48]
  403905:	outs   dx,DWORD PTR ds:[esi]
  403906:	jae    0x40392e
  403908:	sbb    eax,0x7a61e3b9
  40390d:	cld    
  40390e:	jp     0x40389b
  403910:	fsub   st,st(1)
  403912:	imul   eax,edx,0x851fdc9b
  403918:	mov    bh,0x43
  40391a:	mov    al,0x1e
  40391c:	cmp    DWORD PTR [eax],edi
  40391e:	in     eax,dx
  40391f:	and    ch,0x21
  403922:	(bad)  
  403923:	adc    cl,BYTE PTR [edi+0x6c637546]
  403929:	push   edx
  40392a:	sub    DWORD PTR [edi+0x6a],ebp
  40392d:	mov    dl,0x22
  40392f:	sub    eax,0xf8901e6b
  403934:	sbb    esi,DWORD PTR [ecx+0x39]
  403937:	loopne 0x4038dc
  403939:	les    eax,FWORD PTR [edi+0x3fddd606]
  40393f:	mov    cl,0x22
  403941:	jmp    0x9734a9bb
  403946:	or     DWORD PTR [eax-0x5c9b8313],esp
  40394c:	ja     0x40398f
  40394e:	xchg   ebp,eax
  40394f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403950:	hlt    
  403951:	sahf   
  403952:	pop    ds
  403953:	mov    al,ds:0xbc012e07
  403958:	iret   
  403959:	(bad)  
  40395a:	xchg   ebp,eax
  40395b:	test   bh,al
  40395d:	ds mov ebx,0xc11aaf52
  403963:	push   0x3ebda8c1
  403968:	sub    ebp,0x5c
  40396b:	or     DWORD PTR [esi],0x5eb11133
  403971:	mov    ?,WORD PTR [edx-0x37]
  403974:	inc    edi
  403975:	sub    eax,0xd669eac9
  40397a:	pop    ss
  40397b:	neg    BYTE PTR [ecx]
  40397d:	add    eax,0xfb03c297
  403982:	pop    ebp
  403983:	or     al,0x92
  403985:	in     eax,dx
  403986:	mov    ecx,0x8fd37cb0
  40398b:	repz (bad) 
  40398d:	loop   0x403985
  40398f:	arpl   di,di
  403991:	sbb    eax,0x5f7b906e
  403996:	daa    
  403997:	xchg   esi,eax
  403998:	mov    ebp,0x55f028b4
  40399d:	repz (bad) 
  40399f:	sub    ah,ah
  4039a1:	sub    ebp,DWORD PTR [ecx+0x14d83d13]
  4039a7:	jle    0x403a14
  4039a9:	test   BYTE PTR [ebp-0x18e4f8fc],bl
  4039af:	cmc    
  4039b0:	mov    eax,0xcb042902
  4039b5:	push   ebp
  4039b6:	or     esp,esp
  4039b8:	ins    BYTE PTR es:[edi],dx
  4039b9:	jmp    0x600f60f0
  4039be:	push   cs
  4039bf:	sub    dh,BYTE PTR [edx]
  4039c1:	ss jmp 0x1b14a7db
  4039c7:	jg     0x4039a8
  4039c9:	out    0xba,eax
  4039cb:	jnp    0x4039f9
  4039cd:	leave  
  4039ce:	jmp    0x4fa8b428
  4039d3:	mov    dh,0xea
  4039d5:	popa   
  4039d6:	cdq    
  4039d7:	scas   eax,DWORD PTR es:[edi]
  4039d8:	into   
  4039d9:	adc    eax,0x5d51182
  4039de:	pop    esp
  4039df:	mov    al,0x1
  4039e1:	mov    bh,0x75
  4039e3:	lds    edi,FWORD PTR [edi]
  4039e5:	jmp    0xc40a:0xa5a9589
  4039ec:	test   al,0x1e
  4039ee:	add    BYTE PTR [ebp+0x432a4dc9],ch
  4039f4:	clc    
  4039f5:	shl    DWORD PTR [ebx-0x5c87b57a],cl
  4039fb:	xchg   DWORD PTR [edx],edi
  4039fd:	dec    esp
  4039fe:	mov    cl,0x26
  403a00:	inc    eax
  403a01:	ins    BYTE PTR es:[edi],dx
  403a02:	fstp   st(1)
  403a04:	in     eax,0x99
  403a06:	scas   eax,DWORD PTR es:[edi]
  403a07:	std    
  403a08:	pushf  
  403a09:	dec    edx
  403a0a:	push   0xb
  403a0c:	into   
  403a0d:	(bad)  [edi-0x278e4cc9]
  403a13:	loope  0x403a4b
  403a15:	xor    BYTE PTR [ebx+0x28],0x3b
  403a19:	out    0xe2,al
  403a1b:	stc    
  403a1c:	sbb    BYTE PTR [eax+0x983f2ac],ah
  403a22:	and    al,0xed
  403a24:	ja     0x4039b2
  403a26:	jmp    0x157f:0x19b8772e
  403a2d:	xor    BYTE PTR [ebx],dh
  403a2f:	hlt    
  403a30:	mov    edi,0xe3666db8
  403a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a36:	bound  ebp,QWORD PTR [ecx-0x22c9faff]
  403a3c:	punpcklbw mm7,mm1
  403a3f:	add    ch,BYTE PTR [ebp+0x35]
  403a42:	loopne 0x403a84
  403a44:	fcomp  DWORD PTR [ebp-0x3c]
  403a47:	mov    bh,0xb2
  403a49:	ret    0xc945
  403a4c:	push   ds
  403a4d:	push   edx
  403a4e:	icebp  
  403a4f:	xor    al,BYTE PTR [ebp+0x5b3877b9]
  403a55:	mov    esi,0x3d3462fa
  403a5a:	dec    esi
  403a5b:	jge    0x403a3d
  403a5d:	mov    ebx,0xc26bb6b1
  403a62:	test   BYTE PTR [ebx],bh
  403a64:	xchg   edx,eax
  403a65:	pop    ds
  403a66:	add    DWORD PTR [edi],0xffffff89
  403a69:	mov    esp,DWORD PTR [edi-0x5c2bac82]
  403a6f:	mov    ch,0x76
  403a71:	pop    ds
  403a72:	mov    dh,0xab
  403a74:	push   edi
  403a75:	fcmovnu st,st(3)
  403a77:	ja     0x403a2c
  403a79:	mov    al,ds:0x8128d399
  403a7e:	out    dx,eax
  403a7f:	mov    ecx,0xc50f70b4
  403a84:	or     al,0x2f
  403a86:	sub    DWORD PTR [edi],ebx
  403a88:	fimul  DWORD PTR [esi-0x69ad98cc]
  403a8e:	xchg   edx,eax
  403a8f:	je     0x403af8
  403a91:	push   0x8f2480f0
  403a96:	not    DWORD PTR [esi*4-0x73c1f3a4]
  403a9d:	mov    DWORD PTR [ebp-0x4d],eax
  403aa0:	adc    BYTE PTR [esi+0x150201f],0xc5
  403aa7:	jmp    0x8561:0x16ee9d3e
  403aae:	iret   
  403aaf:	sub    bl,BYTE PTR [ebp+0x2fe25198]
  403ab5:	int    0x5a
  403ab7:	dec    ecx
  403ab8:	jg     0x403b16
  403aba:	xlat   BYTE PTR ds:[ebx]
  403abb:	mov    ecx,0x9a214faf
  403ac0:	outs   dx,BYTE PTR ds:[esi]
  403ac1:	push   0x3af2ed42
  403ac6:	call   0xf83c:0x3a0c4d3c
  403acd:	(bad)  
  403ace:	mov    edx,0xa7cc5054
  403ad3:	lods   al,BYTE PTR ds:[esi]
  403ad4:	inc    edi
  403ad5:	cmp    BYTE PTR [eax+ebp*1-0x4f],bh
  403ad9:	add    ecx,DWORD PTR [esi+ecx*4+0xf]
  403add:	sub    eax,0xa454f67b
  403ae2:	mul    ebp
  403ae4:	div    dl
  403ae6:	hlt    
  403ae7:	or     al,0xd1
  403ae9:	mov    DWORD PTR [ebx],0xdb35abfc
  403aef:	call   0x6820:0xf8f5b120
  403af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af7:	inc    ecx
  403af8:	popa   
  403af9:	leave  
  403afa:	idiv   DWORD PTR [esp+eax*8-0x2f]
  403afe:	jg     0x403abd
  403b00:	xchg   ebp,eax
  403b01:	fcomp  st(0)
  403b03:	in     eax,dx
  403b04:	ret    0x44d8
  403b07:	mov    ecx,0xf700b2e2
  403b0c:	mov    al,ds:0xb8a49453
  403b11:	mov    dh,0x46
  403b13:	pop    ss
  403b14:	jecxz  0x403a99
  403b16:	(bad)  
  403b17:	and    DWORD PTR [esi+ebp*8+0x12],eax
  403b1b:	cmp    al,0x11
  403b1d:	aas    
  403b1e:	add    al,0x5d
  403b20:	mov    cl,0xd4
  403b22:	cmp    edi,DWORD PTR [ebp-0x39]
  403b25:	popa   
  403b26:	shl    eax,0x59
  403b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b2b:	fcomp  DWORD PTR [ebx]
  403b2d:	gs adc al,0x76
  403b30:	push   esi
  403b31:	mov    ebx,cs
  403b33:	pop    edi
  403b34:	xor    edx,ebx
  403b36:	in     al,0x28
  403b38:	loopne 0x403bb1
  403b3a:	ja     0x403ad9
  403b3c:	and    BYTE PTR [esi],cl
  403b3e:	inc    esi
  403b3f:	or     bh,BYTE PTR [ebp-0x51]
  403b42:	cli    
  403b43:	bound  edx,QWORD PTR [edx]
  403b45:	out    dx,al
  403b46:	or     ecx,DWORD PTR [esi-0x428a88]
  403b4c:	mov    edi,0x6a1998b2
  403b51:	cmp    eax,0x4d92e43e
  403b56:	pop    ecx
  403b57:	(bad)  
  403b58:	adc    ecx,ebx
  403b5a:	pusha  
  403b5b:	fdivp  st(7),st
  403b5d:	mov    dl,0x56
  403b5f:	jb     0x403b6d
  403b61:	mov    eax,0x3dcc223f
  403b66:	lock mov bl,0x2d
  403b69:	loopne 0x403b7c
  403b6b:	std    
  403b6c:	add    dl,BYTE PTR [edx-0x6a751e8a]
  403b72:	and    BYTE PTR [ecx+esi*4+0x3a],dh
  403b76:	cs sub al,0xb7
  403b79:	mov    ds,WORD PTR [edx+0x10]
  403b7c:	rcr    BYTE PTR [ebx+eax*8+0x643037e8],1
  403b83:	cli    
  403b84:	jo     0x403b24
  403b86:	cld    
  403b87:	popa   
  403b88:	sub    ebx,0x193674ad
  403b8e:	sub    al,0x10
  403b90:	int    0xb6
  403b92:	sub    ebp,DWORD PTR [edx]
  403b94:	rcl    BYTE PTR [edi+0x7b],cl
  403b97:	push   edx
  403b98:	retf   
  403b99:	pushf  
  403b9a:	ret    0x54fe
  403b9d:	mov    eax,0xd9d90249
  403ba2:	push   es
  403ba3:	xchg   DWORD PTR [edi+0x5b],edx
  403ba6:	cli    
  403ba7:	lock ss dec eax
  403baa:	or     ch,al
  403bac:	inc    esp
  403bad:	cmp    dl,BYTE PTR ds:0x93ae8314
  403bb3:	push   ss
  403bb4:	pop    edi
  403bb5:	in     eax,0xa4
  403bb7:	jns    0x403c1b
  403bb9:	xor    eax,0xde8a575b
  403bbe:	inc    ebx
  403bbf:	inc    esp
  403bc0:	or     al,0xa1
  403bc2:	cli    
  403bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bc4:	and    ah,BYTE PTR [ebp-0x6ac02401]
  403bca:	not    ah
  403bcc:	std    
  403bcd:	daa    
  403bce:	fld    TBYTE PTR [edi+eiz*2-0x506da38d]
  403bd5:	dec    edx
  403bd6:	adc    cl,ah
  403bd8:	jl     0x403c31
  403bda:	add    dh,BYTE PTR [ebp+esi*8+0x16]
  403bde:	mov    ebx,es
  403be0:	(bad)  
  403be1:	jmp    0xd53a:0xbf662c18
  403be8:	fbstp  TBYTE PTR [ebx+0x3fdd0c92]
  403bee:	sti    
  403bef:	(bad)  
  403bf0:	(bad)  
  403bf1:	mov    ebp,0xfef5b0dc
  403bf6:	loopne 0x403c4d
  403bf8:	add    DWORD PTR [edi],eax
  403bfa:	jmp    0x8831:0x7071fc0
  403c01:	pop    esi
  403c02:	stos   DWORD PTR es:[edi],eax
  403c03:	sahf   
  403c04:	test   DWORD PTR [esi+0x274ec42c],edi
  403c0a:	adc    al,0xd0
  403c0c:	addr16 push ss
  403c0e:	push   ecx
  403c0f:	(bad)  
  403c10:	ins    DWORD PTR es:[edi],dx
  403c11:	pop    ebx
  403c12:	or     dh,BYTE PTR [ecx-0x20f6aea3]
  403c18:	push   0x37
  403c1a:	add    DWORD PTR [esi+eiz*4],esi
  403c1d:	sar    edi,cl
  403c1f:	mov    esp,0x4d7ee50b
  403c24:	add    eax,0x1a710333
  403c29:	and    DWORD PTR [edx+0x5eb8b4a9],ebx
  403c2f:	sar    ebx,0x45
  403c32:	push   edx
  403c33:	xchg   edx,eax
  403c34:	shl    esi,cl
  403c36:	mov    bl,0xbc
  403c38:	or     bh,BYTE PTR [ebx]
  403c3a:	mov    edx,0x80621181
  403c3f:	pop    eax
  403c40:	pop    ss
  403c41:	in     al,0xfe
  403c43:	inc    ecx
  403c44:	cdq    
  403c45:	aaa    
  403c46:	sub    BYTE PTR [ebx+ebp*1+0x665a77f9],ch
  403c4d:	les    esi,FWORD PTR ds:0xb179a804
  403c53:	xor    BYTE PTR [esi],al
  403c55:	lock add DWORD PTR [edi-0x48],edx
  403c59:	loope  0x403c19
  403c5b:	shl    al,0x62
  403c5e:	xchg   edx,eax
  403c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c60:	jns    0x403c2a
  403c62:	jne    0x403c6e
  403c64:	sub    eax,0x4304eb2d
  403c69:	test   esp,edi
  403c6b:	mov    edx,0xda88127
  403c70:	std    
  403c71:	mov    bl,0x9f
  403c73:	rcl    dl,0x42
  403c76:	cmp    BYTE PTR [ecx-0x7bf74b6b],dl
  403c7c:	or     bl,BYTE PTR [edx]
  403c7e:	stc    
  403c7f:	or     bl,BYTE PTR [eax]
  403c81:	push   DWORD PTR [ecx+0x42]
  403c84:	xor    BYTE PTR [esi-0x65],al
  403c87:	sub    ecx,DWORD PTR [edi+0x395a2166]
  403c8d:	pop    ss
  403c8e:	ins    BYTE PTR es:[edi],dx
  403c8f:	das    
  403c90:	dec    ecx
  403c91:	dec    ebx
  403c92:	jne    0x403c81
  403c94:	cmp    al,0x72
  403c96:	or     al,0xa2
  403c98:	jb     0x403c58
  403c9a:	lods   al,BYTE PTR ds:[esi]
  403c9b:	lea    ebp,[ebx]
  403c9d:	xor    eax,0x6da65cbd
  403ca2:	cld    
  403ca3:	xor    BYTE PTR [esi+eiz*8],cl
  403ca6:	clc    
  403ca7:	mov    bl,0xda
  403ca9:	xchg   ebx,eax
  403caa:	inc    ecx
  403cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cac:	stc    
  403cad:	and    al,0xce
  403caf:	xor    esp,edx
  403cb1:	inc    eax
  403cb2:	xchg   edx,eax
  403cb3:	call   0x42a4:0x37fea0ad
  403cba:	cmp    edx,eax
  403cbc:	mov    ecx,0x11eef2b7
  403cc1:	loope  0x403c81
  403cc3:	xchg   ebx,eax
  403cc4:	ins    DWORD PTR es:[edi],dx
  403cc5:	enter  0x8b6,0xaa
  403cc9:	push   ecx
  403cca:	or     al,BYTE PTR [esi]
  403ccc:	loopne 0x403d30
  403cce:	jecxz  0x403d1f
  403cd0:	fld    QWORD PTR [ecx-0x3e]
  403cd3:	or     BYTE PTR [edi+0x3a42e4ae],bh
  403cd9:	push   esp
  403cda:	sysret 
  403cdc:	mov    bh,0x4e
  403cde:	scas   al,BYTE PTR es:[edi]
  403cdf:	fwait
  403ce0:	inc    DWORD PTR [edx]
  403ce2:	jo     0x403d02
  403ce4:	stos   BYTE PTR es:[edi],al
  403ce5:	jnp    0x403d3e
  403ce7:	cwde   
  403ce8:	or     DWORD PTR es:[ebx+0x3633c417],esp
  403cef:	stc    
  403cf0:	jb     0x403d2f
  403cf2:	jo     0x403c77
  403cf4:	sbb    eax,ebx
  403cf6:	dec    esp
  403cf7:	je     0x403d43
  403cf9:	js     0x403d67
  403cfb:	mov    al,BYTE PTR ds:0x90d30ae1
  403d01:	sbb    al,0xd3
  403d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d04:	inc    ebx
  403d05:	nop
  403d06:	(bad)  [edx]
  403d08:	mov    al,cl
  403d0a:	or     DWORD PTR [ecx],0x68783066
  403d10:	pop    edx
  403d11:	pop    eax
  403d12:	repnz int 0x13
  403d15:	pop    edi
  403d16:	push   es
  403d17:	and    ebp,DWORD PTR [eax]
  403d19:	out    dx,eax
  403d1a:	mov    ebx,ss
  403d1c:	sti    
  403d1d:	fs xchg edx,eax
  403d1f:	(bad)  
  403d21:	iret   
  403d22:	out    0xb4,al
  403d24:	sbb    eax,0x75b783ee
  403d29:	scas   eax,DWORD PTR es:[edi]
  403d2a:	sub    edx,DWORD PTR [eax+0x5d]
  403d2d:	push   cs
  403d2e:	jbe    0x403d58
  403d30:	or     ah,ch
  403d32:	xlat   BYTE PTR ds:[ebx]
  403d33:	lods   al,BYTE PTR ds:[esi]
  403d34:	push   esp
  403d35:	lods   al,BYTE PTR ds:[esi]
  403d36:	pusha  
  403d37:	and    BYTE PTR [edx-0x74],dl
  403d3a:	mov    dl,0x5a
  403d3c:	and    BYTE PTR [eax+0x471f151d],0x9c
  403d43:	or     BYTE PTR [edx+0x140c5188],ah
  403d49:	jns    0x403ccd
  403d4b:	sbb    eax,0xc917c5b9
  403d50:	not    ecx
  403d52:	imul   edx,ebx
  403d55:	mov    ebx,DWORD PTR [ebp-0x8]
  403d58:	mov    BYTE PTR [edx+ebx*1],al
  403d5b:	mov    eax,DWORD PTR [ebp-0x30]
  403d5e:	mov    edx,DWORD PTR [ebp-0xc]
  403d61:	xor    eax,esi
  403d63:	add    eax,edi
  403d65:	jmp    0x4060d5
  403d6a:	scas   al,BYTE PTR es:[edi]
  403d6b:	pushf  
  403d6c:	and    al,0xa
  403d6e:	add    al,0x82
  403d70:	test   BYTE PTR [eax+eiz*4+0x16488d78],bl
  403d77:	inc    ebp
  403d78:	mov    bl,0xd4
  403d7a:	das    
  403d7b:	pop    edi
  403d7c:	jp     0x403df8
  403d7e:	das    
  403d7f:	pop    edi
  403d80:	jp     0x403dfc
  403d82:	mov    edx,0x7a449eba
  403d87:	ds inc edx
  403d89:	mov    al,0x45
  403d8b:	adc    BYTE PTR [ecx-0x3622e2e7],dl
  403d91:	into   
  403d92:	sub    al,0xc2
  403d94:	loop   0x403daa
  403d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d97:	jnp    0x403dfa
  403d99:	mov    edx,cs
  403d9b:	pop    edi
  403d9c:	push   ecx
  403d9d:	and    BYTE PTR [esi-0x3cf2e42],0xdc
  403da4:	mov    esp,0xa548cf74
  403da9:	ins    BYTE PTR es:[edi],dx
  403daa:	cwde   
  403dab:	mov    bl,0x41
  403dad:	scas   al,BYTE PTR es:[edi]
  403dae:	popf   
  403daf:	cmc    
  403db0:	jecxz  0x403da5
  403db2:	dec    ebx
  403db3:	adc    eax,0xa6e8440b
  403db8:	mov    cl,0x7b
  403dba:	std    
  403dbb:	sub    eax,0x768748f
  403dc0:	cld    
  403dc1:	push   ds
  403dc2:	mov    ah,0x9
  403dc4:	mov    ecx,DWORD PTR [edx]
  403dc6:	add    eax,0x674e9a77
  403dcb:	xor    eax,0xe94ae2ca
  403dd0:	repz push esp
  403dd2:	mov    ah,0xc3
  403dd4:	(bad)  
  403dd5:	and    DWORD PTR [edx],ecx
  403dd7:	ret    
  403dd8:	inc    ebx
  403dd9:	cmp    ch,bh
  403ddb:	in     al,dx
  403ddc:	loope  0x403d9a
  403dde:	cmp    edx,DWORD PTR [ebx]
  403de0:	and    eax,0x5af03009
  403de5:	leave  
  403de6:	es nop
  403de8:	sub    edx,DWORD PTR [ebp-0x52]
  403deb:	mov    ch,0x92
  403ded:	in     eax,0x24
  403def:	mov    es,WORD PTR [ecx]
  403df1:	or     dh,BYTE PTR [esp+ebp*2-0xb]
  403df5:	xor    dh,0x5d
  403df8:	call   0x4cdd45fd
  403dfd:	add    BYTE PTR [eax],bh
  403dff:	iret   
  403e00:	cs daa 
  403e02:	jns    0x403db3
  403e04:	jp     0x403dd0
  403e06:	jo     0x403dd2
  403e08:	and    edx,edi
  403e0a:	pop    edi
  403e0b:	push   0xffffffe8
  403e0d:	lods   al,BYTE PTR ds:[esi]
  403e0e:	inc    esi
  403e0f:	mov    eax,0xa67d3f52
  403e14:	and    DWORD PTR ds:0x1256096f,0x30
  403e1b:	ja     0x403e5e
  403e1d:	pop    ecx
  403e1e:	sub    BYTE PTR ss:[esi-0x45025735],ah
  403e25:	mov    edx,0xb69ac85d
  403e2a:	cld    
  403e2b:	cmc    
  403e2c:	cmp    dl,cl
  403e2e:	cli    
  403e2f:	mov    ah,0x65
  403e31:	stc    
  403e32:	gs (bad) 
  403e34:	mov    esp,0x362418f4
  403e39:	sub    edx,DWORD PTR [esp+ebx*4]
  403e3c:	dec    edi
  403e3d:	push   ds
  403e3e:	and    eax,0x8b8ad727
  403e43:	addr16 aaa 
  403e45:	jmp    0x48c029cd
  403e4a:	std    
  403e4b:	sub    BYTE PTR [ebp+edx*2-0x6ef36e33],al
  403e52:	sub    eax,0x8a2f6452
  403e57:	xchg   dl,dh
  403e59:	pop    edi
  403e5a:	sbb    ch,dl
  403e5c:	pop    es
  403e5d:	mov    dl,0x7a
  403e5f:	je     0x403e74
  403e61:	push   0xfffffff4
  403e63:	mov    BYTE PTR [edi+ebp*1+0x501ebcfa],al
  403e6a:	push   edi
  403e6b:	jns    0x403e93
  403e6d:	xor    ebp,DWORD PTR [edx]
  403e6f:	call   0x20b8:0x85a698a6
  403e76:	lds    edi,FWORD PTR [ebx+0x34]
  403e79:	imul   esi,DWORD PTR [eax+eax*1+0x6de27ca7],0x3e
  403e81:	push   ss
  403e82:	dec    ecx
  403e83:	sbb    al,0xdd
  403e85:	into   
  403e86:	icebp  
  403e87:	cmp    eax,0xe148b28a
  403e8c:	(bad)  
  403e8d:	jl     0x403ebf
  403e8f:	out    dx,al
  403e90:	rcl    DWORD PTR [ebp-0x43],0xb4
  403e94:	es retf 
  403e96:	jp     0x403e83
  403e98:	test   DWORD PTR [edx],0xcab366f3
  403e9e:	mov    bl,0x98
  403ea0:	push   ebx
  403ea1:	and    DWORD PTR [ecx-0x3d],esi
  403ea4:	add    esi,DWORD PTR [esi+0x1fcd79bf]
  403eaa:	add    DWORD PTR [ebx],ebx
  403eac:	xor    bh,BYTE PTR [edi+0x5df7fdcb]
  403eb2:	push   ebp
  403eb3:	gs jnp 0x403e82
  403eb6:	sbb    eax,0xc29056a
  403ebb:	adc    al,0x76
  403ebd:	sub    dl,BYTE PTR [eax+ebx*1-0x3f8407e9]
  403ec4:	sub    esp,ecx
  403ec6:	cmp    esp,DWORD PTR [edx+0x28fd3525]
  403ecc:	adc    eax,0x48aa6a4a
  403ed1:	pop    ecx
  403ed2:	ds std 
  403ed4:	xchg   DWORD PTR [eax+0x5b],edi
  403ed7:	cmc    
  403ed8:	lods   eax,DWORD PTR ds:[esi]
  403ed9:	retf   
  403eda:	iret   
  403edb:	cmpps  xmm6,XMMWORD PTR [eax],0x67
  403edf:	mov    ebp,0x6d471a02
  403ee4:	sbb    DWORD PTR [esi+0x6f],0xfffffff2
  403ee8:	loopne 0x403f24
  403eea:	scas   eax,DWORD PTR es:[edi]
  403eeb:	js     0x403e9a
  403eed:	sti    
  403eee:	and    eax,0xbde3c445
  403ef3:	stc    
  403ef4:	jno    0x403e95
  403ef6:	xchg   ebp,eax
  403ef7:	aad    0x8d
  403ef9:	adc    al,0xe4
  403efb:	popa   
  403efc:	les    esi,FWORD PTR [ebp-0x2b7c42f2]
  403f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f03:	repz pop esp
  403f05:	sub    BYTE PTR ds:0xfedc9ffa,cl
  403f0b:	inc    edi
  403f0c:	pop    ds
  403f0d:	mov    dh,0x6
  403f0f:	sub    al,0x9b
  403f11:	int    0x99
  403f13:	sbb    DWORD PTR [ecx-0x2f2f825b],edx
  403f19:	xor    eax,0xb0938a13
  403f1e:	mov    ecx,edx
  403f20:	mov    eax,0xa0099b8d
  403f25:	ja     0x403fa1
  403f27:	outs   dx,DWORD PTR ds:[esi]
  403f28:	push   ecx
  403f29:	ret    
  403f2a:	xchg   ebx,eax
  403f2b:	dec    esp
  403f2c:	push   es
  403f2d:	fld    QWORD PTR [ebp+0x7b8d7066]
  403f33:	icebp  
  403f34:	adc    esi,DWORD PTR [edi+0x8b95962]
  403f3a:	xchg   edx,eax
  403f3b:	popf   
  403f3c:	out    0x3d,al
  403f3e:	and    ah,BYTE PTR [ebp-0x92a895d]
  403f44:	xchg   edi,eax
  403f45:	jo     0x403f2f
  403f47:	jnp    0x403f34
  403f49:	stos   BYTE PTR es:[edi],al
  403f4a:	outs   dx,DWORD PTR ds:[esi]
  403f4b:	sets   bl
  403f4e:	pop    edi
  403f4f:	xchg   ebx,eax
  403f50:	push   esi
  403f51:	pop    edx
  403f52:	mov    eax,0x16d494d
  403f57:	pusha  
  403f58:	stos   BYTE PTR es:[edi],al
  403f59:	cmp    dh,BYTE PTR ds:0x38590e46
  403f5f:	sbb    al,0x46
  403f61:	je     0x403fd8
  403f63:	jmp    0x403f36
  403f65:	ja     0x403f06
  403f67:	mov    ch,BYTE PTR [eax]
  403f69:	ja     0x403f0b
  403f6b:	jns    0x403f33
  403f6d:	mov    ch,0xcf
  403f6f:	mov    dh,0x8a
  403f71:	add    BYTE PTR [edx],dh
  403f73:	mov    bh,0x89
  403f75:	call   0xfce6d291
  403f7a:	pop    esp
  403f7b:	dec    esi
  403f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f7d:	adc    esi,DWORD PTR [eax+eax*2]
  403f80:	gs aad 0x29
  403f83:	outs   dx,DWORD PTR ds:[esi]
  403f84:	cli    
  403f85:	es push ebp
  403f87:	test   eax,0xf77aab5c
  403f8c:	icebp  
  403f8d:	js     0x403f81
  403f8f:	lods   eax,DWORD PTR ds:[esi]
  403f90:	fcom   QWORD PTR [esi-0xea7c108]
  403f96:	inc    eax
  403f97:	add    esp,edx
  403f99:	cdq    
  403f9a:	ficom  WORD PTR [ebp+0x2802a35f]
  403fa0:	repz push 0x2
  403fa3:	mov    ebx,0xf0bd1c43
  403fa8:	shl    DWORD PTR [ecx+0x79],cl
  403fab:	sbb    eax,0x36409639
  403fb0:	or     DWORD PTR [ebp+0x6a70b197],edx
  403fb6:	out    dx,al
  403fb7:	and    al,0xc0
  403fb9:	mov    bl,0xbd
  403fbb:	lock scas al,BYTE PTR es:[edi]
  403fbd:	(bad)  
  403fbf:	in     al,dx
  403fc0:	aad    0xcb
  403fc2:	and    al,BYTE PTR [ebp-0x65d9ed60]
  403fc8:	pop    es
  403fc9:	cmc    
  403fca:	sbb    al,0x13
  403fcc:	push   es
  403fcd:	jb     0x404031
  403fcf:	mov    ebp,0xa1b2b24a
  403fd4:	call   0x8d11:0x1c853dbd
  403fdb:	in     eax,0x82
  403fdd:	shl    DWORD PTR [ebx-0x7fd06eaa],cl
  403fe3:	and    eax,0x53aea885
  403fe8:	or     ecx,DWORD PTR [edx+0x210696df]
  403fee:	jns    0x40403a
  403ff0:	imul   esi,DWORD PTR [esi+0x76],0x27997c3b
  403ff7:	and    al,0x2a
  403ff9:	add    BYTE PTR [edx],dl
  403ffb:	sbb    al,0x55
  403ffd:	dec    esp
  403ffe:	inc    esi
  403fff:	jo     0x403fb6
  404001:	fwait
  404002:	inc    ebp
  404003:	mov    ecx,0xc05df461
  404008:	pop    es
  404009:	sbb    dl,BYTE PTR [eax+0x5f]
  40400c:	xor    DWORD PTR [ebp+esi*2-0xc85da86],ecx
  404013:	out    0xe7,eax
  404015:	mov    al,ds:0xc82252cb
  40401a:	and    edx,eax
  40401c:	sbb    dl,BYTE PTR [edi]
  40401e:	mov    ebx,0x52f555e1
  404023:	stos   BYTE PTR es:[edi],al
  404024:	scas   eax,DWORD PTR es:[edi]
  404025:	ds dec esp
  404027:	sbb    al,0x50
  404029:	push   0x3b9c7ad
  40402e:	xor    BYTE PTR [ebx],dh
  404030:	in     al,0x12
  404032:	pop    eax
  404033:	sub    al,0xa7
  404035:	xchg   DWORD PTR [esi+0x77815d71],edi
  40403b:	cmp    ecx,edx
  40403d:	stc    
  40403e:	cmp    DWORD PTR [eax-0xc211de5],esi
  404044:	inc    ebx
  404045:	mov    ebx,0x3d9a43d
  40404a:	aas    
  40404b:	shl    DWORD PTR [ecx*2+0x92bb933],0xd1
  404053:	sub    BYTE PTR [esi+eax*1+0x7b],dl
  404057:	fbstp  TBYTE PTR [ebx-0x5a]
  40405a:	rol    DWORD PTR [eax+0x2be91d26],0x23
  404061:	and    eax,0xc927e9d5
  404066:	jns    0x404010
  404068:	imul   ecx,eax,0xffffffc4
  40406b:	jne    0x4040a4
  40406d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40406e:	mov    cl,0xc
  404070:	push   edi
  404071:	mov    eax,DWORD PTR [esi-0x6d]
  404074:	leave  
  404075:	jo     0x40406a
  404077:	arpl   dx,si
  404079:	shl    DWORD PTR [edi+0x48],cl
  40407c:	leave  
  40407d:	push   cs
  40407e:	xor    esp,DWORD PTR [esp+edx*1-0x21c72b61]
  404085:	aaa    
  404086:	mov    ds:0x3eec1010,al
  40408b:	mov    BYTE PTR [ecx],al
  40408d:	mov    cl,0x66
  40408f:	(bad)  
  404090:	aaa    
  404091:	adc    BYTE PTR [ebp+0x4a32d849],bl
  404097:	leave  
  404098:	jnp    0x4040c4
  40409a:	or     al,0x63
  40409c:	jns    0x4040e5
  40409e:	lahf   
  40409f:	arpl   WORD PTR [ebp+ebp*1+0x7249fc75],ax
  4040a6:	pusha  
  4040a7:	jmp    0xa9d7:0xa996dce8
  4040ae:	hlt    
  4040af:	(bad)  
  4040b0:	jne    0x4040d7
  4040b2:	dec    edx
  4040b3:	and    DWORD PTR [edx+edi*1-0x45],edx
  4040b7:	(bad)  
  4040b8:	mov    WORD PTR [ebp+0x5a],fs
  4040bb:	xchg   esi,eax
  4040bc:	adc    eax,0x6c4f99f1
  4040c1:	pop    esi
  4040c2:	pusha  
  4040c3:	adc    ecx,DWORD PTR [ebx]
  4040c5:	out    0x10,eax
  4040c7:	fcomp  DWORD PTR [edx+ebx*4]
  4040ca:	dec    ebx
  4040cb:	mov    esi,0x714e2e79
  4040d0:	push   ebx
  4040d1:	sbb    ebp,DWORD PTR [eax]
  4040d3:	ret    
  4040d4:	ficomp WORD PTR [edi+0x4a75ee54]
  4040da:	xor    ah,cl
  4040dc:	icebp  
  4040dd:	jg     0x40407d
  4040df:	data16 mov cl,dh
  4040e2:	out    dx,al
  4040e3:	fsub   DWORD PTR [ecx]
  4040e5:	(bad)  
  4040e6:	int3   
  4040e7:	push   ecx
  4040e8:	test   eax,0xc78aaf65
  4040ed:	cs and esi,edi
  4040f0:	adc    BYTE PTR [edi+0x27],0x9a
  4040f4:	inc    edi
  4040f5:	daa    
  4040f6:	or     edi,DWORD PTR [ebx+0x55377118]
  4040fc:	retf   
  4040fd:	in     al,0xa0
  4040ff:	xchg   ebp,eax
  404100:	inc    esi
  404101:	sti    
  404102:	adc    esp,DWORD PTR [esi-0x24]
  404105:	xchg   DWORD PTR [esi-0x26],ebp
  404108:	test   bl,ah
  40410a:	pop    sp
  40410c:	aam    0xa5
  40410e:	push   es
  40410f:	(bad)  
  404110:	aaa    
  404111:	(bad)  
  404112:	mov    eax,ds:0xfe5d22b4
  404117:	mov    DWORD PTR ds:0xa39355eb,esi
  40411d:	or     edx,DWORD PTR [esp+esi*4+0x5f684477]
  404124:	out    dx,al
  404125:	fbld   TBYTE PTR [ebx]
  404127:	pop    ebx
  404128:	xchg   edx,eax
  404129:	dec    edi
  40412a:	mov    bh,0xdb
  40412c:	mov    dh,0xb6
  40412e:	rcl    bl,1
  404130:	xor    ebx,esi
  404132:	add    ah,BYTE PTR ds:0x94835337
  404138:	dec    edi
  404139:	loop   0x404159
  40413b:	and    eax,0x4c1d00d
  404140:	pop    eax
  404141:	jg     0x4040dc
  404143:	push   0xffffffd3
  404145:	fistp  DWORD PTR [ebx]
  404147:	add    eax,0x15051bc7
  40414c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40414d:	xchg   DWORD PTR [ebp-0x2e],esp
  404150:	xor    BYTE PTR [ecx],dh
  404152:	pop    edx
  404153:	mov    bl,0xec
  404155:	lea    edi,[esi+0x64c3982]
  40415b:	and    BYTE PTR [ebx],cl
  40415d:	and    BYTE PTR [ecx+0x79],cl
  404160:	ret    0x8451
  404163:	dec    ecx
  404164:	sbb    al,0xba
  404166:	test   DWORD PTR [eax],esp
  404168:	ja     0x404198
  40416a:	jp     0x40418d
  40416c:	les    ecx,FWORD PTR [esi]
  40416e:	loopne 0x404106
  404170:	pop    ds
  404171:	jmp    0x4552ef96
  404176:	(bad)
  404179:	pop    esi
  40417a:	mov    ch,0xa7
  40417c:	out    0x65,al
  40417e:	adc    bl,BYTE PTR [ebx+0x4c]
  404181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404182:	mov    ds:0x7970a081,eax
  404187:	adc    BYTE PTR [ebx],0x28
  40418a:	inc    edi
  40418b:	div    BYTE PTR [ebp+0x7f]
  40418e:	rcr    DWORD PTR [ebx+0x28],1
  404191:	test   al,0x1d
  404193:	dec    esp
  404194:	mov    ds:0xf50b796,al
  404199:	pop    ebp
  40419a:	je     0x4041e5
  40419c:	or     al,0xe0
  40419e:	cmp    eax,0xdaff9ad0
  4041a3:	sub    DWORD PTR [ebx-0x281558c3],eax
  4041a9:	inc    esi
  4041aa:	test   al,0x9d
  4041ac:	stos   BYTE PTR es:[edi],al
  4041ad:	xchg   esp,eax
  4041ae:	popa   
  4041af:	in     eax,dx
  4041b0:	jp     0x40419a
  4041b2:	push   0xffffffec
  4041b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b5:	push   ecx
  4041b6:	jae    0x4041c1
  4041b8:	adc    BYTE PTR [esi+esi*4+0x6d3b7213],ah
  4041bf:	rcl    ecx,1
  4041c1:	sub    al,0x7c
  4041c3:	cmp    eax,DWORD PTR [edx+0x66]
  4041c6:	cs mov ebx,0xb70f4ca2
  4041cc:	or     bl,ch
  4041ce:	jmp    0x73bbffe8
  4041d3:	xchg   esp,eax
  4041d4:	dec    ecx
  4041d5:	xchg   DWORD PTR [ebx-0x24],edi
  4041d8:	dec    esp
  4041d9:	pusha  
  4041da:	and    BYTE PTR [eax+ecx*8],cl
  4041dd:	ffree  st(0)
  4041df:	neg    DWORD PTR [edx+0x3]
  4041e2:	ret    
  4041e3:	je     0x40422e
  4041e5:	int    0x76
  4041e7:	jbe    0x404178
  4041e9:	sub    edi,DWORD PTR [eax-0x629cfeae]
  4041ef:	mov    ds:0xb141aac3,eax
  4041f4:	jmp    0x40418b
  4041f6:	js     0x404192
  4041f8:	shl    eax,cl
  4041fa:	mov    bh,0xc7
  4041fc:	jl     0xdca974df
  404202:	std    
  404203:	mov    al,ds:0x732b327d
  404208:	es mov ah,0x21
  40420b:	mov    ecx,0x6a726bf
  404210:	popf   
  404211:	out    dx,al
  404212:	sbb    DWORD PTR [ebx],ebp
  404214:	xchg   esi,eax
  404215:	sahf   
  404216:	dec    ecx
  404217:	add    eax,0x56764c96
  40421c:	mov    BYTE PTR [esi],0x5e
  40421f:	js     0x404251
  404221:	out    dx,eax
  404222:	dec    DWORD PTR [edi+0xe568c15]
  404228:	dec    ecx
  404229:	shl    DWORD PTR [esi+0x2f],0x4b
  40422d:	ret    0x1125
  404230:	pusha  
  404231:	lock push 0x1c3ddc14
  404237:	arpl   WORD PTR [eax-0x76],bp
  40423a:	ror    DWORD PTR [ebx-0x60af22a6],0x49
  404241:	call   0x9cf6666d
  404246:	jnp    0x404299
  404248:	sub    al,0x8a
  40424a:	mov    edx,0x338deb60
  40424f:	xchg   edx,eax
  404250:	sbb    DWORD PTR [eax],eax
  404252:	bnd jns 0x404292
  404255:	add    eax,esi
  404257:	fst    DWORD PTR [esi+eax*1-0x2cc0a053]
  40425e:	test   BYTE PTR [esi],dh
  404260:	dec    ebx
  404261:	inc    ebx
  404262:	sbb    ah,bl
  404264:	push   ebp
  404265:	add    bh,bl
  404267:	cmp    BYTE PTR [eax+0x2c5f4be],dh
  40426d:	pop    ss
  40426e:	pop    eax
  40426f:	xchg   BYTE PTR [ebp-0x7a13cb20],dl
  404275:	inc    esp
  404276:	test   BYTE PTR [eax],ch
  404278:	jne    0x404260
  40427a:	xor    DWORD PTR [esi],edx
  40427c:	or     BYTE PTR ds:0x1f4ecbcd,cl
  404282:	push   0xffffffa9
  404284:	mov    esp,0x3b7b1178
  404289:	cmp    bl,BYTE PTR [eax-0x3397f428]
  40428f:	fcmovnu st,st(4)
  404291:	jp     0x4042ea
  404293:	fistp  DWORD PTR [edx+0x92489a8]
  404299:	cmc    
  40429a:	pusha  
  40429b:	mov    edx,0x586654a
  4042a0:	pop    ebp
  4042a1:	into   
  4042a2:	xchg   esi,eax
  4042a3:	outs   dx,DWORD PTR ds:[esi]
  4042a4:	mov    esp,0x8d4e07fc
  4042a9:	clc    
  4042aa:	mov    al,ds:0xfb616d34
  4042af:	bound  esp,QWORD PTR [esi]
  4042b1:	mov    edi,0x88828e78
  4042b6:	push   ss
  4042b7:	rol    BYTE PTR [eax+0x74a98306],1
  4042bd:	mov    esp,esp
  4042bf:	pusha  
  4042c0:	xor    al,0xea
  4042c2:	xchg   edi,eax
  4042c3:	or     eax,0x52e7272d
  4042c8:	add    edi,DWORD PTR [ebp-0x1b39af73]
  4042ce:	mov    BYTE PTR [edi-0x2a77e833],ah
  4042d4:	cmp    al,0xb
  4042d6:	test   DWORD PTR [ecx+0x6f],0x44db053f
  4042dd:	clc    
  4042de:	int    0x80
  4042e0:	inc    esi
  4042e1:	dec    esi
  4042e2:	loop   0x4042f7
  4042e4:	jne    0x404281
  4042e6:	adc    DWORD PTR [ecx+ebp*1],eax
  4042e9:	push   0x35
  4042eb:	mov    bh,0xcc
  4042ed:	ud0    edx,DWORD PTR [esi-0x362df6bf]
  4042f4:	push   ecx
  4042f5:	scas   al,BYTE PTR es:[edi]
  4042f6:	mov    ds:0x97299f66,al
  4042fb:	sub    ecx,edi
  4042fd:	scas   eax,DWORD PTR es:[edi]
  4042fe:	das    
  4042ff:	or     al,0xb0
  404301:	inc    edx
  404302:	repnz push esi
  404304:	hlt    
  404305:	out    dx,al
  404306:	jbe    0x4042c3
  404308:	pushf  
  404309:	inc    esi
  40430a:	mov    al,ds:0x6882ce13
  40430f:	sub    ebx,edx
  404311:	pop    eax
  404312:	aas    
  404313:	pop    esp
  404314:	fcomi  st,st(1)
  404316:	mov    bl,bl
  404318:	dec    ebx
  404319:	pop    eax
  40431a:	cmc    
  40431b:	jne    0x404307
  40431d:	sti    
  40431e:	cld    
  40431f:	push   edx
  404320:	xchg   ebx,eax
  404321:	jp     0x4042fd
  404323:	push   esi
  404324:	pop    edi
  404325:	aam    0xc5
  404327:	sbb    BYTE PTR [ebp-0x16],dl
  40432a:	hlt    
  40432b:	data16 jno 0x40430c
  40432e:	pushf  
  40432f:	push   esp
  404330:	xor    al,0xb7
  404332:	jle    0x4042ed
  404334:	xor    esp,DWORD PTR [edx-0x64]
  404337:	fild   QWORD PTR [ecx]
  404339:	shl    DWORD PTR [eax-0x74],0xe5
  40433d:	popa   
  40433e:	inc    esi
  40433f:	in     al,dx
  404340:	mov    esp,0xa6964d05
  404345:	add    edx,DWORD PTR [esi+0x1c55c0cc]
  40434b:	sbb    eax,0xdeb2af6b
  404350:	add    eax,0xd17a1117
  404355:	inc    ebp
  404356:	(bad)  
  404357:	(bad)  
  404358:	sahf   
  404359:	adc    DWORD PTR [edi+ecx*2-0x6c],esp
  40435d:	mov    eax,ds:0x7cd78da5
  404362:	inc    ebx
  404363:	xchg   ecx,eax
  404364:	or     BYTE PTR [ebx],dh
  404366:	xor    esi,DWORD PTR [ebp+edx*1-0x2]
  40436a:	stos   DWORD PTR es:[edi],eax
  40436b:	test   al,0xbd
  40436d:	push   cs
  40436e:	scas   al,BYTE PTR es:[edi]
  40436f:	adc    DWORD PTR [ebp-0x26],edi
  404372:	adc    DWORD PTR [ebx+0x56],esp
  404375:	dec    ebx
  404376:	inc    DWORD PTR [edi+0x41]
  404379:	pop    ebp
  40437a:	ret    0x1bd5
  40437d:	push   esp
  40437e:	lods   eax,DWORD PTR ds:[esi]
  40437f:	test   eax,0xe520eb4c
  404384:	repz jno 0x404371
  404387:	inc    ebx
  404388:	scas   eax,DWORD PTR es:[edi]
  404389:	stc    
  40438a:	mov    esi,0x26fc3727
  40438f:	mov    ebx,0x9b81758
  404394:	test   DWORD PTR [edi],eax
  404396:	or     dh,BYTE PTR [edi-0x58]
  404399:	cdq    
  40439a:	mov    cl,0xab
  40439c:	cmp    DWORD PTR [edi+0x7],ecx
  40439f:	add    DWORD PTR [ecx+0x1037aec0],edi
  4043a5:	ss loopne 0x4043e7
  4043a8:	cmp    BYTE PTR [esi+0x31],ch
  4043ab:	xchg   ecx,eax
  4043ac:	outs   dx,BYTE PTR ds:[esi]
  4043ad:	out    0x44,al
  4043af:	(bad)  
  4043b1:	ss push edx
  4043b3:	outs   dx,DWORD PTR ds:[esi]
  4043b4:	pusha  
  4043b5:	mov    eax,DWORD PTR [edi+0x71]
  4043b8:	push   esi
  4043b9:	inc    cx
  4043bb:	push   ebx
  4043bc:	sbb    eax,0xcb122bfb
  4043c1:	sub    DWORD PTR [ebx+ecx*2],0x9972e11
  4043c8:	jo     0x404441
  4043ca:	std    
  4043cb:	scas   eax,DWORD PTR es:[edi]
  4043cc:	or     bl,BYTE PTR [ebx+0x631e5063]
  4043d2:	out    0x4f,eax
  4043d4:	aam    0xb0
  4043d6:	shr    DWORD PTR [ebx-0x1a],1
  4043d9:	xchg   DWORD PTR [ebx],esi
  4043db:	jno    0x4043bf
  4043dd:	test   DWORD PTR [ebp-0x72],ecx
  4043e0:	xlat   BYTE PTR ds:[ebx]
  4043e1:	mov    esp,0x1c490ec3
  4043e6:	rcr    DWORD PTR [ebx],0x51
  4043e9:	sub    eax,0xb8f1ef30
  4043ee:	ret    
  4043ef:	pusha  
  4043f0:	add    al,0xc3
  4043f2:	sub    eax,DWORD PTR [esp+esi*2-0x70]
  4043f6:	jmp    0x40437c
  4043f8:	push   0x58
  4043fa:	lahf   
  4043fb:	int3   
  4043fc:	dec    edx
  4043fd:	(bad)  
  4043fe:	or     eax,0x700a5544
  404403:	icebp  
  404404:	in     eax,0x37
  404406:	retf   
  404407:	mov    dl,0xd7
  404409:	cmc    
  40440a:	or     al,0xec
  40440c:	dec    eax
  40440d:	fwait
  40440e:	sbb    BYTE PTR [esi],bl
  404410:	sahf   
  404411:	push   ebp
  404412:	hlt    
  404413:	xchg   BYTE PTR [ecx+0x9589eda],bh
  404419:	xchg   BYTE PTR [ecx+0x3a],dh
  40441c:	push   ecx
  40441d:	hlt    
  40441e:	xchg   esi,eax
  40441f:	dec    esp
  404420:	in     al,dx
  404421:	xor    BYTE PTR [esp+edi*4-0x165dbc29],bh
  404428:	shl    BYTE PTR [esi-0x13],cl
  40442b:	xor    eax,0xb1c49688
  404430:	inc    eax
  404431:	gs pop es
  404433:	fsub   st(0),st
  404435:	adc    DWORD PTR ds:0x1b4b0859,eax
  40443b:	mov    eax,ds:0x8ab737f1
  404440:	cwde   
  404441:	or     al,0x52
  404443:	xchg   edx,eax
  404444:	add    eax,0x7f94d642
  404449:	js     0x404442
  40444b:	test   DWORD PTR [ebx+0x4c9f057d],ecx
  404451:	fidiv  DWORD PTR [ebp-0x34]
  404454:	addr16 in al,0x83
  404457:	mov    dh,BYTE PTR [esi]
  404459:	sbb    ecx,DWORD PTR [edi]
  40445b:	xor    BYTE PTR [ebp+0x55],cl
  40445e:	mov    ds:0xc6c1e9c,al
  404463:	mov    esp,0x36d0c7ee
  404468:	pop    esp
  404469:	ins    DWORD PTR es:[edi],dx
  40446a:	push   esp
  40446b:	iret   
  40446c:	sub    esi,DWORD PTR [edx]
  40446e:	cmp    DWORD PTR [eax+0xd],ebp
  404471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404472:	xchg   ebx,esp
  404474:	stc    
  404475:	dec    ecx
  404476:	in     eax,dx
  404477:	outs   dx,BYTE PTR ds:[esi]
  404478:	hlt    
  404479:	xchg   ecx,eax
  40447a:	mov    al,ds:0xec23f9f3
  40447f:	or     ebp,DWORD PTR ds:0x3b9f6f5f
  404485:	sahf   
  404486:	xchg   ebx,eax
  404487:	push   ecx
  404488:	daa    
  404489:	cmp    al,BYTE PTR [esi+ecx*2+0xa]
  40448d:	push   ebx
  40448e:	cmp    al,0xe7
  404490:	add    al,0xf3
  404492:	aad    0x30
  404494:	cmp    esp,ecx
  404496:	sbb    bl,BYTE PTR [edx]
  404498:	cmp    BYTE PTR [edi+0x21],bh
  40449b:	ja     0x4044fc
  40449d:	or     eax,0xdc801fdf
  4044a2:	in     al,dx
  4044a3:	test   eax,0xa7d14afa
  4044a8:	mov    ch,0xc
  4044aa:	or     dh,BYTE PTR [edx-0x69]
  4044ad:	add    edi,DWORD PTR [eax-0x59]
  4044b0:	mov    ds:0xd29ed3f7,al
  4044b5:	cmp    eax,0x55910542
  4044ba:	jmp    0x75d0:0xc99413f1
  4044c1:	aaa    
  4044c2:	mov    eax,0x3054dd67
  4044c7:	dec    ebx
  4044c8:	jnp    0x404459
  4044ca:	frndint 
  4044cc:	and    al,0xb0
  4044ce:	or     al,0xfb
  4044d0:	enter  0x544a,0x27
  4044d4:	jbe    0x40451b
  4044d6:	push   esi
  4044d7:	cmp    bl,BYTE PTR [eax+esi*1-0x4f0fcb09]
  4044de:	push   esi
  4044df:	and    DWORD PTR [edi+0x49b8d44c],ebx
  4044e5:	sub    ch,BYTE PTR [edx]
  4044e7:	in     eax,0x82
  4044e9:	sub    edi,DWORD PTR [esi+0x2a]
  4044ec:	adc    DWORD PTR [edx+ebx*2-0x22],ebx
  4044f0:	jb     0x4044de
  4044f2:	mov    dl,0xfa
  4044f4:	repz fisttp DWORD PTR [ebp+0x1c32c2fb]
  4044fb:	sbb    BYTE PTR [ebp-0x71],bl
  4044fe:	ds lahf 
  404500:	dec    esp
  404501:	cwde   
  404502:	js     0x40456f
  404504:	adc    eax,0xa4c82e54
  404509:	cli    
  40450a:	std    
  40450b:	pop    edx
  40450c:	popa   
  40450d:	mov    BYTE PTR [esi-0x14250c36],ch
  404513:	xchg   esi,eax
  404514:	xchg   edx,eax
  404515:	je     0x4044db
  404517:	cmp    al,0xf5
  404519:	push   ds
  40451a:	jbe    0x40450a
  40451c:	dec    DWORD PTR ds:0xe9295539
  404522:	in     al,0xb2
  404524:	mov    ch,0x31
  404526:	jnp    0x4044ed
  404528:	jno    0x40453f
  40452a:	fadd   DWORD PTR [ebp+0x50850a44]
  404530:	mov    ds:0x22f59624,al
  404535:	aam    0xe9
  404537:	sbb    al,0xad
  404539:	dec    eax
  40453a:	jo     0x404594
  40453c:	(bad)  [ecx+0x51fa4f7f]
  404542:	sbb    eax,0xbe2f4834
  404547:	fnstsw WORD PTR [ebp+0x67f851ea]
  40454d:	ins    BYTE PTR es:[edi],dx
  40454e:	mov    ebx,0xdcfde4a4
  404553:	mov    esi,0x960a5675
  404558:	out    0x42,eax
  40455a:	jae    0x404580
  40455c:	mov    esp,0xfcac99df
  404562:	fistp  DWORD PTR [eax]
  404564:	out    dx,eax
  404565:	or     DWORD PTR [ecx],ebx
  404567:	lods   al,BYTE PTR ds:[esi]
  404568:	push   0xba7c21da
  40456d:	ins    DWORD PTR es:[edi],dx
  40456e:	loope  0x4045d1
  404570:	xchg   esp,eax
  404571:	adc    bl,ah
  404573:	pop    ecx
  404574:	mov    ah,0xe1
  404576:	sbb    al,0x6
  404578:	cmp    cl,BYTE PTR [edi+0x9f83520]
  40457e:	jne    0x40450f
  404580:	jp     0x4045aa
  404582:	mov    esp,DWORD PTR [edi-0x3ecb1d9c]
  404588:	pop    eax
  404589:	adc    BYTE PTR [ebp+0x55c4aded],ah
  40458f:	sbb    bl,BYTE PTR [edi+0x55078356]
  404595:	int    0x21
  404597:	jns    0x404523
  404599:	and    eax,0xf286de60
  40459e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40459f:	xor    DWORD PTR [ebx-0x63],edi
  4045a2:	fwait
  4045a3:	xor    cl,ch
  4045a5:	test   DWORD PTR [edi+0x77],esi
  4045a8:	pop    es
  4045a9:	and    al,0xe2
  4045ab:	add    al,0xe2
  4045ad:	jmp    0x4045b3
  4045af:	inc    ecx
  4045b0:	pop    ebx
  4045b1:	sub    BYTE PTR [esi+0x7927dde3],al
  4045b7:	inc    eax
  4045b8:	test   DWORD PTR [ebx+0x5d726bff],ebx
  4045be:	xor    eax,0x686b8d1e
  4045c3:	push   esi
  4045c4:	(bad)  
  4045c5:	xchg   esp,eax
  4045c6:	add    bh,0x56
  4045c9:	mov    cl,0x64
  4045cb:	or     DWORD PTR [ebx+0x29],esi
  4045ce:	pushf  
  4045cf:	mov    ebp,0xba788ebb
  4045d4:	push   eax
  4045d5:	push   esi
  4045d6:	popa   
  4045d7:	shr    DWORD PTR [esi],1
  4045d9:	inc    eax
  4045da:	fild   DWORD PTR [ebp+eax*4-0x6ac9a0e1]
  4045e1:	loopne 0x404660
  4045e3:	mov    bl,0x46
  4045e5:	or     bh,al
  4045e7:	pop    edi
  4045e8:	scas   eax,DWORD PTR es:[edi]
  4045e9:	fstp   st(1)
  4045eb:	gs add al,cl
  4045ee:	dec    DWORD PTR [ebp+0x70]
  4045f1:	data16 xlat BYTE PTR ds:[ebx]
  4045f3:	and    ebp,DWORD PTR [edx]
  4045f5:	cdq    
  4045f6:	les    ebx,FWORD PTR [edx-0x42]
  4045f9:	mov    DWORD PTR [edx+esi*4-0x5ce80fbf],0x93fd9498
  404604:	jbe    0x40462e
  404606:	mov    edx,0xe60d05de
  40460b:	push   esp
  40460c:	ret    
  40460d:	fdivr  QWORD PTR [ebx-0x24]
  404610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404611:	or     eax,0x8c75b76d
  404616:	cli    
  404617:	mov    bh,0x66
  404619:	mov    WORD PTR [eax-0x2c17a47a],?
  40461f:	sub    cl,BYTE PTR [ebx+0x15b954c2]
  404625:	cs pop edi
  404627:	pop    ss
  404628:	aam    0xa7
  40462a:	pop    eax
  40462b:	call   0x695d:0x874febc7
  404632:	add    ah,bl
  404634:	mov    al,0xd6
  404636:	lods   eax,DWORD PTR ds:[esi]
  404637:	sbb    esi,edx
  404639:	push   edi
  40463a:	aam    0x68
  40463c:	dec    edi
  40463d:	jnp    0x40465b
  40463f:	mov    esp,0xabe4381d
  404644:	lds    ecx,FWORD PTR [eax-0x17]
  404647:	pop    edx
  404648:	or     al,0x25
  40464a:	sbb    ch,BYTE PTR [edi]
  40464c:	sub    eax,0x972b213b
  404651:	add    ah,bl
  404653:	in     eax,dx
  404654:	iret   
  404655:	xlat   BYTE PTR ds:[ebx]
  404656:	or     DWORD PTR [esp+ebx*1],edi
  404659:	or     BYTE PTR [edx],bh
  40465b:	ins    WORD PTR es:[edi],dx
  40465d:	(bad)
  404661:	jge    0x404617
  404663:	mov    ds:0x6b0e24fa,eax
  404668:	rcl    BYTE PTR [edx],0x47
  40466b:	jmp    DWORD PTR [esi+0x7e]
  40466e:	jb     0x404665
  404670:	or     eax,0xb400dfa0
  404676:	add    esp,DWORD PTR [eax]
  404678:	retf   
  404679:	imul   esi,DWORD PTR fs:[ebx+0x66da31bf],0xffffffa0
  404681:	xchg   ebp,eax
  404682:	xchg   edx,eax
  404683:	cli    
  404684:	dec    ecx
  404685:	(bad)  
  404686:	push   edi
  404687:	and    edi,ebp
  404689:	xlat   BYTE PTR ss:[ebx]
  40468b:	cmp    esi,ecx
  40468d:	scas   al,BYTE PTR es:[edi]
  40468e:	iret   
  40468f:	fnstcw WORD PTR [edi+0xcf4a921]
  404695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404696:	mov    ecx,ebx
  404698:	mov    ch,BYTE PTR [edx-0x6e33b14c]
  40469e:	cmp    eax,0x338caa1b
  4046a3:	imul   ecx,DWORD PTR [edx+0x21],0xa9a4e178
  4046aa:	push   ecx
  4046ab:	dec    ebx
  4046ac:	jns    0x404688
  4046ae:	inc    edi
  4046af:	mov    ch,0x9c
  4046b1:	jbe    0x4046af
  4046b3:	in     eax,dx
  4046b4:	ja     0x4046f8
  4046b6:	cs push 0x11ebc220
  4046bc:	test   DWORD PTR [ebp-0x9],ebx
  4046bf:	pop    eax
  4046c0:	ret    0x2d5
  4046c3:	jmp    0x80bb0ad3
  4046c8:	cld    
  4046c9:	mov    esi,0x89b620ff
  4046ce:	popf   
  4046cf:	mov    esp,0x2715a026
  4046d4:	fld    DWORD PTR [edx]
  4046d6:	push   ebx
  4046d7:	lods   al,BYTE PTR ds:[esi]
  4046d8:	sub    DWORD PTR [ecx-0x6e],esi
  4046db:	(bad)  
  4046dc:	push   edx
  4046dd:	or     ebp,edi
  4046df:	enter  0xb6af,0x2c
  4046e3:	jns    0x4046bc
  4046e5:	xchg   edi,eax
  4046e6:	sbb    ebx,ebx
  4046e8:	shl    DWORD PTR [esi-0x1882b4a9],0xe8
  4046ef:	inc    edi
  4046f0:	dec    ebx
  4046f1:	out    dx,eax
  4046f2:	xchg   esi,eax
  4046f3:	in     eax,0xb2
  4046f5:	lea    edx,[esi+esi*1-0x22]
  4046f9:	sub    dh,dh
  4046fb:	xor    DWORD PTR ds:0xc5eedfec,esp
  404701:	pop    ecx
  404702:	jp     0x4046c5
  404704:	xor    ebp,DWORD PTR [edx+edi*4-0x3f9493f9]
  40470b:	(bad)  
  40470d:	dec    ax
  40470f:	lods   al,BYTE PTR ds:[esi]
  404710:	cmp    al,0xf4
  404712:	xchg   esi,eax
  404713:	cmp    edi,esp
  404715:	jns    0x404713
  404717:	dec    edx
  404718:	pop    es
  404719:	pop    esi
  40471a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40471b:	dec    esp
  40471c:	and    BYTE PTR [edi+edx*8+0x7e],bh
  404720:	mov    ebx,0x160d89c0
  404725:	scas   al,BYTE PTR es:[edi]
  404726:	lock inc edi
  404728:	mov    bl,dl
  40472a:	cwde   
  40472b:	jmp    0x2eb94c2b
  404730:	fild   DWORD PTR [edi+0x35]
  404733:	pushf  
  404734:	push   cs
  404735:	lock mov DWORD PTR [edi-0x73],ebp
  404739:	sti    
  40473a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40473b:	fldcw  WORD PTR [ecx+0x75]
  40473e:	or     BYTE PTR ds:0xc98b0309,dh
  404744:	imul   eax,DWORD PTR [ebp-0x45c96824],0x8d0282ed
  40474e:	pop    ss
  40474f:	sub    al,0x1e
  404751:	je     0x4046e4
  404753:	sbb    bh,BYTE PTR [eax]
  404755:	xor    BYTE PTR [eax+0x1c89775d],bl
  40475b:	jb     0x40479d
  40475d:	fadd   DWORD PTR [ebx]
  40475f:	xor    al,BYTE PTR [ebx]
  404761:	mov    edx,0x88bcf949
  404766:	retf   
  404767:	jge    0x404786
  404769:	push   esi
  40476a:	retf   0x366
  40476d:	shl    BYTE PTR [ebx],cl
  40476f:	or     bl,dh
  404771:	iret   
  404772:	sbb    eax,0x14d513f1
  404777:	sub    al,0xda
  404779:	pop    es
  40477a:	and    eax,0xd869b303
  40477f:	mov    esi,0x3028da90
  404784:	ret    0x1e92
  404787:	jge    0x4047c9
  404789:	pop    edx
  40478a:	iret   
  40478b:	push   cs
  40478c:	mov    bl,BYTE PTR [esi*4-0x455fe42a]
  404793:	lock stos DWORD PTR es:[edi],eax
  404795:	xor    eax,0x85139fb5
  40479a:	in     eax,0x4d
  40479c:	mov    WORD PTR [esi-0x4b13e788],ss
  4047a2:	mov    cl,0xc3
  4047a4:	dec    ebx
  4047a6:	fnstsw WORD PTR [edx-0x3a6300e0]
  4047ac:	sub    eax,0xcbef775c
  4047b1:	or     eax,0x1f5bf8da
  4047b6:	xchg   eax,esp
  4047b8:	neg    BYTE PTR [ecx+0x397884e1]
  4047be:	aam    0x1e
  4047c0:	mov    dl,0x84
  4047c2:	mov    al,ds:0x7132ac7a
  4047c7:	rol    DWORD PTR [eax+0x3131dc96],cl
  4047cd:	or     edx,DWORD PTR [eax-0x3b6d727a]
  4047d3:	push   ebp
  4047d5:	sbb    eax,0x5e1a7ee8
  4047da:	not    BYTE PTR [eax]
  4047dc:	mov    eax,0xa2d3702d
  4047e1:	sbb    ecx,DWORD PTR [ecx-0x35]
  4047e4:	shl    edx,1
  4047e6:	push   edi
  4047e7:	test   al,0x5a
  4047e9:	jne    0x40477a
  4047eb:	xchg   edi,eax
  4047ec:	xor    eax,0xe2cf8dc1
  4047f1:	mov    cl,0x3c
  4047f3:	dec    eax
  4047f4:	and    al,0x17
  4047f6:	imul   esi,DWORD PTR [ecx+0x473ac3c4],0x26c3d961
  404800:	je     0x4047fa
  404802:	sti    
  404803:	xor    ch,ch
  404805:	mov    eax,0x40f29a83
  40480a:	mov    dh,0x30
  40480c:	lahf   
  40480d:	loopne 0x4047c3
  40480f:	aas    
  404810:	push   es
  404811:	pop    edx
  404812:	push   edx
  404813:	adc    al,0x34
  404815:	gs (bad) 
  404817:	jle    0x404881
  404819:	je     0x404859
  40481b:	aam    0xeb
  40481d:	das    
  40481e:	outs   dx,BYTE PTR ds:[esi]
  40481f:	ins    BYTE PTR es:[edi],dx
  404820:	popa   
  404821:	(bad)  
  404822:	adc    edx,eax
  404824:	aas    
  404825:	or     eax,0x4743bb60
  40482a:	dec    edi
  40482b:	sub    esp,DWORD PTR [esi-0x36]
  40482e:	sti    
  40482f:	sbb    dl,BYTE PTR [eax-0x48]
  404832:	mov    al,ds:0x68a796ab
  404837:	les    edx,FWORD PTR [eax-0x2e]
  40483a:	lods   ax,WORD PTR ds:[esi]
  40483c:	add    BYTE PTR [ebx+edi*2+0x59],bh
  404840:	xor    eax,0xb0400433
  404845:	inc    esi
  404846:	sub    BYTE PTR [edx+0x27db5ca9],cl
  40484c:	je     0x404831
  40484e:	cwde   
  40484f:	sub    bh,BYTE PTR [edx*1-0x56dfe0f8]
  404856:	repnz mov ebx,ebp
  404859:	mov    edx,0xa6c1f0f7
  40485e:	add    ebp,esi
  404860:	sbb    esi,DWORD PTR [ebp+0x7f]
  404863:	push   ebp
  404864:	or     al,0xa4
  404866:	or     edx,DWORD PTR [esi-0x3b]
  404869:	xchg   esi,eax
  40486a:	pop    ss
  40486b:	mov    esp,gs
  40486d:	jle    0x404856
  40486f:	imul   ecx,DWORD PTR [ecx+ecx*1-0x15],0xffffff83
  404874:	ss push ecx
  404876:	pop    ebx
  404877:	mov    ebp,eax
  404879:	cli    
  40487a:	cld    
  40487b:	push   edi
  40487c:	sbb    esi,DWORD PTR [edi+0x71]
  40487f:	or     DWORD PTR [ebx+0x1c],ebx
  404882:	enter  0x356e,0xb9
  404886:	dec    ecx
  404887:	shl    DWORD PTR [eax+0x5e45ab73],1
  40488d:	mov    edi,esp
  40488f:	sbb    BYTE PTR [ebp+0x50],al
  404892:	mov    bl,0xd3
  404894:	push   ebx
  404895:	fcmovu st,st(5)
  404897:	jnp    0x404836
  404899:	test   eax,0x38c6475
  40489e:	jmp    0x2d0a:0x308e2f05
  4048a5:	fsub   st,st(0)
  4048a7:	das    
  4048a8:	add    eax,0x7e06aa3a
  4048ad:	mov    al,0x4
  4048af:	cdq    
  4048b0:	test   eax,0xdafb2dc4
  4048b5:	sub    DWORD PTR [edi+0x6cc1957e],eax
  4048bb:	into   
  4048bc:	jge    0x4048c2
  4048be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048bf:	ins    DWORD PTR es:[edi],dx
  4048c0:	mov    ecx,?
  4048c2:	call   FWORD PTR ds:0xbf83f8fd
  4048c8:	jecxz  0x404918
  4048ca:	adc    cl,dl
  4048cc:	aad    0x1b
  4048ce:	inc    edx
  4048cf:	jne    0x40493c
  4048d1:	jl     0x40492e
  4048d3:	mov    edi,0x7efc835f
  4048d8:	out    dx,al
  4048d9:	jge    0x40494c
  4048db:	fimul  WORD PTR [edi-0x63148c93]
  4048e1:	shl    BYTE PTR [esi+ebp*8],cl
  4048e4:	ficom  DWORD PTR ds:0x9e6db13a
  4048ea:	stos   DWORD PTR es:[edi],eax
  4048eb:	gs add ebx,ebx
  4048ee:	push   ebp
  4048ef:	mov    ebp,0xa363a19e
  4048f4:	inc    edx
  4048f5:	cmp    bh,cl
  4048f7:	fs jo  0x4048b1
  4048fa:	sbb    ebx,DWORD PTR [ebp-0x1dd37a7f]
  404900:	pop    ecx
  404901:	(bad)  
  404902:	stos   DWORD PTR es:[edi],eax
  404903:	call   0x8b55:0xb6862895
  40490a:	loop   0x40490f
  40490c:	jp     0x40492b
  40490e:	push   es
  40490f:	adc    al,0xd9
  404911:	ret    
  404912:	mov    bh,0x30
  404914:	dec    ecx
  404915:	xchg   edx,eax
  404916:	xlat   BYTE PTR ds:[ebx]
  404917:	push   edx
  404918:	sub    dh,ch
  40491a:	jne    0x4048c9
  40491c:	hlt    
  40491d:	into   
  40491e:	lock push ds
  404920:	test   edi,ebx
  404922:	sub    eax,0xf04b7ef0
  404927:	scas   eax,DWORD PTR es:[edi]
  404928:	psrad  mm3,QWORD PTR [edx-0x18380cfe]
  40492f:	jl     0x404986
  404931:	ror    BYTE PTR [edx-0x8],cl
  404934:	mov    edx,esp
  404936:	pop    ds
  404937:	pop    ss
  404938:	add    al,0xee
  40493a:	xchg   ebx,eax
  40493b:	not    BYTE PTR [ebp+0x31]
  40493e:	(bad)  
  40493f:	dec    esi
  404940:	mov    bh,0xe9
  404942:	inc    ecx
  404943:	jnp    0x40495a
  404945:	(bad)  
  404946:	mov    al,ds:0xbdd19820
  40494b:	pop    eax
  40494c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40494d:	jnp    0x404933
  40494f:	sbb    DWORD PTR [esp+eax*8],ebx
  404952:	out    dx,al
  404953:	test   dl,0x62
  404956:	ss pop edx
  404958:	inc    ebx
  404959:	xor    al,0xe4
  40495b:	aam    0xa2
  40495d:	cld    
  40495e:	mov    bh,0xef
  404960:	pushf  
  404961:	enter  0x967c,0x13
  404965:	bound  edx,QWORD PTR [edx]
  404967:	mov    esi,0xb816a88d
  40496c:	iret   
  40496d:	mov    edx,0xae85a163
  404972:	mov    es,esi
  404974:	or     al,0x14
  404976:	sbb    BYTE PTR [ebp-0x1b],ah
  404979:	mov    ebx,0xca180525
  40497e:	test   dl,ch
  404980:	sbb    al,0xbe
  404982:	test   al,0xab
  404984:	out    0xcd,al
  404986:	mov    al,BYTE PTR [eax-0xc]
  404989:	push   0xffffffc0
  40498b:	mov    WORD PTR [ebp-0x22],ds
  40498e:	jg     0x404950
  404990:	mov    dh,0x89
  404992:	fsubr  st,st(5)
  404994:	jo     0x404a08
  404996:	mov    eax,0x44090e2f
  40499b:	sbb    al,0x96
  40499d:	pop    eax
  40499e:	push   es
  40499f:	inc    eax
  4049a0:	scas   al,BYTE PTR es:[edi]
  4049a1:	inc    ebp
  4049a2:	add    al,0xca
  4049a4:	add    esi,ecx
  4049a6:	jo     0x4049f2
  4049a8:	jbe    0x4049d6
  4049aa:	das    
  4049ab:	pop    ebp
  4049ac:	push   esi
  4049ad:	xor    ebx,DWORD PTR [ebp+0x78]
  4049b0:	push   edx
  4049b1:	dec    esp
  4049b2:	mov    dl,0x61
  4049b4:	mov    dl,0x8d
  4049b6:	xchg   ebp,eax
  4049b7:	dec    ecx
  4049b8:	mov    esi,0x40e2350a
  4049bd:	push   ebp
  4049be:	test   eax,0x580bc317
  4049c3:	inc    edi
  4049c4:	fnstcw WORD PTR [edi]
  4049c6:	iret   
  4049c7:	out    dx,al
  4049c8:	ret    
  4049c9:	shl    DWORD PTR [ebx],0x28
  4049cc:	push   es
  4049cd:	mov    bl,0x3
  4049cf:	shl    BYTE PTR [edi+0x29],1
  4049d2:	jo     0x404a13
  4049d4:	shl    BYTE PTR [esi-0x2e],cl
  4049d7:	in     eax,0xd0
  4049d9:	inc    ecx
  4049da:	push   esp
  4049db:	retf   
  4049dc:	sbb    al,0x68
  4049de:	loope  0x404971
  4049e0:	xchg   ecx,eax
  4049e1:	fnstsw WORD PTR [edx-0x360c1602]
  4049e7:	push   es
  4049e8:	jnp    0x4049db
  4049ea:	mov    ch,0xdd
  4049ec:	xor    edi,DWORD PTR [eax-0x7c]
  4049ef:	mov    bl,0xe7
  4049f1:	or     esp,DWORD PTR [edi]
  4049f3:	push   cs
  4049f4:	lods   eax,DWORD PTR ds:[esi]
  4049f5:	pop    ecx
  4049f6:	repz rol ebp,1
  4049f9:	mov    edi,0x9bcfeada
  4049fe:	sub    BYTE PTR [ebx-0x48],ch
  404a01:	cdq    
  404a02:	jo     0x4049c1
  404a04:	mov    WORD PTR [eax+0x39d1765],es
  404a0a:	scas   al,BYTE PTR es:[edi]
  404a0b:	mov    eax,ds:0x6ef82bb7
  404a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a11:	dec    edi
  404a12:	ret    
  404a13:	or     edi,DWORD PTR cs:0xd4e0dab
  404a1a:	adc    al,0x94
  404a1c:	cmp    ch,bl
  404a1e:	pop    edx
  404a1f:	jo     0x404a30
  404a21:	xor    eax,0xf86dab67
  404a26:	mov    ds:0x7a6bc223,al
  404a2b:	sbb    BYTE PTR [ecx],cl
  404a2d:	jbe    0x404a53
  404a2f:	rcr    bl,cl
  404a31:	jl     0x4049c7
  404a33:	sbb    edx,DWORD PTR [edx+0x0]
  404a36:	out    dx,al
  404a37:	shr    BYTE PTR [ebx+0x2b],0x70
  404a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a3c:	(bad)  
  404a3d:	scas   eax,DWORD PTR es:[edi]
  404a3e:	xor    eax,0x7c3bde56
  404a43:	mov    ebx,?
  404a45:	nop
  404a46:	bound  eax,QWORD PTR [ecx-0xa65210b]
  404a4c:	inc    BYTE PTR [ebx+0x68]
  404a4f:	imul   ebp,DWORD PTR [esi],0xba01dc9d
  404a55:	ins    DWORD PTR es:[edi],dx
  404a56:	cmp    eax,0xea3905b5
  404a5b:	jge    0x404ad3
  404a5d:	or     edx,DWORD PTR [eax-0x5bda2177]
  404a63:	call   eax
  404a65:	pop    esi
  404a66:	jecxz  0x404ac4
  404a68:	xor    ah,BYTE PTR [edi+0x73]
  404a6b:	jle    0x404a59
  404a6d:	jae    0x404a56
  404a6f:	sub    dh,BYTE PTR [ebx-0x73]
  404a72:	xor    eax,eax
  404a74:	adc    ebp,edx
  404a76:	add    eax,0xc1f5897d
  404a7b:	mov    BYTE PTR [esi+0x3da3db58],ch
  404a81:	xchg   DWORD PTR [edi-0x3f8efa3],ecx
  404a87:	mov    esp,0xcaa61b8a
  404a8c:	dec    eax
  404a8d:	rol    BYTE PTR [ebx+0x39],0x7d
  404a91:	jb     0x404a2c
  404a93:	cmp    edx,esi
  404a95:	gs out dx,eax
  404a97:	or     BYTE PTR [esi],bh
  404a99:	jnp    0x404a9b
  404a9b:	stos   DWORD PTR es:[edi],eax
  404a9c:	outs   dx,BYTE PTR ds:[esi]
  404a9d:	mov    eax,0xa6604f68
  404aa2:	inc    ecx
  404aa3:	test   ebx,edx
  404aa5:	or     bl,BYTE PTR [esi]
  404aa7:	xchg   esp,eax
  404aa8:	push   esi
  404aa9:	and    DWORD PTR [eax+0x18e10d25],ebp
  404aaf:	jns    0x404aa5
  404ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab2:	cli    
  404ab3:	push   eax
  404ab4:	pop    es
  404ab5:	sub    eax,0x2ccd8891
  404aba:	stos   BYTE PTR es:[edi],al
  404abb:	dec    eax
  404abc:	xor    DWORD PTR [eax+0x25],edx
  404abf:	inc    esi
  404ac0:	imul   esp,DWORD PTR [ecx+0x7c],0x248d3663
  404ac7:	jbe    0x404aed
  404ac9:	adc    ecx,ebp
  404acb:	jg     0x404a98
  404acd:	jb     0x404a55
  404acf:	adc    DWORD PTR [ebp+edx*4+0x65284cc3],ecx
  404ad6:	add    al,0xda
  404ad8:	lea    ebp,[edx-0x59d1da27]
  404ade:	mov    esi,0xbfa70e28
  404ae3:	sti    
  404ae4:	add    al,0x56
  404ae6:	xor    BYTE PTR [edi+0x6a],dl
  404ae9:	mov    edx,DWORD PTR [edx+0x34]
  404aec:	pop    edi
  404aed:	mov    al,ds:0x4f011825
  404af2:	push   0x73b99e75
  404af7:	bound  esp,QWORD PTR [edx+0x31]
  404afa:	dec    ecx
  404afb:	test   eax,0x65406f25
  404b00:	add    eax,0x94ff894e
  404b05:	fs (bad) 
  404b07:	jbe    0x404af9
  404b09:	sbb    BYTE PTR [ebp+0x2828a488],cl
  404b0f:	jg     0x404ae8
  404b11:	jmp    0x3905be1f
  404b16:	jle    0x404b90
  404b18:	xor    DWORD PTR [edx],eax
  404b1a:	mov    dh,0xea
  404b1c:	and    al,0x9b
  404b1e:	xchg   ebp,eax
  404b1f:	fsubr  QWORD PTR [edi]
  404b21:	pop    ds
  404b22:	fcom   QWORD PTR [ebp+0x1a]
  404b25:	cs pop ecx
  404b27:	add    al,0xd1
  404b29:	xchg   ebp,eax
  404b2a:	shr    ebp,cl
  404b2c:	xchg   BYTE PTR [eax-0x34],dl
  404b2f:	lods   eax,DWORD PTR ds:[esi]
  404b30:	scas   eax,DWORD PTR es:[edi]
  404b31:	nop
  404b32:	inc    eax
  404b33:	sub    al,BYTE PTR [esi]
  404b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b36:	dec    esi
  404b37:	adc    bl,BYTE PTR [edi]
  404b39:	jbe    0x404ba3
  404b3b:	repz inc esp
  404b3d:	aas    
  404b3e:	pushw  cs
  404b40:	adc    dl,ch
  404b42:	sbb    bl,BYTE PTR [edi]
  404b44:	mov    cl,0x4f
  404b46:	jns    0x404bb2
  404b48:	mov    al,0x4d
  404b4a:	aam    0x88
  404b4c:	or     BYTE PTR [edi+0x19a286c7],0x1a
  404b53:	push   edi
  404b54:	mov    BYTE PTR [edx],cl
  404b56:	test   BYTE PTR [ebx],dl
  404b58:	ror    BYTE PTR [edx+ebp*1-0x7c],cl
  404b5c:	adc    al,0x98
  404b5e:	jno    0x404b01
  404b60:	add    DWORD PTR [edi-0x1903d0df],ecx
  404b66:	div    DWORD PTR [esi+0x15]
  404b69:	idiv   BYTE PTR [edx+ebp*4]
  404b6c:	jecxz  0x404ba3
  404b6e:	inc    ebp
  404b6f:	xor    al,0xca
  404b71:	icebp  
  404b72:	outs   dx,DWORD PTR ds:[esi]
  404b73:	jecxz  0x404b35
  404b75:	fstp   DWORD PTR [edx]
  404b77:	ret    0x4e5
  404b7a:	ins    BYTE PTR es:[edi],dx
  404b7b:	or     al,0x6c
  404b7d:	inc    edx
  404b7e:	cmp    eax,DWORD PTR [edi+0x13dbd24c]
  404b84:	push   ebp
  404b85:	int    0x73
  404b87:	cmp    DWORD PTR [ebx-0x65b7228a],edi
  404b8d:	(bad)  
  404b8f:	xchg   ebx,eax
  404b90:	dec    esi
  404b91:	sub    ch,BYTE PTR [ebx+edx*2-0x6bd166c6]
  404b98:	ds addr16 mov edi,0xd859f580
  404b9f:	mov    eax,ds:0x9657279a
  404ba4:	mov    ch,0xf3
  404ba6:	retf   0x3977
  404ba9:	pop    esp
  404baa:	add    DWORD PTR [eax],ebp
  404bac:	pop    esp
  404bad:	xchg   BYTE PTR [ecx],bl
  404baf:	pushf  
  404bb0:	int    0x4c
  404bb2:	loop   0x404bd3
  404bb4:	xchg   edi,edx
  404bb6:	cmp    BYTE PTR [esp+edi*2],bh
  404bb9:	scas   al,BYTE PTR es:[edi]
  404bba:	inc    edi
  404bbb:	add    bh,BYTE PTR [edx]
  404bbd:	stos   BYTE PTR es:[edi],al
  404bbe:	add    eax,0x87d4ad40
  404bc3:	or     al,0x5d
  404bc5:	loop   0x404bd8
  404bc7:	xor    BYTE PTR [ecx-0x2b],dh
  404bca:	or     BYTE PTR ss:[ebp+0x1e],al
  404bce:	dec    esp
  404bcf:	sub    esp,ecx
  404bd1:	fisttp WORD PTR [ebx-0x456afdcd]
  404bd7:	leave  
  404bd8:	xchg   ecx,eax
  404bd9:	jl     0x404b9f
  404bdb:	sbb    dh,dl
  404bdd:	leave  
  404bde:	mov    esp,0xb040d504
  404be3:	loope  0x404c24
  404be5:	inc    esi
  404be6:	pop    ecx
  404be7:	adc    BYTE PTR [ebx],ah
  404be9:	mov    edx,0xc469a905
  404bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bef:	pop    ss
  404bf0:	imul   esi,DWORD PTR [eax-0x66],0x526bd2e0
  404bf7:	stc    
  404bf8:	nop
  404bf9:	pop    ebx
  404bfa:	pop    ebx
  404bfb:	out    dx,eax
  404bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bfd:	mov    dl,0x3
  404bff:	icebp  
  404c00:	mov    ch,0x2b
  404c02:	push   ss
  404c03:	mov    ecx,DWORD PTR [edx]
  404c05:	stos   DWORD PTR es:[edi],eax
  404c06:	jmp    0x1839ecc8
  404c0b:	icebp  
  404c0c:	jno    0x404c0e
  404c0e:	cdq    
  404c0f:	pop    edx
  404c10:	push   0xffffff98
  404c12:	es push 0x3c
  404c15:	push   eax
  404c16:	out    0xa3,al
  404c18:	call   0x27a7:0xfecd372a
  404c1f:	jae    0x404c75
  404c21:	call   0xd70265aa
  404c26:	out    dx,eax
  404c27:	stos   DWORD PTR es:[edi],eax
  404c28:	outs   dx,DWORD PTR ds:[esi]
  404c29:	out    dx,al
  404c2a:	and    eax,0xcce3aae4
  404c2f:	ins    DWORD PTR es:[edi],dx
  404c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c31:	dec    ebx
  404c32:	jg     0x404c75
  404c34:	mov    dl,0xef
  404c36:	xor    BYTE PTR [edx+0x2886a5c2],bh
  404c3c:	mov    ebp,0xd6c5eb5d
  404c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c42:	call   0xee36645f
  404c47:	and    dh,dl
  404c49:	es jl  0x404cb6
  404c4c:	mov    eax,DWORD PTR [ebp-0x3b]
  404c4f:	call   0x7b70c42e
  404c54:	fldenv [esi-0xfd6c6d8]
  404c5a:	stos   BYTE PTR es:[edi],al
  404c5b:	push   ss
  404c5c:	cwde   
  404c5d:	(bad)  
  404c5e:	pop    es
  404c5f:	add    edx,DWORD PTR [ecx+0x183bc616]
  404c65:	(bad)  [ebx+0x40c5df14]
  404c6b:	sbb    BYTE PTR [ecx+0x6710ac0c],bh
  404c71:	xor    al,0x2d
  404c73:	mov    ebp,0x6212028e
  404c78:	mov    ebx,0xda8c2ffe
  404c7d:	cmc    
  404c7e:	sub    eax,0x3d4af032
  404c83:	mov    ebx,0xbd86533c
  404c88:	std    
  404c89:	sbb    eax,0x21a9fce0
  404c8e:	sbb    DWORD PTR [edi+edi*2+0x34c97da7],esi
  404c95:	shl    BYTE PTR [edi],cl
  404c97:	mov    ecx,0x5acf8655
  404c9c:	ja     0x404c66
  404c9e:	mov    ebp,0x12a68905
  404ca3:	fcomp  DWORD PTR [eax-0x7a]
  404ca6:	call   0x9a94df21
  404cab:	mov    esi,0x862118be
  404cb0:	xchg   edx,eax
  404cb1:	mov    cl,0xdd
  404cb3:	repnz test eax,0x920f2af4
  404cb9:	sbb    bh,BYTE PTR [eax-0x74]
  404cbc:	jo     0x404d15
  404cbe:	jp     0x404c66
  404cc0:	lods   al,BYTE PTR ds:[esi]
  404cc1:	cmp    al,0xf8
  404cc3:	ins    BYTE PTR es:[edi],dx
  404cc4:	push   ds
  404cc5:	out    0x9b,eax
  404cc7:	push   es
  404cc8:	ins    DWORD PTR es:[edi],dx
  404cc9:	aas    
  404cca:	test   eax,0x2996a82b
  404ccf:	cmp    eax,0xceb543e0
  404cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd5:	xor    eax,0x74147c0f
  404cda:	aaa    
  404cdb:	adc    al,0x9f
  404cdd:	push   esi
  404cde:	les    ebp,FWORD PTR [ecx]
  404ce0:	dec    esp
  404ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ce2:	div    DWORD PTR [eax+0x64]
  404ce5:	cmp    al,0xa7
  404ce7:	ror    BYTE PTR [eax-0x69],0x3b
  404ceb:	mov    ecx,0xc9ef3b6f
  404cf0:	in     al,dx
  404cf1:	fcmovu st,st(0)
  404cf3:	fsub   st(5),st
  404cf5:	dec    ebp
  404cf6:	cmp    BYTE PTR [edi+0x374430b0],dl
  404cfc:	outs   dx,BYTE PTR ds:[esi]
  404cfd:	ret    
  404cfe:	iret   
  404cff:	and    BYTE PTR [edx-0x442f46],al
  404d05:	push   ecx
  404d06:	test   BYTE PTR [ebp-0x1ca782b2],dl
  404d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d0d:	push   ebx
  404d0e:	ficomp WORD PTR [esi-0x5e]
  404d11:	or     al,0x58
  404d13:	adc    eax,esi
  404d15:	mov    ds:0x252f099b,al
  404d1a:	and    ah,0x82
  404d1d:	cmp    ebx,edx
  404d1f:	adc    eax,DWORD PTR [ebx]
  404d21:	fdiv   st,st(3)
  404d23:	stc    
  404d24:	shr    DWORD PTR [eax+0x2d],cl
  404d27:	es xchg esp,eax
  404d29:	sbb    DWORD PTR [esi],esp
  404d2b:	xchg   edx,eax
  404d2c:	xlat   BYTE PTR ds:[ebx]
  404d2d:	jle    0x404cb1
  404d2f:	pop    ebx
  404d30:	scas   al,BYTE PTR es:[edi]
  404d31:	xor    DWORD PTR [edx],ecx
  404d33:	mov    bh,0xdf
  404d35:	dec    ebx
  404d36:	jmp    0x5496b7ee
  404d3b:	lock mov ?,ebx
  404d3e:	jbe    0x404d88
  404d40:	xchg   edx,eax
  404d41:	es xchg esi,eax
  404d43:	out    0xaa,eax
  404d45:	adc    ecx,DWORD PTR [ebx-0x7a25319c]
  404d4b:	test   al,al
  404d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d4e:	pop    esp
  404d4f:	xchg   BYTE PTR [esp+0x7ac65f2d],ah
  404d56:	sbb    eax,0x3c566d13
  404d5b:	jbe    0x404db3
  404d5d:	cmc    
  404d5e:	or     DWORD PTR [edx],0x17
  404d61:	clc    
  404d62:	in     eax,0xb4
  404d64:	pop    es
  404d65:	inc    esp
  404d66:	inc    ecx
  404d67:	jmp    0xa7dae254
  404d6c:	xchg   ecx,eax
  404d6d:	outs   dx,DWORD PTR ds:[esi]
  404d6e:	cs add eax,0x318b71e9
  404d74:	stos   DWORD PTR es:[edi],eax
  404d75:	fwait
  404d76:	repnz mov BYTE PTR ds:0x2f568277,dl
  404d7d:	sub    DWORD PTR [eax+0x17],0x7f9f8d1b
  404d84:	push   ebx
  404d85:	cmp    bh,ch
  404d87:	fadd   QWORD PTR [ebp*8+0xbc4e8d3]
  404d8e:	aaa    
  404d8f:	jmp    0x404dbe
  404d91:	xor    eax,0x66e1c1d2
  404d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d97:	rol    ah,0x9d
  404d9a:	outs   dx,BYTE PTR ds:[esi]
  404d9b:	mov    esi,0x6995a188
  404da0:	xor    eax,DWORD PTR [esi+0x672d428a]
  404da6:	xchg   ebx,eax
  404da7:	das    
  404da8:	ins    BYTE PTR es:[edi],dx
  404da9:	jae    0x404d64
  404dab:	add    eax,0x6e55862a
  404db0:	ins    DWORD PTR es:[edi],dx
  404db1:	sub    eax,0xa8e048c1
  404db6:	add    DWORD PTR [ebx+0x6b6138c7],0x9a6fb51b
  404dc0:	push   ebp
  404dc1:	sbb    DWORD PTR [esi+0x4a600c2b],esp
  404dc7:	jbe    0x404df0
  404dc9:	jl     0x404d9a
  404dcb:	dec    edi
  404dcc:	mov    esp,DWORD PTR [ecx+0x45463ce9]
  404dd2:	popa   
  404dd3:	or     al,0x56
  404dd5:	in     eax,0x1
  404dd7:	add    eax,0x8dcbaf36
  404ddc:	xor    esi,esi
  404dde:	inc    eax
  404ddf:	mov    al,BYTE PTR ds:0x913769f2
  404de5:	vmwrite edx,DWORD PTR [esp+ebp*2+0x20]
  404dea:	ins    BYTE PTR es:[edi],dx
  404deb:	mov    esp,0xaaa6928
  404df0:	popf   
  404df1:	and    DWORD PTR [ebx-0x7f7e9293],0x455e2033
  404dfb:	add    eax,0x7d79f034
  404e00:	repnz sbb al,0xe7
  404e03:	cwde   
  404e04:	mov    ah,0x18
  404e06:	cdq    
  404e07:	test   al,0xbd
  404e09:	xchg   BYTE PTR [edx+0x7c],dh
  404e0c:	add    DWORD PTR [edx-0x4c3c292],esi
  404e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e13:	xor    DWORD PTR [esi+0x3cbf1119],edx
  404e19:	jge    0x404e13
  404e1b:	xchg   DWORD PTR [esi],edi
  404e1d:	stos   DWORD PTR es:[edi],eax
  404e1e:	or     ecx,eax
  404e20:	imul   eax,DWORD PTR [ebx+0x128ad9a9],0x62
  404e27:	sbb    eax,0xb22c9942
  404e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e2d:	or     DWORD PTR [ebp+0x62],ebx
  404e30:	sub    BYTE PTR gs:[ebx],cl
  404e33:	lods   eax,DWORD PTR ds:[esi]
  404e34:	or     eax,0xd57e1a7e
  404e39:	push   edx
  404e3a:	sbb    ecx,edi
  404e3c:	lock retf 
  404e3e:	pop    eax
  404e3f:	aam    0xcd
  404e41:	out    dx,al
  404e42:	mov    al,ds:0xa9b44aa7
  404e47:	mov    ds:0x9d76ae07,al
  404e4c:	xchg   ecx,eax
  404e4d:	dec    edx
  404e4e:	inc    ebp
  404e4f:	arpl   WORD PTR [ebx-0x30980bc2],cx
  404e55:	jge    0x404de6
  404e57:	push   ecx
  404e58:	fwait
  404e59:	ja     0x404e4a
  404e5b:	mov    ?,ecx
  404e5d:	jg     0x404e2b
  404e5f:	cs jb  0x404de9
  404e62:	xor    dh,dh
  404e64:	or     esp,DWORD PTR [eax-0x7e7f5a0c]
  404e6a:	or     al,0x1f
  404e6c:	jns    0x404e10
  404e6e:	sbb    BYTE PTR [ebp-0x26198b0f],dl
  404e74:	out    0x2,al
  404e76:	out    dx,al
  404e77:	dec    esi
  404e78:	adc    DWORD PTR ds:0x7e9aa1fa,esi
  404e7e:	mov    dl,ch
  404e80:	int    0x76
  404e82:	aaa    
  404e83:	mov    al,BYTE PTR [esi-0x7cfd0a53]
  404e89:	inc    ecx
  404e8a:	pop    ecx
  404e8b:	mov    bl,0x79
  404e8d:	jno    0x404ee1
  404e8f:	sbb    BYTE PTR [edi+0x563b70f5],0xbc
  404e96:	or     DWORD PTR ds:0x14369b0d,edx
  404e9c:	(bad)  
  404e9d:	aam    0x5c
  404e9f:	or     DWORD PTR [edx-0x70aa742c],ebx
  404ea5:	adc    eax,DWORD PTR [edi+0x27]
  404ea8:	lea    edx,[esi]
  404eaa:	xchg   edi,eax
  404eab:	pop    es
  404eac:	pop    ebp
  404ead:	jb     0x404f06
  404eaf:	das    
  404eb0:	ret    0xf7e5
  404eb3:	or     ah,bl
  404eb5:	clc    
  404eb6:	mov    edx,DWORD PTR [edx-0x5b]
  404eb9:	jo     0x404ea9
  404ebb:	shl    edi,1
  404ebd:	mov    dh,0x8d
  404ebf:	rcl    BYTE PTR [ebp+0x6a],0xc8
  404ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec4:	sbb    eax,0x1cfa3191
  404ec9:	ss test al,0x90
  404ecc:	inc    ebx
  404ece:	les    esp,FWORD PTR [esi+0x77]
  404ed1:	sub    edi,DWORD PTR [eax+0x64561d01]
  404ed7:	and    ecx,0x8a126411
  404edd:	push   esp
  404ede:	repnz push cs
  404ee0:	or     al,BYTE PTR [eax]
  404ee2:	xchg   BYTE PTR [eax-0x3b],cl
  404ee5:	ds sub eax,0xcd8ee301
  404eeb:	cmp    al,0x43
  404eed:	add    BYTE PTR [ebx],ch
  404eef:	pop    esp
  404ef0:	mov    eax,0xc1bcb509
  404ef5:	mov    dh,0xd
  404ef7:	js     0x404e9a
  404ef9:	cli    
  404efa:	ss xchg edx,eax
  404efc:	dec    ecx
  404efd:	add    al,0x58
  404eff:	mov    WORD PTR ds:0xef59f4f6,gs
  404f05:	inc    eax
  404f06:	mov    dh,BYTE PTR [eax-0x36b81e1e]
  404f0c:	mul    BYTE PTR [eax-0x52fed30b]
  404f12:	xchg   BYTE PTR [ecx+eax*8],bh
  404f15:	pop    edx
  404f16:	dec    ecx
  404f17:	test   eax,0xd0591577
  404f1c:	or     cl,bh
  404f1e:	add    bl,bl
  404f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f21:	enter  0xb423,0xd9
  404f25:	leave  
  404f26:	fldcw  WORD PTR [edx+0x38]
  404f29:	(bad)  
  404f2a:	adc    esi,DWORD PTR [eax-0x59]
  404f2d:	lea    ebp,[edx+ebx*1-0x24]
  404f31:	jmp    0x404f3d
  404f33:	xor    BYTE PTR [ebx+edx*4+0x48],ah
  404f37:	mov    bh,0x41
  404f39:	cmp    al,0x37
  404f3b:	in     al,0xc4
  404f3d:	sub    edi,esp
  404f3f:	fs daa 
  404f41:	fild   QWORD PTR [edi+ebp*1]
  404f44:	inc    edi
  404f45:	call   FWORD PTR [ecx+0x54]
  404f48:	into   
  404f49:	leave  
  404f4a:	jl     0x404f3f
  404f4c:	sbb    edx,edx
  404f4e:	mov    ebx,0x483b6276
  404f53:	fs xor al,0x6b
  404f56:	retf   
  404f57:	daa    
  404f58:	dec    edx
  404f59:	cs sub eax,0x76636ae
  404f5f:	inc    esi
  404f60:	xchg   ecx,eax
  404f61:	mov    al,ds:0x850c829d
  404f66:	loope  0x404f65
  404f68:	pop    ss
  404f69:	or     BYTE PTR [esp+eax*4-0x34d81eb2],dl
  404f70:	mov    esp,0x91a5b83d
  404f75:	ins    BYTE PTR es:[edi],dx
  404f76:	push   es
  404f77:	test   BYTE PTR [esp+eax*2+0x40757398],bl
  404f7e:	(bad)  
  404f7f:	int3   
  404f80:	stc    
  404f81:	hlt    
  404f82:	jecxz  0x404f8e
  404f84:	cmp    esp,DWORD PTR [esi+ecx*4]
  404f87:	pop    DWORD PTR [edx-0x4c4cf8cd]
  404f8d:	mov    ecx,0x391b0cff
  404f92:	push   es
  404f93:	lods   eax,DWORD PTR ds:[esi]
  404f94:	pop    ecx
  404f95:	xchg   ebx,eax
  404f96:	sbb    al,0xa2
  404f98:	jmp    0x404fc4
  404f9a:	dec    ebp
  404f9b:	xor    ch,BYTE PTR cs:[eax-0x1a]
  404f9f:	idiv   BYTE PTR [ecx-0x40]
  404fa2:	fwait
  404fa3:	push   esp
  404fa4:	fwait
  404fa5:	mov    ch,0xd7
  404fa7:	mul    BYTE PTR [edi+0x4acc294f]
  404fad:	xchg   ecx,eax
  404fae:	adc    dl,BYTE PTR [edx]
  404fb0:	loope  0x404fd1
  404fb2:	push   0xffffffe7
  404fb4:	retf   
  404fb5:	jae    0x404f51
  404fb7:	mov    edi,0x1eb635d9
  404fbc:	gs pop ebx
  404fbe:	push   0x62
  404fc0:	pop    edi
  404fc1:	push   cs
  404fc2:	js     0x40503f
  404fc4:	mov    ebx,0xf8e688be
  404fc9:	sub    BYTE PTR [ebx],cl
  404fcb:	pop    esp
  404fcc:	add    DWORD PTR [ebx-0x3676c31b],0x16
  404fd3:	(bad)  
  404fd5:	mov    al,BYTE PTR [edi]
  404fd7:	fbld   TBYTE PTR [ebx]
  404fd9:	les    ebx,FWORD PTR [edx]
  404fdb:	mov    al,ds:0x925d534d
  404fe0:	adc    esp,edi
  404fe2:	push   eax
  404fe3:	or     al,0x7
  404fe5:	mov    ecx,0x36d75a0b
  404fea:	in     al,0x75
  404fec:	(bad)  
  404fed:	stc    
  404fee:	ud0    ecx,DWORD PTR [eax]
  404ff1:	xchg   ebp,eax
  404ff2:	sbb    ecx,eax
  404ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ff5:	dec    edx
  404ff6:	sub    ch,BYTE PTR [edi]
  404ff8:	sbb    dh,BYTE PTR [edx-0x21]
  404ffb:	cmp    esi,DWORD PTR [edx-0x378f9e6e]
  405001:	leave  
  405002:	mov    edi,0x8c4488dc
  405007:	add    ch,BYTE PTR [edi+eax*4]
  40500a:	xchg   ebx,eax
  40500b:	inc    edx
  40500c:	pop    esi
  40500d:	or     BYTE PTR ds:0x28f93b,bl
  405013:	ja     0x40506f
  405015:	aaa    
  405016:	mov    ebp,0xde4b5d87
  40501b:	adc    DWORD PTR [ebx-0x561b8fcf],0xffffffe1
  405022:	mov    eax,ds:0xd4922991
  405027:	cwde   
  405028:	(bad)  
  405029:	retf   
  40502a:	or     BYTE PTR [eax-0x29],dl
  40502d:	adc    al,0xf5
  40502f:	jae    0x404fed
  405031:	inc    eax
  405032:	xchg   esi,eax
  405033:	and    BYTE PTR [edx-0x4d6307e5],ah
  405039:	pop    ss
  40503a:	jmp    0x1055:0x1e17d623
  405041:	ss xchg ebp,eax
  405043:	and    DWORD PTR [edi+0x5b88e119],esp
  405049:	mov    DWORD PTR [esi],ebx
  40504b:	sbb    BYTE PTR [edi+0x0],ah
  40504e:	dec    ebx
  40504f:	and    eax,0x79ef18a0
  405054:	mov    ebx,0x9d716697
  405059:	loope  0x404ff1
  40505b:	sbb    ebx,DWORD PTR ds:0x9ab62874
  405061:	or     al,0x2e
  405063:	pop    esp
  405064:	data16 cmc 
  405066:	sbb    cl,BYTE PTR [ebx-0x55560d0a]
  40506c:	sbb    dh,al
  40506e:	inc    esp
  40506f:	dec    esi
  405070:	ja     0x405089
  405072:	xchg   BYTE PTR ds:0xad847747,dh
  405078:	sbb    ch,BYTE PTR [edi+0x1]
  40507b:	sbb    ebp,edi
  40507d:	xchg   esp,eax
  40507e:	adc    DWORD PTR [ebp-0x76b92819],esp
  405084:	dec    ebp
  405085:	retf   0x96ae
  405088:	into   
  405089:	mov    eax,ds:0xe7ccdb38
  40508e:	or     BYTE PTR [edx],0x18
  405091:	jb     0x405025
  405093:	and    DWORD PTR ds:0xf84ccdcc,eax
  405099:	inc    ebp
  40509a:	inc    ebx
  40509b:	or     BYTE PTR [eax+0x2ae13ea0],al
  4050a1:	lea    edx,[ecx+0x7fac6604]
  4050a7:	xchg   ecx,eax
  4050a8:	aas    
  4050a9:	mov    al,ds:0xa852c477
  4050ae:	rcr    BYTE PTR [edi+0xe],cl
  4050b1:	dec    ebp
  4050b2:	jp     0x4050f6
  4050b4:	xchg   edx,eax
  4050b5:	lods   eax,DWORD PTR ds:[esi]
  4050b6:	inc    edx
  4050b7:	neg    esp
  4050b9:	shl    ecx,1
  4050bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050bc:	imul   ebp,DWORD PTR [edi-0x4cd14c43],0x932565c4
  4050c6:	test   BYTE PTR [eax+ecx*4+0x70],al
  4050ca:	mov    ebx,0xd529a1a0
  4050cf:	aad    0xfe
  4050d1:	lock mov DWORD PTR [edi],esp
  4050d4:	int3   
  4050d5:	call   0x8e98:0x1bac6fb7
  4050dc:	cdq    
  4050dd:	mov    DWORD PTR [eax+0x42],eax
  4050e0:	xor    BYTE PTR [ebx],dl
  4050e2:	mov    ds:0xce539a5f,eax
  4050e7:	cld    
  4050e8:	push   esp
  4050e9:	lds    eax,FWORD PTR [ebx-0x7c]
  4050ec:	sub    esi,esp
  4050ee:	xlat   BYTE PTR ds:[ebx]
  4050ef:	retf   0x9ad0
  4050f2:	inc    esi
  4050f3:	arpl   WORD PTR [eax-0x4a],sp
  4050f6:	(bad)  
  4050f7:	adc    ch,BYTE PTR [edi+ebp*2-0x24]
  4050fb:	jl     0x4050e6
  4050fd:	cdq    
  4050fe:	shl    BYTE PTR [esi+0x5c],0x83
  405102:	adc    dl,al
  405104:	aad    0x3c
  405106:	aaa    
  405107:	mov    edi,DWORD PTR [esi-0x5fecb7f5]
  40510d:	lahf   
  40510e:	xor    al,0x17
  405110:	add    eax,0x4b124f9e
  405115:	fwait
  405116:	mov    ebp,0x708dddf2
  40511b:	inc    esi
  40511c:	pop    eax
  40511d:	push   eax
  40511e:	push   0xffffffb5
  405120:	mov    ebp,0xd12a6a19
  405125:	mov    ds:0x9d582acd,al
  40512a:	ret    0x4649
  40512d:	adc    eax,edi
  40512f:	jns    0x4050ee
  405131:	xchg   esp,eax
  405132:	js     0x405136
  405134:	popf   
  405135:	popf   
  405136:	retf   
  405137:	pop    ebp
  405138:	fsubr  DWORD PTR [edi+0x63]
  40513b:	call   0xbe279d83
  405140:	dec    edi
  405141:	lock or al,0x4d
  405144:	data16 fwait
  405146:	inc    ecx
  405147:	mov    dh,0xae
  405149:	clc    
  40514a:	adc    BYTE PTR [edx+0x77da208f],al
  405150:	cmp    edx,DWORD PTR [eax-0x5634f04c]
  405156:	imul   esi,DWORD PTR [esi-0x75],0x44a87aa5
  40515d:	in     eax,dx
  40515e:	cmp    BYTE PTR [edx+0x13],al
  405161:	xor    DWORD PTR [ecx+0x4c],eax
  405164:	arpl   bx,dx
  405166:	fwait
  405167:	mul    BYTE PTR [edx+0x1012979]
  40516d:	(bad)  
  40516e:	mov    bl,0x1
  405170:	outs   dx,DWORD PTR ds:[esi]
  405171:	daa    
  405172:	int    0x5
  405174:	jl     0x40515a
  405176:	lea    ebp,[ebx]
  405178:	xchg   BYTE PTR [ebx-0x4b],ch
  40517b:	sbb    bh,al
  40517d:	mov    ds:0x25f0463,al
  405182:	cmc    
  405183:	inc    ebx
  405184:	xor    al,0xbe
  405186:	cli    
  405187:	push   cs
  405188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405189:	movd   DWORD PTR [edx+edi*4-0x35],mm1
  40518e:	into   
  40518f:	lock jmp 0x4051c7
  405192:	nop
  405193:	cwde   
  405194:	sbb    DWORD PTR [esi-0x4f],0x44
  405198:	outs   dx,DWORD PTR ds:[esi]
  405199:	ret    0x6989
  40519c:	push   0x12
  40519e:	xor    BYTE PTR [ecx],0xd8
  4051a1:	pop    eax
  4051a2:	outs   dx,BYTE PTR ds:[esi]
  4051a3:	add    al,0xf2
  4051a5:	jno    0x405211
  4051a7:	gs push es
  4051a9:	or     eax,0xc633b298
  4051ae:	jns    0x40516c
  4051b0:	push   ebp
  4051b1:	jmp    0x3728a963
  4051b6:	and    edi,DWORD PTR [ebx]
  4051b8:	cmp    edx,eax
  4051ba:	mov    ecx,fs
  4051bc:	xor    bh,BYTE PTR [esi-0x1f2d60af]
  4051c2:	ss xor eax,0x62e76359
  4051c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051c9:	out    0xf3,al
  4051cb:	mov    dh,BYTE PTR [ebx-0x3293860c]
  4051d1:	mov    WORD PTR [ecx],es
  4051d3:	cmc    
  4051d4:	pcmpeqb mm3,QWORD PTR [esi+eax*4+0x31]
  4051d9:	(bad)  
  4051da:	sub    edx,DWORD PTR [edx-0x559c6193]
  4051e0:	(bad)  
  4051e1:	call   0xfe58021f
  4051e6:	std    
  4051e7:	push   esi
  4051e8:	dec    edi
  4051e9:	out    dx,eax
  4051ea:	xor    DWORD PTR [esi+eiz*2-0x4ea6c5b1],0xdc557a1a
  4051f5:	lods   al,BYTE PTR ds:[esi]
  4051f6:	popf   
  4051f7:	push   eax
  4051f8:	lock sbb DWORD PTR [esi-0x290c8e56],edx
  4051ff:	test   eax,0x67a058a2
  405204:	and    ah,bh
  405206:	mov    esp,0xccb3f68f
  40520b:	jae    0x4051c4
  40520d:	inc    edi
  40520e:	pop    ebx
  40520f:	js     0x405198
  405211:	leave  
  405212:	push   0x850580bf
  405217:	adc    ebp,DWORD PTR [ecx-0x39ae4680]
  40521d:	out    0x70,al
  40521f:	dec    ecx
  405220:	jecxz  0x405227
  405222:	mov    edi,0x49049544
  405227:	or     esi,DWORD PTR [edi+0xe87dea1]
  40522d:	in     al,dx
  40522e:	popa   
  40522f:	xor    DWORD PTR [ebx-0x7a172fe1],eax
  405235:	and    ah,0xa1
  405238:	loop   0x405299
  40523a:	adc    eax,0x21e9d970
  40523f:	add    al,0xb3
  405241:	adc    ebp,DWORD PTR [esi+0x47ddf387]
  405247:	out    dx,eax
  405248:	shr    DWORD PTR [eax],1
  40524a:	push   DWORD PTR [ebp-0x5c]
  40524d:	xor    DWORD PTR ds:0xea3ebf17,0xfed8619
  405257:	(bad)  
  405259:	fmul   DWORD PTR [edx]
  40525b:	fadd   QWORD PTR [ebp-0x7392badf]
  405261:	or     al,0xf3
  405263:	lea    ebp,[ecx]
  405265:	and    BYTE PTR [ebx],0x88
  405268:	dec    esi
  405269:	inc    eax
  40526a:	adc    al,BYTE PTR [ebx+0x49]
  40526d:	repnz mov BYTE PTR [edi-0x42],bh
  405271:	out    dx,eax
  405272:	and    esp,DWORD PTR [ebp-0x7b]
  405275:	adc    eax,ebx
  405277:	in     eax,dx
  405278:	into   
  405279:	aas    
  40527a:	pop    eax
  40527b:	pop    ds
  40527c:	mov    bh,0xe6
  40527e:	stc    
  40527f:	int3   
  405280:	add    BYTE PTR [ebx],cl
  405282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405283:	and    edx,DWORD PTR [ebx]
  405285:	xchg   DWORD PTR [ecx-0x2b],esp
  405288:	dec    edi
  405289:	push   ss
  40528a:	fcmovbe st,st(1)
  40528c:	loop   0x4052a7
  40528e:	gs sar esp,cl
  405291:	aas    
  405292:	ins    BYTE PTR es:[edi],dx
  405293:	inc    ebx
  405294:	mov    esi,ss
  405296:	xor    BYTE PTR [ecx+0x1fbbfb44],cl
  40529c:	neg    DWORD PTR [ebx-0x62f60deb]
  4052a2:	mov    ch,0x16
  4052a4:	mov    DWORD PTR gs:[edi],edx
  4052a7:	adc    BYTE PTR [edi+0x32236979],ch
  4052ad:	xchg   BYTE PTR [ebx-0x24024332],cl
  4052b3:	jge    0x405292
  4052b5:	shl    DWORD PTR [eax-0x2dcc4a4a],cl
  4052bb:	rcl    ecx,0x32
  4052be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052bf:	jns    0x4052b2
  4052c1:	mov    edi,0xc396ee53
  4052c6:	and    cl,bl
  4052c8:	cld    
  4052c9:	icebp  
  4052ca:	push   0xf75edef2
  4052cf:	adc    eax,0xbf33bd2b
  4052d4:	int    0xe5
  4052d6:	cwde   
  4052d7:	inc    esi
  4052d8:	push   0x857630be
  4052dd:	add    esi,esp
  4052df:	es xchg ecx,eax
  4052e1:	fcom   st(5)
  4052e3:	sub    dl,ah
  4052e5:	push   ebp
  4052e6:	or     BYTE PTR [eax],0x37
  4052e9:	ret    0x8e36
  4052ec:	ja     0x405363
  4052ee:	sub    al,0xc3
  4052f0:	cdq    
  4052f1:	pop    esi
  4052f2:	jb     0x405313
  4052f4:	sub    DWORD PTR [edx+0x1e],edi
  4052f7:	push   cs
  4052f8:	retf   0xcdf0
  4052fb:	cdq    
  4052fc:	ins    BYTE PTR es:[edi],dx
  4052fd:	adc    al,ch
  4052ff:	sbb    al,BYTE PTR [ebx]
  405301:	adc    eax,DWORD PTR [edx-0x58]
  405304:	iret   
  405305:	cli    
  405306:	add    edx,DWORD PTR [ebx]
  405308:	jl     0x405316
  40530a:	daa    
  40530b:	jne    0x405379
  40530d:	inc    edx
  40530e:	lea    esp,[esi+0x35]
  405311:	lahf   
  405312:	fcom   QWORD PTR [ebx+0x59f64663]
  405318:	loopne 0x405326
  40531a:	aaa    
  40531b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40531c:	xchg   edx,eax
  40531d:	sar    DWORD PTR cs:[ebp+0x471b6f61],cl
  405324:	push   ebp
  405325:	(bad)  
  405326:	mov    eax,ds:0xbd4e55ef
  40532b:	fisttp DWORD PTR [edi+0x35]
  40532e:	jle    0x40535c
  405330:	dec    edx
  405331:	xchg   esp,eax
  405332:	mov    ds:0x7b7da52d,eax
  405337:	pop    edx
  405338:	mov    ?,WORD PTR [eax]
  40533a:	cli    
  40533b:	push   esp
  40533c:	mov    dh,0x3d
  40533e:	jl     0x4053b7
  405340:	cld    
  405341:	or     esi,0xff041869
  405347:	lds    ebx,FWORD PTR [eax]
  405349:	(bad)  
  40534a:	in     eax,dx
  40534b:	xlat   BYTE PTR ds:[ebx]
  40534c:	mov    BYTE PTR [ebp+0x5d],ch
  40534f:	pushf  
  405350:	add    dh,BYTE PTR [eax]
  405352:	xchg   esi,eax
  405353:	add    ch,BYTE PTR [edx]
  405355:	jp     0x4053b2
  405357:	push   ecx
  405358:	xchg   edx,eax
  405359:	ins    DWORD PTR es:[edi],dx
  40535a:	xchg   edi,eax
  40535b:	xchg   edx,eax
  40535c:	adc    ecx,DWORD PTR [esi]
  40535e:	loope  0x405322
  405360:	mov    ecx,0xa3a80113
  405365:	sbb    DWORD PTR [ecx+ecx*2-0x4ba9cc57],ebx
  40536c:	outs   dx,DWORD PTR ds:[esi]
  40536d:	xchg   BYTE PTR [eax+0x48],bl
  405370:	mov    ch,0xf7
  405372:	add    DWORD PTR [edx],ecx
  405374:	xor    ebp,DWORD PTR [eax]
  405376:	mov    BYTE PTR ds:0xcf052f77,dh
  40537c:	stos   DWORD PTR es:[edi],eax
  40537d:	mov    esp,0xf35523fe
  405382:	xchg   edi,eax
  405383:	cmp    eax,0xdcd0cf9f
  405388:	xchg   ebx,eax
  405389:	adc    esi,esi
  40538b:	imul   ebx,DWORD PTR [ebx],0x50db4b7d
  405391:	(bad)
  405394:	int3   
  405395:	xchg   edi,eax
  405396:	ja     0x405350
  405398:	add    al,0xe
  40539a:	test   DWORD PTR [edi-0x15],esi
  40539d:	int    0xe1
  40539f:	fdivr  DWORD PTR [esi-0x465b4305]
  4053a5:	and    eax,0xa25c88aa
  4053aa:	and    al,0xbc
  4053ac:	lock fbstp TBYTE PTR [edx+0x2d]
  4053b0:	(bad)  
  4053b1:	iret   
  4053b2:	pop    esi
  4053b3:	add    BYTE PTR [edi+0x3e],bh
  4053b6:	lahf   
  4053b7:	xchg   esi,eax
  4053b8:	dec    ebx
  4053b9:	pushf  
  4053ba:	add    al,0x71
  4053bc:	mov    edx,0x5ce15d2
  4053c1:	mov    ebx,DWORD PTR [edi+0xa4822c]
  4053c7:	sbb    al,0x93
  4053c9:	int3   
  4053ca:	push   es
  4053cb:	lock (bad) 
  4053cd:	clc    
  4053ce:	pop    esi
  4053cf:	test   eax,0x9fd5e115
  4053d4:	cli    
  4053d5:	aaa    
  4053d6:	xlat   BYTE PTR ds:[ebx]
  4053d7:	sub    ch,BYTE PTR [edx-0x48283473]
  4053dd:	push   ebp
  4053de:	sub    edx,ebx
  4053e0:	xchg   esp,eax
  4053e1:	rcl    DWORD PTR [edi-0x5d],0xa1
  4053e5:	push   ss
  4053e6:	call   0x718:0xef8c4115
  4053ed:	pop    ecx
  4053ee:	imul   edi,DWORD PTR [eax-0x6db10be],0x94c81c49
  4053f8:	dec    esp
  4053f9:	sub    edx,ecx
  4053fb:	in     eax,0x15
  4053fd:	das    
  4053fe:	sub    al,0x5f
  405400:	aam    0xe4
  405402:	fsub   DWORD PTR [eax]
  405404:	xor    al,0xb4
  405406:	fsubr  st(2),st
  405408:	dec    esi
  405409:	add    bh,BYTE PTR [esi-0x24]
  40540c:	ffreep st(1)
  40540e:	jmp    0x2beadf09
  405413:	loop   0x4053ee
  405415:	call   0xfdf9ca7a
  40541a:	jne    0x4053af
  40541c:	xchg   esi,eax
  40541d:	pop    es
  40541e:	dec    DWORD PTR [ecx+0xf8d8c5d]
  405424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405425:	sbb    bl,BYTE PTR [edi+0x54]
  405428:	cli    
  405429:	adc    al,0xa
  40542b:	ins    BYTE PTR es:[edi],dx
  40542c:	fnstenv [eax-0x25]
  40542f:	loop   0x4053cd
  405431:	jns    0x4054a7
  405433:	pusha  
  405434:	pushf  
  405435:	push   edx
  405436:	(bad)  
  405437:	rcr    BYTE PTR [edx],1
  405439:	jg     0x4054b2
  40543b:	jecxz  0x405495
  40543d:	jnp    0x4053fe
  40543f:	lea    eax,[edx]
  405441:	xchg   edx,eax
  405442:	sub    eax,0xcf216159
  405447:	out    dx,al
  405448:	dec    edi
  405449:	imul   ecx,DWORD PTR [ebx-0x5d],0xffffffb3
  40544d:	retf   
  40544e:	sub    eax,DWORD PTR [ebx+edi*2]
  405451:	mov    ah,0xa5
  405453:	aas    
  405454:	push   esi
  405455:	jbe    0x405401
  405457:	cmp    edx,DWORD PTR [esi+0x1f814d79]
  40545d:	or     DWORD PTR [ebx+0x76d8ec02],esp
  405463:	arpl   WORD PTR [edi],di
  405465:	retf   0x86bc
  405468:	cwde   
  405469:	jbe    0x405476
  40546b:	mov    ecx,0xe3e4bc87
  405470:	jns    0x4054a3
  405472:	dec    ebp
  405473:	aaa    
  405474:	xchg   esp,eax
  405475:	or     BYTE PTR [ecx+0x59ffa112],ah
  40547b:	out    0xd5,al
  40547d:	loop   0x4054ec
  40547f:	rcr    DWORD PTR [eax+0x5a],0x53
  405483:	mov    eax,0x67773c84
  405488:	ret    
  405489:	popf   
  40548a:	inc    ebx
  40548b:	out    dx,eax
  40548c:	into   
  40548d:	xchg   ah,dh
  40548f:	cld    
  405490:	lods   eax,DWORD PTR ds:[esi]
  405491:	jmp    0x40542a
  405493:	jo     0x40544f
  405495:	or     BYTE PTR [edi+0x71d08d3],0x4c
  40549c:	retf   
  40549d:	jns    0x40541f
  40549f:	(bad)  
  4054a0:	cdq    
  4054a1:	add    DWORD PTR [eax],edi
  4054a3:	stos   BYTE PTR es:[edi],al
  4054a4:	pop    esi
  4054a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054a6:	push   edx
  4054a7:	mov    edx,0xa057596a
  4054ac:	shl    DWORD PTR [edi-0xa],cl
  4054af:	push   ebp
  4054b0:	outs   dx,DWORD PTR ds:[esi]
  4054b1:	pop    eax
  4054b2:	add    bh,BYTE PTR [edi+edi*2+0x1f82911c]
  4054b9:	in     eax,0xf5
  4054bb:	sub    edx,DWORD PTR [esp+ecx*2+0x5f]
  4054bf:	lds    ebp,FWORD PTR [edx+0x5d]
  4054c2:	cmp    ebp,ebx
  4054c4:	adc    ch,0x28
  4054c7:	into   
  4054c8:	imul   eax,DWORD PTR [ecx],0x2f
  4054cb:	sbb    eax,edi
  4054cd:	or     BYTE PTR [eax],0x92
  4054d0:	adc    BYTE PTR [esi+0x202e5f5e],ah
  4054d6:	add    al,0x7d
  4054d8:	pusha  
  4054d9:	push   0x11
  4054db:	xor    eax,0x894d803e
  4054e0:	ret    
  4054e1:	cmp    eax,0xc7c86fb
  4054e6:	popf   
  4054e7:	push   edi
  4054e8:	xor    eax,0x26952c00
  4054ed:	xlat   BYTE PTR ds:[ebx]
  4054ee:	(bad)  
  4054f0:	daa    
  4054f1:	mov    ds,WORD PTR [esi+0x72880708]
  4054f7:	retf   0x72ea
  4054fa:	repnz lds edx,FWORD PTR [esi-0x72]
  4054fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054ff:	adc    ah,BYTE PTR [eax+0x387db214]
  405505:	jge    0x405560
  405507:	(bad)  
  405508:	dec    ecx
  405509:	ret    
  40550a:	aad    0x58
  40550c:	sbb    DWORD PTR [ebp-0x4c74d3e3],esi
  405512:	xor    DWORD PTR [edx+ecx*2+0x6aedf2d6],ebp
  405519:	sbb    esp,DWORD PTR [ebx+ecx*4+0x6304de16]
  405520:	loopne 0x405526
  405522:	pop    ss
  405523:	js     0x4054c4
  405525:	xlat   BYTE PTR ds:[ebx]
  405526:	sub    ebp,0x46e69c22
  40552c:	icebp  
  40552d:	popa   
  40552e:	push   eax
  40552f:	jmp    0x47a:0xe362e267
  405536:	mov    BYTE PTR [ebp-0x7273b5df],dh
  40553c:	adc    edi,DWORD PTR [ebp+0x35]
  40553f:	adc    DWORD PTR [ecx-0x5f],edi
  405542:	mov    fs,WORD PTR [ebx+0x3a1630c8]
  405548:	sub    al,0xab
  40554a:	jb     0x4054e0
  40554c:	or     cl,al
  40554e:	in     eax,dx
  40554f:	sar    DWORD PTR [ebx+0x51],cl
  405552:	(bad)  
  405553:	popf   
  405554:	sbb    bh,bl
  405556:	mov    fs,edi
  405558:	test   DWORD PTR [ecx+0x790e3c03],0xaa4b079e
  405562:	push   ecx
  405563:	mov    bl,dh
  405565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405566:	ror    DWORD PTR [edi+0x55],0xd
  40556a:	das    
  40556b:	add    eax,0xace8a285
  405570:	mov    esi,0xa560ad45
  405575:	jnp    0x405544
  405577:	pop    ds
  405578:	dec    ecx
  405579:	mov    WORD PTR ds:0xca0d8047,?
  40557f:	fadd   DWORD PTR [esi]
  405581:	scas   eax,DWORD PTR es:[edi]
  405582:	or     eax,0xd8cecfd0
  405587:	jns    0x405597
  405589:	sbb    eax,0x85ac90a9
  40558e:	and    eax,0xa9bcedcc
  405593:	xchg   edx,eax
  405594:	mov    BYTE PTR ds:0xb293643,cl
  40559a:	in     al,0xe7
  40559c:	pop    ss
  40559d:	or     al,BYTE PTR [edx-0x65]
  4055a0:	push   edx
  4055a1:	ins    BYTE PTR es:[edi],dx
  4055a2:	mov    eax,ds:0xb10a0460
  4055a7:	sbb    ecx,DWORD PTR [esi+0x224a1c2a]
  4055ad:	adc    BYTE PTR [eax+0x7bc07c3c],cl
  4055b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b4:	std    
  4055b5:	call   0xaa64a772
  4055ba:	mov    dl,BYTE PTR [esi+0x577af0ec]
  4055c0:	adc    BYTE PTR es:[esp+ecx*2+0x21de307c],0xa2
  4055c9:	dec    esp
  4055ca:	pop    esi
  4055cb:	ds cmp al,0xb4
  4055ce:	mov    eax,0x5f6da00c
  4055d3:	jb     0x405585
  4055d5:	cmp    BYTE PTR [ecx+0x33],ah
  4055d8:	xchg   edi,eax
  4055d9:	mov    dh,0xb0
  4055db:	ret    
  4055dc:	call   0x524205a4
  4055e1:	cli    
  4055e2:	lea    edx,[edi+0x64]
  4055e5:	cwde   
  4055e6:	lods   eax,DWORD PTR ds:[esi]
  4055e7:	dec    ecx
  4055e8:	cwde   
  4055e9:	xchg   edx,eax
  4055ea:	pushf  
  4055eb:	mov    esp,0xee8bf156
  4055f0:	(bad)  
  4055f1:	ds out dx,eax
  4055f3:	xchg   ebp,eax
  4055f4:	and    al,0x19
  4055f6:	or     eax,0x850533cc
  4055fb:	sub    al,al
  4055fd:	js     0x40560d
  4055ff:	sti    
  405600:	out    0x79,al
  405602:	call   0xa63b0014
  405607:	jnp    0x4055b8
  405609:	xor    al,0x8e
  40560b:	mov    ebp,0x7cd59767
  405610:	push   edx
  405611:	in     eax,0xbf
  405613:	aam    0x66
  405615:	sub    esi,DWORD PTR [eax-0x27463a43]
  40561b:	int3   
  40561c:	mov    esp,DWORD PTR [esi+edi*1+0x30da42a]
  405623:	xor    eax,0xc9860688
  405628:	xchg   esp,eax
  405629:	sub    eax,0x8386be34
  40562e:	jno    0x4055ca
  405630:	cdq    
  405631:	adc    al,0xd5
  405633:	mov    ch,0x4c
  405635:	cmp    BYTE PTR [ebx+0x34eff7e3],cl
  40563b:	mov    bh,0x3f
  40563d:	out    0x6c,eax
  40563f:	adc    esi,esi
  405641:	push   edx
  405642:	in     eax,0x10
  405644:	mov    dh,0x84
  405646:	in     al,dx
  405647:	mov    DWORD PTR [eax-0x6ad653ba],ebp
  40564d:	adc    BYTE PTR [esi],dl
  40564f:	mov    ch,0xb0
  405651:	cmp    al,0xac
  405653:	and    DWORD PTR [ebp+esi*4-0x30],ebp
  405657:	mov    WORD PTR [edi+0x6c],?
  40565a:	sbb    DWORD PTR [ecx],edx
  40565c:	mov    ds:0xd75a59f5,al
  405661:	js     0x40564d
  405663:	std    
  405664:	sbb    eax,0x7745ba68
  405669:	loop   0x405682
  40566b:	cmc    
  40566c:	xlat   BYTE PTR ds:[ebx]
  40566d:	pop    ds
  40566e:	retf   
  40566f:	xchg   edi,eax
  405670:	fsub   DWORD PTR [eax+0x2a]
  405673:	jge    0x405626
  405675:	xchg   ebp,eax
  405676:	pop    esi
  405677:	lea    eax,[edx]
  405679:	mov    bl,0xa
  40567b:	nop
  40567c:	xchg   DWORD PTR [eax],eax
  40567e:	pop    ecx
  40567f:	mov    BYTE PTR [ecx+0x16],cl
  405682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405683:	xor    ebx,0xcadc80
  405689:	shr    DWORD PTR [ecx+0x1a],0x72
  40568d:	pusha  
  40568e:	in     eax,dx
  40568f:	sahf   
  405690:	mov    edi,0xd5d1a101
  405695:	jmp    0x405652
  405697:	shl    DWORD PTR [ebp-0x5e3711be],0xc4
  40569e:	clc    
  40569f:	dec    ecx
  4056a0:	test   eax,0x2e31ca2d
  4056a5:	nop
  4056a6:	add    eax,0x7431fded
  4056ab:	std    
  4056ac:	xor    DWORD PTR [eax+0x1e37fbb9],0xbd6262d
  4056b6:	dec    esp
  4056b7:	push   ecx
  4056b8:	push   ss
  4056b9:	icebp  
  4056ba:	in     al,dx
  4056bb:	dec    esp
  4056bc:	xor    DWORD PTR [ebx],0xd237cf00
  4056c2:	ds ss call 0x850a:0x5451959d
  4056cb:	jns    0x4056ea
  4056cd:	xchg   esi,eax
  4056ce:	loopne 0x40566a
  4056d0:	cmp    dh,BYTE PTR [esi-0x51]
  4056d3:	xchg   ecx,eax
  4056d4:	nop
  4056d5:	and    ah,BYTE PTR [edi]
  4056d7:	xchg   edx,eax
  4056d8:	outs   dx,DWORD PTR ds:[esi]
  4056d9:	out    dx,eax
  4056da:	stos   BYTE PTR es:[edi],al
  4056db:	xchg   esi,eax
  4056dc:	rol    DWORD PTR [esp+ecx*1-0x77f6311a],1
  4056e3:	xchg   ebp,eax
  4056e4:	mov    bl,0x25
  4056e6:	pop    esp
  4056e7:	fnstsw WORD PTR [edx-0x6e]
  4056ea:	sub    DWORD PTR [eax],esp
  4056ec:	sti    
  4056ed:	call   DWORD PTR [ebp-0x2024f21d]
  4056f3:	pop    esp
  4056f4:	xor    DWORD PTR [eax+0x5c],esp
  4056f7:	ss pop ebx
  4056f9:	mov    bh,al
  4056fb:	xchg   edx,eax
  4056fc:	pop    esp
  4056fd:	(bad)  
  4056fe:	rol    ebx,0x5b
  405701:	xor    al,0x4a
  405703:	jmp    DWORD PTR [ebx+0x252b30d1]
  405709:	cmp    BYTE PTR [ebp+0x2a],bl
  40570c:	cmp    ebp,DWORD PTR [ecx+0x3b12e281]
  405712:	mov    bh,0xa
  405714:	push   0xb3a7d4b4
  405719:	xor    DWORD PTR [eax-0x47234bf8],edx
  40571f:	dec    ecx
  405720:	add    eax,0x1dff7307
  405725:	jmp    0x40570c
  405727:	push   edi
  405728:	and    BYTE PTR [edx-0x7302b0c4],bh
  40572e:	js     0x4056ce
  405730:	inc    ecx
  405731:	aad    0x24
  405733:	aam    0x86
  405735:	retf   0xcf45
  405738:	call   0x8613cb2b
  40573d:	jmp    0xea77:0xf98c3130
  405744:	data16 or ch,BYTE PTR cs:[edx-0x32]
  405749:	and    eax,0xd64407f2
  40574e:	repnz pop ebx
  405750:	jnp    0x40571b
  405752:	jnp    0x4057cf
  405754:	or     al,BYTE PTR [edx-0x6c9b6a32]
  40575a:	pushf  
  40575b:	arpl   WORD PTR [edi-0x75],di
  40575e:	inc    ebx
  40575f:	ja     0x405750
  405761:	jmp    0x4205:0xf00c68dc
  405768:	into   
  405769:	(bad)  
  40576b:	inc    esp
  40576c:	dec    edi
  40576d:	pop    ebx
  40576e:	mov    BYTE PTR [edi-0x45],ah
  405771:	call   0x2840362f
  405776:	ja     0x4057f0
  405778:	pop    es
  405779:	push   eax
  40577a:	shl    BYTE PTR [ecx+0x623000d6],cl
  405780:	jge    0x4057e9
  405782:	jecxz  0x405758
  405784:	xchg   edx,edx
  405786:	dec    ebp
  405787:	inc    ebp
  405788:	jg     0x40570b
  40578a:	loope  0x405784
  40578c:	rol    ch,0xdc
  40578f:	dec    ebp
  405790:	int    0x1b
  405792:	jge    0x40571c
  405794:	inc    ebp
  405795:	leave  
  405796:	sub    al,0xb8
  405798:	inc    edi
  405799:	inc    esp
  40579a:	dec    eax
  40579b:	cmc    
  40579c:	xchg   edx,eax
  40579d:	imul   edx,DWORD PTR [ebp-0x29d3f059],0x25
  4057a4:	dec    edi
  4057a5:	fsubr  QWORD PTR [ecx+0x6624f616]
  4057ab:	push   ss
  4057ac:	add    BYTE PTR ds:0x3706948,al
  4057b2:	int3   
  4057b3:	add    BYTE PTR [edx+0xc8ebc0c],0x9
  4057ba:	cmp    BYTE PTR [ecx+0x4e76a1ca],0x25
  4057c1:	imul   edi,DWORD PTR [eax-0x6f],0x98972efe
  4057c8:	(bad)  
  4057ca:	mov    ah,0x1f
  4057cc:	lds    eax,FWORD PTR [edx]
  4057ce:	cwde   
  4057cf:	fsubr  DWORD PTR [ecx]
  4057d1:	mov    ebx,DWORD PTR [esp+eax*8-0x45dea51a]
  4057d8:	cmp    DWORD PTR [edi+0x66],ebp
  4057db:	sbb    eax,0xb47dea3a
  4057e0:	cmc    
  4057e1:	dec    edi
  4057e2:	and    DWORD PTR [esi+ecx*8],ebx
  4057e5:	dec    eax
  4057e6:	aam    0xb8
  4057e8:	inc    ecx
  4057e9:	call   0x42ad8bbc
  4057ee:	test   DWORD PTR [ebp-0x56509a26],edi
  4057f4:	pusha  
  4057f5:	add    bl,dh
  4057f7:	hlt    
  4057f8:	fwait
  4057f9:	add    BYTE PTR [edx+0x51],ah
  4057fc:	xchg   edx,eax
  4057fd:	mov    cs,WORD PTR [ecx-0x56b3d1e0]
  405803:	int    0x88
  405805:	adc    eax,0x18a514c9
  40580a:	mov    eax,0xc5275d8
  40580f:	add    esi,DWORD PTR [eax+0x2ca31c19]
  405815:	sub    BYTE PTR [esi+0x2e573cb9],cl
  40581b:	sbb    BYTE PTR [edi],cl
  40581d:	fisttp DWORD PTR [esi-0x2a]
  405820:	xor    ebp,DWORD PTR [ebp-0x57]
  405823:	mov    cl,0x48
  405825:	nop
  405826:	xor    eax,0xa9426edd
  40582b:	push   cs
  40582c:	inc    eax
  40582d:	scas   al,BYTE PTR es:[edi]
  40582e:	jnp    0x405838
  405830:	in     eax,0x1c
  405832:	mov    DWORD PTR [edi-0x57ae3822],ecx
  405838:	cmp    eax,ebp
  40583a:	add    al,0xe4
  40583c:	mov    ch,0x8c
  40583e:	mov    ebp,0x8cbd08f4
  405843:	mov    dl,0xc7
  405845:	adc    al,0x47
  405847:	and    al,0x2
  405849:	push   edx
  40584a:	ror    BYTE PTR [ebx-0x41cc0179],0x56
  405851:	cmp    DWORD PTR [ecx],eax
  405853:	(bad)  [ebp+0x19114108]
  405859:	shl    BYTE PTR [eax-0x381ab49c],cl
  40585f:	jne    0x40580e
  405861:	mov    ah,BYTE PTR [eax]
  405863:	mov    al,0xd
  405865:	js     0x4057f3
  405867:	test   ecx,0x8f69cce8
  40586d:	stos   DWORD PTR es:[edi],eax
  40586e:	inc    ebx
  40586f:	adc    bl,ch
  405871:	mov    esp,0x95d1ec4c
  405876:	mov    bh,0xa7
  405878:	sub    dl,BYTE PTR [ebp-0x4b]
  40587b:	jmp    DWORD PTR [edi+0x64]
  40587e:	es clc 
  405880:	mov    ecx,0xb5da0ce1
  405885:	xchg   BYTE PTR [esi-0x4e],ch
  405888:	das    
  405889:	shr    ebp,cl
  40588b:	mov    eax,DWORD PTR [ebx-0x7e]
  40588e:	jl     0x405830
  405890:	xchg   esi,eax
  405891:	das    
  405892:	repnz mov edi,0xb8938af1
  405898:	push   ds
  405899:	les    di,DWORD PTR [esi-0x1d42c0c8]
  4058a0:	inc    ecx
  4058a1:	(bad)  
  4058a2:	icebp  
  4058a3:	leave  
  4058a4:	sub    edx,esi
  4058a6:	mov    cl,0x73
  4058a8:	push   edi
  4058a9:	cwde   
  4058aa:	or     dh,ah
  4058ac:	fadd   DWORD PTR [ecx+eax*1]
  4058af:	sub    al,0xd9
  4058b1:	and    al,0x80
  4058b3:	push   esi
  4058b4:	call   0x320:0x5427eb52
  4058bb:	(bad)  
  4058bc:	out    dx,al
  4058bd:	xchg   ebx,eax
  4058be:	ss push esi
  4058c0:	add    ch,BYTE PTR [esi]
  4058c2:	xchg   ecx,eax
  4058c3:	mov    dl,0x94
  4058c5:	retf   
  4058c6:	cmp    eax,0x857f81ad
  4058cb:	push   0x15455b6c
  4058d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058d1:	jno    0x405877
  4058d3:	popa   
  4058d4:	xchg   ebp,eax
  4058d5:	mov    BYTE PTR [edx+0x7d],dh
  4058d8:	addr16 pop es
  4058da:	sub    bl,ah
  4058dc:	sbb    ecx,ebp
  4058de:	or     eax,0x6b48f720
  4058e3:	xor    BYTE PTR [esi],0x46
  4058e6:	mov    bl,0x46
  4058e8:	dec    ebp
  4058e9:	jmp    0x53e0:0x9d7ee780
  4058f0:	lea    ebp,[esi]
  4058f2:	push   esp
  4058f3:	or     DWORD PTR [eax],0x173b6425
  4058f9:	fcom   DWORD PTR [edx+0xdc2de51]
  4058ff:	push   ecx
  405900:	jmp    0xf46149d4
  405905:	dec    ebx
  405906:	fistp  DWORD PTR [edx+0x42]
  405909:	inc    eax
  40590a:	fnsave ds:0x8a281050
  405910:	int3   
  405911:	retf   
  405912:	scas   eax,DWORD PTR es:[edi]
  405913:	dec    eax
  405914:	scas   eax,DWORD PTR es:[edi]
  405915:	div    BYTE PTR [ebx]
  405917:	fist   DWORD PTR [edi-0x41]
  40591a:	in     eax,dx
  40591b:	jecxz  0x4058e6
  40591d:	loope  0x4058eb
  40591f:	cmc    
  405920:	jecxz  0x405905
  405922:	jns    0x4058ae
  405924:	shl    BYTE PTR [ecx-0x39],0x7f
  405928:	pop    ebp
  405929:	gs pop ss
  40592b:	xor    DWORD PTR [ebx+0x181f6873],0x5a7a9b25
  405935:	pushf  
  405936:	adc    DWORD PTR [esi+0x7b],ebp
  405939:	loop   0x4058e8
  40593b:	inc    ebx
  40593c:	push   edx
  40593d:	nop
  40593e:	mov    ebp,0x8b7d4c2d
  405943:	or     al,0xf1
  405945:	mov    WORD PTR [ebx-0xf],?
  405948:	inc    ecx
  405949:	mov    bl,0x59
  40594b:	and    al,0x8
  40594d:	fwait
  40594e:	sbb    ecx,ebp
  405950:	out    dx,eax
  405951:	jmp    0x3f56:0xbb83b577
  405958:	ja     0x4059cf
  40595a:	sbb    dl,BYTE PTR [esi]
  40595c:	aam    0xa4
  40595e:	cmp    eax,0x20ac51d
  405963:	(bad)  
  405964:	xchg   ebx,eax
  405965:	aad    0xc
  405967:	div    BYTE PTR [esp+esi*2-0x21e8532]
  40596e:	pop    ebp
  40596f:	les    eax,FWORD PTR [ecx+0x37baa1ae]
  405975:	ss aad 0xfd
  405978:	aad    0xfb
  40597a:	(bad)  
  40597c:	fnstcw WORD PTR [esi]
  40597e:	std    
  40597f:	out    dx,eax
  405980:	inc    eax
  405981:	mov    ds:0xc05d8500,al
  405986:	int3   
  405987:	repnz fist DWORD PTR [edx]
  40598a:	add    eax,0x99423c78
  40598f:	aas    
  405990:	mov    bh,0x37
  405992:	mov    BYTE PTR [edi+0x2ba20ee0],bh
  405998:	mov    ds:0x17e78c3f,eax
  40599d:	mov    esi,0xe6abeaac
  4059a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a3:	jns    0x405939
  4059a5:	sbb    al,0xd7
  4059a7:	cmp    dl,BYTE PTR [ebx]
  4059a9:	in     al,dx
  4059aa:	(bad)  
  4059ab:	pushf  
  4059ac:	mov    al,0x56
  4059ae:	cmc    
  4059af:	lea    edx,[ebp+0x1c6a68a9]
  4059b5:	mov    ebp,0xbafec26e
  4059ba:	mov    eax,ds:0x29d8d4d5
  4059bf:	repnz lock mov ebp,0x48066e4e
  4059c6:	stc    
  4059c7:	and    bl,al
  4059c9:	shl    al,1
  4059cb:	mov    bh,0xe5
  4059cd:	or     DWORD PTR [ecx],0x81ee478c
  4059d3:	pop    edx
  4059d4:	std    
  4059d5:	test   DWORD PTR [edi],edx
  4059d7:	int    0xa7
  4059d9:	data16 es icebp 
  4059dc:	xchg   ebp,eax
  4059dd:	scas   al,BYTE PTR es:[edi]
  4059de:	push   ds
  4059df:	jne    0x405964
  4059e1:	enter  0xe989,0xce
  4059e5:	jb     0x4059ac
  4059e7:	jns    0x40599a
  4059e9:	jns    0x40597c
  4059eb:	sbb    edi,DWORD PTR [esi+0x2c]
  4059ee:	les    esi,FWORD PTR [ebx]
  4059f0:	test   BYTE PTR [eax-0x42da3956],al
  4059f6:	jg     0x405a59
  4059f8:	fwait
  4059f9:	sub    BYTE PTR [edx-0x76],al
  4059fc:	pusha  
  4059fd:	push   edi
  4059fe:	cli    
  4059ff:	cmp    DWORD PTR [edi+0x7afa7a82],0xffffffaa
  405a06:	jo     0x405a82
  405a08:	sbb    bl,BYTE PTR [ecx-0x9a51670]
  405a0e:	jo     0x405a49
  405a10:	addr16 ret 0x7e63
  405a14:	add    bh,0x3
  405a17:	aas    
  405a18:	test   DWORD PTR ds:0x57e029e2,0x51f44e75
  405a22:	(bad)  
  405a23:	jmp    0x4059e4
  405a25:	sub    eax,0x30250119
  405a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a2b:	scas   al,BYTE PTR es:[edi]
  405a2c:	hlt    
  405a2d:	imul   ecx,DWORD PTR [edi+0x6f],0x7163192a
  405a34:	pop    ecx
  405a35:	test   BYTE PTR ds:[esi-0x2060d689],ah
  405a3c:	ins    BYTE PTR es:[edi],dx
  405a3d:	jg     0x405a7a
  405a3f:	jmp    0x405a3e
  405a41:	pop    ds
  405a42:	out    0x1,al
  405a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a45:	jmp    0x77372163
  405a4a:	test   BYTE PTR [esi],cl
  405a4c:	lods   al,BYTE PTR ds:[esi]
  405a4d:	mov    esp,0x563a3e06
  405a52:	call   0x162:0xddffcd0a
  405a59:	(bad)  
  405a5a:	scas   al,BYTE PTR es:[edi]
  405a5b:	mov    eax,ds:0x225aa39a
  405a60:	imul   esi,eax,0xffffffbd
  405a63:	sbb    DWORD PTR [ebp+0x265eca94],0x66
  405a6a:	mov    ds:0x2dd53ebc,eax
  405a6f:	mov    esp,0x96fe385a
  405a75:	dec    ecx
  405a76:	jle    0x405a9b
  405a78:	in     eax,0x92
  405a7a:	inc    eax
  405a7b:	mov    edx,0x60203208
  405a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a81:	xchg   DWORD PTR [ebx-0x1a],eax
  405a84:	push   esp
  405a85:	jmp    0x405ad1
  405a87:	push   es
  405a88:	push   edx
  405a89:	aad    0x75
  405a8b:	mov    gs,edx
  405a8d:	fild   WORD PTR [esi]
  405a8f:	dec    edi
  405a90:	xchg   edi,eax
  405a91:	adc    BYTE PTR [esi+0x405e93de],0x19
  405a98:	jmp    0xa0707781
  405a9d:	jmp    0x87785015
  405aa2:	xor    al,0xa
  405aa4:	jbe    0x405a99
  405aa6:	add    ebx,ebp
  405aa8:	retf   0x56e4
  405aab:	into   
  405aac:	jbe    0x405a5e
  405aae:	popa   
  405aaf:	into   
  405ab0:	(bad)  
  405ab1:	or     cl,ch
  405ab3:	push   ds
  405ab4:	xor    BYTE PTR [ebx+0x3f],cl
  405ab7:	call   0x5a77:0xed942f43
  405abe:	(bad)  
  405abf:	int3   
  405ac0:	sbb    eax,0x3e8c006c
  405ac5:	in     al,0x4c
  405ac7:	cld    
  405ac8:	dec    ebp
  405ac9:	and    eax,0x323719b7
  405ace:	mov    eax,0x140148ba
  405ad3:	jg     0x405ae0
  405ad5:	dec    ebx
  405ad6:	aaa    
  405ad7:	xchg   ecx,eax
  405ad8:	ror    BYTE PTR [eax+0x4a84e9c7],cl
  405ade:	xchg   ebx,eax
  405adf:	xchg   BYTE PTR [ebp-0x1],bh
  405ae2:	jns    0x405ac6
  405ae4:	and    DWORD PTR [ebp+0x1fac907f],edx
  405aea:	xor    al,0x78
  405aec:	cwde   
  405aed:	sahf   
  405aee:	push   esp
  405aef:	adc    esi,edx
  405af1:	push   0x6424bc88
  405af6:	push   ss
  405af7:	or     DWORD PTR [eax],esp
  405af9:	xchg   ecx,eax
  405afa:	push   ds
  405afb:	rcr    DWORD PTR [ecx+0x72868ab2],cl
  405b01:	clc    
  405b02:	xchg   ebp,eax
  405b03:	aaa    
  405b04:	jns    0x405a94
  405b06:	loop   0x405b15
  405b08:	aaa    
  405b09:	pop    edi
  405b0a:	xlat   BYTE PTR ds:[ebx]
  405b0b:	sub    DWORD PTR [eax],ecx
  405b0d:	pop    es
  405b0e:	jl     0x405b20
  405b10:	jle    0x405b36
  405b12:	cli    
  405b13:	mov    cl,BYTE PTR [edx+0x8]
  405b16:	pop    ds
  405b17:	lea    ebp,[esp+ebx*2-0x5f]
  405b1b:	ror    DWORD PTR [ebx],0x98
  405b1e:	push   esi
  405b1f:	clc    
  405b20:	xor    al,0x30
  405b22:	xor    DWORD PTR [ebx],0x13
  405b25:	pushf  
  405b26:	cmp    ch,BYTE PTR [ebp+eax*4-0x7b]
  405b2a:	fst    st(0)
  405b2c:	rcr    DWORD PTR [esi+0x41],1
  405b2f:	xchg   ecx,eax
  405b30:	inc    ebp
  405b31:	mov    eax,ds:0x4bd4e05c
  405b36:	fiadd  WORD PTR [esi+0x6a344126]
  405b3c:	pop    ecx
  405b3d:	icebp  
  405b3e:	ror    BYTE PTR [ecx],cl
  405b40:	mov    eax,0x57b42f67
  405b45:	icebp  
  405b46:	icebp  
  405b47:	or     edx,DWORD PTR [edi]
  405b49:	test   BYTE PTR [ebp-0x58f42620],cl
  405b4f:	cmp    al,0xcd
  405b51:	jae    0x405b5f
  405b53:	and    ebp,DWORD PTR [ebx+0x6cd4d6c5]
  405b59:	mov    al,ds:0x32812da
  405b5e:	retf   
  405b5f:	mov    edx,ss
  405b61:	add    BYTE PTR [edx-0x13b3b08f],ah
  405b67:	jo     0x405b34
  405b69:	add    DWORD PTR [edi],ecx
  405b6b:	and    esp,DWORD PTR [esi-0x504c67ca]
  405b71:	imul   bh
  405b73:	pushf  
  405b74:	mov    edx,?
  405b76:	out    0x2f,al
  405b78:	and    BYTE PTR [ebp+0x14],ah
  405b7b:	inc    ecx
  405b7c:	mov    fs,WORD PTR ds:0x6c9bb8b7
  405b82:	xchg   edi,edx
  405b84:	jo     0x405b21
  405b86:	dec    ebx
  405b87:	pop    edi
  405b88:	and    al,BYTE PTR [ecx+eax*4+0x2deaf173]
  405b8f:	mov    ds:0xd53f9c3d,eax
  405b94:	sub    ecx,0x6ec4ae93
  405b9a:	hlt    
  405b9b:	and    edi,DWORD PTR ds:0xacaca3db
  405ba1:	add    DWORD PTR [ecx+0x2a355081],0x86fb4a3
  405bab:	std    
  405bac:	lahf   
  405bad:	sbb    BYTE PTR [ebx-0x75570f84],al
  405bb3:	mov    es,WORD PTR [ebx-0x5ec602d9]
  405bb9:	push   0xfffffff9
  405bbb:	cwde   
  405bbc:	ss stos BYTE PTR es:[edi],al
  405bbe:	(bad)  
  405bbf:	ficomp DWORD PTR [ebx]
  405bc1:	jmp    0x7d09674f
  405bc6:	out    0x31,eax
  405bc8:	outs   dx,DWORD PTR ds:[esi]
  405bc9:	jmp    0x78aa650
  405bce:	call   0xff6e212d
  405bd3:	jl     0x405b74
  405bd5:	jb     0x405b70
  405bd7:	adc    ah,dh
  405bd9:	adc    al,0x44
  405bdb:	arpl   WORD PTR [eax],di
  405bdd:	jbe    0x405bed
  405bdf:	mov    edi,0x202dd46b
  405be4:	sub    eax,0x96603106
  405be9:	dec    edx
  405bea:	scas   al,BYTE PTR es:[edi]
  405beb:	rol    edi,1
  405bed:	xlat   BYTE PTR ds:[ebx]
  405bee:	fsubr  st,st(0)
  405bf0:	inc    ebx
  405bf1:	lods   al,BYTE PTR ds:[esi]
  405bf2:	rol    BYTE PTR [ebx+0x34],0x6c
  405bf6:	aam    0x31
  405bf8:	lods   eax,DWORD PTR ds:[esi]
  405bf9:	dec    ecx
  405bfa:	or     DWORD PTR [ebx-0x2c],ebp
  405bfd:	jnp    0x405c1a
  405bff:	mov    ebx,0xfbe8bd57
  405c04:	mov    ah,0xf3
  405c06:	cmp    DWORD PTR [esi-0x74b70adf],eax
  405c0c:	sub    al,0xa2
  405c0e:	les    edx,FWORD PTR [edx+0xf]
  405c11:	mov    DWORD PTR [ebx+0x55c1d85a],edi
  405c17:	sub    ebx,edx
  405c19:	push   es
  405c1a:	add    DWORD PTR [eax],ebp
  405c1c:	xor    cl,dh
  405c1e:	clc    
  405c1f:	test   DWORD PTR [ecx],esp
  405c21:	in     eax,0x1
  405c23:	popa   
  405c24:	xor    edx,DWORD PTR [edx-0x25cada50]
  405c2a:	sub    dl,cl
  405c2c:	mov    DWORD PTR [ebx],ebx
  405c2e:	sub    ch,BYTE PTR [edx]
  405c30:	dec    edx
  405c31:	(bad)  
  405c32:	or     DWORD PTR ds:[ecx-0x420cb5c4],0xffffffd8
  405c3a:	repnz inc esi
  405c3c:	pop    esi
  405c3d:	lock es aas 
  405c40:	dec    eax
  405c41:	add    DWORD PTR [eax-0x5],0xcf32e127
  405c48:	mov    WORD PTR [edi-0x7b355c37],gs
  405c4e:	inc    eax
  405c4f:	pusha  
  405c50:	xlat   BYTE PTR ds:[ebx]
  405c51:	mov    ebp,0x8bbad99b
  405c56:	and    esp,DWORD PTR ds:0xa90b026d
  405c5c:	or     DWORD PTR [ecx],0x3bf2c3f0
  405c62:	push   es
  405c63:	ins    BYTE PTR es:[edi],dx
  405c64:	(bad)  
  405c65:	sub    ch,BYTE PTR [esi+edi*8-0x245c0c0]
  405c6c:	adc    dh,ah
  405c6e:	xchg   edx,eax
  405c6f:	pop    eax
  405c70:	xchg   esi,eax
  405c71:	ret    
  405c72:	mov    edx,0x8aae0cf8
  405c77:	xchg   edx,eax
  405c78:	sbb    eax,0x59f0e436
  405c7d:	pop    edx
  405c7e:	fiadd  WORD PTR [ebx+0x53c9e21]
  405c84:	enter  0x9d3e,0x71
  405c88:	rol    BYTE PTR [eax],cl
  405c8a:	stc    
  405c8b:	xor    al,0xbd
  405c8d:	retf   
  405c8e:	retf   
  405c8f:	ds jnp 0x405c1d
  405c92:	mov    edx,0x23ee3757
  405c97:	or     eax,0x40294bdd
  405c9c:	(bad)  
  405c9d:	pushf  
  405c9e:	movsx  edx,cx
  405ca1:	iret   
  405ca2:	neg    dh
  405ca4:	iret   
  405ca5:	push   ebx
  405ca6:	mov    eax,ds:0x94136bc5
  405cab:	sbb    BYTE PTR [edi+0x50],0x23
  405caf:	or     ah,bh
  405cb1:	dec    esi
  405cb2:	add    eax,0xe99e4528
  405cb7:	scas   eax,DWORD PTR es:[edi]
  405cb8:	out    0x58,al
  405cba:	and    bl,0xf1
  405cbd:	rol    BYTE PTR [esi],cl
  405cbf:	bnd jmp 0x405c4e
  405cc2:	das    
  405cc3:	loope  0x405ca0
  405cc5:	fs in  al,dx
  405cc7:	jle    0x405c82
  405cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cca:	cld    
  405ccb:	jecxz  0x405cd7
  405ccd:	inc    ecx
  405cce:	es ret 0x90f0
  405cd2:	sahf   
  405cd3:	pop    esp
  405cd4:	xchg   edx,eax
  405cd5:	pop    ecx
  405cd6:	repz fs cs repz pop esp
  405cdb:	xchg   ebp,eax
  405cdc:	mov    edi,0x6754188c
  405ce1:	es mov edi,0xb4e180bb
  405ce7:	inc    esp
  405ce8:	xlat   BYTE PTR ds:[ebx]
  405ce9:	or     al,0xdf
  405ceb:	fist   WORD PTR [ebp+0x0]
  405cee:	sub    DWORD PTR [ebp-0x2057b21d],edx
  405cf4:	jl     0x405cd0
  405cf6:	lds    eax,FWORD PTR [esp+eax*1-0x3532bef0]
  405cfd:	pop    ds
  405cfe:	mov    ds:0x21dbc807,eax
  405d03:	inc    ebp
  405d04:	dec    esp
  405d05:	jle    0x405d13
  405d07:	loop   0x405d3b
  405d09:	push   esi
  405d0a:	rcl    ah,1
  405d0c:	and    al,0x2f
  405d0e:	aam    0xd5
  405d10:	call   0xb2fd:0x7a81e4fa
  405d17:	sbb    eax,0x4954da37
  405d1c:	dec    eax
  405d1d:	fstp   DWORD PTR [ebx]
  405d1f:	xchg   BYTE PTR [ebx+ecx*1+0x1ce73148],dl
  405d26:	es ja  0x405d96
  405d29:	outs   dx,DWORD PTR ds:[esi]
  405d2a:	jmp    0x35c4c00e
  405d2f:	jmp    0x26725001
  405d34:	call   0x8c375ec9
  405d39:	and    edx,ebp
  405d3b:	or     DWORD PTR [edi],0x99f559ac
  405d41:	hlt    
  405d42:	arpl   WORD PTR ss:[ebx+0x72],ax
  405d46:	out    0xb8,eax
  405d48:	fwait
  405d49:	adc    eax,0x52095f79
  405d4e:	aam    0xbc
  405d50:	imul   edi,DWORD PTR [ebx],0x2c
  405d53:	mov    edx,0xdd3c915f
  405d58:	(bad)  
  405d59:	mov    edi,ebp
  405d5b:	fmul   st(7),st
  405d5d:	xor    eax,0xac1ed947
  405d62:	dec    ebp
  405d63:	xchg   edi,eax
  405d64:	retf   0x733c
  405d67:	leave  
  405d68:	jmp    0xea74:0x23e068f1
  405d6f:	dec    ecx
  405d70:	das    
  405d71:	xor    ebx,0x1d
  405d74:	adc    BYTE PTR [esi-0x780f13f2],ah
  405d7a:	outs   dx,DWORD PTR ds:[esi]
  405d7b:	jne    0x405daa
  405d7d:	sbb    al,0xcf
  405d7f:	out    dx,al
  405d80:	mov    edx,0x2896f934
  405d85:	inc    ecx
  405d86:	scas   eax,DWORD PTR es:[edi]
  405d87:	mov    ds:0x6b8e45fa,eax
  405d8c:	fs popa 
  405d8e:	clc    
  405d8f:	lahf   
  405d90:	iret   
  405d91:	mov    eax,ds:0xe52868b5
  405d96:	mov    edx,eax
  405d98:	and    al,0xd0
  405d9a:	push   esp
  405d9b:	bound  ebx,QWORD PTR [edx]
  405d9d:	sub    al,0xcb
  405d9f:	jp     0x405dca
  405da1:	shr    BYTE PTR ds:[ecx+0x38],1
  405da5:	push   edx
  405da6:	cld    
  405da7:	stc    
  405da8:	outs   dx,BYTE PTR gs:[esi]
  405daa:	nop
  405dab:	jle    0x405dc8
  405dad:	popf   
  405dae:	rcl    DWORD PTR [esi-0x14473549],0x3a
  405db5:	out    dx,eax
  405db6:	in     al,0x1e
  405db8:	loope  0x405df8
  405dba:	mov    ch,0xd8
  405dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dbd:	xchg   esi,eax
  405dbe:	sub    bl,bh
  405dc0:	or     al,0xe
  405dc2:	dec    ebx
  405dc3:	cmp    al,0xa3
  405dc5:	fs enter 0x52e7,0xce
  405dca:	mov    eax,cs:0xfb644bf1
  405dd0:	ins    BYTE PTR es:[edi],dx
  405dd1:	adc    esp,DWORD PTR [ebp+0x2af8b256]
  405dd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dd8:	pop    ss
  405dd9:	fsub   DWORD PTR [ebx+0x34]
  405ddc:	scas   al,BYTE PTR es:[edi]
  405ddd:	inc    eax
  405dde:	pop    edi
  405ddf:	jmp    0x405dfd
  405de1:	ja     0x405d98
  405de3:	xchg   esp,eax
  405de4:	scas   eax,DWORD PTR es:[edi]
  405de5:	jp     0x405e4a
  405de7:	jle    0x405e29
  405de9:	ja     0x405e13
  405deb:	xchg   ah,dl
  405ded:	or     DWORD PTR [edx+0x1],0x11
  405df1:	pop    ecx
  405df2:	dec    esi
  405df3:	les    esi,FWORD PTR [ebp+0x3a]
  405df6:	ffree  st(0)
  405df8:	ins    BYTE PTR es:[edi],dx
  405df9:	les    ebx,FWORD PTR [edi-0x271a5a93]
  405dff:	mov    al,0x79
  405e01:	cdq    
  405e02:	ja     0x405e72
  405e04:	push   ecx
  405e05:	inc    ebx
  405e06:	gs (bad) 
  405e08:	daa    
  405e09:	daa    
  405e0a:	ficomp DWORD PTR [eax-0x34748738]
  405e10:	fcmovnb st,st(7)
  405e12:	int3   
  405e13:	jbe    0x405d9a
  405e15:	jae    0x405de5
  405e17:	popf   
  405e18:	inc    ecx
  405e19:	test   eax,0xf93bfe8c
  405e1e:	out    0x9a,eax
  405e20:	pusha  
  405e21:	(bad)  
  405e23:	push   esi
  405e24:	add    DWORD PTR [edx+0x43],0xffffffdf
  405e28:	pop    eax
  405e29:	imul   edx,DWORD PTR [eax+0x8],0x70
  405e2d:	adc    BYTE PTR [eax],bh
  405e2f:	and    cl,ch
  405e31:	mov    dh,0xa0
  405e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e34:	mov    edi,0xc838b654
  405e39:	xor    DWORD PTR ds:0xd1ce43ed,0xffffffd3
  405e40:	int3   
  405e41:	call   0xeb05:0xf13baa6e
  405e48:	cmc    
  405e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e4b:	in     eax,dx
  405e4c:	neg    BYTE PTR [ebp+0x65]
  405e4f:	sub    al,bh
  405e51:	shl    ebx,0x77
  405e54:	cmp    al,0xeb
  405e56:	(bad)  
  405e57:	mov    fs,WORD PTR [esi-0x3f90c1fd]
  405e5d:	mov    WORD PTR [ebx+0x7cc3d7d0],cs
  405e63:	or     eax,0xc77e8ec5
  405e68:	aad    0xf7
  405e6a:	pop    ss
  405e6b:	mov    dl,0x6a
  405e6d:	aaa    
  405e6e:	xchg   ebp,eax
  405e6f:	mov    eax,ds:0x31bbfd0d
  405e74:	jno    0x405ebb
  405e76:	sub    dl,BYTE PTR [ebp+0x150f4af6]
  405e7c:	stos   BYTE PTR es:[edi],al
  405e7d:	adc    dl,BYTE PTR [ebx+0x546347b1]
  405e83:	adc    eax,0x762d0227
  405e88:	xor    al,0x21
  405e8a:	dec    esi
  405e8b:	outs   dx,DWORD PTR ds:[esi]
  405e8c:	sbb    DWORD PTR [edi],ebx
  405e8e:	lahf   
  405e8f:	or     eax,0xa1529ee0
  405e94:	jno    0x405e2c
  405e96:	sahf   
  405e97:	mov    ch,0xdb
  405e99:	leave  
  405e9a:	stos   DWORD PTR es:[edi],eax
  405e9b:	outs   dx,DWORD PTR ds:[esi]
  405e9c:	push   ebx
  405e9d:	xor    ebp,ebp
  405e9f:	sahf   
  405ea0:	outs   dx,BYTE PTR ds:[esi]
  405ea1:	adc    esp,esi
  405ea3:	jle    0x405f03
  405ea5:	jmp    FWORD PTR [eax-0x17]
  405ea8:	mov    ecx,0xc41e0d0
  405ead:	in     al,dx
  405eae:	push   esp
  405eaf:	jb     0x405eb2
  405eb1:	mov    esp,0x3ef47b7c
  405eb6:	push   ebx
  405eb7:	push   ds
  405eb8:	dec    ebx
  405eb9:	inc    ebx
  405eba:	cmp    esi,DWORD PTR ds:0x772317df
  405ec0:	jmp    0x3a4c:0x28bdcef
  405ec7:	xor    DWORD PTR [edx],0xa95fd01b
  405ecd:	icebp  
  405ece:	ret    0xd5c0
  405ed1:	add    eax,0xdb1159fc
  405ed6:	cli    
  405ed7:	(bad)  
  405ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed9:	xchg   edi,eax
  405eda:	repnz sub ch,bl
  405edd:	add    DWORD PTR [esi*8-0x5b005919],esp
  405ee4:	or     DWORD PTR [esi],0x9fb5051e
  405eea:	mov    al,ds:0xec378ef6
  405eef:	push   edi
  405ef0:	ds add ah,cl
  405ef3:	pop    esi
  405ef4:	ins    DWORD PTR es:[edi],dx
  405ef5:	pop    ecx
  405ef6:	mov    DWORD PTR [ecx],esp
  405ef8:	inc    esi
  405ef9:	mov    eax,ds:0x35de5b21
  405efe:	jbe    0x405e98
  405f00:	add    BYTE PTR [edi],0x8f
  405f03:	mov    edi,0x916e754d
  405f08:	cmp    DWORD PTR [esi-0x37815db3],ebx
  405f0e:	pop    ebx
  405f0f:	push   ecx
  405f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f11:	fld    DWORD PTR [esi-0x6279e795]
  405f17:	mov    edi,0x75aafdd4
  405f1c:	push   ds
  405f1d:	sbb    al,0x74
  405f1f:	mov    ch,0x38
  405f21:	in     al,dx
  405f22:	mov    BYTE PTR ds:0x361c7a73,dl
  405f28:	jmp    0xcf68:0xd7f1241
  405f2f:	ja     0x405f24
  405f31:	imul   eax,eax,0x69
  405f34:	mov    di,0x3a44
  405f38:	mov    bh,0xcf
  405f3a:	mov    dl,BYTE PTR [esi-0x29e5dd55]
  405f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f41:	jnp    0x405fa5
  405f43:	(bad)  
  405f44:	popf   
  405f45:	push   0xb9934f91
  405f4a:	inc    edi
  405f4b:	or     dl,ah
  405f4d:	loope  0x405f09
  405f4f:	and    DWORD PTR [ebp-0x4e9a42fa],esi
  405f55:	mov    esp,0x43d3035e
  405f5a:	in     al,dx
  405f5b:	dec    esi
  405f5c:	push   ds
  405f5d:	data16 sub BYTE PTR [edi-0x5],cl
  405f61:	rcr    DWORD PTR [edi+eax*8],0x27
  405f65:	fstp   st(0)
  405f67:	dec    edx
  405f68:	js     0x405fbb
  405f6a:	or     eax,0xfe338cd2
  405f6f:	pop    ss
  405f70:	nop
  405f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f72:	gs stos DWORD PTR es:[edi],eax
  405f74:	sub    al,0x10
  405f76:	rcl    BYTE PTR [edi-0x73],1
  405f79:	enter  0x7a5b,0xf4
  405f7d:	xor    eax,esi
  405f7f:	push   edx
  405f80:	sbb    eax,edi
  405f82:	(bad)  
  405f84:	ins    DWORD PTR es:[edi],dx
  405f85:	repnz aas 
  405f87:	jmp    0xf552ecd6
  405f8c:	jle    0x405f85
  405f8e:	adc    BYTE PTR [ecx],bl
  405f90:	mov    cl,0x5
  405f92:	add    cl,al
  405f94:	scas   al,BYTE PTR es:[edi]
  405f95:	es retf 
  405f97:	arpl   WORD PTR [esi-0x508f65f0],di
  405f9d:	mov    ss,WORD PTR [edi-0x24]
  405fa0:	jno    0x405f9f
  405fa2:	cmp    DWORD PTR [ebp+0x161506fb],edx
  405fa8:	(bad)  
  405fa9:	sub    ebp,DWORD PTR [ecx-0x7d]
  405fac:	push   0x7bf3bbfd
  405fb1:	dec    ebp
  405fb2:	call   0x9c3280a0
  405fb7:	jns    0x405f54
  405fb9:	sti    
  405fba:	test   BYTE PTR [edx],0xfd
  405fbd:	scas   eax,DWORD PTR es:[edi]
  405fbe:	sbb    al,0x93
  405fc0:	dec    eax
  405fc1:	jnp    0x405fbf
  405fc3:	adc    DWORD PTR [edx+0x27a31fd3],ebx
  405fc9:	sbb    al,0x75
  405fcb:	push   edx
  405fcc:	mul    DWORD PTR ds:0x1b561fe0
  405fd2:	cmp    eax,0x3f7477d9
  405fd7:	sar    al,cl
  405fd9:	add    BYTE PTR [ecx-0x32],0x96
  405fdd:	fwait
  405fde:	and    eax,0xa00a65d0
  405fe3:	adc    DWORD PTR [ebp+0x4379e26c],0x62
  405fea:	and    dl,0x13
  405fed:	mov    DWORD PTR [edx+0x23],edi
  405ff0:	inc    edx
  405ff1:	test   al,0x92
  405ff3:	mov    dh,0x2b
  405ff5:	add    BYTE PTR gs:[esi],dl
  405ff8:	mov    al,BYTE PTR [ecx]
  405ffa:	addr16 sti 
  405ffc:	mov    edi,0x30b7b5de
  406001:	retf   
  406002:	add    cl,BYTE PTR [eax]
  406004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406005:	dec    edx
  406006:	jg     0x405fc6
  406008:	push   ss
  406009:	cmc    
  40600a:	mov    ds:0xd25393c8,eax
  40600f:	push   ebx
  406010:	jle    0x405fc2
  406012:	inc    eax
  406013:	xchg   ch,dh
  406015:	out    0x9c,al
  406017:	icebp  
  406018:	mov    esi,0x594c4def
  40601d:	aas    
  40601e:	dec    esp
  40601f:	jp     0x405fa2
  406021:	(bad)  
  406022:	jne    0x405fb7
  406024:	(bad)  
  406025:	leave  
  406026:	shl    edi,0x98
  406029:	add    edx,DWORD PTR [ebx]
  40602b:	or     ebp,DWORD PTR [edx]
  40602d:	push   0x31
  40602f:	push   ecx
  406030:	xor    BYTE PTR ds:0x1a6d5180,0xd6
  406037:	into   
  406038:	inc    ebx
  406039:	fsub   QWORD PTR ds:0xed24af0c
  40603f:	test   BYTE PTR [ebx-0x76],al
  406042:	xchg   ebx,eax
  406043:	int    0xcb
  406045:	out    dx,eax
  406046:	mov    eax,ds:0xd994ef2b
  40604b:	jmp    0xb606:0x7d75a11
  406052:	or     eax,0xe0895957
  406057:	div    BYTE PTR [esi+0x13ba62b8]
  40605d:	scas   eax,DWORD PTR es:[edi]
  40605e:	mov    dh,0x1c
  406060:	(bad)  
  406061:	mov    bh,0x33
  406063:	and    bh,ah
  406065:	imul   edx,DWORD PTR [edi-0x3d58c34a],0xc8248799
  40606f:	mov    ss,WORD PTR [ebx]
  406071:	cmc    
  406072:	and    eax,0x4f591c52
  406077:	sub    bh,BYTE PTR [ecx-0x25]
  40607a:	cdq    
  40607b:	(bad)  
  40607c:	outs   dx,BYTE PTR ds:[esi]
  40607d:	mov    ecx,0x2e5fdc35
  406082:	adc    al,0x97
  406084:	adc    ecx,ebp
  406086:	in     eax,dx
  406087:	test   eax,0x827bc37d
  40608c:	mov    al,ds:0x2cd8f4fa
  406091:	test   eax,0xda60f5d9
  406096:	or     BYTE PTR [edi-0x611d20c8],dl
  40609c:	xchg   edi,eax
  40609d:	cmc    
  40609e:	(bad)  
  40609f:	scas   eax,DWORD PTR es:[edi]
  4060a0:	repz pop ebx
  4060a2:	ins    DWORD PTR es:[edi],dx
  4060a3:	shl    DWORD PTR [edi+0x30],0xaa
  4060a7:	and    BYTE PTR [ebx-0x6294e464],cl
  4060ad:	pushf  
  4060ae:	jmp    0x3c7:0x6ca314d7
  4060b5:	cmc    
  4060b6:	hlt    
  4060b7:	cmp    BYTE PTR [ebp+ecx*4-0x415816aa],dl
  4060be:	sub    BYTE PTR [ebx],ch
  4060c0:	mov    edx,0x7167bc7a
  4060c5:	mov    edi,0x172f8c13
  4060ca:	and    edi,DWORD PTR [ecx-0x6470b0d1]
  4060d0:	xchg   ecx,eax
  4060d1:	out    dx,al
  4060d2:	repnz adc DWORD PTR [ebx-0x743d50f1],ebp
  4060d9:	push   ebp
  4060da:	clc    
  4060db:	mov    al,BYTE PTR [eax+edx*1]
  4060de:	mov    BYTE PTR [ebp-0x1],al
  4060e1:	mov    eax,DWORD PTR [ebp-0x30]
  4060e4:	mov    edx,DWORD PTR [ebp-0xc]
  4060e7:	xor    eax,esi
  4060e9:	add    eax,edi
  4060eb:	imul   eax,edx
  4060ee:	mov    edx,DWORD PTR [ebp-0x28]
  4060f1:	xor    edx,esi
  4060f3:	add    eax,edx
  4060f5:	mov    edx,DWORD PTR [ebp-0x8]
  4060f8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  406100:	mov    edx,DWORD PTR [ebp-0x50]
  406103:	xor    edx,esi
  406105:	lea    eax,[edx+eax*1+0x3272ef]
  40610c:	movzx  edx,BYTE PTR [ebp-0x1]
  406110:	xor    edx,eax
  406112:	mov    BYTE PTR [ebp-0x1],dl
  406115:	mov    al,BYTE PTR [ebp-0x1]
  406118:	mov    edx,DWORD PTR [ebp-0x30]
  40611b:	mov    ebx,DWORD PTR [ebp-0xc]
  40611e:	xor    edx,esi
  406120:	add    edx,edi
  406122:	imul   edx,ebx
  406125:	mov    ebx,DWORD PTR [ebp-0x8]
  406128:	mov    BYTE PTR [edx+ebx*1],al
  40612b:	mov    eax,DWORD PTR [ebp-0x40]
  40612e:	mov    edx,DWORD PTR [ebp-0x28]
  406131:	xor    eax,esi
  406133:	xor    edx,esi
  406135:	add    eax,edi
  406137:	add    edx,edi
  406139:	imul   eax,edx
  40613c:	add    eax,DWORD PTR [ebp-0xc]
  40613f:	mov    DWORD PTR [ebp-0xc],eax
  406142:	mov    eax,DWORD PTR [ebp-0xc]
  406145:	mov    edx,DWORD PTR [ebp-0x18]
  406148:	cmp    edx,eax
  40614a:	jb     0x40197d
  406150:	mov    eax,DWORD PTR [ebp-0x28]
  406153:	mov    edx,DWORD PTR [ebp-0x18]
  406156:	xor    eax,esi
  406158:	add    eax,edi
  40615a:	imul   eax,edx
  40615d:	jmp    0x4084cd
  406162:	daa    
  406163:	add    edi,DWORD PTR [ebx]
  406165:	in     al,dx
  406166:	cmp    esp,DWORD PTR [edi+eax*4-0x6cabb385]
  40616d:	push   edi
  40616e:	xchg   edx,eax
  40616f:	adc    ebp,DWORD PTR [ebx+edi*1-0x24]
  406173:	cmp    al,0x7a
  406175:	jp     0x4061a6
  406177:	pop    edi
  406178:	jp     0x4061f4
  40617a:	mov    ch,0xa4
  40617c:	repz sub esp,DWORD PTR [ebx]
  40617f:	jl     0x4061fb
  406181:	ja     0x4061e9
  406183:	shr    DWORD PTR [edi-0x10],0xc6
  406187:	stos   BYTE PTR es:[edi],al
  406188:	stos   BYTE PTR es:[edi],al
  406189:	jbe    0x4061e6
  40618b:	shl    BYTE PTR [ebx],0x63
  40618e:	cmp    eax,0x7a612322
  406193:	cmp    eax,0xcac072cc
  406198:	mov    ah,0xc1
  40619a:	mov    ds:0x958b0a37,al
  40619f:	xchg   BYTE PTR [esi],bh
  4061a1:	rol    DWORD PTR [ebx+ebx*4-0x6365be60],1
  4061a8:	lds    edi,FWORD PTR [ecx+0x2f2f51d5]
  4061ae:	pushf  
  4061af:	shl    BYTE PTR [edx],cl
  4061b1:	sbb    dl,ch
  4061b3:	sub    edi,esi
  4061b5:	mov    ds:0xdb18e511,eax
  4061ba:	push   ss
  4061bb:	sahf   
  4061bc:	pop    ecx
  4061bd:	inc    ecx
  4061be:	or     al,0x40
  4061c0:	ins    DWORD PTR es:[edi],dx
  4061c1:	ja     0x40622f
  4061c3:	call   0x2044:0xeeed8452
  4061ca:	xchg   edx,eax
  4061cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061cc:	stos   DWORD PTR es:[edi],eax
  4061cd:	xchg   esp,eax
  4061ce:	and    ebp,DWORD PTR ds:0x4a96c62f
  4061d4:	fisub  WORD PTR [eax-0x3ac46ef5]
  4061da:	lahf   
  4061db:	aam    0xe3
  4061dd:	iret   
  4061de:	loop   0x40618d
  4061e0:	mov    ah,0xdf
  4061e2:	rcr    al,cl
  4061e4:	and    esi,DWORD PTR ds:0x42cb0007
  4061ea:	jmp    0x81d9333e
  4061ef:	cmp    DWORD PTR [ecx],ebp
  4061f1:	out    dx,eax
  4061f2:	pusha  
  4061f3:	mov    bh,0xa3
  4061f5:	sbb    bl,al
  4061f7:	xchg   edi,eax
  4061f8:	test   BYTE PTR [ebx+0x38],dh
  4061fb:	xchg   DWORD PTR [esi+0x17ddae9b],esi
  406201:	pop    ds
  406202:	out    0xfc,eax
  406204:	dec    ebx
  406205:	iret   
  406206:	pop    es
  406207:	sahf   
  406208:	inc    BYTE PTR [esp+ecx*2-0x55]
  40620c:	dec    eax
  40620d:	fistp  QWORD PTR [edx]
  40620f:	outs   dx,DWORD PTR ds:[esi]
  406210:	mov    ch,0x27
  406212:	pusha  
  406213:	mov    bl,0x5b
  406215:	(bad)
  406219:	xchg   esi,eax
  40621a:	push   ds
  40621b:	imul   ebp,DWORD PTR [edi-0x58cff9ae],0x1b289459
  406225:	mov    ebp,0x56df3a70
  40622a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40622b:	mov    bh,0xb
  40622d:	jno    0x4061db
  40622f:	push   edi
  406230:	jmp    0x406283
  406232:	jg     0x40620f
  406234:	lock js 0x4061e0
  406237:	mov    ebx,0x72738497
  40623c:	jp     0x406272
  40623e:	scas   al,BYTE PTR es:[edi]
  40623f:	pushf  
  406240:	aam    0xf3
  406242:	add    esp,DWORD PTR ds:0x17cad26a
  406248:	or     BYTE PTR ds:0xc709f18d,bh
  40624e:	cmp    esp,DWORD PTR [ebx]
  406250:	out    dx,eax
  406251:	leave  
  406252:	push   0x4
  406254:	clc    
  406255:	(bad)  
  406256:	aam    0x64
  406258:	mov    ah,al
  40625a:	or     eax,0x100eafa8
  40625f:	mov    BYTE PTR [ecx+eax*8],cl
  406262:	jp     0x4062d8
  406264:	shl    BYTE PTR [ebx+0x66c6a285],0x62
  40626b:	dec    eax
  40626c:	push   ecx
  40626d:	inc    esp
  40626e:	(bad)  
  40626f:	popf   
  406270:	enter  0xb627,0x9c
  406274:	or     DWORD PTR [edi+0xe],eax
  406277:	xchg   edi,eax
  406278:	mov    ebp,?
  40627a:	retf   
  40627b:	shr    DWORD PTR [ebx],1
  40627d:	in     al,dx
  40627e:	in     al,0x64
  406280:	int    0x6c
  406282:	add    al,0x3e
  406284:	and    WORD PTR ss:[edi-0x3d],sp
  406289:	adc    eax,0x762bddc
  40628e:	xchg   ebp,eax
  40628f:	(bad)  [edi]
  406291:	sbb    eax,0x30df36a4
  406296:	(bad)  
  406298:	inc    edx
  406299:	aas    
  40629a:	inc    edi
  40629b:	push   ds
  40629c:	mov    al,BYTE PTR [esp+esi*2-0x4f]
  4062a0:	jmp    0x1ad3:0xc5a24a53
  4062a7:	add    eax,0x4b2c72e3
  4062ac:	lock adc bh,BYTE PTR ds:0x6bfe30f5
  4062b3:	je     0x40623c
  4062b5:	inc    edx
  4062b6:	push   ss
  4062b7:	xor    ah,BYTE PTR [edi]
  4062b9:	inc    edx
  4062ba:	scas   al,BYTE PTR es:[edi]
  4062bb:	add    BYTE PTR [edx+eiz*1-0x526265b1],al
  4062c2:	fldenv [ebx]
  4062c4:	lods   eax,DWORD PTR ds:[esi]
  4062c5:	mov    bh,0xd3
  4062c7:	xor    edx,DWORD PTR [ecx]
  4062c9:	dec    edi
  4062ca:	xlat   BYTE PTR ds:[ebx]
  4062cb:	jnp    0x406310
  4062cd:	sbb    edi,DWORD PTR [esi]
  4062cf:	imul   ebp,DWORD PTR ds:0x8d809779,0xffffffed
  4062d6:	mov    ah,0x6f
  4062d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062d9:	aad    0x36
  4062db:	popf   
  4062dc:	and    eax,0x3cd6d6b6
  4062e1:	fstp   QWORD PTR ds:0x87dc62bf
  4062e7:	into   
  4062e8:	cmp    al,0x4e
  4062ea:	pop    ds
  4062eb:	cmp    BYTE PTR [edi-0x1441a3ab],dl
  4062f1:	aaa    
  4062f2:	mov    ch,0xb0
  4062f4:	in     al,0xa0
  4062f6:	hlt    
  4062f7:	mov    al,ds:0x72558125
  4062fc:	push   cs
  4062fd:	xchg   edi,eax
  4062fe:	mov    WORD PTR [ecx],?
  406300:	cmp    ebp,DWORD PTR [edi-0x583c39ca]
  406306:	jne    0x406318
  406308:	mov    ah,0xd4
  40630a:	sbb    ecx,esp
  40630c:	push   edx
  40630d:	in     al,0x37
  40630f:	dec    esp
  406310:	loop   0x40634e
  406312:	inc    ecx
  406313:	ret    
  406314:	sbb    BYTE PTR [edi+edi*1-0x58],bh
  406318:	mov    DWORD PTR [edi-0x51a20486],edx
  40631e:	add    BYTE PTR [ebp+0x20],dl
  406321:	mov    bl,0xba
  406323:	push   edi
  406324:	xchg   DWORD PTR [ecx],ebx
  406326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406327:	inc    ecx
  406328:	js     0x406387
  40632a:	mov    dh,0xd5
  40632c:	mov    edi,0x4cfda4ff
  406331:	xor    BYTE PTR [ebp+0x53a99f86],0xec
  406338:	nop
  406339:	xchg   ebx,eax
  40633a:	push   eax
  40633b:	cmc    
  40633c:	sub    edi,ebp
  40633e:	xchg   BYTE PTR [eax-0xc],cl
  406341:	getsec 
  406343:	les    edi,FWORD PTR es:[ebp+0x5a2bf6c0]
  40634a:	mov    esi,0x2f20c600
  40634f:	icebp  
  406350:	fcomp  QWORD PTR [eax+0x76]
  406353:	cmp    al,0x81
  406355:	inc    edi
  406356:	xor    esp,DWORD PTR [esi-0x36bab822]
  40635c:	int    0xc0
  40635e:	dec    ecx
  40635f:	jbe    0x4063cf
  406361:	xchg   esi,eax
  406362:	mov    gs:0x3d10ee4d,eax
  406368:	inc    ebp
  406369:	out    0x5a,eax
  40636b:	in     eax,dx
  40636c:	mov    al,ds:0xf575e5b8
  406371:	sub    DWORD PTR [edi-0x57],esi
  406374:	sbb    BYTE PTR [eax+ebx*2-0x65fd7dc2],ah
  40637b:	mov    esp,0xdb623878
  406380:	sub    al,0x5b
  406382:	ret    
  406383:	and    edx,DWORD PTR [esi-0x6]
  406386:	dec    ecx
  406387:	imul   ecx,esp,0x5c
  40638a:	popa   
  40638b:	lods   al,BYTE PTR ds:[esi]
  40638c:	je     0x406341
  40638e:	bound  esi,QWORD PTR [eax]
  406390:	call   0x100ee931
  406395:	inc    ecx
  406396:	fwait
  406397:	dec    ecx
  406398:	mov    ebx,0xde4b9d3d
  40639d:	mov    ah,BYTE PTR [edi+0x24]
  4063a0:	and    DWORD PTR [ebx+0x76],esi
  4063a3:	leave  
  4063a4:	cmp    eax,eax
  4063a6:	mov    ebp,0xf6b7546a
  4063ab:	push   0x36f81771
  4063b0:	adc    eax,DWORD PTR [edi]
  4063b2:	cmp    dl,BYTE PTR [edx+0x48bd22db]
  4063b8:	(bad)  
  4063b9:	sti    
  4063ba:	repnz inc eax
  4063bc:	daa    
  4063bd:	cdq    
  4063be:	nop
  4063bf:	lods   eax,DWORD PTR ds:[esi]
  4063c0:	js     0x406346
  4063c2:	clc    
  4063c3:	adc    al,0x35
  4063c5:	jmp    0xbc07d5e2
  4063ca:	sub    DWORD PTR [ebp+0x20],ebx
  4063cd:	jl     0x406356
  4063cf:	enter  0xa994,0x8
  4063d3:	adc    BYTE PTR [edx+0x12818242],ch
  4063d9:	mov    bl,0x6c
  4063db:	(bad)  
  4063dc:	jmp    ebx
  4063de:	xchg   edi,eax
  4063df:	and    BYTE PTR [edi],cl
  4063e1:	sub    BYTE PTR [edi-0x1e85f70],cl
  4063e7:	push   esp
  4063e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e9:	shr    BYTE PTR [ecx],cl
  4063eb:	push   esi
  4063ec:	cwde   
  4063ed:	ror    BYTE PTR [ecx],0xe2
  4063f0:	sbb    eax,0xadae3748
  4063f5:	mov    bh,0xb6
  4063f7:	adc    ecx,DWORD PTR [ebx]
  4063f9:	inc    ecx
  4063fa:	adc    BYTE PTR ds:[esi-0x2a15b354],dl
  406401:	jb     0x406481
  406403:	fcomp  DWORD PTR [edx]
  406405:	xor    cl,BYTE PTR [ebp+0x2ed32f1f]
  40640b:	or     al,0xbd
  40640d:	aam    0x66
  40640f:	mov    cl,0x95
  406411:	adc    eax,0xce70424a
  406416:	int3   
  406417:	inc    esi
  406418:	scas   eax,DWORD PTR es:[edi]
  406419:	xchg   esp,eax
  40641a:	push   edi
  40641b:	mov    ds,WORD PTR [ecx-0x2e08c04f]
  406421:	(bad)  
  406422:	push   ecx
  406423:	test   eax,0x32089652
  406428:	rol    BYTE PTR [ecx+0x7b61bd87],1
  40642e:	jb     0x406415
  406430:	mov    eax,ds:0xaefdd795
  406435:	cld    
  406436:	mov    al,0x70
  406438:	mov    ebx,0x42509288
  40643d:	into   
  40643e:	push   edi
  40643f:	pop    edi
  406440:	or     esp,ebx
  406442:	sbb    esi,ecx
  406444:	push   ebp
  406445:	xchg   edi,eax
  406446:	imul   edi,DWORD PTR [ebp-0x2071bf3d],0xca7aa2e0
  406450:	jg     0x4063de
  406452:	(bad)  
  406453:	adc    edx,DWORD PTR [ecx+0x26]
  406456:	jnp    0x40641d
  406458:	mov    cl,0x2b
  40645a:	rsm    
  40645c:	out    dx,eax
  40645d:	leave  
  40645e:	inc    esi
  406460:	repz hlt 
  406462:	es popa 
  406464:	jp     0x40648e
  406466:	cmp    dl,0x41
  406469:	jnp    0x40640f
  40646b:	sti    
  40646c:	xor    BYTE PTR [esp+edx*1+0x64],bl
  406470:	adc    eax,0x9ad9e48e
  406475:	xchg   ebp,eax
  406476:	ds add al,0xc0
  406479:	in     eax,dx
  40647a:	dec    edx
  40647b:	sbb    edx,DWORD PTR ds:0xd701add5
  406481:	inc    esi
  406482:	jae    0x4064e4
  406484:	ins    BYTE PTR es:[edi],dx
  406485:	jne    0x406442
  406487:	es call 0xa05b7378
  40648d:	or     BYTE PTR [eax],al
  40648f:	dec    esi
  406490:	std    
  406491:	push   ss
  406492:	mov    DWORD PTR [edi],ebp
  406494:	inc    esp
  406495:	shl    DWORD PTR [esi+ecx*4+0x62],1
  406499:	fsub   DWORD PTR [ecx+0x77e2e055]
  40649f:	rol    esi,0xdc
  4064a2:	int    0x36
  4064a4:	xorps  xmm6,XMMWORD PTR [ebx]
  4064a7:	sbb    ah,bl
  4064a9:	jbe    0x4064ce
  4064ab:	sub    dh,BYTE PTR [ebp-0x594d0dfb]
  4064b1:	add    al,0x89
  4064b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064b4:	cmp    ebx,ecx
  4064b6:	(bad)  
  4064b7:	sbb    eax,0x76b455e0
  4064bc:	test   DWORD PTR [ebx],ebx
  4064be:	sub    BYTE PTR [ebx+edx*2-0x69f7d334],ch
  4064c5:	jns    0x40647e
  4064c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c8:	inc    esp
  4064c9:	or     WORD PTR [edi-0x52f7d502],ax
  4064d0:	mov    ds:0xd5b5917a,al
  4064d5:	push   0xbd5e7ce9
  4064da:	jae    0x4064ad
  4064dc:	lock pop es
  4064de:	outs   dx,DWORD PTR ds:[esi]
  4064df:	in     al,dx
  4064e0:	out    dx,al
  4064e1:	jae    0x4064e9
  4064e3:	adc    eax,0x68f03478
  4064e8:	ror    BYTE PTR [edx-0x6f],cl
  4064eb:	retf   0x8ff2
  4064ee:	adc    eax,DWORD PTR [ecx+0x54]
  4064f1:	lahf   
  4064f2:	rcl    BYTE PTR [edi],cl
  4064f4:	std    
  4064f5:	dec    ebx
  4064f6:	ret    0xed9e
  4064f9:	mov    ebx,0x1278be9b
  4064fe:	xchg   esi,eax
  4064ff:	call   0xedc7c5f3
  406504:	enter  0x49f2,0x83
  406508:	pop    es
  406509:	dec    ebx
  40650a:	mov    edx,DWORD PTR [eax-0x223c554b]
  406510:	dec    ebx
  406511:	les    ebx,FWORD PTR [ecx]
  406513:	inc    ecx
  406514:	in     al,0xf9
  406516:	aam    0x77
  406518:	daa    
  406519:	mov    eax,0xb8c4c054
  40651e:	outs   dx,DWORD PTR ds:[esi]
  40651f:	(bad)  
  406520:	stc    
  406521:	enter  0xdfd9,0x7f
  406525:	test   DWORD PTR [ebx+0x37],ebx
  406528:	sbb    eax,0x68c057d6
  40652d:	data16 jae 0x406547
  406530:	cmp    ah,BYTE PTR [esi+0xa0f61b1]
  406536:	test   BYTE PTR [edi+0x2a],bl
  406539:	jp     0x406538
  40653b:	pusha  
  40653c:	mov    dl,0x41
  40653e:	jae    0x4065a9
  406540:	cmp    DWORD PTR [ebx-0x5cd9a7b],ebp
  406546:	arpl   cx,di
  406548:	gs sbb al,0xac
  40654b:	enter  0xdb32,0x8b
  40654f:	sbb    cl,dh
  406551:	(bad)  
  406552:	sub    eax,DWORD PTR [eiz*1-0x4f6ab59c]
  406559:	pushf  
  40655a:	addr16 mov esi,0x112a4c7d
  406560:	stos   DWORD PTR es:[edi],eax
  406561:	and    al,0x68
  406563:	cmp    BYTE PTR [ebx+0x3ac12d8e],ch
  406569:	add    DWORD PTR [eax-0x65],ebx
  40656c:	push   esi
  40656d:	adc    dl,BYTE PTR ds:0xa9b2bb74
  406573:	repnz pusha 
  406575:	push   ebp
  406576:	ja     0x4064f9
  406578:	rcl    BYTE PTR [ebx],1
  40657a:	dec    BYTE PTR [ecx-0x616da29f]
  406580:	or     al,0x5d
  406582:	cmp    edx,DWORD PTR [edi+0x571d4bee]
  406588:	mov    dh,BYTE PTR [ecx+0x57ddca34]
  40658e:	push   ds
  40658f:	xor    BYTE PTR [ecx+0x47],bl
  406592:	stos   DWORD PTR es:[edi],eax
  406593:	sub    eax,0xae0fb5a2
  406598:	push   0x353003ac
  40659d:	adc    al,0x21
  40659f:	cmp    BYTE PTR [edx+0x21],ch
  4065a2:	jmp    0xe06ea0a9
  4065a7:	mov    WORD PTR [ecx],?
  4065a9:	repnz int3 
  4065ab:	xor    DWORD PTR [ecx+esi*8-0x20],edi
  4065af:	out    dx,al
  4065b0:	daa    
  4065b1:	popf   
  4065b2:	sub    al,0x8c
  4065b4:	sti    
  4065b5:	js     0x4065d7
  4065b7:	fcmovu st,st(5)
  4065b9:	dec    esp
  4065ba:	pop    es
  4065bb:	mov    bh,0x3d
  4065bd:	add    eax,ecx
  4065bf:	fstp   QWORD PTR [ebp+0x7d]
  4065c2:	dec    ebp
  4065c3:	dec    esi
  4065c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065c5:	push   edi
  4065c6:	or     eax,ebp
  4065c8:	mov    cs,WORD PTR [eax-0x61219eef]
  4065ce:	dec    edx
  4065cf:	adc    eax,0x5fd31d24
  4065d4:	into   
  4065d5:	pop    esi
  4065d6:	xlat   BYTE PTR ds:[ebx]
  4065d7:	cmp    ch,BYTE PTR [eax-0x4a]
  4065da:	xor    ch,0x8b
  4065dd:	mov    esp,0xba945e7d
  4065e2:	fidiv  DWORD PTR [ebx+edi*1]
  4065e5:	ss xchg edx,eax
  4065e7:	(bad)  
  4065e8:	jno    0x406592
  4065ea:	pop    esi
  4065eb:	test   eax,0x5be0cbd8
  4065f0:	arpl   WORD PTR [ecx-0x6b],bp
  4065f3:	push   esi
  4065f4:	mov    ds:0x7d7b3b8d,eax
  4065f9:	div    BYTE PTR [esp+ebx*8]
  4065fc:	ror    BYTE PTR [ebp-0x2d],cl
  4065ff:	dec    edx
  406600:	ins    BYTE PTR es:[edi],dx
  406601:	add    DWORD PTR [ebp-0x35],ecx
  406604:	mov    DWORD PTR [edx-0x3b],edi
  406607:	test   BYTE PTR [edx-0x64],ch
  40660a:	add    ebp,DWORD PTR [ebp+0x10a088d5]
  406610:	test   bh,0x83
  406613:	jg     0x406610
  406615:	xchg   edx,eax
  406616:	dec    ebp
  406617:	pop    ebp
  406618:	push   DWORD PTR [edi]
  40661a:	sbb    DWORD PTR [edx],edi
  40661c:	and    DWORD PTR [eax+0x624672fd],ecx
  406622:	ror    esi,0xc9
  406625:	repz xor esp,ebx
  406628:	loope  0x40662e
  40662a:	or     esp,edi
  40662c:	fcmovne st,st(3)
  40662e:	call   0x83a19d41
  406633:	adc    dl,BYTE PTR [esp+esi*1-0x55]
  406637:	test   eax,0xf5e41423
  40663c:	clc    
  40663d:	aam    0x43
  40663f:	fwait
  406640:	dec    ebp
  406641:	out    0xc2,al
  406643:	inc    esi
  406644:	jae    0x40664f
  406646:	dec    ebx
  406647:	mov    ah,0x43
  406649:	sub    al,0x57
  40664b:	jae    0x4065d8
  40664d:	mov    al,ds:0x252812e8
  406652:	lods   eax,DWORD PTR ds:[esi]
  406653:	fisttp DWORD PTR ds:0x5ce2ff89
  406659:	cmp    BYTE PTR [edi+0x33],dl
  40665c:	add    DWORD PTR [ecx],ebp
  40665e:	fsub   QWORD PTR [esi+ecx*1-0xa496482]
  406665:	jecxz  0x406678
  406667:	mov    al,BYTE PTR [edx]
  406669:	push   0xe386ccca
  40666e:	rcr    DWORD PTR [ecx+edx*1+0x78ac6415],0x88
  406676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406677:	pushw  es
  406679:	xor    ah,BYTE PTR [edx+0x56dff653]
  40667f:	ins    BYTE PTR es:[edi],dx
  406680:	mov    ds,WORD PTR [eax+0x59]
  406683:	dec    edi
  406684:	icebp  
  406685:	push   ebp
  406686:	mov    DWORD PTR [ebp+0x52205c8b],eax
  40668c:	outs   dx,BYTE PTR ds:[esi]
  40668d:	xor    eax,0xd5a1922f
  406692:	fld    QWORD PTR [ebp+ebp*8-0x51369e3e]
  406699:	les    ecx,FWORD PTR [esi+0x5999db45]
  40669f:	mov    dh,0xbf
  4066a1:	mov    bh,0x17
  4066a3:	loope  0x4066a1
  4066a5:	fstp   st(3)
  4066a7:	adc    esi,DWORD PTR [esi]
  4066a9:	and    edx,ebx
  4066ab:	xchg   DWORD PTR [edx+0x4e],edi
  4066ae:	inc    ebx
  4066af:	add    eax,0xdec6d697
  4066b4:	mov    ds:0x3a43dd06,eax
  4066b9:	sbb    ecx,esp
  4066bb:	addr16 ret 
  4066bd:	jge    0x40673b
  4066bf:	adc    eax,DWORD PTR [eax]
  4066c1:	xlat   BYTE PTR ds:[ebx]
  4066c2:	inc    ecx
  4066c3:	pusha  
  4066c4:	ds inc esi
  4066c6:	jle    0x4066cc
  4066c8:	push   esi
  4066c9:	xchg   esi,eax
  4066ca:	sub    al,0x77
  4066cc:	out    dx,al
  4066cd:	jb     0x4066ec
  4066cf:	retf   0xf70f
  4066d2:	or     DWORD PTR [esi+0x28],edi
  4066d5:	(bad)  
  4066d6:	aad    0xf3
  4066d8:	mov    bh,0x75
  4066da:	fsubrp st(7),st
  4066dc:	push   ds
  4066dd:	mov    ?,WORD PTR [ebx-0x7c3ca4c0]
  4066e3:	lea    eax,[ecx+0x3c]
  4066e6:	cmc    
  4066e7:	push   es
  4066e8:	xchg   edx,eax
  4066e9:	aaa    
  4066ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066eb:	scas   al,BYTE PTR es:[edi]
  4066ec:	dec    ebx
  4066ed:	push   edi
  4066ee:	(bad)  
  4066ef:	cld    
  4066f0:	pop    ebp
  4066f1:	(bad)  
  4066f2:	rcl    BYTE PTR [esp-0x5d],cl
  4066f6:	out    0xc,eax
  4066f8:	dec    esp
  4066f9:	repz sbb DWORD PTR [ebp-0x30],ebx
  4066fd:	jl     0x40677c
  4066ff:	aam    0xe2
  406701:	retfw  0x30f1
  406705:	stc    
  406706:	bound  esp,QWORD PTR [edx+edi*1+0x1d025c35]
  40670d:	aad    0x17
  40670f:	stos   BYTE PTR es:[edi],al
  406710:	aam    0xed
  406712:	in     al,dx
  406713:	aas    
  406714:	mov    cl,0x97
  406716:	push   ebp
  406717:	dec    esp
  406718:	pop    esi
  406719:	xor    eax,0x79755958
  40671e:	inc    edx
  40671f:	mov    ss,WORD PTR [esi+0x2]
  406722:	ss je  0x4066e2
  406725:	scas   eax,DWORD PTR es:[edi]
  406726:	mov    bh,0x5f
  406728:	jo     0x40678b
  40672a:	mov    al,ds:0x2e2f5385
  40672f:	outs   dx,DWORD PTR ds:[esi]
  406730:	pushf  
  406731:	rcr    BYTE PTR [esi],0xdd
  406734:	stos   BYTE PTR es:[edi],al
  406735:	sub    BYTE PTR [edi+0x3e],cl
  406738:	scas   eax,DWORD PTR es:[edi]
  406739:	div    DWORD PTR ds:0x4ea464ae
  40673f:	add    al,BYTE PTR [ebx]
  406741:	ins    DWORD PTR es:[edi],dx
  406742:	sub    ch,BYTE PTR [ecx-0x5cd6646d]
  406748:	pop    eax
  406749:	fisttp WORD PTR [eax+0x33]
  40674c:	adc    ebx,DWORD PTR [ecx-0x35]
  40674f:	out    0xaf,eax
  406751:	icebp  
  406752:	sti    
  406753:	adc    DWORD PTR [edx-0x76],ebp
  406756:	retf   
  406757:	inc    ecx
  406758:	xor    al,0xa
  40675a:	rol    DWORD PTR [eax-0x5e791c1a],0xfb
  406761:	in     al,dx
  406762:	xor    eax,0x3fd51959
  406767:	xor    ebx,edx
  406769:	in     al,0x4e
  40676b:	sbb    dh,BYTE PTR [eax]
  40676d:	inc    edi
  40676e:	outs   dx,DWORD PTR ds:[esi]
  40676f:	jg     0x40677c
  406771:	into   
  406772:	mov    ebp,es
  406774:	shl    ah,1
  406776:	nop
  406777:	hlt    
  406778:	cmp    esi,DWORD PTR [edx+0x34]
  40677b:	and    al,0xcc
  40677d:	or     eax,0x6670199b
  406782:	fwait
  406783:	dec    ecx
  406784:	and    ebx,eax
  406786:	jbe    0x406794
  406788:	pop    ds
  406789:	das    
  40678a:	sbb    eax,0xa65c3892
  40678f:	pop    edx
  406790:	loop   0x406749
  406792:	push   ss
  406793:	sub    DWORD PTR [esi],esi
  406795:	mov    ebp,0x76c2720f
  40679a:	in     al,dx
  40679b:	(bad)  
  40679c:	jge    0x40672c
  40679e:	jmp    0x3873:0xa0537f74
  4067a5:	xchg   esi,eax
  4067a6:	popf   
  4067a7:	daa    
  4067a8:	outs   dx,DWORD PTR ds:[esi]
  4067a9:	ret    
  4067aa:	jmp    0x406797
  4067ac:	or     al,cl
  4067ae:	xor    esi,esi
  4067b0:	add    al,0x58
  4067b2:	mov    eax,0x73e811a8
  4067b7:	test   al,0xd
  4067b9:	fistp  WORD PTR ds:0xf4bf65ab
  4067bf:	mov    DWORD PTR [ebp-0x60343559],0xa290e435
  4067c9:	rol    BYTE PTR gs:[esi-0x31],1
  4067cd:	and    DWORD PTR [ebx+0x70ffb3ec],edx
  4067d3:	fsubr  DWORD PTR [ecx+0x1f972510]
  4067d9:	test   al,0xae
  4067db:	pop    ss
  4067dc:	stos   BYTE PTR es:[edi],al
  4067dd:	jg     0xadace545
  4067e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067e4:	lock dec ebp
  4067e6:	sub    al,0x43
  4067e8:	inc    bx
  4067ea:	imul   ebp,DWORD PTR [ebx],0xc8f77e78
  4067f0:	jnp    0x40683d
  4067f2:	push   edx
  4067f3:	push   esp
  4067f4:	xchg   ebx,eax
  4067f5:	leave  
  4067f6:	inc    esp
  4067f7:	test   BYTE PTR [edx],al
  4067f9:	adc    edx,DWORD PTR [eax+0x67c99d03]
  4067ff:	xchg   ebx,esi
  406801:	retf   0xcd65
  406804:	xchg   ebp,eax
  406805:	ins    BYTE PTR es:[edi],dx
  406806:	pop    ecx
  406807:	xor    BYTE PTR [edi],dl
  406809:	inc    eax
  40680a:	xchg   ebx,eax
  40680b:	in     al,0xda
  40680d:	sbb    esi,DWORD PTR [ebx]
  40680f:	and    BYTE PTR [ebx+eiz*1+0x3b98d88c],0x61
  406817:	lahf   
  406818:	ret    
  406819:	cmp    al,0x5f
  40681b:	shl    bl,0x9d
  40681e:	daa    
  40681f:	and    eax,0x932c79d1
  406824:	and    eax,0x1795cf30
  406829:	repz jle 0x406852
  40682c:	ficom  WORD PTR [edi-0x566df9f5]
  406832:	out    dx,al
  406833:	add    DWORD PTR [eax+0x58],eax
  406836:	mov    bl,0xf
  406838:	sub    dl,BYTE PTR [edx]
  40683a:	and    al,0x7b
  40683c:	pop    ds
  40683d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40683e:	not    ecx
  406840:	xor    BYTE PTR cs:[esi],0xb3
  406844:	iret   
  406845:	jle    0x406827
  406847:	lds    esi,FWORD PTR [esi]
  406849:	mov    ds:0xc1ed805f,al
  40684e:	jge    0x406841
  406850:	push   ebx
  406851:	fmul   QWORD PTR [esi-0x8]
  406854:	popa   
  406855:	shr    dh,0x9a
  406858:	sub    eax,0x2389a59b
  40685d:	cwde   
  40685e:	idiv   BYTE PTR [esi]
  406860:	and    bl,BYTE PTR [ebx+ebp*4-0x72874358]
  406867:	out    0x5d,eax
  406869:	imul   ebp,DWORD PTR ds:0x71321599,0xffffffe8
  406870:	mov    bh,0xdc
  406872:	inc    edx
  406873:	sbb    BYTE PTR [edx-0x80],dh
  406876:	test   al,0x30
  406878:	sub    esi,DWORD PTR [edi]
  40687a:	int3   
  40687b:	mov    dh,0x7
  40687d:	cmp    DWORD PTR [edi+0x68],esp
  406880:	sbb    ebp,ebp
  406882:	arpl   WORD PTR [eax+ebp*1+0x41f1fa31],ax
  406889:	aaa    
  40688a:	je     0x4068c4
  40688c:	pop    edx
  40688d:	cmp    eax,DWORD PTR [edx+ebp*1+0x33e198a0]
  406894:	mov    ah,0x96
  406896:	icebp  
  406897:	xor    DWORD PTR [eax-0x80],edx
  40689a:	cwde   
  40689b:	fisttp DWORD PTR [edi]
  40689d:	adc    bl,bh
  40689f:	sti    
  4068a0:	jl     0x4068c9
  4068a2:	ss mov dl,0xc0
  4068a5:	jb     0x4068dd
  4068a7:	mov    dl,0xea
  4068a9:	fs inc edi
  4068ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ac:	xchg   esp,eax
  4068ad:	hlt    
  4068ae:	addr16 add eax,0x37194030
  4068b4:	mov    DWORD PTR [edi],ebp
  4068b6:	xor    BYTE PTR [eax+0x7668c04c],ch
  4068bc:	pop    ebx
  4068bd:	aad    0x1a
  4068bf:	xlat   BYTE PTR ds:[ebx]
  4068c0:	pop    edx
  4068c1:	pushf  
  4068c2:	fnstcw WORD PTR [ebp+0x1b]
  4068c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068c6:	cmp    dl,dh
  4068c8:	icebp  
  4068c9:	retf   
  4068ca:	xor    BYTE PTR [esi],al
  4068cc:	mov    edi,0xac8472b5
  4068d1:	or     dl,BYTE PTR [ebx+ecx*4]
  4068d4:	xchg   edx,eax
  4068d5:	enter  0xbeea,0xf4
  4068d9:	and    DWORD PTR [ecx-0x1b1ffd34],0x7e
  4068e0:	in     eax,dx
  4068e1:	xor    BYTE PTR [esi],bh
  4068e3:	dec    ebx
  4068e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068e5:	clc    
  4068e6:	push   esi
  4068e7:	imul   eax,DWORD PTR [ecx-0x7e],0xffffffa0
  4068eb:	in     eax,0xf7
  4068ed:	es loopne 0x4068e0
  4068f0:	into   
  4068f1:	dec    edi
  4068f2:	xchg   al,cl
  4068f4:	(bad)  
  4068f5:	xchg   edi,eax
  4068f6:	mov    bl,0x86
  4068f8:	and    edx,DWORD PTR [eax-0x2c]
  4068fb:	adc    al,BYTE PTR [ebx-0x6d]
  4068fe:	mov    ah,0xfd
  406900:	mov    ch,0xa4
  406902:	and    eax,0x3bd8f8a6
  406907:	mov    bh,0xca
  406909:	and    dl,BYTE PTR [edx-0x4f]
  40690c:	jmp    0x181c:0x78c3852
  406913:	call   0x3082:0x33d4af99
  40691a:	retf   0xdb54
  40691d:	add    bl,bh
  40691f:	sub    eax,0xf76502fc
  406924:	push   eax
  406925:	aas    
  406926:	fst    DWORD PTR [edx+0x7b46e623]
  40692c:	cmp    edi,DWORD PTR [edx]
  40692e:	es jmp 0x4068bd
  406931:	add    BYTE PTR [edi+eax*4+0x7d224dcc],0x46
  406939:	dec    ebp
  40693a:	mov    cl,0x8d
  40693c:	or     bl,bh
  40693e:	ss and eax,0xa53acb01
  406944:	inc    edi
  406945:	icebp  
  406946:	mov    al,BYTE PTR [edi-0x53]
  406949:	ins    DWORD PTR es:[edi],dx
  40694a:	out    dx,al
  40694b:	xor    edx,ebx
  40694d:	frstor [edx+ecx*2-0x6a0c5d74]
  406954:	inc    esp
  406955:	sbb    ebx,DWORD PTR [eax]
  406957:	(bad)  
  406958:	sbb    ecx,DWORD PTR [eax]
  40695a:	sbb    BYTE PTR [edi+0x679d2dc9],0x19
  406961:	outs   dx,DWORD PTR ds:[esi]
  406962:	cwde   
  406963:	push   esp
  406964:	pop    esp
  406965:	mov    ah,BYTE PTR [ecx-0x11b3cb2c]
  40696b:	mov    eax,ds:0xdf93c05e
  406970:	adc    BYTE PTR [edx-0x2c],cl
  406973:	lods   al,BYTE PTR ds:[esi]
  406974:	jno    0x40698f
  406976:	hlt    
  406977:	inc    esp
  406978:	dec    edx
  406979:	xchg   esp,eax
  40697a:	out    dx,al
  40697b:	add    DWORD PTR [ebx],edi
  40697d:	call   0xb83:0x371ee3f6
  406984:	scas   eax,DWORD PTR es:[edi]
  406985:	mov    al,gs:0x128db0e4
  40698b:	mov    esp,0xdba704ba
  406990:	aad    0xbe
  406992:	shr    BYTE PTR [ecx+edi*4],cl
  406995:	mov    esi,0x465f0a77
  40699a:	dec    esp
  40699b:	sbb    al,0x90
  40699d:	mov    al,0x9e
  40699f:	inc    edi
  4069a0:	jns    0x4069da
  4069a2:	not    ah
  4069a4:	mov    ecx,0x46e5c897
  4069a9:	retf   
  4069aa:	adc    eax,0x83a5b6aa
  4069af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069b0:	mov    ch,ch
  4069b2:	sub    al,0x2b
  4069b4:	sbb    ebp,DWORD PTR [eax]
  4069b6:	pop    edx
  4069b7:	xchg   ebp,eax
  4069b8:	mov    al,0xae
  4069ba:	xchg   edi,eax
  4069bb:	xchg   ebx,edx
  4069bd:	xchg   BYTE PTR [edx],ah
  4069bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069c0:	sar    BYTE PTR [esi-0xea0a3fb],cl
  4069c6:	(bad)  
  4069c8:	dec    edx
  4069c9:	aas    
  4069ca:	js     0x4069a8
  4069cc:	dec    ebx
  4069cd:	ret    0xba57
  4069d0:	inc    eax
  4069d1:	cmp    ebx,DWORD PTR [edi+0x7b]
  4069d4:	mov    edx,DWORD PTR [ebp+0x61]
  4069d7:	pop    ebx
  4069d8:	xchg   ecx,eax
  4069d9:	out    dx,eax
  4069da:	iret   
  4069db:	inc    ebx
  4069dc:	sub    al,0x1c
  4069de:	cmp    ch,bl
  4069e0:	mov    cl,0x4e
  4069e2:	mov    ch,0xd5
  4069e4:	call   0xd6b:0x26c98d23
  4069eb:	xchg   ebx,eax
  4069ec:	fistp  WORD PTR [ebx]
  4069ee:	add    bh,cl
  4069f0:	jmp    0xc168:0x5886ed79
  4069f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f8:	mov    ebx,0x3a22913e
  4069fd:	enter  0x57cc,0x4d
  406a01:	push   0xffffffb5
  406a03:	ja     0x406a6a
  406a05:	mov    ah,0xaf
  406a07:	and    al,0x77
  406a09:	add    al,0xeb
  406a0b:	push   edi
  406a0c:	or     eax,0xa78e3f82
  406a11:	xor    al,0xc7
  406a13:	mov    ah,0xc0
  406a15:	xor    BYTE PTR [edi],ah
  406a17:	pop    es
  406a18:	repnz mov edx,0x7ea67ff9
  406a1e:	mov    bl,0xa6
  406a20:	lods   eax,DWORD PTR ds:[esi]
  406a21:	call   0x3914:0xf864f568
  406a28:	mov    ch,0x4f
  406a2a:	dec    ebp
  406a2b:	inc    ebx
  406a2c:	pop    esp
  406a2d:	(bad)
  406a30:	in     al,0xdf
  406a32:	test   al,0xea
  406a34:	pop    ebp
  406a35:	add    al,0x16
  406a37:	into   
  406a38:	adc    al,0x51
  406a3a:	xor    bh,BYTE PTR [eax+0x26dbf10b]
  406a40:	inc    eax
  406a41:	cdq    
  406a42:	loopne 0x406a2a
  406a44:	jne    0x406a42
  406a46:	push   cs
  406a47:	mov    ecx,0x42d7e758
  406a4c:	mov    edx,0xf9284f8d
  406a51:	scas   eax,DWORD PTR es:[edi]
  406a52:	ds inc ebp
  406a54:	inc    ecx
  406a55:	push   bx
  406a57:	int3   
  406a58:	inc    ebp
  406a59:	push   ds
  406a5a:	mov    esi,0xda5763bb
  406a5f:	jg     0x406a0e
  406a61:	cmp    bh,dh
  406a63:	inc    edx
  406a64:	jae    0x406a7f
  406a66:	sbb    BYTE PTR [edi+ecx*8+0x701de636],0xcd
  406a6e:	out    dx,al
  406a6f:	jge    0x406a3c
  406a71:	enter  0x82f2,0xd6
  406a75:	sbb    DWORD PTR [ebp+0x746aaca4],edx
  406a7b:	mov    DWORD PTR [ebp-0x71cd9109],edx
  406a81:	(bad)  
  406a82:	loopne 0x406af0
  406a84:	sbb    BYTE PTR [edx+0x54],ah
  406a87:	xchg   ebp,eax
  406a88:	popf   
  406a89:	mov    bl,0x69
  406a8b:	add    DWORD PTR ds:0x64e9e648,esp
  406a91:	fnsave [ebp+edx*1-0x2f9be5d3]
  406a98:	sbb    eax,0x2d8d709d
  406a9d:	and    dl,BYTE PTR [edx-0x421056]
  406aa3:	or     bh,0x4b
  406aa6:	cs pop esp
  406aa8:	adc    BYTE PTR [edi],bh
  406aaa:	jmp    0x406a51
  406aac:	cmp    eax,0x5f35a8b2
  406ab1:	xlat   BYTE PTR ds:[ebx]
  406ab2:	adc    ah,dl
  406ab4:	mov    bh,0x98
  406ab6:	push   esi
  406ab7:	(bad)  
  406ab8:	test   BYTE PTR [ebx+0x734bc5b7],ch
  406abe:	mov    eax,DWORD PTR [esi+ebx*4-0x2e0265cc]
  406ac5:	loopne 0x406a5c
  406ac7:	and    BYTE PTR [ebx],dl
  406ac9:	(bad)  
  406aca:	out    dx,al
  406acb:	xor    al,0xc0
  406acd:	xlat   BYTE PTR ds:[ebx]
  406ace:	inc    ebp
  406acf:	aaa    
  406ad0:	pop    ss
  406ad1:	adc    dh,ah
  406ad3:	inc    ebp
  406ad4:	cmp    al,bl
  406ad6:	fdiv   QWORD PTR [edi-0x14]
  406ad9:	jle    0x406a97
  406adb:	pop    edx
  406adc:	rcr    BYTE PTR [edi+0x24e84ec6],1
  406ae2:	daa    
  406ae3:	sub    eax,DWORD PTR [ecx+0x65]
  406ae6:	lahf   
  406ae7:	test   DWORD PTR [edx+0x428f125e],eax
  406aed:	out    dx,eax
  406aee:	test   DWORD PTR gs:[edi+0x6b916ecb],edx
  406af5:	cmp    edi,DWORD PTR [edx-0xf]
  406af8:	stos   BYTE PTR es:[edi],al
  406af9:	fist   DWORD PTR [ebx]
  406afb:	pusha  
  406afc:	dec    esp
  406afd:	ret    0xdd18
  406b00:	mov    ds:0xb864ca02,eax
  406b05:	jmp    0x8da16e43
  406b0a:	cld    
  406b0b:	clc    
  406b0c:	jp     0x406aac
  406b0e:	jmp    0xfe90:0xbbb3d7c5
  406b15:	ficom  DWORD PTR [ebp-0x61]
  406b18:	and    esi,esi
  406b1a:	xor    eax,0xbdb1355f
  406b1f:	mov    WORD PTR ds:0x1f0857c7,es
  406b25:	adc    ebx,0xffffff87
  406b28:	clc    
  406b29:	pop    ebp
  406b2a:	push   0x72
  406b2c:	arpl   ax,bp
  406b2e:	xor    al,0x6d
  406b30:	dec    edx
  406b31:	adc    bh,BYTE PTR [bx+di-0x3843]
  406b36:	inc    esp
  406b37:	mov    dh,0x41
  406b39:	iret   
  406b3a:	mov    WORD PTR [esi+0x6ba37670],fs
  406b40:	and    BYTE PTR [eax-0x8],bl
  406b43:	mov    eax,0xd521a600
  406b48:	in     al,0x5a
  406b4a:	xchg   ebx,eax
  406b4b:	dec    ebp
  406b4c:	cwde   
  406b4d:	or     al,0x1e
  406b4f:	mov    ds:0x3de618c6,eax
  406b54:	stos   BYTE PTR es:[edi],al
  406b55:	pushf  
  406b56:	mov    eax,?
  406b58:	leave  
  406b59:	das    
  406b5a:	push   ss
  406b5b:	dec    ebp
  406b5c:	sub    bl,BYTE PTR [edi]
  406b5e:	mov    bh,dh
  406b60:	sbb    DWORD PTR [eax],esp
  406b62:	(bad)  
  406b63:	sub    BYTE PTR [eax+0x46b5e1d5],ah
  406b69:	ror    BYTE PTR [esi+0x78],cl
  406b6c:	xchg   ebx,eax
  406b6d:	pop    ebp
  406b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b6f:	sahf   
  406b70:	call   0x71337b10
  406b75:	push   esi
  406b76:	das    
  406b77:	dec    edx
  406b78:	cmp    BYTE PTR [edi+edx*1-0x6b],al
  406b7c:	fdiv   DWORD PTR [esi-0xdb89611]
  406b82:	jge    0x406b20
  406b84:	retf   0x28e0
  406b87:	pop    es
  406b88:	fbld   TBYTE PTR [esi]
  406b8a:	jge    0x406b28
  406b8c:	mov    ch,0xf0
  406b8e:	cdq    
  406b8f:	cmp    bl,BYTE PTR [ebx+0x24]
  406b92:	dec    edi
  406b93:	test   BYTE PTR [eax],bh
  406b95:	call   0x1349:0x87b5a429
  406b9c:	mov    ds:0xec694bf7,eax
  406ba1:	mov    esi,0x4262042
  406ba6:	retf   
  406ba7:	outs   dx,BYTE PTR ds:[esi]
  406ba8:	icebp  
  406ba9:	pop    esi
  406baa:	pop    edx
  406bab:	idiv   esi
  406bad:	cmp    BYTE PTR [edx+0x5a],bh
  406bb0:	int    0x63
  406bb2:	stc    
  406bb3:	rol    BYTE PTR [ebx-0x80],cl
  406bb6:	arpl   sp,cx
  406bb8:	adc    DWORD PTR [ecx+0x5e],0xffffff82
  406bbc:	popf   
  406bbd:	pop    esi
  406bbe:	imul   ebp,edi,0x4befa1a1
  406bc4:	and    eax,0xde81b14f
  406bc9:	shl    BYTE PTR [eax+0x1164ed90],cl
  406bcf:	xchg   ecx,eax
  406bd0:	outs   dx,BYTE PTR ds:[esi]
  406bd1:	xchg   ebp,eax
  406bd2:	ret    
  406bd3:	mov    dl,BYTE PTR [ecx+ebx*8]
  406bd6:	sub    ebp,0x59755997
  406bdc:	test   DWORD PTR [edi-0x703838a8],ebx
  406be2:	pushf  
  406be3:	repnz aad 0x36
  406be6:	cmp    ebx,DWORD PTR [edx+0xa]
  406be9:	jl     0x406ba7
  406beb:	out    0x4a,al
  406bed:	rcr    DWORD PTR [esi-0x33a8298d],cl
  406bf3:	and    al,BYTE PTR [ecx-0x5d7fe7dd]
  406bf9:	pop    edi
  406bfa:	xor    bh,dl
  406bfc:	cmc    
  406bfd:	repz xchg ecx,eax
  406bff:	mov    ch,0x54
  406c01:	int3   
  406c02:	mov    ds:0xef4b74a1,eax
  406c07:	pop    esp
  406c08:	repnz ror ah,0x2c
  406c0c:	sub    bl,0x53
  406c0f:	mov    esi,DWORD PTR [esi-0x71]
  406c12:	std    
  406c13:	mov    ebx,0x157faaf8
  406c18:	add    bh,dh
  406c1a:	(bad)  
  406c1b:	push   ebp
  406c1c:	push   edi
  406c1d:	mov    eax,ds:0x46d48cbd
  406c22:	mov    eax,ds:0xbd6dffb6
  406c27:	xchg   ecx,eax
  406c28:	stc    
  406c29:	adc    ah,BYTE PTR [ecx-0x729a987e]
  406c2f:	bnd jnp 0x406c25
  406c32:	das    
  406c33:	call   0xf1d7289f
  406c38:	ret    0x897f
  406c3b:	jns    0x406c8a
  406c3d:	pop    ecx
  406c3e:	mov    al,ds:0x50ba00b0
  406c43:	stc    
  406c44:	(bad)  [ebp-0x7e]
  406c47:	xor    BYTE PTR [esi-0x1bef392b],bh
  406c4d:	push   ebx
  406c4e:	pop    ds
  406c4f:	add    edx,0xf640849c
  406c55:	imul   esi,DWORD PTR cs:[edi-0x5e],0x8a1b576c
  406c5d:	ins    DWORD PTR es:[edi],dx
  406c5e:	and    ebp,edi
  406c60:	xor    edi,eax
  406c62:	cs stc 
  406c64:	push   ecx
  406c65:	lods   al,BYTE PTR ds:[esi]
  406c66:	cmc    
  406c67:	lods   al,BYTE PTR ds:[esi]
  406c68:	xor    DWORD PTR [edi+eiz*4],esi
  406c6b:	adc    eax,0xf89d91d1
  406c70:	xchg   bh,cl
  406c72:	push   esp
  406c73:	jg     0x406c7f
  406c75:	test   eax,0xa1bf6242
  406c7a:	retf   0x9274
  406c7d:	jnp    0x406c9a
  406c7f:	test   ah,dh
  406c81:	in     eax,0xf8
  406c83:	jo     0x406ccf
  406c85:	jns    0x406c3e
  406c87:	mov    dh,0x83
  406c89:	pusha  
  406c8a:	imul   edi,DWORD PTR [ebx-0x6cfb6e6b],0x64
  406c91:	inc    eax
  406c92:	adc    al,BYTE PTR [ebx-0x50a54fb8]
  406c98:	and    DWORD PTR [edi],0x1a
  406c9b:	sbb    edi,DWORD PTR [esi]
  406c9d:	leave  
  406c9e:	inc    ecx
  406c9f:	lods   al,BYTE PTR ds:[esi]
  406ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ca1:	mov    al,0xb2
  406ca3:	adc    ebx,DWORD PTR [edx]
  406ca5:	ffree  st(5)
  406ca7:	jns    0x406c43
  406ca9:	stc    
  406caa:	ss in  eax,0xc3
  406cad:	rcl    ch,0x92
  406cb0:	push   0x36895b8
  406cb5:	dec    esp
  406cb6:	push   ds
  406cb7:	and    eax,esi
  406cb9:	and    al,0xe2
  406cbb:	pushf  
  406cbc:	addr16 cli 
  406cbe:	dec    ebx
  406cbf:	loopne 0x406c72
  406cc1:	push   edi
  406cc2:	cld    
  406cc3:	(bad)  
  406cc4:	mov    ah,0x54
  406cc6:	xor    al,0x83
  406cc8:	std    
  406cc9:	adc    BYTE PTR [esi],0xd7
  406ccc:	out    0x2a,al
  406cce:	cmp    edi,DWORD PTR [eax+0x8bd807d]
  406cd4:	je     0x406c81
  406cd6:	imul   esi
  406cd8:	leave  
  406cd9:	cld    
  406cda:	mov    ebp,0x4c4c0a14
  406cdf:	sbb    edi,esi
  406ce1:	leave  
  406ce2:	in     eax,dx
  406ce3:	dec    eax
  406ce4:	test   DWORD PTR [edx-0x23d60eec],0xf3ae2d62
  406cee:	fbstp  TBYTE PTR [ebx]
  406cf0:	inc    ebp
  406cf1:	and    BYTE PTR [ecx],0x7e
  406cf4:	mov    eax,0xf7438f45
  406cf9:	adc    bl,BYTE PTR [ebx]
  406cfb:	in     al,0xae
  406cfd:	fisttp WORD PTR ds:0x406e1c00
  406d03:	ins    BYTE PTR es:[edi],dx
  406d04:	or     eax,0xd2e484da
  406d09:	sub    al,BYTE PTR [ecx]
  406d0b:	pop    eax
  406d0c:	push   0xcc32f569
  406d11:	adc    eax,0x3b56cd52
  406d16:	cmp    BYTE PTR [ebp+ebp*8-0x5d],bh
  406d1a:	jmp    0x3fc3ff3b
  406d1f:	outs   dx,DWORD PTR ds:[esi]
  406d20:	jne    0x406d19
  406d22:	test   BYTE PTR [edx],bh
  406d24:	mov    ds,WORD PTR [edi+edi*4+0x702bcb1e]
  406d2b:	clc    
  406d2c:	inc    eax
  406d2d:	xor    DWORD PTR [bx+si-0x4f],ebx
  406d31:	lock ret 
  406d33:	jb     0x406d95
  406d35:	fnstenv [ecx+0x22469c6c]
  406d3b:	xlat   BYTE PTR ds:[ebx]
  406d3c:	fidiv  WORD PTR [edx+esi*4]
  406d3f:	pop    ds
  406d40:	inc    edi
  406d41:	jmp    0xf897:0x3408d097
  406d48:	xchg   ebp,eax
  406d49:	jg     0x406dc0
  406d4b:	js     0x406d0b
  406d4d:	arpl   WORD PTR [edx-0xb],bp
  406d50:	call   0x4bf0:0x89270f43
  406d57:	hlt    
  406d58:	cmp    esi,DWORD PTR [eax+0x78]
  406d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d5c:	pop    es
  406d5d:	cld    
  406d5e:	std    
  406d5f:	dec    ebp
  406d60:	dec    esp
  406d61:	outs   dx,DWORD PTR ds:[esi]
  406d62:	push   0xd944e461
  406d67:	fwait
  406d68:	add    ebx,DWORD PTR [ebx+edi*1+0x17]
  406d6c:	cmp    al,0xff
  406d6e:	imul   esp,DWORD PTR [edi],0x58635039
  406d74:	jecxz  0x406d21
  406d76:	pop    ss
  406d77:	xor    dh,ah
  406d79:	mov    ecx,0xaf53c405
  406d7e:	push   0x61
  406d80:	xchg   ebp,eax
  406d81:	inc    ebp
  406d82:	pop    esi
  406d83:	xchg   ecx,eax
  406d84:	and    al,0xbb
  406d86:	imul   esp,DWORD PTR [esi-0x81d319],0xffffff88
  406d8d:	sbb    edi,0x6
  406d90:	je     0x406e00
  406d92:	inc    esi
  406d93:	sub    BYTE PTR [eax],dl
  406d95:	cmc    
  406d96:	jmp    0x406dff
  406d98:	or     DWORD PTR [esi],0x81760f0a
  406d9e:	and    dh,BYTE PTR [esi+ebp*8+0x10]
  406da2:	sbb    eax,0x2e6305f6
  406da7:	dec    edi
  406da8:	add    edi,DWORD PTR [esi-0x5bde9835]
  406dae:	xor    ebp,DWORD PTR [ebx]
  406db0:	out    dx,eax
  406db1:	rol    edi,0x24
  406db4:	repnz xor DWORD PTR [ebx-0x60],edi
  406db8:	imul   eax,DWORD PTR [ebx],0x1ca2685a
  406dbe:	retf   
  406dbf:	or     dh,BYTE PTR [edx-0x7]
  406dc2:	xchg   esp,eax
  406dc3:	stc    
  406dc4:	std    
  406dc5:	retf   0x8d34
  406dc8:	out    dx,eax
  406dc9:	adc    ebp,DWORD PTR [esi+0x10df6b2e]
  406dcf:	neg    BYTE PTR [ebx]
  406dd1:	outs   dx,BYTE PTR ds:[esi]
  406dd2:	cdq    
  406dd3:	pop    ecx
  406dd4:	cs nop
  406dd6:	mov    eax,0x81722e9d
  406ddb:	and    al,0x57
  406ddd:	idiv   BYTE PTR [ebp+0x37]
  406de0:	xchg   ecx,eax
  406de1:	add    DWORD PTR [esi+0x59f93949],esp
  406de7:	mov    edx,0x86f997de
  406dec:	dec    eax
  406ded:	pop    ss
  406dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406def:	ins    BYTE PTR es:[edi],dx
  406df0:	adc    ch,cl
  406df2:	dec    eax
  406df3:	jl     0x406d8f
  406df5:	mov    eax,ds:0x6a311dd9
  406dfa:	fwait
  406dfb:	or     esp,esp
  406dfd:	mov    esi,0x3159560f
  406e02:	xor    BYTE PTR [ebx+0x4f54e2bf],bl
  406e08:	rcr    DWORD PTR [ecx+0x5c8697e],0xff
  406e0f:	jo     0x406e08
  406e11:	sbb    dl,BYTE PTR [eax+0x74]
  406e14:	aam    0x7d
  406e16:	data16 test BYTE PTR [ecx],bh
  406e19:	pop    ds
  406e1a:	rol    BYTE PTR [edi],0xb6
  406e1d:	add    BYTE PTR [esi-0x5e2fb41c],dl
  406e23:	xchg   edi,eax
  406e24:	loope  0x406ea3
  406e26:	and    al,BYTE PTR [esi]
  406e28:	inc    edx
  406e29:	add    esi,edx
  406e2b:	adc    al,0xe3
  406e2d:	sub    al,0xd1
  406e2f:	xchg   ebp,eax
  406e30:	ja     0x406ea5
  406e32:	mov    edi,0x5f7671f
  406e37:	ror    edi,cl
  406e39:	(bad)  
  406e3a:	test   al,0x8f
  406e3c:	push   0x11
  406e3e:	push   ecx
  406e3f:	dec    eax
  406e40:	cmp    al,0xee
  406e42:	jne    0x406e2f
  406e44:	push   ebp
  406e45:	test   DWORD PTR ds:0x60d1c9d8,0x1c002051
  406e4f:	ins    DWORD PTR es:[edi],dx
  406e50:	rcr    DWORD PTR ds:0xeece10b1,cl
  406e56:	mov    edx,0xfbd1d407
  406e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e5c:	jne    0x406ec5
  406e5e:	lea    ebx,[esi]
  406e60:	fsubp  st(2),st
  406e62:	push   esi
  406e63:	jp     0x406e58
  406e65:	add    al,0x28
  406e67:	cli    
  406e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e69:	imul   eax,DWORD PTR [edx+0x66],0xffffffb4
  406e6d:	jno    0x406e9a
  406e6f:	xor    DWORD PTR [ebx],ebx
  406e71:	vpand  xmm3,xmm7,XMMWORD PTR [edx+esi*4+0x3b]
  406e77:	xchg   BYTE PTR [ebp+0x4bdbf6bd],ch
  406e7d:	push   esp
  406e7e:	jmp    0xcefd:0xcac933ad
  406e85:	cdq    
  406e86:	mov    ecx,0x7cfbffea
  406e8b:	inc    esi
  406e8c:	pop    es
  406e8d:	inc    edi
  406e8e:	(bad)  
  406e8f:	sub    al,0xa0
  406e91:	push   0x30a5e5c3
  406e96:	push   ebp
  406e97:	mov    DWORD PTR [ecx+edi*2],esi
  406e9a:	jbe    0x406f02
  406e9c:	jo     0x406e1e
  406e9e:	push   eax
  406e9f:	jl     0x406f18
  406ea1:	(bad)  
  406ea2:	xchg   ebp,eax
  406ea3:	stos   DWORD PTR es:[edi],eax
  406ea4:	jmp    0x406e89
  406ea6:	sub    BYTE PTR [esi-0xb9c448d],0xe2
  406ead:	pop    edx
  406eae:	mov    esi,0xfdcabe62
  406eb3:	mov    ch,0x41
  406eb5:	call   0x1c427d6d
  406eba:	lds    edi,FWORD PTR [edx+0x72f172e0]
  406ec0:	push   0x24
  406ec2:	push   ecx
  406ec3:	ja     0x406ee8
  406ec5:	stos   BYTE PTR es:[edi],al
  406ec6:	adc    ch,ch
  406ec8:	imul   ebx,DWORD PTR [ebp-0x5f909166],0x9623c8cb
  406ed2:	js     0x406e55
  406ed4:	sbb    DWORD PTR [edi],esi
  406ed6:	test   DWORD PTR [edx],ecx
  406ed8:	mov    bl,0xe0
  406eda:	fsubr  DWORD PTR [ebx+ebp*2-0x592a2346]
  406ee1:	sub    eax,0x2b4392e5
  406ee6:	or     al,0xf
  406ee8:	jmp    0x406f0b
  406eea:	add    dl,BYTE PTR [eax+eax*2+0x2ce3cfca]
  406ef1:	in     al,0x8a
  406ef3:	and    ebp,DWORD PTR [edx-0x2e]
  406ef6:	mov    ds:0xeae99062,eax
  406efb:	add    eax,0x928320ec
  406f00:	mov    cl,0x44
  406f02:	jp     0x406f22
  406f04:	arpl   WORD PTR [edx+0x6705a5d3],si
  406f0a:	sub    DWORD PTR [eax],esp
  406f0c:	aad    0xa6
  406f0e:	bound  ebx,QWORD PTR [edi]
  406f10:	sub    BYTE PTR [ecx-0x3deb4339],bl
  406f16:	mov    edi,0xc95b19e6
  406f1b:	xor    eax,0xc3d41c85
  406f20:	mov    cl,0xc9
  406f22:	push   0xffffffbb
  406f24:	lock iret 
  406f26:	lods   al,BYTE PTR ds:[esi]
  406f27:	mov    ebx,0xf959cbe7
  406f2c:	in     al,0xe8
  406f2e:	xor    al,0x2c
  406f30:	ror    DWORD PTR [ecx+0x46a16a31],1
  406f36:	sub    al,0x97
  406f38:	rcr    DWORD PTR [edx-0x75f4997c],cl
  406f3e:	scas   eax,DWORD PTR es:[edi]
  406f3f:	push   0xffffff9e
  406f41:	aaa    
  406f42:	inc    eax
  406f43:	pop    edx
  406f44:	cmc    
  406f45:	sub    DWORD PTR [edi+eax*8-0x37367e4],eax
  406f4c:	popf   
  406f4d:	in     eax,0x22
  406f4f:	add    ah,al
  406f51:	dec    ebx
  406f52:	scas   eax,DWORD PTR es:[edi]
  406f53:	daa    
  406f54:	add    DWORD PTR [esi],edx
  406f56:	mov    ecx,0x9021b0e4
  406f5b:	retf   0xc83e
  406f5e:	adc    dl,BYTE PTR [esi+0x1cdbd73]
  406f64:	(bad)  
  406f65:	imul   edx,DWORD PTR [ebx-0x5a],0x5853153b
  406f6c:	nop
  406f6d:	retf   0x53d8
  406f70:	stc    
  406f71:	out    0x55,al
  406f73:	push   0x8aa6d7e8
  406f78:	or     al,0x8c
  406f7a:	sbb    BYTE PTR ds:0x41b59847,ah
  406f80:	sar    DWORD PTR [edx],1
  406f82:	rcl    BYTE PTR ds:0xbf40c2ac,0xbd
  406f89:	gs pop esi
  406f8b:	iret   
  406f8c:	inc    esp
  406f8d:	jmp    0x406faf
  406f8f:	or     ebp,DWORD PTR [ebx]
  406f91:	pop    esi
  406f92:	pop    ebp
  406f93:	inc    esi
  406f94:	repz retf 0xf091
  406f98:	out    0x44,eax
  406f9a:	inc    eax
  406f9b:	das    
  406f9c:	pop    es
  406f9d:	out    0xff,eax
  406f9f:	sub    al,0x8a
  406fa1:	popf   
  406fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa3:	jbe    0x406f61
  406fa5:	jge    0x406f8b
  406fa7:	stc    
  406fa8:	sbb    DWORD PTR [ecx+0x7],ebp
  406fab:	cmp    DWORD PTR [edx+0x53700758],edi
  406fb1:	icebp  
  406fb2:	mov    eax,ds:0xbe34d005
  406fb7:	iret   
  406fb8:	fstp   DWORD PTR [eax+0x30c723a0]
  406fbe:	xor    BYTE PTR [eax],bh
  406fc0:	imul   edx,esi,0xffffffc4
  406fc3:	push   cs
  406fc4:	and    DWORD PTR [ebx+ecx*8],ebx
  406fc7:	cwde   
  406fc8:	(bad)  
  406fc9:	lds    eax,FWORD PTR [esi+0x734e3d2b]
  406fcf:	mov    eax,0xa50c3991
  406fd4:	xchg   esp,eax
  406fd5:	mov    dh,0x25
  406fd7:	sbb    DWORD PTR [ebx-0x221a1245],esp
  406fdd:	jp     0x406fd6
  406fdf:	jmp    0x4d7d:0x8db77520
  406fe6:	and    eax,0xcf5ae3ff
  406feb:	mov    ecx,0xc32ede54
  406ff0:	outs   dx,DWORD PTR ds:[esi]
  406ff1:	daa    
  406ff2:	bound  ebx,QWORD PTR [esi]
  406ff4:	jne    0x407032
  406ff6:	cmp    ch,dl
  406ff8:	inc    eax
  406ff9:	jne    0x406fd2
  406ffb:	mov    dh,0x55
  406ffd:	in     al,dx
  406ffe:	dec    ebx
  406fff:	shl    BYTE PTR [ebx+0x2d63bb14],1
  407005:	fwait
  407006:	sub    eax,0x55d993ca
  40700b:	mov    eax,ds:0xcfd9219f
  407011:	add    al,0x39
  407013:	nop
  407014:	les    edx,FWORD PTR ds:0x9820cd77
  40701a:	sbb    DWORD PTR ds:0x33a6bacc,ebx
  407020:	xchg   ecx,eax
  407021:	jne    0x406fbc
  407023:	lahf   
  407024:	jg     0x40701a
  407026:	jmp    0xa00f68cb
  40702b:	sar    ah,cl
  40702d:	jo     0x407032
  40702f:	jb     0x406fe5
  407031:	call   0x50576202
  407036:	sbb    eax,0x2e761e3
  40703b:	retf   0xcbf9
  40703e:	cs or  eax,0x601385e7
  407044:	fcom   QWORD PTR [edi+0x7a]
  407047:	(bad)  
  407048:	xchg   esi,eax
  407049:	push   edi
  40704a:	push   edx
  40704b:	lods   al,BYTE PTR ds:[esi]
  40704c:	into   
  40704d:	pop    esi
  40704e:	aas    
  40704f:	std    
  407050:	sub    BYTE PTR [ebx],0xe2
  407053:	ins    BYTE PTR es:[edi],dx
  407054:	pop    ecx
  407055:	cwde   
  407056:	loope  0x407021
  407058:	stos   DWORD PTR es:[edi],eax
  407059:	pop    ds
  40705a:	pusha  
  40705b:	arpl   cx,sp
  40705d:	adc    al,0xcb
  40705f:	add    edx,edi
  407061:	mov    al,ds:0xe08e1c65
  407066:	(bad)  
  407067:	div    BYTE PTR [edx]
  407069:	test   eax,0xb0d1da5d
  40706e:	adc    al,0xe7
  407070:	das    
  407071:	std    
  407072:	ret    0xe481
  407075:	int3   
  407076:	fistp  DWORD PTR cs:[edx+0x35]
  40707a:	dec    eax
  40707b:	iret   
  40707c:	mov    ds:0x464230f1,eax
  407081:	bound  eax,QWORD PTR [ecx]
  407083:	sbb    ch,bl
  407085:	adc    al,0x0
  407087:	call   0x3b12c815
  40708c:	jae    0x407050
  40708e:	or     BYTE PTR [ecx],al
  407090:	out    0xf0,ax
  407093:	(bad)  
  407094:	xchg   esp,eax
  407095:	test   DWORD PTR [ecx],eax
  407097:	lds    esp,FWORD PTR [edi-0x70040557]
  40709d:	mov    esp,0xbee1e9bb
  4070a2:	jg     0x4070bb
  4070a4:	push   edx
  4070a5:	shl    BYTE PTR [edi+0x48],1
  4070a8:	retf   
  4070a9:	fwait
  4070aa:	push   edi
  4070ab:	and    cl,dl
  4070ad:	push   edx
  4070ae:	sbb    ch,0xbf
  4070b1:	fistp  DWORD PTR [edx-0x6d]
  4070b4:	jp     0x4070fb
  4070b6:	fstp   QWORD PTR [edi]
  4070b8:	lods   al,BYTE PTR ds:[esi]
  4070b9:	sub    eax,0xa5038d86
  4070be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070bf:	outs   dx,DWORD PTR ds:[esi]
  4070c0:	cld    
  4070c1:	jge    0x407060
  4070c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070c4:	rol    DWORD PTR [ecx+0x2bb368ef],0x81
  4070cb:	bound  ebx,QWORD PTR [eax-0x2b]
  4070ce:	add    DWORD PTR [ebx+0x4d],edx
  4070d1:	sar    DWORD PTR [esi+0x40],cl
  4070d4:	rcl    BYTE PTR [esi],cl
  4070d6:	inc    ebx
  4070d7:	fwait
  4070d8:	ror    DWORD PTR [eax+0xbb6cc20],0xfa
  4070df:	in     eax,dx
  4070e0:	retf   0xf351
  4070e3:	add    cl,bl
  4070e5:	xchg   edx,eax
  4070e6:	mov    ds:0x1b55f068,al
  4070eb:	push   0x21
  4070ed:	stc    
  4070ee:	add    ebx,DWORD PTR [esi+ebp*1+0x49]
  4070f2:	push   esp
  4070f3:	and    ah,al
  4070f5:	scas   al,BYTE PTR es:[edi]
  4070f6:	fwait
  4070f7:	mov    DWORD PTR [ebp-0x38],edi
  4070fa:	push   cs
  4070fb:	das    
  4070fc:	adc    al,0x4
  4070fe:	jmp    0xb0f8:0x9863893a
  407105:	out    dx,eax
  407106:	(bad)
  407109:	(bad)  
  40710a:	cmp    DWORD PTR [edi-0x24363051],esp
  407110:	inc    ecx
  407111:	mov    fs,esp
  407113:	push   0x36
  407115:	mov    edi,0xd2d3619e
  40711a:	int3   
  40711b:	cmp    DWORD PTR [ecx],ecx
  40711d:	jb     0x40712f
  40711f:	cmp    eax,0x51b709f1
  407124:	pop    esi
  407125:	jnp    0x40715b
  407127:	add    dh,BYTE PTR [ecx]
  407129:	cwde   
  40712a:	call   0xadd6b015
  40712f:	mov    dh,0xad
  407131:	iret   
  407132:	adc    eax,0xd8a6704d
  407137:	clc    
  407138:	jmp    0xb5f56792
  40713d:	loope  0x4071ba
  40713f:	enter  0x2d4,0xa0
  407143:	dec    ebx
  407144:	inc    eax
  407145:	cdq    
  407146:	push   edx
  407147:	mov    ebx,0x58f48e69
  40714c:	pop    ds
  40714d:	and    ax,0xd88c
  407151:	mov    esi,0x1b28b402
  407156:	or     al,0xc5
  407158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407159:	or     al,0x55
  40715b:	stc    
  40715c:	jg     0x4071d3
  40715e:	cmp    al,0xbf
  407160:	shl    DWORD PTR [ebp-0x2d],cl
  407163:	pop    esi
  407164:	push   ss
  407165:	sub    esi,DWORD PTR [eax+0xa]
  407168:	push   edi
  407169:	std    
  40716a:	in     al,dx
  40716b:	pusha  
  40716c:	nop
  40716d:	pop    edx
  40716e:	call   0x5f6df98b
  407173:	stc    
  407174:	ja     0x4071d6
  407176:	sub    DWORD PTR [ecx+0x26],edi
  407179:	mov    eax,0x17389cbf
  40717e:	popa   
  40717f:	daa    
  407180:	lods   eax,DWORD PTR ds:[esi]
  407181:	(bad)  
  407183:	mov    edi,ebx
  407185:	addr16 gs fcmovne st,st(3)
  407189:	gs data16 jne 0x407175
  40718d:	ja     0x407204
  40718f:	jmp    FWORD PTR [esi+0x67]
  407192:	jmp    0xad49e264
  407197:	push   edx
  407198:	mov    ds:0x561f523b,al
  40719d:	adc    ebx,DWORD PTR [edi]
  40719f:	mov    ch,BYTE PTR [edx-0x16d99cb8]
  4071a5:	ror    BYTE PTR [ebp+0x7fb27ab],1
  4071ab:	or     al,0x5b
  4071ad:	inc    ecx
  4071ae:	sbb    al,ah
  4071b0:	ins    DWORD PTR es:[edi],dx
  4071b1:	(bad)  
  4071b2:	popf   
  4071b3:	dec    edi
  4071b4:	sub    bl,ah
  4071b6:	or     ebp,DWORD PTR [esi]
  4071b8:	mov    dl,0x3
  4071ba:	int3   
  4071bb:	add    DWORD PTR [edi],esi
  4071bd:	jne    0x407171
  4071bf:	add    BYTE PTR [eax-0x1a],0xad
  4071c3:	or     al,al
  4071c5:	pop    es
  4071c6:	xchg   BYTE PTR [edi],dl
  4071c8:	xor    ah,BYTE PTR ds:0x54d6936a
  4071ce:	mov    esi,0x9b09d80c
  4071d3:	pop    esi
  4071d4:	pop    edx
  4071d5:	jno    0x407159
  4071d7:	dec    ebp
  4071d8:	je     0x4071e0
  4071da:	xor    bh,BYTE PTR [edi+0x7e33fecc]
  4071e0:	jo     0x407188
  4071e2:	xor    al,0xf7
  4071e4:	or     al,0xf8
  4071e6:	dec    ebx
  4071e7:	lock mov ebx,0x2123106e
  4071ed:	xchg   esi,eax
  4071ee:	in     eax,0x8a
  4071f0:	enter  0x54f9,0x1
  4071f4:	and    al,0x1d
  4071f6:	cmp    DWORD PTR [ebx],eax
  4071f8:	jb     0x40717b
  4071fa:	ds dec eax
  4071fc:	neg    edi
  4071fe:	sahf   
  4071ff:	sbb    eax,0xca2ae193
  407204:	push   ebp
  407205:	mov    esp,0x5e9e1cdb
  40720a:	arpl   WORD PTR [esi-0x7ea51695],bp
  407210:	sahf   
  407211:	(bad)  
  407212:	sti    
  407213:	xor    ch,BYTE PTR [ecx]
  407215:	fidiv  DWORD PTR [edi-0x44536eb1]
  40721b:	in     eax,dx
  40721c:	sahf   
  40721d:	mov    dh,0x56
  40721f:	rol    BYTE PTR [eax+0x32],0x20
  407223:	jp     0x407250
  407225:	idiv   ebx
  407227:	(bad)  
  407228:	sub    bh,ch
  40722a:	das    
  40722b:	inc    ecx
  40722c:	test   DWORD PTR [ebx+eax*8+0x6725b573],esi
  407233:	inc    esp
  407234:	mov    ds:0x102b0f8d,eax
  407239:	outs   dx,DWORD PTR ds:[esi]
  40723a:	dec    eax
  40723b:	enter  0x7d85,0xae
  40723f:	sbb    ebx,DWORD PTR cs:[ebx]
  407242:	mov    ?,WORD PTR [ecx-0x5a]
  407245:	shl    DWORD PTR [edx-0x20],1
  407248:	mov    bl,0x1e
  40724a:	jns    0x407218
  40724c:	inc    edx
  40724d:	xchg   ebp,eax
  40724e:	sbb    DWORD PTR [ecx],esp
  407250:	lea    edx,[eax+0xa]
  407253:	std    
  407254:	hlt    
  407255:	adc    ecx,ecx
  407257:	sub    BYTE PTR [ecx-0x3e05398a],dl
  40725d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40725e:	out    0x4e,eax
  407260:	jl     0x40723e
  407262:	lock in al,0xe9
  407265:	arpl   WORD PTR [edi-0x124268e2],bx
  40726b:	in     eax,dx
  40726c:	add    dh,dh
  40726e:	push   edx
  40726f:	js     0x407266
  407271:	lods   eax,DWORD PTR ds:[esi]
  407272:	imul   edx,DWORD PTR [edi+0x78],0xffffff99
  407276:	adc    edi,DWORD PTR [esp+ecx*2-0xa]
  40727a:	iret   
  40727b:	adc    DWORD PTR [esi],0x15
  40727e:	mov    ch,BYTE PTR [ebp-0x62]
  407281:	mov    al,0x9b
  407284:	mov    ah,0x4e
  407286:	call   0x70f1:0x51108fe3
  40728d:	mov    eax,0x8cce64fc
  407292:	dec    eax
  407293:	xor    dl,0x9d
  407296:	inc    esp
  407297:	mov    ebp,0x8d444a75
  40729c:	call   0x4262d631
  4072a1:	nop
  4072a2:	sub    bl,dl
  4072a4:	fiadd  WORD PTR ds:0xb57d13a8
  4072aa:	pop    esp
  4072ab:	dec    esi
  4072ac:	divps  xmm1,xmm1
  4072af:	mov    edi,0x30f75ab4
  4072b4:	jo     0x40732c
  4072b6:	mov    dh,0xea
  4072b8:	inc    eax
  4072b9:	xor    BYTE PTR [ecx-0x18],bh
  4072bc:	add    al,ch
  4072be:	mov    ah,0x1c
  4072c0:	jmp    0x4072a1
  4072c2:	fist   DWORD PTR [edx-0x77]
  4072c5:	jbe    0x407276
  4072c7:	mov    dh,0x59
  4072c9:	push   ebp
  4072ca:	inc    esi
  4072cb:	pusha  
  4072cc:	inc    ecx
  4072cd:	inc    esp
  4072ce:	dec    esp
  4072cf:	mov    edx,0x8bc4d848
  4072d4:	mov    ah,0x68
  4072d6:	mov    ah,0x25
  4072d8:	xchg   esi,eax
  4072d9:	(bad)  
  4072da:	ror    DWORD PTR [ecx],1
  4072dc:	iret   
  4072dd:	jnp    0x407325
  4072df:	and    DWORD PTR [edx-0x472e0953],ebp
  4072e5:	fsubr  QWORD PTR [ecx]
  4072e7:	retf   
  4072e8:	mov    bl,BYTE PTR [ecx]
  4072ea:	out    dx,al
  4072eb:	es xchg esp,eax
  4072ed:	daa    
  4072ee:	repz addr16 into 
  4072f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072f2:	mov    dh,0x7e
  4072f4:	mov    dl,0x72
  4072f6:	or     BYTE PTR [edi],cl
  4072f8:	pop    es
  4072f9:	(bad)  
  4072fa:	test   al,0xec
  4072fc:	or     BYTE PTR [esi+esi*1-0x319837e4],ch
  407303:	xor    DWORD PTR [edi],esi
  407305:	adc    al,BYTE PTR [eax+ebx*4]
  407308:	pop    edx
  407309:	ja     0x4072d5
  40730b:	jmp    0x40737c
  40730d:	fistp  DWORD PTR [ebp-0x65634130]
  407313:	rol    DWORD PTR [eax],cl
  407315:	and    ebx,esi
  407317:	pop    ebp
  407318:	cmp    DWORD PTR [ecx],esi
  40731a:	xor    eax,0x9ed5fe11
  40731f:	sbb    esi,DWORD PTR [ecx-0x750e2d03]
  407325:	mov    al,0xd0
  407327:	int3   
  407328:	pop    ds
  407329:	lods   al,BYTE PTR ds:[esi]
  40732a:	outs   dx,BYTE PTR ds:[esi]
  40732b:	add    esp,eax
  40732d:	sub    eax,0xe196fa30
  407332:	add    esp,DWORD PTR [ebp-0x197160b0]
  407338:	xor    DWORD PTR [edi-0x41ccd75c],edx
  40733e:	sbb    al,0x43
  407340:	test   eax,0x89e6376e
  407345:	jge    0x407393
  407347:	and    DWORD PTR [esi+eax*4],0x70fdde07
  40734e:	mov    ds:0x2524599b,eax
  407353:	and    eax,eax
  407355:	jmp    0xec:0x9325510
  40735c:	add    eax,0x2c0aebd5
  407361:	out    0x86,eax
  407363:	push   edx
  407364:	cmp    DWORD PTR [eax-0x2f],esp
  407367:	dec    eax
  407368:	out    dx,al
  407369:	or     BYTE PTR [ecx-0x3a81218f],ch
  40736f:	call   0x758b639c
  407374:	out    0xe0,al
  407376:	xor    eax,0xd403aa0
  40737b:	xor    cl,BYTE PTR [edi]
  40737d:	mov    ds:0x46795cc4,al
  407382:	sub    BYTE PTR [ebx+0x715d62f3],0x32
  407389:	adc    esi,DWORD PTR [ebx-0x3f980e29]
  40738f:	adc    DWORD PTR [ebp+eiz*8-0x33ff370],edi
  407396:	sbb    BYTE PTR [edi-0x7c4a6d50],cl
  40739c:	in     eax,0x87
  40739e:	xchg   esi,eax
  40739f:	loopne 0x4073e6
  4073a1:	ficom  WORD PTR [edx-0x45fe231d]
  4073a7:	sub    BYTE PTR [ecx-0x4f],al
  4073aa:	push   cs
  4073ab:	lds    edx,FWORD PTR [edi-0x11]
  4073ae:	mov    WORD PTR ds:0xac802500,cs
  4073b4:	inc    ebx
  4073b5:	cwde   
  4073b6:	pop    eax
  4073b7:	xchg   ebp,eax
  4073b8:	pop    edx
  4073b9:	out    dx,al
  4073ba:	pushf  
  4073bb:	aad    0x44
  4073bd:	fnsetpm(287 only) 
  4073bf:	push   edi
  4073c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073c1:	data16 mov al,ds:0x9579d45e
  4073c7:	cmp    DWORD PTR [esi],ebp
  4073c9:	das    
  4073ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073cb:	out    0x69,al
  4073cd:	xchg   DWORD PTR [esi+edx*2-0x34],ebx
  4073d1:	call   0x11a8:0xef3fa360
  4073d8:	aad    0x7
  4073da:	ror    DWORD PTR [ecx-0x50],0x30
  4073de:	test   DWORD PTR [edx+0x37],0x62c3da4e
  4073e5:	scas   al,BYTE PTR es:[edi]
  4073e6:	addr16 test eax,0xf7d90124
  4073ec:	stos   DWORD PTR es:[edi],eax
  4073ed:	xchg   esp,eax
  4073ee:	(bad)  
  4073ef:	(bad)  
  4073f0:	fs hlt 
  4073f2:	jno    0x407448
  4073f4:	or     DWORD PTR [esi],ebp
  4073f6:	aas    
  4073f7:	jne    0x4073ae
  4073f9:	push   esp
  4073fa:	bound  ebx,QWORD PTR [edi-0x21]
  4073fd:	or     al,0x72
  4073ff:	add    al,0x25
  407401:	xor    BYTE PTR [ebx+0x51],bl
  407404:	sub    eax,0x3d3209bf
  407409:	push   bx
  40740b:	xchg   edx,eax
  40740c:	xor    ah,BYTE PTR [esi]
  40740e:	(bad)  
  40740f:	popw   ds
  407411:	inc    eax
  407412:	das    
  407413:	and    edi,DWORD PTR [ebp+ecx*1-0x4a]
  407417:	in     eax,dx
  407418:	mov    ch,0x9
  40741a:	fidiv  DWORD PTR [ebx+0x370d00a0]
  407420:	jns    0x4073b6
  407422:	fwait
  407423:	jl     0x407443
  407425:	(bad)  
  407426:	daa    
  407427:	adc    eax,0xdfb679a0
  40742c:	rcr    DWORD PTR [ebx+0x63f9565c],1
  407432:	and    al,0x44
  407434:	adc    DWORD PTR [ecx+0x7303ff6],0x38f8f841
  40743e:	add    ebp,esp
  407440:	ins    DWORD PTR es:[edi],dx
  407441:	call   0x1b048acb
  407446:	or     eax,0xb7fd368b
  40744b:	ss loope 0x407415
  40744e:	jmp    0x6549:0x448eb49b
  407455:	cdq    
  407456:	adc    ah,bh
  407458:	push   esp
  407459:	mov    esi,0x7bd271d
  40745e:	js     0x407412
  407460:	dec    eax
  407461:	lods   eax,DWORD PTR ds:[esi]
  407462:	dec    esi
  407463:	dec    ecx
  407464:	sub    BYTE PTR [ecx],dh
  407466:	not    BYTE PTR [edx-0x40]
  407469:	iret   
  40746a:	dec    eax
  40746b:	in     al,0x19
  40746d:	adc    eax,0x2e62cc3e
  407472:	sbb    bh,bh
  407474:	inc    ebp
  407475:	(bad)  
  407476:	sbb    eax,eax
  407478:	(bad)
  40747d:	push   ss
  40747e:	retf   0xf688
  407481:	mov    cs,WORD PTR [ecx+0x413ed40d]
  407487:	pop    ss
  407488:	jb     0x407412
  40748a:	fcmovne st,st(1)
  40748c:	mov    ch,0x27
  40748e:	and    DWORD PTR [edi],eax
  407490:	sub    al,0xe
  407492:	jae    0x407445
  407494:	retf   
  407495:	mov    al,ds:0xeb21b7e2
  40749a:	out    dx,al
  40749b:	add    DWORD PTR [eax-0x4d],edi
  40749e:	sar    BYTE PTR [edi],1
  4074a0:	sub    ah,al
  4074a2:	dec    eax
  4074a3:	(bad)  
  4074a4:	add    edx,DWORD PTR [eax+0x2176eb7c]
  4074aa:	pop    ebx
  4074ab:	test   eax,0x4c215f4f
  4074b0:	adc    BYTE PTR [eax],bl
  4074b2:	ret    
  4074b3:	jl     0x407495
  4074b5:	mov    ebp,0xa28753cf
  4074ba:	and    eax,0xe77bfa00
  4074bf:	in     eax,0xf5
  4074c1:	or     esi,DWORD PTR [ebx+0x44]
  4074c4:	stos   BYTE PTR es:[edi],al
  4074c5:	inc    esp
  4074c6:	out    0x27,eax
  4074c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c9:	adc    DWORD PTR [eax+0x11],edx
  4074cc:	cmp    DWORD PTR ds:0xdb34a7ed,ecx
  4074d2:	shr    DWORD PTR [edi-0x64],1
  4074d5:	in     eax,0xb4
  4074d7:	push   ss
  4074d8:	fld    QWORD PTR [esp+eax*4]
  4074db:	pop    esi
  4074dc:	outs   dx,DWORD PTR ds:[esi]
  4074dd:	in     eax,0xa7
  4074df:	and    edi,DWORD PTR [edx]
  4074e1:	xor    ecx,DWORD PTR [edx+0x77]
  4074e4:	add    al,0x28
  4074e6:	inc    edi
  4074e7:	das    
  4074e8:	in     al,0xfe
  4074ea:	cmp    al,0x4b
  4074ec:	lea    eax,[eax-0x1]
  4074ef:	mov    ecx,0x98f95d90
  4074f4:	cli    
  4074f5:	aaa    
  4074f6:	mov    cl,cl
  4074f8:	pusha  
  4074f9:	and    al,0x4
  4074fb:	jns    0x4074c9
  4074fd:	sub    ebx,ecx
  4074ff:	ds push esi
  407501:	jno    0x4074c4
  407503:	inc    esi
  407504:	ficomp DWORD PTR [edx-0x65]
  407507:	fnstenv [edx+0x36]
  40750a:	ja     0x4074ed
  40750c:	retf   
  40750d:	ret    
  40750e:	mov    ebp,0x74c91738
  407513:	int3   
  407514:	pop    eax
  407515:	fwait
  407516:	sub    al,0xb6
  407518:	call   0x5c26df9b
  40751d:	lea    edx,[ecx+0x63]
  407520:	push   edx
  407521:	pop    ebx
  407522:	stos   BYTE PTR es:[edi],al
  407523:	lods   eax,DWORD PTR ds:[esi]
  407524:	push   es
  407525:	pop    es
  407526:	inc    eax
  407527:	mov    ds:0x195fdf90,eax
  40752c:	jmp    0x72dd:0x8cdb98d8
  407533:	dec    esp
  407534:	xor    eax,0xa3dcb7c5
  407539:	out    0xe6,al
  40753b:	inc    eax
  40753c:	in     eax,0x5d
  40753e:	adc    eax,0xb16a59b4
  407543:	dec    edx
  407544:	adc    eax,0xf4dc60ea
  407549:	inc    edi
  40754a:	daa    
  40754b:	lds    edx,FWORD PTR ds:0x6954ee50
  407551:	daa    
  407552:	and    esi,DWORD PTR [edi-0x50]
  407555:	scas   al,BYTE PTR es:[edi]
  407556:	shl    BYTE PTR [eax],cl
  407558:	daa    
  407559:	xchg   ebx,eax
  40755a:	and    al,0x73
  40755c:	jge    0x407537
  40755e:	fs jg  0x4075d4
  407561:	popa   
  407562:	xor    esi,eax
  407564:	int3   
  407565:	out    0xc8,eax
  407567:	push   esi
  407568:	push   es
  407569:	adc    edx,DWORD PTR ds:0xac1d0052
  40756f:	xchg   ebp,ecx
  407571:	mov    ds,WORD PTR [edx]
  407573:	xor    DWORD PTR [ecx],0x6198a831
  407579:	arpl   WORD PTR [eax],bx
  40757b:	add    eax,0x54eac885
  407580:	xor    dl,bl
  407582:	push   ebp
  407583:	lods   al,BYTE PTR ds:[esi]
  407584:	mov    al,BYTE PTR [ebx]
  407586:	bound  ecx,QWORD PTR [edi-0x20]
  407589:	(bad)  
  40758b:	inc    eax
  40758c:	iret   
  40758d:	jmp    DWORD PTR [edi]
  40758f:	ins    DWORD PTR es:[edi],dx
  407590:	and    ebp,esp
  407592:	and    ch,bl
  407594:	adc    al,0xdb
  407596:	jbe    0x4075f3
  407598:	mov    ah,BYTE PTR [ebx+0x480e784a]
  40759e:	mov    dl,0x32
  4075a0:	imul   ebx,DWORD PTR fs:[esi+ebp*1-0x645c327f],0x9a4f5d00
  4075ac:	pop    esi
  4075ad:	pop    edi
  4075ae:	mov    ds:0xe4ade767,eax
  4075b3:	in     al,0x9d
  4075b5:	lods   al,BYTE PTR ds:[esi]
  4075b6:	fidiv  DWORD PTR [ecx+ecx*8]
  4075b9:	imul   edx,DWORD PTR ds:0x81d25fac,0x125bf304
  4075c3:	pop    es
  4075c4:	mov    ds:0x9b81a731,eax
  4075c9:	dec    esi
  4075ca:	das    
  4075cb:	mov    esi,0xcdaaaf2c
  4075d0:	(bad)  [ebp-0x6c]
  4075d3:	mov    esp,0x8ba76956
  4075d8:	(bad)  
  4075d9:	hlt    
  4075da:	push   0xebe5ea01
  4075df:	cmp    eax,0x3656f106
  4075e4:	(bad)  [ecx-0x28e509d8]
  4075ea:	out    0x2,al
  4075ec:	outs   dx,DWORD PTR ds:[esi]
  4075ed:	sti    
  4075ee:	or     al,0x7
  4075f0:	dec    ecx
  4075f1:	add    BYTE PTR [ecx-0xe],dh
  4075f4:	mov    bl,0x38
  4075f6:	arpl   WORD PTR [edx-0x5e1666d6],bx
  4075fc:	das    
  4075fd:	mov    bl,dl
  4075ff:	push   ebp
  407600:	data16 jge 0x40762e
  407603:	inc    edi
  407604:	mov    WORD PTR [esi],ss
  407606:	das    
  407607:	jp     0x4075ed
  407609:	pop    eax
  40760a:	dec    ebx
  40760b:	fiadd  DWORD PTR [ebp-0x7d]
  40760e:	mov    al,0x42
  407610:	(bad)  
  407612:	scas   eax,DWORD PTR es:[edi]
  407613:	xlat   BYTE PTR ds:[ebx]
  407614:	bnd jo 0x407676
  407617:	adc    al,0x68
  407619:	lods   eax,DWORD PTR ds:[esi]
  40761a:	mov    cl,0xd6
  40761c:	mov    cl,0x9d
  40761e:	(bad)  
  40761f:	sbb    eax,0x79aba044
  407624:	mov    ecx,0x9b3015da
  407629:	mov    al,0xfe
  40762b:	das    
  40762c:	aad    0xb1
  40762e:	mov    esp,esi
  407630:	push   ds
  407631:	(bad)  
  407632:	rol    dl,cl
  407634:	and    cl,BYTE PTR [eax-0x91b94fe]
  40763a:	cli    
  40763b:	imul   ebx,DWORD PTR [edx+0x78578020],0x50a1acef
  407645:	pop    eax
  407646:	jnp    0x4075ea
  407648:	xchg   ebp,eax
  407649:	add    BYTE PTR [ebp-0x6e],dh
  40764c:	mov    ah,0xb4
  40764e:	mov    ebx,0xcb6d8cd2
  407653:	or     DWORD PTR [edi+eax*2-0x3abfa0b7],eax
  40765a:	fist   DWORD PTR [ebx+0x5d0c0dbd]
  407660:	sahf   
  407661:	and    DWORD PTR [ebx+0xedc7f38],0xf4f56d13
  40766b:	mov    ah,0xec
  40766d:	fwait
  40766e:	stos   BYTE PTR es:[edi],al
  40766f:	ins    BYTE PTR es:[edi],dx
  407670:	xlat   BYTE PTR ds:[ebx]
  407671:	stc    
  407672:	clc    
  407673:	push   esi
  407674:	sub    ch,al
  407676:	test   BYTE PTR [ebp-0x9],dl
  407679:	int    0x80
  40767b:	stc    
  40767c:	inc    esi
  40767d:	pop    es
  40767e:	enterw 0xcfbc,0x78
  407683:	sub    ah,bh
  407685:	sub    bl,bh
  407687:	std    
  407688:	or     eax,0x87b236c0
  40768d:	dec    edx
  40768e:	mov    dl,0x11
  407690:	xchg   ebx,eax
  407691:	ds das 
  407693:	mov    ds:0xb3d229ff,al
  407698:	es je  0x4076ce
  40769b:	cmp    ch,cl
  40769d:	into   
  40769e:	cmp    DWORD PTR [edi-0x1a722cc3],ebx
  4076a4:	push   edi
  4076a5:	nop
  4076a6:	dec    esp
  4076a7:	jl     0x4076f0
  4076a9:	mov    ebp,0xa0b5daf7
  4076ae:	inc    edx
  4076af:	adc    al,0x5b
  4076b1:	inc    esi
  4076b2:	cmc    
  4076b3:	clc    
  4076b4:	pushf  
  4076b5:	mov    eax,0x777216af
  4076ba:	repz sub ecx,DWORD PTR [esi+ebx*8+0x55]
  4076bf:	sbb    al,0xee
  4076c1:	pop    es
  4076c2:	or     eax,0xd28a3cb6
  4076c7:	push   eax
  4076c8:	aad    0xb7
  4076ca:	xchg   ebp,eax
  4076cb:	arpl   bp,cx
  4076cd:	push   esp
  4076ce:	cmp    eax,0xd9b4448d
  4076d3:	in     eax,0xf9
  4076d5:	cld    
  4076d6:	push   es
  4076d7:	xchg   edi,eax
  4076d8:	push   es
  4076d9:	adc    BYTE PTR [edx+0x609729fe],bh
  4076df:	inc    ecx
  4076e0:	mov    cl,0xf6
  4076e2:	push   edi
  4076e3:	and    cl,BYTE PTR [edi]
  4076e5:	add    DWORD PTR [eax-0x3e],edx
  4076e8:	ret    
  4076e9:	out    dx,al
  4076ea:	int3   
  4076eb:	(bad)  [esi-0x76]
  4076ee:	add    al,0xb
  4076f0:	cmp    al,0xab
  4076f2:	push   ds
  4076f3:	cmc    
  4076f4:	push   ebp
  4076f5:	mov    bh,0x3d
  4076f7:	in     eax,0xaf
  4076f9:	int3   
  4076fa:	icebp  
  4076fb:	imul   esp,DWORD PTR [ebx-0x48],0xa11ddbed
  407702:	ret    
  407703:	(bad)  
  407704:	xchg   esp,eax
  407705:	dec    edx
  407706:	mov    ds:0x9fb850,al
  40770b:	int3   
  40770c:	test   eax,0x1fd8677
  407711:	ins    BYTE PTR es:[edi],dx
  407712:	in     eax,0xee
  407714:	cli    
  407715:	icebp  
  407716:	xor    ah,cl
  407718:	mov    eax,ds:0xe90a9a7b
  40771d:	mov    ebx,0x823a3f1
  407722:	test   ch,dl
  407724:	or     BYTE PTR [esi+eiz*8-0x73f6e25],ch
  40772b:	dec    ecx
  40772c:	stos   BYTE PTR es:[edi],al
  40772d:	test   eax,0xe072ef07
  407732:	xor    edx,DWORD PTR [ecx-0x62216546]
  407738:	pop    edx
  407739:	scas   eax,DWORD PTR es:[edi]
  40773a:	pop    edi
  40773b:	and    ebp,ebx
  40773d:	test   al,0xfc
  40773f:	fsubr  QWORD PTR [edi]
  407741:	pushf  
  407742:	xchg   edx,eax
  407743:	test   eax,0x1c2003c9
  407748:	clc    
  407749:	mov    edi,0xec51667c
  40774e:	mov    bh,dl
  407750:	daa    
  407751:	sti    
  407752:	push   ecx
  407753:	fld    DWORD PTR [ebx]
  407755:	pushf  
  407756:	sub    DWORD PTR [ebx-0x2c],ecx
  407759:	clc    
  40775a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40775b:	pop    ecx
  40775c:	je     0x40777e
  40775e:	mov    ebp,0xfb450ef5
  407763:	dec    ebp
  407764:	aad    0x56
  407766:	aaa    
  407767:	(bad)  [edi]
  407769:	adc    ebp,eax
  40776b:	jnp    0x40774c
  40776d:	(bad)  
  40776e:	cmc    
  40776f:	int    0x60
  407771:	xor    DWORD PTR [edx+0x7889858],edi
  407777:	mov    BYTE PTR ds:0xc903c934,al
  40777d:	dec    edi
  40777e:	mov    eax,0xb60fceb7
  407783:	fstp   QWORD PTR [esi-0x73e0f5c4]
  407789:	or     ah,BYTE PTR [ecx+eiz*2+0x2a]
  40778d:	ret    
  40778e:	add    al,0xee
  407790:	in     eax,0x35
  407792:	adc    ebp,ecx
  407794:	push   ecx
  407795:	int3   
  407796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407798:	pushf  
  407799:	jl     0x407778
  40779b:	pop    ds
  40779c:	add    BYTE PTR [esi],cl
  40779e:	pushf  
  40779f:	popa   
  4077a0:	push   ss
  4077a1:	jecxz  0x407806
  4077a3:	psllq  mm5,QWORD PTR [esi-0xa]
  4077a7:	les    ecx,FWORD PTR [eax+0x6e]
  4077aa:	xor    al,0x84
  4077ac:	rcr    BYTE PTR [ebp+0x79],1
  4077af:	push   esi
  4077b0:	mov    esi,0x7404ca0a
  4077b5:	dec    ebx
  4077b6:	push   ebx
  4077b7:	jo     0x407769
  4077b9:	ja     0x407805
  4077bb:	in     eax,0x9d
  4077bd:	repz mov al,0x99
  4077c0:	(bad)  
  4077c1:	sbb    al,0xde
  4077c3:	out    0xb7,eax
  4077c5:	fisub  WORD PTR [ecx-0x2]
  4077c8:	gs adc edi,DWORD PTR ds:[ecx+0x64]
  4077cd:	sahf   
  4077ce:	enter  0x6ac5,0xae
  4077d2:	inc    ebx
  4077d3:	stc    
  4077d4:	sub    eax,DWORD PTR [edx+0x5c3af9f6]
  4077da:	mov    edi,0x22feede6
  4077df:	push   ecx
  4077e0:	mov    ah,0xf3
  4077e2:	aad    0xcb
  4077e4:	mov    bh,0xb9
  4077e6:	loop   0x4077a7
  4077e8:	outs   dx,BYTE PTR ds:[esi]
  4077e9:	(bad)
  4077ec:	mov    cl,ch
  4077ee:	xor    ecx,DWORD PTR [esi-0xe18f6be]
  4077f4:	sbb    DWORD PTR [esi+0x33357976],ecx
  4077fa:	push   esp
  4077fb:	push   edx
  4077fc:	jge    0x40780f
  4077fe:	pop    esi
  4077ff:	adc    al,0x9f
  407801:	lods   al,BYTE PTR ds:[esi]
  407802:	inc    edi
  407803:	ja     0x40781d
  407805:	in     al,dx
  407806:	mov    cl,0x1a
  407808:	inc    edx
  407809:	fdivr  QWORD PTR [esi]
  40780b:	in     al,0x3d
  40780d:	xchg   BYTE PTR [edi-0x78c6e526],dh
  407813:	pop    ss
  407814:	mov    esp,0x743f997b
  407819:	and    DWORD PTR [ebp+0x4f05449f],ebx
  40781f:	stos   DWORD PTR es:[edi],eax
  407820:	iret   
  407821:	jae    0x40783a
  407823:	call   0x5ee6f162
  407828:	add    ebx,DWORD PTR [ebx+0x69aa5027]
  40782e:	shl    DWORD PTR [eax],0xe4
  407831:	lahf   
  407832:	(bad)  
  407833:	ds scas eax,DWORD PTR es:[edi]
  407835:	shl    DWORD PTR [ebx+0x1f],1
  407838:	add    al,0xee
  40783a:	pusha  
  40783b:	sbb    al,0x6a
  40783d:	lock ja 0x40787c
  407840:	or     bh,BYTE PTR [eax-0x51]
  407843:	xor    WORD PTR [ebx*2+0x645738e0],bp
  40784b:	test   BYTE PTR [ebp+0x30],bl
  40784e:	jno    0x40780f
  407850:	pusha  
  407851:	xor    DWORD PTR [edi-0x5def30d1],edi
  407857:	mov    edi,0xf6ed3908
  40785c:	lds    edi,FWORD PTR [esi]
  40785e:	cmp    BYTE PTR [esi+0x13a7e647],0xf
  407865:	inc    ebx
  407866:	or     bh,al
  407868:	or     DWORD PTR [esi],eax
  40786a:	dec    edi
  40786b:	mov    ds:0xa37396e5,eax
  407870:	fild   WORD PTR ds:0x2eda8eb2
  407876:	or     al,0xa4
  407878:	xchg   DWORD PTR [ecx+0x82d824e],esp
  40787e:	dec    ebx
  40787f:	mov    bl,0x9d
  407881:	fwait
  407882:	xchg   ebx,eax
  407883:	lea    ecx,[ebx+0x59]
  407886:	nop
  407887:	popa   
  407888:	sub    BYTE PTR [edi+0x9dea457],ch
  40788e:	call   0x7f5b1658
  407893:	stos   BYTE PTR es:[edi],al
  407894:	pop    edx
  407895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407896:	test   DWORD PTR [edi],eax
  407898:	or     BYTE PTR [edx+0xeb5fbcc],dl
  40789e:	mov    DWORD PTR [ebp+0x6a],esp
  4078a1:	hlt    
  4078a2:	loop   0x407863
  4078a4:	or     ch,dl
  4078a6:	fmul   QWORD PTR [ecx-0x3b]
  4078a9:	ror    BYTE PTR [edi-0x42],cl
  4078ac:	fcomip st,st(2)
  4078ae:	stos   DWORD PTR es:[edi],eax
  4078af:	mov    bh,0x22
  4078b1:	sbb    al,0x8b
  4078b3:	pop    ds
  4078b4:	push   esp
  4078b5:	mov    ecx,0xb9b3f803
  4078ba:	push   es
  4078bb:	add    DWORD PTR [ebp-0x56a6712a],ebx
  4078c1:	test   eax,0x478ed4f8
  4078c6:	out    0x6a,al
  4078c8:	pushf  
  4078c9:	xor    BYTE PTR [edx+eiz*2],dl
  4078cc:	jbe    0x40787f
  4078ce:	out    0xcd,al
  4078d0:	xor    DWORD PTR [esi],esi
  4078d2:	cdq    
  4078d3:	int3   
  4078d4:	ret    0xaeca
  4078d7:	fwait
  4078d8:	popf   
  4078d9:	into   
  4078da:	fistp  QWORD PTR [eax+eiz*1-0x6df4e9d8]
  4078e1:	or     al,0xce
  4078e3:	dec    ecx
  4078e4:	xor    BYTE PTR [edx+0x72966fec],ch
  4078ea:	lahf   
  4078eb:	outs   dx,DWORD PTR ds:[esi]
  4078ec:	jge    0x407900
  4078ee:	xor    DWORD PTR [esi+0x74],esp
  4078f1:	repz repnz mov ah,0x7b
  4078f5:	push   0xbc82edd8
  4078fa:	or     DWORD PTR [edx+0x42],esp
  4078fd:	mov    eax,ds:0xba279a9a
  407902:	lahf   
  407903:	enter  0xa77d,0x3e
  407907:	(bad)  
  407908:	fld    st(7)
  40790a:	psubd  mm4,mm4
  40790d:	ins    DWORD PTR es:[edi],dx
  40790e:	sub    DWORD PTR [eax],ecx
  407910:	pop    esi
  407911:	mov    ebx,0x279b19e0
  407916:	adc    al,0xd4
  407918:	imul   BYTE PTR [eax]
  40791a:	sub    bh,BYTE PTR [ebp+esi*1-0x43]
  40791e:	mov    cl,0xb3
  407920:	pop    edx
  407921:	mov    ebx,0xaa48f357
  407926:	iret   
  407927:	mul    DWORD PTR [ebp-0x21]
  40792a:	or     DWORD PTR [edx-0x58de72ab],edx
  407930:	out    dx,al
  407931:	sub    bl,BYTE PTR [edx-0x20]
  407934:	adc    BYTE PTR [ebx-0x7a19e477],ah
  40793a:	dec    esi
  40793b:	mov    esi,0x83224564
  407940:	ret    
  407941:	mov    esp,0xd09a5e
  407946:	neg    DWORD PTR [esi]
  407948:	cli    
  407949:	and    ebx,0x1da2141
  40794f:	mov    esp,ecx
  407951:	sbb    dh,BYTE PTR [esi]
  407953:	sub    DWORD PTR [eax+0xada630a],esi
  407959:	and    ah,0x47
  40795c:	(bad)  
  40795d:	in     al,0xd8
  40795f:	lods   eax,DWORD PTR ds:[esi]
  407960:	sbb    BYTE PTR [ebx],ah
  407962:	mov    ch,0xa6
  407964:	into   
  407965:	xchg   edi,eax
  407966:	cmp    BYTE PTR [ebp-0x6e],dl
  407969:	repz pop edi
  40796b:	(bad)  
  40796c:	sbb    BYTE PTR [esi],dl
  40796e:	addr16 jne 0x40797d
  407971:	clc    
  407972:	popa   
  407973:	ror    DWORD PTR [edx+0x66],cl
  407976:	or     eax,0xb223069b
  40797b:	fcmovu st,st(1)
  40797d:	mov    dh,0x6e
  40797f:	mov    DWORD PTR [ebp+ebp*4-0x6f545d4a],esi
  407986:	jbe    0x4079ea
  407988:	lds    ebx,FWORD PTR [edx-0x7829d098]
  40798e:	inc    ecx
  40798f:	sub    ebx,ecx
  407991:	mov    dh,0x20
  407993:	or     cl,BYTE PTR [ecx-0x4b]
  407996:	push   0x8641a9fd
  40799b:	ffree  st(6)
  40799d:	mov    ch,bh
  40799f:	mov    eax,ds:0xb2ae39fb
  4079a4:	inc    di
  4079a6:	jmp    0xbfc2e049
  4079ab:	mov    al,ds:0x685e17b7
  4079b0:	pop    eax
  4079b1:	push   edi
  4079b2:	mov    edx,0xb1367de3
  4079b7:	lods   eax,DWORD PTR ds:[esi]
  4079b8:	loopne 0x407973
  4079ba:	mov    bh,dl
  4079bc:	xor    ecx,DWORD PTR [edx+edi*4]
  4079bf:	or     eax,0x1b99ccb7
  4079c4:	fimul  DWORD PTR [ecx]
  4079c6:	or     al,ah
  4079c8:	mov    ds:0x84e49114,al
  4079cd:	mov    dl,0x67
  4079cf:	inc    edi
  4079d0:	or     ebp,edx
  4079d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079d3:	sbb    eax,edi
  4079d5:	repnz and al,0xa6
  4079d8:	inc    edx
  4079d9:	push   0x16a7f902
  4079de:	mov    bh,0x64
  4079e0:	xchg   edx,eax
  4079e1:	xor    eax,0x8393be50
  4079e6:	push   es
  4079e7:	sbb    esp,DWORD PTR [esi]
  4079e9:	pop    ss
  4079ea:	pop    edx
  4079eb:	mov    ds:0xe13a3a2b,al
  4079f0:	ret    
  4079f1:	imul   edx,DWORD PTR [edi+ebp*4-0x2e],0x72b920ff
  4079f9:	cmp    eax,0xfe69f1b7
  4079fe:	jno    0x407a59
  407a00:	sahf   
  407a01:	ss dec esp
  407a03:	and    eax,0x812e2940
  407a08:	adc    BYTE PTR [ebx+0x7c20f18],dl
  407a0e:	out    0x92,eax
  407a10:	scas   al,BYTE PTR es:[edi]
  407a11:	andps  xmm7,XMMWORD PTR [ecx-0x15]
  407a15:	and    ebx,DWORD PTR [eax]
  407a17:	push   ebp
  407a18:	retf   
  407a19:	cmp    DWORD PTR [ebp+0x58],ebp
  407a1c:	inc    esi
  407a1d:	in     al,0x38
  407a1f:	pop    esp
  407a20:	int    0xbd
  407a22:	(bad)  [ebx+0xf8b7aed]
  407a28:	fstp   DWORD PTR ds:[edi-0x78d6b226]
  407a2f:	dec    esp
  407a30:	xor    bh,BYTE PTR [esi+0x2222cc69]
  407a36:	outs   dx,BYTE PTR ds:[esi]
  407a37:	inc    edi
  407a38:	imul   edx,DWORD PTR [edx-0x2ac63379],0x23
  407a3f:	or     dl,0xc
  407a42:	xor    BYTE PTR [ecx],0x1f
  407a45:	das    
  407a46:	clc    
  407a47:	inc    ebx
  407a48:	push   ecx
  407a49:	sar    DWORD PTR [eax+0x429e74f2],cl
  407a4f:	and    BYTE PTR [edi-0x58],ch
  407a52:	scas   eax,DWORD PTR es:[edi]
  407a53:	and    edx,0x8a7a20fe
  407a59:	cld    
  407a5a:	adc    DWORD PTR [ebx],edi
  407a5c:	or     eax,0x761531f1
  407a61:	cli    
  407a62:	adc    bl,BYTE PTR [edi+ecx*2-0x14]
  407a66:	lods   eax,DWORD PTR ds:[esi]
  407a67:	fdiv   DWORD PTR [esi-0x40]
  407a6a:	push   0x79
  407a6c:	dec    edi
  407a6d:	sub    BYTE PTR [edx],ah
  407a6f:	les    edi,FWORD PTR [esi+0x3b]
  407a72:	or     bh,ch
  407a74:	sahf   
  407a75:	push   eax
  407a76:	push   ds
  407a77:	push   eax
  407a78:	add    DWORD PTR [edx+0x6f],ecx
  407a7b:	pmaddwd mm4,QWORD PTR [ebp+0x92ea77d]
  407a82:	and    eax,0xdc33335f
  407a87:	push   ebp
  407a88:	sbb    eax,0x85f3cb94
  407a8d:	js     0x407a74
  407a8f:	mov    bl,0xbc
  407a91:	xchg   ebp,eax
  407a92:	pop    ds
  407a93:	pusha  
  407a94:	pop    edx
  407a95:	add    bh,BYTE PTR [esi+0x76]
  407a98:	inc    ebx
  407a99:	push   esp
  407a9a:	aas    
  407a9b:	push   esp
  407a9c:	lock aad 0x3c
  407a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa0:	pop    gs
  407aa2:	loop   0x407acd
  407aa4:	iret   
  407aa5:	cwde   
  407aa6:	mov    ebp,0x2f7138fa
  407aab:	xor    DWORD PTR [esi],edx
  407aad:	mov    cl,BYTE PTR [ebx+0x2c]
  407ab0:	inc    ebx
  407ab1:	push   edx
  407ab2:	jo     0x407a87
  407ab4:	pop    ebp
  407ab5:	add    eax,0xd7d0d9af
  407aba:	sbb    al,0xc8
  407abc:	adc    ecx,DWORD PTR [ebx+ecx*4]
  407abf:	arpl   WORD PTR [edi-0x11],si
  407ac2:	clc    
  407ac3:	test   BYTE PTR [esi],bl
  407ac5:	pop    eax
  407ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ac7:	cmc    
  407ac8:	popa   
  407ac9:	adc    cl,BYTE PTR [edi]
  407acb:	fucomp st(4)
  407acd:	push   edx
  407ace:	mov    ebp,0x7be80f1e
  407ad3:	and    cl,0xc4
  407ad6:	or     BYTE PTR [esi],al
  407ad8:	jo     0x407b41
  407ada:	(bad)  
  407adc:	dec    esi
  407add:	push   esi
  407ade:	sub    eax,DWORD PTR [edx]
  407ae0:	dec    edi
  407ae1:	imul   ebp,DWORD PTR [esi+0x5a09bf54],0x328af03a
  407aeb:	mov    ds:0xddd8a0c7,al
  407af0:	xor    DWORD PTR [ebp-0x574ca435],eax
  407af6:	cmp    BYTE PTR [ebp-0x7d],0x9d
  407afa:	mov    ebx,0xa03c2e93
  407aff:	jae    0x407aa3
  407b01:	push   edx
  407b02:	fwait
  407b03:	or     ah,0x9b
  407b06:	call   0x8f48ab1f
  407b0b:	sbb    cl,dl
  407b0d:	dec    BYTE PTR [ebp-0x1f]
  407b10:	xor    al,0x36
  407b12:	daa    
  407b13:	das    
  407b14:	pop    ss
  407b15:	scas   al,BYTE PTR es:[edi]
  407b16:	push   ebx
  407b17:	ror    BYTE PTR [ebp+eax*1+0x1c],0x29
  407b1c:	sub    BYTE PTR [eax],0xa
  407b1f:	cmp    DWORD PTR [ebp+0x27],edx
  407b22:	jb     0x407b3f
  407b24:	mov    ebx,0xc58836bb
  407b29:	into   
  407b2a:	inc    ecx
  407b2b:	jbe    0x407b2b
  407b2d:	addr16 (bad) 
  407b2f:	clc    
  407b30:	and    al,0xbd
  407b32:	fnsave [ebx+ecx*4]
  407b35:	xchg   esi,eax
  407b36:	daa    
  407b37:	out    0xc5,al
  407b39:	gs (bad) 
  407b3b:	xor    DWORD PTR [ebp-0x7d09e587],eax
  407b41:	retf   
  407b42:	fist   WORD PTR ds:0xeb87dc7e
  407b48:	push   ebx
  407b49:	sub    DWORD PTR [esi-0x4bc0a024],ebp
  407b4f:	jbe    0x407ae8
  407b51:	jns    0x407ad8
  407b53:	aaa    
  407b54:	pop    ds
  407b55:	neg    DWORD PTR [edi+0x4b]
  407b58:	jle    0x407ba0
  407b5a:	lds    edx,FWORD PTR [ebx+0x62]
  407b5d:	fcomp  QWORD PTR [edi]
  407b5f:	sti    
  407b60:	fidiv  WORD PTR [ebp+0x35]
  407b63:	shl    BYTE PTR [esi+ebp*4-0x6dfd7b87],1
  407b6a:	cmp    eax,0xf649020c
  407b6f:	sub    eax,0x90413566
  407b74:	push   ebp
  407b75:	cmp    al,0x62
  407b77:	sbb    dh,BYTE PTR [ecx+eiz*4]
  407b7a:	dec    ebx
  407b7b:	rcl    BYTE PTR [esi],1
  407b7d:	les    ecx,FWORD PTR fs:[edi+0x26]
  407b81:	xor    al,0xba
  407b83:	addr16 repz push es
  407b86:	loop   0x407b3e
  407b88:	adc    ebp,DWORD PTR [ecx-0x1f]
  407b8b:	fs sub al,dl
  407b8e:	adc    ch,BYTE PTR [edi-0x39eeb3be]
  407b94:	sti    
  407b95:	lock xchg edx,eax
  407b97:	or     BYTE PTR [ebx+0x17],dl
  407b9a:	and    DWORD PTR [ecx+edx*4],0xf7cbcec7
  407ba1:	mov    eax,ds:0x678f9e99
  407ba6:	mov    dl,0xcf
  407ba8:	jg     0x407b95
  407baa:	mov    DWORD PTR [edi],0xc0751d61
  407bb0:	retf   
  407bb1:	xor    ecx,DWORD PTR [edi+0x5d3f709a]
  407bb7:	xchg   ebp,eax
  407bb8:	es ins BYTE PTR es:[edi],dx
  407bba:	call   0x81de2f17
  407bbf:	aaa    
  407bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc1:	pop    ds
  407bc2:	push   es
  407bc3:	adc    BYTE PTR fs:0xd78c214b,ah
  407bca:	jp     0x407b63
  407bcc:	mov    bh,0xe6
  407bce:	mov    WORD PTR [edi-0x3f],es
  407bd1:	(bad)  
  407bd3:	jl     0x407c24
  407bd5:	push   edx
  407bd6:	repnz scas al,BYTE PTR es:[edi]
  407bd8:	jp     0x407bca
  407bda:	push   es
  407bdb:	push   edx
  407bdc:	fsubr  QWORD PTR [edx+ebp*1+0x2005845d]
  407be3:	cmp    BYTE PTR [ebp+0x7a],dh
  407be6:	jmp    0x407b83
  407be8:	xchg   DWORD PTR [ebx-0x1e],ecx
  407beb:	das    
  407bec:	not    BYTE PTR [esi]
  407bee:	jnp    0x407b92
  407bf0:	push   ebp
  407bf1:	lods   eax,DWORD PTR ds:[esi]
  407bf2:	mov    dh,0x2f
  407bf4:	xchg   edx,eax
  407bf5:	pop    ebx
  407bf6:	fsub   DWORD PTR [esi+0x718cc3e7]
  407bfc:	js     0x407bcf
  407bfe:	pusha  
  407bff:	jbe    0x407b9a
  407c01:	call   0x7bdc72d1
  407c06:	push   esi
  407c07:	scas   eax,DWORD PTR es:[edi]
  407c08:	and    eax,0x450ff9be
  407c0d:	sahf   
  407c0e:	mov    cl,al
  407c10:	ins    BYTE PTR es:[edi],dx
  407c11:	leave  
  407c12:	inc    esp
  407c13:	mov    cl,0x2b
  407c15:	fnstenv [ecx]
  407c17:	add    eax,0xd9008f85
  407c1c:	lahf   
  407c1d:	pop    edx
  407c1e:	jecxz  0x407bdb
  407c20:	call   0x5475:0x25487736
  407c27:	mov    al,ds:0xdfe9fd99
  407c2c:	mov    dl,0x4d
  407c2e:	aad    0xee
  407c30:	fsub   st(4),st
  407c32:	mov    ah,0xd5
  407c34:	aas    
  407c35:	(bad)  
  407c36:	stos   BYTE PTR es:[edi],al
  407c37:	sbb    ebp,DWORD PTR [eax]
  407c39:	mov    edi,0xed506267
  407c3e:	push   ss
  407c3f:	jb     0x407bc4
  407c41:	xchg   edx,eax
  407c42:	adc    esp,DWORD PTR ds:0x99af9887
  407c48:	xor    eax,0xf5786306
  407c4d:	cmp    esi,DWORD PTR [ecx]
  407c4f:	imul   eax,DWORD PTR [edi+0x5d],0xfbe41ccc
  407c56:	hlt    
  407c57:	cli    
  407c58:	not    DWORD PTR [eax]
  407c5a:	mov    WORD PTR [ecx+0x35],ds
  407c5d:	cwde   
  407c5e:	mov    ebx,0xf40b4395
  407c63:	pop    ebp
  407c64:	test   ecx,ebx
  407c66:	dec    edx
  407c67:	jns    0x407c9e
  407c69:	inc    ecx
  407c6a:	scas   eax,DWORD PTR es:[edi]
  407c6b:	cmp    DWORD PTR [ebx-0x38897045],edx
  407c71:	or     DWORD PTR [edx-0x57],esp
  407c74:	ret    0x9ed4
  407c77:	and    al,0xd6
  407c79:	mov    bh,0x46
  407c7b:	fidivr DWORD PTR ds:0xe6e0624f
  407c81:	stos   BYTE PTR es:[edi],al
  407c82:	test   al,0x56
  407c84:	and    al,0x6
  407c86:	xchg   edi,eax
  407c87:	jl     0x52740bc0
  407c8d:	add    al,0x3
  407c8f:	or     dl,cl
  407c91:	cmp    BYTE PTR [edi],cl
  407c93:	dec    esi
  407c94:	mov    bl,0xa5
  407c96:	mov    ecx,edi
  407c98:	xchg   ecx,eax
  407c99:	xchg   ebx,eax
  407c9a:	mov    esi,0xcac381bd
  407c9f:	jo     0x407cde
  407ca1:	add    BYTE PTR [ebp+0x53086ea8],ch
  407ca7:	mov    edx,0xb0390a1d
  407cac:	sbb    al,0x9d
  407cae:	sub    eax,0x7eb6098b
  407cb3:	arpl   WORD PTR [ebp-0x4f],cx
  407cb6:	dec    eax
  407cb7:	je     0x407c3b
  407cb9:	and    edx,ecx
  407cbb:	(bad)  
  407cbc:	test   al,0xab
  407cbe:	rcr    DWORD PTR [esp+ebp*8+0x23],1
  407cc2:	test   DWORD PTR [edi+0x1d],ecx
  407cc5:	bound  edx,QWORD PTR [esi]
  407cc7:	call   0x2e04c9f9
  407ccc:	mov    ecx,0x9b47a73a
  407cd1:	push   edx
  407cd2:	sbb    esi,DWORD PTR [esp+ebp*8]
  407cd5:	xor    DWORD PTR [edx+0x43],edx
  407cd8:	xor    ah,0xaa
  407cdb:	or     BYTE PTR [ebx+0x5dacaee1],dh
  407ce1:	push   ecx
  407ce2:	stos   DWORD PTR es:[edi],eax
  407ce3:	and    eax,DWORD PTR [ecx]
  407ce5:	daa    
  407ce6:	shl    BYTE PTR [eax+0x18],1
  407ce9:	in     al,0x21
  407ceb:	sbb    BYTE PTR es:0x9f14a88b,bh
  407cf2:	inc    eax
  407cf3:	adc    bl,bl
  407cf5:	loope  0x407d0e
  407cf7:	or     eax,0x33836d5
  407cfd:	inc    esp
  407cfe:	arpl   WORD PTR [edi-0x13],bx
  407d01:	adc    BYTE PTR [ebp-0x7e],bl
  407d04:	and    DWORD PTR [ecx],edx
  407d06:	in     eax,dx
  407d07:	add    BYTE PTR [ebp-0x6b],dl
  407d0a:	dec    esi
  407d0b:	or     esi,esi
  407d0d:	mov    ecx,0x3ee3a486
  407d12:	mov    ds:0x1930ff54,eax
  407d17:	adc    al,0x46
  407d19:	xchg   esi,eax
  407d1a:	dec    esi
  407d1b:	fwait
  407d1c:	shl    DWORD PTR [ebp-0x44f6cb43],0x22
  407d23:	sub    edx,DWORD PTR [edi]
  407d25:	rcr    DWORD PTR [edi+0x46996df],0x8
  407d2c:	pop    ebp
  407d2d:	std    
  407d2e:	mov    cl,0x60
  407d30:	sub    eax,edi
  407d32:	mov    ch,0x4
  407d34:	sbb    BYTE PTR es:[edx],0x9e
  407d38:	aas    
  407d39:	in     eax,dx
  407d3a:	popf   
  407d3b:	or     al,0x78
  407d3d:	push   0xbf6c4d9c
  407d42:	in     al,dx
  407d43:	mov    bl,0xe4
  407d45:	hlt    
  407d46:	stos   DWORD PTR es:[edi],eax
  407d47:	(bad)  
  407d48:	int3   
  407d49:	xor    al,0xa3
  407d4b:	(bad)  
  407d4d:	out    dx,al
  407d4e:	dec    esp
  407d4f:	mov    bl,BYTE PTR [ebp-0x70]
  407d52:	(bad)  
  407d53:	cmc    
  407d54:	push   esi
  407d55:	cdq    
  407d56:	xchg   edi,eax
  407d57:	pop    edx
  407d58:	cmp    esp,ebp
  407d5a:	mov    cl,0x3
  407d5c:	adc    DWORD PTR [ebp+edx*4+0x2c3078c1],esi
  407d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d64:	imul   edi,edi,0x29
  407d67:	punpcklwd mm5,DWORD PTR [ecx-0x58]
  407d6b:	sub    ebp,DWORD PTR [ebx+eiz*2]
  407d6e:	push   es
  407d6f:	xchg   ebp,eax
  407d70:	jg     0x407d72
  407d72:	into   
  407d73:	dec    ecx
  407d74:	mov    ebp,0x3da35a6f
  407d79:	mov    edi,0xfa33ec9d
  407d7e:	shl    DWORD PTR [esi],cl
  407d80:	scas   eax,DWORD PTR es:[edi]
  407d81:	push   esp
  407d82:	scas   eax,DWORD PTR es:[edi]
  407d83:	int3   
  407d84:	xchg   esp,eax
  407d85:	dec    ecx
  407d86:	push   esi
  407d87:	dec    ebp
  407d88:	sbb    al,0x99
  407d8a:	sbb    DWORD PTR [ecx],ebx
  407d8c:	(bad)  
  407d8e:	ret    0x3cb7
  407d91:	ins    BYTE PTR es:[edi],dx
  407d92:	xchg   esi,eax
  407d93:	sti    
  407d94:	dec    ebp
  407d95:	arpl   WORD PTR [edi-0x6f75762c],bx
  407d9b:	retf   
  407d9c:	adc    al,0x5b
  407d9e:	pop    ebp
  407d9f:	(bad)  
  407da1:	dec    esi
  407da2:	jg     0x407d52
  407da4:	push   ecx
  407da5:	jmp    0x407de2
  407da7:	xor    DWORD PTR [esi+0xa82fe54],esi
  407dad:	and    DWORD PTR [ecx+0x7ec4aa48],0x3f76f999
  407db7:	xchg   edi,eax
  407db8:	les    esp,FWORD PTR [ebx+0x72]
  407dbb:	push   edi
  407dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dbd:	aam    0x6
  407dbf:	jp     0x407db0
  407dc1:	std    
  407dc2:	outs   dx,DWORD PTR ds:[esi]
  407dc3:	jg     0x407e01
  407dc5:	inc    esi
  407dc6:	nop
  407dc7:	mov    BYTE PTR [eax],bl
  407dc9:	jae    0x407dd1
  407dcb:	fld    DWORD PTR [edi+0x56255f4a]
  407dd1:	xchg   edx,eax
  407dd2:	imul   ebx,DWORD PTR [ebx],0x34
  407dd5:	push   cs
  407dd6:	sbb    BYTE PTR [esi+ebx*1+0x2e],bh
  407dda:	(bad)  
  407ddb:	clc    
  407ddc:	jg     0x407e03
  407dde:	pop    esp
  407ddf:	dec    edi
  407de0:	dec    eax
  407de1:	sbb    DWORD PTR [eax+0x7f],esi
  407de4:	and    DWORD PTR [edx+eax*8+0x63d3b1a6],ecx
  407deb:	jg     0x407d85
  407ded:	jle    0x407dd8
  407def:	pop    edi
  407df0:	mov    BYTE PTR [ecx],cl
  407df2:	out    dx,eax
  407df3:	mov    eax,ds:0xb309bd7c
  407df8:	test   BYTE PTR ds:0xccd73a67,ch
  407dfe:	jae    0x407ddc
  407e00:	pop    ds
  407e01:	ja     0x407e05
  407e03:	mov    eax,ds:0xf7dbcb1d
  407e08:	adc    DWORD PTR [ebp+0x64614e8b],0xdbb9d482
  407e12:	and    bl,BYTE PTR ds:0x3b20bdeb
  407e18:	xchg   edi,eax
  407e19:	and    al,al
  407e1b:	and    DWORD PTR [ebx],edi
  407e1d:	daa    
  407e1e:	dec    ebp
  407e1f:	jle    0x407e6e
  407e21:	pop    ecx
  407e22:	scas   al,BYTE PTR es:[edi]
  407e23:	out    0x1a,eax
  407e25:	push   edi
  407e26:	popf   
  407e27:	ror    BYTE PTR [ecx+0x4f],cl
  407e2a:	in     al,dx
  407e2b:	sbb    al,al
  407e2d:	loop   0x407e47
  407e2f:	cmp    dh,BYTE PTR ds:0x6cf07874
  407e35:	cmp    BYTE PTR [edx-0x1e142dcc],0xfe
  407e3c:	sbb    eax,0x7db11a65
  407e41:	adc    al,0x9e
  407e43:	inc    esp
  407e44:	xor    eax,0x99b78ab0
  407e49:	(bad)  
  407e4a:	es or  eax,0x6a9891af
  407e50:	push   es
  407e51:	jmp    0x407dd5
  407e53:	mov    bh,BYTE PTR [ecx]
  407e55:	mov    ch,0x83
  407e57:	jmp    0xb2b0:0x9e2bac48
  407e5e:	dec    esi
  407e5f:	xchg   edi,eax
  407e60:	adc    eax,0xeb66aa75
  407e65:	mov    ds:0xd08244a8,eax
  407e6a:	add    BYTE PTR [ecx],dh
  407e6c:	(bad)  
  407e6d:	and    eax,0x4a9c5fb4
  407e72:	or     bh,bl
  407e74:	into   
  407e75:	cmp    edx,ebp
  407e77:	pop    ss
  407e78:	inc    eax
  407e79:	xchg   esi,eax
  407e7a:	xchg   edx,eax
  407e7b:	inc    edi
  407e7c:	popf   
  407e7d:	jnp    0x407e1b
  407e7f:	pop    ss
  407e80:	mov    ah,0xa4
  407e82:	pop    es
  407e83:	cli    
  407e84:	mov    al,ds:0xf59f2797
  407e89:	jae    0x407e93
  407e8b:	pop    esi
  407e8c:	mov    al,ds:0x36494233
  407e91:	lock and DWORD PTR [esi-0xb],ebx
  407e95:	sbb    BYTE PTR [ecx-0x62],ch
  407e98:	jp     0x407e30
  407e9a:	lock cmc 
  407e9c:	jge    0x407e3b
  407e9e:	inc    esi
  407e9f:	leave  
  407ea0:	sbb    ecx,DWORD PTR [ebp-0x55]
  407ea3:	pop    edx
  407ea4:	mov    esp,0x7f290a0
  407ea9:	sbb    DWORD PTR [eax+0x2e0aa62e],ecx
  407eaf:	jmp    0x407e97
  407eb1:	rcr    BYTE PTR [eax],cl
  407eb3:	shl    DWORD PTR [edx-0x5ce241fe],1
  407eb9:	sub    al,al
  407ebb:	jns    0x407e88
  407ebd:	dec    eax
  407ebe:	mov    edx,DWORD PTR [edx+0x137ddf16]
  407ec4:	lods   al,BYTE PTR es:[esi]
  407ec6:	push   edx
  407ec7:	adc    eax,0x5c12055
  407ecc:	dec    eax
  407ecd:	addr16 xchg esi,eax
  407ecf:	pop    ds
  407ed0:	(bad)  
  407ed1:	mov    ecx,DWORD PTR [ebp-0x6f]
  407ed4:	push   esp
  407ed5:	push   edi
  407ed6:	ret    
  407ed7:	xor    BYTE PTR [ecx+0x2],bl
  407eda:	xchg   ebp,eax
  407edb:	pop    ebx
  407edc:	jmp    0x578fedf
  407ee1:	inc    DWORD PTR [edi-0x16]
  407ee4:	retf   0x93b1
  407ee7:	call   DWORD PTR [edx]
  407ee9:	aaa    
  407eea:	std    
  407eeb:	add    dl,cl
  407eed:	mov    dl,0x5c
  407eef:	jne    0x407f07
  407ef1:	(bad)  
  407ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ef3:	and    dl,BYTE PTR [eax-0x79]
  407ef6:	mov    DWORD PTR [ebx-0x412dbba4],eax
  407efc:	add    eax,0x168b1c62
  407f01:	bound  eax,QWORD PTR [esi]
  407f03:	sti    
  407f04:	xlat   BYTE PTR ds:[ebx]
  407f05:	popa   
  407f06:	dec    ecx
  407f07:	es mov ebx,0x46f09bf4
  407f0d:	mov    al,0xba
  407f0f:	add    eax,DWORD PTR [esi-0x1c]
  407f12:	jmp    0x407ef3
  407f14:	fadd   st,st(2)
  407f16:	addr16 mov ebp,0xef8478f4
  407f1c:	jecxz  0x407ee1
  407f1e:	mov    al,ds:0x26f93707
  407f23:	mov    edx,0x553c4c40
  407f28:	mov    al,0x17
  407f2a:	js     0x407ef8
  407f2c:	out    0x31,eax
  407f2e:	sub    al,dh
  407f30:	or     bh,BYTE PTR [ecx]
  407f32:	out    0x7e,eax
  407f34:	push   ds
  407f35:	pop    esi
  407f36:	idiv   BYTE PTR [esi+eax*4+0x7a]
  407f3a:	dec    edx
  407f3b:	stos   BYTE PTR es:[edi],al
  407f3c:	scas   al,BYTE PTR es:[edi]
  407f3d:	lods   al,BYTE PTR ds:[esi]
  407f3e:	into   
  407f3f:	push   ds
  407f40:	cmp    cl,0x97
  407f43:	xchg   ecx,eax
  407f44:	cmp    DWORD PTR [edi-0x31b011ed],esi
  407f4a:	xchg   ecx,eax
  407f4b:	and    ebp,DWORD PTR [edx+ebp*2+0x427d5cd6]
  407f52:	(bad)  
  407f53:	xor    eax,0x191cd680
  407f58:	mov    al,ds:0x11e101e9
  407f5d:	in     al,dx
  407f5e:	dec    edi
  407f5f:	rol    DWORD PTR gs:[ebx],cl
  407f62:	jns    0x407eff
  407f64:	xor    ebx,DWORD PTR [edx+0x34be709f]
  407f6a:	out    dx,eax
  407f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f6c:	sub    DWORD PTR [eax+0x72671f18],ecx
  407f72:	mov    al,0xe1
  407f74:	sbb    al,0x81
  407f76:	inc    edi
  407f77:	mov    al,ds:0xd1c63eca
  407f7c:	mov    ecx,0x9ce111a1
  407f81:	sub    ah,dl
  407f83:	js     0x407f0e
  407f85:	addr16 mov eax,ds:0x7ba5
  407f89:	call   0x7dcc:0xcf03e89f
  407f90:	mov    al,ds:0x2792edf8
  407f95:	dec    edx
  407f96:	jle    0x407f43
  407f98:	dec    esp
  407f99:	mov    bl,0x80
  407f9b:	inc    cx
  407f9d:	div    BYTE PTR [ebp-0x62f429ba]
  407fa3:	sbb    bl,BYTE PTR [edx+0x14c44fd5]
  407fa9:	and    eax,0x6ba235d9
  407fae:	imul   eax,ebx,0x51399dfb
  407fb4:	jg     0x408005
  407fb6:	leave  
  407fb7:	push   ds
  407fb8:	push   cs
  407fb9:	retf   0xcc5b
  407fbc:	out    dx,eax
  407fbd:	fsubr  DWORD PTR cs:[edx]
  407fc0:	imul   eax,DWORD PTR [esp+edi*4-0x24acc500],0xac74fb19
  407fcb:	add    eax,0xd65e852c
  407fd0:	scas   al,BYTE PTR es:[edi]
  407fd1:	hlt    
  407fd2:	sti    
  407fd3:	mov    bh,BYTE PTR [esp+edx*2+0x14]
  407fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd8:	xchg   edx,eax
  407fd9:	aaa    
  407fda:	test   DWORD PTR [ebx],0x39e9738d
  407fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe1:	into   
  407fe2:	jge    0x407f84
  407fe4:	popa   
  407fe5:	popf   
  407fe6:	xor    bl,BYTE PTR [ebx+0xb9722ab]
  407fec:	or     ch,BYTE PTR [edi+0x31ad6162]
  407ff2:	fwait
  407ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff4:	add    BYTE PTR [ebp-0x876cd32],bh
  407ffa:	je     0x407ffe
  407ffc:	push   ds
  407ffd:	imul   eax,DWORD PTR [ebx+ebx*1],0x7b54da46
  408004:	adc    eax,0x30d82149
  408009:	out    0xac,al
  40800b:	push   edi
  40800c:	adc    BYTE PTR [ecx-0x80],bl
  40800f:	clc    
  408010:	add    DWORD PTR [ebp+0x689f0076],edx
  408016:	dec    esi
  408017:	pop    edi
  408018:	gs pop edi
  40801a:	pop    edi
  40801b:	sub    ecx,ebp
  40801d:	addr16 cs iret 
  408020:	retf   0x39a8
  408023:	sub    edi,DWORD PTR [ebx-0x69d1b792]
  408029:	adc    bl,ch
  40802b:	cmp    al,0x85
  40802d:	sub    DWORD PTR [edi+0xf],edi
  408030:	sbb    eax,0x65b354b5
  408035:	fdivr  QWORD PTR [eax]
  408037:	call   0x216d:0x34ca631f
  40803e:	ror    edi,1
  408040:	push   edx
  408041:	fcom   QWORD PTR [esp+ebp*4-0x68]
  408045:	push   esi
  408046:	dec    edx
  408047:	pop    edx
  408048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408049:	icebp  
  40804a:	sahf   
  40804b:	inc    ebp
  40804c:	push   ecx
  40804d:	cmp    al,0xe3
  40804f:	sub    eax,0x19392e2
  408054:	dec    ebx
  408055:	jmp    0x408062
  408057:	or     al,0xc
  408059:	lock dec edi
  40805b:	sbb    DWORD PTR [edi-0x4c5f68c9],edi
  408061:	repz pop esp
  408063:	xchg   ebx,eax
  408064:	cmp    esi,ecx
  408066:	out    dx,al
  408067:	mov    cl,0xd3
  408069:	push   esi
  40806a:	jb     0x408085
  40806c:	xor    al,BYTE PTR [eax-0x7228c84]
  408072:	bound  edx,QWORD PTR [ecx-0x19]
  408075:	jge    0x40800f
  408077:	int    0xbb
  408079:	push   edi
  40807a:	stc    
  40807b:	arpl   ax,ax
  40807d:	mov    DWORD PTR [esi+esi*4-0x716f631d],0x46ed3ff3
  408088:	jo     0x4080af
  40808a:	fcom   DWORD PTR [ebp-0x6]
  40808d:	inc    ecx
  40808e:	mov    ebx,0x73f63591
  408093:	jnp    0x4080ec
  408095:	popf   
  408096:	ret    
  408097:	out    0xb4,eax
  408099:	mov    ebx,0xd70d4212
  40809e:	inc    ecx
  40809f:	clc    
  4080a0:	dec    ecx
  4080a1:	add    eax,0x643a7d8e
  4080a6:	(bad)  
  4080a7:	retf   0xc468
  4080aa:	std    
  4080ab:	pop    edx
  4080ac:	push   edx
  4080ad:	jns    0x4080e3
  4080af:	in     eax,dx
  4080b0:	inc    ebx
  4080b1:	in     eax,0xb3
  4080b3:	lahf   
  4080b4:	inc    edi
  4080b5:	addr16 jge 0x4080c0
  4080b8:	lods   al,BYTE PTR ds:[esi]
  4080b9:	dec    edi
  4080ba:	sar    BYTE PTR [esi+0x33c63991],1
  4080c0:	inc    eax
  4080c1:	(bad)  
  4080c2:	mov    edi,0x755c22ea
  4080c7:	jg     0x4080a0
  4080c9:	sbb    cl,BYTE PTR [edi+0x5f]
  4080cc:	(bad)  
  4080cd:	out    0xfb,eax
  4080cf:	test   DWORD PTR [ecx],ebx
  4080d1:	shl    edi,cl
  4080d3:	sbb    ah,BYTE PTR [esi]
  4080d5:	push   ss
  4080d6:	test   eax,0x944e3df7
  4080db:	or     eax,0xc7cafc0b
  4080e0:	clc    
  4080e1:	out    0xc1,al
  4080e3:	xor    cl,bh
  4080e5:	dec    edi
  4080e6:	imul   edi,DWORD PTR [ebx+0x37],0x72
  4080ea:	bnd jg 0x408141
  4080ed:	or     al,0x98
  4080ef:	out    0xa9,al
  4080f1:	and    BYTE PTR [ebp+0x3f13097b],ah
  4080f7:	xchg   ecx,eax
  4080f8:	push   es
  4080f9:	(bad)  
  4080fa:	adc    al,0xd9
  4080fc:	loop   0x408144
  4080fe:	gs cmp eax,0x971891ca
  408104:	xlat   BYTE PTR ds:[ebx]
  408105:	sbb    DWORD PTR [edi+0x41],edi
  408108:	mov    ds:0xaf9f3542,eax
  40810d:	mov    esi,0xb1522
  408112:	mov    esp,0x3f5aa5d
  408117:	xchg   edi,eax
  408118:	mov    edx,0x6e8b53bd
  40811d:	xchg   esp,eax
  40811e:	jbe    0x4080a5
  408120:	cld    
  408121:	push   ebx
  408122:	mov    ds:0x74de604,al
  408127:	sbb    BYTE PTR [edx*1-0x2ca6269],dh
  40812e:	and    al,0xac
  408130:	pushf  
  408131:	jmp    0xe29d6085
  408136:	sbb    DWORD PTR [esp+edi*2+0x39],esi
  40813a:	and    edx,DWORD PTR [edx+0x59]
  40813d:	int    0x91
  40813f:	push   es
  408140:	aam    0x93
  408142:	stos   BYTE PTR es:[edi],al
  408143:	or     esp,ebx
  408145:	push   ebx
  408146:	lods   al,BYTE PTR ds:[esi]
  408147:	ss (bad) 
  408149:	xchg   ebp,eax
  40814a:	clc    
  40814b:	adc    dl,BYTE PTR [eax-0x3583aa2a]
  408151:	cld    
  408152:	xchg   ecx,eax
  408153:	pop    es
  408154:	and    esp,DWORD PTR [edi]
  408156:	shr    ch,0x49
  408159:	and    eax,0xaf6d1250
  40815e:	mov    edi,esi
  408160:	cmc    
  408161:	mov    ds:0x5e3aa87f,al
  408166:	dec    eax
  408167:	jp     0x4081b4
  408169:	sbb    al,0x33
  40816b:	dec    ecx
  40816c:	ds int 0x6e
  40816f:	dec    ecx
  408170:	repz push ds
  408172:	xor    esp,DWORD PTR [eax-0x3b7ccdf7]
  408178:	jno    0x408121
  40817a:	pop    esi
  40817b:	cmp    dh,BYTE PTR [eax+0x6c]
  40817e:	sbb    al,0x78
  408180:	sbb    BYTE PTR [esi-0x1ff2afda],bh
  408186:	std    
  408187:	cmc    
  408188:	into   
  408189:	pop    es
  40818a:	or     eax,0x2b78ce5a
  40818f:	les    ebp,FWORD PTR [edx+0x36]
  408192:	push   edi
  408193:	pop    ss
  408194:	push   0xffffffda
  408196:	sbb    dl,ch
  408198:	imul   eax,DWORD PTR [edx],0xffffffa1
  40819b:	shl    BYTE PTR [eax+0x16],cl
  40819e:	push   ss
  40819f:	into   
  4081a0:	(bad)  
  4081a1:	adc    BYTE PTR [ebx+edi*4-0x106d669b],ch
  4081a8:	jo     0x4081ea
  4081aa:	xchg   edx,eax
  4081ab:	dec    esp
  4081ac:	push   ebx
  4081ad:	pushf  
  4081ae:	sub    al,0xd7
  4081b0:	adc    al,0xae
  4081b2:	fnstenv [edx-0x29]
  4081b5:	iret   
  4081b6:	sub    bl,BYTE PTR [ebp+0x76]
  4081b9:	inc    esp
  4081ba:	(bad)  
  4081bb:	push   eax
  4081bc:	xchg   BYTE PTR [ecx+0x4f],bh
  4081bf:	and    ch,cl
  4081c1:	das    
  4081c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081c3:	stc    
  4081c4:	test   BYTE PTR [edx+0x27b26ed0],cl
  4081ca:	or     DWORD PTR [edx+0x49],ebx
  4081cd:	adc    DWORD PTR [edi+ecx*1+0x64497723],ecx
  4081d4:	into   
  4081d5:	jmp    0x155:0xbfef69fc
  4081dc:	dec    ebx
  4081dd:	hlt    
  4081de:	mov    ebx,DWORD PTR [esi+0x137a767b]
  4081e4:	dec    eax
  4081e5:	add    cl,bh
  4081e7:	in     eax,dx
  4081e8:	or     al,0xf9
  4081ea:	jbe    0x40825e
  4081ec:	adc    al,0x25
  4081ee:	push   ebp
  4081ef:	je     0x4081ad
  4081f1:	mov    bh,cl
  4081f3:	arpl   WORD PTR [esi+0x71],sp
  4081f6:	xchg   esi,eax
  4081f7:	adc    BYTE PTR [ebp+0x47b3eee6],dl
  4081fd:	push   es
  4081fe:	add    BYTE PTR [edi+0x58],bl
  408201:	or     al,0x85
  408203:	and    esi,esi
  408205:	out    0x79,eax
  408207:	stos   BYTE PTR es:[edi],al
  408208:	or     dl,dh
  40820a:	jmp    0x4081ff
  40820c:	dec    esi
  40820d:	or     BYTE PTR [edx+0x287170f0],ah
  408213:	and    BYTE PTR [ecx-0x560fa896],cl
  408219:	add    esi,0xffffff93
  40821c:	inc    edx
  40821d:	cmp    BYTE PTR [eax+0x1b1e0879],ch
  408223:	(bad)  
  408224:	pop    ebp
  408225:	add    esi,DWORD PTR [esi+0x31]
  408228:	in     al,dx
  408229:	enter  0x5bd9,0x65
  40822d:	enter  0xd1ba,0x48
  408231:	adc    ebp,ebp
  408233:	sbb    BYTE PTR [ecx],dl
  408235:	in     eax,dx
  408236:	mov    al,0xe
  408238:	inc    ecx
  408239:	enter  0x5bae,0x5
  40823d:	pop    ds
  40823e:	dec    ecx
  40823f:	push   edi
  408240:	jge    0x63a9045
  408246:	pop    ecx
  408247:	sbb    ch,BYTE PTR [edx+0x6769e53f]
  40824d:	fs retf 
  40824f:	sub    esi,eax
  408251:	rcl    esp,0x96
  408254:	sahf   
  408255:	lock in eax,0xf
  408258:	int    0xda
  40825a:	sub    ah,BYTE PTR [edi+0x36]
  40825d:	push   cs
  40825e:	mov    ch,0x8a
  408260:	pushf  
  408261:	sub    al,0x6a
  408263:	mov    ah,0x3a
  408265:	lods   eax,DWORD PTR ds:[esi]
  408266:	les    eax,FWORD PTR [ebx+0xa60e32b]
  40826c:	sub    DWORD PTR [ecx],edx
  40826e:	push   ebx
  40826f:	loope  0x4082a3
  408271:	xlat   BYTE PTR ds:[ebx]
  408272:	pop    esi
  408273:	or     esp,esp
  408275:	into   
  408276:	cwde   
  408277:	test   eax,0xb300f071
  40827c:	test   al,0x38
  40827e:	inc    esi
  40827f:	adc    DWORD PTR [esi+ebp*8+0x638a90b5],ecx
  408286:	sbb    BYTE PTR ds:0x91a10644,bl
  40828c:	jmp    0x408230
  40828e:	sbb    eax,0xdb04cf60
  408293:	outs   dx,BYTE PTR ds:[esi]
  408294:	or     al,0x78
  408296:	fist   DWORD PTR [ebp-0x6b23fae6]
  40829c:	and    BYTE PTR [ebx-0x46],bl
  40829f:	popf   
  4082a0:	fiadd  WORD PTR [ebp+0x2055e4e2]
  4082a6:	mov    edi,0xfc154ea4
  4082ab:	arpl   ax,dx
  4082ad:	xlat   BYTE PTR ds:[ebx]
  4082ae:	popa   
  4082af:	out    0xab,al
  4082b1:	xor    eax,0x7fafcc2
  4082b6:	test   DWORD PTR [ebp+0x68],eax
  4082b9:	scas   eax,DWORD PTR es:[edi]
  4082ba:	cld    
  4082bb:	lds    ebx,FWORD PTR [edx]
  4082bd:	sahf   
  4082be:	adc    al,0x8e
  4082c0:	test   BYTE PTR [esi+ebx*1+0x405f66a2],ah
  4082c7:	mov    bh,0x4b
  4082c9:	in     eax,0x44
  4082cb:	dec    ebp
  4082cc:	cs mov dl,0x4c
  4082cf:	mov    ch,0x43
  4082d1:	adc    DWORD PTR [esi+0x51dacb32],0xffffffbe
  4082d8:	sub    esi,ebp
  4082da:	sbb    DWORD PTR [ecx+ebp*4+0x7e8ebd26],ebx
  4082e1:	fidiv  DWORD PTR [edx+ecx*1]
  4082e4:	sub    DWORD PTR [ebx+edx*8+0x71],0xfffffff7
  4082e9:	ss iret 
  4082eb:	mov    edx,DWORD PTR ds:0x926f0cab
  4082f1:	mov    edi,0xe2d12a8d
  4082f6:	push   esp
  4082f7:	sahf   
  4082f8:	hlt    
  4082f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082fa:	mov    ds:0x74c681e4,al
  4082ff:	cmp    BYTE PTR [edi-0x16c68871],bl
  408305:	mov    WORD PTR [ebp-0x5f94c9bf],?
  40830b:	(bad)  
  40830c:	retf   
  40830d:	out    dx,eax
  40830e:	sub    al,0x24
  408310:	bound  ebp,QWORD PTR [ecx-0x6f]
  408313:	jp     0x408305
  408315:	lahf   
  408316:	sub    ebp,ebx
  408318:	out    0x55,al
  40831a:	dec    ecx
  40831b:	mov    eax,ds:0xfba43ee5
  408320:	and    dl,ah
  408322:	inc    eax
  408323:	push   es
  408324:	sub    DWORD PTR [eax+edi*4-0x91b208d],ecx
  40832b:	pop    ebx
  40832c:	or     al,0x36
  40832e:	xor    DWORD PTR [esi-0x7dfb7829],esp
  408334:	xor    eax,0x8676c528
  408339:	call   0xd4e963dd
  40833e:	fidivr WORD PTR [eax-0x25d7e8c9]
  408344:	aaa    
  408345:	push   esp
  408346:	push   es
  408347:	push   edx
  408348:	inc    eax
  408349:	imul   edx,DWORD PTR [ecx-0x7c],0x232761a4
  408350:	test   BYTE PTR [eax+0x22],bl
  408353:	pop    eax
  408354:	out    0xaa,al
  408356:	mov    edx,0xf5096200
  40835b:	in     eax,dx
  40835c:	mov    eax,ds:0x2fe8cb4c
  408361:	repz shl BYTE PTR [eax+0x8685b08],0x20
  408369:	mov    al,ds:0xd7bc6517
  40836e:	je     0x408304
  408370:	retf   
  408371:	xchg   ebx,eax
  408372:	jno    0x4083d8
  408374:	fist   WORD PTR ds:0x36937543
  40837a:	pop    edi
  40837b:	or     al,0xf2
  40837d:	ret    0x5fa2
  408380:	je     0x4083d3
  408382:	mov    dh,0x3b
  408384:	out    0x83,eax
  408386:	ficomp WORD PTR [edx+0x782f2db5]
  40838c:	xchg   DWORD PTR [edi+0x3c247da9],esp
  408392:	xchg   esp,eax
  408393:	cmc    
  408394:	jb     0x408364
  408396:	out    0x9f,eax
  408398:	inc    eax
  408399:	jno    0x4083e7
  40839b:	xchg   DWORD PTR [ebx-0x35412494],ebp
  4083a1:	in     al,dx
  4083a2:	sbb    ebp,DWORD PTR [esi+ecx*4-0x5a]
  4083a6:	inc    ecx
  4083a7:	pop    es
  4083a8:	mov    ecx,0x26496809
  4083ad:	cmp    ecx,DWORD PTR [edi]
  4083af:	or     ebx,ebp
  4083b1:	push   ebx
  4083b2:	sbb    ecx,edi
  4083b4:	mov    al,0x2b
  4083b6:	sar    DWORD PTR [ecx-0x18],cl
  4083b9:	fisttp WORD PTR [edi+ecx*2+0x40]
  4083bd:	in     eax,dx
  4083be:	hlt    
  4083bf:	or     dh,cl
  4083c1:	sbb    dh,dh
  4083c3:	dec    esi
  4083c4:	lods   al,BYTE PTR ds:[esi]
  4083c5:	xchg   ebx,eax
  4083c6:	test   al,0x2d
  4083c8:	sti    
  4083c9:	push   edi
  4083ca:	dec    edi
  4083cb:	sub    al,0x1a
  4083cd:	xor    bl,BYTE PTR [edx+esi*2]
  4083d0:	dec    esi
  4083d1:	push   esi
  4083d2:	(bad)  
  4083d3:	cmp    eax,0x58478e4e
  4083d8:	jb     0x408442
  4083da:	sub    al,0xfc
  4083dc:	mov    ch,0xf3
  4083de:	pop    ds
  4083df:	pop    ecx
  4083e0:	dec    esp
  4083e1:	xor    ch,BYTE PTR [esi]
  4083e3:	je     0x408372
  4083e5:	mov    eax,0x34735ebe
  4083ea:	outs   dx,BYTE PTR ds:[esi]
  4083eb:	stos   DWORD PTR es:[edi],eax
  4083ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ed:	scas   eax,DWORD PTR es:[edi]
  4083ee:	pop    esp
  4083ef:	test   BYTE PTR [ebp*8+0x11a699bf],dl
  4083f6:	or     al,0xbb
  4083f8:	lahf   
  4083f9:	mov    ds:0x677d957a,al
  4083fe:	sbb    edx,DWORD PTR [ebx-0x7451af2e]
  408404:	(bad)  
  408405:	imul   ebp,DWORD PTR [ebp+0x3ca01973],0x7d
  40840c:	cs cmp eax,0x214d5e44
  408412:	xor    dh,BYTE PTR [eax]
  408414:	addr16 call 0xd3a424f6
  40841a:	or     dh,BYTE PTR [edx-0x67]
  40841d:	dec    ecx
  40841e:	mov    esp,0x1fadc6a7
  408423:	cwde   
  408424:	jmp    0x408421
  408426:	add    al,0x3d
  408428:	test   DWORD PTR [ebp+0x2c],esp
  40842b:	aaa    
  40842c:	sbb    al,0x11
  40842e:	or     dl,al
  408430:	adc    al,BYTE PTR [ebp-0x58]
  408433:	cmp    ebp,edx
  408435:	add    al,0x5b
  408437:	jg     0x4084a3
  408439:	jp     0x408455
  40843b:	push   0x4da19f51
  408440:	xor    BYTE PTR [edx+0x645828cd],bl
  408446:	lods   eax,DWORD PTR ds:[esi]
  408447:	dec    ebx
  408448:	cmp    edx,eax
  40844a:	inc    esi
  40844b:	jmp    0x408431
  40844d:	add    BYTE PTR [esi-0x2c],al
  408450:	xor    bl,BYTE PTR [eax-0x54c64cc0]
  408456:	or     DWORD PTR [eax+0x42ae2fc0],eax
  40845c:	fstp   TBYTE PTR [eax]
  40845e:	mov    DWORD PTR [ebp+0x2f],eax
  408461:	(bad)  
  408462:	shl    dl,1
  408464:	sbb    BYTE PTR [esi+0x6f],cl
  408467:	(bad)  
  408468:	leave  
  408469:	fmulp  st(2),st
  40846b:	add    BYTE PTR [ecx],cl
  40846d:	dec    eax
  40846e:	bswap  eax
  408470:	adc    DWORD PTR [ebx+0x23],0xf2dbd69b
  408477:	daa    
  408478:	sub    BYTE PTR [ebx-0x1a],al
  40847b:	jmp    0x6ea0a358
  408480:	sub    ah,dl
  408482:	mov    ebx,0x18a865a4
  408487:	addr16 loop 0x408446
  40848a:	dec    ebp
  40848b:	scas   al,BYTE PTR es:[edi]
  40848c:	sbb    BYTE PTR [esi+0x36],0x97
  408490:	iret   
  408491:	sub    BYTE PTR [edi+0x7413903b],al
  408497:	push   es
  408498:	or     BYTE PTR [ecx+ecx*1],ah
  40849b:	xchg   esp,eax
  40849c:	or     BYTE PTR [ebx+0x240a3f93],bh
  4084a2:	or     BYTE PTR [edx-0x5c],bh
  4084a5:	mov    ecx,0xcb93269c
  4084aa:	or     ebp,esi
  4084ac:	jle    0x4084dc
  4084ae:	retf   
  4084af:	push   ds
  4084b0:	jb     0x4084a4
  4084b2:	inc    ecx
  4084b3:	call   0x59f:0x3ec0761a
  4084ba:	int    0xe3
  4084bc:	sub    BYTE PTR [edx+0x2766a545],al
  4084c2:	sub    DWORD PTR [ebx+0x1ab18636],edi
  4084c8:	sub    BYTE PTR [ecx-0x52],ch
  4084cb:	lds    ecx,FWORD PTR [edi-0x75]
  4084ce:	push   ebp
  4084cf:	in     al,0x33
  4084d1:	(bad)  
  4084d2:	add    edx,edi
  4084d4:	or     eax,edx
  4084d6:	mov    edx,DWORD PTR [ebp-0x20]
  4084d9:	xor    edx,esi
  4084db:	add    eax,edx
  4084dd:	mov    edx,DWORD PTR [ebp-0x20]
  4084e0:	xor    edx,esi
  4084e2:	add    eax,edx
  4084e4:	mov    edx,DWORD PTR [ebp-0x10]
  4084e7:	lea    eax,[eax+edx*1+0x64e5de]
  4084ee:	jmp    0x40a872
  4084f3:	jmp    0x40a863
  4084f8:	mov    ecx,0x7b608113
  4084fd:	in     al,0x9f
  4084ff:	jnp    0x40851c
  408501:	mov    bl,0xe4
  408503:	pop    ebx
  408504:	inc    ebx
  408505:	jae    0x40857a
  408507:	jbe    0x40848a
  408509:	adc    DWORD PTR [edx+0x7a],edi
  40850c:	das    
  40850d:	pop    edi
  40850e:	jp     0x40858a
  408510:	xor    eax,0x824add1c
  408515:	sub    DWORD PTR [edx],edx
  408517:	fistp  WORD PTR [edx+0x32]
  40851a:	sub    DWORD PTR [eax-0xe],ebp
  40851d:	cdq    
  40851e:	arpl   WORD PTR [ebx],di
  408520:	lea    edx,[ecx-0x37]
  408523:	or     al,0xf3
  408525:	cmp    BYTE PTR [eax+0x3b4e1647],bl
  40852b:	cli    
  40852c:	push   DWORD PTR [esi-0x7a]
  40852f:	push   ss
  408530:	pop    edx
  408531:	and    ebx,DWORD PTR [ebx-0x5]
  408534:	sub    BYTE PTR [ecx],cl
  408536:	jb     0xdd042552
  40853c:	or     bl,BYTE PTR [edx]
  40853e:	and    BYTE PTR [ecx+0xf82693f],0x14
  408545:	xor    esi,DWORD PTR [eax]
  408547:	cmp    DWORD PTR [esi-0x71],ecx
  40854a:	mov    edi,0x21863a87
  40854f:	mov    cl,0xbd
  408551:	adc    al,0xa6
  408553:	inc    esi
  408554:	cwde   
  408555:	ret    
  408556:	mov    dh,0x3
  408558:	jmp    0x74eb0e4f
  40855d:	retf   
  40855e:	retf   
  40855f:	sbb    edx,DWORD PTR [ebx+0x7a]
  408562:	mov    ebx,0x935e9d9c
  408567:	add    eax,DWORD PTR [esi+edi*1]
  40856a:	mov    es,edi
  40856c:	pop    edi
  40856d:	mov    edx,0x9b4f9b84
  408572:	in     eax,0xc2
  408574:	and    edx,DWORD PTR [eax]
  408576:	call   0xa717b8f1
  40857b:	iret   
  40857c:	inc    esp
  40857d:	sub    eax,0x8b12e742
  408582:	sub    bl,BYTE PTR [edi+0x4]
  408585:	retf   0x4f39
  408588:	into   
  408589:	cmp    cl,cl
  40858b:	cmp    ecx,DWORD PTR [ebx+0x11]
  40858e:	stos   DWORD PTR es:[edi],eax
  40858f:	jnp    0x4085a6
  408591:	cdq    
  408592:	das    
  408593:	jge    0x4085c1
  408595:	mov    ?,WORD PTR [ebp-0x26]
  408598:	ja     0x40860c
  40859a:	or     esp,DWORD PTR [ebx+0x1e]
  40859d:	cmp    eax,0x4480937f
  4085a2:	dec    esi
  4085a3:	and    DWORD PTR [edi*2+0x5573ff26],esi
  4085aa:	or     bl,cl
  4085ac:	test   eax,0xdef509f
  4085b1:	jle    0x4085b8
  4085b3:	les    eax,FWORD PTR [eax+0x7efe50df]
  4085b9:	into   
  4085ba:	jp     0x4085c0
  4085bc:	cmp    DWORD PTR [esi+0x301829a2],eax
  4085c2:	js     0x4085c2
  4085c4:	jbe    0x4085fb
  4085c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c7:	mov    edi,esi
  4085c9:	addr16 add al,0x4b
  4085cc:	imul   edi,DWORD PTR [ebx],0x3c
  4085cf:	cmp    esp,ecx
  4085d1:	cli    
  4085d2:	xor    eax,0xb6138ea9
  4085d7:	loopne 0x4085f3
  4085d9:	mov    edx,0x2141f95b
  4085de:	or     eax,0x3ad629f
  4085e3:	repz test al,0x8f
  4085e6:	hlt    
  4085e7:	sub    BYTE PTR [ecx-0x5f],0xd3
  4085eb:	push   ebx
  4085ec:	js     0x40861b
  4085ee:	std    
  4085ef:	sub    eax,0xd04c364
  4085f4:	xchg   edi,eax
  4085f5:	(bad)  
  4085f7:	and    DWORD PTR [esi+0x1a],edx
  4085fa:	xchg   edx,eax
  4085fb:	mov    ds,WORD PTR [edx+ecx*8]
  4085fe:	fdiv   st(5),st
  408600:	jmp    0x84c270ef
  408605:	jecxz  0x4085b2
  408607:	lods   eax,DWORD PTR ds:[esi]
  408608:	sbb    eax,0xb2a73632
  40860d:	not    DWORD PTR [esi+0x1d]
  408610:	jnp    0x408682
  408612:	jno    0x408596
  408614:	sbb    ecx,DWORD PTR [esi]
  408616:	adc    al,0x36
  408618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408619:	inc    eax
  40861a:	repz pop eax
  40861c:	cli    
  40861d:	arpl   WORD PTR [edi-0x19],bx
  408620:	mov    ah,0x27
  408622:	pop    ecx
  408623:	jbe    0x4085f2
  408625:	cmp    edx,DWORD PTR [eax]
  408627:	(bad)  
  408628:	out    dx,al
  408629:	(bad)  
  40862a:	scas   eax,DWORD PTR es:[edi]
  40862b:	sub    bh,BYTE PTR [eax-0x3d]
  40862e:	fimul  DWORD PTR [ecx]
  408630:	fdivr  QWORD PTR ds:0x67dd0a8d
  408636:	xor    ebp,DWORD PTR [edx+0x5ff345ea]
  40863c:	pushf  
  40863d:	lods   al,BYTE PTR ds:[esi]
  40863e:	shl    BYTE PTR [ecx],1
  408640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408641:	inc    eax
  408642:	fimul  DWORD PTR [ebx-0x50d49e33]
  408648:	lahf   
  408649:	xchg   esi,eax
  40864a:	jecxz  0x408668
  40864c:	scas   al,BYTE PTR es:[edi]
  40864d:	fsubr  st,st(4)
  40864f:	stos   BYTE PTR es:[edi],al
  408650:	mov    dl,BYTE PTR [eax]
  408652:	gs pop ds
  408654:	mov    ds:0x749a6e16,al
  408659:	cli    
  40865a:	push   esp
  40865b:	xor    eax,0xa1e959ed
  408660:	sbb    eax,0xfa6c04bd
  408665:	lock mov bl,0x42
  408668:	jge    0x40865e
  40866a:	jge    0x40868a
  40866c:	js     0x408689
  40866e:	jg     0x4086b2
  408670:	pop    ebx
  408671:	sub    dh,BYTE PTR [ebx-0x4bc3a44a]
  408677:	(bad)  
  408678:	sbb    ebx,0xf37adee4
  40867e:	adc    DWORD PTR [ebx+0x11],esi
  408681:	enter  0x33a6,0x8d
  408685:	sub    ebp,DWORD PTR [edi-0x5cab5417]
  40868b:	adc    ebp,ebx
  40868d:	or     DWORD PTR [esi+0x75],0xb079c38e
  408694:	jne    0x4086f9
  408696:	inc    ebp
  408697:	mov    dh,al
  408699:	(bad)  
  40869a:	and    BYTE PTR [edi+0x2b2ec9dc],bl
  4086a0:	ds jo  0x408713
  4086a3:	xor    DWORD PTR [edi-0x7ea67bcc],0x389cbb64
  4086ad:	jecxz  0x4086cf
  4086af:	xor    eax,edi
  4086b1:	xchg   DWORD PTR [ecx+ebp*4-0x35eb9aca],eax
  4086b8:	in     eax,dx
  4086b9:	xchg   ecx,eax
  4086ba:	xchg   esp,eax
  4086bb:	inc    ebp
  4086bc:	jmp    0xea00:0xe9670db7
  4086c3:	clc    
  4086c4:	mov    ecx,0x4be8dd
  4086c9:	in     al,0x2d
  4086cb:	xor    ebx,DWORD PTR [edi+eax*2]
  4086ce:	jge    0x4086eb
  4086d0:	fisttp WORD PTR [edx-0x1603db20]
  4086d6:	das    
  4086d7:	inc    esp
  4086d8:	add    DWORD PTR [ebp+0x5891e033],esi
  4086de:	or     ebx,DWORD PTR [edx-0x40]
  4086e1:	imul   ebx,DWORD PTR [edi-0x10566c60],0x30
  4086e8:	dec    esp
  4086e9:	pop    DWORD PTR [ecx]
  4086eb:	adc    DWORD PTR [ebx+0x52d1e199],esp
  4086f1:	xchg   cl,bh
  4086f3:	lds    esp,FWORD PTR [esi]
  4086f5:	aaa    
  4086f6:	(bad)  
  4086f7:	call   0x17889a83
  4086fc:	push   cs
  4086fd:	mov    esi,0xf2c090fe
  408702:	and    DWORD PTR [edi-0x517619ae],esp
  408708:	sub    al,0x83
  40870a:	fcomi  st,st(3)
  40870c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40870d:	dec    DWORD PTR [ebp-0x30]
  408710:	fstp   TBYTE PTR [ecx+0x5694ee2f]
  408716:	cdq    
  408717:	test   eax,0x7ad77a18
  40871c:	(bad)  
  40871d:	sti    
  40871e:	sti    
  40871f:	mov    esp,0x3f7fc76a
  408724:	and    BYTE PTR [eax+0x1b64129],0xbb
  40872b:	adc    al,0xdd
  40872d:	call   FWORD PTR [ecx-0x51]
  408730:	push   esi
  408731:	sti    
  408732:	imul   esi,eax,0x5
  408735:	xchg   DWORD PTR [edx],eax
  408737:	jno    0x40870c
  408739:	add    al,0x70
  40873b:	pop    ecx
  40873c:	scas   al,BYTE PTR es:[edi]
  40873d:	jae    0x4087b3
  40873f:	ret    0x8549
  408742:	pop    esp
  408743:	jmp    0x3e9c:0x2e3786b5
  40874a:	sahf   
  40874b:	sbb    BYTE PTR [eax],cl
  40874d:	mov    cl,0xdf
  40874f:	fmul   DWORD PTR [ecx]
  408751:	leave  
  408752:	ficomp DWORD PTR [ecx+eax*1-0x75]
  408756:	pop    ebx
  408757:	add    BYTE PTR cs:[edx],dl
  40875a:	xchg   ebx,eax
  40875b:	lahf   
  40875c:	test   DWORD PTR [ebp+0x45ca9a93],edi
  408762:	call   0x4ff70720
  408767:	ss inc edi
  408769:	fisttp WORD PTR [edi]
  40876b:	and    BYTE PTR [ebx+edx*4-0x62e5cd16],bl
  408772:	das    
  408773:	push   ecx
  408774:	mov    edx,0x1143446b
  408779:	sti    
  40877a:	out    dx,eax
  40877b:	fisttp QWORD PTR [ebp+0x53]
  40877e:	(bad)  
  40877f:	adc    eax,0x9b74e800
  408784:	inc    esi
  408785:	push   ss
  408786:	push   ebp
  408787:	adc    bl,BYTE PTR [eax+0x13]
  40878a:	push   ds
  40878b:	cdq    
  40878c:	dec    ebp
  40878d:	imul   esp,DWORD PTR [ebx+0x7e6862a2],0xea8b6cd3
  408797:	cld    
  408798:	add    al,0xde
  40879a:	sbb    al,ch
  40879c:	or     DWORD PTR [eax],eax
  40879e:	and    ah,dl
  4087a0:	push   ecx
  4087a1:	xor    DWORD PTR [ebx*2-0x63cac645],esi
  4087a8:	cdq    
  4087a9:	stos   BYTE PTR es:[edi],al
  4087aa:	jmp    0x408793
  4087ac:	add    ebp,ebx
  4087ae:	push   0xffcdabc9
  4087b3:	icebp  
  4087b4:	addr16 out dx,al
  4087b6:	scas   al,BYTE PTR es:[edi]
  4087b7:	shr    BYTE PTR ds:0x45c51926,0x51
  4087be:	mov    BYTE PTR [ebx-0x49],al
  4087c1:	cmp    bl,BYTE PTR [eax+0x4b959439]
  4087c7:	xchg   ebx,esi
  4087c9:	inc    ecx
  4087ca:	popf   
  4087cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087cc:	mov    bh,0xca
  4087ce:	or     eax,0x21f69474
  4087d3:	sbb    esp,DWORD PTR [eax-0x2e]
  4087d6:	jb     0x4087dd
  4087d8:	shl    BYTE PTR [ebp+0x70],0x9b
  4087dc:	je     0x408838
  4087de:	mov    ebp,edi
  4087e0:	(bad)  
  4087e2:	(bad)  
  4087e3:	sti    
  4087e4:	mov    esp,0x77e45992
  4087e9:	inc    ebx
  4087ea:	imul   ecx,DWORD PTR [ebx+edx*2+0x19],0xc61c8882
  4087f2:	cld    
  4087f3:	fsubr  st(0),st
  4087f5:	fidiv  DWORD PTR [esi]
  4087f7:	xor    dl,cl
  4087f9:	je     0x40881f
  4087fb:	add    eax,0x338e1120
  408800:	idiv   ecx
  408802:	or     eax,esi
  408804:	pushf  
  408805:	mov    dh,0x6b
  408807:	int3   
  408808:	jmp    0x408807
  40880a:	inc    esi
  40880b:	jae    0x4087db
  40880d:	repz fwait
  40880f:	ja     0x4087f0
  408811:	into   
  408812:	sub    DWORD PTR [edx+0x74],0xd69d699
  408819:	loop   0x40885c
  40881b:	adc    ebp,DWORD PTR [edx-0x5587f950]
  408821:	dec    eax
  408822:	fild   QWORD PTR [esi]
  408824:	pop    ds
  408825:	mov    esi,0x43d349
  40882a:	fst    DWORD PTR [eax+0x1a]
  40882d:	jo     0x408836
  40882f:	ret    
  408830:	pop    esi
  408831:	jecxz  0x40883e
  408833:	mov    ah,0x7c
  408835:	xchg   edi,eax
  408836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408837:	push   ecx
  408838:	stos   DWORD PTR es:[edi],eax
  408839:	imul   ecx,DWORD PTR [eax],0xa2fbade6
  40883f:	push   esi
  408840:	lods   eax,DWORD PTR ds:[esi]
  408841:	xor    al,0x17
  408843:	xor    al,0xd4
  408845:	pop    esi
  408846:	adc    BYTE PTR [esi],bl
  408848:	add    esp,eax
  40884a:	inc    ebx
  40884b:	shl    ch,1
  40884d:	pop    ebx
  40884e:	ret    
  40884f:	rcl    dl,0x9
  408852:	sub    BYTE PTR [edi-0x47],ah
  408855:	imul   esi,esp,0x25
  408858:	push   ss
  408859:	pop    eax
  40885a:	jne    0x4087f1
  40885c:	pop    ds
  40885d:	aam    0xc9
  40885f:	test   ch,dl
  408861:	stos   DWORD PTR es:[edi],eax
  408862:	adc    edi,DWORD PTR [esi-0x42]
  408865:	inc    edx
  408866:	sub    DWORD PTR [ecx+0x21241068],0x85dfe5d4
  408870:	jg     0x4088cc
  408872:	lods   al,BYTE PTR ds:[esi]
  408873:	(bad)  
  408874:	lock sub cl,BYTE PTR [edi+0x18b20df3]
  40887b:	clc    
  40887c:	ror    DWORD PTR [ebx+0x1130a7ef],cl
  408882:	je     0x40887a
  408884:	pop    esi
  408885:	mov    ds:0xc4e611c9,eax
  40888a:	jno    0x4088cc
  40888c:	pop    es
  40888d:	mov    dl,0x78
  40888f:	push   esp
  408890:	mov    cl,0x93
  408892:	add    BYTE PTR [edi+0x249d4c4f],0xb8
  408899:	(bad)  
  40889a:	out    dx,al
  40889b:	jb     0x4088e1
  40889d:	pop    ss
  40889e:	(bad)  
  40889f:	mov    al,0x90
  4088a1:	into   
  4088a2:	jmp    0x6de8:0xf57400d2
  4088a9:	js     0x4088b9
  4088ab:	in     eax,dx
  4088ac:	(bad)  
  4088ad:	mov    ebp,0xcdb85e4f
  4088b2:	xchg   BYTE PTR [edx-0x5d9e2991],ch
  4088b8:	and    BYTE PTR ds:[ecx-0x64730591],ch
  4088bf:	adc    BYTE PTR [ecx],ch
  4088c1:	inc    esi
  4088c2:	into   
  4088c3:	pop    es
  4088c4:	data16 sti 
  4088c6:	cmc    
  4088c7:	out    0xb0,eax
  4088c9:	lods   al,BYTE PTR ds:[esi]
  4088ca:	stos   BYTE PTR es:[edi],al
  4088cb:	push   DWORD PTR [ecx]
  4088cd:	mov    dh,0x8d
  4088cf:	mov    ebp,0x9256cf77
  4088d4:	pusha  
  4088d5:	clc    
  4088d6:	adc    BYTE PTR [ebp+ebp*4-0x5368f97e],ah
  4088dd:	repz jnp 0x40889f
  4088e0:	dec    ebx
  4088e1:	mov    cl,0x72
  4088e3:	fucomp st(7)
  4088e5:	pop    edx
  4088e6:	jecxz  0x4088f1
  4088e8:	push   0xa1e144a6
  4088ed:	mov    dh,0x76
  4088ef:	dec    ecx
  4088f0:	xchg   esp,eax
  4088f1:	add    al,0xe3
  4088f3:	lds    esp,FWORD PTR [edi-0x7148f6dc]
  4088f9:	jl     0x40889a
  4088fb:	(bad)  
  4088fc:	push   ss
  4088fd:	into   
  4088fe:	(bad)  
  4088ff:	fdiv   DWORD PTR [esi+ebx*8-0x8e697b2]
  408906:	lock dec ebp
  408908:	ss fs aad 0xa8
  40890c:	pop    ss
  40890d:	xor    cl,BYTE PTR [ecx-0x2369fc57]
  408913:	mov    edx,0xeeb0c9d6
  408918:	test   al,0x38
  40891a:	sub    dh,BYTE PTR [edi]
  40891c:	add    dh,BYTE PTR [ebx-0x6b]
  40891f:	add    eax,0xc3caff57
  408924:	xchg   DWORD PTR ds:0xd57b921a,ebp
  40892a:	imul   edi,DWORD PTR [edx-0x21],0x7a
  40892e:	add    DWORD PTR [ebx+esi*1-0x51],edx
  408932:	retf   
  408933:	or     DWORD PTR [ebx],edx
  408935:	or     cl,BYTE PTR [ebp+0x57]
  408938:	gs xor al,0x19
  40893b:	fbstp  TBYTE PTR [eax+0x73]
  40893e:	mov    eax,ds:0xb5601b41
  408943:	fst    QWORD PTR [ebx]
  408945:	shl    DWORD PTR [ebx+0x31],cl
  408948:	imul   esi,DWORD PTR [edx],0x2349912
  40894e:	les    ebx,FWORD PTR [eax]
  408950:	add    al,0x4e
  408952:	cmp    al,0xae
  408954:	das    
  408955:	adc    eax,0x96b697b
  40895a:	mov    eax,ds:0xb5c105d
  40895f:	popa   
  408960:	sub    BYTE PTR [ecx],dh
  408962:	scas   eax,DWORD PTR es:[edi]
  408963:	dec    esi
  408964:	inc    ebp
  408965:	cmp    ch,bh
  408967:	adc    esi,DWORD PTR [esi]
  408969:	clc    
  40896a:	pop    edi
  40896b:	jmp    0xbb33b015
  408970:	push   0xf30b3261
  408975:	adc    eax,ebx
  408977:	and    ecx,esi
  408979:	jnp    0x408994
  40897b:	stc    
  40897c:	cwde   
  40897d:	into   
  40897e:	shl    BYTE PTR [eax+0x5],1
  408981:	cs int3 
  408983:	fadd   st,st(4)
  408985:	xor    eax,0xb89e9d2f
  40898a:	sub    ebp,DWORD PTR [esi+0x66]
  40898d:	nop
  40898e:	aam    0x80
  408990:	pop    ds
  408991:	xor    edi,DWORD PTR [ecx+0x79]
  408994:	(bad)  
  408996:	cmp    edx,edx
  408998:	sub    DWORD PTR [ecx+0xe],0x216e0652
  40899f:	lds    eax,FWORD PTR [ebp-0x6e7c59]
  4089a5:	loopne 0x4089d8
  4089a7:	add    DWORD PTR [ecx],esp
  4089a9:	push   ds
  4089aa:	sbb    al,0x42
  4089ac:	adc    ch,ch
  4089ae:	out    0xa7,al
  4089b0:	int3   
  4089b1:	xchg   ecx,eax
  4089b2:	pop    edx
  4089b3:	adc    dh,cl
  4089b5:	ins    BYTE PTR es:[edi],dx
  4089b6:	xchg   ch,dl
  4089b8:	mov    cl,0x64
  4089ba:	repz shl eax,1
  4089bd:	out    dx,eax
  4089be:	add    esi,ebx
  4089c0:	jle    0x4089d2
  4089c2:	mov    ecx,ebp
  4089c4:	fistp  WORD PTR [edx-0x3b]
  4089c7:	push   0x770448d8
  4089cc:	sbb    edx,DWORD PTR [edx-0x39630d83]
  4089d2:	sub    dl,BYTE PTR [eax]
  4089d4:	add    DWORD PTR [esi+0x4],0x7a
  4089d8:	stos   DWORD PTR es:[edi],eax
  4089d9:	mov    edi,0x899884fd
  4089de:	push   ebp
  4089df:	rol    BYTE PTR [ebx],1
  4089e1:	mov    ah,0x28
  4089e3:	mov    ecx,0x5d9e2dd
  4089e8:	pop    eax
  4089e9:	add    al,0x43
  4089eb:	jmp    0x408a4f
  4089ed:	stc    
  4089ee:	push   0x57
  4089f0:	jmp    0x408a0a
  4089f2:	daa    
  4089f3:	jl     0x408a1f
  4089f5:	jae    0x4089ce
  4089f7:	cmp    DWORD PTR [eax-0x18],ebp
  4089fa:	les    esp,FWORD PTR ds:0x52e3b8d0
  408a00:	aam    0x4
  408a02:	rcl    BYTE PTR [ebx],cl
  408a04:	cmp    eax,0x74db2394
  408a09:	popf   
  408a0a:	and    BYTE PTR [esi-0x572ad2ac],ch
  408a10:	xlat   BYTE PTR ds:[ebx]
  408a11:	pop    ebp
  408a12:	push   edx
  408a13:	cmp    eax,0x915dfde8
  408a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a19:	and    al,0xa
  408a1b:	push   ebp
  408a1c:	xor    al,0xd0
  408a1e:	xchg   edi,esi
  408a20:	and    eax,ebx
  408a22:	xchg   ecx,eax
  408a23:	sub    eax,0xd1c75e12
  408a28:	lds    esp,FWORD PTR [ebx+ebp*4+0x2ba91aa4]
  408a2f:	xor    al,0xef
  408a31:	ja     0x4089b3
  408a33:	sub    DWORD PTR [edx],ecx
  408a35:	xchg   ebx,eax
  408a36:	and    edx,edx
  408a38:	call   0x8a4b:0xfe73ad30
  408a3f:	shl    DWORD PTR [edx+0x5c],0xd6
  408a43:	pop    ss
  408a44:	mov    ebp,0xc7fa6549
  408a49:	pushf  
  408a4a:	or     al,0x8c
  408a4c:	int3   
  408a4d:	out    0x3b,eax
  408a4f:	test   DWORD PTR [ecx+0x15],0xd9283b38
  408a56:	mov    cl,0x64
  408a58:	stos   DWORD PTR es:[edi],eax
  408a59:	push   0x427545f0
  408a5e:	cmp    ebp,ebx
  408a60:	test   DWORD PTR [esi],ebp
  408a62:	gs in  eax,dx
  408a64:	pop    ebp
  408a65:	inc    edi
  408a66:	inc    BYTE PTR [ecx]
  408a68:	inc    esi
  408a69:	mov    ecx,0x737c59e7
  408a6e:	adc    DWORD PTR [ebx-0x6285513b],esp
  408a74:	dec    ecx
  408a75:	leave  
  408a76:	call   0x36fd:0x68f951f
  408a7d:	int    0x94
  408a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a80:	xchg   DWORD PTR ds:0xe0ff5a17,ebx
  408a86:	mov    bh,0x6e
  408a88:	cmp    eax,0x64869572
  408a8d:	pop    es
  408a8e:	xchg   ecx,eax
  408a8f:	in     eax,dx
  408a90:	scas   eax,DWORD PTR es:[edi]
  408a91:	out    dx,eax
  408a92:	pop    ds
  408a93:	(bad)
  408a97:	int3   
  408a98:	xor    ebx,0xffffff9d
  408a9b:	sbb    dh,BYTE PTR es:[eax]
  408a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a9f:	daa    
  408aa0:	ret    
  408aa1:	(bad)  [ecx*4-0x6c80a645]
  408aa8:	cwde   
  408aa9:	(bad)  
  408aab:	dec    edi
  408aac:	xchg   ebp,eax
  408aad:	mov    dl,0xca
  408aaf:	mov    ecx,0xc361f587
  408ab4:	push   cs
  408ab5:	mov    DWORD PTR [esi],ebp
  408ab7:	ja     0x408ab9
  408ab9:	cmp    DWORD PTR [esi],esp
  408abb:	stc    
  408abc:	jno    0x408a96
  408abe:	in     eax,0x68
  408ac0:	jbe    0x408a52
  408ac2:	push   0xffffffbf
  408ac4:	(bad)  
  408ac7:	and    edi,ebp
  408ac9:	sbb    bl,bl
  408acb:	sub    DWORD PTR [ecx],0x4d
  408ace:	ret    
  408acf:	adc    eax,0x8eea5bc7
  408ad4:	out    0xc5,eax
  408ad6:	and    BYTE PTR [esi],dl
  408ad8:	pop    ss
  408ad9:	adc    al,0xc4
  408adb:	ins    DWORD PTR es:[edi],dx
  408adc:	jb     0x408afb
  408ade:	and    al,0x3b
  408ae0:	push   ebx
  408ae1:	sbb    al,0x1f
  408ae3:	popa   
  408ae4:	adc    edx,DWORD PTR [ebx-0x582fd45d]
  408aea:	xor    DWORD PTR [edx],0x45
  408aed:	jne    0x408aee
  408aef:	sbb    dl,ch
  408af1:	shl    BYTE PTR [edi],0x3d
  408af4:	push   eax
  408af5:	pop    ss
  408af6:	pop    eax
  408af7:	push   edi
  408af8:	xor    DWORD PTR [ebx-0x3a],ebx
  408afb:	or     al,BYTE PTR [edi-0x4b8b0502]
  408b01:	bound  ecx,QWORD PTR [ecx]
  408b03:	fldcw  WORD PTR [edi-0x7d]
  408b06:	js     0x408b69
  408b08:	cmc    
  408b09:	push   ebx
  408b0a:	les    esi,FWORD PTR gs:[esi+0x33a15e9b]
  408b11:	test   eax,0xdafa82b0
  408b16:	push   esp
  408b17:	and    al,0x61
  408b19:	xor    DWORD PTR [esi],ebp
  408b1b:	pop    ecx
  408b1c:	mov    ch,0x9
  408b1e:	mov    al,0xf3
  408b20:	adc    eax,0x5e82fcaa
  408b25:	xor    ah,BYTE PTR [ebp-0xc]
  408b28:	inc    eax
  408b29:	adc    eax,0xb412aa07
  408b2e:	out    0x1c,al
  408b30:	icebp  
  408b31:	mov    DWORD PTR [esi],edx
  408b33:	push   ecx
  408b34:	jo     0x408bad
  408b36:	xchg   BYTE PTR [eax-0x3acb62c0],bl
  408b3c:	jne    0x408af0
  408b3e:	popa   
  408b3f:	dec    edi
  408b40:	(bad)  
  408b41:	jmp    0x408b88
  408b43:	mov    DWORD PTR [di+0x22],ebp
  408b47:	neg    DWORD PTR [ecx+0x357c1621]
  408b4d:	lock cmp DWORD PTR [ebp+0x1a],0x62
  408b52:	inc    ebx
  408b53:	dec    ecx
  408b54:	les    eax,FWORD PTR [ebp+0x2c]
  408b57:	cdq    
  408b58:	scas   al,BYTE PTR es:[edi]
  408b59:	mov    edi,0xf0a0c4a6
  408b5e:	add    al,0x6e
  408b60:	push   0x131756c8
  408b65:	cs adc eax,ecx
  408b68:	in     al,0xf
  408b6a:	mov    ds,WORD PTR [eax]
  408b6c:	xchg   ebp,eax
  408b6d:	loope  0x408b54
  408b6f:	dec    esi
  408b70:	out    0x2a,al
  408b72:	mov    ?,WORD PTR [ebx-0x45]
  408b75:	add    BYTE PTR [edx+0x2495b704],0xbb
  408b7c:	popa   
  408b7d:	pushf  
  408b7e:	xchg   ebx,eax
  408b7f:	jl     0x408b7a
  408b81:	out    0x39,al
  408b83:	push   ebx
  408b84:	mov    al,BYTE PTR [edx-0x2c5fa526]
  408b8a:	mov    ebp,0x4dd967f5
  408b8f:	mov    ds:0x7fb53458,eax
  408b94:	mov    al,ds:0xf52dab4
  408b99:	xchg   BYTE PTR [edi+0x55cbde4f],dl
  408b9f:	iret   
  408ba0:	push   ds
  408ba1:	sub    eax,0x41860cce
  408ba6:	pop    ecx
  408ba7:	test   al,0xc8
  408ba9:	ror    DWORD PTR [esi+edi*4],0xc7
  408bad:	sbb    DWORD PTR [ebp-0x5d],ebp
  408bb0:	dec    ebx
  408bb1:	dec    edi
  408bb2:	mov    ds:0x40052511,al
  408bb7:	add    bh,BYTE PTR ds:[ecx-0x287bf347]
  408bbe:	test   eax,0xe9286ac7
  408bc3:	push   edi
  408bc4:	out    0xa5,al
  408bc6:	fist   DWORD PTR [esi-0x4264fdbc]
  408bcc:	inc    ebp
  408bcd:	sub    BYTE PTR [edx-0x3d],bh
  408bd0:	xchg   esi,eax
  408bd1:	jae    0x408be8
  408bd3:	imul   ebx,DWORD PTR [ecx],0x2f91ca8f
  408bd9:	jae    0x408bd1
  408bdb:	sbb    DWORD PTR ds:0xcd635f07,ebp
  408be1:	fdiv   QWORD PTR [ecx-0x59]
  408be4:	dec    esp
  408be5:	(bad)  
  408be8:	pop    ds
  408be9:	not    DWORD PTR [ecx-0x723fe62c]
  408bef:	mov    al,ds:0x4ca0832
  408bf4:	mov    al,ds:0x9a2b7cf7
  408bf9:	mov    eax,0xee75e402
  408bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bff:	inc    ecx
  408c00:	scas   eax,DWORD PTR es:[edi]
  408c01:	(bad)  
  408c02:	rcl    DWORD PTR [esi+0x2f],1
  408c05:	out    dx,eax
  408c06:	in     al,dx
  408c07:	dec    esi
  408c08:	(bad)  
  408c09:	hlt    
  408c0a:	inc    ebp
  408c0b:	fdiv   DWORD PTR [ecx-0x23dc1883]
  408c11:	or     ecx,edx
  408c13:	mov    ds:0x2886f92e,eax
  408c18:	(bad)  
  408c19:	scas   al,BYTE PTR es:[edi]
  408c1a:	in     eax,0xd0
  408c1c:	and    BYTE PTR [eax-0x3e504786],0xc8
  408c23:	jb     0x408c7d
  408c25:	jecxz  0x408be4
  408c27:	add    eax,edi
  408c29:	mov    bl,0xfa
  408c2b:	aam    0x8d
  408c2d:	pop    edi
  408c2e:	inc    ebx
  408c2f:	add    bl,bh
  408c31:	sub    BYTE PTR [ecx+ebx*8],0x3b
  408c35:	enter  0x8588,0x45
  408c39:	pop    esi
  408c3a:	jp     0x408bc5
  408c3c:	push   ebx
  408c3d:	push   0xffffffdd
  408c3f:	into   
  408c40:	sbb    ebp,esi
  408c42:	sub    ecx,DWORD PTR [edx]
  408c44:	je     0x408c28
  408c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c47:	xor    eax,0x75d0fb39
  408c4c:	cmp    al,0xd
  408c4e:	out    0x3e,al
  408c50:	xchg   ecx,eax
  408c51:	cmc    
  408c52:	outs   dx,DWORD PTR ds:[esi]
  408c53:	dec    esi
  408c54:	gs (bad) 
  408c56:	jmp    0x8b09:0xc9dbabe9
  408c5d:	mov    WORD PTR [ebx-0x39ced368],ss
  408c63:	push   ecx
  408c64:	push   0x4f36429
  408c69:	bound  edi,QWORD PTR [ebx]
  408c6b:	and    dh,BYTE PTR [esi+0x2]
  408c6e:	and    DWORD PTR [eax-0x6],edi
  408c71:	ss xor al,0x37
  408c74:	lods   al,BYTE PTR ds:[esi]
  408c75:	inc    ecx
  408c76:	mov    bl,0x9e
  408c78:	and    al,dh
  408c7a:	aam    0x36
  408c7c:	xor    DWORD PTR [edx+0x6129cad5],ecx
  408c82:	test   bh,0x90
  408c85:	or     DWORD PTR [ecx+0xf],esi
  408c88:	out    0x3d,eax
  408c8a:	and    eax,0x6250f838
  408c8f:	pop    esi
  408c90:	mov    edi,DWORD PTR [ebx]
  408c92:	aas    
  408c93:	enter  0xe280,0xa5
  408c97:	add    BYTE PTR [eax-0x52c5729a],cl
  408c9d:	ret    
  408c9e:	mov    esi,0x7ec4a38a
  408ca3:	pop    ds
  408ca4:	(bad)  
  408ca5:	mov    esi,0xe5613bb0
  408caa:	cmc    
  408cab:	aad    0x73
  408cad:	jmp    0xe98f:0xf2ff112d
  408cb4:	cmp    al,0x80
  408cb6:	mov    al,ds:0xf2da1b3
  408cbb:	inc    esp
  408cbc:	loope  0x408cf7
  408cbe:	imul   eax,DWORD PTR [ecx+ebx*8+0x4b],0x68
  408cc3:	aaa    
  408cc4:	or     dl,BYTE PTR [esi-0x1e]
  408cc7:	inc    esp
  408cc8:	cwde   
  408cc9:	daa    
  408cca:	sahf   
  408ccb:	push   0xffffff96
  408ccd:	mov    eax,edi
  408ccf:	push   esp
  408cd0:	dec    esi
  408cd1:	repnz dec esp
  408cd3:	and    ch,ah
  408cd5:	inc    edi
  408cd7:	stc    
  408cd8:	add    DWORD PTR [ebp-0x259fbfd5],0xffffff84
  408cdf:	dec    ebp
  408ce0:	xor    BYTE PTR [edx-0x7397e5cc],al
  408ce6:	pop    edx
  408ce7:	test   al,0x2
  408ce9:	inc    eax
  408cea:	retf   0x30ac
  408ced:	xor    eax,0xab31874d
  408cf2:	div    BYTE PTR [edi+0x4d]
  408cf5:	and    dl,bl
  408cf7:	add    eax,0x2a0f398b
  408cfc:	mov    ebp,0x2ddab857
  408d01:	retf   
  408d02:	pop    ebx
  408d03:	(bad)  
  408d04:	sti    
  408d05:	mov    ds:0xce2894bf,eax
  408d0a:	arpl   si,sp
  408d0c:	in     eax,0xb5
  408d0e:	out    0x4e,eax
  408d10:	scas   al,BYTE PTR es:[edi]
  408d11:	or     DWORD PTR [ebp+0x7da0a775],esi
  408d17:	mov    al,ds:0xdc4f88c9
  408d1c:	sar    BYTE PTR [edx+edi*1-0xd],0x80
  408d21:	sbb    DWORD PTR [edx+0x7761a1c5],edx
  408d27:	push   ss
  408d28:	jp     0x408d5a
  408d2a:	mov    ch,0xa2
  408d2c:	in     eax,0x87
  408d2e:	in     al,0x96
  408d30:	ins    DWORD PTR es:[edi],dx
  408d31:	dec    edi
  408d32:	gs in  eax,dx
  408d34:	stos   BYTE PTR es:[edi],al
  408d35:	sti    
  408d36:	mov    DWORD PTR [edx+esi*1+0x4d],esi
  408d3a:	jbe    0x408da7
  408d3c:	inc    ecx
  408d3d:	jnp    0x408d49
  408d3f:	aad    0xd6
  408d41:	fisttp WORD PTR ds:0xe77c4b57
  408d47:	and    eax,0x667d7a2d
  408d4c:	or     BYTE PTR [ecx-0x332ed77d],al
  408d52:	rcr    DWORD PTR [esi],0x15
  408d55:	mov    esi,0xfcf33f0
  408d5a:	pop    ebp
  408d5b:	cld    
  408d5c:	xchg   esp,eax
  408d5d:	xor    DWORD PTR [edi-0x50edee94],ebp
  408d63:	pushf  
  408d64:	daa    
  408d65:	and    eax,0x9f04b4f1
  408d6a:	retf   0xb25d
  408d6d:	(bad)  
  408d6e:	adc    eax,0xea857d5f
  408d73:	iret   
  408d74:	mov    cl,0x98
  408d76:	dec    eax
  408d77:	(bad)  
  408d78:	jo     0x408d0f
  408d7a:	cld    
  408d7b:	inc    edi
  408d7c:	aam    0x27
  408d7e:	mov    esi,0x98be2090
  408d83:	leave  
  408d84:	dec    esp
  408d85:	mov    gs,WORD PTR ds:0x9fb5d6d6
  408d8b:	ret    
  408d8c:	jns    0x408dea
  408d8e:	push   ebx
  408d8f:	mov    ebx,0x29aa7326
  408d94:	popa   
  408d95:	retf   
  408d96:	cli    
  408d97:	mov    bl,0xfc
  408d99:	fidiv  WORD PTR [ebx]
  408d9b:	sbb    BYTE PTR [edx],dl
  408d9d:	jno    0x408e0d
  408d9f:	aad    0xc5
  408da1:	stos   BYTE PTR es:[edi],al
  408da2:	mov    bl,0xf3
  408da4:	xor    edx,DWORD PTR [ecx+0x49aa847b]
  408daa:	test   BYTE PTR [eax+0x61],cl
  408dad:	pusha  
  408dae:	inc    edi
  408daf:	add    eax,0x1141f88c
  408db4:	ins    DWORD PTR es:[edi],dx
  408db5:	in     eax,dx
  408db6:	push   0x342c470e
  408dbb:	dec    edi
  408dbc:	gs xor esp,0xa3073dec
  408dc3:	jae    0x408d78
  408dc5:	sbb    DWORD PTR [edx+ebp*1],ebp
  408dc8:	and    BYTE PTR [edi-0x1f744f6b],bh
  408dce:	xor    eax,0x3b65c558
  408dd3:	std    
  408dd4:	cmp    DWORD PTR [esp+eax*2],esp
  408dd7:	cmp    ax,0xc77e
  408ddb:	mul    BYTE PTR [edx+0x7d]
  408dde:	or     ch,BYTE PTR [ebx]
  408de0:	outs   dx,BYTE PTR ds:[esi]
  408de1:	push   ss
  408de2:	sti    
  408de3:	dec    esi
  408de4:	in     eax,0x12
  408de6:	fcomp  QWORD PTR [esi-0x2131a23b]
  408dec:	mov    bl,0x62
  408dee:	call   0x9e87a7c
  408df3:	fidiv  WORD PTR [ebx]
  408df5:	bound  ebp,QWORD PTR [ebx]
  408df7:	pop    esp
  408df8:	mov    esp,0x1e588250
  408dfd:	daa    
  408dfe:	ret    
  408dff:	pop    esp
  408e00:	scas   eax,DWORD PTR es:[edi]
  408e01:	dec    DWORD PTR [ebx-0x6c]
  408e04:	repz test BYTE PTR [esp+edx*1-0x4],ah
  408e09:	(bad)  
  408e0a:	push   edi
  408e0b:	add    ch,bl
  408e0d:	out    0x3c,al
  408e0f:	es mov dh,0x4c
  408e12:	cmc    
  408e13:	not    BYTE PTR ds:0x737964f5
  408e19:	icebp  
  408e1a:	fild   WORD PTR [ebx+0x4d]
  408e1d:	sti    
  408e1e:	inc    edi
  408e1f:	clc    
  408e20:	xchg   ecx,ebp
  408e22:	call   0x9076:0x74d6638e
  408e29:	mov    esi,0x985fc5f7
  408e2e:	repnz or dl,ch
  408e31:	fisubr WORD PTR [edi+eiz*1+0x2f931e8c]
  408e38:	mov    ss,WORD PTR [ebx-0x7d7ffd39]
  408e3e:	add    ch,BYTE PTR [ecx+0x49876fbb]
  408e44:	ror    DWORD PTR ds:0x112db7f,0x39
  408e4b:	dec    eax
  408e4c:	je     0x408dee
  408e4e:	dec    edx
  408e4f:	mov    edx,0x101fc09a
  408e54:	aad    0xeb
  408e56:	daa    
  408e57:	int    0xbd
  408e59:	mov    ds,WORD PTR [ebp+0xe5faeaf]
  408e5f:	imul   BYTE PTR ds:0x662e3080
  408e65:	pushf  
  408e66:	jno    0x408e53
  408e68:	mov    ebp,0x89a353f6
  408e6d:	jnp    0x408e47
  408e6f:	or     al,0xd2
  408e71:	in     al,0x7a
  408e73:	push   esp
  408e74:	aad    0xd4
  408e76:	daa    
  408e77:	mov    ah,0xd6
  408e79:	ss out dx,eax
  408e7b:	popa   
  408e7c:	xlat   BYTE PTR ds:[ebx]
  408e7d:	cmp    esi,eax
  408e7f:	adc    ebx,DWORD PTR cs:[esi+0x77]
  408e83:	test   eax,0x7294070c
  408e88:	xor    ecx,esi
  408e8a:	mov    ecx,0xe4fce491
  408e8f:	test   esp,ebx
  408e91:	lahf   
  408e92:	mov    ebx,0xa94f229c
  408e97:	aam    0x5
  408e99:	cmc    
  408e9a:	sbb    eax,0xffd300f8
  408e9f:	int3   
  408ea0:	sbb    ch,ah
  408ea2:	adc    esp,DWORD PTR [esi-0x24374e16]
  408ea8:	mov    al,ds:0xa64fdb7a
  408ead:	or     dh,cl
  408eaf:	jo     0x408ef6
  408eb1:	jmp    0x1b77:0x57555b25
  408eb8:	(bad)  
  408eb9:	mov    cl,0xd7
  408ebb:	jle    0x408e55
  408ebd:	push   ds
  408ebe:	dec    dh
  408ec0:	clc    
  408ec1:	lods   al,BYTE PTR ds:[esi]
  408ec2:	pop    esp
  408ec3:	push   esi
  408ec4:	das    
  408ec5:	dec    edi
  408ec6:	cmp    eax,0xe301ff7b
  408ecb:	(bad)  
  408ecc:	mov    ebp,0x8dc8f3e3
  408ed1:	sub    DWORD PTR [ebx],esi
  408ed3:	ja     0x408f32
  408ed5:	aaa    
  408ed6:	pop    edi
  408ed7:	push   edi
  408ed8:	push   cs
  408ed9:	rcl    BYTE PTR [esp+ebp*4-0x4a2c9ebe],1
  408ee0:	and    bh,cl
  408ee2:	xor    al,0x8d
  408ee4:	in     al,dx
  408ee5:	inc    edi
  408ee6:	in     eax,0xd6
  408ee8:	data16 sub BYTE PTR [ecx],bl
  408eeb:	mov    cl,0xbe
  408eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eee:	pop    ebx
  408eef:	in     al,0x71
  408ef1:	out    dx,al
  408ef2:	(bad)  
  408ef3:	mov    al,0xff
  408ef5:	mov    ebx,0x47270120
  408efa:	sbb    cl,bh
  408efc:	fsubr  QWORD PTR [edx+0x5ea0bf8f]
  408f02:	mov    edi,0x53d0fab3
  408f07:	lahf   
  408f08:	cmp    ah,BYTE PTR [edi-0x23]
  408f0b:	fs push ss
  408f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f0e:	or     bh,BYTE PTR [ecx+0x12]
  408f11:	mov    esp,0x42ef7e89
  408f16:	pop    ebx
  408f17:	inc    ebp
  408f18:	fst    DWORD PTR [edi-0x71]
  408f1b:	jnp    0x408ec4
  408f1d:	fmul   st,st(3)
  408f1f:	gs pop edi
  408f21:	adc    ebx,DWORD PTR [ebp-0x3bdb83bf]
  408f27:	pop    ds
  408f28:	dec    edi
  408f29:	stc    
  408f2a:	dec    eax
  408f2b:	shr    BYTE PTR [ebx+0x75],1
  408f2e:	xor    edx,eax
  408f30:	loope  0x408f7d
  408f32:	popa   
  408f33:	aaa    
  408f34:	mov    esp,0xb0e5e71
  408f39:	push   ecx
  408f3a:	or     eax,0x60493a06
  408f3f:	dec    ebp
  408f40:	push   ecx
  408f41:	loopne 0x408ee7
  408f43:	mov    ds:0xf16c4721,eax
  408f48:	ficom  DWORD PTR [edi]
  408f4a:	and    al,0x60
  408f4c:	hlt    
  408f4d:	repnz shl ecx,0x3c
  408f51:	jnp    0x408f8e
  408f53:	mov    ecx,DWORD PTR [esp+edi*8-0x1bdc7162]
  408f5a:	aad    0x27
  408f5c:	and    eax,0x5bb70a5b
  408f61:	xor    ebx,ebx
  408f63:	das    
  408f64:	jae    0x408f31
  408f66:	pop    ebp
  408f67:	pshufw mm4,QWORD PTR [ebp-0x6566f312],0x5d
  408f6f:	scas   al,BYTE PTR es:[edi]
  408f70:	icebp  
  408f71:	mov    eax,ds:0xeb6b1b9f
  408f76:	fmulp  st(7),st
  408f78:	hlt    
  408f79:	cwde   
  408f7a:	xlat   BYTE PTR ds:[ebx]
  408f7b:	test   DWORD PTR [ecx+0x1c],ecx
  408f7e:	rol    al,1
  408f80:	cdq    
  408f81:	adc    ah,bh
  408f83:	mov    ebx,0xefc75f42
  408f88:	test   al,0xa8
  408f8a:	icebp  
  408f8b:	fdiv   QWORD PTR [edx]
  408f8d:	nop
  408f8e:	mov    dh,BYTE PTR [eax+0x1c]
  408f91:	call   0xfb5b:0xd1243411
  408f98:	mov    eax,0x4bbea229
  408f9d:	outs   dx,DWORD PTR ds:[esi]
  408f9e:	inc    ebx
  408f9f:	arpl   WORD PTR [edi-0x36aac936],sp
  408fa5:	xor    DWORD PTR [edi+eiz*4],esi
  408fa8:	mov    dh,0xa8
  408faa:	inc    ebp
  408fab:	jl     0x408f55
  408fad:	add    DWORD PTR [edi],0x7445bfba
  408fb3:	mov    bl,0x94
  408fb5:	hlt    
  408fb6:	xor    cl,bl
  408fb8:	ja     0x408f5d
  408fba:	pop    ecx
  408fbb:	stos   BYTE PTR es:[edi],al
  408fbc:	mov    ds:0x63610a70,al
  408fc1:	pop    ebp
  408fc2:	mov    es,WORD PTR [esi-0x3668be68]
  408fc8:	inc    esp
  408fc9:	out    0xe6,al
  408fcb:	ret    0x42ed
  408fce:	ja     0x408fd7
  408fd0:	data16 mov ds:0x631a9544,al
  408fd6:	sahf   
  408fd7:	xor    eax,0xd4253c73
  408fdc:	pop    esi
  408fdd:	add    eax,ecx
  408fdf:	stc    
  408fe0:	or     bh,BYTE PTR [edx-0x24]
  408fe3:	int    0xd0
  408fe5:	ffree  st(7)
  408fe7:	mov    ecx,0xf5ad0aac
  408fec:	cmp    DWORD PTR [ebx+ecx*2],0x3ce07d11
  408ff3:	stc    
  408ff4:	jno    0x408f9b
  408ff6:	stc    
  408ff7:	or     eax,DWORD PTR [edi-0x5001fa7e]
  408ffd:	adc    cl,0x9c
  409000:	and    al,BYTE PTR [esi]
  409002:	scas   eax,DWORD PTR es:[edi]
  409003:	in     eax,0xb6
  409005:	xchg   esp,eax
  409006:	in     al,0x10
  409008:	xor    edx,DWORD PTR [ecx]
  40900a:	xchg   edi,eax
  40900b:	xchg   ebp,eax
  40900c:	in     eax,dx
  40900d:	popf   
  40900e:	and    al,0xc1
  409010:	(bad)  
  409011:	jle    0x408fc5
  409013:	loopne 0x408fe5
  409015:	pushf  
  409016:	mov    al,0x37
  409018:	xlat   BYTE PTR ds:[ebx]
  409019:	into   
  40901a:	lahf   
  40901b:	xor    BYTE PTR [edx+0x49],0xbe
  40901f:	or     eax,0xf197934d
  409024:	lahf   
  409025:	push   cs
  409026:	adc    ebx,DWORD PTR [ebx-0x383973ca]
  40902c:	inc    edx
  40902d:	cli    
  40902e:	mov    eax,0xd815667a
  409033:	int3   
  409034:	xor    eax,0x83b3b19f
  409039:	out    0x3b,eax
  40903b:	in     eax,dx
  40903c:	dec    eax
  40903d:	cs out dx,eax
  40903f:	push   es
  409040:	sahf   
  409041:	xor    eax,0xdab43aac
  409046:	add    eax,0xe8a564e5
  40904b:	mov    ah,0x6e
  40904d:	shl    DWORD PTR [ebp+0x5a1d944a],cl
  409053:	call   0x6961:0x1d131743
  40905a:	(bad)  
  40905b:	adc    al,0x40
  40905d:	jp     0x4090ce
  40905f:	pop    ebp
  409060:	adc    BYTE PTR [edx-0x5300602c],ch
  409066:	adc    bl,dh
  409068:	jl     0x4090d6
  40906a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40906b:	pusha  
  40906c:	imul   ecx,DWORD PTR [edi+eax*2],0xffffffe1
  409070:	inc    edi
  409071:	out    0xb4,al
  409073:	ret    0x6b0c
  409076:	ret    
  409077:	js     0x40908c
  409079:	aas    
  40907a:	inc    edx
  40907b:	clc    
  40907c:	(bad)  
  40907d:	in     eax,dx
  40907e:	ficomp DWORD PTR [ecx-0x74]
  409081:	jge    0x4090a0
  409083:	and    edi,DWORD PTR [eax+0x6a5cab0a]
  409089:	xchg   edx,eax
  40908a:	push   ss
  40908b:	mov    esi,0x9fe8aa99
  409090:	rcr    DWORD PTR [esi],cl
  409092:	dec    ebx
  409093:	inc    ebp
  409094:	jmp    0xbe77:0xd40fb367
  40909b:	iret   
  40909c:	jns    0x409083
  40909e:	pop    esi
  40909f:	nop
  4090a0:	add    BYTE PTR [edi+0x26],bl
  4090a3:	cmc    
  4090a4:	jge    0x4090cb
  4090a6:	js     0x409067
  4090a8:	dec    esp
  4090a9:	(bad)  
  4090aa:	aaa    
  4090ab:	imul   esi,ebp,0x9bd82a1a
  4090b1:	int3   
  4090b2:	leave  
  4090b3:	mov    ah,0x4a
  4090b5:	add    ecx,DWORD PTR [ebx-0x2d]
  4090b8:	jo     0x409075
  4090ba:	sub    al,BYTE PTR [edx+edx*2+0x6258d0f2]
  4090c1:	mov    al,0xfb
  4090c3:	cmp    BYTE PTR [esi+0x3c],0xfd
  4090c7:	outs   dx,DWORD PTR ds:[esi]
  4090c8:	cld    
  4090c9:	push   edx
  4090ca:	push   0x7d905a38
  4090cf:	bound  edi,QWORD PTR [ebx+0x1b]
  4090d2:	sti    
  4090d3:	sbb    eax,0x1fe6f5ab
  4090d8:	mov    esi,0xb67ecff9
  4090dd:	ins    DWORD PTR es:[edi],dx
  4090de:	scas   al,BYTE PTR es:[edi]
  4090df:	sbb    eax,0x9c1dfd46
  4090e4:	retf   
  4090e5:	ins    DWORD PTR es:[edi],dx
  4090e6:	mov    esp,0xa91ff38c
  4090eb:	repnz mov dh,0xb8
  4090ee:	xchg   ebx,eax
  4090ef:	and    al,0x34
  4090f1:	bound  edi,QWORD PTR [esi]
  4090f3:	cwde   
  4090f4:	pop    es
  4090f5:	je     0x409123
  4090f7:	in     eax,0x5
  4090f9:	mov    ch,0x1c
  4090fb:	(bad)  
  4090fc:	jno    0x409123
  4090fe:	in     al,0x5a
  409100:	jle    0x409103
  409102:	jne    0x40916f
  409104:	ret    
  409105:	aam    0xa3
  409107:	cmc    
  409108:	or     edi,DWORD PTR [ecx]
  40910a:	adc    dl,cl
  40910c:	or     al,0xeb
  40910e:	add    edx,eax
  409110:	fld    QWORD PTR [edi+0x4e]
  409113:	mov    dl,0xad
  409115:	xor    bh,al
  409117:	or     ch,BYTE PTR [eax-0x268295c6]
  40911d:	sub    al,BYTE PTR [ebp-0x6b]
  409120:	jne    0x4090d4
  409122:	daa    
  409123:	mov    eax,0xa14a9b11
  409128:	mov    ebp,0x318a97ff
  40912d:	add    eax,0xb5760564
  409132:	cmp    eax,0x1c21eef0
  409137:	pop    esp
  409138:	push   0x2
  40913a:	cwde   
  40913b:	in     al,0x22
  40913d:	cmp    eax,0x2a
  409140:	dec    edx
  409141:	test   DWORD PTR [ebx+0x3b8ab49f],edi
  409147:	aad    0xb1
  409149:	sbb    eax,0x153833c2
  40914e:	ret    0xf7d7
  409151:	inc    ebp
  409152:	mov    cl,0x7f
  409154:	push   esp
  409155:	ret    0x4471
  409158:	mov    dl,0x8f
  40915a:	sub    ah,BYTE PTR [esi]
  40915c:	pop    ecx
  40915d:	sti    
  40915e:	popf   
  40915f:	jae    0x4091cb
  409161:	(bad)  
  409162:	test   eax,0xa027bca3
  409167:	adc    BYTE PTR [ebx],ch
  409169:	in     al,0xb8
  40916b:	out    0x7a,eax
  40916d:	mov    dh,0x4c
  40916f:	mov    WORD PTR [eax+0x5f],cs
  409172:	add    esp,esi
  409174:	mov    esi,0x396d96b
  409179:	lock mov ds:0x9512abf5,eax
  40917f:	pop    ebx
  409180:	dec    ecx
  409181:	sub    DWORD PTR [ecx+0x2e],eax
  409184:	je     0x409190
  409186:	stc    
  409187:	call   0xcb02:0xfdbda115
  40918e:	jne    0x409168
  409190:	mov    ds:0x12021cd0,eax
  409195:	jae    0x409120
  409197:	dec    DWORD PTR [ebp+0x23]
  40919a:	lahf   
  40919b:	adc    DWORD PTR [edx+0x12],eax
  40919e:	pop    eax
  40919f:	ins    DWORD PTR es:[edi],dx
  4091a0:	std    
  4091a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a2:	mov    eax,ds:0xf56944c4
  4091a7:	(bad)  
  4091a8:	xor    al,0xa4
  4091aa:	stc    
  4091ab:	(bad)  
  4091ac:	push   esp
  4091ad:	cmp    al,0xf6
  4091af:	inc    esp
  4091b0:	popf   
  4091b1:	or     bl,ch
  4091b3:	div    dl
  4091b5:	dec    esi
  4091b6:	pop    DWORD PTR [esi-0x24c4d9c2]
  4091bc:	jo     0x4091f9
  4091be:	gs mov eax,0x5b451511
  4091c4:	and    BYTE PTR [ebx],dl
  4091c6:	jno    0x409163
  4091c8:	jb     0x4091d2
  4091ca:	stos   DWORD PTR es:[edi],eax
  4091cb:	or     eax,0x837c5ca7
  4091d0:	dec    esp
  4091d1:	add    DWORD PTR [ecx],esi
  4091d3:	int3   
  4091d4:	jnp    0x4091d3
  4091d6:	ins    BYTE PTR es:[edi],dx
  4091d7:	cmp    al,0x16
  4091d9:	mov    BYTE PTR [edx],ah
  4091db:	sub    ebp,DWORD PTR [edi]
  4091dd:	loopne 0x4091aa
  4091df:	jge    0x4091e6
  4091e1:	adc    BYTE PTR [edi],al
  4091e3:	push   ds
  4091e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e5:	mov    ebp,0xae7c2820
  4091ea:	jp     0x409256
  4091ec:	xor    BYTE PTR [eax-0x36],ah
  4091ef:	scas   al,BYTE PTR es:[edi]
  4091f0:	add    DWORD PTR [esi+0x36084c0c],ecx
  4091f6:	mov    eax,ds:0x45f13533
  4091fb:	jp     0x409221
  4091fd:	inc    esp
  4091fe:	fmul   DWORD PTR [ecx+0x74]
  409201:	daa    
  409202:	xor    al,0x53
  409204:	dec    ebx
  409205:	retf   
  409206:	jns    0x40923f
  409208:	pop    edx
  409209:	(bad)  
  40920a:	not    BYTE PTR [ebx-0x22258a12]
  409210:	test   al,0xe6
  409212:	add    ah,BYTE PTR [ecx-0xdd6a5bf]
  409218:	hlt    
  409219:	mov    BYTE PTR [edx],bh
  40921b:	mov    ah,0x1
  40921d:	dec    eax
  40921e:	nop
  40921f:	cli    
  409220:	mov    al,ds:0x2dbe05d4
  409225:	or     esi,DWORD PTR [esi]
  409227:	das    
  409228:	adc    eax,ebp
  40922a:	sti    
  40922b:	sti    
  40922c:	les    esp,FWORD PTR [ecx]
  40922e:	(bad)  
  40922f:	push   ebp
  409230:	cmc    
  409231:	js     0x40922e
  409233:	pop    esi
  409234:	sar    eax,0x77
  409237:	push   es
  409238:	sub    edi,ebp
  40923a:	or     DWORD PTR [ebp-0x3a58dfa3],ebx
  409240:	jecxz  0x40923f
  409242:	adc    al,BYTE PTR fs:[edi-0x40]
  409246:	das    
  409247:	lahf   
  409248:	xor    eax,0x536316f7
  40924d:	pop    esi
  40924e:	xor    DWORD PTR [eax-0x4273e03f],0xe
  409255:	pop    ebp
  409256:	mov    dl,0xf5
  409258:	scas   al,BYTE PTR es:[edi]
  409259:	adc    eax,0x91502395
  40925e:	nop    ecx
  409261:	dec    esi
  409262:	xchg   ebx,eax
  409263:	and    DWORD PTR [ebx],0x85c33142
  409269:	push   ebp
  40926a:	loop   0x40927e
  40926c:	adc    DWORD PTR [esi],0x60
  40926f:	mov    edi,0x1f81e1f6
  409274:	push   ds
  409275:	push   0x5d
  409277:	pop    esp
  409278:	outs   dx,DWORD PTR ds:[esi]
  409279:	rol    ebx,0x5e
  40927c:	jb     0x409227
  40927e:	sahf   
  40927f:	ret    0xa90c
  409282:	xlat   BYTE PTR ds:[ebx]
  409283:	add    eax,0x17764feb
  409288:	mov    al,0x93
  40928a:	and    BYTE PTR [edx-0x47],bh
  40928d:	add    eax,0x8f753a7
  409292:	sbb    edx,DWORD PTR [ebx-0x32]
  409295:	cmp    DWORD PTR [eax-0x19013af7],esi
  40929b:	adc    eax,0xa65cfa0
  4092a0:	rol    BYTE PTR [eax],0x53
  4092a3:	xchg   edx,eax
  4092a4:	jecxz  0x409260
  4092a6:	xlat   BYTE PTR ds:[ebx]
  4092a7:	and    eax,0x83ec14b5
  4092ac:	push   ebp
  4092ad:	jg     0x40930b
  4092af:	xchg   ebx,eax
  4092b0:	shl    al,cl
  4092b2:	dec    ecx
  4092b3:	adc    al,0x74
  4092b5:	cmp    edi,DWORD PTR [ebx+0x3e]
  4092b8:	mov    edi,0x9b03365
  4092bd:	cs test dh,al
  4092c0:	cmp    BYTE PTR [esi+ebp*2-0x15],bl
  4092c4:	test   al,0x61
  4092c6:	test   DWORD PTR [ecx-0x682a0e8d],ecx
  4092cc:	jns    0x409273
  4092ce:	pop    edi
  4092cf:	xor    BYTE PTR [edi-0x15],dh
  4092d2:	pushf  
  4092d3:	(bad)  
  4092d4:	fstp   st(2)
  4092d6:	push   eax
  4092d7:	dec    ebp
  4092d8:	dec    cl
  4092da:	adc    al,0x9c
  4092dc:	pop    ss
  4092dd:	mov    ds:0x9e1c0929,al
  4092e2:	mul    BYTE PTR [edx]
  4092e4:	lods   eax,DWORD PTR ds:[esi]
  4092e5:	ror    al,0x48
  4092e8:	das    
  4092e9:	aas    
  4092ea:	mov    bl,0xa4
  4092ec:	or     BYTE PTR [edi-0x32],al
  4092ef:	and    eax,0x4ed5d6c9
  4092f4:	jnp    0x4092ce
  4092f6:	sub    eax,0x3fe6cfe4
  4092fb:	js     0x40936e
  4092fd:	or     eax,0x46410fde
  409302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409303:	xchg   edx,eax
  409304:	dec    esi
  409305:	(bad)  
  409306:	in     eax,0x78
  409308:	fimul  WORD PTR [ebx+0x45]
  40930b:	mov    edx,0xa4ab322
  409310:	mov    DWORD PTR [ecx-0x58],eax
  409313:	in     eax,dx
  409314:	shl    DWORD PTR [ebx+0x5849aec8],0x5e
  40931b:	repz adc bl,BYTE PTR fs:[ecx+0x5a748061]
  409323:	jge    0x409321
  409325:	outs   dx,BYTE PTR ds:[esi]
  409326:	aas    
  409327:	in     eax,0x4
  409329:	imul   ebx,DWORD PTR [edi-0x2ee4ed7],0xffffff89
  409330:	pop    eax
  409331:	pop    esp
  409332:	mov    ds:0xbc6b4c65,eax
  409337:	std    
  409338:	pop    ecx
  409339:	ret    
  40933a:	ficom  WORD PTR [edi-0x8]
  40933d:	mov    al,0xfc
  40933f:	xchg   ebp,eax
  409340:	jno    0x409349
  409342:	push   cs
  409343:	adc    BYTE PTR [eax+ebp*1+0x4f3ef726],al
  40934a:	icebp  
  40934b:	pop    ss
  40934c:	push   eax
  40934d:	push   eax
  40934e:	outs   dx,DWORD PTR ds:[esi]
  40934f:	fdivr  QWORD PTR [esi-0x1097dbff]
  409355:	push   0x14
  409357:	jmp    0xc287:0x357f2592
  40935e:	push   edi
  40935f:	dec    ecx
  409360:	dec    edi
  409361:	sbb    DWORD PTR [edi-0x5],esi
  409364:	sub    edi,DWORD PTR [ecx-0x10]
  409367:	push   edx
  409368:	ss jo  0x4093c4
  40936b:	fld    TBYTE PTR [ecx+0x38231f6e]
  409371:	mov    cl,BYTE PTR [ebx-0x1e97bdb4]
  409377:	fs clc 
  409379:	(bad)  
  40937a:	pop    ebx
  40937b:	arpl   WORD PTR [eax+0xde08014],di
  409381:	fbld   TBYTE PTR [edx]
  409383:	(bad)  
  409384:	push   0x39a6529
  409389:	mov    ecx,0xdb4f5f0b
  40938e:	enter  0xbd72,0x1c
  409392:	jecxz  0x40933a
  409394:	cli    
  409395:	add    DWORD PTR [esi],esp
  409397:	test   eax,0x82e527dd
  40939c:	ins    BYTE PTR es:[edi],dx
  40939d:	sti    
  40939e:	pop    esp
  40939f:	xor    eax,edi
  4093a1:	mov    ecx,0xad768bfc
  4093a6:	lds    esp,FWORD PTR [eax-0x189cbcb9]
  4093ac:	ret    
  4093ad:	stos   DWORD PTR es:[edi],eax
  4093ae:	push   bp
  4093b0:	sub    bl,BYTE PTR [edx]
  4093b2:	mov    ch,0x50
  4093b4:	jnp    0x4093d6
  4093b6:	fcom   QWORD PTR [esp+esi*1-0x80]
  4093ba:	pop    eax
  4093bb:	mov    dh,0x1c
  4093bd:	in     al,dx
  4093be:	mov    al,0x1d
  4093c0:	dec    ebp
  4093c1:	ja     0x4093d5
  4093c3:	les    ebx,FWORD PTR [ebx+0x48c5f91f]
  4093c9:	loop   0x409432
  4093cb:	or     bh,0x85
  4093ce:	jp     0x4093c0
  4093d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d1:	inc    BYTE PTR [eax-0x22c3db1f]
  4093d7:	mov    ebx,0x78776456
  4093dc:	out    dx,al
  4093dd:	inc    edx
  4093de:	dec    ebx
  4093df:	xchg   ecx,eax
  4093e0:	jg     0x409399
  4093e2:	xor    BYTE PTR [edi+0x4e],cl
  4093e5:	fwait
  4093e6:	js     0x409392
  4093e8:	pushf  
  4093e9:	int    0x1d
  4093eb:	sub    al,0x80
  4093ed:	test   al,0xc6
  4093ef:	mov    edx,0x61f8bfb0
  4093f4:	push   0x6feec7b0
  4093f9:	mov    al,0x28
  4093fb:	inc    eax
  4093fc:	loope  0x4093b7
  4093fe:	push   0xf7d26a9
  409403:	out    dx,eax
  409404:	mov    ebx,0x8ed1c904
  409409:	inc    ecx
  40940a:	mov    BYTE PTR [ebp+0x404dce92],al
  409410:	mov    ds:0xb6b83cf8,eax
  409415:	fadd   QWORD PTR [eax+0x65b5f9f6]
  40941b:	jbe    0x4093d7
  40941d:	addr16 dec eax
  40941f:	mov    ?,WORD PTR [esi-0x80]
  409422:	and    al,0xe0
  409424:	inc    eax
  409425:	cmp    dl,dh
  409427:	mov    edx,0xc0013ced
  40942c:	sub    al,BYTE PTR ds:0xe4d9d391
  409432:	clc    
  409433:	xchg   esi,eax
  409434:	cs mov al,0x98
  409437:	add    eax,0x81c6f278
  40943c:	or     DWORD PTR [ebp+0x1b],edx
  40943f:	out    0xf5,eax
  409441:	call   0x166:0x19b6170f
  409448:	mov    ebp,0xddb609d9
  40944d:	add    eax,0x2afa716a
  409452:	into   
  409453:	sub    edi,0x64
  409456:	sub    esi,esi
  409458:	enter  0x3dcf,0x4c
  40945c:	out    0x18,eax
  40945e:	jb     0x409497
  409460:	sbb    DWORD PTR [edi+0x4ed7d1f7],eax
  409466:	clc    
  409467:	test   al,dl
  409469:	adc    al,0x54
  40946b:	loopne 0x409455
  40946d:	mov    eax,ds:0xe60657c1
  409472:	cmp    DWORD PTR [ebx+0x4a6fbf23],edx
  409478:	dec    esi
  409479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40947a:	adc    al,0xbd
  40947c:	pop    ds
  40947d:	mov    edi,eax
  40947f:	mov    edx,0xa3059b00
  409484:	test   BYTE PTR [ecx-0x476e97c4],bh
  40948a:	es sbb al,0x4c
  40948d:	ret    
  40948e:	inc    esp
  40948f:	mov    eax,ds:0x5efdf22
  409494:	arpl   WORD PTR [esp+eiz*2+0xa270486],di
  40949b:	les    esi,FWORD PTR [eax+0x15]
  40949e:	cmp    cl,BYTE PTR [ebx]
  4094a0:	(bad)  
  4094a1:	fld    TBYTE PTR [ebp+0x2d]
  4094a4:	jae    0x4094b3
  4094a6:	std    
  4094a7:	pop    ds
  4094a8:	not    BYTE PTR [ecx-0x70e231e8]
  4094ae:	into   
  4094af:	push   ds
  4094b0:	xlat   BYTE PTR ds:[ebx]
  4094b1:	retf   0xf151
  4094b4:	scas   eax,DWORD PTR es:[edi]
  4094b5:	and    DWORD PTR [edi-0x3f],esi
  4094b8:	leave  
  4094b9:	mov    DWORD PTR [ebx+0x629a5a91],edi
  4094bf:	jbe    0x409484
  4094c1:	xor    al,0xb6
  4094c3:	into   
  4094c4:	je     0x4094ec
  4094c6:	pop    esi
  4094c7:	pop    edx
  4094c8:	fnstenv [edi+ebx*2]
  4094cb:	clc    
  4094cc:	ret    
  4094cd:	pusha  
  4094ce:	iret   
  4094cf:	pop    ecx
  4094d0:	sbb    cl,al
  4094d2:	mov    ss,WORD PTR [eax]
  4094d4:	mov    ah,0x1d
  4094d6:	daa    
  4094d7:	xchg   DWORD PTR [edi-0x65796b89],edi
  4094dd:	jge    0x40951e
  4094df:	es in  eax,0x88
  4094e2:	fmul   DWORD PTR [ebx+eiz*4-0x55dd2f14]
  4094e9:	test   bh,bl
  4094eb:	dec    edx
  4094ec:	out    0x1d,al
  4094ee:	and    bl,BYTE PTR [ecx+0x28]
  4094f1:	js     0x4094ae
  4094f3:	daa    
  4094f4:	mov    ebp,0x74b8765b
  4094f9:	push   ds
  4094fa:	in     al,0x29
  4094fc:	jmp    0x10ff:0x64269116
  409503:	mov    eax,ds:0xab773e98
  409508:	dec    ecx
  409509:	nop
  40950a:	(bad)  
  40950b:	mov    ds,WORD PTR [ecx]
  40950d:	add    al,0xaf
  40950f:	int3   
  409510:	adc    ch,BYTE PTR [edx-0x39]
  409513:	aaa    
  409514:	xor    eax,0x2b8210a2
  409519:	jmp    DWORD PTR [ebp+eiz*4-0x6a51cba4]
  409520:	nop
  409521:	inc    esp
  409522:	adc    al,0x6f
  409524:	xchg   BYTE PTR [esi+0x3a],cl
  409527:	cvtpi2ps xmm1,mm2
  40952a:	xor    al,bl
  40952c:	xchg   edi,eax
  40952d:	scas   eax,DWORD PTR es:[edi]
  40952e:	cwde   
  40952f:	aad    0x46
  409531:	mov    esi,0x3cf656e8
  409536:	sar    BYTE PTR [esi+0x58],cl
  409539:	les    ecx,FWORD PTR [edi]
  40953b:	int3   
  40953c:	outs   dx,DWORD PTR ds:[esi]
  40953d:	push   ecx
  40953e:	jp     0x409538
  409540:	test   DWORD PTR [edx+edi*4-0x1fd5ceef],0x56bd54de
  40954b:	retf   0x261b
  40954e:	mov    bh,ch
  409550:	fcom   QWORD PTR [ecx]
  409552:	(bad)  
  409553:	and    BYTE PTR [edx],ah
  409555:	mov    dh,BYTE PTR [edi-0x3e5ab5cf]
  40955b:	call   0xd6e9d95c
  409560:	test   al,0xdb
  409562:	test   BYTE PTR [edx+eiz*1+0x67],cl
  409566:	in     eax,0x8a
  409568:	add    eax,DWORD PTR [ecx-0x8]
  40956b:	dec    ecx
  40956c:	add    DWORD PTR [ebp-0x346f1931],ebx
  409572:	shl    DWORD PTR [eax+edx*8+0x5f],cl
  409576:	bound  esi,QWORD PTR [ebp+edx*8-0x4dc6ab01]
  40957d:	xchg   edx,eax
  40957e:	imul   ebp,DWORD PTR [ecx-0x2f],0x85e8ebb2
  409585:	or     eax,0x17d43816
  40958a:	shl    esp,cl
  40958c:	mov    ebx,0x855d260c
  409591:	(bad)  
  409592:	jl     0x40958f
  409594:	mov    ch,0x23
  409596:	push   eax
  409597:	fs mov ecx,0xda23947
  40959d:	jge    0x409601
  40959f:	in     al,0x3b
  4095a1:	cmp    ch,BYTE PTR [edi+0x6c]
  4095a4:	int    0x8f
  4095a6:	jmp    0xc2929105
  4095ab:	mov    eax,ds:0xd6921d7d
  4095b0:	push   ds
  4095b1:	jge    0x40955b
  4095b3:	pop    eax
  4095b4:	mov    dl,0x45
  4095b6:	lea    esp,[ebp+0x11]
  4095b9:	or     DWORD PTR [eax-0x14d4eedc],ecx
  4095bf:	adc    ah,ah
  4095c1:	inc    ebp
  4095c2:	mov    ebx,0x76444fa9
  4095c7:	adc    ebp,DWORD PTR [esp+eiz*4]
  4095ca:	fdiv   st(7),st
  4095cc:	pop    ss
  4095cd:	cwde   
  4095ce:	push   0xfffffff3
  4095d0:	call   0x9d4c:0x7b7018a9
  4095d7:	loopne 0x409654
  4095d9:	in     eax,dx
  4095da:	sub    al,0xee
  4095dc:	aad    0x33
  4095de:	(bad)  
  4095df:	xor    DWORD PTR [ebx+esi*2],ecx
  4095e2:	lods   eax,DWORD PTR ds:[esi]
  4095e3:	ficom  DWORD PTR [edx-0x31]
  4095e6:	ins    BYTE PTR es:[edi],dx
  4095e7:	fwait
  4095e8:	cs pushf 
  4095ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095eb:	cmp    al,0x79
  4095ed:	mov    al,0x85
  4095ef:	test   al,0x57
  4095f1:	jne    0x409636
  4095f3:	jmp    0x7da:0xe22cfc68
  4095fa:	fucomi st,st(1)
  4095fc:	fld    st(7)
  4095fe:	outs   dx,DWORD PTR ds:[esi]
  4095ff:	outs   dx,BYTE PTR ds:[esi]
  409600:	imul   ebp,DWORD PTR [ebp+0x7e],0xffffffb3
  409604:	inc    esp
  409605:	sub    bl,BYTE PTR [ecx-0x69]
  409608:	dec    esi
  409609:	test   al,0xb4
  40960b:	outs   dx,BYTE PTR ds:[esi]
  40960c:	sub    BYTE PTR [edx-0x30276754],bl
  409612:	je     0x4095c4
  409614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409615:	and    bl,BYTE PTR [esi+0x136cfaeb]
  40961b:	in     eax,dx
  40961c:	fist   DWORD PTR [ebx+0x1b534161]
  409622:	inc    edi
  409623:	push   ecx
  409624:	pandn  mm7,mm4
  409627:	inc    ecx
  409628:	test   eax,0x11894247
  40962d:	popf   
  40962e:	jbe    0x4095b6
  409630:	jno    0x40968f
  409632:	dec    edx
  409633:	jne    0x4095ee
  409635:	xchg   edx,eax
  409636:	pop    eax
  409637:	outs   dx,DWORD PTR ds:[esi]
  409638:	push   0x25
  40963a:	(bad)  
  40963b:	push   ebx
  40963c:	add    BYTE PTR [ebx-0xd],bl
  40963f:	int    0x7e
  409641:	pop    esi
  409642:	fs iret 
  409644:	sbb    BYTE PTR ds:0x68a08b17,dl
  40964a:	retf   
  40964b:	sahf   
  40964c:	mov    eax,ds:0xa32e396a
  409651:	adc    ecx,ebp
  409653:	retf   
  409654:	outs   dx,BYTE PTR ds:[esi]
  409655:	xchg   ecx,eax
  409656:	pop    ebx
  409657:	add    eax,0xe97e9986
  40965c:	mov    ah,0x88
  40965e:	loop   0x4096dd
  409660:	jmp    0xaaf614a2
  409665:	test   BYTE PTR [ecx+0x201ba0bc],ch
  40966b:	rcr    BYTE PTR [ebp+0x46],1
  40966e:	shr    DWORD PTR [ecx],1
  409670:	jae    0x40964a
  409672:	inc    ebx
  409673:	sar    DWORD PTR fs:[ebp+0x6b2c3fc9],cl
  40967a:	push   0x2c510678
  40967f:	pop    edi
  409680:	rcr    BYTE PTR [ebp+0x716b8afb],1
  409686:	fiadd  WORD PTR [edx+0x41045cd0]
  40968c:	add    al,ah
  40968e:	popf   
  40968f:	shr    edx,cl
  409691:	push   ebx
  409692:	add    al,0xe4
  409694:	imul   esp,DWORD PTR [edi],0x5045b869
  40969a:	iretw  
  40969c:	shr    DWORD PTR [ecx],cl
  40969e:	cdq    
  40969f:	cmc    
  4096a0:	push   edx
  4096a1:	sub    BYTE PTR es:[esi+0xede4978],bl
  4096a8:	xchg   al,dh
  4096aa:	(bad)  
  4096ab:	lods   al,BYTE PTR ds:[esi]
  4096ac:	lock cmp eax,0xe581e941
  4096b2:	mov    ds:0x51f5ed0c,al
  4096b7:	jmp    0xf5ed2188
  4096bc:	cmp    eax,0xdef72595
  4096c1:	sub    eax,0x52cd9705
  4096c6:	popa   
  4096c7:	fistp  WORD PTR [edx]
  4096c9:	jmp    0x2e20885e
  4096ce:	push   ebp
  4096cf:	lock ret 
  4096d1:	int3   
  4096d2:	dec    ecx
  4096d3:	xchg   ebp,ebx
  4096d5:	fist   DWORD PTR [edi+0x270565cb]
  4096db:	sbb    al,0x3b
  4096dd:	and    ecx,esp
  4096df:	push   esp
  4096e0:	mov    ecx,0x998786bf
  4096e5:	popf   
  4096e6:	imul   edx,esi,0x1c
  4096e9:	sahf   
  4096ea:	mov    edi,0xc095d420
  4096ef:	fdivrp st(7),st
  4096f1:	pop    ds
  4096f2:	add    esp,DWORD PTR [eax-0x735b88d6]
  4096f8:	imul   eax,DWORD PTR [esi+0x330c5d57],0x95433295
  409702:	jmp    0xf70a6fe9
  409707:	mov    eax,ss
  409709:	sub    ebx,DWORD PTR [eax]
  40970b:	jae    0x40969e
  40970d:	out    0xed,al
  40970f:	jp     0x409781
  409711:	aad    0x5e
  409713:	lea    edx,ds:0x9389a842
  409719:	fmul   DWORD PTR [esi-0x2fe0afc0]
  40971f:	clc    
  409720:	sub    DWORD PTR [ebx],ebx
  409722:	push   esp
  409723:	xlat   BYTE PTR ds:[ebx]
  409724:	mov    dl,0xba
  409726:	in     eax,dx
  409727:	and    esp,DWORD PTR [edx-0x78]
  40972a:	mov    ebx,DWORD PTR [ecx+0x32]
  40972d:	xlat   BYTE PTR ds:[ebx]
  40972e:	mov    ebx,DWORD PTR ds:0xa37d9405
  409734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409735:	xor    ch,BYTE PTR [ebx+0x51c10e14]
  40973b:	ja     0x4096df
  40973d:	push   0xf9a3ab5c
  409742:	fwait
  409743:	xchg   ebp,eax
  409744:	loopne 0x4096ea
  409746:	jno    0x4097ae
  409748:	lods   eax,DWORD PTR ds:[esi]
  409749:	mov    cl,0x4d
  40974b:	push   0x60
  40974d:	or     cl,bl
  40974f:	push   0x4ad46344
  409754:	popf   
  409755:	push   edi
  409756:	dec    edi
  409757:	stos   BYTE PTR es:[edi],al
  409758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409759:	cwde   
  40975a:	inc    edi
  40975b:	call   0xecd3ca90
  409760:	mov    bl,BYTE PTR [eax]
  409762:	or     al,0xe7
  409764:	sti    
  409765:	neg    esp
  409767:	pop    ds
  409768:	push   0x905ddb6e
  40976d:	fdivr  st,st(0)
  40976f:	imul   eax,DWORD PTR ds:0x12c9dade,0xf9072d57
  409779:	test   BYTE PTR [ebp-0x1073aa8c],ch
  40977f:	out    dx,al
  409780:	sbb    DWORD PTR [edi-0x3a86237a],ebp
  409786:	(bad)  
  409787:	ja     0x409737
  409789:	mov    bl,0xbc
  40978b:	fldenv [ecx-0x1b1c838]
  409791:	popa   
  409792:	js     0x40980b
  409794:	jmp    0x86509290
  409799:	add    cl,BYTE PTR [ecx+0xe]
  40979c:	jmp    0xcc2b:0x105ab2a8
  4097a3:	sbb    DWORD PTR [eax+0x23],esp
  4097a6:	mov    bh,0xeb
  4097a8:	jl     0x409765
  4097aa:	xchg   BYTE PTR [edi+ebx*1],ch
  4097ad:	jbe    0x409816
  4097af:	xchg   edx,eax
  4097b0:	ret    
  4097b1:	jmp    0xe4cc8fbc
  4097b6:	aam    0xda
  4097b8:	shr    BYTE PTR [ecx],0xb8
  4097bb:	bound  eax,QWORD PTR [esi]
  4097bd:	xchg   edi,eax
  4097be:	in     al,0x5b
  4097c0:	(bad)  
  4097c1:	jo     0x409807
  4097c3:	inc    ebp
  4097c4:	cmp    al,0xb6
  4097c6:	test   al,0x20
  4097c8:	pop    edi
  4097c9:	adc    DWORD PTR [esi+0x12],ecx
  4097cc:	dec    esi
  4097cd:	repnz xlat BYTE PTR ds:[ebx]
  4097cf:	add    bh,0x1a
  4097d2:	sbb    DWORD PTR [ecx],ebp
  4097d4:	xchg   cl,cl
  4097d6:	out    0x42,eax
  4097d8:	xor    eax,0x918da073
  4097dd:	mov    ah,0xa8
  4097df:	mov    ch,0xd7
  4097e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e2:	jp     0x409770
  4097e4:	mov    ch,0x1a
  4097e6:	pusha  
  4097e7:	adc    DWORD PTR ds:[ecx-0x39],0x4b9a4c02
  4097ef:	push   esi
  4097f0:	pop    ebx
  4097f1:	sbb    al,0xac
  4097f3:	jbe    0x4097d3
  4097f5:	sti    
  4097f6:	cmp    DWORD PTR [edx+0x79621e48],ecx
  4097fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097fd:	mov    DWORD PTR [ebp+0x3bc8b004],ecx
  409803:	in     eax,0x79
  409805:	push   0xfffffff2
  409807:	test   DWORD PTR [eax],esi
  409809:	repnz imul edx,DWORD PTR [eax],0xffffffbc
  40980d:	xor    al,0xdf
  40980f:	neg    BYTE PTR ds:0x56632437
  409815:	pop    eax
  409816:	jg     0x40986b
  409818:	mov    eax,0xf308d010
  40981d:	out    dx,al
  40981e:	xor    al,0xbd
  409820:	test   DWORD PTR [edx],edx
  409822:	push   ebx
  409823:	or     DWORD PTR [eax+0x44],edx
  409826:	aaa    
  409827:	xlat   BYTE PTR ds:[ebx]
  409828:	xchg   ebp,eax
  409829:	aad    0x86
  40982b:	sub    al,0xb8
  40982d:	mov    edi,0x8e2da126
  409832:	outs   dx,BYTE PTR ds:[esi]
  409833:	jbe    0x4097be
  409835:	out    dx,al
  409836:	bound  eax,QWORD PTR [eax+0x37]
  409839:	or     ah,BYTE PTR [esi-0x21]
  40983c:	push   ecx
  40983d:	dec    eax
  40983e:	mov    esi,0x3b168575
  409843:	loopne 0x4097ce
  409845:	xchg   esp,ebp
  409847:	jmp    0x34b3f60a
  40984c:	push   eax
  40984d:	or     eax,0x454cf6ab
  409852:	(bad)  
  409853:	in     eax,0x70
  409855:	dec    ecx
  409856:	loopne 0x4098ac
  409858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409859:	jecxz  0x40981d
  40985b:	add    ebx,DWORD PTR [ebx]
  40985d:	push   esi
  40985e:	xor    edi,DWORD PTR [ecx+0x2]
  409861:	aam    0xaa
  409863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409864:	jle    0x4098a0
  409866:	test   DWORD PTR [edx+0x17085ed9],edx
  40986c:	inc    esp
  40986d:	fdivr  QWORD PTR [ecx]
  40986f:	add    DWORD PTR [edx+0x43],ebp
  409872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409873:	xor    DWORD PTR ds:0x382803d9,0x8
  40987a:	fnsave [edx]
  40987c:	mov    ecx,DWORD PTR [esi-0x7e]
  40987f:	in     al,dx
  409880:	pushf  
  409881:	sbb    ebx,DWORD PTR [ebp+0x11]
  409884:	lods   eax,DWORD PTR ds:[esi]
  409885:	mov    al,ds:0x89709907
  40988a:	cs mov dh,0x37
  40988d:	cmp    al,0x18
  40988f:	cdq    
  409890:	pop    es
  409891:	lods   eax,DWORD PTR ds:[esi]
  409892:	adc    DWORD PTR [ebx-0x78677ac7],edi
  409898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409899:	mov    ebx,0x456a2290
  40989e:	xor    al,0xe4
  4098a0:	add    esp,DWORD PTR [ecx-0x23663411]
  4098a6:	mov    ecx,0x96131653
  4098ab:	xor    eax,0xe5fa979e
  4098b0:	xor    al,0xa6
  4098b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b4:	repnz push edi
  4098b6:	adc    cl,BYTE PTR ds:0x3d26611f
  4098bc:	fucom  st(6)
  4098be:	dec    DWORD PTR [edi]
  4098c0:	pop    ebp
  4098c1:	sbb    DWORD PTR [ebx+0x41cb246],0x5308ca09
  4098cb:	je     0x409930
  4098cd:	outs   dx,DWORD PTR ds:[esi]
  4098ce:	fidivr WORD PTR [esi+0x41]
  4098d1:	dec    esi
  4098d2:	add    edi,eax
  4098d4:	in     eax,0x21
  4098d6:	outs   dx,DWORD PTR ds:[esi]
  4098d7:	fmul   st,st(3)
  4098d9:	lea    edx,[edi-0x1b19e9cb]
  4098df:	push   esi
  4098e0:	add    BYTE PTR [edi+ebp*8],0xcd
  4098e4:	push   0xcdbf1d0
  4098e9:	inc    ebp
  4098ea:	test   DWORD PTR [esi-0x7e2aef93],0xcf9a3ed6
  4098f4:	popf   
  4098f5:	jge    0x409895
  4098f7:	add    BYTE PTR [eax-0x389a2840],ch
  4098fd:	into   
  4098fe:	call   0xfe7a0ebd
  409903:	xchg   edx,eax
  409904:	add    BYTE PTR [edi+0x29],al
  409907:	stc    
  409908:	mov    esp,0x4308a895
  40990d:	xchg   ecx,eax
  40990e:	out    dx,al
  40990f:	mul    DWORD PTR [ecx]
  409911:	sbb    eax,0xd247faa3
  409916:	add    al,0xc1
  409918:	sbb    ah,0x48
  40991b:	inc    ecx
  40991c:	outs   dx,DWORD PTR ds:[esi]
  40991d:	mov    ds:0xd576c6a9,al
  409922:	push   ebx
  409923:	xor    dh,bh
  409925:	lock fs ins BYTE PTR es:[edi],dx
  409928:	adc    eax,DWORD PTR [edi]
  40992a:	xchg   DWORD PTR ds:0x17b54bc0,esp
  409930:	pop    ss
  409931:	mov    ah,0x4b
  409933:	cld    
  409934:	mov    ebx,0x51e44d37
  409939:	cld    
  40993a:	retf   0x103b
  40993d:	sbb    ebp,DWORD PTR [edx+0x48]
  409940:	inc    edi
  409941:	(bad)  
  409942:	ja     0x4098dc
  409944:	ds add eax,0xb07abbf8
  40994a:	inc    ebx
  40994b:	jge    0x409928
  40994d:	sub    al,0x83
  40994f:	sbb    BYTE PTR [ecx+0x333a0319],ah
  409955:	fnstsw WORD PTR [esi]
  409957:	fnstenv [eax-0x8]
  40995a:	sub    eax,0xae313a6c
  40995f:	jmp    0x92f7:0x4f0abf6c
  409966:	lea    esp,[esi-0x59]
  409969:	fist   DWORD PTR [edx-0x45]
  40996c:	ret    0x9212
  40996f:	(bad)  
  409970:	outs   dx,BYTE PTR ds:[esi]
  409971:	xor    ecx,DWORD PTR ds:0x45bb
  409976:	pop    eax
  409977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409978:	rcr    DWORD PTR [edi+0xb2ad2ea],1
  40997e:	loopne 0x40992d
  409980:	mov    esp,0xeb0ad644
  409985:	dec    esp
  409986:	mov    dh,0xf0
  409988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409989:	and    ah,BYTE PTR [esi-0x19]
  40998c:	imul   edx,DWORD PTR [ebp-0x25],0x7da5678
  409993:	out    dx,eax
  409994:	sbb    ecx,DWORD PTR es:[edi-0x1d924861]
  40999b:	push   ebx
  40999c:	cmp    eax,0x98e7208f
  4099a1:	or     DWORD PTR [eax-0xe7e78c1],edi
  4099a7:	arpl   WORD PTR [ebx+0x75efaa1f],cx
  4099ad:	and    cl,dh
  4099af:	fist   DWORD PTR [eax-0x4342c775]
  4099b5:	pop    ebp
  4099b6:	sub    cl,BYTE PTR [eax+0x21]
  4099b9:	sbb    cl,0xec
  4099bc:	sub    BYTE PTR [eax+0x21],ch
  4099bf:	add    bl,BYTE PTR [ebx+0x4a37e002]
  4099c5:	(bad)  
  4099c6:	fistp  QWORD PTR [eax+0x7cab1dbc]
  4099cc:	xor    BYTE PTR [eax],bh
  4099ce:	mov    ch,0x6a
  4099d0:	push   ebx
  4099d1:	jle    0x409a47
  4099d3:	std    
  4099d4:	inc    edx
  4099d5:	push   0x36
  4099d7:	push   esp
  4099d8:	dec    esp
  4099d9:	test   DWORD PTR [edi+0x75],esi
  4099dc:	xor    eax,0xa53f1c15
  4099e1:	mov    ds:0x3cbc1a7a,al
  4099e6:	add    BYTE PTR [edx],dh
  4099e8:	(bad)  
  4099e9:	in     eax,dx
  4099ea:	adc    dl,al
  4099ec:	mov    BYTE PTR [ecx],0xea
  4099ef:	xchg   edi,eax
  4099f0:	loop   0x4099ab
  4099f2:	mov    bh,0x6f
  4099f4:	ret    0x5854
  4099f7:	sahf   
  4099f8:	jp     0x409a39
  4099fa:	int    0x12
  4099fc:	dec    ecx
  4099fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099fe:	ins    DWORD PTR es:[edi],dx
  4099ff:	cmp    ah,BYTE PTR [ebx]
  409a01:	xchg   BYTE PTR [ebp+0x19],dl
  409a04:	xlat   BYTE PTR ds:[ebx]
  409a05:	(bad)  [ebx-0x3c]
  409a08:	cmp    eax,0xbaa39048
  409a0d:	stos   DWORD PTR es:[edi],eax
  409a0e:	sub    DWORD PTR [ebx+0x5a],edx
  409a11:	leave  
  409a12:	mov    ds:0xace847e,eax
  409a17:	add    DWORD PTR [edx+ecx*4+0x27f7a49c],0xffffffe0
  409a1f:	fstp   TBYTE PTR [ecx]
  409a21:	call   0x74e0:0x9b77cc8
  409a28:	cmp    dl,BYTE PTR [esp+edx*1]
  409a2b:	test   DWORD PTR [esi+ecx*2+0x5410552b],eax
  409a32:	fldcw  WORD PTR [ebx-0x4165fe2c]
  409a38:	jg     0x409a3a
  409a3a:	xchg   BYTE PTR [eax-0x1532a316],bh
  409a40:	inc    esp
  409a41:	lods   eax,DWORD PTR ds:[esi]
  409a42:	pop    ecx
  409a43:	outs   dx,DWORD PTR ds:[esi]
  409a44:	sub    BYTE PTR [esi-0x47],al
  409a47:	out    dx,eax
  409a48:	das    
  409a49:	loope  0x409a36
  409a4b:	push   0xc63f247
  409a50:	adc    bl,ch
  409a52:	(bad)
  409a56:	mov    ch,0x1f
  409a58:	nop
  409a59:	adc    dl,BYTE PTR [edx-0x4758d2b]
  409a5f:	popf   
  409a60:	out    dx,eax
  409a61:	fmul   QWORD PTR ds:0x88177976
  409a67:	stos   BYTE PTR es:[di],al
  409a69:	out    dx,eax
  409a6a:	mov    al,0xb4
  409a6c:	xor    BYTE PTR [edi+eax*1],ah
  409a6f:	outs   dx,BYTE PTR ds:[esi]
  409a70:	cmp    bh,bl
  409a72:	js     0x409abf
  409a74:	mov    ebp,0x58f224ad
  409a79:	(bad)  
  409a7a:	das    
  409a7b:	xchg   esp,eax
  409a7c:	popf   
  409a7d:	ss adc eax,0x441363d8
  409a83:	xor    BYTE PTR [eax],cl
  409a85:	push   es
  409a86:	cmp    dh,BYTE PTR [eax+ecx*1-0x73]
  409a8a:	retf   0x3535
  409a8d:	(bad)  
  409a8f:	pop    ebx
  409a90:	(bad)  
  409a91:	leave  
  409a92:	les    eax,FWORD PTR ds:0x32682689
  409a98:	mov    esi,0x89d15dec
  409a9d:	adc    ecx,DWORD PTR [edx]
  409a9f:	sar    DWORD PTR [edi],cl
  409aa1:	push   ds
  409aa2:	sbb    bh,BYTE PTR [ebx]
  409aa4:	xor    BYTE PTR [esi],cl
  409aa6:	jmp    0x409ae5
  409aa8:	sbb    esi,DWORD PTR [edx-0x4ad1afe3]
  409aae:	sub    al,0x1c
  409ab0:	mov    al,0xec
  409ab2:	in     eax,dx
  409ab3:	pop    ebp
  409ab4:	push   0x3
  409ab6:	loopne 0x409aa4
  409ab8:	xchg   ecx,eax
  409ab9:	adc    dh,BYTE PTR [ecx+eax*2-0x57750773]
  409ac0:	sbb    BYTE PTR [ecx+0x3d],0xba
  409ac4:	adc    DWORD PTR [esi-0x50917ecd],esp
  409aca:	mov    ebp,0xe84e9e61
  409acf:	jg     0x409b1f
  409ad1:	shr    DWORD PTR [ebx+0x1d],0x1a
  409ad5:	sbb    DWORD PTR [ecx+ebp*1],0xffffff97
  409ad9:	jne    0x409a5f
  409adb:	sbb    ah,0x38
  409ade:	hlt    
  409adf:	mov    cl,0x67
  409ae1:	push   ss
  409ae2:	or     DWORD PTR [edx-0x72],edi
  409ae5:	mov    ecx,edx
  409ae7:	push   esp
  409ae8:	jl     0x409aff
  409aea:	xor    ebx,DWORD PTR [eax]
  409aec:	ret    
  409aed:	xor    DWORD PTR [ecx+0x27f823b5],esi
  409af3:	retf   0xc6e4
  409af6:	shr    BYTE PTR [esi-0x498cef0b],cl
  409afc:	repnz cdq 
  409afe:	rcl    cl,cl
  409b00:	adc    BYTE PTR [ebx+0x353f906],cl
  409b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b08:	push   ebx
  409b09:	and    bh,BYTE PTR [eax-0x581c4ccc]
  409b0f:	fistp  WORD PTR [eax+esi*4-0xb]
  409b13:	add    ch,BYTE PTR [esi+ebp*2-0x3bdcacbd]
  409b1a:	repnz pop edi
  409b1c:	mov    gs,WORD PTR [ebx-0x2dbbe47b]
  409b22:	jle    0x409b7a
  409b24:	les    eax,FWORD PTR [edx-0x43]
  409b27:	loopne 0x409ae9
  409b29:	(bad)  
  409b2a:	mov    eax,0xc77113c3
  409b2f:	std    
  409b30:	adc    bh,BYTE PTR [ebp-0x55]
  409b33:	lods   eax,DWORD PTR ds:[esi]
  409b34:	jge    0x409b9e
  409b36:	ficomp DWORD PTR [ebp-0x3558b8e3]
  409b3c:	and    esi,ecx
  409b3e:	sbb    dl,dh
  409b40:	in     al,dx
  409b41:	retf   0x6650
  409b44:	add    BYTE PTR [ebx],0xa0
  409b47:	stos   BYTE PTR es:[edi],al
  409b48:	shl    DWORD PTR [esi],0x2d
  409b4b:	out    dx,al
  409b4c:	cdq    
  409b4d:	shl    BYTE PTR [edx+0x70],1
  409b50:	ret    0x2068
  409b53:	fldenv [edi]
  409b55:	shr    BYTE PTR [ecx+ebx*4+0x272d342e],cl
  409b5c:	scas   al,BYTE PTR es:[edi]
  409b5d:	(bad)  [ebp-0x6f215765]
  409b63:	xor    BYTE PTR [ecx-0x50],al
  409b66:	push   ds
  409b67:	js     0x409b16
  409b69:	fdivrp st(0),st
  409b6b:	call   0xf92:0x42ac4c54
  409b72:	popa   
  409b73:	cli    
  409b74:	ficomp DWORD PTR [edi]
  409b76:	jb     0x409bba
  409b78:	enter  0x8b60,0xc0
  409b7c:	cwde   
  409b7d:	push   ds
  409b7e:	add    eax,0x63a0517a
  409b83:	nop
  409b84:	aad    0x48
  409b86:	cmp    DWORD PTR [eax+0x7f],eax
  409b89:	jb     0x409bfb
  409b8b:	mov    bl,0x42
  409b8d:	fist   DWORD PTR [esi]
  409b8f:	loopne 0x409b1b
  409b91:	mov    ah,0xfa
  409b93:	data16 xlat BYTE PTR ds:[ebx]
  409b95:	jb     0x409c14
  409b97:	outs   dx,BYTE PTR ds:[esi]
  409b98:	dec    ebp
  409b99:	lds    ebp,FWORD PTR [edx-0x35]
  409b9c:	or     BYTE PTR [eax],cl
  409b9e:	ret    0x3f80
  409ba1:	jo     0x409b94
  409ba3:	call   0x8c1478ec
  409ba8:	fisttp WORD PTR [esi-0x6f35b55a]
  409bae:	adc    eax,0xbc5ae1b8
  409bb3:	xchg   DWORD PTR [esi],edx
  409bb5:	push   edi
  409bb6:	jl     0x409c30
  409bb8:	stc    
  409bb9:	jnp    0x409c01
  409bbb:	fcom   DWORD PTR es:[ebx+0x40]
  409bbf:	popf   
  409bc0:	dec    esp
  409bc1:	addr16 mov ebx,0xb44b5814
  409bc7:	mov    dh,al
  409bc9:	fistp  QWORD PTR [ecx+esi*8-0x5a]
  409bcd:	call   0x38a8:0xc78b7b13
  409bd4:	or     eax,0x6965980f
  409bd9:	dec    ecx
  409bda:	push   esp
  409bdb:	les    esi,FWORD PTR [edx]
  409bdd:	(bad)  
  409bde:	inc    DWORD PTR [ebp+0x2f]
  409be1:	add    ch,BYTE PTR [ecx-0x318aa446]
  409be7:	iretw  
  409be9:	into   
  409bea:	xor    ch,ch
  409bec:	add    al,BYTE PTR [ecx+0x7d0802fa]
  409bf2:	xor    BYTE PTR [ecx],ch
  409bf4:	dec    ebx
  409bf5:	or     al,BYTE PTR [ebx+0x39b3fdc2]
  409bfb:	dec    edi
  409bfc:	push   edx
  409bfd:	sbb    eax,0x189f7199
  409c02:	mov    al,ds:0xa44b6838
  409c07:	clc    
  409c08:	imul   eax,DWORD PTR [esi+0x524a8812],0xffffffa5
  409c0f:	and    BYTE PTR [edx+eax*4-0x9],dl
  409c13:	lds    ebx,FWORD PTR [edx]
  409c15:	push   esp
  409c16:	sbb    al,0x8e
  409c18:	sbb    DWORD PTR [ecx+0x312702b],esp
  409c1e:	es retf 
  409c20:	iret   
  409c21:	mov    ah,0xf
  409c23:	sub    DWORD PTR [ebp+eiz*4-0x2e],0x16d4d2f4
  409c2b:	xchg   esi,eax
  409c2c:	adc    bl,dh
  409c2e:	cmp    DWORD PTR [ebx-0x3262e04b],eax
  409c34:	or     DWORD PTR [eax],esp
  409c36:	sub    BYTE PTR [esp+eiz*8-0x33b0220f],ch
  409c3d:	cmc    
  409c3e:	mov    ah,0x82
  409c40:	or     BYTE PTR [esi+eax*1+0x2b],bh
  409c44:	adc    ch,BYTE PTR [edi+edx*2+0x5c]
  409c48:	pop    esi
  409c49:	cld    
  409c4a:	fisub  WORD PTR [esi]
  409c4c:	mov    eax,0x73644cdf
  409c51:	lods   eax,DWORD PTR ds:[esi]
  409c52:	or     esi,DWORD PTR [edi+0x5f]
  409c55:	fcmovnbe st,st(3)
  409c57:	mov    eax,ds:0x75a26ba1
  409c5c:	retf   0x6a36
  409c5f:	push   ss
  409c60:	mov    al,0xc3
  409c62:	mov    WORD PTR [eax-0x7fdd72eb],?
  409c68:	test   DWORD PTR [eax],ebp
  409c6a:	nop
  409c6b:	push   esp
  409c6c:	not    BYTE PTR [edi]
  409c6e:	jb     0x409ce4
  409c70:	cmp    al,0xd2
  409c72:	ds dec ebx
  409c74:	pop    ds
  409c75:	test   DWORD PTR [ebp+0x7f],0x8d644c36
  409c7c:	mov    dl,0x8d
  409c7e:	pop    ds
  409c7f:	out    0x74,eax
  409c81:	push   ds
  409c82:	push   ebp
  409c83:	fnstcw WORD PTR [eax-0x61a20dfd]
  409c89:	cli    
  409c8a:	jmp    0x14b9:0xc2cca76a
  409c91:	popa   
  409c92:	aam    0xb8
  409c94:	and    ch,BYTE PTR [edi]
  409c96:	lea    ebp,[edx-0x37f34484]
  409c9c:	fld    QWORD PTR [edx]
  409c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c9f:	test   BYTE PTR [ecx-0x2419bbdc],cl
  409ca5:	or     esp,ebp
  409ca7:	and    edi,esi
  409ca9:	jp     0x409caa
  409cab:	jbe    0x409d23
  409cad:	hlt    
  409cae:	and    eax,0x3120f461
  409cb3:	mov    cl,0xe
  409cb5:	adc    al,bh
  409cb7:	mov    dh,0x69
  409cb9:	repz sub esp,DWORD PTR [ebp+ecx*4-0x744ff3a9]
  409cc1:	jbe    0x409ca2
  409cc3:	fs pop ecx
  409cc5:	dec    eax
  409cc6:	mov    al,0x44
  409cc8:	retf   0xbab
  409ccb:	mov    BYTE PTR [ebx],dl
  409ccd:	inc    esp
  409cce:	pop    edx
  409ccf:	jo     0x409d34
  409cd1:	adc    edi,ebx
  409cd3:	ret    0x9f9e
  409cd6:	adc    DWORD PTR [edx-0x33],esi
  409cd9:	into   
  409cda:	sti    
  409cdb:	arpl   WORD PTR [edx-0x69],di
  409cde:	adc    DWORD PTR [ecx+0x587e23b4],0x98cdaccb
  409ce8:	pushf  
  409ce9:	mov    ch,0xe0
  409ceb:	mov    cl,0x69
  409ced:	adc    BYTE PTR [eax],dh
  409cef:	int    0x2b
  409cf1:	stos   DWORD PTR es:[edi],eax
  409cf2:	push   ebx
  409cf3:	adc    al,0xb7
  409cf5:	aam    0x9b
  409cf7:	sbb    eax,0xd1a3ea71
  409cfc:	pop    eax
  409cfd:	mov    eax,ds:0x8e3f469e
  409d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d03:	icebp  
  409d04:	sahf   
  409d05:	out    dx,eax
  409d06:	push   ds
  409d07:	fcomip st,st(4)
  409d09:	pop    ebp
  409d0a:	outs   dx,BYTE PTR ds:[esi]
  409d0b:	leave  
  409d0c:	or     al,BYTE PTR [ecx-0x85b2d48]
  409d12:	mov    dl,0xef
  409d14:	add    eax,0x163e410d
  409d19:	gs aam 0x1a
  409d1c:	add    dh,ah
  409d1e:	xchg   ecx,eax
  409d1f:	sbb    BYTE PTR [ecx],dh
  409d21:	jmp    FWORD PTR [ebx-0x7e]
  409d24:	out    0x67,eax
  409d26:	or     DWORD PTR [ecx-0x42b0e9d4],0xffffffdd
  409d2d:	push   eax
  409d2e:	in     al,0xd1
  409d30:	jmp    0x409da8
  409d32:	jp     0x409d02
  409d34:	loop   0x409cf1
  409d36:	cli    
  409d37:	jae    0x409d15
  409d39:	xor    bh,0x42
  409d3c:	ins    DWORD PTR es:[edi],dx
  409d3d:	cmp    ecx,ebp
  409d3f:	js     0x409d7c
  409d41:	outs   dx,DWORD PTR ds:[esi]
  409d42:	xor    al,BYTE PTR [edx-0x2f5581b2]
  409d48:	push   eax
  409d49:	mov    ?,WORD PTR cs:[ebp-0x6aaf7c33]
  409d50:	xor    DWORD PTR [edx],0x3f05c9a6
  409d56:	jg     0x409d39
  409d58:	jg     0x409cdc
  409d5a:	adc    eax,0x4f42c5de
  409d5f:	lods   eax,DWORD PTR ds:[esi]
  409d60:	fucom  st(2)
  409d62:	pop    es
  409d63:	mov    ecx,0x78b14f0b
  409d68:	jbe    0x409d60
  409d6a:	cmp    ah,al
  409d6c:	popa   
  409d6d:	pop    esp
  409d6e:	adc    al,0xfc
  409d70:	mov    cl,0x5a
  409d72:	mov    dh,0x18
  409d74:	add    ah,BYTE PTR [edi]
  409d76:	sub    eax,0x59466069
  409d7b:	shl    BYTE PTR [esi],1
  409d7d:	adc    al,0xf0
  409d7f:	mov    dh,0x56
  409d81:	push   ss
  409d82:	(bad)  [esi-0xb]
  409d85:	stos   DWORD PTR es:[edi],eax
  409d86:	sbb    esp,ebx
  409d88:	jecxz  0x409dbe
  409d8a:	stos   BYTE PTR es:[edi],al
  409d8b:	(bad)  
  409d8c:	ret    
  409d8d:	(bad)  
  409d8e:	neg    ebx
  409d90:	shl    DWORD PTR [edi-0x1b],0xda
  409d94:	cli    
  409d95:	scas   eax,DWORD PTR es:[edi]
  409d96:	pop    edi
  409d97:	les    ecx,FWORD PTR [edx]
  409d99:	fsubr  QWORD PTR [edi]
  409d9b:	and    DWORD PTR [eax],esp
  409d9d:	cmp    al,0xe1
  409d9f:	test   BYTE PTR [ecx-0x9b0d2ae],al
  409da5:	iret   
  409da6:	xor    DWORD PTR [ecx],ebp
  409da8:	ins    BYTE PTR es:[edi],dx
  409da9:	jno    0x409d30
  409dab:	mov    DWORD PTR [ebx],ebx
  409dad:	push   DWORD PTR [eax+0x1b50d993]
  409db3:	push   edx
  409db4:	sbb    eax,0xbde65b5e
  409db9:	dec    edx
  409dba:	mul    BYTE PTR [ebx+edi*2]
  409dbd:	ror    BYTE PTR [esi],1
  409dbf:	add    bl,BYTE PTR [edi+0x20]
  409dc2:	es jae 0x409e0e
  409dc5:	add    DWORD PTR [ecx+0xd],ecx
  409dc8:	sbb    al,0x83
  409dca:	push   0x5a
  409dcc:	add    ecx,DWORD PTR [ebx+0x32b22a0]
  409dd2:	ror    DWORD PTR [ecx+ebp*2],1
  409dd5:	int3   
  409dd6:	pop    esp
  409dd7:	imul   edi,eax,0xea90253b
  409ddd:	or     al,0xf5
  409ddf:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  409de1:	frstor es:0x18c7350e
  409de8:	dec    ecx
  409de9:	rcr    BYTE PTR [ebp+eiz*2-0x56],cl
  409ded:	scas   al,BYTE PTR es:[edi]
  409dee:	not    DWORD PTR [esi+0x51]
  409df1:	or     eax,0x1dedf1e2
  409df6:	dec    edi
  409df7:	dec    ebx
  409df8:	xchg   edi,eax
  409df9:	leave  
  409dfa:	fcmovnbe st,st(2)
  409dfc:	push   es
  409dfd:	call   0x6623b8f9
  409e02:	retf   
  409e03:	pop    es
  409e04:	xchg   esp,eax
  409e05:	add    edx,DWORD PTR [edi]
  409e07:	cs dec esi
  409e09:	inc    ebx
  409e0a:	xchg   al,dl
  409e0c:	xchg   ebp,eax
  409e0d:	cld    
  409e0e:	int3   
  409e0f:	sbb    esp,ebp
  409e11:	push   edx
  409e12:	add    BYTE PTR [eax],0x20
  409e15:	fiadd  WORD PTR [ebp-0x16]
  409e18:	and    al,0xa2
  409e1a:	jns    0x409dc1
  409e1c:	add    eax,DWORD PTR [edi-0x7be30fe7]
  409e22:	inc    ebp
  409e23:	mov    ah,0x3
  409e25:	xchg   esi,eax
  409e26:	push   0xb0cf50e9
  409e2b:	push   0x9d1f67e7
  409e30:	sbb    dh,BYTE PTR [eax-0x1b42d889]
  409e36:	fwait
  409e37:	add    DWORD PTR [ecx+0x3d3f4fe2],ebx
  409e3d:	fst    DWORD PTR [esi+0x28735c51]
  409e43:	mov    WORD PTR [ebx-0x68],gs
  409e46:	daa    
  409e47:	mov    dh,0x8
  409e49:	jl     0x409dfe
  409e4b:	std    
  409e4c:	mov    bl,0x99
  409e4e:	jae    0x409df0
  409e50:	sub    dh,bl
  409e52:	int    0x4
  409e54:	ss jle 0x409e64
  409e57:	push   esi
  409e58:	mov    cl,0x94
  409e5a:	fsubrp st(2),st
  409e5c:	in     al,0xdd
  409e5e:	and    eax,0x4356c6c5
  409e63:	shl    BYTE PTR [edx+edx*4-0xb],0xc1
  409e68:	(bad)
  409e6c:	das    
  409e6d:	enter  0xca91,0xcb
  409e71:	and    al,0xb5
  409e73:	inc    edx
  409e74:	xchg   esi,eax
  409e75:	retf   
  409e76:	xor    eax,0x40209fe7
  409e7b:	loopne 0x409ed3
  409e7d:	dec    ebp
  409e7e:	adc    al,BYTE PTR [edi]
  409e80:	inc    esp
  409e81:	inc    edx
  409e82:	push   0x23
  409e84:	sub    edi,DWORD PTR [ebx*8+0x7f251041]
  409e8b:	add    DWORD PTR [eax+0x511c2d6e],0xffffffae
  409e92:	and    BYTE PTR [eax+0x111924fc],bl
  409e98:	or     al,0x1d
  409e9a:	imul   ebp,DWORD PTR [ecx-0x1e96f12f],0x57f87243
  409ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea5:	jle    0x409e2b
  409ea7:	or     eax,0xc0e354b0
  409eac:	outs   dx,BYTE PTR ds:[esi]
  409ead:	push   cs
  409eae:	into   
  409eaf:	into   
  409eb0:	jge    0x409e43
  409eb2:	push   edi
  409eb3:	test   DWORD PTR [esi+edx*1+0x7d5b7783],edi
  409eba:	push   esp
  409ebb:	pop    esi
  409ebc:	cmp    DWORD PTR [edi],edi
  409ebe:	outs   dx,DWORD PTR ds:[esi]
  409ebf:	arpl   si,dx
  409ec1:	sbb    BYTE PTR [ebx-0x7c],0xf9
  409ec5:	stos   DWORD PTR es:[edi],eax
  409ec6:	inc    esi
  409ec7:	sub    al,0x47
  409ec9:	rcr    DWORD PTR [esi-0x27ab6645],0xdd
  409ed0:	and    edi,DWORD PTR [edx+0x31]
  409ed3:	jp     0x409f52
  409ed5:	outs   dx,DWORD PTR ds:[esi]
  409ed6:	dec    ebp
  409ed7:	xor    al,BYTE PTR [edi-0x2c1b051f]
  409edd:	fiadd  WORD PTR [edi]
  409edf:	push   ebp
  409ee0:	jp     0x409f1d
  409ee2:	lahf   
  409ee3:	fdiv   QWORD PTR [ebx-0x2c]
  409ee6:	pop    esp
  409ee7:	cmp    cl,BYTE PTR [ecx-0x3e203161]
  409eed:	pop    eax
  409eee:	rcr    ah,cl
  409ef0:	(bad)  
  409ef1:	sub    BYTE PTR [edi+0x52],bh
  409ef4:	fldenv [esi+0x74f93cca]
  409efa:	lock xchg edi,eax
  409efc:	pop    ebx
  409efd:	(bad)  
  409efe:	mov    ecx,0xfc0064e7
  409f03:	sub    eax,0x778400e4
  409f08:	jmp    0x409f1c
  409f0a:	push   edx
  409f0b:	pop    ebx
  409f0c:	retf   0x250e
  409f0f:	dec    esi
  409f10:	(bad)  
  409f12:	cmp    dl,bl
  409f14:	jnp    0x409f47
  409f16:	jmp    0x46f04d17
  409f1b:	jbe    0x409f2b
  409f1d:	fbld   TBYTE PTR [ecx-0x42809751]
  409f23:	inc    ebp
  409f24:	pop    edx
  409f25:	movq   mm1,QWORD PTR [ebx]
  409f28:	jp     0x409f81
  409f2a:	ds add edx,ebx
  409f2d:	shl    BYTE PTR [esi+edx*8-0x7e],0xd3
  409f32:	sbb    dh,bh
  409f34:	sbb    bh,BYTE PTR [ecx]
  409f36:	mov    al,ds:0xfcbdada7
  409f3b:	xchg   esi,eax
  409f3c:	xchg   ebp,eax
  409f3d:	inc    edi
  409f3e:	xchg   ecx,eax
  409f3f:	add    BYTE PTR ds:0x38db1e97,bh
  409f45:	ins    BYTE PTR es:[edi],dx
  409f46:	cmp    ch,0xb1
  409f49:	cmp    edx,DWORD PTR [edx-0x1e44dc7b]
  409f4f:	iret   
  409f50:	inc    ecx
  409f51:	xor    al,0xb
  409f53:	in     eax,0xca
  409f55:	sub    ecx,DWORD PTR [ebx+0x70]
  409f58:	push   es
  409f59:	iret   
  409f5a:	mov    al,BYTE PTR [esi+0x2c]
  409f5d:	pop    es
  409f5e:	or     al,0x5f
  409f60:	out    dx,eax
  409f61:	pop    ebp
  409f62:	ins    DWORD PTR es:[edi],dx
  409f63:	mov    bp,0x5164
  409f67:	lock jmp 0x409f8d
  409f6a:	cmc    
  409f6b:	add    eax,0x3fe3993a
  409f70:	pop    esp
  409f71:	dec    edi
  409f72:	scas   eax,DWORD PTR es:[edi]
  409f73:	int3   
  409f74:	outs   dx,DWORD PTR cs:[esi]
  409f76:	rcl    DWORD PTR [edi+esi*2+0x498fe520],cl
  409f7d:	scas   al,BYTE PTR es:[edi]
  409f7e:	or     edx,ebp
  409f80:	and    DWORD PTR [ecx-0x6e74f17],ebx
  409f86:	stos   BYTE PTR es:[edi],al
  409f87:	ins    DWORD PTR es:[edi],dx
  409f88:	test   eax,0x849a2142
  409f8d:	mov    al,ds:0xe4ade4be
  409f92:	in     eax,0xe8
  409f94:	data16 dec ch
  409f97:	repz dec edi
  409f99:	cld    
  409f9a:	clc    
  409f9b:	imul   esp,DWORD PTR [ebx-0x783cbb3d],0x53
  409fa2:	scas   eax,DWORD PTR es:[edi]
  409fa3:	push   edi
  409fa4:	inc    esi
  409fa5:	mov    eax,ds:0x99a057d7
  409faa:	mov    edx,0x9d8bb6ad
  409faf:	push   0x23
  409fb1:	mov    esi,ecx
  409fb3:	repz cli 
  409fb5:	xchg   esi,eax
  409fb6:	dec    ebx
  409fb7:	mov    ds:0xc87738ec,eax
  409fbc:	fs nop
  409fbe:	jbe    0x40a02f
  409fc0:	inc    edx
  409fc1:	loop   0x40a03d
  409fc3:	sbb    eax,0x1b092f07
  409fc8:	mov    al,0x7f
  409fca:	fidivr DWORD PTR [ebx-0x16]
  409fcd:	loope  0x409f99
  409fcf:	stos   BYTE PTR es:[edi],al
  409fd0:	loopne 0x40a013
  409fd2:	add    esp,esi
  409fd4:	pop    edi
  409fd5:	jecxz  0x40a03c
  409fd7:	adc    DWORD PTR [ebp+0x6603bc2b],ebp
  409fdd:	sbb    eax,0xfa8da72e
  409fe3:	or     DWORD PTR [edi+0x3f21e874],ebx
  409fe9:	mov    ebx,0x5e202262
  409fee:	inc    esp
  409fef:	sbb    ebx,ebp
  409ff1:	(bad)  
  409ff2:	retf   0x1111
  409ff5:	js     0x40a020
  409ff7:	out    0xe7,al
  409ff9:	lods   eax,DWORD PTR ds:[esi]
  409ffa:	mov    ch,0x65
  409ffc:	jns    0x409fbf
  409ffe:	hlt    
  409fff:	mov    ds:0xefe71bc8,eax
  40a004:	cmp    dh,al
  40a006:	inc    ebp
  40a007:	ins    BYTE PTR es:[edi],dx
  40a008:	hlt    
  40a009:	sub    al,0xc7
  40a00b:	mov    ebp,0x2bafa09d
  40a010:	sub    DWORD PTR [edi],ebx
  40a012:	cmp    BYTE PTR [ecx+0x3d],dl
  40a015:	sbb    edi,DWORD PTR [esi+0x1f86b806]
  40a01b:	mov    ebp,0x3090f746
  40a020:	in     eax,0xab
  40a022:	pause  
  40a024:	dec    esi
  40a025:	pop    edi
  40a026:	add    BYTE PTR ds:0x9e795cf5,dl
  40a02c:	or     BYTE PTR [ebp+0x58],0xa7
  40a030:	mov    bl,cl
  40a032:	enter  0xd2a1,0x84
  40a036:	ret    0x4b83
  40a039:	or     DWORD PTR [ebx-0x31da342],0x41
  40a040:	ror    ch,1
  40a042:	xchg   edx,eax
  40a043:	mov    dh,0x61
  40a045:	sbb    edx,DWORD PTR [esi]
  40a047:	adc    ah,0x32
  40a04a:	int    0xef
  40a04c:	dec    ebp
  40a04d:	sub    BYTE PTR ds:0x7c0b6cb6,cl
  40a053:	add    bl,BYTE PTR [ebx]
  40a055:	addr16 inc ebx
  40a057:	int    0xe
  40a059:	jbe    0x40a0c9
  40a05b:	xchg   esp,eax
  40a05c:	pop    edi
  40a05d:	adc    al,bl
  40a05f:	and    BYTE PTR [esi+0x47364499],al
  40a065:	mov    esp,0x5e3d36b9
  40a06a:	push   ds
  40a06b:	lea    ecx,[eax]
  40a06d:	adc    edi,eax
  40a06f:	syscall 
  40a071:	in     al,dx
  40a072:	mov    dl,0xb9
  40a074:	pop    ds
  40a075:	inc    esp
  40a076:	cli    
  40a077:	inc    ecx
  40a078:	add    BYTE PTR [ebx],ah
  40a07a:	outs   dx,DWORD PTR ds:[esi]
  40a07b:	(bad)  
  40a07c:	(bad)  
  40a07d:	in     al,0x99
  40a07f:	or     ebp,ecx
  40a081:	mov    ah,0x34
  40a083:	sbb    bl,BYTE PTR [ebp-0x55]
  40a086:	adc    BYTE PTR [ecx-0x2e],dl
  40a089:	push   esi
  40a08a:	cmp    esi,DWORD PTR ds:[ebx]
  40a08d:	rcr    DWORD PTR [ecx],cl
  40a08f:	scas   al,BYTE PTR es:[edi]
  40a090:	mov    ebp,0x2eb7e5d5
  40a095:	mov    bl,0xd
  40a097:	fild   WORD PTR [ecx+0x6835d32c]
  40a09d:	stos   BYTE PTR es:[edi],al
  40a09e:	nop
  40a09f:	inc    edx
  40a0a0:	mov    cs,ebp
  40a0a2:	jle    0x40a093
  40a0a4:	mov    edi,0xd48946f7
  40a0a9:	mov    edx,0x664838a6
  40a0ae:	scas   eax,DWORD PTR es:[edi]
  40a0af:	sbb    edi,DWORD PTR [ecx-0x3c]
  40a0b2:	and    BYTE PTR [ebp-0x4e],ch
  40a0b5:	jl     0x40a0dd
  40a0b7:	pop    edx
  40a0b8:	pmuludq mm5,QWORD PTR gs:[bp+0x68]
  40a0be:	gs jno 0x40a0ba
  40a0c1:	dec    esp
  40a0c2:	and    DWORD PTR [ecx],0x7d
  40a0c5:	out    dx,al
  40a0c6:	adc    eax,0xbd023d00
  40a0cb:	push   es
  40a0cc:	jge    0x40a07e
  40a0ce:	jecxz  0x40a0b3
  40a0d0:	setnp  ch
  40a0d3:	xchg   ecx,eax
  40a0d4:	or     DWORD PTR [esi+0x624a090a],esi
  40a0da:	jne    0x40a0fa
  40a0dc:	jae    0x40a0ba
  40a0de:	adc    eax,0x13eabfdb
  40a0e3:	icebp  
  40a0e4:	out    dx,al
  40a0e5:	xchg   ebp,eax
  40a0e6:	iret   
  40a0e7:	pop    edi
  40a0e8:	or     bh,dl
  40a0ea:	sti    
  40a0eb:	or     ecx,DWORD PTR [ecx+0x19ea4e3]
  40a0f1:	cmp    edx,ebx
  40a0f3:	je     0x40a079
  40a0f5:	std    
  40a0f6:	mov    ds:0x8d8ff901,al
  40a0fb:	add    ebp,esp
  40a0fd:	jp     0x40a0bb
  40a0ff:	jmp    0x40a0b6
  40a101:	xor    ch,dl
  40a103:	inc    ebx
  40a104:	icebp  
  40a105:	cmp    esp,DWORD PTR [esi]
  40a107:	lea    ebp,[eax-0x7f]
  40a10a:	scas   al,BYTE PTR es:[edi]
  40a10b:	das    
  40a10c:	or     DWORD PTR [ecx+0x70240363],eax
  40a112:	sub    eax,0xa8183f51
  40a117:	div    DWORD PTR [ecx+0x6fab6b79]
  40a11d:	ss rcl ah,cl
  40a120:	test   BYTE PTR [edi-0x46b42862],cl
  40a126:	xor    DWORD PTR [eax],0x792e8766
  40a12c:	fneni(8087 only) 
  40a12e:	inc    ecx
  40a12f:	dec    eax
  40a130:	sbb    BYTE PTR [edx-0x34a4c3a5],0xfd
  40a137:	mov    dl,0xab
  40a139:	adc    ah,al
  40a13b:	sub    ah,BYTE PTR [eax-0x2d]
  40a13e:	and    ax,0x30ee
  40a142:	add    eax,0x910a6289
  40a147:	rcr    BYTE PTR [eax],0x46
  40a14a:	xchg   ecx,eax
  40a14b:	out    dx,al
  40a14c:	ret    
  40a14d:	dec    edx
  40a14e:	and    esi,DWORD PTR [ebp+0x0]
  40a151:	mov    ds:0x22e2cb70,al
  40a156:	mov    ds:0xc4e6813c,eax
  40a15b:	jnp    0x40a1da
  40a15d:	bound  ebx,QWORD PTR ds:0x1629265
  40a163:	jns    0x40a1dc
  40a165:	jl     0x40a17d
  40a167:	arpl   cx,bx
  40a169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16a:	mov    al,ds:0x580ff205
  40a16f:	xor    al,0x89
  40a171:	pop    ss
  40a172:	loop   0x40a19a
  40a174:	push   ecx
  40a175:	push   ebx
  40a176:	(bad)  
  40a177:	mov    bl,0x38
  40a179:	mov    esp,DWORD PTR [ebx-0x6d]
  40a17c:	mov    cl,0x5
  40a17e:	sahf   
  40a17f:	popa   
  40a180:	dec    edi
  40a181:	out    0xdb,eax
  40a183:	pop    edx
  40a184:	jl     0x40a1b4
  40a186:	sbb    BYTE PTR [edi-0x35],dl
  40a189:	pop    ebx
  40a18a:	add    eax,DWORD PTR [esi-0x61b60992]
  40a190:	and    eax,0xa743c32b
  40a195:	sub    DWORD PTR [ecx+0x1742ca9],0x97001e97
  40a19f:	aam    0x77
  40a1a1:	scas   al,BYTE PTR es:[edi]
  40a1a2:	or     DWORD PTR [edi+0x30],esp
  40a1a5:	push   ss
  40a1a6:	jecxz  0x40a20f
  40a1a8:	or     al,BYTE PTR [ebx+0x4892f93c]
  40a1ae:	jbe    0x40a136
  40a1b0:	fdiv   QWORD PTR [ebx-0x2f]
  40a1b3:	cld    
  40a1b4:	pop    eax
  40a1b5:	cmp    esi,DWORD PTR [edx+0x19141f8a]
  40a1bb:	xor    esp,edx
  40a1bd:	(bad)  
  40a1be:	mov    bh,0x1f
  40a1c0:	or     al,0x23
  40a1c2:	cmp    ecx,edx
  40a1c4:	call   0x66a9a72d
  40a1c9:	dec    ebp
  40a1ca:	ret    
  40a1cb:	jnp    0x40a21a
  40a1cd:	or     eax,0xaf2a95a5
  40a1d2:	ret    
  40a1d3:	mov    al,ds:0x5b8d3617
  40a1d8:	imul   esi,DWORD PTR [esi-0x63],0xc551c826
  40a1df:	sub    eax,0x4fde713d
  40a1e4:	sbb    eax,0x508a3a31
  40a1e9:	hlt    
  40a1ea:	loop   0x40a1ff
  40a1ec:	aad    0x14
  40a1ee:	xchg   ebp,eax
  40a1ef:	jae    0x40a1b0
  40a1f1:	sbb    al,0x3e
  40a1f3:	pop    edi
  40a1f4:	(bad)  
  40a1f5:	call   0x626ba5e5
  40a1fa:	dec    ebp
  40a1fb:	jp     0x40a272
  40a1fd:	paddq  mm3,mm3
  40a200:	or     al,0xc7
  40a202:	or     BYTE PTR [edi+0x7d64f712],0xcf
  40a209:	pop    ebx
  40a20a:	jnp    0x40a27a
  40a20c:	pop    ebp
  40a20d:	dec    ebp
  40a20e:	dec    ecx
  40a20f:	loope  0x40a290
  40a211:	inc    esp
  40a212:	cmp    BYTE PTR es:[esi+0xa527c82],0xc6
  40a21a:	pop    edx
  40a21b:	icebp  
  40a21c:	sub    eax,0x6e1a223f
  40a221:	jl     0x40a288
  40a223:	add    eax,DWORD PTR [edi]
  40a225:	rol    BYTE PTR [ecx-0x40d95f88],cl
  40a22b:	mov    al,ds:0xb5e8e1f5
  40a230:	psadbw mm4,QWORD PTR [edx]
  40a233:	std    
  40a234:	push   esi
  40a235:	ret    0xc9a1
  40a238:	or     al,0x1d
  40a23a:	sub    dh,dl
  40a23c:	inc    ebp
  40a23d:	stos   BYTE PTR es:[edi],al
  40a23e:	xchg   esp,eax
  40a23f:	inc    edx
  40a240:	jb     0x40a254
  40a242:	jns    0x40a294
  40a244:	jmp    0x1e114c79
  40a249:	pop    ss
  40a24a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a24b:	cmp    al,0x20
  40a24d:	mov    DWORD PTR ds:0x3e1a83af,ecx
  40a253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a254:	rcr    DWORD PTR [edx+0x5c0cfc92],cl
  40a25a:	mov    dl,0x7a
  40a25c:	add    eax,0xcfc85494
  40a261:	stos   DWORD PTR es:[edi],eax
  40a262:	(bad)  
  40a263:	fwait
  40a264:	inc    eax
  40a265:	xchg   esi,eax
  40a266:	loope  0x40a1ed
  40a268:	test   al,0xa2
  40a26a:	push   ebp
  40a26b:	repz aaa 
  40a26d:	test   eax,0xff4dd6d
  40a272:	sub    edx,DWORD PTR [ebx+0x67f40731]
  40a278:	stc    
  40a279:	das    
  40a27a:	sbb    eax,0xa73e13bd
  40a27f:	sub    dl,BYTE PTR [ebx+0x5a9ab4e0]
  40a285:	call   0x4162:0x510f5433
  40a28c:	push   ebx
  40a28d:	cmp    DWORD PTR ds:0x6d7c5b51,eax
  40a293:	dec    ebx
  40a294:	jne    0x40a2fa
  40a296:	(bad)  
  40a297:	ins    BYTE PTR es:[edi],dx
  40a298:	stc    
  40a299:	add    eax,eax
  40a29b:	leave  
  40a29c:	lods   eax,DWORD PTR ds:[esi]
  40a29d:	jle    0x40a27e
  40a29f:	xor    ah,BYTE PTR [esi+0x3ad5c5d8]
  40a2a5:	mov    dh,0x1
  40a2a7:	dec    edx
  40a2a8:	sbb    al,0xf5
  40a2aa:	sub    esp,DWORD PTR [edx+edi*1-0xb1e75ff]
  40a2b1:	sub    ah,BYTE PTR [ebx-0x493cf79a]
  40a2b7:	xchg   ecx,eax
  40a2b8:	sub    eax,0xa7537272
  40a2bd:	jae    0x40a292
  40a2bf:	enter  0xd597,0x76
  40a2c3:	push   0x51
  40a2c5:	imul   eax,DWORD PTR ds:0xe3ed8418,0x8ef72de8
  40a2cf:	cmp    DWORD PTR [esi-0x4dbdc9ff],esp
  40a2d5:	add    BYTE PTR [ebx+0x7c74ed94],bh
  40a2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2dc:	push   0xffffff9a
  40a2de:	sar    DWORD PTR [ecx+ebp*1-0x6],cl
  40a2e2:	(bad)  
  40a2e3:	in     al,dx
  40a2e4:	sbb    ch,BYTE PTR [ebp+0x0]
  40a2e7:	xlat   BYTE PTR ds:[ebx]
  40a2e8:	cld    
  40a2e9:	fidivr WORD PTR [edi+0x23]
  40a2ec:	cmc    
  40a2ed:	test   eax,0x1796204
  40a2f2:	outs   dx,DWORD PTR ds:[esi]
  40a2f3:	mul    BYTE PTR [eax+esi*8-0x5b]
  40a2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2f8:	loop   0x40a284
  40a2fa:	sub    eax,0xb35624d2
  40a2ff:	cli    
  40a300:	sahf   
  40a301:	leave  
  40a302:	scas   eax,DWORD PTR es:[edi]
  40a303:	jae    0x40a2af
  40a305:	ins    BYTE PTR es:[edi],dx
  40a306:	and    ebp,DWORD PTR [eax+ebx*1-0x531bbae7]
  40a30d:	das    
  40a30e:	mov    ds:0x8c85a3ad,eax
  40a313:	xor    ebp,ebp
  40a315:	lods   eax,DWORD PTR ds:[esi]
  40a316:	ss lock push ds
  40a319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a31a:	cmp    eax,0xb1a69ab0
  40a31f:	mov    al,0x59
  40a321:	gs cdq 
  40a323:	stos   DWORD PTR es:[edi],eax
  40a324:	push   esi
  40a325:	mov    ebx,0x1d5ec70f
  40a32a:	sub    eax,edx
  40a32c:	pusha  
  40a32d:	jns    0x40a38e
  40a32f:	jl     0x40a353
  40a331:	fsin   
  40a333:	scas   eax,DWORD PTR es:[edi]
  40a334:	mov    edi,0xe8f1a8ca
  40a339:	xor    al,BYTE PTR [ebp-0xde0799f]
  40a33f:	mov    eax,ds:0x42929e45
  40a344:	dec    edx
  40a345:	into   
  40a346:	lock jg 0x40a31d
  40a349:	add    BYTE PTR ds:0x6609df89,dl
  40a34f:	in     al,0xa0
  40a351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a352:	add    esp,DWORD PTR [bx+0x52]
  40a356:	jne    0x40a3d4
  40a358:	leave  
  40a359:	cmp    DWORD PTR [esp+esi*8+0x50e2a8db],0x73b22cc1
  40a364:	shr    DWORD PTR [ebx-0x68c468a],0xf6
  40a36b:	mov    al,BYTE PTR [ecx-0x6d]
  40a36e:	test   DWORD PTR [eax+0x62],edx
  40a371:	call   0xead5467c
  40a376:	mov    edi,0xbf1f2016
  40a37b:	(bad)  [esi]
  40a37d:	adc    ecx,DWORD PTR [ebp-0x48]
  40a380:	hlt    
  40a381:	adc    bl,BYTE PTR [ebx-0x67]
  40a384:	adc    eax,0x504771c6
  40a389:	and    eax,0x326a6e92
  40a38e:	inc    ecx
  40a38f:	fist   DWORD PTR [ecx]
  40a391:	mov    ah,0x99
  40a393:	pop    edi
  40a394:	jne    0x40a3ea
  40a396:	adc    esp,DWORD PTR [edx+0x45]
  40a399:	in     al,0x6
  40a39b:	out    0x47,eax
  40a39d:	cmc    
  40a39e:	popf   
  40a39f:	sub    al,0x1e
  40a3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a2:	leave  
  40a3a3:	and    ebp,eax
  40a3a5:	dec    ebp
  40a3a6:	bound  edi,QWORD PTR [edi-0x5]
  40a3a9:	mov    edi,0xc39de631
  40a3ae:	stos   BYTE PTR es:[edi],al
  40a3af:	xchg   edi,eax
  40a3b0:	jle    0x40a3ad
  40a3b2:	fisub  WORD PTR [esi+0x19]
  40a3b5:	xor    esp,DWORD PTR [ebx-0x61341d1a]
  40a3bb:	push   cs
  40a3bc:	xchg   esp,eax
  40a3bd:	pop    es
  40a3be:	ret    
  40a3bf:	add    BYTE PTR [ebx],dl
  40a3c1:	xlat   BYTE PTR ds:[ebx]
  40a3c2:	outs   dx,BYTE PTR ds:[esi]
  40a3c3:	pop    es
  40a3c4:	push   cs
  40a3c5:	cmp    ch,BYTE PTR [edi-0x37db3135]
  40a3cb:	xchg   esi,eax
  40a3cc:	pushf  
  40a3cd:	sar    BYTE PTR [esi-0x5a],cl
  40a3d0:	loope  0x40a356
  40a3d2:	xchg   ecx,eax
  40a3d3:	leave  
  40a3d4:	and    eax,0xf9761080
  40a3d9:	add    al,0xf
  40a3db:	inc    esi
  40a3dc:	and    edi,DWORD PTR [edi+0x17e1f130]
  40a3e2:	or     cl,dl
  40a3e4:	push   edi
  40a3e5:	test   al,0x1c
  40a3e7:	(bad)  
  40a3e8:	pushf  
  40a3e9:	push   eax
  40a3ea:	and    ebx,0xffffffd1
  40a3ed:	cwde   
  40a3ee:	(bad)  
  40a3ef:	sti    
  40a3f0:	rcl    DWORD PTR [esp+eax*2],cl
  40a3f3:	(bad)  [ebp+0xf]
  40a3f6:	mov    dl,0xcf
  40a3f8:	xchg   esi,eax
  40a3f9:	xor    bl,ch
  40a3fb:	adc    edi,DWORD PTR [edx]
  40a3fd:	jo     0x40a428
  40a3ff:	inc    ebp
  40a400:	sbb    eax,0x4b780569
  40a405:	out    0xaf,al
  40a407:	mov    ch,0x27
  40a409:	fsub   DWORD PTR ss:[ebp+0x3ef12257]
  40a410:	mov    edx,0x7915507c
  40a415:	pop    ss
  40a416:	stc    
  40a417:	push   ebx
  40a418:	inc    ebp
  40a419:	jp     0x40a425
  40a41b:	in     eax,dx
  40a41c:	js     0x40a411
  40a41e:	jb     0x40a42d
  40a420:	popa   
  40a421:	xchg   edx,eax
  40a422:	ror    BYTE PTR [ecx],0x5
  40a425:	cmp    eax,0x8c188ff5
  40a42a:	push   eax
  40a42b:	repz idiv DWORD PTR [edi]
  40a42e:	sbb    eax,0x2c1c1dcc
  40a433:	sub    al,0x7b
  40a435:	sbb    BYTE PTR [edx-0x73],al
  40a438:	loop   0x40a47d
  40a43a:	and    dl,ah
  40a43c:	js     0x40a496
  40a43e:	or     DWORD PTR [ebp+0x70883982],esp
  40a444:	repz add eax,0x861227f
  40a44a:	aas    
  40a44b:	cs xchg edx,eax
  40a44d:	addr16 retf 
  40a44f:	out    dx,al
  40a450:	sbb    DWORD PTR [edi-0x18fab4d2],ecx
  40a456:	loopne 0x40a41c
  40a458:	call   0xd4cf:0x2634896d
  40a45f:	cmp    BYTE PTR fs:[ecx],ah
  40a462:	jb     0x40a428
  40a464:	and    DWORD PTR [ebx-0x1edb2ac1],edx
  40a46a:	xor    ebx,ecx
  40a46c:	sub    ebp,DWORD PTR [ebp-0x56]
  40a46f:	xor    edi,DWORD PTR [esi-0x38ae0af8]
  40a475:	and    DWORD PTR [ebx-0xe],ebx
  40a478:	sbb    bl,bl
  40a47a:	neg    DWORD PTR [ebx]
  40a47c:	mov    ch,0x4b
  40a47e:	gs call 0x939d02de
  40a484:	cmp    al,0x94
  40a486:	mov    dl,0xb8
  40a488:	adc    eax,ebp
  40a48a:	and    DWORD PTR [edx-0x59],edx
  40a48d:	fcom   DWORD PTR [ebp-0x15]
  40a490:	rcl    BYTE PTR [ecx+0x77912a66],0x5f
  40a497:	jmp    0xb912:0x4020f673
  40a49e:	enter  0xd222,0xa8
  40a4a2:	ror    ah,1
  40a4a4:	mov    eax,ds:0x44815698
  40a4a9:	push   0xd6161013
  40a4ae:	add    bh,BYTE PTR [eax]
  40a4b0:	push   edi
  40a4b1:	ret    
  40a4b2:	call   0x2047:0x7061f5cc
  40a4b9:	push   edi
  40a4ba:	clc    
  40a4bb:	test   eax,0x1ee92283
  40a4c0:	fisub  WORD PTR [eax-0x73]
  40a4c3:	loopne 0x40a4bb
  40a4c5:	das    
  40a4c6:	ret    0x41cb
  40a4c9:	jl     0x40a522
  40a4cb:	inc    al
  40a4cd:	repz and cl,cl
  40a4d0:	xchg   esp,eax
  40a4d1:	enter  0x95e4,0xbd
  40a4d5:	push   edx
  40a4d7:	pushf  
  40a4d8:	mov    eax,ds:0xb8775812
  40a4dd:	jns    0x40a48a
  40a4df:	jo     0x40a47e
  40a4e1:	enter  0xbd96,0x89
  40a4e5:	and    al,0xc9
  40a4e7:	xchg   edi,eax
  40a4e8:	lods   eax,DWORD PTR ds:[esi]
  40a4e9:	pop    ss
  40a4ea:	mov    esi,0xd8903144
  40a4ef:	loop   0x40a490
  40a4f1:	lock cpuid 
  40a4f4:	jnp    0x40a527
  40a4f6:	ret    
  40a4f7:	or     ebx,DWORD PTR [eax]
  40a4f9:	add    DWORD PTR [eax+edx*2],eax
  40a4fc:	mov    ecx,ebp
  40a4fe:	daa    
  40a4ff:	outs   dx,BYTE PTR ds:[esi]
  40a500:	push   esi
  40a501:	add    BYTE PTR [ebp-0x282b74db],dl
  40a507:	mov    esi,0xd549464f
  40a50c:	(bad)  
  40a50d:	adc    ecx,DWORD PTR [edi-0xd5d61bd]
  40a513:	xor    BYTE PTR [ecx],ah
  40a515:	or     al,0xf4
  40a517:	xor    BYTE PTR [eax+ecx*8],ch
  40a51a:	push   ebx
  40a51b:	jecxz  0x40a4f9
  40a51d:	adc    esi,DWORD PTR [ebx-0x63]
  40a520:	pop    esi
  40a521:	xchg   ebx,ecx
  40a523:	adc    al,0x26
  40a525:	sbb    eax,0xaad22fcb
  40a52a:	sub    ebp,DWORD PTR ds:0xe837c99d
  40a530:	and    bl,BYTE PTR [ecx]
  40a532:	outs   dx,BYTE PTR ds:[esi]
  40a533:	popa   
  40a534:	sti    
  40a535:	scas   eax,DWORD PTR es:[edi]
  40a536:	inc    esp
  40a537:	mov    ds:0x2f7d0836,al
  40a53c:	ss mov dl,0x61
  40a53f:	mov    cl,0xf1
  40a541:	xor    bl,BYTE PTR ds:0xaa1e0c88
  40a547:	cmp    BYTE PTR [eax+0x140e9fb3],al
  40a54d:	(bad)  
  40a54e:	and    ebx,DWORD PTR [ecx+0x7b]
  40a551:	xor    eax,0xee60e665
  40a556:	and    al,0xea
  40a558:	mov    dl,0xf9
  40a55a:	cld    
  40a55b:	mov    edi,0xb8c7d4ac
  40a560:	ins    BYTE PTR es:[edi],dx
  40a561:	in     al,dx
  40a562:	(bad)  
  40a564:	mov    bh,0x43
  40a566:	les    ebx,FWORD PTR [ebx+0x35]
  40a569:	gs stc 
  40a56b:	cmp    BYTE PTR [ecx],bh
  40a56d:	sub    esp,ecx
  40a56f:	jns    0x40a536
  40a571:	in     al,0x1a
  40a573:	mov    cl,0xfd
  40a575:	adc    ebp,edx
  40a577:	cmp    al,0x13
  40a579:	inc    ebp
  40a57a:	ja     0x40a5e8
  40a57c:	add    DWORD PTR [esi],eax
  40a57e:	retf   0x1191
  40a581:	cmp    BYTE PTR [eiz*2+0x461f2ff8],0x1a
  40a589:	mov    eax,ds:0xc9c43b6b
  40a58e:	xor    eax,0x5537f6a0
  40a593:	sbb    eax,0xb78c47cc
  40a598:	pop    ds
  40a599:	mov    edi,0x68783f3
  40a59e:	mov    cl,0xa5
  40a5a0:	mov    bl,0xf2
  40a5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a3:	ins    DWORD PTR es:[edi],dx
  40a5a4:	xlat   BYTE PTR ds:[ebx]
  40a5a5:	bound  ecx,QWORD PTR [edx*1-0x7b7e002b]
  40a5ac:	sub    BYTE PTR [ecx-0x3fb41651],cl
  40a5b2:	adc    al,0x94
  40a5b4:	dec    esp
  40a5b5:	or     eax,0x213896c2
  40a5ba:	inc    ebp
  40a5bb:	sbb    DWORD PTR [esi+esi*1-0x6ca5aeea],edi
  40a5c2:	pop    ebx
  40a5c3:	imul   ebx,esp,0xffffffb7
  40a5c6:	sahf   
  40a5c7:	dec    ecx
  40a5c8:	adc    bh,BYTE PTR [edx]
  40a5ca:	sub    DWORD PTR [ebx-0xd],esp
  40a5cd:	rcl    DWORD PTR [edi+0x14],1
  40a5d0:	arpl   ax,ax
  40a5d2:	or     eax,0xcab2131d
  40a5d7:	cdq    
  40a5d8:	jp     0x40a619
  40a5da:	dec    esp
  40a5db:	xchg   BYTE PTR [edi],ah
  40a5dd:	shr    BYTE PTR [edx-0x4ccfed9b],0xf9
  40a5e4:	enter  0x3f07,0x51
  40a5e8:	stos   BYTE PTR es:[edi],al
  40a5e9:	pop    ebp
  40a5ea:	sbb    eax,0x418c9914
  40a5ef:	stos   DWORD PTR es:[edi],eax
  40a5f0:	out    dx,al
  40a5f1:	out    0x11,al
  40a5f3:	xor    al,BYTE PTR [edx]
  40a5f5:	jnp    0x40a638
  40a5f7:	dec    esp
  40a5f8:	cmp    al,dh
  40a5fa:	adc    ebx,DWORD PTR [eax-0x6d]
  40a5fd:	push   ebp
  40a5fe:	push   ecx
  40a5ff:	cmp    eax,0x427d1bba
  40a604:	lods   al,BYTE PTR ds:[esi]
  40a605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a606:	pop    esi
  40a607:	pop    es
  40a608:	movzx  eax,BYTE PTR [edi-0x5506181f]
  40a60f:	xchg   BYTE PTR [esp+edx*4-0x5bff81f],ch
  40a616:	add    bl,al
  40a618:	sbb    DWORD PTR [eax],eax
  40a61a:	mov    bl,0x9d
  40a61c:	es fwait
  40a61e:	popa   
  40a61f:	sbb    bl,BYTE PTR [ebx*8-0x6e784576]
  40a626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a627:	arpl   bp,si
  40a629:	jecxz  0x40a67e
  40a62b:	sbb    bl,cl
  40a62d:	and    eax,0xa8186315
  40a632:	hlt    
  40a633:	jbe    0x40a5d0
  40a635:	ret    
  40a636:	inc    ebp
  40a637:	xor    DWORD PTR [eax-0x46],esp
  40a63a:	jg     0x40a5c6
  40a63c:	in     al,dx
  40a63d:	cmp    eax,0x2bbb067a
  40a642:	aaa    
  40a643:	and    eax,0xa42bb7a0
  40a648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a649:	je     0x40a6c0
  40a64b:	ss pop edx
  40a64d:	pop    edx
  40a64e:	popf   
  40a64f:	dec    esi
  40a650:	lock les eax,FWORD PTR [edi+0x3721144f]
  40a657:	fld    st(5)
  40a659:	inc    esi
  40a65a:	push   ss
  40a65b:	xchg   ecx,eax
  40a65c:	scas   eax,DWORD PTR es:[edi]
  40a65d:	xchg   ebp,eax
  40a65e:	ins    DWORD PTR es:[edi],dx
  40a65f:	or     eax,0x7f8d6d06
  40a664:	mov    esi,0x8eae0870
  40a669:	bswap  ebx
  40a66b:	adc    BYTE PTR [ebp-0x87049c4],0x69
  40a672:	cmp    DWORD PTR [edx+0x62],ecx
  40a675:	jb     0x40a6a7
  40a677:	push   0x30
  40a679:	enter  0x954e,0x31
  40a67d:	xchg   esi,eax
  40a67e:	stos   DWORD PTR es:[edi],eax
  40a67f:	jmp    0x6539d350
  40a684:	pop    esi
  40a685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a686:	jge    0x40a6cc
  40a688:	sub    eax,0xe488d982
  40a68d:	stc    
  40a68e:	or     BYTE PTR [ebp+esi*8+0x4],cl
  40a692:	jo     0x40a6fc
  40a694:	add    ebp,esi
  40a696:	pop    esp
  40a697:	push   esp
  40a698:	retf   0xae95
  40a69b:	outs   dx,BYTE PTR ds:[esi]
  40a69c:	imul   esp,edx,0x9cd6c0cf
  40a6a2:	push   edx
  40a6a3:	getsec 
  40a6a5:	and    bl,BYTE PTR [edi+0x4a]
  40a6a8:	enter  0x5cab,0x89
  40a6ac:	adc    eax,0x302a8186
  40a6b1:	mov    esp,DWORD PTR [eax+ebx*2]
  40a6b4:	jmp    0x184860dc
  40a6b9:	stc    
  40a6ba:	adc    eax,0x5fe0534c
  40a6bf:	mov    ds:0x39637d89,al
  40a6c4:	adc    BYTE PTR [eax-0x670b6338],dl
  40a6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6cb:	imul   eax,DWORD PTR [ebp-0x3a],0x27
  40a6cf:	popf   
  40a6d0:	push   eax
  40a6d1:	fcmovnb st,st(5)
  40a6d3:	adc    eax,0xe188ed54
  40a6d8:	dec    ebx
  40a6d9:	test   al,0x73
  40a6db:	repnz sub al,0x3e
  40a6de:	daa    
  40a6df:	shr    BYTE PTR [ebp+edi*2+0x57577307],1
  40a6e6:	in     eax,0x23
  40a6e8:	jmp    0x9367:0x66e3dfaa
  40a6ef:	xor    eax,0x3751151b
  40a6f4:	fnsave [eax]
  40a6f6:	mov    al,ds:0x4103de1b
  40a6fb:	or     edx,DWORD PTR [esi]
  40a6fd:	jne    0x40a737
  40a6ff:	mov    al,ds:0xce4cfb8a
  40a704:	add    BYTE PTR [ebx+ebx*2-0x78],cl
  40a708:	push   0x3e8befde
  40a70d:	and    BYTE PTR [edx-0x7acdd901],cl
  40a713:	cs sbb al,0x1b
  40a716:	cmp    eax,0xc5dd72ee
  40a71b:	mov    ebx,0xec12b3d5
  40a720:	stos   DWORD PTR es:[edi],eax
  40a721:	mov    ebx,0x305c1f54
  40a726:	or     dh,ch
  40a728:	jne    0x40a6b3
  40a72a:	mov    cl,0x6f
  40a72c:	out    0x9,eax
  40a72e:	lods   eax,DWORD PTR ds:[esi]
  40a72f:	jne    0x40a77f
  40a731:	mov    ds:0xc3f5c9f2,al
  40a736:	jno    0x40a7aa
  40a738:	inc    esi
  40a739:	push   ecx
  40a73a:	jmp    0xb850dc64
  40a73f:	mov    dl,0xa
  40a741:	test   DWORD PTR [ecx+0x483535bf],0xa8eac5f
  40a74b:	lock pop ecx
  40a74d:	inc    edx
  40a74e:	jp     0x40a781
  40a750:	cli    
  40a751:	sub    al,0xe
  40a753:	les    esi,FWORD PTR [esi-0x7e25652e]
  40a759:	sub    bl,ah
  40a75b:	add    ebp,edi
  40a75d:	mov    ds:0xe957f86e,al
  40a762:	fcmovnb st,st(4)
  40a764:	jmp    0x40a707
  40a766:	ja     0x40a709
  40a768:	pop    eax
  40a769:	(bad)
  40a76c:	dec    ebx
  40a76d:	call   0x2d0c:0x2f3ed0a
  40a774:	ficom  WORD PTR ds:0x8b22f4d5
  40a77a:	xchg   ebx,eax
  40a77b:	aas    
  40a77c:	or     eax,0xb515dde4
  40a781:	and    eax,0x68593b95
  40a786:	dec    ebx
  40a787:	mov    ecx,0x834c4095
  40a78c:	mov    ebp,0x7f32e773
  40a791:	aas    
  40a792:	jmp    0x40a7ff
  40a794:	or     DWORD PTR ds:0x85e1d5d1,ecx
  40a79a:	mov    ebx,0x77dc7cb7
  40a79f:	jmp    0xc714552c
  40a7a4:	dec    edx
  40a7a5:	imul   ebp,esi,0x71
  40a7a8:	adc    al,0xf9
  40a7aa:	mov    WORD PTR [esi],gs
  40a7ac:	mov    al,0x34
  40a7ae:	mul    DWORD PTR [edx+0x23678065]
  40a7b4:	cmp    edi,edx
  40a7b6:	test   dl,bl
  40a7b8:	shr    BYTE PTR [esi-0x89239f4],cl
  40a7be:	mov    dl,0x73
  40a7c0:	jmp    0xe506f3fe
  40a7c5:	mov    al,ds:0xa771cc5e
  40a7ca:	fild   WORD PTR [esi]
  40a7cc:	test   eax,0x7d06546f
  40a7d1:	rcr    DWORD PTR [esi+0x12],cl
  40a7d4:	in     al,0xa7
  40a7d6:	fucomi st,st(7)
  40a7d8:	cmp    cl,bh
  40a7da:	xor    al,0x18
  40a7dc:	outs   dx,DWORD PTR ds:[esi]
  40a7dd:	arpl   WORD PTR [esi+eiz*2-0x4f],dx
  40a7e1:	jae    0x40a7a3
  40a7e3:	ss push ds
  40a7e5:	ja     0x40a843
  40a7e7:	es cmc 
  40a7e9:	dec    ebp
  40a7ea:	sbb    ah,BYTE PTR [eax-0x7e]
  40a7ed:	or     eax,0x679a2c0a
  40a7f2:	rol    BYTE PTR ss:[ebx+0x26d671e1],cl
  40a7f9:	ror    BYTE PTR [ebx-0x5f],0x8f
  40a7fd:	ja     0x40a7ac
  40a7ff:	jno    0x40a841
  40a801:	nop
  40a802:	inc    edx
  40a803:	push   cs
  40a804:	ja     0x40a822
  40a806:	pushf  
  40a807:	xor    eax,DWORD PTR ds:[eax+esi*4-0x1b2eb275]
  40a80f:	(bad)  
  40a811:	dec    ebx
  40a812:	neg    ebx
  40a814:	or     esi,DWORD PTR [edx+eiz*4]
  40a817:	test   eax,0xada0896c
  40a81c:	push   ecx
  40a81d:	lahf   
  40a81e:	mov    ?,WORD PTR ds:0x2d7b68dd
  40a824:	arpl   WORD PTR [ebx],dx
  40a826:	push   es
  40a827:	sahf   
  40a828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a829:	push   edx
  40a82a:	adc    DWORD PTR ds:0x282cd446,esi
  40a830:	icebp  
  40a831:	push   edx
  40a832:	in     eax,0x66
  40a834:	dec    esp
  40a835:	dec    esp
  40a836:	adc    dh,dh
  40a838:	in     al,0x0
  40a83a:	sar    esi,cl
  40a83c:	popf   
  40a83d:	les    edx,FWORD PTR [edi-0x2e9b3156]
  40a843:	inc    ecx
  40a844:	js     0x40a820
  40a846:	inc    ebp
  40a847:	sub    dh,BYTE PTR [ebp+0x63]
  40a84a:	add    edx,esp
  40a84c:	div    BYTE PTR [esi]
  40a84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a84f:	daa    
  40a850:	xchg   edx,eax
  40a851:	lock test BYTE PTR [edx],cl
  40a854:	pop    ds
  40a855:	hlt    
  40a856:	push   ds
  40a857:	mov    dl,0x55
  40a859:	sbb    eax,0xf03ece9c
  40a85e:	data16 sbb BYTE PTR ds:0x458b7b1d,al
  40a865:	loopne 0x40a7f2
  40a867:	push   ebp
  40a868:	lock xor eax,esi
  40a86b:	lea    eax,[eax+edx*1+0x3272ef]
  40a872:	mov    DWORD PTR [ebp-0x10],eax
  40a875:	jmp    0x4018ca
  40a87a:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a87d:	mov    eax,DWORD PTR [ebp+0xc]
  40a880:	xor    eax,esi
  40a882:	lea    ecx,[ecx+eax*1+0x3272ef]
  40a889:	lea    eax,[ecx-0x3272ef]
  40a88f:	xor    eax,esi
  40a891:	cmp    eax,0xf89c95b9
  40a896:	jne    0x40186e
  40a89c:	dec    DWORD PTR [ebp-0x34]
  40a89f:	jne    0x401862
  40a8a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a8a8:	mov    ecx,DWORD PTR [ebp+0xc]
  40a8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40a8ae:	xor    ecx,esi
  40a8b0:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ef]
  40a8b7:	xor    eax,esi
  40a8b9:	mov    al,BYTE PTR [eax+ebx*1+0x3272ef]
  40a8c0:	xor    edx,esi
  40a8c2:	mov    BYTE PTR [edx+ebx*1+0x3272ef],cl
  40a8c9:	mov    ecx,DWORD PTR [ebp+0xc]
  40a8cc:	xor    ecx,esi
  40a8ce:	mov    BYTE PTR [ecx+ebx*1+0x3272ef],al
  40a8d5:	mov    eax,DWORD PTR [ebp+0xc]
  40a8d8:	xor    eax,esi
  40a8da:	add    eax,edi
  40a8dc:	pop    edi
  40a8dd:	pop    esi
  40a8de:	pop    ebx
  40a8df:	leave  
  40a8e0:	ret    0x8
  40a8e3:	mov    DWORD PTR ds:0x42a14f,0x31f7
  40a8ed:	xor    eax,eax
  40a8ef:	xor    DWORD PTR ds:0x42a133,0x42a16f
  40a8f9:	inc    eax
  40a8fa:	ret    
  40a8fb:	push   ebp
  40a8fc:	mov    ebp,esp
  40a8fe:	sub    esp,0x38
  40a901:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a908:	push   ebx
  40a909:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40a910:	add    eax,0x7451
  40a915:	mov    eax,DWORD PTR [ebp-0x4]
  40a918:	push   esi
  40a919:	adc    DWORD PTR ds:0x42a16f,0x11c9
  40a923:	mov    esi,0x75108a8
  40a928:	xor    eax,esi
  40a92a:	and    DWORD PTR ds:0x42a1cb,0x42a193
  40a934:	push   edi
  40a935:	mov    edi,DWORD PTR ds:0x42a1bf
  40a93b:	or     DWORD PTR ds:0x42a1cb,edi
  40a941:	mov    edi,0x3272ef
  40a946:	add    eax,edi
  40a948:	sub    DWORD PTR ds:0x42a1a7,0x1574
  40a952:	mov    DWORD PTR [ebp-0x1c],eax
  40a955:	mov    DWORD PTR ds:0x42a16b,0x10
  40a95f:	cmp    DWORD PTR ds:0x42a16b,0x0
  40a966:	je     0x40a99e
  40a96c:	cmp    DWORD PTR ds:0x42a16b,0x12
  40a973:	jle    0x40a99e
  40a979:	jmp    0x40a98e
  40a97e:	push   0x8e23
  40a983:	push   0x3392
  40a988:	call   DWORD PTR ds:0x42a2c7
  40a98e:	mov    eax,ds:0x42a16b
  40a993:	dec    eax
  40a994:	mov    ds:0x42a16b,eax
  40a999:	jmp    0x40a95f
  40a99e:	mov    eax,DWORD PTR [ebp+0x14]
  40a9a1:	test   eax,eax
  40a9a3:	mov    DWORD PTR ds:0x42a19b,0x1a9e
  40a9ad:	je     0x40aa33
  40a9b3:	mov    DWORD PTR ds:0x42a17f,0x1e
  40a9bd:	cmp    DWORD PTR ds:0x42a17f,0x0
  40a9c4:	je     0x40aa1b
  40a9ca:	cmp    DWORD PTR ds:0x42a17f,0xc
  40a9d1:	jb     0x40aa1b
  40a9d7:	jmp    0x40a9ef
  40a9dc:	push   DWORD PTR [ebp-0xc]
  40a9df:	push   0x42a1af
  40a9e4:	push   0x400000
  40a9e9:	call   DWORD PTR ds:0x42a2cf
  40a9ef:	cmp    DWORD PTR ds:0x42a17f,0xd
  40a9f6:	jne    0x40aa09
  40a9fc:	mov    ebx,DWORD PTR ds:0x42a17f
  40aa02:	dec    ebx
  40aa03:	mov    DWORD PTR ds:0x42a17f,ebx
  40aa09:	mov    ebx,DWORD PTR ds:0x42a17f
  40aa0f:	dec    ebx
  40aa10:	mov    DWORD PTR ds:0x42a17f,ebx
  40aa16:	jmp    0x40a9bd
  40aa1b:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1e:	or     ebx,0x6757
  40aa24:	mov    eax,DWORD PTR [eax]
  40aa26:	xor    DWORD PTR ds:0x42a127,0x5a4b
  40aa30:	mov    DWORD PTR [ebp-0x1c],eax
  40aa33:	mov    eax,DWORD PTR [ebp-0x4]
  40aa36:	dec    DWORD PTR ds:0x42a18f
  40aa3c:	xor    eax,esi
  40aa3e:	add    eax,edi
  40aa40:	and    DWORD PTR ds:0x42a18f,0x0
  40aa4a:	jmp    0x40aa5c
  40aa4f:	mov    ebx,DWORD PTR ds:0x42a18f
  40aa55:	inc    ebx
  40aa56:	mov    DWORD PTR ds:0x42a18f,ebx
  40aa5c:	cmp    DWORD PTR ds:0x42a18f,0x13
  40aa63:	jae    0x40aaaa
  40aa69:	cmp    DWORD PTR ds:0x42a18f,0x4
  40aa70:	jb     0x40aaaa
  40aa76:	jmp    0x40aa8b
  40aa7b:	push   0x42a127
  40aa80:	push   0x37a6
  40aa85:	call   DWORD PTR ds:0x42a2d3
  40aa8b:	cmp    DWORD PTR ds:0x42a18f,0x3
  40aa92:	jne    0x40aaa5
  40aa98:	mov    ebx,DWORD PTR ds:0x42a18f
  40aa9e:	inc    ebx
  40aa9f:	mov    DWORD PTR ds:0x42a18f,ebx
  40aaa5:	jmp    0x40aa4f
  40aaaa:	mov    DWORD PTR [ebp-0x8],eax
  40aaad:	mov    ebx,DWORD PTR ds:0x42a1e7
  40aab3:	mov    ebx,DWORD PTR [ebx]
  40aab5:	xor    DWORD PTR ds:0x42a17f,ebx
  40aabb:	mov    eax,DWORD PTR [ebp-0xc]
  40aabe:	mov    DWORD PTR ds:0x42a1cb,0x14
  40aac8:	cmp    DWORD PTR ds:0x42a1cb,0x0
  40aacf:	je     0x40aaff
  40aad5:	cmp    DWORD PTR ds:0x42a1cb,0x16
  40aadc:	jbe    0x40aaff
  40aae2:	jmp    0x40aaed
  40aae7:	call   DWORD PTR ds:0x42a293
  40aaed:	mov    ebx,DWORD PTR ds:0x42a1cb
  40aaf3:	dec    ebx
  40aaf4:	mov    DWORD PTR ds:0x42a1cb,ebx
  40aafa:	jmp    0x40aac8
  40aaff:	xor    eax,esi
  40ab01:	movzx  ebx,BYTE PTR ds:0x42a17b
  40ab08:	adc    ebx,DWORD PTR ds:0x42a1af
  40ab0e:	mov    DWORD PTR ds:0x42a17b,ebx
  40ab14:	add    eax,edi
  40ab16:	mov    DWORD PTR ds:0x42a16f,0x16
  40ab20:	cmp    DWORD PTR ds:0x42a16f,0x0
  40ab27:	je     0x40ab6b
  40ab2d:	cmp    DWORD PTR ds:0x42a16f,0x1e
  40ab34:	jbe    0x40ab6b
  40ab3a:	jmp    0x40ab57
  40ab3f:	push   DWORD PTR [ebp-0x1c]
  40ab42:	push   0x2f0e
  40ab47:	push   0x429025
  40ab4c:	push   0x400000
  40ab51:	call   DWORD PTR ds:0x42a297
  40ab57:	xor    ebx,ebx
  40ab59:	add    ebx,DWORD PTR ds:0x42a16f
  40ab5f:	dec    ebx
  40ab60:	mov    DWORD PTR ds:0x42a16f,ebx
  40ab66:	jmp    0x40ab20
  40ab6b:	mov    DWORD PTR [ebp-0x24],eax
  40ab6e:	sub    DWORD PTR ds:0x42a183,0x244c
  40ab78:	mov    eax,DWORD PTR [ebp-0x4]
  40ab7b:	xor    eax,esi
  40ab7d:	neg    DWORD PTR ds:0x42a1c7
  40ab83:	add    eax,edi
  40ab85:	and    DWORD PTR ds:0x42a18b,0x0
  40ab8f:	jmp    0x40aba1
  40ab94:	mov    ebx,DWORD PTR ds:0x42a18b
  40ab9a:	inc    ebx
  40ab9b:	mov    DWORD PTR ds:0x42a18b,ebx
  40aba1:	cmp    DWORD PTR ds:0x42a18b,0x19
  40aba8:	jae    0x40abe5
  40abae:	cmp    DWORD PTR ds:0x42a18b,0xf
  40abb5:	jb     0x40abe5
  40abbb:	jmp    0x40abc6
  40abc0:	call   DWORD PTR ds:0x42a29b
  40abc6:	cmp    DWORD PTR ds:0x42a18b,0xe
  40abcd:	jne    0x40abe0
  40abd3:	mov    ebx,DWORD PTR ds:0x42a18b
  40abd9:	inc    ebx
  40abda:	mov    DWORD PTR ds:0x42a18b,ebx
  40abe0:	jmp    0x40ab94
  40abe5:	mov    DWORD PTR [ebp-0x30],eax
  40abe8:	mov    ebx,DWORD PTR [ebp-0x4]
  40abeb:	and    DWORD PTR ds:0x42a13f,ecx
  40abf1:	xor    ebx,esi
  40abf3:	and    DWORD PTR ds:0x42a17f,0x0
  40abfd:	jmp    0x40ac0d
  40ac02:	mov    eax,ds:0x42a17f
  40ac07:	inc    eax
  40ac08:	mov    ds:0x42a17f,eax
  40ac0d:	cmp    DWORD PTR ds:0x42a17f,0x13
  40ac14:	jae    0x40ac61
  40ac1a:	cmp    DWORD PTR ds:0x42a17f,0x6
  40ac21:	jb     0x40ac61
  40ac27:	jmp    0x40ac44
  40ac2c:	push   0x65b7
  40ac31:	push   0x437f
  40ac36:	push   0x4291f1
  40ac3b:	push   DWORD PTR [ebp-0x1c]
  40ac3e:	call   DWORD PTR ds:0x42a2a3
  40ac44:	cmp    DWORD PTR ds:0x42a17f,0x5
  40ac4b:	jne    0x40ac5c
  40ac51:	mov    eax,ds:0x42a17f
  40ac56:	inc    eax
  40ac57:	mov    ds:0x42a17f,eax
  40ac5c:	jmp    0x40ac02
  40ac61:	add    ebx,edi
  40ac63:	mov    DWORD PTR ds:0x42a147,0x13
  40ac6d:	cmp    DWORD PTR ds:0x42a147,0x0
  40ac74:	je     0x40aca2
  40ac7a:	cmp    DWORD PTR ds:0x42a147,0x18
  40ac81:	jg     0x40aca2
  40ac87:	jmp    0x40ac92
  40ac8c:	call   DWORD PTR ds:0x42a2a7
  40ac92:	mov    eax,ds:0x42a147
  40ac97:	dec    eax
  40ac98:	mov    ds:0x42a147,eax
  40ac9d:	jmp    0x40ac6d
  40aca2:	mov    eax,DWORD PTR [ebp-0x24]
  40aca5:	or     DWORD PTR ds:0x42a177,0x6e45
  40acaf:	sub    eax,edi
  40acb1:	sub    DWORD PTR ds:0x42a143,0x42a193
  40acbb:	lea    ecx,[ebx-0x3272ef]
  40acc1:	xor    eax,esi
  40acc3:	xor    ecx,esi
  40acc5:	mov    DWORD PTR ds:0x42a1b7,0x526e
  40accf:	cmp    ecx,eax
  40acd1:	je     0x40aeaf
  40acd7:	or     DWORD PTR ds:0x42a127,0x176b
  40ace1:	mov    eax,DWORD PTR [ebp-0x4]
  40ace4:	xor    eax,esi
  40ace6:	add    DWORD PTR ds:0x42a14f,0x42a14b
  40acf0:	add    eax,edi
  40acf2:	cmp    ebx,eax
  40acf4:	mov    DWORD PTR ds:0x42a1bf,0x7cb
  40acfe:	jne    0x40ae8c
  40ad04:	xor    DWORD PTR ds:0x42a163,0x47ee
  40ad0e:	push   DWORD PTR [ebp+0x8]
  40ad11:	not    DWORD PTR ds:0x42a177
  40ad17:	call   0x424c96
  40ad1c:	mov    DWORD PTR [ebp-0x14],eax
  40ad1f:	and    DWORD PTR ds:0x42a163,0x0
  40ad29:	mov    ecx,DWORD PTR ds:0x42a163
  40ad2f:	inc    ecx
  40ad30:	mov    DWORD PTR ds:0x42a163,ecx
  40ad36:	cmp    DWORD PTR ds:0x42a163,0x9
  40ad3d:	jle    0x40ad82
  40ad43:	jmp    0x40ad5b
  40ad48:	push   0x1fb9
  40ad4d:	push   0x42a1c3
  40ad52:	push   DWORD PTR [ebp-0x28]
  40ad55:	call   DWORD PTR ds:0x42a2ab
  40ad5b:	cmp    DWORD PTR ds:0x42a163,0x8
  40ad62:	jne    0x40ad75
  40ad68:	mov    ecx,DWORD PTR ds:0x42a163
  40ad6e:	inc    ecx
  40ad6f:	mov    DWORD PTR ds:0x42a163,ecx
  40ad75:	cmp    DWORD PTR ds:0x42a163,0x13
  40ad7c:	jb     0x40ad29
  40ad82:	mov    eax,DWORD PTR [ebp-0x4]
  40ad85:	sub    ecx,DWORD PTR ds:0x42a1af
  40ad8b:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad8e:	xor    DWORD PTR ds:0x42a137,0x508b
  40ad98:	xor    eax,esi
  40ad9a:	sub    DWORD PTR ds:0x42a177,0x58b3
  40ada4:	add    eax,edi
  40ada6:	mov    DWORD PTR ds:0x42a1cf,0x3d63
  40adb0:	cmp    ecx,eax
  40adb2:	mov    DWORD PTR ds:0x42a15f,0x56c5
  40adbc:	je     0x40af1a
  40adc2:	sub    DWORD PTR ds:0x42a15f,0x42a183
  40adcc:	push   DWORD PTR [ebp-0x14]
  40adcf:	add    DWORD PTR ds:0x42a147,0x42a193
  40add9:	push   DWORD PTR [ebp+0x8]
  40addc:	call   0x424d97
  40ade1:	mov    DWORD PTR [ebp-0x14],eax
  40ade4:	and    DWORD PTR ds:0x42a1af,0x0
  40adee:	mov    ecx,DWORD PTR ds:0x42a1af
  40adf4:	inc    ecx
  40adf5:	mov    DWORD PTR ds:0x42a1af,ecx
  40adfb:	cmp    DWORD PTR ds:0x42a1af,0xd
  40ae02:	ja     0x40ae48
  40ae08:	jmp    0x40ae21
  40ae0d:	push   0x24a8
  40ae12:	push   DWORD PTR [ebp-0x1c]
  40ae15:	push   DWORD PTR [ebp-0x14]
  40ae18:	push   DWORD PTR [ebp-0x10]
  40ae1b:	call   DWORD PTR ds:0x42a2af
  40ae21:	cmp    DWORD PTR ds:0x42a1af,0xc
  40ae28:	jne    0x40ae3b
  40ae2e:	mov    ecx,DWORD PTR ds:0x42a1af
  40ae34:	inc    ecx
  40ae35:	mov    DWORD PTR ds:0x42a1af,ecx
  40ae3b:	cmp    DWORD PTR ds:0x42a1af,0x18
  40ae42:	jb     0x40adee
  40ae48:	mov    eax,DWORD PTR [ebp-0x4]
  40ae4b:	mov    ecx,DWORD PTR [ebp-0x14]
  40ae4e:	xor    eax,esi
  40ae50:	add    eax,edi
  40ae52:	cmp    ecx,eax
  40ae54:	je     0x40af1a
  40ae5a:	mov    eax,DWORD PTR [ebp-0x14]
  40ae5d:	mov    eax,DWORD PTR [eax+0x18]
  40ae60:	mov    DWORD PTR [ebp-0x24],eax
  40ae63:	mov    eax,DWORD PTR [ebp-0x14]
  40ae66:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae69:	add    ecx,DWORD PTR [eax+0x20]
  40ae6c:	mov    DWORD PTR [ebp-0x2c],ecx
  40ae6f:	mov    eax,DWORD PTR [ebp-0x14]
  40ae72:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae75:	add    ecx,DWORD PTR [eax+0x24]
  40ae78:	mov    DWORD PTR [ebp-0x34],ecx
  40ae7b:	mov    eax,DWORD PTR [ebp-0x14]
  40ae7e:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae81:	add    ecx,DWORD PTR [eax+0x1c]
  40ae84:	mov    DWORD PTR [ebp-0x14],ecx
  40ae87:	jmp    0x40aee2
  40ae8c:	mov    eax,DWORD PTR [ebp-0x2c]
  40ae8f:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae92:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae95:	mov    DWORD PTR [ebp-0x28],ecx
  40ae98:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9b:	mov    ecx,DWORD PTR [ebp-0x28]
  40ae9e:	xor    eax,esi
  40aea0:	add    eax,edi
  40aea2:	cmp    ecx,eax
  40aea4:	je     0x40aee2
  40aeaa:	jmp    0x40aed3
  40aeaf:	mov    eax,DWORD PTR [ebp-0x4]
  40aeb2:	mov    ecx,DWORD PTR [ebp-0x8]
  40aeb5:	xor    eax,esi
  40aeb7:	add    eax,edi
  40aeb9:	cmp    ecx,eax
  40aebb:	mov    eax,DWORD PTR [ebp-0x4]
  40aebe:	je     0x40af1d
  40aec4:	mov    ecx,DWORD PTR [ebp-0x30]
  40aec7:	xor    eax,esi
  40aec9:	add    eax,edi
  40aecb:	cmp    ecx,eax
  40aecd:	je     0x40af26
  40aed3:	lea    eax,[ebp-0x8]
  40aed6:	push   eax
  40aed7:	push   DWORD PTR [ebp-0x28]
  40aeda:	push   DWORD PTR [ebp+0xc]
  40aedd:	call   0x40b11d
  40aee2:	mov    eax,DWORD PTR [ebp-0x4]
  40aee5:	mov    ecx,DWORD PTR [ebp-0x8]
  40aee8:	xor    eax,esi
  40aeea:	add    eax,edi
  40aeec:	cmp    ecx,eax
  40aeee:	je     0x40af09
  40aef4:	mov    eax,DWORD PTR [ebp-0x34]
  40aef7:	movzx  eax,WORD PTR [eax+ebx*2]
  40aefb:	mov    ecx,DWORD PTR [ebp-0x14]
  40aefe:	mov    eax,DWORD PTR [ecx+eax*4]
  40af01:	mov    DWORD PTR [ebp-0x38],eax
  40af04:	jmp    0x40aeaf
  40af09:	mov    eax,DWORD PTR [ebp-0xc]
  40af0c:	xor    eax,esi
  40af0e:	lea    ebx,[ebx+eax*1+0x3272ef]
  40af15:	jmp    0x40ac63
  40af1a:	mov    eax,DWORD PTR [ebp-0x4]
  40af1d:	xor    eax,esi
  40af1f:	add    eax,edi
  40af21:	jmp    0x40b045
  40af26:	mov    eax,DWORD PTR [ebp-0x38]
  40af29:	add    eax,DWORD PTR [ebp+0x8]
  40af2c:	mov    DWORD PTR [ebp-0x18],eax
  40af2f:	mov    eax,DWORD PTR [ebp-0x1c]
  40af32:	test   eax,eax
  40af34:	je     0x40afce
  40af3a:	mov    DWORD PTR [ebp-0x20],0x0
  40af41:	push   0x3
  40af43:	xor    edx,edx
  40af45:	pop    edx
  40af46:	add    edx,0x8
  40af49:	push   edx
  40af4a:	pop    ecx
  40af4b:	push   0x6
  40af4d:	dec    ecx
  40af4e:	pop    ebx
  40af4f:	dec    ebx
  40af50:	xchg   ebx,ecx
  40af52:	sub    ebx,ecx
  40af54:	xchg   ebx,ecx
  40af56:	dec    ecx
  40af57:	mov    eax,DWORD PTR [ebp-0x1c]
  40af5a:	imul   eax,ecx
  40af5d:	sub    esp,eax
  40af5f:	mov    DWORD PTR [ebp-0x20],esp
  40af62:	mov    eax,DWORD PTR [ebp-0x4]
  40af65:	xor    eax,esi
  40af67:	add    eax,edi
  40af69:	jmp    0x40afa7
  40af6e:	mov    ecx,DWORD PTR [ebp-0xc]
  40af71:	mov    eax,DWORD PTR [ebp+0x8]
  40af74:	mov    edx,DWORD PTR [ebp+0x14]
  40af77:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40af7b:	xor    ecx,esi
  40af7d:	add    ecx,edi
  40af7f:	xor    edx,edx
  40af81:	div    ecx
  40af83:	mov    ecx,DWORD PTR [ebp-0x4]
  40af86:	xor    ecx,esi
  40af88:	lea    eax,[ecx+eax*1+0x3272ef]
  40af8f:	mov    ecx,DWORD PTR [ebp+0x8]
  40af92:	mov    edx,DWORD PTR [ebp-0x20]
  40af95:	mov    DWORD PTR [edx+ecx*4],eax
  40af98:	mov    eax,DWORD PTR [ebp-0xc]
  40af9b:	mov    ecx,DWORD PTR [ebp+0x8]
  40af9e:	xor    eax,esi
  40afa0:	lea    eax,[eax+ecx*1+0x3272ef]
  40afa7:	mov    DWORD PTR [ebp+0x8],eax
  40afaa:	mov    eax,DWORD PTR [ebp-0xc]
  40afad:	mov    ecx,DWORD PTR [ebp+0x14]
  40afb0:	xor    eax,esi
  40afb2:	add    eax,edi
  40afb4:	imul   eax,DWORD PTR [ecx]
  40afb7:	mov    ecx,DWORD PTR [ebp-0x4]
  40afba:	mov    edx,DWORD PTR [ebp+0x8]
  40afbd:	xor    ecx,esi
  40afbf:	lea    ecx,[ecx+edx*1+0x3272ef]
  40afc6:	cmp    ecx,eax
  40afc8:	jne    0x40af6e
  40afce:	mov    eax,DWORD PTR [ebp-0x4]
  40afd1:	xor    eax,esi
  40afd3:	add    eax,edi
  40afd5:	mov    DWORD PTR [ebp-0x10],eax
  40afd8:	mov    ebx,0x65655
  40afdd:	add    ebx,0x3234
  40afe3:	xchg   ebx,esi
  40afe5:	xor    ebx,ebx
  40afe7:	push   esi
  40afe8:	mov    esi,ebx
  40afea:	pop    ebx
  40afeb:	mov    edx,esi
  40afed:	add    ebx,0x1002
  40aff3:	lea    eax,[ebp-0x18]
  40aff6:	add    edx,eax
  40aff8:	add    edx,0x5
  40affb:	push   edx
  40affc:	inc    esi
  40affd:	pop    ecx
  40affe:	dec    ecx
  40afff:	xchg   ecx,eax
  40b000:	dec    eax
  40b001:	xchg   ecx,eax
  40b002:	dec    ecx
  40b003:	xchg   ecx,edx
  40b005:	dec    edx
  40b006:	push   edx
  40b007:	mov    edx,ebx
  40b009:	pop    ebx
  40b00a:	dec    ebx
  40b00b:	call   DWORD PTR [ebx]
  40b00d:	cmp    DWORD PTR [ebp+0x10],esi
  40b010:	je     0x40b031
  40b016:	xchg   edx,eax
  40b017:	push   0xc
  40b019:	pop    ecx
  40b01a:	dec    ecx
  40b01b:	push   0x3
  40b01d:	pop    ebx
  40b01e:	inc    ebx
  40b01f:	xchg   ebx,ecx
  40b021:	inc    ecx
  40b022:	sub    ebx,ecx
  40b024:	xchg   ebx,ecx
  40b026:	dec    ecx
  40b027:	dec    ecx
  40b028:	mov    eax,DWORD PTR [ebp-0x1c]
  40b02b:	imul   eax,ecx
  40b02e:	add    esp,eax
  40b030:	xchg   edx,eax
  40b031:	push   eax
  40b032:	xor    ebx,ebx
  40b034:	mov    edx,esp
  40b036:	dec    edx
  40b037:	inc    ebx
  40b038:	add    ebx,DWORD PTR [edx+ebx*1]
  40b03b:	dec    ebx
  40b03c:	xor    edx,edx
  40b03e:	add    DWORD PTR [ebp-0x10],ebx
  40b041:	pop    ebx
  40b042:	mov    eax,DWORD PTR [ebp-0x10]
  40b045:	pop    edi
  40b046:	pop    esi
  40b047:	pop    ebx
  40b048:	leave  
  40b049:	ret    0x10
  40b04c:	push   ebp
  40b04d:	mov    ebp,esp
  40b04f:	push   ecx
  40b050:	and    DWORD PTR ds:0x42a13f,0x0
  40b05a:	mov    ecx,DWORD PTR ds:0x42a13f
  40b060:	inc    ecx
  40b061:	mov    DWORD PTR ds:0x42a13f,ecx
  40b067:	cmp    DWORD PTR ds:0x42a13f,0x9
  40b06e:	jl     0x40b0b8
  40b074:	jmp    0x40b091
  40b079:	push   0x2d70
  40b07e:	push   DWORD PTR [ebp-0x14]
  40b081:	push   0x42a187
  40b086:	push   0x2ee9
  40b08b:	call   DWORD PTR ds:0x42a2b3
  40b091:	cmp    DWORD PTR ds:0x42a13f,0x8
  40b098:	jne    0x40b0ab
  40b09e:	mov    ecx,DWORD PTR ds:0x42a13f
  40b0a4:	inc    ecx
  40b0a5:	mov    DWORD PTR ds:0x42a13f,ecx
  40b0ab:	cmp    DWORD PTR ds:0x42a13f,0x1b
  40b0b2:	jb     0x40b05a
  40b0b8:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40b0bf:	mov    eax,DWORD PTR [ebp-0x4]
  40b0c2:	mov    edx,DWORD PTR [ebp+0x10]
  40b0c5:	and    ecx,DWORD PTR ds:0x42a1a7
  40b0cb:	mov    ecx,0x75108a8
  40b0d0:	or     DWORD PTR ds:0x42a187,0x42a183
  40b0da:	xor    eax,ecx
  40b0dc:	add    eax,0x3272ef
  40b0e1:	mov    DWORD PTR [edx],eax
  40b0e3:	mov    eax,DWORD PTR [ebp+0xc]
  40b0e6:	xor    eax,ecx
  40b0e8:	push   esi
  40b0e9:	mov    esi,DWORD PTR [ebp+0x10]
  40b0ec:	mov    edx,0x3272ef
  40b0f1:	add    eax,edx
  40b0f3:	mov    DWORD PTR [esi+0x4],eax
  40b0f6:	mov    eax,DWORD PTR [ebp+0x14]
  40b0f9:	mov    esi,DWORD PTR [ebp+0x10]
  40b0fc:	mov    DWORD PTR [esi+0x8],eax
  40b0ff:	mov    eax,DWORD PTR [ebp+0x18]
  40b102:	mov    esi,DWORD PTR [ebp+0x10]
  40b105:	mov    DWORD PTR [esi+0xc],eax
  40b108:	mov    eax,DWORD PTR [ebp+0x1c]
  40b10b:	mov    esi,DWORD PTR [ebp+0x10]
  40b10e:	mov    DWORD PTR [esi+0x10],eax
  40b111:	mov    eax,DWORD PTR [ebp+0x8]
  40b114:	xor    eax,ecx
  40b116:	add    eax,edx
  40b118:	pop    esi
  40b119:	leave  
  40b11a:	ret    0x18
  40b11d:	push   ebp
  40b11e:	mov    ebp,esp
  40b120:	sub    esp,0x9c
  40b126:	mov    ecx,DWORD PTR [ebp+0x8]
  40b129:	and    DWORD PTR ds:0x42a17f,0x0
  40b133:	mov    eax,ds:0x42a17f
  40b138:	inc    eax
  40b139:	mov    ds:0x42a17f,eax
  40b13e:	cmp    DWORD PTR ds:0x42a17f,0x9
  40b145:	jbe    0x40b18f
  40b14b:	jmp    0x40b16a
  40b150:	push   0x42a15f
  40b155:	push   0x468f
  40b15a:	push   0x42900e
  40b15f:	push   0x4290e5
  40b164:	call   DWORD PTR ds:0x42a2b7
  40b16a:	cmp    DWORD PTR ds:0x42a17f,0x8
  40b171:	jne    0x40b182
  40b177:	mov    eax,ds:0x42a17f
  40b17c:	inc    eax
  40b17d:	mov    ds:0x42a17f,eax
  40b182:	cmp    DWORD PTR ds:0x42a17f,0x13
  40b189:	jb     0x40b133
  40b18f:	mov    eax,0x8a96
  40b194:	xor    ax,WORD PTR [ecx+0x20]
  40b198:	add    DWORD PTR ds:0x42a18f,ecx
  40b19e:	mov    ecx,0x3b59
  40b1a3:	adc    DWORD PTR ds:0x42a1af,0x457a
  40b1ad:	add    ax,cx
  40b1b0:	movzx  eax,ax
  40b1b3:	mov    DWORD PTR ds:0x42a16b,0x1b
  40b1bd:	cmp    DWORD PTR ds:0x42a16b,0x0
  40b1c4:	je     0x40b1f7
  40b1ca:	cmp    DWORD PTR ds:0x42a16b,0x1f
  40b1d1:	ja     0x40b1f7
  40b1d7:	jmp    0x40b1e5
  40b1dc:	push   DWORD PTR [ebp-0x1c]
  40b1df:	call   DWORD PTR ds:0x42a2bf
  40b1e5:	mov    ecx,DWORD PTR ds:0x42a16b
  40b1eb:	dec    ecx
  40b1ec:	mov    DWORD PTR ds:0x42a16b,ecx
  40b1f2:	jmp    0x40b1bd
  40b1f7:	mov    DWORD PTR [ebp-0x10],eax
  40b1fa:	jmp    0x40d57f
  40b1ff:	inc    ecx
  40b200:	pop    edx
  40b201:	cmp    edi,esi
  40b203:	and    DWORD PTR [edi-0x78343779],edx
  40b209:	dec    ebp
  40b20a:	pop    eax
  40b20b:	jnp    0x40b1f3
  40b20d:	or     BYTE PTR [esi+0x7a7af536],cl
  40b213:	adc    bl,BYTE PTR [edi+0x7a]
  40b216:	jp     0x40b1cf
  40b218:	std    
  40b219:	in     al,0xf9
  40b21b:	sub    BYTE PTR [edx-0x53455e8c],dh
  40b221:	push   0xffffff85
  40b223:	ret    0x968c
  40b226:	rcr    DWORD PTR [esi+0x62],cl
  40b229:	nop
  40b22a:	frstor [edx]
  40b22c:	xor    BYTE PTR [ebx],dh
  40b22e:	hlt    
  40b22f:	(bad)  es:[edi]
  40b232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b233:	cs nop
  40b235:	mov    esp,0xd738c2fc
  40b23a:	and    al,0xe7
  40b23c:	and    BYTE PTR [edi+ebx*2],bh
  40b23f:	pusha  
  40b240:	aad    0xe7
  40b242:	outs   dx,BYTE PTR ds:[esi]
  40b243:	add    ebx,ebx
  40b245:	es inc ebp
  40b247:	ret    0xc1b4
  40b24a:	ret    
  40b24b:	add    ebx,DWORD PTR [eax]
  40b24d:	aam    0x3e
  40b24f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b250:	ficom  WORD PTR [ebx-0x76]
  40b253:	(bad)  
  40b254:	pop    ecx
  40b255:	test   ecx,ecx
  40b257:	mov    bl,BYTE PTR [edi-0x80]
  40b25a:	sub    DWORD PTR [ecx],edi
  40b25c:	rol    BYTE PTR [edx+0x4c060889],0xdc
  40b263:	jmp    0xc654:0xde0d
  40b269:	stc    
  40b26a:	dec    esp
  40b26b:	jle    0x40b233
  40b26d:	aam    0xd7
  40b26f:	loop   0x40b283
  40b271:	jbe    0x40b2f2
  40b273:	inc    edi
  40b274:	xlat   BYTE PTR ds:[ebx]
  40b275:	push   0x6b
  40b277:	push   eax
  40b278:	sbb    eax,0x6f7268c9
  40b27d:	scas   eax,DWORD PTR es:[edi]
  40b27e:	aam    0xa5
  40b280:	aas    
  40b281:	pop    edi
  40b282:	in     al,0x39
  40b284:	xchg   esp,eax
  40b285:	int    0x14
  40b287:	aad    0xf
  40b289:	cmp    bh,dl
  40b28b:	sbb    DWORD PTR [ebx],edx
  40b28d:	fisubr WORD PTR [ebx+0x7b]
  40b290:	fstp   DWORD PTR [ebp+0x1c905f02]
  40b296:	dec    ebx
  40b297:	push   esi
  40b298:	jl     0x40b318
  40b29a:	out    0x6d,eax
  40b29c:	inc    edi
  40b29d:	pusha  
  40b29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b29f:	ja     0x40b225
  40b2a1:	fwait
  40b2a2:	test   BYTE PTR [edx+esi*1-0x74],bl
  40b2a6:	add    DWORD PTR [esi],esp
  40b2a8:	cmp    dh,BYTE PTR [esi]
  40b2aa:	lock lock popw es
  40b2ae:	int    0x4f
  40b2b0:	add    al,0xce
  40b2b2:	(bad)  
  40b2b3:	xor    DWORD PTR [ebx-0x1f88176e],ebp
  40b2b9:	call   DWORD PTR ss:[esi+0x3d86d366]
  40b2c0:	add    al,0x6
  40b2c2:	nop
  40b2c3:	std    
  40b2c4:	mov    eax,0xfa830c5f
  40b2c9:	je     0x40b280
  40b2cb:	sub    eax,0xfacb0e1d
  40b2d0:	sar    BYTE PTR [edx+0x3d],0xc9
  40b2d4:	mov    ch,0x22
  40b2d6:	in     al,0xcf
  40b2d8:	pop    ecx
  40b2d9:	aaa    
  40b2da:	dec    ebx
  40b2db:	and    BYTE PTR [eax+0x13],cl
  40b2de:	dec    esi
  40b2df:	or     ah,BYTE PTR [edx]
  40b2e1:	adc    BYTE PTR [edi],cl
  40b2e3:	xchg   edx,eax
  40b2e4:	in     al,0x64
  40b2e6:	mul    dh
  40b2e8:	xlat   BYTE PTR ds:[ebx]
  40b2e9:	push   es
  40b2ea:	icebp  
  40b2eb:	dec    ecx
  40b2ec:	imul   ebx,ebx,0xffffffa7
  40b2ef:	jae    0x40b340
  40b2f1:	mov    eax,ds:0x9cf0f53f
  40b2f6:	ins    BYTE PTR es:[edi],dx
  40b2f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2f8:	adc    bl,ah
  40b2fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2fb:	or     BYTE PTR [ebx+0x503caa69],bl
  40b301:	xchg   ebp,eax
  40b302:	and    eax,0xf14d68bd
  40b307:	pop    esi
  40b308:	inc    ebp
  40b309:	data16 mov dl,0xd0
  40b30c:	cmp    ebp,esi
  40b30e:	cs mov sp,0xf3da
  40b313:	push   cs
  40b314:	ja     0x40b2ed
  40b316:	cmp    al,0x61
  40b318:	pusha  
  40b319:	xchg   esp,eax
  40b31a:	arpl   WORD PTR [ebp+0x7fcc1e38],sp
  40b320:	inc    edi
  40b321:	cmp    esp,DWORD PTR [ebx-0x53867393]
  40b327:	(bad)  
  40b328:	out    dx,al
  40b329:	inc    ebp
  40b32a:	sbb    al,BYTE PTR [edi]
  40b32c:	les    edi,FWORD PTR [ecx+edi*4+0x7]
  40b330:	sahf   
  40b331:	jecxz  0x40b2be
  40b333:	pop    esi
  40b334:	aam    0x58
  40b336:	out    0xeb,al
  40b338:	ins    DWORD PTR es:[edi],dx
  40b339:	gs pop ecx
  40b33b:	jb     0x40b383
  40b33d:	ret    0x8bd8
  40b340:	hlt    
  40b341:	adc    eax,0xbac623f0
  40b346:	ficomp WORD PTR [ecx]
  40b348:	xor    DWORD PTR [edx],ebx
  40b34a:	aaa    
  40b34b:	push   edi
  40b34c:	pop    ebx
  40b34d:	inc    esi
  40b34e:	mov    ebp,0xf9e27e4
  40b353:	es scas al,BYTE PTR es:[edi]
  40b355:	repz mov ah,0xee
  40b358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b359:	stc    
  40b35a:	xor    eax,DWORD PTR [edi+0x1f]
  40b35d:	adc    ch,0xf0
  40b360:	pop    es
  40b361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b362:	adc    esi,DWORD PTR [ecx+0x28e208]
  40b368:	sub    eax,0x9ef613d7
  40b36d:	push   edi
  40b36e:	(bad)  
  40b36f:	call   DWORD PTR [eax]
  40b371:	clc    
  40b372:	(bad)  
  40b373:	pop    eax
  40b374:	(bad)  
  40b375:	ins    DWORD PTR es:[edi],dx
  40b376:	ins    BYTE PTR es:[edi],dx
  40b377:	sub    al,0xca
  40b379:	xchg   ecx,eax
  40b37a:	sub    eax,0xee001dd6
  40b37f:	ror    BYTE PTR [eax],cl
  40b381:	jmp    0x40b323
  40b383:	repz lds edi,FWORD PTR [edx+edi*8+0x224c3d9e]
  40b38b:	adc    al,0x61
  40b38d:	push   ecx
  40b38e:	ror    BYTE PTR [ecx],1
  40b390:	adc    al,0x25
  40b392:	cmp    BYTE PTR [edx-0x56a6ca9],dl
  40b398:	push   0x9115bc67
  40b39d:	push   edi
  40b39e:	je     0x40b41f
  40b3a0:	pop    eax
  40b3a1:	int3   
  40b3a2:	daa    
  40b3a3:	rol    DWORD PTR [esi+0x27],1
  40b3a6:	fisttp WORD PTR [eax-0x19]
  40b3a9:	mov    ah,0xff
  40b3ab:	xchg   edx,eax
  40b3ac:	ins    DWORD PTR es:[edi],dx
  40b3ad:	out    0x36,eax
  40b3af:	rcl    bh,0x28
  40b3b2:	(bad)  
  40b3b4:	lock push ebx
  40b3b6:	test   BYTE PTR [edx],dh
  40b3b8:	mov    edi,0x1727ef89
  40b3bd:	idiv   BYTE PTR [eax-0x7b]
  40b3c0:	in     al,0x25
  40b3c2:	aam    0xf0
  40b3c4:	push   es
  40b3c5:	xor    dh,ch
  40b3c7:	inc    ebp
  40b3c8:	or     DWORD PTR [ebp-0x75],ebp
  40b3cb:	mov    esi,0x7facaf05
  40b3d0:	add    ecx,eax
  40b3d2:	mov    al,0x2a
  40b3d4:	pop    esp
  40b3d5:	mov    ah,0x5b
  40b3d7:	je     0x40b3d2
  40b3d9:	adc    al,0x1c
  40b3db:	push   edx
  40b3dc:	sub    ch,BYTE PTR [edx-0x712e737f]
  40b3e2:	sub    cl,BYTE PTR [edx]
  40b3e4:	dec    ebp
  40b3e5:	pause  
  40b3e7:	nop
  40b3e8:	pop    esp
  40b3e9:	xor    BYTE PTR [ecx+esi*8-0x7e],0xa4
  40b3ee:	jnp    0x40b3ed
  40b3f0:	jo     0x40b3be
  40b3f2:	mov    eax,0x319cc712
  40b3f7:	mov    al,0xb5
  40b3f9:	adc    eax,0x8fe719cc
  40b3fe:	out    0x35,al
  40b400:	ret    0x2efb
  40b403:	xor    DWORD PTR [ecx],ebp
  40b405:	xor    DWORD PTR [eax+0x7f315148],ebp
  40b40b:	mov    esp,0x6e22cf6c
  40b410:	fnstsw WORD PTR [esi-0x2c]
  40b413:	push   ebx
  40b414:	push   cs
  40b415:	pop    edx
  40b416:	jbe    0x40b3c8
  40b418:	mov    al,ds:0xe2ad7ba5
  40b41d:	push   esi
  40b41e:	push   ebp
  40b41f:	sub    edx,DWORD PTR [ebp-0x33]
  40b422:	lods   eax,DWORD PTR ds:[esi]
  40b423:	daa    
  40b424:	outs   dx,DWORD PTR ds:[esi]
  40b425:	retf   
  40b426:	mov    esi,DWORD PTR [ebx+0x67cf53ab]
  40b42c:	popf   
  40b42d:	bound  esi,QWORD PTR ds:0x258d1cdc
  40b433:	fsub   st(0),st
  40b435:	stos   DWORD PTR es:[edi],eax
  40b436:	pushf  
  40b437:	test   BYTE PTR [esi+eax*1],dh
  40b43a:	dec    ebp
  40b43b:	mov    ecx,DWORD PTR [ecx]
  40b43d:	(bad)  [eax]
  40b43f:	icebp  
  40b440:	dec    edx
  40b441:	xor    DWORD PTR [edx-0x23],eax
  40b444:	cmc    
  40b445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b446:	xchg   DWORD PTR [edi+0x72b4e51d],edi
  40b44c:	cmp    ah,al
  40b44e:	or     ah,bh
  40b450:	ret    0xccb6
  40b453:	add    esi,ecx
  40b455:	sbb    eax,0x4ba5d3ce
  40b45a:	stos   DWORD PTR es:[edi],eax
  40b45b:	push   esi
  40b45c:	in     eax,0xa4
  40b45e:	repnz enter 0x17c6,0x45
  40b463:	xor    al,0xee
  40b465:	mov    cl,0xdb
  40b467:	push   ebx
  40b468:	push   DWORD PTR [esp+eax*2-0x8]
  40b46c:	adc    DWORD PTR [eax],0x7d06e5bb
  40b472:	sbb    ecx,ebx
  40b474:	pop    ss
  40b475:	les    esp,FWORD PTR [ebx+eiz*8-0x2f440cd2]
  40b47c:	pop    ss
  40b47d:	add    eax,DWORD PTR [eax+0x5a]
  40b480:	mov    bh,0x2c
  40b482:	add    eax,0x26d408c1
  40b487:	adc    edx,DWORD PTR [eax]
  40b489:	xor    DWORD PTR [esi],esp
  40b48b:	cmp    edx,DWORD PTR ss:[ecx+edx*1-0xade6b53]
  40b493:	pop    es
  40b494:	jnp    0x40b4e4
  40b496:	rol    ebp,cl
  40b498:	push   cs
  40b499:	mov    ds:0xa4e3663,al
  40b49e:	sub    eax,0x85fcfc6
  40b4a3:	imul   ebp,DWORD PTR [edx+0x7b],0x245f5131
  40b4aa:	jae    0x40b45a
  40b4ac:	mov    eax,ds:0x8deab0c6
  40b4b1:	or     al,0x82
  40b4b3:	add    eax,0x8120a9df
  40b4b8:	jmp    0x7bf7:0xea0b1a0d
  40b4bf:	(bad)  
  40b4c0:	sbb    eax,0x6d9a748a
  40b4c5:	jno    0x40b515
  40b4c7:	or     eax,ecx
  40b4c9:	cmp    al,0xbd
  40b4cb:	jae    0x40b4dc
  40b4cd:	rcl    BYTE PTR [ebx-0x1],1
  40b4d0:	jl     0x40b4eb
  40b4d2:	mov    ebp,0x3154525d
  40b4d7:	sub    ecx,DWORD PTR ds:0x82051ad4
  40b4dd:	dec    ecx
  40b4de:	loopne 0x40b4a2
  40b4e0:	dec    esi
  40b4e1:	xchg   BYTE PTR [ebp-0x12bcfc4b],bl
  40b4e7:	not    DWORD PTR [edi-0x20]
  40b4ea:	add    BYTE PTR [edx+0x2f],al
  40b4ed:	cmp    BYTE PTR [edi+0x78531b79],cl
  40b4f3:	sub    eax,0xf5781de
  40b4f8:	cmp    DWORD PTR [ebx+0x44c3b33],eax
  40b4fe:	cmp    dh,dl
  40b500:	mov    ebx,0xb1f1a6ed
  40b505:	gs mov bl,0xf7
  40b508:	gs daa 
  40b50a:	fwait
  40b50b:	or     eax,0x6a564db1
  40b510:	arpl   WORD PTR [ecx],ax
  40b512:	hlt    
  40b513:	repz xor eax,0xfd178e72
  40b519:	(bad)  [esi-0x4c]
  40b51c:	das    
  40b51d:	add    al,0x74
  40b51f:	mov    DWORD PTR [ebp-0x19],esi
  40b522:	push   0xffffffd1
  40b524:	frstor [edi+0x1287e8cf]
  40b52a:	fisubr DWORD PTR [edx]
  40b52c:	cmp    al,0x3
  40b52e:	dec    ebp
  40b52f:	popa   
  40b530:	(bad)  
  40b531:	mov    bh,0x11
  40b533:	fld    TBYTE PTR [ebp-0x6ab463f9]
  40b539:	mov    edx,0x41f5813f
  40b53e:	call   0x76468267
  40b543:	js     0x40b4c9
  40b545:	retf   
  40b546:	(bad)  
  40b547:	shl    BYTE PTR [esi],1
  40b549:	xchg   edx,eax
  40b54a:	bound  ebx,QWORD PTR [ebx]
  40b54c:	out    0x3c,al
  40b54e:	mov    ah,0xe4
  40b550:	inc    edi
  40b551:	bnd jp 0x40b598
  40b554:	jmp    0x409a513c
  40b559:	scas   al,BYTE PTR es:[edi]
  40b55a:	push   cs
  40b55b:	and    eax,0xbd4c29e2
  40b560:	sahf   
  40b561:	jg     0x40b5aa
  40b563:	cmp    dh,ch
  40b565:	cdq    
  40b566:	adc    bh,BYTE PTR [edx-0x20]
  40b569:	jl     0x40b5e0
  40b56b:	es ret 
  40b56d:	js     0x40b5bf
  40b56f:	repnz lea esi,[ecx-0x59628439]
  40b576:	pop    edx
  40b577:	jge    0x40b5b7
  40b579:	inc    ecx
  40b57a:	jno    0x40b552
  40b57c:	push   esi
  40b57d:	xor    BYTE PTR [ecx+edx*8-0x46],0x8a
  40b582:	mov    dl,0x6e
  40b584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b585:	outs   dx,DWORD PTR ds:[esi]
  40b586:	mov    ebx,0x5083bc3
  40b58b:	(bad)  
  40b58c:	nop
  40b58d:	retf   0xab7a
  40b590:	mov    ch,0x1c
  40b592:	mov    ds:0x81dbcf83,al
  40b597:	nop
  40b598:	xor    edi,0xb1d0f1cd
  40b59e:	inc    ebx
  40b59f:	iret   
  40b5a0:	enter  0x67fc,0x83
  40b5a4:	jne    0x40b527
  40b5a6:	sbb    BYTE PTR [edx],0x39
  40b5a9:	push   esi
  40b5aa:	xor    BYTE PTR ds:0x45794a26,dl
  40b5b0:	adc    eax,0x1ddfd403
  40b5b5:	push   esi
  40b5b6:	fsubr  DWORD PTR [edx+ebp*2+0x54]
  40b5ba:	call   0x8694a5c7
  40b5bf:	jb     0x40b56c
  40b5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c2:	lahf   
  40b5c3:	mov    dl,cl
  40b5c5:	shr    BYTE PTR [eax-0xc],cl
  40b5c8:	popa   
  40b5c9:	sub    BYTE PTR [ecx],al
  40b5cb:	ins    DWORD PTR es:[edi],dx
  40b5cc:	adc    eax,0x918ae93d
  40b5d1:	add    ch,BYTE PTR [ebx-0x3d4c2b2e]
  40b5d7:	(bad)  
  40b5d8:	repz adc BYTE PTR [edx+0x405799be],bh
  40b5df:	test   esp,eax
  40b5e1:	mov    ebx,0x69e432a5
  40b5e6:	mov    al,ds:0x38092982
  40b5eb:	bound  eax,QWORD PTR [edx+0x61]
  40b5ee:	fcom   st(6)
  40b5f0:	loopne 0x40b5ce
  40b5f2:	les    edx,FWORD PTR [edi+edx*1]
  40b5f5:	push   edx
  40b5f6:	loope  0x40b5cd
  40b5f8:	les    ebp,FWORD PTR [edi-0x6c]
  40b5fb:	inc    DWORD PTR [ecx-0x38]
  40b5fe:	xlat   BYTE PTR ds:[ebx]
  40b5ff:	jno    0x40b66c
  40b601:	mov    eax,ds:0xe9cfb90a
  40b606:	cli    
  40b607:	mov    dl,0x64
  40b609:	cli    
  40b60a:	xor    DWORD PTR ss:[ecx],eax
  40b60d:	dec    ebx
  40b60e:	xor    dh,bh
  40b610:	sub    DWORD PTR [edx+0x4e],eax
  40b613:	xor    BYTE PTR [edi],bh
  40b615:	mov    al,ds:0x1000e81d
  40b61a:	les    ebp,FWORD PTR [eax]
  40b61c:	pop    ss
  40b61d:	int3   
  40b61e:	dec    edi
  40b61f:	xlat   BYTE PTR ds:[ebx]
  40b620:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b622:	mov    ds:0x38fa5540,al
  40b627:	push   ecx
  40b628:	aad    0x58
  40b62a:	jno    0x40b61d
  40b62c:	xchg   ecx,eax
  40b62d:	sbb    DWORD PTR [edx+eax*1-0xe],ebx
  40b631:	mov    eax,0x582cdcca
  40b636:	adc    edi,DWORD PTR [edx-0x579b5129]
  40b63c:	adc    BYTE PTR [ebp-0x974db4b],al
  40b642:	sub    DWORD PTR [esi-0x54],0x14afe5e1
  40b649:	mov    ch,0x7
  40b64b:	cli    
  40b64c:	mov    esp,0x82bc3461
  40b651:	popa   
  40b652:	iret   
  40b653:	cmp    DWORD PTR [esi-0x5e],edx
  40b656:	clc    
  40b657:	imul   eax,ebp,0xe4fde3b9
  40b65d:	mov    dl,0x66
  40b65f:	xchg   ebx,eax
  40b660:	lea    ebp,[edi-0x282d8a12]
  40b666:	(bad)  
  40b667:	sti    
  40b668:	test   eax,0xd44b004b
  40b66d:	jb     0x40b6b8
  40b66f:	ja     0x40b601
  40b671:	cwde   
  40b672:	sub    bl,BYTE PTR [edi+0x201228cc]
  40b678:	scas   eax,DWORD PTR es:[edi]
  40b679:	jae    0x40b6f5
  40b67b:	jmp    0x40b64a
  40b67d:	sar    DWORD PTR [edi],0xe5
  40b680:	retf   0x5ad
  40b683:	jp     0x40b67c
  40b685:	xchg   edx,eax
  40b686:	clc    
  40b687:	jne    0x40b6eb
  40b689:	push   esi
  40b68a:	retf   
  40b68b:	and    dl,al
  40b68d:	enter  0x9dbb,0x77
  40b691:	inc    edi
  40b692:	inc    edx
  40b693:	int    0x6a
  40b695:	loopne 0x40b714
  40b697:	jno    0x40b6bc
  40b699:	jo     0x40b6a1
  40b69b:	je     0x40b6af
  40b69d:	imul   esi,DWORD PTR [ebx],0xaef33ac5
  40b6a3:	sbb    DWORD PTR ds:0x33037da4,ebx
  40b6a9:	inc    ebp
  40b6aa:	fwait
  40b6ab:	stos   DWORD PTR es:[edi],eax
  40b6ac:	js     0x40b67c
  40b6ae:	pop    ss
  40b6af:	add    al,0x59
  40b6b1:	xchg   edx,eax
  40b6b2:	into   
  40b6b3:	pop    edi
  40b6b4:	rol    DWORD PTR fs:[ecx],0x83
  40b6b8:	xchg   edx,eax
  40b6b9:	ret    0x808
  40b6bc:	mov    al,ds:0x406a2a1c
  40b6c1:	and    bl,BYTE PTR [eax-0x6494154b]
  40b6c7:	icebp  
  40b6c8:	out    dx,eax
  40b6c9:	popf   
  40b6ca:	sbb    DWORD PTR [eax+0x730bfc6e],eax
  40b6d0:	pop    ds
  40b6d1:	cmp    eax,0x3807e64d
  40b6d6:	adc    BYTE PTR [edi],cl
  40b6d8:	inc    ecx
  40b6d9:	jno    0x40b701
  40b6db:	outs   dx,BYTE PTR ds:[esi]
  40b6dc:	stc    
  40b6dd:	cmc    
  40b6de:	cmp    edx,DWORD PTR [eax]
  40b6e0:	jp     0x40b74d
  40b6e2:	cs (bad) 
  40b6e4:	outs   dx,BYTE PTR ds:[esi]
  40b6e5:	rol    BYTE PTR [eax+0x3a4b9f9f],1
  40b6eb:	scas   eax,DWORD PTR es:[di]
  40b6ed:	jb     0x40b73e
  40b6ef:	jns    0x40b75d
  40b6f1:	push   edi
  40b6f2:	lahf   
  40b6f3:	jb     0x40b679
  40b6f5:	in     eax,0x32
  40b6f7:	retf   0x9814
  40b6fa:	cmp    eax,0x1d839431
  40b6ff:	xchg   ebx,eax
  40b700:	clc    
  40b701:	mov    dl,0x4c
  40b703:	mov    BYTE PTR [edx],bl
  40b705:	cli    
  40b706:	jae    0x40b6e7
  40b708:	inc    esi
  40b709:	jmp    0x40b6a0
  40b70b:	mov    ebp,0x21131bae
  40b710:	pop    edi
  40b711:	out    dx,al
  40b712:	repz ror DWORD PTR [bp+di-0x5c],cl
  40b717:	or     ebx,DWORD PTR [esi+edi*1-0x5c78c4cf]
  40b71e:	lods   al,BYTE PTR ds:[esi]
  40b71f:	mov    ecx,0xa92c1a9c
  40b724:	fbld   TBYTE PTR [edi-0x49]
  40b727:	inc    esp
  40b728:	adc    esp,edx
  40b72a:	(bad)  
  40b72b:	pop    edx
  40b72c:	aam    0x81
  40b72e:	fwait
  40b72f:	icebp  
  40b730:	cmovl  ebx,DWORD PTR [ecx-0x58]
  40b734:	outs   dx,BYTE PTR ds:[esi]
  40b735:	mov    ebp,0x5b3ab033
  40b73a:	or     ah,BYTE PTR [eax]
  40b73c:	dec    esi
  40b73d:	mov    ebp,0x754dd79d
  40b742:	ins    DWORD PTR es:[edi],dx
  40b743:	pop    ds
  40b744:	dec    esp
  40b745:	pop    esi
  40b746:	mov    eax,0xfb779f4d
  40b74b:	into   
  40b74c:	sbb    eax,ebx
  40b74e:	or     edx,DWORD PTR [edi]
  40b750:	and    ebp,edx
  40b752:	mov    ss,eax
  40b754:	jp     0x40b762
  40b756:	in     eax,dx
  40b757:	lods   eax,DWORD PTR ds:[esi]
  40b758:	aas    
  40b759:	outs   dx,BYTE PTR ds:[esi]
  40b75a:	outs   dx,DWORD PTR ds:[esi]
  40b75b:	dec    edi
  40b75c:	and    dl,BYTE PTR [eax+eax*4-0x5c]
  40b760:	cmp    BYTE PTR [eax+0x1a40ddda],dl
  40b766:	test   eax,0x5bae7da0
  40b76b:	push   edi
  40b76c:	ud2    
  40b76e:	and    DWORD PTR [esi+esi*1+0x59],esi
  40b772:	cmp    eax,0x4440c86e
  40b777:	add    eax,DWORD PTR [edx+ebp*4+0x4a]
  40b77b:	and    DWORD PTR [ecx+0x43ae99f1],0xffffffbc
  40b782:	mov    WORD PTR [eax-0x6b],cs
  40b785:	push   esi
  40b786:	add    edx,DWORD PTR ds:0x39b08323
  40b78c:	dec    ecx
  40b78d:	pop    edx
  40b78e:	sbb    al,0xc2
  40b790:	xor    edx,DWORD PTR [ecx]
  40b792:	sbb    al,0x39
  40b794:	pop    edx
  40b795:	xchg   ebp,eax
  40b796:	in     eax,0xce
  40b798:	arpl   sp,bp
  40b79a:	iret   
  40b79b:	mov    bl,0xf1
  40b79d:	jae    0x40b7e8
  40b79f:	push   cs
  40b7a0:	mov    dl,0x5c
  40b7a2:	fsubr  DWORD PTR [ebp-0x72]
  40b7a5:	sbb    al,bl
  40b7a7:	dec    ebx
  40b7a8:	mov    al,ds:0xd2716d7c
  40b7ad:	lds    edx,FWORD PTR [ebx]
  40b7af:	mov    esi,0xafd82c7c
  40b7b4:	push   ebp
  40b7b5:	xchg   esp,eax
  40b7b6:	jb     0x40b7a3
  40b7b8:	xor    BYTE PTR [ecx+0x6],bl
  40b7bb:	cs jge 0x40b741
  40b7be:	mov    ds:0xe8513714,al
  40b7c3:	scas   al,BYTE PTR es:[edi]
  40b7c4:	fs push ss
  40b7c6:	cmp    DWORD PTR [edi],edx
  40b7c8:	fadd   DWORD PTR [ecx]
  40b7ca:	js     0x40b7a7
  40b7cc:	(bad)  [edx+0x19285344]
  40b7d2:	mov    ebx,0x475566f0
  40b7d7:	cli    
  40b7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d9:	xchg   DWORD PTR [ecx],edi
  40b7db:	sbb    cl,ah
  40b7dd:	add    al,0xff
  40b7df:	or     edx,eax
  40b7e1:	fild   WORD PTR [edi+0x60eb0684]
  40b7e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7e8:	ins    DWORD PTR es:[edi],dx
  40b7e9:	xor    cl,BYTE PTR cs:[esi]
  40b7ec:	mov    esp,0x21b97e32
  40b7f1:	fwait
  40b7f2:	jecxz  0x40b7af
  40b7f4:	sbb    eax,0x5d4971dc
  40b7f9:	(bad)  
  40b7fa:	xchg   ebp,eax
  40b7fb:	mov    ah,0x4
  40b7fd:	loop   0x40b837
  40b7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b800:	or     DWORD PTR [ebp+0x56bf162a],ebx
  40b806:	sbb    ebx,esp
  40b808:	call   FWORD PTR [ecx]
  40b80a:	cli    
  40b80b:	fistp  QWORD PTR [edi+esi*2-0x481f1ae7]
  40b812:	mov    bl,0xb8
  40b814:	and    DWORD PTR [ebx+0x41b36d3f],0xa2fcf840
  40b81e:	sbb    bl,BYTE PTR [edi-0xf]
  40b821:	scas   eax,DWORD PTR es:[edi]
  40b822:	dec    esi
  40b823:	jmp    0x51a06853
  40b828:	sub    al,0x84
  40b82a:	div    DWORD PTR [eax-0x25a60951]
  40b830:	hlt    
  40b831:	and    bh,BYTE PTR [eax-0x75d5e806]
  40b837:	(bad)
  40b83a:	push   es
  40b83b:	mov    dh,0xbf
  40b83d:	sti    
  40b83e:	inc    edi
  40b83f:	jmp    0xc879b5b4
  40b844:	fnstcw WORD PTR [edx]
  40b846:	sbb    al,0xd2
  40b848:	sub    eax,0x6f0de138
  40b84d:	jno    0x40b890
  40b84f:	mov    ebx,ebx
  40b851:	xchg   BYTE PTR [ecx-0x4a482fc0],ch
  40b857:	sbb    eax,eax
  40b859:	loop   0x40b7dd
  40b85b:	call   0xe581:0x7a6b8ec4
  40b862:	fwait
  40b863:	pop    esi
  40b864:	bound  ebp,QWORD PTR [ebx]
  40b866:	push   0x3d
  40b868:	mov    ds:0x43e3cb71,eax
  40b86d:	or     eax,0x4a27856c
  40b872:	ret    
  40b873:	cwde   
  40b874:	pop    ebx
  40b875:	imul   ebx,DWORD PTR [ebx],0xa2393437
  40b87b:	pop    edi
  40b87c:	out    dx,al
  40b87d:	sbb    dh,bh
  40b87f:	mov    DWORD PTR [edi],esp
  40b881:	xor    eax,0x33c726fa
  40b886:	mov    ds:0x989a47f4,al
  40b88b:	mov    eax,ds:0x3103f56d
  40b890:	aaa    
  40b891:	dec    eax
  40b892:	mov    ebx,0x10caa74c
  40b897:	lock rol BYTE PTR [edx],0x3a
  40b89b:	jg     0x40b8ef
  40b89d:	or     al,0x9b
  40b89f:	fst    DWORD PTR [esi]
  40b8a1:	imul   ebp,DWORD PTR [ebx],0xffffff80
  40b8a4:	jmp    0x253096bc
  40b8a9:	push   ebx
  40b8aa:	xor    DWORD PTR ds:0xe75b1b84,ebx
  40b8b0:	sub    al,0xb2
  40b8b2:	cmc    
  40b8b3:	fisttp QWORD PTR [eax+esi*4]
  40b8b6:	cli    
  40b8b7:	cdq    
  40b8b8:	mov    ch,0x91
  40b8ba:	rol    DWORD PTR [edi+0x29],cl
  40b8bd:	addr16 (bad) 
  40b8bf:	mov    esi,0x76a4521c
  40b8c4:	push   ecx
  40b8c5:	lahf   
  40b8c6:	lods   eax,DWORD PTR ds:[esi]
  40b8c7:	push   esi
  40b8c8:	mov    esp,0xf3722ca5
  40b8cd:	lods   eax,DWORD PTR ds:[esi]
  40b8ce:	dec    ebx
  40b8cf:	enter  0x5ba7,0xa
  40b8d3:	(bad)  
  40b8d4:	cmc    
  40b8d5:	xchg   esi,eax
  40b8d6:	(bad)  
  40b8d7:	jmp    0xa71e:0x6b37e640
  40b8de:	sbb    al,0xe6
  40b8e0:	mov    ?,WORD PTR [edi+0x2e02b80b]
  40b8e6:	pop    es
  40b8e7:	bound  edx,QWORD PTR [ebp+0x86bcea6]
  40b8ed:	js     0x40b947
  40b8ef:	fnstenv [eax+ebp*8]
  40b8f2:	shl    dh,0xd6
  40b8f5:	addr16 (bad) 
  40b8f7:	mov    eax,0x39a29a6f
  40b8fc:	jg     0x40b8b1
  40b8fe:	data16 cli 
  40b900:	cs sahf 
  40b902:	sbb    eax,0xf6528da6
  40b907:	aaa    
  40b908:	mov    fs,WORD PTR [ebx+0x44]
  40b90b:	inc    ebp
  40b90c:	cli    
  40b90d:	cmp    DWORD PTR [ecx+0x32],eax
  40b910:	rep outs dx,BYTE PTR ds:[esi]
  40b912:	aaa    
  40b913:	dec    esi
  40b914:	sbb    eax,0x7ee0c112
  40b919:	or     eax,0xe11e250c
  40b91e:	in     eax,0xbe
  40b920:	push   0xffffffba
  40b922:	jb     0x40b97d
  40b924:	mov    cl,0xc2
  40b926:	das    
  40b927:	xor    eax,0xe18c5d13
  40b92c:	je     0x40b961
  40b92e:	loopne 0x40b8df
  40b930:	mov    eax,0x1c902880
  40b935:	inc    esi
  40b936:	lods   al,BYTE PTR ds:[esi]
  40b937:	inc    BYTE PTR [eax+edx*8+0x12]
  40b93b:	cmp    DWORD PTR [eax-0x1f],ebp
  40b93e:	inc    eax
  40b93f:	out    dx,al
  40b940:	sub    al,0xb7
  40b942:	ficomp WORD PTR [edi+0x31]
  40b945:	(bad)  [eax+0x54]
  40b948:	mov    cl,0x2a
  40b94a:	ins    DWORD PTR es:[edi],dx
  40b94b:	xchg   BYTE PTR [eax-0xeec5df1],ah
  40b951:	inc    eax
  40b952:	loop   0x40b8e6
  40b954:	jle    0x40b90e
  40b956:	mov    BYTE PTR [ebp-0x1b],0xcb
  40b95a:	fadd   st,st(3)
  40b95c:	popf   
  40b95d:	jb     0x40b977
  40b95f:	scas   eax,DWORD PTR es:[edi]
  40b960:	int    0x71
  40b962:	jbe    0x739dd4ba
  40b968:	mov    al,ds:0x54ccbb0
  40b96d:	dec    ecx
  40b96e:	cmp    bh,BYTE PTR [edi]
  40b970:	dec    eax
  40b971:	leave  
  40b972:	sbb    bh,BYTE PTR [edi+0x79d3e593]
  40b978:	popa   
  40b979:	sahf   
  40b97a:	sub    al,0xc3
  40b97c:	or     al,0x3c
  40b97e:	shl    BYTE PTR [esi+0x773b07dd],cl
  40b984:	jecxz  0x40b978
  40b986:	cdq    
  40b987:	mov    edx,0xd4b190d2
  40b98c:	push   esi
  40b98d:	int    0xe7
  40b98f:	jb     0x40b93d
  40b991:	and    edx,DWORD PTR [edi-0x18c4f114]
  40b997:	xchg   ch,bl
  40b999:	push   ss
  40b99a:	lods   al,BYTE PTR ds:[esi]
  40b99b:	call   0x52fd7250
  40b9a0:	mov    ah,0x69
  40b9a2:	jns    0x40b9ff
  40b9a4:	add    al,0x14
  40b9a6:	loop   0x40ba0c
  40b9a8:	lods   eax,DWORD PTR ds:[esi]
  40b9a9:	loopne 0x40b966
  40b9ab:	popf   
  40b9ac:	loopne 0x40b9b2
  40b9ae:	xor    al,0x42
  40b9b0:	add    ah,BYTE PTR [edx-0x4f]
  40b9b3:	(bad)  
  40b9b4:	push   edi
  40b9b5:	nop
  40b9b6:	ror    eax,cl
  40b9b8:	jecxz  0x40ba2f
  40b9ba:	sub    al,0x19
  40b9bc:	xchg   DWORD PTR [edx-0x65],edi
  40b9bf:	test   al,0x20
  40b9c1:	popf   
  40b9c2:	jecxz  0x40ba25
  40b9c4:	mov    bh,0xd6
  40b9c6:	mov    bl,0x99
  40b9c8:	mov    esp,0x685840cc
  40b9cd:	repz in al,dx
  40b9cf:	int    0xff
  40b9d1:	xchg   esi,eax
  40b9d2:	mov    ecx,0x9bed4a51
  40b9d7:	fild   DWORD PTR [esp-0x7afa9061]
  40b9de:	sahf   
  40b9df:	cmc    
  40b9e0:	jmp    DWORD PTR [esi]
  40b9e2:	arpl   ax,dx
  40b9e4:	mov    esi,?
  40b9e6:	test   BYTE PTR [esi+0x24c418cc],ch
  40b9ec:	pushf  
  40b9ed:	mov    ebp,0x874116c1
  40b9f2:	mov    ah,0xfb
  40b9f4:	add    BYTE PTR [ecx+ebp*1],bh
  40b9f7:	and    bl,BYTE PTR [ecx-0x32e32bf]
  40b9fd:	ss call 0x3d848dc8
  40ba03:	mov    bl,0x79
  40ba05:	sbb    DWORD PTR [ebx-0x6e],0xffffffa3
  40ba09:	inc    ecx
  40ba0a:	imul   ecx,ebp,0x1ad93833
  40ba10:	pushf  
  40ba11:	in     eax,0x7d
  40ba13:	and    esi,DWORD PTR [edx+0x61150fe]
  40ba19:	icebp  
  40ba1a:	leave  
  40ba1b:	js     0x40ba21
  40ba1d:	lock outs dx,DWORD PTR ds:[esi]
  40ba1f:	adc    eax,ebx
  40ba21:	sahf   
  40ba22:	add    DWORD PTR [esi],edi
  40ba24:	mov    dh,0xfc
  40ba26:	rcl    DWORD PTR [eax+0x42b1697],cl
  40ba2c:	out    0x39,al
  40ba2e:	dec    eax
  40ba2f:	dec    esp
  40ba30:	cmp    ah,BYTE PTR [eax+0x32]
  40ba33:	or     BYTE PTR [esi-0x4c],0x39
  40ba37:	aaa    
  40ba38:	push   ebp
  40ba39:	cmp    ebp,esi
  40ba3b:	es and al,0xa3
  40ba3e:	jno    0x40ba4d
  40ba40:	rol    DWORD PTR [edi+ebp*2-0x10a0528d],cl
  40ba47:	adc    eax,0x8
  40ba4a:	retf   
  40ba4b:	inc    BYTE PTR [ebp-0x58]
  40ba4e:	dec    edi
  40ba4f:	nop
  40ba50:	hlt    
  40ba51:	pop    es
  40ba52:	sbb    eax,0x2e312f6
  40ba57:	xchg   BYTE PTR [ecx],ch
  40ba59:	sbb    esi,edi
  40ba5b:	enter  0x24c0,0xb1
  40ba5f:	(bad)
  40ba62:	(bad)  
  40ba63:	(bad)  
  40ba65:	aas    
  40ba66:	dec    esi
  40ba67:	jb     0x40ba7f
  40ba69:	rcr    DWORD PTR es:[edi+0x792aad5f],1
  40ba70:	js     0x40baa4
  40ba72:	ins    DWORD PTR es:[edi],dx
  40ba73:	stos   BYTE PTR es:[edi],al
  40ba74:	lds    eax,FWORD PTR es:[esi]
  40ba77:	jg     0x40ba77
  40ba79:	test   BYTE PTR [ebx-0x7c],ah
  40ba7c:	int    0x8a
  40ba7e:	pop    es
  40ba7f:	aaa    
  40ba80:	or     al,0xfe
  40ba82:	fiadd  WORD PTR [ebx-0x7defdf4]
  40ba88:	lods   eax,DWORD PTR ds:[esi]
  40ba89:	ret    0x8358
  40ba8c:	imul   ebx,eax,0x6d
  40ba8f:	lahf   
  40ba90:	jbe    0x40ba98
  40ba92:	xor    esp,esp
  40ba94:	push   edi
  40ba95:	sub    al,BYTE PTR [eax-0x390cea2b]
  40ba9b:	sub    eax,0x79eb6d12
  40baa0:	mov    al,ds:0x33f061d2
  40baa5:	dec    edx
  40baa6:	add    al,BYTE PTR [edx]
  40baa8:	pushf  
  40baa9:	out    0xea,eax
  40baab:	xor    ebx,ebp
  40baad:	add    eax,0xa27be017
  40bab2:	mov    bl,0x37
  40bab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bab5:	lahf   
  40bab6:	or     DWORD PTR [esi+0x7784251e],ecx
  40babc:	jecxz  0x40bac1
  40babe:	pop    es
  40babf:	ret    0xe9f5
  40bac2:	sbb    ebx,DWORD PTR [edi-0x2856ed7a]
  40bac8:	mov    dl,0x8f
  40baca:	adc    esp,DWORD PTR [ebx]
  40bacc:	add    al,0x77
  40bace:	stos   BYTE PTR es:[edi],al
  40bacf:	cmp    eax,0x7fd103c5
  40bad4:	ret    0x7289
  40bad7:	xchg   ebx,eax
  40bad8:	xchg   ebx,ecx
  40bada:	aaa    
  40badb:	loope  0x40bab8
  40badd:	push   edx
  40bade:	or     al,0xb2
  40bae0:	cs push ebx
  40bae2:	mov    cl,0x46
  40bae4:	adc    al,0x95
  40bae6:	cmp    DWORD PTR [ecx],0xffffffa1
  40bae9:	addr16 pop esp
  40baeb:	add    ecx,edx
  40baed:	mov    bl,0xb0
  40baef:	mov    fs,ecx
  40baf1:	and    DWORD PTR [ebx],edx
  40baf3:	stc    
  40baf4:	je     0x40bb67
  40baf6:	cmp    al,0x37
  40baf8:	xchg   esi,eax
  40baf9:	fnsave [eax-0x78664056]
  40baff:	scas   al,BYTE PTR es:[edi]
  40bb00:	test   eax,0xb749736f
  40bb05:	mov    ebp,0x2c522512
  40bb0a:	add    bh,BYTE PTR [ecx]
  40bb0c:	sahf   
  40bb0d:	mov    WORD PTR [ebx],gs
  40bb0f:	nop
  40bb10:	inc    ebp
  40bb11:	dec    edi
  40bb12:	data16 aam 0x5b
  40bb15:	dec    edx
  40bb16:	pop    esp
  40bb17:	push   edx
  40bb18:	jecxz  0x40bb76
  40bb1a:	mov    bl,0x79
  40bb1c:	push   0x61
  40bb1e:	fwait
  40bb1f:	in     al,0xf4
  40bb21:	mov    ch,0xe9
  40bb23:	in     eax,dx
  40bb24:	cmc    
  40bb25:	test   BYTE PTR [ebp+0x4a31d661],dl
  40bb2b:	inc    esp
  40bb2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb2d:	imul   esi,ebp,0xffffffc3
  40bb30:	in     eax,dx
  40bb31:	mov    ebp,0xc669c10a
  40bb36:	mov    BYTE PTR [ecx],bh
  40bb38:	lea    ebp,[edx-0x6966ae0f]
  40bb3e:	mov    ds:0x3bd23a41,al
  40bb43:	mov    dh,0xa8
  40bb45:	adc    al,BYTE PTR [ecx-0x325f6e4]
  40bb4b:	lods   eax,DWORD PTR ds:[esi]
  40bb4c:	fcomp  QWORD PTR [edi+0x6eba83c5]
  40bb52:	outs   dx,DWORD PTR ds:[esi]
  40bb53:	dec    esp
  40bb54:	inc    esp
  40bb55:	xlat   BYTE PTR ds:[ebx]
  40bb56:	ss imul esp,edi,0xc5328809
  40bb5d:	mov    bl,0xd7
  40bb5f:	jo     0x40bb98
  40bb61:	nop
  40bb62:	xchg   DWORD PTR [ecx-0x2f],esi
  40bb65:	fcomp  st(2)
  40bb67:	xor    esp,0x17538ec1
  40bb6d:	icebp  
  40bb6e:	mov    al,0xad
  40bb70:	fadd   DWORD PTR [edi+0x52]
  40bb73:	jge    0x40bba9
  40bb75:	iret   
  40bb76:	lahf   
  40bb77:	adc    BYTE PTR [ebx],al
  40bb79:	loopne 0x40bb8e
  40bb7b:	les    edi,FWORD PTR [edx]
  40bb7d:	daa    
  40bb7e:	jl     0x40bb8d
  40bb80:	or     bh,bl
  40bb82:	ins    BYTE PTR es:[edi],dx
  40bb83:	mov    WORD PTR [edi+0x58],ss
  40bb86:	jmp    0xf30f:0x547ac39e
  40bb8d:	and    cl,BYTE PTR [esi]
  40bb8f:	push   ds
  40bb90:	jge    0x40bb3f
  40bb92:	xchg   ecx,eax
  40bb93:	jae    0x40bb3b
  40bb95:	mov    eax,ds:0x8d6331ad
  40bb9a:	cmp    ecx,DWORD PTR [esi-0x677d60e9]
  40bba0:	mov    dh,0xb7
  40bba2:	fadd   st,st(6)
  40bba4:	call   0x322aa9ea
  40bba9:	and    al,0xd8
  40bbab:	sti    
  40bbac:	mov    ah,0x6c
  40bbae:	ins    BYTE PTR es:[edi],dx
  40bbaf:	sti    
  40bbb0:	dec    ecx
  40bbb1:	sub    ch,BYTE PTR [esi-0x1b]
  40bbb4:	shl    bh,cl
  40bbb6:	adc    eax,0xea1aa755
  40bbbb:	sub    BYTE PTR [ecx+eiz*8+0x4b80486f],0x43
  40bbc3:	or     dl,BYTE PTR [esi+0x68]
  40bbc6:	dec    esi
  40bbc7:	cmp    esi,DWORD PTR [edx+ebx*2+0x78]
  40bbcb:	loop   0x40bba9
  40bbcd:	inc    eax
  40bbce:	or     al,0xbc
  40bbd0:	or     esp,DWORD PTR [ebx]
  40bbd2:	lahf   
  40bbd3:	adc    BYTE PTR [ebp+0x24],dh
  40bbd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbd7:	inc    edi
  40bbd8:	jmp    0x86c5:0xa50a0efb
  40bbdf:	xor    al,BYTE PTR [edx+0x63]
  40bbe2:	dec    edi
  40bbe3:	sti    
  40bbe4:	idiv   DWORD PTR [ebx]
  40bbe6:	ss retf 0xb7a3
  40bbea:	xchg   DWORD PTR [ebp+0x4960a482],esi
  40bbf0:	jle    0x40bb93
  40bbf2:	pop    ecx
  40bbf3:	rcl    BYTE PTR [eax-0x5c79da60],1
  40bbf9:	push   es
  40bbfa:	xchg   esi,eax
  40bbfb:	js     0x40bb8d
  40bbfd:	shl    DWORD PTR [edx],0x14
  40bc00:	fsubr  QWORD PTR [ebx]
  40bc02:	mov    esi,0x1f33059c
  40bc07:	mov    ebp,0xaf2ce2e6
  40bc0c:	leave  
  40bc0d:	dec    ebx
  40bc0e:	js     0x40bbc8
  40bc10:	in     al,0xc8
  40bc12:	jns    0x40bb98
  40bc14:	lds    ebx,FWORD PTR [ebp-0x29]
  40bc17:	cmc    
  40bc18:	pop    ebp
  40bc19:	jle    0x40bc82
  40bc1b:	adc    esi,DWORD PTR ds:0x1bdbf2d6
  40bc21:	mov    dl,0x15
  40bc23:	daa    
  40bc24:	xchg   edx,eax
  40bc25:	ret    
  40bc26:	jo     0x40bc64
  40bc28:	hlt    
  40bc29:	loope  0x40bc15
  40bc2b:	sti    
  40bc2c:	mov    al,ds:0x1a3d24f
  40bc31:	jp     0x40bc43
  40bc33:	jo     0x40bbf4
  40bc35:	pop    ebx
  40bc36:	lahf   
  40bc37:	(bad)  
  40bc38:	jmp    0x4ee2:0xfe64f130
  40bc3f:	and    eax,0x8beab103
  40bc44:	int3   
  40bc45:	outs   dx,DWORD PTR ds:[esi]
  40bc46:	jb     0x40bca3
  40bc48:	hlt    
  40bc49:	retf   
  40bc4a:	sub    eax,0xb18243bf
  40bc4f:	push   es
  40bc50:	enter  0xfff0,0x2d
  40bc54:	jp     0x40bcc3
  40bc56:	das    
  40bc57:	or     ebx,DWORD PTR [ecx]
  40bc59:	mov    ?,WORD PTR [edi-0x49219a7f]
  40bc5f:	lods   al,BYTE PTR ds:[esi]
  40bc60:	mov    ecx,es
  40bc62:	out    dx,al
  40bc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc64:	mov    bh,0x9e
  40bc66:	sti    
  40bc67:	aad    0x9
  40bc69:	pop    eax
  40bc6a:	inc    ecx
  40bc6b:	sbb    BYTE PTR [edx+0x28],dh
  40bc6e:	inc    edx
  40bc6f:	into   
  40bc70:	fisttp QWORD PTR [esi+0x3d]
  40bc73:	or     eax,0xa1377d80
  40bc78:	je     0x40bcbe
  40bc7a:	pop    ebp
  40bc7b:	mov    ds:0x86b50149,al
  40bc80:	jg     0x40bc34
  40bc82:	and    edx,ecx
  40bc84:	xchg   edx,eax
  40bc85:	jge    0x40bc75
  40bc87:	mov    edx,0xd2c9b012
  40bc8c:	inc    ebx
  40bc8d:	jae    0x40bcae
  40bc8f:	sbb    DWORD PTR [edx-0x19],ebx
  40bc92:	aaa    
  40bc93:	or     al,0x9b
  40bc95:	js     0x40bc4e
  40bc97:	mov    cl,0x29
  40bc99:	cdq    
  40bc9a:	es pop edx
  40bc9c:	jecxz  0x40bc6e
  40bc9e:	jg     0x40bc27
  40bca0:	push   ds
  40bca1:	xchg   dl,bh
  40bca3:	inc    esi
  40bca4:	mov    al,ds:0x7cb2f62c
  40bca9:	push   0xa11c3c8b
  40bcae:	mov    ds:0x29f42318,eax
  40bcb3:	add    eax,0xb18a61d
  40bcb8:	(bad)  
  40bcb9:	stc    
  40bcba:	enter  0x5a8b,0x62
  40bcbe:	sahf   
  40bcbf:	cmp    al,0x1b
  40bcc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc2:	dec    ebx
  40bcc3:	jo     0x40bc9f
  40bcc5:	loopne 0x40bcd7
  40bcc7:	(bad)  
  40bcc8:	aad    0x9f
  40bcca:	jae    0x40bc6d
  40bccc:	adc    ah,al
  40bcce:	sub    DWORD PTR ds:0x4b9d873e,esp
  40bcd4:	inc    ebx
  40bcd5:	or     edx,esi
  40bcd7:	scas   al,BYTE PTR es:[edi]
  40bcd8:	in     al,dx
  40bcd9:	jl     0x40bcc9
  40bcdb:	jg     0x40bce4
  40bcdd:	pop    ds
  40bcde:	or     bl,BYTE PTR [eax-0x5b]
  40bce1:	rcl    cl,0xa0
  40bce4:	mov    al,0x2
  40bce6:	sub    eax,0xbea3b7fd
  40bceb:	stos   BYTE PTR es:[edi],al
  40bcec:	fucompp 
  40bcee:	mov    bh,ah
  40bcf0:	(bad)  
  40bcf1:	lahf   
  40bcf2:	mov    esi,0x9060853c
  40bcf7:	or     ah,dl
  40bcf9:	ds mov bl,0x76
  40bcfc:	in     eax,0xe1
  40bcfe:	cs mov eax,0xcbdf85d9
  40bd04:	or     BYTE PTR [ecx+0x15077f28],0xb8
  40bd0b:	aad    0xcc
  40bd0d:	dec    edi
  40bd0e:	adc    ebx,DWORD PTR [ebp-0x7bd2bc28]
  40bd14:	mov    eax,0x29b8b5ed
  40bd19:	out    dx,eax
  40bd1a:	data16 into 
  40bd1c:	dec    edx
  40bd1d:	int3   
  40bd1e:	mov    dl,BYTE PTR [ecx+0x54]
  40bd21:	and    DWORD PTR [esi],ecx
  40bd23:	inc    edi
  40bd24:	mov    bl,0x55
  40bd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd27:	push   0x46681e30
  40bd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2d:	or     dl,BYTE PTR [esi]
  40bd2f:	or     eax,0xa17c1ca2
  40bd34:	or     BYTE PTR [esi-0x18],cl
  40bd37:	daa    
  40bd38:	cwde   
  40bd39:	jl     0x40bcd2
  40bd3b:	add    BYTE PTR ds:0xa43eb7dd,ah
  40bd41:	push   ebx
  40bd42:	cmp    edi,esp
  40bd44:	lds    ecx,FWORD PTR [ecx-0x8]
  40bd47:	out    0x5b,eax
  40bd49:	sbb    eax,0xd8280287
  40bd4e:	repz out 0x26,al
  40bd51:	mov    bh,0x71
  40bd53:	dec    eax
  40bd54:	fst    QWORD PTR [esi-0x7f9a969a]
  40bd5a:	pushf  
  40bd5b:	mov    bl,0x41
  40bd5d:	inc    esi
  40bd5e:	mov    ds:0xca9a36ba,al
  40bd63:	xchg   bh,ch
  40bd65:	xor    BYTE PTR [edx+esi*4-0x4b68e8b9],bl
  40bd6c:	mov    dh,0xee
  40bd6e:	xchg   esp,eax
  40bd6f:	test   ch,0xcf
  40bd72:	dec    ebp
  40bd73:	mov    ecx,0xf73d1297
  40bd78:	push   esi
  40bd79:	jmp    0x40bdb3
  40bd7b:	xchg   ecx,eax
  40bd7c:	push   0x2e
  40bd7e:	push   ebp
  40bd7f:	push   cs
  40bd80:	outs   dx,BYTE PTR ds:[esi]
  40bd81:	in     al,dx
  40bd82:	jae    0x40bd06
  40bd84:	and    ebx,ecx
  40bd86:	clc    
  40bd87:	in     eax,0x8
  40bd89:	push   ecx
  40bd8a:	iret   
  40bd8b:	dec    eax
  40bd8c:	and    ebp,ecx
  40bd8e:	outs   dx,DWORD PTR ds:[esi]
  40bd8f:	push   esp
  40bd90:	sub    bh,BYTE PTR ds:0xdcf96bd2
  40bd96:	xchg   ebp,eax
  40bd97:	dec    esi
  40bd98:	bound  ecx,QWORD PTR [ebx-0x47db9a82]
  40bd9e:	das    
  40bd9f:	push   esp
  40bda0:	shl    DWORD PTR [ebp+ecx*8+0x16897c3],0xf1
  40bda8:	mov    bh,0xc0
  40bdaa:	push   cs
  40bdab:	pop    eax
  40bdac:	push   ds
  40bdad:	(bad)  
  40bdae:	xor    eax,0x60fb1b8d
  40bdb3:	cmp    al,0x9f
  40bdb5:	mov    cl,0x95
  40bdb7:	jecxz  0x40be0a
  40bdb9:	ins    DWORD PTR es:[edi],dx
  40bdba:	(bad)
  40bdbe:	jmp    0xf7f5c4a9
  40bdc3:	add    BYTE PTR [edi+edx*2],dl
  40bdc6:	sub    edi,DWORD PTR ds:0x4cb36c19
  40bdcc:	or     eax,DWORD PTR [eax+0x6c91fdb1]
  40bdd2:	jbe    0x40be49
  40bdd4:	out    0x3c,al
  40bdd6:	iret   
  40bdd7:	dec    ecx
  40bdd8:	cmp    bh,BYTE PTR [eax]
  40bdda:	inc    ebp
  40bddb:	or     BYTE PTR [edx-0x17],0x16
  40bddf:	sbb    dh,ah
  40bde1:	adc    DWORD PTR fs:[esi],ebx
  40bde4:	push   0xffffffd3
  40bde6:	mov    dl,0x6c
  40bde8:	jecxz  0x40bde0
  40bdea:	jae    0x40bda0
  40bdec:	dec    al
  40bdee:	mov    eax,ds:0x2dae2a01
  40bdf3:	xchg   BYTE PTR [edx-0x32],bh
  40bdf6:	add    DWORD PTR ds:0xf5f82e22,eax
  40bdfc:	out    dx,eax
  40bdfd:	sbb    eax,0x808f25ef
  40be03:	int    0xea
  40be05:	inc    edx
  40be06:	lds    edx,FWORD PTR [esp+esi*8-0x5116fad7]
  40be0d:	sti    
  40be0e:	xor    BYTE PTR [eax-0x42],cl
  40be11:	in     al,0x46
  40be13:	lea    edi,[esi]
  40be15:	das    
  40be16:	push   ss
  40be17:	cmp    dl,BYTE PTR [edx]
  40be19:	mov    ch,0x90
  40be1b:	arpl   WORD PTR [ebp+0x638c0485],bp
  40be21:	sahf   
  40be22:	aaa    
  40be23:	push   edi
  40be24:	pop    ss
  40be25:	inc    ebp
  40be26:	inc    edx
  40be27:	mov    ch,0xc8
  40be29:	out    0xac,al
  40be2b:	push   ebx
  40be2c:	test   BYTE PTR [edx],cl
  40be2e:	cld    
  40be2f:	js     0x40be0f
  40be31:	hlt    
  40be32:	lods   al,BYTE PTR ds:[esi]
  40be33:	xlat   BYTE PTR ds:[ebx]
  40be34:	mov    al,BYTE PTR [ebx+ebx*2+0x6a]
  40be38:	cwde   
  40be39:	cdq    
  40be3a:	ins    BYTE PTR es:[edi],dx
  40be3b:	sbb    BYTE PTR ds:0xe79b165e,ch
  40be41:	clc    
  40be42:	loope  0x40be56
  40be44:	fldenv [ebx+0x58ad5878]
  40be4a:	jle    0x40be77
  40be4c:	inc    ebp
  40be4d:	inc    ecx
  40be4e:	sbb    DWORD PTR [edi-0x38],edi
  40be51:	cmp    eax,0xa0a396d6
  40be56:	add    al,0x87
  40be58:	adc    cl,bl
  40be5a:	mov    bh,0x16
  40be5c:	loope  0x40be9d
  40be5e:	in     al,dx
  40be5f:	mov    al,ds:0x4300f30c
  40be64:	push   eax
  40be65:	sub    al,0x28
  40be67:	popf   
  40be68:	imul   edx,DWORD PTR [esi-0x240d327c],0xffffffa8
  40be6f:	call   0x3a973b80
  40be74:	in     eax,0xd7
  40be76:	pop    esi
  40be77:	aad    0xa
  40be79:	add    eax,0x90015146
  40be7e:	mov    ds:0xfb4a7311,eax
  40be83:	loopne 0x40bec8
  40be85:	sbb    eax,0x5be09937
  40be8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be8b:	xchg   DWORD PTR [edi+0x6354da6],esi
  40be91:	dec    ebp
  40be92:	mov    eax,ds:0x5c7ff72b
  40be97:	enter  0x5770,0x4f
  40be9b:	inc    eax
  40be9c:	mov    edi,DWORD PTR [edi-0x53]
  40be9f:	ins    DWORD PTR es:[edi],dx
  40bea0:	mov    dh,0xe
  40bea2:	loopne 0x40bec9
  40bea4:	dec    esp
  40bea5:	retf   0xbc1f
  40bea8:	test   DWORD PTR [esi],esp
  40beaa:	lods   eax,DWORD PTR ds:[esi]
  40beab:	ins    DWORD PTR es:[edi],dx
  40beac:	pop    esp
  40bead:	ret    0xb9be
  40beb0:	fsub   DWORD PTR [ebx-0x4d12ab84]
  40beb6:	sbb    edx,eax
  40beb8:	int    0x8
  40beba:	cmc    
  40bebb:	xor    dl,BYTE PTR [ecx]
  40bebd:	loopne 0x40bf3c
  40bebf:	imul   ebx,DWORD PTR [eax],0x3f978d24
  40bec5:	enter  0xfeae,0xf3
  40bec9:	(bad)  
  40beca:	pop    edi
  40becb:	dec    ebx
  40becc:	xchg   ebp,eax
  40becd:	fidivr DWORD PTR [esi+eax*2+0x25]
  40bed1:	(bad)  
  40bed2:	or     eax,0x87da085c
  40bed7:	mov    eax,0xff0ffe15
  40bedc:	inc    esi
  40bedd:	cmp    al,0x2a
  40bedf:	fnstsw WORD PTR [eax]
  40bee1:	xor    eax,0x4d542527
  40bee6:	std    
  40bee7:	imul   ebx,DWORD PTR [edi+ebp*1-0x5db02a09],0x0
  40beef:	mov    ds:0x54d92fc6,eax
  40bef4:	jbe    0x40befc
  40bef6:	pushf  
  40bef7:	mov    bl,0x2c
  40bef9:	dec    esi
  40befa:	(bad)  
  40befb:	mov    esi,0x98bfc760
  40bf00:	jmp    0x40bf09
  40bf02:	test   edx,esi
  40bf04:	jne    0x40be92
  40bf06:	outs   dx,BYTE PTR ds:[esi]
  40bf07:	pop    ss
  40bf08:	fdivrp st(3),st
  40bf0a:	xchg   ebp,eax
  40bf0b:	or     eax,0x3b63f67d
  40bf10:	sbb    eax,0x92e9adf8
  40bf15:	mov    ecx,0x2e7b08a5
  40bf1a:	stos   BYTE PTR es:[edi],al
  40bf1b:	mov    ebx,0xc00737bd
  40bf20:	mov    dh,0x1e
  40bf22:	shl    DWORD PTR [edi-0x77],0x5d
  40bf26:	mov    bl,0xf5
  40bf28:	icebp  
  40bf29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2b:	les    ecx,FWORD PTR [esi]
  40bf2d:	push   esi
  40bf2e:	cdq    
  40bf2f:	mov    ch,0x4d
  40bf31:	inc    eax
  40bf32:	inc    esp
  40bf33:	loopne 0x40bf58
  40bf35:	and    al,0x42
  40bf37:	xor    ch,BYTE PTR [ecx]
  40bf39:	inc    ebx
  40bf3a:	push   ebp
  40bf3b:	arpl   WORD PTR [edi-0x23],cx
  40bf3e:	or     eax,0xadba406a
  40bf43:	sbb    BYTE PTR [edx+0x2a],dh
  40bf46:	nop
  40bf47:	leave  
  40bf48:	cmp    BYTE PTR [esi-0x29bc0d1f],0xbd
  40bf4f:	inc    ebx
  40bf50:	sub    BYTE PTR [ecx+eiz*8+0x5c],dl
  40bf54:	cwde   
  40bf55:	loopne 0x40bfc8
  40bf57:	pop    ss
  40bf58:	nop
  40bf59:	mov    edx,0x421c4591
  40bf5e:	inc    esp
  40bf5f:	(bad)  
  40bf60:	push   0xfffffffe
  40bf62:	test   DWORD PTR [edi],ebx
  40bf64:	loop   0x40bf17
  40bf66:	int3   
  40bf67:	scas   al,BYTE PTR es:[edi]
  40bf68:	test   eax,0xd8e968ae
  40bf6d:	clc    
  40bf6e:	jno    0x40bf26
  40bf70:	mov    ebx,0x8ac4ea4b
  40bf75:	lock jnp 0x40bfce
  40bf78:	xor    ebx,edi
  40bf7a:	arpl   WORD PTR [esi+0xa32d2f1],cx
  40bf80:	inc    edx
  40bf81:	dec    eax
  40bf82:	adc    DWORD PTR [eax-0x5af3f807],edx
  40bf88:	push   si
  40bf8a:	sub    ebx,esi
  40bf8c:	lods   eax,DWORD PTR ds:[esi]
  40bf8d:	xchg   esp,eax
  40bf8e:	out    0xd3,al
  40bf90:	pop    ds
  40bf91:	or     esp,DWORD PTR [edi-0x2208f83d]
  40bf97:	dec    ecx
  40bf98:	jne    0x40bf44
  40bf9a:	mov    cl,0x59
  40bf9c:	sbb    edi,DWORD PTR [ebp+0x9]
  40bf9f:	jne    0x40bf56
  40bfa1:	adc    bl,al
  40bfa3:	test   al,0xb4
  40bfa5:	adc    BYTE PTR [edx+edx*4],dh
  40bfa8:	inc    edi
  40bfa9:	xor    edi,esi
  40bfab:	jecxz  0x40bf55
  40bfad:	inc    esi
  40bfae:	fstp   TBYTE PTR [ecx-0x6d]
  40bfb1:	test   DWORD PTR [edi],ecx
  40bfb3:	(bad)  
  40bfb4:	sub    ch,cl
  40bfb6:	adc    cl,BYTE PTR [edi-0x31]
  40bfb9:	shl    BYTE PTR [ecx+0x707c8100],cl
  40bfbf:	(bad)  
  40bfc0:	fdivr  QWORD PTR [ecx+ecx*8]
  40bfc3:	fcomp  QWORD PTR [ebx+0x46]
  40bfc6:	cld    
  40bfc7:	repnz push cs
  40bfc9:	adc    ebx,DWORD PTR [esi+0x777b199f]
  40bfcf:	xchg   esp,eax
  40bfd0:	push   esi
  40bfd1:	fisttp WORD PTR [eax+ecx*1-0x697a7293]
  40bfd8:	ds jp  0x40bfa5
  40bfdb:	push   0x2c2261e4
  40bfe0:	sbb    dh,BYTE PTR [edx+0x31]
  40bfe3:	scas   al,BYTE PTR es:[edi]
  40bfe4:	call   0xb4d444b8
  40bfe9:	add    edi,0x2
  40bfec:	push   ss
  40bfed:	dec    edi
  40bfee:	adc    eax,0xb53b96e
  40bff3:	mov    edi,0x6c8093d2
  40bff8:	outs   dx,DWORD PTR ds:[esi]
  40bff9:	popa   
  40bffa:	or     esi,DWORD PTR [esi]
  40bffc:	jecxz  0x40bffb
  40bffe:	mov    ch,0x9b
  40c000:	cdq    
  40c001:	int    0x4a
  40c003:	dec    eax
  40c004:	adc    DWORD PTR [edi+0x1ec65801],edx
  40c00a:	repnz das 
  40c00c:	xor    BYTE PTR [ebx+ebx*1],bh
  40c00f:	xor    ebx,esi
  40c011:	adc    ebx,DWORD PTR [ebx+edx*2+0x2ce6da99]
  40c018:	xchg   esi,eax
  40c019:	sbb    al,BYTE PTR [edi-0xedea946]
  40c01f:	cmp    ebx,DWORD PTR [ecx+0x76]
  40c022:	pusha  
  40c023:	aaa    
  40c024:	jb     0x40c07e
  40c026:	into   
  40c027:	jne    0x40bffa
  40c029:	pushf  
  40c02a:	or     ecx,ecx
  40c02c:	outs   dx,DWORD PTR ds:[esi]
  40c02d:	pop    es
  40c02e:	and    BYTE PTR [ebx-0x1aaae961],0xdd
  40c035:	mov    dl,BYTE PTR [edi-0x316bf1dc]
  40c03b:	xor    eax,0xd36f78a7
  40c040:	push   es
  40c041:	test   al,0x7d
  40c043:	jae    0x40bfe2
  40c045:	pop    esp
  40c046:	stos   DWORD PTR es:[edi],eax
  40c047:	ficomp WORD PTR [ebp-0x233b2ade]
  40c04d:	and    cl,BYTE PTR [ebx+eiz*2+0x6d121af0]
  40c054:	xor    eax,0xde2d48cc
  40c059:	lahf   
  40c05a:	dec    esp
  40c05b:	scas   al,BYTE PTR es:[edi]
  40c05c:	lods   al,BYTE PTR ds:[esi]
  40c05d:	mov    ch,0xd8
  40c05f:	gs sti 
  40c061:	pushf  
  40c062:	pop    ds
  40c063:	idiv   DWORD PTR [esi]
  40c065:	arpl   WORD PTR [esi],si
  40c067:	push   edi
  40c068:	das    
  40c069:	js     0x40c091
  40c06b:	in     eax,0xb8
  40c06d:	lock mov gs,WORD PTR [ebx+0x182719dd]
  40c074:	sbb    ch,BYTE PTR [eax-0x51]
  40c077:	mov    esp,0x1e5d2e1a
  40c07c:	int    0x7d
  40c07e:	xchg   ebp,eax
  40c07f:	sbb    eax,0x56149206
  40c084:	dec    ebx
  40c085:	push   0xffffffd6
  40c087:	push   ecx
  40c088:	mov    esi,0xf28094ee
  40c08d:	addr16 xor eax,0xeb33acba
  40c093:	psrld  mm6,mm2
  40c096:	inc    esp
  40c097:	or     BYTE PTR [bp+di+0x53a4],al
  40c09c:	out    dx,eax
  40c09d:	sahf   
  40c09e:	fwait
  40c09f:	and    esi,DWORD PTR [eax+eax*8]
  40c0a2:	fwait
  40c0a3:	(bad)  
  40c0a4:	test   eax,0x3e8a0e2b
  40c0a9:	div    DWORD PTR [edx-0x65]
  40c0ac:	repz in al,0xc4
  40c0af:	dec    ecx
  40c0b0:	out    dx,eax
  40c0b1:	scas   eax,DWORD PTR es:[edi]
  40c0b2:	xor    eax,0x1ad3ae05
  40c0b7:	imul   ebx,eax,0x61967701
  40c0bd:	jns    0x40c0fd
  40c0bf:	stos   DWORD PTR es:[edi],eax
  40c0c0:	pop    ebp
  40c0c1:	mov    dl,0x68
  40c0c3:	or     BYTE PTR [esi-0x45],bl
  40c0c6:	sbb    al,dl
  40c0c8:	push   edi
  40c0c9:	push   cs
  40c0ca:	sub    ecx,esi
  40c0cc:	into   
  40c0cd:	push   0xfceedaa
  40c0d2:	lods   eax,DWORD PTR ds:[esi]
  40c0d3:	repnz mov bh,0x58
  40c0d6:	jne    0x40c07e
  40c0d8:	std    
  40c0d9:	inc    edi
  40c0da:	imul   eax,ecx,0xffffffb6
  40c0dd:	enter  0x59dc,0x21
  40c0e1:	xchg   edi,eax
  40c0e2:	pop    es
  40c0e3:	pop    es
  40c0e4:	test   cl,bl
  40c0e6:	jg     0x40c108
  40c0e8:	or     DWORD PTR [ebp-0x54ab412f],esi
  40c0ee:	adc    al,BYTE PTR [ebx+0x1cbd185c]
  40c0f4:	xlat   BYTE PTR ds:[ebx]
  40c0f5:	pop    ds
  40c0f6:	int    0xbe
  40c0f8:	push   esi
  40c0f9:	shr    eax,cl
  40c0fb:	mov    ch,0x47
  40c0fd:	inc    esi
  40c0fe:	cs mov dl,0xde
  40c101:	push   ecx
  40c102:	sub    DWORD PTR [ebx-0x6a],0xee54b44e
  40c109:	into   
  40c10a:	sbb    DWORD PTR [ecx],eax
  40c10c:	mov    ebx,0x66002066
  40c111:	jne    0x40c12c
  40c113:	xchg   edx,eax
  40c114:	xor    edx,DWORD PTR [eax-0x27]
  40c117:	sub    al,0x30
  40c119:	ret    0x949b
  40c11c:	mov    BYTE PTR ds:0xb6b733c9,cl
  40c122:	(bad)  
  40c123:	fstp   TBYTE PTR [ecx]
  40c125:	mov    WORD PTR [ebx+0xa915781],?
  40c12b:	data16 jg 0x40c0d1
  40c12e:	popf   
  40c12f:	pusha  
  40c130:	(bad)  
  40c132:	fcom   DWORD PTR [edi]
  40c134:	sti    
  40c135:	xchg   ebp,eax
  40c136:	outs   dx,BYTE PTR ds:[esi]
  40c137:	adc    BYTE PTR [esi+ebp*4+0x59],ch
  40c13b:	nop
  40c13c:	xor    al,0x55
  40c13e:	dec    edx
  40c13f:	sub    ebp,ebx
  40c141:	rcr    DWORD PTR [edx+ebp*2-0x10],1
  40c145:	jge    0x40c190
  40c147:	sbb    esp,DWORD PTR [ebx]
  40c149:	aam    0x6c
  40c14b:	nop
  40c14c:	sbb    bl,ch
  40c14e:	cmp    edi,DWORD PTR [ecx]
  40c150:	xchg   edx,eax
  40c151:	jmp    FWORD PTR [edx+0x1c]
  40c154:	mov    esp,0x6c51c833
  40c159:	jne    0x40c1d6
  40c15b:	xchg   edx,eax
  40c15c:	mov    ebx,0xd1d450cd
  40c161:	call   0x3d28:0x14c0cfb9
  40c168:	std    
  40c169:	push   cs
  40c16a:	jp     0x40c170
  40c16c:	cwde   
  40c16d:	jns    0x40c16f
  40c16f:	sbb    DWORD PTR [edx-0x44],ebp
  40c172:	(bad)  
  40c173:	shl    DWORD PTR [eax+0x71],cl
  40c176:	fwait
  40c177:	and    al,0x20
  40c179:	fucomi st,st(6)
  40c17b:	pop    ss
  40c17c:	(bad)  
  40c17d:	jae    0x40c17c
  40c17f:	pusha  
  40c180:	cmp    BYTE PTR [ebx-0xa93a13d],bh
  40c186:	in     eax,dx
  40c187:	xor    dh,BYTE PTR [edi+0xa]
  40c18a:	xchg   edx,eax
  40c18b:	mov    dh,0x38
  40c18d:	popa   
  40c18e:	pusha  
  40c18f:	mov    bl,0x73
  40c191:	mov    ebx,0xe5cadf76
  40c196:	ret    0x4ced
  40c199:	add    dl,BYTE PTR [edx+ebx*8+0x72]
  40c19d:	lahf   
  40c19e:	lods   al,BYTE PTR ds:[esi]
  40c19f:	stos   DWORD PTR es:[edi],eax
  40c1a0:	fdiv   st,st(0)
  40c1a2:	scas   al,BYTE PTR es:[edi]
  40c1a3:	sbb    dh,dh
  40c1a5:	dec    edi
  40c1a6:	sbb    esp,DWORD PTR [edx-0x56]
  40c1a9:	jae    0x40c1cd
  40c1ab:	inc    eax
  40c1ac:	pop    esp
  40c1ad:	pop    ds
  40c1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1af:	ja     0x40c139
  40c1b1:	inc    esp
  40c1b2:	popa   
  40c1b3:	push   0x7f70d321
  40c1b8:	(bad)  
  40c1b9:	fcomp  QWORD PTR [esi]
  40c1bb:	test   eax,0x21bca12
  40c1c0:	push   esp
  40c1c1:	ds sub eax,0x1b96b712
  40c1c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c8:	idiv   BYTE PTR [eax]
  40c1ca:	or     eax,0xb5cecfc4
  40c1cf:	mov    WORD PTR [eax+0x5a61db26],es
  40c1d5:	push   es
  40c1d6:	mov    ds:0x8af894d9,al
  40c1db:	xchg   BYTE PTR [edi+0x79e1fdbd],cl
  40c1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e2:	ins    DWORD PTR es:[edi],dx
  40c1e3:	outs   dx,DWORD PTR ds:[esi]
  40c1e4:	inc    ebp
  40c1e5:	in     al,0x6
  40c1e7:	push   ebp
  40c1e8:	dec    edx
  40c1e9:	cs jmp 0x65aa7f9f
  40c1ef:	int    0xed
  40c1f1:	jb     0x40c23e
  40c1f3:	xor    eax,0xd504c5a3
  40c1f8:	enter  0x6b8d,0x5b
  40c1fc:	xchg   DWORD PTR [ecx-0x655a7215],esi
  40c202:	ins    BYTE PTR es:[di],dx
  40c204:	fld    TBYTE PTR [ecx+0x25]
  40c207:	xchg   ebx,eax
  40c208:	fst    DWORD PTR [di-0x52de]
  40c20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c20e:	retf   0xf7b0
  40c211:	cld    
  40c212:	xor    eax,0xc9a8fe56
  40c217:	xchg   ebx,eax
  40c218:	ds mov ch,0xb
  40c21b:	adc    al,0x78
  40c21d:	mov    eax,0x17019237
  40c222:	jmp    0xd603f4bf
  40c227:	loopne 0x40c26d
  40c229:	loope  0x40c22f
  40c22b:	mov    ecx,0x97c48be4
  40c230:	push   eax
  40c231:	pusha  
  40c232:	mov    bl,0x4d
  40c234:	xchg   esi,eax
  40c235:	jnp    0x40c1c6
  40c237:	push   cs
  40c238:	inc    bx
  40c23a:	adc    dh,BYTE PTR [ecx-0xd]
  40c23d:	push   eax
  40c23e:	iret   
  40c23f:	or     DWORD PTR [esi+0x3f],edx
  40c242:	xor    eax,0x2db25677
  40c247:	jne    0x40c246
  40c249:	cld    
  40c24a:	daa    
  40c24b:	xor    al,0xbc
  40c24d:	jp     0x40c232
  40c24f:	xor    eax,DWORD PTR [esi+eax*8+0x60060780]
  40c256:	fisubr DWORD PTR [esp+edx*1]
  40c259:	test   BYTE PTR [ebp-0x6a4007b9],0xca
  40c260:	into   
  40c261:	dec    ebx
  40c262:	mov    edx,0xc6f735bd
  40c267:	lds    edi,FWORD PTR [ecx]
  40c269:	(bad)  
  40c26b:	xchg   ebp,eax
  40c26c:	dec    ebx
  40c26d:	mov    DWORD PTR [eax],eax
  40c26f:	scas   eax,DWORD PTR es:[edi]
  40c270:	pusha  
  40c271:	add    DWORD PTR [ebp-0x4474137c],ebx
  40c277:	xchg   edi,eax
  40c278:	push   ecx
  40c279:	das    
  40c27a:	push   es
  40c27b:	dec    ebp
  40c27c:	jnp    0x40c203
  40c27e:	gs add eax,ebx
  40c281:	call   0x1a4216b4
  40c286:	(bad)  
  40c287:	xchg   esp,eax
  40c288:	xchg   edi,eax
  40c289:	add    eax,0x109348f5
  40c28e:	xor    al,0x8b
  40c290:	enter  0xa091,0x21
  40c294:	pop    ebp
  40c295:	push   edx
  40c296:	adc    DWORD PTR [edx+edx*8+0x4a],ebx
  40c29a:	cmc    
  40c29b:	jnp    0x40c265
  40c29d:	sbb    bl,BYTE PTR [edx]
  40c29f:	jae    0x40c2bc
  40c2a1:	out    0x47,eax
  40c2a3:	js     0x40c2db
  40c2a5:	scas   eax,DWORD PTR es:[edi]
  40c2a6:	hlt    
  40c2a7:	dec    ebp
  40c2a8:	mov    esi,0x347eb927
  40c2ad:	jno    0x40c301
  40c2af:	pop    eax
  40c2b0:	out    0x9d,eax
  40c2b2:	mov    al,ds:0xe42b989b
  40c2b7:	mov    ah,0xf
  40c2b9:	sub    eax,DWORD PTR [edx+0x59]
  40c2bc:	out    0x4e,al
  40c2be:	fild   DWORD PTR [edx+0x61]
  40c2c1:	(bad)  
  40c2c2:	mov    eax,0x18e08e49
  40c2c7:	es out 0x56,eax
  40c2ca:	inc    edi
  40c2cb:	aam    0xaa
  40c2cd:	sub    eax,0xda3dde35
  40c2d2:	test   DWORD PTR [edx+eax*1],esi
  40c2d5:	popf   
  40c2d6:	dec    esi
  40c2d7:	nop
  40c2d8:	mov    ah,0x9f
  40c2da:	jg     0x40c27d
  40c2dc:	adc    al,0x2f
  40c2de:	out    dx,al
  40c2df:	and    eax,0x73297b57
  40c2e4:	pop    ebp
  40c2e5:	ret    0x27e7
  40c2e8:	add    ah,al
  40c2ea:	(bad)  
  40c2ec:	xchg   esi,eax
  40c2ed:	retf   
  40c2ee:	cmp    DWORD PTR [esi+edi*4-0x4b],esi
  40c2f2:	leave  
  40c2f3:	daa    
  40c2f4:	icebp  
  40c2f5:	mov    cl,0x1d
  40c2f7:	mov    ebx,0x10f3154b
  40c2fc:	gs push ds
  40c2fe:	mov    ds:0x45f05a57,al
  40c303:	inc    ebx
  40c304:	mov    edx,0x66300312
  40c309:	loop   0x40c33b
  40c30b:	adc    al,0x6e
  40c30d:	cld    
  40c30e:	test   DWORD PTR [edx+eax*2+0x28c180bf],edi
  40c315:	lods   eax,DWORD PTR ds:[esi]
  40c316:	xor    al,0x88
  40c318:	ret    0x30a3
  40c31b:	push   ecx
  40c31c:	adc    eax,0xb2fce8ca
  40c321:	nop
  40c322:	iret   
  40c323:	sub    eax,0xd0b27805
  40c328:	xor    DWORD PTR fs:[ebx+0x34],esi
  40c32c:	jo     0x40c2cd
  40c32e:	icebp  
  40c32f:	add    eax,DWORD PTR [edx]
  40c331:	xchg   DWORD PTR ds:0xd9cfc259,edx
  40c337:	fisub  WORD PTR [edx+0x624f483b]
  40c33d:	stc    
  40c33e:	pop    ebp
  40c33f:	stos   BYTE PTR es:[edi],al
  40c340:	pop    esi
  40c341:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c343:	inc    ebp
  40c344:	mov    ds:0x7428a0dd,al
  40c349:	test   DWORD PTR [edi],esp
  40c34b:	add    BYTE PTR [ecx+0x9],dl
  40c34e:	lea    edi,cs:[edx+0x5e72a4e]
  40c355:	jo     0x40c357
  40c357:	mov    cl,al
  40c359:	lock ret 0x2441
  40c35d:	xchg   ebx,eax
  40c35e:	lahf   
  40c35f:	jbe    0x40c37d
  40c361:	aaa    
  40c362:	rcr    BYTE PTR [edx+0x31],0x71
  40c366:	mov    ebp,0x5c4774b5
  40c36b:	enter  0x3b13,0xe0
  40c36f:	aas    
  40c370:	and    DWORD PTR [ebp+0x77],ecx
  40c373:	in     al,dx
  40c374:	cmp    dl,BYTE PTR ds:0xc5d170fb
  40c37a:	imul   edi,DWORD PTR [ebp+0x10],0xfffffff4
  40c37e:	(bad)
  40c381:	add    BYTE PTR [ebx+0x4445e6c8],al
  40c387:	and    eax,0xcc852675
  40c38c:	mov    ch,0x6
  40c38e:	retf   
  40c38f:	pop    ebx
  40c390:	push   ss
  40c391:	rol    DWORD PTR [esi-0x4419626d],1
  40c397:	in     eax,0x3
  40c399:	in     eax,0x67
  40c39b:	sbb    DWORD PTR [edi-0x5e],esi
  40c39e:	cmp    al,0x51
  40c3a0:	jg     0x40c38f
  40c3a2:	in     al,dx
  40c3a3:	mov    edx,0xc440bb0f
  40c3a8:	jo     0x40c35a
  40c3aa:	rcr    BYTE PTR [edx+0x45],0x44
  40c3ae:	push   es
  40c3af:	sbb    BYTE PTR [edx],0x89
  40c3b2:	inc    edx
  40c3b3:	lahf   
  40c3b4:	and    eax,0xebd026b7
  40c3b9:	jg     0x40c40f
  40c3bb:	ins    BYTE PTR es:[edi],dx
  40c3bc:	out    dx,eax
  40c3bd:	pop    ebx
  40c3be:	ins    BYTE PTR es:[edi],dx
  40c3bf:	adc    eax,0x3e75226f
  40c3c4:	cmc    
  40c3c5:	cs ja  0x40c3d3
  40c3c8:	sbb    eax,0xb2e7f9c1
  40c3cd:	cmp    ecx,0x73
  40c3d0:	scas   al,BYTE PTR es:[edi]
  40c3d1:	cmp    DWORD PTR [eax+ecx*4],edx
  40c3d4:	in     al,0xe
  40c3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d8:	inc    esp
  40c3d9:	xchg   ecx,eax
  40c3da:	mov    eax,ds:0xeeee134f
  40c3df:	or     edx,DWORD PTR [ebx+eax*1]
  40c3e2:	adc    BYTE PTR [esi],0xaf
  40c3e5:	mov    ch,BYTE PTR [edi+0x764743f0]
  40c3eb:	pop    ss
  40c3ec:	and    cl,0x25
  40c3ef:	jne    0x40c379
  40c3f1:	das    
  40c3f2:	js     0x40c45b
  40c3f4:	dec    edx
  40c3f5:	lods   al,BYTE PTR ds:[esi]
  40c3f6:	rcl    DWORD PTR [ebx+0x32],cl
  40c3f9:	xchg   ebp,edx
  40c3fb:	jno    0x40c465
  40c3fd:	push   0xec1b7fd9
  40c402:	out    0x95,al
  40c404:	test   al,0xe1
  40c406:	xlat   BYTE PTR ds:[ebx]
  40c407:	int    0x14
  40c409:	addr16 adc eax,0x1a38158b
  40c40f:	mov    ecx,0xff9e90db
  40c414:	cmp    DWORD PTR [ecx+0x6d],eax
  40c417:	xchg   ebp,eax
  40c418:	mov    ch,0x7d
  40c41a:	rol    BYTE PTR [edx],1
  40c41c:	mov    eax,ds:0x4af0670e
  40c421:	sub    eax,0x7d5d5d9d
  40c426:	mov    eax,DWORD PTR [eax*4+0x2380b865]
  40c42d:	push   eax
  40c42e:	mov    bl,BYTE PTR [edx+eiz*2-0x3efa1168]
  40c435:	in     al,dx
  40c436:	mov    bl,0xd9
  40c438:	xor    dh,dl
  40c43a:	push   es
  40c43b:	imul   edx,DWORD PTR [edi],0x58
  40c43e:	add    bh,BYTE PTR [ebx-0x3d]
  40c441:	inc    edi
  40c442:	push   ds
  40c443:	jmp    0x40c3fd
  40c445:	jecxz  0x40c3f5
  40c447:	retf   0x245b
  40c44a:	xchg   ebp,eax
  40c44b:	xchg   ebx,eax
  40c44c:	sub    BYTE PTR [edx-0x40],ch
  40c44f:	addr16 nop
  40c451:	popf   
  40c452:	mov    bh,0xa1
  40c454:	out    0xed,al
  40c456:	mov    ah,0x4d
  40c458:	or     BYTE PTR [ebx-0x3870187a],ah
  40c45e:	push   0xaa292972
  40c463:	sbb    esi,edx
  40c465:	or     al,0xd3
  40c467:	mov    BYTE PTR [edi+0x493435e3],ch
  40c46d:	or     cl,BYTE PTR [ecx+edi*1]
  40c470:	(bad)  [eax+0x31]
  40c473:	outs   dx,DWORD PTR ds:[esi]
  40c474:	cmp    edx,esp
  40c476:	test   eax,0x3b76568f
  40c47b:	mov    esi,0xc97bba5b
  40c480:	nop
  40c481:	ins    DWORD PTR es:[edi],dx
  40c482:	data16 adc al,0xbd
  40c485:	xrelease mov DWORD PTR [ecx],edx
  40c488:	xchg   edi,eax
  40c489:	cmp    DWORD PTR [ebx-0x5733d95a],ebx
  40c48f:	mov    dl,0xe4
  40c491:	xchg   ebp,eax
  40c492:	retf   
  40c493:	out    dx,eax
  40c494:	mov    al,0x4d
  40c496:	push   edi
  40c497:	jg     0x40c500
  40c499:	fsubr  st(6),st
  40c49b:	imul   edx,DWORD PTR ds:[ebp+0x4261453d],0x75
  40c4a3:	shl    DWORD PTR [ebx],0x9d
  40c4a6:	jp     0x40c4ea
  40c4a8:	sbb    dh,BYTE PTR [ebx+0x5c]
  40c4ab:	dec    esp
  40c4ac:	stos   DWORD PTR es:[edi],eax
  40c4ad:	add    esi,ebx
  40c4af:	lods   al,BYTE PTR ds:[esi]
  40c4b0:	inc    ebx
  40c4b1:	mov    ds:0x9ee53b2b,al
  40c4b6:	jns    0x40c47b
  40c4b8:	mov    ds:0xaabb0962,al
  40c4bd:	and    ah,BYTE PTR [esi+edx*1-0x10299ff6]
  40c4c4:	test   al,0x6
  40c4c6:	sub    eax,0xcc2d8608
  40c4cb:	dec    BYTE PTR [ebp+0x6ef05dc8]
  40c4d1:	(bad)  
  40c4d2:	cld    
  40c4d3:	push   edx
  40c4d4:	mov    ah,0xed
  40c4d6:	retf   
  40c4d7:	mov    bh,0xa5
  40c4d9:	imul   ecx,DWORD PTR [esi-0x59490442],0x924be0b4
  40c4e3:	xchg   ebx,eax
  40c4e4:	push   edx
  40c4e5:	lods   al,BYTE PTR ds:[esi]
  40c4e6:	test   eax,edx
  40c4e8:	popa   
  40c4e9:	or     al,0x94
  40c4eb:	fwait
  40c4ec:	es mov dl,0x54
  40c4ef:	bound  edi,QWORD PTR ds:0x9d3256ed
  40c4f5:	dec    ebx
  40c4f6:	cmp    DWORD PTR [ecx],ebp
  40c4f8:	ja     0x40c486
  40c4fa:	daa    
  40c4fb:	mov    eax,ds:0x6405d18
  40c500:	pop    eax
  40c501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c502:	aas    
  40c503:	sub    edx,esp
  40c505:	cmp    al,0x2b
  40c507:	iret   
  40c508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c509:	pop    esi
  40c50b:	mov    bl,BYTE PTR [eax-0xd13771f]
  40c511:	jbe    0x40c4a4
  40c513:	push   cs
  40c514:	aaa    
  40c515:	ror    DWORD PTR [ecx-0x7b3f2ea7],0x1a
  40c51c:	or     dh,ch
  40c51e:	mov    eax,ds:0xff2a920
  40c523:	sbb    al,0xba
  40c525:	lds    esi,FWORD PTR [esi]
  40c527:	aas    
  40c528:	mov    eax,DWORD PTR [edi+0x80b745e]
  40c52e:	jbe    0x40c553
  40c530:	sbb    bl,dh
  40c532:	jnp    0xde14f58f
  40c538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c539:	xchg   ebx,eax
  40c53a:	rcr    al,0x1b
  40c53d:	mov    esp,0xc326b766
  40c542:	or     BYTE PTR ss:[edi],cl
  40c545:	clc    
  40c546:	pop    edx
  40c547:	mov    BYTE PTR [eax+0x16],dh
  40c54a:	into   
  40c54b:	and    BYTE PTR [edx-0x4051dbb1],dh
  40c551:	in     al,dx
  40c552:	and    eax,0xdb7c173f
  40c557:	mov    ds:0xc2f643b5,al
  40c55c:	dec    esi
  40c55d:	jmp    0x40c4ef
  40c55f:	jmp    0xa354:0x97a6c403
  40c566:	test   eax,0x74887d1b
  40c56b:	xchg   ebp,eax
  40c56c:	xor    eax,0x15748635
  40c571:	arpl   WORD PTR [ecx-0x74],bp
  40c574:	pop    esi
  40c575:	out    0x40,al
  40c577:	out    0xd,eax
  40c579:	adc    ecx,DWORD PTR [edi-0x21a003a4]
  40c57f:	pop    ebx
  40c580:	test   al,0xce
  40c582:	nop
  40c583:	sub    eax,0xab6ac614
  40c588:	jmp    0x40c51d
  40c58a:	and    eax,0xdc3d27a
  40c58f:	add    al,bl
  40c591:	ss aam 0x4c
  40c594:	or     ecx,ebp
  40c596:	pop    eax
  40c597:	mov    al,ds:0x2734feae
  40c59c:	pop    ss
  40c59d:	xor    DWORD PTR [edx+0x3a406ded],0xea725a12
  40c5a7:	mov    ds:0xda531fce,eax
  40c5ac:	fidiv  WORD PTR [edi-0x2]
  40c5af:	adc    eax,0x6498f776
  40c5b4:	sti    
  40c5b5:	popa   
  40c5b6:	call   0xd754443d
  40c5bb:	mov    eax,ds:0x961e1bd
  40c5c0:	inc    ebp
  40c5c1:	xchg   ebp,ebp
  40c5c3:	repz into 
  40c5c5:	inc    eax
  40c5c6:	mov    cl,ah
  40c5c8:	xor    eax,0xcc5a441
  40c5cd:	xor    eax,0x1745775b
  40c5d2:	in     al,0x43
  40c5d4:	mov    dh,0xd2
  40c5d6:	scas   eax,DWORD PTR es:[edi]
  40c5d7:	repz xchg edx,eax
  40c5d9:	inc    esp
  40c5da:	mov    ecx,0x9b02e728
  40c5df:	mov    cl,0x74
  40c5e1:	and    BYTE PTR [edi-0x1c405a47],ch
  40c5e7:	mov    WORD PTR [esi+ebx*1-0x51fd1e12],gs
  40c5ee:	xchg   esp,eax
  40c5ef:	daa    
  40c5f0:	imul   esi,edi,0xffffff89
  40c5f3:	lds    ebx,FWORD PTR [esi+0x45]
  40c5f6:	push   esp
  40c5f7:	test   BYTE PTR [edi-0x794cf19b],cl
  40c5fd:	push   es
  40c5fe:	lock mov WORD PTR [esi-0x280b300d],?
  40c605:	je     0x40c602
  40c607:	push   ss
  40c608:	fdivr  QWORD PTR [ebx+0x17]
  40c60b:	data16 es stc 
  40c60e:	xor    eax,0x58fa5499
  40c613:	push   edi
  40c614:	call   0x740ead15
  40c619:	ss mov edi,0x6df2a77b
  40c61f:	mov    al,ds:0x190d7630
  40c624:	xor    DWORD PTR [eax-0xd5234e1],esi
  40c62a:	jl     0x40c6a8
  40c62c:	pop    ebx
  40c62d:	push   es
  40c62e:	clc    
  40c62f:	sbb    BYTE PTR [edi],ah
  40c631:	push   ebx
  40c632:	pop    edi
  40c633:	test   DWORD PTR [esi-0x20],0x630c4f8b
  40c63a:	push   es
  40c63b:	xor    BYTE PTR [ecx+0x7cfafb3],al
  40c641:	xlat   BYTE PTR ds:[ebx]
  40c642:	inc    ecx
  40c643:	add    ch,dh
  40c645:	sub    cl,0x47
  40c648:	ins    DWORD PTR es:[edi],dx
  40c649:	or     eax,0x8e0ca09f
  40c64e:	push   ecx
  40c64f:	inc    ebx
  40c650:	xor    eax,0x5afcedb2
  40c655:	(bad)  
  40c657:	cmp    esi,DWORD PTR [edx-0x41af400e]
  40c65d:	mov    eax,ds:0xf50bfd9f
  40c662:	das    
  40c663:	loop   0x40c6b8
  40c665:	aad    0x67
  40c667:	mov    ah,0xc2
  40c669:	adc    ebp,DWORD PTR [edx+edx*2+0x33]
  40c66d:	dec    eax
  40c66e:	clc    
  40c66f:	out    0x51,al
  40c671:	cmp    DWORD PTR [eax+edi*2+0x70],0xaaea5c06
  40c679:	jmp    0x40c6c0
  40c67b:	xor    al,0xa4
  40c67d:	lea    esp,[ecx+0x655d468e]
  40c683:	(bad)  
  40c685:	test   DWORD PTR [ecx+0x6611ba24],edi
  40c68b:	mov    esp,0xdf99ffc7
  40c690:	fld    TBYTE PTR [eax-0x5]
  40c693:	hlt    
  40c694:	adc    DWORD PTR [edi+0x21],0xffffffb8
  40c698:	shl    BYTE PTR [esi+eax*1+0x71],cl
  40c69c:	leave  
  40c69d:	xchg   DWORD PTR [ebx],edx
  40c69f:	inc    ebp
  40c6a0:	test   al,0x36
  40c6a2:	or     esi,esi
  40c6a4:	scas   eax,DWORD PTR es:[edi]
  40c6a5:	adc    ah,BYTE PTR [edi-0x2c]
  40c6a8:	xchg   edx,eax
  40c6a9:	jno    0x40c6f5
  40c6ab:	cmp    cl,dh
  40c6ad:	xor    dh,ch
  40c6af:	stos   BYTE PTR es:[edi],al
  40c6b0:	mov    bh,0x27
  40c6b2:	aaa    
  40c6b3:	push   esi
  40c6b4:	mov    WORD PTR [edi+0xcda7f66],ss
  40c6ba:	pusha  
  40c6bb:	test   BYTE PTR [edi+0x49243fa7],bh
  40c6c1:	mov    esi,DWORD PTR [edx]
  40c6c3:	pop    ds
  40c6c4:	mov    BYTE PTR [ebp+0x49],ch
  40c6c7:	call   0xe044:0x399218c9
  40c6ce:	mov    bl,0x6a
  40c6d0:	sbb    dl,BYTE PTR cs:[esi-0x6]
  40c6d4:	inc    ebx
  40c6d5:	jp     0x40c704
  40c6d7:	or     ebp,DWORD PTR [edi+0x7b]
  40c6da:	int    0x8c
  40c6dc:	mov    esp,0xcd0f37d1
  40c6e1:	dec    edx
  40c6e2:	dec    ebx
  40c6e3:	sbb    edx,DWORD PTR [ebp-0x337f252a]
  40c6e9:	loope  0x40c6a2
  40c6eb:	push   es
  40c6ec:	mov    ch,0xee
  40c6ee:	cdq    
  40c6ef:	std    
  40c6f0:	mov    cl,0x65
  40c6f2:	inc    esp
  40c6f3:	mov    al,0xd5
  40c6f5:	cld    
  40c6f6:	leave  
  40c6f7:	mov    ds:0xea922515,eax
  40c6fc:	push   esp
  40c6fd:	mov    edx,0x21a83917
  40c702:	fimul  DWORD PTR [ebx]
  40c704:	sub    DWORD PTR [esi+0x9],ecx
  40c707:	or     DWORD PTR [esi+0x34],esp
  40c70a:	sbb    cl,bh
  40c70c:	mov    eax,DWORD PTR [ecx-0x2d12f9e2]
  40c712:	popf   
  40c713:	adc    al,0xd2
  40c715:	lods   al,BYTE PTR ds:[esi]
  40c716:	adc    DWORD PTR [eax-0x5f30cc46],0xdd16e4db
  40c720:	dec    edi
  40c721:	ret    0x5a1c
  40c724:	jle    0x40c798
  40c726:	sub    bh,BYTE PTR [edx-0x31]
  40c729:	xlat   BYTE PTR ds:[ebx]
  40c72a:	aaa    
  40c72b:	dec    edi
  40c72c:	sub    cl,ah
  40c72e:	jno    0x40c6f4
  40c730:	xbegin 0x68441d8f
  40c736:	ins    DWORD PTR es:[edi],dx
  40c737:	loop   0x40c6fd
  40c739:	sbb    eax,0x3ef6defe
  40c73e:	aam    0x34
  40c740:	jmp    0x40c77d
  40c742:	test   esi,esi
  40c744:	test   DWORD PTR [ecx*2+0x22b3b894],0x78039099
  40c74f:	mov    ebx,0x312eba80
  40c754:	mov    ch,0xf5
  40c756:	lahf   
  40c757:	shl    ch,0xa0
  40c75a:	fadd   QWORD PTR [ebp-0x78]
  40c75d:	pop    esi
  40c75e:	mov    al,ds:0x4c29395
  40c763:	sbb    eax,0x78754adf
  40c768:	inc    eax
  40c769:	pop    edx
  40c76a:	mov    gs,ecx
  40c76c:	sahf   
  40c76d:	test   DWORD PTR [edi],edi
  40c76f:	jmp    0x8e393f2a
  40c774:	sub    eax,0x54ed26e
  40c779:	push   ebp
  40c77a:	adc    edx,DWORD PTR [edx]
  40c77c:	stos   DWORD PTR es:[edi],eax
  40c77d:	push   eax
  40c77e:	popa   
  40c77f:	aam    0xc3
  40c781:	mov    ebx,0xff15b580
  40c786:	pop    edi
  40c787:	mov    al,0x51
  40c789:	mov    bh,0x88
  40c78b:	enter  0x6132,0x42
  40c78f:	xchg   ebx,eax
  40c790:	push   cs
  40c791:	pop    edi
  40c792:	stos   BYTE PTR es:[edi],al
  40c793:	cwde   
  40c794:	ret    0x8adb
  40c797:	test   eax,0x30b2afa2
  40c79c:	xor    DWORD PTR [eax+edx*8-0x2fe547d7],0xffffffb9
  40c7a4:	cmp    DWORD PTR [ecx],esp
  40c7a6:	fst    QWORD PTR [eax]
  40c7a8:	loop   0x40c771
  40c7aa:	mov    ah,0x78
  40c7ac:	push   ecx
  40c7ad:	inc    esp
  40c7ae:	out    0x29,eax
  40c7b0:	sar    BYTE PTR [eax],cl
  40c7b2:	(bad)  
  40c7b3:	push   ebx
  40c7b4:	push   ss
  40c7b5:	int    0x4c
  40c7b7:	loop   0x40c754
  40c7b9:	xchg   esi,eax
  40c7ba:	loope  0x40c81b
  40c7bc:	jnp    0x40c82c
  40c7be:	xor    BYTE PTR [eax-0x7161ed31],dh
  40c7c4:	adc    al,0x76
  40c7c6:	inc    esi
  40c7c7:	loopne 0x40c7f3
  40c7c9:	daa    
  40c7ca:	pop    ecx
  40c7cb:	adc    bh,BYTE PTR [esi]
  40c7cd:	sub    eax,0x77a4abc9
  40c7d2:	add    ah,al
  40c7d4:	das    
  40c7d5:	aaa    
  40c7d6:	fisttp WORD PTR [eax-0x2eee9692]
  40c7dc:	mov    eax,ds:0x68926de3
  40c7e1:	jne    0x40c810
  40c7e3:	dec    edi
  40c7e4:	js     0x40c7bb
  40c7e6:	and    eax,0x9bf32b25
  40c7eb:	adc    eax,esi
  40c7ed:	jno    0x40c7a5
  40c7ef:	ret    
  40c7f0:	mov    ah,0xcf
  40c7f2:	std    
  40c7f3:	or     ebp,DWORD PTR [ecx-0x68]
  40c7f6:	jmp    0x42bcd817
  40c7fb:	fcom   QWORD PTR cs:[esi+0x65d2422b]
  40c802:	pop    ebp
  40c803:	mov    dl,0x6a
  40c805:	cmp    bh,BYTE PTR [ebp+0x6f9440f4]
  40c80b:	mov    ebp,0x51bde8d4
  40c810:	dec    eax
  40c811:	(bad)  
  40c812:	jl     0x40c7f2
  40c814:	retf   
  40c815:	adc    DWORD PTR [ecx-0x7ad4dab9],ebp
  40c81b:	cmc    
  40c81c:	inc    edx
  40c81d:	cdq    
  40c81e:	pusha  
  40c81f:	ds ret 
  40c821:	and    bl,BYTE PTR [edx+0x28ac0070]
  40c827:	xor    edi,ebx
  40c829:	or     dh,BYTE PTR [eax+0x708d638f]
  40c82f:	jno    0x40c86c
  40c831:	into   
  40c832:	pop    ebp
  40c833:	pop    ds
  40c834:	add    DWORD PTR [eax+ebx*4],0xa2341b5b
  40c83b:	fst    QWORD PTR [ebp+0x70]
  40c83e:	std    
  40c83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c840:	xchg   edi,eax
  40c841:	in     al,0x11
  40c843:	sahf   
  40c844:	xchg   ecx,eax
  40c845:	sub    dh,BYTE PTR [edx+0x3a3bdf5d]
  40c84b:	cmp    ch,BYTE PTR [esi+ebx*2+0x4786ae72]
  40c852:	mov    al,ds:0x1cabf447
  40c857:	pop    es
  40c858:	dec    ebx
  40c859:	out    0x1a,al
  40c85b:	dec    edx
  40c85c:	jo     0x40c863
  40c85e:	scas   al,BYTE PTR es:[edi]
  40c85f:	inc    eax
  40c860:	mov    ds:0x4fc819ac,eax
  40c865:	into   
  40c866:	jne    0x40c834
  40c868:	cwde   
  40c869:	mov    esp,0x12d6b63d
  40c86e:	das    
  40c86f:	mov    esi,0x7d21af34
  40c874:	sub    ch,BYTE PTR [ebx-0x44]
  40c877:	mov    DWORD PTR [ebx-0x3b],ebx
  40c87a:	(bad)  
  40c87b:	lds    edx,FWORD PTR [eax+0x266a791c]
  40c881:	data16 in al,0x10
  40c884:	or     al,0x9
  40c886:	pop    edx
  40c887:	or     eax,0xf6b4f493
  40c88c:	arpl   WORD PTR [eax],si
  40c88e:	cmp    dl,BYTE PTR [ebx+eiz*1]
  40c891:	aaa    
  40c892:	adc    eax,0x377e7a5c
  40c897:	fiadd  DWORD PTR [edx+0x38814fa6]
  40c89d:	es xchg esi,eax
  40c89f:	sbb    BYTE PTR [eax+0x18d9383f],cl
  40c8a5:	stos   BYTE PTR es:[edi],al
  40c8a6:	mov    ds:0x8368090,eax
  40c8ab:	push   0xfffffff2
  40c8ad:	mov    bl,0xd2
  40c8af:	inc    edi
  40c8b0:	test   al,0xf5
  40c8b2:	nop
  40c8b3:	jle    0x40c8fa
  40c8b5:	jecxz  0x40c90e
  40c8b7:	jle    0x40c870
  40c8b9:	inc    edi
  40c8ba:	mov    BYTE PTR [eax-0x54826453],cl
  40c8c0:	retf   0xae64
  40c8c3:	mov    edi,0x5bcd257b
  40c8c8:	xchg   BYTE PTR [ecx],bl
  40c8ca:	mov    ecx,0xae5c1231
  40c8cf:	mov    bh,0xe4
  40c8d1:	out    0x10,al
  40c8d3:	fdiv   DWORD PTR [edi-0x22]
  40c8d6:	loop   0x40c870
  40c8d8:	jecxz  0x40c888
  40c8da:	mov    ds:0x88352267,al
  40c8df:	add    al,0xc3
  40c8e1:	fnstcw WORD PTR [edi]
  40c8e3:	sub    BYTE PTR [ecx],cl
  40c8e5:	cwde   
  40c8e6:	repz pop ebx
  40c8e8:	cwde   
  40c8e9:	into   
  40c8ea:	xchg   ecx,eax
  40c8eb:	sub    al,0xa4
  40c8ee:	sbb    bh,ch
  40c8f0:	jg     0x40c96c
  40c8f2:	mov    ds:0x46327952,eax
  40c8f7:	sub    al,0xfc
  40c8f9:	test   al,0x77
  40c8fb:	add    BYTE PTR [ecx+eax*4+0x4805cc19],bl
  40c902:	enter  0x3791,0x82
  40c906:	(bad)  
  40c908:	or     DWORD PTR [ecx-0x78e75bca],0x75881c52
  40c912:	cmp    BYTE PTR [esi-0x5f],al
  40c915:	jb     0x40c8e3
  40c917:	in     al,dx
  40c918:	mov    eax,ds:0x4934554c
  40c91d:	out    0x34,al
  40c91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c920:	arpl   WORD PTR [edx+ecx*8-0x2c3436a1],sp
  40c927:	sti    
  40c928:	call   0x5791:0x692f25af
  40c92f:	mov    ch,0xaa
  40c931:	jecxz  0x40c91e
  40c933:	xor    eax,0x95f801b4
  40c938:	outs   dx,BYTE PTR ds:[esi]
  40c939:	sub    edx,eax
  40c93b:	fistp  QWORD PTR [ebx+0x7a]
  40c93e:	xor    dl,ah
  40c940:	into   
  40c941:	pop    esp
  40c942:	cmp    BYTE PTR [eax+ebx*8-0x33],0xe7
  40c947:	ins    BYTE PTR es:[edi],dx
  40c948:	fwait
  40c949:	loop   0x40c95f
  40c94b:	dec    esp
  40c94c:	popf   
  40c94d:	xor    DWORD PTR [ecx],0xc55688a7
  40c953:	call   ebp
  40c955:	inc    eax
  40c956:	call   0xd1d7:0x969e6842
  40c95d:	pop    edx
  40c95e:	jle    0x40c977
  40c960:	aaa    
  40c961:	xor    al,0xfb
  40c963:	std    
  40c964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c965:	nop
  40c966:	inc    esp
  40c967:	sub    DWORD PTR [edx+0x74],ecx
  40c96a:	inc    ebx
  40c96b:	jb     0x40c995
  40c96d:	adc    DWORD PTR [edx-0x64],esp
  40c970:	push   ds
  40c971:	or     DWORD PTR [edx],ebp
  40c973:	dec    ecx
  40c974:	loop   0x40c958
  40c976:	cmp    eax,DWORD PTR ds:0x934bce78
  40c97c:	and    BYTE PTR [ebp-0x6cf81f22],0xf8
  40c983:	leave  
  40c984:	into   
  40c985:	rcr    DWORD PTR [ebx+eax*1-0xf],1
  40c989:	push   ds
  40c98a:	fldcw  WORD PTR [ebp-0x1ca579d7]
  40c990:	and    al,0x80
  40c992:	xor    cl,bh
  40c994:	popf   
  40c995:	xor    al,0xd1
  40c997:	jne    0x40c919
  40c999:	xor    BYTE PTR [eax-0x7d846369],cl
  40c99f:	arpl   bp,ax
  40c9a1:	leave  
  40c9a2:	jecxz  0x40c9f8
  40c9a4:	test   al,0xb7
  40c9a6:	les    ecx,FWORD PTR ds:0xbf71a5d9
  40c9ac:	xchg   edi,eax
  40c9ad:	mov    eax,0x93d743d8
  40c9b2:	xor    edi,DWORD PTR [edi+0x254e9373]
  40c9b8:	mov    ch,0x7f
  40c9ba:	sub    bh,BYTE PTR [ebx-0x67]
  40c9bd:	out    dx,al
  40c9be:	jg     0x40c9dc
  40c9c0:	sbb    BYTE PTR [esi+0x4c],bh
  40c9c3:	sti    
  40c9c4:	sbb    eax,0x64255c38
  40c9c9:	xchg   ch,dh
  40c9cb:	pop    eax
  40c9cc:	mov    ch,BYTE PTR [edx+0x1c51db73]
  40c9d2:	ret    0xcef6
  40c9d5:	retf   0xa1d
  40c9d8:	mov    esp,0xc49eba7a
  40c9dd:	mov    ebp,0x4be82899
  40c9e2:	cwde   
  40c9e3:	(bad)  
  40c9e4:	cld    
  40c9e5:	dec    ebp
  40c9e6:	loopne 0x40c984
  40c9e8:	mov    edi,ds
  40c9ea:	xchg   BYTE PTR [edx+0xc5c9b37],dh
  40c9f0:	xchg   edi,eax
  40c9f1:	xchg   BYTE PTR [ecx-0x46],bh
  40c9f4:	imul   ebx,esp,0xffffffbc
  40c9f7:	inc    esp
  40c9f8:	mov    dh,0x6f
  40c9fa:	mov    BYTE PTR [eax],dh
  40c9fc:	test   BYTE PTR [ecx+0x27],bh
  40c9ff:	nop
  40ca00:	and    bl,BYTE PTR [ebx-0x3ac58e98]
  40ca06:	cwde   
  40ca07:	icebp  
  40ca08:	ret    
  40ca09:	fs cli 
  40ca0b:	lock imul ebx,DWORD PTR [ebx+0xb],0xa5fd217
  40ca13:	add    al,0xd6
  40ca15:	xlat   BYTE PTR ds:[ebx]
  40ca16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca17:	mov    BYTE PTR [ebp+0x2c],al
  40ca1a:	js     0x40c9fa
  40ca1c:	shl    DWORD PTR [ebx-0x2220823],cl
  40ca22:	inc    ebp
  40ca23:	add    DWORD PTR [esi-0x4fcfdaa3],ecx
  40ca29:	lods   eax,DWORD PTR ds:[esi]
  40ca2a:	iret   
  40ca2b:	mov    eax,ds:0xceb55e35
  40ca30:	pop    edx
  40ca31:	(bad)  
  40ca32:	retf   
  40ca33:	or     DWORD PTR [esi-0x50ea1956],edi
  40ca39:	sub    al,BYTE PTR [ecx+ecx*2]
  40ca3c:	gs scas eax,DWORD PTR es:[edi]
  40ca3e:	mov    ebp,0xef4b03ef
  40ca43:	push   edi
  40ca44:	xchg   esp,eax
  40ca45:	mov    cl,0xee
  40ca47:	sub    esp,edi
  40ca49:	and    BYTE PTR [esi+0x73169a1],al
  40ca4f:	jg     0x40c9d2
  40ca51:	arpl   WORD PTR [edx+0x1c],ax
  40ca54:	scas   eax,DWORD PTR es:[edi]
  40ca55:	jmp    0x40ca8d
  40ca57:	sbb    edi,DWORD PTR [ebx-0x1a]
  40ca5a:	mov    ds:0x2389befc,eax
  40ca5f:	pop    ds
  40ca60:	sub    BYTE PTR [edi],cl
  40ca62:	adc    BYTE PTR [edi],ch
  40ca64:	push   0xffffff94
  40ca66:	fisubr DWORD PTR fs:[ecx-0x33]
  40ca6a:	jno    0x40cacf
  40ca6c:	xor    ecx,DWORD PTR [eax-0x7d3b8977]
  40ca72:	cli    
  40ca73:	xchg   ebx,eax
  40ca74:	cmp    DWORD PTR [ebp+eiz*4-0x9],eax
  40ca78:	dec    edx
  40ca79:	pop    ss
  40ca7a:	dec    edx
  40ca7b:	out    0xda,al
  40ca7d:	js     0x40cad5
  40ca7f:	(bad)  
  40ca80:	int3   
  40ca81:	pop    ebp
  40ca82:	cdq    
  40ca83:	fwait
  40ca84:	jns    0x40ca69
  40ca86:	or     ebx,DWORD PTR [ebp+0x488c1082]
  40ca8c:	cmc    
  40ca8d:	loope  0x40ca10
  40ca8f:	sbb    esi,DWORD PTR [esi+0x6fa10ecd]
  40ca95:	scas   al,BYTE PTR es:[edi]
  40ca96:	lods   eax,DWORD PTR ds:[esi]
  40ca97:	jl     0x40ca88
  40ca99:	loopne 0x40ca34
  40ca9b:	adc    DWORD PTR [ecx+0xe6cc5fa],0xac2629d6
  40caa5:	adc    DWORD PTR [ecx],eax
  40caa7:	scas   eax,DWORD PTR es:[edi]
  40caa8:	sub    bh,BYTE PTR [edi]
  40caaa:	push   0x2f1ed471
  40caaf:	or     DWORD PTR [esi+ebp*2-0x32],0x26
  40cab4:	pop    ebp
  40cab5:	mov    ebx,0xae67a05a
  40caba:	mov    DWORD PTR [eax-0x7e2d2862],esi
  40cac0:	jae    0x40ca45
  40cac2:	pusha  
  40cac3:	fild   QWORD PTR ds:0xdfdf7de2
  40cac9:	jecxz  0x40caeb
  40cacb:	loope  0x40ca52
  40cacd:	test   al,0x9c
  40cacf:	shl    DWORD PTR [edi+eiz*2+0x9],cl
  40cad3:	cmp    eax,0xd69b2634
  40cad8:	out    dx,al
  40cad9:	shr    BYTE PTR [ebx+0x3600fb9e],1
  40cadf:	adc    eax,0xe3ecc344
  40cae4:	lea    eax,[esi]
  40cae6:	xchg   ah,dl
  40cae8:	std    
  40cae9:	jne    0x40ca99
  40caeb:	and    BYTE PTR [ebx+0x13],dh
  40caee:	add    ebp,edi
  40caf0:	mov    dh,0x1e
  40caf2:	add    eax,0x3c259c66
  40caf7:	xchg   ebp,eax
  40caf8:	jge    0x40cad9
  40cafa:	cmp    BYTE PTR [edx],0x50
  40cafd:	je     0x40cb1c
  40caff:	inc    eax
  40cb00:	cmp    DWORD PTR [ecx],eax
  40cb02:	iret   
  40cb03:	xchg   edi,eax
  40cb04:	and    eax,0x585709bb
  40cb09:	mov    cl,BYTE PTR [ecx+0x5b]
  40cb0c:	xchg   esp,eax
  40cb0d:	stos   DWORD PTR es:[edi],eax
  40cb0e:	data16 mov ah,0x1b
  40cb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb12:	xchg   ebx,eax
  40cb13:	mov    eax,0xf9b2a0f2
  40cb18:	mov    edx,0x9ccb6de7
  40cb1d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40cb1f:	push   eax
  40cb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb21:	push   ds
  40cb22:	jp     0x40cb97
  40cb24:	stos   BYTE PTR es:[edi],al
  40cb25:	repz pop ebx
  40cb27:	aas    
  40cb28:	test   DWORD PTR [ebx-0x7e95fb16],ecx
  40cb2e:	out    0x9f,eax
  40cb30:	adc    BYTE PTR [eax+edx*8+0x7c0ad4a4],ah
  40cb37:	and    BYTE PTR [ebx],al
  40cb39:	jne    0x40cb81
  40cb3b:	fld    DWORD PTR [edi]
  40cb3d:	out    dx,al
  40cb3e:	cdq    
  40cb3f:	mov    ebx,0x539531e
  40cb44:	ins    DWORD PTR es:[edi],dx
  40cb45:	iret   
  40cb46:	rcr    DWORD PTR [ecx-0x3d],0xed
  40cb4a:	jne    0x40cb9f
  40cb4c:	mov    DWORD PTR [ebp-0x27],ebp
  40cb4f:	in     eax,0x29
  40cb51:	pop    es
  40cb52:	xchg   ebx,eax
  40cb53:	stos   DWORD PTR es:[edi],eax
  40cb54:	or     esp,DWORD PTR [edx+esi*8+0x6b]
  40cb58:	push   eax
  40cb59:	je     0x40cb64
  40cb5b:	cmp    eax,0x22b46e7b
  40cb60:	ret    
  40cb61:	lods   eax,DWORD PTR ds:[esi]
  40cb62:	jmp    DWORD PTR [ecx-0x5bcb521e]
  40cb68:	jmp    FWORD PTR [ebx+0x5e]
  40cb6b:	xchg   ebp,eax
  40cb6c:	push   esp
  40cb6d:	or     esp,DWORD PTR [edi]
  40cb6f:	(bad)  
  40cb70:	jmp    0xe26cc815
  40cb75:	(bad)  
  40cb76:	imul   edi,esi,0xffffff9f
  40cb79:	mov    al,0x81
  40cb7b:	clc    
  40cb7c:	mov    bl,0x1d
  40cb7e:	aaa    
  40cb7f:	dec    edi
  40cb80:	pop    ds
  40cb81:	inc    edx
  40cb82:	out    0x82,eax
  40cb84:	push   esp
  40cb85:	inc    edx
  40cb86:	add    esp,ebx
  40cb88:	adc    dh,al
  40cb8a:	and    bh,cl
  40cb8c:	mov    al,BYTE PTR [eax]
  40cb8e:	pop    ebp
  40cb8f:	stos   BYTE PTR es:[edi],al
  40cb90:	or     DWORD PTR [esi-0x35],ebx
  40cb93:	mov    ah,0xca
  40cb95:	sti    
  40cb96:	mov    ss,WORD PTR [ecx-0x721770f8]
  40cb9c:	jecxz  0x40cb89
  40cb9e:	out    0x8e,eax
  40cba0:	or     BYTE PTR [eax+edx*8],0x1d
  40cba4:	cli    
  40cba5:	imul   esi,DWORD PTR [ebx+0x54d913c],0x47993325
  40cbaf:	and    eax,0xeb4111d9
  40cbb5:	and    bh,BYTE PTR [edi-0x4ae21551]
  40cbbb:	js     0x40cbd4
  40cbbd:	jno    0x40cc3d
  40cbbf:	adc    DWORD PTR [eax],ebp
  40cbc1:	sbb    bh,BYTE PTR [edx]
  40cbc3:	fcmovu st,st(5)
  40cbc5:	inc    ebx
  40cbc6:	dec    edx
  40cbc7:	(bad)  
  40cbc8:	mul    ebx
  40cbca:	xor    DWORD PTR [esi],eax
  40cbcc:	mov    esp,0xd080f606
  40cbd1:	(bad)  
  40cbd3:	jp     0x40cbbb
  40cbd5:	pop    ebp
  40cbd6:	int3   
  40cbd7:	add    dl,BYTE PTR [edx-0x4d]
  40cbda:	mov    al,BYTE PTR [edi-0x609fe6f0]
  40cbe0:	sar    BYTE PTR [ebp+0x22f84bfb],cl
  40cbe6:	sbb    dh,cl
  40cbe8:	or     DWORD PTR [eax],ebx
  40cbea:	in     eax,dx
  40cbeb:	cs iret 
  40cbed:	cmp    BYTE PTR [eax],0xf4
  40cbf0:	xchg   BYTE PTR [ebp-0x26],dl
  40cbf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbf4:	xchg   DWORD PTR [eax],ebx
  40cbf6:	cmp    al,0xfd
  40cbf8:	mov    WORD PTR [edi+ebp*1],?
  40cbfb:	cmp    dl,0x63
  40cbfe:	adc    eax,0x6653ec30
  40cc03:	push   esi
  40cc04:	push   esp
  40cc05:	es or  al,0x30
  40cc08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc09:	scas   al,BYTE PTR es:[edi]
  40cc0a:	pop    edx
  40cc0b:	aas    
  40cc0c:	jns    0x40cbba
  40cc0e:	ret    0x9085
  40cc11:	xor    edi,esi
  40cc13:	jns    0x40cc33
  40cc15:	rol    DWORD PTR [ecx],0x8e
  40cc18:	sub    edi,esi
  40cc1a:	loope  0x40cc4b
  40cc1c:	push   edi
  40cc1d:	adc    al,0xa0
  40cc1f:	jbe    0x40cbd3
  40cc21:	adc    DWORD PTR [edx-0x36],0xe
  40cc25:	fld    DWORD PTR [edi-0x624e2938]
  40cc2b:	add    dh,ch
  40cc2d:	test   al,0x5c
  40cc2f:	xchg   esp,eax
  40cc30:	or     bl,BYTE PTR [edi]
  40cc32:	and    dl,BYTE PTR [edx]
  40cc34:	push   esi
  40cc35:	std    
  40cc36:	lea    ecx,[esp+edx*4]
  40cc39:	push   ds
  40cc3a:	xchg   edx,eax
  40cc3b:	push   ebp
  40cc3c:	mov    ch,0x3f
  40cc3e:	adc    al,0x1c
  40cc40:	pop    esp
  40cc41:	cmp    BYTE PTR [ebx+0x4d],0x4c
  40cc45:	mul    DWORD PTR [edx-0x47b029ef]
  40cc4b:	ja     0x40cc12
  40cc4d:	bound  edi,QWORD PTR [eax+0x371887b0]
  40cc53:	adc    eax,0x587ef0a1
  40cc58:	jnp    0x40ccb1
  40cc5a:	sbb    edx,DWORD PTR [esp+esi*8-0x1f]
  40cc5e:	add    eax,0xb169a40a
  40cc63:	inc    eax
  40cc64:	jae    0x40ccd8
  40cc66:	xchg   ebp,eax
  40cc67:	pop    ebx
  40cc68:	in     eax,0xf8
  40cc6a:	addr16 hlt 
  40cc6c:	test   ecx,edx
  40cc6e:	icebp  
  40cc6f:	mov    dh,0xcc
  40cc71:	sbb    DWORD PTR [ebx-0x3fe80431],ebp
  40cc77:	push   ds
  40cc78:	imul   ebp,DWORD PTR [eax],0xa3f84c65
  40cc7e:	stos   BYTE PTR es:[edi],al
  40cc7f:	jns    0x40ccd1
  40cc81:	sub    al,0xbf
  40cc83:	(bad)  
  40cc85:	add    cl,BYTE PTR [ebx]
  40cc87:	retf   
  40cc88:	mov    ebp,0xb03d6dcb
  40cc8d:	adc    eax,0xd6b04a98
  40cc92:	mov    cl,0x49
  40cc94:	cwde   
  40cc95:	pop    eax
  40cc96:	or     bl,bh
  40cc98:	add    edi,edx
  40cc9a:	cmp    eax,0x4c873d63
  40cc9f:	imul   BYTE PTR [edi-0x38820b73]
  40cca5:	ror    DWORD PTR [edx+0x7bff5801],1
  40ccab:	pop    ebp
  40ccac:	dec    esp
  40ccad:	cmp    DWORD PTR [esi],ebx
  40ccaf:	pop    ebx
  40ccb0:	ret    
  40ccb1:	add    al,0xec
  40ccb3:	loopne 0x40cd23
  40ccb5:	dec    edi
  40ccb6:	cmp    DWORD PTR [esi+0x7],ecx
  40ccb9:	dec    edx
  40ccba:	cmp    eax,0x3076d74b
  40ccbf:	test   al,0x72
  40ccc1:	dec    eax
  40ccc2:	mov    bl,0x99
  40ccc4:	in     al,0x9d
  40ccc6:	rcr    DWORD PTR [edx],1
  40ccc8:	pop    ecx
  40ccc9:	bound  ebp,QWORD PTR [eax-0x3e129dbf]
  40cccf:	push   edi
  40ccd0:	iret   
  40ccd1:	xor    al,BYTE PTR [eax+0x68]
  40ccd4:	mov    edi,0x826e41e9
  40ccd9:	out    0x5f,eax
  40ccdb:	jns    0x40cce4
  40ccdd:	mov    bl,0xd4
  40ccdf:	mov    DWORD PTR [ebp+ebx*1+0x7888ceb4],esi
  40cce6:	test   al,0x7
  40cce8:	aas    
  40cce9:	xor    al,0x10
  40cceb:	imul   esp,DWORD PTR [edi+ebx*8+0x52],0x907392c5
  40ccf3:	mov    esp,0xf47ecdb
  40ccf8:	gs jb  0x40ccd9
  40ccfb:	sbb    edi,DWORD PTR [edi+0x5b943ec2]
  40cd01:	and    DWORD PTR [edi+0x2e5ded5f],ecx
  40cd07:	lods   eax,DWORD PTR ds:[esi]
  40cd08:	cmp    DWORD PTR [edx+0x2f],ecx
  40cd0b:	cmp    al,BYTE PTR [ecx+0x4d48a762]
  40cd11:	xor    ebx,edi
  40cd13:	mov    ebp,0x780055
  40cd18:	enter  0xffd9,0xca
  40cd1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd1d:	(bad)  
  40cd1e:	retf   
  40cd1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd20:	mov    ?,WORD PTR ds:0x9b2630a7
  40cd26:	push   ebx
  40cd27:	cdq    
  40cd28:	sbb    BYTE PTR [edx+ebp*8-0x3d857c32],ch
  40cd2f:	lea    ebp,[edi-0x17]
  40cd32:	adc    BYTE PTR [ebx-0x69e3c6ed],al
  40cd38:	popaw  
  40cd3a:	js     0x40cd4e
  40cd3c:	int3   
  40cd3d:	fadd   QWORD PTR [ecx-0x184163c0]
  40cd43:	mov    al,ds:0x1282293d
  40cd48:	cli    
  40cd49:	nop
  40cd4a:	gs retf 
  40cd4c:	sahf   
  40cd4d:	icebp  
  40cd4e:	pushf  
  40cd4f:	xor    BYTE PTR [edi],al
  40cd51:	or     al,BYTE PTR [edx]
  40cd53:	dec    ebx
  40cd54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd55:	(bad)
  40cd59:	imul   esi,esp,0xb685d308
  40cd5f:	dec    edi
  40cd60:	cs loopne 0x40cd83
  40cd63:	xor    dh,ah
  40cd65:	sub    ecx,DWORD PTR [edx+edi*8+0x66da9160]
  40cd6c:	sti    
  40cd6d:	mov    cl,0xd1
  40cd6f:	aad    0xfa
  40cd71:	mov    DWORD PTR [edx],ebx
  40cd73:	mov    eax,0x36b73684
  40cd78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd79:	(bad)  
  40cd7a:	cdq    
  40cd7b:	mov    bl,0xf8
  40cd7d:	int3   
  40cd7e:	dec    edi
  40cd7f:	lods   al,BYTE PTR ds:[esi]
  40cd80:	mov    bl,0xdc
  40cd82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd83:	jl     0x40cd68
  40cd85:	and    edx,DWORD PTR [ebp+0x4d]
  40cd88:	icebp  
  40cd89:	call   0x9f5a:0xc6d1f8bf
  40cd90:	jp     0x40ce04
  40cd92:	ret    
  40cd93:	and    esp,DWORD PTR [edi]
  40cd95:	mov    ah,0xa4
  40cd97:	push   ss
  40cd98:	push   cs
  40cd99:	(bad)  
  40cd9a:	pop    ds
  40cd9b:	gs stos BYTE PTR es:[edi],al
  40cd9d:	in     eax,dx
  40cd9e:	push   cs
  40cd9f:	mov    ecx,0xd32e9ad3
  40cda4:	push   edi
  40cda5:	or     eax,0xa54e7d5b
  40cdaa:	aam    0xcc
  40cdac:	ja     0x40cd77
  40cdae:	pop    ebp
  40cdaf:	jb     0x40cdc6
  40cdb1:	pusha  
  40cdb2:	xchg   edx,eax
  40cdb3:	lea    ecx,[eax-0x1fb1a392]
  40cdb9:	xchg   BYTE PTR [esi+0x42],al
  40cdbc:	das    
  40cdbd:	ja     0x40ce30
  40cdbf:	and    DWORD PTR [edx],edx
  40cdc1:	xor    eax,0x76493de0
  40cdc6:	or     ah,BYTE PTR [edi+0x41]
  40cdc9:	scas   eax,DWORD PTR es:[edi]
  40cdca:	in     al,0x73
  40cdcc:	iret   
  40cdcd:	mov    dh,0x52
  40cdcf:	xor    DWORD PTR [esi+edx*8-0x1e],edx
  40cdd3:	pop    eax
  40cdd4:	cmc    
  40cdd5:	imul   esp,esi,0xffffffd6
  40cdd8:	(bad)  
  40cdd9:	xor    eax,0x5bccc5d1
  40cdde:	outs   dx,DWORD PTR ds:[esi]
  40cddf:	sbb    al,0xd3
  40cde1:	sbb    dh,dh
  40cde3:	aam    0xaf
  40cde5:	xor    BYTE PTR [ebx+esi*1],al
  40cde8:	and    al,0x20
  40cdea:	or     dh,BYTE PTR [esi-0x2d]
  40cded:	sub    DWORD PTR [esi-0x2ba605e1],0x8288c428
  40cdf7:	and    BYTE PTR [ebx-0x12],0x3
  40cdfb:	aam    0x8d
  40cdfd:	sub    eax,0x816d5d49
  40ce02:	and    BYTE PTR [ebx+0x46],0x1e
  40ce06:	dec    esi
  40ce07:	(bad)  
  40ce08:	fild   WORD PTR [ecx-0x3b]
  40ce0b:	adc    al,0xe5
  40ce0d:	add    eax,0x3ef859b2
  40ce12:	push   0x32
  40ce14:	sbb    eax,0x647cfa62
  40ce19:	in     al,dx
  40ce1a:	rol    BYTE PTR [ecx-0x6c30472f],cl
  40ce20:	pop    esi
  40ce21:	jo     0x40ce37
  40ce23:	cmp    BYTE PTR [esi+0x6f9c83da],ah
  40ce29:	mov    es,WORD PTR [ebp+edi*1-0x1f58fc2]
  40ce30:	sub    al,0x5a
  40ce32:	(bad)  
  40ce33:	rcr    BYTE PTR [eax],0xd8
  40ce36:	adc    BYTE PTR [edx+edi*2-0x69],dh
  40ce3a:	jbe    0x40ce04
  40ce3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce3d:	adc    dl,BYTE PTR [esi-0x51598261]
  40ce43:	dec    edi
  40ce44:	inc    eax
  40ce45:	(bad)  
  40ce46:	std    
  40ce47:	pop    ebp
  40ce48:	ss (bad) 
  40ce4b:	pop    ebp
  40ce4c:	xchg   ecx,eax
  40ce4d:	fidivr WORD PTR [bx+di-0x5975]
  40ce52:	dec    ecx
  40ce53:	xchg   edx,eax
  40ce54:	aaa    
  40ce55:	fwait
  40ce56:	mov    ebx,edi
  40ce58:	in     eax,dx
  40ce59:	fwait
  40ce5a:	sbb    esi,0x2e82c7b
  40ce60:	shl    BYTE PTR [edx+esi*2-0x32],0x10
  40ce65:	not    BYTE PTR [ecx-0x3b]
  40ce68:	int    0xdd
  40ce6a:	ins    DWORD PTR es:[edi],dx
  40ce6b:	add    eax,0xf320d8b4
  40ce70:	sub    ah,dh
  40ce72:	fadd   DWORD PTR [eax+0x3d41455a]
  40ce78:	mov    cl,0x3c
  40ce7a:	repnz sbb BYTE PTR [edx],dh
  40ce7d:	cmp    DWORD PTR [ebx-0x2257b26d],ebx
  40ce83:	daa    
  40ce84:	jmp    0x40ceb6
  40ce86:	lods   al,BYTE PTR ds:[esi]
  40ce87:	add    ah,al
  40ce89:	and    ebp,DWORD PTR [ebx-0x29456ca9]
  40ce8f:	aam    0xe3
  40ce91:	pmaxub mm3,mm2
  40ce94:	mov    edi,0x14e250f0
  40ce99:	scas   eax,DWORD PTR es:[edi]
  40ce9a:	retf   0x360b
  40ce9d:	mov    ecx,0x26b8fcf7
  40cea2:	outs   dx,BYTE PTR ss:[esi]
  40cea4:	cmp    al,0x8
  40cea6:	and    eax,edi
  40cea8:	add    BYTE PTR [edx],bl
  40ceaa:	mov    ebp,0x902181a9
  40ceaf:	pop    esi
  40ceb0:	in     eax,dx
  40ceb1:	pop    es
  40ceb2:	sbb    DWORD PTR [eax-0x16],esi
  40ceb5:	ja     0x40cee9
  40ceb7:	sti    
  40ceb8:	jecxz  0x40cea4
  40ceba:	mov    cl,0xc1
  40cebc:	jmp    0x98d6:0x9ea5ac0b
  40cec3:	iret   
  40cec4:	jno    0x40ce53
  40cec6:	mov    ds:0x205abefc,al
  40cecb:	mov    WORD PTR [edi+0x71b9309b],?
  40ced1:	cmp    BYTE PTR [edi+edi*1],ah
  40ced4:	rol    DWORD PTR [ecx],1
  40ced6:	dec    ebx
  40ced7:	rcr    DWORD PTR [edx-0x797ec1fb],0x30
  40cede:	div    BYTE PTR ds:0xa3830c4
  40cee4:	add    bl,ah
  40cee6:	inc    ecx
  40cee7:	fisub  WORD PTR [esi+0x1a6169ce]
  40ceed:	addr16 sub dh,al
  40cef0:	mov    fs,WORD PTR [esp+eax*1+0x69]
  40cef4:	xchg   bh,bh
  40cef6:	xchg   DWORD PTR [edx+edi*8-0x5fbae161],eax
  40cefd:	in     eax,0x77
  40ceff:	inc    ebx
  40cf00:	lds    ebx,FWORD PTR [edx+0x3e]
  40cf03:	push   0x834b5798
  40cf08:	div    edx
  40cf0a:	mov    bh,dh
  40cf0c:	mov    esi,0xbe2ec064
  40cf11:	bound  ebx,QWORD PTR [ecx]
  40cf13:	mov    eax,gs
  40cf15:	mov    ds:0x93c564f0,eax
  40cf1a:	inc    ebp
  40cf1b:	or     esp,esp
  40cf1d:	lock dec esp
  40cf1f:	lock xchg ebx,eax
  40cf21:	clc    
  40cf22:	add    ebp,DWORD PTR ss:[ebx+0x7d7faf02]
  40cf29:	sbb    eax,0xca807d3b
  40cf2e:	add    eax,0x6ece62af
  40cf33:	arpl   WORD PTR [eax],sp
  40cf35:	or     dl,0xa0
  40cf38:	ss push cs
  40cf3a:	repnz cs inc ebx
  40cf3d:	outs   dx,DWORD PTR es:[esi]
  40cf3f:	fcomp  QWORD PTR [edx-0x1f374fe5]
  40cf45:	(bad)  
  40cf47:	cmp    ebp,edx
  40cf49:	(bad)  
  40cf4b:	or     BYTE PTR [esi+0x42dab7d2],0xde
  40cf52:	mov    eax,ds:0xcd9a7bd
  40cf57:	out    0x4a,eax
  40cf59:	(bad)  
  40cf5b:	hlt    
  40cf5c:	mov    esi,0x13ce6796
  40cf61:	or     bh,BYTE PTR [edx-0x2c]
  40cf64:	sub    bh,ah
  40cf66:	push   esp
  40cf67:	aaa    
  40cf68:	and    al,0x19
  40cf6a:	jne    0x40cf33
  40cf6c:	xchg   ecx,eax
  40cf6d:	ja     0x40cfae
  40cf6f:	in     al,dx
  40cf70:	adc    al,0x69
  40cf72:	mov    bl,BYTE PTR [ebx+0x31]
  40cf75:	lods   al,BYTE PTR ds:[esi]
  40cf76:	mov    bl,BYTE PTR [edx]
  40cf78:	xchg   DWORD PTR [eax],eax
  40cf7a:	scas   eax,DWORD PTR es:[di]
  40cf7c:	dec    ebx
  40cf7d:	xchg   esi,eax
  40cf7e:	dec    ebp
  40cf7f:	pop    ds
  40cf80:	or     BYTE PTR [ecx-0x3fdded44],0xec
  40cf87:	js     0x40cf78
  40cf89:	mov    ebp,DWORD PTR [ebp-0x77b0e431]
  40cf8f:	out    dx,al
  40cf90:	bound  esp,QWORD PTR [edx]
  40cf92:	push   eax
  40cf93:	ffree  st(5)
  40cf95:	xchg   DWORD PTR [edx+0x1b2dda62],ebp
  40cf9b:	push   edi
  40cf9c:	xor    edi,ebx
  40cf9e:	add    al,0xd0
  40cfa0:	sub    DWORD PTR [eax+0xa],edx
  40cfa3:	sahf   
  40cfa4:	push   0x1efa735f
  40cfa9:	rcl    DWORD PTR ds:0x69244f9a,0x2e
  40cfb0:	dec    eax
  40cfb1:	sbb    BYTE PTR [eax+ebp*2],dh
  40cfb4:	or     ebx,DWORD PTR [ecx+0x1104a39a]
  40cfba:	js     0x40cf3f
  40cfbc:	aas    
  40cfbd:	add    BYTE PTR [bx+si+0x76],bl
  40cfc1:	inc    edi
  40cfc2:	into   
  40cfc3:	mov    ecx,0xcf90f24d
  40cfc8:	sbb    al,0x53
  40cfca:	ffreep st(6)
  40cfcc:	xor    eax,0x2cbc6095
  40cfd1:	je     0x40cfea
  40cfd3:	icebp  
  40cfd4:	cwde   
  40cfd5:	dec    ecx
  40cfd6:	je     0x40d057
  40cfd8:	xor    al,0x92
  40cfda:	ret    0x6160
  40cfdd:	int    0x6
  40cfdf:	pop    ds
  40cfe0:	sbb    eax,0x3ec87193
  40cfe5:	retf   0xe4f2
  40cfe8:	int3   
  40cfe9:	(bad)  
  40cfea:	and    al,0x27
  40cfec:	call   0xa3c0:0x33baa797
  40cff3:	adc    BYTE PTR [ecx-0x54],ah
  40cff6:	(bad)  
  40cff7:	fdiv   DWORD PTR [ecx]
  40cff9:	jge    0x40d05e
  40cffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cffc:	dec    esi
  40cffd:	sbb    eax,0xf8daa71b
  40d002:	inc    eax
  40d003:	das    
  40d004:	mov    cl,0x17
  40d006:	scas   al,BYTE PTR es:[edi]
  40d007:	in     al,0x2a
  40d009:	fimul  DWORD PTR ds:0xa74e0f73
  40d00f:	in     eax,0xc8
  40d011:	sub    BYTE PTR [ecx+0x4c443035],al
  40d017:	xor    eax,ecx
  40d019:	add    esp,DWORD PTR [eax-0x196af91a]
  40d01f:	mul    DWORD PTR [ebp+0x67]
  40d022:	xchg   BYTE PTR [ebp-0x16],dh
  40d025:	jo     0x40d030
  40d027:	ret    
  40d028:	stc    
  40d029:	mov    eax,ds:0x6f32ad77
  40d02e:	pusha  
  40d02f:	aam    0xf3
  40d031:	mov    dl,0x8e
  40d033:	push   0x65d52990
  40d038:	out    dx,eax
  40d039:	dec    edx
  40d03a:	je     0x40d0b8
  40d03c:	into   
  40d03d:	jmp    FWORD PTR [edi+0x1b]
  40d040:	sbb    eax,0x6173a957
  40d045:	dec    eax
  40d046:	xchg   esp,eax
  40d047:	adc    al,0x16
  40d049:	lods   al,BYTE PTR ds:[esi]
  40d04a:	and    bl,BYTE PTR [eax-0x40]
  40d04d:	into   
  40d04e:	cmp    edx,DWORD PTR [eax+0x68]
  40d051:	aam    0x71
  40d053:	std    
  40d054:	aaa    
  40d055:	in     al,dx
  40d056:	jge    0x40d0be
  40d058:	in     eax,dx
  40d059:	ins    BYTE PTR es:[edi],dx
  40d05a:	(bad)  
  40d05b:	jge    0x40d089
  40d05d:	inc    ebx
  40d05e:	inc    ebx
  40d05f:	popf   
  40d060:	cmp    al,0x3
  40d062:	inc    edx
  40d063:	cdq    
  40d064:	and    al,0x6f
  40d066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d067:	outs   dx,DWORD PTR ds:[esi]
  40d068:	es dec ecx
  40d06a:	jmp    0xfaf37ef0
  40d06f:	push   ebx
  40d070:	xchg   ecx,eax
  40d071:	push   eax
  40d072:	mov    ds:0x14e793b1,al
  40d077:	ja     0x40d0ce
  40d079:	push   ss
  40d07a:	push   0x471bb9be
  40d07f:	xchg   edi,eax
  40d080:	pop    ebp
  40d081:	push   ss
  40d082:	fstp   TBYTE PTR [ebp+0x20]
  40d085:	fdivr  QWORD PTR [ebx+0x46f68cb1]
  40d08b:	fstp   st(4)
  40d08d:	push   ds
  40d08e:	retf   0x8bb7
  40d091:	jecxz  0x40d0c3
  40d093:	jno    0x40d101
  40d095:	push   ebp
  40d096:	or     eax,0x6543db05
  40d09b:	sahf   
  40d09c:	or     DWORD PTR [ebx+0x2],0xefe1387c
  40d0a3:	sti    
  40d0a4:	dec    edi
  40d0a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0a6:	add    al,0x6
  40d0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0a9:	mov    eax,0x6c64ac6a
  40d0ae:	mov    edi,0xfea476c2
  40d0b3:	dec    edx
  40d0b4:	aaa    
  40d0b5:	psrlw  mm6,QWORD PTR [edx+0x4a]
  40d0b9:	in     al,0xe
  40d0bb:	mov    al,0xe4
  40d0bd:	xor    ah,bl
  40d0bf:	xchg   esi,eax
  40d0c0:	imul   DWORD PTR [esi-0x683c5cb0]
  40d0c6:	xor    eax,0xb501b03e
  40d0cb:	xchg   ecx,eax
  40d0cc:	mov    ds:0x54d64a7b,al
  40d0d1:	or     al,0xff
  40d0d3:	pop    ds
  40d0d4:	xchg   esi,eax
  40d0d5:	cmp    eax,0xbdecd09c
  40d0da:	jp     0x40d136
  40d0dc:	ret    
  40d0dd:	cmp    eax,0xead4625b
  40d0e2:	outs   dx,DWORD PTR ds:[esi]
  40d0e3:	sti    
  40d0e4:	hlt    
  40d0e5:	in     eax,dx
  40d0e6:	mov    ah,0x14
  40d0e8:	cdq    
  40d0e9:	mov    eax,0x586dbcc3
  40d0ee:	mov    ch,0x21
  40d0f0:	sub    eax,DWORD PTR [eax-0x3e]
  40d0f3:	jne    0x40d102
  40d0f5:	sub    DWORD PTR [ebp+0x13],0x6c456fc7
  40d0fc:	mov    edx,0x448c3dec
  40d101:	std    
  40d102:	outs   dx,DWORD PTR ds:[esi]
  40d103:	or     BYTE PTR [eax],ch
  40d105:	xor    esi,DWORD PTR [ebx]
  40d107:	add    ebp,DWORD PTR ds:0x4423db0a
  40d10d:	add    edx,esp
  40d10f:	jecxz  0x40d0d8
  40d111:	mov    dl,0x53
  40d113:	lea    eax,[ebx+0x310909d4]
  40d119:	or     BYTE PTR [edx-0x17],al
  40d11c:	mov    cl,0x6f
  40d11e:	shl    DWORD PTR [ebp-0x76387ce5],cl
  40d124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d125:	std    
  40d126:	inc    ebx
  40d127:	adc    BYTE PTR [eax-0x4ff974e4],0xad
  40d12e:	fs jno 0x40d128
  40d131:	int    0x92
  40d133:	rol    DWORD PTR [esp+edi*8-0x28d30b31],1
  40d13a:	xor    bl,dl
  40d13c:	mov    WORD PTR [esi],?
  40d13e:	test   al,0xce
  40d140:	push   ss
  40d141:	mov    eax,ds:0x8e7e5b50
  40d146:	push   cs
  40d147:	rcl    BYTE PTR [ebx-0x78a69c10],0x47
  40d14e:	cmp    BYTE PTR [ecx-0x6dc31259],0x94
  40d155:	dec    ecx
  40d156:	add    eax,0x3e164909
  40d15b:	cmp    ah,bl
  40d15d:	cmp    DWORD PTR [esp+edx*1+0x4f],ecx
  40d161:	inc    eax
  40d162:	gs sti 
  40d164:	add    ah,0x6
  40d167:	and    DWORD PTR [eax+0x7f8cb639],0x2b7d0c78
  40d171:	jmp    0x16e357aa
  40d176:	jp     0x40d151
  40d178:	ins    BYTE PTR es:[edi],dx
  40d179:	mov    edx,esp
  40d17b:	or     bh,ah
  40d17d:	add    edx,ecx
  40d17f:	lods   eax,DWORD PTR ds:[esi]
  40d180:	xchg   bl,al
  40d182:	loopne 0x40d19a
  40d184:	arpl   WORD PTR [ebp+0x5fb70d46],sp
  40d18a:	or     al,0x75
  40d18c:	in     al,dx
  40d18d:	out    dx,eax
  40d18e:	into   
  40d18f:	adc    ebx,ebx
  40d191:	cmc    
  40d192:	stos   BYTE PTR es:[edi],al
  40d193:	pop    esp
  40d194:	loop   0x40d143
  40d196:	int    0xba
  40d198:	jl     0x40d1d2
  40d19a:	sti    
  40d19b:	rcr    esp,0x38
  40d19e:	pusha  
  40d19f:	dec    edi
  40d1a0:	loope  0x40d1f2
  40d1a2:	push   eax
  40d1a3:	idiv   BYTE PTR [esi+0x50]
  40d1a6:	xor    DWORD PTR [ebx-0x25],esi
  40d1a9:	adc    eax,0xac4ff7cb
  40d1ae:	and    DWORD PTR [edx+0x4e3886d1],ebx
  40d1b4:	(bad)  
  40d1b5:	leave  
  40d1b6:	scas   eax,DWORD PTR es:[edi]
  40d1b7:	xor    esp,DWORD PTR [ebp+0x6b]
  40d1ba:	jmp    0x40d209
  40d1bc:	xchg   ecx,eax
  40d1bd:	(bad)  
  40d1be:	rcr    BYTE PTR [ecx-0x21302205],0x40
  40d1c5:	mov    ds,WORD PTR [ebp-0x2a]
  40d1c8:	inc    ebx
  40d1c9:	mov    bh,0x20
  40d1cb:	mov    al,0x63
  40d1cd:	push   edx
  40d1ce:	sub    eax,0x86c3ac08
  40d1d3:	outs   dx,DWORD PTR ds:[esi]
  40d1d4:	(bad)  
  40d1d5:	push   ds
  40d1d6:	sbb    DWORD PTR [ebp-0x1c],edi
  40d1d9:	and    DWORD PTR [ebx+0x795a6c28],eax
  40d1df:	xor    eax,ecx
  40d1e1:	mov    edi,0xc32a84dd
  40d1e6:	dec    edx
  40d1e7:	dec    esp
  40d1e8:	neg    DWORD PTR [esi-0x65]
  40d1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ec:	aaa    
  40d1ed:	cmp    al,0xf9
  40d1ef:	cmp    bl,BYTE PTR [ebp-0x60743dfe]
  40d1f5:	fistp  QWORD PTR [edi+0xa]
  40d1f8:	dec    edx
  40d1f9:	dec    eax
  40d1fa:	(bad)  
  40d1fb:	jmp    0xc73:0xd1fad7fb
  40d202:	xor    dl,BYTE PTR [ecx]
  40d204:	add    DWORD PTR [ebp-0x32],edx
  40d207:	adc    DWORD PTR [eax-0x43],0xffffff83
  40d20b:	jp     0x40d1b0
  40d20d:	dec    esp
  40d20e:	scas   eax,DWORD PTR es:[edi]
  40d20f:	pop    ds
  40d210:	xor    DWORD PTR [edx],esp
  40d212:	stc    
  40d213:	mov    ah,0x44
  40d215:	repz adc dh,BYTE PTR [edi+0x60]
  40d219:	fist   DWORD PTR [edi]
  40d21b:	cdq    
  40d21c:	jno    0x40d253
  40d21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d21f:	push   ss
  40d220:	push   ecx
  40d221:	lahf   
  40d222:	xor    DWORD PTR [esi+0x2f85177e],esp
  40d228:	std    
  40d229:	test   al,0xc6
  40d22b:	adc    ch,BYTE PTR [eax]
  40d22d:	in     eax,0x1b
  40d22f:	bound  ebx,QWORD PTR [ebx+ebp*8-0x55]
  40d233:	mov    ah,0xe5
  40d235:	push   ss
  40d236:	int    0x6e
  40d238:	xor    bh,BYTE PTR [edx]
  40d23a:	sub    eax,0x5da462ed
  40d23f:	test   BYTE PTR [edi+0x6d0e7c60],bl
  40d245:	jns    0x40d2a2
  40d247:	hlt    
  40d248:	mov    bh,0xbc
  40d24a:	loope  0x40d1db
  40d24c:	pop    esi
  40d24d:	enter  0xcaf5,0xdd
  40d251:	add    cl,BYTE PTR [ecx]
  40d253:	fwait
  40d254:	jecxz  0x40d2c0
  40d256:	loope  0x40d270
  40d258:	and    ah,BYTE PTR [ecx]
  40d25a:	jg     0x40d230
  40d25c:	mov    ds:0xb90539ac,al
  40d261:	mov    BYTE PTR [edi],al
  40d263:	push   edx
  40d264:	add    edx,ecx
  40d266:	aam    0xa9
  40d268:	test   al,0xe0
  40d26a:	call   0x72b4:0xdffc04d9
  40d271:	mov    esi,0x74031ad7
  40d276:	fdiv   QWORD PTR [ebp-0x11]
  40d279:	retf   0xf172
  40d27c:	js     0x40d2d4
  40d27e:	into   
  40d27f:	xchg   edx,eax
  40d280:	pop    es
  40d281:	in     al,0xa7
  40d283:	mov    esi,DWORD PTR [eax+0x58e13058]
  40d289:	scas   al,BYTE PTR es:[edi]
  40d28a:	jmp    0xd67483cf
  40d28f:	or     BYTE PTR [ebx],ch
  40d291:	xor    bl,BYTE PTR ds:0x621021c1
  40d297:	test   al,0x19
  40d299:	aaa    
  40d29a:	mov    WORD PTR [ecx],gs
  40d29c:	mov    dl,0xd3
  40d29e:	add    al,bh
  40d2a0:	push   edx
  40d2a1:	mov    bl,0x1a
  40d2a3:	into   
  40d2a4:	jecxz  0x40d2b7
  40d2a6:	ins    DWORD PTR es:[edi],dx
  40d2a7:	fwait
  40d2a8:	loope  0x40d279
  40d2aa:	stos   DWORD PTR es:[edi],eax
  40d2ab:	push   ecx
  40d2ac:	and    bh,dh
  40d2ae:	pop    es
  40d2af:	sbb    DWORD PTR ds:0xc01be9e2,ebx
  40d2b5:	xchg   esi,eax
  40d2b6:	ins    DWORD PTR es:[edi],dx
  40d2b7:	outs   dx,BYTE PTR ds:[esi]
  40d2b8:	sub    BYTE PTR [edx],0xe3
  40d2bb:	pop    esp
  40d2bc:	es aas 
  40d2be:	das    
  40d2bf:	scas   ax,WORD PTR es:[edi]
  40d2c1:	mov    al,0x82
  40d2c3:	xchg   edx,eax
  40d2c4:	lods   al,BYTE PTR ds:[esi]
  40d2c5:	addps  xmm0,xmm5
  40d2c8:	pop    es
  40d2c9:	fcomp  DWORD PTR [edx]
  40d2cb:	inc    ebx
  40d2cc:	or     DWORD PTR [edi+0x57],0x55a4b3a2
  40d2d3:	fst    DWORD PTR [ebp+0x1]
  40d2d6:	mov    dl,0xb7
  40d2d8:	mov    bh,0x79
  40d2da:	cmp    eax,0x407a4f34
  40d2df:	sar    DWORD PTR [ecx+0x40],0x55
  40d2e3:	cmp    ebp,ebp
  40d2e5:	js     0x40d339
  40d2e7:	rol    BYTE PTR [ebx],1
  40d2e9:	xor    al,0x80
  40d2eb:	adc    esp,DWORD PTR [ebx]
  40d2ed:	mov    bh,BYTE PTR ds:0x25dbf43d
  40d2f3:	dec    ecx
  40d2f4:	inc    edx
  40d2f5:	pop    ebp
  40d2f6:	and    bp,WORD PTR [edi+0x1d7926bb]
  40d2fd:	outs   dx,DWORD PTR ds:[esi]
  40d2fe:	jmp    0xedf7:0x8cf02cd4
  40d305:	inc    eax
  40d306:	cld    
  40d307:	cli    
  40d308:	ret    0xb8bb
  40d30b:	loopne 0x40d2f0
  40d30d:	js     0x40d29d
  40d30f:	add    BYTE PTR [eax+0x10a34b2e],cl
  40d315:	mov    bl,BYTE PTR [ecx+0x3b]
  40d318:	sub    esp,DWORD PTR [eax-0x5]
  40d31b:	pushf  
  40d31c:	call   0x8e65:0xb9050b29
  40d323:	aad    0xf1
  40d325:	(bad)  
  40d326:	sti    
  40d327:	imul   bl
  40d329:	imul   ebx,DWORD PTR [esi+0x5e],0xd58c8646
  40d330:	fnstcw WORD PTR [ebp+0x1b8a0cf6]
  40d336:	add    eax,0x940ccd2b
  40d33b:	das    
  40d33c:	ins    DWORD PTR es:[edi],dx
  40d33d:	sub    ch,cl
  40d33f:	into   
  40d340:	cmp    eax,0xb8210494
  40d345:	fxch   st(5)
  40d347:	push   ebp
  40d348:	mov    cl,0x71
  40d34a:	cmp    BYTE PTR [edi+edx*8],al
  40d34d:	dec    ebx
  40d34e:	or     eax,0xe06732b4
  40d353:	pop    ecx
  40d354:	or     eax,0xa60c1c6f
  40d359:	aad    0xb3
  40d35b:	mov    ebx,0xdda8ba17
  40d360:	or     al,0xa9
  40d362:	sahf   
  40d363:	cmp    eax,0xec3831ae
  40d368:	sbb    DWORD PTR [edi-0x3],esi
  40d36b:	adc    eax,0x1c6b65c5
  40d370:	outs   dx,BYTE PTR ds:[esi]
  40d371:	imul   esp,DWORD PTR [ecx],0x44e4e403
  40d377:	(bad)  
  40d378:	fcomi  st,st(4)
  40d37a:	mov    dl,0xc3
  40d37c:	xlat   BYTE PTR ds:[ebx]
  40d37d:	bound  ecx,QWORD PTR [eax+edi*2]
  40d380:	sar    DWORD PTR [ecx],cl
  40d382:	mov    BYTE PTR [ecx-0x3d],dl
  40d385:	dec    esp
  40d386:	jecxz  0x40d348
  40d388:	repz jecxz 0x40d406
  40d38b:	xchg   ebx,eax
  40d38c:	and    BYTE PTR [edx],0xce
  40d38f:	call   0x16ea01f0
  40d394:	xchg   ebp,eax
  40d395:	sub    ah,BYTE PTR [edi]
  40d397:	fsubr  QWORD PTR [esp+ecx*8-0x55]
  40d39b:	enter  0xaa72,0x4
  40d39f:	iret   
  40d3a0:	push   ecx
  40d3a1:	and    eax,0x71dc7dd4
  40d3a6:	add    BYTE PTR [ebp+0x216dfeb5],0xa7
  40d3ad:	inc    edx
  40d3ae:	sti    
  40d3af:	push   edi
  40d3b0:	hlt    
  40d3b1:	cvtdq2ps xmm5,XMMWORD PTR fs:[edx]
  40d3b5:	mov    bh,0x38
  40d3b7:	mov    al,ds:0x6bc268bc
  40d3bc:	imul   ebp,DWORD PTR [eax-0x3e],0xffffff9f
  40d3c0:	sbb    DWORD PTR [eax+0x77],0x8bd3a64a
  40d3c7:	daa    
  40d3c8:	pop    eax
  40d3c9:	fs out dx,eax
  40d3cb:	sub    ebx,DWORD PTR [edi-0x65f484f0]
  40d3d1:	xchg   BYTE PTR [edx],dl
  40d3d3:	mov    edx,0x1a5f7aff
  40d3d8:	sub    eax,0x71269a56
  40d3dd:	test   al,0x9e
  40d3df:	imul   ebx,DWORD PTR [edi+ebp*4-0x61],0xffffff80
  40d3e4:	fimul  DWORD PTR [ecx+ecx*8+0x46b91f1e]
  40d3eb:	sar    DWORD PTR [edx-0x4f],0x70
  40d3ef:	inc    edx
  40d3f0:	pop    ebx
  40d3f1:	aaa    
  40d3f2:	mov    bh,0x5a
  40d3f4:	pop    esi
  40d3f5:	arpl   WORD PTR [esi-0x1121d19c],bp
  40d3fb:	data16 rcr ch,cl
  40d3fe:	fisubr WORD PTR [ecx]
  40d400:	xor    eax,0xdb0ae3c2
  40d405:	call   0x937d0cd
  40d40a:	xor    ebp,DWORD PTR [esi-0x15]
  40d40d:	push   es
  40d40e:	pushf  
  40d40f:	ffreep st(5)
  40d411:	in     eax,0xb5
  40d413:	and    eax,0xc650ab4a
  40d418:	adc    ebp,DWORD PTR [esi]
  40d41a:	mov    esi,DWORD PTR [edi+edx*4-0x63afb311]
  40d421:	adc    DWORD PTR [ebp+0x2c],esi
  40d424:	fild   QWORD PTR [ecx]
  40d426:	inc    eax
  40d427:	sti    
  40d428:	or     eax,0x624978fd
  40d42d:	jno    0x40d446
  40d42f:	mov    ds:0xf1b73e4f,al
  40d434:	xchg   ebp,eax
  40d435:	xchg   esi,eax
  40d436:	jno    0x40d3d4
  40d438:	xor    eax,0xb4b3190e
  40d43d:	xchg   esp,eax
  40d43e:	lock sub BYTE PTR [ecx+ebp*4+0x423c1858],0x47
  40d447:	or     DWORD PTR [eax],0x70
  40d44a:	sub    esi,DWORD PTR [ecx+0x5c3dfd4f]
  40d450:	call   0x8986:0xe55801d3
  40d457:	sbb    BYTE PTR [edi+0x7163084a],0x3f
  40d45e:	rcr    DWORD PTR ds:[eax+0x25862dc1],1
  40d465:	or     eax,0x2231d28e
  40d46a:	sbb    al,0x90
  40d46c:	push   edi
  40d46d:	sub    eax,0x8e14fba5
  40d472:	neg    DWORD PTR [edi+ebx*1+0x6f4fc4f2]
  40d479:	push   edi
  40d47a:	push   eax
  40d47b:	aaa    
  40d47c:	ret    0x18d8
  40d47f:	cmp    al,0xe1
  40d481:	pop    ds
  40d482:	stos   DWORD PTR es:[edi],eax
  40d483:	mov    ebx,DWORD PTR [ebp+0x67]
  40d486:	rcl    DWORD PTR [ebp-0x65db1b8b],1
  40d48c:	push   ds
  40d48d:	(bad)  
  40d48e:	pop    esi
  40d48f:	ins    DWORD PTR es:[edi],dx
  40d490:	add    cl,dh
  40d492:	fcmove st,st(4)
  40d494:	jb     0x40d4c7
  40d496:	dec    esp
  40d497:	push   esi
  40d498:	and    ebx,DWORD PTR [esi+esi*2+0x5c]
  40d49c:	sbb    DWORD PTR [edx+0x13c42c5f],esi
  40d4a2:	ds mov dl,0x47
  40d4a5:	or     esp,eax
  40d4a7:	leave  
  40d4a8:	in     eax,dx
  40d4a9:	push   es
  40d4aa:	cwde   
  40d4ab:	in     al,0x93
  40d4ad:	ret    0x90b1
  40d4b0:	dec    ebp
  40d4b1:	pop    ss
  40d4b2:	sub    ah,BYTE PTR [edx]
  40d4b4:	push   0x2103f498
  40d4b9:	aad    0x5a
  40d4bb:	sub    BYTE PTR [edx+0x68159eaa],0xb7
  40d4c2:	inc    esp
  40d4c3:	jle    0x40d4eb
  40d4c5:	ret    0x899d
  40d4c8:	mov    dl,0xff
  40d4ca:	jns    0x40d50a
  40d4cc:	mov    bh,0x53
  40d4ce:	in     eax,dx
  40d4cf:	shl    BYTE PTR ds:0x692ff4ec,1
  40d4d5:	aam    0x28
  40d4d7:	xchg   esp,eax
  40d4d8:	scas   eax,DWORD PTR es:[edi]
  40d4d9:	xor    al,0x7e
  40d4db:	popa   
  40d4dc:	std    
  40d4dd:	lea    edx,[edi]
  40d4df:	stc    
  40d4e0:	inc    eax
  40d4e1:	dec    ebx
  40d4e2:	fs inc ebx
  40d4e4:	int    0x94
  40d4e6:	push   eax
  40d4e7:	ds jecxz 0x40d475
  40d4ea:	jne    0x40d4df
  40d4ec:	es movzx ecx,dx
  40d4f0:	repz pop esp
  40d4f2:	test   eax,0x62cd42a7
  40d4f7:	push   ecx
  40d4f8:	push   es
  40d4f9:	sub    esp,DWORD PTR es:[ebp-0x78]
  40d4fd:	xor    bh,BYTE PTR [ebp-0xd]
  40d500:	jb     0x40d4e2
  40d502:	xor    DWORD PTR [esi],ebx
  40d504:	mov    ch,0x6c
  40d506:	or     edx,DWORD PTR [ecx-0x110169a3]
  40d50c:	sbb    BYTE PTR [ecx],ch
  40d50e:	push   esi
  40d50f:	int    0x23
  40d511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d512:	(bad)  
  40d513:	ins    BYTE PTR es:[edi],dx
  40d514:	pop    esi
  40d515:	mov    eax,0x28fb1c5e
  40d51a:	add    bh,cl
  40d51c:	pop    edx
  40d51d:	push   edi
  40d51e:	les    ebp,FWORD PTR [ecx]
  40d520:	jo     0x40d539
  40d522:	dec    esi
  40d523:	in     eax,0x93
  40d525:	out    dx,al
  40d526:	out    0x21,eax
  40d528:	shl    DWORD PTR [esp+edi*2+0x33941ea8],cl
  40d52f:	or     eax,0xd5113b
  40d534:	pop    edx
  40d535:	adc    eax,0x9072cccf
  40d53a:	cmp    al,0x77
  40d53c:	sub    BYTE PTR [eax+0x163b4043],bl
  40d542:	popa   
  40d543:	xchg   ebx,eax
  40d544:	out    dx,al
  40d545:	dec    edx
  40d546:	xchg   edx,eax
  40d547:	popa   
  40d548:	dec    ebp
  40d549:	and    ah,bl
  40d54b:	dec    ecx
  40d54c:	mov    edx,0x5c168ce5
  40d551:	loop   0x40d544
  40d553:	outs   dx,BYTE PTR ds:[esi]
  40d554:	shr    DWORD PTR [ecx],0xa8
  40d557:	enter  0xb384,0x4e
  40d55b:	mov    al,ds:0x199bc70b
  40d560:	sbb    DWORD PTR [edi+0x2409de9c],esi
  40d566:	push   eax
  40d567:	cmp    DWORD PTR [ecx+0x75d6d39a],ecx
  40d56d:	pop    edx
  40d56e:	and    BYTE PTR [eax],bh
  40d570:	adc    esp,DWORD PTR [edi-0x3a5479aa]
  40d576:	pop    esi
  40d577:	loope  0x40d5f7
  40d579:	test   eax,0xdb4399f9
  40d57e:	and    al,dh
  40d580:	inc    ebp
  40d581:	(bad)  
  40d582:	jns    0x40d505
  40d584:	shl    DWORD PTR [edi],1
  40d586:	jne    0x40d588
  40d588:	add    BYTE PTR [ebp+0x1511ff45],cl
  40d58e:	fwait
  40d58f:	mov    eax,ds:0x45890042
  40d594:	hlt    
  40d595:	mov    al,BYTE PTR [ebp-0x1]
  40d598:	sbb    ecx,DWORD PTR ds:0x42a173
  40d59e:	mov    ecx,DWORD PTR [ebp-0xc]
  40d5a1:	xor    al,0x7b
  40d5a3:	dec    al
  40d5a5:	add    DWORD PTR ds:0x42a147,0x42a177
  40d5af:	mov    BYTE PTR [ecx],al
  40d5b1:	dec    ecx
  40d5b2:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40d5b9:	push   ebx
  40d5ba:	mov    eax,ds:0x42a227
  40d5bf:	xor    ecx,ecx
  40d5c1:	xor    ecx,DWORD PTR ds:0x42a25f
  40d5c7:	sub    ecx,eax
  40d5c9:	sub    eax,DWORD PTR [eax+ecx*1]
  40d5cc:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  40d5d3:	and    DWORD PTR ds:0x42a1b7,0x0
  40d5dd:	jmp    0x40d5ef
  40d5e2:	mov    ecx,DWORD PTR ds:0x42a1b7
  40d5e8:	inc    ecx
  40d5e9:	mov    DWORD PTR ds:0x42a1b7,ecx
  40d5ef:	cmp    DWORD PTR ds:0x42a1b7,0x1e
  40d5f6:	jae    0x40d623
  40d5fc:	cmp    DWORD PTR ds:0x42a1b7,0x27
  40d603:	ja     0x40d623
  40d609:	jmp    0x40d61e
  40d60e:	push   0x2919
  40d613:	push   0x5f54
  40d618:	call   DWORD PTR ds:0x42a2c3
  40d61e:	jmp    0x40d5e2
  40d623:	mov    ecx,DWORD PTR [ebp-0x18]
  40d626:	xor    DWORD PTR ds:0x42a14b,ebx
  40d62c:	push   esi
  40d62d:	and    DWORD PTR ds:0x42a147,0x0
  40d637:	jmp    0x40d647
  40d63c:	mov    eax,ds:0x42a147
  40d641:	inc    eax
  40d642:	mov    ds:0x42a147,eax
  40d647:	cmp    DWORD PTR ds:0x42a147,0x19
  40d64e:	jae    0x40d679
  40d654:	cmp    DWORD PTR ds:0x42a147,0x22
  40d65b:	jbe    0x40d679
  40d661:	jmp    0x40d674
  40d666:	push   0x61d1
  40d66b:	push   DWORD PTR [ebp-0x18]
  40d66e:	call   DWORD PTR ds:0x42a2c7
  40d674:	jmp    0x40d63c
  40d679:	mov    eax,0x75108a8
  40d67e:	sub    esi,DWORD PTR ds:0x42a1ab
  40d684:	xor    ecx,eax
  40d686:	mov    esi,0x3272ef
  40d68b:	push   edi
  40d68c:	sbb    DWORD PTR ds:0x42a1cb,0x42a1c7
  40d696:	add    ecx,esi
  40d698:	mov    DWORD PTR ds:0x42a1bf,0x6562
  40d6a2:	jmp    0x40d6b2
  40d6a7:	mov    dl,BYTE PTR [ebp-0x1]
  40d6aa:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40d6b1:	inc    ecx
  40d6b2:	mov    DWORD PTR ds:0x42a1af,0x1651
  40d6bc:	cmp    ecx,0x40
  40d6bf:	jb     0x40d6a7
  40d6c5:	mov    DWORD PTR ds:0x42a19f,0x1c
  40d6cf:	cmp    DWORD PTR ds:0x42a19f,0x0
  40d6d6:	je     0x40d72f
  40d6dc:	cmp    DWORD PTR ds:0x42a19f,0x5
  40d6e3:	jb     0x40d72f
  40d6e9:	jmp    0x40d703
  40d6ee:	push   0x2a2f
  40d6f3:	push   0x42a1ab
  40d6f8:	push   0x400000
  40d6fd:	call   DWORD PTR ds:0x42a2cf
  40d703:	cmp    DWORD PTR ds:0x42a19f,0x6
  40d70a:	jne    0x40d71d
  40d710:	mov    edx,DWORD PTR ds:0x42a19f
  40d716:	dec    edx
  40d717:	mov    DWORD PTR ds:0x42a19f,edx
  40d71d:	mov    edx,DWORD PTR ds:0x42a19f
  40d723:	dec    edx
  40d724:	mov    DWORD PTR ds:0x42a19f,edx
  40d72a:	jmp    0x40d6cf
  40d72f:	mov    edx,DWORD PTR [ebp-0x18]
  40d732:	mov    DWORD PTR ds:0x42a17b,0x4b1
  40d73c:	xor    edx,eax
  40d73e:	adc    DWORD PTR ds:0x42a19b,0x42a1cf
  40d748:	add    edx,esi
  40d74a:	mov    DWORD PTR ds:0x42a1ab,0x5d5c
  40d754:	jmp    0x40fb6b
  40d759:	mov    edi,DWORD PTR [ebp+0x8]
  40d75c:	xor    DWORD PTR ds:0x42a167,0x6495
  40d766:	mov    ecx,0x8a96
  40d76b:	and    DWORD PTR ds:0x42a133,0x42a1a7
  40d775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40d77a:	sbb    DWORD PTR ds:0x42a17b,0x2976
  40d784:	mov    edi,0x3b59
  40d789:	xor    DWORD PTR ds:0x42a143,0x42a187
  40d793:	add    cx,di
  40d796:	movzx  ecx,cx
  40d799:	sbb    DWORD PTR ds:0x42a193,0x4902
  40d7a3:	mov    DWORD PTR [ebp-0xc],ecx
  40d7a6:	xor    DWORD PTR ds:0x42a167,edx
  40d7ac:	jmp    0x40fb31
  40d7b1:	popa   
  40d7b2:	sbb    DWORD PTR [edi],0x5b849f06
  40d7b8:	test   DWORD PTR [esp+eiz*4],ebx
  40d7bb:	push   esp
  40d7bc:	pop    esi
  40d7bd:	dec    esi
  40d7be:	cld    
  40d7bf:	iret   
  40d7c0:	dec    eax
  40d7c1:	into   
  40d7c2:	retf   0x7a7a
  40d7c5:	adc    bl,BYTE PTR [edi+0x7a]
  40d7c8:	jp     0x40d80a
  40d7ca:	inc    esp
  40d7cb:	adc    BYTE PTR [edi+0x63],dl
  40d7ce:	add    cl,BYTE PTR [eax+eiz*2]
  40d7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d2:	mov    bl,0x10
  40d7d4:	sti    
  40d7d5:	nop
  40d7d6:	or     eax,0x8c3ba14a
  40d7db:	jno    0x40d81a
  40d7dd:	cmp    al,0x9e
  40d7df:	pop    esp
  40d7e0:	or     BYTE PTR [ebx+ebx*4],dl
  40d7e3:	jle    0x40d7cf
  40d7e5:	sbb    DWORD PTR [edx+0xe],esi
  40d7e8:	test   DWORD PTR [esi-0x47],eax
  40d7eb:	push   edi
  40d7ec:	mov    eax,esi
  40d7ee:	push   ecx
  40d7ef:	popf   
  40d7f0:	mov    eax,0xdea2f893
  40d7f5:	jnp    0x40d845
  40d7f7:	int    0x2e
  40d7f9:	inc    edx
  40d7fa:	imul   eax,DWORD PTR [ebp+0x4372f8c1],0x5e
  40d801:	pushf  
  40d802:	(bad)
  40d805:	data16 loop 0x40d7e1
  40d808:	cmp    BYTE PTR [ebx-0x32199179],al
  40d80e:	mov    edx,edi
  40d810:	push   ecx
  40d811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d812:	or     al,0x23
  40d814:	jmp    0x3a3e:0xb315be6d
  40d81b:	(bad)  
  40d81c:	stc    
  40d81d:	daa    
  40d81e:	sbb    dh,cl
  40d820:	jnp    0x40d7b4
  40d822:	test   al,0xa
  40d824:	ds loop 0x40d831
  40d827:	lahf   
  40d828:	(bad)  
  40d829:	ss mov ch,0xa2
  40d82c:	pop    ecx
  40d82d:	xchg   BYTE PTR [esi+0x2e],cl
  40d830:	jp     0x40d887
  40d832:	adc    DWORD PTR [esp+esi*4-0x2a],edx
  40d836:	cmp    eax,0x130af9d7
  40d83b:	sub    ch,dl
  40d83d:	cdq    
  40d83e:	int3   
  40d83f:	cmp    DWORD PTR [edx],edi
  40d841:	repnz sub DWORD PTR [ebx+0x14e98df3],0xffffffc5
  40d849:	inc    eax
  40d84a:	cmp    ebx,ebp
  40d84c:	repz stc 
  40d84e:	pop    ds
  40d84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d850:	cmp    DWORD PTR [eax],edi
  40d852:	aas    
  40d853:	adc    BYTE PTR [ecx+0x48b1d2e0],0x36
  40d85a:	push   ss
  40d85b:	(bad)  
  40d85c:	pop    edi
  40d85d:	lods   eax,DWORD PTR ds:[esi]
  40d85e:	(bad)  
  40d85f:	mov    ch,0xa7
  40d861:	jmp    0x2d6d565e
  40d866:	or     eax,0xab195c58
  40d86b:	outs   dx,BYTE PTR ds:[esi]
  40d86c:	jns    0x40d806
  40d86e:	je     0x40d8c8
  40d870:	push   ss
  40d871:	loopne 0x40d85c
  40d873:	or     al,0xb5
  40d875:	jmp    0x40d83d
  40d877:	sub    BYTE PTR [edi+ecx*4],dh
  40d87a:	(bad)  [esi-0x26ac8263]
  40d880:	mov    ecx,esp
  40d882:	add    dl,dl
  40d884:	fstp   TBYTE PTR [ebp-0x6d3e6a5b]
  40d88a:	nop
  40d88b:	cli    
  40d88c:	mov    ds:0x293e0375,eax
  40d891:	dec    esp
  40d892:	lods   al,BYTE PTR ds:[esi]
  40d893:	push   ebx
  40d894:	mov    ebx,0xd8b8162d
  40d899:	mov    ?,ecx
  40d89b:	push   0xb6c19c4b
  40d8a0:	push   ebx
  40d8a1:	jmp    0x40d91d
  40d8a3:	or     eax,0xda5ac823
  40d8a8:	push   ds
  40d8a9:	xor    DWORD PTR [eax-0x61],ebp
  40d8ac:	jmp    0x40d833
  40d8ae:	dec    esp
  40d8af:	sub    BYTE PTR [ebx-0x26],ah
  40d8b2:	into   
  40d8b3:	jo     0x40d8dc
  40d8b5:	mov    dl,0xae
  40d8b7:	lea    edx,[eax+0x6a]
  40d8ba:	jns    0x40d883
  40d8bc:	sub    dh,BYTE PTR [eax]
  40d8be:	mov    dh,0x3b
  40d8c0:	addr16 push ss
  40d8c2:	push   eax
  40d8c3:	mov    eax,0xf80e778f
  40d8c8:	inc    esp
  40d8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ca:	add    ebp,edi
  40d8cc:	loop   0x40d86f
  40d8ce:	lods   al,BYTE PTR ds:[esi]
  40d8cf:	fwait
  40d8d0:	jae    0x40d91f
  40d8d2:	mov    edi,0xa9a20367
  40d8d7:	pop    eax
  40d8d8:	call   0x10ea:0x59b6415
  40d8df:	nop
  40d8e0:	pop    ebx
  40d8e1:	xchg   ebx,eax
  40d8e2:	dec    ebp
  40d8e3:	aas    
  40d8e4:	mov    dh,0x5f
  40d8e6:	aam    0xf3
  40d8e8:	jns    0x40d933
  40d8ea:	add    eax,0xa6464982
  40d8ef:	dec    ecx
  40d8f0:	ja     0x40d92d
  40d8f2:	test   BYTE PTR [esi],cl
  40d8f4:	pop    esi
  40d8f5:	int    0xa
  40d8f7:	fs xchg esi,eax
  40d8f9:	push   ecx
  40d8fa:	outs   dx,BYTE PTR ds:[esi]
  40d8fb:	jmp    0x2d262440
  40d900:	sbb    eax,0x983db49e
  40d905:	dec    edx
  40d906:	add    BYTE PTR [ebx+0x19d6dba3],al
  40d90c:	or     esi,DWORD PTR [ecx-0x39]
  40d90f:	jecxz  0x40d899
  40d911:	call   0x1b652e0e
  40d916:	outs   dx,DWORD PTR ds:[esi]
  40d917:	xor    al,0xf9
  40d919:	mov    ss,WORD PTR [edx-0x77]
  40d91c:	dec    ecx
  40d91d:	call   DWORD PTR [ebx+edx*8-0x5b8970c5]
  40d924:	sbb    ebx,DWORD PTR [edx]
  40d926:	pop    esi
  40d927:	or     ebp,DWORD PTR [ebx-0x16]
  40d92a:	jno    0x40d8cb
  40d92c:	push   esp
  40d92d:	push   ss
  40d92e:	loopne 0x40d908
  40d930:	fld    QWORD PTR [esi]
  40d932:	(bad)  
  40d934:	ds leave 
  40d936:	aaa    
  40d937:	ficomp WORD PTR [ebp+0x6353261]
  40d93d:	gs mov bl,0x13
  40d940:	data16 jns 0x40d8da
  40d943:	test   DWORD PTR [ebp+0x214d3f35],esi
  40d949:	cmp    DWORD PTR [ecx+0x4c2c3cf0],edi
  40d94f:	out    0x1e,eax
  40d951:	push   esp
  40d952:	cmp    bl,BYTE PTR [bp+si+0x23fd]
  40d957:	int    0x52
  40d959:	sub    al,0x90
  40d95b:	inc    esi
  40d95c:	sbb    cl,dh
  40d95e:	dec    ecx
  40d95f:	stos   DWORD PTR es:[edi],eax
  40d960:	in     al,0x5
  40d962:	loopne 0x40d987
  40d964:	(bad)  
  40d965:	imul   edx,DWORD PTR [edx-0x67],0xa9165526
  40d96c:	cmp    ecx,esp
  40d96e:	lods   eax,DWORD PTR ds:[esi]
  40d96f:	(bad)
  40d972:	add    BYTE PTR [edi],0xf1
  40d975:	add    al,0xd7
  40d977:	or     al,0xef
  40d979:	jnp    0x40d9c0
  40d97b:	aad    0xd1
  40d97d:	pop    edx
  40d97e:	cmp    al,0x49
  40d980:	cmp    DWORD PTR [esi-0x6afd4647],0xbd0b66c1
  40d98a:	call   0xf1b6:0xeeee75b9
  40d991:	dec    edi
  40d992:	pop    edi
  40d993:	inc    edx
  40d994:	loopne 0x40d98a
  40d996:	out    0x43,al
  40d998:	pop    edx
  40d999:	int3   
  40d99a:	mov    eax,DWORD PTR [edx+ebx*2]
  40d99d:	xor    eax,0xe2c0aed5
  40d9a2:	loop   0x40d92a
  40d9a4:	ins    BYTE PTR es:[edi],dx
  40d9a5:	inc    ebp
  40d9a6:	or     al,BYTE PTR [ecx]
  40d9a8:	enter  0x8c93,0x9e
  40d9ac:	fs pop esi
  40d9ae:	push   esp
  40d9af:	test   eax,0x155c1522
  40d9b4:	cmc    
  40d9b5:	lods   eax,DWORD PTR ds:[esi]
  40d9b6:	fld    TBYTE PTR [edi-0x51e499a7]
  40d9bc:	jns    0x40d9c0
  40d9be:	mov    eax,0x33059650
  40d9c3:	ret    0xf78f
  40d9c6:	add    eax,0xb78f3277
  40d9cb:	pop    ss
  40d9cc:	cmp    eax,0xb89cf41
  40d9d1:	mov    WORD PTR [esi+0x47ac2765],fs
  40d9d7:	sub    edi,edx
  40d9d9:	ret    0xd477
  40d9dc:	xor    edx,DWORD PTR [ebx*4+0x8d0c84d]
  40d9e3:	cmc    
  40d9e4:	mov    ds:0xf96be380,eax
  40d9e9:	mov    cl,0x13
  40d9eb:	test   BYTE PTR [esi-0x4b],dl
  40d9ee:	mov    dh,0xed
  40d9f0:	or     dl,BYTE PTR [ebp+0x8]
  40d9f3:	sar    DWORD PTR [edi-0x4d],cl
  40d9f6:	dec    edi
  40d9f7:	xchg   edi,eax
  40d9f8:	stos   BYTE PTR es:[edi],al
  40d9f9:	div    DWORD PTR [esi]
  40d9fb:	mov    gs,WORD PTR [edi+0x60422b97]
  40da01:	or     eax,0x839abb8b
  40da06:	inc    esp
  40da07:	pop    eax
  40da08:	xor    BYTE PTR [esi+0x7fdc987a],ah
  40da0e:	dec    ebp
  40da0f:	in     eax,0xd3
  40da11:	mov    edx,DWORD PTR [esi-0x3d]
  40da14:	mov    bh,0x9e
  40da16:	popf   
  40da17:	or     dh,BYTE PTR [bx+si-0x792d]
  40da1c:	pusha  
  40da1d:	mov    ebp,0x3282fc4d
  40da22:	dec    eax
  40da23:	jg     0x40d9b5
  40da25:	sbb    al,0xee
  40da27:	add    bh,BYTE PTR [esi+0x14]
  40da2a:	mov    eax,ds:0xab88693b
  40da2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da30:	repnz into 
  40da32:	int    0x81
  40da34:	int    0x1b
  40da36:	ret    
  40da37:	(bad)  
  40da38:	pop    esi
  40da39:	push   ebp
  40da3a:	lahf   
  40da3b:	push   DWORD PTR [edx+0x5]
  40da3e:	int3   
  40da3f:	ja     0x40d9e7
  40da41:	popa   
  40da42:	jnp    0x40d9fc
  40da44:	or     al,0xf0
  40da46:	push   0x54
  40da48:	adc    eax,0xc2b53268
  40da4d:	add    ebp,DWORD PTR [edi-0x263a456]
  40da53:	in     al,dx
  40da54:	or     DWORD PTR [ebx+0x18],0xcad5a693
  40da5b:	ret    
  40da5c:	shl    BYTE PTR ds:0xbe9f23f1,cl
  40da62:	mov    ah,0x2e
  40da64:	aad    0x5e
  40da66:	popa   
  40da67:	and    DWORD PTR [esp-0x2b41c1c5],edi
  40da6e:	cli    
  40da6f:	dec    edi
  40da70:	push   eax
  40da71:	or     BYTE PTR [edi],dh
  40da73:	pop    esp
  40da74:	mov    esp,0xea441713
  40da79:	xor    eax,DWORD PTR [esi-0x84e3ae7]
  40da7f:	xchg   ebp,eax
  40da80:	lods   al,BYTE PTR ds:[esi]
  40da81:	pop    es
  40da82:	outs   dx,BYTE PTR ds:[esi]
  40da83:	push   ebx
  40da84:	ins    BYTE PTR es:[edi],dx
  40da85:	pop    edi
  40da86:	mov    edi,0xc4f68098
  40da8b:	mov    bl,BYTE PTR [eax+ecx*1]
  40da8e:	data16 or al,ah
  40da91:	mov    WORD PTR [edx],?
  40da93:	fwait
  40da94:	jmp    0xf93560fd
  40da99:	adc    eax,0xc8104ebf
  40da9e:	xor    cl,ah
  40daa0:	push   edx
  40daa1:	xchg   edx,eax
  40daa2:	out    dx,al
  40daa3:	push   0xc
  40daa5:	add    al,0xed
  40daa7:	jne    0x40dadc
  40daa9:	addr16 stc 
  40daab:	bound  ecx,QWORD PTR [edi-0x7fd972f4]
  40dab1:	mov    eax,0x456229e2
  40dab6:	jmp    0xc78b82d2
  40dabb:	adc    BYTE PTR [edx],bh
  40dabd:	xor    BYTE PTR [ebp-0x1a0b76dd],ah
  40dac3:	xchg   edx,eax
  40dac4:	fdivr  DWORD PTR [ecx-0x4cec5f9d]
  40daca:	pop    esi
  40dacb:	(bad)  
  40dacc:	cli    
  40dacd:	arpl   dx,si
  40dacf:	xchg   ebp,eax
  40dad0:	dec    ebx
  40dad1:	jbe    0x40daa5
  40dad3:	and    eax,0xac415988
  40dad8:	fnstcw WORD PTR [ebx+0x3ae99fca]
  40dade:	xchg   edi,eax
  40dadf:	js     0x40da9c
  40dae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dae2:	test   eax,0xa043c779
  40dae7:	xor    BYTE PTR [edi],bl
  40dae9:	inc    ecx
  40daea:	dec    eax
  40daeb:	lock jne 0x40dad2
  40daee:	in     eax,dx
  40daef:	xor    al,0xbe
  40daf1:	stc    
  40daf2:	shl    BYTE PTR [ebx],0xb8
  40daf5:	add    ah,al
  40daf7:	call   0x9c291620
  40dafc:	dec    BYTE PTR [esi]
  40dafe:	stc    
  40daff:	cs ret 0xc545
  40db03:	scas   al,BYTE PTR es:[edi]
  40db04:	ret    0x804a
  40db07:	mov    WORD PTR [ecx-0x8],gs
  40db0a:	adc    eax,0x5d3949a5
  40db0f:	sahf   
  40db10:	mov    WORD PTR [eax+0x1734dc3b],?
  40db16:	cmp    esp,DWORD PTR [eax-0x46fd80b3]
  40db1c:	aam    0xaf
  40db1e:	int    0xff
  40db20:	xlat   BYTE PTR ds:[ebx]
  40db21:	jmp    DWORD PTR [ebp-0x6d]
  40db24:	mov    ebp,0xbfe420f5
  40db29:	retf   
  40db2a:	das    
  40db2b:	cmp    ecx,esi
  40db2d:	xchg   ebp,eax
  40db2e:	mov    ch,BYTE PTR [edi]
  40db30:	lea    eax,[ecx-0x39]
  40db33:	adc    bh,cl
  40db35:	mov    al,ds:0x28364c89
  40db3a:	pop    ebp
  40db3b:	or     edi,DWORD PTR [eax]
  40db3d:	xor    eax,DWORD PTR ds:0xa13818d3
  40db43:	imul   esi,DWORD PTR [ebx],0xa
  40db46:	sar    DWORD PTR [ebx],0x58
  40db49:	(bad)  
  40db4a:	aas    
  40db4b:	retf   0x70c3
  40db4e:	dec    edi
  40db4f:	mov    ebx,0x7cc709d6
  40db54:	cmp    eax,0xacf00b52
  40db59:	mov    eax,ds:0x3d8a3eaa
  40db5e:	jns    0x40db77
  40db60:	add    dh,bl
  40db62:	loop   0x40db49
  40db64:	scas   eax,DWORD PTR es:[edi]
  40db65:	pushf  
  40db66:	push   ebx
  40db67:	out    0x1,al
  40db69:	aas    
  40db6a:	sub    BYTE PTR ds:0xc74d8a26,dh
  40db70:	jle    0x40db31
  40db72:	push   esi
  40db73:	mov    edi,eax
  40db75:	jnp    0x40db7a
  40db77:	cmp    eax,0xfec4bcb4
  40db7c:	jmp    0xd191:0xdbefde08
  40db83:	aad    0x81
  40db85:	or     al,0x18
  40db87:	sbb    al,0x84
  40db89:	jo     0x40dbda
  40db8b:	jp     0x40dbb8
  40db8d:	mov    esi,0x1686a092
  40db92:	pop    edx
  40db93:	add    ecx,edi
  40db95:	mov    ch,0x38
  40db97:	and    BYTE PTR [esi+eiz*2+0x3b],0x51
  40db9c:	inc    ecx
  40db9d:	arpl   cx,di
  40db9f:	shr    DWORD PTR [esi+0x3c],cl
  40dba2:	push   0x7f9f06bb
  40dba7:	arpl   di,si
  40dba9:	adc    DWORD PTR [ebp-0x30b9386a],0x27
  40dbb0:	adc    al,0x74
  40dbb2:	or     eax,0x335916e1
  40dbb7:	arpl   WORD PTR [ebp-0x7a],ax
  40dbba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbbb:	xchg   BYTE PTR [ecx+0x62],al
  40dbbe:	pop    edx
  40dbbf:	push   eax
  40dbc0:	adc    eax,0x50d19da1
  40dbc5:	jmp    0x40db66
  40dbc7:	mov    ecx,0x6d293836
  40dbcc:	cmp    dh,cl
  40dbce:	arpl   WORD PTR [ebx-0x71],cx
  40dbd1:	std    
  40dbd2:	(bad)  
  40dbd3:	or     al,cl
  40dbd5:	rcr    DWORD PTR [ecx],1
  40dbd7:	push   edx
  40dbd8:	adc    BYTE PTR [eax],bh
  40dbda:	adc    BYTE PTR [ecx+0x1a],dl
  40dbdd:	scas   al,BYTE PTR es:[edi]
  40dbde:	popa   
  40dbdf:	mov    ds:0x9f2523d5,al
  40dbe4:	or     edi,DWORD PTR [ecx+0x50]
  40dbe7:	xor    esp,ebx
  40dbe9:	push   ebp
  40dbea:	call   DWORD PTR [edx-0x4f515bdf]
  40dbf0:	(bad)  
  40dbf2:	and    ch,al
  40dbf4:	xor    al,0x28
  40dbf6:	pop    eax
  40dbf7:	lock stos DWORD PTR es:[edi],eax
  40dbf9:	imul   ebp,ebp,0xba203590
  40dbff:	mov    ch,0xd
  40dc01:	mov    al,0x61
  40dc03:	in     eax,0xb5
  40dc05:	in     al,0x27
  40dc07:	pop    ss
  40dc08:	ret    
  40dc09:	and    ecx,DWORD PTR [esi-0x29]
  40dc0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc0d:	aad    0xc4
  40dc0f:	mov    cl,0xc7
  40dc11:	xchg   eax,ebp
  40dc13:	xor    al,0x9
  40dc15:	mov    esp,0x10514801
  40dc1a:	jne    0x40dc85
  40dc1c:	push   ds
  40dc1d:	or     BYTE PTR [ecx-0x36],0x3e
  40dc21:	addr16 in al,0xca
  40dc24:	sub    dl,BYTE PTR [edi]
  40dc26:	mov    al,ds:0xc041ddb9
  40dc2b:	bound  ebx,QWORD PTR [edi+0x79ba8cef]
  40dc31:	sub    eax,0xcfe364ba
  40dc36:	lods   al,BYTE PTR ds:[esi]
  40dc37:	in     al,dx
  40dc38:	push   ss
  40dc39:	lods   eax,DWORD PTR ds:[esi]
  40dc3a:	mov    dl,0x45
  40dc3c:	jp     0x40dc70
  40dc3e:	in     al,0x45
  40dc40:	jns    0x40dc3b
  40dc42:	jl     0x40dc61
  40dc44:	inc    esi
  40dc45:	stc    
  40dc46:	add    DWORD PTR [edx-0x1d],0x79
  40dc4a:	rol    edx,1
  40dc4c:	pushf  
  40dc4d:	lds    esp,FWORD PTR [edx+0x7d5d03ad]
  40dc53:	stos   BYTE PTR es:[edi],al
  40dc54:	ret    0xa09b
  40dc57:	mov    BYTE PTR [ebx+0x260955fe],dl
  40dc5d:	jg     0x40dc84
  40dc5f:	sti    
  40dc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc61:	mov    ebp,0xb59da9ae
  40dc66:	inc    eax
  40dc67:	sub    BYTE PTR ds:0x1a75d43,bl
  40dc6d:	or     eax,0x7db83dd5
  40dc72:	lods   eax,DWORD PTR ds:[esi]
  40dc73:	mov    dh,0x88
  40dc75:	lods   al,BYTE PTR ds:[esi]
  40dc76:	or     DWORD PTR ds:0xb48b12f0,ebp
  40dc7c:	mov    al,ds:0x253816fb
  40dc81:	aaa    
  40dc82:	and    al,ah
  40dc84:	mov    edi,0x37531e41
  40dc89:	in     eax,dx
  40dc8a:	cld    
  40dc8b:	jns    0x40dc73
  40dc8d:	test   BYTE PTR [ecx+0xc],ah
  40dc90:	fwait
  40dc91:	mov    bh,0x68
  40dc93:	push   es
  40dc94:	ror    BYTE PTR [edx],cl
  40dc96:	call   0x341903e6
  40dc9b:	rcl    bl,1
  40dc9d:	ja     0x40dcd8
  40dc9f:	mov    edx,0x58945dd6
  40dca4:	dec    esp
  40dca5:	stc    
  40dca6:	adc    al,0xff
  40dca8:	dec    eax
  40dca9:	std    
  40dcaa:	push   esp
  40dcab:	push   edi
  40dcac:	int3   
  40dcad:	mov    esp,0xfa179448
  40dcb2:	sbb    eax,0xeaa85e52
  40dcb7:	mov    dh,BYTE PTR [ebx+0x728ac01d]
  40dcbd:	sub    eax,0x74cba647
  40dcc2:	lods   eax,DWORD PTR ds:[esi]
  40dcc3:	out    dx,al
  40dcc4:	push   edx
  40dcc5:	inc    eax
  40dcc6:	add    DWORD PTR [esi+esi*8+0xe681200],ebx
  40dccd:	loop   0x40dc78
  40dccf:	add    ecx,DWORD PTR [ebx+edi*2+0xb]
  40dcd3:	cld    
  40dcd4:	bound  edx,QWORD PTR [ebp+0x6c]
  40dcd7:	loop   0x40dcf3
  40dcd9:	mov    ebx,0x9b226ca1
  40dcde:	adc    eax,0x9b138ed9
  40dce3:	lahf   
  40dce4:	in     al,dx
  40dce5:	sub    BYTE PTR [ebx],ch
  40dce7:	mov    dl,0x70
  40dce9:	mov    ebx,0xe52f80ac
  40dcee:	icebp  
  40dcef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcf0:	push   ebp
  40dcf1:	cli    
  40dcf2:	add    BYTE PTR [edx-0x4b],dh
  40dcf5:	into   
  40dcf6:	cmovs  ebp,DWORD PTR [esi]
  40dcf9:	in     eax,0x5
  40dcfb:	fs xchg cl,cl
  40dcfe:	mov    ch,0x11
  40dd00:	jle    0x40dd6e
  40dd02:	mov    BYTE PTR [edx+0x38d01e60],bl
  40dd08:	fnstenv [ebp+ebp*1-0x16]
  40dd0c:	adc    esi,DWORD PTR ss:[ebx+0x6c9fb8bc]
  40dd13:	add    cl,bh
  40dd15:	mov    eax,0x605c072e
  40dd1a:	xlat   BYTE PTR ds:[ebx]
  40dd1b:	sub    DWORD PTR [eax+0x2af045e],ecx
  40dd21:	int3   
  40dd22:	arpl   cx,bp
  40dd24:	dec    ebx
  40dd25:	test   ah,bh
  40dd27:	jne    0x40dce2
  40dd29:	add    ecx,DWORD PTR [ecx+0x4fc847fb]
  40dd2f:	jno    0x40dd2c
  40dd31:	jae    0x40dd30
  40dd33:	xchg   BYTE PTR [edi],cl
  40dd35:	pop    edi
  40dd36:	popf   
  40dd37:	ret    
  40dd38:	xchg   edi,eax
  40dd39:	cmp    al,dl
  40dd3b:	dec    eax
  40dd3c:	sahf   
  40dd3d:	adc    al,0xe7
  40dd3f:	pop    ss
  40dd40:	scas   eax,DWORD PTR es:[edi]
  40dd41:	push   cs
  40dd42:	loop   0x40dd38
  40dd44:	mov    al,ds:0x686e6d3e
  40dd49:	repz mov esi,0x523be91e
  40dd4f:	xor    edi,esp
  40dd51:	xor    al,0x5b
  40dd53:	push   edx
  40dd54:	inc    ecx
  40dd55:	push   ebp
  40dd56:	push   esi
  40dd57:	rol    BYTE PTR [ebp+esi*2-0x3e],1
  40dd5b:	sbb    eax,0x2524d836
  40dd60:	xor    ch,ah
  40dd62:	sti    
  40dd63:	mov    ss,WORD PTR ds:0xafc9fec0
  40dd69:	push   eax
  40dd6a:	mov    cl,0x66
  40dd6c:	aam    0x58
  40dd6e:	js     0x40dd3c
  40dd70:	dec    edx
  40dd71:	xor    al,0x4f
  40dd73:	and    ch,BYTE PTR [esp+edx*8]
  40dd76:	inc    esi
  40dd77:	arpl   WORD PTR [eax],bx
  40dd79:	into   
  40dd7a:	and    DWORD PTR [ecx+0x63],0x533a08ee
  40dd81:	lods   eax,DWORD PTR ds:[esi]
  40dd82:	push   ecx
  40dd83:	int    0xdf
  40dd85:	mov    ebp,0x88ef0751
  40dd8a:	push   ebx
  40dd8b:	outs   dx,BYTE PTR ds:[esi]
  40dd8c:	mov    BYTE PTR [eax-0x129392e9],bh
  40dd92:	imul   esp,DWORD PTR [esi+eiz*4],0x39cfa8f3
  40dd99:	xor    eax,0x31125b0d
  40dd9e:	lods   eax,DWORD PTR ds:[esi]
  40dd9f:	cmp    DWORD PTR [ebx],edi
  40dda1:	xchg   esi,esi
  40dda3:	popa   
  40dda4:	sub    al,0xb9
  40dda6:	stos   DWORD PTR es:[edi],eax
  40dda7:	pop    ss
  40dda8:	sbb    eax,0xb019876f
  40ddad:	mov    eax,0x75e99bf2
  40ddb2:	sub    BYTE PTR [ecx],ch
  40ddb4:	das    
  40ddb5:	out    0xab,al
  40ddb7:	cmp    ch,cl
  40ddb9:	and    cl,bh
  40ddbb:	push   ebp
  40ddbc:	inc    ecx
  40ddbd:	fidivr DWORD PTR [ebx]
  40ddbf:	sbb    eax,esp
  40ddc1:	in     eax,dx
  40ddc2:	jecxz  0x40dd73
  40ddc4:	sbb    eax,DWORD PTR [eax+edx*4-0x5e]
  40ddc8:	add    edx,eax
  40ddca:	push   es
  40ddcb:	fstp   TBYTE PTR [ecx+0x628f1ac6]
  40ddd1:	push   esp
  40ddd2:	call   0xc39b:0xcab50820
  40ddd9:	stos   DWORD PTR es:[edi],eax
  40ddda:	in     al,dx
  40dddb:	jb     0x40de29
  40dddd:	inc    eax
  40ddde:	stos   BYTE PTR es:[edi],al
  40dddf:	sub    ah,dh
  40dde1:	cwde   
  40dde2:	cmp    eax,0x8e2a0139
  40dde7:	inc    esi
  40dde8:	stos   DWORD PTR es:[edi],eax
  40dde9:	fwait
  40ddea:	jmp    0xaf733837
  40ddef:	push   0x619aea2d
  40ddf4:	dec    ebx
  40ddf5:	sti    
  40ddf6:	cmp    al,0x11
  40ddf8:	and    eax,0xe99b841a
  40ddfd:	dec    esi
  40ddfe:	xor    BYTE PTR [ecx-0x590018f1],bh
  40de04:	jg     0x40ddb3
  40de06:	shl    BYTE PTR [ebp+0x17],cl
  40de09:	sbb    DWORD PTR [ebx],esi
  40de0b:	daa    
  40de0c:	(bad)
  40de10:	fist   WORD PTR [ecx]
  40de12:	out    dx,al
  40de13:	outs   dx,BYTE PTR ds:[esi]
  40de14:	shl    DWORD PTR [ebp+0x5d],0x20
  40de18:	pop    ecx
  40de19:	inc    edi
  40de1a:	mov    dl,0x4d
  40de1c:	inc    ebx
  40de1d:	cmp    al,0x50
  40de1f:	(bad)  
  40de20:	jg     0x40de1e
  40de22:	mov    DWORD PTR [ebx-0x326d7675],ebx
  40de28:	add    ecx,DWORD PTR [edx+0x25]
  40de2b:	jne    0x40de11
  40de2d:	aad    0x2
  40de2f:	loopne 0x40de1d
  40de31:	loop   0x40dea2
  40de33:	dec    esp
  40de34:	fsubr  QWORD PTR [esi+0x66]
  40de37:	push   cs
  40de38:	pop    DWORD PTR [eax-0x50]
  40de3b:	mov    ds:0x2ff055fe,eax
  40de40:	xlat   BYTE PTR ds:[ebx]
  40de41:	fs nop
  40de43:	call   0x637d:0x1cfdcdba
  40de4a:	xlat   BYTE PTR ds:[ebx]
  40de4c:	mov    edi,0x9008dfa5
  40de51:	jns    0x40de8d
  40de53:	jbe    0x40de3e
  40de55:	dec    esp
  40de56:	or     BYTE PTR [ebx],al
  40de58:	shr    DWORD PTR [edx],1
  40de5a:	and    al,dl
  40de5c:	ret    0x9563
  40de5f:	push   0x84079fa4
  40de64:	pop    ss
  40de65:	mov    al,0x9f
  40de67:	jge    0x40de2d
  40de69:	mov    cl,dl
  40de6b:	push   sp
  40de6d:	loope  0x40de8b
  40de6f:	into   
  40de70:	jle    0x40de5a
  40de72:	in     eax,dx
  40de73:	arpl   cx,dx
  40de75:	fs pop ss
  40de77:	sahf   
  40de78:	test   eax,0x6b9c7d72
  40de7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de7e:	fidivr WORD PTR [ebx-0x24]
  40de81:	jno    0x40de57
  40de83:	(bad)
  40de87:	pushf  
  40de88:	aad    0x77
  40de8a:	repz inc eax
  40de8c:	adc    BYTE PTR [eax+0x13821696],dl
  40de92:	inc    edx
  40de93:	test   bl,dl
  40de95:	fs ja  0x40def9
  40de98:	lock icebp 
  40de9a:	and    BYTE PTR [ebp+0x15ed137b],dl
  40dea0:	lahf   
  40dea1:	test   BYTE PTR [ebx],0x23
  40dea4:	pushf  
  40dea5:	nop
  40dea6:	in     al,dx
  40dea7:	mov    bh,0xe8
  40dea9:	pop    ecx
  40deaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deab:	add    al,0x82
  40dead:	stos   DWORD PTR es:[edi],eax
  40deae:	(bad)  
  40deaf:	mov    ebx,DWORD PTR [edx-0x3c9d34d9]
  40deb5:	ds in  eax,0x16
  40deb8:	sub    ebx,eax
  40deba:	int    0xcd
  40debc:	ins    BYTE PTR es:[edi],dx
  40debd:	ror    DWORD PTR [eax-0x7b5a2233],cl
  40dec3:	data16 sbb dl,ch
  40dec6:	repz or dl,BYTE PTR [edi]
  40dec9:	xchg   edi,eax
  40deca:	gs pop edx
  40decc:	dec    ebx
  40decd:	int    0x16
  40decf:	out    0x91,al
  40ded1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ded2:	sbb    al,0x3c
  40ded4:	or     dl,ch
  40ded6:	xchg   ecx,eax
  40ded7:	adc    eax,0x5aede654
  40dedc:	loop   0x40df3a
  40dede:	xchg   ebx,eax
  40dedf:	ror    ax,1
  40dee2:	inc    edx
  40dee3:	inc    esi
  40dee4:	adc    bh,ch
  40dee6:	js     0x40deba
  40dee8:	xor    BYTE PTR [eax-0x79afea5f],dh
  40deee:	shr    BYTE PTR [ecx],0xf1
  40def1:	push   esp
  40def2:	xchg   esp,eax
  40def3:	mov    edi,0x7a01a1ce
  40def8:	xchg   ebp,eax
  40def9:	clc    
  40defa:	(bad)  
  40defb:	push   esp
  40defc:	xchg   esp,eax
  40defd:	sbb    dh,ah
  40deff:	dec    eax
  40df00:	popf   
  40df01:	xor    dl,dh
  40df03:	pusha  
  40df04:	jnp    0x40df02
  40df06:	push   ebx
  40df07:	ja     0x40deca
  40df09:	mov    bl,0x71
  40df0b:	nop
  40df0c:	mov    bh,0x29
  40df0e:	sub    ecx,DWORD PTR [ebp+0x6a431f08]
  40df14:	test   DWORD PTR [ecx+0x6f],eax
  40df17:	or     al,BYTE PTR [edx-0x41]
  40df1a:	add    eax,0xaf28046b
  40df1f:	rol    BYTE PTR [ebp+ebp*8-0x3290a024],1
  40df26:	push   edi
  40df27:	mov    dl,0xfe
  40df29:	mov    eax,ds:0x5d45593e
  40df2e:	sub    DWORD PTR [edi],ebp
  40df30:	push   ds
  40df31:	and    dh,bh
  40df33:	pop    eax
  40df34:	clc    
  40df35:	xor    DWORD PTR [edx+edx*4+0x5b],eax
  40df39:	pop    ebp
  40df3a:	test   DWORD PTR [eax+0x2819523a],edi
  40df40:	or     al,0x41
  40df42:	push   es
  40df43:	or     ecx,eax
  40df45:	xchg   edx,eax
  40df46:	mov    bh,0x91
  40df48:	sbb    BYTE PTR [esi],0x4b
  40df4b:	jno    0x40df3a
  40df4d:	hlt    
  40df4e:	shl    BYTE PTR [ecx+0x24906a61],cl
  40df54:	inc    esp
  40df55:	and    al,0x74
  40df57:	fwait
  40df58:	outs   dx,BYTE PTR ds:[esi]
  40df59:	popf   
  40df5a:	lods   al,BYTE PTR ds:[esi]
  40df5b:	dec    eax
  40df5c:	push   edi
  40df5d:	xchg   esi,eax
  40df5e:	or     dh,BYTE PTR [ebx]
  40df60:	inc    ch
  40df62:	sti    
  40df63:	mov    bl,0xc
  40df65:	adc    ebx,DWORD PTR [esi]
  40df67:	rol    ch,0x26
  40df6a:	xchg   edx,eax
  40df6b:	sbb    DWORD PTR [edi],esp
  40df6d:	loopne 0x40defa
  40df6f:	sbb    eax,0xf68f945a
  40df74:	pop    ebx
  40df75:	scas   al,BYTE PTR es:[edi]
  40df76:	in     al,0xdb
  40df78:	inc    ebx
  40df79:	push   esp
  40df7a:	jmp    FWORD PTR [ecx]
  40df7c:	xor    cl,BYTE PTR [eax-0x14]
  40df7f:	mov    al,0xaa
  40df81:	call   0xb5eb3ca3
  40df86:	push   esp
  40df87:	imul   ebp,DWORD PTR [eax+0x3e],0x1f
  40df8b:	(bad)  
  40df8c:	out    0xd1,al
  40df8e:	xor    al,0xc7
  40df90:	xor    BYTE PTR [eax-0x5bcf63d7],bl
  40df96:	xchg   ebp,eax
  40df97:	and    eax,0x68a34bab
  40df9c:	lock cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40df9f:	cmc    
  40dfa0:	xor    dh,BYTE PTR [ebp+0x150d5c14]
  40dfa6:	mov    ds:0x44fb975c,al
  40dfab:	dec    eax
  40dfac:	cmp    edi,DWORD PTR [ebx-0x2]
  40dfaf:	adc    edi,DWORD PTR [edx+eiz*2]
  40dfb2:	pop    ss
  40dfb3:	cwde   
  40dfb4:	aaa    
  40dfb5:	outs   dx,DWORD PTR ds:[esi]
  40dfb6:	cmc    
  40dfb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb8:	cld    
  40dfb9:	loopne 0x40dfdb
  40dfbb:	in     eax,dx
  40dfbc:	ret    0xd9d1
  40dfbf:	(bad)  
  40dfc0:	jp     0x40df7e
  40dfc2:	dec    ebp
  40dfc3:	jg     0x40e039
  40dfc5:	in     al,0xac
  40dfc7:	adc    BYTE PTR [eax],al
  40dfc9:	call   0xe72cb127
  40dfce:	inc    eax
  40dfcf:	cmp    BYTE PTR [ecx-0x42e27278],bl
  40dfd5:	cli    
  40dfd6:	push   edi
  40dfd7:	pushf  
  40dfd8:	stos   DWORD PTR es:[edi],eax
  40dfd9:	test   eax,0x5d962237
  40dfde:	push   edi
  40dfdf:	aam    0xa5
  40dfe1:	lahf   
  40dfe2:	cwde   
  40dfe3:	int    0xa2
  40dfe5:	ins    BYTE PTR es:[edi],dx
  40dfe6:	jns    0x40dfc0
  40dfe8:	pop    ecx
  40dfe9:	mov    eax,0xe7246088
  40dfee:	add    cl,BYTE PTR [ecx]
  40dff0:	sub    dl,BYTE PTR [esi-0x32]
  40dff3:	aam    0x7e
  40dff5:	mov    ebx,0x85ada704
  40dffa:	jl     0x40dfe7
  40dffc:	mov    al,ds:0x448b9f12
  40e001:	sahf   
  40e002:	and    ah,BYTE PTR [edi-0x7f8299b5]
  40e008:	out    0xde,al
  40e00a:	xchg   esi,eax
  40e00b:	push   edi
  40e00c:	or     DWORD PTR [ecx],0xb792132a
  40e012:	lahf   
  40e013:	push   edi
  40e014:	xchg   bl,bl
  40e016:	mov    ebx,0xa3a39b90
  40e01b:	mov    edx,0x410882e2
  40e020:	inc    ebp
  40e021:	int3   
  40e022:	jmp    0x40e060
  40e024:	mov    eax,0x337c5122
  40e029:	mov    ecx,0x93843317
  40e02e:	mov    cl,0xd4
  40e030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e031:	repz pop ebp
  40e033:	jb     0x40e085
  40e035:	mov    ch,0xbe
  40e037:	into   
  40e038:	xchg   edi,eax
  40e039:	xor    eax,0x34c87851
  40e03e:	idiv   DWORD PTR [eax+0x7e98202d]
  40e044:	add    BYTE PTR [edx+0x5b],cl
  40e047:	mov    eax,DWORD PTR [ebx+0x68a8e946]
  40e04d:	xlat   BYTE PTR ds:[ebx]
  40e04e:	aas    
  40e04f:	sbb    al,0xbf
  40e051:	(bad)  
  40e052:	dec    esp
  40e053:	xor    dh,bh
  40e055:	xchg   BYTE PTR [esi-0x58],dh
  40e058:	dec    esp
  40e059:	xchg   edi,eax
  40e05a:	(bad)  
  40e05b:	ja     0x40e01c
  40e05d:	retf   
  40e05e:	add    al,0xc2
  40e060:	dec    ebp
  40e061:	popa   
  40e062:	xor    BYTE PTR [edi+ecx*1+0x77],ch
  40e066:	(bad)  
  40e067:	imul   DWORD PTR [si]
  40e06a:	xor    BYTE PTR [edx-0x6d],dh
  40e06d:	xlat   BYTE PTR ds:[ebx]
  40e06e:	cmp    ch,BYTE PTR [edx+0x1e]
  40e071:	add    ebx,esp
  40e073:	dec    edx
  40e074:	imul   ebp,DWORD PTR [eax+ebx*4-0x54],0xac41f483
  40e07c:	pop    ds
  40e07d:	stos   BYTE PTR es:[edi],al
  40e07e:	adc    DWORD PTR [eax-0x16],ebp
  40e081:	div    ch
  40e083:	and    eax,0x570a8999
  40e088:	mov    edx,0xaa4611b5
  40e08d:	lahf   
  40e08e:	fs int3 
  40e090:	mov    esi,0xabb35c8b
  40e095:	xchg   edi,eax
  40e096:	cwde   
  40e097:	cmp    BYTE PTR [ebx-0x25f94fa0],dl
  40e09d:	jl     0x40e0ee
  40e09f:	add    DWORD PTR [ecx+0x4500e45b],ebx
  40e0a5:	and    BYTE PTR [ecx+0x38],ah
  40e0a8:	adc    eax,0x8d356ba4
  40e0ad:	lds    edi,FWORD PTR [ecx-0x555e5c83]
  40e0b3:	ds arpl di,bp
  40e0b6:	or     BYTE PTR [edi],0xcc
  40e0b9:	adc    esi,DWORD PTR [ecx-0x6f]
  40e0bc:	dec    ecx
  40e0bd:	imul   edx,DWORD PTR [eax+ebp*1-0x4c],0xcdd846d7
  40e0c5:	inc    edx
  40e0c6:	cmp    ebx,DWORD PTR [esi-0x71]
  40e0c9:	retf   
  40e0ca:	inc    ebx
  40e0cb:	cmp    esp,edi
  40e0cd:	pop    edx
  40e0ce:	fcomp  QWORD PTR [esi+esi*1+0x3e3b405a]
  40e0d5:	mov    cl,0x50
  40e0d7:	fs mov ch,0xf4
  40e0da:	push   ebp
  40e0db:	(bad)
  40e0de:	into   
  40e0df:	fimul  WORD PTR [edx-0x20]
  40e0e2:	sbb    esi,0xdb1de6d
  40e0e8:	adc    eax,0x1dc3d967
  40e0ed:	je     0x40e11f
  40e0ef:	sub    DWORD PTR [ebp+eax*4+0x42],edx
  40e0f3:	mov    ebp,0x3168eb93
  40e0f8:	jl     0x40e12a
  40e0fa:	outs   dx,DWORD PTR ds:[esi]
  40e0fb:	fnsave [eax]
  40e0fd:	mov    dl,0xe
  40e0ff:	pop    edi
  40e100:	cld    
  40e101:	mov    al,ds:0x85bc5d3e
  40e106:	call   0x2db2b3b8
  40e10b:	inc    BYTE PTR [edi-0x48183dc4]
  40e111:	cmp    edi,DWORD PTR [edi+0x6aa059b0]
  40e117:	xor    eax,0x4c860974
  40e11c:	push   eax
  40e11d:	jmp    0xec03:0x1be6b0b6
  40e124:	xchg   ecx,eax
  40e125:	pop    esi
  40e126:	jl     0x40e0f2
  40e128:	xchg   esi,eax
  40e129:	shl    ecx,cl
  40e12b:	leave  
  40e12c:	scas   al,BYTE PTR es:[edi]
  40e12d:	outs   dx,DWORD PTR ds:[esi]
  40e12e:	adc    eax,0x60f5bd6b
  40e133:	mov    WORD PTR [ebp+0x4a],?
  40e136:	in     al,0x58
  40e138:	xchg   BYTE PTR [esi],dh
  40e13a:	push   es
  40e13b:	rcr    DWORD PTR [edi-0x6a],0xb1
  40e13f:	dec    edi
  40e140:	xchg   ah,dh
  40e142:	scas   al,BYTE PTR es:[edi]
  40e143:	pusha  
  40e144:	adc    bl,BYTE PTR ds:0x7b6eaee3
  40e14a:	arpl   WORD PTR [ebp+0x5bc167e],cx
  40e150:	push   eax
  40e151:	(bad)  
  40e152:	cmp    eax,0x8f3299b8
  40e157:	sar    BYTE PTR [ecx+0x12],0x74
  40e15b:	mov    ds:0x4392546c,al
  40e160:	out    dx,al
  40e161:	fisubr WORD PTR ds:0xc2923849
  40e167:	mov    bh,0xe6
  40e169:	sbb    ecx,DWORD PTR [edi]
  40e16b:	pushf  
  40e16c:	sbb    eax,0x10d66232
  40e171:	aad    0xf2
  40e173:	popa   
  40e174:	xor    eax,0x9e0d599e
  40e179:	arpl   si,sp
  40e17b:	cdq    
  40e17c:	jg     0x40e1f1
  40e17e:	pop    ebp
  40e17f:	dec    esp
  40e180:	jl     0x40e1fc
  40e182:	mov    DWORD PTR [esi+0x6119535d],ebp
  40e188:	dec    ebp
  40e189:	test   eax,0xf747d78
  40e18e:	icebp  
  40e18f:	adc    bh,0x8d
  40e192:	test   DWORD PTR [ebx-0x3f],ebp
  40e195:	iret   
  40e196:	fisub  DWORD PTR [edx-0x33]
  40e199:	enter  0xb3f,0xaf
  40e19d:	ins    DWORD PTR es:[edi],dx
  40e19e:	fistp  WORD PTR [eax-0x7]
  40e1a1:	jne    0x40e1c7
  40e1a3:	add    ah,bh
  40e1a5:	dec    ebx
  40e1a6:	add    BYTE PTR [eax-0x4e0fddbd],ch
  40e1ac:	jmp    0x7e1e792e
  40e1b1:	leave  
  40e1b2:	pop    edx
  40e1b3:	dec    edx
  40e1b4:	clc    
  40e1b5:	mov    bl,0x43
  40e1b7:	jg     0x40e1e0
  40e1b9:	cmp    DWORD PTR [edx+0x1cd2c43f],ebp
  40e1bf:	add    al,0x2
  40e1c1:	or     eax,0x5f0d1fee
  40e1c6:	lods   eax,DWORD PTR ds:[esi]
  40e1c7:	xchg   ebx,eax
  40e1c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c9:	add    dh,BYTE PTR [ecx]
  40e1cb:	fiadd  DWORD PTR [edi+0x30111e92]
  40e1d1:	cmp    al,0x7f
  40e1d3:	jge    0x40e211
  40e1d5:	scas   eax,DWORD PTR es:[edi]
  40e1d6:	ror    ch,1
  40e1d8:	dec    ebx
  40e1d9:	mov    eax,ds:0xadd4f4dd
  40e1de:	cwde   
  40e1df:	add    edi,ebx
  40e1e1:	mov    ecx,0xca92ad04
  40e1e6:	and    esi,DWORD PTR [ebx]
  40e1e8:	clc    
  40e1e9:	ss push 0x58
  40e1ec:	push   ss
  40e1ed:	push   cs
  40e1ee:	xor    esp,ecx
  40e1f0:	(bad)  
  40e1f1:	stc    
  40e1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f3:	aas    
  40e1f4:	cmc    
  40e1f5:	mov    ds:0x8ff26747,eax
  40e1fa:	jbe    0x40e23b
  40e1fc:	icebp  
  40e1fd:	push   ebx
  40e1fe:	cdq    
  40e1ff:	int3   
  40e200:	inc    edx
  40e201:	pushf  
  40e202:	mov    esp,0x657f43b4
  40e207:	xchg   edx,eax
  40e208:	mov    bl,0x5a
  40e20a:	mov    ebx,0x36109976
  40e20f:	imul   ebp,DWORD PTR [esi],0x438aca82
  40e215:	mov    edx,0x78ecf360
  40e21a:	bound  edx,QWORD PTR [ebp+0x4a5cad11]
  40e220:	das    
  40e221:	push   cs
  40e222:	mov    BYTE PTR [edx-0x278478c9],cl
  40e228:	pop    ss
  40e229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e22a:	dec    edx
  40e22b:	fcomip st,st(2)
  40e22d:	ror    BYTE PTR [eax],0x8a
  40e230:	xor    edx,DWORD PTR [eax]
  40e232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e233:	int3   
  40e234:	mul    BYTE PTR [ecx+0x7e]
  40e237:	retf   
  40e238:	xchg   esi,eax
  40e239:	ds mov esi,0x7ae83f90
  40e23f:	jb     0x40e27a
  40e241:	ins    BYTE PTR es:[edi],dx
  40e242:	dec    ebp
  40e243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e244:	or     bh,BYTE PTR [edi]
  40e246:	imul   eax,DWORD PTR [ecx+ebp*8],0xffffffe6
  40e24a:	shl    BYTE PTR [ecx],cl
  40e24c:	cs gs add eax,0x730ef512
  40e253:	xchg   edi,eax
  40e254:	pusha  
  40e255:	and    BYTE PTR [ebx],cl
  40e257:	sti    
  40e258:	fcomip st,st(7)
  40e25a:	cmp    ch,BYTE PTR [edx-0x59]
  40e25d:	cmp    ebx,DWORD PTR [ecx+0x20f32c75]
  40e263:	mov    dl,0x80
  40e265:	test   DWORD PTR [esi+ebx*8-0x7f3b9a6b],0xadfd7aea
  40e270:	mov    eax,0x318a1a06
  40e275:	mov    bl,0x92
  40e277:	xchg   edx,eax
  40e278:	hlt    
  40e279:	mov    dl,0x32
  40e27b:	mov    BYTE PTR [edi-0x23fe6164],dl
  40e281:	sbb    esi,DWORD PTR [eax]
  40e283:	push   ecx
  40e284:	adc    ecx,DWORD PTR ds:0xbbb64f45
  40e28a:	jb     0x40e2b9
  40e28c:	mov    esp,gs
  40e28e:	mov    al,0x67
  40e290:	pop    esp
  40e291:	cmp    bh,dl
  40e293:	sbb    eax,0xf10a88f1
  40e298:	xchg   esp,eax
  40e299:	test   DWORD PTR [ebp-0x5edd8efc],ebp
  40e29f:	push   eax
  40e2a0:	mul    BYTE PTR [ebp-0x42]
  40e2a3:	ret    
  40e2a4:	fistp  DWORD PTR [eax+0xbcd5507]
  40e2aa:	nop
  40e2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2ac:	mov    esi,0xa59ea421
  40e2b1:	scas   eax,DWORD PTR es:[edi]
  40e2b2:	or     al,0x3f
  40e2b4:	jno    0x40e318
  40e2b6:	ins    BYTE PTR es:[edi],dx
  40e2b7:	pop    ebp
  40e2b8:	adc    DWORD PTR [edi+0x1c],ecx
  40e2bb:	in     al,0xef
  40e2bd:	(bad)  
  40e2be:	fwait
  40e2bf:	int3   
  40e2c0:	shl    DWORD PTR [eax],cl
  40e2c2:	retf   0xb618
  40e2c5:	sbb    esp,eax
  40e2c7:	(bad)  
  40e2c9:	dec    ebx
  40e2ca:	mov    ch,0xf3
  40e2cc:	out    dx,eax
  40e2cd:	mov    edx,0xaddb8603
  40e2d2:	lods   eax,DWORD PTR ds:[esi]
  40e2d3:	fisttp DWORD PTR [edi]
  40e2d5:	lea    edx,[esp+ebx*2-0x19]
  40e2d9:	cmp    bl,BYTE PTR [esi]
  40e2db:	dec    ebp
  40e2dc:	jmp    0x40e289
  40e2de:	mov    ch,0x36
  40e2e0:	shl    DWORD PTR [ebx],0x16
  40e2e3:	rol    ebp,1
  40e2e5:	xor    dh,bh
  40e2e7:	nop
  40e2e8:	les    esi,FWORD PTR fs:[ebx+eax*8]
  40e2ec:	mov    eax,0x9a50f1b8
  40e2f1:	inc    ecx
  40e2f2:	jae    0x40e282
  40e2f4:	push   ecx
  40e2f5:	or     ebx,DWORD PTR [ecx-0x2d]
  40e2f8:	retf   0xe86a
  40e2fb:	test   DWORD PTR [edx+0x1d],edi
  40e2fe:	in     eax,0x4c
  40e300:	clc    
  40e301:	fld    TBYTE PTR [edx-0x3e]
  40e304:	nop
  40e305:	jp     0x40e350
  40e307:	adc    bl,bl
  40e309:	dec    edx
  40e30a:	xchg   BYTE PTR [ecx-0x35d1c86a],ch
  40e310:	icebp  
  40e311:	sbb    ah,BYTE PTR [esi-0x7526a78f]
  40e317:	mov    edx,0xf3ca1abd
  40e31c:	xchg   edx,eax
  40e31d:	xor    al,0x5f
  40e31f:	in     al,dx
  40e320:	out    0xe8,eax
  40e322:	push   0xfffffffe
  40e324:	je     0x40e37d
  40e326:	(bad)  
  40e327:	clc    
  40e328:	inc    ecx
  40e329:	je     0x40e2bd
  40e32b:	js     0x40e398
  40e32d:	sbb    DWORD PTR [edi-0x36],esi
  40e330:	adc    ebx,edx
  40e332:	add    al,0x7e
  40e334:	mov    edi,0xcd38f566
  40e339:	push   0x44
  40e33b:	dec    ebp
  40e33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33d:	pop    ecx
  40e33e:	sbb    eax,0x941f920c
  40e343:	dec    edi
  40e344:	pop    edx
  40e345:	hlt    
  40e346:	(bad)  
  40e347:	mov    al,0x66
  40e349:	cmp    DWORD PTR [edx],edx
  40e34b:	popa   
  40e34c:	test   al,0x55
  40e34e:	inc    eax
  40e34f:	mov    ebp,0x87d04aad
  40e354:	stc    
  40e355:	cmp    BYTE PTR [esi-0x692b7224],0xef
  40e35c:	cwde   
  40e35d:	je     0x40e348
  40e35f:	xchg   BYTE PTR [ebp+0x6cf61256],dh
  40e365:	mov    ds:0xebf8ca11,eax
  40e36a:	push   0x10c2e501
  40e36f:	dec    esi
  40e370:	test   BYTE PTR [edi+0x5f],0xb2
  40e374:	ja     0x40e30d
  40e376:	loop   0x40e304
  40e378:	fmul   st(5),st
  40e37a:	call   0xa4c152dc
  40e37f:	lds    esi,FWORD PTR [ecx-0x20270772]
  40e385:	and    eax,0x3d775e2c
  40e38a:	aaa    
  40e38b:	pop    esi
  40e38c:	stos   BYTE PTR es:[edi],al
  40e38d:	xchg   DWORD PTR [edi],edx
  40e38f:	sbb    eax,DWORD PTR [eax]
  40e391:	xchg   ecx,eax
  40e392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e393:	repnz pop ebx
  40e395:	fcom   QWORD PTR [eax+0x56d1f7c1]
  40e39b:	outs   dx,BYTE PTR ds:[esi]
  40e39c:	stc    
  40e39d:	sbb    esp,ecx
  40e39f:	mov    edx,0x597968c5
  40e3a4:	or     al,0x77
  40e3a6:	ins    BYTE PTR es:[edi],dx
  40e3a7:	fimul  DWORD PTR [edx]
  40e3a9:	pop    esp
  40e3aa:	xor    al,0x65
  40e3ac:	sbb    eax,0xe1488ca0
  40e3b1:	jb     0x40e40d
  40e3b3:	xchg   ebx,eax
  40e3b4:	loopne 0x40e3b2
  40e3b6:	cld    
  40e3b7:	pop    edx
  40e3b8:	aam    0xaa
  40e3ba:	add    al,bl
  40e3bc:	leave  
  40e3bd:	repz xchg edx,eax
  40e3bf:	loope  0x40e392
  40e3c1:	popf   
  40e3c2:	fistp  QWORD PTR [eax]
  40e3c4:	iret   
  40e3c5:	lods   al,BYTE PTR ds:[esi]
  40e3c6:	or     ah,BYTE PTR [ebp+0x70f16185]
  40e3cc:	test   eax,0x622b8ed3
  40e3d1:	ficom  DWORD PTR [ebx+esi*4-0x3bba9809]
  40e3d8:	shr    al,cl
  40e3da:	jmp    0x40e37b
  40e3dc:	add    bh,BYTE PTR [eax-0x78]
  40e3df:	pop    edx
  40e3e0:	out    0xc8,al
  40e3e2:	daa    
  40e3e3:	int    0x5b
  40e3e5:	sbb    al,0x56
  40e3e7:	jbe    0x40e442
  40e3e9:	xchg   ecx,eax
  40e3ea:	in     al,dx
  40e3eb:	in     al,dx
  40e3ec:	lods   eax,DWORD PTR ds:[esi]
  40e3ed:	clc    
  40e3ee:	sbb    ah,BYTE PTR [ecx]
  40e3f0:	sar    BYTE PTR [eax-0x16],1
  40e3f3:	loop   0x40e3ae
  40e3f5:	push   ds
  40e3f6:	inc    ebx
  40e3f7:	cmp    cl,al
  40e3f9:	mov    al,ds:0x92a02e69
  40e3fe:	sbb    BYTE PTR [eax],ah
  40e400:	sub    DWORD PTR [ebp+ebp*8+0x5e54b9b8],esp
  40e407:	pop    esp
  40e408:	out    dx,al
  40e409:	test   DWORD PTR [ebx+0x2c5ea417],esi
  40e40f:	mov    ebx,0x48c843af
  40e414:	adc    eax,0xd73d6be9
  40e419:	mov    al,ds:0xaeaf1be4
  40e41e:	cmp    DWORD PTR [edi-0x50],eax
  40e421:	xchg   DWORD PTR ss:[edi+0x1d],edi
  40e425:	jns    0x40e400
  40e427:	es (bad) 
  40e429:	jp     0x40e416
  40e42b:	jb     0x40e466
  40e42d:	into   
  40e42e:	lock stos BYTE PTR es:[edi],al
  40e430:	adc    BYTE PTR [ebp-0x64],al
  40e433:	inc    esp
  40e434:	add    DWORD PTR [edi+0x3985f335],edx
  40e43a:	mov    edx,0xc16d7678
  40e43f:	lods   al,BYTE PTR ds:[esi]
  40e440:	imul   ebp,DWORD PTR [ecx+0x20],0xffffffd1
  40e444:	or     al,0x7e
  40e446:	loope  0x40e41e
  40e448:	stos   DWORD PTR es:[edi],eax
  40e449:	shl    DWORD PTR ds:0xa62869bb,cl
  40e44f:	(bad)  
  40e450:	push   edi
  40e451:	adc    DWORD PTR ds:0x92538a1b,ecx
  40e457:	or     eax,0xa957bbb5
  40e45c:	lea    ecx,[edi-0x69]
  40e45f:	or     eax,0x316e4c05
  40e464:	xchg   ebx,eax
  40e465:	push   ss
  40e466:	pop    eax
  40e467:	fiadd  DWORD PTR [ebx-0x41]
  40e46a:	jae    0x40e428
  40e46c:	addr16 in al,dx
  40e46e:	add    eax,0xa9462a08
  40e473:	jns    0x40e3fc
  40e475:	dec    esi
  40e476:	into   
  40e477:	stos   DWORD PTR es:[edi],eax
  40e478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e479:	mov    dh,0x8e
  40e47b:	push   cs
  40e47c:	lods   eax,DWORD PTR ds:[esi]
  40e47d:	pop    edi
  40e47e:	std    
  40e47f:	add    al,0xd8
  40e481:	mov    ch,0x52
  40e483:	jo     0x40e452
  40e485:	add    edi,DWORD PTR [ebx]
  40e487:	addr16 inc eax
  40e489:	push   0xffffffaf
  40e48b:	cdq    
  40e48c:	shl    BYTE PTR [ebx-0x76af6d16],cl
  40e492:	(bad)  
  40e494:	ror    DWORD PTR [ecx],1
  40e496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e497:	or     ch,BYTE PTR [ecx+0x696984c4]
  40e49d:	dec    ebp
  40e49e:	stos   DWORD PTR es:[edi],eax
  40e49f:	or     esi,DWORD PTR ds:[edx+0x210c0e8d]
  40e4a6:	sbb    al,0x5c
  40e4a8:	in     ax,dx
  40e4aa:	out    dx,eax
  40e4ab:	and    cl,bl
  40e4ad:	sub    BYTE PTR [eax],dh
  40e4af:	rcl    BYTE PTR ss:[edx],0xc
  40e4b3:	xor    bl,BYTE PTR [ecx-0x48]
  40e4b6:	aaa    
  40e4b7:	push   ebx
  40e4b8:	aad    0x41
  40e4ba:	lahf   
  40e4bb:	dec    edi
  40e4bc:	mov    DWORD PTR [esi],edx
  40e4be:	xchg   ecx,eax
  40e4bf:	not    DWORD PTR [esi]
  40e4c1:	inc    edi
  40e4c2:	add    DWORD PTR [edx+0x5bd92043],eax
  40e4c8:	ficom  DWORD PTR [ebx+0x35d7e9ed]
  40e4ce:	and    ebp,DWORD PTR [edi-0x3e5c6686]
  40e4d4:	xchg   edi,eax
  40e4d5:	mov    ecx,0x48b3cf9a
  40e4da:	gs jmp 0x40e479
  40e4dd:	pop    eax
  40e4de:	aas    
  40e4df:	cmp    BYTE PTR [esi+0xe5ec454],ah
  40e4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4e7:	test   eax,0x95f4b861
  40e4ec:	and    eax,0xa0a54450
  40e4f1:	xor    al,0x5a
  40e4f3:	xchg   esi,eax
  40e4f4:	in     eax,dx
  40e4f5:	sub    eax,0x782d1f2a
  40e4fa:	out    0x65,al
  40e4fc:	pop    ecx
  40e4fd:	clc    
  40e4fe:	call   edx
  40e500:	sub    edi,DWORD PTR [ecx-0x4646c778]
  40e506:	ins    BYTE PTR es:[edi],dx
  40e507:	out    dx,eax
  40e508:	mov    DWORD PTR [ebp+0x32],ecx
  40e50b:	pop    esi
  40e50c:	aad    0xac
  40e50e:	int3   
  40e50f:	push   ss
  40e510:	cmp    eax,0xe8901f71
  40e515:	(bad)  
  40e516:	dec    ebx
  40e517:	dec    DWORD PTR [edx+ecx*1+0x524bbee3]
  40e51e:	inc    ebx
  40e51f:	mov    dl,0x6e
  40e521:	imul   ebx,DWORD PTR [edx-0x5f145a03],0x2697b211
  40e52b:	sub    BYTE PTR ds:0x89493212,0xe3
  40e532:	pop    edi
  40e533:	(bad)  
  40e535:	(bad)  
  40e536:	das    
  40e537:	jo     0x40e4d0
  40e539:	sbb    al,BYTE PTR [edx+0x52eeef1c]
  40e53f:	das    
  40e540:	jb     0x40e4f6
  40e542:	call   0xc758b7d0
  40e547:	cmp    al,0x93
  40e549:	clc    
  40e54a:	or     al,0xc5
  40e54c:	loope  0x40e576
  40e54e:	sbb    dl,BYTE PTR [eax+0x4ee100f6]
  40e554:	sbb    ecx,DWORD PTR [ebp+0x60054c99]
  40e55a:	jne    0x40e5d4
  40e55c:	stos   BYTE PTR es:[edi],al
  40e55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e55e:	mov    ah,BYTE PTR [ebp+0x6f]
  40e561:	jne    0x40e582
  40e563:	fsubr  QWORD PTR [ecx+0x4c2b3629]
  40e569:	jo     0x40e4f7
  40e56b:	cmp    DWORD PTR [esi-0xa833ddd],ecx
  40e571:	call   0xbd32:0xa12a321f
  40e578:	into   
  40e579:	imul   edi,DWORD PTR [edx+0x7b76d85f],0x79
  40e580:	stc    
  40e581:	push   ds
  40e582:	add    al,0x4
  40e584:	jnp    0x40e5c6
  40e586:	mov    cl,0x10
  40e588:	inc    esi
  40e589:	aas    
  40e58a:	dec    BYTE PTR [eax-0x50]
  40e58d:	(bad)  
  40e58e:	adc    eax,0x8544350b
  40e593:	inc    eax
  40e594:	and    eax,0xa18cec6d
  40e599:	repnz jmp 0x581f:0xfeb4ccdb
  40e5a1:	fcmovbe st,st(6)
  40e5a3:	sti    
  40e5a4:	push   esp
  40e5a5:	js     0x40e5a1
  40e5a7:	loope  0x40e52b
  40e5a9:	test   DWORD PTR [eax],ebx
  40e5ab:	outs   dx,DWORD PTR ds:[esi]
  40e5ac:	push   ebp
  40e5ad:	pop    ss
  40e5ae:	cs (bad) 
  40e5b0:	int3   
  40e5b1:	sub    ebp,DWORD PTR [esi-0x1e]
  40e5b4:	xchg   DWORD PTR [ebx-0x63ac48e7],ebp
  40e5ba:	cmp    eax,DWORD PTR [edx-0x21316b1e]
  40e5c0:	push   cs
  40e5c1:	pop    esp
  40e5c2:	xchg   BYTE PTR [eax],dh
  40e5c4:	or     edx,esp
  40e5c6:	arpl   WORD PTR [esi],bx
  40e5c8:	xchg   ecx,eax
  40e5c9:	ins    BYTE PTR es:[edi],dx
  40e5ca:	adc    ebx,DWORD PTR [ebx]
  40e5cc:	push   cs
  40e5cd:	and    ebx,DWORD PTR [ebp-0x9]
  40e5d0:	dec    ebp
  40e5d1:	sub    bl,BYTE PTR [ebp+0x15]
  40e5d4:	jmp    0x9eab:0x96960f9e
  40e5db:	xor    DWORD PTR [ebx],edx
  40e5dd:	sbb    ch,al
  40e5df:	inc    ecx
  40e5e0:	retf   0xa496
  40e5e3:	xor    al,0xb4
  40e5e5:	test   esp,eax
  40e5e7:	add    al,0x24
  40e5e9:	mov    esi,0xc5d22ad1
  40e5ee:	mov    esp,0xca8ae2bb
  40e5f3:	out    dx,eax
  40e5f4:	dec    ebp
  40e5f5:	lea    esi,[edi+0x2d]
  40e5f8:	jmp    0x9cfb:0x1e9b1f9
  40e5ff:	inc    ebx
  40e600:	mov    ch,0xe6
  40e602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e603:	dec    eax
  40e604:	aad    0x3
  40e606:	cdq    
  40e607:	adc    DWORD PTR [ecx-0x5c],edi
  40e60a:	or     eax,DWORD PTR [ecx-0x4923727e]
  40e610:	or     eax,0x1618acb6
  40e615:	sar    eax,0x76
  40e618:	loope  0x40e5fa
  40e61a:	jb     0x40e665
  40e61c:	data16 fisub WORD PTR [ecx+0x3f0596ff]
  40e623:	dec    edi
  40e624:	stc    
  40e625:	in     eax,0xa0
  40e627:	rcr    BYTE PTR [edx-0x6e92d097],0x69
  40e62e:	in     al,0x47
  40e630:	jp     0x40e696
  40e632:	hlt    
  40e633:	imul   esi,DWORD PTR [ebp+0x658598e6],0xee0ff457
  40e63d:	mov    ds:0x41ae4f9,al
  40e642:	out    dx,eax
  40e643:	test   DWORD PTR [edi+0x16],ebx
  40e646:	lock js 0x40e5f2
  40e649:	ss push ebx
  40e64b:	stos   BYTE PTR es:[edi],al
  40e64c:	in     eax,0x3a
  40e64e:	sub    ebp,0x39
  40e651:	jnp    0x40e5df
  40e653:	mov    ds:0x871493e,al
  40e658:	sub    bh,BYTE PTR [esp+ebp*2]
  40e65b:	mov    ecx,0x4483784a
  40e660:	ss xchg esi,eax
  40e662:	mov    al,BYTE PTR [edx+0x15]
  40e665:	popf   
  40e666:	mov    eax,0x86a98ad5
  40e66b:	sub    esp,ecx
  40e66d:	jge    0x40e60f
  40e66f:	xchg   edi,eax
  40e670:	and    ch,BYTE PTR [ecx+eiz*1+0xb]
  40e674:	aad    0x2b
  40e676:	dec    ebx
  40e677:	pop    esi
  40e678:	mov    al,0xfb
  40e67a:	mov    bl,BYTE PTR [ecx]
  40e67c:	int    0x3d
  40e67e:	jae    0x40e67b
  40e680:	mov    ebx,0x6685ee5c
  40e685:	shl    DWORD PTR [esi],cl
  40e687:	dec    ecx
  40e688:	add    ebp,0xffffffd3
  40e68b:	jmp    0x8ccfa29
  40e690:	jg     0x40e6ec
  40e692:	sub    BYTE PTR [ecx],bl
  40e694:	fs fsubrp st(6),st
  40e697:	pop    edx
  40e698:	cmp    DWORD PTR [ecx-0x39],edi
  40e69b:	mov    ebx,0xba68567
  40e6a0:	ficomp DWORD PTR [ebp-0x63d8f757]
  40e6a6:	in     eax,dx
  40e6a7:	arpl   WORD PTR [edi-0x3d],bx
  40e6aa:	test   al,0x83
  40e6ac:	adc    eax,0x449bcc03
  40e6b1:	sub    ecx,eax
  40e6b3:	dec    ebx
  40e6b4:	mov    edi,0xde5e6f4b
  40e6b9:	add    al,0x39
  40e6bb:	iret   
  40e6bc:	pop    es
  40e6bd:	addr16 popf 
  40e6bf:	rcl    dl,1
  40e6c1:	xchg   edi,eax
  40e6c2:	pop    ebp
  40e6c3:	js     0x40e6ab
  40e6c5:	sub    BYTE PTR [eax],dl
  40e6c7:	pop    ebp
  40e6c8:	pop    esi
  40e6c9:	push   esi
  40e6ca:	pop    ebx
  40e6cb:	ror    ebx,cl
  40e6cd:	mov    eax,0xebfbafea
  40e6d2:	gs jae 0x40e68e
  40e6d5:	je     0x40e6c9
  40e6d7:	or     al,BYTE PTR [ecx+0x3]
  40e6da:	ins    BYTE PTR es:[edi],dx
  40e6db:	jb     0x40e6a0
  40e6dd:	jle    0x40e752
  40e6df:	mov    dl,0x68
  40e6e1:	sbb    ebp,edx
  40e6e3:	test   al,0x7
  40e6e5:	clc    
  40e6e6:	fbstp  TBYTE PTR [ebx+edx*8]
  40e6e9:	sub    BYTE PTR [edi+ebp*4+0x5],0x3a
  40e6ee:	push   eax
  40e6ef:	pop    ebp
  40e6f0:	pop    esp
  40e6f1:	(bad)  
  40e6f2:	xor    al,0x39
  40e6f4:	jl     0x40e6e4
  40e6f6:	pusha  
  40e6f7:	push   ecx
  40e6f8:	es in  eax,0x5d
  40e6fb:	out    dx,eax
  40e6fc:	ins    DWORD PTR es:[edi],dx
  40e6fd:	fwait
  40e6fe:	not    BYTE PTR [edi+edi*1+0x3f]
  40e702:	(bad)  
  40e703:	das    
  40e704:	xchg   ebx,eax
  40e705:	mov    ch,0x54
  40e707:	sub    eax,0x7b0145ce
  40e70c:	cmp    cl,BYTE PTR [eax-0x32cac781]
  40e712:	xacquire xchg BYTE PTR [ebx+eax*1+0x4f],bl
  40e717:	and    dl,ch
  40e719:	js     0x40e743
  40e71b:	adc    eax,0xe7ef6ee3
  40e720:	aaa    
  40e721:	imul   edi,DWORD PTR [ecx+esi*8-0x4],0x26
  40e726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e727:	outs   dx,BYTE PTR ds:[esi]
  40e728:	jecxz  0x40e6f7
  40e72a:	stos   DWORD PTR es:[edi],eax
  40e72b:	in     eax,0xf2
  40e72d:	pop    ebx
  40e72e:	repnz bswap edi
  40e731:	push   eax
  40e732:	mov    eax,ds:0x345d5ee7
  40e737:	dec    edi
  40e738:	mov    BYTE PTR [ecx+0x25],ch
  40e73b:	repnz mov eax,0x4c89bcb8
  40e741:	xlat   BYTE PTR ds:[ebx]
  40e742:	aas    
  40e743:	jl     0x40e783
  40e745:	or     BYTE PTR [edx+0x1d],dh
  40e748:	stos   BYTE PTR es:[edi],al
  40e749:	mov    eax,ds:0x37c85d84
  40e74e:	test   DWORD PTR [ebx+0xb],ebx
  40e751:	(bad)  
  40e752:	mov    ecx,0xa531c44a
  40e757:	mov    ds:0x8ae2ecdd,eax
  40e75c:	stc    
  40e75d:	xlat   BYTE PTR ds:[ebx]
  40e75e:	or     eax,DWORD PTR [eax+0x5f]
  40e761:	adc    al,0x49
  40e763:	and    DWORD PTR [ecx+0x3f],ecx
  40e766:	(bad)  
  40e767:	fwait
  40e768:	adc    DWORD PTR [esi],ebx
  40e76a:	cmp    bh,BYTE PTR [ebp-0x40]
  40e76d:	jae    0x40e6f6
  40e76f:	out    dx,eax
  40e770:	mov    dl,0x24
  40e772:	test   eax,0xa192a8ed
  40e777:	jmp    0x566d7f13
  40e77c:	das    
  40e77d:	es cli 
  40e77f:	adc    esp,DWORD PTR [esi-0x54710af6]
  40e785:	mov    dl,0xe7
  40e787:	in     eax,dx
  40e788:	xchg   ebx,eax
  40e789:	cmp    al,0xa3
  40e78b:	push   esi
  40e78c:	push   edi
  40e78d:	fsubr  st,st(2)
  40e78f:	data16 clc 
  40e791:	les    esp,FWORD PTR [eax+0x6b]
  40e794:	pusha  
  40e795:	ds jne 0x40e793
  40e798:	jb     0x40e770
  40e79a:	adc    bh,ch
  40e79c:	push   ecx
  40e79d:	mov    ebx,0xaed4c83b
  40e7a2:	xchg   DWORD PTR [esi],eax
  40e7a4:	(bad)  
  40e7a5:	xchg   ebx,eax
  40e7a6:	test   ecx,esi
  40e7a8:	inc    edx
  40e7a9:	test   eax,0x64de5b7f
  40e7ae:	rcr    DWORD PTR [eax],0x63
  40e7b1:	inc    esp
  40e7b2:	add    edi,DWORD PTR [esi]
  40e7b4:	xor    BYTE PTR [ebx+edx*1+0x44e92d88],dh
  40e7bb:	sub    eax,0x428a544e
  40e7c0:	sub    cl,0x1b
  40e7c3:	pop    edx
  40e7c4:	icebp  
  40e7c5:	lea    esp,[ecx-0x78b69b57]
  40e7cb:	push   esp
  40e7cc:	pop    es
  40e7cd:	pushf  
  40e7ce:	sbb    al,BYTE PTR [eax]
  40e7d0:	int3   
  40e7d1:	test   DWORD PTR [eax],0xde24f35c
  40e7d7:	pop    esi
  40e7d8:	das    
  40e7d9:	xchg   esp,eax
  40e7da:	push   ebp
  40e7db:	fistp  DWORD PTR [edi-0x2e1c370f]
  40e7e1:	imul   ebp,DWORD PTR ds:0x69d40766,0xe988b1fa
  40e7eb:	push   cs
  40e7ec:	pop    ebp
  40e7ed:	and    al,0xc0
  40e7ef:	int3   
  40e7f0:	aam    0xd5
  40e7f2:	hlt    
  40e7f3:	stos   DWORD PTR es:[di],eax
  40e7f5:	outs   dx,DWORD PTR ss:[esi]
  40e7f7:	stos   DWORD PTR es:[edi],eax
  40e7f8:	ret    
  40e7f9:	or     BYTE PTR [ebp-0x28092938],bl
  40e7ff:	icebp  
  40e800:	rcl    DWORD PTR [edx-0x5c357fbf],0x60
  40e807:	jno    0x40e7ca
  40e809:	clc    
  40e80a:	bound  ebp,QWORD PTR [esi-0x6e]
  40e80d:	pop    edi
  40e80e:	pop    esi
  40e80f:	vpsadbw ymm2,ymm4,YMMWORD PTR [edi+0x15cf2741]
  40e817:	adc    al,dl
  40e819:	js     0x40e7c5
  40e81b:	xor    DWORD PTR [ecx-0x43],0x328b3dbc
  40e822:	ins    BYTE PTR es:[edi],dx
  40e823:	cmp    al,0x75
  40e825:	int3   
  40e826:	xor    al,0xd2
  40e828:	inc    eax
  40e829:	fist   DWORD PTR [edi-0x14]
  40e82c:	sub    BYTE PTR [esi+edx*2],ch
  40e82f:	cdq    
  40e830:	mov    cl,0x46
  40e832:	cld    
  40e833:	mov    al,BYTE PTR [ebx]
  40e835:	shl    BYTE PTR es:[edx+eiz*2+0x1d565d2],cl
  40e83d:	ret    0x5649
  40e840:	mov    esi,0x436dbb68
  40e845:	inc    edi
  40e846:	test   DWORD PTR [edi+eax*8],ebx
  40e849:	ins    DWORD PTR es:[edi],dx
  40e84a:	sbb    dl,dl
  40e84c:	sbb    BYTE PTR [esi+0x76],al
  40e84f:	stos   DWORD PTR es:[edi],eax
  40e850:	xchg   ecx,eax
  40e851:	push   0x703314b7
  40e856:	mov    ebx,0x194d73
  40e85b:	je     0x40e860
  40e85d:	test   eax,0x10730692
  40e862:	rcl    ebx,0x78
  40e865:	mov    ch,0x96
  40e867:	ror    DWORD PTR [edi-0x30f35ef8],0x97
  40e86e:	loopne 0x40e808
  40e870:	enter  0x612d,0x3e
  40e874:	mov    ecx,DWORD PTR [ebx-0x1710f650]
  40e87a:	and    bl,BYTE PTR [ecx]
  40e87c:	lods   eax,DWORD PTR ds:[esi]
  40e87d:	jle    0x40e8d8
  40e87f:	jae    0x40e8bf
  40e881:	inc    edx
  40e882:	xor    edi,DWORD PTR [esp+eax*8-0x6c9acd24]
  40e889:	pop    eax
  40e88a:	pop    ecx
  40e88b:	mov    edi,0xa899f5c3
  40e890:	mov    esi,0x2933b53e
  40e895:	shl    BYTE PTR [ebp+0x5d168018],0x7e
  40e89c:	and    edx,DWORD PTR [esi+0x10]
  40e89f:	arpl   WORD PTR [eax-0x62],di
  40e8a2:	mov    ah,0xb
  40e8a4:	cdq    
  40e8a5:	push   0xb354391e
  40e8aa:	sbb    BYTE PTR es:[eax],bl
  40e8ad:	ficom  WORD PTR [edx-0x78]
  40e8b0:	push   edi
  40e8b1:	mov    ds:0x61746422,eax
  40e8b6:	mov    ebx,eax
  40e8b8:	hlt    
  40e8b9:	std    
  40e8ba:	sub    BYTE PTR [edi+0x5],bl
  40e8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8be:	mov    ds:0x445da578,eax
  40e8c3:	fdivr  QWORD PTR [ebx+0x4ce78acc]
  40e8c9:	(bad)  
  40e8ca:	(bad)  
  40e8cb:	daa    
  40e8cc:	imul   edx,DWORD PTR [edi+eax*4-0x4deac806],0x52afd8b1
  40e8d7:	push   0xffffff8c
  40e8d9:	stc    
  40e8da:	inc    DWORD PTR [esi+0x49]
  40e8dd:	fdiv   DWORD PTR [edi+0x66]
  40e8e0:	push   0xb998795f
  40e8e5:	xchg   ebx,eax
  40e8e7:	enter  0x1b6d,0xca
  40e8eb:	popf   
  40e8ec:	adc    DWORD PTR [ebx-0x58d3b8ee],ecx
  40e8f2:	jle    0x40e894
  40e8f4:	mov    ds:0xe9b15cf1,al
  40e8f9:	add    eax,DWORD PTR [edi+0x7d]
  40e8fc:	xor    DWORD PTR [edi-0x67],esi
  40e8ff:	mov    bh,0x56
  40e901:	dec    ecx
  40e902:	stos   BYTE PTR es:[edi],al
  40e903:	jns    0x275208e4
  40e909:	dec    edi
  40e90a:	add    al,0x8d
  40e90c:	mov    bh,0xdd
  40e90e:	cld    
  40e90f:	xchg   DWORD PTR [esi-0x35],edi
  40e912:	enter  0xdeb6,0xe
  40e916:	popf   
  40e917:	mov    WORD PTR [edi],es
  40e919:	out    dx,al
  40e91a:	or     ah,BYTE PTR [esi+0x65]
  40e91d:	sub    BYTE PTR [eax+0x52e2aa24],0xcc
  40e924:	push   ds
  40e925:	sub    BYTE PTR [ecx+0x1881c750],bl
  40e92b:	popw   ss
  40e92d:	sub    DWORD PTR [esi+0x18b7c640],0xfe78b45b
  40e937:	mov    DWORD PTR [ebp+0x39bd83b8],esp
  40e93d:	test   eax,0x16ecd64f
  40e942:	mov    ch,0x2d
  40e944:	adc    eax,DWORD PTR [esi+0x67]
  40e947:	sbb    edx,ecx
  40e949:	fcomp  DWORD PTR [edx]
  40e94b:	repnz pop ebp
  40e94d:	(bad)  
  40e94e:	xchg   edx,eax
  40e94f:	pop    ss
  40e950:	adc    al,0xce
  40e952:	aaa    
  40e953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e954:	mov    bl,0x1d
  40e956:	ins    BYTE PTR es:[edi],dx
  40e957:	ss pop eax
  40e959:	pop    eax
  40e95a:	test   DWORD PTR [ebp-0x57],eax
  40e95d:	mov    ebp,0xe40f502
  40e962:	jo     0x40e936
  40e964:	call   0x15b5bc38
  40e969:	jbe    0x40e8fd
  40e96b:	xor    al,0xd5
  40e96d:	pop    ebp
  40e96e:	mov    esp,DWORD PTR [edi]
  40e970:	scas   al,BYTE PTR es:[edi]
  40e971:	xchg   edx,eax
  40e972:	mov    esp,0xe16a7d7b
  40e977:	retf   0x8984
  40e97a:	jne    0x40e98e
  40e97c:	clc    
  40e97d:	adc    ebp,DWORD PTR [eax-0x14]
  40e980:	adc    ah,BYTE PTR [ebp-0x1b9a9b1f]
  40e986:	inc    ecx
  40e987:	xchg   edi,eax
  40e988:	das    
  40e989:	rcl    DWORD PTR [ecx-0x306fc5aa],0x5d
  40e990:	adc    BYTE PTR [ebx],dl
  40e992:	jp     0x40e9e2
  40e994:	mov    esi,0xddea4e8b
  40e999:	xor    eax,0xb0066104
  40e99e:	xor    DWORD PTR ds:0xa2637ccd,ebp
  40e9a4:	add    eax,0xb9ded739
  40e9a9:	ror    BYTE PTR [edx],cl
  40e9ab:	imul   DWORD PTR [ebp+0xd]
  40e9ae:	lahf   
  40e9af:	sbb    edx,DWORD PTR [edi+0x2e]
  40e9b2:	je     0x40e9ae
  40e9b4:	loopne 0x40e9b1
  40e9b6:	pop    eax
  40e9b7:	addr16 cmp al,0xbd
  40e9ba:	dec    edi
  40e9bb:	add    DWORD PTR [ebx-0x19],ebx
  40e9be:	mov    ds:0x9cff66cd,al
  40e9c3:	adc    BYTE PTR [esi-0x28a28b43],0xab
  40e9ca:	xchg   ecx,eax
  40e9cb:	(bad)
  40e9cf:	rol    DWORD PTR [ebp+0x7944c31a],0xa3
  40e9d6:	(bad)  
  40e9d7:	sub    eax,0x8efcf95e
  40e9dc:	aaa    
  40e9dd:	adc    ebp,edi
  40e9df:	in     al,0x60
  40e9e1:	xor    eax,0x355e95bf
  40e9e6:	and    esp,DWORD PTR [ebx]
  40e9e8:	scas   al,BYTE PTR es:[edi]
  40e9e9:	and    BYTE PTR [esi+0x4de4f749],bh
  40e9ef:	and    al,0xa0
  40e9f1:	sbb    DWORD PTR [eax+0x49d27586],0x859ce505
  40e9fb:	mov    al,ds:0xa3d409b7
  40ea00:	and    al,0xd1
  40ea02:	pop    edi
  40ea03:	inc    ebp
  40ea04:	jnp    0x40ea48
  40ea06:	ds push es
  40ea08:	mov    edx,0x98cdab15
  40ea0d:	push   0xffffff8b
  40ea0f:	stos   BYTE PTR es:[edi],al
  40ea10:	in     eax,dx
  40ea11:	hlt    
  40ea12:	xchg   edx,eax
  40ea13:	xchg   edi,eax
  40ea14:	sbb    eax,0x5576a9b0
  40ea19:	loop   0x40ea60
  40ea1b:	jo     0x40ea1c
  40ea1d:	test   DWORD PTR [edi+0x0],ecx
  40ea20:	add    eax,DWORD PTR [ecx]
  40ea22:	adc    cl,al
  40ea24:	jle    0x40e9c1
  40ea26:	sbb    eax,0x95879119
  40ea2b:	pop    esi
  40ea2c:	mov    ch,0xca
  40ea2e:	(bad)  
  40ea2f:	sbb    al,0xc6
  40ea31:	inc    edx
  40ea32:	adc    edx,ebx
  40ea34:	jl     0x40e9f4
  40ea36:	pop    es
  40ea37:	adc    DWORD PTR [ebp+0x35427bc7],ebp
  40ea3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea3e:	pushw  0x3ac3
  40ea42:	imul   eax,DWORD PTR [eax+ebx*1-0x42],0xffffffeb
  40ea47:	or     esp,DWORD PTR [edx]
  40ea49:	cld    
  40ea4a:	aad    0xc3
  40ea4c:	mov    ds:0x809dc640,eax
  40ea51:	adc    al,0x9a
  40ea53:	xchg   ecx,eax
  40ea54:	adc    ah,BYTE PTR [ebp+0x76587167]
  40ea5a:	js     0x40ea0b
  40ea5c:	stos   DWORD PTR es:[edi],eax
  40ea5d:	retf   0x884d
  40ea60:	mov    cl,0xdd
  40ea62:	and    edx,DWORD PTR [eax+0x46dc96ab]
  40ea68:	jo     0x40eab8
  40ea6a:	dec    ebp
  40ea6b:	loop   0x40ea3f
  40ea6d:	mov    WORD PTR [edx],ss
  40ea6f:	icebp  
  40ea70:	sub    esp,DWORD PTR [eax-0x5a]
  40ea73:	repnz es test eax,0x4b00a794
  40ea7a:	imul   edi,DWORD PTR [esi],0x3d69390c
  40ea80:	mul    DWORD PTR [esi]
  40ea82:	bound  edi,QWORD PTR [esi+edx*1+0x3f015abc]
  40ea89:	hlt    
  40ea8a:	stos   DWORD PTR es:[edi],eax
  40ea8b:	ss or  eax,0x2fc0aad6
  40ea91:	mov    edi,0x9f89f14
  40ea96:	ds sub ecx,eax
  40ea99:	pop    ss
  40ea9a:	out    0xcc,al
  40ea9c:	mov    dl,0xa
  40ea9e:	add    ch,ah
  40eaa0:	dec    edi
  40eaa1:	mov    ds:0xf5fc644b,eax
  40eaa6:	sub    edx,DWORD PTR [ebp+0x42335cd]
  40eaac:	add    esi,DWORD PTR [ecx]
  40eaae:	and    BYTE PTR [ebx+0x6c],0x7c
  40eab2:	int3   
  40eab3:	fwait
  40eab4:	ins    DWORD PTR es:[edi],dx
  40eab5:	and    eax,0xafa78fb8
  40eaba:	fs aam 0xd6
  40eabd:	mov    WORD PTR [eax-0x36790d4e],?
  40eac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac4:	mov    dh,0x13
  40eac6:	ins    DWORD PTR es:[edi],dx
  40eac7:	std    
  40eac8:	adc    ch,BYTE PTR [esi+0x1e]
  40eacb:	cmp    BYTE PTR [esi+0x659435cf],0x3f
  40ead2:	mov    DWORD PTR gs:[ecx+0x45],0xb14c242f
  40eada:	dec    eax
  40eadb:	mov    esp,esp
  40eadd:	jle    0x40ea64
  40eadf:	pop    ebx
  40eae0:	shl    DWORD PTR [eax-0x6ef3f175],1
  40eae6:	xchg   edi,eax
  40eae7:	clc    
  40eae8:	out    dx,al
  40eae9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40eaeb:	and    esi,DWORD PTR [ebx+0x7f1bab4e]
  40eaf1:	(bad)  
  40eaf2:	(bad)
  40eaf7:	inc    esp
  40eaf8:	pop    ecx
  40eaf9:	jg     0x40eb1f
  40eafb:	xor    DWORD PTR [ecx+0x51],0xb9ea8e7f
  40eb02:	dec    ebp
  40eb03:	xor    ebp,ebp
  40eb05:	out    0x9f,eax
  40eb07:	gs rol dl,cl
  40eb0a:	jae    0x40ead1
  40eb0c:	xor    eax,0x352f9658
  40eb11:	fisttp DWORD PTR [esi]
  40eb13:	push   edx
  40eb14:	xchg   ebp,eax
  40eb15:	lmsw   ax
  40eb18:	lds    eax,FWORD PTR [ecx+0x42]
  40eb1b:	fwait
  40eb1c:	or     al,0xa0
  40eb1e:	push   eax
  40eb1f:	inc    ecx
  40eb20:	and    ax,0x2fc6
  40eb24:	cmc    
  40eb25:	jbe    0x40eaef
  40eb27:	inc    esi
  40eb28:	push   es
  40eb29:	push   ebp
  40eb2a:	xchg   esi,eax
  40eb2b:	in     eax,0x34
  40eb2d:	mov    ebp,0x138ac888
  40eb32:	sti    
  40eb33:	xor    DWORD PTR [ecx-0x2f],esp
  40eb36:	pop    ds
  40eb37:	fxch   st(1)
  40eb39:	hlt    
  40eb3a:	xchg   ebx,eax
  40eb3b:	sbb    esi,ebp
  40eb3d:	enter  0x8b3a,0x3b
  40eb41:	xlat   BYTE PTR ds:[ebx]
  40eb42:	adc    bl,dh
  40eb44:	std    
  40eb45:	ins    DWORD PTR es:[edi],dx
  40eb46:	fwait
  40eb47:	cwde   
  40eb48:	fidivr DWORD PTR [ecx+edx*8]
  40eb4b:	shl    DWORD PTR [ebp+0xc179ba1],1
  40eb51:	dec    ch
  40eb53:	sub    BYTE PTR [ebx+0x7b],0xb2
  40eb57:	rol    BYTE PTR [eax],cl
  40eb59:	js     0x40ebd2
  40eb5b:	cmp    cl,cl
  40eb5d:	pop    edi
  40eb5e:	xchg   ebx,eax
  40eb5f:	aaa    
  40eb60:	mov    ch,0xe5
  40eb62:	enter  0x12f8,0xb6
  40eb66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb67:	popf   
  40eb68:	jmp    0x4f01:0x1352f604
  40eb6f:	in     eax,0x40
  40eb71:	sbb    eax,0xe5f4a79c
  40eb76:	push   edi
  40eb77:	pop    ds
  40eb78:	sub    BYTE PTR [ecx],bl
  40eb7a:	sbb    BYTE PTR [edi-0x1214ab9c],ch
  40eb80:	add    BYTE PTR [eax+esi*1-0x6cd640bc],0x17
  40eb88:	loope  0x40eb60
  40eb8a:	push   edx
  40eb8b:	mov    cl,0x8c
  40eb8d:	pusha  
  40eb8e:	mov    cl,0x3
  40eb90:	nop
  40eb91:	jae    0x40eb3a
  40eb93:	jmp    0x444e:0x40808d0a
  40eb9a:	mov    dl,0x62
  40eb9c:	or     BYTE PTR [ebp+edx*4+0x44acec80],dl
  40eba3:	stc    
  40eba4:	sub    DWORD PTR ds:0xa9469231,esp
  40ebaa:	imul   ecx,ebx,0xb8e14516
  40ebb0:	js     0x40ebc7
  40ebb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebb3:	jb     0x40ebb6
  40ebb5:	xor    dh,BYTE PTR [ebx]
  40ebb7:	xchg   ecx,eax
  40ebb8:	push   eax
  40ebb9:	dec    eax
  40ebba:	ror    BYTE PTR [esi-0x56da9f43],1
  40ebc0:	xchg   bh,dl
  40ebc2:	aad    0x7a
  40ebc4:	cli    
  40ebc5:	or     eax,0x1feef528
  40ebca:	stos   DWORD PTR es:[edi],eax
  40ebcb:	adc    esp,eax
  40ebcd:	cmp    ebx,eax
  40ebcf:	dec    ecx
  40ebd0:	out    0xe5,eax
  40ebd2:	dec    ebp
  40ebd3:	rol    DWORD PTR [ebx+0x24],cl
  40ebd6:	jb     0x40ebaf
  40ebd8:	push   0xfb3dc72e
  40ebdd:	push   0x8828b85d
  40ebe2:	aam    0x6d
  40ebe4:	mov    al,ds:0xbc2d7bad
  40ebe9:	call   0xcbdc402b
  40ebee:	(bad)  
  40ebef:	mov    edx,0x4869f15f
  40ebf4:	pushf  
  40ebf5:	(bad)  
  40ebf6:	stos   DWORD PTR es:[edi],eax
  40ebf7:	mov    al,ds:0xa4be8900
  40ebfc:	sbb    eax,0x6ea7cf69
  40ec01:	jmp    0x3eb6371
  40ec06:	or     eax,DWORD PTR [eax-0x3d]
  40ec09:	ffree  st(2)
  40ec0c:	pop    ss
  40ec0d:	vpunpckhdq xmm4,xmm5,xmm4
  40ec11:	jnp    0x40ebab
  40ec13:	shl    DWORD PTR [esi-0x2389721e],1
  40ec19:	adc    DWORD PTR [edi+0x348202d],esp
  40ec1f:	sbb    esi,DWORD PTR [ebp-0x279f8865]
  40ec25:	enter  0x3f21,0x2a
  40ec29:	xchg   esi,eax
  40ec2a:	ficom  DWORD PTR [ebp+0x67a95e0e]
  40ec30:	xchg   edi,eax
  40ec31:	js     0x40ec3b
  40ec33:	or     al,BYTE PTR [edi+0x62]
  40ec36:	pop    ds
  40ec37:	sub    DWORD PTR [edi],0x6bff7d47
  40ec3d:	out    0x94,al
  40ec3f:	sahf   
  40ec40:	xchg   DWORD PTR [ebp-0x48],ebx
  40ec43:	jle    0x40ec9a
  40ec45:	xchg   esp,eax
  40ec46:	and    BYTE PTR [esi+0x20],cl
  40ec49:	or     DWORD PTR [eax+0x6b0ec2a3],edi
  40ec4f:	or     DWORD PTR [edi],0xf
  40ec52:	jo     0x40eca8
  40ec54:	cld    
  40ec55:	out    0xd5,eax
  40ec57:	in     al,dx
  40ec58:	xchg   ebx,eax
  40ec59:	lods   al,BYTE PTR ds:[esi]
  40ec5a:	dec    ecx
  40ec5b:	mov    esp,0x712fd56b
  40ec60:	nop
  40ec61:	adc    eax,0x10d592b5
  40ec66:	ret    
  40ec67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec68:	in     eax,dx
  40ec69:	pusha  
  40ec6a:	adc    eax,0x8f77ccc0
  40ec6f:	ds das 
  40ec71:	dec    esi
  40ec72:	dec    edi
  40ec73:	xchg   DWORD PTR [ecx-0x4040b9c],ebx
  40ec79:	cmp    edi,DWORD PTR [eax]
  40ec7b:	sub    eax,0xdec17087
  40ec80:	pushf  
  40ec81:	rcr    BYTE PTR [ebp+0x5d7ebc44],0xc
  40ec88:	cld    
  40ec89:	sbb    eax,0x1c12d0b0
  40ec8e:	xor    bh,BYTE PTR [edi-0x37]
  40ec91:	inc    edi
  40ec92:	je     0x40ec62
  40ec94:	mov    BYTE PTR [esi-0xcfc5c8d],al
  40ec9a:	mov    gs,WORD PTR [edi]
  40ec9c:	and    al,0x4a
  40ec9e:	xlat   BYTE PTR ds:[ebx]
  40ec9f:	stc    
  40eca0:	leave  
  40eca1:	fsubr  DWORD PTR [ecx]
  40eca3:	adc    al,0x53
  40eca5:	xor    bh,ch
  40eca7:	ins    BYTE PTR es:[edi],dx
  40eca8:	cmp    esi,esi
  40ecaa:	int    0xc6
  40ecac:	push   ss
  40ecad:	sbb    eax,0xf0cead42
  40ecb2:	pop    ebx
  40ecb3:	pop    edi
  40ecb4:	mov    al,ds:0xdfc318da
  40ecb9:	sbb    eax,0x3dd03a0d
  40ecbe:	inc    edi
  40ecbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecc0:	in     eax,0x2f
  40ecc2:	jmp    0xd4e84fcf
  40ecc7:	or     eax,0xb83d2782
  40eccc:	pop    esp
  40eccd:	push   ds
  40ecce:	cmp    eax,0x94f0b712
  40ecd3:	or     DWORD PTR [edx+0x75c40cd1],eax
  40ecd9:	sbb    ebp,edx
  40ecdb:	pop    esi
  40ecdc:	aad    0xb4
  40ecde:	out    0x39,al
  40ece0:	ja     0x40ed37
  40ece2:	hlt    
  40ece3:	adc    eax,DWORD PTR [edx-0x44]
  40ece6:	cmovs  ebp,edi
  40ece9:	ds addr16 cmp eax,0xe1d389d6
  40ecf0:	cmp    al,0x97
  40ecf2:	es push ss
  40ecf4:	cmp    ch,bh
  40ecf6:	call   0x468bcdb8
  40ecfb:	xchg   esp,eax
  40ecfc:	sti    
  40ecfd:	push   cs
  40ecfe:	push   eax
  40ecff:	leave  
  40ed00:	cmp    al,BYTE PTR [edx+0x3]
  40ed03:	sub    eax,0xee17dc8c
  40ed08:	rcl    DWORD PTR [esi-0x22b1eef0],1
  40ed0e:	aaa    
  40ed0f:	rcr    BYTE PTR [ebx-0x7f12d0cd],1
  40ed15:	(bad)  
  40ed16:	loop   0x40ed6c
  40ed18:	pop    ebp
  40ed19:	gs js  0x40ece9
  40ed1c:	inc    eax
  40ed1d:	mov    ss,WORD PTR [edx]
  40ed1f:	jns    0x40ecb3
  40ed21:	(bad)  
  40ed22:	outs   dx,BYTE PTR ds:[esi]
  40ed24:	sbb    ch,BYTE PTR [ecx-0x4c8a821a]
  40ed2a:	mov    ds:0xe59a886,eax
  40ed2f:	jnp    0x40ed42
  40ed31:	push   edx
  40ed32:	iret   
  40ed33:	cmp    al,0xc6
  40ed35:	xor    eax,0x8f0d681d
  40ed3a:	(bad)  [edi-0x6f9be7ef]
  40ed40:	pop    ss
  40ed41:	cli    
  40ed42:	test   eax,0x6c2d2010
  40ed47:	fnstsw WORD PTR [edi-0x56839ef1]
  40ed4d:	or     al,0x32
  40ed4f:	cmp    ah,bl
  40ed51:	inc    BYTE PTR [ebp-0x61]
  40ed54:	pop    edx
  40ed55:	jg     0x40ed9a
  40ed57:	xchg   DWORD PTR [ebx+ecx*2],esp
  40ed5a:	cmp    DWORD PTR [ecx+0x5],esp
  40ed5d:	fnclex 
  40ed5f:	dec    eax
  40ed60:	dec    DWORD PTR [eax]
  40ed62:	mov    esp,0x27bce081
  40ed67:	cwde   
  40ed68:	loope  0x40ed51
  40ed6a:	imul   ecx,DWORD PTR gs:[ecx+edx*2+0x6c0bfd5b],0xfffffff0
  40ed73:	add    eax,0x61dcf234
  40ed78:	pusha  
  40ed79:	call   0x6b49:0x51d9446
  40ed80:	mov    ds:0x81e694f6,eax
  40ed85:	sub    ah,ah
  40ed87:	mov    dh,0xf8
  40ed89:	in     eax,0x50
  40ed8b:	call   0x63eb:0xda113b70
  40ed92:	dec    esp
  40ed93:	sub    DWORD PTR [edi+0x8],0xffffff98
  40ed97:	pcmpgtd mm6,mm4
  40ed9a:	cmp    BYTE PTR [ebp-0xd59d3fd],al
  40eda0:	fcmovnb st,st(5)
  40eda2:	jle    0x40edc6
  40eda4:	stos   BYTE PTR es:[edi],al
  40eda5:	sbb    al,0xdd
  40eda7:	fmul   DWORD PTR [esi-0x276ce302]
  40edad:	retf   0xea5e
  40edb0:	cdq    
  40edb1:	mov    WORD PTR [esi-0x4e],?
  40edb4:	scas   eax,DWORD PTR es:[edi]
  40edb5:	push   ebp
  40edb6:	xor    al,0x62
  40edb8:	hlt    
  40edb9:	inc    eax
  40edba:	inc    eax
  40edbb:	mov    BYTE PTR [ebx+eax*4-0x48],al
  40edbf:	sahf   
  40edc0:	mov    DWORD PTR ds:0x8e8f43f8,esi
  40edc6:	(bad)  
  40edc7:	pop    edx
  40edc8:	rol    BYTE PTR [esi],0xbe
  40edcb:	dec    esi
  40edcc:	jmp    0x40ed97
  40edce:	mov    al,0x59
  40edd0:	push   esi
  40edd1:	xchg   esi,eax
  40edd2:	push   cs
  40edd3:	mov    ah,0x39
  40edd5:	dec    esp
  40edd6:	push   es
  40edd7:	arpl   bx,ax
  40edd9:	push   ss
  40edda:	(bad)  
  40eddb:	dec    esp
  40eddc:	jmp    0x40ed6e
  40edde:	xchg   edx,eax
  40eddf:	test   eax,0x9767647b
  40ede4:	cmp    DWORD PTR [ebx*1-0x20db9700],edi
  40edeb:	sbb    DWORD PTR [edi],ebp
  40eded:	mov    es,edi
  40edef:	jge    0x40ee3c
  40edf1:	pusha  
  40edf2:	mov    dh,0x11
  40edf5:	out    0x3a,eax
  40edf7:	mov    ch,0x97
  40edf9:	jg     0x40ed7d
  40edfb:	xchg   ecx,eax
  40edfc:	popf   
  40edfd:	jmp    0xf196d0b9
  40ee02:	cmp    dl,bl
  40ee04:	ja     0x40ee78
  40ee06:	rcr    DWORD PTR [eax+ebx*4+0x37bc3760],0x7f
  40ee0e:	fstp   TBYTE PTR ds:0x99e37c4e
  40ee14:	retf   0x8dbc
  40ee17:	cmp    esi,ebx
  40ee19:	mov    esi,0xb5f367f
  40ee1e:	iret   
  40ee1f:	jb     0x40ee45
  40ee21:	or     DWORD PTR [esi+0x29b5256c],ebp
  40ee27:	mov    dl,0x1c
  40ee29:	(bad)  
  40ee2a:	fsub   QWORD PTR [esi-0x43]
  40ee2d:	jno    0x40eea5
  40ee2f:	sbb    eax,0x5f745a4d
  40ee34:	sbb    ah,BYTE PTR [edx]
  40ee36:	mov    dl,0xf3
  40ee38:	push   ds
  40ee39:	fbstp  TBYTE PTR [esi-0x1b]
  40ee3c:	dec    eax
  40ee3d:	push   es
  40ee3e:	addr16 ss xor esp,edx
  40ee42:	pop    edx
  40ee43:	inc    ecx
  40ee44:	sbb    eax,0xc6c8b894
  40ee49:	jo     0x40eebd
  40ee4b:	dec    esp
  40ee4c:	ds jo  0x40ee4f
  40ee4f:	les    ecx,FWORD PTR [esi+esi*2]
  40ee52:	sub    BYTE PTR ds:0xc951430b,dl
  40ee58:	fisub  DWORD PTR [ebx]
  40ee5a:	jb     0x40eece
  40ee5c:	pusha  
  40ee5d:	jge    0x40eeb9
  40ee5f:	xchg   esp,eax
  40ee60:	jns    0x40ee82
  40ee62:	cld    
  40ee63:	xchg   edi,eax
  40ee64:	mov    eax,0x2cb3591a
  40ee69:	jne    0x40ee53
  40ee6b:	jl     0x40ee2d
  40ee6d:	cld    
  40ee6e:	scas   al,BYTE PTR es:[edi]
  40ee6f:	jb     0x40eed5
  40ee71:	pop    esi
  40ee72:	pop    es
  40ee73:	bound  eax,QWORD PTR [ebp+edx*8+0x69]
  40ee77:	into   
  40ee78:	adc    cl,dl
  40ee7a:	inc    ebx
  40ee7b:	mov    bh,0x67
  40ee7d:	in     al,dx
  40ee7e:	aam    0x29
  40ee80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee81:	hlt    
  40ee82:	ret    0x4108
  40ee85:	out    dx,al
  40ee86:	and    al,0x23
  40ee88:	sbb    al,0xac
  40ee8a:	out    0x4d,eax
  40ee8c:	mov    edx,DWORD PTR [edx]
  40ee8e:	fiadd  WORD PTR [esi]
  40ee90:	sbb    ebp,esp
  40ee92:	mov    bh,0x16
  40ee94:	mov    dh,BYTE PTR [edx+0x24]
  40ee97:	sbb    eax,0xdb230138
  40ee9c:	in     eax,dx
  40ee9d:	call   esi
  40ee9f:	mov    ah,BYTE PTR [ebx]
  40eea1:	(bad)  
  40eea2:	jmp    0x763f:0xc6514da1
  40eea9:	xchg   edx,eax
  40eeaa:	jecxz  0x40ef29
  40eeac:	rcr    BYTE PTR [ebx-0x1e5424fa],cl
  40eeb2:	cld    
  40eeb3:	xchg   esi,eax
  40eeb4:	mov    bh,0x8e
  40eeb6:	lods   al,BYTE PTR ds:[esi]
  40eeb7:	and    edi,DWORD PTR [esp+ebx*4+0x5c]
  40eebb:	and    eax,0xdf3efe47
  40eec0:	cmp    DWORD PTR [edi],ebx
  40eec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec3:	pop    ecx
  40eec4:	in     al,dx
  40eec5:	add    al,0x61
  40eec7:	es call 0xf79485b5
  40eecd:	into   
  40eece:	lock div DWORD PTR [ecx]
  40eed1:	cdq    
  40eed2:	outs   dx,BYTE PTR ds:[esi]
  40eed3:	lods   eax,DWORD PTR ds:[esi]
  40eed4:	ja     0x40eea0
  40eed6:	dec    esp
  40eed7:	pop    esi
  40eed8:	add    al,0xa7
  40eeda:	push   ecx
  40eedb:	mov    edi,0x86d80718
  40eee0:	xor    eax,0xd6c7db8b
  40eee5:	in     eax,dx
  40eee6:	(bad)  [esi+0x2912d5f3]
  40eeec:	sbb    ch,BYTE PTR [edx-0xab27db7]
  40eef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eef3:	and    DWORD PTR [esp+edi*8],0x54
  40eef7:	shl    edi,1
  40eef9:	call   0x40f9:0x98f28752
  40ef00:	mov    ds:0x5085cb7a,al
  40ef05:	fisubr DWORD PTR [eiz*4+0x2171f8b5]
  40ef0c:	inc    esp
  40ef0d:	cmp    eax,0xfacc197d
  40ef12:	xchg   DWORD PTR ds:0x9836c729,esp
  40ef18:	ins    DWORD PTR es:[edi],dx
  40ef19:	hlt    
  40ef1a:	das    
  40ef1b:	inc    ecx
  40ef1c:	adc    al,0x1e
  40ef1e:	popa   
  40ef1f:	aas    
  40ef20:	jb     0x40eedc
  40ef22:	pop    ss
  40ef23:	sbb    eax,0x3b8e040c
  40ef28:	aad    0xe7
  40ef2a:	sub    edi,edi
  40ef2c:	mov    eax,ds:0xcaa0f6e6
  40ef31:	adc    eax,0x166a5832
  40ef36:	out    0x44,al
  40ef38:	retf   
  40ef39:	outs   dx,DWORD PTR ds:[esi]
  40ef3a:	jb     0x40eeee
  40ef3c:	or     eax,0xc2712fcb
  40ef41:	push   ss
  40ef42:	and    BYTE PTR [esi+0x21ddee2a],ch
  40ef48:	push   ebx
  40ef49:	mov    ebp,0x8d4a9d53
  40ef4e:	sbb    eax,0x3703da21
  40ef53:	addr16 mov esp,0x2ebe2f83
  40ef59:	fcom   DWORD PTR [edx]
  40ef5b:	dec    edi
  40ef5c:	in     eax,dx
  40ef5d:	inc    esp
  40ef5e:	call   0xc0b:0xb92039ca
  40ef65:	and    eax,DWORD PTR [eax]
  40ef67:	adc    edx,ecx
  40ef69:	outs   dx,DWORD PTR ds:[esi]
  40ef6a:	in     al,dx
  40ef6b:	jecxz  0x40ef96
  40ef6d:	jmp    0x40ef84
  40ef6f:	or     bl,dl
  40ef71:	sti    
  40ef72:	cld    
  40ef73:	shl    al,1
  40ef75:	adc    eax,0x80d947b7
  40ef7a:	mov    WORD PTR [edi+0x4e],gs
  40ef7d:	in     eax,dx
  40ef7e:	pop    edi
  40ef7f:	jge    0x40efac
  40ef81:	jne    0x40ef07
  40ef83:	(bad)  
  40ef84:	pop    DWORD PTR [ebx+edi*8]
  40ef87:	jecxz  0x40ef34
  40ef89:	xchg   esi,eax
  40ef8a:	stos   DWORD PTR es:[edi],eax
  40ef8b:	or     ch,ah
  40ef8d:	cmp    DWORD PTR [esp+ecx*2-0x6f0f287e],0x87f0e348
  40ef98:	and    eax,0x6efab0ce
  40ef9d:	enter  0xd8,0x18
  40efa1:	gs sub eax,0x489be4b
  40efa7:	sub    BYTE PTR [esi+ebx*2+0xb],dh
  40efab:	push   ebx
  40efac:	jo     0x40ef58
  40efae:	into   
  40efaf:	daa    
  40efb0:	sbb    dl,BYTE PTR [ebp+0x7656e013]
  40efb6:	pop    ebp
  40efb7:	stc    
  40efb8:	mov    ch,0x6c
  40efba:	sbb    ch,BYTE PTR [edx]
  40efbc:	pop    esp
  40efbd:	or     ecx,DWORD PTR [ebp+eiz*8-0x11]
  40efc1:	cmp    edi,esi
  40efc3:	clc    
  40efc4:	je     0x40f008
  40efc6:	btc    DWORD PTR [esi],0xab
  40efca:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efcc:	add    eax,0x8179a1dd
  40efd1:	stc    
  40efd2:	xor    BYTE PTR [edi-0x236db3a],ch
  40efd8:	adc    al,0xd6
  40efda:	jle    0x40f02c
  40efdc:	pop    edx
  40efdd:	es mov esp,0x21fe431d
  40efe3:	mov    ch,0x98
  40efe5:	out    0x60,al
  40efe7:	sbb    bh,0xa6
  40efea:	push   cs
  40efeb:	sti    
  40efec:	jbe    0x40f02b
  40efee:	inc    edi
  40efef:	clc    
  40eff0:	add    al,0x91
  40eff2:	mov    BYTE PTR [edx+0x1d],bh
  40eff5:	push   ebp
  40eff6:	div    ebp
  40eff8:	jns    0x40f06c
  40effa:	mov    cl,0x8f
  40effc:	repz sub DWORD PTR [esi],ebp
  40efff:	pop    ebx
  40f000:	adc    BYTE PTR ds:0xea1369c3,0xb9
  40f007:	sbb    eax,0xd3ef7256
  40f00c:	fs xchg esi,eax
  40f00e:	sbb    BYTE PTR ds:0x69a15ec4,ch
  40f014:	(bad)
  40f017:	cmp    eax,0x813ac108
  40f01c:	lea    eax,[ebp+0x2c]
  40f01f:	mov    dh,0x94
  40f021:	loope  0x40f044
  40f023:	dec    ecx
  40f024:	sbb    eax,0x1308e75e
  40f029:	inc    edx
  40f02a:	pop    edi
  40f02b:	call   0xf43:0xf2318fef
  40f032:	dec    eax
  40f033:	xor    DWORD PTR [ebp+0x43],esp
  40f036:	jg     0x40efcc
  40f038:	sbb    BYTE PTR fs:[edi-0x5f],dh
  40f03c:	gs mov al,0xb9
  40f03f:	or     BYTE PTR [ebx-0x67865099],al
  40f045:	fld1   
  40f047:	iret   
  40f048:	mov    dh,0x60
  40f04a:	ins    BYTE PTR es:[edi],dx
  40f04b:	dec    ebx
  40f04c:	pop    edx
  40f04d:	mov    eax,DWORD PTR [edx]
  40f04f:	dec    ebx
  40f050:	mov    dh,bl
  40f052:	clc    
  40f053:	dec    ebp
  40f054:	jle    0x40efe5
  40f056:	in     eax,0xca
  40f058:	adc    ch,BYTE PTR [eax+0x12]
  40f05b:	jbe    0x40f08b
  40f05d:	loope  0x40f0ac
  40f05f:	stos   DWORD PTR es:[edi],eax
  40f060:	gs es (bad) 
  40f063:	and    al,0xc5
  40f065:	and    dl,BYTE PTR [ecx+0x1c8da0e7]
  40f06b:	xor    BYTE PTR [ebx-0x37],0x8e
  40f06f:	sbb    al,0xbd
  40f071:	rcl    ebp,0xbe
  40f074:	mov    bl,0x4d
  40f076:	ror    esi,0xd2
  40f079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f07a:	ins    DWORD PTR es:[edi],dx
  40f07b:	ret    
  40f07c:	xor    DWORD PTR [ebp+0x10c49542],edx
  40f082:	dec    ebx
  40f083:	jge    0x40f024
  40f085:	test   DWORD PTR [edx],ebp
  40f087:	mov    ?,WORD PTR [ebp-0xe7b6bc]
  40f08d:	jmp    esp
  40f08f:	pusha  
  40f090:	mov    bh,0x57
  40f092:	lahf   
  40f093:	loopne 0x40f076
  40f095:	xchg   esp,eax
  40f096:	stos   BYTE PTR es:[edi],al
  40f097:	add    bh,BYTE PTR [ebx+0xd]
  40f09a:	sbb    ebp,DWORD PTR ds:0x250d876b
  40f0a0:	jae    0x40f0de
  40f0a2:	mov    esi,0x79697892
  40f0a7:	retf   
  40f0a8:	sbb    al,0x6b
  40f0aa:	out    dx,eax
  40f0ab:	pop    edi
  40f0ac:	mov    ah,BYTE PTR [edx-0x45e95797]
  40f0b2:	xchg   ebx,eax
  40f0b3:	lods   eax,DWORD PTR ds:[esi]
  40f0b4:	jg     0x40f0f6
  40f0b6:	cmp    DWORD PTR [ecx],edi
  40f0b8:	jge    0x40f054
  40f0ba:	jg     0x40f0b0
  40f0bc:	fdivr  QWORD PTR [ebx]
  40f0be:	sub    eax,0x1d0ef383
  40f0c3:	fmul   st(0),st
  40f0c5:	ja     0x40f0f1
  40f0c7:	shr    ch,0x15
  40f0ca:	xor    eax,0xd3391ff8
  40f0cf:	aam    0xc
  40f0d1:	loope  0x40f0f2
  40f0d3:	int    0xe9
  40f0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d6:	xchg   edi,eax
  40f0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0d8:	leave  
  40f0d9:	push   edx
  40f0da:	out    0xb5,al
  40f0dc:	or     al,0x69
  40f0de:	fcmovnbe st,st(6)
  40f0e0:	xor    DWORD PTR ss:[esi],0x33
  40f0e4:	xor    al,0x26
  40f0e6:	jg     0x40f10a
  40f0e8:	rcl    BYTE PTR [edi-0xa58992],0x14
  40f0ef:	or     ebp,DWORD PTR [ebx]
  40f0f1:	fnsave [esi+0x53]
  40f0f4:	popa   
  40f0f5:	push   ss
  40f0f6:	jbe    0x40f146
  40f0f8:	test   DWORD PTR [ecx-0x594ec589],ecx
  40f0fe:	test   eax,0x4318b25d
  40f104:	addr16 out 0xc0,al
  40f107:	dec    edx
  40f108:	xchg   BYTE PTR [edi-0x6f],ah
  40f10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10c:	mov    ?,WORD PTR [ecx-0x57]
  40f10f:	and    DWORD PTR [edx],eax
  40f111:	inc    ebp
  40f112:	push   ecx
  40f113:	scas   eax,DWORD PTR es:[edi]
  40f114:	pop    esp
  40f115:	jno    0x40f11c
  40f117:	es push cs
  40f119:	push   edi
  40f11a:	sbb    eax,0x1e7f1e54
  40f11f:	xchg   bh,bh
  40f121:	xchg   DWORD PTR [ebx+0x6573bd5a],ecx
  40f127:	retf   0xeec2
  40f12a:	mov    al,0x5f
  40f12c:	cmp    dl,BYTE PTR [edx+0x9010199]
  40f132:	mov    dl,0xce
  40f134:	aam    0xcb
  40f136:	add    bl,0xdb
  40f139:	jnp    0x40f11e
  40f13b:	push   eax
  40f13c:	aas    
  40f13d:	cmp    DWORD PTR [ecx-0x57],esi
  40f140:	les    ecx,FWORD PTR [esi-0x13]
  40f143:	xchg   BYTE PTR [eax],bl
  40f145:	xchg   ebx,eax
  40f146:	and    eax,0x2fd9fb9d
  40f14b:	push   edx
  40f14c:	fwait
  40f14d:	mov    eax,DWORD PTR [esi]
  40f14f:	(bad)  
  40f150:	int    0xbd
  40f152:	sbb    al,0x64
  40f154:	cld    
  40f155:	mov    ebx,0xafb20df
  40f15a:	enter  0x4eaa,0x12
  40f15e:	call   0x362f:0xf6566d7e
  40f165:	xchg   ebp,eax
  40f166:	and    BYTE PTR [ebp+0x7c],0x9e
  40f16a:	loopne 0x40f14a
  40f16c:	(bad)  
  40f16d:	in     eax,0xd2
  40f16f:	sbb    al,0x41
  40f171:	fcmovnb st,st(5)
  40f173:	repnz push es
  40f175:	pop    ebx
  40f176:	out    dx,al
  40f177:	or     esp,ebx
  40f179:	call   DWORD PTR [ebp-0x7a]
  40f17d:	test   eax,0xc8f211f8
  40f182:	dec    esp
  40f183:	push   edi
  40f184:	pop    eax
  40f185:	adc    edx,DWORD PTR [edi]
  40f187:	int    0xf8
  40f189:	push   ebx
  40f18a:	in     eax,dx
  40f18b:	pop    eax
  40f18c:	in     al,0xf9
  40f18e:	or     eax,0x330865d9
  40f193:	ds push edi
  40f195:	sbb    BYTE PTR [ebp-0xa],dh
  40f198:	sub    al,0xf5
  40f19a:	sahf   
  40f19b:	jecxz  0x40f18e
  40f19d:	adc    dl,BYTE PTR [eax+0xe]
  40f1a0:	scas   eax,DWORD PTR es:[edi]
  40f1a1:	aam    0xfe
  40f1a3:	imul   ecx,DWORD PTR ds:0xd2649aa8,0xfffffff1
  40f1aa:	jmp    0x40f1a6
  40f1ac:	in     eax,0x59
  40f1ae:	imul   esi,DWORD PTR [esi-0xe6be5f0],0xb3fb6ab0
  40f1b8:	adc    esi,DWORD PTR ds:0x9e4079af
  40f1be:	sbb    DWORD PTR [ebx+0x17],ecx
  40f1c1:	pop    ebx
  40f1c2:	lahf   
  40f1c3:	push   esi
  40f1c4:	mov    esp,0xc341535b
  40f1c9:	iret   
  40f1ca:	pushf  
  40f1cb:	fsub   QWORD PTR [ecx-0x36fd5ee4]
  40f1d1:	jns    0x40f19b
  40f1d3:	icebp  
  40f1d4:	xchg   ecx,eax
  40f1d5:	xchg   DWORD PTR [eax+eax*8],esp
  40f1d8:	lds    ebx,FWORD PTR [ecx+edx*2+0x267a6e10]
  40f1df:	fsubr  st,st(7)
  40f1e1:	add    DWORD PTR [esi+ebx*1],0xffffffe2
  40f1e5:	push   ebx
  40f1e6:	in     al,0x31
  40f1e8:	jns    0x40f1f1
  40f1ea:	push   ds
  40f1eb:	sub    al,0xa5
  40f1ed:	xchg   ebp,eax
  40f1ee:	pop    esp
  40f1ef:	and    bl,dl
  40f1f1:	fwait
  40f1f2:	jb     0x40f22a
  40f1f4:	lods   eax,DWORD PTR ds:[esi]
  40f1f5:	aam    0x8d
  40f1f7:	shl    DWORD PTR [ecx],cl
  40f1f9:	ret    
  40f1fa:	xchg   ecx,eax
  40f1fb:	fst    QWORD PTR [edx]
  40f1fd:	lss    ecx,FWORD PTR [ebx]
  40f200:	sbb    al,0x5f
  40f202:	sar    BYTE PTR [ecx-0x634580f5],cl
  40f208:	ins    DWORD PTR es:[edi],dx
  40f209:	push   ebp
  40f20a:	sbb    bh,BYTE PTR [esi-0x2dff3472]
  40f210:	das    
  40f211:	sti    
  40f212:	pop    eax
  40f213:	sub    ch,dl
  40f215:	sub    DWORD PTR [edi],ebx
  40f217:	mov    ds:0xb5268ed8,al
  40f21c:	adc    eax,0xb4a920d7
  40f221:	and    BYTE PTR [edx+0x396898e8],dl
  40f227:	daa    
  40f228:	cmp    cl,ch
  40f22a:	mov    ebx,0xf96ac785
  40f22f:	scas   al,BYTE PTR es:[edi]
  40f230:	cmp    BYTE PTR [ecx+0x6ea84ea1],0x76
  40f237:	mov    DWORD PTR [edi+0x2f],0x8f142ebb
  40f23e:	add    DWORD PTR [ecx-0x4cd8f2d2],ebx
  40f244:	mov    BYTE PTR [edi],dh
  40f246:	sub    al,BYTE PTR [edx+0x13]
  40f249:	jp     0x40f2a0
  40f24b:	xor    al,0x5c
  40f24d:	nop
  40f24e:	cmp    eax,0x7ff9e6a5
  40f253:	stc    
  40f254:	fild   DWORD PTR [ebp-0x19]
  40f257:	(bad)  
  40f258:	xor    BYTE PTR [ebx-0x23d0eb0a],cl
  40f25e:	or     edi,edx
  40f260:	mov    gs,WORD PTR [esi-0x1780f858]
  40f266:	mov    edi,esi
  40f268:	cmp    BYTE PTR [esi+0x5a],ch
  40f26b:	or     bl,BYTE PTR [edi+0x6a99bfcf]
  40f271:	js     0x40f242
  40f273:	or     al,0xae
  40f275:	xor    DWORD PTR [esi+0x5374fd47],ecx
  40f27b:	mov    eax,ds:0xdedbd0e2
  40f280:	scas   al,BYTE PTR es:[edi]
  40f281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f282:	jl     0x40f2e0
  40f284:	hlt    
  40f285:	and    ch,bh
  40f287:	fstp   DWORD PTR ds:0xf076e472
  40f28d:	mov    esp,0x3a52093e
  40f292:	mov    WORD PTR [ebp+0x51],ds
  40f295:	dec    edx
  40f296:	jmp    0x40f295
  40f298:	inc    esp
  40f299:	xor    ah,bl
  40f29b:	mov    ebx,0xac814c8f
  40f2a0:	in     eax,dx
  40f2a1:	and    dl,0x8c
  40f2a4:	popa   
  40f2a5:	xchg   BYTE PTR [ebx-0x5ceea53b],al
  40f2ab:	dec    ebp
  40f2ac:	push   edx
  40f2ad:	mov    ebx,ecx
  40f2af:	adc    BYTE PTR [edi+0x395fdfc9],0xe1
  40f2b6:	mov    dh,0x28
  40f2b8:	pop    ss
  40f2b9:	mov    eax,ds:0x124b9eb5
  40f2be:	xchg   eax,ebp
  40f2c0:	inc    eax
  40f2c1:	ja     0x40f33c
  40f2c3:	pushw  0x1c35
  40f2c7:	out    0x47,al
  40f2c9:	call   0xca0b:0x77b14f15
  40f2d0:	popf   
  40f2d1:	int3   
  40f2d2:	(bad)  
  40f2d3:	push   0x695e0823
  40f2d8:	lea    eax,[edi+0x10]
  40f2db:	mov    dh,0x3b
  40f2dd:	push   0xffffffe3
  40f2df:	and    eax,DWORD PTR [ecx+ecx*1+0x5]
  40f2e3:	retf   
  40f2e4:	(bad)  [eax+0x2bd3cd7a]
  40f2ea:	push   ds
  40f2eb:	mov    ecx,0xba2834d2
  40f2f0:	stc    
  40f2f1:	and    al,0xa0
  40f2f3:	out    0x36,al
  40f2f5:	jle    0x40f30f
  40f2f7:	sahf   
  40f2f8:	int3   
  40f2f9:	cmp    DWORD PTR [edi],0x6c
  40f2fc:	and    BYTE PTR [ebx+0x9],0x25
  40f300:	xor    edi,DWORD PTR [eax]
  40f302:	fwait
  40f303:	neg    eax
  40f305:	lds    edi,FWORD PTR [edx-0x69]
  40f308:	sbb    al,0x7
  40f30a:	cmp    DWORD PTR [ebx+ebx*2+0x12],eax
  40f30e:	pop    ebx
  40f30f:	out    0x23,al
  40f311:	mov    edi,edx
  40f313:	lods   eax,DWORD PTR ds:[esi]
  40f314:	test   al,0xce
  40f316:	push   ebp
  40f317:	loop   0x40f36f
  40f319:	dec    ecx
  40f31a:	ins    DWORD PTR es:[edi],dx
  40f31b:	pop    eax
  40f31c:	mov    DWORD PTR [edx+edx*4-0x4c],ebp
  40f320:	pop    DWORD PTR ds:0x7fbc3cde
  40f326:	pop    ds
  40f327:	jl     0x40f2eb
  40f329:	int    0xcd
  40f32b:	pushf  
  40f32c:	mov    eax,ds:0xac3bce08
  40f331:	fist   DWORD PTR [ebp+0xe84b22f]
  40f337:	push   edx
  40f338:	(bad)  
  40f339:	call   0x1f3:0xf2701823
  40f340:	pop    eax
  40f341:	ror    DWORD PTR [esi+0x8ddc2dd],0xb
  40f348:	add    ebx,DWORD PTR [esi+0x2]
  40f34b:	sbb    eax,0x5b52bd24
  40f350:	fstp   TBYTE PTR [eax+0x68]
  40f353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f354:	bound  ebp,QWORD PTR [ebp-0x4706d027]
  40f35a:	cld    
  40f35b:	cs push es
  40f35d:	sub    DWORD PTR [eax],edx
  40f35f:	pop    ss
  40f360:	fisubr DWORD PTR [edx]
  40f362:	inc    ebx
  40f363:	xor    BYTE PTR [edx+0x54],dh
  40f366:	xchg   ecx,eax
  40f367:	jne    0x40f328
  40f369:	(bad)  
  40f36a:	cwde   
  40f36b:	mov    esi,0xe843ab68
  40f370:	jecxz  0x40f392
  40f372:	jo     0x40f380
  40f374:	js     0x40f326
  40f376:	pop    esp
  40f377:	mov    ebx,DWORD PTR es:[ecx+0x72]
  40f37b:	dec    edx
  40f37c:	adc    DWORD PTR [ebx+esi*1+0x7c83983],ecx
  40f383:	mov    esi,0x57b5a6c
  40f388:	add    DWORD PTR ds:0x3034c6da,0x4f
  40f38f:	leave  
  40f390:	dec    edi
  40f391:	cwde   
  40f392:	and    eax,0x53c9b2f7
  40f397:	sbb    BYTE PTR [eax],ch
  40f399:	jae    0x40f396
  40f39b:	dec    ebx
  40f39c:	push   esi
  40f39d:	pushf  
  40f39e:	or     eax,0x6089a195
  40f3a3:	out    0x2a,al
  40f3a5:	rcl    DWORD PTR [ebx],1
  40f3a7:	les    edi,FWORD PTR [edi-0x33a16af2]
  40f3ad:	retf   
  40f3ae:	mov    esp,0xbd7cc4f2
  40f3b3:	and    al,0x65
  40f3b5:	test   eax,0xa432c015
  40f3ba:	jnp    0x40f3d4
  40f3bc:	cmp    al,0xe9
  40f3be:	push   edx
  40f3bf:	loop   0x40f382
  40f3c1:	cld    
  40f3c2:	(bad)  
  40f3c3:	in     eax,dx
  40f3c4:	mov    cl,0x7d
  40f3c6:	xlat   BYTE PTR ds:[ebx]
  40f3c7:	mov    ds:0x4faf792f,eax
  40f3cc:	mov    ebp,0x840058e
  40f3d1:	dec    esi
  40f3d2:	pop    DWORD PTR [ebx]
  40f3d4:	mov    esi,0xad28ecce
  40f3d9:	dec    edx
  40f3da:	inc    edi
  40f3db:	cwde   
  40f3dc:	in     al,dx
  40f3dd:	(bad)  [ecx-0x2e66f792]
  40f3e3:	pop    edx
  40f3e4:	dec    eax
  40f3e5:	xchg   DWORD PTR [eax],ebx
  40f3e7:	rcr    BYTE PTR [esi],1
  40f3e9:	jne    0x40f3e3
  40f3eb:	and    eax,edx
  40f3ed:	paddw  mm4,QWORD PTR [ebx]
  40f3f0:	jg     0x40f3b6
  40f3f2:	enter  0x9684,0x39
  40f3f6:	aas    
  40f3f7:	push   cs
  40f3f8:	sub    ebp,DWORD PTR [eax-0x4e7447b1]
  40f3fe:	mov    bl,0xc4
  40f400:	outs   dx,BYTE PTR ds:[esi]
  40f401:	shl    DWORD PTR [ebx-0x66],1
  40f404:	stc    
  40f405:	push   edx
  40f406:	fnstcw WORD PTR [ecx-0x2e]
  40f409:	lds    ecx,FWORD PTR [eax+ecx*4]
  40f40c:	xor    BYTE PTR [ecx-0x2dbd0972],0xa7
  40f413:	dec    eax
  40f414:	xchg   DWORD PTR [edx-0x38],ebx
  40f417:	fwait
  40f418:	and    eax,0xd75b175f
  40f41d:	xchg   edx,eax
  40f41e:	jno    0x40f42c
  40f420:	fmul   QWORD PTR [edi]
  40f422:	sti    
  40f423:	xchg   esi,eax
  40f424:	jle    0x40f3eb
  40f426:	in     al,0x65
  40f428:	mov    esp,0x10cb1ff
  40f42d:	mov    edx,0x9c79b95a
  40f432:	jne    0x40f3d7
  40f434:	scas   al,BYTE PTR es:[edi]
  40f435:	xlat   BYTE PTR ds:[ebx]
  40f436:	scas   al,BYTE PTR es:[edi]
  40f437:	imul   ebp,ebx,0x2c
  40f43a:	fstp   TBYTE PTR [eax+0x33e26f9d]
  40f440:	jae    0x40f4a5
  40f442:	fisub  DWORD PTR [edx+0x4842a57b]
  40f448:	pushf  
  40f449:	pop    edi
  40f44a:	add    BYTE PTR [ebp+0x18fd920c],ah
  40f450:	js     0x40f4b0
  40f452:	jecxz  0x40f4ad
  40f454:	jecxz  0x40f4bc
  40f456:	ret    
  40f457:	frndint 
  40f459:	mov    ebx,0x67201cb7
  40f45e:	dec    edi
  40f45f:	nop
  40f460:	jmp    0x8e46:0x9d44a7b8
  40f467:	shl    DWORD PTR [ecx+edx*8-0x52],1
  40f46b:	enter  0x3259,0x9c
  40f46f:	cwde   
  40f470:	jp     0x40f4d1
  40f472:	shl    BYTE PTR [ecx],cl
  40f474:	ret    
  40f475:	add    DWORD PTR [edx-0x31],0x56b5e0b4
  40f47c:	(bad)  
  40f47d:	xlat   BYTE PTR ds:[ebx]
  40f47e:	clc    
  40f47f:	iret   
  40f480:	adc    esi,DWORD PTR [ebx+0x55]
  40f483:	fcom   DWORD PTR [edx]
  40f485:	loope  0x40f505
  40f487:	fistp  DWORD PTR [ecx+ebp*2+0x407cf41a]
  40f48e:	shl    BYTE PTR [edi+esi*8],0x5f
  40f492:	jg     0x40f4e0
  40f494:	es call 0xed3b1750
  40f49a:	test   BYTE PTR [ebp+0x63dbd274],ah
  40f4a0:	jmp    0xfdda3a67
  40f4a5:	in     al,0x9c
  40f4a7:	lock rcl BYTE PTR [ebx+ebx*4],cl
  40f4ab:	xor    DWORD PTR [ebx+0x2faa3f4c],ebx
  40f4b1:	mov    esi,0xb5f3a9bf
  40f4b6:	pusha  
  40f4b7:	call   0x867d:0xa054be8b
  40f4be:	inc    ebx
  40f4bf:	ror    DWORD PTR [edi+0x6aad0b6d],cl
  40f4c5:	lods   al,BYTE PTR ds:[esi]
  40f4c6:	sti    
  40f4c7:	sub    eax,0x505d5ef7
  40f4cc:	addr16 add al,0x1a
  40f4cf:	cmp    ecx,esi
  40f4d1:	push   ebx
  40f4d2:	pop    edi
  40f4d3:	mov    edi,0xfd447402
  40f4d8:	fistp  DWORD PTR [ebx]
  40f4da:	shl    DWORD PTR [esi+0x68749c88],1
  40f4e0:	xchg   edi,eax
  40f4e1:	sub    eax,0xb9bc2f27
  40f4e6:	dec    eax
  40f4e7:	cs pop esi
  40f4e9:	hlt    
  40f4ea:	xor    eax,0x565dea73
  40f4ef:	sbb    ecx,edi
  40f4f1:	pusha  
  40f4f2:	jnp    0x58c6902d
  40f4f8:	push   esi
  40f4f9:	nop
  40f4fa:	jmp    0x73e46813
  40f4ff:	pop    ds
  40f500:	inc    ecx
  40f501:	xor    eax,0xf9cf6b17
  40f506:	dec    ecx
  40f507:	adc    al,0x40
  40f509:	inc    ebx
  40f50a:	mov    ebp,DWORD PTR [edx-0x56]
  40f50d:	mov    edi,0x75f6ba5f
  40f512:	iret   
  40f513:	jo     0x40f4f4
  40f515:	fwait
  40f516:	push   es
  40f517:	or     esp,DWORD PTR [ecx-0x3d9a5e91]
  40f51d:	stos   BYTE PTR es:[edi],al
  40f51e:	pusha  
  40f51f:	jno    0x40f4d1
  40f521:	dec    ebp
  40f522:	in     eax,dx
  40f523:	push   ss
  40f524:	adc    ch,BYTE PTR [ecx+0x6c2ad94f]
  40f52a:	sub    eax,0x4ea78e65
  40f52f:	cld    
  40f530:	or     al,0x24
  40f532:	or     BYTE PTR [ecx+0x28a75cc8],cl
  40f538:	jno    0x40f5a9
  40f53a:	loope  0x40f5b4
  40f53c:	and    DWORD PTR [edi],0x12cc71eb
  40f542:	jb     0x40f5a6
  40f544:	or     edi,esp
  40f546:	sub    eax,0xe9072cf7
  40f54b:	popa   
  40f54c:	sub    BYTE PTR [esi+0x103fd027],dl
  40f552:	xor    eax,0xc216b4ee
  40f557:	aam    0x67
  40f559:	jecxz  0x40f584
  40f55b:	loopne 0x40f5cf
  40f55d:	out    dx,al
  40f55e:	(bad)  [eax]
  40f560:	inc    ebx
  40f561:	pop    ebp
  40f562:	and    eax,0xca008559
  40f567:	(bad)  
  40f568:	push   ss
  40f569:	jmp    0x40f50c
  40f56b:	ins    BYTE PTR es:[edi],dx
  40f56c:	clc    
  40f56d:	cmp    DWORD PTR [eax+0x2521e851],edx
  40f573:	iret   
  40f574:	or     BYTE PTR [ebp-0x2f614a7d],cl
  40f57a:	dec    edx
  40f57b:	xchg   DWORD PTR [eax-0x1],edx
  40f57e:	mov    dh,BYTE PTR [esi-0x8]
  40f581:	xchg   esp,ecx
  40f583:	push   ds
  40f584:	lea    ecx,[eax-0x23c1e781]
  40f58a:	jnp    0x40f603
  40f58c:	daa    
  40f58d:	pop    esp
  40f58e:	rcl    DWORD PTR [ecx],0xc9
  40f591:	aaa    
  40f592:	mov    bl,0x79
  40f594:	jp     0x40f591
  40f596:	xchg   esp,eax
  40f597:	mov    ecx,0x9ad96214
  40f59c:	ret    0xd924
  40f59f:	cmp    eax,0x174f5ce7
  40f5a4:	(bad)  
  40f5a6:	push   ebx
  40f5a7:	scas   al,BYTE PTR es:[edi]
  40f5a8:	mov    dh,al
  40f5aa:	or     al,0xa6
  40f5ac:	dec    eax
  40f5ad:	jmp    0x40f60f
  40f5af:	add    esi,DWORD PTR [edi]
  40f5b1:	(bad)  
  40f5b2:	mov    edi,DWORD PTR [edi+0x6242c0ae]
  40f5b8:	es xchg edi,eax
  40f5ba:	push   cs
  40f5bb:	ret    0xc638
  40f5be:	adc    BYTE PTR [ebx+0x328c893],bh
  40f5c4:	imul   ecx
  40f5c6:	sbb    bl,BYTE PTR ds:0x28223126
  40f5cc:	out    dx,eax
  40f5cd:	(bad)  
  40f5cf:	push   edi
  40f5d0:	jo     0x40f616
  40f5d2:	mov    edx,0xbecd7a58
  40f5d7:	or     bl,ah
  40f5d9:	xor    eax,0xf5f3f981
  40f5de:	ins    BYTE PTR es:[edi],dx
  40f5df:	data16 hlt 
  40f5e1:	cld    
  40f5e2:	aad    0x76
  40f5e4:	test   al,0x4b
  40f5e6:	adc    eax,0x1da6d9e5
  40f5eb:	add    bh,ch
  40f5ed:	das    
  40f5ee:	mov    bl,0x73
  40f5f0:	mov    edi,0xcca3325d
  40f5f5:	adc    eax,0x7f4ff24e
  40f5fa:	mov    ebp,0x8de2a3a3
  40f5ff:	push   ds
  40f600:	pusha  
  40f601:	inc    ebx
  40f602:	ins    DWORD PTR es:[edi],dx
  40f603:	mov    bl,0x33
  40f605:	fwait
  40f606:	packssdw mm7,QWORD PTR [esi+0x75]
  40f60a:	xor    al,BYTE PTR [ebx]
  40f60c:	jae    0x40f652
  40f60e:	inc    ebx
  40f60f:	mov    bh,0x75
  40f611:	sub    BYTE PTR [esi],ah
  40f613:	dec    esp
  40f614:	inc    eax
  40f615:	push   ebp
  40f616:	sbb    BYTE PTR [ebx+0x10f91dca],0xcf
  40f61d:	loope  0x40f5b5
  40f61f:	lods   eax,DWORD PTR ds:[esi]
  40f620:	xchg   ebx,eax
  40f621:	push   eax
  40f622:	jmp    0xd2b4:0x602a93ce
  40f629:	popa   
  40f62a:	and    bl,BYTE PTR [eax]
  40f62c:	es je  0x40f5b4
  40f62f:	sar    DWORD PTR [eax+0x9],1
  40f632:	sub    al,0x83
  40f634:	out    0x96,eax
  40f636:	stos   BYTE PTR es:[edi],al
  40f637:	add    al,0x93
  40f639:	jle    0x40f5bd
  40f63b:	jnp    0x40f60d
  40f63d:	cmp    bh,BYTE PTR [ebp-0x16e3eb9f]
  40f643:	(bad)  
  40f644:	xor    BYTE PTR [ebx-0x497626dc],cl
  40f64a:	mov    DWORD PTR [ecx-0x714f9a3b],ebp
  40f650:	popf   
  40f651:	mov    ah,0xbe
  40f653:	sbb    edi,edx
  40f655:	adc    eax,0x8d972b12
  40f65a:	gs xchg ebp,eax
  40f65c:	mov    ch,0xfd
  40f65e:	xchg   ebp,eax
  40f65f:	jb     0x40f6b7
  40f661:	xchg   BYTE PTR [eax],bl
  40f663:	cmp    BYTE PTR [bp+di],ah
  40f666:	push   esi
  40f667:	push   ebp
  40f668:	pop    edi
  40f669:	mov    ebx,0x4d8332b7
  40f66e:	test   DWORD PTR [eax+0x3],0x3ba589e4
  40f675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f676:	mov    ecx,0x2b7d877f
  40f67b:	jl     0x40f619
  40f67d:	enter  0xfc50,0x35
  40f681:	jo     0x40f6b8
  40f683:	test   dh,bl
  40f685:	popa   
  40f686:	shl    BYTE PTR [ecx-0x21],1
  40f689:	movlps xmm4,QWORD PTR [ecx-0x17]
  40f68d:	mov    ds:0xa0146daa,eax
  40f692:	ret    
  40f693:	mov    BYTE PTR ds:0x32380bfa,dl
  40f699:	mov    esp,0x9d9e628a
  40f69e:	cmp    DWORD PTR [ecx-0x205f610a],ebx
  40f6a4:	sbb    DWORD PTR [esi],0x71
  40f6a7:	jno    0x40f701
  40f6a9:	cmp    al,BYTE PTR [esi]
  40f6ab:	inc    ecx
  40f6ac:	ins    DWORD PTR es:[edi],dx
  40f6ad:	in     al,0xc4
  40f6af:	xchg   esp,eax
  40f6b0:	in     eax,dx
  40f6b1:	fldcw  WORD PTR [ebp+0xc]
  40f6b4:	push   cs
  40f6b5:	iret   
  40f6b6:	cdq    
  40f6b7:	jns    0x40f6bd
  40f6b9:	inc    ebx
  40f6ba:	fist   DWORD PTR [ecx-0x7e]
  40f6bd:	cmp    eax,0x5a83b36b
  40f6c2:	sbb    esi,0x7
  40f6c5:	(bad)  
  40f6c6:	fild   DWORD PTR [edi+esi*2-0x5e]
  40f6ca:	jp     0x40f699
  40f6cc:	aam    0x8a
  40f6ce:	fadd   DWORD PTR ds:0x32e8dd99
  40f6d4:	inc    ebp
  40f6d5:	add    BYTE PTR [esp+ebx*2],al
  40f6d8:	sbb    eax,0x66a8935a
  40f6dd:	pop    edi
  40f6de:	or     BYTE PTR [edx-0x14c819d7],cl
  40f6e4:	add    eax,0x15377dfa
  40f6e9:	(bad)  
  40f6ea:	popf   
  40f6eb:	out    dx,eax
  40f6ec:	cmp    ebp,DWORD PTR [ebp-0x16765ba1]
  40f6f2:	imul   esi,DWORD PTR [ecx],0xfffffff0
  40f6f5:	inc    esp
  40f6f6:	out    dx,eax
  40f6f7:	mov    edi,0xe5c499e1
  40f6fc:	rcr    BYTE PTR [ebp+eiz*4+0x28],cl
  40f700:	into   
  40f701:	sub    eax,0x71697aa9
  40f706:	ins    DWORD PTR es:[edi],dx
  40f707:	nop    DWORD PTR [ecx]
  40f70a:	cs clc 
  40f70c:	dec    ebp
  40f70d:	dec    ebp
  40f70e:	jecxz  0x40f71c
  40f710:	(bad)  
  40f711:	ss out dx,eax
  40f713:	jno    0x40f6f0
  40f715:	aam    0x24
  40f717:	das    
  40f718:	cmp    cl,BYTE PTR [edx+edi*1+0xae57260]
  40f71f:	xchg   edi,eax
  40f720:	push   ds
  40f721:	test   al,0x8e
  40f723:	retf   
  40f724:	jp     0x40f71f
  40f726:	stos   DWORD PTR es:[edi],eax
  40f727:	push   edx
  40f728:	xor    edi,esp
  40f72a:	mov    cl,0xd
  40f72c:	aas    
  40f72d:	or     dl,BYTE PTR [ebp+ebx*1-0x537db151]
  40f734:	outs   dx,BYTE PTR ds:[esi]
  40f735:	sub    DWORD PTR [ecx+0x1f],ebx
  40f738:	xor    al,0xc3
  40f73a:	sbb    esi,esi
  40f73c:	xchg   edi,eax
  40f73d:	xchg   ecx,eax
  40f73e:	imul   esi,ebp,0xfffffff9
  40f741:	or     DWORD PTR [ebx+esi*4-0x298c1d2d],eax
  40f748:	mov    bl,BYTE PTR [edx]
  40f74a:	pop    edx
  40f74b:	and    eax,DWORD PTR [esi+esi*4+0x70]
  40f74f:	leave  
  40f750:	push   0x9d0bf4c9
  40f755:	(bad)  
  40f757:	xor    BYTE PTR [edx-0x7b56f727],ch
  40f75d:	adc    ch,dl
  40f75f:	mov    al,0x83
  40f761:	cmp    eax,0xfcf602a8
  40f766:	adc    al,0xe2
  40f768:	adc    DWORD PTR es:[esi+edx*2],edi
  40f76c:	jl     0x40f791
  40f76e:	inc    esp
  40f76f:	add    BYTE PTR [ebp-0x47bc5d8a],al
  40f775:	aam    0x8b
  40f777:	cdq    
  40f778:	add    BYTE PTR [ebx-0x445d0b9a],bl
  40f77e:	popa   
  40f77f:	jbe    0x40f7c2
  40f781:	cmp    ebx,DWORD PTR [edi]
  40f783:	scas   eax,DWORD PTR es:[edi]
  40f784:	jecxz  0x40f743
  40f786:	lea    ebp,[edi]
  40f788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f789:	pop    esi
  40f78a:	or     BYTE PTR [ecx-0x39],ch
  40f78d:	sub    al,0xc7
  40f78f:	stos   BYTE PTR es:[edi],al
  40f790:	js     0x40f7e9
  40f792:	add    BYTE PTR [ebx],bh
  40f794:	add    DWORD PTR [edx],eax
  40f796:	call   0x6a67:0xbdc0c91e
  40f79d:	aam    0x77
  40f79f:	mov    edi,0xe0fd72d8
  40f7a4:	and    al,0x9d
  40f7a6:	jns    0x40f809
  40f7a8:	push   esi
  40f7a9:	inc    ebx
  40f7aa:	in     al,dx
  40f7ab:	dec    esp
  40f7ac:	push   ebx
  40f7ad:	adc    eax,DWORD PTR [edx-0x60]
  40f7b0:	push   ebp
  40f7b1:	and    DWORD PTR [ebx+ebp*4+0x5b956a],edx
  40f7b8:	popf   
  40f7b9:	adc    ch,ah
  40f7bb:	into   
  40f7bc:	dec    edi
  40f7bd:	shl    ebx,1
  40f7bf:	jbe    0x40f836
  40f7c1:	jl     0x40f7c2
  40f7c3:	stc    
  40f7c4:	jnp    0x40f75b
  40f7c6:	adc    ecx,DWORD PTR [esi+0xe]
  40f7c9:	rol    edi,0x5b
  40f7cc:	shl    BYTE PTR [edi+0x22],cl
  40f7cf:	sbb    esi,DWORD PTR [eax]
  40f7d1:	push   esi
  40f7d2:	dec    edi
  40f7d3:	inc    DWORD PTR [ebx]
  40f7d5:	push   ecx
  40f7d6:	imul   edi,DWORD PTR [ecx+0x67],0x52f6ce28
  40f7dd:	mov    dl,0xbb
  40f7df:	test   al,0x68
  40f7e1:	retf   0x9cf7
  40f7e4:	dec    ebx
  40f7e5:	mov    eax,DWORD PTR [ebp-0x1837f979]
  40f7eb:	(bad)  
  40f7ec:	lahf   
  40f7ed:	pop    es
  40f7ee:	fs mov ecx,0xb498d8de
  40f7f4:	jns    0x40f7c6
  40f7f6:	das    
  40f7f7:	cmp    DWORD PTR [ebp-0x60],esi
  40f7fa:	shl    bh,0x57
  40f7fd:	xor    al,0x14
  40f7ff:	push   ecx
  40f800:	int3   
  40f801:	push   DWORD PTR [edx]
  40f803:	mov    eax,0xdeae83f7
  40f808:	test   al,0x45
  40f80a:	test   al,0x61
  40f80c:	mov    BYTE PTR [ebx-0x55],bh
  40f80f:	add    al,0x2a
  40f811:	jle    0x40f872
  40f813:	pop    eax
  40f814:	or     dh,dh
  40f816:	dec    esi
  40f817:	in     eax,dx
  40f818:	sbb    al,0x17
  40f81a:	in     al,0xd6
  40f81c:	pop    edi
  40f81d:	unpcklps xmm0,xmm3
  40f820:	jbe    0x40f84c
  40f822:	std    
  40f823:	das    
  40f824:	lods   al,BYTE PTR ds:[esi]
  40f825:	mov    ebx,0x2fe0a32e
  40f82a:	jns    0x40f87e
  40f82c:	test   BYTE PTR [esi+0x26],dh
  40f82f:	out    0x9,eax
  40f831:	in     eax,dx
  40f832:	test   DWORD PTR [ecx],ebp
  40f834:	jl     0x40f81b
  40f836:	jne    0x40f7f1
  40f838:	in     eax,0x2f
  40f83a:	cmp    bh,BYTE PTR [ebx-0x27578cac]
  40f840:	push   0x66
  40f842:	push   ss
  40f843:	clc    
  40f844:	pop    ebx
  40f845:	inc    esi
  40f846:	ror    BYTE PTR [ecx+0x12],cl
  40f849:	push   0x3d
  40f84b:	mov    BYTE PTR [edi-0x1dd9d51e],bl
  40f851:	mov    ebp,ds
  40f853:	sbb    al,BYTE PTR [edx+eiz*8+0x793633a]
  40f85a:	loop   0x40f825
  40f85c:	cld    
  40f85d:	jno    0x40f8d9
  40f85f:	push   ebp
  40f860:	call   0xf195:0x2d50ee9f
  40f867:	enter  0xcbd2,0xc2
  40f86b:	xchg   ebx,eax
  40f86c:	arpl   WORD PTR [eax+0x71],cx
  40f86f:	div    edx
  40f871:	fldcw  WORD PTR [esi]
  40f873:	add    DWORD PTR [ecx+0x2dbc780d],esi
  40f879:	loope  0x40f8aa
  40f87b:	into   
  40f87c:	mov    eax,ds:0xe93497a5
  40f881:	fstp   QWORD PTR [esi-0x30d536c4]
  40f887:	cdq    
  40f888:	xlat   BYTE PTR ds:[ebx]
  40f889:	dec    esp
  40f88a:	cmp    DWORD PTR [ebp-0x15],0x8c7f9c82
  40f891:	jns    0x40f888
  40f893:	rcl    DWORD PTR [eax+0x5eff17a3],1
  40f899:	or     esp,DWORD PTR [ecx]
  40f89b:	pop    esp
  40f89c:	sub    cl,BYTE PTR [edx]
  40f89e:	(bad)  
  40f89f:	fidiv  DWORD PTR [esi-0x77971c5e]
  40f8a5:	pushf  
  40f8a6:	mov    BYTE PTR [eax],dh
  40f8a8:	and    eax,0x862a89fb
  40f8ad:	xchg   esi,eax
  40f8ae:	cmp    DWORD PTR [edx-0x473b4cd6],esp
  40f8b4:	inc    ebp
  40f8b5:	mov    WORD PTR [ecx-0x6d],ds
  40f8b8:	leave  
  40f8b9:	aaa    
  40f8ba:	outs   dx,DWORD PTR ds:[esi]
  40f8bb:	lea    esp,[ebx+0x1c]
  40f8be:	mov    ?,WORD PTR [ebx]
  40f8c0:	fsubr  DWORD PTR [ecx]
  40f8c2:	xlat   BYTE PTR ds:[ebx]
  40f8c3:	mov    fs,WORD PTR [ecx+0x2e]
  40f8c6:	not    BYTE PTR [esp+ebx*1+0x782e4d70]
  40f8cd:	fdivp  st(4),st
  40f8cf:	xchg   BYTE PTR [ecx-0xfaddad7],ch
  40f8d5:	sar    BYTE PTR [edx-0x5c],0x44
  40f8d9:	pop    ebx
  40f8da:	loop   0x40f898
  40f8dc:	test   al,0x33
  40f8de:	loop   0x40f94e
  40f8e0:	and    eax,0x8824562e
  40f8e5:	pop    ds
  40f8e6:	or     ebx,DWORD PTR [edx+0x5baedac6]
  40f8ec:	pushf  
  40f8ed:	jmp    0x40f93e
  40f8ef:	mov    esi,0x7aff94f7
  40f8f4:	call   0x2e4689c6
  40f8f9:	stos   DWORD PTR es:[edi],eax
  40f8fa:	adc    al,0xbc
  40f8fc:	mov    edi,0x5ee7d164
  40f901:	sbb    al,0x6e
  40f903:	les    eax,FWORD PTR [eax]
  40f905:	das    
  40f906:	lahf   
  40f907:	shl    DWORD PTR [ebp-0x2c3801fc],0xc5
  40f90e:	cmp    esi,edi
  40f910:	mov    ds,WORD PTR [edi+0x7d]
  40f913:	or     ecx,DWORD PTR [edi-0xe]
  40f916:	inc    ah
  40f918:	(bad)  
  40f919:	mov    ecx,0x12296665
  40f91e:	sub    ebp,ebp
  40f920:	pop    es
  40f921:	mov    ebx,0xad64a72f
  40f926:	sbb    bh,BYTE PTR [ebx-0x60667c2b]
  40f92c:	and    edx,DWORD PTR ss:[edx+0x4c983d03]
  40f933:	jg     0x40f94e
  40f935:	pop    es
  40f936:	sub    DWORD PTR [esi],esi
  40f938:	outs   dx,DWORD PTR ds:[esi]
  40f939:	xchg   edx,eax
  40f93a:	push   0x4
  40f93c:	lahf   
  40f93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f93e:	xchg   edi,eax
  40f93f:	jbe    0x40f931
  40f941:	xor    DWORD PTR [edx+eax*4],eax
  40f944:	repz and DWORD PTR [ebp-0x30],edx
  40f948:	outs   dx,DWORD PTR ds:[esi]
  40f949:	fwait
  40f94a:	xor    al,0x11
  40f94c:	ret    0x41b3
  40f94f:	xor    esp,DWORD PTR [esi-0x314f16d7]
  40f955:	aam    0xd9
  40f957:	sub    eax,0xcc45bf91
  40f95c:	mov    dl,0x49
  40f95e:	sti    
  40f95f:	push   0xdaee88b1
  40f964:	mov    ebp,ecx
  40f966:	jb     0x40f9e0
  40f968:	pop    edi
  40f969:	adc    bl,BYTE PTR [esi+0x3]
  40f96c:	sahf   
  40f96d:	hlt    
  40f96e:	mov    bl,0x3
  40f970:	xor    esi,DWORD PTR [eax-0x28]
  40f973:	xchg   ecx,eax
  40f974:	or     eax,0x39e59e16
  40f979:	inc    edi
  40f97a:	and    al,0x5a
  40f97c:	mov    DWORD PTR ds:0x9fb87e02,ebx
  40f982:	imul   ebp,DWORD PTR [edx+0x473f8d00],0x68ce44cd
  40f98c:	and    DWORD PTR [edx-0x7bdc2d4],eax
  40f992:	sub    DWORD PTR [esi+0x3f015b0c],esp
  40f998:	inc    edx
  40f999:	repz or ecx,esi
  40f99c:	xor    eax,0x75feb976
  40f9a1:	into   
  40f9a2:	test   eax,0x88bec3e7
  40f9a7:	inc    eax
  40f9a8:	rol    BYTE PTR ds:0x6c300c58,1
  40f9ae:	int    0x6
  40f9b0:	dec    edi
  40f9b1:	pop    esi
  40f9b2:	xlat   BYTE PTR ds:[ebx]
  40f9b3:	cmc    
  40f9b4:	cmp    ebx,DWORD PTR [esi+0x7d]
  40f9b7:	mov    ds:0x23c682b2,eax
  40f9bc:	cmp    bh,BYTE PTR [edx+0x5c]
  40f9bf:	mul    BYTE PTR [edx-0x3a1340e9]
  40f9c5:	dec    ebx
  40f9c6:	hlt    
  40f9c7:	(bad)  
  40f9c9:	xchg   ecx,eax
  40f9ca:	jmp    0x5c5cd6c2
  40f9cf:	or     DWORD PTR [esi],0xf581ba75
  40f9d5:	mov    dh,0xa2
  40f9d7:	lods   al,BYTE PTR ds:[esi]
  40f9d8:	adc    BYTE PTR [ebx],dl
  40f9da:	push   esp
  40f9db:	jmp    0x4545caa2
  40f9e0:	mov    bh,0xac
  40f9e2:	mov    BYTE PTR [edi-0x72362a5e],bl
  40f9e8:	cmp    eax,0x2618190a
  40f9ed:	fimul  WORD PTR [ebp-0x5eb1dd9f]
  40f9f3:	jg     0x40f9b6
  40f9f5:	add    edi,DWORD PTR [eax-0x7a]
  40f9f8:	mov    bl,0xd2
  40f9fa:	js     0x40f9ff
  40f9fc:	mov    ds:0x1b98017c,al
  40fa01:	stos   BYTE PTR es:[edi],al
  40fa02:	stos   DWORD PTR es:[edi],eax
  40fa03:	cwde   
  40fa04:	mov    dl,0x41
  40fa06:	sbb    BYTE PTR [edx+0x511a1822],bh
  40fa0c:	sbb    BYTE PTR [ebp+ecx*2-0x477b821c],dl
  40fa13:	out    0x26,al
  40fa15:	fwait
  40fa16:	call   0xc486:0x5c3ca73
  40fa1d:	pop    edx
  40fa1e:	adc    al,0xa2
  40fa20:	fucom  st(4)
  40fa22:	xchg   ebp,eax
  40fa23:	ret    
  40fa24:	test   BYTE PTR [edx],bl
  40fa26:	xor    eax,DWORD PTR [ebx]
  40fa28:	pop    esi
  40fa29:	mov    ah,0x5f
  40fa2b:	xor    BYTE PTR [edx],bl
  40fa2d:	loopne 0x40fa52
  40fa2f:	into   
  40fa30:	xlat   BYTE PTR ds:[ebx]
  40fa31:	mov    bh,0x11
  40fa33:	aam    0x14
  40fa35:	add    ah,BYTE PTR [ebp+eiz*4-0x673a27ce]
  40fa3c:	loopne 0x40fa90
  40fa3e:	ins    DWORD PTR es:[edi],dx
  40fa3f:	test   eax,0x7a6f97cb
  40fa44:	jmp    0x827f:0xd6d768a5
  40fa4b:	mov    ebx,0xa2048399
  40fa50:	mov    eax,ds:0xea77c597
  40fa55:	dec    edi
  40fa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa57:	in     eax,dx
  40fa58:	adc    DWORD PTR [ecx-0x25],edi
  40fa5b:	shr    DWORD PTR [esi],cl
  40fa5d:	jle    0x40fab7
  40fa5f:	cmp    eax,0x24aef6e1
  40fa64:	fs jg  0x40f9ed
  40fa67:	out    dx,al
  40fa68:	sub    al,0x2f
  40fa6a:	sub    eax,0x65f3c305
  40fa6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa70:	dec    esi
  40fa71:	mov    ?,WORD PTR [ebx]
  40fa73:	stc    
  40fa74:	and    eax,0x223a3f41
  40fa79:	mov    al,ds:0x3b0036c3
  40fa7e:	or     BYTE PTR [ebp+0x70ee0f73],bl
  40fa84:	push   0x7dbb34f1
  40fa89:	sub    ah,BYTE PTR [esi+0x8045450]
  40fa8f:	jmp    0x2d93:0x8465b030
  40fa96:	icebp  
  40fa97:	stos   DWORD PTR es:[edi],eax
  40fa98:	in     eax,0x33
  40fa9a:	or     DWORD PTR [edx+0x4a],edi
  40fa9d:	push   ecx
  40fa9e:	fmul   DWORD PTR [eax]
  40faa0:	(bad)  
  40faa1:	sub    DWORD PTR [edi+0x10],ebp
  40faa4:	icebp  
  40faa5:	fisub  DWORD PTR [edx+0x20]
  40faa8:	pop    esp
  40faa9:	inc    ebx
  40faaa:	lds    ecx,FWORD PTR [ecx+0x7349d15a]
  40fab0:	mov    fs,WORD PTR [edx-0x75334f02]
  40fab6:	ins    DWORD PTR es:[edi],dx
  40fab7:	mov    eax,0xcaf49baa
  40fabc:	cdq    
  40fabd:	xchg   edi,eax
  40fabe:	addr16 jg 0x40facb
  40fac1:	nop
  40fac2:	imul   esi,DWORD PTR [ecx-0x7f644442],0x43
  40fac9:	sbb    al,0x9e
  40facb:	dec    edx
  40facc:	(bad)  
  40face:	aaa    
  40facf:	sub    ch,BYTE PTR [edi+0x64857bae]
  40fad5:	fisttp DWORD PTR [eax]
  40fad7:	test   ebx,0x24c3b538
  40fadd:	pop    ebx
  40fade:	and    eax,0xcc4b9273
  40fae3:	or     bl,BYTE PTR [edx]
  40fae5:	jns    0x40fb28
  40fae7:	push   ebp
  40fae8:	mov    edi,0x70ae694c
  40faed:	adc    ch,BYTE PTR [esi-0x4]
  40faf0:	je     0x40fb32
  40faf2:	cmc    
  40faf3:	jae    0x40fab9
  40faf5:	mov    al,ds:0xc4936f3f
  40fafa:	stc    
  40fafb:	and    DWORD PTR [edx+eax*8-0xe],0x3589e5ab
  40fb03:	pop    ebx
  40fb04:	out    0xc0,eax
  40fb06:	clc    
  40fb07:	fimul  WORD PTR [edx+0xb301e48]
  40fb0d:	leave  
  40fb0e:	je     0x40fb26
  40fb10:	ja     0x40fb1b
  40fb12:	(bad)  
  40fb13:	sbb    DWORD PTR [eax],ecx
  40fb15:	mov    BYTE PTR [ecx+0x1c],0x93
  40fb19:	dec    edx
  40fb1a:	inc    ebp
  40fb1b:	js     0x40fb8c
  40fb1d:	pushf  
  40fb1e:	mov    esi,0xdaa765e5
  40fb23:	pop    ecx
  40fb24:	mov    WORD PTR [esi+0x47c8b53c],gs
  40fb2a:	xchg   edi,eax
  40fb2b:	inc    ecx
  40fb2c:	push   esi
  40fb2d:	ja     0x40fab7
  40fb2f:	sub    DWORD PTR [ebx],ebx
  40fb31:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb34:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fb38:	xor    DWORD PTR ds:0x42a16f,0x6377
  40fb42:	xor    ecx,0x8a96
  40fb48:	sub    DWORD PTR ds:0x42a16f,0x7d05
  40fb52:	add    ecx,edi
  40fb54:	mov    DWORD PTR ds:0x42a1a7,edi
  40fb5a:	mov    edi,DWORD PTR [ebp-0xc]
  40fb5d:	inc    DWORD PTR ds:0x42a12b
  40fb63:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fb6a:	inc    edx
  40fb6b:	mov    ecx,DWORD PTR [ebp-0x10]
  40fb6e:	mov    DWORD PTR ds:0x42a1af,0x4619
  40fb78:	cmp    edx,ecx
  40fb7a:	jne    0x40d759
  40fb80:	mov    ecx,DWORD PTR [ebp-0x18]
  40fb83:	and    DWORD PTR ds:0x42a1a7,0x0
  40fb8d:	jmp    0x40fb9f
  40fb92:	mov    edi,DWORD PTR ds:0x42a1a7
  40fb98:	inc    edi
  40fb99:	mov    DWORD PTR ds:0x42a1a7,edi
  40fb9f:	cmp    DWORD PTR ds:0x42a1a7,0x1c
  40fba6:	jae    0x40fbd1
  40fbac:	cmp    DWORD PTR ds:0x42a1a7,0x20
  40fbb3:	jg     0x40fbd1
  40fbb9:	jmp    0x40fbcc
  40fbbe:	push   0x42a1d3
  40fbc3:	push   DWORD PTR [ebp-0x10]
  40fbc6:	call   DWORD PTR ds:0x42a2d3
  40fbcc:	jmp    0x40fb92
  40fbd1:	mov    edx,DWORD PTR [ebp+0x10]
  40fbd4:	or     edi,0x72f1
  40fbda:	xor    ecx,eax
  40fbdc:	add    ecx,esi
  40fbde:	mov    DWORD PTR [edx],ecx
  40fbe0:	adc    DWORD PTR ds:0x42a17b,0xfda
  40fbea:	mov    ecx,DWORD PTR [ebp-0x18]
  40fbed:	and    DWORD PTR ds:0x42a127,ecx
  40fbf3:	xor    ecx,eax
  40fbf5:	add    ecx,esi
  40fbf7:	mov    DWORD PTR [ebp-0xc],ecx
  40fbfa:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fc01:	mov    ecx,DWORD PTR ds:0x42a12f
  40fc07:	xor    ecx,DWORD PTR ds:0x42a13b
  40fc0d:	mov    DWORD PTR ds:0x42a12f,ecx
  40fc13:	mov    DWORD PTR [ebp-0x14],0xf89c8589
  40fc1a:	and    edi,DWORD PTR ds:0x42a13f
  40fc20:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fc27:	and    DWORD PTR ds:0x42a13b,0x0
  40fc31:	mov    ecx,DWORD PTR ds:0x42a13b
  40fc37:	inc    ecx
  40fc38:	mov    DWORD PTR ds:0x42a13b,ecx
  40fc3e:	cmp    DWORD PTR ds:0x42a13b,0x24
  40fc45:	jbe    0x40fc63
  40fc4b:	jmp    0x40fc56
  40fc50:	call   DWORD PTR ds:0x42a293
  40fc56:	cmp    DWORD PTR ds:0x42a13b,0x15
  40fc5d:	jb     0x40fc31
  40fc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc66:	sbb    DWORD PTR ds:0x42a1bb,ebx
  40fc6c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc6f:	and    edi,DWORD PTR ds:0x42a17f
  40fc75:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc78:	adc    edi,0x3f37
  40fc7e:	xor    ecx,eax
  40fc80:	xor    DWORD PTR ds:0x42a18b,edx
  40fc86:	add    ecx,esi
  40fc88:	mov    edi,0x2513
  40fc8d:	mov    ecx,0x242ebcd
  40fc92:	mov    edi,0xf641bcc
  40fc97:	mov    DWORD PTR ds:0x42a163,0x3833
  40fca1:	je     0x41b544
  40fca7:	movzx  edx,WORD PTR ds:0x42a143
  40fcae:	or     DWORD PTR ds:0x42a1bb,edx
  40fcb4:	mov    edx,DWORD PTR [ebp+0x8]
  40fcb7:	or     DWORD PTR ds:0x42a12b,edi
  40fcbd:	mov    ebx,DWORD PTR [ebp-0x8]
  40fcc0:	adc    DWORD PTR ds:0x42a18f,0x42a177
  40fcca:	xor    edx,eax
  40fccc:	mov    DWORD PTR ds:0x42a1ab,0x2aa1
  40fcd6:	xor    ebx,eax
  40fcd8:	sub    edx,ebx
  40fcda:	neg    ebx
  40fcdc:	sub    edx,esi
  40fcde:	adc    ebx,DWORD PTR ds:0x42a16b
  40fce4:	xor    edx,eax
  40fce6:	xor    ebx,ebx
  40fce8:	or     ebx,DWORD PTR ds:0x42a187
  40fcee:	sub    DWORD PTR ds:0x42a147,ebx
  40fcf4:	mov    DWORD PTR [ebp+0x8],edx
  40fcf7:	mov    edx,DWORD PTR [ebp+0x8]
  40fcfa:	and    DWORD PTR ds:0x42a13f,ebx
  40fd00:	mov    ebx,DWORD PTR [ebp-0x58]
  40fd03:	sub    DWORD PTR ds:0x42a17f,0x42a1b3
  40fd0d:	add    edx,0x5708fa
  40fd13:	sub    DWORD PTR ds:0x42a16f,0x2df9
  40fd1d:	imul   edx,ebx
  40fd20:	and    DWORD PTR ds:0x42a14f,0x0
  40fd2a:	jmp    0x40fd3c
  40fd2f:	mov    ebx,DWORD PTR ds:0x42a14f
  40fd35:	inc    ebx
  40fd36:	mov    DWORD PTR ds:0x42a14f,ebx
  40fd3c:	cmp    DWORD PTR ds:0x42a14f,0x1e
  40fd43:	jae    0x40fd94
  40fd49:	cmp    DWORD PTR ds:0x42a14f,0x9
  40fd50:	jbe    0x40fd94
  40fd56:	jmp    0x40fd73
  40fd5b:	push   0x5a7a
  40fd60:	push   DWORD PTR [ebp-0x1c]
  40fd63:	push   0x4290f0
  40fd68:	push   0x400000
  40fd6d:	call   DWORD PTR ds:0x42a297
  40fd73:	cmp    DWORD PTR ds:0x42a14f,0x8
  40fd7a:	jne    0x40fd8f
  40fd80:	xor    ebx,ebx
  40fd82:	or     ebx,DWORD PTR ds:0x42a14f
  40fd88:	inc    ebx
  40fd89:	mov    DWORD PTR ds:0x42a14f,ebx
  40fd8f:	jmp    0x40fd2f
  40fd94:	mov    DWORD PTR [ebp-0x58],edx
  40fd97:	mov    DWORD PTR ds:0x42a1a3,0x13
  40fda1:	cmp    DWORD PTR ds:0x42a1a3,0x0
  40fda8:	je     0x40fdd8
  40fdae:	cmp    DWORD PTR ds:0x42a1a3,0x14
  40fdb5:	jb     0x40fdd8
  40fdbb:	jmp    0x40fdc6
  40fdc0:	call   DWORD PTR ds:0x42a29b
  40fdc6:	mov    edx,DWORD PTR ds:0x42a1a3
  40fdcc:	dec    edx
  40fdcd:	mov    DWORD PTR ds:0x42a1a3,edx
  40fdd3:	jmp    0x40fda1
  40fdd8:	mov    edx,DWORD PTR [ebp+0x8]
  40fddb:	xor    DWORD PTR ds:0x42a167,0x6c23
  40fde5:	mov    ebx,DWORD PTR [ebp-0x54]
  40fde8:	sbb    DWORD PTR ds:0x42a183,0x57b9
  40fdf2:	add    edx,0x64f89c
  40fdf8:	or     edx,ebx
  40fdfa:	movzx  ebx,WORD PTR ds:0x42a187
  40fe01:	sbb    DWORD PTR ds:0x42a1b3,ebx
  40fe07:	mov    DWORD PTR [ebp-0x54],edx
  40fe0a:	mov    edx,DWORD PTR [ebp+0x8]
  40fe0d:	and    DWORD PTR ds:0x42a1af,0x0
  40fe17:	xor    ebx,ebx
  40fe19:	xor    ebx,DWORD PTR ds:0x42a1af
  40fe1f:	inc    ebx
  40fe20:	mov    DWORD PTR ds:0x42a1af,ebx
  40fe26:	cmp    DWORD PTR ds:0x42a1af,0x7
  40fe2d:	jge    0x40fe75
  40fe33:	jmp    0x40fe4e
  40fe38:	push   0x45bb
  40fe3d:	push   DWORD PTR [ebp-0x20]
  40fe40:	push   0x42923d
  40fe45:	push   DWORD PTR [ebp-0x18]
  40fe48:	call   DWORD PTR ds:0x42a2a3
  40fe4e:	cmp    DWORD PTR ds:0x42a1af,0x6
  40fe55:	jne    0x40fe68
  40fe5b:	mov    ebx,DWORD PTR ds:0x42a1af
  40fe61:	inc    ebx
  40fe62:	mov    DWORD PTR ds:0x42a1af,ebx
  40fe68:	cmp    DWORD PTR ds:0x42a1af,0x14
  40fe6f:	jb     0x40fe17
  40fe75:	mov    ebx,DWORD PTR [ebp-0x50]
  40fe78:	add    edx,ecx
  40fe7a:	adc    DWORD PTR ds:0x42a167,0x1f0e
  40fe84:	xor    edx,ebx
  40fe86:	and    DWORD PTR ds:0x42a17b,0x42a1a7
  40fe90:	mov    DWORD PTR [ebp-0x50],edx
  40fe93:	and    DWORD PTR ds:0x42a1a3,0x1c1b
  40fe9d:	mov    edx,DWORD PTR [ebp+0x8]
  40fea0:	mov    ebx,DWORD PTR [ebp-0x4c]
  40fea3:	sbb    DWORD PTR ds:0x42a177,0x5e0b
  40fead:	add    edx,edi
  40feaf:	and    edx,ebx
  40feb1:	xor    DWORD PTR ds:0x42a12f,ecx
  40feb7:	mov    DWORD PTR [ebp-0x4c],edx
  40feba:	and    DWORD PTR ds:0x42a16f,0x0
  40fec4:	jmp    0x40fed6
  40fec9:	mov    edx,DWORD PTR ds:0x42a16f
  40fecf:	inc    edx
  40fed0:	mov    DWORD PTR ds:0x42a16f,edx
  40fed6:	cmp    DWORD PTR ds:0x42a16f,0x1b
  40fedd:	jae    0x40ff00
  40fee3:	cmp    DWORD PTR ds:0x42a16f,0x1e
  40feea:	jge    0x40ff00
  40fef0:	jmp    0x40fefb
  40fef5:	call   DWORD PTR ds:0x42a2a7
  40fefb:	jmp    0x40fec9
  40ff00:	mov    edx,DWORD PTR [ebp+0x8]
  40ff03:	mov    ebx,DWORD PTR [ebp-0x48]
  40ff06:	not    DWORD PTR ds:0x42a183
  40ff0c:	lea    edx,[ebx+edx*1+0x241fcdf]
  40ff13:	add    ebx,DWORD PTR ds:0x42a1c7
  40ff19:	mov    DWORD PTR [ebp-0x48],edx
  40ff1c:	mov    DWORD PTR ds:0x42a19b,0x1d36
  40ff26:	mov    edx,DWORD PTR [ebp+0x8]
  40ff29:	mov    ebx,0xfa5e1530
  40ff2e:	sub    ebx,edx
  40ff30:	mov    DWORD PTR ds:0x42a1bf,0x1f
  40ff3a:	cmp    DWORD PTR ds:0x42a1bf,0x0
  40ff41:	je     0x40ff82
  40ff47:	cmp    DWORD PTR ds:0x42a1bf,0x22
  40ff4e:	jge    0x40ff82
  40ff54:	jmp    0x40ff6e
  40ff59:	push   0x84e5
  40ff5e:	push   0x42a137
  40ff63:	push   0x6ce8
  40ff68:	call   DWORD PTR ds:0x42a2ab
  40ff6e:	xor    edx,edx
  40ff70:	or     edx,DWORD PTR ds:0x42a1bf
  40ff76:	dec    edx
  40ff77:	mov    DWORD PTR ds:0x42a1bf,edx
  40ff7d:	jmp    0x40ff3a
  40ff82:	add    ebx,DWORD PTR [ebp-0x44]
  40ff85:	mov    DWORD PTR [ebp-0x44],ebx
  40ff88:	mov    edx,DWORD PTR [ebp+0x8]
  40ff8b:	adc    DWORD PTR ds:0x42a16b,0x42a12f
  40ff95:	xor    edx,eax
  40ff97:	adc    DWORD PTR ds:0x42a163,0x5ee0
  40ffa1:	add    edx,esi
  40ffa3:	jne    0x40fca7
  40ffa9:	mov    DWORD PTR ds:0x42a147,0x481d
  40ffb3:	jmp    0x41b544
  40ffb8:	mov    edx,DWORD PTR [ebp-0xc]
  40ffbb:	adc    DWORD PTR ds:0x42a137,edi
  40ffc1:	sub    edx,esi
  40ffc3:	xor    ebx,ebx
  40ffc5:	or     ebx,DWORD PTR ds:0x42a197
  40ffcb:	or     ebx,DWORD PTR ds:0x42a137
  40ffd1:	mov    DWORD PTR ds:0x42a197,ebx
  40ffd7:	xor    edx,eax
  40ffd9:	mov    DWORD PTR [ebp-0x5c],edx
  40ffdc:	mov    edx,DWORD PTR [ebp-0x10]
  40ffdf:	sbb    DWORD PTR ds:0x42a143,0x42a15b
  40ffe9:	mov    ebx,DWORD PTR [ebp-0x8]
  40ffec:	sub    DWORD PTR ds:0x42a193,0x2e82
  40fff6:	xor    edx,eax
  40fff8:	xor    ebx,eax
  40fffa:	mov    DWORD PTR ds:0x42a177,0x1dc1
  410004:	sub    edx,ebx
  410006:	and    DWORD PTR ds:0x42a1c3,0x42a17b
  410010:	sub    edx,esi
  410012:	xor    edx,eax
  410014:	mov    DWORD PTR ds:0x42a18b,0x3cb9
  41001e:	mov    DWORD PTR [ebp-0x10],edx
  410021:	mov    edx,DWORD PTR [ebp-0x14]
  410024:	mov    DWORD PTR [ebp+0x8],edx
  410027:	jmp    0x412514
  41002c:	mov    edx,DWORD PTR [ebp+0x8]
  41002f:	mov    ebx,DWORD PTR [ebp-0x8]
  410032:	xor    DWORD PTR ds:0x42a1cb,0x42a163
  41003c:	xor    edx,eax
  41003e:	adc    DWORD PTR ds:0x42a16b,0x42a177
  410048:	xor    ebx,eax
  41004a:	sbb    DWORD PTR ds:0x42a1c3,0x42a1af
  410054:	sub    edx,ebx
  410056:	or     DWORD PTR ds:0x42a1af,edx
  41005c:	sub    edx,esi
  41005e:	and    DWORD PTR ds:0x42a133,0x0
  410068:	xor    ebx,ebx
  41006a:	xor    ebx,DWORD PTR ds:0x42a133
  410070:	inc    ebx
  410071:	mov    DWORD PTR ds:0x42a133,ebx
  410077:	cmp    DWORD PTR ds:0x42a133,0x5
  41007e:	jbe    0x4100c6
  410084:	jmp    0x41009d
  410089:	push   DWORD PTR [ebp-0x14]
  41008c:	push   DWORD PTR [ebp-0x24]
  41008f:	push   0x52a1
  410094:	push   DWORD PTR [ebp-0x20]
  410097:	call   DWORD PTR ds:0x42a2af
  41009d:	cmp    DWORD PTR ds:0x42a133,0x4
  4100a4:	jne    0x4100b9
  4100aa:	xor    ebx,ebx
  4100ac:	or     ebx,DWORD PTR ds:0x42a133
  4100b2:	inc    ebx
  4100b3:	mov    DWORD PTR ds:0x42a133,ebx
  4100b9:	cmp    DWORD PTR ds:0x42a133,0x16
  4100c0:	jb     0x410068
  4100c6:	xor    edx,eax
  4100c8:	and    DWORD PTR ds:0x42a1c3,0x0
  4100d2:	xor    ebx,ebx
  4100d4:	or     ebx,DWORD PTR ds:0x42a1c3
  4100da:	inc    ebx
  4100db:	mov    DWORD PTR ds:0x42a1c3,ebx
  4100e1:	cmp    DWORD PTR ds:0x42a1c3,0xb
  4100e8:	jbe    0x4124b4
  4100ee:	jmp    0x410108
  4100f3:	push   0x81d2
  4100f8:	push   0x1
  4100fa:	push   0x42a1a7
  4100ff:	push   DWORD PTR [ebp-0x14]
  410102:	call   DWORD PTR ds:0x42a2b3
  410108:	cmp    DWORD PTR ds:0x42a1c3,0xa
  41010f:	jne    0x410122
  410115:	mov    ebx,DWORD PTR ds:0x42a1c3
  41011b:	inc    ebx
  41011c:	mov    DWORD PTR ds:0x42a1c3,ebx
  410122:	cmp    DWORD PTR ds:0x42a1c3,0x18
  410129:	jb     0x4100d2
  41012f:	jmp    0x4124b4
  410134:	or     ah,BYTE PTR [ebp-0x5e]
  410137:	jns    0x4100be
  410139:	mov    ebp,0x52330581
  41013e:	test   al,0xcd
  410140:	xchg   edx,eax
  410141:	movntpd XMMWORD PTR [esi-0x52],xmm4
  410146:	jp     0x4101c2
  410148:	adc    bl,BYTE PTR [edi+0x7a]
  41014b:	jp     0x410173
  41014d:	jnp    0x410112
  41014f:	mov    edi,0x2556c908
  410154:	idiv   BYTE PTR ds:0x2bd7a714
  41015a:	pop    esp
  41015b:	(bad)  
  41015c:	lods   al,BYTE PTR ds:[esi]
  41015d:	dec    esp
  41015e:	lea    esi,[ebp+0x6f498aa3]
  410164:	inc    ebx
  410165:	ja     0x410183
  410167:	bound  eax,QWORD PTR [ecx]
  410169:	out    0xdc,eax
  41016b:	mov    bl,0x65
  41016d:	mov    dl,0x69
  41016f:	xchg   ebx,eax
  410170:	retf   
  410171:	loope  0x41018e
  410173:	rcl    edi,1
  410175:	jns    0x410180
  410177:	or     DWORD PTR [edi],esp
  410179:	in     al,0x32
  41017b:	xchg   esi,eax
  41017c:	int3   
  41017d:	in     eax,dx
  41017e:	push   edx
  41017f:	pusha  
  410180:	push   esp
  410181:	fdiv   QWORD PTR [ebx]
  410183:	imul   esi,ebp,0xb994a0bb
  410189:	loopne 0x410162
  41018b:	jo     0x4101d9
  41018d:	fisub  DWORD PTR [esi+0x7b]
  410190:	jp     0x4101ea
  410192:	sbb    al,0x6b
  410194:	add    al,0x3f
  410196:	add    edi,ebx
  410198:	mov    edx,0x505026b9
  41019d:	arpl   WORD PTR [ebx+0x1795cebc],bp
  4101a3:	das    
  4101a4:	test   DWORD PTR [ebx],0x8968898e
  4101aa:	sahf   
  4101ab:	addr16 jb 0x410204
  4101ae:	mov    ch,ch
  4101b0:	lock jo 0x4101e9
  4101b3:	fdiv   DWORD PTR [edx+0x416f38da]
  4101b9:	nop
  4101ba:	lods   al,BYTE PTR ds:[esi]
  4101bb:	loop   0x410197
  4101bd:	pop    ss
  4101be:	jbe    0x41018d
  4101c0:	jbe    0x410168
  4101c2:	out    0x87,al
  4101c4:	mov    fs,WORD PTR [edx]
  4101c6:	aaa    
  4101c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101c8:	and    al,0xd5
  4101ca:	(bad)
  4101ce:	sub    BYTE PTR [edi+0x3e],dh
  4101d1:	dec    ebp
  4101d2:	stc    
  4101d3:	jbe    0x4101d4
  4101d5:	and    esp,edx
  4101d7:	sub    dl,0x88
  4101da:	enter  0xfea4,0x60
  4101de:	jo     0x410193
  4101e0:	xor    eax,0xab957e2f
  4101e5:	scas   eax,DWORD PTR es:[edi]
  4101e6:	popa   
  4101e7:	xchg   edi,eax
  4101e8:	test   esi,ebx
  4101ea:	ret    
  4101eb:	jle    0x410218
  4101ed:	mov    ebp,0x26bb3d37
  4101f2:	leave  
  4101f3:	test   DWORD PTR [ecx],ebx
  4101f5:	test   DWORD PTR [ebx-0x3e6b29bb],esi
  4101fb:	fsubr  st,st(1)
  4101fd:	mov    cl,0xdb
  4101ff:	(bad)
  410202:	(bad)  
  410203:	and    eax,0x93ad01cf
  410208:	jns    0x4101fd
  41020a:	sbb    DWORD PTR [ecx],0x15da4315
  410210:	or     DWORD PTR [eax+esi*8+0x2384e631],eax
  410217:	shl    DWORD PTR [eax-0x7c],cl
  41021a:	xchg   DWORD PTR [esi+0x6b],edx
  41021d:	mov    ecx,0x20675c85
  410222:	dec    edi
  410223:	mov    ah,0xdd
  410225:	push   eax
  410226:	mov    dl,0xff
  410228:	lods   eax,DWORD PTR ds:[esi]
  410229:	jb     0x4101cb
  41022b:	dec    edx
  41022c:	sbb    al,0x7a
  41022e:	push   ds
  41022f:	(bad)  
  410230:	out    dx,eax
  410231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410232:	jnp    0x41029b
  410234:	or     BYTE PTR [edi-0x6c],bh
  410237:	xlat   BYTE PTR ds:[ebx]
  410238:	fist   WORD PTR ds:0xcb2e106e
  41023e:	pop    esi
  41023f:	ins    BYTE PTR es:[edi],dx
  410240:	or     BYTE PTR [edx+0x5179d9d6],0x30
  410247:	out    dx,al
  410248:	pop    esi
  410249:	cs jne 0x4101e6
  41024c:	imul   eax,DWORD PTR [esi*1-0x91b918f],0x2df3460
  410257:	xchg   esi,eax
  410258:	ret    
  410259:	jns    0x4102cd
  41025b:	(bad)  
  41025c:	cmc    
  41025d:	imul   edx,DWORD PTR [eax-0x527e88a4],0x26
  410264:	add    eax,0xd0725cf7
  410269:	fcomp  DWORD PTR [di+0x64ce]
  41026e:	in     al,dx
  41026f:	add    al,0x9b
  410271:	jecxz  0x410209
  410273:	test   eax,0xd4aee215
  410278:	adc    dh,dl
  41027a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41027b:	xchg   ebx,eax
  41027c:	je     0x4102a7
  41027e:	push   edi
  41027f:	fsub   DWORD PTR [ebx+eiz*2]
  410282:	scas   al,BYTE PTR es:[edi]
  410283:	inc    esp
  410284:	jno    0x410232
  410286:	stos   BYTE PTR es:[edi],al
  410287:	rol    bl,cl
  410289:	dec    edx
  41028a:	ret    
  41028b:	push   edx
  41028c:	adc    eax,0xb8f23f3e
  410291:	js     0x41024a
  410293:	lea    edi,[ecx+eax*1-0x26]
  410297:	dec    esi
  410298:	neg    DWORD PTR [edi+0x7208560c]
  41029e:	push   ebp
  4102a0:	neg    DWORD PTR [ebx]
  4102a2:	dec    edi
  4102a3:	push   cs
  4102a4:	jo     0x4102c2
  4102a6:	and    bh,0x62
  4102a9:	les    eax,FWORD PTR [ebx+0x288ecffb]
  4102af:	call   0x322ce9d5
  4102b4:	mov    al,0xd0
  4102b6:	push   esp
  4102b7:	inc    ebx
  4102b8:	xchg   ecx,eax
  4102b9:	aad    0x68
  4102bb:	mov    esp,0x88ed51be
  4102c0:	imul   ebx,eax,0x32
  4102c3:	add    eax,0x632b7465
  4102c8:	mov    edi,0x3654f321
  4102cd:	(bad)  
  4102ce:	call   0xf35e:0x7f85465a
  4102d5:	inc    edi
  4102d6:	call   0xe99dfcf0
  4102db:	cwde   
  4102dc:	repz xchg edx,eax
  4102de:	or     eax,0xa67a98ff
  4102e3:	bound  ebp,QWORD PTR [ebp-0x19]
  4102e6:	rcl    DWORD PTR ds:[ebx-0x72c1e637],cl
  4102ed:	inc    edi
  4102ee:	inc    esp
  4102ef:	jnp    0x4102e6
  4102f1:	jl     0x410365
  4102f3:	pop    es
  4102f4:	jb     0x41036a
  4102f6:	mov    ebp,0x16268c64
  4102fb:	call   0x50e0:0xf9951f40
  410302:	push   esi
  410303:	inc    edi
  410304:	push   ds
  410305:	in     eax,0x94
  410307:	sbb    DWORD PTR [ecx],edi
  410309:	out    dx,al
  41030a:	jno    0x4102c2
  41030c:	cli    
  41030d:	dec    ebx
  41030e:	bound  ebx,QWORD PTR [ebp+0x3863d9b4]
  410314:	push   DWORD PTR [ebx]
  410316:	mov    ds:0x32066885,al
  41031b:	push   0x8a282719
  410320:	ret    0x7a72
  410323:	jae    0x410346
  410325:	xchg   BYTE PTR [esi-0x45f072ed],bl
  41032b:	jg     0x41031e
  41032d:	dec    esp
  41032e:	and    al,0x26
  410330:	xchg   edi,eax
  410331:	pop    esi
  410332:	fldenv [edi+0x7d]
  410335:	add    eax,DWORD PTR ds:0xc394f712
  41033b:	add    ah,BYTE PTR [esi-0x4422643a]
  410341:	push   ecx
  410342:	sbb    dl,BYTE PTR [edx+0x19]
  410345:	fmulp  st(4),st
  410347:	es ins BYTE PTR es:[edi],dx
  410349:	pop    esp
  41034a:	sti    
  41034b:	ss jns 0x41036e
  41034e:	jae    0x410397
  410350:	imul   ebx,DWORD PTR [edi+0x61ea6a5a],0xffffffbe
  410357:	mov    esp,0x9e3dcfa4
  41035c:	pop    edi
  41035d:	addr16 mov eax,0x33b294ff
  410363:	push   ebx
  410364:	arpl   WORD PTR [ebp+0x19e59a0],di
  41036a:	adc    DWORD PTR [esi+0x1e],esp
  41036d:	(bad)  [edx+0x10f702f8]
  410373:	(bad)  
  410374:	cmp    ah,BYTE PTR [ebx+edx*1-0x54]
  410378:	xchg   edi,eax
  410379:	sub    eax,DWORD PTR ds:[di+0x1cf9]
  41037f:	les    edi,FWORD PTR [ebx-0x1d]
  410382:	call   0x21d6:0x6e138959
  410389:	dec    ecx
  41038a:	jmp    0x39a0:0x6ed57d54
  410391:	fidivr DWORD PTR [eax-0x50ec41e9]
  410397:	mov    edi,0x37e4afb2
  41039c:	stos   DWORD PTR es:[edi],eax
  41039d:	sbb    edi,esi
  41039f:	adc    BYTE PTR ds:0x2fec7640,bl
  4103a5:	outs   dx,DWORD PTR ds:[esi]
  4103a6:	mov    cl,0xba
  4103a8:	add    DWORD PTR [edx+0x2c],0x41e8019
  4103af:	push   esi
  4103b0:	jb     0x410354
  4103b2:	push   ebx
  4103b3:	mov    esi,esi
  4103b5:	ja     0x4103fe
  4103b7:	push   0xffffff97
  4103b9:	test   al,0xfa
  4103bb:	ins    DWORD PTR es:[edi],dx
  4103bc:	or     BYTE PTR [esi],ch
  4103be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103bf:	xchg   ecx,eax
  4103c0:	adc    BYTE PTR [esi-0x7a],0x7b
  4103c4:	mov    esi,0x8dcfb903
  4103c9:	and    eax,DWORD PTR [ecx]
  4103cb:	adc    al,0x25
  4103cd:	enter  0xf433,0xb6
  4103d1:	test   al,0xe1
  4103d3:	shl    DWORD PTR [ebx],0xae
  4103d6:	mov    ebp,0xac2c244c
  4103db:	inc    edi
  4103dc:	(bad)  
  4103dd:	pop    ebx
  4103de:	iret   
  4103df:	and    eax,0x759560ee
  4103e4:	inc    ebx
  4103e5:	popf   
  4103e6:	imul   esp,DWORD PTR [esi+ecx*8+0x7c],0x41cba092
  4103ee:	pop    ss
  4103ef:	push   DWORD PTR [ecx+0x7dfb7491]
  4103f5:	mov    ds:0x8351b39a,al
  4103fa:	out    0xd6,al
  4103fc:	add    al,0x4f
  4103fe:	lods   eax,DWORD PTR ds:[esi]
  4103ff:	mov    ds:0x20589f35,eax
  410404:	in     al,dx
  410405:	popf   
  410406:	xor    esi,ecx
  410408:	setne  BYTE PTR [ebp-0x2ed67f92]
  41040f:	push   ebp
  410410:	xchg   edx,eax
  410411:	cdq    
  410412:	lock scas al,BYTE PTR es:[edi]
  410414:	jg     0x4103b6
  410416:	mov    esp,0x9dc4f7fb
  41041b:	(bad)  
  41041c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41041d:	(bad)  
  41041e:	aam    0xea
  410420:	sub    dh,BYTE PTR [esi]
  410422:	and    al,0xdf
  410424:	inc    eax
  410425:	jle    0x410418
  410427:	sti    
  410428:	sahf   
  410429:	pusha  
  41042a:	inc    ecx
  41042b:	aad    0xf0
  41042d:	xchg   ebx,eax
  41042e:	pop    ecx
  41042f:	sbb    ch,bh
  410431:	dec    ebx
  410432:	dec    ebp
  410433:	jno    0x41041b
  410435:	in     al,0xcc
  410437:	fcomp  QWORD PTR [edx+edx*8+0x5eb6f2d4]
  41043e:	mov    bl,0xea
  410440:	daa    
  410441:	ret    0xc2ad
  410444:	loopne 0x41044a
  410446:	push   cs
  410447:	mov    gs,WORD PTR [esi]
  410449:	mov    ch,0xf0
  41044b:	push   edi
  41044c:	retf   
  41044d:	imul   esi,DWORD PTR [ecx+eiz*8+0x45],0xe
  410452:	xor    BYTE PTR [ecx-0x12],0xa3
  410456:	jmp    0xd3c6:0xf613e4a1
  41045d:	sub    ebx,esp
  41045f:	pandn  mm0,QWORD PTR [edi]
  410462:	ins    DWORD PTR es:[edi],dx
  410463:	cmp    DWORD PTR [ecx],edx
  410465:	sbb    eax,0xf2986c40
  41046a:	xor    eax,DWORD PTR [ecx]
  41046c:	lahf   
  41046d:	or     ch,BYTE PTR [ebp+0x21b9cb00]
  410473:	push   ebp
  410474:	cld    
  410475:	pop    ebp
  410476:	cmp    eax,0xd50708c5
  41047b:	pop    es
  41047c:	out    dx,eax
  41047d:	jmp    0xc168:0x95f9a89b
  410484:	imul   edx,ebx,0x19dd8f97
  41048a:	lods   eax,DWORD PTR ds:[esi]
  41048b:	xor    DWORD PTR [eax-0x22],esi
  41048e:	in     al,0x4b
  410490:	test   DWORD PTR [ebp-0x162a8062],0xd0258e31
  41049a:	xchg   DWORD PTR [edi+0x615210b5],edi
  4104a0:	mov    ch,0x7e
  4104a2:	xchg   esp,eax
  4104a3:	dec    ebp
  4104a4:	or     edx,esp
  4104a6:	jp     0x4104ea
  4104a8:	aam    0x8
  4104aa:	cs cdq 
  4104ac:	sub    DWORD PTR [edi-0x6d],edx
  4104af:	sbb    edx,DWORD PTR [ebx+0x39]
  4104b2:	enter  0x522d,0x3b
  4104b6:	lea    esp,[edx-0x182763f4]
  4104bc:	leave  
  4104bd:	lods   al,BYTE PTR ds:[esi]
  4104be:	(bad)  
  4104bf:	fsub   st,st(6)
  4104c1:	(bad)  
  4104c2:	sti    
  4104c3:	inc    esp
  4104c4:	sbb    al,0xbd
  4104c7:	pop    ecx
  4104c8:	imul   eax,esp,0xa465c705
  4104ce:	test   BYTE PTR [ebx-0x3c577309],bl
  4104d4:	push   ecx
  4104d5:	pop    esi
  4104d6:	sbb    eax,DWORD PTR [edx-0x3fc0fe8b]
  4104dc:	sbb    BYTE PTR [edx],dh
  4104de:	push   ebx
  4104df:	dec    edx
  4104e0:	fwait
  4104e1:	mov    cl,0x5
  4104e3:	shl    DWORD PTR [edx-0x631e98c],1
  4104e9:	mov    cl,0xed
  4104eb:	stos   BYTE PTR es:[edi],al
  4104ec:	ret    0xc0c0
  4104ef:	xor    cl,BYTE PTR [esi-0x6a]
  4104f2:	scas   al,BYTE PTR es:[edi]
  4104f3:	jo     0x410564
  4104f5:	inc    edx
  4104f6:	ret    
  4104f7:	cld    
  4104f8:	sbb    al,0x5d
  4104fa:	sub    eax,0x2a158966
  4104ff:	jmp    DWORD PTR [esi+0x67]
  410502:	push   es
  410503:	adc    BYTE PTR [ebp+0x64],bh
  410506:	sub    dl,BYTE PTR cs:[ebx-0x451338c1]
  41050d:	dec    esp
  41050e:	loopne 0x410587
  410510:	xchg   esi,eax
  410511:	test   DWORD PTR [edi-0x3b],esi
  410514:	jge    0x410503
  410516:	out    0xf0,eax
  410518:	int    0x2b
  41051a:	ja     0x410541
  41051c:	lock es or al,0x8e
  410520:	pop    edx
  410521:	daa    
  410522:	jo     0x4104da
  410524:	div    DWORD PTR [ebp+0x7df02cfa]
  41052a:	jge    0x410532
  41052c:	push   cs
  41052d:	inc    esp
  41052e:	call   0xe51a:0xa99f031c
  410535:	adc    ecx,DWORD PTR [esi-0x50]
  410538:	fs je  0x410540
  41053b:	mov    bl,0x82
  41053d:	repnz ins DWORD PTR es:[edi],dx
  41053f:	jae    0x4104f8
  410541:	xchg   edi,esp
  410543:	mov    al,0x1b
  410545:	inc    ebp
  410546:	std    
  410547:	or     al,0xa5
  410549:	and    cl,BYTE PTR [esi+eax*1+0x500803c0]
  410550:	test   BYTE PTR ds:0x30d56b58,bh
  410556:	adc    BYTE PTR [ebx],dl
  410558:	jns    0x410575
  41055a:	jno    0x41053c
  41055c:	inc    ebx
  41055d:	inc    esp
  41055e:	jmp    0x4104f8
  410560:	test   BYTE PTR [esi+eiz*2],dh
  410563:	popf   
  410564:	xchg   ebx,eax
  410565:	mov    edx,0xf997dde
  41056a:	xchg   edx,eax
  41056b:	lods   eax,DWORD PTR ds:[esi]
  41056c:	out    dx,eax
  41056d:	lock dec ecx
  41056f:	gs mov cl,0x40
  410572:	int3   
  410573:	mov    ch,BYTE PTR [edi-0x3f]
  410576:	sub    ecx,ecx
  410578:	in     al,0x9d
  41057a:	lods   eax,DWORD PTR ds:[esi]
  41057b:	xchg   DWORD PTR [ebx*4+0x9f17a47],ebp
  410582:	dec    edx
  410583:	ud0    edx,DWORD PTR [ebx-0x38]
  410587:	or     ah,BYTE PTR [ebx+0x32]
  41058a:	xchg   edx,edx
  41058c:	ds and eax,0xa32321f8
  410592:	mov    DWORD PTR [ebx],ebx
  410594:	sar    BYTE PTR [esi+eiz*2],cl
  410597:	and    al,BYTE PTR [edi+0x4b]
  41059a:	pop    ds
  41059b:	adc    DWORD PTR [ecx+0xb],ebp
  41059e:	sti    
  41059f:	sahf   
  4105a0:	imul   edx,DWORD PTR [ebp+0x6fc6ab0a],0x750b1d0f
  4105aa:	or     al,0xaa
  4105ac:	in     al,0xcf
  4105ae:	jb     0x41062d
  4105b0:	stos   DWORD PTR es:[edi],eax
  4105b1:	loop   0x410627
  4105b3:	mov    al,ds:0x7f2ad8bc
  4105b8:	inc    esp
  4105b9:	mov    eax,0xe36fba3c
  4105be:	aad    0x86
  4105c0:	mov    bh,BYTE PTR [eax+0x6fa4d34e]
  4105c6:	xor    bl,BYTE PTR [edi+esi*8]
  4105c9:	inc    edi
  4105ca:	jmp    0x4105e9
  4105cc:	clc    
  4105cd:	fdivr  DWORD PTR [edx-0x7a5c1228]
  4105d3:	sub    eax,0x610c51d2
  4105d8:	cwde   
  4105d9:	or     eax,0xc89ef6d
  4105de:	mov    ebp,edx
  4105e0:	sbb    eax,0xc71edd9c
  4105e5:	inc    ecx
  4105e6:	or     DWORD PTR [edx+0x5d],edi
  4105e9:	je     0x4105af
  4105eb:	aad    0xa1
  4105ed:	jnp    0x410651
  4105ef:	sbb    edx,DWORD PTR [esi]
  4105f1:	mov    edi,0x410c6adf
  4105f6:	pop    edx
  4105f7:	clc    
  4105f8:	inc    ebp
  4105f9:	dec    edx
  4105fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105fb:	push   ebp
  4105fc:	inc    ecx
  4105fd:	pop    es
  4105fe:	push   ss
  4105ff:	mov    edi,0x425872ba
  410604:	mov    ds:0xaa37ba53,eax
  410609:	pop    edi
  41060a:	repz jmp 0x17e2e781
  410610:	test   eax,0xe2e71594
  410615:	push   0x36a6217e
  41061a:	inc    edi
  41061b:	cld    
  41061c:	and    BYTE PTR [ebx],ah
  41061e:	repnz rcr BYTE PTR [ecx],cl
  410621:	fstp   QWORD PTR [ebx+0x65]
  410624:	push   ecx
  410625:	cld    
  410626:	adc    DWORD PTR [ebp-0x502b55a2],ecx
  41062c:	pop    ebx
  41062d:	mov    ch,0xd4
  41062f:	push   0x5405d18d
  410634:	lods   eax,DWORD PTR ds:[esi]
  410635:	shr    DWORD PTR [ebp+0x3005e802],0x93
  41063c:	jmp    0x6e24:0x5ad5e6df
  410643:	or     edi,DWORD PTR [esi]
  410645:	jp     0x41063f
  410647:	push   edx
  410648:	adc    DWORD PTR [ecx-0x76],esp
  41064b:	xchg   ebp,eax
  41064c:	mov    al,0x60
  41064e:	push   eax
  41064f:	mov    bl,0xb1
  410651:	aaa    
  410652:	cmc    
  410653:	into   
  410654:	std    
  410655:	popf   
  410656:	out    0xb0,al
  410658:	out    0x1e,eax
  41065a:	fincstp 
  41065c:	lea    eax,[edx]
  41065e:	test   DWORD PTR [ebx],ebp
  410660:	push   ebx
  410661:	aas    
  410662:	xchg   esp,eax
  410663:	mov    edi,0xde3ef5de
  410668:	iret   
  410669:	iret   
  41066a:	push   ecx
  41066b:	call   DWORD PTR [eax]
  41066d:	jnp    0x410671
  41066f:	pop    eax
  410670:	xor    eax,DWORD PTR ss:[ecx]
  410673:	mov    ebx,0x46238f4f
  410678:	and    eax,0x79358567
  41067d:	fnstenv [edi-0x2327162a]
  410683:	xchg   ebx,eax
  410684:	inc    edx
  410685:	add    ecx,DWORD PTR [esi]
  410687:	mov    eax,ds:0xf2c9c887
  41068c:	jge    0x410620
  41068e:	test   al,0xa5
  410690:	enter  0xd13d,0x2
  410694:	call   0x68b825f0
  410699:	pop    esi
  41069a:	sub    ch,bh
  41069c:	cmc    
  41069d:	pop    ebp
  41069e:	jp     0x4106be
  4106a0:	dec    ebp
  4106a1:	fcomp  QWORD PTR [eax-0x4adf89a6]
  4106a7:	ja     0x410706
  4106a9:	(bad)  
  4106aa:	ds sahf 
  4106ac:	pop    edi
  4106ad:	or     edx,esp
  4106af:	add    al,0x52
  4106b1:	add    si,cx
  4106b4:	inc    ecx
  4106b5:	neg    edx
  4106b7:	ins    DWORD PTR es:[edi],dx
  4106b8:	neg    DWORD PTR [ebp-0x2b]
  4106bb:	daa    
  4106bc:	lea    ebp,[edx-0x188531d1]
  4106c2:	xor    BYTE PTR [eax+eiz*2],0x36
  4106c6:	dec    eax
  4106c7:	adc    BYTE PTR [ebp-0x6a094d1c],bl
  4106cd:	jmp    0x410701
  4106cf:	push   ebp
  4106d0:	jo     0x410751
  4106d2:	mov    ebp,ecx
  4106d4:	push   esi
  4106d5:	sbb    eax,0x61742903
  4106da:	add    BYTE PTR [ebx-0x1903f2a],al
  4106e0:	enter  0x4f1c,0x61
  4106e4:	mov    edx,0xf8057864
  4106e9:	out    0xfd,al
  4106eb:	jle    0x4106a9
  4106ed:	pop    ss
  4106ee:	sub    al,0x96
  4106f0:	mov    esi,0xca8602c9
  4106f5:	sti    
  4106f6:	push   ebx
  4106f7:	sub    eax,0xe608860a
  4106fc:	add    DWORD PTR [esi-0x5a95d51e],0xffffff91
  410703:	push   ebx
  410704:	push   ebp
  410705:	jp     0x410752
  410707:	std    
  410708:	addr16 or ecx,0x62886e1d
  41070f:	dec    ecx
  410710:	mov    cl,0x8c
  410712:	and    dh,BYTE PTR [ebx]
  410714:	fdiv   QWORD PTR [eax+0x7b]
  410717:	cmp    dl,BYTE PTR [eax]
  410719:	out    dx,al
  41071a:	dec    esp
  41071b:	dec    edx
  41071c:	data16 into 
  41071e:	mov    ds:0xa899a5d2,eax
  410723:	xchg   edi,eax
  410724:	lock push ebx
  410726:	adc    DWORD PTR [edi],ebx
  410728:	lock ret 0xfd0b
  41072c:	pushf  
  41072d:	pop    es
  41072e:	dec    edi
  41072f:	(bad)  
  410730:	fld    QWORD PTR [ebx-0x587a250]
  410736:	mov    ebx,0xf3a5a50f
  41073b:	xor    eax,0x844c404a
  410740:	xor    BYTE PTR fs:[edi+0xe],cl
  410744:	sbb    eax,0x113925
  410749:	daa    
  41074a:	add    DWORD PTR [ebx+ebp*2-0x42],edi
  41074e:	mov    bl,0x86
  410750:	in     eax,dx
  410751:	adc    al,0x3a
  410753:	stos   BYTE PTR es:[edi],al
  410754:	(bad)  
  410755:	cmp    al,0x75
  410757:	dec    ecx
  410758:	cdq    
  410759:	fs xor al,0xc1
  41075c:	cmp    DWORD PTR [edi+esi*2-0x3e],esi
  410760:	addr16 mov ds:0x992a,eax
  410764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410765:	add    eax,0xcbb59747
  41076a:	daa    
  41076b:	sub    DWORD PTR [ebx],esp
  41076d:	cdq    
  41076e:	in     al,dx
  41076f:	push   ss
  410770:	into   
  410771:	shr    DWORD PTR [ecx],0xb8
  410774:	addr16 cmc 
  410776:	retf   0xa62e
  410779:	lods   al,BYTE PTR ds:[esi]
  41077a:	int    0x54
  41077c:	xor    al,BYTE PTR [ebx+0x62]
  41077f:	call   0x579498b9
  410784:	and    bh,dh
  410786:	cmp    BYTE PTR [edi-0x3b],al
  410789:	add    DWORD PTR [ebx],eax
  41078b:	adc    BYTE PTR [esi+0x1c],bh
  41078e:	(bad)  
  41078f:	mov    esi,0x2e7c4dcc
  410794:	cmp    BYTE PTR fs:[edx],cl
  410797:	inc    ebx
  410798:	xchg   ecx,eax
  410799:	fld1   
  41079b:	popa   
  41079c:	xchg   esi,eax
  41079d:	jno    0x41081e
  41079f:	loop   0x410762
  4107a1:	cmp    eax,edx
  4107a3:	out    0x28,al
  4107a5:	mov    ecx,DWORD PTR [edx-0x3e77b5da]
  4107ab:	and    al,0x72
  4107ad:	or     al,0x12
  4107af:	into   
  4107b0:	sbb    al,0xa6
  4107b2:	(bad)  
  4107b3:	mov    dl,0xd4
  4107b5:	and    al,0x92
  4107b7:	xor    al,0x60
  4107b9:	mov    esi,0x5e072537
  4107be:	cs daa 
  4107c0:	add    al,0xd9
  4107c2:	(bad)  
  4107c3:	pop    esi
  4107c4:	push   eax
  4107c5:	inc    esp
  4107c6:	ror    BYTE PTR [ecx+0x43949a70],0x14
  4107cd:	pop    ebp
  4107ce:	sbb    eax,DWORD PTR [edx+ebx*1-0x17]
  4107d2:	aad    0x88
  4107d4:	ror    ebp,0xc3
  4107d7:	iret   
  4107d8:	ret    
  4107d9:	call   edx
  4107db:	cmp    al,0x29
  4107dd:	lods   eax,DWORD PTR ds:[esi]
  4107de:	xlat   BYTE PTR ds:[ebx]
  4107df:	adc    eax,0x3c5f3c02
  4107e4:	dec    eax
  4107e5:	mov    edx,0x8991623d
  4107ea:	mov    cl,0xa3
  4107ed:	push   esp
  4107ee:	ds ret 0x309f
  4107f2:	mov    dl,0x76
  4107f4:	and    al,BYTE PTR [ecx+ebx*4-0x210c7e75]
  4107fb:	dec    edx
  4107fc:	test   BYTE PTR [ebx],ch
  4107fe:	mov    ch,0x1
  410800:	lock loopne 0x41078b
  410803:	pop    edi
  410804:	xchg   ecx,eax
  410805:	push   cs
  410806:	ins    BYTE PTR es:[edi],dx
  410807:	dec    ecx
  410808:	or     bh,BYTE PTR [edx+ebx*4+0x71]
  41080c:	push   ebx
  41080d:	sar    dl,1
  41080f:	dec    edx
  410810:	mov    al,ds:0x8e6bb4ed
  410815:	inc    ebp
  410816:	enter  0x243d,0xa3
  41081a:	fs xchg ebx,eax
  41081c:	push   cs
  41081d:	cld    
  41081e:	shl    ebp,1
  410820:	test   DWORD PTR [edi-0x5d],eax
  410823:	xchg   edx,eax
  410824:	pop    ebx
  410825:	aad    0x3d
  410827:	imul   ecx,esp,0x2
  41082a:	jmp    0x4108a1
  41082c:	sub    al,0x48
  41082e:	cmp    ebx,edi
  410830:	add    eax,0x401c5881
  410835:	fsubr  QWORD PTR [eax+esi*2+0x4c1e9651]
  41083c:	sar    BYTE PTR [esi+0x390a2c2e],0xf8
  410843:	jns    0x41082c
  410845:	mov    eax,ds:0x3f5e089d
  41084a:	xor    BYTE PTR [edi-0x61],ah
  41084d:	ss pop eax
  41084f:	fst    QWORD PTR [ebp+0x1e]
  410852:	sti    
  410853:	stos   BYTE PTR es:[edi],al
  410854:	inc    esi
  410855:	(bad)  ds:0x970bc6
  41085b:	and    DWORD PTR [edi+esi*4+0x47],ebx
  41085f:	fwait
  410860:	ror    BYTE PTR [eax],1
  410862:	(bad)  [edx]
  410864:	mov    al,bh
  410866:	dec    ebp
  410867:	jl     0x410849
  410869:	outs   dx,DWORD PTR ds:[esi]
  41086a:	mov    ch,0xee
  41086c:	aas    
  41086d:	lahf   
  41086e:	jbe    0x41085b
  410870:	call   0xca546aec
  410875:	push   0xffffffc3
  410877:	mov    edx,0x5d04dd88
  41087c:	xlat   BYTE PTR ds:[ebx]
  41087d:	rcl    ebx,1
  41087f:	dec    ebx
  410880:	sub    eax,DWORD PTR [ebx]
  410882:	call   FWORD PTR [edx-0x4]
  410885:	ja     0x4108f8
  410887:	mov    dl,0xf3
  410889:	push   eax
  41088a:	mov    cl,0x6e
  41088c:	daa    
  41088d:	sub    ebp,DWORD PTR [ebx+eiz*8+0x7e7b76c8]
  410894:	(bad)  
  410895:	les    edx,FWORD PTR [eax]
  410897:	push   eax
  410898:	jns    0x410824
  41089a:	aam    0x29
  41089c:	enter  0x9855,0x6d
  4108a0:	(bad)  
  4108a2:	dec    ebp
  4108a3:	imul   ebx,DWORD PTR [esi+0x28],0xc2c6ea36
  4108aa:	addr16 push cs
  4108ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108ad:	hlt    
  4108ae:	ss jecxz 0x4108f1
  4108b1:	cmp    al,0x75
  4108b3:	not    BYTE PTR [esi]
  4108b5:	in     eax,dx
  4108b6:	inc    ecx
  4108b7:	cwde   
  4108b8:	xor    ch,BYTE PTR [ebp-0x4c940cbd]
  4108be:	sub    cl,ch
  4108c0:	push   esp
  4108c1:	add    DWORD PTR [ecx+0x957de70],ebp
  4108c7:	xor    al,0x3f
  4108c9:	xor    al,0x1a
  4108cb:	push   edx
  4108cc:	push   0xc442c3f5
  4108d1:	xor    BYTE PTR [eax+ecx*2-0x1ee342f3],cl
  4108d8:	pop    esi
  4108d9:	cs in  eax,0xc2
  4108dc:	nop
  4108dd:	jae    0x41093c
  4108df:	aam    0x47
  4108e1:	les    esi,FWORD PTR [ebp+0x3803ad58]
  4108e7:	idiv   BYTE PTR [edx+0x6f]
  4108ea:	call   0xcb69:0x3c4cad70
  4108f1:	sub    eax,0x2260ed76
  4108f6:	xor    edx,DWORD PTR [edi+0x22eff89c]
  4108fc:	test   eax,0x4612e1be
  410901:	mov    ds:0x50161562,al
  410906:	add    DWORD PTR [ecx+0x63ed484a],ebp
  41090c:	pop    esi
  41090d:	xor    BYTE PTR [ebx+edx*2-0x5a],bh
  410911:	(bad)  
  410912:	aaa    
  410913:	jge    0x41095e
  410915:	call   edi
  410917:	pop    ebp
  410918:	in     eax,dx
  410919:	(bad)  
  41091a:	sar    bh,0x84
  41091d:	xor    eax,0xd4748dda
  410922:	pop    esp
  410923:	dec    ebx
  410924:	mov    ds:0x8253d97d,eax
  410929:	xor    dh,BYTE PTR [ebx-0x7d]
  41092c:	xor    al,0xd7
  41092e:	ja     0x410995
  410930:	jns    0x410945
  410932:	das    
  410933:	outs   dx,DWORD PTR ds:[esi]
  410934:	pop    ss
  410935:	cmp    cl,BYTE PTR [edi]
  410937:	sbb    ebx,DWORD PTR [eax+ebp*4-0x77567a]
  41093e:	adc    ch,ah
  410940:	iret   
  410941:	dec    edi
  410942:	pop    ebx
  410943:	lods   eax,DWORD PTR ds:[esi]
  410944:	int3   
  410945:	rcl    BYTE PTR [edi],0xd7
  410948:	mov    ds,WORD PTR [ebx]
  41094a:	in     al,dx
  41094b:	pop    edi
  41094c:	sub    edi,0xffffffb3
  41094f:	xchg   ebx,eax
  410950:	sub    al,0x34
  410952:	inc    esi
  410953:	or     eax,0xe25646eb
  410958:	and    BYTE PTR [eax],bl
  41095a:	or     DWORD PTR [eax+0x21989dbc],eax
  410960:	mov    eax,0xc50455aa
  410965:	push   edx
  410966:	inc    ebx
  410967:	and    al,0xd4
  410969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41096a:	fcmovnbe st,st(2)
  41096c:	and    al,0xd5
  41096e:	dec    ebx
  41096f:	cwde   
  410970:	xchg   esp,eax
  410971:	in     eax,0xdd
  410973:	ja     0x41099f
  410975:	bound  ebx,QWORD PTR [edx]
  410977:	ja     0x410901
  410979:	call   DWORD PTR [esi]
  41097b:	pop    ecx
  41097c:	in     eax,dx
  41097d:	outs   dx,DWORD PTR ds:[esi]
  41097e:	lar    eax,WORD PTR [esi+0x4d]
  410982:	arpl   WORD PTR [edx],bx
  410984:	add    dl,BYTE PTR [edi]
  410986:	lea    ebx,[edx]
  410988:	jmp    0x977e:0xba10ecbc
  41098f:	jmp    0x7adefcab
  410994:	ins    BYTE PTR es:[edi],dx
  410995:	dec    edx
  410996:	std    
  410997:	dec    ebx
  410998:	and    DWORD PTR [ecx],edx
  41099a:	cdq    
  41099b:	and    eax,0x55bb006
  4109a0:	sub    BYTE PTR [ecx],bh
  4109a2:	call   0x17a9:0x22bd1ecb
  4109a9:	cwde   
  4109aa:	jmp    0xa734:0xd363607a
  4109b1:	data16 mov bh,0x7f
  4109b4:	dec    edi
  4109b5:	sub    BYTE PTR es:[edx+ebp*8],al
  4109b9:	sbb    al,0x31
  4109bb:	push   es
  4109bc:	xor    DWORD PTR [edi+0x70e90c2d],0xb2348844
  4109c6:	dec    edx
  4109c7:	mov    ebp,DWORD PTR [eax+0x17]
  4109ca:	retf   
  4109cb:	xchg   bh,bh
  4109cd:	mov    cl,0xf3
  4109cf:	mov    ch,0xb6
  4109d1:	push   edi
  4109d2:	mov    dh,0xef
  4109d4:	push   ecx
  4109d5:	loop   0x410a38
  4109d7:	enter  0x1e19,0xdb
  4109db:	pop    eax
  4109dc:	mov    ds:0x5ec7fc2d,eax
  4109e1:	fsubr  QWORD PTR [esp+edx*4+0x26be7e19]
  4109e8:	aad    0x22
  4109ea:	sbb    eax,0xfd2dc102
  4109ef:	sbb    cl,BYTE PTR [ebx+0x6112249]
  4109f5:	xchg   esp,eax
  4109f6:	repnz int 0x86
  4109f9:	mov    ds:0x7c5b7589,al
  4109fe:	(bad)  
  4109ff:	data16 das 
  410a01:	shl    DWORD PTR [esi],0x8e
  410a04:	and    DWORD PTR ds:0x44842a5f,ecx
  410a0a:	cmp    ah,dl
  410a0c:	or     BYTE PTR [edx-0x5e1957e],ah
  410a12:	sub    DWORD PTR [esi+0x64],esi
  410a15:	xchg   edi,eax
  410a16:	push   ecx
  410a17:	aam    0xb1
  410a19:	jnp    0x4109eb
  410a1b:	pop    ds
  410a1c:	shl    DWORD PTR [edi-0x57265e05],0xf6
  410a23:	lock or dl,ah
  410a26:	jle    0x410a88
  410a28:	mov    bl,0x92
  410a2a:	mov    esp,DWORD PTR [edi]
  410a2c:	fs sti 
  410a2e:	out    0x1b,al
  410a30:	dec    ecx
  410a31:	add    BYTE PTR [edx],0x2f
  410a34:	inc    ecx
  410a35:	mov    cl,bl
  410a37:	pop    ebx
  410a38:	push   eax
  410a39:	xchg   DWORD PTR [ecx-0x3d],esp
  410a3c:	xor    eax,0xc4d86a09
  410a41:	shr    ebx,1
  410a43:	call   0x2072:0x6ea77418
  410a4a:	mov    edx,0x149e084c
  410a4f:	hlt    
  410a50:	inc    edi
  410a51:	in     al,dx
  410a52:	mov    bh,0xec
  410a54:	ret    0x18df
  410a57:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410a59:	gs dec edi
  410a5b:	push   ecx
  410a5c:	retf   
  410a5d:	(bad)  
  410a5e:	jecxz  0x410ada
  410a60:	loopne 0x410a93
  410a62:	fs aad 0x0
  410a65:	mov    ah,0x1a
  410a67:	mov    DWORD PTR [eax],edx
  410a69:	ret    0x99d1
  410a6c:	lahf   
  410a6d:	mov    dl,BYTE PTR [esi+0x58922acf]
  410a73:	xor    DWORD PTR [eax+edx*4],eax
  410a76:	adc    eax,0x758eedaf
  410a7b:	push   ebp
  410a7c:	jo     0x410a8f
  410a7e:	repz mov dl,0xd
  410a81:	or     al,0xe2
  410a83:	or     bh,BYTE PTR [eax-0x69]
  410a86:	lock popf 
  410a88:	add    ebx,DWORD PTR [bp-0x3b5d]
  410a8d:	or     esi,DWORD PTR [ecx]
  410a8f:	pusha  
  410a90:	sbb    eax,0xcf78e883
  410a95:	mov    DWORD PTR [ebx],esp
  410a97:	mov    BYTE PTR [ebx-0x23639765],bl
  410a9d:	xchg   BYTE PTR [ebp+eax*8-0x3420525],dh
  410aa4:	fiadd  WORD PTR [ebp-0x1c2af89b]
  410aaa:	je     0x410a75
  410aac:	xchg   esp,eax
  410aad:	mov    al,0x60
  410aaf:	mov    gs:0x90a537c,al
  410ab5:	mov    al,ds:0xa9dd3240
  410aba:	nop
  410abb:	sub    DWORD PTR [edx+0x18],ebx
  410abe:	lahf   
  410abf:	imul   edx,DWORD PTR [ebp+0x79b921d9],0x2c24b077
  410ac9:	int    0x83
  410acb:	sub    al,0xa5
  410acd:	daa    
  410ace:	xchg   ecx,eax
  410acf:	or     al,0x49
  410ad1:	cmp    bh,BYTE PTR [ebx-0x657328f0]
  410ad7:	frstor [esi-0x12d67bcd]
  410add:	jmp    0xb391510d
  410ae2:	mov    eax,ds:0x76b3ea37
  410ae7:	ret    
  410ae8:	leave  
  410ae9:	aad    0xb2
  410aeb:	ror    BYTE PTR [ecx+0x5f],1
  410aee:	sub    cl,ah
  410af0:	jmp    0x68d7:0xd746f3a1
  410af7:	jne    0x410b02
  410af9:	jg     0x410b30
  410afb:	sub    edi,DWORD PTR [edi-0x17a9c96c]
  410b01:	xchg   edi,eax
  410b02:	xchg   edx,eax
  410b03:	retf   
  410b04:	pop    es
  410b05:	sbb    DWORD PTR [eax-0x7a],esi
  410b08:	jae    0x410b2e
  410b0a:	dec    eax
  410b0b:	dec    ebp
  410b0c:	mov    dl,0xe6
  410b0e:	dec    edi
  410b0f:	lock pop edi
  410b11:	cwde   
  410b12:	dec    ebp
  410b13:	dec    edx
  410b14:	sbb    al,0x39
  410b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b17:	loopne 0x410afb
  410b19:	mov    edx,0x378c962e
  410b1e:	add    eax,0x1d776604
  410b23:	loop   0x410b60
  410b25:	test   bl,dh
  410b27:	inc    esi
  410b28:	sub    BYTE PTR [esi+0x17821c73],bh
  410b2e:	stos   BYTE PTR es:[edi],al
  410b2f:	mov    bh,0xb
  410b31:	inc    eax
  410b32:	dec    eax
  410b33:	sbb    DWORD PTR ds:0x9b849148,ecx
  410b39:	jmp    0x410ac7
  410b3b:	sar    DWORD PTR [edi+0x3758fdca],1
  410b41:	dec    ecx
  410b42:	pusha  
  410b43:	lods   eax,DWORD PTR ds:[esi]
  410b44:	sbb    ebp,ebx
  410b46:	mov    dh,0xf7
  410b48:	das    
  410b49:	icebp  
  410b4a:	and    eax,0x3da3a977
  410b4f:	xor    eax,0xe1523eb6
  410b54:	call   0x49ff:0x28aa8852
  410b5b:	jbe    0x410bc2
  410b5d:	imul   ecx,DWORD PTR [ecx+0x2e],0xc6a13c10
  410b64:	ret    0x8e44
  410b67:	jne    0xdb59aa4
  410b6d:	cmc    
  410b6e:	jecxz  0x410b35
  410b70:	cdq    
  410b71:	or     BYTE PTR [edx+0x30],cl
  410b74:	push   ds
  410b75:	dec    ecx
  410b76:	pop    ds
  410b77:	adc    BYTE PTR [edi],al
  410b79:	(bad)  
  410b7a:	ror    DWORD PTR [eax-0x3c10cf5d],cl
  410b80:	lds    ebx,FWORD PTR [eax-0x4f]
  410b83:	xor    al,0x8a
  410b85:	xchg   ecx,eax
  410b86:	adc    DWORD PTR [ebx+0x7e],eax
  410b89:	mov    al,0xba
  410b8b:	imul   ebp,DWORD PTR [eax],0xffffff97
  410b8e:	mov    al,BYTE PTR [edi+0x4e]
  410b91:	add    DWORD PTR ss:[edx],ebx
  410b94:	mov    ds:0x8e71602c,eax
  410b99:	dec    esp
  410b9a:	mov    ah,BYTE PTR [ecx+0x600e82cd]
  410ba0:	in     al,0x8a
  410ba2:	sti    
  410ba3:	mov    ecx,0xe2d33fb6
  410ba8:	out    0x27,eax
  410baa:	das    
  410bab:	fadd   DWORD PTR fs:[ebp-0x50]
  410baf:	ret    0xfeeb
  410bb2:	and    edx,DWORD PTR [esi+0x1a]
  410bb5:	inc    edx
  410bb6:	or     eax,0x82beb5d8
  410bbb:	push   0xfffffff5
  410bbd:	cmp    cl,BYTE PTR [edx]
  410bbf:	lea    edi,[eax+0xf818650]
  410bc5:	dec    ebp
  410bc6:	in     eax,dx
  410bc7:	enter  0x32eb,0xd2
  410bcb:	xchg   ecx,eax
  410bcc:	pop    edi
  410bcd:	pop    edi
  410bce:	pop    edx
  410bcf:	adc    al,0x93
  410bd1:	adc    eax,0xd0b42a17
  410bd6:	out    0x40,eax
  410bd8:	out    dx,al
  410bd9:	cld    
  410bda:	cmc    
  410bdb:	cld    
  410bdc:	jmp    0x994a:0xf26c7685
  410be3:	out    0x28,al
  410be5:	add    edi,DWORD PTR [edi-0x4b]
  410be8:	mov    bh,0x64
  410bea:	pop    edx
  410beb:	lods   eax,DWORD PTR ds:[esi]
  410bec:	add    ecx,0xffffffe3
  410bef:	pop    ecx
  410bf0:	sbb    dl,al
  410bf2:	call   0x3618:0x4f6a8a52
  410bf9:	mov    al,ds:0xa245baad
  410bfe:	xor    BYTE PTR [esi+0x47f1ab10],cl
  410c04:	ja     0x410be6
  410c06:	nop
  410c07:	ret    0x731c
  410c0a:	shl    DWORD PTR [ecx+0x23f201a0],1
  410c10:	xchg   edx,eax
  410c11:	sub    bl,bl
  410c13:	and    eax,0xb09161d3
  410c18:	fs dec ebp
  410c1a:	aaa    
  410c1b:	int3   
  410c1c:	xor    ebx,0x2a
  410c1f:	jne    0x410c8c
  410c21:	das    
  410c22:	cwde   
  410c23:	push   0xffffff83
  410c25:	dec    ebx
  410c26:	sti    
  410c27:	mov    ebp,0xf39f42fc
  410c2c:	jnp    0x410c9f
  410c2e:	ins    DWORD PTR es:[edi],dx
  410c2f:	xor    BYTE PTR ds:0xde58aaa2,dl
  410c35:	add    bh,BYTE PTR [eax+ebp*8]
  410c38:	div    BYTE PTR [edx+0x4f0ddcf]
  410c3e:	jp     0x410ca9
  410c40:	push   cs
  410c41:	test   al,0x2d
  410c43:	xor    al,0x9f
  410c45:	retf   0xe54b
  410c48:	pop    ss
  410c49:	adc    DWORD PTR [edx-0x56],ecx
  410c4c:	(bad)  
  410c4e:	popf   
  410c4f:	mov    esp,0xd31cb55f
  410c54:	das    
  410c55:	outs   dx,BYTE PTR ds:[esi]
  410c56:	push   0xefd7ac88
  410c5b:	sbb    ch,BYTE PTR [esi+esi*1-0x48]
  410c5f:	and    BYTE PTR ds:0xe83b191c,ah
  410c65:	inc    eax
  410c66:	loope  0x410c9a
  410c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c69:	call   0xf1df:0x922af7a6
  410c70:	adc    eax,0x6a375e0c
  410c75:	jae    0x410c5a
  410c77:	dec    edx
  410c78:	add    DWORD PTR [ecx+0x3a515a27],esp
  410c7e:	ss cwde 
  410c80:	or     DWORD PTR [ecx],ecx
  410c82:	in     al,dx
  410c83:	push   ebp
  410c84:	cmc    
  410c85:	cmovo  ecx,ebp
  410c88:	push   DWORD PTR [ebp+0x18]
  410c8b:	xor    DWORD PTR [esp+eax*4-0x49368940],0xffffffcc
  410c93:	icebp  
  410c94:	sbb    ebp,DWORD PTR [ecx+ebx*1-0x1f71ce1a]
  410c9b:	push   0x3e2fd671
  410ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ca1:	fneni(8087 only) 
  410ca3:	push   edi
  410ca4:	push   esi
  410ca5:	adc    DWORD PTR [edx+0x2d],esi
  410ca8:	cli    
  410ca9:	ret    
  410caa:	add    eax,0x4fb63d04
  410caf:	sahf   
  410cb0:	mov    DWORD PTR [esi+ecx*4],0x9c4a4a84
  410cb7:	push   0x30fe6f47
  410cbc:	push   ebp
  410cbd:	in     eax,0xf6
  410cbf:	jle    0x410cfc
  410cc1:	pop    edx
  410cc2:	or     BYTE PTR [edi+0x5a94d0b9],dh
  410cc8:	frstor [ebx+0x78]
  410ccb:	push   ss
  410ccc:	sbb    BYTE PTR [ecx],ah
  410cce:	shl    DWORD PTR [edx-0xd],0x96
  410cd2:	xchg   ebx,eax
  410cd3:	or     ah,BYTE PTR [ebx]
  410cd5:	mov    dh,BYTE PTR [ebx]
  410cd7:	push   edx
  410cd8:	and    DWORD PTR [esi-0x41],edx
  410cdb:	cmp    BYTE PTR [edx-0x1c],bh
  410cde:	lahf   
  410cdf:	pop    edx
  410ce0:	loop   0x410d23
  410ce2:	ror    BYTE PTR [edx-0x7151f9e1],0x21
  410ce9:	mov    ds:0x19c3cf66,al
  410cee:	push   ss
  410cef:	bound  esi,QWORD PTR [edx-0x11dcc9]
  410cf5:	aas    
  410cf6:	outs   dx,BYTE PTR ds:[esi]
  410cf7:	xchg   esi,eax
  410cf8:	xor    al,0xbd
  410cfa:	ror    BYTE PTR [esi-0x7e],cl
  410cfd:	jl     0x410cb1
  410cff:	cs dec esi
  410d01:	mov    ah,ch
  410d03:	addr16 (bad) 
  410d06:	mov    bh,0xae
  410d08:	xchg   BYTE PTR [eax+ecx*2-0x47],ah
  410d0c:	(bad)
  410d11:	outs   dx,BYTE PTR ds:[esi]
  410d12:	cmp    eax,0xb99ccbe7
  410d17:	pop    ds
  410d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d19:	push   eax
  410d1a:	js     0xe92248ad
  410d20:	lds    eax,FWORD PTR [ebx]
  410d22:	xchg   ebp,eax
  410d23:	mov    eax,ds:0x3e85eaf
  410d28:	clc    
  410d29:	ins    BYTE PTR es:[edi],dx
  410d2a:	pop    ds
  410d2b:	test   BYTE PTR [edi],0xe
  410d2e:	push   ss
  410d2f:	(bad)  
  410d30:	(bad)  
  410d31:	cs adc dh,al
  410d34:	mov    ebx,0xb5ec632f
  410d39:	inc    eax
  410d3a:	(bad)  
  410d3c:	adc    DWORD PTR [eax-0x1f],esi
  410d3f:	sub    DWORD PTR [ebx+ebx*8],edx
  410d42:	sbb    ecx,DWORD PTR [edi+edi*4]
  410d45:	cdq    
  410d46:	push   cs
  410d47:	jo     0x410d6d
  410d49:	leave  
  410d4a:	je     0x410d8b
  410d4c:	ss push ecx
  410d4e:	hlt    
  410d4f:	iret   
  410d50:	jl     0x410ced
  410d52:	mov    ebp,0x8c42d361
  410d57:	test   DWORD PTR ds:0xccffc526,eax
  410d5d:	push   0x3e
  410d5f:	lods   eax,DWORD PTR ds:[esi]
  410d60:	cdq    
  410d61:	mov    ?,WORD PTR [esi-0x7b1d01f5]
  410d67:	push   ebx
  410d68:	add    al,0x43
  410d6a:	outs   dx,BYTE PTR ds:[esi]
  410d6b:	and    ecx,DWORD PTR fs:[eax+0x27279279]
  410d72:	mov    eax,0xd6f2f5e2
  410d77:	les    ebx,FWORD PTR [ebx+ebx*4]
  410d7a:	aam    0x4e
  410d7c:	sar    ah,0x13
  410d7f:	xchg   edx,eax
  410d80:	arpl   ax,cx
  410d82:	call   0x8bb7:0xcd2f7512
  410d89:	int    0xda
  410d8b:	out    dx,al
  410d8c:	mov    ebx,0x9b617242
  410d91:	icebp  
  410d92:	jbe    0x410dbd
  410d94:	adc    eax,0x6e38f02d
  410d99:	mov    ebp,0xd21d9ba6
  410d9e:	data16 loopne 0x410d64
  410da1:	shl    BYTE PTR [edx],1
  410da3:	push   0x35
  410da5:	xchg   edi,eax
  410da6:	scas   eax,DWORD PTR es:[edi]
  410da7:	dec    ecx
  410da8:	and    esp,DWORD PTR [esi+0x74]
  410dab:	push   0x74ef4fc1
  410db0:	xchg   esi,eax
  410db1:	rcl    BYTE PTR [eax-0x49],1
  410db4:	jl     0x410de9
  410db6:	dec    esp
  410db7:	cmp    bh,BYTE PTR [eax-0x7e]
  410dba:	jecxz  0x410db1
  410dbc:	inc    edi
  410dbd:	fbstp  TBYTE PTR [ecx-0x7]
  410dc0:	shl    ebp,0xb5
  410dc3:	xor    edx,DWORD PTR [ebx+ebp*4]
  410dc6:	sbb    ch,BYTE PTR [esi+0x9bf732e]
  410dcc:	push   es
  410dcd:	inc    esp
  410dce:	xlat   BYTE PTR ds:[ebx]
  410dcf:	xchg   esp,eax
  410dd0:	shr    DWORD PTR [ebx-0x1e],1
  410dd3:	and    cl,ch
  410dd5:	add    BYTE PTR [edx],dl
  410dd7:	pop    cx
  410dd9:	xchg   ebp,eax
  410dda:	jmp    0x21fa:0x6c96a472
  410de1:	cmp    edi,ebx
  410de3:	(bad)  
  410de4:	cs inc ebx
  410de6:	scas   al,BYTE PTR es:[edi]
  410de7:	mov    ch,0x41
  410de9:	jmp    0xd5a5:0xe62cb2e3
  410df0:	push   ecx
  410df1:	or     BYTE PTR [ecx-0x34],dl
  410df4:	popf   
  410df5:	out    0x15,eax
  410df7:	mov    ds:0xeb72665,al
  410dfc:	pop    ss
  410dfd:	ins    BYTE PTR es:[edi],dx
  410dfe:	mov    ebp,0x44b58348
  410e03:	stos   DWORD PTR es:[edi],eax
  410e04:	push   ds
  410e05:	lds    edx,FWORD PTR [esi+0x7a]
  410e08:	pop    es
  410e09:	mov    DWORD PTR ds:0x5c5222b5,esp
  410e0f:	ins    BYTE PTR es:[edi],dx
  410e10:	push   ds
  410e11:	add    BYTE PTR [edi],cl
  410e13:	icebp  
  410e14:	aad    0x17
  410e16:	inc    esi
  410e17:	pushf  
  410e18:	push   ebp
  410e19:	fidiv  WORD PTR [eax-0x19934cc2]
  410e1f:	lods   al,BYTE PTR ds:[esi]
  410e20:	stc    
  410e21:	cmp    bh,BYTE PTR [ebp-0x3bc38c92]
  410e27:	push   ebp
  410e28:	add    ebx,DWORD PTR [ebx-0x5a]
  410e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e2c:	retf   
  410e2d:	mov    ah,0x47
  410e2f:	jo     0x410dba
  410e31:	pushf  
  410e32:	lods   al,BYTE PTR ds:[esi]
  410e33:	xor    eax,0xe9d7554
  410e38:	test   al,0x3c
  410e3a:	xchg   BYTE PTR [esi+edi*1-0x2],ah
  410e3e:	dec    ebp
  410e3f:	repz rol DWORD PTR [ebx+0x14],0xc3
  410e44:	pop    esi
  410e45:	mov    BYTE PTR [ebp+0x5ef6bb48],dl
  410e4b:	or     edi,ebp
  410e4d:	adc    eax,0x136fbada
  410e52:	jg     0x410eb2
  410e54:	pop    esi
  410e55:	mov    dl,0xa8
  410e57:	mov    esp,0x98c2a280
  410e5c:	cmp    DWORD PTR [esi*8+0x1b0911d],edx
  410e63:	and    eax,0xf8421747
  410e68:	int3   
  410e69:	addr16 mov bh,0x7e
  410e6c:	scas   eax,DWORD PTR es:[edi]
  410e6d:	js     0x410dff
  410e6f:	leave  
  410e70:	mov    al,BYTE PTR [ecx-0x3f]
  410e73:	outs   dx,DWORD PTR ds:[esi]
  410e74:	xchg   edi,eax
  410e75:	mov    cl,0x22
  410e77:	mov    eax,ds:0x36bdb134
  410e7c:	pop    ds
  410e7d:	mov    ah,0x8
  410e7f:	jle    0x410e89
  410e81:	inc    ecx
  410e82:	dec    edx
  410e83:	and    DWORD PTR [ecx-0x519ecf4d],eax
  410e89:	dec    ebp
  410e8a:	inc    ebp
  410e8b:	(bad)  
  410e8c:	push   ss
  410e8d:	mov    bh,0x85
  410e8f:	rcr    DWORD PTR [ecx-0x6f509da1],cl
  410e95:	dec    esp
  410e96:	mov    bl,0xd9
  410e98:	fstp   QWORD PTR [ebp-0x4a]
  410e9b:	call   0x3f7a:0x34be5de4
  410ea2:	mov    dh,0xbf
  410ea4:	cmp    dl,dl
  410ea6:	mov    edi,0x22e2bf0
  410eab:	cwde   
  410eac:	(bad)  
  410ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eae:	pop    eax
  410eaf:	push   edx
  410eb0:	psubsb mm6,QWORD PTR [ebp+0x70]
  410eb4:	rcl    dl,1
  410eb6:	scas   eax,DWORD PTR es:[edi]
  410eb7:	sbb    ecx,DWORD PTR [edi-0x407393d2]
  410ebd:	mov    WORD PTR [edi+0x346deeb7],es
  410ec3:	inc    DWORD PTR [ecx+edi*2-0x19]
  410ec7:	sbb    eax,0x1e5861a8
  410ecc:	mov    cl,0x2e
  410ece:	push   ss
  410ecf:	jle    0x410eb0
  410ed1:	xchg   BYTE PTR [esi],bl
  410ed3:	cli    
  410ed4:	ss and al,0xdf
  410ed7:	pop    es
  410ed8:	xor    ah,bl
  410eda:	dec    esi
  410edb:	sbb    ah,BYTE PTR [ecx-0x280a83e1]
  410ee1:	push   edi
  410ee2:	loope  0x410f47
  410ee4:	fisttp DWORD PTR [edx]
  410ee6:	cld    
  410ee7:	call   0xfcac92d9
  410eec:	or     BYTE PTR [edi+0xebd4b4e],bl
  410ef2:	rcl    DWORD PTR [ebp-0x6fa06841],cl
  410ef8:	pop    ebx
  410ef9:	sub    edx,ebp
  410efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410efc:	mov    eax,ds:0x987cdfbd
  410f01:	mov    ebp,0x864fec72
  410f06:	or     BYTE PTR [ebp+0x14b7d70d],bh
  410f0c:	enter  0xde5,0xb0
  410f10:	rcr    DWORD PTR [ebp-0x4b],1
  410f13:	add    BYTE PTR [edx+0x70],0x1b
  410f17:	icebp  
  410f18:	adc    esi,DWORD PTR [ecx]
  410f1a:	xchg   ebp,eax
  410f1b:	or     ebx,edi
  410f1d:	push   eax
  410f1e:	loopne 0x410ee7
  410f20:	popf   
  410f21:	jns    0x410f55
  410f23:	xchg   DWORD PTR [eax-0x4a79b349],esp
  410f29:	in     al,dx
  410f2a:	and    DWORD PTR [eax+0x72],eax
  410f2d:	dec    edx
  410f2e:	imul   ebx,edi,0x35e32ae0
  410f34:	int    0x2f
  410f36:	ja     0x410ebc
  410f38:	cmp    BYTE PTR ds:0x8705929b,cl
  410f3e:	xor    ecx,ebx
  410f40:	pop    esi
  410f41:	jg     0x410f76
  410f43:	add    BYTE PTR [edi+ebp*4+0x1c],ch
  410f47:	daa    
  410f48:	xchg   eax,esp
  410f4a:	ins    DWORD PTR es:[edi],dx
  410f4b:	imul   edx,DWORD PTR [ebp+0x7e373bf],0xe989990b
  410f55:	ja     0x410f01
  410f57:	cmp    BYTE PTR [eax],dl
  410f59:	shl    al,0xc5
  410f5c:	xlat   BYTE PTR ds:[ebx]
  410f5d:	pop    es
  410f5e:	dec    BYTE PTR [edx-0xe2c5872]
  410f64:	push   ss
  410f65:	sar    BYTE PTR [edx],cl
  410f67:	or     al,0x60
  410f69:	push   es
  410f6a:	and    BYTE PTR [ecx],cl
  410f6c:	cmp    al,0xbd
  410f6e:	mov    edx,0x9ad66c99
  410f73:	xor    al,0x2f
  410f75:	div    BYTE PTR [ecx]
  410f77:	cmp    BYTE PTR [eax+ebp*1-0x15c134cb],0x81
  410f7f:	xchg   BYTE PTR [ecx-0x65],ah
  410f82:	push   ss
  410f83:	sbb    eax,0x120d02bf
  410f88:	rol    DWORD PTR [ecx+0x14],cl
  410f8b:	ficomp DWORD PTR [edi+0x74eb831b]
  410f91:	mul    BYTE PTR [eax-0x749b7490]
  410f97:	enter  0x5a99,0x77
  410f9b:	xchg   edx,eax
  410f9c:	push   esi
  410f9d:	xlat   BYTE PTR ds:[ebx]
  410f9e:	or     eax,0x3c224a88
  410fa3:	rcl    BYTE PTR [ecx],cl
  410fa5:	rcr    BYTE PTR [esi],cl
  410fa7:	xchg   esp,eax
  410fa8:	popa   
  410fa9:	popf   
  410faa:	xchg   edx,eax
  410fab:	popa   
  410fac:	jo     0x410feb
  410fae:	call   0xba11f0ab
  410fb3:	fild   WORD PTR [ebx]
  410fb5:	rol    DWORD PTR [edi],1
  410fb7:	push   esp
  410fb8:	dec    edx
  410fb9:	scas   eax,DWORD PTR es:[edi]
  410fba:	push   DWORD PTR [ebx]
  410fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fbd:	inc    esi
  410fbe:	jbe    0x411021
  410fc0:	ja     0x411017
  410fc2:	and    DWORD PTR [ebp+0x27],ebx
  410fc5:	push   es
  410fc6:	cmp    BYTE PTR [edx+0x376b079],dh
  410fcc:	xchg   ebp,eax
  410fcd:	mov    al,ds:0xe6f1d4b1
  410fd2:	and    dl,BYTE PTR [edx+0x4855987f]
  410fd8:	cwde   
  410fd9:	pop    eax
  410fda:	fs push esi
  410fdc:	fidivr WORD PTR [ecx+0x2a]
  410fdf:	inc    ebp
  410fe0:	mov    ah,BYTE PTR [eax+0x58]
  410fe3:	push   ebp
  410fe4:	xor    DWORD PTR [esi+0x64b38522],esp
  410fea:	ret    0x508f
  410fed:	ror    ah,1
  410fef:	dec    esi
  410ff0:	daa    
  410ff1:	mov    ah,0x6b
  410ff3:	cmp    edi,ecx
  410ff5:	cmp    BYTE PTR [eax-0x380b2dd2],0xa0
  410ffc:	sbb    esi,DWORD PTR [eax+0x17]
  410fff:	ss mov edi,0xa94d623a
  411005:	popf   
  411006:	out    dx,al
  411007:	stc    
  411008:	retf   0xe743
  41100b:	add    al,0x8e
  41100d:	scas   eax,DWORD PTR es:[edi]
  41100e:	bound  eax,QWORD PTR [edi+esi*1-0x44e1d690]
  411015:	adc    esp,DWORD PTR [esi+eax*1+0x77cb8670]
  41101c:	in     eax,0x8
  41101e:	xchg   DWORD PTR [ecx+0x3b],ebx
  411021:	cmp    eax,0x7513c932
  411026:	ret    0xa3f2
  411029:	repz push ebp
  41102b:	icebp  
  41102c:	add    esp,esi
  41102e:	jmp    0x54ca9d4c
  411033:	nop
  411034:	repnz lods al,BYTE PTR ds:[esi]
  411036:	sbb    ebx,0xffffffd2
  411039:	fidivr DWORD PTR [ecx+0x63]
  41103c:	aaa    
  41103d:	lea    ebp,fs:[esi-0x44abfffe]
  411044:	push   ss
  411045:	loop   0x41108a
  411047:	repz add bl,dh
  41104a:	(bad)  
  41104b:	mov    esi,0xcd0c2df0
  411050:	mov    ss,ecx
  411052:	cmp    DWORD PTR [ebp+0x7],ecx
  411055:	aas    
  411056:	sbb    al,0xc5
  411058:	xchg   ch,dh
  41105a:	fmul   QWORD PTR [ebp+0x44]
  41105d:	(bad)  
  41105e:	push   es
  41105f:	adc    ch,BYTE PTR [esi-0x3c]
  411062:	mov    al,ds:0xd759e535
  411067:	icebp  
  411068:	(bad)
  41106b:	lahf   
  41106c:	ins    BYTE PTR es:[edi],dx
  41106d:	dec    ecx
  41106e:	inc    ebp
  41106f:	dec    ebx
  411070:	int3   
  411071:	nop
  411072:	mov    dl,0x2f
  411074:	adc    dh,BYTE PTR [edx]
  411076:	xor    BYTE PTR [ebx],ch
  411078:	pop    edx
  411079:	pushf  
  41107a:	push   es
  41107b:	ins    BYTE PTR es:[edi],dx
  41107c:	fninit 
  41107e:	sub    al,dl
  411080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411081:	mov    ah,0xa7
  411083:	fs icebp 
  411085:	mov    ebp,0xc3856abb
  41108a:	scas   al,BYTE PTR es:[edi]
  41108b:	jae    0x4110d7
  41108d:	jne    0x41104c
  41108f:	xor    eax,eax
  411091:	lods   al,BYTE PTR ds:[esi]
  411092:	cwde   
  411093:	and    ch,BYTE PTR [eax]
  411095:	leave  
  411096:	adc    eax,0xfed6fa13
  41109b:	popf   
  41109c:	lahf   
  41109d:	jo     0x41106d
  41109f:	ins    BYTE PTR es:[edi],dx
  4110a0:	sahf   
  4110a1:	push   0x1a
  4110a3:	mov    ah,0xb9
  4110a5:	loope  0x41108e
  4110a7:	icebp  
  4110a8:	add    esi,ebp
  4110aa:	idiv   BYTE PTR [ebp+ebx*1-0x4b39ac1]
  4110b1:	js     0x41112f
  4110b3:	jo     0x41111a
  4110b5:	add    eax,0x254e4d46
  4110ba:	in     eax,dx
  4110bb:	mov    eax,esi
  4110bd:	mov    ebx,0x8bb1072a
  4110c2:	adc    edi,DWORD PTR [ebx+0x395fe87f]
  4110c8:	mov    edx,0x99d20cb6
  4110cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ce:	fsub   DWORD PTR [edi]
  4110d0:	aaa    
  4110d1:	mov    ah,al
  4110d3:	jno    0x411131
  4110d5:	inc    ebp
  4110d6:	dec    BYTE PTR ds:0x9c91023c
  4110dc:	iret   
  4110dd:	dec    esp
  4110de:	dec    eax
  4110df:	sbb    eax,0xb4cecdb4
  4110e4:	jmp    0x599f:0x7cb7b1dd
  4110eb:	lock mov esi,0x7cc9f2d3
  4110f1:	jnp    0x41108f
  4110f3:	inc    esp
  4110f4:	jb     0x411091
  4110f6:	xchg   ebx,eax
  4110f7:	out    dx,al
  4110f8:	cmp    eax,0x1558e488
  4110fd:	pop    ebx
  4110fe:	mov    ebx,0x1da1c3d9
  411103:	rol    BYTE PTR [eax+0x2b],1
  411106:	xor    bh,BYTE PTR [ebx]
  411108:	adc    al,0xb6
  41110a:	test   esp,esp
  41110c:	repz shl DWORD PTR [edx-0x5ddfefd7],cl
  411113:	ficomp DWORD PTR [edx+eiz*4]
  411116:	stc    
  411117:	aam    0x7f
  411119:	jne    0x4110a4
  41111b:	lahf   
  41111c:	ds popf 
  41111e:	sub    ch,bl
  411120:	stos   BYTE PTR es:[edi],al
  411121:	dec    esp
  411122:	lods   eax,DWORD PTR ds:[esi]
  411123:	mov    ebx,0x205e96d0
  411128:	loopne 0x411192
  41112a:	inc    edi
  41112b:	or     esp,edi
  41112d:	add    ch,BYTE PTR [eax]
  41112f:	push   edx
  411130:	cmp    ebp,DWORD PTR [ebx+0x5b5f7442]
  411136:	(bad)  
  411138:	lock and ecx,DWORD PTR [eax-0x3d]
  41113c:	int3   
  41113d:	jg     0x4110fb
  41113f:	inc    ecx
  411140:	scas   eax,DWORD PTR es:[edi]
  411141:	jp     0x4111a7
  411143:	xchg   ebp,eax
  411144:	and    DWORD PTR [ebx+edi*4+0x552a28a9],esp
  41114b:	fs add eax,0x28311251
  411151:	fsubr  DWORD PTR [eax+0x4559dbee]
  411157:	aad    0x68
  411159:	jno    0x4111ac
  41115b:	ficomp DWORD PTR [edi-0x2c]
  41115e:	stc    
  41115f:	int    0x5
  411161:	inc    eax
  411162:	es in  eax,0x35
  411165:	jnp    0x411141
  411167:	and    esi,ebp
  411169:	mov    dh,0x89
  41116b:	inc    ecx
  41116c:	sahf   
  41116d:	adc    BYTE PTR [edi],bl
  41116f:	adc    al,0x49
  411171:	out    dx,al
  411172:	cmp    DWORD PTR [edx+0x6f],0x50
  411176:	fmul   DWORD PTR [edi+0x58]
  411179:	mov    edx,0x9ea810b5
  41117e:	sbb    cl,ah
  411180:	jge    0x411155
  411182:	add    al,BYTE PTR [ebx]
  411184:	into   
  411185:	add    esp,eax
  411187:	fild   WORD PTR [ebp+0x403acd62]
  41118d:	dec    edi
  41118e:	aas    
  41118f:	add    ah,BYTE PTR [edi-0x5bbe7cdc]
  411195:	fs dec edx
  411197:	ret    
  411198:	inc    esp
  411199:	(bad)  
  41119a:	jmp    DWORD PTR [eax+esi*2-0x7d7caeb7]
  4111a1:	je     0x4111ce
  4111a3:	dec    esi
  4111a4:	mov    ds:0x9c23dca1,al
  4111a9:	push   0x9832157a
  4111ae:	push   edi
  4111af:	jnp    0x411133
  4111b1:	pop    es
  4111b2:	cmp    BYTE PTR [eax+0x16db988a],cl
  4111b8:	push   ebp
  4111b9:	and    ecx,DWORD PTR [eax]
  4111bb:	test   al,0x53
  4111bd:	jmp    0xdbd7:0x44835c30
  4111c4:	outs   dx,DWORD PTR ds:[esi]
  4111c5:	add    esp,DWORD PTR [edx+0x5e]
  4111c8:	pop    eax
  4111c9:	cmp    BYTE PTR [esi+0x13ddcb7c],cl
  4111cf:	sub    al,0x35
  4111d1:	ja     0x411168
  4111d3:	sub    BYTE PTR [edx+0x54],cl
  4111d6:	add    DWORD PTR [edx+0x2b98158d],esi
  4111dc:	xchg   esp,eax
  4111dd:	xchg   esi,eax
  4111de:	pop    eax
  4111df:	sub    al,0x80
  4111e1:	outs   dx,DWORD PTR ds:[esi]
  4111e2:	lods   al,BYTE PTR ds:[esi]
  4111e3:	(bad)  
  4111e4:	add    edi,0x82fbc3ba
  4111ea:	(bad)  
  4111eb:	cmp    BYTE PTR [ecx-0x576fb059],bl
  4111f1:	cmp    DWORD PTR [edi-0x17],0x2e
  4111f5:	mov    al,0xb
  4111f7:	xchg   eax,ecx
  4111f9:	push   eax
  4111fa:	xchg   esp,eax
  4111fb:	imul   ebx,DWORD PTR [ebx+ecx*8-0x7b],0xc
  411200:	dec    edi
  411201:	(bad)  
  411203:	and    eax,0xf9903c6b
  411208:	sub    BYTE PTR [ebx-0x2],0xe8
  41120c:	mov    ds:0xf8bc00d2,al
  411211:	imul   ebp,DWORD PTR [eax-0x61263ffe],0x12091e09
  41121b:	ins    DWORD PTR es:[edi],dx
  41121c:	cmc    
  41121d:	xchg   DWORD PTR [ebx+ebp*4+0x6cab0c67],ebp
  411224:	imul   ebx,esp,0x34
  411227:	into   
  411228:	jnp    0x411281
  41122a:	cmp    eax,esi
  41122c:	adc    esi,DWORD PTR [eax-0x74]
  41122f:	mov    al,ds:0xe8258a70
  411234:	mov    al,BYTE PTR [ebx+0x3]
  411237:	adc    DWORD PTR [edi+esi*2],esp
  41123a:	cdq    
  41123b:	shl    DWORD PTR [edi+0x3e833088],1
  411241:	cli    
  411242:	adc    eax,0x112847c2
  411247:	sub    DWORD PTR [ecx+ecx*4],ebp
  41124a:	mov    eax,ebp
  41124c:	xchg   esi,eax
  41124d:	dec    ebx
  41124e:	push   edi
  41124f:	mov    dh,0xf2
  411251:	fdivr  QWORD PTR [edi+0xa]
  411254:	lods   eax,DWORD PTR ds:[esi]
  411255:	mov    cl,0x5e
  411257:	(bad)  
  411258:	ficom  DWORD PTR [edi+edx*2+0x4e]
  41125d:	xor    al,0xc5
  41125f:	dec    edx
  411260:	in     al,dx
  411261:	es (bad) 
  411263:	pop    edi
  411264:	push   0xffffffb3
  411266:	jg     0x411264
  411268:	pop    eax
  411269:	mov    esp,0xd3a0a2f4
  41126e:	jbe    0x411225
  411270:	popa   
  411271:	sbb    al,0x84
  411273:	mov    ecx,0x707e7af9
  411278:	fdivr  QWORD PTR [ecx+0x52c83960]
  41127e:	into   
  41127f:	jl     0x41126b
  411281:	je     0x41128b
  411283:	clc    
  411284:	sub    BYTE PTR [edx+0x180958b8],al
  41128a:	or     cl,BYTE PTR [ebp-0x1f]
  41128d:	sbb    DWORD PTR [edx+ebp*8-0x64],0x3a
  411292:	push   0xffffff95
  411294:	call   0x84c4:0xea443e1a
  41129b:	ja     0x4112c9
  41129d:	lods   al,BYTE PTR ds:[esi]
  41129e:	dec    esp
  41129f:	jne    0x411288
  4112a1:	sbb    BYTE PTR [edx],al
  4112a3:	aad    0x35
  4112a5:	imul   esi,DWORD PTR [ebp+0x22],0xffffff99
  4112a9:	sub    dl,bh
  4112ab:	(bad)  
  4112ac:	xchg   ebx,eax
  4112ad:	or     al,0x2f
  4112af:	cdq    
  4112b0:	gs test ebx,edi
  4112b3:	xchg   esp,esi
  4112b5:	cwde   
  4112b6:	mov    al,BYTE PTR [eax+0x1ffd14de]
  4112bc:	out    dx,al
  4112bd:	retf   
  4112be:	jle    0x41132e
  4112c0:	js     0x41124b
  4112c2:	imul   BYTE PTR [esi]
  4112c4:	pop    esi
  4112c5:	icebp  
  4112c6:	fstp   QWORD PTR [edi-0x7fe2b5ea]
  4112cc:	je     0x4112a1
  4112ce:	mov    ds:0x73ef4feb,eax
  4112d3:	mov    ah,0xda
  4112d5:	mov    ebx,0xe576deae
  4112da:	jge    0x41133d
  4112dc:	push   0xc5890fd5
  4112e1:	xlat   BYTE PTR ds:[ebx]
  4112e2:	sti    
  4112e3:	cwde   
  4112e4:	mov    ds:0x748859ed,al
  4112e9:	xchg   edi,eax
  4112ea:	and    ebx,edx
  4112ec:	add    esi,DWORD PTR [esi-0x7]
  4112ef:	and    WORD PTR [edx+0x663d3bf2],0xfb99
  4112f8:	mov    dh,0x5
  4112fa:	stos   DWORD PTR es:[edi],eax
  4112fb:	test   BYTE PTR [ebp+0x9],cl
  4112fe:	inc    ebx
  4112ff:	cmp    esi,DWORD PTR ds:[edx]
  411302:	loop   0x411333
  411304:	cmp    ebp,DWORD PTR [edi-0x23]
  411307:	aam    0xd8
  411309:	sbb    eax,0x559362b6
  41130e:	adc    ch,BYTE PTR [ecx+0x1eb531e1]
  411314:	cmp    BYTE PTR [ebx+0x27becd27],cl
  41131a:	jle    0x411365
  41131c:	fnstenv [esi-0x8]
  41131f:	pop    esp
  411320:	fst    QWORD PTR [ecx+0x15e589b5]
  411326:	mov    ah,0xbb
  411328:	aaa    
  411329:	dec    ebx
  41132a:	push   cs
  41132b:	stc    
  41132c:	mov    ds:0x7874aa9f,al
  411331:	ins    BYTE PTR es:[edi],dx
  411332:	push   ds
  411333:	(bad)  
  411334:	ins    DWORD PTR es:[edi],dx
  411335:	bound  ebp,QWORD PTR [esp+ebx*2+0x33dfc1d0]
  41133c:	dec    edx
  41133d:	add    ebx,eax
  41133f:	sub    BYTE PTR [edx+0x66],al
  411342:	(bad)  
  411343:	call   0x8acd:0x8cd179c5
  41134a:	cmp    esi,DWORD PTR [ecx+ebp*8-0x64]
  41134e:	jae    0x411315
  411350:	imul   eax,DWORD PTR ds:0x44ec701e,0x78
  411357:	mov    ch,0x5c
  411359:	lods   al,BYTE PTR ds:[esi]
  41135a:	adc    DWORD PTR [edi-0x1a],edi
  41135d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41135e:	or     BYTE PTR [edi],ch
  411360:	pop    ebp
  411361:	mov    edx,0x6e29ba26
  411366:	aas    
  411367:	lock imul ebx,DWORD PTR [ebx],0xffffffa6
  41136b:	lods   al,BYTE PTR ds:[esi]
  41136c:	sbb    cl,BYTE PTR [esi+0x70]
  41136f:	cmp    DWORD PTR [eax-0x3a79ca44],ebp
  411375:	cpuid  
  411377:	imul   ecx,DWORD PTR [edi+eiz*2],0x7e52643f
  41137e:	js     0x411343
  411380:	xchg   edx,eax
  411381:	cmp    DWORD PTR [ecx-0x2374eea5],esi
  411387:	int3   
  411388:	retf   0x5355
  41138b:	dec    ebx
  41138c:	fmul   DWORD PTR [edi+0x10889bb9]
  411392:	or     al,0xe2
  411394:	sub    ch,bh
  411396:	ja     0x41137c
  411398:	call   0x85a6:0x498d76eb
  41139f:	inc    ecx
  4113a0:	bound  ecx,QWORD PTR ds:0xeaeca1ab
  4113a6:	iret   
  4113a7:	jge    0x4113f6
  4113a9:	out    0xa3,eax
  4113ab:	daa    
  4113ac:	aam    0x2
  4113ae:	arpl   WORD PTR [esi],di
  4113b0:	mov    esp,0x13b96ce1
  4113b5:	test   BYTE PTR [edi],bl
  4113b7:	xor    eax,0x4d4cd352
  4113bc:	rcl    DWORD PTR [edx-0x45],0xad
  4113c0:	in     eax,0x88
  4113c2:	or     DWORD PTR [ebp-0x43def087],eax
  4113c8:	xchg   esi,eax
  4113c9:	pop    esi
  4113ca:	das    
  4113cb:	mov    WORD PTR [esi+0x3ccc9f71],ds
  4113d1:	push   edx
  4113d2:	out    0x4b,al
  4113d4:	mov    bl,0xda
  4113d6:	icebp  
  4113d7:	push   ebx
  4113d8:	pushf  
  4113d9:	mov    ah,0x33
  4113db:	(bad)  
  4113dc:	popa   
  4113dd:	jl     0x411390
  4113df:	or     BYTE PTR [eax],dl
  4113e1:	repz or eax,0xa2f0dd05
  4113e7:	jmp    FWORD PTR [esi+0x32]
  4113ea:	ror    DWORD PTR [eax+0x21],0x86
  4113ee:	mov    ebx,0x24f9d890
  4113f3:	pop    ebp
  4113f4:	pop    ebx
  4113f5:	push   es
  4113f6:	cld    
  4113f7:	dec    ebx
  4113f8:	fadd   DWORD PTR [eax+0x5094f4f3]
  4113fe:	jecxz  0x411423
  411400:	xchg   DWORD PTR [ebx+0x1a],esp
  411403:	lock xchg ecx,eax
  411405:	cmp    eax,ecx
  411407:	dec    edx
  411408:	dec    ebp
  411409:	fadd   DWORD PTR [esp+esi*2-0x59ed035d]
  411410:	adc    eax,0x583894ae
  411415:	and    cl,BYTE PTR [eax]
  411417:	xlat   BYTE PTR ds:[ebx]
  411418:	or     al,BYTE PTR [ecx-0xd]
  41141b:	nop
  41141c:	mov    ch,0x98
  41141e:	push   ebx
  41141f:	and    al,0x89
  411421:	sbb    al,0x8c
  411423:	leave  
  411424:	add    bl,dh
  411426:	pop    esp
  411427:	(bad)  
  411429:	inc    esp
  41142a:	xchg   esi,eax
  41142b:	shr    BYTE PTR [ebx+ecx*1+0x653842f8],0xd
  411433:	(bad)  [esi-0x1d]
  411436:	shr    BYTE PTR [ebx+0x2b],cl
  411439:	lds    eax,FWORD PTR [edi]
  41143b:	loopne 0x411492
  41143d:	push   ds
  41143e:	jno    0x411496
  411440:	cmp    ch,0x1e
  411443:	adc    DWORD PTR [edi+0x37],ebx
  411446:	xor    DWORD PTR [ecx],ecx
  411448:	and    eax,DWORD PTR [esi+ecx*4-0x4c1a09d1]
  41144f:	mov    edx,0x2cc09e54
  411454:	or     ecx,DWORD PTR [edi+0x5]
  411457:	jns    0x4113f6
  411459:	fwait
  41145a:	mov    esi,edi
  41145c:	das    
  41145d:	repnz ficom DWORD PTR [edx+esi*2]
  411461:	je     0x4114af
  411463:	pop    ss
  411464:	mov    bh,0xc9
  411466:	mov    gs,edi
  411468:	lock das 
  41146a:	rol    DWORD PTR [eax],1
  41146c:	jg     0x411452
  41146e:	fst    QWORD PTR [ecx]
  411470:	xchg   esi,eax
  411471:	outs   dx,BYTE PTR ds:[esi]
  411472:	iret   
  411473:	je     0x4114aa
  411475:	xor    eax,0xad660f34
  41147a:	pushf  
  41147b:	sub    edi,DWORD PTR [edi]
  41147d:	jle    0x41140f
  41147f:	sub    DWORD PTR [edi+ebp*2-0x60d01455],esi
  411486:	cmc    
  411487:	daa    
  411488:	and    BYTE PTR [edx-0xb],dh
  41148b:	cwde   
  41148c:	sub    BYTE PTR [ecx+esi*8],ah
  41148f:	mov    ecx,DWORD PTR ds:0x253a23e6
  411495:	push   esi
  411496:	or     dh,BYTE PTR [edi]
  411498:	sbb    esp,DWORD PTR [eax+0x23143bdb]
  41149e:	test   BYTE PTR [esi-0x39],ch
  4114a1:	call   0x74a20cdd
  4114a6:	pop    esi
  4114a7:	xchg   ebx,eax
  4114a8:	leave  
  4114a9:	add    al,0x5f
  4114ab:	pop    ss
  4114ac:	push   0x8793c3e8
  4114b1:	adc    dh,BYTE PTR [eax+0x60]
  4114b4:	data16 loopne 0x411485
  4114b7:	pusha  
  4114b8:	pop    edi
  4114b9:	fisub  WORD PTR [edi-0x122c7faf]
  4114bf:	xor    al,0x60
  4114c1:	or     cl,ah
  4114c3:	dec    ebp
  4114c4:	hlt    
  4114c5:	push   edx
  4114c6:	sbb    edx,DWORD PTR [ebx-0x21]
  4114c9:	int    0xd9
  4114cb:	lahf   
  4114cc:	hlt    
  4114cd:	mov    esi,esp
  4114cf:	mov    eax,ds:0x9a5a8b00
  4114d4:	sub    eax,0x90cfd337
  4114d9:	xchg   esp,eax
  4114da:	out    dx,eax
  4114db:	xor    BYTE PTR [eax+esi*4-0x33],ah
  4114df:	mov    ds,WORD PTR [edx+edi*1-0x51a22f60]
  4114e6:	jnp    0x4114e8
  4114e8:	push   0x9cdfaad6
  4114ed:	jmp    0x5c68:0x75a22127
  4114f4:	jmp    0xe08d:0xbe94faaf
  4114fb:	outs   dx,BYTE PTR ds:[esi]
  4114fc:	mov    cl,BYTE PTR [esi-0x4f13816]
  411502:	mov    edx,0xdf06e9d5
  411507:	outs   dx,DWORD PTR ds:[esi]
  411508:	mov    al,ds:0x507b1957
  41150d:	mul    BYTE PTR [ecx+0x51cb5c6d]
  411513:	ss sbb al,0xfe
  411516:	and    edi,ecx
  411518:	inc    ebx
  411519:	jge    0x411573
  41151b:	jbe    0x411517
  41151d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41151e:	mov    edx,0x4be94638
  411523:	dec    eax
  411524:	mov    ch,0x3
  411526:	and    eax,0x159d0478
  41152b:	popf   
  41152c:	aam    0x83
  41152e:	dec    ebp
  41152f:	fs out 0x58,eax
  411532:	iret   
  411533:	sbb    BYTE PTR [ebx+0x11],ah
  411536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411537:	cmp    bl,bh
  411539:	arpl   WORD PTR [edi+eiz*4+0x4e],bp
  41153d:	cmp    BYTE PTR [eax+0x5f7d9015],cl
  411543:	inc    eax
  411544:	mov    edx,0x439cc483
  411549:	push   esp
  41154a:	fild   DWORD PTR ds:0x1002c81
  411551:	mov    al,ds:0x67734d0
  411556:	aas    
  411557:	xchg   ecx,eax
  411558:	sti    
  411559:	out    0x19,al
  41155b:	test   DWORD PTR [edx-0x17badbfb],ebp
  411561:	inc    esi
  411562:	nop
  411563:	or     al,0x58
  411565:	loop   0x41152d
  411567:	xchg   edx,eax
  411568:	xor    al,0xee
  41156a:	or     esi,DWORD PTR [edx]
  41156c:	stos   BYTE PTR es:[edi],al
  41156d:	jns    0x41158d
  41156f:	loope  0x411506
  411571:	call   0xb90b:0xbf63a617
  411578:	dec    edx
  411579:	inc    esp
  41157a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41157b:	pop    es
  41157c:	add    DWORD PTR gs:[ebx-0x1f],ebp
  411580:	popa   
  411581:	pop    ebx
  411582:	add    eax,0x9d9070a0
  411587:	sbb    al,0xc3
  411589:	mov    ebp,DWORD PTR ds:0x96253d5
  41158f:	addr16 cmc 
  411591:	(bad)  [eax+ebp*8-0x39]
  411595:	aad    0xad
  411597:	into   
  411598:	xchg   ebp,eax
  411599:	js     0x4115cd
  41159b:	sub    esp,esi
  41159d:	(bad)  
  41159e:	or     esi,0x38
  4115a1:	cli    
  4115a2:	push   edx
  4115a3:	mov    esi,0x59a70748
  4115a8:	mov    edi,0xb8ea2b2e
  4115ad:	arpl   ax,dx
  4115af:	ss xor esi,esi
  4115b2:	sbb    DWORD PTR ss:[ebx+eiz*2+0x25],edi
  4115b7:	xor    ebp,ebx
  4115b9:	or     edx,DWORD PTR [ebx]
  4115bb:	add    al,0xc2
  4115be:	loope  0x41156a
  4115c0:	ds pop esi
  4115c2:	ins    BYTE PTR es:[edi],dx
  4115c3:	mov    ecx,0x85b41ab8
  4115c8:	mov    edx,0x425b85a9
  4115cd:	xor    eax,0xeb41d413
  4115d2:	pop    edx
  4115d3:	jl     0x41161d
  4115d5:	ss das 
  4115d7:	sbb    bl,BYTE PTR [esi+ebx*8+0x3affe4ac]
  4115de:	iret   
  4115df:	aas    
  4115e0:	mov    al,ds:0xade7c2a1
  4115e5:	and    BYTE PTR [ebx-0x35],bh
  4115e8:	mov    ecx,0xc3734ccf
  4115ed:	fcom   QWORD PTR [esi+esi*1-0x1615efc7]
  4115f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115f5:	dec    ebx
  4115f6:	inc    ebx
  4115f7:	(bad)  
  4115f8:	xor    bh,dh
  4115fa:	inc    edx
  4115fb:	jmp    0x4115f1
  4115fd:	mov    ds:0x8c6c0593,al
  411602:	lds    edx,FWORD PTR [ebx-0x6ce27657]
  411608:	pop    ds
  411609:	out    dx,eax
  41160a:	mov    dh,0x3b
  41160c:	xor    dl,BYTE PTR [ecx]
  41160e:	dec    ecx
  41160f:	mov    ah,0x80
  411611:	sub    eax,0x94b0819d
  411616:	mov    ebx,0xab22fa3d
  41161b:	push   es
  41161c:	pop    eax
  41161d:	cmp    al,0x33
  41161f:	sti    
  411620:	jae    0x4115a4
  411622:	pop    ss
  411623:	data16 ror BYTE PTR gs:[edx+0x1c04c3a7],cl
  41162b:	ins    DWORD PTR es:[edi],dx
  41162c:	xchg   esi,eax
  41162d:	fcomip st,st(7)
  41162f:	sar    BYTE PTR [eax-0x43],0x46
  411633:	ins    DWORD PTR es:[edi],dx
  411634:	dec    edx
  411635:	mov    BYTE PTR [edi+0x2a654871],ch
  41163b:	and    ebp,esi
  41163d:	and    al,0xb6
  41163f:	mov    ds:0x20ba1d54,eax
  411644:	sub    BYTE PTR [edi+eax*8-0x68],dl
  411648:	mov    ch,0xeb
  41164a:	ins    BYTE PTR es:[edi],dx
  41164b:	mov    eax,0xe798d410
  411650:	inc    esi
  411651:	(bad)  
  411652:	daa    
  411653:	or     BYTE PTR [edi+0x1e],bl
  411656:	or     sp,WORD PTR [eax+0x6]
  41165a:	cmp    DWORD PTR [edi-0x4f491930],edx
  411660:	dec    edx
  411661:	jg     0x411619
  411663:	outs   dx,BYTE PTR ds:[esi]
  411664:	dec    ebx
  411665:	cmc    
  411666:	data16 xor dh,BYTE PTR [ebx]
  411669:	cmp    eax,0x9e2257f9
  41166e:	nop
  41166f:	mov    esp,0x9416f7c5
  411674:	in     eax,0x91
  411676:	cmp    DWORD PTR [ecx+0x3a],edx
  411679:	add    ah,BYTE PTR [ecx]
  41167b:	mov    esi,0x1f631cf
  411680:	add    al,0x9e
  411682:	xor    eax,DWORD PTR [esi+0x3]
  411685:	xchg   edi,eax
  411686:	cli    
  411687:	and    DWORD PTR [ebx-0x5fddee04],edi
  41168d:	xchg   DWORD PTR [eax],esp
  41168f:	aad    0x8
  411691:	rol    DWORD PTR [ebx-0x63623316],cl
  411697:	enter  0x3ddc,0x7d
  41169b:	ins    BYTE PTR es:[edi],dx
  41169c:	jne    0x41169d
  41169e:	ret    
  41169f:	or     BYTE PTR ds:0xf8080659,cl
  4116a5:	ret    0x9e75
  4116a8:	imul   eax,DWORD PTR [edx-0x4a],0xffffffc2
  4116ac:	xchg   ebx,eax
  4116ad:	cmp    DWORD PTR [esi],ebx
  4116af:	les    ecx,FWORD PTR [ecx+0x363e3cb4]
  4116b5:	(bad)  
  4116b6:	pop    esi
  4116b7:	adc    al,0x5f
  4116b9:	push   eax
  4116ba:	test   eax,0xc0778dc1
  4116bf:	icebp  
  4116c0:	inc    edi
  4116c1:	xchg   esp,eax
  4116c2:	sbb    ah,0x1e
  4116c5:	std    
  4116c6:	sub    BYTE PTR [edx*1+0xe0ab42b],al
  4116cd:	inc    ebx
  4116ce:	mov    dh,0xac
  4116d0:	jge    0x411720
  4116d2:	xchg   edi,eax
  4116d3:	xchg   ecx,eax
  4116d4:	pop    ds
  4116d5:	retf   0x8314
  4116d8:	pusha  
  4116d9:	nop
  4116da:	test   al,0xe3
  4116dc:	nop
  4116dd:	fwait
  4116de:	(bad)  
  4116df:	mov    ds:0xc5e5e608,al
  4116e4:	jno    0x411667
  4116e6:	es jno 0x4116d6
  4116e9:	ror    DWORD PTR [eax+0x22],0xe5
  4116ed:	mov    DWORD PTR [ebx+0x297fb466],esi
  4116f3:	jo     0x4116c2
  4116f5:	jecxz  0x411747
  4116f7:	or     eax,esp
  4116f9:	dec    eax
  4116fa:	or     dl,dl
  4116fc:	mov    esi,0xe7ba55a0
  411701:	jmp    0x666f:0x5546938f
  411708:	inc    edi
  411709:	fadd   QWORD PTR [eax+0x3a723923]
  41170f:	lods   eax,DWORD PTR ds:[esi]
  411710:	test   al,0x5a
  411712:	push   ecx
  411713:	mov    DWORD PTR [ecx+0x4c76632],eax
  411719:	xchg   edx,eax
  41171a:	mov    cl,0xe
  41171c:	push   ebp
  41171d:	jo     0x4116c9
  41171f:	dec    ecx
  411720:	dec    ecx
  411721:	mov    ecx,0x35a77e19
  411726:	push   edi
  411727:	pop    ebp
  411728:	pop    esp
  411729:	add    edx,DWORD PTR [esi-0x77]
  41172c:	jmp    0x4117a1
  41172e:	xchg   edi,eax
  41172f:	jbe    0x41179c
  411731:	mov    bl,0xd3
  411733:	jne    0x41174f
  411735:	add    ecx,edi
  411737:	addr16 jb 0x4117b2
  41173a:	rep stos DWORD PTR es:[edi],eax
  41173c:	and    BYTE PTR [ebx+0x28],ch
  41173f:	mov    ebx,DWORD PTR [ecx-0x55d5113d]
  411745:	shl    cl,cl
  411747:	mov    ds:0xf201d3b7,eax
  41174c:	(bad)  
  41174d:	aaa    
  41174e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41174f:	sbb    eax,0x9599f38d
  411754:	mov    dl,0x1
  411756:	cld    
  411757:	and    eax,0x24738cb7
  41175c:	cwde   
  41175d:	pop    ecx
  41175e:	fld    st(0)
  411760:	fstp   DWORD PTR [esi]
  411762:	shl    DWORD PTR [eax],1
  411764:	fild   QWORD PTR [ebx-0x49]
  411767:	inc    ebx
  411768:	repz jo 0x4117c8
  41176b:	jle    0x411712
  41176d:	dec    ebx
  41176e:	inc    edi
  41176f:	cs ret 
  411771:	mov    dl,0x14
  411773:	xchg   edi,eax
  411774:	neg    BYTE PTR [ebp+0x78a9cdf3]
  41177a:	sub    DWORD PTR [edi],eax
  41177c:	mov    ebp,0xd35fc7b2
  411781:	retf   
  411782:	pop    es
  411783:	nop
  411784:	and    esp,DWORD PTR [esi]
  411786:	add    dh,bh
  411788:	fnstenv [edi]
  41178a:	xor    DWORD PTR [ebx-0x31839453],esi
  411790:	sbb    DWORD PTR [edi],0x39b4359f
  411796:	or     al,0x4b
  411798:	cmpxchg DWORD PTR [edx+0x52],edi
  41179c:	repnz in al,0x1e
  41179f:	sbb    dl,BYTE PTR [ecx+0x6a]
  4117a2:	adc    eax,0x7f4af41
  4117a7:	xlat   BYTE PTR ds:[ebx]
  4117a8:	dec    ebp
  4117a9:	test   BYTE PTR [esi+0x36],0xa6
  4117ad:	pop    ecx
  4117ae:	pop    esp
  4117af:	out    dx,eax
  4117b0:	inc    ecx
  4117b1:	add    al,0x40
  4117b3:	adc    DWORD PTR [ebx-0x3a1aa72f],edi
  4117b9:	jge    0x41182d
  4117bb:	cs ins DWORD PTR es:[edi],dx
  4117bd:	mov    ds:0xd9115653,eax
  4117c2:	xchg   BYTE PTR [esi+0x61dc7cf7],dh
  4117c8:	lock (bad) 
  4117ca:	adc    eax,DWORD PTR [ebp-0x58e88791]
  4117d0:	adc    esp,ebx
  4117d2:	call   0xc38d:0xb8b89370
  4117d9:	xor    al,BYTE PTR [ebp-0x52bf2961]
  4117df:	test   eax,0x6da0340d
  4117e4:	das    
  4117e5:	rcr    BYTE PTR ds:0x93fd81c,0xbe
  4117ec:	mov    ecx,0x141e162e
  4117f1:	xchg   DWORD PTR [edx+0x527fbb3c],ebp
  4117f7:	ror    DWORD PTR ds:0x97e4f80b,1
  4117fd:	jecxz  0x4117b1
  4117ff:	and    eax,0xa3e203c7
  411804:	sub    bl,BYTE PTR es:[ebx+0x6d]
  411808:	push   edx
  411809:	mov    ch,0x88
  41180b:	inc    esp
  41180c:	mov    eax,0x1081f3df
  411811:	mov    dh,BYTE PTR [esi-0x14]
  411814:	sbb    DWORD PTR [edi+0x3bf90f0],esp
  41181a:	push   eax
  41181b:	sar    esi,1
  41181d:	jle    0x4117a6
  41181f:	cmp    cl,BYTE PTR [ebp+0x237c4732]
  411825:	out    0x3d,al
  411827:	lahf   
  411828:	lahf   
  411829:	xchg   ecx,eax
  41182a:	jns    0x411860
  41182c:	sbb    cl,al
  41182e:	mov    ebp,0x46262f96
  411833:	aam    0xce
  411835:	ins    BYTE PTR es:[edi],dx
  411836:	ss ds es out 0x1e,al
  41183b:	enter  0x58e,0x10
  41183f:	push   ebx
  411840:	aas    
  411841:	and    ah,BYTE PTR ds:[esp+ebp*2+0x23d5388a]
  411849:	push   ds
  41184a:	dec    ebp
  41184b:	push   0xec771436
  411850:	dec    ecx
  411851:	sub    DWORD PTR [edi+0x648cc241],ebp
  411857:	sbb    bl,BYTE PTR [eax]
  411859:	test   BYTE PTR ds:0xf26269a6,0x92
  411860:	in     eax,dx
  411861:	pushw  ss
  411863:	(bad)  
  411864:	(bad)  
  411865:	mov    gs:0x3f68ab9d,al
  41186b:	ins    BYTE PTR es:[edi],dx
  41186c:	push   DWORD PTR [edx-0x7dd4e980]
  411872:	mov    ebx,0x100fec38
  411877:	jns    0xf73b2dec
  41187d:	leave  
  41187e:	xor    ah,BYTE PTR [ecx+0x2850cdc3]
  411884:	sahf   
  411885:	sahf   
  411886:	ficomp WORD PTR [edi*8-0x44d41057]
  41188d:	enter  0x379f,0x5f
  411891:	lods   al,BYTE PTR ds:[esi]
  411892:	push   ebx
  411893:	pop    es
  411894:	scas   eax,DWORD PTR es:[edi]
  411895:	leave  
  411896:	fld    DWORD PTR [edi]
  411898:	push   edi
  411899:	iret   
  41189a:	push   esi
  41189b:	fs dec eax
  41189d:	xchg   esp,eax
  41189e:	inc    eax
  41189f:	pop    es
  4118a0:	mov    ds:0xaacced08,al
  4118a5:	int    0xf5
  4118a7:	dec    ebx
  4118a8:	in     al,0x9
  4118aa:	mov    al,ds:0x78660a49
  4118af:	ja     0x41184a
  4118b1:	mov    cl,0x97
  4118b3:	and    cl,0x14
  4118b6:	stos   BYTE PTR es:[edi],al
  4118b7:	shl    BYTE PTR [esi-0x80],1
  4118ba:	nop
  4118bb:	les    edi,FWORD PTR [ebp-0x7742197e]
  4118c1:	pop    edx
  4118c2:	xchg   ebx,eax
  4118c3:	push   ebx
  4118c4:	cmp    eax,0x93b226d1
  4118c9:	dec    esp
  4118ca:	imul   esp,DWORD PTR [eax+0x33d68b5],0x66
  4118d1:	popa   
  4118d2:	and    al,BYTE PTR [edi+0x5e]
  4118d5:	shr    BYTE PTR [ecx-0x41],1
  4118d8:	sub    eax,DWORD PTR [edx]
  4118da:	call   0xf661:0xab77a498
  4118e1:	pop    eax
  4118e2:	(bad)  
  4118e3:	into   
  4118e4:	data16 das 
  4118e6:	xor    DWORD PTR [esi+0x75],0x64
  4118ea:	mov    ss,WORD PTR [ecx+0x1976b0fa]
  4118f0:	jnp    0x4118f5
  4118f2:	adc    al,0x5a
  4118f4:	jge    0x4118aa
  4118f6:	icebp  
  4118f7:	mov    BYTE PTR [edi],al
  4118f9:	xchg   BYTE PTR [edx+0x6830009b],dl
  4118ff:	sbb    al,0xbb
  411901:	arpl   WORD PTR [ebp+0x23],di
  411904:	test   BYTE PTR [ecx],ah
  411906:	add    eax,0x6a8201ba
  41190b:	mov    ds:0x14b763ea,al
  411910:	or     DWORD PTR [ebx],ecx
  411912:	push   0x6
  411914:	mul    DWORD PTR [ebp+eax*2+0x9db538a]
  41191b:	mov    bl,0xc
  41191d:	pop    ss
  41191e:	and    DWORD PTR [esi+0x60],ebp
  411921:	or     DWORD PTR [esi+0x182ca3e5],esi
  411927:	fild   DWORD PTR [ecx-0x4c3d3c98]
  41192d:	aad    0x3a
  41192f:	mov    bh,0x6b
  411931:	fsubr  DWORD PTR [edx-0x7c]
  411934:	or     BYTE PTR [edx],bl
  411936:	pop    edi
  411937:	stos   BYTE PTR es:[edi],al
  411938:	out    0x9c,al
  41193a:	in     al,dx
  41193b:	jl     0x4118f6
  41193d:	hlt    
  41193e:	sbb    BYTE PTR [ebp-0x13435bbd],bh
  411944:	inc    esi
  411945:	rcl    BYTE PTR [ecx+0x62cc9cbd],1
  41194b:	lods   al,BYTE PTR ds:[esi]
  41194c:	ror    BYTE PTR [eax-0x186fd6f0],cl
  411952:	jnp    0x411938
  411954:	xchg   edx,eax
  411955:	adc    eax,edx
  411957:	into   
  411958:	push   esp
  411959:	mov    cl,0xb4
  41195b:	jg     0x411905
  41195d:	mov    ?,WORD PTR [edi+0x7b446c78]
  411963:	xor    DWORD PTR [ebp-0x5254acc2],esp
  411969:	sbb    ebp,DWORD PTR gs:0x6291aac8
  411970:	mov    al,ds:0x13e9d174
  411975:	mov    al,ds:0x5f835314
  41197a:	fstp   st(3)
  41197c:	jno    0x4119a3
  41197e:	mov    esi,DWORD PTR [ebx-0x2a]
  411981:	adc    edx,DWORD PTR [esi+0x327e3aae]
  411987:	loop   0x41193d
  411989:	and    ecx,esi
  41198b:	fwait
  41198c:	jg     0x41195f
  41198e:	lods   al,BYTE PTR ds:[esi]
  41198f:	(bad)  
  411990:	outs   dx,DWORD PTR ds:[esi]
  411991:	shr    BYTE PTR [esp+esi*2],1
  411994:	xor    ebx,DWORD PTR [ebx]
  411996:	fcom   DWORD PTR [edx-0x1655aca8]
  41199c:	pusha  
  41199d:	jp     0x4119bd
  41199f:	les    edi,FWORD PTR [esi-0x1b]
  4119a2:	cwde   
  4119a3:	mov    ebx,0xee29883c
  4119a8:	xchg   esi,eax
  4119a9:	pusha  
  4119aa:	adc    BYTE PTR [ebp-0xeea827b],0x1d
  4119b1:	sbb    al,0xc9
  4119b3:	push   esp
  4119b4:	mov    al,0x75
  4119b6:	and    esi,DWORD PTR [ecx]
  4119b8:	hlt    
  4119b9:	es jae 0x4119c5
  4119bc:	ret    0xc197
  4119bf:	ret    
  4119c0:	mov    bh,0xad
  4119c2:	push   ecx
  4119c3:	call   esi
  4119c5:	add    al,0xdf
  4119c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c8:	sub    DWORD PTR [ecx],ebp
  4119ca:	cli    
  4119cb:	sub    eax,0xc414b893
  4119d0:	mov    BYTE PTR [esi+0x986cd67],ch
  4119d6:	(bad)  
  4119d7:	xchg   esp,eax
  4119d8:	pop    edx
  4119d9:	ds add eax,0x93a5b932
  4119df:	sahf   
  4119e0:	mov    ecx,0xc70b0791
  4119e5:	add    DWORD PTR [ebx],ebp
  4119e7:	adc    eax,0x1eeae39e
  4119ec:	or     ah,dl
  4119ee:	dec    ebx
  4119ef:	addr16 (bad) 
  4119f1:	call   0x5d03:0x506dda82
  4119f8:	aam    0x42
  4119fa:	fmul   DWORD PTR [esi+0x38]
  4119fd:	mov    ds:0xc0dec9f2,al
  411a02:	out    0x1a,al
  411a04:	fiadd  DWORD PTR [esi-0x37fa411a]
  411a0a:	jae    0x4119e6
  411a0c:	fisttp QWORD PTR [edx-0x42]
  411a0f:	bound  esi,QWORD PTR [edi]
  411a11:	mov    al,ds:0x4b4882aa
  411a16:	clc    
  411a17:	pop    ebx
  411a18:	pop    edx
  411a19:	bnd jns 0x411a0e
  411a1c:	dec    ecx
  411a1d:	js     0x411a4a
  411a1f:	test   al,0x25
  411a21:	xor    DWORD PTR [ecx+esi*4-0xaa29413],0xffffff9b
  411a29:	push   edi
  411a2a:	sbb    BYTE PTR [ebp+eiz*4-0x145f299e],ah
  411a31:	pop    esi
  411a32:	cdq    
  411a33:	ret    
  411a34:	cli    
  411a35:	cmp    dl,bl
  411a37:	aaa    
  411a38:	ss xor ebx,ebx
  411a3b:	sbb    esp,esi
  411a3d:	ss clc 
  411a3f:	pop    edx
  411a40:	iret   
  411a41:	add    ebp,DWORD PTR [bx]
  411a44:	sbb    eax,0x190dfb43
  411a49:	dec    esi
  411a4a:	mov    bh,0x98
  411a4c:	sub    BYTE PTR [esi],dh
  411a4e:	push   edx
  411a4f:	call   0x9ca01cdf
  411a54:	xor    bh,BYTE PTR [ecx]
  411a56:	mov    esp,0x61d699a5
  411a5b:	inc    esi
  411a5c:	and    edx,DWORD PTR ds:0xf24defcd
  411a62:	cdq    
  411a63:	das    
  411a64:	out    dx,al
  411a65:	in     eax,dx
  411a66:	xlat   BYTE PTR ds:[ebx]
  411a67:	add    DWORD PTR [ecx],ecx
  411a69:	add    al,BYTE PTR [ebx-0x30]
  411a6c:	movzx  esp,BYTE PTR [esi]
  411a6f:	mov    eax,ds:0x1d4c468d
  411a74:	xor    bl,BYTE PTR [ecx]
  411a76:	test   eax,0x233fd491
  411a7b:	pop    ds
  411a7c:	loop   0x411a51
  411a7e:	xor    al,0x50
  411a80:	pop    eax
  411a81:	add    BYTE PTR [ebp+0x33c6bf9e],0x7f
  411a88:	push   0xfffffffe
  411a8a:	mov    WORD PTR [eax],es
  411a8c:	icebp  
  411a8d:	push   esi
  411a8e:	dec    ebp
  411a8f:	mov    BYTE PTR [ebx-0x2e41e0e2],ch
  411a95:	add    BYTE PTR [esi+0x5e],0xe8
  411a99:	jp     0x411a1d
  411a9b:	ja     0x411ab7
  411a9d:	loopne 0x411a5d
  411a9f:	gs leave 
  411aa1:	mov    ecx,0x6e3e780
  411aa6:	sbb    edi,ecx
  411aa8:	sahf   
  411aa9:	mov    bh,0xcf
  411aab:	test   al,0x7c
  411aad:	clc    
  411aae:	jns    0x411a39
  411ab0:	aad    0x4a
  411ab2:	adc    BYTE PTR [ebp-0x22d8151a],bh
  411ab8:	scas   al,BYTE PTR es:[edi]
  411ab9:	pop    ds
  411aba:	aad    0x44
  411abc:	iret   
  411abd:	aaa    
  411abe:	cmc    
  411abf:	retf   
  411ac0:	cmp    eax,0x1f3ea757
  411ac5:	sub    al,0x20
  411ac7:	cmp    al,0x3d
  411ac9:	mov    ds,WORD PTR [edi-0x75979ca]
  411acf:	leave  
  411ad0:	fistp  WORD PTR ds:0x4cd3bc9b
  411ad6:	mov    dl,0x92
  411ad8:	sahf   
  411ad9:	int    0xd5
  411adb:	dec    ebp
  411adc:	xor    al,cl
  411ade:	add    BYTE PTR [eax-0x2b],0x60
  411ae2:	pop    ebx
  411ae3:	dec    edx
  411ae4:	fwait
  411ae5:	loopne 0x411b03
  411ae7:	cmp    eax,0xd9d5d9bb
  411aec:	(bad)  
  411aed:	in     eax,0xed
  411aef:	iret   
  411af0:	mov    dl,BYTE PTR [ebx]
  411af2:	fstp   st(1)
  411af4:	mul    dl
  411af6:	lods   eax,DWORD PTR ds:[esi]
  411af7:	ja     0x411b76
  411af9:	inc    ecx
  411afa:	dec    ebp
  411afb:	push   esp
  411afc:	add    dl,cl
  411afe:	loopne 0x411b59
  411b00:	loope  0x411b0e
  411b02:	enter  0x5453,0xc4
  411b06:	sub    esp,edx
  411b08:	fild   QWORD PTR [ebx]
  411b0a:	cs sbb eax,0xa11d53cc
  411b10:	sub    DWORD PTR [ecx-0x68],ebx
  411b13:	repnz or eax,DWORD PTR [esi-0x20]
  411b17:	ret    0x38a3
  411b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b1b:	ds inc edx
  411b1d:	cwde   
  411b1e:	cmp    BYTE PTR [ebx-0x51b0d24d],bl
  411b24:	add    BYTE PTR [edi],cl
  411b26:	mov    esi,0x5be4398f
  411b2b:	imul   BYTE PTR [edi+ebx*1]
  411b2e:	mov    dh,0x9d
  411b30:	sahf   
  411b31:	and    al,0x3
  411b33:	xchg   esi,eax
  411b34:	mov    esp,0x23292ab7
  411b39:	jp     0x411add
  411b3b:	fistp  DWORD PTR [ebp-0x25ffa493]
  411b41:	mov    bl,0x40
  411b43:	pop    ds
  411b44:	in     eax,0x92
  411b46:	pop    edi
  411b47:	gs popa 
  411b49:	js     0x411b3c
  411b4b:	mov    eax,ds:0x3b0e1205
  411b50:	sti    
  411b51:	lahf   
  411b52:	or     dl,bh
  411b54:	shr    DWORD PTR [ebx],cl
  411b56:	push   esp
  411b57:	adc    eax,0x5ab52125
  411b5c:	sahf   
  411b5d:	(bad)  
  411b5e:	mul    DWORD PTR [esi]
  411b60:	fdivr  QWORD PTR [ebx+0x78b5d2c9]
  411b66:	sub    bl,bh
  411b68:	pop    eax
  411b69:	push   ss
  411b6a:	and    bh,ch
  411b6c:	ins    DWORD PTR es:[edi],dx
  411b6d:	jmp    FWORD PTR [edx-0x6c7a78e0]
  411b73:	adc    DWORD PTR [ebx-0x1ead3c54],ebx
  411b79:	test   esi,eax
  411b7b:	pop    es
  411b7c:	lahf   
  411b7d:	leave  
  411b7e:	pop    ss
  411b7f:	jnp    0x411bc0
  411b81:	fcom   QWORD PTR [edx+0x37b0c074]
  411b87:	add    BYTE PTR [edi-0x6935ab09],dh
  411b8d:	pop    edi
  411b8e:	imul   ecx,edi,0xffffffdf
  411b91:	jnp    0x411b1c
  411b93:	jnp    0x411b42
  411b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b96:	outs   dx,DWORD PTR ds:[esi]
  411b97:	pop    ss
  411b98:	cmp    DWORD PTR [ecx+0x36074bdb],eax
  411b9e:	push   0x7a
  411ba0:	mov    eax,ds:0xa935392b
  411ba5:	xor    bh,cl
  411ba7:	jb     0x411b53
  411ba9:	pop    ecx
  411baa:	js     0x411bc1
  411bac:	mov    esi,0x7c3f97ca
  411bb1:	jnp    0x411b8b
  411bb3:	xor    al,0xdb
  411bb5:	outs   dx,BYTE PTR ds:[esi]
  411bb6:	jae    0x411b77
  411bb8:	inc    esp
  411bb9:	cli    
  411bba:	mov    al,BYTE PTR [ebx]
  411bbc:	cli    
  411bbd:	leave  
  411bbe:	lea    eax,[eax]
  411bc0:	xchg   esi,eax
  411bc1:	sbb    edx,DWORD PTR [eax-0x33]
  411bc4:	fild   DWORD PTR [esi]
  411bc6:	mov    WORD PTR [ecx],cs
  411bc8:	mov    ds:0xa41b8ce9,eax
  411bcd:	xchg   ecx,eax
  411bce:	push   eax
  411bcf:	ja     0x411bf7
  411bd1:	test   al,0xcf
  411bd3:	ja     0x411c0b
  411bd5:	imul   eax,DWORD PTR [eax-0x1e539683],0x6333de80
  411bdf:	mov    bl,0x87
  411be1:	mov    edx,0x4ea31bcd
  411be6:	adc    al,0xc8
  411be8:	push   0xffffff95
  411bea:	repz aas 
  411bec:	pop    edi
  411bed:	jns    0x411c66
  411bef:	sti    
  411bf0:	das    
  411bf1:	idiv   BYTE PTR [esi]
  411bf3:	(bad)  
  411bf4:	cs gs pop ecx
  411bf7:	or     edi,DWORD PTR [eax+0x18]
  411bfa:	hlt    
  411bfb:	das    
  411bfc:	mov    dh,BYTE PTR [ecx+0x60efd051]
  411c02:	pop    edi
  411c03:	mov    ecx,0x7cda5363
  411c08:	jecxz  0x411c00
  411c0a:	xlat   BYTE PTR ds:[ebx]
  411c0b:	push   0xc7a070e4
  411c10:	add    edi,DWORD PTR [ecx]
  411c12:	pop    ecx
  411c13:	out    dx,al
  411c14:	xor    esp,DWORD PTR [ecx-0x7b]
  411c17:	pusha  
  411c18:	popa   
  411c19:	clc    
  411c1a:	xchg   esi,eax
  411c1b:	add    DWORD PTR [ecx-0x14b8e490],0x47
  411c22:	(bad)  
  411c23:	fdiv   DWORD PTR [esi+0x6]
  411c26:	test   DWORD PTR [esi-0x50],0xef4a99d3
  411c2d:	outs   dx,BYTE PTR ds:[esi]
  411c2e:	inc    ebp
  411c2f:	fst    QWORD PTR [edi+0x1d21b32]
  411c35:	loop   0x411bfa
  411c37:	(bad)  
  411c38:	push   edi
  411c39:	mov    ds:0x2803bde0,eax
  411c3e:	shl    BYTE PTR [ebx],0x67
  411c41:	mov    ebx,0xe36b6aa1
  411c46:	mov    ds:0x7a65dc1a,eax
  411c4b:	gs addr16 sahf 
  411c4e:	adc    ebx,DWORD PTR [eax+esi*4-0x39]
  411c52:	outs   dx,DWORD PTR ds:[esi]
  411c53:	add    al,0x37
  411c55:	mov    cl,0x6a
  411c57:	stos   DWORD PTR es:[edi],eax
  411c58:	(bad)  
  411c59:	and    eax,0xab85a0f8
  411c5e:	jle    0x411c7e
  411c60:	dec    ebp
  411c61:	loopne 0x411c47
  411c63:	aad    0x6
  411c65:	xor    al,0x4f
  411c67:	mov    esp,0xff449710
  411c6c:	pop    esp
  411c6d:	xor    BYTE PTR [ebx+0x248072ee],ch
  411c73:	sub    ch,BYTE PTR [esi+ebx*2+0x66353d53]
  411c7a:	adc    al,0x9c
  411c7c:	dec    esi
  411c7d:	das    
  411c7e:	int    0xb8
  411c80:	ss loopne 0x411ce4
  411c83:	jl     0x411c79
  411c85:	aaa    
  411c86:	dec    ecx
  411c87:	mov    edx,0xddb16178
  411c8c:	mov    esp,0x335e6788
  411c91:	mov    edi,0xb0e547de
  411c96:	mov    ds:0xf0ea94d7,eax
  411c9b:	sbb    bl,dh
  411c9d:	add    ebx,esi
  411c9f:	mov    ah,0xa4
  411ca1:	loop   0x411caa
  411ca3:	push   es
  411ca4:	push   0xffffffd2
  411ca6:	popa   
  411ca7:	or     ecx,esp
  411ca9:	ins    BYTE PTR es:[edi],dx
  411caa:	adc    al,al
  411cac:	lds    ebp,FWORD PTR [ebx+esi*2-0x2086ce25]
  411cb3:	stos   DWORD PTR es:[edi],eax
  411cb4:	mov    ds:0xe0d25042,al
  411cb9:	inc    ecx
  411cba:	xchg   edi,eax
  411cbb:	xchg   esp,eax
  411cbc:	jl     0x411cd4
  411cbe:	rcl    BYTE PTR [edx],0x7f
  411cc1:	adc    ebp,ecx
  411cc3:	adc    al,BYTE PTR [ebx-0x4f5a14e0]
  411cc9:	jl     0x411d06
  411ccb:	pushf  
  411ccc:	shr    esp,cl
  411cce:	and    ebp,DWORD PTR [eax]
  411cd0:	or     bh,BYTE PTR [esi+0x75]
  411cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd4:	nop
  411cd5:	add    ch,dh
  411cd7:	cmp    eax,0x79c823cd
  411cdc:	loopne 0x411c94
  411cde:	rcr    dh,1
  411ce0:	mov    edx,ebp
  411ce2:	call   0xf78e:0x9ca1d787
  411ce9:	xchg   esp,eax
  411cea:	int    0x67
  411cec:	xchg   ebx,eax
  411ced:	in     al,0x33
  411cef:	ja     0x411d70
  411cf1:	xor    ah,BYTE PTR [edx-0x6e]
  411cf4:	push   es
  411cf5:	push   cs
  411cf6:	lods   al,BYTE PTR ds:[esi]
  411cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf8:	sbb    cl,ah
  411cfa:	lock bound eax,QWORD PTR [edx]
  411cfd:	jns    0x411cb2
  411cff:	xchg   BYTE PTR [ebp-0x78],dl
  411d02:	mov    ecx,0x2a27d40c
  411d07:	enter  0xcb2f,0xd6
  411d0b:	stc    
  411d0c:	push   ss
  411d0d:	jl     0x411d78
  411d0f:	mov    bl,0x35
  411d11:	pop    ebx
  411d12:	xchg   edi,eax
  411d13:	push   0x4400188d
  411d18:	xchg   BYTE PTR [ecx-0x76ca195f],ch
  411d1e:	sub    al,0xc4
  411d20:	mov    ch,0xb4
  411d22:	mov    ?,WORD PTR [esi+0x6c1e229c]
  411d28:	scas   al,BYTE PTR es:[edi]
  411d29:	xchg   ch,ch
  411d2b:	mov    dl,0x52
  411d2d:	daa    
  411d2e:	cmp    al,0xf
  411d30:	xchg   edx,esi
  411d32:	pushf  
  411d33:	pop    eax
  411d34:	xor    al,0x18
  411d36:	nop
  411d37:	outs   dx,BYTE PTR ds:[esi]
  411d38:	das    
  411d39:	addr16 mov edi,0x44b9cb00
  411d3f:	pop    ebx
  411d40:	add    BYTE PTR [ecx+0x45],bl
  411d43:	arpl   bp,di
  411d45:	je     0x411dad
  411d47:	in     al,0x8b
  411d49:	adc    eax,0xeae403e4
  411d4e:	dec    ecx
  411d4f:	xchg   esi,eax
  411d50:	in     al,0x2b
  411d52:	pusha  
  411d53:	ret    0x15c6
  411d56:	(bad)  
  411d57:	jb     0x411d61
  411d59:	fadd   DWORD PTR [eax-0x6e0c153a]
  411d5f:	call   0x80f16962
  411d64:	jecxz  0x411d47
  411d66:	jg     0x411daa
  411d68:	rcr    DWORD PTR [edx-0xb],1
  411d6b:	jp     0x411da8
  411d6d:	pop    edi
  411d6e:	adc    ebp,DWORD PTR [ebp+esi*1-0x1]
  411d72:	mov    dh,0x7b
  411d74:	mov    eax,ds:0x2d918be6
  411d79:	mov    esi,0x723a5a50
  411d7e:	sti    
  411d7f:	(bad)  
  411d80:	cmp    ebx,eax
  411d82:	mul    DWORD PTR [esi+edi*4+0x2102e81f]
  411d89:	imul   eax,DWORD PTR [ecx-0x76647992],0x1918322a
  411d93:	inc    esp
  411d94:	push   cs
  411d95:	int3   
  411d96:	push   esi
  411d97:	das    
  411d98:	test   DWORD PTR [ebx],ebx
  411d9a:	dec    edi
  411d9b:	repnz mov dh,BYTE PTR [ecx+0x35]
  411d9f:	test   eax,0x66276217
  411da4:	add    eax,DWORD PTR [edx+eiz*4+0x11587005]
  411dab:	test   BYTE PTR [ecx+0x6a],bl
  411dae:	pop    edx
  411daf:	jbe    0x411e0a
  411db1:	sub    DWORD PTR [edx+0x2b],0x56
  411db5:	imul   eax,DWORD PTR [edi-0x4134caab],0x12
  411dbc:	fld    QWORD PTR [esi-0x38caf210]
  411dc2:	pop    eax
  411dc3:	test   DWORD PTR [eax],eax
  411dc5:	pop    ecx
  411dc6:	dec    eax
  411dc7:	in     al,0xa1
  411dc9:	xchg   BYTE PTR [edx-0x67c34a6a],bh
  411dcf:	cmp    ah,cl
  411dd1:	dec    ebx
  411dd2:	mov    bh,0xbb
  411dd4:	test   BYTE PTR [ebp+0xbb3acaf],bl
  411dda:	xor    DWORD PTR [eax-0x15],esp
  411ddd:	int3   
  411dde:	fdiv   QWORD PTR [eax]
  411de0:	inc    ebp
  411de1:	pop    ds
  411de2:	xor    eax,0x7e071349
  411de7:	xchg   ecx,eax
  411de8:	xchg   edi,eax
  411de9:	arpl   bx,di
  411deb:	cmp    bl,BYTE PTR [eax]
  411ded:	loop   0x411dc4
  411def:	cmp    ah,BYTE PTR [edx+0x2733d63b]
  411df5:	pop    ds
  411df6:	add    edi,DWORD PTR [esi-0x3a57223]
  411dfc:	adc    DWORD PTR [eax-0x15ede9c5],edi
  411e02:	xor    ah,dh
  411e04:	mov    ebp,?
  411e06:	or     al,cl
  411e08:	mov    edx,0x4e3e301
  411e0d:	and    eax,0xde7aceec
  411e12:	in     al,dx
  411e13:	jmp    0xda6eb65c
  411e18:	dec    esi
  411e19:	bndldx bnd1,[ecx+0x10]
  411e1d:	cmp    ch,BYTE PTR [esi+0x3e64b212]
  411e23:	pop    ebx
  411e24:	or     al,0xad
  411e26:	cmp    DWORD PTR [eax+0x641d90ee],0xe61db211
  411e30:	cmp    ch,BYTE PTR [eax+0x6f]
  411e33:	jmp    0x4be6ca3f
  411e38:	fs clc 
  411e3a:	arpl   WORD PTR [ecx],ax
  411e3c:	sub    esi,DWORD PTR [ecx]
  411e3e:	addr16 ret 0xe9fc
  411e42:	inc    edi
  411e43:	enter  0x9c84,0xc5
  411e47:	and    eax,0x61b8f9c7
  411e4c:	fwait
  411e4d:	inc    esi
  411e4e:	call   0x6f78:0xf3c2aaae
  411e55:	xchg   edi,eax
  411e56:	inc    edi
  411e57:	push   ebx
  411e58:	push   ss
  411e59:	or     dl,bl
  411e5b:	dec    esp
  411e5c:	icebp  
  411e5d:	(bad)  
  411e5e:	neg    DWORD PTR [eax+0x4]
  411e61:	cmp    ebx,DWORD PTR [eax+0x1219e863]
  411e67:	inc    esp
  411e68:	pop    edx
  411e69:	add    esp,DWORD PTR [ecx]
  411e6b:	xchg   ebx,eax
  411e6c:	rcr    al,cl
  411e6e:	aaa    
  411e6f:	imul   ebp,DWORD PTR [edx-0x3b1f98de],0xec53357b
  411e79:	jecxz  0x411eb6
  411e7b:	pop    ebx
  411e7c:	pop    eax
  411e7d:	jnp    0x411e72
  411e7f:	mov    ecx,ebp
  411e81:	jno    0x411e58
  411e83:	push   esp
  411e84:	mov    ecx,0xe5723a03
  411e89:	add    eax,DWORD PTR [edi+0x3138f572]
  411e8f:	out    0xd8,al
  411e91:	mov    eax,ds:0xc21ffb1
  411e96:	test   eax,0x2e766e8b
  411e9b:	ret    0x6f74
  411e9e:	ins    DWORD PTR es:[edi],dx
  411e9f:	ret    
  411ea0:	std    
  411ea1:	xor    BYTE PTR [esi],cl
  411ea3:	shl    BYTE PTR [edx],1
  411ea5:	imul   BYTE PTR [esi+0x1e]
  411ea8:	(bad)  
  411ea9:	scas   al,BYTE PTR es:[edi]
  411eaa:	push   ecx
  411eab:	rol    dl,1
  411ead:	repz ffree st(1)
  411eb0:	into   
  411eb1:	add    al,0x9f
  411eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb4:	mov    ebp,DWORD PTR es:[ebx+0x46595335]
  411ebb:	cmc    
  411ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ebd:	cmp    eax,0x77df8019
  411ec2:	cdq    
  411ec3:	inc    DWORD PTR [eax+0x1807effe]
  411ec9:	mov    ds:0x1134f13e,al
  411ece:	mov    ecx,0x18a1d0fc
  411ed3:	sub    DWORD PTR [ebx-0x1fc95334],esi
  411ed9:	xor    eax,0xaaa32142
  411ede:	jge    0x411f3e
  411ee0:	and    ch,0x4
  411ee3:	loope  0x411ec5
  411ee5:	pop    edx
  411ee6:	call   0xa8c7:0x912d06c0
  411eed:	call   0x8d5c:0x3f36217c
  411ef4:	outs   dx,BYTE PTR ds:[esi]
  411ef5:	jl     0x411f31
  411ef7:	jne    0x411ed6
  411ef9:	shl    esp,1
  411efb:	sti    
  411efc:	or     eax,0x38b29af
  411f01:	lahf   
  411f02:	or     eax,0x57eeca04
  411f07:	lds    esp,FWORD PTR [edx-0x6]
  411f0a:	inc    esi
  411f0b:	mov    eax,DWORD PTR [esi+ebx*4+0x3cfb102d]
  411f12:	xor    BYTE PTR [esi],dh
  411f14:	js     0x411f5a
  411f16:	sbb    al,0x2
  411f18:	push   es
  411f19:	inc    ecx
  411f1a:	push   edx
  411f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f1c:	aam    0xbf
  411f1e:	pop    esi
  411f1f:	daa    
  411f20:	loope  0x411f6c
  411f22:	jecxz  0x411f68
  411f24:	cli    
  411f25:	pop    ecx
  411f26:	and    DWORD PTR [edi],edx
  411f28:	mov    WORD PTR [eax],ss
  411f2a:	std    
  411f2b:	jge    0x411ed5
  411f2d:	adc    al,0xa8
  411f2f:	push   ecx
  411f30:	loopne 0x411f1c
  411f32:	cmp    eax,0x7eec20fd
  411f37:	pop    ebx
  411f38:	jge    0x411f9e
  411f3a:	cmovne ebx,ebp
  411f3d:	imul   ebx,DWORD PTR [ebx+0xf8c1413],0xffffff90
  411f44:	push   edi
  411f45:	in     al,dx
  411f46:	xchg   esp,eax
  411f47:	fcmovu st,st(0)
  411f49:	push   cs
  411f4a:	sub    esp,edi
  411f4c:	loope  0x411eef
  411f4e:	jmp    0xfe0456bc
  411f53:	sub    DWORD PTR [edi],eax
  411f55:	into   
  411f56:	stos   BYTE PTR es:[edi],al
  411f57:	data16 fild WORD PTR [eax+ebx*1+0x33]
  411f5c:	xor    eax,0xb6c0b252
  411f61:	add    eax,0x19011c8c
  411f66:	jl     0x411fcc
  411f68:	jge    0x411f41
  411f6a:	dec    esp
  411f6b:	push   eax
  411f6c:	das    
  411f6d:	jg     0x411fd0
  411f6f:	jno    0x411f8a
  411f71:	xchg   esi,eax
  411f72:	in     eax,0xa5
  411f74:	jle    0x411fc1
  411f76:	mov    eax,0x67aa4c10
  411f7b:	(bad)  
  411f7c:	xchg   ebx,eax
  411f7d:	and    DWORD PTR [esi-0x25],edx
  411f80:	clc    
  411f81:	daa    
  411f82:	xor    al,0xc2
  411f84:	push   ss
  411f85:	push   0xffffffa4
  411f87:	out    0x19,eax
  411f89:	call   0x7c1f28ef
  411f8e:	mov    cl,0xf5
  411f90:	repnz bound edx,QWORD PTR [ecx-0x4b]
  411f94:	cmc    
  411f95:	jae    0x411f6b
  411f97:	cli    
  411f98:	and    DWORD PTR [ebx-0x1f544a23],0xa03983c0
  411fa2:	xchg   ecx,eax
  411fa3:	mov    WORD PTR [ebx+0x7d6cabc9],ds
  411fa9:	mov    BYTE PTR [edx-0x1d],bl
  411fac:	in     al,0x95
  411fae:	push   esi
  411faf:	and    ah,BYTE PTR [eax+0x36]
  411fb2:	jmp    0x44fa6cd2
  411fb7:	pop    esi
  411fb8:	inc    eax
  411fb9:	inc    ebp
  411fba:	lods   eax,DWORD PTR ds:[esi]
  411fbb:	into   
  411fbc:	cld    
  411fbd:	dec    ecx
  411fbe:	mov    al,BYTE PTR [esi]
  411fc0:	lock call 0xeb4c2240
  411fc6:	add    bl,BYTE PTR [ecx]
  411fc8:	jmp    0x3ae4:0x40934442
  411fcf:	cmp    BYTE PTR [edx],cl
  411fd1:	in     al,0x79
  411fd3:	push   edi
  411fd4:	leave  
  411fd5:	push   ds
  411fd6:	push   esp
  411fd7:	gs sbb al,0x84
  411fda:	out    dx,al
  411fdb:	cwde   
  411fdc:	or     bh,cl
  411fde:	test   eax,0x19a9b242
  411fe3:	adc    al,0x72
  411fe5:	push   esi
  411fe6:	jmp    0xc16765a2
  411feb:	icebp  
  411fec:	xor    eax,0x2064982f
  411ff1:	enter  0xf581,0xb7
  411ff5:	push   ecx
  411ff6:	cmp    al,0x4d
  411ff8:	mov    al,ds:0xe8325449
  411ffd:	fldenv [eax+eax*8+0x2ed8c9fc]
  412004:	out    0xe5,eax
  412006:	aam    0xcd
  412008:	cs out 0x9d,eax
  41200b:	mov    ah,0x6d
  41200d:	jbe    0x411ff0
  41200f:	aas    
  412010:	xor    al,0x43
  412012:	mov    dh,BYTE PTR [ebx+0x46825f3e]
  412018:	dec    edx
  412019:	daa    
  41201a:	hlt    
  41201b:	or     al,0xbf
  41201d:	xchg   DWORD PTR [ecx+0x61],esp
  412020:	(bad)  
  412021:	cmp    BYTE PTR [eax+0x22e13fc8],cl
  412027:	test   al,0x91
  412029:	jge    0x411ff6
  41202b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41202c:	cld    
  41202d:	dec    ecx
  41202e:	jns    0x4120a6
  412030:	jb     0x411fd2
  412032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412033:	clc    
  412034:	cmp    BYTE PTR [ebp+0x65],al
  412037:	add    DWORD PTR [edx],0x44651d8d
  41203d:	jge    0x41208a
  41203f:	xor    BYTE PTR [edi],ch
  412041:	pop    ebx
  412042:	push   eax
  412043:	in     al,0xff
  412045:	mov    ah,0x72
  412047:	dec    ebx
  412048:	mov    cl,0x11
  41204a:	fsubr  QWORD PTR [edx]
  41204c:	scas   eax,DWORD PTR es:[edi]
  41204d:	cmp    DWORD PTR [esi+0x20909ad7],ecx
  412053:	out    dx,eax
  412054:	scas   al,BYTE PTR es:[edi]
  412055:	ret    0x119
  412058:	or     eax,0x33ad0bfb
  41205d:	inc    ebx
  41205e:	sbb    bh,ch
  412060:	jnp    0x41205f
  412062:	ins    BYTE PTR es:[edi],dx
  412063:	pop    ss
  412064:	stc    
  412065:	cdq    
  412066:	push   ds
  412067:	cmp    dl,BYTE PTR [esi]
  412069:	lock ret 
  41206b:	les    ebp,FWORD PTR [edx]
  41206d:	cmp    DWORD PTR [ebp-0x63],esp
  412070:	mov    ecx,0x5e70f81e
  412075:	mov    bh,0x51
  412077:	xlat   BYTE PTR ds:[ebx]
  412078:	daa    
  412079:	cmp    al,0x6f
  41207b:	test   BYTE PTR ds:0x5bda589c,al
  412081:	sub    eax,0xff3510d2
  412086:	push   edi
  412087:	cdq    
  412088:	jmp    0x236c512c
  41208d:	dec    ebx
  41208e:	pop    ecx
  41208f:	fld    st(4)
  412091:	mov    ebx,0xd14615ce
  412096:	ror    BYTE PTR [eax-0x7f],1
  412099:	ficomp WORD PTR [edi-0x31]
  41209c:	(bad)  
  41209d:	aaa    
  41209e:	icebp  
  41209f:	mov    ch,0x52
  4120a1:	in     al,0xd2
  4120a3:	jle    0x41208c
  4120a5:	pushf  
  4120a6:	aam    0x16
  4120a8:	ins    DWORD PTR es:[edi],dx
  4120a9:	pop    eax
  4120aa:	aam    0x15
  4120ac:	mov    cl,0x63
  4120ae:	add    ebp,DWORD PTR [edx]
  4120b0:	leave  
  4120b1:	cld    
  4120b2:	ret    0x5d7c
  4120b5:	mov    edi,DWORD PTR [esi-0x35]
  4120b8:	(bad)  
  4120b9:	cdq    
  4120ba:	add    DWORD PTR [eax+0xa],0xf7e2428a
  4120c1:	and    BYTE PTR [ebx+0x0],cl
  4120c4:	int3   
  4120c5:	mov    esp,0x1c92cf66
  4120ca:	push   es
  4120cb:	int3   
  4120cc:	push   0xdf7b3af8
  4120d1:	xchg   edi,eax
  4120d2:	out    0x3,al
  4120d4:	call   0x261b:0x1c70d9ec
  4120db:	div    BYTE PTR ss:[eax]
  4120de:	test   BYTE PTR [edi+eiz*8],bl
  4120e1:	les    edx,FWORD PTR [ecx]
  4120e3:	mov    WORD PTR [edi],ds
  4120e5:	(bad)  
  4120e6:	dec    BYTE PTR [edi+0x6c620304]
  4120ec:	arpl   si,dx
  4120ee:	pop    edx
  4120ef:	pusha  
  4120f0:	mov    eax,ds:0xb601b636
  4120f5:	mov    dh,0x1c
  4120f7:	xchg   ecx,eax
  4120f8:	push   esi
  4120f9:	lods   al,BYTE PTR ss:[esi]
  4120fb:	sub    BYTE PTR [edx+0x61],dh
  4120fe:	test   eax,0x80222709
  412103:	inc    edi
  412104:	test   eax,0x837e2c78
  412109:	inc    eax
  41210a:	push   es
  41210b:	shl    BYTE PTR [ebp+edi*4+0x7e],1
  41210f:	mov    dl,0x42
  412111:	mov    al,ds:0x759abfdd
  412116:	bound  esi,QWORD PTR [edx]
  412118:	mov    ch,0x3
  41211a:	test   DWORD PTR [edx],edi
  41211c:	pushf  
  41211d:	xor    edx,ebp
  41211f:	cmp    esi,DWORD PTR [ebx+0xb9f2afa]
  412125:	dec    edx
  412126:	jb     0x412164
  412128:	ret    
  412129:	sub    al,BYTE PTR [ebp-0x1691f630]
  41212f:	shr    BYTE PTR [ecx-0x4],0xc0
  412133:	jb     0x4120c9
  412135:	mov    ds:0x7194f2d7,eax
  41213a:	mov    ecx,0x2af61f1c
  41213f:	xchg   edi,eax
  412140:	and    DWORD PTR [eax-0x5e],0xec32244b
  412147:	retf   0x4eaf
  41214a:	dec    esi
  41214b:	shl    BYTE PTR [edx],1
  41214d:	fisubr WORD PTR [esi+0x22]
  412150:	outs   dx,DWORD PTR ds:[esi]
  412151:	das    
  412152:	add    al,0x4b
  412154:	pop    edx
  412155:	push   esi
  412156:	cmp    BYTE PTR [eax-0x4410c07e],ah
  41215c:	hlt    
  41215d:	retf   
  41215e:	sbb    al,0xf9
  412160:	jmp    0x41218f
  412162:	sar    al,0x6f
  412165:	or     esp,DWORD PTR [edx-0x79]
  412168:	pop    es
  412169:	aas    
  41216a:	push   0x31569420
  41216f:	and    al,0xa
  412171:	pop    esi
  412172:	es jmp 0x3a2a:0x3b9bba42
  41217a:	sbb    BYTE PTR [ebp-0x7c747a85],ch
  412180:	pusha  
  412181:	cli    
  412182:	ret    0x3880
  412185:	xor    DWORD PTR [edx+0xdacc62e],esi
  41218b:	out    0x5e,al
  41218d:	cmp    eax,0xfca9d2b8
  412192:	test   DWORD PTR [ebp-0x4b],0xd3fabee5
  412199:	rcr    esp,1
  41219b:	jnp    0x412170
  41219d:	xor    DWORD PTR [edx+0x7a],ebx
  4121a0:	xchg   ebp,eax
  4121a1:	mov    al,0xd1
  4121a3:	jae    0x41220d
  4121a5:	xor    DWORD PTR [ebp+0x49],ecx
  4121a8:	pop    ecx
  4121a9:	and    al,0x31
  4121ab:	add    BYTE PTR [ebp+0x63],cl
  4121ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121af:	nop
  4121b0:	dec    ecx
  4121b1:	lds    ebp,FWORD PTR [edx-0x43]
  4121b4:	std    
  4121b5:	inc    eax
  4121b6:	dec    eax
  4121b7:	adc    BYTE PTR [edi+0x73],ch
  4121ba:	pusha  
  4121bb:	jbe    0x4121d3
  4121bd:	test   BYTE PTR [edx+0x3b],ah
  4121c0:	and    al,0x9d
  4121c2:	cmp    ch,ch
  4121c4:	fld    TBYTE PTR [eax+0x1e]
  4121c7:	inc    eax
  4121c8:	pop    es
  4121c9:	jp     0x41215c
  4121cb:	push   esi
  4121cc:	push   ds
  4121cd:	sub    ebp,ecx
  4121cf:	jg     0x41222a
  4121d1:	fdivp  st(1),st
  4121d3:	mov    WORD PTR [ecx+0xb],fs
  4121d6:	mov    ebx,0x8d0a3e9
  4121db:	adc    eax,0xb715b10c
  4121e0:	pop    es
  4121e1:	xchg   edx,eax
  4121e2:	xchg   esi,eax
  4121e3:	xchg   BYTE PTR [esp+esi*2+0x54],bh
  4121e7:	add    al,0x2a
  4121e9:	in     eax,0x47
  4121eb:	scas   al,BYTE PTR es:[edi]
  4121ec:	adc    al,0x9b
  4121ee:	or     DWORD PTR [esi+0x46eb9f52],0xffffffa1
  4121f5:	mov    WORD PTR [ebx],gs
  4121f7:	ret    0xbae6
  4121fa:	push   ecx
  4121fb:	aaa    
  4121fc:	inc    edx
  4121fd:	in     al,0x21
  4121ff:	sub    DWORD PTR [edi+0x24],esp
  412202:	and    BYTE PTR [edx],dl
  412204:	test   eax,0x8614eabb
  412209:	shl    DWORD PTR [ebp-0x16],1
  41220c:	retf   
  41220d:	or     DWORD PTR ds:0x49ca095a,edx
  412213:	cmp    DWORD PTR [edi],esp
  412215:	out    0x92,eax
  412217:	rol    edi,cl
  412219:	(bad)  
  41221a:	jbe    0x412225
  41221c:	inc    BYTE PTR [ebx+0x23]
  41221f:	hlt    
  412220:	imul   ebx,ebx,0x6febc5bd
  412226:	call   0x7e63991d
  41222b:	mov    bl,0x42
  41222d:	adc    al,0xa3
  41222f:	or     eax,0xcd317e9a
  412234:	cmc    
  412235:	jecxz  0x41227d
  412237:	jge    0x4122a3
  412239:	cdq    
  41223a:	dec    edi
  41223b:	cmp    ebx,DWORD PTR [eax-0x3d95ba17]
  412241:	jmp    0x412262
  412243:	lea    ebx,[esi]
  412245:	and    ebp,DWORD PTR [edx-0x47]
  412248:	stc    
  412249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41224a:	pop    ss
  41224b:	gs jb  0x4121d2
  41224e:	pop    es
  41224f:	mov    edi,ebx
  412251:	xchg   ebp,eax
  412252:	in     al,0x90
  412254:	xor    eax,0x9400b34b
  412259:	jbe    0x412251
  41225b:	lahf   
  41225c:	mov    eax,0xe2a9ea9f
  412261:	lds    eax,FWORD PTR [ecx+eax*4]
  412264:	jmp    0x412298
  412266:	or     BYTE PTR ds:0xc5426533,al
  41226c:	(bad)  
  41226d:	(bad)  
  41226e:	and    DWORD PTR [eax],0xffffffe2
  412271:	lods   eax,DWORD PTR ds:[esi]
  412272:	das    
  412273:	pop    es
  412274:	sbb    al,0x33
  412276:	push   esp
  412277:	push   ebx
  412278:	push   0xfffffff4
  41227a:	jne    0x412230
  41227c:	sbb    eax,0xf4885f01
  412281:	lds    esp,FWORD PTR [esi+0x969a597]
  412287:	pop    ebx
  412288:	loop   0x412266
  41228a:	inc    esi
  41228b:	inc    eax
  41228c:	jnp    0x4122ef
  41228e:	push   edx
  41228f:	or     dh,BYTE PTR [esi-0x49]
  412292:	hlt    
  412293:	shl    BYTE PTR ds:0x52f9b830,cl
  412299:	scas   eax,DWORD PTR es:[edi]
  41229a:	mov    ecx,0xa751d763
  41229f:	fiadd  DWORD PTR [ebp-0x7de4fe85]
  4122a5:	adc    ebx,DWORD PTR [eax]
  4122a7:	xchg   ebx,eax
  4122a8:	push   ss
  4122a9:	shl    BYTE PTR ds:0x78c9bf43,1
  4122af:	or     esp,DWORD PTR ss:[ebp-0x6e]
  4122b3:	mov    esp,0x3c5ad1eb
  4122b8:	out    0x4d,al
  4122ba:	stc    
  4122bb:	mov    eax,ds:0x53e0fd1f
  4122c0:	call   FWORD PTR [eax]
  4122c2:	jmp    0x7ab28620
  4122c7:	mov    WORD PTR [edi-0x5a1a8d83],fs
  4122cd:	add    BYTE PTR [edx+ebx*1],al
  4122d0:	push   ecx
  4122d1:	int    0xab
  4122d3:	test   al,cl
  4122d5:	xor    dl,ch
  4122d7:	iret   
  4122d8:	xor    al,0x47
  4122da:	and    edx,DWORD PTR ds:0xb8164ccc
  4122e0:	jecxz  0x412262
  4122e2:	add    bl,BYTE PTR [edi-0x57]
  4122e5:	(bad)  
  4122e6:	pop    eax
  4122e7:	fwait
  4122e8:	and    DWORD PTR [edi],esi
  4122ea:	sub    esp,DWORD PTR [edx]
  4122ec:	dec    ecx
  4122ed:	mov    ds:0xb1952285,eax
  4122f2:	test   DWORD PTR [ecx-0x79],esi
  4122f5:	mov    edx,0x420ba759
  4122fa:	ror    BYTE PTR [edx+eiz*1-0x1d5015d1],1
  412301:	cmc    
  412302:	loopne 0x41231e
  412304:	(bad)  
  412305:	sti    
  412306:	adc    al,0xf0
  412308:	(bad)  
  41230a:	fmul   st(2),st
  41230c:	or     eax,0x6a91ed54
  412311:	rcl    BYTE PTR [ebx-0x661d9053],0x44
  412318:	push   ebx
  412319:	add    al,0xd5
  41231b:	or     DWORD PTR [eax+ebx*2-0x6a],0x354b0e95
  412323:	mov    ah,BYTE PTR ds:0xdb3edda6
  412329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41232a:	xor    BYTE PTR [esi+0x29],cl
  41232d:	adc    eax,0x3f5ea367
  412332:	jae    0x412378
  412334:	fdivr  DWORD PTR [ecx]
  412336:	inc    eax
  412337:	jbe    0x4122be
  412339:	xchg   ecx,eax
  41233a:	jae    0x4123b5
  41233c:	mov    BYTE PTR [eax],ah
  41233e:	push   edx
  41233f:	jno    0x41239c
  412341:	xchg   ebp,eax
  412342:	in     al,dx
  412343:	out    0x92,eax
  412345:	gs dec ecx
  412347:	clc    
  412348:	retf   
  412349:	call   0xfb67:0xf23fc883
  412350:	mov    ah,al
  412352:	daa    
  412353:	jno    0x4122d8
  412355:	stos   DWORD PTR es:[edi],eax
  412356:	adc    eax,0xd1dd71c9
  41235b:	mov    eax,0x9c643136
  412360:	push   ebx
  412361:	cmp    dl,cl
  412363:	mov    DWORD PTR [edi-0x2a2a048c],0x247638b
  41236d:	fldcw  WORD PTR [edi+0x4376607b]
  412373:	push   cs
  412374:	stos   DWORD PTR es:[edi],eax
  412375:	fwait
  412376:	pop    ebp
  412377:	cdq    
  412378:	ss jae 0x412366
  41237b:	fadd   DWORD PTR [edx]
  41237d:	nop
  41237e:	lods   eax,DWORD PTR ds:[esi]
  41237f:	stos   DWORD PTR es:[edi],eax
  412380:	(bad)
  412384:	(bad)  
  412385:	repz les edi,FWORD PTR [eax]
  412388:	adc    BYTE PTR [edi+0x14526497],dh
  41238e:	mov    DWORD PTR gs:[ebp+0x21],edx
  412392:	loope  0x412377
  412394:	cwde   
  412395:	jbe    0x412348
  412397:	mov    ah,0x99
  412399:	xor    DWORD PTR [ebp+0x64],0x5a1e8f7c
  4123a0:	jecxz  0x4123a9
  4123a2:	inc    edx
  4123a3:	xchg   esp,eax
  4123a4:	xchg   bh,ch
  4123a6:	cmp    edx,ebx
  4123a8:	lods   al,BYTE PTR ds:[esi]
  4123a9:	(bad)  [edi-0x1813a153]
  4123af:	sub    eax,0x943a6bdf
  4123b4:	sar    DWORD PTR [eax],1
  4123b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b7:	aam    0xda
  4123b9:	fdiv   DWORD PTR ds:0x4f47713c
  4123bf:	les    esp,FWORD PTR [edx+0x63]
  4123c2:	rol    BYTE PTR [ebx-0x35bd9c0f],0x19
  4123c9:	lea    edi,[eax]
  4123cb:	sbb    eax,DWORD PTR [ebx+edi*4+0x66]
  4123cf:	cwde   
  4123d0:	scas   al,BYTE PTR es:[edi]
  4123d1:	jle    0x412436
  4123d3:	out    dx,eax
  4123d4:	in     al,dx
  4123d5:	ror    esi,0xc1
  4123d8:	inc    esp
  4123d9:	das    
  4123da:	mov    dh,0x97
  4123dc:	jecxz  0x41237b
  4123de:	scas   al,BYTE PTR es:[edi]
  4123df:	jnp    0x4123fd
  4123e1:	adc    DWORD PTR [ebp+ebx*8-0x79d11d9f],eax
  4123e8:	jl     0x41236b
  4123ea:	sbb    al,ch
  4123ec:	cdq    
  4123ed:	aas    
  4123ee:	jbe    0x4123a5
  4123f0:	xor    DWORD PTR [eax-0x17],ecx
  4123f3:	out    dx,al
  4123f4:	xchg   edx,eax
  4123f5:	in     al,0x3
  4123f7:	push   esp
  4123f8:	xchg   dl,ah
  4123fa:	adc    dh,BYTE PTR [eax+0xf]
  4123fd:	nop
  4123fe:	jle    0x41244c
  412400:	mov    esp,0xa64b4855
  412405:	xor    DWORD PTR [ecx-0x50],0x7bd023c9
  41240c:	mov    dh,0x57
  41240e:	daa    
  41240f:	(bad)  
  412410:	adc    al,0x2e
  412412:	add    dh,BYTE PTR [edi+edx*8-0x66]
  412416:	out    dx,al
  412417:	fnstcw WORD PTR [ebx]
  412419:	xor    DWORD PTR [esi],eax
  41241b:	sub    ah,BYTE PTR [esi+0x1]
  41241e:	js     0x412449
  412420:	xor    esi,DWORD PTR ds:0x408ea88e
  412426:	les    eax,FWORD PTR [edx-0x12]
  412429:	push   ebp
  41242a:	inc    esi
  41242b:	mov    ds:0x9363b0b4,eax
  412430:	push   eax
  412431:	pop    ds
  412432:	fidiv  DWORD PTR [edx+ebx*1-0x1415fda0]
  412439:	push   ds
  41243a:	out    dx,eax
  41243b:	sub    esp,ebx
  41243d:	into   
  41243e:	int    0xa
  412440:	xor    BYTE PTR [esi-0x7b1bf09c],0xeb
  412447:	vsubpd xmm3,xmm3,XMMWORD PTR [edi+0x4ed08e6b]
  41244f:	push   ds
  412450:	sub    ah,BYTE PTR [edx+0x96a9ff8]
  412456:	in     eax,dx
  412457:	cmp    ebx,DWORD PTR [edx]
  412459:	stos   BYTE PTR es:[edi],al
  41245a:	inc    ecx
  41245b:	dec    esp
  41245c:	push   eax
  41245d:	sbb    ah,BYTE PTR [ecx-0x7f98e5c4]
  412463:	xchg   edi,eax
  412464:	fcmovb st,st(5)
  412466:	push   ds
  412467:	cmp    BYTE PTR [edi-0x52],bh
  41246a:	lahf   
  41246b:	push   esi
  41246c:	lods   al,BYTE PTR ds:[esi]
  41246d:	inc    ecx
  41246e:	outs   dx,DWORD PTR ds:[esi]
  41246f:	sbb    esi,edi
  412471:	mov    esi,0x93838b74
  412476:	push   esi
  412477:	pop    ebx
  412478:	fist   WORD PTR [esi-0x4be0a03b]
  41247e:	sub    DWORD PTR ds:0x58e7f67e,ebx
  412484:	mov    edx,0xc5fbd9df
  412489:	out    0xf4,al
  41248b:	ja     0x4124ee
  41248d:	lahf   
  41248e:	mov    esp,0x28ad31f5
  412493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412494:	adc    edi,esi
  412496:	fadd   st(6),st
  412498:	jmp    0xe31afaa3
  41249d:	mov    dl,0xaa
  41249f:	call   FWORD PTR [ecx+eiz*2+0x65]
  4124a3:	or     al,0x81
  4124a5:	add    eax,0x768cc094
  4124aa:	adc    ecx,DWORD PTR ds:0x7ce7491f
  4124b0:	dec    edi
  4124b1:	test   eax,0x558958bc
  4124b6:	or     BYTE PTR [ebx+0x5d8b0855],cl
  4124bc:	test   al,0x81
  4124be:	ret    0x8fa
  4124c1:	push   edi
  4124c2:	add    BYTE PTR [edi],cl
  4124c4:	scas   eax,DWORD PTR es:[edi]
  4124c5:	ror    DWORD PTR [ecx+0x558ba855],cl
  4124cb:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4124d1:	pushf  
  4124d2:	clc    
  4124d3:	add    BYTE PTR fs:[ebx],cl
  4124d6:	ror    DWORD PTR [ecx+0x558bac55],cl
  4124dc:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  4124e2:	xor    edx,ebx
  4124e4:	mov    DWORD PTR [ebp-0x50],edx
  4124e7:	mov    edx,DWORD PTR [ebp+0x8]
  4124ea:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124ed:	add    edx,edi
  4124ef:	and    edx,ebx
  4124f1:	mov    DWORD PTR [ebp-0x4c],edx
  4124f4:	mov    edx,DWORD PTR [ebp+0x8]
  4124f7:	mov    ebx,DWORD PTR [ebp-0x48]
  4124fa:	lea    edx,[ebx+edx*1+0x241fcdf]
  412501:	mov    DWORD PTR [ebp-0x48],edx
  412504:	mov    edx,DWORD PTR [ebp+0x8]
  412507:	mov    ebx,0xfa5e1530
  41250c:	sub    ebx,edx
  41250e:	add    ebx,DWORD PTR [ebp-0x44]
  412511:	mov    DWORD PTR [ebp-0x44],ebx
  412514:	mov    edx,DWORD PTR [ebp+0x8]
  412517:	xor    edx,eax
  412519:	add    edx,esi
  41251b:	jne    0x41002c
  412521:	mov    edx,DWORD PTR [ebp-0xc]
  412524:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41252b:	mov    bl,BYTE PTR [ebp-0x1]
  41252e:	cmp    dl,bl
  412530:	je     0x41909d
  412536:	mov    ecx,DWORD PTR [ebp-0x5c]
  412539:	mov    edx,DWORD PTR [ebp-0xc]
  41253c:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412543:	mov    ebx,DWORD PTR [ebp+0xc]
  412546:	xor    ecx,eax
  412548:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ef]
  41254f:	jne    0x41b556
  412555:	mov    ecx,DWORD PTR [ebp-0x5c]
  412558:	mov    edx,DWORD PTR [ebp+0xc]
  41255b:	xor    ecx,eax
  41255d:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ef]
  412565:	mov    edx,DWORD PTR [ebp-0x18]
  412568:	xor    edx,eax
  41256a:	add    edx,esi
  41256c:	cmp    ecx,edx
  41256e:	mov    ecx,DWORD PTR [ebp-0x14]
  412571:	mov    DWORD PTR [ebp+0x8],ecx
  412574:	mov    ecx,DWORD PTR [ebp+0x8]
  412577:	je     0x41d9e3
  41257d:	jmp    0x414902
  412582:	lods   eax,DWORD PTR ds:[esi]
  412583:	xor    edi,DWORD PTR [ecx-0x65]
  412586:	out    dx,eax
  412587:	fwait
  412588:	fwait
  412589:	sub    edi,DWORD PTR [esi+0x7bf535c0]
  41258f:	dec    esi
  412590:	cmp    eax,0x7a83fe79
  412595:	jp     0x4125a9
  412597:	pop    edi
  412598:	jp     0x412614
  41259a:	inc    esp
  41259b:	(bad)
  41259e:	dec    edx
  41259f:	loop   0x412523
  4125a1:	dec    esi
  4125a2:	sar    BYTE PTR [eax],cl
  4125a4:	xor    ah,BYTE PTR [eax]
  4125a6:	dec    edx
  4125a7:	scas   eax,DWORD PTR es:[edi]
  4125a8:	imul   eax,DWORD PTR [ecx],0x31
  4125ab:	test   eax,0x9248fd0d
  4125b0:	fldenv [ebp-0x6f916d92]
  4125b6:	sub    bl,BYTE PTR [ecx]
  4125b8:	adc    al,0x73
  4125ba:	les    ebx,FWORD PTR [edx-0x6c517edf]
  4125c0:	fadd   DWORD PTR [edx+0x58157c62]
  4125c6:	pop    ds
  4125c7:	dec    esp
  4125c8:	sbb    DWORD PTR [esi+0x17283496],0xb200e3a2
  4125d2:	pop    ds
  4125d3:	out    0x31,al
  4125d5:	sub    esi,DWORD PTR [eax]
  4125d7:	rcr    BYTE PTR [ebx+0x21],cl
  4125da:	jge    0x41262f
  4125dc:	mov    ecx,0x9be146e4
  4125e1:	addr16 inc esp
  4125e3:	sbb    dl,BYTE PTR [esi+0x6c]
  4125e6:	mov    ecx,DWORD PTR [edi]
  4125e8:	xor    ecx,DWORD PTR [edx-0x70]
  4125eb:	test   al,0x1f
  4125ed:	xor    eax,0x15019951
  4125f2:	out    0x50,eax
  4125f4:	mov    ebx,DWORD PTR [edx+0x6c47c140]
  4125fa:	lahf   
  4125fb:	sbb    dl,BYTE PTR [ecx-0x25]
  4125fe:	les    eax,FWORD PTR [edi]
  412600:	sti    
  412601:	dec    ecx
  412602:	sbb    al,0x50
  412604:	mov    esi,0x2383dd49
  412609:	mov    esp,ss
  41260b:	or     eax,0x686a31d1
  412610:	stos   BYTE PTR es:[edi],al
  412611:	jo     0x412600
  412613:	jmp    0x412659
  412615:	hlt    
  412616:	pop    ebp
  412617:	sbb    edi,DWORD PTR [ecx]
  412619:	fwait
  41261a:	(bad)  
  41261b:	or     al,0xea
  41261d:	imul   eax,DWORD PTR [eax+0x6a5cc2db],0xf1cd032f
  412627:	ins    DWORD PTR es:[edi],dx
  412628:	jbe    0x4125f7
  41262a:	pop    ecx
  41262b:	jno    0x41262f
  41262d:	in     al,dx
  41262e:	das    
  41262f:	les    edi,FWORD PTR [edx+0x456f4c1c]
  412635:	mov    ebx,0x6a6b6022
  41263a:	clc    
  41263b:	enter  0xef7e,0x6f
  41263f:	sbb    al,0xdc
  412641:	mov    al,al
  412643:	mov    esi,0x24f73449
  412648:	mov    DWORD PTR [edi-0x2cdb4350],eax
  41264e:	add    dh,al
  412650:	jae    0x412690
  412652:	mov    ds:0xad76c681,eax
  412657:	bnd jl 0x41260e
  41265a:	cmp    eax,0xa0815a43
  41265f:	cwde   
  412660:	dec    edx
  412661:	(bad)  
  412662:	fdiv   DWORD PTR [esi]
  412664:	push   eax
  412665:	gs mov al,0xd9
  412668:	lock lahf 
  41266a:	adc    DWORD PTR [eax+0x625d6c6e],esi
  412670:	call   0x8dcd:0x858394fa
  412677:	add    al,0x4
  412679:	(bad)  
  41267a:	hlt    
  41267b:	jl     0x41266d
  41267d:	jp     0x4126bd
  41267f:	in     eax,dx
  412680:	(bad)  
  412682:	arpl   WORD PTR [edx-0x3d],cx
  412685:	dec    ebp
  412686:	xchg   ecx,eax
  412687:	mov    es,WORD PTR [eiz*4-0x7c0dc6c7]
  41268e:	imul   BYTE PTR [edi]
  412690:	push   esp
  412691:	ja     0x412711
  412693:	inc    esi
  412694:	push   ecx
  412695:	nop
  412696:	cmp    ecx,edx
  412698:	nop
  412699:	pushf  
  41269a:	or     dh,BYTE PTR [eax-0x627f5a47]
  4126a0:	sbb    bl,BYTE PTR [ecx]
  4126a2:	mov    ebp,DWORD PTR ds:0xb51239fe
  4126a8:	(bad)  
  4126a9:	pop    ebx
  4126aa:	xchg   ebx,eax
  4126ab:	fs cmp cl,al
  4126ae:	mov    al,0x67
  4126b0:	mov    edx,0x8852ca77
  4126b5:	scas   al,BYTE PTR es:[edi]
  4126b6:	ret    
  4126b7:	pop    ebp
  4126b8:	xlat   BYTE PTR ds:[ebx]
  4126b9:	push   edx
  4126ba:	dec    esi
  4126bb:	add    cl,BYTE PTR [esi]
  4126bd:	adc    ebp,esi
  4126bf:	pop    edx
  4126c0:	ret    
  4126c1:	ins    BYTE PTR es:[edi],dx
  4126c2:	out    dx,al
  4126c3:	push   ebx
  4126c4:	call   0xc5adc4a
  4126c9:	in     al,dx
  4126ca:	xor    BYTE PTR [eax],dh
  4126cc:	ret    0x1ba0
  4126cf:	cli    
  4126d0:	in     al,dx
  4126d1:	fdiv   DWORD PTR [ecx-0x65]
  4126d4:	nop
  4126d5:	das    
  4126d6:	jg     0x4126f0
  4126d8:	sub    esi,DWORD PTR [edx+0x24]
  4126db:	jo     0x412671
  4126dd:	fs hlt 
  4126df:	fs jp  0x41269c
  4126e2:	lds    esp,FWORD PTR [edx+ebx*4]
  4126e5:	loope  0x412689
  4126e7:	push   es
  4126e8:	sub    bl,BYTE PTR [ebx]
  4126ea:	cmc    
  4126eb:	stos   DWORD PTR es:[edi],eax
  4126ec:	jne    0x41270c
  4126ee:	out    dx,eax
  4126ef:	lea    edx,[ebx*1+0x5a2c567a]
  4126f6:	jmp    0x9e33ea23
  4126fb:	mov    ds:0xea9f6603,al
  412700:	retf   
  412701:	sub    ebx,esi
  412703:	push   0xc9113964
  412708:	jno    0x412718
  41270a:	dec    ecx
  41270b:	cmp    ecx,DWORD PTR [edi]
  41270d:	sbb    BYTE PTR [edx+0x69],ch
  412710:	(bad)  
  412711:	jp     0x4126f4
  412713:	out    0x58,al
  412715:	mov    ecx,0x8a872d57
  41271a:	push   0x2bedf80b
  41271f:	mov    cl,0x3d
  412721:	mov    edi,0x34dfb93f
  412726:	in     al,dx
  412727:	jns    0x41276c
  412729:	xor    eax,0x305d43a3
  41272e:	adc    eax,0xc29ee106
  412733:	push   esp
  412734:	pushf  
  412735:	pop    edi
  412736:	mov    al,0x8a
  412738:	daa    
  412739:	mov    ah,0x35
  41273b:	test   ch,dl
  41273d:	dec    bp
  41273f:	fwait
  412740:	inc    ebp
  412741:	jnp    0x4127b7
  412743:	jne    0x412778
  412745:	push   esp
  412746:	fmul   DWORD PTR [edx]
  412748:	xchg   esp,eax
  412749:	push   esi
  41274a:	dec    eax
  41274b:	(bad)  
  41274c:	out    0x77,eax
  41274e:	mov    cl,0x81
  412750:	mov    ds:0xcf094744,al
  412755:	pop    ss
  412756:	out    0xf1,al
  412758:	or     eax,0xd8ea3747
  41275d:	iret   
  41275e:	pushf  
  41275f:	push   0x57
  412761:	(bad)  
  412763:	enter  0xa3c0,0x3c
  412767:	dec    ebx
  412768:	pop    eax
  412769:	je     0x412717
  41276b:	pop    edx
  41276c:	rcl    DWORD PTR ds:0xfa6d6b4c,1
  412772:	mov    edx,0xb483423f
  412777:	push   edx
  412778:	dec    edi
  412779:	lods   al,BYTE PTR ds:[esi]
  41277a:	or     al,0xaf
  41277c:	rcl    BYTE PTR [edx],cl
  41277e:	hlt    
  41277f:	pop    esp
  412780:	xor    cl,dh
  412782:	mov    eax,0x1f969631
  412787:	mov    dh,0x33
  412789:	scas   eax,DWORD PTR es:[edi]
  41278a:	dec    esp
  41278b:	jmp    0xf9b5:0x3d8def47
  412792:	jne    0x4127ba
  412794:	(bad)  
  412795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412796:	pop    eax
  412797:	addr16 test eax,0x53065e97
  41279d:	aas    
  41279e:	or     ah,ah
  4127a0:	xchg   edi,eax
  4127a1:	in     eax,0x8c
  4127a3:	pop    ebx
  4127a4:	push   ecx
  4127a5:	sbb    ch,BYTE PTR [edx]
  4127a7:	mov    edi,0xfe5bd6b
  4127ac:	outs   dx,BYTE PTR ds:[esi]
  4127ad:	mov    ebx,0xc49d1dfa
  4127b2:	repnz pop esp
  4127b4:	aad    0xe2
  4127b6:	out    dx,eax
  4127b7:	jo     0x4127c7
  4127b9:	cmp    BYTE PTR [ebx-0x61],bh
  4127bc:	fdiv   QWORD PTR [esi+0x290dd604]
  4127c2:	xchg   esp,eax
  4127c3:	add    dl,ah
  4127c5:	call   0xe24:0x9eaa04bf
  4127cc:	push   es
  4127cd:	pop    ebx
  4127ce:	push   esi
  4127cf:	in     eax,0xc6
  4127d1:	stos   DWORD PTR es:[edi],eax
  4127d2:	ror    DWORD PTR [edi+0x497f34bc],cl
  4127d8:	nop
  4127d9:	loop   0x41277f
  4127db:	iret   
  4127dc:	iret   
  4127dd:	popa   
  4127de:	je     0x412776
  4127e0:	out    0x35,al
  4127e2:	and    edx,DWORD PTR [edx+edx*2+0x54]
  4127e6:	sahf   
  4127e7:	test   eax,0x6fddac0e
  4127ec:	xor    al,0x9
  4127ee:	push   ebx
  4127ef:	cmp    dh,BYTE PTR [edi+0x3bdeeeea]
  4127f5:	cmp    eax,0x5cd0713a
  4127fa:	adc    BYTE PTR [edx+esi*1-0x62],bh
  4127fe:	aaa    
  4127ff:	sub    eax,0x635864a
  412804:	push   esi
  412806:	sub    eax,0xee2f0e46
  41280b:	shr    BYTE PTR [ebx+0x62],0xf4
  41280f:	cld    
  412810:	mov    edx,0x83c12d59
  412815:	call   0xc066:0xd53c4d0
  41281c:	push   esi
  41281d:	scas   eax,DWORD PTR es:[edi]
  41281e:	push   ebx
  41281f:	dec    eax
  412820:	leave  
  412821:	mov    bh,0xf3
  412823:	xchg   BYTE PTR [edx-0x5ea212c6],cl
  412829:	sub    eax,0xbe255b70
  41282e:	cli    
  41282f:	xchg   edi,eax
  412830:	sbb    eax,DWORD PTR [esi+esi*2+0x51]
  412834:	mov    edi,0x11c1a92b
  412839:	repnz daa 
  41283b:	out    dx,al
  41283c:	pop    edx
  41283d:	adc    al,BYTE PTR [eax-0x42633d8e]
  412843:	jmp    0xccdc5d6b
  412848:	(bad)  
  412849:	popa   
  41284a:	mov    eax,ds:0x9695ef4
  41284f:	jp     0x4127df
  412851:	push   edx
  412852:	mov    dl,0x66
  412854:	and    al,BYTE PTR ss:[edi-0x7930c189]
  41285b:	iret   
  41285c:	mov    BYTE PTR [edx-0x5dd3e978],cl
  412862:	test   eax,0x28589cc4
  412867:	xchg   esp,eax
  412868:	adc    bh,BYTE PTR [ecx]
  41286a:	jno    0x4128b0
  41286c:	xor    cl,dl
  41286e:	or     esp,DWORD PTR [esi-0x17]
  412871:	lds    edi,FWORD PTR [edx+0x2e]
  412874:	into   
  412875:	push   0xff34415e
  41287a:	xor    BYTE PTR [ecx-0x339a5462],0x66
  412881:	pop    ebx
  412882:	inc    ebx
  412883:	ss (bad) 
  412885:	shl    al,0x41
  412888:	pop    ecx
  412889:	xor    eax,0xea8a95ba
  41288e:	cmp    DWORD PTR [ebp+0x1d],ecx
  412891:	jl     0x41287a
  412893:	out    0xb2,eax
  412895:	jnp    0x4128d7
  412897:	cmp    DWORD PTR [ebp+0x972807f],edi
  41289d:	ins    DWORD PTR es:[edi],dx
  41289e:	icebp  
  41289f:	(bad)  
  4128a0:	(bad)
  4128a4:	in     al,0xbe
  4128a6:	jbe    0x412832
  4128a8:	cmp    cl,BYTE PTR [edx]
  4128aa:	mov    edi,0x84228367
  4128af:	push   ecx
  4128b0:	popf   
  4128b1:	or     BYTE PTR [edx+ecx*2+0x1598a578],0x7a
  4128b9:	outs   dx,BYTE PTR ds:[esi]
  4128ba:	stos   DWORD PTR es:[edi],eax
  4128bb:	mul    cl
  4128bd:	and    dl,BYTE PTR [edx]
  4128bf:	aaa    
  4128c0:	or     bh,BYTE PTR [ebp*4+0x7a6023ec]
  4128c7:	cwde   
  4128c8:	jmp    FWORD PTR [eax]
  4128ca:	call   0xf0062312
  4128cf:	(bad)  
  4128d0:	out    0xd8,al
  4128d2:	sbb    eax,0x370faf7f
  4128d7:	pop    edx
  4128d8:	or     al,0x41
  4128da:	(bad)
  4128de:	cld    
  4128df:	push   ebx
  4128e0:	fwait
  4128e1:	sbb    BYTE PTR [esi-0x7a],bl
  4128e4:	popa   
  4128e5:	fcmove st,st(2)
  4128e7:	push   0x787aa39e
  4128ec:	dec    ebp
  4128ed:	mov    ds:0x7d50018a,al
  4128f2:	sub    eax,0xd28ad274
  4128f7:	test   dh,cl
  4128f9:	mov    DWORD PTR [ebp+0x43b841e3],0x3b292a79
  412903:	out    dx,al
  412904:	mov    ds,edx
  412906:	pcmpeqb mm4,mm7
  412909:	fidivr DWORD PTR [ebx]
  41290b:	into   
  41290c:	mov    bl,BYTE PTR [ecx-0x61]
  41290f:	rol    DWORD PTR [ebx],0xc0
  412912:	inc    eax
  412914:	cld    
  412915:	lahf   
  412916:	clc    
  412917:	sbb    BYTE PTR [eax-0x685f09f5],al
  41291d:	jns    0x412956
  41291f:	xchg   ebx,eax
  412920:	push   esi
  412921:	movaps xmm1,XMMWORD PTR [ebx]
  412924:	mov    cl,0x56
  412926:	add    ebx,DWORD PTR [eax-0x3]
  412929:	adc    BYTE PTR [ebp+0xa],dh
  41292c:	cmovs  esp,DWORD PTR [edx+esi*8]
  412930:	xor    eax,0x65d95d3d
  412935:	mov    dh,BYTE PTR [ebp+eax*4+0x12]
  412939:	je     0x412921
  41293b:	fstp   DWORD PTR ss:[esp+edx*4-0x7d]
  412940:	aaa    
  412941:	cmp    eax,0x5e6e9167
  412946:	jns    0x412981
  412948:	and    al,0xdf
  41294a:	je     0x4128d6
  41294c:	jae    0x41293f
  41294e:	pop    ebx
  41294f:	mov    cl,0x36
  412951:	stos   BYTE PTR es:[edi],al
  412952:	pop    ebp
  412953:	push   eax
  412954:	rcl    BYTE PTR [esp+eax*4-0x47adfb1e],cl
  41295b:	jb     0x412943
  41295d:	test   DWORD PTR ds:0x260ad233,eax
  412963:	lea    esi,[esi]
  412965:	pop    esi
  412966:	and    eax,0x5636a777
  41296b:	in     al,0x66
  41296d:	sar    DWORD PTR [edi],1
  41296f:	test   eax,0xe6f1d9f8
  412974:	xor    cl,dl
  412976:	jno    0x4129e9
  412978:	push   eax
  412979:	outs   dx,DWORD PTR ds:[esi]
  41297a:	xor    DWORD PTR [edi+0x1d87bba4],ebp
  412980:	in     al,dx
  412981:	outs   dx,BYTE PTR ds:[esi]
  412982:	push   cs
  412983:	dec    eax
  412984:	dec    edi
  412985:	stos   DWORD PTR es:[edi],eax
  412986:	sbb    edi,DWORD PTR [ebx+0x6f]
  412989:	pop    es
  41298a:	adc    ebx,ecx
  41298c:	pop    eax
  41298d:	xchg   ebp,eax
  41298e:	dec    esp
  41298f:	xlat   BYTE PTR ds:[ebx]
  412990:	call   DWORD PTR [ebp-0x57]
  412993:	add    al,0x96
  412995:	mov    DWORD PTR [edi],edi
  412997:	aaa    
  412998:	dec    eax
  412999:	mov    edx,0x901a7fb0
  41299e:	dec    eax
  41299f:	xor    dh,0x6f
  4129a2:	lds    esp,FWORD PTR [edx-0x5]
  4129a5:	shl    DWORD PTR [edi+0x5a],cl
  4129a8:	loope  0x4129c9
  4129aa:	xor    BYTE PTR [bp-0x47dc],dh
  4129af:	or     ch,cl
  4129b1:	rcr    ch,cl
  4129b3:	imul   edi,DWORD PTR [edx],0x2d8d25e4
  4129b9:	retf   0x7fc6
  4129bc:	out    0xbf,eax
  4129be:	add    eax,0xba072e57
  4129c3:	aam    0x42
  4129c5:	xchg   esi,eax
  4129c6:	retf   0x2cb7
  4129c9:	imul   ecx,DWORD PTR [ecx+0x4f],0x89f18c7d
  4129d0:	adc    eax,0xcf6d2354
  4129d5:	jl     0x412a3c
  4129d7:	add    DWORD PTR [ebx+0x13],0x1e
  4129db:	int3   
  4129dc:	adc    al,0x49
  4129de:	mov    esp,0x4da75e4b
  4129e3:	push   ds
  4129e4:	nop
  4129e5:	jmp    0x4129d0
  4129e7:	jp     0x412a56
  4129e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ea:	xor    edi,0xffffff8f
  4129ed:	sub    dh,ah
  4129ef:	xchg   ebp,eax
  4129f0:	(bad)  
  4129f1:	fdivr  DWORD PTR [ebx+0x4c032c7c]
  4129f7:	int3   
  4129f8:	fmul   QWORD PTR [esi*8+0x4b058dc9]
  4129ff:	sub    eax,0xfff837ea
  412a04:	cli    
  412a05:	cmp    ebx,ebx
  412a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a08:	stos   BYTE PTR es:[edi],al
  412a09:	add    eax,0xacbd7d31
  412a0e:	dec    ecx
  412a0f:	icebp  
  412a10:	stc    
  412a11:	mov    esi,0x96711bd4
  412a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a17:	inc    ebx
  412a18:	out    0xdb,al
  412a1a:	in     eax,dx
  412a1b:	jmp    0xac29ca6b
  412a20:	inc    esp
  412a21:	mov    ds:0x79b90673,al
  412a26:	mov    dh,0xca
  412a28:	push   ebx
  412a29:	ss iret 
  412a2b:	mov    bl,0xb0
  412a2d:	rcl    DWORD PTR [esi+0x5405d439],0xbe
  412a34:	dec    edi
  412a35:	add    eax,0x4dc692d3
  412a3a:	mov    ds:0xd8a6cbbd,eax
  412a3f:	int    0x4f
  412a41:	mov    edi,0x3a678648
  412a46:	ss in  eax,dx
  412a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a49:	div    BYTE PTR [eax-0x50]
  412a4c:	mov    dh,0x92
  412a4e:	popf   
  412a4f:	jge    0x412a10
  412a51:	mov    ebp,DWORD PTR [edi-0x676b4f0c]
  412a57:	ret    
  412a58:	stos   DWORD PTR es:[edi],eax
  412a59:	rol    ch,cl
  412a5b:	scas   al,BYTE PTR es:[edi]
  412a5c:	nop
  412a5d:	add    BYTE PTR [edx-0x33],dh
  412a60:	das    
  412a61:	and    eax,0x6614da53
  412a66:	lods   al,BYTE PTR ds:[esi]
  412a67:	dec    ebp
  412a68:	outs   dx,BYTE PTR ds:[esi]
  412a69:	stc    
  412a6a:	fisub  DWORD PTR [ebp+0x4b]
  412a6d:	call   0xf956:0xb6f75488
  412a74:	sub    ebx,DWORD PTR [edi+0x33]
  412a77:	nop
  412a78:	xchg   edi,eax
  412a79:	fstp   DWORD PTR [eax+ebp*8]
  412a7c:	or     al,0xe0
  412a7e:	mov    esp,0x807fc7f9
  412a83:	in     al,0xc1
  412a85:	fs cmp edi,0x74d2a409
  412a8c:	dec    edx
  412a8d:	gs loope 0x412ae6
  412a90:	mov    gs,ebx
  412a92:	mov    edi,0x3973da5c
  412a97:	stos   BYTE PTR es:[edi],al
  412a98:	rcr    DWORD PTR [eax-0x2b99d869],cl
  412a9e:	cmp    al,0x82
  412aa0:	sub    DWORD PTR [ecx],0x20
  412aa3:	and    BYTE PTR [edi],bh
  412aa5:	popf   
  412aa6:	sub    edx,DWORD PTR [eax-0x73099eb]
  412aac:	gs icebp 
  412aae:	jmp    0xf0f414b8
  412ab3:	retf   
  412ab4:	cmp    DWORD PTR [edi+ebx*8-0x22],0x37
  412ab9:	shl    esi,0x3c
  412abc:	pop    ds
  412abd:	sbb    al,0xc7
  412abf:	inc    ebx
  412ac0:	in     al,dx
  412ac1:	mov    esp,DWORD PTR [ebp-0x7b]
  412ac4:	scas   eax,DWORD PTR es:[edi]
  412ac5:	loop   0x412b2a
  412ac7:	jge    0x412ac4
  412ac9:	pushf  
  412aca:	cmp    bh,BYTE PTR [eax+0x53ecbb6f]
  412ad0:	cli    
  412ad1:	push   cs
  412ad2:	mov    cl,0xf9
  412ad4:	sub    eax,0x53765103
  412ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ada:	inc    edx
  412adb:	push   0xfffffffb
  412add:	jle    0x412b0c
  412adf:	int    0xca
  412ae1:	mov    BYTE PTR [esp+edx*4-0x1f],bl
  412ae5:	test   ebp,0xe9a822de
  412aeb:	enter  0x3a6c,0xb2
  412aef:	mul    ecx
  412af1:	ret    
  412af2:	call   0xe0ed0387
  412af7:	imul   edx,DWORD PTR [eax-0x40],0x974e340d
  412afe:	sbb    al,0xb9
  412b00:	fwait
  412b01:	call   0x569:0xab861fe0
  412b08:	dec    ebx
  412b09:	inc    ecx
  412b0a:	dec    ebp
  412b0b:	div    BYTE PTR [edx]
  412b0d:	lods   eax,DWORD PTR ds:[esi]
  412b0e:	lock mov eax,0x13cbac94
  412b14:	std    
  412b15:	icebp  
  412b16:	sbb    ecx,DWORD PTR [eax-0x45762c74]
  412b1c:	mov    ebp,0xe3caf6d0
  412b21:	in     eax,dx
  412b22:	scas   eax,DWORD PTR es:[edi]
  412b23:	fimul  DWORD PTR [ebx+0x19ef9e73]
  412b29:	(bad)  
  412b2a:	fisubr DWORD PTR [ecx-0x4a]
  412b2d:	xchg   edi,eax
  412b2e:	jle    0x412b2b
  412b30:	fcmovb st,st(0)
  412b32:	mov    WORD PTR [ebx],cs
  412b34:	jge    0x412ac9
  412b36:	cwde   
  412b37:	dec    esi
  412b38:	in     eax,0xb6
  412b3a:	fsubr  DWORD PTR [edi]
  412b3c:	call   0x4d2697e0
  412b41:	(bad)  
  412b42:	pop    ebp
  412b43:	cmp    eax,0x32e8c007
  412b48:	jae    0x412b82
  412b4a:	addr16 push eax
  412b4c:	push   0x95c5ab1b
  412b51:	xchg   ebx,eax
  412b52:	jno    0x412b05
  412b54:	jo     0x412b09
  412b56:	ins    BYTE PTR es:[edi],dx
  412b57:	mov    esp,0x5dbd51fe
  412b5c:	add    eax,DWORD PTR [edi+edi*4]
  412b5f:	sbb    esi,DWORD PTR [eax+ecx*1]
  412b62:	mov    edi,0xbd41c10b
  412b67:	inc    eax
  412b68:	leave  
  412b69:	out    dx,al
  412b6a:	xchg   BYTE PTR [edi+0x6c],al
  412b6d:	ror    DWORD PTR [eax],0x9e
  412b70:	sbb    BYTE PTR [eax-0x72a8043],bl
  412b76:	(bad)  
  412b77:	(bad)  
  412b78:	scas   al,BYTE PTR es:[edi]
  412b79:	sbb    dh,al
  412b7b:	into   
  412b7c:	mov    ebx,0x3b6b97a
  412b81:	mov    ds:0xd913819f,al
  412b86:	stos   BYTE PTR es:[edi],al
  412b87:	push   cs
  412b88:	outs   dx,BYTE PTR ds:[esi]
  412b89:	cmp    eax,0xf5b5caa5
  412b8e:	sbb    eax,0x72bbea49
  412b93:	push   ds
  412b94:	jmp    0xb159f4df
  412b99:	dec    edx
  412b9a:	jno    0x412b39
  412b9c:	or     BYTE PTR [eax+0x1],cl
  412b9f:	clc    
  412ba0:	fild   QWORD PTR ds:0xf34261d6
  412ba6:	nop
  412ba7:	icebp  
  412ba8:	jl     0x412c22
  412baa:	cs fs mov esi,0x1d5f3d82
  412bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb2:	hlt    
  412bb3:	sub    ecx,DWORD PTR [edi]
  412bb5:	xchg   DWORD PTR [ebx+0x5e17fc98],edx
  412bbb:	pop    ecx
  412bbc:	dec    ecx
  412bbe:	fwait
  412bbf:	jmp    0xae2b:0x91e2f97d
  412bc6:	lock mov edi,DWORD PTR ds:0xc4f31389
  412bcd:	sbb    BYTE PTR [eax-0x2e24ab87],dh
  412bd3:	fidivr WORD PTR [ebx-0x7b]
  412bd6:	sti    
  412bd7:	jb     0x412c3a
  412bd9:	jle    0x412bbc
  412bdb:	dec    edx
  412bdc:	jmp    0x33218fbc
  412be1:	inc    esi
  412be2:	jns    0x412b90
  412be4:	xchg   ebp,eax
  412be5:	xchg   edx,eax
  412be6:	dec    eax
  412be7:	sbb    ah,BYTE PTR [ecx-0x5ea6b8c5]
  412bed:	dec    eax
  412bee:	loopne 0x412c39
  412bf0:	jle    0x412b94
  412bf2:	xor    dh,BYTE PTR [edx-0x1e6188]
  412bf8:	push   0xffffff89
  412bfa:	add    DWORD PTR [ecx],esp
  412bfc:	jp     0x412c3b
  412bfe:	stos   BYTE PTR es:[edi],al
  412bff:	ins    DWORD PTR es:[edi],dx
  412c00:	sbb    ecx,DWORD PTR ds:0x8f0ab12
  412c06:	add    eax,0xb65390ec
  412c0b:	jp     0x412c65
  412c0d:	lahf   
  412c0e:	out    0xa1,al
  412c10:	sub    cl,BYTE PTR [edi+0x5bb45803]
  412c16:	or     al,0x31
  412c18:	cdq    
  412c19:	popf   
  412c1a:	mov    ds:0xfd064b1,eax
  412c1f:	out    0x8e,al
  412c21:	mov    eax,0x94af16aa
  412c26:	pushf  
  412c27:	mov    esi,0x6b6c08b0
  412c2c:	xor    edi,DWORD PTR [ebx]
  412c2e:	pop    ds
  412c2f:	call   0x807e:0xd15327b3
  412c36:	mov    bl,0x18
  412c38:	int3   
  412c39:	(bad)
  412c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c3d:	fild   QWORD PTR [ebp*1-0x36179482]
  412c44:	sbb    BYTE PTR [eax-0x2728852e],dl
  412c4a:	push   ss
  412c4b:	lahf   
  412c4c:	shl    cl,cl
  412c4e:	pop    ds
  412c4f:	int3   
  412c50:	dec    ebx
  412c51:	sbb    DWORD PTR [eax-0x7a587cbc],0x19
  412c58:	mov    bh,0xe9
  412c5a:	stos   BYTE PTR es:[edi],al
  412c5b:	push   cs
  412c5c:	ds cmp eax,0xa9c08c5a
  412c62:	mov    DWORD PTR [edx+0x31],eax
  412c65:	ins    DWORD PTR es:[edi],dx
  412c66:	jmp    0x66e3:0x60718870
  412c6d:	ja     0x412c49
  412c6f:	(bad)  
  412c70:	cld    
  412c71:	pop    es
  412c72:	cmp    BYTE PTR [ebp+0x66],cl
  412c75:	lea    ecx,[esp+esi*2+0xb48fe43]
  412c7c:	fbstp  TBYTE PTR [edi]
  412c7e:	push   eax
  412c7f:	retf   
  412c80:	or     eax,0x3afdac37
  412c85:	sbb    al,0xde
  412c87:	ins    DWORD PTR es:[edi],dx
  412c88:	in     al,0x12
  412c8a:	mov    esi,0x95db50cd
  412c8f:	pusha  
  412c90:	not    DWORD PTR [esi+0x13]
  412c93:	test   BYTE PTR [ebx+0x462c835c],bh
  412c99:	sar    BYTE PTR [ecx-0x3b988e74],cl
  412c9f:	pushf  
  412ca0:	(bad)  
  412ca2:	out    0xe0,al
  412ca4:	cmp    eax,0x2f350e2e
  412ca9:	cmp    al,0x87
  412cac:	in     eax,0x7c
  412cae:	popf   
  412caf:	mov    ds:0x610d5602,al
  412cb4:	adc    BYTE PTR [ecx-0x3a],cl
  412cb7:	push   ebp
  412cb8:	das    
  412cb9:	fist   DWORD PTR [eax+0x72cab053]
  412cbf:	into   
  412cc0:	jb     0x412c90
  412cc2:	xchg   edi,eax
  412cc3:	jmp    FWORD PTR [edx-0x3]
  412cc6:	mov    WORD PTR [ebp-0x344d77dd],ds
  412ccc:	mov    edi,0xb5b8056d
  412cd1:	or     al,0x90
  412cd3:	push   ebp
  412cd4:	mov    ds:0x2f0a0dce,al
  412cd9:	mov    ds:0x1770d292,eax
  412cde:	data16 fbld TBYTE PTR ss:0x16c30534
  412ce6:	jbe    0x412cde
  412ce8:	dec    edi
  412ce9:	bound  esp,QWORD PTR [edx+0x16]
  412cec:	mov    bl,0x3
  412cee:	push   ebx
  412cef:	mov    ecx,DWORD PTR [edi]
  412cf1:	imul   edi,DWORD PTR [edx],0xffffffdd
  412cf4:	add    esp,ebp
  412cf6:	out    0xd0,al
  412cf8:	pop    esi
  412cf9:	push   ebp
  412cfa:	pop    DWORD PTR [esi-0x5051eb9b]
  412d00:	leave  
  412d01:	and    eax,0xda8ecaec
  412d06:	int    0x5f
  412d08:	jle    0x412d55
  412d0a:	rcr    BYTE PTR [eax-0xe],0x82
  412d0e:	sahf   
  412d0f:	push   ss
  412d10:	jmp    0x777f25c6
  412d15:	cld    
  412d16:	push   edx
  412d17:	push   0xffffff9e
  412d19:	add    ah,BYTE PTR [edi+0x6b35b515]
  412d1f:	push   ss
  412d20:	fcmovb st,st(5)
  412d22:	or     BYTE PTR [ebx],cl
  412d24:	pop    es
  412d25:	inc    edx
  412d26:	fimul  WORD PTR [ecx+0x6d]
  412d29:	jp     0x412d80
  412d2b:	sbb    eax,0x96c10c68
  412d30:	fbld   TBYTE PTR [ebx-0x30]
  412d33:	fisttp DWORD PTR [ecx-0x38]
  412d36:	test   al,0x34
  412d38:	fisttp QWORD PTR [eax]
  412d3a:	(bad)  
  412d3b:	gs cld 
  412d3d:	sti    
  412d3e:	cs leave 
  412d40:	push   edx
  412d41:	stc    
  412d42:	imul   esp,DWORD PTR [esi-0x206c3a9c],0xfffffff2
  412d49:	pop    esi
  412d4a:	add    dl,dl
  412d4c:	pop    edi
  412d4d:	clc    
  412d4e:	sub    cl,bh
  412d50:	add    ebp,ecx
  412d52:	pop    ebp
  412d53:	and    cl,al
  412d55:	xchg   BYTE PTR [edx+0x6ad922b5],cl
  412d5b:	ds cmc 
  412d5d:	sbb    ch,cl
  412d5f:	sub    eax,0xda47581
  412d64:	das    
  412d65:	cmp    DWORD PTR [ebx+0x5aafd44d],esp
  412d6b:	int3   
  412d6c:	mov    WORD PTR [esi-0x6c],?
  412d6f:	cmp    eax,0xb62d3f9c
  412d74:	or     dh,BYTE PTR [edx]
  412d76:	mov    ebp,eax
  412d78:	fild   QWORD PTR [eax]
  412d7a:	jne    0x412d06
  412d7c:	xchg   BYTE PTR [edx+0x2eff6e],al
  412d82:	rcr    DWORD PTR [ecx+0x1f],0x12
  412d86:	loop   0x412d5e
  412d88:	fcomp  QWORD PTR [ebx+0x2d]
  412d8b:	das    
  412d8c:	leave  
  412d8d:	pusha  
  412d8e:	inc    ecx
  412d8f:	fucomi st,st(0)
  412d91:	stc    
  412d92:	adc    cl,bl
  412d94:	xchg   BYTE PTR [ecx+0x7f9b8d56],bh
  412d9a:	jne    0x412d20
  412d9c:	jl     0x412dc7
  412d9e:	js     0x412d81
  412da0:	xor    BYTE PTR [ecx+0x6c],ah
  412da3:	inc    esi
  412da4:	cmc    
  412da5:	fld    TBYTE PTR [eax*2-0x2bd5476f]
  412dac:	pop    ss
  412dad:	cmp    eax,0x72e9130f
  412db2:	push   ss
  412db3:	rcr    bl,0x5c
  412db6:	inc    ebx
  412db7:	fiadd  WORD PTR [ebp+0x21efa64a]
  412dbd:	call   0x960fbd86
  412dc2:	test   eax,0xb7c43cae
  412dc7:	cli    
  412dc8:	sbb    edx,DWORD PTR ds:0xb7db84d
  412dce:	lods   al,BYTE PTR ds:[esi]
  412dcf:	ret    
  412dd0:	pushf  
  412dd1:	dec    esi
  412dd2:	sar    dh,1
  412dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dd5:	or     al,0x63
  412dd7:	push   ds
  412dd8:	pop    ebp
  412dd9:	adc    BYTE PTR [esi-0x67bbb69e],ch
  412ddf:	stos   DWORD PTR es:[edi],eax
  412de0:	sbb    BYTE PTR [ecx-0x6c],0xf7
  412de4:	adc    ebp,DWORD PTR [esi-0x2b]
  412de7:	gs inc al
  412dea:	xchg   ecx,eax
  412deb:	mov    esp,0xfd9e6dd4
  412df0:	sbb    al,0xd2
  412df2:	ins    BYTE PTR es:[edi],dx
  412df3:	sbb    bh,bl
  412df5:	outs   dx,BYTE PTR ds:[esi]
  412df6:	pop    ss
  412df7:	xor    dl,BYTE PTR [edx-0x21d5a3ff]
  412dfd:	dec    ebx
  412dfe:	stos   DWORD PTR es:[edi],eax
  412dff:	loop   0x412dee
  412e01:	add    edi,ebx
  412e03:	ja     0x412e01
  412e05:	in     eax,dx
  412e06:	dec    esi
  412e07:	or     eax,0x3512dc48
  412e0c:	test   al,0xb6
  412e0e:	adc    edi,DWORD PTR [ebx]
  412e10:	retf   0xdb85
  412e13:	iret   
  412e14:	scas   al,BYTE PTR es:[edi]
  412e15:	(bad)
  412e19:	push   0x111fe75a
  412e1e:	xor    DWORD PTR [eax-0x446681f9],ecx
  412e24:	jge    0x412e72
  412e26:	sar    DWORD PTR [ebx],0xc1
  412e29:	jae    0x412e05
  412e2b:	or     BYTE PTR [edx],dh
  412e2d:	test   al,0xe4
  412e2f:	and    al,0x1a
  412e31:	fld    DWORD PTR [eax]
  412e33:	sbb    eax,0xf3413cb5
  412e38:	push   edi
  412e39:	mov    dh,0x2c
  412e3b:	and    BYTE PTR [ecx+eiz*8],al
  412e3e:	fs fs pop ds
  412e41:	into   
  412e42:	(bad)  
  412e43:	mov    ds:0xc6dd3525,al
  412e48:	mov    bh,0x69
  412e4a:	(bad)  
  412e4b:	fsub   st(1),st
  412e4d:	imul   ecx,DWORD PTR [ebx-0x20],0x58
  412e51:	pop    esi
  412e52:	shl    DWORD PTR [edx],1
  412e54:	and    BYTE PTR [ebx+0x3bd52a6e],al
  412e5a:	xchg   DWORD PTR [edx],edi
  412e5c:	jbe    0x412eb4
  412e5e:	rcl    bl,cl
  412e60:	push   0x7a0221a7
  412e65:	stos   BYTE PTR es:[edi],al
  412e66:	(bad)  
  412e67:	mov    cl,0x9a
  412e69:	out    0x4e,al
  412e6b:	cmp    DWORD PTR [edi-0x448ef37b],edi
  412e71:	(bad)  
  412e72:	and    DWORD PTR [eax+edi*2],esp
  412e75:	dec    ecx
  412e76:	mov    WORD PTR [esi+eax*8+0x253bafd5],?
  412e7d:	scas   eax,DWORD PTR es:[edi]
  412e7e:	pusha  
  412e7f:	in     al,0x11
  412e81:	int    0x4b
  412e83:	imul   edi,DWORD PTR cs:[ebx+0x3],0x54
  412e88:	ror    BYTE PTR [ebp-0x54],0x33
  412e8c:	ret    
  412e8d:	xchg   edx,eax
  412e8e:	(bad)  
  412e8f:	das    
  412e90:	pop    edx
  412e91:	push   0xb78f760b
  412e96:	xchg   ebx,eax
  412e97:	les    esi,FWORD PTR [edi]
  412e99:	mov    edx,0x6edcc5ac
  412e9e:	dec    edx
  412e9f:	ds inc esp
  412ea1:	dec    eax
  412ea2:	inc    esp
  412ea3:	or     DWORD PTR [ebp-0x63],edi
  412ea6:	pop    edi
  412ea7:	nop
  412ea8:	jnp    0x412e79
  412eaa:	into   
  412eab:	and    edx,DWORD PTR [edi]
  412ead:	add    eax,0xe88c8c9c
  412eb2:	cmp    dl,BYTE PTR [edi]
  412eb4:	repnz stc 
  412eb6:	test   BYTE PTR [edi],cl
  412eb8:	mov    ebp,0x7e4a8ce7
  412ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ebe:	call   0xb6eb:0x198dc1ea
  412ec5:	jbe    0x412e98
  412ec7:	adc    dl,BYTE PTR [ebp+0x6e6de432]
  412ecd:	xchg   esi,eax
  412ece:	jnp    0x412f04
  412ed0:	jg     0x412f36
  412ed2:	dec    edi
  412ed3:	lock loopne 0x412e89
  412ed6:	rcl    BYTE PTR [edx+edi*1+0x16],1
  412eda:	jmp    0xb74e:0x1425bda1
  412ee1:	mov    bl,0xbc
  412ee3:	mov    ds:0x26f1d3d5,al
  412ee8:	repnz cwde 
  412eea:	mov    BYTE PTR [ebp+0x13e81220],bl
  412ef0:	mov    ebp,0x19f4c7f1
  412ef5:	adc    eax,0x57e7c5ba
  412efa:	daa    
  412efb:	and    BYTE PTR [edx-0x19eb7564],0x13
  412f02:	inc    ebp
  412f03:	outs   dx,BYTE PTR ds:[esi]
  412f04:	xor    BYTE PTR [ebx+eax*4-0x4deb764a],al
  412f0b:	push   esp
  412f0c:	test   al,0x69
  412f0e:	aaa    
  412f0f:	and    eax,0x91c4d882
  412f14:	not    BYTE PTR [edx-0x46]
  412f17:	les    eax,FWORD PTR [ebp+0x64]
  412f1a:	xor    cl,BYTE PTR [ebx-0x5]
  412f1d:	jle    0x412f36
  412f1f:	mov    bl,0xb6
  412f21:	or     DWORD PTR [ebx+eiz*4-0x27a1bc65],ebp
  412f28:	pop    ebx
  412f29:	in     al,0x8e
  412f2b:	sub    ecx,esp
  412f2d:	push   ebx
  412f2e:	push   esp
  412f2f:	fiadd  WORD PTR [ecx+0x4d29a1a1]
  412f35:	xchg   edx,eax
  412f36:	jge    0x412f59
  412f38:	sub    eax,edx
  412f3a:	pop    ebp
  412f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f3c:	mov    WORD PTR [ecx-0x256a4937],?
  412f42:	les    edi,FWORD PTR [esi+edi*2-0x51]
  412f46:	cmp    eax,0xaec3d57f
  412f4b:	sbb    eax,esp
  412f4d:	jo     0x412fb9
  412f4f:	retf   0xc79e
  412f52:	or     ah,ch
  412f54:	mov    ebx,DWORD PTR [edx]
  412f56:	fst    DWORD PTR [edx]
  412f58:	std    
  412f59:	mov    dl,0x12
  412f5b:	ret    0x3e3c
  412f5e:	xor    eax,0x692a0414
  412f63:	xchg   BYTE PTR [eax+0x60],al
  412f66:	(bad)  
  412f67:	aam    0xd5
  412f69:	add    eax,DWORD PTR [ebx+eax*2+0x47]
  412f6d:	and    al,0x4c
  412f6f:	push   edi
  412f70:	jge    0x412fc4
  412f72:	jg     0x412f6d
  412f74:	sbb    dl,BYTE PTR [esi+0x5c9319e0]
  412f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f7b:	push   esi
  412f7c:	popf   
  412f7d:	popf   
  412f7e:	add    eax,0x31ca6b4e
  412f83:	or     esi,DWORD PTR [edx+eax*2-0x6ff86736]
  412f8a:	cmp    bl,BYTE PTR [ebx-0x4]
  412f8d:	add    DWORD PTR [esi],0x54631887
  412f93:	pushf  
  412f94:	rcr    DWORD PTR [edx+0x10],cl
  412f97:	cmp    eax,0xad7704e4
  412f9c:	clc    
  412f9d:	mov    esi,0xccccfb24
  412fa2:	loop   0x412fa1
  412fa4:	pop    esi
  412fa5:	inc    esp
  412fa6:	imul   ebp,DWORD PTR [ebx+ebx*4],0x75
  412faa:	retf   
  412fab:	dec    eax
  412fac:	adc    ch,BYTE PTR [ebx+0x30]
  412faf:	retf   0x3f6e
  412fb2:	jnp    0x412f6c
  412fb4:	or     DWORD PTR [ecx+0x6e],eax
  412fb7:	stos   BYTE PTR es:[edi],al
  412fb8:	mov    esp,0x124c54c0
  412fbd:	sbb    edx,DWORD PTR [ecx+0x6]
  412fc0:	cmp    DWORD PTR [ebp+0x17],esp
  412fc3:	push   eax
  412fc4:	ins    BYTE PTR es:[edi],dx
  412fc5:	mov    DWORD PTR [esi+ebp*4+0x2e],edi
  412fc9:	clc    
  412fca:	retf   0x8376
  412fcd:	mov    al,ds:0xb652ae0a
  412fd2:	rcl    ah,cl
  412fd4:	inc    esp
  412fd5:	call   FWORD PTR [esi+edi*2-0x40]
  412fd9:	xor    cl,BYTE PTR [ebx+0x737ee3c6]
  412fdf:	jmp    0x48cb098f
  412fe4:	mov    ss,WORD PTR [esi]
  412fe6:	xor    cl,BYTE PTR [esi+0x1a]
  412fe9:	mov    BYTE PTR [eax],dl
  412feb:	dec    ebp
  412fec:	aas    
  412fed:	xor    ecx,DWORD PTR [esp+ebx*2]
  412ff0:	inc    esp
  412ff1:	inc    ebp
  412ff2:	aas    
  412ff3:	add    bh,0x45
  412ff6:	xor    bh,BYTE PTR [edx+0x4b]
  412ff9:	jno    0x413034
  412ffb:	adc    dl,cl
  412ffd:	xchg   esi,eax
  412ffe:	jnp    0x41301b
  413000:	mov    bh,0x21
  413002:	add    al,0x5b
  413004:	cmp    BYTE PTR [esi-0x3d7a68df],0x33
  41300b:	xchg   esi,eax
  41300c:	idiv   DWORD PTR [edx-0x1d]
  41300f:	or     eax,0x49d53d54
  413014:	cmp    eax,0x19e9aa92
  413019:	push   eax
  41301a:	in     eax,dx
  41301b:	je     0x412fa8
  41301d:	push   ebp
  41301e:	pop    edi
  41301f:	imul   esi,DWORD PTR [edx+0x30],0xafb4f3bf
  413026:	call   0x917a8205
  41302b:	mov    al,0x7f
  41302d:	imul   esi,DWORD PTR [ebp-0x1fc4d78e],0x11fb21f
  413037:	test   eax,0x302e9ae5
  41303c:	mov    eax,ds:0x9edace86
  413041:	ds jnp 0x413099
  413044:	sbb    edi,DWORD PTR [edx]
  413046:	iret   
  413047:	ins    BYTE PTR es:[edi],dx
  413048:	jo     0x4130bf
  41304a:	nop
  41304b:	sub    DWORD PTR [esp+ecx*1+0x17e7e420],ecx
  413052:	jne    0x413056
  413054:	das    
  413055:	jecxz  0x413067
  413057:	out    0x4e,al
  413059:	in     eax,0x19
  41305b:	(bad)  
  41305c:	inc    edi
  41305d:	mov    al,ds:0x3f50b6ce
  413062:	pop    edi
  413063:	and    eax,eax
  413065:	fwait
  413066:	sub    edx,DWORD PTR [ecx-0x26c2f904]
  41306c:	mov    bh,0xd0
  41306e:	add    DWORD PTR [ecx+ebx*8-0xb1358b],ecx
  413075:	add    ch,BYTE PTR [eax+0x2d]
  413078:	cmp    esp,0xffffff91
  41307b:	and    eax,0x2123cfe2
  413080:	aam    0x7
  413082:	mov    al,ds:0xb1f72bcf
  413087:	inc    ecx
  413088:	data16 (bad) 
  41308a:	aam    0xfd
  41308c:	mov    ch,0xfe
  41308e:	inc    ebp
  41308f:	test   BYTE PTR [esi],dl
  413091:	jge    0x41308d
  413093:	aam    0x1f
  413095:	xor    DWORD PTR [eax],esp
  413097:	push   ebp
  413098:	cmp    eax,0x82f05c74
  41309d:	ja     0x4130cf
  41309f:	jno    0x4130ec
  4130a1:	and    DWORD PTR [eax+0x51e93674],esi
  4130a7:	sti    
  4130a8:	dec    esi
  4130a9:	add    al,ch
  4130ab:	jp     0x413097
  4130ad:	or     bl,BYTE PTR [ecx-0x198669da]
  4130b3:	cs add eax,edx
  4130b6:	loope  0x413091
  4130b8:	scas   al,BYTE PTR es:[edi]
  4130b9:	in     eax,0x61
  4130bb:	(bad)  
  4130bd:	scas   eax,DWORD PTR es:[edi]
  4130be:	cmp    BYTE PTR [esi],ch
  4130c0:	call   0x4ca3:0x2c7f4e24
  4130c7:	xor    ch,BYTE PTR [ebx+0x39]
  4130ca:	mov    fs,WORD PTR [eax+0x41093895]
  4130d0:	inc    esi
  4130d1:	jle    0x413142
  4130d3:	sub    BYTE PTR [ecx],bl
  4130d5:	or     BYTE PTR [edi],bh
  4130d7:	sti    
  4130d8:	pushf  
  4130d9:	sbb    dl,BYTE PTR [ecx]
  4130db:	ja     0x41311c
  4130dd:	inc    edi
  4130de:	add    BYTE PTR ds:0x85678647,bh
  4130e4:	jno    0x413072
  4130e6:	daa    
  4130e7:	jecxz  0x413091
  4130e9:	xchg   DWORD PTR [esi+0x45f9c890],esp
  4130ef:	xchg   esi,eax
  4130f0:	stos   BYTE PTR es:[edi],al
  4130f1:	sub    eax,DWORD PTR [ebp+0x7a]
  4130f4:	mov    esi,?
  4130f6:	adc    DWORD PTR [esi],ecx
  4130f8:	cwde   
  4130f9:	into   
  4130fa:	mov    esi,0xdee612f3
  4130ff:	xlat   BYTE PTR ds:[ebx]
  413100:	es cdq 
  413102:	dec    ecx
  413103:	push   edx
  413104:	xchg   edi,eax
  413105:	inc    ecx
  413106:	xchg   DWORD PTR [edi+edx*8+0x70],ecx
  41310a:	out    dx,eax
  41310b:	(bad)  
  41310c:	enter  0xb74a,0x3d
  413110:	scas   al,BYTE PTR es:[edi]
  413111:	fisttp QWORD PTR ds:0x9c7de4d7
  413117:	aad    0x5f
  413119:	xchg   DWORD PTR [ebx+ebp*1-0x3d],ebx
  41311d:	enter  0x54f6,0xe4
  413121:	push   eax
  413122:	dec    ebx
  413123:	cmp    ah,dl
  413125:	push   ebp
  413126:	cmp    eax,0x304dd670
  41312b:	mov    BYTE PTR ds:0x94ef0cfc,ch
  413131:	out    dx,eax
  413132:	push   ss
  413133:	in     al,dx
  413134:	adc    DWORD PTR [ebp+0x5f2cc814],esi
  41313a:	mov    edi,0x1719c77b
  41313f:	out    0xaf,eax
  413141:	dec    ebp
  413142:	call   0xe05:0x6294f867
  413149:	and    ah,bl
  41314b:	jecxz  0x413146
  41314d:	hlt    
  41314e:	and    DWORD PTR [esi+0x32],esp
  413151:	xor    eax,DWORD PTR [ecx+esi*1-0x6220a992]
  413158:	ss mov edx,esi
  41315b:	sub    eax,ebp
  41315d:	repz mov esi,0x11bc9ed1
  413163:	pop    edx
  413164:	mov    ds:0x15eb18d2,al
  413169:	jle    0x41314c
  41316b:	push   edi
  41316c:	mov    ds:0xd35cefaa,al
  413171:	dec    edi
  413172:	xchg   BYTE PTR [ecx-0x5f09ceab],ah
  413178:	cmp    BYTE PTR [edx+0x7b82b7a1],0x5f
  41317f:	ins    BYTE PTR es:[edi],dx
  413180:	inc    esp
  413181:	jmp    0x27089e4
  413186:	cdq    
  413187:	lea    esi,[edi+ecx*8]
  41318a:	loop   0x41314b
  41318c:	inc    edi
  41318d:	cdq    
  41318e:	xchg   esp,eax
  41318f:	fild   WORD PTR [edx+0x525358e5]
  413195:	mov    al,ds:0xe12a5303
  41319a:	lods   eax,DWORD PTR ds:[esi]
  41319b:	mov    DWORD PTR [ecx-0x65],0x8b33c4bf
  4131a2:	mov    bh,0x45
  4131a4:	movaps XMMWORD PTR [ebx-0x30],xmm5
  4131a8:	call   FWORD PTR [esi+0x2a5a3875]
  4131ae:	sbb    DWORD PTR [esi+0x11],0xc1fb31c6
  4131b5:	inc    eax
  4131b6:	mov    ch,0x8c
  4131b8:	call   0xa8e4a282
  4131bd:	jae    0x413177
  4131bf:	cli    
  4131c0:	cld    
  4131c1:	int    0x59
  4131c3:	add    al,0x28
  4131c5:	push   0xffffffd8
  4131c7:	mov    ss,edx
  4131c9:	mov    al,ds:0x18b46748
  4131ce:	cli    
  4131cf:	and    cl,BYTE PTR [esi+edi*4]
  4131d2:	lock int3 
  4131d4:	lods   al,BYTE PTR ds:[esi]
  4131d5:	sbb    edi,DWORD PTR [ebx+0x66387b21]
  4131db:	hlt    
  4131dc:	test   BYTE PTR [edx],ch
  4131de:	fisubr DWORD PTR [edi-0x50]
  4131e1:	js     0x4131b8
  4131e3:	add    al,0x58
  4131e5:	js     0x4131c7
  4131e7:	cwde   
  4131e8:	arpl   WORD PTR [ebx],dx
  4131ea:	scas   eax,DWORD PTR es:[edi]
  4131eb:	iret   
  4131ec:	mov    ah,0xe8
  4131ee:	push   ebp
  4131ef:	sub    cl,BYTE PTR [eax-0x5d]
  4131f2:	mov    eax,DWORD PTR [ebx+0x7e]
  4131f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131f6:	lods   al,BYTE PTR ds:[esi]
  4131f7:	clc    
  4131f8:	ss or  bl,al
  4131fb:	sbb    DWORD PTR [esi],ecx
  4131fd:	inc    ecx
  4131fe:	or     eax,0xd0b0d830
  413203:	rcr    BYTE PTR [esi],1
  413205:	(bad)  
  413206:	jns    0x4131b8
  413208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413209:	call   DWORD PTR [eax-0x70]
  41320c:	mov    eax,0x797bc34d
  413211:	in     al,0x75
  413213:	ss inc esp
  413215:	pop    edx
  413216:	cdq    
  413217:	mov    esp,0x1002195b
  41321c:	dec    ecx
  41321d:	in     eax,0x30
  41321f:	pop    ebx
  413220:	fimul  WORD PTR [edx+0x1d0c3061]
  413226:	popa   
  413227:	ret    0x80f5
  41322a:	mov    ss,WORD PTR [edx+esi*1+0x60]
  41322e:	and    dl,al
  413230:	fisttp WORD PTR [eax+eiz*8+0x2d1452e6]
  413237:	out    dx,eax
  413238:	mov    BYTE PTR [edi+ebp*4],dl
  41323b:	adc    eax,0xec5fcc93
  413240:	mov    ds:0x7301550b,eax
  413245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413246:	dec    eax
  413247:	aad    0x2f
  413249:	xor    bh,ah
  41324b:	mov    bl,ah
  41324d:	fcom   QWORD PTR [edx+0xbb2b2d]
  413253:	sub    BYTE PTR [edi],bl
  413255:	test   DWORD PTR [esi],ecx
  413257:	retf   
  413258:	lds    edx,FWORD PTR [ebp-0x3bd31d8a]
  41325e:	pop    edi
  41325f:	retf   
  413260:	inc    edi
  413261:	push   ss
  413262:	or     ebp,ebp
  413264:	xchg   edi,eax
  413265:	push   0xffffffd1
  413267:	cdq    
  413268:	stc    
  413269:	push   edi
  41326a:	mov    esi,0x8d026e45
  41326f:	push   esi
  413270:	dec    esi
  413271:	add    esp,ebx
  413273:	rcr    DWORD PTR [ecx],0xb5
  413276:	out    0x28,eax
  413278:	gs pop ds
  41327a:	test   DWORD PTR [eax-0x15017866],esp
  413280:	fisttp WORD PTR [edi+0x54f5e2fe]
  413286:	pop    es
  413287:	mov    dh,0x9e
  413289:	jmp    DWORD PTR [ecx+ebp*1+0x3cb468f1]
  413290:	mov    WORD PTR [ebx-0x265a599a],cs
  413296:	stos   BYTE PTR es:[edi],al
  413297:	xor    eax,0x9fef8f72
  41329c:	(bad)  
  41329d:	neg    DWORD PTR [ecx+edi*2+0x4bd2b374]
  4132a4:	bound  esp,QWORD PTR [edx]
  4132a6:	je     0x4132be
  4132a8:	out    0x9c,al
  4132aa:	cwde   
  4132ab:	jp     0x413267
  4132ad:	jne    0x4132f5
  4132af:	dec    ebx
  4132b0:	adc    BYTE PTR [ebx-0x7e78a27b],dl
  4132b6:	sub    bh,BYTE PTR [ebx-0x34]
  4132b9:	pop    edi
  4132ba:	loopne 0x413246
  4132bc:	adc    BYTE PTR [ecx-0x156929b0],ch
  4132c2:	inc    ecx
  4132c3:	test   BYTE PTR [eax+0x2e24c185],0x5b
  4132ca:	retf   
  4132cb:	jbe    0x413322
  4132cd:	enter  0xef6a,0xff
  4132d1:	les    edi,FWORD PTR [eax-0x551536be]
  4132d7:	mov    esp,0x5a1adfa8
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	(bad)  
  4132de:	stc    
  4132df:	fld    QWORD PTR [edx+edx*1-0x45]
  4132e3:	and    al,0x92
  4132e5:	mov    cl,0xd4
  4132e7:	cmp    BYTE PTR [esi-0x5c8a5ce6],0x3c
  4132ee:	rol    BYTE PTR [eax+0x277bc57e],1
  4132f4:	adc    BYTE PTR [ecx+0x4a5d1dbe],al
  4132fa:	jo     0x41329c
  4132fc:	sbb    DWORD PTR [ecx],ebp
  4132fe:	mov    ds:0x9f6f1bf9,al
  413303:	addr16 stc 
  413305:	sbb    DWORD PTR [eax-0x43],0x4d2fd88c
  41330c:	dec    ebx
  41330d:	mov    bh,0x16
  41330f:	inc    eax
  413310:	jmp    0xa419f1d9
  413315:	push   esi
  413316:	cld    
  413317:	pop    ds
  413318:	add    al,0x76
  41331a:	push   edx
  41331b:	nop
  41331c:	dec    ebp
  41331d:	pop    eax
  41331e:	inc    ebp
  41331f:	stos   BYTE PTR es:[edi],al
  413320:	imul   edx,DWORD PTR [ebp-0x547d396a],0x12
  413327:	add    al,0x65
  413329:	std    
  41332a:	ret    0x2bc0
  41332d:	sub    cl,BYTE PTR [ecx+0x65dca947]
  413333:	fst    QWORD PTR [ecx-0x2f]
  413336:	pusha  
  413337:	rcr    ebp,1
  413339:	aas    
  41333a:	into   
  41333b:	or     bh,ch
  41333d:	jg     0x4133a4
  41333f:	sub    esp,DWORD PTR [eax+0x26]
  413342:	(bad)  
  413344:	and    esi,DWORD PTR [edi+0x77]
  413347:	dec    eax
  413348:	jecxz  0x41333c
  41334a:	int3   
  41334b:	loopne 0x413380
  41334d:	jg     0x41333c
  41334f:	dec    ebx
  413350:	rol    BYTE PTR [edx],0xfe
  413353:	cli    
  413354:	and    eax,esi
  413356:	mov    esp,0xf4e4f2df
  41335b:	adc    ah,dl
  41335d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41335e:	clc    
  41335f:	push   ebx
  413360:	adc    al,0x2e
  413362:	push   eax
  413363:	xchg   edi,eax
  413364:	cs mov dh,0xb2
  413367:	mov    ds:0x24f77aff,eax
  41336c:	fisub  DWORD PTR [edx+ebx*8-0x6f]
  413370:	lock clc 
  413372:	aaa    
  413373:	cli    
  413374:	sahf   
  413375:	jl     0x41334b
  413377:	cmp    edx,DWORD PTR [ecx+0x54]
  41337a:	mov    ds:0x5e85e4d3,eax
  41337f:	adc    al,BYTE PTR [esi+ecx*4]
  413382:	jno    0x413390
  413384:	loope  0x413392
  413386:	push   ds
  413387:	jmp    0x86d1abaf
  41338c:	push   ebp
  41338d:	dec    ecx
  41338e:	jns    0x413381
  413390:	les    ebx,FWORD PTR [esi-0x3e]
  413393:	test   eax,0xce27f4f8
  413398:	jl     0x413365
  41339a:	in     eax,0x75
  41339c:	ins    BYTE PTR es:[edi],dx
  41339d:	sub    al,0x42
  41339f:	dec    edi
  4133a0:	inc    edi
  4133a1:	outs   dx,DWORD PTR ds:[esi]
  4133a2:	in     al,0x0
  4133a4:	cld    
  4133a5:	hlt    
  4133a6:	repnz sub ebp,0x482e7c11
  4133ad:	inc    ebx
  4133ae:	stos   BYTE PTR es:[edi],al
  4133af:	out    0x40,al
  4133b1:	into   
  4133b2:	push   cs
  4133b3:	mov    ds:0xdbbaa38a,eax
  4133b8:	cmp    al,0x11
  4133ba:	retf   
  4133bb:	mov    ebp,0xdb2be0b7
  4133c0:	outs   dx,BYTE PTR ds:[esi]
  4133c1:	cmp    DWORD PTR [edx+0x8768548],edi
  4133c7:	sub    al,0x5
  4133c9:	outs   dx,BYTE PTR ds:[esi]
  4133ca:	or     eax,0xc5b944df
  4133cf:	clc    
  4133d0:	fild   DWORD PTR [esp+ecx*4]
  4133d3:	outs   dx,BYTE PTR ds:[esi]
  4133d4:	nop
  4133d5:	adc    eax,0x971848f1
  4133da:	sahf   
  4133db:	and    eax,0xaa40fa7e
  4133e0:	ja     0x4133c0
  4133e2:	jae    0x413456
  4133e4:	push   esp
  4133e5:	les    ecx,FWORD PTR [ecx-0xb]
  4133e8:	popf   
  4133e9:	mov    cl,0x7a
  4133eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ec:	stos   BYTE PTR es:[edi],al
  4133ed:	xor    DWORD PTR [edi-0x43],esp
  4133f0:	xchg   esp,eax
  4133f1:	loop   0x413385
  4133f3:	dec    ebx
  4133f4:	and    al,BYTE PTR [ebx+eiz*2+0x3561168c]
  4133fb:	repz add BYTE PTR [ebp+0x1629d7c1],ch
  413402:	inc    ebx
  413403:	fidivr WORD PTR [ebp+0x7f92c3e2]
  413409:	xor    al,0x89
  41340b:	jecxz  0x413410
  41340d:	push   ds
  41340e:	pop    ds
  41340f:	mov    cl,0xfe
  413411:	(bad)  
  413412:	jns    0x4133b5
  413414:	xchg   ebp,eax
  413415:	jno    0x413399
  413417:	mov    ebp,0x1330b1e2
  41341c:	(bad)  
  41341d:	iret   
  41341e:	fimul  WORD PTR [edi+0x39fef0b1]
  413424:	sub    al,0x98
  413426:	pop    ss
  413427:	lea    esi,[esi-0x34]
  41342a:	lahf   
  41342b:	ja     0x413453
  41342d:	mov    ebx,0x189b056c
  413432:	pop    edi
  413433:	jae    0x4133ec
  413435:	jge    0x4133f8
  413437:	push   ds
  413438:	cli    
  413439:	sub    edx,ecx
  41343b:	add    esi,DWORD PTR [ecx-0x37831574]
  413441:	rcl    ebx,0x60
  413444:	lock inc ecx
  413446:	das    
  413447:	pop    ebp
  413448:	and    edi,DWORD PTR [edi+0x25]
  41344b:	sub    esi,edx
  41344d:	mov    DWORD PTR [edx],ecx
  41344f:	dec    ecx
  413450:	mov    al,0x44
  413452:	mov    edx,0xf544e1e2
  413457:	xor    BYTE PTR [ebx+0x592230e9],0xef
  41345e:	push   ebx
  41345f:	ret    
  413460:	xchg   ebp,eax
  413461:	push   es
  413462:	or     DWORD PTR [edi-0x6713a822],esi
  413468:	mov    ch,0x38
  41346a:	idiv   DWORD PTR [ebx]
  41346c:	scas   al,BYTE PTR es:[edi]
  41346d:	scas   al,BYTE PTR es:[edi]
  41346e:	cli    
  41346f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413470:	add    ebx,DWORD PTR [ebp+0x20]
  413473:	pusha  
  413474:	in     eax,0x20
  413476:	or     eax,DWORD PTR [edi]
  413478:	pop    esi
  413479:	push   edi
  41347a:	ret    0x707a
  41347d:	rol    BYTE PTR [ebp-0x4883dea2],0x18
  413484:	inc    ebp
  413485:	add    al,ah
  413487:	repnz or ebx,DWORD PTR [ebx+edx*2-0x57cc4f9]
  41348f:	mov    cl,0x28
  413491:	pop    edx
  413492:	das    
  413493:	cwde   
  413494:	or     al,0x39
  413496:	in     eax,dx
  413497:	out    dx,eax
  413498:	and    dl,BYTE PTR [ebx-0x49bcbb3]
  41349e:	or     eax,0x5369ff50
  4134a3:	call   0x6ded:0x109e2b29
  4134aa:	adc    BYTE PTR [edi],0x4
  4134ad:	mov    ds:0x1f2e5930,eax
  4134b2:	cmp    BYTE PTR [edi],ah
  4134b4:	mov    ch,0xb3
  4134b6:	ffree  st(2)
  4134b8:	mov    BYTE PTR [ebp-0x51],dh
  4134bb:	fsub   QWORD PTR ds:0x1353c904
  4134c1:	pushw  es
  4134c3:	dec    esp
  4134c4:	adc    esi,DWORD PTR [esp+ecx*2+0x794a30fe]
  4134cb:	mov    ebx,0x76dfc0c0
  4134d0:	jg     0x413503
  4134d2:	mov    bh,0x68
  4134d4:	mov    ebp,0xd8d11a2a
  4134d9:	mov    al,ds:0xadcc227b
  4134de:	into   
  4134df:	mov    edx,0x3900d2de
  4134e4:	mov    bl,0xea
  4134e6:	or     al,0x1b
  4134e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e9:	adc    ecx,0x53b4fd05
  4134ef:	dec    ebx
  4134f0:	pop    ss
  4134f1:	ja     0x4134f6
  4134f3:	or     bh,BYTE PTR [esi-0x564586c3]
  4134f9:	pop    esp
  4134fa:	(bad)  
  4134fb:	ds mov ebx,0xa7cdef02
  413501:	out    dx,al
  413502:	cmp    eax,0xc91492bb
  413507:	jle    0x4134ad
  413509:	inc    ebp
  41350a:	xor    ah,BYTE PTR [edi-0x47]
  41350d:	or     esi,DWORD PTR [ebp-0x5f53a505]
  413513:	and    DWORD PTR [eax+0x59df0fdd],esi
  413519:	pop    es
  41351a:	push   ds
  41351b:	xor    bh,BYTE PTR [ecx-0x3cbedee8]
  413521:	js     0x41354d
  413523:	dec    edi
  413524:	mov    edi,0xf23ddc73
  413529:	(bad)  
  41352a:	mov    bh,0x4d
  41352c:	pop    ss
  41352d:	into   
  41352e:	push   ss
  41352f:	mov    cl,0xb5
  413531:	frstor [edx+0x6e]
  413534:	xchg   DWORD PTR [esi+0x203fbc15],edi
  41353a:	arpl   WORD PTR [esi],di
  41353c:	mov    ds:0x29bb8639,eax
  413541:	retf   
  413542:	xor    dl,BYTE PTR [edx]
  413544:	test   al,0xeb
  413546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413547:	fs dec esi
  413549:	mov    dh,0x8a
  41354b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41354c:	jl     0x41359e
  41354e:	xor    edx,edx
  413550:	mov    al,0xaf
  413552:	sti    
  413553:	inc    edi
  413554:	xor    DWORD PTR [edi-0x65e53e89],esi
  41355a:	in     al,0x1c
  41355c:	retf   
  41355d:	xchg   ebp,eax
  41355e:	push   eax
  41355f:	inc    ebx
  413560:	in     eax,0xe1
  413562:	add    dh,BYTE PTR [esi+0x7d85282b]
  413568:	sub    ebx,esp
  41356a:	cdq    
  41356b:	les    edi,FWORD PTR [esi]
  41356d:	sub    BYTE PTR [esi+ecx*8],cl
  413570:	jmp    0xf6d7cece
  413575:	leave  
  413576:	sbb    ah,dl
  413578:	in     eax,dx
  413579:	xchg   DWORD PTR [ecx+ebp*8-0x761aec19],ebp
  413580:	div    DWORD PTR [ebx]
  413582:	std    
  413583:	outs   dx,DWORD PTR ds:[esi]
  413584:	stos   BYTE PTR es:[edi],al
  413585:	inc    esi
  413586:	and    eax,0x93ae3390
  41358b:	push   edi
  41358c:	popf   
  41358d:	sbb    DWORD PTR [edx-0x47],ebp
  413590:	repnz jmp 0xe556:0x5e71cb0b
  413598:	jmp    0x579380f1
  41359d:	cmp    edi,ebx
  41359f:	lods   eax,DWORD PTR ds:[esi]
  4135a0:	xor    al,0x11
  4135a2:	sbb    DWORD PTR [ebp-0x6b],0xcb57853e
  4135a9:	dec    esp
  4135aa:	mov    bl,0xb1
  4135ac:	xchg   ecx,eax
  4135ad:	mov    esp,0xeb87f75
  4135b2:	imul   ebx,DWORD PTR [eax-0x2c284ccf],0x9
  4135b9:	or     edx,DWORD PTR [edi+ecx*8-0x1095e58]
  4135c0:	mov    WORD PTR [ecx-0x685ace1a],?
  4135c6:	in     al,0xbf
  4135c8:	mov    edi,0x4267e6af
  4135cd:	(bad)  
  4135cf:	stc    
  4135d0:	add    al,0x8a
  4135d2:	sbb    bh,BYTE PTR [esi]
  4135d4:	xor    eax,edi
  4135d6:	sbb    edx,DWORD PTR [eax-0x37]
  4135d9:	pop    esi
  4135da:	pushf  
  4135db:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4135dd:	or     eax,0x14d5ec7b
  4135e2:	sbb    BYTE PTR [ebx+eax*4],0x69
  4135e6:	add    eax,0x314660f3
  4135eb:	inc    eax
  4135ec:	mov    dh,BYTE PTR ds:0xfbd33b59
  4135f2:	mov    edx,DWORD PTR [esi-0x45]
  4135f5:	fwait
  4135f6:	xlat   BYTE PTR ds:[ebx]
  4135f7:	sti    
  4135f8:	inc    edx
  4135f9:	loope  0x4135f1
  4135fb:	pop    ebx
  4135fc:	xchg   esi,eax
  4135fd:	sbb    ch,BYTE PTR [eax]
  4135ff:	xlat   BYTE PTR ds:[ebx]
  413600:	and    ch,ch
  413602:	inc    edi
  413603:	rcl    BYTE PTR [edx-0xa6cb65c],cl
  413609:	and    eax,esi
  41360b:	push   ebp
  41360c:	pop    ecx
  41360d:	lds    ebx,FWORD PTR [esi+0x44]
  413610:	add    bh,BYTE PTR [edx]
  413612:	lds    esi,FWORD PTR [edi-0x635ff49b]
  413618:	or     ecx,DWORD PTR [ebp-0x41]
  41361b:	jmp    0x7029:0x698dfb7
  413622:	mov    ch,0xb4
  413624:	shl    BYTE PTR [ebx],1
  413626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413627:	out    0xcf,eax
  413629:	ret    0x7ed5
  41362c:	cmp    dh,BYTE PTR [esi]
  41362e:	stc    
  41362f:	shl    BYTE PTR [ebx+edx*2],0xbd
  413633:	ret    0x7069
  413636:	lods   al,BYTE PTR ds:[esi]
  413637:	jb     0x4135c2
  413639:	push   ecx
  41363a:	xor    edi,edx
  41363c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41363d:	call   0x9cf4d52f
  413642:	add    esi,ecx
  413644:	xchg   esi,ebx
  413646:	fisttp DWORD PTR cs:[ebp-0x28]
  41364a:	mov    bh,0x48
  41364c:	retf   
  41364d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41364e:	jg     0x413616
  413650:	icebp  
  413651:	dec    ecx
  413652:	jle    0x41363c
  413654:	dec    di
  413656:	retf   0xb85a
  413659:	push   esi
  41365a:	or     DWORD PTR [ecx+0x2a],ebp
  41365d:	das    
  41365e:	mov    ecx,0x530fbfea
  413663:	mov    eax,0x4276ed06
  413668:	xchg   DWORD PTR ds:0xc6f7911b,edi
  41366e:	aam    0x29
  413670:	ins    BYTE PTR es:[edi],dx
  413671:	sahf   
  413672:	dec    esi
  413673:	pusha  
  413674:	fistp  WORD PTR ds:0x7ce5762d
  41367a:	repnz dec ebp
  41367c:	(bad)  [edi+0x6da3fc17]
  413682:	add    bh,BYTE PTR [ecx]
  413684:	xchg   edx,eax
  413685:	push   0xffffffba
  413687:	pop    ebx
  413688:	mov    ss,WORD PTR [edi]
  41368a:	imul   ebp,DWORD PTR [edi+0x20d5f24c],0x5d
  413691:	inc    ecx
  413692:	sbb    eax,0x187dc659
  413697:	lods   eax,DWORD PTR ds:[esi]
  413698:	ret    0xdcad
  41369b:	adc    al,0xfc
  41369d:	hlt    
  41369e:	ror    DWORD PTR [ebp+0x38f3a60f],cl
  4136a4:	lods   eax,DWORD PTR ds:[esi]
  4136a5:	hlt    
  4136a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a7:	mov    bl,0xb1
  4136a9:	sub    bh,BYTE PTR [ecx]
  4136ab:	mov    ebp,0x2b250e09
  4136b0:	push   ds
  4136b1:	scas   eax,DWORD PTR es:[edi]
  4136b2:	or     eax,0xdd5873c7
  4136b7:	adc    DWORD PTR [eax],ebp
  4136b9:	dec    ebp
  4136ba:	xor    ah,BYTE PTR [esp+ebp*2+0xd]
  4136be:	mov    dl,0x2a
  4136c0:	fidiv  WORD PTR [esi+0x4a]
  4136c3:	push   es
  4136c4:	aaa    
  4136c5:	stc    
  4136c6:	cmp    eax,0x589f2460
  4136cb:	outs   dx,DWORD PTR ds:[esi]
  4136cc:	cmp    DWORD PTR [ecx],esi
  4136ce:	std    
  4136cf:	sub    ebp,DWORD PTR [eax-0xd68ab2b]
  4136d5:	and    al,0x74
  4136d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136d8:	in     eax,dx
  4136d9:	cmp    eax,0xc46b298a
  4136de:	in     eax,0x1f
  4136e0:	adc    eax,edx
  4136e2:	add    ecx,DWORD PTR [eax+edx*2-0x18]
  4136e6:	fbstp  TBYTE PTR [ecx]
  4136e8:	stos   BYTE PTR es:[edi],al
  4136e9:	leave  
  4136ea:	jg     0x413765
  4136ec:	xchg   dl,al
  4136ee:	jne    0x413756
  4136f0:	push   es
  4136f1:	and    BYTE PTR [ecx-0x80],dl
  4136f4:	call   0xc603:0x3f08c963
  4136fb:	push   ss
  4136fc:	xor    eax,0xf7165d78
  413701:	psrlq  mm7,QWORD PTR [ecx-0x69b2571f]
  413708:	sbb    eax,0x895f5441
  41370d:	shl    DWORD PTR [edx+0x1ccd57f],0xa7
  413714:	nop
  413715:	fimul  WORD PTR [ebx+esi*4]
  413718:	cmc    
  413719:	call   0x1258486e
  41371e:	shl    ah,1
  413720:	test   al,0x3c
  413722:	aam    0x8d
  413724:	neg    DWORD PTR [esi]
  413726:	fistp  WORD PTR [eax]
  413728:	fmul   DWORD PTR [eax+ecx*8-0x394ef643]
  41372f:	pop    ds
  413730:	pop    ebp
  413731:	sbb    ecx,ecx
  413733:	or     BYTE PTR [edx+edx*1-0x11],bl
  413737:	xchg   ebp,eax
  413738:	xchg   esp,eax
  413739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41373a:	aam    0xed
  41373c:	mov    dl,0xbc
  41373e:	mov    ch,0xc1
  413740:	dec    eax
  413741:	fsubr  st,st(7)
  413743:	sbb    al,0x32
  413745:	fwait
  413746:	rcl    edx,1
  413748:	dec    ecx
  413749:	icebp  
  41374a:	hlt    
  41374b:	push   ebx
  41374c:	in     eax,0xf2
  41374e:	ret    
  41374f:	or     al,0xaf
  413751:	adc    ah,BYTE PTR [esi+0x2f]
  413754:	push   esp
  413755:	dec    edx
  413756:	repnz jecxz 0x413790
  413759:	mov    bh,ch
  41375b:	int    0xe2
  41375d:	jmp    0x6988:0x5a050474
  413764:	xor    eax,0x4968b287
  413769:	and    al,BYTE PTR [ebx-0x7]
  41376c:	mov    bl,0x17
  41376e:	push   cs
  41376f:	icebp  
  413770:	add    BYTE PTR [ebp-0x2e19772e],ch
  413776:	loop   0x4137c2
  413778:	out    dx,al
  413779:	ins    BYTE PTR es:[edi],dx
  41377a:	mov    al,ds:0x820011a5
  41377f:	lods   al,BYTE PTR ds:[esi]
  413780:	add    eax,0x6fa35a85
  413785:	stos   DWORD PTR es:[edi],eax
  413786:	xlat   BYTE PTR ds:[ebx]
  413787:	jne    0x413731
  413789:	ret    
  41378a:	das    
  41378b:	leave  
  41378c:	stos   BYTE PTR es:[edi],al
  41378d:	mov    cl,0xaf
  41378f:	sbb    al,0xaf
  413791:	test   BYTE PTR [edi],ah
  413793:	xchg   ecx,eax
  413794:	jae    0x41371d
  413796:	add    bl,dh
  413798:	inc    ebp
  413799:	mov    al,BYTE PTR [eax]
  41379b:	repz adc al,0x57
  41379e:	jae    0x413721
  4137a0:	bound  edx,QWORD PTR [ebp+0x22]
  4137a3:	or     eax,0xeb1f25fc
  4137a8:	icebp  
  4137a9:	sub    BYTE PTR [ebp-0x5765506f],0x45
  4137b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b1:	adc    ch,dh
  4137b3:	jmp    0xa3f9:0x8a563116
  4137ba:	xor    edx,esi
  4137bc:	jae    0x4137ed
  4137be:	mov    ch,0xf
  4137c0:	and    esi,DWORD PTR [esi-0x39]
  4137c3:	add    al,0x2f
  4137c5:	imul   esp,ebp,0x4bef4b52
  4137cb:	rol    DWORD PTR [ecx],1
  4137cd:	inc    edi
  4137ce:	stos   BYTE PTR es:[edi],al
  4137cf:	xchg   BYTE PTR [edi-0x7923ee70],ah
  4137d5:	cs iret 
  4137d7:	call   0x7673:0x52248c3b
  4137de:	aaa    
  4137df:	xor    al,0x21
  4137e1:	loopne 0x413765
  4137e3:	lods   al,BYTE PTR ds:[esi]
  4137e4:	ror    DWORD PTR [ebp+0x47],1
  4137e7:	dec    eax
  4137e8:	ficom  DWORD PTR [esi]
  4137ea:	(bad)  [eax]
  4137ec:	jge    0x413773
  4137ee:	jae    0x413810
  4137f0:	fnstsw WORD PTR [ebx]
  4137f2:	push   ds
  4137f3:	sbb    al,0x95
  4137f5:	stos   DWORD PTR es:[edi],eax
  4137f6:	pop    ss
  4137f7:	jmp    0x413791
  4137f9:	fisttp WORD PTR [ebx-0x53]
  4137fc:	sub    al,BYTE PTR [ecx+0x18]
  4137ff:	or     al,0x83
  413801:	sbb    eax,0x32c5efb5
  413806:	not    BYTE PTR ds:0x1fd599f0
  41380c:	push   ss
  41380d:	xchg   edx,eax
  41380e:	div    DWORD PTR ds:0x4ff9d1f3
  413814:	add    bl,BYTE PTR [edx+eax*4+0x2f616ee7]
  41381b:	and    BYTE PTR [ebx-0x3e],dl
  41381e:	pop    ds
  41381f:	fwait
  413820:	ins    DWORD PTR es:[edi],dx
  413821:	xlat   BYTE PTR ds:[ebx]
  413822:	das    
  413823:	fdiv   QWORD PTR [eax]
  413825:	sbb    BYTE PTR [edi-0x47d03f55],0xcf
  41382c:	jne    0x413803
  41382e:	xchg   esi,eax
  41382f:	cmp    eax,0x608801
  413834:	jns    0x413881
  413836:	(bad)  
  413837:	add    eax,0x5349c0a9
  41383c:	outs   dx,DWORD PTR ds:[esi]
  41383d:	into   
  41383e:	adc    al,0xc2
  413840:	adc    ebp,edi
  413842:	invd   
  413844:	cmp    bl,BYTE PTR [ecx-0x708cf456]
  41384a:	es push ebx
  41384c:	mov    ds:0x4043bab2,al
  413851:	xchg   esi,eax
  413852:	mov    ds:0x272e4bba,eax
  413857:	inc    ebp
  413858:	ds int 0x7f
  41385b:	ud2    
  41385d:	jecxz  0x41389c
  41385f:	jmp    0x413833
  413861:	jmp    0x54df:0x72520775
  413868:	add    BYTE PTR [edx-0x5d],0x37
  41386c:	xor    eax,0xb2cd51b8
  413871:	push   ebx
  413872:	shr    BYTE PTR [eax],0xc7
  413875:	cmc    
  413876:	aas    
  413877:	rcr    BYTE PTR [edx-0x75],cl
  41387a:	hlt    
  41387b:	xchg   esi,eax
  41387c:	and    al,0xed
  41387e:	adc    eax,ebx
  413880:	(bad)  
  413881:	dec    edx
  413882:	xchg   ecx,eax
  413883:	cmp    BYTE PTR [ebx],dh
  413885:	or     ch,BYTE PTR [ebp+eax*4+0x15]
  413889:	mov    esi,0xc4e9b633
  41388e:	adc    cl,BYTE PTR ds:0xe1f2190
  413894:	xlat   BYTE PTR ds:[ebx]
  413895:	pushf  
  413896:	and    edx,ebp
  413898:	dec    ebp
  413899:	aam    0x6a
  41389b:	mov    DWORD PTR [ecx-0x42748a6f],0xacd45dfb
  4138a5:	push   edi
  4138a6:	mov    DWORD PTR [ebx],eax
  4138a8:	les    edi,FWORD PTR [ecx+ebp*8-0x80]
  4138ac:	add    esi,ebp
  4138ae:	iret   
  4138af:	dec    ebp
  4138b0:	xor    BYTE PTR [ecx],bl
  4138b2:	imul   ecx,DWORD PTR [ebx+ebx*8+0x2638c39c],0xcc793435
  4138bd:	sbb    eax,0x991e5302
  4138c2:	rol    DWORD PTR [edi+eax*2+0x34a1e736],1
  4138c9:	out    0x59,eax
  4138cb:	addr16 retf 0x1f87
  4138cf:	push   es
  4138d0:	outs   dx,BYTE PTR ds:[esi]
  4138d1:	mov    BYTE PTR [esi],cl
  4138d3:	or     DWORD PTR [ebp-0x43],ebp
  4138d6:	mov    bh,0x2f
  4138d8:	ins    DWORD PTR es:[edi],dx
  4138d9:	mov    ebx,DWORD PTR ds:0x3e744926
  4138df:	jo     0x413922
  4138e1:	mov    ebp,0x8cd5ec1a
  4138e6:	xchg   cl,bh
  4138e8:	xor    DWORD PTR [eax+0x6d],0x68ff2504
  4138ef:	cmp    BYTE PTR [eax-0x8],ah
  4138f2:	es pop ebp
  4138f4:	xchg   ebx,eax
  4138f5:	lds    esp,FWORD PTR [ecx+0x18]
  4138f8:	loop   0x4138d6
  4138fa:	sbb    al,0x68
  4138fc:	jle    0x4138f1
  4138fe:	jns    0x413897
  413900:	xchg   esi,eax
  413901:	pop    edi
  413902:	ja     0x413928
  413904:	ss (bad) 
  413906:	push   edx
  413907:	sub    eax,0xb015dbd7
  41390c:	inc    eax
  41390d:	cwde   
  41390e:	lea    ebx,[ebx]
  413910:	sub    ah,ch
  413912:	cmp    BYTE PTR [ebp+0x36099a4d],ah
  413918:	mov    ah,0x12
  41391a:	ret    
  41391b:	stos   DWORD PTR es:[edi],eax
  41391c:	or     ebx,eax
  41391e:	fcom   st(4)
  413920:	fs repz mov ah,0xf1
  413924:	sbb    cl,cl
  413926:	ins    BYTE PTR es:[edi],dx
  413927:	shl    BYTE PTR [edx+0xa],0x16
  41392b:	test   BYTE PTR [ebx-0xb],bl
  41392e:	mov    edx,0x3aa3a56e
  413933:	test   eax,0xf6268a8a
  413938:	ret    
  413939:	jmp    FWORD PTR [ecx-0x47]
  41393c:	xchg   ebp,eax
  41393d:	and    BYTE PTR [edi+0x46c39223],0x96
  413944:	int    0xcd
  413946:	xchg   esp,ecx
  413948:	sub    esi,DWORD PTR [esi-0x11]
  41394b:	fs retf 
  41394d:	cmp    al,0xbf
  41394f:	push   ss
  413950:	pop    ebp
  413951:	push   ebx
  413952:	int3   
  413953:	shr    DWORD PTR [ecx-0x3a406475],1
  413959:	jle    0x413971
  41395b:	pusha  
  41395c:	xor    dl,BYTE PTR [ebp+0x28]
  41395f:	push   ss
  413960:	pop    esp
  413961:	lods   eax,DWORD PTR ds:[esi]
  413962:	mov    edx,0x577a413
  413967:	pop    ebx
  413968:	or     bl,0x30
  41396b:	add    DWORD PTR [eax],0x3b09d9f5
  413971:	dec    ebx
  413972:	mov    eax,ds:0xed17a925
  413977:	dec    esp
  413978:	pusha  
  413979:	pop    eax
  41397a:	fnsave [eax+ebp*4]
  41397d:	ss xor edx,0x6540a8af
  413984:	add    al,0xf8
  413986:	and    BYTE PTR [edx-0x6],ah
  413989:	sbb    eax,0x80cf2625
  41398e:	out    dx,eax
  41398f:	push   ss
  413990:	push   0x69
  413992:	pop    edx
  413993:	out    dx,eax
  413994:	adc    dl,BYTE PTR [ebx-0x68]
  413997:	data16 loope 0x4139f8
  41399a:	sbb    edx,DWORD PTR [ecx-0x8]
  41399d:	cdq    
  41399e:	adc    ecx,DWORD PTR [eax+0x7ddde097]
  4139a4:	cwde   
  4139a5:	pop    esp
  4139a6:	sar    edx,0x72
  4139a9:	addr16 div bh
  4139ac:	repz xchg ebx,eax
  4139ae:	lahf   
  4139af:	sbb    BYTE PTR [ebp-0x52],0x80
  4139b3:	test   DWORD PTR [esi+0x6517a00],eax
  4139b9:	mov    al,ds:0x2350b91f
  4139be:	sbb    dh,ah
  4139c0:	sub    al,0x1
  4139c2:	mov    ah,0xed
  4139c4:	push   ss
  4139c5:	pop    ecx
  4139c6:	das    
  4139c7:	cmc    
  4139c8:	ss cld 
  4139ca:	inc    esp
  4139cb:	dec    esp
  4139cc:	psllw  mm6,QWORD PTR [edi+0x1c]
  4139d0:	out    dx,eax
  4139d1:	mov    eax,DWORD PTR [edx+0x58]
  4139d4:	push   0xf08be88b
  4139d9:	xor    DWORD PTR [edi+eiz*4-0x6b862bb3],esi
  4139e0:	stos   BYTE PTR es:[edi],al
  4139e1:	fwait
  4139e2:	pop    ecx
  4139e3:	test   BYTE PTR [eax],0x46
  4139e6:	ret    
  4139e7:	and    DWORD PTR [ebx+ebx*4-0x22d85cbf],ecx
  4139ee:	sub    cl,BYTE PTR [edi-0x24ced545]
  4139f4:	sbb    DWORD PTR [eax-0x3b],0xffffffc6
  4139f8:	xlat   BYTE PTR ds:[ebx]
  4139f9:	sbb    DWORD PTR [esi+0x6caac9f2],ebp
  4139ff:	jnp    0x413a2f
  413a01:	adc    al,0x3a
  413a03:	js     0x4139cc
  413a05:	outs   dx,DWORD PTR ds:[esi]
  413a06:	pop    ds
  413a07:	call   0x5915a520
  413a0c:	outs   dx,BYTE PTR ds:[esi]
  413a0d:	or     DWORD PTR [eax-0x5d],0x69c19578
  413a14:	mov    bl,0x46
  413a16:	sub    al,0xd1
  413a18:	ja     0x413a30
  413a1a:	jbe    0x413a02
  413a1c:	inc    ebp
  413a1d:	in     al,dx
  413a1e:	or     BYTE PTR [esi],cl
  413a20:	or     eax,0x1748467e
  413a25:	push   ss
  413a26:	mov    bh,0x9b
  413a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a29:	jno    0x413a7b
  413a2b:	das    
  413a2c:	fs jp  0x413a01
  413a2f:	addr16 jg 0x413a51
  413a32:	mov    ecx,0x403db43c
  413a37:	add    al,0x9
  413a39:	sub    eax,0xd263fcd2
  413a3e:	add    ecx,ebx
  413a40:	inc    edi
  413a41:	(bad)  
  413a42:	pop    esi
  413a43:	scas   al,BYTE PTR es:[edi]
  413a44:	xlat   BYTE PTR ds:[ebx]
  413a45:	dec    eax
  413a46:	arpl   bx,bp
  413a48:	fst    DWORD PTR [ecx-0x29243cc6]
  413a4e:	lock cld 
  413a50:	ins    BYTE PTR es:[edi],dx
  413a51:	popf   
  413a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a53:	adc    DWORD PTR [ebx-0xe],0x1752d5c
  413a5a:	mov    fs,edx
  413a5c:	mov    WORD PTR [edx-0x3a14bc5b],gs
  413a62:	mov    WORD PTR ds:0x3558ea77,es
  413a68:	xor    eax,DWORD PTR [edx]
  413a6a:	cmp    ebx,DWORD PTR [edi-0x658860f]
  413a70:	or     DWORD PTR [ebp-0x4963b3e],edi
  413a76:	push   edx
  413a77:	add    bl,BYTE PTR [ecx+0x6a]
  413a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a7b:	xor    BYTE PTR [ebx-0x7be1a5d4],dl
  413a81:	or     eax,0xfb33b054
  413a86:	call   0x4095:0x5c294a91
  413a8d:	push   ebx
  413a8e:	and    eax,0x18598253
  413a93:	mov    al,ds:0xfe6c8d88
  413a98:	inc    ebp
  413a99:	push   ebx
  413a9a:	arpl   ax,bp
  413a9c:	lock retf 0xf5f9
  413aa0:	jno    0x413ab4
  413aa2:	bound  ebp,QWORD PTR [esi+0x12c0601b]
  413aa8:	push   ss
  413aa9:	pushf  
  413aaa:	mov    DWORD PTR [ebx-0x45],ebx
  413aad:	adc    DWORD PTR [eax-0x10],edx
  413ab0:	pop    ds
  413ab1:	rcr    BYTE PTR [edx+eiz*4+0x79da0a8a],0x2
  413ab9:	mov    dh,BYTE PTR [edi-0x78]
  413abc:	pusha  
  413abd:	sub    eax,0x95a0929e
  413ac2:	int    0xd6
  413ac4:	pop    esi
  413ac5:	xor    BYTE PTR [edi],dl
  413ac7:	in     eax,dx
  413ac8:	pop    ds
  413ac9:	call   0xd55f4e3e
  413ace:	push   cs
  413acf:	ins    BYTE PTR es:[edi],dx
  413ad0:	in     eax,dx
  413ad1:	sbb    esi,DWORD PTR [esi+0x5904aec6]
  413ad7:	repnz aaa 
  413ad9:	int    0x77
  413adb:	shl    DWORD PTR [esi+0x5cc5263c],1
  413ae1:	inc    ebx
  413ae2:	loopne 0x413b48
  413ae4:	jb     0x413a92
  413ae6:	xchg   edx,eax
  413ae7:	inc    ebp
  413ae8:	jg     0x413b30
  413aea:	in     eax,dx
  413aeb:	pop    esp
  413aec:	sub    al,0xbb
  413aee:	enter  0x8065,0x8b
  413af2:	loopne 0x413a95
  413af4:	int    0xb2
  413af6:	clc    
  413af7:	mov    eax,0xec5e599c
  413afc:	jmp    0x477fc0d9
  413b01:	xor    esp,eax
  413b03:	xchg   edx,eax
  413b04:	dec    ecx
  413b05:	arpl   WORD PTR ds:0x93890d15,si
  413b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b0c:	push   ebp
  413b0d:	xor    ah,BYTE PTR [eax+0x5b]
  413b10:	and    edi,DWORD PTR [ecx+eax*4+0x2e]
  413b14:	sub    DWORD PTR [ecx],edx
  413b16:	inc    eax
  413b17:	sbb    bh,bl
  413b19:	xrelease xchg DWORD PTR [eax],edx
  413b1c:	jne    0x413b5a
  413b1e:	pusha  
  413b1f:	es adc eax,0xf231992f
  413b25:	leave  
  413b26:	mov    esi,0xb11030aa
  413b2b:	pop    es
  413b2c:	in     eax,dx
  413b2d:	add    eax,0xb2cd48d
  413b32:	int3   
  413b33:	lods   eax,DWORD PTR ds:[esi]
  413b34:	sbb    ecx,ecx
  413b36:	(bad)  
  413b37:	cmp    BYTE PTR [eax+0x62dbee49],al
  413b3d:	(bad)  
  413b3e:	xchg   edx,eax
  413b3f:	repz mov esp,0x9452d139
  413b45:	adc    eax,0x5edb4d8d
  413b4a:	mov    bh,0xf2
  413b4c:	nop
  413b4d:	mov    bh,BYTE PTR [edi]
  413b4f:	lods   al,BYTE PTR ds:[esi]
  413b50:	inc    esi
  413b51:	push   esp
  413b52:	clc    
  413b53:	sub    al,BYTE PTR [edx]
  413b55:	push   edx
  413b56:	ror    DWORD PTR [ebx-0xe],0x21
  413b5a:	mov    cl,0xe5
  413b5c:	shl    DWORD PTR [eax],1
  413b5e:	mov    al,ds:0xd819d9ff
  413b63:	xchg   ecx,eax
  413b64:	(bad)  
  413b65:	cmp    BYTE PTR [edi-0x2e],ah
  413b68:	into   
  413b69:	dec    eax
  413b6a:	in     al,0x92
  413b6c:	dec    edx
  413b6d:	shr    BYTE PTR [ebx+0x38],0x74
  413b71:	pusha  
  413b72:	sbb    DWORD PTR [ecx+0x28570a9e],0xa5a8c379
  413b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b7d:	stc    
  413b7e:	add    ecx,DWORD PTR [esi]
  413b80:	popf   
  413b81:	mov    edi,0x438c3b36
  413b86:	aad    0xb7
  413b88:	jle    0x413b38
  413b8a:	scas   eax,DWORD PTR es:[edi]
  413b8b:	xchg   DWORD PTR [edx],esp
  413b8d:	mov    eax,0xec2d12b3
  413b92:	nop
  413b93:	push   es
  413b94:	je     0x413b65
  413b96:	pop    edx
  413b97:	push   0xffffffc9
  413b99:	das    
  413b9a:	mov    cl,0xae
  413b9c:	jbe    0x413b38
  413b9e:	sahf   
  413b9f:	icebp  
  413ba0:	ret    0x35ee
  413ba3:	cmp    al,0x82
  413ba5:	inc    esi
  413ba6:	cmc    
  413ba7:	fcomp  DWORD PTR [edx+0x64]
  413baa:	cmp    DWORD PTR [ebx+edi*2-0x70],edx
  413bae:	ja     0x413be7
  413bb0:	pop    edx
  413bb1:	sbb    al,0xd2
  413bb3:	into   
  413bb4:	ret    0xff79
  413bb7:	stos   BYTE PTR es:[edi],al
  413bb8:	in     al,0x6e
  413bba:	mov    gs,ebp
  413bbc:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413bbe:	xchg   esp,eax
  413bbf:	pop    ss
  413bc0:	leave  
  413bc1:	enter  0xfac0,0x8a
  413bc5:	mov    BYTE PTR [edx-0x4feb14],bl
  413bcb:	stos   BYTE PTR es:[edi],al
  413bcc:	scas   eax,DWORD PTR es:[edi]
  413bcd:	push   0x3f
  413bcf:	nop
  413bd0:	inc    edx
  413bd1:	sub    eax,0x5eefc53b
  413bd6:	inc    eax
  413bd7:	dec    ebp
  413bd8:	inc    ebx
  413bd9:	dec    esp
  413bda:	adc    edi,ebp
  413bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bde:	jne    0x413c5c
  413be0:	outs   dx,BYTE PTR ds:[esi]
  413be1:	mov    al,bl
  413be3:	out    dx,al
  413be4:	fs ins DWORD PTR es:[edi],dx
  413be6:	xor    bl,BYTE PTR [eax-0x2e]
  413be9:	mov    ecx,0x68b2f798
  413bee:	sar    cl,0x9f
  413bf1:	dec    esi
  413bf2:	cmc    
  413bf3:	inc    ecx
  413bf4:	sub    cl,BYTE PTR [ebx-0x77c24288]
  413bfa:	push   ss
  413bfb:	loopne 0x413c04
  413bfd:	mov    ecx,0x93d59e18
  413c02:	pop    es
  413c03:	repnz mov DWORD PTR [esi+eax*1+0x57ca98cf],ebp
  413c0b:	retf   
  413c0c:	in     eax,0x4
  413c0e:	call   0xd15aa3df
  413c13:	pop    ebp
  413c14:	inc    edx
  413c15:	mov    edx,0x5ec023f5
  413c1a:	daa    
  413c1b:	jnp    0x413c86
  413c1d:	push   edx
  413c1e:	sbb    BYTE PTR [ecx-0x12b611d7],0x44
  413c25:	xor    al,0x98
  413c27:	cmp    al,0x0
  413c29:	xor    BYTE PTR [ecx],ah
  413c2b:	and    al,bh
  413c2d:	inc    esp
  413c2e:	fldl2t 
  413c30:	popf   
  413c31:	ret    
  413c32:	mov    edi,0xe66ddebb
  413c37:	mov    WORD PTR [edx+0x17dc5bd5],ss
  413c3d:	loopne 0x413c54
  413c3f:	out    dx,al
  413c40:	ds push 0xc4beab7
  413c46:	cmp    eax,0x5f387e9c
  413c4b:	xchg   dh,ah
  413c4d:	add    ah,BYTE PTR [esi]
  413c4f:	sbb    ch,dl
  413c51:	push   edi
  413c52:	retf   0x5aa5
  413c55:	mov    al,ds:0x25301616
  413c5a:	push   0x73048411
  413c5f:	call   0xea5cf820
  413c64:	in     eax,0xcd
  413c66:	pop    eax
  413c67:	push   0x77
  413c69:	push   ecx
  413c6a:	sub    al,0x8e
  413c6c:	pop    es
  413c6d:	pop    ebp
  413c6e:	rcr    ah,cl
  413c70:	pop    es
  413c71:	loop   0x413ccf
  413c73:	push   edi
  413c74:	pop    DWORD PTR [esp+esi*1+0x57]
  413c78:	outs   dx,BYTE PTR ds:[esi]
  413c79:	cmc    
  413c7a:	sbb    BYTE PTR [eax-0xe],ch
  413c7d:	pop    edi
  413c7e:	cli    
  413c7f:	into   
  413c80:	dec    ebp
  413c81:	sub    ecx,0x7fe447f2
  413c87:	mov    bl,BYTE PTR ds:0x9b529c07
  413c8d:	sahf   
  413c8e:	dec    eax
  413c8f:	pop    ebx
  413c90:	loope  0x413c30
  413c92:	addr16 bnd jno 0x413c74
  413c96:	imul   esp,DWORD PTR ds:0xd5b11249,0x449df204
  413ca0:	bound  edi,QWORD PTR [ebx+0x1a]
  413ca3:	aad    0x9c
  413ca5:	test   DWORD PTR [ebx],ebx
  413ca7:	mov    al,ds:0xe0094062
  413cac:	sub    al,0x35
  413cae:	cs and edx,ebp
  413cb1:	xchg   edi,eax
  413cb2:	xor    DWORD PTR [edi-0x170bf54a],edx
  413cb8:	dec    ecx
  413cb9:	lods   eax,DWORD PTR ds:[esi]
  413cba:	cdq    
  413cbb:	dec    esp
  413cbc:	aaa    
  413cbd:	mov    ds:0xe3d152f7,al
  413cc2:	xor    DWORD PTR [ecx-0x5b],ebx
  413cc5:	cli    
  413cc6:	test   BYTE PTR [eax],ch
  413cc8:	fwait
  413cc9:	ret    0xca63
  413ccc:	and    al,0xfc
  413cce:	js     0x413c51
  413cd0:	sbb    dl,BYTE PTR [esi+0x4bd8884f]
  413cd6:	shl    BYTE PTR [eax],0x9b
  413cd9:	ds and al,0xee
  413cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cdd:	or     al,0xdc
  413cdf:	push   edi
  413ce0:	cmp    BYTE PTR [ebp+edx*2+0x587415c9],ah
  413ce7:	jge    0x413d42
  413ce9:	jne    0x413cd7
  413ceb:	out    dx,eax
  413cec:	outs   dx,BYTE PTR ds:[esi]
  413ced:	and    eax,0x6b9a3a03
  413cf2:	push   esp
  413cf3:	pop    ecx
  413cf4:	jmp    0x413d42
  413cf6:	dec    eax
  413cf7:	cdq    
  413cf8:	inc    edx
  413cf9:	addr16 jg 0x413d05
  413cfc:	push   esi
  413cfd:	pop    ebp
  413cfe:	push   edx
  413cff:	mov    eax,ds:0xe33ca6e0
  413d04:	inc    edi
  413d05:	sar    BYTE PTR [edx+0x67],0x79
  413d09:	pop    ebp
  413d0a:	mov    WORD PTR ds:0xf8e21308,?
  413d10:	mov    edx,0xb24ba858
  413d15:	sbb    al,0x87
  413d17:	mov    ebx,0x9b5aec25
  413d1c:	mov    ecx,DWORD PTR ds:[ecx+0x3443288d]
  413d23:	and    DWORD PTR [esi-0x340476be],0xffffffc7
  413d2a:	in     al,dx
  413d2b:	jmp    DWORD PTR [ebp+0x5c]
  413d2e:	mov    ecx,0x50e6fc5c
  413d33:	inc    ecx
  413d34:	int3   
  413d35:	sbb    DWORD PTR [edx-0x67],edi
  413d38:	pop    DWORD PTR [ebx]
  413d3a:	adc    al,0xcd
  413d3c:	retf   0xa640
  413d3f:	gs stc 
  413d41:	repz xchg esp,eax
  413d43:	pop    es
  413d44:	sbb    al,0x1e
  413d46:	push   ds
  413d47:	or     cl,BYTE PTR [edx+0x290fb22a]
  413d4d:	pop    esp
  413d4e:	push   ds
  413d4f:	dec    ebx
  413d50:	push   es
  413d51:	mov    esi,DWORD PTR [eax+edx*2]
  413d54:	test   BYTE PTR [esp+eiz*8],al
  413d57:	cmp    dl,BYTE PTR [esi+esi*1+0x44]
  413d5b:	adc    DWORD PTR [eax+0x53],ebp
  413d5e:	call   ecx
  413d60:	jne    0x413d92
  413d62:	in     eax,0x12
  413d64:	dec    edi
  413d65:	xor    esp,0xadf6d511
  413d6b:	into   
  413d6c:	adc    BYTE PTR [ebp-0x21],bh
  413d6f:	jle    0x413d11
  413d71:	int3   
  413d72:	pushf  
  413d73:	pop    ss
  413d74:	xor    eax,0x9dffc990
  413d79:	fwait
  413d7a:	xor    ebp,DWORD PTR [ecx]
  413d7c:	nop
  413d7d:	data16 out dx,al
  413d7f:	push   ss
  413d80:	xchg   esp,eax
  413d81:	xchg   edx,eax
  413d82:	mov    ds:0x2667a523,eax
  413d87:	mul    DWORD PTR [edi+esi*8+0x20e6ed6c]
  413d8e:	cmp    BYTE PTR [eax-0x74],dl
  413d91:	cs add eax,0xfdf5c12c
  413d97:	in     al,0x2e
  413d99:	out    0x62,eax
  413d9b:	clc    
  413d9c:	sub    BYTE PTR [ebp+0xa],al
  413d9f:	push   esi
  413da0:	ret    0x167
  413da3:	mov    ch,0x67
  413da5:	enter  0x94a0,0x61
  413da9:	icebp  
  413daa:	push   es
  413dab:	out    dx,eax
  413dac:	xor    BYTE PTR [edi+edx*8+0x42],al
  413db0:	(bad)  
  413db1:	fwait
  413db2:	pushf  
  413db3:	inc    esp
  413db4:	div    DWORD PTR [esp+ebx*1-0x473b71d6]
  413dbb:	fldenv [eax+0x42]
  413dbe:	sbb    bl,dh
  413dc0:	addr16 ss ja 0x413de5
  413dc4:	xchg   ebp,eax
  413dc5:	rcl    DWORD PTR [ecx+0x1f73487b],0xc4
  413dcc:	and    BYTE PTR [ecx+0x7256bb5],dl
  413dd2:	adc    ecx,DWORD PTR [edi-0x779891c8]
  413dd8:	(bad)  
  413dd9:	and    ecx,DWORD PTR [ebx]
  413ddb:	xchg   ebp,eax
  413ddc:	jmp    0xaacb82ad
  413de1:	into   
  413de2:	(bad)  
  413de3:	mov    ch,0x87
  413de5:	daa    
  413de6:	or     BYTE PTR [edi-0x54],bh
  413de9:	in     al,dx
  413dea:	loop   0x413e5f
  413dec:	adc    dl,BYTE PTR [edi]
  413dee:	into   
  413def:	mov    ebx,0x6d41a96f
  413df4:	or     ebp,eax
  413df6:	mov    eax,ds:0xd7707f4e
  413dfb:	shl    BYTE PTR [edx-0x952f5b1],0x77
  413e02:	and    BYTE PTR [edi-0x2d],cl
  413e05:	jo     0x413e35
  413e07:	popf   
  413e08:	(bad)  
  413e09:	jnp    0x413dff
  413e0b:	xlat   BYTE PTR ds:[ebx]
  413e0c:	nop
  413e0d:	test   al,0x33
  413e0f:	mov    edi,0xe88a67d8
  413e14:	sti    
  413e15:	adc    al,0x1d
  413e17:	jmp    0xd92dadd8
  413e1c:	sub    eax,DWORD PTR [eax+0xf]
  413e1f:	xchg   ecx,eax
  413e20:	sbb    ah,BYTE PTR [edx]
  413e22:	jae    0x413e33
  413e24:	cmp    DWORD PTR [esi-0x21],eax
  413e27:	repnz enter 0xee59,0x9e
  413e2c:	xchg   ebx,eax
  413e2d:	dec    ecx
  413e2e:	arpl   si,sp
  413e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e31:	dec    esi
  413e32:	ret    
  413e33:	sbb    dh,BYTE PTR [edi]
  413e35:	pop    ecx
  413e36:	or     DWORD PTR [ecx],0x3d
  413e39:	sbb    cl,BYTE PTR [esp+ebp*1+0x59]
  413e3d:	test   DWORD PTR [ebp+eiz*4-0x31],esp
  413e41:	mov    dl,0xbc
  413e43:	arpl   di,bp
  413e45:	add    eax,0xf798b0d0
  413e4a:	out    dx,eax
  413e4b:	add    BYTE PTR [edx+0x79],dh
  413e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e4f:	sahf   
  413e50:	mov    WORD PTR [ecx+edx*2],cs
  413e53:	jo     0x413e18
  413e55:	mov    cl,0x2
  413e57:	out    0x66,eax
  413e59:	enter  0xa226,0x2d
  413e5d:	lea    ebx,[edi]
  413e5f:	test   eax,0xba4dec15
  413e64:	ss mov esi,0xf2a4db7b
  413e6a:	add    DWORD PTR [edi],ecx
  413e6c:	repnz dec ebx
  413e6e:	jle    0x413e6b
  413e70:	cmp    al,0x68
  413e72:	jmp    0xb76c37aa
  413e77:	jp     0x413e78
  413e79:	adc    ah,BYTE PTR [ebx-0x43]
  413e7c:	out    0xe6,eax
  413e7e:	in     eax,0xb1
  413e80:	cdq    
  413e81:	add    eax,0x6acd7a48
  413e86:	out    0x97,al
  413e88:	shr    BYTE PTR ds:0xfed19e30,1
  413e8e:	mov    bh,0xf4
  413e90:	mov    bh,0x59
  413e92:	and    eax,0xb94b40da
  413e97:	in     al,dx
  413e98:	rcr    edi,1
  413e9a:	retf   0x42fa
  413e9d:	sbb    al,0xdf
  413e9f:	mov    ds:0xcac83a10,al
  413ea4:	mov    dh,0x2b
  413ea6:	cmp    esp,DWORD PTR [edi]
  413ea8:	aaa    
  413ea9:	and    DWORD PTR [edx],esi
  413eab:	fxch   st(4)
  413ead:	add    al,0x64
  413eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb0:	jge    0x413ee8
  413eb2:	out    0x8e,al
  413eb4:	xor    al,0x58
  413eb6:	jno    0x413efc
  413eb8:	ds xor eax,0x831473fa
  413ebe:	push   ecx
  413ebf:	in     al,dx
  413ec0:	fmul   DWORD PTR [ebx-0x1538c24c]
  413ec6:	jae    0x413f17
  413ec8:	ss jg  0x413f27
  413ecb:	xchg   esp,eax
  413ecc:	push   cs
  413ecd:	dec    ebp
  413ece:	mov    ?,WORD PTR [eax+edx*1+0x5d888f6]
  413ed5:	push   0x81af31eb
  413eda:	loopne 0x413ecf
  413edc:	int    0x24
  413ede:	xchg   esi,eax
  413edf:	mov    al,ds:0x479e3cae
  413ee4:	cwde   
  413ee5:	jno    0x413eac
  413ee7:	mov    cl,0x15
  413ee9:	imul   ecx,DWORD PTR [edx+0x22],0xffffffed
  413eed:	lock lea ebp,[ecx+0x61]
  413ef1:	imul   edx,DWORD PTR [eax-0x58],0xd893f134
  413ef8:	cwde   
  413ef9:	mov    cl,0x52
  413efb:	jo     0x413ee1
  413efd:	mov    ?,WORD PTR [ebx+edi*8]
  413f00:	cmp    eax,0x3c83774b
  413f05:	(bad)  
  413f06:	(bad)  
  413f07:	sbb    al,ch
  413f09:	pop    edi
  413f0a:	dec    esi
  413f0b:	adc    dh,BYTE PTR [edi+0x1cc90077]
  413f11:	dec    esp
  413f12:	emms   
  413f14:	mov    WORD PTR [edx-0x6cbeda60],fs
  413f1a:	add    bh,ah
  413f1c:	ins    DWORD PTR es:[edi],dx
  413f1d:	loopne 0x413f99
  413f1f:	pop    DWORD PTR [edi+0x15]
  413f22:	stos   DWORD PTR es:[edi],eax
  413f23:	dec    esi
  413f24:	xchg   ebx,eax
  413f25:	jno    0x413efb
  413f27:	sbb    BYTE PTR [ecx],al
  413f29:	sti    
  413f2a:	sbb    DWORD PTR [edi+ebp*8-0x57f67403],eax
  413f31:	pop    edi
  413f32:	jge    0x413ef4
  413f34:	pusha  
  413f35:	lods   eax,DWORD PTR ds:[esi]
  413f36:	sub    al,0xb
  413f38:	pusha  
  413f39:	adc    esi,DWORD PTR [ecx]
  413f3b:	loope  0x413f9a
  413f3d:	mov    esp,0xc44b49cb
  413f42:	cmc    
  413f43:	loopne 0x413f26
  413f45:	shl    BYTE PTR [ecx+0x29b369a6],cl
  413f4b:	mov    eax,ds:0x5161df06
  413f50:	xor    dh,cl
  413f52:	push   eax
  413f53:	xchg   ebp,eax
  413f54:	push   eax
  413f55:	xchg   ebx,eax
  413f56:	dec    edx
  413f57:	dec    ebp
  413f58:	mov    eax,0x259bc95b
  413f5d:	push   0x59af6c5f
  413f62:	jle    0x413f12
  413f64:	or     DWORD PTR ds:0x3af4e09d,edx
  413f6a:	mov    cl,0xdf
  413f6c:	nop
  413f6d:	pop    ebp
  413f6e:	push   edi
  413f6f:	loopne 0x413f86
  413f71:	popa   
  413f72:	mov    esi,0x8670e2c2
  413f77:	mov    esp,DWORD PTR [edi+ebp*1]
  413f7a:	mov    ecx,0x4f46bff8
  413f7f:	xchg   ebp,eax
  413f80:	mov    esp,0xcac1f844
  413f85:	les    esi,FWORD PTR [ebx-0x13f29ed6]
  413f8b:	cli    
  413f8c:	sbb    DWORD PTR ds:0x95b8851d,esi
  413f92:	out    dx,al
  413f93:	(bad)  
  413f94:	push   edx
  413f95:	push   ebx
  413f96:	push   0xd969d2ad
  413f9b:	jp     0x413f49
  413f9d:	push   0x43cc2735
  413fa2:	push   eax
  413fa3:	out    0x92,al
  413fa5:	in     al,0x5b
  413fa7:	push   esi
  413fa8:	lods   eax,DWORD PTR ds:[esi]
  413fa9:	inc    eax
  413faa:	cld    
  413fab:	popf   
  413fac:	mov    al,0x53
  413fae:	mov    edi,0xa6e74227
  413fb3:	dec    edx
  413fb4:	retf   0xc6a2
  413fb7:	sar    DWORD PTR [ebx-0x2a],0xba
  413fbb:	jle    0x413fc5
  413fbd:	add    al,0xd8
  413fbf:	mov    ebx,0xa9cc7d4c
  413fc4:	pop    esp
  413fc5:	sahf   
  413fc6:	nop
  413fc7:	sub    BYTE PTR [eiz*2-0x7c023a84],dh
  413fce:	fbld   TBYTE PTR [edx-0x65]
  413fd1:	cmp    eax,0xbfda4868
  413fd6:	xchg   BYTE PTR [ebx+0x14b0c0de],ah
  413fdc:	(bad)  
  413fde:	sbb    ah,BYTE PTR [ecx-0x47ea7150]
  413fe4:	icebp  
  413fe5:	ror    dh,cl
  413fe7:	inc    esp
  413fe8:	leave  
  413fe9:	xchg   esi,eax
  413fea:	loop   0x414021
  413fec:	adc    BYTE PTR [esi+ebx*1],bl
  413fef:	cmp    esp,DWORD PTR [edi]
  413ff1:	cli    
  413ff2:	cmp    ecx,0x19
  413ff5:	jge    0x414067
  413ff7:	xor    eax,0x340fad01
  413ffc:	mov    esp,0xe4403e33
  414001:	add    esp,DWORD PTR [eax-0x77]
  414004:	or     BYTE PTR [ebp+0x547d4d8e],dl
  41400a:	aas    
  41400b:	xor    dl,BYTE PTR [ebp+0x39ca4e32]
  414011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414012:	jg     0x41402b
  414014:	retf   
  414015:	pusha  
  414016:	adc    eax,0xa167483
  41401b:	mov    bl,al
  41401d:	and    eax,DWORD PTR [ebx+0x656307b4]
  414023:	jl     0x413ff6
  414025:	mov    ebp,0xaeb5aec7
  41402a:	mov    ecx,DWORD PTR [esp+esi*1+0x4f8b1f4d]
  414031:	mov    ah,0x1
  414033:	lea    ebx,ds:0x18bfc738
  414039:	aam    0xa6
  41403b:	mov    dl,0x84
  41403d:	mov    ah,0x63
  41403f:	xchg   esp,eax
  414040:	out    dx,al
  414041:	mov    edi,0x657ad7ca
  414046:	jp     0x413fd9
  414048:	mov    ds:0xfe5d4d35,eax
  41404d:	mov    ecx,0x57e87eed
  414052:	pop    edi
  414053:	sub    eax,0xec9d9568
  414058:	ret    0xa7d9
  41405b:	loopne 0x4140be
  41405d:	je     0x41406c
  41405f:	add    eax,ebp
  414061:	mov    ch,0xfa
  414063:	(bad)  
  414065:	outs   dx,BYTE PTR ds:[esi]
  414066:	fist   WORD PTR [ebp+0x31]
  414069:	pop    ecx
  41406a:	jmp    0x2143:0x98667786
  414071:	push   esi
  414072:	adc    al,0xa0
  414074:	push   ebx
  414075:	cmc    
  414076:	leave  
  414077:	in     al,dx
  414078:	push   ebp
  414079:	sbb    DWORD PTR [eax+0x64],esp
  41407c:	jmp    0xc4dd813a
  414081:	or     eax,DWORD PTR [eax+edx*4-0x77]
  414085:	mov    ds:0x981666fd,eax
  41408a:	jg     0x414079
  41408c:	push   edi
  41408d:	int3   
  41408e:	(bad)  
  41408f:	jp     0x414034
  414091:	cmp    DWORD PTR [edx-0x59b38179],edi
  414097:	or     bh,0xc3
  41409a:	inc    eax
  41409b:	(bad)  
  41409c:	enter  0x6b27,0x8c
  4140a0:	jmp    0x41408f
  4140a2:	shl    bl,cl
  4140a4:	pop    eax
  4140a5:	cmp    BYTE PTR [edi-0x37],0x3b
  4140a9:	enter  0x595c,0x12
  4140ad:	rcr    BYTE PTR [edx],cl
  4140af:	sti    
  4140b0:	adc    esi,ebx
  4140b2:	clc    
  4140b3:	sbb    ebx,ebx
  4140b5:	sbb    edx,DWORD PTR [esi-0x71]
  4140b8:	inc    ecx
  4140b9:	adc    ebp,DWORD PTR [ecx-0x66]
  4140bc:	dec    ebx
  4140bd:	add    eax,DWORD PTR [esi-0x6508a9a3]
  4140c3:	sbb    al,0x4f
  4140c5:	pusha  
  4140c6:	dec    eax
  4140c7:	sar    BYTE PTR [eax+edi*4],1
  4140ca:	dec    edx
  4140cb:	retf   0x28ad
  4140ce:	in     eax,dx
  4140cf:	in     eax,dx
  4140d0:	add    DWORD PTR [ebp+0x6],ecx
  4140d3:	dec    esp
  4140d4:	and    DWORD PTR [ebp+0x1c],ebp
  4140d7:	push   cs
  4140d8:	loop   0x4140f7
  4140da:	push   eax
  4140db:	imul   DWORD PTR [edx-0x55]
  4140de:	sbb    cl,dl
  4140e0:	add    al,0x29
  4140e2:	inc    edi
  4140e3:	(bad)  
  4140e4:	(bad)  
  4140e5:	pop    ds
  4140e6:	lahf   
  4140e7:	loopne 0x414093
  4140e9:	aam    0x56
  4140eb:	add    ch,al
  4140ed:	inc    ecx
  4140ee:	cdq    
  4140ef:	adc    eax,0x8699c40d
  4140f4:	xor    eax,0xbdeaa5c7
  4140f9:	arpl   WORD PTR [ecx],si
  4140fb:	xchg   edx,eax
  4140fc:	call   0x6c6:0xae48d0c7
  414103:	mov    edi,0x4f539e54
  414108:	cmp    al,0x78
  41410a:	jmp    0x1823:0x7b121419
  414111:	inc    esi
  414112:	retf   0xc75e
  414115:	mov    BYTE PTR [edi+0x3ff90fc8],dh
  41411b:	dec    ebx
  41411c:	dec    edx
  41411d:	or     ecx,DWORD PTR [edx+0x352923c5]
  414123:	scas   al,BYTE PTR es:[edi]
  414124:	pop    ebp
  414125:	ja     0x41415e
  414127:	mov    esp,DWORD PTR ds:0x7fbb0b9f
  41412e:	dec    ecx
  41412f:	cld    
  414130:	dec    ebx
  414131:	inc    ecx
  414132:	mov    ch,0x95
  414134:	scas   al,BYTE PTR es:[edi]
  414135:	loop   0x4140fe
  414137:	ds mov esi,0x6f01fd87
  41413d:	test   al,0x96
  41413f:	sub    ebp,DWORD PTR [ebx-0x71c67f7f]
  414145:	out    dx,eax
  414146:	jb     0x4141a1
  414148:	mov    bl,0xa3
  41414a:	popf   
  41414b:	push   0x2d21280c
  414150:	scas   eax,DWORD PTR es:[edi]
  414151:	(bad)  
  414152:	neg    DWORD PTR [ecx-0x12]
  414155:	pop    ebx
  414156:	xchg   edx,eax
  414157:	mov    bl,0x6
  414159:	mov    ah,0x29
  41415b:	xchg   edx,eax
  41415c:	jmp    0x1643a806
  414161:	das    
  414162:	pop    edx
  414163:	and    eax,0x73db6e5c
  414168:	(bad)  
  414169:	arpl   WORD PTR [eax+0x6ca8e549],di
  41416f:	(bad)  
  414171:	ret    
  414172:	jecxz  0x4141cc
  414174:	adc    al,0x3c
  414176:	xchg   edx,eax
  414177:	fs jb  0x4141a8
  41417a:	popf   
  41417b:	std    
  41417c:	(bad)  
  41417d:	lea    ebp,[esi+0x7d]
  414180:	repz xchg edx,eax
  414182:	or     bh,BYTE PTR [edx-0x66]
  414185:	sub    DWORD PTR [edx],0x600cca8
  41418b:	mov    edi,0x25be9eb8
  414190:	imul   esi,DWORD PTR ds:0xbdddf7f4,0xfffffff1
  414197:	jp     0x4141ac
  414199:	out    dx,eax
  41419a:	sti    
  41419b:	mov    eax,ds:0xa5efe05c
  4141a0:	sbb    BYTE PTR [ebx],bl
  4141a2:	push   ss
  4141a3:	pop    es
  4141a4:	cwde   
  4141a5:	xor    al,0x13
  4141a7:	loop   0x4141fa
  4141a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141aa:	push   ecx
  4141ab:	ins    BYTE PTR es:[edi],dx
  4141ac:	call   0xe1920368
  4141b1:	das    
  4141b2:	jns    0x414211
  4141b4:	push   0xffffffce
  4141b6:	(bad)  
  4141b7:	cmc    
  4141b8:	adc    al,BYTE PTR [esi+ecx*4+0x66]
  4141bc:	lods   al,BYTE PTR ds:[esi]
  4141bd:	mov    al,0x8b
  4141bf:	sub    eax,0xf53a9d8f
  4141c4:	mov    al,0xd1
  4141c6:	and    DWORD PTR [ecx+0x2c],eax
  4141c9:	nop
  4141ca:	shl    DWORD PTR [edi],0xe1
  4141cd:	and    ch,BYTE PTR ds:0x5fae37d9
  4141d3:	clc    
  4141d4:	pop    edx
  4141d5:	ret    0xc0b1
  4141d8:	pop    ss
  4141d9:	ins    BYTE PTR es:[edi],dx
  4141da:	cmp    DWORD PTR [esi+0x7ab0443],esp
  4141e0:	mov    ebx,0x98b94081
  4141e5:	f2xm1  
  4141e7:	out    dx,al
  4141e8:	mov    al,0x7e
  4141ea:	and    ecx,ecx
  4141ec:	ja     0x4141b5
  4141ee:	call   0x3ef70884
  4141f3:	(bad)  
  4141f4:	clc    
  4141f5:	scas   al,BYTE PTR es:[edi]
  4141f6:	aas    
  4141f7:	(bad)  
  4141f8:	jo     0x4141af
  4141fa:	js     0x414207
  4141fc:	xchg   edi,eax
  4141fd:	xchg   BYTE PTR [esi+0x7b],dl
  414200:	adc    BYTE PTR es:[ecx+0x1a078cc1],dh
  414207:	push   esp
  414208:	leave  
  414209:	sbb    ch,BYTE PTR [eax-0x1f]
  41420c:	(bad)  
  41420d:	xchg   esp,eax
  41420e:	push   ds
  41420f:	pop    esp
  414210:	push   ecx
  414211:	das    
  414212:	sbb    eax,0x4b7dcab1
  414217:	xor    bl,BYTE PTR [edx+0x13dce205]
  41421d:	fs ret 
  41421f:	repnz std 
  414221:	inc    esp
  414222:	xchg   esi,eax
  414223:	scas   al,BYTE PTR es:[edi]
  414224:	pop    ss
  414225:	ins    DWORD PTR es:[edi],dx
  414226:	mov    ds:0x2e898567,al
  41422b:	jg     0x4141c9
  41422d:	out    0xf,al
  41422f:	push   cs
  414230:	mov    ah,BYTE PTR [ecx+ecx*8+0x79997aef]
  414237:	stos   BYTE PTR es:[edi],al
  414238:	mov    ds:0xfb450403,al
  41423d:	push   ds
  41423e:	jmp    0x774f:0xcf869689
  414245:	jb     0x4141eb
  414247:	cwde   
  414248:	sbb    al,0xc4
  41424a:	sbb    BYTE PTR [edi+0x19],al
  41424d:	inc    edx
  41424e:	pop    esi
  41424f:	jp     0x4141df
  414251:	push   esi
  414252:	lahf   
  414253:	cdq    
  414254:	pop    edi
  414255:	xor    DWORD PTR [ecx],ebp
  414257:	xchg   ah,al
  414259:	lods   al,BYTE PTR ds:[esi]
  41425a:	mov    ebp,0xaa6b5cc8
  41425f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414260:	or     BYTE PTR [eax-0x4cf3e4dd],cl
  414266:	outs   dx,DWORD PTR ds:[esi]
  414267:	stc    
  414268:	bound  eax,QWORD PTR [ebx-0x49]
  41426b:	push   ecx
  41426c:	leave  
  41426d:	dec    ebx
  41426e:	dec    ebp
  41426f:	adc    DWORD PTR [edx+0x4d],edx
  414272:	das    
  414273:	ror    DWORD PTR [ebp-0x774d71c3],cl
  414279:	jnp    0x414259
  41427b:	call   0x9ceac91e
  414280:	cmp    bl,BYTE PTR [edx]
  414282:	popa   
  414283:	(bad)  
  414284:	sbb    dh,BYTE PTR [ecx+edi*2+0x2719f2c2]
  41428b:	ins    BYTE PTR es:[edi],dx
  41428c:	fxch   st(0)
  41428e:	loop   0x414246
  414290:	pop    ebp
  414291:	add    ebp,DWORD PTR [ebx-0x50d6f1b1]
  414297:	shl    BYTE PTR [ecx+0x42],0x4d
  41429b:	lea    eax,[ebp-0x7c]
  41429e:	(bad)  
  41429f:	sbb    dh,BYTE PTR cs:[eax-0x4c7aa8e2]
  4142a6:	fstp   QWORD PTR [esi-0x34]
  4142a9:	jb     0x4142fa
  4142ab:	lea    ebp,[eax+0x4d]
  4142ae:	lods   eax,DWORD PTR ds:[esi]
  4142af:	addr16 aam 0x16
  4142b2:	shr    BYTE PTR [esi-0x5d54b2c3],0x10
  4142b9:	ss jno 0x4142fc
  4142bc:	xchg   esp,eax
  4142bd:	test   DWORD PTR fs:[bx+si],esp
  4142c1:	(bad)  
  4142c2:	addr16 test cl,cl
  4142c5:	loop   0x4142bd
  4142c7:	nop
  4142c8:	cmc    
  4142c9:	jle    0x414260
  4142cb:	jns    0x414301
  4142cd:	ins    DWORD PTR es:[edi],dx
  4142ce:	dec    edx
  4142cf:	cdq    
  4142d0:	and    cl,BYTE PTR [ebx-0x4446558c]
  4142d6:	enter  0xdcf2,0x1a
  4142da:	and    ah,al
  4142dc:	jle    0x414293
  4142de:	xchg   BYTE PTR [ecx+ebp*2],dl
  4142e1:	outs   dx,BYTE PTR ds:[esi]
  4142e2:	sbb    DWORD PTR [esi+ebp*4-0x54c5225f],ebp
  4142e9:	push   ds
  4142ea:	push   esi
  4142eb:	mov    ds,ebp
  4142ed:	iret   
  4142ee:	outs   dx,DWORD PTR ds:[esi]
  4142ef:	popf   
  4142f0:	fbld   TBYTE PTR [ebp+0x42]
  4142f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f4:	test   DWORD PTR [edi+0x2b],0x4ee46b12
  4142fb:	mov    ?,edx
  4142fd:	loope  0x414290
  4142ff:	mov    ds,WORD PTR [ebx+0x3a]
  414302:	aam    0xb7
  414304:	or     eax,DWORD PTR ds:0x51c8f710
  41430a:	cdq    
  41430b:	in     al,dx
  41430c:	popf   
  41430d:	mov    ah,0xfe
  41430f:	js     0x4142c7
  414311:	and    dh,BYTE PTR [edi+0x6a0459a3]
  414317:	push   ss
  414318:	push   esp
  414319:	fistp  DWORD PTR [esi+edi*1-0x63]
  41431d:	jns    0x41433b
  41431f:	out    0x7d,al
  414321:	fdivr  DWORD PTR [esi-0x16]
  414324:	inc    ebp
  414325:	imul   ebx,ebx,0xffffffac
  414328:	xchg   BYTE PTR [eax+0x20],ah
  41432b:	pop    ss
  41432c:	and    eax,0xd5047703
  414331:	jg     0x4143a6
  414333:	xrelease xchg DWORD PTR ds:[eax+0x49f2d8ea],eax
  41433b:	cmp    eax,0x9bc6984a
  414340:	je     0x41431c
  414342:	jae    0x41435e
  414344:	mov    eax,ds:0x57be6790
  414349:	dec    ecx
  41434a:	pushf  
  41434b:	xchg   BYTE PTR [ecx+0x28e6e902],bh
  414351:	js     0x41432f
  414353:	popf   
  414354:	out    0xb9,eax
  414356:	ficomp DWORD PTR [esi+0x1e]
  414359:	mul    edx
  41435b:	into   
  41435c:	mul    DWORD PTR [edi+ecx*4]
  41435f:	dec    esp
  414360:	sub    eax,0xb8717e2a
  414365:	xchg   ecx,eax
  414366:	mov    al,0x38
  414368:	lods   eax,DWORD PTR ds:[esi]
  414369:	xchg   ebp,eax
  41436a:	xchg   esp,eax
  41436b:	data16 jbe 0x414369
  41436e:	push   esp
  41436f:	popa   
  414370:	shl    DWORD PTR ds:0xed0352a0,1
  414376:	lods   eax,DWORD PTR ds:[esi]
  414377:	das    
  414378:	or     al,0xa
  41437a:	loop   0x41435b
  41437c:	xchg   edx,eax
  41437d:	or     al,0xbd
  41437f:	pop    es
  414380:	imul   ebx,edi,0xffffffac
  414383:	dec    esp
  414384:	push   0xaeaf9b4c
  414389:	push   edx
  41438a:	or     cl,BYTE PTR [edi+0x42]
  41438d:	test   DWORD PTR [esi-0x1e],esi
  414390:	pop    edi
  414391:	push   ds
  414392:	mov    edx,cs
  414394:	push   esi
  414395:	dec    esi
  414396:	fnstenv [eax+0x1c250fd]
  41439c:	rol    edi,1
  41439e:	mov    BYTE PTR [ecx-0x4e5b19c5],0x1
  4143a5:	mov    bh,0x86
  4143a7:	mov    ebp,0xdeabc36e
  4143ac:	sub    eax,DWORD PTR [edx]
  4143ae:	outs   dx,DWORD PTR ds:[esi]
  4143af:	and    al,0x23
  4143b1:	add    DWORD PTR [eax+0x1a],esi
  4143b4:	iret   
  4143b5:	mov    eax,ds:0xc8549921
  4143ba:	into   
  4143bb:	mov    ds:0x32049751,eax
  4143c0:	(bad)  
  4143c1:	cli    
  4143c2:	push   es
  4143c3:	pushf  
  4143c4:	pop    ss
  4143c5:	and    bh,BYTE PTR [esi-0x56]
  4143c8:	out    0x6b,eax
  4143ca:	and    DWORD PTR [ecx+esi*2],esp
  4143cd:	cmp    al,0x83
  4143cf:	les    esp,FWORD PTR [ecx-0x365b2b80]
  4143d5:	jl     0x414380
  4143d7:	or     DWORD PTR [edx+0x4a1b5da4],esp
  4143dd:	adc    dl,ah
  4143df:	jb     0x414453
  4143e1:	fidivr WORD PTR [eax]
  4143e3:	fprem1 
  4143e5:	aam    0x56
  4143e7:	inc    ecx
  4143e8:	das    
  4143e9:	adc    BYTE PTR [edi],dh
  4143eb:	xchg   edi,ebp
  4143ed:	dec    ebp
  4143ee:	dec    edx
  4143ef:	ss sub ecx,edx
  4143f2:	cld    
  4143f3:	(bad)  
  4143f4:	daa    
  4143f5:	out    0x23,eax
  4143f7:	stos   BYTE PTR es:[edi],al
  4143f8:	add    edi,DWORD PTR [ebp+0x7ed9314a]
  4143fe:	call   0x61e8:0xa602bdea
  414405:	scas   eax,DWORD PTR es:[edi]
  414406:	mov    bh,0xd2
  414408:	pop    edi
  414409:	test   BYTE PTR [eax],bh
  41440b:	jmp    0x52a774ee
  414410:	inc    ecx
  414411:	pop    ds
  414412:	rcl    DWORD PTR [esi+edx*2-0x45],cl
  414416:	lahf   
  414417:	and    DWORD PTR [edi],0xffffffc1
  41441a:	cld    
  41441b:	dec    edx
  41441c:	inc    ebx
  41441d:	sti    
  41441e:	stos   BYTE PTR es:[edi],al
  41441f:	hlt    
  414420:	inc    esp
  414421:	push   ecx
  414422:	mov    bl,bh
  414424:	sbb    BYTE PTR ds:0xc4a6f5dc,ch
  41442a:	xchg   ebx,eax
  41442b:	cmp    eax,0x9da6bf4b
  414430:	les    esp,FWORD PTR [edx-0x2d2fd802]
  414436:	cmp    DWORD PTR [ebp-0x71551f46],edi
  41443c:	pop    eax
  41443d:	rol    BYTE PTR [edx],0xaa
  414440:	xchg   ecx,eax
  414441:	jnp    0x4143e7
  414443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414444:	fbld   TBYTE PTR [ecx+0x16]
  414447:	mov    dh,0xca
  414449:	adc    DWORD PTR [eax+0x21343ea8],esi
  41444f:	xchg   ebp,eax
  414450:	retf   
  414451:	vpavgb ymm1,ymm6,YMMWORD PTR [ebx+0x398b402d]
  414459:	cmp    DWORD PTR [edi-0x6ee3bb51],ecx
  41445f:	dec    esp
  414460:	repz sub eax,eax
  414463:	in     al,dx
  414464:	(bad)  [esi+ecx*4+0x7c]
  414468:	inc    esp
  414469:	ins    DWORD PTR es:[edi],dx
  41446a:	dec    esi
  41446b:	popa   
  41446c:	hlt    
  41446d:	enter  0x8414,0xc6
  414471:	lods   al,BYTE PTR ds:[esi]
  414472:	and    al,0x59
  414474:	fisttp DWORD PTR [ebx-0x10377ad8]
  41447a:	mov    ch,0x29
  41447c:	jno    0x41441f
  41447e:	push   ecx
  41447f:	sbb    ah,cl
  414481:	or     cl,BYTE PTR [eax+ecx*2]
  414484:	add    BYTE PTR [esi],cl
  414486:	pop    ebp
  414487:	and    al,0xe6
  414489:	leave  
  41448a:	mov    bh,0x32
  41448c:	mov    dl,0xcd
  41448e:	ror    esi,cl
  414490:	and    esi,DWORD PTR [edi-0xe7241d9]
  414496:	jne    0x4144ce
  414498:	or     eax,0x671f801d
  41449d:	pop    edx
  41449e:	in     al,0xaa
  4144a0:	loop   0x414521
  4144a2:	jmp    0x414514
  4144a4:	add    eax,0xb63ce4e1
  4144a9:	sub    BYTE PTR [ecx],al
  4144ab:	jle    0x414475
  4144ad:	jae    0x414503
  4144af:	fistp  WORD PTR [ebp+0x3c]
  4144b2:	aas    
  4144b3:	(bad)  
  4144b4:	fisub  WORD PTR [ebp-0x556dc1d8]
  4144ba:	xor    ch,ah
  4144bc:	pop    ebp
  4144bd:	aam    0x6b
  4144bf:	push   edx
  4144c0:	jmp    FWORD PTR [edx+ebp*2-0x6b]
  4144c4:	add    eax,0x4f021b23
  4144c9:	iret   
  4144ca:	shl    bl,cl
  4144cc:	xor    eax,0xdfcb5d5c
  4144d1:	dec    edi
  4144d2:	int    0x9f
  4144d4:	lods   al,BYTE PTR ds:[esi]
  4144d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144d6:	jmp    0x24296569
  4144db:	ror    DWORD PTR ds:0x59acb3d6,0x4a
  4144e2:	push   esi
  4144e3:	mov    al,0xe7
  4144e5:	xor    BYTE PTR [edx],bh
  4144e7:	lea    ebx,[edi+0x18]
  4144ea:	loopne 0x414569
  4144ec:	or     BYTE PTR [eax-0x7ac018f],0x32
  4144f3:	adc    BYTE PTR [edi-0xa095f9e],dh
  4144f9:	fs mov bl,0x71
  4144fc:	lock cmp al,0x1a
  4144ff:	jl     0x4144f3
  414501:	int    0xeb
  414503:	retf   0x70ad
  414506:	stos   DWORD PTR es:[edi],eax
  414507:	ret    0xb1a1
  41450a:	bound  esi,QWORD PTR [esi+0x5f]
  41450d:	or     BYTE PTR [ecx],dl
  41450f:	mul    DWORD PTR [esi+0x726d82b9]
  414515:	test   al,0x4
  414517:	(bad)  
  414518:	gs popf 
  41451a:	imul   ebp,DWORD PTR [ecx-0x4c],0xffffff92
  41451e:	pop    es
  41451f:	aad    0xd2
  414521:	ret    
  414522:	adc    DWORD PTR [esi+0x31],edi
  414525:	std    
  414526:	test   eax,0x46c3274d
  41452b:	ins    DWORD PTR es:[edi],dx
  41452c:	lods   al,BYTE PTR ds:[esi]
  41452d:	lahf   
  41452e:	dec    eax
  41452f:	data16 mov bl,bh
  414532:	sub    ch,BYTE PTR [ecx+esi*2-0x72]
  414536:	jge    0x41459f
  414538:	repnz and al,BYTE PTR [ecx]
  41453b:	add    al,0xca
  41453d:	mov    dl,0x73
  41453f:	pusha  
  414540:	adc    BYTE PTR [ebx],bh
  414542:	sub    al,0x53
  414544:	fisttp WORD PTR [eax]
  414546:	pop    ebx
  414547:	jmp    0x414581
  414549:	loopne 0x414506
  41454b:	inc    ebx
  41454c:	mov    al,0xc0
  41454e:	in     eax,0x18
  414550:	mov    al,ds:0x9f5ea3cb
  414555:	daa    
  414556:	mov    esp,0x9db2ee3
  41455b:	sbb    eax,0x869c527f
  414560:	imul   ebp,DWORD PTR [esi+0xb],0xffffffb8
  414564:	dec    esi
  414565:	sbb    esp,ecx
  414567:	push   ebx
  414568:	stos   BYTE PTR es:[edi],al
  414569:	lds    ebx,FWORD PTR [esi]
  41456b:	pushf  
  41456c:	gs icebp 
  41456e:	mov    BYTE PTR [edx],ah
  414570:	mov    ebp,DWORD PTR [eax+ebx*4-0x1f]
  414574:	push   ecx
  414575:	out    dx,al
  414576:	fimul  WORD PTR [edx-0x2]
  414579:	outs   dx,BYTE PTR ds:[esi]
  41457b:	xchg   ebp,eax
  41457c:	push   ebp
  41457d:	pop    esi
  41457e:	loopne 0x41454c
  414580:	push   ebx
  414581:	add    al,BYTE PTR [ebx-0x179ee4b3]
  414587:	inc    esi
  414588:	adc    al,0xd4
  41458a:	cmp    ah,BYTE PTR [eax-0x68]
  41458d:	or     edx,DWORD PTR [ecx+0x2066659d]
  414593:	or     dh,BYTE PTR [edi-0x359d1d77]
  414599:	mov    al,0x93
  41459b:	dec    ecx
  41459c:	ss ds or al,0xd9
  4145a0:	jb     0x41458c
  4145a2:	push   ebx
  4145a3:	fidiv  WORD PTR [ebx]
  4145a5:	dec    edi
  4145a6:	ror    DWORD PTR [esi],0x33
  4145a9:	xchg   BYTE PTR [edx+esi*8+0x6c041484],bl
  4145b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b1:	call   DWORD PTR [ecx]
  4145b3:	std    
  4145b4:	gs dec ebp
  4145b6:	push   ds
  4145b7:	dec    ebx
  4145b8:	arpl   WORD PTR [eax-0x53],ax
  4145bb:	dec    edi
  4145bc:	xor    al,0x20
  4145be:	mov    bl,0xf1
  4145c0:	in     eax,0xed
  4145c2:	fadd   QWORD PTR [ebp+ecx*4+0x43]
  4145c6:	out    0xc,eax
  4145c8:	xor    bh,cl
  4145ca:	out    dx,eax
  4145cb:	sub    al,0xac
  4145cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ce:	outs   dx,BYTE PTR ds:[esi]
  4145cf:	push   ecx
  4145d0:	cmp    eax,DWORD PTR [edx]
  4145d2:	mov    esp,0xbb200502
  4145d7:	sbb    eax,0x8bc8bdc6
  4145dc:	sub    cl,ch
  4145de:	lock (bad) 
  4145e0:	xchg   ebp,eax
  4145e1:	jmp    0x4145b1
  4145e3:	and    eax,0xbad31b26
  4145e8:	retf   0xe1ce
  4145eb:	lds    esp,FWORD PTR [eax+0x33]
  4145ee:	push   ds
  4145ef:	xchg   esp,eax
  4145f0:	inc    edi
  4145f1:	mov    BYTE PTR [ecx+0x2b],dh
  4145f4:	(bad)  
  4145f6:	fst    DWORD PTR [ebp-0x587c07e3]
  4145fc:	and    BYTE PTR [eax],dl
  4145fe:	sub    BYTE PTR [ebx+0x6df4b7f6],dl
  414604:	inc    edi
  414605:	xchg   esi,eax
  414606:	stos   BYTE PTR es:[edi],al
  414607:	inc    ecx
  414608:	rcl    dl,0x8b
  41460b:	cld    
  41460c:	sbb    DWORD PTR [ebx+0x11f7ff9],0xffffff81
  414613:	(bad)  
  414614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414615:	xchg   ch,dh
  414617:	rol    esi,1
  414619:	js     0x414614
  41461b:	adc    edx,DWORD PTR [ecx+eax*8-0x65]
  41461f:	mov    eax,0xa75c614d
  414624:	pop    eax
  414625:	repz iret 
  414627:	mov    esp,0xbae0b538
  41462c:	fs mov ah,0xdc
  41462f:	gs xchg ecx,ebx
  414632:	fldenv [ebx]
  414634:	sti    
  414635:	push   ds
  414636:	dec    esi
  414637:	xchg   esi,eax
  414638:	(bad)  
  41463a:	sub    DWORD PTR [ebx-0x29],ebx
  41463d:	inc    ebx
  41463e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41463f:	push   eax
  414640:	cmp    eax,0xa2b77f45
  414645:	inc    esi
  414646:	dec    esi
  414647:	sbb    cl,BYTE PTR [edi+eax*4+0x56fd0dec]
  41464e:	mov    bl,BYTE PTR [ecx+0x4]
  414651:	fld    DWORD PTR [eax-0x731872]
  414657:	xchg   esi,eax
  414658:	push   0xf
  41465a:	jae    0x41462d
  41465c:	mov    ebp,0xd89d02e
  414661:	aad    0xf1
  414663:	scas   al,BYTE PTR es:[edi]
  414664:	sub    DWORD PTR [edi-0x55],ebx
  414667:	rcr    BYTE PTR [esi],0xbe
  41466a:	retf   0x3dd0
  41466d:	jg     0x41460f
  41466f:	adc    DWORD PTR [esi-0x5f],edx
  414672:	lds    esp,FWORD PTR [esi+ecx*8-0x628f7f39]
  414679:	scas   al,BYTE PTR es:[edi]
  41467a:	and    ah,BYTE PTR [eax]
  41467c:	xor    edi,DWORD PTR [esi-0x683b4eff]
  414682:	push   0xffffffc2
  414684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414685:	mov    bh,0x30
  414687:	cli    
  414688:	add    eax,edx
  41468a:	shl    DWORD PTR [eax+0x5246979c],1
  414690:	rep outs dx,DWORD PTR ds:[esi]
  414692:	mov    edi,0x2b5889b0
  414697:	push   ebx
  414698:	sbb    eax,0x965a121b
  41469d:	sbb    eax,0xd34930d8
  4146a2:	xlat   BYTE PTR ds:[ebx]
  4146a3:	push   es
  4146a4:	scas   al,BYTE PTR es:[edi]
  4146a5:	adc    bh,BYTE PTR [ecx+0x31daf876]
  4146ab:	jnp    0x414630
  4146ad:	jp     0x41471b
  4146af:	popf   
  4146b0:	dec    ebx
  4146b1:	pop    ebp
  4146b2:	sti    
  4146b3:	and    eax,0x13128783
  4146b8:	js     0x41464a
  4146ba:	retf   
  4146bb:	test   al,0x11
  4146bd:	mov    ds:0xb92e865a,eax
  4146c2:	cs retf 
  4146c4:	pop    eax
  4146c5:	inc    ebp
  4146c6:	jno    0x4146c2
  4146c8:	inc    edx
  4146c9:	(bad)  
  4146ca:	aas    
  4146cb:	test   BYTE PTR [eax],cl
  4146cd:	mov    BYTE PTR [esi],dl
  4146cf:	test   eax,0x8272988e
  4146d4:	inc    eax
  4146d5:	adc    BYTE PTR [ecx-0x161d8c64],dl
  4146db:	outs   dx,BYTE PTR ds:[esi]
  4146dc:	aaa    
  4146dd:	pop    eax
  4146de:	lock dec ebx
  4146e0:	push   ebp
  4146e1:	js     0x4146f4
  4146e3:	sub    eax,0x593d38ab
  4146e8:	mov    ds:0xafe05fa2,eax
  4146ed:	xchg   edx,eax
  4146ee:	xchg   BYTE PTR [ecx-0x6a],bh
  4146f1:	(bad)  
  4146f2:	into   
  4146f3:	mov    edi,0x7ccfcbcd
  4146f8:	stos   DWORD PTR es:[edi],eax
  4146f9:	sub    al,0x39
  4146fb:	div    DWORD PTR [ecx-0xb]
  4146fe:	mov    cl,0xb9
  414700:	xchg   edi,eax
  414701:	jp     0x414755
  414703:	mov    bh,bh
  414705:	add    eax,0x9e8f308f
  41470a:	retf   
  41470b:	pop    es
  41470c:	add    al,0x6b
  41470e:	lods   al,BYTE PTR ds:[esi]
  41470f:	pop    edx
  414710:	loope  0x4146ff
  414712:	ins    DWORD PTR es:[edi],dx
  414713:	test   al,0xaf
  414715:	mov    DWORD PTR [edi+ebp*4],ebp
  414718:	test   al,0x9b
  41471a:	(bad)  
  41471b:	int    0xaf
  41471d:	push   ds
  41471e:	fwait
  41471f:	(bad)  
  414720:	loop   0x4146c9
  414722:	pop    eax
  414723:	xchg   edx,eax
  414724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414725:	fidivr DWORD PTR [ecx]
  414727:	add    ch,al
  414729:	aam    0xf4
  41472b:	icebp  
  41472c:	ins    DWORD PTR es:[edi],dx
  41472d:	fsubr  st(3),st
  41472f:	fld    QWORD PTR [esi]
  414731:	jle    0x41474a
  414733:	jl     0x4146e6
  414735:	rcr    DWORD PTR [eax],cl
  414737:	scas   eax,DWORD PTR es:[edi]
  414738:	data16 jle 0x41476e
  41473b:	add    BYTE PTR [eax+0x46],ch
  41473e:	jbe    0x414702
  414740:	mov    ds:0xcb873c1,al
  414745:	lods   al,BYTE PTR ds:[esi]
  414746:	mov    cl,0x4d
  414748:	nop
  414749:	adc    dh,cl
  41474b:	add    al,0x3a
  41474d:	stos   BYTE PTR es:[edi],al
  41474e:	xlat   BYTE PTR ds:[ebx]
  41474f:	out    dx,eax
  414750:	mov    bh,BYTE PTR [ebx+0x5ee014c3]
  414756:	dec    edx
  414757:	pop    ebp
  414758:	cmp    al,0xff
  41475a:	mov    eax,0xef29eea4
  41475f:	adc    BYTE PTR [edx+edi*1+0x183f1ce1],0x54
  414767:	sub    DWORD PTR [edi-0x269df9e7],esi
  41476d:	dec    eax
  41476e:	xor    al,BYTE PTR [edi-0x3c]
  414771:	push   es
  414772:	xchg   al,dh
  414774:	and    DWORD PTR [eax+0x6fe50fdd],esi
  41477a:	(bad)  
  41477b:	in     eax,0x26
  41477d:	fisub  DWORD PTR [edi-0x3a]
  414780:	loopne 0x41479b
  414782:	xchg   ecx,eax
  414783:	and    DWORD PTR [esi],esp
  414785:	jne    0x4147d5
  414787:	cmp    ah,BYTE PTR [eax+0x5c]
  41478a:	ds dec ebx
  41478c:	fbstp  TBYTE PTR [ecx+0x16]
  41478f:	ficom  DWORD PTR [eax]
  414791:	div    DWORD PTR [edx]
  414793:	cmp    ecx,DWORD PTR [ebp+0x25]
  414796:	xor    BYTE PTR [esi],cl
  414798:	jno    0x414732
  41479a:	add    ebp,ebx
  41479c:	or     DWORD PTR [edx+0x690b41ac],ebx
  4147a2:	fild   DWORD PTR [ecx+0x60bbeaa3]
  4147a8:	fsub   QWORD PTR [ebx-0x41]
  4147ab:	stos   BYTE PTR es:[edi],al
  4147ac:	jbe    0x414768
  4147ae:	or     ah,ah
  4147b0:	add    eax,0xb91b89fa
  4147b5:	lahf   
  4147b6:	test   DWORD PTR [esi+0x61aa5fa6],esp
  4147bc:	xor    DWORD PTR [edx+0x26c1557d],ecx
  4147c2:	ror    ecx,1
  4147c4:	ins    BYTE PTR es:[edi],dx
  4147c5:	mov    ds,edi
  4147c7:	and    bh,BYTE PTR [edi-0xd]
  4147ca:	lods   al,BYTE PTR ds:[esi]
  4147cb:	imul   ebp,ecx,0x15df9627
  4147d1:	and    eax,0x78e7ddd2
  4147d6:	arpl   WORD PTR [edi-0x3d],di
  4147d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147da:	dec    eax
  4147db:	mov    fs,WORD PTR [edi-0x44ee0173]
  4147e1:	inc    esp
  4147e2:	xchg   esi,eax
  4147e3:	lds    ebx,FWORD PTR [eax-0x2e]
  4147e6:	dec    eax
  4147e7:	mov    edx,0xcb108539
  4147ec:	stos   BYTE PTR es:[edi],al
  4147ed:	jge    0x41479d
  4147ef:	mov    dl,0x83
  4147f1:	shr    edi,0xbb
  4147f4:	int3   
  4147f5:	out    0x22,al
  4147f7:	loopne 0x41478d
  4147f9:	xchg   esp,eax
  4147fa:	dec    ecx
  4147fb:	xchg   edi,eax
  4147fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147fd:	outs   dx,DWORD PTR ds:[esi]
  4147fe:	mov    ds:0xaf6c71bb,eax
  414803:	add    al,BYTE PTR ds:[edi]
  414806:	fdivr  QWORD PTR [esi-0x7db14a6e]
  41480c:	mov    esp,0x3ff94d8e
  414811:	shr    ecx,0xcf
  414814:	mov    ecx,0xdc5a6871
  414819:	popf   
  41481a:	dec    esi
  41481b:	xor    dh,bh
  41481d:	jge    0x41481f
  41481f:	mov    al,ds:0x5ffee2e1
  414824:	imul   eax,DWORD PTR [esi+0x0],0x784f402b
  41482b:	pusha  
  41482c:	mov    bh,0xd
  41482e:	xchg   BYTE PTR [edi-0x15b9b65e],cl
  414834:	sti    
  414835:	lahf   
  414836:	push   ds
  414837:	cmp    bh,ch
  414839:	jb     0x4148b5
  41483b:	push   esi
  41483c:	sbb    BYTE PTR [ecx],0xab
  41483f:	stos   BYTE PTR es:[edi],al
  414840:	sbb    BYTE PTR [edx],dh
  414842:	and    DWORD PTR [esi-0x4a39346d],edi
  414848:	inc    ebx
  414849:	fnstsw WORD PTR [ecx+0x6ffb0832]
  41484f:	and    al,0xd4
  414851:	iret   
  414852:	arpl   WORD PTR [ecx+0x17c84b09],sp
  414858:	xchg   BYTE PTR [edx-0x3734b11b],ah
  41485e:	inc    edx
  41485f:	adc    ch,al
  414861:	push   edi
  414862:	push   ebp
  414863:	test   DWORD PTR [eax+ebp*8+0x27e61053],ebx
  41486a:	and    ebx,eax
  41486c:	leave  
  41486d:	scas   eax,DWORD PTR es:[edi]
  41486e:	xor    cl,BYTE PTR [edx]
  414870:	push   esi
  414871:	pop    ds
  414872:	push   ebx
  414873:	jmp    0x414867
  414875:	pop    ecx
  414876:	int3   
  414877:	(bad)  
  414878:	and    bh,bl
  41487a:	jns    0x4148c7
  41487c:	daa    
  41487d:	jb     0x4148d5
  41487f:	les    ecx,FWORD PTR [ebx]
  414881:	lea    ecx,[edx-0x53a2f810]
  414887:	out    dx,al
  414888:	dec    esp
  414889:	push   cs
  41488a:	xchg   edx,eax
  41488b:	out    0x9,al
  41488d:	jmp    0x1212:0x17008bef
  414894:	jecxz  0x4148e2
  414896:	mov    edi,0x77627180
  41489b:	add    eax,0xa7795cb9
  4148a0:	jle    0x414911
  4148a2:	pop    esp
  4148a3:	mov    ebx,0x9a1eac7d
  4148a8:	adc    DWORD PTR [eax],ebx
  4148aa:	xchg   edi,eax
  4148ab:	mov    al,ds:0x940ddb66
  4148b0:	and    eax,0xca015c49
  4148b5:	cpuid  
  4148b7:	mov    edx,0xc0b9b1be
  4148bc:	loopne 0x414935
  4148be:	jg     0x41485f
  4148c0:	dec    ebx
  4148c1:	sub    DWORD PTR [ebp-0x20],eax
  4148c4:	dec    eax
  4148c5:	shr    BYTE PTR [ebx],cl
  4148c7:	push   edi
  4148c8:	add    DWORD PTR [esi-0x4e],ebp
  4148cb:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148cd:	stos   DWORD PTR es:[edi],eax
  4148ce:	mov    DWORD PTR [ecx+ebx*2-0x22],esi
  4148d2:	mov    ?,WORD PTR [ebp+0xf]
  4148d5:	mov    DWORD PTR [ebp-0x5b],ebx
  4148d8:	aam    0x7f
  4148da:	mov    ch,0x85
  4148dc:	add    bl,bh
  4148de:	pop    eax
  4148df:	mov    esp,0xa51ff72
  4148e4:	or     edx,DWORD PTR [ebp+0x8]
  4148e7:	xchg   ebx,eax
  4148e8:	in     eax,0x22
  4148ea:	mov    bl,0xed
  4148ec:	(bad)  
  4148ed:	mov    al,0x51
  4148ef:	add    eax,0xfffaebef
  4148f4:	dec    ebx
  4148f5:	je     0x414950
  4148f7:	mov    eax,0x4f212dfb
  4148fc:	fs (bad) 
  4148fe:	sar    esp,cl
  414900:	sbb    edx,DWORD PTR [edi-0x31fc37cd]
  414906:	mov    ecx,0x242ebcd
  41490b:	je     0x419125
  414911:	jmp    0x416c96
  414916:	cwde   
  414917:	add    BYTE PTR [ecx],al
  414919:	or     eax,0x7b940381
  41491e:	test   al,0xe5
  414920:	pusha  
  414921:	mov    ah,0x2c
  414923:	inc    ebp
  414924:	test   al,0x5
  414926:	xchg   esi,eax
  414927:	pusha  
  414928:	jns    0x4149a4
  41492a:	adc    bl,BYTE PTR [edi+0x7a]
  41492d:	jp     0x4148dd
  41492f:	das    
  414930:	push   esp
  414931:	push   ds
  414932:	mov    ds:0x91d54d68,eax
  414937:	pop    esp
  414938:	push   edi
  414939:	cli    
  41493a:	les    ebx,FWORD PTR [ebx-0x5e]
  41493d:	mov    eax,0xcb8863c6
  414942:	jae    0x414913
  414944:	dec    edx
  414945:	je     0x4148d9
  414947:	dec    ebx
  414948:	test   al,0x4a
  41494a:	pop    ebp
  41494b:	dec    edi
  41494c:	adc    al,0xf8
  41494e:	rcr    edx,1
  414950:	xchg   BYTE PTR [esi],bl
  414952:	xor    eax,0xa1bbaa39
  414957:	xchg   edx,eax
  414958:	sbb    al,0x81
  41495a:	fcmovbe st,st(1)
  41495c:	xor    eax,0x629efb05
  414961:	les    eax,FWORD PTR [edx-0x55]
  414964:	loope  0x4148f1
  414966:	and    eax,0x4fe50812
  41496b:	mov    ebx,0x2ee5e36d
  414970:	or     al,0xe8
  414972:	aas    
  414973:	sar    DWORD PTR [edx-0x20],0x40
  414977:	adc    al,0xae
  414979:	push   ebp
  41497a:	dec    esp
  41497b:	xor    BYTE PTR [esi-0x1a],ch
  41497e:	pop    es
  41497f:	test   eax,0x31e4eb1a
  414984:	jo     0x414985
  414986:	loop   0x4149eb
  414988:	repz cli 
  41498a:	jmp    0xf1:0x35c7d346
  414991:	push   ss
  414992:	ins    DWORD PTR es:[edi],dx
  414993:	nop
  414994:	outs   dx,BYTE PTR ds:[esi]
  414995:	pushf  
  414996:	jbe    0x414998
  414998:	mov    ds:0xbfa531b9,eax
  41499d:	neg    BYTE PTR [esi]
  41499f:	js     0x414964
  4149a1:	mov    ebx,0xe3432cbc
  4149a6:	pop    ds
  4149a7:	clc    
  4149a8:	pop    esp
  4149a9:	int    0x86
  4149ab:	fidivr WORD PTR gs:[ebp+0x57]
  4149af:	fistp  QWORD PTR ss:[esi-0x501aafb]
  4149b6:	add    eax,0x20d260e0
  4149bb:	add    ebx,0x6d
  4149be:	js     0x4149d6
  4149c0:	push   esi
  4149c1:	xor    DWORD PTR [eax+0x57136754],0xffffff8c
  4149c8:	or     DWORD PTR [eax-0xe997c11],edi
  4149ce:	je     0x414a1c
  4149d0:	add    esp,DWORD PTR [ecx]
  4149d2:	pop    ecx
  4149d3:	retf   
  4149d4:	push   edi
  4149d5:	push   cs
  4149d6:	aam    0x65
  4149d8:	shr    BYTE PTR [edi+0x54],cl
  4149db:	mov    ah,al
  4149dd:	sahf   
  4149de:	pop    eax
  4149df:	xlat   BYTE PTR ds:[ebx]
  4149e0:	pop    esi
  4149e1:	pop    edx
  4149e2:	push   ecx
  4149e3:	into   
  4149e4:	out    0x4c,eax
  4149e6:	retf   
  4149e7:	adc    ah,BYTE PTR [edi+0x36]
  4149ea:	lea    ebx,[ebp-0x4f]
  4149ed:	lahf   
  4149ee:	sub    BYTE PTR [edx],bl
  4149f0:	pop    es
  4149f1:	je     0x4149a3
  4149f3:	ja     0x4149fb
  4149f5:	pop    ebp
  4149f6:	mov    dl,0xc3
  4149f8:	push   edx
  4149f9:	das    
  4149fa:	retf   
  4149fb:	leave  
  4149fc:	fcom   QWORD PTR [ebp+0x4b]
  4149ff:	lods   al,BYTE PTR ds:[esi]
  414a00:	fs xor al,0xba
  414a03:	sbb    DWORD PTR [ecx+ebp*1+0x7a09c126],0x809e4f1e
  414a0e:	mov    ch,0x43
  414a10:	fidivr WORD PTR [eax-0x1e]
  414a13:	sbb    edi,eax
  414a15:	push   esp
  414a16:	retf   
  414a17:	push   ebx
  414a18:	xchg   esi,eax
  414a19:	clc    
  414a1a:	dec    ebp
  414a1b:	mov    ch,0xf9
  414a1d:	pop    ebx
  414a1e:	in     eax,dx
  414a1f:	scas   al,BYTE PTR es:[edi]
  414a20:	pop    esp
  414a21:	push   ebx
  414a22:	das    
  414a23:	(bad)  
  414a24:	int3   
  414a25:	into   
  414a26:	push   0x15
  414a28:	or     al,0x2f
  414a2a:	dec    ebx
  414a2b:	shl    DWORD PTR [edi],1
  414a2d:	dec    ebp
  414a2e:	jmp    0x60c1:0xd1bcd846
  414a35:	aaa    
  414a36:	jecxz  0x414a5a
  414a38:	jle    0x414a34
  414a3a:	mov    ch,0x7e
  414a3c:	aaa    
  414a3d:	data16 sti 
  414a3f:	dec    edi
  414a40:	pop    ecx
  414a41:	lock mov dl,0x1f
  414a44:	inc    esi
  414a46:	mov    ecx,0x68a0a601
  414a4b:	mov    ch,0xeb
  414a4d:	sbb    ah,cl
  414a4f:	or     ah,BYTE PTR [ebp+0x6f]
  414a52:	(bad)  
  414a53:	sub    eax,ebx
  414a55:	fadd   QWORD PTR [edi-0x7]
  414a58:	into   
  414a59:	cmp    DWORD PTR [ebx+ebp*1-0x693d2864],edx
  414a60:	nop
  414a61:	push   esp
  414a62:	fsub   DWORD PTR [edi]
  414a64:	dec    ecx
  414a65:	jmp    0x9e89:0x681d291d
  414a6c:	lods   eax,DWORD PTR ds:[esi]
  414a6d:	jmp    0x9d497e9d
  414a72:	pushf  
  414a73:	rcr    BYTE PTR [ebx],cl
  414a75:	cmp    eax,edi
  414a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a78:	sub    DWORD PTR [esi],ebx
  414a7a:	dec    esi
  414a7b:	jge    0x414ac4
  414a7d:	(bad)  
  414a7e:	scas   eax,DWORD PTR es:[edi]
  414a7f:	xchg   si,ax
  414a81:	xor    ecx,edx
  414a83:	ins    BYTE PTR es:[edi],dx
  414a84:	cwde   
  414a85:	inc    ebx
  414a86:	add    DWORD PTR [ebp+edi*4+0x72b9fd],eax
  414a8d:	fcmovnu st,st(1)
  414a8f:	test   al,0xc1
  414a91:	xchg   BYTE PTR [edx],bh
  414a93:	dec    edi
  414a94:	cmp    al,0xe6
  414a96:	or     al,0xa
  414a98:	lods   eax,DWORD PTR ds:[esi]
  414a99:	test   DWORD PTR [edx+0x356f0a77],ecx
  414a9f:	jmp    0x8b64f8bb
  414aa4:	int    0x54
  414aa6:	push   ss
  414aa7:	ret    
  414aa8:	sub    eax,0xca96d0d7
  414aad:	(bad)  
  414aae:	cmp    DWORD PTR [ecx+ecx*4+0x66],ebp
  414ab2:	ds mov ebx,0x3ef37f38
  414ab8:	cmp    eax,0xab5ab299
  414abd:	xchg   edx,eax
  414abe:	sub    edi,DWORD PTR [ebx]
  414ac0:	ret    
  414ac1:	xchg   DWORD PTR [ebx+0x7a],ecx
  414ac4:	stos   BYTE PTR es:[edi],al
  414ac5:	adc    al,0xc1
  414ac7:	scas   eax,DWORD PTR es:[edi]
  414ac8:	lea    ebx,[edi]
  414aca:	cmp    eax,0x94d78a4d
  414acf:	hlt    
  414ad0:	push   esp
  414ad1:	int3   
  414ad2:	rcl    ebp,1
  414ad4:	lock mov dl,0xc6
  414ad7:	pop    edi
  414ad8:	js     0x414b36
  414ada:	fadd   QWORD PTR [eax+0xa21f96]
  414ae0:	cmp    dl,al
  414ae2:	hlt    
  414ae3:	stc    
  414ae4:	into   
  414ae5:	adc    esp,DWORD PTR [ecx-0x5d128f6f]
  414aeb:	cs jae 0x414b35
  414aee:	(bad)  
  414af0:	or     DWORD PTR [edi-0x420ddeaf],esp
  414af6:	imul   DWORD PTR [eax-0x19bbd43]
  414afc:	push   ebx
  414afd:	jp     0x414b64
  414aff:	nop
  414b00:	xor    dl,BYTE PTR ds:0x72eb57e2
  414b06:	dec    ebx
  414b07:	loope  0x414aec
  414b09:	adc    al,0x71
  414b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0c:	jg     0x414b49
  414b0e:	sti    
  414b0f:	mov    dh,0x14
  414b11:	stc    
  414b12:	mov    dh,ch
  414b14:	xchg   esp,eax
  414b15:	dec    edi
  414b16:	cmp    DWORD PTR [esi+ebp*1-0x56],esi
  414b1a:	aas    
  414b1b:	repz dec edi
  414b1d:	inc    esp
  414b1e:	(bad)  
  414b1f:	aaa    
  414b20:	push   ebx
  414b21:	pop    ds
  414b22:	jne    0x414aa6
  414b24:	ror    BYTE PTR [eax],0xbb
  414b27:	pop    esp
  414b28:	sbb    BYTE PTR [edi-0x3f],dh
  414b2b:	aam    0xde
  414b2d:	sbb    cl,ah
  414b2f:	push   ebx
  414b30:	scas   eax,DWORD PTR es:[edi]
  414b31:	push   ecx
  414b32:	es push edx
  414b34:	xchg   edx,eax
  414b35:	data16 (bad) 
  414b37:	imul   eax,DWORD PTR [ebx+0xf],0x69
  414b3b:	(bad)  
  414b3d:	dec    esp
  414b3e:	jmp    eax
  414b40:	mov    es,esp
  414b42:	inc    ecx
  414b43:	lods   al,BYTE PTR ds:[esi]
  414b44:	sbb    bh,0x87
  414b47:	clc    
  414b48:	sbb    ch,BYTE PTR gs:[ecx+0x58]
  414b4c:	loop   0x414b2b
  414b4e:	jmp    0x26de:0xe12bbe08
  414b55:	sbb    eax,0xd53639e4
  414b5a:	mov    bh,dh
  414b5c:	dec    ebp
  414b5d:	pop    ecx
  414b5e:	cmp    al,0xde
  414b60:	ds fcmovb st,st(0)
  414b63:	in     al,0xd9
  414b65:	jecxz  0x414b3c
  414b67:	adc    ecx,DWORD PTR [eax-0x3c]
  414b6a:	cmp    al,0x60
  414b6c:	fisub  DWORD PTR [ebx-0x28]
  414b6f:	adc    ebp,DWORD PTR [eax]
  414b71:	dec    ebp
  414b72:	imul   ebx,DWORD PTR [edx+0x4],0xffffffd3
  414b76:	xchg   edi,eax
  414b77:	fstp   DWORD PTR [eax+0x765f7b1e]
  414b7d:	add    bh,BYTE PTR [esi-0x7d]
  414b80:	fcom   st(1)
  414b82:	mov    DWORD PTR [edx-0x491c8da6],ebp
  414b88:	cld    
  414b89:	ss inc eax
  414b8b:	sub    BYTE PTR [ebx+0x31597ffe],al
  414b91:	jbe    0x414be8
  414b93:	inc    ebx
  414b94:	stos   DWORD PTR es:[edi],eax
  414b95:	in     al,dx
  414b96:	imul   DWORD PTR [ebp+edx*8+0x2c]
  414b9a:	fild   DWORD PTR [edi+esi*1-0x49]
  414b9e:	cmp    BYTE PTR [ecx+esi*2],ch
  414ba1:	cmc    
  414ba2:	inc    esi
  414ba3:	dec    edi
  414ba4:	and    dh,BYTE PTR [edi+0xecb982d]
  414baa:	cwde   
  414bab:	pop    ecx
  414bac:	push   edx
  414bad:	push   ebx
  414bae:	sar    BYTE PTR [edi+ecx*1],1
  414bb1:	inc    esi
  414bb2:	sub    al,0xd3
  414bb4:	sub    DWORD PTR [eax],esp
  414bb6:	jnp    0x414bae
  414bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb9:	int3   
  414bba:	enter  0x37ff,0x75
  414bbe:	xlat   BYTE PTR ds:[ebx]
  414bbf:	in     al,dx
  414bc0:	outs   dx,BYTE PTR ds:[esi]
  414bc1:	out    0x9f,eax
  414bc3:	sbb    ah,BYTE PTR [edi-0x54]
  414bc6:	scas   eax,DWORD PTR es:[edi]
  414bc7:	fsubr  QWORD PTR [eax]
  414bc9:	cmc    
  414bca:	add    esp,0xffffffd1
  414bcd:	mov    WORD PTR [ecx],?
  414bcf:	in     al,dx
  414bd0:	adc    edi,edi
  414bd2:	lahf   
  414bd3:	cmc    
  414bd4:	adc    eax,0xc59ed6e5
  414bd9:	cmp    DWORD PTR [eax-0x49],0x79
  414bdd:	nop
  414bde:	or     esp,edx
  414be0:	popa   
  414be1:	xchg   BYTE PTR [eax],al
  414be3:	sti    
  414be4:	jno    0x414c4a
  414be6:	mov    ebp,0xf7c72aa4
  414beb:	cmp    DWORD PTR [ebx-0x401fe539],eax
  414bf1:	mov    edx,0xcea49a88
  414bf6:	push   ebp
  414bf7:	pushf  
  414bf8:	cwde   
  414bf9:	out    0x95,eax
  414bfb:	push   0x6b09175c
  414c00:	popf   
  414c01:	dec    ebp
  414c02:	imul   eax,DWORD PTR [ecx-0x8a2eaf],0x16bed8e3
  414c0c:	push   esp
  414c0d:	(bad)  
  414c0f:	enter  0xc6ac,0x19
  414c13:	pop    ecx
  414c14:	outs   dx,DWORD PTR ds:[esi]
  414c15:	(bad)  [ecx]
  414c17:	mov    cs,ebp
  414c19:	mov    cl,0xb6
  414c1b:	in     eax,dx
  414c1c:	stos   DWORD PTR es:[edi],eax
  414c1d:	or     eax,0x2716d9b5
  414c22:	(bad)  
  414c23:	xchg   esi,eax
  414c24:	and    ch,BYTE PTR [ecx-0x1d]
  414c27:	bound  esi,QWORD PTR [edi-0x4a2727a9]
  414c2d:	push   ebx
  414c2e:	pusha  
  414c2f:	jns    0x414cb0
  414c31:	or     edi,DWORD PTR [edi-0x2ea69bce]
  414c37:	mov    ebp,0x185a59a7
  414c3c:	xlat   BYTE PTR ds:[ebx]
  414c3d:	inc    edi
  414c3e:	lock mov ecx,0xa76dd94b
  414c44:	retf   
  414c45:	sbb    eax,0xec97409
  414c4a:	in     eax,0xd0
  414c4c:	and    esp,DWORD PTR [esi-0x44]
  414c4f:	lahf   
  414c50:	push   eax
  414c51:	dec    esp
  414c52:	int    0xf9
  414c54:	neg    DWORD PTR [eax-0x69]
  414c57:	out    dx,eax
  414c58:	addr16 mov edx,0xf164809f
  414c5e:	push   ss
  414c5f:	dec    eax
  414c60:	push   es
  414c61:	ins    DWORD PTR es:[edi],dx
  414c62:	fnstsw WORD PTR [ebx]
  414c64:	dec    eax
  414c66:	out    dx,eax
  414c67:	or     al,0xf4
  414c69:	pop    esi
  414c6a:	in     al,0x73
  414c6c:	inc    esi
  414c6d:	mov    edi,0x4b438cb3
  414c72:	xchg   ebp,eax
  414c73:	inc    ecx
  414c74:	mov    ch,0x4b
  414c76:	cmp    eax,0x7a1bea01
  414c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c7c:	push   cs
  414c7d:	mov    eax,ebp
  414c7f:	adc    DWORD PTR [ecx+0x46a2527a],0x38
  414c86:	fsubr  QWORD PTR [ebp+0x37]
  414c89:	mov    ds:0x195af7c3,eax
  414c8e:	leave  
  414c8f:	pop    es
  414c90:	xlat   BYTE PTR ds:[ebx]
  414c91:	ins    DWORD PTR es:[edi],dx
  414c92:	(bad)  
  414c93:	retf   
  414c94:	xor    al,0x17
  414c96:	test   eax,0x3ea7944b
  414c9b:	sub    al,BYTE PTR es:[esi+edi*2]
  414c9f:	xor    eax,0x8a384444
  414ca4:	out    0x11,eax
  414ca6:	mov    esi,0xd24b86dc
  414cab:	sbb    eax,0x9d936df0
  414cb0:	out    0xaf,al
  414cb2:	ja     0x414ce6
  414cb4:	mov    WORD PTR [eax+eiz*1+0xb0423f2],ss
  414cbb:	fstp   st(3)
  414cbd:	mov    dh,BYTE PTR ds:0x4a0adad0
  414cc3:	imul   edx,edx,0xb799c143
  414cc9:	pop    ebx
  414cca:	add    dl,cl
  414ccc:	add    eax,0xb595d7ba
  414cd1:	jecxz  0x414cc6
  414cd3:	out    dx,al
  414cd4:	ret    
  414cd5:	shl    BYTE PTR [eax],cl
  414cd7:	fsub   DWORD PTR [ebx]
  414cd9:	cmp    DWORD PTR [ebx],edx
  414cdb:	mov    al,0x40
  414cdd:	add    DWORD PTR [edx+ebx*8-0x32],edx
  414ce1:	in     al,dx
  414ce2:	adc    al,0x0
  414ce4:	fnstenv [edi]
  414ce6:	fcompp 
  414ce8:	xor    dh,BYTE PTR [edi]
  414cea:	lea    esi,[eax+0x3f67ffd0]
  414cf0:	dec    esi
  414cf1:	jns    0x414ce8
  414cf3:	or     al,0xe7
  414cf5:	push   ecx
  414cf6:	sbb    BYTE PTR [edi+ecx*4+0x2c7e70f3],bl
  414cfd:	shl    edi,cl
  414cff:	push   cs
  414d00:	mov    BYTE PTR [ebp-0x3c],al
  414d03:	sub    al,0xe
  414d05:	(bad)  
  414d06:	jmp    0xb729b703
  414d0b:	lods   al,BYTE PTR fs:[esi]
  414d0d:	xchg   esi,eax
  414d0e:	in     eax,0xce
  414d10:	and    BYTE PTR [edi],0xe5
  414d13:	sahf   
  414d14:	inc    ebp
  414d15:	or     eax,DWORD PTR [esi+ecx*2]
  414d18:	daa    
  414d19:	(bad)  
  414d1b:	push   es
  414d1c:	or     al,bl
  414d1e:	push   cs
  414d1f:	pop    eax
  414d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d21:	and    BYTE PTR [esi-0x53],ah
  414d24:	outs   dx,DWORD PTR ds:[esi]
  414d25:	popa   
  414d26:	ins    DWORD PTR es:[edi],dx
  414d27:	push   ss
  414d28:	cmp    BYTE PTR [esi],bl
  414d2a:	loope  0x414d52
  414d2c:	aam    0xf8
  414d2e:	lods   eax,DWORD PTR ds:[esi]
  414d2f:	fcom   QWORD PTR [esp+ebp*1-0x2e70f2bf]
  414d36:	mov    ebx,0x1be17076
  414d3b:	outs   dx,BYTE PTR ds:[esi]
  414d3c:	jb     0x414d8d
  414d3e:	pop    esi
  414d3f:	jl     0x414daa
  414d41:	lods   eax,DWORD PTR ds:[esi]
  414d42:	push   es
  414d43:	repz fnstsw WORD PTR [ebx+0x6cfd68ff]
  414d4a:	lods   eax,DWORD PTR ds:[esi]
  414d4b:	mov    ds:0x91b74ed9,al
  414d50:	sti    
  414d51:	add    eax,0x4e94ca97
  414d56:	push   esi
  414d57:	mov    DWORD PTR [esi],edx
  414d59:	xchg   edx,eax
  414d5a:	push   cs
  414d5b:	outs   dx,BYTE PTR ds:[esi]
  414d5c:	mov    edi,?
  414d5e:	fist   WORD PTR [eax+ecx*8-0x4f]
  414d62:	push   ss
  414d63:	mov    bl,0xeb
  414d65:	push   ss
  414d66:	js     0x414d6d
  414d68:	inc    ebx
  414d69:	adc    dh,bh
  414d6b:	je     0x414d3d
  414d6d:	adc    DWORD PTR [ecx],esi
  414d6f:	nop
  414d70:	int    0xbf
  414d72:	(bad)  
  414d73:	jmp    0x30fd:0x85c99f21
  414d7a:	(bad)  
  414d7b:	arpl   WORD PTR [ebp-0x18ab68fa],cx
  414d81:	iret   
  414d82:	sbb    dl,BYTE PTR [edx]
  414d84:	xlat   BYTE PTR ds:[ebx]
  414d85:	jp     0x414def
  414d87:	sbb    ch,BYTE PTR [edi+0x6834397]
  414d8d:	hlt    
  414d8e:	imul   ebx,DWORD PTR ds:0xf80684d,0xfffffff6
  414d95:	xchg   esi,eax
  414d96:	dec    edi
  414d97:	xchg   esp,eax
  414d98:	mov    edi,0x6b7fe10
  414d9d:	int3   
  414d9e:	outs   dx,BYTE PTR ds:[esi]
  414d9f:	jae    0x414d35
  414da1:	lea    esi,[ebx-0x24cfda13]
  414da7:	jne    0x414e09
  414da9:	ins    BYTE PTR es:[edi],dx
  414daa:	fist   WORD PTR [ebx+0x66]
  414dad:	das    
  414dae:	jmp    0x414d47
  414db0:	cs mov dl,0xaf
  414db3:	inc    edx
  414db4:	pop    eax
  414db5:	rol    DWORD PTR [edx],cl
  414db7:	push   0xd905f591
  414dbc:	xchg   ebp,eax
  414dbd:	mov    eax,0x4f4c2b38
  414dc2:	adc    BYTE PTR [ebp+eax*4+0x3817a427],0x79
  414dca:	xor    al,0x84
  414dcc:	jo     0x414d75
  414dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dcf:	es inc eax
  414dd1:	loop   0x414d67
  414dd3:	ja     0x414dac
  414dd5:	(bad)  [ecx+0xa437eb3]
  414ddb:	fimul  DWORD PTR [esi+0x54]
  414dde:	or     al,0x83
  414de0:	push   ecx
  414de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de2:	gs in  eax,0x55
  414de5:	(bad)  
  414de6:	leave  
  414de7:	retf   0xbdea
  414dea:	jns    0x414e52
  414dec:	into   
  414ded:	xchg   esi,eax
  414dee:	pop    esi
  414def:	jne    0x414dc5
  414df1:	mov    esi,0x7a2e6c08
  414df6:	adc    al,0x97
  414df8:	dec    edi
  414df9:	push   0xef4c9b84
  414dfe:	hlt    
  414dff:	dec    eax
  414e00:	jle    0x414dfe
  414e02:	add    edi,edi
  414e04:	rol    BYTE PTR [ecx-0x7871a4c9],cl
  414e0a:	xor    ebx,0xffffffb8
  414e0d:	dec    ecx
  414e0e:	fadd   DWORD PTR [ebx]
  414e10:	clc    
  414e11:	nop
  414e12:	and    BYTE PTR [ecx],0xd0
  414e15:	adc    al,0xb7
  414e17:	push   ds
  414e18:	dec    edi
  414e19:	sbb    cl,ah
  414e1b:	mov    ds:0x151ab8f6,al
  414e20:	imul   esp,ebx,0xffffff88
  414e23:	mov    dh,0xa1
  414e25:	mov    ds:0x31e18b3c,eax
  414e2a:	jl     0x414db3
  414e2c:	pop    eax
  414e2d:	lock sbb BYTE PTR [edi-0x32],dl
  414e31:	rcl    DWORD PTR [ecx-0x36],cl
  414e34:	ficomp WORD PTR [esp+edx*4]
  414e37:	sar    BYTE PTR [edi],0xda
  414e3a:	in     al,dx
  414e3b:	cmc    
  414e3c:	xchg   esp,eax
  414e3d:	push   ecx
  414e3e:	test   eax,0xda967afa
  414e43:	pop    ecx
  414e44:	int3   
  414e45:	std    
  414e46:	sbb    eax,0xc53b5d38
  414e4b:	out    dx,al
  414e4c:	mov    bh,0xdb
  414e4e:	push   es
  414e4f:	xor    eax,0x9eb05afa
  414e54:	add    al,0xf3
  414e56:	repz push esi
  414e58:	add    DWORD PTR [esi+esi*2+0x3d],esi
  414e5c:	mov    ebx,0x3ebef2f5
  414e61:	loop   0x414e13
  414e63:	ins    BYTE PTR es:[edi],dx
  414e64:	inc    edi
  414e65:	loop   0x414dec
  414e67:	jae    0x414eab
  414e69:	jmp    0xe3f359f
  414e6e:	cwde   
  414e6f:	xor    eax,DWORD PTR [eax+ebx*8-0x21fe978e]
  414e76:	(bad)  
  414e77:	inc    ebx
  414e79:	nop
  414e7a:	jno    0x414e00
  414e7c:	nop
  414e7d:	fwait
  414e7e:	mov    ebx,0x809e32ee
  414e83:	cmp    ch,BYTE PTR [ebx+0x7d]
  414e86:	test   eax,0x7d3ada30
  414e8b:	or     eax,0xba6fc6bf
  414e90:	mov    al,ds:0x3f2cbe90
  414e95:	xchg   BYTE PTR [ecx+0x56],ch
  414e98:	out    dx,al
  414e99:	fsubr  DWORD PTR [edi-0x4264922e]
  414e9f:	cmp    al,0x29
  414ea1:	inc    eax
  414ea2:	clc    
  414ea3:	das    
  414ea4:	mov    edi,0x67444674
  414ea9:	dec    edi
  414eaa:	in     al,dx
  414eab:	push   ds
  414eac:	(bad)  
  414eae:	mov    ds:0x7a844075,eax
  414eb4:	mov    al,ds:0x73a9753
  414eb9:	mov    ebx,0xfa6c532f
  414ebe:	loope  0x414f22
  414ec0:	cmp    DWORD PTR ds:0xb49c07dd,ebp
  414ec6:	push   es
  414ec7:	inc    DWORD PTR [ebp+0x43]
  414eca:	add    BYTE PTR [edx-0x1dbac3ce],bh
  414ed0:	xor    al,0xbf
  414ed2:	or     eax,0xa4a18fb2
  414ed7:	mov    bh,0x7a
  414ed9:	mov    ch,0x8b
  414edb:	adc    al,0x6
  414edd:	jg     0x414ed7
  414edf:	sub    al,0x8a
  414ee1:	test   eax,0xb10888ad
  414ee6:	jb     0x414f0b
  414ee8:	jmp    0xa123b3a9
  414eed:	sbb    BYTE PTR ds:0x20823222,0xb
  414ef4:	pop    ss
  414ef5:	xchg   ecx,ebx
  414ef7:	shr    eax,cl
  414ef9:	ja     0x414f08
  414efb:	inc    eax
  414efc:	cmp    edi,DWORD PTR [ebx+0x52458445]
  414f02:	aaa    
  414f03:	jo     0x414f57
  414f05:	sbb    BYTE PTR [ebp-0x5c],bh
  414f08:	daa    
  414f09:	push   ebx
  414f0a:	add    eax,0x90961994
  414f0f:	mov    eax,ds:0xcceabc86
  414f14:	imul   ebx,DWORD PTR [ebx-0x23],0xffffffd6
  414f18:	mov    edi,0x97696a55
  414f1d:	sub    al,0xc3
  414f1f:	(bad)  
  414f20:	mov    WORD PTR [ecx-0x5657e660],ds
  414f26:	pop    ecx
  414f27:	mov    ds:0x6f98c49e,al
  414f2c:	sbb    eax,0xb267e3f2
  414f31:	xor    al,BYTE PTR [ecx+0x47]
  414f34:	fadd   DWORD PTR [edi+0x33b3545d]
  414f3a:	sub    ah,bh
  414f3c:	mov    ah,0x5c
  414f3e:	mov    ds:0xa1a57490,al
  414f43:	adc    al,0x9e
  414f45:	push   esi
  414f46:	(bad)
  414f49:	and    BYTE PTR [ebx-0x1b],dh
  414f4c:	jge    0x414f67
  414f4e:	xor    DWORD PTR [ecx],edx
  414f50:	rcr    ch,1
  414f52:	imul   ecx,DWORD PTR [eax],0xffffffb3
  414f55:	mov    ebx,0xd0e4aa89
  414f5a:	mov    ?,WORD PTR [edx]
  414f5c:	mov    es,edx
  414f5e:	iret   
  414f5f:	vpandd xmm4{k2},xmm7,XMMWORD PTR [ebx-0x60]
  414f66:	sub    ebx,esp
  414f68:	dec    ecx
  414f69:	ja     0x414f0e
  414f6b:	jne    0x414f11
  414f6d:	mov    ebp,DWORD PTR [esi+0x42]
  414f70:	cld    
  414f71:	pop    es
  414f72:	inc    esi
  414f73:	xchg   esi,eax
  414f74:	lea    ecx,[edx+0x54b4be13]
  414f7a:	dec    eax
  414f7b:	mov    edx,0xd25c985e
  414f80:	dec    ecx
  414f81:	and    al,0x59
  414f83:	out    dx,al
  414f84:	scas   eax,DWORD PTR es:[edi]
  414f85:	dec    edx
  414f86:	mov    ah,0x11
  414f88:	ins    DWORD PTR es:[edi],dx
  414f89:	cdq    
  414f8a:	pop    ebp
  414f8b:	test   DWORD PTR [ebx+eax*8+0x23],ebp
  414f8f:	hlt    
  414f90:	pop    edx
  414f91:	nop
  414f92:	or     al,0x9e
  414f94:	bound  edi,QWORD PTR [edx+0x3dd3a058]
  414f9a:	mul    BYTE PTR [edi+0x13]
  414f9d:	adc    DWORD PTR [edi+0x6e],0xffffffb3
  414fa1:	sbb    al,BYTE PTR [esi+ebp*2+0x7ea759]
  414fa8:	and    al,0xa8
  414faa:	add    eax,0xd3fce202
  414faf:	fst    DWORD PTR [ebp+0x507975e4]
  414fb5:	ret    
  414fb6:	dec    esi
  414fb7:	and    ah,BYTE PTR [ebx-0x38de6375]
  414fbd:	jnp    0x414ff9
  414fbf:	xor    dl,cl
  414fc1:	add    edi,ebx
  414fc3:	call   0x64271d96
  414fc8:	stos   DWORD PTR es:[edi],eax
  414fc9:	jae    0x414f4c
  414fcb:	pop    ebx
  414fcc:	(bad)  
  414fcd:	(bad)  
  414fce:	push   ecx
  414fcf:	jbe    0x414ffe
  414fd1:	cdq    
  414fd2:	popf   
  414fd3:	cwde   
  414fd4:	pop    edi
  414fd5:	add    bl,dh
  414fd7:	ins    BYTE PTR es:[edi],dx
  414fd8:	loop   0x415021
  414fda:	in     al,dx
  414fdb:	xor    DWORD PTR [ecx+esi*8],esi
  414fde:	push   cs
  414fdf:	inc    ecx
  414fe0:	retf   
  414fe1:	xor    edx,0x24
  414fe4:	mov    ds:0x98850d0f,al
  414fe9:	or     eax,0x93fc5ee1
  414fee:	push   cs
  414fef:	push   edx
  414ff0:	push   ecx
  414ff1:	ins    DWORD PTR es:[edi],dx
  414ff2:	(bad)  
  414ff3:	pop    ds
  414ff4:	push   edx
  414ff5:	add    edx,ebx
  414ff7:	out    dx,al
  414ff8:	scas   eax,DWORD PTR es:[edi]
  414ff9:	loopne 0x415015
  414ffb:	(bad)  
  414ffc:	and    eax,0x35c4ef81
  415001:	je     0x41503b
  415003:	xchg   ecx,eax
  415004:	vorps  ymm5,ymm6,ymm1
  415008:	inc    edi
  415009:	addr16 sbb ebx,edi
  41500c:	mov    DWORD PTR fs:[ebp+0x40],ecx
  415010:	jle    0x414fd1
  415012:	into   
  415013:	fst    QWORD PTR [ebp-0x2ee8b20b]
  415019:	jmp    0x414fc0
  41501b:	scas   al,BYTE PTR es:[edi]
  41501c:	aaa    
  41501d:	into   
  41501e:	(bad)  
  41501f:	imul   ebx,DWORD PTR [edx],0xfffffffb
  415022:	fld    DWORD PTR [edi+0x0]
  415025:	(bad)  
  415026:	pop    ebx
  415027:	or     eax,DWORD PTR [edx+0x50da8126]
  41502d:	mov    edi,0x1d97ed01
  415032:	and    DWORD PTR [ebp+0x63],ebx
  415035:	call   0xda780ae3
  41503a:	fisttp WORD PTR [esi]
  41503c:	push   ds
  41503d:	data16 cmc 
  41503f:	xor    cl,ah
  415041:	and    BYTE PTR ds:[edx+0x1f],dl
  415045:	jb     0x41505a
  415047:	inc    edx
  415048:	repnz mov esp,0xf307f11a
  41504e:	sti    
  41504f:	xchg   edx,eax
  415050:	icebp  
  415051:	dec    esi
  415052:	inc    esi
  415053:	fmulp  st(7),st
  415055:	gs mov esi,0x213aa626
  41505b:	outs   dx,DWORD PTR ds:[esi]
  41505c:	or     BYTE PTR [edi+edx*8-0x48c49a18],al
  415063:	or     al,0xbd
  415065:	scas   eax,DWORD PTR es:[edi]
  415066:	sbb    DWORD PTR [edx+0x216c5165],esp
  41506c:	sbb    eax,0x2a6d0803
  415071:	scas   al,BYTE PTR es:[edi]
  415072:	int3   
  415073:	(bad)  
  415075:	(bad)  
  415076:	aam    0xc0
  415078:	scas   al,BYTE PTR es:[edi]
  415079:	sub    ebx,DWORD PTR [ebx]
  41507b:	das    
  41507c:	ds stc 
  41507e:	xor    eax,0x71d3b672
  415083:	dec    ecx
  415084:	cmp    al,0x9
  415086:	pcmpgtb mm0,QWORD PTR ds:0x146a7590
  41508d:	fdivr  QWORD PTR [ebx-0x3c]
  415090:	mov    eax,ds:0x465bf346
  415095:	test   DWORD PTR [esi+0x6933a01c],ecx
  41509b:	add    al,0xf5
  41509d:	arpl   bx,si
  41509f:	xor    ebx,edx
  4150a1:	push   cs
  4150a2:	sub    edi,ebx
  4150a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150a6:	and    DWORD PTR [edi],eax
  4150a8:	inc    ebx
  4150a9:	pop    ss
  4150aa:	or     BYTE PTR [edi],dh
  4150ac:	ficomp DWORD PTR [eax+ecx*8-0x65]
  4150b0:	popa   
  4150b1:	or     BYTE PTR [ebx-0x47c790e5],ah
  4150b7:	scas   eax,DWORD PTR es:[edi]
  4150b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b9:	ins    DWORD PTR es:[edi],dx
  4150ba:	pop    ebx
  4150bb:	jo     0x4150ce
  4150bd:	add    eax,0x6b8bb79f
  4150c2:	and    DWORD PTR [ebx],ebx
  4150c4:	add    eax,0x38e8d384
  4150c9:	xor    esp,ecx
  4150cb:	push   cs
  4150cc:	xchg   esi,eax
  4150cd:	stos   BYTE PTR es:[edi],al
  4150ce:	sbb    esi,DWORD PTR [ebx-0x372566af]
  4150d4:	sub    esi,DWORD PTR [ebx-0x35]
  4150d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150d8:	je     0x415096
  4150da:	jle    0x415066
  4150dc:	mov    esi,0x80d36f8e
  4150e1:	in     eax,0x57
  4150e3:	mov    ds:0xeff6cd1,al
  4150e8:	lods   eax,DWORD PTR ds:[esi]
  4150e9:	or     ah,BYTE PTR [edi-0x54]
  4150ec:	add    BYTE PTR [ecx-0xeb9fd94],dh
  4150f2:	imul   edx,edx,0xf508214f
  4150f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150f9:	or     edi,ebx
  4150fb:	int3   
  4150fc:	jae    0x41512d
  4150fe:	fst    st(5)
  415100:	xor    DWORD PTR [esi],ebx
  415102:	push   cs
  415103:	and    ah,BYTE PTR [ebx]
  415105:	sub    esi,esp
  415107:	arpl   WORD PTR [edi],bx
  415109:	dec    esp
  41510a:	xor    BYTE PTR [edx-0x662d5b7e],dl
  415110:	sti    
  415111:	pop    eax
  415112:	mov    edx,0x900c8be3
  415117:	repnz add al,0x11
  41511a:	mov    ebx,0x8a4cee26
  41511f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415120:	(bad)  
  415121:	inc    eax
  415122:	push   esp
  415123:	aad    0xfa
  415125:	pop    eax
  415126:	cdq    
  415127:	ss je  0x415190
  41512a:	sub    ebp,DWORD PTR [ebx-0x48]
  41512d:	mov    bl,0x21
  41512f:	mov    edi,0x108bf34d
  415134:	mov    WORD PTR [edx],ds
  415136:	lds    esp,FWORD PTR [edi-0x15]
  415139:	fs mov bl,0xa1
  41513c:	outs   dx,DWORD PTR ds:[esi]
  41513d:	cld    
  41513e:	ret    0x2ea0
  415141:	xor    eax,0xd1d69e55
  415146:	jbe    0x4151a5
  415148:	out    0x18,eax
  41514a:	push   0xffffff88
  41514c:	adc    DWORD PTR [eax-0x2d7b9bd0],eax
  415152:	pop    ebp
  415153:	adc    BYTE PTR [edi],bh
  415155:	call   0x8db8:0xf6e3573e
  41515c:	jmp    0xc5a5:0x625e8e5c
  415163:	fbstp  TBYTE PTR [ecx]
  415165:	mov    BYTE PTR [edi],ah
  415167:	mov    ecx,0x18eee75e
  41516c:	sub    eax,0x418a7f90
  415171:	mov    al,BYTE PTR [ecx+0x22d5f67a]
  415177:	ds pop edi
  415179:	fcom   st(0)
  41517b:	mov    al,ds:0x1d49b40
  415180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415181:	dec    eax
  415183:	jno    0x415111
  415185:	push   es
  415186:	mov    esi,0x7f82c41f
  41518b:	mov    edi,0x783c59f6
  415190:	xchg   DWORD PTR ds:0x38ea3e3d,edi
  415196:	retf   0x753c
  415199:	lock mov ds:0x7e9b3a50,eax
  41519f:	ret    0x39e
  4151a2:	ret    0x99fc
  4151a5:	pop    ecx
  4151a6:	ins    DWORD PTR es:[edi],dx
  4151a7:	mov    edx,0x4416af60
  4151ac:	aad    0xf5
  4151ae:	sub    dh,bh
  4151b0:	into   
  4151b1:	out    0xb4,al
  4151b3:	jo     0x4151e6
  4151b5:	enter  0x11f1,0x9d
  4151b9:	cmp    eax,0x1e1b37dc
  4151be:	xchg   bh,bh
  4151c0:	lock (bad) 
  4151c2:	push   cs
  4151c3:	sbb    al,0x5f
  4151c5:	and    eax,0xbae55a7b
  4151ca:	mov    cs,WORD PTR [ebp+0x5a]
  4151cd:	xor    DWORD PTR [ecx-0x36f7bfd4],eax
  4151d3:	shl    bl,cl
  4151d5:	es push ebp
  4151d7:	sti    
  4151d8:	and    al,0xd3
  4151da:	push   0xb5a03243
  4151df:	ss jbe 0x4151e2
  4151e2:	loopne 0x415228
  4151e4:	(bad)  
  4151e5:	out    dx,eax
  4151e6:	sub    eax,0x512a9422
  4151eb:	add    DWORD PTR [ebx+0x19],eax
  4151ee:	ins    BYTE PTR es:[edi],dx
  4151ef:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151f1:	(bad)  
  4151f2:	lock lds edx,FWORD PTR [edx]
  4151f5:	xchg   BYTE PTR [esi+0x139d6c10],cl
  4151fb:	sti    
  4151fc:	iret   
  4151fd:	test   ch,ah
  4151ff:	pop    eax
  415200:	mov    WORD PTR [edx+edi*2-0x677038aa],ss
  415207:	ret    
  415208:	inc    ecx
  41520a:	ret    0x9667
  41520d:	leave  
  41520e:	cwde   
  41520f:	in     al,0x86
  415211:	repz adc DWORD PTR [ebx+0x72a0a395],0xffffffd3
  415219:	add    ecx,ebx
  41521b:	repnz outs dx,BYTE PTR ds:[esi]
  41521d:	cwde   
  41521e:	mov    eax,0x779ed24f
  415223:	push   esi
  415224:	and    ebp,DWORD PTR [eax+edx*8-0x13]
  415228:	repz xchg esp,ecx
  41522b:	fdiv   QWORD PTR [ebp+0x47]
  41522e:	in     eax,0x9f
  415230:	aas    
  415231:	ret    
  415232:	or     eax,0x81902096
  415237:	pop    eax
  415238:	jecxz  0x41528b
  41523a:	aas    
  41523b:	ret    0x90ad
  41523e:	out    dx,eax
  41523f:	pop    ebx
  415240:	cdq    
  415241:	add    eax,0xd039501
  415246:	sub    ecx,DWORD PTR [ebp-0x7c9c6a9e]
  41524c:	pop    esp
  41524d:	push   esi
  41524e:	je     0x415295
  415250:	dec    edx
  415251:	pop    edx
  415252:	ds cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415255:	mov    dl,0x5
  415257:	shr    ch,1
  415259:	lea    edx,ds:0x3a8deddc
  41525f:	daa    
  415260:	xor    BYTE PTR es:[edi-0xcdbea25],bh
  415267:	mov    DWORD PTR ds:0xb6337bfe,ebp
  41526d:	xchg   edi,eax
  41526e:	jecxz  0x4152b6
  415270:	pop    esi
  415271:	ret    0xab1a
  415274:	and    eax,0xb6e97d91
  415279:	lea    ebp,[ecx+0x5d]
  41527c:	sti    
  41527d:	(bad)  
  41527e:	test   al,0x2
  415280:	fdiv   st,st(3)
  415282:	in     al,0x10
  415284:	loope  0x4152fd
  415286:	enter  0x6e69,0x66
  41528a:	and    al,0xf7
  41528c:	jecxz  0x415296
  41528e:	dec    DWORD PTR [esi+0x30]
  415291:	aaa    
  415292:	icebp  
  415293:	mov    ecx,0xdf41c724
  415298:	popf   
  415299:	sub    ebp,DWORD PTR [edi]
  41529b:	fwait
  41529c:	mov    ah,0x1c
  41529e:	and    al,0x64
  4152a0:	mov    eax,DWORD PTR [ebp-0x75009e39]
  4152a6:	cli    
  4152a7:	mov    eax,ds:0x8fb12e32
  4152ac:	scas   eax,DWORD PTR es:[edi]
  4152ad:	jg     0x4152ba
  4152af:	rcr    DWORD PTR [ecx],1
  4152b1:	and    dl,ah
  4152b3:	cmp    esi,esp
  4152b5:	data16 das 
  4152b7:	out    0x65,al
  4152b9:	fcom   QWORD PTR [edi]
  4152bb:	imul   esp,esi,0xffffffe4
  4152be:	xchg   ebx,eax
  4152bf:	mov    cl,0x5
  4152c1:	fcomp  st(5)
  4152c3:	mov    esp,0x6543c705
  4152c8:	fs into 
  4152ca:	xchg   esi,eax
  4152cb:	xor    al,0x7
  4152cd:	jmp    0x3f11:0x390158f6
  4152d4:	inc    esp
  4152d5:	pop    ds
  4152d6:	call   0x523e:0x39ce541
  4152dd:	mov    ds:0xc9329a63,eax
  4152e2:	cmp    al,0xd9
  4152e4:	mov    cl,0x98
  4152e6:	test   BYTE PTR [edi+ecx*2-0x75],ah
  4152ea:	jae    0x41527c
  4152ec:	add    BYTE PTR [esp+eax*2],0xde
  4152f0:	jmp    0xfac00d29
  4152f5:	mov    BYTE PTR [ebp-0xa],dl
  4152f8:	push   ss
  4152f9:	or     ebp,esi
  4152fb:	cmp    BYTE PTR [ebp+0x2666c26],ah
  415301:	mov    cs,WORD PTR [esp+esi*1+0x7]
  415305:	cmp    al,0x6a
  415307:	icebp  
  415308:	cmc    
  415309:	mov    WORD PTR [ecx+edi*1+0x72a51767],cs
  415310:	and    BYTE PTR [ebp+0x30],al
  415313:	iret   
  415314:	fild   WORD PTR [ecx-0x7f2bd01]
  41531a:	leave  
  41531b:	and    esi,DWORD PTR [esi+eax*4]
  41531e:	xor    eax,0x6ca9743a
  415323:	mov    edx,0x9e9558cb
  415328:	idiv   DWORD PTR [esi-0x59d3ce2c]
  41532e:	sub    al,0xd7
  415330:	cld    
  415331:	push   ss
  415332:	cli    
  415333:	mov    ebx,ecx
  415335:	ret    
  415336:	sbb    BYTE PTR [ebp-0x47],dl
  415339:	cmp    al,BYTE PTR [edx]
  41533b:	push   cs
  41533c:	(bad)  
  41533d:	jmp    0x6aac:0xa3c5c215
  415344:	sbb    ebp,DWORD PTR [edi]
  415346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415347:	int    0x57
  415349:	mov    ds:0xed905aff,eax
  41534e:	push   cs
  41534f:	pop    es
  415350:	icebp  
  415351:	push   es
  415352:	test   BYTE PTR [edx+0x9],bh
  415355:	loop   0x4152ef
  415357:	(bad)  
  415358:	sti    
  415359:	imul   ecx,DWORD PTR [edx+ebx*2],0x15
  41535d:	push   es
  41535e:	mov    bl,0x72
  415360:	cmp    dl,0xe5
  415363:	dec    ebx
  415364:	adc    BYTE PTR ds:0xaa96edbf,dl
  41536a:	inc    edi
  41536b:	inc    ebx
  41536c:	ret    
  41536d:	push   ss
  41536e:	jmp    0x714207af
  415373:	in     al,0xda
  415375:	mov    dh,0x2b
  415377:	retf   
  415378:	(bad)  
  415379:	hlt    
  41537a:	bnd jo 0x4153a9
  41537d:	les    ebp,FWORD PTR [ecx+eax*1-0x4d]
  415381:	xchg   edx,ecx
  415383:	xor    al,0xda
  415385:	or     dx,di
  415388:	dec    eax
  415389:	sub    ah,0x41
  41538c:	mov    bl,0xac
  41538e:	xrelease xchg BYTE PTR [esp+ebp*8-0x22c61b5b],dh
  415396:	push   es
  415397:	daa    
  415398:	call   0x423c:0xbee880
  41539f:	es ret 
  4153a1:	xchg   esp,eax
  4153a2:	mov    esp,0x7dfc8bfc
  4153a7:	iret   
  4153a8:	ror    BYTE PTR [ebx+0x4d5e0ee1],1
  4153ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153af:	mov    dl,0x64
  4153b1:	cmp    bl,BYTE PTR [esi]
  4153b3:	sbb    bl,BYTE PTR [edx+0x5c]
  4153b6:	pop    ebp
  4153b7:	mov    ds:0xa8baf22b,al
  4153bc:	in     eax,0x98
  4153be:	sub    bh,cl
  4153c0:	push   edi
  4153c1:	mov    edi,DWORD PTR [ebp+0x75658468]
  4153c7:	dec    edi
  4153c8:	add    DWORD PTR [eax+0x7ca24ec9],esp
  4153ce:	inc    esp
  4153cf:	rcl    DWORD PTR [esi+0x1bb19644],0x15
  4153d6:	xor    al,0xad
  4153d8:	and    eax,0xaf5b48f1
  4153dd:	leave  
  4153de:	add    al,0xb4
  4153e0:	sbb    al,0xfb
  4153e2:	mov    esp,0xda315812
  4153e7:	cmp    ah,BYTE PTR [esi-0x70c5b633]
  4153ed:	and    ebp,0x45
  4153f0:	in     al,0xc8
  4153f2:	sbb    al,0x3
  4153f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153f5:	sub    edi,DWORD PTR [ebx-0x2c]
  4153f8:	sbb    dh,bh
  4153fa:	rcl    dl,1
  4153fc:	dec    ecx
  4153fd:	cmp    edx,DWORD PTR [ebx+ebp*2]
  415400:	js     0x415432
  415402:	xchg   ebp,eax
  415403:	add    al,0x2c
  415405:	nop
  415406:	test   eax,0xa37f59bb
  41540b:	ficom  DWORD PTR [ebx]
  41540d:	mov    al,ds:0xb772ee41
  415412:	jbe    0x4153a2
  415414:	loop   0x415495
  415416:	aad    0x7a
  415418:	push   cs
  415419:	test   BYTE PTR [ebx],dl
  41541b:	jge    0x4153ec
  41541d:	sbb    eax,0xf4386d34
  415422:	je     0x4153b9
  415424:	or     bh,al
  415426:	sub    dh,cl
  415428:	test   DWORD PTR [eax],eax
  41542a:	(bad)  
  41542b:	and    BYTE PTR [esi],bh
  41542d:	loopne 0x41541b
  41542f:	mov    ch,0x74
  415431:	push   edx
  415432:	add    eax,0xca10a868
  415437:	mov    cs,WORD PTR [eax]
  415439:	das    
  41543a:	sti    
  41543b:	cwde   
  41543c:	cmp    eax,0x6c2abf9d
  415441:	sbb    DWORD PTR [edi+0x502d73f6],0x63ce0f20
  41544b:	xor    ah,ah
  41544d:	add    DWORD PTR [eax-0x48],eax
  415450:	xchg   edx,eax
  415451:	mov    bl,0x74
  415453:	push   esi
  415454:	loope  0x4154aa
  415456:	scas   eax,DWORD PTR es:[edi]
  415457:	jmp    0xe464:0xdef31dcf
  41545e:	sbb    al,0x2a
  415460:	xchg   esp,eax
  415461:	pop    ecx
  415462:	cmp    bl,0x7a
  415465:	inc    edx
  415466:	(bad)  
  415468:	popa   
  415469:	sahf   
  41546a:	leave  
  41546b:	or     ecx,DWORD PTR [eax]
  41546d:	adc    DWORD PTR [esi-0xac951e0],esi
  415473:	(bad)  
  415474:	lods   al,BYTE PTR ds:[esi]
  415475:	(bad)  
  415476:	jmp    0x45b53f45
  41547b:	jb     0x41546d
  41547d:	pop    ss
  41547e:	(bad)  
  41547f:	out    0x2d,al
  415481:	sub    edi,edi
  415483:	jb     0x4154e3
  415485:	pop    ss
  415486:	ret    0xc7e4
  415489:	fist   DWORD PTR [eax]
  41548b:	inc    eax
  41548c:	xchg   ch,ch
  41548e:	sbb    eax,0xe8961258
  415493:	(bad)  
  415494:	fld    DWORD PTR fs:[ebp+0x36]
  415498:	jmp    0x1225:0xe0e5fe98
  41549f:	int3   
  4154a0:	xor    edx,DWORD PTR [ebp+0x1a3946d9]
  4154a6:	retf   
  4154a7:	ds push edx
  4154a9:	mov    BYTE PTR [edx+0x38],dh
  4154ac:	retf   
  4154ad:	and    BYTE PTR [ebp+0x77],0x4e
  4154b1:	(bad)  
  4154b2:	sbb    eax,0xd1696e8a
  4154b7:	adc    eax,0x5f16e976
  4154bc:	and    esp,ebp
  4154be:	mov    ah,0x79
  4154c0:	jl     0x41548f
  4154c2:	cmp    esi,DWORD PTR [ecx+esi*2-0xb]
  4154c6:	in     al,0xe7
  4154c8:	fwait
  4154c9:	scas   al,BYTE PTR es:[edi]
  4154ca:	cdq    
  4154cb:	cs jb  0x415507
  4154ce:	out    0xd,eax
  4154d0:	das    
  4154d1:	push   edi
  4154d2:	shl    DWORD PTR [edx],cl
  4154d4:	ror    DWORD PTR [ecx],0x8
  4154d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d8:	ret    
  4154d9:	mov    ds:0xf1b8c8f7,eax
  4154de:	daa    
  4154df:	push   cs
  4154e0:	enter  0x9f29,0xe9
  4154e4:	imul   BYTE PTR [ecx]
  4154e6:	jl     0x41549a
  4154e8:	in     eax,dx
  4154e9:	mov    ds:0xf555d4da,al
  4154ee:	adc    DWORD PTR [esi+0x16],ebx
  4154f1:	adc    eax,DWORD PTR ds:0x62161bfc
  4154f7:	sbb    BYTE PTR [edx-0x70],0xce
  4154fb:	adc    BYTE PTR [ecx+0x69],0xda
  4154ff:	lods   al,BYTE PTR ds:[esi]
  415500:	mov    al,0x11
  415502:	mov    al,ds:0xf79a7292
  415507:	call   0x59dd5c00
  41550c:	in     eax,0xeb
  41550e:	cdq    
  41550f:	repz in eax,0x3a
  415512:	adc    eax,0x5b7a2576
  415517:	call   0x1034b166
  41551c:	nop
  41551d:	stos   DWORD PTR es:[edi],eax
  41551e:	mov    esp,0xf9c53a6b
  415523:	(bad)  
  415524:	dec    edx
  415525:	sub    al,0xec
  415527:	dec    ebx
  415528:	cmp    ecx,edi
  41552a:	adc    al,0x80
  41552c:	cmc    
  41552d:	inc    esi
  41552e:	xchg   ecx,eax
  41552f:	mov    DWORD PTR [edx-0x24],edi
  415532:	aad    0x7c
  415534:	and    bh,BYTE PTR [esi+0x256f70b]
  41553a:	clc    
  41553b:	call   0xf80b:0x7a4a958d
  415542:	inc    esp
  415543:	xchg   esp,eax
  415544:	gs push ebp
  415546:	xchg   ecx,eax
  415547:	jmp    0x77dd3553
  41554c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41554d:	dec    ebx
  41554e:	in     eax,dx
  41554f:	daa    
  415550:	cmc    
  415551:	inc    esp
  415552:	add    DWORD PTR [edi+0xa],ebx
  415555:	cmp    ah,bl
  415557:	pop    ecx
  415558:	es push 0x24
  41555b:	push   esi
  41555c:	(bad)  [eax]
  41555e:	aaa    
  41555f:	or     BYTE PTR [esi],cl
  415561:	sbb    al,0x1b
  415563:	lods   eax,DWORD PTR ds:[esi]
  415564:	xor    eax,0xe64cfea2
  415569:	add    BYTE PTR [eax-0x4d18064d],al
  41556f:	dec    esi
  415570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415571:	sti    
  415572:	retf   
  415573:	dec    eax
  415574:	fld    DWORD PTR [ebp-0x4f]
  415577:	mov    ebx,0x84a08975
  41557c:	call   0x70b0:0xaf16b97
  415583:	lds    esp,FWORD PTR [edi+0x103da35c]
  415589:	xchg   ebx,edx
  41558b:	test   al,0xeb
  41558d:	jl     0x4155e4
  41558f:	xchg   edx,eax
  415590:	mov    ds:0xc709e0be,al
  415595:	imul   edx,edx,0x76
  415598:	sar    bh,0xf1
  41559b:	jp     0x415580
  41559d:	jge    0x4155c4
  41559f:	(bad)  
  4155a0:	cmp    ebp,ebp
  4155a2:	sahf   
  4155a3:	xchg   esi,eax
  4155a4:	mov    ecx,0x83831031
  4155a9:	lock xor al,0x5d
  4155ac:	test   BYTE PTR [edx-0x5b],dh
  4155af:	dec    ebx
  4155b0:	push   ebp
  4155b1:	jno    0x4155d3
  4155b3:	mov    esi,0x9d26cfbe
  4155b8:	jge    0x415605
  4155ba:	push   0x4b
  4155bc:	dec    esp
  4155bd:	jg     0x41561d
  4155bf:	mov    cl,0x7
  4155c1:	push   esi
  4155c2:	lock xor eax,0xc4722e9
  4155c8:	jae    0x4155b2
  4155ca:	pop    edi
  4155cb:	push   edi
  4155cc:	mov    ds:0xda1c9aeb,al
  4155d1:	pushf  
  4155d2:	and    DWORD PTR [ebx+0xd7229ac],ebx
  4155d8:	popa   
  4155d9:	(bad)  
  4155da:	repz inc eax
  4155dc:	sub    BYTE PTR [esi+0x4d4bdd82],0xa9
  4155e3:	jge    0x415647
  4155e5:	call   0xdd6b:0x24cedc28
  4155ec:	dec    ebp
  4155ed:	push   DWORD PTR [ebp-0x1d]
  4155f0:	sub    bh,BYTE PTR [eax-0x65]
  4155f3:	lahf   
  4155f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f5:	inc    eax
  4155f6:	call   0x5b3a:0xa66d1f3e
  4155fd:	jecxz  0x4155c1
  4155ff:	xchg   ebp,eax
  415600:	push   edx
  415601:	xchg   ebp,eax
  415602:	add    eax,DWORD PTR [esi]
  415604:	mov    ebx,0xd261fda5
  415609:	daa    
  41560a:	(bad)  
  41560b:	aam    0xce
  41560d:	xchg   ebx,eax
  41560e:	scas   al,BYTE PTR es:[edi]
  41560f:	dec    ebx
  415610:	mov    ah,0xf8
  415612:	inc    esp
  415613:	test   BYTE PTR [ecx],0x6b
  415616:	jnp    0x4155df
  415618:	dec    esp
  415619:	sub    BYTE PTR [ecx+0x0],ah
  41561c:	add    DWORD PTR [ebp-0x2b4ead],edx
  415622:	aam    0x2f
  415624:	aas    
  415625:	aaa    
  415626:	pop    esp
  415627:	lock mov dl,0xdd
  41562a:	dec    ebp
  41562b:	ja     0x4155fa
  41562d:	and    BYTE PTR [edi+esi*2],bh
  415630:	mov    bl,0x62
  415632:	iret   
  415633:	mov    ch,BYTE PTR [ebx]
  415635:	jmp    0x5b90:0x767e6761
  41563c:	loope  0x4155e1
  41563e:	cs sbb bl,al
  415641:	add    al,0x6a
  415643:	sub    BYTE PTR [eax-0x652b0e9e],bh
  415649:	xor    ecx,esp
  41564b:	xchg   esi,eax
  41564c:	jg     0x4155e2
  41564e:	or     eax,0xcc26b2e2
  415653:	(bad)  
  415654:	xlat   BYTE PTR ds:[ebx]
  415655:	test   al,0x2a
  415657:	jecxz  0x415651
  415659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41565a:	sbb    al,0x11
  41565c:	cld    
  41565d:	scas   al,BYTE PTR es:[edi]
  41565e:	ins    BYTE PTR es:[edi],dx
  41565f:	and    eax,0x7d255e25
  415664:	pusha  
  415665:	aad    0x2b
  415667:	dec    ebp
  415668:	pop    esp
  415669:	repnz xor al,0x6a
  41566c:	in     eax,0x58
  41566e:	push   DWORD PTR [edx+eiz*4]
  415671:	mov    edi,0x12780a03
  415676:	adc    eax,0x2d9abfdb
  41567b:	iret   
  41567c:	push   cs
  41567d:	into   
  41567e:	iret   
  41567f:	jle    0x415615
  415681:	adc    eax,0x764800
  415686:	jbe    0x4156af
  415688:	sub    eax,DWORD PTR [edi]
  41568a:	pop    edi
  41568b:	(bad)  
  41568c:	jmp    0x415669
  41568e:	aas    
  41568f:	push   esp
  415690:	pop    eax
  415691:	xor    al,0x26
  415693:	mov    bh,0xc
  415695:	je     0x415662
  415697:	test   BYTE PTR [eax-0x46abea03],ch
  41569d:	add    DWORD PTR [edi+0x2c830a49],edi
  4156a3:	icebp  
  4156a4:	or     al,0x2b
  4156a6:	ins    BYTE PTR es:[edi],dx
  4156a7:	and    ebp,DWORD PTR [eax+0x21]
  4156aa:	or     DWORD PTR [edi],ebx
  4156ac:	add    DWORD PTR [edx+eiz*4-0x2e100bbd],ecx
  4156b3:	js     0x4156fd
  4156b5:	loope  0x4156c4
  4156b7:	icebp  
  4156b8:	mov    al,0x1a
  4156ba:	iret   
  4156bb:	dec    ebp
  4156bc:	out    dx,al
  4156bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156be:	or     edx,0xc
  4156c1:	scas   eax,DWORD PTR es:[edi]
  4156c2:	push   edx
  4156c3:	push   ecx
  4156c4:	ds dec eax
  4156c6:	push   ds
  4156c7:	push   es
  4156c8:	sti    
  4156c9:	leave  
  4156ca:	or     BYTE PTR [esi],ch
  4156cc:	fld    DWORD PTR [ebx-0x63]
  4156cf:	stc    
  4156d0:	inc    eax
  4156d1:	jae    0x415701
  4156d3:	pop    edx
  4156d4:	or     DWORD PTR [ecx],esi
  4156d6:	dec    ebx
  4156d7:	push   ebx
  4156d8:	out    0x9a,al
  4156da:	cmp    dl,ah
  4156dc:	cmp    al,0xc
  4156de:	inc    esi
  4156df:	adc    eax,0x37cfcfae
  4156e4:	cmp    eax,0x25b266ab
  4156e9:	(bad)  
  4156ea:	(bad)  
  4156eb:	jmp    0x4156aa
  4156ed:	xchg   ebp,eax
  4156ee:	xor    bh,bh
  4156f0:	and    cl,BYTE PTR [eax]
  4156f2:	add    eax,0xb1b62972
  4156f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f8:	jp     0x41574c
  4156fa:	xor    BYTE PTR [ecx-0x7b419ab3],al
  415700:	(bad)  
  415701:	lds    edi,FWORD PTR [ecx-0x415232a2]
  415707:	jns    0x415764
  415709:	(bad)  
  41570a:	out    dx,al
  41570b:	mov    bh,ch
  41570d:	rcr    eax,cl
  41570f:	and    eax,0x3d018402
  415714:	cmp    eax,0xcddf3571
  415719:	in     al,dx
  41571a:	sahf   
  41571b:	repnz fisub DWORD PTR [eax]
  41571f:	lahf   
  415720:	jbe    0x4156c6
  415722:	mov    ebp,DWORD PTR fs:[ecx]
  415725:	stos   DWORD PTR es:[edi],eax
  415726:	nop
  415727:	push   esp
  415728:	mov    bh,0xec
  41572a:	iret   
  41572b:	pop    edi
  41572c:	(bad)  
  41572d:	mov    edx,0x838b4253
  415732:	adc    edx,DWORD PTR [ebx-0x5b]
  415735:	add    ebx,DWORD PTR [edx]
  415737:	data16 fisttp DWORD PTR [ecx+0x7b]
  41573b:	xor    DWORD PTR [edi],eax
  41573d:	sub    ecx,DWORD PTR [ebx+0x60]
  415740:	mov    al,0xf2
  415742:	pop    ebp
  415743:	cwde   
  415744:	and    DWORD PTR [edi],edi
  415746:	xchg   esi,eax
  415747:	adc    al,0x9b
  415749:	rcl    ch,cl
  41574b:	mov    bh,0xa0
  41574d:	fstp   QWORD PTR [ecx+0x10deef7e]
  415753:	jnp    0x4156e8
  415755:	pusha  
  415756:	mov    esi,0xfdd308c5
  41575b:	cmp    ebx,DWORD PTR [ecx]
  41575d:	adc    eax,DWORD PTR [ecx+0x1d]
  415760:	mov    edi,0x22747588
  415765:	loop   0x4157cc
  415767:	push   edx
  415768:	push   ss
  415769:	(bad)  
  41576a:	mov    edx,0x45c20b3e
  41576f:	jnp    0x41571e
  415771:	sbb    dl,0xc5
  415774:	ja     0x4157b6
  415776:	icebp  
  415777:	or     al,0xa6
  415779:	xlat   BYTE PTR ds:[ebx]
  41577a:	sub    DWORD PTR ds:0x3c6ddcc1,esp
  415780:	ins    DWORD PTR es:[edi],dx
  415781:	inc    esi
  415782:	and    dh,BYTE PTR ds:0xdd5912a8
  415788:	mov    eax,0xa9768007
  41578d:	aas    
  41578e:	dec    eax
  41578f:	pop    es
  415790:	push   esi
  415791:	pusha  
  415792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415793:	lods   eax,DWORD PTR cs:[esi]
  415795:	in     al,dx
  415796:	mov    ebx,0x8793d3a
  41579b:	aas    
  41579c:	popf   
  41579d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41579e:	(bad)  
  41579f:	pop    ds
  4157a0:	in     al,dx
  4157a1:	pop    ecx
  4157a2:	ret    
  4157a3:	and    al,0xf5
  4157a5:	jl     0x4157da
  4157a7:	adc    esp,edi
  4157a9:	(bad)  
  4157aa:	fistp  WORD PTR [edx]
  4157ac:	fldcw  WORD PTR [esi]
  4157ae:	inc    ecx
  4157af:	dec    esp
  4157b0:	call   0x6de9:0x109e11ba
  4157b7:	cmp    DWORD PTR [eax-0x30314638],esi
  4157bd:	(bad)  
  4157be:	xor    al,BYTE PTR [edi]
  4157c0:	push   ebp
  4157c1:	pop    esp
  4157c2:	mov    ecx,DWORD PTR [esi]
  4157c4:	or     edi,edi
  4157c6:	xchg   esi,eax
  4157c7:	jnp    0x415790
  4157c9:	xchg   esp,eax
  4157ca:	imul   esi,DWORD PTR [esi+0x56],0x6e
  4157ce:	add    BYTE PTR [esi],cl
  4157d0:	stos   DWORD PTR es:[edi],eax
  4157d1:	shr    BYTE PTR [ebx],0xe0
  4157d4:	js     0x4157bb
  4157d6:	mov    edx,0x27e9ca71
  4157db:	out    0xb7,eax
  4157dd:	pushf  
  4157de:	and    esi,DWORD PTR [edi+ebx*2+0x30]
  4157e2:	stc    
  4157e3:	add    ebx,DWORD PTR [eax-0x55]
  4157e6:	jno    0x41583f
  4157e8:	(bad)  
  4157e9:	nop
  4157ea:	imul   BYTE PTR [eax-0x7e]
  4157ed:	mov    DWORD PTR [ecx+0x44],esi
  4157f0:	add    al,0x73
  4157f2:	xchg   ebp,eax
  4157f3:	ds or  al,0x3e
  4157f6:	add    al,0xa7
  4157f8:	loop   0x415846
  4157fa:	rcr    edi,0x13
  4157fd:	rcr    DWORD PTR [edx],cl
  4157ff:	fiadd  DWORD PTR [ebp-0x328d7ee6]
  415805:	mov    ch,0x11
  415807:	aas    
  415808:	mov    BYTE PTR [eax+esi*1+0x634c7bca],ch
  41580f:	stc    
  415810:	idiv   BYTE PTR [ecx+eiz*4-0x1e9ec664]
  415817:	(bad)
  41581a:	pop    es
  41581b:	inc    edi
  41581c:	iret   
  41581d:	jne    0x415805
  41581f:	xor    DWORD PTR [ebx+0x54a56b2b],0x36
  415826:	xchg   ecx,eax
  415827:	outs   dx,BYTE PTR ds:[esi]
  415828:	mov    dh,0x10
  41582a:	and    cl,0x29
  41582d:	in     eax,0x92
  41582f:	or     BYTE PTR [ecx],0xef
  415832:	mov    BYTE PTR [edi+0x2e21765e],bl
  415838:	sbb    edx,DWORD PTR [eax-0x50]
  41583b:	cld    
  41583c:	cmc    
  41583d:	cmp    eax,DWORD PTR [esi-0x70]
  415840:	add    DWORD PTR [edx+eax*2+0x370b480c],edi
  415847:	stc    
  415848:	hlt    
  415849:	pushf  
  41584a:	ror    DWORD PTR es:[edi+eiz*8+0x13],1
  41584f:	jecxz  0x4157fc
  415851:	push   ebp
  415852:	and    eax,0x85ea6ea4
  415857:	or     eax,0xd1d3c347
  41585c:	push   ss
  41585d:	stos   BYTE PTR es:[edi],al
  41585e:	shr    BYTE PTR [ecx-0x6a3f1cd5],1
  415864:	nop/reserved BYTE PTR [ebx+0x5f]
  415868:	dec    DWORD PTR [eax]
  41586a:	int3   
  41586b:	xlat   BYTE PTR ds:[ebx]
  41586c:	fwait
  41586d:	stc    
  41586e:	push   edx
  41586f:	push   eax
  415870:	loopne 0x415855
  415872:	mov    ch,0xd8
  415874:	mov    ebp,eax
  415876:	hlt    
  415877:	adc    esp,DWORD PTR [ebx-0x105438b4]
  41587d:	test   eax,0xc5f888
  415882:	pop    ebp
  415883:	mov    bh,0x4a
  415885:	or     eax,0x9fb4b9a3
  41588a:	out    dx,eax
  41588b:	popa   
  41588c:	xchg   edx,eax
  41588d:	fsubrp st(3),st
  41588f:	loopne 0x415893
  415891:	add    al,0x27
  415893:	outs   dx,DWORD PTR ds:[esi]
  415894:	mov    al,0xa7
  415896:	scas   eax,DWORD PTR es:[edi]
  415897:	push   eax
  415898:	in     eax,0xb2
  41589a:	pop    eax
  41589b:	push   ds
  41589c:	leave  
  41589d:	mov    ecx,0xe0725403
  4158a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a3:	inc    edi
  4158a4:	pop    ebx
  4158a5:	sti    
  4158a6:	pushf  
  4158a7:	cld    
  4158a8:	xchg   BYTE PTR es:[eax-0x7008ca88],al
  4158af:	fnstenv [ebx]
  4158b1:	imul   esi,DWORD PTR [edi-0x6a1b7550],0x53ff54a0
  4158bb:	shl    BYTE PTR [edx+0x6a6a8a53],0x9b
  4158c2:	add    DWORD PTR [eax-0x5],0x7a0628ff
  4158c9:	gs or  eax,0x96518fc
  4158cf:	xchg   DWORD PTR ds:0x5bbe8877,edx
  4158d5:	retf   0x173f
  4158d8:	das    
  4158d9:	sbb    BYTE PTR [eax+0x4a17920c],bh
  4158df:	test   BYTE PTR [eax-0x320de87f],bh
  4158e5:	inc    ebp
  4158e6:	aad    0xf
  4158e8:	sub    DWORD PTR [eax+0x67],ecx
  4158eb:	rcl    BYTE PTR [esi+edx*4],cl
  4158ee:	ins    BYTE PTR es:[edi],dx
  4158ef:	or     DWORD PTR [esi-0x6d488ac6],esp
  4158f5:	lock cli 
  4158f7:	inc    edx
  4158f8:	(bad)  
  4158fa:	mov    ah,0x62
  4158fc:	shl    ebx,1
  4158fe:	mov    BYTE PTR [edi],dl
  415900:	mov    DWORD PTR [esi+0x2efb6bd0],esp
  415906:	xchg   ebp,eax
  415907:	push   edi
  415908:	scas   eax,DWORD PTR es:[edi]
  415909:	jmp    0xef38310c
  41590e:	cs mov ebx,0x610b5c4d
  415914:	cli    
  415915:	ins    BYTE PTR es:[edi],dx
  415916:	lea    esp,[edi+0x1f065e1f]
  41591c:	retf   0x1664
  41591f:	lea    esp,[eax-0x13238455]
  415925:	jecxz  0x415955
  415927:	pusha  
  415928:	add    dh,BYTE PTR [edx-0x40ead4d6]
  41592e:	lgs    edi,FWORD PTR [eax+0x53]
  415932:	rol    BYTE PTR [ebp+ebp*8+0x7496f9cb],cl
  415939:	ret    0x8b0e
  41593c:	popa   
  41593d:	dec    esi
  41593e:	xor    BYTE PTR [edi],0x1d
  415941:	ins    DWORD PTR es:[edi],dx
  415942:	jl     0x41597b
  415944:	test   al,0x92
  415946:	or     DWORD PTR [eax],edi
  415948:	and    ah,BYTE PTR [eax-0x6]
  41594b:	(bad)  
  41594d:	bound  ebx,QWORD PTR [eax-0x42763392]
  415953:	dec    ebp
  415954:	(bad)  
  415955:	mov    dl,0x87
  415957:	iret   
  415958:	push   ss
  415959:	sbb    ah,0x5c
  41595c:	mov    ebx,0x25cb9369
  415961:	mov    dl,BYTE PTR [edi+0x3cd321f3]
  415967:	push   eax
  415968:	adc    al,0xef
  41596a:	(bad)  
  41596b:	mov    edx,0x98a4a0a9
  415970:	pop    ds
  415971:	imul   ebx,edi,0x27322f9
  415977:	out    0x23,al
  415979:	adc    BYTE PTR [ecx],bh
  41597b:	(bad)  
  41597c:	sub    dl,BYTE PTR [edi]
  41597e:	neg    DWORD PTR [ebx+eiz*2-0x33862af]
  415985:	dec    edx
  415986:	push   es
  415987:	arpl   WORD PTR [ecx],sp
  415989:	or     BYTE PTR [esi],bl
  41598b:	pop    esp
  41598c:	dec    eax
  41598d:	or     al,0x68
  41598f:	push   0xe06a44ec
  415994:	(bad)  
  415995:	fyl2x  
  415997:	cmc    
  415998:	ret    
  415999:	div    BYTE PTR [edi]
  41599b:	push   esp
  41599c:	imul   DWORD PTR [ecx]
  41599e:	scas   eax,DWORD PTR es:[edi]
  41599f:	call   0x10436813
  4159a4:	jae    0x41597e
  4159a6:	(bad)  
  4159a7:	bound  esi,QWORD PTR [ecx+0x3b]
  4159aa:	sub    BYTE PTR [edx+0x1a],al
  4159ad:	cmp    BYTE PTR [ebx-0x36],ah
  4159b0:	ret    0x7f4f
  4159b3:	fisub  DWORD PTR [esi-0x1983f1b5]
  4159b9:	jnp    0x4159e3
  4159bb:	shl    dh,1
  4159bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159be:	in     al,0xa0
  4159c0:	cwde   
  4159c1:	ins    DWORD PTR es:[edi],dx
  4159c2:	push   ebx
  4159c3:	xor    bl,BYTE PTR [ebp+0x7f5ffa4b]
  4159c9:	test   al,0x26
  4159cb:	test   al,0xb1
  4159cd:	fisttp QWORD PTR [eax-0x6b]
  4159d0:	inc    ebx
  4159d1:	lea    ebx,[esi]
  4159d3:	and    BYTE PTR [edi+esi*4-0x1f0d9942],al
  4159da:	(bad)  
  4159db:	adc    dl,cl
  4159dd:	(bad)  
  4159de:	stos   BYTE PTR es:[edi],al
  4159df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159e0:	push   0x7e50c477
  4159e5:	mov    edi,edx
  4159e7:	mov    edi,0xdf210700
  4159ec:	mov    al,0xf8
  4159ee:	and    esi,esp
  4159f0:	fdiv   DWORD PTR [eax-0x5ff65325]
  4159f6:	or     esp,eax
  4159f8:	scas   eax,DWORD PTR es:[edi]
  4159f9:	inc    esi
  4159fa:	and    ah,cl
  4159fc:	cmp    ecx,DWORD PTR ds:0x7a7c8415
  415a02:	pop    ecx
  415a03:	add    ch,BYTE PTR ds:0xe549d869
  415a09:	fimul  WORD PTR [esi+0x3d]
  415a0c:	sbb    DWORD PTR [esp+eax*1-0x78],edx
  415a10:	and    eax,0xbeccd85e
  415a15:	jbe    0x415a2e
  415a17:	mov    dh,0x39
  415a19:	push   ecx
  415a1a:	or     edi,DWORD PTR [eax+0x2c]
  415a1d:	xchg   ebx,eax
  415a1e:	xor    DWORD PTR [ebx+0x42a7c896],esp
  415a24:	push   ebp
  415a25:	(bad)  
  415a27:	push   ebp
  415a28:	call   0x7e14:0xd75e624
  415a2f:	adc    al,0x7
  415a31:	fadd   DWORD PTR [edx-0x7de4c4f0]
  415a37:	int3   
  415a38:	mov    es,WORD PTR [ecx-0x16]
  415a3b:	ins    BYTE PTR es:[edi],dx
  415a3c:	fwait
  415a3d:	js     0x415a10
  415a3f:	jmp    DWORD PTR [esi+eax*1+0x4e]
  415a43:	jg     0x415a80
  415a45:	mov    al,ds:0x33314c5
  415a4a:	cmp    BYTE PTR [ecx+0x5],0xd8
  415a4e:	stos   BYTE PTR es:[edi],al
  415a4f:	inc    esp
  415a50:	push   cs
  415a51:	jp     0x415a86
  415a53:	lahf   
  415a54:	fnstenv [esi+ebp*4+0x6e5a7c3f]
  415a5b:	sahf   
  415a5c:	jnp    0x415a99
  415a5e:	mov    esi,0x9adb6ee6
  415a63:	cmp    cl,cl
  415a65:	mov    eax,0x39136aed
  415a6a:	mov    ds:0x58c7bb38,eax
  415a6f:	mov    al,ds:0x5f97dccb
  415a74:	data16 mov ch,0x2
  415a77:	or     al,0x5e
  415a79:	mov    al,0xc4
  415a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7c:	dec    esp
  415a7d:	ficomp DWORD PTR [ebx-0x68d8eafc]
  415a83:	fistp  QWORD PTR [ebx+0x26a69fb2]
  415a89:	mov    BYTE PTR [edx+eax*2+0x2e53eb97],0x51
  415a91:	dec    esp
  415a92:	or     edx,esp
  415a94:	jno    0x415b10
  415a96:	das    
  415a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a98:	push   ecx
  415a99:	cwde   
  415a9a:	xor    DWORD PTR [esi-0x6a13c960],esi
  415aa0:	xchg   DWORD PTR [ebp+0x20],esp
  415aa3:	loope  0x415af0
  415aa5:	cmp    al,0xc0
  415aa7:	lahf   
  415aa8:	adc    edi,DWORD PTR [ebp+0x13d3ad03]
  415aae:	jno    0x415ac9
  415ab0:	xor    BYTE PTR [edx-0x77723f23],dl
  415ab6:	fwait
  415ab7:	aam    0xa8
  415ab9:	das    
  415aba:	imul   edi,DWORD PTR [edi-0xb],0x8c193d9f
  415ac1:	icebp  
  415ac2:	stc    
  415ac3:	fdiv   DWORD PTR [esp+edi*1-0x15]
  415ac7:	out    dx,eax
  415ac8:	imul   ecx,DWORD PTR [ebp+edi*4+0x37bc092a],0x48
  415ad0:	(bad)  [edi]
  415ad2:	aad    0xd6
  415ad4:	scas   al,BYTE PTR es:[edi]
  415ad5:	sub    BYTE PTR [ecx-0x6fcaaf82],bh
  415adb:	mov    edx,0x840db732
  415ae0:	popf   
  415ae1:	sub    edx,ebx
  415ae3:	inc    eax
  415ae4:	add    dl,BYTE PTR [eax*4+0x5b33643a]
  415aeb:	jne    0x415b2b
  415aed:	lds    ebp,FWORD PTR [edi-0x1231c77]
  415af3:	xchg   ecx,ecx
  415af5:	adc    eax,0xbfca2bc4
  415afa:	sub    al,BYTE PTR [ecx-0x4d]
  415afd:	std    
  415afe:	mov    ebp,0x200364b6
  415b03:	mov    ah,0xe7
  415b05:	push   ss
  415b06:	(bad)  
  415b07:	test   BYTE PTR [esi],0xb0
  415b0a:	stc    
  415b0b:	lgdtd  [esi+eiz*4+0x42]
  415b10:	mov    al,0xc0
  415b12:	sbb    eax,DWORD PTR [ebp+0x3a7c3ae3]
  415b18:	jl     0x415aaf
  415b1a:	shl    DWORD PTR [esi+0xa],1
  415b1d:	in     eax,0x97
  415b1f:	adc    dh,BYTE PTR [ecx-0x15da4a94]
  415b25:	mov    cl,BYTE PTR [eax+edi*4+0x1400c4bc]
  415b2c:	outs   dx,BYTE PTR ds:[esi]
  415b2d:	stos   DWORD PTR es:[edi],eax
  415b2e:	xor    BYTE PTR [edx-0x45],cl
  415b31:	ins    BYTE PTR es:[edi],dx
  415b32:	clc    
  415b33:	jecxz  0x415b48
  415b35:	hlt    
  415b36:	xchg   DWORD PTR [ecx],esi
  415b38:	mov    edx,0xd1a34d87
  415b3d:	gs call 0xa8d5ee4c
  415b43:	push   esp
  415b44:	pop    esp
  415b45:	add    al,0x2d
  415b47:	popf   
  415b48:	jecxz  0x415b87
  415b4a:	(bad)  
  415b4b:	in     al,dx
  415b4c:	adc    ebx,DWORD PTR ds:[edx+0x62]
  415b50:	inc    esp
  415b51:	xchg   esi,eax
  415b52:	pop    ecx
  415b53:	fstp   QWORD PTR [ecx-0xcfc7faa]
  415b59:	push   ecx
  415b5a:	mov    eax,0xe769374e
  415b5f:	outs   dx,BYTE PTR ds:[esi]
  415b60:	cdq    
  415b61:	ins    DWORD PTR es:[edi],dx
  415b62:	sbb    edx,ecx
  415b64:	cmp    BYTE PTR [eax+0x45690d71],al
  415b6a:	or     eax,0xa008af60
  415b6f:	std    
  415b70:	pop    ebp
  415b71:	sar    BYTE PTR [eax-0x43],1
  415b74:	out    dx,al
  415b75:	mov    bh,0x60
  415b77:	cmp    al,0xe7
  415b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b7a:	popa   
  415b7b:	sub    ecx,DWORD PTR [ebp-0x295417d5]
  415b81:	push   ebx
  415b82:	mov    ecx,0x75a39890
  415b87:	pop    ds
  415b88:	enter  0x871b,0xe
  415b8c:	mov    edi,0x811b489
  415b91:	fs add al,0xd
  415b94:	cmc    
  415b95:	adc    esi,DWORD PTR [edi-0x16fc77d]
  415b9b:	ss call 0x2f6bded5
  415ba1:	aaa    
  415ba2:	ficomp WORD PTR [ebx]
  415ba4:	xchg   ebx,eax
  415ba5:	rol    BYTE PTR [edi-0x54],1
  415ba8:	lock push edx
  415baa:	(bad)  
  415bab:	adc    BYTE PTR [eax],ch
  415bad:	mov    dl,0x41
  415baf:	sub    dh,dh
  415bb1:	dec    ebx
  415bb2:	lahf   
  415bb3:	jae    0x415bfe
  415bb5:	xor    ebx,DWORD PTR [esp+ebx*2+0x2fce8103]
  415bbc:	jno    0x415c1e
  415bbe:	jle    0x415b53
  415bc0:	pop    esp
  415bc1:	jo     0x415c04
  415bc3:	cmp    ah,BYTE PTR [edx]
  415bc5:	repnz leave 
  415bc7:	mov    ecx,0xbff8a749
  415bcc:	sub    BYTE PTR [ebx+0x6],bh
  415bcf:	nop
  415bd0:	adc    ah,BYTE PTR [ebp-0x15c4ab69]
  415bd6:	iret   
  415bd7:	jno    0x415b6a
  415bd9:	aas    
  415bda:	push   0xe28418f9
  415bdf:	addr16 in al,0x7f
  415be2:	push   esp
  415be3:	mov    cl,0x39
  415be5:	cmp    bh,BYTE PTR [ecx+0x4edf426f]
  415beb:	push   edi
  415bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bed:	loope  0x415bab
  415bef:	test   DWORD PTR [ebx+0x43399721],ebp
  415bf5:	xor    DWORD PTR [ebp-0x78],0x5ee14702
  415bfc:	stc    
  415bfd:	or     al,0xd4
  415bff:	unpcklps xmm1,XMMWORD PTR [edi+0x671e0adc]
  415c06:	cmp    DWORD PTR [ebp-0x13],edx
  415c09:	sub    bl,dl
  415c0b:	dec    ebp
  415c0c:	sahf   
  415c0d:	dec    edi
  415c0e:	sbb    al,0x53
  415c10:	stos   BYTE PTR es:[edi],al
  415c11:	dec    ebx
  415c12:	int    0x2
  415c14:	vorpd  ymm7,ymm7,YMMWORD PTR [ecx+0x7dcf47bf]
  415c1c:	(bad)  
  415c1d:	dec    edx
  415c1e:	jno    0x415c54
  415c20:	retf   
  415c21:	push   esi
  415c22:	cwde   
  415c23:	inc    ebx
  415c24:	stos   DWORD PTR es:[edi],eax
  415c25:	or     ah,dl
  415c27:	pop    esp
  415c28:	pop    edx
  415c29:	mov    bh,0x61
  415c2b:	dec    ebx
  415c2c:	inc    edi
  415c2d:	xchg   esi,eax
  415c2e:	jb     0x415bd0
  415c30:	imul   ebp,DWORD PTR [ecx-0x64],0x66913b7
  415c37:	jns    0x415c32
  415c39:	sub    DWORD PTR [ecx*4-0x61d58033],edi
  415c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c41:	fsub   DWORD PTR [esi+0x7914b35e]
  415c47:	lds    esi,FWORD PTR [edx]
  415c49:	imul   ebp,DWORD PTR [ebp-0x38],0x1d9d12c5
  415c50:	es in  eax,dx
  415c52:	xlat   BYTE PTR ds:[ebx]
  415c53:	out    0xa,al
  415c55:	add    DWORD PTR [ebx],edi
  415c57:	aas    
  415c58:	lds    ebx,FWORD PTR [eax+0x69f6e1b3]
  415c5e:	mov    esi,es
  415c60:	sbb    al,0x9c
  415c62:	xlat   BYTE PTR ds:[ebx]
  415c63:	fistp  WORD PTR [edx+0x44]
  415c66:	stc    
  415c67:	pop    edi
  415c68:	dec    ecx
  415c69:	nop
  415c6a:	mov    al,0xb8
  415c6c:	push   ebp
  415c6d:	out    dx,al
  415c6e:	push   0xda6aebcd
  415c73:	and    al,0x7d
  415c75:	retf   0x350f
  415c78:	cs xor al,0xd
  415c7b:	sub    esp,DWORD PTR [edi]
  415c7d:	out    0xfe,al
  415c7f:	(bad)  [edx+0x5d66736]
  415c85:	push   cs
  415c86:	inc    ebp
  415c87:	and    dl,ah
  415c89:	mov    ah,0x93
  415c8b:	pushf  
  415c8c:	imul   edi,esi,0xffffffb7
  415c8f:	cmp    ch,BYTE PTR [ecx-0x67]
  415c92:	js     0x415cf4
  415c94:	aad    0x90
  415c96:	or     ecx,DWORD PTR [ebx]
  415c98:	stos   BYTE PTR es:[edi],al
  415c99:	fist   WORD PTR [edx]
  415c9b:	xchg   esp,eax
  415c9c:	and    BYTE PTR [esi],dh
  415c9e:	add    BYTE PTR [edx+edi*4-0xd722baa],bh
  415ca5:	add    ah,BYTE PTR [ebp+0x4c15f89c]
  415cab:	stos   DWORD PTR es:[edi],eax
  415cac:	add    BYTE PTR [edi+0x41],dh
  415caf:	js     0x415c4c
  415cb1:	daa    
  415cb2:	cdq    
  415cb3:	jbe    0x415d2c
  415cb5:	add    cl,dh
  415cb7:	adc    DWORD PTR [ebp-0x80],ecx
  415cba:	pop    ecx
  415cbb:	stos   DWORD PTR es:[edi],eax
  415cbc:	mov    cl,0x2c
  415cbe:	(bad)  
  415cc0:	retf   0x4546
  415cc3:	test   al,0x4e
  415cc5:	push   0xffffffae
  415cc7:	sbb    ebp,DWORD PTR [ebx]
  415cc9:	cli    
  415cca:	pop    es
  415ccb:	call   0x8f7c:0x63360bf1
  415cd2:	fstp   DWORD PTR cs:[eax+0x496c9330]
  415cd9:	rol    DWORD PTR [ecx],cl
  415cdb:	adc    ch,BYTE PTR [ecx+0x4fe68d8b]
  415ce1:	mov    ds:0x3e1577e3,al
  415ce6:	xor    ah,BYTE PTR [esi+edi*4]
  415ce9:	sub    al,0x24
  415ceb:	push   cs
  415cec:	or     BYTE PTR [esi],ah
  415cee:	aas    
  415cef:	adc    eax,DWORD PTR [ecx]
  415cf1:	dec    bx
  415cf3:	sbb    esi,ebp
  415cf5:	inc    ebx
  415cf6:	jp     0x415d63
  415cf8:	push   ebp
  415cf9:	pop    ecx
  415cfa:	rol    eax,cl
  415cfc:	jmp    0x415d48
  415cfe:	aam    0xdc
  415d00:	fdivr  DWORD PTR [edi+esi*1-0x2253f8e6]
  415d07:	aam    0xb6
  415d09:	mov    cl,BYTE PTR [ecx+0x744c50d1]
  415d0f:	or     BYTE PTR [ecx-0x4be9fe60],dl
  415d15:	pop    eax
  415d16:	cmp    edx,DWORD PTR [esi+0xaadc7e8]
  415d1c:	mov    BYTE PTR [esp+eiz*4],dh
  415d1f:	and    dh,ah
  415d21:	push   ebx
  415d22:	and    al,0x15
  415d24:	jg     0x415d9e
  415d26:	adc    eax,0xe8b68e55
  415d2b:	xchg   BYTE PTR [eax+edx*8+0x57],al
  415d2f:	aad    0x4b
  415d31:	mov    cl,0x52
  415d33:	mov    ebp,0x6ff76369
  415d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d39:	xchg   ebp,eax
  415d3a:	mov    eax,0x1bdbd37a
  415d3f:	mov    ds:0x4c8ef0c4,eax
  415d44:	jge    0x415ced
  415d46:	cmp    DWORD PTR [ecx+0x1b],ebp
  415d49:	push   edi
  415d4a:	imul   edx,edi,0x36
  415d4d:	and    cl,ah
  415d4f:	ds popf 
  415d51:	mov    ch,0x15
  415d53:	pop    esp
  415d54:	repz sub DWORD PTR [ebp-0x29b273fb],ecx
  415d5b:	icebp  
  415d5c:	xchg   BYTE PTR [esi+ecx*8],cl
  415d5f:	lods   eax,DWORD PTR ds:[esi]
  415d60:	jecxz  0x415d1b
  415d62:	push   ebx
  415d63:	add    eax,0x978fd85b
  415d68:	fwait
  415d69:	not    DWORD PTR [edx+ecx*8]
  415d6c:	cmp    eax,eax
  415d6e:	ror    DWORD PTR [ebp-0xf4ef5d],0x3b
  415d75:	fild   QWORD PTR [ecx+0x7337e80b]
  415d7b:	cmc    
  415d7c:	aas    
  415d7d:	cmp    eax,0x2bd8896
  415d82:	add    esp,ecx
  415d84:	jb     0x415d3b
  415d86:	or     al,0x5a
  415d88:	and    al,0xcd
  415d8a:	ja     0x415d9e
  415d8c:	in     al,dx
  415d8d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d8f:	int    0x31
  415d91:	int    0xc2
  415d93:	inc    esp
  415d94:	xchg   edi,eax
  415d95:	leave  
  415d96:	jmp    0x2948:0xca500a7b
  415d9d:	xor    al,0x6f
  415d9f:	and    eax,0xb7316a0b
  415da4:	call   0x1e1d:0x22dec21
  415dab:	ret    
  415dac:	or     esi,DWORD PTR [ecx]
  415dae:	call   0xa77c93c6
  415db3:	dec    esp
  415db4:	into   
  415db5:	retf   0x7e75
  415db8:	cmp    eax,0x6fb7fb82
  415dbd:	iret   
  415dbe:	pushf  
  415dbf:	push   edx
  415dc0:	push   0x6f95d1ff
  415dc5:	adc    ebp,DWORD PTR [edx-0x2e4813fd]
  415dcb:	aas    
  415dcc:	shr    BYTE PTR [ebx+0x40c7a81b],cl
  415dd2:	fiadd  DWORD PTR [ebx]
  415dd4:	inc    ebp
  415dd5:	inc    ebp
  415dd6:	ror    DWORD PTR [eax+0x44],0x7e
  415dda:	lahf   
  415ddb:	add    BYTE PTR [ecx],al
  415ddd:	rol    BYTE PTR [ecx],1
  415ddf:	clc    
  415de0:	daa    
  415de1:	sar    BYTE PTR [edi+0x23],1
  415de4:	cmp    al,0x59
  415de6:	imul   ebp,eax,0x98a58c2c
  415dec:	cmp    DWORD PTR [esp+edx*8+0x447915ab],esp
  415df3:	jmp    0xa168:0x6af2dd42
  415dfa:	xor    al,al
  415dfc:	xor    eax,0xc770e3ec
  415e01:	shl    esi,0xaa
  415e04:	xor    edi,esi
  415e06:	mov    edx,0xcc7482fa
  415e0b:	pop    edi
  415e0c:	daa    
  415e0d:	sbb    ah,BYTE PTR fs:[esp+edx*4]
  415e11:	cdq    
  415e12:	sub    BYTE PTR [esi*8+0x21739d04],0x9b
  415e1a:	mov    edi,0xd19a528f
  415e1f:	add    DWORD PTR [eax],esi
  415e21:	add    ah,BYTE PTR [edx-0x1c]
  415e24:	inc    eax
  415e25:	jo     0x415da8
  415e27:	popf   
  415e28:	shr    DWORD PTR [eax+0x47],0x1b
  415e2c:	adc    eax,0xc5fe4c7a
  415e31:	push   ss
  415e32:	iret   
  415e33:	cli    
  415e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e35:	jo     0x415e49
  415e37:	ins    BYTE PTR es:[edi],dx
  415e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e39:	pop    ss
  415e3a:	cdq    
  415e3b:	clc    
  415e3c:	(bad)  
  415e3d:	adc    edx,DWORD PTR [edx]
  415e3f:	addr16 cwde 
  415e41:	mov    eax,ds:0xc0452e57
  415e46:	sar    bl,0x45
  415e49:	mov    esi,ebp
  415e4b:	mov    al,ds:0x5745ceb7
  415e50:	inc    edi
  415e51:	mov    esi,0x5feaa76b
  415e56:	sbb    eax,0xb2c04383
  415e5b:	pop    eax
  415e5c:	sbb    eax,0xb8244844
  415e61:	pop    ebx
  415e62:	mov    eax,0x6600c970
  415e67:	inc    ecx
  415e68:	jo     0x415e41
  415e6a:	or     eax,0xd9593e95
  415e6f:	adc    BYTE PTR [ebx],dl
  415e71:	sub    al,0x99
  415e73:	xor    al,0xdc
  415e75:	das    
  415e76:	mov    bl,0x42
  415e78:	cmp    BYTE PTR [ebx-0x79329614],ch
  415e7e:	mov    WORD PTR [eax+ebx*4],?
  415e81:	push   cs
  415e82:	aas    
  415e83:	hlt    
  415e84:	fist   WORD PTR [ebx]
  415e86:	bound  ebx,QWORD PTR [edx]
  415e88:	mov    ds:0x70df0947,eax
  415e8d:	ret    0x96f2
  415e90:	sub    ebp,DWORD PTR [edx-0x36]
  415e93:	repz mov WORD PTR [edx-0x19f9adb],cs
  415e9a:	ds pop ebx
  415e9c:	xor    al,0x50
  415e9e:	jns    0x415e38
  415ea0:	push   ss
  415ea1:	in     eax,dx
  415ea2:	sub    eax,0xb041433c
  415ea7:	pop    es
  415ea8:	add    eax,0xc3b013e5
  415ead:	and    bh,bl
  415eaf:	sub    eax,0xf28a93f0
  415eb4:	xlat   BYTE PTR ds:[ebx]
  415eb5:	fisttp QWORD PTR [edx+0x1e]
  415eb8:	(bad)  [eax+0x52131127]
  415ebe:	in     al,dx
  415ebf:	out    dx,al
  415ec0:	xchg   DWORD PTR [ebx+0x23],esi
  415ec3:	bts    DWORD PTR [edx],ebx
  415ec6:	(bad)  [edi+0x36]
  415ec9:	mov    edx,0x82b31e36
  415ece:	mov    ecx,0x8fc657ed
  415ed3:	pop    esp
  415ed4:	dec    esp
  415ed5:	aaa    
  415ed6:	and    DWORD PTR [edx+0x55],ecx
  415ed9:	mov    edx,0x3c98a3e7
  415ede:	sub    ebx,edi
  415ee0:	loop   0x415ec2
  415ee2:	adc    cl,ah
  415ee4:	jmp    0x250f:0xc239e7ce
  415eeb:	scas   al,BYTE PTR es:[edi]
  415eec:	add    BYTE PTR ds:0x848ae994,al
  415ef2:	bnd ret 0x9076
  415ef6:	fisubr DWORD PTR [ebx-0x10]
  415ef9:	(bad)  
  415efa:	sub    ebp,DWORD PTR [esi]
  415efc:	push   ebx
  415efd:	js     0x415eb4
  415eff:	cli    
  415f00:	loopne 0x415eb7
  415f02:	sahf   
  415f03:	cmp    bh,bl
  415f05:	(bad)  
  415f06:	adc    edx,edi
  415f08:	(bad)
  415f0c:	lods   al,BYTE PTR ds:[esi]
  415f0d:	jge    0x415f5e
  415f0f:	cmc    
  415f10:	cwde   
  415f11:	pop    ds
  415f12:	iret   
  415f13:	icebp  
  415f14:	imul   bh
  415f16:	push   0x8ec8afbc
  415f1b:	call   0x23c0f191
  415f20:	push   edi
  415f21:	scas   eax,DWORD PTR es:[edi]
  415f22:	sub    eax,0xa6427c42
  415f27:	in     eax,0x8
  415f29:	jno    0x415f87
  415f2b:	push   0xffffff82
  415f2d:	and    BYTE PTR [esp+eax*2],ah
  415f30:	add    esi,esi
  415f32:	jl     0x415f71
  415f34:	xchg   edx,eax
  415f35:	mov    eax,0xe2f76c6b
  415f3a:	loop   0x415edc
  415f3c:	(bad)  
  415f3d:	mov    al,ds:0x4d8d88b0
  415f42:	mov    esi,ss
  415f44:	fwait
  415f45:	add    al,0xf1
  415f47:	jne    0x415fa0
  415f49:	inc    ebp
  415f4a:	mov    DWORD PTR [ebx],0x357992f7
  415f50:	inc    edx
  415f51:	addr16 lock ret 
  415f54:	jmp    0xc26e:0xb543abb5
  415f5b:	imul   edi,DWORD PTR [ebx+0x8],0x6b6a82f6
  415f62:	jp     0x415f10
  415f64:	xor    ecx,edx
  415f66:	inc    esp
  415f67:	jno    0x415f01
  415f69:	imul   esi,DWORD PTR [esi-0x69a61615],0x4e
  415f70:	add    BYTE PTR [edi],dl
  415f72:	and    eax,0x3f135458
  415f77:	add    edi,DWORD PTR [ebp+0x70]
  415f7a:	xor    al,0xa5
  415f7c:	fwait
  415f7d:	or     al,0x1
  415f7f:	push   edi
  415f80:	or     eax,0xbff73991
  415f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f86:	xchg   ecx,eax
  415f87:	xchg   DWORD PTR [ebp+0x15671420],ebp
  415f8d:	adc    BYTE PTR [ebx+0x12],ch
  415f90:	inc    ecx
  415f91:	rcl    DWORD PTR [ebp+0x69],0xfe
  415f95:	xlat   BYTE PTR ds:[ebx]
  415f96:	jle    0x415feb
  415f98:	call   0x5ce38473
  415f9d:	mov    cl,0xb5
  415f9f:	mov    edx,0xb682333a
  415fa4:	sub    ebx,DWORD PTR [esi+0x522420d1]
  415faa:	int    0x37
  415fac:	fbstp  TBYTE PTR [ebp+0x23]
  415faf:	shr    DWORD PTR [ecx-0x31424f71],1
  415fb5:	mov    bh,0x24
  415fb7:	push   cs
  415fb8:	pop    edi
  415fb9:	leave  
  415fba:	loop   0x415f84
  415fbc:	outs   dx,BYTE PTR ds:[esi]
  415fbd:	outs   dx,BYTE PTR ds:[esi]
  415fbe:	mov    edi,0x97e3ff1d
  415fc3:	ds loop 0x415f8b
  415fc6:	xor    BYTE PTR [ecx-0x3ed57d1d],ah
  415fcc:	inc    eax
  415fcd:	les    edi,FWORD PTR [ebx]
  415fcf:	push   ss
  415fd0:	mov    bl,BYTE PTR [ebp+eax*8+0x69119927]
  415fd7:	daa    
  415fd8:	mov    ch,0xc6
  415fda:	xor    ebp,DWORD PTR [ebp+0x125c12f8]
  415fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fe1:	xchg   esi,eax
  415fe2:	in     al,dx
  415fe3:	js     0x415fbc
  415fe5:	stos   DWORD PTR es:[edi],eax
  415fe6:	xchg   BYTE PTR [edi-0x54],dh
  415fe9:	xor    DWORD PTR [esi],ebx
  415feb:	in     al,0x61
  415fed:	retf   
  415fee:	call   0x390226a2
  415ff3:	sqrtps xmm4,XMMWORD PTR fs:[ebp-0x1b]
  415ff8:	pop    es
  415ff9:	pop    ebp
  415ffa:	or     esp,DWORD PTR [ebx]
  415ffc:	pop    ds
  415ffd:	adc    dl,bl
  415fff:	jb     0x416032
  416001:	ins    DWORD PTR es:[edi],dx
  416002:	loop   0x41603f
  416004:	xor    eax,0xc64f1406
  416009:	cwde   
  41600a:	sub    esp,DWORD PTR [edi]
  41600c:	mov    ebp,0x37c08d12
  416011:	mov    al,ds:0xa7a26975
  416016:	je     0x415fef
  416018:	mov    dl,0x74
  41601a:	add    ah,BYTE PTR [ecx+esi*2-0x2c19a63f]
  416021:	adc    eax,0x4947fef3
  416026:	add    BYTE PTR [edx+0x19],dl
  416029:	inc    ecx
  41602a:	sbb    bl,BYTE PTR [ecx+0x4c225e46]
  416030:	xor    eax,0xec459341
  416035:	cwde   
  416036:	cmp    bl,cl
  416038:	test   bh,dl
  41603a:	cmp    DWORD PTR [esi+0x3c],0x8c159cbe
  416041:	je     0x416020
  416043:	inc    edx
  416044:	scas   al,BYTE PTR es:[edi]
  416045:	rcr    ebp,1
  416047:	push   ebp
  416048:	fnstsw WORD PTR [eax+ecx*4+0x4b3e1cd3]
  41604f:	xor    eax,0x61a541fe
  416054:	rcr    BYTE PTR ds:0x669bc427,1
  41605a:	sbb    bh,BYTE PTR [ecx]
  41605c:	jmp    0x416081
  41605e:	int3   
  41605f:	adc    BYTE PTR [edi+eiz*1],dl
  416062:	mov    edx,0xad194c5f
  416067:	and    bh,bh
  416069:	sub    DWORD PTR [ecx-0x80],eax
  41606c:	mov    edi,0x379869aa
  416071:	adc    dl,BYTE PTR [esi]
  416073:	push   cs
  416074:	sub    ecx,eax
  416076:	mov    gs,WORD PTR [esi+0xdaaabfa]
  41607c:	sbb    bh,bh
  41607e:	std    
  41607f:	imul   edx,esi,0x64bab0a6
  416085:	push   cs
  416086:	push   eax
  416087:	mov    ah,0xf2
  416089:	jl     0x416082
  41608b:	pop    ecx
  41608c:	adc    al,0xa7
  41608e:	add    eax,0xd80b292b
  416093:	ja     0x41608b
  416095:	inc    edi
  416096:	xor    bh,bl
  416098:	sbb    BYTE PTR [eax-0x63],ah
  41609b:	fcmove st,st(0)
  41609d:	inc    eax
  41609e:	xchg   ebx,eax
  41609f:	xchg   DWORD PTR [eax-0x7e9cf48a],edi
  4160a5:	fadd   QWORD PTR [esi+0x15cca327]
  4160ab:	jns    0x4160fb
  4160ad:	lock loopne 0x416072
  4160b0:	mov    al,bh
  4160b2:	arpl   WORD PTR [esi+eiz*4],sp
  4160b5:	bound  edx,QWORD PTR [ebp+esi*8+0x22]
  4160b9:	cmp    dl,BYTE PTR [ebx]
  4160bb:	cwde   
  4160bc:	jmp    0x7e451fd7
  4160c1:	mov    edi,0xa9ab656a
  4160c6:	call   0xaa60d4f7
  4160cb:	(bad)  
  4160cc:	jmp    0x416061
  4160ce:	das    
  4160cf:	rep ins DWORD PTR es:[edi],dx
  4160d1:	in     eax,dx
  4160d2:	aad    0x1a
  4160d4:	pop    esi
  4160d5:	inc    ebx
  4160d6:	hlt    
  4160d7:	daa    
  4160d8:	xor    al,0x76
  4160da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160db:	push   es
  4160dc:	popf   
  4160dd:	jle    0x41610d
  4160df:	call   0x1301:0x410f4e8b
  4160e6:	jae    0x416147
  4160e8:	imul   esi,DWORD PTR [ebx],0xe0f393a4
  4160ee:	imul   ebp,DWORD PTR [edx+ecx*1],0xd329df5a
  4160f5:	sub    BYTE PTR [ebp-0x72],bh
  4160f8:	fwait
  4160f9:	cmp    esp,DWORD PTR [ebx]
  4160fb:	fsubr  DWORD PTR [edi+0x57]
  4160fe:	sbb    dh,al
  416100:	out    0xbf,al
  416102:	cmp    dl,bh
  416104:	mov    edx,0x3235a4ec
  416109:	mov    al,ds:0x6cbf93f2
  41610e:	push   es
  41610f:	sbb    al,0x9b
  416111:	jo     0x4160fa
  416113:	imul   esi,DWORD PTR [esi-0x17],0xfffffff6
  416117:	add    eax,0x60c2237f
  41611c:	inc    edi
  41611d:	jge    0x4160ec
  41611f:	fcom   DWORD PTR [ebx]
  416121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416122:	mov    ebp,0xd29bae18
  416127:	xor    eax,0x5cf1aafb
  41612c:	aad    0x8e
  41612e:	jns    0x416105
  416130:	add    DWORD PTR [ecx],ebp
  416132:	adc    al,0x20
  416134:	mov    edx,0xb6616bcd
  416139:	inc    ecx
  41613a:	sbb    edx,DWORD PTR [ebx]
  41613c:	lock mov ebp,0x97760544
  416142:	jg     0x4160e3
  416144:	test   al,0xeb
  416146:	retf   
  416147:	inc    esi
  416148:	push   eax
  416149:	fs cdq 
  41614b:	mov    ds,WORD PTR [ebx+0x78]
  41614e:	or     eax,0x827a626f
  416153:	mov    ecx,0x87871a11
  416159:	xchg   edx,eax
  41615a:	outs   dx,BYTE PTR ds:[esi]
  41615b:	int    0x73
  41615d:	rcr    BYTE PTR [edx-0x17e8156d],cl
  416163:	mov    bh,0xef
  416165:	int    0x51
  416167:	or     al,0x4a
  416169:	in     eax,dx
  41616a:	ss jl  0x416160
  41616d:	mov    ?,WORD PTR [edx+0x5f085d1a]
  416173:	xchg   edi,eax
  416174:	lea    eax,[eax+0x4bc6843d]
  41617a:	mov    ebp,0xe3f9ffca
  41617f:	fst    QWORD PTR [ebx]
  416181:	sbb    al,0x1e
  416183:	sbb    eax,0xb6b6597a
  416188:	push   ebx
  416189:	(bad)  
  41618a:	(bad)  
  41618b:	sar    BYTE PTR [si-0x75],cl
  41618f:	ror    BYTE PTR [esi+0x2f],0x12
  416193:	(bad)  
  416194:	loop   0x416212
  416196:	push   0x58
  416198:	push   ebp
  416199:	(bad)  
  41619a:	aad    0xac
  41619c:	mov    bl,0xf3
  41619e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41619f:	dec    ebx
  4161a0:	les    esp,FWORD PTR [edi+0x40]
  4161a3:	jae    0x416155
  4161a5:	sub    BYTE PTR [ebp-0x1d],dl
  4161a8:	xchg   ecx,eax
  4161a9:	add    DWORD PTR [esi-0x54cf2af1],0xa712deed
  4161b3:	nop
  4161b4:	fwait
  4161b5:	sbb    DWORD PTR [eax+0x50b2b5a5],eax
  4161bb:	mov    dl,0xab
  4161bd:	cdq    
  4161be:	sub    eax,0x4240afe9
  4161c3:	xor    BYTE PTR [eax-0x66],dh
  4161c6:	jg     0x41616c
  4161c8:	out    0xfa,al
  4161ca:	pop    ebx
  4161cb:	loopne 0x4161ee
  4161cd:	dec    edi
  4161ce:	push   ds
  4161cf:	adc    eax,0x6813d0bf
  4161d4:	(bad)  
  4161d5:	clc    
  4161d6:	xor    al,0xef
  4161d8:	dec    ebx
  4161d9:	retf   0x4368
  4161dc:	xchg   esi,eax
  4161dd:	xchg   BYTE PTR [edx],al
  4161df:	jp     0x4161df
  4161e1:	stos   BYTE PTR es:[edi],al
  4161e2:	jne    0x41618a
  4161e4:	pop    eax
  4161e5:	out    dx,eax
  4161e6:	jmp    0x6572:0x4a3abd04
  4161ed:	mov    ds:0xfbce37a7,al
  4161f2:	pop    ebp
  4161f3:	outs   dx,DWORD PTR ds:[esi]
  4161f4:	jge    0x416218
  4161f6:	into   
  4161f7:	dec    ecx
  4161f8:	xor    al,0x61
  4161fa:	cmp    DWORD PTR [eax-0x396c3ca9],edi
  416200:	out    dx,eax
  416201:	test   BYTE PTR [edi],dl
  416203:	dec    esp
  416204:	and    eax,0x4c83b142
  416209:	cmp    al,0x82
  41620b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41620c:	test   esp,0xbff54448
  416212:	mov    dl,0xc0
  416214:	repnz mov eax,ds:0xf95f5524
  41621a:	rcr    BYTE PTR [eax-0x74],1
  41621d:	aad    0x98
  41621f:	lahf   
  416220:	das    
  416221:	fdiv   QWORD PTR [edx-0x16957a63]
  416227:	sbb    DWORD PTR [edx],eax
  416229:	jnp    0x4161e9
  41622b:	fnstcw WORD PTR [ebx+0x6e]
  41622e:	aam    0xfb
  416230:	outs   dx,DWORD PTR ds:[esi]
  416231:	mov    cl,0x91
  416233:	stc    
  416234:	call   0xa632:0x874d0c1c
  41623b:	je     0x416242
  41623d:	pop    edi
  41623e:	sbb    BYTE PTR [edi],dl
  416240:	xchg   edx,eax
  416241:	inc    esp
  416242:	add    eax,0x8e038c11
  416247:	push   ss
  416248:	fimul  WORD PTR [edx-0x40]
  41624b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41624c:	push   ecx
  41624d:	sti    
  41624e:	call   0x1930:0x35dc22d4
  416255:	push   edx
  416256:	icebp  
  416257:	mov    ch,BYTE PTR [edi+ebp*4]
  41625a:	cmp    ch,BYTE PTR [eax-0x58]
  41625d:	push   0x2f
  41625f:	pop    edi
  416260:	add    bl,cl
  416262:	dec    ebp
  416263:	xor    BYTE PTR [ecx-0x4770ac1d],0xa4
  41626a:	jne    0x4162aa
  41626c:	sub    ax,0xd1bd
  416270:	sub    BYTE PTR ds:0x55534bc,ah
  416276:	inc    esi
  416277:	fiadd  WORD PTR [ecx]
  416279:	in     eax,dx
  41627a:	les    ebp,FWORD PTR [ebx-0x19]
  41627d:	cld    
  41627e:	ret    
  41627f:	js     0x416276
  416281:	or     eax,0x2425b857
  416286:	fst    QWORD PTR [ecx]
  416288:	call   0xf2407b87
  41628d:	shl    dl,cl
  41628f:	fisttp WORD PTR [ebx+edx*1]
  416292:	fisub  WORD PTR [edi]
  416294:	mov    ebp,DWORD PTR [ecx-0x57]
  416297:	dec    esi
  416298:	push   eax
  416299:	mov    ah,0x7f
  41629b:	cmc    
  41629c:	cmp    al,0x5b
  41629e:	sti    
  41629f:	mov    al,0xb4
  4162a1:	stos   BYTE PTR es:[edi],al
  4162a2:	aad    0xd
  4162a4:	pop    ds
  4162a5:	mov    esi,0xd07c6c4
  4162aa:	cmp    DWORD PTR [edx+0x40],edi
  4162ad:	test   DWORD PTR [ebp-0x233a0d0d],0x250bf699
  4162b7:	pop    esp
  4162b8:	mov    edx,0xf7c99fb8
  4162bd:	mov    ds:0xc310f19,al
  4162c2:	rcl    BYTE PTR cs:[esi+edx*1+0x2df4a445],0x13
  4162cb:	sbb    ebx,DWORD PTR [eax+ebp*8-0x769d40e4]
  4162d2:	add    esi,ebx
  4162d4:	lds    ecx,FWORD PTR [esi]
  4162d6:	jno    0x416355
  4162d8:	shl    DWORD PTR [eax-0x498b1fe0],cl
  4162de:	call   0x3837:0x709a1d04
  4162e5:	pop    edi
  4162e6:	enter  0x322f,0x24
  4162ea:	cmp    bl,BYTE PTR [ecx]
  4162ec:	push   ss
  4162ed:	repnz shl BYTE PTR [ebx],0x25
  4162f1:	jle    0x41627c
  4162f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162f4:	mov    ah,0x4a
  4162f6:	xor    eax,0x355c9d58
  4162fb:	stos   DWORD PTR es:[edi],eax
  4162fc:	aam    0x4f
  4162fe:	cdq    
  4162ff:	cmp    ebp,esp
  416301:	dec    esi
  416302:	aam    0x57
  416304:	mul    DWORD PTR [eax+0x5]
  416307:	push   0x5f
  416309:	retf   0x37a3
  41630c:	loop   0x4162e5
  41630e:	ret    0xc1ec
  416311:	gs push esp
  416313:	popa   
  416314:	pop    ebp
  416315:	and    cl,BYTE PTR [ebp-0x2a28a4f5]
  41631b:	fist   DWORD PTR [ebx-0x12e7e863]
  416321:	push   edi
  416322:	pop    eax
  416323:	push   ds
  416324:	test   al,0x4c
  416326:	out    dx,eax
  416327:	xor    bl,BYTE PTR [ecx+0x4e]
  41632a:	sub    ebp,DWORD PTR [ecx-0xf]
  41632d:	cmp    ebx,DWORD PTR [ecx]
  41632f:	xchg   edi,eax
  416330:	sub    ah,BYTE PTR [ecx+0x58]
  416333:	mov    edi,0x7593259e
  416338:	pop    ds
  416339:	icebp  
  41633a:	xor    BYTE PTR [ecx-0x29],0xab
  41633e:	(bad)  
  41633f:	lods   eax,DWORD PTR ds:[esi]
  416340:	loope  0x41633a
  416342:	lods   al,BYTE PTR ds:[esi]
  416343:	or     al,0x60
  416345:	lds    esi,FWORD PTR [edx+0x34]
  416348:	xchg   ebx,eax
  416349:	outs   dx,BYTE PTR ds:[esi]
  41634a:	scas   al,BYTE PTR es:[edi]
  41634b:	mov    esi,0x7a736462
  416350:	sbb    ah,BYTE PTR [ecx+0x82ae113]
  416356:	dec    eax
  416357:	clc    
  416358:	sbb    BYTE PTR [eax],bl
  41635a:	inc    esp
  41635b:	ins    BYTE PTR es:[edi],dx
  41635c:	mov    ?,WORD PTR [edx]
  41635e:	sub    dh,dh
  416360:	mov    DWORD PTR [ecx-0x19],esp
  416363:	iret   
  416364:	jns    0x4163db
  416366:	fidivr WORD PTR [ebp-0x63]
  416369:	ret    
  41636a:	imul   ecx,DWORD PTR [ebx+eax*8+0x23],0x77
  41636f:	xchg   esi,eax
  416370:	pushf  
  416371:	pop    ebp
  416372:	out    0x43,eax
  416374:	(bad)  
  416375:	in     al,0x17
  416377:	add    DWORD PTR [eax-0xe0f3e8f],esp
  41637d:	xchg   ebx,eax
  41637e:	mov    DWORD PTR [ebx+0x65a2eb40],edi
  416384:	popa   
  416385:	dec    esi
  416386:	in     eax,dx
  416387:	cmp    al,0x54
  416389:	cmp    eax,0xd1821f75
  41638e:	jmp    0xaa12:0x49fd22a0
  416395:	mov    ebx,0xb8b2c173
  41639a:	mov    ds:0xcf816175,al
  41639f:	sar    DWORD PTR [ebx],cl
  4163a1:	xchg   esp,eax
  4163a2:	adc    DWORD PTR [esi+0x564a0b1a],eax
  4163a8:	mov    eax,ds:0x3ca8acc6
  4163ad:	call   0xb86e:0x901f0a37
  4163b4:	cmp    eax,0x201f24c1
  4163b9:	sar    BYTE PTR [edx-0x76],cl
  4163bc:	out    dx,al
  4163bd:	lahf   
  4163be:	fsubr  QWORD PTR [eax+ecx*8]
  4163c1:	cmp    al,0x65
  4163c3:	xor    bl,bl
  4163c5:	ins    DWORD PTR es:[edi],dx
  4163c6:	test   DWORD PTR [eax+0x55],eax
  4163c9:	or     esi,esi
  4163cb:	push   ds
  4163cc:	sub    esi,DWORD PTR [edx+0x25]
  4163cf:	xchg   BYTE PTR [eax],bh
  4163d1:	in     al,dx
  4163d2:	jl     0x416380
  4163d4:	jns    0x416436
  4163d6:	xor    eax,0xe2116c14
  4163db:	data16 cmp BYTE PTR [ecx+0x75613b64],cl
  4163e2:	not    DWORD PTR [ebx]
  4163e4:	fisubr DWORD PTR [ebp-0x13d5fe0]
  4163ea:	aas    
  4163eb:	enter  0x2413,0x19
  4163ef:	jb     0x4163e7
  4163f1:	cwde   
  4163f2:	adc    edi,DWORD PTR [ecx]
  4163f4:	fs loopne 0x41638e
  4163f7:	mov    cl,0x17
  4163f9:	dec    edx
  4163fa:	xchg   eax,esp
  4163fc:	stos   DWORD PTR es:[edi],eax
  4163fd:	mov    esi,0x802fed88
  416402:	push   edi
  416403:	popf   
  416404:	xlat   BYTE PTR ds:[ebx]
  416405:	loopne 0x4163a5
  416407:	adc    BYTE PTR [edi],cl
  416409:	icebp  
  41640a:	sub    DWORD PTR [edx-0x8],esi
  41640d:	dec    esi
  41640e:	fs jns 0x416489
  416411:	fwait
  416412:	pop    esi
  416413:	leave  
  416414:	push   0x9bf0584b
  416419:	repnz push cs
  41641b:	jo     0x416484
  41641d:	imul   edx,DWORD PTR [edx-0x16],0x7a2c9c6
  416424:	sub    ch,BYTE PTR [eax+0x2d]
  416427:	fstp   TBYTE PTR [esp+esi*1+0x22]
  41642b:	mov    dl,0x94
  41642d:	int3   
  41642e:	call   0xe4b52ec4
  416433:	and    al,0x74
  416435:	sbb    eax,0x93b38c9
  41643a:	lea    ebx,[ecx]
  41643c:	mov    al,ds:0x465c9afa
  416441:	dec    ebp
  416442:	mov    edx,0xfe0682d2
  416447:	(bad)  
  416448:	repnz dec esi
  41644a:	or     ebx,DWORD PTR [edx+0x1e]
  41644d:	clc    
  41644e:	test   eax,0x96a16a85
  416453:	push   0x13
  416455:	scas   al,BYTE PTR es:[edi]
  416456:	(bad)  
  416457:	pop    ecx
  416458:	mov    ds:0x48381e3c,al
  41645d:	cmp    al,0xfa
  41645f:	fimul  DWORD PTR [ecx]
  416461:	bound  esi,QWORD PTR [edi-0x67]
  416464:	fadd   QWORD PTR [ebx]
  416466:	jp     0x416470
  416468:	shl    BYTE PTR [ecx+0x37],1
  41646b:	sbb    eax,0xb3382da8
  416470:	sbb    eax,0x75c305cc
  416475:	jg     0x4164e5
  416477:	jae    0x416469
  416479:	in     al,dx
  41647a:	jae    0x416468
  41647c:	xchg   esi,eax
  41647d:	sbb    eax,0x36640382
  416482:	popf   
  416483:	mov    al,ds:0x6867f4c3
  416488:	adc    esi,DWORD PTR [edx-0x32]
  41648b:	out    0xbe,al
  41648d:	nop
  41648e:	add    cl,ah
  416490:	cmp    dh,BYTE PTR [ebp-0x65]
  416493:	mov    ds:0xf3fdd2ba,eax
  416498:	nop
  416499:	dec    ebx
  41649a:	push   0xbb64b641
  41649f:	adc    DWORD PTR [edi],ebp
  4164a1:	sbb    DWORD PTR [edi-0x25],esp
  4164a4:	iret   
  4164a5:	jo     0x4164f5
  4164a7:	loope  0x416482
  4164a9:	enter  0x30b0,0xe0
  4164ad:	and    DWORD PTR [ecx+esi*8+0x2d],esp
  4164b1:	jl     0x4164f9
  4164b3:	ror    BYTE PTR [edi-0x61698344],cl
  4164b9:	int    0xe9
  4164bb:	or     DWORD PTR [ebx+0x1356744d],edx
  4164c1:	inc    ecx
  4164c2:	loopne 0x416517
  4164c4:	sahf   
  4164c5:	dec    esp
  4164c6:	repz cmp eax,0x6fe7fbae
  4164cc:	dec    edi
  4164cd:	rcl    DWORD PTR [eax],0x19
  4164d0:	push   eax
  4164d1:	stc    
  4164d2:	out    dx,eax
  4164d3:	sbb    DWORD PTR [esp+edi*2],ebp
  4164d6:	fxch   st(5)
  4164d8:	jb     0x41652a
  4164da:	pop    edi
  4164db:	mov    edx,DWORD PTR [eax+0x60]
  4164de:	ret    
  4164df:	xor    al,BYTE PTR [eax]
  4164e1:	repz daa 
  4164e3:	jmp    0xe0d3:0x119fdc00
  4164ea:	add    al,0x27
  4164ec:	xor    bl,BYTE PTR [esi-0x328493fc]
  4164f2:	or     DWORD PTR [esi+0x4e],edx
  4164f5:	hlt    
  4164f6:	and    esp,esi
  4164f8:	adc    BYTE PTR [ebx+edx*1-0x2031dab9],ch
  4164ff:	pop    edx
  416500:	leave  
  416501:	pop    esi
  416502:	cmp    al,0x7b
  416504:	retf   0x5a04
  416507:	int3   
  416508:	adc    al,0xfc
  41650a:	mov    ds:0x594168bc,al
  41650f:	fild   QWORD PTR [edi-0x96d8919]
  416515:	push   ss
  416516:	aaa    
  416517:	test   eax,0x4af5c356
  41651c:	sub    eax,0x6ef8cbe1
  416521:	sbb    eax,0xd114d5d6
  416526:	retf   0xb7b1
  416529:	out    0xf5,eax
  41652b:	fs jbe 0x416569
  41652e:	dec    edx
  41652f:	cmp    al,0x92
  416531:	shr    ebx,1
  416533:	mov    edx,0x2c84a21a
  416538:	daa    
  416539:	repz shr BYTE PTR [ebp+0x2cdc20ad],0x17
  416541:	jecxz  0x4164c7
  416543:	mov    bh,0xf9
  416545:	mov    WORD PTR [ebx-0x2f],fs
  416548:	(bad)  
  416549:	mov    esp,0xe0cd1f6c
  41654e:	lds    edi,FWORD PTR [esi]
  416550:	or     edx,DWORD PTR [edx]
  416552:	inc    esi
  416553:	adc    bh,BYTE PTR [edi+0x4adee377]
  416559:	xchg   edx,eax
  41655a:	sti    
  41655b:	push   ebx
  41655c:	mov    dh,0x91
  41655e:	sar    BYTE PTR cs:[eax],1
  416561:	test   al,0x38
  416563:	mov    ds:0xc08ccef6,eax
  416568:	mov    ds:0xdbf79f22,eax
  41656d:	xor    DWORD PTR [edx+0x3c4f80af],0xffffffb1
  416574:	fs push ds
  416576:	fst    DWORD PTR [eax-0x78104e2b]
  41657c:	(bad)  
  41657d:	adc    al,0xdb
  41657f:	xlat   BYTE PTR ds:[ebx]
  416580:	inc    edx
  416581:	push   edi
  416582:	xchg   ebp,eax
  416583:	daa    
  416584:	xor    al,0xa9
  416586:	sbb    BYTE PTR [edi],cl
  416588:	(bad)  
  416589:	mov    bl,0xc7
  41658b:	sbb    BYTE PTR [ebx-0x2],bl
  41658e:	push   edi
  41658f:	cwde   
  416590:	jne    0x416581
  416592:	mov    eax,ds:0x15c83153
  416597:	and    ah,BYTE PTR [esi+ebx*8]
  41659a:	aaa    
  41659b:	adc    bh,BYTE PTR [esi+0x59]
  41659e:	push   cs
  41659f:	rcr    BYTE PTR [eax+0x1bfb1787],1
  4165a5:	(bad)  
  4165a6:	mov    eax,ds:0x2f8d34a3
  4165ab:	xchg   esp,eax
  4165ac:	jle    0x41658f
  4165ae:	inc    edi
  4165af:	out    0x3e,al
  4165b1:	mov    ds:0xedd581ce,eax
  4165b6:	sbb    DWORD PTR [eax+0x5a2bedb6],ebp
  4165bc:	push   esi
  4165bd:	lods   eax,DWORD PTR ds:[esi]
  4165be:	jmp    0x211b:0x598b99d
  4165c5:	dec    esp
  4165c6:	xchg   edi,eax
  4165c7:	sbb    eax,0x1180ee08
  4165cc:	(bad)  
  4165cd:	mov    bl,0x56
  4165cf:	or     al,0xe3
  4165d1:	sbb    BYTE PTR [edx-0x5908b24a],bl
  4165d7:	jmp    0x590:0x2e975619
  4165de:	clc    
  4165df:	dec    esp
  4165e0:	int    0xfb
  4165e2:	jae    0x416595
  4165e4:	adc    BYTE PTR ds:0x1dbd245d,dh
  4165ea:	mov    bh,0x34
  4165ec:	and    bl,BYTE PTR [eax-0x204faf45]
  4165f2:	in     al,0x39
  4165f4:	sbb    bl,BYTE PTR [edi+esi*8-0x37af3f67]
  4165fb:	das    
  4165fc:	sub    DWORD PTR [ebx+ecx*4-0x3b],0x74509da9
  416604:	mov    dh,0x3f
  416606:	(bad)  
  416607:	mov    ds:0x54325653,al
  41660c:	xchg   esi,eax
  41660d:	pop    esp
  41660e:	push   edi
  41660f:	or     ch,cl
  416611:	cmp    ebx,ebx
  416613:	(bad)  
  416614:	dec    esi
  416615:	sbb    al,0xb8
  416617:	es adc al,0xf7
  41661a:	imul   esp,DWORD PTR [ecx-0x1ba1586f],0xc4b41944
  416624:	stc    
  416625:	jmp    0x375e5760
  41662a:	sub    ebp,DWORD PTR [esi+0x596b1f5a]
  416630:	stos   BYTE PTR es:[edi],al
  416631:	lods   al,BYTE PTR ds:[esi]
  416632:	jb     0x416650
  416634:	push   ss
  416635:	push   0xb1e72b6c
  41663a:	in     eax,0x60
  41663c:	cmp    eax,0xd2f968b4
  416641:	clc    
  416642:	mov    edi,DWORD PTR [esi-0x7d94e85c]
  416648:	loope  0x416613
  41664a:	or     edi,DWORD PTR [edx-0x33899195]
  416650:	enter  0x590e,0x52
  416654:	xchg   DWORD PTR [ebx-0x69],ebx
  416657:	sbb    BYTE PTR [ebp-0x4e],0x2e
  41665b:	mov    ecx,0x141d2f12
  416660:	out    0xd7,al
  416662:	ins    DWORD PTR es:[edi],dx
  416663:	add    eax,0xa564378d
  416668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416669:	and    edi,DWORD PTR [ebp-0x27]
  41666c:	mov    es:0x420ff07b,eax
  416672:	lea    ebx,[ecx+0x60]
  416675:	adc    eax,0x7a84c593
  41667a:	pop    DWORD PTR [ebp-0x31]
  41667d:	enter  0x53f1,0xfa
  416681:	out    0x9f,eax
  416683:	in     eax,0xb7
  416685:	addr16 and ch,dh
  416688:	pop    esp
  416689:	pop    eax
  41668a:	cs imul ah
  41668d:	test   BYTE PTR [edx],0x12
  416690:	pop    es
  416691:	pop    ss
  416692:	ror    BYTE PTR [ecx+ebx*1+0x13],cl
  416696:	dec    ebx
  416697:	aad    0x78
  416699:	bound  ecx,QWORD PTR ss:[edx+0x69017e78]
  4166a0:	mov    ah,0xad
  4166a2:	repz in al,dx
  4166a4:	mov    dl,0x84
  4166a6:	or     DWORD PTR [esi+0x13e37b4],0xc95faf50
  4166b0:	(bad)  
  4166b1:	pushf  
  4166b2:	ds rol bh,1
  4166b5:	stos   BYTE PTR es:[edi],al
  4166b6:	xor    esp,edi
  4166b8:	jge    0x4166d0
  4166ba:	std    
  4166bb:	mov    dl,0x51
  4166bd:	mov    DWORD PTR ds:0x16fef5b0,ecx
  4166c3:	ret    0xf38c
  4166c6:	pop    ebp
  4166c7:	sbb    ebx,esi
  4166c9:	adc    BYTE PTR [edx+ebp*8-0x6f],cl
  4166cd:	xlat   BYTE PTR ds:[ebx]
  4166ce:	add    eax,0xdf49b125
  4166d3:	or     al,0x2b
  4166d5:	push   0x5a
  4166d7:	leave  
  4166d8:	imul   ebp,DWORD PTR [edx-0x46],0xb7b65a78
  4166df:	ins    BYTE PTR es:[edi],dx
  4166e0:	fwait
  4166e1:	mov    bl,bl
  4166e3:	dec    BYTE PTR [ecx+0x29b38d73]
  4166e9:	repz mov ch,0x9d
  4166ec:	pop    ebx
  4166ed:	stos   DWORD PTR es:[edi],eax
  4166ee:	imul   edx,eax,0xf925582f
  4166f4:	(bad)  
  4166f5:	cmp    DWORD PTR [ebx+0x75],ebx
  4166f8:	pushf  
  4166f9:	ja     0x41671f
  4166fb:	sbb    DWORD PTR [eax-0x5a],ebx
  4166fe:	or     eax,0xcc276702
  416703:	mov    ebp,0x931937ad
  416708:	jge    0x4166a2
  41670a:	mov    BYTE PTR [ebx-0x70a6960e],dl
  416710:	sub    BYTE PTR [eax-0x68386f3c],bl
  416716:	sbb    al,0x62
  416718:	mov    ebp,0x9984ef8e
  41671d:	lds    eax,FWORD PTR [ebp-0x58c2cf46]
  416723:	repnz inc ebp
  416725:	inc    edx
  416726:	shl    BYTE PTR [eax],0x25
  416729:	fwait
  41672a:	jmp    0x4166fe
  41672c:	push   0x28f5724a
  416731:	sub    edx,DWORD PTR ds:0x4e055dd
  416737:	jmp    0x416750
  416739:	mov    ch,0x78
  41673b:	cld    
  41673c:	pop    eax
  41673d:	stos   DWORD PTR es:[edi],eax
  41673e:	or     eax,0x49d7417c
  416743:	cli    
  416744:	(bad)  
  416746:	ins    BYTE PTR es:[edi],dx
  416747:	ja     0x416742
  416749:	add    edi,eax
  41674b:	scas   al,BYTE PTR es:[edi]
  41674c:	mov    al,0x69
  41674e:	sub    DWORD PTR [esi-0x4e4b8da1],eax
  416754:	sbb    eax,0x2ff407b9
  416759:	aam    0xcb
  41675b:	jp     0x4167ac
  41675d:	jno    0x416796
  41675f:	mov    esp,0x4b433a16
  416764:	inc    esp
  416765:	pop    ebp
  416766:	push   es
  416767:	mov    BYTE PTR [ecx],dl
  416769:	push   cs
  41676a:	arpl   WORD PTR [eax+0x5007516d],cx
  416770:	cmp    BYTE PTR es:[esi+0x35],ch
  416774:	repnz cmc 
  416776:	dec    BYTE PTR [edx-0x39a318f0]
  41677c:	ror    DWORD PTR [edi-0xb],1
  41677f:	repz sbb al,0xe8
  416782:	push   edx
  416783:	mov    esi,0x3b24850c
  416788:	stc    
  416789:	push   cs
  41678a:	xor    BYTE PTR [eax-0x17910407],dh
  416790:	push   esi
  416791:	and    DWORD PTR [ebp+eax*2-0x2e],eax
  416795:	or     al,0xaf
  416797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416798:	test   al,0x4
  41679a:	inc    eax
  41679b:	out    dx,eax
  41679c:	mov    WORD PTR [edx-0x5b],?
  41679f:	dec    ebp
  4167a0:	lahf   
  4167a1:	(bad)  
  4167a2:	fisub  WORD PTR [ebx+ebx*2-0x4fa6414f]
  4167a9:	imul   esp,DWORD PTR [edi+eiz*1+0x59],0x67d7b016
  4167b1:	sti    
  4167b2:	pop    ds
  4167b3:	vxorps xmm4,xmm2,XMMWORD PTR [edi]
  4167b7:	mov    cl,0xc1
  4167b9:	js     0x4167cc
  4167bb:	cmp    dh,BYTE PTR [ebp+0xc]
  4167be:	sub    ebp,DWORD PTR [edi]
  4167c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c1:	ins    BYTE PTR es:[edi],dx
  4167c2:	sar    DWORD PTR [edi],1
  4167c4:	or     DWORD PTR [ebx-0x7a],esi
  4167c7:	mov    dh,0xcf
  4167c9:	and    DWORD PTR [eax+0x2b],ecx
  4167cc:	inc    esi
  4167cd:	std    
  4167ce:	test   al,0x8
  4167d0:	and    DWORD PTR [esi-0x3c17b434],esi
  4167d6:	js     0x416779
  4167d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d9:	add    bl,BYTE PTR [eax+0x30]
  4167dc:	lods   al,BYTE PTR ds:[esi]
  4167dd:	cld    
  4167de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167df:	xchg   edi,eax
  4167e0:	(bad)  [ebp-0x5e]
  4167e3:	ins    BYTE PTR es:[edi],dx
  4167e4:	mov    ah,0x24
  4167e6:	mov    ebx,esi
  4167e8:	pop    esp
  4167e9:	mov    ebp,DWORD PTR [eax-0xe]
  4167ec:	and    al,0xd5
  4167ee:	xchg   ebp,eax
  4167ef:	pop    eax
  4167f0:	es xchg esi,eax
  4167f2:	pop    esp
  4167f3:	ss retf 0x178a
  4167f7:	adc    ebx,esi
  4167f9:	and    edi,ebp
  4167fb:	mov    dh,0x62
  4167fd:	sub    edx,esi
  4167ff:	imul   edx,DWORD PTR [ebx+esi*2],0xffffffcc
  416803:	out    0xd3,al
  416805:	mov    ch,0x63
  416807:	sbb    eax,0xed786c1a
  41680c:	or     eax,0xbfa2afad
  416811:	popa   
  416812:	jns    0x416845
  416814:	xor    eax,0x8dd2a4d8
  416819:	sbb    dl,BYTE PTR [ecx-0x38]
  41681c:	fstp   DWORD PTR [esi+0x658452da]
  416822:	mov    ds:0x2b871f9a,al
  416827:	add    BYTE PTR [ebx+esi*1+0x72509ad5],dl
  41682e:	imul   esp,DWORD PTR [ebx-0x3c],0xa0554714
  416835:	daa    
  416836:	nop
  416837:	pop    edx
  416838:	push   esp
  416839:	dec    esp
  41683a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41683b:	pop    esi
  41683c:	shr    DWORD PTR [edi],1
  41683e:	push   ss
  41683f:	lea    ebp,[eax]
  416841:	adc    ebp,DWORD PTR [ebx-0x62]
  416844:	lahf   
  416845:	jne    0x41687c
  416847:	push   edx
  416848:	or     ebp,DWORD PTR [edi-0x228e84ef]
  41684e:	dec    esi
  41684f:	push   ebp
  416850:	mov    ds:0xee2007cb,eax
  416855:	cdq    
  416856:	mov    cl,0x24
  416858:	aas    
  416859:	cmp    al,0x5d
  41685b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41685c:	mov    edx,0xc419bce6
  416861:	in     eax,0xb8
  416863:	add    al,0x32
  416865:	inc    ecx
  416866:	mov    esp,0xe71ee848
  41686b:	enter  0x4245,0x13
  41686f:	mov    esp,es
  416871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416872:	call   0xecdab557
  416877:	xor    ebx,DWORD PTR [edi+0x1c]
  41687a:	repz adc DWORD PTR [ecx-0x6a],ebx
  41687e:	jmp    0xddb410ed
  416883:	repz sub bl,BYTE PTR [eax+0x79]
  416887:	inc    ebp
  416888:	(bad)  
  416889:	xor    BYTE PTR [eax+0xd],cl
  41688c:	push   eax
  41688d:	pop    esp
  41688e:	into   
  41688f:	popa   
  416890:	mov    cl,BYTE PTR ds:0xc3aee0ca
  416896:	rol    esi,cl
  416898:	mov    BYTE PTR [edx],al
  41689a:	add    BYTE PTR [ebp-0x1b7f8a62],dh
  4168a0:	mov    bh,0xf
  4168a2:	mov    BYTE PTR [esi-0x70],dl
  4168a5:	xor    ebp,0x679f6bc7
  4168ab:	(bad)  
  4168ac:	jge    0x416845
  4168ae:	cmp    DWORD PTR [ebp+0x26],0xffffff99
  4168b2:	fisttp QWORD PTR [bx+di]
  4168b5:	outs   dx,BYTE PTR ds:[esi]
  4168b6:	xor    al,0x22
  4168b8:	xchg   edx,eax
  4168b9:	sbb    esi,eax
  4168bb:	adc    dl,cl
  4168bd:	or     al,0xc3
  4168bf:	push   ebx
  4168c0:	imul   eax,DWORD PTR [eax+0x1b1e42c4],0xcb1756f0
  4168ca:	test   al,0x17
  4168cc:	and    dl,BYTE PTR [esi]
  4168ce:	ja     0x4168b6
  4168d0:	in     eax,0x25
  4168d2:	xchg   edi,eax
  4168d3:	rol    DWORD PTR [edi],1
  4168d5:	jg     0x416941
  4168d7:	pop    ds
  4168d8:	retf   0x26b1
  4168db:	(bad)  
  4168dc:	lock inc ch
  4168df:	and    edx,DWORD PTR [eax-0x64047957]
  4168e5:	push   0xffffffe9
  4168e7:	mov    DWORD PTR [edx+0x7606703b],eax
  4168ed:	lds    esi,FWORD PTR [ebp+0x5f]
  4168f0:	dec    esp
  4168f1:	xchg   edi,eax
  4168f2:	mov    eax,ebx
  4168f4:	cmp    al,0x8b
  4168f6:	xchg   edi,eax
  4168f7:	call   0x2d13:0xab7ba6d9
  4168fe:	popf   
  4168ff:	in     eax,dx
  416900:	inc    esp
  416901:	shl    ch,1
  416903:	jae    0x4168ce
  416905:	push   edi
  416906:	out    dx,eax
  416907:	push   0xffffffa8
  416909:	pop    ebx
  41690a:	sub    bh,cl
  41690c:	sub    eax,0x65c83b36
  416911:	xchg   ecx,eax
  416912:	pop    ecx
  416913:	xor    eax,0xdefaa75a
  416918:	(bad)  
  416919:	pop    esi
  41691a:	push   eax
  41691b:	(bad)  [esi]
  41691d:	or     al,0xe0
  41691f:	add    DWORD PTR [esi-0xbf74e71],esp
  416925:	pop    esi
  416926:	ja     0x41694e
  416928:	inc    edx
  416929:	enter  0xe845,0x35
  41692d:	push   eax
  41692e:	hlt    
  41692f:	add    eax,0xb0d58430
  416934:	repz (bad) 
  416936:	ror    BYTE PTR [edi],1
  416938:	dec    DWORD PTR [ebx]
  41693a:	cld    
  41693b:	jmp    0x4169a6
  41693d:	mov    bh,0x37
  41693f:	ds adc eax,0xda6ecb60
  416945:	add    dh,BYTE PTR [ecx-0x2bc9fd7a]
  41694b:	mov    ah,0x1
  41694d:	cdq    
  41694e:	jg     0x41693f
  416950:	push   ss
  416951:	test   BYTE PTR [edx-0x20],al
  416954:	iret   
  416955:	cmp    al,0x6a
  416957:	adc    eax,0xa074a815
  41695c:	in     al,0x53
  41695e:	xor    DWORD PTR [esi+esi*1-0x1],ebp
  416962:	imul   ecx,DWORD PTR [ecx-0x49],0x7282c51a
  416969:	test   BYTE PTR [edx],0xc1
  41696c:	mov    eax,ds:0x7e5dc813
  416971:	mov    dh,0x5
  416973:	mov    ecx,0x9d5ccf3e
  416978:	jle    0x416909
  41697a:	jl     0x416935
  41697c:	stos   DWORD PTR es:[edi],eax
  41697d:	cli    
  41697e:	sub    eax,0xc22976ce
  416983:	jge    0x416931
  416985:	cli    
  416986:	add    al,BYTE PTR [eax+0x19]
  416989:	or     dh,BYTE PTR [ecx+eax*2]
  41698c:	push   0xdca6d32f
  416991:	push   eax
  416992:	call   0x8e721b13
  416997:	pop    esp
  416998:	jmp    0x41699d
  41699a:	xchg   ebx,eax
  41699b:	xchg   edi,eax
  41699c:	test   al,0x47
  41699e:	xlat   BYTE PTR ds:[ebx]
  41699f:	pushf  
  4169a0:	mov    ds:0x269e48aa,eax
  4169a5:	ins    DWORD PTR es:[edi],dx
  4169a6:	bound  edx,QWORD PTR [edx+0x2a]
  4169a9:	sbb    ebp,edi
  4169ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ac:	jg     0x41698e
  4169ae:	cmp    al,0x21
  4169b0:	dec    dx
  4169b2:	scas   al,BYTE PTR es:[edi]
  4169b3:	test   BYTE PTR [ebx+0x5b2fcffe],bh
  4169b9:	std    
  4169ba:	mov    eax,0x453ab964
  4169bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c0:	push   0xffffffc7
  4169c2:	push   ss
  4169c3:	xlat   BYTE PTR ds:[ebx]
  4169c4:	loope  0x416986
  4169c6:	sti    
  4169c7:	addr16 leave 
  4169c9:	sbb    al,0xba
  4169cb:	pop    ecx
  4169cc:	packuswb xmm1,XMMWORD PTR [ebx-0x72398d35]
  4169d4:	xchg   ebx,eax
  4169d5:	fild   WORD PTR [eax+0x732a14a7]
  4169db:	sub    eax,0x4740a9e1
  4169e0:	add    DWORD PTR [eax],0x54
  4169e3:	lods   eax,DWORD PTR ds:[esi]
  4169e4:	les    ebx,FWORD PTR [ecx-0x5e069f37]
  4169ea:	sub    ebp,edx
  4169ec:	mov    ebp,0xb4195785
  4169f1:	and    BYTE PTR [ecx+0x3c65f1c8],0xcc
  4169f8:	jl     0x416a44
  4169fa:	xchg   esi,eax
  4169fb:	fbld   TBYTE PTR [ebx-0x64831e8e]
  416a01:	stc    
  416a02:	daa    
  416a03:	push   ebx
  416a04:	lods   eax,DWORD PTR ds:[esi]
  416a05:	lods   eax,DWORD PTR ds:[esi]
  416a06:	mov    bl,0xf9
  416a08:	daa    
  416a09:	shl    edx,1
  416a0b:	test   DWORD PTR [edx],esi
  416a0d:	stos   BYTE PTR es:[edi],al
  416a0e:	sub    DWORD PTR [ebx+ebx*4-0x76b17162],0xe7b7bd9b
  416a19:	cdq    
  416a1a:	mov    edi,DWORD PTR [eax-0x35]
  416a1d:	xor    ecx,DWORD PTR [eax]
  416a1f:	lea    esp,[ecx+0x70553cc8]
  416a25:	pop    ecx
  416a26:	jmp    0x416a0a
  416a28:	xor    eax,0x2b451f8e
  416a2d:	cdq    
  416a2e:	jbe    0x4169b0
  416a30:	mov    esp,ebp
  416a32:	push   ebx
  416a33:	(bad)  
  416a34:	and    dh,dh
  416a36:	or     DWORD PTR [edx+0x7f7d2453],ebx
  416a3c:	cs jg  0x416a56
  416a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a40:	or     esp,esi
  416a42:	test   DWORD PTR [esi+0x3f87443e],ecx
  416a48:	push   cs
  416a49:	mov    ds:0x56ce5bcd,al
  416a4e:	ds int3 
  416a50:	int    0x9d
  416a52:	cmp    DWORD PTR [ebp-0xb],eax
  416a55:	xchg   esp,eax
  416a56:	xchg   esi,eax
  416a57:	fadd   DWORD PTR [esi]
  416a59:	dec    eax
  416a5a:	sub    DWORD PTR [eax+0x3c4cb694],0x1dbadfbd
  416a64:	outs   dx,BYTE PTR ds:[esi]
  416a65:	mov    esi,esi
  416a67:	mov    bh,0x4f
  416a69:	ins    DWORD PTR es:[edi],dx
  416a6a:	or     eax,0xe7e950ca
  416a70:	push   ds
  416a71:	push   ebx
  416a72:	jo     0x416a1f
  416a74:	add    cl,BYTE PTR [edi-0x57]
  416a77:	jge    0x416a64
  416a79:	arpl   WORD PTR [ecx],sp
  416a7b:	mov    ds:0x13336cf3,al
  416a80:	pop    ecx
  416a81:	mov    eax,DWORD PTR [esi+0x27373112]
  416a87:	mov    edx,0x5964f80a
  416a8c:	xor    bl,al
  416a8e:	jl     0x416ae2
  416a90:	ret    0xb425
  416a93:	bound  ecx,QWORD PTR [esi]
  416a95:	mov    esp,0x87c4cfeb
  416a9a:	out    dx,al
  416a9b:	dec    edi
  416a9c:	push   ebx
  416a9d:	sbb    ebp,ebx
  416a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa0:	pushf  
  416aa1:	leave  
  416aa2:	rcr    DWORD PTR [ebx-0x6f1401b3],1
  416aa8:	jp     0x416afb
  416aaa:	daa    
  416aab:	lods   al,BYTE PTR ds:[esi]
  416aac:	jb     0x416a4d
  416aae:	sar    DWORD PTR [esi-0x1b],0x2c
  416ab2:	out    0x1,eax
  416ab4:	push   eax
  416ab5:	pusha  
  416ab6:	lock int3 
  416ab8:	cli    
  416ab9:	jnp    0x416a92
  416abb:	iret   
  416abc:	jl     0x416b29
  416abe:	sub    eax,0x79867f24
  416ac3:	in     eax,0x41
  416ac5:	fcomi  st,st(2)
  416ac7:	fidivr WORD PTR [ecx]
  416ac9:	mov    BYTE PTR [eax+0x4e],bl
  416acc:	ins    DWORD PTR es:[edi],dx
  416acd:	sbb    esi,esp
  416acf:	(bad)  
  416ad0:	sub    ah,BYTE PTR [edi+0x2f]
  416ad3:	sbb    al,0xc1
  416ad5:	loop   0x416a94
  416ad7:	mov    dh,0x60
  416ad9:	ja     0x416b29
  416adb:	(bad)  
  416adc:	outs   dx,DWORD PTR ds:[esi]
  416add:	mov    ecx,0x28cb34ac
  416ae2:	or     DWORD PTR [esi+0x194cc00d],0xc78e1167
  416aec:	fucomip st,st(1)
  416aee:	push   cs
  416aef:	(bad)  
  416af0:	shl    BYTE PTR fs:[edx],cl
  416af3:	xlat   BYTE PTR ds:[ebx]
  416af4:	jbe    0x416aac
  416af6:	ins    DWORD PTR es:[edi],dx
  416af7:	iret   
  416af8:	mov    esi,DWORD PTR [esi+0x59]
  416afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416afc:	xchg   esi,eax
  416afd:	ficom  DWORD PTR [ebp-0x36cfcfc8]
  416b03:	les    ebx,FWORD PTR [ecx+ecx*1+0xa]
  416b07:	stos   DWORD PTR es:[edi],eax
  416b08:	mov    ebx,0xd1f47d32
  416b0d:	and    al,0xec
  416b0f:	add    al,0xda
  416b11:	loope  0x416b89
  416b13:	fwait
  416b14:	dec    ebp
  416b15:	fwait
  416b16:	jmp    0x416ab5
  416b18:	xor    eax,0xe2b048c3
  416b1d:	xchg   edi,edx
  416b1f:	sbb    eax,0x2cdfbe71
  416b24:	mov    eax,ds:0xb4643c05
  416b29:	cld    
  416b2a:	out    dx,eax
  416b2b:	xchg   ebx,eax
  416b2c:	pop    ss
  416b2d:	lds    eax,FWORD PTR [ebp+0x2a]
  416b30:	test   al,0xa6
  416b32:	les    esi,FWORD PTR [edx]
  416b34:	ins    DWORD PTR es:[edi],dx
  416b35:	xor    DWORD PTR [ebx+eax*2+0x7de9dcb7],edx
  416b3c:	cmp    al,0x91
  416b3e:	ss retf 
  416b40:	das    
  416b41:	push   ebp
  416b42:	jnp    0x416b6d
  416b44:	in     eax,dx
  416b45:	retf   
  416b46:	fld    TBYTE PTR [edx+0x1847573c]
  416b4c:	adc    al,0xb9
  416b4e:	push   es
  416b4f:	(bad)  
  416b50:	add    bl,cl
  416b52:	jg     0x416ae3
  416b54:	sub    bl,BYTE PTR [edi]
  416b56:	popa   
  416b57:	push   es
  416b58:	mov    dh,0x3b
  416b5a:	cmp    BYTE PTR [ebp-0x65],0x7c
  416b5e:	lds    edi,FWORD PTR [edx]
  416b60:	out    dx,al
  416b61:	xor    eax,0x5c981cbd
  416b66:	mov    es,edx
  416b68:	inc    ebx
  416b69:	mov    ds:0xc621719b,al
  416b6e:	dec    ebx
  416b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b70:	xchg   ecx,eax
  416b71:	jp     0x416bbe
  416b73:	jo     0x416b6e
  416b75:	jmp    0x416bc6
  416b77:	adc    eax,0x5f16b095
  416b7c:	sbb    DWORD PTR [esi+0x73],ebp
  416b7f:	sbb    eax,DWORD PTR [esi+0x4c7bf088]
  416b85:	push   ebp
  416b86:	das    
  416b87:	fcomi  st,st(1)
  416b89:	nop
  416b8a:	add    al,cl
  416b8c:	mov    bh,0x68
  416b8e:	adc    edi,ebp
  416b90:	xchg   esp,eax
  416b91:	int3   
  416b92:	pop    edx
  416b93:	iret   
  416b94:	call   FWORD PTR [eax+ebp*4+0x3c112488]
  416b9b:	ret    
  416b9c:	ret    
  416b9d:	cmp    BYTE PTR [esi+edi*1+0x37],ch
  416ba1:	xor    ecx,DWORD PTR [ebp-0x2f]
  416ba4:	or     DWORD PTR [edx+0x2d],ecx
  416ba7:	sbb    DWORD PTR [ebp-0x29],edi
  416baa:	xchg   edi,eax
  416bab:	fs idiv cl
  416bae:	and    ebx,DWORD PTR [eax-0x55f8863e]
  416bb4:	xor    al,0x88
  416bb6:	xor    edx,DWORD PTR ds:0x3d4d161e
  416bbc:	fs retf 
  416bbe:	cs jge 0x416c1b
  416bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bc2:	or     BYTE PTR [edi-0x18acb3cf],0x30
  416bc9:	sub    edx,DWORD PTR [esi+0x4c]
  416bcc:	mov    cl,0x83
  416bce:	mov    esp,0x219e66dd
  416bd3:	pop    eax
  416bd4:	arpl   WORD PTR es:[eax-0x70],bp
  416bd8:	jno    0x416b7c
  416bda:	clc    
  416bdb:	pop    edi
  416bdc:	dec    edi
  416bdd:	pop    ebp
  416bde:	mov    cl,0xd2
  416be0:	shr    DWORD PTR [edx+edx*8+0xd],cl
  416be4:	stos   DWORD PTR es:[edi],eax
  416be5:	sub    eax,0x28d30742
  416bea:	frstor ss:[ebx]
  416bed:	ror    ecx,cl
  416bef:	aas    
  416bf0:	xchg   BYTE PTR [edi-0x74879b51],dh
  416bf6:	int    0xff
  416bf8:	shl    DWORD PTR [esp+edi*4],cl
  416bfb:	mov    al,0x42
  416bfd:	mov    edx,esi
  416bff:	outs   dx,BYTE PTR ds:[esi]
  416c00:	in     al,dx
  416c01:	sbb    eax,0x14ae8bfd
  416c06:	xchg   DWORD PTR [edi+0x679ccf91],edi
  416c0c:	xchg   esi,eax
  416c0d:	inc    ebp
  416c0e:	stos   BYTE PTR es:[edi],al
  416c0f:	mov    edx,0x61f629f1
  416c14:	mov    ebx,0x874dafa8
  416c19:	adc    DWORD PTR [ebx+0x1c],esp
  416c1c:	mov    dh,0x19
  416c1e:	xor    DWORD PTR [eax],ebx
  416c20:	arpl   WORD PTR [ebp-0x3c543511],dx
  416c26:	pop    es
  416c27:	pop    ss
  416c28:	(bad)  
  416c29:	dec    edi
  416c2a:	and    esi,DWORD PTR [eax]
  416c2c:	push   edi
  416c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c2e:	dec    edx
  416c2f:	mov    al,0x15
  416c31:	lahf   
  416c32:	ins    DWORD PTR es:[edi],dx
  416c33:	adc    eax,DWORD PTR [edx+esi*1-0x782f0059]
  416c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c3b:	mov    esi,0xac00b802
  416c40:	pop    esi
  416c41:	xchg   edx,eax
  416c42:	adc    BYTE PTR [edx-0x4006373a],dh
  416c48:	add    eax,0xc34bb5d4
  416c4d:	jbe    0x416bf2
  416c4f:	xchg   ebx,eax
  416c50:	cdq    
  416c51:	lock push edi
  416c53:	nop
  416c54:	sub    al,0x1e
  416c56:	hlt    
  416c57:	in     al,dx
  416c58:	rcr    BYTE PTR [esi],cl
  416c5a:	iret   
  416c5b:	test   BYTE PTR ds:0xb01dbfa8,cl
  416c61:	les    edx,FWORD PTR [esi-0x4d]
  416c64:	repz xchg ebp,eax
  416c66:	ins    BYTE PTR es:[edi],dx
  416c67:	(bad)  
  416c68:	bound  ebp,QWORD PTR [ecx+0x18]
  416c6b:	push   edi
  416c6d:	or     eax,0x790297dc
  416c72:	or     esp,DWORD PTR [ebp*1-0x1e311488]
  416c79:	scas   al,BYTE PTR es:[edi]
  416c7a:	mov    esp,0x3481d84a
  416c7f:	cdq    
  416c80:	repnz mov ds:0x4a9f5f96,eax
  416c86:	or     DWORD PTR [ebx-0x6a],0x82489d3c
  416c8d:	mov    eax,ds:0x9824ce4b
  416c92:	xor    eax,ebp
  416c94:	jmp    0x896f7cb
  416c99:	mov    ebx,DWORD PTR [ebp-0x8]
  416c9c:	xor    edx,eax
  416c9e:	xor    ebx,eax
  416ca0:	sub    edx,ebx
  416ca2:	sub    edx,esi
  416ca4:	xor    edx,eax
  416ca6:	mov    DWORD PTR [ebp+0x8],edx
  416ca9:	mov    edx,DWORD PTR [ebp+0x8]
  416cac:	mov    ebx,DWORD PTR [ebp-0x58]
  416caf:	add    edx,0x5708fa
  416cb5:	imul   edx,ebx
  416cb8:	mov    DWORD PTR [ebp-0x58],edx
  416cbb:	mov    edx,DWORD PTR [ebp+0x8]
  416cbe:	mov    ebx,DWORD PTR [ebp-0x54]
  416cc1:	add    edx,0x64f89c
  416cc7:	or     edx,ebx
  416cc9:	mov    DWORD PTR [ebp-0x54],edx
  416ccc:	mov    edx,DWORD PTR [ebp+0x8]
  416ccf:	mov    ebx,DWORD PTR [ebp-0x50]
  416cd2:	add    edx,ecx
  416cd4:	xor    edx,ebx
  416cd6:	mov    DWORD PTR [ebp-0x50],edx
  416cd9:	mov    edx,DWORD PTR [ebp+0x8]
  416cdc:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cdf:	add    edx,edi
  416ce1:	jmp    0x419066
  416ce6:	fidivr WORD PTR [ecx-0x44]
  416ce9:	call   0x43d01081
  416cee:	xchg   ebx,eax
  416cef:	jmp    0x55b3:0x2b7b82c3
  416cf6:	cs inc esp
  416cf8:	jns    0x416d74
  416cfa:	adc    bl,BYTE PTR [edi+0x7a]
  416cfd:	jp     0x416cba
  416cff:	cdq    
  416d00:	push   0x2
  416d02:	mov    cl,0x44
  416d04:	adc    ebp,eax
  416d06:	mov    bl,0x31
  416d08:	repnz ins DWORD PTR es:[edi],dx
  416d0a:	ss (bad) 
  416d0c:	mov    eax,ds:0xf8e72527
  416d11:	repnz adc esi,0xd6b46dc4
  416d18:	jp     0x416cba
  416d1a:	aad    0x39
  416d1c:	pop    es
  416d1d:	icebp  
  416d1e:	out    0x5e,al
  416d20:	fucomp st(5)
  416d22:	jmp    0x731bb578
  416d27:	and    al,0xa7
  416d29:	xchg   ebx,eax
  416d2a:	push   ecx
  416d2b:	mov    al,0x75
  416d2d:	mov    edx,0x811fa76c
  416d32:	jge    0x416d9c
  416d34:	xor    BYTE PTR [ecx+0x52],cl
  416d37:	fiadd  DWORD PTR [esi-0x2d2dbf8]
  416d3d:	pop    edi
  416d3e:	pop    ebp
  416d3f:	ja     0x416cc7
  416d41:	gs sbb ch,0x6d
  416d45:	loop   0x416d6a
  416d47:	ret    0xb56e
  416d4a:	or     BYTE PTR [ebp-0x18add951],ah
  416d50:	(bad)  
  416d52:	(bad)  
  416d53:	shl    DWORD PTR [edi+0x4c],0x76
  416d57:	and    dh,bh
  416d59:	push   ds
  416d5a:	adc    eax,0x83151e07
  416d5f:	out    dx,eax
  416d60:	jbe    0x416da2
  416d62:	stc    
  416d63:	and    dh,BYTE PTR [esi+0x50a7ab41]
  416d69:	dec    esp
  416d6a:	jge    0x416dc3
  416d6c:	xlat   BYTE PTR ds:[ebx]
  416d6d:	sbb    bl,0xf7
  416d70:	mov    cl,0x57
  416d72:	in     al,dx
  416d73:	cmp    BYTE PTR [esi-0x58],cl
  416d76:	adc    dl,BYTE PTR [ecx+0x4e]
  416d79:	out    dx,eax
  416d7a:	jecxz  0x416da0
  416d7c:	cmp    BYTE PTR [ecx],ah
  416d7e:	jbe    0x416dff
  416d80:	pop    ebp
  416d81:	xchg   esp,eax
  416d82:	and    al,0xad
  416d84:	mov    WORD PTR [ebp-0x1d],es
  416d87:	jae    0x416d38
  416d89:	pop    eax
  416d8a:	outs   dx,DWORD PTR ds:[esi]
  416d8b:	jae    0x416d78
  416d8d:	cld    
  416d8e:	pop    ebx
  416d8f:	or     al,0x64
  416d91:	xor    BYTE PTR [ecx-0x748d19a2],ah
  416d97:	fs call 0x4285136e
  416d9d:	push   es
  416d9e:	test   DWORD PTR [ebx-0x60],eax
  416da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416da2:	aam    0xd3
  416da4:	leave  
  416da5:	idiv   DWORD PTR [ebx-0x5a]
  416da8:	ror    ebx,0x2c
  416dab:	cdq    
  416dac:	sbb    al,0x3a
  416dae:	popa   
  416daf:	mov    bh,0x5e
  416db1:	push   es
  416db2:	inc    edx
  416db3:	cmp    DWORD PTR [esi],esp
  416db5:	repnz inc ebx
  416db7:	sbb    BYTE PTR [esi+0x43],0xed
  416dbb:	(bad)  
  416dbc:	imul   ebx,ecx,0xffffffe9
  416dbf:	inc    ecx
  416dc0:	icebp  
  416dc1:	sbb    bl,BYTE PTR ds:0xb573d833
  416dc7:	cs in  eax,dx
  416dc9:	jbe    0x416da7
  416dcb:	sub    ch,al
  416dcd:	in     al,dx
  416dce:	shr    ebx,1
  416dd0:	inc    ebp
  416dd1:	and    al,BYTE PTR [ebp+0x55f37271]
  416dd7:	inc    ebx
  416dd8:	mov    edx,ss
  416dda:	pop    eax
  416ddb:	push   edi
  416ddc:	lock and al,0x8a
  416ddf:	xor    bh,bh
  416de1:	add    cl,BYTE PTR [eax+0x5c1a1a93]
  416de7:	sub    cl,BYTE PTR [eax-0x6793641a]
  416ded:	xchg   ecx,eax
  416dee:	mov    edx,0xa5a37369
  416df3:	scas   al,BYTE PTR es:[edi]
  416df4:	(bad)  
  416df5:	icebp  
  416df6:	jmp    0x416e4f
  416df8:	sbb    ah,ch
  416dfa:	xchg   ebx,esi
  416dfc:	jmp    0xfa537de9
  416e01:	arpl   WORD PTR [edx-0x7daa051e],bx
  416e07:	mov    bl,0x39
  416e09:	cmp    eax,0xac38504
  416e0e:	repz fld QWORD PTR [ecx+0x60627c00]
  416e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e16:	inc    ecx
  416e17:	in     eax,dx
  416e18:	mov    esi,0x47ec152c
  416e1d:	or     BYTE PTR [edx],0xc
  416e20:	cmp    edi,ecx
  416e22:	dec    esp
  416e23:	mov    esi,0x2a480121
  416e28:	mov    ecx,0x20d2cb8d
  416e2d:	or     edi,DWORD PTR [eax+0x760a5ebe]
  416e33:	push   cs
  416e34:	enter  0x753f,0xdf
  416e38:	aas    
  416e39:	ins    DWORD PTR es:[edi],dx
  416e3a:	cmp    bl,BYTE PTR [ecx+ebx*8-0x2]
  416e3e:	adc    ecx,DWORD PTR [ecx+0x5c543140]
  416e44:	xor    al,0x27
  416e46:	sbb    DWORD PTR [eax],0x7f94e46c
  416e4c:	in     al,0xb2
  416e4e:	or     DWORD PTR [esi+0x444ef131],esp
  416e54:	cmp    eax,0xaab654ff
  416e59:	xor    esi,DWORD PTR [eax+0x9]
  416e5c:	imul   eax,DWORD PTR [esi+0x62532920],0x4f
  416e63:	sbb    BYTE PTR [esi-0x5f],bh
  416e66:	mov    eax,ds:0x2693a404
  416e6b:	lahf   
  416e6c:	jbe    0x416e8c
  416e6e:	mov    dl,0x14
  416e70:	mov    ebp,0xbbf77aba
  416e75:	or     ebx,ebx
  416e77:	push   edx
  416e78:	mov    ebp,0x5ed7aba5
  416e7d:	xor    al,0x44
  416e7f:	adc    al,0xc0
  416e81:	(bad)  
  416e82:	mov    ds:0x4a50629e,eax
  416e87:	adc    DWORD PTR ds:0x332d018d,esi
  416e8d:	cmp    ch,al
  416e8f:	stc    
  416e90:	sbb    dh,BYTE PTR [edx+0x1a]
  416e93:	ins    BYTE PTR es:[edi],dx
  416e94:	adc    BYTE PTR [eax-0x52],dh
  416e97:	(bad)  
  416e98:	mov    edx,0xa8357a1d
  416e9d:	loope  0x416ebf
  416e9f:	pop    esi
  416ea0:	fmul   DWORD PTR [edi+0x4d035c2]
  416ea6:	pop    edx
  416ea7:	repnz (bad)
  416eaa:	and    DWORD PTR [ebx+0x1ca06c24],edi
  416eb0:	jbe    0x416e32
  416eb2:	push   esi
  416eb3:	lds    eax,FWORD PTR [ecx]
  416eb5:	push   edi
  416eb6:	test   al,0x22
  416eb8:	cmp    DWORD PTR [ecx+0x1d],0x5b9111c
  416ebf:	in     al,0x17
  416ec1:	mov    bl,0x3
  416ec3:	loop   0x416f03
  416ec5:	fisubr DWORD PTR [ebp+0x3c]
  416ec8:	xor    al,0xee
  416eca:	adc    al,0x71
  416ecc:	push   es
  416ecd:	inc    ecx
  416ece:	or     eax,0x4f0ca360
  416ed3:	in     al,dx
  416ed4:	(bad)  
  416ed5:	stos   BYTE PTR es:[edi],al
  416ed6:	mov    ebx,0x835c22e3
  416edb:	and    edx,DWORD PTR [ebp+0x17]
  416ede:	sub    al,0xa8
  416ee0:	xor    al,0x6e
  416ee2:	xchg   edx,eax
  416ee3:	jle    0x416e8a
  416ee5:	call   0x6f18:0x7118c3f7
  416eec:	pop    ds
  416eed:	fld    DWORD PTR [esi-0x5c95944e]
  416ef3:	fiadd  WORD PTR [ebp*4-0x27a1d380]
  416efa:	shl    DWORD PTR [edx+0x54],0xfc
  416efe:	mov    DWORD PTR [esi+0x2],edi
  416f01:	stc    
  416f02:	call   0xde04:0x60a2fb3c
  416f09:	test   eax,0x71cbe1fa
  416f0e:	mov    ecx,0x80c3cd60
  416f13:	cld    
  416f14:	xchg   edx,eax
  416f15:	sub    edi,DWORD PTR [edi]
  416f17:	adc    DWORD PTR [edx+eiz*1],ebx
  416f1a:	jo     0x416f5b
  416f1c:	dec    esi
  416f1d:	sbb    DWORD PTR [edx+eiz*1-0x58],0xb956a6ee
  416f25:	(bad)  
  416f26:	ficom  DWORD PTR [edx+eiz*2+0x9]
  416f2a:	imul   edi,DWORD PTR [ebx+0x1b7b487c],0xfd43162d
  416f34:	push   ecx
  416f35:	add    edi,DWORD PTR [edx-0x56da0f21]
  416f3b:	sub    al,0xe0
  416f3d:	jne    0x416f11
  416f3f:	xchg   esi,eax
  416f40:	ret    0x4b06
  416f43:	xchg   esi,eax
  416f44:	lock mov ds:0xc00438e1,eax
  416f4a:	(bad)  
  416f4b:	mov    cl,0x7
  416f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f4e:	je     0x416f51
  416f50:	fwait
  416f51:	leave  
  416f52:	rcl    al,0xd2
  416f55:	das    
  416f56:	ss enter 0xf3d4,0x8e
  416f5b:	call   0x8f3fd170
  416f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f61:	push   ebx
  416f62:	mov    esi,0x477678d5
  416f67:	adc    al,0xa7
  416f69:	mov    ebp,0xc2a772ee
  416f6e:	mov    ds:0x32cc3804,eax
  416f73:	jmp    0xbfb75e76
  416f78:	push   0xe17fcbdc
  416f7d:	fadd   DWORD PTR [esi+0x10]
  416f80:	(bad)  
  416f81:	xor    eax,0xf5bb148f
  416f86:	mov    cl,0x1
  416f88:	pushf  
  416f89:	out    0xbd,eax
  416f8b:	mov    cl,0x1e
  416f8d:	lock mov bh,0x9d
  416f90:	fcmovnu st,st(0)
  416f92:	(bad)  
  416f93:	sbb    DWORD PTR [edi],esp
  416f95:	dec    ebx
  416f96:	outs   dx,BYTE PTR ds:[esi]
  416f97:	cmc    
  416f98:	int    0x92
  416f9a:	add    edi,DWORD PTR [ebx+0x16]
  416f9d:	cmp    al,0x18
  416f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fa0:	mov    ecx,0x46da63b8
  416fa5:	push   edx
  416fa6:	or     al,BYTE PTR [edx]
  416fa8:	push   es
  416fa9:	nop
  416faa:	sub    DWORD PTR [ebx+esi*2-0x3ed6bc6d],0x1e16982d
  416fb5:	push   esp
  416fb6:	xor    dh,BYTE PTR [edx+0x68254ac5]
  416fbc:	or     esp,edi
  416fbe:	stos   BYTE PTR es:[edi],al
  416fbf:	jne    0x417005
  416fc1:	in     al,dx
  416fc2:	lahf   
  416fc3:	and    DWORD PTR [esi],0x5adbb087
  416fc9:	out    0xbf,eax
  416fcb:	inc    ecx
  416fcc:	adc    DWORD PTR ds:0x92b793d9,eax
  416fd2:	add    al,0x85
  416fd4:	inc    eax
  416fd5:	repnz repnz jmp 0xa376:0xbbc8ddc2
  416fde:	and    eax,0xaaa7193e
  416fe3:	cmp    al,0x7d
  416fe5:	scas   eax,DWORD PTR es:[edi]
  416fe6:	adc    DWORD PTR [esi],edx
  416fe8:	or     cl,BYTE PTR [edx+0x1f6bca0]
  416fee:	mov    ebp,0x63751768
  416ff3:	loopne 0x417058
  416ff5:	add    BYTE PTR [ebp-0xe],ah
  416ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ff9:	in     eax,dx
  416ffa:	in     al,dx
  416ffb:	pop    eax
  416ffc:	add    DWORD PTR [eax+0x3b8cc830],edi
  417002:	mov    bl,al
  417004:	push   esi
  417005:	repnz icebp 
  417007:	jb     0x417053
  417009:	push   0x4a9d863e
  41700e:	repnz pop ebp
  417010:	dec    eax
  417011:	ror    BYTE PTR [edi-0x2f],cl
  417014:	scas   eax,DWORD PTR es:[edi]
  417015:	xor    cl,BYTE PTR [esi]
  417017:	fs jmp 0xa7c7a767
  41701d:	jmp    0x417053
  41701f:	mov    bl,0x90
  417021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417022:	outs   dx,BYTE PTR ds:[esi]
  417023:	mov    edi,edx
  417025:	or     BYTE PTR [ecx+0x4b],dl
  417028:	mov    bl,0x2a
  41702a:	stos   DWORD PTR es:[edi],eax
  41702b:	jno    0x417092
  41702d:	sub    esi,edx
  41702f:	pop    esi
  417030:	cmp    cl,bl
  417032:	ja     0x416fdb
  417034:	xchg   DWORD PTR [edi],ecx
  417036:	mov    ch,0x65
  417038:	xchg   esp,eax
  417039:	jnp    0x417058
  41703b:	cwde   
  41703c:	sar    BYTE PTR [eax-0x42],cl
  41703f:	outs   dx,DWORD PTR ds:[esi]
  417040:	ret    0x4417
  417043:	retf   
  417044:	and    BYTE PTR [edi+0x31],cl
  417047:	adc    DWORD PTR [eax-0x27],eax
  41704a:	jb     0x417033
  41704c:	mov    al,0xf6
  41704e:	push   ebp
  41704f:	hlt    
  417050:	lods   al,BYTE PTR ds:[esi]
  417051:	outs   dx,BYTE PTR ds:[esi]
  417052:	pop    esi
  417053:	mov    eax,ds:0xcc4f1329
  417058:	dec    esp
  417059:	aam    0xc4
  41705b:	lahf   
  41705c:	or     bl,BYTE PTR [ecx-0x24]
  41705f:	xchg   bl,dl
  417061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417062:	and    al,0xdf
  417064:	inc    BYTE PTR [edi+0x7]
  417067:	mov    ebx,0xe544994a
  41706c:	sub    BYTE PTR [ebp+0xd97ed68],dl
  417072:	stos   BYTE PTR es:[edi],al
  417073:	leave  
  417074:	rcl    DWORD PTR [eax-0x4dcce68],cl
  41707a:	cmp    al,0x77
  41707c:	mov    ecx,0x4601fb23
  417081:	lahf   
  417082:	mov    ebp,0x2d96ddfc
  417087:	imul   esi,ebx,0xffffffd1
  41708a:	in     eax,0x89
  41708c:	ss pop edx
  41708e:	jp     0x4170d0
  417090:	dec    ebx
  417091:	arpl   dx,ax
  417093:	jmp    0x417033
  417095:	adc    ch,BYTE PTR [esi-0x7a]
  417098:	xchg   esp,eax
  417099:	pop    ecx
  41709a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41709b:	adc    bl,BYTE PTR [edx+0x4d]
  41709e:	inc    ebx
  41709f:	jge    0x4170d9
  4170a1:	lahf   
  4170a2:	pop    ebx
  4170a3:	push   0xe5a71b73
  4170a8:	pop    ebp
  4170a9:	imul   eax,DWORD PTR [esi+0x3c],0x6b892fd4
  4170b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170b1:	retf   0xacb5
  4170b4:	iret   
  4170b5:	in     eax,0xfb
  4170b7:	dec    eax
  4170b8:	in     al,0xc6
  4170ba:	(bad)  
  4170bb:	jl     0x417079
  4170bd:	adc    BYTE PTR [ecx-0x63c3ea48],0x26
  4170c4:	shr    edi,1
  4170c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170c7:	jnp    0x4170ef
  4170c9:	sub    bl,bl
  4170cb:	lahf   
  4170cc:	add    al,0x6
  4170ce:	pop    ss
  4170cf:	cdq    
  4170d0:	out    dx,al
  4170d1:	pop    edx
  4170d2:	fistp  WORD PTR [eax+0x8]
  4170d5:	push   edx
  4170d6:	int    0x9e
  4170d8:	add    BYTE PTR [eax-0x58318648],bh
  4170de:	push   eax
  4170df:	pop    esi
  4170e0:	pop    esp
  4170e1:	xor    eax,0x51a72b45
  4170e6:	stc    
  4170e7:	leave  
  4170e8:	repnz loope 0x41711d
  4170eb:	or     eax,0x7bedb9a2
  4170f0:	fiadd  DWORD PTR [esi+0x69e392ec]
  4170f6:	push   cs
  4170f7:	ins    BYTE PTR es:[edi],dx
  4170f8:	and    DWORD PTR [eax+0x55],eax
  4170fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170fc:	dec    edi
  4170fd:	int3   
  4170fe:	ss jmp 0x8f44ce9d
  417104:	leave  
  417105:	xor    BYTE PTR [esi],bh
  417107:	test   eax,0xb39b2e18
  41710c:	pop    ecx
  41710d:	(bad)  
  41710e:	mov    BYTE PTR ds:[ecx+0x9],al
  417112:	mov    ebp,0x50b7835d
  417117:	scas   al,BYTE PTR es:[edi]
  417118:	sub    eax,esi
  41711a:	call   0x95eec61a
  41711f:	xchg   esp,eax
  417120:	mov    eax,ds:0xf4adee6
  417125:	jbe    0x4170dd
  417127:	das    
  417128:	cdq    
  417129:	dec    esi
  41712a:	mov    edx,0x9ebcd18f
  41712f:	ror    BYTE PTR [ebp+ecx*1+0x69fb3e3c],cl
  417136:	popf   
  417137:	std    
  417138:	pop    esi
  417139:	lods   al,BYTE PTR ds:[esi]
  41713a:	or     esp,edi
  41713c:	fisubr DWORD PTR cs:[ebx-0x1b178533]
  417143:	cmp    esi,ebp
  417145:	loop   0x41713b
  417147:	cmp    eax,0x9540ee7d
  41714c:	shl    ch,cl
  41714e:	mov    dl,0xdb
  417150:	les    edx,FWORD PTR [esi-0x7116a1d8]
  417156:	jae    0x417130
  417158:	jmp    0x417143
  41715a:	sbb    al,cl
  41715c:	add    ebp,edx
  41715e:	or     cl,BYTE PTR [ebx+0x23]
  417161:	inc    ebp
  417162:	lahf   
  417163:	mov    esi,0xa8e6b357
  417168:	push   es
  417169:	jg     0x4171e1
  41716b:	cdq    
  41716c:	dec    eax
  41716d:	xor    cl,dh
  41716f:	dec    ecx
  417170:	enter  0xe47b,0x81
  417174:	mov    dh,BYTE PTR [ebx]
  417176:	lea    eax,[ebp+0x5a]
  417179:	pop    ecx
  41717a:	in     al,0x77
  41717c:	popf   
  41717d:	aam    0xdb
  41717f:	jmp    0x4171fa
  417181:	pop    esp
  417182:	xchg   ebp,eax
  417183:	addr16 xchg ebx,eax
  417185:	mov    eax,ds:0x40f981e4
  41718a:	or     al,0x3b
  41718c:	lods   al,BYTE PTR ds:[esi]
  41718d:	rcr    DWORD PTR [esi+0xf],1
  417190:	cmp    BYTE PTR [eax],bl
  417192:	dec    ebp
  417193:	dec    esp
  417194:	rol    DWORD PTR [esi-0x60],1
  417197:	xchg   DWORD PTR [ecx-0x596810a1],ebp
  41719d:	icebp  
  41719e:	ins    DWORD PTR es:[edi],dx
  41719f:	mov    ah,0x6b
  4171a1:	pop    ebx
  4171a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a3:	das    
  4171a4:	test   DWORD PTR [ecx+ebx*4],ebp
  4171a7:	ja     0x417169
  4171a9:	outs   dx,BYTE PTR ds:[esi]
  4171aa:	xor    edx,DWORD PTR [edi+0x1a]
  4171ad:	xlat   BYTE PTR ds:[ebx]
  4171ae:	mov    ah,0xc9
  4171b0:	xor    BYTE PTR [esi],bh
  4171b2:	inc    ebx
  4171b3:	mov    ch,0xd6
  4171b5:	add    BYTE PTR ds:0xe6742a6,bl
  4171bb:	dec    ebx
  4171bc:	scas   eax,DWORD PTR es:[edi]
  4171bd:	mov    ecx,DWORD PTR [edi-0x351c0c71]
  4171c3:	sti    
  4171c4:	fcomp  QWORD PTR [edx-0x2b8d356c]
  4171ca:	ins    BYTE PTR es:[edi],dx
  4171cb:	call   0xf95e8e12
  4171d0:	sbb    al,0x42
  4171d2:	rol    bl,cl
  4171d4:	cmc    
  4171d5:	daa    
  4171d6:	push   cs
  4171d7:	mov    bh,0xc7
  4171d9:	fidivr WORD PTR [edx]
  4171db:	jle    0x41719c
  4171dd:	(bad)  
  4171de:	mov    dl,0xa1
  4171e0:	out    0x2e,eax
  4171e2:	in     al,dx
  4171e3:	rol    edi,0x52
  4171e6:	loopne 0x41716b
  4171e8:	mov    DWORD PTR ds:0x5937e3cd,ebp
  4171ee:	shl    DWORD PTR [esi+0x27],1
  4171f1:	push   edx
  4171f2:	mov    DWORD PTR [edx],ecx
  4171f4:	pop    ss
  4171f5:	jecxz  0x4171cb
  4171f7:	inc    ebp
  4171f8:	adc    ch,BYTE PTR [eax]
  4171fa:	ja     0x417185
  4171fc:	int3   
  4171fd:	pop    ss
  4171fe:	or     BYTE PTR ds:0xfed9ade0,ch
  417204:	pushf  
  417205:	ins    BYTE PTR es:[edi],dx
  417206:	or     DWORD PTR [edx-0x642c0565],eax
  41720c:	fwait
  41720d:	adc    cl,ch
  41720f:	add    eax,0x9a87d161
  417214:	cmc    
  417215:	dec    ecx
  417216:	gs xor eax,0xc56bbae8
  41721c:	jle    0x4171c1
  41721e:	fwait
  41721f:	xchg   edi,eax
  417220:	sahf   
  417221:	jo     0x4171e0
  417223:	lods   al,BYTE PTR ds:[esi]
  417224:	sar    DWORD PTR [edx],1
  417226:	fs js  0x4171d5
  417229:	jmp    0x656fc6e4
  41722e:	sub    DWORD PTR [edi-0x4f],edx
  417231:	stos   DWORD PTR es:[edi],eax
  417232:	sub    ebp,DWORD PTR [eax+0x7b]
  417235:	in     al,dx
  417236:	retf   0x1a8
  417239:	mov    ah,0x1c
  41723b:	aad    0x81
  41723d:	lods   eax,DWORD PTR ds:[esi]
  41723e:	inc    eax
  41723f:	sbb    dl,BYTE PTR [ebx]
  417241:	jmp    0x786a:0xca344ec1
  417248:	shl    ebx,cl
  41724a:	adc    al,0xda
  41724c:	fisttp WORD PTR [eax-0x31]
  41724f:	imul   ch
  417251:	sti    
  417252:	out    0x4b,eax
  417254:	enter  0x9744,0x9e
  417258:	ins    DWORD PTR es:[edi],dx
  417259:	and    ch,BYTE PTR [eax+0x66]
  41725c:	loopne 0x4172b3
  41725e:	mov    ds:0xb5a5f215,al
  417263:	mov    ecx,0x19ef327f
  417268:	mov    dh,0x7c
  41726a:	jno    0x41723a
  41726c:	sbb    esp,DWORD PTR [eax+0x53a7c3af]
  417272:	(bad)  
  417273:	std    
  417274:	sar    DWORD PTR [esi+0x6e],1
  417277:	shl    BYTE PTR [ecx+esi*2-0x1b71d354],1
  41727e:	xchg   edi,eax
  41727f:	sahf   
  417280:	or     esi,edi
  417282:	pop    edx
  417283:	push   ebx
  417284:	into   
  417285:	test   DWORD PTR ds:0x795069d9,ebp
  41728b:	mov    dh,0xc9
  41728d:	inc    ecx
  41728e:	pop    eax
  41728f:	imul   esi,ebp,0xffffffbe
  417292:	inc    edx
  417293:	fisttp DWORD PTR [edi]
  417295:	pushf  
  417296:	lahf   
  417297:	inc    eax
  417298:	loop   0x417302
  41729a:	stos   DWORD PTR es:[edi],eax
  41729b:	cwde   
  41729c:	sub    eax,DWORD PTR [edi]
  41729e:	inc    edi
  41729f:	mov    dl,0x74
  4172a1:	add    esp,DWORD PTR [ebp-0x797bc54]
  4172a7:	jge    0x417267
  4172a9:	push   edi
  4172aa:	cld    
  4172ab:	xor    al,0xc9
  4172ad:	stos   BYTE PTR es:[edi],al
  4172ae:	xor    edx,DWORD PTR [edx-0x43ba5195]
  4172b4:	fisub  DWORD PTR [ecx]
  4172b6:	inc    esp
  4172b7:	popf   
  4172b8:	xchg   esi,eax
  4172b9:	nop
  4172ba:	out    0xa3,al
  4172bc:	repz int3 
  4172be:	sbb    DWORD PTR [ebp-0x7a9e0895],eax
  4172c4:	loop   0x417265
  4172c6:	mov    al,ds:0x74f2713f
  4172cb:	into   
  4172cc:	xor    al,0x2f
  4172ce:	sub    BYTE PTR [edi+0x46],bl
  4172d1:	sub    DWORD PTR [eax+edi*1-0x6880ab34],edi
  4172d8:	jecxz  0x417345
  4172da:	out    dx,al
  4172db:	fdiv   st,st(1)
  4172dd:	pop    ebx
  4172de:	mov    DWORD PTR [ecx+eax*8-0x50],edi
  4172e2:	test   al,0xba
  4172e4:	jae    0x417281
  4172e6:	adc    eax,0x621bed20
  4172eb:	xchg   ecx,eax
  4172ec:	mov    ss,WORD PTR [ebx+0x30]
  4172ef:	scas   al,BYTE PTR es:[edi]
  4172f0:	cmp    BYTE PTR [ebx+0x48b1ae72],bl
  4172f6:	and    ecx,ebp
  4172f8:	push   ebx
  4172f9:	mov    edx,0x70576ea8
  4172fe:	push   0xffffffa2
  417300:	(bad)  
  417301:	jae    0x417330
  417303:	popaw  
  417305:	fld    DWORD PTR [ebx+0x22a0ff14]
  41730b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41730c:	dec    edi
  41730d:	std    
  41730e:	lock sub ebx,edi
  417311:	xchg   ebp,eax
  417312:	(bad)  
  417313:	jbe    0x41736b
  417315:	sti    
  417316:	push   ss
  417317:	sbb    al,0x2e
  417319:	pop    esi
  41731a:	adc    al,0x2c
  41731c:	jmp    0x4172d2
  41731e:	jne    0x41734c
  417320:	(bad)  
  417321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417322:	mov    bh,0x2a
  417324:	adc    ah,bl
  417326:	jp     0x4172c7
  417328:	int    0xad
  41732a:	repz ja 0x4172f3
  41732d:	loope  0x41739f
  41732f:	pop    ebp
  417330:	mov    dl,BYTE PTR [edi]
  417332:	pop    edi
  417333:	cmp    cl,ch
  417335:	sub    bh,BYTE PTR [edi]
  417337:	std    
  417338:	dec    ebx
  417339:	(bad)  
  41733a:	cmp    ecx,esi
  41733c:	repnz mov WORD PTR [ebp+eiz*2-0x80],?
  417341:	call   DWORD PTR gs:[ebp+0x2b]
  417345:	mov    ebp,0x2c55f1f9
  41734a:	adc    BYTE PTR [ebx],cl
  41734c:	ror    DWORD PTR [ecx],0x55
  41734f:	mov    WORD PTR [ecx-0x64],ss
  417352:	inc    edx
  417353:	imul   esi,esp,0xf
  417356:	adc    ecx,DWORD PTR [edi-0x22]
  417359:	ret    
  41735a:	mov    eax,0xe467cdd5
  41735f:	out    dx,al
  417360:	push   0x7da098bc
  417365:	fcom   QWORD PTR [edx+0x4459cda0]
  41736b:	jmp    0x54f23093
  417370:	addr16 xchg ebp,eax
  417372:	xchg   ch,cl
  417374:	popa   
  417375:	mov    edi,0xc9450494
  41737a:	xchg   esi,eax
  41737b:	nop
  41737c:	data16 out dx,al
  41737e:	mov    WORD PTR [eax-0x64e83db4],ds
  417384:	rcl    BYTE PTR [edx-0x1e06c1ff],1
  41738a:	fs mov cl,0xb1
  41738d:	(bad)  
  41738e:	hlt    
  41738f:	inc    DWORD PTR [esi+edx*1+0x3aa25bb7]
  417396:	nop
  417397:	sbb    dl,BYTE PTR [esi-0x33dfa017]
  41739d:	dec    ecx
  41739e:	adc    al,0xed
  4173a0:	sahf   
  4173a1:	adc    edx,edi
  4173a3:	xchg   DWORD PTR [edi-0x4bded1b2],esi
  4173a9:	in     eax,dx
  4173aa:	jle    0x417393
  4173ac:	mov    ecx,0x983562ac
  4173b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173b2:	push   ebx
  4173b3:	or     DWORD PTR [esi+0x1b0924a9],esp
  4173b9:	push   ss
  4173ba:	outs   dx,BYTE PTR ds:[esi]
  4173bb:	fiadd  DWORD PTR [eax-0x5f2eb6c3]
  4173c1:	xchg   esp,eax
  4173c2:	(bad)  
  4173c3:	popa   
  4173c4:	jg     0x417379
  4173c6:	fdiv   DWORD PTR [ecx-0x37]
  4173c9:	gs std 
  4173cb:	ja     0x41735d
  4173cd:	ror    BYTE PTR [ebx+edx*1-0x69],0x9b
  4173d2:	mov    ds:0x27488993,al
  4173d7:	outs   dx,DWORD PTR ds:[esi]
  4173d8:	imul   eax,DWORD PTR ds:[edx],0x1981f9e0
  4173df:	push   ss
  4173e0:	pusha  
  4173e1:	adc    DWORD PTR [edi],0x27
  4173e4:	mov    bh,0x1e
  4173e6:	in     al,0xc4
  4173e8:	das    
  4173e9:	cdq    
  4173ea:	repz xor BYTE PTR [edx-0x3cdec610],al
  4173f1:	jmp    0xf705:0x996b72fd
  4173f8:	mov    cs,WORD PTR [eax]
  4173fa:	push   esp
  4173fb:	pusha  
  4173fc:	loop   0x417441
  4173fe:	jge    0x417401
  417400:	seta   BYTE PTR [ebp+0x73f79756]
  417407:	or     DWORD PTR [esi],eax
  417409:	push   esi
  41740a:	mov    eax,ecx
  41740c:	jno    0x417427
  41740e:	enter  0x1112,0x48
  417412:	fwait
  417413:	mov    eax,0xd075eb25
  417418:	jno    0x10fc6d8e
  41741e:	and    al,BYTE PTR [edi]
  417420:	fiadd  DWORD PTR [esi]
  417422:	add    bh,BYTE PTR [ecx]
  417424:	or     al,0x1
  417426:	popa   
  417427:	and    BYTE PTR [ecx],bh
  417429:	lea    ecx,[ecx]
  41742b:	unpckhps xmm4,XMMWORD PTR [ebx+0x7835df7e]
  417432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417433:	imul   ecx,DWORD PTR [esi],0x7f
  417436:	loopne 0x4173d9
  417438:	stos   BYTE PTR es:[edi],al
  417439:	pop    es
  41743a:	aam    0x8d
  41743c:	lock dec ebx
  41743e:	sbb    al,0xed
  417440:	adc    edx,DWORD PTR [esi]
  417442:	adc    BYTE PTR [esi+0x28],bh
  417445:	(bad)  
  417446:	jne    0x41745c
  417448:	pushf  
  417449:	mov    bh,0x6e
  41744b:	xor    edx,edx
  41744d:	ficomp WORD PTR [ebx]
  41744f:	mov    esi,0xa484fa7f
  417454:	inc    ecx
  417455:	stc    
  417456:	jp     0x41741b
  417458:	lds    esi,FWORD PTR [edi]
  41745a:	int    0x9e
  41745c:	js     0x4173f0
  41745e:	cmp    BYTE PTR [ebp-0x34e4c1a3],cl
  417464:	dec    edx
  417465:	(bad)  
  417466:	scas   al,BYTE PTR es:[edi]
  417467:	out    0x21,al
  417469:	(bad)
  41746c:	mov    esi,edi
  41746e:	idiv   DWORD PTR [ecx+0x30]
  417471:	cmp    ebp,eax
  417473:	scas   al,BYTE PTR es:[edi]
  417474:	repnz ins DWORD PTR es:[edi],dx
  417476:	mov    ebx,0xfaa3729d
  41747b:	and    al,0xee
  41747d:	mov    ds:0x63e2967a,eax
  417482:	in     al,dx
  417483:	out    0x66,eax
  417485:	cmp    ecx,DWORD PTR [eax+0xc4ebd32]
  41748b:	or     al,0xe5
  41748d:	or     eax,0x17b4d4e6
  417492:	int3   
  417493:	sub    eax,0x4f9d6123
  417498:	icebp  
  417499:	test   BYTE PTR [edx-0x5e860e07],cl
  41749f:	or     ebp,DWORD PTR [ebx+eiz*1]
  4174a2:	mov    DWORD PTR [esi],edx
  4174a4:	add    BYTE PTR [edi+0x43077c10],bh
  4174aa:	ins    BYTE PTR es:[edi],dx
  4174ab:	cmp    ah,dl
  4174ad:	aas    
  4174ae:	pushf  
  4174af:	das    
  4174b0:	sbb    bl,BYTE PTR [ebp+0x66]
  4174b3:	ins    DWORD PTR es:[edi],dx
  4174b4:	pop    es
  4174b5:	call   DWORD PTR [ebp-0x1e]
  4174b8:	pushf  
  4174b9:	bound  ecx,QWORD PTR [ebx+0x74]
  4174bc:	ins    DWORD PTR es:[edi],dx
  4174bd:	mov    edx,0x7128e263
  4174c2:	inc    esp
  4174c3:	jmp    0x7d51d804
  4174c8:	std    
  4174c9:	inc    edx
  4174ca:	imul   eax,DWORD PTR [ecx],0x68
  4174cd:	iret   
  4174ce:	jle    0x417514
  4174d0:	add    BYTE PTR [esi+0x511aeae5],bh
  4174d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174d7:	enter  0x9d55,0x4a
  4174db:	hlt    
  4174dc:	jbe    0x4174bb
  4174de:	test   DWORD PTR [edi-0x77b9bdf2],ecx
  4174e4:	or     eax,0xf8f58e0e
  4174e9:	(bad)  
  4174ea:	pop    esp
  4174eb:	ret    0xd964
  4174ee:	push   eax
  4174ef:	aam    0xb2
  4174f1:	loopne 0x417515
  4174f3:	push   es
  4174f4:	push   0x20
  4174f6:	jl     0x4174fb
  4174f8:	add    esi,DWORD PTR [ebp-0x4c559238]
  4174fe:	(bad)  
  417500:	jmp    0x4174fa
  417502:	out    dx,eax
  417503:	clc    
  417504:	out    dx,al
  417505:	pop    ecx
  417506:	cdq    
  417507:	mov    ecx,0xcbb51283
  41750c:	or     BYTE PTR [eax-0x3b],ch
  41750f:	scas   al,BYTE PTR es:[edi]
  417510:	adc    dh,dl
  417512:	ins    DWORD PTR es:[edi],dx
  417513:	aas    
  417514:	enter  0xe20c,0xbc
  417518:	test   BYTE PTR [eax-0x226ed0d],dl
  41751e:	popf   
  41751f:	rol    ebx,1
  417521:	adc    DWORD PTR ds:0x50cf9299,esi
  417527:	and    al,0xb4
  417529:	mov    edi,0xdcbbe3a8
  41752e:	mov    eax,0x28124c02
  417533:	cmp    DWORD PTR [eax-0x62],ebx
  417536:	mov    ds:0x92840a3b,al
  41753b:	je     0x417559
  41753d:	sub    ecx,ebp
  41753f:	pop    ebx
  417540:	jno    0x41750f
  417542:	(bad)  
  417543:	pop    edi
  417544:	pop    ebp
  417545:	icebp  
  417546:	push   edx
  417547:	fcmovu st,st(1)
  417549:	lahf   
  41754a:	push   edi
  41754b:	pop    ebx
  41754c:	cmp    eax,0x1cb61446
  417551:	lods   al,BYTE PTR ds:[esi]
  417552:	stc    
  417553:	aad    0xc8
  417555:	lea    ecx,[ebp-0x5e]
  417558:	mov    bl,0xcf
  41755a:	popf   
  41755b:	imul   ebx,DWORD PTR cs:[ecx-0x60acbe7],0x908d285f
  417566:	push   eax
  417567:	mov    esp,0xd1f82c8a
  41756c:	clc    
  41756d:	push   es
  41756e:	repnz loopne 0x417533
  417571:	imul   edx,edi,0x33
  417574:	not    BYTE PTR [esi+edx*8-0x5d]
  417578:	add    ch,BYTE PTR [esi+0x66]
  41757b:	cld    
  41757c:	mov    ebx,0x96f989c6
  417581:	clc    
  417582:	add    BYTE PTR [eax],ah
  417584:	scas   eax,DWORD PTR es:[edi]
  417585:	adc    BYTE PTR [esi+0x3c],0x4a
  417589:	mov    ebp,0x9e714568
  41758e:	inc    ebx
  41758f:	push   edi
  417590:	and    ecx,esi
  417592:	dec    edi
  417593:	pop    ecx
  417594:	mov    ebx,0x9dc58477
  417599:	js     0x4175e2
  41759b:	mov    dl,0xf0
  41759d:	sbb    al,0x54
  41759f:	and    DWORD PTR [ecx+0x272e9326],eax
  4175a5:	cmp    al,0x6e
  4175a7:	mov    WORD PTR [ebp+0x6b9e12d8],cs
  4175ad:	push   eax
  4175ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175af:	std    
  4175b0:	xchg   ebx,eax
  4175b1:	cld    
  4175b2:	pop    ds
  4175b3:	add    dh,BYTE PTR [esp+ebp*4]
  4175b6:	imul   ecx,DWORD PTR [ecx],0x4b936387
  4175bc:	jb     0x417582
  4175be:	mov    edx,0xcd495e36
  4175c3:	cmp    eax,0x6944c0e4
  4175c8:	sub    BYTE PTR [ebp-0x18571d02],ah
  4175ce:	cmc    
  4175cf:	in     eax,0x9b
  4175d1:	cmc    
  4175d2:	out    dx,eax
  4175d3:	jg     0x417609
  4175d5:	rol    BYTE PTR [esp+eiz*8],1
  4175d8:	push   ebx
  4175d9:	test   DWORD PTR [ebx-0x5ff3fb89],ebx
  4175df:	cdq    
  4175e0:	out    dx,al
  4175e1:	outs   dx,DWORD PTR ds:[esi]
  4175e2:	imul   esi,ecx,0xccdf1479
  4175e8:	pushf  
  4175e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ea:	pop    es
  4175eb:	lea    esp,[edx]
  4175ed:	push   edx
  4175ee:	and    ebp,ecx
  4175f0:	dec    edi
  4175f1:	js     0x4175b5
  4175f3:	or     BYTE PTR [ebx],dl
  4175f5:	pushf  
  4175f6:	(bad)  
  4175f7:	mov    esp,0x71833025
  4175fc:	add    DWORD PTR [esi],ebx
  4175fe:	mov    ds:0xd397531e,eax
  417603:	push   es
  417604:	cmp    DWORD PTR ds:0x11d38b8b,eax
  41760a:	mov    ecx,0x82e787ad
  41760f:	mov    esi,0x401f0832
  417614:	jge    0x417605
  417616:	pop    ecx
  417617:	retf   0x1c30
  41761a:	dec    esi
  41761b:	addr16 in al,0xd7
  41761e:	jae    0x41762a
  417620:	mov    ah,0xd0
  417622:	jbe    0x4175e2
  417624:	xor    DWORD PTR [eax+0x1a90f665],edi
  41762a:	fst    QWORD PTR [eax-0x7]
  41762d:	sbb    DWORD PTR [eax-0x4da5cdbf],esp
  417633:	(bad)  
  417634:	outs   dx,BYTE PTR ds:[esi]
  417636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417637:	xchg   BYTE PTR [eax+0x30c1821],ah
  41763d:	dec    esi
  41763e:	mov    gs,edi
  417640:	adc    bh,bh
  417642:	adc    ecx,esi
  417644:	and    DWORD PTR [eax],ebp
  417646:	mov    al,0xc9
  417648:	inc    edx
  417649:	mov    BYTE PTR [esp+eiz*8],ch
  41764c:	cmp    ecx,ecx
  41764e:	push   esi
  41764f:	pop    esi
  417650:	je     0x4176bc
  417652:	jmp    0x3a78:0xa59d07f7
  417659:	xchg   ebx,eax
  41765a:	mov    WORD PTR [eax+0x7b],fs
  41765d:	cmp    cl,0x91
  417660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417661:	test   cl,cl
  417663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417665:	xchg   edi,eax
  417666:	add    BYTE PTR [esi+0x4e],dl
  417669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41766a:	in     al,0x98
  41766c:	inc    ebx
  41766d:	lods   eax,DWORD PTR ds:[esi]
  41766e:	cdq    
  41766f:	cmc    
  417670:	jb     0x4175f8
  417672:	sub    esi,DWORD PTR [edi-0x1b982955]
  417678:	rcr    ah,0x1d
  41767b:	push   esp
  41767c:	or     eax,0xf7368103
  417681:	(bad)  
  417682:	es cdq 
  417684:	sahf   
  417685:	fwait
  417686:	(bad)  
  417687:	addr16 leave 
  417689:	and    al,0x5e
  41768b:	out    0x82,eax
  41768d:	(bad)  
  41768e:	xchg   esp,eax
  41768f:	fidivr DWORD PTR [edi+0x78845313]
  417695:	das    
  417696:	icebp  
  417697:	sbb    edi,DWORD PTR [ebp+0x5b]
  41769a:	mov    dh,0x16
  41769c:	dec    edi
  41769d:	or     cl,al
  41769f:	mov    ecx,0x66b5824c
  4176a4:	dec    edx
  4176a5:	cmp    al,0x9a
  4176a7:	push   ss
  4176a8:	jne    0x41763b
  4176aa:	jecxz  0x417673
  4176ac:	into   
  4176ad:	ins    BYTE PTR es:[edi],dx
  4176ae:	ins    DWORD PTR es:[edi],dx
  4176af:	mov    bh,0x56
  4176b1:	pop    esp
  4176b2:	fcomp  QWORD PTR [ebp+ebx*2-0x2f59441d]
  4176b9:	or     dh,BYTE PTR ds:0xf37f64a8
  4176bf:	mov    eax,ds:0xaf846b54
  4176c4:	sbb    al,0x47
  4176c6:	pop    ebx
  4176c7:	push   esp
  4176c8:	xor    edi,DWORD PTR [edx-0x56b47616]
  4176ce:	(bad)  
  4176cf:	in     eax,dx
  4176d0:	dec    esi
  4176d1:	(bad)  
  4176d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d3:	jg     0x417740
  4176d5:	mov    ebx,0x9677531e
  4176da:	es (bad) 
  4176dc:	jge    0x4176de
  4176de:	fwait
  4176df:	jb     0x4176b9
  4176e1:	cwde   
  4176e2:	(bad)
  4176e6:	cmp    DWORD PTR [ecx],esp
  4176e8:	sahf   
  4176e9:	sahf   
  4176ea:	ds fs cdq 
  4176ed:	mov    es,WORD PTR [esi]
  4176ef:	jne    0x4176fa
  4176f1:	dec    ecx
  4176f2:	sbb    esp,edi
  4176f4:	std    
  4176f5:	fst    DWORD PTR [edx+0x19d50633]
  4176fb:	add    al,0x4e
  4176fd:	mov    cl,0xd
  4176ff:	add    DWORD PTR [ebx+0x2aea64b8],ebp
  417705:	les    edi,FWORD PTR [edx+0x1639a3b4]
  41770b:	mov    ch,BYTE PTR [ecx+0xe6a8ab5]
  417711:	js     0x4176c0
  417713:	test   eax,0x20883f0c
  417718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417719:	mov    edx,0x7bf5f13f
  41771e:	mov    bh,0xbc
  417720:	sub    edx,edx
  417722:	iret   
  417723:	jns    0x417759
  417725:	aas    
  417726:	mov    fs,WORD PTR [esi+0x43db382b]
  41772c:	test   BYTE PTR [esi],ch
  41772e:	jmp    0x5c60:0xd12d857e
  417735:	xor    eax,0x3957ddc0
  41773a:	mov    dl,0x21
  41773c:	jnp    0x4176c2
  41773e:	retf   
  41773f:	xor    al,0x8e
  417741:	fwait
  417742:	mov    cl,0x7b
  417744:	lods   eax,DWORD PTR ds:[esi]
  417745:	(bad)
  417748:	(bad)  
  417749:	adc    al,0x29
  41774b:	jns    0x4176d6
  41774d:	cmp    ebp,edx
  41774f:	xchg   ebx,eax
  417750:	mov    al,ds:0xfbcebda2
  417755:	mov    al,0x8e
  417757:	add    ebp,DWORD PTR [ecx+0x226b764e]
  41775d:	fucomi st,st(4)
  41775f:	pop    ebp
  417760:	xchg   esi,eax
  417761:	add    al,0xa9
  417764:	and    DWORD PTR [edx-0x30ae349a],0x10
  41776b:	out    0x37,eax
  41776d:	dec    bx
  41776f:	sbb    al,0xff
  417771:	popf   
  417772:	test   ch,ah
  417774:	inc    ebp
  417775:	(bad)  
  417776:	das    
  417777:	xchg   edi,eax
  417778:	inc    esi
  417779:	pop    ss
  41777a:	mov    ds:0x9021c28b,eax
  41777f:	xacquire xchg BYTE PTR [di-0x6fbf],cl
  417785:	mov    ebx,0x2e2f104d
  41778a:	call   0xf539d293
  41778f:	clc    
  417790:	adc    al,0xe2
  417792:	ds mov esi,0x831e332a
  417798:	fild   DWORD PTR [eax]
  41779a:	ret    
  41779b:	out    0x78,eax
  41779d:	gs popf 
  41779f:	add    esp,esp
  4177a1:	data16 jno 0x41780c
  4177a4:	retf   0xdb33
  4177a7:	cli    
  4177a8:	ficomp DWORD PTR [esi]
  4177aa:	sub    eax,0xe603838
  4177af:	mov    dl,0xc9
  4177b1:	das    
  4177b2:	inc    ecx
  4177b3:	and    ah,bh
  4177b5:	shl    DWORD PTR es:[esi-0x7fc97420],cl
  4177bc:	fistp  DWORD PTR [eax-0x7e]
  4177bf:	mov    edi,0x552c8bef
  4177c4:	inc    edx
  4177c5:	pop    edx
  4177c6:	cmp    DWORD PTR [edi],ecx
  4177c8:	fst    st(0)
  4177ca:	push   0x87494f4a
  4177cf:	and    ch,BYTE PTR [eax+eiz*1+0x61086a0d]
  4177d6:	add    BYTE PTR [edx+0x1145af9d],cl
  4177dc:	(bad)  
  4177dd:	sbb    BYTE PTR [ecx-0x78af6ac0],dh
  4177e3:	jge    0x41785b
  4177e5:	pushf  
  4177e6:	dec    ecx
  4177e7:	or     eax,0x4375032f
  4177ec:	icebp  
  4177ed:	mov    dh,0xbc
  4177ef:	jle    0x41780f
  4177f1:	push   0xeba04bbd
  4177f6:	pop    ecx
  4177f7:	mov    ecx,0xb658675a
  4177fc:	jbe    0x41782c
  4177fe:	xchg   edx,eax
  4177ff:	(bad)  [ecx+0x2235b5f4]
  417805:	pop    edx
  417806:	pop    es
  417807:	mov    esp,0x9a17875d
  41780c:	retf   
  41780d:	inc    ecx
  41780e:	pop    ebx
  41780f:	jb     0x4177d4
  417811:	push   esp
  417812:	inc    ebx
  417813:	inc    edx
  417814:	inc    ecx
  417815:	inc    eax
  417816:	push   ss
  417817:	cdq    
  417818:	outs   dx,BYTE PTR ds:[esi]
  417819:	lds    edi,FWORD PTR [edx+0x6b]
  41781c:	scas   al,BYTE PTR es:[edi]
  41781d:	stos   DWORD PTR es:[edi],eax
  41781e:	pop    esi
  41781f:	(bad)  
  417820:	inc    DWORD PTR [edx-0x19]
  417823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417824:	(bad)  
  417825:	scas   al,BYTE PTR es:[edi]
  417826:	dec    edi
  417827:	cmp    BYTE PTR [ecx],al
  417829:	cmp    al,0xab
  41782b:	jecxz  0x4178a1
  41782d:	or     al,0x7c
  41782f:	jmp    0x18eb5be1
  417834:	dec    esp
  417835:	and    BYTE PTR es:[edi-0x54],ch
  417839:	loope  0x4177ff
  41783b:	je     0x4177d7
  41783d:	cdq    
  41783e:	xor    BYTE PTR [edx],ah
  417840:	rol    DWORD PTR es:[ebx-0x264f07a4],cl
  417847:	adc    ah,bh
  417849:	leave  
  41784a:	xchg   esp,eax
  41784b:	adc    DWORD PTR [esi+0x36215221],eax
  417851:	mov    ss,WORD PTR [edx]
  417853:	in     al,0x90
  417855:	popa   
  417856:	xlat   BYTE PTR ds:[ebx]
  417857:	jl     0x4177fc
  417859:	ret    0xc014
  41785c:	xchg   ebx,eax
  41785d:	pop    ebx
  41785e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41785f:	add    bh,BYTE PTR [esi-0x80]
  417862:	pop    ebx
  417863:	leave  
  417864:	aaa    
  417865:	arpl   WORD PTR [esi+eiz*4],bx
  417868:	push   eax
  417869:	adc    DWORD PTR [eax-0x19226630],eax
  41786f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417870:	ret    0x972b
  417873:	lahf   
  417874:	ret    
  417875:	adc    al,0xb
  417877:	add    BYTE PTR [ebp+0x217cea10],dh
  41787d:	pop    ss
  41787e:	nop
  41787f:	les    esi,FWORD PTR [ecx]
  417881:	rol    DWORD PTR [edi+0x636c973b],0xb
  417888:	pop    esp
  417889:	std    
  41788a:	call   0x6d011ebb
  41788f:	cmp    eax,0xb928bf99
  417894:	stc    
  417895:	lea    edx,[edi+0x32d71ffb]
  41789b:	sti    
  41789c:	jmp    0x4a6f3cef
  4178a1:	mov    ch,0x33
  4178a3:	jno    0x417883
  4178a5:	js     0x86d7bbee
  4178ab:	adc    al,0x83
  4178ad:	jle    0x417834
  4178af:	(bad)  
  4178b0:	repnz inc eax
  4178b2:	mov    ds:0x2702b6e2,eax
  4178b7:	xchg   ecx,eax
  4178b8:	jl     0x417905
  4178ba:	test   DWORD PTR [esi+0x413c0e5a],ebp
  4178c0:	xchg   ecx,eax
  4178c1:	inc    edi
  4178c2:	sub    ecx,ecx
  4178c4:	in     al,dx
  4178c5:	adc    esi,eax
  4178c7:	mov    BYTE PTR [ebx-0x21f26dbe],dl
  4178cd:	out    dx,al
  4178ce:	or     al,0xf7
  4178d0:	xchg   ebp,eax
  4178d1:	popf   
  4178d2:	popa   
  4178d3:	cmp    al,0x3f
  4178d5:	sar    BYTE PTR [eax-0x77e2738],1
  4178db:	or     eax,0x265d4979
  4178e0:	mov    edx,0xcb6cd175
  4178e5:	jle    0x4178f6
  4178e7:	das    
  4178e8:	xor    ebp,DWORD PTR [eax]
  4178ea:	jl     0x417913
  4178ec:	fistp  WORD PTR [eax+0x61c1d7c8]
  4178f2:	jnp    0x417962
  4178f4:	loope  0x41794f
  4178f6:	sbb    eax,0x37445fb5
  4178fb:	cmp    eax,0x5416e85
  417900:	rol    DWORD PTR [ebp+edx*8-0x2],cl
  417904:	mov    al,ds:0x71bb6395
  417909:	bound  esp,QWORD PTR [eax+0x3eaac295]
  41790f:	mov    cl,0x3c
  417911:	cwde   
  417912:	(bad)  
  417913:	lds    edx,FWORD PTR [ecx-0x50887bc]
  417919:	jle    0x417977
  41791b:	pop    esp
  41791c:	jl     0x417995
  41791e:	inc    ebx
  417920:	mov    DWORD PTR es:[edi+0x23],esp
  417924:	(bad)  
  417925:	jnp    0x417924
  417927:	jbe    0x41794e
  417929:	in     al,dx
  41792a:	xchg   esi,eax
  41792b:	psubusw mm4,mm3
  41792e:	pop    ebp
  41792f:	inc    ebp
  417930:	data16 sub ch,bl
  417933:	sbb    bh,bl
  417935:	jecxz  0x417929
  417937:	lock cwde 
  417939:	mov    dh,cl
  41793b:	mov    esi,0x92c82e10
  417940:	dec    ebx
  417941:	mov    BYTE PTR [edi+0x48],bh
  417944:	int    0x1c
  417946:	pop    eax
  417947:	sub    edi,eax
  417949:	lock sbb ecx,DWORD PTR [ebx+0xafc1d0a]
  417950:	mov    dl,0xd4
  417952:	push   ecx
  417953:	jae    0x41790f
  417955:	inc    ebx
  417956:	lea    ebp,[edi]
  417958:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41795a:	scas   al,BYTE PTR es:[edi]
  41795b:	repnz les ebx,FWORD PTR [ebp+0x7941007b]
  417962:	pop    esi
  417963:	sbb    al,0x8c
  417965:	push   ds
  417966:	imul   BYTE PTR [ecx+0x3b56fddc]
  41796c:	popf   
  41796d:	sub    eax,0x1bd52ac
  417972:	retf   0xd8d4
  417975:	pop    ds
  417976:	mov    ah,0x3a
  417978:	mov    ds,WORD PTR [ecx]
  41797a:	lods   al,BYTE PTR ds:[esi]
  41797b:	stos   BYTE PTR es:[edi],al
  41797c:	dec    edx
  41797d:	fwait
  41797e:	cmc    
  41797f:	or     DWORD PTR [ecx-0x2e],ecx
  417982:	push   es
  417983:	jae    0x41794f
  417985:	int3   
  417986:	fwait
  417987:	xchg   edx,eax
  417988:	out    dx,eax
  417989:	hlt    
  41798a:	cli    
  41798b:	fsubr  QWORD PTR [bp+di]
  41798e:	lods   al,BYTE PTR ds:[esi]
  41798f:	(bad)  
  417990:	rol    BYTE PTR [esi+0x242ac0f0],1
  417996:	mov    bh,bl
  417998:	xor    al,0x58
  41799a:	xchg   ecx,eax
  41799b:	mov    al,0x2a
  41799d:	popa   
  41799e:	dec    DWORD PTR [ecx]
  4179a0:	test   DWORD PTR [ebx+eiz*4+0x57cab75a],0xaed6165e
  4179ab:	jmp    0x46e1fc6b
  4179b0:	lds    eax,FWORD PTR [ebx+ecx*4-0x3c]
  4179b4:	add    DWORD PTR [ecx+0x1c],ecx
  4179b7:	sub    eax,DWORD PTR ds:0xca1e9708
  4179bd:	add    eax,0x7fe195b1
  4179c2:	xchg   edx,eax
  4179c3:	sbb    BYTE PTR [ebp+0x72],0x68
  4179c7:	xchg   ebx,eax
  4179c8:	jmp    0xd173b691
  4179cd:	ins    DWORD PTR es:[edi],dx
  4179ce:	stos   BYTE PTR es:[edi],al
  4179cf:	dec    edi
  4179d0:	loopne 0x417a3b
  4179d2:	std    
  4179d3:	mov    eax,ds:0xdcb3605c
  4179d8:	imul   eax,DWORD PTR [eax-0xa4811a3],0xffffffe2
  4179df:	(bad)  
  4179e0:	in     al,dx
  4179e1:	pop    ebp
  4179e2:	stos   DWORD PTR es:[edi],eax
  4179e3:	sbb    ebp,DWORD PTR [ecx-0x15be26b5]
  4179e9:	popa   
  4179ea:	mov    ch,0xd7
  4179ec:	xor    bl,al
  4179ee:	gs sub eax,0x62ba9e44
  4179f4:	adc    cl,BYTE PTR [ebp+0x7f7f5123]
  4179fa:	stos   BYTE PTR es:[edi],al
  4179fb:	test   eax,0xa324291b
  417a00:	in     al,0x74
  417a02:	retf   0xf917
  417a05:	or     al,0xfd
  417a07:	cmp    eax,0x52fcaea
  417a0c:	dec    esi
  417a0d:	mov    WORD PTR [ecx-0x7e],es
  417a10:	mov    gs,ebp
  417a12:	lods   al,BYTE PTR ds:[esi]
  417a13:	out    dx,al
  417a14:	loope  0x417a39
  417a16:	mov    ah,0x47
  417a18:	add    ebx,DWORD PTR [eax-0x39b8d796]
  417a1e:	cmp    dl,al
  417a20:	sbb    BYTE PTR [esi+ebp*8-0x70],bh
  417a24:	in     eax,0x7a
  417a26:	or     DWORD PTR [ebx+0x54e6c93e],edi
  417a2c:	shl    ebp,1
  417a2e:	or     esi,DWORD PTR [ebx+0x22838cf7]
  417a34:	inc    ecx
  417a35:	arpl   WORD PTR [edi-0x19],sp
  417a38:	mov    eax,gs
  417a3a:	push   edi
  417a3b:	inc    ebp
  417a3c:	sub    DWORD PTR [ebp-0x7a5207c],esi
  417a42:	fimul  DWORD PTR [ebx]
  417a44:	mov    al,ds:0xd3d3cba3
  417a49:	push   edx
  417a4a:	and    BYTE PTR [esi*4-0x3f28823c],dh
  417a51:	cmp    BYTE PTR [esi],bh
  417a53:	sub    ebx,ebp
  417a55:	fwait
  417a56:	ror    BYTE PTR gs:[edx+0x1a3c30a7],0x48
  417a5e:	pop    edx
  417a5f:	xchg   esp,eax
  417a60:	call   0xeb306ffc
  417a65:	(bad)  
  417a66:	(bad)  
  417a67:	fisub  WORD PTR [edx]
  417a69:	sar    DWORD PTR [ecx+edi*8],0x81
  417a6d:	inc    edx
  417a6e:	js     0x417acc
  417a70:	jae    0x417aa9
  417a72:	inc    ecx
  417a73:	pop    edx
  417a74:	je     0x417a98
  417a76:	int3   
  417a77:	sbb    eax,0x7e9189ff
  417a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a7d:	cmp    DWORD PTR [eax],0x12
  417a80:	jno    0x417a89
  417a82:	jg     0x417ab6
  417a84:	sub    eax,0x522fa292
  417a89:	mov    ecx,0x74c8de37
  417a8e:	cmp    BYTE PTR [esi-0x4643c28c],dh
  417a94:	push   0x2e
  417a96:	pop    edi
  417a97:	int    0x8
  417a99:	ret    0x456e
  417a9c:	pop    edi
  417a9d:	fwait
  417a9e:	mov    ah,0xaf
  417aa0:	js     0x417ae1
  417aa2:	cs push 0x1b49c25e
  417aa8:	mov    cl,0x7
  417aaa:	mov    ah,0x93
  417aac:	inc    ecx
  417aad:	sub    dl,bl
  417aaf:	jb     0x417b21
  417ab1:	cld    
  417ab2:	ret    
  417ab3:	outs   dx,DWORD PTR ds:[esi]
  417ab4:	cli    
  417ab5:	push   0x7fb33364
  417aba:	retf   
  417abb:	xor    al,0x10
  417abd:	add    ecx,ebx
  417abf:	cdq    
  417ac0:	xchg   esi,eax
  417ac1:	call   0x81e2:0xc89665f9
  417ac8:	mov    dl,0x1b
  417aca:	mov    ds:0x70954b8e,al
  417acf:	int3   
  417ad0:	push   edx
  417ad1:	in     eax,0xd6
  417ad3:	mov    ds,WORD PTR [esi+0x175fb382]
  417ad9:	adc    edi,DWORD PTR [ebx+0x1b4298ec]
  417adf:	jb     0x417a86
  417ae1:	ins    DWORD PTR es:[edi],dx
  417ae2:	mul    DWORD PTR [ecx+0x6d1e5946]
  417ae8:	icebp  
  417ae9:	inc    eax
  417aea:	mov    ebx,0x1320be4d
  417aef:	sbb    al,0x6f
  417af1:	lock movups XMMWORD PTR [ebx-0x37],xmm7
  417af6:	pop    ecx
  417af7:	sbb    eax,0x488c641a
  417afc:	jns    0x417a88
  417afe:	cmc    
  417aff:	in     eax,0xf8
  417b01:	lods   eax,DWORD PTR ds:[esi]
  417b02:	inc    esi
  417b03:	or     bl,BYTE PTR ds:0x21ef316b
  417b09:	cmp    eax,0x7bb3f3e7
  417b0e:	repz mov al,ds:0x10181f01
  417b14:	and    al,0xae
  417b16:	test   BYTE PTR [ecx-0x5fe1968b],bl
  417b1c:	pop    ebx
  417b1d:	bound  esp,QWORD PTR [edi+0x65]
  417b20:	push   esp
  417b21:	pop    ebx
  417b22:	shl    BYTE PTR [eax+0x54],0x25
  417b26:	pushf  
  417b27:	dec    edx
  417b28:	test   DWORD PTR [edx+0x2c],edi
  417b2b:	mov    dh,0xf2
  417b2d:	in     eax,dx
  417b2e:	jno    0x417b2b
  417b30:	adc    DWORD PTR [edx+edi*8-0x2a],ecx
  417b34:	leave  
  417b35:	dec    esp
  417b36:	push   ebx
  417b37:	sub    ah,BYTE PTR [esp+eiz*8]
  417b3a:	fldenv [esi]
  417b3c:	retf   0xe1b8
  417b3f:	(bad)  
  417b41:	and    eax,0xf35bcb43
  417b46:	je     0x417b6a
  417b48:	xchg   esp,eax
  417b49:	in     al,dx
  417b4a:	cmp    DWORD PTR [eax+ebx*1+0x76],ebp
  417b4e:	inc    esi
  417b4f:	cdq    
  417b50:	jb     0x417ae5
  417b52:	out    dx,al
  417b53:	mov    cl,BYTE PTR [bp+di-0x2c07]
  417b58:	(bad)
  417b5b:	dec    edx
  417b5c:	and    eax,0x1e5ce64b
  417b61:	in     eax,dx
  417b62:	cs jne 0x417b88
  417b65:	test   DWORD PTR [ebx-0x49],ecx
  417b68:	js     0x9d164f8a
  417b6e:	xchg   edx,eax
  417b6f:	fistp  QWORD PTR [ebp+0x6b]
  417b72:	push   0x8
  417b74:	pop    edx
  417b75:	sbb    DWORD PTR [eax+eax*2+0x19e7d333],esp
  417b7c:	mov    ds:0x5c13fce,al
  417b81:	fldcw  WORD PTR [ebp-0x669ded3e]
  417b87:	xchg   esp,eax
  417b88:	cmp    eax,DWORD PTR [ecx-0x30f80fd9]
  417b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b8f:	int3   
  417b90:	jge    0x417b1a
  417b92:	mov    BYTE PTR [ebp+0x6dd26959],bh
  417b98:	push   ss
  417b99:	inc    ebx
  417b9a:	rcl    dh,1
  417b9c:	sub    dl,BYTE PTR [eax+0x34]
  417b9f:	dec    ebp
  417ba0:	dec    edx
  417ba1:	xchg   ecx,eax
  417ba2:	in     al,dx
  417ba3:	dec    ebx
  417ba4:	jnp    0x417b37
  417ba6:	dec    esi
  417ba7:	into   
  417ba8:	dec    esi
  417ba9:	adc    DWORD PTR [edi+eax*4+0x1e84ef55],ebx
  417bb0:	mov    bl,0x58
  417bb2:	mov    eax,ds:0xa56acc75
  417bb7:	jp     0x417ba9
  417bb9:	int3   
  417bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bbb:	nop
  417bbc:	ret    
  417bbd:	shr    DWORD PTR [edx-0x2f],1
  417bc0:	add    edi,esp
  417bc2:	mov    ecx,0xdc173ce2
  417bc7:	cmp    al,0x87
  417bc9:	adc    ebx,DWORD PTR [ebp-0x39]
  417bcc:	mov    esi,0xac28c4ad
  417bd1:	out    dx,al
  417bd2:	stos   BYTE PTR es:[edi],al
  417bd3:	icebp  
  417bd4:	call   0x491dc80f
  417bd9:	xchg   ebx,eax
  417bda:	scas   eax,DWORD PTR es:[edi]
  417bdb:	fcomp  DWORD PTR gs:[esp+ecx*4]
  417bdf:	xchg   edi,eax
  417be0:	call   0x4fd6049d
  417be5:	mov    BYTE PTR [eax],al
  417be7:	mov    bh,0xd
  417be9:	loope  0x417bfb
  417beb:	hlt    
  417bec:	jbe    0x417bf8
  417bee:	cmp    bl,dh
  417bf0:	mov    eax,0xe658bd63
  417bf5:	cmp    eax,0x389561ea
  417bfa:	aaa    
  417bfb:	aas    
  417bfc:	cmp    DWORD PTR [bp+si-0x5f92],edi
  417c01:	xchg   ebx,eax
  417c02:	aaa    
  417c03:	out    0x12,eax
  417c05:	mov    DWORD PTR [esi-0x6c],edx
  417c08:	mov    WORD PTR fs:[edi-0xe1b1e92],cs
  417c0f:	adc    bh,BYTE PTR [ecx-0x23]
  417c12:	in     al,dx
  417c13:	inc    esi
  417c14:	loope  0x417bdc
  417c16:	jmp    0x5e30:0xaab72afc
  417c1d:	imul   ecx,DWORD PTR [ecx+0x1e693d12],0x3e9e7229
  417c27:	retf   
  417c28:	mov    eax,0x8aa0d4bf
  417c2d:	jo     0x417c5a
  417c2f:	(bad)  
  417c30:	out    0x22,al
  417c32:	scas   eax,DWORD PTR es:[edi]
  417c33:	add    ebx,0xffffffe6
  417c36:	ret    
  417c37:	add    esp,DWORD PTR [ebp-0x318d6f80]
  417c3d:	cmp    al,0xbc
  417c3f:	pop    ecx
  417c40:	fadd   QWORD PTR [edx+0x1e]
  417c43:	int    0xb
  417c45:	ins    DWORD PTR es:[edi],dx
  417c46:	imul   DWORD PTR [edx]
  417c48:	jge    0x417be2
  417c4a:	outs   dx,DWORD PTR ds:[esi]
  417c4b:	in     al,0x97
  417c4d:	jecxz  0x417c7c
  417c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c50:	mov    esp,0x7be3225d
  417c55:	test   eax,0xd477f141
  417c5a:	jmp    0x80ba8cb2
  417c5f:	jns    0x417cc6
  417c61:	cwde   
  417c62:	enter  0x7937,0x20
  417c66:	ds out dx,al
  417c68:	cs jmp 0x417c0e
  417c6b:	push   0xffffff8d
  417c6d:	ins    DWORD PTR es:[edi],dx
  417c6e:	pop    ebp
  417c6f:	icebp  
  417c70:	out    0xa1,al
  417c72:	loope  0x417ccf
  417c74:	mov    ds:0x7070d9e3,eax
  417c79:	xchg   esi,eax
  417c7a:	mov    ebp,0xd83d0d56
  417c7f:	pop    edi
  417c80:	mov    edx,0x411b918f
  417c85:	dec    esi
  417c86:	mov    ds:0x45329ccb,eax
  417c8b:	cmp    BYTE PTR [ecx+0x29422764],0xfb
  417c92:	stc    
  417c93:	mov    cs,WORD PTR [ecx+ebp*2-0x5]
  417c97:	mov    DWORD PTR [ecx],ebp
  417c99:	cmp    al,0x99
  417c9b:	pop    ebx
  417c9c:	ins    BYTE PTR es:[edi],dx
  417c9d:	clc    
  417c9e:	adc    BYTE PTR [edi+edi*8+0x68632e21],ah
  417ca5:	adc    ch,dl
  417ca7:	pinsrw mm1,WORD PTR [ecx+0x6906c12a],0xb1
  417caf:	dec    esp
  417cb0:	bound  ebx,QWORD PTR [edx+ebp*8+0x300b9227]
  417cb7:	sub    DWORD PTR [ecx+0x7e46eacc],esi
  417cbd:	adc    eax,0xd69c1960
  417cc2:	cmp    BYTE PTR [edx-0x7d],dl
  417cc5:	jl     0x417d07
  417cc7:	loope  0x417ccb
  417cc9:	inc    edi
  417cca:	add    DWORD PTR [eax-0x62],eax
  417ccd:	pop    ebp
  417cce:	icebp  
  417ccf:	cdq    
  417cd0:	dec    eax
  417cd1:	lahf   
  417cd2:	pop    ss
  417cd3:	mov    cl,0xe
  417cd5:	popa   
  417cd6:	out    0x33,eax
  417cd8:	rcr    BYTE PTR [ecx-0x756eb60],cl
  417cde:	xor    bh,dh
  417ce0:	lds    esp,FWORD PTR [ebp-0x76]
  417ce3:	jnp    0x417d63
  417ce5:	into   
  417ce6:	adc    DWORD PTR [eax+0x28],eax
  417ce9:	js     0x417cbf
  417ceb:	xor    eax,DWORD PTR [edi+0x47613a77]
  417cf1:	add    esp,ecx
  417cf3:	jo     0x417d18
  417cf5:	les    esi,FWORD PTR [edi+eiz*4-0x68a974e8]
  417cfc:	jb     0x417cc1
  417cfe:	popa   
  417cff:	adc    eax,0xcd4ea24
  417d04:	dec    esi
  417d05:	(bad)  
  417d06:	scas   al,BYTE PTR es:[edi]
  417d07:	shl    DWORD PTR [ebx-0xc],1
  417d0a:	xchg   edi,eax
  417d0b:	test   ah,cl
  417d0d:	je     0x417ce3
  417d0f:	mov    ebx,0xc33b23d7
  417d14:	push   cs
  417d15:	repz cwde 
  417d17:	xor    esi,DWORD PTR [edi+0x45]
  417d1a:	cli    
  417d1b:	stos   BYTE PTR es:[edi],al
  417d1c:	push   cs
  417d1d:	inc    edi
  417d1e:	mov    WORD PTR [edx-0x61],?
  417d21:	retf   
  417d22:	jmp    0x66c3:0xf5de2a48
  417d29:	xor    DWORD PTR [edx+ecx*4],ebx
  417d2c:	push   eax
  417d2d:	scas   eax,DWORD PTR es:[edi]
  417d2e:	in     al,dx
  417d2f:	xchg   ch,bh
  417d31:	clc    
  417d32:	cdq    
  417d33:	and    esi,DWORD PTR [eax-0x51]
  417d36:	push   ebp
  417d37:	inc    eax
  417d38:	dec    ecx
  417d39:	sbb    edx,edx
  417d3b:	imul   ch
  417d3d:	pop    DWORD PTR [eax-0x72a7117c]
  417d43:	push   es
  417d44:	shl    edi,1
  417d46:	pop    edx
  417d47:	pop    ebp
  417d48:	ret    
  417d49:	das    
  417d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d4b:	or     eax,0xa8fb1552
  417d50:	cdq    
  417d51:	jecxz  0x417d0f
  417d53:	dec    ebx
  417d54:	jo     0x417d58
  417d56:	jns    0x417ce0
  417d58:	pop    ecx
  417d59:	mov    BYTE PTR [eax],ah
  417d5b:	xor    bl,bl
  417d5d:	cmc    
  417d5e:	add    ah,BYTE PTR [esp+edi*1]
  417d61:	into   
  417d62:	xor    BYTE PTR [ecx],0x13
  417d65:	xor    ebp,esi
  417d67:	and    al,0x99
  417d69:	pop    ebx
  417d6a:	int    0xa6
  417d6c:	ja     0x417deb
  417d6e:	shl    BYTE PTR [ecx],cl
  417d70:	pop    es
  417d71:	clc    
  417d72:	push   ebp
  417d73:	in     al,0xd2
  417d75:	repnz xor DWORD PTR [ebx-0x4c],esp
  417d79:	call   0x53174648
  417d7e:	icebp  
  417d7f:	rol    BYTE PTR [ecx-0x2c4f36c4],cl
  417d85:	mov    esp,0xe0e7f645
  417d8a:	add    ebp,ebx
  417d8c:	call   0x85bd:0x8249bb32
  417d93:	int    0x9b
  417d95:	jp     0x417d3a
  417d97:	std    
  417d98:	bound  ebp,QWORD PTR [ebx+0xb]
  417d9b:	jne    0x417df9
  417d9d:	mov    ecx,0x4a6a59d5
  417da2:	mov    edx,0x86eca81b
  417da7:	and    ah,BYTE PTR [ebp-0x3b]
  417daa:	pusha  
  417dab:	mov    al,0xb9
  417dad:	dec    esp
  417dae:	ss test eax,0xe441fd0
  417db4:	shl    edx,1
  417db6:	push   edx
  417db7:	jae    0x417e35
  417db9:	mov    esi,0x7bfb3e41
  417dbe:	jae    0x417d9b
  417dc0:	push   eax
  417dc1:	shr    BYTE PTR [edi-0x1c],1
  417dc4:	mov    bh,0xa3
  417dc6:	ret    
  417dc7:	cmp    eax,DWORD PTR cs:[edx+edx*1+0x42]
  417dcc:	adc    edx,eax
  417dce:	outs   dx,DWORD PTR ds:[esi]
  417dcf:	inc    ecx
  417dd0:	pop    edi
  417dd1:	mov    eax,0xf3efd55
  417dd6:	repz in al,0x79
  417dd9:	cwde   
  417dda:	xor    cl,cl
  417ddc:	or     esi,ebp
  417dde:	xchg   edi,eax
  417ddf:	inc    ecx
  417de0:	push   eax
  417de1:	pop    edx
  417de2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417de4:	cmp    ah,BYTE PTR [ecx]
  417de6:	loop   0x417e42
  417de8:	dec    ecx
  417de9:	xchg   esp,eax
  417dea:	mov    esi,0x12b417eb
  417def:	int    0x47
  417df1:	fild   WORD PTR [eax-0x325a657e]
  417df8:	inc    esi
  417df9:	pop    edi
  417dfa:	loopne 0x417e77
  417dfc:	mov    ebx,DWORD PTR [esi-0x22f1e2dc]
  417e02:	ror    edx,0x40
  417e05:	loopne 0x417df8
  417e07:	pop    ss
  417e08:	or     al,0xa
  417e0a:	cld    
  417e0b:	inc    eax
  417e0c:	sub    BYTE PTR [eax-0x73c59a52],0xdc
  417e13:	sub    BYTE PTR [edi+0x78],dh
  417e16:	and    eax,0x1fe4e0c8
  417e1b:	fwait
  417e1c:	xor    edi,DWORD PTR [edi-0x11ea0848]
  417e22:	xchg   edx,eax
  417e23:	retf   
  417e24:	stos   BYTE PTR es:[edi],al
  417e25:	loope  0x417dd0
  417e27:	test   DWORD PTR [edi+0xf],0x16f186b8
  417e2e:	std    
  417e2f:	pop    ss
  417e30:	rol    DWORD PTR [ebp-0x2d],cl
  417e33:	mov    esp,DWORD PTR [ebx]
  417e35:	sub    dl,BYTE PTR [edx+0x78]
  417e38:	jae    0x417dca
  417e3a:	(bad)  
  417e3b:	adc    DWORD PTR [eax],ebp
  417e3d:	jne    0x417df0
  417e3f:	mov    WORD PTR [edx-0x6d0a5f24],?
  417e45:	jmp    0x911c:0x54d903ff
  417e4c:	scas   al,BYTE PTR es:[edi]
  417e4d:	pop    edx
  417e4e:	idiv   BYTE PTR [ecx+0x30]
  417e51:	jmp    0xe2f7:0x990d7013
  417e58:	dec    esp
  417e59:	retf   0xa7bb
  417e5c:	xlat   BYTE PTR ds:[ebx]
  417e5d:	les    edx,FWORD PTR [ecx+ebx*2]
  417e60:	jecxz  0x417e32
  417e62:	jno    0x417e08
  417e64:	dec    eax
  417e65:	mov    ah,BYTE PTR [edi]
  417e67:	pop    ecx
  417e68:	and    esi,DWORD PTR ds:0xd8942a3d
  417e6e:	jg     0x417ea2
  417e70:	sbb    al,0x7a
  417e72:	and    ebx,DWORD PTR [ebp+0x3e]
  417e75:	scas   al,BYTE PTR es:[edi]
  417e76:	xlat   BYTE PTR ds:[ebx]
  417e77:	inc    ecx
  417e78:	sar    BYTE PTR [ebx+ecx*4],1
  417e7b:	out    0xbc,eax
  417e7d:	mov    cl,0x3c
  417e7f:	jb     0x417eee
  417e81:	mov    WORD PTR [ecx+0x41],?
  417e84:	or     eax,0x5ab35e1a
  417e89:	cmp    BYTE PTR [ecx],0xfd
  417e8c:	sub    esi,DWORD PTR [ebp+0x67]
  417e8f:	add    al,0x68
  417e91:	les    esp,FWORD PTR [edx+0x28]
  417e94:	fistp  WORD PTR [ebx]
  417e96:	stos   BYTE PTR es:[edi],al
  417e97:	sub    eax,0xbd76b73
  417e9c:	pop    eax
  417e9d:	mov    ?,WORD PTR [eax+0x4218fe20]
  417ea3:	sub    DWORD PTR [esi],0x7d
  417ea6:	and    ebp,edi
  417ea8:	xchg   DWORD PTR [edi+0x4d],edx
  417eab:	sub    al,0x34
  417ead:	add    BYTE PTR [eax+edx*8-0x39250820],ch
  417eb4:	jns    0x417e79
  417eb6:	inc    esp
  417eb7:	(bad)  
  417eb8:	sbb    esp,DWORD PTR [edx]
  417eba:	in     al,0xd3
  417ebc:	pop    ebx
  417ebd:	mov    edi,0x138ea24c
  417ec2:	stos   DWORD PTR es:[edi],eax
  417ec3:	hlt    
  417ec4:	mov    WORD PTR [eax+0x34],fs
  417ec7:	cdq    
  417ec8:	xor    ebp,ecx
  417eca:	test   al,bh
  417ecc:	ins    BYTE PTR es:[di],dx
  417ece:	sbb    eax,0xd8c48c56
  417ed3:	aas    
  417ed4:	in     eax,0xef
  417ed6:	arpl   WORD PTR [ecx-0x5b53a388],ax
  417edc:	sub    DWORD PTR [esi+0xdba4699],0xfffffff4
  417ee3:	push   ds
  417ee4:	jo     0x417ee4
  417ee6:	sbb    ah,BYTE PTR [ebp+0x598772b4]
  417eec:	xchg   BYTE PTR [ecx+eax*8+0x3aa74f8c],bh
  417ef3:	fbld   TBYTE PTR [ebx+0x64]
  417ef6:	cmp    BYTE PTR [eax],al
  417ef8:	mov    edx,0x43139bba
  417efd:	sbb    al,0x9b
  417eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f00:	lods   eax,DWORD PTR ds:[esi]
  417f01:	pop    esp
  417f02:	xor    ecx,ebp
  417f04:	mov    cl,0x94
  417f06:	fwait
  417f07:	loop   0x417edc
  417f09:	stc    
  417f0a:	sar    BYTE PTR [eax],cl
  417f0c:	rcl    BYTE PTR [ecx+0x4cb06327],1
  417f12:	ins    DWORD PTR es:[edi],dx
  417f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f14:	mov    ds:0x5157a170,eax
  417f19:	(bad)  
  417f1b:	jmp    0x417f1d
  417f1d:	test   ecx,0x6ae59338
  417f23:	sbb    cl,BYTE PTR [eax+0x6448d12b]
  417f29:	sub    DWORD PTR ds:0x46a29dcb,edi
  417f2f:	pusha  
  417f30:	dec    ebx
  417f31:	daa    
  417f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f33:	lea    esi,[ebp+eax*4-0x5]
  417f37:	mov    gs,WORD PTR [eax+0xa]
  417f3a:	ror    DWORD PTR [ebx-0x3],1
  417f3d:	jnp    0x417f58
  417f3f:	hlt    
  417f40:	ds or  ah,cl
  417f43:	add    cl,dl
  417f45:	add    ebp,ebp
  417f47:	(bad)  
  417f48:	adc    edi,DWORD PTR [ecx+0x13aaa479]
  417f4e:	pushf  
  417f4f:	jnp    0x417f9c
  417f51:	mov    ds:0xdf7c6936,al
  417f56:	int3   
  417f57:	pop    es
  417f58:	hlt    
  417f59:	mov    ds:0xb09e6c92,eax
  417f5e:	xor    al,0x11
  417f60:	lods   eax,DWORD PTR ds:[esi]
  417f61:	mov    ds:0x582d2a47,al
  417f66:	jl     0x417fd6
  417f68:	clc    
  417f69:	fistp  DWORD PTR [eax+0x5f]
  417f6c:	jmp    FWORD PTR [ecx-0x7d]
  417f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f70:	aam    0x74
  417f72:	dec    ebp
  417f73:	test   BYTE PTR [ebx],bh
  417f75:	test   BYTE PTR [edx-0x640499fe],bh
  417f7b:	jmp    0x417f2f
  417f7d:	mov    DWORD PTR [edx-0x38],0x7c68a527
  417f84:	dec    eax
  417f85:	mov    fs,WORD PTR [edx-0x2cbbfb8e]
  417f8b:	mov    esp,0xacd65400
  417f90:	push   cs
  417f91:	fld    DWORD PTR [edi-0xaf67a6]
  417f97:	mov    eax,ds:0xe1327a84
  417f9c:	inc    esp
  417f9d:	cmp    BYTE PTR [ebx+0x61],dl
  417fa0:	bound  ecx,QWORD PTR [ebx+esi*1-0x53]
  417fa4:	dec    esi
  417fa5:	psubusb mm2,QWORD PTR [edi-0x73b4cc60]
  417fac:	cmp    BYTE PTR [esi+eiz*1],ch
  417faf:	idiv   DWORD PTR [ecx-0x4e68d447]
  417fb5:	inc    eax
  417fb6:	mov    edx,0xa314dad0
  417fbb:	inc    esp
  417fbc:	cmp    cl,BYTE PTR ds:0x658796fa
  417fc2:	xchg   edx,eax
  417fc3:	out    dx,al
  417fc4:	pop    ds
  417fc5:	push   ss
  417fc6:	mov    dl,0x6d
  417fc8:	jmp    0x417fdc
  417fca:	lahf   
  417fcb:	xor    ecx,edi
  417fcd:	(bad)  
  417fce:	gs popf 
  417fd0:	inc    esp
  417fd1:	mov    esi,0xe790d063
  417fd6:	adc    al,0x3
  417fd8:	dec    ebp
  417fd9:	mov    edi,0xfb8e6357
  417fde:	and    BYTE PTR [edi],bh
  417fe0:	add    esi,DWORD PTR [ebp+0x5a9e8ef2]
  417fe6:	inc    esi
  417fe7:	mov    dh,0xaf
  417fe9:	lods   al,BYTE PTR ds:[esi]
  417fea:	fiadd  WORD PTR [esi]
  417fec:	dec    ecx
  417fed:	fisubr WORD PTR [esi]
  417fef:	pop    edi
  417ff0:	call   0xecea:0x180eb227
  417ff7:	in     al,dx
  417ff8:	cdq    
  417ff9:	int    0x84
  417ffb:	in     eax,0x83
  417ffd:	aad    0xad
  417fff:	loop   0x417fba
  418001:	fisttp QWORD PTR [eax-0x5a]
  418004:	mov    ?,WORD PTR [edx+0xb]
  418007:	and    bl,BYTE PTR [ebx]
  418009:	addr16 sub al,0xe8
  41800c:	iret   
  41800d:	aam    0xb9
  41800f:	cmp    esi,edi
  418011:	ret    0x8271
  418014:	clc    
  418015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418016:	adc    esp,esi
  418018:	or     ebp,DWORD PTR [esi]
  41801a:	aas    
  41801b:	ds cdq 
  41801d:	lea    ebp,[edx]
  41801f:	in     eax,dx
  418020:	data16 loop 0x418004
  418023:	fisub  WORD PTR [edx+0x4]
  418026:	cmp    al,0x20
  418028:	icebp  
  418029:	lods   eax,DWORD PTR ds:[esi]
  41802a:	mov    BYTE PTR [ebx],0x1c
  41802d:	sub    eax,0xbe16cbf6
  418032:	call   0x66e4854d
  418037:	stos   BYTE PTR es:[edi],al
  418038:	cmc    
  418039:	sub    DWORD PTR [ecx+0x2249deb7],edi
  41803f:	inc    eax
  418040:	int    0xfe
  418042:	dec    ebp
  418043:	inc    ecx
  418044:	dec    ebp
  418045:	xchg   edi,eax
  418046:	bound  ecx,QWORD PTR [eax]
  418048:	sbb    al,0xa1
  41804a:	add    edx,DWORD PTR [eax+0x62b96484]
  418050:	xchg   edi,eax
  418051:	sbb    DWORD PTR [edx-0x67fbf12b],edi
  418057:	daa    
  418058:	int3   
  418059:	outs   dx,BYTE PTR ds:[esi]
  41805a:	dec    DWORD PTR [edi+0x4dd5029e]
  418060:	in     al,0x7a
  418062:	sti    
  418063:	pop    esi
  418064:	mov    dl,0x3c
  418066:	cmp    ch,al
  418068:	test   DWORD PTR [eax+0x614aee12],0x1291f0a6
  418072:	pop    esp
  418073:	int3   
  418074:	dec    ebp
  418075:	add    al,0x4e
  418077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418078:	sbb    BYTE PTR [edx-0x41],0x76
  41807c:	add    DWORD PTR [edx+ecx*2],0x99a26c35
  418083:	in     al,dx
  418084:	jl     0x418069
  418086:	xchg   edi,eax
  418087:	inc    esp
  418088:	inc    ebp
  418089:	mov    WORD PTR [esi+eax*4-0x4d],ds
  41808d:	mov    dl,0x8a
  41808f:	ins    DWORD PTR es:[edi],dx
  418090:	add    BYTE PTR [esi],ah
  418092:	jl     0x41808d
  418094:	xor    ch,dl
  418096:	adc    BYTE PTR [eax],dh
  418098:	(bad)  
  418099:	and    edx,DWORD PTR [eax]
  41809b:	shl    DWORD PTR [ebx],1
  41809d:	and    ch,BYTE PTR [edi+0x784cfa12]
  4180a3:	xchg   ebp,eax
  4180a4:	mov    al,ds:0x8fa73bed
  4180a9:	sahf   
  4180aa:	add    dh,BYTE PTR [edx+0x46ed5162]
  4180b0:	or     al,0x69
  4180b2:	mov    esp,0xd8f1d9f0
  4180b7:	jno    0x418096
  4180b9:	or     esp,DWORD PTR [ebx]
  4180bb:	push   ecx
  4180bc:	jmp    0x63a7:0x151680f6
  4180c3:	mov    cs,WORD PTR [ecx]
  4180c5:	xor    al,0xad
  4180c7:	add    al,0x84
  4180c9:	(bad)  
  4180ca:	pop    edi
  4180cb:	mov    bl,0x1f
  4180cd:	call   0x1cf8:0x90a603be
  4180d4:	ins    DWORD PTR es:[edi],dx
  4180d5:	mov    dl,0xdd
  4180d7:	aas    
  4180d8:	mov    eax,0xa712cfa2
  4180dd:	cmp    ch,dh
  4180df:	mov    ds:0x4f97ae90,eax
  4180e4:	mov    eax,ds:0xcf8e7bf3
  4180e9:	pop    es
  4180ea:	sti    
  4180eb:	fwait
  4180ec:	xchg   esp,eax
  4180ed:	idiv   DWORD PTR [edi-0x49]
  4180f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180f1:	jmp    0x4180ab
  4180f3:	lods   eax,DWORD PTR ds:[esi]
  4180f4:	push   ebx
  4180f5:	mov    al,ds:0x38c9edb9
  4180fa:	or     bl,BYTE PTR [eax-0x76]
  4180fd:	les    ebp,FWORD PTR [esi-0x59e77645]
  418103:	das    
  418104:	out    0x2d,eax
  418106:	fdivr  DWORD PTR [ebx+ebx*8+0x66]
  41810a:	cmp    BYTE PTR [edi],dl
  41810c:	(bad)  [eax+ebx*8]
  41810f:	pop    eax
  418110:	test   DWORD PTR [edx-0x5979f110],ecx
  418116:	add    eax,0xc6297af
  41811b:	pop    esp
  41811c:	enter  0xbff8,0x41
  418120:	in     eax,dx
  418121:	(bad)  
  418122:	pop    edi
  418123:	adc    BYTE PTR [edi],0xc5
  418126:	sub    al,0x77
  418128:	cmp    BYTE PTR [edi+0x7f],0xef
  41812c:	xchg   ecx,eax
  41812d:	(bad)  [edi-0x77f90e74]
  418133:	mov    BYTE PTR [edx-0x38],al
  418136:	test   DWORD PTR [edi+ebp*1],ebx
  418139:	imul   edi,DWORD PTR [edx-0x61],0x23
  41813d:	(bad)  
  41813e:	cmp    bh,BYTE PTR [esi+ecx*8-0x219ac8f0]
  418145:	stos   DWORD PTR es:[edi],eax
  418146:	scas   eax,DWORD PTR es:[edi]
  418147:	test   BYTE PTR ds:0xc2c824e1,0x6b
  41814e:	xor    BYTE PTR [ebx],ch
  418150:	adc    eax,0x88a62cdf
  418155:	sbb    DWORD PTR [edi-0x1f8fe809],edx
  41815b:	lods   al,BYTE PTR ds:[esi]
  41815c:	jge    0x4181d8
  41815e:	jl     0x4181d7
  418160:	daa    
  418161:	out    0x7c,eax
  418163:	aas    
  418164:	shl    BYTE PTR [ebx-0x72031d7e],cl
  41816a:	jge    0x418178
  41816c:	pushf  
  41816d:	retf   
  41816e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41816f:	(bad)  
  418170:	aaa    
  418171:	or     dh,BYTE PTR [ebx]
  418173:	dec    esp
  418174:	in     al,0x8e
  418176:	jg     0x41815d
  418178:	cmp    eax,0x4cac2c3
  41817d:	push   eax
  41817e:	xchg   ebp,edx
  418180:	add    BYTE PTR [esi-0x27],dl
  418183:	xchg   esi,eax
  418184:	sbb    eax,0x4ad78c27
  418189:	dec    esi
  41818a:	xor    al,0xaa
  41818c:	mov    ds:0x7b6b1fc3,eax
  418191:	mov    bl,0x7b
  418193:	xor    al,0xb4
  418195:	lods   eax,DWORD PTR ds:[esi]
  418196:	xchg   esp,eax
  418197:	xchg   DWORD PTR [edi-0x13449e57],edx
  41819d:	in     al,0xf9
  41819f:	repnz dec ebp
  4181a1:	cmp    BYTE PTR [ebp+0x5f],bh
  4181a4:	test   eax,0x31e8cd5e
  4181a9:	mov    esi,0x53737e37
  4181ae:	pop    edi
  4181af:	mov    DWORD PTR ds:0xaf724259,0x20448d6e
  4181b9:	xchg   ebx,eax
  4181ba:	rol    eax,cl
  4181bc:	push   eax
  4181bd:	clc    
  4181be:	push   ebx
  4181bf:	fst    DWORD PTR [ebx]
  4181c1:	push   cs
  4181c2:	ret    
  4181c3:	cmp    eax,eax
  4181c5:	hlt    
  4181c6:	int    0x2f
  4181c8:	imul   edi,edx,0xf1995e41
  4181ce:	cmp    eax,0xe70df1f4
  4181d3:	retf   
  4181d4:	cmp    BYTE PTR [ecx+0x794a35e9],ch
  4181da:	shl    DWORD PTR [edx-0x16312226],1
  4181e0:	fcomp  QWORD PTR [esi+ebp*4-0x59]
  4181e4:	loop   0x418235
  4181e6:	into   
  4181e7:	pop    eax
  4181e8:	pop    esp
  4181e9:	jmp    esi
  4181eb:	pop    eax
  4181ec:	mov    ebx,0x1538be9e
  4181f1:	adc    ax,0x7ac0
  4181f5:	test   al,0xbc
  4181f7:	pop    ebp
  4181f8:	jmp    0x418240
  4181fa:	ins    DWORD PTR es:[edi],dx
  4181fb:	mov    ch,0x5a
  4181fd:	pushf  
  4181fe:	add    DWORD PTR [edx],0xb452fbf8
  418204:	scas   al,BYTE PTR es:[edi]
  418205:	nop
  418206:	(bad)  
  418207:	mov    dl,0x18
  418209:	jle    0x4181ee
  41820b:	sub    BYTE PTR gs:[edi-0x2d],dl
  41820f:	fdiv   DWORD PTR [eax]
  418211:	sbb    ch,BYTE PTR [ecx-0x2306c51b]
  418217:	jmp    0x4008eb36
  41821c:	popa   
  41821d:	paddusw mm1,QWORD PTR [edx+0x55d2f818]
  418224:	or     bl,BYTE PTR ds:0xfedf2fcf
  41822a:	xor    ebx,DWORD PTR [ebx]
  41822c:	mov    ds:0xc9d13b04,al
  418231:	mov    bh,0xb1
  418233:	pop    ecx
  418234:	mov    ebp,0xdac059cb
  418239:	(bad)  
  41823a:	outs   dx,DWORD PTR ds:[esi]
  41823b:	inc    ecx
  41823c:	mov    dl,0x8b
  41823e:	test   BYTE PTR [eax+ecx*1-0x79a7f62c],bh
  418245:	push   ebp
  418246:	sbb    ah,bh
  418248:	fdivr  st,st(1)
  41824a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41824b:	leave  
  41824c:	and    al,BYTE PTR [edx+edx*1]
  41824f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418250:	int    0x3b
  418252:	popa   
  418253:	mov    edx,0x7ee4828e
  418258:	stos   BYTE PTR es:[edi],al
  418259:	pop    edi
  41825a:	pop    edi
  41825b:	aam    0xd6
  41825d:	stos   DWORD PTR es:[edi],eax
  41825e:	outs   dx,BYTE PTR ds:[esi]
  41825f:	xlat   BYTE PTR ds:[ebx]
  418260:	loop   0x4182bb
  418262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418263:	xchg   esp,eax
  418264:	jb     0x4182e5
  418266:	xchg   edx,eax
  418267:	pusha  
  418268:	aas    
  418269:	pop    eax
  41826a:	add    BYTE PTR [esi],dl
  41826c:	push   edi
  41826d:	adc    BYTE PTR [ebx-0x1e],ch
  418270:	xor    dl,bl
  418272:	mov    ebx,0x1c6d5633
  418277:	fisub  DWORD PTR [esi+ebx*8]
  41827a:	inc    edi
  41827b:	out    0x61,al
  41827d:	loopne 0x4182f9
  41827f:	pop    ebp
  418280:	push   0x26
  418282:	shl    BYTE PTR [ecx-0x7c],1
  418285:	test   al,0x8a
  418287:	adc    bl,BYTE PTR [ebx+0x2af369f5]
  41828d:	imul   ebp,DWORD PTR [edi-0x42],0x3d82dc53
  418294:	(bad)  [esi+eiz*1+0x15]
  418298:	iret   
  418299:	call   0x8776:0xe1b8df1
  4182a0:	clc    
  4182a1:	out    dx,al
  4182a2:	movsx  edx,BYTE PTR [ebx-0x1b]
  4182a6:	fidiv  WORD PTR [esi-0x6ffaa419]
  4182ac:	fcomp  QWORD PTR [eax]
  4182ae:	ret    0x9ff2
  4182b1:	add    edi,ecx
  4182b3:	add    BYTE PTR [esi+0x155a07dd],ah
  4182b9:	out    0xed,al
  4182bb:	mov    ch,0xfd
  4182bd:	(bad)  
  4182be:	jg     0x418301
  4182c0:	or     eax,0xd8dce0ca
  4182c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c6:	adc    DWORD PTR [ecx+0x44],esp
  4182c9:	sub    eax,0xb6a9e7a6
  4182ce:	nop
  4182cf:	mov    ah,0xd1
  4182d1:	sbb    eax,0xa26ef759
  4182d6:	test   BYTE PTR [ebp+0x70],bh
  4182d9:	loop   0x418322
  4182db:	and    al,0x8
  4182dd:	xor    bh,ah
  4182df:	sbb    bh,0x44
  4182e2:	mov    ecx,DWORD PTR [eax-0x26]
  4182e5:	mov    DWORD PTR [ecx],esp
  4182e7:	jg     0x41827a
  4182e9:	loope  0x4182b5
  4182eb:	dec    esp
  4182ec:	leave  
  4182ed:	mov    ah,0x8b
  4182ef:	mov    edx,0xf2878940
  4182f4:	cmp    ecx,DWORD PTR [ebx]
  4182f6:	mov    dh,0x30
  4182f8:	sar    DWORD PTR [ebx-0x30ceaac7],cl
  4182fe:	jo     0x418376
  418300:	mul    BYTE PTR [esi]
  418302:	xor    eax,0xdfb66dd6
  418307:	jmp    0x24cc:0x5cb94aa9
  41830e:	jns    0x418300
  418310:	into   
  418311:	ret    0x950d
  418314:	xchg   edx,eax
  418315:	shl    DWORD PTR [ebp+0x4c],1
  418318:	pop    esi
  418319:	jno    0x4182d2
  41831b:	dec    ebx
  41831c:	stos   BYTE PTR es:[edi],al
  41831d:	imul   edx,esi,0xffffffe7
  418320:	xchg   ebx,eax
  418321:	dec    edx
  418322:	test   DWORD PTR [ebp+0x61],edi
  418325:	ss cwde 
  418327:	cs ja  0x418371
  41832a:	sbb    eax,0x492edda7
  41832f:	sub    edi,ebx
  418331:	mov    ebp,0x8a1b14
  418336:	mov    al,ds:0x347b2e7b
  41833b:	lds    edx,FWORD PTR [ebp-0x18]
  41833e:	jge    0x4182d6
  418340:	jns    0x4182c5
  418342:	dec    ebp
  418343:	(bad)  
  418344:	or     DWORD PTR [edi-0x21996170],0x1a
  41834b:	and    esp,DWORD PTR [edi]
  41834d:	and    ebp,DWORD PTR [ebx+0x13b34a1b]
  418353:	pop    ecx
  418354:	pop    esp
  418355:	jnp    0x41839a
  418357:	lods   eax,DWORD PTR ds:[esi]
  418358:	jno    0x4183c1
  41835a:	jo     0x41836d
  41835c:	jne    0x418310
  41835e:	out    0x50,al
  418360:	pop    ss
  418361:	test   al,0xa1
  418363:	sub    eax,0x6a6da941
  418368:	int3   
  418369:	fldenv [ebx-0x6d]
  41836c:	sti    
  41836d:	adc    DWORD PTR [ecx+eiz*2-0x274e56a6],ecx
  418374:	jg     0x41830f
  418376:	out    dx,eax
  418377:	xor    BYTE PTR [eax+ecx*1],bl
  41837a:	jmp    0x41838c
  41837c:	imul   eax,DWORD PTR [edi-0x659b5cb0],0xc1158d88
  418386:	inc    ecx
  418387:	pop    es
  418388:	sbb    dh,BYTE PTR [esi+0xf66ebb5]
  41838e:	or     al,0xf7
  418390:	ins    DWORD PTR es:[edi],dx
  418391:	sub    al,0x2f
  418393:	mov    bl,0xb9
  418395:	sub    DWORD PTR [edi-0x54],0x6ebd3b19
  41839c:	cmp    BYTE PTR [ebx+0x5f08eda2],0x71
  4183a3:	and    eax,0xe034331f
  4183a8:	(bad)  
  4183a9:	mov    ch,0xc3
  4183ab:	mov    dl,0xd3
  4183ad:	push   0x55440c9c
  4183b2:	or     BYTE PTR [esp+eax*2-0x68659f03],cl
  4183b9:	enter  0x6dfe,0xb2
  4183bd:	arpl   ax,si
  4183bf:	test   BYTE PTR [ebx+edi*4+0x596a3394],bl
  4183c6:	adc    ebp,edi
  4183c8:	ret    
  4183c9:	dec    ebp
  4183ca:	pop    ecx
  4183cb:	adc    eax,0x630d7301
  4183d0:	sahf   
  4183d1:	sbb    bh,BYTE PTR [ebp+0x4c]
  4183d4:	jnp    0x4183ce
  4183d6:	jmp    0x7259b84
  4183db:	test   eax,0x2b4b1a2a
  4183e0:	popa   
  4183e1:	pop    ecx
  4183e2:	pop    esp
  4183e3:	cmp    ebx,DWORD PTR [esi]
  4183e5:	inc    ebp
  4183e7:	les    ecx,FWORD PTR [ecx]
  4183e9:	pop    ss
  4183ea:	jmp    0x418418
  4183ec:	inc    ecx
  4183ed:	push   esi
  4183ee:	lahf   
  4183ef:	cmp    eax,0x59468a7e
  4183f4:	inc    ecx
  4183f5:	std    
  4183f6:	xor    DWORD PTR [ebp+0x469f0ac8],0xedaf23b2
  418400:	xor    dl,BYTE PTR [eax]
  418402:	add    BYTE PTR [ebx+ebp*4-0x42afeef],dh
  418409:	jno    0x4183ae
  41840b:	leave  
  41840c:	push   edi
  41840d:	push   esp
  41840e:	lahf   
  41840f:	push   eax
  418410:	aaa    
  418411:	xchg   esp,eax
  418412:	inc    esp
  418413:	fistp  QWORD PTR [edi+0x6fcf1a7d]
  418419:	loope  0x41840f
  41841b:	shl    DWORD PTR [ebp-0x251f3529],1
  418421:	in     eax,0x52
  418423:	stc    
  418424:	adc    al,0xde
  418426:	aam    0x7d
  418428:	not    BYTE PTR [ecx+ebx*8-0x3e]
  41842c:	(bad)  
  41842d:	xor    BYTE PTR [eax-0x68],al
  418430:	xor    BYTE PTR [eax+0x58c51f48],al
  418436:	or     DWORD PTR [edi-0x5aa068cf],esp
  41843c:	xor    al,0xb8
  41843e:	sub    bh,BYTE PTR [edi]
  418440:	push   ss
  418441:	(bad)  
  418443:	test   DWORD PTR [edx-0x7f],edi
  418446:	enter  0x1ca3,0x57
  41844a:	sub    al,0x79
  41844c:	sub    eax,0x9521bcd7
  418451:	mov    bh,0x9a
  418453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418454:	sahf   
  418455:	mov    ebp,0x30086f1e
  41845a:	shl    DWORD PTR [edx+0x39],1
  41845d:	popf   
  41845e:	repnz and al,0x3b
  418461:	ret    0x895a
  418464:	out    dx,eax
  418465:	push   ss
  418466:	push   0xb5564d6e
  41846b:	lock sar ecx,0x72
  41846f:	in     eax,dx
  418470:	(bad)  
  418472:	jo     0x41847c
  418474:	(bad)  
  418475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418476:	sub    BYTE PTR [ebx],al
  418478:	push   0x78b7860
  41847d:	mov    edi,ds
  41847f:	dec    edi
  418480:	test   BYTE PTR [edi+0x5f],cl
  418483:	ret    
  418484:	push   ds
  418485:	ffreep st(2)
  418487:	enter  0x8f3b,0x1c
  41848b:	and    al,bl
  41848d:	popa   
  41848e:	retf   0x3c81
  418491:	xor    ch,bh
  418493:	inc    ebx
  418494:	jno    0x41850e
  418496:	clc    
  418497:	mov    ch,0x60
  418499:	cmp    DWORD PTR [esi+ebx*8],edi
  41849c:	cmp    BYTE PTR [edi-0x2b],0xef
  4184a0:	mov    al,0xfd
  4184a2:	xchg   esi,eax
  4184a3:	int3   
  4184a4:	nop
  4184a5:	dec    edi
  4184a6:	in     eax,dx
  4184a7:	sbb    BYTE PTR [edi+0x1b],ah
  4184aa:	sbb    ah,bl
  4184ac:	mov    esi,0x7b279bfc
  4184b1:	cli    
  4184b2:	mov    ah,0xcc
  4184b4:	lods   al,BYTE PTR ds:[esi]
  4184b5:	mov    cl,0x9d
  4184b7:	cmp    DWORD PTR [edx+0x35e8d65e],eax
  4184bd:	sbb    al,0x56
  4184bf:	sbb    edi,DWORD PTR [edi+0x6ec2eed]
  4184c5:	pusha  
  4184c6:	pop    es
  4184c7:	mov    DWORD PTR [edi-0x69],0x1d71325
  4184ce:	daa    
  4184cf:	clc    
  4184d0:	jns    0x418479
  4184d2:	aaa    
  4184d3:	in     al,0xdb
  4184d5:	cmp    DWORD PTR [ecx+0x62],ebp
  4184d8:	fcom   DWORD PTR [edx-0x23c00504]
  4184de:	pusha  
  4184df:	pop    eax
  4184e0:	pop    edi
  4184e1:	cmp    ah,BYTE PTR [esi-0x59]
  4184e4:	jbe    0x418510
  4184e6:	cmp    DWORD PTR [ebp+0x13c9dbab],0xffffffdf
  4184ed:	stos   BYTE PTR es:[edi],al
  4184ee:	mov    ch,0xf0
  4184f0:	(bad)  
  4184f1:	mov    ds:0x6a1e8e85,al
  4184f6:	push   edi
  4184f7:	xchg   ebp,eax
  4184f8:	push   ebp
  4184f9:	mov    dh,0x19
  4184fb:	addr16 cmc 
  4184fd:	out    0xf0,eax
  4184ff:	inc    esp
  418500:	(bad)
  418503:	adc    ebp,DWORD PTR [edi-0x456213d7]
  418509:	jns    0x4184bf
  41850b:	rcr    DWORD PTR [ebx-0x56575f85],1
  418511:	repnz std 
  418513:	pop    ss
  418514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418515:	pusha  
  418516:	dec    edx
  418517:	aaa    
  418518:	scas   eax,DWORD PTR es:[edi]
  418519:	and    ebx,eax
  41851b:	lods   al,BYTE PTR ds:[esi]
  41851c:	push   ds
  41851d:	inc    edi
  41851e:	call   DWORD PTR [ecx]
  418520:	(bad)  
  418521:	icebp  
  418522:	pushf  
  418523:	jg     0x418523
  418525:	sub    eax,0x1e4de39e
  41852a:	lds    esi,FWORD PTR [ebp-0x676231e1]
  418530:	and    BYTE PTR [edx-0x6c64f131],ah
  418536:	mov    dh,0x5c
  418538:	out    dx,al
  418539:	sbb    BYTE PTR [eax-0x41d63cb],0xa4
  418540:	cld    
  418541:	push   ss
  418542:	xchg   ebp,eax
  418543:	sbb    BYTE PTR [esi+0x59],ch
  418546:	mov    cl,0x51
  418548:	mov    DWORD PTR [edx+edi*2+0x3e],0x7eab137a
  418550:	std    
  418551:	mov    dl,0x64
  418553:	inc    ebp
  418554:	enter  0xe68f,0xc8
  418558:	js     0x418555
  41855a:	or     dl,BYTE PTR [esi+0x2c]
  41855d:	dec    esp
  41855e:	das    
  41855f:	cmp    BYTE PTR [esi-0x9c08420],0x90
  418566:	gs mov edx,0xffa46f58
  41856c:	mov    cl,0x1f
  41856e:	adc    DWORD PTR [edx+ebx*1-0x6b],esi
  418572:	div    BYTE PTR [edi-0x31fd3913]
  418578:	jo     0x4185f6
  41857a:	jg     0x418582
  41857c:	push   ds
  41857d:	sbb    DWORD PTR [esi],ecx
  41857f:	data16 adc ch,0x64
  418583:	or     ebp,DWORD PTR [ebp+0x8c2d51a]
  418589:	push   ebp
  41858a:	dec    esi
  41858b:	pusha  
  41858c:	or     ch,dh
  41858e:	add    eax,ebx
  418590:	xor    eax,eax
  418592:	pop    ebx
  418593:	arpl   WORD PTR [ecx-0x10daf04a],di
  418599:	xchg   ch,bl
  41859b:	pop    ecx
  41859c:	test   edi,edi
  41859e:	or     eax,0x8837dde9
  4185a3:	sbb    DWORD PTR [edx-0x775eb582],0x7fc867f1
  4185ad:	push   ebx
  4185ae:	jmp    0xe9c:0x2db7f593
  4185b5:	sar    al,cl
  4185b7:	xor    al,0xae
  4185b9:	fisub  WORD PTR [edx]
  4185bb:	jmp    0x50b9:0x88b61a17
  4185c2:	rcl    BYTE PTR [ebx+0x36a47797],1
  4185c8:	pusha  
  4185c9:	xor    bl,ah
  4185cb:	mov    esi,0x97c46611
  4185d0:	or     esi,esp
  4185d2:	xor    eax,0x1f0fef29
  4185d7:	outs   dx,BYTE PTR ds:[esi]
  4185d8:	mov    eax,ds:0x78e5be9f
  4185dd:	inc    eax
  4185de:	and    ebp,DWORD PTR [edx]
  4185e0:	mov    eax,ds:0x347eae06
  4185e5:	imul   edx,DWORD PTR ds:0x8a206a5f,0x697284a0
  4185ef:	pop    eax
  4185f0:	mov    ah,0xbf
  4185f2:	loop   0x4185fb
  4185f4:	mov    dl,0x75
  4185f6:	int3   
  4185f7:	imul   ebp,DWORD PTR ds:0xab32b4a2,0xffffffc9
  4185fe:	dec    edi
  4185ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418600:	rcl    DWORD PTR [ebp+0x61],0x48
  418604:	jo     0x4185cc
  418606:	sbb    al,0x9
  418608:	cmc    
  418609:	stos   DWORD PTR es:[edi],eax
  41860a:	(bad)  
  41860c:	push   ds
  41860d:	mov    ebp,0xf757fd9c
  418612:	inc    ecx
  418613:	das    
  418614:	mov    ebp,DWORD PTR [edx+edi*4-0x52]
  418618:	inc    eax
  418619:	sti    
  41861a:	jg     0x4185f6
  41861c:	dec    ebp
  41861d:	mov    ebx,0xcc4b9a33
  418622:	or     edi,DWORD PTR [eax-0xb]
  418625:	mov    esi,0x55836b6
  41862a:	in     al,dx
  41862b:	mov    ah,0x15
  41862d:	je     0x4185e1
  41862f:	pop    es
  418630:	push   esi
  418631:	or     dl,bl
  418633:	mov    ds:0x5ba410e,al
  418638:	int    0xa5
  41863a:	adc    BYTE PTR [esi-0x71],al
  41863d:	outs   dx,BYTE PTR ds:[esi]
  41863e:	call   DWORD PTR [esi+0x775d4b7e]
  418644:	xchg   esp,eax
  418645:	push   esp
  418646:	inc    edx
  418647:	lock inc ebp
  418649:	pop    ds
  41864a:	loope  0x41869a
  41864c:	jns    0x418672
  41864e:	data16 ins BYTE PTR es:[edi],dx
  418650:	mov    eax,0x32594096
  418655:	xor    esp,edx
  418657:	int3   
  418658:	push   ds
  418659:	jle    0x41861d
  41865b:	loope  0x4186a6
  41865d:	sbb    al,0xbb
  41865f:	rcr    BYTE PTR [eax],cl
  418661:	hlt    
  418662:	addr16 pop esp
  418664:	jmp    0x418670
  418666:	js     0x418693
  418668:	push   ebx
  418669:	adc    edx,ebp
  41866b:	mov    ds:0x5a9e8735,al
  418670:	xchg   edx,eax
  418671:	add    ch,BYTE PTR [ebx+esi*8+0x7548ed4e]
  418678:	mov    ch,0x9a
  41867a:	mov    cs,WORD PTR [ebx]
  41867c:	mov    al,ds:0x6106c003
  418681:	js     0x41861f
  418683:	outs   dx,DWORD PTR ds:[esi]
  418684:	enter  0xb79d,0xcb
  418688:	lds    esi,FWORD PTR [ebx+ebx*4]
  41868b:	fldenv [ebx]
  41868d:	xchg   edi,eax
  41868e:	jo     0x41867e
  418690:	rol    BYTE PTR [esi-0x21e60f70],0xb9
  418697:	mov    esi,0xc8595434
  41869c:	fbstp  TBYTE PTR [edi+ebx*4]
  41869f:	mov    bl,0xca
  4186a1:	in     al,dx
  4186a2:	push   edx
  4186a3:	fwait
  4186a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186a5:	mov    ds:0x4ab05476,al
  4186aa:	scas   eax,DWORD PTR es:[edi]
  4186ab:	mov    ds:0x6cf7b9f4,eax
  4186b0:	sub    BYTE PTR [esp+edx*4],0x2f
  4186b4:	mov    fs,WORD PTR es:[esp+ecx*2+0x58b1295a]
  4186bc:	xor    al,0x8a
  4186be:	or     bl,cl
  4186c0:	xchg   esi,eax
  4186c1:	add    cl,bh
  4186c3:	fmul   DWORD PTR [eax]
  4186c5:	add    cl,cl
  4186c7:	ja     0x41864b
  4186c9:	pop    eax
  4186ca:	inc    esp
  4186cb:	dec    edx
  4186cc:	xchg   esp,eax
  4186cd:	cmc    
  4186ce:	pop    esi
  4186cf:	xor    al,0x75
  4186d1:	std    
  4186d2:	mov    ebp,0x1e00a91b
  4186d7:	xor    al,0x5f
  4186d9:	adc    bh,BYTE PTR [eax-0x18c4d96b]
  4186df:	loop   0x418724
  4186e1:	sar    BYTE PTR [edx-0x4],cl
  4186e4:	or     esi,DWORD PTR [ecx]
  4186e6:	mov    dl,0x6
  4186e8:	add    eax,0x903500a
  4186ed:	push   es
  4186ee:	pop    eax
  4186ef:	mov    ecx,0xdbea4e97
  4186f4:	jg     0x418724
  4186f6:	pop    esi
  4186f7:	and    dh,BYTE PTR [edi+0x2e9e9a40]
  4186fd:	mov    esp,0x5aeb545a
  418702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418703:	repz cmp DWORD PTR [edi],0x42
  418707:	das    
  418708:	and    DWORD PTR [esi+0x42643e50],0x37ef32b3
  418712:	fwait
  418713:	call   0x9e29:0x7cf9aaa7
  41871a:	mov    cl,0x49
  41871c:	jl     0x4186f6
  41871e:	or     bh,dl
  418720:	sub    al,0x7c
  418722:	(bad)  
  418723:	pop    ebx
  418724:	inc    ebp
  418725:	mov    dh,0x86
  418727:	jp     0x418708
  418729:	js     0x4187a4
  41872b:	sub    ah,ch
  41872d:	jns    0x4186c2
  41872f:	ins    DWORD PTR es:[edi],dx
  418730:	xchg   esi,eax
  418731:	fnsave [ebp+0x45c5f96e]
  418737:	test   DWORD PTR [ecx+0x70],eax
  41873a:	inc    eax
  41873b:	inc    edx
  41873c:	sbb    al,0x48
  41873e:	sub    esi,ecx
  418740:	cli    
  418741:	call   0xeb1d18d6
  418746:	dec    ecx
  418747:	ins    DWORD PTR es:[edi],dx
  418748:	out    0xfc,eax
  41874a:	sub    al,0xc0
  41874c:	adc    bh,al
  41874e:	jge    0x4187a2
  418750:	sbb    al,0xd4
  418752:	jns    0x418748
  418754:	add    BYTE PTR [esi+eiz*1-0x32],ch
  418758:	adc    DWORD PTR [ecx],esi
  41875a:	adc    dh,ch
  41875c:	add    DWORD PTR [edi-0x55],eax
  41875f:	std    
  418760:	ret    0xca1e
  418763:	cwde   
  418764:	jge    0x4187b7
  418766:	adc    eax,0x65740564
  41876b:	icebp  
  41876c:	popf   
  41876d:	adc    al,0xc7
  41876f:	push   ebp
  418770:	xchg   esp,eax
  418771:	out    dx,al
  418772:	and    edx,eax
  418774:	outs   dx,BYTE PTR ds:[esi]
  418775:	ficomp DWORD PTR [eax]
  418777:	jge    0x418766
  418779:	jmp    0x7ab7:0x7b55dd8c
  418780:	in     al,0x59
  418782:	xchg   ebx,eax
  418783:	xchg   DWORD PTR [esi],ebp
  418785:	xchg   ebp,eax
  418786:	cdq    
  418787:	ja     0x41875f
  418789:	dec    ebp
  41878a:	jmp    FWORD PTR [edx]
  41878c:	push   ds
  41878d:	sti    
  41878e:	push   ds
  41878f:	mov    ch,0xd6
  418791:	push   0x481faa38
  418796:	dec    edx
  418797:	pop    DWORD PTR [edx]
  418799:	test   DWORD PTR [ebx-0x6d],edx
  41879c:	in     eax,dx
  41879d:	je     0x41880e
  41879f:	pop    edi
  4187a0:	je     0x418808
  4187a2:	jb     0x41874e
  4187a4:	sbb    DWORD PTR [ebx],edi
  4187a6:	sti    
  4187a7:	pop    eax
  4187a8:	dec    ebx
  4187a9:	cmp    BYTE PTR [edx-0x28bd39a8],al
  4187af:	loope  0x418749
  4187b1:	push   ebp
  4187b2:	mov    ds:0xaccbae50,al
  4187b7:	bound  eax,QWORD PTR [di]
  4187ba:	mov    bh,BYTE PTR [edi+edi*4]
  4187bd:	call   0xc9841e4a
  4187c2:	mov    esi,0x420a8bbb
  4187c7:	retf   0xa836
  4187ca:	mov    eax,ds:0x9ffbcc9f
  4187cf:	jge    0x4187bb
  4187d1:	push   edi
  4187d2:	mov    al,0xe9
  4187d4:	dec    edx
  4187d5:	les    esp,FWORD PTR [edx+0x3a]
  4187d8:	mov    esi,0x2f2997f
  4187dd:	bound  esi,QWORD PTR [ebx-0x49]
  4187e0:	fdiv   DWORD PTR [eax-0x3b7dd6bd]
  4187e6:	jo     0x418772
  4187e8:	stos   BYTE PTR es:[edi],al
  4187e9:	adc    al,0xb1
  4187eb:	and    esi,DWORD PTR [edx]
  4187ed:	push   DWORD PTR [ecx+0x1df0dd5d]
  4187f3:	out    0x78,al
  4187f5:	nop
  4187f6:	or     ebx,DWORD PTR gs:[ebx+0x3551e07c]
  4187fd:	mov    esi,0x83db4ab6
  418802:	stos   BYTE PTR es:[edi],al
  418803:	dec    DWORD PTR [edi-0x4f]
  418806:	popf   
  418807:	push   edi
  418808:	ins    DWORD PTR es:[edi],dx
  418809:	xchg   edi,eax
  41880a:	pop    ds
  41880b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41880c:	test   al,0xe4
  41880e:	inc    eax
  41880f:	ret    0x9f1b
  418812:	(bad)  
  418814:	dec    ebx
  418815:	fiadd  DWORD PTR [esi]
  418817:	add    ch,BYTE PTR [edx-0x5ea743b7]
  41881d:	mov    ebx,0x50bc7e98
  418822:	stos   DWORD PTR es:[edi],eax
  418823:	pusha  
  418824:	mov    eax,ecx
  418826:	pop    es
  418827:	sti    
  418828:	mov    BYTE PTR [ecx-0x5a],al
  41882b:	inc    ebp
  41882c:	dec    eax
  41882d:	sbb    al,0x49
  41882f:	jge    0x418876
  418831:	push   es
  418832:	(bad)  [edx]
  418834:	or     esp,esp
  418836:	neg    BYTE PTR ds:0x36e8b996
  41883c:	retf   
  41883d:	dec    edx
  41883e:	fst    QWORD PTR [eax+0x48]
  418841:	pop    esp
  418842:	repnz mov ebx,0x1b654107
  418848:	mov    eax,ds:0x94bb709b
  41884d:	xlat   BYTE PTR ds:[ebx]
  41884e:	outs   dx,BYTE PTR ds:[esi]
  41884f:	pop    edi
  418850:	inc    edi
  418851:	or     ecx,DWORD PTR [edi-0x17]
  418854:	inc    DWORD PTR [ebx+ecx*2-0x13]
  418858:	cmp    BYTE PTR [esi+0x7d],ah
  41885b:	retf   
  41885c:	mov    al,0x18
  41885e:	cwde   
  41885f:	jge    0x4188b3
  418861:	stos   BYTE PTR es:[edi],al
  418862:	cmp    BYTE PTR [edx-0x27],ch
  418865:	sbb    DWORD PTR [ebp-0x2f],0x2a
  418869:	leave  
  41886a:	inc    eax
  41886b:	and    cl,bl
  41886d:	xchg   ecx,eax
  41886e:	cmp    bh,BYTE PTR [eax-0x6f71aaa0]
  418874:	lock jns 0x418855
  418877:	ror    DWORD PTR [eax+0x7b],0xea
  41887b:	aas    
  41887c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41887d:	out    dx,eax
  41887e:	jl     0x418885
  418880:	mov    esp,0xb7e7bb22
  418885:	xchg   edx,eax
  418886:	add    eax,0xdce731b
  41888b:	or     edx,DWORD PTR [edx+0x5a397d29]
  418891:	(bad)  
  418893:	lahf   
  418894:	test   al,0xa7
  418896:	aam    0xe7
  418898:	mov    edx,0x7af91f03
  41889d:	jl     0x418891
  41889f:	loop   0x41891e
  4188a1:	nop
  4188a2:	and    BYTE PTR [edx+ebp*2-0x34],al
  4188a6:	sub    edi,DWORD PTR [esi]
  4188a8:	jmp    0x418918
  4188aa:	mov    ch,0x60
  4188ac:	pop    eax
  4188ad:	int3   
  4188ae:	sahf   
  4188af:	jmp    0x4188df
  4188b1:	arpl   WORD PTR [ebp-0x390d3953],cx
  4188b7:	imul   esp,DWORD PTR [edx-0x46],0x30135ef0
  4188be:	sbb    BYTE PTR [edx],bl
  4188c0:	idiv   BYTE PTR [ebx-0x31f86d8a]
  4188c6:	push   0xffffffba
  4188c8:	push   ds
  4188c9:	fsubr  QWORD PTR [ecx+0x594ab4e4]
  4188cf:	(bad)  
  4188d0:	imul   edx,DWORD PTR [ebx+0x2f6f9bf2],0xf1bc4c7
  4188da:	test   BYTE PTR [edi],ah
  4188dc:	js     0x4188e6
  4188de:	hlt    
  4188df:	shl    cl,cl
  4188e1:	pop    edx
  4188e2:	imul   edi,DWORD PTR [eax],0x1b7315d7
  4188e8:	jmp    DWORD PTR [ebx+0x25]
  4188eb:	xchg   edi,eax
  4188ec:	lea    ebx,[edx+0x24fce371]
  4188f2:	in     eax,0x25
  4188f4:	adc    eax,0xbde70683
  4188f9:	sbb    DWORD PTR [esi-0x16ab6ded],eax
  4188ff:	mov    ch,0x42
  418901:	push   ss
  418902:	aam    0x9f
  418904:	lds    esp,FWORD PTR [ecx-0x4f0fdbcd]
  41890a:	xchg   BYTE PTR [edx+0x4],al
  41890d:	mov    ecx,0x784cea78
  418912:	fwait
  418913:	ret    
  418914:	and    ah,ch
  418916:	mov    eax,0x416ec895
  41891b:	adc    DWORD PTR [eax],ecx
  41891d:	push   edx
  41891e:	mov    dl,0x10
  418920:	int3   
  418921:	cdq    
  418922:	pop    eax
  418923:	or     ecx,DWORD PTR [ebx+0x5efd0ff1]
  418929:	xor    eax,0xdc994c26
  41892e:	sbb    DWORD PTR ds:0x660a0e20,0xe481ef4b
  418938:	inc    edx
  418939:	mov    WORD PTR [ecx+ebp*4-0x42],ss
  41893d:	mov    ebp,DWORD PTR [edx+eiz*2]
  418940:	inc    eax
  418941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418942:	mov    ebx,0xc213c9cb
  418947:	fst    QWORD PTR [esi]
  418949:	inc    esi
  41894a:	sbb    DWORD PTR [ebx-0x57],ecx
  41894d:	add    ch,0xf9
  418950:	and    al,0xdd
  418952:	dec    esp
  418953:	adc    BYTE PTR [ecx-0x2c],ah
  418956:	mov    ch,0x65
  418958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418959:	test   al,0x75
  41895b:	adc    al,0xef
  41895d:	pop    ebx
  41895e:	imul   eax,DWORD PTR [edx+0x57],0xa109589d
  418965:	mov    ah,0xc4
  418967:	dec    esp
  418968:	sti    
  418969:	pop    ecx
  41896a:	popf   
  41896b:	sbb    ecx,DWORD PTR [ebx+0x7]
  41896e:	push   ecx
  41896f:	(bad)  
  418972:	xchg   ebp,eax
  418973:	mov    eax,0x2a16c3ee
  418978:	sbb    eax,0x5efaadd2
  41897d:	test   bh,ch
  41897f:	test   eax,0x1a13a893
  418984:	xchg   BYTE PTR [edi],ah
  418986:	pusha  
  418987:	mov    esp,0x7694b498
  41898c:	and    DWORD PTR [ebx],eax
  41898e:	mov    ds:0xcd0db128,al
  418993:	int    0x69
  418995:	fcomp  QWORD PTR [ebx-0x76ff4d8a]
  41899b:	pop    eax
  41899c:	in     al,0xd1
  41899e:	xor    BYTE PTR [edx+esi*1],dl
  4189a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189a2:	mov    esp,0xde77e6ea
  4189a7:	dec    ebp
  4189a8:	aaa    
  4189a9:	imul   edx,ecx,0x80c1fd81
  4189af:	cwde   
  4189b0:	inc    ebp
  4189b1:	jmp    FWORD PTR [edx+0xa22675d]
  4189b7:	clc    
  4189b8:	mov    ebp,0xfecf2dd8
  4189bd:	cmp    dh,BYTE PTR [eax]
  4189bf:	pop    ebx
  4189c0:	test   eax,0xbabe8a42
  4189c5:	adc    DWORD PTR [edi-0x48],0x30
  4189c9:	xor    al,0x45
  4189cb:	vpunpckhwd xmm0,xmm0,XMMWORD PTR [ebx+0x2c363cbb]
  4189d3:	nop
  4189d4:	loop   0x418991
  4189d6:	cld    
  4189d7:	mov    edi,0x873bd7d0
  4189dc:	les    ebx,FWORD PTR [edi-0x33]
  4189df:	fisttp QWORD PTR [ebx+0x501cb578]
  4189e6:	scas   eax,DWORD PTR es:[edi]
  4189e7:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4189e9:	call   0x9fa1472f
  4189ee:	sbb    bl,BYTE PTR ds:0x9f655ba
  4189f4:	cwde   
  4189f5:	(bad)
  4189f8:	mov    ebp,edx
  4189fa:	test   edx,esp
  4189fc:	dec    ecx
  4189fd:	inc    esi
  4189fe:	fwait
  4189ff:	in     al,0xfb
  418a01:	pop    ss
  418a02:	dec    ebx
  418a03:	pop    ebp
  418a04:	sbb    eax,eax
  418a06:	mov    ds:0xe1853fb8,eax
  418a0b:	fwait
  418a0c:	adc    BYTE PTR [ecx-0x7be91244],ah
  418a12:	lahf   
  418a13:	in     al,0xde
  418a15:	adc    eax,edi
  418a17:	push   edx
  418a18:	add    DWORD PTR fs:[edx+0x38],eax
  418a1c:	lods   eax,DWORD PTR ds:[esi]
  418a1d:	sub    esp,esp
  418a1f:	mov    ?,WORD PTR [edx-0x10b2d42d]
  418a25:	imul   eax,DWORD PTR [ecx-0x2d],0x2b082456
  418a2c:	and    al,BYTE PTR [ebp+0xa]
  418a2f:	jmp    0x3c50:0xd7851ba4
  418a36:	mov    BYTE PTR [edx+0x35ac8af1],0x35
  418a3d:	int    0x99
  418a3f:	add    BYTE PTR ds:0x61fcaf2a,dl
  418a45:	mov    esi,0xdd4c877f
  418a4a:	pop    ebp
  418a4b:	pop    esp
  418a4c:	in     eax,dx
  418a4d:	(bad)  
  418a4e:	jmp    0x4189fe
  418a50:	sub    DWORD PTR ds:0x2e419b33,0x8b72773e
  418a5a:	mov    ah,0x97
  418a5c:	pop    es
  418a5d:	push   0x4c
  418a5f:	arpl   WORD PTR ds:0xd3dfe3b9,dx
  418a65:	adc    eax,0xad36f231
  418a6a:	imul   ebp,esi,0x9c1b036d
  418a70:	xor    eax,DWORD PTR [esi-0x3b]
  418a73:	push   0x6b
  418a75:	cld    
  418a76:	push   ebx
  418a77:	sub    BYTE PTR [eax],ch
  418a79:	dec    ebx
  418a7a:	repnz adc BYTE PTR [ebp+0xa],bl
  418a7e:	xor    BYTE PTR [edx-0x6e],dh
  418a81:	loop   0x418a21
  418a83:	sbb    al,0xec
  418a85:	mov    ds:0x60a8a847,al
  418a8a:	jmp    0x457d899f
  418a8f:	into   
  418a90:	jbe    0x418a57
  418a92:	leave  
  418a93:	xor    BYTE PTR [eax],dl
  418a95:	mov    eax,ds:0x355a25ab
  418a9a:	mov    bh,BYTE PTR [ebp+0x5c]
  418a9d:	cmc    
  418a9e:	push   ds
  418a9f:	stc    
  418aa0:	cmp    ecx,DWORD PTR [edi-0x42]
  418aa3:	fmul   QWORD PTR [edi+0x12b579e0]
  418aa9:	mov    al,0xb6
  418aab:	mov    dl,0x38
  418aad:	cdq    
  418aae:	pushf  
  418aaf:	inc    eax
  418ab0:	neg    ah
  418ab2:	adc    BYTE PTR [edx+edi*4+0x1a71c38b],dh
  418ab9:	clc    
  418aba:	mov    ch,0xb8
  418abc:	sbb    al,0xf1
  418abe:	push   es
  418abf:	push   edx
  418ac0:	jb     0x418a91
  418ac2:	mov    ds:0x743808bd,al
  418ac7:	jle    0x418afd
  418ac9:	sub    ecx,esi
  418acb:	xchg   edx,eax
  418acc:	push   esi
  418acd:	shl    DWORD PTR [edi+0x14f8fd52],cl
  418ad3:	inc    esp
  418ad4:	ds mov esp,0x40c29c52
  418ada:	stos   BYTE PTR es:[edi],al
  418adb:	jg     0x418b00
  418add:	xchg   ebp,eax
  418ade:	aas    
  418adf:	jno    0x418aeb
  418ae1:	ins    BYTE PTR es:[edi],dx
  418ae2:	cwde   
  418ae3:	jb     0x418ac4
  418ae5:	add    al,0x4
  418ae7:	mov    esp,0x5473987a
  418aec:	mov    ah,0x75
  418aee:	fwait
  418aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418af0:	ds pop eax
  418af2:	sub    al,0xc8
  418af4:	sbb    dh,0xdf
  418af7:	int3   
  418af8:	add    BYTE PTR [edi],al
  418afa:	fucomi st,st(5)
  418afc:	call   0x6b16:0x460ad8c7
  418b03:	pop    ds
  418b04:	jae    0x418b18
  418b06:	mov    bh,0xeb
  418b08:	(bad)  
  418b09:	pop    edx
  418b0a:	push   ebp
  418b0b:	cli    
  418b0c:	dec    edi
  418b0d:	add    edx,edi
  418b0f:	loope  0x418ac7
  418b11:	mov    ebx,0xd9b05081
  418b16:	(bad)  
  418b17:	sbb    al,dh
  418b19:	mov    edx,0x65db158e
  418b1e:	pop    ebx
  418b1f:	adc    eax,0x58f6660c
  418b24:	mov    cl,0xe5
  418b26:	push   es
  418b27:	outs   dx,DWORD PTR ds:[esi]
  418b28:	sbb    eax,0xc13993bd
  418b2d:	pop    edx
  418b2e:	pushf  
  418b2f:	sub    eax,0x3a23fa82
  418b34:	(bad)  
  418b35:	stc    
  418b36:	cmp    bl,BYTE PTR [ebx]
  418b38:	out    0xba,eax
  418b3a:	xchg   esi,eax
  418b3b:	lods   al,BYTE PTR ds:[esi]
  418b3c:	iret   
  418b3d:	add    ah,BYTE PTR [edx-0x20064c56]
  418b43:	sbb    DWORD PTR [ecx+0x23],eax
  418b46:	fdiv   st(6),st
  418b48:	nop
  418b49:	push   ebp
  418b4a:	jl     0x418b1e
  418b4c:	mov    edx,0xe666e07c
  418b51:	xor    BYTE PTR [edi],0x53
  418b54:	and    al,0x88
  418b56:	mov    bh,0x5e
  418b58:	fild   DWORD PTR [edx+0x6a]
  418b5b:	xacquire xchg DWORD PTR [eax],esi
  418b5e:	mov    fs,WORD PTR [ebp+0x17]
  418b61:	arpl   WORD PTR [ebp-0x3b],dx
  418b64:	or     ah,BYTE PTR ds:0x951f95fe
  418b6a:	inc    esi
  418b6b:	mov    DWORD PTR ss:[esi-0x47f0286d],ebx
  418b72:	xchg   edi,eax
  418b73:	sbb    ecx,DWORD PTR [ecx-0x7a00eceb]
  418b79:	dec    ebp
  418b7a:	mov    ds:0xedb93a43,al
  418b7f:	repnz pop eax
  418b81:	rcl    BYTE PTR [esi+0x1c14a475],0x7
  418b88:	mov    eax,ds:0x54194714
  418b8d:	jne    0x418b6b
  418b8f:	jl     0x418bdd
  418b91:	inc    DWORD PTR [ecx+0x51a7344d]
  418b97:	popf   
  418b98:	sub    al,0x88
  418b9a:	inc    edi
  418b9b:	in     al,0x9c
  418b9d:	rcl    ebx,cl
  418b9f:	cli    
  418ba0:	aad    0xf
  418ba2:	xchg   edx,eax
  418ba3:	int3   
  418ba4:	jl     0x418bac
  418ba6:	xchg   ebx,eax
  418ba7:	cld    
  418ba8:	mov    edi,DWORD PTR [edi]
  418baa:	push   ss
  418bab:	xchg   edi,eax
  418bac:	fadd   st,st(5)
  418bae:	and    ecx,0x94dab51b
  418bb4:	jmp    0x23bfc53e
  418bb9:	adc    bl,BYTE PTR [esi-0x48]
  418bbc:	inc    ecx
  418bbd:	sahf   
  418bbe:	(bad)  [edx]
  418bc0:	lea    eax,[edx+0x48]
  418bc3:	inc    eax
  418bc4:	mov    cr6,eax
  418bc7:	test   ah,cl
  418bc9:	push   0x4b
  418bcb:	xor    ch,BYTE PTR [edi]
  418bcd:	xor    al,0x64
  418bcf:	stos   BYTE PTR es:[edi],al
  418bd0:	nop
  418bd1:	bnd ja 0x418b75
  418bd4:	adc    esp,DWORD PTR [ecx+0x536879ca]
  418bda:	ja     0x418bff
  418bdc:	in     eax,0xcd
  418bde:	cli    
  418bdf:	sub    DWORD PTR [esi-0x566f29aa],edx
  418be5:	fdiv   st,st(6)
  418be7:	int    0x3f
  418be9:	xchg   ebp,eax
  418bea:	jbe    0x418bd0
  418bec:	out    dx,al
  418bed:	jae    0x418bb4
  418bef:	dec    esp
  418bf0:	aas    
  418bf1:	inc    ecx
  418bf2:	xor    BYTE PTR [ebp-0x3cfa5f01],bl
  418bf8:	or     eax,0x1a23da12
  418bfd:	push   0xfc104e0d
  418c02:	push   0x7156758d
  418c07:	(bad)  
  418c08:	jne    0x418c3a
  418c0a:	push   edi
  418c0b:	cs ret 
  418c0d:	loopne 0x418bfa
  418c0f:	pop    ebx
  418c10:	push   es
  418c11:	addr16 (bad) 
  418c13:	adc    eax,DWORD PTR [eax+edi*1+0x35423186]
  418c1a:	iret   
  418c1b:	inc    ebx
  418c1c:	lods   eax,DWORD PTR ds:[esi]
  418c1d:	add    BYTE PTR [ebp-0x7c],0xae
  418c21:	aad    0xec
  418c23:	in     al,dx
  418c24:	jge    0x418bbe
  418c26:	mov    ebp,0x7cee9751
  418c2b:	js     0x418bd0
  418c2d:	mov    ch,cl
  418c2f:	cmp    bh,cl
  418c31:	sbb    BYTE PTR [edi+0x49cbeae7],dh
  418c37:	mov    bh,0xfd
  418c39:	xchg   ebp,eax
  418c3a:	sbb    DWORD PTR [esi+0x2],edx
  418c3d:	popf   
  418c3e:	add    eax,0x3fc90aba
  418c43:	jo     0x418cb2
  418c45:	xchg   BYTE PTR [ebp+0x54],dl
  418c48:	mov    ebx,ebp
  418c4a:	cmp    BYTE PTR [esi-0x7dfafcb0],al
  418c50:	push   eax
  418c51:	pop    edi
  418c52:	and    bh,ch
  418c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c55:	fidivr DWORD PTR [esi*2+0x7c485d83]
  418c5c:	leave  
  418c5d:	add    esi,DWORD PTR [edi-0x24]
  418c60:	jbe    0x418c2c
  418c62:	aam    0xa0
  418c64:	xchg   esp,eax
  418c65:	cld    
  418c66:	les    ebp,FWORD PTR [ecx+ebp*1]
  418c69:	retf   
  418c6a:	sar    BYTE PTR [edi],1
  418c6c:	pop    ds
  418c6d:	mov    ecx,0xf7f33294
  418c72:	je     0x418c26
  418c74:	mov    bl,BYTE PTR [esp]
  418c77:	xchg   edx,eax
  418c78:	fdivr  DWORD PTR [ebx+0x46a3783a]
  418c7e:	cmp    DWORD PTR [ebx-0x410add27],ecx
  418c84:	fadd   st,st(2)
  418c86:	daa    
  418c87:	lods   eax,DWORD PTR ds:[esi]
  418c88:	xchg   edi,eax
  418c89:	add    DWORD PTR [esi-0x2758769c],ebx
  418c8f:	and    eax,0x4306c924
  418c94:	mov    ebp,0x5369ce86
  418c99:	shr    dl,cl
  418c9b:	mov    ebp,0x64ee3be9
  418ca0:	daa    
  418ca1:	imul   edi,DWORD PTR [edi],0xa39c10de
  418ca7:	les    esi,FWORD PTR [ebx]
  418ca9:	int3   
  418caa:	je     0x418c92
  418cac:	nop
  418cad:	xor    ebp,esp
  418caf:	addr16 jnp 0x418c74
  418cb2:	dec    esi
  418cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb4:	jg     0x418c66
  418cb6:	xchg   esp,eax
  418cb7:	gs popf 
  418cb9:	ret    0xfca7
  418cbc:	sar    BYTE PTR [edi],0xa6
  418cbf:	xchg   esp,eax
  418cc0:	add    ebp,edx
  418cc2:	xor    bh,al
  418cc4:	cmp    al,0x61
  418cc6:	dec    edi
  418cc7:	repz in al,dx
  418cc9:	jp     0x418c7f
  418ccb:	stos   DWORD PTR es:[edi],eax
  418ccc:	cdq    
  418ccd:	sti    
  418cce:	cmp    eax,0x28f32a6a
  418cd3:	jno    0x418d02
  418cd5:	jns    0x418c61
  418cd7:	outs   dx,DWORD PTR ds:[esi]
  418cd8:	jge    0x418d27
  418cda:	daa    
  418cdb:	mov    DWORD PTR [ebp-0x6e],0x26885533
  418ce2:	jne    0x418c68
  418ce4:	push   cs
  418ce5:	ret    
  418ce6:	leave  
  418ce7:	push   edx
  418ce8:	dec    edi
  418ce9:	mov    ebx,0x772a5ac5
  418cee:	add    ax,0xf46e
  418cf2:	dec    edx
  418cf3:	push   eax
  418cf4:	cmp    DWORD PTR [edi],ecx
  418cf6:	pushf  
  418cf7:	jbe    0x418d4a
  418cf9:	(bad)  
  418cfb:	rol    esi,1
  418cfd:	dec    edx
  418cfe:	dec    ebx
  418cff:	scas   eax,DWORD PTR es:[edi]
  418d00:	jno    0x418d81
  418d02:	add    eax,0xcccce944
  418d07:	adc    ch,BYTE PTR [esi+0x79]
  418d0a:	lahf   
  418d0b:	imul   edx,DWORD PTR [eax+ecx*1+0x52007446],0x3b
  418d13:	adc    bh,ah
  418d15:	mov    dh,0x94
  418d17:	lods   al,BYTE PTR ds:[esi]
  418d18:	ret    
  418d19:	pop    ebx
  418d1a:	dec    edi
  418d1b:	add    BYTE PTR [ebp-0x37aaf6a9],0xe5
  418d22:	jl     0x418cae
  418d24:	mov    ebx,0x9dc1ebb7
  418d29:	pop    eax
  418d2a:	mov    ch,0xca
  418d2c:	pop    eax
  418d2d:	mov    dl,0xa0
  418d2f:	dec    edx
  418d30:	cmp    eax,0xece7dd5a
  418d35:	(bad)  
  418d36:	call   DWORD PTR [esi-0x2d]
  418d39:	xchg   ebx,eax
  418d3a:	in     eax,dx
  418d3b:	mov    esp,0x16244b0c
  418d40:	xchg   DWORD PTR [edx],edx
  418d42:	inc    edx
  418d43:	out    0xc0,eax
  418d45:	stc    
  418d46:	mov    BYTE PTR [esp+esi*2+0x21],bh
  418d4a:	cmovp  eax,DWORD PTR [edx-0x7d4dd326]
  418d51:	inc    esi
  418d52:	rcr    dl,0x0
  418d55:	out    0x1b,eax
  418d57:	mov    ah,0x73
  418d59:	pop    esi
  418d5a:	or     BYTE PTR [edx+0x50a7bfee],dl
  418d60:	dec    esp
  418d61:	pop    es
  418d62:	nop
  418d63:	pop    esi
  418d64:	push   ecx
  418d65:	lahf   
  418d66:	mov    edi,DWORD PTR [ecx-0x32]
  418d69:	es int3 
  418d6b:	push   cs
  418d6c:	sbb    cl,BYTE PTR [ecx]
  418d6e:	in     eax,dx
  418d6f:	fmul   st(2),st
  418d71:	or     DWORD PTR [esi+edx*4],edi
  418d74:	sbb    eax,0xfc4964f4
  418d79:	fild   DWORD PTR [ebx-0x6f077a5d]
  418d7f:	pop    ebp
  418d80:	dec    eax
  418d81:	dec    esp
  418d82:	xor    eax,0x8b2b4000
  418d87:	pop    ss
  418d88:	sub    al,0x4e
  418d8a:	cmc    
  418d8b:	shl    BYTE PTR [ecx+0x4a],cl
  418d8e:	pushf  
  418d8f:	rcr    BYTE PTR [edx-0xe],1
  418d92:	mov    ah,0x5a
  418d95:	daa    
  418d96:	jae    0x418dee
  418d98:	test   al,0x2
  418d9a:	pushf  
  418d9b:	stos   DWORD PTR es:[edi],eax
  418d9c:	hlt    
  418d9d:	aas    
  418d9e:	sub    si,WORD PTR [ecx]
  418da1:	mov    edx,0xd6e8ee78
  418da6:	cmp    DWORD PTR [ebx],ebp
  418da8:	push   0xffffffbd
  418daa:	push   0xfe455594
  418daf:	mov    edx,0x52aa014d
  418db4:	shl    BYTE PTR [ebp+0x6a],1
  418db7:	lods   eax,DWORD PTR ds:[esi]
  418db8:	inc    ecx
  418db9:	xchg   ecx,eax
  418dba:	in     al,0x58
  418dbc:	sub    eax,0xe9a29d73
  418dc1:	loop   0x418d6d
  418dc3:	ficomp DWORD PTR [edx-0x46071c7]
  418dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dca:	push   0xffffffb6
  418dcc:	aam    0xfa
  418dce:	jae    0x418d77
  418dd0:	retf   
  418dd1:	mov    dh,0x60
  418dd3:	or     BYTE PTR [ebp+0x2319d872],0x5a
  418dda:	pop    eax
  418ddb:	jae    0x418d7a
  418ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dde:	je     0x418da2
  418de0:	lea    esi,[esi+0x20]
  418de3:	stos   BYTE PTR es:[edi],al
  418de4:	rol    BYTE PTR [ebp-0x1533b5ea],0x7f
  418deb:	push   ss
  418dec:	push   esi
  418ded:	mov    ah,0xb4
  418def:	mul    ebx
  418df1:	mov    al,0x6
  418df3:	xchg   ebp,eax
  418df4:	mov    ds:0xcccf252c,eax
  418df9:	loope  0x418e55
  418dfb:	sbb    edx,DWORD PTR [edi+0x20ef3a39]
  418e01:	ins    BYTE PTR es:[edi],dx
  418e02:	jg     0x418e0b
  418e04:	ins    DWORD PTR es:[edi],dx
  418e05:	ja     0x418dee
  418e07:	jmp    0x690c:0x49fdffc3
  418e0e:	jle    0x418e42
  418e10:	push   0x6a
  418e12:	push   0x36
  418e14:	fist   DWORD PTR [ebx-0x10]
  418e17:	lods   al,BYTE PTR ds:[esi]
  418e18:	mov    al,0xfb
  418e1a:	xchg   DWORD PTR [eax],ebx
  418e1c:	or     ax,0x36e7
  418e20:	add    DWORD PTR [ecx-0x67],ebx
  418e23:	xchg   DWORD PTR [esp+ecx*1],esi
  418e26:	xchg   ecx,eax
  418e27:	push   ss
  418e28:	mov    DWORD PTR [ecx-0x6f6eae00],eax
  418e2e:	fdiv   DWORD PTR [ebp-0x3f]
  418e31:	clc    
  418e32:	cmp    eax,0x18e049b4
  418e37:	sbb    dl,BYTE PTR [ebp+0x45eafe15]
  418e3d:	bnd js 0x418e57
  418e40:	push   cs
  418e41:	adc    DWORD PTR [esp+ecx*4-0x2ecc884d],edx
  418e48:	xchg   ebp,eax
  418e49:	push   ecx
  418e4a:	out    0x11,al
  418e4c:	fidiv  DWORD PTR [edi+0xa569d61]
  418e52:	icebp  
  418e53:	cmp    al,0xe0
  418e55:	adc    BYTE PTR [edx-0x459833f4],dl
  418e5b:	mov    cl,0x4b
  418e5d:	fadd   QWORD PTR [edi+0x119fb070]
  418e63:	jl     0x418e19
  418e65:	mov    eax,ds:0xb2da54e8
  418e6a:	ret    
  418e6b:	pushf  
  418e6c:	cwde   
  418e6d:	pop    ds
  418e6e:	dec    edx
  418e6f:	inc    edi
  418e70:	pop    ss
  418e71:	cmp    BYTE PTR cs:[ebx-0x12e777e5],dh
  418e78:	jmp    0xbf1d:0xc2e3c27c
  418e7f:	or     edx,eax
  418e81:	add    BYTE PTR [ebx+0x72],0x3c
  418e85:	in     eax,dx
  418e86:	jno    0x418e2a
  418e88:	add    eax,0x480bdf21
  418e8d:	mov    al,ds:0x6a8bd039
  418e92:	inc    esi
  418e93:	cdq    
  418e94:	or     eax,0x85e3b00b
  418e99:	dec    ecx
  418e9a:	idiv   BYTE PTR [edi+0x6a]
  418e9d:	jmp    0x418e38
  418e9f:	int3   
  418ea0:	push   ebx
  418ea1:	xor    edx,DWORD PTR [esp+eax*4]
  418ea4:	scas   al,BYTE PTR es:[edi]
  418ea5:	dec    ecx
  418ea7:	cmp    ah,ch
  418ea9:	out    dx,al
  418eaa:	jbe    0x418e7d
  418eac:	mov    esp,ebx
  418eae:	pop    eax
  418eaf:	fwait
  418eb0:	inc    ebp
  418eb1:	mov    cl,0xb
  418eb3:	or     DWORD PTR [ebx+0x1c],0xffffff9b
  418eb7:	mov    esp,ecx
  418eb9:	cmp    DWORD PTR [edx-0x2a],0x327e1ea8
  418ec0:	jecxz  0x418ed3
  418ec2:	xchg   edi,eax
  418ec3:	and    BYTE PTR [edi-0x1d826ae3],cl
  418ec9:	std    
  418eca:	xchg   esi,eax
  418ecb:	imul   edi,DWORD PTR [ebp+0x59],0x38
  418ecf:	test   eax,0xa8048f1
  418ed4:	sbb    DWORD PTR [edi],edx
  418ed6:	jbe    0x418e9d
  418ed8:	cld    
  418ed9:	shl    ah,cl
  418edb:	lea    ebp,ds:0xe61460f7
  418ee1:	shr    DWORD PTR [ecx-0x681d0ef9],1
  418ee7:	mov    edx,DWORD PTR [esi+0x6a]
  418eea:	shl    DWORD PTR [ecx-0x6e],0x22
  418eee:	fdiv   st(2),st
  418ef0:	pusha  
  418ef1:	push   0xffffffa0
  418ef3:	hlt    
  418ef4:	xchg   esp,eax
  418ef5:	adc    eax,0x17225b56
  418efa:	cmp    al,0xbb
  418efc:	ja     0x418f38
  418efe:	je     0x418ed4
  418f00:	push   edx
  418f01:	adc    ecx,DWORD PTR [ebx+eax*4+0x79]
  418f05:	iret   
  418f06:	retf   
  418f07:	or     BYTE PTR [ecx-0x52],cl
  418f0a:	add    DWORD PTR [eax+0x572fc372],edi
  418f10:	cmp    BYTE PTR [edx],dl
  418f12:	push   ecx
  418f13:	call   0x1957:0xb6c1553f
  418f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f1b:	(bad)  [eax+0x1a]
  418f1e:	and    BYTE PTR [eax-0x3d],0xdb
  418f22:	sbb    al,dh
  418f24:	adc    eax,esi
  418f26:	iret   
  418f27:	xor    eax,ecx
  418f29:	inc    edx
  418f2a:	xchg   edi,eax
  418f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f2c:	ds push esi
  418f2e:	push   0x7c
  418f30:	test   DWORD PTR [eax],0x1051f5ca
  418f36:	lods   eax,DWORD PTR ds:[esi]
  418f37:	jns    0x418fa6
  418f39:	pop    ecx
  418f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f3b:	jmp    0x418ed0
  418f3d:	pop    ss
  418f3e:	test   BYTE PTR [eax+0x1f131c95],0xc9
  418f45:	repnz sar BYTE PTR [esi+0x16],cl
  418f49:	adc    ebp,0x1c461b97
  418f4f:	stos   DWORD PTR es:[edi],eax
  418f50:	mov    edx,0x83f4da2
  418f55:	fprem  
  418f57:	fisttp WORD PTR [ebx]
  418f59:	(bad)  
  418f5a:	into   
  418f5b:	aam    0x80
  418f5d:	pop    ss
  418f5e:	add    eax,0x751d9d33
  418f63:	pushf  
  418f64:	adc    eax,0x549a6269
  418f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f6a:	in     al,0xf7
  418f6c:	int3   
  418f6d:	das    
  418f6e:	push   eax
  418f6f:	and    bh,BYTE PTR [esi-0x3d]
  418f72:	test   DWORD PTR [edi+esi*2],edx
  418f75:	cmp    dh,bh
  418f77:	into   
  418f78:	scas   eax,DWORD PTR es:[edi]
  418f79:	mov    ds:0x44230c40,al
  418f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f7f:	adc    edx,DWORD PTR [ebp-0x7c983e82]
  418f85:	xchg   ebp,eax
  418f86:	add    ch,BYTE PTR [esi-0x3c42efa8]
  418f8c:	dec    edi
  418f8d:	fidiv  DWORD PTR [eax-0x7a]
  418f90:	xchg   ebp,eax
  418f91:	dec    esi
  418f92:	push   esp
  418f93:	push   ebp
  418f94:	dec    eax
  418f95:	jo     0x418fcc
  418f97:	gs sub eax,ebp
  418f9a:	xchg   edx,eax
  418f9b:	test   eax,0x8f740539
  418fa0:	ss je  0x418fc7
  418fa3:	push   ebp
  418fa4:	outs   dx,BYTE PTR ds:[esi]
  418fa5:	fwait
  418fa6:	jno    0x418f66
  418fa8:	sbb    bl,cl
  418faa:	add    ebp,DWORD PTR [ebp-0x38]
  418fad:	push   edx
  418fae:	inc    eax
  418faf:	jno    0x418f41
  418fb1:	adc    BYTE PTR [ebx-0x3ddb98da],cl
  418fb7:	enter  0xab71,0xa2
  418fbb:	adc    esi,eax
  418fbd:	test   BYTE PTR [eax],dl
  418fbf:	sub    esi,ecx
  418fc1:	mov    al,0x4b
  418fc3:	jmp    0xa373:0xfff35e0e
  418fca:	clc    
  418fcb:	add    al,0x5c
  418fcd:	sub    DWORD PTR [edx+0x11],ecx
  418fd0:	popf   
  418fd1:	ja     0x418f6d
  418fd3:	(bad)  
  418fd4:	cwde   
  418fd5:	or     DWORD PTR [ecx-0x3260fb3f],esp
  418fdb:	aaa    
  418fdc:	cmc    
  418fdd:	and    eax,0xd874970b
  418fe2:	mov    WORD PTR [ecx],cs
  418fe4:	in     eax,dx
  418fe5:	jne    0x41903f
  418fe7:	mov    eax,0xbc0c972e
  418fec:	add    al,0xb2
  418fee:	shr    ebx,cl
  418ff0:	xchg   DWORD PTR [edi-0x27ab79ad],eax
  418ff6:	sbb    ebp,edi
  418ff8:	outs   dx,BYTE PTR ds:[esi]
  418ff9:	fimul  DWORD PTR [ecx+0xb]
  418ffc:	dec    ecx
  418ffd:	pop    eax
  418ffe:	fld    QWORD PTR [esi+0xc76545e]
  419004:	sbb    BYTE PTR [ebx-0x24],ch
  419007:	push   edx
  419009:	inc    ebp
  41900a:	rol    ch,1
  41900c:	sbb    esi,DWORD PTR [edi-0x3ea53652]
  419012:	fistp  QWORD PTR [ecx+0x19]
  419015:	mov    eax,ds:0xa2a77130
  41901a:	popa   
  41901b:	push   eax
  41901c:	jge    0x418fa7
  41901e:	ds std 
  419020:	das    
  419021:	xchg   ecx,eax
  419022:	or     eax,0x7998a737
  419027:	adc    al,0x6b
  419029:	or     DWORD PTR [ebp+0x704e3bf0],ebx
  41902f:	imul   eax,edi,0xffffffd3
  419032:	ficomp WORD PTR [eax]
  419034:	and    dl,ah
  419036:	shl    BYTE PTR [ebp-0x243f2c1d],0xa2
  41903d:	(bad)  
  41903e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41903f:	int    0x92
  419041:	cmp    DWORD PTR [edx],0x784edbb5
  419047:	xchg   esp,eax
  419048:	jnp    0x419026
  41904a:	sbb    al,0xa4
  41904c:	std    
  41904d:	adc    al,0x9
  41904f:	xchg   edi,eax
  419050:	mov    ebp,0x944af111
  419055:	retf   
  419056:	fs jbe 0x419066
  419059:	sub    eax,0x7614ce2f
  41905e:	push   ds
  41905f:	aaa    
  419060:	dec    esi
  419061:	mov    cl,0xaa
  419063:	push   0xd3230e4e
  419068:	mov    DWORD PTR [ebp-0x4c],edx
  41906b:	mov    edx,DWORD PTR [ebp+0x8]
  41906e:	mov    ebx,DWORD PTR [ebp-0x48]
  419071:	lea    edx,[ebx+edx*1+0x241fcdf]
  419078:	mov    DWORD PTR [ebp-0x48],edx
  41907b:	mov    edx,DWORD PTR [ebp+0x8]
  41907e:	mov    ebx,0xfa5e1530
  419083:	sub    ebx,edx
  419085:	add    ebx,DWORD PTR [ebp-0x44]
  419088:	mov    DWORD PTR [ebp-0x44],ebx
  41908b:	mov    edx,DWORD PTR [ebp+0x8]
  41908e:	xor    edx,eax
  419090:	add    edx,esi
  419092:	jne    0x416c96
  419098:	jmp    0x419125
  41909d:	mov    edx,DWORD PTR [ebp-0x14]
  4190a0:	mov    DWORD PTR [ebp+0x8],edx
  4190a3:	jmp    0x419118
  4190a8:	mov    edx,DWORD PTR [ebp+0x8]
  4190ab:	mov    ebx,DWORD PTR [ebp-0x8]
  4190ae:	xor    edx,eax
  4190b0:	xor    ebx,eax
  4190b2:	sub    edx,ebx
  4190b4:	sub    edx,esi
  4190b6:	xor    edx,eax
  4190b8:	mov    DWORD PTR [ebp+0x8],edx
  4190bb:	mov    edx,DWORD PTR [ebp+0x8]
  4190be:	mov    ebx,DWORD PTR [ebp-0x58]
  4190c1:	add    edx,0x5708fa
  4190c7:	imul   edx,ebx
  4190ca:	mov    DWORD PTR [ebp-0x58],edx
  4190cd:	mov    edx,DWORD PTR [ebp+0x8]
  4190d0:	mov    ebx,DWORD PTR [ebp-0x54]
  4190d3:	add    edx,0x64f89c
  4190d9:	or     edx,ebx
  4190db:	mov    DWORD PTR [ebp-0x54],edx
  4190de:	mov    edx,DWORD PTR [ebp+0x8]
  4190e1:	mov    ebx,DWORD PTR [ebp-0x50]
  4190e4:	add    edx,ecx
  4190e6:	xor    edx,ebx
  4190e8:	mov    DWORD PTR [ebp-0x50],edx
  4190eb:	mov    edx,DWORD PTR [ebp+0x8]
  4190ee:	mov    ebx,DWORD PTR [ebp-0x4c]
  4190f1:	add    edx,edi
  4190f3:	and    edx,ebx
  4190f5:	mov    DWORD PTR [ebp-0x4c],edx
  4190f8:	mov    edx,DWORD PTR [ebp+0x8]
  4190fb:	mov    ebx,DWORD PTR [ebp-0x48]
  4190fe:	lea    edx,[ebx+edx*1+0x241fcdf]
  419105:	mov    DWORD PTR [ebp-0x48],edx
  419108:	mov    edx,DWORD PTR [ebp+0x8]
  41910b:	mov    ebx,0xfa5e1530
  419110:	sub    ebx,edx
  419112:	add    ebx,DWORD PTR [ebp-0x44]
  419115:	mov    DWORD PTR [ebp-0x44],ebx
  419118:	mov    edx,DWORD PTR [ebp+0x8]
  41911b:	xor    edx,eax
  41911d:	add    edx,esi
  41911f:	jne    0x4190a8
  419125:	mov    edx,DWORD PTR [ebp-0x14]
  419128:	mov    DWORD PTR [ebp+0x8],edx
  41912b:	jmp    0x41b525
  419130:	mov    edx,DWORD PTR [ebp+0x8]
  419133:	mov    ebx,DWORD PTR [ebp-0x8]
  419136:	xor    edx,eax
  419138:	xor    ebx,eax
  41913a:	sub    edx,ebx
  41913c:	sub    edx,esi
  41913e:	xor    edx,eax
  419140:	mov    DWORD PTR [ebp+0x8],edx
  419143:	mov    edx,DWORD PTR [ebp+0x8]
  419146:	mov    ebx,DWORD PTR [ebp-0x58]
  419149:	add    edx,0x5708fa
  41914f:	imul   edx,ebx
  419152:	mov    DWORD PTR [ebp-0x58],edx
  419155:	mov    edx,DWORD PTR [ebp+0x8]
  419158:	mov    ebx,DWORD PTR [ebp-0x54]
  41915b:	add    edx,0x64f89c
  419161:	or     edx,ebx
  419163:	mov    DWORD PTR [ebp-0x54],edx
  419166:	mov    edx,DWORD PTR [ebp+0x8]
  419169:	mov    ebx,DWORD PTR [ebp-0x50]
  41916c:	add    edx,ecx
  41916e:	xor    edx,ebx
  419170:	mov    DWORD PTR [ebp-0x50],edx
  419173:	mov    edx,DWORD PTR [ebp+0x8]
  419176:	mov    ebx,DWORD PTR [ebp-0x4c]
  419179:	add    edx,edi
  41917b:	and    edx,ebx
  41917d:	mov    DWORD PTR [ebp-0x4c],edx
  419180:	mov    edx,DWORD PTR [ebp+0x8]
  419183:	mov    ebx,DWORD PTR [ebp-0x48]
  419186:	lea    edx,[ebx+edx*1+0x241fcdf]
  41918d:	jmp    0x41b512
  419192:	stos   DWORD PTR es:[edi],eax
  419193:	push   ds
  419194:	(bad)  
  419195:	and    al,0xcb
  419197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419198:	jnp    0x419127
  41919a:	jge    0x41913b
  41919c:	xor    eax,0x9a108a1b
  4191a1:	push   esi
  4191a2:	(bad)  
  4191a3:	sbb    DWORD PTR [ecx+0x7a],edi
  4191a6:	adc    bl,BYTE PTR [edi+0x7a]
  4191a9:	jp     0x41921a
  4191ab:	out    dx,eax
  4191ac:	xchg   edx,eax
  4191ad:	push   esi
  4191ae:	cmc    
  4191af:	aaa    
  4191b0:	pop    ebx
  4191b1:	popa   
  4191b2:	fwait
  4191b3:	jle    0x4191db
  4191b5:	in     eax,0x20
  4191b7:	sti    
  4191b8:	jp     0x41919e
  4191ba:	and    cl,bh
  4191bc:	mov    dl,BYTE PTR [esi+0x1d1b0e2]
  4191c2:	pop    ebp
  4191c3:	add    ah,0xba
  4191c6:	sbb    BYTE PTR [esi+0x6e],al
  4191c9:	call   DWORD PTR [edi]
  4191cb:	push   ebx
  4191cc:	add    al,0x79
  4191ce:	jmp    0xaa2137b3
  4191d3:	push   ecx
  4191d4:	xor    al,0xf8
  4191d6:	int    0xf7
  4191d8:	jmp    0x4191ca
  4191da:	sub    dl,0xf6
  4191dd:	sub    dl,dh
  4191df:	cmp    DWORD PTR [esp+ebx*2+0x3b3590fc],ebp
  4191e6:	pop    es
  4191e7:	in     al,dx
  4191e8:	pushf  
  4191e9:	dec    edi
  4191ea:	outs   dx,BYTE PTR ds:[esi]
  4191eb:	out    dx,al
  4191ec:	stos   BYTE PTR es:[edi],al
  4191ed:	std    
  4191ee:	and    DWORD PTR ds:0xbc0f7b5c,0x7db25bb1
  4191f8:	inc    edx
  4191f9:	(bad)  
  4191fa:	in     eax,dx
  4191fb:	push   ecx
  4191fc:	cld    
  4191fd:	stos   DWORD PTR es:[edi],eax
  4191fe:	jp     0x419222
  419200:	push   edi
  419201:	dec    ebp
  419202:	cmp    al,0xf8
  419204:	xor    BYTE PTR [eax-0x614927b6],0xec
  41920b:	pop    edx
  41920c:	ja     0x4191ab
  41920e:	fnstsw WORD PTR [eax]
  419210:	rcl    BYTE PTR [eax+0x1f],1
  419213:	lock test BYTE PTR [edi+ebx*2],dh
  419217:	loope  0x419253
  419219:	sbb    eax,0x2ece28ff
  41921e:	cli    
  41921f:	lock cdq 
  419221:	aaa    
  419222:	xor    al,0x8e
  419224:	mov    cl,0xc9
  419226:	mov    ah,BYTE PTR [ecx-0x57efe918]
  41922c:	mov    DWORD PTR ds:0xb61172b4,ebp
  419232:	jecxz  0x419285
  419234:	scas   eax,DWORD PTR es:[edi]
  419235:	and    BYTE PTR [edx],al
  419237:	inc    edi
  419238:	js     0x4191ed
  41923a:	pop    edi
  41923b:	cmp    eax,0xdca7cf
  419240:	ret    0x8e24
  419243:	mov    eax,0xb83e56bc
  419248:	mov    al,0x49
  41924a:	out    dx,eax
  41924b:	sbb    dl,ch
  41924d:	jge    0x4191f3
  41924f:	and    DWORD PTR [ecx],0x80139c40
  419255:	mov    ebx,0xdc92462c
  41925a:	(bad)  
  41925b:	(bad)  
  41925c:	push   esi
  41925d:	cwde   
  41925e:	sub    al,0x68
  419260:	in     eax,dx
  419261:	xchg   ebp,eax
  419262:	pusha  
  419263:	mov    ?,WORD PTR [edx+0x1430f35c]
  419269:	add    BYTE PTR [ebp-0x60b6210d],0x3c
  419270:	rcl    BYTE PTR [ecx],0xbd
  419273:	dec    eax
  419274:	out    0x81,eax
  419276:	lds    eax,FWORD PTR [esp+eax*2-0x5a]
  41927a:	retf   
  41927b:	fcom   DWORD PTR [edx-0x351ca297]
  419281:	or     ebx,DWORD PTR [eax]
  419283:	and    esp,0x6f9210a9
  419289:	loop   0x41926c
  41928b:	iret   
  41928c:	out    dx,eax
  41928d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41928e:	push   edx
  41928f:	lock sub DWORD PTR [edx-0x3d],esp
  419293:	push   edx
  419294:	(bad)  
  419295:	out    dx,eax
  419296:	xor    dl,BYTE PTR [ebx+ebx*4+0x1dd21a13]
  41929d:	xchg   al,ah
  41929f:	jp     0x419239
  4192a1:	xor    esi,DWORD PTR [esi+0xf]
  4192a4:	(bad)  
  4192a5:	pusha  
  4192a6:	lds    ebx,FWORD PTR [edx-0x3e]
  4192a9:	jnp    0x41923e
  4192ab:	pop    ds
  4192ac:	xchg   DWORD PTR [ebp-0x17],esi
  4192af:	outs   dx,DWORD PTR ds:[esi]
  4192b0:	xchg   BYTE PTR [esi-0x12],ah
  4192b3:	out    dx,eax
  4192b4:	inc    esi
  4192b5:	cs inc esi
  4192b7:	hlt    
  4192b8:	fs call 0x970874e6
  4192be:	dec    esi
  4192bf:	retf   0xa028
  4192c2:	jns    0x41930f
  4192c4:	in     eax,0xdd
  4192c6:	xchg   edx,eax
  4192c7:	pop    es
  4192c8:	jo     0x419260
  4192ca:	outs   dx,BYTE PTR ds:[esi]
  4192cb:	pop    ebp
  4192cc:	imul   esi,DWORD PTR [edi],0x5da806fc
  4192d2:	push   edi
  4192d3:	clc    
  4192d4:	ficomp DWORD PTR [ebx+0x2a158f38]
  4192da:	mov    dh,0x1
  4192dc:	mov    al,0x7
  4192de:	inc    esp
  4192df:	cld    
  4192e0:	out    0x10,al
  4192e2:	adc    al,0xe8
  4192e4:	lock cmp dl,ah
  4192e7:	aaa    
  4192e8:	xor    ch,0xb6
  4192eb:	clc    
  4192ec:	stc    
  4192ed:	dec    edi
  4192ee:	push   ebx
  4192ef:	jp     0x4192a5
  4192f1:	pop    eax
  4192f2:	add    al,0x81
  4192f4:	pop    es
  4192f5:	fstp   QWORD PTR [edx+eax*4+0x4c7a377]
  4192fd:	xor    eax,0x45784535
  419302:	das    
  419303:	and    al,0x49
  419305:	mov    ah,bl
  419307:	(bad)  
  419308:	test   eax,0xd3f64ad7
  41930d:	fimul  DWORD PTR [ecx]
  41930f:	inc    edi
  419310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419311:	mov    esi,0xbaaa0852
  419316:	or     ecx,DWORD PTR [edx+0x73e670aa]
  41931c:	inc    eax
  41931d:	adc    ch,dh
  41931f:	inc    ebp
  419320:	repnz adc dl,BYTE PTR [ebp+0x62]
  419324:	out    0xa,al
  419326:	xor    dh,BYTE PTR [edi+0x4650ba3e]
  41932c:	push   0x866fe5bb
  419331:	cmp    DWORD PTR [eax-0x16e909db],ecx
  419337:	ins    DWORD PTR es:[edi],dx
  419338:	mov    WORD PTR [ebx-0x4de38385],es
  41933e:	or     ebx,ebp
  419340:	inc    esp
  419341:	(bad)
  419345:	mov    ch,0x48
  419347:	push   es
  419348:	push   ebx
  419349:	cmp    BYTE PTR [ebx],0x3d
  41934c:	mov    esp,tr1
  41934f:	and    dl,BYTE PTR [edi]
  419351:	add    al,0x7e
  419353:	and    al,0x47
  419355:	push   esi
  419356:	js     0x41937e
  419358:	pop    edx
  419359:	leave  
  41935a:	cwde   
  41935b:	mov    dh,0xc1
  41935d:	mov    BYTE PTR [ecx+esi*2+0x27424778],ah
  419364:	or     al,0xc6
  419366:	or     esp,eax
  419368:	mov    BYTE PTR [ebp+0x4a7dae4d],ah
  41936e:	mov    esi,0x39eaa85e
  419373:	scas   eax,DWORD PTR es:[edi]
  419374:	retf   0x3f0b
  419377:	add    al,cl
  419379:	(bad)  
  41937a:	push   0x954e4ebd
  41937f:	imul   edx,DWORD PTR [ebp+0x9e51e0],0xffffffc9
  419386:	push   es
  419387:	cwde   
  419388:	in     al,dx
  419389:	in     al,dx
  41938a:	sbb    ch,dl
  41938c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41938d:	xchg   BYTE PTR [esi],bl
  41938f:	jbe    0x419402
  419391:	les    esp,FWORD PTR [edi]
  419393:	imul   eax,edi,0x3e292d5e
  419399:	in     al,0x3a
  41939b:	imul   edx,DWORD PTR [ecx+edx*8],0xffffff8f
  41939f:	je     0x419406
  4193a1:	push   cs
  4193a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193a3:	jne    0x419325
  4193a5:	test   al,0x61
  4193a7:	or     ah,BYTE PTR [edi-0x6d]
  4193aa:	jle    0x419380
  4193ac:	loop   0x4193f7
  4193ae:	mov    eax,ds:0xd9dd27cb
  4193b3:	pop    es
  4193b4:	mov    cl,0xb7
  4193b6:	fwait
  4193b7:	sbb    dh,al
  4193b9:	sti    
  4193ba:	icebp  
  4193bb:	mov    edi,0xa3b3d985
  4193c0:	cmp    eax,0x4689de45
  4193c5:	adc    BYTE PTR [eax+edi*8-0x14b89bb5],0xdc
  4193cd:	cdq    
  4193ce:	jmp    0x35670a14
  4193d3:	xchg   esi,eax
  4193d4:	jne    0x4193c7
  4193d6:	inc    edi
  4193d7:	pop    esi
  4193d8:	jl     0x41943c
  4193da:	repnz or ecx,edi
  4193dd:	aaa    
  4193de:	xor    cl,dh
  4193e0:	sbb    ebp,DWORD PTR [ecx+0xd54884a]
  4193e6:	push   0xe95b06f4
  4193eb:	cmp    eax,DWORD PTR [ecx+0x5545e79d]
  4193f1:	push   esp
  4193f2:	test   DWORD PTR [eax],esi
  4193f4:	add    dh,BYTE PTR [ecx+0x31fd029d]
  4193fa:	jecxz  0x4193b3
  4193fc:	std    
  4193fd:	jo     0x41947a
  4193ff:	xchg   edi,edx
  419401:	jle    0x41940c
  419403:	and    BYTE PTR [ebp-0x46],al
  419406:	test   ch,dl
  419408:	xor    eax,0xe831d813
  41940d:	enter  0xc46e,0x76
  419411:	les    ebp,FWORD PTR [esi+0x1af77149]
  419417:	inc    ebp
  419418:	push   es
  419419:	shr    esp,1
  41941b:	sub    BYTE PTR [ebx-0x4043f3e8],0x74
  419422:	inc    eax
  419423:	push   es
  419424:	rcr    DWORD PTR [esi+0x7e571e7d],1
  41942a:	xchg   edi,eax
  41942b:	ja     0x419428
  41942d:	sbb    dh,BYTE PTR [ecx+0x65062a6f]
  419433:	cmovle ebp,edi
  419436:	outs   dx,BYTE PTR ds:[esi]
  419437:	push   ss
  419438:	or     al,0xa1
  41943a:	out    0x1c,al
  41943c:	mov    ebp,0x3d0d7862
  419441:	repz dec ebp
  419443:	adc    eax,0x1beac3b7
  419448:	icebp  
  419449:	jecxz  0x419431
  41944b:	sbb    esi,edi
  41944d:	fs iret 
  41944f:	and    edi,DWORD PTR [esi+ebx*8]
  419452:	in     eax,dx
  419453:	cmp    BYTE PTR [edx],al
  419455:	adc    eax,0x47489c80
  41945a:	scas   al,BYTE PTR es:[edi]
  41945b:	int    0x35
  41945d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41945e:	add    BYTE PTR [ebx-0x51b371f],al
  419464:	xor    BYTE PTR [ecx],bl
  419466:	mov    cl,0xcd
  419468:	retf   
  419469:	aam    0x69
  41946b:	pop    ds
  41946c:	xlat   BYTE PTR ds:[ebx]
  41946d:	in     al,0x93
  41946f:	lods   eax,DWORD PTR ds:[esi]
  419470:	xor    al,0x1b
  419472:	cdq    
  419473:	adc    al,0x7a
  419475:	inc    ebp
  419476:	lods   eax,DWORD PTR ds:[esi]
  419477:	or     DWORD PTR [ebx+0x5],esi
  41947a:	mov    bl,0xd6
  41947c:	inc    ebp
  41947d:	jge    0x4194b1
  41947f:	fnsetpm(287 only) 
  419481:	dec    ebx
  419482:	mov    ecx,0x43580d39
  419487:	pop    ecx
  419488:	cmc    
  419489:	jnp    0x419417
  41948b:	pop    es
  41948c:	mov    eax,0x8c57da3a
  419491:	xchg   esp,eax
  419492:	jae    0x41949e
  419494:	cmp    BYTE PTR [esi-0x43d32c6e],ah
  41949a:	cmc    
  41949b:	int3   
  41949c:	jmp    0x8f0f:0x653c3d20
  4194a3:	mov    esi,0xbbec1cdb
  4194a8:	mov    edi,0x170a93d
  4194ad:	push   es
  4194ae:	mov    dl,0x3b
  4194b0:	into   
  4194b1:	lock outs dx,BYTE PTR ds:[esi]
  4194b3:	xor    bh,BYTE PTR [eax-0x15d44bd]
  4194b9:	mov    bh,0x73
  4194bb:	inc    eax
  4194bc:	pop    edx
  4194bd:	mov    dh,BYTE PTR [eax+ecx*1-0x7]
  4194c1:	aad    0x65
  4194c3:	mov    esi,0x6c6391bf
  4194c8:	jnp    0x41946e
  4194ca:	jbe    0x419514
  4194cc:	(bad)  
  4194cd:	int3   
  4194ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194cf:	repnz gs mov dl,0x3b
  4194d4:	add    eax,DWORD PTR [ecx+0x38f86d2e]
  4194da:	fs jge 0x4194ea
  4194dd:	arpl   WORD PTR [ecx-0x5e],bx
  4194e0:	pop    ds
  4194e1:	sbb    bh,BYTE PTR ss:[ebx+0x5]
  4194e5:	popa   
  4194e6:	pushf  
  4194e7:	adc    al,0xeb
  4194e9:	mov    WORD PTR [edx+0x141affdf],gs
  4194ef:	rcl    al,1
  4194f1:	dec    esp
  4194f2:	icebp  
  4194f3:	pop    es
  4194f4:	dec    eax
  4194f5:	test   al,0x79
  4194f7:	mov    dh,0x99
  4194f9:	add    eax,0xaad0df4e
  4194fe:	pop    ss
  4194ff:	push   ebp
  419500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419501:	cmc    
  419502:	or     ah,BYTE PTR [edi]
  419504:	les    ebx,FWORD PTR [eax-0x42]
  419507:	inc    ebp
  419508:	aam    0x75
  41950a:	mov    ch,0xb3
  41950c:	jle    0x419514
  41950e:	mov    esi,ss
  419510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419511:	loopne 0x41953a
  419513:	data16 outs dx,BYTE PTR ds:[esi]
  419515:	(bad)  [edx+0x2b]
  419518:	add    BYTE PTR [ebp-0x61],dh
  41951b:	imul   edx,DWORD PTR [edx],0x8008360
  419521:	call   edi
  419523:	(bad)  
  419524:	mov    ah,0x55
  419526:	or     eax,0x67d92982
  41952b:	pop    eax
  41952c:	imul   edx,DWORD PTR [ebp+0xf594037],0xfffffff0
  419533:	cmp    eax,0xe4a7a5af
  419538:	inc    edx
  419539:	sub    DWORD PTR [edx-0x73],ebx
  41953c:	fs jno 0x4194e0
  41953f:	adc    al,0xe1
  419541:	mov    ebp,0x4da61672
  419546:	repnz test DWORD PTR [ecx-0x2f0578e1],esi
  41954d:	add    al,0x5e
  41954f:	jl     0x41954c
  419551:	arpl   WORD PTR [eax],ax
  419553:	aad    0x9e
  419555:	dec    ecx
  419556:	and    eax,0xde511b54
  41955b:	push   ebx
  41955c:	and    eax,0xb1caa058
  419561:	dec    esp
  419562:	es test edx,ebp
  419565:	ror    BYTE PTR [eax+0x81c7c18],0x6a
  41956c:	es je  0x419530
  41956f:	in     al,dx
  419570:	mov    ecx,0xe2372915
  419575:	jmp    0x74fa:0xacae55e1
  41957c:	xor    BYTE PTR [ebp+0x518321ef],cl
  419582:	pop    edi
  419583:	mov    edi,0xd4479271
  419588:	out    dx,al
  419589:	pop    ebp
  41958a:	xchg   esp,eax
  41958b:	inc    edi
  41958c:	xchg   esi,eax
  41958d:	icebp  
  41958e:	sub    eax,0xf2931fb3
  419593:	in     al,0x63
  419595:	inc    esp
  419596:	aad    0xe0
  419598:	ret    
  419599:	pop    esi
  41959a:	push   0xffffffe7
  41959c:	sub    esp,ebp
  41959e:	test   DWORD PTR [esp+edi*2+0x1a0c4958],0x379fe800
  4195a9:	jo     0x4195e6
  4195ab:	test   BYTE PTR [edi-0x2f],bl
  4195ae:	arpl   WORD PTR ds:0x229f62a5,ax
  4195b4:	and    BYTE PTR [esi],cl
  4195b6:	js     0x4195df
  4195b8:	mov    ah,0x66
  4195ba:	add    al,0xc7
  4195bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195bd:	push   ds
  4195be:	push   ss
  4195bf:	hlt    
  4195c0:	pop    ebp
  4195c1:	pop    ss
  4195c2:	aam    0xd4
  4195c4:	cdq    
  4195c5:	pop    ds
  4195c6:	xchg   ecx,eax
  4195c7:	push   ecx
  4195c8:	not    edi
  4195ca:	push   0x5fc2dfee
  4195cf:	cli    
  4195d0:	mov    ebx,0x811cc2b9
  4195d5:	xchg   edx,eax
  4195d6:	push   ss
  4195d7:	ss mov edi,0xa8803d80
  4195dd:	adc    DWORD PTR [ebx+edx*8],0xffffff90
  4195e1:	cwde   
  4195e2:	fsubr  QWORD PTR [ebp-0x5b]
  4195e5:	(bad)  
  4195e6:	(bad)  
  4195e7:	gs popa 
  4195e9:	jb     0x419600
  4195eb:	xchg   ecx,eax
  4195ec:	sub    dl,bh
  4195ee:	and    eax,0x3087ee01
  4195f3:	pop    edi
  4195f4:	cs dec ebx
  4195f6:	mov    esi,0xc44d001d
  4195fb:	fcmovnu st,st(2)
  4195fd:	ret    0xaaf2
  419600:	jmp    0xa196:0xf1b6fb44
  419607:	aaa    
  419608:	jle    0x4195a4
  41960a:	mov    dl,bh
  41960c:	sbb    DWORD PTR [edi+0x3a3a0b9c],ebp
  419612:	add    BYTE PTR [edi+0x74],0xd1
  419616:	in     al,dx
  419617:	sahf   
  419618:	ins    BYTE PTR es:[edi],dx
  419619:	(bad)  
  41961a:	fisub  DWORD PTR [esi-0x28]
  41961d:	adc    BYTE PTR [esi+eiz*2+0x7d12631a],ah
  419624:	push   ds
  419625:	sub    dl,BYTE PTR [ecx]
  419627:	xor    eax,0x6e27e967
  41962c:	pushf  
  41962d:	jmp    0x4fb68328
  419632:	arpl   WORD PTR [eax+0xa],dx
  419635:	mov    BYTE PTR [ebp-0x2a],bh
  419638:	mov    BYTE PTR [edx+0x6c],ch
  41963b:	out    0x8e,eax
  41963d:	sub    al,0x4a
  41963f:	jns    0x419624
  419641:	mov    ebx,0x4c30b38c
  419646:	inc    ecx
  419647:	(bad)  
  419648:	test   al,0x30
  41964a:	jo     0x419636
  41964c:	(bad)  
  41964d:	aam    0x9c
  41964f:	mov    ds:0xf6757747,al
  419654:	(bad)  
  419656:	and    dl,BYTE PTR [ecx-0x56]
  419659:	mov    ds:0xe37f90b7,al
  41965e:	imul   ecx,ebx,0x11
  419661:	push   ss
  419662:	fwait
  419663:	sbb    eax,DWORD PTR [ecx+0x36580715]
  419669:	out    0xf0,al
  41966b:	push   0x998a659c
  419670:	push   cs
  419671:	mov    ecx,0x600c9052
  419676:	xchg   edx,eax
  419677:	aam    0x28
  419679:	fwait
  41967a:	jmp    0x41961b
  41967c:	in     al,dx
  41967d:	js     0x419643
  41967f:	fimul  WORD PTR [esi-0x1dff5a26]
  419685:	popa   
  419686:	sub    BYTE PTR [ebx+0x6a18f3da],cl
  41968c:	test   eax,0x66db35f2
  419691:	push   ds
  419692:	shl    ah,cl
  419694:	jne    0x4196bd
  419696:	sbb    ecx,DWORD PTR [ecx+0x7a]
  419699:	pusha  
  41969a:	mov    eax,ds:0xe74dc220
  41969f:	push   ecx
  4196a0:	sbb    DWORD PTR [ecx+0x45],edx
  4196a3:	das    
  4196a4:	addr16 inc esi
  4196a6:	xchg   esp,eax
  4196a7:	push   ss
  4196a8:	mov    dh,0xb3
  4196aa:	push   ebx
  4196ab:	adc    eax,0xd578f417
  4196b0:	sub    dh,BYTE PTR [edi+eax*1-0x4f9b3e8e]
  4196b7:	repz fsubr DWORD PTR [edx*8+0x5e7dbe52]
  4196bf:	sub    al,0x67
  4196c1:	mov    ds:0xc7585ca2,eax
  4196c6:	mov    ecx,0xe47d55b
  4196cb:	std    
  4196cc:	daa    
  4196cd:	add    ebx,DWORD PTR [ecx-0x4c6c242d]
  4196d3:	call   0x21a3dda0
  4196d8:	das    
  4196d9:	scas   al,BYTE PTR es:[edi]
  4196da:	dec    esi
  4196db:	xor    esp,DWORD PTR [ecx-0xc]
  4196de:	sbb    ch,ch
  4196e0:	or     DWORD PTR ds:0x8036d67d,eax
  4196e6:	jbe    0x4196e7
  4196e8:	pop    esi
  4196e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ea:	mov    esi,0x6a393bd4
  4196ef:	repnz test BYTE PTR [ecx+0x6c],al
  4196f3:	div    cl
  4196f5:	sbb    bh,al
  4196f7:	or     DWORD PTR [ecx],edi
  4196f9:	and    BYTE PTR [edx+0xeb99252],bl
  4196ff:	in     al,dx
  419700:	loopne 0x419737
  419702:	aaa    
  419703:	fisubr WORD PTR [ebx+edi*4-0x8]
  419707:	bnd jne 0x419695
  41970a:	call   0x7c575741
  41970f:	clc    
  419710:	fidiv  DWORD PTR [edx]
  419712:	popa   
  419713:	xchg   ebx,eax
  419714:	repz sub DWORD PTR [edx-0x7d],edx
  419718:	push   edx
  419719:	inc    esi
  41971a:	(bad)  
  41971b:	repnz scas eax,DWORD PTR es:[edi]
  41971d:	cmc    
  41971e:	jns    0x419793
  419720:	fsub   QWORD PTR ds:0xb0709c2f
  419726:	cdq    
  419727:	jne    0x419760
  419729:	mov    edx,0x98483e42
  41972e:	sub    eax,0x5a86fbf9
  419733:	or     BYTE PTR [ebp-0x535f9402],ch
  419739:	pop    eax
  41973a:	loope  0x419721
  41973c:	push   eax
  41973d:	fisub  DWORD PTR [ebx+0x5c]
  419740:	push   ecx
  419741:	cmp    BYTE PTR [ecx],bh
  419743:	push   0xffffff99
  419745:	sbb    BYTE PTR [esi-0x43],0xf7
  419749:	test   BYTE PTR [ecx+0x2a],dh
  41974c:	(bad)  
  41974d:	jp     0x4196e5
  41974f:	fadd   QWORD PTR [edx+0x6f8f94fa]
  419755:	lock inc ebx
  419757:	jnp    0x4197b8
  419759:	mov    bh,0xb3
  41975b:	inc    edx
  41975c:	dec    ebx
  41975d:	ret    
  41975e:	(bad)  
  41975f:	cli    
  419760:	ss jmp 0xbcc0:0xaeb6b726
  419768:	mov    ah,0x2c
  41976a:	out    dx,eax
  41976b:	test   eax,0xba35b348
  419770:	fucomip st,st(5)
  419772:	cmp    edi,DWORD PTR [esp+eiz*2+0x4f]
  419776:	mov    ebp,0xeae33ec1
  41977b:	fistp  DWORD PTR [esi-0x7]
  41977e:	ficomp DWORD PTR [ebx-0x71]
  419781:	mov    esp,0x518990ff
  419786:	adc    ch,BYTE PTR [edi]
  419788:	cld    
  419789:	sbb    BYTE PTR [eax+0x49e8c399],al
  41978f:	and    dl,BYTE PTR [edi-0xb254d7d]
  419795:	add    al,0x3
  419797:	mov    ds:0x3b3018f6,eax
  41979c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41979d:	int    0xf3
  41979f:	pop    esi
  4197a0:	adc    eax,0x2c6a49c9
  4197a5:	add    al,0x4f
  4197a7:	sbb    edx,esp
  4197a9:	sub    bh,dh
  4197ab:	jg     0x41973d
  4197ad:	xor    BYTE PTR [ebx+0x7ee0fbb9],cl
  4197b3:	pop    edx
  4197b4:	mov    ds:0xde0e4a38,eax
  4197b9:	outs   dx,DWORD PTR ds:[esi]
  4197ba:	inc    esi
  4197bb:	jbe    0x4197e5
  4197bd:	(bad)  
  4197be:	sub    BYTE PTR [esi+edi*4],bl
  4197c1:	sbb    eax,0x3118c6f8
  4197c6:	push   ecx
  4197c7:	mov    ebx,0x62afb057
  4197cc:	mov    BYTE PTR [esi-0x2d],ah
  4197cf:	cwde   
  4197d0:	(bad)  
  4197d1:	xchg   edx,eax
  4197d2:	retf   
  4197d3:	daa    
  4197d4:	sbb    eax,0xd08f0dcc
  4197d9:	loopne 0x4197d3
  4197db:	into   
  4197dc:	mov    bl,0xc4
  4197de:	push   ebx
  4197df:	in     eax,0x6e
  4197e1:	xor    BYTE PTR [eax+0x39],0xc8
  4197e5:	adc    eax,0xa1522caf
  4197ea:	push   edi
  4197eb:	mov    esp,DWORD PTR [edi-0x585bc9ce]
  4197f1:	ja     0x4197a2
  4197f3:	xchg   DWORD PTR [ecx],esi
  4197f5:	xchg   ebx,eax
  4197f6:	cmp    eax,0x8f0c9778
  4197fb:	iret   
  4197fc:	and    DWORD PTR [eax+0x66],eax
  4197ff:	inc    edi
  419800:	jl     0x419801
  419802:	xor    al,0x60
  419804:	add    al,0xf1
  419806:	call   0x2ea5:0x7a515a7d
  41980d:	dec    edx
  41980e:	mov    eax,ds:0x5d17e0ca
  419813:	jo     0x4197a2
  419815:	sti    
  419816:	sub    DWORD PTR [ecx+esi*8-0x58a2aba7],esp
  41981d:	ins    BYTE PTR es:[edi],dx
  41981e:	mov    cl,0x22
  419820:	rcl    BYTE PTR [eax],0x17
  419823:	push   ss
  419824:	fcmovne st,st(1)
  419826:	inc    eax
  419827:	adc    ch,al
  419829:	inc    ecx
  41982a:	xor    ah,BYTE PTR [ebx+0x5b]
  41982d:	pushf  
  41982e:	nop
  41982f:	pop    esi
  419830:	pop    edx
  419831:	pop    esp
  419832:	adc    DWORD PTR [edx-0x46a7aaf0],ebp
  419838:	xchg   esp,eax
  419839:	adc    eax,0xdbf7c347
  41983e:	mov    dh,0xfb
  419840:	lds    esi,FWORD PTR [ecx]
  419842:	aam    0x7c
  419844:	sub    DWORD PTR [edi],ebx
  419846:	inc    esp
  419847:	and    eax,esi
  419849:	xchg   esi,eax
  41984a:	test   al,0x68
  41984c:	scas   eax,DWORD PTR es:[edi]
  41984d:	lock mov ah,0x4e
  419850:	das    
  419851:	out    0x28,eax
  419853:	ret    
  419854:	mov    ecx,0xfc7723e1
  419859:	ror    BYTE PTR [ecx+eiz*2+0x203dba28],0x5c
  419861:	pop    ss
  419862:	dec    ebp
  419863:	les    eax,FWORD PTR [esi-0xb7b5d03]
  419869:	out    dx,eax
  41986a:	jbe    0x419808
  41986c:	push   ss
  41986d:	test   BYTE PTR [ebx-0x6d],dl
  419870:	sar    DWORD PTR [ecx-0x25],1
  419873:	out    dx,al
  419874:	fwait
  419875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419876:	ins    DWORD PTR es:[edi],dx
  419877:	adc    BYTE PTR ds:0xcbbd8337,ah
  41987d:	cdq    
  41987e:	inc    ebx
  41987f:	aad    0x49
  419881:	ja     0x4198d5
  419883:	shl    DWORD PTR [eax+0x6fb5203b],0xa6
  41988a:	ja     0x4198a9
  41988c:	out    0xdd,eax
  41988e:	inc    ebx
  41988f:	push   ebx
  419890:	push   cs
  419891:	ins    DWORD PTR es:[edi],dx
  419892:	xchg   WORD PTR [esi],dx
  419895:	xlat   BYTE PTR ds:[ebx]
  419896:	out    dx,eax
  419897:	mov    ah,0x6d
  419899:	test   DWORD PTR [edi+0x32],ebp
  41989c:	add    ah,BYTE PTR [esi-0x4d86d7b3]
  4198a2:	(bad)  
  4198a3:	xor    dl,BYTE PTR [edx]
  4198a5:	push   esp
  4198a6:	clc    
  4198a7:	xchg   edx,eax
  4198a8:	(bad)  
  4198a9:	shl    al,cl
  4198ab:	outs   dx,DWORD PTR ds:[esi]
  4198ac:	inc    eax
  4198ad:	or     ch,bl
  4198af:	div    DWORD PTR [ecx-0x47]
  4198b2:	mov    bh,0xba
  4198b4:	dec    ebp
  4198b5:	pop    ebx
  4198b6:	inc    edi
  4198b7:	sbb    DWORD PTR [eax],ecx
  4198b9:	add    eax,DWORD PTR [esi]
  4198bb:	loop   0x419936
  4198bd:	xchg   BYTE PTR [edi-0x2c],bl
  4198c0:	push   ss
  4198c1:	repz loopne 0x419858
  4198c4:	psubusb mm4,QWORD PTR [ecx+edx*2-0x20]
  4198c9:	cmp    eax,esp
  4198cb:	push   esi
  4198cc:	mov    ch,0x39
  4198ce:	pop    es
  4198cf:	je     0x419907
  4198d1:	cwde   
  4198d2:	(bad)  
  4198d3:	mov    WORD PTR cs:[eax+edx*2],cs
  4198d7:	xor    esp,eax
  4198d9:	pop    esi
  4198da:	jg     0x419935
  4198dc:	sub    eax,0x8dd337fa
  4198e1:	pop    esp
  4198e2:	data16 adc bl,dl
  4198e5:	mov    dh,0x3c
  4198e7:	push   esp
  4198e8:	aam    0x2a
  4198ea:	jb     0x419945
  4198ec:	adc    eax,edi
  4198ee:	dec    edx
  4198ef:	outs   dx,DWORD PTR ds:[esi]
  4198f0:	sub    al,0x98
  4198f2:	mov    ch,0x19
  4198f4:	aad    0x53
  4198f6:	mov    DWORD PTR [esp+edx*8-0x4642fc4b],ecx
  4198fd:	addr16 dec esi
  4198ff:	cmc    
  419900:	adc    al,0x78
  419902:	fisub  WORD PTR [esi+0x75]
  419905:	push   0x6
  419907:	outs   dx,BYTE PTR ds:[esi]
  419908:	aad    0x6e
  41990a:	xchg   esi,eax
  41990b:	imul   ebp,esp,0x1a
  41990e:	ror    al,1
  419910:	fidivr WORD PTR [edx-0x63]
  419913:	jp     0x419903
  419915:	mov    ecx,0xa9601a48
  41991a:	test   al,0xb1
  41991c:	lock fnstcw WORD PTR [esi-0x6b]
  419920:	adc    eax,0xab7a3c3f
  419925:	pop    ebp
  419926:	jne    0x419922
  419928:	pushf  
  419929:	retf   
  41992a:	jmp    0x4199a1
  41992c:	sbb    eax,0x52cbd15c
  419931:	pop    es
  419932:	cmp    eax,0x9bc890dc
  419937:	sub    esp,DWORD PTR [ebx]
  419939:	mov    ebp,0x8dc82b51
  41993e:	enter  0xd3cf,0xfb
  419942:	sbb    eax,0xe9caf572
  419947:	in     eax,dx
  419948:	pop    eax
  419949:	pop    ds
  41994a:	dec    ebx
  41994b:	fmul   QWORD PTR [eax-0x26]
  41994e:	psubusw mm2,mm2
  419951:	xchg   edx,eax
  419952:	pusha  
  419953:	retf   
  419954:	cmp    BYTE PTR [edi+0x48ba05d0],bh
  41995a:	es xor edi,ebx
  41995d:	adc    cl,BYTE PTR [ecx-0x19c1e47]
  419963:	dec    esp
  419964:	push   ecx
  419965:	push   eax
  419966:	sub    al,BYTE PTR [ebp+0x48]
  419969:	lahf   
  41996a:	mov    bh,0xdd
  41996c:	cs inc eax
  41996e:	shr    BYTE PTR [edx],1
  419970:	sar    BYTE PTR ds:0xb81ce1e7,cl
  419976:	adc    edi,esp
  419978:	xor    dh,bh
  41997a:	fisttp WORD PTR [ebp-0x29cf53d0]
  419980:	(bad)  
  419981:	sahf   
  419982:	out    0x22,al
  419984:	pop    eax
  419985:	hlt    
  419986:	aaa    
  419987:	inc    edi
  419988:	ja     0x41998b
  41998a:	in     eax,dx
  41998b:	add    al,0xb0
  41998d:	aad    0xdc
  41998f:	(bad)  ss:[edi+edi*2+0x71d3f03a]
  419997:	jge    0x4199e6
  419999:	or     DWORD PTR [edi+0x4e9d70b3],ecx
  41999f:	popf   
  4199a0:	les    eax,FWORD PTR [ebx-0x2d71a8e3]
  4199a6:	and    ebp,DWORD PTR ds:0x95557c1c
  4199ac:	xchg   edx,eax
  4199ad:	in     al,0x98
  4199af:	lea    ebx,[eax+0x6d]
  4199b2:	enter  0x73eb,0xab
  4199b6:	mov    edi,0x2a81e80
  4199bb:	fcom   QWORD PTR [ecx]
  4199bd:	sub    BYTE PTR [esi+eax*2+0x314e368f],dh
  4199c4:	adc    dh,BYTE PTR [esi+edi*1]
  4199c7:	pop    es
  4199c8:	inc    edx
  4199c9:	mov    ecx,0x937c176e
  4199ce:	in     eax,dx
  4199cf:	(bad)  
  4199d0:	pushf  
  4199d1:	test   ebx,edx
  4199d3:	sahf   
  4199d4:	or     BYTE PTR [esi-0x2d4cf3cf],ah
  4199da:	push   esp
  4199db:	imul   ecx,DWORD PTR [ecx+0x694eeba5],0xc
  4199e2:	and    ah,al
  4199e4:	pop    ebx
  4199e5:	inc    edx
  4199e7:	sub    al,0xa1
  4199e9:	inc    eax
  4199ea:	push   esp
  4199eb:	mov    ebx,0xf8218d3d
  4199f0:	in     eax,dx
  4199f1:	xchg   ah,dl
  4199f3:	bound  ebp,QWORD PTR [edi+0x3f]
  4199f6:	mov    WORD PTR [eax+0x5d93652e],ss
  4199fc:	pushf  
  4199fd:	fs pusha 
  4199ff:	jle    0x419a57
  419a01:	mov    esp,0x7eb5316b
  419a06:	hlt    
  419a07:	iret   
  419a08:	jp     0x4199b3
  419a0a:	ins    BYTE PTR es:[edi],dx
  419a0b:	mov    ch,0x30
  419a0d:	lds    eax,FWORD PTR [eax]
  419a0f:	jb     0x419a0b
  419a11:	cli    
  419a12:	cmc    
  419a13:	jle    0x4199db
  419a15:	mov    ds:0xbeb7ee4,eax
  419a1a:	cli    
  419a1b:	cld    
  419a1c:	mov    ds:0x3304aff3,eax
  419a21:	add    DWORD PTR [ebp+eax*4-0x47],0x88bb75b3
  419a29:	mov    eax,DWORD PTR [ebx]
  419a2b:	and    eax,0xeee2ef42
  419a30:	iret   
  419a31:	shl    ah,1
  419a33:	xor    DWORD PTR [ecx-0x77c7597e],edx
  419a39:	jae    0x419a1a
  419a3b:	jns    0x4199e3
  419a3d:	out    0x2d,eax
  419a3f:	lock sub dh,BYTE PTR [edi-0x7a6a29dd]
  419a46:	loopne 0x419a80
  419a48:	xor    al,0x4e
  419a4a:	add    al,0xe3
  419a4c:	pop    ss
  419a4d:	jmp    0x4199f9
  419a4f:	jns    0x419a26
  419a51:	int    0xee
  419a53:	aaa    
  419a54:	aaa    
  419a55:	jle    0x419a90
  419a57:	add    eax,0xb5b7eae3
  419a5c:	pop    es
  419a5d:	aam    0x76
  419a5f:	pop    ds
  419a60:	dec    edi
  419a61:	test   al,0x44
  419a63:	inc    DWORD PTR [edi]
  419a65:	ror    DWORD PTR [edx],cl
  419a67:	pusha  
  419a68:	push   es
  419a69:	call   0xbf13:0xc4bc9b20
  419a70:	sub    esp,DWORD PTR [esp+edx*8]
  419a73:	xor    DWORD PTR [edi+0x45],ebp
  419a76:	psubsb mm4,QWORD PTR [edi]
  419a79:	push   ebx
  419a7a:	or     eax,0xe1830d57
  419a7f:	fwait
  419a80:	pop    ds
  419a81:	imul   eax,DWORD PTR [esi+0x72b1b264],0xffffff9b
  419a88:	lahf   
  419a89:	mov    eax,0xdb973d9d
  419a8e:	and    eax,0x4ba7811c
  419a93:	jno    0x419afe
  419a95:	mov    dl,0x3c
  419a97:	or     DWORD PTR [ebx],ebx
  419a99:	xchg   esp,eax
  419a9a:	xor    eax,0xec79d8bf
  419a9f:	das    
  419aa0:	and    BYTE PTR [eax-0x3],al
  419aa3:	shl    DWORD PTR [edx-0x5e],1
  419aa6:	push   edx
  419aa7:	enter  0x6349,0x40
  419aab:	xor    BYTE PTR [ebx-0x5c92f1ee],cl
  419ab1:	sahf   
  419ab2:	lods   al,BYTE PTR ds:[esi]
  419ab3:	aad    0xdf
  419ab5:	ins    DWORD PTR es:[edi],dx
  419ab6:	inc    ebx
  419ab7:	cdq    
  419ab8:	jnp    0x419a42
  419aba:	xchg   dl,dh
  419abc:	sub    ch,BYTE PTR ds:0xda196423
  419ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac3:	loope  0x419b13
  419ac5:	aam    0x6f
  419ac7:	and    ecx,eax
  419ac9:	daa    
  419aca:	dec    ebx
  419acb:	sar    DWORD PTR [ecx],1
  419acd:	int3   
  419ace:	dec    esp
  419acf:	(bad)  
  419ad0:	out    dx,eax
  419ad1:	stos   BYTE PTR es:[edi],al
  419ad2:	add    BYTE PTR [edx-0x4],dh
  419ad5:	dec    edi
  419ad6:	xchg   edx,eax
  419ad7:	sbb    ah,ah
  419ad9:	repnz data16 (bad) 
  419adc:	push   esi
  419add:	jmp    0x419b08
  419adf:	stc    
  419ae0:	adc    ebx,DWORD PTR [ebp+0x3c]
  419ae3:	repz sbb BYTE PTR es:[esi-0x52],ch
  419ae8:	and    BYTE PTR [edi+0x27e6526f],bh
  419aee:	dec    edx
  419aef:	jne    0x419b23
  419af1:	inc    esi
  419af2:	in     al,0x10
  419af4:	(bad)  
  419af5:	jmp    0x419a99
  419af7:	(bad)  
  419af8:	stc    
  419af9:	xchg   ebp,eax
  419afa:	dec    esi
  419afb:	mov    cl,0xca
  419afd:	push   edi
  419afe:	popa   
  419aff:	jb     0x419aeb
  419b01:	jle    0x419b35
  419b03:	bound  eax,QWORD PTR [ebx+eax*8+0x32]
  419b07:	(bad)  
  419b08:	jno    0x419ada
  419b0a:	sub    DWORD PTR [ebx],ebx
  419b0c:	nop
  419b0d:	pop    ax
  419b0f:	loop   0x419b8a
  419b11:	push   esi
  419b12:	inc    edx
  419b13:	sub    DWORD PTR [esi+0x5f],edi
  419b16:	iret   
  419b17:	fisubr DWORD PTR [ebx+0xea3e758]
  419b1d:	mov    bh,0xbf
  419b1f:	and    ah,ah
  419b21:	or     esi,DWORD PTR [ecx]
  419b23:	aas    
  419b24:	andnps xmm3,XMMWORD PTR [edi+edx*4-0x2d91fba4]
  419b2c:	rol    DWORD PTR [edi+0x5],1
  419b2f:	rol    BYTE PTR ds:0xd6c3e708,cl
  419b35:	jbe    0x419b7a
  419b37:	pusha  
  419b38:	les    ecx,FWORD PTR [ecx+0x6e6a1885]
  419b3e:	lods   eax,DWORD PTR ds:[esi]
  419b3f:	inc    esi
  419b40:	cmp    dh,BYTE PTR [esi+0x2b85cd21]
  419b46:	mov    esp,0x6a600a8b
  419b4b:	ret    0x55c4
  419b4e:	das    
  419b4f:	inc    eax
  419b50:	jecxz  0x419b3a
  419b52:	lods   al,BYTE PTR ds:[esi]
  419b53:	dec    esp
  419b54:	sub    ebp,ebp
  419b56:	ja     0xa1823484
  419b5c:	and    DWORD PTR [edi-0x61],ecx
  419b5f:	mov    ecx,0xbd0ee5d6
  419b64:	cmc    
  419b65:	je     0x419b96
  419b67:	add    al,0x40
  419b69:	rcl    DWORD PTR [ebp-0x7c],1
  419b6c:	loope  0x419b00
  419b6e:	test   ecx,0xb94071aa
  419b74:	loopne 0x419b64
  419b76:	mov    ch,0x10
  419b78:	push   ebp
  419b79:	test   si,ax
  419b7c:	or     ch,BYTE PTR [ebx-0x7c]
  419b7f:	and    ecx,DWORD PTR [ebp-0xf]
  419b82:	adc    dh,BYTE PTR [ebp+0x6355724e]
  419b88:	lods   al,BYTE PTR ds:[esi]
  419b89:	xchg   edi,eax
  419b8a:	loop   0x419b5b
  419b8c:	xor    DWORD PTR [edx+0x456e55a5],ecx
  419b92:	shl    BYTE PTR [ecx],0xee
  419b95:	mov    al,ds:0xcbc3f17c
  419b9a:	les    ebp,FWORD PTR [ebx]
  419b9c:	and    DWORD PTR ds:0x2b2ca432,ebx
  419ba2:	pop    eax
  419ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba4:	jb     0x419bd3
  419ba6:	push   ecx
  419ba7:	scas   eax,DWORD PTR es:[edi]
  419ba8:	ficomp WORD PTR [edx+eax*1-0x27427aa8]
  419baf:	jno    0x419ba2
  419bb1:	sbb    esp,DWORD PTR [esi+0x15c2637d]
  419bb7:	cs out dx,eax
  419bb9:	fwait
  419bba:	sbb    al,BYTE PTR [ebx-0x38fc7385]
  419bc0:	ja     0x419c3f
  419bc2:	xchg   esi,eax
  419bc3:	mov    al,ds:0xcca683cd
  419bc8:	sub    eax,0xb43e1043
  419bcd:	aad    0x22
  419bcf:	mov    bh,0xbd
  419bd1:	sub    ch,BYTE PTR [ebx-0x62221b65]
  419bd7:	xchg   esi,eax
  419bd8:	inc    esp
  419bd9:	mov    esp,0x291d4ccf
  419bde:	(bad)  
  419bdf:	mov    bl,0x6b
  419be1:	out    dx,al
  419be2:	push   ebx
  419be3:	ja     0x419c18
  419be5:	in     al,0x5
  419be7:	sbb    al,0x40
  419be9:	neg    DWORD PTR [ecx]
  419beb:	(bad)  
  419bec:	fidivr DWORD PTR [esi]
  419bee:	std    
  419bef:	dec    ecx
  419bf0:	sub    ah,BYTE PTR [ecx+0x27]
  419bf3:	daa    
  419bf4:	cwde   
  419bf5:	jb     0x419ba0
  419bf7:	inc    edi
  419bf8:	std    
  419bf9:	jecxz  0x419c17
  419bfb:	jmp    0x49e2:0x93f45661
  419c02:	fadd   DWORD PTR [ebp-0x5f826081]
  419c08:	test   DWORD PTR [ebx+ecx*1],esi
  419c0b:	in     al,0xbd
  419c0d:	(bad)  
  419c0e:	mov    esp,gs
  419c10:	(bad)  
  419c11:	dec    eax
  419c12:	sub    ebp,ecx
  419c14:	int    0x42
  419c16:	jnp    0x419c89
  419c18:	pop    ss
  419c19:	sbb    bh,BYTE PTR [ebx+0x773ab6a3]
  419c1f:	mov    esp,0xf0ef16d0
  419c24:	test   BYTE PTR [ebx],ah
  419c26:	pop    ss
  419c27:	rcr    BYTE PTR [eax],1
  419c29:	jno    0x419ca1
  419c2b:	inc    edi
  419c2c:	mov    al,ds:0x432dcf47
  419c31:	sbb    BYTE PTR [ebp+0x7a],0xc4
  419c35:	sbb    al,0xa
  419c37:	arpl   si,bp
  419c39:	retf   
  419c3a:	loop   0x419bc9
  419c3c:	adc    BYTE PTR [edx],al
  419c3e:	inc    edx
  419c3f:	pavgb  mm4,QWORD PTR [ecx+0x141c1806]
  419c46:	retf   0x4005
  419c49:	pop    esi
  419c4a:	sub    dh,BYTE PTR es:[eax]
  419c4d:	int3   
  419c4e:	in     eax,0xf7
  419c50:	out    dx,al
  419c51:	jne    0x419be9
  419c53:	bound  ebp,QWORD PTR [ebx+ecx*4]
  419c56:	push   0xffffff88
  419c58:	inc    ecx
  419c59:	mov    esi,0x74a234d
  419c5e:	sub    eax,0x5136f429
  419c63:	mov    BYTE PTR [edx],0xa4
  419c66:	mov    ah,BYTE PTR [edx-0x5502567a]
  419c6c:	loope  0x419c9b
  419c6e:	bound  esi,QWORD PTR [eax-0x24]
  419c71:	(bad)
  419c74:	(bad)  
  419c75:	aas    
  419c76:	jmp    0x4ec5:0x9b04765
  419c7d:	pop    edi
  419c7e:	mov    eax,0x1c1259d5
  419c83:	das    
  419c84:	int    0xd3
  419c86:	jnp    0x419c36
  419c88:	xchg   edi,eax
  419c89:	mov    ah,0xf6
  419c8b:	inc    esi
  419c8c:	lahf   
  419c8d:	xchg   edi,eax
  419c8e:	in     eax,0x6f
  419c90:	pop    edi
  419c91:	cmc    
  419c92:	lock es hlt 
  419c95:	scas   al,BYTE PTR es:[edi]
  419c96:	lods   eax,DWORD PTR ds:[esi]
  419c97:	sub    DWORD PTR [esi+ebp*1],esi
  419c9a:	sbb    al,0x1b
  419c9c:	or     al,0x79
  419c9e:	shl    DWORD PTR [ecx],0xc4
  419ca1:	scas   al,BYTE PTR es:[edi]
  419ca2:	cmp    ecx,DWORD PTR [edi*1-0x41cbf46]
  419ca9:	(bad)  
  419caa:	fmul   QWORD PTR [ebx-0x6de29d9d]
  419cb0:	jmp    0x419c5b
  419cb2:	sub    cl,BYTE PTR [edi-0x5fea6d48]
  419cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cb9:	or     bl,BYTE PTR [ebp+0x1817f8db]
  419cbf:	dec    edx
  419cc0:	add    cl,BYTE PTR [edx+0x6ca9083]
  419cc6:	call   0xae7e:0x93f29dd6
  419ccd:	inc    eax
  419cce:	sbb    BYTE PTR [edi-0x75],ch
  419cd1:	test   BYTE PTR [eax-0xe],ah
  419cd4:	add    edi,ecx
  419cd6:	xchg   ah,al
  419cd8:	sub    DWORD PTR [edx],ecx
  419cda:	pop    edx
  419cdb:	add    eax,0x1e1f421d
  419ce0:	or     eax,0x7a3cc896
  419ce5:	lods   eax,DWORD PTR ds:[esi]
  419ce6:	pop    ss
  419ce7:	cmp    bh,ch
  419ce9:	jle    0x419c73
  419ceb:	std    
  419cec:	arpl   WORD PTR [edi+0x2bcebfb8],di
  419cf2:	mov    esi,0xa067c356
  419cf7:	loope  0x419cbc
  419cf9:	popa   
  419cfa:	jmp    0x419ca0
  419cfc:	popf   
  419cfd:	fdiv   QWORD PTR [eax-0x1e9f655e]
  419d03:	icebp  
  419d04:	sub    bl,ah
  419d06:	mov    bh,0x38
  419d08:	prefetch BYTE PTR [ebx-0x47187d87]
  419d0f:	mov    edi,0x82038eee
  419d14:	imul   ebx,DWORD PTR [edx+0x48],0x30
  419d18:	data16 cmc 
  419d1a:	and    eax,0xbad17075
  419d1f:	pushf  
  419d20:	sub    al,0xeb
  419d22:	push   edi
  419d23:	sub    bh,dl
  419d25:	jno    0x419d33
  419d27:	arpl   WORD PTR [esi],sp
  419d29:	inc    ecx
  419d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d2b:	dec    ecx
  419d2c:	mov    bl,0xb5
  419d2e:	aam    0xb7
  419d30:	add    eax,0x8e77c032
  419d35:	sub    edi,DWORD PTR [edi-0x7aa9943a]
  419d3b:	arpl   sp,di
  419d3d:	retf   
  419d3e:	xor    DWORD PTR [edi+0x21],esp
  419d41:	inc    eax
  419d42:	sub    eax,0xf2f35425
  419d47:	lock fwait
  419d49:	aad    0x5b
  419d4b:	scas   eax,DWORD PTR es:[edi]
  419d4c:	std    
  419d4d:	rol    DWORD PTR [esi],0x40
  419d50:	adc    DWORD PTR ss:[esi-0x7b1040fa],0xffffffbd
  419d58:	div    BYTE PTR [ebp+0x38361881]
  419d5e:	loope  0x419d5d
  419d60:	xor    DWORD PTR [ebx+0x750503d1],esi
  419d66:	or     esp,DWORD PTR [edx+0x21b5f953]
  419d6c:	push   ss
  419d6d:	sbb    DWORD PTR [ecx+0x61edbfbe],0xae4058a9
  419d77:	(bad)  
  419d78:	cwde   
  419d79:	aaa    
  419d7a:	pop    esp
  419d7b:	rcl    DWORD PTR [edx-0x6e],0xb5
  419d7f:	dec    edx
  419d81:	mov    ebp,0x4404bde3
  419d86:	nop
  419d87:	and    ch,0xad
  419d8a:	mov    bl,0x21
  419d8c:	and    eax,0x775d9a35
  419d91:	std    
  419d92:	ds test al,0xd0
  419d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d96:	jl     0x419d67
  419d98:	fwait
  419d99:	dec    ebx
  419d9a:	aad    0x23
  419d9c:	cmc    
  419d9d:	jl     0x419e11
  419d9f:	sbb    bl,0xd
  419da2:	out    dx,eax
  419da3:	in     eax,0xda
  419da5:	and    ah,cl
  419da7:	inc    edi
  419da8:	pop    es
  419da9:	pop    ds
  419daa:	sbb    DWORD PTR [ecx+0x45ebdb80],edi
  419db0:	ficom  DWORD PTR [ebp-0x10952fa8]
  419db6:	jg     0x419de6
  419db8:	push   ebp
  419db9:	sbb    BYTE PTR [edi-0x9],dl
  419dbc:	nop
  419dbd:	sub    al,0xf2
  419dbf:	iret   
  419dc0:	mov    eax,ds:0x30ab21cb
  419dc5:	dec    esi
  419dc6:	ret    0xea0d
  419dc9:	push   ss
  419dca:	inc    BYTE PTR [edi]
  419dcc:	xchg   edx,eax
  419dcd:	dec    ebp
  419dce:	loopne 0x419deb
  419dd0:	shr    BYTE PTR [ecx],1
  419dd2:	sub    dh,cl
  419dd4:	inc    edx
  419dd5:	dec    ebx
  419dd6:	fstp   TBYTE PTR [ebx+edi*2-0x528721fb]
  419ddd:	xor    BYTE PTR [edx],ch
  419ddf:	sbb    al,0x80
  419de1:	fsub   QWORD PTR [esi+0x77da2172]
  419de7:	shl    DWORD PTR [edi+0x35],cl
  419dea:	jl     0x419dcf
  419dec:	int    0x42
  419dee:	stc    
  419def:	mov    bh,0x44
  419df1:	push   cs
  419df2:	call   0x12f76fd4
  419df7:	or     ebp,ebp
  419df9:	mov    eax,ds:0xc5587ee7
  419dfe:	adc    esi,eax
  419e00:	retf   
  419e01:	bound  ecx,QWORD PTR [ebp-0x1]
  419e04:	cmp    eax,0xc564bdf9
  419e09:	cmc    
  419e0a:	and    eax,0x112c1dc2
  419e0f:	xor    esi,esp
  419e11:	push   0x68
  419e13:	mov    ch,0xa2
  419e15:	in     al,dx
  419e16:	mov    ds:0x22fb41a1,eax
  419e1b:	aaa    
  419e1c:	addr16 pop ds
  419e1e:	fbld   TBYTE PTR [eax-0xe85dc72]
  419e24:	cmp    DWORD PTR [esi-0x515b6a64],edi
  419e2a:	test   al,0x20
  419e2c:	ret    
  419e2d:	fimul  DWORD PTR [esi+0x3d8b8b8f]
  419e33:	mov    ebx,0xcfef2a92
  419e38:	out    dx,eax
  419e39:	ret    
  419e3a:	cdq    
  419e3b:	aas    
  419e3c:	(bad)  
  419e3d:	sub    ebx,DWORD PTR [ebx]
  419e3f:	xchg   esp,eax
  419e40:	loope  0x419ddb
  419e42:	cwde   
  419e43:	xchg   esp,eax
  419e44:	and    eax,0x6cf9a7d
  419e49:	dec    edi
  419e4a:	push   esp
  419e4b:	(bad)  
  419e4c:	jb     0x419e6c
  419e4e:	jge    0x419e37
  419e50:	sar    dh,cl
  419e52:	mov    DWORD PTR [ebx],ebp
  419e54:	ror    BYTE PTR [esi-0x215cbbe0],cl
  419e5a:	push   ebp
  419e5b:	daa    
  419e5c:	xchg   ebx,eax
  419e5d:	test   eax,0x6ab8641
  419e62:	stos   DWORD PTR es:[edi],eax
  419e63:	or     eax,0xc366ded9
  419e68:	fsub   DWORD PTR [eax]
  419e6a:	add    bh,BYTE PTR [esi]
  419e6c:	ja     0x419e65
  419e6e:	lds    edi,FWORD PTR [edx+0x7c9834b0]
  419e74:	push   esi
  419e75:	adc    BYTE PTR [ebp-0x5f],ah
  419e78:	or     eax,0xc92ed5a5
  419e7d:	mov    eax,ds:0x453c7e2
  419e82:	fwait
  419e83:	popa   
  419e84:	out    dx,eax
  419e85:	cdq    
  419e86:	mov    ch,0xf7
  419e88:	call   0xbffa4da1
  419e8d:	mov    ah,0x8d
  419e8f:	inc    eax
  419e90:	outs   dx,DWORD PTR ds:[esi]
  419e91:	test   DWORD PTR [edx-0x5d],ecx
  419e94:	xchg   ecx,eax
  419e95:	hlt    
  419e96:	ret    
  419e97:	xchg   edx,eax
  419e98:	dec    edx
  419e99:	xor    eax,DWORD PTR [ebx+0x10b9cad9]
  419e9f:	adc    BYTE PTR [edi],ah
  419ea1:	in     al,dx
  419ea2:	push   edx
  419ea3:	xor    cl,BYTE PTR [edx]
  419ea5:	cmp    eax,0x7f8289a0
  419eaa:	jb     0x419e7a
  419eac:	dec    edx
  419ead:	inc    ecx
  419eae:	test   BYTE PTR [ecx+ebp*1+0x53],0xb4
  419eb3:	and    al,0x15
  419eb5:	lock inc ebp
  419eb7:	mov    ds,WORD PTR [ebp+0x4b]
  419eba:	fadd   st(7),st
  419ebc:	or     DWORD PTR [ebp-0x19001340],esp
  419ec2:	pop    eax
  419ec3:	sti    
  419ec4:	data16 jl 0x419eed
  419ec7:	scas   al,BYTE PTR es:[edi]
  419ec8:	fwait
  419ec9:	es out 0x58,al
  419ecc:	clc    
  419ecd:	and    al,0xd9
  419ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed0:	pop    ds
  419ed1:	inc    ebx
  419ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ed3:	inc    esp
  419ed4:	sub    eax,0x5d78e854
  419ed9:	jl     0x419f05
  419edb:	scas   eax,DWORD PTR es:[edi]
  419edc:	or     al,0xa2
  419ede:	pop    ebp
  419edf:	mov    al,0xb4
  419ee1:	push   esi
  419ee2:	push   cs
  419ee3:	loope  0x419ea0
  419ee5:	jl     0x419f37
  419ee7:	cmp    eax,0xc528a29b
  419eec:	pusha  
  419eed:	in     eax,dx
  419eee:	cmp    bh,BYTE PTR [ebx]
  419ef0:	pop    ecx
  419ef1:	ins    DWORD PTR es:[edi],dx
  419ef2:	stos   DWORD PTR es:[edi],eax
  419ef3:	repz jmp 0x447:0x463bcf6a
  419efb:	sub    dl,bl
  419efd:	adc    al,0x31
  419eff:	or     eax,0x4ddfd7ec
  419f04:	cwde   
  419f05:	cmp    eax,0xaeff3d7e
  419f0a:	push   0x7b0094f2
  419f0f:	cli    
  419f10:	imul   ecx,DWORD PTR [eax+0x7223e5f1],0xffffff95
  419f17:	lahf   
  419f18:	adc    al,0xa1
  419f1a:	shl    DWORD PTR [esi],0x5e
  419f1d:	dec    edi
  419f1e:	sbb    BYTE PTR [ebx+0x51],ah
  419f21:	ja     0x419f87
  419f23:	jne    0x419ea7
  419f25:	dec    ecx
  419f26:	(bad)  
  419f27:	mov    bh,0xc6
  419f29:	sub    eax,0x1c7d60b8
  419f2e:	addr16 enter 0x26a7,0xf5
  419f33:	retf   0xc2cc
  419f36:	(bad)  
  419f37:	xlat   BYTE PTR ds:[ebx]
  419f38:	mov    dh,0x20
  419f3a:	sti    
  419f3b:	(bad)  
  419f3c:	cld    
  419f3d:	ret    0x91e3
  419f40:	mov    ebx,0xf82f75dd
  419f45:	mov    dh,0x85
  419f47:	and    DWORD PTR [ecx],edx
  419f49:	xchg   ebp,eax
  419f4a:	test   al,0x2c
  419f4c:	dec    edx
  419f4d:	sbb    dh,BYTE PTR [eax]
  419f4f:	fbld   TBYTE PTR cs:[ebx]
  419f52:	push   ds
  419f53:	xchg   ebp,eax
  419f54:	dec    ebp
  419f55:	sahf   
  419f56:	mov    al,0xd3
  419f58:	xor    dh,BYTE PTR [edx+eax*4]
  419f5b:	leave  
  419f5c:	push   ecx
  419f5d:	pop    ss
  419f5e:	clc    
  419f5f:	sub    al,BYTE PTR [eax-0x57d67bca]
  419f65:	xchg   edi,eax
  419f66:	cdq    
  419f67:	(bad)  
  419f68:	cwde   
  419f69:	es call 0x7abb5250
  419f6f:	stos   DWORD PTR es:[edi],eax
  419f70:	gs popf 
  419f72:	ja     0x419f2d
  419f74:	dec    esi
  419f75:	jne    0x419efc
  419f77:	lods   al,BYTE PTR ds:[esi]
  419f78:	jg     0x419f80
  419f7a:	jge    0x419fd0
  419f7c:	sub    al,0x43
  419f7e:	jae    0x419f00
  419f80:	and    ah,BYTE PTR [edx]
  419f82:	add    bh,BYTE PTR ds:[ebx-0x18]
  419f86:	lds    esi,FWORD PTR [edi+0x5631b010]
  419f8c:	stc    
  419f8d:	mov    ecx,0x496f54e
  419f92:	add    esp,ebx
  419f94:	xchg   esp,eax
  419f95:	cmp    eax,0x52670943
  419f9a:	(bad)  
  419f9b:	adc    ebx,DWORD PTR [edx+0x1b]
  419f9e:	test   DWORD PTR [ebx-0x7d2a04fb],0xa914f8b4
  419fa8:	fidivr DWORD PTR ds:0x3af5
  419fad:	and    al,0xd5
  419faf:	jb     0x419f5b
  419fb1:	push   ebx
  419fb2:	imul   BYTE PTR [eax+0x2]
  419fb5:	mov    ch,0x6b
  419fb7:	jmp    0x79d03e3e
  419fbc:	mov    dl,0x93
  419fbe:	add    DWORD PTR [eax-0x5066df5f],0x4c
  419fc5:	imul   ebx,DWORD PTR [ebp-0x1db72f3a],0xa71d2396
  419fcf:	sahf   
  419fd0:	adc    eax,0xc03ae10a
  419fd5:	test   BYTE PTR [esi-0xf],dh
  419fd8:	mov    dl,0xcc
  419fda:	mov    ss,WORD PTR [eax+0x658e1c22]
  419fe0:	shl    DWORD PTR [eax],1
  419fe2:	lds    esi,FWORD PTR [edx-0x50347e7d]
  419fe8:	jb     0x41a044
  419fea:	inc    eax
  419feb:	lods   al,BYTE PTR ds:[esi]
  419fec:	cmp    DWORD PTR ds:0xd1e783db,0xa8ef6b5c
  419ff6:	shl    ebp,cl
  419ff8:	mov    dl,0xff
  419ffa:	mov    al,0xe9
  419ffc:	je     0x41a034
  419ffe:	lods   al,BYTE PTR ds:[esi]
  419fff:	fdivp  st(0),st
  41a001:	aam    0xd5
  41a003:	cmp    ebp,ebx
  41a005:	inc    ebx
  41a006:	pop    eax
  41a007:	push   ebp
  41a008:	shl    BYTE PTR [ecx+0x8],cl
  41a00b:	jns    0x41a001
  41a00d:	inc    edi
  41a00e:	sub    eax,0x44febd13
  41a013:	sub    edx,DWORD PTR [edi+0x4e]
  41a016:	sbb    esi,DWORD PTR [eax+0x6]
  41a019:	mov    esi,0x308929e7
  41a01e:	loopne 0x41a05e
  41a020:	add    al,0xb
  41a022:	repz imul esi,edx,0x8
  41a026:	push   es
  41a027:	push   0x9ab779a
  41a02c:	xor    DWORD PTR [esi],0x7a
  41a02f:	push   ecx
  41a030:	retf   0x60f1
  41a033:	in     eax,dx
  41a034:	push   ebx
  41a035:	dec    ebp
  41a036:	or     al,0xba
  41a038:	in     al,dx
  41a039:	push   0x6e6b45d5
  41a03e:	cmp    DWORD PTR [eax-0x90db0aa],ebp
  41a044:	cdq    
  41a045:	cmp    al,0xbf
  41a047:	(bad)  
  41a048:	xlat   BYTE PTR ds:[ebx]
  41a049:	fwait
  41a04a:	jb     0x41a001
  41a04c:	out    dx,al
  41a04d:	mov    bl,0x9a
  41a04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a050:	xor    BYTE PTR [ecx+0x11],al
  41a053:	js     0x41a0d1
  41a055:	push   ecx
  41a056:	adc    ecx,edi
  41a058:	mov    ebp,0x5ddcb695
  41a05d:	loop   0x41a06f
  41a05f:	loopne 0x419fe4
  41a061:	aas    
  41a062:	sbb    BYTE PTR [edi+ecx*2-0x53],dl
  41a066:	push   ebx
  41a067:	xchg   ebp,esp
  41a069:	cmp    cl,bl
  41a06b:	repnz retf 
  41a06d:	call   0x1a5e:0xe8fe
  41a073:	dec    eax
  41a074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a075:	in     eax,0xdd
  41a077:	mov    ebx,0xc6093e2e
  41a07c:	arpl   WORD PTR [edi+0x41af2fdc],bx
  41a082:	pop    edx
  41a083:	mov    ebx,0x30b8e78
  41a088:	sub    DWORD PTR [edx+0x13756f51],edi
  41a08e:	inc    edx
  41a08f:	cli    
  41a090:	imul   esi,eax,0x2ffe81c8
  41a096:	mov    DWORD PTR [ebp-0x5d8d3565],0x927f9ec
  41a0a0:	js     0x41a02f
  41a0a2:	push   edx
  41a0a3:	in     eax,0x70
  41a0a5:	mov    esp,0xd2ff524
  41a0aa:	shl    edx,0xae
  41a0ad:	add    edi,DWORD PTR [ebp-0xa]
  41a0b0:	sahf   
  41a0b1:	fdivp  st(0),st
  41a0b3:	pop    ss
  41a0b4:	hlt    
  41a0b5:	inc    ebp
  41a0b6:	xor    ah,bh
  41a0b8:	mov    ebx,0x80216d64
  41a0bd:	lea    ebp,[eax+0x21dc6ea7]
  41a0c3:	outs   dx,BYTE PTR ds:[esi]
  41a0c4:	or     al,0x7f
  41a0c6:	jmp    0x41a0c1
  41a0c8:	or     BYTE PTR [esi-0x16097de9],cl
  41a0ce:	mov    DWORD PTR [edx+0xf],edi
  41a0d1:	mov    cl,0x32
  41a0d3:	push   es
  41a0d4:	xor    eax,0x4c76110c
  41a0d9:	popa   
  41a0da:	clc    
  41a0db:	and    esi,DWORD PTR [eax+0x27]
  41a0de:	xor    bh,BYTE PTR [edi-0x54]
  41a0e1:	inc    edx
  41a0e2:	ins    BYTE PTR es:[edi],dx
  41a0e3:	ficom  WORD PTR [ebp+0x3b69790f]
  41a0e9:	inc    ecx
  41a0ea:	ins    BYTE PTR es:[edi],dx
  41a0eb:	test   DWORD PTR [ecx+eax*8-0x2e8f4ba0],esi
  41a0f2:	dec    esp
  41a0f3:	inc    ebx
  41a0f4:	or     esp,0x699060cb
  41a0fa:	push   esp
  41a0fb:	dec    ebx
  41a0fc:	cmp    esp,DWORD PTR [edx+0x33c8b907]
  41a102:	pop    ebp
  41a103:	xchg   edi,eax
  41a104:	jg     0x41a121
  41a106:	jmp    0x41a0af
  41a108:	out    0x7b,al
  41a10a:	js     0x41a110
  41a10c:	add    al,BYTE PTR [ebx+0x5]
  41a10f:	fist   WORD PTR [esi]
  41a111:	cmp    DWORD PTR [eax],edi
  41a113:	inc    edx
  41a114:	mov    esi,0x3b9a9b62
  41a119:	call   0xef45:0x778964b3
  41a120:	push   edi
  41a121:	mov    fs,WORD PTR [ebx+0x45cef4c3]
  41a127:	xchg   edx,eax
  41a128:	cmp    ch,BYTE PTR [edi]
  41a12a:	add    eax,0x3f8ac1d1
  41a12f:	stos   BYTE PTR es:[edi],al
  41a130:	(bad)  
  41a131:	fst    QWORD PTR [esp+ebp*2+0xb137f90]
  41a138:	mov    edi,0x76830e28
  41a13d:	mov    BYTE PTR [edi+0x1f9f147b],al
  41a143:	(bad)  [eax+ecx*8-0x6529590c]
  41a14a:	mov    ds:0x93e01995,al
  41a14f:	sub    eax,0x40ecdc45
  41a154:	push   ecx
  41a155:	gs pop ecx
  41a157:	cld    
  41a158:	inc    eax
  41a159:	(bad)  
  41a15a:	jg     0x41a145
  41a15c:	aaa    
  41a15d:	shl    DWORD PTR [ebp-0x71],0xf2
  41a161:	outs   dx,DWORD PTR ds:[esi]
  41a162:	dec    edi
  41a163:	sub    BYTE PTR [edx],0x4b
  41a166:	mov    bh,0x49
  41a168:	adc    BYTE PTR [eax-0x4c],al
  41a16b:	jns    0x41a135
  41a16d:	push   esp
  41a16e:	pop    esi
  41a16f:	sbb    edi,eax
  41a171:	jnp    0x41a153
  41a173:	adc    eax,0xdef1e7d
  41a178:	pop    esi
  41a179:	lods   eax,DWORD PTR ds:[esi]
  41a17a:	add    bh,BYTE PTR [esi+0x7a77c95]
  41a180:	stc    
  41a181:	icebp  
  41a182:	sub    eax,0x3a8f69b1
  41a187:	cli    
  41a188:	out    dx,eax
  41a189:	xchg   esi,eax
  41a18a:	ins    DWORD PTR es:[edi],dx
  41a18b:	mov    dh,0x8
  41a18d:	inc    esi
  41a18e:	cmp    al,0x17
  41a190:	adc    eax,0x938b22b8
  41a195:	pop    ebx
  41a196:	push   edx
  41a197:	ss mov ebp,0x25ed97b7
  41a19d:	mov    ebp,0x4f76c32c
  41a1a2:	retf   
  41a1a3:	mov    eax,ds:0xdc8413eb
  41a1a8:	adc    al,0x95
  41a1aa:	clc    
  41a1ab:	dec    ecx
  41a1ac:	mov    BYTE PTR [edx+0x3f],dh
  41a1af:	repz xor DWORD PTR [ebp+0x21],eax
  41a1b3:	xchg   edi,eax
  41a1b4:	mov    ecx,0x62987e1f
  41a1b9:	nop
  41a1ba:	inc    ebp
  41a1bb:	shl    DWORD PTR [eax],0xc6
  41a1be:	push   ecx
  41a1bf:	add    dl,BYTE PTR [ecx]
  41a1c1:	jns    0x41a230
  41a1c3:	xchg   edx,eax
  41a1c4:	xor    eax,DWORD PTR [ecx]
  41a1c6:	pop    eax
  41a1c7:	jnp    0x41a239
  41a1c9:	fs stos BYTE PTR es:[edi],al
  41a1cb:	push   ss
  41a1cc:	fcmovne st,st(1)
  41a1ce:	or     al,0xb
  41a1d0:	mov    al,0xf6
  41a1d2:	jbe    0x41a19f
  41a1d4:	sbb    eax,0xaa1c60a0
  41a1d9:	aaa    
  41a1da:	xchg   BYTE PTR [ebx-0x72],al
  41a1dd:	jns    0x41a210
  41a1df:	shl    cl,1
  41a1e1:	retf   0x292a
  41a1e4:	pop    ecx
  41a1e5:	mov    ds:0xe8e2d418,al
  41a1ea:	push   edi
  41a1eb:	or     ecx,DWORD PTR [ecx-0x2c535be5]
  41a1f1:	(bad)  [esi+eax*8-0x41]
  41a1f5:	adc    al,BYTE PTR [ebx+eax*8]
  41a1f8:	ret    
  41a1f9:	dec    eax
  41a1fa:	cmp    eax,0x45079abe
  41a1ff:	stos   BYTE PTR es:[edi],al
  41a200:	fisub  WORD PTR [edx+0x7e]
  41a203:	cmp    ecx,esp
  41a205:	mov    WORD PTR [ebp+0x12],?
  41a208:	xor    dl,BYTE PTR [esi]
  41a20a:	and    edi,edi
  41a20c:	mov    eax,esp
  41a20e:	in     eax,0x4
  41a210:	push   0xb367ffd5
  41a215:	cmp    eax,DWORD PTR [edi+0x248d4544]
  41a21b:	fcmovu st,st(0)
  41a21d:	jb     0x41a1b7
  41a21f:	je     0x41a25d
  41a221:	add    dl,dl
  41a223:	sub    edi,DWORD PTR [edi-0x1999cb9]
  41a229:	loope  0x41a251
  41a22b:	lea    ebx,[ebp+0x52]
  41a22e:	sub    al,0xf2
  41a230:	add    DWORD PTR [ebx+edi*1-0x1cd91703],eax
  41a237:	sti    
  41a238:	stos   DWORD PTR es:[edi],eax
  41a239:	sbb    al,0x77
  41a23b:	les    edi,FWORD PTR [ebx-0x2047bf85]
  41a241:	sbb    eax,0x26894d19
  41a246:	std    
  41a247:	pop    esp
  41a248:	pop    edx
  41a249:	push   edi
  41a24a:	mov    edx,0xf6fd0325
  41a24f:	add    esp,DWORD PTR [edi+0x36]
  41a252:	js     0x41a2a8
  41a254:	inc    eax
  41a255:	loope  0x41a200
  41a257:	repnz sbb dh,BYTE PTR [esi-0x381367c6]
  41a25e:	enter  0xa8f2,0x6b
  41a262:	stos   DWORD PTR es:[edi],eax
  41a263:	xchg   esi,eax
  41a264:	push   edx
  41a265:	or     DWORD PTR [ecx+0x1ae4d98e],esp
  41a26b:	cmp    eax,0x234f4c9f
  41a270:	repnz ins DWORD PTR es:[edi],dx
  41a272:	push   ds
  41a273:	test   al,0x72
  41a275:	pop    edi
  41a276:	repnz popf 
  41a278:	jle    0x41a2df
  41a27a:	das    
  41a27b:	jecxz  0x41a2af
  41a27d:	call   0x726ed866
  41a282:	jge    0x41a280
  41a284:	sti    
  41a285:	(bad)  
  41a286:	add    esp,DWORD PTR [esi-0xe]
  41a289:	das    
  41a28a:	popa   
  41a28b:	je     0x41a2bf
  41a28d:	pop    esi
  41a28e:	mov    ss:0xbd7584b9,eax
  41a294:	and    edx,DWORD PTR [edx]
  41a296:	pop    ss
  41a297:	dec    DWORD PTR [ebx+0x50]
  41a29a:	push   ebp
  41a29b:	out    dx,eax
  41a29c:	inc    ecx
  41a29d:	and    edi,ecx
  41a29f:	mov    bl,bl
  41a2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2a2:	jl     0x41a26d
  41a2a4:	test   eax,0xf119f3ea
  41a2a9:	mov    bl,0xe3
  41a2ab:	xor    BYTE PTR [edx+0x2b],dl
  41a2ae:	mov    al,ds:0x479f7087
  41a2b3:	sbb    cl,BYTE PTR [ecx]
  41a2b5:	std    
  41a2b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b7:	add    ah,ch
  41a2b9:	sub    eax,0x165d5bf9
  41a2be:	xchg   BYTE PTR [edx-0x47079683],dh
  41a2c4:	xor    al,BYTE PTR [eax]
  41a2c6:	ds push eax
  41a2c8:	push   edx
  41a2c9:	sub    BYTE PTR [eax+0x24],ch
  41a2cc:	pop    edx
  41a2cd:	cmp    ebx,ecx
  41a2cf:	jne    0x41a30f
  41a2d1:	xor    DWORD PTR [edx+0x3c],edi
  41a2d4:	xchg   DWORD PTR ds:0xc871d338,esi
  41a2da:	mov    eax,0xb46064d5
  41a2df:	idiv   BYTE PTR [esi]
  41a2e1:	retf   
  41a2e2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e4:	add    eax,0x9aed4b7b
  41a2e9:	jns    0x41a352
  41a2eb:	cld    
  41a2ec:	sbb    BYTE PTR [ebp-0x7f3a22c2],cl
  41a2f2:	mov    ebp,0xb5026319
  41a2f7:	rol    DWORD PTR [edx],1
  41a2f9:	cli    
  41a2fa:	hlt    
  41a2fb:	in     al,dx
  41a2fc:	es cli 
  41a2fe:	das    
  41a2ff:	ret    
  41a300:	sub    DWORD PTR [edi],esi
  41a302:	ins    DWORD PTR es:[edi],dx
  41a303:	mov    eax,ds:0x4f8d60af
  41a308:	leave  
  41a309:	jns    0x41a31a
  41a30b:	add    bh,BYTE PTR [edx+0x6d]
  41a30e:	and    eax,0xdd0b9aaa
  41a313:	add    eax,0x4458facb
  41a318:	sbb    esi,ecx
  41a31a:	outs   dx,DWORD PTR ds:[esi]
  41a31b:	(bad)  
  41a31c:	xchg   edi,eax
  41a31d:	add    eax,0xc93c87b2
  41a322:	push   ebx
  41a323:	std    
  41a324:	fstp   QWORD PTR [eax-0x70]
  41a327:	pop    esp
  41a328:	dec    eax
  41a329:	outs   dx,BYTE PTR ds:[esi]
  41a32a:	(bad)  [eax]
  41a32c:	ja     0x41a388
  41a32e:	sbb    BYTE PTR [edi-0x54d350e7],bl
  41a334:	mov    bl,0x4e
  41a336:	pushf  
  41a337:	rcl    BYTE PTR [eax],1
  41a339:	push   ecx
  41a33a:	scas   al,BYTE PTR es:[edi]
  41a33b:	and    eax,DWORD PTR [ecx]
  41a33d:	sbb    eax,0x523d8beb
  41a342:	xlat   BYTE PTR ds:[ebx]
  41a343:	aad    0xe8
  41a345:	inc    ecx
  41a346:	hlt    
  41a347:	mov    eax,0xe135ae8b
  41a34c:	popa   
  41a34d:	rol    eax,cl
  41a34f:	pushf  
  41a350:	lock ret 
  41a352:	pop    edx
  41a353:	pop    es
  41a354:	cli    
  41a355:	push   0x18
  41a357:	std    
  41a358:	stos   BYTE PTR es:[edi],al
  41a359:	push   edi
  41a35a:	loop   0x41a336
  41a35c:	ins    DWORD PTR es:[edi],dx
  41a35d:	and    al,al
  41a35f:	adc    al,0x87
  41a361:	push   ecx
  41a362:	sti    
  41a363:	xlat   BYTE PTR ds:[ebx]
  41a364:	sbb    eax,0xee4c31f5
  41a369:	inc    ebx
  41a36a:	mov    ds:0x26c9a4f5,al
  41a36f:	outs   dx,BYTE PTR ds:[esi]
  41a370:	add    BYTE PTR [ecx],dh
  41a372:	sub    edx,esp
  41a374:	mov    edx,0xfcd88954
  41a379:	xchg   edx,eax
  41a37a:	scas   al,BYTE PTR es:[edi]
  41a37b:	xchg   esp,eax
  41a37c:	pop    esi
  41a37d:	ja     0x41a331
  41a37f:	mov    bh,BYTE PTR [edi]
  41a381:	push   ebp
  41a382:	pop    ecx
  41a383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a384:	mov    eax,ds:0x556f045e
  41a389:	aas    
  41a38a:	pop    es
  41a38b:	add    al,BYTE PTR [esi-0x2d]
  41a38e:	sbb    al,0xdc
  41a390:	ins    BYTE PTR es:[edi],dx
  41a391:	sub    ch,BYTE PTR [edx]
  41a393:	daa    
  41a394:	mov    esp,esp
  41a396:	sub    DWORD PTR [edi+ecx*8-0x29915233],ecx
  41a39d:	or     al,0xc6
  41a39f:	pop    es
  41a3a0:	imul   DWORD PTR [ecx-0x6c]
  41a3a3:	bnd jle 0x41a35f
  41a3a6:	cmp    BYTE PTR [eax+ebp*4-0x74],bl
  41a3aa:	or     al,BYTE PTR ds:0x1ca3c947
  41a3b0:	pop    ebp
  41a3b1:	and    edi,DWORD PTR [esi+edi*2+0x62]
  41a3b5:	xchg   esi,eax
  41a3b6:	push   ds
  41a3b7:	dec    ebp
  41a3b8:	mov    edi,0xdf841f45
  41a3bd:	push   edi
  41a3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3bf:	mov    DWORD PTR [ecx],esp
  41a3c1:	addr16 xchg edx,eax
  41a3c3:	stos   BYTE PTR es:[edi],al
  41a3c4:	push   ebx
  41a3c5:	add    DWORD PTR [eax-0x43],eax
  41a3c8:	xchg   edx,eax
  41a3c9:	add    al,BYTE PTR [eax+0x4e]
  41a3cc:	sub    BYTE PTR [esi-0x4f27ef13],cl
  41a3d2:	add    DWORD PTR [edi+0x5738eb61],esp
  41a3d8:	sbb    ebp,0x43cb17a7
  41a3de:	inc    ecx
  41a3df:	dec    edx
  41a3e0:	add    al,0xb3
  41a3e2:	add    eax,0xcd360eee
  41a3e7:	in     eax,dx
  41a3e8:	and    BYTE PTR [ebx+esi*8],al
  41a3eb:	dec    eax
  41a3ec:	push   ebx
  41a3ed:	repz or DWORD PTR [eax+0x3],0xffffff94
  41a3f2:	jmp    0x41a46d
  41a3f4:	jmp    0xd7983203
  41a3f9:	mov    ebp,0xf129d990
  41a3fe:	cmp    ebx,DWORD PTR [ebp-0x39]
  41a401:	fcmovne st,st(7)
  41a403:	mov    ah,0x9c
  41a405:	enter  0x655a,0x1b
  41a409:	add    dh,BYTE PTR [esi+0x27416422]
  41a40f:	es pusha 
  41a411:	and    al,0x10
  41a413:	sbb    DWORD PTR [edx],ebx
  41a415:	sub    BYTE PTR [ecx+0x4c],cl
  41a418:	loopne 0x41a45b
  41a41a:	pop    edx
  41a41b:	mov    esp,0xa9e9226a
  41a420:	sti    
  41a421:	arpl   WORD PTR [ebx-0x7c84455],cx
  41a427:	mov    edx,0xc9ac7ae2
  41a42c:	fmul   QWORD PTR [esp+ebx*2+0x22d04f7]
  41a433:	call   0xd77de8a4
  41a438:	les    esp,FWORD PTR [edx+0x58]
  41a43b:	arpl   WORD PTR [ebx],sp
  41a43d:	repnz lods eax,DWORD PTR ds:[esi]
  41a43f:	cwde   
  41a440:	call   0x3f6bad77
  41a445:	sbb    DWORD PTR [esi],0x56
  41a448:	xchg   edi,eax
  41a449:	leave  
  41a44a:	icebp  
  41a44b:	std    
  41a44c:	xchg   edi,eax
  41a44d:	mov    eax,0x544c635c
  41a452:	pop    es
  41a453:	mov    ah,0x16
  41a455:	add    al,0x59
  41a457:	mov    ds:0x2e8eea82,al
  41a45c:	and    eax,0x10a8a66
  41a461:	test   edx,esp
  41a463:	outs   dx,DWORD PTR ds:[esi]
  41a464:	mov    eax,ds:0x39875d56
  41a469:	scas   eax,DWORD PTR es:[edi]
  41a46a:	mov    bh,bl
  41a46c:	mov    esp,0xc52bf6d7
  41a471:	loop   0x41a3fa
  41a473:	cs jbe 0x41a48c
  41a476:	ret    
  41a477:	mov    bl,0xa0
  41a479:	push   edx
  41a47a:	retf   
  41a47b:	ja     0x41a4bf
  41a47d:	scas   al,BYTE PTR es:[edi]
  41a47e:	inc    ebp
  41a47f:	sub    bh,dl
  41a481:	int3   
  41a482:	rol    BYTE PTR [edi+0x59415309],0xb4
  41a489:	bound  ebx,QWORD PTR [ecx]
  41a48b:	mov    al,0xa8
  41a48d:	add    eax,0x40b938f4
  41a492:	cs xchg ecx,eax
  41a494:	test   BYTE PTR [esi-0x20],bh
  41a497:	(bad)  
  41a498:	out    0xd0,eax
  41a49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49b:	ds (bad) fs:[esi]
  41a49f:	jl     0x41a49b
  41a4a1:	pop    esi
  41a4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4a3:	and    bh,dl
  41a4a5:	sbb    DWORD PTR [ebp-0x1ef2de74],eax
  41a4ab:	icebp  
  41a4ac:	rcl    BYTE PTR cs:[edi-0x27b5dae5],0x18
  41a4b4:	fsub   QWORD PTR [ecx-0x5a]
  41a4b7:	mov    ah,0x60
  41a4b9:	jecxz  0x41a4fd
  41a4bb:	and    ah,bl
  41a4bd:	jne    0x41a503
  41a4bf:	xchg   ecx,eax
  41a4c0:	push   cs
  41a4c1:	xor    DWORD PTR [esi],eax
  41a4c3:	ins    BYTE PTR es:[edi],dx
  41a4c4:	or     dh,ah
  41a4c6:	cmp    al,0xd9
  41a4c8:	sti    
  41a4c9:	ds repnz push ds
  41a4cc:	inc    esi
  41a4cd:	mov    ch,0x51
  41a4cf:	fabs   
  41a4d1:	enter  0xb65,0xb5
  41a4d5:	ins    BYTE PTR es:[edi],dx
  41a4d6:	add    eax,0xdc1b9739
  41a4db:	fistp  DWORD PTR [edx]
  41a4dd:	fsubr  DWORD PTR [edi]
  41a4df:	sub    dl,dl
  41a4e1:	(bad)  
  41a4e2:	pop    esp
  41a4e3:	je     0x41a49b
  41a4e5:	add    DWORD PTR [ecx-0x71],eax
  41a4e8:	sar    DWORD PTR [ebx-0x63291290],1
  41a4ee:	cs into 
  41a4f0:	lods   al,BYTE PTR ds:[esi]
  41a4f1:	aaa    
  41a4f2:	and    BYTE PTR [esi+0x6a],cl
  41a4f5:	pop    ds
  41a4f6:	pushf  
  41a4f7:	fwait
  41a4f8:	push   esp
  41a4f9:	or     BYTE PTR [eax+0x4750d9f],0x9d
  41a500:	imul   eax,DWORD PTR [esi+ecx*1],0x3f
  41a504:	outs   dx,BYTE PTR ds:[esi]
  41a505:	mov    bh,0x1
  41a507:	mov    bh,0xf8
  41a509:	rcl    DWORD PTR [esi+0x7f687558],cl
  41a50f:	pop    ss
  41a510:	es pop edi
  41a512:	lahf   
  41a513:	mov    ch,0xea
  41a515:	daa    
  41a516:	sbb    DWORD PTR [eax],esi
  41a518:	dec    edx
  41a519:	add    eax,0x559d0150
  41a51e:	fistp  DWORD PTR [ebx]
  41a520:	xchg   edx,eax
  41a521:	jne    0x41a4aa
  41a523:	fs std 
  41a525:	rcr    BYTE PTR [edx-0x28],cl
  41a528:	cmc    
  41a529:	sbb    DWORD PTR [ecx],edx
  41a52b:	push   0x6ca39ec0
  41a530:	xor    eax,0x7e195643
  41a535:	std    
  41a536:	or     ebx,DWORD PTR [eax+0xf3fde9a]
  41a53c:	lea    ebx,[ebp+0x36]
  41a53f:	test   dl,cl
  41a541:	xchg   cl,ch
  41a543:	dec    esi
  41a544:	mov    dh,0xc5
  41a546:	fidiv  DWORD PTR [ecx]
  41a548:	pop    ebp
  41a549:	xor    esp,edx
  41a54b:	push   0xffffffaf
  41a54d:	and    BYTE PTR [esi-0xd],0xfb
  41a551:	sbb    eax,0x5e4494fa
  41a556:	or     ch,BYTE PTR [edx-0x50586d3c]
  41a55c:	sub    eax,0x837ee3e4
  41a561:	aad    0x2d
  41a563:	mov    ebx,0x7c33d05b
  41a568:	pop    edx
  41a569:	fcomp  QWORD PTR [ebx*4-0x15a66c7c]
  41a570:	fwait
  41a571:	mov    edi,0x24146366
  41a576:	mov    edx,0xa71dc5b1
  41a57b:	adc    eax,0xa94a4319
  41a580:	sub    al,0xcb
  41a582:	sub    edi,ecx
  41a584:	adc    DWORD PTR [esi+0x1cb1678f],eax
  41a58a:	pop    ss
  41a58b:	adc    ebx,DWORD PTR [esi+0x585eec8]
  41a591:	and    dl,BYTE PTR [ebx-0x53]
  41a594:	push   0xffffffd7
  41a596:	loop   0x41a60e
  41a598:	adc    DWORD PTR [esi+0x12],edx
  41a59b:	mov    dh,0x62
  41a59d:	clc    
  41a59e:	in     al,0xae
  41a5a0:	int    0x30
  41a5a2:	mov    ch,0xdd
  41a5a4:	or     esi,DWORD PTR [ebx]
  41a5a6:	fwait
  41a5a7:	mov    ebp,0x45358ea8
  41a5ac:	xchg   edx,eax
  41a5ad:	sbb    al,0xb7
  41a5af:	adc    eax,0x3d4a3400
  41a5b4:	jae    0x41a5b3
  41a5b6:	xor    dl,BYTE PTR [ecx*1-0x49ac6e3e]
  41a5bd:	arpl   WORD PTR [ebp+ecx*4+0x5b],di
  41a5c1:	cmp    eax,0xff918dcb
  41a5c6:	addr16 cld 
  41a5c8:	int3   
  41a5c9:	pushf  
  41a5ca:	sar    DWORD PTR [edi-0x29d077a8],cl
  41a5d0:	stos   BYTE PTR es:[edi],al
  41a5d1:	sbb    BYTE PTR [edi+ecx*8-0x7],0x90
  41a5d6:	nop
  41a5d7:	(bad)  
  41a5d8:	in     al,0x7d
  41a5da:	add    al,0x5c
  41a5dc:	loope  0x41a57e
  41a5de:	mov    ah,0xdd
  41a5e0:	dec    eax
  41a5e1:	test   ah,bh
  41a5e3:	(bad)  
  41a5e4:	mov    ebx,0xd7cbf8f3
  41a5e9:	neg    DWORD PTR [eax]
  41a5eb:	mov    ah,0xa7
  41a5ed:	ja     0x41a602
  41a5ef:	pop    ds
  41a5f0:	or     BYTE PTR [eax-0x4297b704],0x2c
  41a5f7:	xlat   BYTE PTR ds:[ebx]
  41a5f8:	fs fadd st(0),st
  41a5fb:	jecxz  0x41a647
  41a5fd:	sub    eax,0xc06f47f4
  41a602:	jae    0x41a5ca
  41a604:	jmp    0x7d9f:0xd4d91a7e
  41a60b:	repnz aaa 
  41a60d:	jmp    0x41a594
  41a60f:	mov    ?,WORD PTR [ebx]
  41a611:	ficom  DWORD PTR [eax-0x23285541]
  41a617:	dec    esi
  41a618:	fucomi st,st(7)
  41a61a:	sub    esi,DWORD PTR [eax-0x67fb5309]
  41a620:	add    DWORD PTR [edx-0x7c],edx
  41a623:	ins    DWORD PTR es:[edi],dx
  41a624:	scas   al,BYTE PTR es:[edi]
  41a625:	sbb    ah,0x85
  41a628:	dec    edx
  41a629:	jp     0x41a61c
  41a62b:	mov    ah,0x28
  41a62d:	jnp    0x41a5dc
  41a62f:	out    0x68,eax
  41a631:	mov    eax,0xb2bcdcd3
  41a636:	and    eax,0x2f04f0a2
  41a63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a63c:	enter  0x420f,0x8a
  41a640:	mov    edx,0xcca775c3
  41a645:	lock into 
  41a647:	push   es
  41a648:	mov    eax,ds:0xf5ac4d5a
  41a64d:	inc    eax
  41a64e:	sahf   
  41a64f:	mov    bl,0xeb
  41a651:	test   DWORD PTR [ecx+0x6c1b657f],0x7936e51c
  41a65b:	into   
  41a65c:	fst    st(7)
  41a65e:	test   DWORD PTR [ecx+0x71544dba],0xdf272795
  41a668:	sti    
  41a669:	jns    0x41a672
  41a66b:	sti    
  41a66c:	xor    bl,bh
  41a66e:	xor    ecx,ebx
  41a670:	mov    es,WORD PTR [ecx]
  41a672:	test   al,0xcc
  41a674:	pop    ebx
  41a675:	push   esi
  41a676:	or     edx,DWORD PTR [ebx]
  41a678:	iret   
  41a679:	mov    DWORD PTR [ebx+0x56b0bd9f],0x288c8ab4
  41a683:	inc    ebp
  41a684:	dec    ebp
  41a685:	stos   BYTE PTR es:[edi],al
  41a686:	js     0x41a69f
  41a688:	adc    ebp,ebx
  41a68a:	icebp  
  41a68b:	mov    esp,0x231de35f
  41a690:	retf   
  41a691:	cmc    
  41a692:	jnp    0x41a64b
  41a694:	data16 mov cl,0x51
  41a697:	mov    bh,0xf9
  41a699:	enter  0x864a,0x17
  41a69d:	jecxz  0x41a631
  41a69f:	sbb    dl,cl
  41a6a1:	and    al,0xd0
  41a6a3:	jno    0x41a70c
  41a6a5:	fcomp  DWORD PTR [esi]
  41a6a7:	pop    esp
  41a6a8:	push   ss
  41a6a9:	jp     0x41a649
  41a6ab:	jmp    0x41a645
  41a6ad:	mov    ah,0xa2
  41a6af:	cmp    DWORD PTR [edi-0x5e182f23],0x33625f9a
  41a6b9:	mov    edx,0x9e2fd526
  41a6be:	push   ebx
  41a6bf:	mov    esi,0xd8db0aa7
  41a6c4:	mov    ecx,edi
  41a6c6:	sbb    eax,0x7e25a6c7
  41a6cb:	dec    ebx
  41a6cc:	cmp    BYTE PTR ds:0x80fb8336,ah
  41a6d2:	dec    esp
  41a6d3:	enter  0x76d7,0x7d
  41a6d7:	cdq    
  41a6d8:	mov    ch,0x4e
  41a6da:	dec    edx
  41a6db:	and    ah,BYTE PTR [ebx+eax*2-0x75]
  41a6df:	sbb    esi,DWORD PTR [eax-0x4d]
  41a6e2:	fwait
  41a6e3:	and    eax,0x7eba005b
  41a6e8:	xchg   esp,ebp
  41a6ea:	jl     0x41a6ee
  41a6ec:	mov    ebp,0x7bc1e264
  41a6f1:	jecxz  0x41a6b9
  41a6f3:	scas   al,BYTE PTR es:[edi]
  41a6f4:	mov    cl,0x97
  41a6f6:	das    
  41a6f7:	out    0xb6,al
  41a6f9:	xchg   edi,eax
  41a6fa:	jmp    0x41a67d
  41a6fc:	mov    ch,0x30
  41a6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6ff:	add    edi,esp
  41a701:	and    eax,DWORD PTR [esi+0x2c6a1241]
  41a707:	cli    
  41a708:	std    
  41a709:	scas   eax,DWORD PTR es:[edi]
  41a70a:	dec    ecx
  41a70b:	pop    esp
  41a70c:	jmp    0x9efd:0x98b3212b
  41a713:	outs   dx,DWORD PTR ds:[esi]
  41a714:	jp     0x41a6ce
  41a716:	int    0xe6
  41a718:	mov    dh,0x85
  41a71a:	pop    esi
  41a71b:	sbb    bh,BYTE PTR [edi+ebp*8-0x51a7d0ec]
  41a722:	repz test DWORD PTR [eax],edx
  41a725:	mov    DWORD PTR [esi-0xec9a25c],ebx
  41a72b:	cdq    
  41a72c:	xchg   BYTE PTR [esi-0x21],ah
  41a72f:	outs   dx,DWORD PTR ds:[esi]
  41a730:	stos   BYTE PTR es:[edi],al
  41a731:	adc    eax,0x96ceee5a
  41a736:	or     eax,0x3a36190c
  41a73b:	jo     0x41a6e5
  41a73d:	(bad)  
  41a73e:	dec    ebp
  41a73f:	sbb    edx,ebx
  41a741:	arpl   WORD PTR [ebx*4+0x6034f1dd],sp
  41a748:	add    DWORD PTR [ebp+ebx*8+0x64],0xfffffffc
  41a74d:	push   0xea6d76ee
  41a752:	add    eax,0x35089d6d
  41a757:	jg     0x41a736
  41a759:	nop
  41a75a:	push   es
  41a75b:	(bad)  
  41a75c:	push   ebp
  41a75d:	es lahf 
  41a75f:	or     cl,al
  41a761:	push   ss
  41a762:	sub    ah,BYTE PTR [ecx+ecx*2]
  41a765:	add    al,0x6b
  41a767:	pop    es
  41a768:	jns    0x41a770
  41a76a:	bound  esp,QWORD PTR ds:0xa759a838
  41a770:	pop    ecx
  41a771:	cs cld 
  41a773:	mov    cl,0x93
  41a775:	cmp    eax,DWORD PTR [edx]
  41a777:	in     al,0x58
  41a779:	pop    ecx
  41a77a:	pop    edx
  41a77b:	push   ecx
  41a77c:	shl    BYTE PTR [eax],1
  41a77e:	aam    0x20
  41a780:	fwait
  41a781:	test   DWORD PTR [ebx+0x5482ee70],eax
  41a787:	jnp    0x41a71c
  41a789:	xor    al,0x5
  41a78b:	mov    al,0x67
  41a78d:	hlt    
  41a78e:	rol    BYTE PTR [ebp+0x3b],cl
  41a791:	call   0xe43b8d2d
  41a796:	mov    esp,0xab098a60
  41a79b:	shl    bl,1
  41a79d:	push   ecx
  41a79e:	repz sub DWORD PTR [esi-0x654c044d],esp
  41a7a5:	cwde   
  41a7a6:	cli    
  41a7a7:	fmul   QWORD PTR [eax-0x5a]
  41a7aa:	cmp    BYTE PTR [ecx+0x4c],al
  41a7ad:	sbb    BYTE PTR [ebx],ch
  41a7af:	push   esi
  41a7b0:	cli    
  41a7b1:	dec    ecx
  41a7b2:	shr    BYTE PTR [ecx],1
  41a7b4:	retf   0x9cf6
  41a7b7:	daa    
  41a7b8:	loopne 0x41a76e
  41a7ba:	add    DWORD PTR [esi],ebx
  41a7bc:	push   cs
  41a7bd:	les    eax,FWORD PTR [ebx+0x48]
  41a7c0:	pop    ecx
  41a7c1:	xchg   edx,eax
  41a7c2:	cmp    eax,0xbfca157d
  41a7c7:	rol    DWORD PTR [edi-0x49f00d4],1
  41a7cd:	push   esp
  41a7ce:	js     0x41a76e
  41a7d0:	fs mov ebx,ebx
  41a7d3:	ins    BYTE PTR es:[edi],dx
  41a7d4:	std    
  41a7d5:	lea    eax,[eax+0x1a]
  41a7d8:	loop   0x41a7cf
  41a7da:	xchg   ecx,eax
  41a7db:	lahf   
  41a7dc:	cmp    DWORD PTR ds:0xffefdcb2,0x2f
  41a7e3:	inc    ebx
  41a7e4:	add    ch,BYTE PTR [ecx+ebp*8]
  41a7e7:	and    eax,0xab291965
  41a7ec:	cmp    ch,BYTE PTR [esi-0x1638fc32]
  41a7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f3:	push   ss
  41a7f4:	ret    0x3d3a
  41a7f7:	adc    eax,0x46a91c14
  41a7fc:	fidiv  DWORD PTR [ebx+0x43]
  41a7ff:	sbb    BYTE PTR [esi+edx*8],dh
  41a802:	in     al,dx
  41a803:	cdq    
  41a804:	xchg   BYTE PTR [ebp+0x2423c6e0],ah
  41a80a:	and    BYTE PTR [ebx-0x60],al
  41a80d:	inc    ebx
  41a80e:	jl     0x41a7c6
  41a810:	pop    edx
  41a811:	ins    BYTE PTR es:[edi],dx
  41a812:	fstp   QWORD PTR [ebp+0x23]
  41a815:	ja     0x41a80e
  41a817:	fdivr  DWORD PTR [esi-0x465c9369]
  41a81d:	add    DWORD PTR [eax-0x3],edi
  41a820:	in     al,0xc8
  41a822:	lahf   
  41a823:	xlat   BYTE PTR ds:[ebx]
  41a824:	jecxz  0x41a7ca
  41a826:	push   esp
  41a827:	imul   DWORD PTR [eax+0x34]
  41a82a:	mov    esp,0xce16e221
  41a82f:	pushf  
  41a830:	or     esp,DWORD PTR [esi-0xb10a2f5]
  41a836:	mov    dh,0x1
  41a838:	xchg   ecx,eax
  41a839:	jg     0x41a85e
  41a83b:	popf   
  41a83c:	test   DWORD PTR [edx+0x4275b383],esp
  41a842:	push   esi
  41a843:	leave  
  41a844:	fwait
  41a845:	pop    edi
  41a846:	adc    BYTE PTR [ebx],0xdd
  41a849:	ins    DWORD PTR es:[edi],dx
  41a84a:	lea    edi,[edi+0x72814e60]
  41a850:	lahf   
  41a851:	sub    BYTE PTR [ebx+ebp*1],ah
  41a854:	pop    ebp
  41a855:	mov    ebx,0x14710b0e
  41a85a:	jnp    0x41a8a3
  41a85c:	push   ss
  41a85d:	loopne 0x41a80e
  41a85f:	popf   
  41a860:	add    esi,DWORD PTR [edi-0x35]
  41a863:	sub    DWORD PTR [edx],0xcc3d7e29
  41a869:	in     eax,0x49
  41a86b:	pop    edi
  41a86c:	pushf  
  41a86d:	out    dx,al
  41a86e:	fisubr WORD PTR [edx]
  41a870:	nop
  41a871:	xor    eax,ebp
  41a873:	mov    eax,0x9d09ccfc
  41a878:	sub    al,0x9a
  41a87a:	in     eax,dx
  41a87b:	icebp  
  41a87c:	sar    DWORD PTR [ebp+0x1a],0xf5
  41a880:	push   esp
  41a881:	jge    0x41a87a
  41a883:	jg     0x41a890
  41a885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a886:	xchg   DWORD PTR ds:0xf5cb5d7e,esp
  41a88c:	jno    0x41a8ed
  41a88e:	(bad)  [eax+0x54ab911e]
  41a894:	and    eax,0x5ee90cf7
  41a899:	mov    esp,0xdc208a09
  41a89e:	cmp    eax,0xccdad49d
  41a8a3:	sub    al,0xea
  41a8a5:	mov    cl,0x96
  41a8a7:	mov    ch,0x1e
  41a8a9:	aas    
  41a8aa:	neg    BYTE PTR ds:0x894c6c2f
  41a8b0:	mov    WORD PTR [esi+0x688f2fbc],?
  41a8b6:	or     eax,0x6bd6ff11
  41a8bb:	repnz mov edi,0xa502e985
  41a8c1:	xor    BYTE PTR [ebx],bl
  41a8c3:	pop    ebx
  41a8c4:	sbb    bl,BYTE PTR [ecx+0x67]
  41a8c7:	mov    edi,0xad8c14ee
  41a8cc:	cmp    eax,0xca255981
  41a8d1:	cld    
  41a8d2:	sar    ebx,cl
  41a8d4:	pop    edx
  41a8d5:	mov    ah,0xef
  41a8d7:	sbb    eax,0xc313c524
  41a8dc:	xlat   BYTE PTR ds:[ebx]
  41a8dd:	inc    edi
  41a8de:	arpl   WORD PTR [edi-0x33ed5f38],dx
  41a8e4:	jmp    0x35cfca1d
  41a8e9:	xor    dh,BYTE PTR gs:[edi+eax*8+0x61]
  41a8ee:	(bad)  
  41a8ef:	test   eax,0xd5709809
  41a8f4:	std    
  41a8f5:	icebp  
  41a8f6:	pop    ecx
  41a8f7:	push   es
  41a8f8:	leave  
  41a8f9:	mov    al,ds:0xb7729a82
  41a8fe:	fs add al,0xab
  41a901:	std    
  41a902:	lock xor ecx,edx
  41a905:	mov    esi,0x6e7d0475
  41a90a:	shl    BYTE PTR [bp+di-0x66e4],0xb
  41a910:	ja     0x41a948
  41a912:	enter  0x30dd,0xb1
  41a916:	push   edi
  41a917:	out    dx,al
  41a918:	xchg   edi,eax
  41a919:	jmp    0x41a91f
  41a91b:	aam    0x89
  41a91d:	data16 jo 0x41a92c
  41a920:	into   
  41a921:	out    dx,eax
  41a922:	call   0x6fbb6952
  41a927:	cmp    bl,0x2a
  41a92a:	pop    es
  41a92b:	jmp    0x41a8c6
  41a92d:	out    0xec,eax
  41a92f:	sti    
  41a930:	shl    DWORD PTR [edi+0x4d],1
  41a933:	mov    cl,0x59
  41a935:	out    0x74,eax
  41a937:	dec    edi
  41a938:	adc    DWORD PTR [ebx-0x2f],eax
  41a93b:	es inc edi
  41a93d:	add    bl,BYTE PTR [edx+ebp*1-0x60]
  41a941:	mov    al,0xc
  41a943:	test   DWORD PTR [esi+0x7d],esi
  41a946:	mov    ds:0xb574dde2,al
  41a94b:	test   al,0xea
  41a94d:	imul   esi,esi,0xb3bd4b7f
  41a953:	jne    0x41a8ed
  41a955:	dec    edi
  41a956:	add    esi,ebp
  41a958:	xor    esp,DWORD PTR [ebx+0x6938573d]
  41a95e:	xor    edi,DWORD PTR [edi-0x704f147d]
  41a964:	xchg   ebp,eax
  41a965:	push   esp
  41a966:	add    al,0x3f
  41a968:	cmp    BYTE PTR [ecx+eiz*1+0x739bd73],bh
  41a96f:	sub    edx,eax
  41a971:	mov    ds:0x30a5c81,eax
  41a976:	xchg   esi,eax
  41a977:	in     al,0xc3
  41a979:	aad    0x46
  41a97b:	adc    BYTE PTR [esi+0x690e4fc1],cl
  41a981:	call   FWORD PTR [ecx+0x4c798f44]
  41a987:	pop    edi
  41a988:	cmp    BYTE PTR [edx+0x2c],bl
  41a98b:	leave  
  41a98c:	loopne 0x41a985
  41a98e:	or     BYTE PTR [edi+0x1aaafce6],0xc
  41a995:	xchg   edx,eax
  41a996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a997:	jmp    DWORD PTR [eax+0x6f99894b]
  41a99d:	fxch   st(2)
  41a99f:	leave  
  41a9a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9a1:	in     eax,dx
  41a9a2:	ins    BYTE PTR es:[edi],dx
  41a9a3:	test   al,0x1b
  41a9a5:	into   
  41a9a6:	pop    ss
  41a9a7:	sub    edx,DWORD PTR [eax+0x186407d1]
  41a9ad:	adc    al,0x8d
  41a9af:	cmp    BYTE PTR [eax+eiz*2],ch
  41a9b2:	stos   BYTE PTR es:[edi],al
  41a9b3:	(bad)  
  41a9b4:	mov    dh,0xb3
  41a9b6:	imul   eax,DWORD PTR [esi],0x13
  41a9b9:	inc    esp
  41a9ba:	call   0x79b634e8
  41a9bf:	and    bh,BYTE PTR [ebx-0x14f03331]
  41a9c5:	(bad)  
  41a9c6:	xor    BYTE PTR ds:0x58c450,dh
  41a9cc:	xchg   edx,eax
  41a9cd:	push   edi
  41a9ce:	jecxz  0x41a9c1
  41a9d0:	push   ecx
  41a9d1:	xchg   esi,eax
  41a9d2:	pushf  
  41a9d3:	xchg   edx,eax
  41a9d4:	sbb    ebx,ecx
  41a9d6:	fiadd  WORD PTR cs:[edi-0x5d]
  41a9da:	sbb    ebp,DWORD PTR [edx+0x2d9870b2]
  41a9e0:	call   0x2c0e89b9
  41a9e5:	pop    ebp
  41a9e6:	fistp  QWORD PTR [edx]
  41a9e8:	ins    DWORD PTR es:[edi],dx
  41a9e9:	jp     0x41aa1b
  41a9eb:	mov    ecx,0x66a9af5a
  41a9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f1:	cmp    al,0x8e
  41a9f3:	pop    edi
  41a9f4:	or     cl,al
  41a9f6:	data16 cmc 
  41a9f8:	mov    esi,0x69d2a5b
  41a9fd:	fs aas 
  41a9ff:	test   eax,0x2f162ecf
  41aa04:	xchg   bl,ah
  41aa06:	arpl   WORD PTR [edi-0x36a6cc4d],bp
  41aa0c:	in     eax,0x65
  41aa0e:	jb     0x41aa23
  41aa10:	jmp    0xdbee:0x31ab926a
  41aa17:	sbb    DWORD PTR [ebx],edx
  41aa19:	data16 mov bl,0xc1
  41aa1c:	add    DWORD PTR [ebx],ecx
  41aa1e:	jno    0x41aa31
  41aa20:	sbb    eax,0x3d6b3bfc
  41aa25:	shr    DWORD PTR [edi],0x7c
  41aa28:	pop    eax
  41aa29:	lea    edi,[eax+0x57]
  41aa2c:	and    eax,DWORD PTR ds:0xa4e3e40
  41aa32:	repz es push ecx
  41aa35:	or     DWORD PTR [edi-0x7e],ebx
  41aa38:	out    0xb3,eax
  41aa3a:	cmp    edi,DWORD PTR [ebx]
  41aa3c:	hlt    
  41aa3d:	test   al,0x48
  41aa3f:	add    eax,DWORD PTR [ebx]
  41aa41:	mov    edx,0xf7b400b9
  41aa46:	int3   
  41aa47:	xchg   ecx,eax
  41aa48:	addr16 (bad) 
  41aa4a:	cld    
  41aa4b:	mov    DWORD PTR [ecx-0x6cea1103],esp
  41aa51:	mov    ds:0x4e749665,al
  41aa56:	jmp    0x26d88248
  41aa5b:	into   
  41aa5c:	pop    edi
  41aa5d:	xchg   ebx,eax
  41aa5e:	and    DWORD PTR [edx+0x20],0xfffffffa
  41aa62:	pop    edx
  41aa63:	pop    es
  41aa64:	push   ecx
  41aa65:	mov    ecx,0x8aa6cf09
  41aa6a:	mov    al,0xa5
  41aa6c:	push   edi
  41aa6d:	lods   al,BYTE PTR ds:[esi]
  41aa6e:	xchg   ebx,eax
  41aa6f:	loope  0x41aa44
  41aa71:	adc    esp,DWORD PTR [ebp-0x701b202f]
  41aa77:	and    edi,DWORD PTR [ebx-0x773888a8]
  41aa7d:	mov    cl,0x69
  41aa7f:	cmp    al,0x66
  41aa81:	mov    WORD PTR [edi+0x5b2b9325],es
  41aa87:	jge    0x41aa80
  41aa89:	mov    BYTE PTR [edx+0x6d001197],bl
  41aa8f:	mov    ds:0x371ce5c6,al
  41aa94:	push   ecx
  41aa95:	sbb    eax,0x24b54994
  41aa9a:	aaa    
  41aa9b:	int    0x40
  41aa9d:	sti    
  41aa9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa9f:	jp     0x41aa37
  41aaa1:	jae    0x41aa26
  41aaa3:	jp     0x41aa42
  41aaa5:	test   al,al
  41aaa7:	xchg   ebx,eax
  41aaa8:	leave  
  41aaa9:	xor    dh,dh
  41aaab:	mov    ch,0x85
  41aaad:	pop    edx
  41aaae:	inc    esp
  41aaaf:	jecxz  0x41aa4a
  41aab1:	stos   BYTE PTR es:[edi],al
  41aab2:	add    DWORD PTR [eax],esi
  41aab4:	out    0x96,eax
  41aab6:	add    eax,0xc7a45eb9
  41aabb:	add    al,BYTE PTR ds:0xf69b8374
  41aac1:	scas   al,BYTE PTR es:[edi]
  41aac2:	pop    edi
  41aac3:	imul   ebx,eax,0xac2dbd94
  41aac9:	fiadd  WORD PTR [esi+0x7]
  41aacc:	xchg   esp,eax
  41aacd:	pop    edi
  41aace:	cwde   
  41aacf:	mov    al,dl
  41aad1:	or     DWORD PTR [ebx+ecx*4-0x205b091],edi
  41aad8:	xor    BYTE PTR ds:0xc4e41bce,ch
  41aade:	xchg   ecx,eax
  41aadf:	and    al,0x40
  41aae1:	test   al,0xe9
  41aae3:	inc    ebp
  41aae4:	inc    ebx
  41aae5:	js     0x41ab40
  41aae7:	or     esi,ebp
  41aae9:	pop    esi
  41aaea:	pop    ss
  41aaeb:	and    bl,BYTE PTR [ebp+0x5bcc2652]
  41aaf1:	daa    
  41aaf2:	ins    DWORD PTR es:[edi],dx
  41aaf3:	ins    DWORD PTR es:[edi],dx
  41aaf4:	jmp    0x8cd7f52f
  41aaf9:	int3   
  41aafa:	test   BYTE PTR [ebx],dl
  41aafc:	(bad)  
  41aafe:	push   ebx
  41aaff:	push   es
  41ab00:	xor    ah,BYTE PTR [ecx-0xe7f1834]
  41ab06:	retf   
  41ab07:	mov    dh,0x6d
  41ab09:	jne    0x41ab89
  41ab0b:	xor    DWORD PTR [edx+0x3f],ecx
  41ab0e:	mov    BYTE PTR [esi+0x7a],dh
  41ab11:	shl    al,1
  41ab13:	les    esi,FWORD PTR [ebp+0x7ec39e8c]
  41ab19:	outs   dx,DWORD PTR ds:[esi]
  41ab1a:	mov    dl,0xcd
  41ab1c:	xchg   edx,eax
  41ab1d:	std    
  41ab1e:	in     al,dx
  41ab1f:	int3   
  41ab20:	and    al,0x25
  41ab22:	and    ebp,DWORD PTR [ecx+0x34b6d9b4]
  41ab28:	(bad)  
  41ab29:	int3   
  41ab2a:	xor    edi,DWORD PTR [ecx-0x506939ea]
  41ab30:	pop    ebx
  41ab31:	lea    eax,[ecx+0x4f]
  41ab34:	dec    edi
  41ab35:	sti    
  41ab36:	push   0xffffffca
  41ab38:	pop    ebp
  41ab39:	pop    ss
  41ab3a:	in     eax,dx
  41ab3b:	push   0x71
  41ab3d:	hlt    
  41ab3e:	stos   BYTE PTR es:[edi],al
  41ab3f:	mov    eax,ds:0xd7e8c520
  41ab44:	adc    BYTE PTR [ebp-0x4a],ah
  41ab47:	jmp    0x6504246d
  41ab4c:	clc    
  41ab4d:	mov    edi,0xc038f2f
  41ab52:	dec    edx
  41ab53:	xlat   BYTE PTR ds:[ebx]
  41ab54:	out    dx,eax
  41ab55:	test   al,0x95
  41ab57:	gs and al,0xed
  41ab5a:	ror    esi,0xaa
  41ab5d:	jge    0x41abd2
  41ab5f:	(bad)  [ebx+0x219e8923]
  41ab65:	out    dx,al
  41ab66:	loopne 0x41ab9f
  41ab68:	or     ebx,0x72
  41ab6b:	ficom  WORD PTR [ecx+ebx*8-0x4395e52b]
  41ab72:	pushf  
  41ab73:	call   0x392f:0xc2bdc50f
  41ab7a:	aas    
  41ab7b:	pop    edx
  41ab7c:	rcr    BYTE PTR [ecx-0x4ed6ad32],0xa3
  41ab83:	mov    esi,DWORD PTR [eax]
  41ab85:	stos   DWORD PTR es:[edi],eax
  41ab86:	mov    ebp,esi
  41ab88:	stos   DWORD PTR es:[edi],eax
  41ab89:	cmp    eax,0x4e5d6961
  41ab8e:	cmc    
  41ab8f:	cmc    
  41ab90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab91:	xor    dl,BYTE PTR [ebx]
  41ab93:	arpl   WORD PTR [eax-0x1624acdc],di
  41ab99:	dec    ecx
  41ab9a:	inc    ecx
  41ab9b:	fxch   st(4)
  41ab9d:	out    0x57,eax
  41ab9f:	inc    esp
  41aba0:	data16 cmp bh,BYTE PTR [ecx+ecx*2+0x5c]
  41aba5:	jg     0x41abea
  41aba7:	data16 ficom WORD PTR [esi-0x80]
  41abab:	push   ebp
  41abad:	cld    
  41abae:	in     eax,0x9f
  41abb0:	shl    DWORD PTR [edi+0x5388d532],0x20
  41abb7:	inc    ecx
  41abb8:	mov    fs,ecx
  41abba:	rcl    DWORD PTR [esi],cl
  41abbc:	pop    ss
  41abbd:	arpl   sp,ax
  41abbf:	jb     0x41ab62
  41abc1:	fucomip st,st(6)
  41abc3:	(bad)  
  41abc4:	cmp    dl,BYTE PTR [esi]
  41abc6:	and    DWORD PTR [ebx-0x2273d830],edi
  41abcc:	retf   0x8713
  41abcf:	xchg   BYTE PTR [esi-0x5],ch
  41abd2:	cmc    
  41abd3:	sub    al,0x69
  41abd5:	out    0x28,eax
  41abd7:	pushf  
  41abd8:	push   ebx
  41abd9:	loope  0x41abe6
  41abdb:	dec    ebp
  41abdc:	hlt    
  41abdd:	int    0x38
  41abdf:	ret    0x9667
  41abe2:	ret    0x9f9f
  41abe5:	cmc    
  41abe6:	imul   esp,eax,0x10c04818
  41abec:	loopne 0x41abad
  41abee:	pusha  
  41abef:	mov    dh,0x61
  41abf1:	inc    esi
  41abf2:	mov    BYTE PTR [edx-0x1b9bf973],cl
  41abf8:	retf   
  41abf9:	inc    ebx
  41abfa:	sbb    BYTE PTR [esi+ebx*8],al
  41abfd:	sbb    al,0xae
  41abff:	adc    esp,DWORD PTR ds:0xd46d8eae
  41ac05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac06:	repz clc 
  41ac08:	xchg   esp,eax
  41ac09:	xchg   ebp,eax
  41ac0a:	cmp    al,0x62
  41ac0c:	out    0x1c,al
  41ac0e:	sub    DWORD PTR [ecx],ecx
  41ac10:	sbb    esp,DWORD PTR [eax]
  41ac12:	add    eax,0xd16409cc
  41ac17:	cld    
  41ac18:	ja     0x41abf7
  41ac1a:	push   edx
  41ac1b:	imul   edx,DWORD PTR ds:0xf414783d,0x7675750b
  41ac25:	loop   0x41ac56
  41ac27:	xchg   ebx,eax
  41ac28:	pusha  
  41ac29:	fsub   DWORD PTR [esi+0x66]
  41ac2c:	xor    ch,BYTE PTR [ecx+ebp*1-0x3f]
  41ac30:	call   0xec7e:0x4c8d8724
  41ac37:	dec    ebp
  41ac38:	aaa    
  41ac39:	jnp    0x41abcb
  41ac3b:	es sub al,0xbc
  41ac3e:	in     eax,0x9e
  41ac40:	adc    ch,BYTE PTR [esi+0x19]
  41ac43:	stos   DWORD PTR es:[edi],eax
  41ac44:	shl    DWORD PTR [eax+0x9c8bf2c],cl
  41ac4a:	sti    
  41ac4b:	inc    esp
  41ac4c:	stos   BYTE PTR es:[edi],al
  41ac4d:	sti    
  41ac4e:	ret    
  41ac4f:	mov    dh,0x99
  41ac51:	xchg   esp,eax
  41ac52:	fmul   DWORD PTR [ebx+ecx*2-0x56]
  41ac56:	push   eax
  41ac57:	pusha  
  41ac58:	mov    ds,WORD PTR [edx]
  41ac5a:	ror    esp,cl
  41ac5c:	pushf  
  41ac5d:	dec    esp
  41ac5e:	retf   0x3e09
  41ac61:	jle    0x41ac4b
  41ac63:	idiv   BYTE PTR [ecx+0x25d7dc1a]
  41ac69:	mov    ah,0x41
  41ac6b:	or     ah,BYTE PTR [edx+0x62ecc9bc]
  41ac71:	out    0xc4,eax
  41ac73:	jns    0x41ac05
  41ac75:	les    eax,FWORD PTR [ecx-0x56]
  41ac78:	loopne 0x41ac3e
  41ac7a:	into   
  41ac7b:	push   eax
  41ac7c:	push   ebx
  41ac7d:	sar    DWORD PTR [edi],0x8
  41ac80:	int    0x40
  41ac82:	jo     0x41acdd
  41ac84:	xor    edx,DWORD PTR [ebx-0x1d081a8a]
  41ac8a:	es or  al,0x93
  41ac8d:	mov    esp,0x34407355
  41ac92:	xchg   esi,eax
  41ac93:	sbb    al,0xc5
  41ac95:	xchg   ecx,esp
  41ac97:	(bad)  
  41ac98:	jbe    0x41acff
  41ac9a:	fcom   st(0)
  41ac9c:	push   0x4ea6e5e4
  41aca1:	and    esp,esi
  41aca3:	repnz and edx,DWORD PTR [esi+ebx*1]
  41aca7:	retf   
  41aca8:	jle    0x41ac5d
  41acaa:	rcl    DWORD PTR [esi-0x17376e42],0x79
  41acb1:	imul   edx,DWORD PTR [ecx+ebp*1-0x48],0x4
  41acb6:	popfw  
  41acb8:	jecxz  0x41acfb
  41acba:	xlat   BYTE PTR ds:[ebx]
  41acbb:	popa   
  41acbc:	ins    DWORD PTR es:[edi],dx
  41acbd:	and    DWORD PTR [esi-0x43],0x39792030
  41acc4:	ds pop es
  41acc6:	sbb    eax,0xa610b7bd
  41accb:	je     0x41ac5a
  41accd:	push   cs
  41acce:	repz push 0x79
  41acd1:	scas   eax,DWORD PTR es:[edi]
  41acd2:	rol    DWORD PTR [edi-0x21],0x68
  41acd6:	outs   dx,BYTE PTR ds:[esi]
  41acd7:	std    
  41acd8:	call   0xe6aa0dc3
  41acdd:	jb     0x41ad51
  41acdf:	ret    0x8c73
  41ace2:	pop    edi
  41ace3:	mov    cl,0x36
  41ace5:	pop    edx
  41ace6:	push   0xdfba953b
  41aceb:	xchg   ebp,eax
  41acec:	mov    al,ds:0x7ebe899d
  41acf1:	nop
  41acf2:	mov    BYTE PTR [esi-0x7a],dh
  41acf5:	adc    eax,0x740333a1
  41acfa:	retf   0xa78a
  41acfd:	ror    ebx,cl
  41acff:	int    0xff
  41ad01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad02:	add    BYTE PTR [edi-0x47a497e6],dh
  41ad08:	sub    ax,0x4eed
  41ad0c:	mov    eax,0x2749ae1c
  41ad11:	jge    0x41ad0c
  41ad13:	mov    BYTE PTR [edx+0x75],ah
  41ad16:	dec    esp
  41ad17:	push   edi
  41ad18:	scas   al,BYTE PTR es:[edi]
  41ad19:	dec    ebx
  41ad1a:	jecxz  0x41ad28
  41ad1c:	pop    ebp
  41ad1d:	cmp    eax,0x28909a49
  41ad22:	push   ss
  41ad23:	jbe    0x41ad25
  41ad25:	test   BYTE PTR [edx-0x6e4971c5],ch
  41ad2b:	mov    bl,0xc7
  41ad2d:	outs   dx,DWORD PTR ds:[esi]
  41ad2e:	imul   esi,DWORD PTR [esi],0xdc3c7ec0
  41ad34:	mov    ds:0xac761c37,al
  41ad39:	dec    ebx
  41ad3a:	xchg   esi,eax
  41ad3b:	dec    esp
  41ad3c:	les    ebx,FWORD PTR [ebx+0x67bc8129]
  41ad42:	jae    0x41ad37
  41ad44:	pop    eax
  41ad45:	fdivr  DWORD PTR [edi+0x760ed9cc]
  41ad4b:	dec    ebx
  41ad4c:	push   0xffffffc1
  41ad4e:	cmp    al,0xaf
  41ad50:	jnp    0x41ad81
  41ad52:	in     eax,0xbc
  41ad54:	clc    
  41ad55:	aaa    
  41ad56:	pslld  mm7,QWORD PTR [esi]
  41ad59:	mov    WORD PTR [edi+0x3110852],?
  41ad5f:	cs jno 0x41acff
  41ad62:	rcr    BYTE PTR [ebx+0x2e],cl
  41ad65:	out    0x36,al
  41ad67:	push   esp
  41ad68:	(bad)  
  41ad6a:	in     al,dx
  41ad6b:	outs   dx,DWORD PTR ds:[esi]
  41ad6c:	imul   edx,DWORD PTR [ecx-0xf968506],0xe542c3fd
  41ad76:	lea    esi,[ebx]
  41ad78:	fsubrp st(7),st
  41ad7a:	retf   
  41ad7b:	cmp    eax,DWORD PTR fs:[eax-0x7f98b458]
  41ad82:	xor    ah,0x19
  41ad85:	mov    ebp,0x784f21d6
  41ad8a:	or     esp,eax
  41ad8c:	invlpg BYTE PTR [ebx-0x396814f5]
  41ad93:	push   ebx
  41ad94:	sti    
  41ad95:	jnp    0x41ad6d
  41ad97:	sub    DWORD PTR [ebp+edi*4-0x4f],esi
  41ad9b:	jge    0x41ade1
  41ad9d:	shr    ah,0xb4
  41ada0:	jno    0x41ad75
  41ada2:	pop    ss
  41ada3:	xor    ah,bl
  41ada5:	aad    0xb4
  41ada7:	sti    
  41ada8:	jmp    0x7976:0xe1983a58
  41adaf:	push   esp
  41adb0:	mov    dl,0xf0
  41adb2:	rol    BYTE PTR [eax],cl
  41adb4:	or     ah,dl
  41adb6:	cmp    eax,0xa24e1751
  41adbb:	fcomp  QWORD PTR [ecx+0x26]
  41adbe:	pop    ebx
  41adbf:	jns    0x41adab
  41adc1:	mov    ch,0x73
  41adc3:	cli    
  41adc4:	pop    esi
  41adc5:	inc    esp
  41adc6:	fadd   QWORD PTR [edi+edi*4-0x30b217ca]
  41adcd:	xor    eax,0x8cd0f402
  41add2:	cli    
  41add3:	pop    di
  41add5:	aad    0x6
  41add7:	lods   eax,DWORD PTR ds:[esi]
  41add8:	mov    fs,esp
  41adda:	dec    edx
  41addb:	or     eax,DWORD PTR ds:0xd2dda739
  41ade1:	pop    edi
  41ade2:	push   eax
  41ade3:	fs loop 0x41ae1b
  41ade6:	sbb    BYTE PTR [edx-0x7be8b8da],cl
  41adec:	push   esp
  41aded:	fcomp  QWORD PTR [edx]
  41adef:	add    DWORD PTR [edx],0x34
  41adf2:	pcmpgtd mm0,QWORD PTR [eax]
  41adf5:	push   esi
  41adf6:	shr    DWORD PTR ss:[edx+0x14e26c98],cl
  41adfd:	je     0x41adbc
  41adff:	or     dl,BYTE PTR [ecx+0x40812430]
  41ae05:	cmp    DWORD PTR ds:0x161ce28f,ebp
  41ae0b:	pop    eax
  41ae0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae0d:	(bad)  
  41ae0e:	mov    ecx,0xa76adbff
  41ae13:	int    0xd7
  41ae15:	mov    ebp,0x319ae63d
  41ae1a:	cdq    
  41ae1b:	mov    edx,0xeaba3877
  41ae20:	dec    eax
  41ae21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae22:	inc    eax
  41ae23:	sbb    bh,BYTE PTR ds:0x8fc76710
  41ae29:	sub    al,al
  41ae2b:	lods   eax,DWORD PTR ds:[esi]
  41ae2c:	xor    edx,DWORD PTR [eax+0x3e8612b8]
  41ae32:	pop    edx
  41ae33:	cmp    BYTE PTR [edi+0xf],0x3f
  41ae37:	push   ebx
  41ae38:	jns    0x41aeae
  41ae3a:	repz imul esp,DWORD PTR [ebx-0x40842fb9],0x129feabd
  41ae45:	dec    esp
  41ae46:	add    ah,BYTE PTR [ecx-0x7d]
  41ae49:	mov    cl,0x13
  41ae4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae4c:	ja     0x41ae0a
  41ae4e:	sbb    DWORD PTR [eax+eax*2+0x2e81a44d],0xca15a76e
  41ae59:	in     al,0x1b
  41ae5b:	dec    edx
  41ae5c:	stc    
  41ae5d:	mov    ebx,0x1dcd101b
  41ae62:	dec    esi
  41ae63:	or     edx,edx
  41ae65:	repnz arpl WORD PTR ds:0x9ea6427d,si
  41ae6c:	retf   0x51da
  41ae6f:	das    
  41ae70:	cmp    DWORD PTR [esi+edi*1+0x4cb3391],edi
  41ae77:	pop    ecx
  41ae78:	pusha  
  41ae79:	push   esi
  41ae7a:	or     BYTE PTR [bx+si-0x25],ch
  41ae7e:	(bad)  
  41ae7f:	cmp    DWORD PTR [esi],edx
  41ae81:	scas   eax,DWORD PTR es:[edi]
  41ae82:	dec    ebp
  41ae83:	or     ecx,DWORD PTR [edi+0x2fbf4ebf]
  41ae89:	mov    dl,BYTE PTR [esi-0x5bc2dd54]
  41ae8f:	pop    esi
  41ae90:	add    BYTE PTR [edx-0x6be8cf04],0x93
  41ae97:	xlat   BYTE PTR ds:[ebx]
  41ae98:	adc    eax,0xc2318f60
  41ae9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae9e:	xchg   BYTE PTR [ebx-0x5e],bl
  41aea1:	mov    ecx,0xc8b4cf56
  41aea6:	adc    DWORD PTR [eax+0x76e0de73],esi
  41aeac:	mov    bh,0xd6
  41aeae:	rol    DWORD PTR [ebx-0x79],cl
  41aeb1:	mov    edi,0xeebcf93f
  41aeb6:	cmp    al,0x11
  41aeb8:	adc    cl,BYTE PTR [ebx-0x70]
  41aebb:	jp     0x41ae77
  41aebd:	stos   BYTE PTR es:[edi],al
  41aebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aebf:	xchg   ecx,eax
  41aec0:	mov    ah,0x11
  41aec2:	sub    al,0x59
  41aec4:	jo     0x41af07
  41aec6:	fcomp  DWORD PTR [ecx+0x5c]
  41aec9:	add    BYTE PTR [eax],cl
  41aecb:	xchg   ebx,eax
  41aecc:	pop    ds
  41aecd:	imul   ecx,edx,0xfffffff3
  41aed0:	fsubr  DWORD PTR [ebp-0x56882603]
  41aed6:	(bad)  
  41aed7:	xchg   esp,eax
  41aed8:	imul   edx,esi,0x3b69478e
  41aede:	outs   dx,DWORD PTR ds:[esi]
  41aedf:	jbe    0x41aefd
  41aee1:	aaa    
  41aee2:	scas   eax,DWORD PTR es:[edi]
  41aee3:	add    eax,0x6bfab524
  41aee8:	push   cs
  41aee9:	call   0xc5a8:0x47c6bdd1
  41aef0:	fbstp  TBYTE PTR ds:0x1575e98b
  41aef6:	mov    cl,0x2c
  41aef8:	cwde   
  41aef9:	out    0xb7,al
  41aefb:	retf   
  41aefc:	mov    ds:0xec839cf0,al
  41af01:	cmp    eax,0xc55b690e
  41af06:	inc    ebp
  41af07:	aaa    
  41af08:	mov    esp,0x6e91db95
  41af0d:	fs push edx
  41af0f:	scas   al,BYTE PTR es:[edi]
  41af10:	(bad)  
  41af11:	sub    al,0x23
  41af13:	cs inc esi
  41af15:	pop    es
  41af16:	or     dl,BYTE PTR [ecx-0x29]
  41af19:	and    al,0x9
  41af1b:	icebp  
  41af1c:	stc    
  41af1d:	add    cl,ch
  41af1f:	and    ch,dl
  41af21:	xlat   BYTE PTR ds:[ebx]
  41af22:	stc    
  41af23:	cdq    
  41af24:	xor    al,0xee
  41af26:	sbb    ch,BYTE PTR [ebx]
  41af28:	and    DWORD PTR [ecx],eax
  41af2a:	dec    DWORD PTR [ebx+0x9f431a7]
  41af30:	ins    DWORD PTR es:[edi],dx
  41af31:	popf   
  41af32:	pop    esp
  41af33:	and    eax,0x778ad5b8
  41af38:	nop
  41af39:	pushf  
  41af3a:	pop    edi
  41af3b:	fiadd  DWORD PTR [ecx+0x66]
  41af3e:	test   al,0x3f
  41af40:	stos   DWORD PTR es:[edi],eax
  41af41:	ret    
  41af42:	pop    edx
  41af43:	push   es
  41af44:	repz popf 
  41af46:	jb     0x41af00
  41af48:	sbb    ch,BYTE PTR [ecx+0x1f]
  41af4b:	stc    
  41af4c:	stos   BYTE PTR es:[edi],al
  41af4d:	(bad)  
  41af4e:	xchg   esi,eax
  41af4f:	(bad)  
  41af50:	out    dx,al
  41af51:	xchg   ebp,eax
  41af52:	cli    
  41af53:	xchg   edi,eax
  41af54:	add    edi,eax
  41af56:	mov    al,ds:0x37899d48
  41af5b:	adc    eax,0xd4d3a6a5
  41af60:	cmp    esp,DWORD PTR [ecx-0x2f]
  41af63:	xchg   bl,bh
  41af65:	pop    esi
  41af66:	dec    ecx
  41af67:	jg     0x41aeeb
  41af69:	in     eax,0x28
  41af6b:	aam    0x5c
  41af6d:	test   eax,0x195681b4
  41af72:	push   edi
  41af73:	test   eax,0x6647b624
  41af78:	arpl   sp,si
  41af7a:	ret    0x4b91
  41af7d:	ins    BYTE PTR es:[edi],dx
  41af7e:	mov    edi,0xa79aa097
  41af83:	push   ebp
  41af84:	push   edi
  41af85:	cld    
  41af86:	inc    ebp
  41af87:	rol    bl,cl
  41af89:	(bad)  
  41af8a:	hlt    
  41af8b:	jae    0x41afe7
  41af8d:	call   DWORD PTR [eax+0x4]
  41af90:	cmp    eax,eax
  41af92:	cmp    DWORD PTR [esp+edi*1-0x75],esi
  41af96:	in     eax,dx
  41af97:	pusha  
  41af98:	seto   BYTE PTR [eax-0x14a88a72]
  41af9f:	add    DWORD PTR [edi+0x33],0xe92fc59
  41afa6:	aas    
  41afa7:	pop    edx
  41afa8:	xchg   edi,eax
  41afa9:	test   al,0xa8
  41afab:	adc    DWORD PTR [edx],0x2f9884a5
  41afb1:	inc    eax
  41afb2:	or     al,0x75
  41afb4:	push   edi
  41afb5:	jge    0x41af64
  41afb7:	sti    
  41afb8:	dec    ebx
  41afb9:	xor    eax,0xe9f67d08
  41afbe:	(bad)  
  41afbf:	pop    eax
  41afc0:	shl    BYTE PTR [ebp+0x71],1
  41afc3:	xchg   ebx,eax
  41afc4:	imul   edi,DWORD PTR [edi],0x3b
  41afc7:	adc    eax,0xde54a03d
  41afcc:	ror    DWORD PTR [edx+esi*2+0x3022f482],cl
  41afd3:	pop    ds
  41afd4:	fist   DWORD PTR [edx-0x6186f274]
  41afda:	inc    edi
  41afdb:	jo     0x41afda
  41afdd:	mov    BYTE PTR [ebx-0x3a],al
  41afe0:	add    al,0x4e
  41afe2:	or     eax,0xb62c270
  41afe7:	mov    ah,0x53
  41afe9:	rcl    BYTE PTR [ebx+0x21],0x12
  41afed:	data16 arpl WORD PTR [esi],si
  41aff0:	cwde   
  41aff1:	sbb    BYTE PTR [ebx+0x33ae2fd7],ah
  41aff7:	js     0x41b048
  41aff9:	dec    esi
  41affa:	fcom   DWORD PTR es:[esi-0x51f6ed97]
  41b001:	sub    eax,0xede77246
  41b006:	dec    ecx
  41b007:	cmp    eax,0x11b3b4bd
  41b00c:	and    eax,0x4e208a7a
  41b011:	cmp    dl,BYTE PTR [ebx-0x36]
  41b014:	jl     0x41afa3
  41b016:	jnp    0x41b037
  41b018:	outs   dx,DWORD PTR ds:[esi]
  41b019:	xchg   DWORD PTR [esi],esp
  41b01b:	fwait
  41b01c:	scas   al,BYTE PTR es:[edi]
  41b01d:	and    DWORD PTR [ebp-0x43],ecx
  41b020:	sbb    al,0x30
  41b022:	enter  0x1f25,0x29
  41b026:	stos   DWORD PTR es:[edi],eax
  41b027:	mov    ebx,DWORD PTR [ecx]
  41b029:	popf   
  41b02a:	vpavgw xmm6,xmm2,XMMWORD PTR [edi-0x7e9e2dbb]
  41b032:	push   edi
  41b033:	out    0x40,al
  41b035:	pop    es
  41b036:	test   al,0x6e
  41b038:	sbb    DWORD PTR [edx],edi
  41b03a:	ja     0x41b01a
  41b03c:	adc    DWORD PTR [ecx-0x1d986871],edi
  41b042:	out    dx,al
  41b043:	cmp    esi,DWORD PTR [eax]
  41b045:	call   0xbf29:0xeba47a7f
  41b04c:	into   
  41b04d:	js     0x41afe0
  41b04f:	adc    eax,DWORD PTR [edx+0x4a]
  41b052:	pop    eax
  41b053:	sbb    bl,ah
  41b055:	aad    0x5e
  41b057:	dec    edx
  41b058:	(bad)  
  41b059:	mov    ebx,0xd9cc5433
  41b05e:	in     eax,dx
  41b05f:	jg     0x41b0c8
  41b061:	fwait
  41b062:	stc    
  41b063:	test   eax,0xa1eb542
  41b068:	push   ds
  41b069:	sub    esi,ebp
  41b06b:	sbb    eax,0x4acfce86
  41b070:	fidivr DWORD PTR [edx-0x6d6be44d]
  41b076:	push   ebp
  41b077:	icebp  
  41b078:	mov    dh,0xbb
  41b07a:	inc    eax
  41b07b:	xchg   BYTE PTR [ebp+0x21d8cf99],bl
  41b081:	lahf   
  41b082:	loope  0x41b045
  41b084:	xchg   ebp,eax
  41b085:	sbb    al,0xb2
  41b087:	add    DWORD PTR [ecx+ecx*2],esp
  41b08a:	xor    bh,BYTE PTR [ecx+0x7c]
  41b08d:	fild   WORD PTR [esi]
  41b08f:	lods   al,BYTE PTR ds:[esi]
  41b090:	dec    edx
  41b091:	ret    
  41b092:	xchg   DWORD PTR [ebx+0x24],eax
  41b095:	push   ecx
  41b096:	ds dec esp
  41b098:	xchg   ebp,eax
  41b099:	sub    eax,0xba0e0384
  41b09e:	adc    cl,ch
  41b0a0:	jb     0x41b0af
  41b0a2:	fdiv   QWORD PTR [edx]
  41b0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0a5:	mov    dl,0xd8
  41b0a7:	aad    0x49
  41b0a9:	jge    0x41b08f
  41b0ab:	xchg   ebx,eax
  41b0ac:	jnp    0x41b075
  41b0ae:	mov    dl,0xd0
  41b0b0:	repz add DWORD PTR [ebp-0x23],edi
  41b0b4:	stos   DWORD PTR es:[edi],eax
  41b0b5:	push   0xffffffe6
  41b0b7:	dec    edx
  41b0b8:	mov    dh,0x30
  41b0ba:	mov    ds:0xc9ddaf8,al
  41b0bf:	sbb    al,0xeb
  41b0c1:	cli    
  41b0c2:	cs aaa 
  41b0c4:	aas    
  41b0c5:	mov    eax,ds:0x9cd87884
  41b0ca:	test   eax,0x4562c1f0
  41b0cf:	arpl   sp,bp
  41b0d1:	xchg   esi,eax
  41b0d2:	call   0xb8a4af50
  41b0d7:	jns    0x41b136
  41b0d9:	xor    dl,0x28
  41b0dc:	push   0x26
  41b0de:	jns    0x41b099
  41b0e0:	push   edi
  41b0e1:	aad    0x14
  41b0e3:	dec    esp
  41b0e4:	les    edi,FWORD PTR [ecx+0x68e971c]
  41b0ea:	sub    dl,ah
  41b0ec:	out    0xe2,al
  41b0ee:	mov    ah,cl
  41b0f0:	retf   0x96c7
  41b0f3:	lods   eax,DWORD PTR ds:[esi]
  41b0f4:	fld    DWORD PTR [ebx+0x36]
  41b0f7:	or     BYTE PTR [ecx-0x1a08dbd1],ch
  41b0fd:	push   ecx
  41b0fe:	test   al,0x8a
  41b100:	call   0xae61:0xabb0c25e
  41b107:	or     ecx,ebp
  41b109:	xchg   edi,eax
  41b10a:	cmp    DWORD PTR [esi+0x5b9ce735],0xef47131d
  41b114:	inc    edi
  41b115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b116:	and    dh,BYTE PTR [ebx]
  41b118:	repz ds sbb al,0x6a
  41b11c:	pop    esi
  41b11d:	xchg   DWORD PTR [edx+0x1dfd73f7],ecx
  41b123:	pop    esp
  41b124:	sbb    eax,0x3e52bc25
  41b129:	test   DWORD PTR [ebp-0x30],edi
  41b12c:	inc    edx
  41b12d:	std    
  41b12e:	das    
  41b12f:	scas   al,BYTE PTR es:[edi]
  41b130:	adc    DWORD PTR [edx-0xa6af944],ebx
  41b136:	iret   
  41b137:	lods   eax,DWORD PTR ds:[esi]
  41b138:	fstp   TBYTE PTR [esi+0x74]
  41b13b:	mov    bl,0xe
  41b13d:	nop
  41b13e:	or     eax,0xcc2f0dc2
  41b143:	in     al,dx
  41b144:	outs   dx,DWORD PTR ds:[esi]
  41b145:	xor    cl,BYTE PTR [edi+0x40cfe711]
  41b14b:	clc    
  41b14c:	adc    BYTE PTR ds:0xb814727,dl
  41b152:	jne    0x41b172
  41b154:	or     al,0xdd
  41b156:	and    BYTE PTR [esi-0x46],al
  41b159:	mov    esi,0xd71ad1e8
  41b15e:	mov    edx,0x7584afcc
  41b163:	xchg   BYTE PTR [ebp-0x53],al
  41b166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b167:	test   eax,0xe9f55a86
  41b16c:	sbb    eax,0xe0ea3432
  41b171:	inc    ebx
  41b172:	(bad)  
  41b174:	inc    edx
  41b175:	mov    DWORD PTR [edi+0x48bad322],edi
  41b17b:	xchg   ebp,eax
  41b17c:	fidivr WORD PTR cs:[edi+eiz*8+0x484c957d]
  41b184:	or     eax,0xcd7781db
  41b189:	addr16 mov bh,0x9a
  41b18c:	add    DWORD PTR [eax+0x26],ecx
  41b18f:	dec    edi
  41b190:	dec    eax
  41b191:	stos   DWORD PTR es:[edi],eax
  41b192:	jns    0x41b1f2
  41b194:	aas    
  41b195:	(bad)  
  41b196:	mov    eax,0x702a6ca4
  41b19b:	sbb    DWORD PTR [eax-0x34],esi
  41b19e:	jle    0x41b1ce
  41b1a0:	clc    
  41b1a1:	retf   
  41b1a2:	jge    0x41b1c6
  41b1a4:	xchg   ebx,eax
  41b1a5:	fmul   QWORD PTR [esi+edi*1]
  41b1a8:	lock and bl,bh
  41b1ab:	inc    eax
  41b1ac:	hlt    
  41b1ad:	cs cli 
  41b1af:	nop
  41b1b0:	ds inc esi
  41b1b2:	(bad)  
  41b1b4:	or     dh,BYTE PTR [ebx-0x39]
  41b1b7:	stos   BYTE PTR es:[edi],al
  41b1b8:	loope  0x41b171
  41b1ba:	int    0x56
  41b1bc:	test   BYTE PTR [ebx+0x42dc6d3b],dl
  41b1c2:	call   0xc2648555
  41b1c7:	jmp    0x41b1d4
  41b1c9:	mov    cl,0xb7
  41b1cb:	or     BYTE PTR [ebx-0x29],bl
  41b1ce:	and    al,0x3f
  41b1d0:	push   0x14b56b0f
  41b1d5:	shl    BYTE PTR [ecx+0x7b],0xd8
  41b1d9:	jb     0x41b20a
  41b1db:	jl     0x41b18b
  41b1dd:	addr16 mov al,0xf
  41b1e0:	cmp    esi,DWORD PTR [edx+0x5a]
  41b1e3:	sub    BYTE PTR [ecx+0x57aeeec4],dh
  41b1e9:	(bad)  
  41b1ea:	dec    esi
  41b1eb:	push   ebx
  41b1ec:	push   ds
  41b1ed:	jae    0x41b1ce
  41b1ef:	int    0x3a
  41b1f1:	jecxz  0x41b1d1
  41b1f3:	mov    ecx,0x59ab06ac
  41b1f8:	out    dx,al
  41b1f9:	stos   BYTE PTR es:[edi],al
  41b1fa:	cwde   
  41b1fb:	bound  edi,QWORD PTR [edi]
  41b1fd:	mov    ebp,0x512f51c5
  41b202:	push   edx
  41b203:	mov    edi,0x578a038a
  41b208:	mov    cl,0xac
  41b20a:	sti    
  41b20b:	clc    
  41b20c:	jns    0x41b1f9
  41b20e:	aas    
  41b20f:	mov    BYTE PTR [eax],ch
  41b211:	pop    DWORD PTR [ebx]
  41b213:	mov    dh,0x2c
  41b215:	jmp    0x41b1f2
  41b217:	sbb    dh,BYTE PTR [edx+0x53]
  41b21a:	ret    0xee13
  41b21d:	fcomp  DWORD PTR [esi-0x30]
  41b220:	je     0x41b20c
  41b222:	xor    DWORD PTR [esi],ecx
  41b224:	add    eax,0xd7f5b313
  41b229:	add    DWORD PTR [eax+eax*1+0x73],0xffffffb4
  41b22e:	fidiv  DWORD PTR [edi-0x3e]
  41b231:	cmp    dl,BYTE PTR [esi+0x36]
  41b234:	bound  eax,QWORD PTR [edx]
  41b236:	mov    esp,0xfc76977c
  41b23b:	mov    bh,0x41
  41b23d:	push   edi
  41b23e:	mov    eax,ds:0x7075a12c
  41b243:	ins    DWORD PTR es:[edi],dx
  41b244:	push   edi
  41b245:	jbe    0x41b1da
  41b247:	cmp    esi,esi
  41b249:	or     bh,dl
  41b24b:	and    DWORD PTR [esi+0x2],ebp
  41b24e:	pop    ebx
  41b24f:	cmp    bh,BYTE PTR [ebx-0x3a3a7758]
  41b255:	idiv   ebp
  41b257:	inc    ebx
  41b258:	iret   
  41b259:	retf   
  41b25a:	adc    eax,0x71089fd2
  41b25f:	mov    ds:0xf0618dd2,eax
  41b264:	push   edi
  41b265:	(bad)  
  41b266:	das    
  41b267:	outs   dx,DWORD PTR ds:[esi]
  41b268:	mov    dh,0xd0
  41b26a:	sbb    cl,BYTE PTR [ebx-0x1258539b]
  41b270:	lea    ebx,[edx+0x4c]
  41b273:	add    DWORD PTR [edx+0x6c],edx
  41b276:	jmp    0x5ac1:0x36078de
  41b27d:	xchg   ebp,eax
  41b27e:	mov    eax,ds:0x65d99d0c
  41b283:	ins    DWORD PTR es:[edi],dx
  41b284:	inc    ecx
  41b285:	sub    edx,0x1e24398b
  41b28b:	fcomp  QWORD PTR [ebx-0x4ac72b19]
  41b291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b292:	pushf  
  41b293:	pop    esp
  41b294:	scas   al,BYTE PTR es:[edi]
  41b295:	cdq    
  41b296:	rcl    bl,1
  41b298:	ins    DWORD PTR es:[edi],dx
  41b299:	xor    BYTE PTR [esi-0x6d],ch
  41b29c:	arpl   WORD PTR [ebx-0x34],di
  41b29f:	inc    eax
  41b2a0:	test   eax,0xa134a9e8
  41b2a5:	add    al,0xbd
  41b2a7:	hlt    
  41b2a8:	or     edx,DWORD PTR [edx]
  41b2aa:	inc    eax
  41b2ab:	pop    ds
  41b2ac:	cwde   
  41b2ad:	dec    ebx
  41b2ae:	mov    dh,0x66
  41b2b0:	(bad)  
  41b2b1:	push   eax
  41b2b2:	aaa    
  41b2b3:	cmp    bl,ch
  41b2b5:	mov    esp,0x30c94aa
  41b2ba:	sbb    ah,BYTE PTR [esi+0x5b768a81]
  41b2c0:	inc    esp
  41b2c1:	push   ds
  41b2c2:	in     eax,0x44
  41b2c4:	jo     0x41b248
  41b2c6:	xchg   esi,eax
  41b2c7:	rep stos DWORD PTR es:[edi],eax
  41b2c9:	scas   al,BYTE PTR es:[edi]
  41b2ca:	jae    0x41b326
  41b2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2cd:	add    al,0xe8
  41b2cf:	adc    al,BYTE PTR [edi-0x6c10a277]
  41b2d5:	jno    0x41b2ee
  41b2d7:	nop
  41b2d8:	jp     0x41b2c9
  41b2da:	xchg   edx,eax
  41b2db:	aaa    
  41b2dc:	push   ecx
  41b2dd:	stos   DWORD PTR es:[edi],eax
  41b2de:	nop
  41b2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e0:	hlt    
  41b2e1:	clc    
  41b2e2:	jge    0x41b320
  41b2e4:	fwait
  41b2e5:	inc    edx
  41b2e6:	out    dx,al
  41b2e7:	add    eax,0xb3c59a33
  41b2ec:	jns    0x41b351
  41b2ee:	sti    
  41b2ef:	in     al,dx
  41b2f0:	jge    0x41b2ca
  41b2f2:	push   eax
  41b2f3:	xchg   esi,eax
  41b2f4:	mov    DWORD PTR [edx+0x26fb58f9],edi
  41b2fa:	ja     0x41b30a
  41b2fc:	or     dh,bh
  41b2fe:	push   edx
  41b2ff:	mov    dh,ch
  41b301:	daa    
  41b302:	or     BYTE PTR [edx],dh
  41b304:	jl     0x41b306
  41b306:	stos   DWORD PTR es:[edi],eax
  41b307:	xor    DWORD PTR [esi+0x2e],esp
  41b30a:	fxam   
  41b30c:	bnd jp 0x41b2af
  41b30f:	iret   
  41b310:	ds xor esi,eax
  41b313:	(bad)  
  41b314:	add    BYTE PTR [ebx-0x56],0xd2
  41b318:	jmp    0xba21:0x51cb2516
  41b31f:	(bad)  
  41b320:	push   ds
  41b321:	mov    ds:0xd145072,al
  41b326:	fsubrp st(7),st
  41b328:	fidiv  DWORD PTR [ebx]
  41b32a:	scas   eax,DWORD PTR es:[edi]
  41b32b:	xor    eax,0x25f22a3b
  41b330:	lods   eax,DWORD PTR ds:[esi]
  41b331:	lods   al,BYTE PTR ds:[esi]
  41b332:	or     ecx,DWORD PTR [ecx+eax*2-0x38d6eca]
  41b339:	mov    ah,cl
  41b33b:	ins    BYTE PTR es:[edi],dx
  41b33c:	ret    
  41b33d:	and    eax,DWORD PTR [esi-0x62]
  41b340:	push   0x4e
  41b342:	ret    0xf40d
  41b345:	scas   al,BYTE PTR es:[edi]
  41b346:	mov    al,ds:0xe76003dd
  41b34b:	pop    ebp
  41b34c:	sbb    esp,DWORD PTR [ebx+0x52ed505a]
  41b352:	inc    esi
  41b353:	jnp    0x41b3a8
  41b355:	mov    esi,0x1b9a2578
  41b35a:	mov    ds:0x9c57925a,al
  41b35f:	add    ecx,DWORD PTR ds:0x2592c53f
  41b365:	aas    
  41b366:	sbb    DWORD PTR [eax-0x56f82fe7],esi
  41b36c:	imul   esi,ebx,0xffffffd0
  41b36f:	in     al,dx
  41b370:	leave  
  41b371:	pop    ebx
  41b372:	xchg   esi,eax
  41b373:	push   ebp
  41b374:	mov    ds:0xdbd7b51f,al
  41b379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b37a:	add    BYTE PTR [ebp-0x1c852de3],dl
  41b380:	leave  
  41b381:	push   cs
  41b382:	nop
  41b383:	ret    
  41b384:	std    
  41b385:	adc    BYTE PTR [ebp-0x51abed96],0x48
  41b38c:	mov    WORD PTR [eax],es
  41b38e:	cmp    esi,DWORD PTR [esi+0x691b845b]
  41b394:	je     0x41b3aa
  41b396:	xlat   BYTE PTR ds:[ebx]
  41b397:	cmp    DWORD PTR [edi-0xc],0x44
  41b39b:	outs   dx,BYTE PTR ds:[esi]
  41b39c:	pop    ebp
  41b39d:	cmp    BYTE PTR [edi+0xe],bl
  41b3a0:	sub    DWORD PTR [ebx+0x43],0x364e8471
  41b3a7:	mov    al,ds:0x9f37eb1c
  41b3ac:	je     0x41b3a1
  41b3ae:	fadd   DWORD PTR [esi]
  41b3b0:	mov    gs,WORD PTR [esi+0x3f]
  41b3b3:	dec    ebx
  41b3b4:	sbb    BYTE PTR [ecx-0x7e0e03cc],ah
  41b3ba:	mov    eax,0x3040a931
  41b3bf:	sbb    BYTE PTR [ecx],ah
  41b3c1:	fist   DWORD PTR [edx]
  41b3c3:	adc    dl,bl
  41b3c5:	or     bl,bl
  41b3c7:	push   esi
  41b3c8:	lahf   
  41b3c9:	or     al,0x22
  41b3cb:	sbb    al,0x91
  41b3cd:	dec    edi
  41b3ce:	or     BYTE PTR [ecx],ch
  41b3d0:	inc    ebp
  41b3d1:	pusha  
  41b3d2:	cdq    
  41b3d3:	sbb    ebx,DWORD PTR [ebx+0x8]
  41b3d6:	inc    eax
  41b3d7:	(bad)  
  41b3d8:	repnz stos BYTE PTR es:[edi],al
  41b3da:	dec    edx
  41b3db:	int3   
  41b3dc:	push   ebx
  41b3dd:	mov    BYTE PTR [edi+0xd],dh
  41b3e0:	xchg   edi,eax
  41b3e1:	popa   
  41b3e2:	xchg   ecx,eax
  41b3e3:	mov    ?,WORD PTR [ebx-0xa]
  41b3e6:	imul   esp,DWORD PTR [esi-0x4a],0xffffffc8
  41b3ea:	or     eax,0x17f95a71
  41b3ef:	cmp    eax,0xc25b173d
  41b3f4:	lods   eax,DWORD PTR ds:[esi]
  41b3f5:	xchg   edx,eax
  41b3f6:	push   esi
  41b3f7:	pushf  
  41b3f8:	mov    esi,ecx
  41b3fa:	or     ebp,DWORD PTR [edi+0x75764db2]
  41b400:	sub    ebx,DWORD PTR [ebx+0x23]
  41b403:	(bad)  
  41b404:	test   eax,0x51a9dd5d
  41b409:	jne    0x41b3aa
  41b40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b40c:	(bad)  
  41b40d:	(bad)  
  41b40e:	mov    bh,0x47
  41b410:	inc    ebx
  41b411:	repnz mov DWORD PTR [edi],esp
  41b414:	std    
  41b415:	mov    edx,0x1b175b9a
  41b41a:	dec    ebx
  41b41b:	mov    esi,0x38f6d8ce
  41b420:	sub    BYTE PTR [ecx+0x15480fab],al
  41b426:	data16 aam 0x10
  41b429:	push   es
  41b42a:	jns    0x41b44d
  41b42c:	push   0x2d2e9869
  41b431:	mov    cl,0x2d
  41b433:	push   esp
  41b434:	pop    eax
  41b435:	icebp  
  41b436:	es adc eax,0x997c03e2
  41b43c:	(bad)  
  41b43d:	out    dx,al
  41b43e:	jmp    0x902a:0x6ca5bbab
  41b445:	fdivr  DWORD PTR [ecx+0x593cd32]
  41b44b:	jb     0x41b497
  41b44d:	ss pop ebp
  41b44f:	push   ecx
  41b450:	jl     0x41b41d
  41b452:	addr16 nop
  41b454:	pushf  
  41b455:	mov    esp,0xa5c4efeb
  41b45a:	mov    ds:0x157156f3,al
  41b45f:	push   esp
  41b460:	scas   al,BYTE PTR es:[edi]
  41b461:	(bad)  
  41b462:	push   esi
  41b463:	enter  0x1c29,0xf8
  41b467:	ins    BYTE PTR es:[edi],dx
  41b468:	jo     0x41b446
  41b46a:	adc    BYTE PTR gs:[ebx],bl
  41b46d:	and    DWORD PTR ds:0x437be603,0x16
  41b474:	add    DWORD PTR [ebp+0x5c1007c],edx
  41b47a:	or     dh,BYTE PTR gs:[ebx-0x46]
  41b47e:	out    0x10,eax
  41b480:	sbb    al,0xff
  41b482:	sbb    DWORD PTR [ebx+0x1],ecx
  41b485:	inc    esi
  41b486:	imul   edi,DWORD PTR [ebx+0x35a5dea5],0x51
  41b48d:	or     cl,dh
  41b48f:	dec    edx
  41b490:	pop    edx
  41b491:	mov    edi,0x81bb9fe6
  41b496:	jno    0x41b49e
  41b498:	dec    eax
  41b499:	cmp    bl,BYTE PTR [ebx-0x7ef48cf2]
  41b49f:	aas    
  41b4a0:	pop    ds
  41b4a1:	ror    BYTE PTR [ebx+0x18],cl
  41b4a4:	add    eax,0xb57f895f
  41b4aa:	dec    ebp
  41b4ab:	loopne 0x41b456
  41b4ad:	pop    ecx
  41b4ae:	hlt    
  41b4af:	xchg   DWORD PTR [ecx],edx
  41b4b1:	mov    dl,0x4b
  41b4b3:	icebp  
  41b4b4:	rcr    BYTE PTR [eax+0x142df92c],0x9c
  41b4bb:	das    
  41b4bc:	mov    cl,dh
  41b4be:	pop    ss
  41b4bf:	xlat   BYTE PTR ds:[ebx]
  41b4c0:	das    
  41b4c1:	sub    ch,BYTE PTR [ebx+edi*2]
  41b4c4:	mov    dh,0xe1
  41b4c6:	and    BYTE PTR [ebp+0x382764be],cl
  41b4cc:	test   al,0x74
  41b4cf:	jnp    0x41b52e
  41b4d1:	test   al,0xda
  41b4d3:	les    eax,FWORD PTR [ebx-0x6c]
  41b4d6:	and    BYTE PTR [edx+edi*8+0x60],cl
  41b4da:	push   ebx
  41b4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4dc:	dec    esp
  41b4dd:	inc    ebx
  41b4de:	shr    al,cl
  41b4e0:	jl     0x41b55c
  41b4e2:	sti    
  41b4e3:	int3   
  41b4e4:	das    
  41b4e5:	adc    eax,0xcb0c745f
  41b4ea:	sbb    DWORD PTR [ecx],0x199804ab
  41b4f0:	xchg   edx,eax
  41b4f1:	mov    dl,0x2d
  41b4f3:	fistp  WORD PTR [ebx+edi*4-0x4574dce3]
  41b4fa:	pop    ecx
  41b4fb:	mov    edi,DWORD PTR [esi]
  41b4fd:	mov    cl,0xed
  41b4ff:	and    DWORD PTR [ecx+0x247a5090],esi
  41b505:	jg     0x41b56f
  41b507:	ret    0xd005
  41b50a:	pop    ds
  41b50b:	(bad)  
  41b50c:	das    
  41b50d:	mov    esp,0xa0210494
  41b512:	mov    DWORD PTR [ebp-0x48],edx
  41b515:	mov    edx,DWORD PTR [ebp+0x8]
  41b518:	mov    ebx,0xfa5e1530
  41b51d:	sub    ebx,edx
  41b51f:	add    ebx,DWORD PTR [ebp-0x44]
  41b522:	mov    DWORD PTR [ebp-0x44],ebx
  41b525:	mov    edx,DWORD PTR [ebp+0x8]
  41b528:	xor    edx,eax
  41b52a:	add    edx,esi
  41b52c:	jne    0x419130
  41b532:	mov    edx,DWORD PTR [ebp-0x8]
  41b535:	mov    ebx,DWORD PTR [ebp-0xc]
  41b538:	xor    edx,eax
  41b53a:	lea    edx,[edx+ebx*1+0x3272ef]
  41b541:	mov    DWORD PTR [ebp-0xc],edx
  41b544:	mov    edx,DWORD PTR [ebp-0x10]
  41b547:	xor    edx,eax
  41b549:	add    edx,esi
  41b54b:	jne    0x40ffb8
  41b551:	jmp    0x41d9ed
  41b556:	mov    ecx,DWORD PTR [ebp-0x14]
  41b559:	mov    DWORD PTR [ebp+0x8],ecx
  41b55c:	jmp    0x41b5d5
  41b561:	mov    ecx,DWORD PTR [ebp+0x8]
  41b564:	mov    edx,DWORD PTR [ebp-0x8]
  41b567:	xor    ecx,eax
  41b569:	xor    edx,eax
  41b56b:	sub    ecx,edx
  41b56d:	sub    ecx,esi
  41b56f:	xor    ecx,eax
  41b571:	mov    DWORD PTR [ebp+0x8],ecx
  41b574:	mov    ecx,DWORD PTR [ebp+0x8]
  41b577:	mov    edx,DWORD PTR [ebp-0x58]
  41b57a:	add    ecx,0x5708fa
  41b580:	imul   ecx,edx
  41b583:	mov    DWORD PTR [ebp-0x58],ecx
  41b586:	mov    ecx,DWORD PTR [ebp+0x8]
  41b589:	mov    edx,DWORD PTR [ebp-0x54]
  41b58c:	add    ecx,0x64f89c
  41b592:	or     ecx,edx
  41b594:	mov    DWORD PTR [ebp-0x54],ecx
  41b597:	mov    ecx,DWORD PTR [ebp+0x8]
  41b59a:	mov    edx,DWORD PTR [ebp-0x50]
  41b59d:	add    ecx,0x242ebcd
  41b5a3:	xor    ecx,edx
  41b5a5:	mov    DWORD PTR [ebp-0x50],ecx
  41b5a8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5ab:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5ae:	add    ecx,edi
  41b5b0:	and    ecx,edx
  41b5b2:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5b5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5b8:	mov    edx,DWORD PTR [ebp-0x48]
  41b5bb:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5c2:	mov    DWORD PTR [ebp-0x48],ecx
  41b5c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5c8:	mov    edx,0xfa5e1530
  41b5cd:	sub    edx,ecx
  41b5cf:	add    edx,DWORD PTR [ebp-0x44]
  41b5d2:	mov    DWORD PTR [ebp-0x44],edx
  41b5d5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5d8:	xor    ecx,eax
  41b5da:	add    ecx,esi
  41b5dc:	jne    0x41b561
  41b5e2:	jmp    0x41d9f9
  41b5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5ea:	mov    edx,DWORD PTR [ebp-0x8]
  41b5ed:	xor    ecx,eax
  41b5ef:	xor    edx,eax
  41b5f1:	sub    ecx,edx
  41b5f3:	sub    ecx,esi
  41b5f5:	xor    ecx,eax
  41b5f7:	mov    DWORD PTR [ebp+0x8],ecx
  41b5fa:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fd:	mov    edx,DWORD PTR [ebp-0x58]
  41b600:	add    ecx,0x5708fa
  41b606:	imul   ecx,edx
  41b609:	mov    DWORD PTR [ebp-0x58],ecx
  41b60c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60f:	mov    edx,DWORD PTR [ebp-0x54]
  41b612:	add    ecx,0x64f89c
  41b618:	or     ecx,edx
  41b61a:	mov    DWORD PTR [ebp-0x54],ecx
  41b61d:	mov    ecx,DWORD PTR [ebp+0x8]
  41b620:	mov    edx,DWORD PTR [ebp-0x50]
  41b623:	add    ecx,0x242ebcd
  41b629:	xor    ecx,edx
  41b62b:	mov    DWORD PTR [ebp-0x50],ecx
  41b62e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b631:	mov    edx,DWORD PTR [ebp-0x4c]
  41b634:	add    ecx,edi
  41b636:	jmp    0x41d9bb
  41b63b:	mov    ch,ah
  41b63d:	cmp    al,0x62
  41b63f:	sbb    al,0xa2
  41b641:	test   BYTE PTR [edi+ebp*2+0x2220c6f],al
  41b648:	inc    ebp
  41b649:	pusha  
  41b64a:	dec    esi
  41b64b:	pop    esi
  41b64c:	std    
  41b64d:	jns    0x41b6c9
  41b64f:	adc    bl,BYTE PTR [edi+0x7a]
  41b652:	jp     0x41b687
  41b654:	bound  edi,QWORD PTR [ecx+0x340b7edc]
  41b65a:	jmp    0x41b655
  41b65c:	imul   edi,DWORD PTR [edi],0xc68838e9
  41b662:	mov    al,0xf1
  41b664:	pushf  
  41b665:	add    eax,0x8ce69812
  41b66a:	pop    ebp
  41b66b:	mov    ebx,0x804fd062
  41b670:	push   ds
  41b671:	fidiv  DWORD PTR [edx]
  41b673:	jl     0x41b698
  41b675:	or     ebp,DWORD PTR [eax]
  41b677:	push   ebp
  41b678:	test   DWORD PTR [eax],edx
  41b67a:	outs   dx,BYTE PTR ds:[esi]
  41b67b:	push   ds
  41b67c:	jne    0x41b6f5
  41b67e:	neg    DWORD PTR [edx]
  41b680:	and    BYTE PTR [esi],bh
  41b682:	mov    esi,0xff464453
  41b687:	and    BYTE PTR [eax-0x6776b5d2],bh
  41b68d:	fsub   DWORD PTR [edi-0x70]
  41b690:	and    ch,BYTE PTR [ecx]
  41b692:	dec    esi
  41b693:	fld    QWORD PTR [ebx-0x11]
  41b696:	or     ah,0xbe
  41b699:	shl    DWORD PTR [edx],cl
  41b69b:	cld    
  41b69c:	xchg   edi,edi
  41b69e:	pop    ds
  41b69f:	stos   BYTE PTR es:[edi],al
  41b6a0:	in     eax,0x48
  41b6a2:	popa   
  41b6a3:	push   edx
  41b6a4:	pop    ss
  41b6a5:	sbb    cl,cl
  41b6a7:	mov    eax,0x6248088d
  41b6ac:	fcom   QWORD PTR [edx+0x5961a2be]
  41b6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6b3:	and    edx,eax
  41b6b5:	test   eax,0xf3356d6e
  41b6ba:	pop    edi
  41b6bb:	stos   DWORD PTR es:[edi],eax
  41b6bc:	cld    
  41b6bd:	inc    eax
  41b6be:	lea    edx,[edx+0x37]
  41b6c1:	add    dh,bl
  41b6c3:	cmc    
  41b6c4:	mov    esp,0x4605d059
  41b6c9:	xlat   BYTE PTR ds:[ebx]
  41b6ca:	stos   BYTE PTR es:[edi],al
  41b6cb:	add    dh,BYTE PTR [ebx]
  41b6cd:	jle    0x41b70e
  41b6cf:	and    al,0x16
  41b6d1:	jno    0x41b67e
  41b6d3:	rcr    DWORD PTR [esi+0x64],0x90
  41b6d7:	mov    esp,0x868a52a1
  41b6dc:	add    DWORD PTR [edx-0x44],esi
  41b6df:	jg     0x41b6e8
  41b6e1:	mov    WORD PTR [edx],cs
  41b6e3:	add    DWORD PTR [ebp-0x6d7ea63c],0x611e9f91
  41b6ed:	or     bh,al
  41b6ef:	add    BYTE PTR [esi-0xabe0b98],0x9f
  41b6f6:	push   esi
  41b6f7:	stos   DWORD PTR es:[edi],eax
  41b6f8:	inc    edi
  41b6f9:	nop
  41b6fa:	mov    ebp,0xc40db1c
  41b6ff:	clc    
  41b700:	es mov esi,0x46b9c256
  41b706:	ffreep st(2)
  41b708:	adc    eax,0xdbd0e47f
  41b70d:	xor    eax,0xef94292d
  41b712:	imul   eax,DWORD PTR [edx-0x30],0xffffff90
  41b716:	jnp    0x41b71c
  41b718:	and    edx,esi
  41b71a:	mov    bl,0x79
  41b71c:	mov    eax,ds:0x4b497c47
  41b721:	adc    eax,0x73aab400
  41b726:	gs xor ebx,esi
  41b729:	sbb    esp,DWORD PTR fs:[esi+0x4c]
  41b72d:	and    BYTE PTR [edx+0x6e],bh
  41b730:	xlat   BYTE PTR ds:[ebx]
  41b731:	cmp    DWORD PTR [edx+0x43db2aa3],ecx
  41b737:	or     al,0x73
  41b739:	add    ah,BYTE PTR [ecx+0x6fbbf059]
  41b73f:	mov    bh,0xbb
  41b741:	test   DWORD PTR [ecx-0xab4887c],eax
  41b747:	jmp    0x5c1939e
  41b74c:	push   ecx
  41b74d:	ss aas 
  41b74f:	mov    ah,0xa1
  41b751:	imul   esp,DWORD PTR [edi-0x2a88a29e],0x2b6abb0c
  41b75b:	ins    BYTE PTR es:[edi],dx
  41b75c:	xchg   BYTE PTR [edi+0x35],dl
  41b75f:	jbe    0x41b72c
  41b761:	lahf   
  41b762:	sub    eax,ebx
  41b764:	inc    edx
  41b765:	cwde   
  41b766:	imul   edx,DWORD PTR [ecx],0x20
  41b769:	cmp    BYTE PTR [ebx],0x4
  41b76c:	mov    eax,ds:0xc53a454
  41b771:	scas   al,BYTE PTR es:[edi]
  41b772:	ss xchg edi,eax
  41b774:	jp     0x41b7ef
  41b776:	or     eax,0xd1164fbf
  41b77b:	vandnps ymm5,ymm7,YMMWORD PTR [ebx]
  41b77f:	mov    ebp,0xba0e1b23
  41b784:	sub    edx,esi
  41b786:	and    BYTE PTR [edx+edi*8+0x75],al
  41b78a:	adc    al,0xa4
  41b78c:	scas   eax,DWORD PTR es:[edi]
  41b78d:	sub    BYTE PTR [eax],ch
  41b78f:	cli    
  41b790:	push   ss
  41b791:	push   esp
  41b792:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b794:	inc    ebx
  41b795:	cmp    esi,esi
  41b797:	pusha  
  41b798:	adc    cl,bl
  41b79a:	fld    QWORD PTR [ecx]
  41b79c:	and    BYTE PTR [ebx-0x31],bl
  41b79f:	add    edx,DWORD PTR [esi-0x17]
  41b7a2:	lahf   
  41b7a3:	sub    BYTE PTR [ecx+esi*2+0x13c5428a],0xc8
  41b7ab:	ja     0x41b736
  41b7ad:	pop    esi
  41b7ae:	dec    esi
  41b7af:	fcmovbe st,st(6)
  41b7b1:	mov    eax,ds:0x44c558d
  41b7b6:	mov    al,0x5a
  41b7b8:	jmp    0x9453bbfa
  41b7bd:	xchg   ebp,eax
  41b7be:	ret    
  41b7bf:	mov    bh,0x67
  41b7c1:	ret    
  41b7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7c3:	cmp    BYTE PTR [eax+0x2f],bl
  41b7c6:	mov    dh,0x31
  41b7c8:	into   
  41b7c9:	add    cl,BYTE PTR [edi+eiz*8-0x7e38c5e0]
  41b7d0:	sub    BYTE PTR [esp+ebx*8-0x4a3a5211],ch
  41b7d7:	push   ds
  41b7d8:	stc    
  41b7d9:	mov    esp,ds
  41b7db:	into   
  41b7dc:	xor    BYTE PTR [ebx],0x3f
  41b7df:	les    eax,FWORD PTR [ebp-0x5b5a5b14]
  41b7e5:	add    eax,0xb01f5ae4
  41b7ea:	mov    ah,BYTE PTR [esi-0x389f1596]
  41b7f0:	ret    0x661d
  41b7f3:	ret    0x8194
  41b7f6:	pop    ebx
  41b7f7:	arpl   WORD PTR [edx+0x40156fce],sp
  41b7fd:	inc    eax
  41b7fe:	add    ah,BYTE PTR [edx-0x21]
  41b801:	(bad)  
  41b802:	jg     0x41b842
  41b804:	lock mov eax,ds:0xc21b967f
  41b80a:	test   al,0xff
  41b80c:	popa   
  41b80d:	push   0xebca5f44
  41b812:	or     al,0x8f
  41b814:	xor    eax,DWORD PTR [edi+0x78]
  41b817:	cld    
  41b818:	and    eax,0xa6f196d4
  41b81d:	pop    ss
  41b81e:	xchg   esi,eax
  41b81f:	xor    BYTE PTR [edx-0xeaee36a],bl
  41b825:	or     DWORD PTR [edi],edi
  41b827:	andps  xmm6,XMMWORD PTR [edi-0xfa7c8e0]
  41b82e:	loop   0x41b839
  41b830:	lds    eax,FWORD PTR [ebx-0x42]
  41b833:	adc    eax,0xa4af1faf
  41b838:	dec    ecx
  41b839:	mov    esi,DWORD PTR [edi]
  41b83b:	pop    esp
  41b83c:	stos   BYTE PTR es:[edi],al
  41b83d:	dec    ebx
  41b83e:	xor    BYTE PTR [edx+eiz*1],cl
  41b841:	hlt    
  41b842:	push   ds
  41b843:	sbb    eax,0x84193a43
  41b848:	icebp  
  41b849:	sub    al,0x11
  41b84b:	(bad)  
  41b84c:	popf   
  41b84d:	retf   
  41b84e:	jb     0x41b7fe
  41b850:	leave  
  41b851:	mov    bl,0xcf
  41b853:	in     al,dx
  41b854:	scas   eax,DWORD PTR es:[edi]
  41b855:	push   edi
  41b856:	mov    DWORD PTR [edx],esp
  41b858:	sbb    eax,0xe16a5d5f
  41b85d:	fbld   TBYTE PTR [edx-0x2b]
  41b860:	mov    ebx,edx
  41b862:	sbb    eax,0xd4fab82a
  41b867:	aad    0xc0
  41b869:	or     ch,BYTE PTR [esi-0x5f65992c]
  41b86f:	cmp    DWORD PTR [edi-0x5a066ce4],esp
  41b875:	inc    edx
  41b876:	mov    al,0x53
  41b878:	adc    eax,0xd1aa3d46
  41b87d:	repnz repnz or eax,0xe205bef2
  41b884:	js     0x41b87c
  41b886:	test   DWORD PTR [eax],ebp
  41b888:	mov    ecx,0x19ec70b2
  41b88d:	in     al,dx
  41b88e:	outs   dx,BYTE PTR ds:[esi]
  41b88f:	int    0xff
  41b891:	cmp    al,0x85
  41b893:	pushf  
  41b894:	loop   0x41b900
  41b896:	sbb    al,BYTE PTR [edx+0x2babceff]
  41b89c:	jne    0x41b8fe
  41b89e:	lahf   
  41b89f:	aas    
  41b8a0:	mov    esp,0x83dac7a8
  41b8a5:	sub    DWORD PTR [ebx-0x52],esi
  41b8a8:	jns    0x41b85a
  41b8aa:	dec    edi
  41b8ab:	mov    bh,0x5a
  41b8ad:	mov    ch,BYTE PTR [eax+0x76]
  41b8b0:	imul   esp,DWORD PTR [esi+ebp*1+0x1e0abe7b],0x78
  41b8b8:	or     DWORD PTR [ebp-0x12],esi
  41b8bb:	jg     0x41b927
  41b8bd:	xor    cl,BYTE PTR [ebp+0x1e6c2eca]
  41b8c3:	shl    esp,cl
  41b8c5:	nop
  41b8c6:	call   0xadd5:0xb41be1f9
  41b8cd:	mov    DWORD PTR [edi],eax
  41b8cf:	jp     0x41b90f
  41b8d1:	clc    
  41b8d2:	scas   al,BYTE PTR es:[edi]
  41b8d3:	dec    eax
  41b8d4:	sbb    al,al
  41b8d6:	mov    al,ds:0x8eb2a8c6
  41b8db:	add    eax,0x31045b72
  41b8e0:	mov    ch,0x8
  41b8e2:	jmp    0x41b8cb
  41b8e4:	(bad)  
  41b8e5:	jo     0x41b8f3
  41b8e7:	ds ins DWORD PTR es:[edi],dx
  41b8e9:	push   eax
  41b8ea:	pop    ebp
  41b8eb:	scas   eax,DWORD PTR es:[edi]
  41b8ec:	or     al,0xf5
  41b8ee:	(bad)  
  41b8f0:	mov    ebx,0x468c798f
  41b8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f6:	and    DWORD PTR [ecx-0x1cf61aaa],0xb2a1adef
  41b900:	in     al,0x63
  41b902:	sub    esp,ebx
  41b904:	jmp    0x41b908
  41b906:	inc    ebp
  41b907:	(bad)  
  41b908:	jo     0x41b903
  41b90a:	je     0x41b8d1
  41b90c:	aaa    
  41b90d:	jb     0x41b8dc
  41b90f:	add    BYTE PTR [ecx],dh
  41b911:	jb     0x41b92e
  41b913:	jge    0x41b966
  41b915:	loopne 0x41b943
  41b917:	jne    0x41b92b
  41b919:	sub    eax,0x2122f687
  41b91e:	repnz sub ch,BYTE PTR [edx-0x1f]
  41b922:	int3   
  41b923:	jb     0x41b916
  41b925:	xchg   esi,eax
  41b926:	test   BYTE PTR [edx],bl
  41b928:	dec    esi
  41b929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b92a:	and    al,dh
  41b92c:	repnz cmp eax,0x604d7574
  41b932:	fsub   QWORD PTR [ecx-0x47b303d6]
  41b938:	(bad)  
  41b939:	les    esi,FWORD PTR gs:[esp+0x50c0c785]
  41b941:	sub    BYTE PTR [ecx+0x4f9bedd],al
  41b947:	pop    edx
  41b948:	mov    eax,0x170abde9
  41b94d:	js     0x41b96b
  41b94f:	int3   
  41b950:	lds    eax,FWORD PTR [edi+0x66796494]
  41b956:	ficomp WORD PTR [eax+0x7c]
  41b959:	dec    ecx
  41b95a:	cmp    al,0x48
  41b95c:	iret   
  41b95d:	(bad)  
  41b95e:	sub    edi,DWORD PTR [edi+0xa]
  41b961:	imul   eax,DWORD PTR ds:0xba89d2b6,0x26
  41b968:	pop    ds
  41b969:	pusha  
  41b96a:	sub    edi,DWORD PTR [ebp+0x1288504a]
  41b970:	int    0xfe
  41b972:	js     0x41b99c
  41b974:	repnz add bl,BYTE PTR es:[ebx-0x3f]
  41b979:	add    al,0xcd
  41b97b:	fcom   QWORD PTR [ebx+0x13]
  41b97e:	push   ebx
  41b980:	pop    ss
  41b981:	pop    es
  41b982:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b984:	das    
  41b985:	xlat   BYTE PTR ds:[ebx]
  41b986:	sbb    BYTE PTR [esi+edx*8],ah
  41b989:	loop   0x41ba02
  41b98b:	loop   0x41b90d
  41b98d:	adc    DWORD PTR [edx+0x266868f3],edx
  41b993:	stos   DWORD PTR es:[edi],eax
  41b994:	sahf   
  41b995:	ja     0x41b9bb
  41b997:	pop    ebx
  41b998:	sbb    DWORD PTR [esi],edx
  41b99a:	std    
  41b99b:	imul   esi,esi,0xe
  41b99e:	mov    eax,ds:0x997e3d8f
  41b9a3:	mov    eax,ds:0xdaeb9958
  41b9a8:	mov    ebp,0x8558dca0
  41b9ad:	ficom  WORD PTR [edi-0x2be1a0fe]
  41b9b3:	fadd   st,st(4)
  41b9b5:	ja     0x41ba2a
  41b9b7:	inc    ecx
  41b9b8:	push   edi
  41b9b9:	inc    ecx
  41b9ba:	cld    
  41b9bb:	movd   edi,mm0
  41b9be:	add    al,0x4b
  41b9c0:	add    DWORD PTR ds:0xa4a4c086,ecx
  41b9c6:	jmp    0x6f6a:0xcd56fae9
  41b9cd:	fild   DWORD PTR [ebp-0x2324ac7a]
  41b9d3:	lahf   
  41b9d4:	je     0x41b9e4
  41b9d6:	dec    ebp
  41b9d7:	cmp    BYTE PTR [edx+ebx*1+0x6c],ch
  41b9db:	pop    ebp
  41b9dc:	retf   0xf259
  41b9df:	dec    ebp
  41b9e0:	inc    esi
  41b9e1:	push   0xf2a1aff2
  41b9e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9e7:	stos   DWORD PTR es:[edi],eax
  41b9e8:	mov    ecx,0x608e9ab1
  41b9ed:	pshufw mm0,mm0,0x30
  41b9f1:	inc    edx
  41b9f2:	rol    ah,cl
  41b9f4:	or     BYTE PTR [edx+ecx*8],bh
  41b9f7:	sbb    al,0xb4
  41b9f9:	js     0x41b98f
  41b9fb:	cdq    
  41b9fc:	(bad)  
  41b9fd:	push   edi
  41b9fe:	sbb    al,0x2d
  41ba00:	cmp    edi,esi
  41ba02:	fidiv  DWORD PTR [eax]
  41ba04:	pop    ss
  41ba05:	xchg   edi,eax
  41ba06:	or     DWORD PTR [edi+0x28a96af3],ebx
  41ba0c:	(bad)  
  41ba0d:	jle    0x41ba1a
  41ba0f:	dec    edx
  41ba10:	pop    esi
  41ba11:	lock out dx,al
  41ba13:	sub    al,0x1d
  41ba15:	daa    
  41ba16:	mov    BYTE PTR [edi+edx*4+0x50abe414],dl
  41ba1d:	lahf   
  41ba1e:	push   cs
  41ba1f:	in     eax,dx
  41ba20:	sbb    al,0x6b
  41ba22:	lea    esp,[ecx+0x36]
  41ba25:	cmp    BYTE PTR [ecx+0x8],bh
  41ba28:	add    al,0xdc
  41ba2a:	mul    DWORD PTR [edi]
  41ba2c:	imul   ebx,DWORD PTR [ebx],0xffffffa7
  41ba2f:	aad    0xc7
  41ba31:	cmp    edx,0x6524a864
  41ba37:	cmp    eax,0xda498467
  41ba3c:	test   BYTE PTR [edi],dh
  41ba3e:	sbb    eax,0x318aa188
  41ba43:	sub    eax,0x56b3c35b
  41ba48:	mov    ebp,0x7ad3f0bc
  41ba4d:	cmp    dh,BYTE PTR [ecx-0x5af73aa2]
  41ba53:	and    ebx,DWORD PTR [edi+eax*1+0x5bace7d1]
  41ba5a:	(bad)  
  41ba5e:	mov    dl,0xd0
  41ba60:	lods   eax,DWORD PTR ds:[esi]
  41ba61:	js     0x41b9e4
  41ba63:	jg     0x41bab0
  41ba65:	xchg   edx,eax
  41ba66:	cmp    ah,BYTE PTR [edx-0x6e781667]
  41ba6c:	fs out dx,al
  41ba6e:	out    dx,eax
  41ba6f:	or     edi,DWORD PTR [eax+ebp*4-0x38ec709a]
  41ba76:	jg     0x41ba24
  41ba78:	pushf  
  41ba79:	sub    eax,0xda095ee4
  41ba7e:	or     eax,0x5715a9c1
  41ba83:	nop
  41ba84:	sub    edi,DWORD PTR [ebx+0x60724649]
  41ba8a:	mov    bh,0xe
  41ba8c:	cli    
  41ba8d:	dec    edi
  41ba8e:	into   
  41ba8f:	sahf   
  41ba90:	sbb    BYTE PTR [esi-0x39],bh
  41ba93:	xchg   edi,eax
  41ba94:	sbb    BYTE PTR [ebp-0x13e81d54],dl
  41ba9a:	loope  0x41ba28
  41ba9c:	jmp    0x53747c75
  41baa1:	mov    dl,0x95
  41baa3:	pop    edx
  41baa4:	in     eax,0xcd
  41baa6:	stos   DWORD PTR es:[edi],eax
  41baa7:	aas    
  41baa8:	adc    ecx,ebx
  41baaa:	jmp    0x6124:0x666137b8
  41bab1:	jae    0x41bb14
  41bab3:	sar    BYTE PTR [eax+0x4560ab03],1
  41bab9:	nop
  41baba:	sbb    bh,dl
  41babc:	sub    esi,DWORD PTR [eiz*8+0x3233d326]
  41bac3:	pop    ds
  41bac4:	sbb    al,0x6e
  41bac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac8:	aas    
  41bac9:	push   es
  41baca:	cmc    
  41bacb:	cdq    
  41bacc:	jo     0x41ba5f
  41bace:	ficom  WORD PTR [esi]
  41bad0:	inc    edi
  41bad1:	mov    cs,WORD PTR [ecx-0x798d2886]
  41bad7:	bound  ecx,QWORD PTR [eax+edi*2+0x69248775]
  41bade:	pop    ebx
  41badf:	xor    DWORD PTR [eax+0x2b6aad91],esi
  41bae5:	icebp  
  41bae6:	(bad)  
  41bae7:	pop    esp
  41bae8:	xor    al,0xa9
  41baeb:	or     dl,BYTE PTR ds:[ecx-0x379cfa62]
  41baf2:	(bad)  
  41baf3:	repz rcr DWORD PTR [eax-0x8],0x9d
  41baf8:	data16 repz jne 0x41babf
  41bafc:	dec    ebx
  41bafd:	push   ss
  41bafe:	xor    BYTE PTR [eax-0x29ddc799],ah
  41bb04:	or     bl,BYTE PTR [edi+0xb5d4c6e]
  41bb0a:	and    eax,0x49f63454
  41bb0f:	pop    es
  41bb10:	outs   dx,DWORD PTR ds:[esi]
  41bb11:	adc    BYTE PTR [ecx+ecx*4-0x67e17302],0xec
  41bb19:	data16 (bad) 
  41bb1b:	(bad)  
  41bb1d:	hlt    
  41bb1e:	jl     0x41babf
  41bb20:	sub    bh,BYTE PTR [edx+0x3ca31f9e]
  41bb26:	push   eax
  41bb27:	mov    al,0x9d
  41bb29:	sub    dl,BYTE PTR [edi-0x7e]
  41bb2c:	fmul   QWORD PTR [ecx]
  41bb2e:	ret    
  41bb2f:	dec    ecx
  41bb30:	es cwde 
  41bb32:	pop    es
  41bb33:	popa   
  41bb34:	(bad)
  41bb39:	mov    bh,BYTE PTR [edi]
  41bb3b:	and    al,dh
  41bb3d:	cmp    eax,0x3a0e8392
  41bb42:	imul   ecx,DWORD PTR [edx+ebx*1],0xffffff8c
  41bb46:	mov    ebx,0xe0611bd
  41bb4b:	adc    dh,al
  41bb4d:	(bad)  
  41bb4e:	dec    esp
  41bb4f:	add    ch,BYTE PTR [ecx-0xb7e109f]
  41bb55:	dec    edx
  41bb56:	ins    DWORD PTR es:[edi],dx
  41bb57:	push   ebx
  41bb58:	sbb    BYTE PTR [ecx-0x49],ah
  41bb5b:	jbe    0x41bb1e
  41bb5d:	aaa    
  41bb5e:	lods   al,BYTE PTR ds:[esi]
  41bb5f:	jbe    0x41bb6c
  41bb61:	add    ch,bh
  41bb63:	jbe    0x41bbd2
  41bb65:	lar    edi,sp
  41bb68:	and    ch,BYTE PTR [esi]
  41bb6a:	pushf  
  41bb6b:	pop    ecx
  41bb6c:	xor    eax,0xa86bca45
  41bb71:	ins    BYTE PTR es:[edi],dx
  41bb72:	retf   
  41bb73:	push   ds
  41bb74:	popa   
  41bb75:	(bad)  
  41bb76:	cmp    ecx,edx
  41bb78:	inc    esp
  41bb79:	add    edi,DWORD PTR [edx]
  41bb7b:	xor    esi,DWORD PTR [ebx-0x65]
  41bb7e:	or     BYTE PTR [eax+0x61],cl
  41bb81:	pop    ebx
  41bb82:	(bad)
  41bb86:	push   eax
  41bb87:	push   0x9cf8ab76
  41bb8c:	dec    esp
  41bb8d:	dec    esi
  41bb8e:	jnp    0x41bbcf
  41bb90:	pop    ecx
  41bb91:	xchg   ebp,eax
  41bb92:	mov    al,0x83
  41bb94:	pop    ds
  41bb95:	or     DWORD PTR [esi],ecx
  41bb97:	jle    0x41bbeb
  41bb99:	mov    ds:0xae444a6c,al
  41bb9e:	js     0x41bbda
  41bba0:	mov    ebp,0xbc56d8b1
  41bba5:	mov    bl,0xa1
  41bba7:	clc    
  41bba8:	mov    al,ds:0x57441a7b
  41bbad:	inc    eax
  41bbae:	sub    cl,BYTE PTR [eax]
  41bbb0:	dec    edi
  41bbb1:	(bad)  
  41bbb2:	mov    dh,cl
  41bbb4:	jge    0x41bc1b
  41bbb6:	inc    ebp
  41bbb7:	cwde   
  41bbb8:	aaa    
  41bbb9:	ds ds clc 
  41bbbc:	cmp    eax,0x5382c68f
  41bbc1:	sbb    ebx,DWORD PTR [edi+0x2a6e124]
  41bbc7:	mov    cl,0x8e
  41bbc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbca:	rcr    BYTE PTR [edx+0x1d546c53],0x2b
  41bbd1:	sub    DWORD PTR [esi],ebx
  41bbd3:	call   0x3f5c6cf0
  41bbd8:	js     0x41bb8f
  41bbda:	inc    ebp
  41bbdb:	ror    DWORD PTR [edx+0x5a],0x6f
  41bbdf:	lahf   
  41bbe0:	or     DWORD PTR [ecx],esp
  41bbe2:	and    eax,0xacbbff72
  41bbe7:	(bad)  
  41bbe8:	and    al,0x84
  41bbea:	in     eax,0x4d
  41bbec:	(bad)  
  41bbed:	push   ds
  41bbee:	test   eax,0x4b7f9d91
  41bbf3:	call   0xdd844fc8
  41bbf8:	pop    edx
  41bbf9:	sbb    ebx,0xb7012707
  41bbff:	pop    ss
  41bc00:	jbe    0x41bbe5
  41bc02:	mov    al,ds:0x97ea3cfd
  41bc07:	sub    eax,0xcc10cce4
  41bc0c:	pop    edx
  41bc0d:	out    dx,eax
  41bc0e:	aad    0x8c
  41bc10:	leave  
  41bc11:	mov    bh,0x5e
  41bc13:	or     DWORD PTR [ebx-0x2ed8d30f],esi
  41bc19:	cmp    BYTE PTR [ecx-0x6a],dh
  41bc1c:	mov    ?,WORD PTR [edx]
  41bc1e:	add    al,0x5
  41bc20:	pop    edx
  41bc21:	push   ebx
  41bc22:	test   al,0x45
  41bc24:	xchg   DWORD PTR [eax-0x4c],eax
  41bc27:	fdivr  QWORD PTR [edx-0xf]
  41bc2a:	adc    DWORD PTR [ecx],0x40
  41bc2d:	loopne 0x41bc2e
  41bc2f:	xor    eax,0xf7eb2ced
  41bc34:	ret    0x81b6
  41bc37:	xor    esi,DWORD PTR [edx-0x54]
  41bc3a:	adc    BYTE PTR [ebx-0x12],bl
  41bc3d:	sub    edx,DWORD PTR [esi]
  41bc3f:	jno    0x41bc1e
  41bc41:	mov    ecx,DWORD PTR [esi-0x4ed5cdcd]
  41bc47:	and    DWORD PTR [ecx+0x21],0x51
  41bc4b:	out    0xdd,al
  41bc4d:	pop    ds
  41bc4e:	in     al,dx
  41bc4f:	lahf   
  41bc50:	data16 ja 0x41bc30
  41bc53:	test   al,0xc4
  41bc55:	fs es call 0x75311550
  41bc5c:	xchg   ebx,eax
  41bc5d:	mov    ebx,0x14d35274
  41bc62:	inc    ecx
  41bc63:	dec    edi
  41bc64:	push   0x486a7117
  41bc69:	in     eax,0xf0
  41bc6b:	aad    0xf2
  41bc6d:	sbb    ecx,DWORD PTR [ecx-0x38b0dd7d]
  41bc73:	scas   eax,DWORD PTR es:[edi]
  41bc74:	xchg   esi,eax
  41bc75:	cmc    
  41bc76:	pusha  
  41bc77:	cmp    BYTE PTR [eax+0x3d],bh
  41bc7a:	mov    dl,0x71
  41bc7c:	and    eax,0xb7c99fe5
  41bc81:	lahf   
  41bc82:	dec    eax
  41bc83:	push   ecx
  41bc84:	adc    cl,BYTE PTR [edx-0xc]
  41bc87:	pusha  
  41bc88:	sub    al,0x8a
  41bc8a:	out    dx,al
  41bc8b:	pop    eax
  41bc8c:	sbb    BYTE PTR fs:[eax-0x22343f1c],dl
  41bc93:	ret    
  41bc94:	jno    0x41bcf3
  41bc96:	jae    0x41bc41
  41bc98:	mov    edx,0x7fd731cb
  41bc9d:	dec    ebx
  41bc9e:	add    cl,BYTE PTR [eax]
  41bca0:	pop    es
  41bca1:	outs   dx,DWORD PTR ds:[esi]
  41bca2:	dec    esi
  41bca3:	les    edx,FWORD PTR [ecx]
  41bca5:	mov    dh,0x26
  41bca7:	ss lock jae 0x41bc85
  41bcab:	jnp    0x41bd08
  41bcad:	push   esi
  41bcae:	repz scas al,BYTE PTR es:[edi]
  41bcb0:	out    dx,eax
  41bcb1:	push   ebp
  41bcb2:	retf   
  41bcb3:	adc    bh,dh
  41bcb5:	pop    eax
  41bcb6:	and    eax,0x81420656
  41bcbb:	pushf  
  41bcbc:	sbb    DWORD PTR [ebx-0x74],ebx
  41bcbf:	push   ebx
  41bcc0:	ins    DWORD PTR es:[edi],dx
  41bcc1:	fwait
  41bcc2:	ror    DWORD PTR [ecx-0x788436d0],0x8e
  41bcc9:	das    
  41bcca:	dec    ebp
  41bccb:	pop    esi
  41bccc:	ins    BYTE PTR es:[edi],dx
  41bccd:	pop    ebx
  41bcce:	ror    DWORD PTR [ebp+esi*8-0x70],1
  41bcd2:	or     eax,0xe1d6fe3a
  41bcd7:	movntps XMMWORD PTR [edi+0x22c735c1],xmm3
  41bcde:	push   esi
  41bcdf:	adc    dh,0xcc
  41bce2:	jae    0x41bc6a
  41bce4:	mov    eax,ds:0x9703e957
  41bce9:	repnz add DWORD PTR [ebx],esi
  41bcec:	pop    esp
  41bced:	loop   0x41bcbc
  41bcef:	adc    ah,BYTE PTR [edx+0x57603ae8]
  41bcf5:	leave  
  41bcf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcf7:	std    
  41bcf8:	mov    ch,0xc3
  41bcfa:	(bad)  
  41bcfb:	sub    al,0x24
  41bcfd:	scas   al,BYTE PTR es:[edi]
  41bcfe:	sar    DWORD PTR [edx],0x46
  41bd01:	ds pop ss
  41bd03:	mov    eax,ds:0x48ae2294
  41bd08:	(bad)  
  41bd09:	pop    edi
  41bd0a:	imul   ebp,DWORD PTR [ebp-0x29],0x74
  41bd0e:	int    0xc2
  41bd10:	and    DWORD PTR [eax-0x31],ecx
  41bd13:	jecxz  0x41bcff
  41bd15:	dec    esp
  41bd16:	stos   DWORD PTR es:[edi],eax
  41bd17:	cmp    esi,0x8a08ed47
  41bd1d:	mov    cs,WORD PTR [eax+0x20e92f2]
  41bd23:	jl     0x41bd8d
  41bd25:	dec    esi
  41bd26:	xchg   esi,eax
  41bd27:	ret    
  41bd28:	inc    edx
  41bd29:	lock in eax,dx
  41bd2b:	xchg   DWORD PTR [edx],esp
  41bd2d:	lock cmp DWORD PTR ds:0xd4f46707,ebp
  41bd34:	and    al,0x2c
  41bd36:	cmc    
  41bd37:	lds    ebx,FWORD PTR [eax+0x96bb7e6]
  41bd3d:	std    
  41bd3e:	xchg   esi,eax
  41bd3f:	das    
  41bd40:	jno    0x41bdc1
  41bd42:	mov    al,0xc8
  41bd44:	mov    eax,0xeebc10fc
  41bd49:	stc    
  41bd4a:	loope  0x41bdc3
  41bd4c:	aaa    
  41bd4d:	dec    eax
  41bd4e:	mov    dh,0xa9
  41bd50:	xchg   esi,eax
  41bd51:	outs   dx,BYTE PTR ds:[esi]
  41bd52:	popa   
  41bd53:	jno    0x41bd42
  41bd55:	inc    eax
  41bd56:	adc    ebx,edi
  41bd58:	cld    
  41bd59:	fstp   TBYTE PTR [edi-0x17]
  41bd5c:	std    
  41bd5d:	iret   
  41bd5e:	jns    0xefd58620
  41bd64:	sub    dh,BYTE PTR [edx-0x5f]
  41bd67:	add    BYTE PTR [ecx-0x27],0x90
  41bd6b:	ja     0x41bdd7
  41bd6d:	fs nop
  41bd6f:	or     eax,0x8d7027a9
  41bd74:	jbe    0x41bd6c
  41bd76:	shl    dh,0x3e
  41bd79:	(bad)  
  41bd7a:	pusha  
  41bd7b:	daa    
  41bd7c:	fistp  QWORD PTR [edi+0x73]
  41bd7f:	iret   
  41bd80:	sbb    eax,0x2567857f
  41bd85:	shl    BYTE PTR [ebx+0xb],0xb5
  41bd89:	not    BYTE PTR [esi-0x5ff229e1]
  41bd8f:	xchg   DWORD PTR [edi-0x1e5604c1],esi
  41bd95:	jg     0x41bd69
  41bd97:	xor    al,0x55
  41bd99:	or     eax,0x7188b4f8
  41bd9e:	pop    es
  41bd9f:	push   cs
  41bda0:	sub    al,0x6f
  41bda2:	or     ah,dl
  41bda4:	xchg   ebx,eax
  41bda5:	or     al,0x96
  41bda7:	(bad)  [ebx+0x6de8b925]
  41bdad:	inc    edi
  41bdae:	xor    cl,BYTE PTR [eax+ecx*8-0x3d4fccf3]
  41bdb5:	ror    DWORD PTR [ebp+ebp*8+0xe],1
  41bdb9:	fstp   TBYTE PTR [eax+0x28]
  41bdbc:	cwde   
  41bdbd:	popf   
  41bdbe:	lahf   
  41bdbf:	or     al,0xa6
  41bdc1:	sbb    DWORD PTR [ecx-0x60],edx
  41bdc4:	ds sub dl,bh
  41bdc7:	add    ah,BYTE PTR [ebp+0x43a27522]
  41bdcd:	pop    ecx
  41bdce:	xchg   DWORD PTR [ecx],ebx
  41bdd0:	mov    ebp,0x4c6e0fd4
  41bdd5:	aas    
  41bdd6:	(bad)  
  41bdd7:	pop    esi
  41bdd8:	pop    esp
  41bdd9:	nop
  41bdda:	cs inc edi
  41bddc:	sub    ebp,DWORD PTR [ecx+0x1f]
  41bddf:	add    ebx,DWORD PTR [esi+0x75]
  41bde2:	cmc    
  41bde3:	push   cs
  41bde4:	sub    edx,DWORD PTR [esi+0x73114263]
  41bdea:	and    eax,0xcd4f3796
  41bdef:	in     eax,dx
  41bdf0:	test   BYTE PTR [ecx+eax*1-0x1c],bh
  41bdf4:	xchg   ebx,eax
  41bdf5:	inc    esp
  41bdf6:	xchg   esi,eax
  41bdf7:	and    bh,BYTE PTR ds:0xb7f9b11c
  41bdfd:	xchg   ecx,eax
  41bdfe:	dec    ebx
  41bdff:	xor    DWORD PTR [edx-0x59e14ca5],0xe1ed4dde
  41be09:	je     0x41bd9c
  41be0b:	sub    DWORD PTR [eax-0x56],edi
  41be0e:	mov    bl,0x33
  41be10:	mov    eax,ds:0xa9158fac
  41be15:	push   ds
  41be16:	(bad)  [edx+ebx*2-0x61]
  41be1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be1b:	and    BYTE PTR [edi+edi*1-0x5],0x4b
  41be20:	mov    al,ds:0x4e7d3730
  41be25:	cmp    eax,0xa00d8a85
  41be2a:	scas   eax,DWORD PTR es:[edi]
  41be2b:	push   cs
  41be2c:	push   esp
  41be2d:	(bad)  
  41be2e:	cmp    ecx,DWORD PTR [ebx+0x4162c33e]
  41be34:	ds jl  0x41bdc3
  41be37:	xor    esi,DWORD PTR [edi+0x6469c20c]
  41be3d:	in     eax,dx
  41be3e:	and    al,0xcc
  41be40:	data16 js 0x41be4f
  41be43:	fs mov cl,bl
  41be46:	leave  
  41be47:	shl    DWORD PTR [edx-0x35],cl
  41be4a:	test   BYTE PTR [ebp+0x4a],ah
  41be4d:	adc    BYTE PTR [ebp-0x11],bh
  41be50:	adc    DWORD PTR [esp+eax*4-0x34],ebx
  41be54:	div    DWORD PTR [esp+ebp*8-0x7f]
  41be58:	cmp    BYTE PTR [eax+0x6fa41ac9],dh
  41be5e:	(bad)  
  41be5f:	dec    ebp
  41be60:	retf   0xbc92
  41be63:	pop    ebp
  41be64:	cmp    edx,DWORD PTR [edi-0x525b72fd]
  41be6a:	sbb    ch,dl
  41be6c:	mov    ecx,0x2e6c002e
  41be71:	neg    BYTE PTR [eax+0x3a]
  41be74:	jb     0x41be60
  41be76:	lods   al,BYTE PTR ds:[esi]
  41be77:	xor    BYTE PTR [edi-0x7cfefbf6],bh
  41be7d:	mov    BYTE PTR [edx+eiz*4+0x21],0xa5
  41be82:	in     al,0xd0
  41be84:	xor    eax,0x14268656
  41be89:	cmp    DWORD PTR [ebp+ebx*8+0x4e],0x4a2a24c6
  41be91:	and    BYTE PTR [edi+0x41],bl
  41be94:	fdiv   QWORD PTR [esi]
  41be96:	cwde   
  41be97:	scas   al,BYTE PTR es:[edi]
  41be98:	jge    0x41be2c
  41be9a:	mov    al,0xfa
  41be9c:	inc    ebx
  41be9d:	jbe    0x41bebe
  41be9f:	lds    ebx,FWORD PTR [esi+0x62]
  41bea2:	xchg   ecx,eax
  41bea3:	jmp    0xcda3682c
  41bea8:	inc    edx
  41bea9:	fisttp WORD PTR [edi]
  41beab:	pop    esi
  41beac:	retf   0x1e34
  41beaf:	shl    DWORD PTR [esp+edi*2+0x22],1
  41beb3:	xchg   edx,esp
  41beb5:	cdq    
  41beb6:	inc    esi
  41beb7:	xor    al,0xc0
  41beb9:	push   cs
  41beba:	jno    0x41bf16
  41bebc:	cmc    
  41bebd:	repnz shr BYTE PTR [esi+0x72],cl
  41bec1:	ja     0x41be77
  41bec3:	bound  esp,QWORD PTR [ebx+0x3b]
  41bec6:	push   edi
  41bec7:	fadd   QWORD PTR [ebx-0x7902283f]
  41becd:	add    al,0x2b
  41becf:	xlat   BYTE PTR ds:[ebx]
  41bed0:	rol    DWORD PTR [esi-0x6f],0x12
  41bed4:	mov    bl,0x1
  41bed6:	cmp    bl,BYTE PTR [esi-0x7b]
  41bed9:	(bad)  
  41beda:	ins    BYTE PTR es:[edi],dx
  41bedb:	leave  
  41bedc:	mov    al,0x1
  41bede:	jle    0x41be7d
  41bee0:	ins    BYTE PTR es:[edi],dx
  41bee1:	adc    eax,DWORD PTR [ebp+0x28]
  41bee4:	sub    DWORD PTR [ebp-0x39],edx
  41bee7:	fadd   DWORD PTR [esi]
  41bee9:	add    BYTE PTR [ebx],0xf5
  41beec:	mov    dh,bh
  41beee:	cmc    
  41beef:	fcomp  DWORD PTR [esi]
  41bef1:	sub    eax,DWORD PTR [ebp-0x7c4d4f93]
  41bef7:	and    al,0xb9
  41bef9:	cmp    BYTE PTR [edi],dh
  41befb:	adc    BYTE PTR [ebp-0x1357ad6a],bh
  41bf01:	push   edx
  41bf02:	test   al,0x7d
  41bf04:	es dec ebp
  41bf06:	mov    al,ds:0xe75200a4
  41bf0b:	jnp    0x41beda
  41bf0d:	xor    edx,DWORD PTR [esi+0x7]
  41bf10:	sbb    ebx,esi
  41bf12:	push   ds
  41bf13:	push   ss
  41bf14:	inc    edi
  41bf15:	mov    ds:0x2614d936,al
  41bf1a:	fisubr WORD PTR [edi]
  41bf1c:	rcl    BYTE PTR [ebx+0x7e],0x2a
  41bf20:	push   cs
  41bf21:	sub    dh,dl
  41bf23:	pop    esp
  41bf24:	xor    BYTE PTR [edx],dh
  41bf26:	imul   esi,edi,0x2a6a0c43
  41bf2c:	fdiv   DWORD PTR [ebp+0xa54eb07]
  41bf32:	mov    ds:0xa02f85f5,al
  41bf37:	ror    BYTE PTR [edx-0x6b],1
  41bf3a:	cmp    edi,edx
  41bf3c:	iret   
  41bf3d:	(bad)  
  41bf3f:	xchg   ebp,eax
  41bf40:	jo     0x41bf38
  41bf42:	fsubr  DWORD PTR [eax]
  41bf44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf45:	and    eax,0x587946ff
  41bf4a:	aam    0xf7
  41bf4c:	jecxz  0x41bf8f
  41bf4e:	dec    eax
  41bf4f:	mov    esp,0xad42e7df
  41bf54:	cld    
  41bf55:	xchg   edi,eax
  41bf56:	lock add ch,BYTE PTR [edi-0x15]
  41bf5a:	lahf   
  41bf5b:	mov    ch,0x90
  41bf5d:	cwde   
  41bf5e:	xor    eax,0xa8fb33e6
  41bf63:	push   esi
  41bf64:	or     edi,esi
  41bf66:	ja     0x41bf69
  41bf68:	mov    ecx,0xe4ad0f48
  41bf6d:	das    
  41bf6e:	and    BYTE PTR [esi-0x1b],0xa0
  41bf72:	mov    ds:0x296063bd,eax
  41bf77:	jne    0x41bf94
  41bf79:	push   esp
  41bf7a:	sbb    BYTE PTR [ebx+eiz*4+0x39],0xcb
  41bf7f:	inc    ebx
  41bf80:	mov    ds:0xebe557e,eax
  41bf85:	or     dl,BYTE PTR [edi-0xc]
  41bf88:	in     al,dx
  41bf89:	push   cs
  41bf8a:	sbb    eax,0x49e7ba
  41bf8f:	stos   BYTE PTR es:[edi],al
  41bf90:	call   0x5c56811
  41bf95:	dec    ebx
  41bf96:	push   esp
  41bf97:	lahf   
  41bf98:	rcl    DWORD PTR [ecx+0x3d9a94a8],1
  41bf9e:	xchg   dl,dl
  41bfa0:	adc    eax,0xda671236
  41bfa5:	pop    eax
  41bfa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfa7:	lock outs dx,BYTE PTR ds:[esi]
  41bfa9:	fnstsw WORD PTR [edi-0x4bf187ba]
  41bfaf:	jmp    0x41bf6a
  41bfb1:	mov    dl,0x4e
  41bfb3:	sar    BYTE PTR [eax+edx*1],0xa0
  41bfb7:	xor    ah,BYTE PTR [edx]
  41bfb9:	push   ebp
  41bfba:	loopne 0x41bfc1
  41bfbc:	xor    al,0x34
  41bfbe:	xchg   ecx,eax
  41bfbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfc0:	mov    esp,0xc3305024
  41bfc5:	in     eax,0xfc
  41bfc7:	xchg   esp,eax
  41bfc8:	sbb    edx,DWORD PTR [ebx]
  41bfca:	in     eax,dx
  41bfcb:	cs mov ecx,0xe4eeb0ac
  41bfd1:	mov    ds:0xc143c365,eax
  41bfd6:	loopne 0x41bfd7
  41bfd8:	adc    bh,BYTE PTR [edi]
  41bfda:	pusha  
  41bfdb:	push   0x3c
  41bfdd:	sub    al,0x33
  41bfdf:	cmc    
  41bfe0:	jb     0x41c014
  41bfe2:	jb     0x41c029
  41bfe4:	test   BYTE PTR [esi-0x50b47ef5],ah
  41bfea:	not    eax
  41bfec:	xor    eax,DWORD PTR [edx-0x72a5338e]
  41bff2:	jmp    0x8f06:0x2060231e
  41bff9:	pop    esi
  41bffa:	pop    ecx
  41bffb:	stc    
  41bffc:	dec    esi
  41bffd:	in     al,0xae
  41bfff:	sub    bh,BYTE PTR [edi-0x51ec3d1d]
  41c005:	push   edi
  41c006:	xor    BYTE PTR [ebp-0x1f],al
  41c009:	dec    ecx
  41c00a:	into   
  41c00b:	mov    al,ds:0x3cf660d6
  41c010:	fist   WORD PTR [ecx]
  41c012:	jge    0x41c035
  41c014:	int3   
  41c015:	jle    0x41c067
  41c017:	fidiv  DWORD PTR [ecx-0x2323592b]
  41c01d:	or     eax,0xfc19542a
  41c022:	xor    ecx,DWORD PTR [ebx-0x3a]
  41c025:	ret    0x7765
  41c028:	sub    al,0x85
  41c02a:	pushf  
  41c02b:	jns    0x41bfb2
  41c02d:	retf   
  41c02e:	mov    eax,ds:0x54b11b53
  41c033:	push   esi
  41c034:	imul   eax,DWORD PTR ds:0x6370650e,0x38
  41c03b:	iret   
  41c03c:	js     0x41c09a
  41c03e:	fisub  DWORD PTR [ecx+0x5c605159]
  41c044:	iret   
  41c045:	push   DWORD PTR [ecx-0x4e]
  41c048:	dec    esp
  41c049:	sub    eax,ebx
  41c04b:	into   
  41c04c:	mov    eax,ds:0x2439f867
  41c051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c052:	xchg   edi,edx
  41c054:	ret    0xdf42
  41c057:	dec    esp
  41c058:	xchg   esi,eax
  41c059:	mov    ch,0x47
  41c05b:	or     dh,BYTE PTR [ebx+eiz*1+0x4]
  41c05f:	lods   eax,DWORD PTR ds:[esi]
  41c060:	std    
  41c061:	sti    
  41c062:	sbb    ebx,DWORD PTR [ecx-0x6e]
  41c065:	sub    dl,dl
  41c067:	cmp    dl,BYTE PTR [esi+0x604605be]
  41c06d:	loope  0x41c08e
  41c06f:	js     0x41c0c7
  41c071:	sub    cl,cl
  41c073:	dec    eax
  41c074:	pop    edx
  41c075:	xchg   ebx,eax
  41c076:	mov    dl,0xac
  41c078:	scas   eax,DWORD PTR es:[edi]
  41c079:	clc    
  41c07a:	push   es
  41c07b:	ins    BYTE PTR es:[edi],dx
  41c07c:	pop    edx
  41c07d:	sub    ecx,ebp
  41c07f:	cwde   
  41c080:	pusha  
  41c081:	int3   
  41c082:	sar    DWORD PTR [ebp+0x7c],cl
  41c085:	cmp    dh,BYTE PTR [edi+0x51]
  41c088:	sbb    dh,BYTE PTR [ebx+0x62]
  41c08b:	das    
  41c08c:	pop    ebx
  41c08d:	jmp    0xf26d:0x7d027509
  41c094:	test   DWORD PTR [edx],edi
  41c096:	mov    bl,0x7
  41c098:	xchg   edi,eax
  41c099:	adc    edx,DWORD PTR ds:0xa72d1b53
  41c09f:	fdivp  st(5),st
  41c0a1:	cmp    DWORD PTR [edi],edx
  41c0a3:	xor    cl,BYTE PTR [ecx+0x4b0dc30b]
  41c0a9:	pop    esp
  41c0aa:	mov    edi,0x1cf78f75
  41c0af:	bound  ebx,QWORD PTR [esi+0x4a80de55]
  41c0b5:	mov    dl,0xfe
  41c0b7:	out    0x5d,eax
  41c0b9:	jl     0x41c0b4
  41c0bb:	adc    edx,DWORD PTR ds:0xeaf70368
  41c0c1:	pop    es
  41c0c2:	stos   DWORD PTR es:[edi],eax
  41c0c3:	pushf  
  41c0c4:	jo     0x41c09b
  41c0c6:	sub    eax,0x6475529c
  41c0cb:	jl     0x41c0de
  41c0cd:	sub    al,0x87
  41c0cf:	mov    ah,0xd0
  41c0d1:	ds into 
  41c0d3:	and    dl,dh
  41c0d5:	icebp  
  41c0d6:	xchg   DWORD PTR [ebp+0x4a],edx
  41c0d9:	inc    edx
  41c0da:	sub    al,0xb6
  41c0dc:	(bad)  
  41c0dd:	jecxz  0x41c0c4
  41c0df:	shr    BYTE PTR [edx],0xce
  41c0e2:	jmp    0x41c077
  41c0e4:	or     bl,dh
  41c0e6:	cmp    edx,DWORD PTR [ecx+0x68]
  41c0e9:	pusha  
  41c0ea:	ficomp WORD PTR [ebx+0x7589a358]
  41c0f0:	fidivr WORD PTR [esi-0x79d4d294]
  41c0f6:	xchg   eax,ebx
  41c0f8:	outs   dx,BYTE PTR ds:[esi]
  41c0f9:	inc    ecx
  41c0fa:	daa    
  41c0fb:	cwde   
  41c0fc:	shl    BYTE PTR [ebx],0xcf
  41c0ff:	(bad)  
  41c100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c101:	in     al,dx
  41c102:	aas    
  41c103:	push   ds
  41c104:	jle    0x41c0a0
  41c106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c107:	and    DWORD PTR [ecx+0x52cbfe8e],0xd1515f1e
  41c111:	loopne 0x41c126
  41c113:	aas    
  41c114:	outs   dx,DWORD PTR ds:[esi]
  41c115:	xchg   esp,eax
  41c116:	(bad)  
  41c117:	loop   0x41c164
  41c119:	imul   edi,DWORD PTR [ebp+0xa],0x5b
  41c11d:	mov    ecx,0xfe172657
  41c122:	adc    eax,0x6ae781ed
  41c127:	pop    ds
  41c128:	push   eax
  41c129:	cmp    BYTE PTR [ebx+0x7a],0x6d
  41c12d:	xchg   edi,eax
  41c12e:	(bad)  
  41c12f:	imul   DWORD PTR [ebp-0x543a3b7e]
  41c135:	call   0xf896e70e
  41c13a:	mov    ds:0x77c05d00,al
  41c13f:	mul    DWORD PTR [edi+0x64b68e68]
  41c145:	inc    edi
  41c146:	ds fwait
  41c148:	dec    ebx
  41c149:	stos   DWORD PTR es:[edi],eax
  41c14a:	out    dx,al
  41c14b:	sbb    DWORD PTR [edx],0x9b51cdd7
  41c151:	sub    eax,DWORD PTR [eax+0x1b]
  41c154:	push   ss
  41c155:	ret    0x3bc4
  41c158:	push   0x3c34c5d3
  41c15d:	push   ss
  41c15e:	and    al,0x3f
  41c160:	out    0xfe,al
  41c162:	add    eax,0xca6da039
  41c167:	jne    0x41c14c
  41c169:	and    al,0x7
  41c16b:	ins    BYTE PTR es:[edi],dx
  41c16c:	data16 icebp 
  41c16e:	(bad)  
  41c16f:	or     al,0x67
  41c171:	or     al,BYTE PTR [esi+ebx*8-0x34e07bd4]
  41c178:	and    eax,0x3a351549
  41c17d:	cwde   
  41c17e:	sbb    DWORD PTR ds:0x72bf8ab8,esp
  41c184:	mov    ah,BYTE PTR [edx+0x21]
  41c187:	scas   eax,DWORD PTR es:[edi]
  41c188:	inc    esp
  41c189:	fcom   DWORD PTR [eax]
  41c18b:	jno    0x41c1af
  41c18d:	cs mov bh,0xa2
  41c190:	sbb    bh,BYTE PTR [esi-0x70d8fc00]
  41c196:	(bad)  [eax]
  41c198:	sbb    al,0x45
  41c19a:	lds    esp,FWORD PTR [ecx]
  41c19c:	imul   ebx,DWORD PTR [ebx],0x1a61dcd5
  41c1a2:	push   0x945f1590
  41c1a7:	es pop esi
  41c1a9:	arpl   WORD PTR [ecx-0x23e9d2b4],sp
  41c1af:	shl    DWORD PTR [edi+0x3a],1
  41c1b2:	aaa    
  41c1b3:	pop    es
  41c1b4:	mov    al,0xfc
  41c1b6:	sub    edx,DWORD PTR [esi+0x4e9893c8]
  41c1bc:	pop    ebp
  41c1bd:	ss push 0x71
  41c1c0:	mov    ds:0x5b27dca6,eax
  41c1c5:	rol    al,cl
  41c1c7:	call   0xabe7:0xbc44de18
  41c1ce:	daa    
  41c1cf:	icebp  
  41c1d0:	fsubr  QWORD PTR [edx-0x31]
  41c1d3:	lahf   
  41c1d4:	lods   eax,DWORD PTR ds:[esi]
  41c1d5:	push   0xffffffdb
  41c1d7:	cmp    BYTE PTR cs:[ebx],dl
  41c1da:	xchg   esp,eax
  41c1db:	sub    bl,BYTE PTR [esi-0x7df29331]
  41c1e1:	repz or BYTE PTR [ebx-0x17dc4c60],ch
  41c1e8:	or     al,BYTE PTR ds:0xe56f5643
  41c1ee:	call   0x1c2b:0x253c30a1
  41c1f5:	pop    ss
  41c1f6:	nop
  41c1f7:	dec    eax
  41c1f8:	adc    eax,0xc9beff0c
  41c1fd:	push   0xb62618b1
  41c202:	mov    al,ds:0x8c8d389a
  41c207:	mov    dh,0x6d
  41c209:	cmp    al,0xc2
  41c20b:	mov    DWORD PTR cs:[ecx],edx
  41c20e:	mov    esp,0x21d77a5c
  41c213:	bound  ebp,QWORD PTR ds:0x5d4bc207
  41c219:	sbb    DWORD PTR [edi-0x2a3bcc6f],0xffffffc3
  41c220:	adc    eax,0xc53f3605
  41c225:	add    al,0x2e
  41c227:	push   ecx
  41c228:	mov    ch,0xaf
  41c22a:	lods   eax,DWORD PTR ds:[esi]
  41c22b:	jg     0x41c238
  41c22d:	mov    dl,0xa7
  41c22f:	cmc    
  41c230:	jmp    0x41c216
  41c232:	sub    al,0xfc
  41c234:	xor    DWORD PTR [esi+edi*4],0x7be284ad
  41c23b:	xchg   ebx,eax
  41c23c:	fwait
  41c23d:	push   cs
  41c23e:	adc    DWORD PTR [ecx+0xf],eax
  41c241:	std    
  41c242:	pop    esp
  41c243:	add    cl,BYTE PTR [edx+0x108b8ad2]
  41c249:	inc    ebx
  41c24a:	dec    edi
  41c24b:	mov    ecx,0x7bc4ceef
  41c250:	fs jbe 0x41c1fa
  41c253:	xchg   edx,eax
  41c254:	cmp    DWORD PTR [ecx+0x6cf0c8ee],esp
  41c25a:	jp     0x41c220
  41c25c:	push   eax
  41c25d:	push   ss
  41c25e:	xchg   BYTE PTR [ebx-0x17],dl
  41c261:	nop
  41c262:	in     al,0x11
  41c264:	das    
  41c265:	add    DWORD PTR ss:[eax-0x2],ebp
  41c269:	(bad)  
  41c26a:	lock (bad) 
  41c26c:	xchg   edx,eax
  41c26d:	out    0xe3,al
  41c26f:	hlt    
  41c270:	sub    al,0xe4
  41c272:	mov    cl,BYTE PTR ds:0xea13c6e7
  41c278:	sub    edi,DWORD PTR [edi+0x10a86c10]
  41c27e:	pop    ds
  41c27f:	clc    
  41c280:	jmp    0xae32:0x92f14102
  41c287:	push   ebx
  41c288:	in     eax,0xa1
  41c28a:	push   ecx
  41c28b:	cmp    DWORD PTR [eax],0xe75ccb33
  41c291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c292:	pop    es
  41c293:	mov    bh,0x2a
  41c295:	jno    0x41c276
  41c297:	out    dx,al
  41c298:	jl     0x41c21d
  41c29a:	daa    
  41c29b:	(bad)  
  41c29c:	adc    edx,edi
  41c29e:	sub    DWORD PTR [ebx],eax
  41c2a0:	xchg   edx,eax
  41c2a1:	xchg   ebp,eax
  41c2a2:	jbe    0x41c29e
  41c2a4:	mov    ds:0x69ee972d,al
  41c2a9:	sub    ebp,DWORD PTR [edx+0x33]
  41c2ac:	jb     0x41c323
  41c2ae:	hlt    
  41c2af:	mov    WORD PTR [esi],?
  41c2b1:	fs mov cl,0xd1
  41c2b4:	xchg   esi,eax
  41c2b5:	aas    
  41c2b6:	mov    bl,0x58
  41c2b8:	ds inc edi
  41c2ba:	push   ebx
  41c2bb:	outs   dx,BYTE PTR ds:[esi]
  41c2bc:	push   ebx
  41c2bd:	fidivr DWORD PTR ds:0xc03ce9d2
  41c2c3:	shr    DWORD PTR [ebp+0x85a201d],0x23
  41c2ca:	sbb    BYTE PTR ds:0x400f385,al
  41c2d0:	sub    dh,ch
  41c2d2:	(bad)  
  41c2d3:	mov    esi,0x3549de37
  41c2d8:	sbb    DWORD PTR [esi+0x58335947],edx
  41c2de:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41c2e0:	push   ebx
  41c2e1:	das    
  41c2e2:	xchg   edx,eax
  41c2e3:	mov    DWORD PTR [ecx+eax*1+0x23f980a6],ebx
  41c2ea:	ins    DWORD PTR es:[edi],dx
  41c2eb:	call   0x8b1faaa3
  41c2f0:	pop    ds
  41c2f1:	inc    ebx
  41c2f2:	lahf   
  41c2f3:	dec    edi
  41c2f4:	dec    esi
  41c2f5:	stc    
  41c2f6:	and    bl,dl
  41c2f8:	adc    edx,edi
  41c2fa:	sbb    BYTE PTR [ecx+0x6a],bl
  41c2fd:	and    dh,BYTE PTR [eax-0x2b]
  41c300:	fwait
  41c301:	xlat   BYTE PTR ds:[ebx]
  41c302:	test   BYTE PTR [edx+0x56c9484a],0xef
  41c309:	ja     0x41c380
  41c30b:	aaa    
  41c30c:	das    
  41c30d:	push   edx
  41c30e:	pop    ecx
  41c30f:	out    0x50,al
  41c311:	daa    
  41c312:	mov    edi,0xd1c500de
  41c317:	sub    al,0x8f
  41c319:	inc    esp
  41c31a:	shl    BYTE PTR [eax+0x77],1
  41c31d:	xchg   ebx,eax
  41c31e:	(bad)  
  41c31f:	fcmovbe st,st(6)
  41c321:	rcl    DWORD PTR [ecx],1
  41c323:	pop    esi
  41c324:	adc    esi,DWORD PTR ds:0xe8b32ebe
  41c32a:	clc    
  41c32b:	cmp    DWORD PTR [edi],esp
  41c32d:	test   al,0x9c
  41c32f:	test   DWORD PTR [esi],ebx
  41c331:	lds    edx,FWORD PTR [ebx-0x46b0884b]
  41c337:	mov    ds:0xf230c0b2,eax
  41c33c:	fwait
  41c33d:	jo     0x41c2db
  41c33f:	add    ah,BYTE PTR [esp+ecx*8]
  41c342:	test   ebx,ebx
  41c344:	scas   eax,DWORD PTR es:[edi]
  41c345:	loopne 0x41c3bc
  41c347:	add    DWORD PTR [ecx-0x573ec2dc],0x3e84fa46
  41c351:	xchg   edi,eax
  41c352:	xlat   BYTE PTR ds:[ebx]
  41c353:	dec    edi
  41c354:	fldcw  WORD PTR [ebx]
  41c356:	clc    
  41c357:	popf   
  41c358:	or     al,0xe0
  41c35a:	stos   BYTE PTR es:[edi],al
  41c35b:	dec    eax
  41c35c:	mov    eax,ds:0x26c87209
  41c361:	test   eax,0xd018fee9
  41c366:	rcl    ch,0xd4
  41c369:	shl    BYTE PTR [edi],1
  41c36b:	test   cl,al
  41c36d:	dec    esi
  41c36e:	mov    bh,0x57
  41c370:	cmp    dl,BYTE PTR [esi+0x19]
  41c373:	daa    
  41c374:	retf   0xba87
  41c377:	xchg   esi,edx
  41c379:	fcmovnu st,st(3)
  41c37b:	aas    
  41c37c:	push   es
  41c37d:	fcomip st,st(6)
  41c37f:	cmp    eax,0xbe5b37f6
  41c384:	xchg   edi,eax
  41c385:	add    bh,BYTE PTR [edi+0x345f8bc6]
  41c38b:	xchg   ecx,eax
  41c38c:	lock nop
  41c38e:	enter  0xa555,0xf9
  41c392:	mov    edx,0xb8c22cda
  41c397:	pop    edx
  41c398:	mov    bl,0x2a
  41c39a:	cmp    bh,cl
  41c39c:	(bad)  
  41c39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c39e:	cmp    eax,0x60e32295
  41c3a3:	and    eax,esp
  41c3a5:	sbb    BYTE PTR [ebp+0x19],cl
  41c3a8:	add    DWORD PTR [edi],ebp
  41c3aa:	jmp    0xf2d2:0xee4c3956
  41c3b1:	inc    edx
  41c3b2:	mov    ebp,0x62de4a6d
  41c3b7:	add    DWORD PTR [edi-0x45],0x1b
  41c3bb:	(bad)  
  41c3bc:	fwait
  41c3bd:	push   0xc
  41c3bf:	lods   eax,DWORD PTR ds:[esi]
  41c3c0:	and    BYTE PTR [esi+eax*4],ah
  41c3c3:	xchg   edi,eax
  41c3c4:	ins    DWORD PTR es:[edi],dx
  41c3c5:	sub    esp,DWORD PTR [esi]
  41c3c7:	nop
  41c3c8:	mov    esi,0x70307dd0
  41c3cd:	call   0x828f:0x873d4bc5
  41c3d4:	or     al,0x83
  41c3d6:	cmp    esp,DWORD PTR [esi]
  41c3d8:	mov    ch,0xaa
  41c3da:	aaa    
  41c3db:	data16 xchg BYTE PTR [ebx],bh
  41c3de:	or     al,0xae
  41c3e0:	mul    DWORD PTR [eax+0x22]
  41c3e3:	ret    
  41c3e4:	shl    DWORD PTR [eax-0x26],1
  41c3e7:	loop   0x41c388
  41c3e9:	hlt    
  41c3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3eb:	xlat   BYTE PTR ds:[ebx]
  41c3ec:	push   edi
  41c3ed:	shl    BYTE PTR [esi+0x43754b75],cl
  41c3f3:	aad    0x87
  41c3f5:	jbe    0x41c46b
  41c3f7:	mov    dl,0x2f
  41c3f9:	mov    bl,0xbd
  41c3fb:	sbb    dh,cl
  41c3fd:	add    al,0x58
  41c3ff:	mov    dh,0xf1
  41c401:	adc    BYTE PTR [eax],0x88
  41c404:	fcomp  QWORD PTR [esp+ebp*4]
  41c407:	lods   eax,DWORD PTR ds:[esi]
  41c408:	mov    edi,0x5ccc2661
  41c40d:	rcr    BYTE PTR [edi+edx*4],1
  41c410:	sub    cl,BYTE PTR [ebp-0x4b8ec1a8]
  41c416:	lock loope 0x41c47f
  41c419:	push   esp
  41c41a:	xor    BYTE PTR [esi-0x8],0xe1
  41c41e:	sahf   
  41c41f:	sbb    eax,0xa1b3cb1b
  41c424:	rcr    edi,0xe1
  41c427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c428:	xor    DWORD PTR [eax-0x7c],edx
  41c42b:	ins    BYTE PTR es:[edi],dx
  41c42c:	out    0x75,eax
  41c42e:	mov    ch,cl
  41c430:	jae    0x41c3dd
  41c432:	jo     0x41c3d7
  41c434:	push   0xe4950a7e
  41c439:	add    eax,0x6d8c0a40
  41c43e:	push   ds
  41c43f:	test   al,0x6c
  41c441:	dec    edi
  41c442:	push   0xb8e2d9a3
  41c447:	xchg   esi,eax
  41c448:	test   BYTE PTR [esi-0x1ce60671],0x70
  41c44f:	mov    eax,ds:0xd1bed1f1
  41c454:	data16 cmc 
  41c456:	or     DWORD PTR [edi],ebx
  41c458:	int3   
  41c459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c45a:	jnp    0x41c49c
  41c45c:	(bad)  
  41c45d:	jl     0x41c482
  41c45f:	mov    esi,0x3dc326ae
  41c464:	cmp    DWORD PTR [ebp+0x2377d912],eax
  41c46a:	sub    BYTE PTR ds:0xd833c88d,0xb8
  41c471:	adc    dh,BYTE PTR [edx-0x5fbea7df]
  41c477:	dec    ebx
  41c478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c479:	push   ss
  41c47a:	sub    DWORD PTR [edx+0x1b0a2df3],edx
  41c480:	jle    0x41c40b
  41c482:	push   esp
  41c483:	cmp    edi,DWORD PTR [edi]
  41c485:	jnp    0x41c4ce
  41c487:	retf   
  41c488:	imul   DWORD PTR ds:0x38b29329
  41c48e:	enter  0xfed6,0x34
  41c492:	xchg   edi,eax
  41c493:	mov    cl,0x73
  41c495:	push   ebx
  41c496:	fld    QWORD PTR [ebx+0x22950a7]
  41c49c:	ror    DWORD PTR [esi+0x49],1
  41c49f:	es or  ebp,ebx
  41c4a2:	push   eax
  41c4a3:	jno    0x41c43c
  41c4a5:	xchg   BYTE PTR [ebx+esi*8],ch
  41c4a8:	popa   
  41c4a9:	call   0x905d:0x7fe6b3f2
  41c4b0:	cmp    DWORD PTR [ebx],eax
  41c4b2:	jmp    FWORD PTR [esi+0x2]
  41c4b5:	test   BYTE PTR [ebp+0x2e2951c8],dl
  41c4bb:	mov    BYTE PTR [ebp-0x72],ch
  41c4be:	daa    
  41c4bf:	repz mul DWORD PTR [ebp+0x2b]
  41c4c3:	or     eax,0x2b86a1b1
  41c4c8:	sub    esp,DWORD PTR [esi-0x1d]
  41c4cb:	xchg   ebx,eax
  41c4cc:	not    bh
  41c4ce:	dec    esp
  41c4cf:	and    al,0x6a
  41c4d1:	int3   
  41c4d2:	mov    es,WORD PTR [ebx+ecx*8]
  41c4d5:	and    BYTE PTR [bp-0x7716],cl
  41c4da:	xor    al,0x59
  41c4dc:	rcr    ah,cl
  41c4de:	push   ebp
  41c4df:	shl    DWORD PTR [edx-0x41d72d4c],1
  41c4e5:	inc    esp
  41c4e6:	push   esi
  41c4e7:	mov    ebp,0x2afb783f
  41c4ec:	mov    edx,0xc9524ba5
  41c4f1:	cld    
  41c4f2:	inc    esp
  41c4f3:	nop
  41c4f4:	jb     0x41c55e
  41c4f6:	les    edx,FWORD PTR [esi+0x61]
  41c4f9:	shl    BYTE PTR [eax+0x55],0x27
  41c4fd:	inc    ecx
  41c4fe:	or     dh,BYTE PTR [eax+0x67cb0f3c]
  41c504:	and    al,0x10
  41c506:	add    esi,DWORD PTR [ecx]
  41c508:	mov    eax,0xe45ed7a
  41c50d:	dec    ecx
  41c50e:	mov    ebp,0xfe07c284
  41c514:	or     eax,0xf0ab5cb3
  41c519:	pop    esi
  41c51a:	and    ebp,edi
  41c51c:	js     0x41c509
  41c51e:	test   BYTE PTR [edi+ebp*1+0x2d47417f],0xb4
  41c526:	inc    esp
  41c527:	loop   0x41c4c2
  41c529:	pop    edx
  41c52a:	lahf   
  41c52b:	jae    0x41c53d
  41c52d:	push   eax
  41c52e:	or     BYTE PTR [ecx+esi*8],cl
  41c531:	sbb    cl,ah
  41c533:	imul   esi,esi,0x71
  41c536:	aad    0x5c
  41c538:	xchg   ebx,eax
  41c539:	add    edi,DWORD PTR fs:[edi-0x6a]
  41c53d:	(bad)  
  41c53e:	neg    eax
  41c540:	add    DWORD PTR [ebx],ecx
  41c542:	jmp    FWORD PTR [edi]
  41c544:	mov    esi,0xd022ee0b
  41c549:	es scas eax,DWORD PTR es:[edi]
  41c54b:	loop   0x41c57e
  41c54d:	out    dx,eax
  41c54e:	ror    DWORD PTR [ecx+0x15959aca],cl
  41c554:	sbb    eax,0x4ddd2a44
  41c559:	js     0x41c541
  41c55b:	cmp    bh,ch
  41c55d:	sbb    eax,0xafbe6e69
  41c562:	xchg   DWORD PTR [ebx-0x69],ecx
  41c565:	jge    0x41c5c8
  41c567:	test   DWORD PTR [edi-0x3ef97292],ebx
  41c56d:	mov    ebx,0xf4b10adf
  41c572:	(bad)  
  41c573:	addr16 cld 
  41c575:	sbb    edx,esi
  41c577:	add    BYTE PTR [edx+0x67],ah
  41c57a:	adc    ebx,eax
  41c57c:	xlat   BYTE PTR ds:[ebx]
  41c57d:	push   edi
  41c57e:	push   ecx
  41c57f:	sbb    al,BYTE PTR [esi-0x36]
  41c582:	int3   
  41c583:	jae    0x41c5dd
  41c585:	mov    BYTE PTR [esi-0x3b55e28f],bh
  41c58b:	dec    esi
  41c58c:	lock bswap eax
  41c58f:	mov    DWORD PTR [esi-0x60ad1505],ebp
  41c595:	les    edi,FWORD PTR [ebp+0x4a]
  41c598:	jnp    0x41c54c
  41c59a:	inc    ebp
  41c59b:	ret    
  41c59c:	or     eax,0xf6a0b593
  41c5a1:	add    ecx,DWORD PTR [ebp+0x52de99d6]
  41c5a7:	mov    eax,0x7730a96b
  41c5ac:	popa   
  41c5ad:	sar    DWORD PTR [eax+0x3d465645],1
  41c5b3:	and    al,0x41
  41c5b5:	sahf   
  41c5b6:	or     ebp,DWORD PTR [edi-0x41]
  41c5b9:	dec    esi
  41c5ba:	cld    
  41c5bb:	jns    0x41c54d
  41c5bd:	xor    eax,0x9cc0ad0
  41c5c2:	and    esi,DWORD PTR ds:0x65e2f4c
  41c5c8:	push   esi
  41c5c9:	std    
  41c5ca:	push   0x7f152a90
  41c5cf:	(bad)  
  41c5d0:	mov    bl,0xf
  41c5d2:	jl     0x41c5a8
  41c5d4:	jne    0x41c59c
  41c5d6:	(bad)  
  41c5d7:	adc    BYTE PTR [edi-0x75],dh
  41c5da:	out    0x81,al
  41c5dc:	cmc    
  41c5dd:	leave  
  41c5de:	and    al,BYTE PTR [esi]
  41c5e0:	push   ecx
  41c5e1:	mov    esi,0x7d086d9d
  41c5e6:	adc    DWORD PTR [edx-0x50b8f104],0x75f9224d
  41c5f0:	ret    0x530a
  41c5f3:	cli    
  41c5f4:	push   0x1c
  41c5f6:	or     esi,ebp
  41c5f8:	ror    BYTE PTR [edx-0x16d62145],cl
  41c5fe:	push   esp
  41c5ff:	iret   
  41c600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c601:	ins    BYTE PTR es:[edi],dx
  41c602:	sub    eax,0x4de391d2
  41c607:	sbb    eax,0x5dac1469
  41c60c:	retf   0x2a0c
  41c60f:	inc    esp
  41c610:	in     al,0x9f
  41c612:	cmp    eax,DWORD PTR [edx+0x23b912df]
  41c618:	mov    ds:0xef096781,al
  41c61d:	or     BYTE PTR [edi],dl
  41c61f:	daa    
  41c620:	lods   al,BYTE PTR ds:[esi]
  41c621:	inc    esi
  41c622:	sbb    BYTE PTR [edi+0x55e6b088],0x6a
  41c629:	fcomp  DWORD PTR [edi+0x7a440f58]
  41c62f:	or     ch,bh
  41c631:	mov    eax,0xa90404ae
  41c636:	xor    al,bl
  41c638:	test   al,0x84
  41c63a:	jg     0x41c5e2
  41c63c:	stc    
  41c63d:	add    al,0xd1
  41c63f:	cmp    edx,DWORD PTR [esi-0x484112be]
  41c645:	in     al,dx
  41c646:	adc    esi,DWORD PTR [esi+0x5e]
  41c649:	in     al,0x4b
  41c64b:	arpl   WORD PTR [edi],cx
  41c64d:	dec    ebx
  41c64e:	call   0x8d68:0xec11d9bb
  41c655:	fistp  DWORD PTR [ecx+0x2e]
  41c658:	mov    al,ds:0xcec8f8e9
  41c65d:	or     eax,ebp
  41c65f:	es pop edx
  41c661:	dec    edx
  41c662:	dec    esi
  41c663:	outs   dx,DWORD PTR ds:[esi]
  41c664:	xor    BYTE PTR [ebp+0x3edda2f5],0x27
  41c66b:	stc    
  41c66c:	mov    dl,0xf7
  41c66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66f:	int    0x5a
  41c671:	out    dx,eax
  41c672:	mul    BYTE PTR [edi+0x6e]
  41c675:	pop    ss
  41c676:	ins    DWORD PTR es:[edi],dx
  41c677:	ret    
  41c678:	adc    BYTE PTR [ecx],ch
  41c67a:	and    ch,BYTE PTR [ebp-0x28]
  41c67d:	sub    esi,DWORD PTR [edi-0x70]
  41c680:	dec    esp
  41c681:	mov    cs,WORD PTR [ebx]
  41c683:	push   ebx
  41c684:	cmc    
  41c685:	(bad)  
  41c687:	dec    esi
  41c688:	ins    BYTE PTR es:[edi],dx
  41c689:	fs mov ecx,0x5ad6a90b
  41c68f:	(bad)  
  41c690:	in     eax,0x7f
  41c692:	rol    ch,cl
  41c694:	scas   eax,DWORD PTR es:[edi]
  41c695:	in     eax,dx
  41c696:	fcmovne st,st(1)
  41c698:	pop    edx
  41c699:	mov    ds:0x620b799a,al
  41c69e:	push   ebx
  41c69f:	aaa    
  41c6a0:	xor    dh,0x47
  41c6a3:	(bad)  
  41c6a4:	sbb    bh,bl
  41c6a6:	mov    edi,0xe4e9f83b
  41c6ab:	in     eax,dx
  41c6ac:	jle    0x41c638
  41c6ae:	mov    cl,0x4b
  41c6b0:	lods   al,BYTE PTR ds:[esi]
  41c6b1:	adc    eax,0x2002f4c8
  41c6b6:	mov    DWORD PTR [ebx],ebp
  41c6b8:	das    
  41c6b9:	mov    esp,0xaeef44c
  41c6be:	mov    DWORD PTR [ebp-0x19],eax
  41c6c1:	pusha  
  41c6c2:	mov    cl,0x49
  41c6c4:	imul   DWORD PTR [ecx-0x8eae301]
  41c6ca:	or     al,0x41
  41c6cc:	push   ebx
  41c6cd:	sub    dh,ah
  41c6cf:	loope  0x41c731
  41c6d1:	sar    BYTE PTR [eax],0xb
  41c6d4:	xchg   ebp,eax
  41c6d5:	imul   ebx,DWORD PTR [ebx+0xc93683e],0x3e4cddc9
  41c6df:	sbb    DWORD PTR [ebx-0x6ebe83de],ebx
  41c6e5:	rcl    DWORD PTR [ebx+0x3c],1
  41c6e8:	mov    esp,0x25a0d1cd
  41c6ed:	js     0x41c6f8
  41c6ef:	hlt    
  41c6f0:	test   BYTE PTR ds:0xd3a2d7d,0x3e
  41c6f7:	adc    dl,ah
  41c6f9:	xor    BYTE PTR [edx],ch
  41c6fb:	xor    esp,edi
  41c6fd:	in     eax,dx
  41c6fe:	jnp    0x41c6b1
  41c700:	inc    esi
  41c701:	xor    BYTE PTR [ebp-0x4ad1150d],ch
  41c707:	out    0xd1,al
  41c709:	dec    ebx
  41c70a:	sbb    edi,ebp
  41c70c:	imul   ebp,eax,0xfffffffc
  41c70f:	hlt    
  41c710:	sub    bh,ah
  41c712:	sub    ecx,DWORD PTR ds:0xdd8aa626
  41c718:	add    al,0x7
  41c71a:	or     BYTE PTR [ebx-0x3441a781],al
  41c720:	sub    BYTE PTR [esp+ebx*8],dl
  41c723:	call   0x93e6:0x89f1b586
  41c72a:	repnz stos DWORD PTR es:[edi],eax
  41c72c:	mov    dl,0x38
  41c72e:	push   0xcbfc524b
  41c733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c734:	cmp    ah,cl
  41c736:	sahf   
  41c737:	stos   DWORD PTR es:[edi],eax
  41c738:	pusha  
  41c739:	call   0x8247:0x11272b4b
  41c740:	mov    bh,0x76
  41c742:	sub    eax,0x24ae6d9d
  41c747:	cmp    BYTE PTR [eax+ecx*4-0x3f3d91de],al
  41c74e:	push   edx
  41c74f:	arpl   WORD PTR [ebp+ecx*1-0x59cd9a8],bp
  41c756:	test   al,0x57
  41c758:	fnstenv [ecx]
  41c75a:	pop    esi
  41c75b:	xchg   ebx,eax
  41c75c:	mov    fs,esi
  41c75e:	cmc    
  41c75f:	push   edi
  41c760:	sahf   
  41c761:	fsubrp st(5),st
  41c763:	punpcklbw mm7,DWORD PTR [edx]
  41c766:	stc    
  41c767:	lods   eax,DWORD PTR ds:[esi]
  41c768:	cld    
  41c769:	retf   0xa93a
  41c76c:	pop    ds
  41c76d:	cmp    eax,0xfdbcdd97
  41c772:	jmp    0x41c7de
  41c774:	jl     0x41c7a2
  41c776:	(bad)  
  41c777:	div    BYTE PTR [ecx+0x6c]
  41c77a:	loop   0x41c760
  41c77c:	mov    al,ds:0xcc651132
  41c781:	mov    edx,0xffa0d953
  41c786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c787:	sbb    bl,BYTE PTR [edi]
  41c789:	cs leave 
  41c78b:	imul   edx,eax,0xffffffce
  41c78e:	jbe    0x41c7bf
  41c790:	xchg   esi,eax
  41c791:	mov    ds:0x750cb9fc,eax
  41c796:	mov    dl,0x1b
  41c798:	mov    ebx,0x8fbacda2
  41c79d:	adc    BYTE PTR [edx+0x9],ch
  41c7a0:	add    al,BYTE PTR ds:0xaef5e03d
  41c7a6:	js     0x41c816
  41c7a8:	mov    eax,ds:0xc9ca6ab3
  41c7ad:	(bad)  [edx+0x1874b3a3]
  41c7b3:	out    dx,eax
  41c7b4:	sub    BYTE PTR [edi-0x1217b9b7],cl
  41c7ba:	pop    ecx
  41c7bb:	std    
  41c7bc:	sar    bl,0x79
  41c7bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7c0:	xchg   DWORD PTR [eax],ebp
  41c7c2:	(bad)  
  41c7c3:	mov    ah,BYTE PTR [esi]
  41c7c5:	mov    dl,0x8c
  41c7c7:	pop    edx
  41c7c8:	add    dl,ch
  41c7ca:	inc    ebp
  41c7cb:	pushf  
  41c7cc:	dec    ebx
  41c7cd:	adc    DWORD PTR [ebp+0xf],ecx
  41c7d0:	sub    BYTE PTR [edx+0x6a],0x69
  41c7d4:	push   0xd3445c68
  41c7d9:	popf   
  41c7da:	gs nop
  41c7dc:	in     eax,0x49
  41c7de:	and    ch,BYTE PTR [esi+ebp*4-0x13]
  41c7e2:	push   0x8b29d401
  41c7e7:	rol    BYTE PTR es:[edi+0x23929fc7],0x1
  41c7ef:	out    dx,al
  41c7f0:	push   ebp
  41c7f1:	aad    0x66
  41c7f3:	cld    
  41c7f4:	fmul   QWORD PTR [ebx-0x10]
  41c7f7:	jb     0x41c7c2
  41c7f9:	pop    edi
  41c7fa:	dec    edx
  41c7fb:	aas    
  41c7fc:	mov    dl,dl
  41c7fe:	int3   
  41c7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c800:	or     bh,dl
  41c802:	xchg   ebx,eax
  41c803:	icebp  
  41c804:	mov    al,BYTE PTR [edx-0x6d148a05]
  41c80a:	data16 adc al,0x58
  41c80d:	cmp    eax,0x350207b6
  41c812:	pusha  
  41c813:	sub    BYTE PTR [esi+0x19],cl
  41c816:	mov    al,0xf4
  41c818:	or     eax,DWORD PTR [esi+0x7474cb88]
  41c81e:	dec    edi
  41c81f:	and    eax,0x84981ac
  41c824:	sbb    BYTE PTR [bp+si+0x35],0xb2
  41c829:	xor    edx,DWORD PTR [esi]
  41c82b:	dec    ebp
  41c82c:	stos   BYTE PTR es:[edi],al
  41c82d:	cmp    BYTE PTR [esi+0x5b],ch
  41c830:	mov    cl,0xfb
  41c832:	arpl   WORD PTR [ebp+0x737eb358],ax
  41c838:	mov    ch,0x1
  41c83a:	jnp    0x41c8ab
  41c83c:	cmc    
  41c83d:	and    DWORD PTR [eax+0x284c98aa],edx
  41c843:	mov    al,0x44
  41c845:	call   0xbbda:0xc9fd72f0
  41c84c:	dec    ebp
  41c84d:	inc    edx
  41c84e:	(bad)  
  41c84f:	xor    ecx,esi
  41c851:	pusha  
  41c852:	shl    BYTE PTR [esi+esi*1],1
  41c855:	inc    edi
  41c856:	push   ebp
  41c857:	nop
  41c858:	or     DWORD PTR [ebx],0xffffff99
  41c85b:	jmp    0x60d1:0x35b529b1
  41c862:	dec    ecx
  41c863:	or     bh,cl
  41c865:	push   edi
  41c866:	jmp    0x41c828
  41c868:	and    ebx,DWORD PTR [ebx]
  41c86a:	aam    0x95
  41c86c:	xchg   esp,eax
  41c86d:	dec    ecx
  41c86e:	sub    BYTE PTR [eax+0x7d],0x9c
  41c872:	jns    0x41c8c2
  41c874:	mov    edx,?
  41c876:	mov    WORD PTR [ebx+0x3253d3a7],fs
  41c87c:	dec    esp
  41c87d:	and    cl,BYTE PTR [edx+eax*1-0x20017fd5]
  41c884:	fsub   DWORD PTR [esi+0x14]
  41c887:	jnp    0x41c8ae
  41c889:	in     al,dx
  41c88a:	and    bh,BYTE PTR ds:0x4397c28a
  41c890:	jp     0x41c859
  41c892:	outs   dx,DWORD PTR fs:[esi]
  41c894:	mov    BYTE PTR [eax],cl
  41c896:	in     al,dx
  41c897:	lock in al,dx
  41c899:	jmp    0x41c910
  41c89b:	(bad)  
  41c89c:	hlt    
  41c89d:	sbb    dh,BYTE PTR [edi-0x1f2f83a8]
  41c8a3:	test   DWORD PTR [edx+ebx*2+0x61],esp
  41c8a7:	or     DWORD PTR [edx],edi
  41c8a9:	je     0x41c8a7
  41c8ab:	mov    al,0x62
  41c8ad:	inc    esi
  41c8ae:	add    bh,BYTE PTR [ecx]
  41c8b0:	or     WORD PTR [eax+edx*1+0x6f56f383],sp
  41c8b8:	xchg   esp,eax
  41c8b9:	jo     0x41c899
  41c8bb:	push   ss
  41c8bc:	mov    ds:0x324a7bdc,eax
  41c8c1:	sub    dh,BYTE PTR [esi+0x74]
  41c8c4:	and    dl,BYTE PTR ds:0x789b884
  41c8ca:	mov    ebp,0xd6f81bb3
  41c8cf:	jae    0x41c8f0
  41c8d1:	test   eax,0xe77432b1
  41c8d6:	pusha  
  41c8d7:	adc    al,0x72
  41c8d9:	xchg   eax,edi
  41c8db:	xor    eax,DWORD PTR [esi-0x5c]
  41c8de:	jle    0x41c933
  41c8e0:	xchg   esp,eax
  41c8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e2:	sub    eax,0xae516994
  41c8e7:	aas    
  41c8e8:	add    dh,BYTE PTR [eax]
  41c8ea:	stos   DWORD PTR es:[edi],eax
  41c8eb:	xor    al,0x60
  41c8ed:	jnp    0x41c93e
  41c8ef:	and    ebp,DWORD PTR [ebp+0x2ceea638]
  41c8f5:	adc    al,dl
  41c8f7:	sub    BYTE PTR [eax],0xfa
  41c8fa:	push   es
  41c8fb:	jl     0x41c908
  41c8fd:	stos   BYTE PTR es:[edi],al
  41c8fe:	cmp    al,0x21
  41c900:	cmp    eax,0x17570b37
  41c905:	cdq    
  41c906:	or     DWORD PTR [ecx],esi
  41c908:	jle    0x41c91e
  41c90a:	pop    ss
  41c90b:	icebp  
  41c90c:	into   
  41c90d:	inc    esp
  41c90e:	test   BYTE PTR [esi+eax*4-0x70],al
  41c912:	mov    edi,0x8f8eb680
  41c917:	sbb    ch,ch
  41c919:	sahf   
  41c91a:	icebp  
  41c91b:	jl     0x41c980
  41c91d:	retf   
  41c91e:	aas    
  41c91f:	xor    eax,0xea3ec6cf
  41c924:	pop    ss
  41c925:	mov    ecx,ss
  41c927:	les    ebp,FWORD PTR [edi+0x4f]
  41c92a:	sbb    al,0x64
  41c92c:	cwde   
  41c92d:	repnz mov bl,0x61
  41c930:	add    al,dh
  41c932:	nop    DWORD PTR [ecx]
  41c935:	das    
  41c936:	popa   
  41c937:	sub    al,0x4b
  41c939:	dec    edi
  41c93a:	push   ebx
  41c93b:	cmp    ebp,DWORD PTR [ebp+0x5c5707]
  41c941:	inc    eax
  41c942:	jbe    0x41c9a7
  41c944:	loopne 0x41c972
  41c946:	sub    DWORD PTR [edx],edx
  41c948:	lock dec ebx
  41c94a:	scas   al,BYTE PTR es:[edi]
  41c94b:	sbb    cl,BYTE PTR [ebp-0x26]
  41c94e:	sahf   
  41c94f:	out    0xa,eax
  41c951:	adc    eax,0xc0359420
  41c956:	cmc    
  41c957:	je     0x41c95c
  41c959:	es ds dec ecx
  41c95c:	lods   eax,DWORD PTR ds:[esi]
  41c95d:	pop    edx
  41c95e:	inc    ecx
  41c95f:	cdq    
  41c960:	inc    esi
  41c961:	dec    esp
  41c962:	pop    esi
  41c963:	(bad)  
  41c964:	push   eax
  41c965:	stos   DWORD PTR es:[edi],eax
  41c966:	clc    
  41c967:	(bad)  
  41c969:	in     al,0x7a
  41c96b:	loope  0x41c986
  41c96d:	add    esp,eax
  41c96f:	add    ch,BYTE PTR [esi-0x1f]
  41c972:	fdiv   st(7),st
  41c974:	cmc    
  41c975:	pop    ebx
  41c976:	rcr    DWORD PTR [edi+ebp*1],cl
  41c979:	lahf   
  41c97a:	mov    cl,0x63
  41c97c:	mov    edi,esi
  41c97e:	add    al,0x57
  41c980:	push   edi
  41c981:	xlat   BYTE PTR ds:[ebx]
  41c982:	sub    ebx,DWORD PTR [ebx-0x69bb42a6]
  41c988:	xor    BYTE PTR [ecx+0x14],bl
  41c98b:	jmp    0xb0974b13
  41c990:	mov    ss,WORD PTR fs:[edx+0x27b28a51]
  41c997:	inc    esp
  41c998:	mov    edi,DWORD PTR [ebx+0x27]
  41c99b:	xchg   ebx,eax
  41c99c:	mov    esp,0x6785312d
  41c9a1:	ins    BYTE PTR es:[edi],dx
  41c9a2:	xchg   edx,eax
  41c9a3:	dec    ecx
  41c9a4:	aad    0xb4
  41c9a6:	fnstenv [edi+0x7d]
  41c9a9:	les    ebx,FWORD PTR [ebp-0x4b21b762]
  41c9af:	fcom   DWORD PTR cs:[ecx]
  41c9b2:	rol    BYTE PTR [esi-0x17],1
  41c9b5:	out    dx,eax
  41c9b6:	inc    eax
  41c9b7:	nop
  41c9b8:	inc    ebp
  41c9b9:	mov    ebx,0x2f9738fe
  41c9be:	fistp  WORD PTR [edi-0x80]
  41c9c1:	cmp    esi,edx
  41c9c3:	jmp    0x41c9a6
  41c9c5:	scas   eax,DWORD PTR es:[edi]
  41c9c6:	sbb    dl,BYTE PTR [esi]
  41c9c8:	mov    al,ds:0x8299d91e
  41c9cd:	add    BYTE PTR [eax],bh
  41c9cf:	call   0xce63:0xe805aaaf
  41c9d6:	call   0x5f8d:0xcdf45039
  41c9dd:	mov    eax,0xa26cf8af
  41c9e2:	cmp    DWORD PTR [eax],eax
  41c9e4:	ins    BYTE PTR es:[edi],dx
  41c9e5:	dec    edi
  41c9e6:	add    DWORD PTR ds:0xa507d389,edi
  41c9ec:	ja     0x41c984
  41c9ee:	imul   ecx,DWORD PTR [ebx+0x23],0xa37dfb96
  41c9f5:	mov    edx,0x2f367f2
  41c9fa:	push   ds
  41c9fb:	enter  0xcc37,0xe4
  41c9ff:	(bad)  
  41ca00:	mov    cs,WORD PTR [edi-0x18]
  41ca03:	fwait
  41ca04:	mov    al,cl
  41ca06:	sbb    DWORD PTR [ebx],0xf4d25d07
  41ca0c:	das    
  41ca0d:	fcmovnb st,st(7)
  41ca0f:	push   DWORD PTR ds:0x8bdbf3f4
  41ca15:	fisttp DWORD PTR ds:0x5ee389fb
  41ca1b:	xor    BYTE PTR [ebp+0x283e30f6],bl
  41ca21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca22:	jmp    0x41ca9e
  41ca24:	push   0x80240380
  41ca29:	popa   
  41ca2a:	in     eax,0x43
  41ca2c:	fcomp  QWORD PTR [ecx-0x4596c2c3]
  41ca32:	cwde   
  41ca33:	loope  0x41ca03
  41ca35:	pmullw mm7,QWORD PTR [edi+0x5e]
  41ca39:	push   esp
  41ca3a:	inc    esp
  41ca3b:	jns    0x41caa0
  41ca3d:	mov    bl,0x29
  41ca3f:	sbb    al,BYTE PTR gs:[ecx-0x1d]
  41ca43:	jne    0x41ca29
  41ca45:	push   0xfffffff9
  41ca47:	xor    esp,DWORD PTR [eax-0x24]
  41ca4a:	sbb    eax,0xa829896a
  41ca4f:	test   BYTE PTR [esi-0x6422479c],al
  41ca55:	mov    edx,esi
  41ca57:	lea    eax,ds:0x74f664c3
  41ca5d:	out    0x8d,eax
  41ca5f:	and    eax,0x6071528
  41ca64:	(bad)  
  41ca65:	pusha  
  41ca66:	mov    dh,0x66
  41ca68:	push   0xffffffc9
  41ca6a:	in     eax,0x9a
  41ca6c:	xlat   BYTE PTR ds:[ebx]
  41ca6d:	xor    dl,ch
  41ca6f:	dec    esp
  41ca70:	dec    edx
  41ca71:	in     al,dx
  41ca72:	cmp    DWORD PTR [ecx+0x41bfaead],ecx
  41ca78:	mov    esp,0xa0619390
  41ca7d:	enter  0x8968,0x73
  41ca81:	dec    esi
  41ca82:	jbe    0x41cabe
  41ca84:	rcr    DWORD PTR [esi+eiz*4+0x71],1
  41ca88:	pop    esp
  41ca89:	les    eax,FWORD PTR [edx]
  41ca8b:	stc    
  41ca8c:	popa   
  41ca8d:	and    DWORD PTR [edi+0x23],ebx
  41ca90:	neg    BYTE PTR [esi+edx*4-0x20]
  41ca94:	loop   0x41ca68
  41ca96:	inc    eax
  41ca97:	lock fidivr DWORD PTR ds:0x49a0a02d
  41ca9e:	stc    
  41ca9f:	or     eax,0x53727290
  41caa4:	dec    ebx
  41caa5:	repnz fnstenv [edi+0x29cea503]
  41caac:	adc    eax,0x811e2ce2
  41cab1:	pop    ss
  41cab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab3:	adc    DWORD PTR [ebx+0x5e18cbfe],ebx
  41cab9:	test   DWORD PTR cs:[ebx+0x5ebd239b],0x67c5ed0f
  41cac4:	js     0x41cab6
  41cac6:	clc    
  41cac7:	mov    ah,dh
  41cac9:	popf   
  41caca:	stos   DWORD PTR es:[edi],eax
  41cacb:	lds    esp,FWORD PTR [esi-0x71]
  41cace:	push   edx
  41cacf:	jno    0x41cafa
  41cad1:	push   cs
  41cad2:	bound  ecx,QWORD PTR [esi+edi*4-0x2e8be7dd]
  41cad9:	imul   esp,DWORD PTR [eax],0xcb5409a9
  41cadf:	or     al,bh
  41cae1:	jp     0x41cb0f
  41cae3:	adc    ebp,DWORD PTR ds:0x72e0819e
  41cae9:	aaa    
  41caea:	inc    eax
  41caeb:	inc    eax
  41caec:	jecxz  0x41cae2
  41caee:	ins    BYTE PTR es:[edi],dx
  41caef:	dec    edx
  41caf0:	popa   
  41caf1:	sbb    bl,BYTE PTR [edx+0x20]
  41caf4:	(bad)  
  41caf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf6:	sub    edx,ebx
  41caf8:	mov    al,0xdb
  41cafa:	jo     0x41caf4
  41cafc:	pop    edx
  41cafd:	mov    cl,0x78
  41caff:	sub    DWORD PTR ds:0xab4e511,edi
  41cb05:	es adc al,0xd3
  41cb08:	imul   ebp,DWORD PTR [ebx-0x6a],0xb2e8dd0b
  41cb0f:	int3   
  41cb10:	inc    edi
  41cb11:	jae    0x41cad7
  41cb13:	mov    dh,0x50
  41cb15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb16:	xchg   esi,eax
  41cb17:	sbb    eax,0x30077b8e
  41cb1c:	retf   
  41cb1d:	xchg   ebx,eax
  41cb1e:	and    DWORD PTR [ebx],ebp
  41cb20:	xor    eax,0xb968f6f
  41cb25:	inc    ecx
  41cb26:	adc    DWORD PTR [esp+ecx*2+0x6c],edx
  41cb2a:	and    BYTE PTR [ebx+0x5f],bl
  41cb2d:	push   edi
  41cb2e:	sub    DWORD PTR [eax],0x2f6b6de0
  41cb34:	jo     0x41cba1
  41cb36:	aas    
  41cb37:	jl     0x41cbab
  41cb39:	mov    eax,ds:0x9a63293b
  41cb3e:	std    
  41cb3f:	xor    BYTE PTR [ebx+0x65],ch
  41cb42:	xchg   eax,ecx
  41cb44:	cmc    
  41cb45:	jmp    0xf306:0x9445f76e
  41cb4c:	inc    edx
  41cb4d:	xchg   ebp,eax
  41cb4e:	adc    dl,ah
  41cb50:	jne    0x41cb13
  41cb52:	mov    BYTE PTR [ebx],dl
  41cb54:	test   eax,0xfa145860
  41cb59:	(bad)  
  41cb5a:	stos   BYTE PTR es:[edi],al
  41cb5b:	das    
  41cb5c:	inc    eax
  41cb5d:	repnz stos DWORD PTR es:[edi],eax
  41cb5f:	mov    ch,0xa2
  41cb61:	pop    ecx
  41cb62:	xchg   ebx,esp
  41cb64:	call   0x6409:0x8545caab
  41cb6b:	jge    0x41cb25
  41cb6d:	sahf   
  41cb6e:	int    0xde
  41cb70:	scas   eax,DWORD PTR es:[edi]
  41cb71:	enter  0x8329,0xb9
  41cb75:	mov    ah,0xce
  41cb77:	xchg   edi,eax
  41cb78:	and    al,0x57
  41cb7a:	iret   
  41cb7b:	and    BYTE PTR [edx],0xff
  41cb7e:	popf   
  41cb7f:	ror    BYTE PTR [esi+edi*1+0x4a],cl
  41cb83:	or     esp,eax
  41cb85:	aaa    
  41cb86:	std    
  41cb87:	fld    TBYTE PTR [edi]
  41cb89:	or     ebp,eax
  41cb8b:	cmp    DWORD PTR [eax],0xcbd65c26
  41cb91:	push   ecx
  41cb92:	push   ds
  41cb93:	mov    bh,0xc2
  41cb95:	adc    DWORD PTR [ecx+eax*1+0x6a0efdbb],esp
  41cb9c:	pop    eax
  41cb9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb9e:	push   esp
  41cb9f:	je     0x41cb3c
  41cba1:	stos   DWORD PTR es:[edi],eax
  41cba2:	add    BYTE PTR [esi-0x75],dh
  41cba5:	jns    0x41cb6a
  41cba7:	push   edx
  41cba8:	cmp    BYTE PTR [esi+0x47],ah
  41cbab:	xor    ebx,DWORD PTR [esi-0x8731608]
  41cbb1:	sbb    BYTE PTR [edi+ecx*1],ch
  41cbb4:	push   edi
  41cbb5:	mov    al,ds:0x689778e6
  41cbba:	xchg   BYTE PTR [ecx],bl
  41cbbc:	xor    al,0x73
  41cbbe:	pusha  
  41cbbf:	int3   
  41cbc0:	pop    ss
  41cbc1:	loope  0x41cb58
  41cbc3:	mov    al,ds:0x298c4e8f
  41cbc8:	inc    edi
  41cbc9:	fbld   TBYTE PTR [esi+0x41]
  41cbcc:	dec    edx
  41cbcd:	xsavec [ebp+0x60]
  41cbd1:	sahf   
  41cbd2:	imul   ecx,edx,0xffffffae
  41cbd5:	adc    eax,0x84faf3c1
  41cbda:	sub    BYTE PTR [edx-0x5f7c878c],al
  41cbe0:	dec    ebx
  41cbe1:	mov    ebx,0x9aa72bf7
  41cbe6:	loope  0x41cc48
  41cbe8:	pop    edi
  41cbe9:	adc    dh,BYTE PTR [edi-0x18]
  41cbec:	aaa    
  41cbed:	ins    DWORD PTR es:[edi],dx
  41cbee:	popa   
  41cbef:	test   DWORD PTR [edx+0x2e],ecx
  41cbf2:	mov    bh,0x5c
  41cbf4:	xchg   edx,eax
  41cbf5:	shr    edi,1
  41cbf7:	int3   
  41cbf8:	mov    dh,0x8e
  41cbfa:	cmc    
  41cbfb:	jge    0x41cbbf
  41cbfd:	fadd   QWORD PTR [edx-0x4c]
  41cc00:	sub    BYTE PTR ds:0x7e43adbc,0xe0
  41cc07:	outs   dx,BYTE PTR ds:[esi]
  41cc08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc09:	aad    0x53
  41cc0b:	add    eax,0xd3de840a
  41cc10:	stos   BYTE PTR es:[edi],al
  41cc11:	or     BYTE PTR [ebx],ah
  41cc13:	xchg   ebx,eax
  41cc14:	pop    edx
  41cc15:	in     al,0xb5
  41cc17:	push   eax
  41cc18:	inc    ebp
  41cc19:	jbe    0x41cc4c
  41cc1b:	add    esi,edx
  41cc1d:	jmp    0xe918:0x75604b8a
  41cc24:	mov    edx,0xcf6aeaf
  41cc29:	into   
  41cc2a:	sbb    al,0xca
  41cc2c:	int3   
  41cc2d:	les    eax,FWORD PTR [ecx]
  41cc2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc30:	sub    DWORD PTR [ecx+0x78],ecx
  41cc33:	aaa    
  41cc34:	sub    ebx,ebp
  41cc36:	sub    eax,0x73570a9f
  41cc3c:	dec    edx
  41cc3d:	test   al,0xb3
  41cc3f:	xor    DWORD PTR [eax+eiz*1+0x58],ebp
  41cc43:	dec    esp
  41cc44:	jmp    0xa4315e76
  41cc49:	adc    ch,BYTE PTR [edi+esi*1+0x35]
  41cc4d:	loop   0x41cc40
  41cc4f:	je     0x41cc03
  41cc51:	test   ch,0x5d
  41cc54:	cdq    
  41cc55:	out    0x36,al
  41cc57:	ins    BYTE PTR es:[edi],dx
  41cc58:	aad    0xb
  41cc5a:	jp     0x41cbef
  41cc5c:	popa   
  41cc5d:	and    al,0x95
  41cc5f:	shl    bh,1
  41cc61:	inc    edi
  41cc62:	pop    edx
  41cc63:	jns    0x41cc7f
  41cc65:	ds fcmove st,st(4)
  41cc68:	and    BYTE PTR [edi-0x61],dl
  41cc6b:	cmp    eax,0x301885a7
  41cc70:	jge    0x41cbfe
  41cc72:	jmp    0x41ccca
  41cc74:	leave  
  41cc75:	jae    0x41cc5d
  41cc77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc78:	jno    0x41ccca
  41cc7a:	int    0xf3
  41cc7c:	or     ah,bh
  41cc7e:	cmp    eax,0x5da7a9ac
  41cc83:	ins    BYTE PTR es:[edi],dx
  41cc84:	mov    bl,0xc7
  41cc86:	push   ss
  41cc87:	add    BYTE PTR [ebp+0xdace294],al
  41cc8d:	inc    esi
  41cc8e:	out    0xdc,al
  41cc90:	aam    0x48
  41cc92:	dec    esp
  41cc93:	mov    bh,0x35
  41cc95:	ss ins BYTE PTR es:[edi],dx
  41cc97:	in     eax,dx
  41cc98:	cmp    edx,ecx
  41cc9a:	pushf  
  41cc9b:	pop    edi
  41cc9c:	test   eax,0x9bdb73b5
  41cca1:	xchg   ebp,eax
  41cca2:	inc    edx
  41cca3:	inc    edx
  41cca4:	cmp    ch,BYTE PTR [ebp+ebx*1-0xc]
  41cca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cca9:	sub    edi,DWORD PTR [edi+ecx*4]
  41ccac:	adc    eax,0xfb4da75e
  41ccb1:	mov    bh,0x17
  41ccb3:	dec    ebx
  41ccb4:	ins    DWORD PTR es:[edi],dx
  41ccb5:	and    BYTE PTR [edx-0x14],ah
  41ccb8:	jno    0x41cd37
  41ccba:	gs fs mov ebx,0xfe8920a4
  41ccc1:	std    
  41ccc2:	fwait
  41ccc3:	mov    BYTE PTR [eax-0x4bcf3a97],bl
  41ccc9:	ret    
  41ccca:	ss adc al,0x65
  41cccd:	xchg   ebp,eax
  41ccce:	cmp    DWORD PTR [edi+0x5d986389],ecx
  41ccd4:	sbb    ecx,ebx
  41ccd6:	jo     0x41cc6b
  41ccd8:	jecxz  0x41cc80
  41ccda:	inc    esi
  41ccdb:	add    BYTE PTR [edx],0x8d
  41ccde:	sbb    DWORD PTR [edx+0x22a16e87],esi
  41cce4:	sahf   
  41cce5:	nop
  41cce6:	cmp    ch,BYTE PTR [eax]
  41cce8:	mov    WORD PTR [eax+edx*1+0x15045b32],fs
  41ccef:	or     eax,0xf3118244
  41ccf4:	and    eax,0x35c9383d
  41ccf9:	push   edi
  41ccfa:	adc    bl,BYTE PTR [edx+0x6aa1aeb8]
  41cd00:	xor    ebp,ebx
  41cd02:	inc    eax
  41cd04:	pushf  
  41cd05:	callw  0x8a2f
  41cd09:	je     0x41cd65
  41cd0b:	in     al,0x83
  41cd0d:	cmp    BYTE PTR [ecx],0x15
  41cd10:	xchg   esp,eax
  41cd11:	mov    dh,0x6b
  41cd13:	pop    ebx
  41cd14:	ins    DWORD PTR es:[edi],dx
  41cd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd16:	lods   eax,DWORD PTR ds:[esi]
  41cd17:	jne    0x41cd51
  41cd19:	cld    
  41cd1a:	push   ebx
  41cd1b:	mov    bh,0x2f
  41cd1d:	dec    edx
  41cd1e:	inc    ecx
  41cd1f:	femms  
  41cd21:	pop    es
  41cd22:	dec    ebp
  41cd23:	outs   dx,DWORD PTR ds:[esi]
  41cd24:	mov    al,0x1b
  41cd26:	cld    
  41cd27:	adc    esi,DWORD PTR [ebx]
  41cd29:	fidiv  WORD PTR [ecx+0x4f]
  41cd2c:	mov    dh,0xf6
  41cd2e:	shl    DWORD PTR [eax-0x58da3ff5],cl
  41cd34:	mov    ch,0x4
  41cd36:	call   0x632a514a
  41cd3b:	pop    ds
  41cd3c:	add    ebx,DWORD PTR [esi+0x54]
  41cd3f:	pushf  
  41cd40:	loope  0x41cd0b
  41cd42:	in     al,dx
  41cd43:	clc    
  41cd44:	add    cl,ch
  41cd46:	mov    al,0x62
  41cd48:	mov    dh,0x1c
  41cd4a:	enter  0xd784,0x36
  41cd4e:	retf   
  41cd4f:	xchg   edi,eax
  41cd50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd51:	mov    al,ds:0x241eac79
  41cd56:	fidiv  DWORD PTR [ebx+0x3d4382b8]
  41cd5c:	xchg   esi,eax
  41cd5d:	add    DWORD PTR [ecx-0x53339f7],esp
  41cd63:	cpuid  
  41cd65:	mov    dl,0xa0
  41cd67:	ins    BYTE PTR es:[edi],dx
  41cd68:	lods   eax,DWORD PTR cs:[esi]
  41cd6a:	lods   eax,DWORD PTR ds:[esi]
  41cd6b:	jbe    0x41cd11
  41cd6d:	cld    
  41cd6e:	add    BYTE PTR [ebp+0x64c9b3d3],ch
  41cd74:	push   esp
  41cd75:	out    dx,eax
  41cd76:	aad    0x7e
  41cd78:	adc    eax,0x326dfd38
  41cd7d:	and    al,0xb3
  41cd7f:	jb     0x41cd82
  41cd81:	xor    BYTE PTR [edx+0x16a94653],dh
  41cd87:	das    
  41cd88:	dec    edx
  41cd89:	mov    eax,ds:0xff6d4327
  41cd8e:	sbb    eax,0xa2c01c1d
  41cd93:	add    DWORD PTR [esp+ebx*2-0x4d],ecx
  41cd97:	fnsave [ebx]
  41cd99:	add    al,0xc9
  41cd9b:	stos   DWORD PTR es:[edi],eax
  41cd9c:	mov    ecx,0x2a3a7061
  41cda1:	mov    BYTE PTR [ebx-0x44ef7303],ah
  41cda7:	cmp    ch,BYTE PTR [edx]
  41cda9:	stos   BYTE PTR es:[edi],al
  41cdaa:	aaa    
  41cdab:	xor    eax,0x461003a8
  41cdb0:	loop   0x41cd6a
  41cdb2:	push   cs
  41cdb3:	cmp    DWORD PTR [ecx+0x656ecac2],ebp
  41cdb9:	inc    edi
  41cdba:	mov    fs,WORD PTR [eax+0x2009852a]
  41cdc0:	mov    ch,0xc2
  41cdc2:	sti    
  41cdc3:	cmp    DWORD PTR [edx+0x67],0x72d20b62
  41cdca:	jbe    0x41cde3
  41cdcc:	fsub   st,st(2)
  41cdce:	mov    BYTE PTR [eax],bl
  41cdd0:	adc    DWORD PTR [ecx-0x53b6419a],ebx
  41cdd6:	pop    esp
  41cdd7:	add    al,0x88
  41cdd9:	xchg   esi,eax
  41cdda:	fs in  al,dx
  41cddc:	push   0x61
  41cdde:	es xchg ebx,eax
  41cde0:	fisttp DWORD PTR [esi+esi*8+0x48]
  41cde4:	cmp    eax,DWORD PTR [eax+0x2f]
  41cde7:	out    dx,eax
  41cde8:	or     BYTE PTR [ebx],bl
  41cdea:	jp     0x41ce21
  41cdec:	retf   
  41cded:	sub    al,dh
  41cdef:	push   ebx
  41cdf0:	addr16 push ebx
  41cdf2:	mov    dh,0x78
  41cdf4:	and    eax,0x5c0bdb52
  41cdf9:	pop    ebp
  41cdfa:	jb     0x41cd81
  41cdfc:	jnp    0x41cdca
  41cdfe:	mov    ebp,0xf4053233
  41ce03:	jp     0x41cdc3
  41ce05:	neg    DWORD PTR [ecx+0x3]
  41ce08:	(bad)  
  41ce09:	pop    ecx
  41ce0a:	rol    DWORD PTR [edx-0x65e9eeaa],1
  41ce10:	sbb    DWORD PTR [ebx+0x7c],esp
  41ce13:	cwde   
  41ce14:	adc    al,0xe9
  41ce16:	pusha  
  41ce17:	pop    ebx
  41ce18:	pop    es
  41ce19:	sbb    cl,dh
  41ce1b:	inc    ebp
  41ce1c:	pushf  
  41ce1d:	call   0xdd55:0xe46ab875
  41ce24:	sub    BYTE PTR ds:0x137b11f,dh
  41ce2a:	ja     0x41cdc1
  41ce2c:	ins    DWORD PTR es:[edi],dx
  41ce2d:	test   al,0xe9
  41ce2f:	sub    DWORD PTR [edx],0x23
  41ce32:	push   ebx
  41ce33:	cmp    bl,BYTE PTR ds:0xf8c2b537
  41ce39:	push   esi
  41ce3a:	adc    eax,0xe3b8de48
  41ce3f:	inc    esi
  41ce40:	xchg   edi,eax
  41ce41:	out    dx,al
  41ce42:	bound  esp,QWORD PTR [edx+0x40]
  41ce45:	loopne 0x41ce61
  41ce47:	pop    es
  41ce48:	rol    ah,1
  41ce4a:	add    ch,BYTE PTR [ebx+0x12]
  41ce4d:	or     eax,0x200fe7bf
  41ce52:	aad    0xac
  41ce54:	sahf   
  41ce55:	es push ecx
  41ce57:	inc    edi
  41ce58:	outs   dx,DWORD PTR ds:[esi]
  41ce59:	scas   al,BYTE PTR es:[edi]
  41ce5a:	or     al,BYTE PTR ds:0xd3c1784c
  41ce60:	pop    eax
  41ce61:	or     ah,cl
  41ce63:	int    0xb1
  41ce65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce66:	icebp  
  41ce67:	ins    DWORD PTR es:[edi],dx
  41ce68:	popa   
  41ce69:	push   ebx
  41ce6a:	adc    dl,BYTE PTR [eax-0x3d]
  41ce6d:	push   0xfffffff9
  41ce6f:	mov    ds,eax
  41ce71:	sub    al,0x52
  41ce73:	test   al,0x3c
  41ce75:	sahf   
  41ce76:	es inc edi
  41ce78:	jns    0x41cee4
  41ce7a:	dec    ebx
  41ce7b:	std    
  41ce7c:	lds    edx,FWORD PTR [ecx-0x420f8ef6]
  41ce82:	xchg   ebp,eax
  41ce83:	add    eax,0xa766bae
  41ce88:	dec    eax
  41ce89:	arpl   WORD PTR [ecx-0x52],bx
  41ce8c:	inc    ecx
  41ce8d:	or     al,0xd3
  41ce8f:	iret   
  41ce90:	in     eax,dx
  41ce91:	push   0xac4f02b5
  41ce96:	popf   
  41ce97:	pop    ebp
  41ce98:	cmp    esp,DWORD PTR [eax]
  41ce9a:	jg     0x41ce71
  41ce9c:	cmc    
  41ce9d:	add    al,0x4
  41ce9f:	gs jl  0x41cef5
  41cea2:	repz mov edx,0xac3af98a
  41cea8:	xchg   ecx,eax
  41cea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceaa:	or     ch,BYTE PTR [ecx]
  41ceac:	shl    BYTE PTR [ecx-0x92b2029],cl
  41ceb2:	add    dl,BYTE PTR [ecx]
  41ceb4:	push   ss
  41ceb5:	ja     0x41cf34
  41ceb7:	(bad)  
  41ceb8:	xor    al,al
  41ceba:	in     al,0x6d
  41cebc:	xor    al,0x22
  41cebe:	adc    cl,BYTE PTR [edi]
  41cec0:	pop    esi
  41cec1:	sbb    dl,cl
  41cec3:	fidiv  WORD PTR [esi+0x7531ab68]
  41cec9:	xchg   esi,eax
  41ceca:	sub    esp,ebx
  41cecc:	(bad)  [ebx-0x3b]
  41cecf:	outs   dx,BYTE PTR ds:[esi]
  41ced0:	jl     0x41ce88
  41ced2:	sub    edx,DWORD PTR [ebp+0x64]
  41ced5:	sub    bl,BYTE PTR [ebp-0x3b]
  41ced8:	add    BYTE PTR [edi],dh
  41ceda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cedb:	out    0x32,al
  41cedd:	cmp    ecx,0xd475407e
  41cee3:	clc    
  41cee4:	inc    eax
  41cee5:	push   ds
  41cee6:	(bad)  
  41cee8:	jg     0x41ceac
  41ceea:	push   eax
  41ceeb:	repz jmp 0x29e5:0x7e50af77
  41cef3:	mov    cl,0x56
  41cef5:	xchg   esp,eax
  41cef6:	leave  
  41cef7:	sbb    BYTE PTR [ebp-0x415644de],bh
  41cefd:	sbb    al,0x7b
  41ceff:	push   eax
  41cf00:	in     eax,0xf7
  41cf02:	in     al,0xb2
  41cf04:	es jo  0x41ce87
  41cf07:	pop    ecx
  41cf08:	(bad)  [esi]
  41cf0a:	jmp    0x64b3:0x51ec2f94
  41cf11:	mov    bl,BYTE PTR ds:0x6c4f67b0
  41cf17:	and    al,0x5e
  41cf19:	add    al,al
  41cf1b:	sahf   
  41cf1c:	aad    0xbd
  41cf1e:	stc    
  41cf1f:	test   eax,0xc6339852
  41cf24:	sub    edx,0x5243b647
  41cf2a:	mov    eax,DWORD PTR [edx-0x3b]
  41cf2d:	ror    DWORD PTR [ecx+esi*1-0x1b],0x5b
  41cf32:	in     al,0x22
  41cf34:	dec    esi
  41cf35:	jmp    0x41cf40
  41cf37:	pop    ebp
  41cf38:	push   0xffffffb8
  41cf3a:	push   ebp
  41cf3b:	std    
  41cf3c:	push   esp
  41cf3d:	xchg   esi,eax
  41cf3e:	shrd   DWORD PTR [esi-0x65ca9cbe],eax,0x2f
  41cf46:	jg     0x41ceef
  41cf48:	(bad)  
  41cf49:	jle    0x41cf4e
  41cf4b:	dec    ebx
  41cf4c:	fnstsw WORD PTR [eax+0x3bff92aa]
  41cf52:	in     al,0xf8
  41cf54:	jmp    0x6356:0x336c11af
  41cf5b:	in     eax,dx
  41cf5c:	cmp    BYTE PTR [eax+eax*8],al
  41cf5f:	mov    ds:0x59e2c210,al
  41cf64:	push   ebp
  41cf65:	out    0x61,al
  41cf67:	out    0x47,al
  41cf69:	test   DWORD PTR [ecx+edx*2+0x1d],0xf5bafa1c
  41cf71:	ret    0xb067
  41cf74:	iret   
  41cf75:	sub    al,0xa8
  41cf77:	dec    ecx
  41cf78:	adc    DWORD PTR [esi+0x6fee3b3],edx
  41cf7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf7f:	xor    esp,DWORD PTR [edx-0xa]
  41cf82:	and    cl,BYTE PTR [ebx]
  41cf84:	ins    DWORD PTR es:[edi],dx
  41cf85:	jnp    0x41cf95
  41cf87:	js     0x41cf16
  41cf89:	and    BYTE PTR [ecx],bl
  41cf8b:	sahf   
  41cf8c:	in     al,0x1f
  41cf8e:	mov    ecx,0x6cf63358
  41cf93:	ret    0x3ff3
  41cf96:	retf   0x8603
  41cf99:	iret   
  41cf9a:	daa    
  41cf9b:	sub    eax,0x2a111286
  41cfa0:	pop    eax
  41cfa1:	sahf   
  41cfa2:	adc    DWORD PTR [edx+0x2b],0x3a
  41cfa6:	out    dx,eax
  41cfa7:	push   edi
  41cfa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfa9:	ds and al,0x81
  41cfac:	stos   DWORD PTR es:[edi],eax
  41cfad:	xchg   esi,eax
  41cfae:	pop    eax
  41cfaf:	jae    0x41cf5b
  41cfb1:	cli    
  41cfb2:	lahf   
  41cfb3:	loopne 0x41d025
  41cfb5:	or     ah,BYTE PTR [esi-0x7f]
  41cfb8:	or     al,0x59
  41cfba:	ins    DWORD PTR es:[edi],dx
  41cfbb:	fldenv [edi]
  41cfbd:	jmp    0xe7f3e4de
  41cfc2:	sbb    eax,0x38faf02c
  41cfc7:	sti    
  41cfc8:	test   BYTE PTR [esi+0x43],dl
  41cfcb:	mov    esp,0x1e767db5
  41cfd0:	push   esp
  41cfd1:	mov    ebx,0xfcef99cc
  41cfd6:	jg     0x41cfbe
  41cfd8:	(bad)  
  41cfd9:	out    0x66,al
  41cfdb:	outs   dx,BYTE PTR ds:[esi]
  41cfdc:	pop    es
  41cfdd:	mov    esp,0x7846fd29
  41cfe2:	mov    esi,0xdf614956
  41cfe7:	(bad)  
  41cfe8:	into   
  41cfe9:	xchg   ebp,eax
  41cfea:	cld    
  41cfeb:	popf   
  41cfec:	cmp    eax,0x87bac455
  41cff1:	test   al,0x53
  41cff3:	xchg   BYTE PTR [edx+0x15],dl
  41cff6:	mov    ebp,0xa2d68211
  41cffb:	sub    bl,al
  41cffd:	pop    ebp
  41cffe:	adc    al,0xdb
  41d000:	js     0x41d009
  41d002:	add    eax,0xb31e776
  41d007:	loopne 0x41d012
  41d009:	xchg   ebp,eax
  41d00a:	sub    al,0x51
  41d00c:	and    BYTE PTR [edx-0x6f],dl
  41d00f:	xchg   DWORD PTR [esi-0x28fbdaa2],edx
  41d015:	test   al,0x6d
  41d017:	xchg   esi,eax
  41d019:	cmp    BYTE PTR [ecx-0x6b17d8c8],ah
  41d01f:	xlat   BYTE PTR ds:[ebx]
  41d020:	sbb    edi,0x4d
  41d023:	loopne 0x41d061
  41d025:	jmp    0x41d047
  41d027:	add    DWORD PTR [eax+ebx*2-0x59a2573],esi
  41d02e:	call   DWORD PTR [esi-0x24]
  41d031:	jb     0x41cff6
  41d033:	xor    eax,edi
  41d035:	daa    
  41d036:	pop    esp
  41d037:	repz les edi,FWORD PTR [ebp+0x8]
  41d03b:	js     0x41d087
  41d03d:	xchg   ecx,eax
  41d03e:	addr16 push esp
  41d040:	add    bh,bl
  41d042:	add    BYTE PTR [esi+0x5f],0x86
  41d046:	test   al,0x32
  41d048:	or     eax,0x69b770f2
  41d04d:	inc    ecx
  41d04e:	push   cs
  41d04f:	ja     0x41d054
  41d051:	cld    
  41d052:	icebp  
  41d053:	inc    edx
  41d054:	mov    ds:0x52a81813,al
  41d059:	push   ss
  41d05a:	out    dx,eax
  41d05b:	mov    ebx,0x9435af5a
  41d060:	jg     0x41d0ac
  41d062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d063:	sbb    eax,0x7eb05581
  41d068:	pushf  
  41d069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d06a:	add    ch,BYTE PTR [edx+esi*2]
  41d06d:	lock loope 0x41d086
  41d070:	lahf   
  41d071:	scas   eax,DWORD PTR es:[edi]
  41d072:	inc    esi
  41d073:	pop    esp
  41d074:	adc    ch,BYTE PTR [ebx-0x80]
  41d077:	adc    dl,dh
  41d079:	dec    esp
  41d07a:	add    BYTE PTR [ebx],dh
  41d07c:	shl    DWORD PTR [eax],0xcb
  41d07f:	outs   dx,DWORD PTR ds:[esi]
  41d080:	in     al,0xa7
  41d082:	lds    ecx,FWORD PTR [edi+0x4394360f]
  41d088:	mov    bl,0xc8
  41d08a:	or     ecx,DWORD PTR [eax]
  41d08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d08d:	(bad)  
  41d08e:	mov    dh,0xbb
  41d090:	fs pop esp
  41d092:	shl    DWORD PTR fs:[esi+0x3],1
  41d096:	bnd js 0x41d0e0
  41d099:	cwde   
  41d09a:	jge    0x41d026
  41d09c:	not    edx
  41d09e:	inc    edi
  41d09f:	dec    esp
  41d0a0:	data16 xlat BYTE PTR ds:[ebx]
  41d0a2:	or     al,0xd9
  41d0a4:	fwait
  41d0a5:	xchg   esp,eax
  41d0a6:	je     0x41d086
  41d0a8:	daa    
  41d0a9:	test   DWORD PTR [esi*1+0xe10175e],0xb726db49
  41d0b4:	xor    eax,ebp
  41d0b6:	icebp  
  41d0b7:	mov    ebx,0x555165ad
  41d0bc:	or     eax,0x2b5edbd6
  41d0c1:	mov    esi,0xe7a53b69
  41d0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0c7:	fstp   DWORD PTR [ebx]
  41d0c9:	(bad)  
  41d0ca:	sub    DWORD PTR cs:[esi-0x7cc4244d],0xffffff93
  41d0d2:	cli    
  41d0d3:	pop    esi
  41d0d4:	jae    0x41d0c6
  41d0d6:	or     al,0xab
  41d0d8:	inc    edx
  41d0d9:	gs mov ebp,0x6612ebcb
  41d0df:	cs aaa 
  41d0e1:	pop    ebx
  41d0e2:	or     al,0x23
  41d0e4:	test   BYTE PTR [ecx],cl
  41d0e6:	imul   ebx,DWORD PTR [ebp+eiz*8+0x483b1870],0xd98b0e85
  41d0f1:	dec    edx
  41d0f2:	and    DWORD PTR [eax],0xd353c398
  41d0f8:	fstp   TBYTE PTR [edi+0x49]
  41d0fb:	lods   al,BYTE PTR ds:[esi]
  41d0fc:	or     eax,0xfabe0328
  41d101:	push   es
  41d102:	rcr    DWORD PTR [esi],cl
  41d104:	mov    dl,0xaa
  41d106:	xor    DWORD PTR [ecx-0x4e],eax
  41d109:	and    eax,0x65fa2d1b
  41d10e:	sbb    bh,dl
  41d110:	fisttp QWORD PTR [ecx+0x7f]
  41d113:	nop
  41d114:	and    al,0xbd
  41d116:	in     eax,dx
  41d117:	pushf  
  41d118:	dec    edi
  41d119:	mov    edx,0x38238bc7
  41d11e:	inc    ecx
  41d11f:	(bad)  
  41d120:	(bad)  
  41d121:	adc    bl,bh
  41d123:	aaa    
  41d124:	or     edi,ebx
  41d126:	xchg   ecx,eax
  41d127:	inc    eax
  41d128:	lea    edi,[ecx+0x67]
  41d12b:	call   0xd120dfb1
  41d130:	cmp    eax,DWORD PTR [ebx+0x6555b827]
  41d136:	rol    BYTE PTR [edx+0x3f7df0d2],cl
  41d13c:	mov    esp,0x7c807907
  41d141:	xor    dl,BYTE PTR [edx]
  41d143:	imul   esp,DWORD PTR [edx+0xf],0x44
  41d147:	sbb    al,BYTE PTR [eax]
  41d149:	ins    DWORD PTR es:[edi],dx
  41d14a:	call   FWORD PTR [esi+0x49]
  41d14d:	sbb    esp,DWORD PTR [ebp+0x3f]
  41d150:	mov    ebp,0xc6799684
  41d155:	cwde   
  41d156:	xchg   esi,eax
  41d157:	mov    edi,0xa35342e7
  41d15c:	push   esi
  41d15d:	lods   al,BYTE PTR ds:[esi]
  41d15f:	inc    ebx
  41d160:	cmp    edi,edx
  41d162:	mov    cl,ah
  41d164:	mov    ds:0x9c17a022,al
  41d169:	sub    eax,edx
  41d16b:	(bad)  
  41d16c:	ja     0x41d1cf
  41d16e:	(bad)  
  41d16f:	nop
  41d170:	loope  0x41d11f
  41d172:	loope  0x41d10e
  41d174:	addr16 (bad) 
  41d177:	jbe    0x41d14b
  41d179:	or     al,0xeb
  41d17b:	lds    esp,FWORD PTR [ecx]
  41d17d:	xchg   edx,eax
  41d17e:	push   ecx
  41d17f:	inc    esp
  41d180:	idiv   DWORD PTR [ebp+esi*2-0x53]
  41d184:	xchg   esp,eax
  41d185:	mov    eax,ds:0xf73e08d
  41d18a:	mov    eax,0x8d5ca2aa
  41d18f:	aaa    
  41d190:	pop    ds
  41d191:	jge    0x41d163
  41d193:	sub    ch,bh
  41d195:	jmp    0x8904:0x2fa994d2
  41d19c:	ja     0x41d151
  41d19e:	pusha  
  41d19f:	inc    DWORD PTR [esi+edx*4]
  41d1a2:	(bad)  
  41d1a3:	jno    0x41d223
  41d1a5:	ja     0x41d12d
  41d1a7:	push   cs
  41d1a8:	loop   0x41d1db
  41d1aa:	ins    BYTE PTR es:[edi],dx
  41d1ab:	(bad)  
  41d1ad:	std    
  41d1ae:	inc    edi
  41d1af:	test   BYTE PTR [esi],dl
  41d1b1:	pop    esp
  41d1b2:	mov    ecx,0x1e520120
  41d1b7:	sti    
  41d1b8:	lds    ebp,FWORD PTR [edi+0x1f]
  41d1bb:	xchg   ecx,eax
  41d1bc:	nop
  41d1bd:	scas   eax,DWORD PTR es:[edi]
  41d1be:	lock xchg ebp,ebx
  41d1c1:	sub    ecx,DWORD PTR [edi-0x76]
  41d1c4:	cmp    eax,0x28d05f66
  41d1c9:	sbb    ebp,DWORD PTR [esi-0x7b]
  41d1cc:	xchg   edi,eax
  41d1cd:	sbb    ah,BYTE PTR [esi+0x29]
  41d1d0:	jno    0x41d24c
  41d1d2:	icebp  
  41d1d3:	pusha  
  41d1d4:	bound  edi,QWORD PTR [edi]
  41d1d6:	jns    0x41d15a
  41d1d8:	loopne 0x41d1b3
  41d1da:	cmp    BYTE PTR [esi+0x77cad515],dl
  41d1e0:	pop    esp
  41d1e1:	inc    ecx
  41d1e2:	test   eax,ecx
  41d1e4:	or     al,0xdc
  41d1e6:	pop    eax
  41d1e7:	test   esi,edx
  41d1e9:	mov    bh,0xde
  41d1eb:	pushf  
  41d1ec:	add    ebp,edx
  41d1ee:	fwait
  41d1ef:	repnz inc edx
  41d1f1:	add    BYTE PTR [edi-0x7605df2a],dl
  41d1f7:	imul   BYTE PTR [eax+0x3e]
  41d1fa:	in     eax,dx
  41d1fb:	mov    al,0x7b
  41d1fd:	sar    al,0xe2
  41d200:	mov    dl,dl
  41d202:	jb     0x41d1cf
  41d204:	daa    
  41d205:	jmp    0xa381:0x3d03f000
  41d20c:	sbb    esi,DWORD PTR [edx]
  41d20e:	ficomp WORD PTR [ecx-0x62b8662a]
  41d214:	fs dec ebp
  41d216:	popa   
  41d217:	inc    ecx
  41d218:	dec    eax
  41d219:	dec    edx
  41d21a:	jns    0x41d226
  41d21c:	shl    BYTE PTR [eax],cl
  41d21e:	adc    BYTE PTR [ebp-0x73ab8119],ch
  41d224:	inc    esp
  41d225:	mov    dh,0xfe
  41d227:	mov    eax,0xc2d44745
  41d22c:	fdivrp st(6),st
  41d22e:	pop    edi
  41d22f:	mov    eax,DWORD PTR [eax-0x7]
  41d232:	jae    0x41d288
  41d234:	shl    DWORD PTR [esi+0x4e],cl
  41d237:	out    dx,eax
  41d238:	clc    
  41d239:	std    
  41d23a:	pushf  
  41d23b:	xlat   BYTE PTR ds:[ebx]
  41d23c:	mov    bh,0xe8
  41d23e:	repz mov bh,0x80
  41d241:	pop    esi
  41d242:	lds    edx,FWORD PTR [edx+0x38]
  41d245:	clc    
  41d246:	and    eax,0xd304ae67
  41d24b:	jo     0x41d256
  41d24d:	lea    ebp,[ecx]
  41d24f:	dec    esi
  41d250:	push   esi
  41d251:	fwait
  41d252:	lods   eax,DWORD PTR ds:[esi]
  41d253:	cdq    
  41d254:	in     eax,dx
  41d255:	add    bl,bh
  41d257:	push   edx
  41d258:	and    eax,0x7ea41b91
  41d25d:	mov    edi,DWORD PTR [ecx+0xd]
  41d260:	jne    0x41d23c
  41d262:	sub    al,0xe
  41d264:	fld    st(2)
  41d266:	xchg   edx,eax
  41d267:	mov    eax,0xd0d195bf
  41d26c:	jge    0x41d291
  41d26e:	popf   
  41d26f:	scas   al,BYTE PTR es:[edi]
  41d270:	lds    edi,FWORD PTR [eax+0x27]
  41d273:	or     DWORD PTR [edx+0x7b0f2a8a],ebp
  41d279:	inc    esp
  41d27a:	fdiv   DWORD PTR [ecx]
  41d27c:	inc    esi
  41d27d:	pop    ecx
  41d27e:	cli    
  41d27f:	ja     0x41d25a
  41d281:	add    DWORD PTR [ecx+ebx*8-0x312ef373],0xf5d345b1
  41d28c:	scas   al,BYTE PTR es:[edi]
  41d28d:	jle    0x41d23f
  41d28f:	popf   
  41d290:	mov    ebp,0xd13603b4
  41d295:	(bad)  
  41d296:	jns    0x41d2a3
  41d298:	das    
  41d299:	out    0x5f,eax
  41d29b:	daa    
  41d29c:	mov    bl,0x27
  41d29e:	xor    eax,0xd1f037d5
  41d2a3:	retf   0x1b7f
  41d2a6:	cmp    esp,DWORD PTR [eax-0x2d14a91a]
  41d2ac:	cmp    esi,DWORD PTR [eax]
  41d2ae:	not    BYTE PTR [edx+0x52]
  41d2b1:	out    0x34,al
  41d2b3:	sbb    eax,0x2ab7b0a6
  41d2b8:	jl     0x41d2b9
  41d2ba:	add    eax,0x39b95b8
  41d2bf:	aam    0x2c
  41d2c1:	or     DWORD PTR [ecx],ebx
  41d2c3:	push   eax
  41d2c4:	jl     0x41d2f7
  41d2c6:	sbb    eax,0x92432027
  41d2cb:	add    DWORD PTR [ecx+0x23],esp
  41d2ce:	push   DWORD PTR [eax+esi*8]
  41d2d1:	jge    0x41d313
  41d2d3:	mov    ds:0x5f72658b,al
  41d2d8:	addr16 jb 0x41d280
  41d2db:	adc    BYTE PTR [ebx],cl
  41d2dd:	mov    eax,DWORD PTR [edx+0xebed8b9]
  41d2e3:	mov    DWORD PTR [esi-0x7d],ecx
  41d2e6:	hlt    
  41d2e7:	sbb    DWORD PTR ds:0xf88c3e6c,edx
  41d2ed:	fnop   
  41d2ef:	mov    cl,0xc4
  41d2f1:	sub    DWORD PTR [ebp-0x5e],0x4a25ab0
  41d2f8:	nop
  41d2f9:	jnp    0x41d2a9
  41d2fb:	push   ecx
  41d2fc:	icebp  
  41d2fd:	mov    dl,0xc
  41d2ff:	inc    eax
  41d300:	retf   
  41d301:	(bad)  
  41d302:	mov    cs,WORD PTR [esi]
  41d304:	inc    esi
  41d305:	int3   
  41d306:	sbb    DWORD PTR [esi+0x6a],edi
  41d309:	stos   DWORD PTR es:[edi],eax
  41d30a:	mov    bh,0x3e
  41d30c:	scas   eax,DWORD PTR es:[edi]
  41d30d:	pop    ss
  41d30e:	cdq    
  41d30f:	cmp    DWORD PTR [eax+0x4edf65d8],ebp
  41d315:	data16 daa 
  41d317:	out    dx,eax
  41d318:	inc    eax
  41d319:	inc    edi
  41d31a:	iret   
  41d31b:	iret   
  41d31c:	pop    esp
  41d31d:	jb     0x41d33c
  41d31f:	ret    0x2b3e
  41d322:	mov    bh,0x19
  41d324:	jge    0x41d33c
  41d326:	jae    0x41d2fb
  41d328:	in     al,0x54
  41d32a:	mov    eax,ds:0xc9a76404
  41d32f:	inc    ebp
  41d330:	fs inc ebp
  41d332:	lock pop edi
  41d334:	dec    ebp
  41d335:	inc    ecx
  41d336:	add    al,0x6f
  41d338:	pop    ss
  41d339:	or     eax,0x6e5df686
  41d33e:	sub    esi,DWORD PTR [ebx+0x2ff1f9a8]
  41d344:	push   cs
  41d345:	jbe    0x41d3b8
  41d347:	inc    edi
  41d348:	test   BYTE PTR [edi+0x18],dh
  41d34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d34c:	retf   
  41d34d:	neg    ebx
  41d34f:	das    
  41d350:	pop    ecx
  41d351:	or     DWORD PTR [esi],ebx
  41d353:	in     eax,0x18
  41d355:	repnz cmc 
  41d357:	or     BYTE PTR [edx+0x3a],ah
  41d35a:	imul   ecx,DWORD PTR [eax],0x11
  41d35d:	sub    eax,0x265dec3b
  41d362:	inc    edx
  41d363:	test   DWORD PTR ds:[ecx-0x3d1dbda5],esi
  41d36a:	mov    cl,0xad
  41d36c:	scas   al,BYTE PTR es:[edi]
  41d36d:	jg     0x41d33b
  41d36f:	mov    ebx,0xe9c95523
  41d374:	pop    ds
  41d375:	adc    BYTE PTR [esi+eiz*2],cl
  41d378:	add    DWORD PTR [edx+0x3],0x47
  41d37c:	jmp    0x5e71:0xcf19c211
  41d383:	push   ebx
  41d384:	sbb    ebx,edi
  41d386:	sbb    al,ch
  41d388:	(bad)  
  41d38a:	mov    esp,0x6ec97639
  41d38f:	sti    
  41d390:	xor    ebp,DWORD PTR [eax]
  41d392:	pop    edi
  41d393:	lea    ebx,[ecx]
  41d395:	pop    edx
  41d396:	std    
  41d397:	jmp    0x6fdd:0xdcbf33c9
  41d39e:	sbb    edi,edi
  41d3a0:	les    ebp,FWORD PTR [esi-0x554f3e22]
  41d3a6:	push   esi
  41d3a7:	push   cs
  41d3a8:	jbe    0x41d349
  41d3aa:	add    ch,ch
  41d3ac:	pop    ecx
  41d3ad:	loop   0x41d348
  41d3af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3b0:	sbb    DWORD PTR [esi+0x27],edi
  41d3b3:	mov    BYTE PTR [esi+0x6a576c8a],0xc4
  41d3ba:	or     edx,DWORD PTR [ebx]
  41d3bc:	and    eax,0x2622bb3e
  41d3c1:	add    eax,0xcc81a482
  41d3c6:	jle    0x7eaff23a
  41d3cc:	(bad)  
  41d3cd:	mov    bl,0x2
  41d3cf:	aam    0xd2
  41d3d1:	sub    DWORD PTR [esi],esi
  41d3d3:	in     eax,0x61
  41d3d5:	jle    0x41d3f9
  41d3d7:	and    bh,BYTE PTR [eax+edx*4]
  41d3da:	ret    
  41d3db:	add    al,0x5e
  41d3dd:	cmp    BYTE PTR [ecx+ecx*4+0x45],al
  41d3e1:	cmp    bh,BYTE PTR [ebx+0x18ed0620]
  41d3e7:	test   BYTE PTR [esi-0x5a],0x26
  41d3eb:	ret    0x9f42
  41d3ee:	lods   eax,DWORD PTR ds:[esi]
  41d3ef:	cmp    cl,BYTE PTR [ebp-0x6cb10b23]
  41d3f5:	mov    al,ds:0x50d4c8f4
  41d3fa:	or     eax,0x6bf36efb
  41d3ff:	call   0x69d338db
  41d404:	lods   eax,DWORD PTR ds:[esi]
  41d405:	clc    
  41d406:	push   es
  41d407:	dec    ebx
  41d408:	(bad)  
  41d409:	mov    cr4,esi
  41d40c:	mov    bh,0x90
  41d40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d40f:	jns    0x41d428
  41d411:	pusha  
  41d412:	push   cs
  41d413:	or     DWORD PTR [edi],ecx
  41d415:	push   es
  41d416:	jmp    0x46c6:0xe1ee386b
  41d41d:	int3   
  41d41e:	add    al,0xa1
  41d420:	popa   
  41d421:	mov    ah,0x3e
  41d423:	gs in  al,dx
  41d425:	sbb    DWORD PTR [ebp-0x64798cb8],0x36
  41d42c:	pop    ebp
  41d42d:	xchg   ebp,eax
  41d42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d42f:	outs   dx,BYTE PTR ds:[esi]
  41d430:	mov    BYTE PTR [edx],dl
  41d432:	mov    eax,gs:0xce8dc93b
  41d438:	iret   
  41d439:	test   al,0xca
  41d43b:	(bad)  
  41d43c:	test   DWORD PTR [ecx+0x64],edx
  41d43f:	jb     0x41d40c
  41d441:	in     eax,dx
  41d442:	mov    ah,0xb8
  41d444:	jno    0x41d451
  41d446:	mov    ds:0xcdff1b1a,al
  41d44b:	stos   BYTE PTR es:[edi],al
  41d44c:	das    
  41d44d:	add    DWORD PTR [ebx+edi*2-0x37d85502],0x44042cdc
  41d458:	push   edx
  41d459:	inc    esp
  41d45a:	loop   0x41d410
  41d45c:	or     bl,dl
  41d45e:	je     0x41d41b
  41d460:	pop    es
  41d461:	pusha  
  41d462:	fiadd  WORD PTR [ebx+0x77ab2d7a]
  41d468:	out    dx,eax
  41d469:	mov    ds:0x3a7a9de8,eax
  41d46e:	jp     0x41d456
  41d470:	adc    ebp,DWORD PTR [edi]
  41d472:	cmp    BYTE PTR [eax],dl
  41d474:	jecxz  0x41d400
  41d476:	dec    esp
  41d477:	add    eax,0xc64d6f25
  41d47c:	xor    ch,dl
  41d47e:	mov    bl,0xb9
  41d480:	mov    ecx,DWORD PTR [edx]
  41d482:	inc    eax
  41d483:	(bad)  
  41d484:	xchg   esi,eax
  41d485:	sbb    DWORD PTR [ebp+0x2d],eax
  41d488:	jmp    0x17f801ff
  41d48d:	mov    ?,WORD PTR [ebx]
  41d48f:	popa   
  41d490:	and    DWORD PTR [ebx+0x1b2439ce],esi
  41d496:	jmp    0x41d4ea
  41d498:	sub    dl,bl
  41d49a:	sbb    eax,0x697aa36b
  41d49f:	std    
  41d4a0:	mov    dl,0x2
  41d4a2:	push   0x24537e8e
  41d4a7:	xor    edi,ebx
  41d4a9:	addr16 adc esp,0x9a86174a
  41d4b0:	leave  
  41d4b1:	push   esi
  41d4b2:	fwait
  41d4b3:	or     BYTE PTR [edi],ah
  41d4b5:	jge    0x41d50b
  41d4b7:	push   ecx
  41d4b8:	out    dx,eax
  41d4b9:	jb     0x41d4d5
  41d4bb:	add    al,BYTE PTR [ebx+esi*4-0x7e]
  41d4bf:	add    BYTE PTR [eax+0x189bb73d],bh
  41d4c5:	retf   
  41d4c6:	shl    DWORD PTR [eax],1
  41d4c8:	daa    
  41d4c9:	sar    edi,0xa1
  41d4cc:	adc    DWORD PTR [ebx],edx
  41d4ce:	add    edx,DWORD PTR [edi+eiz*2]
  41d4d1:	push   ds
  41d4d2:	sahf   
  41d4d3:	add    ecx,eax
  41d4d5:	sbb    ah,ah
  41d4d7:	jo     0x41d4c7
  41d4d9:	call   0xb6f:0x75c19031
  41d4e0:	mov    edx,0x9ce2f211
  41d4e5:	loopne 0x41d54e
  41d4e7:	ret    
  41d4e8:	fld    QWORD PTR [edx-0x20]
  41d4eb:	lods   al,BYTE PTR ds:[esi]
  41d4ec:	jle    0x41d55c
  41d4ee:	cli    
  41d4ef:	addr16 (bad) 
  41d4f1:	psubd  mm3,QWORD PTR [eax-0x1c]
  41d4f5:	pop    ds
  41d4f6:	sub    BYTE PTR [esp+ebp*2-0x11],cl
  41d4fa:	dec    edi
  41d4fb:	pop    esp
  41d4fc:	pusha  
  41d4fd:	pusha  
  41d4fe:	jo     0x41d527
  41d500:	mov    ecx,0x8cd06c4c
  41d505:	sub    dh,al
  41d507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d508:	sub    al,0x51
  41d50a:	sbb    dh,BYTE PTR [ebx]
  41d50c:	fnstcw WORD PTR [ecx-0x14]
  41d50f:	ret    
  41d510:	adc    DWORD PTR [eax-0x39998931],ecx
  41d516:	not    dh
  41d518:	push   ds
  41d519:	in     eax,dx
  41d51a:	or     DWORD PTR [eax-0x41],ebx
  41d51d:	stc    
  41d51e:	mov    cl,0xc6
  41d520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d521:	mov    edi,0xf4372c06
  41d526:	dec    esi
  41d527:	pop    edi
  41d528:	dec    esp
  41d529:	inc    ax
  41d52b:	popf   
  41d52c:	and    ah,BYTE PTR [edi+edx*2-0x15]
  41d530:	pop    es
  41d531:	sar    eax,1
  41d533:	gs xchg ecx,eax
  41d535:	xor    dl,BYTE PTR [eax]
  41d537:	xchg   ebp,eax
  41d538:	mov    esi,0xaac3b1e0
  41d53d:	cs in  eax,0x72
  41d540:	cld    
  41d541:	sar    BYTE PTR [edx+eiz*1],1
  41d544:	hlt    
  41d545:	mov    esi,0x603aec0
  41d54a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d54b:	adc    edi,esp
  41d54d:	jb     0x41d578
  41d54f:	retf   0xcb1f
  41d552:	adc    al,0xd6
  41d554:	adc    edx,DWORD PTR [ebx]
  41d556:	add    DWORD PTR [esi],0x99b0d968
  41d55c:	cmp    ch,BYTE PTR [ecx]
  41d55e:	loop   0x41d578
  41d560:	inc    ebx
  41d561:	mov    ebp,0xe9d6464d
  41d566:	(bad)  
  41d567:	(bad)  
  41d568:	adc    esp,DWORD PTR [edx-0xcb2c8d9]
  41d56e:	adc    eax,0x353e10ba
  41d573:	xchg   edi,eax
  41d574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d575:	and    DWORD PTR [eax-0x3e],edx
  41d578:	lods   al,BYTE PTR ds:[esi]
  41d579:	mov    ebp,0xe41cfb59
  41d57e:	out    dx,al
  41d57f:	inc    ecx
  41d581:	sub    eax,0x9e3ffa12
  41d586:	addr16 and eax,0x81b4a6bd
  41d58c:	imul   esi,DWORD PTR [edi+0x3b47a287],0xfffffff8
  41d593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d594:	and    al,BYTE PTR [ecx+0x53]
  41d597:	cmc    
  41d598:	js     0x41d562
  41d59a:	and    ch,cl
  41d59c:	xor    bh,cl
  41d59e:	xchg   dh,ah
  41d5a0:	stc    
  41d5a1:	inc    eax
  41d5a2:	jnp    0x41d5d5
  41d5a4:	shl    DWORD PTR ds:0x6a9e2835,cl
  41d5aa:	xchg   edi,eax
  41d5ab:	loop   0x41d5dd
  41d5ad:	mov    ebx,0x6bf1886c
  41d5b2:	test   esp,esp
  41d5b4:	jb     0x41d607
  41d5b6:	pushf  
  41d5b7:	gs ins BYTE PTR es:[edi],dx
  41d5b9:	jecxz  0x41d562
  41d5bb:	retf   
  41d5bc:	inc    ebx
  41d5bd:	hlt    
  41d5be:	lods   al,BYTE PTR ds:[esi]
  41d5bf:	addr16 hlt 
  41d5c1:	dec    edx
  41d5c2:	add    al,0xf
  41d5c4:	in     eax,0x97
  41d5c6:	div    ch
  41d5c8:	dec    ebp
  41d5c9:	jmp    0x41d641
  41d5cb:	mov    DWORD PTR [esi-0x6d],eax
  41d5ce:	call   0xd52c:0x6353a369
  41d5d5:	mov    edx,0xb85d21a1
  41d5da:	push   ss
  41d5db:	jle    0x41d58b
  41d5dd:	xchg   edi,eax
  41d5de:	cwde   
  41d5df:	aam    0x45
  41d5e1:	xchg   esp,eax
  41d5e2:	ror    BYTE PTR ds:[esi],cl
  41d5e5:	jg     0x41d5f0
  41d5e7:	ins    DWORD PTR es:[edi],dx
  41d5e8:	push   edi
  41d5e9:	jp     0x41d63f
  41d5eb:	xchg   edx,eax
  41d5ec:	(bad)  
  41d5ed:	sub    ebp,DWORD PTR [ebp+0x65]
  41d5f0:	in     al,dx
  41d5f1:	dec    eax
  41d5f2:	fcom   QWORD PTR [esi+0xb]
  41d5f5:	sub    BYTE PTR [ebx+0x21e99dd7],ch
  41d5fb:	fs aad 0xbd
  41d5fe:	mov    edi,0xcc61e0ba
  41d603:	mov    sp,0xa6ed
  41d607:	dec    esi
  41d608:	inc    edi
  41d609:	ret    
  41d60a:	jnp    0x41d68a
  41d60c:	out    0xe3,eax
  41d60e:	aaa    
  41d60f:	sbb    BYTE PTR [ebx-0x40],ah
  41d612:	jmp    0xb912:0x4cf7ea34
  41d619:	data16 jg 0x41d5bd
  41d61c:	stos   BYTE PTR es:[edi],al
  41d61d:	add    eax,edx
  41d61f:	add    ebx,DWORD PTR [eax]
  41d621:	in     al,0xdf
  41d623:	(bad)  
  41d624:	push   ebx
  41d625:	loopne 0x41d5bc
  41d627:	mov    ecx,0x99d3091b
  41d62c:	jge    0x41d67e
  41d62e:	mov    bh,0xd3
  41d630:	das    
  41d631:	jno    0x41d657
  41d633:	arpl   WORD PTR [ecx-0x32],di
  41d636:	mov    edx,0x96317eaf
  41d63b:	ror    BYTE PTR [ebx-0x1f],cl
  41d63e:	int    0x77
  41d640:	sbb    eax,0xd2e4079d
  41d645:	icebp  
  41d646:	xchg   DWORD PTR [ebx-0x3f],edx
  41d649:	jle    0x41d644
  41d64b:	in     al,dx
  41d64c:	daa    
  41d64d:	inc    BYTE PTR [edi-0x59]
  41d650:	aam    0xca
  41d652:	jmp    0xe505bbc2
  41d657:	mov    ch,BYTE PTR [ebp+esi*1+0x50]
  41d65b:	pop    ds
  41d65c:	hlt    
  41d65d:	(bad)  
  41d65e:	iret   
  41d65f:	and    DWORD PTR [edx+ecx*2-0x2852822c],ecx
  41d666:	call   0x47a6:0x74ce45ee
  41d66d:	fs cld 
  41d66f:	sub    al,0xba
  41d671:	cmp    esp,DWORD PTR [esi+0x53]
  41d674:	xor    eax,0x7be4a07e
  41d679:	loope  0x41d686
  41d67b:	cs retf 0xcc4c
  41d67f:	jno    0x41d6cd
  41d681:	jnp    0x41d6af
  41d683:	cwde   
  41d684:	sbb    al,0x3e
  41d686:	or     BYTE PTR [eax+0x50a513c2],dh
  41d68c:	shl    BYTE PTR [ebx-0x5c],1
  41d68f:	mov    DWORD PTR [ebx+0x66a26000],0x9e990785
  41d699:	sar    BYTE PTR [ebx],0xb6
  41d69c:	(bad)  
  41d69e:	in     al,0x27
  41d6a0:	push   ds
  41d6a1:	fisubr DWORD PTR [ebp+eax*4+0x358bcbef]
  41d6a8:	xchg   ebp,eax
  41d6a9:	add    edx,edi
  41d6ab:	dec    ebx
  41d6ac:	mov    ds:0x1e141d29,eax
  41d6b1:	call   0x8365fb02
  41d6b6:	push   edi
  41d6b7:	adc    ebp,DWORD PTR [ecx+0x5de0c474]
  41d6bd:	aad    0xcf
  41d6bf:	mov    WORD PTR [edi+0x20],gs
  41d6c2:	push   cs
  41d6c3:	mov    di,0xf52
  41d6c7:	jno    0x41d6f3
  41d6c9:	enter  0xb83b,0xc6
  41d6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ce:	or     DWORD PTR [ebx-0x576c3115],eax
  41d6d4:	push   edx
  41d6d5:	mov    bl,0x95
  41d6d7:	cmovp  edi,DWORD PTR [eax-0x57]
  41d6db:	and    al,0x4e
  41d6dd:	push   edi
  41d6de:	xchg   esi,eax
  41d6df:	aaa    
  41d6e0:	fld    DWORD PTR [eax+0x2f6558b]
  41d6e6:	jne    0x41d760
  41d6e8:	jmp    0xe70938d4
  41d6ed:	(bad)  
  41d6ee:	ins    BYTE PTR es:[edi],dx
  41d6ef:	test   eax,0x78b1697
  41d6f4:	ins    BYTE PTR es:[edi],dx
  41d6f5:	adc    al,0xf2
  41d6f7:	pop    esi
  41d6f8:	jmp    0x676a34b1
  41d6fd:	addr16 xchg edi,eax
  41d6ff:	inc    edi
  41d700:	cmc    
  41d701:	gs cdq 
  41d703:	call   0xbbdc:0xfc79e1d0
  41d70a:	add    eax,0xccb2a8fa
  41d70f:	dec    edx
  41d710:	mov    edi,0xe24b2fe1
  41d715:	imul   eax,ecx,0x9be08cd7
  41d71b:	xchg   edi,eax
  41d71c:	cdq    
  41d71d:	mul    DWORD PTR [ebx+0x7b2192d0]
  41d723:	push   ss
  41d724:	idiv   DWORD PTR [edx+0x5d]
  41d727:	dec    edx
  41d728:	mov    ah,0xb9
  41d72a:	popa   
  41d72b:	sbb    BYTE PTR [eax-0x7a3da45a],ah
  41d731:	push   cs
  41d732:	inc    esp
  41d733:	cmp    BYTE PTR [edi],dh
  41d735:	jne    0x41d76d
  41d737:	pop    es
  41d738:	(bad)  
  41d739:	scas   eax,DWORD PTR es:[edi]
  41d73a:	lods   al,BYTE PTR ds:[esi]
  41d73b:	xor    bl,BYTE PTR [edi-0x5]
  41d73e:	out    dx,al
  41d73f:	sbb    eax,0x69
  41d742:	js     0x41d7bb
  41d744:	(bad)  
  41d745:	out    0x46,eax
  41d747:	jg     0x41d6d5
  41d749:	js     0x41d6ff
  41d74b:	dec    ebx
  41d74c:	mov    edx,esp
  41d74e:	fmul   QWORD PTR [ecx+0x55]
  41d751:	or     BYTE PTR [ecx-0x13],0x46
  41d755:	(bad)  
  41d756:	cs popf 
  41d758:	std    
  41d759:	cmp    ebx,DWORD PTR [edx-0x1b1af5f2]
  41d75f:	out    0x86,al
  41d761:	cli    
  41d762:	mov    esi,0x66adaff0
  41d767:	pop    esi
  41d768:	jae    0x41d6f5
  41d76a:	push   ecx
  41d76b:	loopne 0x41d793
  41d76d:	fsubr  QWORD PTR [ebp+0x45f3f234]
  41d773:	in     al,dx
  41d774:	(bad)  
  41d775:	pop    esp
  41d776:	pop    edx
  41d777:	imul   DWORD PTR [eax+0x1816ee81]
  41d77d:	dec    ebx
  41d77e:	into   
  41d77f:	fisttp WORD PTR ds:0x898e43e8
  41d785:	icebp  
  41d786:	sub    BYTE PTR [edi],dh
  41d788:	mov    edi,ebp
  41d78a:	adc    ch,BYTE PTR [ebx+0xb]
  41d78d:	pushf  
  41d78e:	je     0x41d7d6
  41d790:	loopne 0x41d760
  41d792:	sbb    eax,0xef8d1989
  41d797:	fwait
  41d798:	or     cl,BYTE PTR [ebp-0x7d66cce9]
  41d79e:	jge    0x41d7a6
  41d7a0:	xor    eax,0x1a95db05
  41d7a5:	sbb    ch,BYTE PTR [ebp-0x681999]
  41d7ab:	xchg   esi,eax
  41d7ac:	dec    ecx
  41d7ad:	xchg   ah,dh
  41d7af:	pop    esi
  41d7b0:	cmp    BYTE PTR [eax+0x10],bl
  41d7b3:	shr    BYTE PTR [edx],1
  41d7b5:	and    ebp,DWORD PTR [di+0x57]
  41d7b9:	jl     0x41d76f
  41d7bb:	jle    0x41d750
  41d7bd:	loopne 0x41d80a
  41d7bf:	push   edi
  41d7c0:	std    
  41d7c1:	aam    0x61
  41d7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c4:	sbb    eax,0xf44440c
  41d7c9:	mov    edi,0xc950d642
  41d7ce:	stos   DWORD PTR es:[edi],eax
  41d7cf:	jb     0x41d828
  41d7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7d2:	ds xchg edx,eax
  41d7d4:	shl    DWORD PTR [ebp*2-0x6a449e52],cl
  41d7db:	shr    esi,0x54
  41d7de:	xor    al,0xe9
  41d7e0:	shl    al,cl
  41d7e2:	retf   0x3e19
  41d7e5:	ds jmp 0x41d7e3
  41d7e8:	inc    esi
  41d7e9:	or     edx,DWORD PTR [esi+0x19]
  41d7ec:	test   BYTE PTR [ebp-0x38c06f79],dh
  41d7f2:	icebp  
  41d7f3:	push   ds
  41d7f4:	add    ecx,DWORD PTR [ecx+0x32]
  41d7f7:	sbb    esi,ebp
  41d7f9:	nop
  41d7fa:	daa    
  41d7fb:	push   esp
  41d7fc:	popa   
  41d7fd:	xchg   esi,eax
  41d7fe:	adc    BYTE PTR fs:[eax-0x3d],cl
  41d802:	lods   eax,DWORD PTR ds:[esi]
  41d803:	cli    
  41d804:	(bad)  
  41d805:	(bad)
  41d809:	push   ds
  41d80a:	and    ebp,edx
  41d80c:	out    dx,eax
  41d80d:	pusha  
  41d80e:	add    al,0xe7
  41d810:	push   0xc9db61c4
  41d815:	xor    al,0xb5
  41d817:	xchg   ebp,eax
  41d818:	(bad)  
  41d819:	das    
  41d81a:	(bad)  
  41d81b:	sub    al,0xc7
  41d81d:	sbb    DWORD PTR [edi-0x28],esp
  41d820:	inc    edx
  41d821:	jecxz  0x41d859
  41d823:	mov    al,ds:0xf4e57589
  41d828:	ds (bad) 
  41d82a:	jno    0x41d888
  41d82c:	mov    al,0x3
  41d82e:	mov    edx,0x160dc3cc
  41d833:	pop    eax
  41d834:	clc    
  41d835:	int3   
  41d836:	xor    al,0x3
  41d838:	ja     0x41d7cc
  41d83a:	imul   edx,edi,0xcb0948ce
  41d840:	inc    ecx
  41d841:	jecxz  0x41d89f
  41d843:	sbb    bl,bh
  41d845:	das    
  41d846:	fmul   DWORD PTR [edi+0x3966e499]
  41d84c:	jg     0x41d841
  41d84e:	call   0x2dedaa98
  41d853:	(bad)  
  41d854:	aas    
  41d855:	xor    bh,BYTE PTR [edx]
  41d857:	int3   
  41d858:	es push edx
  41d85a:	sbb    bl,cl
  41d85c:	aaa    
  41d85d:	(bad)  
  41d85e:	hlt    
  41d85f:	pop    eax
  41d860:	mov    al,0x5b
  41d862:	imul   ebx,esi,0xffffffb5
  41d865:	ja     0x41d81f
  41d867:	jle    0x41d819
  41d869:	call   0x7ab5:0xcc30bc53
  41d870:	xchg   BYTE PTR [edi+0x43187cd2],ch
  41d876:	clc    
  41d877:	daa    
  41d878:	inc    esi
  41d879:	in     eax,dx
  41d87a:	popf   
  41d87b:	call   0xc4e3:0x76ae821f
  41d882:	out    0xd0,eax
  41d884:	mov    cl,0x23
  41d886:	or     eax,0x202238a6
  41d88b:	inc    ebx
  41d88c:	adc    al,0xfe
  41d88e:	dec    eax
  41d890:	jmp    0xbeff19f8
  41d895:	(bad)  
  41d896:	jmp    FWORD PTR [esi*4-0x3d51bcb7]
  41d89d:	data16 (bad) 
  41d89f:	jmp    0x4fd8eb39
  41d8a4:	popf   
  41d8a5:	sub    edi,DWORD PTR [edi]
  41d8a7:	lods   al,BYTE PTR ds:[esi]
  41d8a8:	test   DWORD PTR [edx],esp
  41d8aa:	sbb    BYTE PTR [eax],dh
  41d8ac:	in     al,dx
  41d8ad:	jbe    0x41d882
  41d8af:	lds    ecx,FWORD PTR [ebx]
  41d8b1:	mov    esp,DWORD PTR [esi+edx*8]
  41d8b4:	and    DWORD PTR [edi+edi*2],edi
  41d8b7:	adc    al,0xa4
  41d8b9:	add    ebx,DWORD PTR [ecx+0xb4e40c3]
  41d8bf:	inc    edi
  41d8c0:	clc    
  41d8c1:	cmp    DWORD PTR [edx-0x7e],edx
  41d8c4:	sub    BYTE PTR [eax+0x4a],al
  41d8c7:	ds mov edx,0x338dbda0
  41d8cd:	or     ebx,ebx
  41d8cf:	jnp    0x41d947
  41d8d1:	push   esp
  41d8d2:	aad    0x74
  41d8d4:	or     al,0x4e
  41d8d6:	test   eax,0xc588d071
  41d8db:	jo     0x41d91c
  41d8dd:	add    BYTE PTR [ebp+0x30],0x90
  41d8e1:	shl    esi,0x87
  41d8e4:	dec    esi
  41d8e5:	div    BYTE PTR [edi+esi*1]
  41d8e8:	(bad)  
  41d8e9:	jmp    0x4828761b
  41d8ee:	mov    ds:0xe3a3ffca,eax
  41d8f3:	mov    WORD PTR [esi],es
  41d8f5:	and    eax,0x5833393f
  41d8fa:	fmul   DWORD PTR [ecx+0x3190701]
  41d900:	int    0x5e
  41d902:	push   ds
  41d903:	enter  0xeda,0x66
  41d907:	sub    dl,al
  41d909:	icebp  
  41d90a:	sub    eax,0x6abfcb79
  41d90f:	pop    ss
  41d910:	adc    DWORD PTR [esp+ebx*2+0x11ac9cbc],ecx
  41d917:	xor    al,0x1b
  41d919:	and    eax,0xbb27e4c1
  41d91e:	sbb    ebp,DWORD PTR [ebx-0x4e3363fd]
  41d924:	loop   0x41d8c9
  41d926:	xchg   ebx,eax
  41d927:	loop   0x41d91f
  41d929:	jle    0x41d8e9
  41d92b:	dec    ebp
  41d92c:	pushw  0xfff4
  41d92f:	mov    bl,BYTE PTR [eax+0x44]
  41d932:	lahf   
  41d933:	outs   dx,BYTE PTR ds:[esi]
  41d934:	pop    esp
  41d935:	sbb    al,0x61
  41d937:	jge    0x41d98a
  41d939:	shl    DWORD PTR [eax+edi*1+0x43],cl
  41d93d:	out    dx,al
  41d93e:	sbb    bl,BYTE PTR [edx+0xe3f57d2]
  41d944:	cs ds inc ecx
  41d947:	and    ebp,ebp
  41d949:	cdq    
  41d94a:	mov    WORD PTR [eax-0x7e6d5f9d],gs
  41d950:	clc    
  41d951:	dec    eax
  41d952:	rol    BYTE PTR [edi-0x54],0xcb
  41d956:	aas    
  41d957:	inc    esp
  41d958:	add    eax,0xa3a22656
  41d95d:	cmp    eax,0xec84f925
  41d962:	and    bh,BYTE PTR [esi]
  41d964:	pop    ebx
  41d965:	dec    esi
  41d966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d967:	mov    esi,0x61ef9e29
  41d96c:	mov    ds:0xf074ee8c,eax
  41d971:	nop
  41d972:	mov    bl,0x2f
  41d974:	ins    BYTE PTR es:[edi],dx
  41d975:	cmp    ecx,DWORD PTR [eax+0x746fbbc6]
  41d97b:	aas    
  41d97c:	pop    es
  41d97d:	out    dx,al
  41d97e:	lds    edx,FWORD PTR [ebp-0x3870b536]
  41d984:	push   es
  41d985:	inc    esp
  41d986:	cwde   
  41d987:	popf   
  41d988:	xor    eax,0x78efc1f3
  41d98d:	scas   eax,DWORD PTR es:[edi]
  41d98e:	dec    ecx
  41d98f:	xchg   DWORD PTR [eax+0x193f16f],edx
  41d995:	mov    dl,0x16
  41d997:	shl    BYTE PTR [edi+0x52667c92],1
  41d99d:	ret    0x5a85
  41d9a0:	iret   
  41d9a1:	pop    edx
  41d9a2:	inc    eax
  41d9a3:	(bad)  
  41d9a5:	loope  0x41da1a
  41d9a7:	jmp    0x910b188b
  41d9ac:	ficom  WORD PTR [eax+0x68]
  41d9af:	cmp    al,BYTE PTR [eax-0x6e36c6db]
  41d9b5:	add    eax,esi
  41d9b7:	ss jmp 0x41da1b
  41d9ba:	stc    
  41d9bb:	and    ecx,edx
  41d9bd:	mov    DWORD PTR [ebp-0x4c],ecx
  41d9c0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d9c3:	mov    edx,DWORD PTR [ebp-0x48]
  41d9c6:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41d9cd:	mov    DWORD PTR [ebp-0x48],ecx
  41d9d0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d9d3:	mov    edx,0xfa5e1530
  41d9d8:	sub    edx,ecx
  41d9da:	add    edx,DWORD PTR [ebp-0x44]
  41d9dd:	mov    DWORD PTR [ebp-0x44],edx
  41d9e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d9e3:	xor    ecx,eax
  41d9e5:	add    ecx,esi
  41d9e7:	jne    0x41b5e7
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9f0:	xor    ecx,eax
  41d9f2:	mov    eax,DWORD PTR [ebp+0x10]
  41d9f5:	add    ecx,esi
  41d9f7:	mov    DWORD PTR [eax],ecx
  41d9f9:	pop    edi
  41d9fa:	pop    esi
  41d9fb:	pop    ebx
  41d9fc:	leave  
  41d9fd:	ret    0xc
  41da00:	push   ebp
  41da01:	mov    ebp,esp
  41da03:	sub    esp,0x78
  41da06:	add    ecx,ecx
  41da08:	push   esi
  41da09:	mov    DWORD PTR ds:0x42a1a3,0x13
  41da13:	cmp    DWORD PTR ds:0x42a1a3,0x0
  41da1a:	je     0x41da5c
  41da20:	cmp    DWORD PTR ds:0x42a1a3,0x1e
  41da27:	jle    0x41da5c
  41da2d:	jmp    0x41da4a
  41da32:	push   0x42a18b
  41da37:	push   DWORD PTR [ebp-0x18]
  41da3a:	push   0x429018
  41da3f:	push   0x4290d7
  41da44:	call   DWORD PTR ds:0x42a2b7
  41da4a:	mov    esi,DWORD PTR ds:0x42a1a3
  41da50:	dec    esi
  41da51:	mov    DWORD PTR ds:0x42a1a3,esi
  41da57:	jmp    0x41da13
  41da5c:	push   edi
  41da5d:	mov    eax,ds:0x42942f
  41da62:	sub    DWORD PTR ds:0x42a1d3,ecx
  41da68:	mov    DWORD PTR [ebp-0x24],eax
  41da6b:	and    eax,edi
  41da6d:	mov    eax,ds:0x42954f
  41da72:	movzx  ecx,WORD PTR ds:0x42a12b
  41da79:	adc    ecx,DWORD PTR ds:0x42a19f
  41da7f:	mov    DWORD PTR ds:0x42a12b,ecx
  41da85:	mov    DWORD PTR [ebp-0x30],eax
  41da88:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41da8f:	and    DWORD PTR ds:0x42a12b,ebx
  41da95:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  41da9c:	mov    eax,DWORD PTR [ebp-0x10]
  41da9f:	sub    DWORD PTR ds:0x42a12f,0x69af
  41daa9:	mov    ecx,DWORD PTR [ebp-0x10]
  41daac:	and    edi,0x886
  41dab2:	sub    eax,ecx
  41dab4:	mov    DWORD PTR [ebp-0x10],eax
  41dab7:	sbb    DWORD PTR ds:0x42a16b,0x4fc4
  41dac1:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  41dac8:	and    DWORD PTR ds:0x42a157,0x0
  41dad2:	xor    eax,eax
  41dad4:	or     eax,DWORD PTR ds:0x42a157
  41dada:	inc    eax
  41dadb:	mov    ds:0x42a157,eax
  41dae0:	cmp    DWORD PTR ds:0x42a157,0x2f
  41dae7:	jle    0x41db08
  41daed:	jmp    0x41dafb
  41daf2:	push   DWORD PTR [ebp-0x18]
  41daf5:	call   DWORD PTR ds:0x42a2bf
  41dafb:	cmp    DWORD PTR ds:0x42a157,0x1f
  41db02:	jb     0x41dad2
  41db08:	mov    eax,DWORD PTR [ebp-0x18]
  41db0b:	mov    ecx,DWORD PTR [ebp-0x18]
  41db0e:	mov    esi,DWORD PTR ds:0x42a22f
  41db14:	mov    esi,DWORD PTR [esi]
  41db16:	sbb    DWORD PTR ds:0x42a15b,esi
  41db1c:	sub    eax,ecx
  41db1e:	and    DWORD PTR ds:0x42a18f,0x0
  41db28:	jmp    0x41db3c
  41db2d:	xor    edi,edi
  41db2f:	xor    edi,DWORD PTR ds:0x42a18f
  41db35:	inc    edi
  41db36:	mov    DWORD PTR ds:0x42a18f,edi
  41db3c:	cmp    DWORD PTR ds:0x42a18f,0x19
  41db43:	jae    0x41db6e
  41db49:	cmp    DWORD PTR ds:0x42a18f,0x1e
  41db50:	jle    0x41db6e
  41db56:	jmp    0x41db69
  41db5b:	push   0x2b00
  41db60:	push   DWORD PTR [ebp-0xc]
  41db63:	call   DWORD PTR ds:0x42a2c3
  41db69:	jmp    0x41db2d
  41db6e:	mov    DWORD PTR [ebp-0x18],eax
  41db71:	xor    eax,0x7540
  41db76:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  41db7d:	mov    eax,DWORD PTR [ebp-0xc]
  41db80:	xor    DWORD PTR ds:0x42a1d3,edi
  41db86:	mov    ecx,DWORD PTR [ebp-0xc]
  41db89:	sub    eax,ecx
  41db8b:	jmp    0x41ff41
  41db90:	loope  0x41db9a
  41db92:	loope  0x41db55
  41db94:	xchg   DWORD PTR [edi-0x1517f73f],eax
  41db9a:	iret   
  41db9b:	shr    DWORD PTR [bp+di-0x7997],1
  41dba0:	not    dl
  41dba2:	jns    0x41dc1e
  41dba4:	loope  0x41dc05
  41dba6:	jp     0x41dc22
  41dba8:	cwde   
  41dba9:	cli    
  41dbaa:	or     eax,DWORD PTR ds:[eax-0x787b7418]
  41dbb1:	aas    
  41dbb2:	jl     0x41db54
  41dbb4:	dec    ecx
  41dbb5:	cld    
  41dbb6:	loope  0x41db50
  41dbb8:	out    dx,eax
  41dbb9:	add    DWORD PTR [edx+0x32d0ae],0x41
  41dbc0:	cmp    DWORD PTR [ecx+0x71e398e6],esi
  41dbc6:	sahf   
  41dbc7:	lea    ecx,[ecx*1-0x78b9f23]
  41dbce:	arpl   bp,dx
  41dbd0:	sub    dl,BYTE PTR [eax]
  41dbd2:	pop    edx
  41dbd3:	popf   
  41dbd4:	or     esp,esp
  41dbd6:	xor    eax,DWORD PTR [ecx-0x6a0c8d24]
  41dbdc:	push   0x3aa090af
  41dbe1:	test   BYTE PTR [edi+0x4e],bl
  41dbe4:	mov    BYTE PTR ds:0x90ea40c1,ch
  41dbea:	repnz (bad) 
  41dbec:	jo     0x41dbd7
  41dbee:	or     esi,DWORD PTR [edx-0x4965bb89]
  41dbf4:	pop    edi
  41dbf5:	and    edx,DWORD PTR [ecx+eiz*1+0x28]
  41dbf9:	cmp    DWORD PTR [edi+ecx*1+0x3e],eax
  41dbfd:	mov    ah,0xdd
  41dbff:	int    0x41
  41dc01:	or     al,0xbd
  41dc03:	data16 mov WORD PTR [eax],es
  41dc06:	(bad)
  41dc0a:	aaa    
  41dc0b:	stos   DWORD PTR es:[edi],eax
  41dc0c:	push   edx
  41dc0d:	fcmovnbe st,st(5)
  41dc0f:	mov    esi,0x7aad7817
  41dc14:	pop    edx
  41dc15:	leave  
  41dc16:	sub    eax,0x9c87079c
  41dc1b:	fsubr  QWORD PTR [eax-0x5f]
  41dc1e:	mov    ecx,0x5b53f7da
  41dc23:	cmp    dl,ah
  41dc25:	sbb    BYTE PTR [esi+0x56],dh
  41dc28:	into   
  41dc29:	aaa    
  41dc2a:	xchg   ecx,eax
  41dc2b:	outs   dx,BYTE PTR ds:[esi]
  41dc2c:	jb     0x41dc16
  41dc2e:	test   eax,0xe5c48549
  41dc33:	cmp    eax,0x61d5726f
  41dc38:	lahf   
  41dc39:	int3   
  41dc3a:	ds and DWORD PTR fs:0x60dff29,esp
  41dc42:	xchg   edi,eax
  41dc43:	push   ebx
  41dc44:	bnd ja 0x41dc52
  41dc47:	shr    BYTE PTR [esi-0x7c],cl
  41dc4a:	fnstsw WORD PTR [eax+eax*8]
  41dc4d:	loope  0x41dc6f
  41dc4f:	add    BYTE PTR [ebp-0x64],ah
  41dc52:	jne    0x41dc0e
  41dc54:	dec    esi
  41dc55:	mov    ch,0xd9
  41dc57:	loop   0x41dc62
  41dc59:	mov    esp,0x861d604a
  41dc5e:	inc    edx
  41dc5f:	sar    BYTE PTR [ebx],0x8f
  41dc62:	push   edx
  41dc63:	add    DWORD PTR [ecx-0x29],ebp
  41dc66:	repz mov bl,0x18
  41dc69:	adc    eax,0x50b96896
  41dc6e:	cld    
  41dc6f:	sub    dh,BYTE PTR [ebp-0x5ce2aca8]
  41dc75:	adc    eax,DWORD PTR [ebx-0x5a]
  41dc78:	bound  edi,QWORD PTR [edx+0x1663ddff]
  41dc7e:	adc    ebx,ebx
  41dc80:	scas   eax,DWORD PTR es:[edi]
  41dc81:	push   eax
  41dc82:	or     eax,0xd8fd2f4b
  41dc87:	pop    esi
  41dc88:	lods   eax,DWORD PTR ds:[esi]
  41dc89:	inc    BYTE PTR [edi+0x7417785a]
  41dc8f:	pop    ebp
  41dc90:	pop    edi
  41dc91:	sub    ecx,ecx
  41dc93:	and    esi,edi
  41dc95:	shl    BYTE PTR [esi-0x32849e22],0x84
  41dc9c:	or     ebx,DWORD PTR [ecx]
  41dc9e:	out    0x46,al
  41dca0:	fadd   DWORD PTR [edi+0x3]
  41dca3:	dec    ecx
  41dca4:	bound  esi,QWORD PTR [eax+0x5b]
  41dca7:	jns    0x41dca8
  41dca9:	fprem  
  41dcab:	jge    0x41dc4e
  41dcad:	das    
  41dcae:	dec    eax
  41dcaf:	cmp    al,0xa4
  41dcb1:	loope  0x41dce1
  41dcb3:	test   DWORD PTR [ecx+edx*2+0x4449c861],ebx
  41dcba:	or     esi,ebp
  41dcbc:	aaa    
  41dcbd:	outs   dx,BYTE PTR ds:[esi]
  41dcbe:	lds    eax,FWORD PTR [eax+0x8c01697]
  41dcc4:	and    al,0xd2
  41dcc6:	adc    DWORD PTR [eax],ebp
  41dcc8:	(bad)  
  41dcca:	mov    ch,BYTE PTR [edi+0x3e12e1d0]
  41dcd0:	mov    ?,ebx
  41dcd2:	inc    ebp
  41dcd3:	fiadd  WORD PTR [edi+0x1f0c7fef]
  41dcd9:	cmp    cl,ah
  41dcdb:	sub    DWORD PTR [ecx+esi*4-0x4fdd1152],edi
  41dce2:	shl    BYTE PTR [edi],cl
  41dce4:	xor    eax,0x4c68af
  41dce9:	cwde   
  41dcea:	xor    edi,DWORD PTR [edi-0x67]
  41dced:	sahf   
  41dcee:	push   ebx
  41dcef:	fadd   QWORD PTR [ebx-0x790ec436]
  41dcf5:	into   
  41dcf6:	jb     0x41dd68
  41dcf8:	pop    eax
  41dcf9:	inc    edi
  41dcfa:	add    al,0xb6
  41dcfc:	push   ecx
  41dcfd:	rcr    DWORD PTR [edx-0x5457348c],0xcc
  41dd04:	fnstsw WORD PTR [eax+0x7068533e]
  41dd0a:	adc    eax,0x142c2c18
  41dd0f:	xor    ah,bh
  41dd11:	int    0xed
  41dd13:	mov    bl,0x68
  41dd15:	push   edi
  41dd16:	push   ss
  41dd17:	jo     0x41dd52
  41dd19:	out    dx,al
  41dd1a:	push   ds
  41dd1b:	xor    eax,0xdcec9751
  41dd20:	scas   al,BYTE PTR es:[edi]
  41dd21:	daa    
  41dd22:	repnz sbb DWORD PTR [esi-0x261d3f9a],0xc008a5ab
  41dd2d:	add    al,0x13
  41dd2f:	outs   dx,BYTE PTR ds:[esi]
  41dd30:	pop    ecx
  41dd31:	pop    ebp
  41dd32:	and    BYTE PTR [edi],al
  41dd34:	(bad)  
  41dd35:	gs cld 
  41dd37:	ja     0x41dcda
  41dd39:	into   
  41dd3a:	out    dx,al
  41dd3b:	es cld 
  41dd3d:	enter  0x19de,0x7b
  41dd41:	jp     0x41ddbe
  41dd43:	or     eax,0xde166bb4
  41dd48:	pop    es
  41dd49:	mov    DWORD PTR [ecx],ebp
  41dd4b:	pop    esp
  41dd4c:	pop    ds
  41dd4d:	outs   dx,BYTE PTR ds:[esi]
  41dd4e:	sbb    ebx,DWORD PTR [edx-0x2e70d827]
  41dd54:	xchg   BYTE PTR [ebp+0x38608b08],bh
  41dd5a:	pop    edx
  41dd5b:	cmp    cl,ch
  41dd5d:	imul   edi,DWORD PTR [ebp+0x62],0x6d68c1a2
  41dd64:	cmc    
  41dd65:	(bad)  
  41dd67:	jp     0x41dd79
  41dd69:	pop    es
  41dd6a:	add    DWORD PTR [ebx-0x7e211648],0xffffffef
  41dd71:	scas   al,BYTE PTR es:[edi]
  41dd72:	inc    esp
  41dd73:	lods   eax,DWORD PTR ds:[esi]
  41dd74:	cmp    ecx,edi
  41dd76:	call   0x744fe233
  41dd7b:	push   cs
  41dd7c:	mov    ds:0x754dde7f,al
  41dd81:	or     dh,cl
  41dd83:	jbe    0x41ddd9
  41dd85:	std    
  41dd86:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41dd88:	out    dx,al
  41dd89:	adc    al,0xf5
  41dd8b:	and    ebp,0x76146846
  41dd91:	and    BYTE PTR [eax+0x5d2ff4ff],al
  41dd97:	cmc    
  41dd98:	mov    al,ds:0xda810cf8
  41dd9d:	dec    eax
  41dd9e:	iret   
  41dd9f:	mov    ch,BYTE PTR [ebx]
  41dda1:	pop    edi
  41dda2:	pop    esp
  41dda3:	mov    ecx,0x5383c47d
  41dda8:	pop    esi
  41dda9:	pop    esi
  41ddaa:	jle    0x41ddc7
  41ddac:	loope  0x41dda7
  41ddae:	xor    cl,BYTE PTR [esi+0x54]
  41ddb1:	or     DWORD PTR [esi+0x3db726ed],edx
  41ddb7:	sbb    edi,DWORD PTR [edi+0x3769b5f6]
  41ddbd:	mov    al,0x6e
  41ddbf:	adc    al,0x12
  41ddc1:	ins    BYTE PTR es:[edi],dx
  41ddc2:	adc    al,BYTE PTR [eax-0x58ce62d5]
  41ddc8:	or     BYTE PTR gs:[ebp+0x1ca8138e],dl
  41ddcf:	xchg   ecx,eax
  41ddd0:	(bad)  
  41ddd1:	aam    0xb1
  41ddd3:	shl    BYTE PTR [edi+edi*1+0x58],1
  41ddd7:	(bad)  
  41ddd8:	xchg   ebp,eax
  41ddd9:	ss jge 0x41dda4
  41dddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dddd:	cmp    DWORD PTR [eax+edi*1+0x65],edi
  41dde1:	imul   esp,DWORD PTR [ebp-0x75],0x47
  41dde5:	dec    eax
  41dde6:	out    0x3f,al
  41dde8:	nop
  41dde9:	div    BYTE PTR [ecx-0x7c71fd00]
  41ddef:	call   0xfecc675e
  41ddf4:	push   ebx
  41ddf5:	in     eax,dx
  41ddf6:	lahf   
  41ddf7:	loop   0x41dd9b
  41ddf9:	iret   
  41ddfa:	out    dx,eax
  41ddfb:	pushf  
  41ddfc:	xchg   ebp,eax
  41ddfd:	adc    al,0xef
  41ddff:	fs repnz xchg ax,ax
  41de03:	cmp    al,bl
  41de05:	jne    0x41de35
  41de07:	xor    dl,BYTE PTR [ecx-0x34]
  41de0a:	lea    esp,[ecx]
  41de0c:	fs cwde 
  41de0e:	jb     0x41dde1
  41de10:	ror    esi,0x11
  41de13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de14:	push   cs
  41de15:	sub    ch,BYTE PTR [esi-0x3703336b]
  41de1b:	inc    edi
  41de1c:	sbb    eax,0x82820e15
  41de21:	frstor [edx]
  41de23:	inc    ecx
  41de24:	add    dl,BYTE PTR [ecx+0x2e]
  41de27:	shl    DWORD PTR [eax+0x10],0x36
  41de2b:	out    dx,al
  41de2c:	mov    dl,0xeb
  41de2e:	lods   eax,DWORD PTR ds:[esi]
  41de2f:	test   esp,esp
  41de31:	mov    edx,esp
  41de33:	push   edi
  41de34:	rol    DWORD PTR [esi-0x30],0xa
  41de38:	pop    esp
  41de39:	repz pop edi
  41de3b:	sub    bl,BYTE PTR [ebx]
  41de3d:	sub    ch,BYTE PTR [ecx+0x761cd1b2]
  41de43:	mov    ebx,0x9bfd5ad5
  41de48:	sub    DWORD PTR [ebx],ebp
  41de4a:	add    DWORD PTR [edx+ecx*4],esp
  41de4d:	popf   
  41de4e:	cmp    DWORD PTR [ebx+0x4d],0x61
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	in     eax,0x25
  41de55:	les    esi,FWORD PTR [edx+0x45]
  41de58:	cmc    
  41de59:	das    
  41de5a:	js     0x41de8c
  41de5c:	stos   BYTE PTR es:[edi],al
  41de5d:	or     dh,cl
  41de5f:	shr    DWORD PTR [edi],1
  41de61:	jbe    0x41deb4
  41de63:	les    ecx,FWORD PTR [eax-0x66be1b03]
  41de69:	push   ds
  41de6a:	cli    
  41de6b:	dec    ebp
  41de6c:	pop    ecx
  41de6d:	test   al,0xa4
  41de6f:	pop    ecx
  41de70:	sbb    ebx,DWORD PTR [eax-0x64]
  41de73:	fidivr DWORD PTR [eax]
  41de75:	adc    al,0x9
  41de77:	fsubr  DWORD PTR ds:0xbf6ed86
  41de7d:	cli    
  41de7e:	mov    bl,0xb5
  41de80:	push   cs
  41de81:	sub    bl,BYTE PTR [eax]
  41de83:	popf   
  41de84:	mov    dl,0xd
  41de86:	mov    ds:0x2d5b72d,eax
  41de8b:	pop    DWORD PTR [ebx+0x5f]
  41de8e:	(bad)  
  41de8f:	xchg   ecx,eax
  41de90:	sbb    esp,DWORD PTR [edx+0x21]
  41de93:	pop    ss
  41de94:	inc    eax
  41de95:	in     eax,dx
  41de96:	or     ecx,esi
  41de98:	arpl   si,si
  41de9a:	sub    eax,0xc139184a
  41de9f:	mov    ds:0xf359f9d5,eax
  41dea4:	jnp    0x41def8
  41dea6:	inc    ebx
  41dea7:	lods   eax,DWORD PTR ds:[esi]
  41dea8:	in     eax,dx
  41dea9:	pop    ebx
  41deaa:	rol    ebx,1
  41deac:	in     eax,0x46
  41deae:	mov    ah,0xd8
  41deb0:	cmp    eax,0x9e7601f5
  41deb5:	xor    bl,ch
  41deb7:	scas   eax,DWORD PTR es:[edi]
  41deb8:	add    ebx,esp
  41deba:	pop    ss
  41debb:	adc    DWORD PTR [edx+0x50f7ab18],ebx
  41dec1:	jmp    0x4da9:0xc2e1066a
  41dec8:	mov    ebx,0x4b4d6d2d
  41decd:	ret    
  41dece:	and    eax,DWORD PTR [esi]
  41ded0:	fisttp QWORD PTR [esi-0x5be6af63]
  41ded6:	into   
  41ded7:	call   0xf5ff:0x6aa06ad5
  41dede:	add    al,0xd3
  41dee0:	mov    al,ds:0x8bace21
  41dee5:	mov    ah,bl
  41dee7:	sahf   
  41dee8:	(bad)
  41deeb:	neg    DWORD PTR [eax-0x29a57e5c]
  41def1:	out    0xae,al
  41def3:	xor    al,BYTE PTR [eax-0x3499dc48]
  41def9:	pushf  
  41defa:	mov    edx,0x9049cd80
  41deff:	test   eax,0x82f23b0d
  41df04:	stos   DWORD PTR es:[edi],eax
  41df05:	(bad)  
  41df06:	ja     0x41df75
  41df08:	inc    ebx
  41df09:	pop    ebp
  41df0a:	push   es
  41df0b:	inc    edx
  41df0c:	fmul   QWORD PTR [edx+0x1f67479a]
  41df12:	add    bh,dl
  41df14:	push   esp
  41df15:	lds    esp,FWORD PTR [esp+esi*4-0x15]
  41df19:	ja     0x41df48
  41df1b:	(bad)  
  41df1c:	mov    esp,0x571bbd47
  41df21:	push   ss
  41df22:	mov    al,0xc7
  41df24:	outs   dx,BYTE PTR ds:[esi]
  41df25:	(bad)  
  41df27:	loopne 0x41df4c
  41df29:	test   eax,0x81a09fd0
  41df2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df2f:	xor    edi,ecx
  41df31:	xor    al,0x99
  41df33:	out    dx,eax
  41df34:	(bad)  
  41df35:	fstp   TBYTE PTR [ebx+0x27]
  41df38:	push   edi
  41df39:	pop    ecx
  41df3a:	adc    DWORD PTR [ebp+0x305cdfe8],edi
  41df40:	and    eax,0xdc77fee
  41df45:	sbb    ecx,ebx
  41df47:	mov    ch,0x1b
  41df49:	les    esi,FWORD PTR [ecx+0xe]
  41df4c:	pop    ds
  41df4d:	push   edx
  41df4e:	mov    ecx,0x6619e1f0
  41df53:	pop    ds
  41df54:	adc    eax,0x8538f3c
  41df59:	pop    eax
  41df5a:	mov    dl,0xaf
  41df5c:	and    DWORD PTR [ebp-0x20bfd432],edi
  41df62:	int3   
  41df63:	call   0xf5ecac23
  41df68:	pusha  
  41df69:	stos   BYTE PTR es:[edi],al
  41df6a:	jae    0x41df1f
  41df6c:	dec    edi
  41df6d:	leave  
  41df6e:	push   ebp
  41df6f:	and    DWORD PTR [edi+0x391f9172],edi
  41df75:	dec    ebp
  41df76:	mov    ch,0x26
  41df78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df79:	xchg   ecx,eax
  41df7a:	push   0x64
  41df7c:	xrelease mov BYTE PTR [eax-0x62],dh
  41df80:	je     0x41dfa9
  41df82:	loopne 0x41dfd0
  41df84:	call   0x1398684f
  41df89:	mov    esi,0x4b9729ec
  41df8e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41df90:	inc    eax
  41df91:	call   0x49bb930e
  41df96:	aad    0x28
  41df98:	jnp    0x41df68
  41df9a:	test   al,0x8
  41df9c:	not    BYTE PTR [ecx+0x7d]
  41df9f:	push   edx
  41dfa0:	sub    ah,BYTE PTR [ebp+ebp*8+0x2]
  41dfa4:	pop    es
  41dfa5:	dec    edi
  41dfa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfa7:	stos   BYTE PTR es:[edi],al
  41dfa8:	(bad)  
  41dfa9:	sbb    ecx,edx
  41dfab:	inc    eax
  41dfac:	mov    dh,0x6a
  41dfae:	and    edx,DWORD PTR [esi]
  41dfb0:	mov    eax,ds:0x99731cca
  41dfb5:	and    eax,0xcab7fc7a
  41dfba:	(bad)  
  41dfbb:	xchg   esp,eax
  41dfbc:	arpl   di,sp
  41dfbe:	out    dx,eax
  41dfbf:	add    DWORD PTR ds:0x895f73a3,0x3
  41dfc6:	sbb    DWORD PTR [esi],ebx
  41dfc8:	sub    BYTE PTR [edi+0x1209b06f],bh
  41dfce:	(bad)  
  41dfcf:	pop    ds
  41dfd0:	test   eax,0xb7af210d
  41dfd5:	jae    0x41dfac
  41dfd7:	out    0xe8,al
  41dfd9:	mov    bl,0xb8
  41dfdb:	aas    
  41dfdc:	sti    
  41dfdd:	pop    edi
  41dfde:	clc    
  41dfdf:	aas    
  41dfe0:	pusha  
  41dfe1:	xchg   ah,bh
  41dfe3:	dec    ebx
  41dfe4:	dec    edx
  41dfe5:	xor    BYTE PTR [ecx+0x2bc6df04],dl
  41dfeb:	es dec esp
  41dfed:	add    BYTE PTR [ebp-0x53f36b11],dh
  41dff3:	push   0xaf0a6f58
  41dff8:	dec    esi
  41dff9:	mov    ebp,0x9dd8a938
  41dffe:	pop    ss
  41dfff:	sub    ecx,eax
  41e001:	repz jmp DWORD PTR [eax]
  41e004:	cdq    
  41e005:	mov    edx,DWORD PTR [bx+di+0x67a2]
  41e00a:	int    0xe2
  41e00c:	lods   al,BYTE PTR ds:[esi]
  41e00d:	sub    al,0xc2
  41e00f:	lods   al,BYTE PTR ds:[esi]
  41e010:	addr16 inc esp
  41e012:	adc    eax,0xb291aa44
  41e017:	shl    DWORD PTR [edi+0x391e2b9e],0xd1
  41e01e:	in     al,dx
  41e01f:	push   ebx
  41e020:	or     dh,BYTE PTR [ebx]
  41e022:	inc    DWORD PTR [edx-0x39]
  41e025:	cmp    al,0xeb
  41e027:	daa    
  41e028:	repz out dx,eax
  41e02a:	add    eax,0x347fb3b1
  41e02f:	mov    esp,0x1e4358bc
  41e034:	pop    edx
  41e035:	aas    
  41e036:	adc    eax,0x72da595d
  41e03b:	inc    ecx
  41e03c:	mov    dl,0x96
  41e03e:	rcr    BYTE PTR [edx],1
  41e040:	xor    BYTE PTR [esi+ebx*2-0x3e],bl
  41e044:	ss inc esi
  41e046:	mov    esp,0x76fba35d
  41e04b:	pop    ebx
  41e04c:	pop    ebp
  41e04d:	int    0xa
  41e04f:	xchg   edx,eax
  41e050:	dec    eax
  41e051:	inc    ebx
  41e052:	cmp    eax,0x665fc86a
  41e057:	mov    ch,0x1b
  41e059:	and    DWORD PTR [ebx+eiz*4],esi
  41e05c:	xor    BYTE PTR [edx],ch
  41e05e:	iret   
  41e05f:	add    al,0xd8
  41e061:	mov    cl,0x5e
  41e063:	cwde   
  41e064:	shl    bh,cl
  41e066:	retf   
  41e067:	jne    0x41e082
  41e069:	(bad)  
  41e06a:	in     al,0x75
  41e06c:	mov    al,ds:0x3f0e31f
  41e071:	pusha  
  41e072:	mov    ebp,0x38085b1
  41e077:	sbb    esi,DWORD PTR [edx]
  41e079:	leave  
  41e07a:	cwde   
  41e07b:	ins    DWORD PTR es:[edi],dx
  41e07c:	and    eax,0x33869f3a
  41e081:	pop    eax
  41e082:	sub    dh,cl
  41e084:	xor    esp,edx
  41e086:	out    dx,eax
  41e087:	test   al,0x47
  41e089:	adc    eax,0xf554a2f
  41e08e:	sbb    ch,BYTE PTR [edx]
  41e090:	cmc    
  41e091:	cmp    BYTE PTR [eax],cl
  41e093:	mov    DWORD PTR [esi+0x65822528],eax
  41e099:	stos   DWORD PTR es:[edi],eax
  41e09a:	in     eax,dx
  41e09b:	pop    ss
  41e09c:	lock (bad) 
  41e09e:	cmp    DWORD PTR [edi-0x7b],edi
  41e0a1:	mov    eax,0xb856357c
  41e0a6:	lods   eax,DWORD PTR ds:[esi]
  41e0a7:	fwait
  41e0a8:	sbb    eax,0x5c2659bf
  41e0ad:	stc    
  41e0ae:	test   DWORD PTR [ecx],edi
  41e0b0:	cmc    
  41e0b1:	aas    
  41e0b2:	fisttp WORD PTR [edx+0x9]
  41e0b5:	sbb    dl,BYTE PTR [ebx]
  41e0b7:	(bad)  
  41e0b8:	enter  0xaa7a,0xc3
  41e0bc:	mov    ds:0xaa0ca709,al
  41e0c1:	add    al,0xba
  41e0c3:	mov    edx,0x5fd837ab
  41e0c8:	and    DWORD PTR [edi-0x20],edx
  41e0cb:	or     DWORD PTR [ebp+esi*8-0x7181a74d],ebx
  41e0d2:	cwde   
  41e0d3:	mov    esi,0xcda436d6
  41e0d8:	jno    0x41e11b
  41e0da:	adc    dh,al
  41e0dc:	fs mov ah,0x4f
  41e0df:	pusha  
  41e0e0:	lahf   
  41e0e1:	sub    DWORD PTR [edi],esi
  41e0e3:	pop    esp
  41e0e4:	jp     0x41e09a
  41e0e6:	cli    
  41e0e7:	jbe    0x41e0e4
  41e0e9:	cmp    al,0xba
  41e0eb:	fst    DWORD PTR [ecx-0x65]
  41e0ee:	adc    DWORD PTR [esi-0x7d],ebp
  41e0f1:	retf   0x44c0
  41e0f4:	mov    bl,0xfc
  41e0f6:	loop   0x41e10c
  41e0f8:	pop    ss
  41e0f9:	inc    esi
  41e0fa:	das    
  41e0fb:	ja     0x41e139
  41e0fd:	push   edi
  41e0fe:	cmc    
  41e0ff:	iret   
  41e100:	sbb    eax,0x7365d7e7
  41e105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e106:	sbb    ebp,DWORD PTR [edi]
  41e108:	rcr    dh,1
  41e10a:	daa    
  41e10b:	xchg   DWORD PTR [edi+edi*4],eax
  41e10e:	add    eax,0x13ca972a
  41e113:	dec    edi
  41e114:	out    0xca,eax
  41e116:	test   BYTE PTR [edi-0x55],0xce
  41e11a:	mov    eax,ds:0x246b9888
  41e11f:	dec    eax
  41e120:	lea    esi,[ecx-0xc]
  41e123:	push   ds
  41e124:	jl     0x41e0ea
  41e126:	arpl   di,si
  41e128:	sub    ecx,ebp
  41e12a:	mov    edx,0x78983743
  41e12f:	and    al,0xd4
  41e131:	pusha  
  41e132:	xchg   DWORD PTR [eax+0x4634a155],esi
  41e138:	mov    ebx,0xacbc5c79
  41e13d:	jbe    0x41e0ee
  41e13f:	mov    BYTE PTR [ecx+eax*4-0x686012eb],ah
  41e146:	sub    al,0x37
  41e148:	pop    ebp
  41e149:	mov    ah,0xb4
  41e14b:	inc    esi
  41e14c:	inc    edi
  41e14d:	es push edi
  41e14f:	ss sub eax,0x74b5bc03
  41e155:	and    dh,BYTE PTR [esi+0x1b]
  41e158:	bound  edx,QWORD PTR [ebx-0x53fd3ffe]
  41e15e:	jl     0x41e19c
  41e160:	lods   eax,DWORD PTR ds:[esi]
  41e161:	sbb    esp,DWORD PTR [edi-0x45]
  41e164:	inc    edx
  41e165:	sbb    DWORD PTR [ecx-0x78],esp
  41e168:	imul   edx,DWORD PTR [ecx+0x7fe4eef5],0xffffffbd
  41e16f:	mov    gs,eax
  41e171:	inc    cl
  41e173:	dec    esp
  41e174:	dec    esi
  41e175:	out    0x74,ax
  41e178:	mov    ebx,0xbef573c7
  41e17d:	mov    dl,0x4c
  41e17f:	xor    al,dh
  41e181:	bound  edi,QWORD PTR [ecx]
  41e183:	mov    ah,0x60
  41e185:	mov    ah,0x58
  41e187:	xchg   ecx,eax
  41e188:	push   cs
  41e189:	fisubr WORD PTR ds:0xdc827423
  41e18f:	(bad)  
  41e190:	outs   dx,DWORD PTR ds:[esi]
  41e191:	retf   0xb3fd
  41e194:	dec    esp
  41e195:	lahf   
  41e196:	add    al,0x2a
  41e198:	in     eax,dx
  41e199:	mov    esp,0x3613310d
  41e19e:	add    BYTE PTR [ebx],dl
  41e1a0:	xchg   ebx,eax
  41e1a1:	clc    
  41e1a2:	(bad)  
  41e1a3:	jns    0x41e175
  41e1a5:	fisubr WORD PTR [edi+0x7b]
  41e1a8:	push   esp
  41e1a9:	and    DWORD PTR [edx-0x72],edx
  41e1ac:	or     ebp,DWORD PTR [ebx-0x68]
  41e1af:	inc    eax
  41e1b0:	inc    esi
  41e1b1:	sub    edx,ebx
  41e1b3:	sub    DWORD PTR [eax+0x4b4d281b],eax
  41e1b9:	sahf   
  41e1ba:	xor    edx,DWORD PTR [esp+edx*1+0xea0c4ac]
  41e1c1:	xlat   BYTE PTR ds:[ebx]
  41e1c2:	into   
  41e1c3:	sbb    al,0xdb
  41e1c5:	mov    DWORD PTR [ecx],ebx
  41e1c7:	dec    ebp
  41e1c8:	pop    eax
  41e1c9:	lock xchg ebx,eax
  41e1cb:	lds    edx,FWORD PTR [edx+ecx*2+0x14]
  41e1cf:	lds    esi,FWORD PTR [ebx-0x2b16ef65]
  41e1d5:	pop    ss
  41e1d6:	inc    esp
  41e1d7:	push   ebx
  41e1d8:	mov    dl,0xcb
  41e1da:	cmc    
  41e1db:	dec    ebp
  41e1dc:	retf   0x8d1
  41e1df:	ret    
  41e1e0:	lds    esp,FWORD PTR [edi-0x75fea508]
  41e1e6:	gs aad 0x48
  41e1e9:	cli    
  41e1ea:	xchg   ebp,eax
  41e1eb:	outs   dx,DWORD PTR ds:[esi]
  41e1ec:	xor    dl,al
  41e1ee:	fwait
  41e1ef:	or     DWORD PTR [ebx],ebx
  41e1f1:	xchg   ebx,eax
  41e1f2:	add    esi,DWORD PTR [edx]
  41e1f4:	and    DWORD PTR [edi+0x3ad544a0],ebx
  41e1fa:	dec    ebx
  41e1fb:	sbb    al,0x52
  41e1fd:	popf   
  41e1fe:	jge    0x41e1a5
  41e200:	fstp   QWORD PTR [ebp-0x52786d6]
  41e206:	stc    
  41e207:	scas   eax,DWORD PTR es:[edi]
  41e208:	pop    ebx
  41e209:	popa   
  41e20a:	mov    edi,0x15c64796
  41e20f:	dec    edx
  41e210:	xchg   ch,dh
  41e212:	cmc    
  41e213:	push   ebx
  41e214:	arpl   WORD PTR [esi],si
  41e216:	xchg   ebx,eax
  41e217:	dec    edi
  41e218:	cld    
  41e219:	add    al,0x2d
  41e21b:	mov    ebx,DWORD PTR [esi-0x61]
  41e21e:	(bad)  
  41e220:	stos   BYTE PTR es:[edi],al
  41e221:	adc    BYTE PTR [edx-0x8],al
  41e224:	mov    bl,0x5b
  41e226:	pusha  
  41e227:	mov    edi,0x86a4a331
  41e22c:	mov    cl,BYTE PTR [eax]
  41e22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e22f:	jecxz  0x41e254
  41e231:	inc    esi
  41e232:	call   0xba8410ea
  41e237:	cmp    BYTE PTR [ecx+0x3a],al
  41e23a:	retf   0xcbd4
  41e23d:	add    al,0x42
  41e23f:	test   eax,0x8971d3ff
  41e244:	mov    edx,ecx
  41e246:	jb     0x41e275
  41e248:	cwde   
  41e249:	cmp    ebx,DWORD PTR [edx+0xf1569b1]
  41e24f:	cmc    
  41e250:	test   DWORD PTR [edx+0x6b25c760],ecx
  41e256:	sbb    eax,0xb586a9c5
  41e25b:	push   eax
  41e25c:	gs dec ecx
  41e25e:	and    al,0x15
  41e260:	pop    edx
  41e261:	add    BYTE PTR [eax-0x62],0x2e
  41e265:	push   esp
  41e266:	das    
  41e267:	loopne 0x41e263
  41e269:	stc    
  41e26a:	pop    edx
  41e26b:	nop
  41e26c:	push   ds
  41e26d:	pop    ss
  41e26e:	xor    ecx,esp
  41e270:	or     edx,eax
  41e272:	and    BYTE PTR fs:[ebp+0x55],ah
  41e276:	jle    0x41e2ca
  41e278:	sbb    dl,BYTE PTR [edx-0x6a]
  41e27b:	aaa    
  41e27c:	and    DWORD PTR [ecx],0xe46e179e
  41e282:	xor    DWORD PTR ds:0x6d738799,eax
  41e288:	sub    DWORD PTR [eax+esi*8-0x21972f23],edi
  41e28f:	(bad)  
  41e290:	jle    0x41e217
  41e292:	ret    0x719a
  41e295:	and    cl,dl
  41e297:	repz fldpi 
  41e29a:	lahf   
  41e29b:	mov    esp,cs
  41e29d:	pop    ebp
  41e29e:	sub    eax,0xde58b6d6
  41e2a3:	lock ins BYTE PTR es:[edi],dx
  41e2a5:	mov    ah,0x62
  41e2a7:	scas   al,BYTE PTR es:[edi]
  41e2a8:	lea    edi,[ecx]
  41e2aa:	cmc    
  41e2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ac:	test   DWORD PTR [edx-0x3dbcdf2f],esi
  41e2b2:	aaa    
  41e2b3:	icebp  
  41e2b4:	test   edx,edx
  41e2b6:	pop    ebx
  41e2b7:	dec    eax
  41e2b8:	xchg   edx,eax
  41e2b9:	xor    ecx,ebx
  41e2bb:	dec    edx
  41e2bc:	stc    
  41e2bd:	and    BYTE PTR [ecx],ch
  41e2bf:	mov    dl,BYTE PTR [ebx]
  41e2c1:	mov    BYTE PTR [ebx],ch
  41e2c3:	dec    ecx
  41e2c4:	rol    BYTE PTR [ebx+0x4a198c19],1
  41e2ca:	dec    ebp
  41e2cb:	ror    BYTE PTR [esi],cl
  41e2cd:	jg     0x41e2bd
  41e2cf:	pop    edx
  41e2d0:	adc    BYTE PTR [esi-0x7e8a1a68],0x93
  41e2d7:	aam    0x8
  41e2d9:	jno    0x41e301
  41e2db:	fcomp  st(5)
  41e2dd:	retf   0x500
  41e2e0:	sbb    ah,BYTE PTR [edx+ebp*8]
  41e2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e4:	sub    ch,al
  41e2e6:	mov    WORD PTR [edi+0x41222f50],fs
  41e2ec:	and    eax,0xeb8ef7c0
  41e2f1:	stos   DWORD PTR es:[edi],eax
  41e2f2:	xchg   ebx,eax
  41e2f3:	ds inc esi
  41e2f5:	ror    DWORD PTR [edi],0x78
  41e2f8:	jnp    0x41e2b5
  41e2fa:	and    BYTE PTR [edx+0x40],0xb3
  41e2fe:	xor    eax,0x74e0731
  41e303:	xchg   edi,eax
  41e304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e305:	in     al,0xd9
  41e307:	xor    dl,dl
  41e309:	pop    ds
  41e30a:	mov    ?,WORD PTR ds:0x1c8c1148
  41e310:	jp     0x41e2d0
  41e312:	sub    al,BYTE PTR [edi-0x3dc4590b]
  41e318:	adc    esp,edx
  41e31a:	pop    esi
  41e31b:	or     BYTE PTR [edi],bh
  41e31d:	push   edi
  41e31e:	fimul  WORD PTR [ebx+0x72]
  41e321:	jmp    0x41e321
  41e323:	or     ebp,ebx
  41e325:	jns    0x41e37f
  41e327:	in     al,0xae
  41e329:	add    BYTE PTR [esi-0x74],bl
  41e32c:	shl    DWORD PTR [eax-0x23d495ef],1
  41e332:	pop    ebx
  41e333:	jae    0x41e31c
  41e335:	xchg   edi,eax
  41e336:	scas   eax,DWORD PTR es:[edi]
  41e337:	push   ebp
  41e338:	mov    al,ds:0xf2c08ac1
  41e33d:	jno    0x41e335
  41e33f:	jnp    0x41e3a4
  41e341:	push   edi
  41e342:	and    BYTE PTR [esi+0x79b0e7e8],dl
  41e348:	jmp    0x41e31b
  41e34a:	jne    0x41e325
  41e34c:	sbb    ecx,eax
  41e34e:	lds    ebp,FWORD PTR [esi-0x34c204e6]
  41e354:	and    al,0x82
  41e356:	sar    ah,cl
  41e358:	scas   eax,DWORD PTR es:[edi]
  41e359:	pushf  
  41e35a:	dec    edi
  41e35b:	cmp    DWORD PTR [eax],esp
  41e35d:	xchg   edi,eax
  41e35e:	push   ecx
  41e35f:	aas    
  41e360:	xor    DWORD PTR [ebx+edx*2],ebp
  41e363:	fsubp  st(6),st
  41e365:	ja     0x41e32f
  41e367:	mov    ebp,0xbee0f286
  41e36c:	das    
  41e36d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e36e:	aas    
  41e36f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e370:	jmp    0x41e39d
  41e372:	loope  0x41e3c5
  41e374:	xor    DWORD PTR [ebp+0x73],ecx
  41e377:	stc    
  41e378:	xchg   edx,eax
  41e379:	xor    al,0x4b
  41e37b:	dec    edx
  41e37c:	into   
  41e37d:	xor    DWORD PTR [ebx+0x74ac69b5],ebx
  41e383:	cmp    DWORD PTR [ebp-0x6a],edx
  41e386:	cmp    BYTE PTR [edx],al
  41e388:	and    BYTE PTR [edi],0x96
  41e38b:	cdq    
  41e38c:	add    al,0x7
  41e38e:	jns    0x41e395
  41e390:	sbb    bh,BYTE PTR [edi]
  41e392:	in     al,dx
  41e393:	xor    al,0x94
  41e395:	pop    edx
  41e396:	mov    ds:0x1f21e02b,eax
  41e39b:	xor    ah,BYTE PTR [eax-0x37]
  41e39e:	and    BYTE PTR [edx+0x1c],dh
  41e3a1:	mul    BYTE PTR [ebx+0x646f94ea]
  41e3a7:	jno    0x41e37f
  41e3a9:	retf   
  41e3aa:	xor    BYTE PTR [eax],ch
  41e3ac:	adc    BYTE PTR [esi+0x2ece419a],bh
  41e3b2:	cmp    al,0xcc
  41e3b4:	jmp    0x41e3ad
  41e3b6:	rcr    BYTE PTR [edx-0x7dadd533],1
  41e3bc:	ja     0x41e394
  41e3be:	lock mov ds:0xec24649b,al
  41e3c4:	cmp    eax,DWORD PTR [ecx]
  41e3c6:	out    dx,eax
  41e3c7:	inc    eax
  41e3c8:	cli    
  41e3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3ca:	ror    BYTE PTR es:[edi+0xbcf5dcb],cl
  41e3d1:	mov    bh,0xf2
  41e3d3:	mov    esi,0x7320c5f7
  41e3d8:	lock ss aaa 
  41e3db:	sub    BYTE PTR [ebp-0x78],al
  41e3de:	pop    ecx
  41e3df:	stos   BYTE PTR es:[edi],al
  41e3e0:	push   ss
  41e3e1:	out    dx,eax
  41e3e2:	pushf  
  41e3e3:	inc    edi
  41e3e4:	call   0x4ef0:0xafcec97f
  41e3eb:	and    al,0xab
  41e3ed:	xor    DWORD PTR [ecx-0xf],0xb81fee2
  41e3f4:	pop    es
  41e3f5:	pop    edx
  41e3f6:	xchg   ebp,eax
  41e3f7:	dec    eax
  41e3f8:	pusha  
  41e3f9:	call   0xe4f:0x70f53867
  41e400:	or     DWORD PTR ds:0x5e5b8254,0x2f
  41e407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e408:	xchg   esi,eax
  41e409:	icebp  
  41e40a:	(bad)  
  41e40b:	dec    esp
  41e40c:	mov    ah,0x34
  41e40e:	push   ecx
  41e40f:	(bad)  
  41e410:	int    0x84
  41e412:	ror    BYTE PTR [eax+0x3fbe69c4],0xd7
  41e419:	adc    ecx,DWORD PTR [ecx]
  41e41b:	pusha  
  41e41c:	adc    DWORD PTR [ebx+0x75],0x44
  41e420:	mov    fs,WORD PTR [esi]
  41e422:	(bad)  
  41e423:	fidiv  DWORD PTR [edi]
  41e425:	stos   BYTE PTR es:[edi],al
  41e426:	mov    ah,0x2
  41e428:	xlat   BYTE PTR ds:[ebx]
  41e429:	shl    DWORD PTR [edx],0xd0
  41e42c:	dec    edi
  41e42d:	sbb    DWORD PTR [ebx-0x25],0xfc8a4952
  41e434:	leave  
  41e435:	in     al,dx
  41e436:	repz jmp 0x13d:0x30db5f54
  41e43e:	shl    DWORD PTR [edi+ebx*1+0x66],cl
  41e442:	push   0x89ad0572
  41e447:	nop
  41e448:	sub    ebp,esp
  41e44a:	fs adc ebp,ebp
  41e44d:	add    al,BYTE PTR [edi-0x27]
  41e450:	daa    
  41e451:	cmp    al,0x22
  41e453:	mov    ecx,0x2332b9f2
  41e458:	add    cl,ch
  41e45a:	loopne 0x41e41a
  41e45c:	jge    0x41e40b
  41e45e:	mov    ebp,0x7684be87
  41e463:	sub    edi,DWORD PTR [esi+0x5c]
  41e466:	and    eax,0x76f8c50e
  41e46b:	stc    
  41e46c:	mov    ah,BYTE PTR [eax+0xd]
  41e46f:	int    0xd3
  41e471:	jmp    0xdd4431e9
  41e476:	sbb    DWORD PTR [edi+0x6c22d3ea],edi
  41e47c:	jmp    0x41e418
  41e47e:	leave  
  41e47f:	mov    eax,0x2881b8a6
  41e484:	ret    0xf061
  41e487:	sbb    al,0x25
  41e489:	call   0x21f2:0x6f7705e4
  41e490:	jmp    0x41e439
  41e492:	(bad)  
  41e493:	pop    DWORD PTR [ebp-0x4f7702f1]
  41e499:	inc    ecx
  41e49a:	push   0x566cc362
  41e49f:	jnp    0x41e4df
  41e4a1:	sbb    BYTE PTR [edx-0x72b5a71b],cl
  41e4a7:	fnstcw WORD PTR [esp+ecx*4+0x38]
  41e4ab:	or     eax,0x1e58bfe9
  41e4b0:	call   0xc5b95b71
  41e4b5:	lods   al,BYTE PTR ds:[esi]
  41e4b6:	sbb    dl,bh
  41e4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4b9:	adc    DWORD PTR [ebx+0x3fdcf610],esp
  41e4bf:	aad    0xaa
  41e4c1:	retf   0x2752
  41e4c4:	loopne 0x41e540
  41e4c6:	or     DWORD PTR [edi+0x3f59d65c],edx
  41e4cc:	mov    bl,0x2d
  41e4ce:	sbb    edi,DWORD PTR [edx-0x3c]
  41e4d1:	retf   0x9d31
  41e4d4:	mov    ch,0x28
  41e4d6:	arpl   WORD PTR [ebp+0x6],sp
  41e4d9:	repnz sbb eax,0xf762aa09
  41e4df:	jp     0x41e4d8
  41e4e1:	push   edx
  41e4e2:	jne    0x41e521
  41e4e4:	lods   al,BYTE PTR ds:[esi]
  41e4e5:	jl     0x41e507
  41e4e7:	mov    eax,ds:0x6b0fb894
  41e4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ed:	bound  esi,QWORD PTR [edx-0x48]
  41e4f0:	inc    eax
  41e4f1:	and    eax,0xaf95d450
  41e4f6:	lods   al,BYTE PTR ds:[esi]
  41e4f7:	in     al,dx
  41e4f8:	adc    bl,bl
  41e4fa:	xchg   BYTE PTR fs:[edx+0x4b],al
  41e4fe:	cmp    eax,0x295cd090
  41e503:	adc    eax,esp
  41e505:	popa   
  41e506:	test   DWORD PTR [eax+0x3c],ebx
  41e509:	das    
  41e50a:	jbe    0x41e497
  41e50c:	(bad)  
  41e50d:	mov    ecx,0x78fe43a0
  41e512:	xor    esp,DWORD PTR [eax]
  41e514:	and    DWORD PTR [edi-0xf],edx
  41e517:	clc    
  41e518:	(bad)  
  41e519:	arpl   WORD PTR [ecx+0x6c65a467],dx
  41e51f:	pushf  
  41e520:	push   ebx
  41e521:	push   0x1c
  41e523:	data16 (bad) 
  41e525:	jmp    0x41e52f
  41e527:	call   0xfb62:0x6b5ca088
  41e52e:	nop
  41e52f:	ins    BYTE PTR es:[edi],dx
  41e530:	push   ds
  41e531:	sbb    BYTE PTR [esi+0x62b1d2bf],cl
  41e537:	push   eax
  41e538:	test   eax,0x46753bc4
  41e53d:	cli    
  41e53e:	les    ebp,FWORD PTR [esi-0x260f37d2]
  41e544:	and    DWORD PTR [edx],edi
  41e546:	sbb    eax,0xb3cde9e4
  41e54b:	cmp    DWORD PTR [ecx+0x7],0xc5dc1c4e
  41e552:	jb     0x41e593
  41e554:	stc    
  41e555:	or     eax,0xa5bcf38b
  41e55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e55b:	sbb    ah,BYTE PTR [ebp-0x75]
  41e55e:	mov    esi,0x58e55c62
  41e563:	mov    esp,0x7a22583f
  41e568:	fiadd  DWORD PTR [ebp+0x57]
  41e56b:	or     al,0x59
  41e56d:	inc    edx
  41e56e:	clc    
  41e56f:	das    
  41e570:	call   0x6bfbb001
  41e575:	lock jo 0x41e5a2
  41e578:	mov    esi,0x9bbf0d9b
  41e57d:	adc    eax,0x9ce2da0
  41e582:	inc    edi
  41e583:	inc    edi
  41e584:	cmp    eax,0x3dd0e18c
  41e589:	sub    al,0x81
  41e58b:	push   0xffffffcd
  41e58d:	pushf  
  41e58e:	cwde   
  41e58f:	iret   
  41e590:	jecxz  0x41e5a2
  41e592:	and    al,0x9b
  41e594:	jbe    0x41e596
  41e596:	ds add bl,cl
  41e599:	pushf  
  41e59a:	and    DWORD PTR [ebp+0x49],ecx
  41e59d:	das    
  41e59e:	dec    ebp
  41e59f:	into   
  41e5a0:	cs xchg edx,eax
  41e5a2:	and    al,0xf8
  41e5a4:	out    dx,al
  41e5a5:	jae    0x41e53e
  41e5a7:	popf   
  41e5a8:	sbb    edx,ecx
  41e5aa:	(bad)  
  41e5ab:	fidivr WORD PTR [esi]
  41e5ad:	jle    0x41e5d4
  41e5af:	jmp    0x41e5df
  41e5b1:	rcl    BYTE PTR [esi],1
  41e5b3:	popf   
  41e5b4:	cs jle 0x41e601
  41e5b7:	(bad)  
  41e5b8:	mov    WORD PTR [esi],ss
  41e5ba:	mov    ds:0x746ed4aa,eax
  41e5bf:	sar    DWORD PTR [ebx-0x5ea2b7fb],0x5
  41e5c6:	je     0x41e5bb
  41e5c8:	adc    DWORD PTR [eax+0x743a4647],0xe
  41e5cf:	mov    DWORD PTR [ecx+eax*8+0x21ad016b],ecx
  41e5d6:	add    DWORD PTR [edx+0x5eb39785],esi
  41e5dc:	or     eax,ebx
  41e5de:	fbstp  TBYTE PTR [ebx]
  41e5e0:	fstp   TBYTE PTR [esp+esi*1]
  41e5e3:	push   cs
  41e5e4:	mov    ch,0x16
  41e5e6:	add    eax,0x881780cf
  41e5eb:	dec    edx
  41e5ec:	icebp  
  41e5ed:	and    DWORD PTR [ebx],0xde0eb256
  41e5f3:	int3   
  41e5f4:	add    ch,0x87
  41e5f7:	lods   al,BYTE PTR ds:[esi]
  41e5f8:	cdq    
  41e5f9:	and    ecx,DWORD PTR [ebp-0x4fa22861]
  41e5ff:	xlat   BYTE PTR ds:[ebx]
  41e600:	add    DWORD PTR [esi+ebx*4+0x405e3b54],eax
  41e607:	lods   eax,DWORD PTR ds:[esi]
  41e608:	adc    dh,BYTE PTR [eax-0x4a]
  41e60b:	or     eax,0x9f1c1ad7
  41e610:	xor    cl,bh
  41e612:	daa    
  41e613:	imul   esi,DWORD PTR [ebp+0x6c00af56],0x83382ec2
  41e61d:	addr16 pop ss
  41e61f:	neg    ebx
  41e621:	jbe    0x41e68a
  41e623:	test   eax,0xbdc2091e
  41e628:	inc    esp
  41e629:	adc    al,0xb6
  41e62b:	and    BYTE PTR [ecx+0x3d],0xf5
  41e62f:	push   eax
  41e630:	ret    
  41e631:	dec    ebx
  41e632:	inc    ecx
  41e633:	dec    ecx
  41e634:	jmp    0xc4ea:0x53b1ea1d
  41e63b:	push   edi
  41e63c:	and    DWORD PTR [edi+ebx*8+0x7512d01c],edx
  41e643:	and    DWORD PTR [ebx-0x46cd2e99],edx
  41e649:	add    eax,0x4dd6dc0c
  41e64e:	into   
  41e64f:	push   edi
  41e650:	enter  0xd1f3,0x88
  41e654:	in     al,dx
  41e655:	adc    BYTE PTR [ebp+0x6f6b526c],ah
  41e65b:	ror    dh,1
  41e65d:	mov    DWORD PTR [edi],ecx
  41e65f:	sar    DWORD PTR [ecx-0x72233164],0x91
  41e666:	iret   
  41e667:	pop    es
  41e668:	fisub  DWORD PTR [edi]
  41e66a:	stc    
  41e66b:	sbb    BYTE PTR [esi+0x7],dh
  41e66e:	mov    ch,0xc1
  41e670:	mov    ch,0x6b
  41e672:	xchg   edx,eax
  41e673:	fstp   TBYTE PTR es:[ebx]
  41e676:	push   esp
  41e677:	addr16 push ds
  41e679:	fcomp  DWORD PTR [ecx]
  41e67b:	add    BYTE PTR [ebp+0x44d75867],bh
  41e681:	mov    ds:0x6a693aeb,al
  41e686:	inc    edi
  41e687:	add    ah,BYTE PTR [edx-0x7b4f2df5]
  41e68d:	jno    0x41e6b2
  41e68f:	ins    BYTE PTR es:[edi],dx
  41e690:	sub    BYTE PTR [ecx],bl
  41e692:	xor    BYTE PTR [edi],bl
  41e694:	dec    ebx
  41e695:	leave  
  41e696:	ins    BYTE PTR es:[edi],dx
  41e697:	cld    
  41e698:	sub    DWORD PTR [ebp+0x53],eax
  41e69b:	push   ebx
  41e69c:	(bad)  
  41e69d:	jo     0x41e713
  41e69f:	mov    BYTE PTR [ebx+esi*2],cl
  41e6a2:	mov    ebx,0x81b52337
  41e6a7:	sub    DWORD PTR [ebx+edx*1],0x33
  41e6ab:	mov    ah,0xde
  41e6ad:	(bad)
  41e6b2:	imul   eax,DWORD PTR [ebx+eiz*1+0x3e7cdefa],0x1ef336bc
  41e6bd:	xlat   BYTE PTR ds:[ebx]
  41e6be:	inc    edx
  41e6bf:	pop    es
  41e6c0:	ja     0x41e6c7
  41e6c2:	push   ds
  41e6c3:	in     eax,0x39
  41e6c5:	call   0xafb18d59
  41e6ca:	sub    BYTE PTR [ebp-0x1d62d3e7],al
  41e6d0:	and    eax,0xa5d69f86
  41e6d5:	push   ds
  41e6d6:	test   al,0xee
  41e6d8:	popf   
  41e6d9:	and    esi,DWORD PTR [eax+0x2c]
  41e6dc:	loopne 0x41e66c
  41e6de:	sbb    BYTE PTR [eax-0x2dc35511],0xd9
  41e6e5:	idiv   bh
  41e6e7:	or     ebp,esp
  41e6e9:	inc    ebx
  41e6ea:	cmp    eax,0xd8f9af2c
  41e6ef:	and    DWORD PTR [ebx-0x4e2844a6],esi
  41e6f5:	sub    eax,0xa697e30c
  41e6fa:	ror    ah,1
  41e6fc:	push   0x70
  41e6fe:	inc    ebp
  41e6ff:	ret    
  41e700:	sbb    al,0xe
  41e702:	jbe    0x41e701
  41e704:	inc    ecx
  41e705:	mov    DWORD PTR [eax-0x61],0x29ca7dd3
  41e70c:	iret   
  41e70d:	arpl   WORD PTR [edx-0xf77e5e3],di
  41e713:	jmp    0x436e:0x8b877e1
  41e71a:	sub    ecx,DWORD PTR [ebp-0x27]
  41e71d:	sub    dl,ch
  41e71f:	cmp    edx,DWORD PTR [ecx]
  41e721:	push   ss
  41e722:	imul   edi,DWORD PTR [edi+0x1],0xffffffb7
  41e726:	adc    BYTE PTR [eax-0x7115a3fb],dh
  41e72c:	icebp  
  41e72d:	hlt    
  41e72e:	aaa    
  41e72f:	sub    eax,0xc2712d18
  41e734:	cdq    
  41e735:	jo     0x41e6e9
  41e737:	in     al,0x50
  41e739:	add    al,0x8d
  41e73b:	sahf   
  41e73c:	jmp    0x41e75f
  41e73e:	loope  0x41e6db
  41e740:	push   ebp
  41e741:	and    cl,dl
  41e743:	xchg   edi,eax
  41e744:	inc    ebx
  41e745:	in     al,dx
  41e746:	or     BYTE PTR [edx],ah
  41e748:	jno    0x41e701
  41e74a:	and    BYTE PTR [esi+ebp*2-0xce2f246],bh
  41e751:	inc    esp
  41e752:	mov    dh,BYTE PTR ds:0xf265f693
  41e758:	pop    esp
  41e759:	or     edx,DWORD PTR [esi+0x36d0297e]
  41e75f:	ret    0x489
  41e762:	retf   0x279
  41e765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e766:	mov    edx,0x1fc070a6
  41e76b:	sbb    DWORD PTR [ebp+0x51],esi
  41e76e:	into   
  41e76f:	xchg   edi,eax
  41e770:	pop    eax
  41e771:	mov    esi,0xb44009ec
  41e776:	leave  
  41e777:	js     0x41e750
  41e779:	js     0x41e704
  41e77b:	jmp    0xf217e462
  41e780:	adc    BYTE PTR [ebp-0x41],0x69
  41e784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e785:	xor    edx,DWORD PTR [ebx+0x26]
  41e788:	or     BYTE PTR gs:[ebp+0x6adc7678],cl
  41e78f:	stc    
  41e790:	into   
  41e791:	sbb    ecx,ebp
  41e793:	xor    eax,0x51333bd6
  41e798:	into   
  41e799:	sbb    edx,0x4df82e21
  41e79f:	int3   
  41e7a0:	iret   
  41e7a1:	loopne 0x41e792
  41e7a3:	pop    ebp
  41e7a4:	dec    edi
  41e7a5:	mov    al,0x61
  41e7a7:	int    0x2b
  41e7a9:	push   ss
  41e7aa:	repnz sub dh,dl
  41e7ad:	dec    eax
  41e7ae:	out    dx,al
  41e7af:	inc    esi
  41e7b0:	pushf  
  41e7b1:	(bad)  
  41e7b2:	outs   dx,BYTE PTR ds:[esi]
  41e7b3:	repnz fdivr QWORD PTR [ecx-0x257b1db3]
  41e7ba:	div    DWORD PTR [edi+0x1a]
  41e7bd:	sub    al,0xce
  41e7bf:	mov    eax,ds:0x5e69c9e7
  41e7c4:	loop   0x41e7aa
  41e7c6:	add    cl,dh
  41e7c8:	mov    eax,0x91a27ec6
  41e7cd:	jge    0x41e7e1
  41e7cf:	je     0x41e821
  41e7d1:	jae    0x41e7b9
  41e7d3:	push   0xffffffb8
  41e7d5:	popa   
  41e7d6:	jne    0x41e795
  41e7d8:	mov    ds:0x6e89583e,al
  41e7dd:	paddb  mm2,QWORD PTR [esi+0x2caa8121]
  41e7e4:	sahf   
  41e7e5:	adc    al,BYTE PTR [edx]
  41e7e7:	aad    0xa4
  41e7e9:	xchg   edi,eax
  41e7ea:	loopne 0x41e863
  41e7ec:	repz cmp cl,BYTE PTR [edi+0x54]
  41e7f0:	jecxz  0x41e7e0
  41e7f2:	iret   
  41e7f3:	pop    ebp
  41e7f4:	fsubr  QWORD PTR [esi+0x32]
  41e7f7:	call   0xebaf91e2
  41e7fc:	mov    bl,0x7e
  41e7fe:	shr    DWORD PTR ds:0x62d5e94f,0x4a
  41e805:	out    dx,eax
  41e806:	mov    ds:0x6abd976a,al
  41e80b:	arpl   WORD PTR [esi],sp
  41e80d:	xor    ch,BYTE PTR gs:[esi]
  41e810:	in     al,0x9c
  41e812:	push   esi
  41e813:	outs   dx,DWORD PTR ds:[esi]
  41e814:	jmp    0x5b3b:0xa62f7579
  41e81b:	stos   BYTE PTR es:[edi],al
  41e81c:	fbstp  TBYTE PTR ds:0xa9077bc2
  41e822:	adc    bh,BYTE PTR [esi-0x8cb8b47]
  41e828:	sub    al,0x1
  41e82a:	push   esi
  41e82b:	mov    al,0xf2
  41e82d:	sbb    eax,0x19a3889d
  41e832:	out    0xb1,eax
  41e834:	or     BYTE PTR [edx+0x34d64850],dh
  41e83a:	sbb    eax,0xf6fa0b34
  41e83f:	bound  edx,QWORD PTR [ecx]
  41e841:	mov    eax,0xa0eec72c
  41e846:	test   eax,0x587a93f3
  41e84b:	ret    0x91a7
  41e84e:	xchg   bl,dh
  41e850:	cmp    al,BYTE PTR [ecx]
  41e852:	xchg   DWORD PTR [ebx],edx
  41e854:	xchg   edx,eax
  41e855:	jp     0x41e857
  41e857:	pop    esi
  41e858:	xchg   BYTE PTR [ebx+esi*1-0x574c19fd],ch
  41e85f:	popf   
  41e860:	cwde   
  41e861:	cmovle eax,DWORD PTR [edi+0x77]
  41e865:	add    al,0x12
  41e867:	scas   eax,DWORD PTR es:[edi]
  41e868:	sti    
  41e869:	mov    BYTE PTR [ebx],ah
  41e86b:	icebp  
  41e86c:	dec    esi
  41e86d:	cmp    al,0xe6
  41e86f:	into   
  41e870:	in     al,dx
  41e871:	scas   eax,DWORD PTR es:[edi]
  41e872:	inc    ecx
  41e873:	fs jmp 0x2e35e0ec
  41e879:	repnz xchg ebp,eax
  41e87b:	fist   WORD PTR [ecx-0x3c]
  41e87e:	aaa    
  41e87f:	jp     0x41e82c
  41e881:	push   esi
  41e882:	into   
  41e883:	add    al,0x99
  41e885:	mov    eax,0xf0955762
  41e88a:	mov    al,ds:0xbdc1dcef
  41e88f:	adc    esi,ecx
  41e891:	xchg   BYTE PTR [ebp-0x7fc00902],ah
  41e897:	(bad)  
  41e898:	fstp   QWORD PTR [esp+eiz*2]
  41e89b:	mov    esi,0xf78b5ba8
  41e8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8a1:	icebp  
  41e8a2:	mov    WORD PTR [edi-0x59],cs
  41e8a5:	cli    
  41e8a6:	push   ds
  41e8a7:	mov    cl,BYTE PTR [esi-0x5908b003]
  41e8ad:	std    
  41e8ae:	or     al,0x5
  41e8b0:	sub    BYTE PTR [eax+0x59],bh
  41e8b3:	sahf   
  41e8b4:	dec    ebp
  41e8b5:	inc    ebx
  41e8b6:	ins    DWORD PTR es:[edi],dx
  41e8b7:	ins    DWORD PTR es:[edi],dx
  41e8b8:	retf   0x3337
  41e8bb:	or     BYTE PTR [edx],0xa7
  41e8be:	sub    esp,esi
  41e8c0:	mov    dh,0x1a
  41e8c2:	das    
  41e8c3:	sahf   
  41e8c4:	xchg   esi,eax
  41e8c5:	jle    0x41e91c
  41e8c7:	push   ss
  41e8c8:	sub    ebp,ecx
  41e8ca:	icebp  
  41e8cb:	xor    DWORD PTR [esi-0x6151d4d5],ebx
  41e8d1:	std    
  41e8d2:	aaa    
  41e8d3:	js     0x41e8ad
  41e8d5:	inc    ebx
  41e8d6:	icebp  
  41e8d7:	or     al,BYTE PTR [ecx+ecx*1+0xd]
  41e8db:	xchg   edi,eax
  41e8dc:	int    0xa
  41e8de:	inc    ecx
  41e8df:	ret    0x73a6
  41e8e2:	fwait
  41e8e3:	xor    al,0x75
  41e8e5:	sub    BYTE PTR [ebx+0x44],cl
  41e8e8:	ficomp WORD PTR [eax-0x16]
  41e8eb:	jle    0x41e8c5
  41e8ed:	enter  0x72e2,0x1a
  41e8f1:	popf   
  41e8f2:	daa    
  41e8f3:	adc    eax,0x9ed69c79
  41e8f8:	mov    esi,0x2a964bd3
  41e8fd:	cmp    edx,DWORD PTR [ebp-0x75f24d9f]
  41e903:	jecxz  0x41e8dc
  41e905:	fiadd  DWORD PTR [edx-0x40acbe1a]
  41e90b:	push   es
  41e90c:	mov    ds:0x53af09ba,eax
  41e911:	jp     0x41e897
  41e913:	xor    edx,esp
  41e915:	mov    ebx,0xf03c60bf
  41e91a:	jnp    0x41e8c5
  41e91c:	and    bh,dl
  41e91e:	(bad)  
  41e91f:	retf   
  41e920:	add    ch,BYTE PTR [eax]
  41e922:	or     BYTE PTR [ecx-0x5a],0x81
  41e926:	dec    ebx
  41e927:	dec    ecx
  41e928:	push   cs
  41e929:	out    dx,eax
  41e92a:	sub    ch,ah
  41e92c:	lods   eax,DWORD PTR ds:[esi]
  41e92d:	cs pop ds
  41e92f:	pusha  
  41e930:	(bad)  
  41e931:	lods   al,BYTE PTR ds:[esi]
  41e932:	add    eax,0xe206365e
  41e937:	push   edi
  41e938:	inc    bp
  41e93a:	dec    edx
  41e93b:	loope  0x41e8f0
  41e93d:	inc    ebx
  41e93e:	retf   
  41e93f:	test   BYTE PTR [eax],dl
  41e941:	jge    0x41e9b2
  41e943:	data16 sbb bl,BYTE PTR [ebp+0x3674bd3]
  41e94a:	adc    eax,0x1380a14
  41e94f:	cmp    BYTE PTR [ebx+0x2f],dl
  41e952:	rcl    BYTE PTR [eax-0x47375cca],1
  41e958:	enter  0x631c,0x50
  41e95c:	scas   eax,DWORD PTR es:[edi]
  41e95d:	mov    ds:0x4f917fb7,eax
  41e962:	sbb    bl,cl
  41e964:	aas    
  41e965:	adc    al,0x98
  41e967:	xor    eax,0x8c7213fe
  41e96c:	cmp    eax,0x86ea687c
  41e971:	(bad)  
  41e972:	std    
  41e973:	mov    bh,bl
  41e975:	retf   0x2870
  41e978:	mov    eax,ds:0xaa35e963
  41e97d:	sub    eax,0x92d08980
  41e982:	dec    esp
  41e983:	jns    0x41e93f
  41e985:	pusha  
  41e986:	(bad)  
  41e987:	scas   eax,DWORD PTR es:[edi]
  41e988:	cli    
  41e989:	mov    ch,0xcb
  41e98b:	fisttp WORD PTR [edi]
  41e98d:	pop    ecx
  41e98e:	add    bl,ch
  41e990:	cwde   
  41e991:	gs loope 0x41e960
  41e994:	imul   ecx,DWORD PTR [esi],0xcc8aed46
  41e99a:	iret   
  41e99b:	push   ebp
  41e99c:	es pop ebp
  41e99e:	stos   BYTE PTR es:[edi],al
  41e99f:	in     al,dx
  41e9a0:	cwde   
  41e9a1:	retf   0x6374
  41e9a4:	xor    ch,al
  41e9a6:	mov    BYTE PTR [edx+0xf7bee6c],0x5c
  41e9ad:	mov    ebx,DWORD PTR [edi]
  41e9af:	scas   al,BYTE PTR es:[edi]
  41e9b0:	xor    dh,BYTE PTR [ecx+0x32]
  41e9b3:	mov    cs,WORD PTR [edx]
  41e9b5:	and    dl,BYTE PTR [esp]
  41e9b8:	sbb    BYTE PTR [eax],bh
  41e9ba:	xchg   DWORD PTR [eax+eax*2],ebx
  41e9bd:	fwait
  41e9be:	xor    esp,DWORD PTR [esi-0x1]
  41e9c1:	jp     0x41e98a
  41e9c3:	xor    BYTE PTR [ebx],bl
  41e9c5:	aas    
  41e9c6:	add    DWORD PTR cs:0x235e951a,ecx
  41e9cd:	ins    BYTE PTR es:[edi],dx
  41e9ce:	xlat   BYTE PTR ds:[ebx]
  41e9cf:	mov    dh,0xd9
  41e9d1:	push   esp
  41e9d2:	int    0xcf
  41e9d4:	or     ch,BYTE PTR [ebp-0x29]
  41e9d7:	inc    eax
  41e9d8:	sbb    BYTE PTR [ebp+0x2b],ah
  41e9db:	cmc    
  41e9dc:	jmp    0xae2b:0x5405fdac
  41e9e3:	mov    edx,edx
  41e9e5:	push   ds
  41e9e6:	ins    BYTE PTR es:[edi],dx
  41e9e7:	or     BYTE PTR [edx+0x23],0xd5
  41e9eb:	mov    ds,WORD PTR [eax]
  41e9ed:	adc    ebp,esp
  41e9ef:	mov    ds:0xe0cbf8b6,eax
  41e9f4:	(bad)
  41e9f7:	jb     0x41e986
  41e9f9:	jne    0x41e97b
  41e9fb:	in     eax,0xbb
  41e9fd:	int    0x82
  41e9ff:	popf   
  41ea00:	bound  esi,QWORD PTR [ebp-0x47475f2b]
  41ea06:	mov    cl,0xd3
  41ea08:	(bad)  
  41ea09:	aas    
  41ea0a:	mov    eax,ds:0xef28ead2
  41ea0f:	ss aas 
  41ea11:	sub    DWORD PTR [ebx+ecx*2],edx
  41ea14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea15:	xchg   ecx,eax
  41ea16:	inc    ebx
  41ea17:	mov    ds:0xc9f7a60c,al
  41ea1c:	mov    dh,0x59
  41ea1e:	clc    
  41ea1f:	pop    ds
  41ea20:	push   0xcea0bc8d
  41ea25:	fnsave [esi+edx*1]
  41ea28:	dec    esp
  41ea29:	inc    edi
  41ea2a:	jnp    0x41e9f4
  41ea2c:	bound  ebx,QWORD PTR [edx+0x7e3d7340]
  41ea32:	fist   DWORD PTR [ebx-0x7e]
  41ea35:	mov    esi,0xdb23c322
  41ea3a:	in     al,0xfd
  41ea3c:	pop    esp
  41ea3d:	call   0xab9d9a33
  41ea42:	cli    
  41ea43:	fist   WORD PTR [edx+ecx*1-0x25067a6a]
  41ea4a:	ja     0x41e9d0
  41ea4c:	xlat   BYTE PTR ds:[ebx]
  41ea4d:	retf   0xcd81
  41ea50:	test   al,0xfc
  41ea52:	lods   eax,DWORD PTR ds:[esi]
  41ea53:	in     al,0xa3
  41ea55:	xchg   ebp,eax
  41ea56:	scas   al,BYTE PTR es:[edi]
  41ea57:	sar    DWORD PTR [ebx-0x71ec78b0],cl
  41ea5d:	cmp    eax,0x6a99d47e
  41ea62:	jo     0x41ea48
  41ea64:	mov    BYTE PTR [ecx+eax*8-0x62],ch
  41ea68:	cmc    
  41ea69:	and    cl,0xcc
  41ea6c:	mov    cl,0xd3
  41ea6e:	cmp    esp,DWORD PTR [eax-0x17]
  41ea71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea72:	test   BYTE PTR [ecx-0x6c],bh
  41ea75:	push   0xbd8d4d4b
  41ea7a:	or     eax,0xc17c788a
  41ea7f:	fcomp  st(2)
  41ea81:	mov    esp,0x2627f17f
  41ea86:	rcr    BYTE PTR [edi-0x32cfec76],1
  41ea8c:	mov    ecx,DWORD PTR [ebx+0x4c02a217]
  41ea92:	popa   
  41ea93:	dec    edx
  41ea94:	jbe    0x41ea87
  41ea96:	push   edi
  41ea97:	jne    0x41ea50
  41ea99:	add    dh,bh
  41ea9b:	dec    esi
  41ea9c:	cmp    al,0xdf
  41ea9e:	jle    0x41ea7d
  41eaa0:	arpl   bp,bp
  41eaa2:	sbb    eax,0xb733d203
  41eaa7:	fst    DWORD PTR [ebx-0x2c]
  41eaaa:	dec    ecx
  41eaab:	xchg   ebp,eax
  41eaac:	jmp    0x41eab0
  41eaae:	push   ecx
  41eaaf:	ret    0x8db7
  41eab2:	xor    al,0xc4
  41eab4:	imul   ebp,DWORD PTR [eax-0x110a9b70],0xffffff97
  41eabb:	aas    
  41eabc:	dec    eax
  41eabd:	or     eax,0x40ed96a3
  41eac2:	fisubr DWORD PTR [edx]
  41eac4:	ins    DWORD PTR es:[edi],dx
  41eac5:	sbb    al,0x72
  41eac7:	add    eax,0xa4389c74
  41eacc:	std    
  41eacd:	dec    eax
  41eace:	scas   al,BYTE PTR es:[edi]
  41eacf:	pop    esp
  41ead0:	mov    eax,ds:0x73ee6e57
  41ead6:	(bad)  
  41ead7:	adc    BYTE PTR [di+0x7eb9],dl
  41eadc:	pop    esp
  41eadd:	scas   al,BYTE PTR es:[edi]
  41eade:	out    dx,al
  41eadf:	and    esi,ecx
  41eae1:	aam    0x72
  41eae3:	push   ebp
  41eae4:	retf   
  41eae5:	inc    esp
  41eae6:	out    dx,al
  41eae7:	jo     0x41eb32
  41eae9:	das    
  41eaea:	push   ebp
  41eaeb:	inc    edx
  41eaec:	lods   al,BYTE PTR ds:[esi]
  41eaed:	pop    ss
  41eaee:	push   edx
  41eaef:	out    dx,eax
  41eaf0:	cmp    ah,BYTE PTR ds:0x9d5f7325
  41eaf6:	pop    es
  41eaf7:	dec    DWORD PTR [ebp-0x3b21b18c]
  41eafd:	lea    esp,[edx-0x5f]
  41eb00:	shr    BYTE PTR [ecx+0x26],0xf1
  41eb04:	sbb    edx,DWORD PTR [esi]
  41eb06:	outs   dx,BYTE PTR ds:[esi]
  41eb07:	lock jle 0x41ea98
  41eb0a:	jne    0x41ea97
  41eb0c:	popf   
  41eb0d:	adc    eax,0x6add52fe
  41eb12:	cmp    eax,0x2ca2a7b2
  41eb17:	xor    DWORD PTR [eax+0x77ca79c4],0x41ce974d
  41eb21:	leave  
  41eb22:	cmp    BYTE PTR [edi+0x297d85a2],0x7b
  41eb29:	adc    al,0x7
  41eb2b:	shl    DWORD PTR [edx+0x30],cl
  41eb2e:	mov    cl,0x53
  41eb30:	pop    eax
  41eb31:	pop    ebp
  41eb32:	mov    esp,0xbe8c5587
  41eb37:	stc    
  41eb38:	dec    esp
  41eb39:	or     al,0xd4
  41eb3b:	test   ch,0x9d
  41eb3e:	iret   
  41eb3f:	sahf   
  41eb40:	add    eax,0x3e8f7542
  41eb45:	in     eax,0x98
  41eb47:	fstp   st(1)
  41eb49:	retf   0xfbf9
  41eb4c:	push   edx
  41eb4d:	push   ebp
  41eb4e:	mov    al,0x31
  41eb50:	pop    ecx
  41eb51:	pop    ds
  41eb52:	imul   edx,DWORD PTR [esi],0x1dcf873e
  41eb58:	test   dh,cl
  41eb5a:	cwde   
  41eb5b:	int3   
  41eb5c:	add    bl,dh
  41eb5e:	xchg   ecx,eax
  41eb5f:	xor    eax,esi
  41eb61:	sti    
  41eb62:	adc    DWORD PTR [esi+0x0],edi
  41eb65:	je     0x41eb28
  41eb67:	push   esi
  41eb68:	mov    ch,BYTE PTR [ecx-0x248f88d4]
  41eb6e:	std    
  41eb6f:	pushf  
  41eb70:	mov    al,0x5
  41eb72:	lods   al,BYTE PTR ds:[esi]
  41eb73:	add    al,0x82
  41eb75:	xor    bl,BYTE PTR [eax+0x375fe200]
  41eb7b:	hlt    
  41eb7c:	iret   
  41eb7d:	cmc    
  41eb7e:	test   eax,0x9e9e07a2
  41eb83:	mov    eax,ds:0x7021dae
  41eb88:	fld    TBYTE PTR [ebx-0x3b1e6a28]
  41eb8e:	addr16 in eax,0x0
  41eb91:	hlt    
  41eb92:	mov    cl,0xc2
  41eb94:	cmp    dl,BYTE PTR [esi-0x7abca122]
  41eb9a:	xchg   ecx,eax
  41eb9b:	jmp    0x3749:0xc150a8c1
  41eba2:	sub    BYTE PTR [ebx],0x81
  41eba5:	inc    si
  41eba7:	xchg   ebx,eax
  41eba8:	mov    eax,0x700cecfb
  41ebad:	jae    0x41eb47
  41ebaf:	cmp    bh,BYTE PTR [eax]
  41ebb1:	or     ch,BYTE PTR [ebp-0x7d1fb9ad]
  41ebb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb8:	dec    edi
  41ebb9:	sahf   
  41ebba:	dec    ebx
  41ebbb:	push   0xffffffc1
  41ebbd:	jb     0x41ec23
  41ebbf:	into   
  41ebc0:	and    eax,0x99374886
  41ebc5:	fcom   DWORD PTR [edx+esi*8-0x25]
  41ebc9:	xchg   BYTE PTR [ecx+eax*4+0x39fe9ba4],ah
  41ebd0:	and    al,0x91
  41ebd2:	test   al,0x77
  41ebd4:	cmp    ah,bh
  41ebd6:	dec    edi
  41ebd7:	(bad)  
  41ebd8:	mov    ebx,0xabb07530
  41ebdd:	dec    esp
  41ebde:	clc    
  41ebdf:	cdq    
  41ebe0:	call   0x4faa43c6
  41ebe5:	(bad)  
  41ebe7:	cmp    ah,BYTE PTR [edx-0x39]
  41ebea:	ficom  DWORD PTR [ecx+0x1c1d0b44]
  41ebf0:	mov    al,ds:0xec277d5c
  41ebf5:	shl    ah,cl
  41ebf7:	inc    ebp
  41ebf8:	inc    edi
  41ebf9:	push   esi
  41ebfa:	aaa    
  41ebfb:	add    ch,dh
  41ebfd:	imul   edi,DWORD PTR [esi+0x7e],0x2c
  41ec01:	pop    eax
  41ec02:	mov    DWORD PTR [ecx+0x13e03e67],edx
  41ec08:	rcr    DWORD PTR [eax+0x2e],1
  41ec0b:	mov    al,0x74
  41ec0d:	xchg   bh,al
  41ec0f:	mov    cs:0x8f258afb,al
  41ec15:	mov    ecx,0x6317b4c7
  41ec1a:	adc    BYTE PTR [ebp+0x2d5e7d19],cl
  41ec20:	fwait
  41ec21:	rcr    edx,cl
  41ec23:	ins    DWORD PTR es:[edi],dx
  41ec24:	cmp    bl,BYTE PTR [esi+0x38b89332]
  41ec2a:	mov    bl,0x6a
  41ec2c:	shl    cl,cl
  41ec2e:	sbb    al,0x45
  41ec30:	fidiv  DWORD PTR [esi]
  41ec32:	out    0x2f,al
  41ec34:	cmp    al,0x34
  41ec36:	and    al,0x9b
  41ec38:	cld    
  41ec39:	dec    edx
  41ec3a:	xor    DWORD PTR [edi+0x79412e4f],edi
  41ec40:	jns    0x41ec4a
  41ec42:	cmp    BYTE PTR [eax],dl
  41ec44:	jno    0x41ec49
  41ec46:	sub    al,0xf
  41ec48:	mul    DWORD PTR [esi-0x33]
  41ec4b:	pop    esi
  41ec4c:	inc    ebp
  41ec4d:	or     ecx,DWORD PTR [eax-0x29]
  41ec50:	iret   
  41ec51:	mov    esi,0x35a549de
  41ec56:	mov    ebx,0xefc2a817
  41ec5b:	adc    BYTE PTR [edi],0x20
  41ec5e:	sub    BYTE PTR [ebx+0x6a],bl
  41ec61:	test   al,0xb3
  41ec63:	out    dx,eax
  41ec64:	mov    eax,ds:0xa0426770
  41ec69:	scas   al,BYTE PTR es:[edi]
  41ec6a:	push   ecx
  41ec6b:	add    DWORD PTR [edi-0xbaefe1a],ebp
  41ec71:	out    dx,eax
  41ec72:	mov    ebp,0x47b14ea3
  41ec77:	xchg   ecx,eax
  41ec78:	fnsave [esi+0x225cc65]
  41ec7e:	out    0x2,al
  41ec80:	push   0xffffffe2
  41ec82:	sbb    esi,DWORD PTR gs:[eax]
  41ec85:	lock daa 
  41ec87:	jb     0x41ecfd
  41ec89:	push   0x9e1ae97
  41ec8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8f:	fistp  DWORD PTR [ebx]
  41ec91:	out    dx,eax
  41ec92:	rcr    BYTE PTR [esi-0x17],1
  41ec95:	fild   QWORD PTR [ebx+esi*2]
  41ec98:	stos   BYTE PTR es:[edi],al
  41ec99:	fcmovnu st,st(2)
  41ec9b:	xchg   ebx,eax
  41ec9c:	inc    edi
  41ec9d:	aam    0x6e
  41ec9f:	xchg   edi,eax
  41eca0:	(bad)  
  41eca2:	or     eax,0x19518e76
  41eca7:	repnz inc eax
  41eca9:	xchg   esp,eax
  41ecaa:	jmp    0x41ecf1
  41ecac:	lea    esi,[ebx+0xe96a012]
  41ecb2:	inc    esi
  41ecb3:	or     eax,0x7de6fa23
  41ecb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecb9:	ror    DWORD PTR ds:0x6b387dd6,0x59
  41ecc0:	clc    
  41ecc1:	add    BYTE PTR [ebx+0x7b5fabf8],ch
  41ecc7:	cmc    
  41ecc8:	es sbb eax,0x8ede2fbb
  41ecce:	push   DWORD PTR [esi]
  41ecd0:	mov    esi,0x8bef723
  41ecd5:	sbb    edx,edx
  41ecd7:	outs   dx,BYTE PTR ds:[esi]
  41ecd8:	mov    al,0xb8
  41ecda:	fsub   st,st(1)
  41ecdc:	add    esi,DWORD PTR es:[ebx+ebp*8]
  41ece0:	mov    dh,0x45
  41ece2:	js     0x41ed3d
  41ece4:	je     0x41ecd6
  41ece6:	and    DWORD PTR [eax],ecx
  41ece8:	clc    
  41ece9:	jle    0x41eca3
  41eceb:	fistp  DWORD PTR [eax]
  41eced:	ret    0x8529
  41ecf0:	addr16 push esi
  41ecf2:	sahf   
  41ecf3:	mov    ah,0xf1
  41ecf5:	jle    0x41eccd
  41ecf7:	or     ch,bl
  41ecf9:	mov    cs,WORD PTR [eax]
  41ecfb:	cmp    eax,0xf2eb4148
  41ed00:	fisttp QWORD PTR [eax+0x6e]
  41ed03:	pop    edx
  41ed04:	mov    eax,0xfd07ca25
  41ed09:	add    DWORD PTR [esi-0x39],ebp
  41ed0c:	fcom   DWORD PTR [edi+eax*2-0x5]
  41ed10:	call   0xd989611f
  41ed15:	sub    al,0x51
  41ed17:	je     0x41ecf3
  41ed19:	hlt    
  41ed1a:	iret   
  41ed1b:	or     eax,0x5810ed1e
  41ed20:	sub    bh,BYTE PTR [esi]
  41ed22:	add    eax,0x9d7d70f3
  41ed27:	or     BYTE PTR [esi-0x7f],bh
  41ed2a:	mov    eax,ds:0xee19ae51
  41ed2f:	(bad)  
  41ed30:	bound  edx,QWORD PTR [eax-0x35]
  41ed33:	das    
  41ed34:	sbb    eax,0xdb21b960
  41ed39:	in     eax,0x46
  41ed3b:	cdq    
  41ed3c:	popa   
  41ed3d:	inc    ebx
  41ed3e:	jmp    0x2adca7d5
  41ed43:	ror    DWORD PTR [ebx+0x1d],0x88
  41ed47:	mov    dh,0xd4
  41ed49:	xchg   esp,eax
  41ed4a:	xchg   BYTE PTR ds:0xb92ec8e5,cl
  41ed50:	out    0x41,eax
  41ed52:	ds inc ebp
  41ed54:	or     esp,eax
  41ed56:	xor    cl,ah
  41ed58:	push   0x205ed302
  41ed5d:	pop    ebx
  41ed5e:	push   ss
  41ed5f:	xor    al,0xdf
  41ed61:	out    0x78,eax
  41ed63:	xchg   ebx,eax
  41ed64:	xor    dl,ah
  41ed66:	pushf  
  41ed67:	jo     0x41eda1
  41ed69:	sbb    al,0x0
  41ed6b:	pop    edi
  41ed6c:	mov    cl,0xd1
  41ed6e:	dec    ebx
  41ed6f:	and    eax,0x328ea91d
  41ed74:	retf   0x4146
  41ed77:	push   ds
  41ed78:	lods   eax,DWORD PTR ds:[esi]
  41ed79:	jns    0x41ed1f
  41ed7b:	and    al,0x8f
  41ed7d:	sub    esp,0xd
  41ed80:	lds    esp,FWORD PTR [edi]
  41ed82:	adc    edi,0xce432420
  41ed88:	inc    esi
  41ed89:	add    dl,0x34
  41ed8c:	and    eax,0xc1a9201a
  41ed91:	sti    
  41ed92:	cmp    DWORD PTR [edx+0x3d78e29c],esi
  41ed98:	imul   eax,DWORD PTR [edi+0x19c5ab6b],0x7d9d08b3
  41eda2:	xchg   ebp,eax
  41eda3:	aaa    
  41eda4:	dec    esp
  41eda5:	pushf  
  41eda6:	sbb    ebx,DWORD PTR [edx-0x71]
  41eda9:	lahf   
  41edaa:	cmp    DWORD PTR [ecx+0x77],edx
  41edad:	or     edx,ecx
  41edaf:	or     DWORD PTR [esi-0x7e],eax
  41edb2:	cmp    BYTE PTR [ebx],al
  41edb4:	pop    ds
  41edb5:	cmp    edx,DWORD PTR [esi+0x33]
  41edb8:	mov    BYTE PTR [ebx+0x752d0508],bl
  41edbe:	punpckhbw mm4,mm5
  41edc1:	les    esp,FWORD PTR [ecx]
  41edc3:	dec    edi
  41edc4:	mov    esi,0xdaf8eeda
  41edc9:	push   ds
  41edca:	adc    cl,al
  41edcc:	jno    0x41ee4d
  41edce:	pop    edi
  41edcf:	cmp    BYTE PTR [esi],ah
  41edd1:	stos   DWORD PTR es:[edi],eax
  41edd2:	mov    esi,DWORD PTR [edx+eax*2-0x24]
  41edd6:	xchg   ecx,eax
  41edd7:	enter  0x4713,0xeb
  41eddb:	mov    ds:0xd6ce8889,eax
  41ede0:	sbb    al,0xc
  41ede2:	std    
  41ede3:	add    BYTE PTR [edi+edi*8+0x46f15b95],0xd8
  41edeb:	arpl   WORD PTR [ebx-0x39d3f968],bx
  41edf1:	dec    eax
  41edf2:	push   edx
  41edf3:	fsubr  QWORD PTR [edi+0x54]
  41edf6:	(bad)  
  41edf7:	jmp    DWORD PTR [eax+0x32]
  41edfa:	mov    cl,0x11
  41edfc:	daa    
  41edfd:	loopne 0x41edd5
  41edff:	int3   
  41ee00:	mov    cs,ebp
  41ee02:	cmp    cl,0x52
  41ee05:	nop
  41ee06:	js     0x41ee56
  41ee08:	test   eax,0xb14352ec
  41ee0d:	cwde   
  41ee0e:	(bad)  
  41ee0f:	cli    
  41ee10:	mov    cl,0xc
  41ee12:	xchg   DWORD PTR [esi+0x131299a2],ecx
  41ee18:	push   edi
  41ee19:	in     eax,dx
  41ee1a:	into   
  41ee1b:	out    0x95,eax
  41ee1d:	mov    ah,0xd3
  41ee1f:	push   ecx
  41ee20:	sub    ebp,DWORD PTR [eax+edi*4-0x66]
  41ee24:	inc    ecx
  41ee25:	cmp    DWORD PTR [esi],esp
  41ee27:	cli    
  41ee28:	xchg   ecx,eax
  41ee29:	adc    eax,0x72ea5095
  41ee2e:	add    eax,0x502e8576
  41ee33:	out    dx,al
  41ee34:	push   ecx
  41ee35:	push   esi
  41ee36:	xor    DWORD PTR [edx-0x4a],0xffffffa8
  41ee3a:	jae    0x41edcb
  41ee3c:	call   0x91bfd49b
  41ee41:	jmp    0x1370af45
  41ee46:	push   esi
  41ee47:	jg     0x41ee95
  41ee49:	xchg   esi,eax
  41ee4a:	cs sti 
  41ee4c:	jbe    0x41edd8
  41ee4e:	clc    
  41ee4f:	ja     0x41ee1e
  41ee51:	inc    esi
  41ee52:	loopne 0x41edd8
  41ee54:	pop    es
  41ee55:	das    
  41ee56:	(bad)  
  41ee57:	mov    edi,0xed013b3f
  41ee5c:	adc    ah,al
  41ee5e:	stos   DWORD PTR es:[edi],eax
  41ee5f:	cmp    eax,0xe6b5387a
  41ee64:	or     al,0xf6
  41ee66:	fs mov cx,0x862c
  41ee6b:	dec    eax
  41ee6c:	ret    0x1e8b
  41ee6f:	xchg   edi,eax
  41ee70:	out    0xce,eax
  41ee72:	jb     0x41ee5d
  41ee74:	fsubr  QWORD PTR [edx]
  41ee76:	mov    WORD PTR [ebx],?
  41ee78:	rol    DWORD PTR [edx],cl
  41ee7a:	arpl   WORD PTR [ebx],bx
  41ee7c:	push   edi
  41ee7d:	xchg   ecx,eax
  41ee7e:	fcom   QWORD PTR [ebx-0x7e]
  41ee81:	lock ret 0x4886
  41ee85:	mov    ch,0xc6
  41ee87:	aas    
  41ee88:	es push cs
  41ee8a:	ja     0x41ee98
  41ee8c:	jbe    0x41ee82
  41ee8e:	dec    esi
  41ee8f:	cwde   
  41ee90:	fwait
  41ee91:	pop    ss
  41ee92:	daa    
  41ee93:	aad    0x9c
  41ee95:	or     al,0xf5
  41ee97:	xchg   esp,eax
  41ee98:	jmp    0xf68e:0xd2c1f9aa
  41ee9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea0:	aaa    
  41eea1:	inc    ecx
  41eea2:	test   DWORD PTR [ebx-0x5de3b904],esi
  41eea8:	xor    al,0xf7
  41eeaa:	push   ebp
  41eeab:	pop    es
  41eeac:	xchg   DWORD PTR ds:0xbac73d14,esi
  41eeb2:	inc    ebp
  41eeb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb4:	sar    BYTE PTR [edx+0x34b53688],0xde
  41eebb:	jle    0x41ef1f
  41eebd:	pop    esp
  41eebe:	jle    0x41eef8
  41eec0:	(bad)  
  41eec2:	in     eax,0x4
  41eec4:	sti    
  41eec5:	stos   DWORD PTR es:[edi],eax
  41eec6:	fmulp  st(4),st
  41eec8:	jge    0x41ee75
  41eeca:	stos   BYTE PTR es:[edi],al
  41eecb:	stc    
  41eecc:	outs   dx,BYTE PTR ds:[esi]
  41eecd:	inc    ebp
  41eece:	jne    0x41ef0d
  41eed0:	inc    esi
  41eed1:	sub    esp,edx
  41eed3:	out    0x36,eax
  41eed5:	hlt    
  41eed6:	pop    edi
  41eed7:	nop
  41eed8:	xchg   ebx,eax
  41eed9:	lock dec BYTE PTR gs:[ebx-0x13989d32]
  41eee1:	das    
  41eee2:	(bad)  
  41eee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee4:	lods   al,BYTE PTR ds:[esi]
  41eee5:	or     esi,DWORD PTR [esi+0x5e83cf5a]
  41eeeb:	mov    DWORD PTR ds:0x74e06105,eax
  41eef1:	jle    0x41ef66
  41eef3:	add    DWORD PTR [ebx],edi
  41eef5:	std    
  41eef6:	sub    dh,BYTE PTR [ecx-0x3abadbda]
  41eefc:	inc    eax
  41eefd:	mov    ch,0xa5
  41eeff:	call   ebx
  41ef01:	xchg   ecx,eax
  41ef02:	and    al,0x6
  41ef04:	pop    ss
  41ef05:	mov    ecx,0x8b36e00d
  41ef0a:	jmp    0x609a:0x6b0fc749
  41ef11:	dec    edi
  41ef12:	push   ds
  41ef13:	add    DWORD PTR [ecx-0x25b08e47],eax
  41ef19:	mov    esp,ebp
  41ef1b:	and    cl,bh
  41ef1d:	xlat   BYTE PTR ds:[ebx]
  41ef1e:	outs   dx,DWORD PTR ds:[esi]
  41ef1f:	push   ebx
  41ef20:	mov    eax,DWORD PTR [eax-0x1fbe6ee0]
  41ef26:	cmp    al,0x65
  41ef28:	pop    edi
  41ef29:	js     0x41eec6
  41ef2b:	jecxz  0x41eec4
  41ef2d:	lods   eax,DWORD PTR ds:[esi]
  41ef2e:	dec    ebp
  41ef2f:	les    esi,FWORD PTR [ecx+0x6d]
  41ef32:	dec    edi
  41ef33:	push   eax
  41ef34:	and    al,0x90
  41ef36:	in     eax,0x9b
  41ef38:	sbb    eax,DWORD PTR [edx+0x35]
  41ef3b:	and    ecx,DWORD PTR [esi]
  41ef3d:	add    al,0xa8
  41ef3f:	dec    ebx
  41ef40:	test   DWORD PTR [esp+ebx*2+0x71],ecx
  41ef44:	aaa    
  41ef45:	mov    ebx,0xaad1154a
  41ef4a:	fld    QWORD PTR [esi-0x6a]
  41ef4d:	xchg   esp,eax
  41ef4e:	fninit 
  41ef50:	or     DWORD PTR [ecx],edx
  41ef52:	stc    
  41ef53:	xchg   ebp,eax
  41ef55:	mov    dh,BYTE PTR [eax+0x748db351]
  41ef5b:	xchg   DWORD PTR [eax],esp
  41ef5d:	xchg   ebx,eax
  41ef5e:	adc    al,BYTE PTR [esp-0x8]
  41ef62:	push   ebx
  41ef63:	fdivr  st,st(7)
  41ef65:	mov    dh,0x30
  41ef67:	lea    edx,[eax-0x514ba4e]
  41ef6d:	mov    ?,WORD PTR [edi-0x1eafa200]
  41ef73:	repnz pop ss
  41ef75:	push   esi
  41ef76:	outs   dx,DWORD PTR ds:[esi]
  41ef77:	(bad)  
  41ef79:	idiv   BYTE PTR [esi+edx*1-0x648ec8fe]
  41ef80:	mov    esi,0x81cef705
  41ef85:	xor    BYTE PTR [ecx-0x409a8474],al
  41ef8b:	jnp    0x41ef46
  41ef8d:	ja     0x41f006
  41ef8f:	int3   
  41ef90:	or     edi,DWORD PTR ss:[ebp+ebx*2+0x63e167de]
  41ef98:	(bad)  
  41ef99:	cmp    edx,esp
  41ef9b:	add    eax,0xb1d5687b
  41efa0:	ret    
  41efa1:	and    eax,DWORD PTR [ebx]
  41efa3:	adc    BYTE PTR [esi],0xb4
  41efa6:	addr16 hlt 
  41efa8:	js     0x41efec
  41efaa:	fs push 0xffffffe4
  41efad:	ins    BYTE PTR es:[edi],dx
  41efae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efaf:	mov    edx,0x42babaed
  41efb4:	fwait
  41efb5:	push   0xffffffc6
  41efb7:	lahf   
  41efb8:	and    eax,0xec94c907
  41efbd:	clc    
  41efbe:	xchg   esi,eax
  41efbf:	sbb    dl,BYTE PTR [ebx]
  41efc1:	push   esp
  41efc2:	push   esi
  41efc3:	popf   
  41efc4:	scas   eax,DWORD PTR es:[edi]
  41efc5:	cmp    eax,0x8148f53c
  41efca:	and    al,0xcc
  41efcc:	mov    al,0x4c
  41efce:	(bad)  
  41efcf:	pop    edx
  41efd0:	and    eax,0xdb9cafab
  41efd5:	push   ss
  41efd6:	mov    dl,0xa1
  41efd8:	push   ecx
  41efd9:	pop    edi
  41efda:	ret    0xbd97
  41efdd:	imul   edx,DWORD PTR [edx+0x4538e0e],0x23
  41efe4:	daa    
  41efe5:	test   al,0xff
  41efe7:	jmp    0x964b0faa
  41efec:	nop
  41efed:	call   0xfa6dc0a8
  41eff2:	sbb    edx,ecx
  41eff4:	and    al,0x14
  41eff6:	dec    esp
  41eff7:	mov    cl,0xbe
  41eff9:	and    eax,0xec2f1c5f
  41effe:	or     BYTE PTR ds:0x9d48d1e8,ch
  41f004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f005:	sbb    esi,edx
  41f007:	inc    ebp
  41f008:	inc    ecx
  41f009:	push   0xffffffda
  41f00b:	scas   al,BYTE PTR es:[edi]
  41f00c:	xchg   ebx,eax
  41f00d:	cdq    
  41f00e:	cmp    BYTE PTR [esi+ebp*4+0x22],0x4b
  41f013:	in     eax,0x7a
  41f015:	fstp   QWORD PTR [ebx+0x7f]
  41f018:	pop    es
  41f019:	push   ebx
  41f01a:	mov    DWORD PTR [ebp+ecx*4-0x1e44e588],edx
  41f021:	stc    
  41f022:	cli    
  41f023:	cmp    al,0x34
  41f025:	ret    0x1f24
  41f028:	sub    cl,BYTE PTR [ebx]
  41f02a:	add    BYTE PTR [ebx+0x4f],cl
  41f02d:	test   al,0xe0
  41f02f:	mov    cl,0xcf
  41f031:	adc    eax,ecx
  41f033:	mov    esi,0xb79ac02f
  41f038:	cli    
  41f039:	rcl    BYTE PTR [ebx-0x5abb57d4],cl
  41f03f:	ins    BYTE PTR es:[edi],dx
  41f040:	jle    0x41efdf
  41f042:	mov    edx,0x23b3cbcb
  41f047:	or     esp,DWORD PTR [ebp+0x576c58b]
  41f04d:	jge    0x41efda
  41f04f:	mov    ecx,0x74ea91b1
  41f054:	loope  0x41f03e
  41f056:	and    eax,0xd41ba069
  41f05b:	std    
  41f05c:	push   esi
  41f05d:	cwde   
  41f05e:	aad    0x3
  41f060:	jbe    0x41f044
  41f062:	xchg   esi,eax
  41f063:	pop    esi
  41f064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f066:	sbb    DWORD PTR [ebx-0x28e412c8],ecx
  41f06c:	xor    ch,BYTE PTR [eax]
  41f06e:	jmp    0x9edcf75e
  41f073:	jg     0x41f02c
  41f075:	out    dx,eax
  41f076:	int3   
  41f077:	ds retf 0xe25f
  41f07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f07c:	aaa    
  41f07d:	test   al,0xf7
  41f07f:	inc    esi
  41f080:	std    
  41f081:	sub    eax,0xad21bd90
  41f086:	mov    ebx,0x49b00a13
  41f08b:	sbb    al,0xd4
  41f08d:	push   0xba150380
  41f092:	dec    edx
  41f093:	sub    eax,0x41e464b8
  41f098:	cmp    al,0x6f
  41f09a:	push   ss
  41f09b:	mov    eax,ds:0xd08d844d
  41f0a0:	mov    al,ds:0x327002e6
  41f0a5:	fimul  WORD PTR [ebp+0x2ebed7a8]
  41f0ab:	gs push ss
  41f0ad:	data16 cs scas al,BYTE PTR es:[edi]
  41f0b0:	sbb    eax,0x5d49c90
  41f0b5:	jle    0x41f129
  41f0b7:	aam    0x54
  41f0b9:	in     eax,dx
  41f0ba:	jo     0x41f040
  41f0bc:	sbb    eax,0xe2c49731
  41f0c1:	pop    edi
  41f0c2:	mov    esi,0x5da84545
  41f0c7:	mov    cs,ebp
  41f0c9:	mov    ebx,0x672aa34b
  41f0ce:	cmp    eax,0x6f58486a
  41f0d3:	jno    0x41f14d
  41f0d5:	dec    ecx
  41f0d6:	sbb    DWORD PTR [ecx+ebp*4],esi
  41f0d9:	mov    edx,0xa48a80cf
  41f0de:	test   BYTE PTR ds:[ebx],0xf2
  41f0e2:	icebp  
  41f0e3:	jmp    0x41f10b
  41f0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e6:	lea    esp,[ebx]
  41f0e8:	ficomp DWORD PTR [eax-0x37082547]
  41f0ee:	sbb    BYTE PTR [eax-0x80],bh
  41f0f1:	sbb    DWORD PTR [ebp-0x47],esi
  41f0f4:	mov    cl,0x8d
  41f0f6:	cwde   
  41f0f7:	jnp    0x41f0d8
  41f0f9:	adc    DWORD PTR [edx],ecx
  41f0fb:	push   esp
  41f0fc:	cmp    eax,0xbbea3139
  41f101:	dec    esp
  41f102:	repz push 0x9bb172c2
  41f108:	dec    ebx
  41f109:	xchg   ebp,eax
  41f10a:	mov    dl,0x44
  41f10c:	jecxz  0x41f10a
  41f10e:	push   ecx
  41f10f:	push   cs
  41f110:	sub    al,0xb3
  41f112:	sbb    eax,esp
  41f114:	loope  0x41f112
  41f116:	scas   al,BYTE PTR es:[edi]
  41f117:	jns    0x41f0f3
  41f119:	mov    esi,0xb445000b
  41f11e:	mov    ds:0x797a5c7e,eax
  41f123:	push   eax
  41f124:	inc    edx
  41f125:	inc    edx
  41f126:	pop    ebp
  41f127:	xor    BYTE PTR [eax+0x558dbb77],dl
  41f12d:	mov    esi,0x38246365
  41f132:	fs cld 
  41f134:	mov    ebx,0x83073b7f
  41f139:	fdivr  DWORD PTR [edx]
  41f13b:	inc    ecx
  41f13c:	push   ds
  41f13d:	push   edi
  41f13e:	sub    DWORD PTR [ecx],ecx
  41f140:	sahf   
  41f141:	add    al,0x5a
  41f143:	and    al,BYTE PTR ds:0x4ed4a81a
  41f149:	int    0x18
  41f14b:	jnp    0x41f14b
  41f14d:	fs ss std 
  41f150:	xchg   ebp,eax
  41f151:	mov    edx,0x9aa2c4ef
  41f156:	sub    BYTE PTR [ebx-0x57],bl
  41f159:	jle    0x41f14b
  41f15b:	bound  edx,QWORD PTR [edi-0x35]
  41f15e:	aad    0xa4
  41f160:	dec    ebx
  41f161:	addr16 pop esp
  41f163:	push   esp
  41f164:	nop
  41f165:	xchg   edi,eax
  41f166:	out    0xa4,al
  41f168:	jmp    0x41f193
  41f16a:	pop    ebx
  41f16b:	fadd   QWORD PTR ds:[esi+0x56]
  41f16f:	dec    ebx
  41f170:	icebp  
  41f171:	repz pop es
  41f173:	call   0x32c6:0x369bd4c8
  41f17a:	sar    DWORD PTR [edx-0x5e6f3c55],0x7a
  41f181:	test   cl,bh
  41f183:	in     eax,0x18
  41f185:	(bad)
  41f189:	jnp    0x41f126
  41f18b:	loope  0x41f171
  41f18d:	sub    al,0x75
  41f18f:	mov    edi,0xfa1e8813
  41f194:	fcom   QWORD PTR [eax+0x35d54409]
  41f19a:	rol    DWORD PTR [ebp+0x507b8ed9],1
  41f1a0:	jmp    0xd45e3679
  41f1a5:	push   0xc5cc277a
  41f1aa:	jmp    0xff1a:0xe3a2c5a6
  41f1b1:	fwait
  41f1b2:	fwait
  41f1b3:	jmp    0x17a077eb
  41f1b8:	xor    bl,ch
  41f1ba:	pop    es
  41f1bb:	icebp  
  41f1bc:	cdq    
  41f1bd:	sar    eax,cl
  41f1bf:	mov    dh,0x49
  41f1c1:	shr    BYTE PTR [eax-0x6],0x1
  41f1c5:	pop    esi
  41f1c6:	sub    ecx,DWORD PTR [ecx-0x4e]
  41f1c9:	pop    eax
  41f1ca:	leave  
  41f1cb:	jmp    0x322a:0x80823909
  41f1d2:	test   BYTE PTR [esp+edx*2+0x4a],cl
  41f1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d7:	cwde   
  41f1d8:	stc    
  41f1d9:	xor    ah,0xd6
  41f1dc:	in     eax,0x55
  41f1de:	mov    esi,0x6e0d71b7
  41f1e3:	adc    BYTE PTR [edx+0x287a56c5],0xbc
  41f1ea:	mov    eax,0xdf32bd58
  41f1ef:	into   
  41f1f0:	mov    WORD PTR [ebp-0x34],cs
  41f1f3:	sbb    eax,0xd0121ba6
  41f1f8:	pop    edx
  41f1f9:	mov    dh,0x58
  41f1fb:	push   0xe9152acb
  41f200:	mov    ebx,0x19279b37
  41f205:	sub    esp,DWORD PTR [esi-0x3be68a1f]
  41f20b:	scas   eax,DWORD PTR es:[edi]
  41f20c:	jns    0x41f28a
  41f20e:	push   ds
  41f20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f210:	fnstsw ax
  41f212:	sub    eax,0xeaa8ce51
  41f217:	jge    0x41f298
  41f219:	fwait
  41f21a:	mov    dl,BYTE PTR [ebp-0x198f24c2]
  41f220:	clc    
  41f221:	int    0x19
  41f223:	(bad)  [ecx+esi*4+0x3877e286]
  41f22a:	xchg   ebp,eax
  41f22b:	(bad)  
  41f22c:	scas   al,BYTE PTR es:[edi]
  41f22d:	dec    ebx
  41f22e:	int    0xcd
  41f230:	xlat   BYTE PTR ds:[ebx]
  41f231:	cmp    ch,BYTE PTR [edi+0x21]
  41f234:	push   ebp
  41f235:	and    al,0xb2
  41f237:	cmc    
  41f238:	inc    edx
  41f239:	or     eax,eax
  41f23b:	add    al,BYTE PTR [edi+0x44]
  41f23e:	xor    ebp,DWORD PTR [ebx+edx*8-0x19]
  41f242:	cmp    DWORD PTR [ebp-0x74],ecx
  41f245:	pop    edx
  41f246:	push   edi
  41f247:	fcom   st(4)
  41f249:	(bad)  
  41f24a:	mov    esi,0x1b1284e5
  41f24f:	icebp  
  41f250:	(bad)  
  41f251:	inc    edx
  41f252:	sub    al,0x2c
  41f254:	push   ds
  41f255:	dec    eax
  41f256:	push   edx
  41f257:	fsub   DWORD PTR [esi+edx*2-0x3fc5a99f]
  41f25e:	push   eax
  41f25f:	cli    
  41f260:	xchg   ebp,eax
  41f261:	jno    0x41f241
  41f263:	adc    ebx,DWORD PTR [ecx-0x524d4c4f]
  41f269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f26a:	jecxz  0x41f1f3
  41f26c:	push   es
  41f26d:	jp     0x41f223
  41f26f:	dec    edx
  41f270:	push   0x53
  41f272:	push   esp
  41f273:	and    cl,dl
  41f275:	mov    cl,0x96
  41f277:	sar    DWORD PTR [edi+eax*2-0x40],1
  41f27b:	leave  
  41f27c:	mov    eax,ds:0x8a5c73e2
  41f281:	dec    edi
  41f282:	sbb    esp,ecx
  41f284:	sar    DWORD PTR [edi-0x17c8966f],1
  41f28a:	dec    ebp
  41f28b:	test   eax,0x697fbf1f
  41f290:	outs   dx,DWORD PTR ds:[esi]
  41f291:	pop    ecx
  41f292:	(bad)  
  41f293:	fistp  WORD PTR [eax+esi*8+0x25]
  41f297:	xchg   esp,eax
  41f298:	add    BYTE PTR cs:[edi+0x55],bh
  41f29c:	adc    BYTE PTR [edi],ch
  41f29e:	pop    ecx
  41f29f:	sbb    eax,0x614e0998
  41f2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a5:	or     esp,esi
  41f2a7:	cmp    cl,BYTE PTR [eax+0x59ca5914]
  41f2ad:	cmc    
  41f2ae:	jae    0x41f2ff
  41f2b0:	mov    cl,0xe0
  41f2b2:	outs   dx,BYTE PTR ds:[esi]
  41f2b3:	jmp    0x41f2c5
  41f2b5:	cs ret 0x1aa2
  41f2b9:	cmp    ah,BYTE PTR [ecx-0x34]
  41f2bc:	shl    bh,0x3b
  41f2bf:	stos   DWORD PTR es:[edi],eax
  41f2c0:	xchg   bx,ax
  41f2c2:	pop    edi
  41f2c3:	inc    edi
  41f2c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2c5:	cwde   
  41f2c6:	nop
  41f2c7:	pop    ebx
  41f2c8:	sbb    al,0x71
  41f2ca:	dec    esi
  41f2cb:	das    
  41f2cc:	jecxz  0x41f2c7
  41f2ce:	xor    eax,0x69300447
  41f2d3:	push   0x90e13926
  41f2d8:	imul   BYTE PTR es:[esi+0x26]
  41f2dc:	fsubrp st(7),st
  41f2de:	call   0x2b343310
  41f2e3:	xchg   ebp,eax
  41f2e4:	mov    edi,0x6e516926
  41f2e9:	shl    ebx,1
  41f2eb:	pusha  
  41f2ec:	xchg   esi,eax
  41f2ed:	sbb    dl,cl
  41f2ef:	push   es
  41f2f0:	xor    ch,BYTE PTR [edx+0x5171ddea]
  41f2f6:	out    0xb2,eax
  41f2f8:	mov    edi,0x13683110
  41f2fd:	mov    al,0xf6
  41f2ff:	cmc    
  41f300:	xchg   BYTE PTR [edx-0x6e],bh
  41f303:	and    DWORD PTR [eax],edi
  41f305:	mov    esp,0x7f47af34
  41f30a:	dec    esi
  41f30b:	ret    0x4df3
  41f30e:	cmp    BYTE PTR [eax],ah
  41f310:	dec    esi
  41f311:	imul   ecx,edi,0xc0d5ecd2
  41f317:	jl     0x41f2bf
  41f319:	inc    edx
  41f31a:	mov    eax,ds:0x70995e11
  41f31f:	sar    ecx,1
  41f321:	out    0x3d,eax
  41f323:	popa   
  41f324:	pop    edi
  41f325:	and    eax,0xc9a9b742
  41f32a:	icebp  
  41f32b:	leave  
  41f32c:	std    
  41f32d:	push   eax
  41f32e:	(bad)  
  41f32f:	daa    
  41f330:	outs   dx,DWORD PTR ds:[esi]
  41f331:	xor    DWORD PTR [edx+0x589bb912],ebp
  41f337:	ins    BYTE PTR es:[edi],dx
  41f338:	xor    al,BYTE PTR [edi]
  41f33a:	gs pop ds
  41f33c:	inc    esp
  41f33d:	jnp    0x41f32a
  41f33f:	jmp    0x41f368
  41f341:	or     DWORD PTR [eax-0x7c],esp
  41f344:	sub    al,0xd4
  41f346:	dec    esp
  41f347:	xor    al,BYTE PTR [edx]
  41f349:	mov    al,ds:0xf1cd4b0e
  41f34e:	sbb    al,0x82
  41f350:	mov    ds:0x4cddff86,eax
  41f355:	fld    QWORD PTR ds:0x5c658a25
  41f35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f35c:	inc    ecx
  41f35d:	scas   eax,DWORD PTR es:[edi]
  41f35e:	mov    al,ds:0x94678894
  41f363:	aas    
  41f364:	inc    edi
  41f365:	jo     0x41f399
  41f367:	mov    esp,0xa5043c43
  41f36c:	rcr    BYTE PTR [eax+eiz*2-0x19bd7748],cl
  41f373:	xchg   esp,eax
  41f374:	loopne 0x41f3bf
  41f376:	out    dx,eax
  41f377:	or     cl,BYTE PTR [ebx]
  41f379:	xor    eax,0x9191c351
  41f37e:	sub    bl,BYTE PTR [esi-0x64]
  41f381:	mov    cl,0x89
  41f383:	xor    DWORD PTR [ebx],ebp
  41f385:	js     0x41f3c8
  41f387:	cmp    ecx,DWORD PTR [eax-0x63]
  41f38a:	add    ah,BYTE PTR [esi+0x48e982f7]
  41f390:	fist   DWORD PTR [eax]
  41f392:	xor    eax,0xd8e69355
  41f397:	mov    DWORD PTR ds:0x9a7170c3,ebp
  41f39d:	cwde   
  41f39e:	loop   0x41f3f1
  41f3a0:	pop    esi
  41f3a1:	adc    esp,edi
  41f3a3:	je     0x41f3ed
  41f3a5:	jg     0x41f413
  41f3a7:	push   0x7553a20e
  41f3ac:	int    0x6
  41f3ae:	into   
  41f3af:	popa   
  41f3b0:	inc    ecx
  41f3b1:	pop    esp
  41f3b2:	mov    bh,0x55
  41f3b4:	scas   eax,DWORD PTR es:[edi]
  41f3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b6:	jmp    FWORD PTR [esi-0x71]
  41f3b9:	push   ecx
  41f3ba:	in     al,dx
  41f3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3bc:	or     eax,0x85924f93
  41f3c1:	push   edx
  41f3c2:	inc    esp
  41f3c3:	ret    
  41f3c4:	xor    al,0x7b
  41f3c6:	repz sbb esp,ecx
  41f3c9:	std    
  41f3ca:	pop    es
  41f3cb:	cmp    BYTE PTR [ecx-0x72],0xe9
  41f3cf:	push   0xf420c697
  41f3d4:	xor    BYTE PTR [ebp-0x21c2852f],ch
  41f3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3db:	sub    BYTE PTR [edi],0x6c
  41f3de:	test   al,0x4c
  41f3e0:	(bad)  
  41f3e1:	in     eax,dx
  41f3e2:	sbb    esp,ecx
  41f3e4:	xchg   edi,eax
  41f3e5:	xchg   esp,eax
  41f3e6:	xchg   ecx,eax
  41f3e7:	mov    esi,0xf0d05379
  41f3ec:	pop    eax
  41f3ed:	scas   al,BYTE PTR es:[edi]
  41f3ee:	je     0x41f451
  41f3f0:	push   0x69a1e2e
  41f3f5:	in     al,dx
  41f3f6:	and    DWORD PTR [esi],edx
  41f3f8:	icebp  
  41f3f9:	xchg   ebx,eax
  41f3fa:	aam    0x60
  41f3fc:	pop    edi
  41f3fd:	popa   
  41f3fe:	xchg   BYTE PTR [ebx+0x77],bl
  41f401:	add    al,0x6
  41f403:	pop    ebp
  41f404:	sti    
  41f405:	cli    
  41f406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f407:	add    ebx,esp
  41f409:	lahf   
  41f40a:	and    al,dl
  41f40c:	xor    al,BYTE PTR [edx+0x7406095a]
  41f412:	or     esi,edi
  41f414:	imul   eax,DWORD PTR [esi],0xb0b5be61
  41f41a:	mov    edi,0x22ad9e49
  41f41f:	xor    eax,0xc4351a26
  41f424:	mov    al,ds:0x39f8ba97
  41f429:	push   edi
  41f42a:	adc    al,0x6
  41f42c:	pop    ebx
  41f42d:	or     eax,0x741a9dd
  41f432:	fistp  DWORD PTR [eax-0x474cb34]
  41f438:	mov    dl,0x97
  41f43a:	push   ds
  41f43b:	rol    BYTE PTR [edx+0x6e],cl
  41f43e:	nop
  41f43f:	lahf   
  41f440:	jp     0x41f4a6
  41f442:	jae    0x41f408
  41f444:	ds in  al,0xd1
  41f447:	jb     0x41f494
  41f449:	scas   al,BYTE PTR es:[edi]
  41f44a:	push   esi
  41f44b:	jmp    0xd042d185
  41f450:	xor    eax,0x1d234b2c
  41f455:	pop    ecx
  41f456:	xor    DWORD PTR [ebx],ecx
  41f458:	les    ebx,FWORD PTR [eax+0x75]
  41f45b:	popf   
  41f45c:	push   ds
  41f45d:	mov    WORD PTR [esp+edi*8-0x2298c2e5],?
  41f464:	fld    DWORD PTR [eax+0x3a]
  41f467:	add    BYTE PTR [edx],bl
  41f469:	xchg   edi,eax
  41f46a:	add    al,0xf1
  41f46c:	gs dec edx
  41f46e:	cld    
  41f46f:	jmp    DWORD PTR [ecx-0xc]
  41f472:	fiadd  DWORD PTR [edi-0x705cbf8e]
  41f478:	(bad)  
  41f479:	push   0x90e2f843
  41f47e:	cmp    dh,cl
  41f480:	cdq    
  41f481:	and    BYTE PTR [eax-0xf97c739],ch
  41f487:	nop
  41f488:	pop    ecx
  41f489:	in     eax,0x9c
  41f48b:	outs   dx,DWORD PTR ds:[esi]
  41f48c:	cs mov ecx,0xb9e71699
  41f492:	test   ebp,edi
  41f494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f495:	in     eax,dx
  41f496:	mov    cs,WORD PTR [edi+0x280def0f]
  41f49c:	cmp    DWORD PTR [ebp-0x390a4892],esi
  41f4a2:	dec    ecx
  41f4a3:	fild   QWORD PTR [ebx-0xc162278]
  41f4a9:	adc    al,0xde
  41f4ab:	jnp    0x41f528
  41f4ad:	mov    dl,0x4e
  41f4af:	fld    TBYTE PTR [ecx-0x62]
  41f4b3:	ins    BYTE PTR es:[di],dx
  41f4b5:	std    
  41f4b6:	fdivr  QWORD PTR [esi]
  41f4b8:	xchg   ebx,esi
  41f4ba:	xchg   esi,eax
  41f4bb:	inc    edx
  41f4bc:	xchg   ebx,eax
  41f4bd:	je     0x41f450
  41f4bf:	jne    0x41f472
  41f4c1:	push   ds
  41f4c2:	aam    0x63
  41f4c4:	pusha  
  41f4c5:	(bad)  
  41f4c6:	sti    
  41f4c7:	and    DWORD PTR [ebx+eax*1-0x3d9b3946],0xf24dafbb
  41f4d2:	cmp    bh,al
  41f4d4:	call   0xe7416a35
  41f4d9:	pop    ds
  41f4da:	lds    esp,FWORD PTR ds:0x21f10167
  41f4e0:	add    al,0x6e
  41f4e2:	out    dx,eax
  41f4e3:	fstp   DWORD PTR [edx+0x30ae0950]
  41f4e9:	jae    0x41f4ca
  41f4eb:	add    eax,0x29163012
  41f4f0:	retf   0x1679
  41f4f3:	mov    dl,0x8d
  41f4f5:	int    0xba
  41f4f7:	push   ebx
  41f4f8:	out    dx,al
  41f4f9:	sub    eax,0xa34b1aad
  41f4fe:	lea    eax,ds:0xfea11bb2
  41f504:	add    DWORD PTR [ebp+eiz*2+0x444918f5],ebp
  41f50b:	gs aam 0x62
  41f50e:	xchg   esp,eax
  41f50f:	push   ss
  41f510:	push   esi
  41f511:	mov    al,0x76
  41f513:	add    eax,0xf86360ba
  41f518:	push   ebx
  41f519:	jmp    0x41f54c
  41f51b:	push   ebx
  41f51c:	leave  
  41f51d:	xlat   BYTE PTR ds:[ebx]
  41f51e:	cs lahf 
  41f520:	sub    eax,DWORD PTR [ebp+edx*4+0x21008049]
  41f527:	test   al,0x75
  41f529:	xor    eax,0x52c70fa5
  41f52e:	jno    0x41f55b
  41f530:	mov    dh,0xc1
  41f532:	cmp    eax,0x44dd5528
  41f537:	mov    al,0xa4
  41f539:	retf   
  41f53a:	xchg   ebx,eax
  41f53b:	jecxz  0x41f4e9
  41f53d:	fcomp  DWORD PTR [edi-0x71d65fe6]
  41f543:	cmp    al,0xbd
  41f545:	lock mov ah,0xdc
  41f548:	xchg   edx,eax
  41f549:	and    DWORD PTR [ebx],0xce2c4469
  41f54f:	xchg   edi,eax
  41f550:	cmp    ch,BYTE PTR [ebx+0x7b478f7a]
  41f556:	push   ebx
  41f557:	pusha  
  41f558:	jno    0x41f5bc
  41f55a:	outs   dx,BYTE PTR ds:[esi]
  41f55b:	pushf  
  41f55c:	popf   
  41f55d:	into   
  41f55e:	clc    
  41f55f:	jmp    0xff39:0x4e8e8884
  41f566:	fwait
  41f567:	es repz mov al,0x77
  41f56b:	(bad)  
  41f56c:	loopne 0x41f5d4
  41f56e:	scas   eax,DWORD PTR es:[edi]
  41f56f:	js     0x41f5c0
  41f571:	mov    esi,0x6ab9314
  41f576:	fisubr WORD PTR [eax]
  41f578:	dec    edx
  41f579:	out    0x9a,eax
  41f57b:	xlat   BYTE PTR ds:[ebx]
  41f57c:	loop   0x41f536
  41f57e:	repnz xchg edi,eax
  41f580:	mov    ds:0x205103de,al
  41f585:	sar    BYTE PTR [eax+0x694f9e7b],0xff
  41f58c:	repz cmp ebx,0x12d8a5f1
  41f593:	sub    DWORD PTR [eax-0x39],esp
  41f596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f597:	into   
  41f598:	jnp    0x41f5c9
  41f59a:	adc    esi,ebp
  41f59c:	xchg   esi,eax
  41f59d:	stc    
  41f59e:	jge    0x41f5ac
  41f5a0:	imul   WORD PTR [edx-0x14]
  41f5a4:	repz dec esp
  41f5a6:	dec    eax
  41f5a7:	call   0x4f4b:0x6c24c649
  41f5ae:	lods   ax,WORD PTR ds:[esi]
  41f5b0:	pop    edx
  41f5b1:	push   ss
  41f5b2:	dec    esi
  41f5b3:	xchg   esp,eax
  41f5b4:	add    DWORD PTR [ebx],ebp
  41f5b6:	sub    eax,0x423a50f7
  41f5bb:	daa    
  41f5bc:	xchg   bl,ah
  41f5be:	cmc    
  41f5bf:	inc    ebp
  41f5c0:	aaa    
  41f5c1:	or     al,0x2a
  41f5c3:	inc    ecx
  41f5c4:	ins    BYTE PTR es:[edi],dx
  41f5c5:	aas    
  41f5c6:	adc    eax,0x69c7e152
  41f5cb:	jmp    0x41f641
  41f5cd:	pop    edi
  41f5ce:	mov    esp,0xc46cefb0
  41f5d3:	mov    ebp,0x5ceb8949
  41f5d8:	add    DWORD PTR [ecx-0x52],esp
  41f5db:	push   cs
  41f5dc:	push   cs
  41f5dd:	cmp    edi,0xf061a791
  41f5e3:	lods   al,BYTE PTR ds:[esi]
  41f5e4:	jge    0x41f59f
  41f5e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5e7:	arpl   WORD PTR [ebx+0x3],sp
  41f5ea:	jae    0x41f644
  41f5ec:	data16 arpl si,ax
  41f5ef:	aas    
  41f5f0:	mov    al,ds:0xc2ce461c
  41f5f5:	cmp    eax,0x9fd1cdb5
  41f5fa:	(bad)  
  41f5fb:	sbb    eax,esp
  41f5fd:	and    BYTE PTR [ecx+0x58c28a23],bh
  41f603:	outs   dx,DWORD PTR ds:[esi]
  41f604:	scas   eax,DWORD PTR es:[edi]
  41f605:	and    bh,bh
  41f607:	jnp    0x41f625
  41f609:	dec    eax
  41f60a:	cmp    al,0xb1
  41f60c:	leave  
  41f60d:	add    al,0x6d
  41f60f:	hlt    
  41f610:	pop    edi
  41f611:	jl     0x41f5a2
  41f613:	push   0xffffff9b
  41f615:	js     0x41f5d9
  41f617:	pusha  
  41f618:	cmp    eax,0x258aef29
  41f61d:	mov    ch,0xa5
  41f61f:	adc    DWORD PTR [edx+0x3cd88443],eax
  41f625:	aaa    
  41f626:	mul    BYTE PTR [edx+0x38]
  41f629:	in     eax,0x2a
  41f62b:	push   ebx
  41f62c:	or     DWORD PTR [edx+ecx*2+0x22],edi
  41f630:	mov    eax,ds:0xba965da3
  41f635:	lea    esp,[edx+0x6]
  41f638:	adc    bh,BYTE PTR [esi-0x56d43319]
  41f63e:	cmp    al,0xd5
  41f640:	ja     0x41f61f
  41f642:	std    
  41f643:	mov    ds:0xdc84fd5b,eax
  41f648:	cmp    al,0x74
  41f64a:	(bad)  
  41f64b:	jg     0x41f606
  41f64d:	mov    bl,0x6d
  41f64f:	lock adc al,0x2d
  41f652:	xor    eax,0x39fef375
  41f657:	push   ebp
  41f658:	bound  edx,QWORD PTR [eax+0x3471b7e8]
  41f65e:	mov    dh,0x62
  41f660:	jle    0x41f67e
  41f662:	mov    esp,0x5f0803b2
  41f667:	sbb    eax,0xb5a7b95e
  41f66c:	js     0x41f688
  41f66e:	cld    
  41f66f:	add    eax,DWORD PTR [ebx]
  41f671:	pop    ecx
  41f672:	push   ebp
  41f673:	outs   dx,DWORD PTR ds:[esi]
  41f674:	mov    ch,0xf0
  41f676:	sbb    ebx,edi
  41f678:	mov    eax,ds:0xfbdfdcb2
  41f67d:	inc    esi
  41f67e:	out    0xfd,al
  41f680:	sti    
  41f681:	fbld   TBYTE PTR [ebp+0x44fc885e]
  41f687:	sbb    DWORD PTR [esi-0x4001396e],edi
  41f68d:	(bad)  
  41f68f:	push   cs
  41f690:	out    0xb0,eax
  41f692:	fnstenv [edi+0x2bb9295c]
  41f698:	ins    DWORD PTR es:[edi],dx
  41f699:	dec    esp
  41f69a:	adc    edx,DWORD PTR [esi-0x2a]
  41f69d:	mov    eax,ds:0xecd694e6
  41f6a2:	test   ebx,esp
  41f6a4:	xor    dh,bh
  41f6a6:	lods   al,BYTE PTR ds:[esi]
  41f6a7:	jge    0x41f6e4
  41f6a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6aa:	add    BYTE PTR [ebp+0x30],0x18
  41f6ae:	jnp    0x41f6b8
  41f6b0:	or     ch,bh
  41f6b2:	xchg   BYTE PTR [edi+0x16],bl
  41f6b5:	in     al,0xe
  41f6b7:	cwde   
  41f6b8:	jb     0x41f69e
  41f6ba:	(bad)  
  41f6bb:	jb     0x41f69b
  41f6bd:	push   ecx
  41f6be:	cmp    edx,DWORD PTR ds:0x75869ba3
  41f6c4:	or     eax,0x8fc0ecb3
  41f6c9:	scas   al,BYTE PTR es:[edi]
  41f6ca:	add    DWORD PTR [eax-0x6b30b645],esi
  41f6d0:	mov    ds:0x8bc73d36,eax
  41f6d5:	(bad)  
  41f6d6:	call   0xc138:0x8f5eb09f
  41f6dd:	loop   0x41f6d1
  41f6df:	mov    BYTE PTR [ecx],cl
  41f6e1:	mov    esi,DWORD PTR [ecx-0x22]
  41f6e4:	xchg   edx,eax
  41f6e5:	lods   eax,DWORD PTR ds:[esi]
  41f6e6:	dec    edx
  41f6e7:	mov    al,0xc0
  41f6e9:	mov    WORD PTR [ecx],ss
  41f6eb:	and    DWORD PTR [eax-0xc313d45],0xffffffe7
  41f6f2:	and    edi,DWORD PTR [edi+0x1a]
  41f6f5:	adc    al,0xa8
  41f6f7:	cmp    al,0x42
  41f6f9:	iret   
  41f6fa:	cmp    dh,BYTE PTR [edi]
  41f6fc:	mov    esp,ss
  41f6fe:	or     eax,0xf3908340
  41f703:	mov    ebp,0xe39e7f7
  41f708:	xchg   esi,eax
  41f709:	push   cs
  41f70a:	scas   eax,DWORD PTR es:[edi]
  41f70b:	lds    esi,FWORD PTR ds:0x198b758b
  41f711:	xchg   ebx,eax
  41f712:	outs   dx,DWORD PTR ds:[esi]
  41f713:	jae    0x41f6d5
  41f715:	(bad)  
  41f716:	xchg   ebx,eax
  41f717:	adc    al,0x61
  41f719:	bound  ebx,QWORD PTR [edx]
  41f71b:	adc    eax,0x1f2b982
  41f720:	jle    0x41f74d
  41f722:	mov    ds:0x580e2cd3,eax
  41f727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f728:	out    0x74,al
  41f72a:	push   ebp
  41f72b:	leave  
  41f72c:	mov    al,ds:0x1186bd27
  41f731:	sub    al,0x8e
  41f733:	mov    ch,0x79
  41f735:	push   edx
  41f736:	out    0x64,al
  41f738:	pop    esi
  41f739:	push   esp
  41f73a:	ins    BYTE PTR es:[edi],dx
  41f73b:	bound  ecx,QWORD PTR [ebp+0x7c53ac35]
  41f741:	xchg   dx,ax
  41f743:	scas   eax,DWORD PTR es:[edi]
  41f744:	les    esi,FWORD PTR [edx+0x7d98bbb2]
  41f74a:	ret    
  41f74b:	jmp    0x41f79e
  41f74d:	rcl    WORD PTR [ecx+ebp*8+0x2f51d308],cl
  41f755:	mov    ch,0x7f
  41f757:	push   0xffffff91
  41f759:	fcmovbe st,st(5)
  41f75b:	(bad)  
  41f75c:	mov    esi,0x86242d69
  41f761:	(bad)  
  41f762:	retf   0xd3c3
  41f765:	pop    esp
  41f766:	adc    BYTE PTR ds:[ecx+eax*4],dh
  41f76a:	inc    eax
  41f76b:	call   DWORD PTR [ebx+0x5d]
  41f76e:	push   0x2f7a0be8
  41f773:	dec    esi
  41f774:	fmul   QWORD PTR [ecx-0x69cc3335]
  41f77a:	rcl    DWORD PTR [ebp-0x179e9335],0xa4
  41f781:	aas    
  41f782:	scas   al,BYTE PTR es:[edi]
  41f783:	ficom  DWORD PTR [eax]
  41f785:	push   0x68
  41f787:	mov    ds:0x1b373e5c,eax
  41f78c:	inc    ebx
  41f78d:	rcr    DWORD PTR [esi],1
  41f78f:	ins    BYTE PTR es:[edi],dx
  41f790:	mov    ds:0x7b60467e,eax
  41f795:	mov    edi,0x75306254
  41f79a:	and    dh,bl
  41f79c:	pop    es
  41f79d:	and    al,BYTE PTR [edi-0x14]
  41f7a0:	mov    ebp,0xcc2cdfa4
  41f7a5:	into   
  41f7a6:	into   
  41f7a7:	push   ebx
  41f7a8:	mov    edi,0xdea3142b
  41f7ad:	and    BYTE PTR [ebx+0x19e63293],cl
  41f7b3:	test   al,0xcc
  41f7b5:	or     eax,0xef8f80f5
  41f7ba:	adc    eax,0xb020d46c
  41f7bf:	loope  0x41f796
  41f7c1:	mov    edi,0x557fe22
  41f7c6:	lods   eax,DWORD PTR ds:[esi]
  41f7c7:	jo     0x41f825
  41f7c9:	cmp    al,0x19
  41f7cb:	add    BYTE PTR [eax-0xf03e2e1],ch
  41f7d1:	call   0x9606791
  41f7d6:	pop    esp
  41f7d7:	inc    edx
  41f7d8:	jb     0x41f836
  41f7da:	sbb    BYTE PTR [ecx],dh
  41f7dc:	clc    
  41f7dd:	and    bh,BYTE PTR [ecx+0x7b9bfe59]
  41f7e3:	xor    BYTE PTR [esi],cl
  41f7e5:	sbb    DWORD PTR [edi+0x2c62e266],ebx
  41f7eb:	mov    bl,BYTE PTR [edi+0x2fde8b67]
  41f7f1:	and    DWORD PTR [edx+0x68a9d474],edi
  41f7f7:	sbb    bl,BYTE PTR [ebp-0x293543ba]
  41f7fd:	push   es
  41f7fe:	(bad)  
  41f800:	loope  0x41f81d
  41f802:	enter  0xc7aa,0xa4
  41f806:	mov    bl,0xd6
  41f808:	rcr    BYTE PTR [esi],cl
  41f80a:	xchg   ebp,ebp
  41f80c:	jmp    0xfaad51b4
  41f811:	in     eax,0xf5
  41f813:	cmp    DWORD PTR [edx+ecx*8],esp
  41f816:	aam    0x84
  41f818:	push   edx
  41f819:	scas   al,BYTE PTR es:[edi]
  41f81a:	xor    al,0x96
  41f81c:	sub    al,0x3f
  41f81e:	frstor [ecx+0x17d8d6b3]
  41f824:	pop    eax
  41f825:	dec    ebp
  41f826:	sbb    edi,DWORD PTR [ecx+ecx*1-0x2d362e11]
  41f82d:	mov    ebx,0x993ef1be
  41f832:	or     ecx,esp
  41f834:	dec    esp
  41f835:	jb     0x41f7fb
  41f837:	ror    ebp,1
  41f839:	call   0x8578:0xfb8cb44e
  41f840:	xor    al,0xc5
  41f842:	(bad)  
  41f843:	jae    0x41f8a2
  41f845:	int    0xdf
  41f847:	js     0x41f896
  41f849:	mov    edx,0x958dfafc
  41f84e:	iret   
  41f84f:	(bad)  
  41f851:	adc    dh,BYTE PTR [ebx]
  41f853:	fimul  WORD PTR [eax-0x22ac08b0]
  41f859:	and    bl,0xb3
  41f85c:	pop    ebx
  41f85d:	rcl    BYTE PTR [ebx-0x3d3732ee],0x3b
  41f864:	jecxz  0x41f8bb
  41f866:	and    dh,BYTE PTR [esi+0x3ddec747]
  41f86c:	mov    eax,ds:0xf6aae9f3
  41f871:	ds mov bl,bl
  41f874:	div    bl
  41f876:	or     al,0xfc
  41f878:	mul    DWORD PTR [edi+edx*1]
  41f87b:	lds    esp,FWORD PTR [ecx+0x19]
  41f87e:	cmp    cl,BYTE PTR [ecx+0x7a]
  41f881:	test   BYTE PTR [edx],0x4e
  41f884:	arpl   ax,cx
  41f886:	idiv   DWORD PTR [ebx+0x69]
  41f889:	push   edi
  41f88a:	dec    ecx
  41f88b:	in     al,dx
  41f88c:	in     al,dx
  41f88d:	dec    edx
  41f88e:	out    0x74,al
  41f890:	jno    0x41f8f7
  41f892:	outs   dx,DWORD PTR ds:[esi]
  41f893:	test   edi,edx
  41f895:	adc    ebp,esp
  41f897:	mov    edi,0x565cebc5
  41f89c:	sbb    edi,ebx
  41f89e:	add    eax,0x1e499132
  41f8a3:	idiv   bh
  41f8a5:	mov    ebx,0xe35adb91
  41f8aa:	je     0x41f8d7
  41f8ac:	pop    esi
  41f8ad:	adc    edx,eax
  41f8af:	pop    esi
  41f8b0:	jo     0x41f87e
  41f8b2:	mov    dl,0xe0
  41f8b4:	jmp    0x82f6:0xe94cb983
  41f8bb:	or     DWORD PTR [eax+0x22],ebp
  41f8be:	push   edx
  41f8bf:	repnz adc BYTE PTR ds:0xad387577,bh
  41f8c6:	and    ah,al
  41f8c8:	pusha  
  41f8c9:	xchg   ebx,eax
  41f8ca:	in     eax,dx
  41f8cb:	jp     0x41f87d
  41f8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8ce:	inc    ebx
  41f8cf:	and    BYTE PTR [ecx+0x34409d07],dl
  41f8d5:	std    
  41f8d6:	mov    ebx,DWORD PTR [ecx-0x5046254b]
  41f8dc:	ss mov edx,0xa7e53d3e
  41f8e2:	lock adc DWORD PTR [edx+0x44a239d3],eax
  41f8e9:	xlat   BYTE PTR ds:[ebx]
  41f8ea:	inc    edx
  41f8eb:	and    BYTE PTR ds:0x3e76fa,cl
  41f8f1:	adc    ecx,DWORD PTR [edx]
  41f8f3:	js     0x41f89f
  41f8f5:	loop   0x41f91e
  41f8f7:	js     0x41f91d
  41f8f9:	pusha  
  41f8fa:	or     ah,bh
  41f8fc:	pop    ebp
  41f8fd:	xchg   ebx,eax
  41f8fe:	mov    bl,BYTE PTR [eax+0x28d757ae]
  41f904:	jg     0x41f8b3
  41f906:	cwde   
  41f907:	repz push ebp
  41f909:	inc    esi
  41f90a:	enter  0xcb5c,0x6c
  41f90e:	and    eax,0x7abc099b
  41f913:	add    DWORD PTR [ecx+0x3],ebx
  41f916:	xchg   edx,eax
  41f917:	es cli 
  41f919:	pop    esi
  41f91a:	mov    edi,0xddaa4c44
  41f920:	jae    0x41f8e7
  41f922:	push   ebx
  41f923:	mov    eax,ds:0xc78e537e
  41f928:	xchg   ebp,eax
  41f929:	iret   
  41f92a:	jbe    0x41f908
  41f92c:	mov    fs,esp
  41f92e:	xchg   esp,eax
  41f92f:	cld    
  41f930:	sub    al,BYTE PTR [ebx]
  41f932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f933:	scas   eax,DWORD PTR es:[edi]
  41f934:	mov    ecx,0x79ac166c
  41f939:	sub    al,0xf
  41f93b:	sub    edi,DWORD PTR [edi]
  41f93d:	cld    
  41f93e:	sahf   
  41f93f:	iret   
  41f940:	pop    esp
  41f941:	call   0xd7190f18
  41f946:	das    
  41f947:	jno    0x41f8cb
  41f949:	inc    ebp
  41f94a:	fld    TBYTE PTR [ecx-0x445933d2]
  41f950:	fld1   
  41f952:	mov    ds:0x661b8d19,eax
  41f957:	mov    al,0x18
  41f959:	xchg   edi,eax
  41f95a:	and    cl,al
  41f95c:	in     eax,0x3b
  41f95e:	mov    ds:0x77a9ee99,eax
  41f963:	mov    fs,WORD PTR ds:0x4be35b72
  41f969:	mov    edi,0xb28cf17d
  41f96e:	vorps  xmm4,xmm5,XMMWORD PTR [ebp+0x67c1f2d4]
  41f976:	fistp  DWORD PTR ss:[esi-0x34fc930b]
  41f97d:	pop    ecx
  41f97e:	mov    edi,0x20784a14
  41f983:	push   esi
  41f984:	inc    ecx
  41f985:	retf   0x885c
  41f988:	lahf   
  41f989:	add    eax,0xac7a648a
  41f98e:	mov    dl,dl
  41f990:	lds    esi,FWORD PTR [ebx]
  41f992:	inc    ecx
  41f993:	leave  
  41f994:	and    eax,0x8cd42244
  41f999:	xor    al,0xb9
  41f99b:	test   DWORD PTR [esi-0x16f56e20],0x8b1b7926
  41f9a5:	adc    al,0xb
  41f9a7:	mov    ds:0xfba1f406,eax
  41f9ac:	test   bh,dh
  41f9ae:	fst    st(2)
  41f9b0:	pop    esp
  41f9b1:	(bad)  
  41f9b2:	xlat   BYTE PTR ds:[ebx]
  41f9b3:	pop    ebp
  41f9b4:	(bad)
  41f9b7:	sub    BYTE PTR [esi+eiz*4+0x3a],dl
  41f9bb:	retf   
  41f9bc:	xor    ebp,ecx
  41f9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9bf:	data16 arpl WORD PTR [edi+0x6a76ae02],ax
  41f9c6:	cmc    
  41f9c7:	cli    
  41f9c8:	xchg   si,ax
  41f9ca:	sub    ebx,DWORD PTR [esi]
  41f9cc:	cdq    
  41f9cd:	enter  0x19b3,0x6f
  41f9d1:	mov    esp,0x8b79b0a4
  41f9d6:	dec    ebx
  41f9d7:	jb     0x41fa38
  41f9d9:	cmp    al,0x86
  41f9db:	stc    
  41f9dc:	xor    al,0x85
  41f9de:	daa    
  41f9df:	adc    dl,BYTE PTR cs:[ecx+0x37]
  41f9e3:	push   ds
  41f9e4:	test   al,0xa9
  41f9e6:	dec    esp
  41f9e7:	or     edi,DWORD PTR [esp+ecx*1]
  41f9ea:	add    al,0x31
  41f9ec:	aaa    
  41f9ed:	das    
  41f9ee:	daa    
  41f9ef:	pop    ebp
  41f9f0:	xchg   ebp,eax
  41f9f1:	xchg   DWORD PTR [ebx],esi
  41f9f3:	jnp    0x41fa4c
  41f9f5:	pusha  
  41f9f6:	jno    0x41f9a0
  41f9f8:	out    dx,al
  41f9f9:	jmp    0x6ae9:0xf66336e3
  41fa00:	push   esi
  41fa01:	pop    ebp
  41fa02:	push   ecx
  41fa03:	(bad)  
  41fa04:	clc    
  41fa05:	mov    bh,0xf1
  41fa07:	dec    ebx
  41fa08:	dec    ebx
  41fa09:	pusha  
  41fa0a:	jecxz  0x41f9cd
  41fa0c:	push   0x2d
  41fa0e:	mov    bl,0xbc
  41fa10:	cli    
  41fa11:	mov    bl,0x4f
  41fa13:	pop    ss
  41fa14:	popa   
  41fa15:	cli    
  41fa16:	clc    
  41fa17:	mov    eax,ds
  41fa19:	sbb    BYTE PTR fs:[edx+0x36],dh
  41fa1d:	fwait
  41fa1e:	jnp    0x41f9d9
  41fa20:	repnz or al,0xda
  41fa23:	les    edi,FWORD PTR [ebx-0x26a5931c]
  41fa29:	cld    
  41fa2a:	mov    WORD PTR ds:0x9f1b429b,cs
  41fa30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa31:	ds push esi
  41fa33:	mov    ebp,DWORD PTR [ebx]
  41fa35:	lods   eax,DWORD PTR ds:[esi]
  41fa36:	js     0x41fa47
  41fa38:	push   0xfffffff6
  41fa3a:	inc    eax
  41fa3b:	sub    eax,0x7de13b02
  41fa40:	add    eax,0x35d61ff8
  41fa45:	xor    al,0xdf
  41fa47:	adc    BYTE PTR [edi-0x2deffc52],ch
  41fa4d:	mov    ds:0xe271be9a,eax
  41fa52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa53:	sar    dh,0x38
  41fa56:	jo     0x41fab1
  41fa58:	test   BYTE PTR [eax],dh
  41fa5a:	aas    
  41fa5b:	(bad)  
  41fa5c:	sbb    DWORD PTR [ecx+0x8],ecx
  41fa5f:	imul   DWORD PTR ds:0x6167ea7a
  41fa65:	sti    
  41fa66:	imul   esp,DWORD PTR [edi+eax*1],0x1e
  41fa6a:	scas   eax,DWORD PTR es:[edi]
  41fa6b:	in     eax,0xab
  41fa6d:	ins    BYTE PTR es:[edi],dx
  41fa6e:	lods   eax,DWORD PTR ds:[esi]
  41fa6f:	subps  xmm7,XMMWORD PTR gs:[edi+0x3e]
  41fa74:	arpl   WORD PTR [ebx],di
  41fa76:	neg    DWORD PTR [ebp-0x789c452b]
  41fa7c:	jmp    0x41faed
  41fa7e:	lods   al,BYTE PTR ds:[esi]
  41fa7f:	adc    al,0x44
  41fa81:	adc    edx,ebx
  41fa83:	xor    al,0xb
  41fa85:	xor    edx,DWORD PTR [edx-0x29b7f7f8]
  41fa8b:	inc    eax
  41fa8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa8d:	stc    
  41fa8e:	int    0x43
  41fa90:	repz mov edi,0xdf427d6f
  41fa96:	cmp    ecx,edi
  41fa98:	and    bl,BYTE PTR [ecx+0x74]
  41fa9b:	imul   DWORD PTR [eax]
  41fa9d:	sbb    ebx,0xffffffb8
  41faa0:	xor    al,0x50
  41faa2:	jl     0x41fa38
  41faa4:	or     ebx,ecx
  41faa6:	scas   al,BYTE PTR es:[edi]
  41faa7:	jg     0x41fa77
  41faa9:	adc    BYTE PTR [ebp-0x10],dh
  41faac:	fs out dx,eax
  41faae:	aam    0x1
  41fab0:	add    dh,BYTE PTR ds:[edi+0x21861873]
  41fab7:	or     edx,ebx
  41fab9:	daa    
  41faba:	mov    edx,0xa9f7bbe2
  41fabf:	jo     0x41fa8f
  41fac1:	loopne 0x41fa5a
  41fac3:	imul   ebp,DWORD PTR [ebx+edx*8-0x2c],0x4f
  41fac8:	and    bh,0x41
  41facb:	popa   
  41facc:	ret    0xacae
  41facf:	cmp    edx,DWORD PTR [ebx]
  41fad1:	xchg   ebx,eax
  41fad2:	add    edi,DWORD PTR [eax+0x2d]
  41fad5:	sbb    eax,0x4e814311
  41fada:	mov    ch,0xa9
  41fadc:	loopne 0x41fa80
  41fade:	add    eax,DWORD PTR [ebx-0x1f970531]
  41fae4:	mov    BYTE PTR [esi-0x591185dd],dh
  41faea:	div    DWORD PTR [eax]
  41faec:	inc    esi
  41faed:	cdq    
  41faee:	pop    esi
  41faef:	scas   eax,DWORD PTR es:[edi]
  41faf0:	int    0xfb
  41faf2:	fsubr  st,st(2)
  41faf4:	xchg   esp,eax
  41faf5:	daa    
  41faf6:	fcomp  DWORD PTR [eax-0x2d6c87d3]
  41fafc:	(bad)  
  41fafd:	test   al,0x61
  41faff:	call   ebx
  41fb01:	jmp    0x19f7:0x3387ad26
  41fb08:	mov    dh,dl
  41fb0a:	cmp    eax,0x2d1e74fd
  41fb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb10:	add    edi,0xffffffb0
  41fb13:	fbld   TBYTE PTR [esi-0x1d]
  41fb16:	mov    ebp,0x1ae3d4d8
  41fb1b:	imul   DWORD PTR ds:[esi-0x462f4f4f]
  41fb22:	pop    es
  41fb23:	cmp    ebp,DWORD PTR [ecx+ecx*2]
  41fb26:	push   ebx
  41fb27:	cmp    edi,DWORD PTR [esi]
  41fb29:	xor    edx,edi
  41fb2b:	inc    esi
  41fb2c:	jmp    0x41fb73
  41fb2e:	jecxz  0x41fb16
  41fb30:	adc    ecx,DWORD PTR [ebx+0x26]
  41fb33:	or     eax,0x2d4633f3
  41fb38:	sub    DWORD PTR [ecx-0xc3d4f8f],esi
  41fb3e:	add    BYTE PTR [ebx],bl
  41fb40:	sbb    dl,ch
  41fb42:	nop
  41fb43:	jno    0x41fb7c
  41fb45:	int3   
  41fb46:	push   edx
  41fb47:	and    al,0xde
  41fb49:	arpl   WORD PTR [ebp+0x56],si
  41fb4c:	clc    
  41fb4d:	pop    es
  41fb4e:	lods   eax,DWORD PTR ds:[esi]
  41fb4f:	repnz mov ecx,DWORD PTR [esi-0x42134884]
  41fb56:	pop    eax
  41fb57:	lods   al,BYTE PTR ds:[esi]
  41fb58:	fwait
  41fb59:	pop    ss
  41fb5a:	pushf  
  41fb5b:	aam    0x9e
  41fb5d:	into   
  41fb5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb5f:	and    BYTE PTR [edi+0x270e2a18],0x7a
  41fb66:	fwait
  41fb67:	out    0xff,eax
  41fb69:	lock ficomp DWORD PTR [edi+0x2d9d007f]
  41fb70:	inc    esp
  41fb71:	jno    0x41fbc2
  41fb73:	mov    bh,0x5
  41fb75:	xchg   esi,eax
  41fb76:	and    DWORD PTR [edx+edx*4+0x5a],0xffffffa5
  41fb7b:	sub    DWORD PTR [esi],ecx
  41fb7d:	dec    eax
  41fb7e:	daa    
  41fb7f:	outs   dx,BYTE PTR ds:[esi]
  41fb80:	call   0xfaa5:0xa5e27ce8
  41fb87:	inc    edx
  41fb88:	jmp    0x56c2604b
  41fb8d:	or     BYTE PTR [edi+0x33],cl
  41fb90:	(bad)  
  41fb91:	sbb    edx,DWORD PTR [edx-0x5fd1ae21]
  41fb97:	sar    DWORD PTR [esi],1
  41fb99:	push   ds
  41fb9a:	mov    ebx,0x7b1d84f0
  41fb9f:	hlt    
  41fba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fba1:	lock je 0x41fb9d
  41fba4:	ud2    
  41fba6:	sbb    BYTE PTR [esi+esi*1-0x3a1cbae6],ch
  41fbad:	scas   al,BYTE PTR es:[edi]
  41fbae:	call   0x51d45a80
  41fbb3:	push   ss
  41fbb4:	cld    
  41fbb5:	jnp    0x41fbaa
  41fbb7:	pop    es
  41fbb8:	jle    0x41fb46
  41fbba:	aaa    
  41fbbb:	xchg   ebp,eax
  41fbbc:	and    ebp,ebp
  41fbbe:	jmp    0x9f751bd
  41fbc3:	shl    DWORD PTR [edx],0x93
  41fbc6:	or     dl,ch
  41fbc8:	cli    
  41fbc9:	jno    0x41fb55
  41fbcb:	adc    bh,BYTE PTR [ecx+ebx*4+0x35]
  41fbcf:	lods   eax,DWORD PTR ds:[esi]
  41fbd0:	jae    0x41fb74
  41fbd2:	std    
  41fbd3:	mov    edi,0x61ca28e5
  41fbd8:	inc    edi
  41fbd9:	in     al,dx
  41fbda:	xor    DWORD PTR [ebp-0x7c89053a],esi
  41fbe0:	xchg   ebp,eax
  41fbe1:	xor    DWORD PTR [edx-0x36],edi
  41fbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbe5:	(bad)  
  41fbe7:	mov    ebx,0x8ef99bda
  41fbec:	dec    eax
  41fbed:	cli    
  41fbee:	or     ecx,DWORD PTR [ebx+ecx*8]
  41fbf1:	jnp    0x41fc30
  41fbf3:	rol    DWORD PTR [eax+0x180c6076],1
  41fbf9:	setnp  BYTE PTR [eax-0x51]
  41fbfd:	sbb    DWORD PTR [eax],eax
  41fbff:	out    0x8,al
  41fc01:	lds    esi,FWORD PTR [ebx-0xa]
  41fc04:	cmp    dh,BYTE PTR [edx+0x43]
  41fc07:	cdq    
  41fc08:	inc    esp
  41fc09:	hlt    
  41fc0a:	jg     0x41fc2c
  41fc0c:	icebp  
  41fc0d:	out    0x76,al
  41fc0f:	adc    esp,esp
  41fc11:	jne    0x41fc84
  41fc13:	aaa    
  41fc14:	cdq    
  41fc15:	call   0x6d497505
  41fc1a:	(bad)  
  41fc1b:	jbe    0x41fc6c
  41fc1d:	pop    es
  41fc1e:	cmp    BYTE PTR [edx],bh
  41fc20:	mov    ah,dh
  41fc22:	sbb    eax,0xedfe468a
  41fc27:	cmc    
  41fc28:	mov    eax,0x54389227
  41fc2d:	lock cwde 
  41fc2f:	dec    edi
  41fc30:	xor    ch,cl
  41fc32:	adc    esi,edi
  41fc34:	add    ax,WORD PTR [edi+0x785d2bb5]
  41fc3b:	xchg   BYTE PTR [ebp+0x47],cl
  41fc3e:	aam    0x4b
  41fc40:	fs push ecx
  41fc42:	sub    edx,DWORD PTR [eax+eiz*2+0x65]
  41fc46:	cmp    eax,0x16eeaff0
  41fc4b:	and    DWORD PTR [esp+eax*4-0x27],eax
  41fc4f:	or     BYTE PTR [esi+0x5eeaa500],ah
  41fc55:	fistp  QWORD PTR [esi+0x4]
  41fc58:	in     al,0xf2
  41fc5a:	ret    
  41fc5b:	adc    esp,0x453b5718
  41fc61:	rcr    bl,1
  41fc63:	mov    esp,0xb0e9642b
  41fc68:	je     0x41fc6a
  41fc6a:	xchg   ebp,eax
  41fc6b:	test   al,ah
  41fc6d:	addr16 in al,0x66
  41fc70:	rcr    ch,cl
  41fc72:	shl    edx,cl
  41fc74:	adc    al,0x2b
  41fc76:	push   esi
  41fc77:	mov    eax,ds:0xe9949864
  41fc7c:	inc    edi
  41fc7d:	cld    
  41fc7e:	loop   0x41fcd9
  41fc80:	(bad)  
  41fc81:	jns    0x41fc48
  41fc83:	cmp    BYTE PTR [edx+0x3b],cl
  41fc86:	add    bh,dh
  41fc88:	in     al,dx
  41fc89:	or     BYTE PTR ds:[ebp+edi*8-0xbc83b10],bl
  41fc91:	mov    dl,0x75
  41fc93:	and    BYTE PTR [ebx],dl
  41fc95:	sub    al,dl
  41fc97:	fwait
  41fc98:	push   edx
  41fc99:	sbb    ecx,DWORD PTR [eax+0x61]
  41fc9c:	jge    0x41fcf2
  41fc9e:	ret    
  41fc9f:	imul   eax,DWORD PTR [eax-0x27],0x28
  41fca3:	adc    al,BYTE PTR [edi+esi*1-0x50b2b280]
  41fcaa:	jae    0x41fc47
  41fcac:	adc    eax,0x881a7454
  41fcb1:	icebp  
  41fcb2:	js     0x41fc81
  41fcb4:	xchg   DWORD PTR [eax],ecx
  41fcb6:	sub    BYTE PTR [ecx+eiz*8-0x22],cl
  41fcba:	and    BYTE PTR [edi],cl
  41fcbc:	mov    al,0xff
  41fcbe:	push   ebx
  41fcbf:	in     al,0x18
  41fcc1:	outs   dx,DWORD PTR ds:[esi]
  41fcc2:	mov    ebp,0x21153051
  41fcc7:	xchg   di,ax
  41fcc9:	daa    
  41fcca:	jne    0x41fcd0
  41fccc:	(bad)  
  41fccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcce:	neg    DWORD PTR [ebp+0x565dfa6f]
  41fcd4:	call   0x241c:0xab141b78
  41fcdb:	and    cl,cl
  41fcdd:	jne    0x41fd14
  41fcdf:	outs   dx,BYTE PTR ds:[esi]
  41fce0:	sbb    DWORD PTR [eax-0x4df1653f],eax
  41fce6:	loopne 0x41fd0f
  41fce8:	daa    
  41fce9:	retf   0x9115
  41fcec:	jbe    0x41fd33
  41fcee:	sbb    ch,ah
  41fcf0:	push   ebp
  41fcf1:	(bad)
  41fcf4:	mov    ah,0x7f
  41fcf6:	xchg   BYTE PTR [ecx],dh
  41fcf8:	stc    
  41fcf9:	fwait
  41fcfa:	test   DWORD PTR [ecx+0x77ec147a],eax
  41fd00:	sub    eax,0xff1ef5c5
  41fd05:	scas   eax,DWORD PTR es:[edi]
  41fd06:	repz imul ecx,DWORD PTR [ebp-0x1435dc0c],0xc094b210
  41fd11:	retf   
  41fd12:	cmp    ebx,esp
  41fd14:	push   edx
  41fd15:	shl    BYTE PTR [ecx],1
  41fd17:	in     al,dx
  41fd18:	sbb    BYTE PTR [ebp-0x351e098],bh
  41fd1e:	call   DWORD PTR [ebx]
  41fd20:	dec    ecx
  41fd21:	adc    DWORD PTR [ebx],0xffffff92
  41fd24:	mov    ds:0x2ed1b5ea,eax
  41fd29:	jecxz  0x41fd75
  41fd2b:	add    BYTE PTR [eax-0x62a58dd7],ch
  41fd31:	mov    ch,0x44
  41fd33:	(bad)  
  41fd34:	mov    edi,0x6a2be07f
  41fd39:	sbb    DWORD PTR [ebp+0x174c88fb],0xdbe8b37d
  41fd43:	and    al,al
  41fd45:	std    
  41fd46:	aam    0xd1
  41fd48:	sbb    eax,0x1fac7df4
  41fd4d:	cmp    al,0x7e
  41fd4f:	push   esi
  41fd50:	sub    BYTE PTR [esi],0x95
  41fd53:	hlt    
  41fd54:	pop    ss
  41fd55:	outs   dx,BYTE PTR ds:[esi]
  41fd56:	iret   
  41fd57:	out    0xb8,eax
  41fd59:	xchg   ebp,eax
  41fd5a:	and    eax,0x63c65201
  41fd5f:	fist   DWORD PTR [edi-0x4cabf031]
  41fd65:	jb     0x41fdcc
  41fd67:	adc    ebp,DWORD PTR [ebp+0x69]
  41fd6a:	cmp    dh,BYTE PTR [ebx-0x6fd998ac]
  41fd70:	les    edx,FWORD PTR [esp+ecx*4+0x5f029679]
  41fd77:	push   edi
  41fd78:	mov    edx,0xdb1d524a
  41fd7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd7e:	sub    BYTE PTR [ebp-0x1d1b1d22],ch
  41fd84:	(bad)  
  41fd85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd86:	jns    0x41fdaa
  41fd88:	out    dx,eax
  41fd89:	pop    edi
  41fd8a:	jg     0x41fd9d
  41fd8c:	sahf   
  41fd8d:	fmulp  st(2),st
  41fd8f:	sar    eax,1
  41fd91:	mul    BYTE PTR [esp+esi*4+0x3ad5cbe8]
  41fd98:	add    BYTE PTR [ecx+0x3e82837c],dl
  41fd9e:	es repnz push es
  41fda1:	and    DWORD PTR [esi+0x2f2b3cc9],0x3d
  41fda8:	ja     0x41fd6b
  41fdaa:	xlat   BYTE PTR ds:[ebx]
  41fdab:	mov    esp,0xb7aaf52f
  41fdb0:	loope  0x41fe0d
  41fdb2:	xchg   ebp,eax
  41fdb3:	mov    esp,DWORD PTR [edx]
  41fdb5:	imul   BYTE PTR [eax+ebp*1]
  41fdb8:	push   esp
  41fdb9:	mov    edx,0xb1103a3d
  41fdbe:	inc    eax
  41fdbf:	mov    bl,0xed
  41fdc1:	in     al,dx
  41fdc2:	sbb    bl,BYTE PTR [ebp-0x37e45453]
  41fdc8:	adc    cl,bl
  41fdca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdcb:	popa   
  41fdcc:	in     al,dx
  41fdcd:	in     eax,0x57
  41fdcf:	mov    bh,0x2c
  41fdd1:	and    BYTE PTR [bx+di-0x78b0],cl
  41fdd6:	xor    al,dl
  41fdd8:	mov    al,0xed
  41fdda:	pop    esi
  41fddb:	adc    eax,0x6cec199
  41fde0:	mov    dh,0x69
  41fde2:	sbb    eax,0x874da27f
  41fde7:	(bad)  
  41fde9:	stos   DWORD PTR es:[edi],eax
  41fdea:	rcl    DWORD PTR [edi-0x42281904],1
  41fdf0:	xor    DWORD PTR [eax+0x14],edx
  41fdf3:	int    0x1e
  41fdf5:	sar    BYTE PTR [edi+ecx*4-0x1e1fd3de],cl
  41fdfc:	xlat   BYTE PTR ds:[ebx]
  41fdfd:	call   0x8a75877b
  41fe02:	xchg   edx,eax
  41fe03:	js     0x41fe60
  41fe05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe06:	inc    ebx
  41fe07:	rcr    BYTE PTR [ecx+ebx*8+0x73d43f2d],0x3c
  41fe0f:	xchg   esp,eax
  41fe10:	jge    0x41fdcf
  41fe12:	add    ah,BYTE PTR [ebx]
  41fe14:	arpl   WORD PTR [ecx+edx*4+0x5a00dbf5],bp
  41fe1b:	xchg   edi,eax
  41fe1c:	cmp    bl,bh
  41fe1e:	push   0xffffffcb
  41fe20:	nop
  41fe21:	xchg   ecx,eax
  41fe22:	mov    ch,0xe6
  41fe24:	sub    al,0xc4
  41fe26:	ret    
  41fe27:	jge    0x41fe3b
  41fe29:	inc    edx
  41fe2a:	dec    ecx
  41fe2b:	xor    DWORD PTR [bx+di+0x37ee],eax
  41fe30:	cmp    edi,DWORD PTR [edx]
  41fe32:	nop
  41fe33:	les    eax,FWORD PTR ds:[ecx]
  41fe36:	lds    eax,FWORD PTR [ebx+eiz*4]
  41fe39:	xchg   BYTE PTR [eax+0x51d0b061],dl
  41fe3f:	adc    ecx,DWORD PTR [ecx]
  41fe41:	leave  
  41fe42:	idiv   DWORD PTR [edi]
  41fe44:	xchg   ah,bl
  41fe46:	cmp    al,0x43
  41fe48:	jmp    0xb043:0x713ec145
  41fe4f:	dec    ecx
  41fe50:	(bad)  [esi-0x45]
  41fe53:	xchg   esi,eax
  41fe54:	mov    al,ds:0x6b1ee033
  41fe59:	aam    0x57
  41fe5b:	jp     0x41fe62
  41fe5d:	push   esp
  41fe5e:	ds xchg edi,eax
  41fe60:	adc    eax,0xcbc0ecc3
  41fe65:	out    dx,al
  41fe66:	cmp    al,ch
  41fe68:	push   es
  41fe69:	dec    ebx
  41fe6a:	lds    ebx,FWORD PTR [edx+0x44deb799]
  41fe70:	in     al,0x62
  41fe72:	mov    ds:0x4cb8756b,eax
  41fe77:	lods   eax,DWORD PTR ds:[esi]
  41fe78:	xor    eax,0xc11c46ab
  41fe7d:	inc    ebx
  41fe7e:	jp     0x41fe63
  41fe80:	add    ecx,DWORD PTR [esi+0x561cfdac]
  41fe86:	test   DWORD PTR [eax],edx
  41fe88:	jae    0x41fef7
  41fe8a:	dec    esp
  41fe8b:	push   ebx
  41fe8c:	jmp    0x41fec6
  41fe8e:	inc    ecx
  41fe8f:	mov    esp,0x2b6a4d2b
  41fe94:	shr    BYTE PTR [eax-0x6d],0x7b
  41fe98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe99:	xlat   BYTE PTR ds:[ebx]
  41fe9a:	test   DWORD PTR [eax-0x6d],esp
  41fe9d:	stos   BYTE PTR es:[edi],al
  41fe9e:	pushf  
  41fe9f:	adc    DWORD PTR [edi+ecx*4-0x24c4be3c],esp
  41fea6:	dec    ecx
  41fea7:	xlat   BYTE PTR ds:[ebx]
  41fea8:	dec    ebp
  41fea9:	out    0x20,eax
  41feab:	fnstcw WORD PTR ds:[esi+esi*2-0xe]
  41feb0:	retf   0xbc0d
  41feb3:	test   al,0xb7
  41feb5:	adc    BYTE PTR [ebp+ecx*1+0x4dae3c85],0x15
  41febd:	(bad)  
  41febe:	aas    
  41febf:	push   ss
  41fec0:	cmp    eax,0x229e8d2e
  41fec5:	les    ebx,FWORD PTR [esi-0x18f10aa2]
  41fecb:	mov    esi,0xbafa0df6
  41fed0:	cld    
  41fed1:	sub    eax,0xab4bdc99
  41fed6:	mov    ebx,0x9e9a5ca2
  41fedb:	jne    0x41feae
  41fedd:	sbb    eax,0x8933895f
  41fee2:	jb     0x41ff58
  41fee4:	push   0xffffff98
  41fee6:	inc    esi
  41fee7:	add    DWORD PTR [ecx+0xd9bb7f7],0xf9981ac1
  41fef1:	sbb    esp,DWORD PTR [ebp+0x47]
  41fef4:	pop    ebp
  41fef5:	xchg   ebx,eax
  41fef6:	shl    DWORD PTR [edi+0x52d357d7],1
  41fefc:	mov    esp,0x12e74587
  41ff01:	stos   DWORD PTR es:[edi],eax
  41ff02:	mov    eax,ds:0x71b900ee
  41ff07:	sahf   
  41ff08:	test   dl,0xb0
  41ff0b:	mov    ecx,0x9541762a
  41ff10:	out    0xd9,eax
  41ff12:	xor    bl,BYTE PTR [esi-0x329b1bb8]
  41ff18:	lds    ebp,FWORD PTR [esp+ecx*4-0x72d713ad]
  41ff1f:	dec    esi
  41ff20:	nop
  41ff21:	pop    es
  41ff22:	mov    edx,0xc12cdedf
  41ff27:	out    dx,eax
  41ff28:	sub    dh,BYTE PTR [edi+0x34]
  41ff2b:	xchg   esi,eax
  41ff2c:	lods   eax,DWORD PTR ds:[esi]
  41ff2d:	out    0xcd,al
  41ff2f:	ficomp WORD PTR [esi+0x66b13c3e]
  41ff35:	mov    WORD PTR [esi+0x58],fs
  41ff38:	call   0x74ca:0xb763e28e
  41ff3f:	mov    ds:0xf4458981,al
  41ff44:	add    DWORD PTR ds:0x42a18f,edi
  41ff4a:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  41ff51:	dec    DWORD PTR ds:0x42a193
  41ff57:	mov    eax,DWORD PTR [ebp-0x1c]
  41ff5a:	mov    ecx,DWORD PTR ds:0x42a207
  41ff60:	mov    ecx,DWORD PTR [ecx]
  41ff62:	xor    DWORD PTR ds:0x42a173,ecx
  41ff68:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ff6b:	and    DWORD PTR ds:0x42a173,0x0
  41ff75:	mov    edi,DWORD PTR ds:0x42a173
  41ff7b:	inc    edi
  41ff7c:	mov    DWORD PTR ds:0x42a173,edi
  41ff82:	cmp    DWORD PTR ds:0x42a173,0x16
  41ff89:	jb     0x41ffb1
  41ff8f:	jmp    0x41ffa4
  41ff94:	push   0x372f
  41ff99:	push   0x5fe0
  41ff9e:	call   DWORD PTR ds:0x42a2c7
  41ffa4:	cmp    DWORD PTR ds:0x42a173,0x14
  41ffab:	jb     0x41ff75
  41ffb1:	sub    eax,ecx
  41ffb3:	mov    DWORD PTR [ebp-0x1c],eax
  41ffb6:	xor    ecx,ecx
  41ffb8:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  41ffbf:	sub    ecx,DWORD PTR ds:0x42a133
  41ffc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ffc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41ffcb:	and    DWORD PTR ds:0x42a1af,0x0
  41ffd5:	jmp    0x41ffe9
  41ffda:	xor    edi,edi
  41ffdc:	add    edi,DWORD PTR ds:0x42a1af
  41ffe2:	inc    edi
  41ffe3:	mov    DWORD PTR ds:0x42a1af,edi
  41ffe9:	cmp    DWORD PTR ds:0x42a1af,0x1b
  41fff0:	jae    0x42003a
  41fff6:	cmp    DWORD PTR ds:0x42a1af,0x7
  41fffd:	ja     0x42003a
  420003:	jmp    0x42001b
  420008:	push   0x160a
  42000d:	push   0x42a157
  420012:	push   DWORD PTR [ebp-0x18]
  420015:	call   DWORD PTR ds:0x42a2cf
  42001b:	cmp    DWORD PTR ds:0x42a1af,0x6
  420022:	jne    0x420035
  420028:	mov    edi,DWORD PTR ds:0x42a1af
  42002e:	inc    edi
  42002f:	mov    DWORD PTR ds:0x42a1af,edi
  420035:	jmp    0x41ffda
  42003a:	sub    eax,ecx
  42003c:	mov    DWORD PTR [ebp-0x20],eax
  42003f:	mov    eax,DWORD PTR [ebp-0x2c]
  420042:	mov    ecx,DWORD PTR [ebp-0x20]
  420045:	mov    esi,0x75108a8
  42004a:	xor    eax,esi
  42004c:	mov    edi,0x3272ef
  420051:	add    eax,edi
  420053:	or     eax,ecx
  420055:	mov    DWORD PTR [ebp-0x20],eax
  420058:	mov    eax,DWORD PTR [ebp-0x4]
  42005b:	mov    ecx,DWORD PTR [ebp-0x4]
  42005e:	sub    eax,ecx
  420060:	mov    DWORD PTR [ebp-0x4],eax
  420063:	or     DWORD PTR [ebp-0x4],0xf89c85be
  42006a:	mov    eax,DWORD PTR [ebp-0xc]
  42006d:	xor    eax,esi
  42006f:	add    eax,edi
  420071:	push   eax
  420072:	mov    eax,DWORD PTR [ebp-0x10]
  420075:	xor    eax,esi
  420077:	add    eax,edi
  420079:	push   eax
  42007a:	mov    eax,DWORD PTR [ebp-0x4]
  42007d:	xor    eax,esi
  42007f:	add    eax,edi
  420081:	push   eax
  420082:	lea    eax,[ebp-0x78]
  420085:	push   eax
  420086:	push   DWORD PTR [ebp-0x2c]
  420089:	push   DWORD PTR [ebp-0x28]
  42008c:	call   0x40b04c
  420091:	test   eax,eax
  420093:	je     0x4200c1
  420099:	lea    eax,[ebp-0x78]
  42009c:	push   eax
  42009d:	mov    eax,DWORD PTR [ebp-0x28]
  4200a0:	xor    eax,esi
  4200a2:	add    eax,edi
  4200a4:	push   eax
  4200a5:	mov    eax,DWORD PTR [ebp-0x24]
  4200a8:	add    eax,0xaa
  4200ad:	push   eax
  4200ae:	mov    eax,DWORD PTR [ebp-0x24]
  4200b1:	mov    eax,DWORD PTR [eax+0x198]
  4200b7:	push   DWORD PTR [eax]
  4200b9:	call   0x40a8fb
  4200be:	mov    DWORD PTR [ebp-0x14],eax
  4200c1:	mov    ecx,DWORD PTR ds:0x429527
  4200c7:	lea    eax,[ebp+0x4]
  4200ca:	mov    DWORD PTR [ecx*4+0x42951f],eax
  4200d1:	inc    DWORD PTR ds:0x429527
  4200d7:	mov    eax,DWORD PTR [ebp-0x14]
  4200da:	test   eax,eax
  4200dc:	je     0x420144
  4200e2:	lea    eax,[ebp-0x8]
  4200e5:	mov    DWORD PTR [ebp-0x34],eax
  4200e8:	mov    eax,DWORD PTR [ebp-0x30]
  4200eb:	mov    DWORD PTR [ebp-0x8],eax
  4200ee:	mov    eax,DWORD PTR [ebp-0x8]
  4200f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4200f4:	sub    eax,ecx
  4200f6:	mov    DWORD PTR [ebp-0x8],eax
  4200f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4200fc:	xor    ecx,esi
  4200fe:	mov    eax,0xffcd8d11
  420103:	sub    eax,ecx
  420105:	add    DWORD PTR [ebp-0x8],eax
  420108:	mov    eax,DWORD PTR [ebp-0x8]
  42010b:	mov    ecx,DWORD PTR [ebp-0x14]
  42010e:	mov    DWORD PTR [ecx+0x1],eax
  420111:	mov    eax,DWORD PTR [ebp-0x14]
  420114:	push   DWORD PTR [ebp-0x24]
  420117:	mov    BYTE PTR [eax],0xe9
  42011a:	mov    eax,ds:0x4292ab
  42011f:	push   DWORD PTR [eax]
  420121:	push   DWORD PTR ds:0x42950f
  420127:	push   DWORD PTR ds:0x4292b3
  42012d:	push   DWORD PTR ds:0x4294ef
  420133:	push   DWORD PTR ds:0x429f1b
  420139:	push   DWORD PTR [ebp-0x28]
  42013c:	push   DWORD PTR [ebp-0x2c]
  42013f:	mov    eax,DWORD PTR [ebp-0x14]
  420142:	call   eax
  420144:	pop    edi
  420145:	pop    esi
  420146:	leave  
  420147:	ret    
  420148:	push   ebp
  420149:	mov    ebp,esp
  42014b:	sub    esp,0x1c
  42014e:	add    DWORD PTR ds:0x42a133,edx
  420154:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  42015b:	lea    eax,[ebp+0x14]
  42015e:	mov    DWORD PTR [ebp-0x4],eax
  420161:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  420168:	lea    eax,[ebp-0xc]
  42016b:	and    DWORD PTR ds:0x42a163,0x0
  420175:	jmp    0x420187
  42017a:	mov    ecx,DWORD PTR ds:0x42a163
  420180:	inc    ecx
  420181:	mov    DWORD PTR ds:0x42a163,ecx
  420187:	cmp    DWORD PTR ds:0x42a163,0x1d
  42018e:	jae    0x4201b9
  420194:	cmp    DWORD PTR ds:0x42a163,0x1e
  42019b:	jge    0x4201b9
  4201a1:	jmp    0x4201b4
  4201a6:	push   0x42a157
  4201ab:	push   DWORD PTR [ebp-0x28]
  4201ae:	call   DWORD PTR ds:0x42a2d3
  4201b4:	jmp    0x42017a
  4201b9:	mov    DWORD PTR [ebp-0x14],eax
  4201bc:	xor    ecx,ecx
  4201be:	or     ecx,DWORD PTR ds:0x42a1b7
  4201c4:	and    ecx,DWORD PTR ds:0x42a1ab
  4201ca:	mov    DWORD PTR ds:0x42a1b7,ecx
  4201d0:	mov    eax,DWORD PTR [ebp-0xc]
  4201d3:	sbb    ecx,edx
  4201d5:	mov    edx,DWORD PTR [ebp-0x14]
  4201d8:	mov    ecx,0x75108a8
  4201dd:	add    DWORD PTR ds:0x42a1d3,0x42a18f
  4201e7:	xor    eax,ecx
  4201e9:	sbb    DWORD PTR ds:0x42a1bb,0x42a13f
  4201f3:	add    eax,0x3272ef
  4201f8:	mov    DWORD PTR [edx],eax
  4201fa:	mov    DWORD PTR ds:0x42a16b,0x1a
  420204:	cmp    DWORD PTR ds:0x42a16b,0x0
  42020b:	je     0x420239
  420211:	cmp    DWORD PTR ds:0x42a16b,0x1c
  420218:	jge    0x420239
  42021e:	jmp    0x420229
  420223:	call   DWORD PTR ds:0x42a293
  420229:	mov    eax,ds:0x42a16b
  42022e:	dec    eax
  42022f:	mov    ds:0x42a16b,eax
  420234:	jmp    0x420204
  420239:	mov    eax,ds:0x4292a7
  42023e:	mov    edx,DWORD PTR [ebp-0x4]
  420241:	mov    eax,DWORD PTR [eax]
  420243:	mov    DWORD PTR ds:0x42a14b,0x12e2
  42024d:	add    eax,DWORD PTR [edx]
  42024f:	or     edx,0x7147
  420255:	push   esi
  420256:	mov    DWORD PTR [ebp-0x8],eax
  420259:	and    DWORD PTR ds:0x42a15f,0x0
  420263:	jmp    0x420273
  420268:	mov    eax,ds:0x42a15f
  42026d:	inc    eax
  42026e:	mov    ds:0x42a15f,eax
  420273:	cmp    DWORD PTR ds:0x42a15f,0x15
  42027a:	jae    0x4202af
  420280:	cmp    DWORD PTR ds:0x42a15f,0x1f
  420287:	jge    0x4202af
  42028d:	jmp    0x4202aa
  420292:	push   DWORD PTR [ebp-0x18]
  420295:	push   0x7a6f
  42029a:	push   0x42906a
  42029f:	push   0x400000
  4202a4:	call   DWORD PTR ds:0x42a297
  4202aa:	jmp    0x420268
  4202af:	mov    edx,DWORD PTR [ebp+0x8]
  4202b2:	xor    eax,eax
  4202b4:	mov    eax,ds:0x42942f
  4202b9:	mov    eax,DWORD PTR [eax+0x198]
  4202bf:	sub    DWORD PTR ds:0x42a163,ebx
  4202c5:	xor    edx,ecx
  4202c7:	add    esi,0x2212
  4202cd:	mov    esi,0x3272ef
  4202d2:	add    edx,esi
  4202d4:	mov    DWORD PTR ds:0x42a18b,0x2e1b
  4202de:	cmp    DWORD PTR [eax],edx
  4202e0:	je     0x420301
  4202e6:	mov    DWORD PTR ds:0x42a18b,0x7bac
  4202f0:	mov    eax,DWORD PTR [eax]
  4202f2:	mov    DWORD PTR ds:0x42a167,0x79fc
  4202fc:	jmp    0x4238db
  420301:	mov    eax,DWORD PTR [ebp+0x18]
  420304:	xor    eax,ecx
  420306:	and    DWORD PTR ds:0x42a14b,0x42a13b
  420310:	push   ebx
  420311:	and    DWORD PTR ds:0x42a193,0x0
  42031b:	jmp    0x42032f
  420320:	xor    ebx,ebx
  420322:	xor    ebx,DWORD PTR ds:0x42a193
  420328:	inc    ebx
  420329:	mov    DWORD PTR ds:0x42a193,ebx
  42032f:	cmp    DWORD PTR ds:0x42a193,0x1b
  420336:	jae    0x420359
  42033c:	cmp    DWORD PTR ds:0x42a193,0x26
  420343:	jg     0x420359
  420349:	jmp    0x420354
  42034e:	call   DWORD PTR ds:0x42a29b
  420354:	jmp    0x420320
  420359:	add    eax,esi
  42035b:	movzx  ebx,WORD PTR ds:0x42a1b3
  420362:	sub    DWORD PTR ds:0x42a1ab,ebx
  420368:	xor    edx,edx
  42036a:	mov    ebx,0xfabdbeda
  42036f:	xor    DWORD PTR ds:0x42a1b7,0x42a143
  420379:	add    eax,ebx
  42037b:	mov    DWORD PTR ds:0x42a17f,0x709e
  420385:	push   edi
  420386:	mov    edi,0x12e3
  42038b:	adc    edx,0xffffffff
  42038e:	mov    edi,0x8a29a13b
  420393:	xor    eax,edi
  420395:	xor    edx,0x0
  420398:	cmp    eax,0x70941fe1
  42039d:	mov    DWORD PTR ds:0x42a18f,0x2900
  4203a7:	jne    0x4203de
  4203ad:	mov    DWORD PTR ds:0x42a1bb,0x7794
  4203b7:	cmp    edx,0xffffffff
  4203ba:	mov    DWORD PTR ds:0x42a183,0x5653
  4203c4:	jne    0x4203de
  4203ca:	push   0xf89c85ba
  4203cf:	mov    DWORD PTR ds:0x42a13f,0xea6
  4203d9:	jmp    0x4238c8
  4203de:	sbb    eax,DWORD PTR ds:0x42a167
  4203e4:	mov    eax,DWORD PTR [ebp+0x18]
  4203e7:	xor    eax,ecx
  4203e9:	adc    DWORD PTR ds:0x42a1b7,0x42a183
  4203f3:	add    eax,esi
  4203f5:	xor    edx,edx
  4203f7:	dec    DWORD PTR ds:0x42a17b
  4203fd:	add    eax,ebx
  4203ff:	mov    DWORD PTR ds:0x42a133,0x604
  420409:	adc    edx,0xffffffff
  42040c:	adc    DWORD PTR ds:0x42a12f,0x42a18f
  420416:	xor    eax,edi
  420418:	xor    edx,0x0
  42041b:	mov    DWORD PTR ds:0x42a14b,0x4b6d
  420425:	cmp    eax,0x70941fe7
  42042a:	mov    DWORD PTR ds:0x42a18f,0x342
  420434:	jne    0x4238b5
  42043a:	mov    DWORD PTR ds:0x42a19b,0x69f4
  420444:	cmp    edx,0xffffffff
  420447:	jne    0x4238b5
  42044d:	and    edx,eax
  42044f:	mov    eax,DWORD PTR [ebp+0x10]
  420452:	inc    edx
  420453:	xor    eax,ecx
  420455:	movzx  edx,BYTE PTR ds:0x42a173
  42045c:	and    DWORD PTR ds:0x42a1bf,edx
  420462:	add    eax,esi
  420464:	sub    DWORD PTR ds:0x42a1d3,0x2e10
  42046e:	mov    DWORD PTR [ebp-0x18],eax
  420471:	xor    DWORD PTR ds:0x42a197,ebx
  420477:	mov    eax,DWORD PTR [ebp+0xc]
  42047a:	mov    edx,DWORD PTR ds:0x42a14f
  420480:	and    DWORD PTR ds:0x42a1bf,edx
  420486:	mov    edx,DWORD PTR [ebp-0x8]
  420489:	or     DWORD PTR ds:0x42a197,0x42a1bb
  420493:	xor    eax,ecx
  420495:	xor    DWORD PTR ds:0x42a173,0x2c59
  42049f:	add    eax,esi
  4204a1:	add    DWORD PTR ds:0x42a12b,0x1203
  4204ab:	imul   eax,DWORD PTR [edx]
  4204ae:	mov    edx,DWORD PTR [ebp+0x8]
  4204b1:	xor    edx,ecx
  4204b3:	add    edx,esi
  4204b5:	mov    DWORD PTR ds:0x42a157,0x15dc
  4204bf:	cmp    edx,eax
  4204c1:	mov    eax,DWORD PTR [ebp-0x4]
  4204c4:	mov    DWORD PTR ds:0x42a19b,0x25f0
  4204ce:	je     0x422919
  4204d4:	xor    DWORD PTR ds:0x42a1b3,edi
  4204da:	mov    edx,DWORD PTR [ebp-0x18]
  4204dd:	and    DWORD PTR ds:0x42a12b,0x42a167
  4204e7:	add    DWORD PTR [eax],edx
  4204e9:	mov    eax,DWORD PTR [ebp-0x4]
  4204ec:	sbb    edx,0x41ab
  4204f2:	mov    edx,DWORD PTR [ebp+0xc]
  4204f5:	or     DWORD PTR ds:0x42a167,0x42a133
  4204ff:	xor    edx,ecx
  420501:	and    DWORD PTR ds:0x42a133,0x1b9a
  42050b:	add    edx,esi
  42050d:	imul   edx,DWORD PTR [eax]
  420510:	mov    DWORD PTR ds:0x42a1c7,0x43e8
  42051a:	mov    DWORD PTR [eax],edx
  42051c:	mov    eax,DWORD PTR [ebp-0x4]
  42051f:	and    DWORD PTR ds:0x42a183,0x0
  420529:	mov    edx,DWORD PTR ds:0x42a183
  42052f:	inc    edx
  420530:	mov    DWORD PTR ds:0x42a183,edx
  420536:	cmp    DWORD PTR ds:0x42a183,0x8
  42053d:	jge    0x420589
  420543:	jmp    0x420560
  420548:	push   0x4b4a
  42054d:	push   DWORD PTR [ebp-0x20]
  420550:	push   0x429257
  420555:	push   0x400000
  42055a:	call   DWORD PTR ds:0x42a2a3
  420560:	cmp    DWORD PTR ds:0x42a183,0x7
  420567:	jne    0x42057c
  42056d:	xor    edx,edx
  42056f:	or     edx,DWORD PTR ds:0x42a183
  420575:	inc    edx
  420576:	mov    DWORD PTR ds:0x42a183,edx
  42057c:	cmp    DWORD PTR ds:0x42a183,0x1f
  420583:	jb     0x420529
  420589:	mov    DWORD PTR [ebp-0x1c],eax
  42058c:	not    DWORD PTR ds:0x42a197
  420592:	mov    eax,DWORD PTR [ebp+0x10]
  420595:	jmp    0x422908
  42059a:	and    eax,0x3cc0e30
  42059f:	les    ebx,FWORD PTR [ebx+0x426a7a97]
  4205a5:	imul   eax,edi,0x5dc96aec
  4205ab:	mov    dh,0x79
  4205ad:	jp     0x4205db
  4205af:	pop    edi
  4205b0:	jp     0x42062c
  4205b2:	cmp    BYTE PTR [edi-0x54798797],ah
  4205b8:	ins    DWORD PTR es:[edi],dx
  4205b9:	dec    esi
  4205ba:	(bad)  
  4205bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205bc:	mov    ecx,0x8b8e5cf3
  4205c1:	xchg   DWORD PTR [esi-0x362b1b58],ebx
  4205c7:	ja     0x42058f
  4205c9:	sbb    BYTE PTR [ebx+0x2d],ah
  4205cc:	and    al,0x3c
  4205ce:	sub    DWORD PTR [eax+0x7183db5f],eax
  4205d4:	sahf   
  4205d5:	fisubr WORD PTR [esi+0xc]
  4205d8:	mov    ebp,0x2be138d1
  4205dd:	popa   
  4205de:	out    dx,al
  4205df:	sbb    al,0xa2
  4205e1:	in     eax,0x50
  4205e3:	popf   
  4205e4:	sti    
  4205e5:	pop    edi
  4205e6:	pop    eax
  4205e7:	ins    DWORD PTR es:[edi],dx
  4205e8:	sbb    DWORD PTR ds:0x32771bb7,ebp
  4205ee:	and    al,0xbd
  4205f0:	sbb    dh,BYTE PTR [ecx+edi*4+0x48]
  4205f4:	test   DWORD PTR [esi],esi
  4205f6:	sti    
  4205f7:	adc    al,0x13
  4205f9:	in     al,0x98
  4205fb:	xor    edx,DWORD PTR [edx+0x19]
  4205fe:	(bad)
  420603:	scas   eax,DWORD PTR es:[edi]
  420604:	inc    ebp
  420605:	mov    esi,0xb2937168
  42060a:	aad    0x29
  42060c:	out    0x1c,al
  42060e:	jne    0x4205bc
  420610:	lock mov dl,0x8
  420613:	add    al,0x3c
  420615:	push   cs
  420616:	scas   eax,DWORD PTR es:[edi]
  420617:	pop    ebx
  420618:	out    dx,al
  420619:	das    
  42061a:	arpl   WORD PTR [ecx+0x778620bc],bp
  420620:	mov    al,ds:0xc785bc6b
  420625:	push   edx
  420626:	cmp    DWORD PTR [edx+0x7],ebp
  420629:	push   eax
  42062a:	sbb    DWORD PTR ds:0x7c3ec7b9,edi
  420630:	rcl    cl,cl
  420632:	ins    BYTE PTR es:[edi],dx
  420633:	pop    esp
  420634:	jo     0x4206ab
  420636:	pop    es
  420637:	add    BYTE PTR [edx-0x13],dh
  42063a:	push   es
  42063b:	mov    eax,ds:0x13fccff1
  420640:	(bad)  
  420641:	jno    0x4205ef
  420643:	pop    ebx
  420644:	inc    ebp
  420645:	adc    DWORD PTR [esp+edi*1-0x32],edx
  420649:	jmp    0x7b3a07a
  42064e:	mov    eax,0x365da569
  420653:	mov    cl,0x1c
  420655:	cli    
  420656:	leave  
  420657:	sahf   
  420658:	(bad)  
  420659:	popf   
  42065a:	cwde   
  42065b:	pop    ebp
  42065c:	sbb    DWORD PTR [ebx-0x3276d333],ecx
  420662:	cmp    edx,DWORD PTR [bp+0x1849]
  420667:	jno    0x420672
  420669:	xchg   ebp,eax
  42066a:	out    0xb2,al
  42066c:	repz or al,0xfc
  42066f:	popf   
  420670:	or     DWORD PTR [ecx+0x82ab14f],eax
  420676:	data16 xor al,0x74
  420679:	push   edi
  42067a:	aaa    
  42067b:	fimul  DWORD PTR [ecx+0x22]
  42067e:	pop    ebx
  42067f:	out    dx,eax
  420680:	mov    al,0x6b
  420682:	popf   
  420683:	(bad)  
  420684:	mov    ds:0x14439a2f,al
  420689:	dec    ebp
  42068a:	imul   eax,ecx,0xc4cb1007
  420690:	inc    ebp
  420691:	xchg   edi,eax
  420692:	repz adc eax,0x1e3176fd
  420698:	cdq    
  420699:	test   eax,0x6a4268a2
  42069e:	hlt    
  42069f:	sub    ebp,DWORD PTR [edx]
  4206a1:	addr16 in al,dx
  4206a3:	dec    ebp
  4206a4:	pusha  
  4206a5:	sbb    eax,0x51a75e72
  4206aa:	jecxz  0x420643
  4206ac:	sbb    ebp,esi
  4206ae:	addr16 (bad) 
  4206b0:	into   
  4206b1:	stos   DWORD PTR es:[edi],eax
  4206b2:	pop    ebp
  4206b3:	mov    edi,0xd7dd8c2f
  4206b8:	xchg   edx,eax
  4206b9:	imul   edi
  4206bb:	push   0x42
  4206bd:	or     BYTE PTR [eax-0x15],0x67
  4206c1:	push   ecx
  4206c2:	cld    
  4206c3:	sub    esp,DWORD PTR [edi+0x46]
  4206c6:	enter  0x1e11,0x5f
  4206ca:	or     cl,ah
  4206cc:	adc    edi,DWORD PTR [ebx]
  4206ce:	xor    al,0x1a
  4206d0:	ret    
  4206d1:	jp     0x4206fb
  4206d3:	es popf 
  4206d5:	in     al,0x9e
  4206d7:	jb     0x42073f
  4206d9:	cwde   
  4206da:	fild   WORD PTR [ebx+eax*4-0x63e436d7]
  4206e1:	cmp    al,0x38
  4206e3:	jmp    0x420679
  4206e5:	(bad)  
  4206e6:	cld    
  4206e7:	cli    
  4206e8:	sbb    BYTE PTR [ecx+0x22],ch
  4206eb:	pop    esi
  4206ec:	test   esi,edx
  4206ee:	pop    ebp
  4206ef:	loopne 0x42076a
  4206f1:	inc    ecx
  4206f2:	nop
  4206f3:	lods   eax,DWORD PTR ds:[esi]
  4206f4:	xchg   esp,eax
  4206f5:	push   0xffffff96
  4206f7:	xor    bl,BYTE PTR [edx+0x28b94f31]
  4206fd:	push   DWORD PTR [eax-0x57]
  420700:	pop    ecx
  420701:	mov    dh,0xe3
  420703:	mov    bl,0x2f
  420705:	add    ah,BYTE PTR fs:[edx]
  420708:	mov    dl,0xe9
  42070a:	test   eax,0x95019c41
  42070f:	or     al,0x91
  420711:	(bad)  
  420712:	mov    esp,0x729b7dd
  420717:	pop    edi
  420718:	sbb    eax,0xde8aec4c
  42071d:	mov    dl,0x3a
  42071f:	cmp    eax,0xb7498afb
  420724:	adc    eax,0x8b8ceb4a
  420729:	jbe    0x420730
  42072b:	retf   0xe008
  42072e:	or     BYTE PTR [ebp+0x78],al
  420731:	xchg   ecx,eax
  420732:	jae    0x420796
  420734:	outs   dx,BYTE PTR ds:[esi]
  420735:	mov    BYTE PTR [edx+esi*4+0x41],bl
  420739:	dec    ebp
  42073a:	call   0x9ced:0x91b4
  420740:	sub    DWORD PTR [ebp-0x14f1c2b8],esp
  420746:	pop    es
  420747:	fxch   st(0)
  420749:	mov    gs,WORD PTR [esi+0xa]
  42074c:	arpl   WORD PTR [ecx],cx
  42074e:	jmp    0xe16b:0x511f2817
  420755:	(bad)  
  420756:	adc    BYTE PTR [edx],dl
  420758:	add    eax,0xcde3bfc7
  42075d:	or     DWORD PTR [edi-0x51dfd81a],0x3d
  420764:	push   ebp
  420765:	jbe    0x420763
  420767:	sub    eax,0x252ccc1c
  42076c:	mov    dh,0x1e
  42076e:	retf   
  42076f:	mov    edi,0x23a7263d
  420774:	fwait
  420775:	dec    ebp
  420776:	hlt    
  420777:	leave  
  420778:	jbe    0x4207de
  42077a:	(bad)  
  42077b:	fdivrp st(0),st
  42077d:	jne    0x4207f9
  42077f:	les    esp,FWORD PTR [ecx-0x3439449d]
  420785:	mov    cl,0xe9
  420787:	sub    eax,0x30e8c745
  42078c:	jbe    0x420787
  42078e:	xchg   ebp,eax
  42078f:	adc    bh,BYTE PTR [edx+0x58ab3c98]
  420795:	dec    edx
  420796:	mov    cl,0x35
  420798:	dec    ecx
  420799:	push   0xf80ceffd
  42079e:	cmp    ch,BYTE PTR [ebx]
  4207a0:	popa   
  4207a1:	jp     0x420765
  4207a3:	sar    BYTE PTR [ecx+edx*2],cl
  4207a6:	ja     0x4207b5
  4207a8:	in     al,0xf2
  4207aa:	cdq    
  4207ab:	rcr    BYTE PTR [edi+0x6c],cl
  4207ae:	inc    esi
  4207af:	ror    DWORD PTR [ebx+eiz*1],0x9e
  4207b3:	xor    DWORD PTR [ecx],ebx
  4207b5:	aad    0xeb
  4207b7:	or     ebx,DWORD PTR [edi]
  4207b9:	int3   
  4207ba:	test   eax,0x9999c4fc
  4207bf:	xchg   DWORD PTR [edx-0x12],ecx
  4207c2:	icebp  
  4207c3:	jb     0x4207f8
  4207c5:	fdivr  DWORD PTR [esi+0x4e46f08f]
  4207cb:	cli    
  4207cc:	dec    esp
  4207cd:	mov    esi,0x234a00db
  4207d2:	mov    cl,0xe2
  4207d4:	mov    BYTE PTR [edx-0x2576314c],ch
  4207da:	mov    cl,ch
  4207dc:	fld    st(1)
  4207de:	xor    BYTE PTR [edi+0x79],0x25
  4207e2:	test   edi,edx
  4207e4:	enter  0x58b3,0xc
  4207e8:	in     eax,dx
  4207e9:	push   edi
  4207ea:	adc    ah,BYTE PTR [eax]
  4207ec:	push   cs
  4207ed:	push   cs
  4207ee:	outs   dx,BYTE PTR ds:[esi]
  4207ef:	popa   
  4207f0:	dec    eax
  4207f1:	int    0x7d
  4207f3:	mov    ss,WORD PTR [edi+0x6c7b65bd]
  4207f9:	fld    TBYTE PTR fs:[ecx]
  4207fc:	sub    eax,0x6aec76a1
  420801:	enter  0x7e35,0xb9
  420805:	inc    edx
  420806:	outs   dx,BYTE PTR ds:[esi]
  420807:	mov    edx,ebp
  420809:	bound  esp,QWORD PTR [ecx]
  42080b:	sub    eax,eax
  42080d:	pop    es
  42080e:	push   es
  42080f:	mov    edi,0xa194d4c9
  420814:	jns    0x4207c1
  420816:	dec    esi
  420817:	scas   eax,DWORD PTR es:[edi]
  420818:	sub    al,0xc2
  42081a:	sar    edx,0x63
  42081d:	out    0xd5,eax
  42081f:	xor    bl,BYTE PTR [esi+edx*8]
  420822:	and    ch,ah
  420824:	mov    ebx,0xbab15eb2
  420829:	add    BYTE PTR [ebx-0x62969f00],0x56
  420830:	xor    ebx,esi
  420832:	xor    BYTE PTR [edi+0x7d64e34],bh
  420838:	test   eax,0x17a94388
  42083d:	cmp    DWORD PTR [edi+0x19],ebp
  420840:	mov    ebp,0xbfb5de9
  420845:	lock dec edi
  420847:	mov    ebx,0x17894675
  42084c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084d:	(bad)
  420850:	dec    esp
  420851:	cmp    ecx,DWORD PTR [ebp-0x5c70deb4]
  420857:	call   FWORD PTR [ecx+esi*2+0x5f]
  42085b:	aas    
  42085c:	fsubp  st(1),st
  42085e:	dec    ebp
  42085f:	mov    dh,0xbd
  420861:	dec    edx
  420862:	fcmovb st,st(0)
  420864:	inc    esp
  420865:	inc    edi
  420866:	cld    
  420867:	pop    edx
  420868:	push   0xffffff82
  42086a:	mov    al,0xe7
  42086c:	fidivr WORD PTR [esi-0xe80bfb7]
  420872:	xchg   ebp,eax
  420873:	sub    bh,BYTE PTR [esi]
  420875:	ins    BYTE PTR es:[edi],dx
  420876:	sub    DWORD PTR [ebp+0x635f402b],ecx
  42087c:	xor    BYTE PTR [edx+eiz*1-0x2f],dh
  420880:	ror    DWORD PTR [edi],1
  420882:	fistp  WORD PTR [ebx]
  420884:	pusha  
  420885:	retf   
  420886:	cmp    BYTE PTR [edx+0x4e8b79c3],al
  42088c:	inc    esp
  42088d:	int3   
  42088e:	mov    dl,0xa9
  420890:	push   ecx
  420891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420892:	xchg   esi,eax
  420893:	xor    bh,BYTE PTR [esi-0x5250b8d1]
  420899:	sub    ch,BYTE PTR [eax]
  42089b:	retf   0x5fbd
  42089e:	ins    DWORD PTR es:[edi],dx
  42089f:	ret    
  4208a0:	sti    
  4208a1:	fwait
  4208a2:	mov    edi,0xfce29eae
  4208a7:	loopne 0x4208a3
  4208a9:	leave  
  4208aa:	mov    ebp,0x68395d
  4208af:	inc    esi
  4208b0:	fs mov al,0x2
  4208b3:	add    ch,BYTE PTR [edi-0x6f023f2d]
  4208b9:	and    BYTE PTR [eax+0x7],dl
  4208bc:	xchg   esi,eax
  4208bd:	dec    ebp
  4208be:	jno    0x420874
  4208c0:	popa   
  4208c1:	jbe    0x4208b6
  4208c3:	lock sub bh,BYTE PTR [eax+ebx*1+0x7c79717d]
  4208cb:	jmp    0x420909
  4208cd:	push   0x28
  4208cf:	mov    eax,0x43fe4dd7
  4208d4:	and    al,0xdb
  4208d6:	aaa    
  4208d7:	xchg   DWORD PTR [esp+ebp*8+0x5c],eax
  4208db:	in     al,dx
  4208dc:	cli    
  4208dd:	retf   
  4208de:	or     BYTE PTR [edi-0x6],ah
  4208e1:	nop
  4208e2:	(bad)  [ecx-0x54]
  4208e5:	xchg   ecx,eax
  4208e6:	out    0xe4,eax
  4208e8:	mov    cl,0xf8
  4208ea:	pop    ebp
  4208eb:	or     dl,bh
  4208ed:	ds push ss
  4208ef:	nop
  4208f0:	jns    0x42087a
  4208f2:	push   es
  4208f3:	stos   BYTE PTR es:[edi],al
  4208f4:	(bad)  
  4208f5:	(bad)  
  4208f6:	jle    0x42093b
  4208f8:	popf   
  4208f9:	stos   BYTE PTR es:[edi],al
  4208fa:	icebp  
  4208fb:	fsub   st,st(4)
  4208fd:	mov    eax,DWORD PTR [eax+ecx*4]
  420900:	outs   dx,BYTE PTR ds:[esi]
  420901:	scas   eax,DWORD PTR es:[edi]
  420902:	(bad)  
  420903:	mul    BYTE PTR [ecx]
  420905:	aas    
  420906:	ret    
  420907:	test   eax,0x91a9251
  42090c:	xor    BYTE PTR [edi+esi*8],0xaa
  420910:	mov    esi,0x2f29b10d
  420915:	stc    
  420916:	mov    ch,0x9
  420918:	jp     0x42097a
  42091a:	jg     0x4208ea
  42091c:	sub    DWORD PTR [eax+0x4b],ecx
  42091f:	jge    0x4208dd
  420921:	nop
  420922:	ins    BYTE PTR es:[edi],dx
  420923:	jno    0x420908
  420925:	outs   dx,DWORD PTR ds:[esi]
  420926:	test   DWORD PTR [ecx+0x37],ecx
  420929:	mov    esp,0x5b0bce59
  42092e:	push   es
  42092f:	ffreep st(3)
  420931:	lahf   
  420932:	in     eax,0x7d
  420934:	in     eax,0x43
  420936:	dec    esp
  420937:	xlat   BYTE PTR ds:[ebx]
  420938:	push   0xffffff93
  42093a:	xor    al,0x75
  42093c:	cmc    
  42093d:	sahf   
  42093e:	cmp    al,0x5a
  420940:	fstp   QWORD PTR [ecx]
  420942:	inc    ebp
  420943:	aad    0xd2
  420945:	jg     0x42092c
  420947:	jge    0x420949
  420949:	imul   esi,DWORD PTR [edx+eiz*2-0x4b],0x7a
  42094e:	in     al,0x36
  420950:	pop    ebp
  420951:	cmp    dh,BYTE PTR [ecx+0x1f2470f6]
  420957:	test   DWORD PTR [esi-0x1937d060],ebp
  42095d:	mov    ax,ds:0xe6ab5b74
  420963:	xchg   esi,eax
  420964:	jle    0x420986
  420966:	dec    edi
  420967:	shl    BYTE PTR [edx+ebp*8],cl
  42096a:	outs   dx,BYTE PTR ds:[esi]
  42096b:	or     al,0x4c
  42096d:	mov    WORD PTR [edi-0x793dfc59],gs
  420973:	int3   
  420974:	sbb    eax,0xe02deb00
  420979:	adc    BYTE PTR [eax+edx*8+0x48b900a],ah
  420980:	inc    ecx
  420981:	test   DWORD PTR [ebp+ebx*2-0x7],esp
  420985:	aam    0xda
  420987:	fdiv   QWORD PTR [ebx-0x3ce513ce]
  42098d:	jnp    0x4209e6
  42098f:	push   edi
  420990:	sbb    DWORD PTR [edi-0x564b407c],eax
  420996:	push   DWORD PTR [ebp-0x2f]
  420999:	sbb    DWORD PTR [esi+0x66f4b013],ecx
  42099f:	loop   0x42094c
  4209a1:	imul   esi,DWORD PTR [ebx+ebx*8-0x670b5563],0x80ca9141
  4209ac:	scas   al,BYTE PTR es:[edi]
  4209ad:	leave  
  4209ae:	out    0xf9,eax
  4209b0:	je     0x4209ca
  4209b2:	gs stc 
  4209b4:	les    ecx,FWORD PTR [edx-0xff124f6]
  4209ba:	adc    al,0xe5
  4209bc:	push   ds
  4209bd:	int3   
  4209be:	shl    BYTE PTR [edx],1
  4209c0:	(bad)  
  4209c1:	ins    BYTE PTR es:[edi],dx
  4209c2:	je     0x4209ba
  4209c4:	dec    esp
  4209c5:	sti    
  4209c6:	xchg   esi,eax
  4209c7:	imul   esi,ebp,0x5b
  4209ca:	xchg   ebx,eax
  4209cb:	hlt    
  4209cc:	rol    edx,1
  4209ce:	pop    ebp
  4209cf:	dec    ebp
  4209d0:	mov    al,0x27
  4209d2:	popa   
  4209d3:	sub    DWORD PTR [ebx],edi
  4209d5:	popf   
  4209d6:	adc    BYTE PTR [edx+0x16a71666],ah
  4209dc:	sub    al,0x89
  4209de:	push   ebx
  4209df:	dec    ebp
  4209e0:	ins    DWORD PTR es:[edi],dx
  4209e1:	jecxz  0x420a43
  4209e3:	xor    al,0x98
  4209e5:	out    0xe6,al
  4209e7:	jns    0x420976
  4209e9:	fs popf 
  4209eb:	dec    ecx
  4209ec:	jp     0x420a25
  4209ee:	addr16 sub eax,0x96e59c28
  4209f4:	sbb    al,0x31
  4209f6:	loop   0x420985
  4209f8:	inc    eax
  4209f9:	add    ah,dl
  4209fb:	add    edx,esp
  4209fd:	call   0x725adf4e
  420a02:	mov    ecx,0xcf2ed7
  420a07:	push   ax
  420a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a0a:	mov    BYTE PTR [eax-0x43],dl
  420a0d:	out    dx,eax
  420a0e:	xor    edx,DWORD PTR [ebp-0x59]
  420a11:	cwde   
  420a12:	jnp    0x420a66
  420a14:	or     ecx,DWORD PTR [ecx-0x20ca4963]
  420a1a:	(bad)  
  420a1b:	ins    BYTE PTR es:[edi],dx
  420a1c:	cmp    eax,DWORD PTR [edi]
  420a1e:	fimul  WORD PTR [esi]
  420a20:	paddb  mm5,QWORD PTR [esi+0x4f9d0205]
  420a27:	inc    esi
  420a28:	jg     0x4209b1
  420a2a:	jge    0x420a7d
  420a2c:	fnsave [esi-0x7]
  420a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a30:	push   ebp
  420a31:	ror    ebx,0x46
  420a34:	inc    esp
  420a35:	pop    ecx
  420a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a38:	mov    dl,0x7a
  420a3a:	dec    eax
  420a3b:	aam    0x88
  420a3d:	cmp    ebp,eax
  420a3f:	popa   
  420a40:	mov    ebx,ecx
  420a42:	jo     0x4209d9
  420a44:	std    
  420a45:	data16 sub ah,ah
  420a48:	pushf  
  420a49:	fisttp DWORD PTR [ebx]
  420a4b:	nop
  420a4c:	imul   edi,DWORD PTR [ecx+0x11],0x14edca66
  420a53:	in     eax,dx
  420a54:	scas   eax,DWORD PTR es:[edi]
  420a55:	inc    edx
  420a56:	shl    edx,1
  420a58:	ror    DWORD PTR [ecx],0xc2
  420a5b:	js     0x420a87
  420a5d:	sti    
  420a5e:	sub    ebp,DWORD PTR [ebp+0x338cbd03]
  420a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a65:	pushf  
  420a66:	je     0x420a66
  420a68:	and    al,0xf3
  420a6a:	sbb    eax,0xefb2c1e8
  420a6f:	sahf   
  420a70:	push   eax
  420a71:	pop    si
  420a73:	adc    eax,ebp
  420a75:	pop    edi
  420a76:	push   ds
  420a77:	fsub   DWORD PTR [ebx-0x14]
  420a7a:	add    eax,DWORD PTR [ebx]
  420a7c:	sti    
  420a7d:	cmp    edx,DWORD PTR [ebp-0x30c725d2]
  420a83:	lea    ebp,[esi]
  420a85:	jg     0x420a13
  420a87:	add    ebp,DWORD PTR ds:0xc96a958
  420a8d:	push   edi
  420a8e:	fistp  WORD PTR [ecx]
  420a90:	xlat   BYTE PTR ds:[ebx]
  420a91:	mov    ebp,0xfecca978
  420a96:	imul   eax,DWORD PTR [edx-0x3c04952c],0x57
  420a9d:	and    eax,esi
  420a9f:	push   ss
  420aa0:	xchg   esp,eax
  420aa1:	pop    esi
  420aa2:	lock jmp DWORD PTR [ebx]
  420aa5:	sbb    edi,DWORD PTR [eax+0x78]
  420aa8:	fld    QWORD PTR [ecx]
  420aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aab:	test   al,0x1d
  420aad:	jns    0x420a80
  420aaf:	clc    
  420ab0:	push   ss
  420ab1:	jmp    0xf5df2a47
  420ab6:	addr16 push edi
  420ab8:	pop    esp
  420ab9:	test   eax,0x7ba7304e
  420abe:	mov    ds:0x97328c96,eax
  420ac3:	stc    
  420ac4:	iret   
  420ac5:	cs in  al,0x6e
  420ac8:	scas   al,BYTE PTR es:[edi]
  420ac9:	xor    DWORD PTR [ebp-0x4],0x67b3b84c
  420ad0:	cld    
  420ad1:	sub    bl,ah
  420ad3:	sbb    esp,DWORD PTR [esi+0x211ab907]
  420ad9:	iret   
  420ada:	(bad)  
  420adb:	loop   0x420a8c
  420add:	pop    eax
  420ade:	jb     0x420a64
  420ae0:	xor    edi,edx
  420ae2:	mov    bl,0x1b
  420ae4:	repz pop ebx
  420ae6:	es jb  0x420b00
  420ae9:	push   ebx
  420aea:	mov    dh,0xae
  420aec:	push   edx
  420aed:	jle    0x420b29
  420aef:	repz (bad) 
  420af1:	xlat   BYTE PTR ds:[ebx]
  420af2:	xchg   edi,eax
  420af3:	popf   
  420af4:	push   0xffffff83
  420af6:	push   ss
  420af7:	mov    bl,BYTE PTR [edi+ebp*1+0x7faf46d0]
  420afe:	push   cs
  420aff:	cmp    al,BYTE PTR [ecx+0x4d]
  420b02:	xor    ecx,DWORD PTR [esi-0x5c]
  420b05:	add    eax,0xa9200286
  420b0a:	outs   dx,DWORD PTR ds:[esi]
  420b0b:	dec    ecx
  420b0c:	sub    eax,0x61383925
  420b11:	sub    al,0xcb
  420b13:	inc    ebp
  420b14:	fmul   DWORD PTR [edi]
  420b16:	std    
  420b17:	clc    
  420b18:	add    al,dl
  420b1a:	lods   al,BYTE PTR ds:[esi]
  420b1b:	cld    
  420b1c:	add    BYTE PTR [esi+0x3f779c55],bl
  420b22:	xchg   DWORD PTR ss:[esi],ecx
  420b25:	jb     0x420abc
  420b27:	mov    ds:0xe53efb68,eax
  420b2c:	push   0x2d963183
  420b31:	cwde   
  420b32:	sub    DWORD PTR [eax],ebx
  420b34:	add    cl,cl
  420b36:	push   edx
  420b37:	mov    al,0x63
  420b39:	dec    ecx
  420b3a:	mov    DWORD PTR [eax],esi
  420b3c:	imul   esi,DWORD PTR [ebx],0x6831a1df
  420b42:	push   esi
  420b43:	sub    esp,DWORD PTR [esi-0x18]
  420b46:	push   edi
  420b47:	sbb    al,0xbf
  420b49:	xchg   esp,eax
  420b4a:	rcl    esi,1
  420b4c:	in     eax,0x26
  420b4e:	sahf   
  420b4f:	and    DWORD PTR [esi],esp
  420b51:	pop    ebp
  420b52:	mov    esp,0xa76d078c
  420b57:	call   0xe2da6607
  420b5c:	xlat   BYTE PTR ds:[ebx]
  420b5d:	fwait
  420b5e:	mov    ds:0x18879544,al
  420b63:	popf   
  420b64:	pop    ss
  420b65:	mov    DWORD PTR [edi+esi*4-0x3b],eax
  420b69:	xchg   ebx,eax
  420b6a:	push   0x4bc51553
  420b6f:	cmc    
  420b70:	cmp    edi,DWORD PTR [edx+0x3d]
  420b73:	jbe    0x420b3e
  420b75:	sbb    DWORD PTR [esi+0x73],esi
  420b78:	dec    ebx
  420b79:	rcl    DWORD PTR [ecx-0x15],1
  420b7c:	leave  
  420b7d:	sub    esp,0xfffffffa
  420b80:	dec    eax
  420b81:	jmp    0x51fd:0x8801c2dc
  420b88:	sbb    al,0xc7
  420b8a:	out    dx,al
  420b8b:	or     al,BYTE PTR [edx]
  420b8d:	xor    BYTE PTR [edx+ebp*8+0x32],dl
  420b91:	push   cs
  420b92:	sahf   
  420b93:	(bad)  
  420b94:	scas   eax,DWORD PTR es:[edi]
  420b95:	jmp    0x3bd3ff4b
  420b9a:	pushf  
  420b9b:	imul   edx,DWORD PTR [edx-0x64],0x35
  420b9f:	sbb    bh,bl
  420ba1:	mov    bl,0x72
  420ba3:	mov    esi,0x5a17be39
  420ba8:	push   ebp
  420ba9:	xchg   ebx,eax
  420baa:	jle    0x420b37
  420bac:	and    BYTE PTR [ecx-0x12],dl
  420baf:	cmp    eax,edi
  420bb1:	sbb    al,0xbe
  420bb3:	test   al,0x4
  420bb5:	sub    BYTE PTR [edi-0x19],bl
  420bb8:	loope  0x420b6d
  420bba:	sub    esi,0x47
  420bbd:	inc    ebx
  420bbe:	js     0x420bd9
  420bc0:	mov    al,0xb1
  420bc2:	sbb    eax,0x4fb8a86a
  420bc7:	pop    edx
  420bc8:	mov    WORD PTR [ecx-0x2c11a72e],?
  420bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bcf:	sub    BYTE PTR [esi+0xd],bl
  420bd2:	jnp    0x420bff
  420bd4:	test   BYTE PTR [ecx+0x71811a5e],bh
  420bda:	fcom   st(3)
  420bdc:	jmp    0x420b75
  420bde:	leave  
  420bdf:	cvtps2pi mm5,QWORD PTR [ebx-0x35]
  420be3:	pop    ebp
  420be4:	stos   BYTE PTR es:[edi],al
  420be5:	scas   al,BYTE PTR es:[edi]
  420be6:	addr16 mov dh,0xbd
  420be9:	inc    ebp
  420bea:	mul    DWORD PTR [eax+0x19183b68]
  420bf0:	jo     0x420c06
  420bf2:	xor    BYTE PTR [esi+0xdaebab0],bh
  420bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bf9:	pop    edx
  420bfa:	aam    0x75
  420bfc:	push   ebx
  420bfd:	(bad)
  420c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c02:	or     eax,0x68a2f530
  420c07:	pop    es
  420c08:	adc    ebx,eax
  420c0a:	(bad)  
  420c0b:	int3   
  420c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c0d:	rcr    BYTE PTR [ecx-0x702f6d4c],1
  420c13:	jae    0x420c3a
  420c15:	bound  eax,QWORD PTR [esi-0x1d]
  420c18:	pop    edx
  420c19:	mov    al,ds:0x75e1bef
  420c1e:	scas   al,BYTE PTR es:[edi]
  420c1f:	cmp    BYTE PTR [esi],ah
  420c21:	test   BYTE PTR [edx],ch
  420c23:	xchg   DWORD PTR [ecx+0x4d8bc62a],ebx
  420c29:	imul   esp,DWORD PTR [esi+edi*2],0x127998e6
  420c30:	dec    esp
  420c31:	push   ds
  420c32:	sar    DWORD PTR [ebx-0x4d1feeaa],0x4f
  420c39:	adc    al,0x3d
  420c3b:	(bad)  
  420c3d:	nop    DWORD PTR [ebx]
  420c40:	pop    ds
  420c41:	cmp    bl,BYTE PTR [esi-0x6ec1a34f]
  420c47:	js     0xb410dbbe
  420c4d:	test   DWORD PTR [edx+edx*1-0x3f],ebx
  420c51:	lahf   
  420c52:	outs   dx,DWORD PTR ds:[esi]
  420c53:	xchg   edi,eax
  420c54:	loope  0x420c5d
  420c56:	mov    ds:0xc810beb2,eax
  420c5b:	popf   
  420c5c:	cmc    
  420c5d:	pop    ds
  420c5e:	scas   eax,DWORD PTR es:[edi]
  420c5f:	jecxz  0x420c47
  420c61:	imul   ecx,DWORD PTR [edi+0x74911081],0x24
  420c68:	retf   
  420c69:	cwde   
  420c6a:	pop    ebp
  420c6b:	or     bh,BYTE PTR [edx-0x45]
  420c6e:	loopne 0x420c18
  420c70:	mov    bl,0x10
  420c72:	add    edx,DWORD PTR [edi]
  420c74:	adc    al,0x94
  420c76:	push   ds
  420c77:	arpl   WORD PTR [ecx-0x7a],si
  420c7a:	retf   0x8c98
  420c7d:	and    eax,0x90762357
  420c82:	loope  0x420c55
  420c84:	jns    0x420cbb
  420c86:	leave  
  420c87:	scas   eax,DWORD PTR es:[edi]
  420c88:	and    dl,ch
  420c8a:	loopne 0x420cae
  420c8c:	mov    cl,BYTE PTR ds:0x8d53f98e
  420c92:	ficom  WORD PTR [edi+0x782b05f0]
  420c98:	jno    0x420c80
  420c9a:	inc    ecx
  420c9b:	and    BYTE PTR [edx+0x69],0x12
  420c9f:	inc    esi
  420ca0:	imul   ecx,DWORD PTR [edi],0xcaaf3ea9
  420ca6:	sbb    al,0x95
  420ca8:	test   al,0xd8
  420caa:	lea    eax,[edi+0x6]
  420cad:	ins    BYTE PTR es:[edi],dx
  420cae:	or     BYTE PTR [esi+0x16c959ed],0x7a
  420cb5:	scas   eax,DWORD PTR es:[edi]
  420cb6:	fs jo  0x420cdd
  420cb9:	daa    
  420cba:	pop    edi
  420cbb:	cmp    DWORD PTR [edx-0x1c],ecx
  420cbe:	pop    ds
  420cbf:	in     eax,0xd9
  420cc1:	xor    eax,0x8fcfc537
  420cc6:	not    DWORD PTR [esi]
  420cc8:	cmp    eax,0x7d10d6da
  420ccd:	stos   BYTE PTR es:[edi],al
  420cce:	xor    BYTE PTR [esi],dh
  420cd0:	sti    
  420cd1:	inc    edi
  420cd2:	xchg   bh,bh
  420cd4:	idiv   DWORD PTR [ecx+0x73c7b1d1]
  420cda:	leave  
  420cdb:	dec    ebp
  420cdc:	dec    edi
  420cdd:	dec    esi
  420cde:	xchg   ebx,eax
  420cdf:	adc    eax,0x5db09bf4
  420ce4:	shl    BYTE PTR [ebp-0x57bc737e],1
  420cea:	add    dl,ch
  420cec:	cld    
  420ced:	shl    ah,0xf8
  420cf0:	or     eax,0x199c357f
  420cf5:	pusha  
  420cf6:	js     0x420ccf
  420cf8:	adc    al,0xb1
  420cfa:	out    dx,al
  420cfb:	push   ds
  420cfc:	xor    DWORD PTR [ecx-0x526681db],0xffffffae
  420d03:	pop    edx
  420d04:	into   
  420d05:	dec    ecx
  420d06:	xor    al,0xd8
  420d08:	ja     0x420d60
  420d0a:	xor    BYTE PTR [eax+ebp*1],ah
  420d0d:	iret   
  420d0e:	pop    ebp
  420d0f:	mov    DWORD PTR [edi+ebx*2-0x6d],edi
  420d13:	out    dx,eax
  420d14:	outs   dx,DWORD PTR ds:[esi]
  420d15:	inc    ebx
  420d16:	xchg   ebx,eax
  420d17:	sbb    BYTE PTR [edi+ecx*4],ah
  420d1a:	mov    esp,0x9a316c6e
  420d1f:	xor    ecx,edi
  420d21:	xor    al,0xfb
  420d23:	mov    ds:0x8de695,al
  420d28:	out    dx,eax
  420d29:	gs mov esp,0xf55bd4f6
  420d2f:	cmovae esi,eax
  420d32:	add    eax,0x93dbc070
  420d37:	fimul  DWORD PTR [ecx+esi*8-0x7f]
  420d3b:	mov    ds,WORD PTR [ecx]
  420d3d:	nop
  420d3e:	fisub  WORD PTR [esi]
  420d40:	ret    0x2264
  420d43:	sahf   
  420d44:	pop    edi
  420d45:	jbe    0x420dab
  420d47:	fld    TBYTE PTR [ecx+0x865c8b2]
  420d4d:	int    0xf0
  420d4f:	xchg   edi,eax
  420d50:	jbe    0x420da1
  420d52:	stos   DWORD PTR es:[edi],eax
  420d53:	pop    ebx
  420d54:	mov    edx,0x4415804c
  420d59:	or     BYTE PTR [edx+0x4c],ch
  420d5c:	dec    ebp
  420d5d:	(bad)  
  420d5f:	out    0x4a,eax
  420d61:	inc    ecx
  420d62:	or     al,0x6e
  420d64:	jmp    0x420d6f
  420d66:	gs stc 
  420d68:	loop   0x420d64
  420d6a:	in     al,dx
  420d6b:	jne    0x420dc4
  420d6d:	and    esp,esp
  420d6f:	push   cs
  420d70:	rol    BYTE PTR [ecx-0x5d],cl
  420d73:	fs repz sbb dl,0x76
  420d78:	mov    edx,0x95855223
  420d7d:	out    dx,al
  420d7e:	xor    edi,DWORD PTR [ebp+0x45]
  420d81:	icebp  
  420d82:	jae    0x420dc5
  420d84:	adc    esp,esi
  420d86:	push   ds
  420d87:	aad    0x2e
  420d89:	out    dx,al
  420d8a:	jmp    0x442a:0xc84149d5
  420d91:	pop    edx
  420d92:	retf   
  420d93:	and    BYTE PTR [eax],ah
  420d95:	inc    edx
  420d96:	je     0x420d5a
  420d98:	mov    cl,0x89
  420d9a:	mov    esi,0xbaf9b7c0
  420d9f:	sar    DWORD PTR [ecx-0x77],0xfe
  420da3:	pop    esi
  420da4:	xor    DWORD PTR [eax],ebx
  420da6:	pop    esp
  420da7:	sbb    ah,BYTE PTR [eax+0x30]
  420daa:	bnd jg 0x420e00
  420dad:	in     al,0xeb
  420daf:	xor    al,BYTE PTR [ecx+0x22f025c8]
  420db5:	mov    dh,cl
  420db7:	cmp    eax,DWORD PTR [ecx-0x41]
  420dba:	imul   esi,DWORD PTR [esi-0x4d90de1b],0x192120e4
  420dc4:	jg     0x420e45
  420dc6:	sbb    edi,DWORD PTR [edx-0x5a]
  420dc9:	add    esp,DWORD PTR [esi+0x5b822781]
  420dcf:	test   al,0x89
  420dd1:	js     0x420e28
  420dd3:	inc    esi
  420dd4:	sub    bl,BYTE PTR [esi+eiz*1-0x77d629b6]
  420ddb:	mov    ecx,0x8341dd26
  420de0:	lods   al,BYTE PTR ds:[esi]
  420de1:	and    ebp,eax
  420de3:	pop    edi
  420de4:	fnstcw WORD PTR [esi-0x46]
  420de7:	lea    ecx,[eax-0x22]
  420dea:	push   0xe
  420dec:	popf   
  420ded:	mov    ah,0xee
  420def:	mov    bh,BYTE PTR [esi+0x16cb82c1]
  420df5:	sbb    eax,0xb427016e
  420dfa:	push   edx
  420dfb:	dec    ebp
  420dfc:	les    esp,FWORD PTR [eax-0x1036b5e3]
  420e02:	jmp    0xcd24:0x542a5456
  420e09:	stc    
  420e0a:	pop    ebx
  420e0b:	pop    ss
  420e0c:	fimul  WORD PTR [esi+0x3]
  420e0f:	cmc    
  420e10:	into   
  420e11:	add    cl,ah
  420e13:	into   
  420e14:	xchg   ebx,eax
  420e15:	adc    DWORD PTR [ecx+0x77],edx
  420e18:	push   edi
  420e19:	or     al,BYTE PTR [ebx]
  420e1b:	xchg   edx,eax
  420e1c:	add    edx,DWORD PTR [ecx-0x1c738352]
  420e22:	sub    dh,ch
  420e24:	sbb    eax,0xd67a71c6
  420e29:	stos   BYTE PTR es:[edi],al
  420e2a:	cdq    
  420e2b:	dec    esi
  420e2c:	mov    WORD PTR [edx-0x6fc864f1],ss
  420e32:	push   ecx
  420e33:	push   esi
  420e34:	cmc    
  420e35:	(bad)  
  420e36:	iret   
  420e37:	pop    esp
  420e38:	jb     0x420e6d
  420e3a:	pop    es
  420e3b:	dec    edx
  420e3c:	pop    ecx
  420e3d:	add    BYTE PTR [eax],ch
  420e3f:	mov    eax,0x1b51b282
  420e44:	cli    
  420e45:	push   es
  420e46:	loop   0x420eb0
  420e48:	iret   
  420e49:	daa    
  420e4a:	sub    al,0x15
  420e4c:	xor    ecx,eax
  420e4e:	xlat   BYTE PTR ds:[ebx]
  420e4f:	shl    BYTE PTR [ebx],0xdd
  420e52:	jecxz  0x420e3b
  420e54:	stc    
  420e55:	sar    DWORD PTR [eax+0x404a06a4],cl
  420e5b:	or     al,0x1c
  420e5d:	out    dx,al
  420e5e:	cmp    eax,0xbd97b10b
  420e63:	test   dl,ah
  420e65:	or     eax,0x72b19cc
  420e6a:	(bad)  
  420e6b:	cmp    edx,ecx
  420e6d:	xchg   esp,eax
  420e6e:	mov    eax,ds:0xd7478664
  420e73:	stc    
  420e74:	mov    esi,0x702e360
  420e79:	and    al,0x7a
  420e7b:	cmp    ebp,DWORD PTR [ecx+0x22]
  420e7e:	mov    eax,0x8427d3b7
  420e83:	inc    ebp
  420e84:	mov    gs,WORD PTR [ecx+0x5877eea7]
  420e8a:	fwait
  420e8b:	mov    bh,0x36
  420e8d:	sbb    al,0xfc
  420e8f:	mov    ebx,0xd8828cbc
  420e94:	repz cli 
  420e96:	sahf   
  420e97:	aad    0xd7
  420e99:	jmp    0xf8099244
  420e9e:	fwait
  420e9f:	sbb    eax,0x78e4f053
  420ea4:	adc    DWORD PTR [ebx-0x3878925f],edi
  420eaa:	mov    ebx,0xb50a39f9
  420eaf:	mov    edi,DWORD PTR [esi+0x2f3f42a5]
  420eb5:	pusha  
  420eb6:	xor    BYTE PTR [ecx-0x69],ah
  420eb9:	in     al,0xec
  420ebb:	mov    cl,0x2b
  420ebd:	loop   0x420eb0
  420ebf:	cld    
  420ec0:	(bad)  
  420ec1:	ins    BYTE PTR es:[edi],dx
  420ec2:	jns    0x420f3d
  420ec4:	les    eax,FWORD PTR [ebp-0x75]
  420ec7:	lock dec eax
  420ec9:	jne    0x420f27
  420ecb:	pusha  
  420ecc:	push   edi
  420ecd:	imul   ebp,DWORD PTR [ebx],0x6e4f1e58
  420ed3:	call   0x7ae1:0x38463984
  420eda:	pop    ds
  420edb:	xchg   esp,eax
  420edc:	jg     0x420ecd
  420ede:	sbb    al,0x20
  420ee0:	cs push ss
  420ee2:	pop    esi
  420ee3:	add    ch,BYTE PTR [eax]
  420ee5:	and    DWORD PTR [ebx-0x7473acee],ebx
  420eeb:	aam    0x44
  420eed:	jns    0x420ecf
  420eef:	pop    ebx
  420ef0:	cmp    al,0xff
  420ef2:	xchg   esp,eax
  420ef3:	arpl   WORD PTR [eax+0x31663bb6],dx
  420ef9:	(bad)
  420eff:	(bad)  
  420f00:	loope  0x420ed7
  420f02:	jmp    0x9b9b867a
  420f07:	jge    0x420f44
  420f09:	push   edi
  420f0a:	jbe    0x420f81
  420f0c:	xor    edx,DWORD PTR [edx]
  420f0e:	sbb    edi,DWORD PTR [edi+edx*4+0x713ca000]
  420f15:	sbb    edi,DWORD PTR [edx-0xb3e6c28]
  420f1b:	std    
  420f1c:	and    esp,DWORD PTR [edx-0x18]
  420f1f:	sub    ch,ch
  420f21:	ror    DWORD PTR [esi],0xfa
  420f24:	mov    ebx,0x108fc69
  420f29:	stc    
  420f2a:	retf   0x5fbf
  420f2d:	cmp    ebp,DWORD PTR [ebp-0x79]
  420f30:	push   ebx
  420f31:	test   eax,0xa3bd82a2
  420f36:	(bad)  
  420f37:	addr16 dec esp
  420f39:	or     BYTE PTR [edi+0x44],0xbe
  420f3d:	mov    dl,0x3e
  420f3f:	repnz int 0xd5
  420f42:	ss push ebx
  420f44:	popa   
  420f45:	(bad)  
  420f46:	aad    0x1e
  420f48:	cmp    al,0x7
  420f4a:	shl    BYTE PTR [esp+eax*4],0x95
  420f4e:	inc    eax
  420f4f:	scas   al,BYTE PTR es:[edi]
  420f50:	pop    ebp
  420f51:	jmp    0x9028c9d
  420f56:	test   al,0x6
  420f58:	clc    
  420f59:	ins    BYTE PTR es:[edi],dx
  420f5a:	shl    DWORD PTR [ecx],1
  420f5c:	rol    BYTE PTR [edi],0x68
  420f5f:	mov    bl,0x87
  420f61:	lock xor al,0x17
  420f64:	shl    DWORD PTR es:[ebp-0x5],0xb5
  420f69:	mov    ch,0xeb
  420f6b:	mov    esi,0x134e3f36
  420f70:	pushf  
  420f71:	in     al,0x6f
  420f73:	sbb    DWORD PTR [esi-0x124016f4],ebx
  420f79:	ins    BYTE PTR es:[edi],dx
  420f7a:	push   eax
  420f7b:	cdq    
  420f7c:	jbe    0x420f3e
  420f7e:	dec    esp
  420f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f80:	fdiv   DWORD PTR [esp+eax*2]
  420f83:	mov    edi,0x1fb4e602
  420f88:	mov    DWORD PTR [edx],esp
  420f8a:	adc    DWORD PTR [ebx+0x6],edi
  420f8d:	scas   eax,DWORD PTR es:[edi]
  420f8e:	jbe    0x420f8c
  420f90:	mov    dh,0x2a
  420f92:	test   eax,0x79be81a1
  420f97:	jl     0x420fda
  420f99:	test   DWORD PTR [edi-0x781a697f],esi
  420f9f:	mov    cs,WORD PTR [eax+esi*1]
  420fa2:	(bad)  
  420fa3:	call   0xe42e7956
  420fa8:	mov    cl,0x3a
  420faa:	jle    0x420ff8
  420fac:	(bad)
  420faf:	add    bl,BYTE PTR [ecx-0x4b28b5f9]
  420fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fb6:	or     ecx,DWORD PTR [edx+0x10771d2f]
  420fbc:	pmuludq mm2,QWORD PTR [edi]
  420fbf:	or     al,0xb6
  420fc1:	in     al,dx
  420fc2:	ret    0x4b9
  420fc5:	add    ebx,esi
  420fc7:	fisub  WORD PTR ds:0x5a848dde
  420fcd:	scas   al,BYTE PTR es:[edi]
  420fce:	mov    dl,dl
  420fd0:	dec    edx
  420fd1:	cmp    eax,0xeecca2e4
  420fd6:	pop    esp
  420fd7:	sti    
  420fd8:	ins    BYTE PTR es:[edi],dx
  420fd9:	or     eax,0x361b3bf3
  420fde:	popa   
  420fdf:	jg     0x42105c
  420fe1:	dec    ecx
  420fe2:	mov    dl,0x64
  420fe4:	mov    ebx,0x9fe5da5
  420fe9:	lods   eax,DWORD PTR ds:[esi]
  420fea:	cmp    eax,0x94493a72
  420fef:	fnsave [edx-0x62cd91f6]
  420ff5:	das    
  420ff6:	shl    DWORD PTR [ebp-0x3576c80c],1
  420ffc:	and    al,0x62
  420ffe:	jle    0x42103f
  421000:	ret    
  421001:	addr16 js 0x420fb3
  421004:	or     DWORD PTR [ecx+0x42],edx
  421007:	test   edx,ecx
  421009:	fild   WORD PTR [edi+0xeef2062]
  42100f:	inc    esp
  421010:	sbb    al,0xf6
  421012:	push   es
  421013:	jle    0x42100e
  421015:	mov    bl,0x64
  421017:	lock sti 
  421019:	(bad)  
  42101a:	std    
  42101b:	add    esi,ebx
  42101d:	fcmovbe st,st(3)
  42101f:	mov    ds:0x7a0cf2d0,eax
  421024:	xchg   BYTE PTR [edi],dl
  421026:	dec    edi
  421027:	jne    0x421050
  421029:	jmp    FWORD PTR [esi+0x5f]
  42102c:	call   0xb87cbfd7
  421031:	clc    
  421032:	adc    ebx,ebx
  421034:	jmp    0xb8f6:0xa25a4ad2
  42103b:	inc    ecx
  42103c:	sub    DWORD PTR [ecx],eax
  42103e:	push   0x41
  421040:	mov    bh,0x51
  421042:	push   0xe
  421044:	xchg   ecx,eax
  421045:	mov    esi,0xdb524c5e
  42104a:	inc    eax
  42104b:	xchg   ebp,eax
  42104c:	in     eax,0x62
  42104e:	fcom   QWORD PTR ds:0x9afbedca
  421054:	ja     0x421096
  421056:	push   0x3a804431
  42105b:	sbb    dl,cl
  42105d:	out    0x3c,eax
  42105f:	adc    al,0xba
  421061:	icebp  
  421062:	ds jmp 0xd212c6a6
  421068:	out    0xc,eax
  42106a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42106b:	xor    al,bl
  42106d:	adc    BYTE PTR [ebp-0x69],0xd5
  421071:	pop    edi
  421072:	sar    BYTE PTR [esi-0x6b8f328c],cl
  421078:	(bad)  
  421079:	in     eax,dx
  42107a:	jle    0x42104b
  42107c:	es and eax,0x3ec391e0
  421082:	sub    BYTE PTR [esi+0xd],al
  421085:	mov    cl,0x67
  421087:	sbb    al,0xf
  421089:	mov    dh,0xaf
  42108b:	ret    0x6fd1
  42108e:	mov    edx,0x5f2bd485
  421093:	xlat   BYTE PTR ds:[ebx]
  421094:	popa   
  421095:	les    esi,FWORD PTR [esi+eiz*8]
  421098:	xor    al,0xc7
  42109a:	test   DWORD PTR ss:[ebx-0x2a653c53],0x30fa5be3
  4210a5:	add    ebp,DWORD PTR [eax]
  4210a7:	mov    edx,0x91ea7a6f
  4210ac:	xchg   ebp,eax
  4210ad:	scas   al,BYTE PTR es:[edi]
  4210ae:	mov    ah,0x1d
  4210b0:	mov    cl,BYTE PTR ds:0x83843d98
  4210b6:	xchg   ebp,eax
  4210b7:	fcmovnb st,st(2)
  4210b9:	mov    WORD PTR [esi],es
  4210bb:	jg     0x421095
  4210bd:	aaa    
  4210be:	push   ecx
  4210bf:	inc    edx
  4210c0:	es dec edx
  4210c2:	xchg   edx,eax
  4210c3:	add    DWORD PTR [ecx+0x7f],0x1efc4dc5
  4210ca:	adc    edx,DWORD PTR [edi]
  4210cc:	jno    0x421132
  4210ce:	lahf   
  4210cf:	jmp    0xffdb0cef
  4210d4:	addr16 int 0x4f
  4210d7:	not    edi
  4210d9:	scas   eax,DWORD PTR es:[edi]
  4210da:	inc    ebx
  4210db:	mov    ds:0xf430f590,al
  4210e0:	and    esp,DWORD PTR [ebp-0x21ed77bb]
  4210e6:	je     0x421068
  4210e8:	xor    BYTE PTR [edi+0x64c4f166],dh
  4210ee:	pop    ecx
  4210ef:	fidivr WORD PTR [edx+0x771a8a59]
  4210f5:	icebp  
  4210f6:	and    edx,esi
  4210f8:	or     eax,DWORD PTR ds:0x1c5cc3d
  4210fe:	in     al,0xf6
  421100:	cmp    BYTE PTR [ebx+0x41ecf442],cl
  421106:	jnp    0x421104
  421108:	or     DWORD PTR [esp+eax*2-0xe],0xffffff9d
  42110d:	test   al,0x89
  42110f:	pop    esi
  421110:	add    al,0xd4
  421112:	out    0x16,al
  421114:	mov    BYTE PTR [esi+edi*2+0x14f2fe6],0x76
  42111c:	loop   0x421119
  42111e:	sbb    al,0x26
  421120:	out    0x8c,eax
  421122:	or     eax,0x40c6ff1a
  421127:	test   eax,0x7d0119
  42112c:	call   0xeb4d4fb4
  421131:	push   0xb89f1fc
  421136:	dec    eax
  421137:	lea    eax,[eax]
  421139:	adc    al,0x8b
  42113b:	inc    esi
  42113c:	daa    
  42113d:	dec    esp
  42113e:	pusha  
  42113f:	dec    edi
  421140:	shl    BYTE PTR [eax+0x1a5a6d3c],1
  421146:	mov    eax,DWORD PTR [ebx+edi*2]
  421149:	inc    edi
  42114a:	fdiv   DWORD PTR [ebx-0x6f]
  42114d:	xchg   ebx,eax
  42114e:	mov    eax,ds:0xa87d8140
  421153:	aaa    
  421154:	cli    
  421155:	sbb    al,0x99
  421157:	std    
  421158:	sbb    eax,DWORD PTR [ecx+0x1ff18d4c]
  42115e:	mov    ds:0x8504a617,eax
  421163:	or     esp,edx
  421165:	inc    edi
  421166:	fwait
  421167:	shl    BYTE PTR [eax+0x1beba531],0x89
  42116e:	out    0xd9,eax
  421170:	test   eax,0xd4931038
  421175:	std    
  421176:	inc    esp
  421177:	lahf   
  421178:	mov    esp,0x105e2af1
  42117d:	and    al,0x98
  42117f:	xchg   ecx,eax
  421180:	mov    ds:0x5664267c,eax
  421185:	mov    DWORD PTR [edx],ebx
  421187:	dec    edx
  421188:	pop    ss
  421189:	adc    BYTE PTR [esi-0x6a27fa83],dh
  42118f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421190:	pop    ds
  421191:	scas   al,BYTE PTR es:[edi]
  421192:	mov    bh,0xd7
  421194:	jmp    0x4211e4
  421196:	aaa    
  421197:	adc    BYTE PTR [ebx],ah
  421199:	sbb    eax,0xabd6cda7
  42119e:	pop    ebx
  42119f:	xchg   edi,eax
  4211a0:	mov    dh,0x46
  4211a2:	xlat   BYTE PTR ds:[ebx]
  4211a3:	in     eax,dx
  4211a4:	push   edx
  4211a5:	and    eax,0xc5e23c6
  4211aa:	or     edx,DWORD PTR [esi+0x63]
  4211ad:	out    0x7e,eax
  4211af:	lods   eax,DWORD PTR ds:[esi]
  4211b0:	call   0xc2acfa4f
  4211b5:	adc    eax,0xe52b3439
  4211ba:	dec    ecx
  4211bb:	addr16 jp 0x4211cd
  4211be:	ret    0x9b5b
  4211c1:	or     al,0x97
  4211c3:	stc    
  4211c4:	fs xor eax,0xfdf60cb5
  4211ca:	jbe    0x42120d
  4211cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211cd:	clc    
  4211ce:	mov    BYTE PTR ds:0x342b1a23,dh
  4211d4:	jg     0x4211ad
  4211d6:	lds    eax,FWORD PTR [ebp-0x335b0d26]
  4211dc:	xor    DWORD PTR [eax+eax*4-0x5864fdc2],0xa630c18
  4211e7:	ins    DWORD PTR es:[edi],dx
  4211e8:	mov    fs,WORD PTR [eax]
  4211ea:	or     eax,0x5b903061
  4211ef:	fcomp  DWORD PTR [edx]
  4211f1:	jg     0x421245
  4211f3:	or     eax,esp
  4211f5:	sti    
  4211f6:	sub    bl,BYTE PTR ds:0x4c2dbd9
  4211fc:	pop    ds
  4211fd:	xchg   ecx,eax
  4211fe:	mov    dh,0x82
  421200:	push   es
  421201:	mov    ds:0xb83ba36c,al
  421206:	sti    
  421207:	adc    bl,BYTE PTR [edi-0x39fa38a9]
  42120d:	add    eax,0xa3ebcee8
  421212:	pop    ebx
  421213:	add    BYTE PTR [edi+0x14f5b147],0xed
  42121a:	and    al,0x35
  42121c:	leave  
  42121d:	outs   dx,BYTE PTR ds:[esi]
  42121e:	push   ebx
  42121f:	stc    
  421220:	aam    0xb6
  421222:	add    eax,0x5fca883e
  421227:	out    0x9,eax
  421229:	mov    dl,0xce
  42122b:	into   
  42122c:	xchg   ecx,eax
  42122d:	add    ch,bl
  42122f:	test   eax,0x68d8f4c4
  421234:	mov    edi,eax
  421236:	dec    ecx
  421237:	lahf   
  421238:	cmc    
  421239:	and    DWORD PTR [edx-0x6ee03b74],esi
  42123f:	aaa    
  421240:	js     0x4212b4
  421242:	cmp    DWORD PTR [edx-0x4bfb9e2e],0xffffffab
  421249:	mov    dl,0x4
  42124b:	jg     0x421234
  42124d:	mov    bh,0x3c
  42124f:	call   0x5409:0x32896676
  421256:	lods   al,BYTE PTR ds:[esi]
  421257:	mov    fs,WORD PTR [edi-0x611a603a]
  42125d:	mov    ds:0x49e9e84d,eax
  421262:	aas    
  421263:	in     al,0x75
  421265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421266:	pop    edi
  421267:	addr16 add al,0x6b
  42126a:	push   0xffffffb0
  42126c:	mov    eax,eax
  42126e:	dec    esp
  42126f:	push   ds
  421270:	(bad)  
  421271:	pop    esp
  421272:	push   ds
  421273:	sahf   
  421274:	mov    bh,0xc6
  421276:	fstp   st(4)
  421278:	inc    esi
  421279:	sub    edx,DWORD PTR [ecx+0x10cf659e]
  42127f:	add    BYTE PTR [ebp+0x7a30c984],0xd6
  421286:	mov    al,ds:0x1ae0e587
  42128b:	popa   
  42128c:	and    BYTE PTR [esi+0x70938236],al
  421292:	ins    BYTE PTR es:[edi],dx
  421293:	xchg   ecx,eax
  421294:	jmp    0x2102:0xaf9a14ac
  42129b:	stos   DWORD PTR es:[edi],eax
  42129c:	add    al,0xf7
  42129e:	loopne 0x42127f
  4212a0:	and    ebx,DWORD PTR [ebx-0x2a]
  4212a3:	jp     0x421299
  4212a5:	dec    edx
  4212a6:	stos   BYTE PTR es:[edi],al
  4212a7:	or     al,0xc7
  4212a9:	sbb    eax,0x1194efa2
  4212ae:	jle    0x4212dd
  4212b0:	stc    
  4212b1:	xchg   ebx,eax
  4212b2:	sar    ebx,1
  4212b4:	lahf   
  4212b5:	neg    edx
  4212b7:	fimul  DWORD PTR [eax-0x549042c8]
  4212bd:	jmp    0x32f7:0x47ebf894
  4212c4:	call   FWORD PTR [edi+0x40]
  4212c7:	mov    dl,0x45
  4212c9:	imul   DWORD PTR [ebx-0x22b8ecdf]
  4212cf:	mov    eax,0xf4d875b5
  4212d4:	jns    0x421269
  4212d6:	xlat   BYTE PTR ds:[ebx]
  4212d7:	outs   dx,DWORD PTR ds:[esi]
  4212d8:	js     0x4212a9
  4212da:	js     0x4212c5
  4212dc:	pop    edx
  4212dd:	js     0x4212c2
  4212df:	dec    eax
  4212e0:	jb     0x42131a
  4212e2:	sub    al,0x15
  4212e4:	scas   al,BYTE PTR es:[edi]
  4212e5:	gs call 0xcee1a55a
  4212eb:	mov    esi,0x2ab9ed4b
  4212f0:	pusha  
  4212f1:	iret   
  4212f2:	mov    cl,0xc7
  4212f4:	das    
  4212f5:	mov    ecx,DWORD PTR [edi+0x7d16909e]
  4212fb:	ins    DWORD PTR es:[edi],dx
  4212fc:	in     al,dx
  4212fd:	and    bh,BYTE PTR cs:[edx-0x66308afc]
  421304:	sar    DWORD PTR [ebx+0x4a],0x6f
  421308:	jns    0x4212aa
  42130a:	ret    
  42130b:	iret   
  42130c:	mov    ch,0xe0
  42130e:	inc    edx
  42130f:	shr    DWORD PTR [esi],0xfa
  421312:	fmul   QWORD PTR [ecx-0x6]
  421315:	fwait
  421316:	jl     0x42130c
  421318:	ins    DWORD PTR es:[edi],dx
  421319:	push   esp
  42131a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42131b:	lds    edi,FWORD PTR [esi+0x2752c36b]
  421321:	ins    BYTE PTR es:[edi],dx
  421322:	pop    esi
  421323:	addr16 xor ecx,esi
  421326:	push   edx
  421327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421328:	ins    DWORD PTR es:[edi],dx
  421329:	or     ecx,DWORD PTR [ebx+0x37]
  42132c:	ret    
  42132d:	cdq    
  42132e:	retf   0x3fc9
  421331:	sahf   
  421332:	xchg   edx,eax
  421333:	push   esp
  421334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421335:	imul   eax,DWORD PTR [edx+ebx*8-0xb],0x640b27ea
  42133d:	cmp    eax,0xfb83091b
  421342:	mov    edi,0xd3fe5016
  421347:	jecxz  0x421386
  421349:	mov    eax,0x4a70579a
  42134e:	out    0xeb,al
  421350:	sub    DWORD PTR [edx-0x26f58026],esi
  421356:	ss sub al,0x6f
  421359:	shl    ch,0x9
  42135c:	pop    esp
  42135d:	xchg   dl,dh
  42135f:	mov    al,ds:0xd1182e50
  421364:	mov    WORD PTR [eax-0x46],es
  421367:	xchg   edi,eax
  421368:	dec    esp
  421369:	fsub   st(7),st
  42136b:	or     al,al
  42136d:	lock inc ebp
  42136f:	ins    DWORD PTR es:[edi],dx
  421370:	clc    
  421371:	rol    ecx,1
  421373:	or     al,0xbf
  421375:	pushf  
  421376:	add    DWORD PTR [ecx-0x6567dcf6],ebp
  42137c:	sub    ch,BYTE PTR [ecx+0x274082d7]
  421382:	ret    0xb3e3
  421385:	mov    BYTE PTR [esi-0x2b],dl
  421388:	das    
  421389:	mov    ch,0xa1
  42138b:	add    ebx,ebx
  42138d:	clc    
  42138e:	cmp    DWORD PTR [edx+0x15],ebp
  421391:	push   ds
  421392:	mov    ah,0x65
  421394:	stos   DWORD PTR es:[edi],eax
  421395:	dec    edx
  421396:	mov    ch,0x34
  421398:	mov    esi,0x17b3345a
  42139d:	ret    0x917b
  4213a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213a1:	or     eax,0x1493427
  4213a6:	scas   al,BYTE PTR es:[edi]
  4213a7:	outs   dx,DWORD PTR ds:[esi]
  4213a8:	jns    0x421391
  4213aa:	arpl   bx,di
  4213ac:	jmp    DWORD PTR [esi]
  4213ae:	ret    0x80ef
  4213b1:	hlt    
  4213b2:	mov    eax,eax
  4213b4:	sub    eax,0xdaa915c
  4213b9:	in     eax,0x70
  4213bb:	xchg   ecx,eax
  4213bc:	cli    
  4213bd:	xchg   esp,eax
  4213be:	mov    al,ds:0xbb34a0c
  4213c3:	sbb    dh,ch
  4213c5:	in     eax,dx
  4213c6:	sar    BYTE PTR [ebx+0x2051858a],1
  4213cc:	(bad)  
  4213cd:	fadd   st,st(6)
  4213cf:	(bad)  
  4213d0:	loopne 0x42143f
  4213d2:	mov    ebx,0xdbbb9abb
  4213d7:	cmp    BYTE PTR [ecx-0x42b79bb4],bl
  4213dd:	sar    BYTE PTR ds:0x682bf5d3,0x11
  4213e4:	pop    edx
  4213e5:	adc    al,0x1e
  4213e7:	xor    eax,0x622c340c
  4213ec:	in     eax,0xcb
  4213ee:	jp     0x4213db
  4213f0:	sub    bl,cl
  4213f2:	das    
  4213f3:	js     0x42142c
  4213f5:	inc    esi
  4213f6:	and    BYTE PTR [edi],ah
  4213f8:	mov    esp,0xc851eb67
  4213fd:	xchg   esp,eax
  4213fe:	lahf   
  4213ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421400:	jbe    0x4213fb
  421402:	(bad)  
  421403:	fcom   QWORD PTR gs:[esp+eiz*8]
  421407:	out    0x92,al
  421409:	mov    WORD PTR [ecx+0x6e],cs
  42140c:	imul   eax,DWORD PTR [esi-0x7a2fee2c],0x6eccf6e5
  421416:	pusha  
  421417:	hlt    
  421418:	jmp    0x74073e93
  42141d:	dec    ecx
  42141e:	je     0x42149d
  421420:	sub    edi,DWORD PTR [edx-0x24dcb8e3]
  421426:	xchg   edi,eax
  421427:	xchg   edx,eax
  421428:	xchg   BYTE PTR [eax-0x23],cl
  42142b:	scas   eax,DWORD PTR es:[edi]
  42142c:	and    al,0x15
  42142f:	pop    eax
  421430:	int    0xb2
  421432:	rcr    BYTE PTR [ebx+edi*8+0x78],0x53
  421437:	call   0x865e35f0
  42143c:	cmp    edi,DWORD PTR [edx]
  42143e:	mov    bl,0x76
  421440:	xor    eax,0x20eac259
  421445:	xlat   BYTE PTR ds:[ebx]
  421446:	mov    ebp,0xcc526e05
  42144b:	(bad)  
  42144d:	or     BYTE PTR [ebp+0x198f9611],cl
  421453:	outs   dx,DWORD PTR ds:[esi]
  421454:	cmp    al,0x1b
  421456:	adc    ch,BYTE PTR [esp+esi*2]
  421459:	outs   dx,DWORD PTR ds:[esi]
  42145a:	cdq    
  42145b:	sub    BYTE PTR [edi],bh
  42145d:	dec    eax
  42145e:	aam    0x8c
  421460:	or     eax,DWORD PTR [edi]
  421462:	in     al,0x7c
  421464:	(bad)  [edi+0x49fac3a8]
  42146a:	inc    edx
  42146b:	popf   
  42146c:	icebp  
  42146d:	js     0x4214e2
  42146f:	cmp    BYTE PTR [edx-0x2ef5c477],dl
  421475:	clc    
  421476:	out    dx,al
  421477:	inc    esp
  421478:	push   ss
  421479:	mov    bh,0xbd
  42147b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42147c:	loop   0x42148c
  42147e:	and    dh,BYTE PTR [ebp-0x35]
  421481:	mov    esi,DWORD PTR [esi-0x4f]
  421484:	das    
  421485:	mov    ecx,0x10c4dd2c
  42148a:	int    0xf8
  42148c:	fcomip st,st(6)
  42148e:	mov    esi,0xddf67387
  421493:	pop    ds
  421494:	pop    eax
  421495:	lahf   
  421496:	mov    esi,0x6ae298d7
  42149b:	cmp    dl,BYTE PTR [eax-0x23]
  42149e:	and    al,0x53
  4214a0:	cmp    ebx,DWORD PTR [esi-0x6dfca63e]
  4214a6:	jmp    DWORD PTR [edi+ebx*4]
  4214a9:	cli    
  4214aa:	clc    
  4214ab:	repnz gs pop ebp
  4214ae:	xlat   BYTE PTR ds:[ebx]
  4214af:	xchg   BYTE PTR [edx+ecx*4-0x34],bh
  4214b3:	mov    BYTE PTR [ebx*4-0xf632941],al
  4214ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214bb:	es inc eax
  4214bd:	mov    edx,0x45458384
  4214c2:	int3   
  4214c3:	aas    
  4214c4:	imul   ecx,DWORD PTR [esi+0x18],0x3ee093e0
  4214cb:	shr    DWORD PTR [edi-0xd],cl
  4214ce:	call   0x98e0:0xc7bde32c
  4214d5:	out    dx,al
  4214d6:	mov    ecx,0xc1884560
  4214db:	pop    es
  4214dc:	daa    
  4214dd:	cmp    BYTE PTR [ecx+0x4d3d9839],bh
  4214e3:	cwde   
  4214e4:	jle    0x4214a5
  4214e6:	ss js  0x4214c6
  4214e9:	scas   eax,DWORD PTR es:[edi]
  4214ea:	fwait
  4214eb:	or     BYTE PTR [esi+0x26d20f9],cl
  4214f1:	sub    al,0x70
  4214f3:	mov    ebx,0x1a39bdab
  4214f8:	and    edi,DWORD PTR [edi-0x4aa81442]
  4214fe:	add    BYTE PTR ds:0x8aa2680d,bh
  421504:	dec    eax
  421505:	(bad)  [esi+0x794c53b7]
  42150b:	fiadd  WORD PTR [ecx]
  42150d:	fist   WORD PTR [edi+0x74]
  421510:	aaa    
  421511:	dec    edx
  421512:	adc    DWORD PTR [edi],esp
  421514:	adc    al,0xa8
  421516:	test   eax,0x5a2e9642
  42151b:	add    eax,0xc02fa79d
  421520:	pop    esi
  421521:	mov    bl,0x5d
  421523:	ss jbe 0x42159d
  421526:	sub    eax,0xee27bcaf
  42152b:	and    BYTE PTR [ecx+0x6836f65],0xc4
  421532:	pop    ebx
  421533:	inc    ebp
  421534:	mov    cl,0x81
  421536:	xor    eax,0xf735666d
  42153b:	xchg   DWORD PTR [eax+0x3b],edx
  42153e:	push   edi
  42153f:	jae    0x4215b7
  421541:	mov    al,ds:0x7394ac41
  421546:	mov    ecx,0x8d6ade48
  42154b:	cwde   
  42154c:	(bad)  
  42154d:	call   0xc8f21777
  421552:	arpl   WORD PTR [esi],bx
  421554:	cwde   
  421555:	sub    eax,0xe44f0288
  42155a:	ins    DWORD PTR es:[edi],dx
  42155b:	or     bh,BYTE PTR [eax]
  42155d:	in     eax,0x64
  42155f:	sahf   
  421560:	lds    ebp,FWORD PTR [esi]
  421562:	dec    ecx
  421563:	ins    DWORD PTR es:[edi],dx
  421564:	mov    eax,0x92d00985
  421569:	popa   
  42156a:	(bad)  
  42156b:	and    al,0xa0
  42156d:	adc    DWORD PTR [eax+eax*2-0x22537e10],ebx
  421574:	in     al,0x33
  421576:	cmp    eax,0x15695c18
  42157b:	jae    0x421537
  42157d:	jb     0x42151f
  42157f:	adc    cl,BYTE PTR [ebx-0x24]
  421582:	and    al,0xad
  421584:	jp     0x42151f
  421586:	icebp  
  421587:	clc    
  421588:	ja     0x4fab1053
  42158e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42158f:	aas    
  421590:	or     BYTE PTR [ebp+0x1785c8a6],dl
  421596:	ja     0x4215c6
  421598:	test   eax,0xf8310e2a
  42159d:	inc    edi
  42159e:	lahf   
  42159f:	mov    ebp,DWORD PTR [edx-0x24]
  4215a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a3:	dec    edx
  4215a4:	aaa    
  4215a5:	fild   WORD PTR [ebp-0x3b249371]
  4215ab:	mov    ebp,0x477c3234
  4215b0:	xor    eax,0x421f773e
  4215b5:	neg    DWORD PTR [edi+0x7086834c]
  4215bb:	shl    BYTE PTR [edx-0x2ceafd11],0xf8
  4215c2:	jmp    0xa4c8ea73
  4215c7:	test   BYTE PTR [eax-0x1d],cl
  4215ca:	sbb    al,0xe2
  4215cc:	xchg   esi,eax
  4215cd:	out    dx,al
  4215ce:	or     DWORD PTR [esi-0x7f],edi
  4215d1:	retf   0xc7d6
  4215d4:	std    
  4215d5:	mov    dl,0x15
  4215d7:	or     esi,DWORD PTR [ebx]
  4215d9:	cmp    ch,al
  4215db:	pop    ss
  4215dc:	(bad)  
  4215dd:	dec    edi
  4215de:	shl    DWORD PTR [esi],cl
  4215e0:	fldcw  WORD PTR [ebx+0x64c614d8]
  4215e6:	jb     0x42158b
  4215e8:	mov    dh,0x34
  4215ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215eb:	ficomp DWORD PTR ds:0x308b297
  4215f1:	xor    ecx,DWORD PTR [ebp-0x62146487]
  4215f7:	pop    edx
  4215f8:	test   al,0xc0
  4215fa:	out    0x48,eax
  4215fc:	mov    edi,esi
  4215fe:	fadd   DWORD PTR [eax+ecx*4-0x5d]
  421602:	add    BYTE PTR [ebx],al
  421604:	(bad)  
  421605:	test   BYTE PTR [edx+0x3e80bbdf],bh
  42160b:	push   0xffffff9d
  42160d:	sub    eax,0x121131cf
  421612:	fisubr DWORD PTR [esp+esi*8]
  421615:	fnsave [edi-0x2]
  421618:	cmp    bl,BYTE PTR [edx-0x48]
  42161b:	std    
  42161c:	mov    ds:0xc2c8f472,al
  421621:	xchg   ebp,eax
  421622:	(bad)  [eax+0x72dc3487]
  421628:	fstp   TBYTE PTR [ebp-0x72903381]
  42162e:	outs   dx,BYTE PTR ds:[esi]
  42162f:	fs jne 0x42166a
  421632:	fld    TBYTE PTR [edi]
  421634:	push   edi
  421635:	push   ecx
  421636:	mov    ds:0xf8a7b02d,al
  42163b:	push   ds
  42163c:	stos   DWORD PTR es:[edi],eax
  42163d:	sbb    BYTE PTR [esi],cl
  42163f:	push   ebp
  421640:	inc    ebp
  421641:	cmp    eax,0x9cc7668a
  421646:	sbb    ch,BYTE PTR [esi+edx*4]
  421649:	mov    esi,0xbb9b2985
  42164e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42164f:	ins    BYTE PTR es:[edi],dx
  421650:	mov    WORD PTR [ebx],?
  421652:	mov    al,0x5a
  421654:	push   ecx
  421655:	test   al,0xa7
  421657:	xlat   BYTE PTR ds:[ebx]
  421658:	je     0x4216b0
  42165a:	sub    eax,0xddd0f605
  42165f:	dec    ebp
  421660:	xor    dl,BYTE PTR [ebx-0x5ab14e2c]
  421666:	add    BYTE PTR ds:0x90b4f54c,bl
  42166c:	mov    ch,0x70
  42166e:	dec    esi
  42166f:	mov    ebx,DWORD PTR [ebx+0x62]
  421672:	sti    
  421673:	push   ds
  421674:	(bad)  
  421675:	sbb    DWORD PTR [eax+0x1361bb40],esp
  42167b:	mov    ds:0x828b9a96,al
  421680:	add    eax,0x5711f44b
  421685:	mov    DWORD PTR [ebp-0x4d0ee3eb],esp
  42168b:	fiadd  DWORD PTR [ecx-0x59]
  42168e:	bound  esi,QWORD PTR [eax]
  421690:	outs   dx,DWORD PTR ds:[esi]
  421691:	push   ebx
  421692:	mov    dh,0xd1
  421694:	stos   DWORD PTR es:[edi],eax
  421695:	xor    esi,edi
  421697:	retf   0x285b
  42169a:	(bad)  
  42169b:	loope  0x421701
  42169d:	pop    ebp
  42169e:	sbb    ebp,ecx
  4216a0:	pop    ebp
  4216a1:	data16 or al,0xa8
  4216a4:	mov    eax,0x669ec81c
  4216a9:	mov    bl,0xa2
  4216ab:	mov    edx,eax
  4216ad:	mov    cs,ebp
  4216af:	jne    0x4216f8
  4216b1:	xlat   BYTE PTR ds:[ebx]
  4216b2:	or     ecx,DWORD PTR [ecx]
  4216b4:	fwait
  4216b5:	cmc    
  4216b6:	sahf   
  4216b7:	std    
  4216b8:	rol    ebx,0xf3
  4216bb:	imul   ecx,DWORD PTR [ecx+0x0],0x873f2c06
  4216c2:	add    DWORD PTR ds:0x1f380812,ebp
  4216c8:	jle    0x421718
  4216ca:	adc    al,0x98
  4216cc:	mov    cl,BYTE PTR [eax+0x43c56e4e]
  4216d2:	xchg   edi,eax
  4216d3:	ja     0x4216d8
  4216d5:	and    BYTE PTR [ecx+0x17],ah
  4216d8:	adc    BYTE PTR [ecx-0x74],0x2
  4216dc:	in     eax,0x7f
  4216de:	imul   ecx,DWORD PTR [edi],0x62fe52d9
  4216e4:	xchg   BYTE PTR [bp+di],dh
  4216e7:	repnz and dl,BYTE PTR ds:0x3f357f38
  4216ee:	test   eax,0xbc0c983c
  4216f3:	dec    eax
  4216f4:	and    DWORD PTR ds:0xf51e0a9a,ebp
  4216fa:	push   cs
  4216fb:	or     DWORD PTR [ebp-0x35139093],esi
  421701:	fimul  WORD PTR [edi+0x6b]
  421704:	jle    0x421744
  421706:	fwait
  421707:	or     dl,cl
  421709:	sub    edx,DWORD PTR [ebx]
  42170b:	mov    DWORD PTR [eax],edi
  42170d:	or     esp,DWORD PTR [ebx-0x1]
  421710:	dec    ebp
  421711:	dec    edi
  421712:	gs push esi
  421714:	test   al,0xa6
  421716:	clc    
  421717:	arpl   WORD PTR [edi],ax
  421719:	sub    al,0x4f
  42171b:	mov    ch,0xef
  42171d:	jnp    0x42176e
  42171f:	jno    0x4216d4
  421721:	push   ds
  421722:	jmp    0xafc7:0xe3eddbd9
  421729:	adc    DWORD PTR [esi+edi*4+0x7],ecx
  42172d:	jl     0x4216bf
  42172f:	cmp    BYTE PTR [esi+ebx*8+0x4],cl
  421733:	daa    
  421734:	xor    eax,DWORD PTR [ebp+edi*2-0x25c4fc64]
  42173b:	sbb    edx,DWORD PTR [esi]
  42173d:	ja     0x421701
  42173f:	mov    al,ds:0x834707f3
  421744:	fst    QWORD PTR [eax+0x55]
  421747:	sub    esp,DWORD PTR [ebp+0x33]
  42174a:	aam    0xba
  42174c:	lock xor al,0x45
  42174f:	repnz add BYTE PTR [ecx-0x72],0x30
  421754:	fucomi st,st(6)
  421756:	cmp    al,0x47
  421758:	outs   dx,DWORD PTR ds:[esi]
  421759:	ja     0x4217b9
  42175b:	ficom  DWORD PTR [edx+0x686dded9]
  421761:	lea    ecx,[edx+esi*1-0x434cd307]
  421768:	int    0x4b
  42176a:	ror    dh,cl
  42176c:	fsub   DWORD PTR [ebp+ecx*1+0x75]
  421770:	fwait
  421771:	in     al,0x23
  421773:	repnz cmp eax,0x9ca103b4
  421779:	loop   0x4217bc
  42177b:	into   
  42177c:	mov    al,0x9c
  42177e:	test   al,0xf4
  421780:	sub    al,0xce
  421782:	test   BYTE PTR [eax-0x11],dh
  421785:	addr16 mov ds:0xb492,eax
  421789:	pop    esp
  42178a:	inc    eax
  42178b:	clc    
  42178c:	out    dx,eax
  42178d:	imul   esi,DWORD PTR [ecx-0x7b],0xffffffa1
  421791:	icebp  
  421792:	pop    ebp
  421793:	cld    
  421794:	pop    ss
  421795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421796:	jmp    0x893748e3
  42179b:	sub    ebp,esp
  42179d:	cmp    DWORD PTR [ecx+edi*4+0x63],ebx
  4217a1:	cmp    eax,0x9527656e
  4217a6:	adc    al,0xd0
  4217a8:	xchg   ecx,eax
  4217a9:	adc    edx,ebx
  4217ab:	fucomi st,st(0)
  4217ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217ae:	imul   edx,DWORD PTR [eax],0x50
  4217b1:	adc    eax,0x45bdf154
  4217b6:	sub    ebx,DWORD PTR [ebp+0x486ea18b]
  4217bc:	xchg   esi,eax
  4217bd:	xor    eax,0x59747d02
  4217c2:	dec    edx
  4217c3:	adc    edi,DWORD PTR [edx+0x70]
  4217c6:	in     al,0x59
  4217c8:	jl     0xf34e79a2
  4217ce:	xor    ebx,ebp
  4217d0:	jmp    0x421763
  4217d2:	fstp   TBYTE PTR [esi+0x53]
  4217d5:	cmp    al,BYTE PTR [ebx]
  4217d7:	pop    eax
  4217d8:	dec    edx
  4217da:	pusha  
  4217db:	out    0x88,al
  4217dd:	inc    BYTE PTR [ebx]
  4217df:	jmp    0x9962cc8
  4217e4:	inc    ecx
  4217e5:	fs int 0xa5
  4217e8:	cmp    BYTE PTR [eax],bl
  4217ea:	je     0x4217a5
  4217ec:	test   DWORD PTR [edi],edi
  4217ee:	test   eax,0x420f1e
  4217f3:	in     eax,0x7
  4217f5:	mov    al,ds:0x3db9edce
  4217fa:	test   al,0xf
  4217fc:	or     dh,BYTE PTR [edx+0x11]
  4217ff:	push   ebx
  421800:	push   ebx
  421801:	gs (bad) 
  421803:	push   ds
  421804:	rcr    ebp,cl
  421806:	push   0x9b49c94c
  42180b:	or     BYTE PTR [eax-0x35111698],ch
  421811:	xlat   BYTE PTR ds:[ebx]
  421812:	inc    edx
  421813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421814:	mov    WORD PTR [ecx-0x6a],es
  421817:	in     eax,dx
  421818:	or     BYTE PTR [ecx-0x3055e6a5],bl
  42181e:	jmp    0x421868
  421820:	sti    
  421821:	pushf  
  421822:	cmp    DWORD PTR [edi+0x5b6a4a95],edx
  421828:	mov    esp,ecx
  42182a:	jnp    0x4217f8
  42182c:	aam    0xb9
  42182e:	mov    bl,BYTE PTR [edi]
  421830:	clc    
  421831:	dec    DWORD PTR fs:[ecx+0x6f95abda]
  421838:	sar    BYTE PTR [ebx+0x22],cl
  42183b:	mov    ch,0xba
  42183d:	popa   
  42183e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42183f:	xchg   edx,eax
  421840:	ins    DWORD PTR es:[edi],dx
  421841:	push   esi
  421842:	or     cl,bh
  421844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421845:	push   0xab8c7e3f
  42184a:	cmc    
  42184b:	push   esp
  42184c:	mov    DWORD PTR [eax+edi*4],ebx
  42184f:	mov    BYTE PTR [edx+ecx*2+0x17],cl
  421853:	inc    edx
  421854:	out    dx,al
  421855:	mov    al,0x76
  421858:	cs loope 0x4218da
  42185b:	jnp    0x421882
  42185d:	in     eax,dx
  42185e:	or     DWORD PTR gs:[edx+ecx*8+0x6c599df4],ebp
  421866:	inc    ebx
  421867:	push   edi
  421868:	enter  0x14b6,0x69
  42186c:	imul   ecx,ecx,0x8
  42186f:	retf   
  421870:	and    dh,BYTE PTR [edi+edx*1-0x1c]
  421874:	stos   BYTE PTR es:[edi],al
  421875:	adc    BYTE PTR [edx],dh
  421877:	cmc    
  421878:	nop
  421879:	(bad)  
  42187b:	ds mov eax,0x7ab8a934
  421881:	mov    esp,0xecdb0f77
  421886:	dec    eax
  421887:	call   0xfb60:0xc6a84ac0
  42188e:	push   esp
  42188f:	cmp    ebp,edx
  421891:	xchg   edx,eax
  421892:	fnstsw WORD PTR [eax]
  421894:	imul   edi,DWORD PTR [esi+0x33],0xffffffa6
  421898:	jne    0x421914
  42189a:	mov    al,gs:0x693ff94d
  4218a0:	das    
  4218a1:	adc    dh,BYTE PTR [edx-0x1c]
  4218a4:	cmp    eax,0x2e2a845b
  4218a9:	pop    esi
  4218aa:	lahf   
  4218ab:	out    dx,al
  4218ac:	hlt    
  4218ad:	xchg   BYTE PTR [ecx+ebx*2+0x165e601e],cl
  4218b4:	pop    ebx
  4218b5:	pop    esp
  4218b6:	nop
  4218b7:	jge    0x4218e6
  4218b9:	popf   
  4218ba:	aaa    
  4218bb:	addr16 (bad) 
  4218bd:	or     BYTE PTR [ebp-0x5f],ch
  4218c0:	jne    0x42190f
  4218c2:	or     BYTE PTR [edi],bl
  4218c4:	mov    al,ds:0xb873d5a0
  4218c9:	add    bh,BYTE PTR [ecx-0x10]
  4218cc:	jp     0x421907
  4218ce:	add    edi,DWORD PTR [edx+0x37]
  4218d1:	dec    ebx
  4218d2:	or     eax,0x6db06c0e
  4218d7:	adc    DWORD PTR [edi-0x5675798a],eax
  4218dd:	mov    eax,DWORD PTR [ebx+0xc]
  4218e0:	mov    ds:0x5d264f4a,al
  4218e5:	fs ins BYTE PTR es:[edi],dx
  4218e7:	test   BYTE PTR [esi+0x74da2614],0x8b
  4218ee:	es imul edx,edx,0x39
  4218f2:	mov    al,0x0
  4218f4:	test   ecx,ecx
  4218f6:	out    0x9a,eax
  4218f8:	pop    esp
  4218f9:	fisub  DWORD PTR [edi+0x57]
  4218fc:	dec    ecx
  4218fd:	cdq    
  4218fe:	dec    esi
  4218ff:	mov    eax,DWORD PTR ds:0xbae804df
  421905:	add    ebp,DWORD PTR [ecx+0x3b]
  421908:	mov    ebp,0x3ab931ea
  42190d:	rcl    DWORD PTR [eax+0x48],0x55
  421911:	xchg   edi,eax
  421912:	mov    esi,0x7b132d88
  421917:	cmp    DWORD PTR [ecx+ecx*2+0x1328d69c],esp
  42191e:	nop
  42191f:	dec    esp
  421920:	push   ecx
  421921:	push   eax
  421922:	add    al,0xcb
  421924:	out    dx,al
  421925:	mov    al,ds:0x4a106737
  42192a:	aas    
  42192b:	(bad)  
  42192d:	jmp    0xfddb:0x711c63ac
  421934:	jb     0x42198e
  421936:	add    eax,0x1f23564f
  42193b:	pop    esp
  42193c:	ins    BYTE PTR es:[edi],dx
  42193d:	cld    
  42193e:	fstp   DWORD PTR [eax]
  421940:	pop    es
  421941:	push   esi
  421942:	cmp    DWORD PTR [ebx],ebp
  421944:	adc    edx,DWORD PTR [ecx-0xae30ae1]
  42194a:	ss and al,0xb0
  42194d:	jnp    0x4219b2
  42194f:	test   DWORD PTR [ebx-0x599961c4],esp
  421955:	sub    dh,0x17
  421958:	mov    ds:0x95c3a0ea,eax
  42195d:	aad    0xa7
  42195f:	enter  0xeb48,0xb9
  421963:	dec    ecx
  421964:	mov    eax,0x855b8079
  421969:	arpl   WORD PTR [edi-0x68c98ac6],ax
  42196f:	jmp    0x1a386349
  421974:	xchg   BYTE PTR cs:[esi+0x2d],dh
  421978:	scas   eax,DWORD PTR es:[edi]
  421979:	adc    edx,DWORD PTR [edi+0x2bfd4625]
  42197f:	fistp  DWORD PTR [edi-0x117e84f4]
  421985:	mov    ebp,0xfef92719
  42198a:	xchg   ebx,eax
  42198b:	and    ch,ch
  42198d:	push   cs
  42198e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  421990:	mov    BYTE PTR [esi-0x52],ah
  421993:	jno    0x4219ea
  421995:	ffree  st(0)
  421998:	mov    dh,0xd5
  42199a:	xor    ah,bl
  42199c:	ds out dx,eax
  42199e:	imul   edx,DWORD PTR [edi+0x32],0xa53ca920
  4219a5:	dec    esi
  4219a6:	(bad)  
  4219a7:	push   es
  4219a8:	push   ds
  4219a9:	jp     0x421a0d
  4219ab:	dec    edx
  4219ac:	ror    esi,0x7e
  4219af:	jbe    0x421a13
  4219b1:	mov    dl,0x39
  4219b3:	out    dx,al
  4219b4:	or     ah,dl
  4219b6:	add    DWORD PTR [eax-0x231234cc],esi
  4219bc:	xor    DWORD PTR [ebp-0x78],edx
  4219bf:	out    0x2f,al
  4219c1:	mov    cl,0x86
  4219c3:	in     al,dx
  4219c4:	mov    BYTE PTR [esi-0x1d],bl
  4219c7:	mov    dl,0x8a
  4219c9:	test   al,0x3c
  4219cb:	shl    BYTE PTR [ebx],cl
  4219cd:	jg     0x421985
  4219cf:	ins    DWORD PTR es:[edi],dx
  4219d0:	mov    ds:0xbfbd87ac,eax
  4219d5:	ins    DWORD PTR es:[edi],dx
  4219d6:	test   ebp,esi
  4219d8:	ds mov ebx,0xbe54462d
  4219de:	xor    dl,dl
  4219e0:	ss jo  0x4219e5
  4219e3:	retf   
  4219e4:	mov    ch,0xc9
  4219e6:	or     ebx,esi
  4219e8:	xchg   DWORD PTR [eax-0x517ab8f3],ecx
  4219ee:	jbe    0x421a38
  4219f0:	lods   eax,DWORD PTR ds:[esi]
  4219f1:	aam    0x47
  4219f3:	mov    esp,DWORD PTR [edx-0x2d]
  4219f6:	hlt    
  4219f7:	pop    esp
  4219f8:	mov    es,WORD PTR [ebx+0x4]
  4219fb:	cld    
  4219fc:	in     eax,0x8a
  4219fe:	add    ecx,DWORD PTR [edx]
  421a00:	lahf   
  421a01:	jmp    0xc59453e7
  421a06:	sub    cl,ah
  421a08:	sub    edi,esi
  421a0a:	mov    ch,0xe8
  421a0c:	test   DWORD PTR [edi+0x27e7f04a],esi
  421a12:	mov    bl,bl
  421a14:	add    cl,al
  421a16:	xor    BYTE PTR [esi+0x32caf812],0xb2
  421a1d:	scas   eax,DWORD PTR es:[edi]
  421a1e:	mov    al,ah
  421a20:	ror    eax,0x60
  421a23:	cs jno 0x421a83
  421a26:	sbb    DWORD PTR [ebx+0x95a9590],0x3e8669ee
  421a30:	cmp    BYTE PTR [ebx],cl
  421a32:	push   ds
  421a33:	stc    
  421a34:	pop    esi
  421a35:	(bad)  [ecx-0x6faee66b]
  421a3b:	stc    
  421a3c:	push   es
  421a3d:	or     eax,0xffffff94
  421a40:	aas    
  421a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a42:	out    0x47,eax
  421a44:	cdq    
  421a45:	xchg   DWORD PTR [eax],ebp
  421a47:	je     0x421a7c
  421a49:	jo     0x421a5e
  421a4b:	add    ebx,esi
  421a4d:	fs add cl,bl
  421a50:	mov    fs,ecx
  421a52:	out    0x2d,eax
  421a54:	mov    ecx,0x399ccb91
  421a59:	ret    
  421a5a:	xchg   DWORD PTR [ecx+eax*8+0x3d1387],edi
  421a61:	jne    0x421a4f
  421a63:	and    edx,edi
  421a65:	(bad)  
  421a66:	in     eax,dx
  421a67:	and    cl,bl
  421a69:	sbb    cl,al
  421a6b:	add    eax,0x633f929
  421a70:	inc    edi
  421a71:	mov    ds:0xbb905314,eax
  421a76:	and    edi,0x8eb03099
  421a7c:	js     0x421a6e
  421a7e:	shl    BYTE PTR [edi],cl
  421a80:	repz adc bl,ch
  421a83:	test   ch,dl
  421a85:	lds    eax,FWORD PTR [esi+0x5541a88e]
  421a8b:	adc    al,0xd2
  421a8d:	inc    ebx
  421a8e:	cwde   
  421a8f:	mov    esp,0x24ea2c80
  421a94:	dec    ebp
  421a95:	(bad)  
  421a96:	aad    0x19
  421a98:	jnp    0x421a1b
  421a9a:	pop    ebp
  421a9b:	sar    DWORD PTR [eax-0x6a967aaa],0x33
  421aa2:	in     al,dx
  421aa3:	(bad)
  421aa7:	(bad)  
  421aa8:	jmp    0x10a2:0xa69258fb
  421aaf:	mov    al,ds:0x7984ef8
  421ab4:	push   0xffffffac
  421ab6:	rcl    BYTE PTR [eax+ebx*4],0x33
  421aba:	mov    ebx,0xa70eab73
  421abf:	dec    ebx
  421ac0:	sbb    bl,bl
  421ac2:	lahf   
  421ac3:	inc    ebp
  421ac4:	adc    dh,BYTE PTR [ebp-0x12923744]
  421aca:	in     al,dx
  421acb:	lds    ebp,FWORD PTR [ecx-0x7191638a]
  421ad1:	xchg   esp,eax
  421ad2:	aam    0x55
  421ad4:	cld    
  421ad5:	out    dx,al
  421ad6:	xor    eax,0x271cabec
  421adb:	nop
  421adc:	sub    BYTE PTR [edi-0x4f],cl
  421adf:	mov    dh,0xe4
  421ae1:	into   
  421ae2:	les    ecx,FWORD PTR [edi+0x96ccb97]
  421ae8:	add    esi,0xffffff98
  421aeb:	add    BYTE PTR [esi],0x73
  421aee:	cmp    al,0xaa
  421af0:	and    bl,BYTE PTR [eax]
  421af2:	or     edi,DWORD PTR [ebx+ecx*8+0x59]
  421af6:	fidivr WORD PTR [edi-0xb868a8f]
  421afc:	pop    ebp
  421afd:	xchg   esi,eax
  421afe:	addr16 dec ebp
  421b00:	add    dl,dl
  421b02:	and    esi,DWORD PTR [edi]
  421b04:	imul   edx,DWORD PTR [esi+ecx*2-0x34],0xfffffff4
  421b09:	hlt    
  421b0a:	push   ss
  421b0b:	xor    DWORD PTR [edi+eax*4+0x36b85885],0xe55d6f2e
  421b16:	pop    esi
  421b17:	sbb    al,0x88
  421b19:	xchg   ecx,eax
  421b1a:	sub    ecx,DWORD PTR [eax-0x7f2c5ed9]
  421b20:	cmc    
  421b21:	nop
  421b22:	mov    fs,WORD PTR [esi+0x4e32c375]
  421b28:	vprotw xmm12,[edx+0x17],xmm2
  421b2e:	mov    bh,0xdf
  421b30:	and    eax,0x5aef4440
  421b35:	add    esi,ebp
  421b37:	add    eax,0xc745c156
  421b3c:	adc    ah,BYTE PTR [esi-0x101e62d5]
  421b42:	ja     0x421b90
  421b44:	mov    bh,0x9a
  421b46:	rcr    ebp,1
  421b48:	mov    ecx,0x8c1cf9a5
  421b4d:	jg     0x421bbf
  421b4f:	pusha  
  421b50:	data16 sub ch,ah
  421b53:	test   DWORD PTR [ecx+esi*4-0x8],edi
  421b57:	adc    BYTE PTR [eax-0xd],ch
  421b5a:	pop    esi
  421b5b:	mov    eax,0x7f8e1292
  421b60:	enter  0xc45e,0x2
  421b64:	ss out 0x4,al
  421b67:	sbb    ebx,DWORD PTR [edx+0xf7c2378]
  421b6d:	es test ebp,eax
  421b70:	je     0x421b23
  421b72:	pop    eax
  421b73:	xchg   edx,eax
  421b74:	sahf   
  421b75:	mov    ecx,cs
  421b77:	mov    ebp,0xfb00d056
  421b7c:	ficom  WORD PTR [eax+0xb]
  421b7f:	imul   ebp,DWORD PTR [ebx+0x15a844ae],0xffffffbd
  421b86:	jmp    0x441b086e
  421b8b:	xchg   edx,eax
  421b8c:	cmp    eax,0x17ad475
  421b91:	sti    
  421b92:	sbb    al,0x6c
  421b94:	push   esi
  421b95:	mov    eax,0xadaa786b
  421b9a:	idiv   BYTE PTR [edx+0x56]
  421b9d:	pop    eax
  421b9e:	sbb    ebp,DWORD PTR [esi-0x19]
  421ba1:	mov    al,0xc5
  421ba3:	mov    ebx,DWORD PTR [esi-0x6b05bf6f]
  421ba9:	in     al,0xe3
  421bab:	ret    0xb83c
  421bae:	(bad)  
  421baf:	dec    edi
  421bb0:	mov    BYTE PTR [ebp-0x3aa7416f],bl
  421bb6:	outs   dx,BYTE PTR ds:[esi]
  421bb7:	dec    ecx
  421bb8:	mov    cl,0xe5
  421bba:	fisub  WORD PTR [edx+0x3c]
  421bbd:	pop    eax
  421bbe:	jb     0x421bb7
  421bc0:	jns    0x421c31
  421bc2:	and    ax,0x1029
  421bc6:	adc    DWORD PTR [esi-0x2e542acb],esp
  421bcc:	pop    ss
  421bcd:	cmp    al,BYTE PTR [ebp-0x318df044]
  421bd3:	lahf   
  421bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bd5:	retf   
  421bd6:	out    0xa3,eax
  421bd8:	pop    esp
  421bd9:	repnz xchg esp,eax
  421bdb:	jmp    0x421b99
  421bdd:	dec    ebx
  421bde:	xor    BYTE PTR [edx+0x1596471a],bl
  421be4:	inc    esp
  421be5:	es ss aad 0xaa
  421be9:	add    BYTE PTR [esi],bl
  421beb:	mov    ?,WORD PTR [edx]
  421bed:	xor    bl,BYTE PTR [esi]
  421bef:	sub    DWORD PTR [ebx+ebx*2-0x354419ef],ebx
  421bf6:	(bad)  
  421bf8:	sbb    DWORD PTR [ecx-0x31ed9819],edi
  421bfe:	push   ss
  421bff:	je     0x421c58
  421c01:	xchg   ecx,eax
  421c02:	cmp    eax,0x33e2909
  421c07:	out    dx,eax
  421c08:	sub    dh,BYTE PTR [ebp+0x6d07bed2]
  421c0e:	fbstp  TBYTE PTR [ebp-0x20c9fea4]
  421c14:	ret    0xc8c3
  421c17:	pop    eax
  421c18:	stos   DWORD PTR es:[edi],eax
  421c19:	xchg   esp,eax
  421c1a:	outs   dx,DWORD PTR ds:[esi]
  421c1b:	inc    ecx
  421c1c:	add    BYTE PTR [ebp-0x26],bl
  421c1f:	scas   eax,DWORD PTR es:[edi]
  421c20:	cmp    ah,dl
  421c22:	pop    es
  421c23:	ja     0x421c1d
  421c25:	jmp    0xb6910745
  421c2a:	inc    esp
  421c2b:	retf   
  421c2c:	add    dl,BYTE PTR [edx-0x7e]
  421c2f:	or     dl,BYTE PTR [edi]
  421c31:	in     eax,dx
  421c32:	lods   eax,DWORD PTR ds:[esi]
  421c33:	adc    edx,DWORD PTR [ecx+0x2c6bf5cb]
  421c39:	xor    eax,esi
  421c3b:	mov    eax,ds:0x9082868e
  421c40:	jne    0x421c89
  421c42:	sahf   
  421c43:	dec    edi
  421c44:	fstp   QWORD PTR [eax+0x4d]
  421c47:	shl    DWORD PTR [edx-0x61],0x1e
  421c4b:	aaa    
  421c4c:	iret   
  421c4d:	hlt    
  421c4e:	sub    edi,edi
  421c50:	adc    BYTE PTR [ebx-0x68fb21ec],dl
  421c56:	mov    edi,0x66206c95
  421c5b:	inc    ebx
  421c5c:	hlt    
  421c5d:	sahf   
  421c5e:	jnp    0x421c03
  421c60:	sub    DWORD PTR [ebx],ebx
  421c62:	jns    0x421c65
  421c64:	retf   
  421c65:	inc    ebx
  421c66:	out    0xa8,eax
  421c68:	push   es
  421c69:	cmp    DWORD PTR [esi+0x7d],edx
  421c6c:	lahf   
  421c6d:	or     DWORD PTR [ebx-0x1a4e5b1c],ebx
  421c73:	xor    al,0x65
  421c75:	pop    esi
  421c76:	inc    ecx
  421c77:	inc    edi
  421c78:	push   esi
  421c79:	cwde   
  421c7a:	cld    
  421c7b:	icebp  
  421c7c:	and    eax,0xd4a4c187
  421c81:	jnp    0x421c79
  421c83:	retf   
  421c84:	repz dec ecx
  421c86:	pushf  
  421c87:	lock test DWORD PTR [eax+0x40247ca7],ebx
  421c8e:	into   
  421c8f:	arpl   WORD PTR [eax],bx
  421c91:	xchg   ecx,eax
  421c92:	push   esp
  421c93:	pop    edx
  421c94:	jns    0x421c42
  421c96:	aad    0x38
  421c98:	mov    BYTE PTR [edx-0x51],cl
  421c9b:	dec    ebp
  421c9c:	test   BYTE PTR [ecx+0x533dc8b2],0xa9
  421ca3:	in     al,0xcd
  421ca5:	mov    WORD PTR [ecx-0x745d8286],fs
  421cab:	and    eax,DWORD PTR [esi+0x3b]
  421cae:	sub    bh,BYTE PTR [eax+0x1ad8f637]
  421cb4:	mov    ds,WORD PTR [ecx-0x1eea60e2]
  421cba:	push   edi
  421cbb:	cwde   
  421cbc:	jne    0x421cf0
  421cbe:	pop    edi
  421cbf:	xchg   ebp,eax
  421cc0:	cmp    ah,BYTE PTR [ecx+0x59]
  421cc3:	xchg   eax,esi
  421cc5:	jmp    0x421d24
  421cc7:	setge  BYTE PTR [ecx+0x25f38162]
  421cce:	lahf   
  421ccf:	lods   al,BYTE PTR ds:[esi]
  421cd0:	daa    
  421cd1:	int    0x4b
  421cd3:	jae    0x421cd7
  421cd5:	daa    
  421cd6:	or     al,0x13
  421cd8:	jb     0x421cf1
  421cda:	mov    edx,0x3999770e
  421cdf:	and    esi,DWORD PTR [ebx+0x5edc5a93]
  421ce5:	pop    ebx
  421ce6:	cmp    al,0x7d
  421ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ce9:	sub    al,0x2f
  421ceb:	sub    edi,edx
  421ced:	sbb    eax,ecx
  421cef:	test   al,0x41
  421cf1:	(bad)  
  421cf2:	xchg   edi,eax
  421cf3:	jno    0x421cbd
  421cf5:	adc    DWORD PTR [ebx],edx
  421cf7:	outs   dx,BYTE PTR ds:[esi]
  421cf8:	mov    edx,DWORD PTR [edx]
  421cfa:	ficom  WORD PTR [eax-0x11]
  421cfd:	pop    edi
  421cfe:	push   ebx
  421cff:	jmp    0x421d61
  421d01:	mov    ds:0x8a198c74,eax
  421d06:	clc    
  421d07:	imul   ebp,DWORD PTR [esi+esi*4+0x4eb0125d],0xffffff9b
  421d0f:	pop    ecx
  421d10:	sahf   
  421d11:	out    dx,eax
  421d12:	add    eax,0x95471d49
  421d17:	ficomp WORD PTR [ecx]
  421d19:	aas    
  421d1a:	push   0x18782ce0
  421d1f:	out    dx,eax
  421d20:	xchg   edx,eax
  421d21:	call   FWORD PTR [edx]
  421d23:	fld    TBYTE PTR [esi+ecx*1-0x42]
  421d27:	shr    BYTE PTR [edi+0x44],1
  421d2a:	jge    0x421d48
  421d2c:	sub    al,0x17
  421d2e:	ret    
  421d2f:	push   esi
  421d30:	pop    ebx
  421d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d32:	add    bh,dl
  421d34:	js     0x421d04
  421d36:	and    bh,ch
  421d38:	sbb    BYTE PTR [ebp-0x7cd4181e],dl
  421d3e:	stos   BYTE PTR es:[edi],al
  421d3f:	mov    al,ds:0x39a66132
  421d44:	in     eax,dx
  421d45:	std    
  421d46:	fiadd  WORD PTR [edi]
  421d48:	mov    eax,0x8913526d
  421d4d:	ja     0x421cf7
  421d4f:	jne    0x421cd6
  421d51:	pushf  
  421d52:	push   es
  421d53:	adc    DWORD PTR [eax+0x1bac1191],esp
  421d59:	jne    0x421d40
  421d5b:	add    al,0x3
  421d5d:	aad    0x58
  421d5f:	pop    ss
  421d60:	dec    esp
  421d61:	aas    
  421d62:	ins    DWORD PTR es:[edi],dx
  421d63:	add    DWORD PTR [edi+0x7a2a08fd],esi
  421d69:	sub    al,0x42
  421d6b:	xchg   esp,eax
  421d6c:	add    al,0xb2
  421d6e:	in     eax,0x1b
  421d70:	pop    edx
  421d71:	lock out dx,al
  421d73:	outs   dx,DWORD PTR ds:[esi]
  421d74:	mov    esi,0xf59b3dda
  421d79:	lds    ebp,FWORD PTR [eax-0x2b]
  421d7c:	imul   esp,edx,0xffffffea
  421d7f:	fidivr DWORD PTR [ebp+0xefa9e6]
  421d85:	out    dx,eax
  421d86:	int3   
  421d87:	icebp  
  421d88:	loope  0x421e05
  421d8a:	jb     0x421db2
  421d8c:	xor    eax,0xa3d6b8d6
  421d91:	(bad)  
  421d92:	jae    0x421d35
  421d94:	cld    
  421d95:	loopne 0x421d6d
  421d97:	adc    si,WORD PTR ds:[ebx-0x14]
  421d9c:	adc    BYTE PTR [eax],0x6c
  421d9f:	dec    ebp
  421da0:	fidivr DWORD PTR [edi-0xf615875]
  421da6:	ficom  DWORD PTR [edi+0x75]
  421da9:	cmp    BYTE PTR [ebp+0x35e2ab20],cl
  421daf:	int3   
  421db0:	in     eax,dx
  421db1:	rcr    eax,0x8
  421db4:	xchg   ebx,eax
  421db5:	push   cs
  421db6:	jns    0x421e30
  421db8:	(bad)  
  421db9:	enter  0x725f,0x34
  421dbd:	dec    esi
  421dbe:	(bad)  
  421dbf:	jmp    0x8905:0xb5b93228
  421dc6:	pop    esi
  421dc7:	mov    DWORD PTR es:[ecx+ecx*4-0x1605df5],esp
  421dcf:	fsub   DWORD PTR [ebx]
  421dd1:	jns    0x421e1f
  421dd3:	sbb    esp,esi
  421dd5:	icebp  
  421dd6:	mov    ebx,?
  421dd8:	jns    0x421dea
  421dda:	push   0x9044f028
  421ddf:	cli    
  421de0:	into   
  421de1:	fild   WORD PTR [esi-0x4c]
  421de4:	pop    edi
  421de5:	retf   
  421de6:	div    BYTE PTR [edi+0x48]
  421de9:	fmul   DWORD PTR cs:[ebx-0x34ef0160]
  421df0:	repz rcr DWORD PTR [ebp-0x18],cl
  421df4:	dec    ebp
  421df5:	sbb    al,0x47
  421df7:	aas    
  421df8:	add    esi,ebp
  421dfa:	int    0xc2
  421dfc:	aam    0xcc
  421dfe:	adc    eax,0x65a5feaa
  421e03:	fs push ebx
  421e05:	ja     0x421dd5
  421e07:	cmp    ecx,DWORD PTR [esi-0x6f]
  421e0a:	call   0x94a5:0x473d44b0
  421e11:	sbb    bh,dh
  421e13:	fidivr WORD PTR [edx+0x6cefa05d]
  421e19:	das    
  421e1a:	inc    ebx
  421e1b:	push   eax
  421e1c:	sbb    dh,BYTE PTR [edi+0x27]
  421e1f:	jb     0x421de3
  421e21:	or     esi,esi
  421e23:	fdivrp st(5),st
  421e25:	dec    edi
  421e26:	imul   edx,DWORD PTR [ebx*8+0x303604f7],0x2c956db4
  421e31:	push   ebx
  421e32:	push   ebx
  421e33:	stos   BYTE PTR es:[edi],al
  421e34:	idiv   BYTE PTR [ecx-0x34ddf877]
  421e3a:	dec    ecx
  421e3b:	mov    DWORD PTR [ecx+0x51763d9b],0x98d7204b
  421e45:	push   0xffffffcc
  421e47:	retf   0x85f3
  421e4a:	cmc    
  421e4b:	imul   ebp,esp,0xafdfb453
  421e51:	mov    edi,0xe87c7990
  421e56:	and    dl,BYTE PTR [ebp-0x4c]
  421e59:	xor    DWORD PTR [edi+0x53],0x45ff128e
  421e60:	std    
  421e61:	add    BYTE PTR [ebx-0x48],bl
  421e64:	pop    ds
  421e65:	mov    dh,0x50
  421e67:	inc    ebx
  421e68:	(bad)  
  421e69:	adc    eax,0x23ddc411
  421e6e:	icebp  
  421e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e70:	xor    DWORD PTR [ecx],eax
  421e72:	stos   BYTE PTR es:[edi],al
  421e73:	cmc    
  421e74:	aam    0x57
  421e76:	inc    esp
  421e77:	mov    al,ds:0xbc762147
  421e7c:	pop    edx
  421e7d:	dec    BYTE PTR [edi+esi*1]
  421e80:	cli    
  421e81:	cli    
  421e82:	lods   eax,DWORD PTR ds:[esi]
  421e83:	nop
  421e84:	adc    ecx,DWORD PTR [ecx+0x1a5485c9]
  421e8a:	mov    eax,0xa12011ca
  421e8f:	or     dh,BYTE PTR [edx-0x7e070dab]
  421e95:	xlat   BYTE PTR gs:[ebx]
  421e97:	adc    DWORD PTR [ebx],0x63941979
  421e9d:	fnstcw WORD PTR [edi+0x751d925f]
  421ea3:	xchg   ebx,eax
  421ea4:	sbb    DWORD PTR [eax+0xf],ecx
  421ea7:	xor    al,0x3e
  421ea9:	push   ss
  421eaa:	fcmove st,st(1)
  421eac:	mov    BYTE PTR [esp+eax*1-0x27],ch
  421eb0:	dec    ecx
  421eb1:	dec    esp
  421eb2:	(bad)  
  421eb3:	dec    ecx
  421eb4:	(bad)
  421eb8:	cmc    
  421eb9:	into   
  421eba:	(bad)  
  421ebb:	sub    al,0x84
  421ebd:	pshufw mm3,mm2,0x53
  421ec1:	mov    al,0x8e
  421ec3:	pop    es
  421ec4:	loope  0x421f00
  421ec6:	adc    al,0x51
  421ec8:	scas   al,BYTE PTR es:[edi]
  421ec9:	shl    BYTE PTR [esi-0x4f],1
  421ecc:	inc    esp
  421ecd:	bound  ebp,QWORD PTR [esi]
  421ecf:	inc    esi
  421ed0:	mov    ebp,esi
  421ed2:	imul   esp,DWORD PTR [eax+0x55f75624],0x3b
  421ed9:	xor    cl,BYTE PTR [ecx-0x36]
  421edc:	outs   dx,BYTE PTR ds:[esi]
  421edd:	daa    
  421ede:	sbb    al,0xc9
  421ee0:	xor    dl,ch
  421ee2:	mov    ebp,0x8f237984
  421ee7:	sahf   
  421ee8:	loop   0x421f09
  421eea:	add    al,0xb0
  421eec:	push   cs
  421eed:	mov    ch,0x2f
  421eef:	mov    esp,0x244d668f
  421ef4:	test   DWORD PTR [edi+0x326c3f0d],esi
  421efa:	adc    BYTE PTR [edi+0x43],bl
  421efd:	pushaw 
  421eff:	jl     0x421e9d
  421f01:	pop    ebx
  421f02:	aam    0x5a
  421f04:	ror    BYTE PTR [ebx+0x17],0x49
  421f08:	repnz outs dx,BYTE PTR ds:[esi]
  421f0a:	sub    al,BYTE PTR [esi-0x5e]
  421f0d:	fld    DWORD PTR [esi-0x7f1c54c2]
  421f13:	cmp    esi,ecx
  421f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f16:	push   ecx
  421f17:	(bad)  
  421f18:	ja     0x421f7b
  421f1a:	dec    ebp
  421f1b:	pushf  
  421f1c:	rcl    BYTE PTR [ebp-0x2e],cl
  421f1f:	push   edi
  421f20:	sbb    eax,0x82064463
  421f25:	test   eax,0xab490544
  421f2a:	pop    ebx
  421f2b:	push   cs
  421f2c:	(bad)  
  421f2d:	sti    
  421f2e:	retf   0xedf
  421f31:	cmp    al,0xe1
  421f33:	dec    esp
  421f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f35:	mov    ds:0x32e53f46,eax
  421f3a:	clc    
  421f3b:	pop    eax
  421f3c:	push   esi
  421f3d:	imul   ebp,DWORD PTR [edx],0xabe34c03
  421f43:	(bad)  
  421f44:	(bad)  [edi+0x3a414b80]
  421f4a:	popf   
  421f4b:	sub    al,BYTE PTR [edx]
  421f4d:	dec    ecx
  421f4e:	pop    ebp
  421f4f:	icebp  
  421f50:	mov    ds:0xf4f0a2dc,eax
  421f55:	push   ds
  421f56:	or     ebx,DWORD PTR [ebp-0x29f9044c]
  421f5c:	daa    
  421f5d:	sub    edx,esp
  421f5f:	pop    ebx
  421f60:	mov    eax,ds:0xaaadb039
  421f65:	bndstx [edx+0x220d8c4b],bnd2
  421f6c:	icebp  
  421f6d:	stos   DWORD PTR es:[edi],eax
  421f6e:	xor    DWORD PTR [ebx-0x41],edi
  421f71:	xchg   esp,eax
  421f72:	push   esi
  421f73:	rol    BYTE PTR [eax+ebp*8-0x2b],1
  421f77:	aas    
  421f78:	int3   
  421f79:	push   es
  421f7a:	adc    BYTE PTR [esi+0x53439e7b],ah
  421f80:	ja     0x421fae
  421f82:	cs sub eax,0x171e2e0
  421f88:	aam    0xcf
  421f8a:	sbb    ch,dh
  421f8c:	mov    ch,0x24
  421f8e:	cmp    ecx,DWORD PTR [ebx]
  421f90:	dec    eax
  421f91:	cs sbb edi,esp
  421f94:	or     eax,0xf8a0c0a9
  421f99:	or     eax,0xdfaaf87d
  421f9e:	xchg   esi,eax
  421f9f:	jnp    0x421fbf
  421fa1:	jle    0x42201e
  421fa3:	add    al,0x9b
  421fa5:	xchg   esi,eax
  421fa6:	mov    WORD PTR [ecx],?
  421fa8:	mov    bl,0x5c
  421faa:	jae    0x421faf
  421fac:	mov    esp,0xfe31c36
  421fb1:	rcpps  xmm2,XMMWORD PTR [edi+0xa]
  421fb5:	mov    ebp,0xf19ee70d
  421fba:	xchg   edx,eax
  421fbb:	pusha  
  421fbc:	sbb    bh,cl
  421fbe:	retf   0x860e
  421fc1:	lods   eax,DWORD PTR ds:[esi]
  421fc2:	in     al,0x22
  421fc4:	cld    
  421fc5:	das    
  421fc6:	lods   eax,DWORD PTR ds:[esi]
  421fc7:	fmul   DWORD PTR [esi-0x14]
  421fca:	add    esi,ebx
  421fcc:	pop    esp
  421fcd:	add    eax,0x4491bb71
  421fd2:	popa   
  421fd3:	fdiv   DWORD PTR [edi]
  421fd5:	push   eax
  421fd6:	cmp    bl,dh
  421fd8:	les    ecx,FWORD PTR [ebx]
  421fda:	xchg   edx,eax
  421fdb:	mov    esp,0x2e153016
  421fe0:	pop    edi
  421fe1:	jle    0x42203f
  421fe3:	jo     0x422032
  421fe5:	dec    edx
  421fe6:	xchg   esi,eax
  421fe7:	mov    esp,0xc7531370
  421fec:	mov    ebp,0xe6a0d1fc
  421ff1:	stos   BYTE PTR es:[edi],al
  421ff2:	mov    bl,0x20
  421ff4:	xchg   ecx,eax
  421ff5:	in     eax,dx
  421ff6:	pop    edi
  421ff7:	ds pop ecx
  421ff9:	lahf   
  421ffa:	mov    ds:0xc02194eb,al
  421fff:	push   ebp
  422000:	add    bh,BYTE PTR [esi-0x12]
  422003:	adc    esp,DWORD PTR [ecx+eax*4-0x5aaf6cfd]
  42200a:	pop    esp
  42200b:	lods   eax,DWORD PTR ds:[esi]
  42200c:	mov    cl,0x2b
  42200e:	push   esi
  42200f:	fadd   QWORD PTR [esi+0x54e15a99]
  422015:	ss inc ebx
  422017:	add    al,0xf2
  422019:	cmp    bl,bh
  42201b:	xor    BYTE PTR [esi+ebp*8-0x43],bl
  42201f:	adc    al,0x43
  422021:	hlt    
  422022:	jbe    0x421ffa
  422024:	mov    ebp,0x6b666eca
  422029:	popa   
  42202a:	test   al,0x5e
  42202c:	mov    ebp,0x964894fa
  422031:	pop    edx
  422032:	mov    edx,0x691f1523
  422037:	sbb    edi,DWORD PTR [edx+0x2f]
  42203a:	fisttp WORD PTR ds:0x48a79d44
  422040:	jmp    0x5188b956
  422045:	mov    ebp,0xac68d730
  42204a:	je     0x421fd7
  42204c:	jmp    0x7d26e66d
  422051:	adc    BYTE PTR [eax+0x46],dh
  422054:	jecxz  0x422042
  422056:	sbb    ebx,DWORD PTR [edx-0x1cb47736]
  42205c:	int3   
  42205d:	inc    eax
  42205e:	xchg   ebp,eax
  42205f:	sub    eax,0x840f17d6
  422064:	popa   
  422065:	cld    
  422066:	out    0x28,eax
  422068:	in     eax,0xce
  42206a:	test   al,0xdf
  42206c:	rcr    DWORD PTR [ebx],1
  42206e:	(bad)  
  42206f:	stos   DWORD PTR es:[edi],eax
  422070:	inc    eax
  422071:	aaa    
  422072:	jmp    0xb0d3e5a3
  422077:	es adc esi,0xffffffb5
  42207b:	lahf   
  42207c:	or     BYTE PTR [edx+esi*4],dl
  42207f:	aas    
  422080:	call   0x4471a406
  422085:	mov    ah,0x10
  422087:	push   0x46dbe642
  42208c:	jmp    0x7bc5:0x6bebbc06
  422093:	or     ah,al
  422095:	ins    BYTE PTR es:[edi],dx
  422096:	pushf  
  422097:	xlat   BYTE PTR ds:[ebx]
  422098:	in     eax,dx
  422099:	js     0x422053
  42209b:	jg     0x422037
  42209d:	add    dh,ch
  42209f:	mov    al,ds:0xbc281073
  4220a4:	xor    DWORD PTR [edi+0x61],ecx
  4220a7:	int    0x69
  4220a9:	or     ecx,DWORD PTR [edi+edx*2-0x742de5a4]
  4220b0:	mov    bh,0x5e
  4220b2:	inc    edx
  4220b3:	push   ds
  4220b4:	stos   DWORD PTR es:[edi],eax
  4220b5:	or     al,0x19
  4220b7:	lahf   
  4220b8:	test   bl,al
  4220ba:	mov    ebx,DWORD PTR [ecx+eiz*4]
  4220bd:	rol    BYTE PTR [edx+edx*1],0xab
  4220c1:	xchg   BYTE PTR [edx],al
  4220c3:	xor    ecx,DWORD PTR [eax+esi*2]
  4220c6:	mov    edx,0xca455185
  4220cb:	cmp    eax,0x79f1c5ad
  4220d0:	fwait
  4220d1:	xor    DWORD PTR [edi-0x3c2e33b4],ebx
  4220d7:	pusha  
  4220d8:	outs   dx,DWORD PTR ds:[esi]
  4220d9:	mov    eax,0x2383410
  4220de:	xchg   DWORD PTR [ecx+ebp*2-0x74],esi
  4220e2:	pop    ds
  4220e3:	dec    ecx
  4220e4:	scas   eax,DWORD PTR es:[edi]
  4220e5:	mov    ecx,0x2939c0c0
  4220ea:	add    DWORD PTR [esi+0x7824494d],edi
  4220f0:	call   0x98e0:0x6917c17e
  4220f7:	pushf  
  4220f8:	adc    al,0x94
  4220fa:	(bad)
  4220fd:	into   
  4220fe:	mov    edx,gs
  422100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422101:	adc    ch,0xaa
  422104:	rcr    DWORD PTR ds:0xe3b65287,1
  42210a:	sbb    ch,ch
  42210c:	int    0x8c
  42210e:	lods   eax,DWORD PTR ds:[esi]
  42210f:	and    al,0xa3
  422111:	xor    ah,BYTE PTR [edx]
  422113:	cmc    
  422114:	xor    eax,0x742afe50
  422119:	sbb    bh,BYTE PTR [esi-0x2d5d916b]
  42211f:	ds add al,0xd9
  422122:	inc    esi
  422123:	jle    0x4220e1
  422125:	mov    cl,0xb3
  422127:	cmc    
  422128:	mov    esi,0x46a5297c
  42212d:	xchg   BYTE PTR [esi],bl
  42212f:	dec    ebp
  422130:	pusha  
  422131:	in     eax,dx
  422132:	inc    esp
  422133:	mov    dl,0xc2
  422135:	pop    ebx
  422136:	into   
  422137:	inc    esi
  422138:	imul   DWORD PTR [esi+0x503e67e4]
  42213e:	lods   al,BYTE PTR ds:[esi]
  42213f:	sbb    eax,0xb1ca44e6
  422144:	jns    0x42219b
  422146:	xor    BYTE PTR [edx-0x17],bl
  422149:	or     eax,0xbec6c34b
  42214e:	push   ds
  42214f:	out    dx,al
  422150:	rcl    edx,1
  422152:	inc    ecx
  422153:	lods   eax,DWORD PTR ds:[esi]
  422154:	xchg   edi,eax
  422155:	lock pop eax
  422157:	xchg   ecx,eax
  422158:	push   esi
  422159:	clc    
  42215a:	out    dx,eax
  42215b:	cli    
  42215c:	test   eax,0x4e13d06c
  422161:	add    al,0x2f
  422163:	test   DWORD PTR [edx-0x3c],edx
  422166:	cli    
  422167:	jl     0x422174
  422169:	mov    eax,0x6f5dc680
  42216e:	and    eax,0x51d0e199
  422173:	enter  0x5f0a,0xe3
  422177:	nop
  422178:	fcomp  DWORD PTR [eax]
  42217a:	add    DWORD PTR [eax],ebx
  42217c:	jnp    0x4221e8
  42217e:	and    BYTE PTR [edx],dh
  422180:	sti    
  422181:	ret    0x77a0
  422184:	scas   eax,DWORD PTR es:[edi]
  422185:	mov    ch,0x4
  422187:	(bad)  [esi+0x25]
  42218a:	aaa    
  42218b:	jne    0x422204
  42218d:	cmp    DWORD PTR es:[esi],0x4311bf03
  422194:	add    cl,BYTE PTR [ebx]
  422196:	pop    ds
  422197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422198:	mov    cl,0x36
  42219a:	sbb    edi,DWORD PTR [ebx]
  42219c:	pushf  
  42219d:	in     al,dx
  42219e:	mov    BYTE PTR [ebp-0x31],bh
  4221a1:	xchg   ebx,eax
  4221a2:	in     al,0xa2
  4221a4:	jl     0x422156
  4221a6:	and    esp,DWORD PTR [ebp+0x78]
  4221a9:	sub    bh,ch
  4221ab:	push   ds
  4221ac:	sub    ch,bh
  4221ae:	daa    
  4221af:	stos   BYTE PTR es:[edi],al
  4221b0:	mov    dl,0xe0
  4221b2:	shl    edx,1
  4221b4:	pmullw mm4,QWORD PTR [ebp-0x2a775ca8]
  4221bb:	or     cl,BYTE PTR [esi-0x45372560]
  4221c1:	cmp    bl,BYTE PTR [eax+0x4628402f]
  4221c7:	ss inc edi
  4221c9:	cmp    BYTE PTR [ebp-0x12a967c3],bh
  4221cf:	cmc    
  4221d0:	aad    0xbe
  4221d2:	lock test BYTE PTR [ebx],cl
  4221d5:	clc    
  4221d6:	inc    ecx
  4221d7:	mov    esi,DWORD PTR [ebx-0x6642ba6c]
  4221dd:	add    eax,0x2a11c310
  4221e2:	hlt    
  4221e3:	jno    0x42223f
  4221e5:	rcl    BYTE PTR [ecx+0x72500213],1
  4221eb:	xor    BYTE PTR [eax+0x32],dl
  4221ee:	dec    ebx
  4221ef:	add    BYTE PTR [ebx-0x3e537a05],ah
  4221f5:	pop    ds
  4221f6:	sti    
  4221f7:	outs   dx,DWORD PTR ds:[esi]
  4221f8:	mov    bh,0xf6
  4221fa:	xor    al,BYTE PTR [ebx-0x473ef3d8]
  422200:	sub    ecx,ecx
  422202:	xor    ah,BYTE PTR [ebx+edx*4]
  422205:	push   esp
  422206:	and    BYTE PTR [ebx+0x2978ca09],al
  42220c:	xchg   bh,ah
  42220e:	lods   al,BYTE PTR ds:[esi]
  42220f:	dec    esi
  422210:	retf   
  422211:	test   eax,0x4c3647ef
  422216:	scas   eax,DWORD PTR es:[edi]
  422217:	ins    DWORD PTR es:[edi],dx
  422218:	mov    fs,ebx
  42221a:	xchg   edi,ebx
  42221c:	add    BYTE PTR [esi+0x10ecec6a],0xec
  422223:	loope  0x4221d0
  422225:	sbb    eax,0x3ece9817
  42222a:	loopne 0x422239
  42222c:	or     dh,dh
  42222e:	fwait
  42222f:	adc    BYTE PTR [edx],0xd8
  422232:	imul   edi,DWORD PTR [esi+0x4c],0x54
  422236:	out    0xbf,al
  422238:	je     0x422227
  42223a:	out    dx,al
  42223b:	mov    eax,0x1611c880
  422240:	jns    0x422224
  422242:	dec    edi
  422243:	out    0xf,eax
  422245:	ins    DWORD PTR es:[edi],dx
  422246:	(bad)  
  422247:	mov    edi,0x37a72035
  42224c:	xor    bl,BYTE PTR [edx+0xee87a14]
  422252:	push   0xfffffffd
  422254:	or     cl,BYTE PTR [esp+ebx*4-0x5df0cf1a]
  42225b:	into   
  42225c:	addr16 xor eax,0x31ba6a42
  422262:	int    0xd4
  422264:	push   esp
  422265:	xchg   edi,eax
  422266:	movsx  esi,BYTE PTR [ecx+0x201bbe21]
  42226d:	outs   dx,BYTE PTR ds:[esi]
  42226e:	pop    ecx
  42226f:	inc    ebp
  422270:	call   0x46c8:0xc19b0286
  422277:	fdivr  QWORD PTR [ebp+0x58440ba5]
  42227d:	adc    al,0x30
  42227f:	mov    dh,bh
  422281:	lahf   
  422282:	push   0xffffff95
  422284:	aam    0xce
  422286:	push   ecx
  422287:	je     0x4222a7
  422289:	hlt    
  42228a:	es je  0x4222aa
  42228d:	dec    ebx
  42228e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42228f:	outs   dx,BYTE PTR ds:[esi]
  422290:	and    ecx,esi
  422292:	jnp    0x42225d
  422294:	mov    esp,0x6c4afe7b
  422299:	add    al,0x7f
  42229b:	aad    0x78
  42229d:	cmp    edx,DWORD PTR [edx-0x3e]
  4222a0:	inc    ecx
  4222a1:	in     eax,0x3c
  4222a3:	push   0xc765e447
  4222a8:	imul   esi,DWORD PTR [eax-0x5c],0x497d66fc
  4222af:	add    cl,cl
  4222b1:	test   DWORD PTR [ebx+0x7fe74c14],ebx
  4222b7:	push   edi
  4222b8:	ins    BYTE PTR es:[edi],dx
  4222b9:	sub    DWORD PTR [eax-0x5c],edi
  4222bc:	mov    ds:0xb1e2294,al
  4222c1:	ins    BYTE PTR es:[edi],dx
  4222c2:	xchg   BYTE PTR [esi-0x2ee06036],bl
  4222c8:	pop    edx
  4222c9:	dec    ebx
  4222ca:	jae    0x42225b
  4222cc:	js     0x4222c4
  4222ce:	sub    DWORD PTR [edi-0x55],edx
  4222d1:	(bad)
  4222d4:	mov    dh,0xb1
  4222d6:	pop    esp
  4222d7:	dec    esp
  4222d8:	(bad)  
  4222da:	stos   BYTE PTR es:[edi],al
  4222db:	or     dh,bh
  4222dd:	inc    esp
  4222de:	and    al,0xbb
  4222e1:	adc    esp,DWORD PTR [edx]
  4222e3:	mov    ch,0xe1
  4222e5:	inc    eax
  4222e6:	xchg   ebp,eax
  4222e7:	xor    DWORD PTR [edi],edi
  4222e9:	mov    BYTE PTR [ebx+0x18],ch
  4222ec:	stc    
  4222ed:	adc    ebx,ebp
  4222ef:	push   cs
  4222f0:	sbb    edi,ecx
  4222f2:	sti    
  4222f3:	xlat   BYTE PTR ds:[ebx]
  4222f4:	xor    dh,bl
  4222f6:	cwde   
  4222f7:	jp     0x4222b1
  4222f9:	mov    dh,0xd0
  4222fb:	sub    eax,0xd2729820
  422300:	push   ecx
  422301:	dec    esp
  422302:	cmp    edi,DWORD PTR [esi+0x52c44258]
  422308:	adc    al,0xd2
  42230a:	push   0xffffffbd
  42230c:	icebp  
  42230d:	cmp    dl,dl
  42230f:	dec    eax
  422310:	in     eax,0x92
  422312:	aad    0xa8
  422314:	mov    eax,ds:0x4a77118a
  422319:	mov    al,BYTE PTR [edi]
  42231b:	call   0xdec:0x616979f3
  422322:	inc    edi
  422323:	fsub   QWORD PTR [ecx-0x426e721f]
  422329:	jno    0x422335
  42232b:	or     DWORD PTR [ecx],ebx
  42232d:	xor    BYTE PTR [eax+0x6a],ah
  422330:	cli    
  422331:	lock xchg ebp,eax
  422333:	dec    eax
  422334:	int    0x9
  422336:	mov    ch,0x36
  422338:	lahf   
  422339:	dec    ebp
  42233a:	push   ebx
  42233b:	adc    eax,0x77275c83
  422340:	hlt    
  422341:	(bad)  
  422342:	pop    edx
  422343:	pop    es
  422344:	jno    0x422352
  422346:	mov    ebx,0xf183d158
  42234b:	ror    DWORD PTR [edi-0x64],1
  42234e:	icebp  
  42234f:	cs push esp
  422351:	retf   
  422352:	or     al,bl
  422354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422355:	jbe    0x422322
  422357:	push   cs
  422358:	mov    bh,0xb
  42235a:	inc    edi
  42235b:	rcr    BYTE PTR [esi+0x1fc6fce],0x37
  422362:	push   esp
  422363:	add    edi,DWORD PTR [edi]
  422365:	jmp    0xfab1ae56
  42236a:	ja     0x422375
  42236c:	dec    ecx
  42236d:	std    
  42236e:	jbe    0x422340
  422370:	sub    ebp,DWORD PTR [esi-0x598f2eab]
  422376:	sub    al,BYTE PTR [eax]
  422378:	xchg   ecx,eax
  422379:	inc    ecx
  42237a:	sub    BYTE PTR [edi],dl
  42237c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42237d:	xchg   ebx,eax
  42237e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42237f:	cmp    BYTE PTR [edi+0x18],dh
  422382:	cmp    al,0x7a
  422384:	call   0x7dcd:0x26792a24
  42238b:	lahf   
  42238c:	and    BYTE PTR [edx],0x8
  42238f:	aam    0x8
  422391:	sahf   
  422392:	retf   0x8c0b
  422395:	ds pop ds
  422397:	arpl   WORD PTR [ecx],cx
  422399:	scas   eax,DWORD PTR es:[edi]
  42239a:	push   cs
  42239b:	idiv   BYTE PTR [ecx]
  42239d:	dec    ecx
  42239e:	mov    dh,0xbf
  4223a0:	sbb    al,BYTE PTR ds:0x3d4fcd3a
  4223a6:	jecxz  0x4223a9
  4223a8:	jb     0x422342
  4223aa:	mov    ds:0x81d82f33,eax
  4223af:	js     0x422337
  4223b1:	adc    eax,0x9fb0166d
  4223b6:	mov    ds:0xe7d493d8,eax
  4223bb:	cli    
  4223bc:	and    DWORD PTR [esi],edx
  4223be:	push   ebp
  4223bf:	push   0xa07392c8
  4223c4:	fist   WORD PTR [ecx+0x8]
  4223c7:	dec    esp
  4223c8:	add    eax,0x15218b7e
  4223cd:	mov    BYTE PTR [ebx+0x15],cl
  4223d0:	test   esi,esp
  4223d2:	fdiv   st,st(1)
  4223d4:	shl    DWORD PTR [edx+ebp*4-0x2e2a6d97],0xb4
  4223dc:	iret   
  4223dd:	sbb    al,0x50
  4223df:	cdq    
  4223e0:	dec    ebx
  4223e1:	dec    edx
  4223e2:	xor    edx,DWORD PTR [eax+esi*1+0x3e]
  4223e6:	fcomp  DWORD PTR [ebx+0x62]
  4223e9:	mov    esi,0x3006d8d
  4223ee:	dec    edi
  4223ef:	popf   
  4223f0:	cwde   
  4223f1:	and    ecx,edi
  4223f3:	or     DWORD PTR [ecx],edi
  4223f5:	xchg   BYTE PTR [ecx+ebp*8],ch
  4223f8:	jmp    0x4816:0x206a887a
  4223ff:	adc    al,0x7
  422401:	enter  0xf214,0xd5
  422405:	ins    DWORD PTR es:[edi],dx
  422406:	scas   al,BYTE PTR es:[edi]
  422407:	cmc    
  422408:	push   cs
  422409:	leave  
  42240a:	js     0x4223ea
  42240c:	rcr    BYTE PTR [eax],0xfa
  42240f:	or     bl,bh
  422411:	pop    edi
  422412:	pop    ss
  422413:	pop    esi
  422414:	adc    bl,0x16
  422417:	jnp    0x422417
  422419:	loopne 0x42241f
  42241b:	data16 jns 0x42247f
  42241e:	push   eax
  42241f:	xor    edi,DWORD PTR [ebp+0x54776056]
  422425:	dec    edx
  422426:	fmul   QWORD PTR [eax-0x4c]
  422429:	(bad)  
  42242a:	stos   DWORD PTR es:[edi],eax
  42242b:	push   ebp
  42242c:	pushf  
  42242d:	push   eax
  42242e:	outs   dx,BYTE PTR ds:[esi]
  42242f:	pop    ebp
  422430:	dec    ebx
  422431:	inc    edx
  422432:	sbb    DWORD PTR [edi-0x40],0x2fd838c8
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	popf   
  42243b:	aas    
  42243c:	daa    
  42243d:	aam    0x44
  42243f:	or     esp,DWORD PTR [esi-0x3]
  422442:	xor    eax,0xf75c7569
  422447:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422449:	sub    edi,DWORD PTR [edx+eiz*2+0x7]
  42244d:	je     0x42249a
  42244f:	mov    dl,0x89
  422451:	and    eax,0x51d61a59
  422456:	stos   BYTE PTR es:[edi],al
  422457:	adc    ebx,esp
  422459:	mov    ss,WORD PTR [ebp-0x3987564d]
  42245f:	jo     0x4224a6
  422461:	rol    DWORD PTR [edx+edi*2+0x0],1
  422465:	arpl   WORD PTR [edi+0x23],bp
  422468:	popf   
  422469:	retf   
  42246a:	test   eax,0x4e324b0d
  42246f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422470:	and    BYTE PTR es:[eax],ch
  422473:	xor    BYTE PTR [esp+eax*2],bh
  422476:	adc    BYTE PTR [eax-0x2c0e7c5e],0x6
  42247d:	loopne 0x4224e1
  42247f:	or     al,0x70
  422481:	inc    edx
  422482:	mov    bl,bh
  422484:	and    eax,0x749f43ca
  422489:	fisubr DWORD PTR [edx]
  42248b:	xchg   BYTE PTR [eax],dl
  42248d:	loop   0x4224df
  42248f:	jl     0x4224ae
  422491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422492:	shr    DWORD PTR [eax+0x34],1
  422495:	rol    al,1
  422497:	dec    ecx
  422498:	xchg   ebp,eax
  422499:	sti    
  42249a:	scas   eax,DWORD PTR es:[edi]
  42249b:	rcr    DWORD PTR [ebx-0x1e],cl
  42249e:	cmp    al,0x69
  4224a0:	es leave 
  4224a2:	jge    0x4224b0
  4224a4:	fidivr DWORD PTR [eax+0x30db3032]
  4224aa:	dec    edx
  4224ab:	nop
  4224ac:	cli    
  4224ad:	mov    ecx,DWORD PTR [edi+eiz*8+0x68]
  4224b1:	xor    eax,0xeea5d90c
  4224b6:	mov    eax,0x5f3d1e3b
  4224bb:	pop    edi
  4224bc:	xchg   ebp,eax
  4224bd:	cmp    eax,0xbede5d89
  4224c2:	fld    st(0)
  4224c4:	xchg   edi,eax
  4224c5:	arpl   cx,bx
  4224c7:	adc    eax,0xd6509f4d
  4224cc:	jle    0x42253c
  4224ce:	icebp  
  4224cf:	int    0x51
  4224d1:	xor    BYTE PTR [ebp-0x2f220606],bl
  4224d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224d8:	xchg   ecx,eax
  4224d9:	sbb    ebp,DWORD PTR [eax-0x4e]
  4224dc:	neg    edi
  4224de:	jp     0x422482
  4224e0:	cs es aam 0xbe
  4224e4:	jbe    0x422524
  4224e6:	pushf  
  4224e7:	push   ss
  4224e8:	mov    ds:0x8bd54232,eax
  4224ed:	jmp    0x4721cd8d
  4224f2:	xchg   ecx,eax
  4224f3:	cmp    ah,dl
  4224f5:	xchg   esi,eax
  4224f6:	and    eax,DWORD PTR [edi+eax*4+0x5eec117f]
  4224fd:	enter  0x1dbd,0x6
  422501:	push   edi
  422502:	or     BYTE PTR [edi+eax*1],ah
  422505:	dec    ebp
  422506:	cmp    eax,0xb19b60e7
  42250b:	mov    ds:0x50ca6285,eax
  422510:	aad    0xd2
  422512:	js     0x4224ce
  422514:	ret    
  422515:	call   0xfb85:0xa4f45224
  42251c:	out    0x17,al
  42251e:	cld    
  42251f:	mov    eax,DWORD PTR [edi]
  422521:	cmp    DWORD PTR [esi+ebx*8],ebx
  422524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422525:	push   eax
  422526:	xchg   ebp,eax
  422527:	sub    BYTE PTR [edx],ah
  422529:	xchg   edx,eax
  42252a:	dec    esi
  42252b:	ror    BYTE PTR [esi+0x22d51fb4],0xca
  422532:	adc    ebp,esp
  422534:	push   esi
  422535:	sbb    eax,0x22e48abb
  42253a:	outs   dx,DWORD PTR ds:[esi]
  42253b:	loop   0x422528
  42253d:	jecxz  0x422566
  42253f:	or     eax,0xba134897
  422544:	mov    bl,BYTE PTR [edi+eax*2-0x39]
  422548:	mov    bh,0x23
  42254a:	cmc    
  42254b:	push   edx
  42254c:	pop    DWORD PTR [ecx-0x6a]
  42254f:	out    0xbb,eax
  422551:	sub    DWORD PTR [eax+0x2f41a270],edi
  422557:	test   eax,0x9caf0c47
  42255c:	adc    dl,bl
  42255e:	mov    bh,0x41
  422560:	add    BYTE PTR [eax+eax*1-0x69],bh
  422564:	push   ebx
  422565:	(bad)  
  422566:	fmul   QWORD PTR [eax+esi*8-0x66]
  42256a:	dec    eax
  42256b:	jge    0x42252d
  42256d:	sub    al,0x25
  42256f:	dec    esi
  422570:	adc    esi,eax
  422572:	daa    
  422573:	jbe    0x422596
  422575:	ins    BYTE PTR es:[edi],dx
  422576:	adc    DWORD PTR [ebx-0x1b],edi
  422579:	xchg   ebx,eax
  42257a:	jnp    0x422573
  42257c:	push   ds
  42257d:	test   DWORD PTR [ebx-0x57],ebp
  422580:	sti    
  422581:	adc    BYTE PTR [ebp-0x3c23f5e8],dl
  422587:	pop    edx
  422588:	add    eax,0xc9cccabe
  42258d:	jecxz  0x4225b2
  42258f:	pop    esi
  422590:	jle    0x42254e
  422592:	push   0x50
  422594:	and    al,0x7e
  422596:	inc    edx
  422597:	lahf   
  422598:	mov    bh,BYTE PTR [edi+0x70ad9e53]
  42259e:	xlat   BYTE PTR ds:[ebx]
  42259f:	dec    esi
  4225a0:	mov    eax,ds:0x7eeb0be6
  4225a5:	lods   eax,DWORD PTR ds:[esi]
  4225a6:	enter  0xe4ca,0xec
  4225aa:	push   cs
  4225ab:	and    al,0xff
  4225ad:	mov    al,ds:0x1769807
  4225b2:	or     DWORD PTR [ebp+ebx*2-0x2a],0x6ba4e0a3
  4225ba:	cmp    eax,DWORD PTR [esi+0x57bd5ca]
  4225c0:	shl    DWORD PTR [ecx-0x29597efe],0x30
  4225c7:	mov    edi,0xa9111de3
  4225cc:	(bad)  
  4225cd:	in     al,dx
  4225ce:	jbe    0x4225a0
  4225d0:	dec    edi
  4225d1:	and    BYTE PTR [edx+0x1ed4417],dh
  4225d7:	adc    ah,ch
  4225d9:	pop    ebp
  4225da:	push   eax
  4225db:	int3   
  4225dc:	std    
  4225dd:	mov    WORD PTR ds:[ebx],es
  4225e0:	adc    DWORD PTR [ebx-0x2c6b4ac9],ebp
  4225e6:	sbb    ebp,0x9c08b16c
  4225ec:	popa   
  4225ed:	pop    DWORD PTR [ebp+0x40]
  4225f0:	int    0xa3
  4225f2:	mov    dh,0x58
  4225f4:	mov    al,ds:0xb66c866e
  4225f9:	sar    BYTE PTR [edi-0x32],cl
  4225fc:	fxch   st(4)
  4225fe:	jmp    0xa3711c14
  422603:	aaa    
  422604:	sbb    eax,0x4568fc06
  422609:	outs   dx,BYTE PTR ds:[esi]
  42260a:	cmp    eax,0xec4cba3d
  42260f:	add    al,0xf2
  422611:	and    ah,BYTE PTR [edx]
  422613:	mov    ds:0x127a5e4,eax
  422618:	add    ebp,DWORD PTR [ecx-0x3756ad94]
  42261e:	xor    DWORD PTR [eax],esi
  422620:	mov    bh,0x72
  422622:	test   al,0xdf
  422624:	out    dx,al
  422625:	xchg   ebp,eax
  422626:	mov    cl,0xe
  422628:	cdq    
  422629:	xor    ch,BYTE PTR [edx+ebx*4]
  42262c:	and    DWORD PTR [edi],0x553366cd
  422632:	daa    
  422633:	cld    
  422634:	pop    edx
  422635:	mov    ds:0xc58583dd,al
  42263a:	and    ah,BYTE PTR [edx-0x5a]
  42263d:	mov    cl,0xc6
  42263f:	fs scas eax,DWORD PTR es:[edi]
  422641:	mov    edx,DWORD PTR [esi+0x51]
  422644:	mov    dl,BYTE PTR [ebp+ebp*1+0x26]
  422648:	mov    DWORD PTR [edi+0x7a246ed6],ecx
  42264e:	and    DWORD PTR [esi+0xd00634b],0xd07d6882
  422658:	push   esi
  422659:	mov    ds:0x91aaa26b,al
  42265e:	into   
  42265f:	push   esp
  422660:	(bad)  
  422661:	mov    edi,0x90f528e3
  422666:	xchg   edx,eax
  422667:	std    
  422668:	xor    eax,0x2bce7745
  42266d:	retf   
  42266e:	arpl   WORD PTR [edi],di
  422670:	lods   eax,DWORD PTR ds:[esi]
  422671:	repnz adc DWORD PTR [eax-0xaf63bea],eax
  422678:	test   al,0x48
  42267a:	gs call 0x26c0ffa2
  422680:	jl     0x42262e
  422682:	and    DWORD PTR [ecx+0x72],ebx
  422685:	xor    eax,0xd2f98981
  42268a:	push   edi
  42268b:	pop    es
  42268c:	and    eax,0x4a6560cf
  422691:	jns    0x4226fb
  422693:	xor    ebx,DWORD PTR [edx*8-0x3437ebd1]
  42269a:	aad    0x48
  42269c:	sub    DWORD PTR [eax-0x34],edx
  42269f:	ror    ecx,cl
  4226a1:	outs   dx,BYTE PTR ds:[esi]
  4226a2:	cmp    al,0xaf
  4226a4:	loopne 0x422686
  4226a6:	lods   al,BYTE PTR ds:[esi]
  4226a7:	or     DWORD PTR [eax-0x6c],edx
  4226aa:	fs jno 0x42270e
  4226ad:	cmp    BYTE PTR [edi+edx*1-0xe8f0c8f],bh
  4226b4:	jecxz  0x4226c3
  4226b6:	mov    BYTE PTR [ebp+0x612fc283],ah
  4226bc:	mov    al,0x69
  4226be:	loope  0x4226ce
  4226c0:	inc    esp
  4226c1:	xchg   dh,dl
  4226c3:	jb     0x422666
  4226c5:	xchg   DWORD PTR [ecx+edi*8],edi
  4226c8:	jp     0x4226c9
  4226ca:	int    0x48
  4226cc:	jno    0x422714
  4226ce:	or     eax,0x8f2564d0
  4226d4:	(bad)
  4226d8:	mov    esp,0xf734c097
  4226dd:	dec    DWORD PTR [esi]
  4226df:	cwde   
  4226e0:	and    edi,DWORD PTR [ecx]
  4226e2:	int    0x23
  4226e4:	mov    al,0xb8
  4226e6:	sbb    ebx,ecx
  4226e8:	js     0x42268a
  4226ea:	sub    eax,DWORD PTR [edx]
  4226ec:	data16 xor dh,BYTE PTR [edi]
  4226ef:	addr16 pop esp
  4226f1:	fidivr WORD PTR [eax]
  4226f3:	adc    al,0x1a
  4226f5:	call   0x21c582f9
  4226fa:	stos   BYTE PTR es:[edi],al
  4226fb:	push   cs
  4226fc:	lock lock add ch,BYTE PTR [eax+0x21]
  422701:	sbb    esp,DWORD PTR [ecx]
  422703:	jb     0x4226a8
  422705:	pop    ecx
  422706:	mov    ebx,0x2c28300d
  42270b:	adc    edx,edx
  42270d:	(bad)  
  42270e:	test   al,0x47
  422710:	jns    0x4226bf
  422712:	sub    al,0x28
  422714:	loop   0x422751
  422716:	dec    ebx
  422717:	push   0x4d
  422719:	cmp    eax,DWORD PTR [edi]
  42271b:	push   esi
  42271c:	dec    esi
  42271d:	push   ds
  42271e:	xor    BYTE PTR [edx-0x6e],bl
  422721:	gs test al,0xf5
  422724:	ins    DWORD PTR es:[edi],dx
  422725:	sub    edx,0x33
  422728:	push   ecx
  422729:	fidiv  DWORD PTR [eax-0x66d44b9e]
  42272f:	loopne 0x422718
  422731:	sahf   
  422732:	mov    eax,0x82c7e893
  422737:	stc    
  422738:	xor    esi,DWORD PTR [esi]
  42273a:	adc    al,0x58
  42273c:	test   DWORD PTR [eax+esi*8-0x61],ecx
  422740:	test   ecx,edi
  422742:	(bad)  
  422743:	lea    edx,[edi+0x18]
  422746:	xchg   edx,eax
  422747:	in     eax,0xd2
  422749:	(bad)  
  42274a:	push   ds
  42274b:	sbb    ch,BYTE PTR [edi]
  42274d:	sbb    esp,esi
  42274f:	shr    edx,0x16
  422752:	sub    BYTE PTR [ebx+0x3075b8ea],dl
  422758:	sbb    DWORD PTR ds:0xf8a16a3a,ebp
  42275e:	add    esi,esp
  422760:	ror    DWORD PTR [edi+0x6cd567f8],0xb7
  422767:	xchg   edx,eax
  422768:	loope  0x4227c3
  42276a:	and    al,0x7b
  42276c:	loopne 0x4227e2
  42276e:	mov    esp,0xc579cb9
  422773:	leave  
  422774:	push   ss
  422775:	jbe    0x422785
  422777:	sbb    edx,DWORD PTR [eax-0x3b44d7f8]
  42277d:	and    eax,0xec64cb7b
  422782:	call   0x389e:0xc377d347
  422789:	popf   
  42278a:	out    0xb7,eax
  42278c:	loop   0x422720
  42278e:	js     0x422716
  422790:	cs jge 0x42275d
  422793:	loop   0x4227cb
  422795:	icebp  
  422796:	dec    esi
  422797:	mov    al,ds:0x6cb028e1
  42279c:	mov    eax,0x4df54d05
  4227a1:	xor    BYTE PTR ds:0xe14b5add,dh
  4227a7:	dec    eax
  4227a8:	aas    
  4227a9:	cmp    al,0x90
  4227ab:	mov    ch,0x5a
  4227ad:	cwde   
  4227ae:	sbb    cl,ah
  4227b0:	sar    DWORD PTR [edx],0xc0
  4227b3:	pop    edx
  4227b4:	push   esp
  4227b5:	jns    0x422834
  4227b7:	mov    dl,0x92
  4227b9:	mov    edi,0x2c3d65b3
  4227be:	push   ds
  4227bf:	in     eax,dx
  4227c0:	clc    
  4227c1:	ins    DWORD PTR es:[edi],dx
  4227c2:	xchg   BYTE PTR [eax],ch
  4227c4:	out    0xb5,eax
  4227c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227c7:	out    dx,eax
  4227c8:	loopne 0x4227f9
  4227ca:	mov    cl,0xcf
  4227cc:	aas    
  4227cd:	sbb    al,0x9a
  4227cf:	daa    
  4227d0:	imul   ebp,edi,0x57
  4227d3:	push   ebx
  4227d4:	add    bh,al
  4227d6:	cli    
  4227d7:	rcl    bh,cl
  4227d9:	xor    al,0x5f
  4227db:	pop    esi
  4227dc:	popa   
  4227dd:	mov    ecx,0xaf402b3c
  4227e2:	dec    edi
  4227e3:	std    
  4227e4:	popf   
  4227e5:	cdq    
  4227e6:	dec    ebx
  4227e7:	outs   dx,DWORD PTR ds:[esi]
  4227e8:	fisttp DWORD PTR [ebp-0x4c]
  4227eb:	mov    esp,0x66ac1a26
  4227f0:	jo     0x4227f9
  4227f2:	xor    al,0xff
  4227f4:	lahf   
  4227f5:	dec    edx
  4227f6:	call   0x87793ee0
  4227fb:	nop
  4227fc:	cs hlt 
  4227fe:	mov    al,ds:0xcece6d50
  422803:	adc    DWORD PTR [esi+0x14d2c8b2],ecx
  422809:	retf   
  42280a:	std    
  42280b:	mov    cl,0x65
  42280d:	mov    es,WORD PTR es:[esi-0xe]
  422811:	lods   eax,DWORD PTR ds:[esi]
  422812:	push   DWORD PTR [edi+edx*1]
  422815:	fcomp  QWORD PTR [ecx-0x5b]
  422818:	stc    
  422819:	out    dx,al
  42281a:	mov    al,ds:0x6f13c8bf
  42281f:	inc    edx
  422820:	ror    edx,1
  422822:	and    eax,0xa64a921d
  422827:	jae    0x42286c
  422829:	retf   0xc9db
  42282c:	jno    0x4227d4
  42282e:	push   0x3d
  422830:	loop   0x4227de
  422832:	xor    al,0x2e
  422834:	call   0xcfab5cba
  422839:	sub    eax,esi
  42283b:	int3   
  42283c:	jo     0x422800
  42283e:	mov    cl,0xba
  422840:	es repz push eax
  422843:	ins    BYTE PTR es:[edi],dx
  422844:	xchg   ecx,eax
  422845:	retf   0x7033
  422848:	adc    eax,DWORD PTR [edi]
  42284a:	mov    cl,0xbe
  42284c:	cwde   
  42284d:	push   cs
  42284e:	retf   0x942d
  422851:	xchg   BYTE PTR [ecx-0x5b],ah
  422854:	dec    edi
  422855:	inc    ebx
  422856:	sbb    BYTE PTR [esi+0x544efbeb],dl
  42285c:	sub    al,bl
  42285e:	pop    edx
  42285f:	adc    DWORD PTR [eax+ebx*2-0x1ea84426],edi
  422866:	sbb    eax,DWORD PTR [ebp+0x42460fa7]
  42286c:	bound  eax,QWORD PTR [edx+eiz*2+0x11]
  422870:	or     bl,BYTE PTR [ebp-0x53]
  422873:	jbe    0x42282d
  422875:	in     al,0x12
  422877:	aad    0x8f
  422879:	(bad)
  42287d:	les    ecx,FWORD PTR [edx]
  42287f:	inc    edi
  422880:	add    eax,0xfb7151c2
  422885:	jge    0x422814
  422887:	cdq    
  422888:	repz cmp al,0x44
  42288b:	int3   
  42288c:	repz jne 0x42282c
  42288f:	adc    edx,eax
  422891:	add    edi,esp
  422893:	aaa    
  422894:	mov    ah,0xce
  422896:	jmp    0x9897:0x1bd9228
  42289d:	xor    dh,dh
  42289f:	leave  
  4228a0:	xchg   edi,eax
  4228a1:	inc    esi
  4228a2:	inc    ebp
  4228a3:	or     BYTE PTR [esi+edx*4-0x44ca7193],0x46
  4228ab:	unpckhps xmm3,xmm0
  4228ae:	push   ss
  4228af:	xchg   ebp,eax
  4228b0:	enter  0x71bf,0x63
  4228b4:	mov    bh,0x57
  4228b6:	mov    ebp,0x1cdd9b8f
  4228bb:	sbb    DWORD PTR [edi],0x1752cb98
  4228c1:	sub    edx,DWORD PTR [ecx-0x51]
  4228c4:	xchg   edx,eax
  4228c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228c6:	mul    esi
  4228c8:	push   ebp
  4228c9:	pop    ecx
  4228ca:	or     DWORD PTR [eax],0xe4d470c2
  4228d0:	jp     0x422879
  4228d2:	out    dx,eax
  4228d3:	sbb    DWORD PTR [ecx-0x5247f707],edx
  4228d9:	sbb    dh,bl
  4228db:	nop
  4228dc:	mov    esi,0x3747e8d7
  4228e1:	mov    edi,edx
  4228e3:	test   al,0xf0
  4228e5:	xchg   esi,ecx
  4228e7:	xor    edx,DWORD PTR [eax+ebp*1+0x9]
  4228eb:	std    
  4228ec:	popf   
  4228ed:	push   esi
  4228ee:	xchg   ebp,eax
  4228ef:	add    BYTE PTR [edi+0xa24ad68],bh
  4228f5:	mov    eax,0xb4034dc6
  4228fa:	test   eax,ebx
  4228fc:	pop    ebx
  4228fd:	lods   eax,DWORD PTR ds:[esi]
  4228fe:	in     eax,dx
  4228ff:	mov    edx,0x2b6d7f08
  422904:	mov    eax,DWORD PTR [edx]
  422906:	aaa    
  422907:	push   ecx
  422908:	xor    eax,ecx
  42290a:	mov    edx,0xffcd8d11
  42290f:	sub    edx,eax
  422911:	mov    eax,DWORD PTR [ebp-0x1c]
  422914:	jmp    0x422972
  422919:	mov    edx,DWORD PTR [ebp+0x14]
  42291c:	xor    DWORD PTR [eax],edx
  42291e:	mov    DWORD PTR ds:0x42a17b,0x16
  422928:	cmp    DWORD PTR ds:0x42a17b,0x0
  42292f:	je     0x42295d
  422935:	cmp    DWORD PTR ds:0x42a17b,0x25
  42293c:	jbe    0x42295d
  422942:	jmp    0x42294d
  422947:	call   DWORD PTR ds:0x42a2a7
  42294d:	mov    eax,ds:0x42a17b
  422952:	dec    eax
  422953:	mov    ds:0x42a17b,eax
  422958:	jmp    0x422928
  42295d:	mov    eax,DWORD PTR [ebp-0x4]
  422960:	mov    DWORD PTR [ebp-0x1c],eax
  422963:	mov    eax,DWORD PTR [ebp+0x10]
  422966:	xor    eax,ecx
  422968:	mov    edx,0xffcd8d11
  42296d:	sub    edx,eax
  42296f:	mov    eax,DWORD PTR [ebp-0x1c]
  422972:	add    DWORD PTR [eax],edx
  422974:	mov    eax,DWORD PTR [ebp-0x4]
  422977:	mov    edx,DWORD PTR [ebp-0x8]
  42297a:	add    edx,DWORD PTR [eax]
  42297c:	mov    DWORD PTR [ebp-0x8],edx
  42297f:	mov    eax,DWORD PTR [ebp+0xc]
  422982:	mov    edx,DWORD PTR [ebp+0xc]
  422985:	xor    edx,ecx
  422987:	xor    eax,ecx
  422989:	lea    eax,[eax+edx*1+0x64e5de]
  422990:	mov    edx,DWORD PTR [ebp+0xc]
  422993:	xor    edx,ecx
  422995:	add    edx,esi
  422997:	imul   eax,edx
  42299a:	mov    edx,DWORD PTR [ebp+0xc]
  42299d:	xor    edx,ecx
  42299f:	sub    edx,eax
  4229a1:	mov    eax,DWORD PTR [ebp-0x4]
  4229a4:	add    edx,esi
  4229a6:	cmp    DWORD PTR [eax],edx
  4229a8:	mov    eax,DWORD PTR [ebp-0x4]
  4229ab:	jg     0x4229c8
  4229b1:	mov    DWORD PTR [ebp-0x1c],eax
  4229b4:	mov    eax,DWORD PTR [ebp+0x10]
  4229b7:	xor    eax,ecx
  4229b9:	mov    edx,0xffcd8d11
  4229be:	sub    edx,eax
  4229c0:	mov    eax,DWORD PTR [ebp-0x1c]
  4229c3:	jmp    0x4229cf
  4229c8:	mov    edx,DWORD PTR [ebp+0x10]
  4229cb:	xor    edx,ecx
  4229cd:	add    edx,esi
  4229cf:	add    DWORD PTR [eax],edx
  4229d1:	mov    eax,DWORD PTR [ebp-0x8]
  4229d4:	mov    edx,DWORD PTR [ebp-0x10]
  4229d7:	mov    eax,DWORD PTR [eax]
  4229d9:	xor    edx,ecx
  4229db:	add    edx,0x3272ee
  4229e1:	not    edx
  4229e3:	and    eax,edx
  4229e5:	mov    DWORD PTR [ebp-0x4],eax
  4229e8:	movsx  eax,BYTE PTR [eax+0x1]
  4229ec:	cdq    
  4229ed:	add    eax,ebx
  4229ef:	adc    edx,0xffffffff
  4229f2:	xor    eax,edi
  4229f4:	xor    edx,0x0
  4229f7:	cmp    eax,0x70941e0f
  4229fc:	jne    0x42380a
  422a02:	cmp    edx,0xffffffff
  422a05:	jne    0x42380a
  422a0b:	mov    eax,DWORD PTR [ebp-0x4]
  422a0e:	movsx  eax,BYTE PTR [eax]
  422a11:	cdq    
  422a12:	add    eax,ebx
  422a14:	adc    edx,0xffffffff
  422a17:	xor    eax,edi
  422a19:	xor    edx,0x0
  422a1c:	cmp    eax,0x70941e1c
  422a21:	jne    0x42380a
  422a27:	cmp    edx,0xffffffff
  422a2a:	je     0x423821
  422a30:	jmp    0x42380a
  422a35:	sbb    dl,dh
  422a37:	pop    edx
  422a38:	rcl    DWORD PTR [eax-0x6348682f],1
  422a3e:	jae    0x422a78
  422a40:	mov    edi,ebx
  422a42:	ins    DWORD PTR es:[edi],dx
  422a43:	lods   al,BYTE PTR ds:[esi]
  422a44:	call   0x7abbb550
  422a49:	lds    esi,FWORD PTR [ebp+0x7a]
  422a4c:	jp     0x422ac3
  422a4e:	out    dx,al
  422a4f:	fadd   st,st(7)
  422a51:	pop    edi
  422a52:	in     eax,dx
  422a53:	(bad)  
  422a54:	lahf   
  422a55:	sbb    al,0x16
  422a57:	iret   
  422a58:	fldenv [edx-0x575db176]
  422a5e:	cmp    BYTE PTR [eax+0x2],cl
  422a61:	out    dx,al
  422a62:	fsubr  DWORD PTR [esi-0x647e6220]
  422a68:	jbe    0x422ad6
  422a6a:	sub    BYTE PTR [ebp-0x61],ah
  422a6d:	xchg   esp,eax
  422a6e:	adc    dh,BYTE PTR [esi+0x8]
  422a71:	push   eax
  422a72:	sbb    ah,BYTE PTR [esi]
  422a74:	cmc    
  422a75:	test   DWORD PTR [ebx+esi*1],eax
  422a78:	pop    esi
  422a79:	fnstenv [eax-0x7b2eb99b]
  422a7f:	xor    al,0x92
  422a81:	xor    ebp,DWORD PTR [esi+0x1f]
  422a84:	std    
  422a85:	mov    BYTE PTR [eax-0xd334804],dh
  422a8b:	jno    0x422ab6
  422a8d:	sub    al,0x44
  422a8f:	push   esp
  422a90:	icebp  
  422a91:	pop    esi
  422a92:	mov    ebx,ebp
  422a94:	je     0x422a31
  422a96:	and    DWORD PTR [ebp+0x143f89cd],ebx
  422a9c:	push   edx
  422a9d:	push   cs
  422a9e:	call   0x5880:0x1ab0b514
  422aa5:	mov    ?,WORD PTR [edx+ebp*1]
  422aa8:	test   eax,0x23b1328d
  422aad:	ins    BYTE PTR es:[edi],dx
  422aae:	sub    ch,BYTE PTR [eax+0x22]
  422ab1:	adc    eax,0x69ccd779
  422ab6:	push   ebx
  422ab7:	ret    0x1c91
  422aba:	lods   eax,DWORD PTR ds:[esi]
  422abb:	mov    es,WORD PTR [ebp-0x35c47000]
  422ac1:	jle    0x422a8d
  422ac3:	mov    WORD PTR [eax+0x1d29116d],gs
  422ac9:	push   cs
  422aca:	or     BYTE PTR [esi],cl
  422acc:	sub    BYTE PTR [ebp-0x24ea42fd],bl
  422ad2:	xchg   ebx,eax
  422ad3:	sub    edi,DWORD PTR [eax+ebx*1]
  422ad6:	js     0x422b37
  422ad8:	clc    
  422ad9:	js     0x422aa7
  422adb:	(bad)  
  422add:	jle    0x422a80
  422adf:	bound  edi,QWORD PTR [bx]
  422ae2:	not    BYTE PTR [edx+0x2c]
  422ae5:	sahf   
  422ae6:	(bad)  
  422ae7:	test   eax,0xbf07f6b2
  422aec:	and    ecx,ebp
  422aee:	cmp    BYTE PTR [ebp-0xb],cl
  422af1:	sti    
  422af2:	cs popa 
  422af4:	bound  ebp,QWORD PTR [ecx-0x5a]
  422af7:	mov    ch,0xae
  422af9:	je     0x422b21
  422afb:	out    dx,al
  422afc:	xchg   DWORD PTR [edx],ebp
  422afe:	rol    bh,0xfb
  422b01:	xchg   esp,eax
  422b02:	push   ss
  422b03:	rol    BYTE PTR ds:0xc999f23a,cl
  422b09:	push   edx
  422b0a:	sbb    ch,BYTE PTR [edx-0x40]
  422b0d:	jno    0x422a9b
  422b0f:	sub    dh,BYTE PTR [esi+0x6b]
  422b12:	or     cl,BYTE PTR [ebx]
  422b14:	mov    al,ds:0x1b14817
  422b19:	or     eax,0x84859dec
  422b1e:	cmp    al,0x7e
  422b20:	divps  xmm0,XMMWORD PTR [ebx+0x78]
  422b24:	outs   dx,DWORD PTR ds:[esi]
  422b25:	push   esi
  422b26:	xor    DWORD PTR [edx+0x9],0x1a
  422b2a:	ret    0xc71b
  422b2d:	in     eax,0x1
  422b2f:	iret   
  422b30:	mov    edx,DWORD PTR [edx-0x30]
  422b33:	daa    
  422b34:	mov    ebx,0x21f6da37
  422b39:	leave  
  422b3a:	addr16 icebp 
  422b3c:	jnp    0x422bac
  422b3e:	inc    edx
  422b3f:	inc    ecx
  422b40:	sbb    cl,ch
  422b42:	stc    
  422b43:	jg     0x422b19
  422b45:	xchg   edx,eax
  422b46:	iret   
  422b47:	dec    esp
  422b48:	sub    al,0x9b
  422b4a:	nop
  422b4b:	mov    ecx,0xf1fccad6
  422b50:	mov    BYTE PTR [eax-0x5753812],dh
  422b56:	pop    ebp
  422b57:	scas   eax,DWORD PTR es:[edi]
  422b58:	ret    
  422b59:	xor    ebx,DWORD PTR [edi+0x15b7adc1]
  422b5f:	dec    ebp
  422b60:	adc    BYTE PTR [eax-0x22],0xf7
  422b64:	push   ebp
  422b65:	lock push edi
  422b67:	sbb    BYTE PTR [ebp-0x32],cl
  422b6a:	test   DWORD PTR [ecx+0x59],eax
  422b6d:	pop    ecx
  422b6e:	pop    edx
  422b6f:	push   edx
  422b70:	inc    edi
  422b72:	retf   0x362
  422b75:	cmp    ch,0x8
  422b78:	(bad)  
  422b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b7b:	pop    ebx
  422b7c:	jae    0x422b98
  422b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b7f:	ja     0x422bdd
  422b81:	xchg   esp,eax
  422b82:	xchg   esi,eax
  422b83:	mov    al,0xe9
  422b85:	push   ebx
  422b86:	inc    ebp
  422b87:	out    dx,al
  422b88:	jne    0x422b7d
  422b8a:	popa   
  422b8b:	int    0xf9
  422b8d:	pop    ds
  422b8e:	sbb    edi,DWORD PTR [edi+0xb]
  422b91:	out    0xea,al
  422b93:	lods   eax,DWORD PTR ds:[esi]
  422b94:	mov    eax,ds:0x46572e8
  422b99:	fist   DWORD PTR [ecx+0x67]
  422b9c:	mov    esp,eax
  422b9e:	in     al,dx
  422b9f:	fstp   QWORD PTR [ebx-0x74]
  422ba2:	add    eax,0x849aa34e
  422ba7:	int3   
  422ba8:	out    dx,al
  422ba9:	and    al,0xe
  422bab:	jb     0x422bd4
  422bad:	retf   0x53b4
  422bb0:	(bad)  [eax+0xb75f5a8]
  422bb6:	cmp    al,0x8f
  422bb8:	test   eax,0x999a8917
  422bbd:	out    dx,al
  422bbe:	ja     0x422b7d
  422bc0:	sbb    eax,0xce1d09ad
  422bc5:	or     eax,0x21b8fdb9
  422bca:	enter  0x2e9b,0xa0
  422bce:	push   0xffffffc5
  422bd0:	ret    0xf05c
  422bd3:	ins    DWORD PTR es:[edi],dx
  422bd4:	shr    DWORD PTR [eax-0x1f],1
  422bd7:	cdq    
  422bd8:	and    eax,DWORD PTR [esi]
  422bda:	test   DWORD PTR [edi+0x54],0x43f8620d
  422be1:	sbb    ah,BYTE PTR [edx+0xa881bed]
  422be7:	cmc    
  422be8:	mov    ch,0xa5
  422bea:	pop    edi
  422beb:	(bad)  
  422bed:	cmp    esi,DWORD PTR [eax-0x7ea9f4e8]
  422bf3:	sbb    eax,0x6ff7d810
  422bf8:	in     eax,0x30
  422bfa:	icebp  
  422bfb:	pop    edx
  422bfc:	mov    bl,0x53
  422bfe:	cmp    DWORD PTR [eax+eiz*2+0x51375bda],ebp
  422c05:	xchg   ebx,eax
  422c06:	in     al,dx
  422c07:	cmp    DWORD PTR [edx],edi
  422c09:	aam    0x1
  422c0b:	jmp    0x5e729e53
  422c10:	out    0xc6,al
  422c12:	jb     0x422c91
  422c14:	test   BYTE PTR [ecx],bh
  422c16:	pop    ecx
  422c17:	xor    eax,0xb830eab1
  422c1c:	ss mov bh,0x3a
  422c1f:	jg     0x422c35
  422c21:	cmp    ebx,DWORD PTR [esi+0x19dbc49a]
  422c27:	mov    DWORD PTR [ebp-0x71],edi
  422c2a:	mov    WORD PTR [eax-0x65dd6b1b],ss
  422c30:	mov    edi,edi
  422c32:	dec    edx
  422c33:	and    ch,BYTE PTR [ecx-0x1f]
  422c36:	ret    0x548b
  422c39:	push   esi
  422c3a:	(bad)  
  422c3b:	imul   edi,DWORD PTR [edi-0x73],0xb6f52bb4
  422c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c43:	rol    edx,1
  422c45:	lock dec edx
  422c47:	sbb    al,0x9
  422c49:	sub    edx,esi
  422c4b:	cmp    ebx,eax
  422c4d:	dec    esi
  422c4e:	je     0x422c87
  422c50:	mov    dh,0x97
  422c52:	dec    edi
  422c53:	mov    edi,0x91a39ce6
  422c58:	mov    bh,0xff
  422c5a:	aaa    
  422c5b:	mov    al,0x67
  422c5d:	(bad)  
  422c5e:	ror    DWORD PTR [ebx-0x7a],cl
  422c61:	jp     0x422c34
  422c63:	setae  BYTE PTR ds:0xc3caf07b
  422c6a:	adc    eax,0xe574065c
  422c6f:	push   eax
  422c70:	cli    
  422c71:	fidiv  DWORD PTR [edx-0x33]
  422c74:	mov    edi,0xa33bfc29
  422c79:	sbb    BYTE PTR [ebx+0x18],al
  422c7c:	cs dec esi
  422c7e:	aad    0xb1
  422c80:	cmp    BYTE PTR [edx],dl
  422c82:	scas   al,BYTE PTR es:[edi]
  422c83:	(bad)  
  422c84:	jl     0x422cc1
  422c86:	push   es
  422c87:	fild   DWORD PTR [edx+0x5ba737a1]
  422c8d:	sbb    BYTE PTR [esp+edx*1],cl
  422c90:	shr    BYTE PTR [ebp-0x5e],1
  422c93:	imul   ebp,DWORD PTR [ebx+ebx*8-0x2e336e1],0x5e618a44
  422c9e:	xor    esp,ecx
  422ca0:	int    0x2b
  422ca2:	clc    
  422ca3:	mov    ch,BYTE PTR ds:0xfe700361
  422ca9:	sbb    edi,DWORD PTR [ebx]
  422cab:	xor    BYTE PTR fs:[eax+eax*2+0x12da4f5e],0x87
  422cb4:	mov    DWORD PTR [ecx],eax
  422cb6:	inc    esi
  422cb7:	mov    dl,0x3f
  422cb9:	stos   DWORD PTR es:[edi],eax
  422cba:	jb     0x422c67
  422cbc:	mov    al,ds:0xf3dd064b
  422cc1:	out    0xb5,al
  422cc3:	shl    BYTE PTR ds:0xf10bac4a,1
  422cc9:	ja     0x422d1c
  422ccb:	mov    WORD PTR [edx],fs
  422ccd:	add    eax,0x62f387c1
  422cd2:	scas   eax,DWORD PTR es:[edi]
  422cd3:	cmp    cl,BYTE PTR [edx-0x6aea2594]
  422cd9:	(bad)  [edx-0x36]
  422cdc:	in     eax,dx
  422cdd:	jmp    0xa17d70bf
  422ce2:	pop    ds
  422ce3:	sbb    al,BYTE PTR [edx-0x77f6be3a]
  422ce9:	lods   eax,DWORD PTR ds:[esi]
  422cea:	push   edx
  422ceb:	cmp    al,0x12
  422ced:	retf   
  422cee:	in     al,dx
  422cef:	push   ss
  422cf0:	pop    esi
  422cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cf2:	lea    edx,[eax]
  422cf4:	xor    al,0x47
  422cf6:	xor    al,0xe4
  422cf8:	or     al,0xa4
  422cfa:	mov    ebp,0x6c7d30c7
  422cff:	push   esi
  422d00:	sbb    BYTE PTR [edx],ah
  422d02:	mov    esp,0x6ec5d94c
  422d07:	fcomp  st(3)
  422d09:	rcl    DWORD PTR [edx],1
  422d0b:	retf   
  422d0c:	sub    eax,0x15c92de3
  422d11:	in     al,0x5
  422d13:	loope  0x422d79
  422d15:	pop    edx
  422d16:	lods   al,BYTE PTR ds:[esi]
  422d17:	stos   DWORD PTR es:[edi],eax
  422d18:	jb     0x422d52
  422d1a:	push   es
  422d1b:	in     eax,0xd5
  422d1d:	add    BYTE PTR [ecx-0x41ed3d91],bl
  422d23:	xchg   edi,eax
  422d24:	lahf   
  422d25:	je     0x422d21
  422d27:	sub    ebp,esi
  422d29:	xchg   ebx,eax
  422d2a:	cmp    BYTE PTR [ebp-0x3f],ch
  422d2d:	rol    BYTE PTR [edx-0x60],cl
  422d30:	fsub   QWORD PTR [esi+0x6e56c031]
  422d36:	mov    ebx,DWORD PTR [edx-0x1fe58b36]
  422d3c:	out    dx,al
  422d3d:	pusha  
  422d3e:	xlat   BYTE PTR ds:[ebx]
  422d3f:	xor    DWORD PTR [eax+0x697725de],ebp
  422d45:	into   
  422d46:	and    DWORD PTR [ebp-0x61],edi
  422d49:	shr    BYTE PTR [esi-0x72c90bd5],cl
  422d4f:	pop    es
  422d50:	pop    ebp
  422d51:	imul   edi,DWORD PTR [ecx+0x1146b047],0xf8779314
  422d5b:	sar    BYTE PTR [ebx-0x68],cl
  422d5e:	outs   dx,DWORD PTR ds:[esi]
  422d5f:	aas    
  422d60:	jmp    0x481e:0xed9bf495
  422d67:	adc    cl,BYTE PTR [esi-0xd]
  422d6a:	cmp    edi,DWORD PTR [ebx+eiz*1]
  422d6d:	push   eax
  422d6e:	mov    al,0xa8
  422d70:	leave  
  422d71:	mov    al,ds:0xa6e39a7c
  422d76:	mov    cl,0xec
  422d78:	pop    ebp
  422d79:	or     edx,edi
  422d7b:	xchg   ecx,eax
  422d7c:	xchg   BYTE PTR [ebx],ch
  422d7e:	scas   eax,DWORD PTR es:[edi]
  422d7f:	pop    es
  422d80:	cmp    BYTE PTR [eax-0x32523e49],bh
  422d86:	mov    dl,0x5c
  422d88:	xor    BYTE PTR [eax+0x36],ch
  422d8b:	mov    eax,0x70a14ed0
  422d90:	sub    cl,BYTE PTR [ebx]
  422d92:	sub    eax,0x12bd9960
  422d97:	add    eax,0x72a577b3
  422d9c:	push   ebx
  422d9d:	xor    al,0xbc
  422d9f:	ins    BYTE PTR es:[edi],dx
  422da0:	push   ecx
  422da1:	mov    al,0x77
  422da3:	fdivr  st(3),st
  422da5:	mov    esp,0xc3183767
  422daa:	test   DWORD PTR [eax],edi
  422dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dad:	push   ds
  422dae:	ror    DWORD PTR [edx+0x4ef35b9b],1
  422db4:	repz adc esi,DWORD PTR [edi-0x69292bb2]
  422dbb:	cli    
  422dbc:	ficom  WORD PTR [edx]
  422dbe:	cmp    eax,ebp
  422dc0:	mov    bh,BYTE PTR [edi]
  422dc2:	inc    ebx
  422dc3:	mov    ds:0xca8422dc,al
  422dc8:	mov    bh,0xdd
  422dca:	clc    
  422dcb:	dec    ebp
  422dcc:	mov    ebp,DWORD PTR [ebp+0x3f35f34f]
  422dd2:	loopne 0x422e23
  422dd4:	pop    ebp
  422dd5:	adc    al,0x68
  422dd7:	test   al,0x5c
  422dd9:	test   eax,0x9fd6f10d
  422dde:	sti    
  422ddf:	mov    esi,0xe89fbd5a
  422de4:	neg    edx
  422de6:	ret    0x445e
  422de9:	mov    ch,0xd3
  422deb:	gs jae 0x422e34
  422dee:	jns    0x422e5a
  422df0:	sub    ebp,DWORD PTR [esi]
  422df2:	jno    0x422dbb
  422df4:	stos   DWORD PTR es:[edi],eax
  422df5:	dec    edx
  422df6:	mov    ch,0xff
  422df8:	call   0x59d9:0x60eae716
  422dff:	mov    bl,0xa4
  422e01:	inc    ebp
  422e02:	enter  0x7781,0xcb
  422e06:	sub    ebx,DWORD PTR [esi-0x1d90eade]
  422e0c:	mov    esp,0x3951bb
  422e11:	div    BYTE PTR [eax]
  422e13:	(bad)  ds:0xc8b51e99
  422e19:	rcl    BYTE PTR [esi],0x3a
  422e1c:	cmp    eax,0xde35c7e5
  422e21:	push   esi
  422e22:	push   eax
  422e23:	inc    ecx
  422e24:	mov    bh,0x2b
  422e26:	add    esp,DWORD PTR [eax+0x65]
  422e29:	stos   DWORD PTR es:[edi],eax
  422e2a:	ins    DWORD PTR es:[edi],dx
  422e2b:	inc    edi
  422e2c:	mov    eax,ds:0xc78f3503
  422e31:	ret    
  422e32:	into   
  422e33:	scas   al,BYTE PTR es:[edi]
  422e34:	addr16 jmp 0x3bf7:0x533d59e4
  422e3c:	cdq    
  422e3d:	stos   BYTE PTR es:[edi],al
  422e3e:	es aam 0xb4
  422e41:	cdq    
  422e42:	in     eax,0xad
  422e44:	jmp    0xe4d6:0xc16086f7
  422e4b:	arpl   WORD PTR [edx+0xea39c0],bp
  422e51:	or     BYTE PTR [edx-0x4371b7c3],bh
  422e57:	pushf  
  422e58:	ficomp WORD PTR [edi]
  422e5a:	mov    WORD PTR [ecx+edi*4-0x26],?
  422e5e:	mov    ecx,0x6afd6218
  422e63:	mov    al,ds:0x9ac9b5f6
  422e68:	(bad)  
  422e69:	jecxz  0x422e6d
  422e6b:	pop    ebx
  422e6c:	or     al,0xdd
  422e6e:	lock adc dh,BYTE PTR [ebx+0x78]
  422e72:	bsf    esi,DWORD PTR [ecx+ecx*4-0x5838069f]
  422e7a:	xor    ch,bl
  422e7c:	stc    
  422e7d:	push   ecx
  422e7e:	pop    esi
  422e7f:	xchg   edx,eax
  422e80:	pop    ebp
  422e81:	loopne 0x422ec1
  422e83:	mov    dh,0xb3
  422e85:	leave  
  422e86:	push   cs
  422e87:	push   esp
  422e88:	xchg   ebx,eax
  422e89:	out    dx,eax
  422e8a:	pop    ecx
  422e8b:	dec    edx
  422e8d:	pop    ss
  422e8e:	sub    eax,0x218fed90
  422e93:	mov    ch,0xf2
  422e95:	call   0x415c831c
  422e9a:	sbb    BYTE PTR [di],dh
  422e9d:	inc    ecx
  422e9e:	jle    0x422f11
  422ea0:	mov    edx,0x510ef22
  422ea5:	xchg   ebx,eax
  422ea6:	rcl    ebp,1
  422ea8:	(bad)  
  422ea9:	repnz (bad) 
  422eab:	xchg   ebp,eax
  422eac:	dec    eax
  422ead:	ins    BYTE PTR es:[edi],dx
  422eae:	pop    edx
  422eaf:	jge    0x422e62
  422eb1:	test   al,0x0
  422eb3:	sbb    BYTE PTR ds:0x16ff5472,dh
  422eb9:	popa   
  422eba:	push   es
  422ebb:	fld    QWORD PTR ss:[ecx]
  422ebe:	lods   al,BYTE PTR ds:[esi]
  422ebf:	call   0xb120:0x553ed7c8
  422ec6:	loop   0x422ec0
  422ec8:	hlt    
  422ec9:	jae    0x422eb9
  422ecb:	test   eax,0x629ac4a5
  422ed0:	mov    ds:0x117bacb8,eax
  422ed5:	jno    0x422ecc
  422ed7:	adc    eax,0xca823d25
  422edc:	call   0xf3c2:0x5d9eed7e
  422ee3:	sub    eax,0xf5f56519
  422ee8:	add    BYTE PTR [edx+0x6c],dl
  422eeb:	push   edx
  422eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422eed:	jmp    0x6b5a:0xd53e0d5e
  422ef4:	xor    ecx,DWORD PTR [eax-0x7f]
  422ef7:	repnz pop ebx
  422ef9:	mov    ebx,0x15c5e9c9
  422efe:	lods   eax,DWORD PTR ds:[esi]
  422eff:	lock sbb eax,0x897cdcdd
  422f05:	add    BYTE PTR [ebx-0x7a],ch
  422f08:	sub    cl,0xc3
  422f0b:	mov    esi,0x8d8b8188
  422f10:	adc    BYTE PTR [ebx-0x20],al
  422f13:	(bad)  
  422f14:	int    0xd1
  422f16:	xlat   BYTE PTR ds:[ebx]
  422f17:	cmp    al,0x6e
  422f19:	in     eax,dx
  422f1a:	cmc    
  422f1b:	and    dl,BYTE PTR [ecx]
  422f1d:	xlat   BYTE PTR ds:[ebx]
  422f1e:	rcr    BYTE PTR [eax-0x4e],0x8c
  422f22:	popa   
  422f23:	shr    BYTE PTR [ebx+0x61dc464],0x0
  422f2a:	in     al,0xb6
  422f2c:	cmp    esp,DWORD PTR [ecx-0x28a3a076]
  422f32:	jb     0x422f7e
  422f34:	lods   eax,DWORD PTR ds:[esi]
  422f35:	mov    esi,DWORD PTR [eax]
  422f37:	int    0xea
  422f39:	imul   eax,DWORD PTR [ebp-0x54257c03],0x44741deb
  422f43:	mov    bh,0x8e
  422f45:	dec    edx
  422f46:	pop    esp
  422f47:	cmp    al,0x21
  422f49:	into   
  422f4a:	jns    0x422f29
  422f4c:	push   ecx
  422f4d:	mov    ds:0x72c64c65,al
  422f52:	in     eax,dx
  422f53:	jmp    0xbcae:0x95290f5
  422f5a:	sbb    ebx,DWORD PTR [esi]
  422f5c:	sub    eax,0x875d8c82
  422f61:	sti    
  422f62:	jbe    0x422f84
  422f64:	cs jl  0x422fa1
  422f67:	data16 sbb BYTE PTR [edi+eax*4],0xa6
  422f6c:	(bad)  
  422f6d:	out    dx,al
  422f6e:	sbb    DWORD PTR [edi+0x39f0e214],0x2d41e340
  422f78:	sbb    eax,0xa968599c
  422f7e:	out    0x50,eax
  422f80:	dec    ecx
  422f81:	mov    esi,0xb9f20814
  422f86:	sti    
  422f87:	and    esi,eax
  422f89:	fmulp  st(7),st
  422f8b:	push   ebp
  422f8c:	mov    dl,0xad
  422f8e:	div    DWORD PTR [edi]
  422f90:	jle    0x422f8b
  422f92:	push   esp
  422f93:	jnp    0x422fb6
  422f95:	fbstp  TBYTE PTR [eax+eiz*4-0xbfddfb5]
  422f9c:	rcl    edx,1
  422f9e:	sti    
  422f9f:	out    dx,eax
  422fa0:	ins    DWORD PTR es:[edi],dx
  422fa1:	je     0x422fce
  422fa3:	sub    al,0x28
  422fa5:	(bad)  
  422fa6:	jmp    0xe73777e4
  422fab:	vpunpcklwd ymm5,ymm7,ymm5
  422faf:	pop    edi
  422fb0:	push   0x41
  422fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fb3:	rcl    BYTE PTR [edi],cl
  422fb5:	call   0xbaf9:0x27acfa7a
  422fbc:	fist   DWORD PTR [edx+0x33]
  422fbf:	push   ebp
  422fc0:	int3   
  422fc1:	and    dh,BYTE PTR [ecx]
  422fc3:	mov    WORD PTR [ecx],cs
  422fc5:	fnsave [ecx-0x2c61a906]
  422fcb:	retf   
  422fcc:	add    esi,DWORD PTR [eax]
  422fce:	mov    cl,BYTE PTR [ebx-0x31421b3f]
  422fd4:	adc    al,0xa7
  422fd6:	mov    esp,DWORD PTR [ecx-0x50]
  422fd9:	or     DWORD PTR [ecx*1-0x116910d4],0x7
  422fe1:	pop    esp
  422fe2:	xor    eax,0xf1fb4036
  422fe7:	sub    ch,BYTE PTR [esi]
  422fe9:	dec    esi
  422fea:	jmp    0xbded916
  422fef:	ficomp WORD PTR [eax+edi*1+0x53]
  422ff3:	xchg   ebp,eax
  422ff4:	lahf   
  422ff5:	test   eax,esi
  422ff7:	add    al,BYTE PTR [eax]
  422ff9:	outs   dx,DWORD PTR ds:[esi]
  422ffa:	fwait
  422ffb:	push   DWORD PTR [edx]
  422ffd:	add    edi,ebx
  422fff:	fsubr  DWORD PTR [edi+0x2d906b5c]
  423005:	sub    DWORD PTR [eax+esi*1+0x61],esp
  423009:	mov    cl,0x12
  42300b:	call   0xa3ef:0xacbd70a0
  423012:	ret    
  423013:	pusha  
  423014:	jae    0x422ff0
  423016:	sbb    BYTE PTR [ebp-0x6d],0x93
  42301a:	jnp    0x423073
  42301c:	fnstenv [ecx+0x18]
  42301f:	test   BYTE PTR [esi-0x47],cl
  423022:	clc    
  423023:	loop   0x423028
  423025:	sub    dh,BYTE PTR [ebx+0x51599501]
  42302b:	call   0xa9c1:0x62b1ca45
  423032:	mov    ebx,0x5da75195
  423037:	xchg   edx,eax
  423038:	or     eax,0x359e1d65
  42303d:	adc    al,0x97
  42303f:	xor    al,0x10
  423041:	adc    esp,0xffffffb6
  423044:	add    BYTE PTR [ebx-0x47],dl
  423047:	dec    esi
  423048:	retf   
  423049:	push   ecx
  42304a:	mov    BYTE PTR [edi+0x76],0x44
  42304e:	sub    DWORD PTR [ecx-0x6ce3fb89],edi
  423054:	cmp    eax,eax
  423056:	pop    eax
  423057:	add    dl,BYTE PTR [esi]
  423059:	std    
  42305a:	sub    bl,dh
  42305c:	push   ebx
  42305d:	mov    eax,0xc987c62a
  423062:	ds dec eax
  423064:	xchg   ebx,eax
  423065:	aam    0xc0
  423067:	mov    ah,0x9
  423069:	adc    BYTE PTR [ecx],0x8d
  42306c:	mov    dh,0xe
  42306e:	(bad)  
  42306f:	pop    esp
  423070:	xor    ch,al
  423072:	in     eax,dx
  423073:	push   ds
  423074:	sub    eax,0x60e2900c
  423079:	inc    ebp
  42307a:	ss jo  0x423054
  42307d:	push   0x4c
  42307f:	stos   DWORD PTR es:[edi],eax
  423080:	xlat   BYTE PTR ds:[ebx]
  423081:	out    dx,eax
  423082:	cmp    eax,0xa424d335
  423087:	loope  0x423046
  423089:	pop    ds
  42308a:	lods   al,BYTE PTR ds:[esi]
  42308b:	mov    ch,0xfd
  42308d:	push   0xfffffff2
  42308f:	sub    eax,0xbab7eceb
  423094:	add    DWORD PTR [edi],esp
  423096:	outs   dx,DWORD PTR ds:[esi]
  423097:	mov    eax,ds:0xeace2f42
  42309c:	xor    ebp,DWORD PTR [ecx-0x61]
  42309f:	sahf   
  4230a0:	xchg   esp,eax
  4230a1:	fnstsw WORD PTR [edi]
  4230a3:	pop    es
  4230a4:	pop    esp
  4230a5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4230a7:	mov    dh,0x2c
  4230a9:	test   eax,0x525c8505
  4230ae:	lea    ebp,[eax+0x1d4e4209]
  4230b4:	and    al,BYTE PTR [edx+ecx*1]
  4230b7:	push   es
  4230b8:	adc    cl,cl
  4230ba:	push   edi
  4230bb:	dec    ecx
  4230bc:	jecxz  0x4230d9
  4230be:	stc    
  4230bf:	rol    DWORD PTR [edi-0x51],1
  4230c2:	stc    
  4230c3:	(bad)  
  4230c4:	adc    eax,0xbefce6bf
  4230c9:	pop    ss
  4230ca:	mov    eax,0xf06b1689
  4230cf:	int    0xa8
  4230d1:	mov    ebp,0xd0e3a1c7
  4230d6:	jne    0x4230cc
  4230d8:	jl     0x4230ea
  4230da:	dec    ebp
  4230db:	or     al,0x2e
  4230dd:	pop    eax
  4230de:	loop   0x423151
  4230e0:	aaa    
  4230e1:	gs pop esi
  4230e3:	inc    esp
  4230e4:	adc    ebp,ecx
  4230e6:	cmp    al,0xff
  4230e8:	mov    gs,edi
  4230ea:	sbb    eax,0xae2df5e
  4230ef:	std    
  4230f0:	cs jmp 0x8c19af09
  4230f6:	sub    DWORD PTR [edx],edx
  4230f8:	mov    ecx,0xa2ae4aac
  4230fd:	adc    ch,BYTE PTR [esi]
  4230ff:	sti    
  423100:	fwait
  423101:	adc    DWORD PTR [ecx+0x63],ebx
  423104:	xchg   edx,eax
  423105:	stc    
  423106:	xchg   edx,eax
  423107:	rcl    DWORD PTR [ecx],0x5c
  42310a:	es retf 
  42310c:	mov    ebp,0x40a5a170
  423111:	add    DWORD PTR [eax+0x5c],esp
  423114:	fisub  DWORD PTR ds:0x7dc6ee20
  42311a:	aam    0x56
  42311c:	jp     0x4230d3
  42311e:	adc    ecx,ebx
  423120:	mov    dl,0x9b
  423122:	jecxz  0x423197
  423124:	popf   
  423125:	sub    BYTE PTR [edx-0x28],ch
  423128:	test   DWORD PTR [edi-0xf371d39],esp
  42312e:	(bad)  
  42312f:	pop    ebp
  423130:	daa    
  423131:	hlt    
  423132:	dec    edi
  423133:	jmp    0x423167
  423135:	js     0x4230e9
  423137:	push   es
  423138:	cmp    BYTE PTR [edx],0x2a
  42313b:	shr    BYTE PTR [eax-0x74de6f8a],0x1a
  423142:	call   FWORD PTR [edx-0x208715c3]
  423148:	fldenv [eax-0x26]
  42314b:	xor    edi,ebp
  42314d:	push   ebp
  42314f:	jno    0x42311c
  423151:	shr    ah,0xe6
  423154:	into   
  423155:	mov    ch,0xac
  423157:	ror    cl,1
  423159:	pop    es
  42315a:	jl     0x423189
  42315c:	icebp  
  42315d:	inc    esp
  42315e:	dec    eax
  42315f:	pushf  
  423160:	push   esi
  423161:	or     eax,0xe6280d41
  423166:	pop    ds
  423167:	push   esi
  423168:	fs push ss
  42316a:	bound  eax,QWORD PTR [edx-0x6b]
  42316d:	sbb    dh,BYTE PTR [ebp-0x1994ae9c]
  423173:	mov    ebp,DWORD PTR [ebp+0x5d]
  423176:	pop    ds
  423177:	fdiv   DWORD PTR [edi-0x3df5af01]
  42317d:	hlt    
  42317e:	inc    ecx
  423180:	ret    0xe092
  423183:	addr16 aas 
  423185:	sub    eax,0x3c1289a8
  42318a:	aaa    
  42318b:	imul   edx,edi,0xe4058c5
  423191:	sbb    al,0x53
  423193:	adc    dh,BYTE PTR [edi+0x5b1e1fe]
  423199:	sub    BYTE PTR [edx-0x47f4753d],ch
  42319f:	adc    ecx,DWORD PTR [esi]
  4231a1:	xchg   ebx,eax
  4231a2:	adc    bh,BYTE PTR [edx-0x57a3b9cf]
  4231a8:	or     al,0x3d
  4231aa:	sbb    edx,DWORD PTR [ebp+0x63]
  4231ad:	pop    eax
  4231ae:	iret   
  4231af:	aaa    
  4231b0:	in     eax,0x64
  4231b2:	cmp    DWORD PTR [edi+edx*2],edi
  4231b5:	shr    DWORD PTR [eax],cl
  4231b7:	inc    eax
  4231b8:	icebp  
  4231b9:	(bad)  
  4231ba:	jmp    0x42320f
  4231bc:	or     dh,bh
  4231be:	add    bl,bh
  4231c0:	rcr    BYTE PTR [edi],1
  4231c2:	(bad)
  4231c7:	mov    bh,0x87
  4231c9:	bound  edi,QWORD PTR [edx+ecx*1-0x31b89a7d]
  4231d0:	cdq    
  4231d1:	test   DWORD PTR [ecx],ebp
  4231d3:	(bad)  [eax+0x7b5c1bb2]
  4231d9:	mov    al,ds:0xa97d7d2f
  4231de:	mov    cl,0x9
  4231e0:	sub    ebx,DWORD PTR [edx-0x36]
  4231e3:	ja     0x4231da
  4231e5:	dec    edx
  4231e6:	test   cl,ah
  4231e8:	je     0x4231b3
  4231ea:	imul   DWORD PTR [edx+0x7d31bb5f]
  4231f0:	ja     0x42319b
  4231f2:	cmp    DWORD PTR [esi+eiz*2-0x7b],ebp
  4231f6:	loopne 0x4231af
  4231f8:	call   0x7b855f8e
  4231fd:	xor    ah,dh
  4231ff:	mov    ds:0xcb2f5b03,al
  423204:	jbe    0x4231f2
  423206:	cmp    al,0xa
  423208:	add    BYTE PTR [ebx-0x4e178a0a],ch
  42320e:	lods   eax,DWORD PTR ds:[esi]
  42320f:	mov    eax,0x3c93238
  423214:	push   cs
  423215:	mov    dh,0x99
  423217:	aas    
  423218:	inc    ebp
  423219:	dec    esp
  42321a:	push   ecx
  42321b:	into   
  42321c:	and    esi,DWORD PTR [edx]
  42321e:	add    BYTE PTR [edi-0x134407a9],cl
  423224:	cmp    esp,edi
  423226:	ss int 0xf8
  423229:	and    ebp,ebp
  42322b:	mov    bl,0x2d
  42322d:	mov    ah,0x5b
  42322f:	xlat   BYTE PTR ds:[ebx]
  423230:	mov    edi,0xbeaee9aa
  423235:	popa   
  423236:	adc    DWORD PTR [eax],edx
  423238:	sub    dh,BYTE PTR [edx]
  42323a:	cmp    al,cl
  42323c:	dec    ebp
  42323d:	cmp    DWORD PTR [edx+0x2b],0xda92b2a6
  423244:	addr16 pop eax
  423246:	(bad)  
  423247:	xchg   ecx,eax
  423248:	xor    BYTE PTR [ebp+0x3],ch
  42324b:	and    BYTE PTR [ecx+0x77],ah
  42324e:	js     0x423211
  423250:	data16 and bl,dh
  423253:	dec    ebx
  423254:	out    dx,al
  423255:	sar    BYTE PTR [ecx-0x55ccae4a],cl
  42325b:	inc    ebp
  42325c:	nop
  42325d:	mov    ch,0xb9
  42325f:	ror    DWORD PTR [ebp+ebx*4+0x2f9210c9],cl
  423266:	rol    esp,1
  423268:	mov    bl,0x6b
  42326a:	push   0x6b
  42326c:	inc    ebx
  42326d:	cmp    ch,al
  42326f:	pop    ecx
  423270:	jl     0xf48db4af
  423276:	fisub  DWORD PTR [ebx]
  423278:	or     ch,BYTE PTR [ebx]
  42327a:	aad    0x54
  42327c:	aad    0x24
  42327e:	add    BYTE PTR [edx],0x9c
  423281:	jmp    0x3f9e:0x9c56fdb7
  423288:	psrad  mm2,QWORD PTR [ecx]
  42328b:	jae    0x423256
  42328d:	mov    WORD PTR ds:0x3013b0bf,fs
  423293:	mov    al,ds:0x7a8cf7c9
  423298:	pop    ebp
  423299:	(bad)
  42329e:	in     eax,0x1a
  4232a0:	retf   
  4232a1:	lds    eax,FWORD PTR [eax-0x60f57bb8]
  4232a7:	test   dh,0x51
  4232aa:	jae    0x423316
  4232ac:	fwait
  4232ad:	in     al,dx
  4232ae:	daa    
  4232af:	bound  esp,QWORD PTR [ebx]
  4232b1:	cmp    eax,0xdabad5b7
  4232b6:	sub    edi,edi
  4232b8:	jne    0x42323c
  4232ba:	sub    eax,0x1f181ff9
  4232bf:	jle    0x4232a0
  4232c1:	js     0x423316
  4232c3:	inc    esi
  4232c4:	xchg   ch,cl
  4232c6:	cwde   
  4232c7:	jge    0x423284
  4232c9:	and    BYTE PTR [eax],ah
  4232cb:	mov    ch,0x35
  4232cd:	and    esi,esi
  4232cf:	sub    esi,DWORD PTR [esp+eax*1]
  4232d2:	and    al,0xbb
  4232d4:	addr16 out dx,al
  4232d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d7:	sub    dl,dl
  4232d9:	push   es
  4232da:	neg    DWORD PTR [ebx-0x2e8a0176]
  4232e0:	push   edi
  4232e1:	das    
  4232e2:	pop    ds
  4232e3:	add    DWORD PTR [esi-0x501ace4b],esp
  4232e9:	fiadd  DWORD PTR [edx]
  4232eb:	xchg   ebx,eax
  4232ec:	mov    dh,0x86
  4232ee:	add    DWORD PTR [ebx+0xe],0x2b
  4232f2:	xchg   ebx,eax
  4232f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232f4:	lahf   
  4232f5:	sbb    eax,0x9dd4a02c
  4232fa:	lods   al,BYTE PTR ds:[esi]
  4232fb:	cmp    al,0xd0
  4232fd:	scas   eax,DWORD PTR es:[edi]
  4232fe:	test   al,0x6e
  423300:	scas   al,BYTE PTR es:[edi]
  423301:	dec    edx
  423302:	mov    eax,ds:0xfed40fe8
  423307:	ret    0xf7e3
  42330a:	sbb    BYTE PTR [esi],dl
  42330c:	ss sbb al,0xb6
  42330f:	clc    
  423310:	mov    ds:0xd2206101,eax
  423315:	cmp    edi,DWORD PTR [ebp-0x6b40954a]
  42331b:	gs cmc 
  42331d:	mov    WORD PTR [ecx],?
  42331f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423320:	push   esi
  423321:	icebp  
  423322:	(bad)  
  423323:	outs   dx,DWORD PTR ds:[esi]
  423324:	dec    ebp
  423325:	xor    esp,DWORD PTR fs:[ebp+edx*1-0x78fd9c67]
  42332d:	outs   dx,DWORD PTR ds:[esi]
  42332e:	aas    
  42332f:	inc    ebp
  423330:	je     0x423355
  423332:	fwait
  423333:	push   ss
  423334:	mov    eax,0x8681974a
  423339:	scas   eax,DWORD PTR es:[edi]
  42333a:	(bad)  
  42333b:	dec    edx
  42333c:	inc    esp
  42333d:	out    dx,eax
  42333e:	imul   ebx,DWORD PTR [eax],0x5c65918c
  423344:	pop    esp
  423345:	xchg   ebp,eax
  423346:	stc    
  423347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423348:	sbb    BYTE PTR [esi+eax*4],ch
  42334b:	xchg   BYTE PTR [ecx],dh
  42334d:	das    
  42334e:	mov    ds:0xe715d784,al
  423353:	fs loop 0x4233b3
  423356:	adc    BYTE PTR [edi],dl
  423358:	mov    dl,bl
  42335a:	div    DWORD PTR [esi]
  42335c:	mov    ebp,0x4f869af4
  423361:	test   al,0xc7
  423363:	xchg   edi,eax
  423364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423365:	ins    DWORD PTR es:[edi],dx
  423366:	lods   eax,DWORD PTR ds:[esi]
  423367:	push   ebp
  423368:	repnz mov ds:0xa999e1ea,eax
  42336e:	push   esi
  42336f:	jecxz  0x4232fb
  423371:	lea    ebp,[edi+0x54]
  423374:	pop    ds
  423375:	adc    ebp,edx
  423377:	stc    
  423378:	dec    esp
  423379:	sub    eax,0x308ff02f
  42337e:	mov    ah,0xd5
  423380:	call   0x58d:0x6a40ab4b
  423387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423388:	jmp    0x16f9:0x714b307b
  42338f:	dec    ebx
  423390:	addr16 dec ebp
  423392:	fcomp  QWORD PTR [esi-0x115c85be]
  423398:	int    0xe2
  42339a:	mov    ds:0xaa62d15c,al
  42339f:	push   esi
  4233a0:	add    ah,ch
  4233a2:	or     ebx,DWORD PTR [esp+ecx*8+0x649f1a3]
  4233a9:	inc    esp
  4233aa:	jmp    0x94338a6b
  4233af:	dec    ecx
  4233b0:	sub    edx,DWORD PTR [edx]
  4233b2:	pop    edi
  4233b3:	adc    eax,0xd23bc0c7
  4233b8:	dec    ebp
  4233b9:	mov    esi,0x9958ebef
  4233be:	stos   BYTE PTR es:[edi],al
  4233bf:	pop    esi
  4233c0:	loop   0x42334f
  4233c2:	out    0xed,al
  4233c4:	iret   
  4233c5:	pop    ss
  4233c6:	xchg   BYTE PTR [ebx-0x2f],bl
  4233c9:	sbb    bl,dh
  4233cb:	rcr    BYTE PTR [edx],1
  4233cd:	loope  0x42342e
  4233cf:	call   0x86f0a788
  4233d4:	out    0x38,eax
  4233d6:	add    DWORD PTR [ebx+eax*1],esp
  4233d9:	mov    ebp,0x2ced6ff3
  4233de:	jb     0x42338a
  4233e0:	xchg   ebx,eax
  4233e1:	push   edi
  4233e2:	add    al,0x76
  4233e4:	sub    BYTE PTR [ebx],al
  4233e6:	mov    ds:0x13708a91,eax
  4233eb:	cmp    BYTE PTR [eax+edx*2],al
  4233ee:	loopne 0x423386
  4233f0:	call   0x3a08:0xe8f64901
  4233f7:	dec    edx
  4233f8:	xor    BYTE PTR ds:0x8dca74be,bh
  4233fe:	sbb    ch,BYTE PTR [ebx-0x75f5a977]
  423404:	repnz sbb DWORD PTR [edx],ecx
  423407:	idiv   DWORD PTR [esi+ebp*1-0x4e0e4def]
  42340e:	ins    BYTE PTR es:[edi],dx
  42340f:	adc    BYTE PTR [edi],cl
  423411:	fsub   st,st(0)
  423413:	imul   BYTE PTR [eax-0x7]
  423416:	pusha  
  423417:	in     al,dx
  423418:	pop    edx
  423419:	out    0x45,eax
  42341b:	mov    bl,0x7e
  42341d:	pop    es
  42341e:	mov    bl,0x67
  423420:	sti    
  423421:	jl     0x423498
  423423:	mov    ah,0x1f
  423425:	in     al,dx
  423426:	pushf  
  423427:	(bad)  [edi-0x6a25d758]
  42342d:	pop    ebx
  42342e:	mov    dh,0x3e
  423430:	add    ecx,ebx
  423432:	arpl   WORD PTR [ecx],bp
  423434:	inc    esp
  423435:	sar    BYTE PTR cs:[edx-0x4],cl
  423439:	dec    eax
  42343a:	cwde   
  42343b:	scas   eax,DWORD PTR es:[edi]
  42343c:	sahf   
  42343d:	push   eax
  42343e:	mov    dl,0x91
  423440:	adc    al,0xb5
  423442:	div    DWORD PTR [edx-0x7c]
  423445:	push   esp
  423446:	retf   0x2b57
  423449:	aam    0xa0
  42344b:	push   es
  42344c:	es dec ebp
  42344e:	addr16 or al,0xe
  423451:	push   ebx
  423452:	stc    
  423453:	add    BYTE PTR [ebp+0x4f44006c],cl
  423459:	xor    edi,ebx
  42345b:	add    ah,BYTE PTR [edi-0x4b437e5f]
  423461:	dec    edi
  423462:	loop   0x423449
  423464:	mov    eax,0x10664d4f
  423469:	adc    BYTE PTR [edx],bh
  42346b:	cs xchg esi,eax
  42346d:	xor    bh,0xfc
  423470:	push   DWORD PTR [ebp-0x64]
  423473:	jle    0x4233fc
  423475:	fstp   QWORD PTR [ebp+edi*4-0x1e47bef6]
  42347c:	xchg   edi,eax
  42347d:	div    DWORD PTR [ebx+ebx*2-0x66]
  423481:	jp     0x423484
  423483:	sub    edx,DWORD PTR [edx]
  423485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423486:	push   edi
  423487:	fst    st(1)
  423489:	sub    al,0xb1
  42348b:	xchg   ebx,eax
  42348c:	push   eax
  42348d:	jg     0x4234ad
  42348f:	fsubr  st,st(4)
  423491:	ror    ah,cl
  423493:	pop    ebp
  423494:	push   ebp
  423495:	out    0x4f,al
  423497:	push   edx
  423498:	jg     0x4234f6
  42349a:	mov    cl,0xe
  42349c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42349e:	cli    
  42349f:	push   ss
  4234a0:	les    ebp,FWORD PTR [ebp+eiz*8+0x3]
  4234a4:	or     eax,0x2037329b
  4234a9:	cmp    eax,0x916bd2d
  4234ae:	jmp    0x53a935f0
  4234b3:	xlat   BYTE PTR ds:[ebx]
  4234b4:	jne    0x423452
  4234b6:	mov    ebx,0xb923c46b
  4234bb:	and    dl,bh
  4234bd:	mov    eax,0x4172d11d
  4234c2:	test   eax,0x6576e111
  4234c7:	rol    DWORD PTR [edx],0x94
  4234ca:	bound  esi,QWORD PTR [edx-0x2ef6f9ec]
  4234d0:	adc    eax,0xb1bad134
  4234d5:	or     eax,0x1f37955f
  4234da:	and    esi,DWORD PTR [ebp+0x45]
  4234dd:	in     eax,dx
  4234de:	es aas 
  4234e0:	lds    ebp,FWORD PTR [eax+0x39e1f451]
  4234e6:	jo     0x423541
  4234e8:	push   edx
  4234e9:	(bad)  
  4234ea:	loop   0x423477
  4234ec:	pushf  
  4234ed:	xchg   ecx,eax
  4234ee:	(bad)  
  4234ef:	mov    bh,cl
  4234f1:	pop    ss
  4234f2:	jae    0x4234ff
  4234f4:	jno    0x4234a6
  4234f6:	addr16 nop
  4234f8:	call   0xbc0f98e0
  4234fd:	pop    ss
  4234fe:	jp     0x4234ba
  423500:	dec    esi
  423501:	mov    DWORD PTR [edi+0x3d733557],ebp
  423507:	aaa    
  423508:	je     0x423521
  42350a:	jmp    0x70cba988
  42350f:	je     0x4234c3
  423511:	fwait
  423512:	aad    0xbb
  423514:	push   esp
  423515:	and    DWORD PTR [ebx],0x4e
  423518:	sbb    BYTE PTR [ecx+eiz*1+0x3ce1193d],0x78
  423520:	pop    edi
  423521:	out    dx,al
  423522:	jecxz  0x42356f
  423524:	inc    eax
  423525:	fcomp  DWORD PTR [ebp-0x68]
  423528:	in     eax,0x62
  42352a:	cmp    eax,0x79717cb5
  42352f:	push   esi
  423530:	int3   
  423531:	xlat   BYTE PTR ds:[ebx]
  423532:	cs ja  0x4234d0
  423535:	adc    DWORD PTR [ebx],edx
  423537:	inc    esi
  423538:	sub    BYTE PTR [edi],cl
  42353a:	inc    ecx
  42353b:	mov    BYTE PTR [ebp-0x57],dl
  42353e:	in     eax,dx
  42353f:	sbb    dh,BYTE PTR [ecx-0x5e4f875a]
  423545:	and    al,0x13
  423547:	ret    0xf33e
  42354a:	push   edx
  42354b:	int    0x40
  42354d:	xor    al,0xf7
  42354f:	aad    0x88
  423551:	neg    DWORD PTR [ebx+ebx*4-0x24]
  423555:	and    eax,0xa89fc34e
  42355a:	xor    edi,esi
  42355c:	mov    cs,edi
  42355e:	push   es
  42355f:	xchg   esi,eax
  423560:	adc    al,0xe7
  423562:	xor    eax,DWORD PTR ds:0xb9002614
  423568:	jmp    0x571f:0xa72eb8de
  42356f:	js     0x42350f
  423571:	adc    al,0x44
  423573:	and    al,0xba
  423575:	xchg   ebp,edx
  423577:	outs   dx,DWORD PTR ds:[esi]
  423578:	mov    dh,0x1c
  42357a:	test   al,0x9
  42357c:	jae    0x423530
  42357e:	jb     0x423569
  423580:	sub    ah,ch
  423582:	std    
  423583:	adc    cl,al
  423585:	sahf   
  423586:	cmp    DWORD PTR [edi-0x72a05377],edi
  42358c:	mov    al,0x44
  42358e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42358f:	jmp    0x423561
  423591:	mov    esi,0x15d91e21
  423596:	mov    BYTE PTR [ebx+eiz*2],dl
  423599:	outs   dx,DWORD PTR ds:[esi]
  42359a:	xchg   DWORD PTR [edx+esi*4+0x5d],eax
  42359e:	sub    ebp,edi
  4235a0:	push   ebp
  4235a1:	aas    
  4235a2:	imul   esi,DWORD PTR [ecx-0x75ed81c0],0x4318b494
  4235ac:	arpl   WORD PTR [ecx-0x6547b19f],di
  4235b2:	inc    eax
  4235b3:	je     0x423624
  4235b5:	jbe    0x423576
  4235b7:	div    BYTE PTR [ebx]
  4235b9:	pop    edx
  4235ba:	retf   0xb425
  4235bd:	and    ebp,eax
  4235bf:	cmp    al,0x74
  4235c1:	add    eax,0x66a618c0
  4235c6:	in     al,0xe0
  4235c8:	pop    es
  4235c9:	mov    edx,0x7c133172
  4235ce:	xchg   ebx,ebx
  4235d0:	popf   
  4235d1:	pop    es
  4235d2:	ror    DWORD PTR [eax+ecx*4-0x65893cd7],1
  4235d9:	adc    esi,edx
  4235db:	add    ah,dl
  4235dd:	jg     0x4235fe
  4235df:	addr16 dec ecx
  4235e1:	xchg   DWORD PTR [ecx],eax
  4235e3:	pop    esi
  4235e4:	lds    esi,FWORD PTR ds:0xfc30f2b4
  4235ea:	imul   esi,DWORD PTR [ecx+edx*1-0x62],0xffffffa1
  4235ef:	rcr    DWORD PTR [edi+ecx*1+0x49],0xd3
  4235f4:	mov    bh,0x74
  4235f6:	stos   DWORD PTR es:[edi],eax
  4235f7:	inc    ebp
  4235f8:	aad    0x1a
  4235fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235fb:	fadd   QWORD PTR [edx+eax*8-0x32]
  4235ff:	fwait
  423600:	pop    eax
  423601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423602:	dec    ecx
  423603:	lahf   
  423604:	dec    ebx
  423605:	mov    dh,0x58
  423607:	call   0xb05f:0x67c03836
  42360e:	sub    ecx,DWORD PTR [edi+0x36]
  423611:	pop    eax
  423612:	lods   eax,DWORD PTR ds:[esi]
  423613:	add    DWORD PTR [edi-0x80],edi
  423616:	test   bh,bh
  423618:	out    dx,al
  423619:	hlt    
  42361a:	iret   
  42361b:	or     DWORD PTR [edi+0x7a],0x7a
  42361f:	outs   dx,DWORD PTR ds:[esi]
  423620:	js     0x4235b1
  423622:	pop    esi
  423623:	fs xchg edi,eax
  423625:	ds pop edx
  423627:	sar    DWORD PTR [ecx-0x153fb056],cl
  42362d:	les    edx,FWORD PTR [esi+0x65]
  423630:	clc    
  423631:	xchg   edi,eax
  423632:	adc    eax,ebp
  423634:	outs   dx,DWORD PTR ds:[esi]
  423635:	mov    ds:0xa7873d3b,al
  42363a:	fwait
  42363b:	cmp    eax,0x2f8c4e5e
  423640:	sbb    dh,BYTE PTR [edi]
  423642:	hlt    
  423643:	jo     0x423691
  423645:	je     0x4236a0
  423647:	outs   dx,BYTE PTR ds:[esi]
  423648:	jmp    0x4235e0
  42364a:	mov    esp,0x347741dd
  42364f:	cmp    DWORD PTR [ecx],edi
  423651:	lds    esp,FWORD PTR [ebp-0x27]
  423654:	add    dl,ch
  423656:	pop    ebx
  423657:	(bad)
  42365b:	scas   eax,DWORD PTR es:[edi]
  42365c:	mov    ebp,DWORD PTR [ebp+0x67]
  42365f:	ret    
  423660:	push   edi
  423661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423662:	(bad)  
  423663:	jge    0x4235fd
  423665:	push   0x46d5e2e
  42366a:	sub    BYTE PTR [ebx-0xe],dl
  42366d:	ins    BYTE PTR es:[edi],dx
  42366e:	pop    ecx
  42366f:	sti    
  423670:	pop    eax
  423671:	repz test al,0x33
  423674:	and    eax,0x4c23697
  423679:	dec    ecx
  42367a:	cmp    cl,BYTE PTR ss:[ebx-0x4e787f7c]
  423681:	cmp    BYTE PTR [eax-0x3c],ah
  423684:	enter  0x8827,0x2f
  423688:	(bad)  fs:[ecx+0x39]
  42368c:	sub    bl,ah
  42368e:	cmp    al,0x68
  423690:	lods   eax,DWORD PTR ds:[esi]
  423691:	sar    DWORD PTR [ebp-0x17429ef1],cl
  423697:	jge    0x4236a7
  423699:	mov    ecx,0x7ca0d5e1
  42369e:	push   0x42
  4236a0:	call   0xa0eb:0x8c23033e
  4236a7:	jmp    0x1396:0xb7989553
  4236ae:	std    
  4236af:	push   esp
  4236b0:	aad    0xdb
  4236b2:	dec    ebx
  4236b3:	or     BYTE PTR [ecx-0xf],al
  4236b6:	mov    ah,0xfb
  4236b8:	adc    BYTE PTR [ebp+0x6b3f223e],ch
  4236be:	sti    
  4236bf:	or     BYTE PTR [esi+0x7410d214],0x56
  4236c6:	scas   eax,DWORD PTR es:[edi]
  4236c7:	nop
  4236c8:	push   esp
  4236c9:	sub    DWORD PTR [esi-0x48],0x69
  4236cd:	mov    DWORD PTR [edx+ecx*8-0x5eadb75],0x7d5b3a89
  4236d8:	add    BYTE PTR [esi],bl
  4236da:	inc    ecx
  4236db:	xor    al,0x39
  4236dd:	les    eax,FWORD PTR ds:0xc2b2d43
  4236e3:	mov    fs,WORD PTR [edx+eiz*4-0x1a]
  4236e7:	cdq    
  4236e8:	xor    BYTE PTR [edx-0xe],0xdb
  4236ec:	and    ah,dh
  4236ee:	call   0x4dc7:0x86f38c1c
  4236f5:	sbb    al,0xf3
  4236f7:	pop    ss
  4236f8:	iret   
  4236f9:	mov    eax,0x839442d6
  4236fe:	es mov ebp,0x73ef02d4
  423704:	or     al,0x2f
  423706:	jge    0x423784
  423708:	mov    al,0xe4
  42370a:	inc    ecx
  42370b:	inc    esp
  42370c:	push   esi
  42370d:	pop    ds
  42370e:	or     al,0x8b
  423710:	dec    esi
  423711:	popa   
  423712:	in     eax,dx
  423713:	ror    DWORD PTR [edx+edi*1+0x660e6998],0xb9
  42371b:	mov    al,0x90
  42371d:	iret   
  42371e:	cwde   
  42371f:	mov    edx,0xf0e29071
  423724:	lea    edi,[ecx+0xf]
  423727:	push   cs
  423728:	lds    esp,FWORD PTR [eax+eax*1+0x15]
  42372c:	in     al,0x85
  42372e:	cli    
  42372f:	inc    ebx
  423730:	shr    BYTE PTR [ecx+eax*2],cl
  423733:	adc    DWORD PTR [edi+ebx*8+0x6e0b3ac7],ebx
  42373a:	outs   dx,BYTE PTR ds:[esi]
  42373b:	jae    0x42376c
  42373d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42373e:	xor    al,0x85
  423740:	sub    bh,BYTE PTR [edi]
  423742:	dec    ecx
  423743:	ins    BYTE PTR es:[edi],dx
  423744:	cli    
  423745:	inc    edx
  423746:	aas    
  423747:	xchg   BYTE PTR [ecx+0x69],dh
  42374a:	dec    ebx
  42374b:	xchg   edx,eax
  42374c:	push   esi
  42374d:	push   0x67
  42374f:	loopne 0x42378d
  423751:	int    0x85
  423753:	jnp    0x423772
  423755:	adc    esp,ebx
  423757:	mov    esi,0x2ee9b5ca
  42375c:	das    
  42375d:	test   BYTE PTR [esi],al
  42375f:	sub    DWORD PTR [ebp-0x2f],edi
  423762:	ret    0x17c6
  423765:	(bad)  
  423766:	stc    
  423767:	stos   DWORD PTR es:[edi],eax
  423768:	mov    bl,0x1d
  42376a:	or     DWORD PTR ds:0x163b5c05,ebx
  423770:	push   0xffffff97
  423772:	into   
  423773:	xchg   ebp,eax
  423774:	scas   al,BYTE PTR es:[edi]
  423775:	retf   
  423776:	retf   
  423777:	pop    esi
  423778:	fimul  DWORD PTR [esp+ebp*1-0x53]
  42377c:	ins    BYTE PTR es:[edi],dx
  42377d:	popa   
  42377e:	(bad)  
  42377f:	jle    0x42379b
  423781:	adc    bh,ch
  423783:	test   cl,al
  423785:	les    edx,FWORD PTR [ebp+0x0]
  423788:	aad    0x16
  42378a:	ror    BYTE PTR [ecx-0x44408bd2],0xd7
  423791:	mov    ds:0xbb72470f,al
  423796:	in     al,dx
  423797:	mov    bh,0xd3
  423799:	rcl    bh,0xd3
  42379c:	icebp  
  42379d:	or     eax,0x4dbf1f2
  4237a2:	ins    DWORD PTR es:[edi],dx
  4237a3:	push   ecx
  4237a4:	pushf  
  4237a5:	mov    edx,0xd863320c
  4237aa:	add    eax,0x48bb4fb5
  4237af:	ds int 0xb4
  4237b2:	mov    dh,0x69
  4237b4:	loopne 0x42382c
  4237b6:	pop    eax
  4237b7:	xor    al,0x3
  4237b9:	pusha  
  4237ba:	xchg   esp,eax
  4237bb:	leave  
  4237bc:	popf   
  4237bd:	int    0x83
  4237bf:	mov    esp,0x81cb4d16
  4237c4:	(bad)  
  4237c5:	aad    0xbd
  4237c7:	dec    eax
  4237c8:	(bad)  
  4237c9:	loopne 0x42383c
  4237cb:	sub    cl,ch
  4237cd:	inc    esp
  4237ce:	sbb    BYTE PTR [edi],bl
  4237d0:	mov    WORD PTR [ebx],gs
  4237d2:	and    eax,0x6287e457
  4237d7:	sahf   
  4237d8:	into   
  4237d9:	ret    0x9247
  4237dc:	mov    dl,0xe7
  4237de:	sar    BYTE PTR [ecx+0x7b],0x71
  4237e2:	cmp    al,0x8f
  4237e4:	and    BYTE PTR [edi+0x261134f0],bh
  4237ea:	xchg   DWORD PTR [ebx+eiz*1],eax
  4237ed:	int    0xd6
  4237ef:	cmp    DWORD PTR [ebp+0x5337a5ca],eax
  4237f5:	cwde   
  4237f6:	push   eax
  4237f7:	out    0x49,eax
  4237f9:	aam    0x16
  4237fb:	retf   0x306a
  4237fe:	ror    BYTE PTR [ecx+0x520fd187],1
  423804:	xchg   esp,eax
  423805:	jnp    0x42378a
  423807:	(bad)  
  423809:	bound  ecx,QWORD PTR [ebx-0x3ecc0fbb]
  42380f:	mov    edx,0xffcd8d11
  423814:	sub    edx,eax
  423816:	add    DWORD PTR [ebp-0x4],edx
  423819:	mov    eax,DWORD PTR [ebp-0x4]
  42381c:	jmp    0x4229e8
  423821:	mov    eax,DWORD PTR [ebp-0x14]
  423824:	mov    eax,DWORD PTR [eax]
  423826:	mov    edx,DWORD PTR [ebp-0x4]
  423829:	mov    edx,DWORD PTR [edx+0x3c]
  42382c:	lea    eax,[edx+eax*8+0x78]
  423830:	mov    edx,DWORD PTR [ebp-0x4]
  423833:	mov    eax,DWORD PTR [eax+edx*1]
  423836:	mov    DWORD PTR [ebp-0x8],eax
  423839:	mov    eax,DWORD PTR [ebp+0x8]
  42383c:	xor    eax,ecx
  42383e:	add    eax,esi
  423840:	mov    DWORD PTR [ebp-0x14],eax
  423843:	mov    eax,DWORD PTR [ebp+0x8]
  423846:	mov    edx,DWORD PTR [ebp-0x8]
  423849:	xor    eax,ecx
  42384b:	add    eax,esi
  42384d:	cmp    edx,eax
  42384f:	jne    0x42386d
  423855:	mov    eax,DWORD PTR [ebp+0xc]
  423858:	xor    eax,ecx
  42385a:	mov    ecx,DWORD PTR [ebp-0x8]
  42385d:	add    eax,esi
  42385f:	imul   eax,ecx
  423862:	mov    DWORD PTR [ebp-0x8],eax
  423865:	push   DWORD PTR [ebp+0x18]
  423868:	jmp    0x4238c8
  42386d:	mov    eax,DWORD PTR [ebp-0x8]
  423870:	mov    ecx,DWORD PTR [ebp-0x4]
  423873:	add    eax,ecx
  423875:	mov    DWORD PTR [ebp-0x14],eax
  423878:	mov    eax,DWORD PTR [ebp-0x14]
  42387b:	mov    eax,DWORD PTR [eax+0xc]
  42387e:	movsx  eax,BYTE PTR [eax+ecx*1]
  423882:	cdq    
  423883:	add    eax,ebx
  423885:	adc    edx,0xffffffff
  423888:	xor    eax,edi
  42388a:	xor    edx,0x0
  42388d:	cmp    eax,0x70941e1e
  423892:	jne    0x423865
  423898:	cmp    edx,0xffffffff
  42389b:	jne    0x423865
  4238a1:	mov    eax,ds:0x42942f
  4238a6:	mov    eax,DWORD PTR [eax+0x198]
  4238ac:	mov    DWORD PTR [eax],ecx
  4238ae:	mov    eax,ecx
  4238b0:	jmp    0x4238d9
  4238b5:	mov    eax,DWORD PTR [ebp+0x18]
  4238b8:	cmp    eax,0xf89c85ba
  4238bd:	jne    0x4238d9
  4238c3:	push   0xf89c85bb
  4238c8:	push   DWORD PTR [ebp+0x14]
  4238cb:	push   DWORD PTR [ebp+0x10]
  4238ce:	push   DWORD PTR [ebp+0xc]
  4238d1:	push   DWORD PTR [ebp+0x8]
  4238d4:	call   0x420148
  4238d9:	pop    edi
  4238da:	pop    ebx
  4238db:	pop    esi
  4238dc:	leave  
  4238dd:	ret    0x14
  4238e0:	push   ebp
  4238e1:	mov    ebp,esp
  4238e3:	and    esp,0xfffffff8
  4238e6:	add    DWORD PTR ds:0x42a177,0x42a1bb
  4238f0:	sub    esp,0x1ac
  4238f6:	push   ebx
  4238f7:	push   esi
  4238f8:	mov    DWORD PTR ds:0x42a15f,0x573c
  423902:	push   edi
  423903:	xor    edi,edi
  423905:	push   edi
  423906:	not    DWORD PTR ds:0x42a18f
  42390c:	call   DWORD PTR ds:0x42a28b
  423912:	mov    esi,DWORD PTR ds:0x42a2cb
  423918:	add    DWORD PTR ds:0x42a14b,0x7d28
  423922:	push   0xf
  423924:	and    DWORD PTR ds:0x42a183,0x1edb
  42392e:	mov    DWORD PTR [esp+0x14],eax
  423932:	lea    eax,[esp+0x44]
  423936:	sub    DWORD PTR ds:0x42a19b,0x42a187
  423940:	push   eax
  423941:	push   0x429553
  423946:	sbb    DWORD PTR ds:0x42a17f,0x7a6
  423950:	push   0x429567
  423955:	adc    DWORD PTR ds:0x42a17f,0x6000
  42395f:	push   0x42958f
  423964:	adc    DWORD PTR ds:0x42a1c3,0x42a1b7
  42396e:	call   esi
  423970:	shl    eax,0x15
  423973:	mov    DWORD PTR ds:0x42a197,0x6670
  42397d:	cmp    eax,0x1000000
  423982:	je     0x423999
  423988:	xor    eax,eax
  42398a:	mov    DWORD PTR ds:0x42a12f,0x1037
  423994:	jmp    0x424a50
  423999:	or     DWORD PTR ds:0x42a187,0x42a127
  4239a3:	push   0x4295b7
  4239a8:	call   DWORD PTR ds:0x42a29f
  4239ae:	xor    DWORD PTR ds:0x42a15b,0x42a1b3
  4239b8:	test   eax,eax
  4239ba:	mov    DWORD PTR ds:0x42a137,0x194e
  4239c4:	jne    0x423988
  4239ca:	lea    eax,[esp+0x78]
  4239ce:	xor    DWORD PTR ds:0x42a173,0x42a157
  4239d8:	push   eax
  4239d9:	push   0x4295d3
  4239de:	sbb    DWORD PTR ds:0x42a1ab,0x42a133
  4239e8:	call   DWORD PTR ds:0x42a2bb
  4239ee:	cmp    eax,0xffffffff
  4239f1:	mov    DWORD PTR ds:0x42a193,0x52a3
  4239fb:	jne    0x423988
  423a01:	mov    DWORD PTR ds:0x42a19b,0xfae
  423a0b:	push   DWORD PTR [esp+0x10]
  423a0f:	add    DWORD PTR ds:0x42a157,0x42a16f
  423a19:	push   edi
  423a1a:	sbb    DWORD PTR ds:0x42a1c3,0x76dd
  423a24:	call   DWORD PTR ds:0x42a287
  423a2a:	mov    ecx,DWORD PTR ds:0x42a24f
  423a30:	mov    ebx,DWORD PTR ds:0x42a267
  423a36:	sub    ecx,ebx
  423a38:	sub    ecx,DWORD PTR [ecx+ebx*1]
  423a3b:	mov    DWORD PTR [esp+0x30],edi
  423a3f:	or     DWORD PTR ds:0x42a16f,0x565
  423a49:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  423a51:	mov    DWORD PTR ds:0x42a143,0x78c3
  423a5b:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423a63:	or     ebx,ecx
  423a65:	lea    eax,[esp+0x3c]
  423a69:	mov    DWORD PTR [esp+0x30],eax
  423a6d:	add    ebx,edi
  423a6f:	lea    eax,[esp+0x38]
  423a73:	mov    edi,DWORD PTR ds:0x42a1e3
  423a79:	mov    ecx,DWORD PTR ds:0x42a21f
  423a7f:	sub    edi,ecx
  423a81:	and    edi,DWORD PTR [edi+ecx*1]
  423a84:	mov    DWORD PTR [esp+0x10],eax
  423a88:	and    DWORD PTR ds:0x42a17b,0x5d3c
  423a92:	mov    eax,ds:0x42942f
  423a97:	xor    ebx,ebx
  423a99:	xor    ebx,DWORD PTR ds:0x42a18b
  423a9f:	sbb    DWORD PTR ds:0x42a1bf,ebx
  423aa5:	mov    eax,DWORD PTR [eax+0x1c8]
  423aab:	sbb    edi,DWORD PTR ds:0x42a1cf
  423ab1:	mov    eax,DWORD PTR [eax]
  423ab3:	and    DWORD PTR ds:0x42a173,0x0
  423abd:	mov    edi,DWORD PTR ds:0x42a173
  423ac3:	inc    edi
  423ac4:	mov    DWORD PTR ds:0x42a173,edi
  423aca:	cmp    DWORD PTR ds:0x42a173,0xf
  423ad1:	jl     0x423b16
  423ad7:	jmp    0x423aef
  423adc:	push   DWORD PTR [ebp-0x1c]
  423adf:	push   0x42a127
  423ae4:	push   0x25af
  423ae9:	call   DWORD PTR ds:0x42a2ab
  423aef:	cmp    DWORD PTR ds:0x42a173,0xe
  423af6:	jne    0x423b09
  423afc:	mov    edi,DWORD PTR ds:0x42a173
  423b02:	inc    edi
  423b03:	mov    DWORD PTR ds:0x42a173,edi
  423b09:	cmp    DWORD PTR ds:0x42a173,0x1d
  423b10:	jb     0x423abd
  423b16:	mov    ecx,DWORD PTR [esp+0x10]
  423b1a:	and    ebx,DWORD PTR ds:0x42a1ab
  423b20:	mov    edi,0x75108a8
  423b25:	xor    ebx,DWORD PTR ds:0x42a173
  423b2b:	xor    eax,edi
  423b2d:	mov    ebx,DWORD PTR ds:0x42a18b
  423b33:	or     DWORD PTR ds:0x42a13f,ebx
  423b39:	mov    ebx,0x3272ef
  423b3e:	add    eax,ebx
  423b40:	mov    DWORD PTR ds:0x42a1c3,0x4871
  423b4a:	mov    DWORD PTR [ecx],eax
  423b4c:	mov    eax,ds:0x42a193
  423b51:	mov    eax,ds:0x429feb
  423b56:	cmp    eax,0x445cecf9
  423b5b:	jne    0x423bdb
  423b61:	sbb    ecx,0x3851
  423b67:	mov    eax,DWORD PTR [esp+0x20]
  423b6b:	sub    DWORD PTR ds:0x42a16b,edi
  423b71:	mov    ecx,DWORD PTR ds:0x42942f
  423b77:	mov    ecx,DWORD PTR [ecx+0x198]
  423b7d:	adc    DWORD PTR ds:0x42a14b,0x1545
  423b87:	xor    eax,edi
  423b89:	add    eax,ebx
  423b8b:	mov    DWORD PTR [ecx],eax
  423b8d:	xor    eax,DWORD PTR ds:0x42a19f
  423b93:	mov    eax,DWORD PTR [esp+0x20]
  423b97:	sub    DWORD PTR ds:0x42a13f,0x2657
  423ba1:	xor    eax,edi
  423ba3:	add    eax,ebx
  423ba5:	mov    ds:0x429feb,eax
  423baa:	dec    DWORD PTR ds:0x42a18b
  423bb0:	mov    eax,DWORD PTR [esp+0x20]
  423bb4:	xor    DWORD PTR ds:0x42a15b,0x42a1af
  423bbe:	xor    eax,edi
  423bc0:	sbb    DWORD PTR ds:0x42a157,0xceb
  423bca:	add    eax,ebx
  423bcc:	sbb    DWORD PTR ds:0x42a177,0x42a19f
  423bd6:	mov    ds:0x429527,eax
  423bdb:	sub    eax,0xfb3
  423be0:	mov    eax,ds:0x42942f
  423be5:	not    DWORD PTR ds:0x42a1a3
  423beb:	mov    eax,DWORD PTR [eax+0x18c]
  423bf1:	sub    DWORD PTR ds:0x42a133,0x42a19b
  423bfb:	mov    eax,DWORD PTR [eax]
  423bfd:	not    DWORD PTR ds:0x42a133
  423c03:	mov    DWORD PTR [esp+0x60],eax
  423c07:	adc    DWORD PTR ds:0x42a1c7,0x42a1af
  423c11:	mov    eax,0xf89c85bd
  423c16:	mov    DWORD PTR [esp+0x18],eax
  423c1a:	sbb    DWORD PTR ds:0x42a17f,0x42a177
  423c24:	mov    DWORD PTR [esp+0x18],eax
  423c28:	sub    DWORD PTR ds:0x42a143,0x5dcc
  423c32:	mov    DWORD PTR [esp+0x18],eax
  423c36:	mov    DWORD PTR [esp+0x18],0xf89c85b9
  423c3e:	sbb    DWORD PTR ds:0x42a1a3,0x2005
  423c48:	mov    DWORD PTR [esp+0x10],eax
  423c4c:	mov    DWORD PTR ds:0x42a1a7,0x202e
  423c56:	mov    DWORD PTR [esp+0x10],0xf89c85b1
  423c5e:	mov    eax,DWORD PTR [esp+0x20]
  423c62:	add    DWORD PTR ds:0x42a187,0x42a19f
  423c6c:	xor    eax,edi
  423c6e:	or     DWORD PTR ds:0x42a15b,0x42a163
  423c78:	add    eax,ebx
  423c7a:	jmp    0x423f2a
  423c7f:	dec    DWORD PTR ds:0x42a143
  423c85:	lea    eax,[esp+0x44]
  423c89:	adc    DWORD PTR ds:0x42a16f,0x2f79
  423c93:	push   eax
  423c94:	xor    DWORD PTR ds:0x42a13b,0x2364
  423c9e:	push   0x4295ef
  423ca3:	push   0x429603
  423ca8:	push   0x42962b
  423cad:	sub    DWORD PTR ds:0x42a16b,0x2bd1
  423cb7:	call   esi
  423cb9:	mov    DWORD PTR ds:0x42a147,0x6294
  423cc3:	shl    eax,0x15
  423cc6:	cmp    eax,0x1000000
  423ccb:	jne    0x423988
  423cd1:	dec    DWORD PTR ds:0x42a163
  423cd7:	push   0x429653
  423cdc:	adc    DWORD PTR ds:0x42a1cb,0x42a1af
  423ce6:	call   DWORD PTR ds:0x42a29f
  423cec:	add    DWORD PTR ds:0x42a14b,0x6241
  423cf6:	test   eax,eax
  423cf8:	jne    0x423988
  423cfe:	or     DWORD PTR ds:0x42a133,0x259a
  423d08:	lea    eax,[esp+0x78]
  423d0c:	push   eax
  423d0d:	push   0x42966f
  423d12:	xor    DWORD PTR ds:0x42a17b,0x66c
  423d1c:	call   DWORD PTR ds:0x42a2bb
  423d22:	cmp    eax,0xffffffff
  423d25:	mov    DWORD PTR ds:0x42a187,0x7420
  423d2f:	jne    0x423988
  423d35:	and    DWORD PTR ds:0x42a167,0x0
  423d3f:	mov    eax,ds:0x42a167
  423d44:	inc    eax
  423d45:	mov    ds:0x42a167,eax
  423d4a:	cmp    DWORD PTR ds:0x42a167,0x5
  423d51:	jl     0x423d99
  423d57:	jmp    0x423d74
  423d5c:	push   0x38f5
  423d61:	push   DWORD PTR [ebp-0x10]
  423d64:	push   0x7b72
  423d69:	push   0x6a40
  423d6e:	call   DWORD PTR ds:0x42a2af
  423d74:	cmp    DWORD PTR ds:0x42a167,0x4
  423d7b:	jne    0x423d8c
  423d81:	mov    eax,ds:0x42a167
  423d86:	inc    eax
  423d87:	mov    ds:0x42a167,eax
  423d8c:	cmp    DWORD PTR ds:0x42a167,0x12
  423d93:	jb     0x423d3f
  423d99:	mov    eax,DWORD PTR [esp+0xc]
  423d9d:	mov    ecx,DWORD PTR [esp+0x10]
  423da1:	dec    DWORD PTR ds:0x42a15f
  423da7:	xor    eax,edi
  423da9:	sub    DWORD PTR ds:0x42a1a7,0x2267
  423db3:	lea    eax,[eax+ecx*1+0x3272ef]
  423dba:	sbb    DWORD PTR ds:0x42a1bb,0x1a84
  423dc4:	push   eax
  423dc5:	and    DWORD PTR ds:0x42a15f,0x0
  423dcf:	jmp    0x423ddf
  423dd4:	mov    eax,ds:0x42a15f
  423dd9:	inc    eax
  423dda:	mov    ds:0x42a15f,eax
  423ddf:	cmp    DWORD PTR ds:0x42a15f,0x12
  423de6:	jae    0x423e17
  423dec:	cmp    DWORD PTR ds:0x42a15f,0x21
  423df3:	jb     0x423e17
  423df9:	jmp    0x423e12
  423dfe:	push   DWORD PTR [ebp-0x24]
  423e01:	push   DWORD PTR [ebp-0xc]
  423e04:	push   0x42a1af
  423e09:	push   DWORD PTR [ebp-0x14]
  423e0c:	call   DWORD PTR ds:0x42a2b3
  423e12:	jmp    0x423dd4
  423e17:	mov    eax,DWORD PTR [esp+0x1c]
  423e1b:	add    DWORD PTR ds:0x42a1c3,0x42a19f
  423e25:	xor    eax,edi
  423e27:	adc    DWORD PTR ds:0x42a147,0x3c17
  423e31:	lea    eax,[ebp+eax*1+0x3272f7]
  423e38:	and    DWORD PTR ds:0x42a18b,0x7df0
  423e42:	push   eax
  423e43:	mov    eax,ds:0x42a12b
  423e48:	xor    DWORD PTR ds:0x42a1ab,eax
  423e4e:	mov    eax,ds:0x42942f
  423e53:	xor    DWORD PTR ds:0x42a147,0x5716
  423e5d:	push   DWORD PTR [eax+0x1bc]
  423e63:	inc    DWORD PTR ds:0x42a1c3
  423e69:	call   0x424a59
  423e6e:	add    DWORD PTR ds:0x42a18f,ebx
  423e74:	mov    eax,DWORD PTR [esp+0xc]
  423e78:	and    DWORD PTR ds:0x42a18f,0x0
  423e82:	mov    ecx,DWORD PTR ds:0x42a18f
  423e88:	inc    ecx
  423e89:	mov    DWORD PTR ds:0x42a18f,ecx
  423e8f:	cmp    DWORD PTR ds:0x42a18f,0x23
  423e96:	jg     0x423ec8
  423e9c:	jmp    0x423ebb
  423ea1:	push   0x42a137
  423ea6:	push   0x3da7
  423eab:	push   0x4290e5
  423eb0:	push   0x42912b
  423eb5:	call   DWORD PTR ds:0x42a2b7
  423ebb:	cmp    DWORD PTR ds:0x42a18f,0x1c
  423ec2:	jb     0x423e82
  423ec8:	mov    ecx,DWORD PTR [esp+0x10]
  423ecc:	and    DWORD PTR ds:0x42a1a3,0x0
  423ed6:	jmp    0x423ee8
  423edb:	mov    edx,DWORD PTR ds:0x42a1a3
  423ee1:	inc    edx
  423ee2:	mov    DWORD PTR ds:0x42a1a3,edx
  423ee8:	cmp    DWORD PTR ds:0x42a1a3,0x15
  423eef:	jae    0x423f17
  423ef5:	cmp    DWORD PTR ds:0x42a1a3,0x23
  423efc:	jl     0x423f17
  423f02:	jmp    0x423f12
  423f07:	push   0x2b36
  423f0c:	call   DWORD PTR ds:0x42a2bf
  423f12:	jmp    0x423edb
  423f17:	xor    eax,edi
  423f19:	add    DWORD PTR ds:0x42a15b,0x498
  423f23:	lea    eax,[ecx+eax*1+0x3272ef]
  423f2a:	add    DWORD PTR ds:0x42a1d3,0x5749
  423f34:	mov    ecx,DWORD PTR [esp+0xc]
  423f38:	and    DWORD PTR ds:0x42a18f,ecx
  423f3e:	mov    edx,DWORD PTR [esp+0xc]
  423f42:	xor    edx,edi
  423f44:	xor    ecx,edi
  423f46:	add    ecx,edx
  423f48:	mov    edx,DWORD PTR [esp+0xc]
  423f4c:	xor    edx,edi
  423f4e:	mov    DWORD PTR ds:0x42a15f,0x7e75
  423f58:	lea    ecx,[ecx+edx*1+0x9758cd]
  423f5f:	mov    DWORD PTR ds:0x42a14b,0x16f9
  423f69:	mov    DWORD PTR [esp+0x10],eax
  423f6d:	push   0xf
  423f6f:	mov    DWORD PTR ds:0x42a1bb,0x175a
  423f79:	cmp    eax,ecx
  423f7b:	mov    DWORD PTR ds:0x42a15f,0x2b18
  423f85:	jbe    0x423c7f
  423f8b:	mov    eax,DWORD PTR [ebp+0xc]
  423f8e:	add    ecx,DWORD PTR ds:0x42a173
  423f94:	mov    ds:0x4292b3,eax
  423f99:	mov    eax,DWORD PTR [ebp+0x10]
  423f9c:	xor    ecx,ecx
  423f9e:	xor    ecx,DWORD PTR ds:0x42a1b3
  423fa4:	sbb    DWORD PTR ds:0x42a1cb,ecx
  423faa:	mov    ds:0x42950f,eax
  423faf:	mov    eax,ds:0x4292b3
  423fb4:	mov    ecx,DWORD PTR ds:0x42a12f
  423fba:	or     ecx,DWORD PTR ds:0x42a15f
  423fc0:	mov    DWORD PTR ds:0x42a12f,ecx
  423fc6:	mov    ecx,DWORD PTR [esp+0x34]
  423fca:	adc    DWORD PTR ds:0x42a1c7,0x192d
  423fd4:	sub    eax,ebx
  423fd6:	xor    eax,edi
  423fd8:	or     DWORD PTR ds:0x42a1af,0x42a1cb
  423fe2:	mov    DWORD PTR [ecx],eax
  423fe4:	sub    DWORD PTR ds:0x42a187,0x2768
  423fee:	lea    eax,[esp+0x30]
  423ff2:	and    DWORD PTR ds:0x42a17b,0x51d9
  423ffc:	mov    DWORD PTR [esp+0x74],eax
  424000:	lea    eax,[ebp+0x4]
  424003:	mov    DWORD PTR [esp+0x30],eax
  424007:	lea    eax,[esp+0x44]
  42400b:	xor    DWORD PTR ds:0x42a1ab,0x6aa
  424015:	push   eax
  424016:	sub    DWORD PTR ds:0x42a137,0x42a18b
  424020:	push   0x42968b
  424025:	push   0x42969f
  42402a:	sub    DWORD PTR ds:0x42a12f,0x6538
  424034:	push   0x4296c7
  424039:	add    DWORD PTR ds:0x42a17f,0x42a1cf
  424043:	call   esi
  424045:	shl    eax,0x15
  424048:	mov    DWORD PTR ds:0x42a1bf,0x1cd6
  424052:	cmp    eax,0x1000000
  424057:	mov    DWORD PTR ds:0x42a193,0x32c8
  424061:	jne    0x423988
  424067:	push   0x4296ef
  42406c:	call   DWORD PTR ds:0x42a29f
  424072:	xor    DWORD PTR ds:0x42a16f,0x42a177
  42407c:	test   eax,eax
  42407e:	jne    0x423988
  424084:	adc    DWORD PTR ds:0x42a16f,0x7895
  42408e:	lea    eax,[esp+0x78]
  424092:	push   eax
  424093:	push   0x42970b
  424098:	call   DWORD PTR ds:0x42a2bb
  42409e:	cmp    eax,0xffffffff
  4240a1:	jne    0x423988
  4240a7:	push   0xf
  4240a9:	lea    eax,[esp+0x44]
  4240ad:	push   eax
  4240ae:	sub    DWORD PTR ds:0x42a19b,0x42a167
  4240b8:	push   0x429727
  4240bd:	sbb    DWORD PTR ds:0x42a18b,0x654e
  4240c7:	push   0x42973b
  4240cc:	push   0x429763
  4240d1:	add    DWORD PTR ds:0x42a15f,0x4c0a
  4240db:	call   esi
  4240dd:	shl    eax,0x15
  4240e0:	mov    DWORD PTR ds:0x42a17b,0x49de
  4240ea:	cmp    eax,0x1000000
  4240ef:	mov    DWORD PTR ds:0x42a1a7,0x39fb
  4240f9:	jne    0x423988
  4240ff:	sbb    DWORD PTR ds:0x42a1bb,0x7658
  424109:	push   0x42978b
  42410e:	call   DWORD PTR ds:0x42a29f
  424114:	test   eax,eax
  424116:	jne    0x423988
  42411c:	lea    eax,[esp+0x78]
  424120:	adc    DWORD PTR ds:0x42a14f,0x33c9
  42412a:	push   eax
  42412b:	push   0x4297a7
  424130:	and    DWORD PTR ds:0x42a187,0x42a1c3
  42413a:	call   DWORD PTR ds:0x42a2bb
  424140:	cmp    eax,0xffffffff
  424143:	jne    0x423988
  424149:	add    DWORD PTR ds:0x42a14f,0x42a1b3
  424153:	push   0xf
  424155:	adc    DWORD PTR ds:0x42a14f,0x42a17b
  42415f:	lea    eax,[esp+0x44]
  424163:	adc    DWORD PTR ds:0x42a197,0x4372
  42416d:	push   eax
  42416e:	sub    DWORD PTR ds:0x42a1c3,0x57ed
  424178:	push   0x4297c3
  42417d:	push   0x4297d7
  424182:	push   0x4297ff
  424187:	sbb    DWORD PTR ds:0x42a143,0x42a1d3
  424191:	call   esi
  424193:	shl    eax,0x15
  424196:	cmp    eax,0x1000000
  42419b:	mov    DWORD PTR ds:0x42a1bb,0x7ab0
  4241a5:	jne    0x423988
  4241ab:	and    DWORD PTR ds:0x42a1b7,0x42a16b
  4241b5:	push   0x429827
  4241ba:	neg    DWORD PTR ds:0x42a13f
  4241c0:	call   DWORD PTR ds:0x42a29f
  4241c6:	test   eax,eax
  4241c8:	mov    DWORD PTR ds:0x42a183,0x529e
  4241d2:	jne    0x423988
  4241d8:	or     DWORD PTR ds:0x42a173,0x42a13f
  4241e2:	lea    eax,[esp+0x78]
  4241e6:	push   eax
  4241e7:	adc    DWORD PTR ds:0x42a14b,0x42a183
  4241f1:	push   0x429843
  4241f6:	call   DWORD PTR ds:0x42a2bb
  4241fc:	mov    DWORD PTR ds:0x42a167,0x1720
  424206:	cmp    eax,0xffffffff
  424209:	mov    DWORD PTR ds:0x42a1b3,0x34b9
  424213:	jne    0x423988
  424219:	xor    DWORD PTR ds:0x42a127,0x42a193
  424223:	push   0xf
  424225:	lea    eax,[esp+0x44]
  424229:	push   eax
  42422a:	push   0x42985f
  42422f:	sbb    DWORD PTR ds:0x42a13f,0x42a14b
  424239:	push   0x429873
  42423e:	push   0x42989b
  424243:	call   esi
  424245:	mov    DWORD PTR ds:0x42a183,0x7c87
  42424f:	shl    eax,0x15
  424252:	cmp    eax,0x1000000
  424257:	jne    0x423988
  42425d:	sub    DWORD PTR ds:0x42a14f,0x1b5
  424267:	push   0x4298c3
  42426c:	adc    DWORD PTR ds:0x42a15f,0x2d72
  424276:	call   DWORD PTR ds:0x42a29f
  42427c:	test   eax,eax
  42427e:	jne    0x423988
  424284:	xor    DWORD PTR ds:0x42a177,0x5023
  42428e:	lea    eax,[esp+0x78]
  424292:	add    DWORD PTR ds:0x42a19b,0x39d
  42429c:	push   eax
  42429d:	push   0x4298df
  4242a2:	call   DWORD PTR ds:0x42a2bb
  4242a8:	mov    DWORD PTR ds:0x42a16f,0xd24
  4242b2:	cmp    eax,0xffffffff
  4242b5:	jne    0x423988
  4242bb:	not    DWORD PTR ds:0x42a157
  4242c1:	push   0xf
  4242c3:	mov    DWORD PTR ds:0x42a197,0x1e5a
  4242cd:	lea    eax,[esp+0x44]
  4242d1:	push   eax
  4242d2:	push   0x4298fb
  4242d7:	push   0x42990f
  4242dc:	push   0x429937
  4242e1:	add    DWORD PTR ds:0x42a17f,0x42a1a7
  4242eb:	call   esi
  4242ed:	mov    DWORD PTR ds:0x42a19f,0x41c3
  4242f7:	shl    eax,0x15
  4242fa:	cmp    eax,0x1000000
  4242ff:	jne    0x423988
  424305:	sub    DWORD PTR ds:0x42a137,0x2237
  42430f:	push   0x42995f
  424314:	xor    DWORD PTR ds:0x42a15b,0x42a1d3
  42431e:	call   DWORD PTR ds:0x42a29f
  424324:	test   eax,eax
  424326:	mov    DWORD PTR ds:0x42a167,0x62c6
  424330:	jne    0x423988
  424336:	and    DWORD PTR ds:0x42a1af,0x5eb4
  424340:	lea    eax,[esp+0x78]
  424344:	adc    DWORD PTR ds:0x42a15b,0x4918
  42434e:	push   eax
  42434f:	or     DWORD PTR ds:0x42a177,0x42a12f
  424359:	push   0x42997b
  42435e:	sbb    DWORD PTR ds:0x42a173,0x42a133
  424368:	call   DWORD PTR ds:0x42a2bb
  42436e:	mov    DWORD PTR ds:0x42a12b,0x13e7
  424378:	cmp    eax,0xffffffff
  42437b:	mov    DWORD PTR ds:0x42a1ab,0xa62
  424385:	jne    0x423988
  42438b:	xor    DWORD PTR ds:0x42a137,0x42a197
  424395:	push   0xf
  424397:	lea    eax,[esp+0x44]
  42439b:	or     DWORD PTR ds:0x42a18f,0x2cef
  4243a5:	push   eax
  4243a6:	push   0x429997
  4243ab:	push   0x4299ab
  4243b0:	sub    DWORD PTR ds:0x42a17f,0x42a16b
  4243ba:	push   0x4299d3
  4243bf:	call   esi
  4243c1:	shl    eax,0x15
  4243c4:	mov    DWORD PTR ds:0x42a16f,0x43ec
  4243ce:	cmp    eax,0x1000000
  4243d3:	mov    DWORD PTR ds:0x42a1a3,0x18cb
  4243dd:	jne    0x423988
  4243e3:	add    DWORD PTR ds:0x42a18b,0x5057
  4243ed:	push   0x4299fb
  4243f2:	or     DWORD PTR ds:0x42a19f,0x48df
  4243fc:	call   DWORD PTR ds:0x42a29f
  424402:	and    DWORD PTR ds:0x42a1bf,0x7c0c
  42440c:	test   eax,eax
  42440e:	mov    DWORD PTR ds:0x42a187,0x257b
  424418:	jne    0x423988
  42441e:	xor    DWORD PTR ds:0x42a1cb,0x42a1c7
  424428:	lea    eax,[esp+0x78]
  42442c:	add    DWORD PTR ds:0x42a197,0x4894
  424436:	push   eax
  424437:	or     DWORD PTR ds:0x42a12b,0x42a19f
  424441:	push   0x429a17
  424446:	sbb    DWORD PTR ds:0x42a127,0x42a14f
  424450:	call   DWORD PTR ds:0x42a2bb
  424456:	cmp    eax,0xffffffff
  424459:	mov    DWORD PTR ds:0x42a177,0xc3a
  424463:	jne    0x423988
  424469:	push   0xf
  42446b:	lea    eax,[esp+0x44]
  42446f:	inc    DWORD PTR ds:0x42a1cb
  424475:	push   eax
  424476:	push   0x429a33
  42447b:	push   0x429a47
  424480:	sub    DWORD PTR ds:0x42a13b,0x42a14f
  42448a:	push   0x429a6f
  42448f:	xor    DWORD PTR ds:0x42a15f,0x6779
  424499:	call   esi
  42449b:	mov    DWORD PTR ds:0x42a1b7,0x68bf
  4244a5:	shl    eax,0x15
  4244a8:	mov    DWORD PTR ds:0x42a13b,0x5b0c
  4244b2:	cmp    eax,0x1000000
  4244b7:	mov    DWORD PTR ds:0x42a133,0x4026
  4244c1:	jne    0x423988
  4244c7:	push   0x429a97
  4244cc:	and    DWORD PTR ds:0x42a1b7,0x42a147
  4244d6:	call   DWORD PTR ds:0x42a29f
  4244dc:	test   eax,eax
  4244de:	jne    0x423988
  4244e4:	lea    eax,[esp+0x78]
  4244e8:	push   eax
  4244e9:	push   0x429ab3
  4244ee:	call   DWORD PTR ds:0x42a2bb
  4244f4:	mov    DWORD PTR ds:0x42a1b7,0xded
  4244fe:	cmp    eax,0xffffffff
  424501:	mov    DWORD PTR ds:0x42a13b,0x163f
  42450b:	jne    0x423988
  424511:	or     DWORD PTR ds:0x42a1cf,0x42a13b
  42451b:	push   0xf
  42451d:	lea    eax,[esp+0x44]
  424521:	push   eax
  424522:	push   0x429acf
  424527:	push   0x429ae3
  42452c:	add    DWORD PTR ds:0x42a167,0x42a1c7
  424536:	push   0x429b0b
  42453b:	or     DWORD PTR ds:0x42a157,0x42a1a3
  424545:	call   esi
  424547:	shl    eax,0x15
  42454a:	mov    DWORD PTR ds:0x42a1a7,0x724c
  424554:	cmp    eax,0x1000000
  424559:	mov    DWORD PTR ds:0x42a13b,0x4087
  424563:	jne    0x423988
  424569:	xor    DWORD PTR ds:0x42a163,0x42a13b
  424573:	push   0x429b33
  424578:	or     DWORD PTR ds:0x42a143,0x1c84
  424582:	call   DWORD PTR ds:0x42a29f
  424588:	xor    DWORD PTR ds:0x42a193,0x1623
  424592:	test   eax,eax
  424594:	mov    DWORD PTR ds:0x42a15f,0x197f
  42459e:	jne    0x423988
  4245a4:	lea    eax,[esp+0x78]
  4245a8:	inc    DWORD PTR ds:0x42a137
  4245ae:	push   eax
  4245af:	push   0x429b4f
  4245b4:	xor    DWORD PTR ds:0x42a1bb,0x42a1b7
  4245be:	call   DWORD PTR ds:0x42a2bb
  4245c4:	mov    DWORD PTR ds:0x42a16f,0x1cd6
  4245ce:	cmp    eax,0xffffffff
  4245d1:	jne    0x423988
  4245d7:	sbb    DWORD PTR ds:0x42a17f,0x4eb9
  4245e1:	push   0xf
  4245e3:	lea    eax,[esp+0x44]
  4245e7:	or     DWORD PTR ds:0x42a1d3,0x42a193
  4245f1:	push   eax
  4245f2:	sub    DWORD PTR ds:0x42a17b,0x42a1bb
  4245fc:	push   0x429b6b
  424601:	add    DWORD PTR ds:0x42a16b,0x35f5
  42460b:	push   0x429b7f
  424610:	push   0x429ba7
  424615:	sbb    DWORD PTR ds:0x42a1a7,0x42a167
  42461f:	call   esi
  424621:	shl    eax,0x15
  424624:	cmp    eax,0x1000000
  424629:	jne    0x423988
  42462f:	push   0x429bcf
  424634:	call   DWORD PTR ds:0x42a29f
  42463a:	test   eax,eax
  42463c:	jne    0x423988
  424642:	lea    eax,[esp+0x78]
  424646:	push   eax
  424647:	push   0x429beb
  42464c:	call   DWORD PTR ds:0x42a2bb
  424652:	cmp    eax,0xffffffff
  424655:	jne    0x423988
  42465b:	push   0xf
  42465d:	lea    eax,[esp+0x44]
  424661:	push   eax
  424662:	push   0x429c07
  424667:	push   0x429c1b
  42466c:	push   0x429c43
  424671:	call   esi
  424673:	shl    eax,0x15
  424676:	cmp    eax,0x1000000
  42467b:	jne    0x423988
  424681:	push   0x429c6b
  424686:	call   DWORD PTR ds:0x42a29f
  42468c:	test   eax,eax
  42468e:	jne    0x423988
  424694:	lea    eax,[esp+0x78]
  424698:	push   eax
  424699:	push   0x429c87
  42469e:	call   DWORD PTR ds:0x42a2bb
  4246a4:	cmp    eax,0xffffffff
  4246a7:	jne    0x423988
  4246ad:	push   0xf
  4246af:	lea    eax,[esp+0x44]
  4246b3:	push   eax
  4246b4:	push   0x429ca3
  4246b9:	push   0x429cb7
  4246be:	push   0x429cdf
  4246c3:	call   esi
  4246c5:	shl    eax,0x15
  4246c8:	cmp    eax,0x1000000
  4246cd:	jne    0x423988
  4246d3:	push   0x429d07
  4246d8:	call   DWORD PTR ds:0x42a29f
  4246de:	test   eax,eax
  4246e0:	jne    0x423988
  4246e6:	lea    eax,[esp+0x78]
  4246ea:	push   eax
  4246eb:	push   0x429d23
  4246f0:	call   DWORD PTR ds:0x42a2bb
  4246f6:	cmp    eax,0xffffffff
  4246f9:	jne    0x423988
  4246ff:	push   0xf
  424701:	lea    eax,[esp+0x44]
  424705:	push   eax
  424706:	push   0x429d3f
  42470b:	push   0x429d53
  424710:	push   0x429d7b
  424715:	call   esi
  424717:	shl    eax,0x15
  42471a:	cmp    eax,0x1000000
  42471f:	jne    0x423988
  424725:	push   0x429da3
  42472a:	call   DWORD PTR ds:0x42a29f
  424730:	test   eax,eax
  424732:	jne    0x423988
  424738:	lea    eax,[esp+0x78]
  42473c:	push   eax
  42473d:	push   0x429dbf
  424742:	call   DWORD PTR ds:0x42a2bb
  424748:	cmp    eax,0xffffffff
  42474b:	jne    0x423988
  424751:	mov    eax,DWORD PTR [esp+0x3c]
  424755:	cmp    eax,0xf89c85ba
  42475a:	je     0x4247b9
  424760:	mov    eax,DWORD PTR [esp+0x20]
  424764:	mov    ecx,DWORD PTR [esp+0x38]
  424768:	xor    eax,edi
  42476a:	add    eax,ebx
  42476c:	cmp    eax,ecx
  42476e:	je     0x4247b9
  424774:	mov    eax,ds:0x42942f
  424779:	mov    eax,DWORD PTR [eax+0x194]
  42477f:	mov    ecx,DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ecx+0x3c]
  424784:	push   DWORD PTR ds:0x42950f
  42478a:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42478e:	push   DWORD PTR ds:0x4292b3
  424794:	add    eax,ecx
  424796:	mov    ecx,DWORD PTR ds:0x42942f
  42479c:	mov    ecx,DWORD PTR [ecx+0x194]
  4247a2:	push   DWORD PTR [ecx]
  4247a4:	call   eax
  4247a6:	mov    ecx,DWORD PTR ds:0x42942f
  4247ac:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4247b2:	mov    DWORD PTR [ecx],eax
  4247b4:	jmp    0x4249dd
  4247b9:	mov    eax,DWORD PTR [esp+0x20]
  4247bd:	mov    ecx,DWORD PTR [esp+0x60]
  4247c1:	xor    eax,edi
  4247c3:	add    eax,ebx
  4247c5:	cmp    eax,ecx
  4247c7:	jne    0x424830
  4247cd:	mov    eax,DWORD PTR [esp+0x20]
  4247d1:	mov    ecx,DWORD PTR ds:0x42942f
  4247d7:	mov    ecx,DWORD PTR [ecx+0x198]
  4247dd:	xor    eax,edi
  4247df:	add    eax,ebx
  4247e1:	cmp    eax,DWORD PTR [ecx]
  4247e3:	jne    0x424809
  4247e9:	mov    eax,DWORD PTR [esp+0x20]
  4247ed:	push   0xf89c85b9
  4247f2:	xor    eax,edi
  4247f4:	add    eax,ebx
  4247f6:	push   eax
  4247f7:	push   0xf89c85bd
  4247fc:	push   DWORD PTR [esp+0x18]
  424800:	push   DWORD PTR [esp+0x30]
  424804:	call   0x420148
  424809:	push   DWORD PTR [esp+0xc]
  42480d:	push   DWORD PTR [esp+0x24]
  424811:	call   0x401000
  424816:	mov    eax,DWORD PTR [esp+0x20]
  42481a:	xor    eax,edi
  42481c:	add    eax,ebx
  42481e:	mov    ds:0x4294bb,eax
  424823:	mov    eax,DWORD PTR [esp+0x20]
  424827:	xor    eax,edi
  424829:	add    eax,ebx
  42482b:	mov    ds:0x4294b3,eax
  424830:	mov    eax,DWORD PTR [esp+0x2c]
  424834:	test   eax,eax
  424836:	je     0x4249dd
  42483c:	push   0xf
  42483e:	lea    eax,[esp+0x44]
  424842:	push   eax
  424843:	push   0x429ddb
  424848:	mov    DWORD PTR [esp+0x70],0xf152c32
  424850:	push   0x429def
  424855:	mov    DWORD PTR [esp+0x7c],0x712ed2f
  42485d:	mov    DWORD PTR [esp+0x84],0x373fc01
  424868:	push   0x429e17
  42486d:	mov    DWORD PTR [esp+0x7c],0x72670ad1
  424875:	call   esi
  424877:	shl    eax,0x15
  42487a:	cmp    eax,0x1000000
  42487f:	jne    0x423988
  424885:	push   0x429e3f
  42488a:	call   DWORD PTR ds:0x42a29f
  424890:	test   eax,eax
  424892:	jne    0x423988
  424898:	lea    eax,[esp+0x78]
  42489c:	push   eax
  42489d:	push   0x429e5b
  4248a2:	call   DWORD PTR ds:0x42a2bb
  4248a8:	cmp    eax,0xffffffff
  4248ab:	jne    0x423988
  4248b1:	call   0x41da00
  4248b6:	mov    eax,DWORD PTR [esp+0x34]
  4248ba:	mov    eax,DWORD PTR [esp+0xc]
  4248be:	mov    DWORD PTR [esp+0x30],eax
  4248c2:	mov    eax,DWORD PTR [esp+0x20]
  4248c6:	mov    DWORD PTR [esp+0xc],eax
  4248ca:	mov    eax,eax
  4248cc:	mov    eax,ds:0x42942f
  4248d1:	mov    ecx,DWORD PTR [eax+0x1c0]
  4248d7:	mov    edx,DWORD PTR [ecx]
  4248d9:	and    DWORD PTR [esp+0x1c],0x0
  4248de:	mov    esi,0xfabdbeda
  4248e3:	add    edx,esi
  4248e5:	adc    DWORD PTR [esp+0x1c],0xffffffff
  4248ea:	mov    ecx,0x8a29a13b
  4248ef:	xor    edx,ecx
  4248f1:	mov    DWORD PTR [esp+0x10],edx
  4248f5:	mov    edx,DWORD PTR [esp+0x1c]
  4248f9:	xor    edx,0x0
  4248fc:	cmp    DWORD PTR [esp+0x10],0x70941fe0
  424904:	mov    DWORD PTR [esp+0x14],edx
  424908:	jne    0x424917
  42490e:	cmp    edx,0xffffffff
  424911:	je     0x424980
  424917:	mov    eax,DWORD PTR [eax+0x1c8]
  42491d:	mov    eax,DWORD PTR [eax]
  42491f:	cdq    
  424920:	add    eax,esi
  424922:	adc    edx,0xffffffff
  424925:	and    DWORD PTR [esp+0x1c],0x0
  42492a:	xor    edx,0x0
  42492d:	mov    DWORD PTR [esp+0x24],edx
  424931:	mov    edx,DWORD PTR [esp+0xc]
  424935:	mov    DWORD PTR [esp+0x18],edx
  424939:	xor    eax,ecx
  42493b:	add    DWORD PTR [esp+0x18],esi
  42493f:	mov    edx,DWORD PTR [esp+0x18]
  424943:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424948:	xor    edx,ecx
  42494a:	mov    DWORD PTR [esp+0x10],edx
  42494e:	mov    edx,DWORD PTR [esp+0x1c]
  424952:	xor    edx,0x0
  424955:	mov    DWORD PTR [esp+0x14],edx
  424959:	cmp    DWORD PTR [esp+0x10],eax
  42495d:	jne    0x42496f
  424963:	mov    eax,DWORD PTR [esp+0x24]
  424967:	cmp    edx,eax
  424969:	je     0x424980
  42496f:	mov    eax,DWORD PTR [esp+0xc]
  424973:	add    eax,DWORD PTR [esp+0x30]
  424977:	mov    DWORD PTR [esp+0xc],eax
  42497b:	jmp    0x4249dd
  424980:	mov    eax,ds:0x4294b3
  424985:	mov    edx,DWORD PTR ds:0x4294bb
  42498b:	xor    eax,edx
  42498d:	mov    ds:0x4294b3,eax
  424992:	mov    edx,DWORD PTR ds:0x4294b3
  424998:	mov    eax,DWORD PTR [esp+0x2c]
  42499c:	add    DWORD PTR [eax],edx
  42499e:	mov    edx,DWORD PTR [esp+0xc]
  4249a2:	mov    eax,ds:0x4294b3
  4249a7:	xor    edx,edi
  4249a9:	add    edx,ebx
  4249ab:	xor    ebx,ebx
  4249ad:	add    edx,esi
  4249af:	adc    ebx,0xffffffff
  4249b2:	xor    edi,edi
  4249b4:	xor    edx,ecx
  4249b6:	xor    ebx,0x0
  4249b9:	add    eax,esi
  4249bb:	adc    edi,0xffffffff
  4249be:	xor    eax,ecx
  4249c0:	xor    edi,0x0
  4249c3:	cmp    eax,edx
  4249c5:	jne    0x4249dd
  4249cb:	cmp    edi,ebx
  4249cd:	jne    0x4249dd
  4249d3:	mov    eax,ds:0x4294b3
  4249d8:	mov    ds:0x4294bb,eax
  4249dd:	push   0xf
  4249df:	lea    eax,[esp+0x44]
  4249e3:	push   eax
  4249e4:	push   0x429e77
  4249e9:	push   0x429e8b
  4249ee:	push   0x429eb3
  4249f3:	call   DWORD PTR ds:0x42a2cb
  4249f9:	shl    eax,0x15
  4249fc:	cmp    eax,0x1000000
  424a01:	jne    0x423988
  424a07:	push   0x429edb
  424a0c:	call   DWORD PTR ds:0x42a29f
  424a12:	test   eax,eax
  424a14:	jne    0x423988
  424a1a:	lea    eax,[esp+0x78]
  424a1e:	push   eax
  424a1f:	push   0x429ef7
  424a24:	call   DWORD PTR ds:0x42a2bb
  424a2a:	cmp    eax,0xffffffff
  424a2d:	jne    0x423988
  424a33:	mov    eax,ds:0x42942f
  424a38:	push   0x4
  424a3a:	add    eax,0x1cc
  424a3f:	push   eax
  424a40:	lea    eax,[esp+0x3c]
  424a44:	push   eax
  424a45:	call   0x424a59
  424a4a:	mov    eax,DWORD PTR [esp+0x34]
  424a4e:	mov    eax,DWORD PTR [eax]
  424a50:	pop    edi
  424a51:	pop    esi
  424a52:	pop    ebx
  424a53:	mov    esp,ebp
  424a55:	pop    ebp
  424a56:	ret    0xc
  424a59:	push   ebp
  424a5a:	mov    ebp,esp
  424a5c:	sub    esp,0x10
  424a5f:	and    DWORD PTR ds:0x42a17f,0x0
  424a69:	xor    edx,edx
  424a6b:	add    edx,DWORD PTR ds:0x42a17f
  424a71:	inc    edx
  424a72:	mov    DWORD PTR ds:0x42a17f,edx
  424a78:	cmp    DWORD PTR ds:0x42a17f,0xc
  424a7f:	jb     0x424abf
  424a85:	jmp    0x424a98
  424a8a:	push   DWORD PTR [ebp-0xc]
  424a8d:	push   0x4b82
  424a92:	call   DWORD PTR ds:0x42a2c3
  424a98:	cmp    DWORD PTR ds:0x42a17f,0xb
  424a9f:	jne    0x424ab2
  424aa5:	mov    edx,DWORD PTR ds:0x42a17f
  424aab:	inc    edx
  424aac:	mov    DWORD PTR ds:0x42a17f,edx
  424ab2:	cmp    DWORD PTR ds:0x42a17f,0x16
  424ab9:	jb     0x424a69
  424abf:	mov    eax,0xf89c85b9
  424ac4:	mov    DWORD PTR [ebp-0x4],eax
  424ac7:	sbb    ecx,edx
  424ac9:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424ad0:	mov    ecx,DWORD PTR [ebp-0x4]
  424ad3:	mov    DWORD PTR ds:0x42a1bb,0x13
  424add:	cmp    DWORD PTR ds:0x42a1bb,0x0
  424ae4:	je     0x424b1e
  424aea:	cmp    DWORD PTR ds:0x42a1bb,0x1e
  424af1:	jbe    0x424b1e
  424af7:	jmp    0x424b0c
  424afc:	push   0x5b3a
  424b01:	push   0x40cb
  424b06:	call   DWORD PTR ds:0x42a2c7
  424b0c:	mov    edx,DWORD PTR ds:0x42a1bb
  424b12:	dec    edx
  424b13:	mov    DWORD PTR ds:0x42a1bb,edx
  424b19:	jmp    0x424add
  424b1e:	push   esi
  424b1f:	sub    DWORD PTR ds:0x42a1c7,ecx
  424b25:	mov    edx,0x75108a8
  424b2a:	add    DWORD PTR ds:0x42a197,edi
  424b30:	xor    ecx,edx
  424b32:	neg    esi
  424b34:	mov    esi,0x3272ef
  424b39:	adc    DWORD PTR ds:0x42a133,0x42a12f
  424b43:	push   edi
  424b44:	mov    edi,DWORD PTR [ebp+0x10]
  424b47:	add    ecx,esi
  424b49:	mov    DWORD PTR ds:0x42a1a7,0x8eb
  424b53:	cmp    ecx,edi
  424b55:	mov    DWORD PTR ds:0x42a1a7,0x4f38
  424b5f:	je     0x424c90
  424b65:	mov    DWORD PTR ds:0x42a1c7,0x14
  424b6f:	cmp    DWORD PTR ds:0x42a1c7,0x0
  424b76:	je     0x424bd1
  424b7c:	cmp    DWORD PTR ds:0x42a1c7,0xb
  424b83:	jle    0x424bd1
  424b89:	jmp    0x424ba3
  424b8e:	push   0x7f3b
  424b93:	push   0x42a1bb
  424b98:	push   0x400000
  424b9d:	call   DWORD PTR ds:0x42a2cf
  424ba3:	cmp    DWORD PTR ds:0x42a1c7,0xc
  424baa:	jne    0x424bbd
  424bb0:	mov    ecx,DWORD PTR ds:0x42a1c7
  424bb6:	dec    ecx
  424bb7:	mov    DWORD PTR ds:0x42a1c7,ecx
  424bbd:	xor    ecx,ecx
  424bbf:	add    ecx,DWORD PTR ds:0x42a1c7
  424bc5:	dec    ecx
  424bc6:	mov    DWORD PTR ds:0x42a1c7,ecx
  424bcc:	jmp    0x424b6f
  424bd1:	mov    ecx,DWORD PTR [ebp-0x4]
  424bd4:	mov    edi,DWORD PTR [ebp+0x10]
  424bd7:	xor    eax,eax
  424bd9:	xor    ecx,edx
  424bdb:	add    ecx,esi
  424bdd:	add    edi,0xfabdbeda
  424be3:	adc    eax,0xffffffff
  424be6:	xor    eax,0x0
  424be9:	mov    DWORD PTR [ebp-0xc],eax
  424bec:	push   ebx
  424bed:	xor    ebx,ebx
  424bef:	xor    edi,0x8a29a13b
  424bf5:	mov    eax,ecx
  424bf7:	add    eax,0xfabdbeda
  424bfc:	adc    ebx,0xffffffff
  424bff:	xor    eax,0x8a29a13b
  424c04:	xor    ebx,0x0
  424c07:	cmp    eax,edi
  424c09:	jne    0x424c22
  424c0f:	cmp    ebx,DWORD PTR [ebp-0xc]
  424c12:	je     0x424c8a
  424c18:	jmp    0x424c22
  424c1d:	mov    esi,0x3272ef
  424c22:	mov    eax,DWORD PTR [ebp-0x4]
  424c25:	mov    edi,DWORD PTR [ebp-0x8]
  424c28:	xor    edi,edx
  424c2a:	add    edi,esi
  424c2c:	mov    esi,DWORD PTR [ebp+0x8]
  424c2f:	imul   edi,ecx
  424c32:	mov    ebx,DWORD PTR [ebp+0xc]
  424c35:	xor    eax,edx
  424c37:	add    eax,ecx
  424c39:	mov    al,BYTE PTR [ebx+eax*1+0x3272ef]
  424c40:	mov    BYTE PTR [edi+esi*1],al
  424c43:	mov    eax,DWORD PTR [ebp-0x8]
  424c46:	mov    esi,DWORD PTR [ebp+0x10]
  424c49:	xor    eax,edx
  424c4b:	xor    ebx,ebx
  424c4d:	add    esi,0xfabdbeda
  424c53:	adc    ebx,0xffffffff
  424c56:	lea    ecx,[ecx+eax*1+0x3272ef]
  424c5d:	xor    edi,edi
  424c5f:	xor    esi,0x8a29a13b
  424c65:	xor    ebx,0x0
  424c68:	mov    eax,ecx
  424c6a:	add    eax,0xfabdbeda
  424c6f:	adc    edi,0xffffffff
  424c72:	xor    eax,0x8a29a13b
  424c77:	xor    edi,0x0
  424c7a:	cmp    eax,esi
  424c7c:	jne    0x424c1d
  424c82:	cmp    edi,ebx
  424c84:	jne    0x424c1d
  424c8a:	mov    eax,0xf89c85ba
  424c8f:	pop    ebx
  424c90:	pop    edi
  424c91:	pop    esi
  424c92:	leave  
  424c93:	ret    0xc
  424c96:	push   ebp
  424c97:	mov    ebp,esp
  424c99:	push   ecx
  424c9a:	and    edx,DWORD PTR ds:0x42a15b
  424ca0:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  424ca7:	mov    DWORD PTR ds:0x42a14b,0x1b
  424cb1:	cmp    DWORD PTR ds:0x42a14b,0x0
  424cb8:	je     0x424d08
  424cbe:	cmp    DWORD PTR ds:0x42a14b,0xe
  424cc5:	ja     0x424d08
  424ccb:	jmp    0x424ce0
  424cd0:	push   0x42a14f
  424cd5:	push   0x85a8
  424cda:	call   DWORD PTR ds:0x42a2d3
  424ce0:	cmp    DWORD PTR ds:0x42a14b,0xf
  424ce7:	jne    0x424cf8
  424ced:	mov    eax,ds:0x42a14b
  424cf2:	dec    eax
  424cf3:	mov    ds:0x42a14b,eax
  424cf8:	mov    eax,ds:0x42a14b
  424cfd:	dec    eax
  424cfe:	mov    ds:0x42a14b,eax
  424d03:	jmp    0x424cb1
  424d08:	mov    eax,DWORD PTR [ebp+0x8]
  424d0b:	and    DWORD PTR ds:0x42a19b,0x0
  424d15:	mov    edx,DWORD PTR ds:0x42a19b
  424d1b:	inc    edx
  424d1c:	mov    DWORD PTR ds:0x42a19b,edx
  424d22:	cmp    DWORD PTR ds:0x42a19b,0x19
  424d29:	jbe    0x424d47
  424d2f:	jmp    0x424d3a
  424d34:	call   DWORD PTR ds:0x42a293
  424d3a:	cmp    DWORD PTR ds:0x42a19b,0x13
  424d41:	jb     0x424d15
  424d47:	movsx  eax,BYTE PTR [eax]
  424d4a:	mov    edx,0x3272ef
  424d4f:	sub    eax,edx
  424d51:	mov    ecx,0x75108a8
  424d56:	xor    eax,ecx
  424d58:	cmp    eax,0xf89c85f6
  424d5d:	jne    0x424d8c
  424d63:	mov    eax,DWORD PTR [ebp+0x8]
  424d66:	push   esi
  424d67:	mov    esi,DWORD PTR [ebp+0x8]
  424d6a:	add    esi,DWORD PTR [eax+0x3c]
  424d6d:	mov    DWORD PTR [ebp+0x8],esi
  424d70:	mov    eax,DWORD PTR [ebp-0x4]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ecx
  424d78:	add    eax,edx
  424d7a:	cmp    DWORD PTR [esi+0x54],eax
  424d7d:	pop    esi
  424d7e:	je     0x424d8c
  424d84:	mov    eax,DWORD PTR [ebp+0x8]
  424d87:	jmp    0x424d93
  424d8c:	mov    eax,DWORD PTR [ebp-0x4]
  424d8f:	xor    eax,ecx
  424d91:	add    eax,edx
  424d93:	leave  
  424d94:	ret    0x4
  424d97:	push   ebp
  424d98:	mov    ebp,esp
  424d9a:	sub    esp,0xc
  424d9d:	sub    edx,edx
  424d9f:	push   esi
  424da0:	mov    DWORD PTR ds:0x42a14b,0x4414
  424daa:	mov    esi,0xf89c85b9
  424daf:	and    DWORD PTR ds:0x42a147,0x2b27
  424db9:	mov    DWORD PTR [ebp-0x8],esi
  424dbc:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  424dc3:	adc    ecx,ecx
  424dc5:	push   edi
  424dc6:	mov    eax,eax
  424dc8:	neg    ecx
  424dca:	mov    eax,DWORD PTR [ebp-0x4]
  424dcd:	and    DWORD PTR ds:0x42a173,0x0
  424dd7:	jmp    0x424deb
  424ddc:	xor    edi,edi
  424dde:	add    edi,DWORD PTR ds:0x42a173
  424de4:	inc    edi
  424de5:	mov    DWORD PTR ds:0x42a173,edi
  424deb:	cmp    DWORD PTR ds:0x42a173,0x17
  424df2:	jae    0x424e3f
  424df8:	cmp    DWORD PTR ds:0x42a173,0xb
  424dff:	jle    0x424e3f
  424e05:	jmp    0x424e20
  424e0a:	push   DWORD PTR [ebp-0x14]
  424e0d:	push   DWORD PTR [ebp-0x24]
  424e10:	push   0x4290b2
  424e15:	push   0x400000
  424e1a:	call   DWORD PTR ds:0x42a297
  424e20:	cmp    DWORD PTR ds:0x42a173,0xa
  424e27:	jne    0x424e3a
  424e2d:	mov    edi,DWORD PTR ds:0x42a173
  424e33:	inc    edi
  424e34:	mov    DWORD PTR ds:0x42a173,edi
  424e3a:	jmp    0x424ddc
  424e3f:	mov    edi,DWORD PTR [ebp-0x8]
  424e42:	mov    ecx,0x75108a8
  424e47:	xor    eax,ecx
  424e49:	adc    DWORD PTR ds:0x42a183,0x7f13
  424e53:	xor    edi,ecx
  424e55:	mov    edx,0x3272ef
  424e5a:	sub    DWORD PTR ds:0x42a183,0x42a13f
  424e64:	add    edi,edx
  424e66:	add    eax,edx
  424e68:	imul   eax,edi
  424e6b:	not    edi
  424e6d:	mov    edi,DWORD PTR [ebp+0xc]
  424e70:	mov    DWORD PTR ds:0x42a163,0x324
  424e7a:	cmp    edi,eax
  424e7c:	je     0x424ed8
  424e82:	and    DWORD PTR ds:0x42a177,edx
  424e88:	mov    DWORD PTR [ebp-0xc],esi
  424e8b:	mov    eax,DWORD PTR [ebp-0xc]
  424e8e:	inc    esi
  424e8f:	mov    esi,DWORD PTR [ebp+0xc]
  424e92:	xor    eax,ecx
  424e94:	lea    eax,[eax*8+0x19397f0]
  424e9b:	mov    eax,DWORD PTR [esi+eax*1]
  424e9e:	mov    DWORD PTR [ebp+0xc],eax
  424ea1:	mov    eax,DWORD PTR [ebp-0x4]
  424ea4:	mov    esi,DWORD PTR [ebp-0x8]
  424ea7:	xor    eax,ecx
  424ea9:	xor    esi,ecx
  424eab:	add    esi,edx
  424ead:	add    eax,edx
  424eaf:	imul   eax,esi
  424eb2:	mov    esi,DWORD PTR [ebp+0xc]
  424eb5:	cmp    esi,eax
  424eb7:	je     0x424ed8
  424ebd:	mov    eax,DWORD PTR [ebp-0x4]
  424ec0:	xor    eax,ecx
  424ec2:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec5:	add    eax,edx
  424ec7:	imul   eax,ecx
  424eca:	add    eax,DWORD PTR [ebp+0x8]
  424ecd:	mov    DWORD PTR [ebp+0xc],eax
  424ed0:	mov    eax,DWORD PTR [ebp+0xc]
  424ed3:	jmp    0x424ee9
  424ed8:	mov    eax,DWORD PTR [ebp-0x4]
  424edb:	mov    esi,DWORD PTR [ebp-0x8]
  424ede:	xor    esi,ecx
  424ee0:	xor    eax,ecx
  424ee2:	add    esi,edx
  424ee4:	add    eax,edx
  424ee6:	imul   eax,esi
  424ee9:	pop    edi
  424eea:	pop    esi
  424eeb:	leave  
  424eec:	ret    0x8
  424eef:	add    BYTE PTR [eax],al
  424ef1:	add    BYTE PTR [eax],al
  424ef3:	add    BYTE PTR [ebp+0x4de645],dh
  424ef9:	add    BYTE PTR [eax],al
  424efb:	add    BYTE PTR [edx],al
  424efd:	add    BYTE PTR [eax],al
  424eff:	add    BYTE PTR [eax],dh
  424f01:	add    BYTE PTR [eax],al
  424f03:	add    BYTE PTR [eax],dl
  424f05:	dec    edi
  424f06:	add    al,BYTE PTR [eax]
  424f08:	adc    BYTE PTR [ebx+0x2],al
  424f0b:	add    BYTE PTR [eax],al
  424f0d:	add    BYTE PTR [eax],al
  424f0f:	add    BYTE PTR [edx+0x53],dl
  424f12:	inc    esp
  424f13:	push   ebx
  424f14:	mov    bl,0x4
  424f16:	mov    eax,ds:0x24f55b80
  424f1b:	inc    esi
  424f1c:	xchg   esp,eax
  424f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f1e:	popf   
  424f1f:	pop    eax
  424f20:	mov    ebx,0x1d752ea
  424f25:	add    BYTE PTR [eax],al
  424f27:	add    BYTE PTR [esi+0x3a],al
  424f2a:	pop    esp
  424f2b:	push   edi
  424f2c:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  424f33:	inc    esp
  424f34:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  424f3b:	inc    ebp
  424f3c:	js     0x424fa3
  424f3e:	arpl   WORD PTR [eax],ax
  424f40:	mov    edx,DWORD PTR [ebp-0x14]
  424f43:	sub    esp,0x108
  424f49:	push   ebx
  424f4a:	mov    eax,ebx
  424f4c:	xchg   ecx,eax
  424f4d:	mov    eax,DWORD PTR [ebp+0x8]
  424f50:	cmp    eax,0xf89c85b9
  424f55:	jne    0x425417
  424f5b:	mov    eax,DWORD PTR [ebp+0xc]
  424f5e:	cmp    eax,0xf89c85ba
  424f63:	jne    0x425417
  424f69:	mov    eax,DWORD PTR [ebp+0x24]
  424f6c:	mov    DWORD PTR [ebp-0x4],eax
  424f6f:	mov    eax,DWORD PTR [ebp-0x4]
  424f72:	mov    eax,DWORD PTR [eax+0x1d8]
  424f78:	mov    eax,DWORD PTR [eax]
  424f7a:	mov    eax,DWORD PTR [eax]
  424f7c:	mov    DWORD PTR [ebp-0x8],eax
  424f7f:	mov    BYTE PTR [ebp-0x18],0x13
  424f83:	mov    BYTE PTR [ebp-0x17],0x1e
  424f87:	mov    BYTE PTR [ebp-0x16],0x11
  424f8b:	mov    BYTE PTR [ebp-0x15],0x4f
  424f8f:	mov    BYTE PTR [ebp-0x14],0x48
  424f93:	mov    BYTE PTR [ebp-0x13],0x7a
  424f97:	mov    BYTE PTR [ebp-0x20],0xd
  424f9b:	mov    BYTE PTR [ebp-0x1f],0xf
  424f9f:	mov    BYTE PTR [ebp-0x1e],0x1d
  424fa3:	mov    BYTE PTR [ebp-0x1d],0x8
  424fa7:	mov    BYTE PTR [ebp-0x1c],0x4f
  424fab:	mov    BYTE PTR [ebp-0x1b],0x48
  424faf:	mov    BYTE PTR [ebp-0x1a],0x7a
  424fb3:	mov    BYTE PTR [ebp-0x28],0xf
  424fb7:	mov    BYTE PTR [ebp-0x27],0x12
  424fbb:	mov    BYTE PTR [ebp-0x26],0x16
  424fbf:	mov    BYTE PTR [ebp-0x25],0x3
  424fc3:	mov    BYTE PTR [ebp-0x24],0x19
  424fc7:	push   esi
  424fc8:	mov    BYTE PTR [ebp-0x23],0xa
  424fcc:	mov    BYTE PTR [ebp-0x22],0x11
  424fd0:	push   edi
  424fd1:	mov    BYTE PTR [ebp-0x21],0x7a
  424fd5:	xor    esi,esi
  424fd7:	mov    eax,0xff
  424fdc:	lea    ecx,[ebp+esi*1-0x18]
  424fe0:	movzx  edx,BYTE PTR [ecx]
  424fe3:	xor    edx,0x7b
  424fe6:	add    edx,eax
  424fe8:	inc    esi
  424fe9:	mov    BYTE PTR [ecx],dl
  424feb:	cmp    esi,0x6
  424fee:	jb     0x424fdc
  424ff0:	xor    esi,esi
  424ff2:	lea    ecx,[ebp+esi*1-0x20]
  424ff6:	movzx  edx,BYTE PTR [ecx]
  424ff9:	xor    edx,0x7b
  424ffc:	add    edx,eax
  424ffe:	inc    esi
  424fff:	mov    BYTE PTR [ecx],dl
  425001:	cmp    esi,0x7
  425004:	jb     0x424ff2
  425006:	xor    esi,esi
  425008:	lea    ecx,[ebp+esi*1-0x28]
  42500c:	movzx  edx,BYTE PTR [ecx]
  42500f:	xor    edx,0x7b
  425012:	add    edx,eax
  425014:	inc    esi
  425015:	mov    BYTE PTR [ecx],dl
  425017:	cmp    esi,0x8
  42501a:	jb     0x425008
  42501c:	lea    eax,[ebp-0x2c]
  42501f:	mov    DWORD PTR [ebp-0x8],eax
  425022:	mov    ecx,DWORD PTR [ebp-0x8]
  425025:	mov    eax,0x7113fccf
  42502a:	mov    DWORD PTR [ecx],eax
  42502c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42502f:	mov    esi,0x4e31
  425034:	mov    ebx,0x3272ef
  425039:	cmp    ecx,eax
  42503b:	jne    0x425106
  425041:	lea    eax,[esi+0x35]
  425044:	mov    WORD PTR [ebp-0x78],ax
  425048:	mov    eax,esi
  42504a:	mov    WORD PTR [ebp-0x76],ax
  42504e:	add    eax,0x4b
  425051:	mov    WORD PTR [ebp-0x74],ax
  425055:	lea    eax,[esi+0xe]
  425058:	mov    WORD PTR [ebp-0x72],ax
  42505c:	add    eax,0x3f
  42505f:	mov    ecx,eax
  425061:	lea    eax,[esi-0xd]
  425064:	mov    WORD PTR [ebp-0x66],ax
  425068:	mov    eax,esi
  42506a:	mov    WORD PTR [ebp-0x64],ax
  42506e:	add    eax,0xfffffff4
  425071:	mov    WORD PTR [ebp-0x62],ax
  425075:	mov    eax,0x44a
  42507a:	mov    WORD PTR [ebp-0x60],ax
  42507e:	mov    eax,0x567b
  425083:	mov    WORD PTR [ebp-0x5e],ax
  425087:	mov    eax,0x611b
  42508c:	mov    WORD PTR [ebp-0x5c],ax
  425090:	lea    eax,[ebp-0xe0]
  425096:	push   eax
  425097:	mov    eax,DWORD PTR [ebp+0xc]
  42509a:	mov    edi,0x75108a8
  42509f:	xor    eax,edi
  4250a1:	add    eax,ebx
  4250a3:	push   eax
  4250a4:	mov    WORD PTR [ebp-0x70],cx
  4250a8:	lea    ecx,[esi+0xa]
  4250ab:	mov    edx,ecx
  4250ad:	lea    eax,[ebp-0x78]
  4250b0:	push   eax
  4250b1:	mov    eax,DWORD PTR [ebp-0x4]
  4250b4:	mov    eax,DWORD PTR [eax+0x198]
  4250ba:	mov    WORD PTR [ebp-0x6e],dx
  4250be:	mov    edx,0x4f85
  4250c3:	mov    WORD PTR [ebp-0x6c],dx
  4250c7:	mov    DWORD PTR [ebp-0x6a],0x4e7e4e38
  4250ce:	mov    DWORD PTR [ebp-0x5a],0x4e3bf1e9
  4250d5:	mov    DWORD PTR [ebp-0xe0],0x1
  4250df:	mov    DWORD PTR [ebp-0xdc],0x255
  4250e9:	push   DWORD PTR [eax]
  4250eb:	mov    eax,DWORD PTR [ebp+0x10]
  4250ee:	call   eax
  4250f0:	mov    DWORD PTR [ebp-0x8],eax
  4250f3:	mov    eax,DWORD PTR [ebp-0x8]
  4250f6:	test   eax,eax
  4250f8:	je     0x42510b
  4250fa:	xor    DWORD PTR ds:0x76586876,0x87687666
  425104:	jmp    0x42510b
  425106:	mov    edi,0x75108a8
  42510b:	mov    eax,DWORD PTR [ebp-0x4]
  42510e:	mov    ecx,DWORD PTR [eax+0x18c]
  425114:	xor    eax,eax
  425116:	cmp    DWORD PTR [ecx],eax
  425118:	jne    0x42538a
  42511e:	mov    ecx,DWORD PTR [ebp-0x4]
  425121:	mov    ecx,DWORD PTR [ecx+0x17c]
  425127:	mov    DWORD PTR [ecx],eax
  425129:	mov    ecx,DWORD PTR [ebp-0x4]
  42512c:	mov    ecx,DWORD PTR [ecx+0x180]
  425132:	mov    DWORD PTR [ecx],eax
  425134:	mov    eax,0x4e6c
  425139:	mov    WORD PTR [ebp-0x9c],ax
  425140:	mov    eax,esi
  425142:	mov    WORD PTR [ebp-0x9a],ax
  425149:	mov    eax,0x4e7c
  42514e:	mov    WORD PTR [ebp-0x98],ax
  425155:	add    eax,0xffffffc0
  425158:	mov    WORD PTR [ebp-0x96],ax
  42515f:	mov    eax,0x4f81
  425164:	mov    WORD PTR [ebp-0x94],ax
  42516b:	mov    eax,0x4e3d
  425170:	mov    WORD PTR [ebp-0x92],ax
  425177:	add    eax,0x41
  42517a:	mov    WORD PTR [ebp-0x90],ax
  425181:	mov    eax,0x4e3b
  425186:	mov    WORD PTR [ebp-0x8e],ax
  42518d:	mov    eax,esi
  42518f:	mov    WORD PTR [ebp-0x8c],ax
  425196:	mov    eax,0x4e38
  42519b:	mov    WORD PTR [ebp-0x8a],ax
  4251a2:	mov    eax,0x99fc
  4251a7:	mov    WORD PTR [ebp-0x88],ax
  4251ae:	mov    eax,0x8d6d
  4251b3:	mov    WORD PTR [ebp-0x86],ax
  4251ba:	mov    eax,0xd66e
  4251bf:	mov    WORD PTR [ebp-0x84],ax
  4251c6:	mov    eax,0xd78a
  4251cb:	mov    WORD PTR [ebp-0x82],ax
  4251d2:	mov    eax,0x278b
  4251d7:	mov    WORD PTR [ebp-0x80],ax
  4251db:	mov    eax,0x478b
  4251e0:	mov    WORD PTR [ebp-0x7e],ax
  4251e4:	mov    eax,0x4e3a
  4251e9:	push   0x8
  4251eb:	mov    WORD PTR [ebp-0x7c],ax
  4251ef:	mov    DWORD PTR [ebp-0x10],0x316120f
  4251f6:	mov    DWORD PTR [ebp-0xc],0x7a110a19
  4251fd:	lea    eax,[ebp-0x10]
  425200:	pop    ecx
  425201:	mov    dl,BYTE PTR [eax]
  425203:	xor    dl,0x7b
  425206:	dec    dl
  425208:	mov    BYTE PTR [eax],dl
  42520a:	inc    eax
  42520b:	dec    ecx
  42520c:	jne    0x425201
  42520e:	lea    eax,[ebp-0x10]
  425211:	mov    DWORD PTR [ebp-0xdc],eax
  425217:	lea    eax,[ebp-0xe0]
  42521d:	push   eax
  42521e:	mov    eax,DWORD PTR [ebp+0xc]
  425221:	xor    eax,edi
  425223:	add    eax,ebx
  425225:	push   eax
  425226:	mov    eax,DWORD PTR [ebp-0x4]
  425229:	add    eax,0x66
  42522c:	push   eax
  42522d:	mov    eax,DWORD PTR [ebp-0x4]
  425230:	mov    eax,DWORD PTR [eax+0x198]
  425236:	mov    DWORD PTR [ebp-0xe0],0x1
  425240:	push   DWORD PTR [eax]
  425242:	mov    eax,DWORD PTR [ebp+0x10]
  425245:	call   eax
  425247:	mov    ecx,DWORD PTR [ebp+0x8]
  42524a:	xor    ecx,edi
  42524c:	add    ecx,ebx
  42524e:	mov    DWORD PTR [ebp-0x8],eax
  425251:	cmp    eax,ecx
  425253:	jne    0x42526e
  425255:	mov    eax,ds:0x33730bc0
  42525a:	or     eax,0x22150bcf
  42525f:	mov    ds:0x33730bc0,eax
  425264:	add    eax,0x3372e92f
  425269:	mov    ds:0x33730bc0,eax
  42526e:	mov    ecx,0x4e69
  425273:	mov    eax,ecx
  425275:	mov    WORD PTR [ebp-0x40],ax
  425279:	add    eax,0xfffffff9
  42527c:	mov    edx,eax
  42527e:	mov    WORD PTR [ebp-0x3e],dx
  425282:	mov    edx,0x4f9a
  425287:	mov    WORD PTR [ebp-0x3c],dx
  42528b:	add    edx,0xffffffe8
  42528e:	mov    WORD PTR [ebp-0x3a],dx
  425292:	mov    edx,0x4f80
  425297:	mov    WORD PTR [ebp-0x38],dx
  42529b:	add    edx,0xf
  42529e:	mov    WORD PTR [ebp-0x36],dx
  4252a2:	mov    edx,0x4fb6
  4252a7:	mov    WORD PTR [ebp-0x34],dx
  4252ab:	mov    WORD PTR [ebp-0x32],cx
  4252af:	mov    ecx,esi
  4252b1:	mov    WORD PTR [ebp-0x30],cx
  4252b5:	lea    ecx,[edx-0x2d]
  4252b8:	mov    edx,ecx
  4252ba:	mov    WORD PTR [ebp-0x54],dx
  4252be:	mov    edx,eax
  4252c0:	mov    WORD PTR [ebp-0x52],dx
  4252c4:	mov    edx,0x4e7a
  4252c9:	mov    WORD PTR [ebp-0x50],dx
  4252cd:	mov    WORD PTR [ebp-0x4e],ax
  4252d1:	lea    eax,[edx-0x1a]
  4252d4:	mov    WORD PTR [ebp-0x4c],ax
  4252d8:	add    eax,0xf
  4252db:	mov    WORD PTR [ebp-0x4a],ax
  4252df:	lea    eax,[ecx+0xd]
  4252e2:	mov    WORD PTR [ebp-0x48],ax
  4252e6:	mov    WORD PTR [ebp-0x46],cx
  4252ea:	mov    WORD PTR [ebp-0x44],si
  4252ee:	mov    eax,DWORD PTR [ebp+0x8]
  4252f1:	movzx  ecx,WORD PTR [ebp-0x54]
  4252f5:	xor    eax,edi
  4252f7:	add    eax,ebx
  4252f9:	xor    eax,ecx
  4252fb:	mov    WORD PTR [ebp-0x54],ax
  4252ff:	mov    eax,DWORD PTR [ebp+0x8]
  425302:	movzx  ecx,WORD PTR [ebp-0x40]
  425306:	xor    eax,edi
  425308:	add    eax,ebx
  42530a:	xor    eax,ecx
  42530c:	mov    WORD PTR [ebp-0x40],ax
  425310:	xor    eax,eax
  425312:	mov    WORD PTR [ebp-0xf4],ax
  425319:	mov    WORD PTR [ebp-0x108],ax
  425320:	mov    edi,DWORD PTR [ebp+0x24]
  425323:	lea    eax,[ebp-0xf4]
  425329:	lea    edx,[ebp-0x54]
  42532c:	mov    DWORD PTR [ebp-0xe0],0x2
  425336:	mov    DWORD PTR [ebp-0xdc],eax
  42533c:	call   0x427d73
  425341:	mov    DWORD PTR [ebp-0xd8],eax
  425347:	lea    eax,[ebp-0xe0]
  42534d:	push   eax
  42534e:	mov    eax,DWORD PTR [ebp+0xc]
  425351:	xor    eax,0x75108a8
  425356:	add    eax,ebx
  425358:	push   eax
  425359:	lea    eax,[ebp-0x9c]
  42535f:	push   eax
  425360:	push   DWORD PTR [ebp-0x8]
  425363:	mov    eax,DWORD PTR [ebp+0x10]
  425366:	call   eax
  425368:	mov    edi,DWORD PTR [ebp+0x24]
  42536b:	lea    eax,[ebp-0x108]
  425371:	lea    edx,[ebp-0x40]
  425374:	mov    DWORD PTR [ebp-0xdc],eax
  42537a:	call   0x427d73
  42537f:	mov    DWORD PTR [ebp-0xd8],eax
  425385:	mov    edi,0x75108a8
  42538a:	mov    eax,DWORD PTR [ebp+0x14]
  42538d:	push   DWORD PTR [ebp-0x4]
  425390:	push   DWORD PTR [ebp+0x20]
  425393:	push   DWORD PTR [ebp+0x1c]
  425396:	push   DWORD PTR [ebp+0x18]
  425399:	push   DWORD PTR [ebp+0x10]
  42539c:	push   DWORD PTR [ebp+0x8]
  42539f:	push   DWORD PTR [ebp+0xc]
  4253a2:	call   0x426614
  4253a7:	test   eax,eax
  4253a9:	je     0x4253ed
  4253ab:	add    DWORD PTR [ebp-0x4],eax
  4253ae:	push   DWORD PTR [ebp-0x4]
  4253b1:	lea    esi,[ebp+0x4]
  4253b4:	call   0x425805
  4253b9:	mov    eax,DWORD PTR [ebp-0x4]
  4253bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4253c2:	mov    eax,DWORD PTR [eax]
  4253c4:	xor    eax,edi
  4253c6:	add    eax,ebx
  4253c8:	mov    eax,DWORD PTR [ebp-0x4]
  4253cb:	jne    0x4253e3
  4253cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4253d0:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4253d6:	push   DWORD PTR [ecx]
  4253d8:	mov    eax,DWORD PTR [eax+0x1e0]
  4253de:	call   DWORD PTR [eax+0x28]
  4253e1:	jmp    0x4253ed
  4253e3:	mov    eax,DWORD PTR [eax+0x17c]
  4253e9:	mov    eax,DWORD PTR [eax]
  4253eb:	add    DWORD PTR [esi],eax
  4253ed:	mov    eax,DWORD PTR [ebp-0x4]
  4253f0:	mov    eax,DWORD PTR [eax+0x1dc]
  4253f6:	dec    DWORD PTR [eax]
  4253f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4253fb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425401:	mov    eax,DWORD PTR [eax]
  425403:	lea    eax,[ecx+eax*4]
  425406:	mov    ecx,DWORD PTR [ebp-0x4]
  425409:	mov    ecx,DWORD PTR [ecx+0x17c]
  42540f:	mov    eax,DWORD PTR [eax]
  425411:	mov    ecx,DWORD PTR [ecx]
  425413:	add    DWORD PTR [eax],ecx
  425415:	pop    edi
  425416:	pop    esi
  425417:	pop    ebx
  425418:	leave  
  425419:	ret    0x20
  42541c:	push   edi
  42541d:	push   esi
  42541e:	push   ebx
  42541f:	push   ebp
  425420:	mov    ebp,esp
  425422:	mov    eax,DWORD PTR [ebp+0x24]
  425425:	add    DWORD PTR [ebp+0x28],eax
  425428:	push   eax
  425429:	cld    
  42542a:	mov    esi,DWORD PTR [ebp+0x18]
  42542d:	add    DWORD PTR [ebp+0x1c],esi
  425430:	push   esi
  425431:	mov    esi,DWORD PTR [ebp+0x14]
  425434:	lods   eax,DWORD PTR ds:[esi]
  425435:	xchg   edx,eax
  425436:	push   edx
  425437:	mov    cl,BYTE PTR [esi-0x2]
  42543a:	or     eax,0xffffffff
  42543d:	shl    eax,cl
  42543f:	not    eax
  425441:	push   eax
  425442:	mov    cl,dh
  425444:	or     eax,0xffffffff
  425447:	shl    eax,cl
  425449:	not    eax
  42544b:	push   eax
  42544c:	add    cl,dl
  42544e:	mov    edi,esi
  425450:	sub    esp,0xc
  425453:	sub    eax,eax
  425455:	inc    eax
  425456:	push   eax
  425457:	push   eax
  425458:	push   eax
  425459:	push   eax
  42545a:	push   eax
  42545b:	push   edi
  42545c:	sub    esi,esi
  42545e:	push   esi
  42545f:	or     ebx,0xffffffff
  425462:	mov    eax,0x300
  425467:	shl    eax,cl
  425469:	lea    ecx,[eax+0x736]
  42546f:	mov    eax,0x4000400
  425474:	shr    ecx,1
  425476:	rep stos DWORD PTR es:[edi],eax
  425478:	push   0x5
  42547a:	pop    ecx
  42547b:	call   0x425766
  425480:	loop   0x42547b
  425482:	lea    esi,[esi]
  425484:	lea    edi,[edi]
  425486:	mov    edi,DWORD PTR [ebp-0x4]
  425489:	mov    eax,DWORD PTR [ebp-0x10]
  42548c:	sub    edi,DWORD PTR [ebp+0x24]
  42548f:	and    eax,edi
  425491:	mov    DWORD PTR [ebp-0x18],eax
  425494:	mov    al,0x0
  425496:	call   0x42577e
  42549b:	jne    0x425536
  4254a1:	mov    cl,BYTE PTR [ebp-0xc]
  4254a4:	and    edi,DWORD PTR [ebp-0x14]
  4254a7:	shl    edi,cl
  4254a9:	sub    cl,0x8
  4254ac:	neg    cl
  4254ae:	shr    esi,cl
  4254b0:	pop    eax
  4254b1:	add    edi,esi
  4254b3:	pop    esi
  4254b4:	lea    edi,[edi+edi*2]
  4254b7:	shl    edi,0x8
  4254ba:	cmp    al,0x7
  4254bc:	pop    edx
  4254bd:	lea    ecx,[esi+edi*2+0xe6c]
  4254c4:	push   ecx
  4254c5:	push   esi
  4254c6:	mov    esi,0x100
  4254cb:	push   eax
  4254cc:	mov    al,0x1
  4254ce:	jb     0x425504
  4254d0:	mov    edi,DWORD PTR [ebp-0x4]
  4254d3:	sub    edi,DWORD PTR [ebp-0x24]
  4254d6:	movzx  edi,BYTE PTR [edi]
  4254d9:	mov    ebp,DWORD PTR [ebp-0x34]
  4254dc:	shl    edi,1
  4254de:	mov    ecx,esi
  4254e0:	and    esi,edi
  4254e2:	add    ecx,esi
  4254e4:	lea    ebp,[ebp+ecx*2+0x0]
  4254e8:	call   0x42579d
  4254ed:	mov    ecx,eax
  4254ef:	shr    esi,0x8
  4254f2:	and    ecx,0x1
  4254f5:	cmp    esi,ecx
  4254f7:	mov    esi,0x100
  4254fc:	jne    0x42550c
  4254fe:	cmp    eax,esi
  425500:	jb     0x4254d9
  425502:	jmp    0x425518
  425504:	mov    ebp,DWORD PTR [ebp-0x34]
  425507:	call   0x42579d
  42550c:	inc    eax
  42550d:	inc    esi
  42550e:	sub    eax,0x1
  425511:	sub    esi,0x1
  425514:	cmp    eax,esi
  425516:	jb     0x425504
  425518:	pop    edx
  425519:	inc    edx
  42551a:	cmp    edx,0x5
  42551d:	dec    edx
  42551e:	mov    ecx,edx
  425520:	jb     0x425531
  425522:	inc    edx
  425523:	cmp    edx,0xb
  425526:	dec    edx
  425527:	mov    cl,0x4
  425529:	dec    cl
  42552b:	jb     0x425531
  42552d:	mov    cl,0x7
  42552f:	dec    cl
  425531:	sub    edx,ecx
  425533:	push   edx
  425534:	jmp    0x425585
  425536:	mov    al,0xc1
  425538:	dec    al
  42553a:	call   0x42578e
  42553f:	jne    0x425555
  425541:	pop    eax
  425542:	pop    edi
  425543:	pop    edx
  425544:	pop    ecx
  425545:	pop    edx
  425546:	pop    ecx
  425547:	push   DWORD PTR [esp]
  42554a:	push   ecx
  42554b:	push   edx
  42554c:	mov    edx,0x664
  425551:	mov    cl,0x0
  425553:	jmp    0x4255c8
  425555:	mov    al,0xcd
  425557:	dec    al
  425559:	call   0x42578e
  42555e:	jne    0x42558e
  425560:	mov    al,0xf1
  425562:	dec    al
  425564:	call   0x42577e
  425569:	jne    0x4255be
  42556b:	pop    eax
  42556c:	cmp    al,0x7
  42556e:	mov    al,0x9
  425570:	jb     0x425574
  425572:	mov    al,0xb
  425574:	push   eax
  425575:	mov    esi,DWORD PTR [ebp-0x4]
  425578:	sub    esi,DWORD PTR [ebp-0x24]
  42557b:	cmp    esi,DWORD PTR [ebp+0x24]
  42557e:	jb     0x425755
  425584:	lods   al,BYTE PTR ds:[esi]
  425585:	mov    edi,DWORD PTR [ebp-0x4]
  425588:	stos   BYTE PTR es:[edi],al
  425589:	jmp    0x42571c
  42558e:	mov    al,0xd8
  425590:	call   0x42578e
  425595:	mov    esi,DWORD PTR [ebp-0x28]
  425598:	je     0x4255b5
  42559a:	mov    al,0xe4
  42559c:	call   0x42578e
  4255a1:	mov    esi,DWORD PTR [ebp-0x2c]
  4255a4:	je     0x4255af
  4255a6:	mov    esi,DWORD PTR [ebp-0x30]
  4255a9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4255ac:	mov    DWORD PTR [ebp-0x30],ecx
  4255af:	mov    ecx,DWORD PTR [ebp-0x28]
  4255b2:	mov    DWORD PTR [ebp-0x2c],ecx
  4255b5:	mov    ecx,DWORD PTR [ebp-0x24]
  4255b8:	mov    DWORD PTR [ebp-0x28],ecx
  4255bb:	mov    DWORD PTR [ebp-0x24],esi
  4255be:	pop    eax
  4255bf:	pop    edi
  4255c0:	pop    ecx
  4255c1:	mov    edx,0xa68
  4255c6:	mov    cl,0x8
  4255c8:	add    edx,edi
  4255ca:	push   edx
  4255cb:	push   edi
  4255cc:	cmp    al,0x7
  4255ce:	mov    al,cl
  4255d0:	jb     0x4255d4
  4255d2:	add    al,0x3
  4255d4:	push   eax
  4255d5:	mov    ebp,DWORD PTR [ebp-0x34]
  4255d8:	call   0x42579b
  4255dd:	jne    0x4255f3
  4255df:	mov    eax,DWORD PTR [ebp-0x18]
  4255e2:	mov    edi,DWORD PTR [ebp-0x34]
  4255e5:	shl    eax,0x3
  4255e8:	sub    ecx,ecx
  4255ea:	push   0x8
  4255ec:	pop    esi
  4255ed:	lea    edi,[edi+eax*2+0x4]
  4255f1:	jmp    0x425628
  4255f3:	mov    ebp,DWORD PTR [ebp-0x34]
  4255f6:	add    ebp,0x2
  4255f9:	call   0x42579b
  4255fe:	jne    0x425618
  425600:	mov    eax,DWORD PTR [ebp-0x18]
  425603:	mov    edi,DWORD PTR [ebp-0x34]
  425606:	shl    eax,0x3
  425609:	push   0x8
  42560b:	pop    ecx
  42560c:	push   0x8
  42560e:	pop    esi
  42560f:	lea    edi,[edi+eax*2+0x104]
  425616:	jmp    0x425628
  425618:	mov    edi,0x204
  42561d:	add    edi,DWORD PTR [ebp-0x34]
  425620:	push   0x10
  425622:	pop    ecx
  425623:	mov    esi,0x100
  425628:	mov    DWORD PTR [ebp-0x1c],ecx
  42562b:	sub    eax,eax
  42562d:	inc    eax
  42562e:	mov    ebp,edi
  425630:	call   0x42579d
  425635:	mov    ecx,eax
  425637:	sub    ecx,esi
  425639:	jb     0x42562e
  42563b:	add    DWORD PTR [ebp-0x1c],ecx
  42563e:	cmp    DWORD PTR [ebp-0x3c],0x4
  425642:	jae    0x4256f8
  425648:	add    DWORD PTR [ebp-0x3c],0x7
  42564c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42564f:	cmp    ecx,0x4
  425652:	jb     0x425657
  425654:	push   0x3
  425656:	pop    ecx
  425657:	mov    edi,DWORD PTR [ebp-0x38]
  42565a:	shl    ecx,0x6
  42565d:	sub    eax,eax
  42565f:	inc    eax
  425660:	push   0x40
  425662:	pop    esi
  425663:	lea    edi,[edi+ecx*2+0x360]
  42566a:	mov    ebp,edi
  42566c:	call   0x42579d
  425671:	mov    ecx,eax
  425673:	sub    ecx,esi
  425675:	jb     0x42566a
  425677:	mov    DWORD PTR [ebp-0x18],ecx
  42567a:	mov    DWORD PTR [ebp-0x24],ecx
  42567d:	cmp    ecx,0x4
  425680:	jb     0x4256f5
  425682:	mov    esi,ecx
  425684:	and    DWORD PTR [ebp-0x24],0x1
  425688:	shr    esi,1
  42568a:	or     DWORD PTR [ebp-0x24],0x2
  42568e:	dec    esi
  42568f:	cmp    ecx,0xe
  425692:	jae    0x4256ad
  425694:	mov    eax,0x2af
  425699:	sub    eax,ecx
  42569b:	mov    ecx,esi
  42569d:	shl    BYTE PTR [ebp-0x24],cl
  4256a0:	add    eax,DWORD PTR [ebp-0x24]
  4256a3:	shl    eax,1
  4256a5:	add    eax,DWORD PTR [ebp-0x38]
  4256a8:	mov    DWORD PTR [ebp-0x34],eax
  4256ab:	jmp    0x4256da
  4256ad:	sub    esi,0x4
  4256b0:	call   0x42575a
  4256b5:	shr    ebx,1
  4256b7:	shl    DWORD PTR [ebp-0x24],1
  4256ba:	cmp    DWORD PTR [ebp-0x20],ebx
  4256bd:	jb     0x4256c5
  4256bf:	inc    DWORD PTR [ebp-0x24]
  4256c2:	sub    DWORD PTR [ebp-0x20],ebx
  4256c5:	dec    esi
  4256c6:	jne    0x4256b0
  4256c8:	mov    eax,0x644
  4256cd:	add    eax,DWORD PTR [ebp-0x38]
  4256d0:	mov    DWORD PTR [ebp-0x34],eax
  4256d3:	shl    DWORD PTR [ebp-0x24],0x4
  4256d7:	push   0x4
  4256d9:	pop    esi
  4256da:	sub    edi,edi
  4256dc:	inc    edi
  4256dd:	mov    eax,edi
  4256df:	mov    ebp,DWORD PTR [ebp-0x34]
  4256e2:	call   0x42579d
  4256e7:	test   al,0x1
  4256e9:	je     0x4256ee
  4256eb:	or     DWORD PTR [ebp-0x24],edi
  4256ee:	shl    edi,1
  4256f0:	dec    esi
  4256f1:	jne    0x4256df
  4256f3:	jmp    0x4256f5
  4256f5:	inc    DWORD PTR [ebp-0x24]
  4256f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4256fb:	add    ecx,0x2
  4256fe:	mov    edi,DWORD PTR [ebp-0x4]
  425701:	mov    eax,edi
  425703:	sub    eax,DWORD PTR [ebp+0x24]
  425706:	cmp    DWORD PTR [ebp-0x24],eax
  425709:	ja     0x425755
  42570b:	mov    esi,edi
  42570d:	sub    esi,DWORD PTR [ebp-0x24]
  425710:	mov    edx,DWORD PTR [ebp+0x28]
  425713:	lods   al,BYTE PTR ds:[esi]
  425714:	stos   BYTE PTR es:[edi],al
  425715:	cmp    edi,edx
  425717:	jae    0x42571c
  425719:	dec    ecx
  42571a:	jne    0x425713
  42571c:	mov    DWORD PTR [ebp-0x4],edi
  42571f:	movzx  esi,al
  425722:	cmp    edi,DWORD PTR [ebp+0x28]
  425725:	jb     0x425486
  42572b:	call   0x42575a
  425730:	sub    eax,eax
  425732:	lea    ebp,[esp+0x3c]
  425736:	mov    edx,DWORD PTR [ebp+0x20]
  425739:	mov    esi,DWORD PTR [ebp-0x8]
  42573c:	sub    esi,DWORD PTR [ebp+0x18]
  42573f:	mov    DWORD PTR [ebp-0x4d],ecx
  425742:	fidiv  DWORD PTR ds:0x31787ab3
  425748:	jp     0x42575f
  42574a:	stos   DWORD PTR es:[edi],eax
  42574b:	ins    DWORD PTR es:[edi],dx
  42574c:	lods   al,BYTE PTR ds:[esi]
  42574d:	repnz inc BYTE PTR [edx]
  425750:	nop
  425751:	cmc    
  425752:	test   esi,edi
  425754:	out    0x31,al
  425756:	mov    BYTE PTR [esi+0x748be834],al
  42575c:	test   DWORD PTR [ebp-0x76b1767b],eax
  425762:	xchg   esp,eax
  425763:	mov    WORD PTR [eiz*4+0x685ab3de],ss
  42576a:	jno    0x4257c6
  42576c:	cmc    
  42576d:	push   edx
  42576e:	sbb    BYTE PTR [ebx+0x88c089a],dh
  425774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425775:	aaa    
  425776:	stos   DWORD PTR es:[edi],eax
  425777:	call   0x94fe:0x685aab08
  42577e:	mov    bl,0xba
  425780:	cwde   
  425781:	rcr    DWORD PTR [edi-0x78],0x8c
  425785:	or     al,0x95
  425787:	xchg   ecx,eax
  425788:	call   0xc19d:0x348c9128
  42578f:	pop    edi
  425790:	mov    BYTE PTR [ecx+0x3ab3989a],dl
  425796:	test   al,0xbb
  425798:	ss call 0x9a36:0xbb883185
  4257a0:	test   DWORD PTR [ebx-0x7a7a7a8c],ecx
  4257a6:	mov    DWORD PTR [edx-0xb],edx
  4257a9:	mov    bl,0xb6
  4257ab:	adc    eax,0x15168c65
  4257b0:	add    eax,0x15b671a5
  4257b5:	not    BYTE PTR [edx-0x9]
  4257b8:	scas   eax,DWORD PTR es:[edi]
  4257b9:	leave  
  4257ba:	test   BYTE PTR [esi+0x148c6515],dl
  4257c0:	or     BYTE PTR [eax-0x74dfdbac],cl
  4257c6:	retf   
  4257c7:	movzx  edx,WORD PTR [ebp+0x0]
  4257cb:	shr    ecx,0xb
  4257ce:	imul   ecx,edx
  4257d1:	cmp    DWORD PTR [esp+0x20],ecx
  4257d5:	jae    0x4257ee
  4257d7:	mov    ebx,ecx
  4257d9:	mov    ecx,0x800
  4257de:	sub    ecx,edx
  4257e0:	shr    ecx,0x5
  4257e3:	add    WORD PTR [ebp+0x0],cx
  4257e7:	add    eax,eax
  4257e9:	lea    ebp,[esp+0x40]
  4257ed:	ret    
  4257ee:	shr    edx,0x5
  4257f1:	sub    DWORD PTR [esp+0x20],ecx
  4257f5:	sub    ebx,ecx
  4257f7:	sub    WORD PTR [ebp+0x0],dx
  4257fb:	add    eax,eax
  4257fd:	add    eax,0x1
  425800:	lea    ebp,[esp+0x40]
  425804:	ret    
  425805:	push   ebp
  425806:	mov    ebp,esp
  425808:	sub    esp,0x12c
  42580e:	push   ebx
  42580f:	push   esi
  425810:	push   edi
  425811:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  425818:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42581f:	mov    eax,DWORD PTR [ebp+0x8]
  425822:	mov    DWORD PTR [ebp+0x8],eax
  425825:	mov    ecx,DWORD PTR [ebp-0x10]
  425828:	mov    ebx,0x75108a8
  42582d:	xor    ecx,ebx
  42582f:	mov    eax,0x3272ef
  425834:	add    ecx,eax
  425836:	mov    DWORD PTR [ebp-0x24],ecx
  425839:	mov    ecx,DWORD PTR [ebp-0x10]
  42583c:	xor    ecx,ebx
  42583e:	add    ecx,eax
  425840:	mov    DWORD PTR [ebp-0x40],ecx
  425843:	mov    ecx,DWORD PTR [ebp-0x10]
  425846:	xor    ecx,ebx
  425848:	add    ecx,eax
  42584a:	mov    DWORD PTR [ebp-0x3c],ecx
  42584d:	mov    ecx,DWORD PTR [ebp-0x10]
  425850:	xor    ecx,ebx
  425852:	add    ecx,eax
  425854:	mov    DWORD PTR [ebp-0xd8],ecx
  42585a:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  425861:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  425868:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  42586f:	push   0x25
  425871:	pop    ecx
  425872:	mov    DWORD PTR [ebp-0x30],ecx
  425875:	mov    DWORD PTR [ebp-0x30],ecx
  425878:	push   0x65
  42587a:	pop    ecx
  42587b:	mov    DWORD PTR [ebp-0x30],ecx
  42587e:	mov    DWORD PTR [ebp-0x30],ecx
  425881:	mov    DWORD PTR [ebp-0x30],0x4d
  425888:	mov    DWORD PTR [ebp-0x30],0x43
  42588f:	mov    ecx,DWORD PTR [ebp-0x10]
  425892:	xor    ecx,ebx
  425894:	add    ecx,eax
  425896:	mov    DWORD PTR [ebp-0x30],ecx
  425899:	mov    ecx,DWORD PTR [ebp-0x10]
  42589c:	xor    ecx,ebx
  42589e:	add    ecx,eax
  4258a0:	mov    DWORD PTR [ebp-0x30],ecx
  4258a3:	mov    DWORD PTR [ebp-0x28],0x258
  4258aa:	mov    DWORD PTR [ebp-0x34],0x36
  4258b1:	mov    DWORD PTR [ebp-0x14],0x7a
  4258b8:	lea    edi,[ebp-0x10c]
  4258be:	lea    esi,[ebp-0x12c]
  4258c4:	call   0x426583
  4258c9:	dec    DWORD PTR [ebp-0x14]
  4258cc:	jne    0x4258b8
  4258ce:	dec    DWORD PTR [ebp-0x34]
  4258d1:	jne    0x4258b1
  4258d3:	dec    DWORD PTR [ebp-0x28]
  4258d6:	jne    0x4258aa
  4258d8:	mov    DWORD PTR [ebp-0x28],0x400e
  4258df:	mov    eax,DWORD PTR [ebp-0x10]
  4258e2:	xor    eax,ebx
  4258e4:	mov    esi,0x3272ef
  4258e9:	add    eax,esi
  4258eb:	mov    DWORD PTR [ebp-0x1c],eax
  4258ee:	mov    eax,DWORD PTR [ebp-0x10]
  4258f1:	and    DWORD PTR [ebp-0x94],0x0
  4258f8:	xor    eax,ebx
  4258fa:	add    eax,esi
  4258fc:	mov    DWORD PTR [ebp-0x38],eax
  4258ff:	mov    eax,fs:0x18
  425905:	mov    DWORD PTR [ebp-0x94],eax
  42590b:	mov    eax,DWORD PTR [eax+0x30]
  42590e:	mov    DWORD PTR [ebp-0xcc],eax
  425914:	mov    eax,DWORD PTR [eax+0xc]
  425917:	mov    DWORD PTR [ebp-0xc0],eax
  42591d:	mov    eax,DWORD PTR [ebp+0x8]
  425920:	lea    ecx,[ebp-0x94]
  425926:	mov    DWORD PTR [eax+0x1a0],ecx
  42592c:	mov    eax,DWORD PTR [ebp+0x8]
  42592f:	lea    ecx,[ebp-0xcc]
  425935:	mov    DWORD PTR [eax+0x1a4],ecx
  42593b:	mov    eax,DWORD PTR [ebp+0x8]
  42593e:	push   DWORD PTR [ebp+0x8]
  425941:	lea    ecx,[ebp-0xc0]
  425947:	mov    DWORD PTR [eax+0x1a8],ecx
  42594d:	call   0x427d44
  425952:	mov    ecx,DWORD PTR [ebp-0x10]
  425955:	xor    ecx,ebx
  425957:	add    ecx,esi
  425959:	cmp    ecx,eax
  42595b:	je     0x425cde
  425961:	mov    eax,DWORD PTR [ebp+0x8]
  425964:	mov    eax,DWORD PTR [eax+0x194]
  42596a:	mov    ecx,DWORD PTR [eax]
  42596c:	mov    eax,DWORD PTR [ebp+0x8]
  42596f:	mov    eax,DWORD PTR [eax+0x194]
  425975:	mov    eax,DWORD PTR [eax]
  425977:	add    eax,DWORD PTR [ecx+0x3c]
  42597a:	mov    ecx,DWORD PTR [ebp+0x8]
  42597d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425983:	lea    edx,[ebp-0xec]
  425989:	push   edx
  42598a:	mov    edx,DWORD PTR [ebp+0x8]
  42598d:	mov    edx,DWORD PTR [edx+0x18c]
  425993:	mov    edx,DWORD PTR [edx]
  425995:	add    edx,DWORD PTR [eax+0x88]
  42599b:	push   0x4
  42599d:	push   DWORD PTR [eax+0x8c]
  4259a3:	push   edx
  4259a4:	call   DWORD PTR [ecx+0x1c]
  4259a7:	push   DWORD PTR [ebp+0x8]
  4259aa:	xor    eax,eax
  4259ac:	mov    DWORD PTR [ebp-0xa8],0x123f0f31
  4259b6:	mov    DWORD PTR [ebp-0xa4],0xb360819
  4259c0:	mov    DWORD PTR [ebp-0xa0],0x39081d03
  4259ca:	mov    BYTE PTR [ebp-0x9c],0x7a
  4259d1:	lea    edi,[ebp-0x9b]
  4259d7:	stos   DWORD PTR es:[edi],eax
  4259d8:	stos   WORD PTR es:[edi],ax
  4259da:	stos   BYTE PTR es:[edi],al
  4259db:	xor    eax,eax
  4259dd:	mov    DWORD PTR [ebp-0xbc],0x123f0f31
  4259e7:	mov    DWORD PTR [ebp-0xb8],0xb360819
  4259f1:	mov    DWORD PTR [ebp-0xb4],0x23081d03
  4259fb:	mov    BYTE PTR [ebp-0xb0],0x7a
  425a02:	lea    edi,[ebp-0xaf]
  425a08:	stos   DWORD PTR es:[edi],eax
  425a09:	stos   WORD PTR es:[edi],ax
  425a0b:	stos   BYTE PTR es:[edi],al
  425a0c:	mov    edi,DWORD PTR [ebp+0x8]
  425a0f:	mov    eax,DWORD PTR [ebp+0x8]
  425a12:	mov    edx,DWORD PTR [eax+0x1b8]
  425a18:	mov    DWORD PTR [ebp-0x68],0x80e0f16
  425a1f:	mov    DWORD PTR [ebp-0x64],0x110a151f
  425a26:	mov    WORD PTR [ebp-0x60],0x7a39
  425a2c:	mov    DWORD PTR [ebp-0x90],0x123f0f31
  425a36:	mov    DWORD PTR [ebp-0x8c],0x16390819
  425a40:	mov    DWORD PTR [ebp-0x88],0x3419120a
  425a4a:	mov    DWORD PTR [ebp-0x84],0x81d150d
  425a54:	mov    DWORD PTR [ebp-0x80],0x7a391f11
  425a5b:	mov    DWORD PTR [ebp-0x7c],0x123f0f31
  425a62:	mov    DWORD PTR [ebp-0x78],0x16390819
  425a69:	mov    DWORD PTR [ebp-0x74],0x3419120a
  425a70:	mov    DWORD PTR [ebp-0x70],0x81d150d
  425a77:	mov    DWORD PTR [ebp-0x6c],0x7a231f11
  425a7e:	call   0x427d73
  425a83:	push   eax
  425a84:	mov    eax,DWORD PTR [ebp+0x8]
  425a87:	mov    eax,DWORD PTR [eax+0x1a8]
  425a8d:	push   DWORD PTR [eax]
  425a8f:	call   0x427a14
  425a94:	test   eax,eax
  425a96:	jne    0x425ae8
  425a98:	mov    eax,DWORD PTR [ebp+0x8]
  425a9b:	mov    eax,DWORD PTR [eax+0x1e0]
  425aa1:	mov    edi,DWORD PTR [ebp+0x8]
  425aa4:	add    eax,0x4
  425aa7:	mov    DWORD PTR [ebp-0x20],eax
  425aaa:	mov    eax,DWORD PTR [ebp+0x8]
  425aad:	mov    edx,DWORD PTR [eax+0x1b8]
  425ab3:	call   0x427d73
  425ab8:	push   eax
  425ab9:	mov    eax,DWORD PTR [ebp-0x20]
  425abc:	call   DWORD PTR [eax]
  425abe:	test   eax,eax
  425ac0:	jne    0x425ae8
  425ac2:	mov    eax,DWORD PTR [ebp+0x8]
  425ac5:	mov    eax,DWORD PTR [eax+0x1e0]
  425acb:	mov    edi,DWORD PTR [ebp+0x8]
  425ace:	add    eax,0x10
  425ad1:	mov    DWORD PTR [ebp-0x20],eax
  425ad4:	mov    eax,DWORD PTR [ebp+0x8]
  425ad7:	mov    edx,DWORD PTR [eax+0x1b8]
  425add:	call   0x427d73
  425ae2:	push   eax
  425ae3:	mov    eax,DWORD PTR [ebp-0x20]
  425ae6:	call   DWORD PTR [eax]
  425ae8:	mov    eax,DWORD PTR [ebp-0x10]
  425aeb:	mov    ecx,DWORD PTR [ebp-0x28]
  425aee:	xor    eax,ebx
  425af0:	add    eax,esi
  425af2:	cmp    eax,ecx
  425af4:	je     0x425cb7
  425afa:	mov    eax,DWORD PTR [ebp-0x18]
  425afd:	xor    eax,ebx
  425aff:	mov    ecx,0xffcd8d11
  425b04:	sub    ecx,eax
  425b06:	add    ecx,DWORD PTR [ebp-0x28]
  425b09:	mov    eax,DWORD PTR [ebp-0x1c]
  425b0c:	cmp    eax,ecx
  425b0e:	ja     0x425cb7
  425b14:	mov    DWORD PTR [ebp-0x34],0x0
  425b1b:	push   DWORD PTR [ebp+0x8]
  425b1e:	mov    edi,DWORD PTR [ebp+0x8]
  425b21:	mov    eax,DWORD PTR [ebp+0x8]
  425b24:	mov    edx,DWORD PTR [eax+0x1b4]
  425b2a:	call   0x427d73
  425b2f:	push   eax
  425b30:	mov    eax,DWORD PTR [ebp+0x8]
  425b33:	mov    eax,DWORD PTR [eax+0x1a8]
  425b39:	push   DWORD PTR [eax]
  425b3b:	call   0x427a14
  425b40:	mov    ecx,DWORD PTR [ebp+0x8]
  425b43:	mov    ecx,DWORD PTR [ecx+0x19c]
  425b49:	mov    DWORD PTR [ecx],eax
  425b4b:	mov    eax,DWORD PTR [ebp+0x8]
  425b4e:	mov    edi,DWORD PTR [eax+0x1e0]
  425b54:	mov    esi,DWORD PTR [ebp+0x8]
  425b57:	xor    eax,eax
  425b59:	lea    edx,[ebp-0x7c]
  425b5c:	call   0x427da9
  425b61:	push   eax
  425b62:	mov    eax,DWORD PTR [ebp+0x8]
  425b65:	mov    eax,DWORD PTR [eax+0x19c]
  425b6b:	push   DWORD PTR [eax]
  425b6d:	call   DWORD PTR [edi+0x8]
  425b70:	mov    DWORD PTR [ebp-0x20],eax
  425b73:	mov    eax,DWORD PTR [ebp+0x8]
  425b76:	mov    edi,DWORD PTR [eax+0x1e0]
  425b7c:	mov    esi,DWORD PTR [ebp+0x8]
  425b7f:	xor    eax,eax
  425b81:	lea    edx,[ebp-0x90]
  425b87:	call   0x427da9
  425b8c:	push   eax
  425b8d:	mov    eax,DWORD PTR [ebp+0x8]
  425b90:	mov    eax,DWORD PTR [eax+0x19c]
  425b96:	push   DWORD PTR [eax]
  425b98:	call   DWORD PTR [edi+0x8]
  425b9b:	mov    eax,DWORD PTR [ebp+0x8]
  425b9e:	mov    edi,DWORD PTR [eax+0x1e0]
  425ba4:	mov    esi,DWORD PTR [ebp+0x8]
  425ba7:	xor    eax,eax
  425ba9:	lea    edx,[ebp-0xa8]
  425baf:	call   0x427da9
  425bb4:	push   eax
  425bb5:	mov    eax,DWORD PTR [ebp+0x8]
  425bb8:	mov    eax,DWORD PTR [eax+0x19c]
  425bbe:	push   DWORD PTR [eax]
  425bc0:	call   DWORD PTR [edi+0x8]
  425bc3:	and    DWORD PTR [ebp-0x8],0x0
  425bc7:	mov    DWORD PTR [ebp-0x48],eax
  425bca:	mov    eax,DWORD PTR [ebp-0x8]
  425bcd:	and    eax,0x7
  425bd0:	add    eax,0x31
  425bd3:	push   eax
  425bd4:	call   DWORD PTR [ebp-0x20]
  425bd7:	test   eax,eax
  425bd9:	je     0x425c1d
  425bdb:	mov    eax,DWORD PTR [ebp-0x8]
  425bde:	push   0x19
  425be0:	xor    edx,edx
  425be2:	pop    ecx
  425be3:	div    ecx
  425be5:	add    dl,0x41
  425be8:	movzx  eax,dl
  425beb:	push   eax
  425bec:	call   DWORD PTR [ebp-0x48]
  425bef:	test   eax,eax
  425bf1:	jne    0x425c1d
  425bf3:	mov    eax,DWORD PTR [ebp+0x8]
  425bf6:	mov    edi,DWORD PTR [eax+0x1e0]
  425bfc:	mov    esi,DWORD PTR [ebp+0x8]
  425bff:	xor    eax,eax
  425c01:	lea    edx,[ebp-0x68]
  425c04:	call   0x427da9
  425c09:	push   eax
  425c0a:	mov    eax,DWORD PTR [ebp+0x8]
  425c0d:	mov    eax,DWORD PTR [eax+0x198]
  425c13:	push   DWORD PTR [eax]
  425c15:	call   DWORD PTR [edi+0x8]
  425c18:	mov    DWORD PTR [ebp-0x14],eax
  425c1b:	jmp    0x425c21
  425c1d:	and    DWORD PTR [ebp-0x14],0x0
  425c21:	inc    DWORD PTR [ebp-0x8]
  425c24:	cmp    DWORD PTR [ebp-0x8],0x10
  425c28:	jb     0x425bca
  425c2a:	mov    eax,DWORD PTR [ebp-0x18]
  425c2d:	mov    esi,DWORD PTR [ebp+0x8]
  425c30:	xor    eax,ebx
  425c32:	mov    edi,0x3272ef
  425c37:	add    eax,edi
  425c39:	lea    edx,[ebp-0x10c]
  425c3f:	call   0x427da9
  425c44:	push   eax
  425c45:	mov    eax,DWORD PTR [ebp-0x10]
  425c48:	mov    esi,DWORD PTR [ebp+0x8]
  425c4b:	xor    eax,ebx
  425c4d:	add    eax,edi
  425c4f:	lea    edx,[ebp-0x12c]
  425c55:	call   0x427da9
  425c5a:	push   eax
  425c5b:	call   DWORD PTR [ebp-0x14]
  425c5e:	mov    ecx,DWORD PTR [ebp-0x10]
  425c61:	xor    ecx,ebx
  425c63:	add    ecx,edi
  425c65:	cmp    ecx,eax
  425c67:	jne    0x425c70
  425c69:	mov    DWORD PTR [ebp-0x34],0x1
  425c70:	mov    eax,DWORD PTR [ebp-0x18]
  425c73:	mov    ecx,DWORD PTR [ebp-0x1c]
  425c76:	xor    eax,ebx
  425c78:	lea    eax,[eax+ecx*1+0x3272ef]
  425c7f:	mov    DWORD PTR [ebp-0x1c],eax
  425c82:	mov    eax,DWORD PTR [ebp-0x34]
  425c85:	test   eax,eax
  425c87:	je     0x425c9b
  425c89:	mov    eax,DWORD PTR [ebp-0x18]
  425c8c:	mov    ecx,DWORD PTR [ebp-0x38]
  425c8f:	xor    eax,ebx
  425c91:	lea    eax,[eax+ecx*1+0x3272ef]
  425c98:	mov    DWORD PTR [ebp-0x38],eax
  425c9b:	mov    eax,DWORD PTR [ebp-0x18]
  425c9e:	xor    eax,ebx
  425ca0:	mov    ecx,0xffcd8d11
  425ca5:	sub    ecx,eax
  425ca7:	add    ecx,DWORD PTR [ebp-0x28]
  425caa:	mov    eax,DWORD PTR [ebp-0x1c]
  425cad:	cmp    eax,ecx
  425caf:	jbe    0x425b14
  425cb5:	mov    esi,edi
  425cb7:	mov    eax,DWORD PTR [ebp-0x38]
  425cba:	mov    ecx,DWORD PTR [ebp-0x1c]
  425cbd:	cmp    ecx,eax
  425cbf:	jne    0x425cd2
  425cc1:	push   DWORD PTR [ebp+0x8]
  425cc4:	lea    eax,[ebp-0x40]
  425cc7:	push   eax
  425cc8:	call   0x428816
  425ccd:	mov    DWORD PTR [ebp-0x24],eax
  425cd0:	jmp    0x425cde
  425cd2:	mov    eax,DWORD PTR [ebp-0x24]
  425cd5:	mov    ecx,DWORD PTR [ebp-0x18]
  425cd8:	xor    ecx,ebx
  425cda:	add    ecx,esi
  425cdc:	xor    DWORD PTR [eax],ecx
  425cde:	mov    eax,DWORD PTR [ebp-0x10]
  425ce1:	mov    ecx,DWORD PTR [ebp-0x24]
  425ce4:	xor    eax,ebx
  425ce6:	add    eax,esi
  425ce8:	cmp    eax,ecx
  425cea:	je     0x426461
  425cf0:	mov    eax,DWORD PTR [ebp-0x10]
  425cf3:	mov    ecx,DWORD PTR [ebp-0x40]
  425cf6:	xor    eax,ebx
  425cf8:	add    eax,esi
  425cfa:	cmp    eax,ecx
  425cfc:	je     0x426461
  425d02:	mov    eax,DWORD PTR [ebp-0x10]
  425d05:	xor    eax,ebx
  425d07:	add    eax,esi
  425d09:	jmp    0x425d27
  425d0b:	mov    edi,DWORD PTR [ebp-0x24]
  425d0e:	mov    cl,al
  425d10:	and    cl,0x1f
  425d13:	or     dl,0xff
  425d16:	sub    dl,cl
  425d18:	add    BYTE PTR [edi+eax*1],dl
  425d1b:	mov    ecx,DWORD PTR [ebp-0x18]
  425d1e:	xor    ecx,ebx
  425d20:	lea    eax,[eax+ecx*1+0x3272ef]
  425d27:	mov    ecx,DWORD PTR [ebp-0x40]
  425d2a:	cmp    eax,ecx
  425d2c:	jb     0x425d0b
  425d2e:	mov    eax,DWORD PTR [ebp-0x40]
  425d31:	mov    DWORD PTR [ebp-0x28],eax
  425d34:	mov    eax,DWORD PTR [ebp-0x24]
  425d37:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425d3e:	mov    DWORD PTR [ebp-0xd4],eax
  425d44:	mov    edi,0xf89c85ba
  425d49:	mov    DWORD PTR [ebp-0x2c],edi
  425d4c:	mov    eax,DWORD PTR [ebp-0x38]
  425d4f:	xor    eax,ebx
  425d51:	add    eax,esi
  425d53:	mov    DWORD PTR [ebp-0xc],eax
  425d56:	mov    eax,DWORD PTR [ebp-0x38]
  425d59:	xor    eax,ebx
  425d5b:	add    eax,esi
  425d5d:	mov    DWORD PTR [ebp-0x8],eax
  425d60:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  425d67:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425d6e:	mov    eax,DWORD PTR [ebp-0x38]
  425d71:	mov    ecx,DWORD PTR [ebp-0x28]
  425d74:	xor    eax,ebx
  425d76:	add    eax,esi
  425d78:	cmp    ecx,eax
  425d7a:	je     0x425f79
  425d80:	jmp    0x425f55
  425d85:	mov    ecx,DWORD PTR [ebp-0xc]
  425d88:	mov    eax,DWORD PTR [ebp-0x28]
  425d8b:	sub    eax,ecx
  425d8d:	mov    ecx,DWORD PTR [ebp-0x48]
  425d90:	xor    ecx,ebx
  425d92:	add    ecx,esi
  425d94:	xor    edx,edx
  425d96:	div    ecx
  425d98:	mov    DWORD PTR [ebp-0x8],eax
  425d9b:	mov    eax,DWORD PTR [ebp-0x4c]
  425d9e:	mov    ecx,DWORD PTR [ebp-0x8]
  425da1:	xor    eax,ebx
  425da3:	add    eax,esi
  425da5:	cmp    ecx,eax
  425da7:	jbe    0x425db3
  425da9:	mov    eax,DWORD PTR [ebp-0x4c]
  425dac:	xor    eax,ebx
  425dae:	add    eax,esi
  425db0:	mov    DWORD PTR [ebp-0x8],eax
  425db3:	mov    eax,DWORD PTR [ebp-0x48]
  425db6:	mov    ecx,DWORD PTR [ebp-0x8]
  425db9:	xor    eax,ebx
  425dbb:	add    eax,esi
  425dbd:	imul   eax,ecx
  425dc0:	mov    DWORD PTR [ebp-0x8],eax
  425dc3:	mov    eax,DWORD PTR [ebp-0x38]
  425dc6:	mov    ecx,DWORD PTR [ebp-0x8]
  425dc9:	xor    eax,ebx
  425dcb:	add    eax,esi
  425dcd:	cmp    ecx,eax
  425dcf:	je     0x425f43
  425dd5:	mov    eax,DWORD PTR [ebp-0x8]
  425dd8:	mov    DWORD PTR [ebp-0x14],eax
  425ddb:	mov    eax,DWORD PTR [ebp-0xc]
  425dde:	add    eax,DWORD PTR [ebp-0xd4]
  425de4:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425deb:	mov    DWORD PTR [ebp-0x34],edi
  425dee:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  425df8:	mov    DWORD PTR [ebp-0x8],eax
  425dfb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  425e02:	mov    DWORD PTR [ebp-0x1c],edi
  425e05:	mov    eax,DWORD PTR [ebp-0x20]
  425e08:	xor    eax,ebx
  425e0a:	add    eax,esi
  425e0c:	jmp    0x425f02
  425e11:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425e1b:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425e25:	mov    eax,DWORD PTR [ebp-0x1c]
  425e28:	mov    ecx,DWORD PTR [ebp-0x44]
  425e2b:	xor    eax,ebx
  425e2d:	add    eax,esi
  425e2f:	imul   eax,ecx
  425e32:	mov    ecx,DWORD PTR [ebp-0x8]
  425e35:	mov    al,BYTE PTR [eax+ecx*1]
  425e38:	mov    BYTE PTR [ebp-0x2],al
  425e3b:	mov    eax,DWORD PTR [ebp-0x1c]
  425e3e:	mov    ecx,DWORD PTR [ebp-0x44]
  425e41:	xor    eax,ebx
  425e43:	add    eax,esi
  425e45:	imul   eax,ecx
  425e48:	mov    ecx,DWORD PTR [ebp-0xe8]
  425e4e:	xor    ecx,ebx
  425e50:	add    eax,ecx
  425e52:	mov    ecx,DWORD PTR [ebp-0x8]
  425e55:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425e5d:	mov    ecx,DWORD PTR [ebp-0xe0]
  425e63:	xor    ecx,ebx
  425e65:	lea    eax,[ecx+eax*1+0x3272ef]
  425e6c:	movzx  ecx,BYTE PTR [ebp-0x2]
  425e70:	xor    ecx,eax
  425e72:	mov    BYTE PTR [ebp-0x2],cl
  425e75:	mov    al,BYTE PTR [ebp-0x2]
  425e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e7b:	mov    edx,DWORD PTR [ebp-0x44]
  425e7e:	xor    ecx,ebx
  425e80:	add    ecx,esi
  425e82:	imul   ecx,edx
  425e85:	mov    edx,DWORD PTR [ebp-0x8]
  425e88:	mov    BYTE PTR [ecx+edx*1],al
  425e8b:	mov    eax,DWORD PTR [ebp-0x1c]
  425e8e:	mov    ecx,DWORD PTR [ebp-0x44]
  425e91:	xor    eax,ebx
  425e93:	add    eax,esi
  425e95:	imul   eax,ecx
  425e98:	mov    ecx,DWORD PTR [ebp-0x8]
  425e9b:	mov    al,BYTE PTR [eax+ecx*1]
  425e9e:	mov    BYTE PTR [ebp-0x2],al
  425ea1:	mov    eax,DWORD PTR [ebp-0x1c]
  425ea4:	mov    ecx,DWORD PTR [ebp-0x44]
  425ea7:	xor    eax,ebx
  425ea9:	add    eax,esi
  425eab:	imul   eax,ecx
  425eae:	mov    ecx,DWORD PTR [ebp-0x34]
  425eb1:	xor    ecx,ebx
  425eb3:	add    eax,ecx
  425eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  425eb8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425ec0:	mov    ecx,DWORD PTR [ebp-0xc4]
  425ec6:	xor    ecx,ebx
  425ec8:	lea    eax,[ecx+eax*1+0x3272ef]
  425ecf:	movzx  ecx,BYTE PTR [ebp-0x2]
  425ed3:	xor    ecx,eax
  425ed5:	mov    BYTE PTR [ebp-0x2],cl
  425ed8:	mov    al,BYTE PTR [ebp-0x2]
  425edb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ede:	mov    edx,DWORD PTR [ebp-0x44]
  425ee1:	xor    ecx,ebx
  425ee3:	add    ecx,esi
  425ee5:	imul   ecx,edx
  425ee8:	mov    edx,DWORD PTR [ebp-0x8]
  425eeb:	mov    BYTE PTR [ecx+edx*1],al
  425eee:	mov    eax,DWORD PTR [ebp-0x30]
  425ef1:	mov    ecx,DWORD PTR [ebp-0x34]
  425ef4:	xor    eax,ebx
  425ef6:	xor    ecx,ebx
  425ef8:	add    eax,esi
  425efa:	add    ecx,esi
  425efc:	imul   eax,ecx
  425eff:	add    eax,DWORD PTR [ebp-0x44]
  425f02:	mov    DWORD PTR [ebp-0x44],eax
  425f05:	mov    eax,DWORD PTR [ebp-0x44]
  425f08:	mov    ecx,DWORD PTR [ebp-0x14]
  425f0b:	cmp    ecx,eax
  425f0d:	jb     0x425e11
  425f13:	mov    eax,DWORD PTR [ebp-0x34]
  425f16:	mov    ecx,DWORD PTR [ebp-0x14]
  425f19:	xor    eax,ebx
  425f1b:	add    eax,esi
  425f1d:	imul   eax,ecx
  425f20:	mov    ecx,DWORD PTR [ebp-0x20]
  425f23:	xor    ecx,ebx
  425f25:	add    ecx,esi
  425f27:	or     eax,ecx
  425f29:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f2c:	xor    ecx,ebx
  425f2e:	add    eax,ecx
  425f30:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f33:	xor    ecx,ebx
  425f35:	add    eax,ecx
  425f37:	mov    ecx,DWORD PTR [ebp-0xc]
  425f3a:	lea    eax,[eax+ecx*1+0x64e5de]
  425f41:	jmp    0x425f52
  425f43:	mov    eax,DWORD PTR [ebp-0x2c]
  425f46:	mov    ecx,DWORD PTR [ebp-0xc]
  425f49:	xor    eax,ebx
  425f4b:	lea    eax,[eax+ecx*1+0x3272ef]
  425f52:	mov    DWORD PTR [ebp-0xc],eax
  425f55:	mov    eax,DWORD PTR [ebp-0x2c]
  425f58:	xor    eax,ebx
  425f5a:	mov    ecx,0xffcd8d11
  425f5f:	sub    ecx,eax
  425f61:	add    ecx,DWORD PTR [ebp-0x28]
  425f64:	mov    eax,DWORD PTR [ebp-0x2c]
  425f67:	mov    edx,DWORD PTR [ebp-0xc]
  425f6a:	xor    eax,ebx
  425f6c:	add    eax,esi
  425f6e:	imul   eax,edx
  425f71:	cmp    eax,ecx
  425f73:	jbe    0x425d85
  425f79:	mov    eax,DWORD PTR [ebp-0x10]
  425f7c:	mov    ecx,DWORD PTR [ebp-0x40]
  425f7f:	mov    eax,DWORD PTR [ebp+0x8]
  425f82:	mov    edx,DWORD PTR [ebp-0x54]
  425f85:	mov    eax,DWORD PTR [eax+0x1e0]
  425f8b:	xor    edx,ebx
  425f8d:	add    edx,esi
  425f8f:	push   edx
  425f90:	mov    edx,DWORD PTR [ebp-0x3c]
  425f93:	xor    edx,ebx
  425f95:	add    edx,esi
  425f97:	push   edx
  425f98:	push   ecx
  425f99:	mov    DWORD PTR [ebp-0x30],ecx
  425f9c:	mov    ecx,DWORD PTR [ebp-0x10]
  425f9f:	xor    ecx,ebx
  425fa1:	add    ecx,esi
  425fa3:	push   ecx
  425fa4:	call   DWORD PTR [eax+0x14]
  425fa7:	mov    edi,eax
  425fa9:	mov    eax,DWORD PTR [ebp-0x10]
  425fac:	xor    eax,ebx
  425fae:	add    eax,esi
  425fb0:	cmp    eax,edi
  425fb2:	je     0x42600d
  425fb4:	mov    eax,DWORD PTR [ebp-0x10]
  425fb7:	jmp    0x425fda
  425fb9:	mov    ecx,DWORD PTR [ebp-0x24]
  425fbc:	xor    eax,ebx
  425fbe:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ef]
  425fc5:	mov    BYTE PTR [eax+edi*1+0x3272ef],cl
  425fcc:	mov    ecx,DWORD PTR [ebp-0x18]
  425fcf:	xor    ecx,ebx
  425fd1:	lea    eax,[ecx+eax*1+0x3272ef]
  425fd8:	xor    eax,ebx
  425fda:	mov    ecx,DWORD PTR [ebp-0x40]
  425fdd:	sub    ecx,esi
  425fdf:	xor    ecx,ebx
  425fe1:	cmp    eax,ecx
  425fe3:	jne    0x425fb9
  425fe5:	mov    eax,DWORD PTR [ebp+0x8]
  425fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  425feb:	mov    eax,DWORD PTR [eax+0x1e0]
  425ff1:	xor    ecx,ebx
  425ff3:	add    ecx,esi
  425ff5:	push   ecx
  425ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  425ff9:	xor    ecx,ebx
  425ffb:	add    ecx,esi
  425ffd:	push   ecx
  425ffe:	push   DWORD PTR [ebp-0x24]
  426001:	call   DWORD PTR [eax+0x18]
  426004:	mov    eax,DWORD PTR [ebp-0x30]
  426007:	mov    DWORD PTR [ebp-0x24],edi
  42600a:	mov    DWORD PTR [ebp-0x40],eax
  42600d:	mov    edi,DWORD PTR [ebp-0x24]
  426010:	mov    eax,DWORD PTR [ebp-0x18]
  426013:	mov    ecx,DWORD PTR [ebp-0x10]
  426016:	xor    eax,ebx
  426018:	mov    DWORD PTR [ebp-0x30],edi
  42601b:	add    eax,esi
  42601d:	mov    DWORD PTR [ebp-0x5c],0x39222a22
  426024:	mov    DWORD PTR [ebp-0x58],0x37223f22
  42602b:	jmp    0x42605e
  42602d:	xor    ecx,ebx
  42602f:	mov    dl,BYTE PTR [ebp+ecx*1+0x327293]
  426036:	xor    dl,0x7b
  426039:	dec    dl
  42603b:	mov    DWORD PTR [ebp-0x3c],ecx
  42603e:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272ef]
  426046:	movzx  edx,dl
  426049:	cmp    ecx,edx
  42604b:	jne    0x426068
  42604d:	mov    ecx,DWORD PTR [ebp-0x18]
  426050:	mov    edx,DWORD PTR [ebp-0x3c]
  426053:	xor    ecx,ebx
  426055:	lea    ecx,[ecx+edx*1+0x3272ef]
  42605c:	xor    ecx,ebx
  42605e:	cmp    ecx,0xf89c85b1
  426064:	jne    0x42602d
  426066:	jmp    0x42606f
  426068:	mov    eax,DWORD PTR [ebp-0x10]
  42606b:	xor    eax,ebx
  42606d:	add    eax,esi
  42606f:	mov    ecx,DWORD PTR [ebp-0x10]
  426072:	xor    ecx,ebx
  426074:	add    ecx,esi
  426076:	cmp    ecx,eax
  426078:	je     0x4261eb
  42607e:	mov    eax,DWORD PTR [edi+0x8]
  426081:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426088:	mov    DWORD PTR [ebp-0x3c],0xf89cc328
  42608f:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  426096:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  42609d:	mov    DWORD PTR [ebp-0x14],eax
  4260a0:	mov    eax,DWORD PTR [ebp+0x8]
  4260a3:	mov    ecx,DWORD PTR [ebp-0x20]
  4260a6:	xor    ecx,ebx
  4260a8:	add    ecx,esi
  4260aa:	push   ecx
  4260ab:	mov    ecx,DWORD PTR [ebp-0x48]
  4260ae:	mov    eax,DWORD PTR [eax+0x1e0]
  4260b4:	xor    ecx,ebx
  4260b6:	add    ecx,esi
  4260b8:	push   ecx
  4260b9:	mov    ecx,DWORD PTR [ebp-0x3c]
  4260bc:	xor    ecx,ebx
  4260be:	add    ecx,esi
  4260c0:	push   ecx
  4260c1:	mov    ecx,DWORD PTR [ebp-0xc]
  4260c4:	xor    ecx,ebx
  4260c6:	add    ecx,esi
  4260c8:	push   ecx
  4260c9:	call   DWORD PTR [eax+0x14]
  4260cc:	mov    edi,eax
  4260ce:	mov    eax,DWORD PTR [ebp+0x8]
  4260d1:	mov    ecx,DWORD PTR [ebp-0x20]
  4260d4:	mov    eax,DWORD PTR [eax+0x1e0]
  4260da:	xor    ecx,ebx
  4260dc:	add    ecx,esi
  4260de:	push   ecx
  4260df:	mov    ecx,DWORD PTR [ebp-0x48]
  4260e2:	xor    ecx,ebx
  4260e4:	add    ecx,esi
  4260e6:	push   ecx
  4260e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4260ea:	push   DWORD PTR [ebp-0x14]
  4260ed:	xor    ecx,ebx
  4260ef:	add    ecx,esi
  4260f1:	push   ecx
  4260f2:	call   DWORD PTR [eax+0x14]
  4260f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4260f8:	xor    ecx,ebx
  4260fa:	add    ecx,esi
  4260fc:	mov    DWORD PTR [ebp-0x20],eax
  4260ff:	cmp    ecx,edi
  426101:	je     0x42648e
  426107:	mov    ecx,DWORD PTR [ebp-0xc]
  42610a:	xor    ecx,ebx
  42610c:	add    ecx,esi
  42610e:	cmp    ecx,eax
  426110:	je     0x42648e
  426116:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  42611d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426124:	mov    ecx,DWORD PTR [ebp-0x3c]
  426127:	xor    cl,0xa8
  42612a:	sub    cl,0x11
  42612d:	mov    BYTE PTR [edi],cl
  42612f:	mov    ecx,DWORD PTR [ebp-0xc]
  426132:	xor    cl,0xa8
  426135:	sub    cl,0x11
  426138:	mov    BYTE PTR [edi+0x1],cl
  42613b:	mov    ecx,DWORD PTR [ebp-0x54]
  42613e:	xor    cl,0xa8
  426141:	sub    cl,0x11
  426144:	mov    BYTE PTR [edi+0x2],cl
  426147:	and    DWORD PTR [ebp-0xc8],0x0
  42614e:	and    DWORD PTR [ebp-0xdc],0x0
  426155:	lea    ecx,[ebp-0xdc]
  42615b:	push   ecx
  42615c:	push   DWORD PTR [ebp-0x14]
  42615f:	push   eax
  426160:	lea    eax,[ebp-0xc8]
  426166:	push   eax
  426167:	mov    eax,DWORD PTR [ebp-0x30]
  42616a:	push   DWORD PTR [eax+0xc]
  42616d:	mov    eax,DWORD PTR [ebp-0x24]
  426170:	add    eax,0x10
  426173:	push   eax
  426174:	push   edi
  426175:	call   0x42541c
  42617a:	mov    DWORD PTR [ebp-0x3c],eax
  42617d:	mov    eax,DWORD PTR [ebp+0x8]
  426180:	mov    ecx,DWORD PTR [ebp-0x50]
  426183:	mov    eax,DWORD PTR [eax+0x1e0]
  426189:	xor    ecx,ebx
  42618b:	add    ecx,esi
  42618d:	push   ecx
  42618e:	mov    ecx,DWORD PTR [ebp-0xc]
  426191:	xor    ecx,ebx
  426193:	add    ecx,esi
  426195:	push   ecx
  426196:	push   edi
  426197:	call   DWORD PTR [eax+0x18]
  42619a:	mov    eax,DWORD PTR [ebp-0x3c]
  42619d:	add    eax,0xffcd8d11
  4261a2:	xor    eax,ebx
  4261a4:	cmp    eax,0xf89c85b9
  4261a9:	mov    eax,DWORD PTR [ebp+0x8]
  4261ac:	mov    eax,DWORD PTR [eax+0x1e0]
  4261b2:	mov    ecx,DWORD PTR [ebp-0x50]
  4261b5:	jne    0x4261d8
  4261b7:	xor    ecx,ebx
  4261b9:	add    ecx,esi
  4261bb:	push   ecx
  4261bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4261bf:	xor    ecx,ebx
  4261c1:	add    ecx,esi
  4261c3:	push   ecx
  4261c4:	push   DWORD PTR [ebp-0x24]
  4261c7:	call   DWORD PTR [eax+0x18]
  4261ca:	mov    eax,DWORD PTR [ebp-0x20]
  4261cd:	mov    DWORD PTR [ebp-0x24],eax
  4261d0:	mov    eax,DWORD PTR [ebp-0x14]
  4261d3:	mov    DWORD PTR [ebp-0x40],eax
  4261d6:	jmp    0x4261eb
  4261d8:	xor    ecx,ebx
  4261da:	add    ecx,esi
  4261dc:	push   ecx
  4261dd:	mov    ecx,DWORD PTR [ebp-0xc]
  4261e0:	xor    ecx,ebx
  4261e2:	add    ecx,esi
  4261e4:	push   ecx
  4261e5:	push   DWORD PTR [ebp-0x20]
  4261e8:	call   DWORD PTR [eax+0x18]
  4261eb:	mov    eax,DWORD PTR [ebp-0x40]
  4261ee:	mov    DWORD PTR [ebp-0x38],eax
  4261f1:	mov    eax,DWORD PTR [ebp-0x24]
  4261f4:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4261fb:	mov    DWORD PTR [ebp-0x3c],eax
  4261fe:	mov    edi,0xf89c85ba
  426203:	mov    DWORD PTR [ebp-0x2c],edi
  426206:	mov    eax,DWORD PTR [ebp-0x28]
  426209:	xor    eax,ebx
  42620b:	add    eax,esi
  42620d:	mov    DWORD PTR [ebp-0xc],eax
  426210:	mov    eax,DWORD PTR [ebp-0x28]
  426213:	xor    eax,ebx
  426215:	add    eax,esi
  426217:	mov    DWORD PTR [ebp-0x14],eax
  42621a:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  426221:	mov    DWORD PTR [ebp-0x20],0xf89c85b0
  426228:	mov    eax,DWORD PTR [ebp-0x28]
  42622b:	mov    ecx,DWORD PTR [ebp-0x38]
  42622e:	xor    eax,ebx
  426230:	add    eax,esi
  426232:	cmp    ecx,eax
  426234:	je     0x42642a
  42623a:	jmp    0x426406
  42623f:	mov    ecx,DWORD PTR [ebp-0xc]
  426242:	mov    eax,DWORD PTR [ebp-0x38]
  426245:	sub    eax,ecx
  426247:	mov    ecx,DWORD PTR [ebp-0x48]
  42624a:	xor    ecx,ebx
  42624c:	add    ecx,esi
  42624e:	xor    edx,edx
  426250:	div    ecx
  426252:	mov    DWORD PTR [ebp-0x14],eax
  426255:	mov    eax,DWORD PTR [ebp-0x20]
  426258:	mov    ecx,DWORD PTR [ebp-0x14]
  42625b:	xor    eax,ebx
  42625d:	add    eax,esi
  42625f:	cmp    ecx,eax
  426261:	jbe    0x42626d
  426263:	mov    eax,DWORD PTR [ebp-0x20]
  426266:	xor    eax,ebx
  426268:	add    eax,esi
  42626a:	mov    DWORD PTR [ebp-0x14],eax
  42626d:	mov    eax,DWORD PTR [ebp-0x48]
  426270:	mov    ecx,DWORD PTR [ebp-0x14]
  426273:	xor    eax,ebx
  426275:	add    eax,esi
  426277:	imul   eax,ecx
  42627a:	mov    DWORD PTR [ebp-0x14],eax
  42627d:	mov    eax,DWORD PTR [ebp-0x28]
  426280:	mov    ecx,DWORD PTR [ebp-0x14]
  426283:	xor    eax,ebx
  426285:	add    eax,esi
  426287:	cmp    ecx,eax
  426289:	je     0x4263f4
  42628f:	mov    eax,DWORD PTR [ebp-0x14]
  426292:	mov    DWORD PTR [ebp-0x34],eax
  426295:	mov    eax,DWORD PTR [ebp-0xc]
  426298:	add    eax,DWORD PTR [ebp-0x3c]
  42629b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  4262a2:	mov    DWORD PTR [ebp-0x14],edi
  4262a5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4262ac:	mov    DWORD PTR [ebp-0x1c],eax
  4262af:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4262b6:	mov    DWORD PTR [ebp-0x8],edi
  4262b9:	mov    eax,DWORD PTR [ebp-0x4c]
  4262bc:	xor    eax,ebx
  4262be:	add    eax,esi
  4262c0:	jmp    0x4263b3
  4262c5:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  4262cf:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  4262d9:	mov    eax,DWORD PTR [ebp-0x8]
  4262dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4262df:	xor    eax,ebx
  4262e1:	add    eax,esi
  4262e3:	imul   eax,ecx
  4262e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4262e9:	mov    al,BYTE PTR [eax+ecx*1]
  4262ec:	mov    BYTE PTR [ebp-0x1],al
  4262ef:	mov    eax,DWORD PTR [ebp-0x8]
  4262f2:	mov    ecx,DWORD PTR [ebp-0x18]
  4262f5:	xor    eax,ebx
  4262f7:	add    eax,esi
  4262f9:	imul   eax,ecx
  4262fc:	mov    ecx,DWORD PTR [ebp-0x54]
  4262ff:	xor    ecx,ebx
  426301:	add    eax,ecx
  426303:	mov    ecx,DWORD PTR [ebp-0x1c]
  426306:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  42630e:	mov    ecx,DWORD PTR [ebp-0xe4]
  426314:	xor    ecx,ebx
  426316:	lea    eax,[ecx+eax*1+0x3272ef]
  42631d:	movzx  ecx,BYTE PTR [ebp-0x1]
  426321:	xor    ecx,eax
  426323:	mov    BYTE PTR [ebp-0x1],cl
  426326:	mov    al,BYTE PTR [ebp-0x1]
  426329:	mov    ecx,DWORD PTR [ebp-0x8]
  42632c:	mov    edx,DWORD PTR [ebp-0x18]
  42632f:	xor    ecx,ebx
  426331:	add    ecx,esi
  426333:	imul   ecx,edx
  426336:	mov    edx,DWORD PTR [ebp-0x1c]
  426339:	mov    BYTE PTR [ecx+edx*1],al
  42633c:	mov    eax,DWORD PTR [ebp-0x8]
  42633f:	mov    ecx,DWORD PTR [ebp-0x18]
  426342:	xor    eax,ebx
  426344:	add    eax,esi
  426346:	imul   eax,ecx
  426349:	mov    ecx,DWORD PTR [ebp-0x1c]
  42634c:	mov    al,BYTE PTR [eax+ecx*1]
  42634f:	mov    BYTE PTR [ebp-0x1],al
  426352:	mov    eax,DWORD PTR [ebp-0x8]
  426355:	mov    ecx,DWORD PTR [ebp-0x18]
  426358:	xor    eax,ebx
  42635a:	add    eax,esi
  42635c:	imul   eax,ecx
  42635f:	mov    ecx,DWORD PTR [ebp-0x14]
  426362:	xor    ecx,ebx
  426364:	add    eax,ecx
  426366:	mov    ecx,DWORD PTR [ebp-0x1c]
  426369:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  426371:	mov    ecx,DWORD PTR [ebp-0xd0]
  426377:	xor    ecx,ebx
  426379:	lea    eax,[ecx+eax*1+0x3272ef]
  426380:	movzx  ecx,BYTE PTR [ebp-0x1]
  426384:	xor    ecx,eax
  426386:	mov    BYTE PTR [ebp-0x1],cl
  426389:	mov    al,BYTE PTR [ebp-0x1]
  42638c:	mov    ecx,DWORD PTR [ebp-0x8]
  42638f:	mov    edx,DWORD PTR [ebp-0x18]
  426392:	xor    ecx,ebx
  426394:	add    ecx,esi
  426396:	imul   ecx,edx
  426399:	mov    edx,DWORD PTR [ebp-0x1c]
  42639c:	mov    BYTE PTR [ecx+edx*1],al
  42639f:	mov    eax,DWORD PTR [ebp-0x30]
  4263a2:	mov    ecx,DWORD PTR [ebp-0x14]
  4263a5:	xor    eax,ebx
  4263a7:	xor    ecx,ebx
  4263a9:	add    eax,esi
  4263ab:	add    ecx,esi
  4263ad:	imul   eax,ecx
  4263b0:	add    eax,DWORD PTR [ebp-0x18]
  4263b3:	mov    DWORD PTR [ebp-0x18],eax
  4263b6:	mov    eax,DWORD PTR [ebp-0x18]
  4263b9:	mov    ecx,DWORD PTR [ebp-0x34]
  4263bc:	cmp    ecx,eax
  4263be:	jb     0x4262c5
  4263c4:	mov    eax,DWORD PTR [ebp-0x14]
  4263c7:	mov    ecx,DWORD PTR [ebp-0x34]
  4263ca:	xor    eax,ebx
  4263cc:	add    eax,esi
  4263ce:	imul   eax,ecx
  4263d1:	mov    ecx,DWORD PTR [ebp-0x4c]
  4263d4:	xor    ecx,ebx
  4263d6:	add    ecx,esi
  4263d8:	or     eax,ecx
  4263da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4263dd:	xor    ecx,ebx
  4263df:	add    eax,ecx
  4263e1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4263e4:	xor    ecx,ebx
  4263e6:	add    eax,ecx
  4263e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4263eb:	lea    eax,[eax+ecx*1+0x64e5de]
  4263f2:	jmp    0x426403
  4263f4:	mov    eax,DWORD PTR [ebp-0x2c]
  4263f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4263fa:	xor    eax,ebx
  4263fc:	lea    eax,[eax+ecx*1+0x3272ef]
  426403:	mov    DWORD PTR [ebp-0xc],eax
  426406:	mov    eax,DWORD PTR [ebp-0x2c]
  426409:	xor    eax,ebx
  42640b:	mov    ecx,0xffcd8d11
  426410:	sub    ecx,eax
  426412:	add    ecx,DWORD PTR [ebp-0x38]
  426415:	mov    eax,DWORD PTR [ebp-0x2c]
  426418:	mov    edx,DWORD PTR [ebp-0xc]
  42641b:	xor    eax,ebx
  42641d:	add    eax,esi
  42641f:	imul   eax,edx
  426422:	cmp    eax,ecx
  426424:	jbe    0x42623f
  42642a:	push   DWORD PTR [ebp+0x8]
  42642d:	mov    eax,DWORD PTR [ebp+0x8]
  426430:	push   DWORD PTR [eax+0x1cc]
  426436:	lea    eax,[ebp-0xd8]
  42643c:	push   eax
  42643d:	mov    eax,DWORD PTR [ebp+0x8]
  426440:	mov    eax,DWORD PTR [eax+0x1c4]
  426446:	push   DWORD PTR [eax]
  426448:	mov    eax,DWORD PTR [ebp+0x8]
  42644b:	mov    eax,DWORD PTR [eax+0x1c0]
  426451:	push   DWORD PTR [eax]
  426453:	push   DWORD PTR [ebp-0x40]
  426456:	push   DWORD PTR [ebp-0x24]
  426459:	call   0x426ef0
  42645e:	mov    DWORD PTR [ebp-0x3c],eax
  426461:	mov    eax,DWORD PTR [ebp-0x10]
  426464:	mov    ecx,DWORD PTR [ebp-0x24]
  426467:	xor    eax,ebx
  426469:	add    eax,esi
  42646b:	cmp    eax,ecx
  42646d:	je     0x42648e
  42646f:	mov    eax,DWORD PTR [ebp+0x8]
  426472:	mov    ecx,DWORD PTR [ebp-0x50]
  426475:	mov    eax,DWORD PTR [eax+0x1e0]
  42647b:	xor    ecx,ebx
  42647d:	add    ecx,esi
  42647f:	push   ecx
  426480:	mov    ecx,DWORD PTR [ebp-0x10]
  426483:	xor    ecx,ebx
  426485:	add    ecx,esi
  426487:	push   ecx
  426488:	push   DWORD PTR [ebp-0x24]
  42648b:	call   DWORD PTR [eax+0x18]
  42648e:	pop    edi
  42648f:	pop    esi
  426490:	pop    ebx
  426491:	leave  
  426492:	ret    0x4
  426495:	push   ebp
  426496:	mov    ebp,esp
  426498:	push   ecx
  426499:	push   ecx
  42649a:	lea    eax,[ebp-0x8]
  42649d:	mov    DWORD PTR [ebp-0x4],eax
  4264a0:	push   esi
  4264a1:	mov    esi,DWORD PTR [ebp-0x4]
  4264a4:	mov    eax,0xf881ba2f
  4264a9:	mov    DWORD PTR [esi],eax
  4264ab:	mov    esi,DWORD PTR [ebp-0x8]
  4264ae:	cmp    esi,eax
  4264b0:	pop    esi
  4264b1:	jne    0x4264bb
  4264b3:	mov    BYTE PTR [ecx+0xa],0x7a
  4264b7:	mov    BYTE PTR [edx+0x8],0x2f
  4264bb:	mov    BYTE PTR [edx+0xa],0x7a
  4264bf:	mov    BYTE PTR [ecx+0x2],0x14
  4264c3:	leave  
  4264c4:	ret    
  4264c5:	push   ebp
  4264c6:	mov    ebp,esp
  4264c8:	push   ecx
  4264c9:	push   ecx
  4264ca:	lea    eax,[ebp-0x8]
  4264cd:	mov    DWORD PTR [ebp-0x4],eax
  4264d0:	mov    edx,DWORD PTR [ebp-0x4]
  4264d3:	mov    eax,0xf88b0bc3
  4264d8:	mov    DWORD PTR [edx],eax
  4264da:	mov    edx,DWORD PTR [ebp-0x8]
  4264dd:	cmp    edx,eax
  4264df:	jne    0x4264f0
  4264e1:	mov    eax,DWORD PTR [ebp+0x8]
  4264e4:	mov    BYTE PTR [ecx+0x9],0xe
  4264e8:	mov    BYTE PTR [eax+0x7],0x57
  4264ec:	mov    BYTE PTR [ecx+0x6],0xf
  4264f0:	mov    BYTE PTR [ecx+0x3],0x1e
  4264f4:	leave  
  4264f5:	ret    0x4
  4264f8:	push   ebp
  4264f9:	mov    ebp,esp
  4264fb:	push   ecx
  4264fc:	push   ecx
  4264fd:	lea    eax,[ebp-0x8]
  426500:	mov    DWORD PTR [ebp-0x4],eax
  426503:	mov    edx,DWORD PTR [ebp-0x4]
  426506:	mov    eax,0x7e0da2f
  42650b:	mov    DWORD PTR [edx],eax
  42650d:	mov    edx,DWORD PTR [ebp-0x8]
  426510:	cmp    edx,eax
  426512:	jne    0x426518
  426514:	mov    BYTE PTR [ecx+0x7],0x57
  426518:	mov    eax,DWORD PTR [ebp+0x8]
  42651b:	mov    BYTE PTR [ecx+0x1],0x11
  42651f:	mov    BYTE PTR [eax+0x9],0x2e
  426523:	leave  
  426524:	ret    0x4
  426527:	push   ebp
  426528:	mov    ebp,esp
  42652a:	push   ecx
  42652b:	push   ecx
  42652c:	lea    eax,[ebp-0x8]
  42652f:	mov    DWORD PTR [ebp-0x4],eax
  426532:	push   esi
  426533:	mov    esi,DWORD PTR [ebp-0x4]
  426536:	mov    eax,0x7060e30
  42653b:	mov    DWORD PTR [esi],eax
  42653d:	mov    esi,DWORD PTR [ebp-0x8]
  426540:	cmp    esi,eax
  426542:	pop    esi
  426543:	jne    0x42654f
  426545:	mov    BYTE PTR [edx+0x4],0xb
  426549:	mov    WORD PTR [ecx+0x3],0xb1e
  42654f:	mov    BYTE PTR [edx],0x3f
  426552:	leave  
  426553:	ret    
  426554:	push   ebp
  426555:	mov    ebp,esp
  426557:	push   ecx
  426558:	push   ecx
  426559:	lea    eax,[ebp-0x8]
  42655c:	mov    DWORD PTR [ebp-0x4],eax
  42655f:	mov    edx,DWORD PTR [ebp-0x4]
  426562:	mov    eax,0xf8870b3f
  426567:	mov    DWORD PTR [edx],eax
  426569:	mov    edx,DWORD PTR [ebp-0x8]
  42656c:	cmp    edx,eax
  42656e:	jne    0x42657b
  426570:	mov    eax,DWORD PTR [ebp+0x8]
  426573:	mov    BYTE PTR [ecx+0x8],0xf
  426577:	mov    BYTE PTR [eax+0x1],0x11
  42657b:	mov    BYTE PTR [ecx+0x5],0x3
  42657f:	leave  
  426580:	ret    0x4
  426583:	push   esi
  426584:	mov    ecx,edi
  426586:	call   0x426554
  42658b:	mov    edx,edi
  42658d:	mov    ecx,esi
  42658f:	mov    BYTE PTR [esi],0x1f
  426592:	call   0x426527
  426597:	push   esi
  426598:	mov    ecx,edi
  42659a:	mov    BYTE PTR [esi+0x5],0x3
  42659e:	call   0x4264f8
  4265a3:	push   esi
  4265a4:	mov    BYTE PTR [esi+0x6],0xf
  4265a8:	call   0x4264c5
  4265ad:	mov    BYTE PTR [esi+0x2],0x14
  4265b1:	mov    edx,esi
  4265b3:	jmp    0x426495
  4265b8:	push   ebp
  4265b9:	mov    ebp,esp
  4265bb:	push   ecx
  4265bc:	mov    ecx,DWORD PTR [edx+0x194]
  4265c2:	push   esi
  4265c3:	mov    esi,DWORD PTR [ebp+0x8]
  4265c6:	mov    esi,DWORD PTR [esi]
  4265c8:	mov    DWORD PTR [ecx],esi
  4265ca:	mov    ecx,DWORD PTR [edx+0x194]
  4265d0:	mov    ecx,DWORD PTR [ecx]
  4265d2:	mov    esi,DWORD PTR [edx+0x190]
  4265d8:	mov    DWORD PTR [esi],ecx
  4265da:	mov    eax,DWORD PTR [edx+0x194]
  4265e0:	mov    ecx,DWORD PTR [eax]
  4265e2:	mov    ecx,DWORD PTR [ecx+0x3c]
  4265e5:	add    ecx,DWORD PTR [eax]
  4265e7:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4265ee:	mov    eax,DWORD PTR [ebp-0x4]
  4265f1:	movzx  ecx,WORD PTR [ecx+0x16]
  4265f5:	xor    eax,0x75108a8
  4265fa:	add    eax,0x3272ef
  4265ff:	pop    esi
  426600:	test   ecx,eax
  426602:	je     0x426610
  426604:	mov    eax,DWORD PTR [edx+0x1c8]
  42660a:	mov    DWORD PTR [eax],0xf89c85ba
  426610:	leave  
  426611:	ret    0x4
  426614:	push   ebp
  426615:	mov    ebp,esp
  426617:	sub    esp,0x70
  42661a:	and    DWORD PTR [ebp-0x20],0x0
  42661e:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  426625:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  42662c:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  426633:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42663a:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  426641:	mov    eax,DWORD PTR [ebp+0x20]
  426644:	mov    eax,DWORD PTR [eax+0x194]
  42664a:	mov    DWORD PTR [ebp-0xc],eax
  42664d:	mov    eax,DWORD PTR [ebp+0x20]
  426650:	push   ebx
  426651:	push   esi
  426652:	mov    esi,DWORD PTR [eax+0x190]
  426658:	mov    eax,DWORD PTR [ebp+0x20]
  42665b:	mov    eax,DWORD PTR [eax+0x18c]
  426661:	mov    DWORD PTR [ebp-0x8],eax
  426664:	mov    eax,DWORD PTR [eax]
  426666:	push   edi
  426667:	mov    DWORD PTR [ebp-0x4],esi
  42666a:	test   eax,eax
  42666c:	jne    0x426679
  42666e:	push   DWORD PTR [ebp+0x1c]
  426671:	mov    edx,DWORD PTR [ebp+0x20]
  426674:	call   0x4265b8
  426679:	mov    eax,DWORD PTR [esi]
  42667b:	mov    ebx,DWORD PTR [esi]
  42667d:	add    ebx,DWORD PTR [eax+0x3c]
  426680:	mov    eax,DWORD PTR [ebp+0xc]
  426683:	mov    ecx,DWORD PTR [ebp-0x8]
  426686:	mov    ecx,DWORD PTR [ecx]
  426688:	mov    esi,0x75108a8
  42668d:	xor    eax,esi
  42668f:	mov    edi,0x3272ef
  426694:	add    eax,edi
  426696:	cmp    eax,ecx
  426698:	jne    0x4268d0
  42669e:	mov    eax,DWORD PTR [ebp-0xc]
  4266a1:	mov    eax,DWORD PTR [eax]
  4266a3:	mov    DWORD PTR [ebp-0x10],eax
  4266a6:	mov    eax,DWORD PTR [ebx+0x50]
  4266a9:	mov    DWORD PTR [ebp-0x68],eax
  4266ac:	mov    eax,DWORD PTR [ebp-0x18]
  4266af:	xor    eax,esi
  4266b1:	add    eax,edi
  4266b3:	mov    DWORD PTR [ebp-0x64],eax
  4266b6:	mov    eax,DWORD PTR [ebp-0x14]
  4266b9:	and    DWORD PTR [ebp-0x6c],0x0
  4266bd:	xor    eax,esi
  4266bf:	add    eax,edi
  4266c1:	mov    DWORD PTR [ebp-0x60],eax
  4266c4:	lea    eax,[ebp-0x70]
  4266c7:	push   eax
  4266c8:	mov    eax,DWORD PTR [ebp+0x8]
  4266cb:	xor    eax,esi
  4266cd:	add    eax,edi
  4266cf:	push   eax
  4266d0:	mov    eax,DWORD PTR [ebp+0x20]
  4266d3:	add    eax,0xaa
  4266d8:	push   eax
  4266d9:	mov    eax,DWORD PTR [ebp+0x20]
  4266dc:	mov    eax,DWORD PTR [eax+0x198]
  4266e2:	mov    DWORD PTR [ebp-0x70],0x4
  4266e9:	push   DWORD PTR [eax]
  4266eb:	mov    eax,DWORD PTR [ebp+0x10]
  4266ee:	call   eax
  4266f0:	mov    ecx,DWORD PTR [ebp-0xc]
  4266f3:	mov    ecx,DWORD PTR [ecx]
  4266f5:	mov    edx,DWORD PTR [ebp-0x8]
  4266f8:	mov    DWORD PTR [ebp-0x6c],eax
  4266fb:	mov    DWORD PTR [ebp+0x1c],eax
  4266fe:	mov    DWORD PTR [edx],ecx
  426700:	mov    ecx,DWORD PTR [ebp-0x4]
  426703:	mov    DWORD PTR [ecx],eax
  426705:	mov    eax,DWORD PTR [ebx+0x50]
  426708:	mov    DWORD PTR [ebp-0x68],eax
  42670b:	mov    eax,DWORD PTR [ebp-0x1c]
  42670e:	xor    eax,esi
  426710:	add    eax,edi
  426712:	mov    DWORD PTR [ebp-0x64],eax
  426715:	lea    eax,[ebp-0x20]
  426718:	mov    DWORD PTR [ebp-0x60],eax
  42671b:	lea    eax,[ebp-0x70]
  42671e:	push   eax
  42671f:	mov    eax,DWORD PTR [ebp+0x8]
  426722:	xor    eax,esi
  426724:	add    eax,edi
  426726:	push   eax
  426727:	mov    eax,DWORD PTR [ebp+0x20]
  42672a:	add    eax,0xee
  42672f:	push   eax
  426730:	mov    eax,DWORD PTR [ebp+0x20]
  426733:	mov    eax,DWORD PTR [eax+0x198]
  426739:	mov    DWORD PTR [ebp-0x70],0x4
  426740:	push   DWORD PTR [eax]
  426742:	mov    eax,DWORD PTR [ebp+0x10]
  426745:	call   eax
  426747:	test   eax,eax
  426749:	je     0x42676e
  42674b:	and    DWORD PTR [ebp+0xc],0x0
  42674f:	cmp    DWORD PTR [ebx+0x50],0x0
  426753:	jbe    0x42676e
  426755:	mov    eax,DWORD PTR [ebp+0x1c]
  426758:	mov    ecx,DWORD PTR [ebp-0x10]
  42675b:	sub    ecx,eax
  42675d:	mov    dl,BYTE PTR [ecx+eax*1]
  426760:	inc    DWORD PTR [ebp+0xc]
  426763:	mov    BYTE PTR [eax],dl
  426765:	mov    edx,DWORD PTR [ebp+0xc]
  426768:	inc    eax
  426769:	cmp    edx,DWORD PTR [ebx+0x50]
  42676c:	jb     0x42675d
  42676e:	mov    edx,DWORD PTR [ebp+0x1c]
  426771:	mov    ecx,DWORD PTR [edx+0x3c]
  426774:	add    ecx,edx
  426776:	mov    eax,DWORD PTR [ecx+0xa0]
  42677c:	mov    ebx,DWORD PTR [ecx+0x28]
  42677f:	add    eax,edx
  426781:	sub    edx,DWORD PTR [ebp-0x10]
  426784:	add    ebx,DWORD PTR [ebp+0x1c]
  426787:	mov    DWORD PTR [ebp+0xc],edx
  42678a:	mov    DWORD PTR [ebp-0x2c],ecx
  42678d:	mov    DWORD PTR [ebp-0x14],ebx
  426790:	mov    DWORD PTR [ebp-0x8],0x0
  426797:	jmp    0x426813
  426799:	add    edx,0xfffffff8
  42679c:	shr    edx,1
  42679e:	mov    DWORD PTR [ebp-0x18],edx
  4267a1:	je     0x4267ff
  4267a3:	lea    edx,[eax+0x8]
  4267a6:	mov    DWORD PTR [ebp-0x4],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0x18]
  4267ac:	mov    DWORD PTR [ebp-0x18],edx
  4267af:	mov    edx,DWORD PTR [ebp-0x4]
  4267b2:	movzx  edx,WORD PTR [edx]
  4267b5:	mov    DWORD PTR [ebp-0x24],edx
  4267b8:	and    edx,0xfff
  4267be:	mov    DWORD PTR [ebp-0x28],edx
  4267c1:	mov    edx,DWORD PTR [ebp-0x24]
  4267c4:	shr    edx,0xc
  4267c7:	add    edx,0xffcd8d11
  4267cd:	xor    edx,esi
  4267cf:	cmp    edx,0xf89c85bc
  4267d5:	jne    0x4267f6
  4267d7:	mov    edx,DWORD PTR [ebp-0x28]
  4267da:	add    edx,DWORD PTR [ebp+0x1c]
  4267dd:	mov    ebx,DWORD PTR [eax]
  4267df:	cmp    DWORD PTR [ebx+edx*1],0x0
  4267e3:	je     0x4267f3
  4267e5:	mov    ecx,DWORD PTR [ebp+0xc]
  4267e8:	add    ecx,DWORD PTR [ebx+edx*1]
  4267eb:	mov    ebx,DWORD PTR [eax]
  4267ed:	mov    DWORD PTR [edx+ebx*1],ecx
  4267f0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4267f3:	mov    ebx,DWORD PTR [ebp-0x14]
  4267f6:	add    DWORD PTR [ebp-0x4],0x2
  4267fa:	dec    DWORD PTR [ebp-0x18]
  4267fd:	jne    0x4267af
  4267ff:	mov    edx,DWORD PTR [ebp-0xc]
  426802:	add    DWORD PTR [ebp-0x8],edx
  426805:	mov    edx,DWORD PTR [ebp-0x8]
  426808:	cmp    edx,DWORD PTR [ecx+0xa4]
  42680e:	jae    0x426821
  426810:	add    eax,DWORD PTR [ebp-0xc]
  426813:	mov    edx,DWORD PTR [eax+0x4]
  426816:	mov    DWORD PTR [ebp-0xc],edx
  426819:	test   edx,edx
  42681b:	jne    0x426799
  426821:	mov    eax,DWORD PTR [ebp-0x10]
  426824:	mov    DWORD PTR [ebp-0x6c],eax
  426827:	mov    DWORD PTR [ebp-0x70],0x4
  42682e:	mov    eax,DWORD PTR [ecx+0x50]
  426831:	mov    DWORD PTR [ebp-0x68],eax
  426834:	mov    eax,DWORD PTR [ebp-0x1c]
  426837:	xor    eax,esi
  426839:	add    eax,edi
  42683b:	mov    DWORD PTR [ebp-0x64],eax
  42683e:	lea    eax,[ebp-0x20]
  426841:	mov    DWORD PTR [ebp-0x60],eax
  426844:	lea    eax,[ebp-0x70]
  426847:	push   eax
  426848:	mov    eax,DWORD PTR [ebp+0x8]
  42684b:	xor    eax,esi
  42684d:	add    eax,edi
  42684f:	push   eax
  426850:	mov    eax,DWORD PTR [ebp+0x20]
  426853:	add    eax,0xee
  426858:	push   eax
  426859:	mov    eax,DWORD PTR [ebp+0x20]
  42685c:	mov    eax,DWORD PTR [eax+0x198]
  426862:	push   DWORD PTR [eax]
  426864:	mov    eax,DWORD PTR [ebp+0x10]
  426867:	call   eax
  426869:	mov    eax,DWORD PTR [ebp+0x20]
  42686c:	mov    eax,DWORD PTR [eax+0x180]
  426872:	add    eax,DWORD PTR [ebp+0xc]
  426875:	mov    ecx,DWORD PTR [ebp+0xc]
  426878:	push   DWORD PTR [ebp+0x18]
  42687b:	mov    DWORD PTR [eax],ecx
  42687d:	push   DWORD PTR [ebp+0x14]
  426880:	push   DWORD PTR [ebp+0x1c]
  426883:	call   ebx
  426885:	mov    ecx,DWORD PTR [ebp+0xc]
  426888:	add    ecx,DWORD PTR [ebp+0x20]
  42688b:	lea    eax,[ebp+0x4]
  42688e:	mov    DWORD PTR [ebp+0x20],ecx
  426891:	mov    ecx,DWORD PTR [ebp+0x20]
  426894:	mov    ecx,DWORD PTR [ebp+0x20]
  426897:	mov    edx,DWORD PTR [ecx+0x190]
  42689d:	mov    ecx,DWORD PTR [ebp+0x20]
  4268a0:	mov    ecx,DWORD PTR [ecx+0x18c]
  4268a6:	mov    esi,DWORD PTR [ecx]
  4268a8:	cmp    DWORD PTR [eax],esi
  4268aa:	jb     0x4268cb
  4268ac:	mov    esi,DWORD PTR [edx]
  4268ae:	mov    edi,DWORD PTR [edx]
  4268b0:	mov    esi,DWORD PTR [esi+0x3c]
  4268b3:	lea    esi,[edi+esi*1+0x50]
  4268b7:	mov    edi,DWORD PTR [ecx]
  4268b9:	add    edi,DWORD PTR [esi]
  4268bb:	cmp    DWORD PTR [eax],edi
  4268bd:	jae    0x4268cb
  4268bf:	mov    esi,DWORD PTR [ecx]
  4268c1:	mov    ecx,DWORD PTR [eax]
  4268c3:	mov    edx,DWORD PTR [edx]
  4268c5:	sub    ecx,esi
  4268c7:	add    edx,ecx
  4268c9:	mov    DWORD PTR [eax],edx
  4268cb:	mov    eax,DWORD PTR [ebp+0xc]
  4268ce:	jmp    0x4268d2
  4268d0:	xor    eax,eax
  4268d2:	pop    edi
  4268d3:	pop    esi
  4268d4:	pop    ebx
  4268d5:	leave  
  4268d6:	ret    0x1c
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	sub    esp,0x1c
  4268df:	push   esi
  4268e0:	mov    esi,eax
  4268e2:	mov    eax,DWORD PTR [ecx+0x190]
  4268e8:	cmp    DWORD PTR [eax],0x0
  4268eb:	je     0x4269fb
  4268f1:	test   edx,edx
  4268f3:	je     0x4269fb
  4268f9:	test   esi,esi
  4268fb:	je     0x4269fb
  426901:	mov    eax,DWORD PTR [esi+0x88]
  426907:	test   eax,eax
  426909:	je     0x4269f6
  42690f:	cmp    DWORD PTR [esi+0x8c],0x10
  426916:	je     0x4269f6
  42691c:	cmp    DWORD PTR [esi+0x34],edx
  42691f:	je     0x4269f6
  426925:	mov    esi,DWORD PTR [ecx+0x18c]
  42692b:	and    DWORD PTR [ebp-0x10],0x0
  42692f:	mov    ecx,edx
  426931:	sub    ecx,DWORD PTR [esi]
  426933:	add    eax,edx
  426935:	movzx  edx,WORD PTR [eax+0xc]
  426939:	mov    DWORD PTR [ebp-0x1c],ecx
  42693c:	movzx  ecx,WORD PTR [eax+0xe]
  426940:	add    ecx,edx
  426942:	je     0x4269f6
  426948:	lea    ecx,[eax+0x14]
  42694b:	push   ebx
  42694c:	mov    DWORD PTR [ebp-0x18],ecx
  42694f:	mov    esi,0x7fffffff
  426954:	push   edi
  426955:	test   DWORD PTR [ecx],esi
  426957:	je     0x4269d8
  426959:	mov    edx,DWORD PTR [ecx]
  42695b:	and    DWORD PTR [ebp-0xc],0x0
  42695f:	and    edx,esi
  426961:	add    edx,eax
  426963:	movzx  edi,WORD PTR [edx+0xe]
  426967:	movzx  ebx,WORD PTR [edx+0xc]
  42696b:	add    edi,ebx
  42696d:	je     0x4269d8
  42696f:	lea    ecx,[edx+0x14]
  426972:	mov    DWORD PTR [ebp-0x14],ecx
  426975:	test   DWORD PTR [ecx],esi
  426977:	je     0x4269ba
  426979:	mov    ecx,DWORD PTR [ecx]
  42697b:	and    DWORD PTR [ebp-0x8],0x0
  42697f:	and    ecx,esi
  426981:	add    ecx,eax
  426983:	movzx  edi,WORD PTR [ecx+0xe]
  426987:	movzx  ebx,WORD PTR [ecx+0xc]
  42698b:	add    edi,ebx
  42698d:	je     0x4269ba
  42698f:	lea    edi,[ecx+0x14]
  426992:	mov    DWORD PTR [ebp-0x4],edi
  426995:	mov    edi,DWORD PTR [ebp-0x4]
  426998:	mov    edi,DWORD PTR [edi]
  42699a:	test   edi,edi
  42699c:	je     0x4269a4
  42699e:	mov    ebx,DWORD PTR [ebp-0x1c]
  4269a1:	add    DWORD PTR [edi+eax*1],ebx
  4269a4:	movzx  edi,WORD PTR [ecx+0xe]
  4269a8:	movzx  ebx,WORD PTR [ecx+0xc]
  4269ac:	inc    DWORD PTR [ebp-0x8]
  4269af:	add    DWORD PTR [ebp-0x4],0x8
  4269b3:	add    edi,ebx
  4269b5:	cmp    DWORD PTR [ebp-0x8],edi
  4269b8:	jb     0x426995
  4269ba:	movzx  edi,WORD PTR [edx+0xe]
  4269be:	movzx  ebx,WORD PTR [edx+0xc]
  4269c2:	mov    ecx,DWORD PTR [ebp-0x14]
  4269c5:	inc    DWORD PTR [ebp-0xc]
  4269c8:	add    ecx,0x8
  4269cb:	add    edi,ebx
  4269cd:	mov    DWORD PTR [ebp-0x14],ecx
  4269d0:	cmp    DWORD PTR [ebp-0xc],edi
  4269d3:	jb     0x426975
  4269d5:	mov    ecx,DWORD PTR [ebp-0x18]
  4269d8:	movzx  edx,WORD PTR [eax+0xe]
  4269dc:	movzx  edi,WORD PTR [eax+0xc]
  4269e0:	inc    DWORD PTR [ebp-0x10]
  4269e3:	add    ecx,0x8
  4269e6:	add    edx,edi
  4269e8:	mov    DWORD PTR [ebp-0x18],ecx
  4269eb:	cmp    DWORD PTR [ebp-0x10],edx
  4269ee:	jb     0x426955
  4269f4:	pop    edi
  4269f5:	pop    ebx
  4269f6:	xor    eax,eax
  4269f8:	inc    eax
  4269f9:	jmp    0x4269fd
  4269fb:	xor    eax,eax
  4269fd:	pop    esi
  4269fe:	leave  
  4269ff:	ret    
  426a00:	push   ebp
  426a01:	mov    ebp,esp
  426a03:	mov    ecx,DWORD PTR [ecx+0x190]
  426a09:	mov    eax,DWORD PTR [ebp+0xc]
  426a0c:	sub    esp,0x10
  426a0f:	push   ebx
  426a10:	xor    ebx,ebx
  426a12:	push   esi
  426a13:	push   edi
  426a14:	cmp    DWORD PTR [ecx],ebx
  426a16:	je     0x426a9e
  426a1c:	cmp    eax,ebx
  426a1e:	je     0x426a9e
  426a20:	cmp    DWORD PTR [eax+0x78],ebx
  426a23:	jne    0x426a2a
  426a25:	xor    eax,eax
  426a27:	inc    eax
  426a28:	jmp    0x426aa0
  426a2a:	mov    eax,DWORD PTR [eax+0x78]
  426a2d:	add    eax,DWORD PTR [ebp+0x8]
  426a30:	mov    ecx,DWORD PTR [eax+0x1c]
  426a33:	mov    edx,DWORD PTR [eax+0x24]
  426a36:	mov    esi,DWORD PTR [eax+0x14]
  426a39:	mov    edi,DWORD PTR [eax+0x18]
  426a3c:	add    ecx,DWORD PTR [ebp+0x8]
  426a3f:	add    edx,DWORD PTR [ebp+0x8]
  426a42:	mov    DWORD PTR [ebp-0x4],esi
  426a45:	cmp    esi,edi
  426a47:	ja     0x426a4c
  426a49:	mov    DWORD PTR [ebp-0x4],edi
  426a4c:	mov    DWORD PTR [ebp-0x8],ebx
  426a4f:	cmp    DWORD PTR [ebp-0x4],ebx
  426a52:	jbe    0x426a25
  426a54:	cmp    ebx,DWORD PTR [eax+0x14]
  426a57:	jae    0x426a5f
  426a59:	movzx  esi,WORD PTR [edx+ebx*2]
  426a5d:	jmp    0x426a61
  426a5f:	mov    esi,ebx
  426a61:	lea    esi,[ecx+esi*4]
  426a64:	mov    edi,DWORD PTR [esi]
  426a66:	test   edi,edi
  426a68:	je     0x426a93
  426a6a:	add    edi,DWORD PTR [ebp+0x8]
  426a6d:	mov    DWORD PTR [ebp-0x10],edi
  426a70:	cmp    edi,eax
  426a72:	jbe    0x426a84
  426a74:	mov    ebx,DWORD PTR [ebp+0xc]
  426a77:	mov    ebx,DWORD PTR [ebx+0x7c]
  426a7a:	add    ebx,eax
  426a7c:	cmp    edi,ebx
  426a7e:	jae    0x426a84
  426a80:	mov    esi,DWORD PTR [esi]
  426a82:	jmp    0x426a8c
  426a84:	sub    edi,DWORD PTR [ebp+0x8]
  426a87:	mov    DWORD PTR [esi],edi
  426a89:	mov    esi,DWORD PTR [ebp-0x10]
  426a8c:	test   esi,esi
  426a8e:	je     0x426a9e
  426a90:	mov    ebx,DWORD PTR [ebp-0x8]
  426a93:	inc    ebx
  426a94:	mov    DWORD PTR [ebp-0x8],ebx
  426a97:	cmp    ebx,DWORD PTR [ebp-0x4]
  426a9a:	jb     0x426a54
  426a9c:	jmp    0x426a25
  426a9e:	xor    eax,eax
  426aa0:	pop    edi
  426aa1:	pop    esi
  426aa2:	pop    ebx
  426aa3:	leave  
  426aa4:	ret    0x8
  426aa7:	push   ebp
  426aa8:	mov    ebp,esp
  426aaa:	sub    esp,0x2c
  426aad:	mov    edx,0xf89c85b9
  426ab2:	mov    DWORD PTR [ebp-0x4],edx
  426ab5:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426abc:	mov    eax,DWORD PTR [ebp-0x4]
  426abf:	mov    ecx,DWORD PTR [ebp-0x4]
  426ac2:	mov    ecx,DWORD PTR [ebp-0x4]
  426ac5:	mov    ecx,DWORD PTR [ebp-0x4]
  426ac8:	mov    ecx,DWORD PTR [ebp-0x4]
  426acb:	mov    ecx,DWORD PTR [ebp-0x4]
  426ace:	push   ebx
  426acf:	mov    ebx,DWORD PTR [ebp+0x10]
  426ad2:	push   esi
  426ad3:	mov    esi,0x75108a8
  426ad8:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426adf:	mov    ecx,DWORD PTR [ebp-0x4]
  426ae2:	mov    ebx,DWORD PTR [ebx+0x190]
  426ae8:	push   edi
  426ae9:	mov    edi,0x3272ef
  426aee:	xor    ecx,esi
  426af0:	xor    eax,esi
  426af2:	add    eax,edi
  426af4:	add    ecx,edi
  426af6:	mov    DWORD PTR [ebp-0x18],eax
  426af9:	cmp    ecx,DWORD PTR [ebx]
  426afb:	je     0x426d7c
  426b01:	mov    ebx,DWORD PTR [ebp-0x4]
  426b04:	mov    ecx,DWORD PTR [ebp+0xc]
  426b07:	xor    ebx,esi
  426b09:	add    ebx,edi
  426b0b:	cmp    ebx,ecx
  426b0d:	je     0x426d7c
  426b13:	mov    ebx,DWORD PTR [ebp-0x4]
  426b16:	mov    ecx,DWORD PTR [ecx+0x80]
  426b1c:	xor    ebx,esi
  426b1e:	add    ebx,edi
  426b20:	cmp    ecx,ebx
  426b22:	je     0x426d77
  426b28:	add    ecx,DWORD PTR [ebp+0x8]
  426b2b:	mov    DWORD PTR [ebp-0x2c],ecx
  426b2e:	mov    ebx,edx
  426b30:	xor    ebx,esi
  426b32:	add    ebx,edi
  426b34:	mov    DWORD PTR [ebp-0x10],ebx
  426b37:	mov    ebx,DWORD PTR [ebp-0x10]
  426b3a:	cmp    ebx,edx
  426b3c:	je     0x426b50
  426b3e:	mov    edx,DWORD PTR [ebp-0x10]
  426b41:	mov    ebx,DWORD PTR [ebp-0x4]
  426b44:	imul   edx,edx,0x14
  426b47:	xor    ebx,esi
  426b49:	add    ebx,edi
  426b4b:	cmp    DWORD PTR [edx+ecx*1],ebx
  426b4e:	jne    0x426b67
  426b50:	mov    edx,DWORD PTR [ebp-0x10]
  426b53:	mov    ebx,DWORD PTR [ebp-0x4]
  426b56:	imul   edx,edx,0x14
  426b59:	xor    ebx,esi
  426b5b:	add    ebx,edi
  426b5d:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426b61:	je     0x426d69
  426b67:	mov    eax,DWORD PTR [ebp-0x4]
  426b6a:	mov    ebx,DWORD PTR [ebp-0x4]
  426b6d:	mov    eax,DWORD PTR [ebp-0x10]
  426b70:	imul   eax,eax,0x14
  426b73:	add    eax,ecx
  426b75:	mov    ecx,DWORD PTR [eax+0x10]
  426b78:	add    ecx,DWORD PTR [ebp+0x8]
  426b7b:	xor    ebx,esi
  426b7d:	mov    DWORD PTR [ebp-0x1c],ecx
  426b80:	mov    ecx,DWORD PTR [ebp-0x4]
  426b83:	mov    edx,DWORD PTR [ebp-0x4]
  426b86:	xor    ecx,esi
  426b88:	add    ecx,edi
  426b8a:	xor    edx,esi
  426b8c:	mov    DWORD PTR [ebp-0x24],ecx
  426b8f:	mov    ecx,DWORD PTR [eax]
  426b91:	add    edx,edi
  426b93:	add    ebx,edi
  426b95:	cmp    ecx,edx
  426b97:	je     0x426b9f
  426b99:	add    ecx,DWORD PTR [ebp+0x8]
  426b9c:	mov    DWORD PTR [ebp-0x24],ecx
  426b9f:	mov    ecx,DWORD PTR [ebp-0x4]
  426ba2:	xor    ecx,esi
  426ba4:	add    ecx,DWORD PTR [eax+0xc]
  426ba7:	mov    eax,DWORD PTR [ebp+0x8]
  426baa:	lea    eax,[ecx+eax*1+0x3272ef]
  426bb1:	mov    DWORD PTR [ebp+0xc],eax
  426bb4:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426bbb:	mov    eax,DWORD PTR [ebp+0x10]
  426bbe:	push   DWORD PTR [ebp+0xc]
  426bc1:	mov    eax,DWORD PTR [eax+0x1e0]
  426bc7:	call   DWORD PTR [eax]
  426bc9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bcc:	xor    ecx,esi
  426bce:	add    ecx,edi
  426bd0:	mov    DWORD PTR [ebp-0xc],eax
  426bd3:	cmp    ecx,eax
  426bd5:	jne    0x426be9
  426bd7:	mov    eax,DWORD PTR [ebp+0x10]
  426bda:	push   DWORD PTR [ebp+0xc]
  426bdd:	mov    eax,DWORD PTR [eax+0x1e0]
  426be3:	call   DWORD PTR [eax+0xc]
  426be6:	mov    DWORD PTR [ebp-0xc],eax
  426be9:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426bf0:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426bf7:	mov    eax,DWORD PTR [ebp-0x4]
  426bfa:	xor    eax,esi
  426bfc:	add    eax,edi
  426bfe:	cmp    eax,DWORD PTR [ebp-0xc]
  426c01:	jne    0x426c26
  426c03:	mov    eax,DWORD PTR [ebp-0x8]
  426c06:	mov    ecx,DWORD PTR [ebp-0x20]
  426c09:	xor    eax,esi
  426c0b:	xor    ecx,esi
  426c0d:	lea    ebx,[ebx+eax*1+0x3272ef]
  426c14:	mov    eax,DWORD PTR [ebp+0x10]
  426c17:	mov    eax,DWORD PTR [eax+0x1e0]
  426c1d:	add    ecx,edi
  426c1f:	imul   ecx,ebx
  426c22:	push   ecx
  426c23:	call   DWORD PTR [eax+0x24]
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,esi
  426c2b:	add    eax,edi
  426c2d:	cmp    eax,DWORD PTR [ebp-0xc]
  426c30:	jne    0x426c41
  426c32:	mov    eax,DWORD PTR [ebp-0x28]
  426c35:	xor    eax,esi
  426c37:	add    eax,edi
  426c39:	cmp    ebx,eax
  426c3b:	jbe    0x426bbb
  426c41:	mov    eax,DWORD PTR [ebp-0x4]
  426c44:	xor    eax,esi
  426c46:	add    eax,edi
  426c48:	cmp    eax,DWORD PTR [ebp-0xc]
  426c4b:	jne    0x426c64
  426c4d:	mov    eax,DWORD PTR [ebp-0x8]
  426c50:	mov    ecx,DWORD PTR [ebp-0x18]
  426c53:	xor    eax,esi
  426c55:	lea    eax,[ecx+eax*1+0x3272ef]
  426c5c:	mov    DWORD PTR [ebp-0x18],eax
  426c5f:	jmp    0x426d53
  426c64:	mov    DWORD PTR [ebp-0x14],0x1121b21
  426c6b:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426c72:	mov    ebx,DWORD PTR [ebp-0x4]
  426c75:	xor    ebx,esi
  426c77:	add    ebx,edi
  426c79:	jmp    0x426d40
  426c7e:	mov    eax,DWORD PTR [ebp-0x4]
  426c81:	xor    eax,esi
  426c83:	add    eax,edi
  426c85:	mov    DWORD PTR [ebp-0x14],eax
  426c88:	mov    eax,DWORD PTR [ebp-0x4]
  426c8b:	xor    eax,esi
  426c8d:	add    eax,edi
  426c8f:	mov    DWORD PTR [ebp+0xc],eax
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	mov    eax,DWORD PTR [ebp-0x24]
  426c98:	xor    ecx,esi
  426c9a:	add    ecx,edi
  426c9c:	cmp    ecx,eax
  426c9e:	je     0x426ca6
  426ca0:	mov    eax,DWORD PTR [eax+ebx*4]
  426ca3:	mov    DWORD PTR [ebp-0x14],eax
  426ca6:	mov    eax,DWORD PTR [ebp-0x1c]
  426ca9:	mov    eax,DWORD PTR [eax+ebx*4]
  426cac:	mov    DWORD PTR [ebp+0xc],eax
  426caf:	mov    eax,DWORD PTR [ebp-0x4]
  426cb2:	mov    ecx,DWORD PTR [ebp-0x14]
  426cb5:	xor    eax,esi
  426cb7:	add    eax,edi
  426cb9:	cmp    eax,ecx
  426cbb:	je     0x426ce6
  426cbd:	mov    eax,DWORD PTR [ebp-0x4]
  426cc0:	mov    ecx,DWORD PTR [ebp-0x14]
  426cc3:	xor    eax,esi
  426cc5:	add    eax,edi
  426cc7:	shr    ecx,0x1f
  426cca:	cmp    eax,ecx
  426ccc:	je     0x426ce6
  426cce:	mov    ecx,DWORD PTR [ebp-0x14]
  426cd1:	mov    eax,DWORD PTR [ebp+0x10]
  426cd4:	mov    eax,DWORD PTR [eax+0x1e0]
  426cda:	movzx  ecx,cx
  426cdd:	push   ecx
  426cde:	push   DWORD PTR [ebp-0xc]
  426ce1:	call   DWORD PTR [eax+0x8]
  426ce4:	jmp    0x426cff
  426ce6:	mov    eax,DWORD PTR [ebp+0xc]
  426ce9:	add    eax,DWORD PTR [ebp+0x8]
  426cec:	mov    ecx,DWORD PTR [ebp+0x10]
  426cef:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426cf5:	add    eax,0x2
  426cf8:	push   eax
  426cf9:	push   DWORD PTR [ebp-0xc]
  426cfc:	call   DWORD PTR [ecx+0x8]
  426cff:	mov    DWORD PTR [ebp+0xc],eax
  426d02:	mov    eax,DWORD PTR [ebp-0x4]
  426d05:	mov    ecx,DWORD PTR [ebp+0xc]
  426d08:	xor    eax,esi
  426d0a:	add    eax,edi
  426d0c:	cmp    eax,ecx
  426d0e:	mov    eax,DWORD PTR [ebp-0x8]
  426d11:	jne    0x426d24
  426d13:	mov    ecx,DWORD PTR [ebp-0x18]
  426d16:	xor    eax,esi
  426d18:	lea    eax,[ecx+eax*1+0x3272ef]
  426d1f:	mov    DWORD PTR [ebp-0x18],eax
  426d22:	jmp    0x426d34
  426d24:	mov    ecx,DWORD PTR [ebp+0xc]
  426d27:	xor    eax,esi
  426d29:	add    eax,edi
  426d2b:	imul   eax,ecx
  426d2e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d31:	mov    DWORD PTR [ecx+ebx*4],eax
  426d34:	mov    eax,DWORD PTR [ebp-0x8]
  426d37:	xor    eax,esi
  426d39:	lea    ebx,[ebx+eax*1+0x3272ef]
  426d40:	mov    eax,DWORD PTR [ebp-0x4]
  426d43:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d46:	xor    eax,esi
  426d48:	add    eax,edi
  426d4a:	cmp    DWORD PTR [ecx+ebx*4],eax
  426d4d:	jne    0x426c7e
  426d53:	mov    edx,DWORD PTR [ebp-0x10]
  426d56:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d59:	mov    eax,DWORD PTR [ebp-0x18]
  426d5c:	sub    edx,0x3272ee
  426d62:	xor    edx,esi
  426d64:	jmp    0x426b2e
  426d69:	mov    ecx,DWORD PTR [ebp-0x4]
  426d6c:	xor    ecx,esi
  426d6e:	add    ecx,edi
  426d70:	cmp    eax,ecx
  426d72:	mov    eax,DWORD PTR [ebp-0x4]
  426d75:	jne    0x426d7f
  426d77:	mov    eax,DWORD PTR [ebp-0x8]
  426d7a:	jmp    0x426d7f
  426d7c:	mov    eax,DWORD PTR [ebp-0x4]
  426d7f:	xor    eax,esi
  426d81:	add    eax,edi
  426d83:	pop    edi
  426d84:	pop    esi
  426d85:	pop    ebx
  426d86:	leave  
  426d87:	ret    0xc
  426d8a:	push   ebp
  426d8b:	mov    ebp,esp
  426d8d:	sub    esp,0x28
  426d90:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426d97:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  426d9e:	mov    eax,DWORD PTR [ebp+0xc]
  426da1:	mov    DWORD PTR [ebp+0xc],eax
  426da4:	push   esi
  426da5:	mov    eax,eax
  426da7:	mov    eax,DWORD PTR [ebp-0x4]
  426daa:	mov    esi,DWORD PTR [ebp+0x8]
  426dad:	mov    ecx,0x75108a8
  426db2:	xor    eax,ecx
  426db4:	mov    edx,0x3272ef
  426db9:	add    eax,edx
  426dbb:	cmp    esi,eax
  426dbd:	je     0x426ee4
  426dc3:	mov    eax,DWORD PTR [ebp+0x8]
  426dc6:	mov    esi,DWORD PTR [ebp+0x8]
  426dc9:	add    esi,DWORD PTR [eax+0x3c]
  426dcc:	push   edi
  426dcd:	mov    DWORD PTR [ebp+0xc],esi
  426dd0:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426dd7:	mov    eax,DWORD PTR [ebp-0x1c]
  426dda:	mov    esi,DWORD PTR [ebp-0x4]
  426ddd:	mov    edi,DWORD PTR [ebp+0xc]
  426de0:	xor    esi,ecx
  426de2:	xor    eax,ecx
  426de4:	add    esi,edx
  426de6:	cmp    DWORD PTR [edi+eax*8+0x19397f0],esi
  426ded:	je     0x426ede
  426df3:	mov    esi,DWORD PTR [ebp+0xc]
  426df6:	mov    eax,DWORD PTR [ebp+0x8]
  426df9:	add    eax,DWORD PTR [esi+0xa0]
  426dff:	mov    esi,DWORD PTR [ebp+0x8]
  426e02:	mov    edi,DWORD PTR [ebp+0xc]
  426e05:	sub    esi,DWORD PTR [edi+0x34]
  426e08:	mov    edi,DWORD PTR [ebp-0x4]
  426e0b:	xor    edi,ecx
  426e0d:	add    edi,edx
  426e0f:	mov    DWORD PTR [ebp-0x24],esi
  426e12:	cmp    esi,edi
  426e14:	je     0x426ede
  426e1a:	mov    esi,DWORD PTR [ebp-0x4]
  426e1d:	xor    esi,ecx
  426e1f:	add    esi,edx
  426e21:	mov    DWORD PTR [ebp-0x8],esi
  426e24:	push   ebx
  426e25:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426e2c:	jmp    0x426ec8
  426e31:	mov    esi,DWORD PTR [ebp-0x4]
  426e34:	xor    esi,ecx
  426e36:	lea    edi,[ebx-0x8]
  426e39:	add    esi,edx
  426e3b:	shr    edi,1
  426e3d:	cmp    esi,edi
  426e3f:	jae    0x426eae
  426e41:	sub    edi,esi
  426e43:	lea    ebx,[eax+esi*2+0x8]
  426e47:	mov    DWORD PTR [ebp-0x18],edi
  426e4a:	movzx  esi,WORD PTR [ebx]
  426e4d:	and    esi,0xfff
  426e53:	mov    DWORD PTR [ebp-0x14],esi
  426e56:	mov    edi,DWORD PTR [ebp-0x14]
  426e59:	mov    esi,DWORD PTR [eax]
  426e5b:	sub    esi,edx
  426e5d:	add    edi,esi
  426e5f:	movzx  esi,WORD PTR [ebx]
  426e62:	shr    esi,0xc
  426e65:	xor    edi,ecx
  426e67:	mov    DWORD PTR [ebp-0x20],edi
  426e6a:	mov    DWORD PTR [ebp-0x14],esi
  426e6d:	mov    esi,DWORD PTR [ebp-0x20]
  426e70:	mov    edi,DWORD PTR [ebp+0x8]
  426e73:	xor    esi,ecx
  426e75:	lea    esi,[esi+edi*1+0x3272ef]
  426e7c:	mov    DWORD PTR [ebp-0x20],esi
  426e7f:	mov    esi,DWORD PTR [ebp-0x10]
  426e82:	mov    edi,DWORD PTR [ebp-0x14]
  426e85:	xor    esi,ecx
  426e87:	add    esi,edx
  426e89:	cmp    edi,esi
  426e8b:	jne    0x426ea3
  426e8d:	mov    esi,DWORD PTR [ebp-0x10]
  426e90:	mov    edi,DWORD PTR [ebp-0x14]
  426e93:	xor    esi,ecx
  426e95:	add    esi,edx
  426e97:	cmp    edi,esi
  426e99:	jne    0x426ea3
  426e9b:	mov    esi,DWORD PTR [ebp-0x20]
  426e9e:	mov    edi,DWORD PTR [ebp-0x24]
  426ea1:	add    DWORD PTR [esi],edi
  426ea3:	add    ebx,0x2
  426ea6:	dec    DWORD PTR [ebp-0x18]
  426ea9:	jne    0x426e4a
  426eab:	mov    ebx,DWORD PTR [ebp-0xc]
  426eae:	add    DWORD PTR [ebp-0x8],ebx
  426eb1:	mov    esi,DWORD PTR [ebp-0x1c]
  426eb4:	mov    edi,DWORD PTR [ebp-0x8]
  426eb7:	mov    ebx,DWORD PTR [ebp+0xc]
  426eba:	xor    esi,ecx
  426ebc:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397f4]
  426ec3:	jae    0x426edd
  426ec5:	add    eax,DWORD PTR [ebp-0xc]
  426ec8:	mov    esi,DWORD PTR [ebp-0x4]
  426ecb:	mov    ebx,DWORD PTR [eax+0x4]
  426ece:	xor    esi,ecx
  426ed0:	add    esi,edx
  426ed2:	mov    DWORD PTR [ebp-0xc],ebx
  426ed5:	cmp    ebx,esi
  426ed7:	jne    0x426e31
  426edd:	pop    ebx
  426ede:	mov    eax,DWORD PTR [ebp-0x28]
  426ee1:	pop    edi
  426ee2:	jmp    0x426ee7
  426ee4:	mov    eax,DWORD PTR [ebp-0x4]
  426ee7:	xor    eax,ecx
  426ee9:	add    eax,edx
  426eeb:	pop    esi
  426eec:	leave  
  426eed:	ret    0x8
  426ef0:	push   ebp
  426ef1:	mov    ebp,esp
  426ef3:	sub    esp,0xd8
  426ef9:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426f00:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  426f07:	mov    eax,DWORD PTR [ebp-0x4]
  426f0a:	push   ebx
  426f0b:	push   esi
  426f0c:	mov    esi,0x75108a8
  426f11:	xor    eax,esi
  426f13:	push   edi
  426f14:	mov    edi,0x3272ef
  426f19:	add    eax,edi
  426f1b:	mov    DWORD PTR [ebp-0x18],eax
  426f1e:	mov    eax,DWORD PTR [ebp-0x4]
  426f21:	xor    eax,esi
  426f23:	add    eax,edi
  426f25:	mov    DWORD PTR [ebp-0x8],eax
  426f28:	mov    ebx,DWORD PTR [ebp+0x20]
  426f2b:	mov    eax,DWORD PTR [ebp-0x1c]
  426f2e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426f31:	xor    eax,ecx
  426f33:	mov    DWORD PTR [ebp-0x1c],eax
  426f36:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  426f3d:	mov    eax,DWORD PTR [ebp-0xc]
  426f40:	mov    ecx,DWORD PTR [ebp-0xc]
  426f43:	xor    eax,ecx
  426f45:	mov    DWORD PTR [ebp-0xc],eax
  426f48:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426f4f:	mov    eax,DWORD PTR [ebp-0x10]
  426f52:	mov    ecx,DWORD PTR [ebp-0x10]
  426f55:	xor    eax,ecx
  426f57:	mov    DWORD PTR [ebp-0x10],eax
  426f5a:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426f61:	mov    eax,DWORD PTR [ebp-0x28]
  426f64:	mov    ecx,DWORD PTR [ebp-0x28]
  426f67:	xor    eax,ecx
  426f69:	mov    DWORD PTR [ebp-0x28],eax
  426f6c:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  426f73:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  426f7a:	mov    eax,DWORD PTR [ebp+0x8]
  426f7d:	test   eax,eax
  426f7f:	je     0x427408
  426f85:	mov    eax,DWORD PTR [ebp+0xc]
  426f88:	test   eax,eax
  426f8a:	je     0x427408
  426f90:	mov    eax,DWORD PTR [ebp+0x18]
  426f93:	test   eax,eax
  426f95:	je     0x427408
  426f9b:	mov    eax,DWORD PTR [ebp+0x20]
  426f9e:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa1:	xor    eax,0x8a8
  426fa6:	add    eax,0x72ef
  426fab:	cmp    WORD PTR [ecx],ax
  426fae:	jne    0x427408
  426fb4:	mov    eax,DWORD PTR [ebp-0x4]
  426fb7:	xor    eax,esi
  426fb9:	add    eax,edi
  426fbb:	mov    DWORD PTR [ebp-0x30],eax
  426fbe:	mov    eax,DWORD PTR [ebp-0x4]
  426fc1:	mov    ecx,DWORD PTR [ebp+0x8]
  426fc4:	mov    eax,DWORD PTR [ebp+0x8]
  426fc7:	add    eax,DWORD PTR [ecx+0x3c]
  426fca:	mov    DWORD PTR [ebp+0xc],eax
  426fcd:	mov    eax,DWORD PTR [eax+0x50]
  426fd0:	test   eax,eax
  426fd2:	je     0x427408
  426fd8:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426fdf:	mov    eax,DWORD PTR [ebp-0x2c]
  426fe2:	xor    eax,esi
  426fe4:	add    eax,edi
  426fe6:	mov    DWORD PTR [ebp-0x2c],eax
  426fe9:	mov    eax,DWORD PTR [ebp-0x4]
  426fec:	mov    eax,DWORD PTR [ebx+0x190]
  426ff2:	mov    ecx,DWORD PTR [eax]
  426ff4:	mov    ecx,DWORD PTR [ecx+0x3c]
  426ff7:	add    ecx,DWORD PTR [eax]
  426ff9:	mov    eax,DWORD PTR [ebp-0x4]
  426ffc:	mov    eax,DWORD PTR [ebx+0x18c]
  427002:	mov    edx,DWORD PTR [eax]
  427004:	mov    DWORD PTR [ebp-0x20],ecx
  427007:	mov    DWORD PTR [ebp+0x20],edx
  42700a:	cmp    edx,edx
  42700c:	jne    0x427040
  42700e:	mov    eax,DWORD PTR [ebx+0x1e0]
  427014:	lea    edx,[ebp-0x18]
  427017:	push   edx
  427018:	mov    edx,DWORD PTR [ebp-0xc]
  42701b:	xor    edx,esi
  42701d:	add    edx,edi
  42701f:	push   edx
  427020:	push   DWORD PTR [ecx+0x50]
  427023:	push   DWORD PTR [ebp+0x20]
  427026:	call   DWORD PTR [eax+0x1c]
  427029:	mov    eax,DWORD PTR [ebp-0x20]
  42702c:	mov    ecx,DWORD PTR [eax+0x54]
  42702f:	mov    eax,DWORD PTR [eax+0x50]
  427032:	sub    eax,ecx
  427034:	add    ecx,DWORD PTR [ebp+0x20]
  427037:	push   ecx
  427038:	call   0x4279a3
  42703d:	mov    edx,DWORD PTR [ebp+0x20]
  427040:	mov    eax,DWORD PTR [ebx+0x194]
  427046:	mov    DWORD PTR [eax],edx
  427048:	mov    eax,DWORD PTR [ebp+0xc]
  42704b:	push   DWORD PTR [eax+0x54]
  42704e:	push   DWORD PTR [ebp+0x8]
  427051:	push   edx
  427052:	call   0x427899
  427057:	mov    ecx,DWORD PTR [ebp+0x20]
  42705a:	mov    eax,DWORD PTR [ecx+0x3c]
  42705d:	add    eax,ecx
  42705f:	movzx  ecx,WORD PTR [eax+0x14]
  427063:	lea    ecx,[ecx+eax*1+0x18]
  427067:	mov    DWORD PTR [ebp+0x18],ecx
  42706a:	mov    ecx,DWORD PTR [ebp-0x4]
  42706d:	movzx  edx,WORD PTR [eax+0x6]
  427071:	xor    ecx,esi
  427073:	add    ecx,edi
  427075:	mov    DWORD PTR [ebp+0xc],eax
  427078:	cmp    edx,ecx
  42707a:	je     0x427127
  427080:	mov    ecx,DWORD PTR [ebp-0x4]
  427083:	xor    ecx,esi
  427085:	add    ecx,edi
  427087:	mov    DWORD PTR [ebp-0x8],ecx
  42708a:	mov    ecx,DWORD PTR [ebp-0x24]
  42708d:	movzx  edx,WORD PTR [eax+0x6]
  427091:	xor    ecx,esi
  427093:	sub    edx,ecx
  427095:	sub    edx,edi
  427097:	cmp    DWORD PTR [ebp-0x8],edx
  42709a:	ja     0x427127
  4270a0:	mov    edx,DWORD PTR [ebp+0x18]
  4270a3:	add    edx,0x8
  4270a6:	mov    DWORD PTR [ebp+0x18],edx
  4270a9:	jmp    0x4270ae
  4270ab:	mov    edx,DWORD PTR [ebp+0x18]
  4270ae:	mov    eax,DWORD PTR [eax+0x38]
  4270b1:	lea    ecx,[eax-0x1]
  4270b4:	mov    DWORD PTR [ebp-0x38],eax
  4270b7:	mov    eax,DWORD PTR [edx]
  4270b9:	test   eax,ecx
  4270bb:	je     0x4270c4
  4270bd:	not    ecx
  4270bf:	and    eax,ecx
  4270c1:	add    eax,DWORD PTR [ebp-0x38]
  4270c4:	mov    ecx,DWORD PTR [edx+0x4]
  4270c7:	add    ecx,DWORD PTR [ebp+0x20]
  4270ca:	push   ecx
  4270cb:	call   0x4279a3
  4270d0:	mov    edx,DWORD PTR [ebp-0x4]
  4270d3:	mov    eax,DWORD PTR [ebp+0x18]
  4270d6:	mov    ecx,DWORD PTR [eax+0x8]
  4270d9:	xor    edx,esi
  4270db:	add    edx,edi
  4270dd:	cmp    ecx,edx
  4270df:	je     0x4270f8
  4270e1:	push   ecx
  4270e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4270e5:	add    ecx,DWORD PTR [eax+0xc]
  4270e8:	mov    eax,DWORD PTR [eax+0x4]
  4270eb:	add    eax,DWORD PTR [ebp+0x20]
  4270ee:	push   ecx
  4270ef:	push   eax
  4270f0:	call   0x427899
  4270f5:	mov    eax,DWORD PTR [ebp+0x18]
  4270f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4270fb:	mov    edx,DWORD PTR [ebp-0x8]
  4270fe:	add    eax,0x28
  427101:	xor    ecx,esi
  427103:	lea    ecx,[edx+ecx*1+0x3272ef]
  42710a:	mov    edx,DWORD PTR [ebp+0xc]
  42710d:	mov    DWORD PTR [ebp+0x18],eax
  427110:	mov    eax,DWORD PTR [ebp-0x24]
  427113:	movzx  edx,WORD PTR [edx+0x6]
  427117:	xor    eax,esi
  427119:	sub    edx,eax
  42711b:	mov    eax,DWORD PTR [ebp+0xc]
  42711e:	sub    edx,edi
  427120:	mov    DWORD PTR [ebp-0x8],ecx
  427123:	cmp    ecx,edx
  427125:	jbe    0x4270ab
  427127:	mov    edx,DWORD PTR [ebx+0x18c]
  42712d:	mov    ecx,DWORD PTR [ebp+0x20]
  427130:	cmp    ecx,DWORD PTR [edx]
  427132:	jne    0x42715b
  427134:	mov    eax,DWORD PTR [ebx+0x1e0]
  42713a:	lea    edx,[ebp-0x18]
  42713d:	push   edx
  42713e:	mov    edx,DWORD PTR [ebp-0x10]
  427141:	xor    edx,esi
  427143:	add    edx,edi
  427145:	push   edx
  427146:	mov    edx,DWORD PTR [ebp-0x20]
  427149:	push   DWORD PTR [edx+0x54]
  42714c:	push   ecx
  42714d:	call   DWORD PTR [eax+0x1c]
  427150:	test   eax,eax
  427152:	je     0x4273f9
  427158:	mov    eax,DWORD PTR [ebp+0xc]
  42715b:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427161:	mov    ecx,DWORD PTR [ecx]
  427163:	xor    ecx,esi
  427165:	add    ecx,edi
  427167:	je     0x427324
  42716d:	mov    eax,DWORD PTR [ebp-0x4]
  427170:	xor    eax,esi
  427172:	add    eax,edi
  427174:	and    DWORD PTR [ebp+0x8],0x0
  427178:	mov    DWORD PTR [ebp-0x14],eax
  42717b:	mov    eax,0xf89c85dd
  427180:	lea    ecx,[eax-0x8]
  427183:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  42718a:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  427191:	mov    DWORD PTR [ebp-0x50],eax
  427194:	mov    DWORD PTR [ebp-0x4c],ecx
  427197:	mov    DWORD PTR [ebp-0x48],ecx
  42719a:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  4271a1:	mov    edx,DWORD PTR [ebp+0x8]
  4271a4:	mov    ecx,0x8a8
  4271a9:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4271ae:	mov    edx,0x72ef
  4271b3:	add    cx,dx
  4271b6:	mov    edx,DWORD PTR [ebp+0x8]
  4271b9:	inc    DWORD PTR [ebp+0x8]
  4271bc:	cmp    DWORD PTR [ebp+0x8],0x6
  4271c0:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4271c8:	jb     0x4271a1
  4271ca:	mov    ecx,0xf89c852b
  4271cf:	mov    DWORD PTR [ebp-0xb0],eax
  4271d5:	mov    DWORD PTR [ebp-0x9c],eax
  4271db:	mov    DWORD PTR [ebp-0x74],eax
  4271de:	mov    DWORD PTR [ebp-0x70],eax
  4271e1:	lea    eax,[ecx+0x1]
  4271e4:	mov    edx,0xf89c85ff
  4271e9:	mov    DWORD PTR [ebp-0x64],eax
  4271ec:	mov    DWORD PTR [ebp-0x60],eax
  4271ef:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  4271f9:	mov    DWORD PTR [ebp-0xac],ecx
  4271ff:	mov    DWORD PTR [ebp-0xa8],edx
  427205:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  42720f:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427219:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427223:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  42722d:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  427237:	mov    DWORD PTR [ebp-0x8c],ecx
  42723d:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  427247:	mov    DWORD PTR [ebp-0x84],edx
  42724d:	mov    DWORD PTR [ebp-0x80],0xf89c8528
  427254:	mov    DWORD PTR [ebp-0x7c],ecx
  427257:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  42725e:	mov    DWORD PTR [ebp-0x6c],ecx
  427261:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427268:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  42726f:	xor    eax,eax
  427271:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427278:	xor    cl,0xa8
  42727b:	sub    cl,0x11
  42727e:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427285:	inc    eax
  427286:	cmp    eax,0x17
  427289:	jb     0x427271
  42728b:	mov    eax,DWORD PTR [ebx+0x1e0]
  427291:	lea    ecx,[ebp-0xc0]
  427297:	push   ecx
  427298:	call   DWORD PTR [eax+0x4]
  42729b:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4272a1:	lea    edx,[ebp-0xd8]
  4272a7:	push   edx
  4272a8:	push   eax
  4272a9:	call   DWORD PTR [ecx+0x8]
  4272ac:	mov    DWORD PTR [ebp-0x40],eax
  4272af:	lea    eax,[ebp-0x14]
  4272b2:	push   eax
  4272b3:	mov    eax,DWORD PTR [ebx+0x18c]
  4272b9:	push   DWORD PTR [eax]
  4272bb:	mov    eax,DWORD PTR [ebp-0x40]
  4272be:	call   eax
  4272c0:	mov    eax,DWORD PTR [ebp-0x4]
  4272c3:	xor    eax,esi
  4272c5:	add    eax,edi
  4272c7:	mov    DWORD PTR [ebp-0x34],eax
  4272ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4272cd:	mov    eax,DWORD PTR [ebp-0x14]
  4272d0:	xor    ecx,esi
  4272d2:	add    ecx,edi
  4272d4:	cmp    eax,ecx
  4272d6:	je     0x427321
  4272d8:	mov    DWORD PTR [ebp-0x3c],eax
  4272db:	jmp    0x4272ec
  4272dd:	mov    eax,DWORD PTR [eax]
  4272df:	mov    ecx,DWORD PTR [ebp-0x3c]
  4272e2:	mov    DWORD PTR [ebp-0x14],eax
  4272e5:	mov    eax,DWORD PTR [ebp-0x14]
  4272e8:	cmp    eax,ecx
  4272ea:	je     0x4272f9
  4272ec:	mov    edx,DWORD PTR [eax+0x18]
  4272ef:	mov    ecx,DWORD PTR [ebx+0x18c]
  4272f5:	cmp    edx,DWORD PTR [ecx]
  4272f7:	jne    0x4272dd
  4272f9:	mov    ecx,DWORD PTR [ebx+0x18c]
  4272ff:	mov    edx,DWORD PTR [eax+0x18]
  427302:	cmp    edx,DWORD PTR [ecx]
  427304:	jne    0x427321
  427306:	mov    ecx,DWORD PTR [ebx+0x190]
  42730c:	mov    edx,DWORD PTR [ebp-0x20]
  42730f:	mov    edx,DWORD PTR [edx+0x28]
  427312:	add    edx,DWORD PTR [ecx]
  427314:	mov    DWORD PTR [eax+0x1c],edx
  427317:	mov    eax,DWORD PTR [ebp-0x24]
  42731a:	xor    eax,esi
  42731c:	add    eax,edi
  42731e:	mov    DWORD PTR [ebp-0x34],eax
  427321:	mov    eax,DWORD PTR [ebp+0xc]
  427324:	push   ebx
  427325:	push   eax
  427326:	push   DWORD PTR [ebp+0x20]
  427329:	call   0x426aa7
  42732e:	test   eax,eax
  427330:	je     0x4273f9
  427336:	push   DWORD PTR [ebp+0xc]
  427339:	mov    ecx,ebx
  42733b:	push   DWORD PTR [ebp+0x20]
  42733e:	call   0x426a00
  427343:	test   eax,eax
  427345:	je     0x4273f9
  42734b:	mov    eax,DWORD PTR [ebp+0xc]
  42734e:	mov    edx,DWORD PTR [ebp+0x20]
  427351:	mov    ecx,ebx
  427353:	call   0x4268d9
  427358:	test   eax,eax
  42735a:	je     0x4273f9
  427360:	push   ebx
  427361:	push   DWORD PTR [ebp+0x20]
  427364:	call   0x426d8a
  427369:	test   eax,eax
  42736b:	je     0x4273f9
  427371:	mov    eax,DWORD PTR [ebx+0x18c]
  427377:	mov    edx,DWORD PTR [ebp+0x20]
  42737a:	cmp    edx,DWORD PTR [eax]
  42737c:	jne    0x427398
  42737e:	mov    eax,DWORD PTR [ebx+0x1e0]
  427384:	lea    ecx,[ebp-0x18]
  427387:	push   ecx
  427388:	push   DWORD PTR [ebp-0x18]
  42738b:	mov    ecx,DWORD PTR [ebp-0x20]
  42738e:	push   DWORD PTR [ecx+0x54]
  427391:	push   edx
  427392:	call   DWORD PTR [eax+0x1c]
  427395:	mov    edx,DWORD PTR [ebp+0x20]
  427398:	mov    eax,DWORD PTR [ebx+0x1c8]
  42739e:	mov    eax,DWORD PTR [eax]
  4273a0:	xor    eax,esi
  4273a2:	add    eax,edi
  4273a4:	je     0x4273dd
  4273a6:	mov    ecx,DWORD PTR [ebp+0xc]
  4273a9:	mov    eax,DWORD PTR [ecx+0x28]
  4273ac:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  4273b3:	mov    esi,DWORD PTR [ebp+0x8]
  4273b6:	push   DWORD PTR [ebp+0x14]
  4273b9:	xor    esi,0x8a8
  4273bf:	push   DWORD PTR [ebp+0x10]
  4273c2:	add    esi,0x72ef
  4273c8:	or     WORD PTR [ecx+0x16],si
  4273cc:	add    eax,edx
  4273ce:	push   edx
  4273cf:	call   eax
  4273d1:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  4273db:	jmp    0x4273e7
  4273dd:	mov    eax,DWORD PTR [ebp+0xc]
  4273e0:	mov    eax,DWORD PTR [eax+0x28]
  4273e3:	add    eax,edx
  4273e5:	call   eax
  4273e7:	mov    DWORD PTR [ebp-0x8],eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x8]
  4273ed:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273f0:	mov    DWORD PTR [ecx],eax
  4273f2:	mov    DWORD PTR [ebp-0x30],0x1
  4273f9:	cmp    DWORD PTR [ebp-0x30],0x0
  4273fd:	jne    0x427403
  4273ff:	and    DWORD PTR [ebp+0x20],0x0
  427403:	mov    eax,DWORD PTR [ebp+0x20]
  427406:	jmp    0x42740a
  427408:	xor    eax,eax
  42740a:	pop    edi
  42740b:	pop    esi
  42740c:	pop    ebx
  42740d:	leave  
  42740e:	ret    0x1c
  427411:	push   ebp
  427412:	mov    ebp,esp
  427414:	movzx  edx,WORD PTR [ecx+0x6]
  427418:	movzx  eax,WORD PTR [ecx+0x14]
  42741c:	push   ebx
  42741d:	push   edi
  42741e:	xor    edi,edi
  427420:	lea    eax,[eax+ecx*1+0x18]
  427424:	test   edx,edx
  427426:	je     0x427447
  427428:	mov    ecx,DWORD PTR [eax+0xc]
  42742b:	lea    ebx,[ecx+esi*1]
  42742e:	cmp    DWORD PTR [ebp+0x8],ebx
  427431:	jb     0x42743f
  427433:	mov    ebx,DWORD PTR [eax+0x8]
  427436:	add    ebx,ecx
  427438:	add    ebx,esi
  42743a:	cmp    DWORD PTR [ebp+0x8],ebx
  42743d:	jb     0x427449
  42743f:	add    eax,0x28
  427442:	inc    edi
  427443:	cmp    edi,edx
  427445:	jb     0x427428
  427447:	xor    eax,eax
  427449:	pop    edi
  42744a:	pop    ebx
  42744b:	pop    ebp
  42744c:	ret    0x4
  42744f:	push   ebp
  427450:	mov    ebp,esp
  427452:	sub    esp,0x34
  427455:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  42745c:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427463:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  42746a:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  427471:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  427478:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  42747f:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  427486:	mov    DWORD PTR [ebp-0x10],eax
  427489:	mov    eax,DWORD PTR [ebp+0x8]
  42748c:	mov    DWORD PTR [ebp-0x14],eax
  42748f:	mov    eax,DWORD PTR [ebp-0xc]
  427492:	push   ebx
  427493:	mov    ecx,0x75108a8
  427498:	xor    eax,ecx
  42749a:	push   esi
  42749b:	mov    esi,DWORD PTR [ebp-0x10]
  42749e:	mov    edx,0x3272ef
  4274a3:	add    eax,edx
  4274a5:	push   edi
  4274a6:	cmp    esi,eax
  4274a8:	je     0x427687
  4274ae:	mov    eax,DWORD PTR [ebp-0xc]
  4274b1:	mov    esi,DWORD PTR [ebp-0x14]
  4274b4:	xor    eax,ecx
  4274b6:	add    eax,edx
  4274b8:	cmp    esi,eax
  4274ba:	je     0x427687
  4274c0:	mov    eax,DWORD PTR [ebp-0xc]
  4274c3:	xor    eax,ecx
  4274c5:	add    eax,edx
  4274c7:	mov    DWORD PTR [ebp-0x24],eax
  4274ca:	mov    eax,DWORD PTR [ebp-0xc]
  4274cd:	xor    eax,ecx
  4274cf:	add    eax,edx
  4274d1:	mov    DWORD PTR [ebp-0x28],eax
  4274d4:	mov    edi,DWORD PTR [ebp-0x20]
  4274d7:	mov    ebx,DWORD PTR [ebp-0x8]
  4274da:	mov    esi,0x8a8
  4274df:	xor    edi,esi
  4274e1:	mov    eax,0x72ef
  4274e6:	xor    ebx,esi
  4274e8:	add    edi,eax
  4274ea:	add    ebx,eax
  4274ec:	sub    ebx,edi
  4274ee:	mov    WORD PTR [ebp-0x8],bx
  4274f2:	jmp    0x4275b7
  4274f7:	mov    edi,DWORD PTR [ebp-0xc]
  4274fa:	mov    bx,WORD PTR [ebp-0x4]
  4274fe:	xor    edi,esi
  427500:	add    edi,eax
  427502:	cmp    bx,di
  427505:	je     0x4275f9
  42750b:	mov    edi,DWORD PTR [ebp-0xc]
  42750e:	mov    ebx,DWORD PTR [ebp+0xc]
  427511:	xor    edi,ecx
  427513:	add    edi,edx
  427515:	cmp    ebx,edi
  427517:	mov    di,WORD PTR [ebp-0x4]
  42751b:	mov    bx,WORD PTR [ebp+0x8]
  42751f:	je     0x42758a
  427521:	cmp    bx,di
  427524:	je     0x427593
  427526:	mov    edi,DWORD PTR [ebp-0x20]
  427529:	mov    bx,WORD PTR [ebp+0x8]
  42752d:	xor    edi,esi
  42752f:	add    edi,eax
  427531:	cmp    bx,di
  427534:	jb     0x427554
  427536:	mov    edi,DWORD PTR [ebp-0x2c]
  427539:	mov    bx,WORD PTR [ebp+0x8]
  42753d:	xor    edi,esi
  42753f:	add    edi,eax
  427541:	cmp    bx,di
  427544:	ja     0x427554
  427546:	movzx  edi,WORD PTR [ebp+0x8]
  42754a:	movzx  ebx,WORD PTR [ebp-0x8]
  42754e:	add    edi,ebx
  427550:	mov    WORD PTR [ebp+0x8],di
  427554:	mov    edi,DWORD PTR [ebp-0x20]
  427557:	mov    bx,WORD PTR [ebp-0x4]
  42755b:	xor    edi,esi
  42755d:	add    edi,eax
  42755f:	cmp    bx,di
  427562:	jb     0x427582
  427564:	mov    edi,DWORD PTR [ebp-0x2c]
  427567:	mov    bx,WORD PTR [ebp-0x4]
  42756b:	xor    edi,esi
  42756d:	add    edi,eax
  42756f:	cmp    bx,di
  427572:	ja     0x427582
  427574:	movzx  edi,WORD PTR [ebp-0x4]
  427578:	movzx  ebx,WORD PTR [ebp-0x8]
  42757c:	add    edi,ebx
  42757e:	mov    WORD PTR [ebp-0x4],di
  427582:	mov    di,WORD PTR [ebp-0x4]
  427586:	mov    bx,WORD PTR [ebp+0x8]
  42758a:	cmp    bx,di
  42758d:	jne    0x427687
  427593:	mov    edi,DWORD PTR [ebp-0x1c]
  427596:	mov    ebx,DWORD PTR [ebp-0x10]
  427599:	xor    edi,ecx
  42759b:	lea    edi,[edi+ebx*1+0x3272ef]
  4275a2:	mov    DWORD PTR [ebp-0x10],edi
  4275a5:	mov    edi,DWORD PTR [ebp-0x1c]
  4275a8:	mov    ebx,DWORD PTR [ebp-0x14]
  4275ab:	xor    edi,ecx
  4275ad:	lea    edi,[edi+ebx*1+0x3272ef]
  4275b4:	mov    DWORD PTR [ebp-0x14],edi
  4275b7:	mov    edi,DWORD PTR [ebp-0x24]
  4275ba:	mov    ebx,DWORD PTR [ebp-0x10]
  4275bd:	mov    di,WORD PTR [ebx+edi*2]
  4275c1:	mov    WORD PTR [ebp+0x8],di
  4275c5:	mov    edi,DWORD PTR [ebp-0x28]
  4275c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4275cb:	mov    di,WORD PTR [ebx+edi*2]
  4275cf:	mov    WORD PTR [ebp-0x4],di
  4275d3:	mov    edi,DWORD PTR [ebp-0xc]
  4275d6:	mov    bx,WORD PTR [ebp+0x8]
  4275da:	xor    edi,esi
  4275dc:	add    edi,eax
  4275de:	cmp    bx,di
  4275e1:	jne    0x4274f7
  4275e7:	mov    eax,DWORD PTR [ebp-0x18]
  4275ea:	mov    esi,DWORD PTR [ebp-0xc]
  4275ed:	xor    eax,ecx
  4275ef:	add    eax,edx
  4275f1:	imul   eax,esi
  4275f4:	mov    DWORD PTR [ebp-0xc],eax
  4275f7:	jmp    0x42760b
  4275f9:	mov    eax,DWORD PTR [ebp-0xc]
  4275fc:	mov    esi,DWORD PTR [ebp-0x18]
  4275ff:	xor    eax,ecx
  427601:	lea    eax,[eax+esi*1+0x3272ef]
  427608:	mov    DWORD PTR [ebp-0x18],eax
  42760b:	mov    eax,DWORD PTR [ebp-0x24]
  42760e:	sub    eax,edx
  427610:	xor    eax,ecx
  427612:	mov    DWORD PTR [ebp-0x30],eax
  427615:	mov    eax,DWORD PTR [ebp-0x28]
  427618:	sub    eax,edx
  42761a:	xor    eax,ecx
  42761c:	mov    DWORD PTR [ebp-0x34],eax
  42761f:	mov    eax,DWORD PTR [ebp-0x34]
  427622:	mov    esi,DWORD PTR [ebp-0x1c]
  427625:	xor    esi,ecx
  427627:	add    esi,edx
  427629:	xor    eax,ecx
  42762b:	add    eax,0x3272ef
  427630:	imul   esi,eax
  427633:	mov    eax,DWORD PTR [ebp-0x14]
  427636:	movzx  eax,WORD PTR [esi+eax*1]
  42763a:	mov    esi,DWORD PTR [ebp-0x30]
  42763d:	mov    edi,DWORD PTR [ebp-0x1c]
  427640:	xor    esi,ecx
  427642:	add    esi,edx
  427644:	xor    edi,ecx
  427646:	add    edi,edx
  427648:	imul   edi,esi
  42764b:	mov    esi,DWORD PTR [ebp-0x10]
  42764e:	movzx  esi,WORD PTR [edi+esi*1]
  427652:	sub    eax,edx
  427654:	sub    esi,edx
  427656:	xor    eax,ecx
  427658:	xor    esi,ecx
  42765a:	cmp    esi,eax
  42765c:	jne    0x427687
  42765e:	mov    eax,DWORD PTR [ebp-0x30]
  427661:	mov    esi,DWORD PTR [ebp-0x1c]
  427664:	xor    eax,ecx
  427666:	add    eax,0x3272ef
  42766b:	xor    esi,ecx
  42766d:	add    esi,edx
  42766f:	imul   esi,eax
  427672:	mov    eax,DWORD PTR [ebp-0x10]
  427675:	movzx  eax,WORD PTR [esi+eax*1]
  427679:	mov    esi,DWORD PTR [ebp-0xc]
  42767c:	sub    eax,edx
  42767e:	xor    eax,ecx
  427680:	cmp    eax,esi
  427682:	mov    eax,DWORD PTR [ebp-0xc]
  427685:	je     0x42768a
  427687:	mov    eax,DWORD PTR [ebp-0x18]
  42768a:	pop    edi
  42768b:	xor    eax,ecx
  42768d:	pop    esi
  42768e:	add    eax,edx
  427690:	pop    ebx
  427691:	leave  
  427692:	ret    0x8
  427695:	push   ebp
  427696:	mov    ebp,esp
  427698:	push   ecx
  427699:	mov    cx,WORD PTR [eax]
  42769c:	push   esi
  42769d:	mov    esi,0x3b59
  4276a2:	sub    cx,si
  4276a5:	mov    esi,0x8a96
  4276aa:	xor    cx,si
  4276ad:	mov    esi,0x4e31
  4276b2:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4276b9:	mov    edx,0xf89c85b9
  4276be:	cmp    cx,si
  4276c1:	je     0x427720
  4276c3:	push   ebx
  4276c4:	push   edi
  4276c5:	movzx  ecx,cx
  4276c8:	mov    edi,0xffcd8d11
  4276cd:	mov    esi,0x75108a8
  4276d2:	mov    ebx,0x4f95
  4276d7:	cmp    cx,bx
  4276da:	jne    0x4276df
  4276dc:	mov    DWORD PTR [ebp-0x4],edx
  4276df:	lea    edx,[edi+0x1]
  4276e2:	xor    edx,esi
  4276e4:	mov    edi,edx
  4276e6:	xor    edi,esi
  4276e8:	mov    cx,WORD PTR [eax+edi*2+0x64e5de]
  4276f0:	mov    ebx,0x3b59
  4276f5:	sub    cx,bx
  4276f8:	mov    ebx,0x8a96
  4276fd:	xor    cx,bx
  427700:	mov    ebx,0x4e31
  427705:	cmp    cx,bx
  427708:	jne    0x4276d2
  42770a:	mov    ecx,DWORD PTR [ebp-0x4]
  42770d:	pop    edi
  42770e:	pop    ebx
  42770f:	cmp    ecx,0xf89c85b8
  427715:	je     0x427720
  427717:	xor    ecx,esi
  427719:	lea    eax,[eax+ecx*2+0x64e5e0]
  427720:	pop    esi
  427721:	leave  
  427722:	ret    
  427723:	push   ebp
  427724:	mov    ebp,esp
  427726:	push   ecx
  427727:	push   esi
  427728:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  42772f:	mov    esi,0xf89c85b9
  427734:	call   0x427695
  427739:	mov    cl,BYTE PTR [eax]
  42773b:	inc    cl
  42773d:	xor    cl,0x7b
  427740:	cmp    cl,0x7a
  427743:	je     0x4277a8
  427745:	push   ebx
  427746:	push   edi
  427747:	mov    edx,eax
  427749:	mov    edi,0xffcd8d11
  42774e:	mov    ecx,0x75108a8
  427753:	mov    dx,WORD PTR [edx]
  427756:	mov    ebx,0x3b59
  42775b:	sub    dx,bx
  42775e:	mov    ebx,0x8a96
  427763:	xor    dx,bx
  427766:	mov    ebx,0x4e43
  42776b:	cmp    dx,bx
  42776e:	jne    0x427773
  427770:	mov    DWORD PTR [ebp-0x4],esi
  427773:	lea    esi,[edi+0x1]
  427776:	xor    esi,ecx
  427778:	mov    edi,esi
  42777a:	xor    edi,ecx
  42777c:	lea    edx,[eax+edi*2+0x64e5de]
  427783:	mov    bl,BYTE PTR [edx]
  427785:	inc    bl
  427787:	xor    bl,0x7b
  42778a:	cmp    bl,0x7a
  42778d:	jne    0x427753
  42778f:	mov    edx,DWORD PTR [ebp-0x4]
  427792:	pop    edi
  427793:	pop    ebx
  427794:	cmp    edx,0xf89c85b8
  42779a:	je     0x4277a8
  42779c:	xor    edx,ecx
  42779e:	xor    ecx,ecx
  4277a0:	mov    WORD PTR [eax+edx*2+0x64e5de],cx
  4277a8:	pop    esi
  4277a9:	leave  
  4277aa:	ret    
  4277ab:	push   ebp
  4277ac:	mov    ebp,esp
  4277ae:	push   ecx
  4277af:	push   esi
  4277b0:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4277b7:	mov    esi,0xf89c85b9
  4277bc:	call   0x427695
  4277c1:	mov    cx,WORD PTR [eax]
  4277c4:	mov    edx,0x3b59
  4277c9:	sub    cx,dx
  4277cc:	mov    edx,0x8a96
  4277d1:	xor    cx,dx
  4277d4:	mov    edx,0x4e31
  4277d9:	cmp    cx,dx
  4277dc:	je     0x427835
  4277de:	push   ebx
  4277df:	push   edi
  4277e0:	movzx  ecx,cx
  4277e3:	mov    edx,0xffcd8d11
  4277e8:	mov    edi,0x75108a8
  4277ed:	mov    ebx,0x4e43
  4277f2:	cmp    cx,bx
  4277f5:	jne    0x4277fa
  4277f7:	mov    DWORD PTR [ebp-0x4],esi
  4277fa:	lea    esi,[edx+0x1]
  4277fd:	xor    esi,edi
  4277ff:	mov    edx,esi
  427801:	xor    edx,edi
  427803:	mov    cx,WORD PTR [eax+edx*2+0x64e5de]
  42780b:	mov    ebx,0x3b59
  427810:	sub    cx,bx
  427813:	mov    ebx,0x8a96
  427818:	xor    cx,bx
  42781b:	mov    ebx,0x4e31
  427820:	cmp    cx,bx
  427823:	jne    0x4277ed
  427825:	cmp    DWORD PTR [ebp-0x4],0xf89c85b8
  42782c:	pop    edi
  42782d:	pop    ebx
  42782e:	je     0x427835
  427830:	xor    eax,eax
  427832:	inc    eax
  427833:	jmp    0x427837
  427835:	xor    eax,eax
  427837:	pop    esi
  427838:	leave  
  427839:	ret    
  42783a:	push   ebp
  42783b:	mov    ebp,esp
  42783d:	push   ecx
  42783e:	mov    eax,DWORD PTR [ebp+0x8]
  427841:	movzx  ecx,WORD PTR [eax]
  427844:	push   esi
  427845:	lea    eax,[ecx-0x3b59]
  42784b:	mov    esi,0x8a96
  427850:	push   edi
  427851:	xor    eax,esi
  427853:	mov    edi,0x4e31
  427858:	mov    DWORD PTR [ebp-0x4],edx
  42785b:	cmp    ax,di
  42785e:	je     0x42788b
  427860:	mov    eax,DWORD PTR [ebp+0x8]
  427863:	sub    eax,edx
  427865:	mov    DWORD PTR [ebp+0x8],eax
  427868:	jmp    0x42786d
  42786a:	mov    eax,DWORD PTR [ebp+0x8]
  42786d:	mov    WORD PTR [edx],cx
  427870:	add    edx,0x2
  427873:	movzx  edi,WORD PTR [eax+edx*1]
  427877:	mov    ecx,edi
  427879:	add    edi,0xffffc4a7
  42787f:	xor    edi,esi
  427881:	mov    eax,0x4e31
  427886:	cmp    di,ax
  427889:	jne    0x42786a
  42788b:	xor    eax,eax
  42788d:	pop    edi
  42788e:	mov    WORD PTR [edx],ax
  427891:	mov    eax,DWORD PTR [ebp-0x4]
  427894:	pop    esi
  427895:	leave  
  427896:	ret    0x4
  427899:	push   ebp
  42789a:	mov    ebp,esp
  42789c:	sub    esp,0x18
  42789f:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4278a6:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4278ad:	mov    ecx,DWORD PTR [ebp-0x8]
  4278b0:	push   esi
  4278b1:	mov    eax,0x75108a8
  4278b6:	xor    ecx,eax
  4278b8:	mov    esi,0x3272ef
  4278bd:	add    ecx,esi
  4278bf:	mov    DWORD PTR [ebp-0x4],ecx
  4278c2:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4278c9:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4278d0:	push   edi
  4278d1:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4278d8:	jmp    0x427979
  4278dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4278e0:	mov    edx,DWORD PTR [ebp+0x10]
  4278e3:	sub    edx,ecx
  4278e5:	mov    ecx,DWORD PTR [ebp-0xc]
  4278e8:	xor    ecx,eax
  4278ea:	add    ecx,esi
  4278ec:	cmp    edx,ecx
  4278ee:	jbe    0x42790b
  4278f0:	mov    edx,DWORD PTR [ebp-0x4]
  4278f3:	add    edx,DWORD PTR [ebp+0x8]
  4278f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4278f9:	add    ecx,DWORD PTR [ebp+0xc]
  4278fc:	mov    edi,DWORD PTR [ecx]
  4278fe:	mov    DWORD PTR [edx],edi
  427900:	mov    ecx,DWORD PTR [ecx+0x4]
  427903:	mov    DWORD PTR [edx+0x4],ecx
  427906:	mov    ecx,DWORD PTR [ebp-0xc]
  427909:	jmp    0x427958
  42790b:	mov    ecx,DWORD PTR [ebp-0x4]
  42790e:	mov    edx,DWORD PTR [ebp+0x10]
  427911:	sub    edx,ecx
  427913:	mov    ecx,DWORD PTR [ebp-0x10]
  427916:	xor    ecx,eax
  427918:	add    ecx,esi
  42791a:	cmp    edx,ecx
  42791c:	mov    ecx,DWORD PTR [ebp-0x4]
  42791f:	jbe    0x427933
  427921:	add    ecx,DWORD PTR [ebp+0x8]
  427924:	mov    edx,DWORD PTR [ebp-0x4]
  427927:	add    edx,DWORD PTR [ebp+0xc]
  42792a:	mov    edx,DWORD PTR [edx]
  42792c:	mov    DWORD PTR [ecx],edx
  42792e:	mov    ecx,DWORD PTR [ebp-0x10]
  427931:	jmp    0x427958
  427933:	mov    edx,DWORD PTR [ebp+0x10]
  427936:	sub    edx,ecx
  427938:	mov    ecx,DWORD PTR [ebp-0x14]
  42793b:	xor    ecx,eax
  42793d:	add    ecx,esi
  42793f:	cmp    edx,ecx
  427941:	mov    ecx,DWORD PTR [ebp-0x4]
  427944:	jbe    0x427969
  427946:	add    ecx,DWORD PTR [ebp+0x8]
  427949:	mov    edx,DWORD PTR [ebp-0x4]
  42794c:	add    edx,DWORD PTR [ebp+0xc]
  42794f:	mov    dx,WORD PTR [edx]
  427952:	mov    WORD PTR [ecx],dx
  427955:	mov    ecx,DWORD PTR [ebp-0x14]
  427958:	mov    edx,DWORD PTR [ebp-0x4]
  42795b:	xor    ecx,eax
  42795d:	lea    ecx,[ecx+edx*1+0x3272ef]
  427964:	mov    DWORD PTR [ebp-0x4],ecx
  427967:	jmp    0x427979
  427969:	add    ecx,DWORD PTR [ebp+0x8]
  42796c:	mov    edx,DWORD PTR [ebp-0x4]
  42796f:	add    edx,DWORD PTR [ebp+0xc]
  427972:	mov    dl,BYTE PTR [edx]
  427974:	mov    BYTE PTR [ecx],dl
  427976:	inc    DWORD PTR [ebp-0x4]
  427979:	mov    ecx,DWORD PTR [ebp-0x18]
  42797c:	mov    edx,DWORD PTR [ebp+0x10]
  42797f:	xor    ecx,eax
  427981:	add    ecx,esi
  427983:	imul   ecx,edx
  427986:	mov    edx,DWORD PTR [ebp-0x8]
  427989:	mov    edi,DWORD PTR [ebp-0x4]
  42798c:	xor    edx,eax
  42798e:	lea    edx,[edx+edi*1+0x3272ef]
  427995:	cmp    edx,ecx
  427997:	jb     0x4278dd
  42799d:	pop    edi
  42799e:	pop    esi
  42799f:	leave  
  4279a0:	ret    0xc
  4279a3:	push   ebp
  4279a4:	mov    ebp,esp
  4279a6:	sub    esp,0xc
  4279a9:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4279b0:	push   esi
  4279b1:	mov    esi,eax
  4279b3:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4279ba:	mov    edx,DWORD PTR [ebp-0x4]
  4279bd:	mov    eax,0x75108a8
  4279c2:	xor    edx,eax
  4279c4:	mov    ecx,0x3272ef
  4279c9:	add    edx,ecx
  4279cb:	cmp    esi,edx
  4279cd:	je     0x427a0f
  4279cf:	push   ebx
  4279d0:	push   edi
  4279d1:	mov    edx,DWORD PTR [ebp-0x8]
  4279d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4279d7:	xor    edx,eax
  4279d9:	mov    edi,0xffcd8d11
  4279de:	sub    edi,edx
  4279e0:	add    esi,edi
  4279e2:	lea    edx,[esi-0x3272ef]
  4279e8:	xor    edx,eax
  4279ea:	mov    DWORD PTR [ebp-0xc],edx
  4279ed:	mov    edx,DWORD PTR [ebp-0x4]
  4279f0:	mov    edi,DWORD PTR [ebp-0xc]
  4279f3:	xor    dl,0xa8
  4279f6:	sub    dl,0x11
  4279f9:	xor    edi,eax
  4279fb:	mov    BYTE PTR [edi+ebx*1+0x3272ef],dl
  427a02:	mov    edx,DWORD PTR [ebp-0x4]
  427a05:	xor    edx,eax
  427a07:	add    edx,ecx
  427a09:	cmp    esi,edx
  427a0b:	jne    0x4279d1
  427a0d:	pop    edi
  427a0e:	pop    ebx
  427a0f:	pop    esi
  427a10:	leave  
  427a11:	ret    0x4
  427a14:	push   ebp
  427a15:	mov    ebp,esp
  427a17:	sub    esp,0x21c
  427a1d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427a24:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427a2b:	mov    eax,DWORD PTR [ebp+0x10]
  427a2e:	mov    eax,DWORD PTR [ebp-0x4]
  427a31:	mov    ecx,DWORD PTR [ebp+0x8]
  427a34:	push   esi
  427a35:	push   edi
  427a36:	mov    edi,0x75108a8
  427a3b:	xor    eax,edi
  427a3d:	mov    esi,0x3272ef
  427a42:	add    eax,esi
  427a44:	cmp    eax,ecx
  427a46:	mov    eax,DWORD PTR [ebp-0x4]
  427a49:	jne    0x427a54
  427a4b:	xor    eax,edi
  427a4d:	add    eax,esi
  427a4f:	jmp    0x427b00
  427a54:	mov    ecx,DWORD PTR [ebp+0xc]
  427a57:	xor    eax,edi
  427a59:	add    eax,esi
  427a5b:	cmp    eax,ecx
  427a5d:	jne    0x427a64
  427a5f:	mov    eax,DWORD PTR [ebp-0x4]
  427a62:	jmp    0x427a4b
  427a64:	lea    eax,[ebp-0x21c]
  427a6a:	mov    DWORD PTR [ebp-0x8],eax
  427a6d:	mov    eax,DWORD PTR [ebp+0xc]
  427a70:	mov    DWORD PTR [ebp-0x10],eax
  427a73:	mov    eax,DWORD PTR [ebp-0x4]
  427a76:	xor    eax,edi
  427a78:	add    eax,esi
  427a7a:	mov    DWORD PTR [ebp+0x10],eax
  427a7d:	mov    eax,DWORD PTR [ebp+0xc]
  427a80:	push   ebx
  427a81:	call   0x4277ab
  427a86:	mov    ebx,eax
  427a88:	mov    eax,DWORD PTR [ebp+0x8]
  427a8b:	mov    eax,DWORD PTR [eax+0x14]
  427a8e:	jmp    0x427ae8
  427a90:	mov    eax,DWORD PTR [ebp+0xc]
  427a93:	sub    eax,0x8
  427a96:	mov    DWORD PTR [ebp-0xc],eax
  427a99:	mov    eax,DWORD PTR [ebp-0xc]
  427a9c:	mov    eax,DWORD PTR [eax+0x28]
  427a9f:	call   0x427695
  427aa4:	mov    DWORD PTR [ebp+0x10],eax
  427aa7:	push   DWORD PTR [ebp+0x10]
  427aaa:	mov    edx,DWORD PTR [ebp-0x8]
  427aad:	call   0x42783a
  427ab2:	mov    eax,DWORD PTR [ebp-0x4]
  427ab5:	xor    eax,edi
  427ab7:	add    eax,esi
  427ab9:	cmp    eax,ebx
  427abb:	jne    0x427ac5
  427abd:	mov    eax,DWORD PTR [ebp-0x8]
  427ac0:	call   0x427723
  427ac5:	mov    eax,DWORD PTR [ebp-0x14]
  427ac8:	xor    eax,edi
  427aca:	add    eax,esi
  427acc:	push   eax
  427acd:	push   DWORD PTR [ebp-0x10]
  427ad0:	mov    eax,DWORD PTR [ebp-0x8]
  427ad3:	call   0x42744f
  427ad8:	mov    ecx,DWORD PTR [ebp-0x4]
  427adb:	xor    ecx,edi
  427add:	add    ecx,esi
  427adf:	cmp    eax,ecx
  427ae1:	je     0x427b06
  427ae3:	mov    eax,DWORD PTR [ebp+0xc]
  427ae6:	mov    eax,DWORD PTR [eax]
  427ae8:	mov    DWORD PTR [ebp+0xc],eax
  427aeb:	mov    eax,DWORD PTR [ebp+0x8]
  427aee:	mov    ecx,DWORD PTR [ebp+0xc]
  427af1:	add    eax,0x14
  427af4:	cmp    ecx,eax
  427af6:	jne    0x427a90
  427af8:	mov    eax,DWORD PTR [ebp-0x4]
  427afb:	xor    eax,edi
  427afd:	add    eax,esi
  427aff:	pop    ebx
  427b00:	pop    edi
  427b01:	pop    esi
  427b02:	leave  
  427b03:	ret    0xc
  427b06:	mov    eax,DWORD PTR [ebp-0xc]
  427b09:	mov    eax,DWORD PTR [eax+0x18]
  427b0c:	jmp    0x427aff
  427b0e:	push   ebp
  427b0f:	mov    ebp,esp
  427b11:	mov    eax,DWORD PTR [ebp+0xc]
  427b14:	sub    esp,0x10
  427b17:	cmp    DWORD PTR [ebp+0x8],0x0
  427b1b:	push   ebx
  427b1c:	push   esi
  427b1d:	push   edi
  427b1e:	je     0x427bd3
  427b24:	test   eax,eax
  427b26:	je     0x427bd3
  427b2c:	movzx  eax,WORD PTR [eax+0x20]
  427b30:	mov    ecx,eax
  427b32:	mov    DWORD PTR [ebp-0x10],eax
  427b35:	xor    edx,edx
  427b37:	and    DWORD PTR [ebp-0x8],edx
  427b3a:	mov    eax,0x8a96
  427b3f:	xor    ecx,eax
  427b41:	add    ecx,0x3b59
  427b47:	mov    DWORD PTR [ebp-0xc],ecx
  427b4a:	and    DWORD PTR [ebp-0x4],0x0
  427b4e:	xor    ecx,ecx
  427b50:	push   0x78
  427b52:	pop    edi
  427b53:	cmp    cx,WORD PTR [ebp-0xc]
  427b57:	jae    0x427bbd
  427b59:	lea    esi,[edx-0x3b59]
  427b5f:	xor    esi,eax
  427b61:	movzx  ecx,WORD PTR [ebp-0x4]
  427b65:	mov    ebx,DWORD PTR [ebp+0xc]
  427b68:	lea    ecx,[ebx+ecx*4]
  427b6b:	cmp    WORD PTR [ecx+0x2],si
  427b6f:	jne    0x427ba8
  427b71:	movzx  ecx,WORD PTR [ecx]
  427b74:	mov    edi,0x4e31
  427b79:	cmp    cx,di
  427b7c:	jne    0x427b8a
  427b7e:	mov    ebx,DWORD PTR [ebp+0x8]
  427b81:	movzx  edi,dx
  427b84:	cmp    BYTE PTR [edi+ebx*1],0x0
  427b88:	je     0x427bb7
  427b8a:	mov    ebx,DWORD PTR [ebp+0x8]
  427b8d:	movzx  edi,dx
  427b90:	movsx  di,BYTE PTR [edi+ebx*1]
  427b95:	mov    ebx,0x3b59
  427b9a:	sub    di,bx
  427b9d:	xor    di,ax
  427ba0:	cmp    cx,di
  427ba3:	je     0x427bb7
  427ba5:	push   0x7a
  427ba7:	pop    edi
  427ba8:	inc    DWORD PTR [ebp-0x4]
  427bab:	mov    cx,WORD PTR [ebp-0xc]
  427baf:	cmp    WORD PTR [ebp-0x4],cx
  427bb3:	jb     0x427b61
  427bb5:	jmp    0x427bbd
  427bb7:	inc    DWORD PTR [ebp-0x8]
  427bba:	push   0x79
  427bbc:	pop    edi
  427bbd:	mov    esi,DWORD PTR [ebp+0x8]
  427bc0:	movzx  ecx,dx
  427bc3:	cmp    BYTE PTR [ecx+esi*1],0x0
  427bc7:	je     0x427bdc
  427bc9:	inc    edx
  427bca:	cmp    edi,0x7a
  427bcd:	jne    0x427b4a
  427bd3:	xor    eax,eax
  427bd5:	pop    edi
  427bd6:	pop    esi
  427bd7:	pop    ebx
  427bd8:	leave  
  427bd9:	ret    0x8
  427bdc:	mov    ecx,DWORD PTR [ebp-0x8]
  427bdf:	add    ecx,0xffffc4a7
  427be5:	xor    cx,ax
  427be8:	xor    eax,eax
  427bea:	cmp    cx,WORD PTR [ebp-0x10]
  427bee:	sete   al
  427bf1:	jmp    0x427bd5
  427bf3:	push   ebp
  427bf4:	mov    ebp,esp
  427bf6:	sub    esp,0x50
  427bf9:	push   edi
  427bfa:	mov    edi,eax
  427bfc:	mov    eax,DWORD PTR [edi+0x1a8]
  427c02:	cmp    DWORD PTR [eax],0x0
  427c05:	jne    0x427c0e
  427c07:	xor    eax,eax
  427c09:	jmp    0x427d3f
  427c0e:	push   DWORD PTR [ebp+0x8]
  427c11:	push   0x2c
  427c13:	pop    eax
  427c14:	call   0x4279a3
  427c19:	mov    edx,DWORD PTR [edi+0x1ac]
  427c1f:	lea    eax,[edi+0x22]
  427c22:	mov    DWORD PTR [ebp-0x4c],eax
  427c25:	lea    eax,[edi+0x44]
  427c28:	mov    DWORD PTR [ebp-0x48],eax
  427c2b:	lea    eax,[edi+0x66]
  427c2e:	mov    DWORD PTR [ebp-0x44],eax
  427c31:	lea    eax,[edi+0x88]
  427c37:	mov    DWORD PTR [ebp-0x40],eax
  427c3a:	lea    eax,[edi+0xaa]
  427c40:	mov    DWORD PTR [ebp-0x3c],eax
  427c43:	lea    eax,[edi+0xcc]
  427c49:	mov    DWORD PTR [ebp-0x38],eax
  427c4c:	lea    eax,[edi+0xee]
  427c52:	mov    DWORD PTR [ebp-0x34],eax
  427c55:	lea    eax,[edi+0x110]
  427c5b:	mov    DWORD PTR [ebp-0x30],eax
  427c5e:	lea    eax,[edi+0x132]
  427c64:	mov    DWORD PTR [ebp-0x2c],eax
  427c67:	lea    eax,[edi+0x154]
  427c6d:	push   edi
  427c6e:	mov    DWORD PTR [ebp-0x50],edi
  427c71:	mov    DWORD PTR [ebp-0x28],eax
  427c74:	call   0x427d73
  427c79:	push   eax
  427c7a:	mov    eax,DWORD PTR [edi+0x1a8]
  427c80:	push   DWORD PTR [eax]
  427c82:	call   0x427a14
  427c87:	mov    DWORD PTR [ebp-0x10],eax
  427c8a:	test   eax,eax
  427c8c:	je     0x427d3f
  427c92:	mov    ecx,DWORD PTR [eax+0x3c]
  427c95:	push   ebx
  427c96:	push   esi
  427c97:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427c9b:	add    esi,eax
  427c9d:	mov    edi,DWORD PTR [esi+0x24]
  427ca0:	mov    ecx,DWORD PTR [esi+0x1c]
  427ca3:	mov    edx,DWORD PTR [esi+0x20]
  427ca6:	mov    ebx,DWORD PTR [esi+0x18]
  427ca9:	add    edi,eax
  427cab:	mov    DWORD PTR [ebp-0x20],edi
  427cae:	mov    edi,DWORD PTR [esi+0x14]
  427cb1:	add    ecx,eax
  427cb3:	add    edx,eax
  427cb5:	mov    DWORD PTR [ebp-0xc],ecx
  427cb8:	mov    DWORD PTR [ebp-0x1c],edx
  427cbb:	mov    DWORD PTR [ebp-0x8],edi
  427cbe:	cmp    edi,ebx
  427cc0:	ja     0x427cc5
  427cc2:	mov    DWORD PTR [ebp-0x8],ebx
  427cc5:	xor    ebx,ebx
  427cc7:	mov    DWORD PTR [ebp-0x18],ebx
  427cca:	cmp    DWORD PTR [ebp-0x8],ebx
  427ccd:	jbe    0x427d3d
  427ccf:	jmp    0x427cd4
  427cd1:	mov    edx,DWORD PTR [ebp-0x1c]
  427cd4:	mov    edi,DWORD PTR [ebp-0x20]
  427cd7:	movzx  edi,WORD PTR [edi+ebx*2]
  427cdb:	cmp    ebx,DWORD PTR [esi+0x18]
  427cde:	jae    0x427d3d
  427ce0:	cmp    edi,DWORD PTR [esi+0x14]
  427ce3:	jae    0x427d3d
  427ce5:	mov    ebx,DWORD PTR [edx+ebx*4]
  427ce8:	mov    edx,DWORD PTR [ebp+0x8]
  427ceb:	mov    edi,DWORD PTR [ecx+edi*4]
  427cee:	mov    DWORD PTR [ebp-0x4],edx
  427cf1:	lea    edx,[ebp-0x50]
  427cf4:	add    ebx,eax
  427cf6:	add    edi,eax
  427cf8:	sub    edx,DWORD PTR [ebp+0x8]
  427cfb:	mov    DWORD PTR [ebp-0x14],0xb
  427d02:	mov    DWORD PTR [ebp-0x24],edx
  427d05:	mov    edx,DWORD PTR [ebp-0x4]
  427d08:	cmp    DWORD PTR [edx],0x0
  427d0b:	jne    0x427d28
  427d0d:	mov    eax,DWORD PTR [ebp-0x24]
  427d10:	push   DWORD PTR [eax+edx*1]
  427d13:	push   ebx
  427d14:	call   0x427b0e
  427d19:	mov    ecx,DWORD PTR [ebp-0xc]
  427d1c:	test   eax,eax
  427d1e:	je     0x427d25
  427d20:	mov    eax,DWORD PTR [ebp-0x4]
  427d23:	mov    DWORD PTR [eax],edi
  427d25:	mov    eax,DWORD PTR [ebp-0x10]
  427d28:	add    DWORD PTR [ebp-0x4],0x4
  427d2c:	dec    DWORD PTR [ebp-0x14]
  427d2f:	jne    0x427d05
  427d31:	mov    ebx,DWORD PTR [ebp-0x18]
  427d34:	inc    ebx
  427d35:	mov    DWORD PTR [ebp-0x18],ebx
  427d38:	cmp    ebx,DWORD PTR [ebp-0x8]
  427d3b:	jb     0x427cd1
  427d3d:	pop    esi
  427d3e:	pop    ebx
  427d3f:	pop    edi
  427d40:	leave  
  427d41:	ret    0x4
  427d44:	push   ebp
  427d45:	mov    ebp,esp
  427d47:	mov    eax,DWORD PTR [ebp+0x8]
  427d4a:	push   esi
  427d4b:	push   DWORD PTR [eax+0x1e0]
  427d51:	lea    esi,[eax+0x198]
  427d57:	mov    eax,DWORD PTR [ebp+0x8]
  427d5a:	call   0x427bf3
  427d5f:	mov    ecx,DWORD PTR [esi]
  427d61:	mov    DWORD PTR [ecx],eax
  427d63:	mov    eax,DWORD PTR [esi]
  427d65:	xor    ecx,ecx
  427d67:	cmp    DWORD PTR [eax],ecx
  427d69:	pop    esi
  427d6a:	setne  cl
  427d6d:	mov    eax,ecx
  427d6f:	pop    ebp
  427d70:	ret    0x4
  427d73:	mov    ecx,DWORD PTR [edi+0x188]
  427d79:	push   ebx
  427d7a:	jmp    0x427d8f
  427d7c:	xor    eax,0x8a96
  427d81:	add    eax,0x3b59
  427d86:	mov    WORD PTR [ecx],ax
  427d89:	add    ecx,0x2
  427d8c:	add    edx,0x2
  427d8f:	movzx  eax,WORD PTR [edx]
  427d92:	mov    ebx,0x4e31
  427d97:	cmp    ax,bx
  427d9a:	jne    0x427d7c
  427d9c:	xor    eax,eax
  427d9e:	mov    WORD PTR [ecx],ax
  427da1:	mov    eax,DWORD PTR [edi+0x188]
  427da7:	pop    ebx
  427da8:	ret    
  427da9:	push   edi
  427daa:	mov    edi,eax
  427dac:	mov    eax,DWORD PTR [esi+0x188]
  427db2:	shl    edi,0x6
  427db5:	add    eax,edi
  427db7:	jmp    0x427dc2
  427db9:	xor    cl,0x7b
  427dbc:	dec    cl
  427dbe:	mov    BYTE PTR [eax],cl
  427dc0:	inc    eax
  427dc1:	inc    edx
  427dc2:	mov    cl,BYTE PTR [edx]
  427dc4:	cmp    cl,0x7a
  427dc7:	jne    0x427db9
  427dc9:	mov    BYTE PTR [eax],0x0
  427dcc:	mov    eax,DWORD PTR [esi+0x188]
  427dd2:	add    eax,edi
  427dd4:	pop    edi
  427dd5:	ret    
  427dd6:	push   ebp
  427dd7:	mov    ebp,esp
  427dd9:	sub    esp,0x14
  427ddc:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427de3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  427dea:	mov    eax,DWORD PTR [ebx]
  427dec:	mov    DWORD PTR [ebp-0x8],eax
  427def:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427df6:	push   esi
  427df7:	push   edi
  427df8:	mov    DWORD PTR [ebp-0x14],0xead71899
  427dff:	mov    edi,DWORD PTR [ebp-0x4]
  427e02:	mov    ecx,DWORD PTR [ebp-0x10]
  427e05:	mov    eax,0x75108a8
  427e0a:	xor    edi,eax
  427e0c:	mov    edx,0x3272ef
  427e11:	xor    ecx,eax
  427e13:	add    edi,edx
  427e15:	add    ecx,edx
  427e17:	imul   edi,ecx
  427e1a:	jmp    0x427e62
  427e1c:	mov    ecx,DWORD PTR [ebp-0x8]
  427e1f:	mov    esi,DWORD PTR [ebp-0x4]
  427e22:	xor    ecx,eax
  427e24:	xor    esi,eax
  427e26:	add    ecx,edx
  427e28:	add    esi,edx
  427e2a:	test   esi,ecx
  427e2c:	mov    esi,DWORD PTR [ebp-0x8]
  427e2f:	mov    ecx,DWORD PTR [ebp-0x4]
  427e32:	je     0x427e49
  427e34:	xor    ecx,eax
  427e36:	xor    esi,eax
  427e38:	add    ecx,edx
  427e3a:	add    esi,edx
  427e3c:	shr    esi,cl
  427e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  427e41:	xor    ecx,eax
  427e43:	add    ecx,edx
  427e45:	xor    esi,ecx
  427e47:	jmp    0x427e53
  427e49:	xor    esi,eax
  427e4b:	xor    ecx,eax
  427e4d:	add    esi,edx
  427e4f:	add    ecx,edx
  427e51:	shr    esi,cl
  427e53:	mov    DWORD PTR [ebp-0x8],esi
  427e56:	mov    ecx,DWORD PTR [ebp-0x4]
  427e59:	xor    ecx,eax
  427e5b:	lea    edi,[edi+ecx*1+0x3272ef]
  427e62:	mov    ecx,DWORD PTR [ebp-0xc]
  427e65:	mov    esi,DWORD PTR [ebp-0x4]
  427e68:	xor    esi,eax
  427e6a:	xor    ecx,eax
  427e6c:	sub    ecx,esi
  427e6e:	cmp    edi,ecx
  427e70:	jbe    0x427e1c
  427e72:	mov    eax,DWORD PTR [ebp-0x8]
  427e75:	pop    edi
  427e76:	mov    DWORD PTR [ebx],eax
  427e78:	mov    eax,DWORD PTR [ebp-0x8]
  427e7b:	pop    esi
  427e7c:	leave  
  427e7d:	ret    
  427e7e:	push   ebp
  427e7f:	mov    ebp,esp
  427e81:	sub    esp,0x38
  427e84:	push   ebx
  427e85:	mov    ebx,0xf89c85b9
  427e8a:	mov    DWORD PTR [ebp-0x4],ebx
  427e8d:	lea    ecx,[ebx+0x1]
  427e90:	mov    DWORD PTR [ebp-0x24],ecx
  427e93:	mov    eax,DWORD PTR [ebp-0x4]
  427e96:	mov    edx,DWORD PTR [ebp+0x8]
  427e99:	push   esi
  427e9a:	mov    esi,0x75108a8
  427e9f:	xor    eax,esi
  427ea1:	push   edi
  427ea2:	mov    edi,0x3272ef
  427ea7:	add    eax,edi
  427ea9:	cmp    edx,eax
  427eab:	mov    eax,DWORD PTR [ebp-0x4]
  427eae:	je     0x428012
  427eb4:	mov    edx,DWORD PTR [ebp+0xc]
  427eb7:	xor    eax,esi
  427eb9:	add    eax,edi
  427ebb:	cmp    edx,eax
  427ebd:	je     0x42800f
  427ec3:	mov    eax,DWORD PTR [ebp+0x10]
  427ec6:	mov    edx,DWORD PTR [ebp+0xc]
  427ec9:	mov    DWORD PTR [ebp-0x14],eax
  427ecc:	mov    eax,DWORD PTR [ebp+0x8]
  427ecf:	mov    DWORD PTR [ebp-0x18],0xf89c853e
  427ed6:	mov    DWORD PTR [ebp-0xc],eax
  427ed9:	lea    eax,[ebx+0x2]
  427edc:	mov    DWORD PTR [ebp-0x1c],eax
  427edf:	mov    DWORD PTR [ebp-0x10],ebx
  427ee2:	mov    DWORD PTR [ebp+0xc],ecx
  427ee5:	mov    DWORD PTR [ebp+0x10],eax
  427ee8:	mov    eax,DWORD PTR [ebp+0xc]
  427eeb:	xor    eax,esi
  427eed:	mov    DWORD PTR [ebp-0x20],edx
  427ef0:	sub    edx,eax
  427ef2:	sub    edx,edi
  427ef4:	mov    DWORD PTR [ebp+0x8],edx
  427ef7:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  427efe:	jmp    0x427fff
  427f03:	mov    eax,DWORD PTR [ebp+0xc]
  427f06:	mov    ecx,DWORD PTR [ebp+0xc]
  427f09:	xor    eax,esi
  427f0b:	xor    ecx,esi
  427f0d:	lea    ecx,[eax+ecx*1+0x64e5de]
  427f14:	mov    eax,DWORD PTR [ebp+0x8]
  427f17:	xor    edx,edx
  427f19:	div    ecx
  427f1b:	mov    eax,DWORD PTR [ebp+0x10]
  427f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  427f21:	xor    eax,esi
  427f23:	xor    ecx,esi
  427f25:	sub    eax,ecx
  427f27:	cmp    edx,eax
  427f29:	jne    0x427fbe
  427f2f:	mov    eax,DWORD PTR [ebp+0x8]
  427f32:	mov    ecx,DWORD PTR [ebp-0xc]
  427f35:	mov    dl,BYTE PTR [eax+ecx*1]
  427f38:	mov    eax,DWORD PTR [ebp-0x10]
  427f3b:	mov    ecx,DWORD PTR [ebp-0x8]
  427f3e:	xor    eax,esi
  427f40:	xor    ecx,esi
  427f42:	add    eax,edi
  427f44:	add    ecx,edi
  427f46:	cmp    eax,ecx
  427f48:	jae    0x427f90
  427f4a:	lea    ecx,[eax-0x3272ef]
  427f50:	mov    DWORD PTR [ebp-0x4],ecx
  427f53:	mov    ebx,DWORD PTR [ebp-0x4]
  427f56:	xor    ebx,esi
  427f58:	add    ebx,0x7f55d8fb
  427f5e:	lea    ecx,[ebp+eax*4-0x38]
  427f62:	mov    DWORD PTR [ecx],ebx
  427f64:	mov    ebx,DWORD PTR [ecx]
  427f66:	cmp    ebx,0x244ecb9c
  427f6c:	jbe    0x427f76
  427f6e:	add    DWORD PTR [ecx],0x405fcdd
  427f74:	jmp    0x427f7c
  427f76:	add    DWORD PTR [ecx],0xfdaf4323
  427f7c:	mov    ecx,DWORD PTR [ebp-0x8]
  427f7f:	xor    ecx,esi
  427f81:	inc    eax
  427f82:	inc    DWORD PTR [ebp-0x4]
  427f85:	add    ecx,edi
  427f87:	cmp    eax,ecx
  427f89:	jb     0x427f53
  427f8b:	mov    ebx,0xf89c85b9
  427f90:	cmp    DWORD PTR [ebp-0x14],0x0
  427f94:	jne    0x427f9d
  427f96:	xor    dl,0x7b
  427f99:	dec    dl
  427f9b:	jmp    0x427fb3
  427f9d:	mov    eax,DWORD PTR [ebp-0x18]
  427fa0:	xor    al,0xa8
  427fa2:	mov    cl,0x11
  427fa4:	sub    cl,al
  427fa6:	add    dl,cl
  427fa8:	mov    ecx,DWORD PTR [ebp-0x1c]
  427fab:	xor    cl,0xa8
  427fae:	sub    cl,0x11
  427fb1:	ror    dl,cl
  427fb3:	xor    eax,eax
  427fb5:	mov    eax,DWORD PTR [ebp+0x8]
  427fb8:	mov    ecx,DWORD PTR [ebp-0xc]
  427fbb:	mov    BYTE PTR [eax+ecx*1],dl
  427fbe:	mov    eax,DWORD PTR [ebp+0x8]
  427fc1:	mov    ecx,DWORD PTR [ebp-0x10]
  427fc4:	sub    eax,edi
  427fc6:	xor    eax,esi
  427fc8:	cmp    eax,ecx
  427fca:	jne    0x427fed
  427fcc:	mov    eax,DWORD PTR [ebp+0x10]
  427fcf:	mov    ecx,DWORD PTR [ebp+0xc]
  427fd2:	xor    eax,esi
  427fd4:	xor    ecx,esi
  427fd6:	sub    eax,ecx
  427fd8:	mov    ecx,DWORD PTR [ebp-0x20]
  427fdb:	sub    eax,edi
  427fdd:	xor    eax,esi
  427fdf:	mov    DWORD PTR [ebp+0x10],eax
  427fe2:	mov    eax,DWORD PTR [ebp+0xc]
  427fe5:	xor    eax,esi
  427fe7:	sub    ecx,eax
  427fe9:	sub    ecx,edi
  427feb:	jmp    0x427ffc
  427fed:	mov    eax,DWORD PTR [ebp+0xc]
  427ff0:	xor    eax,esi
  427ff2:	mov    ecx,0xffcd8d11
  427ff7:	sub    ecx,eax
  427ff9:	add    ecx,DWORD PTR [ebp+0x8]
  427ffc:	mov    DWORD PTR [ebp+0x8],ecx
  427fff:	mov    eax,DWORD PTR [ebp+0x10]
  428002:	cmp    eax,ebx
  428004:	jne    0x427f03
  42800a:	mov    eax,DWORD PTR [ebp-0x24]
  42800d:	jmp    0x428012
  42800f:	mov    eax,DWORD PTR [ebp-0x4]
  428012:	xor    eax,esi
  428014:	add    eax,edi
  428016:	pop    edi
  428017:	pop    esi
  428018:	pop    ebx
  428019:	leave  
  42801a:	ret    0xc
  42801d:	push   ebp
  42801e:	mov    ebp,esp
  428020:	sub    esp,0x420
  428026:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  42802d:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428034:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  42803b:	push   ebx
  42803c:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  428043:	mov    eax,DWORD PTR [ebp-0x14]
  428046:	push   esi
  428047:	mov    esi,0x75108a8
  42804c:	push   edi
  42804d:	xor    eax,esi
  42804f:	mov    edi,0x3272ef
  428054:	add    eax,edi
  428056:	mov    DWORD PTR [ebp-0x8],eax
  428059:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  428060:	mov    DWORD PTR [ebp-0x4],0xead71899
  428067:	mov    DWORD PTR [ebp-0x10],0x8
  42806e:	mov    ecx,ecx
  428070:	mov    eax,DWORD PTR [ebp-0xc]
  428073:	mov    ecx,DWORD PTR [ebp-0x14]
  428076:	xor    eax,esi
  428078:	xor    ecx,esi
  42807a:	add    eax,edi
  42807c:	add    ecx,edi
  42807e:	imul   eax,ecx
  428081:	jmp    0x4280b4
  428083:	mov    eax,DWORD PTR [ebp-0x4]
  428086:	sub    eax,edi
  428088:	xor    eax,esi
  42808a:	mov    DWORD PTR [ebp-0x8],eax
  42808d:	lea    ebx,[ebp-0x8]
  428090:	call   0x427dd6
  428095:	mov    DWORD PTR [ebp-0x8],eax
  428098:	mov    eax,DWORD PTR [ebp-0x8]
  42809b:	mov    ecx,DWORD PTR [ebp-0x4]
  42809e:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4280a5:	mov    eax,DWORD PTR [ebp-0xc]
  4280a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4280ab:	xor    eax,esi
  4280ad:	lea    eax,[eax+ecx*1+0x3272ef]
  4280b4:	mov    DWORD PTR [ebp-0x4],eax
  4280b7:	mov    eax,DWORD PTR [ebp-0x18]
  4280ba:	mov    ecx,DWORD PTR [ebp-0xc]
  4280bd:	xor    ecx,esi
  4280bf:	xor    eax,esi
  4280c1:	sub    eax,ecx
  4280c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4280c6:	cmp    ecx,eax
  4280c8:	jbe    0x428083
  4280ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4280cd:	xor    eax,esi
  4280cf:	add    eax,edi
  4280d1:	mov    DWORD PTR [ebp-0x8],eax
  4280d4:	mov    DWORD PTR [ebp-0x18],0xf89c86b8
  4280db:	mov    ebx,ebx
  4280dd:	jmp    0x428140
  4280df:	mov    ecx,DWORD PTR [ebp-0x20]
  4280e2:	mov    eax,DWORD PTR [ebp-0x8]
  4280e5:	xor    ecx,esi
  4280e7:	add    ecx,edi
  4280e9:	shr    eax,cl
  4280eb:	mov    DWORD PTR [ebp-0x4],eax
  4280ee:	mov    eax,DWORD PTR [ebp+0x8]
  4280f1:	mov    cl,BYTE PTR [eax]
  4280f3:	mov    BYTE PTR [ebp+0xb],cl
  4280f6:	mov    cl,BYTE PTR [ebp+0xb]
  4280f9:	mov    edx,DWORD PTR [ebp-0x8]
  4280fc:	movzx  ecx,cl
  4280ff:	xor    ecx,edx
  428101:	mov    DWORD PTR [ebp+0x8],ecx
  428104:	mov    ecx,DWORD PTR [ebp-0x18]
  428107:	mov    edx,DWORD PTR [ebp+0x8]
  42810a:	xor    ecx,esi
  42810c:	add    ecx,edi
  42810e:	and    ecx,edx
  428110:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428117:	mov    edx,DWORD PTR [ebp-0x4]
  42811a:	xor    ecx,edx
  42811c:	mov    DWORD PTR [ebp-0x8],ecx
  42811f:	mov    ecx,DWORD PTR [ebp-0xc]
  428122:	xor    ecx,esi
  428124:	lea    eax,[eax+ecx*1+0x3272ef]
  42812b:	mov    DWORD PTR [ebp+0x8],eax
  42812e:	mov    eax,DWORD PTR [ebp-0xc]
  428131:	xor    eax,esi
  428133:	mov    ecx,0xffcd8d11
  428138:	sub    ecx,eax
  42813a:	add    ecx,DWORD PTR [ebp-0x10]
  42813d:	mov    DWORD PTR [ebp-0x10],ecx
  428140:	mov    eax,DWORD PTR [ebp-0x14]
  428143:	mov    ecx,DWORD PTR [ebp-0x10]
  428146:	xor    eax,esi
  428148:	add    eax,edi
  42814a:	cmp    ecx,eax
  42814c:	jne    0x4280df
  42814e:	mov    eax,DWORD PTR [ebp-0x1c]
  428151:	mov    ecx,DWORD PTR [ebp-0x8]
  428154:	xor    eax,esi
  428156:	add    eax,edi
  428158:	pop    edi
  428159:	pop    esi
  42815a:	xor    eax,ecx
  42815c:	pop    ebx
  42815d:	leave  
  42815e:	ret    0x4
  428161:	push   ebp
  428162:	mov    ebp,esp
  428164:	mov    eax,DWORD PTR [ebp+0x1c]
  428167:	mov    ecx,DWORD PTR [ebp+0x8]
  42816a:	mov    edx,DWORD PTR [ebp+0x10]
  42816d:	mov    eax,DWORD PTR [eax+0x190]
  428173:	mov    eax,DWORD PTR [eax]
  428175:	sub    esp,0x64
  428178:	push   ebx
  428179:	push   esi
  42817a:	push   edi
  42817b:	mov    edi,0x75108a8
  428180:	xor    ecx,edi
  428182:	mov    ebx,0x3272ef
  428187:	add    ecx,ebx
  428189:	cmp    ecx,edx
  42818b:	jne    0x42819c
  42818d:	or     DWORD PTR ds:0x3750c3f,0x4263eb20
  428197:	jmp    0x428698
  42819c:	mov    ecx,DWORD PTR [ebp+0x8]
  42819f:	mov    esi,DWORD PTR [ebp+0x14]
  4281a2:	mov    edx,DWORD PTR [esi]
  4281a4:	xor    ecx,edi
  4281a6:	add    ecx,ebx
  4281a8:	cmp    edx,ecx
  4281aa:	je     0x428653
  4281b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4281b3:	mov    DWORD PTR [ebp-0x1c],eax
  4281b6:	mov    DWORD PTR [ebp+0x1c],ecx
  4281b9:	mov    ecx,DWORD PTR [ebp+0x18]
  4281bc:	mov    eax,DWORD PTR [esi]
  4281be:	mov    DWORD PTR [ebp-0x20],eax
  4281c1:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  4281c8:	mov    edx,0xf89c85ba
  4281cd:	mov    DWORD PTR [ebp-0x8],edx
  4281d0:	mov    eax,DWORD PTR [ebp+0x1c]
  4281d3:	mov    DWORD PTR [ebp+0x1c],eax
  4281d6:	mov    eax,DWORD PTR [ebp+0x1c]
  4281d9:	mov    eax,DWORD PTR [eax+0x190]
  4281df:	mov    eax,DWORD PTR [eax]
  4281e1:	mov    DWORD PTR [ebp-0x24],ecx
  4281e4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4281e7:	mov    ecx,DWORD PTR [ecx+0x190]
  4281ed:	mov    ecx,DWORD PTR [ecx]
  4281ef:	add    ecx,DWORD PTR [eax+0x3c]
  4281f2:	mov    DWORD PTR [ebp+0x10],ecx
  4281f5:	mov    eax,DWORD PTR [ebp+0x8]
  4281f8:	xor    eax,edi
  4281fa:	add    eax,ebx
  4281fc:	mov    DWORD PTR [ebp-0x4],eax
  4281ff:	mov    eax,DWORD PTR [ebp+0x8]
  428202:	xor    eax,edi
  428204:	add    eax,ebx
  428206:	mov    DWORD PTR [ebp+0x18],eax
  428209:	mov    eax,DWORD PTR [ebp+0x10]
  42820c:	mov    eax,DWORD PTR [eax+0x50]
  42820f:	sub    eax,0xc
  428212:	mov    DWORD PTR [ebp-0x28],eax
  428215:	mov    eax,DWORD PTR [ebp+0x10]
  428218:	mov    eax,DWORD PTR [eax+0x38]
  42821b:	mov    ecx,DWORD PTR [ebp+0x10]
  42821e:	dec    eax
  42821f:	test   DWORD PTR [ecx+0x54],eax
  428222:	mov    eax,DWORD PTR [ebp+0x10]
  428225:	je     0x42823f
  428227:	mov    eax,DWORD PTR [eax+0x38]
  42822a:	mov    ecx,DWORD PTR [ebp+0x10]
  42822d:	mov    ecx,DWORD PTR [ecx+0x54]
  428230:	dec    eax
  428231:	not    eax
  428233:	and    ecx,eax
  428235:	mov    eax,DWORD PTR [ebp+0x10]
  428238:	mov    eax,DWORD PTR [eax+0x38]
  42823b:	add    eax,ecx
  42823d:	jmp    0x428242
  42823f:	mov    eax,DWORD PTR [eax+0x54]
  428242:	mov    DWORD PTR [ebp+0x1c],eax
  428245:	mov    eax,DWORD PTR [ebp+0x8]
  428248:	xor    eax,edi
  42824a:	add    eax,ebx
  42824c:	mov    DWORD PTR [ebp+0x18],eax
  42824f:	mov    eax,DWORD PTR [ebp+0x8]
  428252:	xor    eax,edi
  428254:	add    eax,ebx
  428256:	mov    DWORD PTR [ebp+0x18],eax
  428259:	mov    eax,DWORD PTR [ebp+0x8]
  42825c:	mov    ecx,DWORD PTR [ebp-0x24]
  42825f:	xor    eax,edi
  428261:	add    eax,ebx
  428263:	mov    DWORD PTR [ecx],eax
  428265:	mov    DWORD PTR [ebp+0x18],edx
  428268:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  42826f:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  428276:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  42827d:	mov    eax,DWORD PTR [ebp-0x8]
  428280:	mov    ecx,DWORD PTR [ebp+0x1c]
  428283:	xor    eax,edi
  428285:	add    eax,ebx
  428287:	imul   eax,ecx
  42828a:	mov    ecx,DWORD PTR [ebp+0x8]
  42828d:	mov    edx,DWORD PTR [ebp-0x28]
  428290:	xor    ecx,edi
  428292:	lea    ecx,[ecx+edx*1+0x3272ef]
  428299:	cmp    eax,ecx
  42829b:	jae    0x42864c
  4282a1:	mov    eax,DWORD PTR [ebp+0x8]
  4282a4:	xor    eax,edi
  4282a6:	add    eax,ebx
  4282a8:	mov    DWORD PTR [ebp+0x18],eax
  4282ab:	mov    eax,DWORD PTR [ebp+0x1c]
  4282ae:	add    eax,DWORD PTR [ebp-0x1c]
  4282b1:	mov    DWORD PTR [ebp-0x4],eax
  4282b4:	push   DWORD PTR [ebp-0x4]
  4282b7:	mov    esi,DWORD PTR [ebp-0x1c]
  4282ba:	mov    ecx,DWORD PTR [ebp+0x10]
  4282bd:	call   0x427411
  4282c2:	mov    DWORD PTR [ebp+0xc],eax
  4282c5:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4282cc:	mov    eax,DWORD PTR [ebp-0x18]
  4282cf:	xor    eax,edi
  4282d1:	lea    ecx,[ebp-0x40]
  4282d4:	add    eax,ebx
  4282d6:	push   ecx
  4282d7:	call   0x4279a3
  4282dc:	mov    eax,DWORD PTR [ebp+0xc]
  4282df:	test   eax,eax
  4282e1:	je     0x428331
  4282e3:	mov    eax,DWORD PTR [ebp-0x18]
  4282e6:	xor    eax,edi
  4282e8:	add    eax,ebx
  4282ea:	push   eax
  4282eb:	push   DWORD PTR [ebp+0xc]
  4282ee:	lea    eax,[ebp-0x40]
  4282f1:	push   eax
  4282f2:	call   0x427899
  4282f7:	mov    eax,DWORD PTR [ebp-0x4]
  4282fa:	mov    DWORD PTR [ebp-0x18],eax
  4282fd:	mov    eax,DWORD PTR [ebp-0x18]
  428300:	mov    ecx,DWORD PTR [ebp-0x1c]
  428303:	sub    eax,ecx
  428305:	mov    DWORD PTR [ebp-0x18],eax
  428308:	mov    eax,DWORD PTR [ebp+0xc]
  42830b:	mov    ecx,DWORD PTR [ebp+0xc]
  42830e:	mov    eax,DWORD PTR [eax+0x10]
  428311:	add    eax,DWORD PTR [ecx+0xc]
  428314:	mov    ecx,DWORD PTR [ebp-0x18]
  428317:	cmp    ecx,eax
  428319:	jb     0x428331
  42831b:	mov    eax,DWORD PTR [ebp+0xc]
  42831e:	mov    eax,DWORD PTR [eax+0xc]
  428321:	mov    ecx,DWORD PTR [ebp+0xc]
  428324:	add    eax,DWORD PTR [ecx+0x8]
  428327:	mov    ecx,DWORD PTR [ebp-0x18]
  42832a:	sub    eax,ecx
  42832c:	jmp    0x42861f
  428331:	push   0xc
  428333:	push   DWORD PTR [ebp-0x4]
  428336:	lea    eax,[ebp-0x4c]
  428339:	push   eax
  42833a:	call   0x427899
  42833f:	mov    eax,0xf89c85b9
  428344:	mov    DWORD PTR [ebp-0x2c],eax
  428347:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42834e:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  428355:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42835c:	lea    ecx,[ebp-0x2c]
  42835f:	mov    DWORD PTR [ebp-0xc],ecx
  428362:	lea    ecx,[ebp-0x30]
  428365:	mov    DWORD PTR [ebp-0x10],ecx
  428368:	lea    ecx,[ebp-0x34]
  42836b:	mov    DWORD PTR [ebp+0xc],ecx
  42836e:	lea    ecx,[ebp-0x38]
  428371:	mov    DWORD PTR [ebp-0x14],ecx
  428374:	mov    ecx,DWORD PTR [ebp+0x8]
  428377:	xor    ecx,edi
  428379:	add    ecx,ebx
  42837b:	mov    DWORD PTR [ebp-0x18],ecx
  42837e:	jmp    0x42857a
  428383:	cmp    eax,0xf89c85bb
  428388:	je     0x42858c
  42838e:	mov    ecx,DWORD PTR [ebp-0x8]
  428391:	xor    ecx,edi
  428393:	mov    esi,eax
  428395:	add    ecx,ebx
  428397:	mov    DWORD PTR [ebp+0x18],ecx
  42839a:	mov    eax,DWORD PTR [ebp-0x18]
  42839d:	xor    esi,edi
  42839f:	lea    eax,[eax+esi*1+0x3272ef]
  4283a6:	mov    DWORD PTR [ebp-0x18],eax
  4283a9:	mov    eax,DWORD PTR [ebp-0x8]
  4283ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4283af:	xor    eax,edi
  4283b1:	add    eax,ebx
  4283b3:	cmp    ecx,eax
  4283b5:	jne    0x4283ca
  4283b7:	mov    eax,DWORD PTR [ebp+0x8]
  4283ba:	xor    eax,edi
  4283bc:	add    eax,ebx
  4283be:	push   eax
  4283bf:	push   0xc
  4283c1:	lea    eax,[ebp-0x4c]
  4283c4:	push   eax
  4283c5:	call   0x427e7e
  4283ca:	mov    eax,DWORD PTR [ebp-0xc]
  4283cd:	mov    eax,DWORD PTR [eax]
  4283cf:	xor    eax,edi
  4283d1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4283d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4283db:	xor    ecx,edi
  4283dd:	movzx  eax,al
  4283e0:	add    ecx,ebx
  4283e2:	cmp    eax,ecx
  4283e4:	je     0x428562
  4283ea:	mov    eax,DWORD PTR [ebp-0x10]
  4283ed:	mov    eax,DWORD PTR [eax]
  4283ef:	xor    eax,edi
  4283f1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4283f8:	mov    ecx,DWORD PTR [ebp+0x8]
  4283fb:	xor    ecx,edi
  4283fd:	movzx  eax,al
  428400:	add    ecx,ebx
  428402:	cmp    eax,ecx
  428404:	je     0x428562
  42840a:	mov    eax,DWORD PTR [ebp+0xc]
  42840d:	mov    eax,DWORD PTR [eax]
  42840f:	xor    eax,edi
  428411:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428418:	mov    ecx,DWORD PTR [ebp+0x8]
  42841b:	xor    ecx,edi
  42841d:	movzx  eax,al
  428420:	add    ecx,ebx
  428422:	cmp    eax,ecx
  428424:	je     0x428562
  42842a:	mov    eax,DWORD PTR [ebp-0x14]
  42842d:	mov    eax,DWORD PTR [eax]
  42842f:	xor    eax,edi
  428431:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428438:	mov    ecx,DWORD PTR [ebp+0x8]
  42843b:	xor    ecx,edi
  42843d:	movzx  eax,al
  428440:	add    ecx,ebx
  428442:	cmp    eax,ecx
  428444:	je     0x428562
  42844a:	mov    eax,DWORD PTR [ebp-0x10]
  42844d:	mov    eax,DWORD PTR [eax]
  42844f:	xor    eax,edi
  428451:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428458:	mov    ecx,DWORD PTR [ebp-0xc]
  42845b:	mov    ecx,DWORD PTR [ecx]
  42845d:	xor    ecx,edi
  42845f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428466:	xor    al,cl
  428468:	mov    ecx,DWORD PTR [ebp+0xc]
  42846b:	mov    ecx,DWORD PTR [ecx]
  42846d:	xor    ecx,edi
  42846f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428476:	or     al,cl
  428478:	mov    ecx,DWORD PTR [ebp-0xc]
  42847b:	mov    ecx,DWORD PTR [ecx]
  42847d:	xor    ecx,edi
  42847f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  428486:	cmp    cl,al
  428488:	jne    0x428562
  42848e:	mov    eax,DWORD PTR [ebp+0xc]
  428491:	mov    eax,DWORD PTR [eax]
  428493:	xor    eax,edi
  428495:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42849c:	mov    ecx,DWORD PTR [ebp-0x10]
  42849f:	mov    ecx,DWORD PTR [ecx]
  4284a1:	xor    ecx,edi
  4284a3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284aa:	xor    al,cl
  4284ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4284af:	mov    ecx,DWORD PTR [ecx]
  4284b1:	xor    ecx,edi
  4284b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284ba:	or     al,cl
  4284bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4284bf:	mov    ecx,DWORD PTR [ecx]
  4284c1:	xor    ecx,edi
  4284c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4284ca:	cmp    cl,al
  4284cc:	jne    0x428562
  4284d2:	mov    eax,DWORD PTR [ebp-0x14]
  4284d5:	mov    eax,DWORD PTR [eax]
  4284d7:	xor    eax,edi
  4284d9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4284e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4284e3:	mov    ecx,DWORD PTR [ecx]
  4284e5:	xor    ecx,edi
  4284e7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284ee:	xor    al,cl
  4284f0:	mov    ecx,DWORD PTR [ebp-0xc]
  4284f3:	mov    ecx,DWORD PTR [ecx]
  4284f5:	xor    ecx,edi
  4284f7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284fe:	or     al,cl
  428500:	mov    ecx,DWORD PTR [ebp+0xc]
  428503:	mov    ecx,DWORD PTR [ecx]
  428505:	xor    ecx,edi
  428507:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42850e:	cmp    cl,al
  428510:	jne    0x428562
  428512:	mov    eax,DWORD PTR [ebp-0x14]
  428515:	mov    eax,DWORD PTR [eax]
  428517:	xor    eax,edi
  428519:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428520:	mov    ecx,DWORD PTR [ebp-0xc]
  428523:	mov    ecx,DWORD PTR [ecx]
  428525:	xor    ecx,edi
  428527:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42852e:	xor    al,cl
  428530:	mov    ecx,DWORD PTR [ebp-0x10]
  428533:	mov    ecx,DWORD PTR [ecx]
  428535:	xor    ecx,edi
  428537:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42853e:	or     al,cl
  428540:	mov    ecx,DWORD PTR [ebp-0x14]
  428543:	mov    ecx,DWORD PTR [ecx]
  428545:	xor    ecx,edi
  428547:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42854e:	cmp    cl,al
  428550:	jne    0x428562
  428552:	lea    eax,[ebp-0x4c]
  428555:	push   eax
  428556:	call   0x42801d
  42855b:	mov    ecx,DWORD PTR [ebp-0x44]
  42855e:	cmp    eax,ecx
  428560:	je     0x42856c
  428562:	mov    eax,DWORD PTR [ebp+0x8]
  428565:	xor    eax,edi
  428567:	add    eax,ebx
  428569:	mov    DWORD PTR [ebp+0x18],eax
  42856c:	mov    eax,DWORD PTR [ebp-0x8]
  42856f:	xor    eax,edi
  428571:	lea    eax,[eax+esi*1+0x3272ef]
  428578:	xor    eax,edi
  42857a:	mov    ecx,DWORD PTR [ebp+0x8]
  42857d:	mov    edx,DWORD PTR [ebp+0x18]
  428580:	xor    ecx,edi
  428582:	add    ecx,ebx
  428584:	cmp    edx,ecx
  428586:	je     0x428383
  42858c:	mov    eax,DWORD PTR [ebp+0x8]
  42858f:	mov    ecx,DWORD PTR [ebp+0x18]
  428592:	xor    eax,edi
  428594:	add    eax,ebx
  428596:	cmp    ecx,eax
  428598:	jne    0x4285ab
  42859a:	mov    eax,DWORD PTR [ebp-0x8]
  42859d:	mov    ecx,DWORD PTR [ebp+0x1c]
  4285a0:	xor    eax,edi
  4285a2:	lea    eax,[eax+ecx*1+0x3272ef]
  4285a9:	jmp    0x428622
  4285ab:	push   0x18
  4285ad:	push   DWORD PTR [ebp-0x4]
  4285b0:	lea    eax,[ebp-0x64]
  4285b3:	push   eax
  4285b4:	call   0x427899
  4285b9:	mov    eax,DWORD PTR [ebp+0x8]
  4285bc:	mov    ecx,DWORD PTR [ebp-0x18]
  4285bf:	xor    eax,edi
  4285c1:	add    eax,ebx
  4285c3:	cmp    eax,ecx
  4285c5:	je     0x4285da
  4285c7:	mov    eax,DWORD PTR [ebp+0x8]
  4285ca:	xor    eax,edi
  4285cc:	add    eax,ebx
  4285ce:	push   eax
  4285cf:	push   0x18
  4285d1:	lea    eax,[ebp-0x64]
  4285d4:	push   eax
  4285d5:	call   0x427e7e
  4285da:	mov    eax,DWORD PTR [ebp-0x4]
  4285dd:	add    eax,0x18
  4285e0:	mov    DWORD PTR [ebp+0x18],eax
  4285e3:	push   DWORD PTR [ebp-0x50]
  4285e6:	push   DWORD PTR [ebp+0x18]
  4285e9:	mov    eax,DWORD PTR [ebp-0x54]
  4285ec:	add    eax,DWORD PTR [ebp-0x20]
  4285ef:	push   eax
  4285f0:	call   0x427899
  4285f5:	mov    eax,DWORD PTR [ebp+0x8]
  4285f8:	mov    ecx,DWORD PTR [ebp-0x18]
  4285fb:	xor    eax,edi
  4285fd:	add    eax,ebx
  4285ff:	cmp    eax,ecx
  428601:	je     0x428614
  428603:	push   0x0
  428605:	push   DWORD PTR [ebp-0x50]
  428608:	mov    eax,DWORD PTR [ebp-0x54]
  42860b:	add    eax,DWORD PTR [ebp-0x20]
  42860e:	push   eax
  42860f:	call   0x427e7e
  428614:	mov    eax,DWORD PTR [ebp-0x24]
  428617:	mov    ecx,DWORD PTR [ebp-0x50]
  42861a:	add    DWORD PTR [eax],ecx
  42861c:	mov    eax,DWORD PTR [ebp-0x50]
  42861f:	add    eax,DWORD PTR [ebp+0x1c]
  428622:	mov    DWORD PTR [ebp+0x1c],eax
  428625:	mov    eax,DWORD PTR [ebp-0x8]
  428628:	mov    ecx,DWORD PTR [ebp+0x1c]
  42862b:	xor    eax,edi
  42862d:	add    eax,ebx
  42862f:	imul   eax,ecx
  428632:	mov    ecx,DWORD PTR [ebp+0x8]
  428635:	mov    edx,DWORD PTR [ebp-0x28]
  428638:	xor    ecx,edi
  42863a:	lea    ecx,[ecx+edx*1+0x3272ef]
  428641:	cmp    eax,ecx
  428643:	jb     0x4282a1
  428649:	mov    esi,DWORD PTR [ebp+0x14]
  42864c:	mov    eax,DWORD PTR [ebp-0x20]
  42864f:	mov    DWORD PTR [esi],eax
  428651:	jmp    0x428698
  428653:	mov    ecx,DWORD PTR [ebp+0x8]
  428656:	mov    edx,DWORD PTR [ebp+0xc]
  428659:	xor    ecx,edi
  42865b:	xor    edx,edi
  42865d:	add    ecx,ebx
  42865f:	add    edx,ebx
  428661:	cmp    ecx,edx
  428663:	jne    0x428677
  428665:	mov    eax,ds:0x7f642dd0
  42866a:	imul   eax,eax,0x9f15fccf
  428670:	mov    ds:0x7f642dd0,eax
  428675:	jmp    0x428698
  428677:	mov    ecx,DWORD PTR [ebp+0x8]
  42867a:	xor    ecx,edi
  42867c:	add    ecx,ebx
  42867e:	cmp    eax,ecx
  428680:	je     0x42868e
  428682:	sub    DWORD PTR ds:0xf861e30,0x709bead0
  42868c:	jmp    0x428698
  42868e:	and    DWORD PTR ds:0x3343fad0,0x5265ec3f
  428698:	pop    edi
  428699:	pop    esi
  42869a:	pop    ebx
  42869b:	leave  
  42869c:	ret    0x18
  42869f:	push   ebp
  4286a0:	mov    ebp,esp
  4286a2:	and    esp,0xfffffff8
  4286a5:	mov    eax,DWORD PTR [ebp+0x20]
  4286a8:	sub    esp,0x14
  4286ab:	push   ebx
  4286ac:	mov    ebx,DWORD PTR [ebp+0x14]
  4286af:	push   esi
  4286b0:	push   edi
  4286b1:	cmp    eax,0xf89c85b9
  4286b6:	jne    0x4286c2
  4286b8:	push   0xf89c85ba
  4286bd:	jmp    0x4287f4
  4286c2:	mov    eax,DWORD PTR [ebp+0x20]
  4286c5:	cmp    eax,0xf89c85ba
  4286ca:	jne    0x4286d6
  4286cc:	push   0xf89c85bb
  4286d1:	jmp    0x4287f4
  4286d6:	mov    eax,DWORD PTR [ebp+0x20]
  4286d9:	cmp    eax,0xf89c85bb
  4286de:	jne    0x4286ea
  4286e0:	push   0xf89c85bc
  4286e5:	jmp    0x4287f4
  4286ea:	mov    eax,DWORD PTR [ebp+0x20]
  4286ed:	cmp    eax,0xf89c85bc
  4286f2:	jne    0x4286fe
  4286f4:	push   0xf89c85bd
  4286f9:	jmp    0x4287f4
  4286fe:	mov    ecx,DWORD PTR [ebp+0x20]
  428701:	mov    eax,0xf89c85b0
  428706:	cmp    ecx,eax
  428708:	jne    0x4287c4
  42870e:	mov    eax,DWORD PTR [ebp+0x10]
  428711:	mov    DWORD PTR [esp+0xc],eax
  428715:	mov    eax,DWORD PTR [ebp+0x18]
  428718:	mov    DWORD PTR [esp+0x14],eax
  42871c:	mov    eax,DWORD PTR [ebp+0xc]
  42871f:	mov    DWORD PTR [esp+0x18],eax
  428723:	mov    eax,DWORD PTR [ebp+0x8]
  428726:	mov    DWORD PTR [esp+0x10],eax
  42872a:	mov    eax,DWORD PTR [esp+0x10]
  42872e:	mov    ecx,DWORD PTR [esp+0x14]
  428732:	mov    edi,0x75108a8
  428737:	xor    eax,edi
  428739:	mov    esi,0x3272ef
  42873e:	add    eax,esi
  428740:	mov    DWORD PTR [ecx],eax
  428742:	mov    eax,DWORD PTR [esp+0xc]
  428746:	mov    eax,DWORD PTR [eax+0x194]
  42874c:	mov    ecx,DWORD PTR [eax]
  42874e:	mov    eax,DWORD PTR [esp+0xc]
  428752:	mov    eax,DWORD PTR [eax+0x194]
  428758:	mov    eax,DWORD PTR [eax]
  42875a:	add    eax,DWORD PTR [ecx+0x3c]
  42875d:	mov    ecx,DWORD PTR [esp+0xc]
  428761:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428767:	mov    ecx,DWORD PTR [ecx+0x14]
  42876a:	push   0x4
  42876c:	push   0x3000
  428771:	push   DWORD PTR [eax+0x50]
  428774:	push   0x0
  428776:	call   ecx
  428778:	mov    DWORD PTR [ebx],eax
  42877a:	mov    eax,DWORD PTR [esp+0x10]
  42877e:	push   DWORD PTR [esp+0xc]
  428782:	xor    eax,edi
  428784:	add    eax,esi
  428786:	mov    DWORD PTR [esp+0x20],eax
  42878a:	lea    eax,[esp+0x20]
  42878e:	push   eax
  42878f:	push   ebx
  428790:	push   DWORD PTR [esp+0x20]
  428794:	push   DWORD PTR [esp+0x28]
  428798:	push   DWORD PTR [esp+0x24]
  42879c:	call   0x428161
  4287a1:	mov    eax,DWORD PTR [esp+0x10]
  4287a5:	mov    ecx,DWORD PTR [ebx]
  4287a7:	xor    eax,edi
  4287a9:	add    eax,esi
  4287ab:	cmp    ecx,eax
  4287ad:	je     0x42880b
  4287af:	mov    eax,DWORD PTR [esp+0x18]
  4287b3:	mov    ecx,DWORD PTR [esp+0x14]
  4287b7:	xor    eax,edi
  4287b9:	add    eax,esi
  4287bb:	imul   eax,DWORD PTR [esp+0x1c]
  4287c0:	mov    DWORD PTR [ecx],eax
  4287c2:	jmp    0x42880b
  4287c4:	mov    ecx,DWORD PTR [ebp+0x20]
  4287c7:	cmp    ecx,0xf89c85bd
  4287cd:	jne    0x4287d6
  4287cf:	push   0xf89c85be
  4287d4:	jmp    0x4287f4
  4287d6:	mov    ecx,DWORD PTR [ebp+0x20]
  4287d9:	cmp    ecx,0xf89c85be
  4287df:	jne    0x4287e8
  4287e1:	push   0xf89c85bf
  4287e6:	jmp    0x4287f4
  4287e8:	mov    ecx,DWORD PTR [ebp+0x20]
  4287eb:	cmp    ecx,0xf89c85bf
  4287f1:	jne    0x42880b
  4287f3:	push   eax
  4287f4:	push   DWORD PTR [ebp+0x1c]
  4287f7:	push   DWORD PTR [ebp+0x18]
  4287fa:	push   ebx
  4287fb:	push   DWORD PTR [ebp+0x10]
  4287fe:	push   DWORD PTR [ebp+0xc]
  428801:	push   DWORD PTR [ebp+0x8]
  428804:	call   0x42869f
  428809:	mov    DWORD PTR [ebx],eax
  42880b:	mov    eax,DWORD PTR [ebx]
  42880d:	pop    edi
  42880e:	pop    esi
  42880f:	pop    ebx
  428810:	mov    esp,ebp
  428812:	pop    ebp
  428813:	ret    0x1c
  428816:	push   ebp
  428817:	mov    ebp,esp
  428819:	sub    esp,0xc
  42881c:	mov    eax,0xf89c85b9
  428821:	mov    DWORD PTR [ebp-0x8],eax
  428824:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  42882b:	mov    ecx,DWORD PTR [ebp-0x8]
  42882e:	xor    ecx,0x75108a8
  428834:	add    ecx,0x3272ef
  42883a:	mov    DWORD PTR [ebp-0x4],ecx
  42883d:	mov    ecx,DWORD PTR [ebp+0xc]
  428840:	push   eax
  428841:	mov    DWORD PTR [ebp+0xc],ecx
  428844:	push   DWORD PTR [ebp+0xc]
  428847:	lea    eax,[ebp-0x4]
  42884a:	push   DWORD PTR [ebp+0x8]
  42884d:	push   eax
  42884e:	push   DWORD PTR [ebp+0xc]
  428851:	push   DWORD PTR [ebp-0xc]
  428854:	push   DWORD PTR [ebp-0x8]
  428857:	call   0x42869f
  42885c:	mov    DWORD PTR [ebp-0x4],eax
  42885f:	mov    eax,DWORD PTR [ebp-0x4]
  428862:	leave  
  428863:	ret    0x8
