
75e878ba2f1e1b21e52f3a886b1e438a626749bd4705e6c702628b02278900b2.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	(bad)  
  41107b:	retf   
  41107c:	retf   
  41107d:	xchg   esi,eax
  41107e:	imul   ebp,DWORD PTR [edx+0x6f494d0b],0xfae122d2
  411088:	test   eax,0xac860220
  41108d:	sub    eax,0xb5668a6f
  411092:	push   cs
  411093:	and    cl,al
  411095:	out    0xfa,eax
  411097:	push   es
  411098:	xlat   BYTE PTR ds:[ebx]
  411099:	sti    
  41109a:	lds    ebx,FWORD PTR [edi+ebx*1-0xbc65e1e]
  4110a1:	test   BYTE PTR [edx-0x4a],ah
  4110a4:	mov    WORD PTR ds:0x7a967329,es
  4110aa:	repz cs mov esp,0x6254c752
  4110b1:	mov    esp,0x2b7172f
  4110b6:	aam    0xfb
  4110b8:	(bad)  
  4110b9:	(bad)
  4110bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110bd:	fsub   DWORD PTR [esi-0x66c8f879]
  4110c3:	out    dx,eax
  4110c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110c5:	cmp    ah,dh
  4110c7:	(bad)  
  4110c8:	neg    cl
  4110ca:	mov    bh,0xb
  4110cc:	inc    edi
  4110cd:	pop    ds
  4110ce:	push   ds
  4110cf:	mov    ch,BYTE PTR [eax-0x7f06730c]
  4110d5:	inc    ebp
  4110d6:	cs call 0x5362:0x844cc3f6
  4110de:	imul   ecx,DWORD PTR [edx+0x36],0x2f16031d
  4110e5:	je     0x411117
  4110e7:	aam    0x79
  4110e9:	in     al,dx
  4110ea:	sub    ecx,DWORD PTR ds:0xa006f25b
  4110f0:	dec    edi
  4110f1:	cwde   
  4110f2:	iret   
  4110f3:	mov    al,0x88
  4110f5:	test   DWORD PTR [esi],edx
  4110f7:	add    bl,cl
  4110f9:	test   eax,0x37cd42ff
  4110fe:	dec    esp
  4110ff:	ret    
  411100:	or     edx,DWORD PTR [esi-0x6f]
  411103:	outs   dx,BYTE PTR ds:[esi]
  411104:	sbb    DWORD PTR [eax+eax*8-0x39088633],0x4ef5e788
  41110f:	iret   
  411110:	stos   BYTE PTR es:[edi],al
  411111:	and    DWORD PTR [ebx+0x56],esi
  411114:	adc    cl,BYTE PTR [esi+0x29]
  411117:	ds lahf 
  411119:	fnstsw WORD PTR [eax]
  41111b:	mov    ch,0xa2
  41111d:	sub    ecx,DWORD PTR [edx]
  41111f:	in     eax,0xc5
  411121:	pop    esi
  411122:	xor    BYTE PTR [eax+0x4],dl
  411125:	nop
  411126:	xchg   edi,eax
  411127:	stc    
  411128:	and    ebx,DWORD PTR [ebx]
  41112a:	sub    cl,BYTE PTR [bp+si-0x2e]
  41112e:	push   edi
  41112f:	pop    ss
  411130:	mov    dh,0xa8
  411132:	sub    edx,edi
  411134:	out    0xfb,eax
  411136:	ret    0x7118
  411139:	in     eax,dx
  41113a:	lock hlt 
  41113c:	adc    al,0x49
  41113e:	pop    edx
  41113f:	push   ss
  411140:	or     BYTE PTR [ecx+0x3b],bl
  411143:	push   ebp
  411144:	imul   ebx,DWORD PTR cs:[esi+eiz*1-0x22],0x17476be9
  41114d:	add    eax,0x6c1a74fe
  411152:	cmp    al,0x7b
  411154:	fadd   QWORD PTR [edx+0x534306a5]
  41115a:	push   ebx
  41115b:	enter  0x50c6,0x18
  41115f:	mov    bl,0x15
  411161:	sub    BYTE PTR [ebp-0x31565db],dl
  411167:	ja     0x4110f5
  411169:	add    eax,ebx
  41116b:	or     BYTE PTR [ebx],al
  41116d:	push   esi
  41116e:	xchg   edi,eax
  41116f:	in     eax,0x39
  411171:	lds    edx,FWORD PTR [esi+0x7d]
  411174:	loop   0x41118e
  411176:	outs   dx,DWORD PTR ds:[esi]
  411177:	pop    es
  411178:	mov    eax,0x641ea6a2
  41117d:	repnz dec ebp
  41117f:	mov    bh,0xfa
  411181:	aam    0x73
  411183:	xor    dl,dh
  411185:	mov    al,0x45
  411187:	rcr    BYTE PTR [eax+0x3c],1
  41118a:	daa    
  41118b:	mov    al,0x7b
  41118d:	int    0x14
  41118f:	xor    ebx,eax
  411191:	sub    ah,BYTE PTR [edi]
  411193:	xor    cl,bh
  411195:	xor    DWORD PTR [edi],0x56
  411198:	ret    0x1ede
  41119b:	outs   dx,DWORD PTR ds:[esi]
  41119c:	push   edi
  41119d:	adc    edx,DWORD PTR [edi]
  41119f:	inc    edi
  4111a0:	dec    esp
  4111a1:	pop    edx
  4111a2:	dec    edx
  4111a3:	cmc    
  4111a4:	dec    esi
  4111a5:	(bad)  
  4111a6:	xor    ebx,ebx
  4111a8:	in     eax,0x51
  4111aa:	dec    edx
  4111ab:	sub    al,0x22
  4111ad:	in     eax,0xd6
  4111af:	popf   
  4111b0:	mov    al,ds:0xc65e5d62
  4111b5:	inc    ebp
  4111b6:	inc    ebx
  4111b7:	icebp  
  4111b8:	jnp    0x4111a7
  4111ba:	jae    0x411235
  4111bc:	test   ah,0x37
  4111bf:	sbb    ecx,DWORD PTR [ebp-0x28]
  4111c2:	xor    eax,0x42af3dc0
  4111c7:	data16 test al,0xf7
  4111ca:	sub    ebp,DWORD PTR [ecx]
  4111cc:	mov    bh,0x51
  4111ce:	out    0xf4,eax
  4111d0:	je     0x41119e
  4111d2:	mov    ds:0x78ec962c,al
  4111d7:	call   0xa7c1d297
  4111dc:	mov    dh,0xd2
  4111de:	fisttp WORD PTR [esi]
  4111e0:	int3   
  4111e1:	test   eax,0x423a239e
  4111e6:	adc    eax,DWORD PTR [edi-0x12]
  4111e9:	(bad)  
  4111ea:	mov    edx,0x4c0c6cb3
  4111ef:	rcr    BYTE PTR [ebp-0x53],cl
  4111f2:	sbb    DWORD PTR [esi-0x356b8823],ebp
  4111f8:	les    esp,FWORD PTR [edx+eiz*8+0xa]
  4111fc:	jg     0x411273
  4111fe:	xchg   ebp,eax
  4111ff:	dec    edi
  411200:	xchg   ebp,eax
  411201:	pop    ebx
  411202:	mov    bl,0xaf
  411204:	inc    ebp
  411205:	xchg   edi,eax
  411206:	jp     0x4111b4
  411208:	gs test eax,0x4d367db5
  41120e:	push   0x58625b95
  411213:	or     ecx,DWORD PTR cs:[esp+ebp*2]
  411217:	jle    0x4111c8
  411219:	arpl   bx,bp
  41121b:	js     0x4111fa
  41121d:	mov    fs,WORD PTR [eax]
  41121f:	jmp    0x1d9ee4b
  411224:	pop    ss
  411225:	ret    
  411226:	sbb    al,0x2c
  411228:	jg     0x4111e4
  41122a:	es test ah,ch
  41122d:	lock jmp 0x9d549a78
  411233:	cmp    BYTE PTR [eax+0x34],bh
  411236:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  411238:	scas   eax,DWORD PTR es:[edi]
  411239:	mov    esi,0xb4e52af5
  41123e:	xor    al,0x0
  411240:	in     al,dx
  411241:	xchg   ebp,eax
  411242:	(bad)  
  411243:	out    0x70,eax
  411245:	inc    edx
  411247:	and    eax,0x2d6d89c2
  41124c:	test   al,0xc8
  41124e:	xor    DWORD PTR [edi+0x6a6b155d],edx
  411254:	push   edi
  411255:	aam    0xde
  411257:	je     0x411237
  411259:	hlt    
  41125a:	add    dh,BYTE PTR gs:[ebp+0x66]
  41125e:	popa   
  41125f:	mov    edi,0xf438b33b
  411264:	cli    
  411265:	xor    eax,0x25158659
  41126a:	jbe    0x411224
  41126c:	hlt    
  41126d:	add    dh,BYTE PTR [ebx-0x40]
  411270:	scas   eax,DWORD PTR es:[edi]
  411271:	push   0xf0cc2b51
  411276:	fisub  DWORD PTR ds:0x7dc3530a
  41127c:	mov    ch,0xf8
  41127e:	push   eax
  41127f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411280:	and    al,BYTE PTR [edi+0x32efe7bd]
  411286:	or     bh,al
  411288:	xor    al,BYTE PTR [ebp-0x1b]
  41128b:	xor    DWORD PTR [ecx+ebp*1-0x23f68ff0],edx
  411292:	and    DWORD PTR [edx],esp
  411294:	xchg   esi,eax
  411295:	test   BYTE PTR [eax+0x65988561],ch
  41129b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41129c:	shr    BYTE PTR [eax],cl
  41129e:	(bad)  
  4112a0:	dec    edi
  4112a1:	imul   edi,DWORD PTR [edx],0x39edd9e3
  4112a7:	add    cl,BYTE PTR ds:0xb8a861dc
  4112ad:	(bad)  
  4112ae:	aas    
  4112af:	jmp    0xdb2d:0x7aa3417b
  4112b6:	icebp  
  4112b7:	(bad)  
  4112b8:	pop    esp
  4112b9:	xor    ah,ch
  4112bb:	hlt    
  4112bc:	mov    bh,BYTE PTR [eax]
  4112be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112bf:	cmp    esi,DWORD PTR [esi-0x3e]
  4112c2:	fdivr  QWORD PTR [ebx-0x1a398867]
  4112c8:	rcl    DWORD PTR ds:0x86532497,cl
  4112ce:	fst    DWORD PTR [ecx+0xb]
  4112d1:	mov    eax,0xfca493c5
  4112d6:	call   0xe4181196
  4112db:	pop    eax
  4112dc:	adc    BYTE PTR [ecx+0x44],dh
  4112df:	mov    ebx,0xaa892d30
  4112e4:	jge    0x41129b
  4112e6:	iret   
  4112e7:	ds nop
  4112e9:	(bad)  
  4112ea:	test   eax,0xe18f69dc
  4112ef:	mov    esi,0x5fec72e
  4112f4:	adc    edi,DWORD PTR [ebx+0x5e]
  4112f7:	jae    0x411337
  4112f9:	aad    0xa8
  4112fb:	enter  0x1624,0x8b
  4112ff:	jbe    0x411281
  411301:	rol    esi,1
  411303:	mov    esp,0xd280571f
  411308:	dec    edx
  411309:	inc    esp
  41130a:	call   0x46a6:0x65586b8b
  411311:	stos   DWORD PTR es:[edi],eax
  411312:	mov    ebx,DWORD PTR [esi-0x1]
  411315:	mov    bl,0xd6
  411317:	(bad)  
  411318:	adc    DWORD PTR [esi],eax
  41131a:	neg    DWORD PTR [ebp-0x12b346aa]
  411320:	pop    edi
  411321:	nop
  411322:	jmp    FWORD PTR [edx+ecx*8+0x5df64482]
  411329:	ins    BYTE PTR es:[edi],dx
  41132a:	int3   
  41132b:	sub    edx,DWORD PTR [edx-0x31]
  41132e:	js     0x41133d
  411330:	icebp  
  411331:	mov    ebp,0x10f37359
  411336:	push   esi
  411337:	xchg   esi,eax
  411338:	inc    edi
  411339:	dec    esi
  41133a:	mov    ch,0x1
  41133c:	daa    
  41133d:	aad    0x73
  41133f:	mov    BYTE PTR [eax-0x1],bl
  411342:	xor    dh,cl
  411344:	cmp    bl,al
  411346:	loope  0x411318
  411348:	cwde   
  411349:	jne    0x411351
  41134b:	mov    cl,0xd3
  41134d:	xchg   DWORD PTR [ebx],ebp
  41134f:	(bad)  [ebp-0x42]
  411352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411353:	icebp  
  411354:	mov    ebx,0xde11be10
  411359:	pop    es
  41135a:	jae    0x41138f
  41135c:	sti    
  41135d:	ja     0x41134f
  41135f:	jge    0x41138f
  411361:	sar    DWORD PTR [ebx+ebx*2+0x3f],0x6f
  411366:	pop    edx
  411367:	gs mov dh,0x12
  41136a:	(bad)  
  41136b:	mov    fs,WORD PTR [esi-0x6dc05f7d]
  411371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411372:	test   DWORD PTR [edx+edx*1+0x4d],eax
  411376:	inc    ebx
  411377:	sbb    al,0x7b
  411379:	test   BYTE PTR [eax+esi*8-0x4f],ch
  41137d:	sub    eax,0x61ce924e
  411382:	fisub  DWORD PTR [ebx-0x5bfc0f36]
  411388:	stc    
  411389:	dec    edx
  41138a:	jl     0x4113c0
  41138c:	push   0x55
  41138e:	dec    ebx
  41138f:	rol    BYTE PTR [ebx-0x3f],1
  411392:	jne    0x41132c
  411394:	loop   0x4113b9
  411396:	lds    eax,FWORD PTR [ebp+esi*8+0x75339577]
  41139d:	(bad)  
  41139e:	push   eax
  41139f:	mov    al,BYTE PTR [edi-0x6d]
  4113a2:	or     ah,BYTE PTR [esi-0x80]
  4113a5:	mov    ds:0x54c9210,al
  4113aa:	out    dx,al
  4113ab:	mov    ds:0x41ceb3d0,al
  4113b0:	sub    DWORD PTR [edx-0x12df36ac],eax
  4113b6:	in     al,0xd8
  4113b8:	cmp    al,0x55
  4113ba:	mov    ebx,0x7311100e
  4113bf:	mov    bl,0x56
  4113c1:	and    dh,BYTE PTR [ebx-0x502e311a]
  4113c7:	das    
  4113c8:	inc    bx
  4113ca:	test   DWORD PTR [ebp-0x66d3843],0x793c4229
  4113d4:	cwde   
  4113d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113d6:	cwde   
  4113d7:	stos   BYTE PTR es:[edi],al
  4113d8:	ret    0xdecb
  4113db:	xor    BYTE PTR [ebx+0x2f82c40b],0x14
  4113e2:	cmp    ebp,DWORD PTR [eax-0x5b75b003]
  4113e8:	aad    0xab
  4113ea:	push   cs
  4113eb:	inc    ebp
  4113ec:	aas    
  4113ed:	inc    esp
  4113ee:	add    DWORD PTR cs:[ebp+0x5f],edx
  4113f2:	or     eax,0xfc9591d
  4113f7:	dec    DWORD PTR [edi-0x35f4f025]
  4113fd:	inc    esp
  4113fe:	push   ds
  4113ff:	adc    dh,0x64
  411402:	lods   eax,DWORD PTR ds:[esi]
  411403:	sub    ebp,DWORD PTR [edx]
  411405:	adc    ch,cl
  411407:	rcr    bh,0x9b
  41140a:	loopne 0x4113f0
  41140c:	xchg   ecx,eax
  41140d:	inc    esi
  41140e:	jp     0x4113d5
  411410:	jno    0x41145e
  411412:	mov    dl,0x5
  411414:	push   0xe6a27c
  411419:	stos   DWORD PTR es:[edi],eax
  41141a:	xchg   BYTE PTR [ebx+0x53],al
  41141d:	stos   DWORD PTR es:[edi],eax
  41141e:	retf   
  41141f:	mov    ecx,0x4d1191d3
  411424:	pop    ebx
  411425:	pop    ebx
  411426:	icebp  
  411427:	mov    ds:0x3a447b27,eax
  41142c:	sahf   
  41142d:	mov    ebx,DWORD PTR [edi]
  41142f:	mov    ds:0x51dd0aa9,al
  411434:	aas    
  411435:	sbb    al,0x8c
  411437:	(bad)  
  411438:	jbe    0x4113f1
  41143a:	mov    edi,0xc825dff2
  41143f:	xor    dl,bl
  411441:	call   0xe26:0xd6e26471
  411448:	and    esi,ebp
  41144a:	sbb    esp,DWORD PTR [eax]
  41144c:	jl     0x411464
  41144e:	icebp  
  41144f:	iret   
  411450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411451:	adc    esp,ecx
  411453:	xchg   esp,eax
  411454:	pop    ecx
  411455:	push   0x49
  411457:	call   0xfab658c
  41145c:	xlat   BYTE PTR ds:[ebx]
  41145d:	jle    0x411492
  41145f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411460:	ins    DWORD PTR es:[edi],dx
  411461:	mov    edx,0xad6f474a
  411466:	xor    esi,DWORD PTR [ecx+edi*8+0x373f4114]
  41146d:	mov    edx,0xb56861ae
  411472:	rcl    BYTE PTR [ecx+0x5d],1
  411475:	loope  0x411441
  411477:	push   edx
  411478:	mov    bh,0x6c
  41147a:	arpl   dx,dx
  41147c:	lea    ebp,[eax-0x7ae8812c]
  411482:	and    esi,DWORD PTR [eax]
  411484:	leave  
  411485:	add    al,0x14
  411487:	retf   0x681a
  41148a:	and    al,bl
  41148c:	push   cs
  41148d:	ins    BYTE PTR es:[edi],dx
  41148e:	push   edx
  41148f:	jge    0x411479
  411491:	sahf   
  411492:	cmp    al,BYTE PTR [eax]
  411494:	and    eax,0x28e4605b
  411499:	pop    ds
  41149a:	sti    
  41149b:	push   0x8ddc845f
  4114a0:	std    
  4114a1:	and    esp,DWORD PTR [edx-0x30]
  4114a4:	(bad)  
  4114a5:	fnstenv [ebx]
  4114a7:	jo     0x411526
  4114a9:	ret    
  4114aa:	jmp    DWORD PTR [ecx]
  4114ac:	inc    eax
  4114ad:	mov    ds:0x6c2e5d7e,al
  4114b2:	ja     0x411532
  4114b4:	adc    bh,BYTE PTR [edi]
  4114b6:	ficom  WORD PTR [edi+0x57]
  4114b9:	mov    edi,0xfa7f1200
  4114be:	sbb    cl,BYTE PTR [ebx-0x5b51134b]
  4114c4:	ds repz pop edi
  4114c7:	call   0x1495119a
  4114cc:	sbb    DWORD PTR [edx+0x192baf41],edx
  4114d2:	mov    ds:0xf3a03335,eax
  4114d7:	jo     0x4114f2
  4114d9:	out    0x84,eax
  4114db:	or     al,0xf0
  4114dd:	das    
  4114de:	xchg   esi,eax
  4114df:	add    ch,BYTE PTR [eax+0x21]
  4114e2:	mov    eax,ds:0xeea3f577
  4114e7:	push   cs
  4114e8:	ds stos DWORD PTR es:[edi],eax
  4114ea:	push   ecx
  4114eb:	call   0x494a24de
  4114f0:	ret    0xf78e
  4114f3:	stos   BYTE PTR es:[edi],al
  4114f4:	push   ds
  4114f5:	xor    ebx,eax
  4114f7:	icebp  
  4114f8:	sbb    al,0xa5
  4114fa:	push   eax
  4114fb:	fbld   TBYTE PTR [esp+ecx*8+0x63]
  4114ff:	xchg   esp,eax
  411500:	mov    al,ds:0x6e71c588
  411505:	(bad)  
  411507:	cmp    eax,0x8e375996
  41150c:	ffreep st(6)
  41150e:	mov    esi,0x76fde9a8
  411513:	enter  0xa84e,0x7d
  411517:	push   edx
  411518:	mov    al,bh
  41151a:	xchg   esi,eax
  41151b:	fcom   QWORD PTR [eax+ecx*2+0x21d2b417]
  411522:	test   al,al
  411524:	outs   dx,DWORD PTR ds:[esi]
  411525:	pop    ebx
  411526:	dec    edx
  411527:	mov    ebp,0x5a4b2e99
  41152c:	stos   DWORD PTR es:[edi],eax
  41152d:	pop    es
  41152e:	test   eax,0x92229b28
  411533:	sub    al,0x17
  411535:	es sbb eax,0xd733718b
  41153b:	jl     0x411586
  41153d:	out    0x65,eax
  41153f:	ret    
  411540:	dec    ecx
  411541:	adc    DWORD PTR [eax+0x131f30c8],esi
  411547:	cmp    bl,BYTE PTR [esp+edi*2-0x69]
  41154b:	out    dx,eax
  41154c:	and    al,0x57
  41154e:	cmc    
  41154f:	jmp    0x8929e50d
  411554:	sub    eax,0x8bb4d192
  411559:	xchg   esp,eax
  41155a:	adc    DWORD PTR [esi],esp
  41155c:	aad    0x49
  41155e:	jnp    0x41157b
  411560:	mov    eax,esp
  411562:	cmc    
  411563:	pop    eax
  411564:	div    BYTE PTR [ecx]
  411566:	repnz xchg ebp,eax
  411568:	fisubr DWORD PTR [edx]
  41156a:	xchg   edi,eax
  41156b:	fadd   QWORD PTR [ebx]
  41156d:	mov    cl,0x6c
  41156f:	pop    edx
  411570:	fstp   TBYTE PTR [ebp+0x7c]
  411573:	mov    ds:0x633fcf50,eax
  411578:	shl    DWORD PTR [edi],1
  41157a:	das    
  41157b:	xchg   edx,edx
  41157d:	sysret 
  41157f:	iret   
  411580:	jmp    0xe3f1928e
  411585:	fmul   DWORD PTR [edx+0xc]
  411588:	xor    BYTE PTR [ebx+0x1322f7c4],bh
  41158e:	cmp    esi,DWORD PTR [ecx+0x19de9e73]
  411594:	xchg   ebx,eax
  411595:	jg     0x41153b
  411597:	mov    bh,0x19
  411599:	popa   
  41159a:	push   eax
  41159b:	adc    al,0x12
  41159d:	ss cdq 
  41159f:	mov    ?,WORD PTR [edi+0x4194bb70]
  4115a5:	leave  
  4115a6:	and    bh,BYTE PTR [eax+0x146bb48c]
  4115ac:	push   0xffffff9b
  4115ae:	sbb    al,0xb2
  4115b0:	int3   
  4115b1:	cs cmp eax,0xd4da75e9
  4115b7:	and    ebx,DWORD PTR ds:0xebb29c9
  4115bd:	mov    eax,ds:0x4341ce83
  4115c2:	add    DWORD PTR [ebp-0x26fd2a2c],edx
  4115c8:	adc    al,0x9b
  4115ca:	stc    
  4115cb:	arpl   bx,bx
  4115cd:	retf   0xf63d
  4115d0:	fist   WORD PTR [edi]
  4115d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115d3:	jg     0x411614
  4115d5:	popa   
  4115d6:	pop    esi
  4115d7:	les    esi,FWORD PTR [ebx+0x7d]
  4115da:	arpl   WORD PTR ds:0x73afac37,di
  4115e0:	sbb    ah,al
  4115e2:	nop
  4115e3:	aas    
  4115e4:	or     ch,bl
  4115e6:	icebp  
  4115e7:	inc    edi
  4115e8:	loopne 0x41161a
  4115ea:	mov    edx,0xc5c6a46d
  4115ef:	pop    ebp
  4115f0:	xor    bh,BYTE PTR [ecx]
  4115f2:	mov    DWORD PTR [ebx],0x358b8b55
  4115f8:	mov    edi,0x49985c17
  4115fd:	inc    eax
  4115fe:	pop    ebx
  4115ff:	bound  esp,QWORD PTR [eax]
  411601:	arpl   WORD PTR [edi+0x68a80cef],si
  411607:	lods   al,BYTE PTR ds:[esi]
  411608:	pop    ss
  411609:	in     al,dx
  41160a:	mov    bl,0xb9
  41160c:	and    DWORD PTR [ecx],esi
  41160e:	(bad)  
  41160f:	jle    0x4115e1
  411611:	adc    bh,BYTE PTR [esi+0x7d]
  411614:	je     0x4115af
  411616:	jle    0x4115a6
  411618:	(bad)  [ebx-0x76]
  41161b:	xor    al,0x9
  41161d:	loopne 0x4115be
  41161f:	mov    dh,0x63
  411621:	aad    0xae
  411623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411624:	jno    0x411686
  411626:	out    0xc9,al
  411628:	out    dx,eax
  411629:	pop    edi
  41162a:	add    edx,DWORD PTR [edi+0x43bfdfda]
  411630:	pushf  
  411631:	dec    eax
  411632:	dec    ebx
  411633:	jnp    0x4115de
  411635:	inc    esp
  411636:	jb     0x4115e5
  411638:	cs pop ss
  41163a:	shr    BYTE PTR [esi],0xff
  41163d:	es xchg ebp,eax
  41163f:	retf   
  411640:	cmp    BYTE PTR ds:0x6a11b9b0,bh
  411646:	or     bl,ah
  411648:	jmp    0xcff9:0x7cd5bc80
  41164f:	jmp    0x411641
  411651:	pusha  
  411652:	rcl    BYTE PTR [esi-0x7307d256],0x9e
  411659:	gs pop edx
  41165b:	loopne 0x411686
  41165d:	mov    bh,0x45
  41165f:	adc    BYTE PTR [eax+0x79],dl
  411662:	mov    bl,0x9c
  411664:	jno    0x411632
  411666:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411668:	mov    cl,bl
  41166a:	test   BYTE PTR ds:0x5ba7a0b,bh
  411670:	push   0x5dffc3b4
  411675:	mov    DWORD PTR ds:0x1e78cadf,0xc6696814
  41167f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411680:	jg     0x4116c2
  411682:	shr    DWORD PTR [edx-0x34],0x70
  411686:	adc    dl,BYTE PTR [edi+0x5d]
  411689:	fs icebp 
  41168b:	xor    eax,0xc6dfe28e
  411690:	xchg   BYTE PTR [eax-0x6c],dh
  411693:	xor    bh,BYTE PTR [ecx-0x6502be0a]
  411699:	pop    ebp
  41169a:	xchg   esp,eax
  41169b:	aam    0xaf
  41169d:	xor    BYTE PTR [ebp-0x4c],al
  4116a0:	shl    BYTE PTR [ebp-0x56],cl
  4116a3:	add    eax,0xc9bc2bb4
  4116a8:	adc    BYTE PTR [ebx+esi*8],ch
  4116ab:	or     dl,dh
  4116ad:	mov    dl,0x3
  4116af:	mov    ebx,0xd65081b5
  4116b4:	sbb    esp,DWORD PTR [edx-0x43]
  4116b7:	es sbb al,0x56
  4116ba:	xchg   esi,eax
  4116bb:	inc    ecx
  4116bc:	pop    ebp
  4116bd:	imul   ebx,DWORD PTR [eax+0x25682de9],0xffffffda
  4116c4:	aam    0xb3
  4116c6:	mov    es,WORD PTR [eax+0x47359fe6]
  4116cc:	scas   al,BYTE PTR es:[edi]
  4116cd:	aam    0x6f
  4116cf:	cli    
  4116d0:	shr    DWORD PTR [eax],1
  4116d2:	int3   
  4116d3:	call   0x161f:0xc64c13cb
  4116da:	out    0xda,al
  4116dc:	mov    esi,DWORD PTR [edx+0x32]
  4116df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e1:	mov    ah,0x6c
  4116e3:	push   edx
  4116e4:	retf   0x793f
  4116e7:	jmp    0x4116d0
  4116e9:	jns    0x4116fb
  4116eb:	fdivr  QWORD PTR [ecx-0x33]
  4116ee:	out    dx,al
  4116ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f0:	dec    ebp
  4116f1:	pop    es
  4116f2:	enter  0xbc9b,0x0
  4116f6:	sub    al,cl
  4116f8:	mov    bh,0xc2
  4116fa:	into   
  4116fb:	mov    bh,0xb0
  4116fd:	sahf   
  4116fe:	icebp  
  4116ff:	mov    esp,0x2557f00
  411704:	jp     0x411771
  411706:	pop    es
  411707:	fdiv   QWORD PTR [esi+0x67]
  41170a:	and    edx,DWORD PTR [edi+0x10f1d2af]
  411710:	xchg   BYTE PTR [ecx-0x76],cl
  411713:	sub    eax,0xd86987f8
  411718:	pop    ebp
  411719:	inc    ecx
  41171a:	fst    QWORD PTR [ebx-0x4d2b8437]
  411720:	xchg   ecx,eax
  411721:	xor    ch,BYTE PTR [ecx-0x3]
  411724:	mov    ch,BYTE PTR [edi]
  411726:	test   al,0xe7
  411728:	repz ret 
  41172a:	sbb    al,BYTE PTR [edx-0x5284556d]
  411730:	fdivr  QWORD PTR [eax]
  411732:	out    0x36,eax
  411734:	pop    ebx
  411735:	(bad)  
  411736:	xor    al,0x65
  411738:	adc    bh,ah
  41173a:	add    al,0xf4
  41173c:	ror    DWORD PTR [ebx],cl
  41173e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41173f:	sbb    eax,0x1046209
  411744:	cdq    
  411745:	add    ecx,esi
  411747:	sub    dh,ah
  411749:	imul   eax,DWORD PTR [edi+0x4f],0x74
  41174d:	pusha  
  41174e:	push   ds
  41174f:	mov    dh,0x92
  411751:	or     eax,0x80c00396
  411756:	dec    edi
  411757:	sub    bh,BYTE PTR [esi+0x4fe1c991]
  41175d:	std    
  41175e:	jmp    0x521d:0xb49dba79
  411765:	mov    DWORD PTR [esi-0x6d847545],edx
  41176b:	hlt    
  41176c:	cmp    al,0x3a
  41176e:	adc    bl,BYTE PTR [ebx+0x75]
  411771:	xor    al,0x60
  411773:	adc    BYTE PTR fs:[ebx+0x2d],dh
  411777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411778:	mov    ?,WORD PTR [ebx+0x7c]
  41177b:	(bad)  
  41177c:	fmul   st(3),st
  41177e:	inc    eax
  41177f:	pop    edi
  411780:	das    
  411781:	out    0xec,eax
  411783:	xor    al,BYTE PTR [edx]
  411785:	mov    ah,BYTE PTR [ebx-0xaf6d788]
  41178b:	mov    ebp,0x56fb6472
  411790:	sub    BYTE PTR [ebx+0x5c],cl
  411793:	retf   
  411794:	dec    edi
  411795:	call   0x9550ce30
  41179a:	pop    esi
  41179b:	inc    ecx
  41179c:	cmp    DWORD PTR [eax],edx
  41179e:	aam    0xb6
  4117a0:	sar    DWORD PTR [ebx+edx*2],0x83
  4117a4:	jecxz  0x411787
  4117a6:	maxps  xmm2,XMMWORD PTR [edi+0x3]
  4117aa:	push   ecx
  4117ab:	stc    
  4117ac:	stos   BYTE PTR es:[edi],al
  4117ad:	pop    esi
  4117ae:	iret   
  4117af:	sbb    BYTE PTR [ebp+ecx*4+0x4ce56d1d],dl
  4117b6:	arpl   WORD PTR cs:[edi],cx
  4117b9:	jmp    0xd5e1:0xe27b1311
  4117c0:	outs   dx,DWORD PTR ds:[esi]
  4117c1:	dec    ebp
  4117c2:	test   ecx,0x5980bbad
  4117c8:	cdq    
  4117c9:	inc    eax
  4117ca:	addr16 push ecx
  4117cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cd:	stc    
  4117ce:	leave  
  4117cf:	(bad)  
  4117d1:	xchg   edx,eax
  4117d2:	jo     0x4117cc
  4117d4:	jne    0x4117fb
  4117d6:	xchg   esp,eax
  4117d7:	out    0x63,al
  4117d9:	and    al,0xb6
  4117db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117dc:	pop    eax
  4117dd:	sub    DWORD PTR [edi-0x22669d4a],ecx
  4117e3:	dec    edi
  4117e4:	test   eax,0x5de455db
  4117e9:	jge    0x411800
  4117eb:	add    eax,0xdc97d079
  4117f0:	sbb    DWORD PTR [eax],ebx
  4117f2:	icebp  
  4117f3:	ret    
  4117f4:	sbb    BYTE PTR [esi+ebx*4+0x6f],0xd4
  4117f9:	push   edi
  4117fa:	mov    dh,0xc7
  4117fc:	add    BYTE PTR [ebp+0x74],cl
  4117ff:	je     0x411811
  411801:	call   0x5002:0x886dc8da
  411808:	cmp    BYTE PTR [edi],0x52
  41180b:	jbe    0x4117d3
  41180d:	(bad)
  411810:	(bad)  
  411811:	cmc    
  411812:	adc    DWORD PTR [bx+si-0x7c37],ecx
  411817:	sbb    BYTE PTR [ecx-0x80],bh
  41181a:	imul   ebx,DWORD PTR [edx],0x67
  41181d:	jp     0x41183d
  41181f:	xchg   ecx,eax
  411820:	(bad)  
  411821:	aaa    
  411822:	cmp    dh,BYTE PTR [ebx+0x64f71f32]
  411828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411829:	jbe    0x41183d
  41182b:	jne    0x4117f8
  41182d:	cmp    eax,0x39023827
  411832:	add    eax,0x97fb3539
  411837:	mov    edi,0x3750b72d
  41183c:	adc    dl,BYTE PTR [esi+edi*8]
  41183f:	je     0x4117fc
  411841:	dec    ebp
  411842:	arpl   WORD PTR [ecx],di
  411844:	out    dx,eax
  411845:	loop   0x4118b6
  411847:	push   ecx
  411848:	sahf   
  411849:	sbb    BYTE PTR [edx-0x6],bl
  41184c:	ds pop ebp
  41184e:	mov    ebp,0x1f114233
  411853:	mov    edi,0x9a264fc4
  411858:	jae    0x411884
  41185a:	mov    di,0x2b32
  41185e:	mov    ds:0xf40f86f9,eax
  411863:	pop    ebp
  411864:	lods   al,BYTE PTR ds:[esi]
  411865:	sbb    esp,DWORD PTR [edi+0x77]
  411868:	cmp    eax,0xb0385879
  41186d:	sub    dl,cl
  41186f:	arpl   WORD PTR [eax],bp
  411871:	jmp    0x4118d5
  411873:	jae    0x4118e5
  411875:	xor    eax,0xd95f050e
  41187a:	in     eax,0xf3
  41187c:	jns    0x41187e
  41187e:	fld    DWORD PTR [ecx-0xdb06e96]
  411884:	push   ds
  411885:	aad    0x59
  411887:	inc    esp
  411888:	loopne 0x411909
  41188a:	(bad)
  41188f:	pusha  
  411890:	cli    
  411891:	jbe    0x411896
  411893:	stc    
  411894:	arpl   WORD PTR [ecx+0x974863a],ax
  41189a:	sub    eax,ebp
  41189c:	mov    bl,0x6a
  41189e:	inc    eax
  41189f:	jle    0x4118ee
  4118a1:	cld    
  4118a2:	test   eax,0x59f7cb0e
  4118a7:	jno    0x411835
  4118a9:	mov    dl,0x2f
  4118ab:	mov    edi,0xe91ab2b1
  4118b0:	lock mov ebp,0x54561b91
  4118b6:	sub    BYTE PTR [edx+0x1d6936bb],dh
  4118bc:	jmp    0x8c61:0x669d1f8e
  4118c3:	call   0x3391:0xf61bfbc1
  4118ca:	mov    al,ds:0xcc278269
  4118cf:	(bad)  
  4118d0:	(bad)  
  4118d2:	loope  0x4118b8
  4118d4:	jo     0x411885
  4118d6:	jo     0x4118ff
  4118d8:	adc    al,0x8b
  4118da:	jle    0x4118f8
  4118dc:	in     eax,0xdf
  4118de:	or     BYTE PTR es:[ecx],0x5e
  4118e2:	out    0x22,eax
  4118e4:	and    al,0x3
  4118e6:	jns    0x4118ed
  4118e8:	xchg   esp,eax
  4118e9:	cmp    BYTE PTR [ebx+ebp*4-0x4addd745],0xf0
  4118f1:	mov    ebx,0x68a841ee
  4118f6:	jl     0x411920
  4118f8:	cmp    DWORD PTR [eax],eax
  4118fa:	pusha  
  4118fb:	gs dec edx
  4118fd:	and    eax,0x708f6594
  411902:	cmp    al,0xd6
  411904:	aaa    
  411905:	jp     0x411955
  411907:	mov    al,0x90
  411909:	fldenv [edi]
  41190b:	pop    esi
  41190c:	push   edi
  41190d:	or     al,0x2b
  41190f:	mov    esp,DWORD PTR [ebp+0x50]
  411912:	xchg   ebx,eax
  411913:	nop
  411914:	mov    ebx,0xb2ac51ad
  411919:	push   ds
  41191a:	jle    0x4118a9
  41191c:	or     al,BYTE PTR [edx]
  41191e:	sbb    BYTE PTR [edi-0x35],ah
  411921:	pop    ss
  411922:	rol    ecx,0x74
  411925:	mov    dl,0xd9
  411927:	fcomp  DWORD PTR [ebp-0x10]
  41192a:	or     eax,0x1ac7080e
  41192f:	ficom  WORD PTR [eax+esi*1]
  411932:	pop    edx
  411933:	or     eax,0x1d4ad484
  411938:	adc    ebx,edi
  41193a:	mov    BYTE PTR [edi],cl
  41193c:	pop    ds
  41193d:	div    BYTE PTR [ebx]
  41193f:	mov    esp,0xea12dd0d
  411944:	scas   al,BYTE PTR es:[edi]
  411945:	jmp    0xf39d514f
  41194a:	adc    al,0xd0
  41194c:	sti    
  41194d:	or     cl,al
  41194f:	adc    eax,0xdbd97fa5
  411954:	ret    
  411955:	aaa    
  411956:	inc    eax
  411957:	fadd   DWORD PTR [ebp-0x479bd6d2]
  41195d:	cwde   
  41195e:	and    ch,al
  411960:	dec    eax
  411961:	in     eax,dx
  411962:	(bad)  
  411963:	ss pop edx
  411965:	xor    BYTE PTR [edx],ah
  411967:	adc    DWORD PTR [edx],eax
  411969:	xchg   ecx,eax
  41196a:	dec    edi
  41196b:	std    
  41196c:	and    bl,0x23
  41196f:	push   edx
  411970:	out    dx,eax
  411971:	jl     0x4119cb
  411973:	mov    esi,0xb1a37ea0
  411978:	jmp    0xf2bf115
  41197d:	mov    ebx,ecx
  41197f:	das    
  411980:	cld    
  411981:	rcr    DWORD PTR [edi+0x7c05497b],0x8b
  411988:	and    BYTE PTR [esi+0x2b2b3f85],bl
  41198e:	push   ss
  41198f:	mov    ds:0x7c6933d1,eax
  411994:	or     ecx,esi
  411996:	jle    0x411986
  411998:	icebp  
  411999:	jne    0x41194f
  41199b:	sti    
  41199c:	sub    al,BYTE PTR [edi-0x4df5dabc]
  4119a2:	inc    ecx
  4119a3:	jp     0x4119fc
  4119a5:	loope  0x411947
  4119a7:	pop    esp
  4119a8:	lods   eax,DWORD PTR ds:[esi]
  4119a9:	cmp    BYTE PTR [ebx-0x4b2ce3d8],0xbb
  4119b0:	and    DWORD PTR [esi-0xe1dc9b3],0x18
  4119b7:	arpl   WORD PTR [edi+0x5dddf4c7],cx
  4119bd:	sahf   
  4119be:	mov    BYTE PTR [ebx+0x2a8c967f],al
  4119c4:	ror    BYTE PTR [edi],0x21
  4119c7:	in     eax,dx
  4119c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119c9:	sub    DWORD PTR [ecx],ecx
  4119cb:	adc    dh,ch
  4119cd:	cmc    
  4119ce:	(bad)  
  4119cf:	fisttp DWORD PTR [ebp+eiz*8-0x14]
  4119d3:	ret    
  4119d4:	stc    
  4119d5:	pop    ds
  4119d6:	or     ebx,esi
  4119d8:	and    dl,0x10
  4119db:	lods   eax,DWORD PTR ds:[esi]
  4119dc:	xchg   ebx,eax
  4119dd:	lahf   
  4119de:	in     al,dx
  4119df:	lahf   
  4119e0:	outs   dx,DWORD PTR ds:[esi]
  4119e1:	cmc    
  4119e2:	jg     0x4119a4
  4119e4:	in     eax,0x5f
  4119e6:	push   esp
  4119e7:	int3   
  4119e8:	bound  eax,QWORD PTR [edi+0x73]
  4119eb:	out    0x2b,eax
  4119ed:	sub    al,0xcf
  4119ef:	fimul  WORD PTR [eax]
  4119f1:	dec    esp
  4119f2:	scas   eax,DWORD PTR es:[edi]
  4119f3:	shr    bh,cl
  4119f5:	or     DWORD PTR [edx+ebx*8+0x60],0x3041cbed
  4119fd:	call   FWORD PTR [edi-0x16bfdd2c]
  411a03:	or     DWORD PTR [ebx],ecx
  411a05:	mov    edi,0x6a0da571
  411a0a:	push   ebx
  411a0b:	sar    esp,0x70
  411a0e:	add    BYTE PTR [edi+edi*8+0xe],dl
  411a12:	repz inc edi
  411a14:	xchg   esp,eax
  411a15:	(bad)  
  411a16:	jb     0x411a2d
  411a18:	or     dl,bl
  411a1a:	hlt    
  411a1b:	imul   edi,DWORD PTR [ebp+0x1adcca13],0x144c924a
  411a25:	in     al,dx
  411a26:	push   es
  411a27:	mov    dl,0xac
  411a29:	call   0x110c:0x9a5915ef
  411a30:	push   esp
  411a31:	in     eax,0xc1
  411a33:	out    dx,al
  411a34:	lea    edi,ds:0xe1b9e909
  411a3a:	push   eax
  411a3b:	je     0x411a4b
  411a3d:	mov    ecx,0xebb5a516
  411a42:	and    al,0xd1
  411a44:	xchg   edx,eax
  411a45:	sub    ecx,DWORD PTR [esi]
  411a47:	mov    esi,0xf0c93ad5
  411a4c:	mov    ds,WORD PTR [ebx]
  411a4e:	or     BYTE PTR [esi-0x24],0x71
  411a52:	je     0x411a3a
  411a54:	cli    
  411a55:	cs ret 
  411a57:	imul   edi,DWORD PTR [esi],0xffffff88
  411a5a:	sub    esp,DWORD PTR [ebp+0x3bd160ca]
  411a60:	fidiv  WORD PTR [eax]
  411a62:	pop    es
  411a63:	(bad)  
  411a64:	js     0x411ad8
  411a66:	pop    ebx
  411a67:	sub    al,0xb0
  411a69:	push   ss
  411a6a:	inc    ebx
  411a6b:	call   0x36de:0xe8546c5d
  411a72:	jge    0x411ace
  411a74:	and    bl,bl
  411a76:	xor    DWORD PTR [ebx+0x42],esp
  411a79:	push   edx
  411a7a:	xchg   edi,eax
  411a7b:	push   eax
  411a7c:	push   cs
  411a7d:	mov    edx,0xedab7698
  411a82:	or     BYTE PTR [esi],al
  411a84:	jecxz  0x411abf
  411a86:	out    0x54,eax
  411a88:	jno    0x411a93
  411a8a:	xchg   edx,eax
  411a8b:	dec    ebx
  411a8c:	push   es
  411a8d:	jmp    0x24:0xedba8730
  411a94:	xchg   esi,eax
  411a95:	aad    0xa3
  411a97:	push   ebp
  411a98:	pop    ss
  411a99:	aaa    
  411a9a:	js     0x411a9e
  411a9c:	imul   edx,DWORD PTR [ebx],0x35
  411a9f:	mov    dh,0x32
  411aa1:	xchg   ebx,eax
  411aa2:	adc    ah,BYTE PTR [ebx-0x3c517d20]
  411aa8:	jg     0x411b1d
  411aaa:	xchg   DWORD PTR [ebp+0x1b3db9b5],ecx
  411ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab1:	outs   dx,BYTE PTR ds:[esi]
  411ab2:	mov    ebx,0x83983851
  411ab7:	or     ch,dl
  411ab9:	jae    0x411aea
  411abb:	dec    ebp
  411abc:	adc    al,0x9f
  411abe:	scas   al,BYTE PTR es:[edi]
  411abf:	mov    dh,0x52
  411ac1:	inc    ecx
  411ac2:	es ja  0x411a99
  411ac5:	adc    DWORD PTR [ecx-0x6a],0x28595afb
  411acc:	and    cl,dl
  411ace:	jp     0x411aec
  411ad0:	std    
  411ad1:	xor    BYTE PTR [edi+0x7cb3bab4],bh
  411ad7:	add    al,0x53
  411ad9:	dec    edx
  411ada:	rcl    BYTE PTR [ebx],0x8d
  411add:	cmp    dh,ah
  411adf:	mov    ah,0x6e
  411ae1:	fnstenv [esi-0x58182474]
  411ae7:	stos   BYTE PTR es:[edi],al
  411ae8:	sub    esp,ebp
  411aea:	cs or  eax,0x3abcbeb
  411af0:	cmp    BYTE PTR [esi-0x13],0xbd
  411af4:	dec    edi
  411af5:	jmp    0x8b230317
  411afa:	push   ebp
  411afb:	pop    edx
  411afc:	cmp    bl,ch
  411afe:	mov    edx,0x482e9ce1
  411b03:	jp     0x411b04
  411b05:	ficom  WORD PTR [ebp+0x52]
  411b08:	loop   0x411b34
  411b0a:	xor    bl,BYTE PTR [ebx]
  411b0c:	jbe    0x411ade
  411b0e:	xchg   esi,eax
  411b0f:	sbb    al,0x6
  411b11:	dec    edx
  411b12:	push   ebp
  411b13:	iret   
  411b14:	adc    eax,ebp
  411b16:	inc    edx
  411b17:	pop    esi
  411b18:	clc    
  411b19:	mov    ah,0xa8
  411b1b:	add    eax,0x45723547
  411b20:	push   ecx
  411b21:	mov    BYTE PTR [ecx+0x34],dh
  411b24:	je     0x411b2c
  411b26:	test   eax,0x68e703f7
  411b2b:	ret    0xa2b4
  411b2e:	mov    bh,0xaf
  411b30:	xchg   BYTE PTR [ebx+0x27],dl
  411b33:	(bad)  
  411b34:	jecxz  0x411b7e
  411b36:	add    esp,DWORD PTR [edi-0x71]
  411b39:	bound  edi,QWORD PTR [esi-0x7f]
  411b3c:	jne    0x411b46
  411b3e:	or     eax,0xcf52252d
  411b43:	push   esp
  411b44:	sbb    DWORD PTR [eax-0x4ec8c8af],edi
  411b4a:	and    BYTE PTR [eax-0x15],dh
  411b4d:	inc    edx
  411b4e:	rol    DWORD PTR [esi-0x64],1
  411b51:	xchg   edi,eax
  411b52:	mov    ds:0x204a3eeb,al
  411b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b58:	and    edx,ecx
  411b5a:	push   0xffffff85
  411b5c:	pop    edi
  411b5d:	mov    ebp,DWORD PTR ds:0xa4c02ab0
  411b63:	add    ebx,ecx
  411b65:	fwait
  411b66:	add    al,0xb6
  411b68:	mov    ds,WORD PTR fs:[ebx-0x1b]
  411b6c:	or     bl,BYTE PTR [eax+0x54]
  411b6f:	jg     0x411b56
  411b71:	sub    cl,BYTE PTR es:[bx+si-0x52]
  411b76:	retf   0x5a3f
  411b79:	mov    cs,WORD PTR [edx+eax*2-0x69a4c5ba]
  411b80:	aam    0xe4
  411b82:	pop    ecx
  411b83:	cmp    DWORD PTR ds:0xfd282999,eax
  411b89:	loopne 0x411b6f
  411b8b:	push   ecx
  411b8c:	(bad)  ds:0x8ba3b1c3
  411b92:	or     al,bl
  411b94:	cmp    cl,BYTE PTR [esi+0x4ba64eeb]
  411b9a:	xor    DWORD PTR [edi-0x44dc8a3],0x7e16515b
  411ba4:	enter  0x1a0e,0xc
  411ba8:	bound  edx,QWORD PTR [eax]
  411baa:	sbb    al,0x33
  411bac:	jmp    0x411bd0
  411bae:	add    esp,edi
  411bb0:	mov    dl,0xb
  411bb2:	mov    ds:0xbd81dfe3,al
  411bb7:	lds    esi,FWORD PTR [eax]
  411bb9:	mul    DWORD PTR [edx-0x73]
  411bbc:	sbb    eax,0x9569c98d
  411bc1:	sbb    dh,BYTE PTR ds:0xed3f6bdd
  411bc7:	ins    DWORD PTR es:[edi],dx
  411bc8:	bound  ecx,QWORD PTR [ebx]
  411bca:	jbe    0x411b53
  411bcc:	sbb    eax,DWORD PTR [edx+0x6a]
  411bcf:	mov    ds:0xfeea374a,al
  411bd4:	stos   BYTE PTR es:[edi],al
  411bd5:	ins    DWORD PTR es:[edi],dx
  411bd6:	or     al,0x56
  411bd8:	dec    ecx
  411bd9:	add    al,0x28
  411bdb:	or     cl,BYTE PTR [edi-0x71ccb081]
  411be1:	(bad)  
  411be2:	jnp    0x411baa
  411be4:	fadd   st(1),st
  411be6:	(bad)  
  411be7:	cmc    
  411be8:	mov    ch,0xb3
  411bea:	test   eax,0xa1625ec2
  411bef:	pop    ebx
  411bf0:	sub    edi,DWORD PTR [eax]
  411bf2:	icebp  
  411bf3:	add    bl,BYTE PTR [ebp+0x4b]
  411bf6:	xor    al,0xc7
  411bf8:	int3   
  411bf9:	pushf  
  411bfa:	int    0x3f
  411bfc:	or     ah,bl
  411bfe:	xor    al,0xea
  411c00:	es test eax,0x7abdbc19
  411c06:	mov    ebx,0x74750d24
  411c0b:	aam    0xd7
  411c0d:	sub    eax,0x1497059e
  411c12:	fdivr  QWORD PTR [ecx]
  411c14:	pusha  
  411c15:	pop    ds
  411c16:	push   cs
  411c17:	cmp    BYTE PTR [esi],dh
  411c19:	in     eax,dx
  411c1a:	mov    dh,0x64
  411c1c:	or     eax,edi
  411c1e:	add    DWORD PTR [edx-0x6b],ecx
  411c21:	aas    
  411c22:	jo     0x411c93
  411c24:	mov    eax,ds:0x91031b46
  411c29:	stc    
  411c2a:	or     eax,0x1d2f7bc3
  411c2f:	jns    0x411c8c
  411c31:	outs   dx,BYTE PTR ds:[esi]
  411c32:	mov    eax,0x38cec4d7
  411c37:	inc    ecx
  411c38:	sub    eax,0xdfe6d8e2
  411c3d:	jo     0x411cbd
  411c3f:	rcr    DWORD PTR [edi],0x5c
  411c42:	and    eax,0xd1d96ae4
  411c47:	sbb    al,0x76
  411c49:	add    al,0x90
  411c4b:	sbb    cl,bh
  411c4d:	sub    ebx,DWORD PTR [ebp-0x5f06490]
  411c53:	jge    0x411c15
  411c55:	lahf   
  411c56:	sahf   
  411c57:	imul   edx,edi,0xf098fa20
  411c5d:	fadd   QWORD PTR [ebx+0x6]
  411c60:	inc    esi
  411c61:	cld    
  411c62:	popa   
  411c63:	int    0x81
  411c65:	adc    ebp,DWORD PTR [ecx+0xd]
  411c68:	cli    
  411c69:	xchg   esp,eax
  411c6a:	test   eax,0x6357336c
  411c6f:	sbb    al,0x6
  411c71:	addr16 cmp eax,0x34cad911
  411c77:	retf   
  411c78:	loop   0x411c60
  411c7a:	fwait
  411c7b:	(bad)  
  411c7c:	addr16 test al,0x5f
  411c7f:	mov    esp,0x1872aeab
  411c84:	enter  0x8fe7,0x91
  411c88:	pop    ds
  411c89:	aam    0x69
  411c8b:	scas   al,BYTE PTR es:[edi]
  411c8c:	(bad)  
  411c8d:	adc    al,0xb0
  411c8f:	div    DWORD PTR [ecx]
  411c91:	clc    
  411c92:	sbb    eax,0x6fa8183e
  411c97:	or     esp,esi
  411c99:	retf   
  411c9a:	add    bh,0xa6
  411c9d:	mov    al,0xe5
  411c9f:	xchg   esi,eax
  411ca0:	sbb    eax,0x262859c7
  411ca5:	fisubr DWORD PTR [esi+0x301c0ed7]
  411cab:	pop    esp
  411cac:	shl    DWORD PTR [eax],cl
  411cae:	jns    0x411c9c
  411cb0:	mov    al,ds:0xb257b1bc
  411cb5:	fldcw  WORD PTR [esi]
  411cb7:	gs sbb al,0xe6
  411cba:	mov    al,dl
  411cbc:	jle    0x411c5a
  411cbe:	nop
  411cbf:	cmp    eax,DWORD PTR [edi+0x6f]
  411cc2:	add    ah,BYTE PTR [eax+0x76ddd2ae]
  411cc8:	in     eax,dx
  411cc9:	fcom   QWORD PTR [ebx+ecx*4]
  411ccc:	mov    esp,0x67e28cf5
  411cd1:	es adc eax,0x9ab655c8
  411cd7:	mov    dl,0xbc
  411cd9:	cmp    DWORD PTR [esi+ebx*8],edx
  411cdc:	cdq    
  411cdd:	lea    ebp,[edi]
  411cdf:	mov    bh,0x27
  411ce1:	out    0x3c,eax
  411ce3:	or     al,0x30
  411ce5:	iret   
  411ce6:	in     al,0xb3
  411ce8:	dec    eax
  411ce9:	cmp    dh,BYTE PTR [ebx-0x4904106d]
  411cef:	and    bh,BYTE PTR [eax]
  411cf1:	mov    ds:0x4140d2b0,al
  411cf6:	repz hlt 
  411cf8:	sbb    eax,0x4122dbfc
  411cfd:	lods   eax,DWORD PTR ds:[esi]
  411cfe:	pop    eax
  411cff:	(bad)  
  411d01:	inc    eax
  411d02:	aas    
  411d03:	sbb    BYTE PTR ds:[ebx-0xa6898c1],ch
  411d0a:	aad    0x8f
  411d0c:	aad    0x93
  411d0e:	in     al,0x91
  411d10:	or     ebp,esi
  411d12:	sbb    cl,cl
  411d14:	jmp    0x411cc2
  411d16:	push   cs
  411d17:	sbb    al,0x8d
  411d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1a:	das    
  411d1b:	stc    
  411d1c:	and    al,0x9f
  411d1e:	repz xlat BYTE PTR ds:[ebx]
  411d20:	pop    edi
  411d21:	jb     0x411d7b
  411d23:	in     al,dx
  411d24:	loop   0x411d91
  411d26:	data16 add al,0xfd
  411d29:	dec    eax
  411d2a:	cld    
  411d2b:	outs   dx,DWORD PTR ds:[esi]
  411d2c:	int3   
  411d2d:	and    DWORD PTR [ebx+esi*4+0x14],ecx
  411d31:	cmp    ecx,DWORD PTR [edi+0x12049f9f]
  411d37:	and    BYTE PTR fs:0x54c05675,0x4b
  411d3f:	cld    
  411d40:	xchg   esp,eax
  411d41:	xor    al,0x7
  411d43:	outs   dx,DWORD PTR ds:[esi]
  411d44:	dec    ebx
  411d45:	dec    ebp
  411d46:	and    eax,0x36bf4a71
  411d4b:	mov    ebx,0x1a30fb48
  411d50:	lock inc esi
  411d52:	push   0x5a
  411d54:	call   0xd9123e4a
  411d59:	adc    BYTE PTR [edi+0x3f59e6d3],dh
  411d5f:	(bad)  
  411d60:	stos   DWORD PTR es:[edi],eax
  411d61:	mov    WORD PTR [edi-0xd],ds
  411d64:	jmp    0x89f3:0x16289f90
  411d6b:	sub    DWORD PTR [edx+0x2a],esi
  411d6e:	xlat   BYTE PTR ds:[ebx]
  411d6f:	pop    ss
  411d70:	cs in  eax,0x13
  411d73:	jp     0x411df0
  411d75:	and    bh,al
  411d77:	and    ebp,DWORD PTR ds:[ebp-0x73]
  411d7b:	into   
  411d7c:	rol    bh,0xd5
  411d7f:	and    BYTE PTR [ebp+ecx*1+0x44],0x73
  411d84:	push   es
  411d85:	icebp  
  411d86:	add    al,BYTE PTR [ecx-0x3a]
  411d89:	inc    ecx
  411d8a:	test   eax,0xa796f3b
  411d8f:	iret   
  411d90:	out    0x2a,eax
  411d92:	inc    ebx
  411d93:	retf   0x46fa
  411d96:	or     bl,BYTE PTR [edi-0x50cc2ed9]
  411d9c:	imul   ebp,DWORD PTR [ebx+ecx*8-0x1cf0017b],0xffffff92
  411da4:	fs call 0x6b64:0x7a4544a
  411dac:	into   
  411dad:	pop    esi
  411dae:	dec    eax
  411daf:	jo     0x411d6f
  411db1:	or     BYTE PTR [esi-0x250dc65e],dl
  411db7:	pushf  
  411db8:	xlat   BYTE PTR ds:[ebx]
  411db9:	pop    ss
  411dba:	pop    ds
  411dbb:	enter  0x4c5e,0x26
  411dbf:	pop    esi
  411dc0:	frstor [eax+0x6f]
  411dc3:	dec    esp
  411dc4:	jns    0x411dbf
  411dc6:	retf   0x975e
  411dc9:	dec    esp
  411dca:	cs inc eax
  411dcc:	bound  ebp,QWORD PTR [ebp-0x51]
  411dcf:	ja     0x411df7
  411dd1:	fisubr WORD PTR [ecx]
  411dd3:	cmp    ah,BYTE PTR [edi-0x4dd90ab6]
  411dd9:	aas    
  411dda:	cmp    DWORD PTR [edx],edi
  411ddc:	pop    ebx
  411ddd:	jmp    0x68293b85
  411de2:	sbb    al,0xd1
  411de4:	ins    DWORD PTR es:[edi],dx
  411de5:	shr    DWORD PTR [eax-0x49],0xc2
  411de9:	jp     0x411db7
  411deb:	(bad)  
  411dec:	fidivr WORD PTR [ecx]
  411dee:	xchg   DWORD PTR [ecx+0x14],esp
  411df1:	imul   ecx,DWORD PTR [esi],0x6e9cbf88
  411df7:	sub    al,0xf8
  411df9:	mov    edi,0x4e4eb4cb
  411dfe:	arpl   WORD PTR [ecx-0x57ac79ee],si
  411e04:	push   0xffffffb0
  411e06:	xor    ah,bh
  411e08:	in     eax,dx
  411e09:	sar    DWORD PTR [ebx-0x6da07919],cl
  411e0f:	imul   ecx,DWORD PTR [esi+esi*4+0x360d7db7],0x4f
  411e17:	jbe    0x411e7b
  411e19:	in     eax,0x78
  411e1b:	pop    ebx
  411e1c:	rcl    DWORD PTR [esi+esi*8],cl
  411e1f:	icebp  
  411e20:	cwde   
  411e21:	hlt    
  411e22:	das    
  411e23:	dec    eax
  411e24:	or     bh,BYTE PTR [edx]
  411e26:	popa   
  411e27:	popa   
  411e28:	xchg   edx,eax
  411e29:	jge    0x411e3d
  411e2b:	(bad)  
  411e2d:	adc    al,0x60
  411e2f:	std    
  411e30:	dec    ebx
  411e31:	sub    BYTE PTR [eax+0x77],bh
  411e34:	mov    ecx,0xaaecbe83
  411e39:	inc    edi
  411e3a:	and    al,cl
  411e3c:	(bad)  
  411e3e:	cmp    BYTE PTR [ecx+0x7325701a],dh
  411e44:	push   ss
  411e45:	mov    al,ds:0xf789b1d1
  411e4a:	jecxz  0x411def
  411e4c:	jns    0x411ec0
  411e4e:	xor    DWORD PTR [ebx],ebp
  411e50:	into   
  411e51:	mov    ebp,0x10b41cc9
  411e56:	cwde   
  411e57:	jne    0x411dee
  411e59:	adc    esp,ebp
  411e5b:	lds    ecx,FWORD PTR [ebx]
  411e5d:	mov    ch,0xf4
  411e5f:	fiadd  WORD PTR [esi+0x29]
  411e62:	cli    
  411e63:	mov    eax,ds:0x1fde9e16
  411e68:	aad    0xd9
  411e6a:	mul    DWORD PTR [edi]
  411e6c:	cmp    cl,BYTE PTR [edi]
  411e6e:	dec    edx
  411e6f:	popa   
  411e70:	jmp    0x411e7e
  411e72:	cmp    dh,BYTE PTR [edx-0x5c]
  411e75:	(bad)  [ebx-0x3bfd70f3]
  411e7b:	xchg   DWORD PTR [ebx],esp
  411e7d:	pop    ds
  411e7e:	mov    al,0x52
  411e80:	push   ecx
  411e81:	dec    ebx
  411e82:	fwait
  411e83:	shr    BYTE PTR [ebx+eiz*2],0x24
  411e87:	sbb    eax,0xba7998d3
  411e8c:	pop    ebp
  411e8d:	scas   eax,DWORD PTR es:[edi]
  411e8e:	sub    BYTE PTR [esi-0x66],bh
  411e91:	fistp  DWORD PTR ds:[edx]
  411e94:	mov    edx,DWORD PTR [ecx+0x6df739fb]
  411e9a:	cmp    eax,0x519708b
  411e9f:	sbb    eax,0xb62f0efc
  411ea4:	push   esi
  411ea5:	shl    ch,0xa5
  411ea8:	pusha  
  411ea9:	test   eax,0xcd59f293
  411eae:	or     ch,BYTE PTR [esi]
  411eb0:	in     al,0x9
  411eb2:	push   esi
  411eb3:	sbb    al,0xd4
  411eb5:	mov    DWORD PTR [edx-0x4],ebp
  411eb8:	xlat   BYTE PTR ds:[ebx]
  411eb9:	sub    al,0xd6
  411ebb:	out    0x8e,eax
  411ebd:	rcl    BYTE PTR [ebx+0x1086c4bc],0x57
  411ec4:	add    edx,DWORD PTR [eax+0x47]
  411ec7:	fnsetpm(287 only) 
  411ec9:	sar    DWORD PTR [si+0x5a32],0xd5
  411ecf:	jl     0x411ed5
  411ed1:	cld    
  411ed2:	imul   edx,DWORD PTR [eax+0x6362373e],0xa5de0de8
  411edc:	ins    DWORD PTR es:[edi],dx
  411edd:	or     eax,0xa276b025
  411ee2:	call   0xead4b5f6
  411ee7:	std    
  411ee8:	inc    ecx
  411ee9:	adc    eax,0xd9d7035d
  411eee:	xor    eax,edx
  411ef0:	mov    BYTE PTR [ebp-0x19462bff],bh
  411ef6:	ins    DWORD PTR es:[edi],dx
  411ef7:	mov    dl,0x1f
  411ef9:	out    dx,al
  411efa:	xchg   DWORD PTR [esp+ecx*2-0x2a723dce],edi
  411f01:	mov    edi,ds
  411f03:	xor    edi,ebp
  411f05:	add    eax,0x147e323
  411f0a:	cwde   
  411f0b:	and    DWORD PTR [ecx-0x3c67e60b],ecx
  411f11:	into   
  411f12:	lods   al,BYTE PTR ds:[esi]
  411f13:	int3   
  411f14:	or     eax,0x115b9880
  411f1a:	sbb    ah,al
  411f1c:	cdq    
  411f1d:	pop    ebx
  411f1e:	std    
  411f1f:	push   ebp
  411f20:	pop    ecx
  411f21:	mov    al,ds:0x7a6070a6
  411f26:	sub    DWORD PTR [ebp-0x47798ce3],eax
  411f2c:	adc    DWORD PTR [edx-0x12],ecx
  411f2f:	xchg   esi,eax
  411f30:	(bad)  
  411f31:	sub    ecx,DWORD PTR [edx]
  411f33:	push   es
  411f34:	jno    0xae45d04a
  411f3a:	dec    ecx
  411f3b:	inc    esi
  411f3c:	mov    DWORD PTR [edi+0x8ff7589],eax
  411f42:	ret    0xef5f
  411f45:	fwait
  411f46:	clc    
  411f47:	xor    BYTE PTR [edi-0x7f9541bf],bl
  411f4d:	ror    BYTE PTR [ecx],0x64
  411f50:	(bad)  
  411f51:	mov    eax,0x3f63628f
  411f56:	retf   0x326c
  411f59:	cmp    BYTE PTR [ebx+0x32],dh
  411f5c:	and    edi,DWORD PTR [edi-0x41]
  411f5f:	shr    DWORD PTR [ebp+edx*1+0x644632e5],0x11
  411f67:	xor    eax,0xc00b47c1
  411f6c:	popa   
  411f6d:	mov    WORD PTR [eax+0x22],cs
  411f70:	xor    eax,0xf6c42c12
  411f75:	retf   0x4b22
  411f78:	(bad)  
  411f79:	lds    ecx,FWORD PTR [esi-0x5dad10bf]
  411f7f:	xor    eax,0x2663712f
  411f84:	jg     0x411f23
  411f86:	ficom  DWORD PTR [edi-0x28]
  411f89:	xchg   DWORD PTR [esi],esp
  411f8b:	fdivr  st(6),st
  411f8d:	hlt    
  411f8e:	jbe    0x411f6c
  411f90:	push   esp
  411f91:	add    al,0x9a
  411f93:	neg    DWORD PTR [eax+ebp*4]
  411f96:	pusha  
  411f97:	out    0xc8,al
  411f99:	out    0xa8,eax
  411f9b:	imul   ebx,eax,0x4e
  411f9e:	or     esi,DWORD PTR [ebx]
  411fa0:	and    BYTE PTR [edi],0xd5
  411fa3:	std    
  411fa4:	int3   
  411fa5:	mov    dl,BYTE PTR [eax+0x380d4ab9]
  411fab:	rol    ah,1
  411fad:	push   0x12c50aa4
  411fb2:	sub    esi,DWORD PTR [ecx]
  411fb4:	add    DWORD PTR [ebx-0xc],0x710fbe21
  411fbb:	mov    al,ds:0xd203f3e6
  411fc0:	out    dx,al
  411fc1:	mov    eax,ds:0x37159345
  411fc6:	xor    DWORD PTR [ebx-0x47898be5],ebp
  411fcc:	(bad)  [ebx]
  411fce:	mov    dh,0x14
  411fd0:	adc    bh,0xb0
  411fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fd4:	fst    QWORD PTR ds:0xcb64f3a3
  411fda:	cmp    BYTE PTR [edi+0x52],0x7e
  411fde:	int    0x2f
  411fe0:	out    dx,al
  411fe1:	rol    BYTE PTR [edx],0xff
  411fe4:	test   DWORD PTR [eax-0x6a4df49e],edi
  411fea:	pop    edi
  411feb:	cmp    ah,dl
  411fed:	lock stos DWORD PTR es:[edi],eax
  411fef:	mov    bl,BYTE PTR [edx-0x18]
  411ff2:	and    BYTE PTR [edx+0x68],bh
  411ff5:	(bad)  
  411ff6:	ins    BYTE PTR es:[edi],dx
  411ff7:	out    0x79,eax
  411ff9:	and    BYTE PTR [esi+ebx*1-0x509e1036],0xf
  412001:	inc    esi
  412002:	mov    ebp,0xa63d6b7
  412007:	mov    eax,0xc9316f82
  41200c:	mov    BYTE PTR [ebp-0x7d86461b],0xa5
  412013:	or     cl,bl
  412015:	dec    edi
  412016:	push   esp
  412017:	and    eax,0x5768d7ed
  41201c:	push   es
  41201d:	sahf   
  41201e:	dec    ebp
  41201f:	mov    ds:0x1b3ece5d,al
  412024:	popf   
  412025:	adc    al,0x91
  412027:	pop    ecx
  412028:	push   cs
  412029:	aas    
  41202a:	popf   
  41202b:	lahf   
  41202c:	stos   DWORD PTR es:[edi],eax
  41202d:	pop    edi
  41202e:	jnp    0x412088
  412030:	mov    WORD PTR [edx+0x2b],?
  412033:	cwde   
  412034:	cmp    edi,DWORD PTR [ebx-0x6e]
  412037:	sub    al,0xa
  412039:	pop    ss
  41203a:	test   DWORD PTR [edi+edx*8],edx
  41203d:	dec    ecx
  41203e:	pop    ds
  41203f:	adc    al,0x31
  412041:	imul   bh
  412043:	test   eax,0x9f0f0dc5
  412048:	jecxz  0x41201b
  41204a:	pop    esp
  41204b:	jmp    0x411fdd
  41204d:	cmp    eax,0xb4f18b4e
  412052:	les    ecx,FWORD PTR [ebp-0x2a]
  412055:	ja     0x4120a7
  412057:	xlat   BYTE PTR ds:[ebx]
  412058:	sbb    DWORD PTR [ecx-0x66],edx
  41205b:	int    0xd1
  41205d:	and    BYTE PTR [eax-0x7b],0x70
  412061:	(bad)  
  412062:	mov    esp,0x5ce5f135
  412067:	jmp    0x38fe41c9
  41206c:	xchg   esp,eax
  41206d:	cmp    al,0x2
  41206f:	dec    esp
  412070:	int3   
  412071:	add    al,0x92
  412073:	jne    0x4120d8
  412075:	sbb    ecx,DWORD PTR [edi-0x5d]
  412078:	sub    esp,DWORD PTR [eax]
  41207a:	inc    edi
  41207b:	sbb    BYTE PTR [ebp+0x21],ch
  41207e:	mov    dh,0x1f
  412080:	mov    ss,WORD PTR [ecx+eax*8-0x60b2983f]
  412087:	in     al,dx
  412088:	stc    
  412089:	repz xlat BYTE PTR ds:[ebx]
  41208b:	or     eax,eax
  41208d:	add    al,0xfd
  41208f:	mov    ecx,0x2096d87e
  412094:	icebp  
  412095:	adc    dl,BYTE PTR es:[edx]
  412098:	mov    DWORD PTR [edx+0x7fc985df],esp
  41209e:	adc    al,BYTE PTR [ebx+0x1e81d783]
  4120a4:	into   
  4120a5:	cmp    eax,0x54068032
  4120aa:	push   ss
  4120ab:	cmp    BYTE PTR [ebp+0x70],cl
  4120ae:	mov    al,ds:0x6266fb5d
  4120b3:	and    BYTE PTR [edi+0x2d],dh
  4120b6:	test   ebp,0x66456c13
  4120bc:	jg     0x4120ea
  4120be:	pop    esp
  4120bf:	push   esi
  4120c0:	ficom  WORD PTR [eax+ebp*4-0x8f89c52]
  4120c7:	cld    
  4120c8:	xchg   edx,eax
  4120c9:	mov    ebx,0x1507ee42
  4120ce:	mov    bh,0x7e
  4120d0:	pop    ebx
  4120d1:	lahf   
  4120d2:	les    ebx,FWORD PTR [esi]
  4120d4:	repz dec ecx
  4120d6:	call   0x8c19b2d9
  4120db:	push   ss
  4120dc:	fucom  st(1)
  4120de:	jge    0x412098
  4120e0:	push   esi
  4120e1:	xchg   ebx,eax
  4120e2:	mov    bl,0x3e
  4120e4:	jle    0x4120c6
  4120e6:	dec    ebp
  4120e7:	jae    0x41214b
  4120e9:	loop   0x4120b9
  4120eb:	sub    al,0x65
  4120ed:	adc    esp,DWORD PTR [esi-0x75df8e22]
  4120f3:	mov    ebp,0x4aeadde5
  4120f8:	sbb    DWORD PTR [eax],ebx
  4120fa:	in     eax,0xf0
  4120fc:	and    DWORD PTR [ebx+0x25],edx
  4120ff:	(bad)  
  412100:	loopne 0x412089
  412102:	test   al,0x47
  412104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412105:	jmp    0xa4a57192
  41210a:	dec    esp
  41210b:	ror    BYTE PTR [eax],1
  41210d:	test   eax,0x82db891
  412112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412113:	stos   BYTE PTR es:[edi],al
  412114:	xor    ebp,edi
  412116:	pop    esp
  412117:	div    esp
  412119:	xor    DWORD PTR [eax+0x5be7c196],edx
  41211f:	adc    ch,BYTE PTR [eax+edi*4]
  412122:	fwait
  412123:	add    esi,DWORD PTR [esi-0x1d]
  412126:	jmp    0xa60da075
  41212b:	xor    bh,BYTE PTR [ebx+0x9]
  41212e:	mov    bl,BYTE PTR [edi+0x2c44b0de]
  412134:	das    
  412135:	push   edi
  412136:	mov    ds:0x909c3d41,eax
  41213b:	lods   eax,DWORD PTR ds:[esi]
  41213c:	or     BYTE PTR es:[ebp+0x4e],cl
  412140:	mov    ds:0x4431d5e7,al
  412145:	push   ss
  412146:	inc    ecx
  412147:	fidivr WORD PTR [edi-0x7d]
  41214a:	xor    DWORD PTR [eax],ebp
  41214c:	leave  
  41214d:	and    eax,DWORD PTR [ebx+0x14b178af]
  412153:	les    edx,FWORD PTR [edi+0xb910389]
  412159:	xor    bl,BYTE PTR [ebx+0x48fd5ec3]
  41215f:	cld    
  412160:	sbb    al,0xc
  412162:	cmp    edx,DWORD PTR [ebx-0x39]
  412165:	jbe    0x412154
  412167:	adc    ebp,DWORD PTR [edi-0x15]
  41216a:	push   ss
  41216b:	lahf   
  41216c:	inc    edi
  41216d:	test   ecx,ebx
  41216f:	scas   al,BYTE PTR es:[edi]
  412170:	les    eax,FWORD PTR [edx-0x7bbd8f6e]
  412176:	xchg   BYTE PTR [edx],ch
  412178:	xchg   esi,eax
  412179:	mov    esp,0x341e7c4a
  41217e:	loope  0x412125
  412180:	(bad)  
  412181:	mov    WORD PTR [esi],gs
  412183:	fstp   QWORD PTR [ecx+0x6cef0fe]
  412189:	xchg   BYTE PTR [edx-0x35],cl
  41218c:	adc    DWORD PTR [edx],ebx
  41218e:	pop    ds
  41218f:	test   DWORD PTR [ebx+0x6c9d37ba],0x88d834c
  412199:	sbb    al,0xe0
  41219b:	ss jb  0x412137
  41219e:	mov    ds:0xe242b8f7,al
  4121a3:	mov    BYTE PTR ds:0x6af3f6de,al
  4121a9:	and    bl,BYTE PTR [ebx-0x57]
  4121ac:	lods   eax,DWORD PTR ds:[esi]
  4121ad:	cmp    al,0x49
  4121af:	xchg   edx,eax
  4121b0:	fs push esp
  4121b2:	(bad)  
  4121b3:	lock cwde 
  4121b5:	out    dx,al
  4121b6:	arpl   WORD PTR [ebx-0x772db9a1],bx
  4121bc:	out    dx,eax
  4121bd:	fwait
  4121be:	xor    eax,0xa3945a20
  4121c3:	mov    esp,0x81586289
  4121c8:	ror    BYTE PTR [esi-0x28d85895],0x90
  4121cf:	lods   eax,DWORD PTR ds:[esi]
  4121d0:	in     eax,dx
  4121d1:	je     0x412176
  4121d3:	int3   
  4121d4:	mov    edx,0x8484e5b9
  4121d9:	iret   
  4121da:	call   0xc33e:0xa75435
  4121e1:	dec    eax
  4121e2:	mov    al,0xb2
  4121e4:	aad    0xed
  4121e6:	add    ah,cl
  4121e8:	dec    ebp
  4121e9:	add    eax,0xaf5e5202
  4121ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ef:	into   
  4121f0:	mov    ecx,0xe3f9b0ab
  4121f5:	mov    esi,DWORD PTR [ecx-0x50]
  4121f8:	jb     0x4121d7
  4121fa:	fcmovu st,st(3)
  4121fc:	or     BYTE PTR [esi],0xff
  4121ff:	fild   WORD PTR [edi-0x66fb559a]
  412205:	pop    ds
  412206:	and    DWORD PTR [edi-0x49bd495d],0x27
  41220d:	int    0x92
  41220f:	in     al,dx
  412210:	cli    
  412211:	into   
  412212:	adc    DWORD PTR [ebx],0xa
  412215:	(bad)  
  412216:	adc    DWORD PTR ds:0x49083341,ebp
  41221c:	pop    ds
  41221d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41221e:	cmp    BYTE PTR ds:0x26ffdbc5,0x3
  412225:	outs   dx,BYTE PTR ds:[esi]
  412226:	adc    eax,0xd19feb6b
  41222b:	pop    ecx
  41222c:	and    ecx,DWORD PTR es:[ebp-0x4b]
  412230:	mov    bl,0xcc
  412232:	sbb    BYTE PTR [ebx+esi*8-0x1f4f524a],ah
  412239:	jb     0x41222f
  41223b:	fbstp  TBYTE PTR [ebx+0x54a389ff]
  412241:	mov    esi,0xeb7dc586
  412246:	xor    DWORD PTR [esp+eax*4+0x474bfdd9],edi
  41224d:	xor    edx,esi
  41224f:	inc    edi
  412250:	adc    al,0xd5
  412252:	nop    DWORD PTR [ecx]
  412255:	ficomp DWORD PTR [edx]
  412257:	push   0xffffffa4
  412259:	jmp    0x40ab:0x2258e95d
  412260:	xchg   DWORD PTR [ebx+0x49842c21],esi
  412266:	and    eax,0x7c7ac8a2
  41226b:	pop    eax
  41226c:	arpl   WORD PTR [esi+0x6d],bx
  41226f:	add    edx,edx
  412271:	pusha  
  412272:	popa   
  412273:	push   ebp
  412274:	xor    eax,0x6970ee2f
  412279:	jg     0x412227
  41227b:	add    eax,esi
  41227d:	jmp    0x2ca9:0x91c88ca0
  412284:	pop    ss
  412285:	int3   
  412286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412287:	cli    
  412288:	mov    ds:0xdc843e22,eax
  41228d:	adc    ch,BYTE PTR [esi+esi*1-0x49fe8d7a]
  412294:	push   cs
  412295:	je     0x412270
  412297:	test   BYTE PTR [esi],al
  412299:	scas   al,BYTE PTR es:[edi]
  41229a:	pop    ecx
  41229b:	push   edi
  41229c:	mov    ah,0x46
  41229e:	inc    eax
  41229f:	add    al,0x3d
  4122a1:	call   0x84f1:0x40fad45d
  4122a8:	pop    ss
  4122a9:	push   cs
  4122aa:	lahf   
  4122ab:	and    al,0x9e
  4122ad:	gs into 
  4122af:	test   eax,0x17d1297b
  4122b4:	scas   al,BYTE PTR es:[edi]
  4122b5:	imul   edi,ebp,0x9080caf4
  4122bb:	dec    esp
  4122bc:	sub    ebx,edx
  4122be:	imul   ebx,DWORD PTR [eax+0x2c75ffc5],0xffffff96
  4122c5:	adc    BYTE PTR [esi-0x19],bh
  4122c8:	push   ds
  4122c9:	dec    esi
  4122ca:	mov    bl,0xc5
  4122cc:	jbe    0x412276
  4122ce:	jmp    0x6ba8:0xd0aa85b7
  4122d5:	std    
  4122d6:	inc    edx
  4122d7:	add    al,0xbe
  4122d9:	push   ebp
  4122da:	ins    BYTE PTR es:[edi],dx
  4122db:	stc    
  4122dc:	imul   edi,DWORD PTR [ebp+0x28839aba],0xffffffe2
  4122e3:	dec    edi
  4122e4:	push   cs
  4122e5:	mov    al,0x9c
  4122e7:	jmp    0xeb4df8a6
  4122ec:	inc    ecx
  4122ed:	lods   eax,DWORD PTR ds:[esi]
  4122ee:	mov    ch,bh
  4122f0:	js     0x412333
  4122f2:	cdq    
  4122f3:	int3   
  4122f4:	int3   
  4122f5:	cmp    BYTE PTR [esi+0x57e1b430],0x69
  4122fc:	xor    esi,esi
  4122fe:	push   0xf11eb57e
  412303:	jecxz  0x4122b3
  412305:	push   0xfbda5e36
  41230a:	jae    0x4122da
  41230c:	test   BYTE PTR [edx],0x94
  41230f:	or     DWORD PTR [edx],edi
  412311:	jns    0x41238d
  412313:	cs popa 
  412315:	add    eax,0x14a07cba
  41231a:	ret    
  41231b:	loop   0x412357
  41231d:	iret   
  41231e:	(bad)  
  41231f:	inc    edi
  412320:	mov    bh,0x25
  412322:	pop    esp
  412323:	jo     0x4122aa
  412325:	mov    edx,0xac50b76
  41232a:	shl    DWORD PTR [ecx-0x4b],0xde
  41232e:	pop    esi
  41232f:	(bad)  
  412330:	adc    edx,ebx
  412332:	call   0x68d4:0xd2897d9a
  412339:	mov    ah,0xf3
  41233b:	jge    0x4122c0
  41233d:	repz (bad) 
  412340:	xchg   edx,eax
  412341:	sub    eax,0x91a94bc3
  412346:	retf   
  412347:	outs   dx,DWORD PTR ds:[esi]
  412348:	mov    bh,0xa8
  41234a:	adc    bl,BYTE PTR [ebx+0x762c67ab]
  412350:	aaa    
  412351:	nop
  412352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412353:	ins    DWORD PTR es:[edi],dx
  412354:	jnp    0x41238c
  412356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412357:	pop    ds
  412358:	xchg   BYTE PTR [edx-0x4a],cl
  41235b:	loopne 0x412353
  41235d:	xor    cl,BYTE PTR [edx*8+0x18701852]
  412364:	icebp  
  412365:	jp     0x41235c
  412367:	stc    
  412368:	sub    ebp,DWORD PTR [edx-0x54a2fd96]
  41236e:	inc    ebx
  41236f:	pop    ss
  412370:	test   eax,0xbb239ce3
  412375:	or     ebx,DWORD PTR [edi]
  412377:	out    dx,eax
  412378:	pop    ss
  412379:	sbb    BYTE PTR [ebx+ecx*2],cl
  41237c:	jns    0x412396
  41237e:	sbb    DWORD PTR [edx],esi
  412380:	stos   BYTE PTR es:[edi],al
  412381:	mov    al,0xda
  412383:	mov    edx,DWORD PTR ds:0x58e81692
  412389:	test   eax,0xfbd28777
  41238e:	cdq    
  41238f:	sti    
  412390:	xchg   BYTE PTR cs:[ebp-0x6c0edbc4],cl
  412397:	xor    al,0x43
  412399:	(bad)  
  41239a:	retf   
  41239b:	jmp    0x2d8e2612
  4123a0:	inc    ecx
  4123a1:	scas   al,BYTE PTR es:[edi]
  4123a2:	xchg   bh,bl
  4123a4:	xchg   ebx,eax
  4123a5:	lods   al,BYTE PTR ds:[esi]
  4123a6:	dec    edx
  4123a7:	mov    ebp,0x1ab90db6
  4123ac:	sbb    DWORD PTR [ebp-0x747f6e3a],0x1bf51c57
  4123b6:	xchg   BYTE PTR [ecx],al
  4123b8:	lock xchg ebx,eax
  4123ba:	push   cs
  4123bb:	and    ah,BYTE PTR [edi+0x28]
  4123be:	mov    eax,0x931b656a
  4123c3:	rcr    al,cl
  4123c5:	gs in  eax,dx
  4123c7:	arpl   WORD PTR [edi+eax*2-0x60],dx
  4123cb:	inc    esp
  4123cc:	repz mov ch,0x19
  4123cf:	mov    edx,0x4c363b86
  4123d4:	xor    al,0x59
  4123d6:	xchg   esi,eax
  4123d7:	xor    ebx,DWORD PTR [edi-0x16]
  4123da:	xchg   edx,ecx
  4123dc:	adc    bh,BYTE PTR [esi+0x6e0ed9a3]
  4123e2:	lods   eax,DWORD PTR ds:[esi]
  4123e3:	stos   BYTE PTR es:[edi],al
  4123e4:	push   eax
  4123e5:	xor    eax,0xa5f31ce9
  4123ea:	(bad)  
  4123eb:	and    cl,BYTE PTR [ecx-0x7d64ea1f]
  4123f1:	mov    dl,0x2f
  4123f3:	xchg   edx,eax
  4123f4:	aas    
  4123f5:	jne    0x4123b6
  4123f7:	or     BYTE PTR [ecx-0x47],bh
  4123fa:	or     BYTE PTR [edi-0x5e],bl
  4123fd:	in     al,0xe1
  4123ff:	sbb    eax,0x44278c23
  412404:	mov    ah,0x82
  412406:	push   ebp
  412407:	cmp    al,0xf
  412409:	dec    esi
  41240a:	sub    DWORD PTR [edx],esi
  41240c:	inc    esp
  41240d:	add    esi,DWORD PTR [ecx-0x386c3dfd]
  412413:	fwait
  412414:	dec    eax
  412415:	loope  0x412479
  412417:	or     edi,DWORD PTR [edi]
  412419:	inc    ebp
  41241a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41241b:	call   0x59fa:0xf145eb95
  412422:	jnp    0x412436
  412424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412425:	enter  0x7acd,0x3c
  412429:	jmp    0x1b3bfa46
  41242e:	add    al,0xb4
  412430:	dec    ecx
  412431:	adc    ah,cl
  412433:	pop    ss
  412434:	jge    0x41245f
  412436:	(bad)  
  412437:	(bad)  
  412438:	pop    esi
  412439:	mov    al,ds:0xc14c07a6
  41243e:	hlt    
  41243f:	ret    
  412440:	inc    ecx
  412441:	iret   
  412442:	jg     0x412479
  412444:	addr16 pop ebx
  412446:	icebp  
  412447:	jge    0x4124b5
  412449:	jecxz  0x41245d
  41244b:	sbb    eax,0x1b4e8f1b
  412450:	cdq    
  412451:	mov    edi,0x2ae94369
  412456:	sbb    ch,BYTE PTR [ecx]
  412458:	xor    BYTE PTR ds:0x626bd62a,bl
  41245e:	idiv   DWORD PTR [eax]
  412460:	mov    edx,0x129be3e0
  412465:	inc    ebx
  412466:	or     edx,DWORD PTR [eax+ecx*2+0x48]
  41246a:	test   DWORD PTR [ebx+0x3558ce30],edi
  412470:	dec    eax
  412471:	loop   0x4124ac
  412473:	adc    BYTE PTR [edi+0x7e7ca05],0x86
  41247a:	mov    ebx,0x4adf9488
  41247f:	icebp  
  412480:	mov    ch,0x30
  412482:	cld    
  412483:	mov    esp,0x3542f1f2
  412488:	sbb    BYTE PTR [edi],bh
  41248a:	sub    eax,0x9b1d5dd
  41248f:	pop    esp
  412490:	dec    esp
  412491:	pop    esp
  412492:	test   al,0x34
  412494:	and    eax,0xc89b9f67
  412499:	push   ss
  41249a:	mov    esp,0xd5a435a6
  41249f:	mov    cl,0x99
  4124a1:	out    dx,eax
  4124a2:	std    
  4124a3:	jbe    0x412513
  4124a5:	push   esi
  4124a6:	sti    
  4124a7:	jmp    0x412525
  4124a9:	or     BYTE PTR [esi+0x31],ch
  4124ac:	push   ebp
  4124ad:	addr16 int 0xbc
  4124b0:	fs sahf 
  4124b2:	jmp    0x666ac428
  4124b7:	leave  
  4124b8:	jne    0x4124cb
  4124ba:	inc    BYTE PTR [eax+0x29]
  4124bd:	dec    eax
  4124be:	cmp    edx,DWORD PTR [edx]
  4124c0:	push   ds
  4124c1:	aam    0x55
  4124c3:	imul   ebx,DWORD PTR [ebx],0x6906c4ab
  4124c9:	sub    eax,0xffffffc6
  4124cc:	jno    0x412548
  4124ce:	mov    ds:0x234f28eb,eax
  4124d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124d4:	pop    ebx
  4124d5:	cdq    
  4124d6:	retf   0x3675
  4124d9:	jno    0x412514
  4124db:	test   al,0xdd
  4124dd:	jge    0x412523
  4124df:	cwde   
  4124e0:	ret    0x63fd
  4124e3:	retf   0x761c
  4124e6:	sub    DWORD PTR [ecx-0x5c],ecx
  4124e9:	jecxz  0x412541
  4124eb:	dec    ecx
  4124ec:	imul   esp,DWORD PTR [edx+eiz*2],0x48dfde3b
  4124f3:	or     ebp,eax
  4124f5:	sahf   
  4124f6:	inc    eax
  4124f7:	pusha  
  4124f8:	popf   
  4124f9:	pop    eax
  4124fa:	cwde   
  4124fb:	xchg   esp,eax
  4124fc:	pop    esi
  4124fd:	nop
  4124fe:	mov    ebx,0xba0ecc17
  412503:	sbb    eax,0xf3f7cb36
  412508:	ret    0x4456
  41250b:	cmp    DWORD PTR [edx],edi
  41250d:	loopne 0x4124c5
  41250f:	sahf   
  412510:	call   0xa513150e
  412515:	loop   0x41252c
  412517:	test   DWORD PTR [edi-0x76],esi
  41251a:	inc    ebp
  41251b:	jmp    FWORD PTR [ebp-0x322e94a]
  412521:	sub    BYTE PTR [esi-0x6c],ch
  412524:	loope  0x412597
  412526:	pop    edx
  412527:	ret    0x2c4d
  41252a:	xchg   ebp,eax
  41252b:	mov    eax,ds:0x75df2104
  412530:	mov    bl,0x44
  412532:	daa    
  412533:	dec    eax
  412534:	push   es
  412535:	xchg   esp,eax
  412536:	in     eax,dx
  412537:	xchg   edi,eax
  412538:	int3   
  412539:	xchg   BYTE PTR [eax],dl
  41253b:	mov    DWORD PTR [edi-0x475ab963],edx
  412541:	repz fsubr QWORD PTR [ecx]
  412544:	arpl   si,dx
  412546:	outs   dx,BYTE PTR ds:[esi]
  412547:	out    0x8b,al
  412549:	xchg   esi,eax
  41254a:	(bad)  
  41254b:	call   0xe6fb2234
  412550:	sar    bh,cl
  412552:	test   esi,ecx
  412554:	stos   DWORD PTR es:[edi],eax
  412555:	or     eax,0x97144560
  41255a:	popa   
  41255b:	push   es
  41255c:	mov    esi,0x298ec7cc
  412561:	aas    
  412562:	out    0xaf,al
  412564:	pop    esp
  412565:	gs stos DWORD PTR es:[edi],eax
  412567:	cdq    
  412568:	jmp    0x1760035c
  41256d:	mov    ch,0x75
  41256f:	dec    eax
  412570:	or     esi,esi
  412572:	mov    WORD PTR [eax+0xf],?
  412575:	pop    ecx
  412576:	xchg   edx,eax
  412577:	sbb    al,0x8c
  412579:	and    eax,0x9e293593
  41257e:	sar    BYTE PTR [esp+edx*4-0x79],1
  412582:	push   cs
  412583:	das    
  412584:	sbb    BYTE PTR [ebx+ebp*8-0x46],0x18
  412589:	push   0xffffffec
  41258b:	lea    edx,[ebx+ebx*2+0x3f96ddf6]
  412592:	dec    esi
  412593:	lsl    ebx,ax
  412596:	gs in  eax,0x1
  412599:	jb     0x4125b3
  41259b:	cmp    DWORD PTR [eax],ebp
  41259d:	xchg   ebp,eax
  41259e:	add    al,BYTE PTR [ebx+esi*1]
  4125a1:	xchg   esi,eax
  4125a2:	inc    ebp
  4125a3:	push   eax
  4125a4:	pop    ss
  4125a5:	call   0x2360ac6a
  4125aa:	dec    eax
  4125ab:	mov    cl,0x3f
  4125ad:	xchg   DWORD PTR [ebx-0x5da9ce42],ebx
  4125b3:	mov    di,0x26fa
  4125b7:	div    DWORD PTR [edx]
  4125b9:	mov    dl,BYTE PTR [ebx]
  4125bb:	loopne 0x41262f
  4125bd:	mov    DWORD PTR [edx],edx
  4125bf:	jl     0x412617
  4125c1:	in     al,dx
  4125c2:	mov    DWORD PTR [eax],ecx
  4125c4:	push   0x815e732d
  4125c9:	sub    eax,0x5d72661a
  4125ce:	hlt    
  4125cf:	adc    BYTE PTR [edx+0x57fcfb02],al
  4125d5:	xchg   edi,eax
  4125d6:	adc    al,0xe7
  4125d8:	outs   dx,DWORD PTR ds:[esi]
  4125da:	fidivr WORD PTR [edx+eiz*2]
  4125dd:	xchg   edi,eax
  4125de:	dec    edi
  4125df:	fs retf 
  4125e1:	imul   esi,DWORD PTR [ebp+0x3d],0xa34bd88f
  4125e8:	mov    cl,0xeb
  4125ea:	add    eax,0xf8fb2863
  4125ef:	pushf  
  4125f0:	pushf  
  4125f1:	std    
  4125f2:	cmp    BYTE PTR [edi],dh
  4125f4:	pushf  
  4125f5:	push   edi
  4125f6:	inc    ecx
  4125f7:	jl     0x412610
  4125f9:	mov    al,0x43
  4125fb:	ja     0x41261d
  4125fd:	outs   dx,BYTE PTR ds:[esi]
  4125fe:	xchg   edx,eax
  4125ff:	pop    edx
  412600:	cwde   
  412601:	inc    ecx
  412602:	inc    ebx
  412603:	jg     0x412635
  412605:	das    
  412606:	dec    ecx
  412607:	cmp    DWORD PTR es:[ebx-0x689d549f],ebx
  41260e:	rol    BYTE PTR [edi],1
  412610:	or     edi,DWORD PTR [esi-0x58]
  412613:	sbb    dl,ch
  412615:	lahf   
  412616:	loop   0x4125ae
  412618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412619:	int    0xc
  41261b:	jns    0x41267f
  41261d:	jle    0x4125d0
  41261f:	shr    dl,cl
  412621:	pop    es
  412622:	call   0xea3f164
  412627:	ds jne 0x4125e8
  41262a:	and    ebx,DWORD PTR [ecx-0x2c]
  41262d:	mov    ebp,0xeb24436d
  412632:	icebp  
  412633:	add    eax,0x364e2b5d
  412638:	or     eax,0x34f46d91
  41263d:	test   DWORD PTR [edx-0x23],esi
  412640:	xlat   BYTE PTR ds:[ebx]
  412641:	add    eax,edx
  412643:	mov    edi,DWORD PTR [esi+edx*4-0x615154c8]
  41264a:	(bad)  
  41264b:	mov    ebx,0x803a9514
  412650:	add    al,0xf6
  412652:	push   0x18
  412654:	dec    edx
  412655:	or     ah,ch
  412657:	loopne 0x412629
  412659:	push   ds
  41265a:	loope  0x412672
  41265c:	in     al,0x4e
  41265e:	sub    esp,DWORD PTR [edx+edi*8]
  412661:	es pop ebp
  412663:	mov    bh,bl
  412665:	pop    edi
  412666:	bswap  eax
  412668:	push   ebx
  412669:	jle    0x4126d0
  41266b:	js     0x412633
  41266d:	shr    ch,cl
  41266f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412670:	xor    al,0xab
  412672:	or     edi,eax
  412674:	test   al,0x31
  412676:	or     edx,esi
  412678:	xchg   esp,eax
  412679:	mov    dh,0x66
  41267b:	pushf  
  41267c:	mov    bl,0xbb
  41267e:	mov    eax,ebx
  412680:	shl    DWORD PTR [edi-0x5f],cl
  412683:	mov    eax,ds:0x595b0389
  412688:	ja     0x412706
  41268a:	sbb    dl,BYTE PTR [esi]
  41268c:	sbb    BYTE PTR [ebx+0x574135c0],cl
  412692:	adc    DWORD PTR [edi+0x1a],ecx
  412695:	js     0x4126ed
  412697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412698:	mov    ebx,0x1868edf2
  41269d:	sub    edx,DWORD PTR [edx-0x52c4047d]
  4126a3:	xor    BYTE PTR [ebx],dh
  4126a5:	pop    edi
  4126a6:	daa    
  4126a7:	gs inc ecx
  4126a9:	sub    al,0x55
  4126ab:	imul   edi,DWORD PTR [ebp+0x4],0xffffffab
  4126af:	gs pop esi
  4126b1:	pop    ebx
  4126b2:	(bad)  
  4126b3:	lods   eax,DWORD PTR ds:[esi]
  4126b4:	pusha  
  4126b5:	dec    edi
  4126b6:	xor    DWORD PTR [ecx+0x28],edx
  4126b9:	mov    BYTE PTR [ecx-0x27],bl
  4126bc:	ds jne 0x412643
  4126bf:	xchg   edx,eax
  4126c0:	sbb    BYTE PTR [edx+ecx*4+0x4cad83a1],bh
  4126c7:	shl    DWORD PTR [edx+0x20],0xb9
  4126cb:	arpl   WORD PTR [ecx-0x4024e21a],sp
  4126d1:	cli    
  4126d2:	rcr    DWORD PTR [esp+ebx*4-0x28a9c3b7],1
  4126d9:	sbb    edx,DWORD PTR [ecx]
  4126db:	xor    al,BYTE PTR [ecx-0x78]
  4126de:	ficom  WORD PTR [edi+0x28]
  4126e1:	inc    ebp
  4126e2:	mov    dl,0x2b
  4126e4:	repnz inc ebx
  4126e6:	jb     0x41271e
  4126e8:	jmp    0x4126a4
  4126ea:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ec:	mov    ah,BYTE PTR [ecx-0x4f]
  4126ef:	out    dx,al
  4126f0:	ss iret 
  4126f2:	ja     0x4126dc
  4126f4:	mov    eax,ds:0xd7f79772
  4126f9:	call   0x7c1c:0x759e1288
  412700:	sub    DWORD PTR [esi+0x41],ecx
  412703:	retf   0x9886
  412706:	fsubrp st(2),st
  412708:	cmp    ch,BYTE PTR [eax-0x53]
  41270b:	inc    esi
  41270c:	add    eax,0x9f9678b6
  412711:	aam    0x68
  412713:	xchg   DWORD PTR [ebx-0x27],ecx
  412716:	int3   
  412717:	jo     0x4126b4
  412719:	mov    ds:0xedd128d7,al
  41271e:	or     edi,DWORD PTR [eax-0x71b4683f]
  412724:	ins    BYTE PTR es:[edi],dx
  412725:	rol    dh,1
  412727:	xchg   esp,eax
  412728:	dec    ecx
  412729:	inc    edi
  41272a:	cmp    al,0xf6
  41272c:	into   
  41272d:	mov    esi,0xbd7dcd4c
  412732:	mov    eax,ds:0xf74973cf
  412737:	frndint 
  412739:	xchg   esi,eax
  41273a:	jae    0x4127b4
  41273c:	fs xor al,0x48
  41273f:	imul   edi,DWORD PTR [ecx+0x4f],0xa09f52c
  412746:	lds    edi,FWORD PTR [edi]
  412748:	mov    cl,0x6d
  41274a:	cs or  ch,bl
  41274d:	iret   
  41274e:	cbw    
  412750:	or     al,0x5b
  412752:	xor    BYTE PTR [ebx+edi*1+0x1f],al
  412756:	xlat   BYTE PTR ds:[ebx]
  412757:	pop    eax
  412758:	pop    esp
  412759:	push   esi
  41275a:	mov    edi,0x1704324c
  41275f:	fs mov ss:0x9006f7ae,eax
  412766:	(bad)  
  412767:	pop    ecx
  412768:	jl     0x4126f9
  41276a:	mov    ah,BYTE PTR [edx-0xc]
  41276d:	xlat   BYTE PTR ds:[ebx]
  41276e:	jne    0x412747
  412770:	scas   eax,DWORD PTR es:[edi]
  412771:	mov    edx,0xb2ed6703
  412776:	mov    WORD PTR [eax],?
  412778:	ror    DWORD PTR [ebx+ebp*4-0x3f],1
  41277c:	mov    al,ds:0xaac49e9b
  412781:	mov    WORD PTR [eax],?
  412783:	ja     0x412793
  412785:	mov    ch,0x12
  412787:	add    dh,ch
  412789:	push   0xefc01819
  41278e:	repnz fstp QWORD PTR [eax+0x6afd46b8]
  412795:	call   0x2bccdc12
  41279a:	push   ds
  41279b:	je     0x4127bc
  41279d:	push   ds
  41279e:	shl    DWORD PTR [edi],0x47
  4127a1:	fimul  DWORD PTR [edx-0x2f453567]
  4127a7:	fist   DWORD PTR [esi]
  4127a9:	fs push edx
  4127ab:	mov    ds:0x1d936c0d,eax
  4127b0:	add    BYTE PTR ds:0xa7c4b2a4,0x7a
  4127b7:	arpl   WORD PTR [edx+ebp*8],sp
  4127ba:	jae    0x41276b
  4127bc:	fcomp  QWORD PTR [esi]
  4127be:	mov    ecx,0xa17f431e
  4127c3:	iret   
  4127c4:	jl     0x412775
  4127c6:	pop    es
  4127c7:	icebp  
  4127c8:	int    0x48
  4127ca:	xchg   ebx,eax
  4127cb:	push   ecx
  4127cc:	mov    edi,DWORD PTR [ebx-0x5d4943]
  4127d2:	mov    al,ds:0x9268bcd6
  4127d7:	mov    bl,0xf6
  4127d9:	inc    edx
  4127da:	mov    ebp,eax
  4127dc:	mov    esp,0x7cff1452
  4127e1:	push   ebx
  4127e2:	cmp    al,0x8b
  4127e4:	pop    ebx
  4127e5:	add    al,0x5d
  4127e7:	mov    dl,0x15
  4127e9:	mov    ah,0x3c
  4127eb:	test   DWORD PTR [ebp-0x63],edi
  4127ee:	push   0x4c
  4127f0:	pop    eax
  4127f1:	jge    0x41278f
  4127f3:	pop    eax
  4127f4:	imul   ebp,DWORD PTR [esi+0x61e65cab],0x19
  4127fb:	sub    eax,0xaa1464bf
  412800:	clc    
  412801:	pop    ecx
  412802:	nop
  412803:	adc    eax,DWORD PTR [esi+0xd899bcc]
  412809:	push   edx
  41280a:	cmc    
  41280b:	pop    ecx
  41280c:	add    ebp,esp
  41280e:	int    0xfd
  412810:	mov    ah,al
  412812:	js     0x41288f
  412814:	clc    
  412815:	je     0x412803
  412817:	mov    eax,ds:0x5fce2fb9
  41281c:	xchg   ebp,eax
  41281d:	add    dl,BYTE PTR [ebp+0x2d4a5e6a]
  412823:	dec    edi
  412824:	paddusw mm5,mm5
  412827:	mov    ss,WORD PTR [eax]
  412829:	mov    ss,WORD PTR [ebp+0x1b]
  41282c:	mov    ecx,0x5293e0de
  412831:	sbb    DWORD PTR [ebx+0x78],edi
  412834:	lds    edx,FWORD PTR [esi+0x7b7b49a1]
  41283a:	or     ecx,esi
  41283c:	(bad)  
  41283d:	ds jge 0x4128b7
  412840:	test   eax,0x34dc7845
  412845:	ds push esi
  412847:	jnp    0x4127f5
  412849:	ret    0x4164
  41284c:	push   ss
  41284d:	pop    ss
  41284e:	(bad)  
  41284f:	leave  
  412850:	and    al,0x94
  412852:	test   DWORD PTR ds:0xee60c249,0x5f932c06
  41285c:	shl    DWORD PTR [edi+0x31357209],1
  412862:	sub    DWORD PTR [edx-0x1f],0xffffffc6
  412866:	xor    DWORD PTR [edi+0x63c09d42],eax
  41286c:	mul    DWORD PTR [esp+eiz*8-0x39]
  412870:	cdq    
  412871:	jge    0x4128d6
  412873:	retf   
  412874:	mov    ds:0xfcdfa3f5,al
  412879:	push   es
  41287a:	scas   eax,DWORD PTR es:[edi]
  41287b:	movntq QWORD PTR [esi-0x3],mm3
  41287f:	and    BYTE PTR [ebp+0x4a],0x69
  412883:	aas    
  412884:	aad    0x4
  412886:	jnp    0x412845
  412888:	cmp    eax,0xad87489e
  41288d:	mov    edi,0x735cce8d
  412892:	pop    es
  412893:	js     0x4128b2
  412895:	jmp    0x412899
  412897:	in     eax,dx
  412898:	add    cl,bl
  41289a:	push   edi
  41289b:	mov    DWORD PTR [eax],edi
  41289d:	jmp    0xb3254c2f
  4128a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a3:	sbb    ch,cl
  4128a5:	xchg   ecx,eax
  4128a6:	and    dh,BYTE PTR [eax-0x4135db07]
  4128ac:	not    DWORD PTR [edi]
  4128ae:	adc    eax,0xdccb31cd
  4128b3:	test   al,0x1b
  4128b5:	hlt    
  4128b6:	lea    eax,[esi]
  4128b8:	pop    ds
  4128b9:	xchg   ebp,eax
  4128ba:	add    BYTE PTR [esi+0x48],dl
  4128bd:	addr16 call esp
  4128c0:	adc    esi,DWORD PTR [ebp+0x487c135a]
  4128c6:	xchg   esi,eax
  4128c7:	mov    edi,0x5c8a4a8b
  4128cc:	addr16 push ecx
  4128ce:	push   esp
  4128cf:	pusha  
  4128d0:	dec    ebx
  4128d1:	pop    esi
  4128d2:	stc    
  4128d3:	push   eax
  4128d4:	ss pop ss
  4128d6:	push   esi
  4128d7:	mov    al,ds:0xb49fba40
  4128dc:	add    al,0x24
  4128de:	mov    bh,0x32
  4128e0:	push   cs
  4128e1:	jle    0x4128bd
  4128e3:	mov    al,0x78
  4128e5:	int    0x35
  4128e7:	mov    ds:0xd5133cd8,al
  4128ec:	push   edx
  4128ed:	jno    0x412955
  4128ef:	add    bl,cl
  4128f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128f2:	out    dx,al
  4128f3:	std    
  4128f4:	mov    edi,0xc50358d2
  4128f9:	push   eax
  4128fa:	adc    eax,0x5dbffbee
  4128ff:	or     ch,BYTE PTR [eax+0x70]
  412902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412903:	push   eax
  412904:	lods   al,BYTE PTR es:[esi]
  412906:	pop    esi
  412907:	jns    0x41290f
  412909:	sbb    eax,0x67c78d67
  41290e:	and    BYTE PTR [ebp+0x55],dh
  412911:	popa   
  412912:	mov    WORD PTR ds:0x37003d80,?
  412918:	jo     0x412944
  41291a:	inc    esp
  41291b:	in     al,dx
  41291c:	aad    0x8b
  41291e:	push   ds
  41291f:	mov    eax,DWORD PTR [ebx]
  412921:	push   0xc6b8344
  412926:	jecxz  0x4128c5
  412928:	mov    esp,0xd2b00ee0
  41292d:	nop
  41292e:	mov    ebp,0xb729015c
  412933:	xchg   ebx,eax
  412934:	push   ds
  412935:	jae    0x4128f0
  412937:	pop    ebx
  412938:	push   ebp
  412939:	into   
  41293a:	gs xchg ecx,eax
  41293c:	pop    ss
  41293d:	loopne 0x4129b9
  41293f:	aaa    
  412940:	ds xor al,0x3f
  412943:	mov    cl,0x2e
  412945:	mov    al,0x53
  412947:	ja     0x4129b2
  412949:	daa    
  41294a:	call   0xc7108608
  41294f:	fsubr  st,st(1)
  412951:	xchg   esi,edi
  412953:	xor    esi,DWORD PTR [eax*4+0x1ffd8d35]
  41295a:	push   cs
  41295b:	es aas 
  41295d:	outs   dx,BYTE PTR ds:[esi]
  41295e:	xchg   edx,ebp
  412960:	inc    ecx
  412961:	outs   dx,DWORD PTR ds:[esi]
  412962:	inc    ebx
  412963:	cmp    ch,BYTE PTR cs:[eax+edx*1]
  412967:	pop    ecx
  412968:	scas   eax,DWORD PTR es:[edi]
  412969:	fistp  DWORD PTR [esi-0x16]
  41296c:	cmp    BYTE PTR [edx-0x30a46d20],dh
  412972:	test   al,0x91
  412974:	pop    ebx
  412975:	mov    WORD PTR [ebp-0x7],ds
  412978:	mov    dl,0xa2
  41297a:	iret   
  41297b:	add    esp,DWORD PTR [edx]
  41297d:	clc    
  41297e:	cmp    al,0xb1
  412980:	mov    edi,0x18b4b10a
  412985:	popf   
  412986:	pop    ebx
  412987:	out    dx,al
  412988:	cwde   
  412989:	scas   al,BYTE PTR es:[edi]
  41298a:	enter  0x1b1,0xaa
  41298e:	dec    ebp
  41298f:	sbb    eax,0xe923c3e8
  412994:	adc    al,dl
  412996:	enter  0xb8a6,0xa7
  41299a:	xchg   ebx,eax
  41299b:	mov    ah,0x25
  41299d:	scas   al,BYTE PTR es:[edi]
  41299e:	pop    es
  41299f:	aas    
  4129a0:	xor    bh,BYTE PTR [ebp-0x25]
  4129a3:	sti    
  4129a4:	push   edi
  4129a5:	popf   
  4129a6:	popa   
  4129a7:	loop   0x41293f
  4129a9:	or     BYTE PTR [esi+edi*2-0x6a1f3f7f],cl
  4129b0:	(bad)  [ebx]
  4129b2:	push   esi
  4129b3:	fst    DWORD PTR [eax-0x38]
  4129b6:	repz sbb DWORD PTR [esi],0xffffffba
  4129ba:	cli    
  4129bb:	test   eax,0x77c1a0de
  4129c0:	cmc    
  4129c1:	sbb    bh,BYTE PTR [ebx+0x3e]
  4129c4:	sub    BYTE PTR [edi],0xce
  4129c7:	addr16 int 0x2f
  4129ca:	sub    BYTE PTR [edi],dl
  4129cc:	xchg   ebx,eax
  4129cd:	stos   BYTE PTR es:[edi],al
  4129ce:	jmp    DWORD PTR [ebp+0x3a]
  4129d1:	add    eax,0xe88a7cba
  4129d6:	cli    
  4129d7:	test   BYTE PTR [edx-0x328c32d4],dh
  4129dd:	loop   0x41299c
  4129df:	pop    es
  4129e0:	cmp    al,0xd4
  4129e2:	scas   eax,DWORD PTR es:[edi]
  4129e3:	lahf   
  4129e4:	es fwait
  4129e6:	iret   
  4129e7:	ss sahf 
  4129e9:	push   ebx
  4129ea:	push   edi
  4129eb:	or     BYTE PTR [ebx-0x420ae6e9],dh
  4129f1:	xchg   ebp,eax
  4129f2:	and    bh,BYTE PTR [esi]
  4129f4:	jmp    0x412a24
  4129f6:	sub    ebp,DWORD PTR [ebp-0x70]
  4129f9:	push   esp
  4129fa:	sbb    dl,BYTE PTR [edi-0x66e542ad]
  412a00:	xlat   BYTE PTR ds:[ebx]
  412a01:	in     eax,dx
  412a02:	dec    eax
  412a03:	push   esp
  412a04:	imul   BYTE PTR [ecx+0x47867344]
  412a0a:	mov    bh,BYTE PTR [ecx+0x72]
  412a0d:	pop    eax
  412a0e:	aad    0x7b
  412a10:	push   es
  412a11:	enter  0x8150,0x7d
  412a15:	inc    esp
  412a16:	xchg   ecx,eax
  412a17:	pop    edi
  412a18:	ss es pop edx
  412a1b:	jmp    0xcda3:0x42ba2f0c
  412a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a23:	mov    eax,ds:0xb25a35d1
  412a28:	lock cmp al,0x9
  412a2b:	aad    0x3a
  412a2d:	mov    BYTE PTR [ebx+0x2611b5f9],bh
  412a33:	jg     0x412a3a
  412a35:	pop    edx
  412a36:	cmp    BYTE PTR [ecx],cl
  412a38:	push   cs
  412a39:	jl     0x412a73
  412a3b:	xchg   ecx,eax
  412a3c:	das    
  412a3d:	push   ds
  412a3e:	sub    al,0xe8
  412a40:	mov    eax,ds:0xd0784b73
  412a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a46:	inc    ecx
  412a47:	xor    al,ah
  412a49:	jl     0x412a14
  412a4b:	sub    ebx,0xc3264eb4
  412a51:	lds    esi,FWORD PTR [ebp+0x75]
  412a54:	fdivr  st(1),st
  412a56:	adc    DWORD PTR [ebx],ebp
  412a58:	aaa    
  412a59:	daa    
  412a5a:	(bad)  
  412a5b:	jae    0x412a86
  412a5d:	cmp    eax,DWORD PTR [ebx]
  412a5f:	mov    cl,0x39
  412a61:	push   esp
  412a62:	push   ds
  412a63:	pop    ecx
  412a64:	setns  BYTE PTR [esi]
  412a67:	arpl   WORD PTR [eax+edx*1+0x58202517],di
  412a6e:	cmp    ecx,DWORD PTR ds:0x95ab303
  412a74:	test   DWORD PTR cs:[ecx],edx
  412a77:	ds ret 0x378d
  412a7b:	cmp    eax,DWORD PTR [esi]
  412a7d:	sub    esi,DWORD PTR [esi]
  412a7f:	push   ebx
  412a80:	call   0x684a:0x2ddb4a24
  412a87:	or     eax,eax
  412a89:	cmp    cl,dh
  412a8b:	sar    BYTE PTR [edi-0x20],1
  412a8e:	cmp    eax,DWORD PTR [edx+0x6946bb5d]
  412a94:	dec    ebp
  412a95:	push   eax
  412a96:	push   0xfffffff9
  412a98:	adc    BYTE PTR [ecx+0x6],dh
  412a9b:	ins    BYTE PTR es:[edi],dx
  412a9c:	mov    ebx,0x404d4bf7
  412aa1:	sbb    edi,ebp
  412aa3:	pop    edx
  412aa4:	dec    ebp
  412aa5:	inc    ebx
  412aa6:	test   al,0x37
  412aa8:	mov    cl,0x6d
  412aaa:	popf   
  412aab:	out    0x43,eax
  412aad:	add    bh,BYTE PTR fs:[edi+0x5ed49e8f]
  412ab4:	lahf   
  412ab5:	les    esi,FWORD PTR [edx+0x91c8b01]
  412abb:	es in  eax,dx
  412abd:	sahf   
  412abe:	lahf   
  412abf:	stos   DWORD PTR es:[edi],eax
  412ac0:	daa    
  412ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ac2:	pop    ebx
  412ac3:	lock jb 0x412afd
  412ac6:	mul    ch
  412ac8:	mov    WORD PTR [eax+ebp*8+0x6c],es
  412acc:	sbb    al,0x1a
  412ace:	arpl   di,bx
  412ad0:	ja     0x412aa3
  412ad2:	mov    al,0xef
  412ad4:	(bad)  
  412ad5:	jg     0x412b55
  412ad7:	stos   BYTE PTR es:[edi],al
  412ad8:	xor    DWORD PTR [edi],eax
  412ada:	pop    edi
  412adb:	inc    edx
  412adc:	add    edi,DWORD PTR [esi]
  412ade:	push   edx
  412adf:	(bad)  
  412ae0:	mov    esi,0xd6007c14
  412ae5:	jp     0x412b05
  412ae7:	add    eax,0xcbd1d32a
  412aec:	push   esi
  412aed:	xor    DWORD PTR [ebx+0x7b],0x208393af
  412af4:	mov    edi,0xcbc37c83
  412af9:	jmp    0x9493bbf3
  412afe:	push   edx
  412aff:	and    edx,DWORD PTR [edx-0x20bee7ce]
  412b05:	imul   ecx,DWORD PTR [ecx+0x26468948],0xe99c72fc
  412b0f:	xchg   ebp,ecx
  412b11:	inc    ebx
  412b12:	adc    eax,0x1a1d83f3
  412b17:	add    esi,DWORD PTR [edx]
  412b19:	stc    
  412b1a:	addr16 pop edi
  412b1c:	pop    edi
  412b1d:	mov    cl,al
  412b1f:	cli    
  412b20:	pop    edx
  412b21:	pop    es
  412b22:	fs mov al,0x48
  412b25:	aaa    
  412b26:	mov    esp,0x17270c59
  412b2b:	mov    edx,0x749fdda0
  412b30:	add    BYTE PTR [edi+0x4c],0xa2
  412b34:	sbb    BYTE PTR [ebp-0x76],0x31
  412b38:	push   ecx
  412b39:	pop    ebp
  412b3a:	xlat   BYTE PTR ds:[ebx]
  412b3b:	inc    ebp
  412b3c:	jbe    0x412b05
  412b3e:	rcl    ah,1
  412b40:	pop    ebx
  412b41:	mov    ah,0xdb
  412b43:	cmp    dh,bl
  412b45:	ds ds mov ebp,0xbbd3ac75
  412b4c:	fild   WORD PTR [ecx]
  412b4e:	arpl   ax,dx
  412b50:	fdiv   DWORD PTR [edi-0x54449720]
  412b56:	stc    
  412b57:	mov    cl,0xa2
  412b59:	lahf   
  412b5a:	jg     0x412b5c
  412b5c:	xor    DWORD PTR [ebx-0x6360d238],esi
  412b62:	leave  
  412b63:	loope  0x412b9a
  412b65:	les    esi,FWORD PTR [ecx]
  412b67:	add    cl,dl
  412b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b6a:	dec    ecx
  412b6b:	mov    esi,0x798b1206
  412b70:	push   es
  412b71:	(bad)  [ecx]
  412b73:	test   edi,esi
  412b75:	mov    dh,0x3a
  412b77:	mov    edx,0x1dbc687f
  412b7c:	mov    ah,0x4b
  412b7e:	dec    edx
  412b7f:	lds    ebp,FWORD PTR [ebx+0x20]
  412b82:	cdq    
  412b83:	push   eax
  412b84:	out    0x63,eax
  412b86:	lock outs dx,DWORD PTR ds:[esi]
  412b88:	outs   dx,DWORD PTR ds:[esi]
  412b89:	cld    
  412b8a:	test   DWORD PTR [edx+0x26],esi
  412b8d:	adc    eax,0x4d03fd3d
  412b92:	add    ecx,DWORD PTR ss:[ebp-0x6330b445]
  412b99:	inc    eax
  412b9a:	leave  
  412b9b:	mov    BYTE PTR [eax+esi*2],dh
  412b9e:	scas   eax,DWORD PTR es:[edi]
  412b9f:	jg     0x412b49
  412ba1:	pushf  
  412ba2:	aad    0x40
  412ba4:	outs   dx,BYTE PTR ds:[esi]
  412ba5:	jns    0x412b52
  412ba7:	xchg   esp,eax
  412ba8:	push   0xb03a5d2
  412bad:	dec    esp
  412bae:	lahf   
  412baf:	mov    bh,0xc2
  412bb1:	jnp    0x412bda
  412bb3:	inc    ebx
  412bb4:	mov    DWORD PTR [eax+0x3],0x22198295
  412bbb:	in     eax,dx
  412bbc:	xchg   ecx,eax
  412bbd:	dec    esp
  412bbe:	in     al,0x8d
  412bc0:	and    dh,BYTE PTR [edi]
  412bc2:	lods   eax,DWORD PTR ds:[esi]
  412bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bc4:	push   ds
  412bc5:	sub    BYTE PTR [edx-0x1f],cl
  412bc8:	lahf   
  412bc9:	repnz pop ss
  412bcb:	ds icebp 
  412bcd:	jbe    0x412bab
  412bcf:	push   ebp
  412bd0:	and    eax,DWORD PTR [edi]
  412bd2:	shr    BYTE PTR [ecx-0x15],0x21
  412bd6:	ja     0x412bc6
  412bd8:	ficomp WORD PTR [edi]
  412bda:	bound  esp,QWORD PTR [ebx-0x66]
  412bdd:	sbb    dh,BYTE PTR [esi+0x6a2bc10b]
  412be3:	mov    BYTE PTR [edx+0x4d],al
  412be6:	cmp    ebx,DWORD PTR [ecx-0x62]
  412be9:	sub    BYTE PTR [esi-0x6efd02e4],ch
  412bef:	in     al,dx
  412bf0:	enter  0xc8f8,0x15
  412bf4:	push   cs
  412bf5:	cdq    
  412bf6:	push   ecx
  412bf7:	test   BYTE PTR ds:0x29040582,bl
  412bfd:	mov    bh,0xf4
  412bff:	(bad)  
  412c00:	addr16 xchg esi,eax
  412c02:	or     BYTE PTR [edx],ch
  412c04:	aas    
  412c05:	xchg   DWORD PTR [ebx+0x334083b9],edx
  412c0b:	adc    al,0x66
  412c0d:	repnz mov bl,0xb7
  412c10:	rol    DWORD PTR [eax],1
  412c12:	jbe    0x412c41
  412c14:	nop
  412c15:	pop    eax
  412c16:	sahf   
  412c17:	mov    ds:0xe7f9ae67,eax
  412c1c:	scas   eax,DWORD PTR es:[edi]
  412c1d:	or     al,0xdf
  412c1f:	and    esp,DWORD PTR [ebx]
  412c21:	ss dec esi
  412c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c24:	push   ds
  412c25:	inc    esi
  412c26:	clc    
  412c27:	mov    eax,0x38b7df83
  412c2c:	xchg   edi,eax
  412c2d:	mov    ebx,0x5f079ebf
  412c32:	add    BYTE PTR [ebp+0x6a310f07],cl
  412c38:	ins    BYTE PTR es:[edi],dx
  412c39:	pop    edi
  412c3a:	add    BYTE PTR [edx+0x208f33a8],bh
  412c40:	sub    BYTE PTR [ecx+0x1e],dh
  412c43:	ds int3 
  412c45:	in     eax,0xc5
  412c47:	mov    eax,ds:0x25862cf8
  412c4c:	nop
  412c4d:	outs   dx,BYTE PTR ds:[esi]
  412c4e:	inc    eax
  412c4f:	adc    edx,DWORD PTR [edx+0x2b]
  412c52:	sbb    al,0x3f
  412c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c55:	jbe    0x412c5b
  412c57:	shl    BYTE PTR [ecx-0x3d96a509],0x55
  412c5e:	cwde   
  412c5f:	cld    
  412c60:	arpl   WORD PTR [eax-0x40],cx
  412c63:	push   esp
  412c64:	daa    
  412c65:	jo     0x412bf6
  412c67:	cli    
  412c68:	xor    BYTE PTR ds:0xea7d00c,0x92
  412c6f:	je     0x412c68
  412c71:	xchg   BYTE PTR [ebx+0x1f],bh
  412c74:	add    DWORD PTR [eax+0x36],esp
  412c77:	dec    eax
  412c78:	mov    al,ds:0xaea31ef1
  412c7d:	push   ecx
  412c7e:	out    0x21,al
  412c80:	inc    ebp
  412c81:	hlt    
  412c82:	push   0xffffffb5
  412c84:	jne    0x412c4b
  412c86:	push   esi
  412c87:	sub    bl,bh
  412c89:	ins    BYTE PTR es:[edi],dx
  412c8a:	mov    al,0xb0
  412c8c:	hlt    
  412c8d:	xor    BYTE PTR [edx],ah
  412c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c90:	cmc    
  412c91:	enter  0x3a9f,0x19
  412c95:	dec    edx
  412c96:	les    ecx,FWORD PTR [ebx-0x21]
  412c99:	stos   BYTE PTR es:[edi],al
  412c9a:	push   edi
  412c9b:	retf   0x4e84
  412c9e:	aaa    
  412c9f:	fbld   TBYTE PTR [edx-0x46deb61e]
  412ca5:	dec    esp
  412ca6:	and    ah,dl
  412ca8:	test   al,0x66
  412caa:	or     BYTE PTR [edi-0xa],0x18
  412cae:	xchg   DWORD PTR [ecx-0x33],eax
  412cb1:	pop    ebp
  412cb2:	shl    dh,0x51
  412cb5:	or     al,0x2e
  412cb7:	pop    ebx
  412cb8:	cli    
  412cb9:	(bad)  
  412cba:	xlat   BYTE PTR ds:[ebx]
  412cbb:	in     al,0x91
  412cbd:	cmp    eax,0x538ebdd1
  412cc2:	inc    esp
  412cc3:	xchg   edx,eax
  412cc4:	jle    0x412ce9
  412cc6:	stos   BYTE PTR es:[edi],al
  412cc7:	daa    
  412cc8:	stos   DWORD PTR es:[edi],eax
  412cc9:	mov    ebx,0x12a4fbe2
  412cce:	or     eax,0xd6a2702c
  412cd3:	push   cs
  412cd4:	dec    ebx
  412cd5:	mov    ch,0x45
  412cd7:	mov    bh,0xb1
  412cd9:	cld    
  412cda:	mov    eax,DWORD PTR [eax]
  412cdc:	xchg   ebx,eax
  412cdd:	repz test BYTE PTR [edi-0x7f127f6e],0xa4
  412ce5:	inc    edi
  412ce6:	jp     0x412ce8
  412ce8:	jne    0x412cd3
  412cea:	inc    esp
  412ceb:	push   es
  412cec:	sub    esi,ebx
  412cee:	dec    edi
  412cef:	adc    ecx,DWORD PTR es:[edx+0x5cf1e3b]
  412cf6:	mov    ch,ah
  412cf8:	arpl   bp,sp
  412cfa:	push   ss
  412cfb:	iret   
  412cfc:	mov    ebp,0x27b60c0b
  412d01:	mov    al,ds:0xeda7aaaf
  412d06:	(bad)  
  412d07:	scas   eax,DWORD PTR es:[edi]
  412d08:	sub    edx,DWORD PTR [ebx+0x3a1ff8d5]
  412d0e:	(bad)  [eax+0x4f7cd940]
  412d14:	sbb    bl,BYTE PTR [edx+0x73]
  412d17:	adc    bl,BYTE PTR [edi-0x21]
  412d1a:	ins    DWORD PTR es:[edi],dx
  412d1b:	and    cl,BYTE PTR [ebx]
  412d1d:	pusha  
  412d1e:	rep stos BYTE PTR es:[edi],al
  412d20:	cmp    eax,0xf07c991a
  412d25:	clc    
  412d26:	aaa    
  412d27:	xadd   DWORD PTR cs:[edi+0x5a],edx
  412d2c:	cld    
  412d2d:	adc    eax,0x28b39b5b
  412d32:	mul    DWORD PTR [ebx+0x61]
  412d35:	pop    ss
  412d36:	xchg   ecx,eax
  412d37:	jmp    0x412d63
  412d39:	pop    ecx
  412d3a:	sar    ebx,cl
  412d3c:	jg     0x412d08
  412d3e:	out    dx,eax
  412d3f:	cdq    
  412d40:	fbld   TBYTE PTR [edi-0x1bf9b38a]
  412d46:	fimul  DWORD PTR [ebx-0x382e27e]
  412d4c:	repz imul ecx
  412d4f:	dec    esp
  412d50:	addr16 xchg edx,eax
  412d52:	inc    ecx
  412d53:	xor    dh,BYTE PTR [eax+0x47]
  412d56:	push   ds
  412d57:	add    al,0x69
  412d59:	cmc    
  412d5a:	mov    DWORD PTR [edi],edi
  412d5c:	inc    eax
  412d5d:	mov    bh,0x6a
  412d5f:	inc    edi
  412d60:	fisub  WORD PTR [eax+esi*4+0x4f7cee42]
  412d67:	repz jae 0x412cf0
  412d6a:	push   ebp
  412d6b:	cdq    
  412d6c:	test   edx,0xdac9d3d5
  412d72:	pop    eax
  412d73:	ror    bl,cl
  412d75:	jg     0x412d48
  412d77:	push   0x70a5fbac
  412d7c:	adc    eax,0x8c23b88f
  412d81:	xor    DWORD PTR [edi+0x6c],0x73ba22c4
  412d88:	jecxz  0x412dd0
  412d8a:	jbe    0x412d8d
  412d8c:	jge    0x412d7c
  412d8e:	stos   DWORD PTR es:[edi],eax
  412d8f:	enter  0xac27,0x2b
  412d93:	cli    
  412d94:	cmp    edi,DWORD PTR [esi+0x4fc0094f]
  412d9a:	pop    ecx
  412d9b:	lods   al,BYTE PTR ds:[esi]
  412d9c:	cli    
  412d9d:	mov    edi,0xa939ff15
  412da2:	std    
  412da3:	sahf   
  412da4:	jge    0x412d60
  412da6:	inc    eax
  412da7:	retf   0x8438
  412daa:	xchg   ecx,eax
  412dab:	hlt    
  412dac:	out    dx,al
  412dad:	cmp    dh,BYTE PTR [edx]
  412daf:	or     bl,BYTE PTR [eax+eiz*4]
  412db2:	jmp    0x1226c78e
  412db7:	out    dx,eax
  412db8:	pop    edi
  412db9:	scas   al,BYTE PTR es:[edi]
  412dba:	lock add ebx,DWORD PTR [edi-0x423f86c6]
  412dc1:	jl     0x412e04
  412dc3:	(bad)  
  412dc4:	jle    0x412dba
  412dc6:	inc    edx
  412dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc8:	sbb    dh,dh
  412dca:	fimul  DWORD PTR [esi-0x4ec3ef37]
  412dd0:	adc    eax,0xc620cdf9
  412dd5:	loopne 0x412dda
  412dd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dd8:	mov    WORD PTR [edx],cs
  412dda:	iret   
  412ddb:	rcr    bh,0xf
  412dde:	xchg   edx,eax
  412ddf:	popa   
  412de0:	cmp    BYTE PTR [esi],0x15
  412de3:	lds    edi,FWORD PTR [ebp-0x742ce6dc]
  412de9:	add    BYTE PTR [eax+0x4f],0xa1
  412ded:	js     0x412db8
  412def:	mov    cl,0xa1
  412df1:	mov    ?,WORD PTR [eax+0x10]
  412df4:	jb     0x412d9f
  412df6:	lock daa 
  412df8:	mov    dh,0x3b
  412dfa:	xor    dl,BYTE PTR [ecx+0x3b]
  412dfd:	push   es
  412dfe:	push   es
  412dff:	pop    ss
  412e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e01:	xchg   ebx,eax
  412e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e03:	(bad)  
  412e04:	nop
  412e05:	pop    ebp
  412e06:	pop    esi
  412e07:	inc    ebx
  412e08:	(bad)  
  412e09:	adc    ebx,eax
  412e0b:	add    al,0xaa
  412e0d:	fwait
  412e0e:	pop    es
  412e0f:	das    
  412e10:	xchg   ebx,eax
  412e11:	lods   eax,DWORD PTR ds:[esi]
  412e12:	sub    BYTE PTR [ecx-0x257dafa1],bh
  412e18:	mov    ch,0x55
  412e1a:	adc    eax,0x7ba1c245
  412e1f:	adc    bl,0xdd
  412e22:	rol    dh,0xe
  412e25:	mov    dl,0xf8
  412e27:	sbb    BYTE PTR [edx],0x95
  412e2a:	adc    ebx,DWORD PTR [edi-0x19]
  412e2d:	inc    ebx
  412e2e:	sub    BYTE PTR [eax-0x32],dh
  412e31:	sub    eax,0xdcf5fc53
  412e36:	pop    ds
  412e37:	push   0xfffffff8
  412e39:	inc    edi
  412e3a:	adc    esi,eax
  412e3c:	repz jle 0x412e99
  412e3f:	pushf  
  412e40:	ret    
  412e41:	push   eax
  412e42:	(bad)  
  412e43:	ins    BYTE PTR es:[edi],dx
  412e44:	gs aad 0xd5
  412e47:	mov    esi,0x2f96f661
  412e4c:	sub    eax,0xf3fccb03
  412e51:	imul   edx,DWORD PTR [edx],0xfffffff6
  412e54:	ins    DWORD PTR es:[edi],dx
  412e55:	into   
  412e56:	add    eax,0xceb39bea
  412e5b:	cwde   
  412e5c:	dec    eax
  412e5d:	push   es
  412e5e:	or     eax,0x6c6fbda6
  412e63:	and    BYTE PTR [eax-0x795a682e],al
  412e69:	add    BYTE PTR [eax-0x42],bh
  412e6c:	mov    dh,0xcd
  412e6e:	mov    ds:0x4220653f,eax
  412e73:	in     al,dx
  412e74:	lods   al,BYTE PTR ds:[esi]
  412e75:	repnz push ebp
  412e77:	cmp    BYTE PTR [edx-0x65],bl
  412e7a:	cwde   
  412e7b:	jp     0x412ef8
  412e7d:	(bad)  
  412e7e:	iret   
  412e7f:	or     BYTE PTR [esi+0x30],bh
  412e82:	and    eax,DWORD PTR ds:0xf71b1ff1
  412e88:	nop
  412e89:	in     al,0xcc
  412e8b:	arpl   WORD PTR [edx],si
  412e8d:	dec    esp
  412e8e:	stc    
  412e8f:	add    esi,esi
  412e91:	fimul  WORD PTR [ecx+0x14]
  412e94:	aad    0x31
  412e96:	ins    DWORD PTR es:[edi],dx
  412e97:	mov    al,0x38
  412e99:	inc    esp
  412e9a:	pop    esi
  412e9b:	pop    esi
  412e9c:	or     BYTE PTR [eax-0x2f],ch
  412e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea0:	xor    DWORD PTR [ebp+ebp*8+0x31],eax
  412ea4:	xchg   ebp,eax
  412ea5:	rcl    DWORD PTR [ebx-0x5c],1
  412ea8:	iret   
  412ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eaa:	sar    dl,0x8e
  412ead:	and    dl,BYTE PTR [ebx+0x71202d9d]
  412eb3:	sbb    eax,0xfc315507
  412eb8:	ret    0x12ea
  412ebb:	mov    ch,0x1e
  412ebd:	or     edi,edi
  412ebf:	fwait
  412ec0:	imul   DWORD PTR [edi-0x54]
  412ec3:	test   eax,0xea9067a1
  412ec8:	mov    esi,0xdd7ff867
  412ecd:	push   es
  412ece:	inc    edi
  412ecf:	push   ds
  412ed0:	and    ebp,DWORD PTR ds:0x2406a34b
  412ed6:	push   cs
  412ed7:	add    ebx,DWORD PTR [edi-0x13c44df9]
  412edd:	push   ebx
  412ede:	dec    edi
  412edf:	xchg   esp,eax
  412ee0:	sbb    al,0x39
  412ee2:	inc    edi
  412ee3:	js     0x412e9a
  412ee5:	icebp  
  412ee6:	cdq    
  412ee7:	inc    ebp
  412ee8:	pusha  
  412ee9:	loop   0x412e6b
  412eeb:	add    al,0x52
  412eed:	fnstsw WORD PTR [ecx+eax*4]
  412ef0:	gs push edx
  412ef2:	cmc    
  412ef3:	rcr    dl,1
  412ef5:	mov    ds:0x3edbdf8f,al
  412efa:	inc    ebp
  412efb:	mov    dl,0xae
  412efd:	lods   al,BYTE PTR ds:[esi]
  412efe:	mov    DWORD PTR [edi+0x5b],edi
  412f01:	ror    DWORD PTR [eax+0x7984c335],cl
  412f07:	cmp    DWORD PTR [ebx],ebx
  412f09:	fwait
  412f0a:	pop    ebp
  412f0b:	add    BYTE PTR [edx+0x64],dh
  412f0e:	push   eax
  412f0f:	(bad)  
  412f10:	mov    ds:0xd736c786,al
  412f15:	mov    BYTE PTR [edx-0x58],ch
  412f18:	xchg   edx,eax
  412f19:	sbb    dh,BYTE PTR [edi+ebp*2]
  412f1c:	push   DWORD PTR [eax]
  412f1e:	xchg   BYTE PTR [ecx+ebp*2],bh
  412f21:	pushf  
  412f22:	in     al,0xbf
  412f24:	mov    dh,dh
  412f26:	outs   dx,BYTE PTR ds:[esi]
  412f27:	xchg   esp,eax
  412f28:	out    0x8e,eax
  412f2a:	jmp    0x412ef8
  412f2c:	outs   dx,DWORD PTR ds:[esi]
  412f2d:	xor    edx,eax
  412f2f:	ss (bad) 
  412f31:	fdiv   DWORD PTR ds:0xe9eb7d6d
  412f37:	dec    esp
  412f38:	dec    eax
  412f39:	ds or  al,0xf9
  412f3c:	ins    DWORD PTR es:[edi],dx
  412f3d:	cs mov bl,0xd1
  412f40:	jnp    0x412f0d
  412f42:	test   eax,0x336cbdda
  412f47:	inc    ecx
  412f48:	sahf   
  412f49:	test   BYTE PTR [esi+ebp*2],dh
  412f4c:	popf   
  412f4d:	add    eax,0x66aa5b1e
  412f52:	dec    ebx
  412f53:	adc    ch,0x41
  412f56:	inc    esp
  412f57:	cmp    dl,BYTE PTR [eax-0x4e2a0765]
  412f5d:	push   ebx
  412f5e:	pop    ecx
  412f5f:	(bad)  
  412f60:	sbb    DWORD PTR [edi],ebx
  412f62:	xor    DWORD PTR [ebx+0x76],ecx
  412f65:	aaa    
  412f66:	jnp    0x412f2f
  412f68:	or     eax,0xad354ec1
  412f6d:	pop    ebp
  412f6e:	in     eax,dx
  412f6f:	repz jl 0x412f25
  412f72:	out    0x2f,eax
  412f74:	push   ds
  412f75:	out    dx,al
  412f76:	loop   0x412fb9
  412f78:	data16 bnd jl 0x412fce
  412f7c:	test   al,0x86
  412f7e:	cdq    
  412f7f:	mov    dh,0xa1
  412f81:	imul   ebp,DWORD PTR [ebp-0x74084d64],0xa0c43f1d
  412f8b:	aam    0x7d
  412f8d:	sbb    DWORD PTR [eax+0x357257e],esi
  412f93:	or     ebp,DWORD PTR [ebp-0x47]
  412f96:	sbb    BYTE PTR [esi],dl
  412f98:	aam    0xe1
  412f9a:	(bad)  
  412f9b:	push   edi
  412f9c:	jle    0x412f97
  412f9e:	cdq    
  412f9f:	or     BYTE PTR [edx],dl
  412fa1:	jno    0x412f58
  412fa3:	jo     0x412f6b
  412fa5:	dec    ebx
  412fa6:	sbb    al,0x16
  412fa8:	jg     0x412f8b
  412faa:	loopne 0x412fdd
  412fac:	gs leave 
  412fae:	out    0x98,al
  412fb0:	out    0x31,eax
  412fb2:	jno    0x412f57
  412fb4:	rcl    BYTE PTR [edx-0x453f9ab9],0x57
  412fbb:	jmp    0x782e:0xfadee7ec
  412fc2:	out    0x74,eax
  412fc4:	sbb    eax,0x18a457e7
  412fc9:	pop    ss
  412fca:	jle    0x413046
  412fcc:	push   ss
  412fcd:	lea    ecx,[eax+0x46db3b02]
  412fd3:	stos   BYTE PTR es:[edi],al
  412fd4:	mov    dl,BYTE PTR [edi+0x69]
  412fd7:	cmp    bh,BYTE PTR [eax]
  412fd9:	ins    BYTE PTR es:[edi],dx
  412fda:	test   DWORD PTR [esi-0x71fe6465],0x811857c1
  412fe4:	mov    dh,0xff
  412fe6:	xor    ah,dl
  412fe8:	retf   0xd58d
  412feb:	rcl    DWORD PTR [edx+0x6fa240a3],0xe2
  412ff2:	ins    DWORD PTR es:[edi],dx
  412ff3:	add    al,0xd3
  412ff5:	aad    0xdc
  412ff7:	rol    BYTE PTR [ebx],1
  412ff9:	nop
  412ffa:	sub    BYTE PTR ds:0xbcf71734,0x55
  413001:	sahf   
  413002:	inc    ebp
  413003:	in     eax,0x7b
  413005:	pusha  
  413006:	jecxz  0x412fab
  413008:	nop
  413009:	sbb    ch,BYTE PTR [ecx-0x2]
  41300c:	retf   0x297c
  41300f:	retf   0xe867
  413012:	jecxz  0x413016
  413014:	call   DWORD PTR [ebx]
  413016:	and    ecx,DWORD PTR [eax-0x116adc83]
  41301c:	repz setbe BYTE PTR [ecx]
  413020:	adc    al,0xa5
  413022:	xchg   edx,eax
  413023:	mov    edi,0x6037d1d3
  413028:	std    
  413029:	xchg   esp,eax
  41302a:	adc    eax,0xc1b6de51
  41302f:	ins    DWORD PTR es:[edi],dx
  413030:	dec    edi
  413031:	add    BYTE PTR [esi],bl
  413033:	mov    ?,WORD PTR [edi]
  413035:	adc    al,0x22
  413037:	repnz aad 0x58
  41303a:	mov    bh,0x27
  41303c:	xchg   DWORD PTR [ebp-0x71],ebp
  41303f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413040:	dec    edx
  413041:	push   ds
  413042:	js     0x412ffb
  413044:	sub    al,0x67
  413046:	mov    edi,DWORD PTR [ebx-0x59]
  413049:	mov    al,ds:0xc1411c64
  41304e:	test   esi,0xc5ef9a6
  413054:	lods   eax,DWORD PTR ds:[esi]
  413055:	loopne 0x4130bc
  413057:	add    ebp,edx
  413059:	sub    BYTE PTR [edx+0x3a],cl
  41305c:	sbb    DWORD PTR [esi-0x17],edi
  41305f:	(bad)  [ecx]
  413061:	dec    ecx
  413062:	daa    
  413063:	loope  0x413035
  413065:	mov    eax,ds:0x9a70f58e
  41306a:	or     BYTE PTR [edi],0x5b
  41306d:	pop    ebp
  41306e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41306f:	or     DWORD PTR [ecx-0x133fc647],edx
  413075:	cli    
  413076:	retf   0x566f
  413079:	pop    ebx
  41307a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307b:	mov    ebp,0x64451215
  413080:	retf   0x367d
  413083:	mov    esi,0x805fc8c3
  413088:	mov    dl,0xcd
  41308a:	js     0x4130b3
  41308c:	and    al,0x54
  41308e:	mov    eax,ds:0x9b90197b
  413093:	out    dx,al
  413094:	(bad)  
  413095:	fcmovu st,st(0)
  413097:	pop    edi
  413098:	mov    dh,0x32
  41309a:	cli    
  41309b:	stos   BYTE PTR es:[edi],al
  41309c:	int    0x50
  41309e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4130a0:	daa    
  4130a1:	cmp    eax,0x3f5d812e
  4130a6:	adc    DWORD PTR [ecx-0x1b],0xc7ba8c67
  4130ad:	ins    DWORD PTR es:[edi],dx
  4130ae:	pop    edi
  4130af:	jnp    0x4130bf
  4130b1:	jmp    0xa5c2778a
  4130b6:	mov    WORD PTR [esi-0x57815b95],ss
  4130bc:	pop    ecx
  4130bd:	out    dx,eax
  4130be:	sub    al,0xbf
  4130c0:	cmp    BYTE PTR [eax+0x5fd665dc],dh
  4130c6:	or     al,0x58
  4130c8:	mov    dl,BYTE PTR [edi]
  4130ca:	inc    ebp
  4130cb:	inc    ebx
  4130cc:	sbb    bl,dh
  4130ce:	fild   QWORD PTR [ecx-0x11]
  4130d1:	das    
  4130d2:	sbb    al,0xe1
  4130d4:	pop    edx
  4130d5:	out    0x35,eax
  4130d7:	jg     0x41307c
  4130d9:	jno    0x4130b8
  4130db:	push   ds
  4130dc:	mov    al,ds:0x19fc768d
  4130e1:	dec    edi
  4130e2:	inc    ecx
  4130e3:	arpl   bp,si
  4130e5:	mov    ch,BYTE PTR [ecx]
  4130e7:	aam    0x79
  4130e9:	outs   dx,BYTE PTR ds:[esi]
  4130ea:	mov    al,ds:0x92885672
  4130ef:	jnp    0x41315d
  4130f1:	adc    ecx,edi
  4130f3:	jo     0x4130e9
  4130f5:	or     dl,BYTE PTR [esi-0x5]
  4130f8:	loop   0x413141
  4130fa:	fisttp DWORD PTR [ebp-0x4d]
  4130fd:	lods   eax,DWORD PTR ds:[esi]
  4130fe:	jp     0x4130c3
  413100:	sub    BYTE PTR [ebx],dl
  413102:	and    eax,0x6d3442a2
  413107:	sbb    bh,cl
  413109:	mov    al,0xc5
  41310b:	sbb    eax,0xb2c93d5e
  413110:	jmp    0x6d09a79b
  413115:	sub    esp,DWORD PTR [ecx]
  413117:	repnz push ecx
  413119:	jno    0x413128
  41311b:	into   
  41311c:	and    eax,0x101cdaad
  413121:	mov    edi,0xa0ee0fb8
  413126:	aaa    
  413127:	add    al,0xbc
  413129:	popa   
  41312a:	psllw  mm6,QWORD PTR cs:[esi+0x5b]
  41312f:	bound  eax,QWORD PTR [edi+0x14e0a47e]
  413135:	and    ebx,DWORD PTR [eax+0x330d5780]
  41313b:	fsub   DWORD PTR [eax-0x1041b85e]
  413141:	sub    eax,0x16c073f
  413146:	push   eax
  413147:	sbb    al,0x29
  413149:	push   ecx
  41314a:	lea    ecx,[eax]
  41314c:	popa   
  41314d:	dec    esp
  41314e:	int    0x48
  413150:	jl     0x4130d2
  413152:	adc    esp,DWORD PTR [ebx]
  413154:	out    dx,eax
  413155:	jle    0x413194
  413157:	xchg   dh,bh
  413159:	push   edx
  41315a:	push   cs
  41315b:	fidivr DWORD PTR [edi-0x30]
  41315e:	or     DWORD PTR [eax+eax*1+0x6f1e9bb6],ebp
  413165:	xor    DWORD PTR [esi],ebx
  413167:	scas   eax,DWORD PTR es:[edi]
  413168:	pop    ss
  413169:	div    ecx
  41316b:	mov    ebp,0x210f97f3
  413170:	xchg   edx,eax
  413171:	fs pop ebx
  413173:	in     al,dx
  413174:	call   0x46aa:0xc3e0954a
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	aaa    
  41317d:	out    dx,al
  41317e:	push   ss
  41317f:	bound  esp,QWORD PTR [esi+0x23]
  413182:	(bad)  
  413183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413184:	jp     0x413183
  413186:	and    DWORD PTR [ebx+0x4ecb408],eax
  41318c:	dec    esi
  41318d:	xor    DWORD PTR [edx-0x57],edi
  413190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413191:	jge    0x4131de
  413193:	int3   
  413194:	xchg   esi,eax
  413195:	xor    eax,0xd927bb0
  41319a:	cmp    bh,bh
  41319c:	mov    ds:0x9aac847f,al
  4131a1:	pusha  
  4131a2:	fwait
  4131a3:	jae    0x41312f
  4131a5:	or     ebp,0x7e
  4131a8:	mov    eax,ds:0x3c5571be
  4131ad:	mov    ah,0x99
  4131af:	and    DWORD PTR [ebx+0x2e],ebp
  4131b2:	xchg   esp,eax
  4131b3:	pop    ebp
  4131b4:	into   
  4131b5:	clc    
  4131b6:	sub    ch,ch
  4131b8:	cld    
  4131b9:	cwde   
  4131ba:	repz loope 0x413235
  4131bd:	xor    eax,0x2f4c1dcd
  4131c2:	retf   0x295b
  4131c5:	int    0xb
  4131c7:	jne    0x41319d
  4131c9:	ret    0x3272
  4131cc:	lods   eax,DWORD PTR ds:[esi]
  4131cd:	xor    dl,BYTE PTR [edx+esi*4-0x6abbf28]
  4131d4:	clc    
  4131d5:	mov    esi,0xd2eaa1a
  4131da:	rcl    BYTE PTR [ebx-0x30],cl
  4131dd:	mov    DWORD PTR [esi],0xbde4bffa
  4131e3:	scas   eax,DWORD PTR es:[edi]
  4131e4:	push   0x65
  4131e6:	les    ebp,FWORD PTR [edi]
  4131e8:	ror    DWORD PTR [edi-0x20f14653],cl
  4131ee:	lods   eax,DWORD PTR ds:[esi]
  4131ef:	loope  0x4131a5
  4131f1:	mov    ebx,0x23c8a97f
  4131f6:	(bad)  
  4131f7:	jae    0x4131a5
  4131f9:	(bad)  
  4131fb:	or     edx,edx
  4131fd:	add    ebp,DWORD PTR ds:0xa7b7f4b
  413203:	sti    
  413204:	or     DWORD PTR [edi-0x429099a2],esi
  41320a:	pushf  
  41320b:	rep stos BYTE PTR es:[edi],al
  41320d:	sub    ebx,DWORD PTR [eax+0x47]
  413210:	leave  
  413211:	cdq    
  413212:	or     esi,DWORD PTR [ebx+0x40]
  413215:	or     DWORD PTR [eax],ebp
  413217:	xlat   BYTE PTR ds:[ebx]
  413218:	jle    0x4131b1
  41321a:	jl     0x413262
  41321c:	daa    
  41321d:	sar    ebx,cl
  41321f:	aaa    
  413220:	mov    ebx,fs
  413222:	fdiv   QWORD PTR [esi+0x77]
  413225:	or     ch,al
  413227:	push   ebp
  413228:	mov    al,0x78
  41322a:	and    BYTE PTR [eax+edi*2+0x5b],dh
  41322e:	jne    0x41324f
  413230:	loope  0x413200
  413232:	push   esi
  413233:	call   0x779e:0xe1d255e2
  41323a:	lods   eax,DWORD PTR ds:[esi]
  41323b:	stos   DWORD PTR es:[edi],eax
  41323c:	retf   0x72d7
  41323f:	jge    0x413200
  413241:	ret    0x17fe
  413244:	mov    eax,0xb4b36375
  413249:	das    
  41324a:	mov    ds:0xa73ecf4b,eax
  41324f:	mov    edx,0x60df2794
  413254:	inc    ebp
  413255:	lahf   
  413256:	aas    
  413257:	ins    BYTE PTR es:[edi],dx
  413258:	pop    edi
  413259:	inc    ebx
  41325a:	sub    al,0x9f
  41325c:	mov    ds:0xf72fb162,al
  413261:	and    DWORD PTR [ecx],ebx
  413263:	pop    es
  413264:	mov    ds:0x7358ee8b,eax
  413269:	xchg   ecx,eax
  41326a:	outs   dx,DWORD PTR ds:[esi]
  41326b:	or     bh,BYTE PTR [esi+0x3619e405]
  413271:	pusha  
  413272:	repz or esi,DWORD PTR fs:[eax+ebp*1]
  413277:	pop    edi
  413278:	stos   DWORD PTR es:[edi],eax
  413279:	jmp    0x15372c6a
  41327e:	mov    DWORD PTR [ebp-0x4047f88],ebx
  413284:	xor    DWORD PTR ds:0x5ae6897,esp
  41328a:	or     cl,al
  41328c:	stos   BYTE PTR es:[edi],al
  41328d:	mov    bh,0xc0
  41328f:	mov    dh,0x60
  413291:	mov    edi,0x6c59fc73
  413296:	mov    ecx,0x98c21a8e
  41329b:	mov    dl,0xb0
  41329d:	add    al,0x7c
  41329f:	retf   
  4132a0:	int3   
  4132a1:	and    al,0xd1
  4132a3:	mov    bl,0xfe
  4132a5:	mov    eax,0x4859e3b9
  4132aa:	ds (bad) 
  4132ac:	xor    BYTE PTR [esi-0x18],bl
  4132af:	sbb    eax,0x6ce0e82d
  4132b4:	sti    
  4132b5:	xchg   edi,eax
  4132b6:	and    eax,0xb3840885
  4132bb:	jns    0x413283
  4132bd:	adc    BYTE PTR [esi+esi*1+0x68],cl
  4132c1:	jo     0x4132ba
  4132c3:	or     dl,BYTE PTR [ebx-0x2976bb5c]
  4132c9:	xor    eax,0xa6244174
  4132ce:	mov    al,ds:0xdd8c23e3
  4132d3:	add    DWORD PTR [ecx],eax
  4132d5:	std    
  4132d6:	ret    0x2ce6
  4132d9:	ja     0x41332a
  4132db:	and    al,BYTE PTR [ebx-0xd]
  4132de:	mov    ch,0x7f
  4132e0:	(bad)  
  4132e1:	sbb    BYTE PTR [ebp-0x13],dl
  4132e4:	mov    eax,0x240c10b7
  4132e9:	js     0x4132be
  4132eb:	ins    BYTE PTR es:[edi],dx
  4132ec:	inc    ebp
  4132ed:	fmul   QWORD PTR [edi+esi*1]
  4132f0:	xor    esp,ebp
  4132f2:	jp     0x4132e0
  4132f4:	xchg   ebx,eax
  4132f5:	ins    DWORD PTR es:[edi],dx
  4132f6:	stos   DWORD PTR es:[edi],eax
  4132f7:	out    dx,eax
  4132f8:	or     bh,BYTE PTR [edi+eiz*1-0x14]
  4132fc:	xchg   ecx,eax
  4132fd:	push   cs
  4132fe:	jge    0x4132ce
  413300:	rol    DWORD PTR [edx+eax*4],cl
  413303:	or     eax,0xde0bd6fb
  413308:	inc    esi
  413309:	xchg   edi,esi
  41330b:	dec    esi
  41330c:	adc    esp,DWORD PTR [esi+0x72]
  41330f:	loop   0x41333b
  413311:	jno    0x413314
  413313:	gs push 0x4
  413316:	cmp    DWORD PTR [ebp+0x6848b006],ebx
  41331c:	mov    eax,0xcfd781c4
  413321:	push   esp
  413322:	xor    BYTE PTR [ebx+0x79],0xe8
  413326:	and    al,0x8b
  413328:	jnp    0x4132ad
  41332a:	cld    
  41332b:	jmp    0xc5c8:0xaec4a261
  413332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413333:	iret   
  413334:	mov    edi,0xea401b7c
  413339:	and    al,0x2b
  41333b:	dec    ecx
  41333c:	push   0xffffff94
  41333e:	pop    ds
  41333f:	bswap  ebp
  413341:	jp     0x4133ba
  413343:	and    esi,DWORD PTR [eax]
  413345:	sub    esi,edx
  413347:	mov    edi,0x5ce249e4
  41334c:	lds    ecx,FWORD PTR [edi-0xf]
  41334f:	in     eax,dx
  413350:	sbb    eax,DWORD PTR [ecx]
  413352:	retf   0x7fe5
  413355:	xor    BYTE PTR [esi-0x4025938b],al
  41335b:	dec    eax
  41335c:	cmp    BYTE PTR [edi],0xe4
  41335f:	lock gs icebp 
  413362:	lea    edx,[ebp-0xc]
  413365:	mov    ds:0x77a84ec8,eax
  41336a:	pop    ebx
  41336b:	call   0x10ee:0xe620e2bc
  413372:	xchg   esp,eax
  413373:	addr16 sbb ebx,ebp
  413376:	loopne 0x41332d
  413378:	or     DWORD PTR [eax+edi*4+0x56],edx
  41337c:	bound  ecx,QWORD PTR [edi+0x39]
  41337f:	lock jmp 0x41333f
  413382:	add    ch,bh
  413384:	mov    esp,DWORD PTR [ecx+0x313d2cf6]
  41338a:	pusha  
  41338b:	pusha  
  41338c:	or     eax,0xca58d1c
  413391:	icebp  
  413392:	aad    0x7e
  413394:	pushf  
  413395:	out    dx,eax
  413396:	pop    ebx
  413398:	add    eax,0xc23aeb7d
  41339d:	icebp  
  41339e:	shl    DWORD PTR [edi-0x5e39e4bd],cl
  4133a4:	mov    eax,0x2edc5d2d
  4133a9:	shr    edi,1
  4133ab:	ins    DWORD PTR es:[edi],dx
  4133ac:	dec    esp
  4133ad:	mov    dh,0x6f
  4133af:	mov    eax,0x71db53f6
  4133b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133b5:	cmp    DWORD PTR [ebx-0x51],ebp
  4133b8:	repnz fcom QWORD PTR [ebx+0x3e]
  4133bc:	inc    ebx
  4133bd:	loopne 0x41338c
  4133bf:	(bad)  
  4133c0:	into   
  4133c1:	xor    BYTE PTR [eax+ebp*8+0xa496052],ah
  4133c8:	(bad)  
  4133c9:	std    
  4133ca:	add    dh,bl
  4133cc:	fild   WORD PTR [edi-0x4b946598]
  4133d2:	shr    DWORD PTR [ecx-0x52f4c8b4],1
  4133d8:	push   ds
  4133d9:	xor    BYTE PTR [eax+edx*4],ah
  4133dc:	icebp  
  4133dd:	repz rol bl,cl
  4133e0:	sbb    ch,BYTE PTR [ebx+0x791a7503]
  4133e6:	jg     0x413433
  4133e8:	scas   eax,DWORD PTR es:[edi]
  4133e9:	jmp    0x546d:0xae73d338
  4133f0:	xchg   dh,al
  4133f2:	push   es
  4133f3:	iret   
  4133f4:	(bad)  
  4133f5:	dec    ebp
  4133f6:	fwait
  4133f7:	in     eax,dx
  4133f8:	pusha  
  4133f9:	jle    0x413460
  4133fb:	test   eax,0x19717d74
  413400:	and    eax,0xcfd0c8f4
  413405:	lea    edi,[edx]
  413407:	test   edx,edx
  413409:	xchg   ebx,eax
  41340a:	mov    ebx,ecx
  41340c:	loopne 0x413473
  41340e:	push   cs
  41340f:	das    
  413410:	and    bl,BYTE PTR [eax-0x41]
  413413:	rcr    BYTE PTR [esp+ecx*2-0x5aeeaab3],cl
  41341a:	xor    bl,ch
  41341c:	adc    ch,al
  41341e:	sbb    esp,DWORD PTR [ecx+0x3027e03]
  413424:	iret   
  413425:	mov    edi,0x524d063c
  41342a:	mov    ecx,0xeb6e3abe
  41342f:	push   ebp
  413430:	jecxz  0x41345f
  413432:	pop    esi
  413433:	call   0x6db12e2b
  413438:	outs   dx,BYTE PTR ds:[esi]
  413439:	jnp    0x413445
  41343b:	mov    ecx,0x8494f6c6
  413440:	mov    edi,0xed2e09ba
  413445:	rcl    edx,1
  413447:	rcr    ch,1
  413449:	out    0xe9,eax
  41344b:	xchg   edx,eax
  41344c:	call   0x907:0x20f95c0
  413453:	push   ecx
  413454:	ds dec ebp
  413456:	pop    ss
  413457:	mov    edx,0x1aa33f64
  41345c:	and    ch,BYTE PTR [edi+esi*4]
  41345f:	inc    ebx
  413460:	(bad)  
  413461:	mov    ds:0x8bde426d,eax
  413466:	inc    edx
  413467:	push   cs
  413468:	jb     0x413438
  41346a:	adc    cl,BYTE PTR [edi]
  41346c:	imul   DWORD PTR [ebp+0x66]
  41346f:	out    0xcc,eax
  413471:	push   cs
  413472:	shr    DWORD PTR [eax-0x3c],0x65
  413476:	lea    esi,[edx-0x5f2de4ed]
  41347c:	test   ch,dl
  41347e:	lea    edi,[edi+0x46]
  413481:	add    DWORD PTR [edx+eax*2],0xffffffb4
  413485:	in     eax,0xc9
  413487:	imul   edi,DWORD PTR [ecx+0x41],0x2355ee18
  41348e:	ror    BYTE PTR [ebp+0x46ea64fc],0x7d
  413495:	jmp    0xe83d:0x213889a1
  41349c:	or     ebp,edx
  41349e:	adc    eax,eax
  4134a0:	repnz loopne 0x413472
  4134a3:	jnp    0x41346c
  4134a5:	les    edi,FWORD PTR [eax+edx*2+0x984c15c]
  4134ac:	scas   eax,DWORD PTR es:[edi]
  4134ad:	in     eax,0xd4
  4134af:	jnp    0x413506
  4134b1:	retf   
  4134b2:	dec    esi
  4134b3:	sbb    ebp,ecx
  4134b5:	mov    bh,0xa0
  4134b7:	sar    DWORD PTR [edx],cl
  4134b9:	cmp    edx,DWORD PTR [edx+0x12293c44]
  4134bf:	inc    ebp
  4134c0:	pop    ebp
  4134c1:	(bad)  
  4134c2:	fbstp  TBYTE PTR [bx+0x55]
  4134c6:	sti    
  4134c7:	xchg   ebx,eax
  4134c8:	mov    ds:0x195c1462,al
  4134cd:	pop    esp
  4134ce:	js     0x413523
  4134d0:	ins    BYTE PTR es:[edi],dx
  4134d1:	mov    WORD PTR [edi],ss
  4134d3:	pop    ds
  4134d4:	loope  0x4134d8
  4134d6:	and    al,0xdd
  4134d8:	pop    ecx
  4134d9:	into   
  4134da:	lods   al,BYTE PTR ds:[esi]
  4134db:	test   DWORD PTR [ecx+eax*8],0x6bf41a4a
  4134e2:	mov    esi,0x623f979f
  4134e7:	aas    
  4134e8:	sub    ecx,ebx
  4134ea:	not    DWORD PTR [esi]
  4134ec:	lods   al,BYTE PTR ds:[esi]
  4134ed:	es cmc 
  4134ef:	sub    dl,bl
  4134f1:	mov    ?,WORD PTR [ecx-0x3ed0866]
  4134f7:	sub    al,0x57
  4134f9:	into   
  4134fa:	call   0xf864:0x360e085c
  413501:	imul   edi,DWORD PTR [ebp-0x3469ff9e],0xffffffcf
  413508:	mov    ds:0x419b57f4,eax
  41350d:	adc    eax,0xcb5a3a52
  413512:	cmp    DWORD PTR [eax-0x1e],ebp
  413515:	test   al,0x31
  413517:	cmp    DWORD PTR [edx+ecx*1+0x5a2527fd],0x14bd5c
  413522:	xchg   ecx,edi
  413524:	rcr    ah,1
  413526:	cs out 0xf5,eax
  413529:	loopne 0x413572
  41352b:	mov    cl,BYTE PTR [esi]
  41352d:	nop
  41352e:	cmp    al,0x7e
  413530:	ins    DWORD PTR es:[edi],dx
  413531:	jno    0x4134cf
  413533:	mov    edi,0x564f7c0
  413538:	jb     0x41354f
  41353a:	pop    ecx
  41353b:	inc    ebp
  41353c:	cdq    
  41353d:	xchg   ebx,eax
  41353e:	lods   al,BYTE PTR ds:[esi]
  41353f:	inc    edx
  413540:	cmp    eax,0x46027a68
  413545:	add    eax,0x8521ffd3
  41354a:	out    dx,al
  41354b:	sar    WORD PTR [ebx+0x488d2500],cl
  413552:	(bad)  
  413553:	dec    eax
  413554:	sti    
  413555:	call   0xd3eb52d2
  41355a:	bound  eax,QWORD PTR [ebx+0x50]
  41355d:	ins    BYTE PTR es:[edi],dx
  41355e:	sub    eax,0x6ce547d
  413563:	arpl   WORD PTR [edx-0x7bdb5f3c],di
  413569:	mov    ah,0xa6
  41356b:	nop
  41356c:	call   0xe4d:0xd640ecf4
  413573:	bound  esp,QWORD PTR [esi+0x69fca227]
  413579:	push   eax
  41357a:	aam    0xbc
  41357c:	mov    ecx,edx
  41357e:	mov    al,0x59
  413580:	mov    bl,0x5
  413582:	add    edi,DWORD PTR [ebp-0x2]
  413585:	sub    al,0x74
  413587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413588:	push   ecx
  413589:	mov    ch,0x4a
  41358b:	idiv   BYTE PTR [ebx-0x2270cead]
  413591:	or     al,0x4
  413593:	cmp    eax,0x7f479998
  413598:	lods   eax,DWORD PTR ds:[esi]
  413599:	push   ds
  41359a:	mov    bl,BYTE PTR [esp+ecx*1]
  41359d:	(bad)  
  41359e:	cmp    edx,edx
  4135a0:	jl     0x413575
  4135a2:	mov    bl,0xdc
  4135a4:	ss push es
  4135a6:	pop    ds
  4135a7:	popa   
  4135a8:	mov    ds:0x42869c74,al
  4135ad:	addr16 add eax,0xe3c7f784
  4135b3:	xor    eax,0x3d6d20c0
  4135b8:	fs push ebp
  4135ba:	jmp    0x25ec253c
  4135bf:	cmp    BYTE PTR [ebx-0x7d],dh
  4135c2:	fnstcw WORD PTR ds:0xc210c10a
  4135c8:	jne    0x4135cf
  4135ca:	data16 jne 0x413623
  4135cd:	mov    al,BYTE PTR [edi+0x771d8707]
  4135d3:	dec    eax
  4135d4:	xchg   ecx,eax
  4135d5:	jmp    0x5b28:0x2e81f23a
  4135dc:	gs xchg esi,eax
  4135de:	xchg   ebx,eax
  4135df:	xchg   BYTE PTR es:[esi+0x40],dl
  4135e3:	dec    ebp
  4135e4:	jmp    0x8289:0x9c1abe94
  4135eb:	shr    esp,1
  4135ed:	(bad)  
  4135ee:	mov    bh,0xa7
  4135f0:	je     0x4135a7
  4135f2:	popa   
  4135f3:	sbb    dl,BYTE PTR [eax]
  4135f5:	pop    esp
  4135f6:	and    cl,al
  4135f8:	jge    0x413643
  4135fa:	pop    ss
  4135fb:	in     eax,0xc5
  4135fd:	pop    ebp
  4135fe:	or     DWORD PTR [eax-0x4bad7f4c],eax
  413604:	sbb    al,BYTE PTR [ebp-0x33f7446]
  41360a:	or     eax,0xa2f18cb2
  41360f:	push   esi
  413610:	xchg   edi,eax
  413611:	lods   eax,DWORD PTR ds:[esi]
  413612:	out    dx,al
  413613:	or     dl,0x93
  413616:	xor    DWORD PTR [edi-0x8e08c50],ebp
  41361c:	adc    BYTE PTR ds:0xdbc072a5,0xb8
  413623:	div    BYTE PTR [ecx]
  413625:	fmul   QWORD PTR [edx-0x795248d2]
  41362b:	xchg   BYTE PTR [edx+0x11],dh
  41362e:	test   bl,0x5c
  413631:	pop    edx
  413632:	jnp    0x413665
  413634:	dec    esp
  413635:	mov    al,cl
  413637:	retf   
  413638:	add    edi,eax
  41363a:	cmp    ch,BYTE PTR [ebx+0x10]
  41363d:	jae    0x4135e8
  41363f:	out    dx,al
  413640:	lahf   
  413641:	test   BYTE PTR [ebx+0x6b],dh
  413644:	pop    ds
  413645:	jmp    0x1f550f2a
  41364a:	repz pusha 
  41364c:	pusha  
  41364d:	fdiv   QWORD PTR [ecx+eiz*2-0x5c80e18f]
  413654:	pop    esp
  413655:	push   eax
  413656:	sbb    ch,ch
  413658:	mov    cs,WORD PTR [edi-0x78]
  41365b:	mov    esi,0x966d0870
  413660:	mov    bl,0xb6
  413662:	push   edx
  413663:	jle    0x413691
  413665:	jo     0x4136af
  413667:	dec    ecx
  413668:	sbb    ebx,ebx
  41366a:	mov    DWORD PTR [esi+0x131049c5],ecx
  413670:	ins    BYTE PTR es:[edi],dx
  413671:	pop    edi
  413672:	mov    bh,0x10
  413674:	not    DWORD PTR [eax+0x1d8b1d16]
  41367a:	cmp    BYTE PTR [ebx-0x39],dh
  41367d:	rcr    BYTE PTR [eax],cl
  41367f:	mov    ecx,0xc585e25
  413684:	push   eax
  413685:	aaa    
  413686:	adc    eax,0x2db696ab
  41368b:	xchg   esp,eax
  41368c:	fimul  DWORD PTR [eax]
  41368e:	mov    eax,ds:0x296f87e3
  413693:	sar    BYTE PTR [ebx],1
  413695:	xor    eax,0x2b26d834
  41369a:	inc    ecx
  41369b:	dec    ebx
  41369c:	ja     0x413640
  41369e:	push   ebp
  41369f:	test   al,0xa5
  4136a1:	sub    bl,BYTE PTR [esi+eax*4+0x762d4326]
  4136a8:	dec    edx
  4136a9:	dec    ecx
  4136aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136ab:	fsubrp st(0),st
  4136ad:	sub    BYTE PTR [edx-0x25],0xb7
  4136b1:	jb     0x413721
  4136b3:	xlat   BYTE PTR ds:[ebx]
  4136b4:	dec    edi
  4136b5:	mov    cl,BYTE PTR [ebx]
  4136b7:	and    DWORD PTR [edx],0xffffffdc
  4136ba:	jno    0x4136f7
  4136bc:	imul   ebx,eax,0xffffffe1
  4136bf:	push   ebx
  4136c0:	push   esp
  4136c1:	push   eax
  4136c2:	int3   
  4136c3:	mov    DWORD PTR [edx-0x73cf96dc],0x6092e481
  4136cd:	lock stos DWORD PTR es:[edi],eax
  4136cf:	xchg   DWORD PTR [ecx+ecx*2-0x39fcbfee],eax
  4136d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136d7:	mov    ah,0x96
  4136d9:	outs   dx,DWORD PTR ds:[esi]
  4136da:	cs ds (bad) 
  4136dd:	gs ret 0x39a9
  4136e1:	inc    esp
  4136e2:	mov    ds:0xfae73245,al
  4136e7:	loopne 0x4136a1
  4136e9:	mov    DWORD PTR [eax],0x50166d6e
  4136ef:	sbb    esi,DWORD PTR [ecx-0x2cc96cc1]
  4136f5:	push   cs
  4136f6:	push   ebp
  4136f7:	pop    ds
  4136f8:	scas   al,BYTE PTR es:[edi]
  4136f9:	mov    ch,BYTE PTR [ebx]
  4136fb:	mov    bl,BYTE PTR [ebp+0x3c]
  4136fe:	fsub   QWORD PTR [ecx]
  413700:	inc    edx
  413701:	or     DWORD PTR [ecx+0x3bb35afb],esi
  413707:	mov    dl,0x5c
  413709:	push   esp
  41370a:	inc    ecx
  41370b:	adc    DWORD PTR [eax],0x8c44b135
  413711:	adc    al,0xed
  413713:	call   0xf12c647a
  413718:	mov    dh,0xe9
  41371a:	cdq    
  41371b:	dec    esi
  41371c:	jne    0x413741
  41371e:	retf   
  41371f:	jmp    0x4136fe
  413721:	mov    ebp,0x6ffbe794
  413726:	ins    DWORD PTR es:[edi],dx
  413727:	ret    0xf783
  41372a:	jmp    0x2930:0x8a8c1af8
  413731:	cmp    al,0xf
  413733:	cmc    
  413734:	mov    esp,DWORD PTR [ebx+0x65]
  413737:	add    dh,BYTE PTR [ebx]
  413739:	and    BYTE PTR [ebx+0x43],cl
  41373c:	es push ss
  41373e:	push   esp
  41373f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413740:	xchg   esp,eax
  413741:	int3   
  413742:	jmp    0xaae24ffd
  413747:	repnz out 0x97,al
  41374a:	pop    es
  41374b:	push   esi
  41374c:	push   ss
  41374d:	addr16 test eax,0xf4c52d07
  413753:	aaa    
  413754:	cs ja  0x41374b
  413757:	mov    eax,ds:0xf4f40679
  41375c:	imul   esp,DWORD PTR [eax+0x23],0x3a
  413760:	mov    ds:0x44e5769b,eax
  413765:	icebp  
  413766:	mov    ah,0xbc
  413768:	mov    ah,0x28
  41376a:	mov    bh,0x80
  41376c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41376d:	mov    edi,0x9114d2a2
  413772:	and    esi,edx
  413774:	pop    edi
  413775:	push   cs
  413776:	jl     0x4137cf
  413778:	icebp  
  413779:	mov    bh,0xf6
  41377b:	push   cs
  41377c:	loop   0x413779
  41377e:	jne    0x4137d7
  413780:	xchg   esp,eax
  413781:	aaa    
  413782:	(bad)  
  413783:	loop   0x413714
  413785:	inc    ecx
  413786:	dec    ebp
  413787:	inc    BYTE PTR [edx-0x32d6078f]
  41378d:	lods   eax,DWORD PTR ds:[esi]
  41378e:	sahf   
  41378f:	gs xchg esi,edi
  413792:	pop    ebp
  413793:	test   DWORD PTR [ecx+0x74f055ad],ebp
  413799:	jb     0x4137e2
  41379b:	leave  
  41379c:	scas   eax,DWORD PTR es:[edi]
  41379d:	inc    ecx
  41379e:	fisttp DWORD PTR [edx+0x14]
  4137a1:	pop    ds
  4137a2:	xchg   edi,eax
  4137a3:	lds    edx,FWORD PTR [ebp+0x26]
  4137a6:	inc    esp
  4137a7:	in     eax,0xe1
  4137a9:	pop    ds
  4137aa:	dec    esp
  4137ab:	jecxz  0x413817
  4137ad:	jnp    0x4137c3
  4137af:	loopne 0x4137ad
  4137b1:	dec    edx
  4137b2:	jns    0x413772
  4137b4:	add    BYTE PTR [ecx+0x48],ah
  4137b7:	sub    cl,al
  4137b9:	lods   al,BYTE PTR ds:[esi]
  4137ba:	lahf   
  4137bb:	xlat   BYTE PTR ds:[ebx]
  4137bc:	retf   0xe641
  4137bf:	or     BYTE PTR [ecx+ebp*4],0x73
  4137c3:	jge    0x4137cc
  4137c5:	nop
  4137c6:	icebp  
  4137c7:	in     eax,0xa2
  4137c9:	mov    esi,0x57035ded
  4137ce:	repnz mov ch,0x3d
  4137d1:	dec    edx
  4137d2:	jne    0x413849
  4137d4:	jg     0x4137e2
  4137d6:	jb     0x4137b5
  4137d8:	shl    BYTE PTR [ebx+0x6f],0x0
  4137dc:	mov    ah,0xf2
  4137de:	lds    eax,FWORD PTR [eax]
  4137e0:	imul   eax,esi,0x1b
  4137e3:	pop    ecx
  4137e4:	icebp  
  4137e5:	loope  0x4137ce
  4137e7:	test   BYTE PTR [ecx],ah
  4137e9:	aas    
  4137ea:	sbb    eax,eax
  4137ec:	cmp    BYTE PTR [ecx-0x1ec9b4ae],cl
  4137f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137f3:	mov    cl,0xc1
  4137f5:	ror    DWORD PTR [edi+0x1de4a284],cl
  4137fb:	jns    0x4137d8
  4137fd:	fs and al,0xa2
  413800:	push   ss
  413801:	pop    eax
  413802:	stos   DWORD PTR es:[edi],eax
  413803:	push   eax
  413804:	cmp    dh,ah
  413806:	mov    esi,0xd9543afa
  41380b:	jle    0x4137ed
  41380d:	addr16 dec edx
  41380f:	bound  edi,QWORD PTR ds:[edx+0x1f81d393]
  413816:	maxps  xmm0,XMMWORD PTR [ebp+0x69]
  41381a:	dec    esi
  41381b:	lea    ebp,[edi+0x42]
  41381e:	out    dx,eax
  41381f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413820:	and    cl,BYTE PTR [esi-0x7b7d1480]
  413826:	call   0x1206:0x5517cba0
  41382d:	in     eax,0xa4
  41382f:	or     BYTE PTR [ebx+0x598a2b60],cl
  413835:	adc    DWORD PTR [esi+edi*4+0x1f],0x2c
  41383a:	es enter 0xfb92,0xce
  41383f:	push   edi
  413840:	dec    ebx
  413841:	rcr    DWORD PTR [ecx+ecx*8],0xd8
  413845:	test   eax,0xce228fd4
  41384a:	push   edx
  41384b:	ins    DWORD PTR es:[edi],dx
  41384c:	cmp    cl,BYTE PTR [edi+0x18]
  41384f:	stos   DWORD PTR es:[edi],eax
  413850:	jmp    0x84f9:0xc9c83870
  413857:	pop    esi
  413858:	loopne 0x4138b3
  41385a:	leave  
  41385b:	leave  
  41385c:	fnsave [eax-0x6c8b6f5e]
  413862:	dec    edi
  413863:	xor    al,0xaf
  413865:	js     0x413842
  413867:	mov    bh,0x4d
  413869:	xor    esi,eax
  41386b:	xchg   ecx,eax
  41386c:	imul   edi,DWORD PTR [edi-0x73559445],0x51404340
  413876:	pop    esi
  413877:	es lahf 
  413879:	setb   BYTE PTR ds:0xc51a3aee
  413880:	rol    BYTE PTR [edx],cl
  413882:	(bad)  
  413883:	(bad)  
  413884:	cld    
  413885:	enter  0xddf,0x62
  413889:	ret    
  41388a:	aam    0x3f
  41388c:	mov    ds:0x2f6f642b,al
  413891:	ror    BYTE PTR [ebx+edx*8+0x6d],cl
  413895:	outs   dx,BYTE PTR ds:[esi]
  413896:	int3   
  413897:	into   
  413898:	mov    WORD PTR [eax-0x63],cs
  41389b:	adc    DWORD PTR [edx+0x3c98eb52],0x26
  4138a2:	test   eax,0x4a7b7222
  4138a7:	or     BYTE PTR [ebp+eiz*8-0x7a],al
  4138ab:	jle    0x4138c1
  4138ad:	fstp   DWORD PTR [ecx]
  4138af:	or     al,BYTE PTR [ecx-0x6c]
  4138b2:	(bad)  
  4138b3:	push   eax
  4138b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b5:	mov    ds:0x77e534c2,al
  4138ba:	fsubrp st(7),st
  4138bc:	inc    edx
  4138bd:	fstp   QWORD PTR [eax]
  4138bf:	or     eax,0x6b41b9a0
  4138c4:	add    ecx,DWORD PTR [eax]
  4138c6:	xor    DWORD PTR [edi-0x46f29dc1],ecx
  4138cc:	sar    DWORD PTR [edi],cl
  4138ce:	sub    DWORD PTR [eax+0x2],esi
  4138d1:	int3   
  4138d2:	stos   BYTE PTR es:[edi],al
  4138d3:	mov    ds:0x8957b0fb,al
  4138d8:	loopne 0x4138a7
  4138da:	sub    eax,0xaaaa4432
  4138df:	out    0x85,eax
  4138e1:	bound  esi,QWORD PTR [ebx+ecx*1+0x40471d26]
  4138e8:	(bad)  
  4138e9:	in     eax,dx
  4138ea:	out    dx,eax
  4138eb:	(bad)  
  4138ec:	loop   0x4138bb
  4138ee:	lea    edx,[esi+0x731cbe5f]
  4138f4:	add    eax,0xbf8c386f
  4138f9:	test   ebp,ebp
  4138fb:	ja     0x413907
  4138fd:	stc    
  4138fe:	jp     0x4138b4
  413900:	out    0x24,eax
  413902:	loop   0x413939
  413904:	xor    ebx,ecx
  413906:	in     eax,0x64
  413908:	mov    esp,0x487d80b7
  41390d:	jns    0x413954
  41390f:	gs das 
  413911:	(bad)  
  413912:	xor    BYTE PTR [ebp-0x1347309b],dl
  413918:	scas   al,BYTE PTR es:[edi]
  413919:	mov    bh,0x19
  41391b:	stc    
  41391c:	push   ds
  41391d:	ins    BYTE PTR es:[edi],dx
  41391e:	not    DWORD PTR [ebp+0x416963fc]
  413924:	in     eax,dx
  413925:	jae    0x413947
  413927:	call   0x3430:0xcc47815d
  41392e:	push   esi
  41392f:	add    esi,DWORD PTR [ecx+0x2e5aa95]
  413935:	or     al,0xcd
  413937:	xor    al,0x8e
  413939:	mov    ecx,0xbf2c21ec
  41393e:	(bad)  
  41393f:	mov    ebx,0x4d2111a8
  413944:	dec    ebx
  413945:	scas   al,BYTE PTR es:[edi]
  413946:	or     eax,DWORD PTR [eax+0x5a7447ea]
  41394c:	push   esi
  41394d:	pop    ebx
  41394e:	add    dh,BYTE PTR [edi]
  413950:	test   DWORD PTR [edi+0x26ce9dbc],edi
  413956:	les    ecx,FWORD PTR [ebp+0x53684cf2]
  41395c:	test   DWORD PTR ds:0xeb7c61bf,esp
  413962:	or     edx,DWORD PTR [eax+0x30]
  413965:	pusha  
  413966:	fwait
  413967:	(bad)  
  413968:	jmp    0x715e:0x4fecdb61
  41396f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413970:	pop    edx
  413971:	(bad)  
  413974:	ja     0x4139e8
  413976:	and    BYTE PTR [esp+ebp*8+0x3eb5e3b2],al
  41397d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41397e:	xchg   ecx,eax
  41397f:	or     BYTE PTR [ecx],dl
  413981:	in     al,dx
  413982:	retf   
  413983:	sub    ecx,edx
  413985:	stc    
  413986:	leave  
  413987:	add    DWORD PTR [edi],ecx
  413989:	sbb    DWORD PTR [ebx+eiz*1],ebx
  41398c:	fdivr  st,st(5)
  41398e:	mov    ch,0xeb
  413990:	inc    esp
  413991:	dec    ebp
  413992:	xchg   edx,eax
  413993:	outs   dx,BYTE PTR ss:[esi]
  413995:	and    BYTE PTR ds:[eax*4-0x3dd77ef8],ah
  41399d:	outs   dx,BYTE PTR ds:[esi]
  41399e:	mov    al,0xab
  4139a0:	jnp    0x41396a
  4139a2:	sub    ah,al
  4139a4:	int3   
  4139a5:	arpl   WORD PTR [edx+0x7f],dx
  4139a8:	dec    esp
  4139a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139aa:	and    eax,0x77bd577
  4139af:	xchg   DWORD PTR [ecx-0x5d],edi
  4139b2:	les    esp,FWORD PTR [ebx+0x4]
  4139b5:	sub    DWORD PTR [edx+0x446be75d],ecx
  4139bb:	mov    ah,0xde
  4139bd:	sub    ecx,DWORD PTR [edx+0x3a]
  4139c0:	dec    esp
  4139c1:	mov    al,ds:0x1bc5d27f
  4139c6:	mov    esp,0xbc63fd31
  4139cb:	cmp    BYTE PTR [eax+eax*2],bh
  4139ce:	or     ch,BYTE PTR [ebx]
  4139d0:	jg     0x413986
  4139d2:	jmp    0x413994
  4139d4:	push   ds
  4139d5:	push   ebx
  4139d6:	neg    cl
  4139d8:	iret   
  4139d9:	xlat   BYTE PTR ds:[ebx]
  4139da:	xchg   di,ax
  4139dc:	mov    dl,0x4a
  4139de:	cmp    DWORD PTR [edi+0x25],ecx
  4139e1:	mov    dh,0x71
  4139e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139e4:	cld    
  4139e5:	xlat   BYTE PTR ds:[ebx]
  4139e6:	scas   al,BYTE PTR es:[edi]
  4139e7:	adc    eax,0x989e715a
  4139ec:	jg     0x413a35
  4139ee:	sub    esp,DWORD PTR [eax+0x36]
  4139f1:	xlat   BYTE PTR ds:[ebx]
  4139f2:	(bad)  
  4139f3:	out    0xaa,al
  4139f5:	rol    bh,1
  4139f7:	ror    BYTE PTR [edi+eax*4-0x3f1a9962],1
  4139fe:	aaa    
  4139ff:	jae    0x413a06
  413a01:	push   ebp
  413a02:	mov    dh,0xe3
  413a04:	sub    DWORD PTR [esi+0x3bcb906b],eax
  413a0a:	jmp    0xdf3c:0x8b61161e
  413a11:	out    0x1e,al
  413a13:	inc    ebx
  413a14:	gs xchg edx,eax
  413a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a17:	inc    ebx
  413a18:	push   0x66875e45
  413a1d:	sbb    edi,DWORD PTR [eax+0xa77dff2]
  413a23:	pop    es
  413a24:	pop    es
  413a25:	xchg   ebp,eax
  413a26:	sub    BYTE PTR [ebp+0x15],ah
  413a29:	inc    edi
  413a2a:	in     eax,0x2
  413a2c:	fndisi(8087 only) 
  413a2e:	aaa    
  413a2f:	mov    ch,BYTE PTR [edi-0x54522206]
  413a35:	repnz dec esp
  413a37:	dec    esi
  413a38:	push   esi
  413a39:	(bad)  
  413a3b:	pop    es
  413a3c:	push   ebp
  413a3d:	ins    BYTE PTR es:[edi],dx
  413a3e:	sbb    BYTE PTR [ecx],cl
  413a40:	mov    esp,0xbe018a4a
  413a45:	jne    0x413a43
  413a47:	jae    0x413a8b
  413a49:	jmp    0x3143:0xb977aa66
  413a50:	sahf   
  413a51:	xor    al,0x34
  413a53:	inc    esp
  413a54:	dec    ebp
  413a55:	mov    bl,0x88
  413a57:	mov    bl,0x45
  413a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a5a:	popa   
  413a5b:	xchg   ecx,eax
  413a5c:	add    ecx,DWORD PTR [esi-0x2aac618e]
  413a62:	fs jp  0x4139fe
  413a65:	inc    edx
  413a66:	mov    bl,0x76
  413a68:	mov    ah,0x2f
  413a6a:	outs   dx,BYTE PTR ds:[esi]
  413a6b:	gs and eax,0xc64614c2
  413a71:	and    dl,dh
  413a73:	call   0xd43:0x83fee365
  413a7a:	inc    eax
  413a7b:	jg     0x413a95
  413a7d:	inc    esp
  413a7e:	loope  0x413a23
  413a80:	ja     0x413a9a
  413a82:	mov    eax,0xf3d2d0f0
  413a87:	test   DWORD PTR [ecx+0x78],ebp
  413a8a:	pop    edx
  413a8b:	and    eax,0x36c298fc
  413a90:	std    
  413a91:	stos   DWORD PTR es:[edi],eax
  413a92:	jns    0x413a37
  413a94:	div    DWORD PTR [edx+0x1f]
  413a97:	(bad)  
  413a98:	shl    esi,cl
  413a9a:	outs   dx,BYTE PTR ds:[esi]
  413a9b:	ds es stos BYTE PTR es:[edi],al
  413a9e:	in     al,0x20
  413aa0:	iret   
  413aa1:	pop    ds
  413aa2:	inc    ebp
  413aa3:	push   edi
  413aa4:	pushf  
  413aa5:	scas   al,BYTE PTR es:[edi]
  413aa6:	xchg   esp,eax
  413aa7:	push   ss
  413aa8:	mov    esp,eax
  413aaa:	mov    DWORD PTR [ebx-0xb6562d4],esp
  413ab0:	xchg   esp,eax
  413ab1:	pop    ds
  413ab2:	xor    al,0x82
  413ab4:	mov    al,0xbb
  413ab6:	dec    DWORD PTR gs:[ebx]
  413ab9:	popf   
  413aba:	in     eax,0xae
  413abc:	push   edx
  413abd:	inc    edi
  413abe:	jae    0x413afd
  413ac0:	popa   
  413ac1:	dec    esi
  413ac2:	ins    BYTE PTR es:[edi],dx
  413ac3:	ret    
  413ac4:	addr16 pop ebp
  413ac6:	lahf   
  413ac7:	jl     0x413ae4
  413ac9:	dec    esp
  413aca:	adc    DWORD PTR [edi-0x2e55c003],esp
  413ad0:	ja     0x413b51
  413ad2:	retf   0x864a
  413ad5:	xor    BYTE PTR [ecx-0x3d76707e],0xcd
  413adc:	mov    ds,WORD PTR [ebx+0x27]
  413adf:	rcr    DWORD PTR [esi-0x18],1
  413ae2:	in     eax,dx
  413ae3:	(bad)
  413ae7:	push   ss
  413ae8:	aaa    
  413ae9:	rol    DWORD PTR [edx+eax*1],1
  413aec:	(bad)  
  413aed:	leave  
  413aee:	sahf   
  413aef:	xchg   esi,eax
  413af0:	push   eax
  413af1:	mov    ecx,0x77a75c9a
  413af6:	add    DWORD PTR [esi-0x2f],0xffffff88
  413afa:	mov    bl,0x3f
  413afc:	loopne 0x413b59
  413afe:	call   0xdd2c:0xdfaa9aaf
  413b05:	test   BYTE PTR [ebx-0x9],bh
  413b08:	mov    ds,WORD PTR [esi+0x6955455b]
  413b0e:	fild   QWORD PTR [ecx-0x6ca2ed97]
  413b14:	cmp    al,0xcd
  413b16:	add    BYTE PTR [esi+0x78f0421f],al
  413b1c:	fisub  WORD PTR [ebp-0x2c]
  413b1f:	js     0x413aa9
  413b21:	jae    0x413b83
  413b23:	lea    esp,[esi+edi*8-0x54]
  413b27:	push   edi
  413b28:	or     BYTE PTR [ebx+edx*1-0x19c78296],0x39
  413b30:	es inc esp
  413b32:	sub    dh,BYTE PTR [eax+0x4f]
  413b35:	dec    edx
  413b36:	(bad)  
  413b37:	mov    esp,0x42db4ecc
  413b3c:	fstp   DWORD PTR [ecx-0x21]
  413b3f:	neg    edx
  413b41:	mov    ah,0x7f
  413b43:	adc    al,0xac
  413b45:	popf   
  413b46:	dec    eax
  413b47:	mov    BYTE PTR [ecx-0x79ea955],bl
  413b4d:	in     al,dx
  413b4e:	mov    eax,0x7dece37f
  413b53:	pusha  
  413b54:	inc    edx
  413b55:	loope  0x413aed
  413b57:	jb     0x413b0a
  413b59:	xchg   ecx,eax
  413b5a:	sub    al,0x2f
  413b5c:	loope  0x413b4c
  413b5e:	sub    al,0xd1
  413b60:	jae    0x413afa
  413b62:	cwde   
  413b63:	jmp    0xc8c446a7
  413b68:	and    BYTE PTR [edx+0x1c454b2a],ch
  413b6e:	adc    al,0xc7
  413b70:	ja     0x413b07
  413b72:	jmp    0x413b6d
  413b74:	fst    st(5)
  413b76:	fimul  WORD PTR [edx+0x7172fe04]
  413b7c:	in     al,0x75
  413b7e:	aas    
  413b7f:	push   es
  413b80:	jecxz  0x413ba8
  413b82:	addr16 cmp eax,0x81835196
  413b88:	push   eax
  413b89:	push   ds
  413b8a:	jnp    0x413b66
  413b8c:	aad    0x4c
  413b8e:	xlat   BYTE PTR ds:[ebx]
  413b8f:	xor    BYTE PTR [ecx+0x1ff30d49],ch
  413b95:	xchg   ebp,eax
  413b96:	fiadd  WORD PTR [ebp+0x201beb7b]
  413b9c:	(bad)  
  413b9d:	repnz xchg esp,eax
  413b9f:	mov    ecx,0x867a1cbc
  413ba4:	iret   
  413ba5:	imul   esp,DWORD PTR [edx-0x2908d4d7],0x66
  413bac:	into   
  413bad:	mov    cl,BYTE PTR [eax-0x371e2325]
  413bb3:	jge    0x413ba0
  413bb5:	mov    cl,0x50
  413bb7:	fnsave [ebx-0x42]
  413bba:	sub    bh,ah
  413bbc:	jg     0x413b85
  413bbe:	inc    BYTE PTR [ebp+0x76]
  413bc1:	scas   al,BYTE PTR es:[edi]
  413bc2:	ins    BYTE PTR es:[edi],dx
  413bc3:	mov    edi,0x43c8dee0
  413bc8:	mov    al,ds:0x84c90cc7
  413bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd0:	sbb    dh,BYTE PTR [edx+0xb]
  413bd3:	lahf   
  413bd4:	cld    
  413bd5:	(bad)  
  413bd6:	arpl   WORD PTR [ebp-0x7f],dx
  413bd9:	cmp    eax,0x5919fd46
  413bde:	les    ecx,FWORD PTR [edi]
  413be0:	retf   
  413be1:	adc    ecx,DWORD PTR [ebx]
  413be3:	or     al,0xb8
  413be5:	stos   BYTE PTR es:[edi],al
  413be6:	push   cs
  413be7:	jns    0x413bf9
  413be9:	out    dx,al
  413bea:	xchg   esi,eax
  413beb:	and    DWORD PTR [ebp+0x1bc8f2e3],eax
  413bf1:	test   eax,0x9c2d06ea
  413bf6:	popa   
  413bf7:	std    
  413bf8:	xchg   edi,eax
  413bf9:	pop    esi
  413bfa:	push   0xffffffac
  413bfc:	scas   eax,DWORD PTR es:[edi]
  413bfd:	in     al,0xa6
  413bff:	or     BYTE PTR [eax],bh
  413c01:	push   ebp
  413c02:	dec    edx
  413c03:	dec    ebx
  413c04:	lock sub BYTE PTR [ecx+eax*4+0x71ce0bdf],bl
  413c0c:	sbb    DWORD PTR [ecx-0x7b],edi
  413c0f:	retf   
  413c10:	push   ebp
  413c11:	jns    0x413bf7
  413c13:	aas    
  413c14:	xchg   ebx,eax
  413c15:	(bad)  
  413c16:	push   0x10
  413c18:	dec    ebx
  413c19:	pop    ds
  413c1a:	sub    eax,edx
  413c1c:	fwait
  413c1d:	sbb    al,0xe4
  413c1f:	mov    ecx,0xb12574d7
  413c24:	jne    0x413c4d
  413c26:	outs   dx,BYTE PTR ds:[esi]
  413c27:	cdq    
  413c28:	and    al,0x31
  413c2a:	push   esi
  413c2b:	fisubr DWORD PTR [ecx+0x6e]
  413c2e:	xlat   BYTE PTR ds:[ebx]
  413c2f:	sbb    al,0x46
  413c31:	push   eax
  413c32:	scas   al,BYTE PTR es:[edi]
  413c33:	outs   dx,BYTE PTR ds:[esi]
  413c34:	(bad)  
  413c35:	stc    
  413c36:	and    eax,0x8543f1da
  413c3b:	inc    edx
  413c3c:	fst    QWORD PTR [ecx-0x15]
  413c3f:	cmp    ah,bl
  413c41:	jle    0x413c94
  413c43:	cs (bad) 
  413c46:	jle    0x413ca6
  413c48:	nop
  413c49:	nop
  413c4a:	(bad)  
  413c4b:	and    esi,edx
  413c4d:	sub    ebx,esp
  413c4f:	and    al,BYTE PTR [ebx]
  413c51:	mov    edx,0xbcf04f2
  413c56:	ins    DWORD PTR es:[edi],dx
  413c57:	aam    0xd
  413c59:	jle    0x413c56
  413c5b:	push   esp
  413c5c:	add    al,0x2
  413c5e:	lahf   
  413c5f:	pop    eax
  413c60:	(bad)  
  413c61:	fld    TBYTE PTR [ebp-0x7ac09fd9]
  413c67:	aas    
  413c68:	mov    eax,0x15fcf1c6
  413c6d:	jecxz  0x413bfe
  413c6f:	cmp    edi,DWORD PTR [esi-0x66]
  413c72:	push   ebx
  413c73:	mov    bh,0xc2
  413c75:	shl    DWORD PTR [eax+ecx*2+0x1b],cl
  413c79:	je     0x413c02
  413c7b:	sub    bl,dh
  413c7d:	test   BYTE PTR [esi],bl
  413c7f:	ds popa 
  413c81:	xrelease mov BYTE PTR [ebp-0x2df52457],al
  413c88:	daa    
  413c89:	imul   ecx,edx,0xf36bb9cd
  413c8f:	sbb    al,ah
  413c91:	xor    BYTE PTR [esi],al
  413c93:	add    esi,DWORD PTR [esi+0x7cd11b8b]
  413c99:	jmp    DWORD PTR [esi-0x36c26604]
  413c9f:	jb     0x413c3e
  413ca1:	fldenv [ecx]
  413ca3:	jle    0x413c67
  413ca5:	imul   esi,ecx,0x4a
  413ca8:	repnz xor ebp,esp
  413cab:	sbb    al,dl
  413cad:	in     al,0x42
  413caf:	push   edi
  413cb0:	dec    edx
  413cb1:	inc    ecx
  413cb2:	sbb    DWORD PTR [edx-0x13928d8],ecx
  413cb8:	pop    ecx
  413cb9:	jne    0x413d01
  413cbb:	sbb    ch,ch
  413cbd:	sub    al,BYTE PTR [ebx]
  413cbf:	shl    BYTE PTR [edi-0x38848e1],1
  413cc5:	lea    ebp,[edi+0x76c0f32e]
  413ccb:	add    edi,DWORD PTR [ebx]
  413ccd:	int3   
  413cce:	ss pop es
  413cd0:	les    edi,FWORD PTR [edi+0x43]
  413cd3:	add    eax,0x79ea05ef
  413cd8:	es popa 
  413cda:	push   cs
  413cdb:	dec    esp
  413cdc:	or     BYTE PTR [esi-0x39516411],ch
  413ce2:	push   eax
  413ce3:	fisubr WORD PTR [ebp+ebx*8-0x1a6d1bbb]
  413cea:	repnz mov ecx,0x7b6ad2b1
  413cf0:	xchg   esp,eax
  413cf1:	dec    ebp
  413cf2:	add    BYTE PTR [bx+si+0x5a],ah
  413cf6:	in     al,dx
  413cf7:	adc    al,0xc8
  413cf9:	ja     0x413d69
  413cfb:	sub    eax,edi
  413cfd:	out    dx,al
  413cfe:	outs   dx,DWORD PTR ds:[esi]
  413cff:	int3   
  413d00:	xor    al,0xce
  413d02:	in     eax,dx
  413d03:	gs inc esp
  413d05:	inc    edx
  413d06:	dec    ebp
  413d07:	popf   
  413d08:	cdq    
  413d09:	adc    BYTE PTR [esi],0x48
  413d0c:	push   ss
  413d0d:	pop    ss
  413d0e:	ret    
  413d0f:	or     cl,BYTE PTR cs:0x296c5609
  413d16:	xchg   DWORD PTR [edi+0x7f462d94],edx
  413d1c:	pop    ss
  413d1d:	loope  0x413cd9
  413d1f:	(bad)  
  413d20:	(bad)  
  413d22:	addr16 push esi
  413d24:	adc    al,0x42
  413d26:	jecxz  0x413d94
  413d28:	xor    BYTE PTR [ebx+0x46687dfb],dl
  413d2e:	jnp    0x413ccc
  413d30:	popa   
  413d31:	jb     0x413d28
  413d33:	out    0xab,al
  413d35:	pop    ecx
  413d36:	inc    ecx
  413d37:	in     eax,dx
  413d38:	dec    ebp
  413d39:	lods   eax,DWORD PTR ds:[esi]
  413d3a:	adc    al,al
  413d3c:	xor    eax,ecx
  413d3e:	arpl   WORD PTR [esi-0x2687e5f7],bp
  413d44:	popf   
  413d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d46:	imul   ebp,DWORD PTR [edx+0x52655150],0x7b
  413d4d:	ds inc eax
  413d4f:	cmp    DWORD PTR [ecx+0x3e],eax
  413d52:	retf   
  413d53:	inc    eax
  413d54:	sbb    al,0x0
  413d56:	pop    esi
  413d57:	and    al,0xff
  413d59:	jae    0x413d67
  413d5b:	iret   
  413d5c:	sub    eax,0x43ceb2e0
  413d61:	dec    DWORD PTR [esi-0x754d396e]
  413d67:	nop
  413d68:	pop    edi
  413d69:	mov    dh,0xd6
  413d6b:	lahf   
  413d6c:	cdq    
  413d6d:	fdivr  QWORD PTR [edx+0x2f12171a]
  413d73:	xlat   BYTE PTR ds:[ebx]
  413d74:	jecxz  0x413de0
  413d76:	adc    DWORD PTR [ebx+0x7474d2a6],0x6fb218a9
  413d80:	std    
  413d81:	and    BYTE PTR [esi],0xb5
  413d84:	push   esp
  413d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d86:	mov    edx,0xbef09803
  413d8b:	std    
  413d8c:	clc    
  413d8d:	mov    ebx,0x3bac3201
  413d92:	jl     0x413db3
  413d94:	std    
  413d95:	sbb    ah,BYTE PTR [ecx]
  413d97:	dec    ebp
  413d98:	pop    ebx
  413d99:	dec    ecx
  413d9a:	sub    DWORD PTR [edx-0x7f0cbe6d],ecx
  413da0:	inc    ecx
  413da1:	xchg   bl,ah
  413da3:	sub    esi,edi
  413da5:	add    eax,0xdd796534
  413daa:	adc    al,0xc1
  413dac:	arpl   cx,si
  413dae:	pop    esp
  413daf:	adc    BYTE PTR [eax-0x5a792f10],ah
  413db5:	mov    DWORD PTR ds:0xf7b44613,edx
  413dbc:	or     edx,ebp
  413dbe:	add    DWORD PTR [eax-0x3b],esp
  413dc1:	jmp    0x413ddd
  413dc3:	sbb    DWORD PTR [edx],0xffffffff
  413dc6:	sub    al,0x24
  413dc8:	add    cl,BYTE PTR [esi+edx*1-0x42]
  413dcc:	sub    BYTE PTR [ebx+0x16],0xa5
  413dd0:	jl     0x413e41
  413dd2:	pusha  
  413dd3:	cmp    DWORD PTR [eax-0x7137c595],ebx
  413dd9:	push   ebp
  413dda:	mov    edx,ebx
  413ddc:	sti    
  413ddd:	sub    esp,DWORD PTR [ecx+ebx*2+0x30]
  413de1:	xchg   esi,eax
  413de2:	pushf  
  413de3:	test   al,0x19
  413de5:	es push esi
  413de7:	jno    0x413d81
  413de9:	fwait
  413dea:	mov    dl,0xba
  413dec:	test   ecx,0x3945a148
  413df2:	mov    al,0xb8
  413df4:	cs out 0x95,al
  413df7:	and    al,0x20
  413df9:	xchg   esp,eax
  413dfa:	xchg   DWORD PTR [edi+0x2e3575e9],esp
  413e00:	inc    edx
  413e01:	pop    edi
  413e02:	outs   dx,DWORD PTR ds:[esi]
  413e03:	cmc    
  413e04:	or     DWORD PTR [edi+ecx*2-0x38],ebp
  413e08:	jbe    0x413e7b
  413e0a:	jle    0x413df1
  413e0c:	jl     0x413e4f
  413e0e:	adc    esp,DWORD PTR [eax+ecx*8-0x3]
  413e12:	fxch   st(1)
  413e14:	jns    0x413db2
  413e16:	sbb    esi,eax
  413e18:	lea    eax,[eax-0x7a]
  413e1b:	ror    BYTE PTR [esi],0x3d
  413e1e:	test   DWORD PTR fs:[ecx+ebx*2-0x5d],edx
  413e23:	int    0xbb
  413e25:	mov    bl,BYTE PTR [edi-0x1c]
  413e28:	loope  0x413db5
  413e2a:	inc    esi
  413e2b:	or     bh,dl
  413e2d:	push   esi
  413e2e:	setnp  BYTE PTR [ebx-0x22]
  413e32:	in     al,dx
  413e33:	sbb    al,0xb3
  413e35:	xor    al,0xf5
  413e37:	repnz inc edi
  413e39:	ror    BYTE PTR fs:[esi+0x36e75021],1
  413e40:	fdiv   st,st(4)
  413e42:	mov    dl,0xa2
  413e44:	push   ebp
  413e45:	outs   dx,DWORD PTR ds:[esi]
  413e46:	adc    DWORD PTR [edx+0x7a],esi
  413e49:	jae    0x413dd7
  413e4b:	and    cl,bh
  413e4d:	ja     0x413e65
  413e4f:	add    BYTE PTR [edi+esi*8+0x35],0x62
  413e54:	jp     0xb56495cd
  413e5a:	and    DWORD PTR [esi+0x13],ebx
  413e5d:	icebp  
  413e5e:	xor    cl,ch
  413e60:	jo     0x413ed3
  413e62:	jb     0x413e6d
  413e64:	jle    0x413e8d
  413e66:	paddd  mm2,QWORD PTR [esp]
  413e6a:	das    
  413e6b:	jmp    0x9e91669
  413e70:	popa   
  413e71:	test   BYTE PTR [edi-0x5dad310b],ah
  413e77:	shl    BYTE PTR ds:0x70b7ba38,0xe6
  413e7e:	add    al,ah
  413e80:	cdq    
  413e81:	mov    edx,0x6519543f
  413e86:	enter  0x51e2,0x31
  413e8a:	add    dh,dh
  413e8c:	xchg   DWORD PTR [esi],ebx
  413e8e:	xor    BYTE PTR [esi],dl
  413e90:	dec    esi
  413e91:	pop    esp
  413e92:	scas   al,BYTE PTR es:[edi]
  413e93:	call   0x84c5:0x8a68ad75
  413e9a:	mov    eax,0xb39748bc
  413e9f:	mov    bh,0xb0
  413ea1:	div    BYTE PTR [esi-0x55]
  413ea4:	jo     0x413eb7
  413ea6:	into   
  413ea7:	adc    ecx,DWORD PTR [ebx-0x6ccdcf34]
  413ead:	lahf   
  413eae:	inc    ebp
  413eaf:	cmp    BYTE PTR [ecx],0xdf
  413eb2:	mov    edx,0x1ccbbc4f
  413eb7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb9:	outs   dx,DWORD PTR ds:[esi]
  413eba:	jbe    0x413f26
  413ebc:	mov    ?,WORD PTR [ecx]
  413ebe:	into   
  413ebf:	jns    0x413efa
  413ec1:	sbb    BYTE PTR gs:[edx-0x2b],dl
  413ec5:	adc    eax,0x20abd3ba
  413eca:	cmp    eax,0x46a35b01
  413ecf:	inc    edi
  413ed0:	pop    ds
  413ed1:	outs   dx,DWORD PTR ds:[esi]
  413ed2:	mov    eax,ds:0x27fd39e6
  413ed7:	aaa    
  413ed8:	popa   
  413ed9:	mov    gs,WORD PTR [edx-0x2e]
  413edc:	bound  esi,QWORD PTR [eax]
  413ede:	push   ebx
  413edf:	int    0x67
  413ee1:	push   0xd82258d4
  413ee6:	aad    0xfe
  413ee8:	jle    0x413f1d
  413eea:	inc    ecx
  413eeb:	inc    edi
  413eec:	lds    eax,FWORD PTR [ebx-0x73869b1a]
  413ef2:	pop    ds
  413ef3:	(bad)  
  413ef4:	lahf   
  413ef5:	loope  0x413e92
  413ef7:	les    edi,FWORD PTR [ebx-0x2b]
  413efa:	sub    eax,0x59026848
  413eff:	xchg   DWORD PTR [ebp-0x19],ebp
  413f02:	pop    es
  413f03:	stos   DWORD PTR es:[edi],eax
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	int3   
  413f06:	push   0x17af5dde
  413f0b:	or     ch,BYTE PTR [eax+0x1df56177]
  413f11:	cs mov ebp,0x57d6b7d5
  413f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f18:	xor    ebp,edx
  413f1a:	mov    ah,0x20
  413f1c:	pop    es
  413f1d:	cmp    DWORD PTR [esi-0x38ae8df2],ebx
  413f23:	push   ds
  413f24:	xor    BYTE PTR [edx+0x5e],ah
  413f27:	test   DWORD PTR [edi],edi
  413f29:	sub    eax,0xd82e67de
  413f2e:	xor    DWORD PTR [esi-0x27],eax
  413f31:	and    ah,dl
  413f33:	push   esi
  413f34:	popf   
  413f35:	xchg   edx,eax
  413f36:	jle    0x413f0b
  413f38:	jge    0x413f70
  413f3a:	mov    al,ds:0xb19acf7c
  413f3f:	sub    esi,DWORD PTR [ebp-0x32]
  413f42:	cld    
  413f43:	mov    ds:0x24f2c5ed,al
  413f48:	daa    
  413f49:	in     al,dx
  413f4a:	fisttp QWORD PTR [esi+0x337464ed]
  413f50:	cmp    ebx,DWORD PTR [ebx+0x56]
  413f53:	adc    eax,0x3c639b1a
  413f58:	or     BYTE PTR [edx],cl
  413f5a:	mov    edi,0x4ff78c4c
  413f5f:	and    eax,0x49252a6d
  413f64:	pop    ds
  413f65:	ins    DWORD PTR es:[edi],dx
  413f66:	push   ecx
  413f67:	sub    eax,0xcd8b255a
  413f6c:	or     BYTE PTR [ecx-0x37aa2f01],ch
  413f72:	push   edx
  413f73:	out    dx,al
  413f74:	dec    edx
  413f75:	cmp    al,0x9b
  413f77:	mov    ch,0x91
  413f79:	push   eax
  413f7a:	mov    esp,DWORD PTR [edx-0x2954357c]
  413f80:	sbb    BYTE PTR [ecx],0x77
  413f83:	mov    dh,0xa
  413f85:	push   ecx
  413f86:	rcr    BYTE PTR [ecx],0xb2
  413f89:	xchg   ecx,eax
  413f8a:	fisttp DWORD PTR [ebp+0x31]
  413f8d:	out    0x64,al
  413f8f:	push   ss
  413f90:	pop    eax
  413f91:	dec    eax
  413f92:	add    DWORD PTR [edx+edx*1],ebx
  413f95:	cmp    ch,BYTE PTR [ebp+0x7183c7c8]
  413f9b:	and    BYTE PTR [ebx-0x7a3cb8b5],0x69
  413fa2:	ret    
  413fa3:	sub    ah,BYTE PTR [edi+eiz*8-0x11]
  413fa7:	arpl   WORD PTR [edx],bp
  413fa9:	popf   
  413faa:	lods   al,BYTE PTR ds:[esi]
  413fab:	dec    ebp
  413fac:	inc    ebx
  413fad:	arpl   sp,sp
  413faf:	(bad)  
  413fb0:	retf   
  413fb1:	dec    esi
  413fb2:	adc    eax,0xd274cba7
  413fb7:	ret    0xe5f7
  413fba:	mov    BYTE PTR [eax+0x7dcc2512],ch
  413fc0:	ret    0x89b
  413fc3:	sub    al,BYTE PTR [esi-0x11e9009d]
  413fc9:	pop    esi
  413fca:	inc    edi
  413fcb:	out    0x79,eax
  413fcd:	(bad)  
  413fce:	sbb    BYTE PTR [eax-0x884a1bd],dl
  413fd4:	mov    ecx,0xb452dd7f
  413fd9:	mov    esi,0xc972083
  413fde:	dec    edx
  413fdf:	mov    gs,ecx
  413fe1:	shr    esi,0xd
  413fe4:	push   ss
  413fe5:	or     DWORD PTR [ebx],esi
  413fe7:	or     dh,ah
  413fe9:	out    dx,al
  413fea:	sub    eax,0xcf43f9ac
  413fef:	dec    esp
  413ff0:	mov    bh,0x7e
  413ff2:	cwde   
  413ff3:	mov    eax,ds:0x139967b9
  413ff8:	js     0x413fe1
  413ffa:	pop    ds
  413ffb:	and    BYTE PTR [ebx],bl
  413ffd:	pop    esp
  413ffe:	(bad)  
  413fff:	mov    ds:0x3e95f82c,al
  414004:	test   DWORD PTR [edx+ebp*1],eax
  414007:	push   ebp
  414008:	adc    eax,0xce3a551d
  41400d:	xchg   ebp,eax
  41400e:	div    DWORD PTR [esi+0x2e]
  414011:	inc    ebp
  414012:	mov    ebx,0x395f37f5
  414017:	jae    0x414097
  414019:	or     al,0x79
  41401b:	inc    edi
  41401c:	pop    ecx
  41401d:	sbb    eax,0x587397fe
  414022:	enter  0x85a4,0xe3
  414026:	pop    ecx
  414027:	test   BYTE PTR [eax+0x7ec2b83c],dl
  41402d:	(bad)  
  41402e:	aas    
  41402f:	leave  
  414030:	inc    edx
  414031:	iret   
  414032:	sub    DWORD PTR [esi],esi
  414034:	push   cs
  414035:	mov    ebx,0xfbb381e8
  41403a:	mov    eax,0x57a81436
  41403f:	ins    BYTE PTR es:[edi],dx
  414040:	lahf   
  414041:	ins    DWORD PTR es:[edi],dx
  414042:	scas   al,BYTE PTR es:[edi]
  414043:	imul   BYTE PTR [edi+0x2b]
  414046:	adc    bh,ah
  414048:	repz imul DWORD PTR [bp+di-0x5d]
  41404d:	pop    esp
  41404e:	imul   esi,DWORD PTR [edx],0x2a
  414051:	jp     0x414025
  414053:	push   edx
  414054:	dec    ebx
  414055:	cwde   
  414056:	sbb    al,0xa2
  414058:	sbb    bl,BYTE PTR [edi+0x4c465006]
  41405e:	into   
  41405f:	add    al,0xc2
  414061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414062:	cmc    
  414063:	out    0x3f,al
  414065:	push   edx
  414066:	inc    esp
  414067:	and    ebx,DWORD PTR ds:0xb9665dee
  41406d:	mov    cl,0xed
  41406f:	mov    eax,ds:0x3ab89d74
  414074:	ret    
  414075:	test   BYTE PTR [ecx-0x48d9694e],0xb5
  41407c:	mov    ds:0x3ef796da,al
  414081:	adc    eax,0x2ccc90ce
  414086:	lea    esi,[ebx+eiz*1-0x3a]
  41408a:	lods   eax,DWORD PTR ds:[esi]
  41408b:	sub    eax,0xe99abbe9
  414090:	xchg   edi,eax
  414091:	pop    es
  414092:	xlat   BYTE PTR ds:[ebx]
  414093:	out    dx,al
  414094:	sbb    eax,0xf09a88ed
  414099:	dec    edx
  41409a:	or     BYTE PTR [ebx],bh
  41409c:	repnz test al,0xcb
  41409f:	mov    ds:0xb8a9a646,eax
  4140a4:	mov    bl,0xc5
  4140a6:	jns    0x414029
  4140a8:	adc    ebx,DWORD PTR [edi+0x47983fdb]
  4140ae:	out    0xbb,al
  4140b0:	in     eax,dx
  4140b1:	sbb    dh,BYTE PTR [edi-0x1282b9df]
  4140b7:	xor    eax,0xf1c8fc1e
  4140bc:	mov    edx,0xa6077858
  4140c1:	nop
  4140c2:	mov    ebp,0x2dba2bdf
  4140c7:	mov    ds:0xf0b3ba0b,eax
  4140cc:	push   ebx
  4140cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ce:	loopne 0x414086
  4140d0:	test   BYTE PTR [ebx+edx*8+0xaa26488],bl
  4140d7:	mov    db6,eax
  4140da:	pop    ebx
  4140db:	xchg   esp,eax
  4140dc:	rol    ah,0xec
  4140df:	jmp    0x41409d
  4140e1:	repz inc esp
  4140e3:	dec    BYTE PTR [edi-0x309800cf]
  4140e9:	or     BYTE PTR [eax],bh
  4140eb:	inc    edx
  4140ec:	pushf  
  4140ed:	push   esp
  4140ee:	inc    edi
  4140ef:	loopne 0x41416c
  4140f1:	xchg   BYTE PTR [eax-0x7538bdbf],bh
  4140f7:	aaa    
  4140f8:	test   DWORD PTR [edx+ecx*1-0xa],ecx
  4140fc:	adc    ch,dl
  4140fe:	mov    esp,0xf1ec2d4f
  414103:	fsubp  st(4),st
  414105:	nop
  414106:	dec    eax
  414107:	stc    
  414108:	add    BYTE PTR [ecx+0x15],bh
  41410b:	mov    bh,0xd1
  41410d:	pop    edi
  41410e:	xlat   BYTE PTR ds:[ebx]
  41410f:	repnz or BYTE PTR [ecx+0x72],0x38
  414114:	xor    eax,0xde7bfa9b
  414119:	in     eax,dx
  41411a:	(bad)  
  41411c:	adc    DWORD PTR [esi-0x10a3a4bf],ebx
  414122:	sub    ebp,DWORD PTR [esi-0x4d]
  414125:	popf   
  414126:	dec    eax
  414127:	gs fwait
  414129:	jns    0x414100
  41412b:	int3   
  41412c:	test   ah,bh
  41412e:	jl     0x41417c
  414130:	push   0xa365dae5
  414135:	or     eax,0x8b23a00
  41413a:	mov    al,0x5c
  41413c:	inc    edx
  41413d:	jae    0x414115
  41413f:	jns    0x414121
  414141:	push   ebp
  414142:	leave  
  414143:	inc    ecx
  414144:	arpl   ax,cx
  414146:	aaa    
  414147:	cli    
  414148:	shl    edx,1
  41414a:	sub    al,0x7b
  41414c:	dec    esp
  41414d:	ficom  WORD PTR [edi+0x6bd631e7]
  414153:	outs   dx,BYTE PTR ds:[esi]
  414154:	adc    DWORD PTR [edi-0x77821d0d],ebp
  41415a:	jns    0x4141c4
  41415c:	dec    esi
  41415d:	mov    WORD PTR [ecx],es
  41415f:	arpl   WORD PTR [ecx],di
  414161:	in     al,dx
  414162:	js     0x414148
  414164:	lods   al,BYTE PTR ds:[esi]
  414165:	xchg   DWORD PTR [ebx],eax
  414167:	gs or  al,0x2d
  41416a:	sub    BYTE PTR [ebx+0x3b04489f],0xc
  414171:	int3   
  414172:	lea    edi,[esi+0x26]
  414175:	stc    
  414176:	push   es
  414177:	sti    
  414178:	retf   0xe966
  41417b:	xor    dh,bh
  41417d:	and    eax,0x805241f6
  414182:	pop    ebp
  414183:	pop    ss
  414184:	fsubr  QWORD PTR [ebx+0x57]
  414187:	mov    dh,0x41
  414189:	mov    dh,0x97
  41418b:	cmc    
  41418c:	neg    DWORD PTR [eax+ecx*1-0x6ce2cf9]
  414193:	es ror ecx,0xbe
  414197:	(bad)  
  414198:	and    esp,edi
  41419a:	das    
  41419b:	xchg   BYTE PTR ds:0xcba563e5,al
  4141a1:	retf   
  4141a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a3:	fisttp QWORD PTR ds:0xdbc67f71
  4141a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141aa:	js     0x414161
  4141ac:	test   al,0xbc
  4141ae:	cdq    
  4141af:	xchg   ecx,eax
  4141b0:	out    dx,al
  4141b1:	xor    eax,DWORD PTR [ecx]
  4141b3:	ins    BYTE PTR es:[edi],dx
  4141b4:	sub    bh,al
  4141b6:	and    dl,BYTE PTR [edx]
  4141b8:	sub    ch,BYTE PTR [esi-0x3b94380e]
  4141be:	mov    eax,ds:0xdb7b182a
  4141c3:	out    0xb4,al
  4141c5:	mov    DWORD PTR [ecx],ebp
  4141c7:	jae    0x414244
  4141c9:	jmp    DWORD PTR [edi+edx*4]
  4141cc:	push   ebp
  4141cd:	fldenv [esi+eax*4+0x710892bc]
  4141d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d5:	mov    ah,0xf8
  4141d7:	adc    eax,0xf8da96f
  4141dc:	leave  
  4141dd:	xor    edx,0x2d
  4141e0:	add    al,0x10
  4141e2:	out    0xb2,eax
  4141e4:	jne    0x41417d
  4141e6:	dec    esp
  4141e7:	adc    DWORD PTR [esi-0x4f],edx
  4141ea:	mov    edx,0xbe67ae0
  4141ef:	inc    esp
  4141f0:	std    
  4141f1:	mov    ch,BYTE PTR [edx+0xc46ceab]
  4141f7:	mov    ds:0x7f01f2e6,eax
  4141fc:	sbb    cl,bl
  4141fe:	inc    edx
  4141ff:	in     al,0xd
  414201:	jmp    0x41419f
  414203:	adc    esi,DWORD PTR [eax]
  414205:	jnp    0x414228
  414207:	push   ds
  414208:	mov    ds:0x6e9823c4,eax
  41420d:	bound  ecx,QWORD PTR [eax-0x2215c8a5]
  414213:	inc    esi
  414214:	out    dx,eax
  414215:	sti    
  414216:	push   0x695a6851
  41421b:	mov    al,0xc2
  41421d:	outs   dx,BYTE PTR gs:[esi]
  41421f:	pop    es
  414220:	dec    esp
  414221:	fs popf 
  414223:	loope  0x414214
  414225:	add    edx,edx
  414227:	sahf   
  414228:	xchg   esi,eax
  414229:	cmp    DWORD PTR [edi+0x220f0b30],esp
  41422f:	je     0x4141f8
  414231:	lds    edi,FWORD PTR [ecx+0x7bee710c]
  414237:	mov    dl,0x12
  414239:	sub    eax,DWORD PTR [ecx]
  41423b:	jae    0x41428a
  41423d:	arpl   WORD PTR [ebx],di
  41423f:	es dec esp
  414241:	push   esi
  414242:	inc    ecx
  414243:	test   BYTE PTR [edx-0x4d],cl
  414246:	addr16 inc esi
  414248:	pusha  
  414249:	push   cs
  41424a:	in     eax,dx
  41424b:	loopne 0x4142ca
  41424d:	cmp    eax,0x548a9867
  414252:	sub    al,0xcd
  414254:	xchg   edx,eax
  414255:	fwait
  414256:	test   DWORD PTR [esi-0x66caae1],0x79d737c1
  414260:	cwde   
  414261:	and    ebx,edi
  414263:	out    0x7b,eax
  414265:	(bad)  
  414266:	mov    ebx,0xa813c1c8
  41426b:	xchg   edi,eax
  41426c:	jge    0x414217
  41426e:	(bad)  
  41426f:	jmp    0x4141fb
  414271:	mov    DWORD PTR [ebp-0x6e],ebp
  414274:	call   0x2686:0xb50f623a
  41427b:	in     al,0xa3
  41427d:	add    eax,0x7c09a354
  414282:	mov    ebx,0xfa30d97e
  414287:	inc    ecx
  414288:	inc    esi
  414289:	adc    bh,ah
  41428b:	bound  ebp,QWORD PTR [esi+0x7af7682f]
  414291:	(bad)  
  414292:	rol    BYTE PTR [edx-0x45],1
  414295:	test   BYTE PTR [esi+0xddde07e],0x44
  41429c:	mov    ds:0xb90dacca,al
  4142a1:	sar    edx,cl
  4142a3:	adc    DWORD PTR [edx+0x2e60ce61],edx
  4142a9:	out    0xef,eax
  4142ab:	lods   eax,DWORD PTR ds:[esi]
  4142ac:	leave  
  4142ad:	adc    BYTE PTR [ebp-0x4852e33d],cl
  4142b3:	xor    DWORD PTR [esp+ecx*8-0x68eb14f3],ebp
  4142ba:	int    0x91
  4142bc:	push   esp
  4142bd:	test   DWORD PTR [ebp-0x716bfc55],esi
  4142c3:	add    al,0x75
  4142c5:	jno    0x41428c
  4142c7:	clc    
  4142c8:	loop   0x414287
  4142ca:	fcmovnbe st,st(0)
  4142cc:	scas   eax,DWORD PTR es:[edi]
  4142cd:	jg     0x41429f
  4142cf:	jle    0x41429d
  4142d1:	xor    DWORD PTR [esi-0x27],edi
  4142d4:	mov    ebx,0xfe5d8107
  4142d9:	dec    eax
  4142da:	mov    esi,0xe16c766d
  4142df:	sbb    eax,0x889143a
  4142e4:	push   esi
  4142e5:	jo     0x414295
  4142e7:	fsubp  st(4),st
  4142e9:	scas   al,BYTE PTR es:[edi]
  4142ea:	ror    edx,0x91
  4142ed:	xchg   esi,eax
  4142ee:	xor    ah,ah
  4142f0:	mov    edx,0xd7c1fcc8
  4142f5:	cmp    esp,DWORD PTR ds:0xa5013ba5
  4142fb:	add    al,0xf4
  4142fd:	jg     0x4142dc
  4142ff:	add    al,0x5c
  414301:	stc    
  414302:	dec    eax
  414303:	xchg   esi,eax
  414304:	in     al,dx
  414305:	inc    edx
  414306:	sbb    al,BYTE PTR ds:0x3e109b24
  41430c:	(bad)  [ebx+0x70]
  41430f:	jmp    0x2c8:0x8c421956
  414316:	test   al,0x19
  414318:	test   dl,bh
  41431a:	lods   eax,DWORD PTR ds:[esi]
  41431b:	xor    ecx,DWORD PTR [eax]
  41431d:	pusha  
  41431e:	add    edx,DWORD PTR [ecx+edi*4-0x6d91f67a]
  414325:	jmp    0x414338
  414327:	pushf  
  414328:	inc    dx
  41432a:	scas   eax,DWORD PTR es:[edi]
  41432b:	sbb    al,bh
  41432d:	or     BYTE PTR [edx+0x58a6468],ch
  414333:	jecxz  0x414374
  414335:	(bad)  
  414336:	mov    bh,0x83
  414338:	fild   QWORD PTR [ebp-0x51a4af34]
  41433e:	fidivr DWORD PTR [ecx+0x7]
  414341:	xor    bl,BYTE PTR [edi-0x6d]
  414344:	jle    0x414337
  414346:	push   ebx
  414347:	inc    esp
  414348:	sti    
  414349:	and    DWORD PTR [eax-0x2393abcf],ecx
  41434f:	inc    ebp
  414350:	jp     0x4143d1
  414352:	sbb    ah,BYTE PTR ds:0x60e76ca3
  414358:	mov    dl,0x28
  41435a:	(bad)  
  41435c:	imul   esp,esp,0xffffffc3
  41435f:	iret   
  414360:	fidivr DWORD PTR [edi+0x65e584e9]
  414366:	xchg   ebp,eax
  414367:	mov    ebp,0x66cb51a4
  41436c:	rol    BYTE PTR ds:0x51c3654c,cl
  414372:	int3   
  414373:	mov    eax,ds:0x1dee8b7d
  414378:	and    eax,DWORD PTR [ebx-0x13]
  41437b:	icebp  
  41437c:	adc    al,0x0
  41437e:	lock mov dl,0x72
  414381:	cmp    bh,BYTE PTR [esi+0x3f]
  414384:	aam    0x6
  414386:	adc    DWORD PTR [eax],edi
  414388:	push   esp
  414389:	ret    
  41438a:	add    DWORD PTR [esi-0x4e],0x30c20cf8
  414391:	mov    esp,0xb325500b
  414396:	loop   0x414377
  414398:	jnp    0x4143f2
  41439a:	rol    BYTE PTR [esi-0x2144e720],0xc7
  4143a1:	shl    BYTE PTR [ebp-0x15158150],0x4a
  4143a8:	xor    BYTE PTR [ebx+0xb],bh
  4143ab:	adc    BYTE PTR ds:0x72c1b1f1,al
  4143b1:	ret    0x974a
  4143b4:	or     ebp,ecx
  4143b6:	fld    TBYTE PTR [esi]
  4143b8:	jns    0x41435b
  4143ba:	jmp    DWORD PTR [ebp+0xb02f4d1]
  4143c0:	fwait
  4143c1:	in     al,dx
  4143c2:	dec    edi
  4143c3:	stos   DWORD PTR es:[edi],eax
  4143c4:	inc    ebx
  4143c5:	stc    
  4143c6:	repnz mov ds:0xf80c4fd0,al
  4143cc:	push   edi
  4143cd:	push   edi
  4143ce:	mul    DWORD PTR ds:0xb543173f
  4143d4:	push   eax
  4143d5:	fwait
  4143d6:	std    
  4143d7:	popf   
  4143d8:	icebp  
  4143d9:	daa    
  4143da:	add    DWORD PTR [edx],ebp
  4143dc:	add    DWORD PTR [ebx-0x2],esi
  4143df:	fisub  WORD PTR [ebx-0x1c]
  4143e2:	add    ch,BYTE PTR [edi-0x7e]
  4143e5:	out    0x4b,eax
  4143e7:	add    edi,DWORD PTR ds:0xa69ca795
  4143ed:	fwait
  4143ee:	xchg   edx,eax
  4143ef:	pop    eax
  4143f0:	jae    0x4143c1
  4143f2:	mov    eax,0xb1f2e72d
  4143f7:	xor    ecx,DWORD PTR [esi+0x39cad455]
  4143fd:	loopne 0x4143b6
  4143ff:	fisubr WORD PTR [ecx]
  414401:	cmp    DWORD PTR ds:0xd8ba9fe8,ecx
  414407:	xchg   ebp,eax
  414408:	adc    DWORD PTR ds:0x359eb7fd,esp
  41440e:	ret    
  41440f:	jecxz  0x41448b
  414411:	push   edx
  414412:	stc    
  414413:	pop    edi
  414414:	dec    esi
  414415:	push   ds
  414416:	nop
  414417:	push   ecx
  414418:	inc    edx
  414419:	sub    esi,ecx
  41441b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441c:	dec    esi
  41441d:	jbe    0x414442
  41441f:	sti    
  414420:	jmp    0x4143f6
  414422:	sbb    eax,0xa091ede2
  414427:	retf   0xe6ec
  41442a:	ss popf 
  41442c:	mov    ds:0xde6a792e,al
  414431:	or     al,0xab
  414433:	adc    eax,0x96826cd8
  414438:	and    al,0x73
  41443a:	and    ebx,DWORD PTR [edi+0x9]
  41443d:	inc    edi
  41443e:	cwde   
  41443f:	add    al,0x55
  414441:	lea    ebx,[esi-0x3c]
  414444:	xor    DWORD PTR ds:0x29cebd84,ebx
  41444a:	inc    ebp
  41444b:	inc    edx
  41444c:	push   ss
  41444d:	shl    dl,1
  41444f:	ds aas 
  414451:	xor    DWORD PTR [ebx-0x16dbc343],esp
  414457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414458:	stos   DWORD PTR es:[edi],eax
  414459:	mov    DWORD PTR [eax],esi
  41445b:	cmp    BYTE PTR [edi+0x7c],dl
  41445e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41445f:	shl    DWORD PTR [eax+0x40],1
  414462:	mov    esp,ebp
  414464:	pop    eax
  414465:	xchg   esp,eax
  414466:	sub    dl,BYTE PTR [esi]
  414468:	pop    es
  414469:	loope  0x414490
  41446b:	dec    ebx
  41446c:	inc    ebp
  41446d:	iret   
  41446e:	lds    ebx,FWORD PTR [ebx]
  414470:	imul   ebp,esi,0x9035aa2a
  414476:	fld    DWORD PTR [edi+0x21]
  414479:	pandn  mm5,QWORD PTR [esi-0x69112154]
  414480:	nop
  414481:	mov    WORD PTR [esi-0x48],gs
  414484:	(bad)  [edx]
  414486:	mov    ch,BYTE PTR [ebx-0xa]
  414489:	and    ebp,DWORD PTR [edi+edi*2+0x7a]
  41448d:	or     al,0x6a
  41448f:	mov    eax,ds:0x69c329d3
  414494:	(bad)  
  414495:	rcl    DWORD PTR [edi+0x53693d4e],cl
  41449b:	add    DWORD PTR [ebx+0x42],ecx
  41449e:	(bad)  
  4144a0:	imul   ebx,DWORD PTR [edx],0x4071e882
  4144a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a7:	outs   dx,DWORD PTR ds:[esi]
  4144a8:	stc    
  4144a9:	or     edx,0x5b4022db
  4144af:	clc    
  4144b0:	jnp    0x414481
  4144b2:	adc    BYTE PTR [ebp+0x1b],0xcb
  4144b6:	mov    cl,0xd0
  4144b8:	sub    BYTE PTR [edx+esi*4+0x1c],dh
  4144bc:	dec    eax
  4144bd:	je     0x4144a8
  4144bf:	leave  
  4144c0:	dec    edx
  4144c1:	xchg   ebp,eax
  4144c2:	push   edx
  4144c3:	icebp  
  4144c4:	(bad)  
  4144c5:	pop    ecx
  4144c6:	ret    
  4144c7:	out    dx,eax
  4144c8:	fild   WORD PTR [ebx]
  4144ca:	mov    dh,0x50
  4144cc:	jbe    0x414450
  4144ce:	push   ds
  4144cf:	or     al,0x41
  4144d1:	add    eax,0x4d2784e
  4144d6:	cmp    BYTE PTR [ebx+0x13],ch
  4144d9:	sbb    BYTE PTR [ebx],cl
  4144db:	or     cl,0x24
  4144de:	or     BYTE PTR [ecx],dl
  4144e0:	rcpps  xmm7,XMMWORD PTR [esp+ebp*4+0x47]
  4144e5:	sub    DWORD PTR [esi+0x1f2d3fd2],edi
  4144eb:	test   eax,0xc9665a0e
  4144f0:	push   ds
  4144f1:	imul   ebp,DWORD PTR ds:0xf7fac062,0xc1292a3
  4144fb:	lods   eax,DWORD PTR ds:[esi]
  4144fc:	jmp    0x56a7:0x8623aa74
  414503:	jne    0x4144a8
  414505:	dec    ebx
  414506:	mov    edx,0xb59254a2
  41450b:	in     eax,0x12
  41450d:	or     esp,ecx
  41450f:	push   esp
  414510:	jno    0x414571
  414512:	push   esp
  414513:	test   al,0xa2
  414515:	adc    ch,BYTE PTR [bp+si]
  414518:	fsubr  QWORD PTR [edx+0x1e]
  41451b:	daa    
  41451c:	xchg   esp,eax
  41451d:	add    cl,BYTE PTR [ebx+esi*1-0x2e]
  414521:	les    ebp,FWORD PTR [ebp-0x6bc729a5]
  414527:	int    0x5f
  414529:	aas    
  41452a:	dec    ebx
  41452b:	fdivr  st(0),st
  41452d:	lods   al,BYTE PTR ds:[esi]
  41452e:	pop    DWORD PTR [ebx]
  414530:	(bad)  
  414531:	fs xchg ecx,eax
  414533:	pop    ebx
  414534:	sub    eax,0x7c8c4e37
  414539:	int3   
  41453a:	jns    0x4144d9
  41453c:	rcr    BYTE PTR [ebp+0x4669ebba],0xc
  414543:	sar    BYTE PTR [edx-0x5a54f55b],cl
  414549:	ins    BYTE PTR es:[edi],dx
  41454a:	lea    ebp,[edi-0x199f8873]
  414550:	jmp    0x5936c2b3
  414555:	push   0xe865ae8b
  41455a:	sti    
  41455b:	imul   edi,DWORD PTR [edx+ebp*8-0xca70530],0x65
  414563:	dec    edi
  414564:	push   ebp
  414565:	mov    ebx,fs
  414567:	or     BYTE PTR [ebx],ah
  414569:	clc    
  41456a:	mov    cs,WORD PTR [eax+ecx*2+0x58]
  41456e:	mov    esi,0xeacb80ae
  414573:	dec    ebp
  414574:	push   ds
  414575:	cmp    BYTE PTR [esi+0x23],ch
  414578:	jle    0x4145e6
  41457a:	sbb    eax,0xdbeb60f6
  41457f:	xor    DWORD PTR [ebx+ecx*2],esp
  414582:	jge    0x414512
  414584:	ja     0x414542
  414586:	dec    ecx
  414587:	in     eax,0xf9
  414589:	cmp    BYTE PTR [ebx],ah
  41458b:	call   0xa94d:0x29c166e4
  414592:	pop    edx
  414593:	or     eax,0x308ae321
  414598:	shl    bl,0x7e
  41459b:	or     al,0x3
  41459d:	loopne 0x41458d
  41459f:	xor    al,0x74
  4145a1:	int3   
  4145a2:	adc    BYTE PTR ds:0x6fc1ac15,bh
  4145a8:	push   ecx
  4145a9:	cmp    BYTE PTR [esi+0x53],0x45
  4145ad:	mov    ds:0x18c1bc97,eax
  4145b2:	div    BYTE PTR [eax-0x1f]
  4145b5:	cmp    eax,0xa04b2011
  4145ba:	xchg   DWORD PTR [ecx+0x4c],eax
  4145bd:	dec    ebx
  4145be:	and    BYTE PTR [ebx],bl
  4145c0:	lahf   
  4145c1:	mov    ebp,0xf372f0b9
  4145c6:	jmp    0x414564
  4145c8:	retf   
  4145c9:	or     al,0xf1
  4145cb:	mov    bl,0x2c
  4145cd:	pop    esp
  4145ce:	hlt    
  4145cf:	fst    DWORD PTR [edx]
  4145d1:	adc    eax,0xb98dddee
  4145d6:	jmp    0x6305:0x92f2aaae
  4145dd:	sbb    DWORD PTR [ebx+0x72426668],0x4d
  4145e4:	jno    0x414592
  4145e6:	aaa    
  4145e7:	adc    al,0x6f
  4145e9:	jnp    0x414648
  4145eb:	pop    esi
  4145ec:	or     edx,ebx
  4145ee:	pop    ss
  4145ef:	cs imul edx,ebp,0xffffffb1
  4145f3:	add    BYTE PTR [ecx-0x4cb9660b],dl
  4145f9:	scas   al,BYTE PTR es:[edi]
  4145fa:	inc    edi
  4145fb:	mov    ?,WORD PTR [edx]
  4145fd:	ins    BYTE PTR es:[edi],dx
  4145fe:	ret    
  4145ff:	push   eax
  414600:	mov    ah,0x68
  414602:	or     dh,BYTE PTR [edx-0x14fb1d70]
  414608:	lods   al,BYTE PTR ds:[esi]
  414609:	hlt    
  41460a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41460b:	or     DWORD PTR [ebp+0x34],ebp
  41460e:	icebp  
  41460f:	lods   eax,DWORD PTR ds:[esi]
  414610:	(bad)  [esi+0x45aa1266]
  414616:	or     DWORD PTR [eax+eax*1],esp
  414619:	fcom   st(2)
  41461b:	xchg   edi,eax
  41461c:	dec    edx
  41461d:	adc    al,0x11
  41461f:	scas   eax,DWORD PTR es:[edi]
  414620:	cmp    DWORD PTR [ebp+0x59361715],edi
  414626:	enter  0x9d60,0x2b
  41462a:	enter  0x3312,0x41
  41462e:	stos   DWORD PTR es:[edi],eax
  41462f:	mov    DWORD PTR [esi-0x74d5912a],ecx
  414635:	mul    DWORD PTR [ecx]
  414637:	leave  
  414638:	mov    cl,0xce
  41463a:	fisub  DWORD PTR [edi]
  41463c:	lock fistp QWORD PTR [edx-0x7916415]
  414643:	out    0xaf,al
  414645:	ficomp WORD PTR [eax]
  414647:	lods   al,BYTE PTR ds:[esi]
  414648:	sbb    al,0x5f
  41464a:	stc    
  41464b:	inc    ebp
  41464c:	int    0x8d
  41464e:	test   al,0xca
  414650:	xor    esi,0x7a
  414653:	inc    ebx
  414654:	xor    ch,al
  414656:	jmp    0xcaff:0x92fceae9
  41465d:	ror    DWORD PTR [edx+0x73],0xc4
  414661:	inc    ecx
  414662:	scas   eax,DWORD PTR es:[edi]
  414663:	inc    edx
  414664:	inc    ecx
  414665:	test   eax,0x24c7b9a2
  41466a:	std    
  41466b:	cli    
  41466c:	in     al,dx
  41466d:	mov    ch,0x4c
  41466f:	(bad)  
  414670:	mov    ds:0xfb58935f,al
  414675:	fld    DWORD PTR [edx-0x65]
  414678:	jge    0x414600
  41467a:	xchg   ebp,eax
  41467b:	adc    BYTE PTR [edx],ch
  41467d:	adc    edx,DWORD PTR [edx-0x21f9e680]
  414683:	gs ret 
  414685:	sbb    dl,BYTE PTR [edi+eiz*2-0x2e910485]
  41468c:	shl    BYTE PTR [esi-0x34],1
  41468f:	or     esp,DWORD PTR [ecx]
  414691:	inc    edx
  414692:	out    dx,eax
  414693:	xor    al,0x3d
  414695:	mov    dl,0x16
  414697:	jp     0x414696
  414699:	inc    esp
  41469a:	test   eax,0xbe6fc41e
  41469f:	sbb    DWORD PTR [edx-0x13],esp
  4146a2:	and    eax,0xdfc89291
  4146a7:	xor    BYTE PTR [edx+0x736a07fd],bh
  4146ad:	mov    ecx,0x94c1ebb9
  4146b2:	shl    edi,1
  4146b4:	shr    BYTE PTR ds:0xa5bcaef6,0x9f
  4146bb:	lods   eax,DWORD PTR ds:[esi]
  4146bc:	dec    ecx
  4146bd:	in     eax,0x10
  4146bf:	jnp    0x4146c4
  4146c1:	jae    0x414646
  4146c3:	in     eax,dx
  4146c4:	dec    esi
  4146c5:	mov    gs,eax
  4146c7:	and    eax,DWORD PTR [edi+eiz*2]
  4146ca:	popa   
  4146cb:	into   
  4146cc:	pop    edx
  4146cd:	dec    ebx
  4146ce:	sub    edx,esp
  4146d0:	ss icebp 
  4146d2:	sbb    eax,0xf047440d
  4146d7:	ds aas 
  4146d9:	std    
  4146da:	or     ebp,esi
  4146dc:	cmc    
  4146dd:	push   esp
  4146de:	lock dec eax
  4146e0:	pop    ds
  4146e1:	push   ds
  4146e2:	out    0xa,al
  4146e4:	shr    DWORD PTR [edi],0xb4
  4146e7:	push   esi
  4146e8:	call   0x52b3c3be
  4146ed:	or     ah,dh
  4146ef:	xchg   esi,eax
  4146f0:	and    BYTE PTR [esi-0x6],bh
  4146f3:	ins    BYTE PTR es:[edi],dx
  4146f4:	out    0xca,eax
  4146f6:	add    eax,0x72be1cf2
  4146fb:	lea    edx,[edi-0x42]
  4146fe:	mov    cs,esi
  414700:	jl     0x41469c
  414702:	test   ecx,0xa311a3fc
  414708:	sahf   
  414709:	and    ah,BYTE PTR [esi-0x23c9c58f]
  41470f:	push   ebp
  414710:	inc    ecx
  414711:	sub    esi,DWORD PTR [edx-0x28]
  414714:	rol    edi,0xbe
  414717:	ja     0x41471c
  414719:	adc    eax,0x3ea45df6
  41471e:	ret    
  41471f:	push   0xffffff9b
  414721:	dec    ebp
  414722:	test   BYTE PTR ss:[ecx-0x5d],cl
  414726:	or     BYTE PTR [ecx],al
  414728:	xorps  xmm1,XMMWORD PTR [esi+0x4c9b4705]
  41472f:	dec    ebp
  414730:	mov    dl,0x44
  414732:	cmc    
  414733:	mov    eax,0x74643525
  414738:	outs   dx,DWORD PTR ds:[esi]
  414739:	cdq    
  41473a:	sub    esp,DWORD PTR [edi-0x5ebef56e]
  414740:	mov    bh,0x6b
  414742:	add    DWORD PTR [edi-0x6cf90d1a],edx
  414748:	(bad)  
  414749:	fwait
  41474a:	out    dx,eax
  41474b:	fwait
  41474c:	lods   eax,DWORD PTR ds:[esi]
  41474d:	pop    eax
  41474e:	mov    edi,0xcb239edc
  414753:	imul   ecx,DWORD PTR [ebp+0x406dde0c],0xffffffbf
  41475a:	push   eax
  41475b:	sbb    eax,0xae00a2d5
  414760:	ss push edx
  414762:	jle    0x414786
  414764:	in     al,dx
  414765:	(bad)  
  414766:	mov    dh,0xc
  414768:	add    eax,0x890d347e
  41476d:	daa    
  41476e:	mov    esp,0xe0129fc0
  414773:	jp     0x41476d
  414775:	stos   DWORD PTR es:[edi],eax
  414776:	mov    WORD PTR [esp+ecx*1-0x30],ds
  41477a:	xchg   ebx,eax
  41477b:	adc    edi,0x89e5fad
  414781:	loop   0x414777
  414783:	stos   BYTE PTR es:[edi],al
  414784:	(bad)  
  414786:	sub    cl,dl
  414788:	adc    BYTE PTR [ecx-0x6d],0x7f
  41478c:	jnp    0x414739
  41478e:	xor    bh,cl
  414790:	jl     0x414767
  414792:	adc    ch,BYTE PTR [ecx+0x6a]
  414795:	add    al,0x5e
  414797:	std    
  414798:	or     al,al
  41479a:	test   edi,esp
  41479c:	dec    edx
  41479d:	sbb    DWORD PTR [esi+ebx*1],ebp
  4147a0:	dec    edi
  4147a1:	sti    
  4147a2:	popf   
  4147a3:	(bad)  
  4147a4:	jno    0x414727
  4147a6:	dec    edi
  4147a7:	sbb    DWORD PTR [esi+0x32],ebx
  4147aa:	jge    0x4147d0
  4147ac:	jne    0x41477b
  4147ae:	scas   eax,DWORD PTR es:[edi]
  4147af:	or     al,0xec
  4147b1:	and    bh,cl
  4147b3:	rcr    DWORD PTR [edx],0xc7
  4147b6:	and    eax,0x54349465
  4147bb:	nop
  4147bc:	cmp    al,0x18
  4147be:	xor    al,0xb4
  4147c0:	mov    ah,0x3b
  4147c2:	push   edi
  4147c3:	push   cs
  4147c4:	add    BYTE PTR [esi+eax*4+0x7c7e639d],0xb3
  4147cc:	and    al,0x7b
  4147ce:	push   ds
  4147cf:	pop    edx
  4147d0:	and    bh,BYTE PTR [eax+0x64]
  4147d3:	adc    dl,BYTE PTR [eax+eiz*8-0x7e488416]
  4147da:	test   BYTE PTR [ecx+edx*2-0x65b13d1],dl
  4147e1:	and    eax,0xf7fe9589
  4147e6:	jl     0x4147ab
  4147e8:	add    cl,BYTE PTR [edx]
  4147ea:	add    al,0x1f
  4147ec:	sbb    al,0x57
  4147ee:	mov    dh,0xa2
  4147f0:	sbb    edx,DWORD PTR ss:[esi]
  4147f3:	arpl   WORD PTR [ebx],cx
  4147f5:	sahf   
  4147f6:	or     DWORD PTR [eax-0x5121ed72],0xcd9c59eb
  414800:	inc    eax
  414801:	xor    DWORD PTR [ebx+0x2a],0x193cc46f
  414808:	add    eax,DWORD PTR [ecx]
  41480a:	sar    BYTE PTR [eax+0x6c],cl
  41480d:	outs   dx,BYTE PTR ds:[esi]
  41480e:	dec    ebx
  41480f:	aam    0xdd
  414811:	test   DWORD PTR [ebx],ebp
  414813:	fwait
  414814:	inc    esp
  414815:	pop    ebp
  414816:	mov    edi,DWORD PTR [esi+0x75e8188f]
  41481c:	cdq    
  41481d:	ret    
  41481e:	shl    ah,cl
  414820:	sub    DWORD PTR [eax-0x31e7ed1],ebx
  414826:	stc    
  414827:	dec    edx
  414828:	adc    ebx,DWORD PTR [ebx+edx*2-0x6e]
  41482c:	xlat   BYTE PTR ds:[ebx]
  41482d:	ja     0x41481c
  41482f:	(bad)  
  414830:	mov    DWORD PTR [ebx],0x9c89294a
  414836:	add    esp,DWORD PTR [eax]
  414838:	xchg   edi,eax
  414839:	ja     0x41485e
  41483b:	je     0x4147fe
  41483d:	sbb    al,0xb2
  41483f:	pusha  
  414840:	or     al,0x6d
  414842:	pusha  
  414843:	ret    
  414844:	jne    0x414887
  414846:	push   eax
  414847:	sub    BYTE PTR [ecx+0x2a],dl
  41484a:	cwde   
  41484b:	int    0xe4
  41484d:	pop    ecx
  41484e:	xor    al,0xc0
  414850:	mov    cs,ebx
  414852:	lea    edx,[ebp+0x7e]
  414855:	cmp    BYTE PTR [eax],dh
  414857:	jl     0x41485e
  414859:	ret    
  41485a:	icebp  
  41485b:	es jo  0x414841
  41485e:	test   DWORD PTR [eax-0x4e],ebp
  414861:	jmp    0x414851
  414863:	mov    ah,0x34
  414865:	dec    esi
  414866:	sahf   
  414867:	cs dec eax
  414869:	stos   BYTE PTR es:[edi],al
  41486a:	idiv   cl
  41486c:	mov    edx,0xef4ba2d0
  414871:	(bad)  
  414872:	repz add al,BYTE PTR [ecx]
  414875:	inc    esi
  414876:	xor    ebp,DWORD PTR [esi]
  414878:	jnp    0x4148cf
  41487a:	or     DWORD PTR [edx+0x5244f770],esp
  414880:	mov    BYTE PTR [di+0x1200],bh
  414885:	(bad)  
  414886:	adc    dl,bl
  414888:	push   0x2258a28c
  41488d:	add    eax,0x45277d15
  414892:	xor    edi,edx
  414894:	inc    ebx
  414895:	mov    bh,0x33
  414897:	ds push eax
  414899:	(bad)  
  41489a:	icebp  
  41489b:	je     0x4148dc
  41489d:	push   ebx
  41489e:	js     0x414867
  4148a0:	cmp    al,0x30
  4148a2:	mov    ch,0x1a
  4148a4:	and    bh,BYTE PTR [ebx+0x6ec0c273]
  4148aa:	mov    cl,0xc8
  4148ac:	mov    WORD PTR [esi],ds
  4148ae:	stos   DWORD PTR es:[edi],eax
  4148af:	sbb    bl,dh
  4148b1:	sub    esp,DWORD PTR [eax]
  4148b3:	lea    edi,[edi-0xa05f19a]
  4148b9:	and    DWORD PTR ds:0x9826c2a8,ecx
  4148bf:	mov    WORD PTR [edx],fs
  4148c1:	ffree  st(1)
  4148c3:	shl    ebp,cl
  4148c5:	mov    al,0x36
  4148c7:	test   edx,edx
  4148c9:	in     eax,0xe5
  4148cb:	jo     0x414857
  4148cd:	dec    esi
  4148ce:	sbb    al,BYTE PTR ds:0xa490bcca
  4148d4:	pop    esp
  4148d5:	push   ebp
  4148d6:	lods   eax,DWORD PTR ds:[esi]
  4148d7:	jle    0x4148b8
  4148d9:	pushf  
  4148da:	into   
  4148db:	dec    ecx
  4148dc:	mov    DWORD PTR [ecx-0x7a],esi
  4148df:	mov    edx,0xee98bb5e
  4148e4:	dec    edi
  4148e5:	jne    0x41491e
  4148e7:	add    eax,0x5457354f
  4148ec:	std    
  4148ed:	xchg   ecx,eax
  4148ee:	imul   eax,ecx,0xf93ba22c
  4148f4:	hlt    
  4148f5:	xchg   ebp,edx
  4148f7:	(bad)  
  4148f8:	jno    0x4148cd
  4148fa:	frstor [edx+0x61aba5c5]
  414900:	sub    eax,0x6dae4f98
  414905:	ins    BYTE PTR es:[edi],dx
  414906:	imul   BYTE PTR [edi]
  414908:	xor    ebp,DWORD PTR [eax-0x3ca13514]
  41490e:	lea    esp,[ebx-0x47]
  414911:	push   0x4580a0e8
  414916:	sbb    eax,0x98b8094b
  41491b:	pop    esi
  41491c:	popa   
  41491d:	lods   al,BYTE PTR ds:[esi]
  41491e:	retf   
  41491f:	(bad)  
  414920:	cmc    
  414921:	push   0xb462c006
  414926:	and    eax,0x8752fef9
  41492b:	mov    ds:0x1d5fb0c8,eax
  414930:	sub    ebx,DWORD PTR [ecx+ebp*8]
  414933:	aad    0xfe
  414935:	pop    eax
  414936:	push   0x72
  414938:	retf   
  414939:	add    eax,0x3e62728b
  41493e:	pop    eax
  41493f:	inc    ebx
  414940:	mov    BYTE PTR [edi],bl
  414942:	aas    
  414943:	sahf   
  414944:	rol    DWORD PTR [ebx+0x5d5169e5],1
  41494a:	aaa    
  41494b:	pop    esp
  41494c:	adc    BYTE PTR [esi-0x26],cl
  41494f:	out    dx,al
  414950:	cmp    al,0x9d
  414952:	cdq    
  414953:	daa    
  414954:	outs   dx,BYTE PTR ds:[esi]
  414955:	fsub   QWORD PTR [esi]
  414957:	add    eax,0x1ee9d09a
  41495c:	lahf   
  41495d:	jp     0x4149c5
  41495f:	sbb    BYTE PTR [edx],0x2e
  414962:	push   edi
  414963:	mov    WORD PTR [ecx-0x24],?
  414966:	sti    
  414967:	or     al,0xb7
  414969:	pop    es
  41496a:	outs   dx,BYTE PTR ds:[esi]
  41496b:	in     eax,0x4a
  41496d:	push   esp
  41496e:	inc    esp
  41496f:	lods   al,BYTE PTR ds:[esi]
  414970:	add    DWORD PTR [eax-0x192c1dba],ecx
  414976:	xor    ebp,DWORD PTR [esi+0x2bd3e480]
  41497c:	jecxz  0x414910
  41497e:	or     DWORD PTR [edx-0x1dc94307],edx
  414984:	mov    WORD PTR [ebp+0x5d],fs
  414987:	int    0x2a
  414989:	xchg   BYTE PTR [edi-0x43ece704],dh
  41498f:	cs cmp eax,0xdc1c3ee3
  414995:	int    0x0
  414997:	mov    eax,ds:0x6ac2c2dc
  41499c:	jl     0xd212e170
  4149a2:	mov    ebp,0xc98dad62
  4149a7:	cmp    BYTE PTR [eax-0x200f2c46],0x73
  4149ae:	push   edi
  4149af:	add    al,BYTE PTR [edx+0x57]
  4149b2:	je     0x414a01
  4149b4:	(bad)  
  4149b5:	call   0xbe6f44a0
  4149ba:	daa    
  4149bb:	rcr    DWORD PTR [ebx+esi*8],0xc4
  4149bf:	pop    ds
  4149c0:	scas   al,BYTE PTR es:[edi]
  4149c1:	mov    cs,esi
  4149c3:	enter  0xc1aa,0x26
  4149c7:	xchg   esi,eax
  4149c8:	clc    
  4149c9:	mov    eax,0x3a7463a7
  4149ce:	jle    0x414a40
  4149d0:	adc    eax,0xdd567cf1
  4149d5:	nop
  4149d6:	inc    ebx
  4149d7:	sub    DWORD PTR [edx+0x10],ecx
  4149da:	shl    ch,cl
  4149dc:	cdq    
  4149dd:	jp     0x414a3b
  4149df:	mov    al,0x80
  4149e1:	lods   al,BYTE PTR ds:[esi]
  4149e2:	sub    ch,dh
  4149e4:	xchg   esp,eax
  4149e5:	outs   dx,BYTE PTR ds:[esi]
  4149e6:	inc    esp
  4149e7:	jle    0x4149d0
  4149e9:	lods   eax,DWORD PTR ds:[esi]
  4149ea:	sbb    bh,BYTE PTR [edx+0x9]
  4149ed:	scas   al,BYTE PTR es:[edi]
  4149ee:	sub    ch,dh
  4149f0:	cmp    eax,0x41e81430
  4149f5:	adc    ebx,DWORD PTR [ecx-0x66531b0a]
  4149fb:	mov    ebx,0x78c92cd3
  414a00:	aam    0xdd
  414a02:	fbstp  TBYTE PTR [esi+0x45]
  414a05:	xlat   BYTE PTR ds:[ebx]
  414a06:	fucom  st(4)
  414a08:	and    DWORD PTR ds:0x52c86285,edi
  414a0e:	fdivp  st(6),st
  414a10:	iret   
  414a11:	aam    0x25
  414a13:	mov    bl,0x3c
  414a15:	mul    BYTE PTR [ebx+eax*1+0x57]
  414a19:	mov    ecx,0xb3af4f1
  414a1e:	jecxz  0x4149cd
  414a20:	mov    ah,0x8e
  414a22:	sbb    ch,BYTE PTR [esi+0x2d1076fc]
  414a28:	cwde   
  414a29:	xlat   BYTE PTR ds:[ebx]
  414a2a:	out    0xf4,eax
  414a2c:	push   0xffffffcb
  414a2e:	fidiv  WORD PTR [ebp-0x4c5080d3]
  414a34:	pop    ss
  414a35:	mov    eax,0xee874da2
  414a3a:	or     eax,0xcb82bdaf
  414a3f:	outs   dx,DWORD PTR ds:[esi]
  414a40:	(bad)
  414a44:	or     DWORD PTR [edi],edi
  414a46:	sub    esi,DWORD PTR [ebx]
  414a48:	xchg   ebx,eax
  414a49:	ss xchg ecx,eax
  414a4b:	aad    0x20
  414a4d:	sub    BYTE PTR [ebp-0xbba0ac6],dl
  414a53:	leave  
  414a54:	popf   
  414a55:	pop    esi
  414a56:	aaa    
  414a57:	popa   
  414a58:	pop    eax
  414a59:	pop    eax
  414a5a:	pop    eax
  414a5b:	outs   dx,BYTE PTR ds:[esi]
  414a5c:	push   0x7c
  414a5e:	or     BYTE PTR [edx+edx*8],al
  414a61:	mov    edi,0x31b8ba5e
  414a66:	xchg   edx,eax
  414a67:	retf   0x5f0
  414a6a:	mov    BYTE PTR [edx-0x5d74fcdf],bl
  414a70:	mov    eax,ds:0x1527b754
  414a75:	sbb    eax,0x971f099c
  414a7a:	cmp    eax,DWORD PTR [edi-0x2f895844]
  414a80:	stos   BYTE PTR es:[edi],al
  414a81:	arpl   ax,bx
  414a83:	cmp    eax,0xef618
  414a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a89:	(bad)  
  414a8a:	dec    ebx
  414a8b:	mov    al,0x57
  414a8d:	loopne 0x414ab8
  414a8f:	cli    
  414a90:	mov    ch,BYTE PTR ds:0xbc71c8d6
  414a96:	cmp    edi,DWORD PTR ds:0xf95aa7f9
  414a9c:	sub    BYTE PTR [edi+eiz*4+0x4c],ch
  414aa0:	adc    edi,ebx
  414aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa3:	dec    ecx
  414aa4:	(bad)  
  414aa6:	jnp    0x414a8c
  414aa8:	popa   
  414aa9:	pop    ss
  414aaa:	in     al,dx
  414aab:	pushf  
  414aac:	sub    dh,cl
  414aae:	jl     0x414a57
  414ab0:	out    dx,al
  414ab1:	push   ebp
  414ab2:	js     0x414a8d
  414ab4:	mov    ecx,0xfc5b4974
  414ab9:	cmp    ah,ch
  414abb:	mov    dl,0x94
  414abd:	test   eax,0xdb79aac8
  414ac2:	push   cs
  414ac3:	mov    eax,0x2b65cacc
  414ac8:	push   ss
  414ac9:	xor    bh,BYTE PTR [ecx-0x7e]
  414acc:	cs daa 
  414ace:	add    BYTE PTR [edi+0x7d01a385],ah
  414ad4:	mov    esi,0x88846dc0
  414ad9:	out    0xd9,al
  414adb:	adc    edx,DWORD PTR [ecx+0x66782c32]
  414ae1:	(bad)  
  414ae2:	push   ds
  414ae3:	out    dx,eax
  414ae4:	loopne 0x414b21
  414ae6:	div    DWORD PTR [ebx-0x74]
  414ae9:	loop   0x414b4c
  414aeb:	lock and esp,ecx
  414aee:	jp     0x414aa1
  414af0:	pop    ebp
  414af1:	push   edi
  414af2:	inc    edi
  414af3:	fldenv [eax+0x3f85c5f0]
  414af9:	sbb    BYTE PTR [edi+0x53ef8afd],0x1a
  414b00:	fsub   st(5),st
  414b02:	push   ebx
  414b03:	iret   
  414b04:	dec    ebx
  414b05:	popa   
  414b06:	and    al,0x5c
  414b08:	fidiv  DWORD PTR [ecx+0x490c1188]
  414b0e:	pop    edx
  414b0f:	std    
  414b10:	out    0x9f,eax
  414b12:	fidiv  WORD PTR [ebx-0x2e0fdbf0]
  414b18:	bound  esi,QWORD PTR [edi+0x2f2d0a62]
  414b1e:	adc    al,0xc5
  414b20:	test   eax,0x1f3ad919
  414b25:	stos   BYTE PTR es:[edi],al
  414b26:	fsubr  QWORD PTR [edi+0x44]
  414b29:	rcl    DWORD PTR [ebx-0x16],0xc1
  414b2d:	jnp    0x414b80
  414b2f:	and    esp,DWORD PTR [ebx-0x20b352a4]
  414b35:	sub    eax,DWORD PTR [ecx+0xb]
  414b38:	and    DWORD PTR [ecx+0x5a],esp
  414b3b:	out    0x4e,al
  414b3d:	adc    esp,ebp
  414b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b40:	call   DWORD PTR [edi-0x10f6a644]
  414b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b47:	scas   eax,DWORD PTR es:[edi]
  414b48:	xchg   ebp,eax
  414b49:	retf   
  414b4a:	or     edi,0x20841336
  414b50:	icebp  
  414b51:	inc    esp
  414b52:	rcl    al,cl
  414b54:	mov    ch,BYTE PTR [esp+eax*4]
  414b57:	push   ecx
  414b58:	push   ss
  414b59:	push   edx
  414b5a:	jae    0x414bd8
  414b5c:	xchg   DWORD PTR [eax+0x7e2e62da],ebp
  414b62:	inc    eax
  414b63:	fcom   DWORD PTR [ebp+0x29009880]
  414b69:	mov    ah,0x25
  414b6b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  414b6d:	pusha  
  414b6e:	pushfw 
  414b70:	dec    edi
  414b71:	dec    esp
  414b72:	add    al,0x3e
  414b74:	mov    ebp,0x9bf22e22
  414b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b7a:	inc    ebx
  414b7b:	jmp    0x4063:0xdec62b37
  414b82:	push   esi
  414b83:	das    
  414b84:	mov    ebx,0xf4a26fb
  414b89:	inc    edi
  414b8a:	jmp    0xf58c:0x609bb921
  414b91:	jno    0x414b89
  414b93:	jno    0x414b60
  414b95:	enter  0x6ed1,0xb8
  414b99:	jmp    0x414c0c
  414b9b:	mov    dl,0xc9
  414b9d:	add    ebp,ebx
  414b9f:	add    eax,0xc55b6592
  414ba4:	std    
  414ba5:	or     dl,BYTE PTR [ecx]
  414ba7:	mov    dh,0x91
  414ba9:	std    
  414baa:	in     eax,dx
  414bab:	sub    edx,edi
  414bad:	add    eax,0xdbc522e3
  414bb2:	jb     0x414b3b
  414bb4:	repnz fstp TBYTE PTR [ebx-0x18998113]
  414bbb:	or     DWORD PTR [edi],esp
  414bbd:	in     al,0xd8
  414bbf:	in     al,0xc1
  414bc1:	cmp    ebx,edi
  414bc3:	out    0x28,eax
  414bc5:	jno    0x414c1a
  414bc7:	pop    edx
  414bc8:	dec    edi
  414bc9:	in     eax,0x50
  414bcb:	shr    DWORD PTR [edi],0x5a
  414bce:	(bad)  
  414bcf:	in     eax,dx
  414bd0:	pusha  
  414bd1:	(bad)  
  414bd2:	cmp    eax,0xcbe395e
  414bd7:	mov    esp,0x9512f7de
  414bdc:	inc    ebx
  414bdd:	jp     0x414bbd
  414bdf:	aam    0x19
  414be1:	add    al,0xe2
  414be3:	rcl    BYTE PTR [eax],0xff
  414be6:	jmp    FWORD PTR [esp+edi*4]
  414be9:	push   edi
  414bea:	push   edi
  414beb:	push   edx
  414bec:	out    0x62,al
  414bee:	ins    DWORD PTR es:[edi],dx
  414bef:	jno    0x414c55
  414bf1:	xchg   ebp,esp
  414bf3:	sub    BYTE PTR [eax+eax*4-0x50],dl
  414bf7:	popa   
  414bf8:	inc    ebx
  414bf9:	inc    edx
  414bfa:	mov    ch,0x75
  414bfc:	aaa    
  414bfd:	pop    edx
  414bfe:	ret    0x17da
  414c01:	dec    esp
  414c02:	inc    esp
  414c03:	imul   ebp,DWORD PTR [esi+0x720c579a],0x84ce4ea4
  414c0d:	inc    esp
  414c0e:	or     DWORD PTR [eax-0x38901590],ebx
  414c14:	imul   edi,DWORD PTR [eax+0x33a9dc7a],0xffffffdf
  414c1b:	iret   
  414c1c:	cmp    eax,0x5bd16c9e
  414c21:	push   cs
  414c22:	mov    eax,ds:0xc974cc60
  414c27:	jmp    0xfed8:0x3765a000
  414c2e:	sub    eax,ebx
  414c30:	jmp    0x2b2d00fe
  414c35:	out    dx,eax
  414c36:	xlat   BYTE PTR ds:[ebx]
  414c37:	ror    BYTE PTR [ebp-0x44],1
  414c3a:	fistp  DWORD PTR [eax+0x79e45f2d]
  414c40:	ss in  al,0xa7
  414c43:	inc    edx
  414c44:	jno    0x414bda
  414c46:	jbe    0x414cbc
  414c48:	xor    BYTE PTR [ecx],ah
  414c4a:	ins    BYTE PTR es:[edi],dx
  414c4b:	dec    eax
  414c4c:	sar    DWORD PTR [eax-0x24],0xbe
  414c50:	(bad)  
  414c51:	out    0x4a,eax
  414c53:	mov    WORD PTR [edi-0x50670f5b],gs
  414c59:	nop
  414c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c5b:	call   DWORD PTR [edx]
  414c5d:	stc    
  414c5e:	add    edi,eax
  414c60:	sahf   
  414c61:	aas    
  414c62:	stos   BYTE PTR es:[edi],al
  414c63:	(bad)  
  414c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c65:	xchg   edx,eax
  414c66:	fnstsw WORD PTR [esi]
  414c68:	ins    DWORD PTR es:[edi],dx
  414c69:	int3   
  414c6a:	mov    ah,BYTE PTR [edi+0x5e2b2d79]
  414c70:	je     0x414c7a
  414c72:	jae    0x414c4c
  414c74:	data16 (bad) 
  414c76:	aad    0x81
  414c78:	and    al,0xa0
  414c7a:	fwait
  414c7b:	jmp    0x414c44
  414c7d:	sbb    edi,0xffffffb4
  414c80:	scas   al,BYTE PTR es:[edi]
  414c81:	iret   
  414c82:	xchg   ecx,eax
  414c83:	sub    BYTE PTR [ecx],dl
  414c85:	mov    ah,0xb6
  414c87:	inc    ebx
  414c88:	pop    edi
  414c89:	sbb    al,BYTE PTR [edi+0x6f]
  414c8c:	xor    BYTE PTR [esi-0x75],bh
  414c8f:	mov    ebp,0x39bd5899
  414c94:	out    0x5d,al
  414c96:	inc    ecx
  414c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c98:	ret    0x4dc5
  414c9b:	(bad)  
  414c9c:	out    dx,al
  414c9d:	enter  0xc3d,0xa9
  414ca1:	jb     0x414c7e
  414ca3:	aaa    
  414ca4:	dec    DWORD PTR [edx-0x30]
  414ca7:	mov    dh,0x83
  414ca9:	xchg   DWORD PTR ds:0x7720e3fa,ecx
  414caf:	loop   0x414c49
  414cb1:	pop    es
  414cb2:	lahf   
  414cb3:	mov    ds:0x85e7ac64,al
  414cb8:	lds    ecx,FWORD PTR [esi-0x7a3190a8]
  414cbe:	into   
  414cbf:	mov    gs,WORD PTR [edi-0x1b]
  414cc2:	or     BYTE PTR [ecx+0x5f],0x65
  414cc6:	or     eax,0xbadd38c
  414ccb:	stc    
  414ccc:	xor    eax,esi
  414cce:	in     eax,dx
  414ccf:	sub    ecx,esi
  414cd1:	std    
  414cd2:	fwait
  414cd3:	sar    BYTE PTR [edi+0x7d],1
  414cd6:	lahf   
  414cd7:	aam    0x50
  414cd9:	and    dh,BYTE PTR [ecx]
  414cdb:	push   ecx
  414cdc:	push   edx
  414cdd:	(bad)  
  414cde:	in     al,dx
  414cdf:	sub    BYTE PTR [ebp-0x34c30635],bl
  414ce5:	mov    eax,ds:0xe336de1a
  414cea:	sbb    BYTE PTR [edi+0x74],0x1c
  414cee:	mov    ds:0xf82ddb65,eax
  414cf3:	mov    bl,ch
  414cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf6:	loopne 0x414ca7
  414cf8:	push   edi
  414cf9:	xor    al,0x2d
  414cfb:	jge    0x414d48
  414cfd:	int    0x6d
  414cff:	hlt    
  414d00:	dec    edx
  414d01:	mov    ch,0xa8
  414d03:	jnp    0x414cf7
  414d05:	cmp    eax,0x140eb694
  414d0a:	jno    0x414d5c
  414d0c:	xor    BYTE PTR [esi],ah
  414d0e:	mov    dl,al
  414d10:	out    dx,al
  414d11:	dec    ebx
  414d12:	icebp  
  414d13:	add    al,BYTE PTR gs:[edi+0x1f]
  414d17:	mov    al,0x6
  414d19:	adc    bh,BYTE PTR [ebp+ecx*2-0x792395d9]
  414d20:	cs and al,0x73
  414d23:	push   es
  414d24:	pop    es
  414d25:	sbb    BYTE PTR fs:0xab9eb46e,ah
  414d2c:	stos   BYTE PTR es:[edi],al
  414d2d:	lds    ebx,FWORD PTR [ecx+0x2472ef9b]
  414d33:	or     al,0xa1
  414d35:	pop    eax
  414d36:	xchg   edx,eax
  414d37:	sbb    cl,al
  414d39:	das    
  414d3a:	fwait
  414d3b:	dec    edx
  414d3c:	in     al,dx
  414d3d:	pop    ecx
  414d3e:	and    cl,dl
  414d40:	xlat   BYTE PTR ds:[ebx]
  414d41:	out    dx,al
  414d42:	data16 jg 0x414d6c
  414d45:	jmp    0xe128:0xece12e0f
  414d4c:	lahf   
  414d4d:	xor    eax,0xa630abd1
  414d52:	stos   BYTE PTR es:[edi],al
  414d53:	popf   
  414d54:	dec    esp
  414d55:	test   DWORD PTR [eax],ebp
  414d57:	sub    BYTE PTR [edx-0xbca8bee],cl
  414d5d:	push   edx
  414d5e:	mov    edi,0xf1f149be
  414d63:	out    dx,eax
  414d64:	and    DWORD PTR fs:[esi+0x3a],0x4f
  414d69:	mov    ebp,0xa4974d05
  414d6e:	repz jecxz 0x414d81
  414d71:	je     0x414d34
  414d73:	add    DWORD PTR [edi],0xb88952ba
  414d79:	adc    eax,0xbd975ce9
  414d7e:	and    DWORD PTR [ebx],ebx
  414d80:	div    DWORD PTR [ebp+edx*2-0x77a54201]
  414d87:	ret    0x8960
  414d8a:	std    
  414d8b:	repnz and ch,BYTE PTR [ecx]
  414d8e:	ja     0x414d2e
  414d90:	sbb    DWORD PTR [eax-0x6c10ce12],edi
  414d96:	adc    DWORD PTR [ebp-0x73],eax
  414d99:	adc    bl,bl
  414d9b:	mov    bl,0xea
  414d9d:	test   ecx,edi
  414d9f:	out    dx,al
  414da0:	scas   eax,DWORD PTR es:[edi]
  414da1:	jmp    0x4c01:0x97b7f04e
  414da8:	dec    esi
  414da9:	cwde   
  414daa:	mov    bl,0x8e
  414dac:	hlt    
  414dad:	ins    DWORD PTR es:[edi],dx
  414dae:	jns    0x414de4
  414db0:	or     al,0xf
  414db2:	idiv   ch
  414db4:	outs   dx,BYTE PTR ds:[esi]
  414db5:	or     al,0xa3
  414db7:	retf   0x2f95
  414dba:	add    eax,0xa6cbf128
  414dbf:	in     eax,dx
  414dc0:	ret    0x6077
  414dc3:	dec    ebp
  414dc4:	(bad)  
  414dc5:	out    dx,eax
  414dc6:	jnp    0x414e47
  414dc8:	fdiv   DWORD PTR [ecx+esi*1]
  414dcb:	outs   dx,BYTE PTR ds:[esi]
  414dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dcd:	scas   al,BYTE PTR es:[edi]
  414dce:	xchg   ebp,eax
  414dcf:	mov    cs,WORD PTR ds:0x69515e16
  414dd5:	and    eax,0xa6f2dcfc
  414dda:	sub    eax,0xdf97e394
  414ddf:	div    BYTE PTR [edi+edi*8+0x3b]
  414de3:	mov    BYTE PTR [eax],bh
  414de5:	and    eax,0x7c396285
  414dea:	dec    edx
  414deb:	cdq    
  414dec:	or     eax,0x2009823c
  414df1:	mov    al,0x22
  414df3:	mov    edx,0xcd3fb850
  414df8:	gs sbb al,0x8a
  414dfb:	aam    0xc4
  414dfd:	fdivr  DWORD PTR [esi-0x49439826]
  414e03:	loop   0x414e50
  414e05:	pop    eax
  414e06:	dec    esp
  414e07:	pop    ecx
  414e08:	icebp  
  414e09:	cmc    
  414e0a:	call   0x229b:0xb4aa08e3
  414e11:	xchg   esi,eax
  414e12:	xchg   esi,eax
  414e13:	out    0x92,eax
  414e15:	les    edx,FWORD PTR [esi-0x4e]
  414e18:	inc    ecx
  414e19:	cmp    BYTE PTR [edx+eiz*1-0x70e2360b],bh
  414e20:	aas    
  414e21:	out    dx,eax
  414e22:	(bad)  
  414e23:	cld    
  414e24:	sub    eax,0x3e0a2a88
  414e29:	test   al,0x9d
  414e2b:	pop    eax
  414e2c:	aad    0xc5
  414e2e:	jns    0x414ea5
  414e30:	dec    edx
  414e31:	jecxz  0x414e2e
  414e33:	retf   0x31b8
  414e36:	jns    0x414de4
  414e38:	mov    al,ds:0xc29b1b19
  414e3d:	jge    0x414e99
  414e3f:	fsub   DWORD PTR [ecx-0x43]
  414e42:	arpl   si,ax
  414e44:	fcomi  st,st(5)
  414e46:	mov    ebp,0xd8d5522c
  414e4b:	pop    esi
  414e4c:	fs mov edx,0x46a6a6d
  414e52:	add    eax,0x4b1d4f50
  414e57:	sbb    ah,dl
  414e59:	fistp  DWORD PTR [ebx]
  414e5b:	xchg   esi,eax
  414e5c:	cmp    eax,0xb7514412
  414e61:	mov    eax,ds:0x178d69a2
  414e66:	mov    cl,0x4b
  414e68:	xchg   edi,ebx
  414e6a:	cmp    ah,BYTE PTR [esi-0x16]
  414e6d:	mov    WORD PTR es:[ebp-0x71636421],ds
  414e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e75:	dec    ecx
  414e76:	mov    eax,ds:0x68c979a3
  414e7b:	nop
  414e7c:	dec    eax
  414e7d:	push   esp
  414e7e:	int3   
  414e7f:	push   ss
  414e80:	and    DWORD PTR [esi+ebp*8],ebx
  414e83:	cdq    
  414e84:	jge    0x414ec0
  414e86:	jecxz  0x414e67
  414e88:	pushf  
  414e89:	cli    
  414e8a:	add    eax,0x6382fbed
  414e8f:	or     ah,bh
  414e91:	in     al,dx
  414e92:	or     BYTE PTR [ebx-0x411ec35b],bl
  414e98:	dec    ecx
  414e99:	push   eax
  414e9a:	add    eax,0xe6e1617c
  414e9f:	add    cl,BYTE PTR [edi+0x74672318]
  414ea5:	addr16 loop 0x414e73
  414ea8:	mov    edx,eax
  414eaa:	div    bl
  414eac:	imul   ebx,esi,0x9c07ae85
  414eb2:	cmp    edx,DWORD PTR [edx]
  414eb4:	push   es
  414eb5:	lahf   
  414eb6:	(bad)  
  414eb7:	mov    al,ds:0x26a7441f
  414ebc:	repnz add ecx,DWORD PTR [esi+0x4aee0e60]
  414ec3:	xchg   esp,eax
  414ec4:	sbb    DWORD PTR cs:[eax+ebp*1-0x53632428],edx
  414ecc:	ret    
  414ecd:	les    esi,FWORD PTR [ebx]
  414ecf:	xchg   ebp,eax
  414ed0:	pop    edx
  414ed1:	cmc    
  414ed2:	inc    esi
  414ed3:	int3   
  414ed4:	cs imul esi,eax,0xfd30a6f
  414edb:	dec    esi
  414edc:	hlt    
  414edd:	shr    ch,1
  414edf:	shl    ebp,1
  414ee1:	lahf   
  414ee2:	xor    al,0x3a
  414ee4:	das    
  414ee5:	pop    eax
  414ee6:	push   ebp
  414ee7:	xor    eax,0xa17c18e
  414eec:	imul   ebx,DWORD PTR [ecx],0xfffffff5
  414eef:	loope  0x414f5a
  414ef1:	rcl    esp,cl
  414ef3:	mov    DWORD PTR [ebp-0x2],eax
  414ef6:	xchg   edx,eax
  414ef7:	inc    edi
  414ef8:	add    eax,0xc0841e7f
  414efd:	ss jo  0x414f52
  414f00:	push   ecx
  414f01:	xchg   ebp,eax
  414f02:	pop    ecx
  414f03:	(bad)  
  414f05:	push   esi
  414f06:	xchg   ebp,eax
  414f07:	pop    esp
  414f08:	fcomp  DWORD PTR [edx+0x55857982]
  414f0e:	lahf   
  414f0f:	mov    esi,0xac65cbff
  414f14:	or     al,0x5a
  414f16:	fmul   QWORD PTR [eax+ecx*1+0x76]
  414f1a:	popf   
  414f1b:	adc    al,0x1f
  414f1d:	mov    DWORD PTR [ebp+0x76a11d04],ebp
  414f23:	(bad)  
  414f25:	outs   dx,DWORD PTR ds:[esi]
  414f26:	and    edx,DWORD PTR [ebx-0x6b]
  414f29:	mov    esp,0x93e66d84
  414f2e:	fsub   DWORD PTR [esi-0x5667cca4]
  414f34:	adc    BYTE PTR [ecx+eax*4+0x7e319403],dh
  414f3b:	daa    
  414f3c:	aaa    
  414f3d:	icebp  
  414f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f3f:	fidivr DWORD PTR [ecx]
  414f41:	cmpxchg edi,edx
  414f44:	popa   
  414f45:	inc    ecx
  414f46:	addr16 push 0xbfcf0d91
  414f4c:	fwait
  414f4d:	(bad)  
  414f4e:	stc    
  414f4f:	icebp  
  414f50:	fld    TBYTE PTR [esi]
  414f52:	and    esi,DWORD PTR [edx-0x3a]
  414f55:	mov    al,0x9a
  414f57:	or     al,0xce
  414f59:	ror    DWORD PTR [edx],cl
  414f5b:	mov    ch,0x1e
  414f5d:	or     al,0xd2
  414f5f:	jp     0x414f17
  414f61:	lds    eax,FWORD PTR [esi+0x13e1475b]
  414f67:	leave  
  414f68:	test   DWORD PTR [eax-0x57],ebp
  414f6b:	outs   dx,BYTE PTR ds:[esi]
  414f6c:	mov    ah,0x75
  414f6e:	nop
  414f6f:	iret   
  414f70:	into   
  414f71:	call   0xcae16f9d
  414f76:	mov    ?,WORD PTR [edx]
  414f78:	fs jl  0x414f07
  414f7b:	mov    DWORD PTR [edi],ecx
  414f7d:	pop    ds
  414f7e:	ret    0x454f
  414f81:	out    dx,eax
  414f82:	adc    al,0x30
  414f84:	mov    DWORD PTR [ecx+0x58],esi
  414f87:	mov    edx,0x48b62b2e
  414f8c:	(bad)  
  414f8e:	pop    esp
  414f8f:	addr16 sub al,0xc8
  414f92:	xchg   edx,eax
  414f93:	(bad)  
  414f95:	rsqrtps xmm6,XMMWORD PTR [ebx-0x76]
  414f99:	jae    0x414f87
  414f9b:	pop    ebx
  414f9c:	push   DWORD PTR [esi]
  414f9e:	std    
  414f9f:	ret    
  414fa0:	repnz push 0x48
  414fa3:	add    al,0x33
  414fa5:	sti    
  414fa6:	(bad)  
  414fa7:	dec    ecx
  414fa8:	or     DWORD PTR [esi],0xcefcdc12
  414fae:	xchg   DWORD PTR [esi+edx*2+0x50f1d723],ebp
  414fb5:	fs sti 
  414fb7:	inc    ecx
  414fb8:	pop    ds
  414fb9:	call   0x7449caf1
  414fbe:	out    dx,al
  414fbf:	mov    esp,0x9800c09d
  414fc4:	mov    eax,0x7de7826b
  414fc9:	div    BYTE PTR [edx]
  414fcb:	pusha  
  414fcc:	adc    dh,BYTE PTR [edx+0x32d67506]
  414fd2:	push   eax
  414fd3:	cdq    
  414fd4:	cmp    dh,BYTE PTR [edi-0x4803cf9f]
  414fda:	clc    
  414fdb:	nop
  414fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fdd:	out    0xa6,eax
  414fdf:	dec    edi
  414fe0:	pop    ecx
  414fe1:	mov    ebx,0xb275d4ad
  414fe6:	and    ebx,DWORD PTR [eax]
  414fe8:	jp     0x41500e
  414fea:	jge    0x414ffc
  414fec:	lock xor eax,0x9b1f60f7
  414ff2:	mov    ds:0xae4faf8c,eax
  414ff7:	leave  
  414ff8:	aad    0x47
  414ffa:	mov    bh,0x6e
  414ffc:	dec    ebx
  414ffd:	into   
  414ffe:	xor    edx,DWORD PTR [ebx-0x3401e4c0]
  415004:	dec    eax
  415005:	pop    ebp
  415006:	cwde   
  415007:	adc    DWORD PTR [ecx+ecx*4],ebx
  41500a:	(bad)  
  41500b:	scas   al,BYTE PTR es:[edi]
  41500c:	test   DWORD PTR ds:0xdf1667db,ebp
  415012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415013:	push   esp
  415014:	fild   DWORD PTR [edi-0x5d952e9e]
  41501a:	retf   
  41501b:	sub    DWORD PTR [ebx+0x740cb581],esi
  415021:	bound  ebp,QWORD PTR [ebp+0x63]
  415024:	out    dx,eax
  415025:	pop    eax
  415026:	fisub  WORD PTR [ebx+0xe3ab6c7]
  41502c:	rcl    esi,1
  41502e:	xchg   ecx,eax
  41502f:	stos   DWORD PTR es:[edi],eax
  415030:	and    al,ch
  415032:	jo     0x415063
  415034:	push   eax
  415035:	xchg   esi,eax
  415036:	dec    BYTE PTR ds:0x88df0798
  41503c:	fld    QWORD PTR [edi*1+0x11fa1b3e]
  415043:	mov    bh,0xf3
  415045:	add    DWORD PTR [ebx-0x6],edx
  415048:	sub    eax,DWORD PTR [esi]
  41504a:	dec    edx
  41504b:	inc    edi
  41504c:	js     0x415054
  41504e:	add    edi,0xffffffea
  415051:	adc    edx,ecx
  415053:	mov    esp,0x4647273d
  415058:	int    0x3d
  41505a:	mov    ebp,0xaf6a0bd3
  41505f:	scas   eax,DWORD PTR es:[edi]
  415060:	cmp    eax,0xe8b70bb
  415065:	or     ebx,DWORD PTR [ebx+0xf20fbf5]
  41506b:	push   ebp
  41506c:	test   al,0x14
  41506e:	pop    esi
  41506f:	or     BYTE PTR [edi+0x49],ch
  415072:	scas   eax,DWORD PTR es:[edi]
  415073:	pop    ss
  415074:	ret    
  415075:	xchg   esp,eax
  415076:	(bad)  
  415077:	mov    ch,BYTE PTR [esi+0x3109cbff]
  41507d:	xchg   esp,eax
  41507e:	xlat   BYTE PTR ds:[ebx]
  41507f:	adc    al,0x21
  415081:	pop    ds
  415082:	add    al,0x89
  415084:	je     0x4150b1
  415086:	ror    BYTE PTR [ebp+0x4435ebea],cl
  41508c:	push   ebp
  41508d:	dec    edi
  41508e:	in     al,dx
  41508f:	mov    al,0x11
  415091:	xchg   ecx,eax
  415092:	jo     0x41510a
  415094:	scas   al,BYTE PTR es:[edi]
  415095:	es jne 0x4150c5
  415098:	push   ebx
  415099:	or     eax,DWORD PTR [ecx+esi*8]
  41509c:	lods   eax,DWORD PTR ds:[esi]
  41509d:	imul   edi,DWORD PTR [eax],0x4fe398a4
  4150a3:	(bad)  
  4150a4:	push   ebx
  4150a5:	das    
  4150a6:	nop
  4150a7:	lahf   
  4150a8:	(bad)  [edx+0x60]
  4150ab:	repz call 0xd4bd:0x303d9d44
  4150b3:	xlat   BYTE PTR ds:[ebx]
  4150b4:	xor    BYTE PTR [ebx],ch
  4150b6:	add    eax,esi
  4150b8:	sar    BYTE PTR [esi+0x2451a2f9],cl
  4150be:	push   cs
  4150bf:	test   DWORD PTR [ebp+edi*2+0x19],edx
  4150c3:	jno    0x4150cc
  4150c5:	std    
  4150c6:	mul    DWORD PTR [edx+0x4]
  4150c9:	clc    
  4150ca:	jmp    0x4150ca
  4150cc:	arpl   WORD PTR [ebx-0x1af0647],si
  4150d2:	es sub al,0xab
  4150d5:	or     BYTE PTR [ecx-0x15bb4e9e],ah
  4150db:	add    dl,ch
  4150dd:	add    dh,dl
  4150df:	push   ds
  4150e0:	xchg   ecx,eax
  4150e1:	mov    BYTE PTR [ebx+edi*4],dl
  4150e4:	lock outs dx,DWORD PTR ds:[esi]
  4150e6:	cmc    
  4150e7:	loop   0x4150eb
  4150e9:	js     0x41514b
  4150eb:	(bad)  
  4150ed:	mov    ebp,0xa834b9ea
  4150f2:	das    
  4150f3:	jo     0x415130
  4150f5:	and    ch,BYTE PTR [edi+0x243c78f4]
  4150fb:	int    0x31
  4150fd:	out    0x38,eax
  4150ff:	repz jmp 0x4150e8
  415102:	leave  
  415103:	push   ebp
  415104:	bound  eax,QWORD PTR [ebp+0x74d1298d]
  41510a:	sub    dh,BYTE PTR [ebp+0x23]
  41510d:	enter  0xee7f,0xfc
  415111:	test   BYTE PTR [edi+0x62d91bc8],0x13
  415118:	dec    esp
  415119:	and    DWORD PTR [edx-0xcdd4658],edx
  41511f:	sub    DWORD PTR [edx],edx
  415121:	xchg   ecx,eax
  415122:	mov    bh,0x52
  415124:	cmp    dl,ah
  415126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415127:	jbe    0x4150ca
  415129:	aad    0x7b
  41512b:	nop
  41512c:	push   eax
  41512d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41512e:	cmp    al,0x3b
  415130:	mov    ah,0x69
  415132:	jle    0x5be0cbdf
  415138:	enter  0x8e9a,0x8f
  41513c:	add    ebp,edi
  41513e:	les    ecx,FWORD PTR [ecx]
  415140:	scas   al,BYTE PTR es:[edi]
  415141:	(bad)  
  415143:	retf   0x98d9
  415146:	ja     0x415186
  415148:	fwait
  415149:	xor    DWORD PTR [ebp-0x1b745f62],esp
  41514f:	xlat   BYTE PTR ds:[ebx]
  415150:	test   esp,eax
  415152:	pop    es
  415153:	stc    
  415154:	jmp    0x84bc:0xaa525e6e
  41515b:	push   0xffffff9b
  41515d:	push   ebx
  41515e:	retf   0x6701
  415161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415162:	scas   eax,DWORD PTR es:[edi]
  415163:	aad    0x52
  415165:	inc    edi
  415166:	push   ss
  415167:	cmp    BYTE PTR [edi+0x706319a4],dh
  41516d:	out    0xe2,eax
  41516f:	push   eax
  415170:	push   esi
  415171:	xchg   ebx,eax
  415172:	fmul   st(2),st
  415174:	dec    ebp
  415175:	inc    ebx
  415176:	cwde   
  415177:	or     al,0x69
  415179:	in     al,dx
  41517a:	push   ss
  41517b:	cmp    ecx,DWORD PTR [ebx-0x3e]
  41517e:	scas   al,BYTE PTR es:[edi]
  41517f:	repnz push es
  415181:	xor    DWORD PTR [edx+0x51],ebp
  415184:	mov    ds:0xa0f99067,al
  415189:	add    eax,edi
  41518b:	cwde   
  41518c:	inc    ebp
  41518d:	xor    eax,0x8a262dba
  415192:	dec    esp
  415193:	mov    ah,0x5
  415195:	aam    0xe0
  415197:	icebp  
  415198:	xor    BYTE PTR [eax+0x2e4842b0],ch
  41519e:	jmp    0xffb41d86
  4151a3:	das    
  4151a4:	jae    0x415213
  4151a6:	neg    ebp
  4151a8:	outs   dx,BYTE PTR ds:[esi]
  4151a9:	push   ebx
  4151aa:	cwde   
  4151ab:	shr    DWORD PTR [edx+0x1cbadd38],cl
  4151b1:	jbe    0x415227
  4151b3:	mov    DWORD PTR [edx],eax
  4151b5:	adc    esi,DWORD PTR [ecx]
  4151b7:	pusha  
  4151b8:	mov    esi,0x45e6d9c
  4151bd:	pop    ebx
  4151be:	adc    dl,bl
  4151c0:	jg     0x415203
  4151c2:	gs sahf 
  4151c4:	adc    eax,0x303c634d
  4151c9:	ficomp WORD PTR [ebp-0x311a1a3b]
  4151cf:	fiadd  DWORD PTR [ecx]
  4151d1:	dec    DWORD PTR [edx+0x5a58728b]
  4151d7:	mov    edx,0x4ecc2082
  4151dc:	fs pop esi
  4151de:	jecxz  0x4151d4
  4151e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e1:	sbb    BYTE PTR [eax+0x40],cl
  4151e4:	xor    DWORD PTR [ebp+0x79],ebx
  4151e7:	fist   WORD PTR [ebp+0x63d81700]
  4151ed:	lahf   
  4151ee:	xor    bl,BYTE PTR [esi-0x38]
  4151f1:	cmp    edx,0x2499cfe6
  4151f7:	inc    ecx
  4151f8:	je     0x415258
  4151fa:	adc    al,0x6a
  4151fc:	enter  0xee0f,0x54
  415200:	fwait
  415201:	in     eax,0x99
  415203:	aaa    
  415204:	adc    eax,0xdf7a339c
  415209:	or     esp,ecx
  41520b:	aaa    
  41520c:	cld    
  41520d:	lds    ebp,FWORD PTR [ebx]
  41520f:	xchg   esi,eax
  415210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415211:	dec    ebx
  415212:	lea    ebp,[eax]
  415214:	sub    ch,dl
  415216:	mov    al,0xa
  415218:	(bad)  
  415219:	stos   DWORD PTR es:[edi],eax
  41521a:	in     eax,dx
  41521b:	jg     0x4151db
  41521d:	dec    eax
  41521e:	dec    eax
  41521f:	scas   eax,DWORD PTR es:[edi]
  415220:	or     al,0xb8
  415222:	or     DWORD PTR [edx-0x3b7975e6],ebp
  415228:	jbe    0x4151cb
  41522a:	ss sahf 
  41522c:	mov    ch,BYTE PTR [eax-0x7e564713]
  415232:	jg     0x4152b1
  415234:	or     eax,0x8cd9fa80
  415239:	fcom   DWORD PTR [ebx-0x3b]
  41523c:	nop
  41523d:	inc    edi
  41523e:	or     ebp,DWORD PTR [eax]
  415240:	push   ebx
  415241:	in     al,dx
  415242:	mov    cl,0x93
  415244:	xor    eax,0xc867f977
  415249:	add    BYTE PTR [esi+0x4a],dh
  41524c:	mov    al,ds:0x2abced09
  415251:	pop    edi
  415252:	add    al,BYTE PTR [eax+eiz*8-0x7a]
  415256:	int3   
  415257:	into   
  415258:	(bad)  
  415259:	hlt    
  41525a:	das    
  41525b:	xchg   esi,eax
  41525c:	xchg   esp,eax
  41525d:	mov    dh,0x60
  41525f:	rcl    DWORD PTR [edx],cl
  415261:	mov    esp,0x19bf71e1
  415266:	rcl    DWORD PTR [edi],1
  415268:	xchg   DWORD PTR [ecx+ecx*4-0x34],edx
  41526c:	loope  0x4152e5
  41526e:	dec    ebp
  41526f:	mov    ebp,0x17fc7cc7
  415274:	inc    esp
  415275:	(bad)  
  415276:	test   eax,0x699e0086
  41527b:	lahf   
  41527c:	rcr    ah,0xbc
  41527f:	outs   dx,BYTE PTR ds:[esi]
  415280:	lahf   
  415281:	sbb    DWORD PTR ds:0x197e5070,ebp
  415287:	mov    ebx,0x8dea97ec
  41528c:	dec    esi
  41528d:	sub    cl,BYTE PTR [ecx]
  41528f:	xchg   ebp,eax
  415290:	inc    edi
  415291:	dec    esp
  415292:	mov    DWORD PTR [eax],edx
  415294:	and    BYTE PTR [edi+0x2c],bl
  415297:	lds    esi,FWORD PTR [esi+esi*8+0x44]
  41529b:	pusha  
  41529c:	jbe    0x41525f
  41529e:	pop    ebx
  41529f:	fadd   DWORD PTR [eax+0x6]
  4152a2:	inc    esp
  4152a3:	les    edx,FWORD PTR [ebp+0x46]
  4152a6:	jbe    0x415309
  4152a8:	adc    edx,edi
  4152aa:	push   esi
  4152ab:	jo     0x415305
  4152ad:	(bad)  
  4152ae:	or     BYTE PTR [eax-0x5b],ch
  4152b1:	test   eax,0xca79a991
  4152b6:	das    
  4152b7:	cmp    eax,0x97e26930
  4152bc:	(bad)  
  4152bd:	scas   al,BYTE PTR es:[edi]
  4152be:	fs sbb eax,0xfdbb129
  4152c4:	lds    ebp,FWORD PTR [ecx-0x45]
  4152c7:	ja     0x415258
  4152c9:	lods   eax,DWORD PTR ds:[esi]
  4152ca:	xor    DWORD PTR [edx-0x33],0x6e3e04dd
  4152d1:	jnp    0x4152f1
  4152d3:	lea    edi,[ecx+eiz*4+0xa]
  4152d7:	pop    ebx
  4152d8:	mov    eax,ds:0xb6c80d8
  4152dd:	mov    esi,esi
  4152df:	test   BYTE PTR [esi+0x4fba3025],ah
  4152e5:	out    0xbf,al
  4152e7:	inc    esi
  4152e8:	push   ebp
  4152e9:	jae    0x41528d
  4152eb:	out    0xf6,eax
  4152ed:	js     0x415331
  4152ef:	test   DWORD PTR [ebx],0x22ba5554
  4152f5:	mov    ah,0xb
  4152f7:	and    DWORD PTR [ecx-0xb2159a7],edi
  4152fd:	ret    
  4152fe:	std    
  4152ff:	cdq    
  415300:	sub    bl,dl
  415302:	leave  
  415303:	pop    ds
  415304:	out    0x27,eax
  415306:	pushf  
  415307:	cdq    
  415308:	(bad)  [edx+eax*8]
  41530b:	xchg   ebp,eax
  41530c:	cmp    ecx,esp
  41530e:	cdq    
  41530f:	sbb    eax,0xbaeeef9a
  415314:	ja     0x415338
  415316:	pop    edi
  415317:	adc    eax,0xf86d8512
  41531c:	daa    
  41531d:	xchg   edi,eax
  41531e:	mov    WORD PTR [ecx],?
  415320:	sub    al,0x5
  415322:	push   ss
  415323:	call   0x5214:0x63945e81
  41532a:	jle    0x4152ec
  41532c:	mov    bh,0xcd
  41532e:	push   0xffffffd4
  415330:	dec    ecx
  415331:	xchg   DWORD PTR [edi-0x11],edi
  415334:	mov    ebx,0x79017b57
  415339:	xor    dh,BYTE PTR [edx]
  41533b:	push   eax
  41533c:	push   ds
  41533d:	pop    edx
  41533e:	test   BYTE PTR [edi+ecx*4+0x373050bb],dh
  415345:	ror    cl,1
  415347:	(bad)  
  415349:	(bad)  
  41534a:	sti    
  41534b:	or     dl,BYTE PTR [edi]
  41534d:	sbb    eax,0x1d96d71a
  415352:	pop    ss
  415353:	cld    
  415354:	xchg   esi,eax
  415355:	jns    0x415377
  415357:	dec    eax
  415358:	int3   
  415359:	add    edi,DWORD PTR [ebx]
  41535b:	or     bl,dl
  41535d:	push   es
  41535e:	lahf   
  41535f:	pop    edi
  415360:	loop   0x4152f9
  415362:	jmp    FWORD PTR [esi+0xfba53b5]
  415368:	sub    eax,0xc43a281
  41536d:	or     BYTE PTR [ecx-0x1c],dh
  415370:	push   eax
  415371:	lea    edx,ds:0x51f60d81
  415377:	in     al,0xe2
  415379:	push   edi
  41537a:	dec    edi
  41537b:	jo     0x415392
  41537d:	aas    
  41537e:	inc    edx
  41537f:	ret    0xe25b
  415382:	in     eax,dx
  415383:	or     ah,BYTE PTR [edi-0x26296d58]
  415389:	fnstenv [edx+edx*2-0x716e0f84]
  415390:	out    dx,al
  415391:	inc    ebx
  415392:	push   ebp
  415393:	jo     0x41533d
  415395:	add    DWORD PTR [edi+0x37],ecx
  415398:	sub    dl,ah
  41539a:	cmp    eax,0xb5320095
  41539f:	cmp    al,BYTE PTR [ebx-0x434ba6d0]
  4153a5:	jge    0x415408
  4153a7:	nop
  4153a8:	pop    ebp
  4153a9:	outs   dx,DWORD PTR ds:[esi]
  4153aa:	nop
  4153ab:	repz and DWORD PTR [ebx-0x25],0x186af6a1
  4153b3:	sbb    BYTE PTR [ecx-0x19a9d193],0xb0
  4153ba:	repz add esp,ebx
  4153bd:	push   edx
  4153be:	les    ebp,FWORD PTR [eax+0x2e]
  4153c1:	jmp    0xeb0:0xed4ecd13
  4153c8:	mov    al,0xcf
  4153ca:	or     DWORD PTR [ebx],ebx
  4153cc:	lea    esi,[edx+ebp*2]
  4153cf:	sbb    eax,0x15d25992
  4153d4:	call   0x9ae6b4a7
  4153d9:	out    dx,al
  4153da:	test   dl,cl
  4153dc:	push   esi
  4153dd:	jle    0x4153ec
  4153df:	stos   DWORD PTR es:[edi],eax
  4153e0:	ficomp DWORD PTR [ebp+esi*1-0x40]
  4153e4:	dec    ecx
  4153e5:	ficomp WORD PTR [edi-0x170a3991]
  4153eb:	or     BYTE PTR [eax-0x751af991],al
  4153f1:	rcr    DWORD PTR [eax+0x36],1
  4153f4:	and    bh,bh
  4153f6:	jge    0x4153da
  4153f8:	jns    0x415452
  4153fa:	and    ah,BYTE PTR ds:0xa91fee2c
  415400:	lea    ebp,[ebx+0x5534654b]
  415406:	pop    ds
  415407:	inc    ebp
  415408:	xchg   esi,eax
  415409:	sbb    DWORD PTR [ebp-0x190a1f2a],ebp
  41540f:	loop   0x41545b
  415411:	and    al,0x5e
  415413:	jmp    0xc9f1710
  415418:	test   DWORD PTR [edx+0x63],0xe1868bfd
  41541f:	stc    
  415420:	pop    ss
  415421:	jno    0x415490
  415423:	push   0x45
  415425:	test   al,0x62
  415427:	jg     0x4153de
  415429:	into   
  41542a:	cmp    edi,DWORD PTR [ebx-0x683002ed]
  415430:	rcl    DWORD PTR [edx],1
  415432:	pop    ebx
  415433:	ss jecxz 0x415485
  415436:	or     BYTE PTR [di],0x21
  41543a:	inc    esi
  41543b:	mov    cl,BYTE PTR [esi]
  41543d:	outs   dx,DWORD PTR ds:[esi]
  41543e:	std    
  41543f:	push   ss
  415440:	sar    DWORD PTR [edi-0x534aba37],0x14
  415447:	pusha  
  415448:	jp     0x41549d
  41544a:	xor    eax,0x54fd3821
  41544f:	arpl   WORD PTR [edi],dx
  415451:	sahf   
  415452:	(bad)  
  415453:	call   0x6ce00c1e
  415458:	sbb    ch,BYTE PTR [edx]
  41545a:	push   ss
  41545b:	call   DWORD PTR [eax+0xe]
  41545e:	sbb    BYTE PTR [ecx+0x70efb237],bl
  415464:	rol    DWORD PTR [ebx],cl
  415466:	cmp    esp,DWORD PTR [esi-0x5cad2eaa]
  41546c:	hlt    
  41546d:	jbe    0x41548f
  41546f:	jmp    0x4154b0
  415471:	add    bh,0xc1
  415474:	pop    eax
  415475:	cmp    ch,BYTE PTR [ecx+0x1b]
  415478:	push   esi
  415479:	sbb    eax,0xd1795ae7
  41547e:	mov    dl,0x1
  415480:	pop    ecx
  415481:	in     al,0x5e
  415483:	xchg   esi,eax
  415484:	xchg   ebx,eax
  415485:	mov    esi,DWORD PTR [ebx+0x73]
  415488:	mov    bh,0xa8
  41548a:	punpckhdq mm5,QWORD PTR [ebp+0x37533817]
  415491:	jo     0x415500
  415493:	mov    eax,ds:0xc0b5c03f
  415498:	idiv   DWORD PTR [edi+0x1c6d5610]
  41549e:	nop
  41549f:	mov    ds:0xbacb3141,eax
  4154a4:	xchg   edx,eax
  4154a5:	xor    DWORD PTR [ecx+0x1cdc7a86],edi
  4154ab:	dec    edx
  4154ac:	push   esp
  4154ad:	mov    eax,ds:0x22256204
  4154b2:	lods   al,BYTE PTR ds:[esi]
  4154b3:	xchg   esp,eax
  4154b4:	pop    ecx
  4154b5:	dec    edx
  4154b6:	pop    edi
  4154b7:	push   esp
  4154b8:	add    ch,dh
  4154ba:	test   al,0x9b
  4154bc:	sub    esp,esp
  4154be:	test   bl,0xf2
  4154c1:	ins    BYTE PTR es:[edi],dx
  4154c2:	jae    0x4154d2
  4154c4:	inc    edx
  4154c5:	and    ebx,DWORD PTR [ebp-0xd38a1d0]
  4154cb:	fcomip st,st(3)
  4154cd:	les    esp,FWORD PTR [eax]
  4154cf:	fcom   QWORD PTR [ecx-0x6f]
  4154d2:	jne    0x41552e
  4154d4:	dec    esi
  4154d5:	(bad)  
  4154d6:	ss push esi
  4154d8:	adc    DWORD PTR [ebx],eax
  4154da:	lea    esp,[ebp+esi*8+0x22]
  4154de:	xchg   ebx,eax
  4154df:	shl    BYTE PTR [ecx-0x55],0x69
  4154e3:	xchg   edx,eax
  4154e4:	lock int 0x0
  4154e7:	push   ss
  4154e8:	fnstsw WORD PTR [ebx]
  4154ea:	sti    
  4154eb:	out    dx,eax
  4154ec:	jmp    0xdd92:0xbd3bd273
  4154f3:	int3   
  4154f4:	add    edi,ecx
  4154f6:	mov    BYTE PTR [esi+esi*8],cl
  4154f9:	aas    
  4154fa:	(bad)  
  4154fb:	jg     0x41547e
  4154fd:	repz mov ?,WORD PTR [edi+0x1b]
  415501:	push   edi
  415502:	inc    ebx
  415503:	or     bl,BYTE PTR [edx+0x516f8bbb]
  415509:	jge    0x4154cd
  41550b:	mov    bl,0x7a
  41550d:	scas   al,BYTE PTR es:[edi]
  41550e:	pop    ebx
  41550f:	adc    BYTE PTR [edi],ah
  415511:	mov    eax,ds:0x4ee7697d
  415516:	repz and eax,0x2c44d28d
  41551c:	sbb    bl,dl
  41551e:	out    0x73,al
  415520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415521:	inc    edi
  415522:	sbb    esi,DWORD PTR [edi+0x7f68b6a6]
  415528:	stos   BYTE PTR es:[edi],al
  415529:	xlat   BYTE PTR ds:[ebx]
  41552a:	out    0x31,al
  41552c:	aas    
  41552d:	cmp    bl,dl
  41552f:	dec    edx
  415530:	(bad)  
  415531:	in     eax,dx
  415532:	arpl   WORD PTR [esi],sp
  415534:	mov    bl,0x7c
  415536:	inc    ebx
  415537:	pop    eax
  415538:	cmp    ch,BYTE PTR [edi]
  41553a:	jmp    0xa3407d1c
  41553f:	aam    0xea
  415541:	mov    ds:0xbf61f3df,al
  415546:	push   esi
  415547:	fwait
  415548:	cmp    BYTE PTR [ecx],0xe5
  41554b:	or     eax,0x11504fde
  415550:	jno    0x4155b8
  415552:	sub    BYTE PTR [ebp-0x2],dh
  415555:	jns    0x415581
  415557:	jmp    0xdc3d3667
  41555c:	mov    bl,0xa8
  41555e:	lock and DWORD PTR cs:0x9068e92f,edi
  415566:	sbb    dl,BYTE PTR [eax]
  415568:	ficom  WORD PTR [ebp-0x120aabc6]
  41556e:	leave  
  41556f:	sahf   
  415570:	jle    0x41558e
  415572:	mov    bl,0xca
  415574:	stos   DWORD PTR es:[edi],eax
  415575:	fmul   DWORD PTR [eax]
  415577:	(bad)  
  415578:	and    DWORD PTR es:[edx+eax*8-0x56ba6528],0xd62db18e
  415584:	into   
  415585:	dec    esp
  415586:	add    DWORD PTR [ebx],esi
  415588:	push   ecx
  415589:	ror    DWORD PTR [esi+0x56],0x65
  41558d:	cmp    DWORD PTR [edi-0x64679c86],edx
  415593:	sbb    eax,0x77186204
  415598:	xlat   BYTE PTR ds:[ebx]
  415599:	pop    edx
  41559a:	rcl    DWORD PTR [esi+0x40006673],1
  4155a0:	pop    ds
  4155a1:	scas   al,BYTE PTR es:[edi]
  4155a2:	stos   DWORD PTR es:[edi],eax
  4155a3:	inc    esp
  4155a4:	sbb    al,0x53
  4155a6:	jnp    0x415617
  4155a8:	and    dl,BYTE PTR [esi+esi*8-0x47b10e61]
  4155af:	pop    esp
  4155b0:	outs   dx,BYTE PTR ds:[esi]
  4155b1:	ins    BYTE PTR es:[edi],dx
  4155b2:	and    dh,al
  4155b4:	or     al,0x76
  4155b6:	mov    eax,0x9bd210b1
  4155bb:	arpl   dx,cx
  4155bd:	fdiv   DWORD PTR [ebx-0x13]
  4155c0:	sub    BYTE PTR [ecx+0x33],dh
  4155c3:	and    edx,DWORD PTR [eax+ebp*1+0x17bda386]
  4155ca:	push   esp
  4155cb:	jno    0x41556f
  4155cd:	cld    
  4155ce:	cmp    al,al
  4155d0:	int    0x40
  4155d2:	xchg   edi,eax
  4155d3:	xchg   BYTE PTR [ecx],bl
  4155d5:	push   ecx
  4155d6:	or     DWORD PTR [eax],edi
  4155d8:	or     BYTE PTR [eax+eax*8],0x57
  4155dc:	push   cs
  4155dd:	imul   eax,DWORD PTR [edx+0x16],0x6e6e13db
  4155e4:	jmp    0x11a6:0x7860e4b8
  4155eb:	jae    0x4155a6
  4155ed:	int    0x4f
  4155ef:	leave  
  4155f0:	mov    ebp,ecx
  4155f2:	mov    esp,0x59f12e78
  4155f7:	ja     0x41558d
  4155f9:	int3   
  4155fa:	into   
  4155fb:	or     DWORD PTR ds:0x655cd736,edx
  415601:	mov    al,ds:0xa337705
  415606:	aas    
  415607:	adc    ah,BYTE PTR [edx+0x4e]
  41560a:	pusha  
  41560b:	xchg   edx,eax
  41560c:	xor    al,0x7f
  41560e:	mov    ecx,0x48eb5f94
  415613:	mov    al,gs:0xe8c745ca
  415619:	adc    dh,dl
  41561b:	jge    0x415690
  41561d:	lods   al,BYTE PTR ds:[esi]
  41561e:	std    
  41561f:	pop    edi
  415620:	lods   eax,DWORD PTR ss:[esi]
  415622:	xchg   edx,eax
  415623:	push   0x57fb0cb6
  415628:	es push cs
  41562a:	ins    BYTE PTR es:[edi],dx
  41562b:	inc    ebx
  41562c:	fst    st(2)
  41562e:	jae    0x41567c
  415630:	push   esi
  415631:	fcomp  QWORD PTR [ecx+0x76]
  415634:	aam    0x38
  415636:	cmc    
  415637:	mov    ebp,0x4e256e0a
  41563c:	xchg   ebx,eax
  41563d:	std    
  41563e:	pop    ebx
  41563f:	fs inc ebp
  415641:	dec    edx
  415642:	sub    al,cl
  415644:	ja     0x415649
  415646:	lea    esi,[esp+esi*4]
  415649:	int    0xa
  41564b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41564c:	pop    edx
  41564d:	addr16 mov cl,0x2e
  415650:	das    
  415651:	and    al,0x81
  415653:	inc    esp
  415654:	sub    dl,BYTE PTR [ebp+eax*2-0xc7424d4]
  41565b:	dec    ecx
  41565c:	lock mov edx,0xb0114b5b
  415662:	add    BYTE PTR [esi+0x6c705c0d],0xbe
  415669:	dec    ecx
  41566a:	bound  eax,QWORD PTR [esp+ebp*1+0x1fca8460]
  415671:	fidivr WORD PTR [ecx]
  415673:	xchg   edx,eax
  415674:	mov    eax,0xa907adcd
  415679:	push   edi
  41567a:	add    bh,0x99
  41567d:	bound  esp,QWORD PTR [esi-0x22]
  415680:	mov    eax,ds:0x4f48bc25
  415685:	jmp    0x41562c
  415687:	(bad)  
  415688:	repnz mov ah,0xb8
  41568b:	xor    ah,BYTE PTR [ebp-0x1d]
  41568e:	inc    edi
  41568f:	mov    esp,0x177e29a6
  415694:	stos   BYTE PTR es:[edi],al
  415695:	ins    DWORD PTR es:[edi],dx
  415696:	adc    DWORD PTR [esi-0x48],eax
  415699:	mul    esp
  41569b:	jnp    0x41561e
  41569d:	jb     0x41569a
  41569f:	mov    ecx,0xcfe1d0fc
  4156a4:	and    al,0x5d
  4156a6:	xchg   ecx,eax
  4156a7:	and    al,0x2a
  4156a9:	push   cs
  4156aa:	mov    edi,0x5f1ab960
  4156af:	ds stc 
  4156b1:	and    al,BYTE PTR [esi+0x232800f9]
  4156b7:	fidivr WORD PTR gs:[edx+0x1661e9d9]
  4156be:	adc    BYTE PTR [ebp-0x4f9c9009],ah
  4156c4:	clc    
  4156c5:	(bad)  
  4156c6:	cmp    ch,dh
  4156c8:	inc    edx
  4156c9:	dec    edi
  4156ca:	push   ebx
  4156cb:	les    edx,FWORD PTR [eax+0x6b]
  4156ce:	inc    edi
  4156cf:	mov    es,WORD PTR [esi+ecx*2+0x49c6f2b]
  4156d6:	das    
  4156d7:	(bad)  
  4156d8:	pop    ss
  4156d9:	sbb    dh,BYTE PTR [eax]
  4156db:	add    eax,0x987c5c9d
  4156e0:	(bad)  
  4156e1:	stc    
  4156e2:	dec    edi
  4156e3:	fdiv   DWORD PTR [esi]
  4156e5:	fisub  WORD PTR [esi+ebp*4-0x279b6dcb]
  4156ec:	jmp    0x96ec9d31
  4156f1:	add    eax,0xc9629244
  4156f6:	xchg   bl,ah
  4156f8:	hlt    
  4156f9:	or     ebx,ecx
  4156fb:	shl    ah,1
  4156fd:	xor    eax,0x3afab7b2
  415702:	stos   DWORD PTR es:[edi],eax
  415703:	mov    ebx,0x5f416dfd
  415708:	imul   ebx,DWORD PTR [ebp+0x59af97af],0xffffff90
  41570f:	repz sti 
  415711:	pop    eax
  415712:	mov    dh,0x3a
  415714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415715:	retf   
  415716:	out    dx,al
  415717:	cmc    
  415718:	fisttp WORD PTR [ecx-0x4a40d5cd]
  41571e:	sbb    BYTE PTR [ecx],0x3a
  415721:	fwait
  415722:	pop    esp
  415723:	adc    dl,al
  415725:	je     0x41570e
  415727:	push   edi
  415728:	inc    ebp
  415729:	dec    edi
  41572a:	rcl    BYTE PTR [eax+0x6c9ed2a5],0x33
  415731:	scas   al,BYTE PTR es:[edi]
  415732:	and    al,BYTE PTR [eax-0x5f]
  415735:	je     0x4156bb
  415737:	mov    cs,esi
  415739:	mov    ebx,0x2965be9a
  41573e:	xor    DWORD PTR [edi+0x15],esi
  415741:	hlt    
  415742:	test   DWORD PTR [edx+ecx*8],0x420bec16
  415749:	(bad)  
  41574a:	popf   
  41574b:	retf   0xd614
  41574e:	jne    0x41570d
  415750:	std    
  415751:	sbb    BYTE PTR [esi],cl
  415753:	inc    edi
  415754:	pop    ecx
  415755:	dec    ebx
  415756:	mov    eax,ds:0x7ea3f8b9
  41575b:	lds    eax,FWORD PTR [ebp+0x1a]
  41575e:	pop    esp
  41575f:	out    0x6d,eax
  415761:	push   DWORD PTR [edi-0x355118b6]
  415767:	mul    BYTE PTR [esi]
  415769:	loop   0x41578b
  41576b:	push   ebp
  41576c:	gs add al,0x82
  41576f:	cmp    al,0xde
  415771:	nop
  415772:	dec    edi
  415773:	adc    eax,0xac67b969
  415778:	push   0x48
  41577a:	pop    edx
  41577b:	jmp    0xaca24c2f
  415780:	pop    ebp
  415781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415782:	and    dh,BYTE PTR [edi]
  415784:	adc    eax,ebp
  415786:	xrelease mov DWORD PTR [eax+ebp*4+0x7f],esp
  41578b:	push   edx
  41578c:	sub    DWORD PTR ds:0x3308536a,ebx
  415792:	dec    edx
  415793:	adc    cl,BYTE PTR [esi+eiz*8]
  415796:	inc    edi
  415797:	sub    al,BYTE PTR [ebx-0x194d8de7]
  41579d:	out    0x17,eax
  41579f:	or     eax,0x599b9fa5
  4157a4:	add    ch,ch
  4157a6:	adc    eax,0x2c77784e
  4157ab:	dec    edi
  4157ac:	(bad)  
  4157ad:	push   0x6d
  4157af:	iret   
  4157b0:	push   esp
  4157b1:	out    dx,eax
  4157b2:	cmp    DWORD PTR [ebx],0xfb8dcc79
  4157b8:	xchg   ecx,eax
  4157b9:	sbb    ah,bh
  4157bb:	scas   al,BYTE PTR es:[edi]
  4157bc:	ja     0x41581f
  4157be:	sbb    eax,0x28c51af1
  4157c3:	das    
  4157c4:	cmp    al,0x5a
  4157c6:	fidivr DWORD PTR [edx+edi*2-0x45c6ca0e]
  4157cd:	inc    ecx
  4157ce:	sub    esp,ecx
  4157d0:	sahf   
  4157d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157d2:	pop    ds
  4157d3:	ja     0x415806
  4157d5:	(bad)  
  4157d6:	sub    BYTE PTR ds:0x71f407e1,cl
  4157dc:	lea    ebp,[ebp+0x5f1f5c86]
  4157e2:	les    esp,FWORD PTR [ebx-0x26]
  4157e5:	out    0xed,al
  4157e7:	lods   al,BYTE PTR ds:[esi]
  4157e8:	sti    
  4157e9:	leave  
  4157ea:	(bad)  
  4157eb:	sub    ebx,DWORD PTR [ecx]
  4157ed:	mov    dl,0xc5
  4157ef:	(bad)  
  4157f1:	cmp    BYTE PTR [eax+0x58],ch
  4157f4:	add    BYTE PTR [edx-0x4a],ah
  4157f7:	outs   dx,DWORD PTR ds:[esi]
  4157f8:	std    
  4157f9:	inc    ebp
  4157fa:	dec    ebx
  4157fb:	add    ch,BYTE PTR [edx-0x6c]
  4157fe:	jmp    0x41587d
  415800:	imul   edi,DWORD PTR [ecx-0x4c99b97d],0xffffffba
  415807:	arpl   WORD PTR [ebp-0x57],di
  41580a:	ja     0x415873
  41580c:	stos   DWORD PTR es:[edi],eax
  41580d:	in     eax,0x89
  41580f:	shl    BYTE PTR [ecx],1
  415811:	lea    eax,[edi-0x7a]
  415814:	xlat   BYTE PTR ds:[ebx]
  415815:	mov    bh,0xfc
  415817:	mov    ds:0x69e938cc,al
  41581c:	push   ss
  41581d:	scas   al,BYTE PTR es:[edi]
  41581e:	jmp    0x4157a8
  415820:	mov    eax,ds:0x7065debb
  415825:	jmp    0x7547:0x5edf7886
  41582c:	sub    al,0x56
  41582e:	adc    BYTE PTR [edx],dh
  415830:	aad    0x28
  415832:	xchg   ebx,eax
  415833:	or     eax,0x4bea213a
  415838:	mov    al,ds:0x853a548c
  41583d:	loopne 0x4157c3
  41583f:	xchg   ecx,eax
  415840:	add    cl,BYTE PTR [edi-0x6]
  415843:	dec    ecx
  415844:	xchg   edx,eax
  415845:	dec    ebp
  415846:	imul   esp,DWORD PTR [ecx-0x7f],0xef173e68
  41584d:	imul   edi,DWORD PTR [edx],0xffffffb6
  415850:	sub    eax,0xa7b45bdc
  415855:	mov    dh,0x2
  415857:	sbb    al,dl
  415859:	mov    ah,0x1d
  41585b:	lods   al,BYTE PTR ds:[esi]
  41585c:	(bad)  
  41585e:	mov    esp,0xbb587a53
  415863:	adc    eax,0x61f93756
  415868:	cmp    eax,0x2410591f
  41586d:	mov    ebp,0xdba93146
  415872:	cmp    ch,BYTE PTR [ecx-0x3600c487]
  415878:	mov    eax,0x135dc02c
  41587d:	adc    ebx,DWORD PTR [ebx]
  41587f:	sub    al,0xde
  415881:	add    DWORD PTR [ecx],eax
  415883:	add    bl,al
  415885:	adc    ecx,esi
  415887:	and    al,0x9d
  415889:	repnz inc ecx
  41588b:	inc    edx
  41588c:	pop    edi
  41588d:	lods   eax,DWORD PTR ds:[esi]
  41588e:	loope  0x4158e3
  415890:	jmp    FWORD PTR [edx-0x749f3498]
  415896:	outs   dx,DWORD PTR ds:[esi]
  415897:	shl    ebp,0x76
  41589a:	and    al,0xb1
  41589c:	inc    ebx
  41589d:	nop
  41589e:	stos   BYTE PTR es:[edi],al
  41589f:	adc    edx,ecx
  4158a1:	cmc    
  4158a2:	push   ebp
  4158a3:	inc    edx
  4158a4:	shl    BYTE PTR [ebp+0x1a8b741c],0xa1
  4158ab:	std    
  4158ac:	dec    ebp
  4158ad:	outs   dx,BYTE PTR ds:[esi]
  4158ae:	fnsave [esi]
  4158b0:	and    DWORD PTR [ecx-0x5770a99f],ebp
  4158b6:	jl     0x4158be
  4158b8:	sbb    esi,DWORD PTR [eax-0xb51074f]
  4158be:	or     DWORD PTR [edx],0x880e941d
  4158c4:	push   cs
  4158c5:	ret    0x9fac
  4158c8:	jno    0x415905
  4158ca:	mov    ah,0xc2
  4158cc:	sahf   
  4158cd:	xchg   ebp,eax
  4158ce:	mov    al,ds:0xe67d1fb0
  4158d3:	add    BYTE PTR [eax+0x4cc4fb4c],dl
  4158d9:	shr    BYTE PTR [esi],cl
  4158db:	add    DWORD PTR [ecx],ebx
  4158dd:	adc    ebp,ecx
  4158df:	stc    
  4158e0:	jno    0x41589d
  4158e2:	fiadd  WORD PTR [edi-0x69f46ff]
  4158e8:	mov    al,BYTE PTR [esi-0x37968aac]
  4158ee:	mov    ds:0x8a90890b,eax
  4158f3:	xchg   esi,eax
  4158f4:	rcl    DWORD PTR [esi],cl
  4158f6:	mov    al,0xe4
  4158f8:	out    dx,eax
  4158f9:	xor    edi,DWORD PTR [esi+ecx*4-0x3c]
  4158fd:	jle    0x4158c2
  4158ff:	loopne 0x41594e
  415901:	jmp    0x4158ee
  415903:	push   es
  415904:	jns    0x415907
  415906:	scas   al,BYTE PTR es:[edi]
  415907:	aam    0x30
  415909:	imul   ch
  41590b:	mov    ds:0x29c2bedb,eax
  415910:	mov    BYTE PTR [ebx-0x6d566990],al
  415916:	scas   eax,DWORD PTR es:[edi]
  415917:	shl    DWORD PTR [ecx-0x5fb2e6ad],0xc9
  41591e:	cmc    
  41591f:	or     BYTE PTR [ebp+0x4b],al
  415922:	stc    
  415923:	rcr    BYTE PTR [esi+0x10],1
  415926:	bswap  edi
  415928:	xchg   ebp,eax
  415929:	test   eax,0x9992a30e
  41592e:	and    ebp,edx
  415930:	mov    ebx,0x8dbd4cf4
  415935:	push   esi
  415936:	dec    esp
  415937:	les    edi,FWORD PTR [esi+0x24]
  41593a:	out    0x85,al
  41593c:	fisub  WORD PTR ds:0x80c41be8
  415942:	add    ecx,DWORD PTR [edi+esi*8+0x3c309748]
  415949:	(bad)  
  41594a:	pop    ss
  41594b:	dec    ebx
  41594c:	pop    esp
  41594d:	push   es
  41594e:	sbb    al,0x23
  415950:	mov    DWORD PTR [eax],esi
  415952:	pop    es
  415953:	mov    ecx,0x258b7806
  415958:	nop
  415959:	push   cs
  41595a:	lods   al,BYTE PTR ds:[esi]
  41595b:	xchg   esp,eax
  41595c:	sbb    ah,BYTE PTR [eax-0x18]
  41595f:	test   ah,cl
  415961:	popf   
  415962:	and    ebx,esp
  415964:	loope  0x415993
  415966:	inc    edx
  415967:	call   esp
  415969:	pop    es
  41596a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41596b:	jns    0x4159da
  41596d:	fsubr  st,st(4)
  41596f:	sub    esp,DWORD PTR [esi-0x3ee70dc8]
  415975:	cmp    DWORD PTR [esi],esp
  415977:	cmp    bh,BYTE PTR [ebx+0x775c58ad]
  41597d:	ss sub ah,al
  415980:	xchg   esp,eax
  415981:	xchg   esi,eax
  415982:	outs   dx,DWORD PTR ds:[esi]
  415983:	add    esp,DWORD PTR [ebp+0x48a17192]
  415989:	fstp   st(4)
  41598b:	pop    esp
  41598c:	dec    eax
  41598d:	mov    bl,0x26
  41598f:	(bad)  
  415990:	mov    ss,esi
  415992:	or     edx,ecx
  415994:	xor    eax,0xe94df838
  415999:	sbb    cl,BYTE PTR [edx+edx*8]
  41599c:	inc    edx
  41599d:	dec    esi
  41599e:	lods   al,BYTE PTR ds:[esi]
  41599f:	popa   
  4159a0:	inc    esi
  4159a1:	stc    
  4159a2:	add    DWORD PTR [esi],0xe80b8e0b
  4159a8:	mov    ecx,0xc19d7922
  4159ad:	sbb    dh,al
  4159af:	or     DWORD PTR [esi],0x3579ae34
  4159b5:	aam    0xd7
  4159b7:	add    DWORD PTR [edi+0x3f0fdeb],esp
  4159bd:	push   ecx
  4159be:	mov    cl,0x23
  4159c0:	stos   BYTE PTR es:[edi],al
  4159c1:	sub    eax,0xf2163c1e
  4159c6:	int    0x43
  4159c8:	mov    ch,0xd0
  4159ca:	pop    edx
  4159cb:	mov    ds:0x787638f0,eax
  4159d0:	mov    dh,0x82
  4159d2:	mov    edi,0xfa291f90
  4159d7:	mov    esp,DWORD PTR [esi+ebx*8+0x36]
  4159db:	es iret 
  4159dd:	xchg   edx,eax
  4159de:	mov    edi,0x46eaa287
  4159e3:	jl     0x4159ae
  4159e5:	push   esp
  4159e6:	adc    bh,BYTE PTR [ecx+0xc]
  4159e9:	push   eax
  4159ea:	in     eax,dx
  4159eb:	bound  eax,QWORD PTR [edx+0x5bef5f9e]
  4159f1:	jmp    0xcef123fe
  4159f6:	cmp    DWORD PTR [ecx-0x71],esi
  4159f9:	mov    eax,edx
  4159fb:	call   0xa68f3b5e
  415a00:	adc    DWORD PTR [esp+ebp*8+0x2c],ecx
  415a04:	pop    esi
  415a05:	add    BYTE PTR [esi+esi*1],dh
  415a08:	jae    0x415a0e
  415a0a:	in     eax,0x81
  415a0c:	pop    edx
  415a0d:	int3   
  415a0e:	pop    ebx
  415a0f:	cmp    bh,bl
  415a11:	jnp    0x415a51
  415a13:	pop    esi
  415a14:	xlat   BYTE PTR ds:[ebx]
  415a15:	loop   0x415a5b
  415a17:	inc    ebx
  415a18:	sbb    DWORD PTR [ebx+0x1b],ebp
  415a1b:	dec    eax
  415a1c:	shl    ebp,1
  415a1e:	or     eax,0x7c08afb5
  415a23:	inc    ecx
  415a24:	stos   DWORD PTR es:[edi],eax
  415a25:	or     BYTE PTR [eax],dl
  415a27:	xlat   BYTE PTR ds:[ebx]
  415a28:	cmp    BYTE PTR [ecx],bh
  415a2a:	xor    DWORD PTR [esi],0x562eeb15
  415a30:	clc    
  415a31:	mov    ds:0x4be488c4,al
  415a36:	sub    al,BYTE PTR [edi]
  415a38:	xor    BYTE PTR [eax+0x8],ah
  415a3b:	nop
  415a3c:	sub    BYTE PTR [ebx],ah
  415a3e:	mov    esp,0x977b60ae
  415a43:	fadd   DWORD PTR [edi]
  415a45:	cmc    
  415a46:	pushf  
  415a47:	mov    ebp,0x33b3ecd9
  415a4c:	push   ecx
  415a4d:	ret    0xa415
  415a50:	dec    ebx
  415a51:	mov    ds:0xaac8b738,eax
  415a56:	adc    esp,edx
  415a58:	sbb    al,BYTE PTR [edi+0x710233d9]
  415a5e:	or     al,0x5b
  415a60:	iret   
  415a61:	outs   dx,DWORD PTR ds:[esi]
  415a62:	ret    
  415a63:	pop    edi
  415a64:	out    dx,eax
  415a65:	sti    
  415a66:	leave  
  415a67:	imul   edx,DWORD PTR [ebx],0x30
  415a6a:	enter  0x2023,0xd7
  415a6e:	mov    bh,0x3f
  415a70:	pop    ebp
  415a71:	push   ds
  415a72:	mov    dh,BYTE PTR [ecx+0x3f]
  415a75:	and    eax,0xdcb6ac99
  415a7a:	imul   ecx,DWORD PTR [eax],0xffffffa4
  415a7d:	dec    ebx
  415a7e:	xor    BYTE PTR [ebx+ebp*1-0x32],cl
  415a82:	jmp    0x415a74
  415a84:	push   0x56
  415a86:	sti    
  415a87:	sbb    DWORD PTR [edx-0x2d],esi
  415a8a:	adc    bh,BYTE PTR [ecx+ebx*1+0x3b8485e5]
  415a91:	push   0xbf0de83f
  415a96:	mov    dh,0xcc
  415a98:	frstor [edx+0x1cbcf8cf]
  415a9e:	cwde   
  415a9f:	jns    0x415a70
  415aa1:	es inc edi
  415aa3:	or     eax,0xfb78e83
  415aa8:	dec    eax
  415aa9:	inc    edx
  415aaa:	(bad)  
  415aab:	outs   dx,BYTE PTR ds:[esi]
  415aac:	pop    ds
  415aad:	and    ecx,esp
  415aaf:	inc    BYTE PTR ds:0xddd3dfa8
  415ab5:	xchg   edi,eax
  415ab6:	or     DWORD PTR [eax-0x5b],0x18
  415aba:	adc    DWORD PTR [esi],esi
  415abc:	lds    esi,FWORD PTR [ecx-0x5f]
  415abf:	xlat   BYTE PTR ds:[ebx]
  415ac0:	sahf   
  415ac1:	xchg   edx,eax
  415ac2:	pushf  
  415ac3:	inc    eax
  415ac4:	inc    esi
  415ac5:	mov    ebp,0x67761d0e
  415aca:	jmp    0x3eb4:0xdaae21df
  415ad1:	adc    eax,0x3abafd06
  415ad6:	mov    cs,WORD PTR [ebx+ebx*1]
  415ad9:	retf   0x6d4a
  415adc:	pop    esp
  415add:	push   esi
  415ade:	dec    edx
  415adf:	je     0x415ad3
  415ae1:	and    eax,0x1688f33f
  415ae6:	imul   esi,DWORD PTR [ecx+0x19f6b979],0xb71acfe7
  415af0:	and    cl,BYTE PTR [edi+0x2d5469]
  415af6:	sub    bh,BYTE PTR [ecx+0x4c]
  415af9:	sbb    DWORD PTR [edx+0x13],0xffffffa7
  415afd:	test   al,0x9b
  415aff:	mov    ebp,0xaceb933b
  415b04:	xchg   DWORD PTR [ebx],esi
  415b06:	inc    DWORD PTR [eax]
  415b08:	and    al,0x17
  415b0a:	xchg   DWORD PTR ds:0x30c6e425,edx
  415b10:	mov    bh,0x5f
  415b12:	inc    ebx
  415b13:	dec    esi
  415b14:	sahf   
  415b15:	cmp    eax,0x73932277
  415b1a:	inc    edx
  415b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b1c:	ds mov ah,BYTE PTR es:[edx+edi*1+0x25]
  415b22:	xor    eax,0x3a699bc4
  415b27:	pop    edx
  415b28:	xchg   esi,eax
  415b29:	rcr    DWORD PTR [edi-0x29],cl
  415b2c:	xchg   DWORD PTR [edx],esi
  415b2e:	push   es
  415b2f:	int3   
  415b30:	daa    
  415b31:	ins    BYTE PTR es:[edi],dx
  415b32:	retf   0x87b6
  415b35:	ror    DWORD PTR [ebx],cl
  415b37:	xlat   BYTE PTR ds:[ebx]
  415b38:	mov    al,ds:0xa0c195b8
  415b3d:	(bad)  
  415b3e:	dec    esi
  415b3f:	lods   eax,DWORD PTR ds:[esi]
  415b40:	outs   dx,DWORD PTR ds:[esi]
  415b41:	xchg   ecx,ecx
  415b43:	push   0x23
  415b45:	sub    al,0xf
  415b47:	sbb    BYTE PTR [esi],ch
  415b49:	jb     0x415bc8
  415b4b:	es dec ah
  415b4e:	gs aas 
  415b50:	test   DWORD PTR [ebx],0x96e3c896
  415b56:	and    eax,0xd2747bf2
  415b5b:	les    eax,FWORD PTR [ebp+eax*4-0x4e6a6ffe]
  415b62:	mov    bl,0xb7
  415b64:	sbb    BYTE PTR [edi-0x2f15dea],bh
  415b6a:	sbb    ah,BYTE PTR [edi-0x73]
  415b6d:	push   cs
  415b6e:	bnd jmp 0x415af9
  415b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b72:	adc    BYTE PTR [ecx+0x20],0xe3
  415b76:	mov    ebp,0xf5f11942
  415b7b:	mov    bh,0x2c
  415b7d:	push   esi
  415b7e:	add    al,0x91
  415b80:	or     edx,DWORD PTR [eax-0x34dc04c7]
  415b86:	lods   al,BYTE PTR ds:[esi]
  415b87:	cmp    BYTE PTR [ecx],ch
  415b89:	int3   
  415b8a:	pop    ds
  415b8b:	add    esi,ebp
  415b8d:	push   0x224ec7cb
  415b92:	out    dx,al
  415b93:	and    eax,0x939dc77e
  415b98:	add    ebp,esi
  415b9a:	dec    edi
  415b9b:	cwde   
  415b9c:	xor    al,0x83
  415b9e:	jae    0x415b86
  415ba0:	ja     0x415be5
  415ba2:	pop    edx
  415ba3:	and    al,0x63
  415ba5:	xchg   ebp,eax
  415ba6:	adc    al,0xc
  415ba8:	pop    ebp
  415ba9:	inc    ebx
  415baa:	cdq    
  415bab:	dec    esi
  415bac:	pusha  
  415bad:	pop    es
  415bae:	jp     0x415bcc
  415bb0:	jl     0x415be4
  415bb2:	push   edi
  415bb3:	push   ss
  415bb4:	pop    ebx
  415bb5:	stos   DWORD PTR es:[edi],eax
  415bb6:	lea    ebp,[edi-0x6]
  415bb9:	lea    edi,[esi-0x554daada]
  415bbf:	pop    esi
  415bc0:	ja     0x415c0f
  415bc2:	shr    eax,0x33
  415bc5:	xor    eax,0x1d8e6c31
  415bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bcb:	ret    
  415bcc:	mov    ?,WORD PTR [edx]
  415bce:	inc    ecx
  415bcf:	dec    ebx
  415bd0:	push   edx
  415bd1:	pop    edx
  415bd2:	inc    esp
  415bd3:	adc    ch,BYTE PTR [ecx+0xc5638ad]
  415bd9:	xor    eax,0x3b07d29d
  415bde:	jmp    0x415beb
  415be0:	jecxz  0x415b79
  415be2:	in     eax,0x66
  415be4:	lds    ebp,FWORD PTR [edx-0x2b120b33]
  415bea:	lahf   
  415beb:	mov    eax,0x7470be57
  415bf0:	mov    esi,0x961282c0
  415bf5:	cmp    eax,0x6b98f868
  415bfa:	sub    BYTE PTR [ebx+0x9],ch
  415bfd:	push   0xa911b4a8
  415c02:	sbb    cl,BYTE PTR [ebx]
  415c04:	test   al,0xb1
  415c06:	xor    al,0xaf
  415c08:	xchg   edi,eax
  415c09:	cwde   
  415c0a:	les    ebp,FWORD PTR [ebx]
  415c0c:	cmp    eax,0xde5b07b3
  415c11:	repz jecxz 0x415be4
  415c14:	inc    esi
  415c15:	pop    ds
  415c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c17:	mov    al,0x9a
  415c19:	adc    dl,bl
  415c1b:	aad    0x83
  415c1d:	jno    0x415bd0
  415c1f:	aad    0xc
  415c21:	xchg   DWORD PTR [esi],esi
  415c23:	fbld   TBYTE PTR [esi+0x37]
  415c26:	lods   al,BYTE PTR ds:[esi]
  415c27:	bound  esi,QWORD PTR [ecx+0x266bb219]
  415c2d:	push   ebx
  415c2e:	jns    0x415ca1
  415c30:	out    0x19,al
  415c32:	je     0x415be6
  415c34:	das    
  415c35:	aad    0x70
  415c37:	pop    ecx
  415c38:	mov    ah,0xcc
  415c3a:	(bad)  
  415c3b:	dec    edi
  415c3c:	add    BYTE PTR [eax-0x24eb9231],ah
  415c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c43:	ss (bad) 
  415c45:	lds    edx,FWORD PTR [edx+0x28]
  415c48:	cwde   
  415c49:	test   eax,0xd75256f3
  415c4e:	aam    0xf0
  415c50:	jnp    0x415c43
  415c52:	add    ebx,DWORD PTR [edi]
  415c54:	adc    eax,DWORD PTR [esi-0x4a87e5e7]
  415c5a:	mov    DWORD PTR [edi-0x74],edi
  415c5d:	dec    edx
  415c5e:	loopne 0x415c67
  415c60:	jbe    0x415cb1
  415c62:	mov    eax,DWORD PTR [edi-0x37917a5a]
  415c68:	jmp    0x415c2b
  415c6a:	and    BYTE PTR [ebx],0xd3
  415c6d:	outs   dx,BYTE PTR ds:[esi]
  415c6e:	xchg   BYTE PTR [esi+0x1d0ef10f],dh
  415c74:	add    eax,0x8202c4c4
  415c79:	xlat   BYTE PTR ds:[ebx]
  415c7a:	rol    edi,cl
  415c7c:	mov    DWORD PTR [edi-0xe],ebx
  415c7f:	mov    ah,0x62
  415c81:	call   0xfea2bdc6
  415c86:	setnp  BYTE PTR [edi-0x1a]
  415c8a:	pop    edx
  415c8b:	aas    
  415c8c:	stc    
  415c8d:	or     ah,cl
  415c8f:	xor    DWORD PTR [ebx+0x55286ff5],ecx
  415c95:	loop   0x415c9c
  415c97:	adc    DWORD PTR [eax-0x9],0x52
  415c9b:	push   ss
  415c9c:	fs push esp
  415c9e:	jbe    0x415c97
  415ca0:	nop
  415ca1:	imul   DWORD PTR [ecx-0x37d884a2]
  415ca7:	jno    0x415d0a
  415ca9:	jo     0x415cec
  415cab:	out    dx,eax
  415cac:	ja     0x415c9e
  415cae:	mov    cs,WORD PTR [ecx+0xc]
  415cb1:	ror    BYTE PTR [ecx],cl
  415cb3:	out    0x35,eax
  415cb5:	cmp    BYTE PTR [edx+0x52],bh
  415cb8:	mov    al,ds:0xf6b033db
  415cbd:	or     dh,BYTE PTR [edx]
  415cbf:	mov    ebp,0xb426df8c
  415cc4:	push   0xee0a7c1e
  415cc9:	dec    eax
  415cca:	mov    edx,0x4a26543b
  415ccf:	pop    edi
  415cd0:	pop    edx
  415cd1:	xchg   ecx,eax
  415cd2:	mov    edi,0xc478d68c
  415cd7:	cmp    DWORD PTR [edi+0x3e],edx
  415cda:	pop    ss
  415cdb:	nop
  415cdc:	fsubr  DWORD PTR [esi-0x6af8172a]
  415ce2:	int3   
  415ce3:	inc    ecx
  415ce4:	test   DWORD PTR [ebx],ebx
  415ce6:	and    eax,0xe8f8c0c3
  415ceb:	lahf   
  415cec:	jne    0x415ca4
  415cee:	add    al,0x6d
  415cf0:	repnz std 
  415cf2:	or     BYTE PTR [edx+ebp*8],bh
  415cf5:	retf   
  415cf6:	sets   BYTE PTR [ecx-0x32088425]
  415cfd:	data16 fisttp DWORD PTR [eax]
  415d00:	jae    0x415d7a
  415d02:	sti    
  415d03:	mov    bl,0x2a
  415d05:	push   eax
  415d06:	dec    ecx
  415d07:	sub    eax,edi
  415d09:	pusha  
  415d0a:	outs   dx,BYTE PTR ds:[esi]
  415d0b:	jo     0x415d61
  415d0d:	mov    ds:0xc0dd045e,al
  415d12:	inc    ebx
  415d13:	adc    cl,dh
  415d15:	data16 cmp al,0x8c
  415d18:	call   0x1a9c67c9
  415d1d:	mov    ebp,0x23674f75
  415d22:	dec    ecx
  415d23:	scas   al,BYTE PTR es:[edi]
  415d24:	sbb    BYTE PTR [esi-0x4dc8e57e],bl
  415d2a:	ins    DWORD PTR es:[edi],dx
  415d2b:	ror    DWORD PTR [edx+0x66],cl
  415d2e:	dec    edi
  415d2f:	xchg   edx,eax
  415d30:	add    BYTE PTR [ecx+0xc],0x1c
  415d34:	bound  esi,QWORD PTR [edx]
  415d36:	adc    eax,0x365e7d50
  415d3b:	jg     0x415d67
  415d3d:	and    dh,BYTE PTR [ebp-0x7f]
  415d40:	in     al,dx
  415d41:	call   0xad9162b
  415d46:	or     ah,BYTE PTR [esi+ebp*2-0x78]
  415d4a:	aaa    
  415d4b:	div    BYTE PTR ds:0x1da7a09
  415d51:	scas   al,BYTE PTR es:[edi]
  415d52:	jp     0x415d05
  415d54:	inc    esi
  415d55:	sti    
  415d56:	dec    eax
  415d57:	add    al,0x77
  415d59:	add    BYTE PTR [edx+0xd],cl
  415d5c:	int    0x1c
  415d5e:	hlt    
  415d5f:	inc    edx
  415d60:	pop    ecx
  415d61:	sub    DWORD PTR [ecx+0x4326dbc],0x310fb585
  415d6b:	cld    
  415d6c:	gs add al,0xfe
  415d6f:	stos   BYTE PTR es:[edi],al
  415d70:	and    bh,BYTE PTR [esi+esi*8-0x55]
  415d74:	dec    esp
  415d75:	lock dec ebx
  415d77:	icebp  
  415d78:	setl   BYTE PTR [edx+eiz*8+0x4d]
  415d7d:	bswap  edx
  415d7f:	in     eax,0xe0
  415d81:	dec    ecx
  415d82:	mov    eax,ds:0x68755b7e
  415d87:	xor    ch,BYTE PTR [ebp+0x72]
  415d8a:	mov    eax,0xd78cb796
  415d8f:	jnp    0x415dfa
  415d91:	sub    esp,edx
  415d93:	(bad)  [eax+0x3e346e06]
  415d99:	ficomp WORD PTR [edi]
  415d9b:	jno    0x415ddc
  415d9d:	adc    DWORD PTR [ebx+0x3a],ecx
  415da0:	sub    BYTE PTR [esi-0x76],ch
  415da3:	dec    edi
  415da4:	sub    eax,0x82448ca4
  415da9:	imul   esp,DWORD PTR [edx],0x566519e7
  415daf:	mov    esi,0x59998b71
  415db4:	mov    ebp,0x2ddd2d9c
  415db9:	mov    eax,0x1bb25bae
  415dbe:	imul   esi,DWORD PTR [ebx-0x18aa08e5],0xffffff95
  415dc5:	jmp    0x7b0f49fd
  415dca:	test   BYTE PTR [edi-0x3f0e3cf7],bl
  415dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dd1:	xchg   edx,eax
  415dd2:	xor    bl,al
  415dd4:	out    dx,al
  415dd5:	adc    dl,BYTE PTR [ecx+0x50]
  415dd8:	adc    BYTE PTR [ebx-0x357af4aa],dh
  415dde:	adc    eax,esp
  415de0:	(bad)  
  415de1:	js     0x415df0
  415de3:	jbe    0x415de1
  415de5:	xchg   DWORD PTR [edx],ebp
  415de7:	dec    ecx
  415de8:	les    ebx,FWORD PTR [ecx-0x1d]
  415deb:	mov    ds:0x5c527450,al
  415df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415df1:	pop    edi
  415df2:	xchg   edx,eax
  415df3:	dec    esp
  415df4:	pop    ebp
  415df5:	loope  0x415db7
  415df7:	push   ebx
  415df8:	sbb    edx,DWORD PTR [ebx+0x62]
  415dfb:	mov    ebp,0xc99c92e1
  415e00:	in     al,dx
  415e01:	fimul  DWORD PTR [eax+eax*8-0x6e]
  415e05:	sub    eax,0x69451912
  415e0a:	adc    ecx,DWORD PTR [eax]
  415e0c:	stc    
  415e0d:	mov    edi,0xfac7f776
  415e12:	(bad)  [ecx-0x10]
  415e15:	test   eax,0x8eb06b3a
  415e1a:	mov    ah,0x6c
  415e1c:	shl    DWORD PTR [edx-0x80],cl
  415e1f:	mov    edx,0x9258dfc6
  415e24:	pop    DWORD PTR [esi+0x161b2e19]
  415e2a:	std    
  415e2b:	sti    
  415e2c:	and    BYTE PTR [ebx-0x1b],ah
  415e2f:	arpl   WORD PTR [esi],bp
  415e31:	les    ebp,FWORD PTR [ebx]
  415e33:	cmp    al,0xc9
  415e35:	sub    cl,cl
  415e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e38:	xchg   BYTE PTR cs:[esi+0x2cc7f270],dh
  415e3f:	loope  0x415e82
  415e41:	and    eax,0x3c24ae94
  415e46:	fisubr DWORD PTR ds:0x97abbe80
  415e4c:	sub    eax,0x531cde74
  415e51:	pop    ebx
  415e52:	sbb    BYTE PTR [esp+ebx*2+0x6c],bl
  415e56:	inc    eax
  415e57:	xor    eax,0x6aafaa31
  415e5c:	cmp    DWORD PTR [ecx-0x50],ecx
  415e5f:	sti    
  415e60:	in     al,0x9d
  415e62:	sub    BYTE PTR ds:[ecx],bl
  415e65:	out    0xcd,al
  415e67:	imul   ebx,edi,0xffffffc6
  415e6a:	xor    DWORD PTR [edi-0x4b],ebx
  415e6d:	cmp    ah,BYTE PTR [eax-0x38]
  415e70:	jae    0x415e80
  415e72:	xor    DWORD PTR ds:0xfeb30bf4,ebp
  415e78:	inc    ebp
  415e79:	xchg   edx,eax
  415e7a:	fadd   st(5),st
  415e7c:	pop    ebp
  415e7d:	inc    ebx
  415e7e:	loope  0x415eb2
  415e80:	sti    
  415e81:	xchg   ecx,eax
  415e82:	pop    esi
  415e83:	pop    ebp
  415e84:	jbe    0x415e7f
  415e86:	xchg   ecx,esi
  415e88:	push   esp
  415e89:	scas   al,BYTE PTR es:[edi]
  415e8a:	sbb    al,0xc8
  415e8c:	fiadd  DWORD PTR [ecx-0x7]
  415e8f:	xchg   ecx,eax
  415e90:	popf   
  415e91:	mov    cl,0x90
  415e93:	push   esi
  415e94:	clc    
  415e95:	dec    esp
  415e96:	cmc    
  415e97:	shr    DWORD PTR [ebx],1
  415e99:	fimul  WORD PTR [ecx]
  415e9b:	jmp    0x415ed7
  415e9d:	(bad)  
  415e9e:	push   ecx
  415e9f:	cmp    edi,esp
  415ea1:	aaa    
  415ea2:	cmp    ah,BYTE PTR [edi]
  415ea4:	arpl   di,dx
  415ea6:	and    bl,BYTE PTR [ebp-0x6f]
  415ea9:	daa    
  415eaa:	pop    ds
  415eab:	inc    eax
  415eac:	xor    DWORD PTR [edx+eiz*8+0x48],esi
  415eb0:	jne    0x415ed7
  415eb2:	bound  ebx,QWORD PTR ds:0x72eee39
  415eb8:	punpcklwd mm2,DWORD PTR [esi-0x4910aad8]
  415ebf:	scas   al,BYTE PTR es:[edi]
  415ec0:	dec    ebp
  415ec1:	call   0xb8f0201c
  415ec6:	and    eax,0x9c1eba45
  415ecb:	ror    BYTE PTR [esp+ebp*1],1
  415ece:	adc    al,0x81
  415ed0:	jmp    0x5bfc:0xc6be2ff8
  415ed7:	out    dx,eax
  415ed8:	mov    eax,ds:0x13a0ce68
  415edd:	(bad)  
  415ede:	pop    ds
  415edf:	lods   eax,DWORD PTR ds:[esi]
  415ee0:	sbb    esi,DWORD PTR [esi]
  415ee2:	mov    eax,ds:0x16d6aaab
  415ee7:	jg     0x415ed3
  415ee9:	jecxz  0x415ef6
  415eeb:	push   ss
  415eec:	pop    es
  415eed:	fmul   DWORD PTR [ecx*8+0x3c6bc83b]
  415ef4:	dec    ecx
  415ef5:	sub    DWORD PTR [eax],ebp
  415ef7:	adc    bh,BYTE PTR [ebp+0x68]
  415efa:	sbb    eax,0x1ce2de79
  415eff:	jl     0x415ee7
  415f01:	or     BYTE PTR [ecx-0x1223a88e],0xa1
  415f08:	ins    BYTE PTR es:[edi],dx
  415f09:	test   BYTE PTR [ecx-0x42],bl
  415f0c:	int3   
  415f0d:	xchg   ch,dl
  415f0f:	dec    ecx
  415f10:	mov    eax,0x1269ffc6
  415f15:	inc    ebx
  415f16:	or     eax,0x1dc320c7
  415f1b:	icebp  
  415f1c:	push   0xfffffff7
  415f1e:	dec    esi
  415f1f:	jb     0x415f5d
  415f21:	or     bh,ch
  415f23:	(bad)  
  415f24:	pop    ecx
  415f25:	push   ebx
  415f26:	inc    ebx
  415f27:	add    eax,0x53500b9f
  415f2c:	test   dh,ah
  415f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f2f:	aad    0x41
  415f31:	jno    0x415ed2
  415f33:	jno    0x415f55
  415f35:	dec    eax
  415f36:	jnp    0x415eee
  415f38:	pop    edx
  415f39:	fsub   st(5),st
  415f3b:	push   edi
  415f3c:	mov    cl,0xdb
  415f3e:	ss in  eax,0x43
  415f41:	push   0xe88f809d
  415f46:	repz sbb BYTE PTR [ebx],al
  415f49:	sbb    eax,0xa1b1afad
  415f4e:	dec    edx
  415f4f:	mov    bl,0x2
  415f51:	sti    
  415f52:	jo     0x415fa6
  415f54:	jmp    0x6d33:0xab534272
  415f5b:	inc    esi
  415f5c:	mov    ah,0xef
  415f5e:	pop    ds
  415f5f:	dec    edx
  415f60:	(bad)  
  415f61:	les    ecx,FWORD PTR [ebx-0x70]
  415f64:	inc    edx
  415f65:	mov    eax,ds:0x6fe114b6
  415f6a:	mov    eax,0xa4a6ca6d
  415f6f:	mov    esp,0xe0a6a514
  415f74:	sbb    al,0x68
  415f76:	xor    eax,DWORD PTR [edi-0x2c6aab0]
  415f7c:	sbb    ah,BYTE PTR [esi-0x4c]
  415f7f:	cmp    eax,DWORD PTR [esp+edi*1]
  415f82:	(bad)  
  415f83:	adc    cl,BYTE PTR [edx-0x59]
  415f86:	mov    ecx,0x2eb664a6
  415f8b:	and    BYTE PTR [eax+eax*1],dh
  415f8e:	mov    edx,0x1d660c6b
  415f93:	xchg   bh,dl
  415f95:	jne    0x415f21
  415f97:	dec    ebp
  415f98:	mov    ah,0xb6
  415f9a:	push   ss
  415f9b:	cmp    ebp,DWORD PTR [ebp-0x7f]
  415f9e:	cwde   
  415f9f:	adc    BYTE PTR [esi-0x2d],ah
  415fa2:	mov    dh,0x8f
  415fa4:	inc    ecx
  415fa5:	adc    edi,DWORD PTR [ecx-0x1c7c1e00]
  415fab:	inc    esi
  415fac:	jle    0x416006
  415fae:	and    edi,esi
  415fb0:	pop    ds
  415fb1:	call   0x2bf1328f
  415fb6:	cli    
  415fb7:	inc    eax
  415fb8:	je     0x415fb9
  415fba:	adc    DWORD PTR [edx],ecx
  415fbc:	(bad)  
  415fbd:	mov    edx,0xe9aef51a
  415fc2:	mov    cl,0x33
  415fc4:	pop    es
  415fc5:	xor    DWORD PTR [eax+0x39],edx
  415fc8:	mov    eax,ds:0xed86aab0
  415fcd:	mov    ecx,0xa582a1b6
  415fd2:	and    ecx,DWORD PTR [esi+ebp*4+0x4bca7c78]
  415fd9:	aaa    
  415fda:	and    edi,DWORD PTR [edx-0x3bc2c64a]
  415fe0:	pushf  
  415fe1:	jl     0x416004
  415fe3:	inc    edx
  415fe4:	mov    ecx,0xfc8239e7
  415fe9:	rol    BYTE PTR [ecx],0x47
  415fec:	fstp   QWORD PTR [eax+0x3f]
  415fef:	dec    esp
  415ff0:	cli    
  415ff1:	(bad)  
  415ff2:	mov    dl,0x4a
  415ff4:	adc    eax,0x8475368e
  415ff9:	aas    
  415ffa:	pop    esp
  415ffb:	nop
  415ffc:	in     al,0xe1
  415ffe:	fcomp  QWORD PTR fs:[ebp-0x6fb4de66]
  416005:	(bad)  
  416006:	(bad)  
  416007:	out    dx,al
  416008:	repnz repz repnz mov ecx,0x2dda945b
  416010:	fnstsw WORD PTR [ecx-0x34]
  416013:	jmp    0x3ecf:0x864d6273
  41601a:	mov    ebx,0x42a63ab5
  41601f:	int3   
  416020:	sbb    eax,0xd4916e31
  416025:	mov    ds:0x376f8866,eax
  41602a:	fs scas eax,DWORD PTR es:[edi]
  41602c:	inc    ecx
  41602d:	add    BYTE PTR [ebx],0x9
  416030:	cmc    
  416031:	sti    
  416032:	mov    edi,0xaa43d76a
  416037:	js     0x4160b5
  416039:	sub    al,0x19
  41603b:	jns    0x416016
  41603d:	sahf   
  41603e:	call   0x2a3a378c
  416043:	add    edx,DWORD PTR ds:0xf436c5f6
  416049:	fiadd  DWORD PTR [esi-0x27]
  41604c:	push   ecx
  41604d:	adc    BYTE PTR [edi+esi*2-0x7c],ah
  416051:	cmp    al,BYTE PTR [ebx]
  416053:	mov    al,0x5f
  416055:	in     al,0xbd
  416057:	xor    ch,dh
  416059:	outs   dx,DWORD PTR ds:[esi]
  41605a:	imul   ebp,DWORD PTR ds:0x98b7562d,0xffffffe2
  416061:	mov    DWORD PTR [edi-0x21801f34],ecx
  416067:	cwde   
  416068:	pop    ecx
  416069:	test   al,0xcc
  41606b:	in     eax,dx
  41606c:	mov    bh,0x5c
  41606e:	lock add eax,0x5335e6b9
  416074:	xchg   esi,eax
  416075:	sub    BYTE PTR [eax+0x866e27f],al
  41607b:	push   DWORD PTR [edx-0x4737cd6e]
  416081:	mov    esp,0x85e61c11
  416086:	adc    al,0x19
  416088:	int    0xb5
  41608a:	push   edx
  41608b:	fcmovnb st,st(1)
  41608d:	pop    edx
  41608e:	nop
  41608f:	ds hlt 
  416091:	push   esp
  416092:	pop    esp
  416093:	cdq    
  416094:	push   0x4c
  416096:	nop
  416097:	sbb    eax,0x1c723d8d
  41609c:	add    ebx,DWORD PTR [eax+0x554cfce0]
  4160a2:	xchg   edx,eax
  4160a3:	push   es
  4160a4:	popa   
  4160a5:	ins    BYTE PTR es:[edi],dx
  4160a6:	imul   DWORD PTR [eax+0x3f]
  4160a9:	mov    ecx,DWORD PTR [ebx+0x65e3aabc]
  4160af:	arpl   WORD PTR [ebp-0x2e],bx
  4160b2:	imul   ebp,esi,0xfa6a3615
  4160b8:	retf   
  4160b9:	inc    ebp
  4160ba:	xchg   ecx,eax
  4160bb:	push   0xffffffb0
  4160bd:	or     BYTE PTR [edx],dh
  4160bf:	loop   0x41612b
  4160c1:	add    bh,al
  4160c3:	(bad)  
  4160c4:	outs   dx,DWORD PTR ds:[esi]
  4160c5:	aas    
  4160c6:	xor    BYTE PTR [eax+0x37],dl
  4160c9:	scas   al,BYTE PTR es:[edi]
  4160ca:	les    edx,FWORD PTR [edx+edi*8+0x6b]
  4160ce:	ins    DWORD PTR es:[edi],dx
  4160cf:	cs aaa 
  4160d1:	into   
  4160d2:	inc    ebx
  4160d3:	test   al,0x47
  4160d5:	scas   eax,DWORD PTR es:[edi]
  4160d6:	nop
  4160d7:	lods   al,BYTE PTR ds:[esi]
  4160d8:	retf   0x4997
  4160db:	stos   BYTE PTR es:[edi],al
  4160dc:	push   ss
  4160dd:	cmp    edi,DWORD PTR [ebp+0xe100ec5]
  4160e3:	sub    al,0x9a
  4160e5:	fmul   QWORD PTR [ecx-0x3c]
  4160e8:	push   es
  4160e9:	sbb    esi,DWORD PTR [ecx+0x316b83f8]
  4160ef:	stos   DWORD PTR es:[edi],eax
  4160f0:	(bad)  
  4160f1:	loopne 0x4160f8
  4160f3:	cmp    al,0x6c
  4160f5:	aam    0x8
  4160f7:	loopne 0x416129
  4160f9:	in     eax,dx
  4160fa:	mov    ah,0xc6
  4160fc:	fcomp  st(3)
  4160fe:	adc    edx,DWORD PTR [edx+0x49]
  416101:	aaa    
  416102:	xchg   BYTE PTR ds:0xe0d9ae86,ah
  416108:	cmp    eax,0xe489b4bd
  41610d:	mov    ds:0xdcb5c115,al
  416112:	rol    DWORD PTR [ebp-0x1c44f167],1
  416118:	scas   al,BYTE PTR es:[edi]
  416119:	out    0x8d,eax
  41611b:	jg     0x416158
  41611d:	push   es
  41611e:	jl     0x41618e
  416120:	popa   
  416121:	lods   al,BYTE PTR ds:[esi]
  416122:	retf   
  416123:	jle    0x41610f
  416125:	scas   al,BYTE PTR es:[edi]
  416126:	pop    ss
  416127:	cdq    
  416128:	ret    0x297
  41612b:	xor    edx,ecx
  41612d:	and    eax,0xfdbef44d
  416132:	rol    bh,0x5e
  416135:	lods   eax,DWORD PTR ds:[esi]
  416136:	add    BYTE PTR [edi+0x28],al
  416139:	clc    
  41613a:	je     0x41613c
  41613c:	loope  0x41617d
  41613e:	inc    edi
  41613f:	pop    es
  416140:	fild   QWORD PTR [ebp+esi*8+0x73f9fe5]
  416147:	push   ebp
  416148:	adc    DWORD PTR [ecx],edx
  41614a:	xor    al,0x63
  41614c:	es sbb eax,0x6815f13b
  416152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416153:	jge    0x416145
  416155:	sti    
  416156:	dec    esi
  416157:	ret    
  416158:	clc    
  416159:	test   BYTE PTR [edi+0x7cfa0f7a],dh
  41615f:	loope  0x4161b4
  416161:	push   edx
  416162:	mov    eax,ds:0xbf85ac32
  416167:	push   esi
  416168:	cdq    
  416169:	ror    esi,cl
  41616b:	pop    edi
  41616c:	jg     0x416190
  41616e:	retf   0xe45b
  416171:	add    ecx,ebp
  416173:	jno    0x416116
  416175:	aas    
  416176:	mov    ecx,0x85c60e85
  41617b:	dec    edx
  41617c:	arpl   sp,bp
  41617e:	push   es
  41617f:	out    dx,eax
  416180:	jmp    0x416174
  416182:	push   edx
  416183:	cmp    edx,edx
  416185:	xchg   esp,eax
  416186:	pop    ds
  416187:	xchg   ebx,eax
  416188:	fucomp st(4)
  41618a:	out    dx,eax
  41618b:	shl    DWORD PTR [esi+edx*8+0x7c9b4b23],0xe
  416193:	lock adc ebx,0xc5076506
  41619a:	sub    cl,BYTE PTR [edx]
  41619c:	retf   
  41619d:	add    BYTE PTR [ebx-0x3e],ah
  4161a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161a1:	les    ebx,FWORD PTR [ebp+eiz*8-0x5f45a82a]
  4161a8:	and    eax,0x3e495c3e
  4161ad:	fist   WORD PTR [edx-0x5b]
  4161b0:	fiadd  WORD PTR [edx+0x63]
  4161b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b4:	(bad)  
  4161b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b6:	and    bl,0x79
  4161b9:	mov    ch,0x20
  4161bb:	inc    ecx
  4161bc:	fwait
  4161bd:	add    DWORD PTR [eax],ecx
  4161bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161c0:	fs xchg edi,eax
  4161c2:	xor    BYTE PTR ds:0x9e31e71d,ah
  4161c8:	mov    ah,0x66
  4161ca:	dec    esp
  4161cb:	sti    
  4161cc:	out    dx,eax
  4161cd:	adc    ah,BYTE PTR [ecx+0x38]
  4161d0:	cmc    
  4161d1:	jne    0x416193
  4161d3:	mov    ds:0x8d93f4af,eax
  4161d8:	add    dl,BYTE PTR [ebp+0x76503f69]
  4161de:	sar    BYTE PTR [edx-0x6e4cc58e],0x33
  4161e5:	xchg   edx,eax
  4161e6:	sub    al,0xc9
  4161e8:	cmp    eax,0x6f654148
  4161ed:	rcl    BYTE PTR [edx],0x55
  4161f0:	nop
  4161f1:	ds inc ecx
  4161f3:	cdq    
  4161f4:	ffreep st(4)
  4161f6:	cmp    eax,0x26c71911
  4161fb:	adc    al,0xf9
  4161fd:	push   cs
  4161fe:	push   ebp
  4161ff:	jae    0x416267
  416201:	aam    0xb9
  416203:	jge    0x4161f5
  416205:	stc    
  416206:	cs mov bl,0x6d
  416209:	mov    DWORD PTR [edx*8+0x43b7d2d6],ebx
  416210:	cwde   
  416211:	adc    edi,edi
  416213:	add    DWORD PTR [eax+ebx*1-0x1f],0x45
  416218:	pop    ebx
  416219:	sbb    BYTE PTR [esi+0x50],cl
  41621c:	lock gs aaa 
  41621f:	cdq    
  416220:	mov    al,ds:0x4b5b1d41
  416225:	xchg   ecx,eax
  416226:	stos   BYTE PTR es:[edi],al
  416227:	mov    al,ds:0x76db4e19
  41622c:	jmp    0x416249
  41622e:	mov    cl,0xd2
  416230:	push   0xffffffd5
  416232:	out    0x13,eax
  416234:	lods   al,BYTE PTR ds:[esi]
  416235:	sub    eax,0x771e5738
  41623a:	icebp  
  41623b:	jp     0x4161d8
  41623d:	jbe    0x416240
  41623f:	sar    BYTE PTR [esi],cl
  416241:	nop
  416242:	xchg   ebp,eax
  416243:	lea    edi,[ecx]
  416245:	in     al,0x4e
  416247:	retf   
  416248:	pop    esi
  416249:	mov    ds:0x9f25a92d,eax
  41624e:	adc    ah,0xbb
  416251:	mov    es,ebp
  416253:	std    
  416254:	xor    al,0xd4
  416256:	add    dl,BYTE PTR [ebx-0x6f]
  416259:	pop    esi
  41625a:	mov    bh,0xc2
  41625c:	mov    bl,0xc
  41625e:	mov    ah,BYTE PTR [esi]
  416260:	lahf   
  416261:	add    eax,0x982da122
  416266:	or     bh,dh
  416268:	daa    
  416269:	aas    
  41626a:	mov    edx,0xf9c7f12b
  41626f:	ret    
  416270:	mov    ah,al
  416272:	cmp    DWORD PTR [ecx+0x1d6af51b],edx
  416278:	inc    ebx
  416279:	and    al,BYTE PTR [eax+0x25]
  41627c:	jge    0x416216
  41627e:	dec    esi
  41627f:	jmp    0x25d6122a
  416284:	and    DWORD PTR [ebp-0x2d],edx
  416287:	pop    esi
  416288:	mov    ebx,0xd26046d4
  41628d:	add    eax,0xc7fd20f5
  416292:	lahf   
  416293:	jbe    0x41622e
  416295:	push   ds
  416296:	lds    eax,FWORD PTR [ebx-0x19]
  416299:	stos   DWORD PTR es:[edi],eax
  41629a:	sub    al,0xfa
  41629c:	jg     0x4162c1
  41629e:	cs (bad) 
  4162a0:	out    dx,eax
  4162a1:	and    bh,ch
  4162a3:	xor    esi,eax
  4162a5:	es push 0xffffffdb
  4162a8:	fstp   DWORD PTR [esi-0x5e0225b4]
  4162ae:	int    0xf
  4162b0:	jecxz  0x416263
  4162b2:	jmp    0xe796b864
  4162b7:	cmc    
  4162b8:	jno    0x4162d6
  4162ba:	cmp    BYTE PTR [edx+0x6800b0d6],dl
  4162c0:	adc    eax,0xa5c35131
  4162c5:	in     al,dx
  4162c6:	pop    esp
  4162c7:	ret    
  4162c8:	dec    edx
  4162c9:	loop   0x41633d
  4162cb:	into   
  4162cc:	mov    al,0xed
  4162ce:	jle    0x416286
  4162d0:	int3   
  4162d1:	push   edx
  4162d2:	das    
  4162d3:	fist   DWORD PTR [ecx-0x51]
  4162d6:	pusha  
  4162d7:	(bad)  [esi]
  4162d9:	outs   dx,BYTE PTR ds:[esi]
  4162da:	das    
  4162db:	adc    bh,0x4a
  4162de:	jl     0x416292
  4162e0:	in     eax,0xa1
  4162e2:	cmc    
  4162e3:	in     eax,0xa0
  4162e5:	fwait
  4162e6:	add    DWORD PTR [ebx],esi
  4162e8:	out    0xa9,al
  4162ea:	or     eax,0xd823325c
  4162ef:	mov    esi,0x907e24d
  4162f4:	in     eax,0x8c
  4162f6:	inc    edi
  4162f7:	pop    ebx
  4162f8:	fistp  QWORD PTR [edx-0x57]
  4162fb:	aad    0x2f
  4162fd:	pop    eax
  4162fe:	mov    edi,0x2dc1ac6a
  416303:	iret   
  416304:	add    DWORD PTR [esi-0x5db4cca5],ebx
  41630a:	int3   
  41630b:	cmp    edx,esp
  41630d:	push   edx
  41630e:	lock and ah,BYTE PTR [edx+0x773d40b5]
  416315:	test   eax,0x41acdcb8
  41631a:	push   esp
  41631b:	aam    0x61
  41631d:	out    dx,al
  41631e:	adc    dl,BYTE PTR [edx+eax*1-0x49]
  416322:	or     esi,edi
  416324:	das    
  416325:	in     eax,0xbc
  416327:	mov    esi,0xe5dc506c
  41632c:	in     eax,dx
  41632d:	out    dx,al
  41632e:	imul   edi,DWORD PTR [eax-0x49914ca5],0xfb4a0706
  416338:	push   esi
  416339:	repnz xchg ebp,eax
  41633b:	mov    dh,0x48
  41633d:	jbe    0x4162d8
  41633f:	jo     0x4163aa
  416341:	cmp    al,0x9a
  416343:	jbe    0x416324
  416345:	hlt    
  416346:	std    
  416347:	and    BYTE PTR [edi+0x603000ab],dh
  41634d:	aad    0x16
  41634f:	retf   
  416350:	lahf   
  416351:	inc    edx
  416352:	jmp    0xde42:0x84c937b8
  416359:	mov    dh,0x4f
  41635b:	or     al,0x1e
  41635d:	sbb    al,0xd3
  41635f:	cdq    
  416360:	int    0x5e
  416362:	iret   
  416363:	retf   0x52bd
  416366:	ret    
  416367:	inc    ebx
  416368:	bound  edx,QWORD PTR [ebx-0x360f8b6]
  41636e:	mov    DWORD PTR [edi-0x4c],esp
  416371:	sbb    DWORD PTR ds:0x10f98a91,ecx
  416377:	mov    ebx,0x97a92972
  41637c:	stos   DWORD PTR es:[edi],eax
  41637d:	shl    DWORD PTR [ecx],cl
  41637f:	sub    BYTE PTR [ebx-0x30],al
  416382:	jl     0x4163c5
  416384:	dec    esp
  416385:	adc    BYTE PTR [edx-0x4f],ch
  416388:	repz aad 0x47
  41638b:	test   eax,0x8313248f
  416390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416391:	rcr    DWORD PTR [edx+0x5297a0b1],cl
  416397:	mov    al,ds:0x59bc0b6a
  41639c:	loop   0x4163c0
  41639e:	mov    eax,DWORD PTR [ebp+0x29]
  4163a1:	es pop edx
  4163a3:	mov    bh,0xf9
  4163a5:	sbb    al,0xb2
  4163a7:	fsubr  DWORD PTR [edi-0x72]
  4163aa:	js     0x416422
  4163ac:	mov    esi,0x84a75e15
  4163b1:	aas    
  4163b2:	pop    ds
  4163b3:	and    al,0xe7
  4163b5:	pop    ebx
  4163b6:	add    DWORD PTR [ebp+0x41],edx
  4163b9:	ss pop es
  4163bb:	xchg   BYTE PTR [esi],al
  4163bd:	mov    esp,0xdcfef746
  4163c2:	lahf   
  4163c3:	and    BYTE PTR [edx+edi*2+0x41],dh
  4163c7:	aad    0xf6
  4163c9:	adc    DWORD PTR [ebx-0x32],edx
  4163cc:	into   
  4163cd:	inc    esi
  4163ce:	and    al,0x2
  4163d0:	sub    esi,DWORD PTR ds:0xc6627435
  4163d6:	out    0x31,al
  4163d8:	push   0xffffffc8
  4163da:	jo     0x4163ea
  4163dc:	add    eax,0x8153720f
  4163e1:	in     eax,dx
  4163e2:	out    0x31,al
  4163e4:	mov    cl,BYTE PTR [ebx]
  4163e6:	xor    DWORD PTR [ebx-0x4cd5bc2f],0x29
  4163ed:	mov    dl,0x80
  4163ef:	add    ebp,esi
  4163f1:	imul   eax,DWORD PTR [ebp+edx*4-0x25],0x142998e
  4163f9:	xchg   BYTE PTR [edx-0x3e68076b],bh
  4163ff:	pop    ecx
  416400:	mov    dl,0xc8
  416402:	mov    bl,0x53
  416404:	inc    ebx
  416405:	pop    eax
  416406:	ins    DWORD PTR es:[edi],dx
  416407:	int    0xad
  416409:	sbb    eax,0xac6f4887
  41640e:	fnstsw WORD PTR [ebx]
  416410:	pop    ebp
  416411:	and    DWORD PTR [edx-0x131ba61f],edx
  416417:	sub    al,0x79
  416419:	mov    edi,0xf1b0e96c
  41641e:	les    ebx,FWORD PTR [eax-0x3a3b5506]
  416424:	dec    edx
  416425:	and    edx,DWORD PTR [ebx+0x386a5bb6]
  41642b:	pushf  
  41642c:	retf   0xd09c
  41642f:	test   BYTE PTR [ecx],bh
  416431:	nop
  416432:	js     0x416454
  416434:	xchg   ebp,eax
  416435:	adc    DWORD PTR [edx+0x5689abd0],0xffffffb8
  41643c:	fs mov eax,ds:0xb481756b
  416443:	cld    
  416444:	das    
  416445:	fadd   QWORD PTR [eax-0x71]
  416448:	lods   al,BYTE PTR ds:[esi]
  416449:	sub    ch,BYTE PTR [edx-0x65b2646f]
  41644f:	fadd   DWORD PTR [edi]
  416451:	fst    QWORD PTR [esi+ebp*1+0x8a4f2c2]
  416458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416459:	pop    esi
  41645a:	jns    0x416481
  41645c:	arpl   WORD PTR [ecx-0x2394b50e],bp
  416462:	xor    eax,0xf4c850a
  416467:	out    dx,eax
  416468:	add    al,0x83
  41646a:	xor    eax,0x25144bd2
  41646f:	es dec ebx
  416471:	jbe    0x4164d6
  416473:	sbb    DWORD PTR [ebp+ecx*4-0x3b],edi
  416477:	and    ah,al
  416479:	xor    BYTE PTR [esi-0x879348b],ch
  41647f:	rcl    BYTE PTR [ebx],1
  416481:	in     eax,dx
  416482:	fs pop ecx
  416484:	mov    ds:0x8c39b795,eax
  416489:	ja     0x4164ff
  41648b:	pop    edi
  41648c:	inc    esi
  41648d:	cmp    eax,0xdbbc4ffe
  416492:	add    dh,BYTE PTR ds:0x6adec4aa
  416498:	pop    ds
  416499:	add    eax,0x452d7e14
  41649e:	ja     0x4164ea
  4164a0:	pop    esp
  4164a1:	sahf   
  4164a2:	or     eax,0xc5b08c7f
  4164a7:	push   edx
  4164a8:	mov    ebp,0x805350bd
  4164ae:	jne    0x4164af
  4164b0:	fwait
  4164b1:	dec    edx
  4164b2:	jno    0x41643d
  4164b4:	push   esi
  4164b5:	push   esi
  4164b6:	(bad)  
  4164b7:	inc    DWORD PTR [esi+0x5e]
  4164ba:	jb     0x416457
  4164bc:	xor    edx,DWORD PTR [edx]
  4164be:	or     BYTE PTR [ecx-0x6d014a45],0x57
  4164c5:	lds    esi,FWORD PTR [ecx+0x7f091aae]
  4164cb:	sbb    bl,bh
  4164cd:	pop    es
  4164ce:	push   cs
  4164cf:	dec    esp
  4164d0:	rol    DWORD PTR ds:0x8a117952,1
  4164d6:	fs or  edi,esi
  4164d9:	jb     0x4164cc
  4164db:	mov    bl,0xeb
  4164dd:	ss mov esp,0xcb4440a9
  4164e3:	sbb    ah,BYTE PTR [edx]
  4164e5:	fucomp st(4)
  4164e7:	pop    esi
  4164e8:	test   eax,0x4a88738
  4164ed:	es dec eax
  4164ef:	jl     0x416502
  4164f1:	ds loop 0x4164cd
  4164f4:	sub    DWORD PTR [ebx],ecx
  4164f6:	jo     0x4164d7
  4164f8:	mov    bh,0xe7
  4164fa:	jno    0x41649a
  4164fc:	mov    cl,0xc5
  4164fe:	mov    ecx,0x691a54cd
  416503:	xor    ch,BYTE PTR [ebx]
  416505:	xchg   ecx,eax
  416506:	les    ebp,FWORD PTR [ebx+0x25]
  416509:	sub    eax,0x525e9ccc
  41650e:	or     al,BYTE PTR [eax+ebx*8+0x77df5d8e]
  416515:	sbb    al,0x5
  416517:	lea    edi,ds:0x664769aa
  41651d:	fldenv [edx+0x586be874]
  416523:	jmp    0x7ab4:0x4cfb82d1
  41652a:	mov    ebx,DWORD PTR [edi+edx*2-0x3c]
  41652e:	xor    BYTE PTR [ebx+0x52],ch
  416531:	repnz cwde 
  416533:	dec    edx
  416534:	xchg   ebp,eax
  416535:	in     eax,dx
  416536:	in     eax,dx
  416537:	add    BYTE PTR [ecx+0x3d3bc4fa],dl
  41653d:	jnp    0x416508
  41653f:	push   ecx
  416540:	stos   BYTE PTR es:[edi],al
  416541:	pop    esi
  416542:	(bad)  
  416543:	test   BYTE PTR [ecx+0x5075e4b0],0x6
  41654a:	pop    ss
  41654b:	xor    al,0xe2
  41654d:	(bad)  
  41654e:	fcmovnbe st,st(6)
  416550:	inc    BYTE PTR [edi+0x2ac25bc0]
  416556:	add    bl,al
  416558:	or     edi,0x71
  41655b:	inc    ebp
  41655c:	sbb    edi,DWORD PTR [esi-0x73]
  41655f:	rcr    DWORD PTR ds:0x8d2fe614,0xd2
  416566:	xchg   ebp,eax
  416567:	mov    WORD PTR [edx-0x55e4a1e],ds
  41656d:	add    dl,dh
  41656f:	inc    edx
  416570:	xchg   ebp,eax
  416571:	fsubp  st(3),st
  416573:	in     eax,dx
  416574:	push   es
  416575:	and    eax,eax
  416577:	into   
  416578:	sub    eax,0xc9b2a7cc
  41657d:	mov    DWORD PTR [ecx+0x76],0xd5df89c0
  416584:	adc    DWORD PTR [ebp+0x37d04a4b],0xffffffa6
  41658b:	nop
  41658c:	stos   DWORD PTR es:[edi],eax
  41658d:	cli    
  41658e:	cmp    ecx,0x63094949
  416594:	dec    esp
  416595:	mov    ds:0xf3c6a4c9,al
  41659a:	dec    esi
  41659b:	js     0x416594
  41659d:	inc    ecx
  41659e:	outs   dx,BYTE PTR ds:[esi]
  41659f:	xchg   BYTE PTR [eax],al
  4165a1:	sbb    BYTE PTR [ecx-0x1d7a7b2b],bh
  4165a7:	js     0x416621
  4165a9:	fs fsub st(0),st
  4165ac:	in     al,0xa9
  4165ae:	mov    dh,0xb
  4165b0:	xor    DWORD PTR [ecx+ebx*8-0x6386d33b],ebx
  4165b7:	push   esi
  4165b8:	push   esi
  4165b9:	ss je  0x416575
  4165bc:	aaa    
  4165bd:	inc    edx
  4165be:	dec    esp
  4165bf:	mov    ds:0x692ad950,eax
  4165c4:	sbb    eax,0xa2985522
  4165c9:	fldcw  WORD PTR [edx+0x1a77511e]
  4165cf:	cwde   
  4165d0:	jno    0x416606
  4165d2:	mov    edx,0xa6405fb2
  4165d7:	pop    esp
  4165d8:	cs mov bh,0xe4
  4165db:	or     DWORD PTR [ebp-0xf],esp
  4165de:	iret   
  4165df:	lock adc ebp,DWORD PTR [ecx+0x129ec193]
  4165e6:	pop    esi
  4165e7:	aas    
  4165e8:	rcl    DWORD PTR [esi+0x70],1
  4165eb:	dec    ebp
  4165ec:	xchg   ebp,eax
  4165ed:	pop    ss
  4165ee:	jecxz  0x41659e
  4165f0:	adc    al,0x37
  4165f2:	push   cs
  4165f3:	data16 sbb bl,ch
  4165f6:	out    0xf6,al
  4165f8:	cmp    BYTE PTR [edx+0x68a247fe],cl
  4165fe:	inc    edi
  4165ff:	adc    edx,DWORD PTR [esi+0x2a]
  416602:	lods   eax,DWORD PTR ds:[esi]
  416603:	hlt    
  416604:	xchg   DWORD PTR [ebx+0x17],eax
  416607:	ja     0x416635
  416609:	xor    eax,0x878381b
  41660e:	test   DWORD PTR [eax],0xfb7ccfb7
  416614:	jae    0x4165c6
  416616:	lods   eax,DWORD PTR ds:[esi]
  416617:	fdiv   st,st(4)
  416619:	repnz push esp
  41661b:	cld    
  41661c:	mov    al,0xa8
  41661e:	push   0x444dc639
  416623:	adc    DWORD PTR [ebp+0x2c39a6c7],0x4da69508
  41662d:	aas    
  41662e:	mov    eax,ds:0x414312d
  416633:	sbb    ebx,DWORD PTR [edi-0x134bcdaa]
  416639:	clc    
  41663a:	jecxz  0x4165d6
  41663c:	icebp  
  41663d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41663e:	mov    cl,0xc2
  416640:	es retf 
  416642:	push   0xfffffffb
  416644:	retf   
  416645:	ret    
  416646:	(bad)  
  416647:	dec    esi
  416648:	adc    eax,0xf4431e6
  41664d:	push   0xc878afbc
  416652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416653:	xlat   BYTE PTR ds:[ebx]
  416654:	outs   dx,DWORD PTR ds:[si]
  416656:	arpl   WORD PTR [ebp+ecx*8+0x2a],bx
  41665a:	sar    BYTE PTR [ebp-0x6f66ce4d],0xb4
  416661:	mov    ah,0x69
  416663:	mov    ds:0x56090c56,al
  416668:	test   eax,0x522f9b3a
  41666d:	lock aaa 
  41666f:	test   BYTE PTR [esi],al
  416671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416672:	xor    al,0x1e
  416674:	aam    0xbe
  416676:	jmp    0x416634
  416678:	aaa    
  416679:	bswap  ebp
  41667b:	lahf   
  41667c:	mov    dh,0xe6
  41667e:	mov    al,0xdb
  416680:	repz mov dh,0xab
  416683:	addr16 mov ebx,0xac693b9b
  416689:	sbb    ebx,DWORD PTR [edx-0x53]
  41668c:	(bad)  
  41668d:	adc    cl,BYTE PTR [ebx+eiz*2]
  416690:	adc    eax,0x49e97a43
  416695:	or     ebx,DWORD PTR [edi+esi*4]
  416698:	adc    eax,0x78607be9
  41669d:	sbb    al,0xfc
  41669f:	mov    WORD PTR [edx],?
  4166a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a2:	repnz retf 
  4166a4:	mov    dl,0x62
  4166a6:	stc    
  4166a7:	adc    eax,0xf9887bfc
  4166ac:	and    ch,BYTE PTR [edi+edi*8-0x6ca6aac1]
  4166b3:	push   cs
  4166b4:	and    eax,0xfb9fdef1
  4166b9:	outs   dx,BYTE PTR ds:[esi]
  4166ba:	sub    edx,DWORD PTR [ebp-0x34]
  4166bd:	or     ebx,ebp
  4166bf:	xchg   edi,eax
  4166c0:	test   DWORD PTR [eax-0x7b11d025],0x35a1e100
  4166ca:	fisubr WORD PTR [ecx-0x75db6b0e]
  4166d0:	push   ebx
  4166d1:	mov    bh,0xb8
  4166d3:	mov    ebp,0xc94da8fa
  4166d8:	jge    0x4166b2
  4166da:	fst    DWORD PTR [edi-0x4a]
  4166dd:	arpl   WORD PTR [edx-0x3635edf8],di
  4166e3:	ja     0x416695
  4166e5:	mov    esi,0xd57e2d7b
  4166ea:	cmp    eax,0x4fe27bb9
  4166ef:	xchg   edi,eax
  4166f0:	inc    edi
  4166f1:	sar    ebx,cl
  4166f3:	sti    
  4166f4:	fwait
  4166f5:	xchg   esp,eax
  4166f6:	int3   
  4166f7:	test   al,0x2f
  4166f9:	cmp    DWORD PTR [esi-0x7a],0xffffffa9
  4166fd:	enter  0xbe05,0x66
  416701:	pop    edi
  416702:	sbb    esi,DWORD PTR [edi-0x28ea53de]
  416708:	into   
  416709:	std    
  41670a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41670b:	push   cs
  41670c:	and    bl,BYTE PTR [eax-0x4a]
  41670f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416710:	sub    esi,DWORD PTR [edx-0x65d20f2d]
  416716:	pop    edi
  416717:	jle    0x4166cf
  416719:	fmul   QWORD PTR [edi-0x31d36008]
  41671f:	loopne 0x4166c8
  416721:	ins    DWORD PTR es:[edi],dx
  416722:	aad    0x7d
  416724:	cli    
  416725:	es leave 
  416727:	retf   
  416728:	leave  
  416729:	jno    0x41679c
  41672b:	sbb    ebx,DWORD PTR [edx-0x3c]
  41672e:	sub    DWORD PTR [edx],eax
  416730:	inc    esi
  416731:	stc    
  416732:	aam    0x39
  416734:	nop
  416735:	xor    ch,bh
  416737:	mov    bl,0x79
  416739:	add    eax,0x238ed4d
  41673e:	mov    WORD PTR [ebx+esi*1+0x1666ec0b],?
  416745:	push   0xf4f78fbd
  41674a:	mov    ?,WORD PTR [esi+0x7f9d9bbc]
  416750:	dec    ebx
  416751:	xlat   BYTE PTR ds:[ebx]
  416752:	xor    ecx,DWORD PTR [ebx]
  416754:	mov    ebp,0x1a63a6e5
  416759:	icebp  
  41675a:	ins    BYTE PTR es:[edi],dx
  41675b:	aas    
  41675c:	retf   
  41675d:	pop    ss
  41675e:	outs   dx,DWORD PTR ds:[esi]
  41675f:	bound  ebx,QWORD PTR [ecx+0x65165305]
  416765:	lds    ebx,FWORD PTR [eax+0x4591f378]
  41676b:	(bad)  
  41676c:	out    dx,eax
  41676d:	(bad)  
  41676e:	sub    al,0x48
  416770:	push   ss
  416771:	cs and al,0xbf
  416774:	mov    ebp,0xf56c7e87
  416779:	xchg   ebp,eax
  41677a:	jne    0x41671c
  41677c:	pop    es
  41677d:	jae    0x41673e
  41677f:	test   eax,0xf90fd34e
  416784:	(bad)  
  416785:	jge    0x4167d1
  416787:	xchg   edx,eax
  416788:	lds    edx,FWORD PTR [eax-0x7]
  41678b:	jno    0x4167bf
  41678d:	aaa    
  41678e:	(bad)  
  41678f:	repz sub ecx,DWORD PTR [edx+eiz*2+0x44]
  416794:	sbb    edi,0x9976a0fc
  41679a:	sub    ebx,DWORD PTR [esi+0x22a91b20]
  4167a0:	push   ss
  4167a1:	ret    
  4167a2:	iret   
  4167a3:	out    dx,al
  4167a4:	fisub  WORD PTR [eax+0xd26beeb]
  4167aa:	pop    eax
  4167ab:	mov    eax,ds:0x3e44e15f
  4167b0:	jp     0x416807
  4167b2:	neg    esp
  4167b4:	fld    QWORD PTR [ebx+edx*1+0x6a]
  4167b8:	cli    
  4167b9:	cmp    al,0xc7
  4167bb:	mov    ah,0xb1
  4167bd:	add    eax,0x426c4544
  4167c2:	add    bh,BYTE PTR [eax]
  4167c4:	addr16 gs mov esi,0xc74ecbf3
  4167cb:	sti    
  4167cc:	add    ch,BYTE PTR [edx+ecx*2-0x5a0e4e2e]
  4167d3:	xchg   ebx,edi
  4167d5:	out    dx,al
  4167d6:	adc    eax,0x3f3b265b
  4167db:	iret   
  4167dc:	stos   DWORD PTR es:[edi],eax
  4167dd:	(bad)  
  4167de:	(bad)  
  4167df:	retf   
  4167e0:	pop    eax
  4167e1:	inc    ecx
  4167e2:	dec    edx
  4167e3:	inc    bh
  4167e5:	ja     0x416788
  4167e7:	fwait
  4167e8:	in     al,0x7f
  4167ea:	and    eax,0x18cddde6
  4167ef:	mov    al,0xa0
  4167f1:	jl     0x4167e9
  4167f3:	pop    ebx
  4167f4:	lods   al,BYTE PTR ds:[esi]
  4167f5:	push   0xdeb86480
  4167fa:	xchg   cx,ax
  4167fc:	into   
  4167fd:	jns    0x41678d
  4167ff:	push   ss
  416800:	pop    eax
  416801:	add    esp,DWORD PTR [ecx-0x4b]
  416804:	shr    BYTE PTR [ebp+0xefab0b5],cl
  41680a:	sub    BYTE PTR [edx-0x23],0xa8
  41680e:	sbb    BYTE PTR [esi],dl
  416810:	pop    es
  416811:	jp     0x4167cc
  416813:	push   esi
  416814:	push   esp
  416815:	loope  0x4167ca
  416817:	xchg   ecx,eax
  416818:	sbb    DWORD PTR [edi+0x6b3dd012],eax
  41681e:	test   al,0x7e
  416820:	or     eax,DWORD PTR [eax-0x2b]
  416823:	idiv   dh
  416825:	and    BYTE PTR [edx+0x6525e13a],dh
  41682b:	div    BYTE PTR [ecx+0x42]
  41682e:	and    cl,BYTE PTR [ebx]
  416830:	pushf  
  416831:	xchg   BYTE PTR [ebx+0x2ab0264d],bh
  416837:	in     al,dx
  416838:	out    dx,al
  416839:	mov    edi,0x4ccc15c8
  41683e:	jle    0x416825
  416840:	pop    esp
  416841:	out    dx,al
  416842:	mov    esp,0xab1c1960
  416847:	lea    ebp,[ebx+0x62]
  41684a:	mov    BYTE PTR ds:0x99170f53,al
  416850:	or     eax,DWORD PTR [edi]
  416852:	(bad)  [esi+eiz*8]
  416855:	out    dx,al
  416856:	inc    ebp
  416857:	arpl   WORD PTR [esi+0x627c977],bx
  41685d:	adc    dl,ch
  41685f:	push   edi
  416860:	mov    BYTE PTR [esi+0x39ae0b0],bh
  416866:	retf   0xae4a
  416869:	xchg   ecx,eax
  41686a:	mov    ds,WORD PTR [esi]
  41686c:	xchg   ecx,eax
  41686d:	lods   eax,DWORD PTR ds:[esi]
  41686e:	cmp    ebp,edx
  416870:	imul   ebx,DWORD PTR [edx+0x59],0x1c
  416874:	fld    DWORD PTR [esi+0x7c]
  416877:	outs   dx,DWORD PTR ds:[esi]
  416878:	jecxz  0x4168c5
  41687a:	pop    esp
  41687b:	ficomp WORD PTR [esi+0x40976719]
  416881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416882:	call   0x16b14565
  416887:	xchg   edx,eax
  416888:	je     0x4168ef
  41688a:	rol    BYTE PTR [esi],0xf3
  41688d:	and    edi,ebx
  41688f:	xor    al,0xcf
  416891:	iret   
  416892:	add    eax,0xc7442bad
  416897:	cmp    al,0x1
  416899:	in     al,dx
  41689a:	mov    BYTE PTR [ecx-0x7b2ecd70],ah
  4168a0:	dec    ecx
  4168a1:	out    dx,eax
  4168a2:	inc    BYTE PTR [eax-0x75]
  4168a5:	add    ch,BYTE PTR [ebx]
  4168a7:	push   edi
  4168a8:	adc    al,0xca
  4168aa:	loopne 0x41688c
  4168ac:	jns    0x41683d
  4168ae:	xchg   esp,eax
  4168af:	push   esp
  4168b0:	pop    ecx
  4168b1:	test   al,0xa0
  4168b4:	and    dh,BYTE PTR [ebx-0x41]
  4168b7:	(bad)  
  4168b8:	pop    ds
  4168b9:	mov    BYTE PTR [edi+0x70dd20f6],0x18
  4168c0:	imul   esi,DWORD PTR [edx],0x29ad7bd4
  4168c6:	xchg   ecx,eax
  4168c7:	imul   ebp,DWORD PTR [ebx],0x72d3a8a
  4168cd:	jno    0x41693b
  4168cf:	sbb    BYTE PTR [edx-0x4bd4750e],cl
  4168d5:	mov    ch,0x5f
  4168d7:	xor    bh,dh
  4168d9:	add    al,0x94
  4168db:	xor    cl,bh
  4168dd:	pop    es
  4168de:	es sbb eax,0x40952444
  4168e4:	mov    dl,0x3a
  4168e6:	mov    dh,0x83
  4168e8:	sbb    al,0x83
  4168ea:	mov    edi,0x5ae1835d
  4168ef:	pusha  
  4168f0:	xor    al,0xc2
  4168f2:	adc    edi,DWORD PTR [esi]
  4168f4:	popf   
  4168f5:	jo     0x416883
  4168f7:	pop    edx
  4168f8:	fnstcw WORD PTR [ecx+edx*8]
  4168fb:	into   
  4168fc:	in     al,dx
  4168fd:	rcr    BYTE PTR ds:[ebx+0x5287326],1
  416904:	cmp    ah,BYTE PTR [edx+edi*8-0x75]
  416908:	mov    ebp,DWORD PTR [esi-0x2e2ee780]
  41690e:	out    dx,al
  41690f:	loopne 0x416903
  416911:	mov    ch,0x4a
  416913:	fild   QWORD PTR [edx+0x6a]
  416916:	aad    0x67
  416918:	sbb    ah,BYTE PTR [edi+ebx*8]
  41691b:	pop    esi
  41691c:	stos   BYTE PTR es:[edi],al
  41691d:	pushw  es
  41691f:	mov    edi,0x6e71b5de
  416924:	dec    ecx
  416925:	jmp    0x416936
  416927:	adc    al,BYTE PTR [edi+0x74]
  41692a:	leave  
  41692b:	cmp    DWORD PTR [ebp+0x4],edi
  41692e:	clc    
  41692f:	hlt    
  416930:	mov    eax,DWORD PTR [ecx+0x4f1de531]
  416936:	jmp    0x5a30:0xad9fa821
  41693d:	jge    0x4169a2
  41693f:	sub    DWORD PTR ss:[ebx+eiz*1+0x43],esi
  416944:	repz dec ebx
  416946:	or     eax,0xf6765d89
  41694b:	arpl   WORD PTR [ecx],sp
  41694d:	dec    edi
  41694e:	mov    ds:0xb8cf65b7,eax
  416953:	out    dx,eax
  416954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416955:	mov    ecx,0x205559d9
  41695a:	cmc    
  41695b:	dec    ecx
  41695c:	shl    DWORD PTR [ecx+0x21013ef8],1
  416962:	out    0xd4,eax
  416964:	clc    
  416965:	ret    
  416966:	stos   DWORD PTR es:[edi],eax
  416967:	mov    ds:0x3a1c596c,al
  41696c:	lea    ecx,[edx+0x6b5d1e89]
  416972:	push   edi
  416973:	and    bl,dl
  416975:	retf   
  416976:	sahf   
  416977:	add    al,0xab
  416979:	lods   eax,DWORD PTR ds:[esi]
  41697a:	shr    dl,1
  41697c:	aad    0xb7
  41697e:	and    cl,BYTE PTR [esi+0x5ba6c007]
  416984:	xchg   esi,eax
  416985:	xlat   BYTE PTR ds:[ebx]
  416986:	mov    ch,0x22
  416988:	ds daa 
  41698a:	or     al,0xf4
  41698c:	hlt    
  41698d:	cli    
  41698e:	mov    dl,0x25
  416990:	imul   edi,esp,0xdcae9757
  416996:	aas    
  416997:	push   cs
  416998:	and    al,0x82
  41699a:	test   dl,cl
  41699c:	add    al,0x30
  41699e:	into   
  41699f:	cs fs fcom st(6)
  4169a3:	add    ch,BYTE PTR [eax-0x1205a82a]
  4169a9:	push   cs
  4169aa:	lea    esp,[ebp-0x1f326887]
  4169b0:	mov    eax,ds:0xd9f5cf61
  4169b5:	xor    DWORD PTR [esi+0x53595cdb],0x4a715266
  4169bf:	adc    dl,BYTE PTR [ebx]
  4169c1:	mov    ebx,0x27ed572f
  4169c6:	hlt    
  4169c7:	inc    ecx
  4169c8:	pop    edi
  4169c9:	test   DWORD PTR [ecx-0x11],ecx
  4169cc:	ins    BYTE PTR es:[edi],dx
  4169cd:	imul   BYTE PTR [ebp-0x5dc02798]
  4169d3:	jecxz  0x4169d2
  4169d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d6:	pop    ecx
  4169d7:	test   eax,0xb9cbbf13
  4169dc:	add    al,0x54
  4169de:	and    DWORD PTR [eax+0x66],0xffffffaa
  4169e2:	shr    ah,0xc7
  4169e5:	push   esp
  4169e6:	(bad)  
  4169e8:	push   0xffffffb8
  4169ea:	push   ebp
  4169eb:	loope  0x416a64
  4169ed:	mov    al,0xbb
  4169ef:	cmp    esi,DWORD PTR [esi-0x39]
  4169f2:	scas   eax,DWORD PTR es:[edi]
  4169f3:	int    0xb4
  4169f5:	aas    
  4169f6:	pushf  
  4169f7:	mov    al,ds:0x64fd22bf
  4169fc:	cmp    al,0x79
  4169fe:	loope  0x416981
  416a00:	scas   al,BYTE PTR es:[edi]
  416a01:	cld    
  416a02:	push   ebp
  416a03:	or     BYTE PTR [ecx+edx*4+0x6ac4ac4f],0x93
  416a0b:	xchg   ebp,eax
  416a0c:	cmp    DWORD PTR [edi],ecx
  416a0e:	pop    esi
  416a0f:	xor    BYTE PTR [esp+eiz*4-0x11],bl
  416a13:	aad    0x83
  416a15:	into   
  416a16:	mov    ebp,0x2bca835b
  416a1b:	cwde   
  416a1c:	addr16 adc al,0xa5
  416a1f:	repz adc eax,0x226259d2
  416a25:	adc    ecx,edi
  416a27:	inc    ecx
  416a28:	test   al,0xc
  416a2a:	mov    dh,0xbf
  416a2c:	sub    esi,ecx
  416a2e:	repnz call 0xca32:0x4b631059
  416a36:	test   al,0xf7
  416a38:	loopne 0x416a05
  416a3a:	ret    
  416a3b:	xchg   ebx,eax
  416a3c:	xlat   BYTE PTR ds:[ebx]
  416a3d:	adc    edi,ebp
  416a3f:	mov    cl,0xd2
  416a41:	cs imul ebx,esi,0xffffff90
  416a45:	(bad)
  416a48:	icebp  
  416a49:	cdq    
  416a4a:	nop
  416a4b:	int    0x12
  416a4d:	test   BYTE PTR gs:[ebx+0x3c],0x19
  416a52:	adc    al,0x13
  416a54:	pop    ds
  416a55:	mov    ds:0xeb8f61a5,al
  416a5a:	fidiv  DWORD PTR [eax-0x12]
  416a5d:	outs   dx,BYTE PTR ds:[esi]
  416a5e:	mov    ebp,0x46565cfa
  416a63:	scas   eax,DWORD PTR es:[edi]
  416a64:	outs   dx,BYTE PTR ds:[esi]
  416a65:	imul   edx,DWORD PTR [ecx],0xffffff9f
  416a68:	sub    BYTE PTR [eax+0x5c],dh
  416a6b:	jl     0x4169f4
  416a6d:	add    edi,esi
  416a6f:	sbb    ebx,esi
  416a71:	shl    DWORD PTR [ebx+0x37],1
  416a74:	mov    DWORD PTR [eax+0x5d],edi
  416a77:	sub    al,BYTE PTR [esi+0x4]
  416a7a:	pop    edx
  416a7b:	data16 mov al,ds:0xe4afc2dc
  416a81:	mov    al,0xce
  416a83:	ja     0x416ac5
  416a85:	pop    ds
  416a86:	mov    edx,0x970e8950
  416a8b:	sbb    DWORD PTR [ebx-0x5],ecx
  416a8e:	xor    eax,0xe11ccbbd
  416a93:	cmp    eax,edx
  416a95:	push   0xbc6b29d9
  416a9a:	mov    ds:0xea99fc56,eax
  416a9f:	leave  
  416aa0:	ds push edi
  416aa2:	sub    BYTE PTR [ebx-0x59],bh
  416aa5:	cmp    BYTE PTR [ebp-0x4e51c03],cl
  416aab:	jb     0x416a8c
  416aad:	out    dx,al
  416aae:	sub    esp,DWORD PTR [ecx]
  416ab0:	out    0x8a,al
  416ab2:	fdiv   st(7),st
  416ab4:	rol    al,0xd3
  416ab7:	jns    0x416abe
  416ab9:	pop    esp
  416aba:	mov    edx,0x68d9722
  416abf:	in     eax,dx
  416ac0:	jmp    0xdde6b972
  416ac5:	jb     0x416b20
  416ac7:	ins    DWORD PTR es:[edi],dx
  416ac8:	mov    edi,0xbd018cfe
  416acd:	pop    ebx
  416ace:	mov    bl,0xa3
  416ad0:	pop    ss
  416ad1:	jge    0x416aca
  416ad3:	into   
  416ad4:	jnp    0x416af2
  416ad6:	sub    eax,0xf2e0b673
  416adb:	adc    eax,0x522a2e7e
  416ae0:	test   DWORD PTR [esi-0x75],edx
  416ae3:	push   esp
  416ae4:	push   0xffffffa8
  416ae6:	mov    ch,0xbd
  416ae8:	js     0x416a9b
  416aea:	jno    0x416af0
  416aec:	jg     0x416b13
  416aee:	push   edi
  416aef:	inc    edx
  416af0:	and    eax,0x7dfe0325
  416af5:	sub    eax,0x192a0316
  416afa:	rol    bh,1
  416afc:	cmp    ch,ah
  416afe:	cmp    al,0x91
  416b00:	rcl    DWORD PTR [esi-0x6c50647e],0x7e
  416b07:	aaa    
  416b08:	sbb    esi,DWORD PTR [edx+eiz*4-0x5]
  416b0c:	sub    eax,0xe0d76be1
  416b11:	fucomi st,st(7)
  416b13:	xor    eax,0x27b73227
  416b18:	pop    eax
  416b19:	call   0xca20f6f6
  416b1e:	push   ecx
  416b1f:	dec    edx
  416b20:	jmp    0x4571a6f4
  416b25:	lods   al,BYTE PTR fs:[esi]
  416b27:	clc    
  416b28:	mov    ds:0x8b289f9f,al
  416b2d:	cdq    
  416b2e:	and    bh,BYTE PTR [eax-0x12]
  416b31:	inc    ecx
  416b32:	dec    esi
  416b33:	lds    edx,FWORD PTR [edx+0x75]
  416b36:	jle    0x416ada
  416b38:	sbb    esi,edi
  416b3a:	dec    eax
  416b3b:	xchg   DWORD PTR [ebx+0x5a2666f4],eax
  416b41:	push   0xcd017775
  416b46:	jp     0x416b94
  416b48:	dec    edx
  416b49:	fstp   QWORD PTR [eax-0x32]
  416b4c:	fadd   st(1),st
  416b4e:	aam    0x68
  416b50:	mov    ss,WORD PTR [eax+eax*4-0x1e0a6cd8]
  416b57:	and    ebp,DWORD PTR [edi]
  416b59:	(bad)  
  416b5a:	jae    0x416bbc
  416b5c:	mov    WORD PTR [ebp+0x5],cs
  416b5f:	mov    ds:0x213d0b72,al
  416b64:	fdivr  QWORD PTR [esi]
  416b66:	adc    al,0x38
  416b68:	dec    ebx
  416b69:	and    eax,0x9b86c763
  416b6e:	add    DWORD PTR [eax+0x782291fb],ecx
  416b74:	push   esp
  416b75:	push   ecx
  416b76:	xchg   BYTE PTR [ecx],dh
  416b78:	in     eax,dx
  416b79:	pop    ecx
  416b7a:	in     al,0x2b
  416b7c:	adc    al,0x6
  416b7e:	push   ds
  416b7f:	dec    eax
  416b80:	mov    ebp,0x8ba2e82e
  416b85:	nop
  416b86:	clc    
  416b87:	and    bh,BYTE PTR [edx+0x16]
  416b8a:	mov    ebx,0xa75a43f
  416b8f:	inc    edi
  416b90:	mov    bl,0xda
  416b92:	jl     0x416b8a
  416b94:	mov    esp,0x6719aa7f
  416b99:	scas   eax,DWORD PTR es:[edi]
  416b9a:	inc    ebx
  416b9b:	push   0xffffffe6
  416b9d:	inc    edx
  416b9e:	push   cs
  416b9f:	dec    edx
  416ba0:	cmp    bl,dl
  416ba2:	or     dl,BYTE PTR [ecx-0x4c]
  416ba5:	xor    DWORD PTR [edx+0x5fae6bb5],esp
  416bab:	inc    edx
  416bac:	scas   eax,DWORD PTR es:[edi]
  416bad:	aad    0xc0
  416baf:	mov    WORD PTR [edi],ss
  416bb1:	mov    ch,0xfe
  416bb3:	jp     0x416b57
  416bb5:	(bad)  
  416bb6:	fwait
  416bb7:	rcl    esp,0x98
  416bba:	xchg   edx,eax
  416bbb:	add    al,dl
  416bbd:	jmp    0xa461:0x72b00f54
  416bc4:	inc    edi
  416bc5:	scas   al,BYTE PTR es:[edi]
  416bc6:	cli    
  416bc7:	xchg   esp,eax
  416bc8:	adc    BYTE PTR [eax-0x4e],ah
  416bcb:	iret   
  416bcc:	stos   BYTE PTR es:[edi],al
  416bcd:	cmp    DWORD PTR [eax+0x22cc41f],edx
  416bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bd5:	lahf   
  416bd6:	fisttp WORD PTR [edx]
  416bd8:	mov    esp,0x9f601701
  416bdd:	cs into 
  416bdf:	sub    DWORD PTR [ecx+esi*2+0x185e3c7],esi
  416be6:	enter  0xaca1,0xaf
  416bea:	mov    dl,0x23
  416bec:	dec    esp
  416bed:	iret   
  416bee:	test   ah,0xc3
  416bf1:	xlat   BYTE PTR ds:[ebx]
  416bf2:	sub    edx,DWORD PTR [ebx+0x26]
  416bf5:	pop    ebx
  416bf6:	add    ecx,DWORD PTR [ecx-0x1c]
  416bf9:	hlt    
  416bfa:	mov    ch,0xdc
  416bfc:	mov    edx,0x1cd67151
  416c01:	cmp    BYTE PTR gs:0x4c38608f,dh
  416c08:	push   edi
  416c09:	xchg   ecx,eax
  416c0a:	push   edx
  416c0b:	enter  0xfa0,0x7a
  416c0f:	rol    BYTE PTR [edi],cl
  416c11:	add    ebp,DWORD PTR [edx]
  416c13:	into   
  416c14:	add    eax,0x59f4778e
  416c19:	test   eax,0xc8ca826c
  416c1e:	lds    eax,FWORD PTR [edx-0x38]
  416c21:	les    ebp,FWORD PTR [edx+0x6fc411fa]
  416c27:	ret    0x4f37
  416c2a:	push   0xa8947d42
  416c2f:	hlt    
  416c30:	enter  0x692b,0xa3
  416c34:	int3   
  416c35:	sub    DWORD PTR [eax+0x61],edx
  416c38:	push   edi
  416c39:	aas    
  416c3a:	push   es
  416c3b:	mov    eax,0x940aa851
  416c40:	jg     0x416bff
  416c42:	mov    dl,0xbd
  416c44:	or     esi,DWORD PTR [eax-0x4c46a747]
  416c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c4b:	in     al,dx
  416c4c:	in     al,0x1d
  416c4e:	fldenv [ebx]
  416c50:	iret   
  416c51:	ins    DWORD PTR es:[edi],dx
  416c52:	mov    esi,0xec557aaa
  416c57:	push   edi
  416c58:	test   DWORD PTR [ebp+0x30],ebx
  416c5b:	mov    ds:0x83536619,al
  416c60:	icebp  
  416c61:	fidiv  WORD PTR [edx]
  416c63:	leave  
  416c64:	xchg   ecx,eax
  416c65:	ss in  al,0xc
  416c68:	xor    eax,0xb7799df4
  416c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c6e:	leave  
  416c6f:	push   eax
  416c70:	add    BYTE PTR [ebx-0x575cd9c9],0x1a
  416c77:	xchg   eax,edx
  416c79:	pop    edx
  416c7a:	sbb    BYTE PTR [ebx-0x23966611],dl
  416c80:	retf   
  416c81:	(bad)  
  416c82:	mov    ch,0x95
  416c84:	outs   dx,BYTE PTR ds:[esi]
  416c85:	sbb    bh,ah
  416c87:	cld    
  416c88:	out    dx,al
  416c89:	ret    0x7f
  416c8c:	adc    al,0x59
  416c8e:	fwait
  416c8f:	adc    eax,ebp
  416c91:	es jmp 0x416c18
  416c94:	inc    eax
  416c95:	or     DWORD PTR [edx],eax
  416c97:	loope  0x416c54
  416c99:	sbb    eax,0xc13fb96a
  416c9e:	jno    0x416c71
  416ca0:	adc    eax,DWORD PTR [ebp+eiz*8+0x3b725b38]
  416ca7:	imul   edi,DWORD PTR [ebx],0x94755208
  416cad:	(bad)  
  416cae:	retf   
  416caf:	stos   BYTE PTR es:[edi],al
  416cb0:	js     0x416c8f
  416cb2:	test   BYTE PTR [edi],0x93
  416cb5:	dec    esi
  416cb6:	pop    ecx
  416cb7:	shr    BYTE PTR [ecx],1
  416cb9:	xchg   BYTE PTR [edi+0x45eb5d55],ah
  416cbf:	add    al,0xfe
  416cc1:	push   ecx
  416cc2:	fdivr  QWORD PTR [ebx-0x15]
  416cc5:	sbb    al,0x33
  416cc7:	gs retf 
  416cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cca:	xor    bl,dh
  416ccc:	call   0xe038:0xd2984f70
  416cd3:	repz mul DWORD PTR [ebx-0x4753c31]
  416cda:	das    
  416cdb:	push   es
  416cdc:	gs dec edx
  416cde:	jmp    0x46fe5af3
  416ce3:	pop    edx
  416ce4:	inc    esi
  416ce5:	mov    cl,0xda
  416ce7:	adc    al,0x8f
  416ce9:	sti    
  416cea:	lods   eax,DWORD PTR ds:[esi]
  416ceb:	fild   WORD PTR [ebx-0x65053fab]
  416cf1:	push   edi
  416cf2:	add    eax,0x6fb75a8a
  416cf7:	and    esp,esi
  416cf9:	loopne 0x416cf0
  416cfb:	icebp  
  416cfc:	stos   BYTE PTR es:[edi],al
  416cfd:	repnz dec esi
  416cff:	ret    
  416d00:	out    0xb0,eax
  416d02:	mov    bl,0x52
  416d04:	hlt    
  416d05:	or     DWORD PTR [eax-0x3d25502f],edi
  416d0b:	xchg   ebp,eax
  416d0c:	fucomi st,st(2)
  416d0e:	adc    al,0xc
  416d10:	dec    edx
  416d11:	push   cs
  416d12:	cmp    DWORD PTR [esi+0x6b],edi
  416d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d16:	daa    
  416d17:	scas   eax,DWORD PTR es:[edi]
  416d18:	les    ebp,FWORD PTR [ebx]
  416d1a:	loop   0x416d72
  416d1c:	cmp    BYTE PTR [edx+0x2ede8cc8],al
  416d22:	lods   al,BYTE PTR ds:[esi]
  416d23:	push   ebx
  416d24:	fnstenv [eax+0x25]
  416d27:	or     DWORD PTR [eax-0x6b],eax
  416d2a:	inc    ebx
  416d2b:	jle    0x416d91
  416d2d:	jge    0x416d34
  416d2f:	mov    ds:0x60e4159,al
  416d34:	mov    bl,0x86
  416d36:	(bad)  
  416d37:	fnstcw WORD PTR [ecx+0x75]
  416d3a:	shr    eax,cl
  416d3c:	and    edx,ebp
  416d3e:	inc    ebx
  416d3f:	icebp  
  416d40:	mov    al,0x7d
  416d42:	loope  0x416ceb
  416d44:	mov    bh,0x15
  416d46:	push   eax
  416d47:	pop    ebx
  416d48:	jp     0x416d5a
  416d4a:	mov    eax,ds:0xa5b9641a
  416d4f:	es mov ecx,0xb8da9960
  416d55:	test   al,bh
  416d57:	pusha  
  416d58:	stos   BYTE PTR es:[edi],al
  416d59:	ja     0x416cf9
  416d5b:	lods   al,BYTE PTR ds:[esi]
  416d5c:	inc    edx
  416d5d:	in     eax,0x94
  416d5f:	sub    BYTE PTR [edx+0x30099309],ch
  416d65:	imul   esp,DWORD PTR [edi],0x65
  416d68:	mov    dh,0xd8
  416d6a:	sub    edx,DWORD PTR [edx+0x467b1ab8]
  416d70:	mov    bh,0x7f
  416d72:	and    DWORD PTR [edi],esp
  416d74:	mov    bh,0x4a
  416d76:	mov    edi,esp
  416d78:	inc    esi
  416d79:	jp     0x416dc6
  416d7b:	imul   edx,DWORD PTR [edx-0xdf1c0ae],0x30080dc1
  416d85:	(bad)  
  416d86:	in     eax,0x62
  416d88:	pop    ecx
  416d89:	inc    ebx
  416d8a:	(bad)  
  416d8b:	mov    bh,0x75
  416d8d:	std    
  416d8e:	jbe    0x416dc3
  416d90:	adc    al,0x1
  416d92:	not    ebx
  416d94:	dec    ebx
  416d95:	mov    esp,0x2a2e8da4
  416d9a:	mov    al,ds:0x20317143
  416d9f:	ja     0x416d25
  416da1:	ror    BYTE PTR [ecx+0x6a3a1dec],0x93
  416da8:	add    DWORD PTR [esi-0x42c5a2c],ebp
  416dae:	jns    0x416dcc
  416db0:	cld    
  416db1:	sbb    eax,0x532c9437
  416db6:	sahf   
  416db7:	sahf   
  416db8:	add    DWORD PTR [ebx+0x4de2c6ec],edx
  416dbe:	outs   dx,DWORD PTR ds:[esi]
  416dbf:	xchg   ebp,eax
  416dc0:	inc    ebx
  416dc1:	fwait
  416dc2:	bound  ecx,QWORD PTR [esi+0x122f921f]
  416dc8:	jg     0x416d81
  416dca:	jecxz  0x416dc7
  416dcc:	xor    DWORD PTR [esi-0x7f],edx
  416dcf:	xlat   BYTE PTR ds:[ebx]
  416dd0:	int    0x3b
  416dd2:	pop    ebx
  416dd3:	jge    0x416d91
  416dd5:	ja     0x416de6
  416dd7:	aam    0x5f
  416dd9:	fldenv [edx+0x4e]
  416ddc:	out    dx,al
  416ddd:	in     eax,dx
  416dde:	stos   DWORD PTR es:[edi],eax
  416ddf:	aam    0xce
  416de1:	cwde   
  416de2:	aad    0x1a
  416de4:	add    al,0xbe
  416de6:	push   ss
  416de7:	in     eax,0xed
  416de9:	nop
  416dea:	xchg   BYTE PTR [esp+edx*1+0x24],dl
  416dee:	pop    eax
  416def:	sub    BYTE PTR [esi+0x7d],0x4
  416df3:	pop    ecx
  416df4:	in     al,0x83
  416df6:	mov    ebp,0x90b499cb
  416dfb:	xor    eax,edi
  416dfd:	mov    esp,0x2ff4ff3e
  416e02:	sbb    DWORD PTR [edx+0x12b1fbb2],eax
  416e08:	mov    gs,WORD PTR [ebp-0x1e973e35]
  416e0e:	cld    
  416e0f:	dec    eax
  416e10:	mov    al,BYTE PTR [eax+0x29ea2c81]
  416e16:	jecxz  0x416deb
  416e18:	mov    cl,0x16
  416e1a:	cli    
  416e1b:	arpl   WORD PTR [esi+0x42],ax
  416e1e:	and    cl,al
  416e20:	push   ebp
  416e21:	out    dx,eax
  416e22:	add    eax,0xdc370b36
  416e27:	scas   al,BYTE PTR es:[edi]
  416e28:	fdiv   st,st(0)
  416e2a:	push   DWORD PTR [esi-0x3b]
  416e2d:	sbb    DWORD PTR [edx-0x27],eax
  416e30:	jecxz  0x416e8d
  416e32:	or     edx,DWORD PTR [edi+0x2b]
  416e35:	xlat   BYTE PTR ds:[ebx]
  416e37:	cmp    eax,0x944191f8
  416e3c:	dec    eax
  416e3d:	sar    BYTE PTR [edx],0x1d
  416e40:	inc    edi
  416e41:	and    ebx,DWORD PTR [ebx-0xf]
  416e44:	sub    BYTE PTR [ecx-0x52fe3ff4],al
  416e4a:	dec    ebx
  416e4b:	les    ebx,FWORD PTR [eax+0x5d9cfafa]
  416e51:	shl    BYTE PTR [edx-0x78],0xb1
  416e55:	dec    ebp
  416e56:	popf   
  416e57:	push   ebx
  416e58:	xlat   BYTE PTR ds:[ebx]
  416e59:	imul   ebx,DWORD PTR [ebx-0x7974a2c1],0xffffffb0
  416e60:	lods   eax,DWORD PTR ds:[esi]
  416e61:	jge    0x416e7a
  416e63:	outs   dx,BYTE PTR ds:[esi]
  416e64:	stos   BYTE PTR es:[edi],al
  416e65:	pop    ebx
  416e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e67:	(bad)  
  416e69:	mov    dh,0x45
  416e6b:	pop    ebp
  416e6c:	jb     0x416e33
  416e6e:	push   eax
  416e6f:	mov    ds:0xf3be3b36,eax
  416e74:	sbb    ebx,DWORD PTR [ecx]
  416e76:	or     eax,DWORD PTR [ebx-0x3cb09cca]
  416e7c:	xchg   esi,eax
  416e7d:	shl    DWORD PTR [edi+esi*1+0x166537c],1
  416e84:	adc    edi,ebp
  416e86:	xchg   ebp,eax
  416e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e88:	cs or  esi,esp
  416e8b:	inc    ebx
  416e8c:	out    dx,al
  416e8d:	mov    cl,0x45
  416e8f:	and    BYTE PTR [ebx],0x3c
  416e92:	xchg   ebp,eax
  416e93:	pop    ds
  416e94:	clc    
  416e95:	(bad)  
  416e96:	pop    esp
  416e97:	cmc    
  416e98:	dec    esp
  416e99:	stos   DWORD PTR es:[edi],eax
  416e9a:	and    al,0x48
  416e9c:	idiv   DWORD PTR [eax+0x18]
  416e9f:	dec    edi
  416ea0:	aaa    
  416ea1:	(bad)  
  416ea2:	loop   0x416e47
  416ea4:	fmul   QWORD PTR [edi]
  416ea6:	mov    al,ds:0xfb49453
  416eab:	jbe    0x416f0c
  416ead:	sbb    al,0xa3
  416eaf:	shl    esi,1
  416eb1:	or     bl,bl
  416eb3:	pop    edi
  416eb4:	jle    0x416f02
  416eb6:	into   
  416eb7:	xor    ebx,0xfffffff1
  416eba:	rol    al,0x21
  416ebd:	pushf  
  416ebe:	jno    0x416e46
  416ec0:	out    dx,al
  416ec1:	push   0x41559cfa
  416ec6:	adc    ch,BYTE PTR ds:0x372d69f7
  416ecc:	mov    ah,0xa5
  416ece:	sahf   
  416ecf:	data16 outs dx,BYTE PTR ds:[esi]
  416ed1:	(bad)  
  416ed2:	push   edi
  416ed3:	bound  eax,QWORD PTR ds:0x4f839234
  416ed9:	cmp    DWORD PTR [edi-0x31],0xffffffdd
  416edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ede:	cwde   
  416edf:	shl    ah,0xaa
  416ee2:	xor    BYTE PTR fs:[ebp+0xb],ch
  416ee6:	ins    DWORD PTR es:[edi],dx
  416ee7:	inc    eax
  416ee8:	xchg   edx,eax
  416ee9:	je     0x416f66
  416eeb:	dec    edx
  416eec:	push   ecx
  416eed:	adc    eax,0x4375785d
  416ef2:	(bad)  
  416ef3:	and    eax,0x33f3a61b
  416ef8:	push   es
  416ef9:	add    al,0x8f
  416efb:	inc    ebp
  416efc:	(bad)  
  416efd:	ins    BYTE PTR es:[edi],dx
  416efe:	jo     0x416f63
  416f00:	mov    ds:0x8830ed79,al
  416f05:	es pop edx
  416f07:	test   eax,0x5451dd74
  416f0c:	fmulp  st(7),st
  416f0e:	and    DWORD PTR [edi],esi
  416f10:	hlt    
  416f11:	dec    eax
  416f12:	cmp    DWORD PTR [edi],ebx
  416f14:	add    ebx,ebx
  416f16:	mov    BYTE PTR [edi+0x77a15502],ah
  416f1c:	xor    ecx,DWORD PTR [ebx+0x14f01c0e]
  416f22:	pop    eax
  416f23:	adc    DWORD PTR [ebp*1-0x41baa187],0xcc3ee6bc
  416f2e:	cdq    
  416f2f:	fs pop ecx
  416f31:	add    BYTE PTR [ecx],0xdf
  416f34:	cli    
  416f35:	mov    dh,0x5d
  416f37:	mov    bh,0xa8
  416f39:	(bad)  
  416f3a:	pusha  
  416f3b:	outs   dx,DWORD PTR ds:[esi]
  416f3c:	repz sbb cl,BYTE PTR [ebp+0x31]
  416f40:	iret   
  416f41:	mov    eax,DWORD PTR [ecx]
  416f43:	hlt    
  416f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f45:	push   ds
  416f46:	in     eax,dx
  416f47:	das    
  416f48:	cmp    dl,BYTE PTR [edx+eax*4-0x411b7547]
  416f4f:	mov    fs:0xba6a6c6d,al
  416f55:	mov    dh,0x1c
  416f57:	imul   BYTE PTR [ebp+0x7]
  416f5a:	cmp    BYTE PTR [ecx-0x6015f10b],dl
  416f60:	clc    
  416f61:	or     eax,0x853372ea
  416f66:	fcomp  QWORD PTR [edi]
  416f68:	shl    bh,0xba
  416f6b:	ret    
  416f6c:	sahf   
  416f6d:	pop    ecx
  416f6e:	add    esi,DWORD PTR [ebx+edi*4]
  416f71:	neg    DWORD PTR [ecx+0x1a4a5d8]
  416f77:	shl    ebx,cl
  416f79:	push   ecx
  416f7a:	inc    eax
  416f7b:	mov    al,0x9d
  416f7d:	daa    
  416f7e:	popf   
  416f7f:	dec    ecx
  416f80:	xor    esi,DWORD PTR [ebx+0x25]
  416f83:	inc    edx
  416f84:	es inc esp
  416f87:	fdiv   DWORD PTR [ecx-0x69]
  416f8a:	push   esp
  416f8b:	cmp    al,0x9a
  416f8d:	(bad)  
  416f8e:	cli    
  416f8f:	or     BYTE PTR [edi],bl
  416f91:	mov    esp,0xf4313055
  416f96:	mov    edx,esi
  416f98:	adc    eax,0xb129a8f7
  416f9d:	outs   dx,BYTE PTR ds:[esi]
  416f9e:	or     dl,cl
  416fa0:	test   dl,cl
  416fa2:	sub    ebx,ecx
  416fa4:	in     al,dx
  416fa5:	push   eax
  416fa6:	dec    ebx
  416fa7:	fadd   st,st(4)
  416fa9:	cli    
  416faa:	imul   ecx,DWORD PTR [edx],0xffffffcf
  416fad:	fwait
  416fae:	push   edi
  416faf:	and    DWORD PTR [edi+0x4],esp
  416fb2:	inc    ebx
  416fb3:	dec    ebp
  416fb4:	loope  0x416fda
  416fb6:	call   0x5c2e:0xf132a4af
  416fbd:	ret    
  416fbe:	mov    ch,0xf4
  416fc0:	mov    dl,0x34
  416fc2:	inc    eax
  416fc3:	outs   dx,BYTE PTR ds:[esi]
  416fc4:	mov    al,ds:0x60367bb7
  416fc9:	test   al,0x6f
  416fcb:	inc    edi
  416fcc:	xor    eax,0xcd857ba5
  416fd1:	mov    eax,ds:0xd30a42c2
  416fd6:	fsubr  DWORD PTR [ecx+0x23]
  416fd9:	lahf   
  416fda:	sbb    DWORD PTR [esp+eax*1-0x2e],eax
  416fde:	lock test DWORD PTR [eax],eax
  416fe1:	dec    eax
  416fe2:	or     DWORD PTR [eax-0x6d],esp
  416fe5:	cmp    eax,0xe62df85e
  416fea:	out    dx,eax
  416feb:	int3   
  416fec:	scas   eax,DWORD PTR es:[edi]
  416fed:	aam    0x6e
  416fef:	fdivr  DWORD PTR [edx]
  416ff1:	outs   dx,DWORD PTR ds:[esi]
  416ff2:	inc    ebp
  416ff3:	shl    BYTE PTR [ebx+ebp*8],cl
  416ff6:	in     eax,0xf6
  416ff8:	fimul  WORD PTR [eax+0x2e4fafac]
  416ffe:	inc    edi
  416fff:	and    ebp,ecx
  417001:	mov    ?,esp
  417003:	imul   esi,DWORD PTR [edx+ebp*8-0x69e91a9c],0x8abf244
  41700e:	push   edi
  41700f:	inc    esp
  417010:	in     eax,dx
  417011:	adc    eax,0xec5d6b1c
  417016:	ins    BYTE PTR es:[edi],dx
  417017:	call   0x419d5180
  41701c:	test   BYTE PTR [esi-0x68],bl
  41701f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417020:	in     eax,dx
  417021:	sbb    DWORD PTR [edx],edx
  417023:	xor    dh,BYTE PTR [ebp+0x5d]
  417026:	aam    0xfd
  417028:	push   esp
  417029:	cmp    dh,BYTE PTR [edx]
  41702b:	xor    DWORD PTR [eax+0x6f],esi
  41702e:	arpl   WORD PTR [ebp-0x37ac72ea],sp
  417034:	cmc    
  417035:	jmp    0x47f3:0x4988dcc6
  41703c:	out    0xb1,al
  41703e:	out    0x60,eax
  417040:	pop    edi
  417041:	xchg   ebp,eax
  417042:	push   0x43
  417044:	fs dec edi
  417046:	es scas al,BYTE PTR es:[edi]
  417048:	adc    al,0xe0
  41704a:	jb     0x4170b6
  41704c:	jmp    0x71e:0x444dc515
  417053:	or     ah,BYTE PTR ds:0xcc44b9d5
  417059:	xchg   BYTE PTR [ebx],ch
  41705b:	out    0x31,al
  41705d:	nop
  41705e:	cwde   
  41705f:	jbe    0x41708e
  417061:	jae    0x4170c9
  417063:	ficom  WORD PTR [edx]
  417065:	sub    al,BYTE PTR [edi-0x3e]
  417068:	push   esi
  417069:	cmp    al,BYTE PTR [eax]
  41706b:	dec    esp
  41706c:	repz and bl,BYTE PTR [edx+0x1be8e915]
  417073:	jmp    0x7e727498
  417078:	jmp    0x2143:0x35985d00
  41707f:	dec    eax
  417080:	ror    BYTE PTR [ebx+0x7a],1
  417083:	mov    DWORD PTR [ebp+0x5c790b47],edi
  417089:	test   eax,0xc7fe94a5
  41708e:	sub    al,0xee
  417090:	jno    0x4170b5
  417092:	mov    WORD PTR [ebx+0x28],ss
  417095:	mov    bh,0xfe
  417097:	and    ebx,DWORD PTR [eax-0x62f5b238]
  41709d:	push   ebx
  41709e:	xor    DWORD PTR [edx+0x17],ebx
  4170a1:	psubw  mm1,QWORD PTR [edi-0x1c21e4d]
  4170a8:	sbb    bx,di
  4170ab:	xchg   ebx,eax
  4170ac:	sub    eax,0x7f1e53ba
  4170b1:	test   BYTE PTR ds:0x7038bc94,ah
  4170b7:	int    0x44
  4170b9:	nop
  4170ba:	sub    al,0xbe
  4170bc:	xor    al,0x45
  4170be:	pop    esi
  4170bf:	sub    DWORD PTR [edi],eax
  4170c1:	aaa    
  4170c2:	mov    DWORD PTR [edi-0xb944cf2],eax
  4170c8:	xchg   esi,eax
  4170c9:	aas    
  4170ca:	and    DWORD PTR [esi],esi
  4170cc:	cmp    ah,dl
  4170ce:	jnp    0x41708f
  4170d0:	icebp  
  4170d1:	imul   edx,DWORD PTR [edi-0x3],0xbfac0915
  4170d8:	dec    edx
  4170d9:	sbb    esp,esp
  4170db:	out    0x97,eax
  4170dd:	jb     0x41711a
  4170df:	or     ebp,esi
  4170e1:	fs or  edx,esp
  4170e4:	sbb    al,0x27
  4170e6:	call   0x8d2debac
  4170eb:	cmp    eax,0x2a7f930a
  4170f0:	mov    bh,0xac
  4170f2:	push   es
  4170f3:	pop    ecx
  4170f4:	xlat   BYTE PTR ds:[ebx]
  4170f5:	xchg   edx,eax
  4170f6:	jbe    0x41711c
  4170f8:	xchg   ebx,eax
  4170f9:	jmp    0xb02c74c7
  4170fe:	pop    edx
  4170ff:	and    edx,ebp
  417101:	test   BYTE PTR [ecx+0x24],al
  417104:	cs mov dl,0x3f
  417107:	fcomip st,st(6)
  417109:	push   es
  41710a:	and    eax,esp
  41710c:	popa   
  41710d:	ror    DWORD PTR [eax+0x6d],1
  417110:	repz xchg edx,eax
  417112:	mov    BYTE PTR [eax-0x5f],ah
  417115:	int    0xf3
  417117:	fst    QWORD PTR [edi-0x48ccda4e]
  41711d:	mov    cl,0x0
  41711f:	jg     0x4170c7
  417121:	push   ebx
  417122:	fwait
  417123:	adc    al,0x53
  417125:	jo     0x4170bb
  417127:	shr    DWORD PTR [ebx],1
  417129:	fstp   DWORD PTR [edx-0x44c306c5]
  41712f:	fdivrp st(5),st
  417131:	pop    edi
  417132:	stos   BYTE PTR es:[edi],al
  417133:	push   esp
  417134:	push   esp
  417135:	je     0x4170ba
  417137:	ins    DWORD PTR es:[edi],dx
  417138:	pop    ebp
  417139:	imul   edx,DWORD PTR [ebx],0xffffffd4
  41713c:	pop    eax
  41713d:	and    esp,DWORD PTR [edi+eiz*1]
  417140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417141:	pop    edx
  417142:	jno    0x417128
  417144:	xchg   edx,eax
  417145:	jno    0x417191
  417147:	add    DWORD PTR [ebx+0x612acdc3],esi
  41714d:	mov    ebp,0xf49f5a49
  417152:	(bad)  
  417153:	jae    0x41712a
  417155:	nop
  417156:	nop
  417157:	sbb    al,0x15
  417159:	mov    edx,0x1f673753
  41715e:	xor    al,0xee
  417160:	sub    ecx,DWORD PTR [edi+0x25b08fee]
  417166:	inc    ch
  417168:	mov    eax,ds:0x45ca61f1
  41716d:	sub    esi,DWORD PTR ds:0x7acda38f
  417173:	test   DWORD PTR [ebx],eax
  417175:	mov    al,ds:0x12d14ace
  41717a:	int3   
  41717b:	shr    BYTE PTR [eax+0x20],cl
  41717e:	adc    dh,BYTE PTR [eax-0x58823883]
  417184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417185:	pop    edx
  417186:	test   eax,0xf0f6a1cf
  41718b:	sub    BYTE PTR [eax+eiz*1+0x64],dl
  41718f:	cmp    DWORD PTR [edx-0x674d25d5],eax
  417195:	jae    0x4171c3
  417197:	xlat   BYTE PTR ds:[ebx]
  417198:	jle    0x41715b
  41719a:	push   ecx
  41719b:	mov    BYTE PTR [esp+eax*2],dh
  41719e:	adc    al,0x5e
  4171a0:	inc    ebx
  4171a1:	scas   eax,DWORD PTR es:[edi]
  4171a2:	cmp    al,cl
  4171a4:	cmp    al,0xc2
  4171a6:	push   esi
  4171a7:	jmp    0x676f3c9b
  4171ac:	int    0xb8
  4171ae:	stos   DWORD PTR es:[edi],eax
  4171af:	shrd   DWORD PTR [ecx+edx*8],ebx,cl
  4171b3:	mov    ecx,0x526de2f3
  4171b8:	push   0xfffffff5
  4171ba:	int    0xa7
  4171bc:	jg     0x417229
  4171be:	cmp    BYTE PTR [edi+0x5b397bf9],0x97
  4171c5:	fisubr DWORD PTR [ebx+0x73868978]
  4171cb:	adc    BYTE PTR [ebx-0x5dd66cc2],bh
  4171d1:	adc    BYTE PTR [edx+esi*8],al
  4171d4:	pop    ebx
  4171d5:	xchg   esp,edi
  4171d7:	add    ebp,DWORD PTR [eax-0x5cad6fe8]
  4171dd:	sbb    ecx,ecx
  4171df:	lds    ecx,FWORD PTR [edx]
  4171e1:	sbb    eax,0x7d2092e0
  4171e6:	loope  0x4171b6
  4171e8:	jo     0x417238
  4171ea:	lock inc ebx
  4171ec:	jmp    0x4171a2
  4171ee:	lea    edx,[esi]
  4171f0:	jns    0x4171cb
  4171f2:	mov    dh,BYTE PTR [eax+ebp*8]
  4171f5:	cli    
  4171f6:	and    BYTE PTR [ecx+0xdeff3b8],dl
  4171fc:	xchg   ebp,eax
  4171fd:	imul   ebx,DWORD PTR [esi],0x75
  417200:	or     esi,DWORD PTR [ebp-0x3e]
  417203:	iret   
  417204:	push   0xffffffed
  417206:	in     al,dx
  417207:	push   cs
  417208:	stos   BYTE PTR es:[edi],al
  417209:	dec    ecx
  41720a:	mov    cl,0x6
  41720c:	rcl    cl,1
  41720e:	iret   
  41720f:	push   edx
  417210:	stc    
  417211:	or     al,0xee
  417213:	stos   BYTE PTR es:[edi],al
  417214:	and    eax,0x45484c49
  417219:	sub    esp,esp
  41721b:	mov    esp,0x8edac0f1
  417220:	add    BYTE PTR [eax+0x3aadff5a],0x4f
  417227:	dec    ebp
  417229:	mov    esp,0x4c1acaa
  41722e:	sti    
  41722f:	inc    edx
  417230:	test   bh,ah
  417232:	retf   
  417233:	sub    ch,BYTE PTR [ecx+ecx*2-0x33]
  417237:	sbb    edi,DWORD PTR [edi]
  417239:	sbb    eax,0x829ae987
  41723e:	js     0x4171e2
  417240:	ret    0x248d
  417243:	pop    eax
  417244:	mov    bh,0xd1
  417246:	jmp    0x125634a6
  41724b:	dec    eax
  41724c:	cwde   
  41724d:	mov    cl,0x9b
  41724f:	loopne 0x417232
  417251:	push   ebx
  417252:	mov    al,ds:0x6d5c014e
  417257:	dec    esp
  417258:	or     DWORD PTR [edi*8+0x68af57d4],ecx
  41725f:	pop    ebp
  417260:	test   al,0xc8
  417262:	ss jnp 0x41728e
  417265:	in     al,dx
  417266:	emms   
  417268:	mov    dl,0x58
  41726a:	in     eax,0x1e
  41726c:	gs jnp 0x4171fe
  41726f:	push   edi
  417270:	adc    al,0x2d
  417272:	cs cmp eax,0x6cf8dbb8
  417278:	push   edi
  417279:	inc    ecx
  41727a:	int    0x8c
  41727c:	sti    
  41727d:	adc    al,0xbe
  41727f:	pop    eax
  417280:	push   ds
  417281:	stos   DWORD PTR es:[edi],eax
  417282:	and    DWORD PTR [edx-0x1b928f7],eax
  417288:	shr    BYTE PTR [edx+ecx*1],1
  41728b:	sahf   
  41728c:	adc    al,0xe9
  41728e:	push   ss
  41728f:	sbb    BYTE PTR [ebp+eiz*2-0x69e4c885],0xa7
  417297:	mov    edx,0xb4c1c4f4
  41729c:	xchg   ebp,eax
  41729d:	fs aad 0x4d
  4172a0:	inc    ebp
  4172a1:	adc    ebp,DWORD PTR [ebx+0x5b1c19dd]
  4172a7:	pop    ds
  4172a8:	fist   DWORD PTR [ecx]
  4172aa:	mov    WORD PTR [eax-0x5286469e],gs
  4172b0:	sti    
  4172b1:	jge    0x41728d
  4172b3:	jae    0x417248
  4172b5:	mov    DWORD PTR [ebx],0xe076e579
  4172bb:	and    al,0x23
  4172bd:	jo     0x4172bd
  4172bf:	pop    ebx
  4172c0:	ror    BYTE PTR [ebx+ecx*2],cl
  4172c3:	inc    esp
  4172c4:	ss inc esp
  4172c6:	pop    esp
  4172c7:	das    
  4172c8:	push   edx
  4172c9:	pop    edx
  4172ca:	mov    bh,0x76
  4172cc:	sbb    al,0x99
  4172ce:	call   DWORD PTR [eax+0x30]
  4172d1:	idiv   BYTE PTR [edx-0x7dbf4a9e]
  4172d7:	cmc    
  4172d8:	mov    al,BYTE PTR [esi+edi*8+0x1956a39f]
  4172df:	xchg   edi,eax
  4172e0:	iret   
  4172e1:	out    0xc4,al
  4172e3:	sbb    al,0x94
  4172e5:	push   ecx
  4172e6:	js     0x417327
  4172e8:	pop    esi
  4172e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ea:	xor    eax,0x2b3b066
  4172ef:	mov    ds:0xd145c3c0,al
  4172f4:	fst    DWORD PTR ds:0x2d144311
  4172fa:	in     al,0x82
  4172fc:	cld    
  4172fd:	push   ss
  4172fe:	push   ebx
  4172ff:	jns    0x41732e
  417301:	cmp    esi,DWORD PTR [edi]
  417303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417304:	ret    
  417305:	daa    
  417306:	add    bh,dl
  417308:	adc    BYTE PTR [edx-0x7eeb4930],bl
  41730e:	fimul  DWORD PTR [edi]
  417310:	fisubr WORD PTR [ebx]
  417312:	inc    esp
  417313:	mov    dh,0x95
  417315:	pop    ss
  417316:	push   ds
  417317:	push   0x77
  417319:	sub    eax,0x542a4996
  41731e:	fs push ebx
  417320:	jnp    0x41733b
  417322:	(bad)  
  417324:	retf   0x4ccc
  417327:	push   0x45
  417329:	pop    eax
  41732a:	cs mov ecx,0xecb16a9f
  417330:	jge    0x417309
  417332:	in     al,0x38
  417334:	dec    edx
  417335:	pop    edx
  417336:	pop    ss
  417337:	cli    
  417338:	ins    DWORD PTR es:[edi],dx
  417339:	aad    0xa1
  41733b:	pop    ds
  41733c:	stos   DWORD PTR es:[edi],eax
  41733d:	xor    DWORD PTR [ebp-0x36f3ab41],0x60
  417344:	fist   DWORD PTR [ebx]
  417346:	dec    edi
  417347:	xor    ebx,ebp
  417349:	(bad)  
  41734a:	aam    0xcf
  41734c:	test   BYTE PTR [ecx+0x1d2fb910],0x7a
  417353:	ret    0x2394
  417356:	xor    eax,0x1f340191
  41735b:	xchg   ecx,eax
  41735c:	sub    edi,DWORD PTR [eax]
  41735e:	nop
  41735f:	xchg   BYTE PTR [ebx-0x28],ah
  417362:	shl    BYTE PTR [ecx],cl
  417364:	call   0x99aeda20
  417369:	mov    esi,0xe675e335
  41736e:	mov    ah,0x79
  417370:	jmp    0x41736c
  417372:	add    eax,0xea704707
  417377:	mov    dl,0xf5
  417379:	add    ah,cl
  41737b:	pop    ebp
  41737c:	push   0x6a18d7c9
  417381:	call   0xd7c29bb1
  417386:	rol    bl,0x6b
  417389:	out    0xaf,al
  41738b:	sub    al,0x1f
  41738d:	cmp    DWORD PTR [ebp-0x2ce21faa],esp
  417393:	loope  0x4173a9
  417395:	and    BYTE PTR [ebp-0x4efa5c5c],ah
  41739b:	fisttp DWORD PTR [esi+ebp*8-0x5a25c473]
  4173a2:	popf   
  4173a3:	out    dx,eax
  4173a4:	mov    bl,0x54
  4173a6:	mov    ds:0xcd7895f3,al
  4173ab:	retf   0xbcc5
  4173ae:	xor    eax,0xe74dd944
  4173b3:	jmp    DWORD PTR [ebx+0x1a5f3aaf]
  4173b9:	pop    edx
  4173ba:	je     0x417343
  4173bc:	js     0x417404
  4173be:	xor    al,0x9b
  4173c0:	sbb    ebx,DWORD PTR [esi]
  4173c2:	pop    edi
  4173c3:	sbb    al,0xc6
  4173c5:	or     ecx,ebp
  4173c7:	daa    
  4173c8:	jp     0x417362
  4173ca:	add    bh,BYTE PTR [eax-0x635b2362]
  4173d0:	(bad)  
  4173d1:	jns    0x4173da
  4173d3:	pop    edx
  4173d4:	add    eax,0x50fb60db
  4173d9:	inc    esi
  4173da:	and    al,0x67
  4173dc:	inc    ebx
  4173dd:	cli    
  4173de:	xchg   ecx,eax
  4173df:	xor    DWORD PTR [ecx+edx*1],edx
  4173e2:	push   esi
  4173e3:	sbb    al,0x8
  4173e5:	hlt    
  4173e6:	out    0xd9,al
  4173e8:	test   eax,0x27774bc9
  4173ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173ee:	jbe    0x4173df
  4173f0:	push   0xc
  4173f2:	aaa    
  4173f3:	div    DWORD PTR [eax]
  4173f5:	mov    BYTE PTR [ebx+0xc],0x23
  4173f9:	sbb    eax,0xc07798e3
  4173fe:	fisubr DWORD PTR [edi+0x51e3418e]
  417404:	xchg   BYTE PTR [esi-0x359218df],al
  41740a:	sbb    edx,ecx
  41740c:	dec    ecx
  41740d:	adc    eax,0x3c4c374
  417412:	sub    eax,0x30617ff7
  417417:	call   DWORD PTR [ebp+0x45c50302]
  41741d:	inc    ebp
  41741e:	inc    esp
  41741f:	pop    ss
  417420:	pusha  
  417421:	icebp  
  417422:	stos   DWORD PTR es:[edi],eax
  417423:	sbb    dh,cl
  417425:	xchg   ebp,eax
  417426:	mov    bl,0x9c
  417428:	xchg   esp,eax
  417429:	mov    bh,0xb0
  41742b:	and    eax,0xc41c7f86
  417430:	mov    BYTE PTR [edx+0x741dc815],bh
  417436:	loopne 0x4173f5
  417438:	push   ecx
  417439:	push   edx
  41743a:	(bad)  
  41743b:	mov    bh,0x28
  41743d:	inc    edi
  41743e:	sbb    cl,BYTE PTR ds:0xf629d0c1
  417444:	mov    dl,0xa9
  417446:	fwait
  417447:	pop    es
  417448:	fucomip st,st(3)
  41744a:	xchg   DWORD PTR ss:[esi+ecx*8-0x4f],esi
  41744f:	push   es
  417450:	ja     0x4174b5
  417452:	rcr    DWORD PTR [ebx],cl
  417454:	out    dx,al
  417455:	cdq    
  417456:	pop    esp
  417457:	xor    DWORD PTR [esp+ebx*1+0x76f9c749],edi
  41745e:	xchg   ebx,eax
  41745f:	xchg   edx,eax
  417460:	inc    ebp
  417461:	in     al,dx
  417462:	jnp    0x4174b3
  417464:	icebp  
  417465:	or     al,0x7
  417467:	dec    esp
  417468:	jns    0x417403
  41746a:	std    
  41746b:	std    
  41746c:	enter  0x20a2,0x79
  417470:	cli    
  417471:	and    DWORD PTR [ebx-0x19],edx
  417474:	push   esi
  417475:	cmp    eax,0x2b8b6d9c
  41747a:	rcl    BYTE PTR [ebx-0x30e68420],cl
  417480:	cmp    al,BYTE PTR [eax*2+0x45135dc5]
  417487:	add    al,0x34
  417489:	(bad)
  41748d:	(bad)  
  41748f:	out    0x4f,eax
  417491:	jl     0x4174c7
  417493:	adc    DWORD PTR [edi-0x5],0xe4de1bd9
  41749a:	or     BYTE PTR [esi+0x5bc43b5a],bl
  4174a0:	test   DWORD PTR gs:[eax],0xa780919c
  4174a7:	mov    esp,0xb73a2909
  4174ac:	mov    dl,0x60
  4174ae:	cmp    eax,0x75426a9b
  4174b3:	les    edi,FWORD PTR [ebx-0x7b7e49b7]
  4174b9:	pop    eax
  4174ba:	repnz mov ecx,0xf616aead
  4174c0:	outs   dx,DWORD PTR ds:[esi]
  4174c1:	aaa    
  4174c2:	and    ah,BYTE PTR [esi-0x72984efa]
  4174c8:	rol    BYTE PTR [edx+eax*2],1
  4174cb:	adc    eax,0x9f7ce352
  4174d0:	jmp    0xd9cd:0x3fe0dce4
  4174d7:	ror    BYTE PTR [ebp+0x45],0x9b
  4174db:	inc    edi
  4174dc:	mov    esi,ds
  4174de:	sbb    BYTE PTR [esi-0x3250d679],al
  4174e4:	int3   
  4174e5:	push   ebx
  4174e6:	pop    ds
  4174e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174e8:	fadd   QWORD PTR [ecx]
  4174ea:	pop    eax
  4174eb:	cmp    DWORD PTR [esp+ecx*2],ecx
  4174ee:	pop    ds
  4174ef:	mov    ds:0xe3454090,al
  4174f4:	mov    ecx,0x326166b8
  4174f9:	push   edx
  4174fa:	cmp    DWORD PTR [ebx],eax
  4174fc:	cmc    
  4174fd:	pop    ebx
  4174fe:	(bad)  
  4174ff:	jb     0x417518
  417501:	shl    DWORD PTR [ecx-0x5b470492],1
  417507:	call   0x9876e90
  41750c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41750d:	sub    eax,0xa1285415
  417512:	cmp    BYTE PTR [eax-0x4c5ad18b],0xb9
  417519:	lods   eax,DWORD PTR ds:[esi]
  41751a:	pop    edi
  41751b:	xor    al,0xb8
  41751d:	imul   ebp,DWORD PTR [edi-0x4d],0xa0d5350f
  417524:	cld    
  417525:	(bad)  
  417526:	neg    BYTE PTR [esi]
  417528:	and    al,0xb5
  41752a:	aas    
  41752b:	dec    ebx
  41752c:	loope  0x41750c
  41752e:	pop    esi
  41752f:	mov    ah,0xc7
  417531:	test   BYTE PTR [edx-0x2abd592f],0xfc
  417538:	std    
  417539:	cmp    edi,DWORD PTR [ebx-0x2a9f7212]
  41753f:	or     al,0x1a
  417541:	leave  
  417542:	fsub   QWORD PTR [eax]
  417544:	sbb    DWORD PTR [eax-0x1a],0x427a9b6e
  41754b:	aam    0xc4
  41754d:	std    
  41754e:	sub    edi,esp
  417550:	out    dx,al
  417551:	test   BYTE PTR [ebx-0x2a],ah
  417554:	pop    eax
  417555:	lea    ebp,[eax+0x40]
  417558:	repnz retf 0xadd
  41755c:	stos   DWORD PTR es:[edi],eax
  41755d:	mov    eax,0x4ae37b1c
  417562:	sbb    edx,DWORD PTR [ecx]
  417564:	cdq    
  417565:	jmp    0x41751f
  417567:	pop    ds
  417568:	and    ecx,DWORD PTR [ecx]
  41756a:	lds    eax,FWORD PTR [esi-0x75784fc6]
  417570:	test   DWORD PTR [edi+0x624cfab9],0x71977a39
  41757a:	shl    DWORD PTR [ecx+0x78],0xa1
  41757e:	xchg   DWORD PTR [esi+0x8],esp
  417581:	ds data16 jae 0x41755c
  417585:	push   ecx
  417586:	cwde   
  417587:	inc    ecx
  417588:	jno    0x4175af
  41758a:	cs aad 0xaf
  41758d:	adc    al,0xb5
  41758f:	adc    eax,0x2b03caf5
  417594:	sbb    edi,ebp
  417596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417597:	outs   dx,BYTE PTR ds:[esi]
  417598:	mov    eax,0x68efc8b5
  41759d:	hlt    
  41759e:	mov    ebp,0xbf72c09e
  4175a3:	add    al,0xe8
  4175a5:	aad    0x4f
  4175a7:	std    
  4175a8:	shl    esp,cl
  4175aa:	jb     0x417570
  4175ac:	jmp    0x1841061
  4175b1:	loope  0x4175dd
  4175b3:	adc    dl,BYTE PTR [esi]
  4175b5:	inc    edx
  4175b6:	sbb    eax,DWORD PTR [edi-0x13]
  4175b9:	inc    eax
  4175ba:	sbb    DWORD PTR ds:0x4b71f627,0xffffff8a
  4175c1:	nop
  4175c2:	xlat   BYTE PTR ds:[ebx]
  4175c3:	xor    BYTE PTR [edx],dl
  4175c5:	das    
  4175c6:	fmul   QWORD PTR ds:0x24c9bc07
  4175cc:	outs   dx,DWORD PTR ds:[esi]
  4175cd:	adc    DWORD PTR [ecx-0x52],esp
  4175d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175d1:	xchg   edi,eax
  4175d2:	jae    0x417599
  4175d4:	xchg   esp,eax
  4175d5:	dec    ecx
  4175d6:	add    eax,0x136185cc
  4175dc:	fld    TBYTE PTR [edi-0x79af72e1]
  4175e2:	mov    ds:0x350d8486,eax
  4175e7:	pop    ebx
  4175e8:	leave  
  4175e9:	xchg   esi,eax
  4175ea:	nop
  4175eb:	jp     0x417602
  4175ed:	dec    edi
  4175ee:	add    esi,esi
  4175f0:	cmp    ch,bl
  4175f2:	fcomp  DWORD PTR [edx+0x436b8c34]
  4175f8:	push   ecx
  4175f9:	pop    ebp
  4175fa:	pop    esp
  4175fb:	xor    bh,BYTE PTR [esi-0x75]
  4175fe:	in     eax,dx
  4175ff:	cmp    al,0x71
  417601:	push   ebp
  417602:	inc    ecx
  417603:	stos   DWORD PTR es:[edi],eax
  417604:	aam    0xfe
  417606:	lods   eax,DWORD PTR ds:[esi]
  417607:	mov    ebp,0xe1f6d178
  41760c:	xor    ecx,edx
  41760e:	dec    edx
  41760f:	mov    edi,0xfd9636a2
  417614:	mov    ss,WORD PTR [edi-0x16fa04e2]
  41761a:	(bad)  
  41761b:	xchg   ebp,eax
  41761c:	fwait
  41761d:	push   ebx
  41761e:	cmp    al,0x61
  417620:	or     ebp,edi
  417622:	mov    ds:0x7b2b7c35,al
  417627:	pop    ebp
  417628:	xor    dh,BYTE PTR [edi-0x1d]
  41762b:	lds    esi,FWORD PTR gs:[esi-0x3a35f025]
  417632:	mov    esi,0x6b799ff4
  417637:	loopne 0x4176a5
  417639:	mov    DWORD PTR [ebx-0x66],ebp
  41763c:	mov    al,0xb1
  41763e:	pushf  
  41763f:	invd   
  417641:	inc    edi
  417642:	out    0xba,al
  417644:	addr16 stc 
  417646:	jno    0x417636
  417648:	sbb    bl,BYTE PTR [ebx]
  41764a:	xchg   edi,eax
  41764b:	sbb    al,ch
  41764d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41764e:	enter  0xae74,0xca
  417652:	stos   DWORD PTR es:[edi],eax
  417653:	mov    eax,ds:0x3d7f3c3
  417658:	stos   DWORD PTR es:[edi],eax
  417659:	mov    esi,0xbaf886f4
  41765e:	mov    edx,0xd59c0e40
  417663:	ds cmp al,0x37
  417666:	sub    al,0xb4
  417668:	loop   0x41769d
  41766a:	lahf   
  41766b:	mov    es,WORD PTR [edx+0x5b]
  41766e:	jae    0x417610
  417670:	(bad)  
  417671:	adc    eax,0x61545f63
  417676:	(bad)  
  417677:	dec    esi
  417678:	add    eax,0xba11f247
  41767d:	mov    ds:0x3ba9bdda,al
  417682:	dec    ebp
  417683:	scas   al,BYTE PTR es:[edi]
  417684:	retf   0x7d3e
  417687:	jle    0x417639
  417689:	ret    
  41768a:	xor    bh,dl
  41768c:	fcomip st,st(4)
  41768e:	aas    
  41768f:	and    al,0x90
  417691:	jmp    0x4176e4
  417693:	enter  0x7935,0xdc
  417697:	je     0x4176e0
  417699:	or     BYTE PTR [ebp+ebp*8-0x4f],al
  41769d:	xchg   edi,eax
  41769e:	lods   eax,DWORD PTR ds:[esi]
  41769f:	mov    al,bh
  4176a1:	cmp    BYTE PTR [esi+0x1976b2d1],bh
  4176a7:	sbb    eax,0x10f3850b
  4176ac:	and    eax,0x29fa287f
  4176b1:	pop    ss
  4176b2:	dec    edx
  4176b3:	js     0x417648
  4176b5:	rcr    DWORD PTR [esi],1
  4176b7:	mov    bh,0xaf
  4176b9:	adc    DWORD PTR ds:0x6fb0e3f5,ebx
  4176bf:	jns    0x417705
  4176c1:	mov    esp,esi
  4176c3:	inc    ecx
  4176c4:	scas   eax,DWORD PTR es:[edi]
  4176c5:	or     DWORD PTR [edx],ecx
  4176c7:	pop    edx
  4176c8:	push   eax
  4176c9:	or     DWORD PTR [esi],edi
  4176cb:	(bad)  
  4176cc:	fisttp WORD PTR [esi+0x1]
  4176cf:	sbb    eax,0xc2d2896a
  4176d4:	sbb    ah,BYTE PTR [eax]
  4176d6:	cmp    BYTE PTR es:[edi+0x7da5d474],dl
  4176dd:	xor    eax,0xff9ef279
  4176e2:	popf   
  4176e3:	lods   al,BYTE PTR ds:[esi]
  4176e4:	cmp    al,0x96
  4176e6:	jecxz  0x4176b6
  4176e8:	rol    DWORD PTR [ebp-0x36],cl
  4176eb:	sbb    eax,0xbea97b60
  4176f0:	fsub   QWORD PTR [ecx+0x1250b33]
  4176f6:	jne    0x4176ae
  4176f8:	das    
  4176f9:	mov    edx,0x2e9f8583
  4176fe:	inc    eax
  4176ff:	imul   eax,DWORD PTR [ecx+ebp*4-0x1ad3ada0],0x2372100b
  41770a:	pop    edi
  41770b:	mov    esi,0xb9dbcc16
  417710:	cmc    
  417711:	outs   dx,DWORD PTR ds:[esi]
  417712:	mov    edx,0x64893bea
  417717:	scas   eax,DWORD PTR es:[edi]
  417718:	jmp    0xb41c:0xfe67ff5a
  41771f:	aaa    
  417720:	mov    eax,0xbc7b02a6
  417725:	mov    dh,0x97
  417727:	xor    BYTE PTR [ecx-0x7aafab8b],0x22
  41772e:	jl     0x4176c1
  417730:	jno    0x417745
  417732:	jmp    0x21de:0x1077a5fc
  417739:	rcr    BYTE PTR [esi],1
  41773b:	(bad)  
  41773d:	jmp    0x417727
  41773f:	mov    edi,0x9bece554
  417744:	push   ebx
  417745:	xchg   esp,eax
  417746:	adc    edi,DWORD PTR [edi+0x27]
  417749:	mov    ebp,0x652c0f91
  41774e:	pop    es
  41774f:	mov    esp,0x57896ecd
  417754:	das    
  417755:	lods   eax,DWORD PTR ds:[esi]
  417756:	mov    bl,0x94
  417758:	inc    ebp
  417759:	push   ebx
  41775a:	sbb    DWORD PTR [ebx],edx
  41775c:	xor    DWORD PTR [esi+0x7f85321b],edi
  417762:	ss jmp 0x76db:0x1b88b878
  41776a:	jp     0x417762
  41776c:	cs jp  0x417722
  41776f:	xchg   ebx,eax
  417770:	je     0x417720
  417772:	aam    0xab
  417774:	nop
  417775:	out    dx,eax
  417776:	clc    
  417777:	adc    edi,0xf
  41777a:	aas    
  41777b:	jae    0x4177b6
  41777d:	cmp    eax,0xfffffff5
  417780:	xchg   esi,eax
  417781:	inc    edx
  417782:	push   esp
  417783:	add    al,0x9a
  417785:	stos   BYTE PTR es:[edi],al
  417786:	stos   DWORD PTR es:[edi],eax
  417787:	(bad)
  41778a:	push   ds
  41778b:	push   edi
  41778c:	mov    eax,0xb55ecdb1
  417791:	fbstp  TBYTE PTR [edx-0x5fdff9f4]
  417797:	mov    al,ds:0x486aae65
  41779c:	jbe    0x41772f
  41779e:	retf   0xd7d
  4177a1:	push   0xffffffed
  4177a3:	out    0x8e,eax
  4177a5:	lea    edx,[edi-0x1a05e702]
  4177ab:	mov    ds:0xc1fb44f2,al
  4177b0:	add    DWORD PTR [edx-0x54bc3b3b],ebp
  4177b6:	jmp    0x4177c3
  4177b8:	retf   
  4177b9:	mov    cr3,ecx
  4177bc:	lods   al,BYTE PTR ds:[esi]
  4177bd:	fistp  QWORD PTR [ebx-0x2292567c]
  4177c3:	pusha  
  4177c4:	push   edx
  4177c5:	pop    ecx
  4177c6:	data16 mov WORD PTR cs:[edx+0x8],?
  4177cb:	shl    BYTE PTR [ebx],cl
  4177cd:	fwait
  4177ce:	cmp    ah,BYTE PTR [esi+0x24dfb8f3]
  4177d4:	sbb    eax,0xb3d52b0b
  4177d9:	popf   
  4177da:	jecxz  0x4177d9
  4177dc:	popf   
  4177dd:	lods   eax,DWORD PTR ds:[esi]
  4177de:	cmp    al,0xdf
  4177e0:	mov    ebx,0x6c5a0f84
  4177e5:	das    
  4177e6:	fisttp DWORD PTR ds:0xff855780
  4177ec:	lds    eax,FWORD PTR [eax+0x24]
  4177ef:	mov    esi,0x4f881b27
  4177f4:	stc    
  4177f5:	ret    0x4870
  4177f8:	and    BYTE PTR [edi-0x341a1715],al
  4177fe:	js     0x4177ab
  417800:	add    ah,dl
  417802:	mov    eax,ds:0xc19816e5
  417807:	loopne 0x4177b0
  417809:	xchg   DWORD PTR [eax+0xc],edx
  41780c:	jle    0x4177d1
  41780e:	mov    ds:0xe06dae32,al
  417813:	(bad)  
  417814:	or     edi,DWORD PTR [ebx-0xb]
  417817:	shl    DWORD PTR [ebp-0x6cf7d85d],0x94
  41781e:	push   ss
  41781f:	arpl   WORD PTR [esi-0x34],di
  417822:	sub    DWORD PTR [eax],eax
  417824:	adc    BYTE PTR [eax-0x4b],bh
  417827:	xor    DWORD PTR [edx+0x13d82bea],eax
  41782d:	dec    ebx
  41782e:	imul   edi,DWORD PTR [edx],0x5414bae5
  417834:	stos   DWORD PTR es:[edi],eax
  417835:	mov    dh,0x1d
  417837:	inc    ebp
  417838:	ror    BYTE PTR [esi+0x44],0xcb
  41783c:	cld    
  41783d:	inc    edx
  41783e:	and    BYTE PTR [ebp+0x41],0x4d
  417842:	mov    bh,0xb8
  417844:	adc    BYTE PTR [ebp-0x2e774c25],0x7f
  41784b:	xor    DWORD PTR [edx+edi*8+0x1f348d22],edi
  417852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417853:	inc    esp
  417854:	mov    al,0x10
  417856:	int3   
  417857:	jmp    0xe509ecd1
  41785c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41785d:	dec    esi
  41785e:	int3   
  41785f:	in     eax,dx
  417860:	jbe    0x4178a6
  417862:	call   0x6db8878c
  417867:	and    ah,BYTE PTR cs:[esi-0x5b]
  41786b:	jmp    0x417808
  41786d:	mov    ecx,esi
  41786f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417870:	call   0x16e29a1f
  417875:	mov    ch,0xd8
  417877:	xchg   ecx,eax
  417878:	cmp    eax,0x9f31a1b6
  41787d:	outs   dx,DWORD PTR ds:[esi]
  41787e:	call   0xb5e02c
  417883:	jae    0x41780d
  417885:	dec    ebx
  417886:	jmp    0x3b95:0xd15d7714
  41788d:	clc    
  41788e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41788f:	mov    esi,0xf42f2f8f
  417894:	sbb    al,0x7c
  417896:	xchg   ecx,eax
  417897:	out    0x97,eax
  417899:	push   edi
  41789a:	jae    0x41788d
  41789c:	je     0x417890
  41789e:	adc    dh,BYTE PTR [ecx-0x717354f]
  4178a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a5:	out    dx,al
  4178a6:	cs dec ebp
  4178a8:	int3   
  4178a9:	icebp  
  4178aa:	mov    edi,0xb8cecf45
  4178af:	arpl   WORD PTR [edx-0x15],ax
  4178b2:	xor    DWORD PTR [edx+0x79],ecx
  4178b5:	mov    eax,0x3b59b5ba
  4178ba:	dec    eax
  4178bb:	loope  0x417877
  4178bd:	sub    DWORD PTR [ecx-0x1d],edx
  4178c0:	add    ch,cl
  4178c2:	lds    eax,FWORD PTR [eax-0x28]
  4178c5:	dec    ebp
  4178c6:	add    bh,cl
  4178c8:	inc    esp
  4178c9:	aas    
  4178ca:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178cc:	mov    ch,0xb
  4178ce:	(bad)  
  4178d0:	adc    DWORD PTR [esi],ebx
  4178d2:	adc    esp,esi
  4178d4:	add    al,0x94
  4178d6:	cmp    eax,0xc2050379
  4178db:	or     BYTE PTR [edx+0x649cf0f5],0x1c
  4178e2:	retf   0xdba6
  4178e5:	inc    ecx
  4178e6:	push   edx
  4178e7:	inc    edi
  4178e8:	inc    esp
  4178e9:	pusha  
  4178ea:	or     ebp,DWORD PTR [edx]
  4178ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ed:	hlt    
  4178ee:	pop    edx
  4178ef:	out    dx,al
  4178f0:	call   0xbc1b:0x3d6f2f3
  4178f7:	xlat   BYTE PTR ds:[ebx]
  4178f8:	outs   dx,DWORD PTR ds:[esi]
  4178f9:	pop    esi
  4178fa:	psrad  mm0,QWORD PTR [esi+0x545de673]
  417901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417902:	mul    DWORD PTR [edx+0x16]
  417905:	mov    dl,0x5b
  417907:	xchg   edi,eax
  417908:	daa    
  417909:	and    ebp,DWORD PTR [ebp-0x6f670a4c]
  41790f:	mov    esp,0x90f8ae19
  417914:	or     BYTE PTR [edx],dl
  417916:	and    eax,DWORD PTR [eax+0x68]
  417919:	add    al,cl
  41791b:	(bad)  
  41791c:	hlt    
  41791d:	mov    edi,DWORD PTR [edi]
  41791f:	cdq    
  417920:	push   ebp
  417921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417922:	mov    bl,0x5f
  417924:	fs data16 cmc 
  417927:	pop    es
  417928:	test   al,0xad
  41792a:	leave  
  41792b:	pop    edi
  41792c:	cli    
  41792d:	cmp    eax,0x8a4cd70b
  417932:	ja     0x4178e3
  417934:	dec    edx
  417935:	cs fwait
  417937:	sub    ecx,eax
  417939:	lea    esp,[edi+esi*8-0x5309e7f9]
  417940:	aas    
  417941:	jl     0x41795f
  417943:	scas   al,BYTE PTR es:[edi]
  417944:	js     0x417985
  417946:	in     al,dx
  417947:	xlat   BYTE PTR ds:[ebx]
  417948:	jo     0x4179c5
  41794a:	sbb    BYTE PTR [ebp+eax*4+0x39],bh
  41794e:	add    BYTE PTR gs:[edx-0x23],0x8a
  417953:	xchg   ecx,eax
  417954:	popa   
  417955:	add    al,0x70
  417957:	jg     0x417906
  417959:	xor    edi,ecx
  41795b:	inc    esi
  41795c:	sahf   
  41795d:	ficomp WORD PTR [edi-0x46ba4477]
  417963:	push   edx
  417964:	or     BYTE PTR [ebx],dh
  417966:	ja     0x417983
  417968:	mov    eax,0x4460b20c
  41796d:	mov    dl,0x41
  41796f:	aad    0xd6
  417971:	hlt    
  417972:	aam    0x45
  417974:	push   ebp
  417975:	push   eax
  417976:	(bad)  [esi-0x66]
  417979:	mov    bh,0xbd
  41797b:	loop   0x4179f6
  41797d:	idiv   DWORD PTR [ebp+edx*1-0x2d]
  417981:	sar    DWORD PTR [esi-0x1d],1
  417984:	mov    dl,0x45
  417986:	sub    BYTE PTR [ebx-0x19],al
  417989:	jl     0x417925
  41798b:	add    cl,BYTE PTR [ebp+0x6d3d5114]
  417991:	test   al,0x0
  417993:	or     dh,BYTE PTR [ecx]
  417995:	(bad)  
  417996:	xor    esi,DWORD PTR [ebx-0x1d]
  417999:	jg     0x4179b5
  41799b:	pop    esp
  41799c:	xor    BYTE PTR [ebx+ecx*4],0xc1
  4179a0:	sub    eax,0xb3973efc
  4179a5:	inc    edi
  4179a6:	scas   eax,DWORD PTR es:[edi]
  4179a7:	scas   eax,DWORD PTR es:[edi]
  4179a8:	mov    ah,0x2
  4179aa:	je     0x4179fb
  4179ac:	fdiv   DWORD PTR [ebp-0x3c]
  4179af:	xlat   BYTE PTR ds:[ebx]
  4179b0:	movq   mm5,mm5
  4179b3:	mov    cl,0x1d
  4179b5:	pushf  
  4179b6:	mov    esi,0x2cd78172
  4179bb:	mov    ebp,fs
  4179bd:	cdq    
  4179be:	pop    ebp
  4179bf:	or     ebx,DWORD PTR [eax-0x77]
  4179c2:	ins    DWORD PTR es:[edi],dx
  4179c3:	jns    0x4179af
  4179c5:	pop    edx
  4179c6:	sub    ecx,DWORD PTR [ebx+ebx*4+0x159dbde3]
  4179cd:	adc    DWORD PTR [eax+0x261855d],0xb0ae44e7
  4179d7:	push   0xffffffed
  4179d9:	imul   eax,DWORD PTR [edi+0xdd658d6],0x3e970850
  4179e3:	(bad)  
  4179e4:	mov    bh,0x20
  4179e6:	or     eax,0x472f3cba
  4179eb:	(bad)  
  4179ec:	ss mov cl,0x83
  4179ef:	std    
  4179f0:	sub    eax,0x2ac1661d
  4179f5:	(bad)  
  4179f6:	loop   0x4179ae
  4179f8:	out    0x5b,al
  4179fa:	fldcw  WORD PTR [edi]
  4179fc:	out    dx,eax
  4179fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179fe:	sbb    ah,BYTE PTR [esi+edi*4+0x758abbd5]
  417a05:	pusha  
  417a06:	pop    eax
  417a07:	push   0x16
  417a09:	lea    edx,[edx+0x49]
  417a0c:	sub    eax,0x1524a12c
  417a11:	xchg   esi,eax
  417a12:	xor    al,0xc7
  417a14:	adc    ch,BYTE PTR [edi]
  417a16:	pop    ebp
  417a17:	inc    ebp
  417a18:	xchg   esp,eax
  417a19:	sub    esp,DWORD PTR [ebp-0x45]
  417a1c:	xor    edx,edi
  417a1e:	imul   esi,DWORD PTR [ebp-0x33],0xea3791d4
  417a25:	add    BYTE PTR [eax+0x5b],ah
  417a28:	mov    esp,0x1800cb79
  417a2d:	jmp    0x4179f0
  417a2f:	fmul   QWORD PTR [edi]
  417a31:	fimul  WORD PTR [di-0x5e1e]
  417a36:	nop
  417a37:	aam    0x81
  417a39:	mov    eax,ds:0xe422937a
  417a3e:	sbb    eax,0x62106afc
  417a43:	mov    fs:0x45eb01e9,eax
  417a49:	test   eax,ebp
  417a4b:	xchg   edx,eax
  417a4c:	dec    edx
  417a4d:	adc    eax,0x986e488
  417a52:	int3   
  417a53:	dec    edx
  417a54:	jnp    0x417a42
  417a56:	lea    edx,[ecx]
  417a58:	lds    ecx,FWORD PTR ds:0x3ead192c
  417a5e:	loop   0x417a56
  417a60:	mov    ch,0x63
  417a62:	test   al,0x2f
  417a64:	ins    DWORD PTR es:[edi],dx
  417a65:	mov    ds:0x83a240d5,al
  417a6a:	sbb    dh,BYTE PTR [ecx+0x60f8dd00]
  417a70:	mov    bl,0xb2
  417a72:	jne    0x417ade
  417a74:	or     eax,0xdec117b8
  417a79:	addr16 dec esp
  417a7b:	rcl    BYTE PTR [edx+0x69b493a9],0x60
  417a82:	dec    esp
  417a83:	add    BYTE PTR [edi-0x40b1ab57],ch
  417a89:	dec    ecx
  417a8a:	cdq    
  417a8b:	loop   0x417a42
  417a8d:	in     eax,dx
  417a8e:	xchg   BYTE PTR ds:[edi],bh
  417a91:	jle    0x417aad
  417a93:	in     eax,dx
  417a94:	add    esi,DWORD PTR [ebp-0x7f]
  417a97:	push   ebp
  417a98:	or     esp,esi
  417a9a:	repnz mov dl,0x74
  417a9d:	mov    edx,0xa6aec856
  417aa2:	add    ecx,DWORD PTR [ebx]
  417aa4:	xchg   edx,eax
  417aa6:	popf   
  417aa7:	pushf  
  417aa8:	cmp    BYTE PTR [edi],dh
  417aaa:	and    BYTE PTR [esi+0x4c],ch
  417aad:	push   ebx
  417aae:	push   ecx
  417aaf:	push   eax
  417ab0:	jbe    0x417a98
  417ab2:	mov    BYTE PTR [eax],dh
  417ab4:	and    edi,DWORD PTR [eax]
  417ab6:	ins    DWORD PTR es:[edi],dx
  417ab7:	data16 mov ch,0x76
  417aba:	or     edi,0x7b1ddb4a
  417ac0:	jns    0x417a7d
  417ac2:	push   esp
  417ac3:	or     BYTE PTR [edx+edx*4],bh
  417ac6:	bnd jge 0x417b41
  417ac9:	je     0x417b48
  417acb:	xchg   edi,eax
  417acc:	and    DWORD PTR [esi],esi
  417ace:	mov    esi,DWORD PTR [eax]
  417ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ad1:	ret    
  417ad2:	(bad)  
  417ad3:	(bad)  
  417ad4:	(bad)  
  417ad5:	push   ds
  417ad6:	(bad)  
  417ad7:	ins    DWORD PTR es:[edi],dx
  417ad8:	sahf   
  417ad9:	aad    0xc5
  417adb:	dec    ecx
  417adc:	(bad)  
  417ade:	push   ds
  417adf:	jmp    0x39f79a9
  417ae4:	cmp    cl,dh
  417ae6:	adc    DWORD PTR [eax],edi
  417ae8:	jp     0x417b15
  417aea:	pop    ds
  417aeb:	cmc    
  417aec:	cmp    al,0xfa
  417aee:	mov    cs,eax
  417af0:	shl    BYTE PTR [edx+0x72],0xe4
  417af4:	(bad)  
  417af7:	push   ebx
  417af8:	pop    esi
  417af9:	inc    esp
  417afa:	inc    esi
  417afb:	cmp    al,0x53
  417afd:	pop    ebx
  417afe:	jmp    0x417b7f
  417b00:	dec    esp
  417b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b02:	outs   dx,DWORD PTR ds:[esi]
  417b03:	jecxz  0x417b3a
  417b05:	stc    
  417b06:	xlat   BYTE PTR ds:[ebx]
  417b07:	lock in al,dx
  417b09:	xor    eax,0x63fb3dcc
  417b0e:	jp     0x417ace
  417b10:	or     al,BYTE PTR [edi-0x69]
  417b13:	xor    eax,0x6ce2b932
  417b18:	jg     0x417afe
  417b1a:	fs pop ecx
  417b1c:	mov    al,gs:0xf79c58ab
  417b22:	add    esp,DWORD PTR [esi-0x79]
  417b25:	mov    edx,DWORD PTR [edi]
  417b27:	inc    edx
  417b28:	sub    BYTE PTR [esi-0x57b950a0],cl
  417b2e:	pop    ebx
  417b2f:	push   ebx
  417b30:	fs add eax,0xb3e55fd1
  417b36:	adc    ebp,0x25
  417b39:	loop   0x417b51
  417b3b:	gs and eax,0xfaff48e1
  417b41:	scas   al,BYTE PTR es:[edi]
  417b42:	jle    0x417b97
  417b44:	fcomp  st(4)
  417b46:	loop   0x417b80
  417b48:	mov    dh,0x56
  417b4a:	(bad)  
  417b4b:	jge    0x417b4e
  417b4d:	nop
  417b4e:	icebp  
  417b4f:	push   ebp
  417b50:	push   ebx
  417b51:	mov    ebp,0xb51cfb97
  417b56:	pop    ebx
  417b57:	aam    0x82
  417b59:	repz jnp 0x417ba2
  417b5c:	adc    al,0x90
  417b5e:	fwait
  417b5f:	pushf  
  417b60:	(bad)  
  417b61:	in     al,dx
  417b62:	pop    ds
  417b63:	and    cl,BYTE PTR [edi]
  417b65:	or     al,0xc6
  417b67:	fstp   QWORD PTR [ecx+0x8]
  417b6a:	outs   dx,DWORD PTR ds:[esi]
  417b6b:	or     edi,DWORD PTR [edi+esi*8+0x1d]
  417b6f:	push   esi
  417b70:	das    
  417b71:	xchg   BYTE PTR [ebp-0x46d7e31c],ah
  417b77:	pop    ebx
  417b78:	and    BYTE PTR [eax+0xbe02aec],dh
  417b7e:	mov    ds:0xb31946be,al
  417b83:	mov    al,BYTE PTR [eax+eiz*1-0x19]
  417b87:	aas    
  417b88:	mov    ebp,0x8e2f68d3
  417b8d:	push   edx
  417b8e:	dec    esp
  417b8f:	sti    
  417b90:	test   BYTE PTR [eax-0x36eae5db],cl
  417b96:	cmp    DWORD PTR [ebx+0x2e1c6d55],ebx
  417b9c:	adc    al,0x2d
  417b9e:	loopne 0x417b37
  417ba0:	push   ebp
  417ba1:	imul   edi,DWORD PTR [eax+0x19],0xffffff86
  417ba5:	outs   dx,BYTE PTR ds:[esi]
  417ba6:	dec    ebx
  417ba7:	sar    BYTE PTR [ecx+0x6699f317],1
  417bad:	pop    es
  417bae:	mov    esi,0xd2f7193d
  417bb3:	clc    
  417bb4:	dec    eax
  417bb5:	mov    edx,0x791d42c1
  417bba:	not    DWORD PTR [esp+edx*2]
  417bbd:	sub    al,0x7
  417bbf:	push   ds
  417bc0:	btr    DWORD PTR [edi],0x6b
  417bc4:	pop    ecx
  417bc5:	daa    
  417bc6:	add    al,0xa2
  417bc8:	in     eax,0xc2
  417bca:	xor    eax,DWORD PTR ds:0x6750991c
  417bd0:	pop    es
  417bd1:	mov    cl,0xee
  417bd3:	bound  esi,QWORD PTR [di+0x7150]
  417bd8:	fcmovb st,st(4)
  417bda:	into   
  417bdb:	push   0xe5670caa
  417be0:	xor    ecx,DWORD PTR [edi*1-0x2f16ecf9]
  417be7:	mov    ebx,0xbe907c3d
  417bec:	and    edx,ebx
  417bee:	add    eax,0xb42193ed
  417bf3:	mov    al,0xb4
  417bf5:	pop    ds
  417bf6:	cmp    bh,bl
  417bf8:	adc    ch,BYTE PTR [ecx+0x46d844f9]
  417bfe:	jl     0x417bc7
  417c00:	mov    eax,ds:0x90ab5b1f
  417c05:	push   cs
  417c06:	xchg   ebp,eax
  417c07:	sbb    DWORD PTR [edx+0x7d3e6291],ecx
  417c0d:	cmp    DWORD PTR [ebp-0x22],ebx
  417c10:	jecxz  0x417c28
  417c12:	std    
  417c13:	dec    edx
  417c14:	mov    edx,0x15142fe6
  417c19:	jg     0x417c92
  417c1b:	scas   al,BYTE PTR es:[edi]
  417c1c:	call   0x90ea:0xb4240e2
  417c23:	mov    al,ds:0x979b2887
  417c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c29:	jns    0x417c37
  417c2b:	int3   
  417c2c:	hlt    
  417c2d:	push   esp
  417c2e:	das    
  417c2f:	push   ds
  417c30:	in     eax,dx
  417c31:	dec    ebp
  417c32:	mov    bh,0xbf
  417c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c35:	js     0x417c7d
  417c37:	shl    DWORD PTR [ebx+0x7d9999d9],1
  417c3d:	stos   BYTE PTR es:[edi],al
  417c3e:	mov    ebp,0x51425a26
  417c43:	ss cdq 
  417c45:	add    ebp,ebx
  417c47:	mov    al,bh
  417c49:	out    0x83,al
  417c4b:	imul   ecx,esi,0xbd2d944f
  417c51:	mov    edi,0x1635057f
  417c56:	mov    ebp,0x655c77f0
  417c5b:	aad    0xeb
  417c5d:	pop    ss
  417c5e:	cmp    BYTE PTR [ebx+0x5ddf0eee],dl
  417c64:	jbe    0x417c94
  417c66:	out    dx,al
  417c67:	xor    al,0x23
  417c69:	push   es
  417c6a:	mov    ah,BYTE PTR [edi]
  417c6c:	jmp    0x2397:0xe394d38d
  417c73:	loope  0x417cd7
  417c75:	mov    ebx,0xb68f713f
  417c7a:	test   al,0x9f
  417c7c:	les    eax,FWORD PTR [ebp-0x33]
  417c7f:	jle    0x417c69
  417c81:	or     eax,0xe528e142
  417c86:	stos   BYTE PTR es:[edi],al
  417c87:	les    ebp,FWORD PTR [edx+0x67c2ad21]
  417c8d:	(bad)  
  417c8e:	ror    esp,1
  417c90:	pop    ebx
  417c91:	(bad)  
  417c92:	and    edi,DWORD PTR [ebp+0x78]
  417c95:	in     al,dx
  417c96:	mov    ecx,0x3276a994
  417c9b:	loop   0x417ce1
  417c9d:	sar    esp,cl
  417c9f:	mov    ah,0x52
  417ca1:	inc    esi
  417ca2:	mov    ebx,0x48acb3b6
  417ca7:	xchg   bh,cl
  417ca9:	and    BYTE PTR [edi],0x31
  417cac:	dec    ebp
  417cad:	repz lea ebx,[ebp+0x6f942e7a]
  417cb4:	jbe    0x417c4a
  417cb6:	(bad)  
  417cb7:	jmp    0xd28f:0xfc9f40be
  417cbe:	mov    ebp,0xd372bcc8
  417cc3:	rcr    DWORD PTR [edx+0x2e],1
  417cc6:	call   0x9909b1a0
  417ccb:	ds sub bh,ah
  417cce:	aas    
  417ccf:	mov    edx,0xca8049e5
  417cd4:	int3   
  417cd5:	loop   0x417c9c
  417cd7:	cs pop edi
  417cd9:	xor    DWORD PTR [edx],edx
  417cdb:	pusha  
  417cdc:	adc    eax,0x5b4f71d9
  417ce1:	xchg   ebp,eax
  417ce2:	jle    0x417d3b
  417ce4:	mov    ds:0x2013d245,eax
  417ce9:	rol    BYTE PTR [ebx-0x5a],1
  417cec:	mov    WORD PTR [eax-0x4c8f1bd],cs
  417cf2:	mov    edi,0x692df85d
  417cf7:	mov    ebp,0x8fc7e80e
  417cfc:	sub    edi,DWORD PTR [edx+ebp*4-0x7aebe6a]
  417d03:	rep ins BYTE PTR es:[edi],dx
  417d05:	sbb    BYTE PTR ds:0x4f5d1841,cl
  417d0b:	in     al,dx
  417d0c:	cmp    ebx,DWORD PTR [eax+eiz*4-0x6]
  417d10:	mov    esp,0xa3963423
  417d15:	jne    0x417d30
  417d17:	pushf  
  417d18:	icebp  
  417d19:	sub    DWORD PTR [edx],0xffffff96
  417d1c:	mov    WORD PTR [esp+edi*1-0x51],fs
  417d20:	mov    edi,0x2bb35661
  417d25:	ror    BYTE PTR [edi-0x8],0xf0
  417d29:	lods   eax,DWORD PTR ds:[esi]
  417d2a:	sahf   
  417d2b:	in     eax,dx
  417d2c:	loop   0x417cb1
  417d2e:	xor    BYTE PTR [edi+0x5a],ah
  417d31:	and    ah,0x43
  417d34:	dec    ebx
  417d35:	mov    ah,0x8b
  417d37:	(bad)  
  417d38:	fild   QWORD PTR [eax+0x6c]
  417d3b:	shr    DWORD PTR [esi],cl
  417d3d:	add    BYTE PTR [ebx-0x1befe530],bh
  417d43:	fwait
  417d44:	cmp    ebp,eax
  417d46:	inc    eax
  417d47:	ret    
  417d48:	int3   
  417d49:	retf   
  417d4a:	push   0xab3028e9
  417d4f:	jecxz  0x417ce7
  417d51:	in     al,0xa
  417d53:	or     ch,BYTE PTR [edx-0x5e]
  417d56:	cmovnp edi,DWORD PTR [esi]
  417d59:	cld    
  417d5a:	(bad)  
  417d5c:	stos   BYTE PTR es:[edi],al
  417d5d:	aaa    
  417d5e:	arpl   WORD PTR [esi+0xffd67f0],bp
  417d64:	pop    esi
  417d65:	inc    ecx
  417d66:	cmc    
  417d67:	push   edx
  417d68:	ror    BYTE PTR [eax+0x4790258e],0xd4
  417d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d70:	inc    ecx
  417d71:	push   edx
  417d72:	outs   dx,BYTE PTR ds:[esi]
  417d73:	add    ebp,DWORD PTR ds:0x8cf1f681
  417d79:	xor    BYTE PTR [eax],0x79
  417d7c:	push   ecx
  417d7d:	test   al,0xaf
  417d7f:	cs fs mov ecx,0x4c1cc39a
  417d86:	iret   
  417d87:	lahf   
  417d88:	jp     0x417db7
  417d8a:	int3   
  417d8b:	fstp   DWORD PTR [ebp+0x52]
  417d8e:	pop    edi
  417d8f:	xor    DWORD PTR [edx+eiz*8+0x33],ebp
  417d93:	not    BYTE PTR [eax+0x53]
  417d96:	enter  0xb174,0x2b
  417d9a:	call   0xd070f150
  417d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417da0:	in     eax,0x4f
  417da2:	cmp    edi,ecx
  417da4:	(bad)  
  417da5:	cmp    eax,DWORD PTR [ebx-0xa]
  417da8:	imul   edx,DWORD PTR [ebx+0x3d31c5a1],0xf452765c
  417db2:	mov    DWORD PTR [edi+0x68],edx
  417db5:	jne    0x417dde
  417db7:	jmp    0x417da1
  417db9:	adc    DWORD PTR [edi+esi*8],edi
  417dbc:	ror    esp,cl
  417dbe:	xchg   DWORD PTR [ebp+0x1],edi
  417dc1:	jecxz  0x417da8
  417dc3:	jns    0x417d96
  417dc5:	mov    bh,0x3c
  417dc7:	inc    eax
  417dc8:	loopne 0x417d8a
  417dca:	mov    al,0x7e
  417dcc:	add    dl,0xb7
  417dcf:	repnz int3 
  417dd1:	rcr    BYTE PTR [edi-0x39bc2f42],1
  417dd7:	add    al,0x42
  417dd9:	mov    ebx,0x4399adc0
  417dde:	aas    
  417ddf:	mov    eax,ds:0x46551de9
  417de4:	add    al,0x59
  417de6:	push   ebx
  417de7:	xor    ch,BYTE PTR [ecx]
  417de9:	loope  0x417d87
  417deb:	cmc    
  417dec:	call   0x4e2beed2
  417df1:	xchg   ebx,eax
  417df2:	(bad)  
  417df3:	dec    eax
  417df4:	inc    esp
  417df5:	clc    
  417df6:	in     eax,0x93
  417df8:	retf   0x1461
  417dfb:	call   0x80923ae7
  417e00:	push   edi
  417e01:	inc    esi
  417e02:	xor    DWORD PTR [esi-0x1d88608c],ecx
  417e08:	inc    edi
  417e09:	aad    0xeb
  417e0b:	cmc    
  417e0c:	dec    ecx
  417e0d:	cdq    
  417e0e:	cs mov esi,esp
  417e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e12:	mov    dh,0xdf
  417e14:	sub    ebx,DWORD PTR [edi-0x5e194c9]
  417e1a:	jo     0x417dfd
  417e1c:	rcl    edx,0x41
  417e1f:	pop    ds
  417e20:	mov    ch,0x5d
  417e22:	mov    dh,0x47
  417e24:	imul   esp,DWORD PTR [edi]
  417e27:	dec    ebp
  417e28:	dec    esi
  417e29:	(bad)
  417e2c:	cmp    eax,0x741c03dc
  417e31:	fnstcw WORD PTR [ecx]
  417e33:	into   
  417e34:	outs   dx,BYTE PTR ds:[esi]
  417e35:	in     eax,dx
  417e36:	or     DWORD PTR ds:0xc469fea3,esi
  417e3c:	cwde   
  417e3d:	frstor [ecx-0x4463d226]
  417e43:	push   ebp
  417e44:	sti    
  417e45:	in     eax,dx
  417e46:	cwde   
  417e47:	arpl   WORD PTR [edx],sp
  417e49:	data16 es (bad) 
  417e4c:	scas   al,BYTE PTR es:[edi]
  417e4d:	jg     0x417e57
  417e4f:	sub    eax,DWORD PTR [ecx]
  417e51:	and    edx,esi
  417e53:	aaa    
  417e54:	daa    
  417e55:	jno    0x417dea
  417e57:	jo     0x417ed0
  417e59:	adc    ebx,esp
  417e5b:	mov    BYTE PTR [edi],cl
  417e5d:	sbb    ah,0xb
  417e60:	pop    ds
  417e61:	jbe    0x417de5
  417e63:	fdivr  QWORD PTR [ecx+0x48af1b32]
  417e69:	(bad)  [esi+0x6a]
  417e6c:	dec    ebx
  417e6d:	jmp    FWORD PTR [edx]
  417e6f:	fstp   QWORD PTR [ebx-0xe]
  417e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e73:	rcl    DWORD PTR [ebx-0x73],1
  417e76:	cmp    al,0x3e
  417e78:	sbb    DWORD PTR [ebx-0x66],edx
  417e7b:	mov    dl,0xe0
  417e7d:	push   edx
  417e7e:	fsub   DWORD PTR [ecx+0x74]
  417e81:	dec    edx
  417e82:	xchg   edi,eax
  417e83:	int    0xc0
  417e85:	cmp    DWORD PTR [esi-0x73beac87],ebp
  417e8b:	pop    edx
  417e8c:	jbe    0x417e52
  417e8e:	outs   dx,DWORD PTR ds:[esi]
  417e8f:	iret   
  417e90:	push   cs
  417e91:	aam    0xca
  417e93:	sbb    esp,DWORD PTR [ebp-0x6258f8ac]
  417e99:	stos   BYTE PTR es:[edi],al
  417e9a:	arpl   WORD PTR [eax],bx
  417e9c:	mov    ah,0x6
  417e9e:	fidiv  DWORD PTR [esi+0x1bcdf14a]
  417ea4:	xor    BYTE PTR [edx],cl
  417ea6:	gs xchg ecx,eax
  417ea8:	add    al,0x37
  417eaa:	stos   DWORD PTR es:[edi],eax
  417eab:	mov    al,BYTE PTR [edi]
  417ead:	jae    0x417e30
  417eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eb0:	xchg   ebp,eax
  417eb1:	jbe    0x417e5f
  417eb3:	test   ax,0x9859
  417eb7:	addr16 or edx,ebp
  417eba:	dec    edx
  417ebb:	jne    0x417eab
  417ebd:	lds    edi,FWORD PTR [edi]
  417ebf:	cli    
  417ec0:	cmp    al,cl
  417ec2:	dec    edx
  417ec3:	pop    ss
  417ec4:	out    0xfc,al
  417ec6:	pop    ecx
  417ec7:	imul   eax,ecx,0x3d17a86c
  417ecd:	inc    ecx
  417ece:	jb     0x417f02
  417ed0:	(bad)  
  417ed1:	(bad)  
  417ed2:	scas   eax,DWORD PTR es:[edi]
  417ed3:	js     0x417e82
  417ed5:	(bad)  
  417ed7:	push   0xd8060c17
  417edc:	ins    BYTE PTR es:[edi],dx
  417edd:	push   ds
  417ede:	aas    
  417edf:	pop    ebp
  417ee0:	add    ecx,DWORD PTR [edx]
  417ee2:	scas   al,BYTE PTR es:[edi]
  417ee3:	in     eax,0x34
  417ee5:	add    bh,dl
  417ee7:	and    al,0x8a
  417ee9:	into   
  417eea:	add    eax,DWORD PTR [bx+di-0x3f5b]
  417eef:	(bad)  
  417ef0:	(bad)  
  417ef2:	push   es
  417ef3:	sbb    eax,edi
  417ef5:	push   0xffffffad
  417ef7:	mov    eax,ds:0x57ad5a4e
  417efc:	aas    
  417efd:	mov    esp,0x1f7bc9d
  417f02:	lods   al,BYTE PTR ds:[esi]
  417f03:	jle    0x417f2e
  417f05:	or     bh,al
  417f07:	aas    
  417f08:	mov    ecx,0x6ab665f2
  417f0d:	mov    ah,al
  417f0f:	push   ds
  417f10:	mov    cl,0xc0
  417f12:	adc    dh,BYTE PTR [edx-0x49c5319f]
  417f18:	xchg   esi,eax
  417f19:	ror    DWORD PTR [esi-0x3e],cl
  417f1c:	jb     0x417ed3
  417f1e:	pusha  
  417f1f:	jl     0x417ec7
  417f21:	push   ds
  417f22:	cmp    al,0x75
  417f24:	rcl    ecx,1
  417f26:	(bad)  
  417f27:	retf   
  417f28:	out    dx,eax
  417f29:	je     0x417f9d
  417f2b:	add    DWORD PTR [ebx],edi
  417f2d:	sbb    al,0xe0
  417f2f:	jo     0x417ebc
  417f31:	mov    al,ds:0x75bb51d
  417f36:	js     0x417eb9
  417f38:	mov    edx,0xbfbb03c1
  417f3d:	xor    al,0x4a
  417f3f:	pop    ebp
  417f40:	push   0x45
  417f42:	loop   0x417ec9
  417f44:	bound  ecx,QWORD PTR [ebx-0x210af1b]
  417f4a:	ret    0x2bf4
  417f4d:	pop    ecx
  417f4e:	add    bh,BYTE PTR [edx]
  417f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f51:	sbb    bh,bl
  417f53:	dec    esi
  417f54:	jl     0x417ede
  417f56:	add    al,0x42
  417f58:	ret    
  417f59:	dec    ebx
  417f5a:	pop    esp
  417f5b:	inc    esp
  417f5c:	mov    al,ch
  417f5e:	pop    ebp
  417f5f:	dec    esp
  417f60:	mov    eax,0x65be23dd
  417f65:	lods   eax,DWORD PTR ds:[esi]
  417f66:	cld    
  417f67:	sbb    dh,ch
  417f69:	into   
  417f6a:	hlt    
  417f6b:	push   esi
  417f6c:	jae    0x417f53
  417f6e:	inc    esi
  417f6f:	adc    al,0x23
  417f71:	push   0xdd5506b3
  417f76:	push   es
  417f77:	jnp    0x417fb1
  417f79:	dec    ecx
  417f7a:	adc    DWORD PTR [ecx+0x21],0x9
  417f7e:	dec    ebx
  417f7f:	and    al,0x8e
  417f81:	out    dx,eax
  417f82:	add    eax,0xd4487eff
  417f87:	hlt    
  417f88:	dec    DWORD PTR [ecx+esi*2+0x1b]
  417f8c:	ss js  0x417fa5
  417f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f90:	jb     0x417f64
  417f92:	mov    bh,BYTE PTR [esi]
  417f94:	adc    cl,dh
  417f96:	ret    
  417f97:	movups XMMWORD PTR ds:0x41923f0b,xmm1
  417f9e:	jl     0x417fbb
  417fa0:	mov    dh,0xf4
  417fa2:	dec    eax
  417fa3:	into   
  417fa4:	sub    eax,0x648dafd2
  417fa9:	or     bl,0xf9
  417fac:	and    ebx,ecx
  417fae:	ins    DWORD PTR es:[edi],dx
  417faf:	jmp    0x417f7d
  417fb1:	mov    bh,0x32
  417fb3:	or     DWORD PTR ds:0xe33d3ce3,ebx
  417fb9:	(bad)  [edx+0x22]
  417fbc:	ror    DWORD PTR [esi+ecx*4-0x31],cl
  417fc0:	inc    ebx
  417fc1:	cwde   
  417fc2:	jns    0x417ff5
  417fc4:	in     al,0x8c
  417fc6:	mul    BYTE PTR [ebx+0x46]
  417fc9:	mov    al,ds:0x4e5c2c4d
  417fce:	jo     0x417f7e
  417fd0:	stc    
  417fd1:	inc    DWORD PTR [edx+0x58]
  417fd4:	mov    edi,0x4dbd30e4
  417fd9:	cmc    
  417fda:	fsub   DWORD PTR [ebx]
  417fdc:	dec    edi
  417fdd:	dec    esp
  417fde:	mov    dh,0xf
  417fe0:	mov    ch,BYTE PTR [esi+esi*1+0x15]
  417fe4:	(bad)  
  417fe5:	ficom  DWORD PTR ds:0xed753a04
  417feb:	adc    eax,0xf8580861
  417ff0:	daa    
  417ff1:	or     bl,BYTE PTR [esi+0x11086960]
  417ff7:	cs mov edi,0xc3f4e632
  417ffd:	enter  0xeec6,0xb7
  418001:	fxch   st(7)
  418003:	sahf   
  418004:	mov    eax,ds:0x58eec40d
  418009:	jbe    0x417f94
  41800b:	push   es
  41800c:	ror    DWORD PTR [eax],0x1c
  41800f:	adc    DWORD PTR [ebx],0x313faae2
  418015:	int    0xef
  418017:	addr16 mov ds:0x9a6,al
  41801b:	hlt    
  41801c:	stos   BYTE PTR es:[edi],al
  41801d:	in     al,0xfb
  41801f:	push   ds
  418020:	mov    ebp,0xd0da37e8
  418025:	(bad)  
  418026:	aaa    
  418027:	mov    eax,0xd4de64c1
  41802c:	jb     0x418061
  41802e:	xor    ax,0x176f
  418032:	jg     0x4180b3
  418034:	inc    ebx
  418035:	jns    0x418095
  418037:	adc    al,0x8
  418039:	pop    ebx
  41803a:	sub    edx,DWORD PTR [eax+0x454ab799]
  418040:	scas   eax,DWORD PTR es:[edi]
  418041:	mov    ah,cl
  418043:	aam    0x1
  418045:	push   edi
  418046:	pop    esp
  418047:	iret   
  418048:	sahf   
  418049:	xchg   ecx,eax
  41804a:	test   DWORD PTR [esi-0x39],ebp
  41804d:	enter  0x8e22,0x16
  418051:	aas    
  418052:	sbb    DWORD PTR [esi+0x7],eax
  418055:	jl     0x4180a5
  418057:	sub    al,0x70
  418059:	jge    0x418099
  41805b:	fwait
  41805c:	hlt    
  41805d:	inc    ebx
  41805e:	out    dx,al
  41805f:	cmc    
  418060:	test   DWORD PTR [eax-0x5b22bae3],0xdf364775
  41806a:	xchg   esp,eax
  41806b:	or     dh,BYTE PTR [ebx+eax*4]
  41806e:	jb     0x4180a3
  418070:	das    
  418071:	mov    ebx,0xcb47a775
  418076:	push   es
  418077:	fisttp WORD PTR [ecx+eiz*2+0x16]
  41807b:	imul   ebp,DWORD PTR cs:[eax+0x26],0x1fd8f8ad
  418083:	xchg   edi,eax
  418084:	xor    bl,dl
  418086:	jb     0x418047
  418088:	dec    esi
  418089:	sub    BYTE PTR [esi-0x34709137],0xd4
  418090:	jge    0x4180f8
  418092:	inc    ecx
  418093:	pop    es
  418094:	jo     0x418072
  418096:	dec    ebx
  418097:	mov    DWORD PTR [edi],ecx
  418099:	jl     0x418102
  41809b:	outs   dx,BYTE PTR ds:[esi]
  41809c:	adc    eax,0x8cfd71e0
  4180a1:	out    dx,eax
  4180a2:	pop    ss
  4180a3:	bnd ret 0x12e7
  4180a7:	push   0x8ef3972d
  4180ac:	xchg   edi,eax
  4180ad:	inc    edx
  4180ae:	mov    ebp,0x1b6f00f5
  4180b3:	cmova  ecx,eax
  4180b6:	mov    ch,0x6d
  4180b8:	mov    ecx,0x1e4b357
  4180bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180be:	or     edx,DWORD PTR [ebx-0xc87d479]
  4180c4:	xor    al,0x82
  4180c6:	mov    BYTE PTR [edx],0x47
  4180c9:	or     DWORD PTR [ebp-0x413f90bf],ecx
  4180cf:	add    eax,0xb08b2dcd
  4180d4:	sar    BYTE PTR [eax-0x63],cl
  4180d7:	loope  0x4180a5
  4180d9:	sar    DWORD PTR [ebx],0xdf
  4180dc:	fsubr  st,st(1)
  4180de:	xchg   ecx,eax
  4180df:	inc    ebp
  4180e0:	dec    BYTE PTR [ecx+0x3efb5662]
  4180e6:	jg     0x41814c
  4180e8:	dec    edi
  4180e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180eb:	call   0x27c9f0a9
  4180f0:	lock push 0xffffffe6
  4180f3:	xor    al,0xd9
  4180f5:	test   DWORD PTR [ecx+0x64],ecx
  4180f8:	sub    ecx,DWORD PTR ds:0x58e5f640
  4180fe:	xor    al,0xf3
  418100:	pop    es
  418101:	(bad)  
  418103:	mov    ebp,0x70634724
  418108:	inc    esi
  418109:	pop    edx
  41810a:	(bad)
  41810e:	daa    
  41810f:	cdq    
  418110:	mov    dh,0x4
  418112:	add    DWORD PTR [edi+0x4b242eb],esi
  418118:	jmp    0xc82b:0x320b0bdd
  41811f:	scas   al,BYTE PTR es:[edi]
  418120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418121:	sub    cl,dl
  418123:	scas   eax,DWORD PTR es:[edi]
  418124:	sbb    esi,DWORD PTR [ebp*1+0x2ae6ab63]
  41812b:	nop
  41812c:	ficomp DWORD PTR [ebx]
  41812e:	dec    esp
  41812f:	aad    0x8f
  418131:	xor    eax,0x811c10e0
  418136:	or     BYTE PTR [esi-0x2384c9c4],dl
  41813c:	js     0x418185
  41813e:	jg     0x4180d7
  418140:	scas   al,BYTE PTR es:[edi]
  418141:	fcomp  QWORD PTR [eax+ecx*2]
  418144:	pop    eax
  418145:	xchg   edi,eax
  418146:	add    BYTE PTR [eax-0x8],bh
  418149:	loop   0x418168
  41814b:	jae    0x4181c7
  41814d:	dec    ebx
  41814e:	dec    edi
  41814f:	pop    esp
  418150:	and    BYTE PTR [eax],al
  418152:	mov    ebx,0xc319398a
  418157:	outs   dx,BYTE PTR ds:[esi]
  418158:	add    ecx,DWORD PTR [ecx+0x158ae9c5]
  41815e:	xchg   ecx,eax
  41815f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418160:	stc    
  418161:	mov    ecx,DWORD PTR [edi+edi*2-0x57cbd7da]
  418168:	inc    ebx
  418169:	outs   dx,DWORD PTR ds:[esi]
  41816a:	mov    ebx,0x67bda2dd
  41816f:	mov    DWORD PTR [eax+eiz*4],esp
  418172:	in     eax,0x66
  418174:	shr    ecx,0x41
  418177:	jae    0x4181c4
  418179:	out    0x8b,eax
  41817b:	jmp    0xd7af:0xec50e616
  418182:	in     al,dx
  418183:	jle    0x41816f
  418185:	mov    ch,0xac
  418187:	jmp    0xf398bb54
  41818c:	add    eax,0xd04232a6
  418191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418192:	pop    esp
  418193:	adc    ecx,DWORD PTR [ebx-0x3d57d3f2]
  418199:	(bad)  
  41819b:	mov    esp,0x27ba8484
  4181a0:	aad    0x43
  4181a2:	jl     0x418180
  4181a4:	sub    ebp,DWORD PTR [ebx-0x45]
  4181a7:	xchg   edx,ecx
  4181a9:	int    0x91
  4181ab:	test   DWORD PTR [edi+0x59ff5126],esp
  4181b1:	pop    ss
  4181b2:	call   0xe746:0x4aaee3c2
  4181b9:	mov    BYTE PTR [esp+edi*1-0x77b91fd5],bl
  4181c0:	jbe    0x4181b0
  4181c2:	sub    edx,ecx
  4181c4:	(bad)  
  4181c6:	shr    ecx,cl
  4181c8:	mov    eax,0x36c86cbb
  4181cd:	mov    ds:0x68ff336a,eax
  4181d2:	add    dl,al
  4181d4:	xchg   edi,eax
  4181d5:	pavgw  mm1,mm4
  4181d8:	and    al,0x71
  4181da:	push   0x1f312662
  4181df:	jmp    0x1f38eac8
  4181e4:	fstp   QWORD PTR [esp+edx*4+0x4a]
  4181e8:	in     eax,dx
  4181e9:	inc    edi
  4181ea:	cmpxchg ah,dh
  4181ed:	gs cmovo eax,edx
  4181f1:	nop
  4181f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f3:	or     DWORD PTR [esp+eiz*8-0x20],0x3ce559c7
  4181fb:	(bad)  
  4181fc:	test   eax,0xe6d5a67a
  418201:	ins    DWORD PTR es:[edi],dx
  418202:	out    0x28,eax
  418204:	cs (bad) 
  418206:	dec    ecx
  418207:	pop    ss
  418208:	out    0xe4,al
  41820a:	sub    ch,BYTE PTR [ebx+ebp*4]
  41820d:	ret    0x1649
  418210:	pmuludq mm7,mm5
  418213:	and    DWORD PTR [ebx-0x28],0xffffffaf
  418217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418219:	retf   
  41821a:	cmp    eax,0xc41f8054
  41821f:	dec    ebp
  418220:	jne    0x418230
  418222:	scas   al,BYTE PTR es:[edi]
  418223:	outs   dx,BYTE PTR ds:[esi]
  418224:	stos   DWORD PTR es:[edi],eax
  418225:	sbb    al,0x3b
  418227:	sbb    al,0x1f
  418229:	lahf   
  41822a:	jg     0x41829a
  41822c:	push   ebx
  41822d:	push   ebp
  41822e:	je     0x418273
  418230:	stc    
  418231:	ret    
  418232:	mov    ah,BYTE PTR [ecx-0x647bc838]
  418238:	retf   
  418239:	pop    esp
  41823a:	push   0x632dee7e
  41823f:	push   edi
  418240:	enter  0xac85,0x84
  418244:	fadd   st(2),st
  418246:	in     al,0x9a
  418248:	test   ecx,ecx
  41824a:	sbb    ebx,DWORD PTR [edi+0x121c86b0]
  418250:	mov    dl,0x79
  418252:	sub    DWORD PTR [ecx+0x25ccb8ea],edx
  418258:	mov    ch,0x6e
  41825a:	les    edx,FWORD PTR [esi-0x79]
  41825d:	and    DWORD PTR [esi+0x181fc18d],ecx
  418263:	out    dx,eax
  418264:	clc    
  418265:	xchg   esi,eax
  418266:	pushf  
  418267:	int3   
  418268:	sbb    edx,DWORD PTR [eax+edx*8]
  41826b:	std    
  41826c:	ds add eax,0x85424067
  418272:	dec    edi
  418273:	adc    eax,edi
  418275:	pusha  
  418276:	pop    ebp
  418277:	pushf  
  418278:	pop    edx
  418279:	jne    0x4182ed
  41827b:	sub    cl,BYTE PTR [ebx]
  41827d:	or     DWORD PTR ds:0xffbeba76,ebx
  418283:	bound  ebx,QWORD PTR [edi-0x2]
  418286:	mov    esp,0xfc6c276d
  41828b:	add    ecx,DWORD PTR [edi]
  41828d:	sbb    ch,BYTE PTR [edi+edx*2+0x17]
  418291:	sbb    al,0x40
  418293:	and    eax,0xae42411b
  418298:	cmp    ebx,DWORD PTR [ecx+0x56]
  41829b:	push   cs
  41829c:	mov    esp,0xddee4b7e
  4182a1:	pushf  
  4182a2:	add    eax,0x5e237b15
  4182a7:	jmp    0x276f400e
  4182ac:	sbb    al,dh
  4182ae:	inc    ebp
  4182af:	mov    bl,0x1c
  4182b1:	div    BYTE PTR [esi-0x45]
  4182b4:	(bad)  
  4182b5:	sub    esp,esi
  4182b7:	mov    eax,0x688c6ad3
  4182bc:	add    cl,bh
  4182be:	adc    BYTE PTR [ebx+eiz*1-0x6],ch
  4182c2:	jmp    0x4182fe
  4182c4:	xchg   esp,eax
  4182c5:	jnp    0x41833d
  4182c7:	mov    edx,0xa8d650df
  4182cc:	ins    DWORD PTR es:[edi],dx
  4182cd:	mov    ecx,0x400dd503
  4182d2:	push   edi
  4182d3:	push   esp
  4182d4:	push   0xffffffeb
  4182d6:	popa   
  4182d7:	cmc    
  4182d8:	push   ebp
  4182d9:	dec    BYTE PTR [ebp+0x19]
  4182dc:	cmp    DWORD PTR [ecx],ebp
  4182de:	dec    ecx
  4182df:	out    dx,al
  4182e0:	fdivr  QWORD PTR [ebp-0x4c01b569]
  4182e6:	in     al,0xaf
  4182e8:	push   ds
  4182e9:	imul   edx,DWORD PTR [edi+0x28d1b958],0x14
  4182f0:	fldenv [ecx*4-0x727e4cd1]
  4182f7:	pop    esp
  4182f8:	mov    dl,0xf
  4182fa:	dec    ebp
  4182fb:	out    dx,eax
  4182fc:	jge    0x4182e7
  4182fe:	fist   WORD PTR [ebp+0x1f]
  418301:	mov    cl,ah
  418303:	(bad)  
  418305:	jo     0x41828c
  418307:	leave  
  418308:	rcl    DWORD PTR [ebx-0x7d],0x94
  41830c:	mov    al,ds:0xacc5a7b3
  418311:	dec    edx
  418312:	push   esi
  418313:	ja     0x41832b
  418315:	and    eax,0x18157160
  41831a:	add    bl,BYTE PTR [esi]
  41831c:	cmovs  ebp,DWORD PTR [ecx+0x4cb6d4a5]
  418323:	ror    DWORD PTR [ebp-0x2fb1090],cl
  418329:	inc    eax
  41832a:	(bad)  
  41832b:	pushf  
  41832c:	lock fadd QWORD PTR [esi]
  41832f:	lds    eax,FWORD PTR [esi-0x3fdfef79]
  418335:	js     0x4182e1
  418337:	bound  esp,QWORD PTR [edi+0x40]
  41833a:	fs jmp 0x73dbc6c
  418340:	jle    0x4183c0
  418342:	and    BYTE PTR [edx+0x58],dl
  418345:	mov    bl,0xb0
  418347:	push   ebx
  418348:	stos   BYTE PTR es:[edi],al
  418349:	(bad)  
  41834a:	sub    DWORD PTR es:[ecx+0x7d],0x4b
  41834f:	test   DWORD PTR [esi+0x16],ebp
  418352:	test   DWORD PTR ds:0xce27ceb3,edi
  418358:	inc    ecx
  418359:	mov    bl,0x19
  41835b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41835c:	dec    esp
  41835d:	mov    ds:0xb383979d,al
  418362:	cmp    eax,0xd8e8296a
  418367:	js     0x4182f2
  418369:	ror    BYTE PTR [ecx],cl
  41836b:	mov    edi,0xb0aff710
  418370:	jge    0x4183bb
  418372:	mov    dl,0x25
  418374:	ret    
  418375:	inc    ebp
  418376:	xchg   ecx,eax
  418377:	mov    ds:0xecd79c98,al
  41837c:	out    dx,eax
  41837d:	(bad)  
  41837e:	arpl   WORD PTR [eax],cx
  418380:	fs pop es
  418382:	ja     0x4183c8
  418384:	test   al,0x72
  418386:	jmp    0xc88d:0xc6eacf5a
  41838d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41838e:	popf   
  41838f:	push   ss
  418390:	loopne 0x41835a
  418392:	loope  0x418338
  418394:	ds jg  0x41831c
  418397:	mov    ecx,edi
  418399:	outs   dx,BYTE PTR ds:[esi]
  41839a:	mov    esp,0x99d0484a
  41839f:	cmp    bl,BYTE PTR [esi-0x76]
  4183a2:	popa   
  4183a3:	mov    bh,BYTE PTR [esi+0x62]
  4183a6:	popf   
  4183a7:	pop    edi
  4183a8:	loopne 0x41832b
  4183aa:	retf   0x693b
  4183ad:	in     eax,dx
  4183ae:	loope  0x4183d3
  4183b0:	mov    bh,BYTE PTR [eax+0x6a]
  4183b3:	jecxz  0x4183f1
  4183b5:	ins    DWORD PTR es:[edi],dx
  4183b6:	pop    ds
  4183b7:	jp     0x4183d3
  4183b9:	lahf   
  4183ba:	mov    al,ds:0x97bbd91d
  4183bf:	push   DWORD PTR [ebp-0x6a]
  4183c2:	pop    ebx
  4183c3:	call   0x6a97:0xa2b590a0
  4183ca:	out    0x2e,eax
  4183cc:	jne    0x418371
  4183ce:	jmp    0x418398
  4183d0:	xor    cl,0x20
  4183d3:	pop    esi
  4183d4:	mov    gs,WORD PTR [esi]
  4183d6:	rcr    BYTE PTR [edi],1
  4183d8:	aaa    
  4183d9:	push   edx
  4183da:	call   0x3b26:0x77051e25
  4183e1:	dec    eax
  4183e2:	ss jns 0x418395
  4183e5:	add    eax,0x76575d8d
  4183ea:	add    eax,0xe9ca1e72
  4183ef:	adc    bl,BYTE PTR ds:0x1db52dce
  4183f5:	sbb    DWORD PTR ds:0x1a09b075,esi
  4183fb:	jecxz  0x4183cc
  4183fd:	fidiv  DWORD PTR [ebp+edx*8+0x4c]
  418401:	mov    al,0x6c
  418403:	xchg   edi,eax
  418404:	mov    esi,0xb11caf90
  418409:	mov    cl,0x4a
  41840b:	adc    DWORD PTR [eax-0x254d29ed],esp
  418411:	mov    cl,0xc6
  418413:	push   edi
  418414:	ret    0xd36c
  418417:	jecxz  0x4183e9
  418419:	fimul  WORD PTR [ecx-0x46f1ae55]
  41841f:	pop    ebp
  418420:	nop
  418421:	outs   dx,DWORD PTR ds:[esi]
  418422:	fst    QWORD PTR [ebx]
  418424:	out    dx,eax
  418425:	add    al,0xd3
  418427:	add    BYTE PTR [edx+ecx*8+0x2fca4374],bh
  41842e:	adc    al,0x3d
  418430:	fwait
  418431:	imul   edi,edx,0xe
  418434:	neg    eax
  418436:	and    DWORD PTR [eax+ebp*2-0x16a9de46],edx
  41843d:	test   BYTE PTR [edi-0x107c5209],0x4
  418444:	(bad)  [ecx]
  418446:	push   ds
  418447:	xor    dh,ah
  418449:	int3   
  41844a:	iret   
  41844b:	dec    ecx
  41844c:	test   eax,0x182230be
  418451:	or     BYTE PTR [ebx-0x7fa51163],ah
  418457:	shr    BYTE PTR [ebx+0x2e4bf4f7],cl
  41845d:	imul   esi,DWORD PTR [eax+0x6b],0xb5d48bf3
  418464:	outs   dx,DWORD PTR ds:[esi]
  418465:	leave  
  418466:	xor    bh,0x7d
  418469:	mov    esp,0xab63dbf6
  41846e:	pop    eax
  41846f:	and    al,0xab
  418471:	adc    BYTE PTR [esp+edi*8+0x62],bh
  418475:	pop    esp
  418476:	mov    ebx,0xd284c052
  41847b:	sub    ch,BYTE PTR [edi]
  41847d:	fwait
  41847e:	or     eax,0xf3640f5e
  418483:	xor    eax,0x7a8b02fb
  418488:	in     al,0xa0
  41848a:	jge    0x41843e
  41848c:	xor    al,0x78
  41848e:	jb     0x4184d3
  418490:	loopne 0x41848e
  418492:	cmp    esp,DWORD PTR [ebx+0x1d]
  418495:	add    BYTE PTR [edx],dh
  418497:	neg    BYTE PTR [esp+ebp*4+0x1e]
  41849b:	ins    DWORD PTR es:[edi],dx
  41849c:	mov    ss:0x79f53ee9,al
  4184a2:	test   ebp,edx
  4184a4:	dec    eax
  4184a5:	das    
  4184a6:	inc    esp
  4184a7:	sbb    DWORD PTR [ebx-0x741e3fb0],0xa8cf639b
  4184b1:	xor    ebx,DWORD PTR [edx-0x69]
  4184b4:	call   0x6cf2697f
  4184b9:	xchg   ecx,eax
  4184ba:	jmp    0xbb792cb9
  4184bf:	mov    dl,0xe
  4184c1:	add    ebx,DWORD PTR [esi-0x7c5e4182]
  4184c7:	int3   
  4184c8:	xchg   esi,eax
  4184c9:	sub    edi,DWORD PTR [ebx-0x7]
  4184cc:	ret    
  4184cd:	and    ch,0xf7
  4184d0:	fucomip st,st(7)
  4184d2:	stc    
  4184d3:	mov    esi,0xe75fdce5
  4184d8:	popf   
  4184d9:	dec    esi
  4184da:	(bad)  
  4184dc:	clc    
  4184dd:	mov    ebx,ebp
  4184df:	add    edi,DWORD PTR [edi]
  4184e1:	jmp    0x44900061
  4184e6:	dec    edx
  4184e7:	mov    ecx,0xb5914090
  4184ec:	jmp    0x41853c
  4184ee:	cld    
  4184ef:	xchg   ebx,eax
  4184f0:	sub    eax,ebx
  4184f2:	pop    esp
  4184f3:	rcl    DWORD PTR [edx],1
  4184f5:	mov    edx,0xd1b66ddc
  4184fa:	ucomiss xmm3,DWORD PTR [edx+0x39]
  4184fe:	test   al,0xb7
  418500:	add    edi,DWORD PTR [esi+0x185488a7]
  418506:	dec    edx
  418507:	test   BYTE PTR [ecx-0x67],dh
  41850a:	leave  
  41850b:	push   0xfffffff5
  41850d:	pop    esi
  41850e:	xor    BYTE PTR [edi+eiz*1-0x237c93d1],al
  418515:	xchg   DWORD PTR [edi],edx
  418517:	dec    ebx
  418518:	dec    ebp
  418519:	pop    esp
  41851a:	push   esp
  41851b:	movhps xmm5,QWORD PTR [edx-0x3c]
  41851f:	rol    edi,cl
  418521:	fild   QWORD PTR [edi]
  418523:	sub    esi,DWORD PTR [edx]
  418525:	xlat   BYTE PTR ds:[ebx]
  418526:	inc    esi
  418527:	xor    al,0x6
  418529:	jb     0x418584
  41852b:	pop    edx
  41852c:	js     0x418554
  41852e:	add    eax,0x3d3a0126
  418533:	dec    ebp
  418534:	jle    0x41853a
  418536:	test   BYTE PTR ds:0xdb3980e6,dh
  41853c:	fistp  DWORD PTR [ecx-0x2b]
  41853f:	sub    ebx,ebx
  418541:	or     DWORD PTR [ebx-0x11],ecx
  418544:	adc    cl,0x6
  418547:	mov    dh,0x3d
  418549:	pop    es
  41854a:	test   eax,0xc93d0a04
  41854f:	fnsave ds:0x6aefe653
  418555:	rep lods al,BYTE PTR ds:[esi]
  418557:	cmp    BYTE PTR [ecx],dl
  418559:	lea    edx,[esi+0x1ecb79b2]
  41855f:	mov    cl,0x0
  418561:	or     al,0x11
  418563:	repz enter 0xc93,0x3a
  418568:	pop    ebp
  418569:	out    0x9b,eax
  41856b:	ret    
  41856c:	or     al,0x95
  41856e:	jl     0x418586
  418570:	lea    edi,[ebp+0x11b4a90d]
  418576:	sahf   
  418577:	add    bh,BYTE PTR [ebp-0x31]
  41857a:	repnz arpl WORD PTR [ebx+0x6ebcac6d],sp
  418581:	fimul  DWORD PTR [eax]
  418583:	xor    BYTE PTR [ebp-0x72986775],ah
  418589:	aaa    
  41858a:	lahf   
  41858b:	cmp    DWORD PTR [ebx],0x729db23a
  418591:	(bad)  
  418592:	leave  
  418593:	sbb    cl,BYTE PTR gs:[ebx]
  418596:	adc    BYTE PTR [ebx+0x354ffd2a],dl
  41859c:	std    
  41859d:	pop    esi
  41859e:	inc    eax
  41859f:	idiv   DWORD PTR ds:0x7e29aebd
  4185a5:	rcr    DWORD PTR ds:0x8738d2d8,0x51
  4185ac:	dec    edx
  4185ad:	dec    eax
  4185ae:	popf   
  4185af:	stc    
  4185b0:	adc    BYTE PTR [ebp-0x50a2cf09],bl
  4185b6:	push   ds
  4185b7:	mov    ds:0x31286ddf,al
  4185bc:	lods   eax,DWORD PTR ds:[esi]
  4185bd:	fdiv   st(7),st
  4185bf:	add    bl,bh
  4185c1:	jne    0x4185ce
  4185c3:	std    
  4185c4:	mov    ds:0xc5175acc,al
  4185c9:	fs sti 
  4185cb:	ins    DWORD PTR es:[edi],dx
  4185cc:	leave  
  4185cd:	outs   dx,BYTE PTR ds:[esi]
  4185ce:	mov    dl,0x6d
  4185d0:	nop
  4185d1:	imul   ebx,DWORD PTR [esi+0x57561e2],0x3cf68c2a
  4185db:	data16 stc 
  4185dd:	mov    bl,0xc1
  4185df:	mov    ebp,0xff25f796
  4185e4:	ret    
  4185e5:	push   cs
  4185e6:	fwait
  4185e7:	adc    ecx,DWORD PTR [edx-0x2c]
  4185ea:	loop   0x41856d
  4185ec:	jle    0x4185d4
  4185ee:	and    eax,0x7b096b95
  4185f3:	mov    esp,0x9ee85eb7
  4185f8:	push   0x5098c9a2
  4185fd:	push   es
  4185fe:	clc    
  4185ff:	fdivr  DWORD PTR [ebx]
  418601:	(bad)  
  418602:	and    dl,BYTE PTR [eax-0xbf605e1]
  418608:	or     eax,0x642f1569
  41860d:	(bad)  
  41860f:	cmp    al,0xba
  418611:	in     al,dx
  418612:	push   esp
  418613:	js     0x418604
  418615:	sar    DWORD PTR [edi+0x31],cl
  418618:	sub    ah,BYTE PTR [eax+0x4de3e0da]
  41861e:	cmp    dl,BYTE PTR [ecx+0x4a]
  418621:	push   ss
  418622:	cmp    al,0xc0
  418624:	mov    edx,0xd41939b3
  418629:	(bad)  
  41862a:	stc    
  41862b:	cs ja  0x4185b2
  41862e:	ret    0x745e
  418631:	mov    bh,0xc9
  418633:	test   BYTE PTR [eax],al
  418635:	adc    DWORD PTR [ebx+ebx*2],ecx
  418638:	cld    
  418639:	test   al,0x52
  41863b:	rcr    DWORD PTR [ebx+0x71],0xfb
  41863f:	pop    eax
  418640:	shr    dh,0xdd
  418643:	mov    ebp,0xaa9047f0
  418648:	cmp    DWORD PTR [ecx+0x32fe8c2b],eax
  41864e:	test   al,0x91
  418650:	mov    edi,0x3102cc59
  418655:	inc    edx
  418656:	push   edx
  418657:	js     0x418643
  418659:	and    esp,0x73
  41865c:	jl     0x418605
  41865e:	nop
  41865f:	(bad)  
  418660:	out    0x43,al
  418662:	jg     0x4185e4
  418664:	mov    ch,0x4d
  418666:	pushf  
  418667:	add    eax,0x8aad7492
  41866c:	ja     0x418659
  41866e:	ret    
  41866f:	sub    al,BYTE PTR [edx+edi*1-0x69130daa]
  418676:	mov    fs,eax
  418678:	sub    DWORD PTR [ebx-0x7c2bce85],0xc39610ac
  418682:	imul   ecx,DWORD PTR [ecx+0xc],0x9b1d1854
  418689:	fisttp WORD PTR [eax]
  41868b:	inc    eax
  41868c:	cdq    
  41868d:	ins    DWORD PTR es:[edi],dx
  41868e:	and    dh,BYTE PTR [edx]
  418690:	or     ebx,ebp
  418692:	jnp    0x4186b9
  418694:	push   fs
  418696:	jl     0x418643
  418698:	cld    
  418699:	push   ss
  41869a:	popf   
  41869b:	ds pop es
  41869d:	and    DWORD PTR [ebx+0x1b],ebx
  4186a0:	ins    BYTE PTR es:[edi],dx
  4186a1:	push   0xffffffbb
  4186a3:	icebp  
  4186a4:	iret   
  4186a5:	xchg   BYTE PTR [eax],bl
  4186a7:	add    BYTE PTR [eax+0xacbf79e],0x2c
  4186ae:	add    eax,DWORD PTR [ecx+0x42]
  4186b1:	psraw  mm1,QWORD PTR [edx+0xd]
  4186b5:	xchg   ebp,eax
  4186b6:	mov    al,ds:0x4107b76d
  4186bb:	sub    al,0xb1
  4186bd:	ffreep st(6)
  4186bf:	dec    ebp
  4186c0:	push   ebp
  4186c1:	loopne 0x4186ec
  4186c3:	lds    edx,FWORD PTR [eax]
  4186c5:	in     eax,0x28
  4186c7:	cmp    ch,ah
  4186c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ca:	mov    bh,0x26
  4186cc:	jne    0x418686
  4186ce:	nop
  4186cf:	sti    
  4186d0:	repz mov esp,0x5b1b3f30
  4186d6:	add    BYTE PTR [ecx],0x1f
  4186d9:	inc    ebp
  4186da:	int3   
  4186db:	enter  0x1198,0xca
  4186df:	mov    bl,0x44
  4186e1:	xchg   edx,eax
  4186e2:	aaa    
  4186e3:	xchg   ebx,eax
  4186e4:	inc    edx
  4186e5:	in     al,dx
  4186e6:	lock xchg ecx,eax
  4186e8:	sub    edi,DWORD PTR [edx-0x3d]
  4186eb:	and    edx,edi
  4186ed:	fsubr  QWORD PTR [esi+0x136a9249]
  4186f3:	out    0x53,eax
  4186f5:	jmp    0x418693
  4186f7:	mov    cl,0xf0
  4186f9:	mov    esi,0x1d06734d
  4186fe:	in     al,dx
  4186ff:	pop    esi
  418700:	xchg   edx,eax
  418701:	sbb    eax,0x943857cc
  418706:	not    esi
  418708:	sub    eax,0xe3efce69
  41870d:	mov    ebx,0x9122807b
  418712:	test   al,0xbb
  418714:	xor    ebx,DWORD PTR [edi-0xb]
  418717:	mov    sp,0x7d50
  41871b:	sub    eax,0xfd04372e
  418720:	rcr    DWORD PTR [esi-0x49ddb7f9],0xb4
  418727:	cmp    bl,dh
  418729:	in     al,dx
  41872a:	pusha  
  41872b:	sbb    ch,BYTE PTR [esi+0x3725fe73]
  418731:	pop    ebp
  418732:	gs pop ds
  418734:	(bad)
  418737:	icebp  
  418738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418739:	add    DWORD PTR [ebx+0x2f0936d9],edx
  41873f:	push   esp
  418740:	xchg   BYTE PTR [ecx-0x4f],bl
  418743:	mov    ecx,0xd6711309
  418748:	stos   DWORD PTR es:[edi],eax
  418749:	xor    eax,0x86a61869
  41874e:	or     ebp,DWORD PTR [edx+edx*1+0x6fe39309]
  418755:	sar    DWORD PTR [edi],0xc1
  418758:	pop    edi
  418759:	push   cs
  41875a:	int3   
  41875b:	push   ecx
  41875c:	test   eax,0x2e060f81
  418761:	jle    0x4187cc
  418763:	sbb    BYTE PTR [eax+0x47],0xa5
  418767:	xor    BYTE PTR [ecx-0x13a44b38],cl
  41876d:	xor    DWORD PTR [eax-0x79],eax
  418770:	mov    al,0x5c
  418772:	iret   
  418773:	mov    al,ds:0x83655cff
  418778:	fs jns 0x41874b
  41877b:	sar    BYTE PTR [ecx+0x4d902fcd],cl
  418781:	sbb    al,0x6b
  418783:	clc    
  418784:	or     eax,0x8763026b
  418789:	sub    DWORD PTR [ebx],eax
  41878b:	jl     0x41879e
  41878d:	fsubr  QWORD PTR [ecx]
  41878f:	xchg   ecx,eax
  418790:	sbb    ebp,edi
  418792:	sahf   
  418793:	jg     0x4187e7
  418795:	xchg   ebp,eax
  418796:	int    0x59
  418798:	call   0x77171fcc
  41879d:	jno    0x418792
  41879f:	clc    
  4187a0:	push   ebp
  4187a1:	fucomip st,st(0)
  4187a3:	ss (bad) 
  4187a5:	mov    ah,0x7c
  4187a7:	dec    ebp
  4187a8:	cs scas al,BYTE PTR es:[edi]
  4187aa:	stos   DWORD PTR es:[edi],eax
  4187ab:	xor    BYTE PTR [edx-0xd20a2f4],0xbd
  4187b2:	clc    
  4187b3:	ficom  DWORD PTR [esp+ecx*2-0x5519e9c6]
  4187ba:	pop    ebx
  4187bb:	adc    al,0x21
  4187bd:	dec    ecx
  4187be:	pop    ecx
  4187bf:	loopne 0x418813
  4187c1:	popa   
  4187c2:	hlt    
  4187c3:	dec    edi
  4187c4:	cmp    edx,edx
  4187c6:	stc    
  4187c7:	fcmovnu st,st(5)
  4187c9:	mov    ch,0x46
  4187cb:	or     cl,bl
  4187cd:	lds    edx,FWORD PTR [ebp+0x4]
  4187d0:	cmp    DWORD PTR [ebp-0x72],edi
  4187d3:	ss sub ah,dl
  4187d6:	test   DWORD PTR [ebx-0x60],ecx
  4187d9:	lods   al,BYTE PTR ds:[esi]
  4187da:	call   0x2d6e:0x827429cd
  4187e1:	push   cs
  4187e2:	fist   WORD PTR [esi]
  4187e4:	sub    eax,0x33bd1146
  4187e9:	ror    DWORD PTR [ecx],1
  4187eb:	inc    ebx
  4187ec:	je     0x4187e9
  4187ee:	loope  0x418866
  4187f0:	repz repz retf 0x1930
  4187f5:	in     eax,0xb0
  4187f7:	push   0xffffffe8
  4187f9:	mov    dl,0xe2
  4187fb:	pop    esp
  4187fc:	daa    
  4187fd:	stc    
  4187fe:	or     al,0x0
  418800:	xor    BYTE PTR [eax-0x46],bh
  418803:	fisttp QWORD PTR [ecx+esi*2+0x77]
  418807:	sbb    BYTE PTR [edi-0x5b510108],dh
  41880d:	and    edi,DWORD PTR [edx]
  41880f:	add    DWORD PTR [ebp-0x39],0xffffffa2
  418813:	in     eax,dx
  418814:	sub    DWORD PTR [edx+0x6c],ebp
  418817:	mov    ds:0x15f429d6,eax
  41881c:	(bad)  
  41881d:	shl    BYTE PTR [eax+0x1],1
  418820:	xchg   BYTE PTR [edi+eax*2+0x36124e2e],dh
  418827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418828:	mov    ebx,fs
  41882a:	add    edx,edx
  41882c:	add    DWORD PTR [ebx],esi
  41882e:	jno    0x418894
  418830:	idiv   DWORD PTR [eax]
  418832:	push   ebp
  418833:	lods   eax,DWORD PTR ds:[esi]
  418834:	pop    ecx
  418835:	push   ss
  418836:	outs   dx,BYTE PTR ds:[esi]
  418837:	pop    edx
  418838:	inc    ecx
  418839:	lods   al,BYTE PTR ds:[esi]
  41883a:	(bad)  
  41883b:	mov    edx,0x173c7e58
  418840:	inc    esi
  418841:	mov    dl,0xe
  418843:	and    BYTE PTR [ebp+0x56],al
  418846:	shr    DWORD PTR [edi+0x5e75881d],cl
  41884c:	sar    DWORD PTR [ebp+0x65eca4e2],0x17
  418853:	rcr    BYTE PTR [ecx-0x15],0x21
  418857:	fs push esi
  418859:	inc    edx
  41885a:	loopne 0x418825
  41885c:	dec    edi
  41885d:	dec    ebx
  41885e:	inc    esp
  41885f:	hlt    
  418860:	pop    esi
  418861:	xchg   esp,eax
  418862:	jbe    0x418811
  418864:	sar    cl,1
  418866:	enter  0x7815,0xfe
  41886a:	sbb    BYTE PTR [ecx],0xbe
  41886d:	fcom   DWORD PTR [edi-0x1a]
  418870:	loop   0x4188d7
  418872:	imul   esi,ebx,0x26
  418875:	mov    eax,ds:0x55f282c4
  41887a:	dec    ebx
  41887b:	stos   DWORD PTR es:[edi],eax
  41887c:	test   al,0xe5
  41887e:	inc    esp
  41887f:	add    eax,edi
  418881:	(bad)  
  418882:	fstp   DWORD PTR [edi-0xe]
  418885:	loop   0x4188ef
  418887:	pusha  
  418888:	pop    ebp
  418889:	ret    
  41888a:	dec    eax
  41888b:	sbb    eax,0x2740755d
  418890:	and    BYTE PTR [edx+eax*8+0x18720384],al
  418897:	cmp    BYTE PTR [ebp-0x79c51822],ch
  41889d:	dec    esp
  41889e:	jge    0x418919
  4188a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a1:	cmc    
  4188a2:	cmp    eax,0xda7de4ec
  4188a7:	out    0x8e,al
  4188a9:	leave  
  4188aa:	shl    ebp,0x7e
  4188ad:	fwait
  4188ae:	adc    DWORD PTR [esi-0x49dda284],0x71
  4188b5:	sbb    ebx,esp
  4188b7:	fwait
  4188b8:	inc    ebp
  4188b9:	jp     0x418908
  4188bb:	imul   edi,DWORD PTR [eax+ecx*4-0x5d89755a],0x88a3bdea
  4188c6:	in     eax,dx
  4188c7:	mov    esi,0xc8b5360f
  4188cc:	(bad)  
  4188cd:	pop    ds
  4188ce:	and    eax,DWORD PTR [esi+0x1b]
  4188d1:	or     edi,DWORD PTR [edx+0x51]
  4188d4:	lahf   
  4188d5:	lock jbe 0x4188e6
  4188d8:	mov    eax,ds:0xb49a0e39
  4188dd:	loope  0x4188b9
  4188df:	sub    eax,0x6d1c8826
  4188e4:	jg     0x418958
  4188e6:	adc    dl,al
  4188e8:	push   esp
  4188e9:	jb     0x418923
  4188eb:	(bad)  
  4188ed:	push   ecx
  4188ee:	dec    ecx
  4188ef:	xor    eax,0xe82d91c3
  4188f4:	mov    ecx,0x639e1d82
  4188f9:	out    dx,eax
  4188fa:	cli    
  4188fb:	push   eax
  4188fc:	xor    BYTE PTR [ebx+0x20],0x57
  418900:	addr16 or eax,0x7fbc59fb
  418906:	sbb    ch,ch
  418908:	dec    ebx
  418909:	or     esi,eax
  41890b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41890c:	sbb    ecx,eax
  41890e:	mov    al,0x7a
  418910:	mov    eax,ds:0x68a5f721
  418915:	inc    ebp
  418916:	xor    esp,DWORD PTR [ecx+0x21]
  418919:	pushf  
  41891a:	adc    BYTE PTR [edx+ebp*2+0xcc3dc73],0xf9
  418922:	sub    al,0xd1
  418924:	nop
  418925:	push   es
  418926:	sti    
  418927:	cmp    eax,0xad970c3b
  41892c:	pop    eax
  41892d:	cld    
  41892e:	cli    
  41892f:	scas   eax,DWORD PTR es:[edi]
  418930:	in     eax,dx
  418931:	sub    al,0x2b
  418933:	into   
  418934:	shl    dh,1
  418936:	aam    0xdd
  418938:	popf   
  418939:	stc    
  41893a:	retf   0x5053
  41893d:	cmp    ch,BYTE PTR [ecx+0x41dfde31]
  418943:	and    al,al
  418945:	call   0x3ff82042
  41894a:	test   al,0x17
  41894c:	outs   dx,BYTE PTR ds:[esi]
  41894d:	or     DWORD PTR [ebx+ebx*1+0x5de0a101],esi
  418954:	dec    edx
  418955:	jbe    0x4188e1
  418957:	(bad)  
  418958:	mov    bl,0xdf
  41895a:	push   ss
  41895b:	ss loop 0x418933
  41895e:	popf   
  41895f:	in     al,0x8b
  418961:	sahf   
  418962:	bound  ecx,QWORD PTR ds:0xb631e4df
  418968:	mov    BYTE PTR [esi+edx*2-0x2d],ch
  41896c:	sbb    DWORD PTR [eax+0x38],esp
  41896f:	enter  0x3c80,0x1a
  418973:	jg     0x418953
  418975:	xchg   ebp,eax
  418976:	mov    edi,0xb55dc902
  41897b:	in     al,0xe7
  41897d:	pop    edx
  41897e:	or     ecx,DWORD PTR [ecx+0x6f91c16e]
  418984:	(bad)  
  418985:	xchg   BYTE PTR [edi+eiz*4],bl
  418988:	call   0xa4f4:0xa652034b
  41898f:	sti    
  418990:	xchg   esp,eax
  418991:	pop    ebx
  418992:	xor    edi,DWORD PTR ds:0xf21346b
  418998:	and    eax,0xba3ea6d7
  41899d:	fnstenv [ebx]
  41899f:	mov    ebp,DWORD PTR [ebx+0x4923af7e]
  4189a5:	test   BYTE PTR [edx+0x5c],ch
  4189a8:	sahf   
  4189a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189aa:	in     al,dx
  4189ab:	inc    ebp
  4189ac:	xchg   ebp,eax
  4189ad:	sar    DWORD PTR fs:[ebx+eiz*4-0x23],1
  4189b2:	add    BYTE PTR cs:[eax+0x323fe56a],ch
  4189b9:	or     eax,0xc812852b
  4189be:	mov    ecx,gs
  4189c0:	out    0xbd,eax
  4189c2:	sbb    eax,DWORD PTR [esi-0x38]
  4189c5:	mov    eax,0xf1427f13
  4189ca:	out    dx,al
  4189cb:	jmp    0xaa1b:0xa7d4d3cb
  4189d2:	icebp  
  4189d3:	mov    ch,BYTE PTR [ecx]
  4189d5:	or     ebx,DWORD PTR [ecx-0x2c]
  4189d8:	sub    BYTE PTR [edx+ecx*8+0x10],ch
  4189dc:	ror    BYTE PTR [ecx],cl
  4189de:	repz test al,0xe6
  4189e1:	add    dl,BYTE PTR [eax-0x3a325098]
  4189e7:	pop    edi
  4189e8:	or     edi,DWORD PTR [esi+0x7ee8dc6]
  4189ee:	adc    eax,0xa668ef41
  4189f3:	xor    DWORD PTR [edx+edx*8+0x1692d638],ebp
  4189fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189fb:	mov    ds:0x35519f05,eax
  418a00:	inc    edx
  418a01:	mov    ebp,0x20de8b46
  418a06:	mov    esi,0x84ff5fe
  418a0b:	jb     0x418a42
  418a0d:	mov    ebx,DWORD PTR [edx-0x4e412ad]
  418a13:	jmp    0xc4e517fa
  418a18:	(bad)  
  418a1a:	mov    ah,0xf1
  418a1c:	icebp  
  418a1d:	cmp    esi,DWORD PTR [edi-0x250d76a6]
  418a23:	or     ah,BYTE PTR [edx]
  418a25:	daa    
  418a26:	push   ecx
  418a27:	push   ds
  418a28:	sub    ebx,ebp
  418a2a:	xor    al,ch
  418a2c:	ja     0x4189e5
  418a2e:	and    edi,DWORD PTR [ebp+edx*8-0x3260aaba]
  418a35:	imul   esi,DWORD PTR [eax+0x4c],0x67
  418a39:	fwait
  418a3a:	lods   al,BYTE PTR ds:[esi]
  418a3b:	or     BYTE PTR [eax-0x64],dl
  418a3e:	rcl    DWORD PTR [edx],1
  418a40:	cmp    DWORD PTR [ecx+0x19],ebp
  418a43:	and    DWORD PTR [eax+0x600ec2c2],ebp
  418a49:	rcl    DWORD PTR [esi],0xab
  418a4c:	mov    dl,0x6a
  418a4e:	stc    
  418a4f:	or     eax,0xf4c6b442
  418a54:	jb     0x418ace
  418a56:	test   DWORD PTR [ebx+eax*4+0x12bf76c3],0xe3315eda
  418a61:	dec    ecx
  418a62:	sbb    DWORD PTR [edx+esi*2+0x480c3241],edi
  418a69:	ins    BYTE PTR es:[edi],dx
  418a6a:	mov    eax,ds:0xde91d07c
  418a6f:	xchg   edx,eax
  418a70:	mov    al,ds:0x3582c2c7
  418a75:	(bad)  
  418a77:	xchg   ebp,eax
  418a78:	das    
  418a79:	in     eax,dx
  418a7a:	jb     0x418ac2
  418a7c:	mov    eax,0x7603d9b4
  418a81:	mov    ds:0x6392af53,eax
  418a86:	pop    eax
  418a87:	imul   ecx,esp,0xa07d9388
  418a8d:	(bad)  
  418a8e:	rcl    DWORD PTR [eax-0x64347b3],1
  418a94:	mov    eax,DWORD PTR [esi+0x40]
  418a97:	sub    WORD PTR [ebp-0x20],ax
  418a9b:	(bad)  
  418a9c:	cdq    
  418a9d:	or     al,0xee
  418a9f:	cld    
  418aa0:	and    bx,bx
  418aa3:	imul   edx,esp,0x7b
  418aa6:	in     eax,0x15
  418aa8:	loopne 0x418ae8
  418aaa:	mov    eax,0x75c691d2
  418aaf:	pop    eax
  418ab0:	xor    BYTE PTR [edx],ah
  418ab2:	leave  
  418ab3:	xchg   esi,eax
  418ab4:	push   edx
  418ab5:	jmp    0x3810d18e
  418aba:	int    0xdd
  418abc:	push   0xf6567121
  418ac1:	xchg   edx,eax
  418ac2:	out    0xad,al
  418ac4:	or     esp,eax
  418ac6:	or     al,BYTE PTR [ecx-0x3c]
  418ac9:	cwde   
  418aca:	lea    edx,[edx-0x5f9ab14a]
  418ad0:	jg     0x418a7a
  418ad2:	mov    dl,al
  418ad4:	jbe    0x418aea
  418ad6:	fidivr WORD PTR [ecx]
  418ad8:	pop    edx
  418ad9:	or     al,BYTE PTR [ecx]
  418adb:	inc    edx
  418adc:	xchg   ebx,eax
  418add:	sub    eax,0x9c60cb31
  418ae2:	dec    edx
  418ae3:	jp     0x418a78
  418ae5:	sub    edi,DWORD PTR [ecx]
  418ae7:	ret    
  418ae8:	aas    
  418ae9:	cmp    al,0xb8
  418aeb:	fistp  DWORD PTR [ebp-0x79]
  418aee:	mov    ebp,0x7ab399ff
  418af3:	sub    BYTE PTR [eax+0x4],ah
  418af6:	jl     0x418afd
  418af8:	mov    bl,0x2f
  418afa:	shl    BYTE PTR [edi+0x30],cl
  418afd:	adc    eax,0x8ff25ef6
  418b02:	pop    edx
  418b03:	stos   DWORD PTR es:[edi],eax
  418b04:	inc    ebx
  418b05:	xor    BYTE PTR [eax+0x187f62e0],0x6c
  418b0c:	cli    
  418b0d:	push   ds
  418b0e:	inc    edi
  418b0f:	mov    cl,0xa9
  418b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b12:	(bad)  
  418b13:	aad    0xd8
  418b15:	push   esi
  418b16:	(bad)  
  418b17:	stos   BYTE PTR es:[edi],al
  418b18:	(bad)  
  418b19:	jae    0x418b20
  418b1b:	fnsave [eax-0x27]
  418b1e:	jp     0x418b4b
  418b20:	mov    ch,0x57
  418b22:	(bad)  
  418b23:	adc    esp,DWORD PTR [esi]
  418b25:	aad    0x75
  418b27:	sub    eax,0xf48234ea
  418b2c:	push   ecx
  418b2d:	stc    
  418b2e:	aam    0x7f
  418b30:	sub    DWORD PTR [edx-0x80],esp
  418b33:	inc    ecx
  418b34:	inc    ebx
  418b35:	jne    0x418abe
  418b37:	sbb    al,0xcf
  418b39:	jmp    0x418b87
  418b3b:	ins    BYTE PTR es:[edi],dx
  418b3c:	adc    BYTE PTR [ebx],dh
  418b3e:	sub    al,0x56
  418b40:	ja     0x418bb4
  418b42:	sub    ebp,ebx
  418b44:	shl    BYTE PTR ds:0xeddf4b85,0xec
  418b4b:	mov    cl,dh
  418b4d:	out    dx,al
  418b4e:	popa   
  418b4f:	je     0x418b1e
  418b51:	outs   dx,BYTE PTR ds:[esi]
  418b52:	lock cld 
  418b54:	mov    WORD PTR [ebx+0x2d],fs
  418b57:	sub    DWORD PTR [eax],ecx
  418b59:	ret    0xcc0b
  418b5c:	push   ebp
  418b5d:	test   eax,0x6d3e418b
  418b62:	aaa    
  418b63:	push   es
  418b64:	imul   edx,DWORD PTR [edi],0x525c331d
  418b6a:	imul   edi,DWORD PTR [edi-0x25],0xffffffb7
  418b6e:	pop    ss
  418b6f:	aas    
  418b70:	sbb    BYTE PTR [edx+0x46d6702f],bh
  418b76:	leave  
  418b77:	or     eax,0xb86abc1b
  418b7c:	lods   eax,DWORD PTR ds:[esi]
  418b7d:	enter  0x4797,0xaf
  418b81:	mov    ds:0xd0a772af,al
  418b86:	adc    BYTE PTR [edx+0xc6fdef],0x6f
  418b8d:	sahf   
  418b8e:	repnz es adc ch,dh
  418b92:	push   0x1e
  418b94:	jbe    0x418b29
  418b96:	mov    edx,0x2137f566
  418b9b:	push   es
  418b9c:	hlt    
  418b9d:	mov    esi,0xe0d8f590
  418ba2:	outs   dx,DWORD PTR ds:[esi]
  418ba3:	mov    bh,0x36
  418ba5:	sub    BYTE PTR [edi-0x1d],dh
  418ba8:	sbb    al,0xbf
  418baa:	aad    0x47
  418bac:	xlat   BYTE PTR ds:[ebx]
  418bad:	cmp    DWORD PTR [eax],ebp
  418baf:	test   BYTE PTR ds:0x18712f55,al
  418bb5:	mov    dl,0x11
  418bb7:	stc    
  418bb8:	inc    esi
  418bb9:	xor    edx,DWORD PTR [edi+0x62]
  418bbc:	push   ds
  418bbd:	mov    ch,0xaa
  418bbf:	jnp    0x418b50
  418bc1:	xor    dl,BYTE PTR [esi+0x635cf55b]
  418bc7:	je     0x418ba9
  418bc9:	vpackuswb xmm3{k3},xmm0,DWORD PTR [eax]{1to4}
  418bcf:	push   esp
  418bd0:	fisub  WORD PTR ds:0x99638bd8
  418bd6:	or     al,0xe4
  418bd8:	cld    
  418bd9:	sub    al,0x69
  418bdb:	mov    edx,0x85829755
  418be0:	mov    esp,0x406766ab
  418be5:	ret    0x2bdb
  418be8:	sbb    eax,0x4a1ea25d
  418bed:	mov    eax,ds:0x3078d906
  418bf2:	sub    eax,0x6e47bd83
  418bf7:	ja     0x418c76
  418bf9:	jb     0x418c00
  418bfb:	cld    
  418bfc:	sub    al,0x3e
  418bfe:	mov    edi,DWORD PTR [edi+0x52e9e02b]
  418c04:	ror    DWORD PTR [esi+0x4ac90ae4],cl
  418c0a:	add    DWORD PTR ds:0x860a8b20,edx
  418c10:	cmp    DWORD PTR [eax+edi*4+0x46a5fdc0],ecx
  418c17:	scas   eax,DWORD PTR es:[edi]
  418c18:	mov    dl,0x4
  418c1a:	pop    ecx
  418c1b:	jl     0x418bde
  418c1d:	imul   ecx
  418c1f:	push   esi
  418c20:	clc    
  418c21:	cmp    DWORD PTR [esi+0xf],ebx
  418c24:	xchg   al,ah
  418c26:	pop    ecx
  418c27:	adc    BYTE PTR [esi],bh
  418c29:	cld    
  418c2a:	aam    0xbc
  418c2c:	repz pop ebp
  418c2e:	aas    
  418c2f:	pop    ebx
  418c30:	push   ds
  418c31:	adc    DWORD PTR [eax+0x74bbadc],0xfffffff7
  418c38:	inc    esp
  418c39:	add    al,0x69
  418c3b:	jmp    0x48a8c20f
  418c40:	ret    
  418c41:	outs   dx,BYTE PTR ds:[esi]
  418c42:	aam    0x6a
  418c44:	push   cs
  418c45:	or     DWORD PTR [eax-0x74],esp
  418c48:	pop    es
  418c49:	xor    al,BYTE PTR [eax+edi*2+0x31]
  418c4d:	pop    edi
  418c4e:	sub    DWORD PTR [eax-0x4fd37e86],0x66c5d524
  418c58:	aas    
  418c59:	cmp    BYTE PTR [ebx],ah
  418c5b:	(bad)  
  418c5c:	jne    0x418cb6
  418c5e:	pop    ss
  418c5f:	loopne 0x418c6b
  418c61:	lock rol al,cl
  418c64:	out    dx,al
  418c65:	sub    eax,0x8d7e5530
  418c6a:	loope  0x418c80
  418c6c:	inc    eax
  418c6d:	sbb    DWORD PTR [esi],edi
  418c6f:	fwait
  418c70:	imul   edx,ecx,0xedf616f2
  418c76:	jbe    0x418cc2
  418c78:	jecxz  0x418cbc
  418c7a:	mov    al,ds:0x8ba35bc7
  418c7f:	mov    dl,BYTE PTR [edi+0x30589276]
  418c85:	inc    DWORD PTR [edx-0x5702d928]
  418c8b:	cwde   
  418c8c:	clc    
  418c8d:	and    al,0x4a
  418c8f:	push   es
  418c90:	pop    eax
  418c91:	fild   WORD PTR ds:0x4e26e8dd
  418c97:	gs pop ss
  418c99:	fisttp DWORD PTR ds:0xd13ce044
  418c9f:	scas   al,BYTE PTR es:[edi]
  418ca0:	hlt    
  418ca1:	je     0x418c93
  418ca3:	add    al,0x9b
  418ca5:	ret    0xed58
  418ca8:	fdivr  DWORD PTR [edx]
  418caa:	mov    ds:0xa4be076d,al
  418caf:	dec    ebx
  418cb0:	rcr    dl,cl
  418cb2:	pop    ds
  418cb3:	gs and al,0xa3
  418cb6:	outs   dx,DWORD PTR ds:[esi]
  418cb7:	imul   ebp,DWORD PTR [ecx],0xf43ca9ad
  418cbd:	pop    es
  418cbe:	iret   
  418cbf:	mov    bh,0x2e
  418cc1:	push   esi
  418cc2:	push   cs
  418cc3:	inc    BYTE PTR [ecx-0x7a]
  418cc6:	and    al,0x23
  418cc8:	mov    fs,edi
  418cca:	stos   BYTE PTR es:[edi],al
  418ccb:	xor    edi,DWORD PTR [ebp+0x1a2c18e6]
  418cd1:	scas   eax,DWORD PTR es:[edi]
  418cd2:	jmp    0x4864:0x1622fb7e
  418cd9:	add    al,0x37
  418cdb:	nop
  418cdc:	and    DWORD PTR [ebx],esp
  418cde:	mov    ds:0xea242a0f,eax
  418ce3:	sbb    esi,edi
  418ce5:	pop    esi
  418ce6:	(bad)  
  418ce7:	mov    ds:0x1b6ac6ac,eax
  418cec:	sub    BYTE PTR [ebx],ch
  418cee:	xchg   ecx,eax
  418cef:	jmp    0x418d5b
  418cf1:	adc    al,0x59
  418cf3:	push   ss
  418cf4:	iret   
  418cf5:	or     DWORD PTR [eax-0x7130bfa],esp
  418cfb:	cdq    
  418cfc:	retf   0xb82
  418cff:	xchg   ebp,eax
  418d00:	mov    WORD PTR [esi],gs
  418d02:	jle    0x418cd2
  418d04:	test   al,0x51
  418d06:	inc    ebp
  418d07:	es xor al,0x33
  418d0a:	stos   DWORD PTR es:[edi],eax
  418d0b:	fimul  DWORD PTR [ebx+edi*8-0x2da89dc8]
  418d12:	test   eax,0xc4c1cc69
  418d17:	xor    DWORD PTR [esp+ebp*1-0x341aa887],esp
  418d1e:	mov    BYTE PTR [esi-0x52],ah
  418d21:	jecxz  0x418d4e
  418d23:	sub    DWORD PTR [edi],esp
  418d25:	push   esp
  418d26:	jmp    0xf76b0761
  418d2b:	mov    WORD PTR [edi-0x69],gs
  418d2e:	sbb    eax,0x684dfaef
  418d33:	sub    DWORD PTR [edi],esp
  418d35:	xor    edx,DWORD PTR [ebx]
  418d37:	cmp    DWORD PTR [ebx+esi*8],esi
  418d3a:	mov    dh,0x45
  418d3c:	inc    edx
  418d3d:	stos   DWORD PTR es:[edi],eax
  418d3e:	push   ds
  418d3f:	das    
  418d40:	mov    ds:0xb29970d1,al
  418d45:	shr    dl,cl
  418d47:	mov    edi,0x36de3850
  418d4c:	pop    ecx
  418d4d:	sub    al,0x57
  418d4f:	adc    eax,0x74e33927
  418d54:	sub    eax,0xc7b43514
  418d59:	(bad)  
  418d5a:	cs loop 0x418dd6
  418d5d:	stos   BYTE PTR es:[edi],al
  418d5e:	push   esp
  418d5f:	pop    ebx
  418d60:	test   eax,0x8713e363
  418d65:	jp     0x418d2a
  418d67:	or     al,0xda
  418d69:	aaa    
  418d6a:	xchg   ebp,eax
  418d6b:	rcr    BYTE PTR [eax+0x69bbbe1a],cl
  418d71:	shr    BYTE PTR [eax],0xb4
  418d74:	xchg   ebp,eax
  418d75:	das    
  418d76:	shr    BYTE PTR [edx-0x5d],cl
  418d79:	pop    edi
  418d7a:	sar    BYTE PTR [ebp+ecx*2-0x5d],1
  418d7e:	or     BYTE PTR [ecx+ecx*2],dl
  418d81:	jno    0x418d4b
  418d83:	(bad)  
  418d84:	dec    esp
  418d85:	jmpw   0x2209
  418d89:	push   ss
  418d8a:	add    DWORD PTR [ebx+0x7c],esp
  418d8d:	jmp    0xcc5c:0x97c5cdde
  418d94:	mov    bh,0xee
  418d96:	call   DWORD PTR [ebx+0x18]
  418d99:	repz and esi,ebx
  418d9c:	sub    BYTE PTR [eax-0x49],0x55
  418da0:	je     0x418e1e
  418da2:	mov    bh,0x7e
  418da4:	pop    ecx
  418da5:	inc    edi
  418da6:	jg     0x418e25
  418da8:	cmp    DWORD PTR [ebx+0x672dff6d],edx
  418dae:	jecxz  0x418d47
  418db0:	dec    DWORD PTR [edi]
  418db2:	aam    0xb3
  418db4:	jmp    0xaac0:0xc73e9a5d
  418dbb:	push   ebx
  418dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dbd:	add    dh,BYTE PTR [esi+0x7b]
  418dc0:	out    dx,al
  418dc1:	out    dx,al
  418dc2:	sub    al,0x5a
  418dc4:	icebp  
  418dc5:	retf   
  418dc6:	mov    ch,0xa1
  418dc8:	jns    0x418dbe
  418dca:	pushw  ds
  418dcc:	ss jnp 0x418e12
  418dcf:	dec    eax
  418dd0:	in     eax,dx
  418dd1:	ror    BYTE PTR [eax-0x30cd0f79],cl
  418dd7:	das    
  418dd8:	mov    cl,0x4f
  418dda:	aas    
  418ddb:	mov    esi,0xfc2cba95
  418de0:	mov    edi,0x2a05eb4a
  418de5:	mov    ecx,ecx
  418de7:	pop    es
  418de8:	inc    ebp
  418de9:	or     BYTE PTR cs:[edi-0x2327ffb2],dh
  418df0:	int3   
  418df1:	push   ds
  418df2:	arpl   WORD PTR [eax+0x1be95a8e],sp
  418df8:	push   cs
  418df9:	sub    al,0x72
  418dfb:	leave  
  418dfc:	xchg   DWORD PTR [ebx],eax
  418dfe:	adc    BYTE PTR [edx+0x3c2cb9b7],al
  418e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e05:	or     eax,0x3f28832f
  418e0a:	fwait
  418e0b:	dec    ecx
  418e0c:	dec    esi
  418e0d:	loop   0x418e2d
  418e0f:	push   ds
  418e10:	outs   dx,DWORD PTR ds:[esi]
  418e11:	repz pop esp
  418e13:	iret   
  418e14:	xchg   esp,eax
  418e15:	inc    ecx
  418e16:	test   al,0xbb
  418e18:	je     0x418e39
  418e1a:	ins    DWORD PTR es:[edi],dx
  418e1b:	xor    al,0x18
  418e1d:	cmp    DWORD PTR [esi+0x4],ebx
  418e20:	mov    cl,0x48
  418e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e23:	push   ecx
  418e24:	int3   
  418e25:	mov    ds:0x362056af,eax
  418e2a:	mov    esi,0x67824392
  418e2f:	outs   dx,DWORD PTR ds:[esi]
  418e30:	xchg   edi,eax
  418e31:	cmc    
  418e32:	div    ecx
  418e34:	mov    BYTE PTR [edx-0x3cb1e9dc],cl
  418e3a:	cmp    edx,DWORD PTR [esi*1+0x2c48974c]
  418e41:	jle    0x418e13
  418e43:	sub    dl,0xd7
  418e46:	dec    edi
  418e47:	cmp    DWORD PTR [edx+0xc882a60],eax
  418e4d:	popa   
  418e4e:	xor    BYTE PTR [ebp+eax*8-0x5264712a],0x4e
  418e56:	mov    cl,0x10
  418e58:	fidiv  DWORD PTR [ebx-0x13]
  418e5b:	lea    eax,[ebx]
  418e5d:	sbb    ecx,DWORD PTR [edx-0x57]
  418e60:	pop    eax
  418e61:	mov    al,0x8f
  418e63:	call   0xb75abb31
  418e68:	int    0x63
  418e6a:	jl     0x418ec5
  418e6c:	repnz lods eax,DWORD PTR ds:[esi]
  418e6e:	scas   al,BYTE PTR es:[edi]
  418e6f:	push   es
  418e70:	pop    edi
  418e71:	add    DWORD PTR [eax-0x6d920dba],edi
  418e77:	outs   dx,DWORD PTR ds:[esi]
  418e78:	rcl    BYTE PTR [ebp+0xdd6108f],0x7d
  418e7f:	cli    
  418e80:	sub    al,0x2a
  418e82:	xchg   edi,eax
  418e83:	push   ss
  418e84:	jns    0x418e35
  418e86:	pop    ebp
  418e87:	add    al,0xce
  418e89:	dec    esi
  418e8a:	and    eax,0x9b0223e2
  418e8f:	mov    bl,0xc
  418e91:	ret    0x8b85
  418e94:	jg     0x418e83
  418e96:	clc    
  418e97:	dec    ebx
  418e98:	push   esp
  418e99:	cli    
  418e9a:	std    
  418e9b:	mov    esi,0x31368d1b
  418ea0:	inc    esi
  418ea1:	adc    edx,DWORD PTR [edi+0x5b420055]
  418ea7:	jge    0x418eed
  418ea9:	enter  0x232b,0xa2
  418ead:	mov    bl,BYTE PTR [esi]
  418eaf:	xchg   DWORD PTR [ecx],esi
  418eb1:	push   esp
  418eb2:	jge    0x418edf
  418eb4:	call   0x388373fa
  418eb9:	jns    0x418e8c
  418ebb:	ins    DWORD PTR es:[edi],dx
  418ebc:	pop    ecx
  418ebd:	xor    ecx,DWORD PTR [esi-0xd3d6785]
  418ec3:	daa    
  418ec4:	ret    0x4dc3
  418ec7:	and    BYTE PTR [ebp-0x3b3d0903],ah
  418ecd:	adc    ah,BYTE PTR [ebp+0x2f]
  418ed0:	jle    0x418ec7
  418ed2:	jno    0x418f21
  418ed4:	inc    esi
  418ed5:	inc    esi
  418ed6:	mov    al,0x59
  418ed8:	adc    eax,0xf23094bc
  418edd:	pop    edx
  418ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418edf:	or     al,0xe9
  418ee1:	inc    esp
  418ee2:	scas   al,BYTE PTR es:[edi]
  418ee3:	loopne 0x418f59
  418ee5:	xor    DWORD PTR [eax],ecx
  418ee7:	and    DWORD PTR [edi-0x8e0140f],edx
  418eed:	xchg   bl,dl
  418eef:	stos   DWORD PTR es:[edi],eax
  418ef0:	fisub  DWORD PTR [edi+0x6c7744a6]
  418ef6:	retf   
  418ef7:	mov    ch,0x47
  418ef9:	mov    bl,0xf6
  418efb:	adc    BYTE PTR [ebp-0x12],0x72
  418eff:	add    eax,0xcbfc1548
  418f04:	add    DWORD PTR [ebx-0x65],eax
  418f07:	xor    ecx,DWORD PTR [edi+eiz*8+0x1d]
  418f0b:	jle    0x418efd
  418f0d:	add    esp,DWORD PTR [edi]
  418f0f:	(bad)  
  418f12:	in     eax,0x10
  418f14:	and    al,0x9c
  418f16:	jle    0x418f3d
  418f18:	(bad)  
  418f19:	popa   
  418f1a:	out    dx,eax
  418f1b:	mov    cl,0xd8
  418f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f1e:	cmp    BYTE PTR [eax],ch
  418f20:	imul   esi,DWORD PTR [esi+0x49],0x7fa91efb
  418f27:	and    al,cl
  418f29:	sub    al,0x69
  418f2b:	call   0xa241aea2
  418f30:	mov    ds:0xa0661fd2,al
  418f35:	push   ecx
  418f36:	mov    ds:0x2a239e97,eax
  418f3b:	sbb    dh,BYTE PTR [edi-0x6e6860f3]
  418f41:	stc    
  418f42:	jae    0x418f07
  418f44:	fidivr WORD PTR [eax-0x7e]
  418f47:	(bad)  
  418f48:	call   0xc29a3e74
  418f4d:	int    0xc7
  418f4f:	mov    ds:0x4e333e5,eax
  418f54:	xchg   bl,dh
  418f56:	xchg   ecx,eax
  418f57:	push   eax
  418f58:	fcomp  QWORD PTR [edx+0x545d0c48]
  418f5e:	sti    
  418f5f:	push   ss
  418f60:	aaa    
  418f61:	out    0xdd,eax
  418f63:	lods   eax,DWORD PTR ds:[esi]
  418f64:	and    eax,0x5bee8e8c
  418f69:	ja     0x418f27
  418f6b:	pop    ecx
  418f6c:	mov    ah,0xe4
  418f6e:	stc    
  418f6f:	bound  esp,QWORD PTR [ebp+0x28]
  418f72:	sbb    al,al
  418f74:	or     edx,esp
  418f76:	adc    al,0x7e
  418f78:	jno    0x418f81
  418f7a:	arpl   WORD PTR [edx],bx
  418f7c:	inc    edi
  418f7d:	imul   esi,DWORD PTR [ecx+edx*2],0x42
  418f81:	cmp    eax,0x8ac620ae
  418f86:	add    BYTE PTR [esp+edi*8],dl
  418f89:	jns    0x418f31
  418f8b:	rol    BYTE PTR [ebx],0x6e
  418f8e:	int3   
  418f8f:	stos   DWORD PTR es:[edi],eax
  418f90:	std    
  418f91:	pop    edx
  418f92:	jg     0x418fe8
  418f94:	daa    
  418f95:	mov    edx,0xbbeefed8
  418f9a:	inc    esi
  418f9b:	or     dl,BYTE PTR [ebx-0x144569c0]
  418fa1:	mov    dh,0xf9
  418fa3:	mov    ebp,0xa9bed104
  418fa8:	aad    0xe2
  418faa:	xchg   edi,eax
  418fab:	jmp    0x8b8249fb
  418fb0:	xor    DWORD PTR [eax+0x37],ebx
  418fb3:	jmp    0xbc681613
  418fb8:	sbb    DWORD PTR [ecx+0x56],ebx
  418fbb:	sbb    al,0x4f
  418fbd:	xor    dh,bh
  418fbf:	mov    bh,0xb0
  418fc1:	aaa    
  418fc2:	cmp    dl,bl
  418fc4:	add    BYTE PTR [ecx],0x87
  418fc7:	jmp    edi
  418fc9:	add    dh,ah
  418fcb:	mov    DWORD PTR [eax],eax
  418fcd:	pop    ecx
  418fce:	jmp    FWORD PTR [esi-0x3f]
  418fd1:	pushf  
  418fd2:	push   es
  418fd3:	addr16 inc bl
  418fd6:	mov    gs,esp
  418fd8:	ds sbb eax,0xefe9aa7d
  418fde:	ja     0x41903b
  418fe0:	xchg   esp,eax
  418fe1:	popf   
  418fe2:	pop    ss
  418fe3:	sub    edi,edi
  418fe5:	lahf   
  418fe6:	hlt    
  418fe7:	lea    eax,[eax+eax*1+0x6ba5096]
  418fee:	addr16 mul ch
  418ff1:	mov    cl,0xf6
  418ff3:	aas    
  418ff4:	jns    0x418fcd
  418ff6:	cmp    eax,0xcfe28ce1
  418ffb:	aaa    
  418ffc:	cmp    BYTE PTR [edi-0x425a3ba5],ah
  419002:	cdq    
  419003:	xor    al,0x58
  419005:	dec    ebx
  419006:	jmp    0xc5f9468a
  41900b:	scas   al,BYTE PTR es:[edi]
  41900c:	add    edi,eax
  41900e:	xor    al,0x1c
  419010:	fwait
  419011:	mov    ecx,0x795bc12f
  419016:	aas    
  419017:	xor    al,0xfc
  419019:	mov    bl,0x63
  41901b:	mov    dh,0xfc
  41901d:	jne    0x419038
  41901f:	fnstenv [ecx+0xd]
  419022:	inc    dl
  419024:	(bad)  
  419025:	cmp    al,0xa5
  419027:	mov    bh,0xe3
  419029:	sbb    eax,0xb4062bb6
  41902e:	aas    
  41902f:	fsub   DWORD PTR ds:[eax+0x2e2091e1]
  419036:	lahf   
  419037:	pop    ss
  419038:	pusha  
  419039:	stos   DWORD PTR es:[edi],eax
  41903a:	inc    eax
  41903b:	mov    edi,0x9d2a5112
  419040:	clc    
  419041:	jae    0x418fc4
  419043:	pop    ss
  419044:	cld    
  419045:	retf   
  419046:	push   ebx
  419047:	dec    esi
  419048:	inc    ecx
  419049:	mov    ?,ebp
  41904b:	push   ebx
  41904c:	frstor [eax-0x31]
  41904f:	(bad)  
  419051:	int    0x2f
  419053:	out    dx,al
  419054:	pop    ss
  419055:	ja     0x41909f
  419057:	xchg   ebp,eax
  419058:	rol    BYTE PTR [esi+0x24],cl
  41905b:	xchg   edi,eax
  41905c:	aaa    
  41905d:	clc    
  41905e:	lock cmp bl,BYTE PTR [eax]
  419061:	leave  
  419062:	inc    eax
  419063:	int    0xea
  419065:	mov    edx,0xb8747010
  41906a:	mov    eax,0xaa35e1b9
  41906f:	aaa    
  419070:	bound  ecx,QWORD PTR [eax]
  419072:	jmp    0xea191031
  419077:	hlt    
  419078:	dec    edi
  419079:	xor    al,0xde
  41907b:	pop    ebx
  41907c:	xor    dh,dh
  41907e:	mov    ds,WORD PTR [ecx]
  419080:	mov    ebx,0xe12ad0b3
  419085:	or     BYTE PTR [ebx],dh
  419087:	mov    cs,WORD PTR [ecx-0x387fcb3c]
  41908d:	(bad)  
  41908e:	lods   eax,DWORD PTR ds:[esi]
  41908f:	stos   BYTE PTR es:[edi],al
  419090:	iret   
  419091:	fadd   QWORD PTR [esi]
  419093:	cld    
  419094:	and    dl,BYTE PTR [ebx]
  419096:	aaa    
  419097:	and    esi,DWORD PTR [esp+ecx*4-0x5e1b3dec]
  41909e:	inc    edx
  41909f:	xor    eax,0xb67eb3db
  4190a4:	int3   
  4190a5:	mov    ch,0xf8
  4190a7:	test   al,0x1c
  4190a9:	jmp    esi
  4190ab:	clc    
  4190ac:	dec    edi
  4190ad:	xor    DWORD PTR ds:0xcf02152d,esp
  4190b3:	fidiv  DWORD PTR [edx+eax*2]
  4190b6:	imul   ecx,DWORD PTR [ebp+0x3c3f7b83],0x68
  4190bd:	das    
  4190be:	add    al,0xce
  4190c0:	pop    ss
  4190c1:	cs or  al,0xf1
  4190c4:	shld   edx,ecx,0x7e
  4190c8:	xor    al,BYTE PTR [eax+ebp*4+0x6ea01c4a]
  4190cf:	jno    0x419111
  4190d1:	call   0x9306:0x7a82cecc
  4190d8:	aam    0x9d
  4190da:	shl    BYTE PTR [eax],cl
  4190dc:	fcom   DWORD PTR [edi]
  4190de:	inc    ebp
  4190df:	lea    ecx,[eax-0xd]
  4190e2:	arpl   WORD PTR [edx],cx
  4190e4:	(bad)  
  4190e5:	cmp    BYTE PTR [esi],bh
  4190e7:	ficomp WORD PTR [ecx+0x69321d2f]
  4190ed:	dec    ebx
  4190ee:	(bad)  
  4190ef:	neg    al
  4190f1:	and    BYTE PTR [eax+0x289fe761],0xe6
  4190f8:	out    dx,al
  4190f9:	test   BYTE PTR [ecx-0x6feeebc9],cl
  4190ff:	and    ecx,DWORD PTR [edi+0x28dc37c7]
  419105:	xlat   BYTE PTR ds:[ebx]
  419106:	or     al,BYTE PTR [esi]
  419108:	sub    BYTE PTR [esi+edx*2+0x2d8743ff],ah
  41910f:	jns    0x4190dc
  419111:	iret   
  419112:	adc    DWORD PTR [ecx+0xf],ebx
  419115:	mov    ch,0x1f
  419117:	mov    dl,BYTE PTR [edi-0x27f3d90]
  41911d:	mov    bh,0xa5
  41911f:	jno    0x419128
  419121:	(bad)  
  419122:	sbb    DWORD PTR [esi-0x20],esi
  419125:	and    al,0xe2
  419127:	mov    esi,0x5c044f1e
  41912c:	add    DWORD PTR [ebx-0x218ea8ff],esp
  419132:	mov    ah,0x1c
  419134:	outs   dx,BYTE PTR ds:[esi]
  419135:	add    BYTE PTR [esi],dl
  419137:	jp     0x419146
  419139:	mov    ebp,0xb2fe49f0
  41913e:	push   0xd81bb72d
  419143:	xor    BYTE PTR [ebx],dl
  419145:	mov    cs,WORD PTR [edi]
  419147:	mov    al,ds:0x29c5c3d3
  41914c:	and    DWORD PTR [ebx+eiz*4],esp
  41914f:	aas    
  419150:	gs test al,0xaa
  419153:	sub    al,0x39
  419155:	aam    0x7b
  419157:	(bad)  
  419158:	call   0x659e:0xa15f7807
  41915f:	mov    bl,0x90
  419161:	sti    
  419162:	mov    ah,0xd8
  419164:	inc    ebx
  419165:	shl    cl,1
  419167:	add    BYTE PTR [ebx-0xa],ch
  41916a:	push   0xa12b30a8
  41916f:	ret    
  419170:	add    eax,0x22147820
  419175:	pop    es
  419176:	pushf  
  419177:	mov    ecx,0xda031845
  41917c:	jg     0x41916f
  41917e:	popa   
  41917f:	dec    esp
  419180:	and    edx,eax
  419182:	xchg   BYTE PTR [edx],dl
  419184:	mov    esp,DWORD PTR [esi-0x75]
  419187:	retf   0x8f72
  41918a:	dec    esi
  41918b:	inc    ebp
  41918c:	jno    0x41918f
  41918e:	inc    eax
  41918f:	adc    eax,0x9a0a0dd9
  419194:	dec    edx
  419195:	hlt    
  419196:	mov    eax,ds:0xd8cfdc14
  41919b:	jns    0x4191a2
  41919d:	int3   
  41919e:	push   edi
  41919f:	mov    eax,0x82b7551c
  4191a4:	xor    al,0x63
  4191a6:	imul   edx,DWORD PTR [edi+0x5f],0x634940ee
  4191ad:	push   es
  4191ae:	jp     0x419184
  4191b0:	jno    0x4191e8
  4191b2:	mov    esi,esp
  4191b4:	sahf   
  4191b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b6:	data16 fst DWORD PTR [ebx+eiz*1-0x3ddc323e]
  4191be:	leave  
  4191bf:	mov    eax,0x6dd2d165
  4191c4:	pushf  
  4191c5:	and    BYTE PTR [ebx],bh
  4191c7:	pop    ecx
  4191c8:	(bad)  
  4191c9:	adc    DWORD PTR [ebp+0xe],edx
  4191cc:	and    ebp,DWORD PTR [ecx+edx*8+0x55]
  4191d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d1:	test   dh,bl
  4191d3:	pop    edi
  4191d4:	stc    
  4191d5:	adc    eax,0x902fbbe6
  4191da:	popa   
  4191db:	enter  0x50c3,0x30
  4191df:	fwait
  4191e0:	mov    esp,0xb7303698
  4191e5:	ins    DWORD PTR es:[edi],dx
  4191e6:	cmp    al,0x62
  4191e8:	lea    esp,[edx-0x19]
  4191eb:	mov    bh,BYTE PTR ds:0x83b436b3
  4191f1:	sbb    dl,dl
  4191f3:	mov    esp,0xbd964b3a
  4191f8:	into   
  4191f9:	rcr    BYTE PTR [ebp+0x22353667],cl
  4191ff:	aad    0x2d
  419201:	ss in  al,0xa1
  419204:	popa   
  419205:	retf   
  419206:	ret    0x9256
  419209:	(bad)  
  41920a:	retf   0x2b09
  41920d:	repnz into 
  41920f:	add    DWORD PTR [ecx],ebp
  419211:	popf   
  419212:	jmp    0x419247
  419214:	fstp   TBYTE PTR [esi+edx*1-0x51]
  419218:	jp     0x419207
  41921a:	repz inc eax
  41921c:	stos   DWORD PTR es:[edi],eax
  41921d:	int    0x6e
  41921f:	(bad)  
  419220:	jp     0x41922b
  419222:	jg     0x4191b7
  419224:	in     al,dx
  419225:	push   ss
  419226:	call   DWORD PTR [eax]
  419228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419229:	and    eax,0x6b7ceba6
  41922e:	test   DWORD PTR [ebx],esp
  419230:	xchg   ecx,eax
  419231:	xchg   edi,eax
  419232:	inc    esi
  419233:	ss jno 0x4191c5
  419236:	pop    edx
  419237:	das    
  419238:	ins    DWORD PTR es:[edi],dx
  419239:	gs xor ch,ah
  41923c:	jmp    0xf463:0x237e4140
  419243:	cmp    eax,0xe6f1fef6
  419249:	lea    ebx,[edx+0x29d69ac6]
  41924f:	(bad)
  419252:	ja     0x41927f
  419254:	jle    0x419273
  419256:	jecxz  0x419248
  419258:	into   
  419259:	es dec edi
  41925b:	push   ebx
  41925c:	and    al,0x2b
  41925e:	sahf   
  41925f:	sub    DWORD PTR [edi],edi
  419261:	mov    ch,al
  419263:	fstp   TBYTE PTR [ecx]
  419265:	popf   
  419266:	ja     0x41929b
  419268:	pop    ecx
  419269:	hlt    
  41926a:	sti    
  41926b:	mov    ecx,0x3e51aab1
  419270:	(bad)  
  419271:	add    al,0x4d
  419273:	not    bh
  419275:	push   ss
  419276:	jle    0x419257
  419278:	test   DWORD PTR [ebx+eiz*1-0x3ac44717],0x5d8c609b
  419283:	add    BYTE PTR [ecx-0x13],cl
  419286:	fmul   QWORD PTR [edx+ebp*1]
  419289:	xchg   ebp,eax
  41928a:	(bad)  
  41928b:	aam    0xaa
  41928d:	sub    ecx,DWORD PTR [esi]
  41928f:	inc    ebp
  419290:	pop    edi
  419291:	ins    DWORD PTR es:[edi],dx
  419292:	icebp  
  419293:	jmp    0x9ca7:0x40734b76
  41929a:	sbb    ebx,edx
  41929c:	(bad)  [ebp+0x3a7bb76d]
  4192a2:	inc    esi
  4192a3:	cmova  ecx,DWORD PTR [ebp+0xf]
  4192a7:	sbb    BYTE PTR [edi+0x51],0xa
  4192ab:	jmp    0xd229:0xc8366f99
  4192b2:	jnp    0x419311
  4192b4:	mov    al,ds:0x84dc96d9
  4192b9:	xchg   ebp,eax
  4192ba:	icebp  
  4192bb:	xchg   ebx,eax
  4192bc:	loop   0x419329
  4192be:	lahf   
  4192bf:	add    ebp,DWORD PTR [ecx+esi*4]
  4192c2:	ret    0x9a74
  4192c5:	mov    dh,0x4d
  4192c7:	cdq    
  4192c8:	mov    ch,0xf
  4192ca:	repnz fucomip st,st(4)
  4192cd:	aaa    
  4192ce:	mov    edi,0x9eff8c5f
  4192d3:	data16 mov cl,0x85
  4192d6:	adc    al,dh
  4192d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192d9:	lds    edx,FWORD PTR [ebx-0x3aeb31d3]
  4192df:	mov    gs,WORD PTR [eax]
  4192e1:	jne    0x419323
  4192e3:	mov    ah,0x26
  4192e5:	sahf   
  4192e6:	call   0xabc1:0x38d4b27a
  4192ed:	lods   eax,DWORD PTR ds:[esi]
  4192ee:	repz repz std 
  4192f1:	mov    ds,edx
  4192f3:	mov    BYTE PTR [ebp+0xe],dh
  4192f6:	dec    edx
  4192f7:	sub    eax,0xf05b1bb9
  4192fc:	xchg   ecx,eax
  4192fd:	dec    ebp
  4192fe:	iret   
  4192ff:	jmp    0x419357
  419301:	stc    
  419302:	push   eax
  419303:	inc    ecx
  419304:	add    dl,BYTE PTR [esi+0x3a3c1ea5]
  41930a:	ret    
  41930b:	mov    ebx,0x820190f
  419310:	pop    ecx
  419311:	inc    ecx
  419312:	aam    0xa5
  419314:	sbb    al,0x43
  419316:	aam    0xb
  419318:	ins    DWORD PTR es:[edi],dx
  419319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41931a:	jbe    0x419313
  41931c:	pop    eax
  41931d:	mov    cl,0x2d
  41931f:	in     eax,0x6a
  419321:	mov    bl,0xe7
  419323:	jo     0x4193a3
  419325:	sbb    bh,BYTE PTR [edx-0x76]
  419328:	or     al,0x1c
  41932a:	mov    bl,0xf2
  41932c:	cmp    al,0x85
  41932e:	adc    eax,0x4531f24d
  419333:	or     ebp,DWORD PTR [edi-0x23db66c7]
  419339:	std    
  41933a:	add    eax,0xf6ce308c
  41933f:	jnp    0x41931c
  419341:	shl    BYTE PTR [edx+0x7a],cl
  419344:	lds    ecx,FWORD PTR [edx]
  419346:	sti    
  419347:	pop    edx
  419348:	xchg   ebx,eax
  419349:	and    eax,0x96ec47f4
  41934e:	add    al,0x7a
  419350:	cdq    
  419351:	jmp    0x4193ba
  419353:	sbb    BYTE PTR [esi],dl
  419355:	mov    ds:0x6b5e35c,al
  41935a:	jb     0x419377
  41935c:	add    DWORD PTR [ebx],esi
  41935e:	pop    esp
  41935f:	cmp    ebx,DWORD PTR [ebx+esi*1+0x57807b0c]
  419366:	or     BYTE PTR [ecx],bh
  419368:	push   ecx
  419369:	cmp    eax,0x66d1a30
  41936e:	jge    0x419342
  419370:	cwde   
  419371:	sbb    eax,DWORD PTR [ecx+0x6]
  419374:	addr16 jge 0x419335
  419377:	sub    dl,BYTE PTR [eax]
  419379:	fcomi  st,st(3)
  41937b:	imul   esp,DWORD PTR [edi+0x6effcdd3],0x9
  419382:	inc    esp
  419383:	ror    BYTE PTR [esi-0x6a],cl
  419386:	lahf   
  419387:	stos   BYTE PTR es:[edi],al
  419388:	loopne 0x4193c4
  41938a:	add    al,0x35
  41938c:	add    BYTE PTR [edx+0x56],0x64
  419390:	xchg   esi,eax
  419391:	imul   edi,DWORD PTR [ecx-0x5639f7bc],0xffffff82
  419398:	rcr    DWORD PTR [edx+0x482ecd54],1
  41939e:	or     cl,BYTE PTR [edi-0x25]
  4193a1:	repz sbb BYTE PTR [ecx-0x72],bl
  4193a5:	sub    BYTE PTR [esp+eiz*4],dl
  4193a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a9:	hlt    
  4193aa:	shl    DWORD PTR [eax+edi*8+0x1e3f9517],cl
  4193b1:	and    eax,0xb352840a
  4193b6:	mov    edx,0x8259bc4d
  4193bb:	jne    0x4193ae
  4193bd:	dec    BYTE PTR [ecx-0x1f6f7d46]
  4193c3:	xchg   ebp,eax
  4193c4:	xchg   esp,eax
  4193c5:	data16 or ah,BYTE PTR [esi]
  4193c8:	not    dl
  4193ca:	jmp    0x33bc:0xfd9d23ff
  4193d1:	inc    edx
  4193d2:	mov    al,0xa2
  4193d4:	jb     0x4193ec
  4193d6:	das    
  4193d7:	push   ss
  4193d8:	jae    0x4193d5
  4193da:	and    DWORD PTR [edx-0x493be999],ecx
  4193e0:	pop    eax
  4193e1:	test   eax,0x18b89517
  4193e6:	or     BYTE PTR [esi+eax*4],dh
  4193e9:	test   BYTE PTR [ecx+0x62],dh
  4193ec:	xchg   ebp,eax
  4193ed:	ror    dh,cl
  4193ef:	add    DWORD PTR [edi+0x4e459bb8],ebx
  4193f5:	cwde   
  4193f6:	(bad)  
  4193f7:	test   esi,eax
  4193f9:	loope  0x419388
  4193fb:	out    dx,al
  4193fc:	outs   dx,DWORD PTR ds:[esi]
  4193fd:	or     ch,BYTE PTR [esi]
  4193ff:	cmp    BYTE PTR ds:0xbc10d12f,bh
  419405:	adc    al,0x85
  419407:	(bad)  
  419408:	js     0x4193ce
  41940a:	pop    eax
  41940b:	sbb    DWORD PTR [ebx-0x3bea4503],esi
  419411:	(bad)  
  419412:	fs mov ebx,0x39eb09e9
  419418:	dec    edi
  419419:	fidivr DWORD PTR [esi+0x27a63a07]
  41941f:	pushf  
  419420:	mov    al,0x6a
  419422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419423:	and    dl,dh
  419425:	mov    al,0xc
  419427:	leave  
  419428:	lods   eax,DWORD PTR ds:[esi]
  419429:	sti    
  41942a:	mov    ecx,0x8121491d
  41942f:	scas   eax,DWORD PTR es:[edi]
  419430:	pop    edx
  419431:	sub    al,0xee
  419433:	stos   DWORD PTR es:[edi],eax
  419434:	add    al,0x28
  419436:	pop    esi
  419437:	rcr    BYTE PTR [edx+0x1184d9b1],1
  41943d:	sub    eax,0xa0c80123
  419442:	add    bh,BYTE PTR [ebx-0x27]
  419445:	jno    0x41943f
  419447:	adc    al,0x20
  419449:	int    0xe1
  41944b:	jle    0x419431
  41944d:	push   esp
  41944e:	mov    ah,0xa3
  419450:	pusha  
  419451:	dec    esp
  419452:	repz mov ebx,0x5d8f2b68
  419458:	popa   
  419459:	xor    dh,0x59
  41945c:	and    al,0xf6
  41945e:	add    BYTE PTR [eax],dh
  419460:	xor    edx,edi
  419462:	(bad)  
  419463:	sbb    dl,BYTE PTR [edi]
  419465:	(bad)  
  419466:	and    bh,ch
  419468:	sub    dh,dh
  41946a:	or     bh,ah
  41946c:	ret    
  41946d:	mov    dl,BYTE PTR [esi+ebx*2+0x1a798b95]
  419474:	jl     0x419444
  419476:	sar    ah,0xdb
  419479:	sbb    BYTE PTR ds:0xa12a7f20,ah
  41947f:	mov    al,0xd7
  419481:	sahf   
  419482:	outs   dx,BYTE PTR ds:[esi]
  419483:	dec    edi
  419484:	mov    cl,0xff
  419486:	pop    edi
  419487:	imul   esp,esp,0x875dfb0
  41948d:	out    0x2b,eax
  41948f:	inc    esi
  419490:	inc    ecx
  419491:	push   0x62
  419493:	jecxz  0x4194b8
  419495:	push   edx
  419496:	mov    edx,0x2dbfd8d6
  41949b:	pushf  
  41949c:	adc    dl,ah
  41949e:	push   ds
  41949f:	mov    bh,0xfc
  4194a1:	je     0x41949c
  4194a3:	push   eax
  4194a4:	enter  0x3854,0x88
  4194a8:	in     al,0x9e
  4194aa:	sub    bh,dh
  4194ac:	mov    ecx,0x2e113b68
  4194b1:	mov    eax,0x8065a715
  4194b6:	push   ebp
  4194b7:	pusha  
  4194b8:	mov    WORD PTR [esp+edi*2+0xb7b3587],ss
  4194bf:	mov    edi,0x7fb66f0a
  4194c4:	int3   
  4194c5:	mov    gs,WORD PTR [edi]
  4194c7:	mov    edx,0xb261a53b
  4194cc:	or     eax,0x8debd1cb
  4194d1:	in     al,0xbb
  4194d3:	push   0xfb68ab79
  4194d8:	sbb    al,0x6a
  4194da:	retf   
  4194db:	scas   eax,DWORD PTR es:[edi]
  4194dc:	jmp    0xdf54db29
  4194e1:	in     eax,dx
  4194e2:	in     eax,dx
  4194e3:	mov    esi,gs
  4194e5:	ins    BYTE PTR es:[edi],dx
  4194e6:	popa   
  4194e7:	mov    eax,0x321a09cb
  4194ec:	(bad)  
  4194ed:	fcomp  DWORD PTR [ecx-0x78]
  4194f0:	or     eax,0x2b6db30b
  4194f5:	loopne 0x419501
  4194f7:	pushf  
  4194f8:	inc    esi
  4194f9:	sub    al,0x1f
  4194fb:	mov    esp,0x9ffb3703
  419500:	repz out 0x94,al
  419503:	in     al,dx
  419504:	test   BYTE PTR ds:0xfab1e10d,bh
  41950a:	je     0x4194a2
  41950c:	push   ebx
  41950d:	jg     0x41953e
  41950f:	hlt    
  419510:	into   
  419511:	or     BYTE PTR ds:[ebx+0x76d5d96c],cl
  419518:	popa   
  419519:	psrlq  mm1,QWORD PTR [edi]
  41951c:	sti    
  41951d:	mov    dl,0x59
  41951f:	xchg   edx,eax
  419520:	int    0x2a
  419522:	dec    esp
  419523:	adc    al,0x10
  419525:	add    eax,DWORD PTR [eax]
  419527:	imul   esp,eax,0x9ec28c2d
  41952d:	jb     0x4194c6
  41952f:	daa    
  419530:	mov    eax,ds:0xc9a34b6
  419535:	jb     0x41959f
  419537:	add    ch,dl
  419539:	mov    al,ds:0xc29db457
  41953e:	cmp    al,0x1d
  419540:	xchg   ecx,eax
  419542:	cmp    bl,BYTE PTR [ebx+edx*1+0x6fad8ae0]
  419549:	mov    ds:0xfba5bb70,al
  41954e:	lahf   
  41954f:	es mov eax,0x838f5fbe
  419555:	sbb    eax,0xb1f5c22e
  41955a:	sub    BYTE PTR [edx+ebx*4+0x432780a0],ah
  419561:	lahf   
  419562:	shr    dl,cl
  419564:	jecxz  0x4194f4
  419566:	pusha  
  419567:	sbb    DWORD PTR [ebp-0x58],eax
  41956a:	add    BYTE PTR [eax],bl
  41956c:	in     eax,dx
  41956d:	mov    ah,0xe7
  41956f:	push   0xeed52c05
  419574:	sbb    ah,BYTE PTR [edx]
  419576:	bound  ecx,QWORD PTR [ebp+0x7c]
  419579:	xor    dl,BYTE PTR [ecx+ecx*1]
  41957c:	pop    ss
  41957d:	ins    DWORD PTR es:[edi],dx
  41957e:	dec    eax
  41957f:	sbb    bh,bl
  419581:	xchg   ecx,eax
  419582:	pop    ss
  419583:	push   esi
  419584:	jmp    0x7fc7ef5e
  419589:	mov    edx,0x58e28a7c
  41958e:	jl     0x41958b
  419590:	(bad)  
  419591:	xor    bh,BYTE PTR [ebp-0x323aa3f3]
  419597:	(bad)  
  419598:	pop    esp
  419599:	jno    0x4195c1
  41959b:	dec    ebp
  41959c:	in     eax,0xde
  41959e:	inc    ebx
  41959f:	or     ch,cl
  4195a1:	jl     0x419533
  4195a3:	and    eax,DWORD PTR [eax+ebx*4]
  4195a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195a7:	dec    ecx
  4195a8:	xchg   ecx,eax
  4195a9:	imul   DWORD PTR [edi-0x13]
  4195ac:	add    ebp,DWORD PTR [eax-0x3b]
  4195af:	lods   al,BYTE PTR ds:[esi]
  4195b0:	std    
  4195b1:	lods   al,BYTE PTR ds:[esi]
  4195b2:	fst    st(3)
  4195b4:	push   edx
  4195b5:	or     al,0x1b
  4195b7:	mov    ds:0xdc483a75,eax
  4195bc:	(bad)  
  4195bd:	mov    edx,0x538b11d4
  4195c2:	sbb    ecx,esi
  4195c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195c5:	mov    al,0xbd
  4195c7:	sub    eax,0xe63d2f19
  4195cc:	mov    edx,0x1e0fc469
  4195d1:	push   0xffffffb9
  4195d3:	mov    DWORD PTR [edx+esi*1],ecx
  4195d6:	ins    DWORD PTR es:[edi],dx
  4195d7:	lds    esp,FWORD PTR [edx-0x4a]
  4195da:	mov    ebx,0xb0c135f7
  4195df:	scas   eax,DWORD PTR es:[edi]
  4195e0:	mov    bh,ah
  4195e2:	int    0x5f
  4195e4:	or     eax,DWORD PTR [esi+ecx*1-0x3e]
  4195e8:	int3   
  4195e9:	jns    0x41964d
  4195eb:	les    ebp,FWORD PTR [edx+0x106099ff]
  4195f1:	mov    ebp,0x28f93ca4
  4195f6:	inc    ebp
  4195f7:	sbb    BYTE PTR ds:0xed65e453,ch
  4195fd:	pop    ds
  4195fe:	mov    dl,0xeb
  419600:	dec    esp
  419601:	lea    eax,[eax+0x5975ebb5]
  419607:	pop    edx
  419608:	nop
  419609:	bound  esi,QWORD PTR [ebx+0x75]
  41960c:	ret    0x478d
  41960f:	daa    
  419610:	call   0x485d0717
  419615:	bound  edx,QWORD PTR [edx+ecx*2+0x36]
  419619:	mov    al,0x59
  41961b:	jp     0x419680
  41961d:	fwait
  41961e:	pop    esp
  41961f:	add    cl,BYTE PTR [edi+0x5a]
  419622:	ins    BYTE PTR es:[edi],dx
  419623:	cmp    ebp,DWORD PTR [esi+0x2e28180f]
  419629:	ret    
  41962a:	(bad)  
  41962b:	(bad)  
  41962c:	xor    al,BYTE PTR [ebp-0x5807cffb]
  419632:	xchg   ecx,eax
  419633:	mov    dh,0x2c
  419635:	imul   ebx,esi,0x6b
  419638:	jno    0x41966a
  41963a:	push   esi
  41963b:	lahf   
  41963c:	mov    al,0x84
  41963e:	push   esi
  41963f:	adc    BYTE PTR [esp+ebp*8-0x38],0xdd
  419644:	mov    ecx,esi
  419646:	inc    edx
  419647:	pop    edi
  419648:	add    bl,BYTE PTR [ebx+ecx*1]
  41964b:	test   BYTE PTR [esi],ah
  41964d:	sbb    eax,0xc0a7be87
  419652:	and    al,0xa5
  419654:	mov    edi,edi
  419656:	pusha  
  419657:	xchg   ecx,eax
  419658:	ret    
  419659:	fwait
  41965a:	add    BYTE PTR [ebx],0xf2
  41965d:	fwait
  41965e:	rcl    dh,cl
  419660:	clc    
  419661:	lahf   
  419662:	and    eax,0x1d498477
  419667:	mov    esp,0x60f11f5
  41966c:	cwde   
  41966d:	cdq    
  41966e:	int3   
  41966f:	(bad)  
  419670:	out    0x10,al
  419672:	jmp    0x98502018
  419677:	(bad)  
  419678:	sub    eax,0xc690d04e
  41967d:	je     0x419658
  41967f:	in     eax,dx
  419680:	pop    ds
  419681:	rcl    BYTE PTR [ebp-0x77],0x9e
  419685:	jge    0x4196c9
  419687:	dec    ebx
  419688:	das    
  419689:	xchg   ebx,eax
  41968a:	mov    ah,0x83
  41968c:	test   eax,0x288f758c
  419691:	jbe    0x41966a
  419693:	(bad)  
  419694:	lods   al,BYTE PTR ds:[esi]
  419695:	hlt    
  419696:	rcr    ah,1
  419698:	jle    0x41961b
  41969a:	in     al,0xe5
  41969c:	mov    esp,DWORD PTR [esi+edi*4-0x4975db33]
  4196a3:	fdiv   st,st(3)
  4196a5:	xchg   esi,eax
  4196a6:	(bad)  
  4196a7:	mov    eax,ds:0x1ff787f
  4196ac:	ins    DWORD PTR es:[edi],dx
  4196ad:	call   0xddd6:0x59c81644
  4196b4:	mov    ?,WORD PTR [ebx-0x63]
  4196b7:	mov    ebp,0x8e6fdf7f
  4196bc:	repnz clc 
  4196be:	fidiv  WORD PTR [ebx+0x3f]
  4196c1:	in     al,dx
  4196c2:	sub    DWORD PTR [ebx],ecx
  4196c4:	jmp    0x4196f2
  4196c6:	repnz mov esp,0x2fd1b15f
  4196cc:	aas    
  4196cd:	in     al,0xc6
  4196cf:	inc    esp
  4196d0:	mov    al,ds:0x776ee771
  4196d5:	pop    esi
  4196d6:	xchg   esi,eax
  4196d7:	out    0x7f,al
  4196d9:	mov    dl,0x38
  4196db:	in     al,0xe7
  4196dd:	scas   eax,DWORD PTR es:[edi]
  4196de:	pop    esp
  4196df:	retf   0x66da
  4196e2:	lock repz test DWORD PTR [ecx+0x2c],ebp
  4196e7:	sti    
  4196e8:	dec    esi
  4196e9:	pop    edi
  4196ea:	xchg   edi,eax
  4196eb:	sbb    eax,0x2fe8a153
  4196f0:	jp     0x419765
  4196f2:	mov    eax,ds:0xc6236f73
  4196f7:	cmp    edi,edx
  4196f9:	fwait
  4196fa:	mov    edx,0x78e20cc5
  4196ff:	(bad)  
  419700:	fsub   QWORD PTR [eax+0x6cf6bf0f]
  419706:	mov    ecx,DWORD PTR [edx]
  419708:	dec    esi
  419709:	test   BYTE PTR [ebp+0x7f453109],ch
  41970f:	sbb    ecx,0x5015a1f8
  419715:	jbe    0x41977f
  419717:	jge    0x41973d
  419719:	jo     0x41977e
  41971b:	inc    ebx
  41971c:	pushf  
  41971d:	dec    ebp
  41971e:	dec    edi
  41971f:	sti    
  419720:	gs jno 0x419703
  419723:	mov    ds:0x36e85704,eax
  419728:	adc    BYTE PTR [esi],bh
  41972a:	ret    
  41972b:	(bad)  
  41972c:	pop    esi
  41972d:	aaa    
  41972e:	xchg   esp,eax
  41972f:	pushf  
  419730:	xor    edi,DWORD PTR [edx+edi*4+0x202b1a2a]
  419737:	sahf   
  419738:	lods   al,BYTE PTR ds:[esi]
  419739:	cmp    ebp,DWORD PTR [ecx-0x7c]
  41973c:	jns    0x4197b9
  41973e:	sbb    esi,esp
  419740:	inc    edx
  419741:	scas   eax,DWORD PTR es:[edi]
  419742:	ds pushf 
  419744:	dec    esi
  419745:	repnz add bh,BYTE PTR [edi+0x5b]
  419749:	and    DWORD PTR [ebp-0x6196dbf],esi
  41974f:	das    
  419750:	pop    es
  419751:	lods   al,BYTE PTR ds:[esi]
  419752:	fucomip st,st(5)
  419754:	pushfw 
  419756:	sti    
  419757:	push   cs
  419758:	call   0x820c4cf7
  41975d:	loopne 0x419726
  41975f:	inc    ebp
  419760:	rcr    DWORD PTR [ebx+0x2b32fd85],1
  419766:	retf   
  419767:	aas    
  419768:	cld    
  419769:	add    BYTE PTR [ebp+0x4f],al
  41976c:	sub    al,0xc9
  41976e:	sahf   
  41976f:	or     ebp,ebp
  419771:	shr    esi,1
  419773:	xor    BYTE PTR ds:0x512ac9c,cl
  419779:	sub    DWORD PTR [esi+ebp*4-0x59],esp
  41977d:	pushf  
  41977e:	push   ebp
  41977f:	jae    0x41979e
  419781:	hlt    
  419782:	call   0x6d81f588
  419787:	xchg   edi,eax
  419788:	inc    eax
  419789:	test   eax,0x6aed593c
  41978e:	iret   
  41978f:	or     BYTE PTR [ecx-0x402eece8],bh
  419795:	cdq    
  419796:	mov    ecx,0x788116de
  41979b:	jae    0x419778
  41979d:	daa    
  41979e:	in     eax,0x80
  4197a0:	adc    al,BYTE PTR [ecx+0x5c]
  4197a3:	adc    ebx,DWORD PTR [edx-0xf1bcd1b]
  4197a9:	or     ecx,DWORD PTR [ebx+0x5ca7b069]
  4197af:	add    eax,0x67593b1e
  4197b4:	in     eax,0x86
  4197b6:	inc    eax
  4197b7:	aas    
  4197b8:	adc    BYTE PTR [edx+0x17f9c6d2],bh
  4197be:	icebp  
  4197bf:	push   0x39
  4197c1:	mov    cl,0x84
  4197c3:	mov    edi,0x32024699
  4197c8:	ret    0x4c9b
  4197cb:	pop    bp
  4197cd:	ret    0x5263
  4197d0:	mov    bl,0x42
  4197d2:	aam    0x91
  4197d4:	push   cs
  4197d5:	in     al,0x3c
  4197d7:	push   ebx
  4197d8:	out    0x8,eax
  4197da:	mov    bl,0xa9
  4197dc:	iret   
  4197dd:	scas   eax,DWORD PTR es:[edi]
  4197de:	mov    dl,0xe0
  4197e0:	pop    eax
  4197e1:	imul   edi,DWORD PTR [eax+0x65a86451],0x97e10498
  4197eb:	ins    DWORD PTR es:[edi],dx
  4197ec:	sub    eax,0xfee65077
  4197f1:	mov    ch,0x25
  4197f3:	push   eax
  4197f4:	ror    dh,0x9
  4197f7:	or     al,0xd2
  4197f9:	scas   eax,DWORD PTR es:[edi]
  4197fa:	bound  edx,QWORD PTR [ebp-0x7b12a936]
  419800:	xchg   ecx,eax
  419801:	xchg   esp,eax
  419802:	rep ins BYTE PTR es:[edi],dx
  419804:	pop    esp
  419805:	scas   eax,DWORD PTR es:[edi]
  419806:	and    bl,bl
  419808:	repz jne 0x419797
  41980b:	out    0xb3,al
  41980d:	stos   BYTE PTR es:[edi],al
  41980e:	test   DWORD PTR [ecx],esi
  419810:	stc    
  419811:	xor    DWORD PTR [edx+0x1e],ecx
  419814:	mov    esi,0x19c0fdff
  419819:	cmp    DWORD PTR [edi-0x1e],ebx
  41981c:	adc    DWORD PTR [esi-0x7fa0c7f0],edi
  419822:	imul   edx,edx,0x24eddfc7
  419828:	mov    ebx,0x9e410f23
  41982d:	std    
  41982e:	sar    BYTE PTR [edx-0x6b],0xb0
  419832:	scas   al,BYTE PTR es:[edi]
  419833:	retf   0xea33
  419836:	leave  
  419837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419838:	std    
  419839:	add    al,0x94
  41983b:	mov    ah,0xe3
  41983d:	shl    DWORD PTR [edi+0x45b79e64],1
  419843:	lds    esi,FWORD PTR [esi]
  419845:	inc    eax
  419846:	dec    ebx
  419847:	dec    esi
  419848:	mov    dh,bh
  41984a:	mov    dh,0x8f
  41984c:	adc    al,bh
  41984e:	leave  
  41984f:	in     al,dx
  419850:	out    0xeb,al
  419852:	mov    cl,0xa3
  419854:	add    edi,DWORD PTR [esi]
  419856:	push   esi
  419857:	push   edx
  419858:	mov    dl,bl
  41985a:	jle    0x41982b
  41985c:	xchg   BYTE PTR [edi-0x2],ah
  41985f:	(bad)  
  419860:	sub    DWORD PTR [edi],edx
  419862:	stos   BYTE PTR es:[edi],al
  419863:	add    BYTE PTR [edx],cl
  419865:	rcl    BYTE PTR [eax-0x2cf4d09c],1
  41986b:	mov    ah,0xa1
  41986d:	or     bh,BYTE PTR [ecx+esi*1-0x18f1e82e]
  419874:	pop    edi
  419875:	or     eax,0x1dc41e66
  41987a:	sub    esi,DWORD PTR [eax-0x5a25adfa]
  419880:	sbb    BYTE PTR [esi+0x3b],ch
  419883:	clc    
  419884:	xchg   DWORD PTR [eax-0x3dcc3ed3],ebp
  41988a:	out    dx,eax
  41988b:	fs je  0x419886
  41988e:	das    
  41988f:	push   edx
  419890:	cmp    ch,ch
  419892:	dec    ebx
  419893:	vmread DWORD PTR ds:0xc5966035,esp
  41989a:	jb     0x419834
  41989c:	adc    DWORD PTR [ebp-0x18e8bacb],eax
  4198a2:	jp     0x41987f
  4198a4:	loop   0x41988a
  4198a6:	and    al,0x10
  4198a8:	and    cl,dh
  4198aa:	ja     0x419865
  4198ac:	popa   
  4198ad:	add    DWORD PTR [edx+0x3e526890],ecx
  4198b3:	idiv   DWORD PTR [ecx+0x76]
  4198b6:	xchg   BYTE PTR [ebx*2+0x533c47c3],dl
  4198bd:	retf   0x9a38
  4198c0:	cmc    
  4198c1:	loop   0x4198a7
  4198c3:	dec    ecx
  4198c4:	sbb    DWORD PTR ds:0x7e531c10,edx
  4198ca:	xchg   DWORD PTR [edx-0x52b82b55],ebx
  4198d0:	inc    edx
  4198d1:	jns    0x4198de
  4198d3:	add    dl,bh
  4198d5:	push   eax
  4198d6:	pop    eax
  4198d7:	xor    ebp,eax
  4198d9:	or     DWORD PTR [ecx-0x52],esi
  4198dc:	loope  0x41993e
  4198de:	xchg   BYTE PTR ds:0xf919c384,cl
  4198e4:	push   esi
  4198e5:	jge    0x41988c
  4198e7:	loopne 0x4198b9
  4198e9:	add    esp,eax
  4198eb:	repz dec ebp
  4198ed:	mov    bh,BYTE PTR ds:0xfca58f44
  4198f3:	es pop esp
  4198f5:	inc    esi
  4198f6:	sub    al,BYTE PTR [ebx]
  4198f8:	scas   al,BYTE PTR es:[edi]
  4198f9:	setnp  BYTE PTR ss:[ebx]
  4198fd:	sub    BYTE PTR [edi+esi*4],dl
  419900:	pusha  
  419901:	inc    edi
  419902:	mov    ecx,0xe5aa4222
  419907:	aas    
  419908:	(bad)  
  419909:	dec    ebx
  41990a:	(bad)  
  41990b:	mov    eax,0x87b00fd3
  419910:	ins    DWORD PTR es:[edi],dx
  419911:	pushf  
  419912:	popf   
  419913:	or     esi,DWORD PTR [ebx+0x72d35010]
  419919:	icebp  
  41991a:	clc    
  41991b:	jbe    0x4198ef
  41991d:	xchg   ecx,eax
  41991e:	rcr    DWORD PTR [eax],1
  419920:	dec    edx
  419921:	sbb    al,0xd9
  419923:	xor    BYTE PTR [esi+ecx*2+0x1b],bh
  419927:	ror    DWORD PTR [ebx+0x7eb3aa10],0xcd
  41992e:	dec    esp
  41992f:	mov    cl,0xc5
  419931:	xor    DWORD PTR [esi+esi*4+0x1],esp
  419935:	or     ebx,DWORD PTR [ebp+0x230916d0]
  41993b:	xor    eax,esp
  41993d:	and    al,0x11
  41993f:	lods   al,BYTE PTR ds:[esi]
  419940:	bound  edi,QWORD PTR [esi]
  419942:	cmp    al,0x8
  419944:	sbb    cl,BYTE PTR [eax]
  419946:	call   0xb524:0x9da5177b
  41994d:	(bad)  
  41994e:	mov    ch,0x7b
  419950:	add    edi,esp
  419952:	(bad)  
  419953:	xlat   BYTE PTR ds:[ebx]
  419954:	cld    
  419955:	(bad)  
  419956:	imul   esp,DWORD PTR [eax],0x1d
  419959:	bswap  ebx
  41995b:	xchg   BYTE PTR ds:0xaaaf10cf,al
  419961:	mov    ebp,DWORD PTR [ebx+esi*2]
  419964:	add    al,0xaa
  419966:	inc    edx
  419967:	into   
  419968:	and    eax,esp
  41996a:	stos   DWORD PTR es:[edi],eax
  41996b:	push   eax
  41996c:	enter  0x3a5b,0xc0
  419970:	les    edi,FWORD PTR [esi+0x1]
  419973:	or     BYTE PTR [ebx+0xc84596f],cl
  419979:	fld    DWORD PTR [eax]
  41997b:	push   ebx
  41997c:	mov    ch,0x32
  41997e:	push   ds
  41997f:	lods   al,BYTE PTR fs:[esi]
  419981:	push   ecx
  419982:	push   0xffffffc8
  419984:	push   ebp
  419985:	out    0xbf,al
  419987:	xchg   esp,eax
  419988:	aaa    
  419989:	call   0xd9ef:0x5723b269
  419990:	sub    cl,dl
  419992:	pop    ebp
  419993:	(bad)  
  419994:	mov    dh,0x80
  419996:	dec    esp
  419997:	nop    DWORD PTR [edi+0x23]
  41999b:	fs (bad) 
  41999d:	and    DWORD PTR [edi-0x64],ecx
  4199a0:	call   0xf7eb:0xd4c606ae
  4199a7:	inc    edx
  4199a8:	xchg   DWORD PTR [esi],esp
  4199aa:	push   esi
  4199ab:	push   cs
  4199ac:	mov    edi,0x70a98786
  4199b1:	ficomp WORD PTR [edi-0x5beefb00]
  4199b7:	dec    ebx
  4199b8:	out    0x36,eax
  4199ba:	dec    edx
  4199bb:	and    dl,bh
  4199bd:	ficomp WORD PTR [ebp-0x65aa3ffb]
  4199c3:	push   DWORD PTR [ecx]
  4199c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199c6:	and    DWORD PTR [eax+0x10e90cd0],ecx
  4199cc:	stos   BYTE PTR es:[edi],al
  4199cd:	or     al,0x8a
  4199cf:	xchg   ecx,eax
  4199d0:	push   esi
  4199d1:	sahf   
  4199d2:	dec    edi
  4199d3:	inc    edi
  4199d4:	mov    WORD PTR [ebx],?
  4199d6:	ja     0x4199d5
  4199d8:	inc    BYTE PTR [ebx-0x1f]
  4199db:	mov    ds:0xbee1f9e0,al
  4199e0:	mov    ecx,0x73bb35a7
  4199e5:	popf   
  4199e6:	and    esp,0xffffffb1
  4199e9:	test   dh,bl
  4199eb:	(bad)  
  4199ec:	cli    
  4199ed:	and    BYTE PTR [esi],ch
  4199ef:	xchg   edx,eax
  4199f0:	fmul   QWORD PTR [eax+0x5aa725e5]
  4199f6:	aaa    
  4199f7:	scas   al,BYTE PTR es:[edi]
  4199f8:	call   0xe27b6861
  4199fd:	push   esp
  4199fe:	out    0xec,al
  419a00:	dec    ebx
  419a01:	adc    eax,0x3f55c1c8
  419a07:	add    bh,BYTE PTR [edx-0x1c]
  419a0a:	ins    DWORD PTR es:[edi],dx
  419a0b:	rcl    BYTE PTR [edx],0xf2
  419a0e:	push   edi
  419a0f:	push   ecx
  419a10:	add    esi,esp
  419a12:	jl     0x419a5e
  419a14:	inc    edx
  419a15:	sahf   
  419a16:	and    ah,BYTE PTR [eax+0x31d6973b]
  419a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a1d:	pop    ds
  419a1e:	cwde   
  419a1f:	sub    ah,BYTE PTR [esp+ebp*4+0x44]
  419a23:	cld    
  419a24:	inc    edx
  419a25:	and    al,0xd3
  419a27:	stos   DWORD PTR es:[edi],eax
  419a28:	xor    cl,BYTE PTR [ecx-0x3d]
  419a2b:	mov    eax,DWORD PTR [edi+0xd]
  419a2e:	or     al,0x82
  419a30:	ds inc edi
  419a32:	jns    0x419aaf
  419a34:	add    BYTE PTR [ebx-0x75],dh
  419a37:	mov    ds:0xa6b007bc,eax
  419a3c:	mov    bl,0xda
  419a3e:	call   0x2442f991
  419a43:	jae    0x4199f0
  419a45:	dec    esi
  419a46:	rcr    DWORD PTR [ebp-0x45894a5],cl
  419a4c:	retf   
  419a4d:	cwde   
  419a4e:	leave  
  419a4f:	sbb    BYTE PTR [esi],cl
  419a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a52:	int3   
  419a53:	data16 fadd QWORD PTR [ebx-0x16]
  419a57:	mov    bh,0x37
  419a59:	jle    0x419a67
  419a5b:	inc    ebx
  419a5c:	cmp    BYTE PTR [ecx],bh
  419a5e:	ds xchg esp,eax
  419a60:	pop    edx
  419a61:	pop    ebx
  419a62:	mov    bl,0x56
  419a64:	and    BYTE PTR [edi],ch
  419a66:	pinsrw mm3,WORD PTR ds:0x4f38,0xb3
  419a6d:	inc    esi
  419a6e:	xchg   ebp,eax
  419a6f:	xor    bh,BYTE PTR [ebx-0x2b715443]
  419a75:	dec    esp
  419a76:	adc    DWORD PTR [ebp+0x470502c2],edi
  419a7c:	ss addr16 mov al,0x10
  419a80:	call   0x14759deb
  419a85:	daa    
  419a86:	ficom  DWORD PTR [edx+0x2cca7774]
  419a8c:	call   0x870485f2
  419a91:	test   bl,al
  419a93:	sbb    DWORD PTR [ecx],ebx
  419a95:	loop   0x419a4b
  419a97:	xchg   dh,bh
  419a99:	dec    edi
  419a9a:	and    BYTE PTR [ebp+0x50],ah
  419a9d:	adc    DWORD PTR [ebx],ebx
  419a9f:	js     0x419add
  419aa1:	adc    BYTE PTR es:[ecx+0x15],0x80
  419aa6:	lds    ebp,FWORD PTR [edi]
  419aa8:	sar    ebp,0x43
  419aab:	retf   0x2c2a
  419aae:	cmp    bh,0x84
  419ab1:	cmp    eax,0x2f849ced
  419ab6:	xchg   BYTE PTR [edx+0x69],dl
  419ab9:	inc    edx
  419aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abb:	sahf   
  419abc:	or     ah,BYTE PTR [edx]
  419abe:	pop    ds
  419abf:	fwait
  419ac0:	test   eax,0x1a5e1370
  419ac5:	retf   0x53cb
  419ac8:	jmp    DWORD PTR [ebx]
  419aca:	jecxz  0x419a62
  419acc:	jle    0x419afd
  419ace:	mov    ds,WORD PTR [esi-0x3090cd23]
  419ad4:	jge    0x419b51
  419ad6:	shl    BYTE PTR [ebx-0x68],1
  419ad9:	mov    ah,0x4a
  419adb:	inc    edx
  419adc:	fmul   QWORD PTR [edi+0xd81982]
  419ae2:	sbb    edi,DWORD PTR [edx]
  419ae4:	scas   al,BYTE PTR es:[edi]
  419ae5:	pop    edx
  419ae6:	sbb    DWORD PTR fs:[ecx+0x1e],0xe017e8e5
  419aee:	cmp    edi,DWORD PTR [ebp-0x67]
  419af1:	out    0x56,eax
  419af3:	outs   dx,DWORD PTR ds:[esi]
  419af4:	shr    BYTE PTR [ecx+ecx*2-0x30],cl
  419af8:	mov    eax,ds:0x175a6408
  419afd:	mov    bh,BYTE PTR [ecx+0x79791300]
  419b03:	cld    
  419b04:	xchg   ebp,eax
  419b05:	adc    BYTE PTR [ebx+0x24],ah
  419b08:	dec    edi
  419b09:	sbb    DWORD PTR [eax+0x3],esp
  419b0c:	xor    DWORD PTR [edi],0x37fb51b9
  419b12:	push   ebx
  419b13:	and    DWORD PTR [eax+0x56f4c6f7],esi
  419b19:	or     edx,DWORD PTR [eax+edx*8]
  419b1c:	loop   0x419b5e
  419b1e:	nop
  419b1f:	mov    edi,0xc9d7929
  419b24:	call   0xf740:0xb15248ec
  419b2b:	leave  
  419b2c:	xchg   DWORD PTR [edi],esi
  419b2e:	fcmovb st,st(4)
  419b30:	dec    esp
  419b31:	cdq    
  419b32:	jp     0x419ab7
  419b34:	add    al,0xa
  419b36:	push   esp
  419b37:	(bad)
  419b3b:	dec    edi
  419b3c:	xor    esi,0xffffffb9
  419b3f:	mov    edx,0xe54637f5
  419b44:	mov    bh,0x42
  419b46:	dec    edx
  419b47:	test   eax,0x961718ee
  419b4c:	mov    eax,0x2e421f9
  419b51:	retf   0xd38b
  419b54:	sub    BYTE PTR [edx+eax*1+0x164699a8],dh
  419b5b:	dec    edx
  419b5c:	cld    
  419b5d:	mov    WORD PTR [ebx+0x4b],gs
  419b60:	sub    BYTE PTR [edx-0x66afe1a7],bl
  419b66:	je     0x419be4
  419b68:	mov    ch,0x7
  419b6a:	dec    edx
  419b6b:	push   ebx
  419b6c:	jbe    0x419b7c
  419b6e:	dec    edx
  419b6f:	add    DWORD PTR gs:[esi],ebp
  419b72:	mov    esi,edi
  419b74:	out    0xc7,eax
  419b76:	ins    BYTE PTR es:[edi],dx
  419b77:	test   al,dl
  419b79:	jnp    0x419b7a
  419b7b:	push   ecx
  419b7c:	outs   dx,DWORD PTR ds:[esi]
  419b7d:	retf   
  419b7e:	inc    edi
  419b7f:	or     eax,0x7d00dde5
  419b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b85:	or     DWORD PTR [ebp+0x44],ebx
  419b88:	xlat   BYTE PTR ds:[ebx]
  419b89:	(bad)  
  419b8a:	xor    al,cl
  419b8c:	sahf   
  419b8d:	sub    eax,0x86525e25
  419b92:	test   DWORD PTR ss:[eax+ebp*2+0x16],0xed41d11b
  419b9b:	mov    bl,0x53
  419b9d:	in     al,0x8c
  419b9f:	and    DWORD PTR [eax],edi
  419ba1:	lea    ecx,[edi]
  419ba3:	inc    edx
  419ba4:	pop    esi
  419ba5:	adc    esi,0xffffffa0
  419ba8:	mov    al,0x25
  419baa:	mov    eax,gs:0xdd0af5eb
  419bb0:	sbb    al,0xc7
  419bb2:	push   esi
  419bb3:	add    cl,BYTE PTR [ebp+0x9]
  419bb6:	lods   al,BYTE PTR ds:[esi]
  419bb7:	rol    ebp,cl
  419bb9:	push   edi
  419bba:	xchg   edi,eax
  419bbb:	mov    esp,ecx
  419bbd:	mov    esp,DWORD PTR [edi+0x71f557ca]
  419bc3:	mov    eax,ds:0xc92170a9
  419bc8:	xor    esi,DWORD PTR [edi-0x3c66fd39]
  419bce:	or     eax,0x5d7fc6aa
  419bd3:	push   eax
  419bd4:	(bad)  
  419bd5:	xlat   BYTE PTR ds:[ebx]
  419bd6:	mov    ecx,DWORD PTR [ebp-0xf]
  419bd9:	inc    DWORD PTR [esi+0x50]
  419bdc:	adc    edi,edx
  419bde:	loop   0x419bfe
  419be0:	fisub  WORD PTR [edi-0x2f1a2de6]
  419be6:	pop    edx
  419be7:	mov    ebp,DWORD PTR [edx-0x32df0dcf]
  419bed:	add    BYTE PTR [ebp-0x72],ch
  419bf0:	call   0x6961:0x91b6b976
  419bf7:	mov    esi,eax
  419bf9:	das    
  419bfa:	or     DWORD PTR [ecx],ecx
  419bfc:	push   esp
  419bfd:	xchg   esi,eax
  419bfe:	ret    
  419bff:	inc    ecx
  419c00:	out    dx,al
  419c01:	add    al,0xff
  419c03:	add    DWORD PTR [ebx+ecx*2-0x1c78d009],ebx
  419c0a:	mov    esp,0xcc0cde8f
  419c0f:	sbb    BYTE PTR [edx+0x2b],0x94
  419c13:	call   0xbf51:0x4eacc269
  419c1a:	add    esp,DWORD PTR [ecx-0x252c70e8]
  419c20:	jno    0x419c34
  419c22:	pop    ss
  419c23:	push   ebx
  419c24:	scas   al,BYTE PTR es:[edi]
  419c25:	pop    esp
  419c26:	lahf   
  419c27:	and    eax,0x40fb8616
  419c2c:	sar    BYTE PTR [esi+0x7b],1
  419c2f:	xchg   edi,eax
  419c30:	cmp    esp,DWORD PTR [edi-0x57]
  419c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c34:	aad    0x8f
  419c36:	mov    ah,0x8
  419c38:	aad    0x72
  419c3a:	xor    eax,0xf7073c4b
  419c3f:	es push edi
  419c41:	push   0xffffff99
  419c43:	in     al,0xcf
  419c45:	push   ecx
  419c46:	adc    DWORD PTR [ecx+0x57],ebx
  419c49:	or     edx,esp
  419c4b:	jp     0x419c6b
  419c4d:	(bad)  
  419c4f:	pop    ebp
  419c50:	das    
  419c51:	pop    es
  419c52:	sahf   
  419c53:	inc    esi
  419c54:	adc    BYTE PTR [edx+0x19b6927e],ah
  419c5a:	adc    DWORD PTR [ebx+0x76],edx
  419c5d:	aad    0xf
  419c5f:	add    DWORD PTR [edi-0x7feb188a],ebp
  419c65:	pop    edx
  419c66:	inc    ecx
  419c67:	pop    ecx
  419c68:	and    dl,cl
  419c6a:	sub    eax,0x486e58fb
  419c6f:	out    dx,al
  419c70:	nop
  419c71:	xor    dh,ah
  419c73:	adc    DWORD PTR [edx+eiz*8+0x10],0xffffffce
  419c78:	push   ss
  419c79:	ss test al,0x6
  419c7c:	xlat   BYTE PTR ds:[ebx]
  419c7d:	stos   BYTE PTR es:[edi],al
  419c7e:	sti    
  419c7f:	popf   
  419c80:	mov    ch,0x7b
  419c82:	sub    BYTE PTR [edi],dl
  419c84:	aas    
  419c85:	shr    esi,cl
  419c87:	push   ss
  419c88:	(bad)  
  419c89:	pop    edx
  419c8a:	push   0x60
  419c8c:	pop    edx
  419c8d:	mov    ch,bh
  419c8f:	lahf   
  419c90:	(bad)  
  419c91:	(bad)  
  419c92:	std    
  419c93:	and    dl,al
  419c95:	int    0xe
  419c97:	sahf   
  419c98:	mov    ecx,0x793c82de
  419c9d:	mov    ah,0x33
  419c9f:	arpl   WORD PTR [edi],di
  419ca1:	cmp    DWORD PTR [esi],ebx
  419ca3:	cmp    al,0x5d
  419ca5:	push   ecx
  419ca6:	not    BYTE PTR ds:0x8e162519
  419cac:	lds    edi,FWORD PTR ds:0x364a5192
  419cb2:	push   esp
  419cb3:	and    BYTE PTR [esi-0x23cb5c8c],ch
  419cb9:	pop    esp
  419cba:	enter  0x96b3,0x6d
  419cbe:	call   0xadb2:0x7799f62b
  419cc5:	bound  ecx,QWORD PTR ds:0xb1bce28
  419ccb:	jecxz  0x419c68
  419ccd:	jb     0x419ca6
  419ccf:	mov    ds:0x32643ee1,eax
  419cd4:	xchg   cl,dh
  419cd6:	add    bl,BYTE PTR [edx]
  419cd8:	repnz mov ebx,0x71eb6001
  419cde:	xor    eax,0x3d3c34f3
  419ce3:	mov    es,WORD PTR [ebp-0x48c1d46f]
  419ce9:	mov    ds:0x80142a64,eax
  419cee:	sub    al,0xa4
  419cf0:	pop    esi
  419cf1:	pop    edx
  419cf2:	jbe    0x419cc6
  419cf4:	sbb    esp,esi
  419cf6:	scas   al,BYTE PTR es:[edi]
  419cf7:	int    0xaf
  419cf9:	xchg   edx,eax
  419cfa:	add    BYTE PTR [ebx+0x75],ah
  419cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfe:	outs   dx,DWORD PTR ds:[esi]
  419cff:	mov    cl,0xd4
  419d01:	add    BYTE PTR [eax+0x7f],ch
  419d04:	leave  
  419d05:	mov    esi,0x6a350d17
  419d0a:	iret   
  419d0b:	sbb    eax,DWORD PTR [ecx+0x21]
  419d0e:	mov    ds:0x2bb42e72,eax
  419d13:	cwde   
  419d14:	hlt    
  419d15:	mov    ah,0xb0
  419d17:	cdq    
  419d18:	sbb    DWORD PTR [edi],edx
  419d1a:	aam    0xee
  419d1c:	adc    bh,BYTE PTR [edx+0x36]
  419d1f:	cs pop edi
  419d21:	dec    esp
  419d22:	data16 js 0x419ca8
  419d25:	popa   
  419d26:	mov    bl,0x8a
  419d28:	sbb    dh,BYTE PTR ds:0xe8f48ce7
  419d2e:	leave  
  419d2f:	fistp  QWORD PTR [ebp+0x23]
  419d32:	jge    0x419db3
  419d34:	not    bl
  419d36:	fisttp DWORD PTR [eax]
  419d38:	inc    edx
  419d39:	jns    0x419d43
  419d3b:	xchg   edi,eax
  419d3c:	lock out dx,eax
  419d3e:	dec    eax
  419d3f:	and    al,0xb3
  419d41:	jns    0x419d42
  419d43:	jle    0x419cf8
  419d45:	push   ds
  419d46:	loope  0x419d42
  419d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d49:	add    bh,dl
  419d4b:	and    DWORD PTR [esi+0x53],0x2dff3045
  419d52:	out    dx,al
  419d53:	add    BYTE PTR [eax-0xb39abf3],0x8f
  419d5a:	mov    ebp,0x92c3c864
  419d5f:	stc    
  419d60:	fcomi  st,st(2)
  419d62:	pusha  
  419d63:	arpl   WORD PTR [eax],bx
  419d65:	dec    edi
  419d67:	jg     0x419d4f
  419d69:	cmp    ecx,esi
  419d6b:	xchg   esp,eax
  419d6c:	dec    ebp
  419d6d:	mov    ebx,0x6ccb69d2
  419d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d73:	or     BYTE PTR [edx],0x13
  419d76:	add    esi,DWORD PTR [edx*8+0x21834aa4]
  419d7d:	in     al,0xd5
  419d7f:	gs jnp 0x419df6
  419d82:	dec    edi
  419d83:	daa    
  419d84:	push   esi
  419d85:	pop    ecx
  419d86:	dec    ebx
  419d87:	dec    eax
  419d88:	test   al,0x74
  419d8a:	and    BYTE PTR [edx],0x38
  419d8d:	sti    
  419d8e:	jge    0x419d85
  419d90:	sbb    eax,0x2ad044a2
  419d95:	inc    esp
  419d96:	aad    0xa6
  419d98:	stc    
  419d99:	jmp    0x5e89:0x2ed7b513
  419da0:	das    
  419da1:	pop    esi
  419da2:	mov    ch,0xf5
  419da4:	push   ebx
  419da5:	lds    ebx,FWORD PTR [ecx-0x5b72e004]
  419dab:	fsub   DWORD PTR [edi-0x6efb4885]
  419db1:	test   al,0x39
  419db3:	pop    ecx
  419db4:	or     al,0xb4
  419db6:	fcmovnu st,st(5)
  419db8:	pop    ebp
  419db9:	xor    dh,cl
  419dbb:	mov    dh,0x8b
  419dbd:	jb     0x419d7c
  419dbf:	push   ebx
  419dc0:	or     edx,edx
  419dc2:	mov    esi,0x7f46c988
  419dc7:	nop
  419dc8:	icebp  
  419dc9:	adc    eax,0x107e6425
  419dce:	sbb    eax,0xd060d843
  419dd3:	cwde   
  419dd4:	adc    al,0x30
  419dd6:	xlat   BYTE PTR ds:[ebx]
  419dd7:	mov    ebp,0x3d4a962a
  419ddc:	out    0xfb,al
  419dde:	push   cs
  419ddf:	test   BYTE PTR [eax],dh
  419de1:	sti    
  419de2:	mov    al,ds:0xa08e1b7c
  419de7:	mov    es,WORD PTR [ecx+ebp*2-0x18c5b46e]
  419dee:	loopne 0x419de6
  419df0:	pusha  
  419df1:	jge    0x419d79
  419df3:	sub    ch,BYTE PTR [ebx+0x53d13f40]
  419df9:	sub    eax,0xc9ee805d
  419dfe:	sbb    ah,BYTE PTR [edx]
  419e00:	cmp    eax,DWORD PTR [esi+0x2]
  419e03:	push   ebp
  419e04:	and    ebx,DWORD PTR [ecx+0x3bb91c99]
  419e0a:	(bad)  
  419e0b:	or     BYTE PTR [eax-0x1c],dl
  419e0e:	sbb    esp,DWORD PTR [ecx+0x50]
  419e11:	icebp  
  419e12:	cwde   
  419e13:	sub    BYTE PTR [edx-0x1332813c],ch
  419e19:	idiv   BYTE PTR [eax+0x2e]
  419e1c:	cmp    DWORD PTR [edi],esi
  419e1e:	pop    ebx
  419e1f:	jle    0x419df4
  419e21:	adc    BYTE PTR [esp+esi*1],cl
  419e24:	cmp    ch,al
  419e26:	out    dx,eax
  419e27:	jne    0x419dbd
  419e29:	push   edi
  419e2a:	clc    
  419e2b:	xchg   ecx,eax
  419e2c:	push   ss
  419e2d:	repz imul esi,DWORD PTR [edx+0x258798c5],0xffffffb1
  419e35:	mov    ch,0x82
  419e37:	cmc    
  419e38:	call   0x23b3:0xc9e8d004
  419e3f:	cwde   
  419e40:	inc    ebx
  419e41:	loop   0x419e8f
  419e43:	(bad)  
  419e44:	pop    ss
  419e45:	and    ebx,0x85b0745a
  419e4b:	adc    DWORD PTR [esi+0x66],esp
  419e4e:	adc    al,0xd5
  419e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e51:	push   cs
  419e52:	push   0xffffffb8
  419e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e55:	iret   
  419e56:	test   al,0x44
  419e58:	xlat   BYTE PTR fs:[ebx]
  419e5a:	pop    ecx
  419e5b:	jns    0x419eda
  419e5d:	push   ecx
  419e5e:	dec    edi
  419e5f:	je     0x419de3
  419e61:	sub    eax,0x6f40ce85
  419e66:	test   eax,0x33015c41
  419e6b:	into   
  419e6c:	jg     0x419e2e
  419e6e:	int3   
  419e6f:	icebp  
  419e70:	xchg   esp,eax
  419e71:	mov    edi,DWORD PTR [eax]
  419e73:	repnz popf 
  419e75:	mov    dl,BYTE PTR [eax]
  419e77:	inc    edi
  419e78:	les    esi,FWORD PTR [edi-0x1]
  419e7b:	push   edx
  419e7c:	xchg   ebp,eax
  419e7d:	dec    esi
  419e7e:	mov    ebx,0xa3222b71
  419e83:	test   eax,0x6ff4aff
  419e88:	sub    DWORD PTR [ebx-0x30],ecx
  419e8b:	fsubr  QWORD PTR [esi-0x8]
  419e8e:	scas   al,BYTE PTR es:[edi]
  419e8f:	xor    eax,0xbef39e2a
  419e94:	xchg   esi,eax
  419e95:	cmp    BYTE PTR [ecx-0x58],ah
  419e98:	fadd   QWORD PTR [edi]
  419e9a:	push   ds
  419e9b:	mov    edx,0xb20f2aa9
  419ea0:	mov    cl,0xe2
  419ea2:	test   al,0x55
  419ea4:	fsub   QWORD PTR [edi+0x44]
  419ea7:	stos   DWORD PTR es:[edi],eax
  419ea8:	and    BYTE PTR ds:0xb6261af8,0xc2
  419eaf:	sub    esp,eax
  419eb1:	stc    
  419eb2:	and    eax,0x960ced9e
  419eb7:	popa   
  419eb8:	pop    ecx
  419eb9:	push   esp
  419eba:	sbb    eax,0x5d79c369
  419ebf:	popa   
  419ec0:	jnp    0x419f06
  419ec2:	(bad)  
  419ec3:	stc    
  419ec4:	fadd   DWORD PTR [edx+0x13]
  419ec7:	ins    BYTE PTR es:[edi],dx
  419ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ec9:	jne    0x419eeb
  419ecb:	fcmove st,st(1)
  419ecd:	scas   eax,DWORD PTR es:[edi]
  419ece:	cmp    al,0x25
  419ed0:	inc    eax
  419ed1:	cmp    ah,al
  419ed3:	je     0x419e7a
  419ed5:	mov    al,ds:0xa50008c5
  419eda:	inc    esi
  419edb:	addr16 mov ebx,0x8b9728a8
  419ee1:	push   ss
  419ee2:	sub    edx,ebp
  419ee4:	cli    
  419ee5:	test   DWORD PTR [edx],ebp
  419ee7:	stc    
  419ee8:	dec    edx
  419ee9:	and    edx,edx
  419eeb:	or     cl,BYTE PTR ds:0x83479ca0
  419ef1:	xor    eax,0x669f0c96
  419ef6:	hlt    
  419ef7:	mov    edx,0xa4111078
  419efc:	dec    esp
  419efd:	test   ah,ah
  419eff:	pop    ebx
  419f00:	xor    eax,0xc743b1b0
  419f05:	mov    edi,0x4bea8d27
  419f0a:	sbb    al,0xae
  419f0c:	dec    edx
  419f0d:	rcl    DWORD PTR [edi+0x7ef3aee2],cl
  419f13:	push   cs
  419f14:	aad    0x6d
  419f16:	ds mov dl,0x51
  419f19:	pop    eax
  419f1a:	fwait
  419f1b:	adc    BYTE PTR ds:0xc95ef9a5,dl
  419f21:	inc    eax
  419f22:	adc    al,0x29
  419f24:	or     ch,bh
  419f26:	outs   dx,DWORD PTR ds:[esi]
  419f27:	mov    edi,DWORD PTR [esi]
  419f29:	sub    BYTE PTR [esi],bl
  419f2b:	pop    es
  419f2c:	mov    al,0xf4
  419f2e:	fwait
  419f2f:	pop    ss
  419f30:	xchg   edi,eax
  419f31:	cdq    
  419f32:	pop    esp
  419f33:	xor    al,0x7a
  419f35:	shr    ch,1
  419f37:	(bad)  
  419f38:	cmp    BYTE PTR [eax-0x18],dl
  419f3b:	idiv   BYTE PTR [edi+0x4]
  419f3e:	fst    QWORD PTR [ecx]
  419f40:	and    eax,0x7cd9aefe
  419f45:	xor    esi,DWORD PTR [esi]
  419f47:	repz xlat BYTE PTR ds:[ebx]
  419f49:	fcmovne st,st(1)
  419f4b:	sbb    al,0x2
  419f4d:	fs stos DWORD PTR es:[edi],eax
  419f4f:	pop    edx
  419f50:	push   0x34
  419f52:	jecxz  0x419f1c
  419f54:	sar    DWORD PTR [esi+edx*8-0x783b80a9],1
  419f5b:	addr16 in eax,dx
  419f5d:	inc    esi
  419f5e:	add    edi,DWORD PTR [ebx+0x2]
  419f61:	div    DWORD PTR [edi-0x3159d37c]
  419f67:	mov    al,ds:0x36f9e8f0
  419f6c:	in     al,0x75
  419f6e:	(bad)  
  419f6f:	pop    esi
  419f70:	jecxz  0x419f57
  419f72:	xchg   DWORD PTR [esi],ebx
  419f74:	sub    al,0x36
  419f76:	xor    dh,BYTE PTR [edi]
  419f78:	push   eax
  419f79:	in     al,0xf0
  419f7b:	or     ebp,esi
  419f7d:	mov    edi,0xb046ab91
  419f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f83:	dec    esi
  419f84:	sbb    al,0x35
  419f86:	repnz lods al,BYTE PTR ds:[esi]
  419f88:	dec    esi
  419f89:	div    BYTE PTR [esp+eax*8+0x243da86]
  419f90:	sub    esp,DWORD PTR [ebx+ebx*2+0x13]
  419f94:	mov    ebp,0xd982813a
  419f99:	add    bh,BYTE PTR [edx-0x34]
  419f9c:	and    BYTE PTR [ebp+0x5b],ah
  419f9f:	dec    eax
  419fa0:	jmp    0x28d3:0x1614fd85
  419fa7:	pop    esi
  419fa8:	and    bh,BYTE PTR [edx-0x60]
  419fab:	xor    DWORD PTR [edx],edi
  419fad:	(bad)  
  419fae:	and    bl,BYTE PTR [edi]
  419fb0:	push   cs
  419fb1:	adc    al,0x92
  419fb3:	ret    0xdc1b
  419fb6:	in     al,0x46
  419fb8:	sti    
  419fb9:	xchg   esi,eax
  419fba:	mov    eax,0x798fa63c
  419fbf:	add    ch,dl
  419fc1:	pop    ebp
  419fc2:	xchg   BYTE PTR ds:0x64983a34,bh
  419fc8:	ins    DWORD PTR es:[edi],dx
  419fc9:	inc    esp
  419fca:	in     eax,dx
  419fcb:	mov    ds:0x484b0c0,al
  419fd0:	mov    esi,0x2a1c9746
  419fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd6:	ret    
  419fd7:	rol    BYTE PTR [edx+0x1ad27dc6],1
  419fdd:	out    dx,eax
  419fde:	retf   
  419fdf:	loope  0x41a03a
  419fe1:	pop    esp
  419fe2:	shl    DWORD PTR [edi],cl
  419fe4:	fisubr DWORD PTR [esi+esi*1+0x2b]
  419fe8:	test   edi,ebx
  419fea:	mov    dl,0x4f
  419fec:	dec    ebp
  419fed:	shr    BYTE PTR [ecx],1
  419fef:	dec    esp
  419ff0:	or     BYTE PTR [edx+0x7],ch
  419ff3:	popa   
  419ff4:	xor    al,0x92
  419ff6:	popf   
  419ff7:	lahf   
  419ff8:	jbe    0x41a010
  419ffa:	mov    ch,BYTE PTR [ecx]
  419ffc:	jg     0x419f83
  419ffe:	(bad)  
  419fff:	adc    eax,0x90ca894d
  41a004:	jle    0x41a072
  41a006:	jge    0x419fbb
  41a008:	fist   WORD PTR [ebx-0x470d441d]
  41a00e:	data16 adc BYTE PTR [ecx+0x6497efcd],0xa2
  41a016:	adc    edx,DWORD PTR [eax-0x5]
  41a019:	pop    ebx
  41a01a:	out    0xd7,eax
  41a01c:	clc    
  41a01d:	inc    esp
  41a01e:	aam    0x8c
  41a020:	jp     0x41a025
  41a022:	out    dx,al
  41a023:	stos   BYTE PTR es:[edi],al
  41a024:	call   0xc41822dc
  41a029:	cmp    al,0xa2
  41a02b:	jmp    DWORD PTR [edx+eax*8]
  41a02e:	push   es
  41a02f:	stc    
  41a030:	push   esp
  41a031:	xor    BYTE PTR [esi+0x19],ch
  41a034:	push   edi
  41a035:	mov    eax,0xb41e2b32
  41a03a:	outs   dx,DWORD PTR ds:[esi]
  41a03b:	fst    DWORD PTR [ebx]
  41a03d:	xor    ah,bl
  41a03f:	pop    ss
  41a040:	jbe    0x41a0a9
  41a042:	dec    esi
  41a043:	mov    dl,0xec
  41a045:	imul   eax,edx,0x1f5ffb58
  41a04b:	cli    
  41a04c:	pop    ss
  41a04d:	daa    
  41a04e:	fild   WORD PTR [eax-0x66]
  41a051:	cmc    
  41a052:	jne    0x41a043
  41a054:	push   ecx
  41a055:	jle    0x419fdc
  41a057:	ror    DWORD PTR [eax-0xd],0xa0
  41a05b:	(bad)  
  41a05d:	or     ah,dh
  41a05f:	xor    esi,edx
  41a061:	call   0x634d76b2
  41a066:	lea    esi,ds:0x98ef665e
  41a06c:	xor    ah,bh
  41a06e:	mov    eax,0xea816750
  41a073:	sub    bh,al
  41a075:	push   ds
  41a076:	mov    BYTE PTR [esp+edi*2],ah
  41a079:	test   eax,ebp
  41a07b:	sub    dl,BYTE PTR [eax]
  41a07d:	inc    ecx
  41a07e:	sti    
  41a07f:	jb     0x41a05d
  41a081:	imul   edi,DWORD PTR [esp+ebp*2],0xfffffffd
  41a085:	lahf   
  41a086:	add    DWORD PTR [esi+eax*1],esi
  41a089:	mov    ch,cl
  41a08b:	add    bh,BYTE PTR [ebx-0x5337259e]
  41a091:	dec    ebp
  41a092:	lds    esp,FWORD PTR [edx+0x3c]
  41a095:	pop    edx
  41a096:	dec    edi
  41a097:	fldcw  WORD PTR [edx+0x42]
  41a09a:	inc    edx
  41a09b:	aad    0x3e
  41a09d:	push   edx
  41a09e:	and    DWORD PTR ds:0x46b61245,ebp
  41a0a4:	shl    DWORD PTR [ebp+0x3502d557],0xa5
  41a0ab:	pushf  
  41a0ac:	xor    BYTE PTR [ebx+eax*1-0xa],0x27
  41a0b1:	enter  0x7c4e,0x5c
  41a0b5:	sbb    BYTE PTR [ecx+0x2e],0x34
  41a0b9:	imul   BYTE PTR [ecx+0x69b6d7fc]
  41a0bf:	sub    eax,DWORD PTR [esi+0x2b668a53]
  41a0c5:	int    0xf
  41a0c7:	dec    ebp
  41a0c8:	or     DWORD PTR [ecx],esi
  41a0ca:	icebp  
  41a0cb:	push   es
  41a0cc:	call   0xee79:0xd496b122
  41a0d3:	fcomp  DWORD PTR ds:0xe482f652
  41a0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0da:	(bad)  
  41a0db:	sub    BYTE PTR [edx-0x39715e02],cl
  41a0e1:	stos   DWORD PTR es:[edi],eax
  41a0e2:	and    ecx,DWORD PTR [eax]
  41a0e4:	cmp    BYTE PTR [ebx],0x53
  41a0e7:	mov    ch,0xf4
  41a0e9:	mov    eax,ds:0x9608dae1
  41a0ee:	ins    DWORD PTR es:[edi],dx
  41a0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0f0:	mov    DWORD PTR [ebx-0x71],edi
  41a0f3:	sysenter 
  41a0f5:	sahf   
  41a0f6:	fs popf 
  41a0f8:	stos   DWORD PTR es:[edi],eax
  41a0f9:	(bad)
  41a0fd:	mov    bl,al
  41a0ff:	jnp    0x41a140
  41a101:	mov    eax,ds:0x8cb935d9
  41a106:	adc    al,0x61
  41a108:	dec    DWORD PTR [edi+0x19aa73d0]
  41a10e:	push   es
  41a10f:	retf   
  41a110:	aad    0xfe
  41a112:	nop
  41a113:	aaa    
  41a114:	xor    eax,0x96a97a4c
  41a119:	dec    edi
  41a11a:	adc    eax,0xbd2bd519
  41a11f:	jp     0x41a144
  41a121:	fistp  WORD PTR [ebp+0x37906c46]
  41a127:	mov    edi,0xed6a3161
  41a12c:	ror    BYTE PTR [edx+edx*8],1
  41a12f:	call   0x1505:0x8ea88aca
  41a136:	mov    WORD PTR [edi],ss
  41a138:	xchg   esp,eax
  41a139:	dec    ebx
  41a13a:	fcmovnb st,st(4)
  41a13c:	sbb    eax,0x9fb8d0c2
  41a141:	adc    cl,BYTE PTR [edi]
  41a143:	add    esp,DWORD PTR [esi-0x1de7989c]
  41a149:	idiv   BYTE PTR [ecx+0x59e1e307]
  41a14f:	sub    bh,BYTE PTR [ebp+ebx*4-0x2e]
  41a153:	xor    esi,ebx
  41a155:	les    edi,FWORD PTR [edx-0x13]
  41a158:	dec    ebp
  41a159:	shr    DWORD PTR [eax-0x58b8232e],cl
  41a15f:	mov    esp,0xff4ffa1f
  41a164:	dec    eax
  41a165:	mov    eax,0x2c40a19f
  41a16a:	add    al,0x4a
  41a16c:	inc    ebp
  41a16d:	mov    esi,0x6107dd99
  41a172:	sub    al,BYTE PTR [eax-0x58]
  41a175:	mov    fs,WORD PTR [ecx+0x36]
  41a178:	sub    DWORD PTR [esi+0x2ec32840],ecx
  41a17e:	(bad)  
  41a180:	cmp    al,0xdd
  41a182:	add    ebx,edx
  41a184:	rcr    esi,1
  41a186:	scas   eax,DWORD PTR es:[edi]
  41a187:	aad    0xb3
  41a189:	js     0x41a15b
  41a18b:	inc    esi
  41a18c:	out    dx,eax
  41a18d:	sbb    al,0x79
  41a18f:	ins    DWORD PTR es:[edi],dx
  41a190:	(bad)  
  41a191:	(bad)  [ecx]
  41a193:	xchg   ebx,eax
  41a194:	in     eax,dx
  41a195:	jl     0x41a13e
  41a197:	out    0x9a,al
  41a199:	push   edx
  41a19a:	lahf   
  41a19b:	gs jne 0x41a1e9
  41a19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a19f:	add    BYTE PTR [edi-0x4b],0xf8
  41a1a3:	pop    edi
  41a1a4:	cmp    ch,BYTE PTR [ecx+0x3]
  41a1a7:	retf   
  41a1a8:	sti    
  41a1a9:	mov    esi,0xce2ce3e8
  41a1ae:	push   ebp
  41a1af:	sub    BYTE PTR [edx],dh
  41a1b1:	mov    al,ds:0x200fa37
  41a1b6:	xchg   esp,eax
  41a1b7:	dec    edx
  41a1b8:	jo     0x41a1b8
  41a1ba:	or     eax,0xea6f066f
  41a1bf:	jo     0x41a20d
  41a1c1:	dec    edi
  41a1c2:	mov    cl,0x7b
  41a1c4:	push   eax
  41a1c5:	hlt    
  41a1c6:	cmp    ebx,DWORD PTR [edx-0x3f8031bc]
  41a1cc:	sub    BYTE PTR [ebp-0x2d8ecc33],ch
  41a1d2:	mov    ebp,0xe8a26aba
  41a1d7:	pop    ebx
  41a1d8:	adc    BYTE PTR [eax-0x78],dh
  41a1db:	clc    
  41a1dc:	mov    ?,WORD PTR [esi+0x23a04567]
  41a1e2:	outs   dx,BYTE PTR ds:[esi]
  41a1e3:	in     al,dx
  41a1e4:	imul   edx,DWORD PTR ds:0xf96c1234,0x51
  41a1eb:	int3   
  41a1ec:	jle    0x41a229
  41a1ee:	or     ecx,DWORD PTR [edi-0xb]
  41a1f1:	sub    ch,ch
  41a1f3:	jecxz  0x41a19b
  41a1f5:	inc    ecx
  41a1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1f7:	mov    cl,0x55
  41a1f9:	cmp    DWORD PTR [ecx+0x26],edi
  41a1fc:	lock sbb ch,BYTE PTR [esi+0x2557faba]
  41a203:	dec    esi
  41a204:	daa    
  41a205:	mov    BYTE PTR [edx+eiz*1+0x3071cce8],dh
  41a20c:	and    DWORD PTR [ebx-0x11],ecx
  41a20f:	inc    esp
  41a210:	scas   eax,DWORD PTR es:[edi]
  41a211:	cwde   
  41a212:	push   esi
  41a213:	xchg   esp,eax
  41a214:	lds    eax,FWORD PTR [edi-0x655a61ad]
  41a21a:	lds    esp,FWORD PTR [ebx-0x79a4fde7]
  41a220:	mov    eax,ds:0x991b9ce5
  41a225:	ror    cl,cl
  41a227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a228:	or     al,0xc7
  41a22a:	inc    eax
  41a22b:	push   edx
  41a22c:	(bad)  
  41a22d:	mov    eax,0xdfb91d2b
  41a232:	idiv   BYTE PTR [ebx+0x5953e253]
  41a238:	add    dh,cl
  41a23a:	and    BYTE PTR [edi+esi*8-0x16bb2c89],ah
  41a241:	shr    BYTE PTR [esi],cl
  41a243:	pop    edx
  41a244:	mov    eax,ds:0x3294cc11
  41a249:	mov    eax,0x350dd06a
  41a24e:	into   
  41a24f:	stos   DWORD PTR es:[edi],eax
  41a250:	push   ebx
  41a251:	add    al,0x1d
  41a253:	aad    0xc0
  41a255:	sub    ebp,DWORD PTR [edx+0x32953f4a]
  41a25b:	outs   dx,DWORD PTR ds:[esi]
  41a25c:	xchg   edx,eax
  41a25d:	(bad)  
  41a25f:	or     BYTE PTR [esi],cl
  41a261:	mov    esp,0xda50eeb5
  41a266:	mov    ebp,DWORD PTR ds:0x3c8bfd76
  41a26c:	mov    ecx,0x52e00d61
  41a271:	call   0x3cc0de68
  41a276:	in     eax,dx
  41a277:	mov    dl,0x2e
  41a279:	imul   ecx,eax,0x2
  41a27c:	inc    DWORD PTR [eax-0x6]
  41a27f:	push   0x2f
  41a281:	mov    ss,esi
  41a283:	(bad)  
  41a284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a285:	xchg   esp,eax
  41a286:	push   ss
  41a287:	mov    bh,0x93
  41a289:	out    0x2,al
  41a28b:	mov    ebx,0x5d7b6071
  41a290:	jge    0x41a30d
  41a292:	push   ebx
  41a293:	jg     0x41a29d
  41a295:	mov    BYTE PTR [esi+eiz*4-0x79a48ec0],al
  41a29c:	lods   eax,DWORD PTR ds:[esi]
  41a29d:	imul   eax,DWORD PTR [edx+0x1a],0xb6e3e018
  41a2a4:	lds    edx,FWORD PTR [ebx]
  41a2a6:	xchg   BYTE PTR [ebx+0x52024659],ah
  41a2ac:	icebp  
  41a2ad:	and    DWORD PTR [edx+0xc],ebp
  41a2b0:	pushf  
  41a2b1:	fdivr  st(6),st
  41a2b3:	add    DWORD PTR [ebp-0x4ae78626],eax
  41a2b9:	in     eax,dx
  41a2ba:	shl    al,1
  41a2bc:	add    edi,DWORD PTR [edx-0x13ed0533]
  41a2c2:	jmp    0x41a2b6
  41a2c4:	in     eax,0x62
  41a2c6:	cmp    ch,0x8d
  41a2c9:	lahf   
  41a2ca:	cmc    
  41a2cb:	stos   DWORD PTR es:[edi],eax
  41a2cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2cd:	pop    es
  41a2ce:	into   
  41a2cf:	test   eax,0x452cecd6
  41a2d4:	adc    eax,0x485aa816
  41a2d9:	ja     0x41a2fc
  41a2db:	push   ebx
  41a2dc:	and    ebx,DWORD PTR [esi+esi*4-0x32b94436]
  41a2e3:	xchg   edi,eax
  41a2e4:	inc    ebx
  41a2e5:	jnp    0x41a2e9
  41a2e7:	inc    edx
  41a2e8:	je     0x41a286
  41a2ea:	fnstsw WORD PTR [esi+eax*2]
  41a2ed:	(bad)  [edx+edx*4+0x50c50411]
  41a2f4:	test   cl,0xde
  41a2f7:	sbb    BYTE PTR [eax],0x1c
  41a2fa:	pushf  
  41a2fb:	push   esp
  41a2fc:	out    0x99,al
  41a2fe:	fld    DWORD PTR [ecx-0x2c]
  41a301:	dec    edi
  41a302:	inc    eax
  41a303:	sub    al,0x51
  41a305:	xor    BYTE PTR [ebp+esi*1+0x61aa84e8],cl
  41a30c:	add    DWORD PTR [esp+ecx*4],eax
  41a30f:	pop    ebx
  41a310:	cmp    bh,BYTE PTR [edx-0x770f71c2]
  41a316:	call   0x7f32:0x4ad25903
  41a31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a31e:	mov    ebp,0x5629376a
  41a323:	test   al,0xfa
  41a325:	xchg   edx,eax
  41a326:	psubsb mm3,QWORD PTR [ebp-0x71d0c1c9]
  41a32d:	fnsave [eax+0x72ad5c35]
  41a333:	mov    ecx,0xf4c237cd
  41a338:	sbb    DWORD PTR [ebx-0x29],eax
  41a33b:	push   ecx
  41a33c:	fsub   QWORD PTR [esi+ebp*8+0x1432d5cf]
  41a343:	bound  edx,QWORD PTR [edi+0x5b]
  41a346:	test   al,0x7a
  41a348:	cwde   
  41a349:	clc    
  41a34a:	adc    eax,0x45ae4e6c
  41a34f:	or     bh,bh
  41a351:	clc    
  41a352:	(bad)  
  41a353:	pop    edi
  41a354:	or     al,0x89
  41a356:	xor    al,0x6f
  41a358:	dec    esi
  41a359:	in     al,0xd1
  41a35b:	jae    0x41a311
  41a35d:	ja     0x41a3c9
  41a35f:	pop    edi
  41a360:	(bad)  
  41a361:	std    
  41a362:	in     eax,0xe8
  41a364:	sti    
  41a365:	mov    bl,0xc5
  41a367:	pop    es
  41a368:	pop    ss
  41a369:	xor    dl,BYTE PTR [ebx+0x751ad97c]
  41a36f:	add    bl,BYTE PTR [esp+edx*4-0x2e338d48]
  41a376:	jg     0x41a33a
  41a378:	add    esi,DWORD PTR [edi-0x6e]
  41a37b:	push   ebp
  41a37c:	outs   dx,DWORD PTR ds:[esi]
  41a37d:	call   0x5ed3:0x78385c81
  41a384:	jnp    0x41a400
  41a386:	leave  
  41a387:	adc    bl,BYTE PTR [esi]
  41a389:	jmp    0xab8e07fe
  41a38e:	je     0x41a337
  41a390:	pop    ebx
  41a391:	xor    al,0x32
  41a393:	jmp    0xfb43590c
  41a398:	daa    
  41a399:	mov    eax,ds:0xeeb0992
  41a39e:	aas    
  41a39f:	gs aaa 
  41a3a1:	push   ds
  41a3a2:	sbb    bl,ah
  41a3a4:	je     0x41a41f
  41a3a6:	out    dx,al
  41a3a7:	dec    edx
  41a3a8:	jnp    0x41a346
  41a3aa:	push   ds
  41a3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ac:	out    dx,al
  41a3ad:	cmp    BYTE PTR ds:0xc3acad67,al
  41a3b3:	je     0x41a33e
  41a3b5:	xchg   BYTE PTR [ecx],cl
  41a3b7:	adc    eax,ebp
  41a3b9:	and    al,0x4d
  41a3bb:	adc    ebx,DWORD PTR [esi+ebx*4+0x3d]
  41a3bf:	mov    eax,0xb8a93f89
  41a3c4:	fidivr WORD PTR [esi+0x37be29d6]
  41a3ca:	cmp    al,0x3
  41a3cc:	dec    edx
  41a3cd:	and    BYTE PTR [ebp-0xc],0x78
  41a3d1:	rol    BYTE PTR [edi-0x241d39f9],1
  41a3d7:	and    BYTE PTR [edi+0x2],bh
  41a3da:	jge    0x41a3f9
  41a3dc:	adc    ebx,DWORD PTR [edi]
  41a3de:	std    
  41a3df:	inc    ebp
  41a3e0:	cdq    
  41a3e1:	mov    BYTE PTR [esi+0x5b8e64fd],dl
  41a3e7:	sbb    DWORD PTR [ebx+0xb],ecx
  41a3ea:	fnstcw WORD PTR [eax+0x1f66f4c2]
  41a3f0:	pop    ebx
  41a3f1:	xor    BYTE PTR [eax+0x4cd192c8],0xba
  41a3f8:	pop    eax
  41a3f9:	rcl    DWORD PTR [ecx-0x3e],0x4d
  41a3fd:	repz (bad) 
  41a3ff:	(bad)  
  41a400:	stos   DWORD PTR es:[edi],eax
  41a401:	or     BYTE PTR [esi-0x4f72a677],bl
  41a407:	daa    
  41a408:	mov    ecx,0x479ab30
  41a40d:	cmp    bl,BYTE PTR [ebp+0x7]
  41a410:	test   al,0x30
  41a412:	xor    DWORD PTR [esi],edi
  41a414:	enter  0x8fab,0x97
  41a418:	jmp    0x41a3a0
  41a41a:	cmp    eax,0x3daac87d
  41a41f:	fadd   QWORD PTR [eax]
  41a421:	xor    eax,0x55555264
  41a426:	or     BYTE PTR [edi+0x182dcaa2],cl
  41a42c:	cmp    edi,DWORD PTR [esi+0x18]
  41a42f:	adc    eax,0xaacbd343
  41a434:	stos   DWORD PTR es:[edi],eax
  41a435:	cdq    
  41a436:	mov    ecx,0x6412d319
  41a43b:	(bad)  
  41a43c:	call   0x4e82:0xc5207b06
  41a443:	mov    ds:0xc8a732ee,al
  41a448:	call   0xcac08d92
  41a44d:	rol    BYTE PTR [edx+0x409d722d],cl
  41a453:	xchg   ebx,eax
  41a454:	lahf   
  41a455:	out    0xec,eax
  41a457:	repz jno 0x41a3dd
  41a45a:	not    BYTE PTR [esi-0x5819ac87]
  41a460:	in     eax,0x4f
  41a462:	ja     0x41a479
  41a464:	pop    edi
  41a465:	stos   BYTE PTR es:[edi],al
  41a466:	sbb    dl,dh
  41a468:	xchg   ebx,eax
  41a469:	out    0x63,al
  41a46b:	addr16 (bad) 
  41a46d:	push   edi
  41a46e:	jns    0x41a4ce
  41a470:	fwait
  41a471:	popa   
  41a472:	push   ecx
  41a473:	mov    al,0x5e
  41a475:	stc    
  41a476:	(bad)
  41a47a:	enter  0x782,0xf5
  41a47e:	cmp    eax,0x252379eb
  41a483:	mov    ds:0xb9aeac8d,al
  41a488:	sub    al,0x6e
  41a48a:	not    DWORD PTR [edi+edi*8]
  41a48d:	adc    al,0xf5
  41a48f:	hlt    
  41a490:	stos   BYTE PTR es:[edi],al
  41a491:	nop
  41a492:	int3   
  41a493:	daa    
  41a494:	or     ebp,ebp
  41a496:	in     eax,dx
  41a497:	jae    0x41a487
  41a499:	mov    ecx,0x1cd72afe
  41a49e:	fisubr WORD PTR [ebx]
  41a4a0:	cld    
  41a4a1:	(bad)  
  41a4a2:	xor    BYTE PTR [eax+ecx*2+0x75],dl
  41a4a6:	xchg   esp,eax
  41a4a7:	mov    ebp,0x6fc014d5
  41a4ac:	std    
  41a4ad:	mov    eax,ds:0xb48b4118
  41a4b2:	enter  0x3c2a,0x60
  41a4b6:	leave  
  41a4b7:	push   eax
  41a4b8:	xchg   ebx,eax
  41a4b9:	rcr    DWORD PTR [ebp+0x42c11d2c],0x4c
  41a4c0:	fstp   QWORD PTR [esi+0x26]
  41a4c3:	das    
  41a4c4:	pop    ss
  41a4c5:	cmp    al,0x44
  41a4c7:	dec    ecx
  41a4c8:	in     eax,0x13
  41a4ca:	sbb    al,0xb
  41a4cc:	sbb    BYTE PTR [eax+esi*4],ch
  41a4cf:	jmp    0x6e5f:0x42ad3d17
  41a4d6:	sbb    bl,dh
  41a4d8:	mov    eax,0x37bf44f7
  41a4dd:	mov    ebp,0xdc9ffe95
  41a4e2:	sub    eax,0x4c6e5435
  41a4e7:	mov    ch,0xd4
  41a4e9:	mov    es,WORD PTR [edx-0x1b172415]
  41a4ef:	adc    esp,esp
  41a4f1:	repz into 
  41a4f3:	ins    BYTE PTR es:[edi],dx
  41a4f4:	sub    BYTE PTR [eax+0xf05d6c7],dh
  41a4fa:	dec    edx
  41a4fb:	sbb    BYTE PTR ds:0x704488af,bl
  41a501:	xor    edi,edi
  41a503:	out    0xb9,al
  41a505:	push   ss
  41a506:	clc    
  41a507:	mov    esi,0x44e2defa
  41a50c:	fild   QWORD PTR [ecx+esi*2]
  41a50f:	dec    esp
  41a510:	popf   
  41a511:	inc    ebp
  41a512:	hlt    
  41a513:	pop    edx
  41a514:	pop    esp
  41a515:	aaa    
  41a516:	arpl   WORD PTR [edi],bp
  41a518:	mov    esi,DWORD PTR [edx]
  41a51a:	xor    ecx,edi
  41a51c:	and    bl,al
  41a51e:	sbb    ebp,DWORD PTR ds:0xc24040c8
  41a524:	loopne 0x41a587
  41a526:	or     al,0x11
  41a528:	test   edx,esi
  41a52a:	lods   eax,DWORD PTR ds:[esi]
  41a52b:	sbb    ch,BYTE PTR [edx]
  41a52d:	xor    al,0xf1
  41a52f:	push   ds
  41a530:	xchg   esi,eax
  41a531:	fisubr WORD PTR [edi-0x79]
  41a534:	jne    0x41a4e1
  41a536:	jl     0x41a599
  41a538:	mov    edi,ebx
  41a53a:	sub    BYTE PTR [edx],ah
  41a53c:	xlat   BYTE PTR ds:[ebx]
  41a53d:	xchg   edx,eax
  41a53e:	bound  esp,QWORD PTR [ecx+0x68]
  41a541:	mov    ebp,0x1814ba2e
  41a546:	xor    DWORD PTR [esi+0x6c],0x27b1f8d
  41a54d:	mov    edx,0x2858290a
  41a552:	fsubr  QWORD PTR [edi+0x11]
  41a555:	cmp    al,0x5b
  41a557:	xor    BYTE PTR [esi+ebp*8-0x67],bl
  41a55b:	push   eax
  41a55c:	and    al,0x6
  41a55e:	out    0xb8,al
  41a560:	mov    ecx,0x38ac9842
  41a565:	cmp    BYTE PTR [edi-0x2d],dh
  41a568:	or     DWORD PTR [ebx+edi*1+0x72],esp
  41a56c:	push   es
  41a56d:	dec    eax
  41a56e:	mov    ds:0xd2dbebfb,al
  41a573:	jmp    0x5cfd:0x30b5f4c2
  41a57a:	inc    esi
  41a57b:	aaa    
  41a57c:	push   ss
  41a57d:	dec    ebp
  41a57f:	pop    es
  41a580:	test   al,0x49
  41a582:	mov    eax,0x705fa637
  41a587:	(bad)  
  41a588:	mov    ebp,0xe466a33b
  41a58d:	mov    DWORD PTR [eax-0x58eb1617],eax
  41a593:	in     al,dx
  41a594:	push   ecx
  41a595:	xlat   BYTE PTR ds:[ebx]
  41a596:	push   es
  41a597:	test   eax,0xe420eef
  41a59c:	and    esi,DWORD PTR [esi+0x62276313]
  41a5a2:	mov    dh,bh
  41a5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a5:	loope  0x41a5af
  41a5a7:	fmul   DWORD PTR [esi-0x2ef1da43]
  41a5ad:	(bad)  
  41a5ae:	push   esi
  41a5af:	jbe    0x41a5f9
  41a5b1:	push   esp
  41a5b2:	mov    ecx,0x4d08eef3
  41a5b7:	cmp    BYTE PTR [ebx+esi*2-0x728d6ef9],al
  41a5be:	pop    ecx
  41a5bf:	ins    BYTE PTR es:[edi],dx
  41a5c0:	bound  eax,QWORD PTR [eax+0x31]
  41a5c3:	(bad)  
  41a5c4:	fild   WORD PTR [ecx-0x1f6f2c9]
  41a5ca:	test   eax,0x6e8c67a4
  41a5cf:	cmc    
  41a5d0:	cmp    BYTE PTR [ebx-0x48],bl
  41a5d3:	add    edx,DWORD PTR [esi+0x6f]
  41a5d6:	scas   al,BYTE PTR es:[edi]
  41a5d7:	xchg   ebp,eax
  41a5d8:	pushf  
  41a5d9:	push   ss
  41a5da:	and    BYTE PTR [edx-0x533e371c],dh
  41a5e0:	pop    ds
  41a5e1:	cmp    edi,edi
  41a5e3:	xchg   edi,eax
  41a5e4:	adc    BYTE PTR [ecx+0x53],bl
  41a5e7:	loope  0x41a5b3
  41a5e9:	xlat   BYTE PTR ds:[ebx]
  41a5ea:	(bad)  
  41a5ed:	enter  0x2059,0xc6
  41a5f1:	xchg   ecx,eax
  41a5f2:	call   0x186b3428
  41a5f7:	stos   BYTE PTR es:[edi],al
  41a5f8:	pop    ecx
  41a5f9:	(bad)  
  41a5fa:	push   ebp
  41a5fb:	mov    edi,0x9d91e98e
  41a600:	out    0xd9,al
  41a602:	rcr    DWORD PTR [edx-0x4febd5f4],1
  41a608:	icebp  
  41a609:	ret    
  41a60a:	adc    eax,0xc0207c2c
  41a60f:	mov    edi,0x1c0dd77
  41a614:	daa    
  41a615:	ret    
  41a616:	in     eax,dx
  41a617:	loopne 0x41a642
  41a619:	xchg   DWORD PTR [eax],esi
  41a61b:	xchg   edi,eax
  41a61c:	daa    
  41a61d:	adc    al,0xc8
  41a61f:	or     DWORD PTR [ebx+0xc],ebx
  41a622:	adc    esi,DWORD PTR [ebx+0x1d001b54]
  41a628:	popf   
  41a629:	mov    edx,0x2ed67165
  41a62e:	dec    esi
  41a62f:	pop    ds
  41a630:	je     0x41a5f6
  41a632:	sbb    al,0x77
  41a634:	out    dx,al
  41a635:	dec    ecx
  41a636:	imul   ecx,edi,0x6e
  41a639:	or     ch,BYTE PTR [esi+0x5b00df6a]
  41a63f:	cli    
  41a640:	sub    al,0x3c
  41a642:	pusha  
  41a643:	xchg   esi,eax
  41a644:	jns    0x41a6b9
  41a646:	jno    0x41a6b8
  41a648:	or     ah,dh
  41a64a:	(bad)  
  41a64b:	lock push ebp
  41a64d:	ror    DWORD PTR [esi+0x7c],0xa
  41a651:	retf   
  41a652:	retf   
  41a653:	loop   0x41a6a2
  41a655:	add    cl,BYTE PTR [edi]
  41a657:	lock cmp DWORD PTR [ebp-0x6c],ebp
  41a65b:	fdiv   DWORD PTR [ecx]
  41a65d:	(bad)  
  41a65e:	jle    0x41a62e
  41a660:	push   ecx
  41a661:	mov    esp,0x70aa5e99
  41a666:	pop    es
  41a667:	and    BYTE PTR [ebp-0x70edfaef],bl
  41a66d:	cmp    edx,eax
  41a66f:	cmp    ebp,edi
  41a671:	mov    al,0xc3
  41a673:	xor    eax,0x394f26b3
  41a678:	and    DWORD PTR [edi+esi*8],0xffffffd1
  41a67c:	dec    ebp
  41a67d:	je     0x41a69a
  41a67f:	test   eax,0x3ed6aa55
  41a684:	inc    edi
  41a685:	fldcw  WORD PTR [eax+0x596fbf63]
  41a68b:	test   al,0xfc
  41a68d:	and    bl,dh
  41a68f:	mov    ecx,0xb3a9d93f
  41a694:	out    0x8,eax
  41a696:	push   esi
  41a697:	fadd   DWORD PTR [ebx-0x41ba45a9]
  41a69d:	inc    ecx
  41a69e:	push   esp
  41a69f:	pop    ds
  41a6a0:	imul   ecx,DWORD PTR cs:[esi+eiz*4],0xffffffbc
  41a6a5:	sub    al,0x1e
  41a6a7:	xor    BYTE PTR [ebx+0x7],dh
  41a6aa:	dec    esi
  41a6ab:	inc    esp
  41a6ac:	cld    
  41a6ad:	sar    BYTE PTR [edx-0x384719e2],1
  41a6b3:	les    ebx,FWORD PTR [ebx-0x5c725126]
  41a6b9:	adc    BYTE PTR [ebp+0x70],0x92
  41a6bd:	dec    edi
  41a6be:	scas   eax,DWORD PTR es:[edi]
  41a6bf:	in     eax,0xb5
  41a6c1:	ror    dh,cl
  41a6c3:	pushf  
  41a6c4:	std    
  41a6c5:	jl     0x41a673
  41a6c7:	iret   
  41a6c8:	or     eax,0x48aa03d3
  41a6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ce:	stc    
  41a6cf:	mov    dh,0x1f
  41a6d1:	stos   BYTE PTR es:[edi],al
  41a6d2:	cmp    edx,ebx
  41a6d4:	nop
  41a6d5:	add    edx,DWORD PTR [edi]
  41a6d7:	retf   0x2a3f
  41a6da:	pop    eax
  41a6db:	push   ecx
  41a6dc:	shr    eax,cl
  41a6de:	fwait
  41a6df:	xchg   ebx,eax
  41a6e0:	rol    BYTE PTR [eax+0x5f],0x49
  41a6e4:	pop    ebx
  41a6e5:	mov    esi,cs
  41a6e7:	adc    BYTE PTR [esi-0x7c],0xd4
  41a6eb:	jmp    0x41a6df
  41a6ed:	push   ds
  41a6ee:	das    
  41a6ef:	shl    BYTE PTR [ecx-0x21],0xb3
  41a6f3:	jb     0x41a6cc
  41a6f5:	aas    
  41a6f6:	adc    edx,esp
  41a6f8:	sbb    dl,BYTE PTR [edx+0x734a57df]
  41a6fe:	mov    DWORD PTR [eax+ebp*2-0x62b76611],ecx
  41a705:	in     al,0xe3
  41a707:	mov    ecx,0x374ed435
  41a70c:	and    al,0x2f
  41a70e:	data16 or bh,ah
  41a711:	cmp    edx,DWORD PTR [edx+0x63]
  41a714:	aam    0xf2
  41a716:	arpl   WORD PTR [edx+esi*4],sp
  41a719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a71a:	or     esi,edi
  41a71c:	test   eax,0x9f04053d
  41a721:	les    edi,FWORD PTR fs:[edi-0x60]
  41a725:	test   DWORD PTR [ebx+0x14],esp
  41a728:	stos   DWORD PTR es:[edi],eax
  41a729:	mov    ds:0xcd129a48,eax
  41a72e:	xor    ebx,ecx
  41a730:	and    al,cl
  41a732:	xor    esi,edx
  41a734:	sbb    eax,0xf763f92a
  41a739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a73a:	sbb    ah,dl
  41a73c:	(bad)  
  41a73d:	fild   DWORD PTR ds:0xde5272de
  41a743:	push   ebx
  41a744:	mov    bh,0xd8
  41a746:	jge    0x41a762
  41a748:	or     DWORD PTR [esi],ebp
  41a74a:	inc    edx
  41a74b:	inc    eax
  41a74c:	jle    0x41a6dc
  41a74e:	mov    edx,0xded4e892
  41a753:	xor    ah,al
  41a755:	inc    eax
  41a756:	dec    ecx
  41a757:	adc    BYTE PTR cs:[ecx+0x7c],0x0
  41a75c:	cmc    
  41a75d:	sub    al,BYTE PTR [ebx-0x1a03dd61]
  41a763:	mov    esi,0xaef0cb5f
  41a768:	in     eax,dx
  41a769:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41a76b:	ficom  DWORD PTR [eax-0x20eecfa3]
  41a771:	jae    0x41a7f0
  41a773:	jmp    0x82982c36
  41a778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a779:	xchg   esi,eax
  41a77a:	hlt    
  41a77b:	dec    ecx
  41a77c:	call   FWORD PTR [edx-0x1c42753b]
  41a782:	mov    WORD PTR [eax+edx*4-0x61],ss
  41a786:	jbe    0x41a7e4
  41a788:	outs   dx,DWORD PTR ds:[esi]
  41a789:	pop    edx
  41a78a:	jno    0x41a742
  41a78c:	cmp    al,0x89
  41a78e:	bound  esi,QWORD PTR [edx-0xd6810fd]
  41a794:	(bad)  
  41a796:	jns    0x41a7e8
  41a798:	test   al,0x85
  41a79b:	cmp    edi,eax
  41a79d:	lods   al,BYTE PTR ds:[esi]
  41a79e:	cmp    eax,0xb7e67a57
  41a7a3:	inc    ebp
  41a7a4:	sub    BYTE PTR [eax+ebp*2-0x27],dl
  41a7a8:	ss das 
  41a7aa:	inc    edi
  41a7ab:	mov    ecx,0xf12bb4c0
  41a7b0:	xor    BYTE PTR [edx-0x43],bh
  41a7b3:	mov    ah,0x20
  41a7b5:	sbb    eax,0x85461df4
  41a7ba:	out    0x64,al
  41a7bc:	add    al,0xf5
  41a7be:	adc    ah,BYTE PTR [bx+si]
  41a7c1:	dec    edx
  41a7c2:	(bad)  
  41a7c3:	mov    edx,0xbbbe02e4
  41a7c8:	xchg   DWORD PTR [ebx+0xf],ebx
  41a7cb:	(bad)  
  41a7cc:	dec    edx
  41a7cd:	call   0x3772:0xdd21610b
  41a7d4:	inc    edi
  41a7d5:	(bad)  
  41a7d6:	(bad)  
  41a7d8:	cmp    ebp,DWORD PTR [ebp-0x72]
  41a7db:	dec    edi
  41a7dc:	out    dx,eax
  41a7dd:	or     DWORD PTR [esi+0x8d730fc],eax
  41a7e3:	pop    eax
  41a7e4:	fwait
  41a7e5:	pop    ecx
  41a7e6:	test   DWORD PTR [ebp-0x2ed9f4b8],0x8f3e0804
  41a7f0:	shl    bh,0x76
  41a7f3:	shl    BYTE PTR [esi+ebp*1+0x44],0xfe
  41a7f8:	cs ja  0x41a7ca
  41a7fb:	loopne 0x41a814
  41a7fd:	lea    edi,[ebx+0x4fa8b357]
  41a803:	push   0xa6b25089
  41a808:	cmp    dl,BYTE PTR [edi+0x6b8bd238]
  41a80e:	xchg   ebp,eax
  41a80f:	stos   DWORD PTR es:[edi],eax
  41a810:	xlat   BYTE PTR ds:[ebx]
  41a811:	int3   
  41a812:	xchg   edx,eax
  41a813:	popa   
  41a814:	mov    bl,0x36
  41a816:	fstp   QWORD PTR [edi-0x7]
  41a819:	repz add dl,BYTE PTR [ebp+0x441059b2]
  41a820:	(bad)  
  41a821:	jno    0x41a88b
  41a823:	pop    esi
  41a824:	cmp    eax,DWORD PTR [ecx]
  41a826:	test   DWORD PTR [edx+0x4d],edx
  41a829:	test   BYTE PTR [esi+0x7367e0ff],bh
  41a82f:	ret    
  41a830:	rcr    BYTE PTR [esi-0x19],1
  41a833:	xchg   edi,eax
  41a834:	cmp    esp,DWORD PTR [eax]
  41a836:	dec    esp
  41a837:	dec    ebx
  41a838:	stos   BYTE PTR es:[edi],al
  41a839:	cmp    al,0x52
  41a83b:	pop    es
  41a83c:	gs leave 
  41a83e:	int3   
  41a83f:	retf   
  41a840:	xchg   ebx,eax
  41a841:	outs   dx,DWORD PTR ds:[esi]
  41a842:	je     0x41a8a5
  41a844:	iret   
  41a845:	out    dx,al
  41a846:	pop    ecx
  41a847:	or     esp,edi
  41a849:	arpl   WORD PTR [ebp-0x34],ax
  41a84c:	in     al,dx
  41a84d:	jne    0x41a879
  41a84f:	and    al,0x93
  41a851:	sbb    DWORD PTR [ebp+0x4a],ebp
  41a854:	jbe    0x41a8d4
  41a856:	adc    DWORD PTR [ebx+0x5066847d],edx
  41a85c:	inc    eax
  41a85d:	icebp  
  41a85e:	mov    eax,ds:0xe6e2e608
  41a863:	sbb    al,0x59
  41a865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a866:	pop    es
  41a867:	fnsave [ebx]
  41a869:	mov    al,0x35
  41a86b:	mov    bh,0x62
  41a86d:	jns    0x41a8dc
  41a86f:	push   eax
  41a870:	es mov ch,0x48
  41a873:	and    al,cl
  41a875:	(bad)  
  41a876:	in     al,dx
  41a877:	imul   ecx,ecx,0x63
  41a87a:	mov    ecx,0x87d4a372
  41a87f:	push   ds
  41a880:	add    BYTE PTR [edx+0x40],dl
  41a883:	cli    
  41a884:	lods   eax,DWORD PTR ds:[esi]
  41a885:	lds    ecx,FWORD PTR [eax-0x4508822b]
  41a88b:	fisubr WORD PTR [ebx]
  41a88d:	ss adc dl,dl
  41a890:	(bad)  
  41a892:	sub    eax,DWORD PTR [eax]
  41a894:	mov    cl,ah
  41a896:	out    0xac,eax
  41a898:	or     eax,0x8eed5589
  41a89d:	shl    DWORD PTR [ecx-0x5506bc99],0x2
  41a8a4:	stos   BYTE PTR es:[edi],al
  41a8a5:	test   BYTE PTR [esi-0x1c],cl
  41a8a8:	pop    ebx
  41a8a9:	js     0x41a8b3
  41a8ab:	adc    edx,DWORD PTR [ebx-0x19638568]
  41a8b1:	sar    DWORD PTR [edx-0xd27b812],1
  41a8b7:	mov    DWORD PTR [ecx+esi*2-0x65],ecx
  41a8bb:	xor    DWORD PTR [edi+eiz*2],esi
  41a8be:	pop    es
  41a8bf:	mov    ds:0x1014ba44,eax
  41a8c4:	clc    
  41a8c5:	js     0x41a904
  41a8c7:	adc    eax,0x3b68510f
  41a8cc:	into   
  41a8cd:	push   eax
  41a8ce:	pop    es
  41a8cf:	xchg   esp,eax
  41a8d0:	xchg   BYTE PTR ds:[ebx+ebx*4-0x6e],bh
  41a8d5:	dec    ebx
  41a8d6:	aas    
  41a8d7:	jp     0x41a8c7
  41a8d9:	mov    dh,0x74
  41a8db:	push   edx
  41a8dc:	xchg   edi,eax
  41a8dd:	sahf   
  41a8de:	cmp    BYTE PTR [edi-0x79],bl
  41a8e1:	push   ebp
  41a8e2:	pop    ebx
  41a8e3:	mov    DWORD PTR [ebx-0x7620d371],eax
  41a8e9:	retf   0x7379
  41a8ec:	inc    edi
  41a8ed:	mov    WORD PTR [ebx+0x437f5fe8],ss
  41a8f3:	adc    BYTE PTR [ecx],bl
  41a8f5:	fs dec esp
  41a8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f8:	ror    DWORD PTR [ebp+0x7906e344],1
  41a8fe:	sti    
  41a8ff:	pop    ecx
  41a900:	pushf  
  41a901:	jmp    DWORD PTR [ebx]
  41a903:	mov    ch,0x99
  41a905:	lock out dx,al
  41a907:	adc    ebp,DWORD PTR [ebp-0x3c]
  41a90a:	repz adc DWORD PTR [eax-0x70639572],0xffffffea
  41a912:	push   0x86ad156d
  41a917:	clc    
  41a918:	sbb    edx,DWORD PTR [ebx]
  41a91a:	in     eax,dx
  41a91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a91c:	(bad)  
  41a91d:	and    ecx,DWORD PTR [eax+0x11b0145c]
  41a923:	fist   WORD PTR [ecx+0x7d965685]
  41a929:	popa   
  41a92a:	jmp    FWORD PTR [edx]
  41a92c:	pop    edi
  41a92d:	inc    esi
  41a92e:	retf   0xf235
  41a931:	daa    
  41a932:	jno    0x41a942
  41a934:	mov    ch,BYTE PTR [edi+0x66dd5556]
  41a93a:	xor    dh,BYTE PTR [ebp+0x9ec31b4]
  41a940:	rcl    BYTE PTR [ebp+0x70],1
  41a943:	shr    DWORD PTR [ecx-0x27],0x1b
  41a947:	arpl   di,bp
  41a949:	jo     0x41a926
  41a94b:	xor    ebx,ebp
  41a94d:	nop
  41a94e:	inc    esp
  41a94f:	add    al,0xef
  41a951:	das    
  41a952:	jb     0x41a949
  41a954:	push   edx
  41a955:	shl    BYTE PTR [bx+0x7d],1
  41a959:	push   edx
  41a95a:	pop    ecx
  41a95b:	fwait
  41a95c:	popa   
  41a95d:	cmp    eax,0x886a976d
  41a962:	add    al,0xa1
  41a964:	pusha  
  41a965:	inc    edx
  41a966:	and    ch,BYTE PTR [ecx-0x78]
  41a969:	shl    DWORD PTR [ebp+0x23a087f6],0x21
  41a970:	add    edx,esp
  41a972:	xchg   edi,eax
  41a973:	test   al,0xee
  41a975:	xchg   ebp,eax
  41a976:	dec    esi
  41a977:	enter  0x81e5,0x9b
  41a97b:	add    dl,BYTE PTR [edi+esi*1]
  41a97e:	scas   eax,DWORD PTR es:[edi]
  41a97f:	aas    
  41a980:	je     0x41a92e
  41a982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a983:	cmp    ebx,eax
  41a985:	fidivr WORD PTR [edx+edi*2]
  41a988:	xor    ah,BYTE PTR [edx-0x27f40ee0]
  41a98e:	jns    0x41a9d8
  41a990:	mov    ebx,gs
  41a992:	mov    esi,0x2807b1cc
  41a997:	pop    ebx
  41a998:	add    eax,0x5c4b03f1
  41a99d:	lds    ebx,FWORD PTR [ebp-0x22]
  41a9a0:	mov    ebx,0xd0b3aa4d
  41a9a5:	or     eax,0x3ca4f81b
  41a9aa:	cld    
  41a9ab:	push   ecx
  41a9ac:	nop
  41a9ad:	inc    sp
  41a9af:	imul   esp,DWORD PTR [ecx+0x328372a7],0xffffffc4
  41a9b6:	or     BYTE PTR [ebp+0x57],dl
  41a9b9:	inc    esi
  41a9ba:	xchg   esp,eax
  41a9bb:	std    
  41a9bc:	cmp    DWORD PTR [edx+0x47],ebp
  41a9bf:	fdiv   QWORD PTR [ebp-0x2e]
  41a9c2:	lahf   
  41a9c3:	mov    edi,0x67dd0243
  41a9c8:	into   
  41a9c9:	push   esp
  41a9ca:	mov    dh,BYTE PTR [esi]
  41a9cc:	in     al,0x91
  41a9ce:	lods   al,BYTE PTR ds:[esi]
  41a9cf:	mov    al,ds:0xfae9dc08
  41a9d4:	sub    edx,ecx
  41a9d6:	test   BYTE PTR [ecx],bh
  41a9d8:	mov    dl,0xd4
  41a9da:	xchg   DWORD PTR [ebx+0x3f],esi
  41a9dd:	push   es
  41a9de:	loope  0x41a9ef
  41a9e0:	dec    ecx
  41a9e1:	dec    edi
  41a9e2:	mov    esp,0xd33b5874
  41a9e7:	mov    ebp,0x79b2e532
  41a9ec:	xchg   edi,eax
  41a9ed:	xchg   ecx,eax
  41a9ee:	cli    
  41a9ef:	mov    dl,0x27
  41a9f1:	iret   
  41a9f2:	jne    0x41a9b8
  41a9f4:	push   ebp
  41a9f5:	dec    esi
  41a9f6:	js     0x41a9ed
  41a9f8:	loop   0x41a9e7
  41a9fa:	add    edx,ebp
  41a9fc:	leave  
  41a9fd:	mov    dl,0xb9
  41a9ff:	fldln2 
  41aa01:	or     eax,DWORD PTR ds:0x21a32e7e
  41aa07:	pop    ss
  41aa08:	mov    esi,0x23897db5
  41aa0d:	xchg   edi,eax
  41aa0e:	and    eax,0x6b3e4def
  41aa13:	leave  
  41aa14:	call   0xa69d:0xdc419fd3
  41aa1b:	leave  
  41aa1c:	cmp    ah,ah
  41aa1e:	jno    0x41a9e7
  41aa20:	inc    edx
  41aa21:	or     al,0x34
  41aa23:	fnstenv [edx+0x77]
  41aa26:	outs   dx,DWORD PTR ds:[esi]
  41aa27:	add    al,0x84
  41aa29:	mov    esi,0xe1ab56e5
  41aa2e:	sub    bl,BYTE PTR [eax]
  41aa30:	pop    eax
  41aa31:	xchg   edx,eax
  41aa32:	cmp    bh,BYTE PTR [esi+esi*8]
  41aa35:	mov    ecx,0x3c7cedd8
  41aa3a:	jp     0x41aa8d
  41aa3c:	cvtps2pd xmm4,xmm7
  41aa3f:	clc    
  41aa40:	xor    eax,0x35a79895
  41aa45:	mov    BYTE PTR [esi-0x2352113],cl
  41aa4b:	lahf   
  41aa4c:	stos   BYTE PTR es:[edi],al
  41aa4d:	lock int 0xaa
  41aa50:	mov    ah,0xf9
  41aa52:	loopne 0x41aaac
  41aa54:	xchg   edi,eax
  41aa55:	adc    DWORD PTR [edi],ebx
  41aa57:	jne    0x41a9e8
  41aa59:	scas   eax,DWORD PTR es:[edi]
  41aa5a:	mov    ah,0x6a
  41aa5c:	lods   al,BYTE PTR ds:[esi]
  41aa5d:	mov    eax,ss
  41aa5f:	popa   
  41aa60:	shl    DWORD PTR [ebx+0x16],1
  41aa63:	cld    
  41aa64:	or     eax,DWORD PTR [eax*8-0x1222c109]
  41aa6b:	mov    dh,0xc6
  41aa6d:	sahf   
  41aa6e:	aaa    
  41aa6f:	popf   
  41aa70:	pop    esi
  41aa71:	test   eax,0x9d4d754c
  41aa76:	outs   dx,BYTE PTR ds:[esi]
  41aa77:	push   0xb05ac801
  41aa7c:	jg     0x41aa5a
  41aa7e:	aad    0x88
  41aa80:	inc    esi
  41aa81:	mov    edi,0xf0f8e46a
  41aa86:	cmovo  ecx,DWORD PTR [ebx-0x45cef461]
  41aa8d:	in     eax,dx
  41aa8e:	(bad)  
  41aa8f:	std    
  41aa90:	rcr    BYTE PTR [ecx-0xf],0xe8
  41aa94:	add    al,0x92
  41aa96:	jp     0x41aadc
  41aa98:	in     eax,dx
  41aa99:	or     DWORD PTR ds:0xc50344c5,esp
  41aa9f:	adc    ah,BYTE PTR ds:0x387cd7d
  41aaa5:	xor    al,0x17
  41aaa7:	mov    dl,0x42
  41aaa9:	pop    ds
  41aaaa:	iret   
  41aaab:	imul   edx,DWORD PTR [esi+0x2],0x48
  41aaaf:	inc    esi
  41aab0:	test   eax,0xc2eabce8
  41aab5:	or     ecx,DWORD PTR [esp+eax*2]
  41aab8:	and    eax,0xa655ea09
  41aabd:	sub    eax,0xfda14635
  41aac2:	sbb    bh,BYTE PTR cs:[esi]
  41aac5:	icebp  
  41aac6:	repnz shl BYTE PTR [edi],0x9f
  41aaca:	std    
  41aacb:	jp     0x41aaf0
  41aacd:	out    dx,al
  41aace:	and    BYTE PTR [eax-0x49],0x92
  41aad2:	dec    eax
  41aad3:	xchg   ebp,eax
  41aad4:	les    ebx,FWORD PTR [ebx-0x75]
  41aad7:	pop    edi
  41aad8:	push   0xffffffb2
  41aada:	jae    0x41aa98
  41aadc:	inc    edi
  41aadd:	jb     0x41ab57
  41aadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aae0:	xchg   ebp,eax
  41aae1:	push   ss
  41aae2:	cdq    
  41aae3:	mov    dl,0x39
  41aae5:	iret   
  41aae6:	jno    0x41ab5c
  41aae8:	data16 cld 
  41aaea:	xchg   ebx,ecx
  41aaec:	jb     0x41aac6
  41aaee:	inc    edx
  41aaef:	sbb    BYTE PTR [eax],bh
  41aaf1:	sbb    BYTE PTR [eax+0x208b4a55],ch
  41aaf7:	sbb    BYTE PTR [edi-0x3],bl
  41aafa:	sbb    dl,BYTE PTR ds:0xebcf528b
  41ab00:	idiv   BYTE PTR [edx]
  41ab02:	and    eax,DWORD PTR [edi+0x39604c81]
  41ab08:	mov    edx,0x1268f4b5
  41ab0d:	jb     0x41aaac
  41ab0f:	jle    0x41ab09
  41ab11:	push   edi
  41ab12:	ror    BYTE PTR [ebp-0x29],1
  41ab15:	mov    edi,0x3133e34f
  41ab1a:	add    esi,ebx
  41ab1c:	nop
  41ab1d:	imul   ecx,edx,0x45
  41ab20:	adc    eax,0x22b03162
  41ab25:	jne    0x41ab2f
  41ab27:	xchg   ecx,eax
  41ab28:	jl     0x41ab93
  41ab2a:	fisub  DWORD PTR [edx+0x6]
  41ab2d:	push   ds
  41ab2e:	scas   al,BYTE PTR es:[edi]
  41ab2f:	and    edi,esi
  41ab31:	lock ds pop ecx
  41ab34:	adc    eax,0x7ab0a12
  41ab39:	cmp    ah,BYTE PTR [ecx+eax*2+0x32]
  41ab3d:	push   esi
  41ab3e:	pop    esp
  41ab3f:	xchg   esp,eax
  41ab40:	loopne 0x41aacf
  41ab42:	adc    DWORD PTR [eax],ebp
  41ab44:	in     al,0x42
  41ab46:	in     al,dx
  41ab47:	adc    edx,DWORD PTR [esi+ebp*8-0x32]
  41ab4b:	dec    ebp
  41ab4c:	sti    
  41ab4d:	data16 not BYTE PTR [edi]
  41ab50:	cmp    bh,BYTE PTR [ebx]
  41ab52:	lea    ebx,[ebx+eiz*4-0x66]
  41ab56:	add    al,0x90
  41ab58:	dec    esp
  41ab59:	mov    al,0xa1
  41ab5b:	mov    esi,0xf292a386
  41ab60:	in     al,0x35
  41ab62:	jmp    0xdb23f3fa
  41ab67:	popf   
  41ab68:	xchg   edi,eax
  41ab69:	stc    
  41ab6a:	(bad)  
  41ab6b:	jnp    0x41ab37
  41ab6d:	add    bl,BYTE PTR [edi+0x4c]
  41ab70:	mov    bh,0x14
  41ab72:	pop    eax
  41ab73:	mov    ah,0x20
  41ab75:	pop    eax
  41ab76:	lahf   
  41ab77:	idiv   DWORD PTR [ebp+0x44]
  41ab7a:	lds    edi,FWORD PTR [eiz*4+0x204723e8]
  41ab81:	push   0xffffffcf
  41ab83:	xchg   esp,eax
  41ab84:	adc    DWORD PTR [edx+0x3bc2a53],ebx
  41ab8a:	xor    al,0x53
  41ab8c:	das    
  41ab8d:	mov    ch,0xb4
  41ab8f:	xchg   BYTE PTR [ebp+ebx*8+0x31],cl
  41ab93:	mov    ebp,0xbb9eca93
  41ab98:	into   
  41ab99:	and    edi,DWORD PTR [edx-0x49bf3be9]
  41ab9f:	sub    eax,0x6ee80f69
  41aba4:	jbe    0x41ab54
  41aba6:	push   ds
  41aba7:	popa   
  41aba8:	popf   
  41aba9:	lods   eax,DWORD PTR ds:[esi]
  41abaa:	pop    ss
  41abab:	jle    0x41ab5d
  41abad:	pop    es
  41abae:	pop    edx
  41abaf:	mov    bh,0x57
  41abb1:	dec    esp
  41abb2:	fstp   TBYTE PTR [ecx]
  41abb4:	call   0x73b:0x96144301
  41abbb:	xchg   edx,eax
  41abbc:	mov    WORD PTR cs:[ecx+0x2b],ss
  41abc0:	ror    bh,1
  41abc2:	leave  
  41abc3:	mov    ds:0x1f64809a,al
  41abc8:	or     ebx,ebx
  41abca:	xor    DWORD PTR [esi-0x35],ecx
  41abcd:	mov    al,0xa1
  41abcf:	adc    esp,esi
  41abd1:	mov    eax,0x5542b54b
  41abd6:	or     al,0xcc
  41abd8:	mov    BYTE PTR [ebp+0x50],ah
  41abdb:	jp     0x41ab7c
  41abdd:	jae    0x41ab64
  41abdf:	lock push es
  41abe1:	add    ebx,ecx
  41abe3:	xchg   edx,eax
  41abe4:	sub    bh,BYTE PTR [esi]
  41abe6:	pop    eax
  41abe7:	xor    eax,0x9bfc7993
  41abec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abed:	sahf   
  41abee:	gs stos DWORD PTR es:[edi],eax
  41abf0:	jg     0x41abf7
  41abf2:	pop    eax
  41abf3:	adc    DWORD PTR [ecx+edx*2-0x63],0x1c
  41abf8:	sub    BYTE PTR [ebx-0x13],bh
  41abfb:	(bad)
  41abfe:	xor    edi,DWORD PTR [ebx+esi*2+0x124389a0]
  41ac05:	mov    fs,WORD PTR [edi-0x27ea45af]
  41ac0b:	cld    
  41ac0c:	fnstcw WORD PTR [edi]
  41ac0e:	fld    st(6)
  41ac10:	in     eax,0x34
  41ac12:	shl    DWORD PTR [ecx+0x52b44d24],0x92
  41ac19:	inc    edx
  41ac1a:	loop   0x41ac5f
  41ac1c:	xor    edx,esp
  41ac1e:	imul   esi,esp,0x46bfbbd2
  41ac24:	fwait
  41ac25:	stc    
  41ac26:	or     eax,0x402185e2
  41ac2b:	adc    bl,al
  41ac2d:	or     BYTE PTR ds:0x10efb8c4,0x39
  41ac34:	loope  0x41aca4
  41ac36:	fist   WORD PTR [eax+0x3f46e949]
  41ac3c:	mov    al,ds:0x7e19783
  41ac41:	data16 and al,0x28
  41ac44:	cli    
  41ac45:	jle    0x41abd6
  41ac47:	jp     0x41abcb
  41ac49:	or     cl,BYTE PTR [ebp-0x4abb4fea]
  41ac4f:	retf   
  41ac50:	scas   eax,DWORD PTR es:[edi]
  41ac51:	inc    ecx
  41ac52:	inc    ecx
  41ac53:	jne    0x41abe2
  41ac55:	aad    0x75
  41ac57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac58:	push   es
  41ac59:	adc    al,0xc8
  41ac5b:	adc    eax,0xff6fb50e
  41ac60:	sub    BYTE PTR [esi],dl
  41ac62:	sub    BYTE PTR [eax],cl
  41ac64:	cmp    ebp,edx
  41ac66:	dec    ebx
  41ac67:	mov    esi,0xa8c4fa5e
  41ac6c:	sub    cl,BYTE PTR [ebx-0x65c452ac]
  41ac72:	adc    dl,BYTE PTR [ecx-0xb]
  41ac75:	jno    0x41ac22
  41ac77:	mov    ds:0xabfa8ca7,eax
  41ac7c:	lock test al,0x69
  41ac7f:	das    
  41ac80:	inc    ebp
  41ac81:	mov    bh,BYTE PTR [eax-0x28e1fdf1]
  41ac87:	dec    eax
  41ac88:	xor    edx,edx
  41ac8a:	xchg   edx,eax
  41ac8b:	in     eax,dx
  41ac8c:	cmp    BYTE PTR [esi],0x1c
  41ac8f:	outs   dx,BYTE PTR ds:[esi]
  41ac90:	fdiv   st(7),st
  41ac92:	push   esi
  41ac93:	es out 0x64,al
  41ac96:	bound  si,DWORD PTR [ebp-0x52]
  41ac9a:	jecxz  0x41ac60
  41ac9c:	inc    ebp
  41ac9d:	repz dec esi
  41ac9f:	mov    ebx,0x818c316e
  41aca4:	push   es
  41aca5:	mov    ss,WORD PTR [ecx*8-0x654293c8]
  41acac:	pushf  
  41acad:	bound  ebx,QWORD PTR [ecx-0x63]
  41acb0:	cmp    BYTE PTR [eax+0x3e],cl
  41acb3:	xchg   ecx,eax
  41acb4:	jmp    0xe4709e2d
  41acb9:	ins    DWORD PTR es:[edi],dx
  41acba:	jle    0x41ad38
  41acbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acbd:	inc    edx
  41acbe:	(bad)  
  41acbf:	dec    esi
  41acc0:	fstp   st(0)
  41acc2:	(bad)  
  41acc3:	xor    bl,bl
  41acc5:	and    cl,dh
  41acc7:	sub    DWORD PTR [ebx],0x58
  41acca:	inc    ebp
  41accb:	sar    BYTE PTR [ecx+0x33015b1b],cl
  41acd1:	bound  ebx,QWORD PTR [ecx+0x58]
  41acd4:	fwait
  41acd5:	(bad)  
  41acd6:	in     eax,0x89
  41acd8:	popf   
  41acd9:	mov    bl,0x81
  41acdb:	add    esi,DWORD PTR [ebx-0x2cd7b44d]
  41ace1:	fdivp  st(1),st
  41ace3:	or     DWORD PTR [esi+0x2991dd47],esi
  41ace9:	push   ebx
  41acea:	jle    0x41acbc
  41acec:	das    
  41aced:	push   ebp
  41acee:	loop   0x41ad2f
  41acf0:	or     dh,bl
  41acf2:	adc    BYTE PTR [eax-0x389c5f8],0x7d
  41acf9:	xchg   edi,eax
  41acfa:	add    BYTE PTR [eax-0x68],ah
  41acfd:	pop    ebx
  41acfe:	scas   eax,DWORD PTR es:[edi]
  41acff:	out    0x9b,eax
  41ad01:	das    
  41ad02:	jge    0x41acf8
  41ad04:	ja     0x41ace2
  41ad06:	pop    esp
  41ad07:	jle    0x41ac8b
  41ad09:	ror    dh,1
  41ad0b:	aad    0xb5
  41ad0d:	(bad)  
  41ad0e:	lahf   
  41ad0f:	inc    ebx
  41ad10:	cmp    eax,0x7044bcc1
  41ad15:	mov    dl,0xcf
  41ad17:	test   eax,0x9f929c0e
  41ad1c:	dec    DWORD PTR [esi-0x14bbcbcc]
  41ad22:	jae    0x41acb7
  41ad24:	sbb    eax,0x4580e4ef
  41ad29:	retf   
  41ad2a:	pusha  
  41ad2b:	jae    0x41ad31
  41ad2d:	jnp    0x41ad63
  41ad2f:	sar    DWORD PTR [ebp+0x7c],1
  41ad32:	adc    cl,BYTE PTR [esi]
  41ad34:	jno    0x41adab
  41ad36:	add    edi,DWORD PTR [edi]
  41ad38:	out    dx,al
  41ad39:	aas    
  41ad3a:	mov    cl,0x8
  41ad3c:	rcl    eax,cl
  41ad3e:	enter  0xc316,0xdf
  41ad42:	lods   eax,DWORD PTR ds:[esi]
  41ad43:	inc    si
  41ad45:	push   ebp
  41ad46:	cwde   
  41ad47:	stos   BYTE PTR es:[edi],al
  41ad48:	add    eax,0x9db9c547
  41ad4d:	mov    bh,0x6d
  41ad4f:	jg     0x41ad25
  41ad51:	hlt    
  41ad52:	push   eax
  41ad53:	add    ebp,DWORD PTR ds:0x7abec11d
  41ad59:	les    eax,FWORD PTR [ebx+0x755161b8]
  41ad5f:	lock out 0x7e,al
  41ad62:	push   ds
  41ad63:	fnstsw WORD PTR ds:0xb14b5116
  41ad69:	mov    BYTE PTR [ecx-0x7cbd364a],ah
  41ad6f:	sbb    DWORD PTR [esi+0x5fde14b9],edx
  41ad75:	xor    edx,ebp
  41ad77:	test   al,0xe1
  41ad79:	daa    
  41ad7a:	pop    esp
  41ad7b:	jno    0x41aded
  41ad7d:	sub    eax,DWORD PTR [eax+0x52]
  41ad80:	sub    BYTE PTR [ebp-0x17],ah
  41ad83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad84:	fmul   DWORD PTR [ecx-0xd2be5c6]
  41ad8a:	jae    0x41ad58
  41ad8c:	xchg   BYTE PTR [edx+0xb],dl
  41ad8f:	mov    bl,0x4e
  41ad91:	jmp    0x41ae09
  41ad93:	icebp  
  41ad94:	fsubr  st(5),st
  41ad96:	adc    DWORD PTR [ebp+0x6c],ecx
  41ad99:	popa   
  41ad9a:	nop
  41ad9b:	ret    0x1be3
  41ad9e:	(bad)  
  41ad9f:	fcomp  st(1)
  41ada1:	jbe    0x41adfe
  41ada3:	adc    BYTE PTR [eax-0x4a],cl
  41ada6:	xor    esp,edi
  41ada8:	sar    ebp,1
  41adaa:	shl    BYTE PTR [edi+0x7a45f960],1
  41adb0:	je     0x41ad6f
  41adb2:	push   esp
  41adb3:	mov    edi,0xcda2bbe
  41adb8:	xchg   ebp,eax
  41adb9:	cmc    
  41adba:	out    0xed,al
  41adbc:	xchg   ebp,eax
  41adbd:	mov    ch,0xbb
  41adbf:	loop   0x41ada2
  41adc1:	sar    DWORD PTR [ebp-0x45],0x4a
  41adc5:	mov    bl,BYTE PTR [edi]
  41adc7:	jmp    0xca0a:0xfea3451c
  41adce:	popf   
  41adcf:	aas    
  41add0:	cmc    
  41add1:	shr    BYTE PTR [edx+0x14],cl
  41add4:	(bad)  
  41add5:	jno    0x41addd
  41add7:	scas   al,BYTE PTR es:[edi]
  41add8:	test   eax,0x9c591b9b
  41addd:	jno    0x41ad90
  41addf:	jno    0x41adc9
  41ade1:	sbb    BYTE PTR [edx-0x64dfdf2b],0x6d
  41ade8:	out    0x9,eax
  41adea:	cs pushf 
  41adec:	mov    bl,0x8a
  41adee:	pop    edi
  41adef:	inc    edi
  41adf0:	stc    
  41adf1:	lds    edx,FWORD PTR [edx+0x2ae2acff]
  41adf7:	scas   al,BYTE PTR es:[edi]
  41adf8:	imul   ebx,DWORD PTR [esi+0x29],0xda5aabc4
  41adff:	inc    esi
  41ae00:	jne    0x41ae17
  41ae02:	arpl   bx,ax
  41ae04:	push   0xffffffe2
  41ae06:	lea    ecx,ds:0xdbd6453f
  41ae0c:	jp     0x41ad93
  41ae0e:	ret    
  41ae0f:	jnp    0x41ae45
  41ae11:	pop    ecx
  41ae12:	shl    DWORD PTR [eax+0x52],cl
  41ae15:	mov    al,ds:0x28a253eb
  41ae1a:	mov    ch,0x13
  41ae1c:	mov    WORD PTR [edi-0x26],es
  41ae1f:	mov    ch,0xeb
  41ae21:	loopne 0x41ae50
  41ae23:	inc    esi
  41ae24:	pop    edx
  41ae25:	daa    
  41ae26:	adc    DWORD PTR [esi],edi
  41ae28:	sub    eax,0xa45aa5e8
  41ae2d:	dec    ebx
  41ae2e:	jno    0x41ae81
  41ae30:	out    0x96,al
  41ae32:	or     BYTE PTR [ebx-0x76],ch
  41ae35:	cmp    al,0x90
  41ae37:	(bad)  [edi]
  41ae39:	dec    edx
  41ae3a:	fcom   DWORD PTR [edx-0x2fa8c1ea]
  41ae40:	xor    dh,BYTE PTR [esi]
  41ae42:	adc    edi,DWORD PTR [ecx+ebx*8+0x51]
  41ae46:	enter  0x4f55,0xf5
  41ae4a:	push   0xffffffd5
  41ae4c:	xchg   ebp,eax
  41ae4d:	mov    dh,0xcd
  41ae4f:	sub    dh,BYTE PTR [edi]
  41ae51:	aad    0x48
  41ae53:	jmp    0xcc7a:0x23dc517
  41ae5a:	outs   dx,BYTE PTR ds:[esi]
  41ae5b:	add    ebx,DWORD PTR [edx]
  41ae5d:	adc    DWORD PTR [ecx+0x38],edi
  41ae60:	jle    0x41ae52
  41ae62:	scas   eax,DWORD PTR es:[edi]
  41ae63:	rcl    BYTE PTR [eax],0x8b
  41ae66:	dec    eax
  41ae67:	pop    DWORD PTR [edx-0x9]
  41ae6a:	rcr    BYTE PTR [esi-0x42],cl
  41ae6d:	cmp    bl,bh
  41ae6f:	fdiv   st,st(1)
  41ae71:	adc    eax,eax
  41ae73:	fisub  DWORD PTR [ebp+0x66]
  41ae76:	push   ds
  41ae77:	mov    BYTE PTR [edi],0x3f
  41ae7a:	mov    edx,DWORD PTR [ebx]
  41ae7c:	adc    ebx,DWORD PTR [edx+0x6714b4e5]
  41ae82:	loopne 0x41aea4
  41ae84:	test   DWORD PTR ds:0xae3fb410,eax
  41ae8a:	sbb    eax,0x801aa7f1
  41ae8f:	push   0xb1374f81
  41ae94:	jno    0x41aeda
  41ae96:	dec    ebp
  41ae97:	mov    ebx,0x56e258fe
  41ae9c:	mov    BYTE PTR [ebx+eiz*2+0x565f203c],dh
  41aea3:	inc    ebp
  41aea4:	mov    eax,ds:0xf273f93c
  41aea9:	sub    ah,BYTE PTR [edi-0x55fab7e5]
  41aeaf:	enter  0xc954,0xd0
  41aeb3:	(bad)  
  41aeb4:	adc    BYTE PTR [ebx],dl
  41aeb6:	jnp    0x41ae6c
  41aeb8:	popf   
  41aeb9:	std    
  41aeba:	aad    0xc9
  41aebc:	lds    ebx,FWORD PTR [edx]
  41aebe:	into   
  41aebf:	xchg   esi,eax
  41aec0:	test   al,bl
  41aec2:	dec    eax
  41aec3:	test   ebx,ecx
  41aec5:	push   es
  41aec6:	rcl    esp,0xe2
  41aec9:	(bad)  
  41aeca:	sub    eax,0x8dc8158a
  41aecf:	das    
  41aed0:	and    DWORD PTR ds:0xccce9df0,ecx
  41aed6:	or     BYTE PTR [ecx],al
  41aed8:	(bad)  
  41aed9:	ror    BYTE PTR [ecx],cl
  41aedb:	adc    edx,edi
  41aedd:	push   es
  41aede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aedf:	dec    esp
  41aee0:	ret    
  41aee1:	push   es
  41aee2:	xlat   BYTE PTR ds:[ebx]
  41aee3:	popf   
  41aee4:	sub    edi,esp
  41aee6:	mov    ?,esp
  41aee8:	sub    DWORD PTR [ecx+edi*4+0x50],0xd99ef297
  41aef0:	sahf   
  41aef1:	inc    edx
  41aef2:	data16 in al,0xd2
  41aef5:	sar    BYTE PTR [esi-0x56],cl
  41aef8:	sub    ch,BYTE PTR [edi-0x30]
  41aefb:	aas    
  41aefc:	lahf   
  41aefd:	sahf   
  41aefe:	xor    eax,0x379328f2
  41af03:	mov    eax,0xd8a8f1fb
  41af08:	inc    ecx
  41af09:	aam    0x45
  41af0b:	cld    
  41af0c:	ja     0x41af12
  41af0e:	push   ebp
  41af0f:	lahf   
  41af10:	add    al,0xad
  41af12:	arpl   WORD PTR [ebx-0x68],bp
  41af15:	out    dx,al
  41af16:	fdivr  DWORD PTR [esi+0x4c5b396a]
  41af1c:	imul   esi,ebx,0xffffffbf
  41af1f:	push   es
  41af20:	aam    0xdc
  41af22:	std    
  41af23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af24:	popa   
  41af25:	dec    ebx
  41af26:	inc    edx
  41af27:	mov    cl,0xca
  41af29:	xchg   esi,eax
  41af2a:	sbb    DWORD PTR [ecx+edx*2+0x27],edx
  41af2e:	sub    BYTE PTR [edi],bh
  41af30:	sbb    DWORD PTR [edx],eax
  41af32:	jecxz  0x41aedd
  41af34:	inc    esp
  41af35:	test   eax,0x37b241e0
  41af3a:	sar    DWORD PTR [ecx],cl
  41af3c:	jae    0x41af66
  41af3e:	lahf   
  41af3f:	int    0x7c
  41af41:	fld    TBYTE PTR [eax+0x1a]
  41af44:	cld    
  41af45:	mov    dh,0x46
  41af47:	push   ebp
  41af48:	call   0xeadd:0x8431327b
  41af4f:	jne    0x41aeee
  41af51:	and    DWORD PTR [edi],edx
  41af53:	push   esp
  41af54:	(bad)  
  41af56:	or     DWORD PTR [ebp-0x33],edx
  41af59:	mov    ebp,0xc346d8a7
  41af5e:	xchg   BYTE PTR [eax],dl
  41af60:	pushf  
  41af61:	push   0xd7721841
  41af66:	lods   eax,DWORD PTR ds:[esi]
  41af67:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41af69:	mov    bl,0xb0
  41af6b:	adc    bh,BYTE PTR [esi]
  41af6d:	sub    WORD PTR [eax],ax
  41af70:	lods   al,BYTE PTR ds:[esi]
  41af71:	xlat   BYTE PTR ds:[ebx]
  41af72:	stos   BYTE PTR es:[edi],al
  41af73:	in     eax,0xb1
  41af75:	in     al,0x3
  41af77:	add    BYTE PTR ds:[ebx-0xa],bh
  41af7b:	popa   
  41af7c:	cmp    DWORD PTR [ebp+0x727f5998],0x77a495f5
  41af86:	fisttp WORD PTR [ebx+0x55d694c8]
  41af8c:	pcmpeqd mm0,QWORD PTR ds:0x8431a2a4
  41af93:	loope  0x41af55
  41af95:	cmc    
  41af96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af97:	mov    dh,0xa8
  41af99:	jo     0x41afc2
  41af9b:	add    eax,0x169fe991
  41afa0:	enter  0x9c0f,0xf4
  41afa4:	inc    ebx
  41afa5:	adc    ebx,DWORD PTR [edx]
  41afa7:	repnz push es
  41afa9:	or     eax,0xf5930160
  41afae:	add    DWORD PTR [edi-0x3e],ecx
  41afb1:	call   0x2fc3:0x8d9b69d6
  41afb8:	cmp    eax,0x3c3701ef
  41afbd:	inc    edx
  41afbe:	sbb    DWORD PTR [edx],ebp
  41afc0:	and    bl,BYTE PTR [ecx-0x59]
  41afc3:	imul   BYTE PTR [esi-0x2029c20e]
  41afc9:	imul   BYTE PTR [ecx+esi*4+0x11d45465]
  41afd0:	mov    eax,ds:0x8e851502
  41afd5:	cmp    BYTE PTR [ecx],bl
  41afd7:	ret    
  41afd8:	xlat   BYTE PTR ds:[ebx]
  41afd9:	cli    
  41afda:	ins    DWORD PTR es:[edi],dx
  41afdb:	lahf   
  41afdc:	mov    al,0xd1
  41afde:	inc    BYTE PTR [edi-0x64]
  41afe1:	(bad)  
  41afe2:	repz ja 0x41b049
  41afe5:	lock inc esp
  41afe7:	sbb    ah,BYTE PTR [edi+0x2d554072]
  41afed:	cli    
  41afee:	add    eax,0x7d215bd9
  41aff3:	inc    eax
  41aff4:	jno    0x41afe0
  41aff6:	jl     0x41b065
  41aff8:	ret    
  41aff9:	or     eax,0xbe50b4dc
  41affe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afff:	out    dx,eax
  41b000:	add    esp,edi
  41b002:	test   al,0x83
  41b004:	rcl    DWORD PTR [edx-0x3c0317ce],0x23
  41b00b:	mov    al,ds:0xde45d374
  41b010:	popa   
  41b011:	adc    al,0x21
  41b013:	sbb    DWORD PTR [edx+0x12],ebx
  41b016:	jecxz  0x41afe5
  41b018:	dec    esi
  41b019:	mov    ecx,esi
  41b01b:	das    
  41b01c:	retf   0x7e4b
  41b01f:	les    ebp,FWORD PTR [edi]
  41b021:	dec    edx
  41b022:	add    DWORD PTR [ebp-0x7ceaaed8],esp
  41b028:	and    ch,BYTE PTR [esi]
  41b02a:	icebp  
  41b02b:	mov    ss,WORD PTR [edx+0xf88dd07]
  41b031:	mov    dl,0x4c
  41b033:	clc    
  41b034:	mov    ebp,0x9d917ff8
  41b039:	loop   0x41b070
  41b03b:	inc    esi
  41b03c:	sub    al,0xb5
  41b03e:	or     ch,BYTE PTR [ebx+eiz*8+0x672c5639]
  41b045:	and    edi,DWORD PTR [ebx+ecx*4+0x67]
  41b049:	arpl   dx,cx
  41b04b:	jge    0x41b01a
  41b04d:	dec    eax
  41b04e:	jnp    0x41b066
  41b050:	mov    ds:0x5a17c338,al
  41b055:	mov    al,0xa3
  41b057:	dec    esi
  41b058:	jno    0x41b0bb
  41b05a:	add    esp,DWORD PTR [eax]
  41b05c:	retf   0x60e7
  41b05f:	(bad)  
  41b060:	pop    ss
  41b061:	or     dl,ah
  41b063:	outs   dx,DWORD PTR ds:[esi]
  41b064:	mov    ebx,0x655369f8
  41b069:	in     eax,dx
  41b06a:	add    DWORD PTR [eax],ebp
  41b06c:	push   DWORD PTR [esi+0x69]
  41b06f:	mov    al,ds:0x30507b6e
  41b074:	(bad)  
  41b075:	into   
  41b076:	cwde   
  41b077:	jecxz  0x41b015
  41b079:	mov    eax,0xd3c21c8e
  41b07e:	retf   
  41b07f:	scas   al,BYTE PTR es:[edi]
  41b080:	mov    edx,0x2b49e870
  41b085:	or     al,0xda
  41b087:	out    0xa0,eax
  41b089:	stos   DWORD PTR es:[edi],eax
  41b08a:	adc    ebp,DWORD PTR [edi]
  41b08c:	(bad)  
  41b08d:	or     eax,0xe7d69395
  41b092:	cmp    ebp,edi
  41b094:	xlat   BYTE PTR ds:[ebx]
  41b095:	lea    ecx,[ecx+0x57]
  41b098:	sbb    ch,BYTE PTR [ebp-0x7b22befc]
  41b09e:	(bad)  
  41b09f:	call   0x4bfd:0xf13d4e7b
  41b0a6:	scas   al,BYTE PTR es:[edi]
  41b0a7:	cmp    bh,BYTE PTR [esi]
  41b0a9:	(bad)  
  41b0aa:	aam    0x57
  41b0ac:	and    al,0xa4
  41b0ae:	pop    edx
  41b0af:	popa   
  41b0b0:	in     al,0xe5
  41b0b2:	pop    edx
  41b0b3:	fs cli 
  41b0b5:	es xor al,0x51
  41b0b8:	xchg   BYTE PTR [ecx-0x4a6d075b],dh
  41b0be:	sbb    DWORD PTR [esi+edx*4],0x644c477e
  41b0c5:	fld    DWORD PTR [eax]
  41b0c7:	add    al,0x5
  41b0c9:	xchg   BYTE PTR [edi*2+0x2c773061],bl
  41b0d0:	(bad)  
  41b0d1:	mov    cl,0x6c
  41b0d3:	sahf   
  41b0d4:	xor    ch,BYTE PTR [esi-0xc96d430]
  41b0da:	pop    ss
  41b0db:	adc    eax,0x1c3138e0
  41b0e0:	ret    0xbac3
  41b0e3:	adc    eax,DWORD PTR [ecx+eax*2+0x17fcf7c6]
  41b0ea:	and    bh,BYTE PTR [ebp+0x52276b50]
  41b0f0:	daa    
  41b0f1:	cli    
  41b0f2:	mov    BYTE PTR ds:0x1b42ac9a,al
  41b0f8:	sbb    ch,ch
  41b0fa:	push   esp
  41b0fb:	push   esp
  41b0fc:	test   al,0x94
  41b0fe:	mov    cl,0x76
  41b100:	mov    dl,0x21
  41b102:	pop    esp
  41b103:	dec    edi
  41b104:	sub    esi,DWORD PTR [edx]
  41b106:	or     DWORD PTR [ecx],ebp
  41b108:	xor    esp,DWORD PTR [eax]
  41b10a:	lds    edi,FWORD PTR [ecx+0x79]
  41b10d:	mov    edx,0xce18bf58
  41b112:	dec    esp
  41b113:	(bad)  
  41b114:	into   
  41b115:	cmp    BYTE PTR [ebp-0x54],0xd
  41b119:	add    eax,edx
  41b11b:	inc    esp
  41b11c:	inc    ebx
  41b11d:	sub    bl,BYTE PTR [edi+0x2d]
  41b120:	add    cl,bl
  41b122:	or     ecx,DWORD PTR [ebp+0x1c]
  41b125:	push   esi
  41b126:	popa   
  41b127:	push   ecx
  41b128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b129:	scas   eax,DWORD PTR es:[edi]
  41b12a:	test   al,0x19
  41b12c:	dec    esp
  41b12d:	(bad)  
  41b12e:	push   cs
  41b12f:	lahf   
  41b130:	jb     0x41b0bc
  41b132:	inc    esp
  41b133:	xchg   BYTE PTR [edx],bh
  41b135:	xor    BYTE PTR [edx],0x38
  41b138:	xchg   esi,eax
  41b139:	mov    BYTE PTR [ebp-0x55],dh
  41b13c:	enter  0x1f61,0x86
  41b140:	daa    
  41b141:	sub    esi,edi
  41b143:	mov    dl,0x10
  41b145:	add    al,BYTE PTR [edi-0x3a67f23e]
  41b14b:	inc    ecx
  41b14c:	es jp  0x41b1af
  41b14f:	outs   dx,DWORD PTR ds:[esi]
  41b150:	xor    BYTE PTR [ebx-0x6],ah
  41b153:	pop    esi
  41b154:	mov    eax,DWORD PTR [ebp+0x1a]
  41b157:	(bad)  
  41b158:	jns    0x41b129
  41b15a:	daa    
  41b15b:	dec    edi
  41b15c:	sbb    ch,ch
  41b15e:	loop   0x41b161
  41b160:	push   ss
  41b161:	fnstenv [ebp+0x66]
  41b164:	xchg   BYTE PTR [ebp+0x46a86d7a],ah
  41b16a:	sub    eax,0x9d1b9748
  41b16f:	call   0xeaa9:0x68433cee
  41b176:	popf   
  41b177:	inc    edx
  41b179:	(bad)  
  41b17b:	pop    esi
  41b17c:	nop
  41b17d:	mov    BYTE PTR [edi],dh
  41b17f:	mov    ds:0xb0d8d05b,eax
  41b184:	lahf   
  41b185:	mov    ch,0xf4
  41b187:	icebp  
  41b188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b189:	sub    ebx,DWORD PTR [ebx+edi*1-0x5a]
  41b18d:	mov    ch,bl
  41b18f:	pop    ebp
  41b190:	push   esi
  41b191:	sti    
  41b192:	xchg   edx,eax
  41b193:	and    dh,BYTE PTR [edx]
  41b195:	sbb    DWORD PTR [eax-0x5c],ebp
  41b198:	inc    edi
  41b199:	stc    
  41b19a:	pop    es
  41b19b:	jmp    DWORD PTR [ecx+0x60ffbfe9]
  41b1a1:	ins    DWORD PTR es:[edi],dx
  41b1a2:	out    dx,al
  41b1a3:	aaa    
  41b1a4:	jecxz  0x41b208
  41b1a6:	scas   eax,DWORD PTR es:[edi]
  41b1a7:	call   0x1d01:0x4979162e
  41b1ae:	cld    
  41b1af:	mov    BYTE PTR [edx-0x72458789],al
  41b1b5:	jae    0x41b169
  41b1b7:	or     BYTE PTR [esi+0x280ebaea],0x58
  41b1be:	out    0xd3,eax
  41b1c0:	test   edx,0x200e60d7
  41b1c6:	lds    ecx,FWORD PTR [edi+edx*8+0x6621bd85]
  41b1cd:	push   ebx
  41b1ce:	scas   al,BYTE PTR es:[edi]
  41b1cf:	fcomp  DWORD PTR [esi-0x36]
  41b1d2:	loopne 0x41b16d
  41b1d4:	test   BYTE PTR [eax+edi*8],ah
  41b1d7:	jno    0x41b17c
  41b1d9:	test   DWORD PTR [ecx-0x2b],ebp
  41b1dc:	add    al,0xf9
  41b1de:	outs   dx,DWORD PTR ds:[esi]
  41b1df:	sub    BYTE PTR [eax],cl
  41b1e1:	lods   al,BYTE PTR ds:[esi]
  41b1e2:	cmp    BYTE PTR [ebx+0x29f539ad],0x37
  41b1e9:	jno    0x41b1c2
  41b1eb:	jmp    0x68ee48be
  41b1f0:	shl    BYTE PTR [ebx+ebx*2+0x42],0x51
  41b1f5:	frstor [ebp+0x4daef5fd]
  41b1fb:	cmp    BYTE PTR [eax-0x62cae2eb],bh
  41b201:	mov    WORD PTR [ecx-0x19],?
  41b204:	ins    BYTE PTR es:[edi],dx
  41b205:	div    DWORD PTR [edx-0x51]
  41b208:	jns    0x41b20e
  41b20a:	loope  0x41b1fe
  41b20c:	mov    ebx,edx
  41b20e:	add    DWORD PTR [ebp-0x5be6abe7],esi
  41b214:	mov    ds:0x1c73673d,al
  41b219:	imul   edi,esp,0x7a66eae9
  41b21f:	lods   al,BYTE PTR ds:[esi]
  41b220:	mov    dl,0x40
  41b222:	cwde   
  41b223:	out    dx,al
  41b224:	leave  
  41b225:	fdivp  st(0),st
  41b227:	pop    ebp
  41b228:	mov    al,0x2e
  41b22a:	dec    esp
  41b22b:	inc    ebx
  41b22c:	inc    ebp
  41b22d:	adc    eax,0xaf4b1371
  41b232:	leave  
  41b233:	rcl    edi,1
  41b235:	fidivr WORD PTR [esi+0xa]
  41b238:	cmp    ah,al
  41b23a:	push   eax
  41b23b:	(bad)  
  41b23c:	(bad)  
  41b23d:	xchg   ebp,eax
  41b23e:	jmp    0x8b11:0x71a8d8f7
  41b245:	sub    eax,0xda04c54b
  41b24a:	cli    
  41b24b:	mov    es,WORD PTR [ebx+0x3f24e5ec]
  41b251:	mov    dh,0xe9
  41b253:	jp     0x41b1fa
  41b255:	test   eax,0xfb7c5629
  41b25a:	mov    esp,0x4582a58b
  41b25f:	fadd   st,st(3)
  41b261:	stos   DWORD PTR es:[edi],eax
  41b262:	jl     0x41b1fc
  41b264:	cs push esp
  41b266:	fldl2e 
  41b268:	stos   DWORD PTR es:[edi],eax
  41b269:	bound  edx,QWORD PTR [ebx+0x6f]
  41b26c:	add    bh,BYTE PTR [ebx-0x7e]
  41b26f:	loopne 0x41b223
  41b271:	xor    DWORD PTR [edx-0x2612fbd8],esp
  41b277:	push   0xfffffff2
  41b279:	lock adc eax,0x6d7e6c75
  41b27f:	fnstcw WORD PTR [eax]
  41b281:	and    cl,BYTE PTR [eax+0xd99b109]
  41b287:	pop    ds
  41b288:	dec    esi
  41b289:	mov    eax,ds:0xd3ba068a
  41b28e:	fisubr DWORD PTR [edi+0x63]
  41b291:	adc    eax,0x95877b75
  41b296:	scas   eax,DWORD PTR es:[edi]
  41b297:	imul   ebx,DWORD PTR [ecx],0x21
  41b29a:	sub    al,BYTE PTR [esi]
  41b29c:	push   0x8b36f080
  41b2a1:	and    esp,DWORD PTR [edx-0x12]
  41b2a4:	xrelease mov DWORD PTR ds:0x51961caf,esp
  41b2ab:	lds    edi,FWORD PTR [esi]
  41b2ad:	add    DWORD PTR [edx-0x43],edx
  41b2b0:	mov    esi,0x398d42ac
  41b2b5:	sbb    DWORD PTR [edi-0x6d],ebx
  41b2b8:	mov    edi,0xe923280a
  41b2bd:	aas    
  41b2be:	clc    
  41b2bf:	(bad)  
  41b2c1:	and    DWORD PTR [esi+0x56eb952b],edx
  41b2c7:	xchg   esi,eax
  41b2c8:	or     al,0x86
  41b2ca:	pop    edi
  41b2cb:	nop
  41b2cc:	xor    bh,BYTE PTR [eax+ebx*4-0x72]
  41b2d0:	cmp    eax,0x41bc993a
  41b2d5:	add    ebp,eax
  41b2d7:	addr16 mov eax,0x7d3cdee
  41b2dd:	(bad)  
  41b2de:	fld    QWORD PTR [ecx+0x3a]
  41b2e1:	sbb    BYTE PTR [ebx+ebx*1+0x3ea83818],al
  41b2e8:	dec    ecx
  41b2e9:	mov    bh,0xc8
  41b2eb:	push   cs
  41b2ec:	adc    BYTE PTR [eax+0x36],ch
  41b2ef:	stos   DWORD PTR es:[edi],eax
  41b2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2f1:	pop    edi
  41b2f2:	xchg   esi,eax
  41b2f3:	pop    esi
  41b2f4:	std    
  41b2f5:	add    DWORD PTR ds:0xa58f04a7,eax
  41b2fb:	(bad)  
  41b2fc:	or     al,0x14
  41b2fe:	lds    ecx,FWORD PTR ds:0xcd070aaa
  41b304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b305:	push   esi
  41b306:	fadd   st(4),st
  41b308:	mov    dh,0xbd
  41b30a:	pop    esp
  41b30b:	lods   al,BYTE PTR ds:[esi]
  41b30c:	jle    0x41b2a9
  41b30e:	leave  
  41b30f:	and    BYTE PTR [edx],0x2
  41b312:	ficom  WORD PTR [esi-0x789f48df]
  41b318:	pop    ss
  41b319:	fstp   DWORD PTR [esi-0x5ed353cb]
  41b31f:	dec    esp
  41b320:	enter  0x6001,0x26
  41b324:	lock pop ds
  41b326:	(bad)  
  41b327:	bound  esi,QWORD PTR [edi]
  41b329:	push   ebx
  41b32a:	test   BYTE PTR [edx-0x3b777108],0xf9
  41b331:	ret    0xf0e2
  41b334:	pop    edx
  41b335:	push   es
  41b336:	lods   eax,DWORD PTR ds:[esi]
  41b337:	sar    DWORD PTR [ebp+0x64],1
  41b33a:	cwde   
  41b33b:	out    dx,eax
  41b33c:	(bad)  
  41b33d:	loope  0x41b2ef
  41b33f:	test   DWORD PTR [eax-0x48da9f8f],edi
  41b345:	jno    0x41b36b
  41b347:	jp     0x41b3b2
  41b349:	loop   0x41b354
  41b34b:	mov    ebp,0xb0d89937
  41b350:	xor    BYTE PTR [ecx-0x7b269cdf],bh
  41b356:	mov    edx,0xbd0fafbf
  41b35b:	icebp  
  41b35c:	mov    ds:0xbc3ff471,eax
  41b361:	add    DWORD PTR [edx+eax*2],ebp
  41b364:	mov    bl,0x78
  41b366:	inc    ebx
  41b367:	cmp    DWORD PTR [eax],esp
  41b369:	dec    esp
  41b36a:	inc    esp
  41b36b:	inc    esi
  41b36c:	mov    esp,DWORD PTR ds:0xb89de7e6
  41b372:	bound  esi,QWORD PTR [esi]
  41b374:	mov    ebp,DWORD PTR [edx+0x208a50e4]
  41b37a:	mov    edi,0x35ce204c
  41b37f:	mov    edx,0xd346b05d
  41b384:	xlat   BYTE PTR ds:[ebx]
  41b385:	push   eax
  41b386:	inc    edx
  41b387:	add    cl,BYTE PTR [esi+0x73684e95]
  41b38d:	ret    0x43f6
  41b390:	fsub   st(5),st
  41b392:	mov    eax,0x322f7cde
  41b397:	xchg   ecx,eax
  41b398:	mov    ch,0x22
  41b39a:	add    eax,edi
  41b39c:	(bad)  
  41b39d:	dec    esi
  41b39e:	mov    eax,ds:0x787cea80
  41b3a3:	mov    WORD PTR [edi+0x7db58dbc],gs
  41b3a9:	aas    
  41b3aa:	ja     0x41b396
  41b3ac:	retf   
  41b3ad:	mov    ebx,0xac8c0f3b
  41b3b2:	or     eax,0x525db615
  41b3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3b8:	clc    
  41b3b9:	ret    
  41b3ba:	jno    0x41b393
  41b3bc:	mov    esp,0x8c837399
  41b3c1:	or     eax,0xc450aa33
  41b3c6:	xchg   edi,eax
  41b3c7:	jno    0x41b387
  41b3c9:	mov    BYTE PTR [eax-0x38fe5d77],0xf7
  41b3d0:	ficom  WORD PTR [edx-0x30]
  41b3d3:	adc    al,cl
  41b3d5:	(bad)  
  41b3d6:	es cmp al,0xf9
  41b3d9:	inc    ecx
  41b3da:	cld    
  41b3db:	xchg   ebp,eax
  41b3dc:	ja     0x6f33b2db
  41b3e2:	sahf   
  41b3e3:	outs   dx,BYTE PTR ds:[esi]
  41b3e4:	sub    ebx,DWORD PTR [esi+0x4b]
  41b3e7:	loop   0x41b446
  41b3e9:	out    0x26,eax
  41b3eb:	fbld   TBYTE PTR [esi]
  41b3ed:	(bad)  
  41b3ee:	icebp  
  41b3ef:	rcl    DWORD PTR [ecx-0x45],0xa5
  41b3f3:	mov    dh,0x18
  41b3f5:	clc    
  41b3f6:	popf   
  41b3f7:	sahf   
  41b3f8:	jne    0x41b39f
  41b3fa:	nop
  41b3fb:	aam    0xe7
  41b3fd:	and    ecx,DWORD PTR [ebx]
  41b3ff:	imul   dl
  41b401:	sbb    esp,ebp
  41b403:	xchg   esp,eax
  41b404:	adc    eax,0x493de557
  41b409:	sub    bh,dl
  41b40b:	std    
  41b40c:	xchg   esi,eax
  41b40d:	cmp    eax,0xbc44443d
  41b412:	jmp    0x17b7a105
  41b417:	out    dx,eax
  41b418:	(bad)  
  41b419:	sub    DWORD PTR [ebx+0x65],ebp
  41b41c:	outs   dx,DWORD PTR ds:[esi]
  41b41d:	pop    ss
  41b41e:	scas   al,BYTE PTR es:[edi]
  41b41f:	xchg   esi,eax
  41b420:	mov    DWORD PTR [esi+0x75],eax
  41b423:	jne    0x41b440
  41b425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b426:	pop    es
  41b427:	lods   eax,DWORD PTR ds:[esi]
  41b428:	jbe    0x41b3d2
  41b42a:	cmp    eax,DWORD PTR [edx+ebp*4]
  41b42d:	(bad)  
  41b42f:	(bad)  
  41b430:	jbe    0x41b3c4
  41b432:	addr16 xor eax,0xa038a33
  41b438:	add    DWORD PTR [esi+0x7d1ef407],ebp
  41b43e:	repnz fsub DWORD PTR [si+0x5348]
  41b444:	ds push 0xffffffd3
  41b447:	ret    
  41b448:	or     eax,0x9966a827
  41b44d:	xor    ebp,DWORD PTR [esi]
  41b44f:	push   cs
  41b450:	jno    0x41b3df
  41b452:	fdiv   DWORD PTR [edi]
  41b454:	gs dec ebp
  41b456:	inc    edi
  41b457:	(bad)  [ebx+eax*8-0x4babc053]
  41b45e:	popa   
  41b45f:	mov    ebp,0x7abcf138
  41b464:	mov    eax,ds:0x907d32bb
  41b469:	push   ebx
  41b46a:	mov    bl,0x9d
  41b46c:	dec    esp
  41b46e:	or     eax,0xbae7a509
  41b473:	jmp    0x4b7a:0xa859779c
  41b47a:	cmp    cl,al
  41b47c:	xor    eax,0xbf364510
  41b481:	pop    edx
  41b482:	adc    eax,0x2b11b3a3
  41b487:	cmp    al,0x4b
  41b489:	scas   eax,DWORD PTR es:[edi]
  41b48a:	aaa    
  41b48b:	cld    
  41b48c:	push   edi
  41b48d:	inc    esi
  41b48e:	sar    al,1
  41b490:	pop    esi
  41b491:	add    BYTE PTR [ebp+0x1b],0x7
  41b495:	add    esp,edx
  41b497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b498:	div    BYTE PTR [esi]
  41b49a:	ret    
  41b49b:	sbb    eax,0xbd7b9048
  41b4a0:	stos   BYTE PTR es:[edi],al
  41b4a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4a2:	jp     0x41b4a6
  41b4a4:	sub    BYTE PTR [eax+0x4],bl
  41b4a7:	cmc    
  41b4a8:	loopne 0x41b508
  41b4aa:	outs   dx,DWORD PTR ds:[esi]
  41b4ab:	ret    0xc358
  41b4ae:	ss or  dl,ah
  41b4b1:	data16 mov BYTE PTR [ebx-0x72],al
  41b4b5:	mov    eax,ds:0xc9333ec1
  41b4ba:	sbb    cl,dl
  41b4bc:	stc    
  41b4bd:	rcr    BYTE PTR [ebx],1
  41b4bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4c0:	mov    al,bl
  41b4c2:	or     al,0xef
  41b4c4:	or     ecx,DWORD PTR [edi]
  41b4c6:	add    cl,ch
  41b4c8:	mov    DWORD PTR [ebp+0x6ac6c633],ebx
  41b4ce:	xchg   esp,eax
  41b4cf:	in     eax,0x56
  41b4d1:	pop    edi
  41b4d2:	or     ebx,esp
  41b4d4:	sbb    DWORD PTR [ebx-0x70d9e4c6],eax
  41b4da:	add    al,0xd9
  41b4dc:	bound  edx,QWORD PTR [edx+0x3c]
  41b4df:	js     0x41b4cd
  41b4e1:	or     ah,BYTE PTR [ebx-0x5e054652]
  41b4e7:	loope  0x41b506
  41b4e9:	xchg   ebp,eax
  41b4ea:	and    eax,DWORD PTR [eax+0xc]
  41b4ed:	into   
  41b4ee:	pop    ds
  41b4ef:	jg     0x41b4c8
  41b4f1:	addr16 in eax,dx
  41b4f3:	inc    ebp
  41b4f4:	ror    DWORD PTR [eax+0x5b],0x3f
  41b4f8:	fisub  DWORD PTR [esi+0x452494f5]
  41b4fe:	stos   DWORD PTR es:[edi],eax
  41b4ff:	gs mov esi,0x85595a71
  41b505:	popf   
  41b506:	inc    ebx
  41b507:	add    al,0xf8
  41b509:	scas   eax,DWORD PTR es:[edi]
  41b50a:	xchg   esi,eax
  41b50b:	jmp    0x1b86:0x50b83e2a
  41b512:	jle    0x41b566
  41b514:	int    0xd6
  41b516:	cdq    
  41b517:	aam    0x7b
  41b519:	and    DWORD PTR [edi+0x36c6b4e],edx
  41b51f:	xor    edx,esi
  41b521:	cmp    al,0xd3
  41b523:	adc    al,0xa1
  41b525:	outs   dx,DWORD PTR ds:[si]
  41b527:	push   cs
  41b528:	fs lahf 
  41b52a:	mov    bh,0x59
  41b52c:	imul   esp,ecx,0xffffffb3
  41b52f:	(bad)  
  41b530:	mov    eax,0x3cea3727
  41b535:	mov    ecx,0x2f51562c
  41b53a:	pop    esi
  41b53b:	sbb    al,0x9d
  41b53d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b53f:	(bad)  
  41b540:	cmc    
  41b541:	ja     0x41b5b3
  41b543:	lods   eax,DWORD PTR ds:[esi]
  41b544:	rcr    BYTE PTR [ebp-0x6],1
  41b547:	ins    BYTE PTR es:[edi],dx
  41b548:	lahf   
  41b549:	imul   eax,ebp,0x7d
  41b54c:	pusha  
  41b54d:	dec    ebx
  41b54e:	call   0xc30fab8d
  41b553:	inc    ebx
  41b554:	add    eax,0x1eddf8c8
  41b559:	in     al,dx
  41b55a:	and    ah,BYTE PTR [edx-0x80]
  41b55d:	jnp    0x41b4f0
  41b55f:	call   0x3ac3:0x1d872a53
  41b566:	cmp    ebx,DWORD PTR [bp+di]
  41b569:	sbb    eax,0x33ab8a1b
  41b56e:	clc    
  41b56f:	pop    esp
  41b570:	fsubr  st,st(5)
  41b572:	pop    ecx
  41b573:	ja     0x41b5a7
  41b575:	mov    ss,WORD PTR [esi+0x746b4f74]
  41b57b:	les    ebp,FWORD PTR [ecx+eiz*8+0x627a3aa0]
  41b582:	mov    ebx,0xf491b6b0
  41b587:	daa    
  41b588:	pop    ebp
  41b589:	or     al,0x4f
  41b58b:	push   ebp
  41b58c:	call   0xbcf:0xfa3ba776
  41b593:	ins    BYTE PTR es:[edi],dx
  41b594:	adc    BYTE PTR [ebp-0x1cddfe0f],dh
  41b59a:	in     al,dx
  41b59b:	test   DWORD PTR [edx+0x544e9f06],edi
  41b5a1:	and    ebx,DWORD PTR [ecx+ebx*2-0x70]
  41b5a5:	push   esi
  41b5a6:	sti    
  41b5a7:	xchg   esi,eax
  41b5a8:	adc    al,0x5a
  41b5aa:	lock ficom DWORD PTR [ebp+0x0]
  41b5ae:	outs   dx,BYTE PTR ds:[esi]
  41b5af:	sar    BYTE PTR [ebp-0x20ed7daf],cl
  41b5b5:	fwait
  41b5b6:	sbb    dh,ah
  41b5b8:	mov    ecx,0xdefa474c
  41b5bd:	jmp    0xd358:0x6f3f2df2
  41b5c4:	inc    eax
  41b5c5:	call   0x2d10628d
  41b5ca:	ret    0xfe28
  41b5cd:	add    al,0x78
  41b5cf:	(bad)  
  41b5d0:	jle    0x41b600
  41b5d2:	xchg   ecx,eax
  41b5d3:	mov    ebx,0x28c8df2f
  41b5d8:	xchg   edi,eax
  41b5d9:	(bad)  
  41b5da:	cmc    
  41b5db:	or     esp,DWORD PTR [ecx+0x38]
  41b5de:	sub    ebp,0x3c865dc5
  41b5e4:	scas   al,BYTE PTR es:[edi]
  41b5e5:	xchg   esi,eax
  41b5e6:	ins    BYTE PTR es:[edi],dx
  41b5e7:	xchg   edi,eax
  41b5e8:	jmp    0x41b56e
  41b5ea:	xchg   bh,ch
  41b5ec:	jmp    0x423a0422
  41b5f1:	push   0x5f98b2dc
  41b5f6:	in     al,0x93
  41b5f8:	test   DWORD PTR [esi-0x2a660b5b],ecx
  41b5fe:	jg     0x41b5d8
  41b600:	cmp    al,0xe5
  41b602:	sbb    al,0x4a
  41b604:	inc    ebx
  41b605:	or     esi,ebp
  41b607:	loope  0x41b666
  41b609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b60a:	pop    es
  41b60b:	jbe    0x41b605
  41b60d:	sbb    DWORD PTR ds:0x8aa826a3,edi
  41b613:	mov    cl,0xf1
  41b615:	test   BYTE PTR [edi+0x43],0xfc
  41b619:	adc    edi,DWORD PTR [edx-0x62a785bb]
  41b61f:	xchg   esp,eax
  41b620:	or     eax,0x5ab90ce9
  41b625:	loope  0x41b5b9
  41b627:	push   cs
  41b628:	shl    ch,1
  41b62a:	sbb    BYTE PTR [esi],cl
  41b62c:	push   edx
  41b62d:	or     DWORD PTR [eax+0x44],ebp
  41b630:	xor    ch,BYTE PTR [eax-0x5a0ef4cf]
  41b636:	sbb    BYTE PTR [edx+0x4c36f1f1],bl
  41b63c:	mov    esp,0xf3367262
  41b641:	ins    DWORD PTR es:[edi],dx
  41b642:	pop    DWORD PTR [edi]
  41b644:	retf   0x54e0
  41b647:	xchg   esp,eax
  41b648:	fs xchg ebx,eax
  41b64a:	mov    ds:0x216b3cd1,eax
  41b64f:	add    bh,BYTE PTR [edi+0x2b]
  41b652:	mov    dl,0x22
  41b654:	ins    DWORD PTR es:[edi],dx
  41b655:	adc    cl,BYTE PTR ds:0x92c3bdd7
  41b65b:	xchg   esi,eax
  41b65c:	ret    
  41b65d:	bound  ebx,QWORD PTR [ecx+eax*8]
  41b660:	xor    al,0xd1
  41b662:	dec    ebx
  41b663:	sbb    al,0x23
  41b665:	mov    BYTE PTR [edx-0x7c],bh
  41b668:	jns    0x41b63d
  41b66a:	add    DWORD PTR [edx-0x6a51670c],0xffffffad
  41b671:	in     al,0x99
  41b673:	mov    cl,0x25
  41b675:	pop    ebx
  41b676:	les    esi,FWORD PTR [ebp+0x71]
  41b679:	xor    eax,DWORD PTR [esi-0x6d83c286]
  41b67f:	cmp    ecx,DWORD PTR [eax+0x7a]
  41b682:	or     al,0x50
  41b684:	jbe    0x41b620
  41b686:	scas   al,BYTE PTR es:[edi]
  41b687:	nop
  41b688:	jae    0x41b65c
  41b68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b68b:	shl    esi,1
  41b68d:	loopne 0x41b69f
  41b68f:	mov    ah,0x39
  41b691:	in     eax,0xf1
  41b693:	or     BYTE PTR fs:[edx-0x3d],bl
  41b697:	dec    ebp
  41b698:	xchg   esp,eax
  41b699:	adc    DWORD PTR [ebp+esi*1+0x19c90f46],ecx
  41b6a0:	push   eax
  41b6a1:	adc    DWORD PTR [edx-0x6d],0x6450b37
  41b6a8:	cmp    ebp,ebp
  41b6aa:	shl    DWORD PTR [ebx-0x3014aee2],cl
  41b6b0:	xchg   ebx,eax
  41b6b1:	ficom  WORD PTR [ecx-0x3e]
  41b6b4:	push   0x75
  41b6b6:	into   
  41b6b7:	pop    es
  41b6b8:	nop
  41b6b9:	dec    edi
  41b6ba:	pop    ss
  41b6bb:	(bad)
  41b6bf:	lahf   
  41b6c0:	mov    dl,0x60
  41b6c2:	stos   BYTE PTR es:[edi],al
  41b6c3:	and    eax,0x65ed8d06
  41b6c8:	mov    eax,DWORD PTR [ecx]
  41b6ca:	fadd   QWORD PTR [eax+0x53b4b232]
  41b6d0:	cdq    
  41b6d1:	push   ecx
  41b6d2:	fist   WORD PTR [ebx-0x6dc57bec]
  41b6d8:	pop    ebx
  41b6d9:	mov    BYTE PTR [eax+0x77461f37],al
  41b6df:	adc    DWORD PTR [eax],edi
  41b6e1:	ret    
  41b6e2:	xchg   esi,eax
  41b6e3:	pop    edx
  41b6e4:	add    al,0x16
  41b6e6:	outs   dx,DWORD PTR ds:[esi]
  41b6e7:	mov    eax,0xab075374
  41b6ec:	lea    edx,[edi+0x286a1435]
  41b6f2:	adc    al,0xe4
  41b6f4:	adc    dh,al
  41b6f6:	or     BYTE PTR [ebp+0x5107c8fb],dl
  41b6fc:	in     al,0xc4
  41b6fe:	xor    edi,ecx
  41b700:	(bad)  
  41b701:	push   esp
  41b702:	push   esp
  41b703:	ins    DWORD PTR es:[edi],dx
  41b704:	fnstcw WORD PTR [eax+edi*8]
  41b707:	mov    ebp,0xdbc2268f
  41b70c:	ins    BYTE PTR es:[edi],dx
  41b70d:	(bad)  [ebp-0x61779c4a]
  41b713:	mov    ecx,0x4d5c2177
  41b718:	jle    0x41b716
  41b71a:	inc    edx
  41b71b:	int    0xa2
  41b71d:	and    al,0x13
  41b71f:	ja     0x41b6fd
  41b721:	lds    ecx,FWORD PTR [eax+ebp*8]
  41b724:	mov    edi,0x67fb4cf5
  41b729:	jno    0x41b7a0
  41b72b:	and    ebx,DWORD PTR [ecx+0x60]
  41b72e:	add    dl,BYTE PTR [ebp-0x30]
  41b731:	and    ecx,DWORD PTR [eax]
  41b733:	mov    ebx,0x5144887e
  41b738:	int3   
  41b739:	inc    eax
  41b73a:	lods   al,BYTE PTR ds:[esi]
  41b73b:	add    edx,DWORD PTR [ecx+edi*4+0x9709479]
  41b742:	mov    edi,0xd3687600
  41b747:	mov    ebp,0x9e69e756
  41b74c:	fst    DWORD PTR [eax-0x55904e05]
  41b752:	loop   0x41b738
  41b754:	cmp    BYTE PTR ds:0x8f89f326,cl
  41b75a:	and    cl,ah
  41b75c:	or     ecx,DWORD PTR [edx+edi*8+0x1e]
  41b760:	jecxz  0x41b73f
  41b762:	pop    es
  41b763:	mov    edx,0x23dca0ec
  41b768:	pop    edi
  41b769:	mov    ds:0xe5ffabbf,eax
  41b76e:	shl    DWORD PTR [eax],cl
  41b770:	mov    bh,0xad
  41b772:	cli    
  41b773:	pushf  
  41b774:	cmp    ah,cl
  41b776:	mov    dh,0x5a
  41b778:	int3   
  41b779:	sahf   
  41b77a:	data16 lahf 
  41b77c:	mov    ebp,0xe8b86689
  41b781:	(bad)  
  41b782:	hlt    
  41b783:	js     0x41b752
  41b785:	fcom   QWORD PTR [ecx+0x7dd91988]
  41b78b:	(bad)  
  41b78c:	popa   
  41b78d:	sbb    bh,BYTE PTR [eax]
  41b78f:	aad    0x77
  41b791:	clc    
  41b792:	mov    ecx,0xadd9f195
  41b797:	(bad)  
  41b798:	(bad)  
  41b799:	test   DWORD PTR [ecx-0x65],0x4df3c0a0
  41b7a0:	call   0x8ebd:0x4ab6992
  41b7a7:	es scas al,BYTE PTR es:[edi]
  41b7a9:	push   es
  41b7aa:	push   0x1b306c00
  41b7af:	imul   ebp,DWORD PTR [esp+edi*4],0xe92b17e6
  41b7b6:	and    DWORD PTR [edx-0x80],esp
  41b7b9:	lods   al,BYTE PTR ds:[esi]
  41b7ba:	push   esp
  41b7bb:	cmp    al,0x61
  41b7bd:	sub    ebp,DWORD PTR [edi+0x7b32d388]
  41b7c3:	inc    ebx
  41b7c4:	add    al,0x8c
  41b7c6:	js     0x41b83a
  41b7c8:	sbb    BYTE PTR [edi-0x2d1418da],dh
  41b7ce:	jno    0x41b7cd
  41b7d0:	stos   DWORD PTR es:[edi],eax
  41b7d1:	ror    BYTE PTR [ebx-0x3423c13b],0xfb
  41b7d8:	adc    DWORD PTR [ebx],ebx
  41b7da:	mov    ds:0x2b928654,al
  41b7df:	sub    al,0x38
  41b7e1:	push   ebx
  41b7e2:	test   BYTE PTR [eax+0x10],ah
  41b7e5:	lock sub DWORD PTR [edx+0x15f34c08],edi
  41b7ec:	inc    DWORD PTR [ecx]
  41b7ee:	gs push ebx
  41b7f0:	add    dl,ch
  41b7f2:	xor    edx,DWORD PTR [ebx]
  41b7f4:	push   ebp
  41b7f5:	push   ecx
  41b7f6:	or     bh,BYTE PTR [edx-0x68]
  41b7f9:	mov    esi,0xc6400507
  41b7fe:	xchg   esi,eax
  41b7ff:	lock sbb al,0xf5
  41b802:	adc    DWORD PTR ds:0x24912e91,ebp
  41b808:	iret   
  41b809:	enter  0x44a2,0x5d
  41b80d:	ret    
  41b80e:	sbb    ah,ah
  41b810:	outs   dx,BYTE PTR ds:[esi]
  41b811:	pusha  
  41b812:	push   0xffffff8d
  41b814:	js     0x41b828
  41b816:	ret    0xbdf
  41b819:	pop    esp
  41b81a:	xor    ch,BYTE PTR [ecx-0x451e5ddd]
  41b820:	dec    esi
  41b821:	sbb    BYTE PTR [edx],0x63
  41b824:	aad    0xe5
  41b826:	dec    esp
  41b827:	cmp    ch,cl
  41b829:	jnp    0x41b88f
  41b82b:	(bad)  
  41b82c:	popf   
  41b82d:	cmp    esp,ebx
  41b82f:	lock push ebp
  41b831:	in     al,dx
  41b832:	xor    DWORD PTR [ebx],ecx
  41b834:	ficomp DWORD PTR [esi]
  41b836:	add    DWORD PTR [edx+ebx*8],esi
  41b839:	cmp    al,0x16
  41b83b:	mov    ds:0x4f29e6c1,eax
  41b840:	fwait
  41b841:	adc    ebp,esi
  41b843:	push   ss
  41b844:	or     eax,0x6964ce9f
  41b849:	push   eax
  41b84a:	mov    eax,edi
  41b84c:	jp     0x41b804
  41b84e:	inc    esp
  41b84f:	mov    al,ds:0xeb70b048
  41b854:	cmp    BYTE PTR [ecx+0x3b5ab9fe],0x25
  41b85b:	icebp  
  41b85c:	sbb    BYTE PTR [edi-0x6701dbdb],dl
  41b862:	mov    ebx,0x18ee636a
  41b867:	fist   WORD PTR [esi]
  41b869:	int    0xc
  41b86b:	icebp  
  41b86c:	in     eax,0x62
  41b86e:	mov    edx,0x7dfc5b56
  41b873:	push   gs
  41b875:	int    0xe7
  41b877:	pop    ds
  41b878:	inc    ecx
  41b879:	mov    ah,0xc5
  41b87b:	or     esp,DWORD PTR [eax]
  41b87d:	and    DWORD PTR [edi+0x619f8f14],esi
  41b883:	mov    bh,0x20
  41b885:	jbe    0x41b81a
  41b887:	je     0x41b8d0
  41b889:	or     esp,DWORD PTR [ebp-0x10]
  41b88c:	fwait
  41b88d:	mov    ebx,DWORD PTR [edx+ecx*1-0x6]
  41b891:	jb     0x41b879
  41b893:	stos   DWORD PTR es:[edi],eax
  41b894:	(bad)  [ecx]
  41b896:	adc    bh,ch
  41b898:	add    DWORD PTR ds:0x8e4662f4,ebp
  41b89e:	mov    ecx,0x3bfa003a
  41b8a3:	rol    edi,cl
  41b8a5:	and    eax,0xf3dae3e1
  41b8aa:	adc    eax,DWORD PTR [ecx-0x4df5d344]
  41b8b0:	add    eax,0x3fcf7751
  41b8b5:	add    ch,BYTE PTR [edx]
  41b8b7:	je     0x41b84b
  41b8b9:	push   esp
  41b8ba:	pop    edx
  41b8bb:	sti    
  41b8bc:	jno    0x41b8d4
  41b8be:	stos   BYTE PTR es:[edi],al
  41b8bf:	or     al,0xf9
  41b8c1:	jmp    0x41b908
  41b8c3:	mov    ?,ecx
  41b8c5:	les    edi,FWORD PTR [eax]
  41b8c7:	je     0x41b86f
  41b8c9:	cwde   
  41b8ca:	stos   DWORD PTR es:[edi],eax
  41b8cb:	inc    edi
  41b8cc:	scas   al,BYTE PTR es:[edi]
  41b8cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8ce:	dec    esi
  41b8cf:	add    eax,0x5bcbb449
  41b8d4:	xchg   ecx,eax
  41b8d5:	xor    edx,0xffffff87
  41b8d8:	fidivr WORD PTR [edx+0x20]
  41b8db:	jg     0x41b8b7
  41b8dd:	sbb    eax,0x614e54d6
  41b8e2:	mov    ebp,0xdb8465b6
  41b8e7:	pop    ds
  41b8e8:	arpl   WORD PTR ds:0xa48fe760,si
  41b8ee:	cdq    
  41b8ef:	cli    
  41b8f0:	dec    edi
  41b8f1:	pop    ss
  41b8f2:	retf   0xc5e
  41b8f5:	mov    ch,0x7d
  41b8f7:	pop    ds
  41b8f8:	imul   eax,esp,0x2a35d09f
  41b8fe:	or     eax,0xd1762088
  41b903:	in     al,0x10
  41b905:	bound  esp,QWORD PTR [edx+0x7f]
  41b908:	xchg   edi,eax
  41b909:	or     al,0x55
  41b90b:	xor    al,0xf8
  41b90d:	ja     0x41b913
  41b90f:	aas    
  41b910:	jp     0x41b8c4
  41b912:	aaa    
  41b913:	std    
  41b914:	jge    0x41b8e2
  41b916:	fs push edx
  41b918:	bound  ebp,QWORD PTR [edx]
  41b91a:	and    dl,BYTE PTR [edx-0x5a]
  41b91d:	inc    eax
  41b91e:	and    al,BYTE PTR [ebx+0x4a]
  41b921:	jbe    0x41b8ea
  41b923:	push   edx
  41b924:	mov    es,WORD PTR [eax+0x3880f83a]
  41b92a:	popa   
  41b92b:	jmp    0x41b91b
  41b92d:	or     edx,0x6ed4581a
  41b933:	dec    esp
  41b934:	arpl   dx,dx
  41b936:	add    DWORD PTR [ecx],esi
  41b938:	aaa    
  41b939:	mov    ah,0x24
  41b93b:	xlat   BYTE PTR es:[ebx]
  41b93d:	icebp  
  41b93e:	dec    edi
  41b93f:	jp     0x41b9ac
  41b941:	and    BYTE PTR [ebx],0x43
  41b944:	in     eax,dx
  41b945:	lahf   
  41b946:	pop    esp
  41b947:	mov    ebx,0xfe55eb4d
  41b94c:	mov    dl,0xbf
  41b94e:	mov    WORD PTR [eax],?
  41b950:	repz dec ebp
  41b952:	push   esp
  41b953:	mov    WORD PTR [ebx+0x79],es
  41b956:	jbe    0x41b8ea
  41b958:	jmp    0xe481:0xe4f0b4c3
  41b95f:	or     DWORD PTR [edi+0x6ffd48de],edi
  41b965:	xchg   DWORD PTR [eax],eax
  41b967:	out    dx,al
  41b968:	xchg   DWORD PTR [ecx-0x61],edi
  41b96b:	arpl   WORD PTR [ebx],ax
  41b96d:	in     al,dx
  41b96e:	cli    
  41b96f:	mov    dh,0x10
  41b971:	dec    esi
  41b972:	std    
  41b973:	repnz pushf 
  41b975:	add    al,0x5f
  41b977:	fs fcomp st(0)
  41b97a:	pop    eax
  41b97b:	dec    edx
  41b97c:	ret    0xdf13
  41b97f:	or     DWORD PTR [eax+0x5f],ebp
  41b982:	jecxz  0x41b9e4
  41b984:	or     cl,BYTE PTR [edx-0x75dfc5a3]
  41b98a:	(bad)  [ecx]
  41b98c:	scas   al,BYTE PTR es:[edi]
  41b98d:	dec    edi
  41b98e:	xchg   DWORD PTR [edx],ebp
  41b990:	mov    ebx,0xb5d0b6c5
  41b995:	out    dx,al
  41b996:	xor    edx,DWORD PTR [ebp+0x1d]
  41b999:	sar    ecx,cl
  41b99b:	cmp    cl,BYTE PTR [esi]
  41b99d:	fnsave [esi-0x17]
  41b9a0:	push   ebx
  41b9a1:	sbb    esi,ebx
  41b9a3:	mov    ?,WORD PTR [edx-0xf015717]
  41b9a9:	mov    edx,0xd65b47c0
  41b9ae:	push   0x21f4ecc4
  41b9b3:	test   eax,0x5db4a39
  41b9b8:	pusha  
  41b9b9:	(bad)  
  41b9ba:	pop    eax
  41b9bb:	stos   BYTE PTR es:[edi],al
  41b9bc:	push   ecx
  41b9bd:	sbb    WORD PTR ds:0xfc1b15e4,0xa876
  41b9c6:	rol    BYTE PTR [ecx-0x2d],cl
  41b9c9:	sbb    ebp,DWORD PTR [ebx]
  41b9cb:	xchg   edx,eax
  41b9cc:	or     eax,0xb7943ddb
  41b9d1:	and    al,0xa9
  41b9d3:	mov    ebx,DWORD PTR [edx-0x1e]
  41b9d6:	or     dh,BYTE PTR [eax-0x5b]
  41b9d9:	mov    bl,0xa0
  41b9db:	adc    ebp,edi
  41b9dd:	xchg   BYTE PTR [eax+0x3c],dh
  41b9e0:	and    al,0x7
  41b9e2:	mov    edx,DWORD PTR [ecx+esi*8-0x5c]
  41b9e6:	iret   
  41b9e7:	aaa    
  41b9e8:	pop    es
  41b9e9:	lea    ecx,[eax]
  41b9eb:	mov    ebx,0x3dcba2b0
  41b9f0:	or     eax,0x6defe0e4
  41b9f5:	cwde   
  41b9f6:	push   eax
  41b9f7:	add    al,0x57
  41b9f9:	dec    ebx
  41b9fa:	pop    edx
  41b9fb:	mov    eax,DWORD PTR [ecx+0x190ab6c5]
  41ba01:	scas   eax,DWORD PTR es:[edi]
  41ba02:	xchg   esp,eax
  41ba03:	xchg   ecx,eax
  41ba04:	jp     0x41b9f4
  41ba06:	stos   DWORD PTR es:[edi],eax
  41ba07:	and    eax,0x7190143c
  41ba0c:	ins    BYTE PTR es:[edi],dx
  41ba0d:	inc    eax
  41ba0e:	arpl   WORD PTR [esi+0x7b],ax
  41ba11:	mov    eax,ds:0x5da4586e
  41ba16:	jmp    0xa62e74f1
  41ba1b:	fcomp  st(6)
  41ba1d:	xor    bl,dl
  41ba1f:	dec    esp
  41ba20:	stos   DWORD PTR es:[edi],eax
  41ba21:	or     DWORD PTR [esi-0x26efb13a],ecx
  41ba27:	bound  eax,QWORD PTR [edi+0x77116da8]
  41ba2d:	scas   eax,DWORD PTR es:[edi]
  41ba2e:	lahf   
  41ba2f:	push   ecx
  41ba30:	jecxz  0x41ba6a
  41ba32:	sbb    ah,BYTE PTR [edi+ecx*1-0xaaa7545]
  41ba39:	push   edx
  41ba3a:	shl    DWORD PTR [edx+0x51c6c6de],cl
  41ba40:	fbstp  TBYTE PTR [ebx-0x48]
  41ba43:	push   esi
  41ba44:	sar    BYTE PTR [edi],1
  41ba46:	or     ebx,esp
  41ba48:	or     ecx,DWORD PTR [esi-0x780a39a5]
  41ba4e:	and    BYTE PTR [ecx],ch
  41ba50:	cmp    bh,cl
  41ba52:	xlat   BYTE PTR ds:[ebx]
  41ba53:	lods   eax,DWORD PTR ds:[esi]
  41ba54:	push   esi
  41ba55:	hlt    
  41ba56:	add    BYTE PTR [ebx-0xb],dl
  41ba59:	mov    eax,ds:0x5d469feb
  41ba5e:	jnp    0x41ba08
  41ba60:	nop
  41ba61:	mov    edx,0x3c971c4a
  41ba66:	add    ch,cl
  41ba68:	frstor [esi]
  41ba6a:	mov    eax,0x4cfd22dd
  41ba6f:	xchg   edi,eax
  41ba70:	mov    ds:0x14f7c021,eax
  41ba75:	pushf  
  41ba76:	xor    bh,BYTE PTR [eax+0x7d9e68e]
  41ba7c:	lahf   
  41ba7d:	std    
  41ba7e:	call   0xd971:0x3828a680
  41ba85:	inc    edx
  41ba86:	jecxz  0x41ba68
  41ba88:	outs   dx,BYTE PTR ds:[esi]
  41ba89:	sub    cl,dl
  41ba8b:	or     al,BYTE PTR [edx-0x4ac1f21e]
  41ba91:	shr    eax,0xdc
  41ba94:	mov    edi,0x1c618765
  41ba99:	mov    dh,0xa3
  41ba9b:	push   ecx
  41ba9c:	out    dx,eax
  41ba9d:	je     0x41bae8
  41ba9f:	sub    al,0x1b
  41baa1:	cld    
  41baa2:	jmp    0x41ba83
  41baa4:	and    BYTE PTR [ecx+0x41461ce8],cl
  41baaa:	shl    DWORD PTR ds:[ecx+0xb515111],cl
  41bab1:	mov    al,ds:0x94af7ba2
  41bab6:	dec    eax
  41bab7:	popf   
  41bab8:	add    eax,0x908aa0f0
  41babd:	pusha  
  41babe:	out    dx,eax
  41babf:	in     eax,0xc0
  41bac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac2:	mov    eax,ds:0xf9c4d703
  41bac7:	out    0x93,al
  41bac9:	call   0x82b8:0xe75c4672
  41bad0:	or     bh,0x32
  41bad3:	mov    edx,DWORD PTR ds:0xe3ec299c
  41bad9:	add    al,0x9d
  41badb:	xor    eax,0x600c6bf1
  41bae0:	jmp    0x41bb28
  41bae2:	inc    esi
  41bae3:	mov    ecx,0xc1a566b4
  41bae8:	gs xor eax,0xc46dc503
  41baee:	xchg   esp,eax
  41baef:	xchg   BYTE PTR [ebp+0x69],bl
  41baf2:	sub    cl,dl
  41baf4:	pop    esi
  41baf5:	jbe    0x41bb38
  41baf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baf8:	daa    
  41baf9:	scas   al,BYTE PTR es:[edi]
  41bafa:	mov    ecx,ebp
  41bafc:	mov    edx,0xc8133de8
  41bb01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb02:	lahf   
  41bb03:	jns    0x41bb5e
  41bb05:	(bad)  
  41bb06:	jp     0x41bb74
  41bb08:	imul   esp,DWORD PTR [ecx-0x5a],0xb52b80f7
  41bb0f:	aaa    
  41bb10:	ret    
  41bb11:	mov    bl,dl
  41bb13:	jle    0x41bb34
  41bb15:	xchg   BYTE PTR [ecx+0x4b],dh
  41bb18:	aam    0xb4
  41bb1a:	pop    ebp
  41bb1b:	lods   eax,DWORD PTR ds:[esi]
  41bb1c:	xor    bh,0xee
  41bb1f:	scas   eax,DWORD PTR es:[di]
  41bb21:	dec    esi
  41bb22:	in     al,dx
  41bb23:	xchg   DWORD PTR [eax-0x24a0d560],ecx
  41bb29:	push   ebx
  41bb2a:	out    0xb5,al
  41bb2c:	pop    edi
  41bb2d:	xor    ebx,edx
  41bb2f:	add    BYTE PTR [esi-0x22],dl
  41bb32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb33:	mov    ds:0x23a96e84,al
  41bb38:	fsubp  st(6),st
  41bb3a:	inc    ecx
  41bb3b:	pop    esp
  41bb3c:	push   edi
  41bb3d:	and    eax,0x83535fd9
  41bb42:	pop    ebx
  41bb43:	aas    
  41bb44:	aas    
  41bb45:	mov    dl,0x50
  41bb47:	add    dl,BYTE PTR [edx+0x26]
  41bb4a:	lahf   
  41bb4b:	xor    eax,0x4dcb16d4
  41bb50:	das    
  41bb51:	jmp    0x41bb0c
  41bb53:	cmp    BYTE PTR [esi],bh
  41bb55:	pop    ss
  41bb56:	mov    dh,0xc2
  41bb58:	mov    DWORD PTR [ebp+0x5624214a],eax
  41bb5e:	aam    0x1a
  41bb60:	scas   al,BYTE PTR es:[edi]
  41bb61:	test   eax,0x8ab83ab1
  41bb66:	ins    BYTE PTR es:[edi],dx
  41bb67:	ins    DWORD PTR es:[edi],dx
  41bb68:	out    0x3f,eax
  41bb6a:	std    
  41bb6b:	push   ecx
  41bb6c:	ds jo  0x41bafa
  41bb6f:	xchg   edi,eax
  41bb70:	shl    DWORD PTR [esi],cl
  41bb72:	pop    es
  41bb73:	push   0xffffffb2
  41bb75:	cdq    
  41bb76:	sbb    eax,esp
  41bb78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb79:	pmovmskb esi,mm2
  41bb7c:	jnp    0x41bb79
  41bb7e:	pop    esp
  41bb7f:	xchg   bh,dl
  41bb81:	jne    0x41bb88
  41bb83:	nop
  41bb84:	mov    ebx,0xaaf3ef0d
  41bb89:	dec    eax
  41bb8a:	dec    sp
  41bb8c:	xor    DWORD PTR [edi-0x5302407f],esi
  41bb92:	pop    eax
  41bb93:	popf   
  41bb94:	pop    eax
  41bb95:	out    dx,al
  41bb96:	lods   al,BYTE PTR ds:[esi]
  41bb97:	pop    esi
  41bb98:	or     DWORD PTR [edx-0x4d4079a7],0xffffff9a
  41bb9f:	or     al,0x7b
  41bba1:	sub    dl,BYTE PTR [esi]
  41bba3:	test   DWORD PTR [ebp+0x40],ecx
  41bba6:	push   eax
  41bba7:	inc    ecx
  41bba8:	cdq    
  41bba9:	mov    ah,0x18
  41bbab:	mov    ebp,0x2893d433
  41bbb0:	ret    0xc223
  41bbb3:	shr    DWORD PTR [eax],0x1
  41bbb6:	cmp    BYTE PTR [ecx+0x11],bh
  41bbb9:	cwde   
  41bbba:	fcom   QWORD PTR [ebx+0x472d31c6]
  41bbc0:	adc    eax,0x3e1102b1
  41bbc5:	pop    esp
  41bbc6:	cli    
  41bbc7:	sahf   
  41bbc8:	pop    esp
  41bbc9:	imul   esp,DWORD PTR [eax-0x3450219f],0xfffffffd
  41bbd0:	jne    0x41bb84
  41bbd2:	mov    BYTE PTR [ebx+0x3a],al
  41bbd5:	(bad)  [edx]
  41bbd7:	mov    WORD PTR [edx],ss
  41bbd9:	jecxz  0x41bba5
  41bbdb:	and    eax,0x51f314e0
  41bbe0:	mov    eax,0x50134c7e
  41bbe5:	imul   ecx,DWORD PTR [ebp*1-0x76ebf743],0x4fc9b87
  41bbf0:	mov    dl,0xfa
  41bbf2:	xchg   edi,eax
  41bbf3:	rol    ebx,cl
  41bbf5:	adc    esp,ebp
  41bbf7:	out    dx,al
  41bbf8:	cld    
  41bbf9:	jmp    0x41bc71
  41bbfb:	fsin   
  41bbfd:	adc    eax,0x52ceb011
  41bc02:	(bad)  
  41bc03:	adc    DWORD PTR [eax+0x3c],ebp
  41bc06:	icebp  
  41bc07:	enter  0x2f28,0x3c
  41bc0b:	cmp    BYTE PTR [eax+0x727b2651],bh
  41bc11:	push   eax
  41bc12:	or     DWORD PTR [ebp+ebx*8+0x3d],eax
  41bc16:	cmp    al,0x51
  41bc18:	pop    edi
  41bc19:	scas   eax,DWORD PTR es:[edi]
  41bc1a:	es fwait
  41bc1c:	cmp    al,0x2c
  41bc1e:	ja     0x41bc16
  41bc20:	ins    BYTE PTR es:[edi],dx
  41bc21:	add    eax,0x3c71fb5a
  41bc26:	ins    BYTE PTR es:[edi],dx
  41bc27:	(bad)  
  41bc28:	sbb    al,0x29
  41bc2a:	lds    ecx,FWORD PTR [ecx]
  41bc2c:	sub    DWORD PTR [esi+0xf6e0358],esi
  41bc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc33:	in     eax,dx
  41bc34:	push   ecx
  41bc35:	pop    edx
  41bc36:	addr16 pushf 
  41bc38:	sti    
  41bc39:	mov    ah,bh
  41bc3b:	out    0x9,eax
  41bc3d:	aad    0x63
  41bc3f:	push   ds
  41bc40:	std    
  41bc41:	pop    es
  41bc42:	repnz fild DWORD PTR [esp+edi*8]
  41bc46:	jns    0x41bc5a
  41bc48:	loop   0x41bc49
  41bc4a:	push   ebp
  41bc4b:	push   ebx
  41bc4c:	mov    ch,0x46
  41bc4e:	imul   esp,DWORD PTR [edi],0x26
  41bc51:	call   FWORD PTR [ecx]
  41bc53:	pop    es
  41bc54:	mov    ebp,0xaf8076b0
  41bc59:	dec    esp
  41bc5a:	popf   
  41bc5b:	hlt    
  41bc5c:	pop    ecx
  41bc5d:	sbb    ebx,DWORD PTR [edx+0x3d]
  41bc60:	imul   ebx,ecx,0xe5b65ba1
  41bc66:	mov    ah,0x19
  41bc68:	pop    esi
  41bc69:	inc    ecx
  41bc6a:	imul   edi,DWORD PTR [esi],0xffffff96
  41bc6d:	push   ecx
  41bc6e:	mov    dl,0xb
  41bc70:	xchg   BYTE PTR [edx],ah
  41bc72:	scas   al,BYTE PTR es:[edi]
  41bc73:	pop    esp
  41bc74:	jo     0x41bc41
  41bc76:	(bad)  
  41bc77:	cdq    
  41bc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc79:	adc    DWORD PTR [ecx-0x58f30ed6],0xc6722d8
  41bc83:	jne    0x41bc8b
  41bc85:	cdq    
  41bc86:	out    dx,al
  41bc87:	cmp    ecx,DWORD PTR ds:0x4b1fc978
  41bc8d:	push   esp
  41bc8e:	mov    ebp,0xb17b61d3
  41bc93:	adc    BYTE PTR [ebx-0x22142a27],0x53
  41bc9a:	or     eax,0xe5f57114
  41bc9f:	loop   0x41bd1d
  41bca1:	pop    esi
  41bca2:	and    dl,BYTE PTR [ecx]
  41bca4:	sbb    DWORD PTR ds:0xfb88c88a,ebp
  41bcaa:	inc    ebx
  41bcac:	mov    al,0x4d
  41bcae:	call   0x52fc8856
  41bcb3:	adc    esi,DWORD PTR [ebx]
  41bcb5:	call   0x1c73ef8e
  41bcba:	loope  0x41bc4c
  41bcbc:	loope  0x41bcfa
  41bcbe:	rcl    DWORD PTR [edx-0x65e0b930],cl
  41bcc4:	push   esp
  41bcc5:	inc    esp
  41bcc6:	and    al,0x63
  41bcc8:	out    dx,eax
  41bcc9:	or     esp,esp
  41bccb:	pop    ebx
  41bccc:	inc    ebx
  41bccd:	dec    ebp
  41bcce:	dec    ecx
  41bccf:	ss test eax,0xf9a37a26
  41bcd5:	mov    al,ds:0xcc4861d5
  41bcda:	lea    ecx,[ecx+ebp*4+0x17]
  41bcde:	les    edi,FWORD PTR [eax+0x5b]
  41bce1:	stos   DWORD PTR es:[edi],eax
  41bce2:	sbb    edx,DWORD PTR [ebx]
  41bce4:	ret    0x216d
  41bce7:	jns    0x41bcf2
  41bce9:	mov    esi,0xc3cba48c
  41bcee:	cmp    edi,DWORD PTR [ecx-0x10]
  41bcf1:	pop    ebp
  41bcf2:	or     esi,ebp
  41bcf4:	mov    ebx,0xa0a7fb63
  41bcf9:	scas   eax,DWORD PTR es:[edi]
  41bcfa:	leave  
  41bcfb:	mov    ebp,0xe6826217
  41bd00:	(bad)  
  41bd01:	dec    ecx
  41bd02:	mov    ah,0xe4
  41bd04:	pop    ebp
  41bd05:	aad    0x17
  41bd07:	(bad)  
  41bd08:	loopne 0x41bd4c
  41bd0a:	adc    eax,0xefb9fd50
  41bd0f:	add    BYTE PTR [ebp+0x61],cl
  41bd12:	pop    eax
  41bd13:	mov    ds:0xf3b7bb50,eax
  41bd18:	mov    WORD PTR [edi+0x24329f67],?
  41bd1e:	sub    dl,BYTE PTR [ebx-0x5720b145]
  41bd24:	(bad)  
  41bd25:	in     al,0xd3
  41bd27:	mov    ebx,0x4c3a9bfc
  41bd2c:	mov    dh,0xb
  41bd2e:	sub    BYTE PTR [edx],0xc2
  41bd31:	mov    ds,WORD PTR [ecx+0x31]
  41bd34:	outs   dx,BYTE PTR ds:[esi]
  41bd35:	in     eax,dx
  41bd36:	das    
  41bd37:	xor    eax,0x4c3dfa19
  41bd3c:	inc    edx
  41bd3d:	cmp    BYTE PTR [ecx],bl
  41bd3f:	xor    al,0xb8
  41bd41:	cmp    dh,BYTE PTR [esi]
  41bd43:	(bad)  
  41bd45:	cmp    ah,dh
  41bd47:	sub    DWORD PTR [edx+0xb],0x60f37841
  41bd4e:	mov    al,0x2
  41bd50:	leave  
  41bd51:	add    edi,esi
  41bd53:	lods   al,BYTE PTR ds:[esi]
  41bd54:	adc    cl,0x49
  41bd57:	jecxz  0x41bd5d
  41bd59:	xor    BYTE PTR gs:[ebx-0x60],ch
  41bd5d:	mov    eax,0x4edd9b2c
  41bd62:	mov    dh,0x7f
  41bd64:	mov    ecx,0x4e2b3192
  41bd69:	cmp    ebp,esp
  41bd6b:	dec    edx
  41bd6c:	(bad)  
  41bd6d:	popf   
  41bd6e:	es loopne 0x41bdd6
  41bd71:	jmp    0x71d9:0xca5acf3b
  41bd78:	cmp    DWORD PTR ss:[ebp+0x67],edi
  41bd7c:	cmp    eax,0x91bcb66e
  41bd81:	xchg   edx,eax
  41bd82:	adc    BYTE PTR [edi-0x1],ch
  41bd85:	ret    
  41bd86:	stc    
  41bd87:	dec    edi
  41bd88:	push   cs
  41bd89:	sbb    esi,DWORD PTR [esi-0x5fb0c15d]
  41bd8f:	imul   esi,DWORD PTR [edx],0xc6e8c579
  41bd95:	mov    ebp,0x1632c9c0
  41bd9a:	in     eax,0xc2
  41bd9c:	fs sub al,0x9c
  41bd9f:	and    eax,0x6a54afb6
  41bda4:	xor    esp,DWORD PTR [eax-0x10]
  41bda7:	adc    al,ah
  41bda9:	mov    dl,0x3b
  41bdab:	ja     0x41be21
  41bdad:	dec    esi
  41bdae:	inc    DWORD PTR es:[edi]
  41bdb1:	dec    edi
  41bdb2:	sbb    BYTE PTR [edx-0x144f6233],dh
  41bdb8:	mov    ah,0xf5
  41bdba:	or     BYTE PTR [ebx-0x2b3e911b],ch
  41bdc0:	aaa    
  41bdc1:	mov    ecx,DWORD PTR [esi]
  41bdc3:	loope  0x41bd85
  41bdc5:	scas   al,BYTE PTR es:[edi]
  41bdc6:	shl    BYTE PTR [esi+0x6af7a69c],1
  41bdcc:	jbe    0x41bd78
  41bdce:	fmul   QWORD PTR [edx+0x15]
  41bdd1:	sbb    eax,0xcf1527df
  41bdd6:	xchg   esi,eax
  41bdd7:	inc    BYTE PTR [esi]
  41bdd9:	jb     0x41bda9
  41bddb:	mov    edi,0x3cd14939
  41bde0:	int    0xd7
  41bde2:	shr    DWORD PTR [ecx],cl
  41bde4:	mov    ebp,0x797a746d
  41bde9:	add    al,0x11
  41bdeb:	mov    ebx,0xc891b21d
  41bdf0:	test   al,0xee
  41bdf2:	mov    ds:0xd780355d,eax
  41bdf7:	ins    BYTE PTR es:[edi],dx
  41bdf8:	adc    al,0x22
  41bdfa:	in     al,dx
  41bdfb:	sbb    eax,0x48019bcf
  41be00:	and    BYTE PTR [esp+edi*2],bl
  41be03:	mov    edi,ecx
  41be05:	xor    eax,0x76dbd309
  41be0a:	mov    ebx,0x671b5580
  41be0f:	and    bh,BYTE PTR ds:0xf3131742
  41be15:	and    edi,esi
  41be17:	inc    ecx
  41be18:	(bad)  
  41be19:	mov    esi,DWORD PTR [edi+ecx*1+0x3f5627c]
  41be20:	arpl   dx,cx
  41be22:	pop    ebx
  41be23:	iret   
  41be24:	sbb    DWORD PTR [eax+0x74c6cc35],ecx
  41be2a:	(bad)  
  41be2b:	ins    DWORD PTR es:[edi],dx
  41be2c:	sbb    ebx,edi
  41be2e:	fwait
  41be2f:	sbb    eax,0xaed848be
  41be34:	jmp    0x41bdd5
  41be36:	sbb    DWORD PTR [esi],ebx
  41be38:	jmp    0x217f2609
  41be3d:	jno    0x41be6f
  41be3f:	dec    ecx
  41be40:	cmp    DWORD PTR [ecx+0x30],esi
  41be43:	scas   eax,DWORD PTR es:[edi]
  41be44:	fwait
  41be45:	inc    edi
  41be46:	adc    al,0xf
  41be48:	ja     0x41be17
  41be4a:	lds    eax,FWORD PTR ds:0xaf396f9b
  41be50:	dec    ebx
  41be51:	test   eax,0x278089ab
  41be56:	adc    DWORD PTR [ebx+0x57834a7a],0xffffff88
  41be5d:	cs ret 
  41be5f:	or     dl,ch
  41be61:	xchg   ecx,eax
  41be62:	mov    WORD PTR [ebx],cs
  41be64:	or     cl,BYTE PTR [edi-0x9396307]
  41be6a:	les    eax,FWORD PTR [ebx+0x31049480]
  41be70:	popf   
  41be71:	jle    0x41bedb
  41be73:	rcl    BYTE PTR [edi-0x44],cl
  41be76:	hlt    
  41be77:	push   0xffffffda
  41be79:	pusha  
  41be7a:	mov    ah,0x9
  41be7c:	adc    ebp,DWORD PTR [eax+esi*2-0x29]
  41be80:	dec    edx
  41be81:	mov    es,WORD PTR [esi-0x8dc0588]
  41be87:	mov    ds:0xf471a1bf,eax
  41be8c:	outs   dx,BYTE PTR ds:[esi]
  41be8d:	icebp  
  41be8e:	jle    0x41bf05
  41be90:	dec    edi
  41be91:	jno    0x41be45
  41be93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be94:	out    0x10,eax
  41be96:	sub    BYTE PTR [eax+0x73],bh
  41be99:	mov    bl,0x3
  41be9b:	or     DWORD PTR ds:0xfba950,ebx
  41bea1:	test   DWORD PTR [edx-0x2d1a818e],esi
  41bea7:	(bad)  
  41bea8:	sub    dh,al
  41beaa:	hlt    
  41beab:	test   eax,0x1746e7fc
  41beb0:	mov    ebx,0x598ad43d
  41beb5:	and    DWORD PTR [edx-0x10],ecx
  41beb8:	sbb    ecx,edi
  41beba:	pop    esp
  41bebb:	jge    0x41bf30
  41bebd:	call   0xb16f:0x14b38c8
  41bec4:	xchg   ebp,eax
  41bec5:	add    BYTE PTR [ebx+0xf6ee508],bl
  41becb:	xchg   BYTE PTR [esi],dl
  41becd:	ins    BYTE PTR es:[edi],dx
  41bece:	(bad)  
  41becf:	jo     0x41bea2
  41bed1:	aam    0xce
  41bed3:	fwait
  41bed4:	enter  0xd533,0x45
  41bed8:	cmp    eax,0xd631713f
  41bedd:	cmp    bh,BYTE PTR [eax+0x1f75413d]
  41bee3:	mov    ah,0x4a
  41bee5:	and    al,0x54
  41bee7:	add    al,0xb8
  41bee9:	or     al,0xff
  41beeb:	popa   
  41beec:	cli    
  41beed:	jle    0x41beb6
  41beef:	mov    BYTE PTR [esi+0x40a8f288],ah
  41bef5:	js     0x41bf2c
  41bef7:	xor    DWORD PTR [ebx],0xeeab23e8
  41befd:	hlt    
  41befe:	push   eax
  41beff:	daa    
  41bf00:	cmp    ecx,edx
  41bf02:	lods   al,BYTE PTR ds:[esi]
  41bf03:	mov    ecx,0x88af0a73
  41bf08:	lods   eax,DWORD PTR ds:[esi]
  41bf09:	nop
  41bf0a:	lods   al,BYTE PTR ds:[esi]
  41bf0b:	or     BYTE PTR [esi-0xa],0x11
  41bf0f:	mov    edx,0xf417d5ab
  41bf14:	mov    esp,0xd19c2497
  41bf19:	jns    0x41bf8b
  41bf1b:	stos   BYTE PTR es:[edi],al
  41bf1c:	sbb    BYTE PTR [ebp+edi*2-0x3e],0xb8
  41bf21:	mov    ecx,0x715cc3de
  41bf26:	sub    DWORD PTR es:[ecx+0x38596a3d],ebx
  41bf2d:	inc    di
  41bf2f:	sbb    dh,BYTE PTR [ecx-0x77]
  41bf32:	xchg   bh,bl
  41bf34:	adc    ecx,DWORD PTR [edi+eiz*1+0x8]
  41bf38:	shl    DWORD PTR [eax],cl
  41bf3a:	mov    ebp,0x452401de
  41bf3f:	ss clc 
  41bf41:	mov    ah,0x5a
  41bf43:	xchg   ebp,eax
  41bf44:	fisubr WORD PTR [ecx+eax*4]
  41bf47:	sub    eax,0x4a711e7e
  41bf4c:	and    eax,0x60341e23
  41bf51:	xchg   ebx,eax
  41bf52:	popa   
  41bf53:	xchg   esp,eax
  41bf54:	xor    BYTE PTR [eax],dh
  41bf56:	sbb    BYTE PTR [ebx],cl
  41bf58:	push   cs
  41bf59:	dec    esi
  41bf5a:	dec    ebp
  41bf5b:	clc    
  41bf5c:	mov    ecx,0x183683b9
  41bf61:	fmul   QWORD PTR [esp+edi*2+0x66cd4b19]
  41bf68:	xor    ebp,DWORD PTR [eax+edx*2-0x75f4137]
  41bf6f:	cmp    BYTE PTR [esi+0x39],dl
  41bf72:	fild   QWORD PTR [edi]
  41bf74:	cld    
  41bf75:	mov    gs,WORD PTR [edx+edx*2-0x497cf5dd]
  41bf7c:	test   eax,0xde4d28e8
  41bf81:	jne    0x41bfe7
  41bf83:	cmp    ch,BYTE PTR [edx]
  41bf85:	or     BYTE PTR [ebx-0x29df8e49],ah
  41bf8b:	ret    0x8c4
  41bf8e:	push   ss
  41bf8f:	inc    esi
  41bf90:	and    al,0x84
  41bf92:	cmc    
  41bf93:	dec    esp
  41bf94:	or     al,0xbe
  41bf96:	test   al,0x59
  41bf98:	jl     0x41bfc1
  41bf9a:	ja     0x41bf50
  41bf9c:	mov    ch,0x7d
  41bf9e:	in     eax,0x1b
  41bfa0:	sahf   
  41bfa1:	stos   BYTE PTR es:[edi],al
  41bfa2:	retf   0x8805
  41bfa5:	pop    DWORD PTR [ebp+0x27]
  41bfa8:	loop   0x41c017
  41bfaa:	xchg   ebx,esi
  41bfac:	in     al,dx
  41bfad:	and    DWORD PTR cs:[esi+0x48275f1c],edx
  41bfb4:	in     eax,0xc8
  41bfb6:	daa    
  41bfb7:	sbb    al,0x5f
  41bfb9:	mov    dl,0xf
  41bfbb:	mov    al,0x2d
  41bfbd:	sub    ch,dh
  41bfbf:	or     bh,BYTE PTR [ecx]
  41bfc1:	mov    ecx,0x3ad82963
  41bfc6:	adc    DWORD PTR [ebp+ebp*2-0x70],ebx
  41bfca:	inc    esp
  41bfcb:	cs pop ebp
  41bfcd:	dec    esi
  41bfce:	ret    0xa6a9
  41bfd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfd2:	adc    eax,0x829538dd
  41bfd7:	push   0xffffffa7
  41bfd9:	mov    BYTE PTR [ebx+0x69],bh
  41bfdc:	xchg   esp,eax
  41bfdd:	rcl    ah,0xad
  41bfe0:	mov    esi,0xbd3e12fe
  41bfe5:	xor    BYTE PTR [esi],al
  41bfe7:	mov    dl,0x33
  41bfe9:	add    DWORD PTR [ebp-0x103f5e65],ecx
  41bfef:	test   eax,0x9a89a829
  41bff4:	stc    
  41bff5:	pop    ebx
  41bff6:	cmp    DWORD PTR [edx-0x5c],edx
  41bff9:	stos   BYTE PTR es:[edi],al
  41bffa:	sbb    al,0x6c
  41bffc:	in     eax,0xfa
  41bffe:	fucomi st,st(3)
  41c000:	mov    ch,0xf0
  41c002:	not    esi
  41c004:	in     al,dx
  41c005:	push   0xfd6490f4
  41c00a:	repz clc 
  41c00c:	adc    al,0x98
  41c00e:	xchg   ebx,eax
  41c00f:	sub    eax,0x3bc2da84
  41c014:	rol    edi,0xcd
  41c017:	daa    
  41c018:	or     DWORD PTR [ebx],0xffffff82
  41c01b:	xchg   ebp,eax
  41c01c:	aam    0x25
  41c01e:	pop    ebx
  41c01f:	jo     0x41c02f
  41c021:	lods   al,BYTE PTR ds:[esi]
  41c022:	inc    esp
  41c023:	sti    
  41c024:	seto   ch
  41c027:	xor    BYTE PTR [ebx],0xfc
  41c02a:	sub    al,0xe1
  41c02c:	jg     0x41bfd5
  41c02e:	call   DWORD PTR [edx+0x4b76481c]
  41c034:	add    DWORD PTR [edx+0x72316346],ecx
  41c03a:	scas   eax,DWORD PTR es:[edi]
  41c03b:	pop    es
  41c03c:	add    BYTE PTR [esi],ch
  41c03e:	aaa    
  41c03f:	mov    ds:0x48b6a237,al
  41c044:	xor    BYTE PTR [esi],ch
  41c046:	pop    eax
  41c047:	and    DWORD PTR [ebx],ebp
  41c049:	ror    WORD PTR [eax-0x6701e0cd],1
  41c050:	mov    ?,WORD PTR [esi+0x1f22df66]
  41c056:	xchg   edi,eax
  41c057:	push   edi
  41c058:	arpl   WORD PTR [edi+0x2e5024b7],bp
  41c05e:	into   
  41c05f:	push   es
  41c060:	pop    ebx
  41c061:	cli    
  41c062:	test   DWORD PTR [esi],edx
  41c064:	jno    0x41c04f
  41c066:	push   ds
  41c067:	ret    0xee04
  41c06a:	mov    ch,0x85
  41c06c:	leave  
  41c06d:	inc    cl
  41c06f:	mov    esi,0xebb34d42
  41c074:	ror    esp,0xd3
  41c077:	cmp    BYTE PTR [edi-0x62],bl
  41c07a:	mov    dh,0xa8
  41c07c:	xchg   ebx,eax
  41c07d:	sbb    eax,0x1ed9a12b
  41c082:	aas    
  41c083:	in     al,0xaf
  41c085:	and    eax,0x34746462
  41c08a:	pop    edx
  41c08b:	add    al,0xf1
  41c08d:	push   eax
  41c08e:	pcmpgtw mm4,mm4
  41c091:	push   cs
  41c092:	dec    esp
  41c093:	mov    bl,0xab
  41c095:	inc    esi
  41c096:	ss in  eax,dx
  41c098:	sbb    DWORD PTR [ecx],esi
  41c09a:	fwait
  41c09b:	ja     0x41c069
  41c09d:	pop    ds
  41c09e:	data16 and al,0x5
  41c0a1:	mov    esi,0xb06a47a7
  41c0a6:	out    0xb4,eax
  41c0a8:	dec    eax
  41c0a9:	push   edx
  41c0aa:	xor    ebp,ebp
  41c0ac:	retf   0xf63b
  41c0af:	ss js  0x41c0d5
  41c0b2:	dec    edx
  41c0b3:	push   edi
  41c0b4:	call   0x7888:0x963d88dc
  41c0bb:	add    ebx,DWORD PTR [ebx]
  41c0bd:	js     0x41c0b7
  41c0bf:	and    bl,bh
  41c0c1:	test   al,0xd1
  41c0c3:	call   0x8685972f
  41c0c8:	push   ebp
  41c0c9:	adc    esi,DWORD PTR [ebx+ecx*8+0x6a]
  41c0cd:	add    ah,ah
  41c0cf:	and    BYTE PTR [esi+edx*4+0x40],0xd
  41c0d4:	cmp    BYTE PTR [bp-0x6f9c],bl
  41c0d9:	outs   dx,DWORD PTR ds:[esi]
  41c0da:	sbb    ch,BYTE PTR [ebx+0x79]
  41c0dd:	(bad)  [esi+0x7e]
  41c0e0:	jae    0x41c0d9
  41c0e2:	add    DWORD PTR [esi-0xa6cf62a],eax
  41c0e8:	mov    dh,0x37
  41c0ea:	or     ecx,ebp
  41c0ec:	push   esi
  41c0ed:	adc    ah,al
  41c0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0f0:	sahf   
  41c0f1:	stc    
  41c0f2:	sub    al,0x42
  41c0f4:	pop    ecx
  41c0f6:	mov    BYTE PTR [edi-0x3],dh
  41c0f9:	aaa    
  41c0fa:	rcr    edi,0x16
  41c0fd:	std    
  41c0fe:	add    al,0xe1
  41c100:	xor    esi,DWORD PTR [ebx+edx*8]
  41c103:	repnz retf 0x9d30
  41c107:	hlt    
  41c108:	mov    edx,0x3a17af6d
  41c10d:	inc    ecx
  41c10e:	mov    ebx,0xa5ebc58a
  41c113:	xchg   ebx,eax
  41c114:	aas    
  41c115:	iret   
  41c116:	fucomi st,st(2)
  41c118:	adc    cl,BYTE PTR [edi-0x40]
  41c11b:	mov    al,ds:0x5a1c0f2d
  41c120:	inc    ecx
  41c121:	sbb    bl,dl
  41c123:	aad    0x5d
  41c125:	fbld   TBYTE PTR [ebx+0x37]
  41c128:	js     0x41c0e3
  41c12a:	mov    al,0xd4
  41c12c:	stc    
  41c12d:	not    DWORD PTR [edi+0x22]
  41c130:	push   edi
  41c131:	outs   dx,BYTE PTR ds:[esi]
  41c132:	mov    esp,0xe5bce4ff
  41c137:	cmp    BYTE PTR [ebp-0x1a],dl
  41c13a:	mov    WORD PTR [ecx-0x60],es
  41c13d:	int3   
  41c13e:	popf   
  41c13f:	imul   esi,DWORD PTR [edi-0x15a7e296],0x54899511
  41c149:	and    BYTE PTR [edi],bh
  41c14b:	cmp    ebp,DWORD PTR [edi-0x16f45288]
  41c151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c152:	aaa    
  41c153:	cli    
  41c154:	xor    cl,BYTE PTR [esi]
  41c156:	ds popf 
  41c158:	xchg   BYTE PTR [ecx-0x48fa5235],cl
  41c15e:	pop    eax
  41c15f:	out    dx,al
  41c160:	out    dx,al
  41c161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c162:	pop    esp
  41c163:	inc    eax
  41c164:	and    ah,BYTE PTR [edi+0x5feedd22]
  41c16a:	retf   
  41c16b:	fistp  DWORD PTR [edi-0x5c27e269]
  41c171:	jb     0x41c11c
  41c173:	pusha  
  41c174:	mov    edi,0xe91af56f
  41c179:	sub    edx,DWORD PTR [ecx+ebx*1-0x43d75cb7]
  41c180:	sub    ebx,edx
  41c182:	and    ebx,DWORD PTR [ebx]
  41c184:	adc    dh,BYTE PTR [edx+0xaaf550a]
  41c18a:	cmp    al,0x7
  41c18c:	test   eax,0x267ecc63
  41c191:	in     al,0x36
  41c193:	mov    esi,DWORD PTR [edx+ecx*4+0x11bb44c8]
  41c19a:	sub    BYTE PTR [ebp+0x6b],cl
  41c19d:	arpl   bp,bx
  41c19f:	pop    ds
  41c1a0:	pop    es
  41c1a1:	fiadd  WORD PTR [ebp+0x1c]
  41c1a4:	or     DWORD PTR [esi+0x71abe240],esp
  41c1aa:	dec    esi
  41c1ab:	xchg   ecx,eax
  41c1ac:	dec    edx
  41c1ad:	push   cs
  41c1ae:	push   ecx
  41c1af:	push   esp
  41c1b0:	bound  esp,QWORD PTR [edi+0x506bbae3]
  41c1b6:	cmp    ah,al
  41c1b8:	jp     0x41c22c
  41c1ba:	std    
  41c1bb:	lahf   
  41c1bc:	cwde   
  41c1bd:	xlat   BYTE PTR ds:[ebx]
  41c1be:	dec    esi
  41c1bf:	or     ecx,DWORD PTR [eax-0x3c]
  41c1c2:	pushf  
  41c1c3:	out    dx,eax
  41c1c4:	icebp  
  41c1c5:	mov    eax,0x8a4f4902
  41c1ca:	(bad)  
  41c1cb:	repnz sub al,0x59
  41c1ce:	or     BYTE PTR [edi-0x21],cl
  41c1d1:	std    
  41c1d2:	sbb    bh,BYTE PTR [ebx+ebx*1-0x302932cb]
  41c1d9:	jp     0x41c210
  41c1db:	into   
  41c1dc:	out    0xbb,eax
  41c1de:	arpl   WORD PTR [esi],si
  41c1e0:	int    0xca
  41c1e2:	mov    bl,0xe6
  41c1e4:	pop    eax
  41c1e5:	push   0xffffffef
  41c1e7:	cmp    BYTE PTR [ebx],bl
  41c1e9:	cdq    
  41c1ea:	ret    
  41c1eb:	jne    0x41c17d
  41c1ed:	into   
  41c1ee:	(bad)  
  41c1ef:	xchg   edx,eax
  41c1f0:	shl    BYTE PTR [edx+ebp*4+0x4055144e],1
  41c1f7:	pop    ss
  41c1f8:	push   ds
  41c1f9:	jnp    0x41c1fe
  41c1fb:	popf   
  41c1fc:	push   ds
  41c1fd:	adc    DWORD PTR [ecx-0x2d],esp
  41c200:	test   DWORD PTR [eax],0xef9928bf
  41c206:	pop    edx
  41c207:	jno    0x41c27b
  41c209:	inc    ecx
  41c20a:	adc    eax,0xacad78
  41c20f:	stos   DWORD PTR es:[edi],eax
  41c210:	push   edi
  41c211:	pop    DWORD PTR [eax+0x4a88b6c3]
  41c217:	fwait
  41c218:	scas   eax,DWORD PTR es:[edi]
  41c219:	xchg   bl,ch
  41c21b:	rol    DWORD PTR [ebx-0x6f6b0ef2],1
  41c221:	push   ecx
  41c222:	bound  edx,QWORD PTR [ecx-0x4]
  41c225:	aas    
  41c226:	xor    DWORD PTR [ebp-0x40],ecx
  41c229:	add    eax,0x5bb0e1a6
  41c22e:	das    
  41c22f:	sbb    al,0xf2
  41c231:	imul   eax,DWORD PTR [ecx],0x59b45371
  41c237:	mov    esi,0xd79e311a
  41c23c:	jl     0x41c1ef
  41c23e:	mov    esp,0xc3236567
  41c243:	inc    ebp
  41c244:	mov    dl,0xcf
  41c246:	mov    ah,0xac
  41c248:	xchg   DWORD PTR [ecx-0x1cb7ab3e],edi
  41c24e:	add    al,0x88
  41c251:	scas   eax,DWORD PTR es:[edi]
  41c252:	(bad)  
  41c253:	lock into 
  41c255:	jle    0x41c2a0
  41c257:	adc    DWORD PTR [edi-0x46],ebx
  41c25a:	gs retf 
  41c25c:	icebp  
  41c25d:	les    eax,FWORD PTR [ecx-0x4963fdbe]
  41c263:	mov    dl,0xd0
  41c265:	sbb    DWORD PTR [edi+0x1454105d],esp
  41c26b:	push   esi
  41c26c:	or     dl,BYTE PTR [eax-0x7f]
  41c26f:	(bad)  
  41c270:	cmc    
  41c271:	fldenv [ebx]
  41c273:	js     0x41c215
  41c275:	xor    ah,al
  41c277:	fiadd  DWORD PTR [ebx-0x32]
  41c27a:	mov    DWORD PTR [ecx+0x1f],ebp
  41c27d:	add    esp,esp
  41c27f:	or     edx,DWORD PTR [ecx]
  41c281:	adc    ah,BYTE PTR [ebp+ecx*8+0x9797396]
  41c288:	mov    ebx,0x906b4e34
  41c28d:	into   
  41c28e:	test   al,0x94
  41c290:	jbe    0x41c29d
  41c292:	sbb    cl,dh
  41c294:	ins    DWORD PTR es:[edi],dx
  41c295:	cdq    
  41c296:	ror    edi,1
  41c298:	xor    BYTE PTR [esi+0x4e],al
  41c29b:	data16 jl 0x41c277
  41c29e:	sbb    DWORD PTR [ebx],ebx
  41c2a0:	and    al,0x8d
  41c2a2:	dec    esp
  41c2a3:	or     DWORD PTR [edx],esp
  41c2a5:	adc    DWORD PTR [eax],esi
  41c2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2a8:	xchg   ebp,eax
  41c2a9:	mov    ebp,0xa4dc7a1d
  41c2ae:	cmp    edx,eax
  41c2b0:	mov    fs,WORD PTR [edx-0x46]
  41c2b3:	imul   BYTE PTR [ecx]
  41c2b5:	sub    al,0xc9
  41c2b7:	mov    ebx,0x6fef52a8
  41c2bc:	and    al,BYTE PTR [ecx+0x20400a8d]
  41c2c2:	mov    BYTE PTR [ebx],0xb1
  41c2c5:	xchg   edx,eax
  41c2c6:	mov    ds:0x268cfc9f,eax
  41c2cb:	push   cs
  41c2cc:	shl    esp,1
  41c2ce:	fisttp DWORD PTR [ebp+eiz*2+0x335c0ad0]
  41c2d5:	mov    bl,0xb5
  41c2d7:	and    BYTE PTR ds:0xa3e185af,ch
  41c2dd:	add    al,0x89
  41c2df:	test   DWORD PTR ds:0x66b6b0ae,edx
  41c2e5:	sub    esp,DWORD PTR [esi-0x3696d5a7]
  41c2eb:	push   esp
  41c2ec:	aas    
  41c2ed:	sub    dl,ch
  41c2ef:	out    dx,al
  41c2f0:	rol    ah,cl
  41c2f2:	imul   ebp,DWORD PTR [edx+0x44],0x874d37f9
  41c2f9:	xlat   BYTE PTR ds:[ebx]
  41c2fa:	fnsave es:[ecx+esi*2-0x2fa24bc6]
  41c302:	imul   ebp,eax,0x16
  41c305:	mov    ebp,eax
  41c307:	stos   BYTE PTR es:[edi],al
  41c308:	push   cs
  41c309:	pop    eax
  41c30a:	rol    DWORD PTR [edi+0x51ed7258],0xb6
  41c311:	lahf   
  41c312:	pop    edx
  41c313:	loopne 0x41c365
  41c315:	gs lock jge 0x41c2cb
  41c319:	push   DWORD PTR [ecx+0x2b]
  41c31c:	jecxz  0x41c332
  41c31e:	fdivr  QWORD PTR [eax-0x26]
  41c321:	jmp    0x41c303
  41c323:	retf   0x4dbe
  41c326:	data16 cmc 
  41c328:	and    al,0x87
  41c32a:	and    al,BYTE PTR [edi]
  41c32c:	gs jno 0x41c2c3
  41c32f:	jmp    0xa18f:0xa233ce94
  41c336:	gs lock and bl,al
  41c33a:	rcr    BYTE PTR ds:0x7e349eca,cl
  41c340:	mov    al,0x1e
  41c342:	test   al,0x98
  41c344:	jae    0x41c3b9
  41c346:	jno    0x41c34d
  41c348:	out    0xcf,al
  41c34a:	in     eax,dx
  41c34b:	scas   eax,DWORD PTR es:[edi]
  41c34c:	jp     0x41c2d5
  41c34e:	mov    BYTE PTR [eax+0x27f89ca3],bh
  41c354:	hlt    
  41c355:	aaa    
  41c356:	mov    ah,0x6f
  41c358:	(bad)  
  41c35a:	push   ebp
  41c35b:	clc    
  41c35c:	mov    eax,0x549c8058
  41c361:	mov    al,0x32
  41c363:	jle    0x41c3c8
  41c365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c366:	jbe    0x41c308
  41c368:	push   ecx
  41c369:	or     al,0x16
  41c36b:	sahf   
  41c36c:	out    dx,al
  41c36d:	xchg   ebp,eax
  41c36e:	out    0xc6,eax
  41c370:	jno    0x41c395
  41c372:	pop    edi
  41c373:	xor    BYTE PTR [edx],bh
  41c375:	test   BYTE PTR [ecx+0x1b],0x0
  41c379:	loop   0x41c3ed
  41c37b:	dec    dx
  41c37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c37e:	mov    ds:0xe7d9d601,eax
  41c383:	in     eax,0x74
  41c385:	test   eax,0x1197dc6d
  41c38a:	mov    dh,0xd6
  41c38c:	sbb    DWORD PTR [ebp+0x40],ebx
  41c38f:	hlt    
  41c390:	fnsave [esi-0x6342c7d7]
  41c396:	jmp    0x41c3c8
  41c398:	sbb    eax,0x7eaca75f
  41c39d:	sahf   
  41c39e:	add    al,0x7b
  41c3a0:	and    bl,dl
  41c3a2:	jmp    0xb8e08b42
  41c3a7:	push   0xffffff9b
  41c3a9:	jo     0x41c335
  41c3ab:	push   0x21
  41c3ad:	mov    dl,0xf6
  41c3af:	adc    ah,BYTE PTR [edx]
  41c3b1:	pusha  
  41c3b2:	or     eax,0x595dbcf7
  41c3b7:	jp     0x41c3c0
  41c3b9:	(bad)  
  41c3ba:	mov    dh,BYTE PTR [edi]
  41c3bc:	pusha  
  41c3bd:	pop    es
  41c3be:	loop   0x41c403
  41c3c0:	mov    esi,0xb0eac93c
  41c3c5:	cmc    
  41c3c6:	push   0xf08e6d76
  41c3cb:	test   al,0x8d
  41c3cd:	jmp    0xbd9d:0x91d5544e
  41c3d4:	and    al,BYTE PTR [ebp+0x596a30f1]
  41c3da:	cwde   
  41c3db:	xor    BYTE PTR [edi-0x36],0x7
  41c3df:	and    al,BYTE PTR [ebp-0x4b00663f]
  41c3e5:	mov    edx,0x538adab0
  41c3ea:	loop   0x41c39d
  41c3ec:	add    BYTE PTR [ebx-0x6c],dh
  41c3ef:	ret    0xee51
  41c3f2:	dec    ecx
  41c3f3:	add    BYTE PTR ds:0x796cc367,dl
  41c3f9:	xchg   dh,bl
  41c3fb:	sub    eax,0x23fa70c7
  41c400:	push   ebx
  41c401:	push   cs
  41c402:	mov    bl,0x19
  41c404:	sub    edi,ebx
  41c406:	out    dx,al
  41c407:	or     BYTE PTR [ebx],ch
  41c409:	mov    WORD PTR [edx*1-0x502fa2b4],cs
  41c410:	dec    edx
  41c411:	and    DWORD PTR [edi-0x31828b6e],esi
  41c417:	scas   al,BYTE PTR es:[edi]
  41c418:	and    cl,ah
  41c41a:	out    dx,eax
  41c41b:	jne    0x41c3be
  41c41d:	adc    al,0x29
  41c41f:	shl    DWORD PTR [edx+eax*8],1
  41c422:	inc    eax
  41c423:	fild   WORD PTR [esi]
  41c425:	div    ch
  41c427:	dec    edx
  41c428:	dec    ecx
  41c42a:	adc    DWORD PTR [ebx],esp
  41c42c:	enter  0x27a5,0x9d
  41c430:	or     ebp,DWORD PTR [edx-0x14]
  41c433:	push   ebx
  41c434:	push   esp
  41c435:	(bad)  
  41c436:	js     0x41c3bc
  41c438:	cmp    BYTE PTR [edx+0x7a],bh
  41c43b:	fwait
  41c43c:	rcl    DWORD PTR [edi+edx*4],1
  41c43f:	jg     0x41c432
  41c441:	in     eax,dx
  41c442:	fs mov ebp,0x2978ae52
  41c448:	jb     0x41c3f1
  41c44a:	and    eax,0x2d18a748
  41c44f:	pop    ss
  41c450:	dec    edx
  41c451:	enter  0x3853,0x19
  41c455:	das    
  41c456:	mov    edi,0xb1dc2556
  41c45b:	sub    al,0xfc
  41c45d:	int3   
  41c45e:	add    ebp,DWORD PTR [eax-0x55978a26]
  41c464:	jmp    0x6faf:0x73d341dc
  41c46b:	scas   eax,DWORD PTR es:[edi]
  41c46c:	xlat   BYTE PTR ds:[ebx]
  41c46d:	mov    ds:0xe4437c14,al
  41c472:	mov    ebp,0x15757979
  41c477:	ins    DWORD PTR es:[edi],dx
  41c478:	call   0x7ea1:0xd6a287a6
  41c47f:	aam    0x4d
  41c481:	push   edi
  41c482:	mov    al,ds:0x6899f30b
  41c487:	or     eax,0x9b1abb7c
  41c48c:	mov    edi,0x77c708b5
  41c491:	enter  0x6fb,0x34
  41c495:	mov    dh,0x33
  41c497:	add    ebx,esp
  41c499:	pop    ss
  41c49a:	outs   dx,DWORD PTR ds:[esi]
  41c49b:	sar    dh,cl
  41c49d:	loope  0x41c4e1
  41c49f:	daa    
  41c4a0:	call   0xbfa47aff
  41c4a5:	fild   QWORD PTR [esi+0x21]
  41c4a8:	adc    cl,bh
  41c4aa:	and    eax,0xf82ec089
  41c4af:	xchg   esi,eax
  41c4b0:	inc    eax
  41c4b1:	xor    dl,BYTE PTR [esi]
  41c4b3:	push   esi
  41c4b4:	inc    eax
  41c4b5:	or     bl,BYTE PTR [edi+0x5ed6cbc]
  41c4bb:	popf   
  41c4bc:	inc    eax
  41c4bd:	sub    eax,0xbb06c7c4
  41c4c2:	rol    DWORD PTR [esi-0x4],cl
  41c4c5:	test   BYTE PTR [edi-0x46],bh
  41c4c8:	jae    0x41c475
  41c4ca:	ins    BYTE PTR es:[edi],dx
  41c4cb:	dec    edx
  41c4cc:	xchg   DWORD PTR [esi],ecx
  41c4ce:	sahf   
  41c4cf:	push   0x3dd0534c
  41c4d4:	lock pop ds
  41c4d6:	enter  0xdb48,0x22
  41c4da:	rcl    esp,0x76
  41c4dd:	call   0x59b2:0x5a56ec0d
  41c4e4:	mov    WORD PTR [eax-0x6],ss
  41c4e7:	xor    eax,0xec8da214
  41c4ec:	pop    ss
  41c4ed:	xor    esi,DWORD PTR ds:0xb5be9535
  41c4f3:	sbb    al,BYTE PTR [edi+0x5590420e]
  41c4f9:	bound  edi,QWORD PTR [edx]
  41c4fb:	mov    cl,0x0
  41c4fd:	fadd   st(1),st
  41c4ff:	rol    ebp,0x32
  41c502:	pop    ebx
  41c503:	or     cl,BYTE PTR [eax-0x1f786748]
  41c509:	push   0x4c
  41c50b:	adc    eax,0x36340bbf
  41c510:	jmp    0x262b:0x656bf426
  41c517:	jne    0x41c550
  41c519:	xor    eax,0x2a48494e
  41c51e:	lahf   
  41c51f:	xchg   ecx,eax
  41c520:	mov    eax,0x65da432
  41c525:	and    DWORD PTR [esi-0x18],ecx
  41c528:	pop    es
  41c529:	retf   
  41c52a:	xor    DWORD PTR [edx],ecx
  41c52c:	(bad)  
  41c52d:	icebp  
  41c52e:	out    dx,eax
  41c52f:	inc    esp
  41c530:	jo     0x41c563
  41c532:	sbb    ah,BYTE PTR [ecx-0xa99f86f]
  41c538:	ror    BYTE PTR [ecx+eax*4+0x70],1
  41c53c:	repnz push ss
  41c53e:	dec    edi
  41c53f:	imul   ebx,DWORD PTR [edi+0x36],0xffffffa7
  41c543:	rcr    BYTE PTR [ebx+0x3f44cda8],1
  41c549:	jp     0x41c5a8
  41c54b:	inc    esi
  41c54c:	push   0x9e0d15d8
  41c551:	dec    eax
  41c552:	xchg   esi,eax
  41c553:	test   cl,ch
  41c555:	ds (bad) 
  41c557:	pop    ebp
  41c558:	test   DWORD PTR [esi+0x2],0xa7ef38a7
  41c55f:	popa   
  41c560:	popa   
  41c561:	mov    al,ds:0x51ac424a
  41c566:	outs   dx,DWORD PTR ds:[esi]
  41c567:	cmp    BYTE PTR [edx],dh
  41c569:	stos   BYTE PTR es:[edi],al
  41c56a:	in     al,0x14
  41c56c:	xor    eax,0x2de50252
  41c571:	push   esi
  41c572:	pop    ecx
  41c573:	call   0x8d14:0x186f55
  41c57a:	std    
  41c57b:	clc    
  41c57c:	ins    BYTE PTR es:[edi],dx
  41c57d:	add    esp,eax
  41c57f:	mov    cl,0x65
  41c581:	ror    DWORD PTR [edi-0x195dc7fc],cl
  41c587:	pop    edx
  41c588:	test   edi,0xc1b2df0d
  41c58e:	sbb    DWORD PTR [ebx+0xb18a148],esi
  41c594:	adc    al,0x35
  41c596:	arpl   WORD PTR [ecx-0x3283c508],cx
  41c59c:	dec    ecx
  41c59d:	test   DWORD PTR [eax+0x1],0x5ec2ebcf
  41c5a4:	nop
  41c5a5:	fcom   DWORD PTR [ebx-0x77]
  41c5a8:	pop    ebx
  41c5a9:	std    
  41c5aa:	xchg   esp,eax
  41c5ab:	inc    edi
  41c5ac:	pop    di
  41c5ae:	(bad)  
  41c5af:	mov    al,ds:0xc065e69c
  41c5b4:	pop    esp
  41c5b5:	and    al,0xdc
  41c5b7:	pusha  
  41c5b8:	add    eax,0x1de4b43b
  41c5bd:	adc    dl,BYTE PTR [edi]
  41c5bf:	cmp    eax,0x8a77c40e
  41c5c4:	les    esp,FWORD PTR ds:0x26589619
  41c5ca:	hlt    
  41c5cb:	adc    BYTE PTR [ebx-0x25db6c80],dh
  41c5d1:	pop    ebp
  41c5d2:	scas   eax,DWORD PTR es:[edi]
  41c5d3:	dec    ecx
  41c5d4:	xor    al,0xa0
  41c5d6:	ss dec edx
  41c5d8:	test   al,0x83
  41c5da:	pop    ebx
  41c5db:	(bad)  
  41c5dd:	neg    bl
  41c5df:	loop   0x41c5c5
  41c5e1:	(bad)  
  41c5e2:	stos   DWORD PTR es:[edi],eax
  41c5e3:	leave  
  41c5e4:	daa    
  41c5e5:	ja     0x41c5d6
  41c5e7:	mov    al,0x90
  41c5e9:	pop    esp
  41c5ea:	sbb    eax,0x9a67f37b
  41c5ef:	rcr    BYTE PTR [esi],0x90
  41c5f2:	add    BYTE PTR [edi],dh
  41c5f4:	scas   eax,DWORD PTR es:[edi]
  41c5f5:	sbb    al,0xcb
  41c5f7:	(bad)  
  41c5f8:	int3   
  41c5f9:	pop    eax
  41c5fa:	(bad)  
  41c5fb:	into   
  41c5fc:	scas   al,BYTE PTR es:[edi]
  41c5fd:	adc    DWORD PTR [esi+0x27622c55],0x61a20549
  41c607:	cmp    ah,ah
  41c609:	lds    esi,FWORD PTR [edx+0x23f1baca]
  41c60f:	rol    esp,0x55
  41c612:	xor    al,0xc4
  41c614:	and    eax,0xbbf5e203
  41c619:	xor    BYTE PTR [edi-0x62],dh
  41c61c:	push   edi
  41c61d:	fnstcw WORD PTR [edi]
  41c61f:	mov    al,0xa8
  41c621:	pop    es
  41c622:	sub    bh,BYTE PTR [esi+0x2eefbaa5]
  41c628:	pop    edi
  41c629:	pop    ebp
  41c62a:	rol    cl,1
  41c62c:	push   esp
  41c62d:	ins    DWORD PTR es:[edi],dx
  41c62e:	dec    esi
  41c62f:	(bad)  
  41c630:	mov    edi,ss
  41c632:	add    al,0x65
  41c634:	lds    edx,FWORD PTR [eax+0x3dec573b]
  41c63a:	and    BYTE PTR [ebx],ah
  41c63c:	nop    DWORD PTR [esi-0x7a]
  41c640:	(bad)  
  41c642:	fidivr WORD PTR [eax+0x34]
  41c645:	add    edx,esp
  41c647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c648:	adc    ebp,DWORD PTR [esp+eiz*4]
  41c64b:	iret   
  41c64c:	ficom  WORD PTR [edi+0x1c]
  41c64f:	adc    BYTE PTR [eax],dl
  41c651:	sub    eax,edi
  41c653:	jl     0x41c676
  41c655:	hlt    
  41c656:	rol    DWORD PTR [eax-0x492131e1],0xf5
  41c65d:	adc    al,0x4
  41c65f:	in     al,dx
  41c660:	sbb    DWORD PTR [edi+0x5b],edi
  41c663:	shr    BYTE PTR [edx+0x32],1
  41c666:	lods   al,BYTE PTR ds:[esi]
  41c667:	add    dh,al
  41c669:	fwait
  41c66a:	pop    esp
  41c66b:	jns    0x41c6cc
  41c66d:	push   edi
  41c66e:	mov    ecx,0x1b8e9b58
  41c673:	or     BYTE PTR [ecx],al
  41c675:	repz mov bh,0x90
  41c678:	xchg   ebx,eax
  41c679:	mov    eax,0xe2c4f547
  41c67e:	push   ebp
  41c67f:	fs pop ss
  41c681:	mov    ch,0xed
  41c683:	test   al,0x2c
  41c685:	and    DWORD PTR [eax],ecx
  41c687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c688:	mov    cs:0x96118c87,al
  41c68e:	mov    edx,0xf2567fd
  41c693:	adc    dl,BYTE PTR [ecx]
  41c695:	cmc    
  41c696:	push   esi
  41c697:	pop    eax
  41c698:	mov    esp,0x548907d0
  41c69d:	loop   0x41c646
  41c69f:	jecxz  0x41c685
  41c6a1:	clc    
  41c6a2:	aad    0x7c
  41c6a4:	push   ds
  41c6a5:	pop    ebx
  41c6a6:	jns    0x41c689
  41c6a8:	mov    ch,0x39
  41c6aa:	mov    esi,0xc43d600a
  41c6af:	and    eax,0xd0e8015b
  41c6b4:	inc    ebx
  41c6b5:	aaa    
  41c6b6:	or     DWORD PTR [esi-0x58],edi
  41c6b9:	addr16 push ecx
  41c6bb:	xchg   edi,eax
  41c6bc:	xor    eax,0x48b9cff3
  41c6c1:	inc    ecx
  41c6c2:	sbb    edx,DWORD PTR [eax-0x6a]
  41c6c5:	mov    esi,0x935502a9
  41c6ca:	imul   eax,DWORD PTR [edi+0x3183748b],0x25f04be9
  41c6d4:	xor    edx,esp
  41c6d6:	push   cs
  41c6d7:	sti    
  41c6d8:	dec    eax
  41c6d9:	pop    ss
  41c6da:	ficom  WORD PTR [edi+0x5a]
  41c6dd:	sahf   
  41c6de:	xchg   edi,eax
  41c6df:	pop    ss
  41c6e0:	xor    DWORD PTR [edx-0x307a9ce0],esi
  41c6e6:	inc    edi
  41c6e7:	out    0xe3,eax
  41c6e9:	jne    0x41c6ac
  41c6eb:	retf   0xa129
  41c6ee:	ins    DWORD PTR es:[edi],dx
  41c6ef:	fwait
  41c6f0:	not    DWORD PTR [esi]
  41c6f2:	xchg   eax,esi
  41c6f4:	sub    ebp,eax
  41c6f6:	jo     0x41c6d5
  41c6f8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6fa:	aad    0x71
  41c6fc:	sar    BYTE PTR [ecx-0xcc45d29],0xda
  41c703:	push   ebx
  41c704:	push   ebp
  41c705:	fxch   st(6)
  41c707:	stos   DWORD PTR es:[edi],eax
  41c708:	mov    ah,0x7f
  41c70a:	jge    0x41c6ef
  41c70c:	ja     0x41c6d5
  41c70e:	(bad)  
  41c70f:	leave  
  41c710:	add    ax,0xeadd
  41c714:	hlt    
  41c715:	fwait
  41c716:	mov    eax,0xd72e8a02
  41c71b:	sub    BYTE PTR [esi-0x4f],0x56
  41c71f:	out    dx,eax
  41c720:	jl     0x41c785
  41c722:	shr    ah,0x26
  41c725:	or     BYTE PTR [edx],cl
  41c727:	sti    
  41c728:	(bad)  
  41c729:	(bad)  
  41c72a:	arpl   sp,bx
  41c72c:	jmp    0x95cb5c98
  41c731:	std    
  41c732:	sub    edx,eax
  41c734:	shl    BYTE PTR [eax+0x5f],0x95
  41c738:	pop    esp
  41c739:	mov    esi,0x1098304c
  41c73e:	mov    eax,0x3748c1d2
  41c743:	imul   ebx,DWORD PTR [ebp+0x4b61235e],0xffffff95
  41c74a:	xor    ebx,edx
  41c74c:	mov    dh,0x2a
  41c74e:	js     0x41c6e3
  41c750:	jle    0x41c6e5
  41c752:	(bad)  
  41c753:	in     eax,dx
  41c754:	inc    ebp
  41c755:	bound  ebp,QWORD PTR [esi-0x569507ac]
  41c75b:	int    0x70
  41c75d:	stos   BYTE PTR es:[edi],al
  41c75e:	lock push esp
  41c760:	cwde   
  41c761:	xor    ecx,DWORD PTR [edi]
  41c763:	mov    dh,0xf5
  41c765:	pop    ebx
  41c766:	ss in  eax,0x2
  41c769:	jbe    0x41c78f
  41c76b:	pop    esi
  41c76c:	xchg   ebx,eax
  41c76d:	push   esp
  41c76e:	xor    bl,BYTE PTR ds:0xc7867390
  41c774:	aaa    
  41c775:	aad    0x49
  41c777:	shl    DWORD PTR [ebp-0x3d],cl
  41c77a:	aad    0x9a
  41c77c:	add    DWORD PTR [ebp-0x712a0bc7],0xffffffac
  41c783:	xor    al,0xd
  41c785:	cmc    
  41c786:	push   0x28ac3e64
  41c78b:	inc    ebp
  41c78c:	mov    bl,0x8b
  41c78e:	push   edx
  41c78f:	add    ch,ah
  41c791:	and    dh,BYTE PTR [edi]
  41c793:	call   0x64f3af9d
  41c798:	and    cl,ah
  41c79a:	mov    ecx,DWORD PTR [ebx-0x77510fa2]
  41c7a0:	shl    ah,0x5e
  41c7a3:	pop    edi
  41c7a4:	jp     0x41c7cf
  41c7a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7a7:	and    DWORD PTR [esi+0x1b],0x5fa4e91b
  41c7ae:	cmp    eax,0x767e8c94
  41c7b3:	das    
  41c7b4:	cmp    eax,0xa16e3ac1
  41c7b9:	lock dec edi
  41c7bb:	jmp    0x455afb1a
  41c7c0:	mov    BYTE PTR [edi+0xb],cl
  41c7c3:	add    DWORD PTR [eax-0x59],edi
  41c7c6:	add    BYTE PTR [ebx],dl
  41c7c8:	fdivr  QWORD PTR [edi-0x2413003e]
  41c7ce:	inc    edi
  41c7cf:	scas   al,BYTE PTR es:[edi]
  41c7d0:	adc    edx,DWORD PTR [eax+ebx*8]
  41c7d3:	mov    dl,BYTE PTR [ebp+0x78ef73d4]
  41c7d9:	ret    
  41c7da:	in     al,0xdb
  41c7dc:	mov    ss,esi
  41c7de:	sbb    DWORD PTR [edi],0x14c91a32
  41c7e4:	pop    ss
  41c7e5:	sub    ebp,DWORD PTR [edi-0x2]
  41c7e8:	xchg   esi,eax
  41c7e9:	mov    BYTE PTR [esi+0x78475440],ch
  41c7ef:	test   al,ah
  41c7f1:	in     al,dx
  41c7f2:	sub    DWORD PTR [edi+0x65],eax
  41c7f5:	les    ebx,FWORD PTR [ebx+ecx*4]
  41c7f8:	ret    
  41c7f9:	inc    ebx
  41c7fa:	or     bl,al
  41c7fc:	and    BYTE PTR [ecx+0x1a],bh
  41c7ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c800:	rcl    BYTE PTR [ecx-0x1d],1
  41c803:	(bad)  
  41c804:	ins    BYTE PTR es:[edi],dx
  41c805:	jo     0x41c7a0
  41c807:	mov    ebx,0xf92d82a3
  41c80c:	mov    ecx,0x79626ee2
  41c811:	into   
  41c812:	icebp  
  41c813:	jge    0x41c84d
  41c815:	jo     0x41c88e
  41c817:	push   0xffffffc0
  41c819:	test   BYTE PTR [edx+0x43cc99c9],dl
  41c81f:	test   dh,0xa7
  41c822:	mov    eax,0x82c0d4d1
  41c827:	xor    al,0x33
  41c829:	(bad)  
  41c82a:	mov    ebx,0x4b3af0a5
  41c82f:	fstp   QWORD PTR [edi+esi*1-0x1248091a]
  41c836:	push   esp
  41c837:	mov    BYTE PTR ds:0x49f94f6,al
  41c83d:	xlat   BYTE PTR ds:[ebx]
  41c83e:	je     0x41c801
  41c840:	jns    0x41c812
  41c842:	cmp    al,0x17
  41c844:	aas    
  41c845:	and    DWORD PTR [edx-0x6b],0x5b
  41c849:	dec    eax
  41c84a:	xchg   esp,eax
  41c84b:	push   esi
  41c84c:	nop
  41c84d:	rol    BYTE PTR [eax+ecx*1+0x578bd18f],0x57
  41c855:	mov    al,0x4f
  41c857:	push   ebx
  41c858:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41c85a:	dec    edi
  41c85b:	xchg   ebp,eax
  41c85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c85d:	and    eax,0x4f9e6b80
  41c862:	xlat   BYTE PTR ds:[ebx]
  41c863:	leave  
  41c864:	add    BYTE PTR [edi-0x2c10e304],al
  41c86a:	add    ch,cl
  41c86c:	dec    ecx
  41c86d:	jo     0x41c8db
  41c86f:	fcomp  QWORD PTR [ebp+0x36]
  41c872:	xchg   esi,eax
  41c873:	xchg   BYTE PTR [esi],cl
  41c875:	sbb    eax,0xf3ae7880
  41c87a:	or     esi,esi
  41c87c:	mov    esp,0x9e2307f3
  41c881:	add    eax,0xf8ede57f
  41c886:	sub    BYTE PTR [bx+di+0x79],cl
  41c88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c88b:	sbb    DWORD PTR [eax+0x26],esi
  41c88e:	shl    ebx,1
  41c890:	inc    ebx
  41c891:	das    
  41c892:	mov    ebx,0xd604666f
  41c897:	repnz push es
  41c899:	push   di
  41c89b:	repnz pop eax
  41c89d:	cmp    bh,BYTE PTR [esi]
  41c89f:	in     al,dx
  41c8a0:	mov    cl,0xf6
  41c8a2:	mov    dl,0x35
  41c8a4:	imul   eax,DWORD PTR [ebp+0x5d],0x2ce022d0
  41c8ab:	sbb    DWORD PTR [edi-0x76],ebx
  41c8ae:	(bad)  [ebx]
  41c8b0:	outs   dx,BYTE PTR ds:[esi]
  41c8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b2:	adc    cl,BYTE PTR [ebp+0x5dde7513]
  41c8b8:	adc    dl,BYTE PTR fs:[ebp+0x37197362]
  41c8bf:	push   es
  41c8c0:	call   0x3d9703f7
  41c8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8c6:	sub    eax,0xff7563ef
  41c8cb:	out    0x11,eax
  41c8cd:	enter  0xb2d7,0xca
  41c8d1:	icebp  
  41c8d2:	mov    cs,WORD PTR [eiz*1-0xe9260b6]
  41c8d9:	ja     0x41c8ae
  41c8db:	mov    edi,0xedeadcfe
  41c8e0:	outs   dx,DWORD PTR ds:[esi]
  41c8e1:	stos   DWORD PTR es:[edi],eax
  41c8e2:	adc    cl,BYTE PTR [eax]
  41c8e4:	or     al,0x39
  41c8e6:	outs   dx,BYTE PTR ds:[esi]
  41c8e7:	jge    0x41c935
  41c8e9:	sbb    bh,BYTE PTR [ebx+0x2638fd4a]
  41c8ef:	sub    al,0x0
  41c8f1:	jo     0x41c95b
  41c8f3:	ins    BYTE PTR es:[edi],dx
  41c8f4:	je     0x41c90b
  41c8f6:	call   FWORD PTR [edx]
  41c8f8:	out    0xe2,al
  41c8fa:	xor    eax,DWORD PTR es:[edx+0x45530986]
  41c901:	jno    0x41c8d5
  41c903:	push   0xfbde2585
  41c908:	cmp    BYTE PTR [ecx-0x59],bh
  41c90b:	test   eax,0x5ab2330b
  41c910:	xchg   DWORD PTR [esi-0x1a70effa],eax
  41c916:	mov    bl,0xdd
  41c918:	cmp    bl,BYTE PTR [eax-0x79]
  41c91b:	lds    eax,FWORD PTR [ebx]
  41c91d:	(bad)  
  41c91e:	out    dx,al
  41c91f:	dec    esp
  41c920:	or     DWORD PTR [eax+0x7b517c67],esp
  41c926:	int    0x7b
  41c928:	dec    esi
  41c929:	xlat   BYTE PTR ds:[ebx]
  41c92a:	es sbb esi,ebp
  41c92d:	or     BYTE PTR [eax-0x41],0xc4
  41c931:	pop    ebx
  41c932:	jno    0x41c956
  41c934:	stc    
  41c935:	mov    ebp,0x681f45cd
  41c93a:	jmp    0x41c991
  41c93c:	pop    ecx
  41c93d:	pop    esp
  41c93e:	mov    eax,ds:0x1b0e1dc0
  41c943:	mov    eax,ds:0xfb375126
  41c948:	xchg   edx,eax
  41c949:	(bad)  
  41c94a:	jl     0x41c99e
  41c94c:	sahf   
  41c94d:	iret   
  41c94e:	in     al,dx
  41c94f:	push   0x681a20e4
  41c954:	out    dx,eax
  41c955:	add    eax,0xa54c1a9d
  41c95a:	push   edx
  41c95b:	push   ebp
  41c95c:	sbb    DWORD PTR [edx+0x79],edi
  41c95f:	inc    edx
  41c960:	lods   al,BYTE PTR ds:[esi]
  41c961:	push   0x4597f31b
  41c966:	inc    esi
  41c967:	mov    ah,0x80
  41c969:	jle    0x41c9e0
  41c96b:	stc    
  41c96c:	hlt    
  41c96d:	ds push cs
  41c96f:	adc    ch,BYTE PTR [ebp+0x34]
  41c972:	add    eax,ebp
  41c974:	pop    edi
  41c975:	add    al,BYTE PTR [edx]
  41c977:	clc    
  41c978:	push   esi
  41c979:	call   0xc3f6:0x2dc08474
  41c980:	ror    DWORD PTR [esi],0x53
  41c983:	sub    dh,BYTE PTR [edx]
  41c985:	inc    ebx
  41c986:	add    ebp,DWORD PTR [ecx+esi*4]
  41c989:	pop    edi
  41c98a:	inc    edi
  41c98b:	jae    0x41c96c
  41c98d:	call   0x7b8be57d
  41c992:	jmp    0xf4b3:0xfc781096
  41c999:	jnp    0x41c94a
  41c99b:	sbb    DWORD PTR [ecx-0x79],ecx
  41c99e:	clc    
  41c99f:	sub    dl,BYTE PTR [edi]
  41c9a1:	inc    ecx
  41c9a2:	adc    DWORD PTR [esi],0x77977a6f
  41c9a8:	lock push edx
  41c9aa:	or     ch,BYTE PTR [esi+eiz*2+0x60]
  41c9ae:	adc    edx,edx
  41c9b0:	js     0x41c964
  41c9b2:	rol    BYTE PTR [esi-0x2f8f402f],1
  41c9b8:	rol    BYTE PTR [esi-0x10d7ef3a],cl
  41c9be:	sub    eax,0x32afb129
  41c9c3:	xor    ah,al
  41c9c5:	stos   BYTE PTR es:[edi],al
  41c9c6:	mov    esp,0x3692ca53
  41c9cb:	mov    ah,0xf5
  41c9cd:	mov    dl,0xcb
  41c9cf:	push   edi
  41c9d0:	push   ds
  41c9d1:	mov    al,ds:0xa80bc606
  41c9d6:	dec    esp
  41c9d7:	jb     0x41c978
  41c9d9:	aaa    
  41c9da:	jmp    0x41c9d9
  41c9dc:	js     0x41ca22
  41c9de:	imul   DWORD PTR gs:[esi*8+0x4b62d329]
  41c9e6:	mov    dh,BYTE PTR [ebp+0x79]
  41c9e9:	sar    DWORD PTR [ecx+0x5a489165],0xa5
  41c9f0:	dec    edi
  41c9f1:	mov    al,0xa4
  41c9f3:	fiadd  DWORD PTR [ecx+eiz*4-0x39982300]
  41c9fa:	fs jg  0x41ca2a
  41c9fd:	push   edi
  41c9fe:	fnstcw WORD PTR [esi]
  41ca00:	cmp    esp,DWORD PTR [edi]
  41ca02:	add    eax,0x9725c087
  41ca07:	mov    al,BYTE PTR [esi-0x4c]
  41ca0a:	adc    cl,bl
  41ca0c:	fdiv   QWORD PTR [ebp-0x61]
  41ca0f:	addr16 jae 0x41ca63
  41ca12:	jbe    0x573114a8
  41ca18:	loopne 0x41c99c
  41ca1a:	adc    edx,edi
  41ca1c:	stos   BYTE PTR es:[edi],al
  41ca1d:	sub    dh,BYTE PTR [esi-0x77]
  41ca20:	aad    0x9d
  41ca22:	and    DWORD PTR [eax-0x2c],esi
  41ca25:	adc    DWORD PTR [esp+ebx*8-0x52ee7db1],ebp
  41ca2c:	ins    DWORD PTR es:[edi],dx
  41ca2d:	xchg   esp,eax
  41ca2e:	lods   al,BYTE PTR ds:[esi]
  41ca2f:	test   DWORD PTR [esi+ebx*4-0x7d2092ad],ecx
  41ca36:	fwait
  41ca37:	push   ss
  41ca38:	sbb    BYTE PTR [edx+0x2a7d7778],dh
  41ca3e:	add    al,0x3b
  41ca40:	push   ebx
  41ca41:	adc    ah,bh
  41ca43:	or     ebx,DWORD PTR [esi+eiz*1+0x4178c4b4]
  41ca4a:	push   esi
  41ca4b:	or     DWORD PTR [edi],ebx
  41ca4d:	ja     0x41ca7b
  41ca4f:	fnstsw WORD PTR [esi+0x4]
  41ca52:	inc    esp
  41ca53:	popf   
  41ca54:	dec    edi
  41ca55:	ja     0x41ca98
  41ca57:	pop    edx
  41ca58:	mov    DWORD PTR [ebp+0x26],esi
  41ca5b:	mov    bl,0xb3
  41ca5d:	fnstcw WORD PTR [ebp+0x2dfcc4ee]
  41ca63:	dec    esp
  41ca64:	or     BYTE PTR [edx-0x7b8f6bda],dh
  41ca6a:	cmp    eax,ebx
  41ca6c:	aam    0x92
  41ca6e:	hlt    
  41ca6f:	neg    BYTE PTR [ebx+0x399e7044]
  41ca75:	test   eax,0xa873b7d4
  41ca7a:	pop    esi
  41ca7b:	pop    ecx
  41ca7c:	mov    ebp,0x122112c2
  41ca81:	jle    0x41cab4
  41ca83:	std    
  41ca84:	scas   al,BYTE PTR es:[edi]
  41ca85:	ins    BYTE PTR es:[edi],dx
  41ca86:	pop    ss
  41ca87:	adc    BYTE PTR [edx],ch
  41ca89:	out    0x9c,al
  41ca8b:	pusha  
  41ca8c:	aad    0x93
  41ca8e:	int3   
  41ca8f:	jbe    0x41caf8
  41ca91:	and    al,BYTE PTR [ecx]
  41ca93:	adc    dh,BYTE PTR [ebx-0x3b6a315e]
  41ca99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca9a:	ficom  DWORD PTR [esi+ecx*2-0x78]
  41ca9e:	test   eax,0x16564553
  41caa3:	test   BYTE PTR [ecx],dl
  41caa5:	mov    al,ds:0xcacb053d
  41caaa:	jg     0x41cad2
  41caac:	sbb    eax,0x9fff7691
  41cab1:	add    al,0x3d
  41cab3:	ficom  DWORD PTR [edi]
  41cab5:	push   es
  41cab6:	xchg   BYTE PTR gs:[eax+0x6a],bl
  41caba:	pop    es
  41cabb:	div    DWORD PTR [edx+ebx*8+0x7d4a2c7a]
  41cac2:	clc    
  41cac3:	push   ebx
  41cac4:	ins    DWORD PTR es:[edi],dx
  41cac5:	test   eax,0xf5d4c6ce
  41caca:	adc    ch,BYTE PTR [eax+0x50]
  41cacd:	sbb    edi,DWORD PTR [edi-0x23]
  41cad0:	cmc    
  41cad1:	popf   
  41cad2:	loopne 0x41caa3
  41cad4:	loop   0x41ca57
  41cad6:	rcl    BYTE PTR [eax],cl
  41cad8:	mov    WORD PTR [eax],fs
  41cada:	hlt    
  41cadb:	out    0x1c,al
  41cadd:	cmova  esi,DWORD PTR [ecx+eiz*2-0x5c0833f8]
  41cae5:	popf   
  41cae6:	int    0x30
  41cae8:	retf   0xebc5
  41caeb:	add    ah,BYTE PTR fs:[ebx]
  41caee:	repz xor ebp,ebp
  41caf1:	push   0xa3775520
  41caf6:	outs   dx,DWORD PTR ds:[esi]
  41caf7:	out    0x1,eax
  41caf9:	inc    edi
  41cafa:	test   DWORD PTR [ecx],edx
  41cafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cafd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cafe:	pop    esp
  41caff:	sub    eax,0x11f7f785
  41cb04:	stos   BYTE PTR es:[edi],al
  41cb05:	push   edx
  41cb06:	adc    eax,0x7a7b8ec0
  41cb0b:	pop    ecx
  41cb0c:	mov    esi,0x29e2df3a
  41cb11:	jmp    0x4fe79bd2
  41cb16:	adc    bl,BYTE PTR [edx]
  41cb18:	cld    
  41cb19:	pushf  
  41cb1a:	pop    esp
  41cb1b:	hlt    
  41cb1c:	test   al,0xa9
  41cb1e:	scas   al,BYTE PTR es:[edi]
  41cb1f:	loope  0x41cb00
  41cb21:	popa   
  41cb22:	dec    edx
  41cb23:	das    
  41cb24:	inc    ebp
  41cb25:	inc    eax
  41cb26:	(bad)  
  41cb27:	jmp    0x3a1:0x86cbe932
  41cb2e:	pop    ds
  41cb2f:	jmp    0xdcc2:0xb6de6e42
  41cb36:	repnz mov al,ds:0x8fd9fab2
  41cb3c:	test   BYTE PTR [esi+edx*2],ah
  41cb3f:	dec    ebp
  41cb40:	outs   dx,BYTE PTR ds:[esi]
  41cb41:	sbb    bh,BYTE PTR [ebp-0x71]
  41cb44:	mov    dh,0x55
  41cb46:	repnz dec esi
  41cb48:	mov    al,ds:0x502c259
  41cb4d:	add    DWORD PTR [ebp-0x3258e766],0xffffff96
  41cb54:	mov    WORD PTR [ecx],?
  41cb56:	scas   eax,DWORD PTR es:[edi]
  41cb57:	test   DWORD PTR [ecx],ebp
  41cb59:	mov    ecx,0x6a2c74a1
  41cb5e:	jbe    0x41cb4b
  41cb60:	jbe    0x41cb1b
  41cb62:	push   esi
  41cb63:	or     BYTE PTR [edx],ah
  41cb65:	and    cl,BYTE PTR [eax]
  41cb67:	jmp    0xa864:0x5a43da11
  41cb6e:	xor    cl,ch
  41cb70:	pusha  
  41cb71:	aam    0x27
  41cb73:	loop   0x41cbd9
  41cb75:	jnp    0x41cb43
  41cb77:	mov    dl,0xa0
  41cb7a:	inc    ebp
  41cb7b:	and    DWORD PTR [ebp-0x24be0cb7],edx
  41cb81:	cdq    
  41cb82:	inc    esi
  41cb83:	mov    esp,0x5bb2c75f
  41cb88:	mov    edi,0x78be07ac
  41cb8d:	jecxz  0x41cb8c
  41cb8f:	pop    esp
  41cb90:	xor    dl,bl
  41cb92:	out    dx,eax
  41cb93:	jnp    0x41cb7b
  41cb95:	mov    cl,0x2e
  41cb97:	inc    ebp
  41cb98:	(bad)  
  41cb99:	sub    ebp,DWORD PTR [ebx-0x33]
  41cb9c:	pop    esp
  41cb9d:	inc    esi
  41cb9e:	mov    ecx,0x64651ded
  41cba3:	xlat   BYTE PTR ds:[ebx]
  41cba4:	aas    
  41cba5:	push   edx
  41cba6:	test   eax,0xa37e926
  41cbab:	fcomp  QWORD PTR [esp+esi*2+0x74]
  41cbaf:	or     DWORD PTR [edi+0x7bda3e7e],ecx
  41cbb5:	mov    esi,0x34238f1f
  41cbba:	mov    ds:0x87197d83,eax
  41cbbf:	lahf   
  41cbc0:	fild   DWORD PTR [ebp-0x4044fbb2]
  41cbc6:	push   ss
  41cbc7:	fs jge 0x41cc49
  41cbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbcb:	mov    ah,0xa9
  41cbcd:	ja     0x41cbbd
  41cbcf:	popa   
  41cbd0:	and    eax,0x54b2197c
  41cbd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbd6:	shl    BYTE PTR [esi+0x30],1
  41cbd9:	inc    eax
  41cbda:	cmp    DWORD PTR [edi*8+0x7cb8b31d],0xe1fe4c8b
  41cbe5:	jne    0x41cc51
  41cbe7:	popa   
  41cbe8:	xor    eax,0x747329
  41cbed:	aad    0xea
  41cbef:	or     DWORD PTR [edx],esp
  41cbf1:	fs jmp 0x47d1:0x26ae7613
  41cbf9:	imul   ebx,DWORD PTR [edx+0x2],0xffffff81
  41cbfd:	icebp  
  41cbfe:	ins    DWORD PTR es:[edi],dx
  41cbff:	js     0x41cbd8
  41cc01:	mov    ecx,0x8919f9b1
  41cc06:	sbb    eax,0xc2c35061
  41cc0b:	mov    al,0xdb
  41cc0d:	mov    ah,0xfe
  41cc0f:	jecxz  0x41cbac
  41cc11:	pop    ebp
  41cc12:	aad    0x45
  41cc14:	xor    esi,edi
  41cc16:	std    
  41cc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc18:	aaa    
  41cc19:	xchg   DWORD PTR [esi+0x6f],edi
  41cc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc1d:	xor    ah,ch
  41cc1f:	mov    eax,0x2594b3e7
  41cc24:	add    DWORD PTR ds:[ebx+0x2fd9ded1],0x4844cc6b
  41cc2f:	mov    DWORD PTR ds:0x62259ebd,edx
  41cc35:	data16 jae 0x41cc63
  41cc38:	inc    edi
  41cc39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc3a:	std    
  41cc3b:	mov    dh,0xcb
  41cc3d:	(bad)  
  41cc3e:	push   edx
  41cc3f:	cli    
  41cc40:	jmp    DWORD PTR [edx+0x4ca91f80]
  41cc46:	dec    edx
  41cc47:	fbstp  TBYTE PTR [ebx+0x44368eec]
  41cc4d:	neg    BYTE PTR [ebx-0x76]
  41cc50:	out    0x44,al
  41cc52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc53:	pusha  
  41cc54:	lock punpckldq mm2,DWORD PTR [ebp+0x72f655b2]
  41cc5c:	sub    bh,BYTE PTR [ebx-0x56729c4b]
  41cc62:	cmp    al,0x6e
  41cc64:	push   eax
  41cc65:	jp     0x41cce5
  41cc67:	out    0x1f,al
  41cc69:	cmovge ebp,eax
  41cc6c:	and    BYTE PTR [esp+ebx*8],cl
  41cc6f:	les    edx,FWORD PTR ds:0x3e3cbdad
  41cc75:	push   edx
  41cc76:	popf   
  41cc77:	call   FWORD PTR [ebx]
  41cc79:	inc    ecx
  41cc7a:	jo     0x41cc58
  41cc7c:	sbb    esi,DWORD PTR ds:0x895c396e
  41cc82:	xchg   edx,eax
  41cc83:	in     al,dx
  41cc84:	call   0xe28b:0x47bfa772
  41cc8b:	int    0xbd
  41cc8d:	rol    BYTE PTR [ebp+0x47],0x8d
  41cc91:	push   esp
  41cc92:	mov    ebp,0xb041dd02
  41cc97:	call   0x3aa5:0xba525cdb
  41cc9e:	dec    ebx
  41cc9f:	xchg   ebx,eax
  41cca0:	icebp  
  41cca1:	push   es
  41cca2:	mov    eax,ds:0x1f5b3519
  41cca7:	ds scas eax,DWORD PTR es:[edi]
  41cca9:	sbb    eax,0xe8d26f26
  41ccae:	mov    eax,esi
  41ccb0:	in     eax,dx
  41ccb1:	adc    eax,esi
  41ccb3:	popf   
  41ccb4:	jmp    0x789b9d44
  41ccb9:	mov    ebp,0x3b7931a3
  41ccbe:	stos   BYTE PTR es:[edi],al
  41ccbf:	jmp    0x9c4f:0x680e2012
  41ccc6:	inc    edx
  41ccc7:	(bad)  
  41ccc9:	fidivr WORD PTR ds:0x27f78175
  41cccf:	push   0x4c97ad48
  41ccd4:	sub    BYTE PTR [ebp-0x26],dh
  41ccd7:	lahf   
  41ccd8:	xor    eax,0x6ad6b90c
  41ccdd:	mov    eax,ds:0x6419460b
  41cce2:	out    0x6d,eax
  41cce4:	outs   dx,DWORD PTR fs:[esi]
  41cce6:	(bad)  
  41cce8:	jmp    0x41cd23
  41ccea:	or     al,0x2a
  41ccec:	cmc    
  41cced:	jae    0x41cd64
  41ccef:	sub    ah,ch
  41ccf1:	dec    edi
  41ccf2:	sbb    ebx,esp
  41ccf4:	adc    bh,BYTE PTR [ecx]
  41ccf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccf7:	jns    0x41cd43
  41ccf9:	cli    
  41ccfa:	shl    BYTE PTR [edx-0x4c],cl
  41ccfd:	add    eax,0x8c40347b
  41cd02:	fld1   
  41cd04:	sbb    ecx,0x22377c05
  41cd0a:	xor    al,0xaa
  41cd0c:	xor    BYTE PTR [ecx],dl
  41cd0e:	in     eax,dx
  41cd0f:	or     BYTE PTR [edx+0x74658bb1],0x73
  41cd16:	das    
  41cd17:	sub    al,0xf9
  41cd19:	jno    0x41cd2d
  41cd1b:	mov    ch,0x91
  41cd1d:	repnz sbb ebp,ebp
  41cd20:	add    eax,0x4c4f0837
  41cd25:	jb     0x41cd1f
  41cd27:	lods   al,BYTE PTR ds:[esi]
  41cd29:	in     eax,dx
  41cd2a:	or     eax,0x6b288429
  41cd2f:	popf   
  41cd30:	aad    0xb2
  41cd32:	mul    BYTE PTR [edi-0x2e13feb6]
  41cd38:	mov    al,ds:0x7759212f
  41cd3d:	push   esp
  41cd3e:	fs daa 
  41cd40:	out    0x63,eax
  41cd42:	add    al,0x43
  41cd44:	ja     0x41cdc0
  41cd46:	dec    eax
  41cd47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd48:	enter  0xac24,0x9e
  41cd4c:	xchg   ebx,eax
  41cd4d:	sbb    bh,BYTE PTR [esp+ebx*2]
  41cd50:	push   cs
  41cd51:	sub    al,0xb0
  41cd53:	outs   dx,DWORD PTR ds:[esi]
  41cd54:	ror    BYTE PTR [edx],cl
  41cd56:	fwait
  41cd57:	push   ebp
  41cd58:	popf   
  41cd59:	cld    
  41cd5a:	mov    ah,0x2a
  41cd5c:	inc    eax
  41cd5d:	xchg   esi,eax
  41cd5e:	mov    eax,0x942d93f1
  41cd63:	xchg   BYTE PTR [esi+0x5d],al
  41cd66:	sub    al,BYTE PTR [edi+0x7e]
  41cd69:	jns    0x41cd98
  41cd6b:	aaa    
  41cd6c:	add    bh,cl
  41cd6e:	enter  0xc141,0x81
  41cd72:	in     eax,dx
  41cd73:	mov    dl,0x19
  41cd75:	sbb    al,0xc5
  41cd77:	xor    eax,0x4bbab586
  41cd7c:	enter  0xe72b,0x92
  41cd80:	repnz xchg esi,eax
  41cd82:	ret    
  41cd83:	leave  
  41cd84:	in     eax,dx
  41cd85:	inc    BYTE PTR ds:0xa3993db
  41cd8b:	outs   dx,BYTE PTR ds:[esi]
  41cd8c:	pushf  
  41cd8d:	pop    edx
  41cd8e:	(bad)  
  41cd8f:	fidiv  DWORD PTR [esi]
  41cd91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd92:	cmp    al,0xab
  41cd94:	mov    ecx,0x50614ae4
  41cd99:	xchg   ecx,eax
  41cd9a:	gs pop edi
  41cd9c:	and    eax,0xdf65b3d4
  41cda1:	jle    0x41cd4e
  41cda3:	(bad)  
  41cda4:	leave  
  41cda5:	loopne 0x41cdc8
  41cda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda8:	scas   eax,DWORD PTR es:[edi]
  41cda9:	cli    
  41cdaa:	push   ebp
  41cdab:	into   
  41cdac:	mov    bl,0x9
  41cdae:	push   eax
  41cdaf:	lock jp 0x41cd46
  41cdb2:	inc    ecx
  41cdb3:	ds push ds
  41cdb5:	cli    
  41cdb6:	pop    es
  41cdb7:	mov    ds:0x4814cba8,al
  41cdbc:	rol    BYTE PTR [esi-0x1df460af],1
  41cdc2:	out    dx,al
  41cdc3:	hlt    
  41cdc4:	mov    ah,0xcc
  41cdc6:	into   
  41cdc7:	daa    
  41cdc8:	into   
  41cdc9:	or     ch,BYTE PTR [edx+0x1bd7897a]
  41cdcf:	inc    eax
  41cdd0:	cmp    al,0xd6
  41cdd2:	jle    0x41cd82
  41cdd4:	xchg   edi,eax
  41cdd5:	inc    ecx
  41cdd6:	pop    edi
  41cdd7:	inc    edx
  41cdd8:	test   DWORD PTR [ebp-0x55],ebx
  41cddb:	adc    cl,BYTE PTR [ecx]
  41cddd:	mov    cl,0x60
  41cddf:	push   0xffffff96
  41cde1:	popf   
  41cde2:	jae    0x41cdb9
  41cde4:	jno    0x41cd7e
  41cde6:	adc    DWORD PTR [ecx+edx*4],0x19
  41cdea:	inc    cx
  41cdec:	in     eax,dx
  41cded:	sub    al,0x30
  41cdef:	data16 mov al,ds:0xcaeb7675
  41cdf5:	xchg   cl,bl
  41cdf7:	jle    0x41ce38
  41cdf9:	and    al,0xa4
  41cdfb:	inc    esp
  41cdfc:	fimul  WORD PTR [edx]
  41cdfe:	sub    BYTE PTR [esi],0x9d
  41ce01:	adc    eax,0x32832614
  41ce06:	sti    
  41ce07:	fwait
  41ce08:	in     eax,dx
  41ce09:	rcr    BYTE PTR [edi-0x57fa636a],0x4d
  41ce10:	or     edi,esi
  41ce12:	js     0x41cd98
  41ce14:	or     bl,BYTE PTR [ebx+0x5f]
  41ce17:	jae    0x41cdf4
  41ce19:	arpl   sp,dx
  41ce1b:	inc    ebp
  41ce1c:	(bad)  
  41ce1d:	fidiv  DWORD PTR [ecx+edx*8-0x36]
  41ce21:	push   ecx
  41ce22:	adc    DWORD PTR [eiz*4+0x7506ef91],ebp
  41ce29:	retf   
  41ce2a:	inc    eax
  41ce2b:	out    dx,al
  41ce2c:	dec    ebx
  41ce2d:	adc    edi,DWORD PTR [eax+0x3fc8d49e]
  41ce33:	pop    esp
  41ce34:	aad    0xf7
  41ce36:	xadd   BYTE PTR [esi-0x26cd8d84],dl
  41ce3d:	(bad)  
  41ce3e:	mov    edi,0x99dc5f84
  41ce43:	stos   DWORD PTR es:[edi],eax
  41ce44:	cld    
  41ce45:	or     DWORD PTR ds:0xe99b32ff,0xf3eb3ae3
  41ce4f:	fadd   QWORD PTR [edx+ebx*2]
  41ce52:	pop    ebp
  41ce53:	cmp    al,BYTE PTR [ecx+0x64]
  41ce56:	xchg   esp,eax
  41ce57:	sbb    esi,DWORD PTR [edi+0x3b]
  41ce5a:	push   0xffffffde
  41ce5c:	jl     0x41ce57
  41ce5e:	out    0xc6,eax
  41ce60:	fsubr  DWORD PTR [ecx-0x2cc0b9af]
  41ce66:	test   BYTE PTR [edi-0x9329f83],al
  41ce6c:	(bad)  
  41ce6d:	xchg   ebx,eax
  41ce6e:	or     esp,esp
  41ce70:	in     eax,0xdf
  41ce72:	cmp    esp,DWORD PTR [ebp-0x6]
  41ce75:	aad    0x56
  41ce77:	ss repnz stos DWORD PTR es:[edi],eax
  41ce7a:	inc    esi
  41ce7b:	pop    esi
  41ce7c:	cmp    DWORD PTR [esi],0xffffffd8
  41ce7f:	xchg   esp,eax
  41ce80:	(bad)  
  41ce82:	mov    ecx,0x7aeb427
  41ce87:	std    
  41ce88:	xchg   dh,dl
  41ce8a:	ss dec edi
  41ce8c:	and    eax,0x26a7ac40
  41ce91:	fs push 0xffffffe1
  41ce94:	sub    bl,BYTE PTR [edx]
  41ce96:	test   eax,0xfd8c53de
  41ce9b:	fwait
  41ce9c:	cld    
  41ce9d:	cs das 
  41ce9f:	ret    
  41cea0:	dec    ebp
  41cea1:	push   es
  41cea2:	div    dl
  41cea4:	or     DWORD PTR [ecx],edx
  41cea6:	dec    ecx
  41cea7:	pop    esp
  41cea8:	dec    esi
  41cea9:	adc    DWORD PTR [ebx+0x3],edx
  41ceac:	dec    esp
  41cead:	cmp    edx,ebp
  41ceaf:	xchg   BYTE PTR ds:0xc5d91543,dh
  41ceb5:	(bad)  
  41ceb6:	rol    DWORD PTR ds:0x111478e5,cl
  41cebc:	out    0xbb,eax
  41cebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cebf:	fistp  WORD PTR [ebx]
  41cec1:	fucom  st(2)
  41cec3:	jge    0x41cf03
  41cec5:	xlat   BYTE PTR ds:[ebx]
  41cec6:	push   ds
  41cec7:	fldenv [edx-0x2742ae25]
  41cecd:	and    esi,ebx
  41cecf:	jg     0x41cef2
  41ced1:	cmp    esi,esp
  41ced3:	ss call 0xaedc:0x953e44f6
  41cedb:	jp     0x41cede
  41cedd:	inc    edi
  41cede:	cmc    
  41cedf:	es loop 0x41ce6f
  41cee2:	fwait
  41cee3:	jg     0x41cf3f
  41cee5:	in     eax,dx
  41cee6:	adc    al,0xcb
  41cee8:	mov    ecx,0x64189f40
  41ceed:	test   BYTE PTR [eax-0x59],ah
  41cef0:	mov    bl,bl
  41cef2:	pop    edi
  41cef3:	and    DWORD PTR [ecx],edi
  41cef5:	inc    ebp
  41cef6:	mov    dh,0xb5
  41cef8:	call   0x2f61d63
  41cefd:	pop    ss
  41cefe:	pop    eax
  41ceff:	jo     0x41ceca
  41cf01:	mov    edx,0xf5bd2a48
  41cf06:	mov    bh,0x92
  41cf08:	add    eax,eax
  41cf0a:	loop   0x41ced9
  41cf0c:	xor    BYTE PTR [edx-0x7a],ah
  41cf0f:	hlt    
  41cf10:	test   eax,0x8846c714
  41cf15:	call   0xf309:0x5c94a443
  41cf1c:	jmp    0x2cff:0x8cdb2e7c
  41cf23:	lds    eax,FWORD PTR [ecx+0x27f2a430]
  41cf29:	iret   
  41cf2a:	jg     0x41cf5b
  41cf2c:	cmp    BYTE PTR [esi],ch
  41cf2e:	cli    
  41cf2f:	adc    esp,DWORD PTR [ecx+0x64]
  41cf32:	leave  
  41cf33:	mov    bh,0xa
  41cf35:	xor    eax,0xe61c277a
  41cf3a:	std    
  41cf3b:	icebp  
  41cf3c:	add    bl,BYTE PTR [ecx+eax*2]
  41cf3f:	(bad)  
  41cf40:	ror    DWORD PTR [ecx+0x1487ea39],0xd
  41cf47:	inc    eax
  41cf48:	(bad)  
  41cf49:	sahf   
  41cf4a:	push   dx
  41cf4c:	inc    esp
  41cf4d:	pop    ebx
  41cf4e:	mov    ebp,0xb7526bbc
  41cf53:	je     0x41cf50
  41cf55:	jge    0x41cf23
  41cf57:	cmp    al,0xbe
  41cf59:	jmp    0x41cfb8
  41cf5b:	aad    0xeb
  41cf5d:	popf   
  41cf5e:	scas   al,BYTE PTR es:[edi]
  41cf5f:	adc    BYTE PTR [esi+0x56],bl
  41cf62:	imul   esi,DWORD PTR [edi+edx*4-0x31d939cd],0xf1d91e0
  41cf6d:	sub    DWORD PTR [ebp+0x572fdd18],0xbac6f512
  41cf77:	pop    edx
  41cf78:	and    edx,DWORD PTR [eax+ebp*4-0x55]
  41cf7c:	iret   
  41cf7d:	xchg   ebx,eax
  41cf7e:	retf   
  41cf7f:	das    
  41cf80:	xchg   BYTE PTR ds:0x101f50ab,bl
  41cf86:	fldcw  WORD PTR [bx+di+0x8a1]
  41cf8b:	lahf   
  41cf8c:	ret    0xf2e8
  41cf8f:	jle    0x41cfd2
  41cf91:	push   ds
  41cf92:	out    0x70,eax
  41cf94:	int3   
  41cf95:	in     eax,dx
  41cf96:	shr    BYTE PTR [edx],1
  41cf98:	xlat   BYTE PTR ds:[ebx]
  41cf99:	in     eax,0x86
  41cf9b:	inc    BYTE PTR [esi]
  41cf9d:	xchg   BYTE PTR [ebp-0x2f],cl
  41cfa0:	imul   DWORD PTR [ebx]
  41cfa2:	icebp  
  41cfa3:	lds    esi,FWORD PTR [ebp+0x5f]
  41cfa6:	mov    ds:0x764ed027,eax
  41cfab:	stos   BYTE PTR es:[edi],al
  41cfac:	jb     0x41cfc0
  41cfae:	inc    ebx
  41cfaf:	call   0xb295401
  41cfb4:	mov    ebp,edi
  41cfb6:	adc    DWORD PTR [eax-0x4b],eax
  41cfb9:	(bad)  [ebx]
  41cfbb:	sar    DWORD PTR [esi-0x5c],1
  41cfbe:	xor    al,0x19
  41cfc0:	jmp    0x41cfe7
  41cfc2:	out    dx,al
  41cfc3:	int3   
  41cfc4:	repnz dec ebp
  41cfc6:	fwait
  41cfc7:	data16 mov ch,0xcd
  41cfca:	dec    eax
  41cfcb:	hlt    
  41cfcc:	out    dx,al
  41cfcd:	retf   
  41cfce:	icebp  
  41cfcf:	out    dx,al
  41cfd0:	cli    
  41cfd1:	sub    al,BYTE PTR [eiz*2+0x5a773525]
  41cfd8:	mov    bl,0xe7
  41cfda:	xchg   esp,eax
  41cfdb:	jmp    0xf3b2233b
  41cfe0:	add    DWORD PTR [esi],esp
  41cfe2:	cs inc eax
  41cfe4:	jmp    0x41cf8e
  41cfe6:	sub    dl,BYTE PTR [ecx]
  41cfe8:	sub    DWORD PTR [esi-0x1f],0x69d1fd16
  41cfef:	cmp    dl,BYTE PTR [edi+ecx*2+0x2c]
  41cff3:	addr16 pop ebx
  41cff5:	mov    edx,DWORD PTR [edi-0xd14ddb2]
  41cffb:	out    0xa7,al
  41cffd:	lahf   
  41cffe:	out    dx,al
  41cfff:	pop    esp
  41d000:	mov    ds:0x8eef67df,al
  41d005:	jo     0x41cfe9
  41d007:	mov    al,0x38
  41d009:	in     al,0xd1
  41d00b:	aad    0x80
  41d00d:	dec    ebx
  41d00e:	add    dh,BYTE PTR [ebx-0x1a89d800]
  41d014:	mov    al,0x4b
  41d016:	or     al,bl
  41d018:	sbb    eax,0x8dff8923
  41d01d:	cmp    DWORD PTR [ebp+eiz*4-0x1d],esp
  41d021:	fdiv   QWORD PTR [esi]
  41d023:	inc    edi
  41d024:	out    0xea,eax
  41d026:	and    BYTE PTR [ecx+0x4d7cbea],ch
  41d02c:	test   al,0xc
  41d02e:	add    BYTE PTR [ecx+0xfaf4cb3],dh
  41d034:	pop    edi
  41d035:	jbe    0x41d05a
  41d037:	sub    esp,ebx
  41d039:	(bad)  
  41d03a:	jle    0x41d040
  41d03c:	jge    0x41d079
  41d03e:	pop    ebp
  41d03f:	jb     0x41cfcc
  41d041:	hlt    
  41d042:	sbb    al,0xb0
  41d044:	sti    
  41d045:	dec    esp
  41d046:	jo     0x41cfee
  41d048:	cmp    ebx,DWORD PTR [edx-0x78]
  41d04b:	dec    ebx
  41d04c:	xchg   esp,eax
  41d04d:	aaa    
  41d04e:	iret   
  41d04f:	adc    al,0x72
  41d051:	sub    eax,0x17ec8c09
  41d056:	scas   al,BYTE PTR es:[edi]
  41d057:	cmp    bh,BYTE PTR [edx-0x6714eaf5]
  41d05d:	jne    0x41d077
  41d05f:	mov    eax,ds:0xaefb08f3
  41d064:	xchg   edi,eax
  41d065:	fld    DWORD PTR [esi-0x55c79e0f]
  41d06b:	cmc    
  41d06c:	push   es
  41d06d:	push   0x8c0a9c40
  41d072:	jge    0x41d006
  41d074:	nop
  41d075:	les    ebp,FWORD PTR [edi]
  41d077:	push   0xffffffd2
  41d079:	add    bh,bh
  41d07b:	pop    esp
  41d07c:	and    ebx,DWORD PTR [edi+0x33de9033]
  41d082:	aas    
  41d083:	mov    ebp,0xed0755ee
  41d088:	jecxz  0x41d06b
  41d08a:	sub    al,0x77
  41d08c:	push   ds
  41d08d:	sbb    al,0xe0
  41d08f:	mov    al,ds:0xa168a313
  41d094:	inc    eax
  41d095:	ins    DWORD PTR es:[edi],dx
  41d096:	cdq    
  41d097:	jnp    0x41d118
  41d099:	daa    
  41d09a:	jo     0x41d03a
  41d09c:	xchg   edi,eax
  41d09d:	nop
  41d09e:	minps  xmm7,XMMWORD PTR [ebx]
  41d0a1:	mov    esp,0xf8eb8c03
  41d0a6:	pop    esi
  41d0a7:	jbe    0x41d02b
  41d0a9:	ret    0x1eef
  41d0ac:	pop    ds
  41d0ad:	in     al,0x2a
  41d0af:	retf   
  41d0b0:	imul   BYTE PTR [edi]
  41d0b2:	jecxz  0x41d0cc
  41d0b4:	ins    BYTE PTR es:[edi],dx
  41d0b5:	das    
  41d0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0b7:	fadd   DWORD PTR [edi-0x61]
  41d0ba:	xlat   BYTE PTR ds:[ebx]
  41d0bb:	imul   edx,DWORD PTR [esi],0xf8910c5c
  41d0c1:	sbb    al,0x12
  41d0c3:	popf   
  41d0c4:	aad    0x6
  41d0c6:	std    
  41d0c7:	adc    eax,0x1d6fe9c
  41d0cc:	cmp    edi,DWORD PTR [ecx-0x7ee2c383]
  41d0d2:	not    BYTE PTR [ebx+0x5629e742]
  41d0d8:	stos   DWORD PTR es:[edi],eax
  41d0d9:	into   
  41d0da:	int    0x7
  41d0dc:	shr    DWORD PTR [ebx+0x69],1
  41d0df:	inc    edi
  41d0e0:	mov    ebx,0x2d176a17
  41d0e5:	sbb    esi,esi
  41d0e7:	aam    0x1a
  41d0e9:	into   
  41d0ea:	das    
  41d0eb:	rol    DWORD PTR [ebx],0x38
  41d0ee:	fs mov bh,0xa5
  41d0f1:	mov    eax,ds:0xa8be6312
  41d0f6:	enter  0xfb0e,0x62
  41d0fa:	sahf   
  41d0fb:	inc    esi
  41d0fc:	inc    esi
  41d0fd:	hlt    
  41d0fe:	or     dl,bh
  41d100:	mov    edx,0x8427c3c9
  41d105:	jmp    0x41d0b6
  41d107:	jae    0x41d173
  41d109:	pop    es
  41d10a:	cmc    
  41d10b:	mov    dl,0x22
  41d10d:	loopne 0x41d0bb
  41d10f:	cmp    al,0xfe
  41d111:	xchg   BYTE PTR [ebx+0x1b],ah
  41d114:	xchg   DWORD PTR [edi+0xd],esp
  41d117:	lods   al,BYTE PTR ds:[esi]
  41d118:	push   ebx
  41d119:	push   es
  41d11a:	pushf  
  41d11b:	in     al,dx
  41d11c:	int    0xa8
  41d11e:	fcmovnb st,st(6)
  41d120:	inc    esp
  41d121:	rol    BYTE PTR [edx+0x2a],0x5a
  41d125:	rcl    DWORD PTR [edi+0x59],1
  41d128:	out    0x33,eax
  41d12a:	mov    eax,0x9f9b1484
  41d12f:	int3   
  41d130:	in     eax,0xa1
  41d132:	retf   0xe985
  41d135:	push   0xffffffeb
  41d137:	aas    
  41d138:	rcl    esp,1
  41d13a:	lock push 0xfffffff1
  41d13d:	(bad)  
  41d13e:	mov    bh,0x75
  41d140:	pop    eax
  41d141:	sbb    BYTE PTR [edi+0x76044c49],cl
  41d147:	inc    ebx
  41d148:	xchg   esi,eax
  41d149:	push   ebx
  41d14a:	into   
  41d14b:	mov    eax,ds:0x2711ccf4
  41d150:	pop    ss
  41d151:	(bad)  
  41d153:	pop    esp
  41d154:	lods   al,BYTE PTR ds:[esi]
  41d155:	inc    esi
  41d156:	out    dx,eax
  41d157:	mov    BYTE PTR ss:[ebx-0x4968b46e],al
  41d15e:	sbb    ah,BYTE PTR [edi+0x78d79589]
  41d164:	or     al,0x8b
  41d166:	xchg   bl,bl
  41d168:	xchg   esi,eax
  41d169:	aam    0x13
  41d16b:	and    BYTE PTR ds:0xad3432cf,0xb7
  41d172:	lea    ecx,[eax+0x74]
  41d175:	imul   ecx,DWORD PTR [ebx],0x9f4ecfbc
  41d17b:	add    ebp,ebx
  41d17d:	cmc    
  41d17e:	jb     0x41d1ea
  41d180:	jmp    0x3a8:0x853eafc9
  41d187:	jmp    0x6c12:0x53c29406
  41d18e:	sar    DWORD PTR [ebx-0xa],0xa6
  41d192:	loope  0x41d1d5
  41d194:	fisttp WORD PTR ss:[ebp-0x52]
  41d198:	es mov al,0x75
  41d19b:	lock popf 
  41d19d:	ss mov cl,0xea
  41d1a0:	jne    0x41d1a5
  41d1a2:	dec    esi
  41d1a3:	js     0x41d207
  41d1a5:	rol    BYTE PTR ds:[ebx-0x12],0x99
  41d1aa:	xor    edi,ecx
  41d1ac:	jbe    0x41d1e6
  41d1ae:	cmp    al,0xcc
  41d1b0:	inc    ebx
  41d1b1:	dec    ebp
  41d1b2:	ret    0x899a
  41d1b5:	pusha  
  41d1b6:	rcl    ecx,cl
  41d1b8:	sti    
  41d1b9:	mov    ebx,0x874639f9
  41d1be:	mov    bl,0xf5
  41d1c0:	imul   ebx,DWORD PTR [ebx],0xb357218f
  41d1c6:	push   0x45
  41d1c8:	or     DWORD PTR [edx-0x29be21eb],ebx
  41d1ce:	mov    dh,0xa3
  41d1d0:	adc    edx,DWORD PTR [esi]
  41d1d2:	int3   
  41d1d3:	xchg   esi,eax
  41d1d4:	adc    eax,0x2790623f
  41d1d9:	mov    ebx,0xa9f2dbb0
  41d1de:	or     ah,bl
  41d1e0:	int    0xa7
  41d1e2:	outs   dx,BYTE PTR ds:[esi]
  41d1e3:	sti    
  41d1e4:	ja     0x41d1ea
  41d1e6:	aad    0xb9
  41d1e8:	jb     0x41d22d
  41d1ea:	pop    ss
  41d1eb:	adc    DWORD PTR [ebx+0x77f6a1f2],ecx
  41d1f1:	cdq    
  41d1f2:	push   ebp
  41d1f3:	in     eax,dx
  41d1f4:	and    eax,0x4eeb7a7b
  41d1f9:	iret   
  41d1fa:	jecxz  0x41d18d
  41d1fc:	(bad)  
  41d1fd:	stc    
  41d1fe:	pop    ebx
  41d1ff:	daa    
  41d200:	sbb    eax,0x3d03c79f
  41d205:	push   ss
  41d206:	jp     0x41d1e4
  41d208:	sbb    dh,BYTE PTR [esi]
  41d20a:	daa    
  41d20b:	aas    
  41d20c:	scas   eax,DWORD PTR es:[edi]
  41d20d:	sub    DWORD PTR [ebx-0x6d],0xf7ed29c3
  41d214:	pop    ebx
  41d215:	dec    ebx
  41d216:	dec    ebp
  41d217:	cli    
  41d218:	lods   al,BYTE PTR ds:[esi]
  41d219:	call   0x27dc3176
  41d21e:	ins    DWORD PTR es:[edi],dx
  41d21f:	xchg   DWORD PTR [ebp-0x577fe697],edi
  41d225:	(bad)  
  41d226:	dec    ecx
  41d227:	adc    esi,esi
  41d229:	pop    ss
  41d22a:	sub    BYTE PTR [edi+edi*2+0x3e],ah
  41d22e:	or     ch,BYTE PTR [ebp-0x33344ada]
  41d234:	scas   al,BYTE PTR es:[edi]
  41d235:	mov    eax,DWORD PTR [edx-0x53c7054e]
  41d23b:	jae    0x41d2aa
  41d23d:	inc    edi
  41d23e:	mov    dh,0x59
  41d240:	outs   dx,BYTE PTR ds:[esi]
  41d241:	push   cs
  41d242:	sub    al,0x80
  41d244:	shr    BYTE PTR [esi-0x34],0x8e
  41d248:	sbb    BYTE PTR [ecx-0x1d],ah
  41d24b:	popa   
  41d24c:	stc    
  41d24d:	xor    edi,DWORD PTR gs:[edx-0x714cd05c]
  41d254:	(bad)  
  41d255:	pop    esp
  41d256:	xchg   ecx,eax
  41d257:	jnp    0x41d20d
  41d259:	jle    0x41d270
  41d25b:	pusha  
  41d25c:	sub    al,0x77
  41d25e:	mov    edi,0xbbacf98f
  41d263:	push   edx
  41d264:	push   es
  41d265:	jle    0x41d216
  41d267:	adc    edx,DWORD PTR [edi+0x6c]
  41d26a:	cmp    BYTE PTR [edx+0x54],ch
  41d26d:	shr    BYTE PTR [eax-0x75],1
  41d270:	xlat   BYTE PTR ds:[ebx]
  41d271:	cmp    bl,dh
  41d273:	sub    ch,BYTE PTR [edx-0x3ca7db22]
  41d279:	imul   BYTE PTR [ebx-0xe]
  41d27c:	nop
  41d27d:	cld    
  41d27e:	sub    eax,0xd0386b6c
  41d283:	mov    ebp,0x2b4c418a
  41d288:	adc    eax,0x32723224
  41d28d:	mov    esi,0x93f00f6a
  41d292:	cmp    BYTE PTR [ecx],0x24
  41d295:	sbb    al,0xc3
  41d297:	sbb    eax,0x7f25a725
  41d29c:	stc    
  41d29d:	retf   
  41d29e:	sub    DWORD PTR [ecx+0x66],0xffffffd8
  41d2a2:	mov    eax,0x89a103c7
  41d2a7:	out    0xd9,eax
  41d2a9:	mov    bl,0x8c
  41d2ab:	pop    ebx
  41d2ac:	or     ecx,ebp
  41d2ae:	outs   dx,DWORD PTR ds:[esi]
  41d2af:	pop    ss
  41d2b0:	imul   ecx,ebp,0xbda45707
  41d2b6:	rcpps  xmm3,XMMWORD PTR [esp+ecx*2]
  41d2ba:	aas    
  41d2bb:	xor    DWORD PTR [edx],edi
  41d2bd:	addr16 int3 
  41d2bf:	cmp    eax,0xe045009c
  41d2c4:	imul   ebp,DWORD PTR [esi+0x70],0xffffffc7
  41d2c8:	inc    esi
  41d2c9:	jmp    0x96c2:0xa8597126
  41d2d0:	test   al,0x9c
  41d2d2:	out    0x9a,eax
  41d2d4:	jl     0x41d2d1
  41d2d6:	jb     0x41d2e8
  41d2d8:	xchg   ebx,eax
  41d2d9:	mov    cl,0x96
  41d2db:	data16 fisub DWORD PTR [esi]
  41d2de:	push   ebx
  41d2df:	pusha  
  41d2e0:	pusha  
  41d2e1:	repz xor dl,0xfd
  41d2e5:	inc    esi
  41d2e6:	and    bl,BYTE PTR [edx+0x1f9bbca6]
  41d2ec:	lahf   
  41d2ed:	lds    edi,FWORD PTR [ebp+edx*4+0x3a]
  41d2f1:	fwait
  41d2f2:	pop    ss
  41d2f3:	fild   DWORD PTR [esi]
  41d2f5:	int    0xe5
  41d2f7:	loop   0x41d36f
  41d2f9:	in     eax,dx
  41d2fa:	mov    al,0xd1
  41d2fc:	jge    0x41d2b4
  41d2fe:	xor    bl,BYTE PTR [ebx+0x6f]
  41d301:	retf   
  41d302:	jmp    FWORD PTR [esi]
  41d304:	mov    ah,0xff
  41d306:	adc    al,0x19
  41d308:	outs   dx,BYTE PTR ds:[esi]
  41d309:	mov    al,0x90
  41d30b:	push   edx
  41d30c:	inc    eax
  41d30d:	rcr    ebx,1
  41d30f:	push   cs
  41d310:	xchg   ecx,eax
  41d311:	cmp    DWORD PTR es:[ebx+0x78],0x6ebe7e0a
  41d319:	dec    ebx
  41d31a:	loop   0x41d361
  41d31c:	rol    BYTE PTR [ecx],1
  41d31e:	std    
  41d31f:	int    0xb8
  41d321:	jmp    0x59319dcb
  41d326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d327:	mov    ecx,DWORD PTR [edi+0x2d01f3fd]
  41d32d:	ret    0xa3d4
  41d330:	mov    edi,0x81502a9a
  41d335:	inc    ebx
  41d336:	mov    dl,0xfa
  41d338:	test   DWORD PTR ds:0xa126856a,edi
  41d33e:	mov    bh,0x12
  41d340:	adc    esp,edx
  41d342:	pop    eax
  41d343:	adc    ecx,esi
  41d345:	sub    al,0xcd
  41d347:	cwde   
  41d348:	scas   eax,DWORD PTR es:[edi]
  41d349:	test   eax,0xeaf69abf
  41d34e:	(bad)  
  41d34f:	cmp    al,0x95
  41d351:	push   cs
  41d352:	jb     0x41d320
  41d354:	mov    eax,ds:0x714fd1d4
  41d359:	push   ebx
  41d35a:	popf   
  41d35b:	push   ebp
  41d35c:	retf   0x2f05
  41d35f:	push   cs
  41d360:	jno    0x41d340
  41d362:	xchg   edx,eax
  41d363:	adc    al,0xe3
  41d365:	or     BYTE PTR [ecx+0x1d0b34fb],ah
  41d36b:	add    edi,DWORD PTR [esi-0x4fc472ad]
  41d371:	adc    bl,BYTE PTR [ecx]
  41d373:	mov    ebp,0x5934e39b
  41d378:	enter  0x2cc9,0xa
  41d37c:	lods   eax,DWORD PTR ds:[esi]
  41d37d:	mov    DWORD PTR [ebp+ebp*4-0x57],ecx
  41d381:	adc    al,0xd8
  41d383:	mov    edi,0x2efeb5fb
  41d388:	out    0x41,al
  41d38a:	test   al,0xb6
  41d38c:	bound  ebx,QWORD PTR [eax]
  41d38e:	sbb    DWORD PTR [esi],eax
  41d390:	xor    al,0x51
  41d392:	data16 sbb al,0x32
  41d395:	repz daa 
  41d397:	hlt    
  41d398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d399:	aaa    
  41d39a:	cs leave 
  41d39c:	xchg   ecx,eax
  41d39d:	push   0xfffffff0
  41d39f:	ret    0x96e
  41d3a2:	inc    edx
  41d3a3:	ret    
  41d3a4:	ja     0x41d395
  41d3a6:	inc    edx
  41d3a7:	jb     0x41d3c5
  41d3a9:	int    0xc1
  41d3ab:	getsec 
  41d3ad:	popf   
  41d3ae:	outs   dx,DWORD PTR ds:[esi]
  41d3af:	jb     0x41d38c
  41d3b1:	xlat   BYTE PTR ds:[ebx]
  41d3b2:	add    eax,0x1365ea19
  41d3b7:	popf   
  41d3b8:	sub    al,0x87
  41d3ba:	ins    BYTE PTR es:[edi],dx
  41d3bb:	hlt    
  41d3bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3bd:	in     eax,dx
  41d3be:	pop    ebp
  41d3bf:	xchg   ebx,eax
  41d3c0:	pop    ecx
  41d3c1:	push   es
  41d3c2:	retf   0x1018
  41d3c5:	dec    edx
  41d3c6:	push   ecx
  41d3c7:	hlt    
  41d3c8:	sub    bl,dl
  41d3ca:	(bad)  
  41d3cb:	push   esp
  41d3cc:	push   ds
  41d3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3ce:	xchg   ebx,eax
  41d3cf:	ror    DWORD PTR [eax+edi*1-0x7161ac],1
  41d3d6:	sbb    bh,BYTE PTR [ebp-0x2003bf1c]
  41d3dc:	mov    al,0xa2
  41d3de:	dec    esp
  41d3df:	fistp  WORD PTR [edi-0x500236f]
  41d3e5:	xlat   BYTE PTR ds:[ebx]
  41d3e6:	adc    bh,al
  41d3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3e9:	mov    ch,0x7a
  41d3eb:	push   0x66
  41d3ed:	stos   BYTE PTR es:[edi],al
  41d3ee:	out    dx,al
  41d3ef:	enter  0xcddb,0x67
  41d3f3:	popf   
  41d3f4:	es in  al,dx
  41d3f6:	add    DWORD PTR [eax*2+0x3cca450a],eax
  41d3fd:	stos   BYTE PTR es:[edi],al
  41d3fe:	je     0x41d479
  41d400:	hlt    
  41d401:	es push esp
  41d403:	add    eax,0x652e65b2
  41d408:	sub    DWORD PTR [edi+0x50c65fda],esi
  41d40e:	pop    eax
  41d40f:	dec    ecx
  41d410:	sub    edi,eax
  41d412:	repz (bad)
  41d415:	jg     0x41d3af
  41d417:	cmp    eax,0x7876ff6e
  41d41c:	lahf   
  41d41d:	dec    eax
  41d41e:	add    eax,0x4a304cb3
  41d423:	inc    esi
  41d424:	inc    esi
  41d425:	mov    esi,0x4a5ba257
  41d42a:	call   0x22f0:0x83437d45
  41d431:	add    ebx,DWORD PTR [ebp-0x62e6ed50]
  41d437:	call   DWORD PTR [ebx]
  41d439:	xor    ch,bl
  41d43b:	aad    0x4b
  41d43d:	push   ds
  41d43e:	sar    BYTE PTR [ecx-0x80e5e42],0xbe
  41d445:	mov    DWORD PTR [esi],edx
  41d447:	xchg   esi,eax
  41d448:	repz pop ss
  41d44a:	dec    ebx
  41d44b:	push   es
  41d44c:	scas   al,BYTE PTR es:[edi]
  41d44d:	xchg   esi,eax
  41d44e:	xlat   BYTE PTR ds:[ebx]
  41d44f:	(bad)  
  41d450:	scas   eax,DWORD PTR es:[edi]
  41d451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d452:	inc    ebx
  41d453:	call   0xeda8:0xf3f1e8d8
  41d45a:	dec    edi
  41d45b:	lahf   
  41d45c:	cld    
  41d45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d45e:	pop    ecx
  41d45f:	(bad)  
  41d460:	push   edx
  41d461:	repz cmp BYTE PTR [ebp-0x544939a6],al
  41d468:	xlat   BYTE PTR ds:[ebx]
  41d469:	mov    al,0x38
  41d46b:	xchg   edx,eax
  41d46c:	mov    WORD PTR [eax],?
  41d46e:	or     eax,0xa8fddd89
  41d473:	repz add BYTE PTR [esp+esi*4+0x12],al
  41d478:	ret    
  41d479:	push   ds
  41d47a:	stos   DWORD PTR es:[edi],eax
  41d47b:	inc    edx
  41d47c:	add    eax,0xf0ed364
  41d481:	mov    ebx,edx
  41d483:	iret   
  41d484:	jns    0x41d440
  41d486:	outs   dx,BYTE PTR ds:[esi]
  41d487:	cwde   
  41d488:	inc    ebx
  41d489:	outs   dx,BYTE PTR ds:[esi]
  41d48a:	and    ebp,ebp
  41d48c:	adc    DWORD PTR [ebp-0x6c8f753d],edx
  41d492:	mov    dh,0x8e
  41d494:	rcl    eax,0xbb
  41d497:	out    0xa5,eax
  41d499:	ins    BYTE PTR es:[edi],dx
  41d49a:	retf   
  41d49b:	jge    0x41d4f5
  41d49d:	sbb    eax,0x65ce147b
  41d4a2:	pop    ebp
  41d4a3:	stos   BYTE PTR es:[edi],al
  41d4a4:	pop    esi
  41d4a5:	clc    
  41d4a6:	mov    al,ds:0xbffa44b6
  41d4ab:	leave  
  41d4ac:	test   eax,0x5c34207d
  41d4b1:	popf   
  41d4b2:	ja     0x41d4a7
  41d4b4:	les    ecx,FWORD PTR [eax+0xbc086b9]
  41d4ba:	scas   eax,DWORD PTR es:[edi]
  41d4bb:	mov    DWORD PTR ds:0xba1d849a,0xb9266962
  41d4c5:	mov    al,0x6c
  41d4c7:	mov    esp,0xc5a30ab8
  41d4cc:	sbb    eax,esi
  41d4ce:	mov    esp,DWORD PTR [esi+edx*8-0xd]
  41d4d2:	and    bl,BYTE PTR [eax-0xbb2154f]
  41d4d8:	mov    ds:0x221195b1,al
  41d4dd:	jmp    0x7380:0x8b26a1ed
  41d4e4:	jl     0x41d4fb
  41d4e6:	pop    esp
  41d4e7:	ja     0x41d4b8
  41d4e9:	or     ch,bh
  41d4eb:	and    esi,DWORD PTR [edi+0x1e]
  41d4ee:	xor    DWORD PTR [esi-0x35],0xffffffb3
  41d4f2:	xchg   ebp,eax
  41d4f3:	sbb    al,0xe3
  41d4f5:	pushf  
  41d4f6:	jmp    0xca6f:0xf3c0c7b6
  41d4fd:	dec    ebx
  41d4fe:	movhps QWORD PTR [edi+0x4a5926e4],xmm2
  41d505:	lods   al,BYTE PTR ds:[esi]
  41d506:	popa   
  41d507:	ja     0x41d527
  41d509:	punpckldq mm0,DWORD PTR [ebx+0x2b]
  41d50d:	push   ebp
  41d50e:	add    eax,0x4101496
  41d513:	fmul   DWORD PTR gs:[edi]
  41d516:	inc    edi
  41d517:	outs   dx,DWORD PTR ds:[esi]
  41d518:	sub    eax,0x470f51ce
  41d51d:	hlt    
  41d51e:	outs   dx,DWORD PTR ds:[esi]
  41d51f:	jmp    DWORD PTR [ebx+0x459c48c5]
  41d525:	mov    DWORD PTR [ecx],esp
  41d527:	mov    eax,DWORD PTR [eax-0xd9043f9]
  41d52d:	jg     0x41d4cd
  41d52f:	fadd   QWORD PTR [ebp-0x6f40abcd]
  41d535:	or     BYTE PTR [edi],al
  41d537:	push   esi
  41d538:	xor    bh,BYTE PTR [ebp-0x1f]
  41d53b:	or     DWORD PTR [ebx+0xd],ecx
  41d53e:	mov    bl,0xbb
  41d540:	dec    esi
  41d541:	stc    
  41d542:	xchg   BYTE PTR [ebx-0x13],ch
  41d545:	sub    eax,0xd7bff874
  41d54a:	push   ecx
  41d54b:	add    BYTE PTR [ebp-0x1e],al
  41d54e:	out    0xf9,al
  41d550:	or     edx,DWORD PTR [edx]
  41d552:	jecxz  0x41d526
  41d554:	test   DWORD PTR [eax+0x50],ecx
  41d557:	fst    DWORD PTR [edx+0x7c245c8e]
  41d55d:	sub    DWORD PTR [edi+0x11159c97],0x37
  41d564:	xor    BYTE PTR ds:0x41c01099,ch
  41d56a:	pop    ds
  41d56b:	jecxz  0x41d525
  41d56d:	dec    eax
  41d56e:	(bad)  
  41d56f:	fucomi st,st(2)
  41d571:	in     eax,dx
  41d572:	in     al,dx
  41d573:	pop    eax
  41d574:	add    DWORD PTR [ecx+0x72],edx
  41d577:	cmp    DWORD PTR ds:0xb42e99d7,edx
  41d57d:	outs   dx,BYTE PTR ds:[esi]
  41d57e:	dec    ecx
  41d57f:	shl    BYTE PTR [edx+0x7c],0x2d
  41d583:	or     eax,0x891c49e7
  41d588:	pop    ds
  41d589:	xchg   BYTE PTR [ecx-0x1a],cl
  41d58c:	(bad)  
  41d58d:	push   eax
  41d58e:	stc    
  41d58f:	cmp    esp,DWORD PTR [edi-0x21]
  41d592:	leave  
  41d593:	mov    esp,0xd3283013
  41d598:	xchg   edi,eax
  41d599:	mov    bh,BYTE PTR [ebx+0x3f]
  41d59c:	adc    dh,BYTE PTR [ecx+ebp*4-0x2e]
  41d5a0:	mov    edx,0xbb586188
  41d5a5:	cmp    eax,0xc989d8f
  41d5aa:	hlt    
  41d5ab:	leave  
  41d5ac:	xchg   esi,eax
  41d5ad:	inc    ebp
  41d5ae:	mov    ch,0x20
  41d5b0:	push   ebx
  41d5b1:	in     eax,0x49
  41d5b3:	shl    dh,cl
  41d5b5:	out    dx,al
  41d5b6:	aaa    
  41d5b7:	lods   eax,DWORD PTR ds:[esi]
  41d5b8:	inc    esp
  41d5b9:	mov    ebp,0xa5782388
  41d5be:	jnp    0x41d57a
  41d5c0:	mov    ds:0x57589ae9,eax
  41d5c5:	pop    ebp
  41d5c6:	and    BYTE PTR [ebx],0x6f
  41d5c9:	mov    al,ds:0xbf4deb53
  41d5ce:	xlat   BYTE PTR ds:[ebx]
  41d5cf:	push   0xf8e0f715
  41d5d4:	mov    dh,0xa9
  41d5d6:	cdq    
  41d5d7:	or     BYTE PTR [eax],ch
  41d5d9:	xchg   BYTE PTR [ebp-0x1b],dl
  41d5dc:	mov    al,ds:0x536487c2
  41d5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5e3:	dec    edi
  41d5e4:	fwait
  41d5e5:	scas   eax,DWORD PTR es:[edi]
  41d5e6:	sbb    edi,DWORD PTR [esi+0x4f2e5217]
  41d5ec:	dec    BYTE PTR [ebp-0x537c2659]
  41d5f2:	sbb    eax,0x6668da8
  41d5f7:	out    0x8c,eax
  41d5f9:	std    
  41d5fa:	xor    ch,al
  41d5fc:	call   0x585fd000
  41d601:	repnz lea ebp,[edi+ebp*1+0x16]
  41d606:	cli    
  41d607:	cmp    eax,0xab7fbde8
  41d60c:	xchg   edx,eax
  41d60d:	js     0x41d605
  41d60f:	sti    
  41d610:	js     0x41d5e0
  41d612:	clc    
  41d613:	loope  0x41d5e5
  41d615:	scas   eax,DWORD PTR es:[edi]
  41d616:	inc    esi
  41d617:	ins    DWORD PTR es:[edi],dx
  41d618:	jg     0x41d5b3
  41d61a:	test   ch,dl
  41d61c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d61d:	inc    edx
  41d61e:	cli    
  41d61f:	arpl   ax,si
  41d621:	cmp    ch,BYTE PTR [ebp+0x648dcfe6]
  41d627:	leave  
  41d628:	add    bl,ch
  41d62a:	int3   
  41d62b:	inc    eax
  41d62c:	ret    
  41d62d:	xlat   BYTE PTR ds:[ebx]
  41d62e:	jns    0x41d620
  41d630:	idiv   DWORD PTR [edi+0x30]
  41d633:	hlt    
  41d634:	dec    edx
  41d635:	stos   DWORD PTR es:[edi],eax
  41d636:	cmp    edi,DWORD PTR [eax+edi*1]
  41d639:	inc    esi
  41d63a:	(bad)  
  41d63b:	stc    
  41d63c:	pushf  
  41d63d:	jno    0x41d66a
  41d63f:	adc    BYTE PTR [ebx],ch
  41d641:	shl    cl,cl
  41d643:	sub    al,0x48
  41d645:	pop    esi
  41d646:	div    DWORD PTR ds:0xbed277da
  41d64c:	mov    edi,0xd3f6fd99
  41d651:	add    eax,0x663808b4
  41d656:	jecxz  0x41d68b
  41d658:	jo     0x41d5e2
  41d65a:	aad    0xc6
  41d65c:	cmp    eax,DWORD PTR [edi]
  41d65e:	lahf   
  41d65f:	bound  eax,QWORD PTR [eax-0x39deb236]
  41d665:	xor    eax,0x5c331ac8
  41d66a:	jmp    0x41d67d
  41d66c:	push   edi
  41d66d:	cs pop esi
  41d66f:	daa    
  41d670:	imul   edi,DWORD PTR [ecx-0x5f],0xffffff92
  41d674:	daa    
  41d675:	or     eax,DWORD PTR [eax+0x16]
  41d678:	push   0xffffffe4
  41d67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67b:	dec    esp
  41d67c:	pushf  
  41d67d:	fist   WORD PTR [edi-0x21be4c97]
  41d683:	sbb    ch,BYTE PTR [eax-0x47]
  41d686:	sbb    eax,0x8e0f480b
  41d68b:	add    eax,0x78d7b10f
  41d690:	stos   DWORD PTR es:[edi],eax
  41d691:	cmp    al,0x3d
  41d693:	clc    
  41d694:	jecxz  0x41d697
  41d696:	sahf   
  41d697:	sub    dh,ah
  41d699:	sbb    bl,BYTE PTR [ecx+0x23]
  41d69c:	shl    DWORD PTR [esi+esi*8-0xd01136e],0xb8
  41d6a4:	pop    edi
  41d6a5:	pop    ebx
  41d6a6:	rep stos BYTE PTR es:[edi],al
  41d6a8:	mov    eax,0xa1a1e8cc
  41d6ad:	hlt    
  41d6ae:	inc    ebp
  41d6af:	repz xor BYTE PTR [ecx-0x22],ah
  41d6b3:	pop    ds
  41d6b4:	aaa    
  41d6b5:	mov    esi,ebx
  41d6b7:	lods   al,BYTE PTR ds:[esi]
  41d6b8:	or     BYTE PTR [edx+0x6],cl
  41d6bb:	test   DWORD PTR [ecx-0x47],0x9e63a6e8
  41d6c2:	sub    esi,ecx
  41d6c4:	dec    esi
  41d6c5:	jp     0x41d745
  41d6c7:	xchg   DWORD PTR [ebp+0x42893b55],edi
  41d6cd:	or     BYTE PTR [ebx-0x3b],ah
  41d6d0:	les    esi,FWORD PTR [edx+0x24]
  41d6d3:	int3   
  41d6d4:	fwait
  41d6d5:	push   ebp
  41d6d6:	jbe    0x41d660
  41d6d8:	fbld   TBYTE PTR [ecx+0x67]
  41d6db:	sub    ecx,ebx
  41d6dd:	or     ebx,ebp
  41d6df:	dec    ebp
  41d6e0:	in     al,dx
  41d6e1:	pop    eax
  41d6e2:	xor    al,dh
  41d6e4:	push   ecx
  41d6e5:	(bad)  
  41d6e6:	in     eax,dx
  41d6e7:	jmp    0xe4f1:0xcc4a4dca
  41d6ee:	mov    ch,0x14
  41d6f0:	pop    edx
  41d6f1:	test   eax,0xd639f166
  41d6f6:	adc    ah,BYTE PTR [ebp+0x7cd35e8b]
  41d6fc:	mov    esp,0x961e06
  41d701:	push   ecx
  41d702:	mov    cl,0xb5
  41d704:	imul   edi,DWORD PTR [esi],0xd0a7eb15
  41d70a:	shr    BYTE PTR [edi+0x5b],cl
  41d70d:	push   ecx
  41d70e:	jbe    0x41d6a5
  41d710:	test   DWORD PTR [eax+0x3f],ebx
  41d713:	dec    ebp
  41d714:	hlt    
  41d715:	hlt    
  41d716:	cwde   
  41d717:	test   DWORD PTR [ebp+0x46],esi
  41d71a:	mov    dh,BYTE PTR [ebp+0x4e]
  41d71d:	mov    WORD PTR [edx+0x32],ss
  41d720:	dec    esi
  41d721:	mov    dl,0x60
  41d723:	xchg   ebp,eax
  41d724:	icebp  
  41d725:	dec    eax
  41d726:	retf   
  41d727:	gs cmp eax,0xe3d4fe75
  41d72d:	sti    
  41d72e:	sub    DWORD PTR [eax],eax
  41d730:	jge    0x41d6f1
  41d732:	adc    ecx,DWORD PTR [ebx-0x7a285c8a]
  41d738:	int3   
  41d739:	mov    cl,0x8d
  41d73b:	mov    bl,0x76
  41d73d:	(bad)  ds:0x2a05aff7
  41d743:	out    dx,eax
  41d744:	mov    ds:0xcbde5ccc,eax
  41d749:	lods   eax,DWORD PTR ds:[esi]
  41d74a:	test   BYTE PTR [edx-0x5c00dd5d],0x5a
  41d751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d752:	in     al,dx
  41d753:	jne    0x41d7c6
  41d755:	cli    
  41d756:	sbb    edx,DWORD PTR [ecx-0x43]
  41d759:	mov    bl,0x96
  41d75b:	rcr    DWORD PTR [edi-0x5d2c1273],cl
  41d761:	(bad)  
  41d762:	es inc edi
  41d764:	and    BYTE PTR [eax-0x43497588],cl
  41d76a:	pop    edi
  41d76b:	jl     0x41d74b
  41d76d:	adc    BYTE PTR [ecx+0x74],cl
  41d770:	jae    0x41d73d
  41d772:	or     eax,DWORD PTR [edi+0x54]
  41d775:	int3   
  41d776:	jae    0x41d750
  41d778:	jo     0x41d780
  41d77a:	hlt    
  41d77b:	inc    edi
  41d77c:	lahf   
  41d77d:	aad    0xd1
  41d77f:	jl     0x41d77f
  41d781:	mov    esi,0xf11aa77d
  41d786:	xor    DWORD PTR [edx+ebx*1-0x4bac5423],edx
  41d78d:	push   ecx
  41d78e:	push   ds
  41d78f:	(bad)  
  41d790:	pop    ebx
  41d791:	aaa    
  41d792:	(bad)
  41d795:	dec    edi
  41d796:	test   dh,dl
  41d798:	jns    0x41d7f9
  41d79a:	popf   
  41d79b:	sub    edi,DWORD PTR [ebp-0x4fd8f04d]
  41d7a1:	daa    
  41d7a2:	cs jmp 0x41d7b9
  41d7a5:	jmp    DWORD PTR [ecx-0x53ec0fd4]
  41d7ab:	pushf  
  41d7ac:	ds xchg edi,eax
  41d7ae:	je     0x41d7e9
  41d7b0:	imul   edx,DWORD PTR [edi],0xe04807ef
  41d7b6:	loope  0x41d76f
  41d7b8:	sub    DWORD PTR [esi],esi
  41d7ba:	cmovg  ebx,DWORD PTR [edx+0x4584fc1f]
  41d7c1:	ds mov ch,0xf7
  41d7c4:	(bad)  ds:0x7a9fc7b9
  41d7ca:	pop    edi
  41d7cb:	aas    
  41d7cc:	push   0xffffffa9
  41d7ce:	cmp    eax,0x5336af9f
  41d7d3:	mov    ch,0xb5
  41d7d5:	lods   eax,DWORD PTR ds:[esi]
  41d7d6:	sub    DWORD PTR [ebp-0x51],edx
  41d7d9:	inc    eax
  41d7da:	pushf  
  41d7db:	aaa    
  41d7dc:	pop    esp
  41d7dd:	add    al,0x31
  41d7df:	add    al,0x66
  41d7e1:	scas   eax,DWORD PTR es:[edi]
  41d7e2:	loop   0x41d7b4
  41d7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7e5:	pop    es
  41d7e6:	test   eax,0x89199aeb
  41d7eb:	call   0xd3851581
  41d7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f1:	icebp  
  41d7f2:	or     al,0x10
  41d7f4:	js     0x41d814
  41d7f6:	pop    ss
  41d7f7:	inc    ebp
  41d7f8:	repnz dec eax
  41d7fa:	popf   
  41d7fb:	ja     0x41d848
  41d7fd:	pop    ecx
  41d7fe:	sbb    dl,BYTE PTR [edx+0x68fee589]
  41d804:	mov    ah,0x22
  41d806:	mov    esp,eax
  41d808:	mov    edx,0xb3f320f5
  41d80d:	sar    eax,0xa6
  41d810:	cld    
  41d811:	test   bl,al
  41d813:	dec    esi
  41d814:	ret    
  41d815:	inc    ebp
  41d816:	test   BYTE PTR [esi-0x56df593],ch
  41d81c:	jle    0x41d7bf
  41d81e:	pop    ds
  41d81f:	ret    
  41d820:	push   ebx
  41d821:	sbb    DWORD PTR [edx+0x55e0bdaf],esp
  41d827:	xlat   BYTE PTR ds:[ebx]
  41d828:	ds xchg esp,eax
  41d82a:	clc    
  41d82b:	sbb    al,0x54
  41d82d:	mov    esi,0x7ccbfef3
  41d832:	sbb    al,0xf4
  41d834:	in     al,dx
  41d835:	mov    ebx,0x53e48dff
  41d83a:	pop    ebp
  41d83b:	inc    edx
  41d83c:	xchg   ebp,eax
  41d83d:	enter  0xc3f4,0x97
  41d841:	int3   
  41d842:	push   ds
  41d843:	or     BYTE PTR [ecx+edi*2],0x9d
  41d847:	push   eax
  41d848:	push   cs
  41d849:	mov    al,ds:0xe0837990
  41d84e:	inc    ebp
  41d84f:	pusha  
  41d850:	int3   
  41d851:	fnstsw WORD PTR [ecx]
  41d853:	xor    ebx,DWORD PTR [edx]
  41d855:	lock pop esp
  41d857:	sub    al,0x25
  41d859:	push   es
  41d85a:	dec    edx
  41d85b:	sti    
  41d85c:	lods   eax,DWORD PTR ds:[esi]
  41d85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d85e:	mov    ds,WORD PTR [eax]
  41d860:	mov    eax,ds:0xed7509a0
  41d865:	inc    eax
  41d866:	jb     0x41d8d1
  41d868:	sbb    al,0x1a
  41d86a:	xlat   BYTE PTR ds:[ebx]
  41d86c:	(bad)  [ebp+0x607d24f9]
  41d872:	sbb    bl,BYTE PTR [ecx-0x42a2cebb]
  41d878:	dec    ebx
  41d879:	shl    BYTE PTR [edi],cl
  41d87b:	mov    edx,0xd2d1bb92
  41d880:	lock lahf 
  41d882:	fistp  QWORD PTR [ebx*4+0x6f23c626]
  41d889:	and    BYTE PTR [edi-0x78],ah
  41d88c:	jne    0x41d8fb
  41d88e:	pop    esi
  41d88f:	pop    es
  41d890:	adc    DWORD PTR [edx-0x36],ebp
  41d893:	call   0xc714:0x431ffe7f
  41d89a:	pop    esp
  41d89b:	mov    bl,0x6c
  41d89d:	mov    ebx,0x45e5d8a7
  41d8a2:	adc    ebp,DWORD PTR [esi+ebx*8-0x3]
  41d8a6:	rcl    BYTE PTR [ebp+0x20d7f87c],1
  41d8ac:	rcl    DWORD PTR [edi+0x4ce883c6],cl
  41d8b2:	mov    ebp,0x792ab8ee
  41d8b7:	sahf   
  41d8b8:	mov    dh,0x61
  41d8ba:	call   0x1089:0xe062bfcc
  41d8c1:	iret   
  41d8c2:	retf   
  41d8c3:	nop
  41d8c4:	outs   dx,DWORD PTR ds:[esi]
  41d8c5:	fld    QWORD PTR [edi+0x0]
  41d8c8:	icebp  
  41d8c9:	retf   
  41d8ca:	cmc    
  41d8cb:	popa   
  41d8cc:	mov    ah,0xad
  41d8ce:	pop    ebx
  41d8cf:	jmp    0x8f6f2bc6
  41d8d4:	mov    cl,0x6f
  41d8d6:	pushf  
  41d8d7:	xor    cl,ch
  41d8d9:	or     BYTE PTR [ecx],0x1d
  41d8dc:	out    dx,al
  41d8dd:	imul   esi,DWORD PTR [eax-0x11],0x31147f78
  41d8e4:	cld    
  41d8e5:	lods   al,BYTE PTR ds:[esi]
  41d8e6:	sub    ebp,DWORD PTR [ebp+esi*1+0x34]
  41d8ea:	lods   al,BYTE PTR ds:[esi]
  41d8eb:	pop    ebp
  41d8ec:	lock push esi
  41d8ee:	popa   
  41d8ef:	sub    al,0x4e
  41d8f1:	jne    0x41d960
  41d8f3:	adc    al,0x4b
  41d8f5:	or     ecx,edi
  41d8f7:	mov    BYTE PTR [edi+0x3e],ah
  41d8fa:	mov    dl,0x6e
  41d8fc:	ins    DWORD PTR es:[edi],dx
  41d8fd:	ret    0x56ae
  41d900:	cmc    
  41d901:	mov    ds:0x9499f2f1,eax
  41d906:	imul   ebx,DWORD PTR [edi],0xffadf504
  41d90c:	nop
  41d90d:	sub    dh,bh
  41d90f:	jmp    0x41d98f
  41d911:	ins    DWORD PTR es:[edi],dx
  41d912:	mov    edi,ds
  41d914:	pop    edi
  41d915:	fild   QWORD PTR [edi-0x1e4fa59c]
  41d91b:	shr    BYTE PTR [esi],cl
  41d91d:	adc    DWORD PTR [eax-0x77],ebp
  41d920:	mov    bh,0x63
  41d922:	add    eax,0x52128a54
  41d927:	pop    ss
  41d928:	rol    BYTE PTR [edx],1
  41d92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d92b:	stc    
  41d92c:	(bad)  
  41d92d:	lea    ebp,[edi]
  41d92f:	es (bad) 
  41d931:	popa   
  41d932:	inc    edi
  41d933:	leave  
  41d934:	cmc    
  41d935:	(bad)  [edi+esi*4]
  41d938:	fidiv  DWORD PTR [edx]
  41d93a:	add    BYTE PTR [edi+0x51777783],0xa2
  41d941:	sbb    dl,ch
  41d943:	call   0x6e92b4a9
  41d948:	fwait
  41d949:	inc    esp
  41d94a:	mov    edi,0x3c506d70
  41d94f:	mov    ch,0x8c
  41d951:	mov    ch,0xb5
  41d953:	dec    edx
  41d954:	xchg   ebp,eax
  41d955:	dec    esi
  41d956:	mov    ebp,DWORD PTR [eax+0x2a]
  41d959:	adc    ecx,eax
  41d95b:	mov    esp,0xb43daf4
  41d960:	add    al,0x4b
  41d962:	xchg   edi,eax
  41d963:	sub    bh,dl
  41d965:	mov    es,WORD PTR [eax-0x57]
  41d968:	out    dx,al
  41d969:	jge    0x41d9b0
  41d96b:	div    DWORD PTR [esi]
  41d96d:	xor    ah,BYTE PTR [edx]
  41d96f:	pop    esp
  41d970:	xlat   BYTE PTR ds:[ebx]
  41d971:	pop    ds
  41d972:	mov    ds:0xd43aba2a,eax
  41d977:	push   es
  41d978:	push   eax
  41d979:	pop    esi
  41d97a:	xchg   edx,eax
  41d97b:	inc    eax
  41d97c:	fbstp  TBYTE PTR [edi+0x7c96a713]
  41d982:	mov    al,0x19
  41d984:	cld    
  41d985:	sub    al,0x36
  41d987:	or     bl,BYTE PTR [esi+0x539d5fa2]
  41d98d:	retf   0x47ad
  41d990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d991:	mov    ds:0xa5cf7ebf,al
  41d996:	ja     0x7248ff05
  41d99c:	sar    BYTE PTR [esi+0x45],1
  41d99f:	cmp    eax,0x79c41bfe
  41d9a4:	xchg   esi,eax
  41d9a5:	scas   al,BYTE PTR es:[edi]
  41d9a6:	enter  0xffbf,0x14
  41d9aa:	inc    esp
  41d9ab:	les    eax,FWORD PTR [esp+eax*1]
  41d9ae:	xor    al,0xfa
  41d9b0:	pusha  
  41d9b1:	out    dx,eax
  41d9b2:	mov    dl,0x8b
  41d9b4:	scas   al,BYTE PTR es:[edi]
  41d9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9b6:	add    DWORD PTR [ebx-0x14],edi
  41d9b9:	mov    eax,0x730b4942
  41d9be:	addr16 cmp bh,dh
  41d9c1:	sub    DWORD PTR [ebp+0x651d0401],0x1e
  41d9c8:	fcmovnbe st,st(3)
  41d9ca:	inc    edx
  41d9cb:	xchg   ecx,eax
  41d9cc:	or     BYTE PTR [eax+esi*4-0x69],cl
  41d9d0:	cmp    al,BYTE PTR [eax-0x55]
  41d9d3:	mov    bh,0x99
  41d9d5:	aaa    
  41d9d6:	aad    0x74
  41d9d8:	fwait
  41d9d9:	sub    eax,0xf7c5f825
  41d9de:	cdq    
  41d9df:	outs   dx,DWORD PTR ds:[esi]
  41d9e0:	outs   dx,BYTE PTR ds:[esi]
  41d9e1:	pop    edx
  41d9e2:	icebp  
  41d9e3:	retf   0x9f70
  41d9e6:	fimul  DWORD PTR ss:[edx-0x33]
  41d9ea:	mov    bl,0x70
  41d9ec:	jmp    0x91010ba5
  41d9f1:	(bad)
  41d9f4:	jp     0x41da21
  41d9f6:	mov    bl,0x6a
  41d9f8:	sbb    cl,BYTE PTR [ecx]
  41d9fa:	iret   
  41d9fb:	jbe    0x41d9fa
  41d9fd:	stc    
  41d9fe:	into   
  41d9ff:	hlt    
  41da00:	mov    WORD PTR ss:[eax+0x3a57b2c3],?
  41da07:	and    BYTE PTR [esi],al
  41da09:	sub    ebp,DWORD PTR ds:[edx]
  41da0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da0d:	cmp    eax,DWORD PTR [ecx-0x2a1ff2d2]
  41da13:	ret    
  41da14:	mov    eax,0x3bc8b75b
  41da19:	mov    esi,0x91f9cb7d
  41da1e:	scas   eax,DWORD PTR es:[edi]
  41da1f:	test   DWORD PTR [eax],ebx
  41da21:	lods   al,BYTE PTR ds:[esi]
  41da22:	stos   BYTE PTR es:[edi],al
  41da23:	dec    eax
  41da24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da25:	in     al,0xe8
  41da27:	shl    esi,cl
  41da29:	jbe    0x41daa7
  41da2b:	cmp    al,0xae
  41da2d:	cmp    al,0x59
  41da2f:	inc    al
  41da31:	clc    
  41da32:	idiv   DWORD PTR [eax]
  41da34:	retf   0x8cd8
  41da37:	jmp    0x41da38
  41da39:	sbb    ebx,esp
  41da3b:	scas   al,BYTE PTR es:[edi]
  41da3c:	jb     0x41da7a
  41da3e:	lods   al,BYTE PTR ds:[esi]
  41da3f:	ins    DWORD PTR es:[edi],dx
  41da40:	or     DWORD PTR [edx+esi*4],ebp
  41da43:	std    
  41da44:	stos   DWORD PTR es:[edi],eax
  41da45:	pushf  
  41da46:	and    eax,DWORD PTR [ebx-0x3ee816b]
  41da4c:	mov    al,0x87
  41da4e:	mov    edx,ebp
  41da50:	jmp    FWORD PTR [eax]
  41da52:	mov    DWORD PTR [esi+0x77],eax
  41da55:	retf   
  41da56:	hlt    
  41da57:	pop    eax
  41da58:	or     DWORD PTR [eax],ebx
  41da5a:	push   edi
  41da5b:	push   esi
  41da5c:	std    
  41da5d:	mov    ebx,0x730d667
  41da62:	daa    
  41da63:	and    eax,0x7dca7dc2
  41da68:	jb     0x41dad4
  41da6a:	(bad)  
  41da6b:	jg     0x41da5c
  41da6d:	ss mov cl,ch
  41da70:	jbe    0x41da4d
  41da72:	xlat   BYTE PTR ds:[ebx]
  41da73:	popa   
  41da74:	add    edx,ebx
  41da76:	shl    DWORD PTR [ecx],cl
  41da78:	mov    WORD PTR [esi-0x510eedaf],ss
  41da7e:	xlat   BYTE PTR ds:[ebx]
  41da7f:	jle    0x41daf9
  41da81:	cld    
  41da82:	xchg   ebp,eax
  41da83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da84:	pop    edi
  41da85:	ss cld 
  41da87:	mov    esi,0xebfbfdcd
  41da8c:	mov    edx,0x5ce1ea0
  41da91:	xchg   DWORD PTR ds:0x531f07ad,edi
  41da97:	push   ss
  41da98:	sbb    eax,0x9743c30d
  41da9d:	dec    edi
  41da9e:	xchg   edx,eax
  41da9f:	and    ch,BYTE PTR [ebx-0x45c05168]
  41daa5:	data16 scas al,BYTE PTR es:[edi]
  41daa7:	pop    ebp
  41daa8:	cmp    eax,0xd7053486
  41daad:	fst    QWORD PTR [ecx+0x6a257c27]
  41dab3:	fcmove st,st(5)
  41dab5:	and    al,0x73
  41dab7:	pop    esi
  41dab8:	inc    esi
  41dab9:	push   cs
  41daba:	xor    BYTE PTR [edx+0x37],dl
  41dabd:	or     edx,ecx
  41dabf:	hlt    
  41dac0:	addr16 pop esp
  41dac2:	add    al,0xdd
  41dac4:	cmp    eax,0x7e1e7921
  41dac9:	push   es
  41daca:	ja     0x41da96
  41dacc:	mov    al,ds:0x2327f90
  41dad1:	cmp    eax,0x36a1ce21
  41dad6:	std    
  41dad7:	data16 test BYTE PTR [ebx+0x34],0x94
  41dadc:	jge    0x41db5b
  41dade:	push   esp
  41dadf:	xchg   ebx,eax
  41dae0:	push   edi
  41dae1:	test   DWORD PTR [edx+0x4114a44a],esp
  41dae7:	imul   edi,edx,0xffffff92
  41daea:	sar    bl,0x2f
  41daed:	adc    al,cl
  41daef:	jnp    0x41daef
  41daf1:	mov    cl,0xdf
  41daf3:	cmp    dl,bl
  41daf5:	ja     0x41db0f
  41daf7:	mov    bh,0xa5
  41daf9:	xor    DWORD PTR [esi],esp
  41dafb:	jo     0x41db6c
  41dafd:	call   0xc2b9:0xe1568ef9
  41db04:	sub    eax,0x8719f4dd
  41db09:	std    
  41db0a:	fldcw  WORD PTR [eax]
  41db0c:	call   0xea00f588
  41db11:	sti    
  41db12:	nop
  41db13:	dec    dh
  41db15:	stos   DWORD PTR es:[edi],eax
  41db16:	jbe    0x41dad6
  41db18:	or     eax,0xfd3224b6
  41db1d:	(bad)  
  41db1e:	xchg   ecx,eax
  41db1f:	mov    esp,0x43463040
  41db24:	out    0xad,eax
  41db26:	dec    ebp
  41db27:	sar    DWORD PTR [edi+0x2b],1
  41db2a:	arpl   WORD PTR [esi],bx
  41db2c:	mov    eax,0xbd8f4bcb
  41db31:	pop    edi
  41db32:	imul   eax,ecx,0x7d1e16f9
  41db38:	dec    ecx
  41db39:	sub    ecx,ebx
  41db3b:	xchg   esi,eax
  41db3c:	retf   0x361b
  41db3f:	jns    0x41db52
  41db41:	mov    ds:0x4ce6574,eax
  41db46:	loopne 0x41dbb4
  41db48:	mov    dl,bh
  41db4a:	shl    BYTE PTR [eax-0x55],1
  41db4d:	sti    
  41db4e:	loopne 0x41db50
  41db50:	cmp    al,0x4d
  41db52:	mov    al,0xe1
  41db54:	jmp    0x41daea
  41db56:	imul   edx,DWORD PTR [edi+0x6a],0xe5fc0e6f
  41db5d:	out    dx,eax
  41db5e:	loopne 0x41dbb0
  41db60:	fs out 0xef,eax
  41db63:	icebp  
  41db64:	xchg   ebp,eax
  41db65:	inc    esp
  41db66:	xor    DWORD PTR [ecx+0x4006a988],esi
  41db6c:	mov    esp,0x7f8ea789
  41db71:	test   eax,0x3a857e21
  41db76:	loope  0x41dbd3
  41db78:	pop    esp
  41db79:	ss inc edx
  41db7b:	dec    ebx
  41db7c:	mov    esi,0xe8d2e86a
  41db81:	jle    0x41db7f
  41db83:	ins    BYTE PTR es:[edi],dx
  41db84:	add    eax,0xfeefeea0
  41db89:	out    0x9e,al
  41db8b:	or     DWORD PTR [bx+di-0x65f1],ecx
  41db90:	ja     0x41db73
  41db92:	int3   
  41db93:	fs xor eax,0x9537adbe
  41db99:	push   esi
  41db9a:	push   ebp
  41db9b:	pop    ds
  41db9c:	mov    edx,0xa380cc9
  41dba1:	add    cl,0xde
  41dba4:	lods   eax,DWORD PTR ds:[esi]
  41dba5:	ins    DWORD PTR es:[edi],dx
  41dba6:	ins    BYTE PTR es:[edi],dx
  41dba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dba8:	or     bl,al
  41dbaa:	mov    dl,0xcc
  41dbac:	jno    0x41dc1c
  41dbae:	jg     0x41dbea
  41dbb0:	shl    BYTE PTR [ebp+0x7fed815f],cl
  41dbb6:	xchg   edx,eax
  41dbb7:	adc    eax,0xe20d5535
  41dbbc:	jnp    0x41dc0f
  41dbbe:	mov    eax,0x93213ee
  41dbc3:	and    ecx,DWORD PTR [edx+ebp*2+0x37]
  41dbc7:	jg     0x41db85
  41dbc9:	pop    esi
  41dbca:	sbb    al,0x4c
  41dbcc:	imul   ebp,DWORD PTR [ecx+0x1c1968ed],0xffffffd6
  41dbd3:	add    DWORD PTR [eax-0x42510c2c],eax
  41dbd9:	imul   ebp,DWORD PTR [esi],0xffffffd3
  41dbdc:	dec    esi
  41dbdd:	cld    
  41dbde:	cmp    al,0xee
  41dbe0:	(bad)
  41dbe4:	stos   BYTE PTR es:[edi],al
  41dbe5:	dec    edx
  41dbe6:	test   DWORD PTR [edx-0x1e],edi
  41dbe9:	dec    ecx
  41dbea:	ins    BYTE PTR es:[edi],dx
  41dbeb:	iret   
  41dbec:	out    dx,eax
  41dbed:	xchg   BYTE PTR [ecx+0x2d],dh
  41dbf0:	and    esi,DWORD PTR ds:0xa492dfd3
  41dbf6:	inc    esp
  41dbf7:	aaa    
  41dbf8:	jmp    0xeafb:0x40caf41f
  41dbff:	and    BYTE PTR [ecx],al
  41dc01:	add    al,0xfd
  41dc03:	sbb    al,0x13
  41dc05:	jg     0x41dbb5
  41dc07:	add    al,0xff
  41dc09:	js     0x41dbcb
  41dc0b:	gs mov dh,0xac
  41dc0e:	jecxz  0x41dbe2
  41dc10:	nop
  41dc11:	clts   
  41dc13:	iret   
  41dc14:	pop    ebp
  41dc15:	sbb    esi,ecx
  41dc17:	test   cl,ah
  41dc19:	or     BYTE PTR [esi],al
  41dc1b:	stc    
  41dc1c:	xchg   ecx,eax
  41dc1d:	ins    BYTE PTR es:[edi],dx
  41dc1e:	call   0xa206:0x38f69ee1
  41dc25:	ret    0x6c9c
  41dc28:	clc    
  41dc29:	inc    ecx
  41dc2a:	mov    bh,0xee
  41dc2c:	(bad)  
  41dc2d:	dec    ebx
  41dc2e:	inc    ebx
  41dc2f:	arpl   WORD PTR [ebp+0x5e9be5f2],di
  41dc35:	adc    al,BYTE PTR [eax+0x3a28a91b]
  41dc3b:	in     eax,dx
  41dc3c:	sub    esi,DWORD PTR [ecx-0x38]
  41dc3f:	aad    0xa8
  41dc41:	jb     0x41dbe0
  41dc43:	dec    esi
  41dc44:	fucom  st(7)
  41dc46:	or     al,0xe0
  41dc48:	fsubrp st(5),st
  41dc4a:	cmp    edi,DWORD PTR [ebx]
  41dc4c:	mov    bl,0xf2
  41dc4e:	jno    0x41dc47
  41dc50:	adc    DWORD PTR [ecx],ecx
  41dc52:	adc    BYTE PTR fs:[esi+ecx*4-0x146a9de1],dl
  41dc5a:	mov    ds,WORD PTR [edx+ebx*4]
  41dc5d:	stos   DWORD PTR es:[edi],eax
  41dc5e:	dec    ecx
  41dc5f:	sub    al,0xaa
  41dc61:	dec    esp
  41dc62:	mov    WORD PTR [ecx],fs
  41dc64:	cmp    bl,dh
  41dc66:	int3   
  41dc67:	mov    ebp,0xa600631f
  41dc6c:	(bad)  
  41dc6d:	mov    eax,0xc963b1b8
  41dc72:	jae    0x41dc23
  41dc74:	push   esp
  41dc75:	mov    DWORD PTR [eax-0x3a],ecx
  41dc78:	push   ss
  41dc79:	xchg   esp,eax
  41dc7a:	inc    ebp
  41dc7b:	nop
  41dc7c:	push   ss
  41dc7d:	or     BYTE PTR [esi-0x6fc8794f],al
  41dc83:	dec    ecx
  41dc84:	jl     0x41dcf4
  41dc86:	mov    ah,0xab
  41dc88:	or     BYTE PTR [edx-0x150305c7],ah
  41dc8e:	push   esi
  41dc8f:	fwait
  41dc90:	dec    edx
  41dc91:	pop    ss
  41dc92:	push   es
  41dc93:	sar    esi,0xf0
  41dc96:	mov    al,BYTE PTR [edx+ebx*2]
  41dc99:	sub    eax,0xc267ecca
  41dc9e:	(bad)  
  41dc9f:	rcr    BYTE PTR gs:[ebx],cl
  41dca2:	mov    bl,0xaa
  41dca4:	bound  ecx,QWORD PTR [edi-0x5cd6a7fa]
  41dcaa:	sbb    bh,bl
  41dcac:	or     eax,0x27b2e013
  41dcb1:	ins    BYTE PTR es:[edi],dx
  41dcb2:	xchg   edi,eax
  41dcb3:	xor    DWORD PTR [eax],eax
  41dcb5:	pop    edx
  41dcb6:	add    al,0x8e
  41dcb8:	mov    ecx,0x6bf40101
  41dcbd:	test   BYTE PTR [edx+eax*2-0x5d],al
  41dcc1:	fs cwde 
  41dcc3:	fld    st(0)
  41dcc5:	jmp    0x6db10ed
  41dcca:	lods   al,BYTE PTR ds:[esi]
  41dccb:	xchg   ebp,eax
  41dccc:	xchg   ebx,eax
  41dccd:	lahf   
  41dcce:	jbe    0x41dc82
  41dcd0:	mov    cl,0xb
  41dcd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcd3:	test   BYTE PTR ds:0x6b6cc157,dh
  41dcd9:	pop    esp
  41dcda:	jae    0x41dcdd
  41dcdc:	xor    eax,0x847f9db2
  41dce1:	push   esp
  41dce2:	ins    BYTE PTR es:[edi],dx
  41dce3:	jp     0x41dced
  41dce5:	cld    
  41dce6:	fwait
  41dce7:	cmp    edi,DWORD PTR [edx-0x3ed658e0]
  41dced:	les    edi,FWORD PTR [ebx+eax*4-0x73]
  41dcf1:	int3   
  41dcf2:	rcr    DWORD PTR [edx+0x5f369774],1
  41dcf8:	cli    
  41dcf9:	sbb    BYTE PTR [eax+0x7eefa254],dh
  41dcff:	test   al,0x35
  41dd01:	sub    BYTE PTR [ebp+0x27],dh
  41dd04:	xchg   ebp,eax
  41dd05:	aad    0x3c
  41dd07:	sbb    ebx,DWORD PTR [esi]
  41dd09:	adc    ah,BYTE PTR [esi-0x55]
  41dd0c:	fxch   st(2)
  41dd0e:	faddp  st(6),st
  41dd10:	sar    BYTE PTR [ecx],0xa2
  41dd13:	je     0x41dd22
  41dd15:	xchg   ecx,eax
  41dd16:	mov    al,ds:0x258c7937
  41dd1b:	in     eax,0xec
  41dd1d:	call   0x301d:0xb807a47d
  41dd24:	js     0x41dce7
  41dd26:	mov    ebx,0xfd0ab606
  41dd2b:	in     al,dx
  41dd2c:	out    dx,eax
  41dd2d:	arpl   ax,dx
  41dd2f:	jb     0x41dcd9
  41dd31:	fcomi  st,st(5)
  41dd33:	xor    bl,BYTE PTR [ecx+0x180c46f5]
  41dd39:	ficomp WORD PTR [eax-0x6fcb9658]
  41dd3f:	sbb    al,0xd4
  41dd41:	push   ds
  41dd42:	aam    0xc6
  41dd44:	jmp    0x7a20:0x73fb1356
  41dd4b:	push   cs
  41dd4c:	mov    ?,WORD PTR [ebx+0x3e]
  41dd4f:	pop    esp
  41dd50:	mov    bl,0x1e
  41dd52:	mov    al,0x65
  41dd54:	xchg   edi,eax
  41dd55:	pop    edi
  41dd56:	gs sbb ah,ch
  41dd59:	test   eax,0xa91f6081
  41dd5e:	inc    ebx
  41dd5f:	loop   0x41dce7
  41dd61:	xor    ch,BYTE PTR [eax]
  41dd63:	shl    DWORD PTR [ebx],0x68
  41dd66:	jne    0x41dd58
  41dd68:	dec    edx
  41dd69:	sub    al,0xcc
  41dd6b:	pop    es
  41dd6c:	jp     0x41ddb0
  41dd6e:	or     esp,DWORD PTR ds:0x993c1615
  41dd74:	inc    ebx
  41dd75:	jle    0x41ddb7
  41dd77:	cmp    al,0xd3
  41dd79:	cmp    dh,dh
  41dd7b:	jge    0x41ddd0
  41dd7d:	ss leave 
  41dd7f:	sti    
  41dd80:	sbb    al,0x6c
  41dd82:	loop   0x41ddde
  41dd84:	mov    gs,WORD PTR [edi+eax*2+0x4a504e0f]
  41dd8b:	push   ebx
  41dd8c:	(bad)  
  41dd8d:	(bad)  
  41dd8e:	lock adc DWORD PTR [edx+eax*2+0x3d],eax
  41dd93:	and    al,0xa9
  41dd95:	sbb    BYTE PTR [eax+ecx*8],cl
  41dd98:	test   DWORD PTR [ecx-0x37],edi
  41dd9b:	add    al,0xf7
  41dd9d:	(bad)  
  41dd9e:	mov    bl,0xe8
  41dda0:	jno    0x41ddd0
  41dda2:	ins    BYTE PTR es:[edi],dx
  41dda3:	mov    ?,WORD PTR [edi]
  41dda5:	fnstcw WORD PTR [ebp+0x7b]
  41dda8:	sbb    DWORD PTR [edi-0x7cd47600],edi
  41ddae:	xchg   BYTE PTR ss:[esi+edi*1-0x5a540c89],dl
  41ddb6:	cs ret 0x582b
  41ddba:	mov    ecx,0xc43823c0
  41ddbf:	stc    
  41ddc0:	dec    ecx
  41ddc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddc2:	lods   eax,DWORD PTR ds:[esi]
  41ddc3:	cli    
  41ddc4:	jle    0x41dd70
  41ddc6:	repz push eax
  41ddc8:	jo     0x41de04
  41ddca:	div    DWORD PTR [ecx]
  41ddcc:	cs aaa 
  41ddce:	imul   ecx,DWORD PTR [esi+0x21],0xffffffb1
  41ddd2:	rcl    BYTE PTR [esp+ecx*4+0x5a20c5b8],0xe5
  41ddda:	xchg   BYTE PTR [ebp+0x657b47e],dh
  41dde0:	scas   al,BYTE PTR es:[edi]
  41dde1:	es rol ah,1
  41dde4:	not    DWORD PTR [ecx+0xf04b300]
  41ddea:	repz dec edx
  41ddec:	stc    
  41dded:	mov    ebx,0x511262c7
  41ddf2:	mov    ah,0x5a
  41ddf4:	add    edi,edi
  41ddf6:	push   cs
  41ddf7:	push   ebx
  41ddf8:	inc    esi
  41ddf9:	push   ebp
  41ddfa:	xchg   esi,eax
  41ddfb:	jmp    0xd404:0x30586344
  41de02:	test   DWORD PTR [eax+0x72aae013],ebx
  41de08:	fwait
  41de09:	jecxz  0x41de7d
  41de0b:	mov    ebp,ds
  41de0d:	or     edi,DWORD PTR [ecx-0x76]
  41de10:	xchg   edi,eax
  41de11:	mov    ebp,0x63f7f76f
  41de16:	lahf   
  41de17:	ss mov si,0x59e5
  41de1c:	cli    
  41de1d:	or     DWORD PTR [ebx],0xe19a224f
  41de23:	mov    dl,0xe8
  41de25:	jp     0x41de6d
  41de27:	mov    al,ds:0xd1b17d79
  41de2c:	pop    esi
  41de2d:	ret    0x97ca
  41de30:	inc    ebp
  41de31:	xchg   edi,eax
  41de32:	test   BYTE PTR [ecx+0x76e0dc87],0xeb
  41de39:	cmp    DWORD PTR [ecx-0x47],eax
  41de3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de3d:	in     eax,dx
  41de3e:	outs   dx,BYTE PTR ds:[esi]
  41de3f:	fidivr DWORD PTR [esi+eax*8-0x419d6946]
  41de46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de47:	add    dl,BYTE PTR [edi]
  41de49:	pushf  
  41de4a:	adc    DWORD PTR [esi-0x1b],0xaa7b2510
  41de51:	js     0x41deb0
  41de53:	cwde   
  41de54:	xchg   esp,eax
  41de55:	xchg   esi,eax
  41de56:	test   al,0xae
  41de58:	and    eax,DWORD PTR [eax-0x16]
  41de5b:	mov    ds:0xf52a4692,eax
  41de60:	inc    eax
  41de61:	(bad)  [ebp+edx*4+0xc]
  41de65:	and    DWORD PTR [ecx+0x4d],ecx
  41de68:	mov    WORD PTR [eax-0x49],ds
  41de6b:	sbb    BYTE PTR [eax],ch
  41de6d:	test   eax,0x90506905
  41de72:	jns    0x41de47
  41de74:	inc    esp
  41de75:	adc    ebp,DWORD PTR [esi]
  41de77:	dec    edx
  41de78:	mov    dl,0x36
  41de7a:	ja     0x41de6f
  41de7c:	mov    ch,0x78
  41de7e:	ins    DWORD PTR es:[edi],dx
  41de7f:	int    0xda
  41de81:	dec    esp
  41de82:	lahf   
  41de83:	lods   eax,DWORD PTR ds:[esi]
  41de84:	inc    ecx
  41de85:	std    
  41de86:	out    dx,eax
  41de87:	mov    ebp,0x115710ae
  41de8c:	jle    0x41de56
  41de8e:	sbb    eax,0xcc91192c
  41de93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de94:	adc    al,0xe5
  41de96:	sub    DWORD PTR [ebp-0x6e76f549],ebp
  41de9c:	(bad)  
  41de9d:	jmp    0x41de4b
  41de9f:	ret    0xe1e7
  41dea2:	mov    ah,0xcd
  41dea4:	mov    ds:0xef704d7e,eax
  41dea9:	(bad)  
  41deaa:	pop    ds
  41deab:	cli    
  41deac:	aam    0x67
  41deae:	xchg   ebp,eax
  41deaf:	lea    eax,[eax-0x3e]
  41deb2:	or     BYTE PTR [esp+ebp*1],al
  41deb5:	stos   BYTE PTR es:[edi],al
  41deb6:	rol    DWORD PTR [esi-0x65ed4c38],0xfd
  41debd:	std    
  41debe:	inc    edx
  41debf:	dec    edx
  41dec0:	mov    WORD PTR [ebx],fs
  41dec2:	xchg   ebp,eax
  41dec3:	or     dl,BYTE PTR [esi+edx*1]
  41dec6:	pop    edi
  41dec7:	adc    al,0x39
  41dec9:	loope  0x41df09
  41decb:	xchg   ecx,eax
  41decc:	stos   DWORD PTR es:[di],eax
  41dece:	call   0xa3a6:0xc3514d31
  41ded5:	aam    0xb2
  41ded7:	mov    esi,0xc7cc1f97
  41dedc:	mov    al,ds:0xf65b1c9a
  41dee1:	jge    0x41dec3
  41dee3:	xchg   edi,eax
  41dee4:	xchg   BYTE PTR [edi],dl
  41dee6:	pop    edi
  41dee7:	dec    edi
  41dee8:	jmp    0xfdfc:0x311b1431
  41deef:	fs test al,0xb8
  41def2:	arpl   WORD PTR [ecx+0x1c],sp
  41def5:	cmp    dh,bl
  41def7:	dec    DWORD PTR [ebx+0x75]
  41defa:	stc    
  41defb:	out    dx,eax
  41defc:	push   ds
  41defd:	mov    dh,0xa9
  41deff:	repz retf 
  41df01:	mov    ds:0x6050f772,eax
  41df06:	push   ss
  41df07:	push   0x4003dad
  41df0c:	lock inc ecx
  41df0e:	repnz test esi,esp
  41df11:	rcl    DWORD PTR [edx+eiz*4-0x2c],0x82
  41df16:	pushw  ds
  41df18:	ins    DWORD PTR es:[edi],dx
  41df19:	cmp    al,0xca
  41df1b:	cmp    BYTE PTR [edi+0x1a598f94],bh
  41df21:	cs sbb al,0x37
  41df24:	icebp  
  41df25:	clc    
  41df26:	pop    esp
  41df27:	mov    cl,al
  41df29:	mov    edi,0xe276ce4c
  41df2e:	xchg   ebx,eax
  41df2f:	(bad)  
  41df30:	adc    BYTE PTR [ecx-0x15],dh
  41df33:	imul   esp,DWORD PTR [ebx+0x6949f394],0x4280d7dd
  41df3d:	adc    dh,BYTE PTR [esi]
  41df3f:	sub    bh,BYTE PTR [edx-0x494333c7]
  41df45:	inc    ecx
  41df46:	add    BYTE PTR [esi-0xb],bl
  41df49:	mov    ds:0x734a5b5e,eax
  41df4e:	loop   0x41def7
  41df50:	or     al,0x10
  41df52:	sbb    DWORD PTR [edi],edi
  41df54:	fs (bad) 
  41df56:	out    dx,al
  41df57:	pcmpgtd mm3,QWORD PTR [ebx]
  41df5a:	mov    esp,0xd4c93ae2
  41df5f:	add    cl,ah
  41df61:	nop
  41df62:	lods   al,BYTE PTR ds:[esi]
  41df63:	in     al,0xce
  41df65:	or     eax,0x45034cf
  41df6a:	fcom   DWORD PTR [ebp*1-0x5f405de0]
  41df71:	push   ds
  41df72:	rcr    DWORD PTR [ecx-0x34],0x71
  41df76:	xchg   esp,eax
  41df77:	out    0xd4,eax
  41df79:	mov    ch,0x25
  41df7b:	xchg   ebx,eax
  41df7c:	jge    0x41dfd9
  41df7e:	scas   eax,DWORD PTR es:[edi]
  41df7f:	fstp   QWORD PTR [eax+eiz*4]
  41df82:	dec    esp
  41df83:	in     eax,0xa1
  41df85:	sub    DWORD PTR ds:0xf44e7ae6,eax
  41df8b:	mov    al,ds:0xd6cfc146
  41df90:	sti    
  41df91:	push   ebx
  41df92:	push   ss
  41df93:	lahf   
  41df94:	push   0xf15a6fe1
  41df99:	and    esi,DWORD PTR [edx]
  41df9b:	mov    edi,0x57052f1d
  41dfa0:	jg     0x41df93
  41dfa2:	mov    eax,ds:0x8ed59834
  41dfa7:	mov    ds:0x1093131a,al
  41dfac:	jbe    0x41df7b
  41dfae:	xor    dh,BYTE PTR [edx-0x6c]
  41dfb1:	dec    esp
  41dfb2:	pop    cx
  41dfb4:	sub    BYTE PTR [eax-0x44531d8a],bl
  41dfba:	scas   al,BYTE PTR es:[edi]
  41dfbb:	in     al,0x56
  41dfbd:	xchg   ebp,eax
  41dfbe:	fldenv [ebx+0x3f]
  41dfc1:	fucomp st(7)
  41dfc3:	jmp    0x41e011
  41dfc5:	pop    eax
  41dfc6:	pop    eax
  41dfc7:	shr    esi,0x3a
  41dfca:	inc    edi
  41dfcb:	xor    eax,DWORD PTR [ebx+esi*8]
  41dfce:	(bad)  
  41dfcf:	retf   0xd003
  41dfd2:	ror    BYTE PTR [ebx+0x26],1
  41dfd5:	sub    al,0xa5
  41dfd7:	es hlt 
  41dfd9:	rcl    BYTE PTR [ebp-0x17ed917b],1
  41dfdf:	out    dx,eax
  41dfe0:	outs   dx,BYTE PTR ds:[esi]
  41dfe1:	sbb    eax,0x266609ae
  41dfe6:	push   cs
  41dfe7:	and    dh,BYTE PTR [ebp+0x6a81d016]
  41dfed:	pop    eax
  41dfee:	inc    edi
  41dfef:	and    bh,ch
  41dff1:	adc    dh,0x15
  41dff4:	loopne 0x41dfa1
  41dff6:	sub    al,0x4f
  41dff8:	adc    esp,DWORD PTR [esi-0x56b0313d]
  41dffe:	(bad)  
  41dfff:	pop    edx
  41e000:	push   ds
  41e001:	xchg   ebx,eax
  41e002:	mov    ebx,ds
  41e004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e005:	xor    al,0x98
  41e007:	sbb    BYTE PTR [esp+edx*8+0xd],cl
  41e00b:	and    edi,DWORD PTR [ebp-0x4b0f5157]
  41e011:	mov    eax,ds:0x5492428b
  41e016:	mov    al,ds:0x1d2c4dee
  41e01b:	and    DWORD PTR [esi+ecx*2],ebp
  41e01e:	sbb    BYTE PTR [esi+0x3],bl
  41e021:	or     BYTE PTR [ebp+0x2665b04],cl
  41e027:	xchg   esi,eax
  41e028:	xor    ch,BYTE PTR [ecx-0x6f]
  41e02b:	ficom  DWORD PTR [edx]
  41e02d:	dec    esp
  41e02e:	rol    DWORD PTR [esi+0x20],1
  41e031:	push   0x42ab72d0
  41e036:	cmp    al,0xcd
  41e038:	pop    esp
  41e039:	add    edi,0x24
  41e03c:	xchg   edi,eax
  41e03d:	std    
  41e03e:	cld    
  41e03f:	mov    al,al
  41e041:	popa   
  41e042:	jns    0x41e091
  41e044:	mov    ebx,0x92e06342
  41e049:	add    cl,ah
  41e04b:	mov    eax,edx
  41e04d:	fdivr  st,st(7)
  41e04f:	test   DWORD PTR [ebx+0x36],ebx
  41e052:	push   edx
  41e053:	cmp    DWORD PTR [ebx+0x67],ebx
  41e056:	(bad)  
  41e057:	push   ecx
  41e058:	pop    eax
  41e059:	daa    
  41e05a:	mov    ds:0x841c2e91,eax
  41e05f:	xor    BYTE PTR [eax+0x2e],cl
  41e062:	xor    BYTE PTR [ebx],bl
  41e064:	xor    DWORD PTR [ecx-0x13ec9574],esp
  41e06a:	fstp   QWORD PTR [edi+0x7ed1f78d]
  41e070:	gs hlt 
  41e072:	idiv   DWORD PTR [esi-0x53]
  41e075:	addr16 push cs
  41e077:	out    dx,al
  41e078:	adc    cl,BYTE PTR [esi]
  41e07a:	jge    0x41e06a
  41e07c:	call   0xc0b3512b
  41e081:	ds xor eax,0x95e3fe9e
  41e087:	sub    eax,0x4bf213d7
  41e08c:	test   ch,bl
  41e08e:	inc    DWORD PTR [eax-0x3f03df56]
  41e094:	mov    esi,0x73730f90
  41e099:	add    eax,DWORD PTR [ecx-0x3b]
  41e09c:	mov    esp,0xb194e182
  41e0a1:	aas    
  41e0a2:	adc    BYTE PTR [ebx],cl
  41e0a4:	js     0x41e125
  41e0a6:	or     al,0x1a
  41e0a8:	lea    eax,ds:0x6279e026
  41e0ae:	ret    
  41e0af:	popa   
  41e0b0:	loopne 0x41e0f4
  41e0b2:	sahf   
  41e0b3:	fdivp  st(5),st
  41e0b5:	pop    ds
  41e0b6:	pop    edx
  41e0b7:	pop    eax
  41e0b8:	mov    WORD PTR [ecx+0x18d66a8b],ds
  41e0be:	enter  0x3469,0xf6
  41e0c2:	jp     0x41e061
  41e0c4:	xchg   edx,ebx
  41e0c6:	cmc    
  41e0c7:	pop    ebp
  41e0c8:	or     al,0xc7
  41e0ca:	fbstp  TBYTE PTR [eax-0x48]
  41e0cd:	xchg   edx,eax
  41e0ce:	xchg   ecx,eax
  41e0cf:	in     eax,dx
  41e0d0:	(bad)  
  41e0d1:	jb     0x41e0f3
  41e0d3:	aaa    
  41e0d4:	xchg   ecx,eax
  41e0d5:	push   ebp
  41e0d6:	cmp    DWORD PTR [edx+ebx*8-0x47],esi
  41e0da:	lea    ebp,[ebp-0x3e537c35]
  41e0e0:	ins    BYTE PTR es:[edi],dx
  41e0e1:	pusha  
  41e0e2:	mov    al,ds:0x9fd0bf0f
  41e0e7:	scas   eax,DWORD PTR es:[edi]
  41e0e8:	mov    dh,0xd1
  41e0ea:	jle    0x41e0dc
  41e0ec:	jecxz  0x41e133
  41e0ee:	adc    BYTE PTR [edx],cl
  41e0f0:	repnz popa 
  41e0f2:	push   esp
  41e0f3:	test   bh,ah
  41e0f5:	icebp  
  41e0f6:	pop    ecx
  41e0f7:	sti    
  41e0f8:	add    eax,edx
  41e0fa:	retf   
  41e0fb:	push   esi
  41e0fc:	xor    eax,0x94cca2f3
  41e101:	xchg   ebp,eax
  41e102:	xor    bl,dl
  41e104:	inc    edi
  41e105:	pop    edi
  41e106:	les    edx,FWORD PTR [ebp-0x7e]
  41e109:	stos   DWORD PTR es:[edi],eax
  41e10a:	mov    ah,0x52
  41e10c:	dec    edi
  41e10d:	and    DWORD PTR [esi],0x4335de15
  41e113:	mov    ah,0x2
  41e115:	and    eax,0xc8528820
  41e11a:	mov    dl,0x73
  41e11c:	imul   DWORD PTR [ecx]
  41e11e:	dec    eax
  41e11f:	mov    edx,0x9a413c7c
  41e124:	(bad)  
  41e125:	retf   
  41e126:	in     eax,dx
  41e127:	mov    esp,0xe72782cb
  41e12c:	imul   edx
  41e12e:	dec    ebx
  41e12f:	stos   BYTE PTR es:[edi],al
  41e130:	cmp    ebx,eax
  41e132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e133:	es fsubp st(5),st
  41e136:	xor    DWORD PTR [eax],esi
  41e138:	mov    fs,WORD PTR [ebx+ecx*8+0x67bb5162]
  41e13f:	inc    eax
  41e140:	add    BYTE PTR [eax+0x9],al
  41e143:	xchg   edx,eax
  41e144:	mov    ecx,0x3780d555
  41e149:	test   BYTE PTR [edx+0x52],dh
  41e14c:	cli    
  41e14d:	test   BYTE PTR [edx],0x6a
  41e150:	and    BYTE PTR [edi+0x4a],al
  41e153:	js     0x41e198
  41e155:	xchg   edi,eax
  41e156:	dec    esi
  41e158:	scas   eax,DWORD PTR es:[edi]
  41e159:	adc    al,0xd5
  41e15b:	imul   edi,DWORD PTR [eax+0x28ca7ca6],0xffffffee
  41e162:	adc    eax,0x5471577d
  41e167:	adc    eax,ebx
  41e169:	sub    ah,BYTE PTR ds:[edx-0x3149bfc9]
  41e170:	jae    0x41e175
  41e172:	mov    ss:0xc75af716,al
  41e178:	nop
  41e179:	lods   eax,DWORD PTR ds:[esi]
  41e17a:	jp     0x41e149
  41e17c:	mov    eax,?
  41e17e:	in     al,dx
  41e17f:	call   0x96f0:0xc04ffc96
  41e186:	cmp    al,0xbd
  41e188:	dec    edi
  41e189:	ins    BYTE PTR es:[edi],dx
  41e18a:	mov    ds:0xd10edec3,al
  41e18f:	push   es
  41e190:	(bad)  
  41e191:	cmp    ecx,ecx
  41e193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e194:	inc    esi
  41e195:	push   ds
  41e196:	adc    BYTE PTR [ecx+edi*2-0x2ddd367f],ah
  41e19d:	pushaw 
  41e19f:	mov    edi,?
  41e1a1:	mov    al,0xb4
  41e1a3:	xchg   esi,eax
  41e1a4:	pop    ecx
  41e1a5:	neg    ebx
  41e1a7:	xlat   BYTE PTR ds:[ebx]
  41e1a8:	push   edx
  41e1a9:	imul   ecx,ebx,0xfffffff8
  41e1ac:	xchg   edi,eax
  41e1ad:	push   edx
  41e1ae:	je     0x41e18e
  41e1b0:	xchg   ebp,eax
  41e1b1:	xor    ch,BYTE PTR [eax-0x46]
  41e1b4:	fwait
  41e1b5:	mov    ch,0xcf
  41e1b7:	inc    edx
  41e1b8:	mov    al,ds:0xa94d2924
  41e1bd:	push   edx
  41e1be:	adc    dl,BYTE PTR [ebx+0x47]
  41e1c1:	and    ebx,ebp
  41e1c3:	outs   dx,BYTE PTR ds:[esi]
  41e1c4:	cmp    DWORD PTR [ecx+0x2a951f4e],ebx
  41e1ca:	push   ds
  41e1cb:	mov    ebx,0x3274705b
  41e1d0:	jae    0x41e1a7
  41e1d2:	sub    bl,dh
  41e1d4:	int3   
  41e1d5:	rcl    DWORD PTR [edi],1
  41e1d7:	mov    bh,0x37
  41e1d9:	or     BYTE PTR [esi],bl
  41e1db:	popa   
  41e1dc:	dec    esp
  41e1dd:	call   FWORD PTR [eax+0x4c80aadd]
  41e1e3:	stos   BYTE PTR es:[edi],al
  41e1e4:	mov    BYTE PTR ds:0xe2dd8088,bh
  41e1ea:	and    DWORD PTR [edi],ecx
  41e1ec:	mov    ds:0xa67f6615,eax
  41e1f1:	je     0x41e224
  41e1f3:	inc    ebp
  41e1f4:	les    esp,FWORD PTR [edi]
  41e1f6:	test   ebx,0x66c3c878
  41e1fc:	mov    DWORD PTR [ecx+0x4ee83170],esi
  41e202:	sbb    edi,DWORD PTR [eax-0x7885c12]
  41e208:	loopne 0x41e286
  41e20a:	dec    ebp
  41e20b:	or     DWORD PTR [edi-0x7d],ebp
  41e20e:	lods   al,BYTE PTR ds:[esi]
  41e20f:	stos   DWORD PTR es:[edi],eax
  41e210:	je     0x41e25a
  41e212:	les    eax,FWORD PTR [ebp-0xac95a18]
  41e218:	fidivr WORD PTR [edx+0x5f]
  41e21b:	into   
  41e21c:	mov    ebp,0x3e18c53
  41e221:	xchg   ecx,eax
  41e222:	xor    al,0xd7
  41e224:	dec    esi
  41e225:	and    dh,BYTE PTR [ecx+edi*2-0x3c7e2b73]
  41e22c:	loop   0x41e226
  41e22e:	pop    es
  41e22f:	cli    
  41e230:	or     esp,ebp
  41e232:	mov    eax,ds:0x2e04c2c5
  41e237:	add    BYTE PTR [edi-0x2fd9bcb7],al
  41e23d:	fwait
  41e23e:	sbb    ah,bl
  41e240:	and    eax,0xff9600dd
  41e245:	das    
  41e246:	cld    
  41e247:	aad    0x83
  41e249:	out    0xed,al
  41e24b:	add    esi,ecx
  41e24d:	pushf  
  41e24e:	sub    cl,BYTE PTR [edi-0x12a85edc]
  41e254:	out    dx,eax
  41e255:	ins    BYTE PTR es:[edi],dx
  41e256:	test   al,0xca
  41e258:	and    BYTE PTR [esi-0x7e],bl
  41e25b:	push   eax
  41e25c:	js     0x41e224
  41e25e:	dec    eax
  41e25f:	or     bh,dl
  41e261:	jmp    0x4f9a:0xf1655352
  41e268:	(bad)
  41e26b:	xchg   ebx,eax
  41e26c:	cmp    DWORD PTR [ebx-0x34],0x35
  41e270:	shl    DWORD PTR [ecx-0x42],1
  41e273:	sbb    edi,esp
  41e275:	leave  
  41e276:	ret    
  41e277:	pop    ss
  41e278:	imul   ecx
  41e27a:	(bad)  
  41e27b:	fiadd  DWORD PTR [ebx]
  41e27d:	lea    ebx,[ebx-0x363b4676]
  41e283:	sub    dh,BYTE PTR [eax]
  41e285:	jb     0x41e2d4
  41e287:	push   0xffffff95
  41e289:	ins    DWORD PTR es:[edi],dx
  41e28a:	ins    DWORD PTR es:[edi],dx
  41e28b:	jmp    0x41e20e
  41e28d:	call   0x75f27397
  41e292:	or     BYTE PTR [ecx+0x63be35b4],ah
  41e298:	or     DWORD PTR [ebp+edx*1-0x32],eax
  41e29c:	(bad)  
  41e29d:	push   edx
  41e29e:	jecxz  0x41e2e7
  41e2a0:	neg    BYTE PTR [ebx]
  41e2a2:	adc    dh,BYTE PTR [ebp-0x51924c2f]
  41e2a8:	add    BYTE PTR [edi-0x1f],0xf4
  41e2ac:	push   ss
  41e2ad:	test   DWORD PTR [edi-0x54997bb3],esp
  41e2b3:	(bad)  
  41e2b4:	mov    ebx,0x62a74340
  41e2b9:	ins    DWORD PTR es:[edi],dx
  41e2ba:	mov    WORD PTR [esi+esi*1+0x2c],ds
  41e2be:	dec    ebx
  41e2bf:	mov    edx,0xa35ccc71
  41e2c4:	int    0xed
  41e2c6:	jne    0x41e28e
  41e2c8:	sbb    DWORD PTR [eax+0x2efce7be],0x79c25118
  41e2d2:	(bad)  
  41e2d3:	pop    ebx
  41e2d4:	push   ss
  41e2d5:	inc    edx
  41e2d6:	mov    edi,0x4c7739d4
  41e2db:	and    al,0xb
  41e2dd:	jecxz  0x41e2c0
  41e2df:	pop    ebx
  41e2e0:	or     esi,edi
  41e2e2:	cmp    edx,DWORD PTR [ebx+0x50]
  41e2e5:	test   BYTE PTR [ebx],ch
  41e2e7:	push   ebx
  41e2e8:	out    dx,eax
  41e2e9:	push   ds
  41e2ea:	xor    al,0x4b
  41e2ec:	sti    
  41e2ed:	ja     0x41e2ff
  41e2ef:	daa    
  41e2f0:	push   0xad4dc7fe
  41e2f5:	dec    edx
  41e2f6:	out    dx,eax
  41e2f7:	bound  ebp,QWORD PTR [eax]
  41e2f9:	jns    0x41e2e8
  41e2fb:	das    
  41e2fc:	gs dec edx
  41e2fe:	int    0xef
  41e300:	out    dx,al
  41e301:	pop    eax
  41e302:	stos   DWORD PTR es:[edi],eax
  41e303:	std    
  41e304:	mov    al,bh
  41e306:	and    ch,BYTE PTR [eax-0x1b]
  41e309:	mov    ds:0x717c1571,al
  41e30e:	mov    ebx,0xc6025127
  41e313:	mov    ch,0xdf
  41e315:	into   
  41e316:	jne    0x41e390
  41e318:	loope  0x41e33f
  41e31a:	jbe    0x41e318
  41e31c:	pop    DWORD PTR [eax]
  41e31e:	push   edi
  41e31f:	and    ebp,DWORD PTR [ebx+0x7a]
  41e322:	cmp    DWORD PTR [ecx],edx
  41e324:	clc    
  41e325:	push   0x5c38df53
  41e32a:	adc    ah,BYTE PTR [esi-0x3e97c9d2]
  41e330:	pop    es
  41e331:	jge    0x41e33c
  41e333:	xchg   ecx,eax
  41e334:	xchg   edx,eax
  41e335:	dec    eax
  41e336:	lods   al,BYTE PTR ds:[esi]
  41e337:	lahf   
  41e338:	stos   BYTE PTR es:[edi],al
  41e339:	retf   
  41e33a:	mov    esi,0x397511a7
  41e33f:	xchg   ebp,eax
  41e340:	pusha  
  41e341:	std    
  41e342:	add    BYTE PTR [esp+edi*4-0x53],cl
  41e346:	adc    DWORD PTR [eax-0x4f],ebx
  41e349:	jbe    0x2963b52a
  41e34f:	aas    
  41e350:	es jg  0x41e3c6
  41e353:	les    esp,FWORD PTR ds:0xc8e68048
  41e359:	push   0xaf0443bb
  41e35e:	es push ebp
  41e360:	sbb    cl,BYTE PTR [esi-0x47]
  41e363:	pop    ebx
  41e364:	dec    edi
  41e365:	adc    eax,0x117438a3
  41e36a:	xchg   BYTE PTR [esi+0x47],bl
  41e36d:	pop    esp
  41e36e:	add    al,0xbd
  41e370:	add    bh,dl
  41e372:	pop    ecx
  41e373:	mov    ebp,0x43bc0baf
  41e378:	inc    ecx
  41e379:	mov    esi,DWORD PTR [ebx+0x28dad328]
  41e37f:	sar    eax,1
  41e381:	fiadd  WORD PTR [esi+0x7b]
  41e384:	outs   dx,BYTE PTR ds:[esi]
  41e385:	fsubr  QWORD PTR [eax+eax*4]
  41e388:	dec    edx
  41e389:	push   ecx
  41e38a:	inc    ebx
  41e38b:	mov    dh,0xbd
  41e38d:	clc    
  41e38e:	and    al,0xd8
  41e390:	int3   
  41e391:	push   ecx
  41e392:	mov    al,0x1f
  41e394:	dec    esi
  41e395:	push   es
  41e396:	or     bl,bh
  41e398:	cmp    al,0xd6
  41e39a:	imul   eax,ebp,0x5
  41e39d:	push   ebp
  41e39e:	or     BYTE PTR [edx],cl
  41e3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3a1:	jno    0x41e33b
  41e3a3:	popa   
  41e3a4:	popa   
  41e3a5:	push   ebx
  41e3a6:	push   ds
  41e3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3a8:	aaa    
  41e3a9:	fidivr DWORD PTR [edx]
  41e3ab:	or     DWORD PTR [esi],edi
  41e3ad:	or     dh,0xce
  41e3b0:	mov    dh,0xde
  41e3b2:	pop    eax
  41e3b3:	popa   
  41e3b4:	or     ch,BYTE PTR [ecx*2-0x4e5ff0f4]
  41e3bb:	pop    ebx
  41e3bc:	mov    al,ds:0x2effcc92
  41e3c1:	pop    edi
  41e3c2:	lahf   
  41e3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3c4:	xlat   BYTE PTR ds:[ebx]
  41e3c5:	sbb    eax,0xe8691d69
  41e3ca:	aam    0xd4
  41e3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3cd:	xchg   ebx,eax
  41e3ce:	xchg   esi,eax
  41e3cf:	xor    DWORD PTR [ecx+0x59],ebp
  41e3d2:	push   ecx
  41e3d3:	sbb    bh,bl
  41e3d5:	leave  
  41e3d6:	pop    ds
  41e3d7:	or     ch,BYTE PTR [ecx+0x2a]
  41e3da:	cmp    eax,0xe0ab8fb2
  41e3df:	shl    ecx,cl
  41e3e1:	sub    al,0x31
  41e3e3:	dec    ebx
  41e3e4:	popa   
  41e3e5:	sar    bl,0x35
  41e3e8:	xor    esp,esi
  41e3ea:	push   esp
  41e3eb:	es retf 0xd601
  41e3ef:	scas   al,BYTE PTR es:[edi]
  41e3f0:	inc    esp
  41e3f1:	lock push ecx
  41e3f3:	pusha  
  41e3f4:	xchg   ecx,eax
  41e3f5:	mov    bh,0xb8
  41e3f7:	es test al,0x1e
  41e3fa:	mov    eax,0x42f6bcdd
  41e3ff:	push   ds
  41e400:	lock sbb eax,0x8719d170
  41e406:	inc    DWORD PTR [ebx+0x4]
  41e409:	cdq    
  41e40a:	fnstenv [edi+edx*1-0x4308c2de]
  41e411:	mov    ch,0xd2
  41e413:	test   al,0xeb
  41e415:	push   0xffffff9e
  41e417:	test   DWORD PTR [ebx+0x79],edi
  41e41a:	dec    ebp
  41e41b:	cmp    eax,0x98158f17
  41e420:	sub    esp,0xaa1767b1
  41e426:	sti    
  41e427:	out    0xc7,al
  41e429:	fs lock mov esp,0xae44b05
  41e430:	or     BYTE PTR ds:0xb7954551,al
  41e436:	lock je 0x41e441
  41e439:	sub    BYTE PTR [edx],bh
  41e43b:	loop   0x41e486
  41e43d:	add    al,0xaf
  41e43f:	(bad)  [ebx]
  41e441:	or     eax,0xdb18a63c
  41e446:	fild   QWORD PTR [ecx+0x1e9be360]
  41e44c:	mov    dh,0x9a
  41e44e:	aad    0x7d
  41e450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e451:	stos   BYTE PTR es:[edi],al
  41e452:	adc    BYTE PTR [ecx+edi*4+0x56d54666],bl
  41e459:	cdq    
  41e45a:	inc    edx
  41e45b:	fs out 0x1,al
  41e45e:	lods   eax,DWORD PTR ds:[esi]
  41e45f:	fldenv [eax+edx*8-0x17]
  41e463:	ret    0x9c86
  41e466:	ss lock mov dh,0xe7
  41e46a:	inc    eax
  41e46b:	dec    eax
  41e46c:	out    0xe4,al
  41e46e:	add    DWORD PTR [ecx-0x49027228],esi
  41e474:	mov    ecx,0x62e0c31c
  41e479:	sti    
  41e47a:	ss fwait
  41e47c:	test   al,0x14
  41e47e:	retf   
  41e47f:	fxtract 
  41e481:	in     al,dx
  41e482:	inc    ecx
  41e483:	mov    bh,0x9d
  41e485:	adc    eax,0xe82ac048
  41e48a:	jecxz  0x41e4e5
  41e48c:	xor    BYTE PTR [ecx+0x2fa1a6d4],al
  41e492:	and    DWORD PTR [ebp-0x44],ebp
  41e495:	mov    ah,0x75
  41e497:	addr16 call 0x1eee0af6
  41e49d:	es in  eax,0xc8
  41e4a0:	fchs   
  41e4a2:	scas   al,BYTE PTR es:[edi]
  41e4a3:	dec    esp
  41e4a4:	mov    WORD PTR [edi-0x4],cs
  41e4a7:	call   0x621d:0xc488158
  41e4ae:	inc    ecx
  41e4af:	arpl   WORD PTR [ebp+ebx*2-0xf],bx
  41e4b3:	inc    edx
  41e4b4:	into   
  41e4b5:	add    cl,ch
  41e4b7:	push   eax
  41e4b8:	mov    dl,0xd7
  41e4ba:	dec    edx
  41e4bb:	popf   
  41e4bc:	fld    QWORD PTR ds:0x8cf65cb4
  41e4c2:	das    
  41e4c3:	adc    cl,BYTE PTR [ebx+0x29]
  41e4c6:	jae    0x41e4ed
  41e4c8:	adc    edi,esi
  41e4ca:	lock mul DWORD PTR [esi]
  41e4cd:	lods   al,BYTE PTR ds:[esi]
  41e4ce:	adc    al,0x4d
  41e4d0:	sbb    eax,DWORD PTR [ecx+0x7c65db3c]
  41e4d6:	cwde   
  41e4d7:	jmp    0x133996b3
  41e4dc:	fwait
  41e4dd:	shr    DWORD PTR [ebp+0x39b42fbf],1
  41e4e3:	mov    esi,esp
  41e4e5:	sti    
  41e4e6:	pop    edi
  41e4e7:	add    eax,0xfd857db4
  41e4ec:	pop    ebx
  41e4ed:	pop    ebp
  41e4ee:	lock adc al,0xa9
  41e4f1:	outs   dx,BYTE PTR ds:[esi]
  41e4f2:	sub    al,0x73
  41e4f4:	jmp    0xa59:0x4b04e5c4
  41e4fb:	ret    0x1e1d
  41e4fe:	jns    0x41e4fa
  41e500:	imul   edx,DWORD PTR [eax-0x5418071a],0xffffffce
  41e507:	or     dl,BYTE PTR [esi+0x525099da]
  41e50d:	xlat   BYTE PTR ds:[ebx]
  41e50e:	xor    al,0xce
  41e510:	dec    esi
  41e511:	test   BYTE PTR [ecx],dh
  41e513:	add    DWORD PTR [esi],edi
  41e515:	xor    al,0xfe
  41e517:	mov    ah,0x30
  41e519:	xchg   ecx,eax
  41e51a:	pop    esp
  41e51b:	jecxz  0x41e507
  41e51d:	retf   
  41e51e:	fsub   DWORD PTR [ebx+0x46]
  41e521:	dec    edi
  41e522:	leave  
  41e523:	mov    BYTE PTR [ecx],0x30
  41e526:	les    edi,FWORD PTR [ebx]
  41e528:	in     eax,dx
  41e529:	les    esp,FWORD PTR [esi+eiz*4+0x3426275d]
  41e530:	in     al,dx
  41e531:	loop   0x41e57c
  41e533:	pop    ds
  41e534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e535:	sub    edi,DWORD PTR [ebp-0x65c71519]
  41e53b:	mov    WORD PTR [ebx-0x5d],ds
  41e53e:	test   DWORD PTR [edx-0x5f],esp
  41e541:	or     BYTE PTR [ecx+0x50],dl
  41e544:	fimul  DWORD PTR [ebx+0x73e54fbe]
  41e54a:	jle    0x41e500
  41e54c:	repnz test DWORD PTR [ebx+ebx*8-0x1f],edx
  41e551:	loop   0x41e530
  41e553:	lods   al,BYTE PTR ds:[esi]
  41e554:	(bad)  
  41e556:	mov    esi,0xbb260e0
  41e55b:	mov    ds:0x2d9be659,al
  41e560:	mov    DWORD PTR [ebx+0xd],edi
  41e563:	les    ecx,FWORD PTR [esi+0x1daff785]
  41e569:	jg     0x41e56d
  41e56b:	sbb    esi,ecx
  41e56d:	inc    edi
  41e56e:	aas    
  41e56f:	int    0x4a
  41e571:	cdq    
  41e572:	and    ch,al
  41e574:	popa   
  41e575:	dec    esi
  41e576:	cmp    eax,0x7623c4ab
  41e57b:	xor    esi,edi
  41e57d:	xor    bh,dl
  41e57f:	scas   eax,DWORD PTR es:[edi]
  41e580:	pop    esi
  41e581:	dec    ebp
  41e582:	jge    0x41e562
  41e584:	clc    
  41e585:	dec    edx
  41e586:	cwde   
  41e587:	loope  0x41e52e
  41e589:	mov    DWORD PTR [esi+0x35],0xc78938e5
  41e590:	mov    esi,0xec9db393
  41e595:	rcl    DWORD PTR [ebx+0x43],1
  41e598:	xor    BYTE PTR [edx+0x76],0x9b
  41e59c:	(bad)  
  41e59d:	enter  0xcbb0,0xc7
  41e5a1:	dec    edx
  41e5a2:	and    esi,edx
  41e5a4:	dec    ecx
  41e5a5:	xchg   BYTE PTR [edx+0x26],bh
  41e5a8:	fs js  0x41e5e7
  41e5ab:	xor    ch,BYTE PTR [ebx]
  41e5ad:	mov    gs,WORD PTR [ecx]
  41e5af:	arpl   WORD PTR [ebp+0x4a],ax
  41e5b2:	into   
  41e5b3:	es adc esp,ebp
  41e5b6:	ret    
  41e5b7:	mov    ah,0x46
  41e5b9:	sar    BYTE PTR [edx+0x7a5713f5],1
  41e5bf:	mov    ah,0xdc
  41e5c1:	daa    
  41e5c2:	adc    al,0xc
  41e5c4:	add    DWORD PTR [esi-0x52822676],0x65f75be6
  41e5ce:	sub    al,0x8d
  41e5d0:	in     eax,0xe7
  41e5d2:	je     0x41e585
  41e5d4:	dec    esi
  41e5d5:	js     0x41e60e
  41e5d7:	inc    edx
  41e5d8:	into   
  41e5d9:	ins    BYTE PTR es:[edi],dx
  41e5da:	out    0x41,eax
  41e5dc:	out    0x5c,al
  41e5de:	ffreep st(7)
  41e5e0:	or     BYTE PTR [ebx+ebp*8-0x4025c382],al
  41e5e7:	mov    ah,0xa9
  41e5e9:	push   ebp
  41e5ea:	call   0xc5143e0c
  41e5ef:	inc    esp
  41e5f0:	(bad)  
  41e5f1:	cmp    al,0x5b
  41e5f3:	mov    cl,0x6e
  41e5f5:	push   ebx
  41e5f6:	xchg   edx,eax
  41e5f7:	mov    dl,0x11
  41e5f9:	cdq    
  41e5fa:	das    
  41e5fb:	xchg   ebx,eax
  41e5fc:	out    dx,al
  41e5fd:	fild   QWORD PTR ds:0x9c2ff99e
  41e603:	in     al,0x29
  41e605:	std    
  41e606:	jnp    0x41e610
  41e608:	xchg   edi,eax
  41e609:	xor    dh,bh
  41e60b:	push   eax
  41e60c:	jb     0x41e637
  41e60e:	dec    edi
  41e60f:	mov    bl,0x35
  41e611:	aaa    
  41e612:	(bad)
  41e615:	cdq    
  41e616:	mov    al,ds:0xd555ee0b
  41e61b:	test   eax,0x4899cc73
  41e620:	add    DWORD PTR [edi],esi
  41e622:	lahf   
  41e623:	pop    edi
  41e624:	add    BYTE PTR [edx-0x25],dl
  41e627:	cmp    BYTE PTR [edi+esi*1],ah
  41e62a:	cmp    eax,0x59a60d50
  41e62f:	or     eax,0xd8de655e
  41e634:	cmp    ebp,DWORD PTR [ebx]
  41e636:	mov    cl,BYTE PTR [ebp-0x2b]
  41e639:	mov    ds:0x10d3affe,al
  41e63e:	es push esp
  41e640:	cmp    bh,BYTE PTR [ebx+eiz*1-0x73]
  41e644:	adc    esi,DWORD PTR [ecx]
  41e646:	xor    ecx,ebx
  41e648:	addr16 dec edi
  41e64a:	(bad)  
  41e64b:	mov    ecx,0x1011054f
  41e650:	mov    es,WORD PTR [eax-0x1c]
  41e653:	repz jg 0x41e614
  41e656:	int3   
  41e657:	mov    dl,0x3c
  41e659:	inc    edi
  41e65a:	outs   dx,BYTE PTR ds:[esi]
  41e65b:	or     bl,cl
  41e65d:	jmp    0xcc4f07b5
  41e662:	imul   esi,edx,0xffffffcc
  41e665:	dec    edx
  41e666:	adc    dl,ah
  41e668:	fcmovbe st,st(4)
  41e66a:	push   ebp
  41e66b:	xchg   edx,eax
  41e66c:	inc    eax
  41e66d:	jge    0x41e690
  41e66f:	pusha  
  41e670:	(bad)  [ebp-0x5a784e70]
  41e676:	sti    
  41e677:	add    bl,dh
  41e679:	sbb    dl,BYTE PTR [ebp-0x2f]
  41e67c:	push   ss
  41e67d:	pop    ds
  41e67e:	dec    edx
  41e67f:	das    
  41e680:	xchg   edx,eax
  41e681:	dec    eax
  41e682:	inc    DWORD PTR [ecx-0x482cfb5c]
  41e688:	enter  0x3898,0x33
  41e68c:	jns    0x41e70d
  41e68e:	jae    0x41e6f2
  41e690:	adc    DWORD PTR [eax+0x3eded12c],esi
  41e696:	test   esi,edi
  41e698:	(bad)  
  41e69a:	push   cs
  41e69b:	mov    al,ds:0xe54871e6
  41e6a0:	clc    
  41e6a1:	push   eax
  41e6a2:	pop    ds
  41e6a3:	jb     0x41e6c4
  41e6a5:	outs   dx,BYTE PTR ds:[esi]
  41e6a6:	leave  
  41e6a7:	in     eax,dx
  41e6a8:	xlat   BYTE PTR ds:[ebx]
  41e6a9:	and    BYTE PTR [ecx],dl
  41e6ab:	inc    esp
  41e6ac:	aad    0xe
  41e6ae:	test   eax,0x1bb8f018
  41e6b3:	popa   
  41e6b4:	and    bl,ah
  41e6b6:	fcom   QWORD PTR [edx+0x73f127d0]
  41e6bc:	xlat   BYTE PTR ds:[ebx]
  41e6bd:	(bad)  
  41e6be:	xor    DWORD PTR [eax-0x7112fbd],esp
  41e6c4:	xchg   edx,eax
  41e6c5:	or     ah,bl
  41e6c7:	sbb    BYTE PTR [eax-0x436524bd],dh
  41e6cd:	leave  
  41e6ce:	sbb    eax,DWORD PTR [esi+0x130d336e]
  41e6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d5:	sbb    eax,0x611a55cd
  41e6da:	fidiv  DWORD PTR [edx]
  41e6dc:	pop    edi
  41e6dd:	mov    ss,WORD PTR ds:0x2a2ac8ad
  41e6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6e4:	xchg   ebp,eax
  41e6e5:	shl    DWORD PTR [eax],0x25
  41e6e8:	or     DWORD PTR [edx+eiz*1-0x427afcdc],esp
  41e6ef:	mov    ebx,DWORD PTR [edx+eiz*2+0x46529a18]
  41e6f6:	sar    BYTE PTR [ebp+0x26],0x0
  41e6fa:	adc    DWORD PTR [edi+esi*1-0x76cfb48b],esp
  41e701:	sub    edx,ebx
  41e703:	xor    DWORD PTR ds:0xad8c5aa2,ebx
  41e709:	imul   esi,DWORD PTR [ebx],0x3b4f11a8
  41e70f:	sti    
  41e710:	push   0x5f
  41e712:	mov    ecx,0xff2d5857
  41e717:	sub    edx,eax
  41e719:	push   eax
  41e71a:	pop    eax
  41e71b:	pusha  
  41e71c:	mov    edi,0x96e86a36
  41e721:	retf   
  41e722:	es dec esi
  41e724:	inc    edx
  41e725:	jmp    0x8d58:0x16a71186
  41e72c:	dec    ebp
  41e72d:	or     DWORD PTR ds:0xab27afda,ecx
  41e733:	jecxz  0x41e76c
  41e735:	add    eax,edi
  41e737:	fstp   QWORD PTR [edi+ecx*2-0x1b]
  41e73b:	push   edx
  41e73c:	sbb    dl,BYTE PTR [bx+di-0x6e]
  41e740:	data16 mov BYTE PTR [ebx-0x57],ah
  41e744:	sub    esp,eax
  41e746:	ficom  DWORD PTR [ebp+edi*4+0x34f9d6c0]
  41e74d:	dec    eax
  41e74e:	jae    0x41e768
  41e750:	test   BYTE PTR [esi],al
  41e752:	repnz mov cl,0x6e
  41e755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e756:	and    BYTE PTR [eax-0x470a535d],ch
  41e75c:	add    DWORD PTR [ecx],0xffffff87
  41e75f:	ins    DWORD PTR es:[edi],dx
  41e760:	lahf   
  41e761:	push   edi
  41e762:	test   BYTE PTR [edi+ebp*8],bh
  41e765:	xchg   esi,eax
  41e766:	adc    eax,0xc6738207
  41e76b:	in     eax,0xdd
  41e76d:	or     al,0x25
  41e76f:	add    BYTE PTR ds:0xb239cadc,0xb8
  41e776:	es mov eax,0xdea28fbd
  41e77c:	sbb    esi,ebx
  41e77e:	mov    eax,ds:0xba9102b2
  41e783:	add    bh,BYTE PTR [edi-0x72]
  41e786:	sub    ch,ah
  41e788:	ret    
  41e789:	lods   eax,DWORD PTR ds:[esi]
  41e78a:	mov    bl,dh
  41e78c:	les    esi,FWORD PTR [edi+0x61]
  41e78f:	hlt    
  41e790:	(bad)  [ebx-0x68]
  41e793:	inc    dl
  41e795:	dec    DWORD PTR [esi+ecx*8+0x73d0b38]
  41e79c:	fcom   QWORD PTR [ecx]
  41e79e:	out    dx,eax
  41e79f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7a0:	inc    edx
  41e7a1:	mov    edx,0xe86aa190
  41e7a6:	pop    ss
  41e7a7:	rcr    BYTE PTR [esp+ecx*1-0x6bab4822],1
  41e7ae:	mov    eax,ds:0x36e8ff47
  41e7b3:	lods   eax,DWORD PTR ds:[esi]
  41e7b4:	push   esi
  41e7b5:	push   esi
  41e7b6:	adc    edx,DWORD PTR [eax+edi*8+0x4b28fcb3]
  41e7bd:	daa    
  41e7be:	test   DWORD PTR [edi-0x1c146539],esi
  41e7c4:	mov    edi,0x9330f050
  41e7c9:	mov    edi,0xb2ab4358
  41e7ce:	rol    BYTE PTR [ecx],1
  41e7d0:	push   esi
  41e7d1:	push   eax
  41e7d2:	push   edx
  41e7d3:	xchg   ecx,eax
  41e7d4:	push   ecx
  41e7d5:	gs pop ds
  41e7d7:	mov    ?,WORD PTR ds:0xc4fc88ea
  41e7dd:	pop    esi
  41e7de:	xchg   edx,eax
  41e7df:	add    BYTE PTR [ebx],bh
  41e7e1:	mov    al,ds:0x61d57a80
  41e7e6:	mov    bl,0xdf
  41e7e8:	adc    BYTE PTR [esi+0x786ec1bd],dl
  41e7ee:	int3   
  41e7ef:	and    bh,BYTE PTR [ecx+edx*1]
  41e7f2:	neg    BYTE PTR ds:0x33bfb8cc
  41e7f8:	pop    esi
  41e7f9:	repz jecxz 0x41e826
  41e7fc:	mov    BYTE PTR [edx+0x14],ah
  41e7ff:	out    0x2d,eax
  41e801:	popf   
  41e802:	ds jae 0x41e7b0
  41e805:	jo     0x41e863
  41e807:	push   es
  41e808:	in     eax,dx
  41e809:	sub    al,0x76
  41e80b:	mov    eax,ds:0x6ccad5b
  41e810:	sar    DWORD PTR [ecx+ebp*4+0x4c],0x6e
  41e815:	pop    ss
  41e816:	fs mov ebp,0xe974693c
  41e81c:	cmp    edi,DWORD PTR [ebp+0x54]
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	lahf   
  41e821:	mov    ch,0xfa
  41e823:	mov    esp,DWORD PTR [edi+0xc77bb37]
  41e829:	js     0x41e843
  41e82b:	inc    esi
  41e82c:	and    al,0x70
  41e82e:	pop    ds
  41e82f:	jge    0x41e7fa
  41e831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e832:	or     DWORD PTR [ecx+0x63147367],esp
  41e838:	retf   0xbc8c
  41e83b:	out    dx,eax
  41e83c:	mov    al,ds:0x8eea1142
  41e841:	scas   eax,DWORD PTR es:[edi]
  41e842:	popf   
  41e843:	and    DWORD PTR [edx+ecx*4],0x40018f01
  41e84a:	test   eax,0x51d13891
  41e84f:	sbb    eax,0xeaa31f9e
  41e854:	mov    edi,0x4e66ccd0
  41e859:	into   
  41e85a:	pop    eax
  41e85b:	sbb    dl,BYTE PTR ds:0x6032d475
  41e861:	add    bl,BYTE PTR [ebx]
  41e863:	iret   
  41e864:	int3   
  41e865:	jecxz  0x41e810
  41e867:	pop    edx
  41e868:	mov    esp,0x739b3ff8
  41e86d:	mov    dl,0xf1
  41e86f:	mov    dl,0x8e
  41e871:	out    0xe1,eax
  41e873:	sbb    edi,esi
  41e875:	pop    edi
  41e876:	and    eax,0xf999b5cb
  41e87b:	fist   WORD PTR [eax+ecx*4-0x54ddf5f3]
  41e882:	addr16 mov eax,0xff00ae8c
  41e888:	aaa    
  41e889:	inc    edi
  41e88a:	pop    ds
  41e88b:	pop    eax
  41e88c:	mov    eax,ds:0x66f2162b
  41e891:	xchg   esi,eax
  41e892:	jae    0x41e86c
  41e894:	aam    0x44
  41e896:	push   ebx
  41e897:	push   es
  41e898:	pop    esi
  41e899:	clc    
  41e89a:	mov    ds:0x7c5ef3e3,al
  41e89f:	or     edx,DWORD PTR [esi]
  41e8a1:	sbb    edi,DWORD PTR ds:0x9a6f8df2
  41e8a7:	aaa    
  41e8a8:	arpl   WORD PTR [ecx+0x42bf2118],bp
  41e8ae:	fwait
  41e8af:	mov    ebp,DWORD PTR [ecx+0x5b]
  41e8b2:	cmp    DWORD PTR [edx+0x451433a8],edx
  41e8b8:	inc    ecx
  41e8b9:	jle    0x41e861
  41e8bb:	mov    ch,0x70
  41e8bd:	jmp    DWORD PTR [eax+0x26]
  41e8c0:	cdq    
  41e8c1:	iret   
  41e8c2:	push   ebx
  41e8c3:	dec    eax
  41e8c4:	and    al,BYTE PTR [ebx+0x66002562]
  41e8ca:	mov    eax,ds:0x42fb1555
  41e8cf:	gs pop ebx
  41e8d1:	out    dx,al
  41e8d2:	jl     0x41e902
  41e8d4:	lea    eax,[ebp-0xa]
  41e8d7:	outs   dx,BYTE PTR ds:[esi]
  41e8d8:	add    eax,0xdce6589a
  41e8dd:	push   cs
  41e8de:	cli    
  41e8df:	daa    
  41e8e0:	dec    esp
  41e8e1:	push   edx
  41e8e2:	imul   ecx,eax,0xbb7c9e2f
  41e8e8:	lahf   
  41e8e9:	dec    ebp
  41e8ea:	in     eax,0xdc
  41e8ec:	add    esp,DWORD PTR [ebp+0x7f88c627]
  41e8f2:	inc    ecx
  41e8f3:	mov    dl,0x6f
  41e8f5:	out    dx,al
  41e8f6:	push   ebx
  41e8f7:	rol    DWORD PTR [edx+eax*2],1
  41e8fa:	xor    DWORD PTR [ebx-0x59],ebp
  41e8fd:	lods   eax,DWORD PTR ds:[esi]
  41e8fe:	in     al,dx
  41e8ff:	sahf   
  41e900:	scas   eax,DWORD PTR es:[edi]
  41e901:	popf   
  41e902:	mov    dl,0x77
  41e904:	add    dl,0xfa
  41e907:	inc    eax
  41e908:	jge    0x41e8ac
  41e90a:	inc    ebp
  41e90b:	fdiv   DWORD PTR [eax-0x4d1da4cc]
  41e911:	or     al,0xa6
  41e913:	xchg   ecx,eax
  41e914:	xchg   BYTE PTR [ebx-0x80],bl
  41e917:	out    dx,eax
  41e918:	retf   0x7131
  41e91b:	jo     0x41e933
  41e91d:	add    dl,bl
  41e91f:	xor    dl,BYTE PTR [ebx+0x514ea107]
  41e925:	test   eax,0x35ac8d0b
  41e92a:	cmc    
  41e92b:	test   BYTE PTR [ebp-0x453b3455],cl
  41e931:	pop    ds
  41e932:	jecxz  0x41e98c
  41e934:	call   0xbf074d9c
  41e939:	and    eax,0x4cfb117
  41e93e:	push   dx
  41e940:	popf   
  41e941:	jmp    DWORD PTR [edx+ebp*4-0x1b4a617f]
  41e948:	jp     0x41e9a0
  41e94a:	cmp    DWORD PTR [ebx],esi
  41e94c:	dec    ebp
  41e94d:	mov    ah,0xb
  41e94f:	bound  edi,QWORD PTR [ecx]
  41e951:	stos   BYTE PTR es:[edi],al
  41e952:	or     edi,DWORD PTR [edi+0x53]
  41e955:	es jmp 0x1f03:0xa0899a3e
  41e95d:	sar    BYTE PTR [ebp+0x66],cl
  41e960:	push   ds
  41e961:	pop    ds
  41e962:	ins    BYTE PTR es:[edi],dx
  41e963:	adc    eax,0x4b3780b
  41e968:	push   edi
  41e969:	ja     0x41e959
  41e96b:	and    DWORD PTR [edx+0x69d06566],edi
  41e971:	mov    ds:0xde9f9b71,eax
  41e976:	lea    ebp,[eax]
  41e978:	mov    ch,BYTE PTR [edx+edi*1+0x47]
  41e97c:	leave  
  41e97d:	adc    al,0x30
  41e97f:	scas   al,BYTE PTR es:[edi]
  41e980:	mov    ds:0x6d013ca7,eax
  41e985:	enter  0x3a4d,0x5
  41e989:	(bad)  
  41e98a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e98c:	mov    dl,0xbe
  41e98e:	nop
  41e98f:	mov    edx,gs
  41e991:	dec    esp
  41e992:	out    dx,eax
  41e993:	fidivr WORD PTR [eax+edx*8+0xd]
  41e997:	and    al,0x8e
  41e999:	sbb    edi,DWORD PTR [esi]
  41e99b:	retf   
  41e99c:	fiadd  WORD PTR ds:0xc19020d3
  41e9a2:	fild   DWORD PTR [eax+0x25]
  41e9a5:	push   edi
  41e9a6:	sub    esi,DWORD PTR [ecx+esi*8-0x45]
  41e9aa:	xchg   ebx,eax
  41e9ab:	lahf   
  41e9ac:	cmp    esp,DWORD PTR [esi+0x7f]
  41e9af:	push   ds
  41e9b0:	std    
  41e9b1:	cld    
  41e9b2:	jecxz  0x41ea11
  41e9b4:	cs lahf 
  41e9b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9b7:	push   es
  41e9b8:	lods   eax,DWORD PTR ds:[esi]
  41e9b9:	cdq    
  41e9ba:	fcomi  st,st(2)
  41e9bc:	add    cl,BYTE PTR [edx+0x1bb4f6fb]
  41e9c2:	pop    ecx
  41e9c3:	mov    cl,0xeb
  41e9c5:	push   eax
  41e9c6:	inc    ecx
  41e9c7:	sub    eax,DWORD PTR ss:[edx+ebp*2+0x65]
  41e9cc:	xor    al,0x23
  41e9ce:	sahf   
  41e9cf:	mov    al,ds:0xfd01675c
  41e9d4:	mov    eax,DWORD PTR [esi+0x6a5625d9]
  41e9da:	xchg   ebx,eax
  41e9db:	(bad)  
  41e9dc:	ror    BYTE PTR [ebx-0xb],1
  41e9df:	in     al,dx
  41e9e0:	or     ecx,DWORD PTR [ebx-0x14]
  41e9e3:	push   ecx
  41e9e4:	fld    QWORD PTR [edi-0x2eb6b81c]
  41e9ea:	es mov ecx,0x210adf18
  41e9f0:	into   
  41e9f1:	push   ss
  41e9f2:	dec    ecx
  41e9f3:	mov    esi,0xc89fec6f
  41e9f8:	out    dx,eax
  41e9f9:	call   0x8967055e
  41e9fe:	repnz cwde 
  41ea00:	es jmp esi
  41ea03:	pop    es
  41ea04:	dec    esi
  41ea05:	ins    DWORD PTR es:[edi],dx
  41ea06:	sub    al,0xd0
  41ea08:	out    0xbd,al
  41ea0a:	scas   al,BYTE PTR es:[edi]
  41ea0b:	jl     0x41ea5a
  41ea0d:	sub    al,0xd8
  41ea0f:	int    0x6a
  41ea11:	jmp    0xb35f23c2
  41ea16:	pop    esp
  41ea17:	into   
  41ea18:	dec    esp
  41ea19:	test   BYTE PTR [ecx],ch
  41ea1b:	push   esi
  41ea1c:	int3   
  41ea1d:	stc    
  41ea1e:	cmp    al,0x93
  41ea20:	mov    ds:0x3a68261b,eax
  41ea25:	pop    edx
  41ea26:	pop    ecx
  41ea27:	adc    al,0xca
  41ea29:	test   DWORD PTR [ecx+0x6f6c7ce6],ebp
  41ea2f:	sub    bl,BYTE PTR gs:[eax-0x55]
  41ea33:	in     eax,dx
  41ea34:	punpcklwd mm4,DWORD PTR [ebx+ebx*1+0x4e]
  41ea39:	mov    ebx,0xe33c3f0c
  41ea3e:	add    edx,esi
  41ea40:	gs mov edx,0xada9eedc
  41ea46:	dec    esi
  41ea47:	sub    eax,0x54f838dc
  41ea4c:	stos   BYTE PTR es:[edi],al
  41ea4d:	jnp    0x41eaca
  41ea4f:	mov    ds:0xa14d8163,eax
  41ea54:	fnstsw WORD PTR [edx]
  41ea56:	inc    edx
  41ea57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea58:	bound  eax,QWORD PTR [edx+0x656405a2]
  41ea5e:	gs cs retf 0xe8ed
  41ea63:	sub    BYTE PTR [edx+0x55],dl
  41ea66:	add    eax,0x966c474
  41ea6b:	or     al,0x98
  41ea6d:	inc    ebx
  41ea6e:	cmp    eax,0x28a9ec7c
  41ea73:	jae    0x41ea1a
  41ea75:	(bad)  
  41ea76:	lods   al,BYTE PTR ds:[esi]
  41ea77:	sahf   
  41ea78:	dec    edx
  41ea79:	adc    al,0x36
  41ea7b:	add    bh,BYTE PTR [ecx-0x33]
  41ea7e:	mov    WORD PTR [ebx+0x4027e414],fs
  41ea84:	aad    0x80
  41ea86:	adc    DWORD PTR [edi],ebp
  41ea88:	push   cs
  41ea89:	or     ah,BYTE PTR [edi+edx*2-0x7db552be]
  41ea90:	lds    eax,FWORD PTR [edi-0x7f]
  41ea93:	dec    ebx
  41ea94:	jb     0x41eab3
  41ea96:	mov    al,ds:0xbb94c825
  41ea9b:	inc    ecx
  41ea9c:	push   edx
  41ea9d:	pusha  
  41ea9e:	adc    DWORD PTR [edi-0x2a],esp
  41eaa1:	out    0x1f,al
  41eaa3:	xor    DWORD PTR cs:[edi],esi
  41eaa6:	ret    
  41eaa7:	xor    bl,BYTE PTR [edi-0x25]
  41eaaa:	dec    ecx
  41eaab:	and    DWORD PTR [edi+0x611a8a7c],0x40
  41eab2:	jmp    0x41ea52
  41eab4:	out    0x22,eax
  41eab6:	call   0xd6c4e2ba
  41eabb:	fs js  0x41ea8f
  41eabe:	retf   0x87d7
  41eac1:	enter  0xf91f,0xad
  41eac5:	inc    edx
  41eac6:	je     0x41ead3
  41eac8:	sbb    DWORD PTR [ebx+0x60],edx
  41eacb:	jmp    0x84763a1d
  41ead0:	(bad)  
  41ead1:	or     DWORD PTR [ebp-0xc8b9a92],esi
  41ead7:	int3   
  41ead8:	and    edi,DWORD PTR [edi+0x2e]
  41eadb:	push   ebp
  41eadc:	js     0x41eaf5
  41eade:	mov    esi,DWORD PTR [eax]
  41eae0:	sbb    ecx,0x53252c91
  41eae6:	cdq    
  41eae7:	jl     0x41ea8f
  41eae9:	inc    ebx
  41eaea:	fs dec edi
  41eaec:	outs   dx,BYTE PTR ds:[esi]
  41eaed:	push   esi
  41eaee:	xchg   DWORD PTR [ecx],ebp
  41eaf0:	int    0x7d
  41eaf2:	out    dx,al
  41eaf3:	test   eax,esi
  41eaf5:	mov    al,0xf2
  41eaf7:	inc    ecx
  41eaf8:	mov    DWORD PTR [ebp+0x53cc5c09],0x13b51643
  41eb02:	outs   dx,DWORD PTR ds:[esi]
  41eb03:	shl    DWORD PTR [edi+0x1d],1
  41eb06:	in     eax,dx
  41eb07:	xchg   ebx,eax
  41eb08:	xor    al,0x40
  41eb0a:	jp     0x41eb8b
  41eb0c:	mov    al,0x2e
  41eb0e:	in     al,dx
  41eb0f:	sbb    esi,DWORD PTR [eax*8+0x10a0d471]
  41eb16:	and    BYTE PTR [ecx+0x1f],al
  41eb19:	lea    ebx,[edx+0x62]
  41eb1c:	fwait
  41eb1d:	(bad)  
  41eb1e:	push   edi
  41eb1f:	out    0x67,eax
  41eb21:	dec    eax
  41eb22:	in     eax,dx
  41eb23:	cmp    BYTE PTR [ecx-0x22],al
  41eb26:	mov    ch,0xbf
  41eb28:	pop    ebp
  41eb29:	dec    esi
  41eb2a:	dec    ecx
  41eb2b:	retf   0xc74e
  41eb2e:	(bad)  
  41eb2f:	int    0x31
  41eb31:	mov    edx,0x72b4f0f8
  41eb36:	out    0x26,eax
  41eb38:	cdq    
  41eb39:	(bad)  
  41eb3b:	int    0x1a
  41eb3d:	mov    edi,0xb92d112f
  41eb42:	sub    DWORD PTR [esi-0x51],ebx
  41eb45:	(bad)  
  41eb46:	ja     0x41eb75
  41eb48:	dec    edi
  41eb49:	add    al,0x33
  41eb4b:	cld    
  41eb4c:	mov    dl,0x16
  41eb4e:	outs   dx,DWORD PTR ds:[esi]
  41eb4f:	pop    ds
  41eb50:	add    eax,0xea7ea309
  41eb55:	fstp   TBYTE PTR [esi+0x64d951ba]
  41eb5b:	add    DWORD PTR [eax-0x75],eax
  41eb5e:	(bad)  
  41eb5f:	xchg   ebx,eax
  41eb60:	js     0x41eb81
  41eb62:	nop
  41eb63:	neg    esi
  41eb65:	push   0xffffff80
  41eb67:	push   cs
  41eb68:	clc    
  41eb69:	dec    esp
  41eb6a:	sahf   
  41eb6b:	ds iret 
  41eb6d:	(bad)  
  41eb6e:	jmp    0x1d056391
  41eb73:	out    0x20,al
  41eb75:	inc    edi
  41eb76:	adc    BYTE PTR ds:0x8b08e9d8,ch
  41eb7c:	(bad)  [ebp-0x11065c5e]
  41eb82:	mov    esi,0x14bf8d1
  41eb87:	es push es
  41eb89:	loope  0x41eb84
  41eb8b:	int    0xaa
  41eb8d:	cmp    BYTE PTR [edi+0x4efd8d9d],0xb7
  41eb94:	dec    ebp
  41eb95:	enter  0x5c13,0x89
  41eb99:	push   ebp
  41eb9a:	jl     0x41eb84
  41eb9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb9d:	mov    ah,0xf7
  41eb9f:	or     esi,DWORD PTR [esi]
  41eba1:	and    al,0x4
  41eba3:	add    al,0x10
  41eba5:	pop    edi
  41eba6:	sbb    eax,0xeaba78da
  41ebab:	xchg   BYTE PTR [ecx-0x736d0566],ch
  41ebb1:	inc    esp
  41ebb2:	(bad)  
  41ebb3:	test   eax,0xd7a4d86
  41ebb8:	inc    ebx
  41ebb9:	adc    eax,0x29e852b6
  41ebbe:	pushf  
  41ebbf:	adc    al,0xf2
  41ebc1:	pop    esp
  41ebc2:	add    eax,edx
  41ebc4:	in     eax,0x86
  41ebc6:	mov    ah,0xd
  41ebc8:	ja     0x41ec0f
  41ebca:	retf   0x93d
  41ebcd:	gs retf 0x10d4
  41ebd1:	enter  0xdcbd,0x3c
  41ebd5:	scas   al,BYTE PTR es:[edi]
  41ebd6:	in     eax,dx
  41ebd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebd8:	imul   eax,DWORD PTR [ecx-0x551cd7a6],0x7b
  41ebdf:	mov    ah,BYTE PTR [edx]
  41ebe1:	scas   al,BYTE PTR es:[edi]
  41ebe2:	arpl   WORD PTR [ebx],si
  41ebe4:	aad    0x4a
  41ebe6:	data16 cli 
  41ebe8:	xchg   ah,dh
  41ebea:	shr    DWORD PTR [ecx+edx*1+0x8a1c049],cl
  41ebf1:	fwait
  41ebf2:	call   0xadb780cc
  41ebf7:	rcr    BYTE PTR [ebp-0x66e709df],0xb5
  41ebfe:	pop    ecx
  41ebff:	loopne 0x41ec3a
  41ec01:	sbb    ebx,DWORD PTR [eax-0x33]
  41ec04:	adc    DWORD PTR [ebx-0x36a5a95c],0x4702ce94
  41ec0e:	lea    ebp,[edi+ebp*4-0x40]
  41ec12:	or     ebp,ebx
  41ec14:	cdq    
  41ec15:	add    al,0xc2
  41ec17:	out    0x8f,eax
  41ec19:	inc    ebx
  41ec1a:	dec    edi
  41ec1b:	mov    ?,WORD PTR [eax+0x18]
  41ec1e:	test   BYTE PTR [eax+0x4],ah
  41ec21:	and    al,0x40
  41ec23:	and    edx,DWORD PTR [esi-0x3b]
  41ec26:	mov    ebx,0xe09a163c
  41ec2b:	mov    al,0xaa
  41ec2d:	ins    DWORD PTR es:[edi],dx
  41ec2e:	pop    ebp
  41ec2f:	sbb    ebx,ebp
  41ec31:	xor    al,0x29
  41ec33:	sub    BYTE PTR [edx+0x1363c2fc],0xec
  41ec3a:	push   esp
  41ec3b:	(bad)  
  41ec3c:	cmp    ebp,0xffffffbf
  41ec3f:	lods   eax,DWORD PTR ds:[esi]
  41ec40:	mov    ebp,cs
  41ec42:	cmc    
  41ec43:	push   es
  41ec44:	nop
  41ec45:	or     DWORD PTR [esi-0x6c],ebx
  41ec48:	fbld   TBYTE PTR [edi]
  41ec4a:	mov    eax,es:0xd5247f5e
  41ec50:	xor    edi,ecx
  41ec52:	dec    esp
  41ec53:	and    esp,ecx
  41ec55:	ret    0x45f2
  41ec58:	sbb    ah,ah
  41ec5a:	xchg   ebp,eax
  41ec5b:	mov    bh,0xa7
  41ec5d:	mov    ds:0xcdf36e87,eax
  41ec62:	mov    cl,0x2f
  41ec64:	out    0xdf,eax
  41ec66:	neg    DWORD PTR [ebx-0x149ea895]
  41ec6c:	(bad)  
  41ec6d:	sbb    al,0xc7
  41ec6f:	sub    ebp,DWORD PTR [edx+0x66]
  41ec72:	or     ebp,0x969293c5
  41ec78:	fist   DWORD PTR [esi-0x28d36a6]
  41ec7e:	sub    DWORD PTR [ebx-0x6c],ecx
  41ec81:	les    ebp,FWORD PTR [eax+edi*8]
  41ec84:	outs   dx,DWORD PTR ds:[esi]
  41ec85:	pop    es
  41ec86:	data16 xlat BYTE PTR ds:[ebx]
  41ec88:	in     al,dx
  41ec89:	pop    ds
  41ec8a:	ror    edi,1
  41ec8c:	das    
  41ec8d:	jge    0x41ece6
  41ec8f:	jle    0x41ecf8
  41ec91:	out    dx,al
  41ec92:	xchg   ebx,eax
  41ec93:	test   BYTE PTR [edx+0xc87c633],ch
  41ec99:	outs   dx,DWORD PTR ds:[esi]
  41ec9a:	lods   eax,DWORD PTR ds:[esi]
  41ec9b:	in     eax,0xfb
  41ec9d:	je     0x41ec60
  41ec9f:	pmulhw mm4,QWORD PTR [edx+0xa776f9c]
  41eca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca7:	mov    al,ds:0xc1d1e601
  41ecac:	in     al,0xf0
  41ecae:	adc    BYTE PTR [ecx-0x311c3f03],cl
  41ecb4:	pop    eax
  41ecb5:	mov    esp,0x23404da9
  41ecba:	mov    esi,0xb6627512
  41ecbf:	pop    ebx
  41ecc0:	jmp    0x24c940d
  41ecc5:	test   DWORD PTR [edi],ebp
  41ecc7:	out    dx,eax
  41ecc8:	(bad)  
  41ecc9:	jle    0x41ed03
  41eccb:	mul    BYTE PTR [ebp-0x60]
  41ecce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eccf:	dec    edx
  41ecd0:	(bad)  
  41ecd1:	test   BYTE PTR [ebx+0x3593cb5a],0x72
  41ecd8:	lods   al,BYTE PTR ds:[esi]
  41ecd9:	mov    al,0x41
  41ecdb:	scas   al,BYTE PTR es:[edi]
  41ecdc:	jecxz  0x41eca7
  41ecde:	hlt    
  41ecdf:	mov    dh,0x52
  41ece1:	jecxz  0x41ecf1
  41ece3:	out    0x79,eax
  41ece5:	fcmovne st,st(0)
  41ece7:	mov    ds:0xeeffb017,eax
  41ecec:	mov    es,WORD PTR [edx]
  41ecee:	arpl   WORD PTR [edi-0x75],cx
  41ecf1:	push   0x2e
  41ecf3:	fdivr  QWORD PTR [ecx+ebx*1]
  41ecf6:	out    dx,eax
  41ecf7:	jmp    0x41ecb6
  41ecf9:	xchg   ebx,eax
  41ecfa:	pop    ebp
  41ecfb:	cmp    DWORD PTR [edx-0x58249dc],esi
  41ed01:	adc    dl,BYTE PTR [ebx-0x34]
  41ed04:	mov    ah,0x11
  41ed06:	adc    DWORD PTR [edi-0x43d380c5],0x182ed57f
  41ed10:	sub    al,0xf7
  41ed12:	daa    
  41ed13:	mov    BYTE PTR [ebx-0x52],0x3
  41ed17:	jmp    0x803e:0xe97e312c
  41ed1e:	add    ecx,DWORD PTR [ebx]
  41ed20:	in     al,dx
  41ed21:	mov    ss,WORD PTR [eax-0x2d259a6c]
  41ed27:	dec    ecx
  41ed28:	loope  0x41ecb5
  41ed2a:	mov    esp,0xea3346a4
  41ed2f:	into   
  41ed30:	inc    edx
  41ed31:	add    bh,BYTE PTR [edx]
  41ed33:	rol    al,0x30
  41ed36:	in     eax,dx
  41ed37:	cmovle edx,DWORD PTR [ebx-0x35]
  41ed3b:	int    0x90
  41ed3d:	mov    esp,0xe4a2774a
  41ed42:	(bad)  
  41ed43:	fsub   st,st(0)
  41ed45:	cli    
  41ed46:	cmp    al,0xb7
  41ed48:	sahf   
  41ed49:	mov    ds:0xcfec84ae,al
  41ed4e:	xor    al,0xb0
  41ed50:	and    al,0x78
  41ed52:	fiadd  DWORD PTR [edi+ebx*1]
  41ed55:	rol    DWORD PTR ds:0xe6711ded,1
  41ed5b:	or     bh,BYTE PTR ds:0xfd351153
  41ed61:	add    al,al
  41ed63:	xor    al,BYTE PTR [esi]
  41ed65:	push   ss
  41ed66:	fisub  DWORD PTR [edi]
  41ed68:	add    bh,cl
  41ed6a:	fcom   QWORD PTR [bp+si-0x58]
  41ed6e:	mov    edi,0xb674c888
  41ed73:	adc    ah,dh
  41ed75:	jo     0x41ed6d
  41ed77:	or     al,0x8f
  41ed79:	pop    DWORD PTR [ebx+ebp*4+0xd8fc3db]
  41ed80:	mov    esi,0xccbe22a
  41ed85:	xor    al,BYTE PTR [edx-0xc]
  41ed88:	sbb    edx,DWORD PTR [eax-0x58]
  41ed8b:	inc    ecx
  41ed8c:	sbb    BYTE PTR [edi],cl
  41ed8e:	adc    al,0x61
  41ed90:	xor    DWORD PTR [eax+0x7b],edx
  41ed93:	adc    al,0xb7
  41ed95:	inc    ebp
  41ed96:	xor    esp,DWORD PTR [eax+0x75]
  41ed99:	cmp    eax,0xd81a7989
  41ed9e:	neg    DWORD PTR [ebp+0xa4ead59]
  41eda4:	std    
  41eda5:	mov    eax,0xbd472e95
  41edaa:	push   eax
  41edab:	xlat   BYTE PTR ds:[ebx]
  41edac:	(bad)  
  41edad:	clc    
  41edae:	adc    eax,0x530d7d52
  41edb3:	(bad)  
  41edb4:	push   cs
  41edb5:	sbb    ebx,edx
  41edb7:	lahf   
  41edb8:	mov    BYTE PTR [esi-0x1316558f],dh
  41edbe:	out    0xbd,eax
  41edc0:	inc    ecx
  41edc1:	adc    eax,0x9ae195ee
  41edc6:	dec    eax
  41edc7:	leave  
  41edc8:	fist   DWORD PTR [edi-0x80]
  41edcb:	pop    esp
  41edcc:	shl    BYTE PTR [edi+0x31436b6f],cl
  41edd2:	sub    BYTE PTR [esi-0x35],bh
  41edd5:	loop   0x41edb7
  41edd7:	(bad)  
  41edd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edd9:	mov    edx,0xfede5c45
  41edde:	cld    
  41eddf:	out    0x71,al
  41ede1:	dec    edi
  41ede2:	mov    al,ds:0x2a55dde3
  41ede7:	push   eax
  41ede8:	xor    eax,DWORD PTR [esi-0x186d6d65]
  41edee:	lea    esp,[ebx+edi*1-0x19]
  41edf2:	ror    DWORD PTR [edx+0x54],cl
  41edf5:	cmp    DWORD PTR [eax],edx
  41edf7:	call   0x6495:0xa209edec
  41edfe:	cmp    ebx,DWORD PTR [edx-0x25]
  41ee01:	mov    eax,0xd1ab2bea
  41ee06:	retf   0x906c
  41ee09:	xor    cl,cl
  41ee0b:	pop    eax
  41ee0c:	pop    es
  41ee0d:	and    DWORD PTR [ebx+0xce83552],0x7e79e93f
  41ee17:	aas    
  41ee18:	adc    BYTE PTR [ebx-0x65],0x50
  41ee1c:	or     eax,0xdfd6be92
  41ee21:	inc    ebp
  41ee22:	mov    BYTE PTR ds:0x83637d43,bl
  41ee28:	arpl   WORD PTR [edi],di
  41ee2a:	scas   al,BYTE PTR es:[edi]
  41ee2b:	fist   DWORD PTR [esi+0x1]
  41ee2e:	adc    dl,al
  41ee30:	add    DWORD PTR [esi-0x80],0x4d3d4e17
  41ee37:	inc    esp
  41ee38:	or     BYTE PTR [ebx],0x2c
  41ee3b:	add    al,0xcf
  41ee3d:	dec    edi
  41ee3e:	test   DWORD PTR [ebp+0x36b15724],edi
  41ee44:	cwde   
  41ee45:	cmp    dl,BYTE PTR [edi+ecx*1+0x14]
  41ee49:	mov    ch,0x1a
  41ee4b:	and    DWORD PTR [ecx],esp
  41ee4d:	jb     0x41ee00
  41ee4f:	std    
  41ee50:	or     DWORD PTR [esi-0x49],0x3a
  41ee54:	mov    DWORD PTR [esi-0x70],edi
  41ee57:	pushf  
  41ee58:	inc    esi
  41ee59:	xchg   dl,bl
  41ee5b:	pop    ds
  41ee5c:	dec    ebp
  41ee5d:	dec    edi
  41ee5e:	and    DWORD PTR [ebx*8-0x8b2e791],edx
  41ee65:	dec    ebx
  41ee66:	retf   0x67f1
  41ee69:	pusha  
  41ee6a:	(bad)  
  41ee6b:	loop   0x41ee41
  41ee6d:	xchg   edi,eax
  41ee6e:	push   edi
  41ee6f:	call   0x2eed9e22
  41ee74:	int    0xc6
  41ee76:	sti    
  41ee77:	pop    edx
  41ee78:	push   ss
  41ee79:	jmp    0x41edfc
  41ee7b:	inc    ebx
  41ee7c:	aam    0xf5
  41ee7e:	jmp    0x41eeda
  41ee80:	aaa    
  41ee81:	cmp    edx,DWORD PTR ds:0x8e68c7da
  41ee87:	adc    ecx,DWORD PTR [eax+ebx*1]
  41ee8a:	mov    ebp,0x97d67087
  41ee8f:	rcl    eax,0xa2
  41ee92:	pop    es
  41ee93:	std    
  41ee94:	xor    esi,ecx
  41ee96:	sahf   
  41ee97:	ror    bh,cl
  41ee99:	call   0xb27b4da
  41ee9e:	adc    bl,BYTE PTR [esi+0x2ba869e1]
  41eea4:	sub    esp,eax
  41eea6:	and    ebx,esp
  41eea8:	jnp    0x41ee3c
  41eeaa:	outs   dx,BYTE PTR ds:[esi]
  41eeab:	bound  ecx,QWORD PTR [ecx+eax*8+0x3b095c8a]
  41eeb2:	jb     0x41ee43
  41eeb4:	popf   
  41eeb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb6:	call   DWORD PTR [edx-0x58d538cd]
  41eebc:	mov    bl,0xd7
  41eebe:	and    dh,bl
  41eec0:	mov    ah,0x1b
  41eec2:	push   eax
  41eec3:	add    eax,0x78bb086e
  41eec8:	cmp    dl,BYTE PTR [eax+0x51]
  41eecb:	and    al,0x75
  41eecd:	adc    BYTE PTR [ebp-0x51],ch
  41eed0:	mov    esi,0xec295826
  41eed5:	mov    bl,0xa4
  41eed7:	stos   DWORD PTR es:[edi],eax
  41eed8:	lock (bad) 
  41eeda:	xor    DWORD PTR [edi],eax
  41eedc:	call   0x34542552
  41eee1:	or     bh,BYTE PTR [edi-0x6e9a0821]
  41eee7:	cmp    eax,0x10742c8e
  41eeec:	mov    dl,0x9f
  41eeee:	cli    
  41eeef:	adc    DWORD PTR [ebx-0x35],edx
  41eef2:	dec    eax
  41eef3:	popf   
  41eef4:	jl     0x41ef54
  41eef6:	mov    dh,0x53
  41eef8:	adc    al,0xd
  41eefa:	push   esp
  41eefb:	mov    bl,0x80
  41eefd:	stos   DWORD PTR es:[edi],eax
  41eefe:	push   ebp
  41eeff:	inc    edi
  41ef00:	mov    edx,0x3ba055d9
  41ef05:	jbe    0x41ef2c
  41ef07:	sub    eax,DWORD PTR ds:[ebx-0x1e]
  41ef0b:	sub    ecx,edi
  41ef0d:	popf   
  41ef0e:	mov    bh,0xb5
  41ef10:	div    DWORD PTR [ebp+0x36]
  41ef13:	stos   DWORD PTR es:[edi],eax
  41ef14:	je     0x41eef9
  41ef16:	adc    DWORD PTR [ebx],edx
  41ef18:	xchg   edx,eax
  41ef19:	popf   
  41ef1a:	retf   0x3115
  41ef1d:	add    eax,0x7a6d57b1
  41ef22:	ficomp DWORD PTR [esi-0x2f]
  41ef25:	jecxz  0x41eec1
  41ef27:	and    BYTE PTR [edx],dh
  41ef29:	cmp    al,BYTE PTR [ebp+0x3c]
  41ef2c:	rol    BYTE PTR [edx+0x35],cl
  41ef2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef30:	popa   
  41ef31:	jl     0x41ef8a
  41ef33:	or     DWORD PTR [ebp+0x47529f57],ebp
  41ef39:	sahf   
  41ef3a:	jo     0x8a41d255
  41ef40:	cmp    bl,BYTE PTR [eax]
  41ef42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef43:	inc    ebx
  41ef44:	lods   eax,DWORD PTR ds:[esi]
  41ef45:	fisubr DWORD PTR [edi]
  41ef47:	xlat   BYTE PTR ds:[ebx]
  41ef48:	ret    
  41ef49:	loope  0x41eee9
  41ef4b:	fdiv   QWORD PTR [edi-0x68]
  41ef4e:	shl    BYTE PTR [edi],cl
  41ef50:	stos   BYTE PTR es:[edi],al
  41ef51:	mov    ah,0x8b
  41ef53:	ins    BYTE PTR es:[edi],dx
  41ef54:	mov    WORD PTR [ebp+0x6],es
  41ef57:	dec    ebx
  41ef58:	and    BYTE PTR [esp+edi*8],bh
  41ef5b:	test   DWORD PTR [ebp-0x7394d28c],ebp
  41ef61:	call   0xa5394e15
  41ef66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef67:	shr    DWORD PTR [esi-0x17],1
  41ef6a:	aaa    
  41ef6b:	adc    BYTE PTR [eax-0x18],0x24
  41ef6f:	mov    ds:0x8e689932,eax
  41ef74:	clc    
  41ef75:	and    al,0x18
  41ef77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef78:	repz jne 0x41efc1
  41ef7b:	aad    0xec
  41ef7d:	adc    edx,DWORD PTR [edi+0x4c]
  41ef80:	js     0x41ef91
  41ef82:	mov    bl,0x67
  41ef84:	repnz mov esi,0xffc6b571
  41ef8a:	mov    esp,0xfd1a206c
  41ef8f:	iret   
  41ef90:	push   cs
  41ef91:	xor    al,0x62
  41ef93:	inc    ecx
  41ef94:	jbe    0x41ef2a
  41ef96:	jns    0x41ef19
  41ef98:	popf   
  41ef99:	dec    esp
  41ef9a:	ins    BYTE PTR es:[edi],dx
  41ef9b:	fwait
  41ef9c:	ret    
  41ef9d:	mov    al,0xb5
  41ef9f:	ins    DWORD PTR es:[edi],dx
  41efa0:	cmp    DWORD PTR [esi],ebx
  41efa2:	pusha  
  41efa3:	inc    ebp
  41efa4:	int3   
  41efa5:	test   al,0x51
  41efa7:	add    al,0xe4
  41efa9:	in     al,dx
  41efaa:	fldenv es:[ebx]
  41efad:	cli    
  41efae:	repnz add eax,0x587d4a04
  41efb4:	das    
  41efb5:	add    eax,0x52a52a56
  41efba:	jg     0x41ef96
  41efbc:	(bad)  
  41efbd:	and    dl,BYTE PTR [edi]
  41efbf:	(bad)  
  41efc1:	push   ecx
  41efc2:	out    dx,al
  41efc3:	xchg   edx,eax
  41efc4:	sbb    DWORD PTR [eax],ecx
  41efc6:	mov    DWORD PTR [eax+0x0],ebp
  41efc9:	les    edi,FWORD PTR [ecx]
  41efcb:	dec    esp
  41efcc:	adc    eax,DWORD PTR [ecx+0x51]
  41efcf:	test   DWORD PTR [edi-0x41],ebp
  41efd2:	mov    esp,0xe92f0ce9
  41efd7:	addr16 or ah,ch
  41efda:	push   ds
  41efdb:	fcom   QWORD PTR [esi]
  41efdd:	loop   0x41efee
  41efdf:	adc    dh,BYTE PTR [ebp-0x43ec17db]
  41efe5:	mov    al,0x53
  41efe7:	and    edi,DWORD PTR [ebp-0x44]
  41efea:	cmp    bh,bh
  41efec:	dec    esp
  41efed:	pop    eax
  41efee:	leave  
  41efef:	dec    edi
  41eff0:	lock data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eff3:	add    eax,0x750d1a35
  41eff8:	mov    dl,0xfa
  41effa:	pop    eax
  41effb:	leave  
  41effc:	popf   
  41effd:	mov    dh,0xd2
  41efff:	mov    esp,0x6ba11ee4
  41f004:	out    0x56,al
  41f006:	dec    ecx
  41f007:	icebp  
  41f008:	jle    0x41f053
  41f00a:	pop    esi
  41f00b:	call   0xe825:0xd0f7ee4f
  41f012:	ins    DWORD PTR es:[edi],dx
  41f013:	pushf  
  41f014:	sbb    eax,0x2f10faeb
  41f019:	push   es
  41f01a:	pop    ebp
  41f01b:	push   0x882a3fc2
  41f020:	sub    ecx,DWORD PTR [ebp-0x31]
  41f023:	jl     0x41f048
  41f025:	pop    ss
  41f026:	loope  0x41efc0
  41f028:	scas   eax,DWORD PTR es:[edi]
  41f029:	push   ecx
  41f02a:	sub    eax,0xf775314c
  41f02f:	repz mov esi,0x37bac6d4
  41f035:	xchg   edi,eax
  41f036:	xchg   edx,eax
  41f037:	fisubr WORD PTR [ebx+0x162fb44]
  41f03d:	adc    bl,ah
  41f03f:	jmp    0x5d9a:0x8264a4f9
  41f046:	adc    BYTE PTR [eax],dh
  41f048:	test   DWORD PTR cs:[edx+0x3fa98b82],ebp
  41f04f:	std    
  41f050:	jmp    0xed18676
  41f055:	and    DWORD PTR [edi],ebx
  41f057:	add    DWORD PTR [esi],eax
  41f059:	or     DWORD PTR [esi-0x70e91665],ecx
  41f05f:	and    eax,0x5376f4ca
  41f064:	nop
  41f065:	mov    esi,0x87519c17
  41f06a:	in     al,0x53
  41f06c:	dec    edx
  41f06d:	sbb    eax,0xd1ac4a40
  41f072:	lock push eax
  41f074:	cmp    DWORD PTR [edx+0x129a2155],0x31b5c6b4
  41f07e:	(bad)  
  41f07f:	xor    ch,al
  41f081:	or     DWORD PTR [ecx+eax*2+0x3a],0x9f1716e7
  41f089:	pop    eax
  41f08a:	jno    0x41f042
  41f08c:	inc    esi
  41f08d:	xor    al,0x2d
  41f08f:	push   ebp
  41f090:	cmp    edx,DWORD PTR [ebx-0x9aabdd1]
  41f096:	imul   BYTE PTR [ecx-0x29]
  41f099:	test   al,0x7
  41f09b:	sbb    ebx,DWORD PTR [eax-0x6d]
  41f09e:	jle    0x41f0b2
  41f0a0:	xchg   esp,eax
  41f0a1:	(bad)  
  41f0a2:	pop    edi
  41f0a3:	adc    eax,0xc2ef3f3f
  41f0a8:	out    0xf3,eax
  41f0aa:	call   0xb40c6fa3
  41f0af:	adc    al,0xf4
  41f0b1:	frstpm(287 only) 
  41f0b3:	mov    esp,0x2582767e
  41f0b8:	add    ah,BYTE PTR ds:0x1af187ab
  41f0be:	cld    
  41f0bf:	sub    ah,cl
  41f0c1:	xor    al,0x50
  41f0c3:	sbb    ebx,DWORD PTR [ebp-0x3f]
  41f0c6:	jge    0x41f079
  41f0c8:	lods   al,BYTE PTR ds:[esi]
  41f0ca:	mov    ecx,0xa9575709
  41f0cf:	xor    BYTE PTR [ebx+0x21],0x2a
  41f0d3:	sbb    ch,cl
  41f0d5:	cs fwait
  41f0d7:	sbb    ch,dl
  41f0d9:	dec    ebp
  41f0da:	ja     0x41f070
  41f0dc:	pop    ebp
  41f0dd:	mov    bh,0xfc
  41f0df:	jecxz  0x41f129
  41f0e1:	adc    al,0xbf
  41f0e3:	leave  
  41f0e4:	(bad)  
  41f0e5:	xor    DWORD PTR [eax-0x3e],ebx
  41f0e8:	mov    edi,0x7131bd34
  41f0ed:	mov    al,0x34
  41f0ef:	xor    eax,ebp
  41f0f1:	push   0xffffffc0
  41f0f3:	fprem1 
  41f0f5:	jge    0x41f09c
  41f0f7:	xchg   edi,eax
  41f0f8:	pop    ebp
  41f0f9:	mov    cl,0xb5
  41f0fb:	jo     0x41f09f
  41f0fd:	sbb    al,0x58
  41f0ff:	mov    dh,0x84
  41f101:	jbe    0x41f118
  41f103:	sar    BYTE PTR [ebx+0x156990e0],cl
  41f109:	(bad)  [edi]
  41f10b:	out    0x44,al
  41f10d:	add    ebx,DWORD PTR [esi-0x2ccf8066]
  41f113:	ss push es
  41f115:	outs   dx,DWORD PTR ds:[esi]
  41f116:	pop    edx
  41f117:	fs jo  0x41f15e
  41f11a:	ror    ebp,cl
  41f11c:	pop    ebp
  41f11d:	jae    0x41f130
  41f11f:	mov    dh,0x6
  41f121:	jl     0x41f151
  41f123:	lods   eax,DWORD PTR ds:[esi]
  41f124:	addr16 or al,0x88
  41f127:	sub    al,0x60
  41f129:	sbb    DWORD PTR [ebp-0x23],esp
  41f12c:	xchg   edx,eax
  41f12d:	or     ah,bh
  41f12f:	cdq    
  41f130:	xor    eax,0xf8ae46d2
  41f135:	xchg   edx,eax
  41f136:	add    BYTE PTR [ecx+esi*1+0x80526b6],ch
  41f13d:	sub    ch,ah
  41f13f:	sbb    DWORD PTR ds:0x4489442e,ecx
  41f145:	es daa 
  41f147:	pop    ds
  41f148:	xor    ebx,ecx
  41f14a:	sub    edi,esp
  41f14c:	xor    eax,edi
  41f14e:	xchg   ah,bl
  41f150:	pop    ebx
  41f151:	(bad)  
  41f152:	aam    0x97
  41f154:	pop    ecx
  41f155:	cmp    dh,al
  41f157:	sbb    BYTE PTR [ebp+ebp*4-0x6f479739],al
  41f15e:	int3   
  41f15f:	mov    ds:0x49e99771,al
  41f164:	imul   ecx,DWORD PTR [ecx],0xe5b78962
  41f16a:	loope  0x41f112
  41f16c:	jg     0x41f19d
  41f16e:	push   cs
  41f16f:	in     eax,0x65
  41f171:	push   edi
  41f172:	outs   dx,BYTE PTR ss:[esi]
  41f174:	jmp    0xd1f0:0x88bf5dc9
  41f17b:	or     edi,DWORD PTR [ebx-0x4aaa3302]
  41f181:	mov    ds:0x835f4b58,al
  41f186:	xchg   BYTE PTR ds:0xef433ae4,dl
  41f18c:	pushf  
  41f18d:	jge    0x41f13c
  41f18f:	xchg   edx,eax
  41f190:	call   0x9671:0x3e02f865
  41f197:	inc    ecx
  41f198:	sub    DWORD PTR [esi],0xa72d2844
  41f19e:	mov    eax,ds:0xe20debdb
  41f1a3:	cmc    
  41f1a4:	lock sub al,0xac
  41f1a7:	(bad)  
  41f1a8:	jecxz  0x41f12f
  41f1aa:	mov    ebx,0xfdd2de20
  41f1af:	sbb    ecx,esp
  41f1b1:	sbb    dh,BYTE PTR ds:0x4a7ca9b8
  41f1b7:	loope  0x41f167
  41f1b9:	xchg   edi,eax
  41f1ba:	out    0xc9,al
  41f1bc:	aas    
  41f1bd:	repnz xchg esi,eax
  41f1bf:	(bad)  
  41f1c0:	push   ds
  41f1c1:	cdq    
  41f1c2:	cli    
  41f1c3:	loope  0x41f19c
  41f1c5:	shl    BYTE PTR [ebp-0x70],1
  41f1c8:	xor    BYTE PTR [eax],cl
  41f1ca:	dec    ebp
  41f1cb:	test   BYTE PTR [edi+0x76c771cd],bl
  41f1d1:	ss aad 0x7e
  41f1d4:	sbb    ch,al
  41f1d6:	mov    dh,0xec
  41f1d8:	popa   
  41f1d9:	stos   BYTE PTR es:[edi],al
  41f1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1db:	aaa    
  41f1dc:	test   al,0x3d
  41f1de:	dec    ebp
  41f1df:	loope  0x41f25f
  41f1e1:	xchg   esp,eax
  41f1e2:	daa    
  41f1e3:	repz sahf 
  41f1e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1e6:	into   
  41f1e7:	pop    esi
  41f1e8:	retf   0x54a8
  41f1eb:	xchg   esi,eax
  41f1ec:	jmp    0xd1acf877
  41f1f1:	jb     0x41f20b
  41f1f3:	jmp    0x41f215
  41f1f5:	in     al,dx
  41f1f6:	inc    esi
  41f1f7:	and    ecx,esi
  41f1f9:	xor    BYTE PTR [eax+0x1a],bl
  41f1fc:	mov    dl,0x36
  41f1fe:	imul   edi,DWORD PTR [esi+edi*1],0xffffff8b
  41f202:	adc    BYTE PTR ds:0xe04d059c,ch
  41f208:	imul   eax,DWORD PTR [edi],0x1c
  41f20b:	sub    DWORD PTR [ebx+0x7b3770f2],eax
  41f211:	mov    edi,0xf5802281
  41f216:	and    eax,0x68dd3a96
  41f21b:	inc    edi
  41f21c:	mov    bl,0x8d
  41f21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f21f:	popf   
  41f220:	inc    edx
  41f221:	dec    ah
  41f223:	inc    ebp
  41f224:	pop    ecx
  41f225:	fdiv   DWORD PTR [ecx+0x3b1a04d2]
  41f22b:	in     al,0xd6
  41f22d:	or     BYTE PTR [ebx],ch
  41f22f:	xlat   BYTE PTR ds:[ebx]
  41f230:	aaa    
  41f231:	jmp    0x9f8c:0xef1bf7ed
  41f238:	ret    0x2c87
  41f23b:	xchg   ebx,eax
  41f23c:	push   0x1b
  41f23e:	sbb    ebx,0xffffffba
  41f241:	cmc    
  41f242:	jg     0x41f1ce
  41f244:	or     edi,DWORD PTR ds:0xcc40327c
  41f24a:	(bad)  
  41f24c:	mov    ds:0x4c4eaac9,al
  41f251:	fdiv   DWORD PTR cs:[esi+0x31ecedd9]
  41f258:	pop    ds
  41f259:	out    dx,al
  41f25a:	sub    eax,0x85386355
  41f25f:	into   
  41f260:	(bad)
  41f263:	stos   BYTE PTR es:[edi],al
  41f264:	xchg   esi,eax
  41f265:	and    bl,BYTE PTR [ecx]
  41f267:	cmp    eax,0x8bda116f
  41f26c:	test   al,0xce
  41f26e:	xchg   edi,eax
  41f26f:	adc    BYTE PTR [edi],dl
  41f271:	xor    eax,esp
  41f273:	mov    BYTE PTR [ecx-0x1a],bl
  41f276:	addr16 mov ebp,0xac7e30a4
  41f27c:	mov    WORD PTR [edx],es
  41f27e:	lea    eax,ds:0x12601459
  41f284:	outs   dx,DWORD PTR ds:[esi]
  41f285:	ins    DWORD PTR es:[edi],dx
  41f286:	cmp    BYTE PTR [esi+edi*1],0xd1
  41f28a:	or     dl,cl
  41f28c:	test   DWORD PTR ds:0x7712f000,edx
  41f292:	or     dl,BYTE PTR [edx]
  41f294:	and    eax,0x47dbf10c
  41f299:	inc    edi
  41f29a:	fcmovnbe st,st(1)
  41f29c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f29d:	add    ah,bh
  41f29f:	add    edx,DWORD PTR [ebx]
  41f2a1:	jle    0x41f2f3
  41f2a3:	lock cdq 
  41f2a5:	dec    ecx
  41f2a6:	dec    ebx
  41f2a7:	(bad)  
  41f2a8:	and    eax,0x884a6537
  41f2ad:	sub    BYTE PTR ds:0x867dcf98,dl
  41f2b3:	fwait
  41f2b4:	pop    ebp
  41f2b5:	push   esi
  41f2b6:	test   al,0x4f
  41f2b8:	adc    ah,ch
  41f2ba:	or     ch,BYTE PTR [edi-0x3e70f165]
  41f2c0:	sub    ch,bh
  41f2c2:	mov    esi,0x21bb5eee
  41f2c7:	push   cs
  41f2c8:	fdiv   QWORD PTR [edx]
  41f2ca:	jl     0x41f330
  41f2cc:	fs xchg edi,eax
  41f2ce:	sbb    DWORD PTR [edi+0x3480b7ad],eax
  41f2d4:	mov    eax,DWORD PTR [ebx-0x34]
  41f2d7:	jne    0x41f276
  41f2d9:	mov    bl,0x4a
  41f2db:	push   cs
  41f2dc:	and    eax,0x4c42eb2c
  41f2e1:	inc    esp
  41f2e2:	push   esi
  41f2e3:	dec    ecx
  41f2e4:	adc    al,0x5e
  41f2e6:	sub    esi,DWORD PTR [esi+ecx*1+0x16]
  41f2ea:	mov    al,ds:0xec658852
  41f2ef:	outs   dx,DWORD PTR ds:[esi]
  41f2f0:	and    DWORD PTR [esi],ebx
  41f2f2:	xor    ah,BYTE PTR [ebx]
  41f2f4:	leave  
  41f2f5:	jo     0x41f36d
  41f2f7:	retf   0x8353
  41f2fa:	add    DWORD PTR [eax-0x4e],edx
  41f2fd:	push   ecx
  41f2fe:	dec    esp
  41f2ff:	stc    
  41f300:	push   edx
  41f301:	adc    BYTE PTR [ecx],0xae
  41f304:	mov    ds:0xfa88cbc8,eax
  41f309:	cmc    
  41f30a:	xchg   edx,eax
  41f30b:	xor    BYTE PTR [esi],bh
  41f30d:	loop   0x41f30e
  41f30f:	mov    edx,0xd76cf772
  41f314:	arpl   WORD PTR [esi-0x57],sp
  41f317:	cwde   
  41f318:	(bad)  
  41f31a:	and    eax,DWORD PTR [ebp+0x69809fc6]
  41f320:	popf   
  41f321:	repnz push 0xffffff81
  41f324:	pop    ebp
  41f325:	pusha  
  41f326:	push   cs
  41f327:	and    al,0xf5
  41f329:	cmp    DWORD PTR [edi],esp
  41f32b:	sbb    BYTE PTR [ebp-0x4604d8cf],dl
  41f331:	pop    edx
  41f332:	add    BYTE PTR [eax+0x7a],ah
  41f335:	mov    esp,0x64584117
  41f33a:	lds    ebx,FWORD PTR [edx+0x765b93ad]
  41f340:	lea    eax,[esi-0x26]
  41f343:	aas    
  41f344:	push   ebp
  41f345:	popf   
  41f346:	jmp    0x532c6293
  41f34b:	fadd   DWORD PTR [eax+0x29ab1acd]
  41f351:	imul   ecx,DWORD PTR [edi-0xb],0x9
  41f355:	add    bh,BYTE PTR [ebx-0x12]
  41f358:	push   es
  41f359:	xor    edx,DWORD PTR [esi+0x7d808533]
  41f35f:	daa    
  41f360:	(bad)  
  41f361:	jbe    0x41f3d6
  41f363:	jg     0x41f383
  41f365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f366:	int    0x41
  41f368:	mov    DWORD PTR [edx+eax*4],ebx
  41f36b:	dec    ebp
  41f36c:	ficomp WORD PTR [esi+0xe6175bb]
  41f372:	lods   al,BYTE PTR ds:[esi]
  41f373:	inc    ebp
  41f374:	xchg   ecx,eax
  41f375:	pop    es
  41f376:	inc    edx
  41f377:	cdq    
  41f378:	mov    ah,0x38
  41f37a:	dec    ebp
  41f37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f37c:	dec    esi
  41f37d:	mov    es,WORD PTR [edi+edx*8-0x11787fb1]
  41f384:	push   edi
  41f385:	mov    es,WORD PTR [eax+0x50]
  41f388:	and    DWORD PTR [esp+esi*2-0x77a7d730],edx
  41f38f:	add    al,0xd9
  41f391:	js     0x41f380
  41f393:	aaa    
  41f394:	xrelease xchg BYTE PTR [edx],al
  41f397:	adc    eax,0x1fceb659
  41f39c:	int3   
  41f39d:	ficom  DWORD PTR [ebp+0x10d25c1c]
  41f3a3:	cs cld 
  41f3a5:	(bad)  
  41f3a6:	jmp    0x27fac603
  41f3ab:	pop    esp
  41f3ac:	jns    0x41f362
  41f3ae:	out    dx,al
  41f3af:	and    edx,edx
  41f3b1:	xchg   ebp,eax
  41f3b2:	shl    DWORD PTR [edx],cl
  41f3b4:	inc    ebx
  41f3b5:	pop    ebx
  41f3b6:	fmul   QWORD PTR [edx-0x5e5e67f]
  41f3bc:	adc    eax,0x3e177176
  41f3c1:	js     0x41f439
  41f3c3:	cmc    
  41f3c4:	fisubr DWORD PTR [esi]
  41f3c6:	jbe    0x41f3ef
  41f3c8:	mov    ebx,0xc5f56757
  41f3cd:	push   eax
  41f3ce:	xchg   edi,eax
  41f3cf:	mov    edi,0x4245747d
  41f3d4:	int    0x1e
  41f3d6:	push   edi
  41f3d7:	fdivr  DWORD PTR [edx-0x4e3b93e6]
  41f3de:	pop    eax
  41f3df:	pop    ebp
  41f3e0:	mov    cl,0xe2
  41f3e2:	mov    ah,0xfb
  41f3e4:	xchg   edi,eax
  41f3e5:	dec    edi
  41f3e6:	fadd   DWORD PTR [edx+0x55]
  41f3e9:	arpl   WORD PTR [edi-0xc852d28],si
  41f3ef:	jmp    0x3d42bc30
  41f3f4:	mov    dl,0x9a
  41f3f6:	fs xor al,0x88
  41f3f9:	dec    esp
  41f3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3fb:	jle    0x41f3e9
  41f3fd:	sbb    ah,ch
  41f3ff:	jbe    0x41f463
  41f401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f402:	mov    ch,0x2b
  41f404:	fidivr DWORD PTR [eax-0x4e769af8]
  41f40a:	xchg   ebp,eax
  41f40b:	inc    esp
  41f40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f40d:	cld    
  41f40e:	(bad)  
  41f40f:	pop    eax
  41f410:	fs lahf 
  41f412:	xor    ah,BYTE PTR [edx+0x6c]
  41f415:	mov    WORD PTR [esi-0x2e],fs
  41f418:	pop    ds
  41f419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f41a:	mov    eax,0x5cd005dc
  41f41f:	adc    BYTE PTR [ecx+0x48],dh
  41f422:	outs   dx,DWORD PTR ds:[esi]
  41f423:	popf   
  41f424:	les    edi,FWORD PTR [eax+0x67]
  41f427:	imul   BYTE PTR [edi-0xc]
  41f42a:	adc    edi,DWORD PTR [edx]
  41f42c:	mov    esp,0x9531c157
  41f431:	popa   
  41f432:	inc    ebp
  41f433:	and    DWORD PTR [esi],0xb332610f
  41f439:	mov    ds:0x8b0907d4,al
  41f43e:	inc    esp
  41f43f:	retf   
  41f440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f441:	int    0xc6
  41f443:	add    eax,0xe8832934
  41f448:	in     eax,0x57
  41f44a:	xchg   edi,eax
  41f44b:	in     al,0x93
  41f44d:	and    ebx,edx
  41f44f:	(bad)  
  41f450:	mov    eax,ds:0xade783ed
  41f455:	out    dx,al
  41f456:	(bad)  
  41f457:	jecxz  0x41f462
  41f459:	iret   
  41f45a:	cmp    al,0xc9
  41f45c:	imul   esp
  41f45e:	lds    eax,FWORD PTR [ebp-0x44]
  41f461:	repnz push 0xffffffe3
  41f464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f465:	mov    dl,0x89
  41f467:	pop    ebx
  41f468:	dec    edx
  41f469:	mov    DWORD PTR [ebx],ebx
  41f46b:	inc    esp
  41f46c:	cld    
  41f46d:	sub    BYTE PTR [ebp-0x7b8a114e],bl
  41f473:	hlt    
  41f474:	and    al,0x45
  41f476:	test   eax,0xc56d53f
  41f47b:	aaa    
  41f47c:	jg     0x41f4ac
  41f47e:	and    esp,edx
  41f480:	sub    BYTE PTR [edi+esi*2],ch
  41f483:	fcmovnu st,st(7)
  41f485:	pop    ebp
  41f486:	ds xchg edi,eax
  41f488:	inc    edx
  41f489:	stos   DWORD PTR es:[edi],eax
  41f48a:	popf   
  41f48b:	pop    ss
  41f48c:	lock je 0x41f432
  41f48f:	jl     0x41f41c
  41f491:	sub    DWORD PTR [ebx],ebx
  41f493:	std    
  41f494:	jle    0x41f439
  41f496:	cli    
  41f497:	bnd jmp 0x6ab7ca5c
  41f49d:	stos   DWORD PTR es:[edi],eax
  41f49e:	pop    ebx
  41f49f:	js     0x41f47e
  41f4a1:	xchg   BYTE PTR [ebx+ecx*8],cl
  41f4a4:	sub    BYTE PTR [edi+ebp*2],dl
  41f4a7:	repz scas eax,DWORD PTR es:[edi]
  41f4a9:	mov    ah,BYTE PTR [ecx+0x56]
  41f4ac:	pop    esi
  41f4ad:	stos   BYTE PTR es:[edi],al
  41f4ae:	enter  0xf279,0x71
  41f4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4b3:	mov    cl,0x59
  41f4b5:	cld    
  41f4b6:	icebp  
  41f4b7:	mov    al,ds:0xa9c876ed
  41f4bc:	mov    ebp,0x3ed05061
  41f4c1:	clflushopt BYTE PTR [ebx-0x44]
  41f4c6:	dec    ebp
  41f4c7:	mov    ah,0x81
  41f4c9:	sar    BYTE PTR [ebx+ebp*1+0x117d6de7],cl
  41f4d0:	xchg   ebx,eax
  41f4d1:	sar    DWORD PTR [esi+0x6c427cd2],0x62
  41f4d8:	cwde   
  41f4d9:	jge    0x41f54a
  41f4db:	and    bh,BYTE PTR [edx+0x143437be]
  41f4e1:	lahf   
  41f4e2:	rcl    BYTE PTR [esp+ebp*2],cl
  41f4e5:	or     ah,BYTE PTR [edx]
  41f4e7:	xor    DWORD PTR [edx-0x46],eax
  41f4ea:	pop    edi
  41f4eb:	push   es
  41f4ec:	sub    DWORD PTR [edi],edi
  41f4ee:	add    BYTE PTR [ebx],bl
  41f4f0:	adc    eax,0x6d27cbb9
  41f4f5:	pushf  
  41f4f6:	pop    ebp
  41f4f7:	pop    edx
  41f4f8:	cmp    BYTE PTR [eax-0x414177a5],ch
  41f4fe:	or     al,0x61
  41f500:	mov    ebx,0x6fc3859
  41f505:	std    
  41f506:	push   ebp
  41f507:	hlt    
  41f508:	sub    dh,BYTE PTR ds:0x680520f7
  41f50e:	mov    edx,0xc78db05b
  41f513:	pop    edx
  41f514:	je     0x41f4ca
  41f516:	bswap  esi
  41f518:	mov    al,0x14
  41f51a:	mov    bh,0xfc
  41f51c:	mov    DWORD PTR [edx-0x44],edx
  41f51f:	add    dh,al
  41f521:	xchg   BYTE PTR [esi+0x6c662206],ah
  41f527:	mov    BYTE PTR [eax+0x23],al
  41f52a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f52b:	aam    0x73
  41f52d:	cmp    dl,0xde
  41f530:	shl    DWORD PTR [eax-0x7f],0x8b
  41f534:	addr16 xor al,0xd3
  41f537:	cdq    
  41f538:	sbb    dh,BYTE PTR [esi]
  41f53a:	rcr    al,1
  41f53c:	in     eax,dx
  41f53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f53e:	imul   ah
  41f540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f541:	das    
  41f542:	dec    ecx
  41f543:	rol    BYTE PTR [edi+0xc],0xd7
  41f547:	xchg   ebx,eax
  41f548:	sub    al,0x55
  41f54a:	call   0x1085e084
  41f54f:	dec    ebx
  41f550:	sbb    al,0x1c
  41f552:	fs sar esp,1
  41f555:	ins    DWORD PTR es:[edi],dx
  41f556:	test   eax,edx
  41f558:	fisttp DWORD PTR [eax+0x3d]
  41f55b:	ss cwde 
  41f55d:	jle    0x41f599
  41f55f:	xor    eax,0x46c4951d
  41f564:	adc    eax,0x7cb1d71b
  41f569:	mov    ah,0x3e
  41f56b:	out    0x4a,al
  41f56d:	ror    eax,cl
  41f56f:	(bad)  
  41f570:	data16 gs jle 0x41f59c
  41f574:	and    cl,BYTE PTR [eax]
  41f576:	adc    BYTE PTR [edx],dh
  41f578:	push   eax
  41f579:	in     eax,0xeb
  41f57b:	mov    dl,0x77
  41f57d:	mov    DWORD PTR [edi],ebx
  41f57f:	sti    
  41f580:	sub    ch,BYTE PTR [ebp-0x2c91581e]
  41f586:	xor    bh,BYTE PTR [edx-0x50aa626e]
  41f58c:	lods   al,BYTE PTR ds:[esi]
  41f58d:	rol    BYTE PTR [ecx+ebp*8+0x260a7243],1
  41f594:	mov    ah,0x14
  41f596:	test   al,0xed
  41f598:	shl    ebp,1
  41f59a:	xchg   esp,eax
  41f59b:	inc    ecx
  41f59c:	mov    edx,0xc550f73f
  41f5a1:	std    
  41f5a2:	ret    0xa4b8
  41f5a5:	stos   BYTE PTR es:[edi],al
  41f5a6:	add    DWORD PTR [edx-0x4b],esp
  41f5a9:	xchg   ecx,eax
  41f5aa:	les    eax,FWORD PTR [edx+0xea9add2]
  41f5b0:	xor    dh,BYTE PTR [esi+0x430fa097]
  41f5b6:	sbb    eax,0x6f13d2d1
  41f5bb:	cmp    DWORD PTR [ecx+0x57],0x4f
  41f5bf:	xchg   DWORD PTR [ebp+0x2e],eax
  41f5c2:	mov    bh,0xa4
  41f5c4:	inc    ebp
  41f5c5:	ja     0x41f58c
  41f5c7:	loope  0x41f5dd
  41f5c9:	aaa    
  41f5ca:	pop    es
  41f5cb:	outs   dx,DWORD PTR ds:[esi]
  41f5cc:	and    BYTE PTR [ecx+0x53],cl
  41f5cf:	and    bh,BYTE PTR [eax+0x6afc090d]
  41f5d5:	jmp    0x41f59a
  41f5d7:	mov    ds:0x48a3f30a,eax
  41f5dc:	sbb    ch,dh
  41f5de:	je     0x41f60c
  41f5e0:	push   ss
  41f5e1:	push   ds
  41f5e2:	pop    edx
  41f5e3:	jbe    0x41f57b
  41f5e5:	(bad)  
  41f5e7:	mov    al,0x4b
  41f5e9:	jbe    0x41f579
  41f5eb:	sbb    ch,BYTE PTR ds:0xd1e5effa
  41f5f1:	ins    DWORD PTR es:[edi],dx
  41f5f2:	xor    al,0xe7
  41f5f4:	mov    ds:0x2b2a8811,eax
  41f5f9:	cs adc eax,0x795d0093
  41f5ff:	shr    DWORD PTR [edi+0x24ab94fc],1
  41f605:	mul    ah
  41f607:	or     ah,BYTE PTR [esi-0x41]
  41f60a:	std    
  41f60b:	aam    0xcd
  41f60d:	jo     0x41f5da
  41f60f:	add    BYTE PTR [eax+0x49a7d19c],0xe2
  41f616:	adc    al,0x1
  41f618:	push   edi
  41f619:	jg     0x41f5d1
  41f61b:	xchg   edi,eax
  41f61c:	push   DWORD PTR [edx+ecx*1+0x6d]
  41f620:	sti    
  41f621:	adc    ebx,DWORD PTR [ecx+edi*8]
  41f624:	enter  0xd1b4,0xca
  41f628:	dec    eax
  41f629:	jp     0x41f5cb
  41f62b:	pushf  
  41f62c:	adc    eax,0x518734f5
  41f631:	adc    esi,DWORD PTR [ebx+0x67]
  41f634:	cmp    ecx,DWORD PTR [ebp+edx*8-0x7d7ecaee]
  41f63b:	dec    eax
  41f63c:	add    esi,DWORD PTR [esp+edx*2+0x24]
  41f640:	jmp    0xd603:0x48a0d250
  41f647:	and    dl,ch
  41f649:	cmp    ebx,DWORD PTR [ebp-0x8]
  41f64c:	loop   0x41f60f
  41f64e:	popf   
  41f64f:	sbb    esp,DWORD PTR [eax+0x5176d78f]
  41f655:	cmp    eax,0xbdf7db3d
  41f65a:	lahf   
  41f65b:	add    ch,BYTE PTR [esp+ecx*1]
  41f65e:	daa    
  41f65f:	imul   edi,DWORD PTR [ebp+0x77ef049e],0x524005b2
  41f669:	jns    0x41f6b1
  41f66b:	mov    dh,0xb9
  41f66d:	(bad)  
  41f66e:	mov    ds:0x736e7f5f,al
  41f673:	xchg   ebp,eax
  41f674:	sub    eax,0x68007d4d
  41f679:	adc    ebx,DWORD PTR [esi-0x3c]
  41f67c:	jmp    0xa3cd34d3
  41f681:	pusha  
  41f682:	pop    ecx
  41f683:	push   edx
  41f684:	repnz dec esi
  41f686:	in     al,dx
  41f687:	xchg   DWORD PTR [edi-0x77],ebx
  41f68a:	jnp    0x41f629
  41f68c:	xchg   ecx,eax
  41f68d:	je     0x41f670
  41f68f:	jecxz  0x41f6ce
  41f691:	arpl   di,cx
  41f693:	push   ebp
  41f694:	push   0x850a2447
  41f699:	(bad)  
  41f69a:	int3   
  41f69b:	jecxz  0x41f6a6
  41f69d:	ja     0x41f6da
  41f69f:	mov    cl,0x77
  41f6a1:	pop    edx
  41f6a2:	push   esp
  41f6a3:	push   es
  41f6a4:	mov    esi,0x59a3bda7
  41f6a9:	mov    al,0xee
  41f6ab:	test   al,0x9
  41f6ad:	pop    ds
  41f6ae:	xlat   BYTE PTR ds:[ebx]
  41f6af:	pop    edx
  41f6b0:	push   edi
  41f6b1:	push   ebp
  41f6b2:	mov    ds:0x800bf74c,eax
  41f6b7:	out    dx,al
  41f6b8:	bsr    ebp,DWORD PTR [ebx+0x78]
  41f6bc:	push   ss
  41f6bd:	in     al,0x28
  41f6bf:	fstp   TBYTE PTR [ebp+0x575c63d8]
  41f6c5:	push   ebx
  41f6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c7:	fsubr  st(5),st
  41f6c9:	stc    
  41f6ca:	dec    edi
  41f6cb:	xchg   ebx,eax
  41f6cc:	ret    
  41f6cd:	lods   eax,DWORD PTR ds:[esi]
  41f6ce:	or     eax,0x5ac6a9f7
  41f6d3:	rol    cl,cl
  41f6d5:	or     DWORD PTR [edi*8+0x43579283],ebp
  41f6dc:	scas   al,BYTE PTR es:[edi]
  41f6dd:	dec    ecx
  41f6de:	ret    0x6120
  41f6e1:	inc    edx
  41f6e2:	jl     0x41f683
  41f6e4:	mov    dl,0x5e
  41f6e6:	or     esp,ecx
  41f6e8:	lock pop ds
  41f6ea:	push   edx
  41f6eb:	jb     0x41f6f1
  41f6ed:	fidivr DWORD PTR [esi-0x56]
  41f6f0:	addr16 add ecx,eax
  41f6f3:	(bad)  
  41f6f4:	outs   dx,BYTE PTR ds:[esi]
  41f6f5:	test   al,0x19
  41f6f7:	mov    dl,0x33
  41f6f9:	dec    esi
  41f6fa:	scas   al,BYTE PTR es:[edi]
  41f6fb:	xchg   esi,eax
  41f6fc:	cmp    ebx,esi
  41f6fe:	rcl    DWORD PTR [esi-0xd],1
  41f701:	push   0xd521d06c
  41f706:	nop
  41f707:	popa   
  41f708:	ss xchg ecx,eax
  41f70a:	hlt    
  41f70b:	addr16 das 
  41f70d:	sub    DWORD PTR [edx+0x5d],eax
  41f710:	std    
  41f711:	sahf   
  41f712:	dec    esi
  41f713:	jle    0x41f6de
  41f715:	sub    esp,DWORD PTR [edx]
  41f717:	lods   al,BYTE PTR ds:[esi]
  41f718:	xor    BYTE PTR [ebp+eiz*4+0x277dfdff],dl
  41f71f:	lahf   
  41f720:	pusha  
  41f721:	xchg   ecx,eax
  41f722:	test   bl,dl
  41f724:	in     eax,0x91
  41f726:	mov    ah,BYTE PTR [edi+0x4]
  41f729:	repnz or BYTE PTR ds:0x2c6e0f2e,0xe4
  41f731:	jno    0x41f6c5
  41f733:	(bad)  
  41f734:	or     DWORD PTR [ebx+0x54],edi
  41f737:	in     eax,0x81
  41f739:	fstp   TBYTE PTR [edi+0x498547b5]
  41f73f:	shl    al,0x52
  41f742:	jae    0x41f6d7
  41f744:	idiv   DWORD PTR [ecx+0x6e9941e6]
  41f74a:	add    al,0x1a
  41f74c:	sbb    ebp,DWORD PTR [eax]
  41f74e:	cmp    eax,0x1171cef8
  41f753:	xchg   edx,eax
  41f754:	nop    DWORD PTR [edx-0x24]
  41f758:	push   esp
  41f759:	mov    dh,0xf0
  41f75b:	mov    eax,0xee388d77
  41f760:	xor    BYTE PTR [ecx],bl
  41f762:	fisttp DWORD PTR [edi]
  41f764:	test   al,0xd4
  41f766:	adc    ecx,DWORD PTR ds:0x70a2234a
  41f76c:	loopne 0x41f736
  41f76e:	leave  
  41f76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f770:	sti    
  41f771:	xor    cl,bl
  41f773:	pop    ss
  41f774:	fnstenv [edx-0x1f]
  41f777:	mov    ebp,0x946c3e02
  41f77c:	xchg   esi,eax
  41f77d:	jge    0x41f7c3
  41f77f:	test   bl,ah
  41f781:	fnstsw WORD PTR [esi+0x3]
  41f784:	pop    ebp
  41f785:	sbb    eax,0x2b50f352
  41f78a:	sub    DWORD PTR [ecx+0x4c5afd4e],eax
  41f790:	cld    
  41f791:	mul    BYTE PTR [ebp+0x161deebf]
  41f797:	or     DWORD PTR [esi],0xe8e15db1
  41f79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f79e:	dec    ebp
  41f79f:	sbb    ebx,DWORD PTR [edx]
  41f7a1:	cmc    
  41f7a2:	and    al,ch
  41f7a4:	pop    esi
  41f7a5:	jp     0x41f7e7
  41f7a7:	jbe    0x41f809
  41f7a9:	cmc    
  41f7aa:	push   ds
  41f7ab:	dec    ebx
  41f7ac:	sub    ch,BYTE PTR [eax-0x7c]
  41f7af:	push   ebx
  41f7b0:	in     eax,dx
  41f7b1:	mov    eax,ds:0x2c023bb
  41f7b6:	inc    edx
  41f7b7:	idiv   BYTE PTR [eax-0x59]
  41f7ba:	sub    eax,0xa7e13a5b
  41f7bf:	push   eax
  41f7c0:	cmp    al,0xb3
  41f7c2:	pop    ebx
  41f7c3:	sti    
  41f7c4:	jns    0x41f759
  41f7c6:	fxch   st(7)
  41f7c8:	clc    
  41f7c9:	fist   DWORD PTR [ebx]
  41f7cb:	outs   dx,BYTE PTR ds:[esi]
  41f7cc:	das    
  41f7cd:	ret    0x2799
  41f7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d1:	sahf   
  41f7d2:	jp     0x41f788
  41f7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7d5:	or     edx,DWORD PTR [ebp+eax*1+0x1d4189ab]
  41f7dc:	mov    al,0xd3
  41f7de:	mov    ebp,0x6f5f8bd7
  41f7e3:	cld    
  41f7e4:	add    eax,0x34ecad19
  41f7e9:	ja     0x41f823
  41f7eb:	xchg   esp,eax
  41f7ec:	lods   al,BYTE PTR ds:[esi]
  41f7ed:	sub    ebp,DWORD PTR [ebp+ecx*2-0x38]
  41f7f1:	stos   DWORD PTR es:[edi],eax
  41f7f2:	and    ecx,0x47
  41f7f5:	and    BYTE PTR [ecx+0x72],0xcc
  41f7f9:	sahf   
  41f7fa:	repz aaa 
  41f7fc:	fdivr  QWORD PTR [eax]
  41f7fe:	pop    es
  41f7ff:	push   esi
  41f800:	popa   
  41f801:	(bad)  
  41f802:	enter  0xacb1,0xfc
  41f806:	test   DWORD PTR [ecx-0xe3ad156],ecx
  41f80c:	and    DWORD PTR [ecx+0x6db83811],edx
  41f812:	sar    bh,cl
  41f814:	cld    
  41f815:	push   esi
  41f816:	dec    edi
  41f817:	jg     0x41f7be
  41f819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f81a:	fisub  DWORD PTR [edi-0x2a]
  41f81d:	jmp    0x269abb8f
  41f822:	pop    edx
  41f823:	push   edi
  41f824:	jnp    0x41f89d
  41f826:	xor    BYTE PTR [esi+0x2059de1b],ah
  41f82c:	aam    0xc9
  41f82e:	call   0x7293:0xd42de6da
  41f835:	xor    al,0xdf
  41f837:	xor    eax,0x949638fa
  41f83c:	movd   mm6,DWORD PTR [esi+0x11]
  41f840:	rol    BYTE PTR [eax-0x29af885c],cl
  41f846:	xor    BYTE PTR [ebp-0x57a5524f],0xdc
  41f84d:	gs hlt 
  41f84f:	lea    ecx,[ebp+ebp*4-0x6fcdb0cc]
  41f856:	enter  0xb939,0x21
  41f85a:	and    eax,0x2c4ffdb5
  41f85f:	xchg   DWORD PTR [eax+0x30],ebp
  41f862:	ret    0xe7de
  41f865:	and    BYTE PTR [ecx],0x79
  41f868:	(bad)  
  41f869:	out    dx,al
  41f86a:	shl    edx,1
  41f86c:	dec    esp
  41f86d:	test   eax,0xaf1693d6
  41f872:	fistp  WORD PTR [ebp+esi*2-0x6738d793]
  41f879:	pop    ebp
  41f87a:	push   cs
  41f87b:	pop    ebp
  41f87c:	xchg   esp,eax
  41f87d:	fld    QWORD PTR [esi+0x71a11316]
  41f883:	jns    0x41f89e
  41f885:	or     eax,0x3fbc92de
  41f88a:	xchg   ebx,eax
  41f88b:	ror    DWORD PTR [eax-0x5b5d0af],0x73
  41f892:	inc    ebp
  41f893:	push   ebx
  41f894:	ret    0x5515
  41f897:	and    BYTE PTR ds:0x9e2a9eb1,dh
  41f89d:	call   0xdbc205f4
  41f8a2:	or     DWORD PTR [ebp-0x6d],ebp
  41f8a5:	lds    eax,FWORD PTR [ecx]
  41f8a7:	pop    ss
  41f8a8:	(bad)  
  41f8a9:	xor    eax,DWORD PTR [ebx+0x1281f1ad]
  41f8af:	retf   
  41f8b0:	clc    
  41f8b1:	mov    esi,0x38ef3d15
  41f8b6:	mov    ebx,0xa3e0b158
  41f8bb:	out    dx,al
  41f8bc:	dec    ebp
  41f8bd:	push   esi
  41f8be:	aad    0x7e
  41f8c0:	rcr    bh,0x91
  41f8c3:	sub    ebp,DWORD PTR [esp+edi*4-0x5bffeb55]
  41f8ca:	imul   edx,DWORD PTR [ebp+0xf],0xc444f3c5
  41f8d1:	lods   al,BYTE PTR ds:[esi]
  41f8d2:	sar    BYTE PTR [eax+0x701f0f0b],cl
  41f8d8:	mov    gs,WORD PTR [eax+0x762f1b4b]
  41f8de:	imul   ecx,DWORD PTR [eax-0x729b47d6],0x62
  41f8e5:	cwde   
  41f8e6:	cli    
  41f8e7:	cs scas al,BYTE PTR es:[edi]
  41f8e9:	cmp    DWORD PTR [ebx+0x56],0xffffffa0
  41f8ed:	sub    al,BYTE PTR [eax+0x1a]
  41f8f0:	pushf  
  41f8f1:	sub    DWORD PTR [eax],0xffffffa3
  41f8f4:	or     esp,ecx
  41f8f6:	std    
  41f8f7:	lahf   
  41f8f8:	sbb    esp,DWORD PTR [esi-0xf92ba6a]
  41f8fe:	in     al,0x90
  41f900:	push   eax
  41f901:	outs   dx,BYTE PTR ds:[esi]
  41f902:	aaa    
  41f903:	xor    bh,al
  41f905:	mov    dl,0x6a
  41f907:	icebp  
  41f908:	js     0x41f983
  41f90a:	push   ebx
  41f90b:	std    
  41f90c:	ror    DWORD PTR [esi+0x7944f293],cl
  41f912:	fsubp  st(0),st
  41f914:	mov    ebp,0xde529510
  41f919:	xchg   esp,eax
  41f91a:	xchg   esp,eax
  41f91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f91c:	rcr    dl,cl
  41f91e:	push   esi
  41f91f:	pop    ebp
  41f920:	jle    0x41f962
  41f922:	jmp    0xee490ab4
  41f927:	inc    edi
  41f928:	in     al,dx
  41f929:	dec    esi
  41f92a:	shl    BYTE PTR [ecx+0x12],1
  41f92d:	pop    ss
  41f92e:	adc    DWORD PTR [ebx],edi
  41f930:	cmp    BYTE PTR [edi],0xd4
  41f933:	int3   
  41f934:	mov    al,0xdb
  41f936:	jp     0x41f973
  41f938:	mov    ebp,0xab1156f1
  41f93d:	and    DWORD PTR [ebp-0x3c],esi
  41f940:	jecxz  0x41f9b3
  41f942:	mov    al,0xb3
  41f944:	lea    esi,[edx]
  41f946:	ret    
  41f947:	push   ss
  41f948:	or     eax,0xd00abf22
  41f94d:	sbb    ebp,ebp
  41f94f:	(bad)  
  41f950:	jp     0x41f914
  41f952:	mov    edx,0x73001fc4
  41f957:	nop
  41f958:	imul   edi,DWORD PTR [ecx],0x66
  41f95b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f95c:	mov    ds:0xe98edd26,al
  41f961:	push   ecx
  41f962:	call   0x3866aaf8
  41f967:	and    DWORD PTR [eax+0x1ef155bf],esi
  41f96d:	jl     0x41f9e4
  41f96f:	sub    DWORD PTR [eax+0x4],esi
  41f972:	mov    esi,0xf6b45fe2
  41f977:	jbe    0x41f9d3
  41f979:	pop    edx
  41f97a:	popa   
  41f97b:	bound  edx,QWORD PTR [ecx+0xef5afb5]
  41f981:	dec    ebx
  41f982:	in     eax,dx
  41f983:	popa   
  41f984:	shl    DWORD PTR [edx-0x65be446d],0x31
  41f98b:	leave  
  41f98c:	add    dl,BYTE PTR [eax]
  41f98e:	mov    bh,dh
  41f990:	sbb    BYTE PTR [ebp-0x4ee1f6ca],bh
  41f996:	mov    esp,cs
  41f998:	pop    eax
  41f999:	into   
  41f99a:	jecxz  0x41f975
  41f99c:	adc    eax,DWORD PTR [edi]
  41f99e:	es lahf 
  41f9a0:	loope  0x41f964
  41f9a2:	(bad)  
  41f9a3:	mov    esp,0x400a86ab
  41f9a8:	popa   
  41f9a9:	mov    DWORD PTR [edi-0x1e],eax
  41f9ac:	or     eax,0x1d274c83
  41f9b1:	push   ecx
  41f9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9b3:	add    ah,0xef
  41f9b6:	mov    ebp,0x24cd9f90
  41f9bb:	cwde   
  41f9bc:	cmp    eax,0xf65f7306
  41f9c1:	pop    ds
  41f9c2:	into   
  41f9c3:	mov    WORD PTR [ebp-0x7be6dbe9],?
  41f9c9:	dec    esp
  41f9ca:	not    BYTE PTR [eax]
  41f9cc:	(bad)  
  41f9cd:	imul   esi,esp,0xffffffac
  41f9d0:	pop    ss
  41f9d1:	push   esi
  41f9d2:	repz cli 
  41f9d4:	test   ch,0x6d
  41f9d7:	pop    ds
  41f9d8:	cmp    cl,BYTE PTR [esi+eiz*4+0x70]
  41f9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9dd:	mov    dl,0x8b
  41f9df:	ja     0x41f9cc
  41f9e1:	xchg   esp,eax
  41f9e2:	pop    ss
  41f9e3:	imul   edi,edx,0xa18ce4f9
  41f9e9:	push   esp
  41f9ea:	pop    es
  41f9eb:	or     edx,eax
  41f9ed:	sbb    dl,BYTE PTR [eax-0x3d]
  41f9f0:	cmp    BYTE PTR [ecx-0x544a4354],0x7f
  41f9f7:	daa    
  41f9f8:	pushf  
  41f9f9:	mov    al,0x72
  41f9fb:	and    edi,DWORD PTR [ecx+eiz*2-0x6dd71c6f]
  41fa02:	jo     0x41f9c7
  41fa04:	ins    DWORD PTR es:[edi],dx
  41fa05:	in     eax,dx
  41fa06:	add    BYTE PTR [edx+0x8],al
  41fa09:	clc    
  41fa0a:	rol    DWORD PTR [edx+esi*2-0x59],1
  41fa0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa0f:	sbb    BYTE PTR [edi+0x9],bl
  41fa12:	mov    edx,eax
  41fa14:	xchg   ebp,eax
  41fa15:	pop    eax
  41fa16:	test   al,0x99
  41fa18:	mov    ebx,0x386acb24
  41fa1d:	stc    
  41fa1e:	mov    ebp,0x71d1ac29
  41fa23:	mov    edx,0xdbdc7ad7
  41fa28:	repnz mov ecx,DWORD PTR [ecx+0x5]
  41fa2c:	xor    esp,DWORD PTR [edi+0x275544d]
  41fa32:	aam    0x8f
  41fa34:	leave  
  41fa35:	adc    bh,ch
  41fa37:	mov    al,BYTE PTR [ecx]
  41fa39:	jo     0x41fa1c
  41fa3b:	in     al,dx
  41fa3c:	cs cdq 
  41fa3e:	mov    eax,ds:0x78f91eb2
  41fa43:	loope  0x41fa1e
  41fa45:	push   ebx
  41fa46:	retf   0x311c
  41fa49:	inc    edi
  41fa4a:	ret    0x46ca
  41fa4d:	out    0x60,eax
  41fa4f:	push   0x510037f
  41fa54:	fwait
  41fa55:	leave  
  41fa56:	or     BYTE PTR ds:0x25f07159,0xb0
  41fa5d:	mov    al,ds:0xadb5c41d
  41fa62:	sub    DWORD PTR [eax-0x3d6662e4],ebx
  41fa68:	shl    BYTE PTR [edx-0x49],1
  41fa6b:	pop    ss
  41fa6c:	pop    esp
  41fa6d:	jmp    0x2355:0xf82dfeed
  41fa74:	pop    edi
  41fa75:	inc    esi
  41fa76:	je     0x41fab8
  41fa78:	in     eax,0x6e
  41fa7a:	xchg   BYTE PTR [ebp*8+0x13d4eeca],ch
  41fa81:	sbb    ecx,ebx
  41fa83:	fdivr  DWORD PTR [eax+0xd]
  41fa86:	mov    dh,0xcd
  41fa88:	push   cs
  41fa89:	adc    al,0x40
  41fa8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa8c:	xchg   ecx,eax
  41fa8d:	push   ecx
  41fa8e:	stc    
  41fa8f:	jmp    FWORD PTR [ecx+0x4213ab07]
  41fa95:	imul   esi,DWORD PTR [esi+0x51],0x85d8b6df
  41fa9c:	add    BYTE PTR ds:0xf1ea9e1e,0x2b
  41faa3:	lds    esi,FWORD PTR [ebx-0x55]
  41faa6:	xor    al,0x5d
  41faa8:	dec    ebx
  41faa9:	mov    DWORD PTR [esi-0x1b],esi
  41faac:	pusha  
  41faad:	jb     0x41fa39
  41faaf:	cmp    cl,BYTE PTR es:[esi+0x5623c293]
  41fab6:	gs or  eax,0xff9afdd4
  41fabc:	inc    edx
  41fabd:	xchg   ebp,eax
  41fabe:	fbld   TBYTE PTR [ebx]
  41fac0:	xor    BYTE PTR [ecx+eiz*4+0x28f185c4],ah
  41fac7:	cs sbb eax,0x9a375435
  41facd:	jno    0x41fad3
  41facf:	cmp    bh,0xba
  41fad2:	sub    eax,0x1f907187
  41fad7:	enter  0xf1eb,0x2
  41fadb:	popa   
  41fadc:	dec    esp
  41fadd:	sub    al,0x84
  41fadf:	ret    0x40a1
  41fae2:	stc    
  41fae3:	fs xor al,0x8d
  41fae6:	add    eax,0xb974fc5b
  41faeb:	stos   DWORD PTR es:[edi],eax
  41faec:	shl    DWORD PTR [edi-0x55],cl
  41faef:	cmp    al,0x9f
  41faf1:	pushf  
  41faf2:	outs   dx,BYTE PTR ds:[esi]
  41faf3:	xchg   ebp,eax
  41faf4:	and    dl,ah
  41faf6:	fld    QWORD PTR [ebp+edi*4-0x4f]
  41fafa:	cli    
  41fafb:	pop    ss
  41fafc:	pop    ecx
  41fafd:	bound  ebp,QWORD PTR [esi+0x19]
  41fb00:	lds    ebp,FWORD PTR [ebx-0x1d6d3bbd]
  41fb06:	in     al,0x55
  41fb08:	cmp    BYTE PTR [esi],dh
  41fb0a:	(bad)  
  41fb0b:	call   0x27d7f398
  41fb10:	in     al,dx
  41fb11:	aad    0xf4
  41fb13:	xlat   BYTE PTR ds:[ebx]
  41fb14:	xor    BYTE PTR [ebx],ah
  41fb16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb17:	push   es
  41fb18:	shl    DWORD PTR [ebp+0x6d],cl
  41fb1b:	adc    cl,al
  41fb1d:	jp     0x41fb4a
  41fb1f:	dec    esi
  41fb20:	adc    edi,DWORD PTR [edx-0x22]
  41fb23:	adc    DWORD PTR [edi-0x18],ebx
  41fb26:	push   ebx
  41fb27:	inc    edx
  41fb28:	sbb    eax,0xcf4f83af
  41fb2d:	arpl   si,si
  41fb2f:	ds mov edi,0x592f64d6
  41fb35:	xlat   BYTE PTR ds:[ebx]
  41fb36:	and    edi,DWORD PTR [eax]
  41fb38:	mov    bh,0x4e
  41fb3a:	pop    ss
  41fb3b:	sahf   
  41fb3c:	imul   edi
  41fb3e:	fs das 
  41fb40:	sub    al,0x52
  41fb42:	lds    ebp,FWORD PTR [ebx+0x4c818d60]
  41fb48:	pushf  
  41fb49:	mov    ebp,0x19a4a81a
  41fb4e:	repz xchg esp,eax
  41fb50:	adc    DWORD PTR [eax],ebp
  41fb52:	xchg   edx,eax
  41fb53:	test   al,0x79
  41fb55:	out    dx,eax
  41fb56:	mov    esp,0xf772f7ed
  41fb5b:	(bad)  
  41fb5c:	in     al,0xab
  41fb5e:	loope  0x41fbdd
  41fb60:	push   es
  41fb61:	add    al,0x7c
  41fb63:	cmp    eax,DWORD PTR [eax]
  41fb65:	add    al,0x25
  41fb67:	(bad)  
  41fb68:	stc    
  41fb69:	repnz and dh,BYTE PTR [eax+0x5312c315]
  41fb70:	push   es
  41fb71:	out    0x5a,eax
  41fb73:	out    0x79,al
  41fb75:	pop    esp
  41fb76:	push   edx
  41fb77:	jo     0x41fb68
  41fb79:	dec    edx
  41fb7a:	fmul   st,st(0)
  41fb7c:	and    esp,DWORD PTR [ecx]
  41fb7e:	xchg   DWORD PTR [edx+ecx*4],esp
  41fb81:	repnz lea esp,[ebx+0x4bf603a7]
  41fb88:	and    esi,DWORD PTR [bp+di+0x561f]
  41fb8d:	pop    esi
  41fb8e:	adc    DWORD PTR [ebx],esp
  41fb90:	inc    ebx
  41fb91:	cmp    al,0x6e
  41fb93:	mov    bh,0xe2
  41fb95:	sub    ah,BYTE PTR [ebp-0xa9e1060]
  41fb9b:	or     dh,BYTE PTR [edx+ebp*2+0x4f6fc424]
  41fba2:	leave  
  41fba3:	xor    al,0xfe
  41fba5:	and    bh,bl
  41fba7:	aam    0xe4
  41fba9:	lahf   
  41fbaa:	pushf  
  41fbab:	pop    edx
  41fbac:	in     al,0x40
  41fbae:	mov    ds:0x68c296a2,eax
  41fbb3:	shl    ebp,0x12
  41fbb6:	loop   0x41fc07
  41fbb8:	push   0x64
  41fbba:	mov    esi,0xdca4820
  41fbbf:	leave  
  41fbc0:	add    esi,DWORD PTR [ebx+0x58]
  41fbc3:	in     eax,0xfb
  41fbc5:	adc    al,0x5b
  41fbc7:	icebp  
  41fbc8:	add    esi,esi
  41fbca:	add    BYTE PTR [esi+0x5c],bl
  41fbcd:	out    0x4b,eax
  41fbcf:	popa   
  41fbd0:	out    dx,eax
  41fbd1:	mov    gs,WORD PTR [ebx+0xf865652]
  41fbd7:	jb     0x41fbcd
  41fbd9:	movntq QWORD PTR [edx+ebx*4],mm2
  41fbdd:	cmp    bh,BYTE PTR [ebx+0x53]
  41fbe0:	or     DWORD PTR [esi-0x25],0x25
  41fbe4:	push   eax
  41fbe5:	cwde   
  41fbe6:	cmp    ch,BYTE PTR [edi]
  41fbe8:	push   ss
  41fbe9:	imul   BYTE PTR [ecx]
  41fbeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbec:	shl    BYTE PTR [esi-0x492e0de1],cl
  41fbf2:	cmp    al,0x1d
  41fbf4:	ret    0x9ba6
  41fbf7:	sub    eax,0x2683fed8
  41fbfc:	vorps  ymm1,ymm1,ymm0
  41fc00:	inc    eax
  41fc01:	(bad)  
  41fc02:	jns    0x41fbf5
  41fc04:	push   ebx
  41fc05:	fcom   DWORD PTR [eax+ebx*8]
  41fc08:	add    ecx,DWORD PTR [edx+0x1a0482c6]
  41fc0e:	pop    ecx
  41fc0f:	pop    edx
  41fc10:	out    dx,eax
  41fc11:	nop
  41fc12:	out    0x53,eax
  41fc14:	inc    ebp
  41fc15:	xor    BYTE PTR [ebx],ch
  41fc17:	enter  0xfd6,0x13
  41fc1b:	inc    edx
  41fc1c:	fwait
  41fc1d:	xchg   edx,eax
  41fc1e:	xor    bh,BYTE PTR [ebx]
  41fc20:	(bad)  
  41fc21:	in     eax,0x37
  41fc23:	adc    ecx,ecx
  41fc25:	pop    ss
  41fc26:	inc    esi
  41fc27:	add    DWORD PTR [ebp-0x61],eax
  41fc2a:	xchg   edx,eax
  41fc2b:	sub    cl,BYTE PTR [ebx-0x2014a520]
  41fc31:	pop    ecx
  41fc32:	out    0x7,al
  41fc34:	mov    edi,0x3e42a77
  41fc39:	ret    0xdebe
  41fc3c:	cmp    BYTE PTR [edx+0x5f08be],dl
  41fc42:	icebp  
  41fc43:	mov    eax,ds:0x52dcf6d0
  41fc48:	in     al,dx
  41fc49:	cmp    eax,0x82e74960
  41fc4e:	inc    edx
  41fc4f:	rcr    DWORD PTR gs:[ebx+ecx*8],0xf0
  41fc54:	push   esi
  41fc55:	pusha  
  41fc56:	sbb    eax,0xa2d3e923
  41fc5b:	jne    0x41fcd1
  41fc5d:	xor    eax,esi
  41fc5f:	mov    ah,0x9a
  41fc61:	xor    DWORD PTR [ebp+0x6f47f525],eax
  41fc67:	ror    al,1
  41fc69:	mov    dl,0x8a
  41fc6b:	addr16 aad 0x9f
  41fc6e:	dec    eax
  41fc6f:	jae    0x4b1a2795
  41fc75:	test   al,0x2e
  41fc77:	stc    
  41fc78:	imul   ebp,eax,0xffffffb0
  41fc7b:	rcr    BYTE PTR [edi],1
  41fc7d:	push   ds
  41fc7e:	mov    esi,0x2b64dd1f
  41fc83:	cmp    eax,0xe003a810
  41fc88:	cmp    edi,DWORD PTR [edi-0x5cd3cfd3]
  41fc8e:	mov    bl,0xb8
  41fc90:	arpl   bx,bp
  41fc92:	jp     0x41fc65
  41fc94:	inc    esi
  41fc95:	add    eax,0xb35cdbce
  41fc9a:	stos   BYTE PTR es:[edi],al
  41fc9b:	in     al,0xab
  41fc9d:	sbb    esp,0x2a985e42
  41fca3:	or     al,0xdd
  41fca5:	stos   DWORD PTR es:[edi],eax
  41fca6:	sbb    dl,dh
  41fca8:	add    BYTE PTR [eax],0xa8
  41fcab:	clc    
  41fcac:	enter  0x6df6,0x6
  41fcb0:	add    BYTE PTR [edi+0x3db40c6],dh
  41fcb6:	fisubr DWORD PTR [eax-0x75]
  41fcb9:	xor    bh,BYTE PTR ds:0xdfab590a
  41fcbf:	pusha  
  41fcc0:	stos   DWORD PTR es:[edi],eax
  41fcc1:	jp     0x41fc95
  41fcc3:	inc    edi
  41fcc4:	inc    ebx
  41fcc5:	(bad)  
  41fcc6:	xor    DWORD PTR [ecx+esi*8-0x7b],eax
  41fcca:	retf   
  41fccb:	cmp    ch,BYTE PTR [esi+0x61526b3e]
  41fcd1:	cmp    eax,0x3fd9da5d
  41fcd6:	jge    0x41fcc8
  41fcd8:	xchg   ebx,eax
  41fcd9:	or     ecx,ecx
  41fcdb:	scas   eax,DWORD PTR es:[edi]
  41fcdc:	mov    ds:0x844bbade,eax
  41fce1:	or     DWORD PTR [edi],edi
  41fce3:	aad    0x26
  41fce5:	cmp    BYTE PTR [eax+0x6],bl
  41fce8:	(bad)  
  41fcea:	xchg   esi,eax
  41fceb:	nop
  41fcec:	sub    bl,al
  41fcee:	test   eax,0xc9d61b86
  41fcf3:	int    0x34
  41fcf5:	fisub  WORD PTR [ebp-0x3ef9fa3e]
  41fcfb:	(bad)  
  41fcfd:	jo     0x41fd46
  41fcff:	jo     0x41fcd9
  41fd01:	xor    DWORD PTR [edi-0x41],edx
  41fd04:	popa   
  41fd05:	aam    0xdc
  41fd07:	(bad)  
  41fd08:	jp     0x41fca8
  41fd0a:	ss pop es
  41fd0c:	adc    DWORD PTR [edi+0x6e7d9b9],0x6d
  41fd13:	jmp    0x41fcf7
  41fd15:	loope  0x41fd03
  41fd17:	(bad)  
  41fd19:	cmp    eax,0x4837b77f
  41fd1e:	rcr    bl,cl
  41fd20:	arpl   si,si
  41fd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd23:	add    esp,ecx
  41fd25:	xor    ebp,DWORD PTR [edi+0x2feea411]
  41fd2b:	xchg   ebx,eax
  41fd2c:	cmc    
  41fd2d:	xchg   ecx,eax
  41fd2e:	mov    al,ds:0xe3a1e38b
  41fd33:	push   0x238035ec
  41fd38:	fcom   QWORD PTR [edi]
  41fd3a:	mov    ebx,?
  41fd3c:	outs   dx,BYTE PTR ds:[esi]
  41fd3d:	loopne 0x41fd23
  41fd3f:	out    dx,al
  41fd40:	rcr    DWORD PTR [ebx-0x2a],0x7c
  41fd44:	int3   
  41fd45:	pop    es
  41fd46:	into   
  41fd47:	dec    edi
  41fd48:	push   ebx
  41fd49:	cmp    BYTE PTR ds:0xf177b79b,0x2b
  41fd50:	mov    ebp,0x27b64fbf
  41fd55:	(bad)  
  41fd56:	imul   eax,DWORD PTR [ebx+0x4dc54397],0x71
  41fd5d:	aam    0x90
  41fd5f:	inc    edx
  41fd60:	mov    ch,0xb2
  41fd62:	out    0x2c,al
  41fd64:	jmp    0x41fd8a
  41fd66:	mov    dl,0xd9
  41fd68:	adc    dl,BYTE PTR [edx+0x3]
  41fd6b:	dec    ebx
  41fd6c:	neg    BYTE PTR [ebp-0x6e5b5d16]
  41fd72:	test   eax,0x39a3dd7
  41fd77:	cmc    
  41fd78:	ins    DWORD PTR es:[edi],dx
  41fd79:	sbb    al,0x4
  41fd7b:	addr16 adc cl,ch
  41fd7e:	push   esi
  41fd7f:	daa    
  41fd80:	add    BYTE PTR [edx],0xcf
  41fd83:	add    BYTE PTR [eax],ah
  41fd85:	sbb    eax,0xfbb1ff0
  41fd8a:	mov    al,es:0x4cad1494
  41fd90:	cwde   
  41fd91:	cld    
  41fd92:	inc    ecx
  41fd93:	clc    
  41fd94:	xchg   esi,eax
  41fd95:	mov    cl,0x11
  41fd97:	sar    BYTE PTR [eax-0x5966c43b],0x7a
  41fd9e:	test   esp,esi
  41fda0:	repnz fisubr DWORD PTR [ebp+0x2c3cfedf]
  41fda7:	cmc    
  41fda8:	(bad)  [eax]
  41fdaa:	ins    DWORD PTR es:[edi],dx
  41fdab:	lock into 
  41fdad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdae:	jb     0x41fd3a
  41fdb0:	push   cs
  41fdb1:	cld    
  41fdb2:	ja     0x41fd5d
  41fdb4:	ss scas eax,DWORD PTR es:[edi]
  41fdb6:	nop
  41fdb7:	cmp    BYTE PTR [edx-0x9],bl
  41fdba:	sbb    al,0x5f
  41fdbc:	loop   0x41fd98
  41fdbe:	add    eax,0x81deae9f
  41fdc3:	mov    dh,0xac
  41fdc5:	xchg   ebx,eax
  41fdc6:	cmp    eax,0xbf0b06af
  41fdcb:	xor    dh,BYTE PTR [ebx-0x589b768f]
  41fdd1:	mov    ds:0xcd0831d4,eax
  41fdd6:	repnz push ebx
  41fdd8:	repz test eax,0x4fdf2dd7
  41fdde:	and    al,0xa0
  41fde0:	mov    bh,0x91
  41fde2:	scas   al,BYTE PTR es:[edi]
  41fde3:	cmp    DWORD PTR [edi],esi
  41fde5:	(bad)  
  41fde6:	(bad)  
  41fde7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fde8:	jnp    0x41fd75
  41fdea:	pushf  
  41fdeb:	and    esp,DWORD PTR [edx-0x2d]
  41fdee:	sbb    DWORD PTR [ecx-0x25b21d40],ebp
  41fdf4:	call   0x437f58ee
  41fdf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdfa:	aad    0xc9
  41fdfc:	hlt    
  41fdfd:	shl    DWORD PTR [ebp+0x65],0x8b
  41fe01:	and    ecx,DWORD PTR [esi]
  41fe03:	jge    0x41fd93
  41fe05:	pop    edi
  41fe06:	mov    al,0xf6
  41fe08:	inc    eax
  41fe09:	add    cl,BYTE PTR [edx-0x46b8796a]
  41fe0f:	push   ecx
  41fe10:	xchg   ebp,eax
  41fe11:	enter  0x97d5,0x8f
  41fe15:	bound  esi,QWORD PTR [edi-0x93d54b2]
  41fe1b:	jp     0x41fe8f
  41fe1d:	dec    esp
  41fe1e:	cmp    BYTE PTR [edx],cl
  41fe20:	aad    0x2b
  41fe22:	adc    edi,DWORD PTR [eax]
  41fe24:	sub    cl,0x9b
  41fe27:	push   ss
  41fe28:	ret    
  41fe29:	push   ds
  41fe2a:	rcr    DWORD PTR [eax+0x5b],cl
  41fe2d:	or     ch,BYTE PTR [esi+ebp*1+0x28]
  41fe31:	in     eax,dx
  41fe32:	not    edx
  41fe34:	mov    ds:0x5214078c,eax
  41fe39:	pop    edi
  41fe3a:	pusha  
  41fe3b:	dec    edx
  41fe3c:	xchg   edx,eax
  41fe3d:	(bad)  
  41fe3f:	and    dl,BYTE PTR [eax]
  41fe41:	ret    
  41fe42:	loope  0x41fe29
  41fe44:	mov    dh,bh
  41fe46:	imul   esp,edi,0xffffffd8
  41fe49:	xor    esi,esi
  41fe4b:	push   cs
  41fe4c:	cmp    dh,BYTE PTR [edx+0x2e]
  41fe4f:	add    al,0xe7
  41fe51:	aaa    
  41fe52:	fnstsw WORD PTR [ecx-0x31e47cc5]
  41fe58:	sti    
  41fe59:	neg    esp
  41fe5b:	pop    esi
  41fe5c:	push   ss
  41fe5d:	jo     0x41fe16
  41fe5f:	test   al,0xb0
  41fe61:	dec    ecx
  41fe62:	pop    edx
  41fe63:	test   al,0x7
  41fe65:	stos   BYTE PTR es:[edi],al
  41fe66:	in     eax,0x34
  41fe68:	call   0x49fb0ad8
  41fe6d:	fisttp WORD PTR [edi+0x3a261984]
  41fe73:	xor    eax,0xbee4085e
  41fe78:	pop    ss
  41fe79:	mov    dl,0xe2
  41fe7b:	cdq    
  41fe7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe7d:	pop    esi
  41fe7e:	cmp    esi,DWORD PTR [ebx-0x35]
  41fe81:	push   eax
  41fe82:	int3   
  41fe83:	mov    DWORD PTR [eax-0x29],eax
  41fe86:	ins    BYTE PTR es:[edi],dx
  41fe87:	scas   eax,DWORD PTR es:[edi]
  41fe88:	push   eax
  41fe89:	imul   edx,DWORD PTR [ecx+0x2d],0xfffffff1
  41fe8d:	jbe    0x41feaf
  41fe8f:	add    eax,0xc94a28d7
  41fe94:	enter  0x1432,0xfa
  41fe98:	icebp  
  41fe99:	sub    eax,0xf4f56d77
  41fe9e:	aaa    
  41fe9f:	mov    dl,0x68
  41fea1:	jg     0x41feb7
  41fea3:	mov    al,ds:0xa5d07684
  41fea8:	and    ch,bl
  41feaa:	jmp    0xfeb5:0xf090731b
  41feb1:	in     eax,dx
  41feb2:	push   ds
  41feb3:	push   esp
  41feb4:	pop    es
  41feb5:	push   ecx
  41feb6:	mov    ds:0x3dd7a87f,al
  41febb:	(bad)  
  41febc:	jns    0x41fe89
  41febe:	mov    ebp,DWORD PTR [ebx-0x4b]
  41fec1:	sbb    eax,0x938df357
  41fec6:	or     dl,dh
  41fec8:	inc    edi
  41fec9:	pop    ecx
  41feca:	adc    al,0x72
  41fecc:	stos   BYTE PTR es:[edi],al
  41fecd:	push   ebx
  41fece:	push   cs
  41fecf:	rcr    BYTE PTR [ecx+0x64c6aed6],cl
  41fed5:	clc    
  41fed6:	lock loopne 0x41ff48
  41fed9:	dec    edi
  41feda:	push   0xffffffb7
  41fedc:	stos   DWORD PTR es:[edi],eax
  41fedd:	mov    DWORD PTR [esp+ecx*2-0x2ced67c7],ebx
  41fee4:	mov    ss,WORD PTR [bp+0xfad]
  41fee9:	inc    ebp
  41feea:	pop    ebx
  41feeb:	cmp    DWORD PTR [edi-0x27],esi
  41feee:	inc    BYTE PTR [eax+0x1]
  41fef1:	es es je 0x41fe7a
  41fef5:	sub    al,0x6d
  41fef7:	scas   eax,DWORD PTR es:[edi]
  41fef8:	push   es
  41fef9:	sti    
  41fefa:	sbb    bh,BYTE PTR [esi-0x44]
  41fefd:	pop    esi
  41fefe:	xchg   ebp,eax
  41ff00:	jmp    FWORD PTR [eax-0x5a]
  41ff03:	loope  0x41fefa
  41ff05:	fnstcw WORD PTR [eax-0x78]
  41ff08:	test   al,0x4b
  41ff0a:	cld    
  41ff0b:	loopne 0x41feb8
  41ff0d:	mov    WORD PTR [ecx],?
  41ff0f:	cmp    BYTE PTR [eax+0x355fae20],0x4c
  41ff16:	add    eax,0x3a555c9e
  41ff1b:	xor    eax,DWORD PTR [eax]
  41ff1d:	jmp    0x23418be7
  41ff22:	adc    BYTE PTR [ebx+0x355770df],ah
  41ff28:	xchg   ebx,eax
  41ff29:	jl     0x41ff17
  41ff2b:	arpl   WORD PTR [ecx+0x70],ax
  41ff2e:	pop    ebp
  41ff2f:	mov    ds:0x7904008a,al
  41ff34:	stos   BYTE PTR es:[edi],al
  41ff35:	pop    edx
  41ff36:	or     BYTE PTR [esi+ebp*8+0x65],0x2a
  41ff3b:	and    eax,0xe24aa646
  41ff40:	ret    
  41ff41:	pop    ds
  41ff42:	mov    al,ds:0xa03003f5
  41ff47:	mov    WORD PTR [ebx+0x5f],cs
  41ff4a:	repnz into 
  41ff4c:	dec    ecx
  41ff4d:	ja     0x41fee0
  41ff4f:	cmp    esi,ebx
  41ff51:	jo     0x41ff66
  41ff53:	mov    esi,0xc93d13b2
  41ff58:	ret    0x6c97
  41ff5b:	mov    dh,0x2f
  41ff5d:	dec    esi
  41ff5e:	js     0x41ffa9
  41ff60:	sbb    al,0x5c
  41ff62:	cmp    al,0x2c
  41ff64:	sbb    al,0xa6
  41ff66:	xor    DWORD PTR [eax+0x5fb7f477],ebp
  41ff6c:	inc    ecx
  41ff6d:	mov    ch,0xd4
  41ff6f:	mov    ebx,0xf95fd26b
  41ff74:	sbb    BYTE PTR [edx+0x53fb6792],ch
  41ff7a:	mov    ah,0xed
  41ff7c:	stc    
  41ff7d:	cmp    ecx,edi
  41ff7f:	mov    esp,fs
  41ff81:	fist   WORD PTR [edi+0x6aed1264]
  41ff87:	das    
  41ff88:	sub    eax,0x2a2bdd32
  41ff8d:	das    
  41ff8e:	call   0x7f63235a
  41ff93:	xor    bl,cl
  41ff95:	mov    edi,0xe8593889
  41ff9a:	xchg   esi,eax
  41ff9b:	add    al,0x9a
  41ff9d:	add    bl,dl
  41ff9f:	loopne 0x41ff4d
  41ffa1:	lea    edx,[eax+0x6d73ca4d]
  41ffa7:	outs   dx,BYTE PTR ds:[esi]
  41ffa8:	nop
  41ffa9:	cli    
  41ffaa:	jo     0x41ff69
  41ffac:	(bad)  
  41ffad:	cwde   
  41ffae:	mov    esi,0xe260f77d
  41ffb3:	in     eax,0x3d
  41ffb5:	or     edi,eax
  41ffb7:	bnd jns 0x420030
  41ffba:	xor    ebp,ebp
  41ffbc:	dec    ecx
  41ffbd:	in     eax,0xa5
  41ffbf:	pushf  
  41ffc0:	jle    0x41ff8d
  41ffc2:	mov    dh,0xc5
  41ffc4:	jo     0x420018
  41ffc6:	push   ebp
  41ffc7:	cmc    
  41ffc8:	data16 into 
  41ffca:	jecxz  0x41ffe5
  41ffcc:	test   BYTE PTR [ecx-0x3d],ch
  41ffcf:	fimul  DWORD PTR [ecx+0x65]
  41ffd2:	sub    bl,ch
  41ffd4:	xchg   ecx,eax
  41ffd5:	cwde   
  41ffd6:	retf   
  41ffd7:	mov    bh,0xb5
  41ffd9:	lods   al,BYTE PTR ds:[esi]
  41ffda:	rol    DWORD PTR [eax+0x4bba78],1
  41ffe0:	mov    ecx,0x55f1381
  41ffe5:	and    edi,DWORD PTR [edi+0x60f38d09]
  41ffeb:	mov    dh,BYTE PTR [ecx]
  41ffed:	push   esp
  41ffee:	out    dx,eax
  41ffef:	mov    esi,0x191afb3e
  41fff4:	pusha  
  41fff5:	aas    
  41fff6:	mov    ebp,0x10cbd80d
  41fffb:	mov    ecx,0xdab7b7ad
  420000:	jge    0x41ff8a
  420002:	or     al,0x31
  420004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420005:	iret   
  420006:	pop    esp
  420007:	fnstsw WORD PTR [ebx]
  420009:	or     DWORD PTR [esp+edi*8+0x3d],ebp
  42000d:	lock adc DWORD PTR [eax],0xffffffe3
  420011:	pop    ss
  420012:	sar    ebp,0x59
  420015:	pop    ds
  420016:	das    
  420017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420018:	fucomi st,st(0)
  42001a:	rcr    DWORD PTR [ecx],cl
  42001c:	gs js  0x42006d
  42001f:	jmp    0x78b96c40
  420024:	lds    edx,FWORD PTR [edi-0x7a44a01]
  42002a:	cmp    ebp,0x12
  42002d:	aaa    
  42002e:	sub    al,0xab
  420030:	inc    esp
  420031:	int    0x1b
  420033:	fistp  DWORD PTR [ebx+0x5a]
  420036:	xchg   ebx,eax
  420037:	cli    
  420038:	push   ss
  420039:	loopne 0x420065
  42003b:	sub    DWORD PTR [ebp-0x2b],ebp
  42003e:	jl     0x42005a
  420040:	int3   
  420041:	cld    
  420042:	inc    ebp
  420043:	lea    esi,[esi]
  420045:	pop    ebp
  420046:	mov    ecx,0xe38c4c59
  42004b:	cli    
  42004c:	add    edx,DWORD PTR [edx+0x3]
  42004f:	cdq    
  420050:	mov    dh,0xc0
  420052:	add    BYTE PTR [ebp-0xfd1f1cf],ah
  420058:	outs   dx,DWORD PTR ds:[esi]
  420059:	fidiv  DWORD PTR [esi+0x50]
  42005c:	in     eax,0xab
  42005e:	lock pop edi
  420060:	test   al,0xac
  420062:	ror    BYTE PTR [eax+0x4a211e9e],0x6a
  420069:	jge    0x420071
  42006b:	adc    al,0xf3
  42006d:	loopne 0x420010
  42006f:	aam    0x22
  420071:	scas   eax,DWORD PTR es:[edi]
  420072:	jge    0x4200e4
  420074:	cdq    
  420075:	mov    al,0xee
  420077:	fist   DWORD PTR [esi]
  420079:	xchg   ecx,eax
  42007a:	imul   edi,DWORD PTR [ebp+0x1ed89c7e],0x66e1e4fb
  420084:	(bad)  
  420085:	mov    esi,0xa2230fa2
  42008a:	sbb    al,BYTE PTR [edi+0x7a]
  42008d:	cwde   
  42008e:	sbb    cl,BYTE PTR [esi+0x2f]
  420091:	xchg   edx,eax
  420092:	(bad)  
  420094:	pop    ebx
  420095:	test   ebp,0xda59b9cc
  42009b:	inc    ebp
  42009c:	push   ebx
  42009d:	jmp    0x4ac4:0x95ad4240
  4200a4:	lods   al,BYTE PTR ds:[esi]
  4200a5:	pushf  
  4200a6:	in     al,dx
  4200a7:	sbb    al,0x5
  4200a9:	loopne 0x420123
  4200ab:	jnp    0x4200dc
  4200ad:	sub    dl,al
  4200af:	mov    dh,BYTE PTR [ecx+0x5]
  4200b2:	adc    BYTE PTR [esi+0x71],cl
  4200b5:	call   0x598bdd2e
  4200ba:	dec    edx
  4200bb:	jnp    0x42009b
  4200bd:	adc    ah,BYTE PTR [esi]
  4200bf:	or     dh,ah
  4200c1:	aas    
  4200c2:	jmp    0x420116
  4200c4:	or     esp,esp
  4200c6:	add    DWORD PTR [ebx+edi*8+0x120e0539],ecx
  4200cd:	sub    ah,BYTE PTR [esp+eiz*4-0x20]
  4200d1:	fdivrp st(4),st
  4200d3:	aam    0xba
  4200d5:	xchg   edx,eax
  4200d6:	icebp  
  4200d7:	dec    ebx
  4200d8:	xor    BYTE PTR [esi+0x37],0xac
  4200dc:	mov    dh,0xfa
  4200de:	xchg   edx,eax
  4200df:	inc    ecx
  4200e0:	pop    esp
  4200e1:	mov    esi,0x3b5f4851
  4200e6:	ss scas al,BYTE PTR es:[edi]
  4200e8:	add    BYTE PTR ds:0xc9d29b83,al
  4200ee:	repnz add DWORD PTR [ebx],ebp
  4200f1:	mov    eax,ds:0xa7397f53
  4200f6:	mov    esp,0x438b02f2
  4200fb:	mov    ss,WORD PTR [edi]
  4200fd:	gs imul edx,ebp,0x22ef407a
  420104:	and    DWORD PTR [esi],edx
  420106:	mov    esi,0xdeb1a2de
  42010b:	sbb    al,0x82
  42010d:	int3   
  42010e:	mov    eax,0xf53a4991
  420113:	xor    al,0x17
  420115:	xchg   esi,eax
  420116:	sbb    eax,0x3844942
  42011b:	ret    0x4d7e
  42011e:	addr16 and ebp,esi
  420121:	xchg   BYTE PTR [edx-0x53276fd0],bl
  420127:	(bad)
  42012b:	cmc    
  42012c:	or     BYTE PTR [eax],cl
  42012e:	je     0x4200ea
  420130:	xchg   ax,ax
  420132:	sbb    eax,0x88200558
  420137:	fwait
  420138:	lock aam 0xba
  42013b:	dec    ebx
  42013c:	dec    edi
  42013d:	mov    ch,0x57
  42013f:	scas   al,BYTE PTR es:[edi]
  420140:	dec    ecx
  420141:	ins    DWORD PTR es:[edi],dx
  420142:	div    esp
  420144:	stos   DWORD PTR es:[edi],eax
  420145:	dec    ebp
  420146:	test   eax,0xffd012df
  42014b:	loop   0x4201bb
  42014d:	outs   dx,DWORD PTR ds:[esi]
  42014e:	pminsw mm3,QWORD PTR [ebp+0x52532e06]
  420155:	push   ebx
  420156:	mov    ds:0x30276ecc,al
  42015b:	retf   0x2ece
  42015e:	ins    DWORD PTR es:[edi],dx
  42015f:	mov    ch,0x67
  420161:	sbb    al,bh
  420163:	repnz fdivr DWORD PTR [esi+0x1a4629e2]
  42016a:	pop    ss
  42016b:	pop    esp
  42016c:	mov    DWORD PTR [ebp+edx*2+0x7727b7c1],0xf1c1a409
  420177:	jns    0x420132
  420179:	mov    edi,ebx
  42017b:	popa   
  42017c:	scas   al,BYTE PTR es:[edi]
  42017d:	push   ss
  42017e:	mov    ebx,0x1c6ce5dc
  420183:	dec    esi
  420184:	pop    eax
  420185:	adc    eax,0x428f357e
  42018a:	cmp    bh,BYTE PTR [edx]
  42018c:	inc    ecx
  42018d:	out    0x7,eax
  42018f:	sub    BYTE PTR [ebx+0x50],ch
  420192:	push   ecx
  420193:	fs cdq 
  420195:	pop    esi
  420196:	jmp    0x34c0081
  42019b:	push   0xa7f6a409
  4201a0:	clc    
  4201a1:	pop    edx
  4201a2:	(bad)  
  4201a3:	stc    
  4201a4:	imul   esp,DWORD PTR [ebp+0x7d1e1e01],0xffffffef
  4201ab:	mov    esp,0xb717d8d4
  4201b0:	sbb    eax,0xc34b9f24
  4201b5:	jo     0x4201ee
  4201b7:	add    ch,BYTE PTR [edi]
  4201b9:	and    al,0x53
  4201bb:	or     esi,0x459b78b7
  4201c1:	or     BYTE PTR [ebx+0x46264d1e],al
  4201c7:	push   es
  4201c8:	or     ebx,ebp
  4201ca:	mov    ch,0x15
  4201cc:	fsubr  QWORD PTR ds:0xa636c2dc
  4201d2:	add    dl,al
  4201d4:	jp     0x420246
  4201d6:	mov    ?,WORD PTR [edx+0x1e]
  4201d9:	sub    DWORD PTR [eax+esi*2],0x67
  4201dd:	jnp    0x4201b4
  4201df:	jne    0x42018e
  4201e1:	dec    eax
  4201e2:	int    0x12
  4201e4:	mov    al,0x9a
  4201e6:	ficomp DWORD PTR [esi]
  4201e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201e9:	adc    BYTE PTR [edx-0x26],0x49
  4201ed:	mov    edx,0x66e32308
  4201f2:	and    al,0x20
  4201f4:	fwait
  4201f5:	pop    es
  4201f6:	jns    0x42021b
  4201f8:	shl    bh,1
  4201fa:	push   ds
  4201fb:	call   0xd27c:0x9056887d
  420202:	and    cl,BYTE PTR [edx-0x4b]
  420205:	mov    ah,0x4e
  420207:	sbb    bl,BYTE PTR [ecx]
  420209:	pop    esp
  42020a:	lock dec esi
  42020c:	cmp    al,0xa1
  42020e:	mov    ds:0x2473386f,eax
  420213:	lds    ebp,FWORD PTR ds:0x880c3700
  420219:	imul   ecx,DWORD PTR [ecx-0x27],0xe4e880d0
  420220:	cdq    
  420221:	dec    ecx
  420222:	fcom   DWORD PTR [eax+0x2b]
  420225:	out    dx,eax
  420226:	mov    BYTE PTR [eax+0x2612337],bl
  42022c:	in     al,0x8b
  42022e:	cmp    DWORD PTR fs:[ecx],edx
  420231:	or     eax,0x236b7e1c
  420236:	(bad)  
  420237:	cmc    
  420238:	mov    edi,0x549313e1
  42023d:	push   es
  42023e:	(bad)  [eax-0x4d9fa934]
  420244:	inc    bp
  420246:	je     0x420202
  420248:	push   esi
  420249:	push   ecx
  42024b:	pop    esp
  42024c:	inc    edx
  42024d:	aad    0xab
  42024f:	jns    0x4201fe
  420251:	js     0x4202a9
  420253:	sub    bl,BYTE PTR [ebp+edx*1-0x7923b131]
  42025a:	jle    0x420228
  42025c:	add    al,0xf7
  42025e:	jle    0x42020c
  420260:	les    ebp,FWORD PTR [esi+0x485cac79]
  420266:	push   ecx
  420267:	mov    dl,0xcb
  420269:	lahf   
  42026a:	jge    0x420211
  42026c:	pop    ebp
  42026d:	test   DWORD PTR [ebp+0x5ff91d94],esi
  420273:	call   0xf7c3:0x41ca6072
  42027a:	push   edx
  42027b:	pcmpgtd mm1,QWORD PTR [edx-0x11]
  42027f:	jmp    0x5dd:0xfe7aa4f
  420286:	pop    edx
  420287:	rol    DWORD PTR ds:0x3f3761b6,0x7b
  42028e:	repz imul ebx,ecx,0x9ea58be9
  420295:	fst    QWORD PTR [ebx-0x2ffec74e]
  42029b:	hlt    
  42029c:	aad    0x48
  42029e:	out    0xab,al
  4202a0:	inc    ebx
  4202a1:	leave  
  4202a2:	add    DWORD PTR [eax+0x4e],ebx
  4202a5:	sub    BYTE PTR [edx+ebp*2-0x3e],dl
  4202a9:	retf   
  4202aa:	lea    ebx,[edx+0x13]
  4202ad:	je     0x42024d
  4202af:	sbb    al,0x52
  4202b1:	loop   0x4202f0
  4202b3:	ds push ebp
  4202b5:	sbb    DWORD PTR [ebp+ebx*1+0x3d],0xd9c50d0
  4202bd:	iret   
  4202be:	ins    DWORD PTR es:[edi],dx
  4202bf:	add    eax,0x2a144423
  4202c4:	loopne 0x420279
  4202c6:	jg     0x42031e
  4202c8:	aam    0xb0
  4202ca:	push   ebp
  4202cb:	stc    
  4202cc:	stos   BYTE PTR es:[edi],al
  4202cd:	jmp    0x42026f
  4202cf:	lock div eax
  4202d2:	ds pop edi
  4202d4:	sub    DWORD PTR [edi],ebp
  4202d6:	fdivr  DWORD PTR [eax]
  4202d8:	adc    DWORD PTR [eax+0x1c],ebp
  4202db:	mov    ecx,es
  4202dd:	pop    ss
  4202de:	pop    edi
  4202df:	popa   
  4202e0:	sub    eax,ebx
  4202e2:	and    al,BYTE PTR [eax]
  4202e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e5:	dec    ebx
  4202e6:	push   edi
  4202e7:	out    0x1a,al
  4202e9:	das    
  4202ea:	shr    BYTE PTR [eax+ebp*2],0x94
  4202ee:	adc    esp,DWORD PTR [eax+0x44]
  4202f1:	or     BYTE PTR [esp+edi*1-0x4bfcd700],dh
  4202f8:	pop    ebx
  4202f9:	push   ecx
  4202fa:	sub    al,0x6
  4202fc:	loope  0x4202cd
  4202fe:	mov    ebp,0x24df231f
  420303:	jmp    FWORD PTR [esi-0x56de3986]
  420309:	std    
  42030a:	shr    BYTE PTR [edx-0x7a7677bc],1
  420310:	scas   eax,DWORD PTR es:[edi]
  420311:	xor    dh,BYTE PTR [edx+ecx*2]
  420314:	pop    es
  420315:	jg     0x420337
  420317:	xchg   ebx,eax
  420318:	pop    esp
  420319:	sub    al,0x73
  42031b:	das    
  42031c:	jo     0x4202aa
  42031e:	(bad)  
  42031f:	xlat   BYTE PTR ds:[ebx]
  420320:	retf   
  420321:	aaa    
  420322:	sar    BYTE PTR [ecx+0x6a],0x43
  420326:	dec    esp
  420327:	or     eax,0xec301aa4
  42032c:	cli    
  42032d:	(bad)  
  42032f:	push   esp
  420330:	cmp    eax,0xb91911a8
  420335:	push   ss
  420336:	(bad)  
  420337:	cmp    al,0xe9
  420339:	xchg   esi,ecx
  42033b:	mov    eax,ds:0x402df2c6
  420340:	mov    ch,0xdf
  420343:	mov    ch,0xad
  420345:	sub    BYTE PTR [ecx-0x1f],0x8
  420349:	pop    ds
  42034a:	sub    eax,0xf2166ed
  42034f:	push   ebx
  420350:	ror    BYTE PTR [ebx-0x448635a2],cl
  420356:	inc    ecx
  420357:	fidiv  DWORD PTR [esi-0x3b2e9f68]
  42035d:	and    eax,0x41ac5d3a
  420362:	daa    
  420363:	push   ecx
  420364:	jno    0x4203a8
  420366:	adc    DWORD PTR [ebp+0x3e0d6979],0x7f3cd930
  420370:	je     0x420303
  420372:	pop    eax
  420373:	and    ebp,ebp
  420375:	pop    edi
  420376:	dec    ebp
  420377:	jge    0x420365
  420379:	inc    esp
  42037a:	or     al,0x11
  42037c:	mov    bl,0x72
  42037e:	inc    ecx
  42037f:	mov    DWORD PTR [edx+ecx*1],eax
  420382:	cmp    al,0x78
  420384:	jl     0x42034a
  420386:	fcmovnu st,st(0)
  420388:	inc    ebp
  420389:	and    BYTE PTR [esi+0x33f48e07],cl
  42038f:	out    dx,al
  420390:	scas   eax,DWORD PTR es:[edi]
  420391:	out    dx,al
  420392:	add    ah,bh
  420394:	inc    eax
  420395:	push   ss
  420396:	repnz fcmovnu st,st(3)
  420399:	push   ebp
  42039a:	jmp    0xe875eb8b
  42039f:	mov    esp,0x61c5eb22
  4203a4:	pmaxsw mm7,QWORD PTR [edx+0x6920013d]
  4203ab:	push   es
  4203ac:	inc    ebp
  4203ad:	xchg   edx,eax
  4203ae:	mov    cl,0x66
  4203b0:	and    eax,0x405f0350
  4203b5:	rcr    BYTE PTR [edx-0x20],cl
  4203b8:	sar    dl,cl
  4203ba:	call   0x4057:0x37bb9105
  4203c1:	cmp    eax,0x31009761
  4203c6:	lods   al,BYTE PTR ds:[esi]
  4203c7:	inc    edx
  4203c8:	gs scas eax,DWORD PTR es:[edi]
  4203ca:	int3   
  4203cb:	xor    eax,0x3a2e19f9
  4203d0:	mov    edx,0xbb559a67
  4203d5:	pop    edi
  4203d6:	(bad)  
  4203d7:	cmp    BYTE PTR [edx],ch
  4203d9:	sub    eax,0x823178fe
  4203de:	mov    dl,0xd0
  4203e0:	mov    edi,0x7669a1fa
  4203e5:	jno    0x4203e3
  4203e7:	rcr    BYTE PTR [ebx-0x29],1
  4203ea:	adc    cl,bl
  4203ec:	test   DWORD PTR [ecx+0x2e],0x9889cf7f
  4203f3:	sar    BYTE PTR [edi],cl
  4203f5:	fdivr  DWORD PTR [edx-0x64288720]
  4203fb:	ja     0x420383
  4203fd:	or     DWORD PTR [ebx],ebp
  4203ff:	(bad)  [edx+0x28b85049]
  420405:	fist   WORD PTR [ebx+ebp*2+0x54]
  420409:	rol    BYTE PTR [ecx],1
  42040b:	mov    ch,0x19
  42040d:	adc    bl,BYTE PTR [edx-0x5e]
  420410:	xchg   esi,eax
  420411:	loop   0x420452
  420413:	out    dx,eax
  420414:	jbe    0x4203bd
  420416:	test   BYTE PTR [ebp+0x5b208d16],al
  42041c:	inc    esi
  42041d:	frstor [ebx]
  42041f:	addr16 out 0x6b,al
  420422:	push   edx
  420423:	neg    BYTE PTR [ecx+0x39]
  420426:	inc    ebx
  420427:	xchg   edx,ebp
  420429:	inc    edx
  42042a:	lea    esp,[ecx]
  42042c:	xchg   esi,eax
  42042d:	jg     0x42044b
  42042f:	inc    esp
  420430:	sub    DWORD PTR [ebp+0x17],0x2f
  420434:	ret    0xb005
  420437:	mov    BYTE PTR [edi+0x369e4ff],al
  42043d:	or     bh,BYTE PTR [ecx+0x203b52dc]
  420443:	stc    
  420444:	adc    esi,DWORD PTR [esi+eiz*1+0x7c]
  420448:	call   0x2cde2c46
  42044d:	push   ebx
  42044e:	xor    cl,BYTE PTR [ebp+ebp*1+0x69]
  420452:	fsub   st,st(1)
  420454:	icebp  
  420455:	adc    BYTE PTR [edx+0x5f3e2a48],dl
  42045b:	pop    edx
  42045c:	aas    
  42045d:	leave  
  42045e:	add    esp,DWORD PTR [ebx-0x4bd82624]
  420464:	popa   
  420465:	fstp   DWORD PTR [eax-0x15]
  420468:	push   es
  420469:	xlat   BYTE PTR ds:[ebx]
  42046a:	dec    esp
  42046b:	cli    
  42046c:	xchg   edi,eax
  42046d:	(bad)  
  42046e:	(bad)  
  42046f:	popa   
  420470:	repnz test bh,ah
  420473:	scas   al,BYTE PTR es:[edi]
  420474:	fwait
  420475:	enter  0x8315,0x51
  420479:	ret    0xb977
  42047c:	pop    eax
  42047d:	jns    0x420491
  42047f:	test   DWORD PTR [edi-0x25],ebp
  420482:	jbe    0x42044b
  420484:	pop    ebx
  420485:	lods   eax,DWORD PTR ds:[esi]
  420486:	sub    bh,BYTE PTR [ecx+esi*4]
  420489:	arpl   bp,ax
  42048b:	popa   
  42048c:	fsubr  QWORD PTR [ebp-0x42b92bd8]
  420492:	jl     0x420481
  420494:	mov    ecx,0xdc443287
  420499:	dec    eax
  42049a:	sub    ch,bl
  42049c:	mov    esi,0x1ebbf25b
  4204a1:	ds push edx
  4204a3:	cmp    eax,0x81b411bd
  4204a8:	mov    ah,0x1e
  4204aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ab:	mov    eax,ds:0xd3101ba9
  4204b0:	push   cs
  4204b1:	(bad)  
  4204b2:	repz loop 0x4204b7
  4204b5:	aaa    
  4204b6:	adc    al,0x2d
  4204b8:	jnp    0x420501
  4204ba:	aad    0x2c
  4204bc:	ret    0x95f3
  4204bf:	shl    al,cl
  4204c1:	mov    al,ds:0x2e23327a
  4204c6:	lods   eax,DWORD PTR ds:[esi]
  4204c7:	repz mov al,0xdb
  4204ca:	ss jnp 0x42054c
  4204cd:	fucomip st,st(2)
  4204cf:	sbb    DWORD PTR [ecx-0x4f9ee176],ebp
  4204d5:	push   0xccc2a8a9
  4204da:	jecxz  0x4204ce
  4204dc:	jo     0x4204fc
  4204de:	dec    ebx
  4204df:	xor    esp,ebp
  4204e1:	and    al,0x75
  4204e3:	je     0x420483
  4204e5:	sbb    BYTE PTR [edx+0x5],bl
  4204e8:	adc    DWORD PTR [ebx],0x11
  4204eb:	call   0x880:0x3a964890
  4204f2:	pop    ds
  4204f3:	ficom  WORD PTR [edi+0x4457b898]
  4204f9:	and    esi,esp
  4204fb:	add    BYTE PTR [ebx+0x24],0x5e
  4204ff:	int3   
  420500:	jo     0x420581
  420502:	adc    eax,0xdf24b2f9
  420507:	mov    ebp,0xe36e41ae
  42050c:	test   BYTE PTR [edi+0x70],ah
  42050f:	repnz xor DWORD PTR [ecx+0x30],ebx
  420513:	mov    DWORD PTR [ebp+0x4],ebx
  420516:	call   0xdbec:0xfd98865a
  42051d:	cmp    ch,dh
  42051f:	repz ds scas eax,DWORD PTR es:[edi]
  420522:	loopne 0x4204a5
  420524:	outs   dx,DWORD PTR ds:[esi]
  420525:	aaa    
  420526:	adc    esi,ebx
  420528:	adc    al,0x1e
  42052a:	jo     0x4204e9
  42052c:	shr    BYTE PTR [ecx],1
  42052e:	mov    al,0x2d
  420530:	out    0xbf,al
  420532:	xchg   DWORD PTR [eax-0x291bf8fd],ebx
  420538:	rcr    DWORD PTR ds:0xcc24c748,0xd6
  42053f:	test   DWORD PTR [ecx+esi*4],esp
  420542:	icebp  
  420543:	enter  0x246d,0x3
  420547:	and    bh,BYTE PTR [ecx]
  420549:	ss shl al,0x17
  42054d:	shl    BYTE PTR [edx],1
  42054f:	sti    
  420550:	xor    al,0xa4
  420552:	push   0x1bbe17fa
  420557:	xchg   ebx,eax
  420558:	iret   
  420559:	(bad)  
  42055a:	fs dec esp
  42055c:	cld    
  42055d:	mov    edi,0x67bb9397
  420562:	jns    0x4205d4
  420564:	nop
  420565:	jbe    0x420576
  420567:	pop    esp
  420568:	adc    eax,0xa0cfae1c
  42056d:	mov    ecx,0xc3a7083e
  420572:	rcl    ebp,1
  420574:	xchg   edi,eax
  420575:	out    0x9f,al
  420577:	push   esi
  420578:	xor    eax,0xefab7c96
  42057d:	stc    
  42057e:	in     eax,0x7f
  420580:	cmp    DWORD PTR [ecx+eax*2],ebx
  420583:	adc    edx,DWORD PTR [edx]
  420585:	int3   
  420586:	and    ebp,0xffffffef
  420589:	dec    edi
  42058a:	sub    al,0xd7
  42058c:	sbb    DWORD PTR [esi-0x5573c8bf],esi
  420592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420593:	push   esp
  420594:	popa   
  420595:	pushf  
  420596:	xor    BYTE PTR cs:[ecx-0x59],ah
  42059a:	add    eax,0xf1281d94
  42059f:	inc    esp
  4205a0:	into   
  4205a1:	ror    DWORD PTR ds:0x74224ccf,0xb5
  4205a8:	addr16 in eax,dx
  4205aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205ab:	jl     0x42053a
  4205ad:	and    DWORD PTR [esi+0x5755d0db],edi
  4205b3:	xor    ch,BYTE PTR [edx+0x7ac652db]
  4205b9:	sub    esp,DWORD PTR [ecx]
  4205bb:	test   ah,dl
  4205bd:	mov    DWORD PTR [edx],eax
  4205bf:	lods   al,BYTE PTR ds:[esi]
  4205c0:	js     0x4205a3
  4205c2:	pop    ds
  4205c3:	push   0xb2ed37ef
  4205c8:	pop    DWORD PTR [edi+0x23]
  4205cb:	retf   
  4205cc:	dec    eax
  4205cd:	ds repz scas al,BYTE PTR es:[edi]
  4205d0:	sbb    ebx,DWORD PTR [ecx+ecx*1]
  4205d3:	daa    
  4205d4:	and    dh,ah
  4205d6:	mov    ebx,0x96df79e0
  4205db:	jae    0x4205f1
  4205dd:	mov    cl,0x41
  4205df:	sbb    al,0x32
  4205e1:	loope  0x4205dd
  4205e3:	test   eax,0x76fe1ab6
  4205e8:	test   DWORD PTR [edi-0x6e],0x2dd2ba15
  4205ef:	jae    0x420650
  4205f1:	out    dx,al
  4205f2:	push   edi
  4205f3:	fldcw  WORD PTR [ebx+0x3eb80fb2]
  4205f9:	out    0xab,eax
  4205fb:	xchg   edi,eax
  4205fc:	xchg   esi,eax
  4205fd:	push   ecx
  4205fe:	push   edx
  4205ff:	sub    BYTE PTR [edi+edi*4],cl
  420602:	mov    BYTE PTR [ecx+0x1c],ah
  420605:	or     DWORD PTR [esi],edi
  420607:	cld    
  420608:	pushf  
  420609:	mov    eax,ds:0x4f4f65a3
  42060e:	and    BYTE PTR [esi],ch
  420610:	or     DWORD PTR [ebx-0x2d],eax
  420613:	push   edx
  420614:	jg     0x4205aa
  420616:	mul    BYTE PTR [edx-0x10]
  420619:	cmp    eax,0x9e4611fb
  42061e:	aad    0x2f
  420620:	lds    esi,FWORD PTR [ebp+0x1a]
  420623:	push   esi
  420624:	or     eax,0xa5b2887c
  420629:	xor    al,0x96
  42062b:	cmp    DWORD PTR [ebp-0xb],0x64
  42062f:	loopne 0x420635
  420631:	push   eax
  420632:	lods   al,BYTE PTR ds:[esi]
  420633:	mov    cl,0xc1
  420635:	mov    ds,WORD PTR [eax+ebp*4]
  420638:	jb     0x420696
  42063a:	jecxz  0x4205c4
  42063c:	in     al,dx
  42063d:	js     0x4205c6
  42063f:	(bad)  
  420640:	icebp  
  420641:	dec    di
  420643:	xchg   ecx,eax
  420644:	aaa    
  420645:	inc    ebx
  420646:	retf   
  420647:	popa   
  420648:	pop    ss
  420649:	scas   eax,DWORD PTR es:[edi]
  42064a:	xor    cl,bl
  42064c:	test   BYTE PTR [esi],al
  42064e:	jnp    0x4205e6
  420650:	dec    esi
  420651:	sub    BYTE PTR [edi+0x1b021f78],dh
  420657:	sub    BYTE PTR fs:[esi+0x4b],bl
  42065b:	sbb    DWORD PTR [esi],esi
  42065d:	xchg   ecx,eax
  42065e:	test   al,0x8a
  420660:	sub    DWORD PTR [ebx-0x5c804588],0x71
  420667:	sub    DWORD PTR [esi-0x73],esp
  42066a:	jo     0x420683
  42066c:	sub    BYTE PTR [esi-0x6cec3c8a],0x5c
  420673:	xchg   esp,eax
  420674:	dec    esi
  420675:	mov    BYTE PTR [ecx-0x4e],bl
  420678:	add    bh,cl
  42067a:	cmp    edi,0x3d
  42067d:	es mov dh,0xd9
  420680:	frstor [edi-0x7e]
  420683:	xchg   edx,eax
  420684:	mov    edi,0x56584ff8
  420689:	iret   
  42068a:	inc    edx
  42068b:	inc    edi
  42068c:	pop    es
  42068d:	cdq    
  42068e:	stc    
  42068f:	aaa    
  420690:	in     eax,0x64
  420692:	and    dl,ah
  420694:	test   al,0xd0
  420696:	push   ebp
  420697:	mov    bl,0x14
  420699:	mov    eax,DWORD PTR [ebp+0x6b268158]
  42069f:	adc    al,0xed
  4206a1:	out    0xb8,eax
  4206a3:	pop    ss
  4206a4:	ja     0x4206c9
  4206a6:	push   esi
  4206a7:	loop   0x4206d6
  4206a9:	pushf  
  4206aa:	int3   
  4206ab:	jbe    0x42064c
  4206ad:	sti    
  4206ae:	rcr    ebx,1
  4206b0:	inc    ebx
  4206b1:	mov    edi,0xc4fabe11
  4206b6:	mov    BYTE PTR [ecx+eiz*4+0x6b394a73],0x91
  4206be:	mov    DWORD PTR [esp+eax*8-0x4d6f9ae8],edx
  4206c5:	mov    ecx,0xc4f48004
  4206ca:	mov    ebp,0x5c9b8287
  4206cf:	fadd   st(6),st
  4206d1:	push   edi
  4206d2:	icebp  
  4206d3:	push   0x12489ecd
  4206d8:	and    DWORD PTR [edi+eiz*2+0x72],edx
  4206dc:	out    dx,eax
  4206dd:	pop    ecx
  4206de:	mov    esp,0xd7c703ab
  4206e3:	push   esi
  4206e4:	scas   eax,DWORD PTR es:[edi]
  4206e5:	int3   
  4206e6:	xor    BYTE PTR [ebp+0x5fa58c3b],bl
  4206ec:	icebp  
  4206ed:	sbb    DWORD PTR [esi-0x18c9db2f],eax
  4206f3:	pop    ebp
  4206f4:	retf   
  4206f5:	jmp    0x42067b
  4206f7:	rol    DWORD PTR [ecx-0x54],cl
  4206fa:	aaa    
  4206fb:	stc    
  4206fc:	dec    ecx
  4206fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206fe:	dec    ebx
  4206ff:	dec    esp
  420700:	adc    ecx,ebp
  420702:	das    
  420703:	enter  0x998d,0xde
  420707:	pusha  
  420708:	dec    ebp
  420709:	shl    BYTE PTR [ecx],cl
  42070b:	or     eax,0xe7d6d797
  420710:	fsubr  DWORD PTR [ecx-0x179dda25]
  420716:	(bad)  
  420717:	fstp   QWORD PTR [ecx+ecx*4+0x16]
  42071b:	inc    esi
  42071c:	and    edi,DWORD PTR [ecx]
  42071e:	push   esp
  42071f:	mov    bh,0xdf
  420721:	jb     0x4206f1
  420723:	dec    edx
  420724:	lods   al,BYTE PTR ds:[esi]
  420725:	mov    edx,0x35002945
  42072a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072b:	int    0x2c
  42072d:	mov    ch,0x76
  42072f:	aaa    
  420730:	and    eax,0x7f753950
  420735:	(bad)  
  420736:	jp     0x420794
  420738:	cmp    ebp,DWORD PTR [ebp-0x1d]
  42073b:	fs sahf 
  42073d:	int3   
  42073e:	cmp    eax,DWORD PTR [esi+0x6f310210]
  420744:	push   ecx
  420745:	mov    edi,0x5ca1333
  42074a:	push   eax
  42074b:	add    ch,bh
  42074d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074e:	repz cmp eax,0x9a892b4b
  420754:	add    eax,0x4e302d9
  420759:	mov    bh,0x0
  42075b:	sbb    DWORD PTR [esi+0x37],ecx
  42075e:	mov    al,ds:0xa4e305cd
  420763:	push   ds
  420764:	mov    ebp,0xbecc9e1
  420769:	je     0x42074f
  42076b:	push   0x6025629d
  420770:	in     eax,0x9e
  420772:	push   edi
  420773:	ja     0x4207e1
  420775:	inc    esp
  420776:	test   DWORD PTR [edi+ecx*2-0x576dd5cc],ebx
  42077d:	add    al,0x5c
  42077f:	xor    al,0x9d
  420781:	xor    al,0xff
  420783:	hlt    
  420784:	lods   al,BYTE PTR ds:[esi]
  420785:	mov    ecx,0xa3aa8d8d
  42078a:	(bad)
  42078d:	jae    0x4207dd
  42078f:	aaa    
  420790:	xor    edx,ebp
  420792:	adc    ch,BYTE PTR [eax+0x1c9b0c83]
  420798:	push   esi
  420799:	mov    ds:0x8ae6328b,eax
  42079e:	sbb    al,0x89
  4207a0:	dec    esp
  4207a1:	repz sbb al,0x14
  4207a4:	xor    al,0xd5
  4207a6:	adc    edx,ebx
  4207a8:	sub    ebp,DWORD PTR [eiz*1+0x4b092b22]
  4207af:	mov    esi,DWORD PTR [edx+0x2260597e]
  4207b5:	push   esp
  4207b6:	pop    es
  4207b7:	icebp  
  4207b8:	xchg   esi,eax
  4207b9:	shl    BYTE PTR [edx+esi*8],0xe9
  4207bd:	dec    edi
  4207be:	inc    esp
  4207bf:	jg     0x4207df
  4207c1:	xchg   esi,eax
  4207c2:	lea    edx,[ebx-0x2bb7d364]
  4207c8:	(bad)  
  4207c9:	and    BYTE PTR [ebp+0x65fb1088],bl
  4207cf:	adc    DWORD PTR [ecx+0x36ed8405],0x10
  4207d6:	push   esi
  4207d7:	inc    ebp
  4207d8:	adc    DWORD PTR [ecx-0x4b887f7d],eax
  4207de:	test   BYTE PTR [edi],bh
  4207e0:	adc    al,0x1b
  4207e2:	push   ds
  4207e3:	and    DWORD PTR ds:0xffbe2e23,ecx
  4207e9:	dec    esp
  4207ea:	outs   dx,BYTE PTR ds:[esi]
  4207eb:	test   BYTE PTR [ebp+ebp*2+0x74],0x64
  4207f0:	scas   al,BYTE PTR es:[edi]
  4207f1:	dec    esi
  4207f2:	loopne 0x4207f7
  4207f4:	xor    al,0x8a
  4207f6:	lods   eax,DWORD PTR ds:[esi]
  4207f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207f8:	ins    BYTE PTR es:[edi],dx
  4207f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207fa:	aam    0xa3
  4207fc:	shl    DWORD PTR [ebx+0x1f69e762],1
  420802:	mov    ds:0xe00c9a3a,eax
  420807:	leave  
  420808:	fsubr  st,st(7)
  42080a:	mov    ah,dh
  42080c:	mov    ebx,0x3f910856
  420811:	popa   
  420812:	push   ds
  420813:	add    edi,DWORD PTR [eax-0x32]
  420816:	or     esi,ecx
  420818:	mov    ecx,0xbe0f9e66
  42081d:	xchg   DWORD PTR [edi-0x679c7721],ecx
  420823:	not    dh
  420825:	add    eax,0xfe670d89
  42082a:	(bad)  
  42082b:	xor    eax,0x91a9d763
  420830:	in     al,dx
  420831:	(bad)  
  420832:	int    0x91
  420834:	daa    
  420835:	popf   
  420836:	mov    eax,0x5b1b3a91
  42083b:	adc    BYTE PTR [esp+eax*4],0x6d
  42083f:	(bad)  
  420840:	push   0x7d
  420842:	xor    BYTE PTR [eax],dl
  420844:	vhaddps ymm3,ymm5,YMMWORD PTR [eax]
  420848:	fcmovnu st,st(1)
  42084a:	(bad)  
  42084c:	in     al,dx
  42084d:	dec    eax
  42084e:	ins    DWORD PTR es:[edi],dx
  42084f:	fsubr  QWORD PTR [eax-0x7e]
  420852:	cmp    BYTE PTR [eax],dl
  420854:	adc    al,0x6f
  420856:	sub    ecx,ecx
  420858:	outs   dx,DWORD PTR ds:[esi]
  420859:	jmp    0x42085c
  42085b:	and    BYTE PTR [ecx+0x1eba0c29],ah
  420861:	call   0x3e99:0x37289e12
  420868:	jmp    0x17990c25
  42086d:	retf   0x2100
  420870:	test   eax,0x8c9e6e74
  420875:	cmp    DWORD PTR [edx+ebp*1],edx
  420878:	jle    0x420833
  42087a:	bound  ebp,QWORD PTR [edx]
  42087c:	retf   0x4637
  42087f:	inc    edx
  420880:	jmp    0x809e9982
  420885:	push   ds
  420886:	je     0x4208bb
  420888:	ins    BYTE PTR es:[edi],dx
  420889:	out    dx,eax
  42088a:	les    edi,FWORD PTR [ecx]
  42088c:	ret    
  42088d:	xor    BYTE PTR [esp+esi*8],ah
  420890:	mov    bl,BYTE PTR [ecx+0x6e]
  420893:	outs   dx,BYTE PTR es:[esi]
  420895:	push   ss
  420896:	dec    ecx
  420897:	mov    esi,0x27f79be8
  42089c:	push   edi
  42089d:	sbb    al,0xab
  42089f:	inc    DWORD PTR [esi-0x59]
  4208a2:	and    BYTE PTR ss:[ebx+0x6ef7832e],dh
  4208a9:	cs xchg ebp,eax
  4208ab:	inc    edx
  4208ac:	xchg   DWORD PTR [ecx-0x57],edx
  4208af:	mov    cl,0x4
  4208b1:	cmp    eax,0xa73b900f
  4208b6:	push   ebx
  4208b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208b8:	jmp    0xa33eb57f
  4208bd:	sbb    DWORD PTR [eax],0xb4591fcd
  4208c3:	aad    0xb5
  4208c5:	es mov ebx,0x81b0eb9
  4208cb:	lahf   
  4208cc:	inc    ebx
  4208cd:	mov    esi,0xba082eb8
  4208d2:	call   0x7f3d55ba
  4208d7:	cmp    BYTE PTR ds:0xd9711d18,bh
  4208dd:	sbb    ecx,DWORD PTR [edi+esi*2-0x62d6966c]
  4208e4:	(bad)  
  4208e5:	dec    eax
  4208e6:	inc    ebp
  4208e7:	jmp    0xa342d83c
  4208ec:	mov    bh,0x11
  4208ee:	(bad)  
  4208f1:	xchg   edi,eax
  4208f2:	push   ecx
  4208f3:	lock in al,dx
  4208f5:	imul   ecx,edx,0x17
  4208f8:	loope  0x420898
  4208fa:	cmp    BYTE PTR [ecx],ch
  4208fc:	mov    al,ds:0x8a870850
  420901:	fsub   DWORD PTR [eax]
  420903:	xchg   edi,eax
  420904:	ins    BYTE PTR es:[edi],dx
  420905:	xor    al,bh
  420907:	mov    edx,0x6851d155
  42090c:	cmp    DWORD PTR [ebx],ecx
  42090e:	mov    dh,0x9a
  420910:	or     dh,dh
  420912:	enter  0x76ce,0xbf
  420916:	pop    esi
  420917:	ror    BYTE PTR [ebp+0x30],1
  42091a:	outs   dx,BYTE PTR ds:[esi]
  42091b:	mov    ecx,0x95131534
  420920:	loop   0x420927
  420922:	mov    edx,DWORD PTR [esp+edx*1]
  420925:	hlt    
  420926:	pop    ebp
  420927:	lods   eax,DWORD PTR ds:[esi]
  420928:	push   edi
  420929:	leave  
  42092a:	push   esp
  42092b:	add    eax,0x2c6aac3
  420930:	mov    ch,0xef
  420932:	fnsave [edi-0x4a1ea161]
  420938:	fs xchg edi,eax
  42093a:	and    dl,BYTE PTR cs:[edi-0x41]
  42093e:	test   al,0x79
  420940:	cmp    DWORD PTR ds:0x35f8ef79,ebp
  420946:	inc    esi
  420947:	push   eax
  420948:	and    DWORD PTR [eax],edx
  42094a:	int3   
  42094b:	jmp    0x420963
  42094d:	(bad)  
  42094e:	fs pop ds
  420950:	push   ds
  420951:	mov    eax,ds:0x7f90473a
  420956:	dec    edx
  420957:	or     cl,BYTE PTR [ebp-0x6013660]
  42095d:	mov    ebx,0x2e2c0289
  420962:	xchg   DWORD PTR [edx-0x6b964e23],edi
  420968:	sbb    bl,BYTE PTR [edi+0x3c5f9f8d]
  42096e:	and    BYTE PTR [edi],ch
  420970:	loope  0x4209cc
  420972:	in     eax,dx
  420973:	xor    BYTE PTR [edx],dh
  420975:	mov    ebx,ecx
  420977:	fcom   QWORD PTR [esi]
  420979:	(bad)  
  42097a:	pop    ebx
  42097b:	inc    ebp
  42097c:	adc    BYTE PTR [ebp-0x45],bl
  42097f:	mov    ds:0x1f798412,eax
  420984:	test   eax,0x774b950a
  420989:	mov    eax,0xbc840f18
  42098e:	jbe    0x4209e6
  420990:	loop   0x420923
  420992:	cwde   
  420993:	dec    esi
  420994:	mov    ebx,0xda9d14de
  420999:	xchg   edx,eax
  42099a:	into   
  42099b:	add    dh,dl
  42099d:	dec    eax
  42099e:	cmp    DWORD PTR [esi],esp
  4209a0:	bound  ecx,QWORD PTR [edx]
  4209a2:	bound  edx,QWORD PTR [esi]
  4209a4:	(bad)  
  4209a6:	cs or  ah,dh
  4209a9:	mov    es,WORD PTR [esi+esi*4]
  4209ac:	and    al,0xf6
  4209ae:	pop    eax
  4209af:	clc    
  4209b0:	retf   
  4209b1:	xchg   edx,eax
  4209b2:	xchg   esi,eax
  4209b3:	mov    ah,0x64
  4209b5:	or     bh,BYTE PTR [esi-0x2b7f627c]
  4209bb:	mov    ecx,0x28804c41
  4209c0:	xor    DWORD PTR [esp+ecx*8-0x1f],ecx
  4209c4:	adc    DWORD PTR [edi-0x4dc16557],ebx
  4209ca:	out    dx,al
  4209cb:	dec    eax
  4209cc:	inc    eax
  4209cd:	jecxz  0x420a27
  4209cf:	lods   eax,DWORD PTR ds:[esi]
  4209d0:	jl     0x420a1a
  4209d2:	cmp    ecx,DWORD PTR [esi-0x4f]
  4209d5:	retf   
  4209d6:	mov    ebx,0x8593a815
  4209db:	dec    ebx
  4209dc:	mov    ecx,0xc94c19a4
  4209e1:	in     eax,0x7e
  4209e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e4:	int3   
  4209e5:	and    BYTE PTR [esp+ebp*2+0x7fdd7701],0x84
  4209ed:	add    al,0xea
  4209ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209f0:	icebp  
  4209f1:	pop    ecx
  4209f2:	sub    DWORD PTR [ebx-0x787e43a7],0xf90f59be
  4209fc:	pop    edx
  4209fd:	and    cl,BYTE PTR [esi+ebx*1]
  420a00:	pop    edx
  420a01:	or     cl,ah
  420a03:	fstp   st(5)
  420a05:	lods   eax,DWORD PTR ds:[esi]
  420a06:	dec    ebp
  420a07:	dec    esi
  420a08:	mov    ebp,0xe9eed49e
  420a0d:	jne    0x4209d4
  420a0f:	ret    0x35be
  420a12:	or     bh,BYTE PTR [ebp+0x627e9f2d]
  420a18:	cmp    ecx,DWORD PTR [esi+0x7b]
  420a1b:	mov    esi,0xc7b2da50
  420a20:	mov    eax,0xaddb83fe
  420a25:	aaa    
  420a26:	iret   
  420a27:	sbb    DWORD PTR [ecx-0x6b],0xef4304e5
  420a2e:	(bad)  
  420a2f:	jns    0x420a68
  420a31:	jg     0x4209f5
  420a33:	pop    edx
  420a34:	icebp  
  420a35:	dec    esi
  420a36:	fs fs std 
  420a39:	ds push ebx
  420a3b:	test   BYTE PTR ss:[esi],ah
  420a3e:	fisubr DWORD PTR [ebp+0x23]
  420a41:	xor    eax,0xcf7c56cb
  420a46:	gs stc 
  420a48:	and    cl,BYTE PTR [edi-0x5e656506]
  420a4e:	sub    DWORD PTR [ecx+ecx*8],esp
  420a51:	pop    ebp
  420a52:	sub    edx,ecx
  420a54:	xor    BYTE PTR [edx],dh
  420a56:	lods   al,BYTE PTR ds:[esi]
  420a57:	loopne 0x420a86
  420a59:	push   0xffffffac
  420a5b:	sub    bh,BYTE PTR [edi-0x24]
  420a5e:	and    DWORD PTR [edi+0xfa8b21],edi
  420a64:	dec    edi
  420a65:	(bad)  
  420a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a67:	mov    ah,0x8e
  420a69:	xchg   esp,eax
  420a6a:	out    dx,eax
  420a6b:	sbb    bl,ch
  420a6d:	shl    BYTE PTR [ebp-0x132c53e3],cl
  420a73:	mov    gs,WORD PTR [edx-0x2407e990]
  420a79:	push   ecx
  420a7a:	mov    ds:0x74bfec53,al
  420a7f:	or     edi,DWORD PTR [ecx]
  420a81:	dec    edx
  420a82:	fwait
  420a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a84:	es gs in eax,dx
  420a87:	sub    ebp,DWORD PTR [eax]
  420a89:	fs push es
  420a8b:	sub    eax,0x4b27408f
  420a90:	pop    ds
  420a91:	mov    ds:0x666f366d,al
  420a96:	sub    eax,0xd2ce7c93
  420a9b:	and    DWORD PTR [ebp-0x22],ecx
  420a9e:	push   esp
  420a9f:	imul   esi,DWORD PTR [eax+0x3302ff4d],0x313c3fab
  420aa9:	sub    eax,0x6f88e8f1
  420aae:	mov    BYTE PTR [esp+ecx*2+0x31],0x50
  420ab3:	cs hlt 
  420ab5:	stos   DWORD PTR es:[edi],eax
  420ab6:	jecxz  0x420aaa
  420ab8:	in     eax,dx
  420ab9:	adc    eax,DWORD PTR [edi-0x72]
  420abc:	cmp    ecx,0xffffffba
  420abf:	ds in  eax,dx
  420ac1:	mov    dh,BYTE PTR [edx]
  420ac3:	mov    cl,0x89
  420ac5:	scas   eax,DWORD PTR es:[edi]
  420ac6:	push   0xffffffb7
  420ac8:	jae    0x420a98
  420aca:	dec    esp
  420acb:	retf   0xc1fd
  420ace:	(bad)  [edi]
  420ad0:	loopne 0x420ad6
  420ad2:	(bad)  
  420ad3:	ss push 0x89e23e86
  420ad9:	arpl   WORD PTR [ebx],cx
  420adb:	or     eax,0x607e6c1
  420ae0:	ret    0x37e
  420ae3:	inc    eax
  420ae4:	xchg   DWORD PTR [edx],ecx
  420ae6:	pop    esi
  420ae7:	or     al,0x72
  420ae9:	push   ss
  420aea:	xchg   edx,eax
  420aeb:	test   BYTE PTR [ebx],dh
  420aed:	test   eax,0xeb37a251
  420af2:	push   cs
  420af3:	xchg   esi,eax
  420af4:	or     ah,BYTE PTR [edx-0x80ac600]
  420afa:	scas   eax,DWORD PTR es:[edi]
  420afb:	adc    esp,DWORD PTR [ecx+0x44]
  420afe:	je     0x420ad1
  420b00:	xor    DWORD PTR [ebx+eiz*4+0x31e4ce1d],ebp
  420b07:	leave  
  420b08:	in     al,0x8
  420b0a:	sub    BYTE PTR [edi+0x62d23ad0],dh
  420b10:	stos   BYTE PTR es:[edi],al
  420b11:	or     DWORD PTR [ebp+ebp*1-0x528b55d2],0xffffffdd
  420b19:	call   0xa0bf:0xc7792b77
  420b20:	sub    ecx,DWORD PTR [edi]
  420b22:	mov    ebx,0x5bd3eb4e
  420b27:	mov    DWORD PTR [eax],esi
  420b29:	iret   
  420b2a:	jp     0x420ab1
  420b2c:	adc    DWORD PTR [edx-0x34deb31f],edi
  420b32:	jbe    0x420b83
  420b34:	hlt    
  420b35:	cmp    al,0x16
  420b37:	push   ss
  420b38:	test   eax,0x4d91efeb
  420b3d:	scas   al,BYTE PTR es:[edi]
  420b3e:	xchg   edi,eax
  420b3f:	fidivr DWORD PTR [eax-0x1121a90d]
  420b45:	dec    esp
  420b46:	xchg   ebx,eax
  420b47:	inc    ecx
  420b48:	aad    0xf4
  420b4a:	sar    DWORD PTR ds:0xed15578a,0x26
  420b51:	(bad)  
  420b52:	or     eax,0xe0a69868
  420b57:	mov    DWORD PTR [eax],esp
  420b59:	mov    esi,edx
  420b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b5c:	adc    bl,dl
  420b5e:	add    eax,0x389bb7e
  420b63:	repz mov ch,0xd8
  420b66:	outs   dx,DWORD PTR ds:[esi]
  420b67:	add    eax,edx
  420b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b6a:	lods   eax,DWORD PTR ds:[esi]
  420b6b:	repnz addr16 aad 0xf2
  420b6f:	mov    dh,0x0
  420b71:	cmp    BYTE PTR [edi],bl
  420b73:	int    0x65
  420b75:	pop    eax
  420b76:	call   0x6137:0x5a86272c
  420b7d:	fbstp  TBYTE PTR [edi]
  420b7f:	outs   dx,BYTE PTR cs:[esi]
  420b81:	lods   eax,DWORD PTR ds:[esi]
  420b82:	cmp    bl,al
  420b84:	int    0x56
  420b86:	clc    
  420b87:	mov    edi,0xf318d4f1
  420b8c:	xchg   ebp,eax
  420b8d:	mov    BYTE PTR [eax],ch
  420b8f:	fsubr  DWORD PTR [ebx]
  420b91:	dec    edi
  420b93:	test   DWORD PTR [esi],eax
  420b95:	call   0xe2798c41
  420b9a:	je     0x420b4c
  420b9c:	ds mov ebp,0xc47bc5d4
  420ba2:	jnp    0x420b57
  420ba4:	xor    al,ch
  420ba6:	fmulp  st(1),st
  420ba8:	xor    esi,DWORD PTR [esi-0x1fc455bc]
  420bae:	dec    ebp
  420baf:	push   esi
  420bb0:	and    ebp,DWORD PTR [ecx]
  420bb2:	data16 fistp QWORD PTR [edi]
  420bb5:	dec    BYTE PTR ds:[edi-0x6cc88eb8]
  420bbc:	in     eax,0xd
  420bbe:	jmp    0xde2d:0x98129516
  420bc5:	ficom  WORD PTR [edi]
  420bc7:	in     al,dx
  420bc8:	lock das 
  420bca:	adc    bl,BYTE PTR [ebp+0x7b]
  420bcd:	lea    ecx,[ecx]
  420bcf:	mov    ch,0xb8
  420bd1:	(bad)  
  420bd2:	sub    BYTE PTR [edx-0x726784d6],bl
  420bd8:	gs cmc 
  420bda:	aas    
  420bdb:	test   DWORD PTR [edi+ecx*1+0x3b239309],0x6d9c78ec
  420be6:	ins    DWORD PTR es:[edi],dx
  420be7:	or     esp,edx
  420be9:	aaa    
  420bea:	cdq    
  420beb:	push   ss
  420bec:	ror    DWORD PTR [eax+0x26],1
  420bef:	mov    bh,0x80
  420bf1:	mov    bh,0xf4
  420bf3:	ss or  al,0x63
  420bf6:	fisubr WORD PTR [ecx-0x35]
  420bf9:	sahf   
  420bfa:	or     ebp,DWORD PTR [edx-0x2b98ecf7]
  420c00:	aaa    
  420c01:	das    
  420c02:	cdq    
  420c03:	push   ds
  420c04:	mov    ebx,0x988b4f69
  420c09:	jp     0x420baf
  420c0b:	dec    ecx
  420c0c:	inc    esp
  420c0d:	mov    bh,0x1a
  420c0f:	sbb    cl,dh
  420c11:	sub    dl,ah
  420c13:	aam    0x50
  420c15:	ss aam 0x6
  420c18:	xor    BYTE PTR [edi-0x4ee0b176],al
  420c1e:	inc    edi
  420c1f:	dec    ebp
  420c20:	mov    edi,0x4127f4e2
  420c25:	push   ebx
  420c26:	iret   
  420c27:	mov    dh,0xe6
  420c29:	out    0xbd,al
  420c2b:	mov    esp,0x42ae09af
  420c30:	loop   0x420c03
  420c32:	jne    0x420c40
  420c34:	adc    bl,BYTE PTR [eax+0x68]
  420c37:	push   esp
  420c38:	jno    0x420c35
  420c3a:	inc    edx
  420c3b:	sbb    esp,DWORD PTR [ecx]
  420c3d:	aam    0xb5
  420c3f:	(bad)  [edi+edx*8-0x1d]
  420c43:	in     eax,dx
  420c44:	and    esp,DWORD PTR [ebx+0x61248e13]
  420c4a:	or     al,0x4
  420c4c:	je     0x420c38
  420c4e:	in     al,0x70
  420c50:	jecxz  0x420c82
  420c52:	xlat   BYTE PTR ds:[ebx]
  420c53:	sub    al,ch
  420c55:	adc    DWORD PTR [edx-0x64da929],eax
  420c5b:	sub    al,0x26
  420c5d:	cmp    cl,ah
  420c5f:	pop    edx
  420c60:	ret    0x7c75
  420c63:	div    DWORD PTR [eax+0x12]
  420c66:	scas   eax,DWORD PTR es:[edi]
  420c67:	dec    esi
  420c68:	inc    ebp
  420c69:	popa   
  420c6a:	iret   
  420c6b:	out    dx,eax
  420c6c:	fisttp DWORD PTR [ebx-0x6b]
  420c6f:	test   ch,dh
  420c71:	(bad)  
  420c72:	xchg   edx,eax
  420c73:	sub    ebx,DWORD PTR [edi-0x3e]
  420c76:	aas    
  420c77:	fs dec edx
  420c79:	jnp    0x420c83
  420c7b:	das    
  420c7c:	dec    ecx
  420c7d:	das    
  420c7e:	adc    al,0x2b
  420c80:	adc    bh,ch
  420c82:	jo     0x420cd7
  420c84:	lock fidivr DWORD PTR [esi-0x79]
  420c88:	stc    
  420c89:	xchg   ebp,ebx
  420c8b:	xchg   esp,eax
  420c8c:	(bad)
  420c8f:	xor    esi,DWORD PTR [edi-0x16]
  420c92:	jne    0x420cbc
  420c94:	lea    eax,[ecx-0x37a2a4d3]
  420c9a:	and    ecx,DWORD PTR [edx-0x78]
  420c9d:	xchg   edx,eax
  420c9e:	pop    ds
  420c9f:	xchg   ecx,eax
  420ca0:	pop    eax
  420ca1:	pushf  
  420ca2:	pop    es
  420ca3:	pop    ebx
  420ca4:	sbb    cl,BYTE PTR [edi+0x37]
  420ca7:	inc    eax
  420ca8:	jo     0x420cb3
  420caa:	es rcl DWORD PTR gs:[ebx-0x7bacced1],0x6d
  420cb3:	dec    ebx
  420cb4:	sub    al,0x95
  420cb6:	cld    
  420cb7:	push   ds
  420cb8:	fnstcw WORD PTR [edi]
  420cba:	mov    al,ds:0x773d2440
  420cbf:	cmp    BYTE PTR [edx],dh
  420cc1:	lahf   
  420cc2:	pop    ds
  420cc3:	pop    ecx
  420cc4:	scas   al,BYTE PTR es:[edi]
  420cc5:	dec    esi
  420cc6:	push   esi
  420cc7:	call   0x326:0xbd77c428
  420cce:	sub    BYTE PTR [ebp+0x44cdf0ef],al
  420cd4:	bound  esi,QWORD PTR [esp+ebp*8+0x6d]
  420cd8:	cmp    eax,0xf2e426ba
  420cdd:	push   edx
  420cde:	ret    
  420cdf:	inc    DWORD PTR [esi+0x3d1de424]
  420ce5:	sbb    BYTE PTR [edx+0xf],bl
  420ce8:	iret   
  420ce9:	xor    DWORD PTR [edi+0x49],ebx
  420cec:	jno    0x420cc3
  420cee:	loope  0x420cd7
  420cf0:	pusha  
  420cf1:	lds    esi,FWORD PTR ds:0x6fb04e6a
  420cf7:	stos   DWORD PTR es:[edi],eax
  420cf8:	nop
  420cf9:	push   ebx
  420cfa:	daa    
  420cfb:	stc    
  420cfc:	xor    eax,esi
  420cfe:	sti    
  420cff:	cmc    
  420d00:	xchg   edi,eax
  420d01:	push   0x7d929f82
  420d06:	inc    esp
  420d07:	inc    ebx
  420d08:	addr16 call 0x857d:0xbd5308e6
  420d10:	cli    
  420d11:	adc    DWORD PTR [esi],0x24
  420d14:	repz das 
  420d16:	mov    eax,ds:0x6a804570
  420d1b:	arpl   WORD PTR ds:0xc6d8a90a,ax
  420d21:	inc    edi
  420d22:	cmovb  ebx,DWORD PTR [edx]
  420d25:	retf   
  420d26:	fldenv [esi-0x44]
  420d29:	repz pop es
  420d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d2c:	inc    esp
  420d2d:	xchg   ecx,eax
  420d2e:	sti    
  420d2f:	rol    BYTE PTR [esi+0xefe2d88],cl
  420d35:	mov    ds:0x5f8edf02,eax
  420d3a:	addr16 loop 0x420d61
  420d3d:	pop    eax
  420d3e:	out    0x65,eax
  420d40:	js     0x420cf1
  420d42:	dec    ebp
  420d43:	jbe    0x420cd2
  420d45:	cmp    ebp,DWORD PTR [ebp-0x5]
  420d48:	jl     0x420d16
  420d4a:	dec    edx
  420d4b:	daa    
  420d4c:	mov    cl,0xea
  420d4e:	ficomp DWORD PTR [esp+esi*4+0x4a686192]
  420d55:	aas    
  420d56:	mov    edx,0x956a519b
  420d5b:	add    bh,bl
  420d5d:	aaa    
  420d5e:	xchg   edi,eax
  420d5f:	out    dx,eax
  420d60:	into   
  420d61:	daa    
  420d62:	mov    esi,0xdd4ee7b6
  420d67:	ds cmc 
  420d69:	test   eax,0xb8110c1b
  420d6e:	iret   
  420d6f:	add    al,0x70
  420d71:	jnp    0x420dca
  420d73:	fstp   QWORD PTR [ebp+0x6ecc348d]
  420d79:	mov    ch,0x15
  420d7b:	pop    esi
  420d7c:	je     0x420d64
  420d7e:	pop    ecx
  420d7f:	jbe    0x420d0a
  420d81:	add    eax,0x754a0a8f
  420d86:	repz ja 0x420deb
  420d89:	jp     0x420d84
  420d8b:	ins    BYTE PTR es:[edi],dx
  420d8c:	loop   0x420dac
  420d8e:	cli    
  420d8f:	mov    ebp,0xf23d8d46
  420d94:	mov    ecx,0x7c13ac01
  420d99:	sbb    eax,0xa4e9667b
  420d9e:	pop    ecx
  420d9f:	mov    cl,0xb
  420da1:	iret   
  420da2:	mov    ebx,0xd7be3d45
  420da7:	xor    ebp,DWORD PTR [ecx+0x27]
  420daa:	push   ss
  420dab:	lea    ebp,[esi]
  420dad:	or     BYTE PTR [edx],dl
  420daf:	xor    al,0xee
  420db1:	mov    esp,0x76d13dc8
  420db6:	int3   
  420db7:	sahf   
  420db8:	sar    edx,0xa5
  420dbb:	iret   
  420dbc:	lock pop edx
  420dbe:	outs   dx,BYTE PTR ds:[esi]
  420dbf:	sub    al,0x51
  420dc1:	add    ch,BYTE PTR [esp+edx*2]
  420dc4:	int    0x29
  420dc6:	test   BYTE PTR [edx+0x6167adf9],0xdc
  420dcd:	gs inc eax
  420dcf:	loope  0x420e21
  420dd1:	mov    eax,0xf693a648
  420dd6:	add    al,BYTE PTR ds:0xb6026c31
  420ddc:	daa    
  420ddd:	xor    eax,0x1319562
  420de2:	into   
  420de3:	sti    
  420de4:	test   edi,ebp
  420de6:	nop
  420de7:	(bad)  
  420de9:	adc    DWORD PTR [ebx+0x7606a86],0x13
  420df0:	idiv   BYTE PTR [esi-0x1ce5cdf7]
  420df6:	sub    BYTE PTR [edi-0x7bda35b3],bh
  420dfc:	std    
  420dfd:	jae    0x420e71
  420dff:	xchg   ebx,eax
  420e00:	sub    DWORD PTR [edx+0x21],ebp
  420e03:	sbb    ah,ah
  420e05:	add    edi,DWORD PTR cs:[esi-0x12]
  420e09:	xor    bh,0x53
  420e0c:	mov    edi,0x83194a5
  420e11:	(bad)  
  420e12:	sub    eax,0x1b5c84af
  420e17:	outs   dx,BYTE PTR ds:[esi]
  420e18:	pop    ebx
  420e19:	adc    dl,BYTE PTR [ebx-0x412f5d08]
  420e1f:	mov    eax,0x682edcb1
  420e24:	sahf   
  420e25:	repnz std 
  420e27:	arpl   sp,di
  420e29:	adc    al,0x2d
  420e2b:	loope  0x420e52
  420e2d:	fbld   TBYTE PTR [eax]
  420e2f:	lods   al,BYTE PTR ds:[esi]
  420e30:	ins    BYTE PTR es:[edi],dx
  420e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e32:	inc    eax
  420e33:	sbb    BYTE PTR [ecx+0x33],bh
  420e36:	jb     0x420dbe
  420e38:	xchg   ebx,eax
  420e39:	push   ebx
  420e3a:	jne    0x420e93
  420e3c:	push   ds
  420e3d:	mov    ds:0xcfad4db1,eax
  420e42:	enter  0xf812,0x43
  420e46:	imul   esi,DWORD PTR ds:0x3fdcf827,0x7804265c
  420e50:	clc    
  420e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e52:	and    BYTE PTR [edi-0x71],dl
  420e55:	push   ss
  420e56:	scas   al,BYTE PTR es:[edi]
  420e57:	bound  eax,QWORD PTR [edi+ecx*8-0x55e03d38]
  420e5e:	sbb    ecx,DWORD PTR [eax-0x22]
  420e61:	cmp    ecx,DWORD PTR [edx+0x3e45103b]
  420e67:	mov    esi,0xed9cb518
  420e6c:	mov    eax,ds:0x55ff52fd
  420e71:	ds addr16 adc esp,esi
  420e75:	mov    al,ds:0x6b3bd703
  420e7a:	js     0x420ee1
  420e7c:	push   eax
  420e7d:	sar    BYTE PTR [edi],0x73
  420e80:	test   DWORD PTR [ebx+ecx*1+0x40],eax
  420e84:	fdivp  st(2),st
  420e86:	or     cl,BYTE PTR [ecx+edi*4]
  420e89:	mov    edx,eax
  420e8b:	or     DWORD PTR [ebp-0x5f],edi
  420e8e:	jecxz  0x420e94
  420e90:	dec    esp
  420e92:	fld    TBYTE PTR [esi+0x15]
  420e95:	push   0x72
  420e97:	(bad)  
  420e98:	adc    edi,DWORD PTR [edx-0x6ce32abb]
  420e9e:	popa   
  420e9f:	mov    BYTE PTR [eax],al
  420ea1:	(bad)  
  420ea3:	fbld   TBYTE PTR [edx-0x5a]
  420ea6:	dec    ebp
  420ea7:	lea    esp,[eax-0x6e]
  420eaa:	or     DWORD PTR [eax-0x6c],ecx
  420ead:	mov    dl,0x32
  420eaf:	xchg   edi,eax
  420eb0:	data16 and BYTE PTR [ebx-0x35],bh
  420eb4:	push   ds
  420eb5:	retf   
  420eb6:	test   eax,0xf37537bd
  420ebb:	inc    ecx
  420ebc:	mov    edx,0x5a4fa848
  420ec1:	icebp  
  420ec2:	xlat   BYTE PTR ds:[ebx]
  420ec3:	fwait
  420ec4:	mov    al,ds:0x29a29a53
  420ec9:	ror    BYTE PTR [eax+ecx*2+0x6f0e3d2c],1
  420ed0:	scas   eax,DWORD PTR es:[edi]
  420ed1:	push   ebp
  420ed2:	cmp    BYTE PTR cs:0x75c5cf66,ah
  420ed9:	retf   
  420eda:	ds adc eax,0x61307b06
  420ee0:	imul   ebx,DWORD PTR [edx-0x10d5b7bb],0x186c1498
  420eea:	je     0x420ec6
  420eec:	inc    ebx
  420eed:	fld    DWORD PTR ds:[edi]
  420ef0:	jmp    0xff317e16
  420ef5:	aad    0x2e
  420ef7:	xchg   ecx,eax
  420ef8:	(bad)  
  420ef9:	fistp  DWORD PTR [ebx-0xf]
  420efc:	ret    
  420efd:	jno    0x420f3a
  420eff:	test   BYTE PTR [esi+edi*2-0x7724467f],0x90
  420f07:	sub    esi,DWORD PTR [edx]
  420f09:	xor    DWORD PTR [edi+0x2921258],ecx
  420f0f:	cld    
  420f10:	mov    dl,0xac
  420f12:	sahf   
  420f13:	jmp    0x8011:0x5ad0f210
  420f1a:	xor    al,0x67
  420f1c:	in     al,0xe8
  420f1e:	ficom  WORD PTR [edx]
  420f20:	adc    cl,bl
  420f22:	sub    al,0x4a
  420f24:	call   0x1e2b:0x7a9b4c74
  420f2b:	pop    es
  420f2c:	mov    esi,0x3b601700
  420f31:	out    0x50,al
  420f33:	loope  0x420fa2
  420f35:	inc    esi
  420f36:	std    
  420f37:	loope  0x420f69
  420f39:	(bad)  
  420f3a:	std    
  420f3b:	adc    BYTE PTR [eax+0x5c],ch
  420f3e:	xlat   BYTE PTR ds:[ebx]
  420f3f:	imul   ebp,DWORD PTR [edx-0x6df2b831],0x332cddcc
  420f49:	jno    0x420f8d
  420f4b:	mov    ah,0x26
  420f4d:	addr16 test al,0x8d
  420f50:	and    eax,0xa2b3714d
  420f55:	jge    0x420fcd
  420f57:	dec    edi
  420f58:	lock bound esi,QWORD PTR [ebp-0x331912f9]
  420f5f:	adc    esi,edi
  420f61:	retf   0x3d63
  420f64:	stos   BYTE PTR es:[edi],al
  420f65:	xchg   ebx,eax
  420f66:	out    dx,eax
  420f67:	out    0xea,al
  420f69:	or     al,0x3c
  420f6b:	and    DWORD PTR [edx-0x27],0xa646674c
  420f72:	xor    ebp,DWORD PTR [ecx-0x38114caa]
  420f78:	xchg   esi,eax
  420f79:	pop    es
  420f7a:	imul   eax,DWORD PTR [ecx+esi*4],0xdd639dbb
  420f81:	jbe    0x420feb
  420f83:	inc    ebp
  420f84:	loopne 0x420f51
  420f86:	sbb    dl,BYTE PTR [eax]
  420f88:	xchg   ebp,eax
  420f89:	in     al,dx
  420f8a:	sub    BYTE PTR ds:0x60bbb664,cl
  420f90:	xlat   BYTE PTR ds:[ebx]
  420f91:	aad    0xb6
  420f93:	loope  0x420f6d
  420f95:	sbb    ch,BYTE PTR [edx-0x7deb69db]
  420f9b:	mov    al,ds:0x797aba05
  420fa0:	xor    ah,BYTE PTR fs:[eax+0x3]
  420fa4:	sub    eax,0x794c21e5
  420fa9:	ret    
  420faa:	push   edi
  420fab:	retf   
  420fac:	xchg   esi,eax
  420fad:	shl    DWORD PTR [ebp-0x207586af],0x2
  420fb4:	lea    edi,gs:[ebx-0x41]
  420fb8:	(bad)  
  420fba:	pop    es
  420fbb:	arpl   WORD PTR [edi],di
  420fbd:	stos   DWORD PTR es:[edi],eax
  420fbe:	mov    ds:0xfd2e66e9,eax
  420fc3:	mov    esi,0xfb28944b
  420fc8:	into   
  420fc9:	lock push eax
  420fcb:	cwde   
  420fcc:	adc    al,0x38
  420fce:	(bad)  
  420fcf:	pushf  
  420fd0:	or     esi,DWORD PTR [ebx-0x35]
  420fd3:	test   al,0xf3
  420fd5:	jl     0x420fb5
  420fd7:	and    dh,ch
  420fd9:	cmp    DWORD PTR ds:0x959b68a9,esi
  420fdf:	mov    dl,0x7a
  420fe1:	or     ebx,DWORD PTR [eax+ecx*8]
  420fe4:	fstp   QWORD PTR [esi]
  420fe6:	nop
  420fe7:	inc    ebp
  420fe8:	les    ecx,FWORD PTR [ebx]
  420fea:	inc    BYTE PTR [ebx-0x979ef36]
  420ff0:	bound  esi,QWORD PTR [eax]
  420ff2:	dec    ecx
  420ff3:	pop    ebx
  420ff4:	pushf  
  420ff5:	scas   al,BYTE PTR es:[edi]
  420ff6:	mov    esi,0xda64a995
  420ffb:	shl    ah,1
  420ffd:	fidivr DWORD PTR [edx]
  420fff:	scas   eax,DWORD PTR es:[edi]
  421000:	and    eax,0x28e89568
  421005:	aaa    
  421006:	inc    esp
  421007:	inc    ebp
  421008:	inc    eax
  421009:	in     al,dx
  42100a:	(bad)  
  42100c:	xor    DWORD PTR [edi-0x6ccb9d06],eax
  421012:	rol    BYTE PTR [ecx-0x4b],0xb2
  421016:	loope  0x420fa1
  421018:	ret    0xe3c6
  42101b:	cmp    ah,BYTE PTR [edx-0x20]
  42101e:	xchg   esi,eax
  42101f:	adc    al,0xb2
  421021:	cdq    
  421022:	(bad)  
  421023:	sbb    DWORD PTR [eax+0x68],esp
  421026:	hlt    
  421027:	cmp    al,0x64
  421029:	cmp    eax,DWORD PTR [ecx]
  42102b:	inc    esp
  42102c:	loop   0x420ff4
  42102e:	xchg   edx,eax
  42102f:	xchg   ebp,eax
  421030:	and    ch,BYTE PTR [edi]
  421032:	xchg   edx,eax
  421033:	fwait
  421034:	dec    ebp
  421035:	sbb    edi,DWORD PTR [edi+0x6543b6d0]
  42103b:	push   ecx
  42103c:	cdq    
  42103d:	retf   
  42103e:	or     eax,ebx
  421040:	pop    ds
  421041:	(bad)  
  421042:	jae    0x421031
  421044:	fs mov ebx,0x74b68ccd
  42104a:	sub    bl,BYTE PTR [esi]
  42104c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42104d:	aam    0x4b
  42104f:	loope  0x4210ca
  421051:	test   DWORD PTR [ecx],ebx
  421053:	fwait
  421054:	xchg   ebp,eax
  421055:	out    0x4a,eax
  421057:	xor    eax,0x53c15d02
  42105c:	lock mov ds:0x3a1a9c65,eax
  421062:	cmp    DWORD PTR [edi-0x80],ebp
  421065:	(bad)  
  421066:	xchg   esp,eax
  421067:	aad    0xa4
  421069:	adc    al,0x6e
  42106b:	lods   al,BYTE PTR ds:[esi]
  42106c:	adc    esi,ebx
  42106e:	inc    ebp
  42106f:	out    dx,al
  421070:	xor    esp,ecx
  421072:	popa   
  421073:	fild   QWORD PTR [edx+0x3b]
  421076:	int3   
  421077:	and    ah,ch
  421079:	adc    DWORD PTR [eax-0x54],ebp
  42107c:	jb     0x421074
  42107e:	pop    es
  42107f:	popf   
  421080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421081:	int3   
  421082:	mov    dl,0x85
  421084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421085:	xchg   esi,eax
  421086:	aas    
  421087:	cmp    BYTE PTR [ecx+0x35a64804],dh
  42108d:	dec    ebp
  42108e:	and    eax,0x43612dbf
  421093:	pusha  
  421094:	sub    eax,0x87db3df2
  421099:	popf   
  42109a:	lahf   
  42109b:	pop    ecx
  42109c:	mov    eax,ds:0x7872dd76
  4210a1:	or     ah,bh
  4210a3:	gs xor ecx,edx
  4210a6:	fsubr  QWORD PTR [edi]
  4210a8:	mov    esi,0xf160d1c3
  4210ad:	pop    ss
  4210ae:	mov    dl,0x4
  4210b0:	inc    ebx
  4210b1:	ss retf 0xe593
  4210b5:	xor    DWORD PTR [eax-0x68613f6b],0xa286ff4c
  4210bf:	inc    eax
  4210c0:	fcomp  DWORD PTR [ebx+0x48]
  4210c3:	mov    ebp,0xbd768c78
  4210c8:	(bad)  [edi-0x5b]
  4210cb:	xor    BYTE PTR [edx],0x3
  4210ce:	sub    DWORD PTR [ebx],ebp
  4210d0:	sbb    BYTE PTR [edx],cl
  4210d2:	lea    edx,[edx-0x2d28791c]
  4210d8:	lahf   
  4210d9:	lea    esi,[ecx-0x20]
  4210dc:	dec    ecx
  4210dd:	sar    DWORD PTR [edi-0x38addabd],cl
  4210e3:	add    DWORD PTR [edx+0x9],ebp
  4210e6:	push   0x66
  4210e8:	jae    0x4210a8
  4210ea:	jge    0x42107f
  4210ec:	mov    dh,0x4
  4210ee:	ss jnp 0x4210e8
  4210f1:	test   DWORD PTR [esi],edx
  4210f3:	daa    
  4210f4:	dec    ecx
  4210f5:	ins    DWORD PTR es:[edi],dx
  4210f6:	(bad)  
  4210f7:	jecxz  0x421170
  4210f9:	pop    esp
  4210fa:	pop    es
  4210fb:	sbb    eax,esp
  4210fd:	jg     0x421123
  4210ff:	dec    ebp
  421100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421101:	out    dx,eax
  421102:	push   0x114f0849
  421107:	inc    ecx
  421108:	mov    eax,ds:0xee1008e9
  42110d:	dec    ecx
  42110e:	rcr    BYTE PTR [esi+0x4caedfa7],0x6f
  421115:	xchg   BYTE PTR [ebx],dh
  421117:	xchg   ecx,eax
  421118:	sub    BYTE PTR [ecx+eax*1],cl
  42111b:	xor    ebx,DWORD PTR [edx+0x761414ad]
  421121:	mov    ecx,0x12b6209c
  421126:	stc    
  421127:	hlt    
  421128:	ja     0x4211a8
  42112a:	int    0xf1
  42112c:	pop    ebp
  42112d:	dec    edx
  42112e:	fninit 
  421130:	sbb    edx,DWORD PTR [ebp+0x49]
  421133:	lock lock jmp 0x4ae7:0x3d181f1d
  42113c:	cdq    
  42113d:	add    al,0xeb
  42113f:	std    
  421140:	outs   dx,DWORD PTR ds:[esi]
  421141:	es add ecx,ecx
  421144:	jl     0x421143
  421146:	dec    esp
  421147:	pop    eax
  421148:	push   esp
  421149:	mov    dl,0x5
  42114b:	test   DWORD PTR [eax+0x1730de3],edx
  421151:	std    
  421152:	dec    edx
  421153:	sbb    DWORD PTR [edi-0x2d7285bc],0xffffffbd
  42115a:	retf   0xa4e8
  42115d:	cmp    al,BYTE PTR [edi]
  42115f:	rol    BYTE PTR [edi-0x5f],cl
  421162:	fsubr  QWORD PTR ds:0xa814d69f
  421168:	xor    dh,BYTE PTR [eax-0x4738774a]
  42116e:	pop    eax
  42116f:	push   ds
  421170:	leave  
  421171:	cmp    DWORD PTR [edi+0x65],edi
  421174:	mov    eax,ds:0x90533b9b
  421179:	ret    0x90bb
  42117c:	pop    es
  42117d:	sbb    edx,ebx
  42117f:	push   ebp
  421180:	imul   BYTE PTR [esi-0x22]
  421183:	lods   eax,DWORD PTR ds:[esi]
  421184:	ret    
  421185:	cs push esp
  421187:	jmp    0xfdbf:0x3995f45c
  42118e:	adc    eax,0x8e6d4c5a
  421193:	dec    ebx
  421194:	push   ecx
  421195:	inc    esi
  421196:	shl    eax,0x19
  421199:	test   dl,0xff
  42119c:	push   cs
  42119d:	pop    esp
  42119e:	and    edx,DWORD PTR [esi+0x7473cc2d]
  4211a4:	mov    ebp,0x7271978
  4211a9:	fsubrp st(2),st
  4211ab:	or     DWORD PTR [ebp-0x45],0x34
  4211af:	lods   eax,DWORD PTR ds:[esi]
  4211b0:	cmp    bh,BYTE PTR [edx-0x65ade368]
  4211b6:	jecxz  0x421188
  4211b8:	loop   0x4211af
  4211ba:	pop    ss
  4211bb:	pop    ebx
  4211bc:	push   edi
  4211bd:	aam    0xcc
  4211bf:	sub    eax,0xa229ab2b
  4211c4:	fdiv   st(2),st
  4211c6:	sub    al,BYTE PTR [edi]
  4211c8:	leave  
  4211c9:	enter  0x33bd,0x7c
  4211cd:	ret    0xe8be
  4211d0:	call   0xb791d43c
  4211d5:	lock stos BYTE PTR es:[edi],al
  4211d7:	sub    al,0x6b
  4211d9:	aam    0xdd
  4211db:	mov    ds:0xb99eca27,eax
  4211e0:	pop    ds
  4211e1:	loopne 0x421196
  4211e3:	add    BYTE PTR [ecx+0x76ce780f],cl
  4211e9:	sub    al,0x9d
  4211eb:	(bad)  
  4211ed:	xor    eax,0x81c55a42
  4211f2:	shl    BYTE PTR [ebx+0x30ea7275],cl
  4211f8:	mov    esp,0x6857908
  4211fd:	sub    BYTE PTR [edi+0x3975d548],al
  421203:	push   0x0
  421205:	cli    
  421206:	mov    WORD PTR [edi-0x33286bb3],ds
  42120c:	and    ch,bl
  42120e:	inc    eax
  42120f:	outs   dx,DWORD PTR ds:[esi]
  421210:	push   ebx
  421211:	jle    0x421209
  421213:	xor    eax,0x87e377de
  421218:	mov    cl,0x2c
  42121a:	dec    eax
  42121b:	mov    esi,0x8b415c84
  421220:	jae    0x4211c2
  421222:	pop    es
  421223:	ins    DWORD PTR es:[edi],dx
  421224:	(bad)  
  421225:	jecxz  0x4211b2
  421227:	mov    edi,0xd4e93116
  42122c:	mov    ch,0xc
  42122e:	scas   al,BYTE PTR es:[edi]
  42122f:	out    dx,al
  421230:	xor    eax,0x87239e88
  421235:	in     eax,0xe1
  421237:	or     BYTE PTR [ebp+0x6a],bh
  42123a:	stos   DWORD PTR es:[edi],eax
  42123b:	adc    edi,DWORD PTR [ebx-0x80]
  42123e:	daa    
  42123f:	or     al,0x41
  421241:	sbb    ecx,DWORD PTR [eax+0x76]
  421244:	out    dx,al
  421245:	mov    ecx,0xbbacaa7
  42124a:	hlt    
  42124b:	(bad)  
  42124c:	cmp    ebp,DWORD PTR [edi]
  42124e:	add    eax,0xef8eb5c5
  421253:	xchg   esp,eax
  421254:	jae    0x42122e
  421256:	sbb    al,0xd2
  421258:	loope  0x42129c
  42125a:	mov    esi,0x42ae07dd
  42125f:	adc    eax,0x2d5669d6
  421264:	scas   eax,DWORD PTR es:[edi]
  421265:	mov    ebx,0x1d745571
  42126a:	sbb    ebx,DWORD PTR [edx+ebx*2-0x20c93cd3]
  421271:	unpckhps xmm3,XMMWORD PTR [ebx]
  421274:	dec    ebp
  421275:	jmp    0xa5d:0x8e22ad15
  42127c:	call   0xf1f82775
  421281:	dec    BYTE PTR [ecx-0x22]
  421284:	bound  ecx,QWORD PTR [esi]
  421286:	es (bad) 
  421289:	xor    BYTE PTR [edi],bl
  42128b:	in     al,0x20
  42128d:	lods   eax,DWORD PTR ds:[esi]
  42128e:	push   ds
  42128f:	xlat   BYTE PTR ds:[ebx]
  421290:	pop    eax
  421291:	jecxz  0x421241
  421293:	mov    al,0xf1
  421295:	mov    edx,0xc0606a96
  42129a:	mov    ah,bh
  42129c:	outs   dx,DWORD PTR ds:[esi]
  42129d:	and    edi,DWORD PTR [eax+edx*1-0x346f5ecc]
  4212a4:	xchg   esi,eax
  4212a5:	loopne 0x4212b9
  4212a7:	xchg   ecx,ecx
  4212a9:	addr16 jno 0x421301
  4212ac:	out    0x5e,al
  4212ae:	mov    ds:0xc71d58d5,al
  4212b3:	inc    esi
  4212b4:	xor    bh,BYTE PTR [eax-0x3b0b4908]
  4212ba:	in     al,dx
  4212bb:	in     al,dx
  4212bc:	jmp    0x5f74:0xfe136dfb
  4212c3:	jb     0x421309
  4212c5:	pop    ss
  4212c6:	out    dx,al
  4212c7:	out    dx,al
  4212c8:	and    BYTE PTR [edi+0x76],cl
  4212cb:	aas    
  4212cc:	push   ds
  4212cd:	jl     0x42126a
  4212cf:	popa   
  4212d0:	dec    edi
  4212d1:	fwait
  4212d2:	pop    es
  4212d3:	icebp  
  4212d4:	adc    cx,cx
  4212d7:	and    DWORD PTR [edx-0x25],ecx
  4212da:	call   0x4aad92be
  4212df:	in     al,dx
  4212e0:	push   es
  4212e1:	push   cs
  4212e2:	pushf  
  4212e3:	xor    BYTE PTR [edx+eiz*1],0xff
  4212e7:	adc    dl,BYTE PTR [edx]
  4212e9:	cs rep stos DWORD PTR es:[edi],eax
  4212ec:	pushf  
  4212ed:	cmp    al,0xcc
  4212ef:	repz push 0x8a935712
  4212f5:	mov    eax,0xbfcedfbb
  4212fa:	cmc    
  4212fb:	mov    edx,0x7ed670a3
  421300:	shl    BYTE PTR [edx],cl
  421302:	fsubr  QWORD PTR [ecx]
  421304:	sub    eax,0xc35d259d
  421309:	push   esi
  42130a:	ja     0x421301
  42130c:	in     al,0x75
  42130e:	retf   
  42130f:	mov    dl,0x8f
  421311:	clc    
  421312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421313:	push   0x1ce8c031
  421318:	mov    ds:0xdabfa1fd,al
  42131d:	js     0x4212d5
  42131f:	es int3 
  421321:	in     eax,dx
  421322:	in     eax,dx
  421323:	vpandn ymm3,ymm7,YMMWORD PTR [esi]
  421327:	bound  eax,QWORD PTR [esi]
  421329:	sub    esp,DWORD PTR [ecx-0x7b86bc66]
  42132f:	es dec esi
  421331:	pop    es
  421332:	inc    esi
  421333:	and    cl,BYTE PTR [eax]
  421335:	mov    ebx,0x39271512
  42133a:	add    bh,bh
  42133c:	cs push ecx
  42133e:	sbb    ch,cl
  421340:	sahf   
  421341:	cmp    esi,DWORD PTR [ecx+0x298422a7]
  421347:	mov    al,0x36
  421349:	add    BYTE PTR [edx],ch
  42134b:	aaa    
  42134c:	add    eax,0xd9bee155
  421351:	adc    eax,0x74c1a84d
  421356:	dec    ebp
  421357:	and    ebx,DWORD PTR [esi]
  421359:	sbb    DWORD PTR [edi+0x18],0x989a1229
  421360:	fdivr  st(2),st
  421362:	loopne 0x421387
  421364:	or     DWORD PTR [ecx+eax*2-0x24],esp
  421368:	push   cs
  421369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42136a:	or     edx,DWORD PTR [ecx]
  42136c:	pusha  
  42136d:	loopne 0x4212fa
  42136f:	jl     0x421337
  421371:	repnz fistp QWORD PTR [eax+0x71b8ec8e]
  421378:	mov    eax,ss:0xfc43dafb
  42137e:	pop    ebp
  42137f:	jo     0x42139a
  421381:	jbe    0x42138c
  421383:	mov    al,0xdd
  421385:	pop    ebx
  421386:	jno    0x4213b5
  421388:	in     al,dx
  421389:	je     0x4213c9
  42138b:	pop    ds
  42138c:	ror    DWORD PTR [ebx],1
  42138e:	repz sub eax,0x5385076b
  421394:	mov    esi,0x4d96585e
  421399:	inc    ecx
  42139a:	mov    es,WORD PTR [ebx]
  42139c:	mov    dh,0x6
  42139e:	sbb    BYTE PTR [edx+edx*4-0x78],dh
  4213a2:	jmp    0x421367
  4213a4:	push   edx
  4213a5:	das    
  4213a6:	and    ch,bh
  4213a8:	adc    DWORD PTR [eax-0x21f8c8b0],edi
  4213ae:	xor    eax,DWORD PTR [ebx+eiz*2+0x3a3d3440]
  4213b5:	jp     0x42139f
  4213b7:	sbb    ebx,DWORD PTR [ebx-0x1d012f34]
  4213bd:	jb     0x4213c8
  4213bf:	in     eax,dx
  4213c0:	out    0xd2,al
  4213c2:	imul   esp,eax,0x40fdfc3e
  4213c8:	stc    
  4213c9:	xchg   DWORD PTR [ebp-0x75],esp
  4213cc:	sub    dl,BYTE PTR [esi+0x68]
  4213cf:	stos   BYTE PTR es:[edi],al
  4213d0:	mov    ebp,0x5884d8d1
  4213d5:	sbb    esi,DWORD PTR [ebp-0x5e9c133]
  4213db:	call   0x4ecd4eae
  4213e0:	out    0xa5,eax
  4213e2:	addr16 mov ch,0x71
  4213e5:	adc    BYTE PTR [ebx],ah
  4213e7:	scas   al,BYTE PTR es:[edi]
  4213e8:	add    edx,DWORD PTR [ebp*2+0x7bbd67d8]
  4213ef:	loope  0x42146d
  4213f1:	mov    bh,0x15
  4213f3:	adc    BYTE PTR [eax-0x7bdfca79],bh
  4213f9:	int3   
  4213fa:	xor    cl,BYTE PTR [edi-0x34d7ae32]
  421400:	ds stos DWORD PTR es:[edi],eax
  421402:	in     eax,dx
  421403:	sahf   
  421404:	inc    edi
  421405:	sbb    esp,DWORD PTR [ebp-0x164599fe]
  42140b:	inc    ebp
  42140c:	js     0x4213f3
  42140e:	rol    DWORD PTR [eax+0x3d8b8d4a],cl
  421414:	mov    esp,0xe5e195f3
  421419:	mov    BYTE PTR [esp+eax*1],cl
  42141c:	loop   0x4213d6
  42141e:	sub    BYTE PTR [ebp+0x7e],0xfa
  421422:	inc    esp
  421423:	cmp    al,0xeb
  421425:	rol    bh,cl
  421427:	iret   
  421428:	lock fwait
  42142a:	add    bh,cl
  42142c:	retf   
  42142d:	data16 and BYTE PTR [ebx+0x438268ba],al
  421434:	mov    WORD PTR [esi-0x3f0ac438],gs
  42143a:	ror    DWORD PTR [esi],0xe3
  42143d:	push   ss
  42143e:	mov    edi,0x7e56df00
  421443:	retf   
  421444:	xchg   ebp,eax
  421445:	ss xchg esp,eax
  421447:	stos   DWORD PTR es:[edi],eax
  421448:	jmp    0x40b1:0xdd47f9f9
  42144f:	inc    eax
  421450:	gs cmp al,0xf0
  421453:	cwde   
  421454:	mov    al,0x5b
  421456:	iret   
  421457:	leave  
  421458:	jmp    0x1c88:0xd7346e72
  42145f:	shr    bh,cl
  421461:	and    al,dh
  421463:	(bad)  
  421464:	retf   
  421465:	dec    ecx
  421466:	inc    edx
  421467:	shl    BYTE PTR [edi+0x7ab822bc],cl
  42146d:	nop
  42146e:	inc    ebx
  42146f:	jp     0x421420
  421471:	rcl    edx,cl
  421473:	xchg   edx,eax
  421474:	mov    WORD PTR [edx+0x5efcf6ef],cs
  42147a:	cmp    edi,DWORD PTR [edx+0x5]
  42147d:	xchg   esi,eax
  42147e:	jmp    0x12f25486
  421483:	or     DWORD PTR [esi+0x7c],ebx
  421486:	leave  
  421487:	and    eax,0xe93a0c9c
  42148c:	sti    
  42148d:	and    eax,0xfff92f20
  421492:	jb     0x42141e
  421494:	and    DWORD PTR [edx-0x70c821a9],ebp
  42149a:	ror    BYTE PTR [eax-0x1e],1
  42149d:	pop    ecx
  42149e:	add    eax,0x1a1649a8
  4214a3:	outs   dx,BYTE PTR ds:[esi]
  4214a4:	pop    edi
  4214a5:	adc    bh,BYTE PTR [eax]
  4214a7:	hlt    
  4214a8:	push   eax
  4214a9:	icebp  
  4214aa:	inc    BYTE PTR [esi+0x3ac01e26]
  4214b0:	jo     0x42147e
  4214b2:	(bad)  
  4214b3:	sub    eax,0x85ec95fd
  4214b8:	fadd   QWORD PTR [edx+0x2e]
  4214bb:	arpl   WORD PTR [ebx+0x148701fb],bx
  4214c1:	or     eax,0xcb1cc794
  4214c6:	into   
  4214c7:	adc    esi,DWORD PTR [edi-0x4daff3c3]
  4214cd:	js     0x421478
  4214cf:	pop    es
  4214d0:	jns    0x421502
  4214d2:	(bad)  
  4214d3:	in     eax,0x48
  4214d5:	pop    eax
  4214d6:	jge    0x42150e
  4214d8:	into   
  4214d9:	dec    edx
  4214da:	or     BYTE PTR [eax+0xbb466a7],0xa0
  4214e1:	dec    esp
  4214e2:	sti    
  4214e3:	xor    DWORD PTR [ebx-0x1b],ecx
  4214e6:	imul   ebp,DWORD PTR [esi+0x3a9be625],0xffffff93
  4214ed:	dec    ebx
  4214ee:	cmp    BYTE PTR [ebx],0x97
  4214f1:	pop    eax
  4214f2:	push   edi
  4214f3:	cmp    BYTE PTR [ecx],dl
  4214f5:	or     BYTE PTR [edx-0x138aa8d2],al
  4214fb:	sbb    al,0x5c
  4214fd:	cld    
  4214fe:	mov    WORD PTR ss:[ecx-0x160fddf7],ds
  421505:	mov    dh,0x56
  421507:	sub    BYTE PTR [ebx],0x20
  42150a:	sub    DWORD PTR [edx+0xb],edx
  42150d:	cdq    
  42150e:	xchg   DWORD PTR [edx+ebx*1+0x26],esp
  421512:	addr16 jmp 0xe4b1:0x690008a
  42151a:	mov    edx,0x3f06f3f6
  42151f:	lea    edi,[ebp+edx*1+0x1f18d75a]
  421526:	out    0xb1,eax
  421528:	cmp    BYTE PTR [ecx-0x16],bl
  42152b:	mov    WORD PTR [esi],gs
  42152d:	xchg   ecx,eax
  42152e:	popa   
  42152f:	popf   
  421530:	dec    esp
  421531:	mov    ebp,0x5d9662b3
  421536:	shl    DWORD PTR [ecx-0x76],1
  421539:	test   BYTE PTR [ebx+0x11455eb8],0x52
  421540:	pop    ebp
  421541:	imul   edi,DWORD PTR [ebp+0x5e],0x90c3595d
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x30],0x0
  42155d:	mov    DWORD PTR [ebp-0x70],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x60],0x0
  421572:	mov    DWORD PTR [ebp-0x4c],0x0
  421579:	mov    DWORD PTR [ebp-0x8],0x0
  421580:	mov    DWORD PTR [ebp-0x18],0x0
  421587:	mov    DWORD PTR [ebp-0x48],0x0
  42158e:	mov    DWORD PTR [ebp-0x10],0x0
  421595:	mov    DWORD PTR [ebp-0x6c],0x0
  42159c:	mov    DWORD PTR [ebp-0x54],0x0
  4215a3:	mov    DWORD PTR [ebp-0x4],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x50],0x0
  4215b8:	mov    DWORD PTR [ebp-0x68],0x0
  4215bf:	mov    DWORD PTR [ebp-0xc],0x0
  4215c6:	mov    DWORD PTR [ebp-0x5c],0x0
  4215cd:	mov    DWORD PTR [ebp-0x14],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x60]
  42162e:	push   eax
  42162f:	push   0x0
  421631:	push   0x0
  421633:	mov    ecx,DWORD PTR [ebp-0x68]
  421636:	push   ecx
  421637:	call   0x422a10
  42163c:	lea    edx,[ebp-0xc]
  42163f:	push   edx
  421640:	lea    eax,[ebp-0xc]
  421643:	push   eax
  421644:	lea    ecx,[ebp-0x14]
  421647:	push   ecx
  421648:	call   DWORD PTR ds:0x428004
  42164e:	test   eax,eax
  421650:	je     0x42166b
  421652:	mov    edx,DWORD PTR [ebp-0x60]
  421655:	push   edx
  421656:	push   0x8
  421658:	mov    eax,DWORD PTR [ebp-0x68]
  42165b:	push   eax
  42165c:	call   DWORD PTR ds:0x428030
  421662:	mov    ecx,DWORD PTR [ebp-0xc]
  421665:	add    ecx,0x1
  421668:	mov    DWORD PTR [ebp-0xc],ecx
  42166b:	push   0x0
  42166d:	push   0x0
  42166f:	push   0x0
  421671:	call   DWORD PTR ds:0x428000
  421677:	mov    BYTE PTR [ebp-0x40],0x56
  42167b:	call   DWORD PTR ds:0x42803c
  421681:	mov    DWORD PTR [ebp-0x30],eax
  421684:	mov    BYTE PTR [ebp-0x3e],0x72
  421688:	movzx  edx,WORD PTR [ebp-0x30]
  42168c:	test   edx,edx
  42168e:	jne    0x4216e0
  421690:	mov    BYTE PTR [ebp-0x34],0x0
  421694:	mov    DWORD PTR [ebp-0x14],0xe0d
  42169b:	lea    eax,[ebp-0x28]
  42169e:	push   eax
  42169f:	call   DWORD PTR ds:0x428044
  4216a5:	mov    DWORD PTR [ebp-0x60],eax
  4216a8:	mov    DWORD PTR [ebp-0x58],0x3a
  4216af:	lea    ecx,[ebp-0x40]
  4216b2:	push   ecx
  4216b3:	mov    edx,DWORD PTR [ebp-0x60]
  4216b6:	push   edx
  4216b7:	call   DWORD PTR ds:0x428040
  4216bd:	mov    DWORD PTR [ebp-0x44],eax
  4216c0:	mov    DWORD PTR [ebp-0x4],0xe65c138e
  4216c7:	push   0x3
  4216c9:	push   0x0
  4216cb:	push   0x0
  4216cd:	mov    eax,DWORD PTR [ebp-0x68]
  4216d0:	push   eax
  4216d1:	call   DWORD PTR ds:0x42812c
  4216d7:	mov    DWORD PTR [ebp-0x6c],0x10e7cf
  4216de:	jmp    0x421701
  4216e0:	mov    BYTE PTR ds:0x445fe8,0x0
  4216e7:	mov    BYTE PTR ds:0x42d1f0,0x0
  4216ee:	push   0x0
  4216f0:	mov    ecx,DWORD PTR [ebp-0x60]
  4216f3:	push   ecx
  4216f4:	call   DWORD PTR ds:0x42800c
  4216fa:	mov    BYTE PTR ds:0x4439a8,0x0
  421701:	push   DWORD PTR [ebp-0x2c]
  421704:	push   0x1000
  421709:	mov    eax,DWORD PTR [ebp-0x14]
  42170c:	add    eax,0x23
  42170f:	add    eax,0x23
  421712:	push   eax
  421713:	xor    eax,eax
  421715:	push   eax
  421716:	mov    ecx,DWORD PTR [ebp-0x44]
  421719:	call   ecx
  42171b:	mov    edx,eax
  42171d:	mov    DWORD PTR [ebp-0x8],edx
  421720:	mov    edx,DWORD PTR [ebp-0x6c]
  421723:	sub    edx,0xdae0b
  421729:	mov    DWORD PTR [ebp-0x6c],edx
  42172c:	cmp    DWORD PTR [ebp-0x8],0x0
  421730:	jne    0x42174d
  421732:	mov    eax,DWORD PTR [ebp-0x68]
  421735:	push   eax
  421736:	push   0x0
  421738:	mov    ecx,DWORD PTR [ebp-0x60]
  42173b:	push   ecx
  42173c:	push   0x1
  42173e:	push   0x0
  421740:	call   DWORD PTR ds:0x428120
  421746:	mov    BYTE PTR ds:0x4439a8,0x0
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x14]
  421753:	mov    eax,DWORD PTR [ebp-0x4]
  421756:	mov    DWORD PTR [edx],eax
  421758:	mov    DWORD PTR [ebp-0x30],0x410000
  42175f:	mov    ecx,DWORD PTR [ebp-0x60]
  421762:	push   ecx
  421763:	call   DWORD PTR ds:0x428048
  421769:	call   DWORD PTR ds:0x428130
  42176f:	push   DWORD PTR ds:0x428044
  421775:	pop    edx
  421776:	mov    DWORD PTR [ebp-0x70],edx
  421779:	mov    edx,DWORD PTR [ebp-0x8]
  42177c:	add    edx,DWORD PTR [ebp-0x58]
  42177f:	mov    DWORD PTR [ebp-0x5c],edx
  421782:	mov    eax,ds:0x428040
  421787:	mov    DWORD PTR [ebp-0x4c],eax
  42178a:	mov    ecx,DWORD PTR [ebp-0x8]
  42178d:	add    ecx,DWORD PTR [ebp-0x14]
  421790:	mov    edx,DWORD PTR [ebp+0x8]
  421793:	mov    DWORD PTR [ecx+0x4],edx
  421796:	mov    eax,DWORD PTR [ebp-0x8]
  421799:	add    eax,DWORD PTR [ebp-0x14]
  42179c:	mov    DWORD PTR [ebp-0x10],eax
  42179f:	mov    ecx,DWORD PTR [ebp-0x68]
  4217a2:	push   ecx
  4217a3:	call   DWORD PTR ds:0x428050
  4217a9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4217ad:	jbe    0x4217ca
  4217af:	mov    edx,DWORD PTR [ebp-0x10]
  4217b2:	push   edx
  4217b3:	mov    eax,DWORD PTR [ebp-0x14]
  4217b6:	push   eax
  4217b7:	mov    ecx,DWORD PTR [ebp-0x30]
  4217ba:	add    ecx,DWORD PTR [ebp-0x6c]
  4217bd:	push   ecx
  4217be:	mov    edx,DWORD PTR [ebp-0x8]
  4217c1:	push   edx
  4217c2:	call   0x411000
  4217c7:	add    esp,0x10
  4217ca:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217ce:	je     0x4217de
  4217d0:	push   DWORD PTR [ebp-0x4c]
  4217d3:	push   DWORD PTR [ebp-0x70]
  4217d6:	mov    edx,DWORD PTR [ebp-0x5c]
  4217d9:	push   eax
  4217da:	jmp    edx
  4217dc:	jmp    0x4217e4
  4217de:	mov    eax,DWORD PTR [ebp+0x8]
  4217e1:	mov    DWORD PTR [ebp-0x18],eax
  4217e4:	mov    eax,0x1
  4217e9:	mov    esp,ebp
  4217eb:	pop    ebp
  4217ec:	ret    
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0xa
  4217f9:	mov    DWORD PTR [ebp-0x4],0x0
  421800:	call   DWORD PTR ds:0x428028
  421806:	mov    esi,DWORD PTR ds:0x42803c
  42180c:	push   0xa
  42180e:	push   0xa
  421810:	push   0x0
  421812:	mov    DWORD PTR [ebp-0x8],esi
  421815:	call   DWORD PTR ds:0x428010
  42181b:	test   esi,esi
  42181d:	jne    0x421829
  42181f:	push   0xa
  421821:	push   esi
  421822:	push   esi
  421823:	call   DWORD PTR ds:0x428024
  421829:	call   DWORD PTR ds:0x428020
  42182f:	push   0x0
  421831:	push   0x4e
  421833:	push   0x1e
  421835:	push   0x0
  421837:	push   0xffffffff
  421839:	call   DWORD PTR ds:0x42801c
  42183f:	test   eax,eax
  421841:	je     0x421852
  421843:	push   0x0
  421845:	push   0x1
  421847:	push   0x0
  421849:	call   DWORD PTR ds:0x428018
  42184f:	mov    DWORD PTR [ebp-0x4],eax
  421852:	mov    esi,DWORD PTR [ebp-0x8]
  421855:	call   esi
  421857:	mov    DWORD PTR [ebp-0x4],eax
  42185a:	cmp    DWORD PTR [ebp-0x4],0x57
  42185e:	jne    0x421879
  421860:	push   0x14db1c3f
  421865:	call   0x421550
  42186a:	add    esp,0x4
  42186d:	push   0x1
  42186f:	push   0x0
  421871:	push   0x0
  421873:	call   DWORD PTR ds:0x428128
  421879:	xor    eax,eax
  42187b:	pop    esi
  42187c:	mov    esp,ebp
  42187e:	pop    ebp
  42187f:	ret    
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	call   DWORD PTR ds:0x428034
  42188d:	lea    eax,[esp+0x0]
  421891:	push   eax
  421892:	call   DWORD PTR ds:0x42804c
  421898:	push   0xa
  42189a:	call   DWORD PTR ds:0x428028
  4218a0:	cmp    WORD PTR [esp+0x0],0x0
  4218a6:	je     0x4218c4
  4218a8:	push   0x0
  4218aa:	push   0x0
  4218ac:	push   0x0
  4218ae:	push   0x0
  4218b0:	call   0x422a10
  4218b5:	push   0x0
  4218b7:	call   0x4217f0
  4218bc:	add    esp,0x4
  4218bf:	jmp    0x4229f1
  4218c4:	inc    DWORD PTR [edi-0x72]
  4218c7:	int3   
  4218c8:	jnp    0x42193c
  4218ca:	popa   
  4218cb:	add    esp,DWORD PTR [eax]
  4218cd:	stos   BYTE PTR es:[edi],al
  4218ce:	outs   dx,BYTE PTR ds:[esi]
  4218cf:	inc    ebp
  4218d0:	(bad)
  4218d4:	pop    esp
  4218d5:	ret    
  4218d6:	jno    0x421939
  4218d8:	add    esp,DWORD PTR [eax]
  4218da:	scas   al,BYTE PTR es:[edi]
  4218db:	outs   dx,BYTE PTR ds:[esi]
  4218dc:	inc    ebp
  4218dd:	iret   
  4218de:	pop    ss
  4218df:	or     dl,ah
  4218e1:	pop    esp
  4218e2:	jnp    0x421955
  4218e4:	popa   
  4218e5:	add    esp,DWORD PTR [eax]
  4218e7:	scas   al,BYTE PTR es:[edi]
  4218e8:	outs   dx,BYTE PTR ds:[esi]
  4218e9:	inc    ebp
  4218ea:	(bad)  
  4218eb:	pop    ss
  4218ec:	or     dl,ah
  4218ee:	pop    esp
  4218ef:	jnp    0x421962
  4218f1:	popa   
  4218f2:	add    esp,DWORD PTR [eax]
  4218f4:	scas   al,BYTE PTR es:[edi]
  4218f5:	outs   dx,BYTE PTR ds:[esi]
  4218f6:	inc    ebp
  4218f7:	(bad)  
  4218f8:	pop    ss
  4218f9:	or     dl,ah
  4218fb:	pop    esp
  4218fc:	jnp    0x42196f
  4218fe:	popa   
  4218ff:	add    esp,DWORD PTR [eax]
  421901:	push   esi
  421902:	outs   dx,BYTE PTR ds:[esi]
  421903:	inc    ebp
  421904:	(bad)  
  421905:	sbb    DWORD PTR ds:0xc57b526e,edx
  42190b:	push   0x6f1601ce
  421910:	or     DWORD PTR [edx+0x36],eax
  421913:	pop    esi
  421914:	mov    esp,0x11510835
  421919:	jno    0x42196a
  42191b:	leave  
  42191c:	sbb    al,0x24
  42191e:	loop   0x421957
  421920:	imul   esi,DWORD PTR [ebp+0x151e1532],0x4ecb4223
  42192a:	aaa    
  42192b:	cli    
  42192c:	jns    0x421958
  42192e:	mov    ebp,0x2e355b32
  421933:	push   eax
  421934:	add    bl,al
  421936:	add    DWORD PTR [ecx],esp
  421938:	jmp    0x715f:0x56d90739
  42193f:	popa   
  421940:	add    esp,DWORD PTR [eax]
  421942:	scas   al,BYTE PTR es:[edi]
  421943:	outs   dx,BYTE PTR ds:[esi]
  421944:	inc    ebp
  421945:	mov    BYTE PTR [esi-0x7ce0720a],cl
  42194b:	jecxz  0x4219b8
  42194d:	inc    eax
  42194e:	fdivr  DWORD PTR [esp+eiz*2]
  421951:	push   es
  421952:	ja     0x4218d9
  421954:	add    BYTE PTR [ecx+edi*1-0x4c18489],cl
  42195b:	mov    dl,0xa4
  42195d:	and    BYTE PTR ss:[edi-0x31d337e3],dh
  421964:	jno    0x42198f
  421966:	add    al,0x3a
  421968:	sub    al,dh
  42196a:	xchg   esi,eax
  42196b:	xlat   BYTE PTR ds:[ebx]
  42196c:	test   DWORD PTR [ebx],edi
  42196e:	test   ch,ch
  421970:	push   esi
  421971:	cmp    eax,0x6a09f389
  421976:	cs jg  0x4219c8
  421979:	(bad)
  42197c:	ficom  WORD PTR [esi]
  42197e:	sti    
  42197f:	jo     0x4219ec
  421981:	pop    ebx
  421982:	fdivr  DWORD PTR [esp+eiz*2]
  421985:	push   es
  421986:	ja     0x42190c
  421988:	add    ah,bh
  42198a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42198b:	jmp    0xa11df80b
  421990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421991:	and    edi,DWORD PTR [ebp-0x4eade2e3]
  421997:	popa   
  421998:	jno    0x421a13
  42199a:	cdq    
  42199b:	xchg   ecx,eax
  42199c:	sub    dh,dh
  42199e:	or     ecx,DWORD PTR [ebp-0x7b]
  4219a1:	push   ebp
  4219a2:	repnz inc esi
  4219a4:	push   esi
  4219a5:	and    edx,DWORD PTR [esi+ebp*2]
  4219a8:	or     DWORD PTR [edx+0x56],esp
  4219ab:	cld    
  4219ac:	dec    edi
  4219ad:	fnstsw WORD PTR [esi+0x69]
  4219b0:	mov    esp,0x6be3831f
  4219b5:	add    esp,DWORD PTR [eax]
  4219b7:	scas   al,BYTE PTR es:[edi]
  4219b8:	outs   dx,BYTE PTR ds:[esi]
  4219b9:	inc    ebp
  4219ba:	(bad)  
  4219bb:	pop    ss
  4219bc:	or     al,BYTE PTR [ecx+ebx*1+0x22d717b]
  4219c3:	and    ch,BYTE PTR [esi+0x58d0a682]
  4219c9:	or     dl,ah
  4219cb:	pop    esp
  4219cc:	jnp    0x421a3f
  4219ce:	popa   
  4219cf:	add    esp,DWORD PTR [eax]
  4219d1:	dec    esi
  4219d2:	outs   dx,BYTE PTR ds:[esi]
  4219d3:	inc    esi
  4219d4:	mov    ds,WORD PTR [ebx+ecx*1]
  4219d7:	ficomp WORD PTR [ebx+edi*2-0x63]
  4219db:	add    esp,DWORD PTR gs:[eax]
  4219de:	stos   BYTE PTR es:[edi],al
  4219df:	push   0xa178f45
  4219e4:	aam    0x5d
  4219e6:	(bad)  
  4219e7:	jno    0x421a4a
  4219e9:	add    esi,DWORD PTR [eax]
  4219eb:	scas   al,BYTE PTR es:[edi]
  4219ec:	outs   dx,BYTE PTR ds:[esi]
  4219ed:	inc    ebp
  4219ee:	(bad)  
  4219ef:	adc    cl,BYTE PTR [edx]
  4219f1:	aam    0x5c
  4219f3:	cmp    dh,BYTE PTR [ecx+0x61]
  4219f6:	adc    esp,DWORD PTR [eax]
  4219f8:	scas   al,BYTE PTR es:[edi]
  4219f9:	outs   dx,BYTE PTR ds:[esi]
  4219fa:	inc    edi
  4219fb:	(bad)  
  4219fc:	pop    ss
  4219fd:	paddq  mm3,QWORD PTR [ebp+0x7b]
  421a01:	jno    0x421a64
  421a03:	add    esp,DWORD PTR [eax]
  421a05:	stos   DWORD PTR es:[edi],eax
  421a06:	outs   dx,BYTE PTR ds:[esi]
  421a07:	inc    esp
  421a08:	(bad)  
  421a09:	pop    ss
  421a0a:	or     dl,ah
  421a0c:	pop    esp
  421a0d:	jnp    0x421a00
  421a0f:	push   0x3
  421a11:	and    BYTE PTR [edx+0x2632456e],ch
  421a17:	paddq  mm3,QWORD PTR [esi+0x7b]
  421a1b:	jno    0x4219fe
  421a1d:	add    esp,DWORD PTR [eax]
  421a1f:	mov    esi,0x179f456e
  421a24:	or     dl,ah
  421a26:	pop    esp
  421a27:	imul   esi,DWORD PTR [ecx+0x61],0x13
  421a2b:	and    BYTE PTR [esi+0x178f456e],ch
  421a31:	sbb    dl,ah
  421a33:	pop    esp
  421a34:	jnp    0x421aa7
  421a36:	popa   
  421a37:	add    esp,DWORD PTR [eax]
  421a39:	scas   al,BYTE PTR es:[edi]
  421a3a:	outs   dx,BYTE PTR ds:[esi]
  421a3b:	inc    ebp
  421a3c:	(bad)  
  421a3d:	xchg   ebx,eax
  421a3e:	fistp  WORD PTR fs:[edx+edx*1+0x72]
  421a43:	popa   
  421a44:	add    esp,DWORD PTR [eax]
  421a46:	sahf   
  421a47:	gs inc ebp
  421a49:	inc    eax
  421a4a:	sub    cl,BYTE PTR [edx]
  421a4c:	aam    0x5c
  421a4e:	jnp    0x421ac1
  421a50:	popa   
  421a51:	add    esp,DWORD PTR [eax]
  421a53:	scas   al,BYTE PTR es:[edi]
  421a54:	outs   dx,BYTE PTR ds:[esi]
  421a55:	inc    ebp
  421a56:	(bad)  
  421a57:	pop    ss
  421a58:	or     dl,ah
  421a5a:	pop    esp
  421a5b:	jnp    0x421ace
  421a5d:	popa   
  421a5e:	add    esp,DWORD PTR [eax]
  421a60:	scas   al,BYTE PTR es:[edi]
  421a61:	outs   dx,BYTE PTR ds:[esi]
  421a62:	inc    ebp
  421a63:	(bad)  
  421a64:	pop    ss
  421a65:	or     dl,ah
  421a67:	pop    esp
  421a68:	jnp    0x421adb
  421a6a:	popa   
  421a6b:	add    esp,DWORD PTR [eax]
  421a6d:	scas   al,BYTE PTR es:[edi]
  421a6e:	outs   dx,BYTE PTR ds:[esi]
  421a6f:	inc    ebp
  421a70:	(bad)  
  421a71:	pop    ss
  421a72:	or     dl,ah
  421a74:	pop    esp
  421a75:	jnp    0x421ae8
  421a77:	popa   
  421a78:	add    esp,DWORD PTR [eax]
  421a7a:	scas   al,BYTE PTR es:[edi]
  421a7b:	outs   dx,BYTE PTR ds:[esi]
  421a7c:	inc    ebp
  421a7d:	(bad)  
  421a7e:	pop    ss
  421a7f:	or     dl,ah
  421a81:	pop    esp
  421a82:	jnp    0x421af5
  421a84:	popa   
  421a85:	add    esp,DWORD PTR [eax]
  421a87:	scas   al,BYTE PTR es:[edi]
  421a88:	outs   dx,BYTE PTR ds:[esi]
  421a89:	inc    ebp
  421a8a:	(bad)  
  421a8b:	pop    ss
  421a8c:	or     dl,ah
  421a8e:	pop    esp
  421a8f:	jnp    0x421b02
  421a91:	popa   
  421a92:	add    esp,DWORD PTR [eax]
  421a94:	scas   al,BYTE PTR es:[edi]
  421a95:	outs   dx,BYTE PTR ds:[esi]
  421a96:	inc    ebp
  421a97:	(bad)  
  421a98:	pop    ss
  421a99:	or     dl,ah
  421a9b:	pop    esp
  421a9c:	jnp    0x421b0f
  421a9e:	popa   
  421a9f:	add    esp,DWORD PTR [eax]
  421aa1:	scas   al,BYTE PTR es:[edi]
  421aa2:	outs   dx,BYTE PTR ds:[esi]
  421aa3:	inc    ebp
  421aa4:	(bad)  
  421aa5:	pop    ss
  421aa6:	or     dl,ah
  421aa8:	pop    esp
  421aa9:	jnp    0x421b1c
  421aab:	popa   
  421aac:	add    esp,DWORD PTR [eax]
  421aae:	scas   al,BYTE PTR es:[edi]
  421aaf:	outs   dx,BYTE PTR ds:[esi]
  421ab0:	inc    ebp
  421ab1:	(bad)  
  421ab2:	pop    ss
  421ab3:	or     dl,ah
  421ab5:	jb     0x421ac6
  421ab7:	adc    al,0x19
  421ab9:	ja     0x421adb
  421abb:	scas   al,BYTE PTR es:[edi]
  421abc:	outs   dx,BYTE PTR ds:[esi]
  421abd:	inc    ebp
  421abe:	scas   eax,DWORD PTR es:[edi]
  421abf:	sbb    al,0xa
  421ac1:	aam    0x4c
  421ac3:	jnp    0x421b36
  421ac5:	popa   
  421ac6:	cmp    DWORD PTR [esi+ebp*4],esp
  421ac9:	outs   dx,BYTE PTR ds:[esi]
  421aca:	inc    ecx
  421acb:	(bad)  
  421acc:	pop    ss
  421acd:	pop    edx
  421ace:	xchg   ecx,eax
  421acf:	pop    ds
  421ad0:	dec    ecx
  421ad1:	and    eax,0xae20032e
  421ad6:	outs   dx,BYTE PTR ds:[esi]
  421ad7:	inc    ebp
  421ad8:	(bad)  
  421ad9:	aaa    
  421ada:	or     dl,ah
  421adc:	mov    esp,0x71120355
  421ae1:	inc    ebx
  421ae2:	scas   al,BYTE PTR es:[edi]
  421ae3:	outs   dx,BYTE PTR ds:[esi]
  421ae4:	inc    ebp
  421ae5:	pop    DWORD PTR [edi+0xa]
  421ae8:	aam    0x5c
  421aea:	dec    ebx
  421aeb:	jp     0x421b4e
  421aed:	add    esi,DWORD PTR [eax-0x52]
  421af0:	outs   dx,BYTE PTR ds:[esi]
  421af1:	inc    ebp
  421af2:	mov    cl,0x13
  421af4:	or     dl,ah
  421af6:	pop    esp
  421af7:	jnp    0x421b6a
  421af9:	popa   
  421afa:	add    esp,DWORD PTR [eax]
  421afc:	scas   al,BYTE PTR es:[edi]
  421afd:	outs   dx,BYTE PTR ds:[esi]
  421afe:	inc    ebp
  421aff:	(bad)  
  421b00:	pop    ss
  421b01:	sub    dl,ah
  421b03:	pop    esp
  421b04:	fwait
  421b05:	jno    0x421b68
  421b07:	add    esp,DWORD PTR [eax]
  421b09:	scas   al,BYTE PTR es:[edi]
  421b0a:	outs   dx,BYTE PTR ds:[esi]
  421b0b:	inc    ebp
  421b0c:	(bad)  
  421b0d:	pop    ss
  421b0e:	or     dl,ah
  421b10:	pop    esp
  421b11:	jnp    0x421b84
  421b13:	popa   
  421b14:	add    esp,DWORD PTR [eax]
  421b16:	scas   al,BYTE PTR es:[edi]
  421b17:	outs   dx,BYTE PTR ds:[esi]
  421b18:	inc    ebp
  421b19:	(bad)  
  421b1a:	pop    ss
  421b1b:	or     dl,ah
  421b1d:	pop    esp
  421b1e:	jnp    0x421b91
  421b20:	popa   
  421b21:	add    esp,DWORD PTR [eax]
  421b23:	scas   al,BYTE PTR es:[edi]
  421b24:	outs   dx,BYTE PTR ds:[esi]
  421b25:	inc    ebp
  421b26:	(bad)  
  421b27:	pop    ss
  421b28:	or     dl,ah
  421b2a:	pop    esp
  421b2b:	jnp    0x421b9e
  421b2d:	popa   
  421b2e:	add    esp,DWORD PTR [eax]
  421b30:	scas   al,BYTE PTR es:[edi]
  421b31:	outs   dx,BYTE PTR ds:[esi]
  421b32:	inc    ebp
  421b33:	(bad)  
  421b34:	pop    ss
  421b35:	or     dl,ah
  421b37:	pop    esp
  421b38:	jnp    0x421bab
  421b3a:	popa   
  421b3b:	add    esp,DWORD PTR [eax]
  421b3d:	scas   al,BYTE PTR es:[edi]
  421b3e:	outs   dx,BYTE PTR ds:[esi]
  421b3f:	inc    ebp
  421b40:	(bad)  
  421b41:	pop    ss
  421b42:	or     dl,ah
  421b44:	pop    esp
  421b45:	jnp    0x421bb8
  421b47:	popa   
  421b48:	add    esp,DWORD PTR [eax]
  421b4a:	scas   al,BYTE PTR es:[edi]
  421b4b:	outs   dx,BYTE PTR ds:[esi]
  421b4c:	inc    ebp
  421b4d:	(bad)  
  421b4e:	pop    ss
  421b4f:	or     dl,ah
  421b51:	pop    esp
  421b52:	jnp    0x421bc5
  421b54:	popa   
  421b55:	add    esp,DWORD PTR [eax]
  421b57:	scas   al,BYTE PTR es:[edi]
  421b58:	outs   dx,BYTE PTR ds:[esi]
  421b59:	inc    ebp
  421b5a:	(bad)  
  421b5b:	pop    ss
  421b5c:	or     dl,ah
  421b5e:	pop    esp
  421b5f:	jnp    0x421bd2
  421b61:	popa   
  421b62:	add    esp,DWORD PTR [eax]
  421b64:	scas   al,BYTE PTR es:[edi]
  421b65:	outs   dx,BYTE PTR ds:[esi]
  421b66:	inc    ebp
  421b67:	(bad)  
  421b68:	pop    ss
  421b69:	or     dl,ah
  421b6b:	pop    esp
  421b6c:	jnp    0x421bdf
  421b6e:	popa   
  421b6f:	add    esp,DWORD PTR [eax]
  421b71:	scas   al,BYTE PTR es:[edi]
  421b72:	outs   dx,BYTE PTR ds:[esi]
  421b73:	inc    ebp
  421b74:	(bad)  
  421b75:	pop    ss
  421b76:	or     dl,ah
  421b78:	pop    esp
  421b79:	jnp    0x421bec
  421b7b:	popa   
  421b7c:	add    esp,DWORD PTR [eax]
  421b7e:	scas   al,BYTE PTR es:[edi]
  421b7f:	outs   dx,BYTE PTR ds:[esi]
  421b80:	inc    ebp
  421b81:	(bad)  
  421b82:	pop    ss
  421b83:	or     dl,ah
  421b85:	pop    esp
  421b86:	jnp    0x421bf9
  421b88:	popa   
  421b89:	add    esp,DWORD PTR [eax]
  421b8b:	scas   al,BYTE PTR es:[edi]
  421b8c:	outs   dx,BYTE PTR ds:[esi]
  421b8d:	inc    ebp
  421b8e:	(bad)  
  421b8f:	pop    ss
  421b90:	or     dl,ah
  421b92:	pop    esp
  421b93:	jnp    0x421c06
  421b95:	popa   
  421b96:	add    esp,DWORD PTR [eax]
  421b98:	scas   al,BYTE PTR es:[edi]
  421b99:	outs   dx,BYTE PTR ds:[esi]
  421b9a:	inc    ebp
  421b9b:	(bad)  
  421b9c:	pop    ss
  421b9d:	or     dl,ah
  421b9f:	pop    esp
  421ba0:	jnp    0x421c13
  421ba2:	popa   
  421ba3:	add    esp,DWORD PTR [eax]
  421ba5:	scas   al,BYTE PTR es:[edi]
  421ba6:	outs   dx,BYTE PTR ds:[esi]
  421ba7:	inc    ebp
  421ba8:	(bad)  
  421ba9:	pop    ss
  421baa:	or     dl,ah
  421bac:	pop    esp
  421bad:	jnp    0x421c20
  421baf:	popa   
  421bb0:	add    esp,DWORD PTR [eax]
  421bb2:	scas   al,BYTE PTR es:[edi]
  421bb3:	outs   dx,BYTE PTR ds:[esi]
  421bb4:	inc    ebp
  421bb5:	(bad)  
  421bb6:	pop    ss
  421bb7:	or     dl,ah
  421bb9:	pop    esp
  421bba:	jnp    0x421c2d
  421bbc:	popa   
  421bbd:	add    esp,DWORD PTR [eax]
  421bbf:	scas   al,BYTE PTR es:[edi]
  421bc0:	outs   dx,BYTE PTR ds:[esi]
  421bc1:	inc    ebp
  421bc2:	(bad)  
  421bc3:	pop    ss
  421bc4:	or     dl,ah
  421bc6:	pop    esp
  421bc7:	jnp    0x421c3a
  421bc9:	popa   
  421bca:	add    esp,DWORD PTR [eax]
  421bcc:	scas   al,BYTE PTR es:[edi]
  421bcd:	outs   dx,BYTE PTR ds:[esi]
  421bce:	inc    ebp
  421bcf:	(bad)  
  421bd0:	pop    ss
  421bd1:	or     dl,ah
  421bd3:	pop    esp
  421bd4:	jnp    0x421c47
  421bd6:	popa   
  421bd7:	add    esp,DWORD PTR [eax]
  421bd9:	scas   al,BYTE PTR es:[edi]
  421bda:	outs   dx,BYTE PTR ds:[esi]
  421bdb:	inc    ebp
  421bdc:	(bad)  
  421bdd:	pop    ss
  421bde:	or     dl,ah
  421be0:	pop    esp
  421be1:	jnp    0x421c54
  421be3:	popa   
  421be4:	add    esp,DWORD PTR [eax]
  421be6:	scas   al,BYTE PTR es:[edi]
  421be7:	outs   dx,BYTE PTR ds:[esi]
  421be8:	inc    ebp
  421be9:	(bad)  
  421bea:	pop    ss
  421beb:	or     dl,ah
  421bed:	pop    esp
  421bee:	jnp    0x421c61
  421bf0:	popa   
  421bf1:	add    esp,DWORD PTR [eax]
  421bf3:	scas   al,BYTE PTR es:[edi]
  421bf4:	outs   dx,BYTE PTR ds:[esi]
  421bf5:	inc    ebp
  421bf6:	(bad)  
  421bf7:	pop    ss
  421bf8:	or     dl,ah
  421bfa:	pop    esp
  421bfb:	jnp    0x421c6e
  421bfd:	popa   
  421bfe:	add    esp,DWORD PTR [eax]
  421c00:	scas   al,BYTE PTR es:[edi]
  421c01:	outs   dx,BYTE PTR ds:[esi]
  421c02:	inc    ebp
  421c03:	(bad)  
  421c04:	pop    ss
  421c05:	or     dl,ah
  421c07:	pop    esp
  421c08:	jnp    0x421c7b
  421c0a:	popa   
  421c0b:	add    esp,DWORD PTR [eax]
  421c0d:	scas   al,BYTE PTR es:[edi]
  421c0e:	outs   dx,BYTE PTR ds:[esi]
  421c0f:	inc    ebp
  421c10:	(bad)  
  421c11:	pop    ss
  421c12:	or     dl,ah
  421c14:	pop    esp
  421c15:	jnp    0x421c88
  421c17:	popa   
  421c18:	add    esp,DWORD PTR [eax]
  421c1a:	scas   al,BYTE PTR es:[edi]
  421c1b:	outs   dx,BYTE PTR ds:[esi]
  421c1c:	inc    ebp
  421c1d:	(bad)  
  421c1e:	pop    ss
  421c1f:	or     dl,ah
  421c21:	pop    esp
  421c22:	jnp    0x421c95
  421c24:	popa   
  421c25:	add    esp,DWORD PTR [eax]
  421c27:	scas   al,BYTE PTR es:[edi]
  421c28:	outs   dx,BYTE PTR ds:[esi]
  421c29:	inc    ebp
  421c2a:	(bad)  
  421c2b:	pop    ss
  421c2c:	or     dl,ah
  421c2e:	pop    esp
  421c2f:	jnp    0x421ca2
  421c31:	popa   
  421c32:	add    esp,DWORD PTR [eax]
  421c34:	scas   al,BYTE PTR es:[edi]
  421c35:	outs   dx,BYTE PTR ds:[esi]
  421c36:	inc    ebp
  421c37:	(bad)  
  421c38:	pop    ss
  421c39:	or     dl,ah
  421c3b:	pop    esp
  421c3c:	jnp    0x421caf
  421c3e:	popa   
  421c3f:	add    esp,DWORD PTR [eax]
  421c41:	scas   al,BYTE PTR es:[edi]
  421c42:	outs   dx,BYTE PTR ds:[esi]
  421c43:	inc    ebp
  421c44:	(bad)  
  421c45:	pop    ss
  421c46:	or     dl,ah
  421c48:	pop    esp
  421c49:	jnp    0x421cbc
  421c4b:	popa   
  421c4c:	add    esp,DWORD PTR [eax]
  421c4e:	scas   al,BYTE PTR es:[edi]
  421c4f:	outs   dx,BYTE PTR ds:[esi]
  421c50:	inc    ebp
  421c51:	(bad)  
  421c52:	pop    ss
  421c53:	or     dl,ah
  421c55:	pop    esp
  421c56:	jnp    0x421cc9
  421c58:	popa   
  421c59:	add    esp,DWORD PTR [eax]
  421c5b:	scas   al,BYTE PTR es:[edi]
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	inc    ebp
  421c5e:	(bad)  
  421c5f:	pop    ss
  421c60:	or     dl,ah
  421c62:	pop    esp
  421c63:	jnp    0x421cd6
  421c65:	popa   
  421c66:	add    esp,DWORD PTR [eax]
  421c68:	scas   al,BYTE PTR es:[edi]
  421c69:	outs   dx,BYTE PTR ds:[esi]
  421c6a:	inc    ebp
  421c6b:	(bad)  
  421c6c:	pop    ss
  421c6d:	or     dl,ah
  421c6f:	pop    esp
  421c70:	jnp    0x421ce3
  421c72:	popa   
  421c73:	add    esp,DWORD PTR [eax]
  421c75:	scas   al,BYTE PTR es:[edi]
  421c76:	outs   dx,BYTE PTR ds:[esi]
  421c77:	inc    ebp
  421c78:	(bad)  
  421c79:	pop    ss
  421c7a:	or     dl,ah
  421c7c:	pop    esp
  421c7d:	jnp    0x421cf0
  421c7f:	popa   
  421c80:	add    esp,DWORD PTR [eax]
  421c82:	scas   al,BYTE PTR es:[edi]
  421c83:	outs   dx,BYTE PTR ds:[esi]
  421c84:	inc    ebp
  421c85:	(bad)  
  421c86:	pop    ss
  421c87:	or     dl,ah
  421c89:	pop    esp
  421c8a:	jnp    0x421cfd
  421c8c:	popa   
  421c8d:	add    esp,DWORD PTR [eax]
  421c8f:	scas   al,BYTE PTR es:[edi]
  421c90:	outs   dx,BYTE PTR ds:[esi]
  421c91:	inc    ebp
  421c92:	(bad)  
  421c93:	pop    ss
  421c94:	or     dl,ah
  421c96:	pop    esp
  421c97:	jnp    0x421d0a
  421c99:	popa   
  421c9a:	add    esp,DWORD PTR [eax]
  421c9c:	scas   al,BYTE PTR es:[edi]
  421c9d:	outs   dx,BYTE PTR ds:[esi]
  421c9e:	inc    ebp
  421c9f:	(bad)  
  421ca0:	pop    ss
  421ca1:	or     dl,ah
  421ca3:	pop    esp
  421ca4:	jnp    0x421d17
  421ca6:	popa   
  421ca7:	add    esp,DWORD PTR [eax]
  421ca9:	scas   al,BYTE PTR es:[edi]
  421caa:	outs   dx,BYTE PTR ds:[esi]
  421cab:	inc    ebp
  421cac:	(bad)  
  421cad:	pop    ss
  421cae:	or     dl,ah
  421cb0:	pop    esp
  421cb1:	jnp    0x421d24
  421cb3:	popa   
  421cb4:	add    esp,DWORD PTR [eax]
  421cb6:	scas   al,BYTE PTR es:[edi]
  421cb7:	outs   dx,BYTE PTR ds:[esi]
  421cb8:	inc    ebp
  421cb9:	(bad)  
  421cba:	pop    ss
  421cbb:	or     dl,ah
  421cbd:	pop    esp
  421cbe:	jnp    0x421d31
  421cc0:	popa   
  421cc1:	add    esp,DWORD PTR [eax]
  421cc3:	scas   al,BYTE PTR es:[edi]
  421cc4:	outs   dx,BYTE PTR ds:[esi]
  421cc5:	add    ah,BYTE PTR [ecx+0x1d]
  421cc8:	or     bh,bl
  421cca:	pop    esp
  421ccb:	jnp    0x421d2e
  421ccd:	popa   
  421cce:	add    ecx,DWORD PTR [edx]
  421cd0:	or     al,0xb4
  421cd2:	xor    al,0xe9
  421cd4:	call   0x2c1d6700
  421cd9:	pushf  
  421cda:	push   edi
  421cdb:	jmp    0x421d10
  421cdd:	sbb    bh,bl
  421cdf:	and    edi,esi
  421ce1:	xchg   ebx,eax
  421ce2:	push   eax
  421ce3:	(bad)  
  421ce4:	in     eax,dx
  421ce5:	int3   
  421ce6:	addr16 or al,0xe7
  421ce9:	stos   BYTE PTR es:[edi],al
  421cea:	das    
  421ceb:	test   al,0x6b
  421ced:	in     eax,dx
  421cee:	xchg   DWORD PTR ds:0xc0346fed,esi
  421cf4:	jbe    0x421d17
  421cf6:	and    BYTE PTR [ecx+0x46dacdc9],cl
  421cfc:	addr16 jge 0x421d6d
  421cff:	inc    esi
  421d00:	lods   al,BYTE PTR ds:[esi]
  421d01:	jne    0x421cb5
  421d03:	inc    eax
  421d04:	mov    esi,0xf89e6335
  421d09:	arpl   WORD PTR [ebp+0x30],si
  421d0c:	pushf  
  421d0d:	retf   
  421d0e:	dec    ebp
  421d0f:	les    ebp,FWORD PTR [ebp-0x8c6f06]
  421d15:	ficom  DWORD PTR [ebx+0x75b2fcd6]
  421d1b:	idiv   BYTE PTR [edx+0x1f]
  421d1e:	mov    dl,0x1b
  421d20:	pop    eax
  421d21:	ds mov ecx,0x3c844fdd
  421d27:	cmp    ebp,DWORD PTR [ebp+0x4a]
  421d2a:	sub    eax,0x82cfd4c2
  421d2f:	pop    edi
  421d30:	hlt    
  421d31:	xor    ch,BYTE PTR [ebx+0x55047b46]
  421d37:	xchg   esi,eax
  421d38:	ins    DWORD PTR es:[edi],dx
  421d39:	lock test edi,ebp
  421d3c:	rol    DWORD PTR [ecx-0x69],0xb8
  421d40:	cdq    
  421d41:	cwde   
  421d42:	mov    cl,0x48
  421d44:	mov    ds:0x8be54576,eax
  421d49:	cld    
  421d4a:	or     DWORD PTR [edx+0x18],0x2013a699
  421d51:	daa    
  421d52:	cmp    DWORD PTR [ebp+0x5072ae95],0xffffff9c
  421d59:	bound  ebp,QWORD PTR [edx]
  421d5b:	repnz lods eax,DWORD PTR ds:[esi]
  421d5d:	inc    eax
  421d5e:	hlt    
  421d5f:	inc    ebp
  421d60:	ins    BYTE PTR es:[edi],dx
  421d61:	lods   eax,DWORD PTR ds:[esi]
  421d62:	push   ebp
  421d63:	(bad)  
  421d65:	test   BYTE PTR [ecx+0x5d],dh
  421d68:	aas    
  421d69:	xlat   BYTE PTR ds:[ebx]
  421d6a:	cmp    BYTE PTR [ebp+0x4a],bl
  421d6d:	lods   eax,DWORD PTR ds:[esi]
  421d6e:	cli    
  421d6f:	or     al,BYTE PTR [edi-0x6c]
  421d72:	mov    bh,0x6e
  421d74:	push   eax
  421d75:	rcl    BYTE PTR [esi-0x76a82214],0xb6
  421d7c:	add    esp,ebx
  421d7e:	push   eax
  421d7f:	mov    esp,0x9b751171
  421d84:	lea    esp,[edi+0x28]
  421d87:	idiv   BYTE PTR [edi+0x11]
  421d8a:	loope  0x421d8f
  421d8c:	push   edx
  421d8d:	cmc    
  421d8e:	jb     0x421d34
  421d90:	scas   eax,DWORD PTR es:[edi]
  421d91:	mov    al,ds:0x5bba7e87
  421d96:	sub    dh,BYTE PTR ds:0x47870cd0
  421d9c:	inc    ebp
  421d9d:	push   ebx
  421d9e:	out    dx,eax
  421d9f:	inc    ebx
  421da0:	push   ds
  421da1:	add    DWORD PTR [ebp+ebp*2+0xa],edx
  421da5:	jno    0x421d27
  421da7:	mov    BYTE PTR [ecx],ch
  421da9:	loopne 0x421df7
  421dab:	xchg   ebx,eax
  421dac:	sbb    esp,edi
  421dae:	stc    
  421daf:	rol    DWORD PTR [esp+eax*8-0x54],0xf
  421db4:	sbb    edx,DWORD PTR [eax+0x2a]
  421db7:	repnz (bad) 
  421db9:	xchg   edx,eax
  421dba:	pop    esp
  421dbb:	(bad)  
  421dbc:	not    DWORD PTR [ebx+ebp*4+0x9]
  421dc0:	(bad)  
  421dc1:	aas    
  421dc2:	sub    dl,cl
  421dc4:	sub    BYTE PTR [bp+0x31],0xf7
  421dc9:	es xchg ecx,eax
  421dcb:	push   0x9
  421dcd:	pop    ebx
  421dce:	ja     0x421da0
  421dd0:	mov    esi,0xc812d924
  421dd5:	sub    BYTE PTR [edx],cl
  421dd7:	sub    BYTE PTR [ebx*4-0x5905552e],bh
  421dde:	jmp    FWORD PTR [ecx]
  421de0:	mov    cl,0x3f
  421de2:	inc    edx
  421de3:	outs   dx,DWORD PTR ds:[esi]
  421de4:	fist   WORD PTR [edx+0x31]
  421de7:	dec    edx
  421de8:	mov    bl,0x6c
  421dea:	loop   0x421d7b
  421dec:	adc    BYTE PTR [ebp+0x79b96c6e],bl
  421df2:	mov    ch,BYTE PTR [esi+0x7]
  421df5:	mov    esi,0xba78158a
  421dfa:	int    0x57
  421dfc:	sub    edx,DWORD PTR [edi]
  421dfe:	ja     0x421e2e
  421e00:	out    dx,eax
  421e01:	fisub  WORD PTR [ebx+0x76510757]
  421e07:	retf   0x374f
  421e0a:	mov    al,0x79
  421e0c:	aam    0xdc
  421e0e:	rcr    DWORD PTR [ecx+ebp*1],cl
  421e11:	fmul   DWORD PTR [ecx]
  421e13:	repz mov cs:0xbaca5052,al
  421e1a:	in     eax,0x10
  421e1c:	leave  
  421e1d:	lods   eax,DWORD PTR ds:[esi]
  421e1e:	cmp    dl,BYTE PTR [edx-0x60f7a102]
  421e24:	sti    
  421e25:	js     0x421e65
  421e27:	mov    eax,0x9ced3815
  421e2c:	ret    0x16f2
  421e2f:	dec    ebx
  421e30:	mov    ?,ebp
  421e32:	fstp   QWORD PTR [edi-0x6838989b]
  421e38:	jp     0x421e0d
  421e3a:	pop    esp
  421e3b:	sub    eax,0x1ab47d32
  421e40:	mov    BYTE PTR [ecx+0x51baad32],dh
  421e46:	pop    ds
  421e47:	aaa    
  421e48:	aas    
  421e49:	lock hlt 
  421e4b:	jns    0x421dd2
  421e4d:	je     0x421e75
  421e4f:	xor    eax,0x5c1531f6
  421e54:	jo     0x421e95
  421e56:	push   ebx
  421e57:	cld    
  421e58:	lahf   
  421e59:	ret    0x74cd
  421e5c:	std    
  421e5d:	cwde   
  421e5e:	sub    ebp,esp
  421e60:	(bad)  
  421e62:	inc    edi
  421e63:	sub    DWORD PTR [edi-0xc5f164b],esp
  421e69:	leave  
  421e6a:	mov    edi,0x4bf6ccba
  421e6f:	pop    esp
  421e70:	push   es
  421e71:	pop    eax
  421e72:	shr    BYTE PTR [eax-0x53],0x1f
  421e76:	arpl   WORD PTR [edi+0x15],cx
  421e79:	test   al,0x36
  421e7b:	xchg   BYTE PTR [eax-0x5cddea9f],cl
  421e81:	pop    ss
  421e82:	dec    DWORD PTR [ebx]
  421e84:	repnz adc DWORD PTR [ebx-0x2d],ebx
  421e88:	cmc    
  421e89:	iret   
  421e8a:	pop    edi
  421e8b:	mov    bh,0x67
  421e8d:	xor    DWORD PTR [edi-0x54],esp
  421e90:	and    bh,ch
  421e92:	fdivr  QWORD PTR [edi-0x7a13d831]
  421e98:	in     eax,0x59
  421e9a:	imul   ecx,DWORD PTR ds:0x46de0982,0x43
  421ea1:	xchg   esi,eax
  421ea2:	dec    edx
  421ea3:	test   DWORD PTR [edi+0x96efd71],esp
  421ea9:	je     0x421ecc
  421eab:	add    cl,cl
  421ead:	test   ecx,ebp
  421eaf:	stos   BYTE PTR es:[edi],al
  421eb0:	cs mov edx,0xefdba5a9
  421eb6:	or     esi,ebp
  421eb8:	inc    ecx
  421eb9:	jo     0x421ec4
  421ebb:	imul   BYTE PTR [edi+ebp*1-0x16]
  421ebf:	and    BYTE PTR [ebx],ah
  421ec1:	call   0xad73:0x7e23827b
  421ec8:	cmp    al,0x30
  421eca:	fnstcw WORD PTR [eax]
  421ecc:	add    bh,cl
  421ece:	xchg   ebx,eax
  421ecf:	xlat   BYTE PTR ds:[ebx]
  421ed0:	sbb    eax,0xd9af47ef
  421ed5:	mov    al,BYTE PTR [ebp+esi*4+0x2a2c1be8]
  421edc:	aam    0x96
  421ede:	retf   0x8471
  421ee1:	mov    esi,0xfff2a82
  421ee6:	sub    DWORD PTR [edi],0x5f2c634
  421eec:	dec    edx
  421eed:	clc    
  421eee:	xchg   ebp,eax
  421eef:	stos   BYTE PTR es:[edi],al
  421ef0:	repnz xor BYTE PTR [ebp+0x5ef2297a],0x5c
  421ef8:	sahf   
  421ef9:	pop    ecx
  421efa:	int3   
  421efb:	retf   
  421efc:	or     al,0x44
  421efe:	fld1   
  421f00:	xor    DWORD PTR [edx+0x46],ecx
  421f03:	lea    ecx,[eax*8+0xdd51723]
  421f0a:	retf   
  421f0b:	mov    ds:0x948cc4f2,al
  421f10:	mov    ds:0x35ed874e,eax
  421f15:	call   0x9863:0xb8ed64bb
  421f1c:	or     DWORD PTR [esi+eax*4],edx
  421f1f:	sub    DWORD PTR [edx],esi
  421f21:	sub    DWORD PTR [eax-0x6ca2ddb2],edi
  421f27:	or     esi,esp
  421f29:	ins    BYTE PTR es:[edi],dx
  421f2a:	(bad)  
  421f2b:	test   DWORD PTR [edx],0xf3edebe4
  421f31:	ficomp WORD PTR [ebp+0x4d7852a7]
  421f37:	mov    esi,0x10a209eb
  421f3c:	mov    dl,0x34
  421f3e:	mul    BYTE PTR [ecx]
  421f40:	xchg   edx,eax
  421f41:	imul   DWORD PTR [edi-0x49]
  421f44:	jns    0x421f33
  421f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f47:	iret   
  421f48:	nop
  421f49:	xchg   edx,eax
  421f4a:	jno    0x421f8b
  421f4c:	in     eax,0x83
  421f4e:	test   BYTE PTR [esi],bh
  421f50:	sbb    dl,BYTE PTR [bp+si+0x34a3]
  421f55:	loop   0x421f7c
  421f57:	ins    DWORD PTR es:[edi],dx
  421f58:	sub    BYTE PTR [edx+0x38],ah
  421f5b:	push   ebx
  421f5c:	ins    BYTE PTR es:[edi],dx
  421f5d:	jne    0x421f4b
  421f5f:	lahf   
  421f60:	in     eax,0x8
  421f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f63:	push   esp
  421f64:	adc    BYTE PTR [esi-0x7ca8f4cf],dl
  421f6a:	popa   
  421f6b:	shld   DWORD PTR [edx],edx,cl
  421f6e:	and    dl,0xff
  421f71:	test   ecx,edi
  421f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f74:	jns    0x421feb
  421f76:	jno    0x421f13
  421f78:	je     0x421f28
  421f7a:	das    
  421f7b:	loop   0x421f54
  421f7d:	popa   
  421f7e:	lock mov eax,0x5c184bf3
  421f84:	ins    BYTE PTR es:[edi],dx
  421f85:	xchg   bh,ah
  421f87:	fbstp  TBYTE PTR [edi-0xd]
  421f8a:	(bad)  
  421f8b:	xchg   esp,eax
  421f8c:	icebp  
  421f8d:	inc    edi
  421f8e:	int3   
  421f8f:	test   BYTE PTR ds:0x6891c0bd,ah
  421f95:	mov    eax,0xa829bd51
  421f9a:	stos   DWORD PTR es:[edi],eax
  421f9b:	mov    DWORD PTR [ecx+edi*8-0x36],ebp
  421f9f:	call   0xc36a:0x3bf75359
  421fa6:	hlt    
  421fa7:	das    
  421fa8:	and    DWORD PTR [ebx],eax
  421faa:	pop    ecx
  421fab:	jbe    0x421f61
  421fad:	repnz mov ecx,0x3d818e10
  421fb3:	aam    0xec
  421fb5:	or     esi,esp
  421fb7:	stos   DWORD PTR es:[edi],eax
  421fb8:	enter  0x36db,0x1
  421fbc:	pop    ss
  421fbd:	push   ebp
  421fbe:	loopne 0x421ff2
  421fc0:	pop    ecx
  421fc1:	xor    eax,0x2fb644f7
  421fc6:	pushf  
  421fc7:	jno    0x42202f
  421fc9:	pop    ebx
  421fca:	add    edi,ebx
  421fcc:	enter  0xa675,0x21
  421fd0:	aaa    
  421fd1:	retf   0x2ee5
  421fd4:	pop    es
  421fd5:	push   ebp
  421fd6:	cmp    DWORD PTR [ecx+0x61],0x4ea0cf77
  421fdd:	pop    es
  421fde:	sbb    al,0x2c
  421fe0:	dec    ebx
  421fe1:	mov    BYTE PTR [edi+0x489e2c72],ch
  421fe7:	mov    ah,0x6e
  421fe9:	cmp    DWORD PTR [esi],ebp
  421feb:	cmp    eax,0xc04ded36
  421ff0:	pop    esp
  421ff1:	pop    ss
  421ff2:	repnz ins DWORD PTR es:[edi],dx
  421ff4:	lock mov BYTE PTR [eax],dl
  421ff7:	xor    ch,BYTE PTR [ebx-0x57]
  421ffa:	in     eax,dx
  421ffb:	xchg   edx,eax
  421ffc:	lahf   
  421ffd:	(bad)  
  421ffe:	(bad)  
  421fff:	push   0x8e26e197
  422004:	retf   
  422005:	fnstsw WORD PTR [edi-0x54]
  422008:	or     al,0x7c
  42200a:	ror    DWORD PTR [ebp+0x33e44729],cl
  422010:	lahf   
  422011:	inc    eax
  422012:	mov    ch,BYTE PTR [ebp+0x62]
  422015:	sub    dl,BYTE PTR [edi]
  422017:	popf   
  422018:	sub    al,dl
  42201a:	push   esi
  42201b:	sbb    bh,BYTE PTR [eax]
  42201d:	jne    0x421fb4
  42201f:	mov    ebp,0x81c1879c
  422024:	adc    DWORD PTR [ebp-0x1a],esp
  422027:	jl     0x421ff5
  422029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42202a:	loope  0x42200e
  42202c:	stos   DWORD PTR es:[edi],eax
  42202d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42202e:	int3   
  42202f:	cwde   
  422030:	xor    eax,0x49c66d4d
  422035:	push   ss
  422036:	(bad)  
  422037:	adc    al,0xd0
  422039:	into   
  42203a:	push   DWORD PTR [edx+0x4d1d9ad7]
  422040:	imul   esp,ebx,0x8bd293c8
  422046:	loope  0x422036
  422048:	out    dx,eax
  422049:	imul   edi,DWORD PTR [eax+0x7e],0x32
  42204d:	lods   al,BYTE PTR ds:[esi]
  42204e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42204f:	pop    esi
  422050:	adc    esi,DWORD PTR [edi+0x4b]
  422053:	add    eax,0x14578564
  422058:	jmp    0xa26a:0x54e9ba5
  42205f:	or     al,0xaa
  422061:	ficom  WORD PTR [edi+0x15dcda1d]
  422067:	lea    esi,[esi]
  422069:	or     al,cl
  42206b:	scas   al,BYTE PTR es:[edi]
  42206c:	mov    esp,eax
  42206e:	shr    ebp,0x3a
  422071:	aad    0x8a
  422073:	aaa    
  422074:	mov    bh,0x86
  422076:	ficom  DWORD PTR [ebp+0x19]
  422079:	xchg   ecx,eax
  42207a:	jle    0x422009
  42207c:	dec    ebp
  42207d:	pop    eax
  42207e:	popf   
  42207f:	jne    0x4220a5
  422081:	sub    BYTE PTR [edx+0x5a],0x82
  422085:	sub    DWORD PTR [ebp-0x2f],ecx
  422088:	lahf   
  422089:	aaa    
  42208a:	(bad)  
  42208b:	cs xchg ecx,eax
  42208d:	ss jle 0x4220c1
  422090:	fwait
  422091:	mov    cl,0x67
  422093:	cmp    DWORD PTR [esi-0x1300ba85],0xffffffc1
  42209a:	push   0x94239eba
  42209f:	lds    ecx,FWORD PTR [di+0x1d9]
  4220a4:	inc    edx
  4220a5:	fdiv   st(2),st
  4220a7:	xor    eax,0x6a70b1dd
  4220ac:	loop   0x422041
  4220ae:	cmp    esi,edx
  4220b0:	int3   
  4220b1:	jmp    esi
  4220b3:	es gs test al,0x4f
  4220b7:	push   ebp
  4220b8:	int3   
  4220b9:	mov    edx,0x22ff8df6
  4220be:	jmp    0x3fc747ee
  4220c3:	pop    eax
  4220c4:	push   0x65
  4220c6:	jecxz  0x4220a6
  4220c8:	push   ecx
  4220c9:	imul   eax,DWORD PTR [eax],0xfffffffc
  4220cc:	enter  0xdf6e,0xee
  4220d0:	ret    0x65ae
  4220d3:	and    eax,0xc9427069
  4220d8:	cld    
  4220d9:	jg     0x42212e
  4220db:	dec    ebp
  4220dc:	mov    esi,esi
  4220de:	xchg   BYTE PTR [esi+0x1e4ee769],al
  4220e4:	push   es
  4220e5:	pop    edx
  4220e6:	sub    BYTE PTR [eax+0x15],0x35
  4220ea:	nop
  4220eb:	jne    0x422098
  4220ed:	cmp    BYTE PTR [edi+0x3be2b1ab],al
  4220f3:	fsub   st,st(0)
  4220f5:	add    cl,BYTE PTR [ebp+0x1c]
  4220f8:	(bad)  
  4220f9:	(bad)  
  4220fa:	mov    ds:0x2fd242ec,al
  4220ff:	div    al
  422101:	mov    ds:0x9be82e38,al
  422106:	inc    ebx
  422107:	int3   
  422108:	pushf  
  422109:	outs   dx,BYTE PTR ds:[esi]
  42210a:	xchg   esp,eax
  42210b:	sub    BYTE PTR [eax],0x16
  42210e:	jae    0x42214c
  422110:	or     al,0x5
  422112:	es mov edi,0xd5b1d71c
  422118:	fldenv [ebx]
  42211a:	rcl    esp,cl
  42211c:	ds jb  0x4220f0
  42211f:	mov    edi,0xb08f65c4
  422124:	je     0x422106
  422126:	fcmovu st,st(7)
  422128:	fcmovnu st,st(4)
  42212a:	ret    
  42212b:	(bad)  
  42212d:	div    ch
  42212f:	retf   0x79ff
  422132:	or     BYTE PTR [eax-0x56f26b17],cl
  422138:	ficom  DWORD PTR [ecx]
  42213a:	loop   0x4220e8
  42213c:	outs   dx,BYTE PTR ds:[esi]
  42213d:	sbb    eax,0x751d910f
  422142:	cmc    
  422143:	and    BYTE PTR [esi+0x18],bl
  422146:	inc    esp
  422147:	pop    ds
  422148:	add    al,0x75
  42214a:	fwait
  42214b:	loop   0x422117
  42214d:	cmp    eax,0xac6741f
  422152:	gs test eax,0x51f1c212
  422158:	lahf   
  422159:	call   0x36ce:0x6696c282
  422160:	add    al,BYTE PTR [ecx]
  422162:	adc    BYTE PTR [esi-0x25],cl
  422165:	sub    al,0x52
  422167:	retf   
  422168:	arpl   WORD PTR [edi-0x9],sp
  42216b:	add    eax,0x907b0ffe
  422170:	adc    bl,BYTE PTR [ecx]
  422172:	dec    edi
  422173:	mov    eax,ds:0xfe13078d
  422178:	dec    ebp
  422179:	sub    edi,DWORD PTR [esp+ebp*8+0xd86da6f]
  422180:	xchg   ebx,eax
  422181:	js     0x42211e
  422183:	mov    ecx,0x4fd7724b
  422188:	push   esp
  422189:	xor    dl,BYTE PTR [ebx+ebp*2]
  42218c:	cli    
  42218d:	mov    ecx,0x6514943f
  422192:	cmp    eax,0x21792f77
  422197:	popf   
  422198:	push   ebp
  422199:	xor    BYTE PTR ds:[edx-0x173f205d],bh
  4221a0:	sbb    edx,DWORD PTR [edx+ecx*8]
  4221a3:	jne    0x42219f
  4221a5:	(bad)  
  4221a6:	push   edi
  4221a7:	lea    esp,[ecx+0x51]
  4221aa:	dec    ecx
  4221ab:	cdq    
  4221ac:	dec    eax
  4221ad:	adc    eax,0xc2244279
  4221b2:	push   esp
  4221b3:	sbb    ecx,ebp
  4221b5:	sti    
  4221b6:	sbb    BYTE PTR [edi],dl
  4221b8:	pop    ss
  4221b9:	and    al,0x82
  4221bb:	shr    BYTE PTR [ecx+0x2c],1
  4221be:	cmp    ecx,DWORD PTR [eax+0x5384da26]
  4221c4:	fld    DWORD PTR ds:0x58b88167
  4221ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221cb:	pop    ds
  4221cc:	(bad)  
  4221cf:	aas    
  4221d0:	dec    esi
  4221d1:	pop    ecx
  4221d2:	dec    ecx
  4221d3:	mov    gs,ebx
  4221d5:	pop    ebx
  4221d6:	je     0x42219d
  4221d8:	adc    al,0xa6
  4221da:	xchg   BYTE PTR [eax+eiz*8],ch
  4221dd:	inc    esp
  4221de:	stc    
  4221df:	js     0x422232
  4221e1:	ror    BYTE PTR [ebp-0x5f],0x6
  4221e5:	and    ebp,ebx
  4221e7:	cmc    
  4221e8:	pop    ecx
  4221e9:	mov    bh,0x34
  4221eb:	pop    esp
  4221ec:	push   esp
  4221ed:	sbb    DWORD PTR [ebx-0x45],ebp
  4221f0:	or     DWORD PTR [ecx],ebp
  4221f2:	sub    al,0x8d
  4221f4:	leave  
  4221f5:	jecxz  0x4221c1
  4221f7:	dec    edx
  4221f8:	xor    BYTE PTR [ecx+0x1acafa13],0xa
  4221ff:	mov    bh,0xe5
  422201:	cmc    
  422202:	ins    BYTE PTR es:[edi],dx
  422203:	fdiv   QWORD PTR [esi]
  422205:	repz or BYTE PTR [edx+0x3cc04c09],ah
  42220c:	(bad)  
  42220d:	shr    DWORD PTR [ecx-0x13bbbaa8],cl
  422213:	(bad)  
  422215:	fnstenv [edx+0x535e7612]
  42221b:	inc    edi
  42221c:	pop    ebx
  42221d:	not    BYTE PTR cs:[edx]
  422220:	push   ecx
  422221:	hlt    
  422222:	fiadd  DWORD PTR [esi+esi*1+0x709fadbb]
  422229:	mov    ds:0x2def6885,al
  42222e:	push   ecx
  42222f:	lea    ebx,[ebx-0x1193fd00]
  422235:	mov    esi,ebp
  422237:	shr    BYTE PTR [eax-0x5b059f47],cl
  42223d:	mov    bl,0x2
  42223f:	ret    
  422240:	xchg   ebx,eax
  422241:	mov    es,WORD PTR [edx]
  422243:	mov    ecx,0xf85b2742
  422248:	icebp  
  422249:	retf   0xea8c
  42224c:	and    dh,bh
  42224e:	xchg   esp,eax
  42224f:	jle    0x422274
  422251:	cmp    eax,0xcb1bfe17
  422256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422257:	jg     0x422243
  422259:	sub    bh,BYTE PTR [edi+0x69]
  42225c:	jae    0x422282
  42225e:	nop
  42225f:	outs   dx,BYTE PTR ds:[esi]
  422261:	and    eax,0x328b79c0
  422266:	push   ebp
  422267:	shl    BYTE PTR [ecx-0x3d],cl
  42226a:	ins    BYTE PTR es:[edi],dx
  42226b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42226c:	xor    ah,BYTE PTR [esi+0x78]
  42226f:	pop    ss
  422270:	(bad)  
  422272:	and    DWORD PTR [ecx+0x388e9159],esp
  422278:	mov    WORD PTR [edi],?
  42227a:	mov    dl,0x12
  42227c:	imul   ebp,edx,0x14a26e3
  422282:	addr16 dec ebp
  422284:	add    DWORD PTR [esi],edx
  422286:	pop    edi
  422287:	xor    esp,DWORD PTR [ebx-0x6b]
  42228a:	ret    
  42228b:	loopne 0x422227
  42228d:	mov    BYTE PTR [ecx+0x855d1c6],ah
  422293:	push   ebx
  422294:	jle    0x422285
  422296:	ins    DWORD PTR es:[edi],dx
  422297:	adc    al,0xa9
  422299:	add    bh,BYTE PTR [edx+esi*4]
  42229c:	and    cl,BYTE PTR [edx+eiz*1+0x44e96c86]
  4222a3:	std    
  4222a4:	js     0x422319
  4222a6:	sar    BYTE PTR [esi-0x2becca62],1
  4222ac:	jno    0x42223f
  4222ae:	jne    0x4222a8
  4222b0:	dec    edi
  4222b1:	cmp    DWORD PTR [edx+0x343080f0],esi
  4222b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222b8:	fimul  WORD PTR [ebx]
  4222ba:	jp     0x4222b5
  4222bc:	dec    edx
  4222bd:	mov    esi,0x166ec0a1
  4222c2:	sbb    BYTE PTR [esi+0x6df93bfb],bl
  4222c8:	inc    ebp
  4222c9:	cwde   
  4222ca:	push   eax
  4222cb:	and    DWORD PTR [ebp-0x60],esi
  4222ce:	pusha  
  4222cf:	inc    esp
  4222d0:	out    dx,eax
  4222d1:	and    DWORD PTR [edi+edx*8-0x301b41f2],edi
  4222d8:	xor    eax,DWORD PTR [ecx+eiz*4-0x6f899763]
  4222df:	fcom   QWORD PTR [esi]
  4222e1:	mov    ebx,0xc3720506
  4222e6:	hlt    
  4222e7:	aad    0xc2
  4222e9:	adc    DWORD PTR [ebx-0x61c35c8b],eax
  4222ef:	jmp    0xcb24:0x4505dd68
  4222f6:	cdq    
  4222f7:	mov    dl,0x78
  4222f9:	fcmove st,st(7)
  4222fb:	aam    0x86
  4222fd:	mov    al,ds:0xd5472abc
  422302:	mov    ah,0xf0
  422304:	in     eax,0x82
  422306:	aaa    
  422307:	(bad)  
  422308:	retf   0xae32
  42230b:	add    bl,BYTE PTR ds:0xd64ded30
  422311:	call   0xa56f8d64
  422316:	popf   
  422317:	mov    ah,0xc8
  422319:	stos   BYTE PTR es:[edi],al
  42231a:	hlt    
  42231b:	jae    0x4222ce
  42231d:	mov    ch,dl
  42231f:	xor    edx,eax
  422321:	xor    BYTE PTR [ebx+0x2e],0x8e
  422325:	into   
  422326:	jge    0x4222ff
  422328:	add    BYTE PTR [ecx+eiz*1+0x2b7635db],ah
  42232f:	mov    dl,0xcd
  422331:	pop    ecx
  422332:	pop    edi
  422333:	fiadd  DWORD PTR [esi+ebx*1-0x3]
  422337:	cmp    dh,al
  422339:	lds    esp,FWORD PTR [esi+0xc]
  42233c:	xor    BYTE PTR [ecx-0x50],0x70
  422340:	(bad)  
  422341:	popa   
  422342:	xchg   DWORD PTR [ecx],ebx
  422344:	test   DWORD PTR [esi],eax
  422346:	retf   
  422347:	jle    0x4223c5
  422349:	xor    DWORD PTR [edi+eiz*1],0x74c24569
  422350:	addr16 dec ecx
  422352:	sbb    ecx,ebp
  422354:	mov    ch,0xa2
  422356:	xor    BYTE PTR [edx+ebx*1+0x4041dd2d],dh
  42235d:	xlat   BYTE PTR ds:[ebx]
  42235e:	test   DWORD PTR [ebx-0x63f6bf97],0x37e30dc2
  422368:	pop    ds
  422369:	shl    eax,0x94
  42236c:	or     dh,bh
  42236e:	cmp    DWORD PTR [ebp-0x689bf4a8],edi
  422374:	sti    
  422375:	mov    ecx,0xdb87f0e
  42237a:	getsec 
  42237c:	cmp    BYTE PTR [esi-0x76],ah
  42237f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422380:	daa    
  422381:	dec    edi
  422382:	add    al,0x8c
  422384:	mov    esp,0x7158cdd
  422389:	test   eax,0x1b9caf0b
  42238e:	dec    esi
  42238f:	shl    BYTE PTR [ebx*8-0x2817c4c8],1
  422396:	sbb    al,0xbc
  422398:	mov    al,0x8a
  42239a:	and    ah,bh
  42239c:	hlt    
  42239d:	mov    dl,0x81
  42239f:	out    0xe1,eax
  4223a1:	es sub dl,0x43
  4223a5:	xchg   esi,eax
  4223a6:	jp     0x42240c
  4223a8:	add    al,0xe1
  4223aa:	popa   
  4223ab:	sar    DWORD PTR [edx-0x55c56494],0x6a
  4223b2:	sahf   
  4223b3:	les    esi,FWORD PTR [ebp+0x35898c83]
  4223b9:	ret    0x9138
  4223bc:	fwait
  4223bd:	pop    ebp
  4223be:	inc    esp
  4223bf:	enter  0xd504,0x15
  4223c3:	(bad)  
  4223c4:	stos   BYTE PTR es:[edi],al
  4223c5:	and    al,0xd7
  4223c7:	cmp    BYTE PTR [eax-0x67],0x14
  4223cb:	fwait
  4223cc:	pop    ss
  4223cd:	add    DWORD PTR [edx-0x47],0xc8e1a9f8
  4223d4:	xor    eax,0x223782d8
  4223d9:	mov    ds:0x63c78d26,eax
  4223de:	loope  0x4223ff
  4223e0:	xchg   DWORD PTR [esi+eax*4-0x5e],edi
  4223e4:	pushf  
  4223e5:	ds clc 
  4223e7:	push   es
  4223e8:	rol    edi,cl
  4223ea:	das    
  4223eb:	cmp    DWORD PTR [edi+0x8d8abdd],ebp
  4223f1:	sbb    al,BYTE PTR [edx]
  4223f3:	xchg   edx,eax
  4223f4:	leave  
  4223f5:	sbb    edx,esp
  4223f7:	pop    ebp
  4223f8:	push   esp
  4223f9:	aam    0xef
  4223fb:	stc    
  4223fc:	mov    bl,0x4
  4223fe:	xlat   BYTE PTR ds:[ebx]
  4223ff:	mov    ecx,0x65ccf083
  422404:	pop    esp
  422405:	lods   al,BYTE PTR ds:[esi]
  422406:	cmp    bl,al
  422408:	xor    bh,dl
  42240a:	mov    BYTE PTR [edi+0x54],dl
  42240d:	stc    
  42240e:	pop    esi
  42240f:	inc    edx
  422410:	add    al,0x16
  422412:	jmp    0x575e:0x7d790ed0
  422419:	mov    esi,0x567bdc47
  42241e:	mov    DWORD PTR [ebp-0x747e82ea],edi
  422424:	stos   BYTE PTR es:[edi],al
  422425:	rol    DWORD PTR [ebx+ebx*1+0x47cb21d],1
  42242c:	add    DWORD PTR [esp+edx*2+0x74],esp
  422430:	in     eax,dx
  422431:	(bad)  
  422432:	jno    0x422465
  422434:	sbb    al,0xac
  422436:	into   
  422437:	out    0x50,eax
  422439:	xchg   BYTE PTR [eax+0x21],ah
  42243c:	int    0x42
  42243e:	xchg   edi,eax
  42243f:	loopne 0x422404
  422441:	leave  
  422442:	loopne 0x422470
  422444:	jae    0x4223e1
  422446:	xor    esp,DWORD PTR [ecx-0x47]
  422449:	xchg   esi,eax
  42244a:	test   BYTE PTR [edx+0x38],bh
  42244d:	add    eax,0x8bc501c9
  422452:	dec    esp
  422453:	(bad)  
  422454:	push   edx
  422455:	(bad)  
  422457:	sti    
  422458:	push   0xffffffc8
  42245a:	cmp    BYTE PTR [edi+0x2ce6824b],dl
  422460:	mov    eax,0x538af754
  422465:	dec    esi
  422466:	ins    DWORD PTR es:[edi],dx
  422467:	std    
  422468:	adc    ebp,eax
  42246a:	cmp    ebp,edx
  42246c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42246d:	mov    esp,0x63493b06
  422472:	mov    esi,0x25b23ea6
  422477:	push   esp
  422478:	mov    esi,0x9df43e6a
  42247d:	in     al,0x44
  42247f:	int3   
  422480:	cmp    DWORD PTR [eax+0x35f1a0de],ebp
  422486:	inc    ecx
  422487:	sub    ebx,0xd04b13de
  42248d:	xor    al,0xd
  42248f:	jge    0x4224ed
  422491:	in     eax,dx
  422492:	rcl    DWORD PTR [edi],0x52
  422495:	ins    BYTE PTR es:[edi],dx
  422496:	dec    ecx
  422497:	inc    edx
  422498:	adc    eax,0xa2c305ab
  42249d:	jle    0x42247e
  42249f:	lahf   
  4224a0:	imul   esi,DWORD PTR [ebx],0xffffffe8
  4224a3:	shr    BYTE PTR [edx+ebx*1],1
  4224a6:	cs mov al,cl
  4224a9:	and    eax,0x60e4dac9
  4224ae:	into   
  4224af:	aaa    
  4224b0:	in     al,0xca
  4224b2:	fldcw  WORD PTR [ecx+edx*2+0x2f11ea98]
  4224ba:	(bad)  
  4224bb:	fcom   st(5)
  4224bd:	xor    eax,0x81f4c797
  4224c2:	adc    eax,0xa6f2543e
  4224c7:	call   FWORD PTR [eax-0x45]
  4224ca:	jne    0x4224fa
  4224cc:	cmp    bh,ch
  4224ce:	and    DWORD PTR [ecx-0x45c4f630],ebp
  4224d4:	inc    ebp
  4224d5:	cmp    ah,BYTE PTR [ecx-0xd]
  4224d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224d9:	and    ch,BYTE PTR [ebx]
  4224db:	or     bl,BYTE PTR [eax+0x59]
  4224de:	cmp    al,0x47
  4224e0:	cmp    eax,0x382576c0
  4224e5:	jl     0x422510
  4224e7:	stos   BYTE PTR es:[edi],al
  4224e8:	xor    eax,0x27a1d7a3
  4224ed:	inc    ebx
  4224ee:	sbb    dh,BYTE PTR fs:[edi]
  4224f1:	imul   ecx,DWORD PTR [edx+0x4459e96],0xd29027ef
  4224fb:	mov    ds,WORD PTR [esp+esi*2+0x4a7fc149]
  422502:	(bad)  
  422503:	in     al,dx
  422504:	retf   
  422505:	ins    BYTE PTR es:[edi],dx
  422506:	scas   eax,DWORD PTR es:[edi]
  422507:	jmp    0x651:0x87d81a08
  42250e:	pop    esi
  42250f:	test   BYTE PTR [eax+0x38],ch
  422512:	mov    eax,0x7bbfd16b
  422517:	jo     0x4224a2
  422519:	add    bl,BYTE PTR [ebp+0x17bedc57]
  42251f:	dec    edi
  422520:	scas   eax,DWORD PTR es:[edi]
  422521:	arpl   WORD PTR [edx],bp
  422523:	add    cl,BYTE PTR [esi]
  422525:	xchg   esp,eax
  422526:	int3   
  422527:	push   0xdfacec73
  42252c:	inc    edi
  42252d:	mov    ah,0xd5
  42252f:	sbb    eax,0xb9d42e6a
  422534:	jp     0x4224bd
  422536:	stos   BYTE PTR es:[edi],al
  422537:	xor    eax,0x5481f9c5
  42253c:	retf   0xf3bc
  42253f:	fbld   TBYTE PTR [bp+si-0x1c]
  422543:	hlt    
  422544:	xchg   ebx,eax
  422545:	sbb    BYTE PTR [esi+eax*4+0xb585938],al
  42254c:	mov    bh,0x35
  42254e:	or     eax,0x8226e286
  422553:	imul   edx,DWORD PTR [ecx-0x3699b1a7],0x29
  42255a:	cmp    BYTE PTR ds:0x5979ba1e,bl
  422560:	xchg   edx,eax
  422561:	lock addr16 pop ebp
  422564:	bound  ebp,QWORD PTR [edx+0x5d9ec70f]
  42256a:	out    0xc0,al
  42256c:	push   ds
  42256d:	rol    ecx,cl
  42256f:	cwde   
  422570:	sti    
  422571:	mov    bh,0x65
  422573:	mov    ds:0x549d7753,al
  422578:	fbld   TBYTE PTR [ebx]
  42257a:	jnp    0x4225f0
  42257c:	jne    0x4225c4
  42257e:	fs cmp eax,0xeced3a7f
  422584:	popa   
  422585:	repnz ins DWORD PTR es:[edi],dx
  422587:	popf   
  422588:	jmp    0x97ae950d
  42258d:	ins    BYTE PTR es:[edi],dx
  42258e:	mov    edx,0x40c2a334
  422593:	jno    0x422516
  422595:	push   0x98aa50a6
  42259a:	push   edx
  42259b:	rcl    BYTE PTR [edi-0x59cda4c],1
  4225a1:	jmp    0x422577
  4225a3:	mov    al,ds:0x53e6eed1
  4225a8:	jge    0x42260a
  4225aa:	mov    cl,0x28
  4225ac:	dec    esi
  4225ad:	aaa    
  4225ae:	jmp    0x6d22:0x842e685c
  4225b5:	je     0x4225af
  4225b7:	xchg   esp,eax
  4225b8:	ficom  DWORD PTR [eax+0x6d]
  4225bb:	mov    WORD PTR [ecx],?
  4225bd:	add    BYTE PTR [edi],0x99
  4225c0:	fwait
  4225c1:	sti    
  4225c2:	ret    0xafcf
  4225c5:	(bad)  
  4225c6:	xchg   edi,eax
  4225c7:	das    
  4225c8:	aas    
  4225c9:	int    0x1d
  4225cb:	sbb    DWORD PTR [edx],esi
  4225cd:	adc    DWORD PTR [eax],0x66
  4225d0:	add    eax,0x49f9271
  4225d5:	test   BYTE PTR [edi-0x23],ch
  4225d8:	push   edx
  4225d9:	dec    edi
  4225da:	cmp    edx,DWORD PTR [esi+0xc9b09be]
  4225e0:	jbe    0x4225fd
  4225e2:	inc    edi
  4225e3:	(bad)  
  4225e4:	inc    esp
  4225e5:	test   BYTE PTR [ebx],cl
  4225e7:	call   0xc3102aa0
  4225ec:	outs   dx,BYTE PTR ds:[esi]
  4225ed:	out    dx,al
  4225ee:	dec    esp
  4225ef:	dec    ecx
  4225f0:	pop    esp
  4225f1:	shl    DWORD PTR [edx+0x21325088],0x1a
  4225f8:	loopne 0x42258a
  4225fa:	shl    BYTE PTR [edx],0x96
  4225fd:	jns    0x42264c
  4225ff:	add    BYTE PTR [ecx-0x191df7da],cl
  422605:	stc    
  422606:	into   
  422607:	sub    ah,bl
  422609:	sbb    DWORD PTR [ebp+0x375efbea],eax
  42260f:	fsub   QWORD PTR [ecx+esi*1+0x7e]
  422613:	xchg   DWORD PTR [eax-0xe27d91a],ebx
  422619:	mov    edx,eax
  42261b:	pop    edx
  42261c:	cld    
  42261d:	imul   esp,DWORD PTR [edi],0xe117ffd1
  422623:	mov    al,0xa5
  422625:	add    ecx,DWORD PTR [ecx]
  422627:	mov    bl,BYTE PTR [eax-0x1c86e2b0]
  42262d:	lahf   
  42262e:	mov    esi,esp
  422630:	jb     0x42260d
  422632:	in     al,dx
  422633:	cli    
  422634:	mov    ds:0x86ed6f15,eax
  422639:	xchg   ebx,eax
  42263a:	nop
  42263b:	enter  0xbc5d,0xec
  42263f:	std    
  422640:	repnz lock mov BYTE PTR [ecx+0x76029216],bh
  422648:	fs cwde 
  42264a:	rcr    DWORD PTR [edi-0x47],0x56
  42264e:	popa   
  42264f:	fbstp  TBYTE PTR [edi]
  422651:	iret   
  422652:	sub    BYTE PTR [ecx+esi*4+0x21],0x8e
  422657:	adc    ebp,DWORD PTR [esi]
  422659:	or     al,0xca
  42265b:	mov    esp,0x69653501
  422660:	or     eax,0xa37b527c
  422665:	adc    ebx,DWORD PTR [ecx-0x4f]
  422668:	pushf  
  422669:	xlat   BYTE PTR ds:[ebx]
  42266a:	int3   
  42266b:	pop    esi
  42266c:	imul   BYTE PTR [esi-0x40942359]
  422672:	rcl    DWORD PTR [ebx+ebx*1+0x1e],0x8b
  422677:	push   0x2fce2ae4
  42267c:	jl     0x4226fc
  42267e:	imul   esi,DWORD PTR [ebp-0x4f],0x33
  422682:	mov    esp,0xbb3b7866
  422687:	push   edi
  422688:	push   ebp
  422689:	cli    
  42268a:	mov    dh,0xc7
  42268c:	mov    ch,0xbb
  42268e:	shl    DWORD PTR [edi],1
  422690:	aam    0x34
  422692:	pop    es
  422693:	adc    DWORD PTR ds:0xc9b7ed8d,0x9dbdfc9e
  42269d:	int    0x6c
  42269f:	add    al,0x1d
  4226a1:	(bad)  
  4226a2:	loop   0x422679
  4226a4:	pop    ss
  4226a5:	jg     0x4226cd
  4226a7:	cdq    
  4226a8:	dec    DWORD PTR [esi+0x47]
  4226ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ac:	clc    
  4226ad:	cmp    DWORD PTR [eax-0x69],ebx
  4226b0:	loope  0x42272c
  4226b2:	mov    ch,0x85
  4226b4:	arpl   sp,di
  4226b6:	add    bl,ah
  4226b8:	aas    
  4226b9:	out    0xd3,eax
  4226bb:	rcl    edx,0x0
  4226be:	test   eax,0x1d4a55ff
  4226c3:	out    dx,eax
  4226c4:	dec    ebx
  4226c5:	and    eax,DWORD PTR [eax-0x5c]
  4226c8:	adc    esp,eax
  4226ca:	pop    ebp
  4226cb:	pop    esi
  4226cc:	push   ss
  4226cd:	xlat   BYTE PTR ds:[ebx]
  4226ce:	sbb    DWORD PTR [ecx+0x2a],edi
  4226d1:	jl     0x42268c
  4226d3:	out    0xb3,al
  4226d5:	cwde   
  4226d6:	push   ebp
  4226d7:	enter  0x21dd,0xf2
  4226db:	mov    cl,0x7e
  4226dd:	mov    edi,0xd08974a0
  4226e2:	push   esi
  4226e3:	test   BYTE PTR [ecx-0x17],dl
  4226e6:	mov    ds:0xd19ccdd,al
  4226eb:	xor    edi,DWORD PTR [ecx+0x1a6e80a1]
  4226f1:	push   eax
  4226f2:	xchg   BYTE PTR [edx+0x31],dh
  4226f5:	mov    BYTE PTR [esi],ch
  4226f7:	sub    al,0xab
  4226f9:	dec    ecx
  4226fa:	push   esp
  4226fb:	xor    BYTE PTR [ecx+0x1b79c027],bl
  422701:	dec    esp
  422702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422703:	inc    eax
  422704:	push   0x29
  422706:	adc    DWORD PTR [edx-0x43],0xbc585105
  42270d:	leave  
  42270e:	mov    edx,DWORD PTR [ecx+0x14caae39]
  422714:	push   edi
  422715:	cdq    
  422716:	xchg   esi,eax
  422717:	psubq  mm5,mm0
  42271a:	push   cs
  42271b:	or     BYTE PTR ds:0x64a0837,dl
  422721:	mov    al,0x5e
  422723:	sbb    ch,ah
  422725:	jo     0x42276d
  422727:	loopne 0x422750
  422729:	push   ebp
  42272a:	xor    ah,dh
  42272c:	fstp   TBYTE PTR [edx+0x29401bb5]
  422732:	or     bl,dh
  422734:	xchg   ecx,eax
  422735:	aam    0x71
  422737:	ret    
  422738:	ror    eax,cl
  42273a:	adc    eax,0xa9ca134c
  42273f:	pop    ds
  422740:	xchg   esp,eax
  422741:	sub    eax,0x890007e5
  422746:	jno    0x4226f3
  422748:	xor    BYTE PTR [ebp+0x48],0x1c
  42274c:	retf   
  42274d:	popf   
  42274e:	das    
  42274f:	sub    ah,dl
  422751:	jbe    0x4226f1
  422753:	into   
  422754:	sub    eax,0xd9e64014
  422759:	loope  0x422742
  42275b:	add    al,0x2e
  42275d:	outs   dx,BYTE PTR ds:[esi]
  42275e:	inc    ecx
  42275f:	jno    0x4226e8
  422761:	inc    eax
  422762:	lds    esi,FWORD PTR [ecx-0x2df65bba]
  422768:	sbb    DWORD PTR [ecx],0x1b72d442
  42276e:	inc    esp
  42276f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422770:	inc    ecx
  422771:	inc    esp
  422772:	jl     0x422723
  422774:	cdq    
  422775:	pop    esi
  422776:	repz pop esi
  422778:	jae    0x42278e
  42277a:	push   eax
  42277b:	lock cmp al,0x38
  42277e:	mov    ch,0xc5
  422780:	lods   al,BYTE PTR ds:[esi]
  422781:	ins    BYTE PTR es:[edi],dx
  422782:	sbb    bl,dl
  422784:	aaa    
  422785:	adc    dl,bh
  422787:	sub    edx,DWORD PTR [ebx*1+0x40f90804]
  42278e:	dec    edi
  42278f:	repz add eax,0xd6797d13
  422795:	lahf   
  422796:	sbb    eax,0x79332578
  42279b:	test   al,0xe6
  42279d:	dec    esi
  42279e:	pop    ecx
  42279f:	pop    ds
  4227a0:	jns    0x422816
  4227a2:	test   DWORD PTR [ecx+eiz*8],ebx
  4227a5:	pop    edx
  4227a6:	push   es
  4227a7:	dec    edx
  4227a8:	test   ebx,esi
  4227aa:	into   
  4227ab:	hlt    
  4227ac:	sub    BYTE PTR [ebx+ebp*2-0x693cccd1],dh
  4227b3:	mov    edi,DWORD PTR [edi]
  4227b5:	jecxz  0x42274f
  4227b7:	retf   0x7d94
  4227ba:	mov    ah,0x14
  4227bc:	mov    ebx,0xe5aab191
  4227c1:	push   0xaac19d4e
  4227c6:	cmp    DWORD PTR [eax-0x3d],edi
  4227c9:	push   esi
  4227ca:	lock and eax,0x4734b1c9
  4227d0:	add    BYTE PTR [ebp+0x4184da16],dh
  4227d6:	les    esi,FWORD PTR [esi+0x27]
  4227d9:	iret   
  4227da:	sahf   
  4227db:	and    al,bl
  4227dd:	and    esp,DWORD PTR [eax-0x1b]
  4227e0:	les    esi,FWORD PTR [edi]
  4227e2:	das    
  4227e3:	add    eax,0xa559f261
  4227e8:	jb     0x42280e
  4227ea:	push   ebx
  4227eb:	sub    esp,DWORD PTR [esi-0x59c3481b]
  4227f1:	xor    DWORD PTR [ebx-0x731995e5],esp
  4227f7:	xchg   ebx,eax
  4227f8:	aam    0xac
  4227fa:	test   BYTE PTR [esi+0x6a],0x85
  4227fe:	in     al,0xd0
  422800:	and    al,BYTE PTR [edx]
  422802:	std    
  422803:	xor    DWORD PTR [ebp-0x48],ebp
  422806:	xor    dl,0xa
  422809:	sub    BYTE PTR [ebx],ah
  42280b:	ins    DWORD PTR es:[edi],dx
  42280c:	fucomp st(7)
  42280e:	adc    eax,0x13b584bd
  422813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422814:	outs   dx,DWORD PTR ds:[esi]
  422815:	call   0xadfe:0x3bd1c493
  42281c:	cdq    
  42281d:	mov    bh,0x5a
  42281f:	out    0x11,al
  422821:	fwait
  422822:	or     ebx,0xa37cad56
  422828:	sbb    eax,0xc8cc7104
  42282d:	jmp    0x1aecdca5
  422832:	repz xor eax,DWORD PTR [eax+esi*8]
  422836:	mov    ch,0xf9
  422838:	cmp    DWORD PTR [edx],esp
  42283a:	sbb    esp,DWORD PTR [esi]
  42283c:	clc    
  42283d:	in     al,dx
  42283e:	xor    DWORD PTR [ebp+0x64],0xffffffc7
  422842:	dec    esi
  422843:	cwde   
  422844:	sbb    ebp,DWORD PTR [ebx]
  422846:	or     BYTE PTR [ebx*8+0x9530528],bh
  42284d:	mov    dl,0xca
  42284f:	fiadd  DWORD PTR [eax-0x4e175a8]
  422855:	mov    fs:0xe45e8e17,eax
  42285b:	test   dh,bh
  42285d:	mov    bh,0x89
  42285f:	jmp    0x42282c
  422861:	add    BYTE PTR [esi-0x7086524f],ah
  422867:	xlat   BYTE PTR ds:[ebx]
  422868:	popa   
  422869:	dec    edi
  42286a:	int    0x85
  42286c:	popf   
  42286d:	(bad)  
  42286e:	int    0x40
  422870:	fwait
  422871:	inc    edi
  422872:	xchg   BYTE PTR [eax],cl
  422874:	mov    WORD PTR [ebx],?
  422876:	cdq    
  422877:	mov    ecx,0x23f3c8d5
  42287c:	dec    DWORD PTR [edi]
  42287e:	sub    DWORD PTR [edx-0x2b948688],0xffffff88
  422885:	in     eax,0xe5
  422887:	sbb    eax,0xf8dac929
  42288c:	retf   
  42288d:	ins    DWORD PTR es:[edi],dx
  42288e:	fcom   DWORD PTR [ebx-0xe]
  422891:	fcom   QWORD PTR [ebp+0x2a252ee5]
  422897:	fwait
  422898:	pop    ss
  422899:	mov    esp,0xf05f2ac9
  42289e:	pop    es
  42289f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228a0:	xor    DWORD PTR [eax+0x10],edx
  4228a3:	or     bh,BYTE PTR [edi]
  4228a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a6:	mov    ebx,0xa5fb2fa7
  4228ab:	ret    
  4228ac:	daa    
  4228ad:	push   esp
  4228ae:	mov    ah,BYTE PTR [eax-0x58]
  4228b1:	or     BYTE PTR [ebp+0x7c904cee],0x75
  4228b8:	jo     0x422873
  4228ba:	test   DWORD PTR [edi-0x36],ebx
  4228bd:	jne    0x4228c3
  4228bf:	call   0x1b3:0xc62beadc
  4228c6:	pop    ebp
  4228c7:	or     eax,DWORD PTR [ebp-0x36cdda15]
  4228cd:	les    esi,FWORD PTR [ebp-0x4581c2dd]
  4228d3:	pop    esi
  4228d4:	popa   
  4228d5:	sub    BYTE PTR [ebx],0xd0
  4228d8:	inc    edi
  4228d9:	sbb    al,0x7b
  4228db:	jmp    0x4228f5
  4228dd:	cs repz pop eax
  4228e0:	inc    ecx
  4228e1:	idiv   BYTE PTR [ebx]
  4228e3:	(bad)  
  4228e4:	cdq    
  4228e5:	in     eax,dx
  4228e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228e7:	add    BYTE PTR [eax-0x72],ah
  4228ea:	int3   
  4228eb:	mov    dh,0xc4
  4228ed:	pop    ss
  4228ee:	pop    edi
  4228ef:	into   
  4228f0:	(bad)  
  4228f1:	ds ss ins BYTE PTR es:[edi],dx
  4228f4:	in     al,dx
  4228f5:	xchg   ecx,eax
  4228f6:	xchg   esp,eax
  4228f7:	sub    al,0x9a
  4228f9:	mov    cl,0x4f
  4228fb:	sahf   
  4228fc:	jno    0x42293a
  4228fe:	xchg   edx,eax
  4228ff:	outs   dx,BYTE PTR ds:[esi]
  422900:	int    0xd4
  422902:	mov    dl,0x57
  422904:	xchg   edx,eax
  422905:	icebp  
  422906:	aam    0xe
  422908:	loope  0x422977
  42290a:	mov    dh,0xe7
  42290c:	mov    BYTE PTR [edx+0x13],ch
  42290f:	xor    esp,edx
  422911:	and    al,0xc8
  422913:	cmp    al,0xda
  422915:	sbb    eax,0x51969aa
  42291a:	inc    ebx
  42291b:	in     al,dx
  42291c:	sti    
  42291d:	inc    esi
  42291e:	sbb    DWORD PTR [esi],0x646fdc6e
  422924:	lea    ebx,[edx]
  422926:	add    al,0x25
  422928:	jge    0x422915
  42292a:	in     eax,dx
  42292b:	add    ebx,DWORD PTR [ebx]
  42292d:	mov    BYTE PTR ds:0x98e60086,bl
  422933:	push   ebx
  422934:	fs sub eax,0x6b0cb3a4
  42293a:	xor    BYTE PTR [ebx+0x59c9dac7],dh
  422940:	sub    ch,BYTE PTR [esi-0x6c]
  422943:	and    BYTE PTR [eax],ah
  422945:	mov    DWORD PTR [ebp+0x53cb6a40],eax
  42294b:	ja     0x4229ae
  42294d:	jg     0x422912
  42294f:	xchg   BYTE PTR [ecx+0x2b],ah
  422952:	mov    ebp,0x70e3945d
  422957:	jae    0x4228d9
  422959:	mov    ah,0x95
  42295b:	enter  0xda0e,0xfe
  42295f:	rol    BYTE PTR [edx-0x7],cl
  422962:	lock jp 0x422947
  422965:	ds cmp eax,0x4e190b7e
  42296b:	xor    eax,esp
  42296d:	rcr    BYTE PTR [ebx-0x4d],1
  422970:	out    dx,al
  422971:	call   0x6c3debe5
  422976:	mov    al,BYTE PTR [ebp+0x73]
  422979:	mov    ds:0x76cabe14,eax
  42297e:	inc    ebx
  42297f:	gs out dx,al
  422981:	inc    ecx
  422982:	ror    DWORD PTR [ecx],0xd7
  422985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422986:	std    
  422987:	dec    edx
  422988:	rcr    edi,cl
  42298a:	sub    ch,dh
  42298c:	pop    edx
  42298d:	test   DWORD PTR [ebx+0x73f7699c],ebp
  422993:	shl    BYTE PTR [edi],1
  422995:	push   ebx
  422996:	sbb    ah,0x2
  422999:	xor    eax,0x7297149d
  42299e:	mov    WORD PTR [edx+0x2d1a9f59],?
  4229a4:	into   
  4229a5:	pop    ebx
  4229a6:	xchg   edx,eax
  4229a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229a8:	inc    esp
  4229a9:	mov    cl,0x8
  4229ab:	xor    ah,dl
  4229ad:	add    al,0xb0
  4229af:	cmp    DWORD PTR [ebx],0xd684aec7
  4229b5:	inc    edi
  4229b6:	jnp    0x422982
  4229b8:	leave  
  4229b9:	test   eax,0xefdf4b65
  4229be:	sub    edi,DWORD PTR [ecx+0x71]
  4229c1:	dec    esp
  4229c2:	mov    esp,0x46c254d8
  4229c7:	aad    0x6f
  4229c9:	mov    cl,0x30
  4229cb:	add    al,0x98
  4229cd:	test   al,0x73
  4229cf:	dec    edx
  4229d0:	mov    WORD PTR [edi-0x35],ss
  4229d3:	cwde   
  4229d4:	inc    esp
  4229d5:	mov    bl,0x52
  4229d7:	into   
  4229d8:	sbb    DWORD PTR [ebx-0x5ef0db00],edx
  4229de:	mov    eax,DWORD PTR [esi]
  4229e0:	retf   
  4229e1:	add    bh,ah
  4229e3:	dec    edx
  4229e4:	inc    edx
  4229e5:	loope  0x4229e8
  4229e7:	dec    edi
  4229e8:	cmp    DWORD PTR [eax+0x1b],eax
  4229eb:	test   eax,0x4c24d48d
  4229f0:	jns    0x422a5c
  4229f2:	add    bh,bh
  4229f4:	adc    eax,0x428134
  4229f9:	push   0x0
  4229fb:	push   0x0
  4229fd:	push   0x100000
  422a02:	call   DWORD PTR ds:0x42802c
  422a08:	xor    eax,eax
  422a0a:	add    esp,0x10
  422a0d:	ret    0x10
  422a10:	jmp    DWORD PTR ds:0x428118
  422a16:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x4653e8
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428160
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428064
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x465d04,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x465d10,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x465d14,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x465d08,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x465d08,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x465d0c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428060
  422b6a:	mov    ds:0x4664b4,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x465cf4,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x42805c
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x42817c
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x42816c
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x428040
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x428068
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x4664b0
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x465d44,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428070
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x42806c
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x465d40,esi
  422d0d:	mov    ds:0x465d3c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x4664a8
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x4664a4
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x4664a4
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x4664a8
  422d40:	mov    ds:0x4664a4,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x465d44,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x465660
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x4653f0]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x4653f0]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x465cfc
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x4653ec,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x42807c
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284d4
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d0
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x4653f4]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284b4
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b0
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x4653f4]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428488
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x4653f4]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x428078
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428074
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x465cfc
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x4653ec,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x465d48
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x465504
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x4654f8
  423025:	mov    eax,ds:0x4654fc
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x4654f8
  423044:	mov    ebx,DWORD PTR ds:0x4654fc
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428080
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x4664ac,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x4664b4
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284eb
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x4664ac,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x465cf4
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x465d24,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x465cf4
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x465cf4
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x465cf4,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x4664a0,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x465d24
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x465d24,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x466161],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x466161],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x466161],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x4664ac,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x465e54,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x465d50
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x42807c
  4233cb:	mov    eax,ds:0x4664b4
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x465d34,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x465d18,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x465d1c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x465e58
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x465e58,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x42803c
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x465e58,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x465e58
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428088
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428084
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x4663a0,eax
  423580:	mov    DWORD PTR ds:0x466388,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x4663a0
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x42805c
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x466388,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x4663a4
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x466388,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x466388,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x466388
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x4663a0]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x4663a0
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x428078
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x466388
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f0
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428500
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f50
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x46552c
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x46552c,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x42803c
  42380b:	push   DWORD PTR ds:0x46552c
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b0
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x46552c
  42383a:	call   DWORD PTR ds:0x4280ac
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x465480
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x428020
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b4
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x46552c,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x46552c
  4238b1:	call   DWORD PTR ds:0x4280ac
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x465480
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x428020
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x465d04,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x465d10,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280bc
  423914:	test   eax,eax
  423916:	mov    ds:0x466380,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x466384,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x466380
  423941:	call   DWORD PTR ds:0x4280b8
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x465e60
  4239e6:	cmp    DWORD PTR [esi*8+0x465544],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x465540]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x465540],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x465540
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x465660
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x465540
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x465660
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x465540]
  423a88:	call   DWORD PTR ds:0x4280c8
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x465540]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x465540]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280cc
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x4664a8
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x4664a4
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x4664a8
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x4664a8
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x4664a4
  423b9c:	sub    ecx,DWORD PTR ds:0x4664a8
  423ba2:	mov    ds:0x4664a8,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x4664a4,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x4664a4,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x4664a8,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x4664a8
  423be0:	mov    ds:0x4664a4,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428510
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465fb0,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428580
  423c4a:	call   DWORD PTR ds:0x4280d0
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x428040
  423c60:	push   0x428574
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465fb0,eax
  423c6f:	je     0x423ced
  423c71:	push   0x428564
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428550
  423c7e:	push   edi
  423c7f:	mov    ds:0x465fb4,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x465d04,0x2
  423c8d:	mov    ds:0x465fb8,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x428534
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465fc0,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x42851c
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x465fbc,eax
  423cb2:	mov    eax,ds:0x465fbc
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465fc0
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x465d10,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465fb4
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465fb8
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465fb0
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428590
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x428068
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x465660
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x466161],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x466160
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x466264,eax
  4240b0:	mov    ds:0x46615c,eax
  4240b5:	mov    ds:0x466154,eax
  4240ba:	mov    edi,0x466270
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x465660
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x466264
  4240e3:	call   DWORD PTR ds:0x4280dc
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x466154
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x466264
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x466264
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x466154
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x466264
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x466154
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x466161],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x466280],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x466161],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x466280],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x466161],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x466280],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x466161],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x466280],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x465660
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x465670],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280dc
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x466160
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x466264,esi
  4242b9:	mov    DWORD PTR ds:0x466154,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x466160
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x465680]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x465668]
  424324:	or     BYTE PTR [eax+0x466161],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x466264,eax
  42434b:	mov    DWORD PTR ds:0x46615c,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x465674]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x466270
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x466154,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x466161],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x466161],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x466154,eax
  4243a9:	mov    DWORD PTR ds:0x46615c,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x46615c,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x466270
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465fc4,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a0
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465fc4,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465fc4,0x1
  424421:	call   DWORD PTR ds:0x4280d8
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465fc4,0x1
  424438:	call   DWORD PTR ds:0x4280d4
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465fc4,0x1
  42444f:	mov    eax,ds:0x465ff4
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x466264
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x466158
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x466264
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x46615c
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x466154
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x466270]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x466160]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x466280]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x466158,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x466158
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x4664ac,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x4664ac,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b0
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x466384,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x466380
  4245bf:	call   DWORD PTR ds:0x4280c4
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c0
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x466384,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x466144
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x466384,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x466380
  42462e:	call   DWORD PTR ds:0x428030
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x466008
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e0
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428608
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465fc8
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x465d04,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285f4
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285cc
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x428040
  424a16:	mov    ds:0x465fc8,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465fc8,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428618
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x466384,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x466144
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x466380
  424aea:	call   DWORD PTR ds:0x428030
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x466008,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x466014
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x466130
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x466134
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46612c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x466010
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x4657bc
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x4657bc
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x4657bc
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x4657bc
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x4657bc
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x4657bc
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x4657bc
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x4657bc
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x465768
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287a8
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x466380
  424cf7:	call   DWORD PTR ds:0x428030
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x466140,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x466138,0x0
  424d12:	and    DWORD PTR ds:0x46613c,0x0
  424d19:	mov    ds:0x466148,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x466144,ecx
  424d26:	mov    DWORD PTR ds:0x46614c,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46613c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x466140
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x466138
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x466150
  424f8c:	mov    esi,DWORD PTR ds:0x4280c0
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x466150
  424fac:	mov    eax,ds:0x466138
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x466138
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x466150
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x466138
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x466138
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x466138
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x466138
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x466380
  425011:	call   DWORD PTR ds:0x4280c4
  425017:	mov    eax,ds:0x46613c
  42501c:	mov    edx,DWORD PTR ds:0x466140
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x466138
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46613c
  42504c:	cmp    eax,DWORD PTR ds:0x466138
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x466140
  42505d:	mov    ds:0x466148,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x466138,eax
  42506a:	mov    DWORD PTR ds:0x466150,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46613c
  42507a:	mov    ecx,DWORD PTR ds:0x46614c
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x466140
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x466380
  42509c:	call   DWORD PTR ds:0x4280e8
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x46614c,0x10
  4250b1:	mov    ds:0x466140,eax
  4250b6:	mov    eax,ds:0x46613c
  4250bb:	mov    ecx,DWORD PTR ds:0x466140
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x466380
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x428030
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280e4
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x466380
  42510a:	call   DWORD PTR ds:0x4280c4
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46613c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280e4
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46613c
  42551f:	mov    edx,DWORD PTR ds:0x466140
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x466148
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x466148,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x466138
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x466150
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x466138,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287b8
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x466384,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x466144
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x466380
  4259d9:	call   DWORD PTR ds:0x428030
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x466380
  425a30:	call   DWORD PTR ds:0x4280e8
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x466008,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x466380
  425a81:	call   DWORD PTR ds:0x4280e8
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x466008,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287c8
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x466384,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x466380
  425b00:	call   DWORD PTR ds:0x428018
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x4280f8
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x4280f4
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x428020
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280f0
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280ec
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x465660,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x465660,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428978
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x465660
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465fd8
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x428954
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428880
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x42807c
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284d4
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d0
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b0
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287d4
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428488
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428d98
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x465ffc,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d94
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428104
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x465ffc,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x42803c
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x465ffc,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x465ffc
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465ff4
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x428100
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x428100
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428104
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428104
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428104
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465fe4
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465ff4
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x4280fc
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x4280fc
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x4280fc
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc0
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x466000,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d94
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x42810c
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x466000,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x42803c
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x466000,0x2
  4260c3:	mov    eax,ds:0x466000
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465ff4
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x428100
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x428100
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x42810c
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465fe4
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465ff4
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428108
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x466004
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x465b64
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x465b34
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x465b64
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x465b38
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x465b64
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x465b3c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x465b64
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x465b40
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x465b64
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x465b44
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x465b64
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x465b48
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x465b64
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x465b4c
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x465b64
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x465b50
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x465b64
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x465b54
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x465b64
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x465b58
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x465b7c
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x465b7c
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x465660
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x428110
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428ef8
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x465660
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280dc
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x428100
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x428100
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x428024
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428038
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x465d04
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x428024
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280e4
  426e8b:	mov    eax,ds:0x465d04
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428054
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x4657bc
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428058
