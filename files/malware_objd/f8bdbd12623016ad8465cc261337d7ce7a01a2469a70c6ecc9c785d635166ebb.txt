
f8bdbd12623016ad8465cc261337d7ce7a01a2469a70c6ecc9c785d635166ebb.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xdc
  401009:	and    DWORD PTR ds:0x42d000,0x5aab
  401013:	push   esi
  401014:	mov    esi,DWORD PTR ds:0x42ed7f
  40101a:	mov    DWORD PTR ds:0x42b010,0x14aa
  401024:	push   0x8
  401026:	mov    DWORD PTR ds:0x429000,0x4994
  401030:	push   0x42e53f
  401035:	call   esi
  401037:	adc    DWORD PTR ds:0x42c018,0x408c
  401041:	test   eax,eax
  401043:	mov    DWORD PTR ds:0x42c010,0x701a
  40104d:	je     0x40106e
  401053:	or     DWORD PTR ds:0x42a010,0x42901c
  40105d:	xor    eax,eax
  40105f:	mov    DWORD PTR ds:0x42a000,0x34b6
  401069:	jmp    0x402a30
  40106e:	sub    DWORD PTR ds:0x42a010,0x42a01c
  401078:	push   edi
  401079:	push   0x42e54f
  40107e:	xor    edi,edi
  401080:	sub    DWORD PTR ds:0x429004,0x42c000
  40108a:	inc    edi
  40108b:	sub    DWORD PTR ds:0x429000,0x1be5
  401095:	push   edi
  401096:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010a0:	push   edi
  4010a1:	xor    DWORD PTR ds:0x42b014,0x3226
  4010ab:	call   DWORD PTR ds:0x42ed7b
  4010b1:	test   eax,eax
  4010b3:	mov    DWORD PTR ds:0x42a01c,0x3a1f
  4010bd:	je     0x4010d0
  4010c3:	inc    DWORD PTR ds:0x42c010
  4010c9:	xor    eax,eax
  4010cb:	jmp    0x402a2f
  4010d0:	xor    DWORD PTR ds:0x42a008,0x429000
  4010da:	push   ebx
  4010db:	mov    ebx,DWORD PTR ds:0x42ed8f
  4010e1:	add    DWORD PTR ds:0x429004,0x5c52
  4010eb:	push   0x42e55f
  4010f0:	adc    DWORD PTR ds:0x42c014,0x42b014
  4010fa:	push   edi
  4010fb:	push   edi
  4010fc:	and    DWORD PTR ds:0x429020,0x61d3
  401106:	call   ebx
  401108:	test   eax,eax
  40110a:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401114:	jne    0x401d3d
  40111a:	sbb    DWORD PTR ds:0x42a010,0x429004
  401124:	push   0xc
  401126:	xor    DWORD PTR ds:0x42c000,0x429008
  401130:	push   0x42e583
  401135:	or     DWORD PTR ds:0x429000,0x4b22
  40113f:	call   esi
  401141:	and    DWORD PTR ds:0x42901c,0x18ba
  40114b:	test   eax,eax
  40114d:	mov    DWORD PTR ds:0x42a01c,0x7ad2
  401157:	jne    0x401d3d
  40115d:	push   0x7
  40115f:	push   0x42e597
  401164:	call   esi
  401166:	test   eax,eax
  401168:	mov    DWORD PTR ds:0x42c014,0x720
  401172:	jne    0x401d3d
  401178:	or     DWORD PTR ds:0x42b004,0x42b01c
  401182:	push   0x8
  401184:	push   0x42e5a7
  401189:	sbb    DWORD PTR ds:0x42d014,0x5687
  401193:	call   esi
  401195:	xor    DWORD PTR ds:0x429014,0x42b018
  40119f:	test   eax,eax
  4011a1:	mov    DWORD PTR ds:0x42d008,0x6461
  4011ab:	jne    0x401d3d
  4011b1:	mov    DWORD PTR ds:0x42a014,0x128
  4011bb:	push   0x42e5b7
  4011c0:	push   edi
  4011c1:	push   edi
  4011c2:	adc    DWORD PTR ds:0x429020,0x42a000
  4011cc:	call   DWORD PTR ds:0x42ed7b
  4011d2:	test   eax,eax
  4011d4:	mov    DWORD PTR ds:0x42a01c,0x679f
  4011de:	jne    0x401d3d
  4011e4:	push   0x42e5c7
  4011e9:	sub    DWORD PTR ds:0x42c004,0x42a000
  4011f3:	push   edi
  4011f4:	adc    DWORD PTR ds:0x429024,0xd32
  4011fe:	push   edi
  4011ff:	or     DWORD PTR ds:0x42b004,0x658c
  401209:	call   ebx
  40120b:	dec    DWORD PTR ds:0x429028
  401211:	test   eax,eax
  401213:	mov    DWORD PTR ds:0x42b014,0x53a5
  40121d:	jne    0x401d3d
  401223:	push   0xc
  401225:	or     DWORD PTR ds:0x42d014,0x42c01c
  40122f:	push   0x42e5eb
  401234:	call   esi
  401236:	sub    DWORD PTR ds:0x42a008,0x42900c
  401240:	test   eax,eax
  401242:	jne    0x401d3d
  401248:	add    DWORD PTR ds:0x429004,0x43a
  401252:	push   0x7
  401254:	adc    DWORD PTR ds:0x42b010,0x2fb1
  40125e:	push   0x42e5ff
  401263:	call   esi
  401265:	sbb    DWORD PTR ds:0x42901c,0x42c014
  40126f:	test   eax,eax
  401271:	jne    0x401d3d
  401277:	or     DWORD PTR ds:0x42b008,0x42d004
  401281:	push   0x8
  401283:	push   0x42e60f
  401288:	or     DWORD PTR ds:0x42b018,0x42a018
  401292:	call   esi
  401294:	test   eax,eax
  401296:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012a0:	jne    0x401d3d
  4012a6:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012b0:	push   0x42e61f
  4012b5:	push   edi
  4012b6:	push   edi
  4012b7:	call   DWORD PTR ds:0x42ed7b
  4012bd:	test   eax,eax
  4012bf:	jne    0x401d3d
  4012c5:	push   0x42e62f
  4012ca:	push   edi
  4012cb:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012d5:	push   edi
  4012d6:	mov    DWORD PTR ds:0x42d010,0x3265
  4012e0:	call   ebx
  4012e2:	test   eax,eax
  4012e4:	jne    0x401d3d
  4012ea:	sbb    DWORD PTR ds:0x42c01c,0x429018
  4012f4:	push   0xc
  4012f6:	or     DWORD PTR ds:0x42d00c,0x429000
  401300:	push   0x42e653
  401305:	call   esi
  401307:	test   eax,eax
  401309:	jne    0x401d3d
  40130f:	push   0x7
  401311:	and    DWORD PTR ds:0x42d004,0x42a01c
  40131b:	push   0x42e667
  401320:	sub    DWORD PTR ds:0x42901c,0x42c008
  40132a:	call   esi
  40132c:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401336:	test   eax,eax
  401338:	jne    0x401d3d
  40133e:	push   0x8
  401340:	sub    DWORD PTR ds:0x42d014,0x42a000
  40134a:	push   0x42e677
  40134f:	adc    DWORD PTR ds:0x42b018,0x14c4
  401359:	call   esi
  40135b:	xor    DWORD PTR ds:0x42c008,0x6706
  401365:	test   eax,eax
  401367:	mov    DWORD PTR ds:0x42c000,0x241
  401371:	jne    0x401d3d
  401377:	add    DWORD PTR ds:0x42b01c,0x42c01c
  401381:	push   0x42e687
  401386:	or     DWORD PTR ds:0x42a00c,0x42a01c
  401390:	push   edi
  401391:	and    DWORD PTR ds:0x42b004,0x429020
  40139b:	push   edi
  40139c:	call   DWORD PTR ds:0x42ed7b
  4013a2:	adc    DWORD PTR ds:0x42c00c,0x429018
  4013ac:	test   eax,eax
  4013ae:	jne    0x401d3d
  4013b4:	or     DWORD PTR ds:0x42a014,0x42c01c
  4013be:	push   0x42e697
  4013c3:	push   edi
  4013c4:	push   edi
  4013c5:	call   ebx
  4013c7:	test   eax,eax
  4013c9:	mov    DWORD PTR ds:0x42d010,0x6497
  4013d3:	jne    0x401d3d
  4013d9:	push   0xc
  4013db:	push   0x42e6bb
  4013e0:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013ea:	call   esi
  4013ec:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013f6:	test   eax,eax
  4013f8:	jne    0x401d3d
  4013fe:	or     DWORD PTR ds:0x429000,0x429008
  401408:	push   0x7
  40140a:	sub    DWORD PTR ds:0x42a000,0x50c8
  401414:	push   0x42e6cf
  401419:	call   esi
  40141b:	xor    DWORD PTR ds:0x42a018,0x58f3
  401425:	test   eax,eax
  401427:	mov    DWORD PTR ds:0x42a010,0x4d09
  401431:	jne    0x401d3d
  401437:	push   0x8
  401439:	push   0x42e6df
  40143e:	sbb    DWORD PTR ds:0x42c00c,0x429018
  401448:	call   esi
  40144a:	test   eax,eax
  40144c:	mov    DWORD PTR ds:0x42b00c,0x44ea
  401456:	jne    0x401d3d
  40145c:	adc    DWORD PTR ds:0x42d004,0x4c2b
  401466:	push   0x42e6ef
  40146b:	push   edi
  40146c:	push   edi
  40146d:	mov    DWORD PTR ds:0x42d014,0x32e9
  401477:	call   DWORD PTR ds:0x42ed7b
  40147d:	test   eax,eax
  40147f:	mov    DWORD PTR ds:0x42d008,0x1c53
  401489:	jne    0x401d3d
  40148f:	adc    DWORD PTR ds:0x42a00c,0x429024
  401499:	push   0x42e6ff
  40149e:	push   edi
  40149f:	sbb    DWORD PTR ds:0x429028,0x2f15
  4014a9:	push   edi
  4014aa:	call   ebx
  4014ac:	adc    DWORD PTR ds:0x42b000,0x4b6d
  4014b6:	test   eax,eax
  4014b8:	mov    DWORD PTR ds:0x429004,0x51de
  4014c2:	jne    0x401d3d
  4014c8:	xor    DWORD PTR ds:0x42a008,0xe1e
  4014d2:	push   0xc
  4014d4:	add    DWORD PTR ds:0x429004,0x43b2
  4014de:	push   0x42e723
  4014e3:	or     DWORD PTR ds:0x42a018,0x42c018
  4014ed:	call   esi
  4014ef:	test   eax,eax
  4014f1:	mov    DWORD PTR ds:0x42b000,0x50ae
  4014fb:	jne    0x401d3d
  401501:	dec    DWORD PTR ds:0x42b00c
  401507:	push   0x7
  401509:	and    DWORD PTR ds:0x42b00c,0x681c
  401513:	push   0x42e737
  401518:	or     DWORD PTR ds:0x42b004,0x6fd7
  401522:	call   esi
  401524:	test   eax,eax
  401526:	jne    0x401d3d
  40152c:	sub    DWORD PTR ds:0x42c008,0x42a000
  401536:	push   0x8
  401538:	xor    DWORD PTR ds:0x42c010,0x42b00c
  401542:	push   0x42e747
  401547:	and    DWORD PTR ds:0x42d014,0x50c
  401551:	call   esi
  401553:	test   eax,eax
  401555:	mov    DWORD PTR ds:0x42c008,0x6727
  40155f:	jne    0x401d3d
  401565:	push   0x42e757
  40156a:	adc    DWORD PTR ds:0x42a00c,0x1435
  401574:	push   edi
  401575:	mov    DWORD PTR ds:0x42c00c,0x3eef
  40157f:	push   edi
  401580:	xor    DWORD PTR ds:0x42b014,0x10aa
  40158a:	call   DWORD PTR ds:0x42ed7b
  401590:	add    DWORD PTR ds:0x429024,0x2571
  40159a:	test   eax,eax
  40159c:	mov    DWORD PTR ds:0x42c01c,0x5233
  4015a6:	jne    0x401d3d
  4015ac:	push   0x42e767
  4015b1:	or     DWORD PTR ds:0x42d004,0x42c014
  4015bb:	push   edi
  4015bc:	add    DWORD PTR ds:0x42b008,0x42b014
  4015c6:	push   edi
  4015c7:	and    DWORD PTR ds:0x429024,0x5a57
  4015d1:	call   ebx
  4015d3:	test   eax,eax
  4015d5:	jne    0x401d3d
  4015db:	adc    DWORD PTR ds:0x42c014,0x5c91
  4015e5:	push   0xc
  4015e7:	or     DWORD PTR ds:0x42d018,0x42a018
  4015f1:	push   0x42e78b
  4015f6:	sub    DWORD PTR ds:0x429018,0x429000
  401600:	call   esi
  401602:	test   eax,eax
  401604:	jne    0x401d3d
  40160a:	or     DWORD PTR ds:0x42c010,0x42900c
  401614:	push   0x7
  401616:	and    DWORD PTR ds:0x42a01c,0x7e1f
  401620:	push   0x42e79f
  401625:	call   esi
  401627:	xor    DWORD PTR ds:0x42c00c,0x55d5
  401631:	test   eax,eax
  401633:	jne    0x401d3d
  401639:	or     DWORD PTR ds:0x429008,0x62a0
  401643:	push   0x8
  401645:	or     DWORD PTR ds:0x429020,0x42d018
  40164f:	push   0x42e7af
  401654:	call   esi
  401656:	test   eax,eax
  401658:	mov    DWORD PTR ds:0x429010,0x43d8
  401662:	jne    0x401d3d
  401668:	push   0x42e7bf
  40166d:	sub    DWORD PTR ds:0x42a008,0x5452
  401677:	push   edi
  401678:	adc    DWORD PTR ds:0x42b004,0x3794
  401682:	push   edi
  401683:	add    DWORD PTR ds:0x42b018,0x429000
  40168d:	call   DWORD PTR ds:0x42ed7b
  401693:	add    DWORD PTR ds:0x42b014,0x42c014
  40169d:	test   eax,eax
  40169f:	mov    DWORD PTR ds:0x42c010,0x9db
  4016a9:	jne    0x401d3d
  4016af:	add    DWORD PTR ds:0x42b01c,0x42c010
  4016b9:	push   0x42e7cf
  4016be:	push   edi
  4016bf:	push   edi
  4016c0:	call   ebx
  4016c2:	test   eax,eax
  4016c4:	jne    0x401d3d
  4016ca:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016d4:	push   0xc
  4016d6:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016e0:	push   0x42e7f3
  4016e5:	sub    DWORD PTR ds:0x429028,0x1e37
  4016ef:	call   esi
  4016f1:	not    DWORD PTR ds:0x42b000
  4016f7:	test   eax,eax
  4016f9:	mov    DWORD PTR ds:0x42a010,0x1824
  401703:	jne    0x401d3d
  401709:	push   0x7
  40170b:	neg    DWORD PTR ds:0x42d004
  401711:	push   0x42e807
  401716:	call   esi
  401718:	xor    DWORD PTR ds:0x429020,0x5303
  401722:	test   eax,eax
  401724:	jne    0x401d3d
  40172a:	sub    DWORD PTR ds:0x429014,0x42c01c
  401734:	push   0x8
  401736:	not    DWORD PTR ds:0x429000
  40173c:	push   0x42e817
  401741:	or     DWORD PTR ds:0x42c01c,0x7461
  40174b:	call   esi
  40174d:	test   eax,eax
  40174f:	jne    0x401d3d
  401755:	or     DWORD PTR ds:0x42b010,0x6614
  40175f:	push   0x42e827
  401764:	push   edi
  401765:	and    DWORD PTR ds:0x42b01c,0x42a008
  40176f:	push   edi
  401770:	call   DWORD PTR ds:0x42ed7b
  401776:	sub    DWORD PTR ds:0x429010,0x42a018
  401780:	test   eax,eax
  401782:	mov    DWORD PTR ds:0x42b004,0x423f
  40178c:	jne    0x401d3d
  401792:	push   0x42e837
  401797:	and    DWORD PTR ds:0x42d014,0x5d3e
  4017a1:	push   edi
  4017a2:	push   edi
  4017a3:	call   ebx
  4017a5:	sub    DWORD PTR ds:0x42a004,0x8003
  4017af:	test   eax,eax
  4017b1:	jne    0x401d3d
  4017b7:	push   0xc
  4017b9:	push   0x42e85b
  4017be:	call   esi
  4017c0:	or     DWORD PTR ds:0x42a014,0x792e
  4017ca:	test   eax,eax
  4017cc:	jne    0x401d3d
  4017d2:	add    DWORD PTR ds:0x42d004,0x429000
  4017dc:	push   0x7
  4017de:	sub    DWORD PTR ds:0x42c010,0x560a
  4017e8:	push   0x42e86f
  4017ed:	call   esi
  4017ef:	test   eax,eax
  4017f1:	mov    DWORD PTR ds:0x42b008,0x3099
  4017fb:	jne    0x401d3d
  401801:	xor    DWORD PTR ds:0x42a01c,0x42c010
  40180b:	push   0x8
  40180d:	push   0x42e87f
  401812:	sub    DWORD PTR ds:0x42901c,0x42c000
  40181c:	call   esi
  40181e:	test   eax,eax
  401820:	mov    DWORD PTR ds:0x42c010,0x6a70
  40182a:	jne    0x401d3d
  401830:	push   0x42e88f
  401835:	push   edi
  401836:	push   edi
  401837:	mov    DWORD PTR ds:0x42d01c,0x630d
  401841:	call   DWORD PTR ds:0x42ed7b
  401847:	sbb    DWORD PTR ds:0x429024,0x42b018
  401851:	test   eax,eax
  401853:	mov    DWORD PTR ds:0x42901c,0x686
  40185d:	jne    0x401d3d
  401863:	push   0x42e89f
  401868:	and    DWORD PTR ds:0x42c008,0x4bbd
  401872:	push   edi
  401873:	or     DWORD PTR ds:0x429024,0x42d000
  40187d:	push   edi
  40187e:	call   ebx
  401880:	and    DWORD PTR ds:0x42b018,0x1774
  40188a:	test   eax,eax
  40188c:	jne    0x401d3d
  401892:	push   0xc
  401894:	or     DWORD PTR ds:0x42b000,0x3dd
  40189e:	push   0x42e8c3
  4018a3:	call   esi
  4018a5:	test   eax,eax
  4018a7:	jne    0x401d3d
  4018ad:	push   0x7
  4018af:	sub    DWORD PTR ds:0x429010,0x42c004
  4018b9:	push   0x42e8d7
  4018be:	or     DWORD PTR ds:0x42d014,0x42c010
  4018c8:	call   esi
  4018ca:	or     DWORD PTR ds:0x42b010,0x42b018
  4018d4:	test   eax,eax
  4018d6:	jne    0x401d3d
  4018dc:	push   0x8
  4018de:	push   0x42e8e7
  4018e3:	call   esi
  4018e5:	test   eax,eax
  4018e7:	jne    0x401d3d
  4018ed:	and    DWORD PTR ds:0x42c004,0x42900c
  4018f7:	push   0x42e8f7
  4018fc:	push   edi
  4018fd:	push   edi
  4018fe:	call   DWORD PTR ds:0x42ed7b
  401904:	mov    DWORD PTR ds:0x42a004,0x7c46
  40190e:	test   eax,eax
  401910:	jne    0x401d3d
  401916:	push   0x42e907
  40191b:	sbb    DWORD PTR ds:0x42b010,0x42a010
  401925:	push   edi
  401926:	push   edi
  401927:	or     DWORD PTR ds:0x42d014,0x42900c
  401931:	call   ebx
  401933:	test   eax,eax
  401935:	jne    0x401d3d
  40193b:	adc    DWORD PTR ds:0x42c000,0x429028
  401945:	push   0xc
  401947:	sub    DWORD PTR ds:0x42a014,0xc65
  401951:	push   0x42e92b
  401956:	call   esi
  401958:	test   eax,eax
  40195a:	mov    DWORD PTR ds:0x42c014,0x6571
  401964:	jne    0x401d3d
  40196a:	push   0x7
  40196c:	adc    DWORD PTR ds:0x42a014,0x42b00c
  401976:	push   0x42e93f
  40197b:	mov    DWORD PTR ds:0x42d004,0x12ce
  401985:	call   esi
  401987:	dec    DWORD PTR ds:0x42a010
  40198d:	test   eax,eax
  40198f:	mov    DWORD PTR ds:0x42b004,0x22d3
  401999:	jne    0x401d3d
  40199f:	xor    DWORD PTR ds:0x42d018,0x7580
  4019a9:	push   0x8
  4019ab:	mov    DWORD PTR ds:0x42d014,0x4bef
  4019b5:	push   0x42e94f
  4019ba:	add    DWORD PTR ds:0x42b000,0x4980
  4019c4:	call   esi
  4019c6:	test   eax,eax
  4019c8:	jne    0x401d3d
  4019ce:	and    DWORD PTR ds:0x42b000,0x472c
  4019d8:	push   0x42e95f
  4019dd:	push   edi
  4019de:	push   edi
  4019df:	xor    DWORD PTR ds:0x42c014,0x42b018
  4019e9:	call   DWORD PTR ds:0x42ed7b
  4019ef:	or     DWORD PTR ds:0x42900c,0x429020
  4019f9:	test   eax,eax
  4019fb:	mov    DWORD PTR ds:0x42c00c,0x6dbd
  401a05:	jne    0x401d3d
  401a0b:	not    DWORD PTR ds:0x42b00c
  401a11:	push   0x42e96f
  401a16:	or     DWORD PTR ds:0x42d000,0x4414
  401a20:	push   edi
  401a21:	sub    DWORD PTR ds:0x429020,0x7e0
  401a2b:	push   edi
  401a2c:	xor    DWORD PTR ds:0x42d010,0x4db0
  401a36:	call   ebx
  401a38:	test   eax,eax
  401a3a:	jne    0x401d3d
  401a40:	sub    DWORD PTR ds:0x42a014,0x10f4
  401a4a:	push   0xc
  401a4c:	sub    DWORD PTR ds:0x42b004,0x42d014
  401a56:	push   0x42e993
  401a5b:	call   esi
  401a5d:	test   eax,eax
  401a5f:	jne    0x401d3d
  401a65:	push   0x7
  401a67:	xor    DWORD PTR ds:0x42b000,0x360b
  401a71:	push   0x42e9a7
  401a76:	call   esi
  401a78:	test   eax,eax
  401a7a:	jne    0x401d3d
  401a80:	push   0x8
  401a82:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401a8c:	push   0x42e9b7
  401a91:	add    DWORD PTR ds:0x42d014,0x21f
  401a9b:	call   esi
  401a9d:	or     DWORD PTR ds:0x42d004,0x505e
  401aa7:	test   eax,eax
  401aa9:	mov    DWORD PTR ds:0x42c00c,0x1afa
  401ab3:	jne    0x401d3d
  401ab9:	push   0x42e9c7
  401abe:	or     DWORD PTR ds:0x42b01c,0x4806
  401ac8:	push   edi
  401ac9:	push   edi
  401aca:	call   DWORD PTR ds:0x42ed7b
  401ad0:	or     DWORD PTR ds:0x42c018,0x6442
  401ada:	test   eax,eax
  401adc:	jne    0x401d3d
  401ae2:	push   0x42e9d7
  401ae7:	push   edi
  401ae8:	not    DWORD PTR ds:0x42d018
  401aee:	push   edi
  401aef:	adc    DWORD PTR ds:0x429028,0x26c2
  401af9:	call   ebx
  401afb:	sbb    DWORD PTR ds:0x42a000,0x42d010
  401b05:	test   eax,eax
  401b07:	mov    DWORD PTR ds:0x42b000,0x1a50
  401b11:	jne    0x401d3d
  401b17:	adc    DWORD PTR ds:0x42c00c,0x5a53
  401b21:	push   0xc
  401b23:	push   0x42e9fb
  401b28:	or     DWORD PTR ds:0x42900c,0x964
  401b32:	call   esi
  401b34:	sbb    DWORD PTR ds:0x429014,0x5b18
  401b3e:	test   eax,eax
  401b40:	jne    0x401d3d
  401b46:	push   0x7
  401b48:	add    DWORD PTR ds:0x42d01c,0x42d000
  401b52:	push   0x42ea0f
  401b57:	and    DWORD PTR ds:0x42900c,0x4f3f
  401b61:	call   esi
  401b63:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401b6d:	test   eax,eax
  401b6f:	jne    0x401d3d
  401b75:	sbb    DWORD PTR ds:0x429018,0xc00
  401b7f:	push   0x8
  401b81:	add    DWORD PTR ds:0x42c004,0x3ea1
  401b8b:	push   0x42ea1f
  401b90:	call   esi
  401b92:	sub    DWORD PTR ds:0x42c000,0x352b
  401b9c:	test   eax,eax
  401b9e:	mov    DWORD PTR ds:0x42901c,0x47d2
  401ba8:	jne    0x401d3d
  401bae:	push   0x42ea2f
  401bb3:	or     DWORD PTR ds:0x42a004,0x22e5
  401bbd:	push   edi
  401bbe:	push   edi
  401bbf:	add    DWORD PTR ds:0x42c008,0x2ef5
  401bc9:	call   DWORD PTR ds:0x42ed7b
  401bcf:	test   eax,eax
  401bd1:	mov    DWORD PTR ds:0x429000,0xe12
  401bdb:	jne    0x401d3d
  401be1:	push   0x42ea3f
  401be6:	inc    DWORD PTR ds:0x429008
  401bec:	push   edi
  401bed:	push   edi
  401bee:	and    DWORD PTR ds:0x429020,0x42c008
  401bf8:	call   ebx
  401bfa:	mov    DWORD PTR ds:0x42d01c,0x65ff
  401c04:	test   eax,eax
  401c06:	jne    0x401d3d
  401c0c:	add    DWORD PTR ds:0x42d00c,0x8c2
  401c16:	push   0xc
  401c18:	and    DWORD PTR ds:0x42a010,0x429020
  401c22:	push   0x42ea63
  401c27:	call   esi
  401c29:	test   eax,eax
  401c2b:	jne    0x401d3d
  401c31:	push   0x7
  401c33:	not    DWORD PTR ds:0x42a004
  401c39:	push   0x42ea77
  401c3e:	call   esi
  401c40:	test   eax,eax
  401c42:	jne    0x401d3d
  401c48:	push   0x8
  401c4a:	push   0x42ea87
  401c4f:	add    DWORD PTR ds:0x429028,0x63a0
  401c59:	call   esi
  401c5b:	test   eax,eax
  401c5d:	mov    DWORD PTR ds:0x42c01c,0x185a
  401c67:	jne    0x401d3d
  401c6d:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401c77:	push   0x42ea97
  401c7c:	push   edi
  401c7d:	adc    DWORD PTR ds:0x42a008,0x42d004
  401c87:	push   edi
  401c88:	sbb    DWORD PTR ds:0x42d010,0x4b82
  401c92:	call   DWORD PTR ds:0x42ed7b
  401c98:	test   eax,eax
  401c9a:	mov    DWORD PTR ds:0x42c00c,0x2dd4
  401ca4:	jne    0x401d3d
  401caa:	adc    DWORD PTR ds:0x42d004,0x42a004
  401cb4:	push   0x42eaa7
  401cb9:	push   edi
  401cba:	sbb    DWORD PTR ds:0x42c008,0x42b004
  401cc4:	push   edi
  401cc5:	sub    DWORD PTR ds:0x42a010,0x42b000
  401ccf:	call   ebx
  401cd1:	test   eax,eax
  401cd3:	jne    0x401d3d
  401cd9:	inc    DWORD PTR ds:0x42b014
  401cdf:	push   0xc
  401ce1:	mov    DWORD PTR ds:0x42d01c,0xa60
  401ceb:	push   0x42eacb
  401cf0:	sub    DWORD PTR ds:0x42c00c,0x3e85
  401cfa:	call   esi
  401cfc:	test   eax,eax
  401cfe:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401d08:	jne    0x401d3d
  401d0e:	push   0x7
  401d10:	and    DWORD PTR ds:0x429000,0x42b000
  401d1a:	push   0x42eadf
  401d1f:	add    DWORD PTR ds:0x42b008,0x42a018
  401d29:	call   esi
  401d2b:	test   eax,eax
  401d2d:	mov    DWORD PTR ds:0x42c014,0x2a16
  401d37:	je     0x401d4e
  401d3d:	add    DWORD PTR ds:0x42d000,0x429000
  401d47:	xor    eax,eax
  401d49:	jmp    0x402a2e
  401d4e:	mov    DWORD PTR [ebp-0x10],0x0
  401d55:	mov    eax,DWORD PTR [ebp-0x2c]
  401d58:	mov    DWORD PTR [ebp-0x2c],eax
  401d5b:	adc    edi,esi
  401d5d:	mov    ecx,0xf89c85b9
  401d62:	inc    edi
  401d63:	mov    DWORD PTR [ebp-0x8],ecx
  401d66:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  401d6d:	lea    eax,[ebp-0x3c]
  401d70:	xor    edi,0x371d
  401d76:	mov    DWORD PTR [ebp-0x38],eax
  401d79:	lea    eax,[ebp-0x40]
  401d7c:	dec    edi
  401d7d:	mov    DWORD PTR [ebp-0x18],eax
  401d80:	and    DWORD PTR ds:0x42b01c,ecx
  401d86:	mov    eax,ds:0x42e42f
  401d8b:	and    DWORD PTR ds:0x42d018,0x0
  401d95:	jmp    0x401da7
  401d9a:	mov    esi,DWORD PTR ds:0x42d018
  401da0:	inc    esi
  401da1:	mov    DWORD PTR ds:0x42d018,esi
  401da7:	cmp    DWORD PTR ds:0x42d018,0x16
  401dae:	jae    0x401deb
  401db4:	cmp    DWORD PTR ds:0x42d018,0xb
  401dbb:	jne    0x401dcc
  401dc1:	push   0x26f4
  401dc6:	call   DWORD PTR ds:0x42ed4f
  401dcc:	cmp    DWORD PTR ds:0x42d018,0xa
  401dd3:	jne    0x401de6
  401dd9:	mov    esi,DWORD PTR ds:0x42d018
  401ddf:	inc    esi
  401de0:	mov    DWORD PTR ds:0x42d018,esi
  401de6:	jmp    0x401d9a
  401deb:	mov    eax,DWORD PTR [eax+0x1c8]
  401df1:	mov    eax,DWORD PTR [eax]
  401df3:	adc    DWORD PTR ds:0x429028,0x429014
  401dfd:	mov    edx,DWORD PTR [ebp-0x18]
  401e00:	sbb    esi,esi
  401e02:	mov    esi,0x7510899
  401e07:	xor    eax,esi
  401e09:	mov    edi,DWORD PTR ds:0x424c04
  401e0f:	mov    edi,DWORD PTR [edi]
  401e11:	adc    DWORD PTR ds:0x42d010,edi
  401e17:	mov    edi,0x3272e0
  401e1c:	add    eax,edi
  401e1e:	mov    DWORD PTR ds:0x42a01c,0x257
  401e28:	mov    DWORD PTR [edx],eax
  401e2a:	mov    DWORD PTR ds:0x42c018,0x3219
  401e34:	mov    eax,ds:0x42ebc7
  401e39:	cmp    eax,0x312bc9f6
  401e3e:	mov    DWORD PTR ds:0x429020,0x5930
  401e48:	jne    0x401e9f
  401e4e:	mov    edx,DWORD PTR ds:0x424cd5
  401e54:	mov    edx,DWORD PTR [edx]
  401e56:	sbb    DWORD PTR ds:0x42c010,edx
  401e5c:	mov    eax,DWORD PTR [ebp-0x8]
  401e5f:	xor    edx,edx
  401e61:	mov    edx,DWORD PTR ds:0x42e42f
  401e67:	mov    edx,DWORD PTR [edx+0x198]
  401e6d:	xor    eax,esi
  401e6f:	sub    ebx,0x65b5
  401e75:	add    eax,edi
  401e77:	sbb    DWORD PTR ds:0x42d010,0x54d2
  401e81:	mov    DWORD PTR [edx],eax
  401e83:	xor    ebx,0x16f5
  401e89:	mov    eax,DWORD PTR [ebp-0x8]
  401e8c:	xor    eax,esi
  401e8e:	add    eax,edi
  401e90:	and    DWORD PTR ds:0x42d000,0x7871
  401e9a:	mov    ds:0x42ebc7,eax
  401e9f:	xor    DWORD PTR ds:0x429000,edx
  401ea5:	mov    eax,ds:0x42e42f
  401eaa:	mov    eax,DWORD PTR [eax+0x18c]
  401eb0:	mov    eax,DWORD PTR [eax]
  401eb2:	mov    DWORD PTR [ebp-0x7c],eax
  401eb5:	mov    ebx,0xf89c85bd
  401eba:	mov    eax,ds:0x42b01c
  401ebf:	sbb    DWORD PTR ds:0x429010,eax
  401ec5:	mov    DWORD PTR [ebp-0x10],ebx
  401ec8:	mov    DWORD PTR [ebp-0x10],ebx
  401ecb:	add    DWORD PTR ds:0x42d00c,edi
  401ed1:	mov    DWORD PTR [ebp-0x10],ebx
  401ed4:	mov    DWORD PTR [ebp-0x18],ecx
  401ed7:	mov    DWORD PTR [ebp-0x10],ebx
  401eda:	not    eax
  401edc:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401ee3:	movzx  eax,BYTE PTR ds:0x42a000
  401eea:	add    eax,DWORD PTR ds:0x429000
  401ef0:	mov    ds:0x42a000,eax
  401ef5:	mov    eax,DWORD PTR [ebp-0x8]
  401ef8:	or     DWORD PTR ds:0x42b014,0x372f
  401f02:	xor    eax,esi
  401f04:	or     DWORD PTR ds:0x42a01c,0x1f3e
  401f0e:	add    eax,edi
  401f10:	mov    DWORD PTR ds:0x42c004,0xc2
  401f1a:	jmp    0x40208c
  401f1f:	and    DWORD PTR ds:0x42d018,0x0
  401f29:	jmp    0x401f3c
  401f2e:	xor    eax,eax
  401f30:	add    eax,DWORD PTR ds:0x42d018
  401f36:	inc    eax
  401f37:	mov    ds:0x42d018,eax
  401f3c:	cmp    DWORD PTR ds:0x42d018,0x14
  401f43:	jae    0x401f85
  401f49:	cmp    DWORD PTR ds:0x42d018,0xa
  401f50:	jne    0x401f68
  401f56:	push   0x42e06f
  401f5b:	push   0x1
  401f5d:	push   0x1
  401f5f:	push   DWORD PTR [ebp-0x28]
  401f62:	call   DWORD PTR ds:0x42ed53
  401f68:	cmp    DWORD PTR ds:0x42d018,0x9
  401f6f:	jne    0x401f80
  401f75:	mov    eax,ds:0x42d018
  401f7a:	inc    eax
  401f7b:	mov    ds:0x42d018,eax
  401f80:	jmp    0x401f2e
  401f85:	mov    eax,DWORD PTR [ebp-0xc]
  401f88:	and    DWORD PTR ds:0x429008,0x0
  401f92:	xor    ecx,ecx
  401f94:	add    ecx,DWORD PTR ds:0x429008
  401f9a:	inc    ecx
  401f9b:	mov    DWORD PTR ds:0x429008,ecx
  401fa1:	cmp    DWORD PTR ds:0x429008,0x19
  401fa8:	jne    0x401fb9
  401fae:	push   0x42e1ed
  401fb3:	call   DWORD PTR ds:0x42ed57
  401fb9:	cmp    DWORD PTR ds:0x429008,0x14
  401fc0:	jb     0x401f92
  401fc6:	adc    DWORD PTR ds:0x429020,0x76b9
  401fd0:	mov    ecx,DWORD PTR [ebp-0x1c]
  401fd3:	xor    eax,esi
  401fd5:	and    DWORD PTR ds:0x429008,0x42d004
  401fdf:	lea    eax,[eax+ecx*1+0x3272e0]
  401fe6:	or     DWORD PTR ds:0x42a018,0x3196
  401ff0:	push   eax
  401ff1:	mov    eax,ds:0x429020
  401ff6:	and    DWORD PTR ds:0x42c004,eax
  401ffc:	mov    eax,DWORD PTR [ebp-0x18]
  401fff:	sub    DWORD PTR ds:0x42a01c,0x429008
  402009:	xor    eax,esi
  40200b:	sbb    DWORD PTR ds:0x42c018,0x42b010
  402015:	lea    eax,[ebp+eax*1+0x3272e8]
  40201c:	push   eax
  40201d:	and    DWORD PTR ds:0x429018,0x0
  402027:	mov    eax,ds:0x429018
  40202c:	inc    eax
  40202d:	mov    ds:0x429018,eax
  402032:	cmp    DWORD PTR ds:0x429018,0x1f
  402039:	jne    0x40204a
  40203f:	push   0x2bf8
  402044:	call   DWORD PTR ds:0x42ed5b
  40204a:	cmp    DWORD PTR ds:0x429018,0x14
  402051:	jb     0x402027
  402057:	mov    eax,ds:0x42e42f
  40205c:	sbb    DWORD PTR ds:0x42d000,0x42b010
  402066:	push   DWORD PTR [eax+0x1bc]
  40206c:	and    DWORD PTR ds:0x429010,0x4b3f
  402076:	call   0x402a39
  40207b:	sbb    edx,edx
  40207d:	mov    eax,DWORD PTR [ebp-0xc]
  402080:	mov    ecx,DWORD PTR [ebp-0x1c]
  402083:	xor    eax,esi
  402085:	lea    eax,[ecx+eax*1+0x3272e0]
  40208c:	add    ecx,0x43f5
  402092:	mov    ecx,DWORD PTR [ebp-0xc]
  402095:	mov    edx,DWORD PTR [ebp-0xc]
  402098:	xor    edx,esi
  40209a:	xor    ecx,esi
  40209c:	sub    DWORD PTR ds:0x429018,0x429014
  4020a6:	add    ecx,edx
  4020a8:	mov    edx,DWORD PTR [ebp-0xc]
  4020ab:	sub    DWORD PTR ds:0x42d010,0x42d004
  4020b5:	xor    edx,esi
  4020b7:	lea    ecx,[ecx+edx*1+0x9758a0]
  4020be:	mov    DWORD PTR [ebp-0x1c],eax
  4020c1:	mov    DWORD PTR ds:0x42b000,0x3723
  4020cb:	cmp    eax,ecx
  4020cd:	jbe    0x401f1f
  4020d3:	sub    eax,ecx
  4020d5:	mov    eax,DWORD PTR [ebp+0xc]
  4020d8:	xor    ecx,DWORD PTR ds:0x42b01c
  4020de:	mov    ds:0x42e2b3,eax
  4020e3:	and    DWORD PTR ds:0x42d01c,0x0
  4020ed:	mov    eax,ds:0x42d01c
  4020f2:	inc    eax
  4020f3:	mov    ds:0x42d01c,eax
  4020f8:	cmp    DWORD PTR ds:0x42d01c,0x7
  4020ff:	jne    0x402115
  402105:	push   0x429018
  40210a:	push   0x165c
  40210f:	call   DWORD PTR ds:0x42ed5f
  402115:	cmp    DWORD PTR ds:0x42d01c,0x6
  40211c:	jne    0x402130
  402122:	xor    eax,eax
  402124:	or     eax,DWORD PTR ds:0x42d01c
  40212a:	inc    eax
  40212b:	mov    ds:0x42d01c,eax
  402130:	cmp    DWORD PTR ds:0x42d01c,0x13
  402137:	jb     0x4020ed
  40213d:	add    eax,eax
  40213f:	mov    eax,DWORD PTR [ebp+0x10]
  402142:	or     ecx,0x5144
  402148:	mov    ds:0x42e507,eax
  40214d:	movzx  ecx,BYTE PTR ds:0x42d018
  402154:	sbb    DWORD PTR ds:0x42a00c,ecx
  40215a:	mov    eax,ds:0x42e2b3
  40215f:	mov    ecx,DWORD PTR [ebp-0x38]
  402162:	sub    eax,edi
  402164:	xor    eax,esi
  402166:	mov    DWORD PTR ds:0x42a018,0x3718
  402170:	mov    DWORD PTR [ecx],eax
  402172:	mov    eax,DWORD PTR [ebp-0x2c]
  402175:	mov    DWORD PTR ds:0x429004,0x2ca7
  40217f:	cmp    eax,0xf89c85b9
  402184:	jne    0x402492
  40218a:	dec    DWORD PTR ds:0x42b018
  402190:	lea    eax,[ebp-0x48]
  402193:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40219d:	mov    DWORD PTR [ebp-0x80],eax
  4021a0:	lea    eax,[ebp+0x4]
  4021a3:	and    DWORD PTR ds:0x42c01c,0x58e
  4021ad:	mov    DWORD PTR [ebp-0x48],eax
  4021b0:	mov    DWORD PTR ds:0x42d000,0x15
  4021ba:	cmp    DWORD PTR ds:0x42d000,0x0
  4021c1:	je     0x402216
  4021c7:	cmp    DWORD PTR ds:0x42d000,0x7
  4021ce:	jne    0x4021ee
  4021d4:	push   0x42e0f4
  4021d9:	push   DWORD PTR [ebp-0x14]
  4021dc:	push   DWORD PTR [ebp-0x28]
  4021df:	push   DWORD PTR [ebp-0x24]
  4021e2:	push   DWORD PTR [ebp-0xc]
  4021e5:	push   DWORD PTR [ebp-0x14]
  4021e8:	call   DWORD PTR ds:0x42ed67
  4021ee:	cmp    DWORD PTR ds:0x42d000,0x8
  4021f5:	jne    0x402206
  4021fb:	mov    eax,ds:0x42d000
  402200:	dec    eax
  402201:	mov    ds:0x42d000,eax
  402206:	mov    eax,ds:0x42d000
  40220b:	dec    eax
  40220c:	mov    ds:0x42d000,eax
  402211:	jmp    0x4021ba
  402216:	mov    eax,DWORD PTR [ebp-0x48]
  402219:	test   eax,eax
  40221b:	mov    DWORD PTR ds:0x42a014,0x24f3
  402225:	je     0x402a13
  40222b:	sub    DWORD PTR ds:0x42a000,edx
  402231:	mov    eax,DWORD PTR [ebp-0x24]
  402234:	sub    DWORD PTR ds:0x429004,ebx
  40223a:	mov    eax,DWORD PTR [ebp-0xc]
  40223d:	mov    eax,DWORD PTR [ebp-0x8]
  402240:	mov    DWORD PTR [ebp+0xc],eax
  402243:	mov    ecx,DWORD PTR ds:0x42b008
  402249:	sub    DWORD PTR ds:0x42b018,ecx
  40224f:	mov    eax,eax
  402251:	mov    eax,ds:0x42e42f
  402256:	mov    eax,DWORD PTR [eax+0x1c8]
  40225c:	and    DWORD PTR ds:0x42b000,0x0
  402266:	xor    ecx,ecx
  402268:	add    ecx,DWORD PTR ds:0x42b000
  40226e:	inc    ecx
  40226f:	mov    DWORD PTR ds:0x42b000,ecx
  402275:	cmp    DWORD PTR ds:0x42b000,0x1f
  40227c:	jne    0x402288
  402282:	call   DWORD PTR ds:0x42ed6b
  402288:	cmp    DWORD PTR ds:0x42b000,0x11
  40228f:	jb     0x402266
  402295:	or     DWORD PTR ds:0x42d008,0x79cb
  40229f:	mov    eax,DWORD PTR [eax]
  4022a1:	mov    DWORD PTR ds:0x42900c,0x1a
  4022ab:	cmp    DWORD PTR ds:0x42900c,0x0
  4022b2:	je     0x402307
  4022b8:	cmp    DWORD PTR ds:0x42900c,0xe
  4022bf:	jne    0x4022d5
  4022c5:	push   0x429014
  4022ca:	push   0x42e21d
  4022cf:	call   DWORD PTR ds:0x42ed6f
  4022d5:	cmp    DWORD PTR ds:0x42900c,0xf
  4022dc:	jne    0x4022ef
  4022e2:	mov    ecx,DWORD PTR ds:0x42900c
  4022e8:	dec    ecx
  4022e9:	mov    DWORD PTR ds:0x42900c,ecx
  4022ef:	mov    ecx,DWORD PTR ds:0x42900c
  4022f5:	dec    ecx
  4022f6:	mov    DWORD PTR ds:0x42900c,ecx
  4022fc:	jmp    0x4022ab
  402301:	and    ecx,DWORD PTR ds:0x42a014
  402307:	cdq    
  402308:	and    DWORD PTR ds:0x42901c,0x0
  402312:	jmp    0x402324
  402317:	mov    ecx,DWORD PTR ds:0x42901c
  40231d:	inc    ecx
  40231e:	mov    DWORD PTR ds:0x42901c,ecx
  402324:	cmp    DWORD PTR ds:0x42901c,0x11
  40232b:	jae    0x40234e
  402331:	cmp    DWORD PTR ds:0x42901c,0x1a
  402338:	jne    0x402349
  40233e:	push   0x42e0a2
  402343:	call   DWORD PTR ds:0x42ed73
  402349:	jmp    0x402317
  40234e:	mov    ebx,eax
  402350:	mov    ecx,DWORD PTR ds:0x42d008
  402356:	sbb    DWORD PTR ds:0x42a01c,ecx
  40235c:	mov    eax,0xfabdbee9
  402361:	add    ebx,eax
  402363:	adc    edx,0xffffffff
  402366:	xor    DWORD PTR ds:0x42d010,ecx
  40236c:	and    DWORD PTR [ebp-0x10],0x0
  402370:	xor    edx,0x0
  402373:	mov    ecx,DWORD PTR ds:0x42d014
  402379:	sub    DWORD PTR ds:0x429000,ecx
  40237f:	mov    DWORD PTR [ebp-0x68],edx
  402382:	mov    edx,DWORD PTR [ebp+0xc]
  402385:	dec    ecx
  402386:	mov    DWORD PTR [ebp-0x14],edx
  402389:	mov    ecx,0x8a29a12b
  40238e:	mov    DWORD PTR ds:0x42c014,0x77e
  402398:	xor    ebx,ecx
  40239a:	mov    edx,DWORD PTR ds:0x424d05
  4023a0:	mov    edx,DWORD PTR [edx]
  4023a2:	and    DWORD PTR ds:0x42d014,edx
  4023a8:	add    DWORD PTR [ebp-0x14],eax
  4023ab:	mov    edx,DWORD PTR [ebp-0x14]
  4023ae:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4023b2:	xor    edx,ecx
  4023b4:	mov    DWORD PTR [ebp-0x58],edx
  4023b7:	mov    edx,DWORD PTR [ebp-0x10]
  4023ba:	xor    edx,0x0
  4023bd:	mov    DWORD PTR ds:0x429014,0x2b65
  4023c7:	mov    DWORD PTR [ebp-0x54],edx
  4023ca:	mov    DWORD PTR ds:0x42c018,0x612d
  4023d4:	cmp    DWORD PTR [ebp-0x58],ebx
  4023d7:	mov    DWORD PTR ds:0x42a018,0x3565
  4023e1:	jne    0x402403
  4023e7:	mov    DWORD PTR ds:0x42b008,ecx
  4023ed:	mov    edx,DWORD PTR [ebp-0x68]
  4023f0:	cmp    DWORD PTR [ebp-0x54],edx
  4023f3:	mov    DWORD PTR ds:0x42a014,0xb50
  4023fd:	je     0x40246e
  402403:	mov    edx,DWORD PTR ds:0x42e42f
  402409:	mov    edx,DWORD PTR [edx+0x1c0]
  40240f:	adc    DWORD PTR ds:0x42b000,0x42b010
  402419:	mov    edx,DWORD PTR [edx]
  40241b:	xor    ebx,ebx
  40241d:	add    DWORD PTR ds:0x42900c,0x42b014
  402427:	add    edx,eax
  402429:	mov    DWORD PTR ds:0x42901c,0x5032
  402433:	adc    ebx,0xffffffff
  402436:	add    DWORD PTR ds:0x42b00c,0x1ef4
  402440:	xor    edx,ecx
  402442:	xor    ebx,0x0
  402445:	mov    DWORD PTR ds:0x429020,0x6916
  40244f:	cmp    edx,0x70941fc1
  402455:	mov    DWORD PTR ds:0x42a018,0x39ab
  40245f:	jne    0x402a13
  402465:	cmp    ebx,0xffffffff
  402468:	jne    0x402a13
  40246e:	mov    edx,DWORD PTR ds:0x42e4ab
  402474:	mov    ebx,DWORD PTR ds:0x42e4b3
  40247a:	xor    edx,ebx
  40247c:	mov    DWORD PTR ds:0x42e4ab,edx
  402482:	mov    ebx,DWORD PTR ds:0x42e4ab
  402488:	mov    edx,DWORD PTR [ebp-0x48]
  40248b:	add    DWORD PTR [edx],ebx
  40248d:	jmp    0x4029d4
  402492:	mov    eax,DWORD PTR [ebp-0x3c]
  402495:	cmp    eax,0xf89c85b8
  40249a:	je     0x4024f7
  4024a0:	mov    eax,DWORD PTR [ebp-0x8]
  4024a3:	mov    ecx,DWORD PTR [ebp-0x40]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	cmp    eax,ecx
  4024ac:	je     0x4024f7
  4024b2:	mov    eax,ds:0x42e42f
  4024b7:	mov    eax,DWORD PTR [eax+0x194]
  4024bd:	mov    ecx,DWORD PTR [eax]
  4024bf:	mov    eax,DWORD PTR [ecx+0x3c]
  4024c2:	push   DWORD PTR ds:0x42e507
  4024c8:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4024cc:	push   DWORD PTR ds:0x42e2b3
  4024d2:	add    eax,ecx
  4024d4:	mov    ecx,DWORD PTR ds:0x42e42f
  4024da:	mov    ecx,DWORD PTR [ecx+0x194]
  4024e0:	push   DWORD PTR [ecx]
  4024e2:	call   eax
  4024e4:	mov    ecx,DWORD PTR ds:0x42e42f
  4024ea:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4024f0:	mov    DWORD PTR [ecx],eax
  4024f2:	jmp    0x402a13
  4024f7:	mov    eax,DWORD PTR [ebp-0x8]
  4024fa:	mov    ecx,DWORD PTR [ebp-0x7c]
  4024fd:	xor    eax,esi
  4024ff:	add    eax,edi
  402501:	cmp    eax,ecx
  402503:	jne    0x4028ce
  402509:	mov    eax,DWORD PTR [ebp-0x8]
  40250c:	mov    ecx,DWORD PTR ds:0x42e42f
  402512:	mov    ecx,DWORD PTR [ecx+0x198]
  402518:	xor    eax,esi
  40251a:	add    eax,edi
  40251c:	cmp    eax,DWORD PTR [ecx]
  40251e:	jne    0x40253d
  402524:	mov    eax,DWORD PTR [ebp-0x8]
  402527:	push   0xf89c85b9
  40252c:	xor    eax,esi
  40252e:	add    eax,edi
  402530:	push   eax
  402531:	push   ebx
  402532:	push   DWORD PTR [ebp-0xc]
  402535:	push   DWORD PTR [ebp-0x8]
  402538:	call   0x40c765
  40253d:	mov    eax,DWORD PTR [ebp-0xc]
  402540:	mov    DWORD PTR [ebp-0x44],eax
  402543:	mov    eax,DWORD PTR [ebp-0x8]
  402546:	mov    DWORD PTR [ebp-0x1c],eax
  402549:	mov    eax,DWORD PTR [ebp-0x1c]
  40254c:	xor    eax,esi
  40254e:	add    eax,edi
  402550:	mov    DWORD PTR [ebp+0x10],eax
  402553:	mov    eax,ds:0x42e2af
  402558:	mov    eax,DWORD PTR [eax]
  40255a:	mov    DWORD PTR [ebp+0x10],eax
  40255d:	mov    eax,ds:0x42e4b7
  402562:	mov    eax,DWORD PTR [eax]
  402564:	mov    DWORD PTR [ebp-0x18],eax
  402567:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  40256e:	mov    eax,DWORD PTR [ebp+0xc]
  402571:	xor    eax,esi
  402573:	add    eax,edi
  402575:	mov    DWORD PTR [ebp+0xc],eax
  402578:	mov    eax,ds:0x42e42f
  40257d:	mov    DWORD PTR [ebp+0xc],eax
  402580:	mov    eax,DWORD PTR [ebp+0x10]
  402583:	mov    DWORD PTR [ebp+0xc],eax
  402586:	mov    eax,DWORD PTR [ebp+0xc]
  402589:	push   0x4
  40258b:	pop    ecx
  40258c:	sub    ecx,eax
  40258e:	add    ecx,DWORD PTR [ebp-0x18]
  402591:	mov    DWORD PTR [ebp-0x38],0xf89c85f9
  402598:	mov    DWORD PTR [ebp+0x10],ecx
  40259b:	mov    DWORD PTR [ebp-0xdc],ebx
  4025a1:	mov    eax,DWORD PTR [ebp+0xc]
  4025a4:	mov    DWORD PTR [ebp-0xd8],eax
  4025aa:	mov    eax,DWORD PTR [ebp+0x10]
  4025ad:	mov    DWORD PTR [ebp-0xd4],eax
  4025b3:	mov    eax,DWORD PTR [ebp-0x38]
  4025b6:	xor    eax,esi
  4025b8:	add    eax,edi
  4025ba:	mov    DWORD PTR [ebp-0xd0],eax
  4025c0:	lea    eax,[ebp-0x88]
  4025c6:	mov    DWORD PTR [ebp-0xcc],eax
  4025cc:	mov    eax,DWORD PTR [ebp-0xdc]
  4025d2:	xor    eax,esi
  4025d4:	add    eax,edi
  4025d6:	mov    DWORD PTR [ebp-0xdc],eax
  4025dc:	lea    eax,[ebp-0xdc]
  4025e2:	push   eax
  4025e3:	mov    eax,DWORD PTR [ebp-0x44]
  4025e6:	xor    eax,esi
  4025e8:	add    eax,edi
  4025ea:	push   eax
  4025eb:	mov    eax,ds:0x42e44f
  4025f0:	push   0x42e3a5
  4025f5:	push   DWORD PTR [eax]
  4025f7:	call   0x4050c0
  4025fc:	mov    eax,DWORD PTR [ebp+0xc]
  4025ff:	mov    ecx,DWORD PTR [ebp+0x10]
  402602:	mov    DWORD PTR [ebp-0x78],ecx
  402605:	mov    ecx,DWORD PTR [ebp-0x1c]
  402608:	xor    ecx,esi
  40260a:	mov    DWORD PTR [ebp-0x18],eax
  40260d:	add    ecx,edi
  40260f:	jmp    0x40286f
  402614:	lea    edx,[ecx+eax*1]
  402617:	mov    DWORD PTR [ebp+0x10],edx
  40261a:	mov    edx,DWORD PTR [ebp-0x78]
  40261d:	sub    edx,ecx
  40261f:	mov    DWORD PTR [ebp+0xc],edx
  402622:	mov    edx,DWORD PTR [ebp+0xc]
  402625:	mov    DWORD PTR [ebp-0x50],edx
  402628:	mov    edx,DWORD PTR [ebp+0x10]
  40262b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  402632:	mov    DWORD PTR [ebp-0x68],edx
  402635:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  40263c:	mov    edx,DWORD PTR [ebp-0x4c]
  40263f:	xor    edx,esi
  402641:	add    edx,edi
  402643:	mov    DWORD PTR [ebp+0x10],edx
  402646:	mov    edx,DWORD PTR [ebp-0x4c]
  402649:	xor    edx,esi
  40264b:	add    edx,edi
  40264d:	mov    DWORD PTR [ebp+0xc],edx
  402650:	mov    DWORD PTR [ebp-0x64],0xf89c85d9
  402657:	mov    DWORD PTR [ebp-0x60],0xf89c85be
  40265e:	mov    edx,DWORD PTR [ebp-0x4c]
  402661:	mov    ebx,DWORD PTR [ebp-0x50]
  402664:	xor    edx,esi
  402666:	add    edx,edi
  402668:	cmp    ebx,edx
  40266a:	je     0x402863
  402670:	mov    eax,DWORD PTR [ebp-0x20]
  402673:	xor    eax,esi
  402675:	mov    edx,0xffcd8d20
  40267a:	sub    edx,eax
  40267c:	add    edx,DWORD PTR [ebp-0x50]
  40267f:	mov    eax,DWORD PTR [ebp-0x20]
  402682:	mov    ebx,DWORD PTR [ebp+0x10]
  402685:	xor    eax,esi
  402687:	add    eax,edi
  402689:	imul   eax,ebx
  40268c:	cmp    eax,edx
  40268e:	ja     0x402860
  402694:	mov    edx,DWORD PTR [ebp+0x10]
  402697:	mov    eax,DWORD PTR [ebp-0x50]
  40269a:	mov    ebx,DWORD PTR [ebp-0x64]
  40269d:	sub    eax,edx
  40269f:	xor    ebx,esi
  4026a1:	xor    edx,edx
  4026a3:	add    ebx,edi
  4026a5:	div    ebx
  4026a7:	mov    DWORD PTR [ebp+0xc],eax
  4026aa:	mov    eax,DWORD PTR [ebp-0x60]
  4026ad:	mov    edx,DWORD PTR [ebp+0xc]
  4026b0:	xor    eax,esi
  4026b2:	add    eax,edi
  4026b4:	cmp    edx,eax
  4026b6:	jbe    0x4026c6
  4026bc:	mov    eax,DWORD PTR [ebp-0x60]
  4026bf:	xor    eax,esi
  4026c1:	add    eax,edi
  4026c3:	mov    DWORD PTR [ebp+0xc],eax
  4026c6:	mov    eax,DWORD PTR [ebp-0x64]
  4026c9:	mov    edx,DWORD PTR [ebp+0xc]
  4026cc:	xor    eax,esi
  4026ce:	add    eax,edi
  4026d0:	imul   eax,edx
  4026d3:	mov    DWORD PTR [ebp+0xc],eax
  4026d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4026d9:	mov    edx,DWORD PTR [ebp+0xc]
  4026dc:	xor    eax,esi
  4026de:	add    eax,edi
  4026e0:	cmp    edx,eax
  4026e2:	je     0x402849
  4026e8:	mov    eax,DWORD PTR [ebp+0xc]
  4026eb:	mov    DWORD PTR [ebp-0x2c],eax
  4026ee:	mov    eax,DWORD PTR [ebp+0x10]
  4026f1:	add    eax,DWORD PTR [ebp-0x68]
  4026f4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  4026fb:	mov    DWORD PTR [ebp-0x28],eax
  4026fe:	mov    eax,0xf89c85b8
  402703:	mov    DWORD PTR [ebp-0x5c],eax
  402706:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  40270d:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402714:	mov    DWORD PTR [ebp-0x30],eax
  402717:	mov    eax,DWORD PTR [ebp-0x38]
  40271a:	xor    eax,esi
  40271c:	add    eax,edi
  40271e:	jmp    0x402805
  402723:	mov    DWORD PTR [ebp-0x70],0xf89c85b3
  40272a:	mov    DWORD PTR [ebp-0x74],0xf89c85ad
  402731:	mov    eax,DWORD PTR [ebp-0x30]
  402734:	mov    edx,DWORD PTR [ebp+0xc]
  402737:	xor    eax,esi
  402739:	add    eax,edi
  40273b:	imul   eax,edx
  40273e:	mov    edx,DWORD PTR [ebp-0x28]
  402741:	mov    al,BYTE PTR [eax+edx*1]
  402744:	mov    BYTE PTR [ebp-0x1],al
  402747:	mov    eax,DWORD PTR [ebp-0x30]
  40274a:	mov    edx,DWORD PTR [ebp+0xc]
  40274d:	xor    eax,esi
  40274f:	add    eax,edi
  402751:	imul   eax,edx
  402754:	mov    edx,DWORD PTR [ebp-0x54]
  402757:	xor    edx,esi
  402759:	add    eax,edx
  40275b:	mov    edx,DWORD PTR [ebp-0x28]
  40275e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402766:	mov    edx,DWORD PTR [ebp-0x70]
  402769:	xor    edx,esi
  40276b:	lea    eax,[edx+eax*1+0x3272e0]
  402772:	movzx  edx,BYTE PTR [ebp-0x1]
  402776:	xor    edx,eax
  402778:	mov    BYTE PTR [ebp-0x1],dl
  40277b:	mov    al,BYTE PTR [ebp-0x1]
  40277e:	mov    edx,DWORD PTR [ebp-0x30]
  402781:	mov    ebx,DWORD PTR [ebp+0xc]
  402784:	xor    edx,esi
  402786:	add    edx,edi
  402788:	imul   edx,ebx
  40278b:	mov    ebx,DWORD PTR [ebp-0x28]
  40278e:	mov    BYTE PTR [edx+ebx*1],al
  402791:	mov    eax,DWORD PTR [ebp-0x30]
  402794:	mov    edx,DWORD PTR [ebp+0xc]
  402797:	xor    eax,esi
  402799:	add    eax,edi
  40279b:	imul   eax,edx
  40279e:	mov    edx,DWORD PTR [ebp-0x28]
  4027a1:	mov    al,BYTE PTR [eax+edx*1]
  4027a4:	mov    BYTE PTR [ebp-0x1],al
  4027a7:	mov    eax,DWORD PTR [ebp-0x30]
  4027aa:	mov    edx,DWORD PTR [ebp+0xc]
  4027ad:	xor    eax,esi
  4027af:	add    eax,edi
  4027b1:	imul   eax,edx
  4027b4:	mov    edx,DWORD PTR [ebp-0x5c]
  4027b7:	xor    edx,esi
  4027b9:	add    eax,edx
  4027bb:	mov    edx,DWORD PTR [ebp-0x28]
  4027be:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4027c6:	mov    edx,DWORD PTR [ebp-0x74]
  4027c9:	xor    edx,esi
  4027cb:	lea    eax,[edx+eax*1+0x3272e0]
  4027d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4027d6:	xor    edx,eax
  4027d8:	mov    BYTE PTR [ebp-0x1],dl
  4027db:	mov    al,BYTE PTR [ebp-0x1]
  4027de:	mov    edx,DWORD PTR [ebp-0x30]
  4027e1:	mov    ebx,DWORD PTR [ebp+0xc]
  4027e4:	xor    edx,esi
  4027e6:	add    edx,edi
  4027e8:	imul   edx,ebx
  4027eb:	mov    ebx,DWORD PTR [ebp-0x28]
  4027ee:	mov    BYTE PTR [edx+ebx*1],al
  4027f1:	mov    eax,DWORD PTR [ebp-0x10]
  4027f4:	mov    edx,DWORD PTR [ebp-0x5c]
  4027f7:	xor    eax,esi
  4027f9:	xor    edx,esi
  4027fb:	add    eax,edi
  4027fd:	add    edx,edi
  4027ff:	imul   eax,edx
  402802:	add    eax,DWORD PTR [ebp+0xc]
  402805:	mov    DWORD PTR [ebp+0xc],eax
  402808:	mov    eax,DWORD PTR [ebp+0xc]
  40280b:	mov    edx,DWORD PTR [ebp-0x2c]
  40280e:	cmp    edx,eax
  402810:	jb     0x402723
  402816:	mov    eax,DWORD PTR [ebp-0x5c]
  402819:	mov    edx,DWORD PTR [ebp-0x2c]
  40281c:	xor    eax,esi
  40281e:	add    eax,edi
  402820:	imul   eax,edx
  402823:	mov    edx,DWORD PTR [ebp-0x38]
  402826:	xor    edx,esi
  402828:	add    edx,edi
  40282a:	or     eax,edx
  40282c:	mov    edx,DWORD PTR [ebp-0x20]
  40282f:	xor    edx,esi
  402831:	add    eax,edx
  402833:	mov    edx,DWORD PTR [ebp-0x20]
  402836:	xor    edx,esi
  402838:	add    eax,edx
  40283a:	mov    edx,DWORD PTR [ebp+0x10]
  40283d:	lea    eax,[eax+edx*1+0x64e5c0]
  402844:	jmp    0x402858
  402849:	mov    eax,DWORD PTR [ebp-0x20]
  40284c:	mov    edx,DWORD PTR [ebp+0x10]
  40284f:	xor    eax,esi
  402851:	lea    eax,[eax+edx*1+0x3272e0]
  402858:	mov    DWORD PTR [ebp+0x10],eax
  40285b:	jmp    0x402670
  402860:	mov    eax,DWORD PTR [ebp-0x18]
  402863:	mov    edx,DWORD PTR [ebp-0x44]
  402866:	xor    edx,esi
  402868:	lea    ecx,[ecx+edx*1+0x3272e0]
  40286f:	lea    edx,[ecx-0x3272e0]
  402875:	xor    edx,esi
  402877:	cmp    edx,0xf89c95b9
  40287d:	jne    0x402614
  402883:	mov    ecx,DWORD PTR [ebp-0x1c]
  402886:	mov    edx,DWORD PTR [ebp-0x44]
  402889:	mov    ebx,DWORD PTR [ebp-0x1c]
  40288c:	xor    edx,esi
  40288e:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  402895:	xor    ecx,esi
  402897:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  40289e:	xor    ebx,esi
  4028a0:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  4028a7:	mov    edx,DWORD PTR [ebp-0x44]
  4028aa:	xor    edx,esi
  4028ac:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  4028b3:	mov    eax,DWORD PTR [ebp-0x44]
  4028b6:	mov    eax,DWORD PTR [ebp-0x8]
  4028b9:	xor    eax,esi
  4028bb:	add    eax,edi
  4028bd:	mov    ds:0x42e4b3,eax
  4028c2:	mov    eax,DWORD PTR [ebp-0x8]
  4028c5:	xor    eax,esi
  4028c7:	add    eax,edi
  4028c9:	mov    ds:0x42e4ab,eax
  4028ce:	lea    eax,[ebp-0x34]
  4028d1:	mov    DWORD PTR [ebp-0x98],eax
  4028d7:	lea    eax,[ebp+0x4]
  4028da:	mov    DWORD PTR [ebp-0x34],eax
  4028dd:	mov    eax,DWORD PTR [ebp-0x34]
  4028e0:	test   eax,eax
  4028e2:	je     0x402a13
  4028e8:	mov    DWORD PTR [ebp-0x90],0xf152c30
  4028f2:	mov    DWORD PTR [ebp-0x84],0x712ed0f
  4028fc:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402906:	mov    DWORD PTR [ebp-0x94],0x72670a11
  402910:	call   0x40a04c
  402915:	mov    eax,DWORD PTR [ebp-0x24]
  402918:	mov    eax,DWORD PTR [ebp-0xc]
  40291b:	mov    eax,DWORD PTR [ebp-0x8]
  40291e:	mov    DWORD PTR [ebp+0xc],eax
  402921:	mov    eax,eax
  402923:	mov    eax,ds:0x42e42f
  402928:	mov    eax,DWORD PTR [eax+0x1c8]
  40292e:	mov    eax,DWORD PTR [eax]
  402930:	cdq    
  402931:	mov    ebx,eax
  402933:	mov    eax,0xfabdbee9
  402938:	add    ebx,eax
  40293a:	adc    edx,0xffffffff
  40293d:	and    DWORD PTR [ebp-0x10],0x0
  402941:	xor    edx,0x0
  402944:	mov    DWORD PTR [ebp-0x68],edx
  402947:	mov    edx,DWORD PTR [ebp+0xc]
  40294a:	mov    DWORD PTR [ebp-0x14],edx
  40294d:	mov    ecx,0x8a29a12b
  402952:	xor    ebx,ecx
  402954:	add    DWORD PTR [ebp-0x14],eax
  402957:	mov    edx,DWORD PTR [ebp-0x14]
  40295a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40295e:	xor    edx,ecx
  402960:	mov    DWORD PTR [ebp-0x58],edx
  402963:	mov    edx,DWORD PTR [ebp-0x10]
  402966:	xor    edx,0x0
  402969:	mov    DWORD PTR [ebp-0x54],edx
  40296c:	cmp    DWORD PTR [ebp-0x58],ebx
  40296f:	jne    0x402981
  402975:	mov    edx,DWORD PTR [ebp-0x68]
  402978:	cmp    DWORD PTR [ebp-0x54],edx
  40297b:	je     0x4029b0
  402981:	mov    edx,DWORD PTR ds:0x42e42f
  402987:	mov    edx,DWORD PTR [edx+0x1c0]
  40298d:	mov    edx,DWORD PTR [edx]
  40298f:	xor    ebx,ebx
  402991:	add    edx,eax
  402993:	adc    ebx,0xffffffff
  402996:	xor    edx,ecx
  402998:	xor    ebx,0x0
  40299b:	cmp    edx,0x70941fc1
  4029a1:	jne    0x402a13
  4029a7:	cmp    ebx,0xffffffff
  4029aa:	jne    0x402a13
  4029b0:	mov    edx,DWORD PTR ds:0x42e4ab
  4029b6:	mov    ebx,DWORD PTR ds:0x42e4b3
  4029bc:	xor    edx,ebx
  4029be:	mov    DWORD PTR ds:0x42e4ab,edx
  4029c4:	mov    edx,DWORD PTR [ebp-0x34]
  4029c7:	mov    ebx,DWORD PTR ds:0x42e4ab
  4029cd:	add    ebx,DWORD PTR [edx]
  4029cf:	mov    edx,DWORD PTR [ebp-0x34]
  4029d2:	mov    DWORD PTR [edx],ebx
  4029d4:	mov    edx,DWORD PTR [ebp+0xc]
  4029d7:	xor    esi,edx
  4029d9:	mov    edx,DWORD PTR ds:0x42e4ab
  4029df:	add    esi,edi
  4029e1:	xor    ebx,ebx
  4029e3:	add    esi,eax
  4029e5:	adc    ebx,0xffffffff
  4029e8:	xor    edi,edi
  4029ea:	xor    esi,ecx
  4029ec:	xor    ebx,0x0
  4029ef:	add    edx,eax
  4029f1:	adc    edi,0xffffffff
  4029f4:	xor    edx,ecx
  4029f6:	xor    edi,0x0
  4029f9:	cmp    edx,esi
  4029fb:	jne    0x402a13
  402a01:	cmp    edi,ebx
  402a03:	jne    0x402a13
  402a09:	mov    eax,ds:0x42e4ab
  402a0e:	mov    ds:0x42e4b3,eax
  402a13:	mov    eax,ds:0x42e42f
  402a18:	push   0x4
  402a1a:	add    eax,0x1cc
  402a1f:	push   eax
  402a20:	lea    eax,[ebp-0x24]
  402a23:	push   eax
  402a24:	call   0x402a39
  402a29:	mov    eax,DWORD PTR [ebp-0x24]
  402a2c:	mov    eax,DWORD PTR [eax]
  402a2e:	pop    ebx
  402a2f:	pop    edi
  402a30:	pop    esi
  402a31:	leave  
  402a32:	ret    0xc
  402a35:	xor    eax,eax
  402a37:	inc    eax
  402a38:	ret    
  402a39:	push   ebp
  402a3a:	mov    ebp,esp
  402a3c:	sub    esp,0x10
  402a3f:	and    DWORD PTR ds:0x42d004,0x0
  402a49:	jmp    0x402a5b
  402a4e:	mov    edx,DWORD PTR ds:0x42d004
  402a54:	inc    edx
  402a55:	mov    DWORD PTR ds:0x42d004,edx
  402a5b:	cmp    DWORD PTR ds:0x42d004,0x1d
  402a62:	jae    0x402a9d
  402a68:	cmp    DWORD PTR ds:0x42d004,0x11
  402a6f:	jne    0x402a7e
  402a75:	push   DWORD PTR [ebp-0x1c]
  402a78:	call   DWORD PTR ds:0x42ed77
  402a7e:	cmp    DWORD PTR ds:0x42d004,0x10
  402a85:	jne    0x402a98
  402a8b:	mov    edx,DWORD PTR ds:0x42d004
  402a91:	inc    edx
  402a92:	mov    DWORD PTR ds:0x42d004,edx
  402a98:	jmp    0x402a4e
  402a9d:	mov    eax,0xf89c85b9
  402aa2:	mov    DWORD PTR [ebp-0x4],eax
  402aa5:	and    edx,0x5cd5
  402aab:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402ab2:	and    DWORD PTR ds:0x42a000,0x0
  402abc:	jmp    0x402ace
  402ac1:	mov    ecx,DWORD PTR ds:0x42a000
  402ac7:	inc    ecx
  402ac8:	mov    DWORD PTR ds:0x42a000,ecx
  402ace:	cmp    DWORD PTR ds:0x42a000,0x11
  402ad5:	jae    0x402b06
  402adb:	cmp    DWORD PTR ds:0x42a000,0x1c
  402ae2:	jne    0x402afb
  402ae8:	push   0x42e165
  402aed:	push   0x42e185
  402af2:	push   DWORD PTR [ebp-0x28]
  402af5:	call   DWORD PTR ds:0x42ed83
  402afb:	jmp    0x402ac1
  402b00:	adc    ecx,0x6d98
  402b06:	mov    ecx,DWORD PTR [ebp-0x4]
  402b09:	push   esi
  402b0a:	inc    edx
  402b0b:	mov    edx,0x7510899
  402b10:	add    DWORD PTR ds:0x42d004,0x429008
  402b1a:	xor    ecx,edx
  402b1c:	and    DWORD PTR ds:0x42c014,0x0
  402b26:	jmp    0x402b38
  402b2b:	mov    esi,DWORD PTR ds:0x42c014
  402b31:	inc    esi
  402b32:	mov    DWORD PTR ds:0x42c014,esi
  402b38:	cmp    DWORD PTR ds:0x42c014,0x1f
  402b3f:	jae    0x402b67
  402b45:	cmp    DWORD PTR ds:0x42c014,0x26
  402b4c:	jne    0x402b58
  402b52:	call   DWORD PTR ds:0x42ed87
  402b58:	jmp    0x402b2b
  402b5d:	add    DWORD PTR ds:0x42b004,0x42a004
  402b67:	mov    esi,0x3272e0
  402b6c:	xor    DWORD PTR ds:0x42d018,0x42c000
  402b76:	push   edi
  402b77:	adc    DWORD PTR ds:0x42a010,ebx
  402b7d:	mov    edi,DWORD PTR [ebp+0x10]
  402b80:	and    DWORD PTR ds:0x42d010,0x42a00c
  402b8a:	add    ecx,esi
  402b8c:	cmp    ecx,edi
  402b8e:	mov    DWORD PTR ds:0x42b00c,0x360f
  402b98:	je     0x404ff4
  402b9e:	mov    ecx,DWORD PTR [ebp-0x4]
  402ba1:	and    DWORD PTR ds:0x42c014,0x0
  402bab:	mov    edi,DWORD PTR ds:0x42c014
  402bb1:	inc    edi
  402bb2:	mov    DWORD PTR ds:0x42c014,edi
  402bb8:	cmp    DWORD PTR ds:0x42c014,0x25
  402bbf:	jne    0x402bd8
  402bc5:	push   0x1556
  402bca:	push   0x42901c
  402bcf:	push   DWORD PTR [ebp-0x28]
  402bd2:	call   DWORD PTR ds:0x42ed8b
  402bd8:	cmp    DWORD PTR ds:0x42c014,0x1c
  402bdf:	jb     0x402bab
  402be5:	mov    edi,DWORD PTR [ebp+0x10]
  402be8:	xor    eax,eax
  402bea:	xor    ecx,edx
  402bec:	add    ecx,esi
  402bee:	add    edi,0xfabdbee9
  402bf4:	adc    eax,0xffffffff
  402bf7:	xor    eax,0x0
  402bfa:	mov    DWORD PTR [ebp-0xc],eax
  402bfd:	push   ebx
  402bfe:	xor    ebx,ebx
  402c00:	xor    edi,0x8a29a12b
  402c06:	mov    eax,ecx
  402c08:	add    eax,0xfabdbee9
  402c0d:	adc    ebx,0xffffffff
  402c10:	xor    eax,0x8a29a12b
  402c15:	xor    ebx,0x0
  402c18:	cmp    eax,edi
  402c1a:	jne    0x404f86
  402c20:	cmp    ebx,DWORD PTR [ebp-0xc]
  402c23:	je     0x404fee
  402c29:	jmp    0x404f86
  402c2e:	mov    esi,0x3272e0
  402c33:	jmp    0x404f86
  402c38:	xchg   esi,eax
  402c39:	add    bh,ah
  402c3b:	xchg   esp,eax
  402c3c:	mov    ebx,0x3d00957b
  402c41:	dec    esp
  402c42:	ja     0x402c89
  402c44:	retf   0x3f34
  402c47:	dec    ecx
  402c48:	jp     0x402cc4
  402c4a:	jp     0x402cc6
  402c4c:	dec    esp
  402c4d:	pop    edi
  402c4e:	jp     0x402cca
  402c50:	adc    DWORD PTR [eax],ebp
  402c52:	pop    ss
  402c53:	cmp    eax,0x2f1b2115
  402c58:	popa   
  402c59:	cmp    ah,BYTE PTR [ebp+0x66]
  402c5c:	and    DWORD PTR [eax+0x6a],0x6a
  402c60:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402c66:	inc    esp
  402c67:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402c6b:	jl     0x402cd6
  402c6d:	push   ebp
  402c6e:	iret   
  402c6f:	pop    ecx
  402c70:	dec    edx
  402c71:	cmp    al,0x88
  402c73:	cli    
  402c74:	xchg   DWORD PTR [esi+0x57],esi
  402c77:	dec    ecx
  402c78:	jg     0x402cb1
  402c7a:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402c80:	sub    bh,bh
  402c82:	data16 fdivr st,st(2)
  402c85:	push   ebx
  402c86:	jg     0x402ca6
  402c88:	jmp    0xe9faf5c2
  402c8d:	xchg   DWORD PTR [ebx],edx
  402c8f:	fimul  WORD PTR [ebx-0x54aaf0db]
  402c95:	mov    al,al
  402c97:	imul   DWORD PTR [ecx-0x27]
  402c9a:	add    al,dl
  402c9c:	push   cs
  402c9d:	cli    
  402c9e:	es adc al,0x44
  402ca1:	or     BYTE PTR [esi],ah
  402ca3:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402ca8:	pop    ebp
  402ca9:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402caf:	jo     0x402ce3
  402cb1:	les    ebx,FWORD PTR [ebx-0xb]
  402cb4:	sbb    bh,dl
  402cb6:	je     0x402c75
  402cb8:	arpl   cx,bx
  402cba:	xchg   esp,eax
  402cbb:	pop    edi
  402cbc:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402cc2:	repz sahf 
  402cc4:	cmp    BYTE PTR [edx+0x73],dh
  402cc7:	or     ebx,edx
  402cc9:	sub    DWORD PTR [edx-0x77],edx
  402ccc:	xor    BYTE PTR [ebx],dh
  402cce:	push   eax
  402ccf:	jecxz  0x402ca0
  402cd1:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402cd7:	test   BYTE PTR [ebp-0x20],ch
  402cda:	inc    ecx
  402cdb:	push   edx
  402cdc:	dec    eax
  402cdd:	or     BYTE PTR [esi],bh
  402cdf:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402ce7:	fadd   QWORD PTR [eax]
  402ce9:	push   esi
  402cea:	stc    
  402ceb:	push   edx
  402cec:	push   esi
  402ced:	mov    eax,ds:0xf4bf64f5
  402cf2:	inc    edx
  402cf3:	adc    al,0x6
  402cf5:	sbb    al,0xbf
  402cf7:	mov    esi,0x801c1c68
  402cfc:	jecxz  0x402c90
  402cfe:	std    
  402cff:	daa    
  402d00:	jns    0x402c87
  402d02:	lods   eax,DWORD PTR ds:[esi]
  402d03:	dec    edx
  402d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d05:	mov    esi,0x35939b1a
  402d0a:	mov    ebx,0x98ed90c4
  402d0f:	fcom   QWORD PTR [ecx+0x446929b1]
  402d15:	iret   
  402d16:	scas   al,BYTE PTR es:[edi]
  402d17:	and    edi,DWORD PTR [edx+esi*2]
  402d1a:	push   cs
  402d1b:	sbb    eax,0x28ee1c13
  402d20:	(bad)  
  402d22:	test   DWORD PTR [edx],ecx
  402d24:	setle  BYTE PTR [edi-0x8ed5e60]
  402d2b:	and    BYTE PTR [edx+0x62d67c2a],ch
  402d31:	sub    bl,dh
  402d33:	stos   DWORD PTR es:[edi],eax
  402d34:	inc    edx
  402d35:	outs   dx,BYTE PTR ds:[esi]
  402d36:	add    BYTE PTR [esi+0x25],0xda
  402d3a:	imul   edx,DWORD PTR [edx],0x7b98f02e
  402d40:	fst    QWORD PTR ds:0x34b36988
  402d46:	lock xchg esi,eax
  402d48:	leave  
  402d49:	mov    gs,WORD PTR [edi+0x4f]
  402d4c:	mov    BYTE PTR [eax],dl
  402d4e:	sahf   
  402d4f:	adc    eax,0xe6cef143
  402d54:	push   ebp
  402d55:	mov    esi,0x17227222
  402d5a:	bound  ebx,QWORD PTR [edi+0x46bd9436]
  402d60:	imul   BYTE PTR [eax+0x78]
  402d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d64:	sar    ch,1
  402d66:	push   eax
  402d67:	in     al,0x4
  402d69:	inc    ebp
  402d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d6b:	pop    es
  402d6c:	div    DWORD PTR [eax]
  402d6e:	xor    BYTE PTR [eax-0x2a],0x2e
  402d72:	pusha  
  402d73:	les    edx,FWORD PTR [edx+0x50]
  402d76:	pop    ss
  402d77:	add    eax,0xd88cf587
  402d7c:	sbb    DWORD PTR [edx-0x7],ebx
  402d7f:	lock cwde 
  402d81:	cdq    
  402d82:	or     esp,ecx
  402d84:	mov    DWORD PTR [esi],esp
  402d86:	rcr    BYTE PTR [edx-0x12],cl
  402d89:	cld    
  402d8a:	dec    eax
  402d8b:	addr16 call 0x5fcd5306
  402d91:	pushf  
  402d92:	test   al,0xb
  402d94:	fwait
  402d95:	lods   eax,DWORD PTR ds:[esi]
  402d96:	xchg   edi,eax
  402d97:	sar    BYTE PTR [edi-0x444a4197],0x12
  402d9e:	xchg   esp,eax
  402d9f:	aam    0x66
  402da1:	cmc    
  402da2:	jne    0x402dbb
  402da4:	mov    ecx,0x793ae98e
  402da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402daa:	dec    ebx
  402dab:	out    dx,eax
  402dac:	ret    0x7c8c
  402daf:	mov    eax,ds:0x1085a7bd
  402db4:	jg     0x402d8e
  402db6:	repz and cx,WORD PTR [eax]
  402dba:	hlt    
  402dbb:	inc    eax
  402dbc:	jb     0x402d65
  402dbe:	fistp  WORD PTR [ecx]
  402dc0:	and    ch,al
  402dc2:	(bad)  
  402dc3:	daa    
  402dc4:	jne    0x402d84
  402dc6:	daa    
  402dc7:	adc    eax,0xb30a49cf
  402dcc:	cli    
  402dcd:	(bad)  
  402dcf:	fwait
  402dd0:	shl    BYTE PTR [eax-0x7b],0x98
  402dd4:	pusha  
  402dd5:	inc    edi
  402dd6:	cdq    
  402dd7:	inc    edx
  402dd8:	scas   eax,DWORD PTR es:[edi]
  402dd9:	dec    ebp
  402dda:	xchg   bl,cl
  402ddc:	cmp    BYTE PTR [edx+0x28],dl
  402ddf:	ins    DWORD PTR es:[edi],dx
  402de0:	daa    
  402de1:	iret   
  402de2:	enter  0x14b4,0x5e
  402de6:	div    DWORD PTR [esi]
  402de8:	outs   dx,BYTE PTR ds:[esi]
  402de9:	cmp    cl,ah
  402deb:	aad    0x99
  402ded:	or     ah,BYTE PTR [ebp+0x59]
  402df0:	xchg   ebx,eax
  402df1:	xchg   edi,eax
  402df2:	dec    eax
  402df3:	xchg   ebx,eax
  402df4:	jg     0x402e39
  402df6:	dec    edx
  402df7:	in     al,0xa8
  402df9:	call   0x97296ba8
  402dfe:	pop    ds
  402dff:	fldl2e 
  402e01:	aas    
  402e02:	lahf   
  402e03:	(bad)  
  402e04:	pop    edi
  402e05:	sar    BYTE PTR [edi-0x704cc933],0xae
  402e0c:	push   0x35
  402e0e:	cli    
  402e0f:	xchg   ecx,eax
  402e10:	mov    dl,0xc8
  402e12:	fild   WORD PTR [esi-0x142b0ded]
  402e18:	aad    0xe5
  402e1a:	mov    bl,0x16
  402e1c:	scas   al,BYTE PTR es:[edi]
  402e1d:	lea    edx,[ebx-0x5f83cdba]
  402e23:	std    
  402e24:	and    BYTE PTR [edi-0x45afb9b8],0xc
  402e2b:	ins    BYTE PTR es:[edi],dx
  402e2c:	add    bl,BYTE PTR [esi+0x2a98289d]
  402e32:	fidivr DWORD PTR [ebp-0x75f486fd]
  402e38:	dec    edi
  402e39:	int3   
  402e3a:	sub    cl,cl
  402e3c:	ss shl ch,0x37
  402e40:	test   bh,ch
  402e42:	mov    edx,esp
  402e44:	push   cs
  402e45:	aad    0xf8
  402e47:	dec    edi
  402e48:	repnz icebp 
  402e4a:	test   eax,0x14f894d5
  402e4f:	mov    BYTE PTR [ebx+0x3631f5d7],ch
  402e55:	push   edi
  402e56:	fldcw  WORD PTR [ecx+0x6]
  402e59:	jle    0x402e3c
  402e5b:	cmp    eax,0xe6d35d99
  402e60:	cmp    ah,bl
  402e62:	mov    ebx,0xc2566b84
  402e67:	loope  0x402ecb
  402e69:	test   al,0xf7
  402e6b:	mov    ah,0x33
  402e6d:	mov    ecx,0x687c64e8
  402e72:	in     al,dx
  402e73:	or     BYTE PTR [ebp+0x594a05e1],dl
  402e79:	gs mov dl,0x44
  402e7c:	jle    0x402ebd
  402e7e:	dec    ebp
  402e7f:	ret    0x7d8a
  402e82:	xlat   BYTE PTR cs:[ebx]
  402e84:	inc    ebx
  402e85:	retf   0xca6c
  402e88:	iret   
  402e89:	inc    ecx
  402e8a:	xchg   edi,eax
  402e8b:	push   edx
  402e8c:	jge    0x402ebc
  402e8e:	mov    al,0xe
  402e90:	adc    eax,0x5624931e
  402e95:	imul   eax,ebp,0xffffff8e
  402e98:	or     al,0x29
  402e9a:	jg     0x402ea7
  402e9c:	(bad)  
  402e9d:	in     eax,dx
  402e9e:	sbb    DWORD PTR [esi+eax*4],esp
  402ea1:	jl     0x402efa
  402ea3:	frndint 
  402ea5:	sti    
  402ea6:	lock aad 0xd3
  402ea9:	pop    ebp
  402eaa:	or     ecx,esi
  402eac:	js     0x402efd
  402eae:	mov    dl,0x99
  402eb0:	pusha  
  402eb1:	pop    es
  402eb2:	gs xchg ebp,eax
  402eb4:	xor    eax,DWORD PTR [edx]
  402eb6:	scas   eax,DWORD PTR es:[edi]
  402eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eb8:	jbe    0x402eab
  402eba:	mov    eax,0xb4bd8fe9
  402ebf:	mov    ah,0xfa
  402ec1:	inc    eax
  402ec2:	add    bh,cl
  402ec4:	mov    WORD PTR [bp+di-0x1d],?
  402ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ec9:	test   edx,eax
  402ecb:	pop    edx
  402ecc:	not    esi
  402ece:	mov    cs,WORD PTR es:[ebx]
  402ed1:	pop    esp
  402ed2:	xor    BYTE PTR [esi+eax*4+0x700cbb04],bl
  402ed9:	xchg   edx,eax
  402eda:	shl    BYTE PTR [ebp+0x68],1
  402edd:	mov    BYTE PTR [eax-0x7c],cl
  402ee0:	in     al,0xa9
  402ee2:	dec    eax
  402ee3:	scas   al,BYTE PTR es:[edi]
  402ee4:	(bad)  
  402ee5:	mov    al,0x11
  402ee7:	loopne 0x402eec
  402ee9:	imul   esi,DWORD PTR [esi+0x3e9ff0cc],0x3921f316
  402ef3:	and    al,0x4d
  402ef5:	mov    ebp,0xe3050397
  402efa:	and    bh,BYTE PTR [eax]
  402efc:	mov    BYTE PTR [ebp-0x44],al
  402eff:	(bad)  
  402f00:	test   eax,0x2ce578f3
  402f05:	add    dh,BYTE PTR [edi+edi*2]
  402f08:	pop    ebx
  402f09:	ja     0x402f4a
  402f0b:	fisub  DWORD PTR ds:0xcce40e59
  402f11:	and    BYTE PTR [eax-0x19d78cf1],cl
  402f17:	sti    
  402f18:	push   edx
  402f19:	pop    ebx
  402f1a:	in     eax,dx
  402f1b:	stos   DWORD PTR es:[edi],eax
  402f1c:	ja     0x402f9a
  402f1e:	inc    ebx
  402f1f:	addr16 ja 0x402ed4
  402f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f23:	loop   0x402eb6
  402f25:	push   esp
  402f26:	jecxz  0x402eb6
  402f28:	(bad)  
  402f2a:	adc    ebp,esp
  402f2c:	push   0xc251005f
  402f31:	sbb    DWORD PTR [esi],esp
  402f33:	out    0x98,al
  402f35:	iret   
  402f36:	xchg   esp,eax
  402f37:	xchg   ecx,eax
  402f38:	sub    esi,esi
  402f3a:	fsub   DWORD PTR [edx]
  402f3c:	or     al,0x9c
  402f3e:	inc    eax
  402f3f:	imul   edx,DWORD PTR [edi+0x75],0xffffffe3
  402f43:	div    BYTE PTR [esi-0x1746d578]
  402f49:	xchg   ebx,eax
  402f4a:	mov    edx,0xf4672812
  402f4f:	mov    ch,0xf9
  402f51:	xor    esp,eax
  402f53:	add    al,0xc8
  402f55:	ss aas 
  402f57:	cmp    ch,BYTE PTR gs:[eax]
  402f5a:	cmp    DWORD PTR [eax],eax
  402f5c:	call   0x221a021f
  402f61:	clc    
  402f62:	(bad)  
  402f63:	dec    ebx
  402f64:	setl   BYTE PTR [esi]
  402f67:	sbb    dl,BYTE PTR [edi]
  402f69:	mov    ds:0x94375a0c,al
  402f6e:	loope  0x402fb9
  402f70:	daa    
  402f71:	int    0x62
  402f73:	xor    ebp,eax
  402f75:	mov    al,ds:0x91aed5a1
  402f7a:	div    BYTE PTR [ebp+0x7f]
  402f7d:	sub    eax,0x58fe0697
  402f82:	mov    al,BYTE PTR [eax]
  402f84:	adc    BYTE PTR [edx],bh
  402f86:	int3   
  402f87:	cmp    ebx,ebp
  402f89:	(bad)  
  402f8a:	call   0xebce:0x1db9c98c
  402f91:	sub    al,0xc8
  402f93:	in     eax,0x47
  402f95:	outs   dx,BYTE PTR ds:[esi]
  402f96:	jns    0x402ff6
  402f98:	xchg   BYTE PTR [ebp+0x75ff2bfd],cl
  402f9e:	icebp  
  402f9f:	call   0x8accccea
  402fa4:	rcr    BYTE PTR [ebx],cl
  402fa6:	fdiv   DWORD PTR [edi+0x2f]
  402fa9:	mov    WORD PTR [edi],gs
  402fab:	retf   
  402fac:	cdq    
  402fad:	in     eax,0x56
  402faf:	sub    esp,esp
  402fb1:	ret    0xe4e3
  402fb4:	in     eax,0x56
  402fb6:	js     0x402ff2
  402fb8:	fdivr  DWORD PTR [edi-0x4]
  402fbb:	pop    eax
  402fbc:	pop    ebp
  402fbd:	mov    edi,DWORD PTR [ebp+0x39]
  402fc0:	outs   dx,DWORD PTR ds:[esi]
  402fc1:	popf   
  402fc2:	sub    eax,0xf86fc8be
  402fc7:	imul   esp,DWORD PTR [ecx],0xcf6015bb
  402fcd:	ret    0x2a3f
  402fd0:	xlat   BYTE PTR ds:[ebx]
  402fd1:	neg    al
  402fd3:	add    DWORD PTR [eax-0x25],ebp
  402fd6:	cmp    eax,0xb4b0092a
  402fdb:	push   ebp
  402fdc:	js     0x402fe4
  402fde:	pop    ebp
  402fdf:	xchg   ebp,eax
  402fe0:	div    DWORD PTR [edx-0x474cab5e]
  402fe6:	push   0x533b7345
  402feb:	push   0x88cc9f3d
  402ff0:	test   al,0xb2
  402ff2:	int3   
  402ff3:	and    eax,0x499af59d
  402ff8:	imul   eax,DWORD PTR [ecx+0x6f],0x65
  402ffc:	pushf  
  402ffd:	test   ah,bh
  402fff:	xchg   edi,eax
  403000:	out    0xc0,eax
  403002:	xlat   BYTE PTR ds:[ebx]
  403003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403004:	iret   
  403005:	(bad)  
  403006:	sub    bh,cl
  403008:	cmp    DWORD PTR [ebx],eax
  40300a:	inc    edx
  40300b:	in     eax,0xe8
  40300d:	jae    0x40303d
  40300f:	xchg   ebp,eax
  403010:	dec    eax
  403011:	fisttp DWORD PTR ds:0x341fc6db
  403017:	hlt    
  403018:	pop    ss
  403019:	xlat   BYTE PTR ds:[ebx]
  40301a:	fstp   TBYTE PTR ds:0xcf8f00eb
  403020:	cwde   
  403021:	mov    ds:0xec2f7abd,al
  403026:	push   ecx
  403027:	jb     0x402fcc
  403029:	mov    edx,0x69387fd4
  40302e:	jg     0x4030ac
  403030:	push   0xffffffa4
  403032:	add    dh,dl
  403034:	repnz sub bl,BYTE PTR [edi+eiz*2]
  403038:	and    esp,DWORD PTR [ecx+ecx*8+0x7d]
  40303c:	test   BYTE PTR ds:0x7858c390,al
  403042:	inc    edi
  403043:	xchg   edi,eax
  403044:	pop    edi
  403045:	pop    ss
  403046:	lds    edi,FWORD PTR [edi]
  403048:	loop   0x40309a
  40304a:	jnp    0x4030b9
  40304c:	dec    edx
  40304d:	inc    ebx
  40304e:	sub    BYTE PTR [edi-0x35],al
  403051:	arpl   si,di
  403053:	mov    BYTE PTR [edx+0xa],dl
  403056:	jnp    0x4030b8
  403058:	mov    ebx,0x783b4f95
  40305d:	(bad)  
  40305e:	fisttp QWORD PTR [esp+ecx*1+0x24]
  403062:	dec    esp
  403063:	dec    esp
  403064:	adc    eax,0x16231c13
  403069:	or     al,0x6f
  40306b:	push   edx
  40306c:	pusha  
  40306d:	inc    edx
  40306e:	mov    bl,0x15
  403070:	pop    edx
  403071:	xchg   edi,eax
  403072:	push   cs
  403073:	add    DWORD PTR [ebx],0xc
  403076:	mov    ds:0x32fa59db,al
  40307b:	cmp    eax,0x7a17c852
  403080:	jp     0x403047
  403082:	xor    al,0x1
  403084:	(bad)  
  403085:	cmp    BYTE PTR [esi],dl
  403087:	inc    ecx
  403088:	loop   0x4030e7
  40308a:	push   ebx
  40308b:	add    eax,0xba819c21
  403090:	pop    esi
  403091:	inc    edx
  403092:	jge    0x4030ae
  403094:	xor    al,0x66
  403096:	leave  
  403097:	pop    ss
  403098:	das    
  403099:	xlat   BYTE PTR ds:[ebx]
  40309a:	jle    0x40307e
  40309c:	or     dl,BYTE PTR [ebp-0x6]
  40309f:	mov    ebx,0xdf6d9b4f
  4030a4:	fidivr DWORD PTR [esi]
  4030a6:	inc    ebp
  4030a7:	sbb    al,0x63
  4030a9:	out    0xa4,eax
  4030ab:	imul   ebx,DWORD PTR [esi],0xffffff8e
  4030ae:	and    esp,DWORD PTR fs:[ebp+0x49]
  4030b2:	cs and eax,0xa6b1f5ad
  4030b8:	and    DWORD PTR [ecx-0x16],edi
  4030bb:	gs in  al,dx
  4030bd:	push   esi
  4030be:	pop    ds
  4030bf:	push   eax
  4030c0:	jae    0x4030bd
  4030c2:	or     ebx,DWORD PTR [edx]
  4030c4:	add    eax,0x5dad3156
  4030c9:	inc    ecx
  4030ca:	cmp    eax,0x8887be91
  4030cf:	in     eax,dx
  4030d0:	mov    WORD PTR [ebx-0x64],?
  4030d3:	(bad)  
  4030d5:	mov    eax,0x55209ed0
  4030da:	fistp  DWORD PTR [edi]
  4030dc:	into   
  4030dd:	sub    esp,edi
  4030df:	cmc    
  4030e0:	mov    edi,0xdf69b7a2
  4030e5:	fwait
  4030e6:	mov    DWORD PTR [edx+0x3],eax
  4030e9:	mov    WORD PTR [eax-0x25],ds
  4030ec:	inc    ecx
  4030ed:	ror    DWORD PTR [edx-0x66],1
  4030f0:	(bad)  [ecx+0x4a92a6df]
  4030f6:	push   edx
  4030f7:	xchg   edx,eax
  4030f8:	arpl   WORD PTR [ecx-0x14860f86],cx
  4030fe:	sbb    ch,bl
  403100:	imul   ecx,eax,0xffffffa0
  403103:	inc    ebx
  403104:	add    dl,BYTE PTR [eax-0x721f6329]
  40310a:	cmp    al,0xa9
  40310c:	(bad)  
  40310d:	mov    dh,0x6
  40310f:	sbb    ebp,DWORD PTR [ecx+0x746b6410]
  403115:	test   DWORD PTR [esi-0x38],esp
  403118:	inc    edi
  403119:	test   al,0x91
  40311b:	mov    ebp,0x9cbeff11
  403120:	cmp    al,0xe6
  403122:	retf   
  403123:	leave  
  403124:	mov    dh,0xee
  403126:	lea    esp,[edi-0x53]
  403129:	sub    BYTE PTR [edx-0x1e],ch
  40312c:	mov    ecx,0x4eff28c5
  403131:	rcr    BYTE PTR [esi-0x40],1
  403134:	mov    bl,0x42
  403136:	neg    DWORD PTR [esi-0x4f8948b7]
  40313c:	stos   BYTE PTR es:[edi],al
  40313d:	(bad)  
  40313e:	push   edx
  40313f:	(bad)  
  403140:	aad    0x1e
  403142:	pop    ebx
  403143:	mov    ch,0x5
  403145:	sbb    bl,bh
  403147:	stc    
  403148:	jge    0x403167
  40314a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40314b:	mov    DWORD PTR [ebx+ebp*8-0x37],ecx
  40314f:	push   edi
  403150:	outs   dx,BYTE PTR ds:[esi]
  403151:	and    BYTE PTR [ecx+0x5e9b202d],bl
  403157:	dec    esp
  403158:	repz and ch,BYTE PTR [ebx-0x1b680d11]
  40315f:	arpl   WORD PTR [eax],bx
  403161:	sbb    BYTE PTR [edi-0x74883d8],bl
  403167:	aam    0xb0
  403169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40316a:	retf   
  40316b:	mov    dh,ch
  40316d:	pop    ss
  40316e:	pushf  
  40316f:	test   BYTE PTR [eax],ch
  403171:	sub    eax,0xbbdee481
  403176:	push   es
  403177:	ss mov dl,0xc9
  40317a:	jmp    0x403149
  40317c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40317d:	and    eax,0x77378bb5
  403182:	gs mov gs,eax
  403185:	xchg   ebp,eax
  403186:	push   0xffffff82
  403188:	out    dx,eax
  403189:	pop    ecx
  40318a:	xor    edi,DWORD PTR [edx-0x72]
  40318d:	mov    al,ds:0x6da11a94
  403192:	mov    ds:0x935e9d9d,al
  403197:	push   ds
  403198:	jbe    0x403150
  40319a:	je     0x40317c
  40319c:	dec    ebx
  40319d:	mov    bl,0x51
  40319f:	mov    edi,0x83a63357
  4031a4:	cmp    dl,bh
  4031a6:	pop    ss
  4031a7:	std    
  4031a8:	jns    0x4031c5
  4031aa:	aad    0x26
  4031ac:	sbb    al,0x9c
  4031ae:	sbb    al,0x37
  4031b0:	fidiv  DWORD PTR [ebp-0x888a888]
  4031b6:	mov    bl,0x8f
  4031b8:	rsm    
  4031ba:	sub    ebp,esp
  4031bc:	mov    dh,0x10
  4031be:	mov    ds:0x5db1e246,al
  4031c3:	mov    esp,fs
  4031c5:	repnz lock into 
  4031c8:	adc    bh,BYTE PTR [ebx+0x5aa2e1c2]
  4031ce:	(bad)  
  4031cf:	jne    0x40321b
  4031d1:	ret    0x91c3
  4031d4:	cdq    
  4031d5:	sbb    edi,edx
  4031d7:	bound  edx,QWORD PTR [ecx]
  4031d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031da:	mov    ds:0x4a01846b,eax
  4031df:	pushf  
  4031e0:	mov    ds:0x8cb8ae91,al
  4031e5:	lods   al,BYTE PTR ds:[esi]
  4031e6:	jmp    0x8a8deefd
  4031eb:	mov    bh,bh
  4031ed:	out    dx,eax
  4031ee:	xchg   edi,ebp
  4031f0:	sbb    eax,DWORD PTR [edi]
  4031f2:	add    al,0x40
  4031f4:	stc    
  4031f5:	dec    esi
  4031f6:	jb     0x40321e
  4031f8:	sub    BYTE PTR [ecx+ebp*8+0x66d37c65],ah
  4031ff:	sti    
  403200:	add    edx,DWORD PTR [eax]
  403202:	sbb    DWORD PTR [ebx],ebp
  403204:	xchg   esp,eax
  403206:	push   ecx
  403207:	xchg   edx,eax
  403208:	(bad)  
  403209:	out    0xc8,al
  40320b:	mov    ds:0x5640250d,al
  403210:	int    0x86
  403212:	push   eax
  403213:	sbb    edx,DWORD PTR ds:0xae4e94f4
  403219:	jo     0x4031c8
  40321b:	scas   eax,DWORD PTR es:[edi]
  40321c:	mov    ch,0x63
  40321e:	dec    eax
  40321f:	fdivp  st(7),st
  403221:	fild   QWORD PTR [edx+0x1c1611d4]
  403227:	and    DWORD PTR [eax],edi
  403229:	xchg   edx,eax
  40322a:	int3   
  40322b:	or     edx,esi
  40322d:	sar    BYTE PTR [ebx-0x3a46b7b6],1
  403233:	popf   
  403234:	inc    ebp
  403235:	mov    al,0x90
  403237:	dec    edi
  403238:	mov    bh,0x42
  40323a:	mov    ds:0x53bb2778,eax
  40323f:	xchg   ebp,ebp
  403241:	(bad)  
  403242:	adc    al,0xfd
  403244:	dec    ecx
  403245:	pop    ss
  403246:	xchg   edi,eax
  403247:	leave  
  403248:	or     BYTE PTR [edi+0x62],0xdc
  40324c:	adc    esi,esi
  40324e:	pop    ebx
  40324f:	pop    eax
  403250:	push   0xffffffd8
  403252:	popa   
  403253:	into   
  403254:	call   0x96c1:0x5759108e
  40325b:	mov    esp,0x3b06277a
  403260:	bound  ebp,QWORD PTR [ecx]
  403262:	jbe    0x4032b7
  403264:	mov    edx,0x24b49859
  403269:	repz add al,0xa1
  40326c:	clc    
  40326d:	mov    ds:0x72e1178b,eax
  403272:	div    bh
  403274:	imul   edi,DWORD PTR [eax+0x5d],0x2d
  403278:	loopne 0x403252
  40327a:	mov    al,0xca
  40327c:	jmp    DWORD PTR [ecx]
  40327e:	pop    ss
  40327f:	loopne 0x403293
  403281:	popa   
  403282:	jmp    0xf851:0x6ec5f218
  403289:	test   DWORD PTR [edx+0x3f],esp
  40328c:	push   ds
  40328d:	push   ebp
  40328e:	jge    0x40329e
  403290:	mov    ch,0x58
  403292:	push   edx
  403293:	adc    BYTE PTR [eax],ch
  403295:	in     al,dx
  403296:	out    dx,eax
  403297:	cmp    bl,al
  403299:	jne    0x403301
  40329b:	out    dx,eax
  40329c:	xchg   ebx,eax
  40329d:	fist   DWORD PTR [esi-0x74]
  4032a0:	icebp  
  4032a1:	test   al,0x2e
  4032a3:	and    eax,ecx
  4032a5:	stos   DWORD PTR es:[edi],eax
  4032a6:	outs   dx,DWORD PTR ds:[esi]
  4032a7:	xchg   edx,eax
  4032a8:	mov    esi,0x3d9204a3
  4032ad:	push   ecx
  4032ae:	dec    ebx
  4032af:	into   
  4032b0:	and    al,BYTE PTR [edi]
  4032b2:	push   ss
  4032b3:	fisubr WORD PTR [ebx-0x5d]
  4032b6:	xchg   ebx,eax
  4032b7:	adc    DWORD PTR [edx+0x38],ebx
  4032ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032bb:	xlat   BYTE PTR ds:[ebx]
  4032bc:	sbb    edi,DWORD PTR [eax+0x3a43467b]
  4032c2:	dec    ecx
  4032c3:	fstp   st(5)
  4032c5:	mov    bl,0x70
  4032c7:	les    esp,FWORD PTR [esi-0x2b]
  4032ca:	sbb    ebx,esp
  4032cc:	push   edi
  4032cd:	mov    ah,0xfb
  4032cf:	jb     0x40334a
  4032d1:	pop    ebp
  4032d2:	dec    ecx
  4032d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032d4:	cdq    
  4032d5:	fwait
  4032d6:	and    BYTE PTR [ebp+0x59],ah
  4032d9:	adc    al,0xf1
  4032db:	in     al,0x41
  4032dd:	scas   eax,DWORD PTR es:[edi]
  4032de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032df:	add    BYTE PTR [esi-0x3edd8bf9],0x86
  4032e6:	ror    DWORD PTR [ebx-0x5a],cl
  4032e9:	dec    ebx
  4032ea:	scas   al,BYTE PTR es:[edi]
  4032eb:	popf   
  4032ec:	cdq    
  4032ed:	fs jmp 0x4032f6
  4032f0:	pop    es
  4032f1:	leave  
  4032f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032f3:	pop    ds
  4032f4:	inc    DWORD PTR es:[esi+0x255891cc]
  4032fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032fc:	mov    esi,0xec3f7782
  403301:	mov    cl,0x94
  403303:	fdiv   QWORD PTR [edx+0x6fc0bf38]
  403309:	hlt    
  40330a:	cmc    
  40330b:	mov    ebp,ds
  40330d:	and    al,0x83
  403310:	test   BYTE PTR ds:0x8ff0beb,ah
  403316:	out    0xb9,al
  403318:	iret   
  403319:	jge    0x403395
  40331b:	sahf   
  40331c:	pop    esp
  40331d:	dec    esp
  40331e:	popa   
  40331f:	lea    esi,[ebx-0x379b1d41]
  403325:	xor    eax,0x9da3faaf
  40332a:	xchg   edi,eax
  40332b:	add    DWORD PTR [edx-0x18],esp
  40332e:	dec    ebp
  40332f:	sbb    al,0xe3
  403331:	mov    ds:0xbe8ad0d8,al
  403336:	loope  0x403397
  403338:	mov    dh,0xc5
  40333a:	jmp    0x32ba223
  40333f:	xchg   ebp,eax
  403340:	and    ebx,0x15
  403343:	push   0xfffffff5
  403345:	ss cwde 
  403347:	gs or  edi,esi
  40334a:	jecxz  0x40338c
  40334c:	mov    al,ds:0x7bddde58
  403351:	mov    edi,0xd6e6c2ef
  403356:	int3   
  403357:	out    dx,al
  403358:	pop    ss
  403359:	xor    BYTE PTR [ebx+ecx*1-0x6a28bffb],bh
  403360:	lock jb 0x40333a
  403363:	outs   dx,BYTE PTR ds:[esi]
  403364:	fimul  DWORD PTR [esi+0xe3cd4a3]
  40336a:	fisttp WORD PTR [ebx+0x77b78f44]
  403370:	retf   0xf934
  403373:	ds add ch,bl
  403376:	push   esi
  403377:	sub    al,0x76
  403379:	lds    esi,FWORD PTR [eax]
  40337b:	add    DWORD PTR [ebx+eax*8],0xfffffff9
  40337f:	push   es
  403380:	lea    ebx,[ebx+0xaa95411]
  403386:	mov    ah,0x45
  403388:	repz cmp BYTE PTR [edi-0x7f],cl
  40338c:	pop    es
  40338d:	xchg   ecx,eax
  40338e:	loopne 0x403390
  403390:	mov    edx,0xe4f65c9f
  403395:	or     eax,0x9fea8de2
  40339a:	add    esi,DWORD PTR [ecx-0x2b]
  40339d:	cmp    ebp,DWORD PTR [eax-0x7]
  4033a0:	sub    eax,edi
  4033a2:	mov    esp,0x8a6b3e3f
  4033a7:	pop    edi
  4033a8:	add    al,BYTE PTR [ecx]
  4033aa:	retf   0x29a1
  4033ad:	aam    0x22
  4033af:	push   0xffffffa5
  4033b1:	inc    edi
  4033b2:	out    0x6c,al
  4033b4:	in     al,dx
  4033b5:	or     al,0xd3
  4033b7:	inc    esi
  4033b8:	pop    edx
  4033b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ba:	jl     0x403394
  4033bc:	hlt    
  4033bd:	xchg   ebx,eax
  4033be:	jns    0x403340
  4033c0:	test   bh,dl
  4033c2:	mov    bh,0xb
  4033c4:	aam    0x5a
  4033c6:	das    
  4033c7:	sbb    BYTE PTR [ebx-0x4776b455],0x32
  4033ce:	test   al,0x41
  4033d0:	jmp    0x4033c6
  4033d2:	jno    0x403368
  4033d4:	inc    esi
  4033d5:	icebp  
  4033d6:	mov    al,ds:0xb49e239b
  4033db:	rol    DWORD PTR [eax+eax*1],0x6f
  4033df:	loop   0x4033b0
  4033e1:	xor    ebx,ecx
  4033e3:	adc    ebp,DWORD PTR [ebp-0xbc4399a]
  4033e9:	mov    dh,0xae
  4033eb:	in     eax,0xbe
  4033ed:	inc    esp
  4033ee:	popa   
  4033ef:	push   ss
  4033f0:	iret   
  4033f1:	test   eax,0xca663ce6
  4033f6:	(bad)  
  4033f7:	stc    
  4033f8:	pop    esp
  4033f9:	shl    dl,cl
  4033fb:	(bad)  
  4033fc:	mov    eax,0xfb42b2aa
  403401:	sub    eax,DWORD PTR [ebp+0x1ee4398d]
  403407:	jne    0x403485
  403409:	rol    BYTE PTR [edi+0x19],1
  40340c:	mov    BYTE PTR [edx+0x40],dl
  40340f:	cwde   
  403410:	dec    esp
  403411:	sbb    BYTE PTR [edi+0x31],dh
  403414:	sub    al,0xc6
  403416:	or     ebp,DWORD PTR [ebp-0x31]
  403419:	gs popa 
  40341b:	cmp    DWORD PTR [ecx],ecx
  40341d:	sub    BYTE PTR [ebp-0x75],0x59
  403421:	add    bh,BYTE PTR [edx]
  403423:	cmp    ah,BYTE PTR [esi]
  403425:	sbb    BYTE PTR [edi+eax*1],al
  403428:	jnp    0x403495
  40342a:	div    DWORD PTR [ebx+0x7f]
  40342d:	(bad)  
  40342f:	jmp    0xd21ec6ae
  403434:	dec    ecx
  403435:	(bad)  
  403437:	pop    edx
  403438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403439:	or     bl,BYTE PTR [ebx-0x45]
  40343c:	imul   esi,DWORD PTR [ecx-0xbccb224],0xe8082fb7
  403446:	mov    WORD PTR [ebx],fs
  403448:	rcl    DWORD PTR [ebp+0x77],0xdf
  40344c:	pop    edx
  40344d:	in     al,0x5
  40344f:	adc    dh,BYTE PTR [ecx-0x50]
  403452:	mov    ah,0x87
  403454:	xchg   edx,eax
  403455:	mov    eax,DWORD PTR [ebx-0x15]
  403458:	mov    ecx,0x8e38ecf3
  40345d:	mov    ds:0xdabeb607,al
  403462:	jae    0x4034a1
  403464:	cmc    
  403465:	imul   ebp,DWORD PTR [ebp-0x3f549e35],0xffffff91
  40346c:	mov    eax,0x7d33eaf5
  403471:	(bad)  [esi-0x57]
  403474:	sbb    BYTE PTR [esi+edx*4],ah
  403477:	mov    ebx,0xca463715
  40347c:	cdq    
  40347d:	clc    
  40347e:	ret    0x8814
  403481:	inc    eax
  403482:	sbb    DWORD PTR [edi],edi
  403484:	push   ebp
  403485:	xchg   edi,eax
  403486:	mov    DWORD PTR [ecx],ecx
  403488:	leave  
  403489:	jno    0x403454
  40348b:	xlat   BYTE PTR ds:[ebx]
  40348c:	cld    
  40348d:	dec    ebx
  40348e:	shl    BYTE PTR [esi*4-0x7ef2ccd1],cl
  403495:	shl    DWORD PTR [ebp+0x20],cl
  403498:	dec    eax
  403499:	sub    eax,0xebd8b0e6
  40349e:	mov    al,0x4a
  4034a0:	pop    ds
  4034a1:	in     al,dx
  4034a2:	fwait
  4034a3:	in     eax,0x22
  4034a5:	add    al,BYTE PTR [edi+edx*8+0x19ac3869]
  4034ac:	inc    ebx
  4034ad:	scas   eax,DWORD PTR es:[edi]
  4034ae:	aaa    
  4034af:	jb     0x403523
  4034b1:	dec    esi
  4034b2:	jns    0x403477
  4034b4:	ja     0x4034ac
  4034b6:	adc    al,0x70
  4034b8:	and    DWORD PTR [esi],ebx
  4034ba:	out    dx,al
  4034bb:	lds    edx,FWORD PTR [edi]
  4034bd:	jp     0x403527
  4034bf:	in     eax,0xcc
  4034c1:	outs   dx,DWORD PTR ds:[esi]
  4034c2:	dec    ebx
  4034c3:	leave  
  4034c4:	xchg   ebx,eax
  4034c5:	xchg   esi,ebp
  4034c7:	ja     0x4034d2
  4034c9:	dec    ebp
  4034ca:	jg     0x40351a
  4034cc:	into   
  4034cd:	mov    ecx,DWORD PTR [edi+0x1335c127]
  4034d3:	aam    0x1a
  4034d5:	lods   eax,DWORD PTR ds:[esi]
  4034d6:	mov    DWORD PTR ds:0x2fd46ba8,ebx
  4034dc:	fucom  st(2)
  4034de:	and    DWORD PTR [eax],esp
  4034e0:	inc    eax
  4034e1:	or     dh,0x33
  4034e4:	mov    ebp,0x1d6f2c22
  4034e9:	xlat   BYTE PTR ds:[ebx]
  4034ea:	jno    0x4034db
  4034ec:	mov    al,0xb6
  4034ee:	add    eax,0xc7121fab
  4034f3:	fiadd  WORD PTR [ebp+0x4e9f6c57]
  4034f9:	pop    esi
  4034fa:	repz or dh,al
  4034fd:	popa   
  4034fe:	scas   al,BYTE PTR es:[edi]
  4034ff:	and    al,0x8b
  403501:	adc    cl,BYTE PTR [eax+0x4456b48b]
  403507:	mulps  xmm0,xmm7
  40350a:	and    al,0xb
  40350c:	pop    edx
  40350d:	xchg   ebp,eax
  40350e:	outs   dx,DWORD PTR ds:[esi]
  40350f:	cld    
  403510:	mov    ebp,0x8ed29ff9
  403515:	inc    edi
  403516:	adc    edx,0x79
  403519:	fimul  WORD PTR [esi-0x70]
  40351c:	mov    al,0xb
  40351e:	fcomp  st(1)
  403520:	mov    al,0xb8
  403522:	call   DWORD PTR [ecx-0x1303b718]
  403528:	cmp    al,0x8c
  40352a:	inc    ebx
  40352b:	pop    ebx
  40352c:	enter  0xcba2,0xe5
  403530:	out    0xf9,eax
  403532:	imul   edi,DWORD PTR [ecx],0xffffffe6
  403535:	cmp    al,0xdb
  403537:	cmc    
  403538:	fdivr  DWORD PTR [esi+0x4dabe38d]
  40353e:	push   esi
  40353f:	add    al,0x50
  403541:	sub    al,0x85
  403543:	inc    esi
  403544:	pop    edx
  403545:	pop    ecx
  403546:	push   edi
  403547:	mov    dh,0xd4
  403549:	fstp   QWORD PTR [ecx-0x5c]
  40354c:	pop    ss
  40354d:	pop    es
  40354e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40354f:	sti    
  403550:	push   ecx
  403551:	iret   
  403552:	sub    BYTE PTR [ecx+0x19],bl
  403555:	stos   BYTE PTR es:[edi],al
  403556:	or     eax,0x12ef1cc7
  40355b:	jg     0x4035ac
  40355d:	jmp    0xb98b179b
  403562:	sbb    DWORD PTR [eax-0x850941d],ebp
  403568:	mov    ah,0x8a
  40356a:	dec    ecx
  40356b:	mov    edx,0x750c0e60
  403570:	js     0x4035c0
  403572:	sub    ebp,DWORD PTR [ebx]
  403574:	jne    0x403533
  403576:	mov    dl,0xca
  403578:	repnz out 0x66,eax
  40357b:	outs   dx,DWORD PTR ds:[esi]
  40357c:	dec    ebx
  40357d:	xor    al,0xe
  40357f:	mov    al,ds:0x72256298
  403584:	inc    ebx
  403586:	xchg   esi,eax
  403587:	pop    ds
  403588:	repnz mov eax,0xe0f8e43b
  40358e:	jg     0x403556
  403590:	push   ebx
  403591:	xchg   esp,eax
  403592:	inc    ebx
  403593:	das    
  403594:	cmp    al,0x35
  403596:	jecxz  0x4035cd
  403598:	inc    edx
  403599:	dec    eax
  40359a:	cmp    BYTE PTR [eax],0xf4
  40359d:	dec    ecx
  40359e:	popf   
  40359f:	pop    ss
  4035a0:	out    dx,al
  4035a1:	pop    ss
  4035a2:	xor    BYTE PTR [ecx-0x2c],dh
  4035a5:	add    DWORD PTR [ebx+0x46],esp
  4035a8:	lds    edx,FWORD PTR [edi+eax*1]
  4035ab:	jecxz  0x40361f
  4035ad:	dec    edx
  4035ae:	int    0xf6
  4035b0:	inc    edx
  4035b1:	clc    
  4035b2:	ret    
  4035b3:	jmp    0x40357c
  4035b5:	push   edx
  4035b6:	sbb    dh,BYTE PTR [edx+0x7]
  4035b9:	ins    DWORD PTR es:[edi],dx
  4035ba:	pop    es
  4035bb:	jo     0x40357d
  4035bd:	add    eax,ebp
  4035bf:	push   esi
  4035c0:	cmc    
  4035c1:	push   edi
  4035c2:	fsub   DWORD PTR [edi+0x5bed5b99]
  4035c8:	sub    edx,esp
  4035ca:	mov    es,WORD PTR [edx-0x358ba4d5]
  4035d0:	ja     0x403557
  4035d2:	lock retf 0x6d15
  4035d6:	stc    
  4035d7:	and    BYTE PTR [edi],bh
  4035d9:	add    al,0xa
  4035db:	ret    0x30a4
  4035de:	fwait
  4035df:	adc    esp,DWORD PTR [ebp+0x1a85265]
  4035e5:	fdivr  st,st(0)
  4035e7:	xor    ebp,DWORD PTR ds:0x159b8d3
  4035ed:	jns    0x403618
  4035ef:	in     eax,0x35
  4035f1:	mov    cl,0x2c
  4035f3:	mov    eax,0xf6c0893
  4035f8:	add    ecx,edi
  4035fa:	cmp    dl,ch
  4035fc:	pop    ds
  4035fd:	int3   
  4035fe:	jl     0x403628
  403600:	call   0xd48f:0x28403d80
  403607:	or     BYTE PTR [edx+eax*8-0x7240ec6f],dh
  40360e:	cmp    eax,0x6866e790
  403613:	adc    BYTE PTR [esi-0x43],0xac
  403617:	icebp  
  403618:	imul   esi,DWORD PTR [edx-0x4d],0xae885dd1
  40361f:	mov    edx,0xeead961d
  403624:	jae    0x4035df
  403626:	xor    DWORD PTR [edx],edx
  403628:	enter  0xe131,0xcd
  40362c:	mov    fs,WORD PTR [edi+0x7b]
  40362f:	(bad)  
  403630:	repz pop ss
  403632:	int    0x35
  403634:	loopne 0x40366c
  403636:	and    BYTE PTR [eax+0x74f33c1e],0x25
  40363d:	stos   DWORD PTR es:[edi],eax
  40363e:	hlt    
  40363f:	ins    BYTE PTR es:[edi],dx
  403640:	(bad)  
  403641:	push   ebx
  403642:	xor    BYTE PTR [esp+eax*2-0x53d8ec6d],0x20
  40364a:	fmul   QWORD PTR [esi]
  40364c:	scas   al,BYTE PTR es:[edi]
  40364d:	or     eax,0xf2f4a061
  403652:	or     DWORD PTR [ebx],edx
  403654:	jmp    0xfe2c:0xe83b6ebd
  40365b:	out    dx,eax
  40365c:	pusha  
  40365d:	cmp    edi,DWORD PTR [ebp-0x2ae3254d]
  403663:	mov    al,0x4e
  403665:	ror    BYTE PTR [edi-0x34daf72b],cl
  40366b:	jge    0x403666
  40366d:	popa   
  40366e:	fwait
  40366f:	add    BYTE PTR [edx+0x5b2db071],al
  403675:	mov    dl,BYTE PTR [edx]
  403677:	scas   eax,DWORD PTR es:[edi]
  403678:	mov    ch,0x4f
  40367b:	fmulp  st(3),st
  40367d:	jb     0x4036cb
  40367f:	inc    edi
  403680:	mov    dl,0x54
  403682:	fs fs jb 0x4036df
  403686:	je     0x4036e7
  403688:	arpl   cx,sp
  40368a:	or     BYTE PTR [ecx-0x4f020a41],al
  403690:	adc    ah,BYTE PTR [edi]
  403692:	inc    esp
  403693:	jne    0x4036fb
  403695:	xlat   BYTE PTR ds:[ebx]
  403696:	add    eax,0xa6d2087
  40369b:	inc    ecx
  40369c:	xchg   edx,eax
  40369d:	sbb    eax,0xe7ed8861
  4036a2:	loope  0x4036c8
  4036a4:	pop    esi
  4036a5:	in     al,dx
  4036a6:	outs   dx,BYTE PTR ds:[esi]
  4036a7:	jno    0x40369d
  4036a9:	jbe    0x4036fd
  4036ab:	jb     0x403685
  4036ad:	sbb    ecx,DWORD PTR [eax+0x2af85be9]
  4036b3:	das    
  4036b4:	pusha  
  4036b5:	or     eax,0x27ec25c5
  4036ba:	jle    0x40369f
  4036bc:	pushf  
  4036bd:	sub    eax,0xced0363c
  4036c2:	jle    0x40373b
  4036c4:	mov    esi,0x5060609e
  4036c9:	adc    eax,0x8447e4ed
  4036ce:	mov    al,0xd
  4036d0:	daa    
  4036d1:	into   
  4036d2:	test   eax,0x376b6405
  4036d7:	and    edi,DWORD PTR [ebp-0x35cd1761]
  4036dd:	jge    0x403692
  4036df:	out    0x33,eax
  4036e1:	mov    DWORD PTR [esi+0x21],edi
  4036e4:	addr16 and al,0x3d
  4036e7:	jge    0x40374a
  4036e9:	xor    BYTE PTR [esi-0x45004195],0x7c
  4036f0:	nop    DWORD PTR [edi-0x50c73fdb]
  4036f7:	popa   
  4036f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f9:	outs   dx,BYTE PTR ds:[esi]
  4036fa:	pop    es
  4036fb:	in     eax,0xf2
  4036fd:	pop    edi
  4036fe:	inc    ecx
  4036ff:	mov    bh,0x0
  403701:	xor    BYTE PTR gs:[esi-0x2b],dl
  403705:	xchg   BYTE PTR [edx-0x30890775],bl
  40370b:	cdq    
  40370c:	inc    ecx
  40370d:	int    0xb2
  40370f:	test   eax,0x6c477cee
  403714:	daa    
  403715:	lds    eax,FWORD PTR [ecx-0x524086d3]
  40371b:	cmp    DWORD PTR ds:0x90f1fa93,ecx
  403721:	popa   
  403722:	std    
  403723:	shl    ch,cl
  403725:	js     0x403730
  403727:	adc    BYTE PTR [edx+ecx*1],dl
  40372a:	data16 jle 0x4036b6
  40372d:	xor    dl,BYTE PTR [edx+0x5f060a25]
  403733:	mov    dl,0xf0
  403735:	out    dx,al
  403736:	jae    0x403781
  403738:	not    BYTE PTR [ebp+0x91066af]
  40373e:	mov    bl,0x7c
  403740:	cmp    BYTE PTR [edx+0x43],al
  403743:	sbb    ch,BYTE PTR [esi]
  403745:	(bad)  
  403747:	cmp    DWORD PTR [eax-0x7b],edi
  40374a:	jnp    0x4036ce
  40374c:	imul   BYTE PTR [esi]
  40374e:	fld    st(5)
  403750:	icebp  
  403751:	mov    esp,0x8d45f402
  403756:	sbb    DWORD PTR [ebx-0x5b83db13],ebp
  40375c:	stos   DWORD PTR es:[edi],eax
  40375d:	or     eax,0x75c4df95
  403762:	imul   esp,DWORD PTR [edx+0x468b612],0x2c
  403769:	jle    0x403712
  40376b:	xchg   esp,eax
  40376c:	iret   
  40376d:	push   ds
  40376e:	pusha  
  40376f:	ret    0xeb3a
  403772:	fdivr  QWORD PTR [edx+0x14fae1e1]
  403778:	lds    esi,FWORD PTR [eax-0x76a76df7]
  40377e:	push   ecx
  40377f:	mov    ecx,0xd15d97cc
  403784:	scas   al,BYTE PTR es:[edi]
  403785:	iret   
  403786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403787:	scas   eax,DWORD PTR es:[edi]
  403788:	jle    0x40376b
  40378a:	jmp    0x40378b
  40378c:	jmp    0x85bce28e
  403791:	fcomi  st,st(7)
  403793:	cdq    
  403794:	and    al,0xa2
  403796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403797:	xor    cl,BYTE PTR [esi*4+0x477eedcb]
  40379e:	cdq    
  40379f:	fsubr  QWORD PTR [edx]
  4037a1:	ret    
  4037a2:	and    al,0xb6
  4037a4:	test   eax,eax
  4037a6:	or     al,0xc8
  4037a8:	push   esi
  4037a9:	sbb    BYTE PTR [ebx+0x6d],bl
  4037ac:	out    0x39,eax
  4037ae:	xchg   ebp,eax
  4037af:	xchg   edx,eax
  4037b0:	(bad)  
  4037b2:	mov    esi,0x8718d8bc
  4037b7:	sub    BYTE PTR [edx],al
  4037b9:	or     ah,ch
  4037bb:	stos   BYTE PTR es:[edi],al
  4037bc:	mov    cl,0x2b
  4037be:	icebp  
  4037bf:	ret    
  4037c0:	jl     0x40380e
  4037c2:	fs rol ebp,cl
  4037c5:	pop    edx
  4037c6:	jmp    0x4037f4
  4037c8:	(bad)  
  4037c9:	and    DWORD PTR [edx-0x72],esp
  4037cc:	mov    ah,0xc5
  4037ce:	jnp    0x4037d2
  4037d0:	and    DWORD PTR [ebx-0x32],edi
  4037d3:	sub    BYTE PTR [ecx+0x7d859aeb],al
  4037d9:	stos   DWORD PTR es:[edi],eax
  4037da:	scas   al,BYTE PTR es:[edi]
  4037db:	pushf  
  4037dc:	push   ebx
  4037dd:	mov    bh,0xd3
  4037df:	mov    esp,0xb0de48b9
  4037e4:	inc    eax
  4037e5:	call   0x71642624
  4037ea:	pop    es
  4037eb:	outs   dx,DWORD PTR ds:[esi]
  4037ec:	je     0x40383f
  4037ee:	into   
  4037ef:	jp     0x40384a
  4037f1:	mov    ebx,0x388b45a
  4037f6:	sbb    edi,DWORD PTR [ebp+edx*2+0x6db1381]
  4037fd:	sub    eax,0xf0c124eb
  403802:	xor    al,0x9
  403804:	mov    al,ds:0xddfeae79
  403809:	in     eax,0x66
  40380b:	sbb    al,0xd
  40380d:	jns    0x40387d
  40380f:	jns    0x403884
  403811:	mov    ah,0x3a
  403813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403814:	call   0x9512:0xba803416
  40381b:	in     al,0x24
  40381d:	and    ecx,DWORD PTR [edx+0x2c94f94d]
  403823:	std    
  403824:	pop    eax
  403825:	lea    ebx,[ecx]
  403827:	xchg   BYTE PTR [edi-0x1],ch
  40382a:	sub    edi,DWORD PTR [esi-0x69f3daa8]
  403830:	jo     0x403898
  403832:	mov    edx,0x3a867655
  403837:	bound  ebp,QWORD PTR [ebp+0x1e6d386b]
  40383d:	ins    DWORD PTR es:[edi],dx
  40383e:	xor    edi,edi
  403840:	add    eax,0x9f0285f0
  403845:	shr    edi,0x13
  403848:	or     ebx,DWORD PTR [ebp+0x5f08bd53]
  40384e:	mov    bh,0x77
  403850:	add    al,0x66
  403852:	imul   ecx,DWORD PTR [ebx-0x146a2d21],0x3a
  403859:	int    0x6d
  40385b:	out    dx,eax
  40385c:	xor    ebp,DWORD PTR [edx-0x13]
  40385f:	mov    al,ds:0xc756c327
  403864:	enter  0x822,0x78
  403868:	inc    edi
  403869:	scas   al,BYTE PTR es:[edi]
  40386a:	mov    BYTE PTR [ebx+ebp*1+0x2d],dl
  40386e:	sub    eax,0x878fcc4a
  403873:	and    DWORD PTR [edx+0x38871f5],edx
  403879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40387a:	sub    al,0x2
  40387c:	imul   esi,DWORD PTR [ecx-0x21],0xffffff9f
  403880:	add    esi,eax
  403882:	and    DWORD PTR [eax],esp
  403884:	daa    
  403885:	jbe    0x403825
  403887:	cmp    dl,ah
  403889:	loop   0x40388a
  40388b:	scas   al,BYTE PTR es:[edi]
  40388c:	cmp    cl,BYTE PTR [ecx-0x3c]
  40388f:	inc    ebp
  403890:	cmp    DWORD PTR [ecx-0x711b24c6],ebx
  403896:	inc    esi
  403897:	ja     0x403870
  403899:	bound  ebp,QWORD PTR [ecx]
  40389b:	sub    ebx,DWORD PTR [ecx]
  40389d:	mov    esi,0x99963a7e
  4038a2:	lahf   
  4038a3:	pop    edi
  4038a4:	lea    ebx,[ebp-0x3a25cd81]
  4038aa:	ret    
  4038ab:	add    BYTE PTR [ebp+0x3f],bh
  4038ae:	lock push ebp
  4038b0:	mov    ecx,0xdecf5fd3
  4038b5:	mov    eax,ds:0xdd5e1e5d
  4038ba:	add    ebx,ebp
  4038bc:	push   edx
  4038bd:	std    
  4038be:	cld    
  4038bf:	lahf   
  4038c0:	adc    eax,0x272d8aa5
  4038c5:	icebp  
  4038c6:	lods   al,BYTE PTR ds:[esi]
  4038c7:	(bad)  
  4038c8:	cmc    
  4038c9:	aaa    
  4038ca:	push   cs
  4038cb:	adc    DWORD PTR [edi-0x56],ecx
  4038ce:	adc    eax,0x69c7a529
  4038d3:	enter  0x5e8d,0xe8
  4038d7:	xchg   ecx,eax
  4038d8:	div    DWORD PTR [edi+esi*1+0x71cf4b53]
  4038df:	fild   WORD PTR [eax+ebx*8+0x3a92f5ed]
  4038e6:	xchg   esp,eax
  4038e7:	xor    edx,0xfffffff3
  4038ea:	adc    BYTE PTR [esi+0x2cd1f7a8],ah
  4038f0:	mov    DWORD PTR [ebx],ebx
  4038f2:	test   DWORD PTR [ebx],esi
  4038f4:	pop    edx
  4038f5:	ror    esi,cl
  4038f7:	cmp    BYTE PTR [esi],bh
  4038f9:	mov    eax,0x4e7e505a
  4038fe:	jb     0x4038a0
  403900:	scas   al,BYTE PTR es:[edi]
  403901:	xlat   BYTE PTR ds:[ebx]
  403902:	lods   al,BYTE PTR ds:[esi]
  403903:	sti    
  403904:	jno    0x4038b5
  403906:	mov    DWORD PTR [ebp+0x250353f5],0x82045b0d
  403910:	sub    bh,BYTE PTR [eax+0x53]
  403913:	sub    ch,BYTE PTR [esp+0xb]
  403917:	inc    esi
  403918:	stc    
  403919:	std    
  40391a:	fbld   TBYTE PTR [ebp-0x692045f9]
  403920:	in     eax,dx
  403921:	push   edx
  403922:	mov    dl,0x6b
  403924:	icebp  
  403925:	sahf   
  403926:	neg    BYTE PTR [esi]
  403928:	jne    0x4038b6
  40392a:	or     edx,edx
  40392c:	outs   dx,BYTE PTR ds:[esi]
  40392d:	add    eax,0x57fb2329
  403932:	lea    ecx,[eax+ebp*2+0x6a]
  403936:	or     al,0x95
  403938:	cmp    dl,bh
  40393a:	cmp    DWORD PTR [ebp+0x19],ebp
  40393d:	cld    
  40393e:	push   ss
  40393f:	shr    BYTE PTR [eax+ecx*1+0x67],cl
  403943:	cmp    DWORD PTR fs:[edi],esi
  403946:	push   ecx
  403947:	sub    DWORD PTR [esi*8+0x141e8dcf],edi
  40394e:	lods   al,BYTE PTR ds:[esi]
  40394f:	loop   0x403929
  403951:	(bad)  
  403952:	fisub  DWORD PTR [ebx+eiz*8+0x3c]
  403956:	inc    edx
  403957:	lock and bh,al
  40395a:	fistp  WORD PTR [eax]
  40395c:	hlt    
  40395d:	xchg   edx,eax
  40395e:	hlt    
  40395f:	das    
  403960:	push   ecx
  403961:	mov    WORD PTR [eax],es
  403963:	pop    esi
  403964:	pop    eax
  403965:	(bad)  
  403966:	xchg   esi,eax
  403967:	(bad)  
  403968:	ss std 
  40396a:	xchg   DWORD PTR [ecx+eax*1+0x38eba3c1],edi
  403971:	and    al,0x5f
  403973:	ins    BYTE PTR es:[edi],dx
  403974:	dec    esi
  403975:	adc    BYTE PTR [ecx*2-0x1387cc95],dh
  40397c:	arpl   WORD PTR ds:0xb70fbb44,bx
  403982:	cmpxchg DWORD PTR [edx+0x7eaa57b4],edx
  403989:	lahf   
  40398a:	aaa    
  40398b:	daa    
  40398c:	(bad)  
  40398d:	sbb    dl,BYTE PTR [edi]
  40398f:	sbb    DWORD PTR [edx+ecx*1],esp
  403992:	or     DWORD PTR [edi],ebp
  403994:	aas    
  403995:	pop    eax
  403996:	push   0xffffffbe
  403998:	lahf   
  403999:	mov    ch,0x43
  40399b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40399c:	inc    eax
  40399d:	mov    eax,0xa5432af8
  4039a2:	fs addr16 xor eax,0x48999f8c
  4039a9:	fcomp  QWORD PTR [esi]
  4039ab:	and    dl,BYTE PTR [eax-0x3d]
  4039ae:	das    
  4039af:	out    dx,al
  4039b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039b1:	mov    bh,0xb1
  4039b3:	(bad)  
  4039b4:	jp     0x40396e
  4039b6:	mov    al,0x2
  4039b8:	or     ebp,DWORD PTR ds:0xfb30e871
  4039be:	jno    0x4039a1
  4039c0:	fptan  
  4039c2:	in     eax,dx
  4039c3:	push   ds
  4039c4:	lods   eax,DWORD PTR ds:[esi]
  4039c5:	xchg   esi,eax
  4039c6:	mov    dh,0xb6
  4039c8:	fidiv  WORD PTR [ecx]
  4039ca:	mov    cl,0x14
  4039cc:	ins    DWORD PTR es:[edi],dx
  4039cd:	mov    ds:0x20379dd2,al
  4039d2:	mov    al,ds:0x79a08072
  4039d7:	inc    eax
  4039d8:	adc    ebp,DWORD PTR gs:[edx+0x77]
  4039dc:	into   
  4039dd:	lock dec esp
  4039df:	out    0x8,eax
  4039e1:	cmc    
  4039e2:	cmp    DWORD PTR [esp+eax*1],esi
  4039e5:	mov    ds:0xa1c4b66e,al
  4039ea:	sub    ebx,esp
  4039ec:	and    al,0x64
  4039ee:	mov    BYTE PTR [eax],dh
  4039f0:	mov    ds:0xd3d14490,al
  4039f5:	int    0x52
  4039f7:	xchg   esi,eax
  4039f8:	push   ds
  4039f9:	fwait
  4039fa:	je     0x4039c8
  4039fc:	add    BYTE PTR [esi-0x3400325e],0x58
  403a03:	or     eax,0xec52bf81
  403a08:	call   0xc53ebd6f
  403a0d:	clc    
  403a0e:	(bad)  
  403a10:	ror    BYTE PTR [eax+0x4e],0xe
  403a14:	test   DWORD PTR [esi-0x6f],esi
  403a17:	outs   dx,BYTE PTR ds:[esi]
  403a18:	jae    0x403a65
  403a1a:	sbb    eax,0xaabd66e2
  403a1f:	adc    al,0xdb
  403a21:	sub    bl,BYTE PTR [ecx+0x8]
  403a24:	cs inc ebp
  403a26:	outs   dx,BYTE PTR ds:[esi]
  403a27:	xor    eax,0xb79c69f8
  403a2c:	aam    0x86
  403a2e:	pop    edi
  403a2f:	add    ch,BYTE PTR [esi+ebp*2+0x7a5c938e]
  403a36:	inc    edi
  403a37:	es mov ebx,0x46868579
  403a3d:	sbb    BYTE PTR [ecx+0x767bcdb0],bl
  403a43:	ins    DWORD PTR es:[edi],dx
  403a44:	cmp    al,BYTE PTR [ecx+0x33]
  403a47:	lds    esp,FWORD PTR [esi*1-0x17516855]
  403a4e:	push   ds
  403a4f:	or     ebx,DWORD PTR [ebp-0x48fa8bf7]
  403a55:	cmp    edx,edx
  403a57:	inc    eax
  403a58:	loopne 0x403a61
  403a5a:	(bad)  
  403a5b:	push   es
  403a5c:	sahf   
  403a5d:	xor    ebx,ebx
  403a5f:	sub    cl,ch
  403a61:	add    ebx,DWORD PTR gs:[edi+0x42]
  403a65:	daa    
  403a66:	cmp    eax,0x4e7624b9
  403a6b:	fisub  WORD PTR [eax-0x34]
  403a6e:	out    dx,al
  403a6f:	add    dl,bh
  403a71:	xor    al,0xab
  403a73:	cdq    
  403a74:	jg     0x403a25
  403a76:	mov    ebp,0xd472ea7a
  403a7b:	push   ebp
  403a7c:	in     al,dx
  403a7d:	mov    ebx,0x74621863
  403a82:	dec    ebp
  403a83:	data16 es loope 0x403af3
  403a87:	adc    BYTE PTR [ebx+0x3b],0xf6
  403a8b:	mov    al,ds:0x4306e205
  403a90:	in     eax,dx
  403a91:	fild   QWORD PTR [edx]
  403a93:	xchg   esp,eax
  403a94:	inc    eax
  403a95:	xor    al,0xef
  403a97:	cld    
  403a98:	and    eax,esp
  403a9a:	inc    ebp
  403a9b:	test   eax,0x1778c91c
  403aa0:	xor    eax,0x65eb9ed6
  403aa5:	iret   
  403aa6:	fdivp  st(3),st
  403aa8:	outs   dx,BYTE PTR ds:[esi]
  403aa9:	stc    
  403aaa:	push   edx
  403aab:	std    
  403aac:	ds (bad) 
  403aae:	gs cli 
  403ab0:	pop    esp
  403ab1:	add    eax,0x5c574466
  403ab6:	mov    al,cl
  403ab8:	push   ecx
  403ab9:	pop    ecx
  403aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403abb:	mov    esi,DWORD PTR [eax-0x11be122e]
  403ac1:	test   BYTE PTR [ebx+0x797677ab],ah
  403ac7:	sub    ch,BYTE PTR [ecx-0xf]
  403aca:	xor    edi,esp
  403acc:	mov    esp,0x7fd33e4e
  403ad1:	adc    BYTE PTR [esp+ebp*8],al
  403ad4:	push   esi
  403ad5:	sbb    BYTE PTR [edx-0x34],bl
  403ad8:	retf   0xd535
  403adb:	dec    BYTE PTR [edx+0x308ff917]
  403ae1:	jbe    0x403b3d
  403ae3:	pushf  
  403ae4:	js     0x403aea
  403ae6:	jle    0x403b08
  403ae8:	jne    0x403af7
  403aea:	cmp    DWORD PTR [esi],ebx
  403aec:	push   edi
  403aed:	js     0x403b00
  403aef:	jp     0x403b1b
  403af1:	pop    edi
  403af2:	popf   
  403af3:	in     al,0x8d
  403af5:	xor    al,0xf2
  403af7:	sti    
  403af8:	pop    DWORD PTR [esi+eax*1]
  403afb:	aad    0x9
  403afd:	in     al,0x3d
  403aff:	sub    DWORD PTR [ebp-0xd],edi
  403b02:	cmp    al,0x47
  403b04:	mov    edi,0xced03189
  403b09:	xor    DWORD PTR [esi-0x2a],eax
  403b0c:	fimul  DWORD PTR [ebx-0x67]
  403b0f:	cmp    al,0xef
  403b11:	loop   0x403abf
  403b13:	fsin   
  403b15:	cld    
  403b16:	fstp   DWORD PTR [esp+edx*8+0xbc981d9]
  403b1d:	dec    edi
  403b1e:	adc    dh,BYTE PTR [edx]
  403b20:	cdq    
  403b21:	inc    ecx
  403b22:	push   0x688d5dfb
  403b27:	int    0xc6
  403b29:	dec    ebx
  403b2a:	xor    dl,bl
  403b2c:	sbb    DWORD PTR [eax],ecx
  403b2e:	jb     0x403af3
  403b30:	xor    BYTE PTR [ecx-0x5a913904],cl
  403b36:	push   ds
  403b37:	mov    bh,BYTE PTR [ebp-0x74]
  403b3a:	push   esp
  403b3b:	add    al,0x1a
  403b3d:	js     0x403b74
  403b3f:	inc    ecx
  403b40:	jae    0x403b1a
  403b42:	ror    DWORD PTR [ebx+0x50],0xc3
  403b46:	push   0x4d754fb7
  403b4b:	shl    esp,cl
  403b4d:	mov    fs,WORD PTR ds:0x8b52c302
  403b53:	fdivr  DWORD PTR [eax+esi*8-0xb]
  403b57:	push   edi
  403b58:	lock xor al,0xd
  403b5b:	lock into 
  403b5d:	popf   
  403b5e:	test   eax,0x6166e1ab
  403b63:	xor    al,0xa0
  403b65:	mov    esi,0x96624d2
  403b6a:	mul    edx
  403b6c:	adc    eax,0x627d20f7
  403b71:	fsubr  QWORD PTR [ebx+0x2622bbe9]
  403b77:	out    0x82,eax
  403b79:	mov    al,bl
  403b7b:	and    al,0x54
  403b7d:	and    DWORD PTR [edx+eiz*1],0xdfbba9e5
  403b84:	dec    edx
  403b85:	imul   ebp,DWORD PTR [ecx+edx*4],0xa80501ad
  403b8c:	push   ds
  403b8d:	cdq    
  403b8e:	mov    eax,ds:0x5cb0fa9c
  403b93:	jle    0x403b42
  403b95:	popf   
  403b96:	cmp    DWORD PTR [esi+0x7673d5d9],ebp
  403b9c:	fst    QWORD PTR [ebx-0x47871113]
  403ba2:	push   esi
  403ba3:	xchg   ebx,eax
  403ba4:	icebp  
  403ba5:	sub    al,0x3a
  403ba7:	out    dx,al
  403ba8:	or     DWORD PTR [eax],esi
  403baa:	iret   
  403bab:	jno    0x403b5e
  403bad:	ins    BYTE PTR es:[edi],dx
  403bae:	sbb    eax,0x2638b9b
  403bb3:	sub    DWORD PTR [esi],ebp
  403bb5:	outs   dx,DWORD PTR ds:[esi]
  403bb6:	and    ebp,esi
  403bb8:	cmp    WORD PTR [ebx+edx*1-0x14db3312],di
  403bc0:	fwait
  403bc1:	xchg   BYTE PTR [esi],bh
  403bc3:	add    BYTE PTR [edi+0x5e6fc656],dl
  403bc9:	sahf   
  403bca:	mov    WORD PTR [eax-0xdfa1c75],ss
  403bd0:	xchg   ecx,eax
  403bd1:	mov    cl,0x4e
  403bd3:	jmp    0x247b:0x303b250c
  403bda:	ret    
  403bdb:	pop    eax
  403bdc:	xchg   ecx,eax
  403bdd:	push   esp
  403bde:	mov    al,ds:0x1a21ea24
  403be3:	std    
  403be4:	mov    dl,BYTE PTR [ebx]
  403be6:	outs   dx,BYTE PTR ds:[esi]
  403be7:	xor    dl,bh
  403be9:	xchg   esp,eax
  403bea:	call   0xa33f:0x6f4531f6
  403bf1:	mov    esi,0xadaeeb91
  403bf6:	popa   
  403bf7:	xor    ebp,esp
  403bf9:	xor    cl,bh
  403bfb:	xor    ebx,ebx
  403bfd:	faddp  st(6),st
  403bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c00:	loopne 0x403c01
  403c02:	xchg   edi,eax
  403c03:	mov    ch,0x63
  403c05:	mov    esi,0x6cdbbf6c
  403c0a:	xor    BYTE PTR [edi+ebx*2-0x10],0x96
  403c0f:	push   0x128cf8c4
  403c14:	sub    eax,0x2f47a655
  403c19:	add    ah,BYTE PTR [esi+ecx*1]
  403c1c:	das    
  403c1d:	test   eax,0x2a5b5b80
  403c22:	adc    eax,0xeed0a480
  403c27:	loopne 0x403bec
  403c29:	fstp   TBYTE PTR [eax]
  403c2b:	out    dx,al
  403c2c:	xchg   esi,eax
  403c2d:	jp     0x403c26
  403c2f:	inc    DWORD PTR [ebp+0x44405db3]
  403c35:	mov    al,ds:0x7d3622a6
  403c3a:	jo     0x403c3e
  403c3c:	sub    eax,0x4106a970
  403c41:	pop    ecx
  403c42:	scas   al,BYTE PTR es:[edi]
  403c43:	pop    esp
  403c44:	mov    ebp,0x3d8236b
  403c49:	dec    edx
  403c4a:	cmp    BYTE PTR ds:0xfd164c2a,al
  403c50:	jbe    0x403ca3
  403c52:	add    ah,ah
  403c54:	loop   0x403c59
  403c56:	fistp  QWORD PTR [ebp+0x24439979]
  403c5c:	clc    
  403c5d:	repnz dec esp
  403c5f:	xor    BYTE PTR [ebx],dl
  403c61:	cld    
  403c62:	jecxz  0x403c1d
  403c64:	in     eax,0x22
  403c66:	jmp    0x302dd8a6
  403c6b:	mov    al,ds:0x4feeb1f4
  403c70:	arpl   WORD PTR [edi],ax
  403c72:	addr16 out dx,al
  403c74:	and    eax,0x87a568b7
  403c79:	pandn  mm7,QWORD PTR [ebp+eiz*1+0x796cfac7]
  403c81:	arpl   bp,cx
  403c83:	xor    eax,0xc9f95541
  403c88:	jg     0x403d06
  403c8a:	ds push ecx
  403c8c:	ss out dx,eax
  403c8e:	imul   edi,DWORD PTR [ecx+eiz*8],0xc5e6845
  403c95:	cmp    BYTE PTR [ecx],ch
  403c97:	dec    edi
  403c98:	data16 daa 
  403c9a:	ror    DWORD PTR [edx-0x4a],1
  403c9d:	lods   eax,DWORD PTR ds:[esi]
  403c9e:	mov    dh,0xe3
  403ca0:	test   BYTE PTR [ebp+0x3f],dl
  403ca3:	ja     0x403c57
  403ca5:	dec    ebx
  403ca6:	repz out dx,al
  403ca8:	mov    esp,0x92b3c7d6
  403cad:	neg    BYTE PTR [esi+0x69]
  403cb0:	xchg   esp,eax
  403cb1:	mov    eax,0xf1c00a2f
  403cb6:	or     ah,BYTE PTR [ebx]
  403cb8:	fistp  DWORD PTR [ecx+0x32b83e13]
  403cbe:	mov    ecx,0xd000d084
  403cc3:	xor    ch,BYTE PTR [eax-0xc67684f]
  403cc9:	push   ss
  403cca:	das    
  403ccb:	xchg   edx,eax
  403ccc:	ret    
  403ccd:	or     al,0x69
  403ccf:	aad    0xb6
  403cd1:	pop    eax
  403cd2:	div    DWORD PTR [ebx-0xb1e5a81]
  403cd8:	xchg   ecx,eax
  403cd9:	jmp    0x85a1:0xc9085426
  403ce0:	fiadd  WORD PTR [eax]
  403ce2:	pop    ebx
  403ce3:	cmp    DWORD PTR es:[edi+0x33],esp
  403ce7:	push   0x77
  403ce9:	lods   eax,DWORD PTR ds:[esi]
  403cea:	dec    esp
  403ceb:	xor    bh,BYTE PTR [eax]
  403ced:	add    BYTE PTR [edx+ecx*1-0x29],al
  403cf1:	sbb    al,0x3e
  403cf3:	adc    cl,BYTE PTR [esp+ebx*8-0x24]
  403cf7:	pusha  
  403cf8:	fisub  DWORD PTR [esi-0x45]
  403cfb:	popa   
  403cfc:	aam    0xf3
  403cfe:	add    eax,0x56528b58
  403d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d04:	outs   dx,DWORD PTR ds:[esi]
  403d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d06:	sub    BYTE PTR [edi],ch
  403d08:	mov    edi,0x8ae3c9e6
  403d0d:	out    0x97,eax
  403d0f:	in     al,0xe9
  403d11:	fdiv   st,st(5)
  403d13:	mov    ch,0x2b
  403d15:	dec    ecx
  403d16:	pop    ss
  403d17:	push   edx
  403d18:	popa   
  403d19:	cld    
  403d1a:	or     eax,0xd16d4dc8
  403d1f:	retf   
  403d20:	push   esp
  403d21:	jl     0x403d01
  403d23:	ret    0x90a8
  403d26:	mov    bl,0x24
  403d28:	pop    ebp
  403d29:	adc    eax,0x30df495
  403d2e:	loope  0x403cff
  403d30:	cmp    ecx,eax
  403d32:	mov    esp,DWORD PTR [ebx+0x8]
  403d35:	add    eax,0xcf8688f1
  403d3a:	fcom   st(7)
  403d3c:	clc    
  403d3d:	dec    esi
  403d3e:	call   0xaaf407e6
  403d43:	mov    al,0x43
  403d45:	jge    0x403dbd
  403d47:	test   eax,0x5be2b6ca
  403d4c:	sar    DWORD PTR [ebx+0x669a5122],0xea
  403d53:	out    dx,al
  403d54:	adc    esi,DWORD PTR [eax-0x1bcb5918]
  403d5a:	int3   
  403d5b:	xor    ecx,edx
  403d5d:	mov    esp,0xb3bcb7c5
  403d62:	shl    DWORD PTR [edi+0x27],0xbc
  403d66:	and    al,0xb6
  403d68:	test   DWORD PTR [ecx],ebx
  403d6a:	adc    BYTE PTR [esi-0x43ff3356],0x17
  403d71:	int3   
  403d72:	nop
  403d73:	sbb    edx,DWORD PTR [ebp+0x3e]
  403d76:	out    dx,al
  403d77:	inc    edx
  403d78:	and    BYTE PTR [eax+0x6ac36546],0x88
  403d7f:	or     eax,DWORD PTR [ebx-0x2b]
  403d82:	(bad)
  403d87:	outs   dx,DWORD PTR ds:[esi]
  403d88:	push   ds
  403d89:	xor    dl,BYTE PTR [edi+eiz*8+0xa]
  403d8d:	xor    BYTE PTR [edi],0x2a
  403d90:	test   DWORD PTR [esi],edi
  403d92:	xchg   ecx,eax
  403d93:	cmp    bh,BYTE PTR [esi+0x5a05f0c4]
  403d99:	add    DWORD PTR [esi-0x1a658bae],ebp
  403d9f:	adc    ebp,edi
  403da1:	mov    dl,0xfa
  403da3:	mov    ds:0xbf907053,eax
  403da8:	add    al,0x5c
  403daa:	iret   
  403dab:	std    
  403dac:	mov    bh,0xea
  403dae:	dec    edx
  403daf:	or     dh,ch
  403db1:	pop    esi
  403db2:	jns    0x403e11
  403db4:	out    dx,al
  403db5:	sti    
  403db6:	sub    al,0x55
  403db8:	pushf  
  403db9:	pop    esp
  403dba:	in     eax,dx
  403dbb:	dec    DWORD PTR [eax+eiz*2]
  403dbe:	mov    WORD PTR [eax],gs
  403dc0:	pop    ss
  403dc1:	push   esp
  403dc2:	dec    edi
  403dc3:	fst    QWORD PTR [edx+0x27ba322b]
  403dc9:	cmp    DWORD PTR ss:[edx-0x43],edx
  403dcd:	cmp    eax,0xfa17d8de
  403dd2:	aad    0x96
  403dd4:	sub    DWORD PTR [ebx],esi
  403dd6:	in     eax,dx
  403dd7:	shl    DWORD PTR [ecx+0x1652d3bc],0x3d
  403dde:	sub    DWORD PTR [edi+ebx*8-0x6d4da750],eax
  403de5:	sbb    edx,DWORD PTR [eax-0x5f]
  403de8:	pop    esi
  403de9:	pusha  
  403dea:	mov    ah,0x88
  403dec:	ret    
  403ded:	mov    ds:0xa5a5ac34,eax
  403df2:	mov    cl,0x5e
  403df4:	ja     0x403d8c
  403df6:	sbb    ebp,DWORD PTR [edx]
  403df8:	push   eax
  403df9:	push   esi
  403dfa:	ja     0x403db1
  403dfc:	dec    ecx
  403dfd:	div    DWORD PTR [edx-0x2e7c9bdf]
  403e03:	dec    edi
  403e04:	imul   ebx,DWORD PTR [ecx*2-0x5cb1c285],0xc4651731
  403e0f:	daa    
  403e10:	jmp    0x49ada410
  403e15:	mov    edi,0x41a38700
  403e1a:	or     bl,BYTE PTR [ecx-0x50930396]
  403e20:	aad    0x7d
  403e22:	lods   al,BYTE PTR ds:[esi]
  403e23:	jae    0x403e36
  403e25:	icebp  
  403e26:	pop    ebp
  403e27:	test   eax,0xacc38081
  403e2c:	aam    0xaa
  403e2e:	out    dx,al
  403e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e30:	popa   
  403e31:	(bad)  
  403e32:	stos   DWORD PTR es:[edi],eax
  403e33:	pcmpeqb mm1,QWORD PTR [ebx-0x20]
  403e37:	push   cs
  403e38:	jns    0x403e69
  403e3a:	mov    bh,0x8c
  403e3c:	jb     0x403e85
  403e3e:	adc    eax,0xc66ee5ca
  403e43:	cld    
  403e44:	pop    ebx
  403e45:	aam    0x1d
  403e47:	shl    DWORD PTR [esi+0x6c277dec],0x6e
  403e4e:	mov    esi,0x3f996f0f
  403e53:	pop    eax
  403e54:	in     eax,0xf7
  403e56:	cmp    al,cl
  403e58:	cmp    BYTE PTR [edi+0x6dc1d86e],0x83
  403e5f:	mov    WORD PTR [ebp-0x4a],ss
  403e62:	sub    bl,0x4d
  403e65:	inc    edx
  403e66:	cmp    esi,DWORD PTR [edi]
  403e68:	jl     0x403e9a
  403e6a:	aam    0x30
  403e6c:	fucomip st,st(7)
  403e6e:	push   ds
  403e6f:	xor    ebx,DWORD PTR fs:[ebp-0x12]
  403e73:	adc    ax,0xde71
  403e77:	jge    0x403edd
  403e79:	inc    ebx
  403e7a:	jb     0x403ea7
  403e7c:	ins    BYTE PTR es:[edi],dx
  403e7d:	and    al,0xa2
  403e7f:	push   ecx
  403e80:	mov    ch,0x55
  403e82:	hlt    
  403e83:	jne    0x403e60
  403e85:	(bad)  
  403e86:	stc    
  403e87:	mov    ebp,0x317fa6cd
  403e8d:	outs   dx,BYTE PTR ds:[esi]
  403e8e:	stos   BYTE PTR es:[edi],al
  403e8f:	cld    
  403e90:	pushf  
  403e91:	mov    dh,0x5f
  403e93:	nop
  403e94:	mov    eax,0x53bfe1c8
  403e99:	in     eax,dx
  403e9a:	out    dx,al
  403e9b:	int3   
  403e9c:	dec    edi
  403e9d:	icebp  
  403e9e:	cld    
  403e9f:	xor    al,0x7f
  403ea1:	and    ch,ah
  403ea3:	dec    eax
  403ea4:	mov    edi,0x6c8961c7
  403ea9:	mov    ecx,0x6565813a
  403eae:	xchg   edi,eax
  403eaf:	sub    dl,al
  403eb1:	sahf   
  403eb2:	in     eax,0x2d
  403eb4:	les    ebp,FWORD PTR [eax]
  403eb6:	mov    esi,0x4b0a5a71
  403ebb:	jae    0x403f16
  403ebd:	cmp    esp,DWORD PTR [ebx+0x347f7f73]
  403ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec4:	test   eax,0x4836279c
  403ec9:	jo     0x403eeb
  403ecb:	data16 aam 0x21
  403ece:	arpl   WORD PTR [esi+0x66],bx
  403ed1:	rol    DWORD PTR [ecx+0x73],1
  403ed4:	push   edi
  403ed5:	std    
  403ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed7:	(bad)  
  403ed8:	push   eax
  403ed9:	xchg   edx,eax
  403eda:	pop    es
  403edb:	arpl   WORD PTR [ebx-0x341ac561],cx
  403ee1:	popf   
  403ee2:	lods   al,BYTE PTR ds:[esi]
  403ee3:	repz fisub DWORD PTR [eax+0x34b94bd9]
  403eea:	sub    BYTE PTR [edi],dh
  403eec:	adc    al,0x38
  403eee:	pop    ebx
  403eef:	fisub  DWORD PTR [eax+edx*4+0x5ad33dbe]
  403ef6:	scas   eax,DWORD PTR es:[edi]
  403ef7:	jle    0x403f32
  403ef9:	mov    edi,0x3e6bc60b
  403efe:	nop
  403eff:	ins    BYTE PTR es:[edi],dx
  403f00:	stos   BYTE PTR es:[edi],al
  403f01:	ret    0x60b7
  403f04:	jo     0x403f23
  403f06:	sbb    DWORD PTR [ebp+0x40],eax
  403f09:	jecxz  0x403efa
  403f0b:	pushf  
  403f0c:	jmp    0x403f06
  403f0e:	inc    ebp
  403f0f:	xor    al,0xfa
  403f11:	jle    0x403f34
  403f13:	mov    dh,0x6a
  403f15:	xor    eax,0x53539f93
  403f1a:	int3   
  403f1b:	xchg   ebp,eax
  403f1c:	add    DWORD PTR [edx+0x40],ecx
  403f1f:	mov    esp,0x8ecbf7a6
  403f24:	outs   dx,BYTE PTR ds:[esi]
  403f25:	cmp    DWORD PTR [bp+si+0x78ac],eax
  403f2a:	cmp    eax,0xacf835a3
  403f2f:	mov    ebx,0x758cab85
  403f34:	mov    cl,0x94
  403f36:	sub    eax,0x801d7bcb
  403f3b:	loop   0x403f70
  403f3d:	jge    0x403eea
  403f3f:	(bad)  
  403f40:	mov    esp,0x5fa214cc
  403f45:	dec    edx
  403f46:	mov    dl,BYTE PTR [esp+ecx*4-0x79]
  403f4a:	std    
  403f4b:	mov    al,ds:0x80cbc745
  403f50:	jmp    0x403ef4
  403f52:	int3   
  403f53:	mov    dh,0xb9
  403f55:	(bad)  
  403f56:	sbb    al,0x6f
  403f58:	push   0x4a
  403f5a:	es das 
  403f5c:	addr16 dec esp
  403f5e:	loop   0x403f2f
  403f60:	stos   BYTE PTR es:[edi],al
  403f61:	pop    eax
  403f62:	ficom  WORD PTR [ebx]
  403f64:	aaa    
  403f65:	cld    
  403f66:	rcl    DWORD PTR [edx+0x3f],1
  403f69:	jp     0x403fe7
  403f6b:	and    bl,ah
  403f6d:	mov    ebp,0xa43f4d13
  403f72:	mov    dh,0xe3
  403f74:	mov    dl,0xb4
  403f76:	push   ecx
  403f77:	push   ebp
  403f78:	jno    0x403fa8
  403f7a:	inc    edx
  403f7b:	jecxz  0x403fd3
  403f7d:	jbe    0x403f7d
  403f7f:	xor    al,0xd
  403f81:	ror    al,cl
  403f83:	ins    DWORD PTR es:[edi],dx
  403f84:	dec    ebx
  403f85:	fild   WORD PTR [esi+0x1a]
  403f88:	(bad)  
  403f89:	out    dx,eax
  403f8a:	je     0x403faa
  403f8c:	dec    esi
  403f8d:	add    edi,DWORD PTR [ebx+0x1f]
  403f90:	test   edi,edx
  403f92:	jnp    0x403f77
  403f94:	jo     0x403f46
  403f96:	dec    ebp
  403f97:	ins    DWORD PTR es:[edi],dx
  403f98:	push   es
  403f99:	int3   
  403f9a:	call   0xf48d2e4a
  403f9f:	imul   esi,DWORD PTR [ecx+0x1f12ff06],0xffffffa5
  403fa6:	jnp    0x403f76
  403fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa9:	out    0xd7,eax
  403fab:	das    
  403fac:	test   eax,0x543fd3ff
  403fb1:	pop    ebx
  403fb2:	or     eax,0xf06accc8
  403fb7:	(bad)  
  403fb8:	adc    BYTE PTR [esi+0x103a34bb],ah
  403fbe:	pop    ecx
  403fbf:	xchg   ebx,eax
  403fc0:	and    eax,0xb5bd1d4f
  403fc5:	sub    BYTE PTR [eax-0x5f688719],cl
  403fcb:	sar    ah,0xc8
  403fce:	and    eax,0x925f38fc
  403fd3:	jmp    0x5bd44a35
  403fd8:	dec    ebp
  403fd9:	jmp    0x404003
  403fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fdc:	sar    BYTE PTR [ebx-0x30],0xdf
  403fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fe1:	cmp    edi,ebx
  403fe3:	std    
  403fe4:	rol    BYTE PTR [ebp+0x2],cl
  403fe7:	aas    
  403fe8:	push   ebp
  403fe9:	sti    
  403fea:	ds mov bl,0xd4
  403fed:	adc    eax,0x9fac67c4
  403ff2:	sbb    ebp,DWORD PTR [eax-0x12ee6f22]
  403ff8:	loop   0x403f8a
  403ffa:	mov    ecx,0x79a486d8
  403fff:	and    eax,0xb72c22c1
  404004:	push   ecx
  404005:	mov    bh,BYTE PTR [ebx]
  404007:	int3   
  404008:	sbb    esi,DWORD PTR [ebp-0x1283311f]
  40400e:	jns    0x403fd6
  404010:	jl     0x404042
  404012:	aaa    
  404013:	dec    edi
  404014:	push   0x3fb655e0
  404019:	stc    
  40401a:	loope  0x40405a
  40401c:	push   0xe088bf2b
  404021:	cmp    bh,BYTE PTR [eax+eiz*2]
  404024:	mov    esp,0xe8d47251
  404029:	adc    eax,0x516f14c1
  40402e:	(bad)  
  40402f:	test   al,0x79
  404031:	pop    esi
  404032:	jbe    0x404076
  404034:	mov    cl,0x61
  404036:	add    al,0x43
  404038:	call   0xdb6d:0xf44b5e31
  40403f:	mov    cl,0xa9
  404041:	add    BYTE PTR [ebx+0x524b4d45],dl
  404047:	icebp  
  404048:	imul   eax,esi,0x7
  40404b:	pop    esp
  40404c:	push   edx
  40404d:	loope  0x40409f
  40404f:	push   edi
  404050:	jne    0x403fed
  404052:	add    bl,al
  404054:	add    al,0xb0
  404056:	cwde   
  404057:	data16 mov dh,0x8b
  40405a:	int3   
  40405b:	inc    esi
  40405c:	pop    edx
  40405d:	mov    WORD PTR [esi+ebx*2+0x6eca609c],?
  404064:	mov    WORD PTR [ebx+0x25],ds
  404067:	mov    ebp,0xc626977d
  40406c:	cs inc ebx
  40406e:	hlt    
  40406f:	push   ebx
  404070:	cmp    edx,DWORD PTR [ebx-0x36]
  404073:	dec    ecx
  404074:	mov    esp,0x939d3e21
  404079:	imul   ebx,DWORD PTR [esi-0x41e7c8b],0xfffffff9
  404080:	jo     0x40408c
  404082:	xchg   ebp,eax
  404083:	cmp    DWORD PTR [eax+0x59],0xde6e769e
  40408a:	mov    esi,0x5196b870
  40408f:	cmp    eax,0x821a2746
  404094:	test   al,0x7d
  404096:	and    ebx,DWORD PTR [ebx-0x26]
  404099:	(bad)  
  40409a:	cld    
  40409b:	lahf   
  40409c:	mov    bh,0xac
  40409e:	mov    ebp,0xf44c85b9
  4040a3:	inc    esi
  4040a4:	out    dx,al
  4040a5:	mov    edi,0xd46d8a96
  4040aa:	in     al,0x5e
  4040ac:	fldcw  WORD PTR [edx+0x1c]
  4040af:	or     BYTE PTR [ebp-0x3feb80fa],ah
  4040b5:	sbb    ebp,edx
  4040b7:	mov    ebp,0xae9bafc0
  4040bc:	mov    edi,0xb9aa345a
  4040c1:	stos   DWORD PTR es:[edi],eax
  4040c2:	sub    bl,dh
  4040c4:	in     al,0xf2
  4040c6:	out    dx,eax
  4040c7:	or     BYTE PTR [edx-0x7f50444b],0xb7
  4040ce:	std    
  4040cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d0:	hlt    
  4040d1:	aad    0xb7
  4040d3:	or     eax,0x2fbc465b
  4040d8:	out    0x75,eax
  4040da:	adc    eax,0x40700b5f
  4040df:	dec    eax
  4040e0:	test   DWORD PTR [eax],edi
  4040e2:	dec    eax
  4040e3:	and    DWORD PTR [ebx],ecx
  4040e5:	sahf   
  4040e6:	pop    ss
  4040e7:	mov    esi,0x92b5eacf
  4040ec:	add    ebp,DWORD PTR [edx-0xb729b7f]
  4040f2:	jl     0x4040f4
  4040f4:	aad    0xf6
  4040f6:	not    BYTE PTR [ecx+0x8]
  4040f9:	dec    ebx
  4040fa:	sti    
  4040fb:	lahf   
  4040fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040fd:	adc    ebp,edi
  4040ff:	push   0xffffffcd
  404101:	xchg   ebx,eax
  404102:	sub    al,BYTE PTR [ecx+0x2f]
  404105:	cli    
  404106:	xchg   edx,eax
  404107:	inc    esi
  404108:	imul   di,WORD PTR [esi+edx*1],0xffdd
  40410d:	rcl    BYTE PTR [eax-0x70],cl
  404110:	mov    DWORD PTR [ebx],ebx
  404112:	pop    esi
  404113:	test   eax,0x550e8907
  404118:	daa    
  404119:	inc    esi
  40411a:	dec    ebp
  40411b:	enter  0xbb17,0x46
  40411f:	pop    es
  404120:	mov    cl,BYTE PTR [ebp+0x7c71ccc7]
  404126:	iret   
  404127:	jnp    0x4040f8
  404129:	jle    0x40413f
  40412b:	xor    BYTE PTR [edx],al
  40412d:	xchg   ecx,eax
  40412e:	jmp    0xcb0677a3
  404133:	and    ch,dh
  404135:	ins    DWORD PTR es:[edi],dx
  404136:	sbb    eax,0x7db99015
  40413b:	popa   
  40413c:	jmp    0x40415a
  40413e:	jmp    0x8f:0x29b15ee3
  404145:	fidivr WORD PTR ds:0x20340b12
  40414b:	sahf   
  40414c:	inc    esp
  40414d:	adc    edx,eax
  40414f:	or     al,0xe1
  404151:	jno    0x40411c
  404153:	ret    
  404154:	inc    eax
  404155:	les    ebp,FWORD PTR [edx-0x7]
  404158:	das    
  404159:	inc    BYTE PTR [ebx-0x3]
  40415c:	mov    ecx,0xf7f848c4
  404161:	adc    ch,BYTE PTR [eax-0x2c]
  404164:	in     al,0xfc
  404166:	mov    BYTE PTR [edi+0xbf6b42a],bh
  40416c:	mov    bh,0xb
  40416e:	es ret 0x7195
  404172:	cmp    al,0x9
  404174:	pushf  
  404175:	lods   al,BYTE PTR ds:[esi]
  404176:	dec    ebp
  404177:	adc    DWORD PTR [ebx+0x5fd57543],0x54b05b05
  404181:	(bad)  
  404182:	je     0x404143
  404184:	in     al,0x25
  404186:	xchg   ebp,eax
  404187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404188:	add    cl,cl
  40418a:	js     0x40414a
  40418c:	xchg   edi,eax
  40418d:	cmp    edx,ebp
  40418f:	pop    ecx
  404190:	jns    0x40419e
  404192:	xchg   ecx,eax
  404193:	pmullw mm3,QWORD PTR [ebp-0x3db89a71]
  40419a:	inc    ecx
  40419b:	mov    bh,0x9d
  40419d:	mov    ecx,0xcdc7f4a2
  4041a2:	push   ecx
  4041a3:	shl    BYTE PTR [ebx-0x54],cl
  4041a6:	sub    eax,0x2211b0b3
  4041ab:	fs test al,0xb4
  4041ae:	(bad)  
  4041b0:	inc    esp
  4041b1:	sar    DWORD PTR [ecx],1
  4041b3:	scas   al,BYTE PTR es:[edi]
  4041b4:	mov    bl,0xad
  4041b6:	pop    ds
  4041b7:	add    BYTE PTR ss:[ebx-0x9],ch
  4041bb:	lock add eax,0x7a378ce9
  4041c1:	(bad)  
  4041c2:	rol    BYTE PTR [esi],cl
  4041c4:	or     DWORD PTR [ecx-0x34],eax
  4041c7:	xchg   ebx,eax
  4041c8:	ret    0x58ed
  4041cb:	lods   al,BYTE PTR ds:[esi]
  4041cc:	adc    cl,BYTE PTR [esp+edi*2+0x7c]
  4041d0:	hlt    
  4041d1:	lods   al,BYTE PTR ds:[esi]
  4041d2:	icebp  
  4041d3:	cli    
  4041d4:	push   ebp
  4041d5:	xor    eax,0x1858041a
  4041da:	cs popf 
  4041dc:	out    dx,al
  4041dd:	outs   dx,BYTE PTR ds:[esi]
  4041de:	daa    
  4041df:	retf   
  4041e0:	aam    0xf7
  4041e2:	pop    ss
  4041e3:	mov    ds:0x99c0e3e,al
  4041e8:	retf   0x3419
  4041eb:	xlat   BYTE PTR ds:[ebx]
  4041ec:	jg     0x4041ec
  4041ee:	cmp    eax,0xe6fed549
  4041f3:	cmp    eax,0xd96db40d
  4041f8:	lods   al,BYTE PTR ds:[si]
  4041fa:	jne    0x4041dc
  4041fc:	add    al,0xbc
  4041fe:	les    ebp,FWORD PTR [ebx+0x663b78d4]
  404204:	xor    edx,ebx
  404206:	sbb    dl,BYTE PTR [eax-0x59a08852]
  40420c:	xchg   edx,eax
  40420d:	stos   DWORD PTR es:[edi],eax
  40420e:	mov    ebp,DWORD PTR [ecx-0x2162b448]
  404214:	sub    DWORD PTR [esi-0x46fce076],0xffffffbb
  40421b:	mov    al,ds:0xa77ee7ad
  404220:	mov    bh,0x23
  404222:	mov    bl,0x5f
  404224:	jnp    0x40420d
  404226:	(bad)
  404229:	adc    eax,0x17e36a2a
  40422e:	stos   DWORD PTR es:[edi],eax
  40422f:	div    DWORD PTR [eax]
  404231:	inc    ebp
  404232:	and    bl,BYTE PTR [bx+si]
  404235:	mov    al,BYTE PTR cs:[eax+0x3d4540a2]
  40423c:	cli    
  40423d:	(bad)  
  40423f:	lahf   
  404240:	adc    al,bh
  404242:	lds    esp,FWORD PTR [edi]
  404244:	ret    
  404245:	rol    BYTE PTR [edx],1
  404247:	add    eax,edx
  404249:	push   0xa52f8fcf
  40424e:	cmc    
  40424f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404250:	and    eax,0xb84cd292
  404255:	(bad)  
  404256:	sub    edi,DWORD PTR [esi]
  404258:	(bad)  
  404259:	aad    0x67
  40425b:	loopne 0x404262
  40425d:	sub    ecx,edx
  40425f:	fld    QWORD PTR ds:0x672c60be
  404265:	jmp    0xa3377967
  40426a:	aam    0x2b
  40426c:	aad    0xf0
  40426e:	xchg   DWORD PTR [edi+0x48440a31],esp
  404274:	jmp    0xdcc1:0x90e83c0f
  40427b:	lods   al,BYTE PTR ds:[esi]
  40427c:	out    dx,al
  40427d:	push   0xffffffd9
  40427f:	aam    0x22
  404281:	lods   al,BYTE PTR ds:[esi]
  404282:	mov    BYTE PTR [eax],0x92
  404285:	cmp    ebx,DWORD PTR [ecx+0x23]
  404288:	test   al,0xd2
  40428a:	push   es
  40428b:	fistp  WORD PTR [edi+0x49]
  40428e:	xchg   edi,eax
  40428f:	pop    esp
  404290:	retf   0x146e
  404293:	sbb    al,0x84
  404295:	cwde   
  404296:	lods   al,BYTE PTR ds:[esi]
  404297:	rol    DWORD PTR [ecx+0x1df0eab0],cl
  40429d:	dec    edi
  40429e:	cmp    BYTE PTR [ebx-0x2cdabf5b],0x17
  4042a5:	cmp    BYTE PTR [edi-0x67],al
  4042a8:	out    0xd5,al
  4042aa:	xor    DWORD PTR [ebx-0x7ec035ba],edi
  4042b0:	in     al,0x92
  4042b2:	xor    al,bh
  4042b4:	dec    ebx
  4042b5:	adc    ah,BYTE PTR ds:0xf1e19ad4
  4042bb:	dec    edi
  4042bc:	mov    DWORD PTR [ecx-0x41638492],edi
  4042c2:	in     eax,dx
  4042c3:	rol    DWORD PTR [ebp+0x2afd03ad],1
  4042c9:	shl    BYTE PTR [esi],0xb3
  4042cc:	xchg   ebx,eax
  4042cd:	lock aaa 
  4042cf:	pop    esi
  4042d0:	das    
  4042d1:	push   es
  4042d2:	pusha  
  4042d3:	mov    dl,0x9c
  4042d5:	push   cs
  4042d6:	or     BYTE PTR [ecx],dh
  4042d8:	retf   
  4042d9:	inc    edx
  4042da:	stos   BYTE PTR es:[edi],al
  4042db:	adc    ch,BYTE PTR [esi]
  4042dd:	xchg   edx,eax
  4042de:	gs and eax,eax
  4042e1:	pop    ecx
  4042e2:	aam    0x92
  4042e4:	sbb    ch,BYTE PTR [edi]
  4042e6:	mov    eax,ds:0x67fc1bd2
  4042eb:	nop
  4042ec:	sahf   
  4042ed:	ror    bh,cl
  4042ef:	or     eax,0x95823bc3
  4042f4:	rcl    BYTE PTR [edi],0xb
  4042f7:	ja     0x404331
  4042f9:	mov    ebx,0xc4d35328
  4042fe:	xchg   ebp,eax
  4042ff:	mov    ebx,0xf11dc0f6
  404304:	inc    ebp
  404305:	loop   0x40430f
  404307:	xchg   BYTE PTR [ebp+0x46],al
  40430a:	mov    BYTE PTR [esi-0x6ed6b94a],bl
  404310:	daa    
  404311:	gs in  eax,0xe3
  404314:	mov    eax,ds:0x80311e1b
  404319:	cs sbb ebx,esp
  40431c:	xchg   BYTE PTR [esp+ebx*1],dl
  40431f:	ja     0x404384
  404321:	out    dx,eax
  404322:	jne    0x40437b
  404324:	outs   dx,DWORD PTR ds:[esi]
  404325:	int3   
  404326:	push   cs
  404327:	mov    cl,0x3b
  404329:	imul   ecx,esp,0x13
  40432c:	fwait
  40432d:	mov    al,ds:0x5eacace1
  404332:	mov    bh,0x61
  404334:	repz pop ebp
  404336:	mov    cs,WORD PTR [ebp+0x4c]
  404339:	cvtps2pi mm5,QWORD PTR ds:[ebx+0x6bae6471]
  404341:	icebp  
  404342:	mov    esi,0xf79c3aa1
  404347:	pop    ecx
  404348:	xchg   ebp,eax
  404349:	xor    al,0xd8
  40434b:	call   0x1002eee
  404350:	aad    0x2d
  404352:	jae    0x404354
  404354:	test   DWORD PTR ds:0xd3bd6431,0x2788fc74
  40435e:	jae    0x4042f4
  404360:	cmp    dh,BYTE PTR [eax-0x7c2139d]
  404366:	sar    BYTE PTR [ebx-0x55],cl
  404369:	call   0x211172c0
  40436e:	push   edi
  40436f:	test   BYTE PTR [esi+0x28],0x56
  404373:	(bad)
  404376:	out    0x3a,eax
  404378:	(bad)  
  404379:	into   
  40437a:	cwde   
  40437b:	and    BYTE PTR [ebp+0x19],0xc7
  40437f:	mov    edi,0x1de98a02
  404385:	cmp    DWORD PTR [ebx+0x7e554616],ebx
  40438b:	test   BYTE PTR [ebx-0x3ae358d2],dh
  404391:	inc    esp
  404392:	mov    fs,WORD PTR [edx-0x4f]
  404395:	cmc    
  404396:	loop   0x40437c
  404398:	xchg   BYTE PTR ds:0x5b8a85c0,dl
  40439e:	mov    eax,0x666c8249
  4043a3:	js     0x40433c
  4043a5:	sub    edx,0x30
  4043a8:	mov    eax,DWORD PTR [edi+0x349f174]
  4043ae:	ret    0xed99
  4043b1:	cmc    
  4043b2:	leave  
  4043b3:	sub    eax,0xd3e20a31
  4043b8:	cmp    al,0x8c
  4043ba:	or     al,0xa1
  4043bc:	inc    esp
  4043bd:	sbb    DWORD PTR [esi-0x17],ebx
  4043c0:	xchg   ebp,eax
  4043c1:	ss int 0xa2
  4043c4:	int3   
  4043c5:	addr16 mov dh,0x59
  4043c8:	dec    eax
  4043c9:	mov    DWORD PTR [esi-0x4a625778],edx
  4043cf:	call   0x14b52c4b
  4043d4:	mov    dh,0x19
  4043d6:	push   cs
  4043d7:	adc    bh,dl
  4043d9:	jne    0x404372
  4043db:	dec    esi
  4043dc:	popf   
  4043dd:	push   esi
  4043de:	xor    esp,DWORD PTR [ebp-0x680ef97b]
  4043e4:	(bad)  
  4043e5:	dec    esp
  4043e6:	(bad)  
  4043e7:	ins    DWORD PTR es:[edi],dx
  4043e8:	daa    
  4043e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ea:	mov    ebp,0x6a4c93e1
  4043ef:	ss dec edx
  4043f1:	xchg   edx,eax
  4043f2:	lock in eax,dx
  4043f4:	mov    ecx,0x2236cf1b
  4043f9:	in     al,dx
  4043fa:	mov    bh,0x7c
  4043fc:	call   FWORD PTR [esi+0x5866d405]
  404402:	in     al,0x34
  404404:	icebp  
  404405:	sbb    al,0x5f
  404407:	sbb    DWORD PTR [esp+esi*2-0x2da40df6],ebx
  40440e:	aad    0x8d
  404410:	sahf   
  404411:	jnp    0x40439e
  404413:	test   DWORD PTR [ecx],edx
  404415:	jns    0x404451
  404417:	xor    bh,BYTE PTR [eax+ebx*8-0x5d]
  40441b:	mov    edi,DWORD PTR [eax-0x34474e73]
  404421:	sub    dh,BYTE PTR [esi+0x52b00431]
  404427:	cmp    al,0x5
  40442a:	outs   dx,DWORD PTR ds:[esi]
  40442b:	(bad)  
  40442c:	xchg   edx,eax
  40442d:	imul   BYTE PTR [edx+edx*1-0x734e1e18]
  404434:	pop    ss
  404435:	ds cdq 
  404437:	fsubr  DWORD PTR [edx+0x63e74304]
  40443d:	call   0xf686:0x17dc9039
  404444:	mov    esi,0x2c30bb9a
  404449:	sbb    DWORD PTR [edx-0x675db282],ecx
  40444f:	fdiv   DWORD PTR [ecx]
  404451:	xchg   esp,eax
  404452:	div    BYTE PTR [ebp-0x1b07e3e9]
  404458:	sub    DWORD PTR [ebp+ebx*4-0x5d4a4efa],ebx
  40445f:	or     al,0xd9
  404461:	pop    es
  404462:	sbb    bl,BYTE PTR [ebx]
  404464:	dec    esi
  404465:	mul    BYTE PTR [esi]
  404467:	stos   BYTE PTR es:[edi],al
  404468:	mov    esp,0x9176dbbc
  40446d:	shl    DWORD PTR [edx-0x12],cl
  404470:	stc    
  404471:	jmp    0x8d35:0x1bd1995a
  404478:	sbb    WORD PTR [ebx+0x12ad36ac],si
  40447f:	sbb    eax,0xda388b71
  404484:	xchg   ebx,eax
  404485:	mov    ecx,0xa8fe95d8
  40448a:	mov    BYTE PTR [eax+0x3a9b8497],bl
  404490:	in     eax,dx
  404491:	dec    DWORD PTR [eax-0x12551a54]
  404497:	adc    BYTE PTR [ebp-0x1e],bh
  40449a:	ds sahf 
  40449c:	div    DWORD PTR [edi-0x63dab74d]
  4044a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a3:	adc    edx,edx
  4044a5:	imul   edi,edi,0x470e1dc9
  4044ab:	ror    DWORD PTR [esp+eiz*4+0xa],cl
  4044af:	into   
  4044b0:	cmp    DWORD PTR [edi],edx
  4044b2:	lock jae 0x4044c1
  4044b5:	mov    edx,DWORD PTR [eax+0x33]
  4044b8:	inc    edi
  4044b9:	retf   0x987b
  4044bc:	stos   BYTE PTR es:[edi],al
  4044bd:	sbb    al,0x7e
  4044bf:	rcl    DWORD PTR [edi],1
  4044c1:	add    BYTE PTR [edi-0x4a],dh
  4044c4:	cmp    DWORD PTR [edi-0x647c45a1],ecx
  4044ca:	cmp    eax,0x15bfe5ac
  4044cf:	inc    esi
  4044d0:	stos   DWORD PTR es:[edi],eax
  4044d1:	sbb    eax,0x949923d5
  4044d6:	out    0xac,al
  4044d8:	push   eax
  4044d9:	xchg   ecx,eax
  4044da:	inc    ebx
  4044db:	rol    BYTE PTR [ebp-0x7ce494ce],0x9f
  4044e2:	xor    DWORD PTR [edi+0x5836500b],0xffffffe4
  4044e9:	pop    ds
  4044ea:	test   DWORD PTR ds:0xa266d05d,ebx
  4044f0:	adc    DWORD PTR [eax],0xffffffdf
  4044f3:	pop    ds
  4044f4:	fnstsw WORD PTR [eax+ebp*1-0x4a1fb337]
  4044fb:	xchg   edi,eax
  4044fc:	sahf   
  4044fd:	xchg   esp,eax
  4044fe:	push   ebx
  4044ff:	cld    
  404500:	pop    edx
  404501:	sub    al,0xf3
  404503:	jle    0x4044f5
  404505:	inc    eax
  404506:	pop    esi
  404507:	sbb    DWORD PTR [ebx-0x17ce5fa7],ebx
  40450d:	sti    
  40450e:	or     al,BYTE PTR [ebp+0x41]
  404511:	pop    esp
  404512:	(bad)  
  404513:	lock jae 0x404555
  404516:	mov    ah,0x86
  404518:	(bad)  
  404519:	push   edx
  40451a:	popf   
  40451b:	xchg   esp,eax
  40451c:	adc    eax,0x421d61fd
  404521:	icebp  
  404522:	sub    al,ch
  404524:	inc    edx
  404525:	fstp   st(6)
  404527:	push   ebp
  404528:	retf   
  404529:	es retf 
  40452b:	data16 ja 0x404508
  40452e:	out    dx,al
  40452f:	mov    ch,0x0
  404531:	pop    ebp
  404532:	xchg   ecx,eax
  404533:	mov    bh,0x6f
  404535:	or     DWORD PTR [esi+eiz*1-0x3b121413],0xffffff8d
  40453d:	dec    edx
  40453e:	in     al,dx
  40453f:	mov    ebx,DWORD PTR [ecx]
  404541:	sub    eax,DWORD PTR [edx-0x3b]
  404544:	adc    al,BYTE PTR [edx+0x17ec02e1]
  40454a:	loop   0x4045b4
  40454c:	inc    esp
  40454d:	and    eax,0x896bd6fa
  404552:	retf   
  404553:	sub    eax,0x44e6be74
  404558:	jle    0x4044da
  40455a:	aam    0x97
  40455c:	in     eax,dx
  40455d:	call   0x7f1b:0xabbf2abe
  404564:	push   edx
  404565:	jb     0x404577
  404567:	sub    BYTE PTR [ecx],bh
  404569:	push   cs
  40456a:	pop    ebp
  40456c:	jecxz  0x4045d3
  40456e:	sar    ecx,1
  404570:	test   DWORD PTR [eax+edx*8],ebp
  404573:	cmp    bl,BYTE PTR [edx-0x51521fb8]
  404579:	adc    al,0x19
  40457b:	lds    ecx,FWORD PTR [edi+0x588082b4]
  404581:	arpl   WORD PTR [esi+0x7a],ax
  404584:	addr16 clc 
  404586:	inc    edi
  404587:	loopne 0x40459d
  404589:	(bad)
  40458d:	(bad)  
  40458e:	or     al,0x5c
  404590:	outs   dx,DWORD PTR ds:[esi]
  404591:	rcl    BYTE PTR [esi-0x71],0xaa
  404595:	pop    ss
  404596:	pusha  
  404597:	mov    esi,0xdefaff2d
  40459c:	mov    esi,0x75309426
  4045a1:	das    
  4045a2:	out    dx,al
  4045a3:	xchg   edx,eax
  4045a4:	(bad)  
  4045a5:	jp     0x404538
  4045a7:	sti    
  4045a8:	cwde   
  4045a9:	xor    edi,esp
  4045ab:	js     0x4045a1
  4045ad:	add    bh,BYTE PTR [eax]
  4045af:	popf   
  4045b0:	mov    ch,dl
  4045b2:	stc    
  4045b3:	out    dx,eax
  4045b4:	mov    esp,DWORD PTR [esi+0x1]
  4045b7:	imul   edx,edx,0x17
  4045ba:	pushf  
  4045bb:	fild   WORD PTR [eax+0x472c4aba]
  4045c1:	push   ebp
  4045c2:	(bad)  
  4045c4:	loop   0x4045c3
  4045c6:	ds jns 0x4045f4
  4045c9:	retf   0xe4e4
  4045cc:	dec    esp
  4045cd:	loop   0x404588
  4045cf:	into   
  4045d0:	mov    ds:0x7676c6ab,al
  4045d5:	(bad)  
  4045d6:	in     al,dx
  4045d7:	jge    0x4045fd
  4045d9:	xor    ah,dl
  4045db:	push   ebx
  4045dc:	repnz or eax,0x7a075c20
  4045e2:	adc    DWORD PTR [bx+0x77],ebx
  4045e6:	nop
  4045e7:	jno    0x404644
  4045e9:	rcr    esp,0x4b
  4045ec:	ret    
  4045ed:	pusha  
  4045ee:	fstp   TBYTE PTR [ecx+0x722de1a0]
  4045f4:	fsubr  DWORD PTR [ebx+0x21]
  4045f7:	dec    ecx
  4045f8:	cmp    esi,0xffffffe2
  4045fb:	push   0x397eaace
  404600:	adc    BYTE PTR [esi],ch
  404602:	(bad)
  404605:	xchg   esp,eax
  404606:	sbb    DWORD PTR [edi+0x71],ebp
  404609:	and    ah,cl
  40460b:	add    ah,BYTE PTR [ecx+0x45]
  40460e:	mov    eax,0x3ee02594
  404613:	jg     0x40468f
  404615:	or     dh,BYTE PTR [ecx+edi*1]
  404618:	mov    ebp,ecx
  40461a:	inc    ecx
  40461b:	les    ebp,FWORD PTR [edi+ebp*1-0x32836cae]
  404622:	daa    
  404623:	fdivr  DWORD PTR [ebx+0x31]
  404626:	out    0x4,al
  404628:	pop    edi
  404629:	sbb    al,0x4f
  40462b:	sub    ebp,DWORD PTR [edx]
  40462d:	outs   dx,DWORD PTR ds:[esi]
  40462e:	out    0xae,eax
  404630:	dec    BYTE PTR [edi+0x35]
  404633:	mov    edx,0xf89e1d7e
  404638:	jmp    0x6aeb:0xff6418bc
  40463f:	pop    ebp
  404640:	cmp    al,0x54
  404642:	mov    eax,?
  404644:	jnp    0x404680
  404646:	dec    ebx
  404647:	fs push esi
  404649:	pop    ss
  40464a:	rcl    BYTE PTR [edx+0x23],1
  40464d:	sub    ch,BYTE PTR [ebp-0x7b69204a]
  404653:	dec    ebx
  404654:	pushf  
  404655:	test   eax,0x1ecfca04
  40465a:	(bad)  
  40465b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40465c:	rol    DWORD PTR [esi+0x25],1
  40465f:	cli    
  404660:	shr    cl,1
  404662:	nop
  404663:	jne    0x4046bb
  404665:	inc    ebx
  404666:	sub    DWORD PTR [ebp+0x7533dead],ebp
  40466c:	sbb    al,0x11
  40466e:	mov    al,0x93
  404670:	fidiv  WORD PTR [ecx+0x70]
  404673:	aad    0x8a
  404675:	neg    BYTE PTR [eax-0x22eb9111]
  40467b:	adc    BYTE PTR [ecx-0x55],ch
  40467e:	fist   DWORD PTR [edx-0x35]
  404681:	out    dx,al
  404682:	add    al,0x8d
  404684:	out    dx,al
  404685:	push   esp
  404686:	and    ah,BYTE PTR [edx]
  404688:	adc    esp,edi
  40468a:	sub    DWORD PTR [edx+0x7cdba832],esp
  404690:	push   cs
  404691:	jno    0x4046d4
  404693:	stc    
  404694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404695:	pushf  
  404696:	scas   eax,DWORD PTR es:[edi]
  404697:	inc    ebp
  404698:	push   edi
  404699:	and    BYTE PTR [esi-0x27],cl
  40469c:	and    dl,bh
  40469e:	jp     0x404703
  4046a0:	test   al,0x20
  4046a2:	(bad)
  4046a5:	outs   dx,BYTE PTR ds:[esi]
  4046a6:	es jb  0x40464b
  4046a9:	or     BYTE PTR [ebp-0x6e3244f6],dh
  4046af:	sti    
  4046b0:	cmp    BYTE PTR [ebx+0x6d],cl
  4046b3:	mov    cl,0xf7
  4046b5:	hlt    
  4046b6:	sub    BYTE PTR [edi+0x231f55e2],bh
  4046bc:	fidivr DWORD PTR [eax-0x21]
  4046bf:	sbb    dl,bh
  4046c1:	sti    
  4046c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c3:	ja     0x404650
  4046c5:	pop    edi
  4046c6:	lods   eax,DWORD PTR ds:[esi]
  4046c7:	mov    dl,0x15
  4046c9:	mov    esp,0xbc2bfa2f
  4046ce:	lods   al,BYTE PTR ds:[esi]
  4046cf:	mov    dl,0x76
  4046d1:	enter  0xc249,0xbf
  4046d5:	enter  0xb0cb,0xfb
  4046d9:	loopne 0x404694
  4046db:	(bad)  
  4046dc:	mov    ecx,0xd8cc4325
  4046e1:	fwait
  4046e2:	mov    ah,BYTE PTR [esi-0x80]
  4046e5:	fld    TBYTE PTR [edx]
  4046e7:	jmp    FWORD PTR [ecx]
  4046e9:	jmp    0x87dc:0xe3f12611
  4046f0:	clc    
  4046f1:	scas   al,BYTE PTR es:[edi]
  4046f2:	ja     0x40467a
  4046f4:	sti    
  4046f5:	dec    eax
  4046f6:	outs   dx,BYTE PTR ds:[esi]
  4046f7:	sar    bh,1
  4046f9:	jmp    0x4046d0
  4046fb:	clc    
  4046fc:	data16 jns 0x40470c
  4046ff:	or     ebx,DWORD PTR [edx-0x6d]
  404702:	push   esi
  404703:	jo     0x40477f
  404705:	shl    dl,cl
  404707:	adc    dh,dh
  404709:	or     eax,0x93d0d188
  40470e:	retf   
  40470f:	out    0xbc,eax
  404711:	outs   dx,BYTE PTR ds:[esi]
  404712:	js     0x4046bb
  404714:	xor    eax,0x26a38a20
  404719:	js     0x4046ce
  40471b:	jo     0x4046e1
  40471d:	int3   
  40471e:	jle    0x404776
  404720:	mov    bl,0x57
  404722:	in     al,dx
  404723:	lods   al,BYTE PTR ds:[esi]
  404724:	mov    ds:0x4d6a284d,al
  404729:	(bad)  
  40472a:	ficomp WORD PTR [edx]
  40472c:	mov    eax,ds:0xf0fb6c0a
  404731:	mov    ds:0xdc166189,al
  404736:	out    dx,eax
  404737:	or     DWORD PTR [ecx],0xffffffb2
  40473a:	push   ebx
  40473b:	fimul  DWORD PTR [eax-0x559604ae]
  404741:	mov    al,BYTE PTR [edx+0x61]
  404744:	jmp    0x404787
  404746:	aam    0x2d
  404748:	ret    
  404749:	enter  0x84e8,0x45
  40474d:	cmp    al,0xf0
  40474f:	cld    
  404750:	inc    sp
  404752:	and    dh,BYTE PTR [ecx]
  404754:	dec    ebx
  404755:	shl    BYTE PTR [ebx-0x4966c58c],cl
  40475b:	mov    eax,0x8f60d07
  404760:	cmp    BYTE PTR [edi],ch
  404762:	xchg   edx,eax
  404763:	jmp    0x1e5a:0x88f679a9
  40476a:	aas    
  40476b:	in     al,0xc0
  40476d:	sbb    edi,edx
  40476f:	fmul   QWORD PTR [ebx-0x2a]
  404772:	and    BYTE PTR [edx],cl
  404774:	inc    ebp
  404775:	mov    bh,0x85
  404777:	cmp    DWORD PTR [eax+edi*8],edi
  40477a:	adc    cl,ah
  40477c:	xchg   edi,eax
  40477d:	test   BYTE PTR [eax+0x76],dl
  404780:	ror    DWORD PTR [edx],0xaa
  404783:	jb     0x4047de
  404785:	pusha  
  404786:	cmp    dh,dh
  404788:	js     0x4047e2
  40478a:	or     eax,0x7977cea2
  40478f:	fwait
  404790:	add    ebp,DWORD PTR [edx]
  404792:	jmp    0xcc19f8c8
  404797:	mov    ebx,DWORD PTR [ebp+0x31]
  40479a:	jno    0x404793
  40479c:	mov    bl,0xcd
  40479e:	fcom   DWORD PTR [eax+0x7196419d]
  4047a4:	push   esp
  4047a5:	in     al,0xf4
  4047a7:	lods   al,BYTE PTR ds:[esi]
  4047a8:	mov    ds:0x9cd6712c,eax
  4047ad:	pop    es
  4047ae:	hlt    
  4047af:	mov    eax,ds:0xf7ae8ed8
  4047b4:	ret    
  4047b5:	jnp    0x4047c3
  4047b7:	loope  0x404822
  4047b9:	inc    edi
  4047ba:	sbb    eax,0x7fb067d7
  4047bf:	in     eax,dx
  4047c0:	add    ebp,0xc8f82c6c
  4047c6:	push   ebx
  4047c7:	mov    ah,BYTE PTR [edx-0x21]
  4047ca:	or     dl,0xbf
  4047cd:	scas   eax,DWORD PTR es:[edi]
  4047ce:	fstp   QWORD PTR [edx-0x2c063ce5]
  4047d4:	cmp    eax,0x56e83e4e
  4047d9:	xchg   ebx,eax
  4047da:	loope  0x40482f
  4047dc:	xor    esi,DWORD PTR [ecx-0x57e882b7]
  4047e2:	mov    BYTE PTR [eax-0x1833a491],cl
  4047e8:	xor    eax,DWORD PTR [edx+0x42]
  4047eb:	xchg   esp,eax
  4047ec:	xchg   DWORD PTR [ecx+0x14],ebp
  4047ef:	(bad)  
  4047f0:	dec    esi
  4047f1:	push   ds
  4047f2:	dec    ebp
  4047f3:	cs nop
  4047f5:	xor    al,0xf3
  4047f7:	add    eax,0x3141788
  4047fc:	cmovp  ecx,DWORD PTR [esi-0x53]
  404800:	clc    
  404801:	ins    BYTE PTR es:[edi],dx
  404802:	sbb    al,0x7b
  404804:	fdiv   QWORD PTR [ebx+0x26]
  404807:	sub    ebp,DWORD PTR [ecx]
  404809:	pop    ds
  40480a:	fld    QWORD PTR [edx]
  40480c:	pop    ds
  40480d:	add    dh,BYTE PTR [ebp+0x7db6fc7f]
  404813:	repnz pop ds
  404815:	push   ebp
  404816:	rcl    al,0x92
  404819:	cld    
  40481a:	mov    ch,0x36
  40481c:	cmp    eax,0x2e4fd785
  404821:	jno    0x4047a6
  404823:	scas   eax,DWORD PTR es:[edi]
  404824:	and    dl,ch
  404826:	fld    QWORD PTR [ecx-0x12]
  404829:	jne    0x4047c9
  40482b:	jg     0x404862
  40482d:	(bad)  
  40482e:	repnz mov ch,BYTE PTR [edi+esi*4-0x5d87a91e]
  404836:	aas    
  404837:	dec    ebx
  404838:	inc    esi
  404839:	mov    cl,0xe7
  40483b:	scas   eax,DWORD PTR es:[edi]
  40483c:	int    0x28
  40483e:	out    dx,eax
  40483f:	scas   al,BYTE PTR es:[edi]
  404840:	cmp    DWORD PTR [esi+0x1c2dd4e8],0xffffffb2
  404847:	ds push ebx
  404849:	in     eax,0x2f
  40484b:	mov    WORD PTR es:[edx+0x1afb8fd0],ss
  404852:	fidivr DWORD PTR [ebx]
  404854:	adc    ebp,eax
  404856:	or     eax,0x3d22d313
  40485b:	in     eax,0xaf
  40485d:	cdq    
  40485e:	mov    gs,WORD PTR [esi]
  404860:	push   edi
  404861:	jg     0x4048dd
  404863:	xor    al,0xad
  404865:	(bad)  
  404867:	movntps XMMWORD PTR [edi+0x3139fe34],xmm6
  40486e:	out    0x1,eax
  404870:	cmp    BYTE PTR [esi],dl
  404872:	dec    edx
  404873:	ret    0x36e2
  404876:	inc    esi
  404877:	fstp   DWORD PTR [ebp-0x7b]
  40487a:	sbb    eax,0x2ba612a3
  40487f:	sub    BYTE PTR [ebp+esi*1+0x520ae954],0xbb
  404887:	pop    edi
  404888:	pop    ecx
  404889:	xor    eax,0x1bc28b5f
  40488e:	jbe    0x4048fc
  404890:	sub    BYTE PTR [ebx],dl
  404892:	mul    DWORD PTR [ebx+eiz*8-0x60]
  404896:	fcmovbe st,st(6)
  404898:	push   cs
  404899:	sub    DWORD PTR [ebx],edx
  40489b:	push   ss
  40489c:	xchg   edx,eax
  40489d:	sbb    edx,edi
  40489f:	or     esi,DWORD PTR [edi+eiz*8+0x3e]
  4048a3:	int3   
  4048a4:	push   cs
  4048a5:	lock adc dl,bh
  4048a8:	pop    edx
  4048a9:	stos   DWORD PTR es:[edi],eax
  4048aa:	sbb    eax,0x6303acd1
  4048af:	xlat   BYTE PTR ds:[ebx]
  4048b0:	js     0x404902
  4048b2:	push   cs
  4048b3:	pop    edi
  4048b4:	mov    dh,0x32
  4048b6:	cmp    al,BYTE PTR [eax+0x38]
  4048b9:	adc    BYTE PTR [edx-0x537693b],0x4e
  4048c0:	in     eax,dx
  4048c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048c2:	push   es
  4048c3:	mov    cs,eax
  4048c5:	div    BYTE PTR [ebp-0x2e]
  4048c8:	pop    eax
  4048c9:	ror    DWORD PTR [eax-0x64],cl
  4048cc:	sub    DWORD PTR [ebx],ebp
  4048ce:	push   0x593409c
  4048d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d4:	mov    BYTE PTR [ecx+ebx*4],al
  4048d7:	cmp    eax,0x3262ee95
  4048dc:	out    0xf2,eax
  4048de:	mov    eax,0xd08b4fd
  4048e3:	mov    ss,WORD PTR [ebx-0x3e4d5583]
  4048e9:	xor    al,al
  4048eb:	cdq    
  4048ec:	in     al,dx
  4048ed:	sub    DWORD PTR [edi+0x76],0xb2a5c7a5
  4048f4:	mov    dh,dh
  4048f6:	frstor [esi+eax*1+0x7c4b984e]
  4048fd:	inc    edi
  4048fe:	adc    BYTE PTR [esi+0x117c6b6f],dh
  404904:	sub    eax,0xb507fe33
  404909:	scas   eax,DWORD PTR es:[edi]
  40490a:	rol    BYTE PTR [edi-0x5d],1
  40490d:	popa   
  40490e:	(bad)  
  40490f:	out    0x58,al
  404911:	addr16 dec ebp
  404913:	pusha  
  404914:	mov    dh,0x49
  404916:	popa   
  404917:	jg     0x404976
  404919:	mov    ah,0xf2
  40491b:	sbb    BYTE PTR [ecx],ch
  40491d:	int    0x67
  40491f:	popf   
  404920:	imul   BYTE PTR [edi]
  404922:	in     eax,dx
  404923:	push   ecx
  404924:	out    0x8e,al
  404926:	ret    0x2d70
  404929:	pop    ds
  40492a:	aam    0xb6
  40492c:	clc    
  40492d:	pop    ss
  40492e:	js     0x404946
  404930:	inc    ebp
  404931:	mov    ?,WORD PTR [ebx+0x7a368dec]
  404937:	sahf   
  404938:	xor    ebx,0xfffffff4
  40493b:	xchg   DWORD PTR [ebp-0xed58184],esp
  404941:	mov    WORD PTR [eax],cs
  404943:	jge    0x404976
  404945:	mov    fs,WORD PTR [eax+0x37]
  404948:	jns    0x404961
  40494a:	pop    ebx
  40494b:	je     0x404950
  40494d:	lahf   
  40494e:	nop
  40494f:	pop    edx
  404950:	pushf  
  404951:	adc    al,0xc8
  404953:	pop    edx
  404954:	cmp    ch,BYTE PTR [ebx+0x19906fcd]
  40495a:	outs   dx,BYTE PTR ds:[esi]
  40495b:	sbb    al,BYTE PTR [ebx+0x33248cb0]
  404961:	test   BYTE PTR [edx-0x6f],0x81
  404965:	xchg   BYTE PTR [ebx-0x75],bh
  404968:	lods   eax,DWORD PTR ds:[esi]
  404969:	xor    ch,ah
  40496b:	inc    ebp
  40496c:	cld    
  40496d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40496f:	push   0xffffffa9
  404971:	call   0x620ba267
  404976:	loop   0x40498e
  404978:	xor    eax,0xa6a0eab3
  40497d:	add    BYTE PTR [edi-0xd],0xbd
  404981:	mov    al,0xda
  404983:	or     ecx,DWORD PTR [ebx-0x52]
  404986:	add    ebp,DWORD PTR [ebp-0x70]
  404989:	mov    ?,WORD PTR [edx+eax*2-0x569bdc07]
  404990:	(bad)  [edi]
  404992:	inc    edi
  404993:	push   0xffffff93
  404995:	mov    al,BYTE PTR [edx]
  404997:	call   0xc0c3d3df
  40499c:	sahf   
  40499d:	scas   al,BYTE PTR es:[edi]
  40499e:	dec    eax
  40499f:	add    al,BYTE PTR [esi+0x25cdd5d2]
  4049a5:	xor    edi,esi
  4049a7:	add    al,0x8d
  4049a9:	call   0x25a3:0x3cb28dfa
  4049b0:	cld    
  4049b1:	test   BYTE PTR [edx+0x41],bl
  4049b4:	shl    DWORD PTR [esi-0x5ee08d97],cl
  4049ba:	test   DWORD PTR [eax-0x40],esp
  4049bd:	hlt    
  4049be:	mov    DWORD PTR [ecx],esi
  4049c0:	or     DWORD PTR [ebp-0x44],edi
  4049c3:	and    ah,BYTE PTR [eax+0x27]
  4049c6:	jns    0x404958
  4049c8:	cmp    eax,DWORD PTR ss:[ecx-0x62e9b509]
  4049cf:	inc    edx
  4049d0:	mov    BYTE PTR [esi-0x17],ch
  4049d3:	aaa    
  4049d4:	std    
  4049d5:	inc    esi
  4049d6:	xor    DWORD PTR [ecx+0x53],esp
  4049d9:	mov    esi,0x18e31d74
  4049de:	pushf  
  4049df:	scas   eax,DWORD PTR es:[edi]
  4049e0:	fsubrp st(6),st
  4049e2:	ret    0x98a4
  4049e5:	dec    edi
  4049e6:	or     dh,cl
  4049e8:	frstor [ebp-0x2b]
  4049eb:	jo     0x404a2b
  4049ed:	shl    DWORD PTR [esi],1
  4049ef:	cdq    
  4049f0:	mov    dl,BYTE PTR [ebx]
  4049f2:	ret    0x1e0c
  4049f5:	mov    ah,0x80
  4049f7:	aas    
  4049f8:	dec    ebp
  4049f9:	inc    ebx
  4049fa:	imul   eax,DWORD PTR [esi-0x28],0xc498c27c
  404a01:	mov    edx,0xb4e49696
  404a06:	jnp    0x40498d
  404a08:	(bad)  
  404a09:	fsub   st,st(5)
  404a0b:	cs dec esp
  404a0d:	jbe    0x4049b0
  404a0f:	mov    bl,BYTE PTR [ebp-0x52]
  404a12:	retf   0xb149
  404a15:	icebp  
  404a16:	jns    0x4049ee
  404a18:	loope  0x4049f5
  404a1a:	sbb    eax,0xe86f682a
  404a1f:	into   
  404a20:	adc    al,0x2c
  404a22:	fld    TBYTE PTR [edi]
  404a24:	je     0x404a10
  404a26:	mov    dl,0xf5
  404a28:	mov    BYTE PTR [esi+ebp*2+0x73],bl
  404a2c:	cs mov ecx,0xd781a7d5
  404a32:	add    dl,BYTE PTR [esi+eiz*1+0x6b]
  404a36:	ss (bad) 
  404a3a:	jmp    0xbc115192
  404a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a40:	cmovle esi,DWORD PTR [eax]
  404a43:	sbb    eax,0xae9a9a47
  404a48:	aam    0x93
  404a4a:	bound  edx,QWORD PTR [ebp+0x71]
  404a4d:	pop    ebx
  404a4e:	and    al,cl
  404a50:	and    eax,0xafdda6ac
  404a55:	jno    0x404a64
  404a57:	pop    edi
  404a58:	add    BYTE PTR [edx-0x24],dl
  404a5b:	mov    ds:0x1a1c0a5a,al
  404a60:	mov    DWORD PTR [ecx-0x374cef3f],esp
  404a66:	in     al,0xf5
  404a68:	push   ss
  404a69:	out    0x48,al
  404a6b:	sar    bl,0x1f
  404a6e:	ret    0x3fa7
  404a71:	cmp    ch,dl
  404a73:	stos   BYTE PTR es:[edi],al
  404a74:	cmp    eax,0xffa2ede0
  404a79:	and    esi,edi
  404a7b:	cdq    
  404a7c:	out    dx,al
  404a7d:	lds    eax,FWORD PTR [edx+0x9f4308f]
  404a83:	repnz loopne 0x404a9b
  404a86:	imul   ebp,DWORD PTR [edx+esi*2],0x3c
  404a8a:	ja     0x404a3c
  404a8c:	jae    0x404af3
  404a8e:	xchg   ecx,eax
  404a8f:	ffree  st(7)
  404a91:	jbe    0x404a78
  404a93:	loope  0x404a26
  404a95:	push   es
  404a96:	push   ebx
  404a97:	enter  0x566,0x51
  404a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a9c:	mov    es,ebp
  404a9e:	fcmovu st,st(5)
  404aa0:	add    BYTE PTR [edx-0x5ee98b4],bh
  404aa6:	jmp    0xd56839cf
  404aab:	mov    ds:0x1cdcb364,al
  404ab0:	or     bl,dl
  404ab2:	xor    ch,BYTE PTR [edx]
  404ab4:	xchg   ebx,eax
  404ab5:	(bad)  
  404ab7:	scas   eax,DWORD PTR es:[edi]
  404ab8:	test   al,0x35
  404aba:	xor    bl,bl
  404abc:	inc    ebp
  404abd:	mov    al,0x8b
  404abf:	(bad)  
  404ac0:	fcomp  QWORD PTR ds:0xd46c6522
  404ac6:	xchg   ebx,eax
  404ac7:	jge    0x404b2d
  404ac9:	xor    al,0xe0
  404acb:	jp     0x404b16
  404acd:	xor    bl,0x4c
  404ad0:	in     eax,dx
  404ad1:	jg     0x404b42
  404ad3:	int    0xa0
  404ad5:	sti    
  404ad6:	jle    0x404ab7
  404ad8:	mov    ebx,es
  404ada:	adc    DWORD PTR [edi-0x2c7872ff],0x698dcea9
  404ae4:	(bad)  
  404ae5:	cld    
  404ae6:	in     eax,dx
  404ae7:	jg     0x404abe
  404ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aea:	fsincos 
  404aec:	xor    eax,0xec71cc33
  404af1:	push   ebx
  404af2:	pop    ds
  404af3:	cmp    BYTE PTR [esi-0x61e3add5],ah
  404af9:	mov    ds:0x5a2be225,al
  404afe:	test   BYTE PTR [edi-0x75],0xb5
  404b02:	(bad)  
  404b03:	fdivrp st(2),st
  404b05:	and    esp,esp
  404b07:	int3   
  404b08:	inc    ecx
  404b09:	sub    bl,BYTE PTR [esi+0x118b9cb8]
  404b0f:	push   esp
  404b10:	dec    ecx
  404b11:	xchg   esp,eax
  404b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b13:	jno    0x404b8f
  404b15:	inc    ecx
  404b16:	mov    eax,ds:0xce1a63fa
  404b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b1c:	loopne 0x404ac0
  404b1e:	push   esi
  404b1f:	rol    edi,0xb0
  404b22:	nop
  404b23:	outs   dx,DWORD PTR ds:[esi]
  404b24:	jo     0x404b42
  404b26:	pop    ss
  404b27:	dec    edx
  404b28:	icebp  
  404b29:	jecxz  0x404b15
  404b2b:	mov    bl,0x4d
  404b2e:	fsubr  st(0),st
  404b30:	or     esi,ebx
  404b32:	dec    edi
  404b33:	xchg   BYTE PTR [eax-0x1b],cl
  404b36:	mov    bh,0xf3
  404b38:	rol    DWORD PTR [edx],1
  404b3a:	inc    ebx
  404b3b:	sub    edx,DWORD PTR [ebp+0x26]
  404b3e:	jmp    0x404af7
  404b40:	or     esp,ebx
  404b42:	pushf  
  404b43:	imul   esp,DWORD PTR [eax+esi*8+0x3413854f],0x2d
  404b4b:	cld    
  404b4c:	outs   dx,BYTE PTR ds:[esi]
  404b4d:	int    0xc6
  404b4f:	nop
  404b50:	xlat   BYTE PTR ds:[ebx]
  404b51:	adc    DWORD PTR [ecx-0x7fa5183a],ebp
  404b57:	add    bl,bh
  404b59:	xchg   esi,eax
  404b5a:	enter  0xb02a,0xe8
  404b5e:	xchg   edx,eax
  404b5f:	clc    
  404b60:	int3   
  404b61:	xchg   ecx,eax
  404b62:	sbb    eax,0x875f50cf
  404b67:	aad    0x94
  404b69:	leave  
  404b6a:	or     ah,dl
  404b6c:	pop    ebp
  404b6d:	cmp    DWORD PTR [ebx],ebx
  404b6f:	mul    BYTE PTR [ebx-0x4d]
  404b72:	fdivr  DWORD PTR [esi]
  404b74:	mov    BYTE PTR [esi],ch
  404b76:	and    DWORD PTR [edi+eiz*4+0x57b9588f],0x64eac615
  404b81:	xchg   ecx,eax
  404b82:	jb     0x404bca
  404b84:	xchg   edi,eax
  404b85:	test   DWORD PTR [edx+edi*1+0x5a],eax
  404b89:	loop   0x404bea
  404b8b:	xchg   edi,eax
  404b8c:	mov    ebx,cs
  404b8e:	je     0x404b70
  404b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b91:	call   0xa98c:0x20f1fcb5
  404b98:	ins    WORD PTR es:[edi],dx
  404b9a:	push   edx
  404b9b:	lods   eax,DWORD PTR ds:[esi]
  404b9c:	or     al,0xc6
  404b9e:	xchg   ecx,eax
  404b9f:	lock bound ecx,QWORD PTR [ebp-0x57]
  404ba3:	and    DWORD PTR [ecx+ebp*8-0x713b2f51],ebp
  404baa:	pop    ds
  404bab:	in     eax,0x19
  404bad:	jae    0x404b84
  404baf:	inc    ebx
  404bb0:	test   eax,0x681e8d96
  404bb5:	push   esi
  404bb6:	repz js 0x404bca
  404bb9:	sub    ebp,DWORD PTR fs:[ebp-0x73dc5116]
  404bc0:	arpl   WORD PTR [ebp+eax*4-0x5b],cx
  404bc4:	sahf   
  404bc5:	add    al,0x66
  404bc7:	(bad)  
  404bc8:	cmp    dl,BYTE PTR [esi+0x2f020d03]
  404bce:	fmul   QWORD PTR [eax]
  404bd0:	xor    edi,esi
  404bd2:	or     ch,BYTE PTR [ecx-0x37]
  404bd5:	nop
  404bd6:	pop    eax
  404bd7:	mov    dl,0xb5
  404bd9:	jno    0x404bab
  404bdb:	mov    eax,0xc7fff41d
  404be0:	add    al,0x6d
  404be2:	dec    esi
  404be3:	ds out 0x55,al
  404be6:	push   ecx
  404be7:	idiv   BYTE PTR [edi-0x80]
  404bea:	cmp    al,0x49
  404bec:	scas   eax,DWORD PTR es:[edi]
  404bed:	xor    al,0x8a
  404bef:	cmp    esp,DWORD PTR [edx]
  404bf1:	enter  0x437b,0xf
  404bf5:	mov    ah,0xc4
  404bf7:	xor    eax,0x1298d80
  404bfc:	inc    ebx
  404bfd:	jns    0x404beb
  404bff:	aam    0x43
  404c01:	cmp    al,BYTE PTR [eax-0x3e]
  404c04:	pop    edx
  404c05:	loop   0x404bf5
  404c07:	mov    ebp,0x2d9f97ab
  404c0c:	out    dx,al
  404c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0e:	loopne 0x404ba8
  404c10:	mov    gs,WORD PTR [esi+0x2a]
  404c13:	dec    eax
  404c14:	or     eax,0x2e32ea69
  404c19:	mov    cl,0x8b
  404c1b:	int    0xd8
  404c1d:	xchg   ebp,eax
  404c1e:	mov    dl,0x1c
  404c20:	mov    ecx,0x20b2916a
  404c25:	clc    
  404c26:	sbb    eax,0x2d6136af
  404c2b:	repz hlt 
  404c2d:	ja     0x404bfc
  404c2f:	fsub   QWORD PTR [ebp-0x137320bf]
  404c35:	fucomi st,st(6)
  404c37:	mov    ds:0x26f5ce90,eax
  404c3c:	jbe    0x404bc8
  404c3e:	sub    DWORD PTR [edx+0xb47db5d],edx
  404c44:	jns    0x404beb
  404c46:	or     ebp,DWORD PTR [ebx+0x54]
  404c49:	stc    
  404c4a:	es pop ds
  404c4c:	sar    DWORD PTR [edx],cl
  404c4e:	jno    0x404c86
  404c50:	add    al,0x84
  404c52:	test   eax,0x35c11daa
  404c57:	ins    BYTE PTR es:[edi],dx
  404c58:	lea    ebp,[edi-0x33]
  404c5b:	data16 clc 
  404c5d:	mov    ds:0xaa5c94a5,al
  404c62:	pop    ebp
  404c63:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404c65:	dec    edx
  404c66:	dec    esp
  404c67:	jne    0x404c59
  404c69:	daa    
  404c6a:	push   cs
  404c6b:	or     eax,0xf8201c10
  404c70:	ja     0x404c8b
  404c72:	push   esi
  404c73:	dec    ecx
  404c74:	dec    edx
  404c75:	icebp  
  404c76:	cmp    al,0x62
  404c78:	popf   
  404c79:	test   BYTE PTR [ecx],0xb8
  404c7c:	rol    dh,1
  404c7e:	les    ebx,FWORD PTR [esi+0x212cb4ed]
  404c84:	popf   
  404c85:	mov    al,0x22
  404c87:	cmp    eax,0x18bd6f61
  404c8c:	add    DWORD PTR [esp+ebp*1],ecx
  404c8f:	push   esp
  404c90:	popf   
  404c91:	(bad)  
  404c92:	cmp    DWORD PTR [esi-0x18],edi
  404c95:	ds inc esi
  404c97:	cmp    dl,BYTE PTR [esi+0x63]
  404c9a:	mov    al,ds:0xd9dd8b9
  404c9f:	push   es
  404ca0:	adc    eax,0x69e8f58f
  404ca5:	pop    ebp
  404ca6:	ins    DWORD PTR es:[edi],dx
  404ca7:	jg     0x404cf4
  404ca9:	fcmovbe st,st(6)
  404cab:	mov    bl,0xc0
  404cad:	lock mov ah,0x1c
  404cb0:	and    BYTE PTR [esi-0x16],ah
  404cb3:	jmp    0x1b5c1251
  404cb8:	ret    
  404cb9:	ret    0xf5d3
  404cbc:	test   DWORD PTR [ebp-0x3f],0xa02e8155
  404cc3:	xor    ch,BYTE PTR [eax+0x36]
  404cc6:	lahf   
  404cc7:	sub    bh,dh
  404cc9:	aam    0x99
  404ccb:	mov    ds:0x20184423,al
  404cd0:	mov    esp,0x4869164f
  404cd5:	nop
  404cd6:	outs   dx,DWORD PTR ds:[esi]
  404cd7:	loopne 0x404cb6
  404cd9:	jb     0x404ca8
  404cdb:	(bad)  
  404cdc:	jl     0x404cd8
  404cde:	sbb    cl,ah
  404ce0:	popa   
  404ce1:	clc    
  404ce2:	pop    esp
  404ce3:	jmp    FWORD PTR [ecx-0x5beabdc9]
  404ce9:	inc    edx
  404cea:	stos   DWORD PTR es:[edi],eax
  404ceb:	inc    eax
  404cec:	cli    
  404ced:	xlat   BYTE PTR ds:[ebx]
  404cee:	or     BYTE PTR [ebx+0x69],0x27
  404cf2:	int3   
  404cf3:	xlat   BYTE PTR ds:[ebx]
  404cf4:	mov    al,0xa0
  404cf6:	shl    BYTE PTR [ecx+0x591bba9a],1
  404cfc:	inc    ebp
  404cfd:	dec    ebx
  404cfe:	sbb    al,0x20
  404d00:	inc    esp
  404d01:	xor    edx,ebp
  404d03:	dec    ebx
  404d04:	outs   dx,BYTE PTR ds:[esi]
  404d05:	hlt    
  404d06:	xchg   ebx,eax
  404d07:	mov    dh,0x75
  404d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d0a:	sbb    ebx,esp
  404d0c:	xchg   esp,eax
  404d0d:	jle    0x404d5b
  404d0f:	and    BYTE PTR [edi-0x627d5b22],ah
  404d15:	cs mov al,0xe
  404d18:	inc    al
  404d1a:	or     al,BYTE PTR [ebx-0x7e7eb0c4]
  404d20:	or     BYTE PTR [edi+0x42e161d0],bh
  404d26:	out    0x1e,eax
  404d28:	dec    edi
  404d29:	gs dec esi
  404d2b:	jmp    0x99ef:0xe702079b
  404d32:	push   ebp
  404d33:	jge    0x404da0
  404d35:	scas   al,BYTE PTR es:[edi]
  404d36:	push   es
  404d37:	ret    0xdaa5
  404d3a:	test   eax,0x2da149cf
  404d3f:	xor    DWORD PTR [esp+ecx*1+0x5b],edx
  404d43:	pop    es
  404d44:	dec    esi
  404d45:	cmp    al,0xbf
  404d47:	lahf   
  404d48:	mov    ah,0xd8
  404d4a:	pop    ss
  404d4b:	lahf   
  404d4c:	sub    BYTE PTR [ecx+0xa4cb1da],ah
  404d52:	neg    BYTE PTR [ebx]
  404d54:	sbb    BYTE PTR [edi],bl
  404d56:	jge    0x404d84
  404d58:	pop    ebx
  404d59:	sbb    bl,dl
  404d5b:	and    esi,esp
  404d5d:	iret   
  404d5e:	jmp    0x92e52924
  404d63:	cmp    eax,DWORD PTR gs:[edx]
  404d66:	sub    BYTE PTR [ecx],dh
  404d68:	xchg   esi,eax
  404d69:	and    al,0xf4
  404d6b:	dec    esp
  404d6c:	push   edx
  404d6d:	into   
  404d6e:	xor    ch,BYTE PTR [edx-0x2f]
  404d71:	push   edx
  404d72:	ds and eax,0x449c288
  404d78:	push   edi
  404d79:	fistp  QWORD PTR [ecx+0x1a]
  404d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7d:	repnz push es
  404d7f:	sbb    al,0xfb
  404d81:	add    eax,edi
  404d83:	cmp    esi,DWORD PTR [esi-0x2bcd98ab]
  404d89:	enter  0x2c85,0x55
  404d8d:	push   0x4a9bbd40
  404d92:	xor    BYTE PTR [edi+eiz*8-0x352e61bd],bl
  404d99:	out    dx,al
  404d9a:	push   0x30
  404d9c:	in     al,dx
  404d9d:	or     DWORD PTR [edx+0x734a8147],0x42
  404da4:	lds    eax,FWORD PTR [esi-0x303d2efc]
  404daa:	leave  
  404dab:	scas   al,BYTE PTR es:[edi]
  404dac:	xchg   edx,eax
  404dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dae:	sub    ebx,DWORD PTR [edi+0x78]
  404db1:	mov    bl,0x5a
  404db3:	jmp    0x39ca:0xc155402b
  404dba:	pop    esp
  404dbb:	dec    esi
  404dbc:	mov    dl,0x35
  404dbf:	xchg   esi,eax
  404dc0:	xchg   ebx,esi
  404dc2:	dec    esp
  404dc3:	and    esi,esi
  404dc5:	loop   0x404de7
  404dc7:	pop    ecx
  404dc8:	and    al,0xdd
  404dca:	adc    bh,dh
  404dcc:	mov    DWORD PTR [eax-0x5a],eax
  404dcf:	mov    BYTE PTR [esi+eiz*8],0xdf
  404dd3:	xchg   dl,ah
  404dd5:	mov    ecx,0x7c3c4d53
  404dda:	fbstp  TBYTE PTR [edx]
  404ddc:	push   edi
  404ddd:	and    bh,0x40
  404de0:	inc    ebx
  404de1:	or     eax,0x1d010839
  404de6:	jl     0x404daa
  404de8:	jnp    0x404e0e
  404dea:	inc    ebx
  404deb:	cmp    dh,BYTE PTR [ecx+ebx*2]
  404dee:	test   BYTE PTR [edi],bh
  404df0:	ret    0x749e
  404df3:	test   BYTE PTR [edi+0x3a7d6939],dl
  404df9:	mov    BYTE PTR [eax+0x5f],dh
  404dfc:	mov    edx,0xbf4412a1
  404e01:	cwde   
  404e02:	ret    
  404e03:	and    ecx,esp
  404e05:	add    DWORD PTR [ebx+edi*1-0x46],ecx
  404e09:	xor    al,0xb1
  404e0b:	push   esp
  404e0c:	sub    eax,0x3816da85
  404e11:	adc    edi,DWORD PTR fs:[ecx+esi*2]
  404e15:	pop    esi
  404e16:	leave  
  404e17:	mov    bl,0x74
  404e19:	je     0x404e3f
  404e1b:	(bad)  
  404e1c:	sub    eax,0x57c950f3
  404e21:	rcr    BYTE PTR [ebp+0x19],cl
  404e24:	xlat   BYTE PTR ds:[ebx]
  404e25:	sub    ah,BYTE PTR [edi-0x24]
  404e28:	dec    ebx
  404e29:	inc    edi
  404e2a:	sub    DWORD PTR [esi],esp
  404e2c:	sbb    edi,DWORD PTR [eax-0x28]
  404e2f:	mov    edx,0xbb7d8b44
  404e34:	not    bl
  404e36:	and    al,0xc4
  404e38:	jbe    0x404ea9
  404e3a:	hlt    
  404e3b:	stc    
  404e3c:	sbb    dh,dl
  404e3e:	arpl   di,ax
  404e40:	xchg   ebp,eax
  404e41:	jl     0x404e07
  404e43:	pop    ds
  404e44:	push   esp
  404e45:	mov    bl,0x63
  404e47:	jmp    0x404de2
  404e49:	fist   DWORD PTR [ebx]
  404e4b:	jmp    0xfd749ddf
  404e50:	xchg   BYTE PTR [esi+0x57],cl
  404e53:	and    eax,0xb0aef920
  404e58:	jne    0x404e09
  404e5a:	outs   dx,BYTE PTR ds:[esi]
  404e5b:	pusha  
  404e5c:	jae    0x404e92
  404e5e:	in     eax,dx
  404e5f:	enter  0x1795,0x2e
  404e63:	xor    eax,0xce5720e0
  404e68:	adc    DWORD PTR [ebx+0x4f3a47fc],edx
  404e6e:	pop    esp
  404e6f:	sbb    al,BYTE PTR [esi]
  404e71:	stos   BYTE PTR es:[edi],al
  404e72:	imul   edx,DWORD PTR [esi+ebx*1],0x5f
  404e76:	and    DWORD PTR [edx],0x65
  404e79:	jbe    0x404e6c
  404e7b:	jne    0x404e6e
  404e7d:	hlt    
  404e7e:	dec    esp
  404e7f:	sbb    cl,BYTE PTR [ebp+0x6aafc7b5]
  404e85:	xchg   esp,eax
  404e86:	jnp    0x404e59
  404e88:	jmp    0x1008:0x3589b347
  404e8f:	fwait
  404e90:	shl    BYTE PTR [edx+ebx*4+0xb18b956],0x60
  404e98:	int3   
  404e99:	addr16 inc edi
  404e9b:	pusha  
  404e9c:	je     0x404e41
  404e9e:	mov    cl,dh
  404ea0:	add    dh,BYTE PTR [edx]
  404ea2:	popa   
  404ea3:	fisub  DWORD PTR [edx+ebp*2+0x245e7014]
  404eaa:	xchg   ebx,eax
  404eab:	out    dx,eax
  404eac:	daa    
  404ead:	xor    eax,0xae8c4a8a
  404eb2:	outs   dx,BYTE PTR ds:[esi]
  404eb3:	mov    edi,0xe6756027
  404eb8:	ins    BYTE PTR es:[edi],dx
  404eb9:	pop    edi
  404eba:	in     al,0x77
  404ebc:	mov    dl,0xa6
  404ebe:	dec    eax
  404ebf:	add    eax,0x4b4ee83c
  404ec4:	pop    esi
  404ec5:	xchg   ebx,eax
  404ec6:	loope  0x404e4b
  404ec8:	pop    esp
  404ec9:	ret    
  404eca:	test   esp,esp
  404ecc:	and    BYTE PTR [esi-0x3a],ah
  404ecf:	arpl   WORD PTR [esi+edi*8+0x53b83d66],bx
  404ed6:	push   eax
  404ed7:	pop    edi
  404ed8:	or     eax,0x7ba9242c
  404edd:	jecxz  0x404ea0
  404edf:	jb     0x404ef0
  404ee1:	xor    DWORD PTR [ebx-0x129f523],ebx
  404ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ee8:	xchg   ebx,eax
  404ee9:	pop    ds
  404eea:	in     eax,0xfa
  404eec:	mov    edx,0xf15d3dc9
  404ef1:	add    al,0xe2
  404ef3:	adc    BYTE PTR [ebp+0x3b082a41],ch
  404ef9:	inc    eax
  404efa:	sti    
  404efb:	clc    
  404efc:	daa    
  404efd:	ins    BYTE PTR es:[edi],dx
  404efe:	fsub   st,st(1)
  404f00:	or     al,0xd9
  404f02:	gs je  0x404f1c
  404f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f06:	jbe    0x404f5d
  404f08:	sbb    al,0x89
  404f0a:	cdq    
  404f0b:	loope  0x404ea3
  404f0d:	push   esi
  404f0e:	dec    esi
  404f0f:	out    0xba,eax
  404f11:	cmp    al,BYTE PTR [eax+eax*2+0x78da78e1]
  404f18:	xchg   BYTE PTR [eax+0x0],al
  404f1b:	adc    eax,0x3f45c121
  404f20:	xchg   ecx,eax
  404f21:	pop    eax
  404f22:	cmp    DWORD PTR [edi-0x68],ebx
  404f25:	popf   
  404f26:	adc    eax,0x8e187293
  404f2b:	(bad)  
  404f2c:	jae    0x404f6b
  404f2e:	sub    eax,0xae064eac
  404f33:	xchg   ebp,eax
  404f34:	cmc    
  404f35:	dec    BYTE PTR [edx+0x513ed86]
  404f3b:	sbb    dl,dh
  404f3d:	cld    
  404f3e:	call   0x74bf:0x61390ec7
  404f45:	fidiv  WORD PTR [ecx+0x1]
  404f48:	cdq    
  404f49:	mov    dh,0xd
  404f4b:	push   ecx
  404f4c:	dec    esi
  404f4d:	sub    dl,BYTE PTR [esi]
  404f4f:	jmp    0x7a2ffbd3
  404f54:	shl    DWORD PTR [edx+0x6f41c8b5],0x39
  404f5b:	fst    QWORD PTR [ecx-0x914f008]
  404f61:	mov    al,0x8
  404f63:	aam    0x79
  404f65:	push   eax
  404f66:	cmp    DWORD PTR [ecx+0x7e],0xff8f0a3f
  404f6d:	xor    DWORD PTR [edx-0x74ed327b],eax
  404f73:	mov    esp,0x57e8bb2d
  404f78:	push   esp
  404f79:	pop    ss
  404f7a:	lods   eax,DWORD PTR ds:[esi]
  404f7b:	push   ebp
  404f7c:	pop    ds
  404f7d:	cmp    eax,0x48
  404f80:	call   DWORD PTR [ebx+0x5f]
  404f83:	sbb    DWORD PTR [edi],esi
  404f85:	test   BYTE PTR [ebx+0x7d8bfc45],cl
  404f8b:	clc    
  404f8c:	xor    edi,edx
  404f8e:	add    edi,esi
  404f90:	mov    esi,DWORD PTR [ebp+0x8]
  404f93:	imul   edi,ecx
  404f96:	mov    ebx,DWORD PTR [ebp+0xc]
  404f99:	xor    eax,edx
  404f9b:	add    eax,ecx
  404f9d:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  404fa4:	mov    BYTE PTR [edi+esi*1],al
  404fa7:	mov    eax,DWORD PTR [ebp-0x8]
  404faa:	mov    esi,DWORD PTR [ebp+0x10]
  404fad:	xor    eax,edx
  404faf:	xor    ebx,ebx
  404fb1:	add    esi,0xfabdbee9
  404fb7:	adc    ebx,0xffffffff
  404fba:	lea    ecx,[ecx+eax*1+0x3272e0]
  404fc1:	xor    edi,edi
  404fc3:	xor    esi,0x8a29a12b
  404fc9:	xor    ebx,0x0
  404fcc:	mov    eax,ecx
  404fce:	add    eax,0xfabdbee9
  404fd3:	adc    edi,0xffffffff
  404fd6:	xor    eax,0x8a29a12b
  404fdb:	xor    edi,0x0
  404fde:	cmp    eax,esi
  404fe0:	jne    0x402c2e
  404fe6:	cmp    edi,ebx
  404fe8:	jne    0x402c2e
  404fee:	mov    eax,0xf89c85b8
  404ff3:	pop    ebx
  404ff4:	pop    edi
  404ff5:	pop    esi
  404ff6:	leave  
  404ff7:	ret    0xc
  404ffa:	push   ebp
  404ffb:	mov    ebp,esp
  404ffd:	push   ecx
  404ffe:	sub    DWORD PTR ds:0x429018,ecx
  405004:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40500b:	mov    eax,DWORD PTR [ebp+0x8]
  40500e:	movsx  eax,BYTE PTR [eax]
  405011:	or     ecx,edx
  405013:	mov    edx,0x3272e0
  405018:	sub    ecx,0x5218
  40501e:	sub    eax,edx
  405020:	mov    ecx,DWORD PTR ds:0x42d01c
  405026:	xor    DWORD PTR ds:0x429008,ecx
  40502c:	mov    ecx,0x7510899
  405031:	sbb    DWORD PTR ds:0x42d01c,0x42b014
  40503b:	xor    eax,ecx
  40503d:	mov    DWORD PTR ds:0x429010,0x6785
  405047:	cmp    eax,0xf89c85f4
  40504c:	mov    DWORD PTR ds:0x42c004,0x3ff8
  405056:	jne    0x4050b5
  40505c:	xor    DWORD PTR ds:0x42c000,0xe2d
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	and    DWORD PTR ds:0x42c00c,0x622d
  405073:	push   esi
  405074:	mov    esi,DWORD PTR [ebp+0x8]
  405077:	xor    DWORD PTR ds:0x42b000,0x42a008
  405081:	add    esi,DWORD PTR [eax+0x3c]
  405084:	mov    DWORD PTR [ebp+0x8],esi
  405087:	and    eax,DWORD PTR ds:0x42c010
  40508d:	mov    eax,DWORD PTR [ebp-0x4]
  405090:	mov    esi,DWORD PTR ds:0x42b000
  405096:	add    DWORD PTR ds:0x42a010,esi
  40509c:	mov    esi,DWORD PTR [ebp+0x8]
  40509f:	xor    eax,ecx
  4050a1:	add    eax,edx
  4050a3:	cmp    DWORD PTR [esi+0x54],eax
  4050a6:	pop    esi
  4050a7:	je     0x4050b5
  4050ad:	mov    eax,DWORD PTR [ebp+0x8]
  4050b0:	jmp    0x4050bc
  4050b5:	mov    eax,DWORD PTR [ebp-0x4]
  4050b8:	xor    eax,ecx
  4050ba:	add    eax,edx
  4050bc:	leave  
  4050bd:	ret    0x4
  4050c0:	push   ebp
  4050c1:	mov    ebp,esp
  4050c3:	sub    esp,0x40
  4050c6:	sub    DWORD PTR ds:0x429028,0x42d01c
  4050d0:	push   ebx
  4050d1:	push   esi
  4050d2:	push   edi
  4050d3:	lea    eax,[ebp-0x1c]
  4050d6:	push   eax
  4050d7:	lea    eax,[ebp-0x18]
  4050da:	adc    DWORD PTR ds:0x42c014,0x5fe2
  4050e4:	jmp    0x407491
  4050e9:	outs   dx,DWORD PTR ds:[esi]
  4050ea:	or     dh,BYTE PTR ds:0x57fbfb4c
  4050f0:	or     eax,0x82990c06
  4050f5:	mov    al,ds:0x4c31ba99
  4050fa:	pop    edi
  4050fb:	jp     0x405177
  4050fd:	jmp    0x86e7:0x407a7a5f
  405104:	aas    
  405105:	xchg   ebx,eax
  405106:	out    0x56,al
  405108:	es xchg ebx,eax
  40510a:	sub    DWORD PTR [ebx-0x7c],ecx
  40510d:	xchg   ebp,eax
  40510e:	data16 daa 
  405110:	imul   esi,DWORD PTR [ebx+esi*8+0xf],0x5f52cbaf
  405118:	mov    ebx,0x25578ba2
  40511d:	adc    cl,bh
  40511f:	repnz pop ecx
  405121:	hlt    
  405122:	ins    BYTE PTR es:[edi],dx
  405123:	mov    ds:0xcd2e7050,eax
  405128:	mov    al,ds:0xac5802e5
  40512d:	push   cs
  40512e:	sbb    eax,0x71ea513
  405133:	ror    DWORD PTR [edi],cl
  405135:	push   edi
  405136:	dec    edi
  405137:	stos   BYTE PTR es:[edi],al
  405138:	bound  ecx,QWORD PTR [eax+0x1a975744]
  40513e:	leave  
  40513f:	mov    al,ds:0x259494b6
  405144:	repz xor eax,0xad1d5255
  40514a:	gs push esi
  40514c:	push   esi
  40514d:	and    eax,0xbc050bdb
  405152:	and    cl,BYTE PTR [edi+0x55]
  405155:	outs   dx,BYTE PTR ds:[esi]
  405156:	jne    0x4051b5
  405158:	jle    0x405180
  40515a:	std    
  40515b:	cmp    BYTE PTR [ebp+0x4fab394e],al
  405161:	inc    eax
  405162:	mov    ch,0x10
  405164:	jmp    FWORD PTR [ebx+edi*2]
  405167:	icebp  
  405168:	and    DWORD PTR [ecx+0x6f],eax
  40516b:	sbb    BYTE PTR [ecx-0x36],bh
  40516e:	add    bh,BYTE PTR [edx]
  405170:	aam    0x26
  405172:	mov    eax,0x87f176e8
  405177:	mov    eax,ds:0x3a3fccd6
  40517c:	mov    al,0xf4
  40517e:	call   0x54eee453
  405183:	dec    edx
  405184:	pop    eax
  405185:	sub    eax,ecx
  405187:	cs inc esp
  405189:	sub    BYTE PTR fs:[ecx+0x6000645f],cl
  405190:	popf   
  405191:	out    0xe1,eax
  405193:	pop    ss
  405194:	jns    0x405197
  405196:	cmp    BYTE PTR [eax-0x7d],cl
  405199:	outs   dx,BYTE PTR ds:[esi]
  40519a:	fcmovu st,st(6)
  40519c:	loop   0x40519d
  40519e:	lahf   
  40519f:	mov    eax,ds:0x5a58440c
  4051a4:	jo     0x40517d
  4051a6:	jo     0x4051b3
  4051a8:	sbb    DWORD PTR [edx-0x3],esi
  4051ab:	out    0x81,al
  4051ad:	add    edi,DWORD PTR [ebx+0x2d6fa3e3]
  4051b3:	fmul   QWORD PTR [esi+0x79]
  4051b6:	lds    ecx,FWORD PTR [ebp-0x18]
  4051b9:	mov    ebx,0x15f53102
  4051be:	or     bh,0x6f
  4051c1:	in     eax,dx
  4051c2:	neg    bh
  4051c4:	inc    edx
  4051c5:	inc    edi
  4051c6:	add    BYTE PTR [edx+0x218fb8c3],bl
  4051cc:	xor    edx,DWORD PTR [edi-0x41d17fe2]
  4051d2:	add    ch,BYTE PTR [esi]
  4051d4:	push   eax
  4051d5:	iret   
  4051d6:	in     al,0xc6
  4051d8:	push   ecx
  4051d9:	test   DWORD PTR [edx+0x795b3144],edi
  4051df:	gs in  eax,dx
  4051e1:	and    eax,0x47ea796f
  4051e6:	xor    cl,dl
  4051e8:	ins    BYTE PTR es:[edi],dx
  4051e9:	mov    gs,ebp
  4051eb:	sub    dh,BYTE PTR [ebx-0x73]
  4051ee:	push   cs
  4051ef:	adc    bh,al
  4051f1:	stos   BYTE PTR es:[edi],al
  4051f2:	jo     0x40523e
  4051f4:	cmp    cl,BYTE PTR [ebp+eiz*2+0x3221a7b6]
  4051fb:	push   0xa137ae96
  405200:	push   esi
  405201:	jmp    0x5eb:0xc8fbb4ab
  405208:	push   eax
  405209:	mov    edx,0xc5fa7d23
  40520e:	adc    eax,0x37085b3f
  405213:	std    
  405214:	mov    ebx,0xde9c98a7
  405219:	xor    BYTE PTR [edi],bh
  40521b:	je     0x4051df
  40521d:	int3   
  40521e:	test   al,0x6c
  405220:	popf   
  405221:	js     0x4051da
  405223:	mov    edi,0xb0d95df8
  405228:	push   esp
  405229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40522a:	test   dl,dh
  40522c:	push   ss
  40522d:	add    BYTE PTR ss:[ebx-0x2e166684],bl
  405234:	lea    eax,[esi]
  405236:	js     0x4051d8
  405238:	ret    0x34e0
  40523b:	call   0x3c0e4143
  405240:	out    dx,al
  405241:	sub    DWORD PTR [edx-0x268e21e1],ebx
  405247:	lea    edx,[ebx-0x4fdb3a3]
  40524d:	addr16 int 0x91
  405250:	lods   al,BYTE PTR ds:[esi]
  405251:	outs   dx,BYTE PTR ds:[esi]
  405252:	jecxz  0x40524d
  405254:	sbb    bh,BYTE PTR [edi-0xc]
  405257:	dec    edx
  405258:	xor    al,0x8a
  40525a:	push   cs
  40525b:	data16 fbstp TBYTE PTR [edx]
  40525e:	mov    bl,0x86
  405260:	fstp   TBYTE PTR [ecx+0x55]
  405263:	aam    0x10
  405265:	lods   al,BYTE PTR ds:[esi]
  405266:	imul   ebp,ecx,0xffffffcf
  405269:	adc    ch,bh
  40526b:	mov    ah,0x10
  40526d:	fsub   DWORD PTR [ebp+0x58]
  405270:	dec    edi
  405271:	fucomp st(7)
  405273:	out    0x46,al
  405275:	aam    0xa3
  405277:	aam    0xba
  405279:	cs jns 0x40521d
  40527c:	mov    dh,0xa3
  40527e:	pushf  
  40527f:	mov    esi,0x83acc9fb
  405284:	jae    0x405209
  405286:	popa   
  405287:	jle    0x40528f
  405289:	or     al,BYTE PTR [edi]
  40528b:	jno    0x405248
  40528d:	dec    eax
  40528e:	jbe    0x405293
  405290:	jb     0x405282
  405292:	lahf   
  405293:	pop    ecx
  405294:	adc    al,0xe0
  405296:	sub    eax,0x7c23b3e3
  40529b:	daa    
  40529c:	sbb    ah,bh
  40529e:	sbb    ah,BYTE PTR [esi-0x30]
  4052a1:	out    dx,eax
  4052a2:	stos   BYTE PTR es:[edi],al
  4052a3:	ror    BYTE PTR [eax],cl
  4052a5:	scas   eax,DWORD PTR es:[edi]
  4052a6:	sbb    al,0xed
  4052a8:	add    ebp,edi
  4052aa:	xor    BYTE PTR [ebx+0x24b8887b],dh
  4052b0:	xchg   esp,eax
  4052b1:	cmp    eax,edi
  4052b3:	(bad)  
  4052b4:	xchg   esi,eax
  4052b5:	push   ebx
  4052b6:	aad    0x82
  4052b8:	cmp    ebp,DWORD PTR [edx+0x41]
  4052bb:	xor    esp,DWORD PTR [ebp+0xdbb71f8]
  4052c1:	jle    0x40527a
  4052c3:	pop    edi
  4052c4:	lock bound eax,QWORD PTR [edx+edx*8+0x1]
  4052c9:	pushf  
  4052ca:	mov    esp,0x91fbc832
  4052cf:	and    al,0x46
  4052d1:	xor    edi,ecx
  4052d3:	pop    ds
  4052d4:	jmp    FWORD PTR fs:[eax]
  4052d7:	mov    dh,0x8
  4052d9:	int3   
  4052da:	add    BYTE PTR [edx-0x3a],cl
  4052dd:	ins    DWORD PTR es:[edi],dx
  4052de:	scas   eax,DWORD PTR es:[edi]
  4052df:	jmp    0xa6f92d28
  4052e4:	out    0x17,eax
  4052e6:	ja     0x405360
  4052e8:	retf   0xe363
  4052eb:	(bad)  
  4052ec:	ds mov ecx,0x61a9ad46
  4052f2:	popf   
  4052f3:	mov    eax,ds:0x6f5557aa
  4052f8:	xchg   edx,eax
  4052f9:	mov    dh,ch
  4052fb:	nop
  4052fc:	push   cs
  4052fd:	dec    ecx
  4052fe:	push   0x4a4be397
  405303:	or     ch,BYTE PTR ds:0x4e009d0d
  405309:	or     ch,BYTE PTR [edi-0xea3cb8f]
  40530f:	retf   
  405310:	stc    
  405311:	jo     0x405322
  405313:	jle    0x405364
  405315:	xor    esp,DWORD PTR [edi+0x38d6352b]
  40531b:	call   0x5474:0x562843bb
  405322:	in     al,0x1e
  405324:	adc    dl,ah
  405326:	pop    edx
  405327:	mov    DWORD PTR [edi],esi
  405329:	mov    dl,0x48
  40532b:	call   0x12fabc36
  405330:	push   edi
  405331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405332:	dec    eax
  405333:	push   0x1dbdb645
  405338:	adc    esp,DWORD PTR [edx-0x5f]
  40533b:	mov    dl,0x90
  40533d:	xchg   esi,eax
  40533e:	popf   
  40533f:	mov    al,0x2
  405341:	inc    ebx
  405342:	test   al,0xcb
  405344:	sub    ebx,ecx
  405346:	iret   
  405347:	or     eax,0xae09aee1
  40534c:	and    al,0xc5
  40534e:	out    dx,al
  40534f:	and    BYTE PTR [bp-0x62],bh
  405353:	fstp   st(0)
  405355:	and    al,0x16
  405357:	stos   BYTE PTR es:[edi],al
  405358:	mov    eax,0x4750a5dd
  40535d:	pop    edi
  40535e:	pop    ss
  40535f:	or     ecx,edi
  405361:	xor    eax,0x7ac1f42c
  405366:	cmp    DWORD PTR [edx+0x55],ebp
  405369:	mov    cl,0xf4
  40536b:	pop    ebp
  40536c:	xchg   ecx,eax
  40536d:	xor    al,0x3c
  40536f:	and    esi,ebx
  405371:	clc    
  405372:	dec    esp
  405373:	mov    al,ds:0xbac083fd
  405378:	push   0x58
  40537a:	sar    BYTE PTR [esi+0x34],1
  40537d:	pop    edi
  40537e:	das    
  40537f:	push   edi
  405380:	mov    cl,0x40
  405382:	les    edx,FWORD PTR [ebx+0x4133013b]
  405388:	jae    0x405331
  40538a:	mov    bl,0x5d
  40538c:	nop
  40538d:	jmp    0x40532f
  40538f:	hlt    
  405390:	aam    0x43
  405392:	out    dx,al
  405393:	sbb    eax,0x4e981f
  405398:	and    cl,BYTE PTR [edi]
  40539a:	mul    BYTE PTR ss:[eax+0x4f]
  40539e:	and    WORD PTR [ebx+0x5e1843dc],bp
  4053a5:	adc    bl,BYTE PTR [ebp-0x267fa883]
  4053ab:	inc    ebp
  4053ac:	mov    ecx,0xc29584f6
  4053b1:	adc    eax,0x445d1521
  4053b6:	adc    esi,ecx
  4053b8:	pop    ebp
  4053b9:	pop    ecx
  4053ba:	or     al,0x3
  4053bc:	inc    ecx
  4053bd:	xchg   esp,eax
  4053be:	leave  
  4053bf:	outs   dx,DWORD PTR ds:[esi]
  4053c0:	sub    eax,0x5bef1534
  4053c5:	neg    DWORD PTR [eax+0x1c]
  4053c8:	icebp  
  4053c9:	add    ch,BYTE PTR [edx+0x287272fd]
  4053cf:	lds    esp,FWORD PTR [edi]
  4053d1:	and    BYTE PTR [ebx+ebp*4-0x3d54f2bd],ah
  4053d8:	shl    BYTE PTR cs:[ebx],1
  4053db:	aad    0xe
  4053dd:	add    edi,DWORD PTR [esi]
  4053df:	shl    ch,cl
  4053e1:	add    bl,BYTE PTR [edi]
  4053e3:	sahf   
  4053e4:	inc    ecx
  4053e5:	jle    0x4053e0
  4053e7:	adc    BYTE PTR cs:[edi],al
  4053ea:	adc    dh,al
  4053ec:	xlat   BYTE PTR ds:[ebx]
  4053ed:	lock push 0xd288fcd2
  4053f3:	and    cl,BYTE PTR [esi+0x1eca42f3]
  4053f9:	and    bh,BYTE PTR [di-0x7fad]
  4053fe:	xchg   ebx,eax
  4053ff:	rol    BYTE PTR [esi],cl
  405401:	cmp    dl,BYTE PTR [ebp+0x2526ae77]
  405407:	cli    
  405408:	lahf   
  405409:	jmp    0x6772:0x7f965a6e
  405410:	test   eax,0x2d0eff1e
  405415:	aas    
  405416:	mov    eax,ds:0xa6382f3c
  40541b:	ins    DWORD PTR es:[edi],dx
  40541c:	jo     0x405437
  40541e:	or     al,ch
  405420:	in     eax,0x3
  405422:	mov    al,ah
  405424:	pop    esp
  405425:	sbb    ah,dl
  405427:	sbb    esi,DWORD PTR [edi+0x7a]
  40542a:	xchg   edi,eax
  40542b:	inc    edi
  40542c:	cmp    eax,0x5ce331c2
  405431:	pop    edx
  405432:	xchg   ecx,eax
  405433:	mov    edi,0x574fbcb
  405438:	loopne 0x405491
  40543a:	fstp   TBYTE PTR [eax+0x30]
  40543d:	jae    0x4054a8
  40543f:	sti    
  405440:	mov    esi,0xabcce05b
  405445:	outs   dx,BYTE PTR ds:[esi]
  405446:	iret   
  405447:	push   ecx
  405448:	adc    DWORD PTR [esp+ebx*2+0x4f],0x3bd69a0f
  405450:	and    eax,ecx
  405452:	sahf   
  405453:	mov    WORD PTR [edi+eiz*1],?
  405456:	test   eax,0x33eeea2d
  40545b:	fwait
  40545c:	loope  0x405458
  40545e:	aad    0x7b
  405460:	push   ebp
  405461:	jp     0x4054aa
  405463:	mov    bh,0x80
  405465:	add    eax,0xe736b354
  40546a:	adc    edi,DWORD PTR [ebx+0x49]
  40546d:	jo     0x40548a
  40546f:	fist   DWORD PTR [ecx+0x1c]
  405472:	jns    0x405499
  405474:	dec    edi
  405475:	imul   ecx,DWORD PTR [ebx-0x49],0x59
  405479:	add    ebx,DWORD PTR [ebx]
  40547b:	xor    esp,DWORD PTR [ebp-0x78e65cf3]
  405481:	in     eax,0x54
  405483:	gs jge 0x405423
  405486:	inc    ebx
  405487:	cli    
  405488:	jbe    0x40544c
  40548a:	aaa    
  40548b:	sub    DWORD PTR [ecx-0x5c],esi
  40548e:	cli    
  40548f:	bound  esp,QWORD PTR [ebx-0x37037244]
  405495:	sbb    DWORD PTR [ecx],edi
  405497:	mov    eax,ds:0x6674d6c0
  40549c:	adc    BYTE PTR [edi+ecx*8-0x7c7e9c2],al
  4054a3:	or     edi,edx
  4054a5:	sub    esp,0xfffffffc
  4054a8:	or     BYTE PTR [ecx+0x5b4bc88e],ch
  4054ae:	aaa    
  4054af:	cmc    
  4054b0:	pop    DWORD PTR [ecx+0x3a]
  4054b3:	aad    0xe
  4054b5:	outs   dx,DWORD PTR ds:[esi]
  4054b6:	dec    bp
  4054b8:	cwde   
  4054b9:	cmp    DWORD PTR [edi],ebx
  4054bb:	jae    0x4054fc
  4054bd:	fisubr DWORD PTR ds:0x717d6364
  4054c3:	and    DWORD PTR [ebx],esp
  4054c5:	dec    ebx
  4054c6:	add    dh,bl
  4054c8:	dec    esi
  4054c9:	cdq    
  4054ca:	mov    BYTE PTR [ebp-0x60d11d31],dh
  4054d0:	push   0x256fc740
  4054d5:	data16 fdiv DWORD PTR [esi]
  4054d8:	pop    ebp
  4054d9:	sti    
  4054da:	scas   eax,DWORD PTR es:[edi]
  4054db:	repnz ror dl,1
  4054de:	cmp    al,0xda
  4054e0:	add    bl,ch
  4054e2:	mov    edx,0x189d3766
  4054e7:	mov    ecx,ecx
  4054e9:	fistp  DWORD PTR [ecx-0x2d5b807b]
  4054ef:	and    eax,0xba4e4a2c
  4054f4:	and    DWORD PTR [esp+eax*1-0x78],edi
  4054f8:	sti    
  4054f9:	mov    bl,0xe9
  4054fb:	dec    edx
  4054fc:	out    dx,al
  4054fd:	pop    es
  4054fe:	fisubr DWORD PTR [edi-0xf6c598c]
  405504:	pop    edi
  405505:	out    dx,al
  405506:	push   ds
  405507:	push   eax
  405508:	bound  edx,QWORD PTR [eax+0x6791b91b]
  40550e:	dec    ebp
  40550f:	jb     0x4054fe
  405511:	fs gs pop esi
  405514:	test   BYTE PTR [ecx+0x39c75ef6],cl
  40551a:	push   esi
  40551b:	inc    BYTE PTR [ebx+0x53]
  40551e:	sbb    BYTE PTR [esi+0x5e072dec],al
  405524:	and    DWORD PTR [ebp-0x60],ecx
  405527:	push   ebx
  405528:	scas   eax,DWORD PTR es:[edi]
  405529:	xchg   esp,eax
  40552a:	outs   dx,DWORD PTR ds:[esi]
  40552b:	cmp    al,0x2a
  40552d:	imul   ebx,DWORD PTR [edx+0x738b1504],0xffffffb8
  405534:	arpl   sp,di
  405536:	fcmovu st,st(0)
  405538:	push   ecx
  405539:	popa   
  40553a:	test   eax,0x12271016
  40553f:	jmp    0x4a52:0x4d93975b
  405546:	xchg   ecx,eax
  405547:	push   esp
  405548:	xchg   ecx,eax
  405549:	push   cs
  40554a:	jbe    0x4054d1
  40554c:	cld    
  40554d:	das    
  40554e:	xchg   edi,eax
  40554f:	pop    eax
  405550:	loopne 0x4055c3
  405552:	(bad)  
  405553:	mov    eax,ds:0xd7668143
  405558:	dec    edi
  405559:	xor    DWORD PTR ds:0xceef840,edx
  40555f:	popf   
  405560:	loop   0x40555a
  405562:	xor    ecx,DWORD PTR [edx+0x1b134725]
  405568:	mov    al,0xe6
  40556a:	xchg   al,dh
  40556c:	push   ds
  40556d:	ja     0x40554f
  40556f:	mov    al,0xde
  405571:	mov    dl,0x53
  405573:	xchg   ebp,eax
  405574:	adc    al,BYTE PTR [ecx]
  405576:	or     BYTE PTR [eax-0xa],cl
  405579:	dec    esi
  40557a:	push   ss
  40557b:	jo     0x405524
  40557d:	ja     0x405557
  40557f:	and    al,0x14
  405581:	mov    bh,0x8f
  405583:	add    esp,DWORD PTR [edi+eax*2]
  405586:	in     eax,dx
  405587:	test   DWORD PTR [esi-0x69],ebx
  40558a:	sub    BYTE PTR [edi-0x180e7aea],dl
  405590:	xor    BYTE PTR [edx-0x43],al
  405593:	ficomp WORD PTR [edx+ebx*4+0x7a]
  405597:	stc    
  405598:	pmulhw mm3,QWORD PTR [ecx+0x44]
  40559c:	in     al,0x8a
  40559e:	and    al,0xe8
  4055a0:	mov    ss,WORD PTR [ebp+0xc]
  4055a3:	call   DWORD PTR [edx+eiz*2-0x6a35bc2a]
  4055aa:	hlt    
  4055ab:	call   0xd39d:0x28bf7e5d
  4055b2:	dec    ebx
  4055b3:	std    
  4055b4:	sub    DWORD PTR [edi-0x690d6030],esp
  4055ba:	push   esp
  4055bb:	sbb    ebp,DWORD PTR [ecx+eiz*2]
  4055be:	pop    edi
  4055bf:	pop    es
  4055c0:	sub    esp,DWORD PTR [ebp+ecx*1-0x1c]
  4055c4:	hlt    
  4055c5:	fcmovu st,st(6)
  4055c7:	int3   
  4055c8:	push   esi
  4055c9:	xchg   BYTE PTR [edx-0x1acefc93],ch
  4055cf:	mov    bl,0x3
  4055d1:	dec    BYTE PTR [ebp+0x6eb354ce]
  4055d7:	in     al,0x76
  4055d9:	jmp    0xe12512a4
  4055de:	push   edx
  4055df:	sub    ecx,DWORD PTR [esi+0x51]
  4055e2:	push   ebp
  4055e3:	dec    edi
  4055e4:	imul   edi,DWORD PTR [ebp+0x1c21075a],0xcd939ac1
  4055ee:	sub    ebp,ebx
  4055f0:	call   0x87488bc6
  4055f5:	pop    edx
  4055f6:	mov    ebx,0x623a2852
  4055fb:	push   0x74de29fa
  405600:	xchg   DWORD PTR [ecx+eax*4],eax
  405603:	mov    eax,0xfa1fbb38
  405608:	mov    dh,0xa6
  40560a:	mov    al,0x41
  40560c:	mov    bh,0x7a
  40560e:	in     al,0x7
  405610:	das    
  405611:	mov    WORD PTR [edi-0x51],ds
  405614:	inc    edi
  405615:	dec    esp
  405616:	push   0x3cb37a0e
  40561b:	jae    0x405629
  40561d:	pop    eax
  40561e:	xor    ah,dl
  405620:	stc    
  405621:	jae    0x405623
  405623:	cli    
  405624:	out    0xc9,al
  405626:	pop    ebp
  405627:	jae    0x405617
  405629:	test   eax,0x41ad676d
  40562e:	sbb    bl,al
  405630:	sar    DWORD PTR [eax-0x1c51daeb],1
  405636:	jb     0x40560f
  405638:	in     eax,dx
  405639:	call   0x2a41d860
  40563e:	pop    ds
  40563f:	dec    ebp
  405640:	jmp    0xe7c1:0xef4150ae
  405647:	xor    ah,BYTE PTR [esi]
  405649:	and    al,0x2c
  40564b:	mov    ebx,0x39b27e0e
  405651:	mov    ebx,0xd8c960c3
  405656:	pop    es
  405657:	cmp    bh,dh
  405659:	lds    edi,FWORD PTR [ebp+0x64e3c54c]
  40565f:	ds enter 0x3bd9,0x71
  405664:	mov    ebp,0x240da8e6
  405669:	data16 (bad) 
  40566b:	pop    ecx
  40566c:	loop   0x405631
  40566e:	test   BYTE PTR [ebx],0xc3
  405671:	pop    es
  405672:	lods   eax,DWORD PTR ds:[esi]
  405673:	mov    ?,edi
  405675:	stos   DWORD PTR es:[edi],eax
  405676:	gs ins DWORD PTR es:[edi],dx
  405678:	or     dl,BYTE PTR [edi]
  40567a:	fadd   QWORD PTR [ebp-0x5ccd54bb]
  405680:	daa    
  405681:	inc    ebx
  405682:	retf   
  405683:	push   eax
  405684:	push   cs
  405685:	addr16 xor al,0x3d
  405688:	add    ebx,DWORD PTR [edx+0x20]
  40568b:	ds daa 
  40568d:	or     DWORD PTR [edx-0x1be4a2a1],ebx
  405693:	bound  edx,QWORD PTR [esi+0x52]
  405696:	adc    dl,BYTE PTR [edx-0x1b7a6672]
  40569c:	sbb    al,BYTE PTR [eax+0x5]
  40569f:	lods   eax,DWORD PTR ds:[esi]
  4056a0:	jmp    0x2351eca4
  4056a5:	loop   0x4056bb
  4056a7:	mov    edi,0x90587117
  4056ac:	in     al,dx
  4056ad:	fwait
  4056ae:	add    DWORD PTR [eax+ebx*8],ecx
  4056b1:	sub    al,0xc9
  4056b3:	scas   eax,DWORD PTR es:[edi]
  4056b4:	jg     0x4056fd
  4056b6:	imul   eax,DWORD PTR [eax],0xffffffec
  4056b9:	in     eax,0x21
  4056bb:	mov    dh,0x46
  4056bd:	pop    edx
  4056be:	fcom   DWORD PTR [ecx-0x33]
  4056c1:	jb     0x4056a8
  4056c3:	xlat   BYTE PTR ds:[ebx]
  4056c4:	fistp  WORD PTR [edx-0x500ce8a6]
  4056ca:	rcl    BYTE PTR [esi-0x2a],cl
  4056cd:	inc    ebx
  4056ce:	outs   dx,DWORD PTR ds:[esi]
  4056cf:	mov    bl,0x18
  4056d1:	pop    ecx
  4056d2:	in     al,0x7d
  4056d4:	cld    
  4056d5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d7:	jno    0x40572c
  4056d9:	out    0xfd,eax
  4056db:	fisttp QWORD PTR [ebx-0x5a]
  4056de:	adc    BYTE PTR [ebp+0x56],bl
  4056e1:	adc    al,ah
  4056e3:	(bad)  
  4056e4:	stc    
  4056e5:	mov    esi,0x1859a48b
  4056ea:	(bad)  
  4056eb:	icebp  
  4056ec:	cld    
  4056ed:	xor    DWORD PTR [ebx-0x60307ac1],ecx
  4056f3:	jno    0x405743
  4056f5:	test   eax,0xda7fc01
  4056fa:	mov    bl,0xb5
  4056fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056fd:	mov    ah,0x81
  4056ff:	xor    ebp,DWORD PTR [ecx+0x32e4ba2b]
  405705:	arpl   WORD PTR [ebx],cx
  405707:	into   
  405708:	je     0x4056f0
  40570a:	sbb    al,0xe6
  40570c:	cmc    
  40570d:	in     eax,0x86
  40570f:	push   cs
  405710:	xchg   esi,eax
  405711:	and    edx,DWORD PTR [eax+0x698ba941]
  405717:	cs jne 0x40573a
  40571a:	fwait
  40571b:	sbb    DWORD PTR [edx-0x737f7b08],ecx
  405721:	push   ss
  405722:	lods   al,BYTE PTR ds:[esi]
  405723:	mov    gs,WORD PTR ds:0x58e099a8
  405729:	pop    ebp
  40572a:	pop    esi
  40572b:	inc    esi
  40572c:	cmp    al,0x1d
  40572e:	nop
  40572f:	push   eax
  405730:	int3   
  405731:	mov    WORD PTR [edi],cs
  405733:	xor    BYTE PTR [edx],dl
  405735:	adc    ch,bh
  405737:	push   ds
  405738:	int3   
  405739:	les    edi,FWORD PTR [ebx+ebx*2]
  40573c:	mov    bl,BYTE PTR [ebp+0x7c6eb798]
  405742:	or     ah,BYTE PTR ds:0x39e7e838
  405748:	jbe    0x4056fc
  40574a:	mov    al,ds:0xd29d077
  40574f:	inc    esi
  405750:	int3   
  405751:	inc    esp
  405752:	pop    esp
  405753:	mov    ecx,0x4e7a97d
  405758:	xor    DWORD PTR [eax],0xfffffffa
  40575b:	loope  0x40575f
  40575d:	jmp    0x405769
  40575f:	cdq    
  405760:	inc    ebx
  405761:	xchg   ebx,eax
  405762:	xor    al,0x39
  405764:	dec    esi
  405765:	jmp    0x60431721
  40576a:	sbb    BYTE PTR [esi+0x17],bh
  40576d:	ins    BYTE PTR es:[edi],dx
  40576e:	xor    edx,esp
  405770:	call   0xc3fa:0xf7cc485e
  405777:	adc    dh,BYTE PTR fs:[ecx]
  40577a:	enter  0xfab,0xc5
  40577e:	ret    
  40577f:	mov    edi,0xb4e9f46c
  405784:	scas   al,BYTE PTR es:[edi]
  405785:	in     al,0xe1
  405787:	mov    ah,0x42
  405789:	(bad)  
  40578a:	mov    ebp,0x47b87a5e
  40578f:	popf   
  405790:	mov    edx,0x58ba2a76
  405795:	dec    edx
  405796:	mov    DWORD PTR [ecx+ebx*8-0x42],ebx
  40579a:	jno    0x4057ff
  40579c:	and    eax,0x3a0fd754
  4057a1:	add    DWORD PTR ds:0xd764e4cc,ecx
  4057a7:	lea    eax,[ecx-0x50]
  4057aa:	and    esp,edx
  4057ac:	pop    ebx
  4057ad:	in     eax,0xa2
  4057af:	dec    ebx
  4057b0:	cmp    DWORD PTR [ebx-0x4a],edx
  4057b3:	xor    DWORD PTR [ebp+0x27],0x396b0d80
  4057ba:	test   eax,0x73dd2334
  4057bf:	out    0xb9,al
  4057c1:	call   0x4edad337
  4057c6:	mov    esp,0x16358f0b
  4057cb:	pop    esp
  4057cc:	bswap  esp
  4057ce:	push   cs
  4057cf:	mov    esp,0x645b5191
  4057d4:	sbb    esp,DWORD PTR [edx]
  4057d6:	add    dl,BYTE PTR [esi]
  4057d8:	xchg   esi,eax
  4057d9:	xchg   ebx,eax
  4057da:	jnp    0x4057c5
  4057dc:	repz inc ebx
  4057de:	lahf   
  4057df:	icebp  
  4057e0:	loopne 0x405773
  4057e2:	(bad)  
  4057e3:	ins    DWORD PTR es:[edi],dx
  4057e4:	test   al,0xbe
  4057e6:	inc    ebx
  4057e7:	out    0x8f,eax
  4057e9:	mov    si,0xb665
  4057ed:	test   al,0xf5
  4057ef:	inc    ebp
  4057f0:	scas   al,BYTE PTR es:[edi]
  4057f1:	cmp    DWORD PTR [ecx-0x3b],edi
  4057f4:	jg     0x40584a
  4057f6:	xlat   BYTE PTR ds:[ebx]
  4057f7:	cmp    BYTE PTR [ecx+0x6f],dl
  4057fa:	push   ss
  4057fb:	sbb    ecx,DWORD PTR [esi-0x21]
  4057fe:	push   eax
  4057ff:	sahf   
  405800:	addr16 leave 
  405802:	pusha  
  405803:	jo     0x4057eb
  405805:	lds    eax,FWORD PTR [edi+0x64]
  405808:	daa    
  405809:	imul   edi,DWORD PTR [esi-0x21c2e102],0xffffffb3
  405810:	adc    bl,BYTE PTR [ebx-0x70]
  405813:	(bad)
  405816:	fist   DWORD PTR [eax+0x61]
  405819:	pusha  
  40581a:	inc    esi
  40581b:	in     al,dx
  40581c:	pmaxub mm6,QWORD PTR [edi+0x2fb1b02c]
  405823:	fcmovne st,st(1)
  405825:	pop    ebp
  405826:	or     edi,ebp
  405828:	mov    esi,DWORD PTR [esi+0x33]
  40582b:	add    bl,BYTE PTR [eax+esi*1-0x12]
  40582f:	iret   
  405830:	jl     0x4058a1
  405832:	shl    BYTE PTR ds:0x71ead7eb,0xef
  405839:	stc    
  40583a:	jnp    0x4057e7
  40583c:	sub    cl,BYTE PTR [ecx-0x5b]
  40583f:	les    edi,FWORD PTR [eax]
  405841:	lods   al,BYTE PTR ds:[esi]
  405842:	outs   dx,DWORD PTR ds:[esi]
  405843:	and    eax,DWORD PTR [edi+0x64aa5d6]
  405849:	pop    ds
  40584a:	or     ecx,ebp
  40584c:	pop    es
  40584d:	xchg   esp,eax
  40584e:	sbb    DWORD PTR [ebp-0x54],ebp
  405851:	dec    ebx
  405852:	rol    BYTE PTR [ebp-0x2b6e62e6],0xaf
  405859:	sar    dh,1
  40585b:	and    al,0x8
  40585d:	push   ebp
  40585e:	js     0x4058dc
  405860:	pop    esp
  405861:	and    BYTE PTR [eiz*4-0x3f32a797],ah
  405868:	ds pop edi
  40586a:	jl     0x40584e
  40586c:	mov    cs,eax
  40586e:	inc    edi
  40586f:	cmc    
  405870:	ficomp DWORD PTR [esi+0xcc2233f]
  405876:	leave  
  405877:	imul   esp,DWORD PTR [edx],0xa3853f4c
  40587d:	fistp  DWORD PTR [edx+0x7d7eb703]
  405883:	cmp    ebx,esp
  405885:	out    0x54,al
  405887:	xchg   esp,eax
  405888:	xchg   esp,eax
  405889:	jns    0x4058ef
  40588b:	daa    
  40588c:	jp     0x4058e5
  40588e:	sahf   
  40588f:	cmp    edx,DWORD PTR [eax+0x48ba9126]
  405895:	or     eax,0x6b358067
  40589a:	test   al,0x13
  40589c:	jg     0x405869
  40589e:	(bad)  
  40589f:	js     0x405870
  4058a1:	pop    ss
  4058a2:	loopne 0x405859
  4058a4:	lock cmp ebx,DWORD PTR [esi]
  4058a7:	out    0xf4,al
  4058a9:	pop    edi
  4058aa:	inc    edi
  4058ab:	xor    ecx,ebp
  4058ad:	xor    BYTE PTR ds:0x4e6c1914,0x6
  4058b4:	mov    BYTE PTR [eax-0x779211c9],ah
  4058ba:	aaa    
  4058bb:	fwait
  4058bc:	adc    esi,DWORD PTR [ecx-0x853ab44]
  4058c2:	xchg   BYTE PTR [ecx+0x29],bl
  4058c5:	das    
  4058c6:	sub    bh,BYTE PTR [esi+0x25b5b742]
  4058cc:	sub    BYTE PTR [eax+ecx*8-0x49],bl
  4058d0:	push   ebp
  4058d1:	sti    
  4058d2:	scas   eax,DWORD PTR es:[edi]
  4058d3:	inc    esi
  4058d4:	inc    edx
  4058d5:	mov    WORD PTR [esi+0x63],es
  4058d8:	leave  
  4058d9:	stos   BYTE PTR es:[edi],al
  4058da:	ror    DWORD PTR [eax+0x7a772733],1
  4058e0:	call   0xf6ae:0xdbe03759
  4058e7:	xlat   BYTE PTR ds:[ebx]
  4058e8:	call   0x9243:0x36d133ae
  4058ef:	sbb    BYTE PTR [edx+0x5a31797a],dl
  4058f5:	fidiv  DWORD PTR ds:0xd1061100
  4058fb:	aad    0xc5
  4058fd:	push   eax
  4058fe:	jno    0x40597e
  405900:	scas   eax,DWORD PTR es:[edi]
  405901:	(bad)  
  405902:	push   edi
  405903:	xor    bl,BYTE PTR [esi-0x6d]
  405906:	cmp    DWORD PTR [esi+0x6c],0x7a2afd79
  40590d:	sbb    al,0xa
  405910:	adc    eax,0xb3f36178
  405915:	leave  
  405916:	gs jle 0x405942
  405919:	out    0x26,al
  40591b:	dec    ecx
  40591c:	cs and eax,0x791ddcf0
  405922:	loop   0x4058ce
  405924:	rcl    edx,cl
  405926:	sbb    dl,ah
  405928:	retf   
  405929:	cmp    edi,ebx
  40592b:	mov    dh,0xb8
  40592d:	addr16 xchg esi,eax
  40592f:	fst    DWORD PTR ds:0x60df5d74
  405935:	aam    0x10
  405937:	jae    0x4058cf
  405939:	mov    esp,0x377fd705
  40593e:	shl    WORD PTR [ecx-0x65140850],cl
  405945:	or     ecx,DWORD PTR [ecx]
  405947:	add    bl,BYTE PTR [ecx-0x7bf06065]
  40594d:	cmp    eax,DWORD PTR [edx+0x4b8f18c8]
  405953:	neg    DWORD PTR gs:[edi]
  405956:	stos   DWORD PTR es:[edi],eax
  405957:	adc    DWORD PTR [edi+0x4967eeac],esi
  40595d:	xor    bl,BYTE PTR [esi+0x50b7cbbe]
  405963:	cdq    
  405964:	push   0xffffff8e
  405966:	mov    ch,BYTE PTR [ecx+edi*8]
  405969:	pop    fs
  40596b:	call   0x4147d511
  405970:	int3   
  405971:	rcl    BYTE PTR [edi],1
  405973:	jno    0x40593a
  405975:	cdq    
  405976:	sahf   
  405977:	(bad)  
  405978:	div    BYTE PTR ds:0xfc241c5
  40597e:	jecxz  0x405986
  405980:	xor    bh,al
  405982:	add    bh,BYTE PTR [edx]
  405984:	push   ebp
  405985:	jg     0x4059e4
  405987:	and    BYTE PTR [edx],al
  405989:	dec    ebp
  40598a:	xchg   edi,eax
  40598b:	jl     0x405923
  40598d:	das    
  40598e:	xchg   BYTE PTR [esi+ebx*8-0x1b7a41e],ch
  405995:	cwde   
  405996:	sahf   
  405997:	or     eax,0x57e14350
  40599c:	inc    ebp
  40599d:	(bad)  
  40599e:	enter  0x46ff,0x64
  4059a2:	cmp    ecx,esi
  4059a4:	fidivr WORD PTR [edi]
  4059a6:	sub    al,0x9d
  4059a8:	das    
  4059a9:	pop    edx
  4059aa:	and    bl,BYTE PTR [ebp+0x76]
  4059ad:	test   BYTE PTR [esi],0x6d
  4059b0:	pop    ebx
  4059b1:	idiv   DWORD PTR [esi]
  4059b3:	pop    ds
  4059b4:	call   0xb2e6:0x3403ef4f
  4059bb:	rol    BYTE PTR [ecx+esi*4],1
  4059be:	stos   BYTE PTR es:[edi],al
  4059bf:	jle    0x4059c8
  4059c1:	fwait
  4059c2:	rcl    bh,1
  4059c4:	(bad)  
  4059c5:	leave  
  4059c6:	fimul  WORD PTR [edi]
  4059c8:	fisub  DWORD PTR [edx-0x2c]
  4059cb:	xor    BYTE PTR [esi+ebx*8+0x78],ah
  4059cf:	mov    edx,0xd599a6c9
  4059d4:	fisubr DWORD PTR [ebx-0x55]
  4059d7:	ins    BYTE PTR es:[edi],dx
  4059d8:	mov    eax,0x1bbe3cd5
  4059dd:	cs cmp al,0x84
  4059e0:	ins    DWORD PTR es:[edi],dx
  4059e1:	pop    ds
  4059e2:	adc    DWORD PTR [eax],esi
  4059e4:	mov    al,ds:0x2ee99c10
  4059e9:	dec    edx
  4059ea:	sub    BYTE PTR [eax-0x6d43855c],cl
  4059f0:	(bad)  
  4059f2:	inc    ecx
  4059f3:	add    bh,cl
  4059f5:	out    dx,eax
  4059f6:	in     eax,0x69
  4059f8:	fs cmp eax,0x4640678b
  4059fe:	(bad)  
  4059ff:	test   BYTE PTR [ecx+0x6b],0xe
  405a03:	dec    esp
  405a04:	mov    ch,0x9
  405a06:	icebp  
  405a07:	shl    DWORD PTR [edi-0x2f],cl
  405a0a:	inc    edx
  405a0b:	xchg   edi,eax
  405a0c:	inc    edi
  405a0d:	clc    
  405a0e:	jl     0x4059c7
  405a10:	pusha  
  405a11:	add    dl,cl
  405a13:	xchg   edx,eax
  405a14:	mov    ah,0xf9
  405a16:	inc    ecx
  405a17:	ficom  DWORD PTR [edx]
  405a19:	push   cs
  405a1a:	loopne 0x4059f3
  405a1c:	out    dx,eax
  405a1d:	icebp  
  405a1e:	push   edx
  405a1f:	inc    esi
  405a20:	test   edx,edx
  405a22:	(bad)
  405a26:	enter  0x708a,0xf5
  405a2a:	jnp    0x405a96
  405a2c:	ja     0x4059b4
  405a2e:	imul   ecx,DWORD PTR [eax-0x6],0xe7ac04d0
  405a35:	push   ebp
  405a36:	leave  
  405a37:	cmp    al,0x9c
  405a39:	loopne 0x405a04
  405a3b:	mov    eax,0xe655c075
  405a40:	mov    cs,WORD PTR ds:0x7178891e
  405a46:	pop    esp
  405a47:	test   DWORD PTR [ecx-0x49520456],edi
  405a4d:	inc    esp
  405a4e:	sahf   
  405a4f:	mov    bl,0xd3
  405a51:	mov    esp,0x545c6203
  405a56:	std    
  405a57:	xor    al,0x8c
  405a59:	clc    
  405a5a:	daa    
  405a5b:	dec    eax
  405a5c:	xchg   BYTE PTR [esi-0x50],bh
  405a5f:	(bad)  
  405a60:	adc    ebp,esp
  405a62:	inc    eax
  405a63:	stos   DWORD PTR es:[edi],eax
  405a64:	clc    
  405a65:	scas   al,BYTE PTR es:[edi]
  405a66:	adc    al,0x8d
  405a68:	lods   eax,DWORD PTR ds:[esi]
  405a69:	dec    edx
  405a6a:	test   DWORD PTR [eax-0x255d0a9a],esi
  405a70:	or     DWORD PTR [edi],eax
  405a72:	mov    esp,0xb7963971
  405a77:	into   
  405a78:	xor    BYTE PTR [esi],bh
  405a7a:	sub    al,0xca
  405a7c:	scas   eax,DWORD PTR es:[edi]
  405a7d:	pushf  
  405a7e:	inc    ecx
  405a7f:	bound  ebp,QWORD PTR [eax-0x12]
  405a82:	pop    esp
  405a83:	push   ebx
  405a84:	mov    ebp,0x5537b7a1
  405a89:	mov    WORD PTR [esi-0x66bf9bff],gs
  405a8f:	sbb    ebp,ebx
  405a91:	mov    ecx,0x2a97e7e7
  405a96:	cld    
  405a97:	(bad)  [ecx+eiz*1]
  405a9a:	je     0x405ab9
  405a9c:	xchg   edx,eax
  405a9d:	in     eax,dx
  405a9e:	and    edx,DWORD PTR [ebx+0x12844890]
  405aa4:	mov    esi,0xdecb88e7
  405aa9:	xchg   ebx,eax
  405aaa:	fisttp DWORD PTR [eax]
  405aac:	popf   
  405aad:	bound  edi,QWORD PTR [edi+esi*2]
  405ab0:	in     eax,dx
  405ab1:	(bad)  
  405ab2:	aam    0xea
  405ab4:	outs   dx,BYTE PTR ds:[esi]
  405ab5:	mov    dh,0x92
  405ab7:	icebp  
  405ab8:	xchg   esi,eax
  405ab9:	xlat   BYTE PTR ds:[ebx]
  405aba:	icebp  
  405abb:	push   ss
  405abc:	sub    DWORD PTR [ebp-0x5fd03997],ebp
  405ac2:	mov    eax,0xb2017945
  405ac7:	sar    BYTE PTR [ebp-0x25994570],0x64
  405ace:	mov    dh,0x6a
  405ad0:	mov    ss,WORD PTR [ecx+0x2fd82a44]
  405ad6:	(bad)
  405ad9:	test   eax,0x2969b316
  405ade:	add    dl,BYTE PTR [edx+0x26c57a49]
  405ae4:	dec    eax
  405ae5:	or     al,0xad
  405ae7:	in     eax,dx
  405ae8:	dec    ebx
  405ae9:	dec    esp
  405aea:	int3   
  405aeb:	fisubr DWORD PTR [esp+ebp*4+0x4129212f]
  405af2:	mov    ds:0xd1c6cdee,eax
  405af7:	ds jbe 0x405b0c
  405afa:	mov    ecx,0x6301282f
  405aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b00:	int3   
  405b01:	je     0x405b07
  405b03:	cld    
  405b04:	gs ret 
  405b06:	div    ch
  405b08:	pop    ds
  405b09:	mov    DWORD PTR [edx+0x72e7b846],ebx
  405b0f:	in     al,0xa6
  405b11:	cmp    BYTE PTR [esi+edi*4+0x1d507dab],0x33
  405b19:	add    esp,DWORD PTR [edi+0x5f]
  405b1c:	aas    
  405b1d:	push   ss
  405b1e:	mov    ch,0x35
  405b20:	cwde   
  405b21:	cwde   
  405b22:	(bad)  
  405b23:	in     al,dx
  405b24:	loopne 0x405b7c
  405b26:	ficom  WORD PTR [ebp+0x1cbc16cc]
  405b2c:	test   eax,0x6b56d488
  405b31:	inc    esi
  405b32:	xchg   esi,eax
  405b33:	std    
  405b34:	int    0x27
  405b36:	out    0x25,al
  405b38:	jo     0x405acf
  405b3a:	ja     0x405acf
  405b3c:	out    dx,eax
  405b3d:	stos   BYTE PTR es:[edi],al
  405b3e:	sub    ah,al
  405b40:	(bad)  
  405b41:	hlt    
  405b42:	xchg   edx,eax
  405b43:	sbb    DWORD PTR [esp+esi*1-0x36d34dd3],esp
  405b4a:	sub    BYTE PTR [eax+0x38a7de88],ch
  405b50:	mov    ah,0x2c
  405b52:	je     0x405b7e
  405b54:	test   eax,0xe65f4221
  405b59:	cwde   
  405b5a:	add    eax,0x39b39c52
  405b5f:	cdq    
  405b60:	cmp    ecx,edx
  405b62:	xchg   DWORD PTR [ecx],esi
  405b64:	(bad)  
  405b65:	jmp    0x405b25
  405b67:	pop    edx
  405b68:	test   eax,0x5f8dcfd7
  405b6d:	pop    esi
  405b6e:	popf   
  405b6f:	les    ecx,FWORD PTR [esi-0x3ecb011a]
  405b75:	or     al,0x7c
  405b77:	mov    WORD PTR [edi],?
  405b79:	adc    eax,0x9809581c
  405b7e:	fnclex 
  405b80:	xor    eax,0x4b3fad7f
  405b85:	jp     0x405b2a
  405b87:	repz jns 0x405bbe
  405b8a:	loope  0x405ba6
  405b8c:	rcl    BYTE PTR [edi],cl
  405b8e:	(bad)  
  405b8f:	out    0x27,eax
  405b91:	shr    esp,1
  405b93:	adc    DWORD PTR [ecx-0x59611e0a],esp
  405b99:	jg     0x405be0
  405b9b:	xchg   esi,eax
  405b9c:	loope  0x405ba4
  405b9e:	or     dl,dh
  405ba0:	add    eax,0xdb191a13
  405ba5:	and    eax,0x27820878
  405baa:	les    edi,FWORD PTR [edi+0x3e34d1b3]
  405bb0:	or     BYTE PTR [edi-0x6a],ah
  405bb3:	loopne 0x405b84
  405bb5:	mov    eax,0xb76beab9
  405bba:	jb     0x405b79
  405bbc:	or     eax,0x88326254
  405bc1:	jg     0x405b47
  405bc3:	daa    
  405bc4:	pop    ecx
  405bc5:	jmp    0x4495:0x9eb57761
  405bcc:	retf   
  405bcd:	aaa    
  405bce:	mov    dh,0x96
  405bd0:	jno    0x405c0e
  405bd2:	in     al,0x7b
  405bd4:	add    DWORD PTR [ecx],esi
  405bd6:	clc    
  405bd7:	mov    dh,0x20
  405bd9:	inc    ebx
  405bda:	int3   
  405bdb:	dec    ecx
  405bdc:	popf   
  405bdd:	call   0x6416:0xc38374f8
  405be4:	adc    al,0x5
  405be6:	dec    eax
  405be7:	mov    esp,0xb3a9fa39
  405bec:	nop
  405bed:	mov    ch,0x7
  405bef:	jp     0x405b75
  405bf1:	adc    al,0xaa
  405bf3:	mov    ebp,0xb524af71
  405bf8:	mov    edi,0x291376d8
  405bfd:	push   es
  405bfe:	out    0xe9,eax
  405c00:	call   0x579d931c
  405c05:	jp     0x405c35
  405c07:	outs   dx,BYTE PTR ds:[esi]
  405c08:	sub    al,BYTE PTR [esi]
  405c0a:	std    
  405c0b:	lock aaa 
  405c0d:	(bad)  
  405c0e:	fimul  WORD PTR [ebp-0x31404b26]
  405c14:	sahf   
  405c15:	lahf   
  405c16:	xchg   DWORD PTR [ecx+0x74],eax
  405c19:	cli    
  405c1a:	or     BYTE PTR [ecx*8-0x6efde6f7],dl
  405c21:	dec    DWORD PTR [ecx+ecx*4+0x1996cad3]
  405c28:	(bad)  
  405c29:	retf   
  405c2a:	push   esi
  405c2b:	dec    ebx
  405c2c:	rcl    cl,0xba
  405c2f:	ja     0x405c6e
  405c31:	scas   al,BYTE PTR es:[edi]
  405c32:	sbb    DWORD PTR [edi],esi
  405c34:	push   0xffffffc8
  405c36:	imul   ebp,ebp,0xcbf3ee51
  405c3c:	js     0x405bce
  405c3e:	dec    ecx
  405c3f:	retf   0x5152
  405c42:	mov    al,0xcc
  405c44:	mov    ebp,0x2477caeb
  405c49:	mov    ah,0x3
  405c4b:	and    ah,bl
  405c4d:	and    al,0xd0
  405c4f:	mov    edx,0xe7e9b3b
  405c54:	push   esp
  405c55:	js     0x405c5f
  405c57:	jnp    0x405cc5
  405c59:	aas    
  405c5a:	mov    eax,ds:0xfcb3da52
  405c5f:	inc    ebp
  405c60:	sbb    ebx,esp
  405c62:	sahf   
  405c63:	bound  ebx,QWORD PTR [edi]
  405c65:	cli    
  405c66:	cli    
  405c67:	shr    esi,0x36
  405c6a:	and    eax,0x4ce1fcc6
  405c6f:	iret   
  405c70:	mov    ch,0x2c
  405c72:	inc    esi
  405c73:	psubw  mm4,QWORD PTR [eax-0x9fcca21]
  405c7a:	push   si
  405c7c:	setno  dh
  405c7f:	mov    BYTE PTR [edi-0xf888271],ah
  405c85:	or     edx,DWORD PTR [edi-0x791ece1a]
  405c8b:	ret    0xe24d
  405c8e:	sub    edi,esp
  405c90:	sbb    eax,DWORD PTR [eax]
  405c92:	add    ebp,DWORD PTR [ebx+0xf48d854]
  405c98:	ss in  al,dx
  405c9a:	(bad)  
  405c9b:	cdq    
  405c9c:	xor    bh,BYTE PTR [esi+eax*2]
  405c9f:	inc    ebp
  405ca0:	rol    DWORD PTR [eax+0x51892a8f],cl
  405ca6:	and    cl,dl
  405ca8:	and    edi,DWORD PTR [edx-0x2b]
  405cab:	and    ebp,DWORD PTR [ecx+edi*1]
  405cae:	(bad)  
  405cb0:	fwait
  405cb1:	retf   0xa92a
  405cb4:	scas   al,BYTE PTR es:[edi]
  405cb5:	fnstsw WORD PTR [edi]
  405cb7:	hlt    
  405cb8:	sub    bl,cl
  405cba:	mov    al,ds:0x55787670
  405cbf:	daa    
  405cc0:	fwait
  405cc1:	arpl   di,sp
  405cc3:	xor    BYTE PTR [edx],ch
  405cc5:	xor    dl,BYTE PTR ds:0x475c9e9
  405ccb:	in     al,0x6f
  405ccd:	xor    al,0x27
  405ccf:	mov    eax,0x644114f
  405cd4:	sub    ah,BYTE PTR [esi-0xfa8fdef]
  405cda:	aaa    
  405cdb:	out    dx,eax
  405cdc:	cs jp  0x405c6e
  405cdf:	cmp    bl,BYTE PTR [ecx-0x41]
  405ce2:	lea    edx,[eax-0x13]
  405ce5:	test   eax,0xdd64cb7f
  405cea:	int    0xe
  405cec:	popa   
  405ced:	arpl   WORD PTR [ebp+0x13],si
  405cf0:	popa   
  405cf1:	pop    esp
  405cf2:	mov    ds:0x64a100c0,al
  405cf7:	push   esi
  405cf8:	enter  0xf689,0xc5
  405cfc:	mov    bh,0x19
  405cfe:	nop
  405cff:	data16 sahf 
  405d01:	xchg   DWORD PTR [ebx-0x37b90506],edi
  405d07:	lock xor BYTE PTR [ebx-0x67],bh
  405d0b:	xor    ch,BYTE PTR [eax+0x5604104f]
  405d11:	fild   QWORD PTR [esi+0x20]
  405d14:	inc    ecx
  405d15:	adc    al,0x5b
  405d17:	or     al,0xc1
  405d19:	sbb    eax,0x35a26b10
  405d1e:	sbb    BYTE PTR ds:0x5ca51251,dl
  405d24:	call   FWORD PTR [edx-0x16]
  405d27:	adc    BYTE PTR [ecx+0x25],bh
  405d2a:	popa   
  405d2b:	test   DWORD PTR cs:[edi-0x29],0x3ab7dcf8
  405d33:	stc    
  405d34:	clc    
  405d35:	cmp    dh,BYTE PTR [edi]
  405d37:	mov    al,0xfc
  405d39:	sti    
  405d3a:	shl    DWORD PTR [esi-0x15],cl
  405d3d:	xchg   ecx,eax
  405d3e:	pop    eax
  405d3f:	inc    esi
  405d40:	xchg   BYTE PTR [esi-0x6dc2fc47],bl
  405d46:	popa   
  405d47:	sbb    edx,DWORD PTR [esi+0x5f]
  405d4a:	add    edx,DWORD PTR [edx-0x30238a36]
  405d50:	push   0xffffffc0
  405d52:	mov    ebp,DWORD PTR [edx-0x19d09519]
  405d58:	sub    ch,BYTE PTR [edi]
  405d5a:	sub    eax,DWORD PTR [eax-0x4d]
  405d5d:	enter  0xea2d,0x4e
  405d61:	cdq    
  405d62:	adc    dh,al
  405d64:	fiadd  WORD PTR [eax-0x4307e368]
  405d6a:	cmp    ah,ah
  405d6c:	(bad)  
  405d6d:	pop    esp
  405d6e:	sbb    eax,0x618509c8
  405d73:	les    esi,FWORD PTR [ebx+0x7f938aaa]
  405d79:	push   esp
  405d7a:	pop    ebp
  405d7b:	pop    ss
  405d7c:	out    0x9d,eax
  405d7e:	je     0x405df1
  405d80:	and    al,0xf0
  405d82:	test   BYTE PTR [ebp+0x1a],0x51
  405d86:	jbe    0x405d35
  405d88:	pop    es
  405d89:	and    BYTE PTR [esp+edx*1],bh
  405d8c:	mov    ebp,0x27228258
  405d91:	pop    ds
  405d92:	in     eax,dx
  405d93:	(bad)
  405d96:	fdivr  st,st(6)
  405d98:	scas   al,BYTE PTR es:[edi]
  405d99:	jecxz  0x405d55
  405d9b:	sbb    bh,ah
  405d9d:	in     al,dx
  405d9e:	in     al,0x68
  405da0:	jmp    DWORD PTR [esi+0x78420541]
  405da6:	jg     0x405d5f
  405da8:	fidivr WORD PTR [ecx]
  405daa:	into   
  405dab:	rcl    BYTE PTR [edx+0x2e44e012],1
  405db1:	push   edi
  405db2:	dec    esi
  405db3:	or     eax,0xcc7d8115
  405db8:	int3   
  405db9:	icebp  
  405dba:	sbb    esi,eax
  405dbc:	mov    esp,0x58f065a8
  405dc1:	in     al,0xf4
  405dc3:	xchg   DWORD PTR [edx+0x35d94389],esp
  405dc9:	mov    dl,0x5e
  405dcb:	mov    bh,0x29
  405dcd:	adc    esp,DWORD PTR [ebx+0x24]
  405dd0:	enter  0x6ae4,0x4f
  405dd4:	mov    ebx,0x9b1c5a6c
  405dd9:	cwde   
  405dda:	fcom   DWORD PTR [edi]
  405ddc:	mov    ecx,0x7019ec1e
  405de1:	xor    DWORD PTR [esi-0xd],esp
  405de4:	dec    edx
  405de5:	xchg   esi,eax
  405de6:	retf   0x90ed
  405de9:	icebp  
  405dea:	pusha  
  405deb:	add    eax,DWORD PTR [esi-0x4fecbd8b]
  405df1:	fdivr  DWORD PTR [ecx]
  405df3:	lea    edi,[esi-0x237dd33d]
  405df9:	xchg   edx,eax
  405dfa:	and    edx,DWORD PTR [ebx-0x95050]
  405e00:	ins    BYTE PTR es:[edi],dx
  405e01:	and    ebp,ebx
  405e03:	fdiv   DWORD PTR [eax+eax*4+0x494bb5ca]
  405e0a:	stc    
  405e0b:	dec    esp
  405e0c:	lsl    eax,WORD PTR [ebx]
  405e0f:	ret    0x5cca
  405e12:	fsubr  QWORD PTR [eax+eax*8]
  405e15:	xlat   BYTE PTR ds:[ebx]
  405e16:	outs   dx,DWORD PTR ds:[esi]
  405e17:	int3   
  405e18:	xchg   ecx,eax
  405e19:	pop    ss
  405e1a:	jg     0x405e49
  405e1c:	mov    dl,0xf0
  405e1e:	dec    edi
  405e1f:	jbe    0x405e52
  405e21:	jmp    0xc0ca:0xf6b52e2b
  405e28:	loop   0x405e63
  405e2a:	(bad)  
  405e2b:	jmp    0x405db5
  405e2d:	mov    ds:0xf2d3b4b9,al
  405e32:	pop    edi
  405e33:	aas    
  405e34:	sbb    BYTE PTR [ecx+0x20],al
  405e37:	mov    al,al
  405e39:	leave  
  405e3a:	aad    0x99
  405e3c:	xchg   DWORD PTR [ecx],esi
  405e3e:	mov    esi,ebx
  405e40:	fpatan 
  405e42:	stos   BYTE PTR es:[edi],al
  405e43:	adc    bh,BYTE PTR [esi-0x8]
  405e46:	out    dx,al
  405e47:	arpl   WORD PTR ds:0xab64795b,dx
  405e4d:	loop   0x405e65
  405e4f:	popf   
  405e50:	(bad)  [ebp+0x679d6745]
  405e56:	sbb    eax,0xf411d2c9
  405e5b:	xlat   BYTE PTR ds:[ebx]
  405e5c:	ror    BYTE PTR [ecx+ebx*1-0x74],1
  405e60:	loop   0x405df5
  405e62:	push   es
  405e63:	in     al,0x9f
  405e65:	dec    BYTE PTR [esi-0x10]
  405e68:	sub    bh,ah
  405e6a:	jns    0x405e4a
  405e6c:	int3   
  405e6d:	pop    edx
  405e6e:	jle    0x405e5e
  405e70:	cmp    BYTE PTR [ebp+0x3d4af866],dh
  405e76:	ins    DWORD PTR es:[edi],dx
  405e77:	(bad)  [ecx]
  405e79:	ror    DWORD PTR [eax-0x76872e9a],0xf9
  405e80:	pusha  
  405e81:	scas   eax,DWORD PTR es:[edi]
  405e82:	inc    ebx
  405e83:	xchg   edx,eax
  405e84:	inc    esi
  405e85:	jae    0x405e6c
  405e87:	lea    ecx,[ebx-0x6f73d6e6]
  405e8d:	pop    esp
  405e8e:	mov    ebx,0xcec00e1b
  405e93:	fcom   QWORD PTR ds:[edx]
  405e96:	stos   DWORD PTR es:[edi],eax
  405e97:	push   ss
  405e98:	push   0x7674d3ce
  405e9d:	iret   
  405e9e:	int    0xe9
  405ea0:	(bad)  
  405ea2:	inc    esp
  405ea3:	xchg   esi,eax
  405ea4:	xchg   edx,eax
  405ea5:	add    DWORD PTR [eax-0x1df4b495],ecx
  405eab:	sub    ebp,DWORD PTR [edi]
  405ead:	xlat   BYTE PTR ds:[ebx]
  405eae:	jle    0x405e46
  405eb0:	(bad)  
  405eb1:	cld    
  405eb2:	stos   DWORD PTR es:[edi],eax
  405eb3:	and    al,0xc4
  405eb5:	aaa    
  405eb6:	stos   DWORD PTR es:[edi],eax
  405eb7:	adc    dh,BYTE PTR [eax+0x36]
  405eba:	out    dx,al
  405ebb:	mov    bh,0x28
  405ebd:	and    esi,ebx
  405ebf:	outs   dx,BYTE PTR ds:[esi]
  405ec0:	std    
  405ec1:	popf   
  405ec2:	add    dl,cl
  405ec4:	dec    esp
  405ec5:	cmp    bl,al
  405ec7:	fist   WORD PTR ds:0xa10c6306
  405ecd:	inc    esi
  405ece:	xor    BYTE PTR [eax],bh
  405ed0:	dec    eax
  405ed1:	add    esp,eax
  405ed3:	ror    DWORD PTR [edi-0x1f0a9da4],cl
  405ed9:	mov    esp,0x9f431188
  405ede:	xor    ecx,DWORD PTR [ecx+0x5f]
  405ee1:	cmp    eax,esi
  405ee3:	(bad)  
  405ee4:	xchg   ebx,eax
  405ee5:	hlt    
  405ee6:	rcr    DWORD PTR [ebx-0x34],0x63
  405eea:	stc    
  405eeb:	mov    ds:0x8984beb6,al
  405ef0:	cmp    dh,BYTE PTR [ebx+0x45]
  405ef3:	and    eax,0x6b08c052
  405ef8:	test   eax,0x786023ab
  405efd:	push   eax
  405efe:	jle    0x405ecc
  405f00:	fidiv  WORD PTR [esi+0x2e29df55]
  405f06:	imul   ebx,DWORD PTR [edi+0x53],0x261bda71
  405f0d:	popf   
  405f0e:	adc    BYTE PTR [edx+eax*2],0x6c
  405f12:	cli    
  405f13:	arpl   WORD PTR [edx+0x4c],sp
  405f16:	ror    edx,0xdf
  405f19:	dec    esp
  405f1a:	inc    edx
  405f1b:	ins    DWORD PTR es:[edi],dx
  405f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f1d:	jae    0x405f1b
  405f1f:	or     DWORD PTR [ebx-0x6a],0x6
  405f23:	(bad)  
  405f24:	sub    BYTE PTR [ecx],bh
  405f26:	clc    
  405f27:	repnz mov DWORD PTR [ecx-0x10],ecx
  405f2b:	sar    BYTE PTR [edi-0x50e4668c],0x22
  405f32:	cmp    al,0x88
  405f34:	pop    edi
  405f35:	mov    ebp,0x21191a9d
  405f3a:	imul   ecx,edx,0xffffffef
  405f3d:	xor    eax,0x6dabd45e
  405f42:	in     eax,dx
  405f43:	mov    ebp,0xf78f600d
  405f48:	das    
  405f49:	xchg   edx,eax
  405f4a:	xchg   ebp,eax
  405f4b:	xor    al,0x57
  405f4d:	push   ebp
  405f4e:	mov    edx,0xa0139248
  405f53:	into   
  405f54:	mov    esp,0xd3b563ac
  405f59:	jno    0x405f5b
  405f5b:	dec    edi
  405f5c:	ret    0xff17
  405f5f:	lds    ecx,FWORD PTR [eax+0x65]
  405f62:	loop   0x405f28
  405f64:	sti    
  405f65:	mov    DWORD PTR [edx-0x69],ecx
  405f68:	es (bad) 
  405f6a:	cld    
  405f6b:	sbb    al,BYTE PTR [edi-0xa]
  405f6e:	push   edi
  405f6f:	or     ah,BYTE PTR [edi-0x3dec8c6]
  405f75:	inc    esi
  405f76:	inc    esp
  405f77:	call   0xe2c2b20d
  405f7c:	xchg   esp,eax
  405f7d:	scas   al,BYTE PTR es:[edi]
  405f7e:	call   0xa997:0x829d91dc
  405f85:	push   edi
  405f86:	and    eax,eax
  405f88:	or     eax,0xf504eb27
  405f8d:	ret    
  405f8e:	xchg   ecx,eax
  405f8f:	adc    bl,BYTE PTR [eax-0x17c51195]
  405f95:	cmp    bh,BYTE PTR [ebp+0x8]
  405f98:	aad    0x3f
  405f9a:	xor    DWORD PTR [edi],edx
  405f9c:	imul   esi,DWORD PTR [ecx],0x103ef34a
  405fa2:	pusha  
  405fa3:	dec    ebx
  405fa4:	add    BYTE PTR [eax],al
  405fa6:	pop    ebp
  405fa7:	repz and ebx,DWORD PTR [ebx]
  405faa:	retf   0x3b0d
  405fad:	fbld   TBYTE PTR [ebp-0x156ecda4]
  405fb3:	popa   
  405fb4:	(bad)  
  405fb5:	xlat   BYTE PTR ds:[ebx]
  405fb6:	mov    ah,0x52
  405fb8:	fild   DWORD PTR [edx]
  405fba:	or     ebx,DWORD PTR [ebp-0x124fbfa8]
  405fc0:	repnz dec edi
  405fc2:	pop    es
  405fc3:	mov    al,0x5f
  405fc5:	push   ebp
  405fc6:	lods   eax,DWORD PTR ds:[esi]
  405fc7:	repnz sub al,0xdf
  405fca:	(bad)  
  405fcb:	(bad)  
  405fcc:	xchg   esi,eax
  405fcd:	fstp   st(3)
  405fcf:	sbb    al,0xc4
  405fd1:	pushf  
  405fd2:	mov    ds,WORD PTR [eax+0x2031da16]
  405fd8:	jp     0x405f6b
  405fda:	jge    0x405f62
  405fdc:	loop   0x406022
  405fde:	out    dx,eax
  405fdf:	jo     0x405f80
  405fe1:	inc    ecx
  405fe2:	and    al,0x41
  405fe4:	call   DWORD PTR [edx]
  405fe6:	scas   al,BYTE PTR es:[edi]
  405fe7:	push   esi
  405fe8:	xchg   esi,eax
  405fe9:	and    al,0x36
  405feb:	or     al,BYTE PTR [esi+0x2c]
  405fee:	mov    edi,0xa9af92fe
  405ff3:	shr    ebp,1
  405ff5:	or     al,BYTE PTR [eax+ecx*4]
  405ff8:	dec    edx
  405ff9:	sub    DWORD PTR ds:0xf5611d67,esi
  405fff:	xchg   edx,eax
  406000:	out    0x33,al
  406002:	and    al,0xb8
  406004:	inc    ebx
  406005:	ds pop edx
  406007:	jb     0x405fd1
  406009:	ficom  WORD PTR [edx+0x56]
  40600c:	fldenv [eax-0x60dc369f]
  406012:	out    dx,al
  406013:	jne    0x406039
  406015:	pop    es
  406016:	movq   QWORD PTR [ebx],mm5
  406019:	shr    DWORD PTR [edx+0x56e838eb],cl
  40601f:	stos   DWORD PTR es:[edi],eax
  406020:	mov    esp,0x1625dcc0
  406025:	shl    DWORD PTR [ebx+edi*8+0x4387792d],1
  40602c:	and    DWORD PTR [edi+0x21229e93],edi
  406032:	jg     0x405fff
  406034:	aad    0xe8
  406036:	shl    DWORD PTR [ecx+0x58800ace],cl
  40603c:	lods   al,BYTE PTR ds:[esi]
  40603d:	sar    BYTE PTR [ebx+0x34],0xc4
  406041:	test   BYTE PTR ds:0x9ac78be0,cl
  406047:	push   edx
  406048:	fsub   st,st(7)
  40604a:	nop
  40604b:	fwait
  40604c:	sbb    BYTE PTR [eax-0x57adda4f],bh
  406052:	cmp    eax,DWORD PTR [ecx+0x333ac58a]
  406058:	shl    DWORD PTR [ebx+ecx*8-0x6c496b70],0xc4
  406060:	pop    edx
  406061:	xchg   BYTE PTR [esi],bl
  406063:	inc    ecx
  406064:	push   ss
  406065:	into   
  406066:	call   0x7d82:0x59fddf6e
  40606d:	xor    BYTE PTR [edi-0x47e47017],dh
  406073:	cmp    BYTE PTR [edi-0x1d],bh
  406076:	jmp    0x3bcf3df9
  40607b:	in     al,0x92
  40607d:	loope  0x4060b0
  40607f:	jecxz  0x4060ae
  406081:	aas    
  406082:	inc    edx
  406083:	rcr    DWORD PTR [ebp-0x1e],1
  406086:	jno    0x406065
  406088:	adc    DWORD PTR [esi+0x9a50201],edx
  40608e:	mov    esi,0xf52d50a3
  406093:	jp     0x406038
  406095:	dec    esi
  406096:	jle    0x4060bc
  406098:	arpl   WORD PTR [ebp+eiz*8-0x31859e59],bp
  40609f:	imul   ebx,DWORD PTR [ebx],0x4a
  4060a2:	or     edi,0xcd8319
  4060a8:	lock fld DWORD PTR [edx+0x23e1107a]
  4060af:	stos   BYTE PTR es:[edi],al
  4060b0:	jecxz  0x4060d8
  4060b2:	(bad)  
  4060b3:	icebp  
  4060b4:	pop    edi
  4060b5:	jns    0x406079
  4060b7:	xor    al,0x4e
  4060b9:	xchg   edi,eax
  4060ba:	jecxz  0x4060a6
  4060bc:	aaa    
  4060bd:	jmp    0x4060b1
  4060bf:	out    0xa2,eax
  4060c1:	enter  0x8710,0x32
  4060c5:	inc    ebp
  4060c6:	out    0xaf,eax
  4060c8:	pop    esi
  4060c9:	cmc    
  4060ca:	popf   
  4060cb:	push   ebp
  4060cc:	dec    ecx
  4060cd:	inc    esi
  4060ce:	dec    eax
  4060cf:	(bad)  [esi-0x5a]
  4060d2:	mov    esi,0xb65b108d
  4060d7:	lods   eax,DWORD PTR ds:[esi]
  4060d8:	dec    edx
  4060d9:	cmp    bh,BYTE PTR [ecx]
  4060db:	call   0xe2cc0841
  4060e0:	into   
  4060e1:	cld    
  4060e2:	sahf   
  4060e3:	je     0x406077
  4060e5:	fistp  QWORD PTR [eax-0x35]
  4060e8:	xchg   ebx,eax
  4060e9:	rol    DWORD PTR [ecx+0x47f27eda],0x77
  4060f0:	jno    0x406131
  4060f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f3:	(bad)  
  4060f4:	retf   
  4060f5:	lea    esi,[edx-0x1c]
  4060f8:	std    
  4060f9:	cmc    
  4060fa:	xchg   edi,eax
  4060fb:	cld    
  4060fc:	cwde   
  4060fd:	daa    
  4060fe:	cmc    
  4060ff:	or     al,0x88
  406101:	mov    esi,0xd4026264
  406106:	call   0x56f4bfed
  40610b:	icebp  
  40610c:	sub    eax,0xb630c148
  406111:	pop    ds
  406112:	cmp    eax,DWORD PTR [ebp-0x36238418]
  406118:	jcxz   0x40611c
  40611b:	call   0x9eaf7d30
  406120:	mov    bl,0x57
  406122:	push   ds
  406123:	sub    al,0xf3
  406125:	mov    dl,0xc1
  406127:	out    0xaf,al
  406129:	jecxz  0x40611c
  40612b:	jno    0x406117
  40612d:	adc    BYTE PTR [edx+0x5a],ah
  406130:	shl    ch,0xbf
  406133:	cli    
  406134:	cli    
  406135:	xchg   esi,eax
  406136:	(bad)  
  406137:	cmp    al,0x68
  406139:	dec    ebx
  40613a:	pusha  
  40613b:	mov    al,ds:0x695bee84
  406140:	mov    ebp,DWORD PTR [ebx-0x29b37b2a]
  406146:	jl     0x4061ad
  406148:	mov    esi,0x276c286d
  40614d:	mov    cl,0x46
  40614f:	sub    al,0xf1
  406151:	mov    ah,0xb0
  406153:	add    ebx,edi
  406155:	lods   eax,DWORD PTR ds:[esi]
  406156:	push   cs
  406157:	cdq    
  406158:	clc    
  406159:	cmc    
  40615a:	mov    cl,0xd0
  40615c:	inc    ecx
  40615d:	iret   
  40615e:	and    DWORD PTR ds:0x79789c27,esp
  406164:	shr    esp,0xa4
  406167:	xor    al,0xbb
  406169:	mov    esi,0xf7aafc77
  40616e:	dec    edx
  40616f:	(bad)  
  406170:	mov    esi,0xb42c570
  406175:	mov    BYTE PTR [edi+eiz*4-0x76],cl
  406179:	or     BYTE PTR [ebx],dl
  40617b:	xchg   ebx,eax
  40617c:	pushf  
  40617d:	push   ecx
  40617e:	repnz mov ebx,esi
  406181:	fnsave [edx+0x32]
  406184:	addr16 push ebp
  406186:	push   edi
  406187:	sub    eax,0x3fe04233
  40618c:	lods   al,BYTE PTR ds:[esi]
  40618d:	push   cs
  40618e:	fdivr  QWORD PTR [eax+0x480fc612]
  406194:	sub    ch,al
  406196:	sbb    DWORD PTR [ebp-0x505ff4a5],eax
  40619c:	cld    
  40619d:	idiv   ebp
  40619f:	mov    esi,0x453d3dcc
  4061a4:	mov    edx,0xe340afab
  4061a9:	mov    dh,0xe6
  4061ab:	mov    esp,0xb262fdda
  4061b0:	ror    BYTE PTR [ebp+ebp*2-0x24d6d31c],1
  4061b7:	iret   
  4061b8:	enter  0x1ef0,0x4c
  4061bc:	jp     0x406205
  4061be:	pop    eax
  4061bf:	mov    ds:0x438cda40,al
  4061c4:	into   
  4061c5:	icebp  
  4061c6:	inc    edx
  4061c7:	pusha  
  4061c8:	adc    eax,0x13a9a8ed
  4061cd:	jns    0x40616a
  4061cf:	fld    DWORD PTR [edx+0x187c0c52]
  4061d5:	dec    esp
  4061d6:	pop    ebx
  4061d7:	jge    0x4061bf
  4061d9:	adc    eax,0x42b6fd34
  4061de:	sub    eax,0xdea351ea
  4061e3:	mov    dl,0x1e
  4061e5:	push   esp
  4061e6:	mov    esi,DWORD PTR [edx-0x6a]
  4061e9:	fidivr DWORD PTR [ecx-0x5b278625]
  4061ef:	mov    ch,0x4c
  4061f1:	jg     0x4061f1
  4061f3:	adc    eax,0xe82b4683
  4061f8:	push   ds
  4061f9:	pusha  
  4061fa:	ficom  WORD PTR [ecx+0x75]
  4061fd:	out    dx,al
  4061fe:	fisubr WORD PTR ds:0x6cbd75e2
  406204:	jp     0x40620a
  406206:	test   BYTE PTR [ecx+0x4337db6b],0xad
  40620d:	pop    ebx
  40620e:	scas   al,BYTE PTR es:[edi]
  40620f:	adc    eax,0xa261c3a0
  406214:	sub    dl,BYTE PTR [edx]
  406216:	sub    cl,BYTE PTR [edi+0x53]
  406219:	fs (bad) 
  40621c:	adc    esi,edi
  40621e:	jecxz  0x406204
  406220:	inc    edi
  406221:	rol    DWORD PTR [ebp+0x5a0a4740],cl
  406227:	ret    
  406228:	stos   DWORD PTR es:[edi],eax
  406229:	inc    esp
  40622a:	dec    esi
  40622b:	aas    
  40622c:	in     al,dx
  40622d:	push   0x1a8cfe1c
  406232:	das    
  406233:	pop    es
  406234:	fs data16 int 0x6d
  406238:	mov    al,ds:0xf09d5d72
  40623d:	mov    cl,0x3b
  40623f:	jbe    0x406247
  406241:	jmp    0x4061f8
  406243:	jle    0x406267
  406245:	mov    ecx,0xae8fc769
  40624a:	call   0x30c87ee4
  40624f:	(bad)  
  406250:	sub    cl,bh
  406252:	jo     0x406213
  406254:	adc    DWORD PTR [edx],0xe9798dc5
  40625a:	je     0x4061ed
  40625c:	xchg   ebp,eax
  40625d:	inc    esp
  40625e:	iret   
  40625f:	es nop
  406261:	retf   0xb3d0
  406264:	xchg   ecx,eax
  406265:	push   ebx
  406266:	and    eax,0xbd999d35
  40626b:	xor    eax,0xe6adcb4b
  406270:	neg    BYTE PTR [ebx]
  406272:	repnz lea esi,[ebp+ebp*2+0x36]
  406277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406278:	dec    eax
  406279:	fsub   QWORD PTR [edi-0x3b]
  40627c:	xchg   edi,eax
  40627d:	adc    ebx,esp
  40627f:	scas   eax,DWORD PTR es:[edi]
  406280:	in     eax,0x7c
  406282:	icebp  
  406283:	inc    edx
  406284:	(bad)  
  406285:	je     0x4062da
  406287:	fs add ah,ah
  40628a:	mov    esi,0x93276e52
  40628f:	dec    ebx
  406290:	jecxz  0x4062b2
  406292:	in     eax,dx
  406293:	xor    DWORD PTR [eax-0x66cfdb6a],edx
  406299:	out    0x35,al
  40629b:	xchg   ebp,eax
  40629c:	pop    ss
  40629d:	adc    BYTE PTR [ebp+0x58],0x8
  4062a1:	rcl    DWORD PTR [ecx-0x7526627e],cl
  4062a7:	div    BYTE PTR [edx+0x671d156c]
  4062ad:	(bad)  
  4062ae:	fstp   QWORD PTR [ecx+edi*8]
  4062b1:	lahf   
  4062b2:	pop    ss
  4062b3:	test   DWORD PTR [ebx+0x76516caa],edx
  4062b9:	adc    dl,al
  4062bb:	sub    eax,0x49c99fcf
  4062c0:	mov    BYTE PTR [eax+0x44],dl
  4062c3:	data16 fsub QWORD PTR [esi]
  4062c6:	out    dx,al
  4062c7:	loopne 0x406269
  4062c9:	sbb    ebp,DWORD PTR [ebx+0x5a5f4165]
  4062cf:	xchg   ebx,eax
  4062d0:	sub    eax,0xd89b1239
  4062d5:	adc    al,0xa4
  4062d7:	jp     0x406323
  4062d9:	lea    esp,[ecx*4+0x63093d61]
  4062e0:	ret    0x3d7d
  4062e3:	inc    ecx
  4062e4:	cmp    al,0x1e
  4062e6:	sub    al,0x70
  4062e8:	or     eax,0xe1400544
  4062ed:	sub    al,0x3c
  4062ef:	mov    DWORD PTR [esi],ebp
  4062f1:	ins    DWORD PTR es:[edi],dx
  4062f2:	icebp  
  4062f3:	cmp    eax,0xa39f2548
  4062f8:	loopne 0x40628d
  4062fa:	data16 icebp 
  4062fc:	scas   eax,DWORD PTR es:[edi]
  4062fd:	xchg   edi,eax
  4062fe:	nop
  4062ff:	xchg   DWORD PTR [edi+ebp*2+0x2c6926cb],edi
  406306:	mov    bl,0x7
  406308:	aad    0xfd
  40630a:	aad    0x3d
  40630c:	lods   al,BYTE PTR ds:[esi]
  40630d:	repnz cmp eax,0x70ada57f
  406313:	aas    
  406314:	xor    dh,BYTE PTR [ecx+0xd821ec1]
  40631a:	sbb    eax,0xbef2ddd3
  40631f:	pop    es
  406320:	mov    al,0xc2
  406322:	sbb    al,0xe9
  406324:	push   edx
  406325:	xchg   DWORD PTR [edx+0x53],ebp
  406328:	and    ecx,DWORD PTR [eax-0x49]
  40632b:	scas   al,BYTE PTR es:[edi]
  40632c:	fistp  WORD PTR [edx+edx*1]
  40632f:	xchg   DWORD PTR [edi],ebx
  406331:	test   DWORD PTR [ebx-0x45fe7fe0],0xad4eb1c0
  40633b:	mov    esp,DWORD PTR [ebp-0x1452425a]
  406341:	pop    esi
  406342:	cmp    BYTE PTR gs:[esi+0x69b1d098],al
  406349:	cmp    ch,dl
  40634b:	daa    
  40634c:	push   ss
  40634d:	mov    ch,0x80
  40634f:	pop    es
  406350:	mov    al,fs:0xf562870d
  406356:	ja     0x406387
  406358:	mov    cs,edi
  40635a:	sub    dh,BYTE PTR [edx]
  40635c:	push   esp
  40635d:	xchg   DWORD PTR [ecx-0x24],edi
  406360:	xchg   ebp,eax
  406361:	ss mov db1,ebx
  406365:	adc    DWORD PTR [edx-0x5da6b5f0],ebx
  40636b:	jmp    0xf10c:0x98c70b6f
  406372:	inc    ebx
  406373:	sbb    eax,0x255722df
  406378:	(bad)  
  406379:	out    dx,eax
  40637a:	mov    BYTE PTR [esp+ebx*2+0x5d9e40a5],bh
  406381:	ins    DWORD PTR es:[edi],dx
  406382:	sub    DWORD PTR [edx+ebx*8],esp
  406385:	mov    ds:0x425181c0,al
  40638a:	mov    esi,0x7ddbccc6
  40638f:	add    al,0x86
  406391:	add    eax,DWORD PTR [esi+edx*8-0x61a1bc1c]
  406398:	push   ebx
  406399:	xchg   edi,eax
  40639a:	jmp    0xcefe4bb2
  40639f:	pop    ebx
  4063a0:	cmc    
  4063a1:	jp     0x406405
  4063a3:	iret   
  4063a4:	push   eax
  4063a5:	inc    esi
  4063a6:	lea    ebx,[edi-0x6d32c982]
  4063ac:	fsub   DWORD PTR [esp+esi*1-0x5a]
  4063b0:	mov    DWORD PTR [eax+ecx*8],ebp
  4063b3:	test   DWORD PTR [ebx],0x6277a52d
  4063b9:	arpl   WORD PTR [eax+eax*8],bp
  4063bc:	sti    
  4063bd:	dec    esp
  4063be:	(bad)  
  4063bf:	std    
  4063c0:	scas   eax,DWORD PTR es:[edi]
  4063c1:	int3   
  4063c2:	jbe    0x4063bc
  4063c4:	jecxz  0x40643b
  4063c6:	jb     0x40636a
  4063c8:	xor    BYTE PTR [edx],ch
  4063ca:	std    
  4063cb:	mov    edi,0xfc9aab53
  4063d0:	arpl   WORD PTR [eax-0x8cd836c],cx
  4063d6:	mov    eax,0x3bd795f
  4063db:	jb     0x40645c
  4063dd:	pop    eax
  4063de:	ss or  al,0xdd
  4063e1:	jmp    0x4063a8
  4063e3:	mov    ebx,0xc2a01a26
  4063e8:	mov    eax,ds:0x3fbab40b
  4063ed:	dec    edi
  4063ee:	and    dl,0x93
  4063f1:	es (bad) 
  4063f3:	mov    ds:0x11e8ad11,eax
  4063f8:	(bad)  [edi+0x7974b6d1]
  4063fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ff:	xchg   edx,eax
  406400:	jmp    0x7ce3:0x5fe10587
  406407:	mov    ch,BYTE PTR [ebx-0x35]
  40640a:	jns    0x4063fe
  40640c:	data16 fisttp DWORD PTR [edx]
  40640f:	out    dx,al
  406410:	pop    ebx
  406411:	lods   eax,DWORD PTR ds:[esi]
  406412:	int    0x31
  406414:	cmp    ecx,ebx
  406416:	mov    dl,BYTE PTR [ecx-0x7eb0c549]
  40641c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641d:	lea    eax,[ecx]
  40641f:	inc    ebp
  406420:	pushf  
  406421:	pop    ebx
  406422:	iret   
  406423:	cmp    ch,BYTE PTR [esp+ecx*1+0x2e47326d]
  40642a:	(bad)  
  40642b:	fldenv [ecx]
  40642d:	push   ecx
  40642e:	jmp    0x406417
  406430:	sbb    ch,0x39
  406433:	and    DWORD PTR [eax-0x23],edx
  406436:	lock out 0xac,eax
  406439:	stos   BYTE PTR es:[edi],al
  40643a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40643b:	pop    edi
  40643c:	adc    eax,0xdc2904f
  406441:	or     eax,esp
  406443:	jne    0x406469
  406445:	jp     0x406431
  406447:	ins    BYTE PTR es:[edi],dx
  406448:	mov    bh,0x56
  40644a:	imul   DWORD PTR [ebx-0x5f]
  40644d:	jl     0x4063d5
  40644f:	call   0x2be3:0x738dabcf
  406456:	sub    DWORD PTR [ebx+0x3611f086],0xffffffe6
  40645d:	adc    BYTE PTR [ebx-0x23],al
  406460:	scas   eax,DWORD PTR es:[edi]
  406461:	xchg   ebx,eax
  406462:	fsubr  DWORD PTR [edi+0x4e]
  406465:	push   ds
  406466:	cmc    
  406467:	(bad)  
  406468:	mov    dl,0x17
  40646a:	xor    al,0x6d
  40646c:	mov    WORD PTR [eax],gs
  40646e:	bound  esp,QWORD PTR [ebx-0x384b361b]
  406474:	or     BYTE PTR [ebp+0x38],ch
  406477:	mov    esp,0x49283d64
  40647c:	popa   
  40647d:	leave  
  40647e:	loop   0x406420
  406480:	lods   eax,DWORD PTR ds:[esi]
  406481:	repz push ds
  406483:	test   al,0x2d
  406485:	cdq    
  406486:	mov    eax,0x26aef380
  40648b:	(bad)  
  40648c:	in     eax,dx
  40648d:	loopne 0x4064c7
  40648f:	cwde   
  406490:	mov    ch,0x16
  406492:	lds    ebp,FWORD PTR [edx]
  406494:	aam    0xea
  406496:	dec    ebx
  406497:	lea    edx,[esi]
  406499:	and    dl,BYTE PTR [esi]
  40649b:	out    0x8b,eax
  40649d:	lea    edi,[esi+ebp*2]
  4064a0:	add    ecx,DWORD PTR ds:[esi-0x6]
  4064a4:	popf   
  4064a5:	(bad)  
  4064a6:	jno    0x4064e2
  4064a8:	xchg   edi,eax
  4064a9:	cli    
  4064aa:	mov    al,0x9b
  4064ac:	ja     0x406469
  4064ae:	popa   
  4064af:	inc    ecx
  4064b0:	jg     0x40650c
  4064b2:	mov    ch,0x8
  4064b4:	xor    eax,0xdcc63598
  4064b9:	pop    ebx
  4064ba:	out    dx,al
  4064bb:	jle    0x406522
  4064bd:	push   edi
  4064be:	mov    esp,0xdf2378c
  4064c3:	out    0xaf,eax
  4064c5:	test   eax,0x5bf59a4e
  4064ca:	cwde   
  4064cb:	sbb    dl,BYTE PTR [esi+0x5870e551]
  4064d1:	es sub al,dl
  4064d4:	jns    0x406461
  4064d6:	cwde   
  4064d7:	out    dx,eax
  4064d8:	imul   edx,ecx,0x577e4a57
  4064de:	sub    al,0xe0
  4064e0:	leave  
  4064e1:	repz dec esi
  4064e3:	xchg   esi,eax
  4064e4:	sbb    DWORD PTR [eax+0x77d03580],edx
  4064ea:	(bad)  
  4064eb:	pop    ebp
  4064ec:	and    cl,dl
  4064ee:	sti    
  4064ef:	push   edx
  4064f0:	call   0x6cda:0x48d1005c
  4064f7:	jge    0x4064b9
  4064f9:	ret    0x5d89
  4064fc:	xor    dh,BYTE PTR [ebx+edx*8-0x52]
  406500:	jo     0x4064f5
  406502:	mov    ?,WORD PTR [esi+0x599c1d41]
  406508:	dec    eax
  406509:	pop    esi
  40650a:	mov    esi,0x7ccfc88
  40650f:	pop    ebp
  406510:	hlt    
  406511:	adc    eax,0x544e2e95
  406516:	js     0x4064b1
  406518:	stos   BYTE PTR es:[edi],al
  406519:	js     0x406588
  40651b:	fcmovnbe st,st(1)
  40651d:	dec    edi
  40651e:	and    al,0x88
  406520:	leave  
  406521:	push   eax
  406522:	dec    edx
  406523:	push   ecx
  406524:	mov    bl,0x8f
  406526:	add    DWORD PTR [esp+ecx*2],ebx
  406529:	outs   dx,BYTE PTR ds:[esi]
  40652a:	cmp    dh,al
  40652c:	pop    ecx
  40652d:	pop    ebp
  40652e:	and    esi,DWORD PTR [edi-0x20]
  406531:	and    dh,BYTE PTR [esi]
  406533:	push   0xffffffa0
  406535:	mov    ecx,0x3837bb31
  40653a:	jbe    0x40659a
  40653c:	jo     0x40654a
  40653e:	ds jae 0x4064ca
  406541:	cmp    ebp,DWORD PTR [edx]
  406543:	int3   
  406544:	or     eax,0xe384ddf1
  406549:	mov    al,ds:0x929c7ac1
  40654e:	pop    ebx
  40654f:	jbe    0x4065ab
  406551:	out    0xe3,al
  406553:	dec    ecx
  406554:	mov    eax,ds:0xf3d4c734
  406559:	push   cs
  40655a:	dec    ecx
  40655b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40655c:	dec    ebp
  40655d:	mov    ecx,0xed05efb5
  406562:	cld    
  406563:	into   
  406564:	and    esi,edi
  406566:	xchg   DWORD PTR [ecx-0x5b],ecx
  406569:	clc    
  40656a:	dec    ebx
  40656b:	jmp    edi
  40656d:	xor    dh,cl
  40656f:	repz mov bl,0xf1
  406572:	js     0x406512
  406574:	(bad)  
  406576:	push   ebx
  406577:	(bad)  
  406578:	lods   eax,DWORD PTR ds:[esi]
  406579:	inc    edi
  40657a:	add    DWORD PTR [ecx+0x50186be0],edi
  406580:	mov    al,ds:0xbf3c5d85
  406585:	push   cs
  406586:	lods   eax,DWORD PTR ds:[esi]
  406587:	sub    BYTE PTR [ebp-0x56],ah
  40658a:	or     eax,0x5197d66a
  40658f:	mov    ebp,edx
  406591:	pop    es
  406592:	push   ss
  406593:	popa   
  406594:	mov    cl,0xe8
  406596:	add    eax,0xefedc597
  40659b:	or     BYTE PTR [eax+0x4b],0x76
  40659f:	gs pop edi
  4065a1:	imul   BYTE PTR [ebx-0x2f]
  4065a4:	dec    DWORD PTR [ebx]
  4065a6:	mov    ebx,0x3cb766ac
  4065ab:	lea    esp,[edx+0x7e673a7e]
  4065b1:	dec    ebp
  4065b2:	sub    eax,0xcd594e8c
  4065b7:	cmp    eax,0x8385497a
  4065bc:	pop    esp
  4065bd:	retf   0x8cde
  4065c0:	mov    esi,0xaf6ab4b8
  4065c5:	aam    0xa7
  4065c7:	cmp    al,0xf0
  4065c9:	cdq    
  4065ca:	push   ebp
  4065cb:	sbb    al,0x53
  4065cd:	cwde   
  4065ce:	leave  
  4065cf:	mov    ebp,0x8e57ef5a
  4065d4:	iret   
  4065d5:	test   BYTE PTR [esp+ebx*8],0x53
  4065d9:	jge    0x4065c4
  4065db:	ror    edi,0x84
  4065de:	stos   BYTE PTR es:[edi],al
  4065df:	leave  
  4065e0:	cmc    
  4065e1:	mov    edx,0xc28c083a
  4065e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065e7:	push   es
  4065e8:	loop   0x4065a6
  4065ea:	or     edi,DWORD PTR [ecx-0x39d71d23]
  4065f0:	rcl    dl,0xc7
  4065f3:	(bad)  
  4065f4:	cmp    al,0xf2
  4065f6:	icebp  
  4065f7:	ret    0x8743
  4065fa:	retf   0x5145
  4065fd:	jns    0x4065a8
  4065ff:	xor    bl,BYTE PTR [esi+0x6018c840]
  406605:	cs clc 
  406607:	rcl    BYTE PTR ds:[eax-0x7e51c95c],1
  40660e:	cli    
  40660f:	jne    0x406630
  406611:	(bad)  
  406612:	jge    0x40659d
  406614:	mov    cl,0x9b
  406616:	nop
  406617:	enter  0x601,0x6f
  40661b:	in     al,0x5d
  40661d:	fs scas eax,DWORD PTR es:[edi]
  40661f:	repz push edx
  406621:	retf   
  406622:	xlat   BYTE PTR ds:[ebx]
  406623:	cmp    ch,BYTE PTR [eax+0x25eb27de]
  406629:	getsec 
  40662b:	mov    edx,0xb77e5ebc
  406630:	mov    cl,0xbe
  406632:	sub    BYTE PTR [esi],bh
  406634:	inc    ebx
  406635:	fwait
  406636:	out    0xfa,al
  406638:	std    
  406639:	and    bl,BYTE PTR ds:0xde9330c8
  40663f:	pop    esp
  406640:	sub    al,0xea
  406642:	inc    eax
  406643:	fild   QWORD PTR [edx+0x78]
  406646:	push   0x3f9e5d86
  40664b:	jns    0x406694
  40664d:	mov    ?,bp
  406650:	pusha  
  406651:	jge    0x406639
  406653:	out    0x24,eax
  406655:	xor    ebp,ecx
  406657:	jmp    0x4c5a9dfa
  40665c:	bound  ebx,QWORD PTR [edi-0x30]
  40665f:	dec    edx
  406660:	test   DWORD PTR ds:0xfc6fd8f8,ebp
  406666:	add    DWORD PTR [edi-0x729f644c],ebp
  40666c:	mov    ebp,0xd86ca0b4
  406671:	and    ch,BYTE PTR ss:[si+0x38b8]
  406677:	mov    esp,0x80e034e4
  40667c:	out    dx,al
  40667d:	enter  0xe25a,0xa1
  406681:	adc    ch,bl
  406683:	pop    edi
  406684:	add    DWORD PTR [eax+0x447a9b29],0xebac52c4
  40668e:	pop    es
  40668f:	int    0xca
  406691:	test   esi,edx
  406693:	das    
  406694:	lods   al,BYTE PTR ds:[esi]
  406695:	xchg   ecx,eax
  406696:	enter  0x3a69,0x21
  40669a:	cmc    
  40669b:	and    eax,0x531690de
  4066a0:	fisttp WORD PTR [edi]
  4066a2:	enter  0x4316,0xff
  4066a6:	pop    esp
  4066a7:	pop    esi
  4066a8:	mov    dh,0x1b
  4066aa:	jp     0x406670
  4066ac:	stos   BYTE PTR es:[edi],al
  4066ad:	je     0x406643
  4066af:	push   esi
  4066b0:	pop    ecx
  4066b1:	iret   
  4066b2:	(bad)  
  4066b3:	fcomp  st(5)
  4066b5:	js     0x406684
  4066b7:	jmp    0x4dd8e19a
  4066bc:	push   ss
  4066bd:	mov    ecx,0xfaf8a9d3
  4066c2:	jp     0x406655
  4066c4:	inc    edx
  4066c5:	sbb    edi,DWORD PTR [ebx+0x31]
  4066c8:	xchg   esi,eax
  4066c9:	and    al,0x9b
  4066cb:	cmp    DWORD PTR [esi-0x7d],esi
  4066ce:	bound  edx,QWORD PTR [eax]
  4066d0:	jno    0x4066a0
  4066d2:	outs   dx,BYTE PTR ds:[esi]
  4066d3:	(bad)  
  4066d4:	or     edx,DWORD PTR [edx]
  4066d6:	sub    cl,BYTE PTR [ecx-0x3fff84d6]
  4066dc:	jb     0x406707
  4066de:	fst    QWORD PTR [edx]
  4066e0:	pop    esi
  4066e1:	mov    edi,0x35ca1427
  4066e6:	jmp    0x4d9a:0xfd9b3a7a
  4066ed:	scas   eax,DWORD PTR es:[edi]
  4066ee:	std    
  4066ef:	or     eax,esi
  4066f1:	out    0xb2,al
  4066f3:	(bad)  
  4066f4:	push   esi
  4066f5:	pop    ds
  4066f6:	jno    0x406755
  4066f8:	sahf   
  4066f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fa:	(bad)  
  4066fb:	sub    edi,ecx
  4066fd:	mov    BYTE PTR [edx-0x57],ch
  406700:	and    ebx,esi
  406702:	adc    ecx,DWORD PTR [edi+0x5d]
  406705:	cmp    eax,0x972996ee
  40670a:	or     al,0xb1
  40670c:	fs and edx,esi
  40670f:	mov    esi,0x7be76e8e
  406714:	sub    ebp,DWORD PTR [eax-0x2042c478]
  40671a:	out    dx,eax
  40671b:	or     dh,BYTE PTR [ebx]
  40671d:	and    bl,BYTE PTR [esi+0x7b]
  406720:	push   cs
  406721:	dec    esp
  406722:	pop    edi
  406723:	jnp    0x40673f
  406725:	cmp    eax,0x47a315e0
  40672a:	lds    esp,FWORD PTR [eax+0x2f]
  40672d:	jmp    0x278f:0x3633ec25
  406734:	(bad)  
  406735:	outs   dx,DWORD PTR ds:[esi]
  406736:	rcr    bl,1
  406738:	adc    al,0x98
  40673a:	cmp    DWORD PTR [esi-0x2d],esi
  40673d:	pop    ebx
  40673e:	dec    BYTE PTR [ebx-0x4486cb33]
  406744:	xchg   esi,eax
  406745:	sbb    al,BYTE PTR [esi+0x34]
  406748:	mov    ah,bh
  40674a:	mov    al,0x38
  40674c:	ja     0x406730
  40674e:	push   DWORD PTR [ecx]
  406750:	push   ebx
  406751:	mov    al,BYTE PTR ds:0xeea5159c
  406757:	dec    edx
  406758:	mov    esi,0x8b7fe0e4
  40675d:	pop    edx
  40675e:	sbb    al,0xd4
  406760:	ins    DWORD PTR es:[edi],dx
  406761:	add    BYTE PTR ds:0x7ca6f09c,0x70
  406768:	mov    edi,0x717dbfbf
  40676d:	fistp  QWORD PTR [ebp-0x75f96cfc]
  406773:	fld    QWORD PTR [ecx]
  406775:	out    dx,eax
  406776:	lds    edi,FWORD PTR [edi-0x5b891779]
  40677c:	std    
  40677d:	push   esp
  40677e:	loope  0x4067b6
  406780:	jg     0x4067c2
  406782:	xchg   esi,eax
  406783:	fmul   QWORD PTR [ebx]
  406785:	xor    eax,0x123164b6
  40678a:	cli    
  40678b:	mov    ah,0xb6
  40678d:	xchg   eax,ebx
  40678f:	lods   eax,DWORD PTR ds:[esi]
  406790:	(bad)
  406793:	ins    DWORD PTR es:[edi],dx
  406794:	ror    bl,1
  406796:	jne    0x4067de
  406798:	push   esi
  406799:	cmp    DWORD PTR [esi+0x31],0x5e8faf0f
  4067a0:	cdq    
  4067a1:	mov    WORD PTR [ecx],?
  4067a3:	fs sbb al,0xb
  4067a6:	in     eax,0xd4
  4067a8:	mov    WORD PTR [ebx-0x6b90c421],fs
  4067ae:	div    BYTE PTR [eax+0xa]
  4067b1:	xchg   edx,eax
  4067b2:	adc    edi,DWORD PTR ds:0x16548fd7
  4067b8:	xchg   ebx,eax
  4067b9:	fstp   DWORD PTR [ebx+edx*4-0x13b8b848]
  4067c0:	push   esp
  4067c1:	fucom  st(1)
  4067c3:	imul   esi,edi,0xffffff8b
  4067c6:	retf   0xba9
  4067c9:	mov    ebp,0xd492f30a
  4067ce:	scas   al,BYTE PTR es:[edi]
  4067cf:	(bad)  
  4067d0:	lods   al,BYTE PTR cs:[esi]
  4067d2:	dec    esp
  4067d3:	ja     0x4067a7
  4067d5:	ins    BYTE PTR es:[edi],dx
  4067d6:	fldcw  WORD PTR [ecx+0x24]
  4067d9:	adc    dl,bh
  4067db:	sbb    DWORD PTR [eax+ebp*8],esp
  4067de:	cwde   
  4067df:	lock in al,0x66
  4067e2:	(bad)  
  4067e4:	ins    DWORD PTR es:[edi],dx
  4067e5:	xchg   BYTE PTR [edx],bl
  4067e7:	out    dx,al
  4067e8:	jmp    0x249830bd
  4067ed:	add    eax,0x98ff4c66
  4067f2:	fs dec ebp
  4067f4:	ja     0x406800
  4067f6:	or     BYTE PTR [edi+ebp*8],bl
  4067f9:	push   esi
  4067fa:	cmc    
  4067fb:	out    dx,al
  4067fc:	xlat   BYTE PTR ds:[ebx]
  4067fd:	jp     0x40686d
  4067ff:	sub    al,BYTE PTR [edi]
  406801:	add    BYTE PTR es:[ecx],dl
  406804:	lahf   
  406805:	jno    0x406849
  406807:	xchg   esp,eax
  406808:	addr16 mov ds:0x5ca3,eax
  40680c:	jae    0x4067bd
  40680e:	mov    DWORD PTR [eax],ecx
  406810:	adc    eax,0xd6c141cc
  406815:	in     eax,0x34
  406817:	jge    0x4067ca
  406819:	pop    es
  40681a:	bound  ebx,QWORD PTR [ecx+0x5a]
  40681d:	call   0x92cad553
  406822:	clc    
  406823:	cmc    
  406824:	add    bl,BYTE PTR [edx]
  406826:	mov    bh,BYTE PTR [eax]
  406828:	inc    edx
  406829:	stos   DWORD PTR es:[edi],eax
  40682a:	fsubr  QWORD PTR [ebx+0x7848efa1]
  406830:	xor    eax,0x21268798
  406835:	xor    BYTE PTR [eax+0x1a],ch
  406838:	mov    al,ds:0x15148d0
  40683d:	scas   eax,DWORD PTR es:[edi]
  40683e:	loopne 0x406875
  406840:	ins    BYTE PTR es:[edi],dx
  406841:	mov    esi,0xfc4e5349
  406846:	push   ss
  406847:	lock pop edi
  406849:	test   esi,eax
  40684b:	call   0x7fc22760
  406850:	daa    
  406851:	sbb    ah,BYTE PTR [eax+0x1d]
  406854:	push   ds
  406855:	(bad)  
  406856:	jg     0x4068ca
  406858:	aaa    
  406859:	imul   esp,esi,0xfffffff7
  40685c:	ffree  st(5)
  40685e:	mov    dl,0x78
  406860:	mov    ah,0x80
  406862:	pop    ds
  406863:	loope  0x40685e
  406865:	fwait
  406866:	jge    0x4067f9
  406868:	push   0x762a109e
  40686d:	add    ah,dl
  40686f:	pop    edi
  406870:	sbb    eax,0xadfb8e1
  406875:	rcr    DWORD PTR [edi+0x46],0x86
  406879:	pop    eax
  40687a:	sbb    ecx,DWORD PTR [ecx+ecx*4-0xdbece8d]
  406881:	leave  
  406882:	cld    
  406883:	fidiv  DWORD PTR [eax]
  406885:	outs   dx,BYTE PTR ds:[esi]
  406886:	(bad)  
  406887:	call   0xe28f5b88
  40688c:	mov    dl,0xea
  40688e:	ret    
  40688f:	sub    DWORD PTR [eax+ebp*2+0x53],0x14
  406894:	test   eax,0xc4429a77
  406899:	inc    edi
  40689a:	in     eax,dx
  40689b:	pop    es
  40689c:	test   esp,0xccc3d23d
  4068a2:	and    ah,BYTE PTR [ebp+0x12e781cc]
  4068a8:	pusha  
  4068a9:	mov    ds:0x20a2e89c,al
  4068ae:	fsubr  st(3),st
  4068b0:	dec    ecx
  4068b1:	les    ebx,FWORD PTR [edx+esi*1]
  4068b4:	fistp  WORD PTR [ebp+0x5c]
  4068b7:	push   esp
  4068b8:	add    DWORD PTR [ebx-0x76b5cedd],0xde738253
  4068c2:	nop
  4068c3:	adc    BYTE PTR [edx-0x68631521],0x1a
  4068ca:	dec    ecx
  4068cb:	cli    
  4068cc:	loop   0x406870
  4068ce:	dec    ebx
  4068cf:	sbb    eax,0x3bd817d4
  4068d4:	mov    ds:0x2de6a16f,eax
  4068d9:	je     0x40690c
  4068db:	xchg   ebp,eax
  4068dc:	stos   BYTE PTR es:[edi],al
  4068dd:	sbb    ch,dl
  4068df:	and    al,0x73
  4068e1:	outs   dx,DWORD PTR ds:[esi]
  4068e2:	jl     0x406928
  4068e4:	xor    eax,0x5ddd2cc5
  4068e9:	push   0xf5306b20
  4068ee:	lods   al,BYTE PTR ds:[esi]
  4068ef:	push   esp
  4068f0:	sub    DWORD PTR [ebp-0x75],ebp
  4068f3:	xor    DWORD PTR [ebx+0x437992a6],esp
  4068f9:	mov    eax,0x7b58d1a4
  4068fe:	sub    ebx,0x6c
  406901:	pushf  
  406902:	fcmovu st,st(1)
  406904:	push   ebp
  406905:	hlt    
  406906:	pushfw 
  406908:	push   ebp
  406909:	pop    es
  40690a:	pop    edi
  40690b:	cmp    ah,ah
  40690d:	pushf  
  40690e:	jmp    0x406980
  406910:	mov    dh,dl
  406912:	push   0x68dc7d90
  406917:	enter  0xd163,0xcb
  40691b:	mov    ebp,DWORD PTR [eax+0x7a872f1b]
  406921:	sahf   
  406922:	ins    BYTE PTR es:[edi],dx
  406923:	mov    eax,0x9e096df1
  406928:	cmp    BYTE PTR [ecx-0x2d7c3859],bh
  40692e:	ror    DWORD PTR [edx-0x43],cl
  406931:	xchg   ecx,eax
  406932:	retf   
  406933:	stos   BYTE PTR es:[edi],al
  406934:	in     al,0x66
  406936:	out    0xbc,eax
  406938:	or     eax,0x6d4b188b
  40693d:	jg     0x4068bf
  40693f:	and    ebp,ecx
  406941:	and    eax,0x77166c1e
  406946:	xlat   BYTE PTR ds:[ebx]
  406947:	jmp    0xac899dcf
  40694c:	push   eax
  40694d:	mov    WORD PTR [edi],gs
  40694f:	xchg   ebp,eax
  406950:	or     ebp,DWORD PTR [ebx]
  406952:	fadd   QWORD PTR [eax+0x22]
  406955:	nop
  406956:	pop    edi
  406957:	pop    ds
  406958:	push   ds
  406959:	int3   
  40695a:	aaa    
  40695b:	push   es
  40695c:	js     0x406917
  40695e:	popa   
  40695f:	dec    esi
  406960:	push   ds
  406961:	mov    WORD PTR [edi-0xeec67ea],ds
  406967:	popa   
  406968:	jmp    0x406935
  40696a:	imul   ebp,DWORD PTR [esi],0x4161a578
  406970:	mov    ecx,0x23f3329e
  406975:	xor    BYTE PTR [edx],bh
  406977:	xor    cl,BYTE PTR [edx]
  406979:	adc    BYTE PTR [edx-0x6a6d7465],ch
  40697f:	mov    esi,0x4be9572
  406984:	loope  0x40695d
  406986:	fsubp  st(6),st
  406988:	in     al,0xf8
  40698a:	mov    edx,0x6b464bad
  40698f:	mov    WORD PTR [ecx+0x6f],cs
  406992:	push   ebp
  406993:	pop    es
  406994:	je     0x40699e
  406996:	add    ebx,ecx
  406998:	(bad)  
  40699a:	jg     0x4069b8
  40699c:	pusha  
  40699d:	in     al,0x35
  40699f:	daa    
  4069a0:	cdq    
  4069a1:	pop    edx
  4069a2:	ins    DWORD PTR es:[edi],dx
  4069a3:	cmc    
  4069a4:	cmp    eax,0xc416a565
  4069a9:	neg    bh
  4069ab:	cmp    BYTE PTR [ebx],ah
  4069ad:	icebp  
  4069ae:	(bad)  
  4069af:	arpl   WORD PTR [edi+edi*8-0x22e4c73],si
  4069b6:	xor    ecx,DWORD PTR [esi+0x7e]
  4069b9:	jo     0x4069fd
  4069bb:	lea    ebx,[eax+0x37fe3e1c]
  4069c1:	aam    0xd5
  4069c3:	scas   al,BYTE PTR es:[edi]
  4069c4:	cmp    BYTE PTR [ebx+0x7c],0xdf
  4069c8:	adc    eax,0x9915525f
  4069cd:	(bad)  
  4069ce:	mov    fs,WORD PTR ds:0x3efd8fc4
  4069d4:	lock pop ecx
  4069d6:	loop   0x406a2e
  4069d8:	cmp    DWORD PTR [eax-0x111e0863],ecx
  4069de:	jnp    0x406973
  4069e0:	or     ebp,DWORD PTR [edi+0x2d]
  4069e3:	imul   edi,DWORD PTR [eax+eiz*1-0x130fd690],0xffffffe0
  4069eb:	retf   
  4069ec:	fdivr  DWORD PTR [ebp-0x177d6c5b]
  4069f2:	mov    esi,DWORD PTR [edi]
  4069f4:	sub    al,0x5e
  4069f6:	lock pop esp
  4069f8:	xchg   edx,eax
  4069f9:	cmc    
  4069fa:	cmp    DWORD PTR [edi-0x2714be91],esi
  406a00:	adc    DWORD PTR [ebx+0xfe62ed1],edi
  406a06:	icebp  
  406a07:	mov    bl,0xf7
  406a09:	mov    eax,0x1ee0bd85
  406a0e:	cmp    al,0x28
  406a10:	cmp    BYTE PTR [esi],al
  406a12:	sbb    BYTE PTR [ebx],0x13
  406a15:	dec    edx
  406a16:	add    DWORD PTR [edx+0x53],eax
  406a19:	repz adc al,0x8c
  406a1c:	mov    eax,0xc6fcb6f0
  406a21:	imul   ecx,DWORD PTR [eax],0x72
  406a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a25:	idiv   dl
  406a27:	lea    esp,[edx+ecx*4]
  406a2a:	jne    0x4069f8
  406a2c:	icebp  
  406a2d:	cwde   
  406a2e:	dec    esi
  406a2f:	retf   0x182c
  406a32:	xchg   esp,eax
  406a33:	xor    ebp,DWORD PTR [ebx-0x1a352bda]
  406a39:	fcomp  st(7)
  406a3b:	out    dx,al
  406a3c:	lahf   
  406a3d:	xchg   ah,dl
  406a3f:	adc    eax,ebp
  406a41:	mov    cs,WORD PTR [ebp+0x17]
  406a44:	push   0xffffffa6
  406a46:	pop    ss
  406a47:	inc    eax
  406a48:	cdq    
  406a49:	fcmovu st,st(1)
  406a4b:	xchg   ecx,eax
  406a4c:	jnp    0x406aaa
  406a4e:	mov    eax,0xbb410324
  406a53:	dec    BYTE PTR [eax-0x20]
  406a56:	and    ah,al
  406a58:	test   BYTE PTR [ebx],cl
  406a5a:	adc    dh,dh
  406a5c:	push   edx
  406a5d:	xor    DWORD PTR [edx],edx
  406a5f:	fild   QWORD PTR ds:0x46210cec
  406a65:	xchg   ebp,eax
  406a66:	xor    DWORD PTR ds:0xeb90d5ff,edi
  406a6c:	and    cl,BYTE PTR ds:0xa757347d
  406a72:	ret    
  406a73:	pop    DWORD PTR [esi]
  406a75:	in     al,0x85
  406a77:	mov    al,0xe9
  406a79:	add    esp,DWORD PTR [ebx+edx*1]
  406a7c:	pop    ebx
  406a7d:	int3   
  406a7e:	ret    0xd5e3
  406a81:	scas   eax,DWORD PTR es:[edi]
  406a82:	rcr    ebx,0x47
  406a85:	(bad)  
  406a86:	loop   0x406a2e
  406a88:	ss popf 
  406a8a:	cli    
  406a8b:	das    
  406a8c:	in     eax,dx
  406a8d:	lods   eax,DWORD PTR ds:[esi]
  406a8e:	jae    0x406a2a
  406a90:	adc    al,0xfc
  406a92:	pop    edi
  406a93:	stc    
  406a94:	push   es
  406a95:	(bad)  
  406a96:	lock test eax,0x927d521e
  406a9c:	(bad)  
  406a9d:	jmp    DWORD PTR [ebx-0x16f978bd]
  406aa3:	daa    
  406aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aa5:	enter  0x2bdb,0x1d
  406aa9:	outs   dx,DWORD PTR ds:[esi]
  406aaa:	inc    esp
  406aab:	fisubr WORD PTR [ebp+edi*1+0x5c969030]
  406ab2:	mov    BYTE PTR [esi-0x3a16ac2b],dl
  406ab8:	cmc    
  406ab9:	fs das 
  406abb:	stos   DWORD PTR es:[edi],eax
  406abc:	or     DWORD PTR [ecx+edx*4+0x5eda7742],esp
  406ac3:	stos   BYTE PTR es:[edi],al
  406ac4:	mov    al,0xe2
  406ac6:	(bad)  
  406ac7:	xchg   esi,eax
  406ac8:	ja     0x406a56
  406aca:	rol    DWORD PTR [edx+ebx*1-0x7a862890],1
  406ad1:	xchg   ebx,eax
  406ad2:	xchg   ebx,eax
  406ad3:	mov    esi,0xe683217
  406ad8:	sub    al,0xf2
  406ada:	push   ss
  406adb:	xchg   BYTE PTR [edi-0x45],ah
  406ade:	pusha  
  406adf:	aaa    
  406ae0:	mov    ebp,0xce0b589b
  406ae5:	adc    edi,ecx
  406ae7:	mov    WORD PTR [esi],cs
  406ae9:	and    cl,BYTE PTR [esp+edi*4+0x3e]
  406aed:	js     0x406a6f
  406aef:	inc    edi
  406af0:	jg     0x406a77
  406af2:	(bad)  
  406af3:	into   
  406af4:	cmp    BYTE PTR [edi+0x9],0x22
  406af8:	call   0x9c58:0x2ec0f674
  406aff:	(bad)  
  406b00:	(bad)  
  406b01:	aad    0x33
  406b03:	lahf   
  406b04:	inc    edi
  406b05:	idiv   ah
  406b07:	(bad)  
  406b08:	in     al,0x1e
  406b0a:	mov    DWORD PTR [ecx+eax*2-0x6b],ebx
  406b0e:	mov    BYTE PTR [ecx],al
  406b10:	rcl    BYTE PTR [ebp+0x69],0x0
  406b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b15:	fidivr DWORD PTR [ebp+ebp*4-0x5d6ea96f]
  406b1c:	sub    al,0xc3
  406b1e:	sub    al,0x91
  406b20:	pop    ds
  406b21:	push   ebx
  406b22:	sbb    eax,0xe53cc999
  406b27:	aad    0xa7
  406b29:	inc    edx
  406b2a:	xchg   esp,eax
  406b2b:	outs   dx,DWORD PTR ds:[esi]
  406b2c:	adc    eax,0x8a850f4c
  406b31:	sub    DWORD PTR [ebx],eax
  406b33:	shr    edi,cl
  406b35:	inc    ebp
  406b36:	cmp    al,0x2d
  406b38:	aam    0x3d
  406b3a:	bound  esp,QWORD PTR ds:0xb729a89a
  406b40:	push   ebx
  406b41:	and    BYTE PTR [edi-0x56aee759],ch
  406b47:	mov    ebp,0x44f5d0d1
  406b4c:	es inc ebx
  406b4e:	cmp    dh,BYTE PTR [edi-0x43]
  406b51:	add    bl,ch
  406b53:	retf   0x5b3c
  406b56:	repnz push cs
  406b58:	mov    al,ds:0xf36ca55
  406b5d:	xchg   ecx,eax
  406b5e:	lahf   
  406b5f:	xor    al,dl
  406b61:	pop    esi
  406b62:	gs aad 0x82
  406b65:	pushf  
  406b66:	scas   eax,DWORD PTR es:[edi]
  406b67:	jl     0x406bd0
  406b69:	adc    ecx,eax
  406b6b:	adc    eax,0x73c8c2dc
  406b70:	lods   al,BYTE PTR ds:[esi]
  406b71:	add    ebp,0xf8b663f1
  406b77:	jne    0x406bb4
  406b79:	int    0xa
  406b7b:	sub    al,0x63
  406b7d:	sub    al,0xd4
  406b7f:	add    al,0xa9
  406b81:	in     eax,dx
  406b82:	sub    al,0x6d
  406b84:	mov    ds:0x127b2163,al
  406b89:	jno    0x406bdd
  406b8b:	fcmovb st,st(0)
  406b8d:	mov    edx,0xcbe625fe
  406b92:	sar    DWORD PTR [edx],1
  406b94:	mov    cl,cl
  406b96:	push   ecx
  406b97:	pop    ds
  406b98:	mul    WORD PTR [edi-0x70b323ad]
  406b9f:	fisubr DWORD PTR [ecx+0x4da7c84a]
  406ba5:	sub    eax,edi
  406ba7:	cmp    edi,DWORD PTR [ebx+0x72]
  406baa:	xchg   ebp,eax
  406bab:	push   ebp
  406bac:	inc    ebp
  406bad:	ds mov eax,0xfb920c2
  406bb3:	sbb    eax,0xfbdf463a
  406bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bb9:	dec    ebx
  406bba:	and    edi,DWORD PTR [eax+0x736b0eea]
  406bc0:	jb     0x406bf2
  406bc2:	ins    BYTE PTR es:[edi],dx
  406bc3:	push   ss
  406bc4:	sti    
  406bc5:	pop    esp
  406bc6:	retf   
  406bc7:	test   DWORD PTR ss:[ecx+0x42363a80],ebp
  406bce:	dec    esi
  406bcf:	adc    dl,BYTE PTR [eax+0x23]
  406bd2:	dec    ebp
  406bd3:	push   eax
  406bd4:	mov    ebp,0xafbe5811
  406bd9:	repnz add eax,0x6ebf8a
  406bdf:	pop    ss
  406be0:	pop    edx
  406be1:	inc    edi
  406be2:	sysexit 
  406be4:	mov    dl,0x3c
  406be6:	jg     0x406c4f
  406be8:	or     BYTE PTR [ecx],dl
  406bea:	in     eax,0xc3
  406bec:	dec    DWORD PTR [eax+0x3f]
  406bef:	and    DWORD PTR [ecx],0x6e08e8f3
  406bf5:	mov    al,ds:0xe5e05d23
  406bfa:	push   es
  406bfb:	xchg   DWORD PTR [esi-0x3c],ebx
  406bfe:	mov    DWORD PTR [eax],ebx
  406c00:	shl    BYTE PTR [ebp+0x2c92fa30],1
  406c06:	bound  edi,QWORD PTR [ebp-0x7e4ae1bd]
  406c0c:	sahf   
  406c0d:	inc    esi
  406c0e:	xchg   ebx,eax
  406c0f:	stos   BYTE PTR es:[edi],al
  406c10:	jg     0x406c46
  406c12:	jmp    0x406c42
  406c14:	xchg   edi,eax
  406c15:	jl     0x406c09
  406c17:	(bad)  
  406c18:	mov    esp,0x776ecf37
  406c1d:	jmp    0xbeff:0x35dbc353
  406c24:	std    
  406c25:	sbb    al,0x93
  406c27:	popa   
  406c28:	mov    eax,DWORD PTR [edi]
  406c2a:	xchg   ebp,eax
  406c2b:	push   0xffffff9a
  406c2d:	div    DWORD PTR [eax-0x21]
  406c30:	mov    ah,0x96
  406c32:	sbb    eax,0xbe113d0f
  406c37:	push   esi
  406c38:	pop    ebx
  406c39:	add    dl,cl
  406c3b:	cmc    
  406c3c:	inc    ebx
  406c3d:	and    BYTE PTR [edx+ebx*2+0x47],bl
  406c41:	dec    ecx
  406c42:	xor    bh,BYTE PTR [esi]
  406c44:	mov    WORD PTR [ebx-0x7c5a42be],?
  406c4a:	(bad)  
  406c4b:	ficomp DWORD PTR [eax+0x0]
  406c4e:	in     eax,0xa6
  406c50:	sub    al,0x78
  406c52:	ficom  WORD PTR [edx]
  406c54:	lds    edx,FWORD PTR [eax]
  406c56:	pop    ss
  406c57:	adc    eax,0x49760bc1
  406c5c:	icebp  
  406c5d:	sub    ch,BYTE PTR [esi+ebx*8+0xc]
  406c61:	test   BYTE PTR [edx],ah
  406c63:	lods   al,BYTE PTR ds:[esi]
  406c64:	xchg   ecx,edx
  406c66:	mov    eax,0x84afccb7
  406c6b:	add    eax,0xb4e3df76
  406c70:	sub    eax,0xc897380c
  406c75:	nop
  406c76:	and    BYTE PTR [edi+0x4e1ad722],al
  406c7c:	lds    edx,FWORD PTR [esi]
  406c7e:	call   0xf8546c0b
  406c83:	dec    ebx
  406c84:	retf   
  406c85:	popa   
  406c86:	pop    eax
  406c87:	pop    ecx
  406c88:	fdivr  DWORD PTR [edx+0x12be695d]
  406c8e:	fwait
  406c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c90:	add    edx,DWORD PTR fs:[ebx+eax*1]
  406c94:	pushf  
  406c95:	xchg   edi,eax
  406c96:	dec    ebx
  406c97:	(bad)  [esp+esi*2]
  406c9a:	scas   al,BYTE PTR es:[edi]
  406c9b:	mov    es,WORD PTR [ebx+0x71df6ca5]
  406ca1:	loope  0x406c52
  406ca3:	mov    ebx,0x19c4caef
  406ca8:	mov    DWORD PTR [edx+0x72],esp
  406cab:	push   edi
  406cac:	outs   dx,BYTE PTR ds:[esi]
  406cad:	cmp    DWORD PTR [edx-0x408518fe],ebx
  406cb3:	enter  0x9be3,0xd2
  406cb7:	sbb    BYTE PTR [ecx-0x22a5564b],bh
  406cbd:	fstp   DWORD PTR [ecx]
  406cbf:	nop    edx
  406cc2:	mov    esi,eax
  406cc4:	push   ecx
  406cc5:	cmp    al,0x89
  406cc7:	pop    edx
  406cc8:	dec    ebx
  406cc9:	fxch   st(7)
  406ccb:	push   esp
  406ccc:	adc    al,0x6d
  406cce:	lds    ecx,FWORD PTR [edi+0x75]
  406cd1:	pop    ecx
  406cd2:	call   0x14af12f8
  406cd7:	lods   eax,DWORD PTR gs:[esi]
  406cd9:	in     eax,0x58
  406cdb:	sbb    bh,ch
  406cdd:	rcr    cl,0xd3
  406ce0:	adc    al,0xd4
  406ce2:	arpl   WORD PTR [eax+eiz*2],bx
  406ce5:	mov    bh,0xbd
  406ce7:	stos   BYTE PTR es:[edi],al
  406ce8:	xor    esi,edi
  406cea:	mov    eax,ds:0xb2efb39e
  406cef:	or     ah,BYTE PTR [eax+ebx*8]
  406cf2:	fidivr DWORD PTR [ebp+0x11e4c724]
  406cf8:	inc    edx
  406cf9:	in     al,0xa
  406cfb:	repnz (bad) 
  406cfd:	out    dx,al
  406cfe:	pop    ds
  406cff:	xor    edx,edi
  406d01:	sbb    eax,0x8e7dc3df
  406d06:	js     0x406cb5
  406d08:	mov    dh,0x52
  406d0a:	mov    edx,ebp
  406d0c:	and    dh,0xb8
  406d0f:	pop    ss
  406d10:	or     ch,BYTE PTR [edi]
  406d12:	rcl    DWORD PTR [ebp-0x7316dc5c],1
  406d18:	int3   
  406d19:	sbb    cl,dh
  406d1b:	pop    edi
  406d1c:	push   0x119fb154
  406d21:	jp     0x406d8f
  406d23:	adc    al,0xff
  406d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d26:	xor    eax,0x90229302
  406d2b:	push   ss
  406d2c:	mov    ebx,0xe5cab7bf
  406d31:	pop    ebx
  406d32:	mov    dh,0xba
  406d34:	add    eax,0x7de8db0b
  406d39:	xor    esi,DWORD PTR [edx-0x50]
  406d3c:	sub    eax,0x9328004a
  406d41:	jnp    0x406d3f
  406d43:	aas    
  406d44:	test   BYTE PTR [ebx+eax*1-0x7d],al
  406d48:	push   edi
  406d49:	push   ds
  406d4a:	arpl   WORD PTR [ecx+0x44],bp
  406d4d:	jmp    0x406d18
  406d4f:	push   es
  406d50:	arpl   WORD PTR [esp+esi*2-0x560dfbc],bx
  406d57:	pop    es
  406d58:	inc    ebp
  406d59:	loope  0x406ce0
  406d5b:	xor    eax,0x606e4450
  406d60:	jb     0x406d20
  406d62:	lea    esp,[esi]
  406d64:	or     al,BYTE PTR ds:0x87e566ab
  406d6a:	xor    ah,BYTE PTR [esi+edi*2+0x3765c22c]
  406d71:	ret    0xc7bf
  406d74:	scas   eax,DWORD PTR es:[edi]
  406d75:	aaa    
  406d76:	sbb    BYTE PTR [ecx+0x18],cl
  406d79:	(bad)  
  406d7b:	das    
  406d7c:	adc    ecx,DWORD PTR [edi+0x6]
  406d7f:	mov    ebp,0x3ed03e7b
  406d84:	leave  
  406d85:	xlat   BYTE PTR ds:[ebx]
  406d86:	ret    
  406d87:	pop    ecx
  406d88:	push   ecx
  406d89:	dec    BYTE PTR [edx-0x56]
  406d8c:	xor    bh,BYTE PTR [edx+0x497ff3e7]
  406d92:	push   ecx
  406d93:	add    eax,0x8cf1ba46
  406d98:	add    DWORD PTR [edi+esi*4+0x22],ebx
  406d9c:	test   BYTE PTR [ecx+0x58],bl
  406d9f:	es jo  0x406dbb
  406da2:	or     dl,dl
  406da4:	dec    ecx
  406da5:	push   ecx
  406da6:	push   ss
  406da7:	sbb    eax,0x186da35c
  406dac:	mov    edi,ebx
  406dae:	sti    
  406daf:	inc    edx
  406db0:	xor    DWORD PTR [edi],ebp
  406db2:	push   eax
  406db3:	div    BYTE PTR ss:[ebx]
  406db6:	and    DWORD PTR [ecx+edi*4-0x6],esp
  406dba:	push   0xbda3bec8
  406dbf:	mov    ds:0x286d0ca3,al
  406dc4:	dec    ecx
  406dc5:	in     eax,dx
  406dc6:	inc    ebp
  406dc7:	(bad)  
  406dc9:	(bad)  
  406dca:	jne    0x406def
  406dcc:	xchg   ax,ax
  406dce:	mov    dl,0x68
  406dd0:	cmp    esp,DWORD PTR [eax-0x46]
  406dd3:	jl     0x406e2c
  406dd5:	fst    QWORD PTR [edi-0x564537be]
  406ddb:	ins    BYTE PTR es:[edi],dx
  406ddc:	retf   0x9270
  406ddf:	push   es
  406de0:	adc    ecx,DWORD PTR [ecx+0x44]
  406de3:	pusha  
  406de4:	inc    ebp
  406de5:	pop    edi
  406de6:	xchg   ebp,eax
  406de7:	lds    edi,FWORD PTR [edi]
  406de9:	lods   al,BYTE PTR ds:[esi]
  406dea:	scas   al,BYTE PTR es:[edi]
  406deb:	jmp    0x406e61
  406ded:	aad    0xb
  406def:	mov    ah,0x6c
  406df1:	sub    ah,BYTE PTR [ebx]
  406df3:	jp     0x406e03
  406df5:	pop    ebx
  406df6:	(bad)  
  406df7:	std    
  406df8:	pop    ebp
  406df9:	cmp    dl,BYTE PTR [edx+0x37]
  406dfc:	lds    edx,FWORD PTR [ecx+0x65]
  406dff:	imul   edx,DWORD PTR [edi-0x36],0xffffff9c
  406e03:	jb     0x406e80
  406e05:	test   edi,ebp
  406e07:	adc    al,0xc1
  406e09:	push   ebp
  406e0a:	or     dh,BYTE PTR [ebx+0x17]
  406e0d:	add    DWORD PTR [ebx],eax
  406e0f:	sub    DWORD PTR [eax],eax
  406e11:	pusha  
  406e12:	dec    edi
  406e13:	sub    DWORD PTR [eax],esp
  406e15:	out    dx,eax
  406e16:	inc    ebx
  406e17:	scas   eax,DWORD PTR es:[edi]
  406e18:	jmp    0x406e1d
  406e1a:	fs leave 
  406e1c:	xor    al,0x22
  406e1e:	pop    edx
  406e1f:	neg    DWORD PTR [ebp+0x3c]
  406e22:	daa    
  406e23:	enter  0xe81d,0xef
  406e27:	mov    ds:0x466f7645,eax
  406e2c:	stos   DWORD PTR es:[edi],eax
  406e2d:	hlt    
  406e2e:	push   es
  406e2f:	iret   
  406e30:	xchg   esp,eax
  406e31:	add    ebx,DWORD PTR [ecx-0xf]
  406e34:	clc    
  406e35:	add    BYTE PTR [ebx-0x5c],0x6
  406e39:	mov    edx,DWORD PTR [ebp-0x14]
  406e3c:	inc    ebp
  406e3d:	dec    eax
  406e3e:	hlt    
  406e3f:	push   ebp
  406e40:	in     eax,0xf0
  406e42:	adc    eax,DWORD PTR [ecx-0x3808eb0f]
  406e48:	call   0xa116:0x5003f453
  406e4f:	lock inc esp
  406e51:	adc    ah,BYTE PTR [edi+0x28342658]
  406e57:	test   eax,0x37711435
  406e5c:	and    BYTE PTR [edi],al
  406e5e:	mov    ?,WORD PTR [eax+0x55]
  406e61:	das    
  406e62:	dec    edx
  406e63:	inc    edi
  406e64:	mov    BYTE PTR [esi],bh
  406e66:	fstp   TBYTE PTR [ebp+esi*8+0x6d]
  406e6a:	pop    edx
  406e6b:	lahf   
  406e6c:	stos   DWORD PTR es:[edi],eax
  406e6d:	stos   DWORD PTR es:[edi],eax
  406e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e6f:	mov    al,0x1a
  406e71:	push   esi
  406e72:	or     DWORD PTR ds:0x83eb1cf1,0x7c788af3
  406e7c:	das    
  406e7d:	mov    bh,0x3a
  406e7f:	and    edi,edx
  406e81:	bound  ecx,QWORD PTR [ecx-0x2]
  406e84:	mov    cl,BYTE PTR [edi+esi*8]
  406e87:	out    dx,eax
  406e88:	mov    ch,0xa0
  406e8a:	and    ah,BYTE PTR [edx+ebp*2-0x28]
  406e8e:	out    0x2a,al
  406e90:	ja     0x406e33
  406e92:	adc    DWORD PTR [eax+ebp*8-0x605db1b5],ecx
  406e99:	mov    esp,0x88658a0c
  406e9e:	loope  0x406eb2
  406ea0:	or     ch,BYTE PTR [ecx+0x61]
  406ea3:	and    dh,0x68
  406ea6:	lods   al,BYTE PTR ds:[esi]
  406ea7:	nop
  406ea8:	xchg   edx,eax
  406ea9:	loop   0x406eed
  406eab:	jl     0x406edb
  406ead:	mov    edi,0xcc7ee2e
  406eb2:	or     al,0xdd
  406eb4:	lahf   
  406eb5:	addr16 popf 
  406eb7:	fstp   QWORD PTR [ebx]
  406eb9:	and    al,0x93
  406ebb:	sbb    bl,BYTE PTR [eax+0x30514bb5]
  406ec1:	sub    esp,DWORD PTR [edi+0x329eb014]
  406ec7:	inc    esi
  406ec8:	xor    DWORD PTR [esi],0xe3a94b59
  406ece:	ins    DWORD PTR es:[edi],dx
  406ecf:	push   ebx
  406ed0:	mov    esp,0xca652710
  406ed5:	and    al,0x13
  406ed7:	rcl    BYTE PTR [eax],cl
  406ed9:	sbb    ch,BYTE PTR [edi-0x72e58a87]
  406edf:	push   0x54
  406ee1:	(bad)  
  406ee2:	js     0x406f05
  406ee4:	cmc    
  406ee5:	(bad)  
  406ee6:	stc    
  406ee7:	clc    
  406ee8:	inc    ebx
  406ee9:	mov    edx,0x50d0a904
  406eee:	outs   dx,DWORD PTR ds:[esi]
  406eef:	in     eax,dx
  406ef0:	jecxz  0x406ecf
  406ef2:	popf   
  406ef3:	adc    DWORD PTR [esi+0x1568b855],esi
  406ef9:	push   ebp
  406efa:	push   ss
  406efb:	cli    
  406efc:	in     eax,0x35
  406efe:	(bad)  [ebx+eax*4]
  406f01:	jl     0x406e93
  406f03:	stc    
  406f04:	test   BYTE PTR cs:[edx],ah
  406f07:	push   ebx
  406f08:	js     0x406e96
  406f0a:	jg     0x406f34
  406f0c:	hlt    
  406f0d:	mov    esi,0x419a33ec
  406f12:	mov    ah,0xe3
  406f14:	fsubr  DWORD PTR [ebx-0x18]
  406f17:	sbb    DWORD PTR [ebx+esi*8-0x1e],edx
  406f1b:	nop
  406f1c:	mov    esi,0x25b78088
  406f21:	push   ecx
  406f22:	data16 cmc 
  406f24:	pop    ecx
  406f25:	imul   eax,DWORD PTR [edx-0x6c19750a],0xe682dca
  406f2f:	mov    cl,0xce
  406f31:	add    ecx,esi
  406f33:	xchg   edx,eax
  406f34:	dec    edx
  406f35:	nop
  406f36:	mov    dh,0x41
  406f38:	mov    ebp,0xdf84446
  406f3d:	ret    
  406f3e:	sub    DWORD PTR [edi+0x3808db2a],eax
  406f44:	(bad)  
  406f45:	sub    DWORD PTR [eax+0x7756d43b],eax
  406f4b:	or     al,BYTE PTR [edi+0x17]
  406f4e:	mov    ebp,0x7a05cfa7
  406f53:	xchg   esp,eax
  406f54:	mov    cl,0x2e
  406f56:	xchg   ecx,eax
  406f57:	imul   DWORD PTR [ebx-0x372789d]
  406f5d:	ss hlt 
  406f5f:	js     0x406f85
  406f61:	xchg   edi,eax
  406f62:	and    ecx,DWORD PTR [esi]
  406f64:	push   ecx
  406f65:	jmp    0x406f60
  406f67:	imul   edi,esp,0xffffff94
  406f6a:	gs push ebp
  406f6c:	loop   0x406f82
  406f6e:	add    esi,DWORD PTR ds:0x58e7524b
  406f74:	mov    eax,DWORD PTR [ebx-0x5c]
  406f77:	cmp    eax,0x997538e8
  406f7c:	adc    eax,0x775dbc
  406f81:	adc    ch,BYTE PTR [ebp-0x33a1c938]
  406f87:	gs jns 0x406f6a
  406f8a:	movq   QWORD PTR [ebx+0x2c],mm4
  406f8e:	mov    esi,0xec6bd728
  406f93:	dec    ecx
  406f94:	or     DWORD PTR ds:[edi+ecx*2+0x348e79d7],ebp
  406f9c:	push   edx
  406f9d:	daa    
  406f9e:	jno    0x406fb1
  406fa0:	cmp    al,0xd8
  406fa2:	outs   dx,DWORD PTR ds:[esi]
  406fa3:	shr    DWORD PTR [ebp+0x47],0x5c
  406fa7:	xchg   ecx,eax
  406fa8:	cmp    BYTE PTR [ebx-0x3e68a17d],0x5
  406faf:	add    bh,bh
  406fb1:	push   0x11dcaf1f
  406fb6:	sub    BYTE PTR [edx],cl
  406fb8:	stos   DWORD PTR es:[edi],eax
  406fb9:	sbb    DWORD PTR [eax-0x10033944],edi
  406fbf:	sahf   
  406fc0:	dec    edi
  406fc1:	clc    
  406fc2:	pushf  
  406fc3:	jg     0x406f68
  406fc5:	adc    eax,0xe989e89d
  406fca:	adc    al,0xd9
  406fcc:	cli    
  406fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fce:	sbb    ch,BYTE PTR [edi+0xe0d5fed]
  406fd4:	add    al,0x9f
  406fd6:	jecxz  0x406f7a
  406fd8:	mov    edi,0x1a1c7889
  406fdd:	jle    0x40704e
  406fdf:	fmul   QWORD PTR [edi+0x46644cb1]
  406fe5:	mov    bh,0x29
  406fe7:	mov    bh,0xad
  406fea:	retf   
  406feb:	es push esi
  406fed:	retf   
  406fee:	mov    BYTE PTR [ecx+ebp*1],0xc5
  406ff2:	rol    bh,1
  406ff4:	fadd   st,st(2)
  406ff6:	mov    al,ds:0x39385afe
  406ffb:	inc    ecx
  406ffc:	js     0x406fda
  406ffe:	sub    eax,0x54a51197
  407003:	jb     0x406fb8
  407005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407006:	or     al,0xa1
  407008:	fs inc ebp
  40700a:	(bad)  [esi-0x7b06a178]
  407010:	(bad)  
  407012:	inc    ecx
  407013:	mov    ebp,0x17c9d91d
  407018:	xchg   edi,eax
  407019:	push   edx
  40701a:	in     eax,0x93
  40701c:	pop    esi
  40701d:	out    0x24,eax
  40701f:	call   0x9263f725
  407024:	es in  al,dx
  407026:	(bad)  
  407028:	int3   
  407029:	sub    BYTE PTR [ebp+0x33a258d0],cl
  40702f:	sbb    DWORD PTR [edi+0x76],ecx
  407032:	dec    ecx
  407033:	adc    eax,0x119d1eb7
  407038:	cdq    
  407039:	push   ebx
  40703a:	lods   eax,DWORD PTR ds:[esi]
  40703b:	add    eax,0xd04c0a8
  407040:	cmp    BYTE PTR [edi+0x7ce03e00],dh
  407046:	push   edx
  407047:	mov    ds:0x6c90623e,eax
  40704c:	into   
  40704d:	das    
  40704e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40704f:	jb     0x407039
  407051:	ins    BYTE PTR es:[edi],dx
  407052:	mov    cl,BYTE PTR [esi-0x413b9d39]
  407058:	jbe    0x40707a
  40705a:	xchg   ecx,eax
  40705b:	xor    eax,edx
  40705d:	and    ecx,ecx
  40705f:	popa   
  407060:	aas    
  407061:	js     0x4070a4
  407063:	push   edx
  407064:	mov    esp,DWORD PTR [edi+0x4a]
  407067:	outs   dx,DWORD PTR ds:[esi]
  407068:	cdq    
  407069:	ss sub ebx,ebp
  40706c:	gs ja  0x4070c3
  40706f:	adc    edi,DWORD PTR [ecx]
  407071:	and    dl,BYTE PTR [esi+edx*2-0x57824b3c]
  407078:	daa    
  407079:	push   eax
  40707a:	jl     0x4070d4
  40707c:	es jmp 0xaca7:0xf9a10719
  407084:	int3   
  407085:	pop    es
  407086:	lahf   
  407087:	call   0x5163fd9
  40708c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40708d:	add    ebp,ecx
  40708f:	and    DWORD PTR [esi+0x64448f26],edx
  407095:	js     0x407116
  407097:	cmp    bl,al
  407099:	stos   DWORD PTR es:[edi],eax
  40709a:	xor    al,0xbb
  40709c:	push   esi
  40709d:	jnp    0x407053
  40709f:	mov    ah,0x32
  4070a1:	pop    ebx
  4070a2:	shl    DWORD PTR [ebx-0x75],cl
  4070a5:	pop    edx
  4070a6:	jg     0x407104
  4070a8:	adc    BYTE PTR [esi-0x77],al
  4070ab:	scas   eax,DWORD PTR es:[edi]
  4070ac:	enter  0xb976,0x7c
  4070b0:	sti    
  4070b1:	xor    eax,0xdd15dede
  4070b6:	jmp    0xfc64296a
  4070bb:	mov    dl,0xf0
  4070bd:	popa   
  4070be:	inc    ebx
  4070bf:	mov    al,BYTE PTR [edx]
  4070c1:	sub    dl,ah
  4070c3:	add    DWORD PTR [eax-0x4b1cd180],eax
  4070c9:	std    
  4070ca:	mov    ecx,0xd7b24fbf
  4070cf:	add    eax,0x280d201a
  4070d4:	sahf   
  4070d5:	std    
  4070d6:	pop    es
  4070d7:	in     al,0x76
  4070d9:	sub    ecx,DWORD PTR [ebp-0x3478b58b]
  4070df:	sub    dl,BYTE PTR [edi+0x345bd5ac]
  4070e5:	mov    ebp,0xc51c468f
  4070ea:	sahf   
  4070eb:	ja     0x407154
  4070ed:	push   ebx
  4070ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ef:	in     al,dx
  4070f0:	or     DWORD PTR [ecx],edx
  4070f2:	shr    DWORD PTR [ebx],cl
  4070f4:	push   es
  4070f5:	iret   
  4070f6:	fimul  WORD PTR [esi+edx*2-0x2c69f98f]
  4070fd:	sbb    ah,ch
  4070ff:	cmp    eax,DWORD PTR [eax+0x67c1a296]
  407105:	mov    cl,0xac
  407107:	cmp    al,0x5b
  407109:	ret    
  40710a:	sahf   
  40710b:	stos   DWORD PTR es:[edi],eax
  40710c:	stos   BYTE PTR es:[edi],al
  40710d:	stos   BYTE PTR es:[edi],al
  40710e:	xor    eax,0x8c2a9ff1
  407113:	mov    edi,0x405d3682
  407118:	mov    ?,WORD PTR [esi+edi*8]
  40711b:	enter  0xa716,0x84
  40711f:	ret    0xb7d2
  407122:	cld    
  407123:	push   ecx
  407124:	scas   eax,DWORD PTR es:[edi]
  407125:	call   0x510d:0x92780a61
  40712c:	(bad)
  407130:	(bad)  
  407131:	cs pop ebp
  407133:	cdq    
  407134:	mov    ?,WORD PTR [edi]
  407136:	bound  ebp,QWORD PTR [edx-0x64f91dcd]
  40713c:	out    dx,al
  40713d:	aam    0x7d
  40713f:	(bad)  
  407140:	mov    al,0x2c
  407142:	ss xchg edi,eax
  407144:	cs mov bh,0xe7
  407147:	aas    
  407148:	xor    cl,bl
  40714a:	jno    0x4070e3
  40714c:	push   eax
  40714d:	(bad)  
  40714e:	jge    0x40710c
  407150:	shl    BYTE PTR [eax-0x14222495],0x18
  407157:	shl    ecx,1
  407159:	mov    ds:0xa5d6c532,al
  40715e:	inc    esi
  40715f:	rol    DWORD PTR [ecx+0x21],1
  407162:	push   ebx
  407163:	xlat   BYTE PTR es:[ebx]
  407165:	mov    esp,DWORD PTR [eax+edx*8+0x4807c787]
  40716c:	inc    ecx
  40716d:	je     0x4070f4
  40716f:	pop    esi
  407170:	pushf  
  407171:	cmp    al,0x13
  407173:	(bad)  
  407174:	jo     0x4071b7
  407176:	mov    al,0x40
  407178:	push   esp
  407179:	aad    0x88
  40717b:	xchg   edx,eax
  40717c:	jno    0x4070ff
  40717e:	adc    eax,0xacc652bd
  407183:	js     0x40719e
  407185:	add    bh,BYTE PTR [edx+0x34794e1e]
  40718b:	or     DWORD PTR [ebp-0x4cb8395a],esi
  407191:	pop    esp
  407192:	adc    ah,BYTE PTR [eax+0x59]
  407195:	cmp    BYTE PTR [ecx],cl
  407197:	mov    ds:0x1dfab372,eax
  40719c:	cdq    
  40719d:	test   DWORD PTR [esi],esi
  40719f:	ror    BYTE PTR [ebp+edx*2-0x76],0xb1
  4071a4:	dec    ecx
  4071a5:	dec    ebp
  4071a6:	leave  
  4071a7:	mov    BYTE PTR [ebx+0x5a74563f],cl
  4071ad:	or     BYTE PTR [ecx],ch
  4071af:	sbb    ebp,DWORD PTR [edi+0x44]
  4071b2:	lods   eax,DWORD PTR ds:[esi]
  4071b3:	jne    0x4071af
  4071b5:	inc    eax
  4071b6:	sti    
  4071b7:	and    esp,ebx
  4071b9:	cmp    al,BYTE PTR [eax-0x7f]
  4071bc:	mov    esp,0x92aa6f00
  4071c1:	add    eax,0xfc2344e1
  4071c6:	push   ebx
  4071c7:	adc    esi,ebx
  4071c9:	cs or  eax,0x3645dc54
  4071cf:	(bad)  
  4071d0:	cmp    DWORD PTR [esi+0x23],ebx
  4071d3:	cmp    eax,0x825c9e2a
  4071d8:	mov    bh,0x54
  4071da:	jl     0x407206
  4071dc:	nop
  4071dd:	das    
  4071de:	xor    al,0xe0
  4071e0:	jnp    0x4071f2
  4071e2:	sbb    al,0xf1
  4071e4:	add    edx,ebp
  4071e6:	pop    ds
  4071e7:	mov    ecx,0x2979f19a
  4071ec:	jmp    0x48b5c3d8
  4071f1:	pop    edi
  4071f2:	pop    esi
  4071f3:	rcr    BYTE PTR [edi],cl
  4071f5:	mov    bl,0xc0
  4071f7:	adc    al,0x6a
  4071f9:	cli    
  4071fa:	fnstcw WORD PTR [edi]
  4071fc:	adc    BYTE PTR [eax],bl
  4071fe:	je     0x4071b7
  407200:	pop    ecx
  407201:	push   ebp
  407202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407203:	or     ebp,DWORD PTR [ebx-0x7c2a9b8d]
  407209:	jno    0x4071a7
  40720b:	lods   al,BYTE PTR ds:[esi]
  40720c:	ds aaa 
  40720e:	cmp    DWORD PTR [edi-0x4a1973de],eax
  407214:	sti    
  407215:	mov    WORD PTR [ebx-0x1745c4c9],es
  40721b:	in     al,dx
  40721c:	cmc    
  40721d:	imul   esp,DWORD PTR [esi-0x5231cabf],0x32
  407224:	jecxz  0x4071da
  407226:	test   DWORD PTR [esi],0x417b374a
  40722c:	sub    bh,BYTE PTR ss:[ecx-0x6ef7a0dc]
  407233:	(bad)  
  407235:	outs   dx,DWORD PTR ds:[esi]
  407236:	and    eax,0x6d77cc30
  40723b:	pop    es
  40723c:	add    bh,ch
  40723e:	lds    edi,FWORD PTR [esi+eax*4]
  407241:	inc    esp
  407242:	aam    0x9e
  407244:	cmc    
  407245:	or     bl,BYTE PTR [ecx]
  407247:	outs   dx,DWORD PTR ds:[esi]
  407248:	jmp    0xcdfc:0x525c1b6e
  40724f:	jecxz  0x407289
  407251:	or     al,0xfa
  407253:	cmc    
  407254:	repnz and BYTE PTR [ebp-0x5343c78a],cl
  40725b:	lods   eax,DWORD PTR ds:[esi]
  40725c:	cmp    DWORD PTR [ebp+0xa8cf49b],edx
  407262:	lea    edx,[edi-0x56033841]
  407268:	cmc    
  407269:	lahf   
  40726a:	outs   dx,BYTE PTR ds:[esi]
  40726b:	pop    ss
  40726c:	(bad)  
  40726d:	not    esp
  40726f:	out    dx,eax
  407270:	hlt    
  407271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407272:	add    BYTE PTR [edi+0x6],ch
  407275:	dec    esi
  407276:	in     al,dx
  407277:	in     eax,0xd1
  407279:	and    al,0x46
  40727b:	or     DWORD PTR [ecx],ecx
  40727d:	arpl   WORD PTR [edx-0x1fd0c8e9],bx
  407283:	(bad)  
  407284:	xchg   ecx,eax
  407285:	xchg   ecx,eax
  407286:	je     0x4072b9
  407288:	and    dl,BYTE PTR [esi+edi*1]
  40728b:	ficom  WORD PTR [esi]
  40728d:	add    ecx,eax
  40728f:	(bad)  
  407290:	(bad)  
  407291:	stos   BYTE PTR es:[edi],al
  407292:	mov    bl,0x11
  407294:	(bad)  
  407295:	(bad)  
  407296:	lahf   
  407297:	pushf  
  407298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407299:	add    eax,0xc1e9cc72
  40729e:	cmp    DWORD PTR [ebx-0x66],ecx
  4072a1:	mov    cl,0x7b
  4072a3:	xor    BYTE PTR [edx-0x47d4fb52],dh
  4072a9:	stc    
  4072aa:	rol    BYTE PTR [esi+0x3e],1
  4072ad:	mov    ds:0xa9caa053,eax
  4072b2:	arpl   WORD PTR [edi],si
  4072b4:	jb     0x407261
  4072b6:	mov    dl,0x2c
  4072b8:	push   0xffffff87
  4072ba:	mov    ebx,0xa53cebc5
  4072bf:	ins    DWORD PTR es:[edi],dx
  4072c0:	pop    ecx
  4072c1:	sti    
  4072c2:	xchg   esp,eax
  4072c3:	pop    ebx
  4072c4:	fbld   TBYTE PTR [ecx+ebp*8+0x6]
  4072c8:	inc    ebp
  4072c9:	or     DWORD PTR [ecx+0x16d10e8a],eax
  4072cf:	(bad)  
  4072d0:	or     eax,0x1ab231a2
  4072d5:	ret    
  4072d6:	stc    
  4072d7:	pop    ebp
  4072d8:	pop    ebp
  4072d9:	adc    dl,bh
  4072db:	mov    ch,0xe9
  4072dd:	arpl   WORD PTR ds:0xde2c3533,si
  4072e3:	inc    edi
  4072e4:	dec    ecx
  4072e5:	xor    cl,BYTE PTR [eax]
  4072e7:	cmp    al,ah
  4072e9:	mov    cl,0x20
  4072eb:	fwait
  4072ec:	xchg   BYTE PTR [eax-0x2ab366d2],dl
  4072f2:	das    
  4072f3:	das    
  4072f4:	jecxz  0x40732c
  4072f6:	dec    edi
  4072f7:	ret    0xd907
  4072fa:	cld    
  4072fb:	(bad)  
  4072fc:	stc    
  4072fd:	dec    ebx
  4072fe:	or     DWORD PTR [ecx+0x54],esi
  407301:	js     0x407357
  407303:	mov    ch,0x85
  407305:	jno    0x4072d3
  407307:	retf   0x5b6a
  40730a:	sub    ch,cl
  40730c:	sti    
  40730d:	das    
  40730e:	cmp    al,0x67
  407310:	cmp    edi,DWORD PTR [edi+0x24e30366]
  407316:	push   bp
  407318:	jbe    0x40734f
  40731a:	push   0x2971c636
  40731f:	setns  BYTE PTR [ecx+0x9500120]
  407326:	lods   eax,DWORD PTR ds:[esi]
  407327:	fdivr  DWORD PTR [eax+0x7f2dc55]
  40732d:	mov    dh,0xed
  40732f:	mov    BYTE PTR [esi+0xe],ah
  407332:	leave  
  407333:	xor    al,0x6b
  407335:	inc    edx
  407336:	clc    
  407337:	add    al,bl
  407339:	call   0xfcaa:0xdd393b95
  407340:	pusha  
  407341:	imul   esi,DWORD PTR [esi+eax*1],0x3f
  407345:	test   eax,0xd12a5e27
  40734a:	and    ebx,ebx
  40734c:	dec    ebx
  40734d:	jp     0x4073b6
  40734f:	xor    edi,DWORD PTR [ebx+0x572a8874]
  407355:	dec    ebx
  407356:	xchg   ecx,eax
  407357:	lahf   
  407358:	xor    eax,0x73585bfa
  40735d:	mov    dh,0xd9
  40735f:	mov    eax,0x6f35cba8
  407364:	add    al,al
  407366:	or     edi,edi
  407368:	add    DWORD PTR [eax+eiz*4+0x18518f53],edx
  40736f:	xor    BYTE PTR [edx+0x20],bl
  407372:	idiv   BYTE PTR [ecx*2+0x23f20faf]
  407379:	jns    0x4073b6
  40737b:	(bad)  
  40737c:	mov    dl,0xea
  40737e:	xor    BYTE PTR [ebx+eax*1-0x31],0xaf
  407383:	mov    esp,0x571bbdbf
  407388:	into   
  407389:	xor    BYTE PTR ds:0x745142bc,ch
  40738f:	lahf   
  407390:	fdivr  st(4),st
  407392:	scas   al,BYTE PTR es:[edi]
  407393:	and    edx,DWORD PTR [ebx-0x52bd43db]
  407399:	sbb    eax,0xdd9941d8
  40739e:	pop    esp
  40739f:	inc    ecx
  4073a0:	sub    DWORD PTR [esi],edx
  4073a2:	in     eax,0xef
  4073a4:	ins    BYTE PTR es:[edi],dx
  4073a5:	inc    eax
  4073a6:	adc    BYTE PTR [ebx+0x18],bh
  4073a9:	popf   
  4073aa:	int    0xe
  4073ac:	pmovmskb esp,mm6
  4073af:	jne    0x407399
  4073b1:	call   0x50297cc2
  4073b6:	stos   DWORD PTR es:[edi],eax
  4073b7:	dec    ecx
  4073b8:	sub    DWORD PTR [ecx-0x7a],edx
  4073bb:	pushf  
  4073bc:	or     al,0xfc
  4073be:	sti    
  4073bf:	sbb    eax,0x261d2a1d
  4073c4:	sbb    al,0x5e
  4073c6:	mov    ds:0xd1010a68,al
  4073cb:	lods   al,BYTE PTR ds:[esi]
  4073cc:	xor    DWORD PTR [eax+0x59],esp
  4073cf:	and    cl,BYTE PTR [edx-0x3d85e457]
  4073d5:	iret   
  4073d6:	sar    DWORD PTR [eax],0x9e
  4073d9:	jle    0x4073b8
  4073db:	pushf  
  4073dc:	mov    WORD PTR [ebx-0x79],fs
  4073df:	sar    BYTE PTR [edx-0x4463a91],1
  4073e5:	mov    al,0xc1
  4073e7:	push   es
  4073e8:	pop    si
  4073ea:	add    bl,BYTE PTR [esi+edi*4+0x6f]
  4073ee:	mov    edx,0x6c9ec731
  4073f3:	dec    ebx
  4073f4:	enter  0x9a41,0xc2
  4073f8:	inc    DWORD PTR [edx-0x2080ee7f]
  4073fe:	(bad)  
  407401:	jg     0x40746c
  407403:	sbb    DWORD PTR [ebp-0x7f998c99],edx
  407409:	adc    al,0xd9
  40740b:	sbb    DWORD PTR [edi-0x55],ebp
  40740e:	pop    ebp
  40740f:	mov    al,0x7
  407411:	push   ebp
  407412:	ret    0xa58b
  407415:	jmp    0x407412
  407417:	es xor al,0x9
  40741a:	pop    edi
  40741b:	retf   
  40741c:	dec    ebx
  40741d:	dec    sp
  40741f:	jp     0x407466
  407421:	xchg   edx,eax
  407422:	adc    BYTE PTR [esi-0x44316889],ch
  407428:	imul   edi,DWORD PTR [esi-0x43],0x1ee07aa0
  40742f:	div    DWORD PTR [edi-0x3b]
  407432:	xchg   esi,eax
  407433:	lods   al,BYTE PTR ds:[esi]
  407434:	mov    ah,0xc4
  407436:	idiv   dh
  407438:	test   eax,0x880ef6de
  40743d:	aas    
  40743e:	jmp    0xf3e07da1
  407443:	adc    DWORD PTR [eax+esi*8+0x4f9a0f78],eax
  40744a:	fld    QWORD PTR [edx-0x53115d0a]
  407450:	enter  0x6d6a,0x85
  407454:	mul    DWORD PTR [ecx]
  407456:	out    0xad,al
  407458:	mov    bh,0x94
  40745a:	jns    0x407435
  40745c:	sbb    eax,0x49a0f9ce
  407461:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407463:	stc    
  407464:	sti    
  407465:	mov    ds:0x925d3421,al
  40746a:	cdq    
  40746b:	mov    ebp,ebx
  40746d:	fwait
  40746e:	push   0x70e48446
  407473:	fadd   st(1),st
  407475:	cli    
  407476:	std    
  407477:	add    BYTE PTR [ebx],0xb5
  40747a:	pop    ss
  40747b:	and    al,ah
  40747d:	pusha  
  40747e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40747f:	mov    edx,0x37ff526c
  407484:	call   0xa9e1b95f
  407489:	add    bh,dl
  40748b:	je     0x4074a5
  40748d:	or     al,0xcf
  40748f:	mov    ds:0x258150ee,al
  407494:	sbb    al,0xb0
  407496:	inc    edx
  407497:	add    BYTE PTR [edx-0xffffe1],dl
  40749d:	adc    eax,0x42ed63
  4074a2:	not    DWORD PTR ds:0x429020
  4074a8:	push   0x21
  4074aa:	push   0x434
  4074af:	xor    DWORD PTR ds:0x42d000,0x4953
  4074b9:	push   0x98678765
  4074be:	and    DWORD PTR ds:0x42a018,0xec
  4074c8:	call   DWORD PTR ds:0x42ed47
  4074ce:	sbb    eax,0x149b
  4074d3:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4074da:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  4074e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4074e4:	mov    ebx,0x7510899
  4074e9:	inc    eax
  4074ea:	xor    ecx,ebx
  4074ec:	mov    DWORD PTR ds:0x429020,0x12
  4074f6:	cmp    DWORD PTR ds:0x429020,0x0
  4074fd:	je     0x407554
  407503:	cmp    DWORD PTR ds:0x429020,0x7
  40750a:	jne    0x407522
  407510:	push   0x42e000
  407515:	push   0x0
  407517:	push   0x18ee
  40751c:	call   DWORD PTR ds:0x42ed8f
  407522:	cmp    DWORD PTR ds:0x429020,0x8
  407529:	jne    0x40753a
  40752f:	mov    eax,ds:0x429020
  407534:	dec    eax
  407535:	mov    ds:0x429020,eax
  40753a:	mov    eax,ds:0x429020
  40753f:	dec    eax
  407540:	mov    ds:0x429020,eax
  407545:	jmp    0x4074f6
  40754a:	sbb    DWORD PTR ds:0x42d01c,0x3713
  407554:	mov    eax,0x3272e0
  407559:	add    ecx,eax
  40755b:	mov    DWORD PTR [ebp-0x24],ecx
  40755e:	sbb    ecx,DWORD PTR ds:0x429020
  407564:	mov    ecx,DWORD PTR [ebp+0x14]
  407567:	test   ecx,ecx
  407569:	mov    DWORD PTR ds:0x429014,0x4f5c
  407573:	je     0x407598
  407579:	movzx  ecx,WORD PTR ds:0x42b004
  407580:	sub    DWORD PTR ds:0x42d008,ecx
  407586:	mov    ecx,DWORD PTR [ebp+0x14]
  407589:	mov    DWORD PTR ds:0x42a000,0x186b
  407593:	mov    ecx,DWORD PTR [ecx]
  407595:	mov    DWORD PTR [ebp-0x24],ecx
  407598:	mov    ecx,0x7665
  40759d:	xor    DWORD PTR ds:0x429000,ecx
  4075a3:	imul   edx,eax
  4075a6:	mov    esi,DWORD PTR ds:0x424cbd
  4075ac:	mov    edi,DWORD PTR ds:0x424cd1
  4075b2:	sub    esi,edi
  4075b4:	and    esi,DWORD PTR [esi+edi*1]
  4075b7:	mov    esi,0x76532
  4075bc:	add    edx,ecx
  4075be:	xchg   esi,ecx
  4075c0:	and    DWORD PTR ds:0x429008,0x0
  4075ca:	mov    esi,DWORD PTR ds:0x429008
  4075d0:	inc    esi
  4075d1:	mov    DWORD PTR ds:0x429008,esi
  4075d7:	cmp    DWORD PTR ds:0x429008,0x7
  4075de:	jne    0x4075ef
  4075e4:	push   0x24d9
  4075e9:	call   DWORD PTR ds:0x42ed4f
  4075ef:	cmp    DWORD PTR ds:0x429008,0x6
  4075f6:	jne    0x407609
  4075fc:	mov    esi,DWORD PTR ds:0x429008
  407602:	inc    esi
  407603:	mov    DWORD PTR ds:0x429008,esi
  407609:	cmp    DWORD PTR ds:0x429008,0x10
  407610:	jb     0x4075ca
  407616:	mov    edi,0x54354
  40761b:	sub    edx,edi
  40761d:	mov    ecx,DWORD PTR [ebp-0x4]
  407620:	sub    DWORD PTR ds:0x42901c,edx
  407626:	xor    ecx,ebx
  407628:	and    DWORD PTR ds:0x429010,0x0
  407632:	mov    esi,DWORD PTR ds:0x429010
  407638:	inc    esi
  407639:	mov    DWORD PTR ds:0x429010,esi
  40763f:	cmp    DWORD PTR ds:0x429010,0x4
  407646:	jne    0x40765e
  40764c:	push   0x42e000
  407651:	push   0x0
  407653:	push   0x1
  407655:	push   DWORD PTR [ebp-0x14]
  407658:	call   DWORD PTR ds:0x42ed53
  40765e:	cmp    DWORD PTR ds:0x429010,0x3
  407665:	jne    0x407678
  40766b:	mov    esi,DWORD PTR ds:0x429010
  407671:	inc    esi
  407672:	mov    DWORD PTR ds:0x429010,esi
  407678:	cmp    DWORD PTR ds:0x429010,0x13
  40767f:	jb     0x407632
  407685:	jmp    0x409a32
  40768a:	mov    ds:0x277127e6,eax
  40768f:	jnp    0x407704
  407691:	mov    ah,0xde
  407693:	sbb    DWORD PTR [ebp+0x47],esp
  407696:	cmp    DWORD PTR [ebx+0x2b],edi
  407699:	pop    edi
  40769a:	mov    esp,0xea7a7a3c
  40769f:	pop    edi
  4076a0:	jp     0x40771c
  4076a2:	mov    ebx,0x5ec2d956
  4076a7:	call   0x6bd0d727
  4076ac:	imul   ebp,edi,0xffffffd7
  4076af:	mov    bh,0x11
  4076b1:	pop    ds
  4076b2:	enter  0x1c36,0x48
  4076b6:	loopne 0x407649
  4076b8:	out    dx,eax
  4076b9:	push   ss
  4076ba:	lds    ebp,FWORD PTR es:[ebp-0x4de68de2]
  4076c1:	ds push 0x43
  4076c4:	inc    edi
  4076c5:	cwde   
  4076c6:	and    ebx,DWORD PTR [ecx]
  4076c8:	or     edx,DWORD PTR [ecx+0x6e53ed86]
  4076ce:	xchg   edx,eax
  4076cf:	jmp    0xb1b9617f
  4076d4:	shr    ecx,0x1b
  4076d7:	sub    DWORD PTR [eax],eax
  4076d9:	adc    eax,0x807cb09c
  4076de:	or     edi,DWORD PTR [ecx+0x4f]
  4076e1:	mov    eax,0xc32ecca7
  4076e6:	adc    DWORD PTR [edx+0x1c],ebx
  4076e9:	xchg   edx,ebp
  4076eb:	call   0x70ee:0x305276be
  4076f2:	xchg   edx,eax
  4076f3:	push   esp
  4076f4:	push   0xfb46df73
  4076f9:	fyl2x  
  4076fb:	cmp    BYTE PTR [eax+0xf1c4667],ah
  407701:	lds    eax,FWORD PTR [edx-0x40]
  407704:	fst    DWORD PTR [edi]
  407706:	xchg   DWORD PTR [ecx+0x57],esi
  407709:	and    bh,BYTE PTR [edx-0x3160d832]
  40770f:	sar    BYTE PTR [ebx],1
  407711:	xchg   ebx,eax
  407712:	sbb    BYTE PTR [ebp-0x4f],cl
  407715:	fs enter 0x5510,0xc
  40771a:	sbb    al,0x9b
  40771c:	in     al,0xdf
  40771e:	stos   BYTE PTR es:[edi],al
  40771f:	bound  ebx,QWORD PTR [edi-0x57]
  407722:	retf   0xafcd
  407725:	sub    BYTE PTR [edx],bl
  407727:	not    BYTE PTR [ebx+edi*8-0x67]
  40772b:	push   ebx
  40772c:	xor    ecx,DWORD PTR [ebx+0x59]
  40772f:	push   esi
  407730:	retf   0xb6f8
  407733:	pop    ecx
  407734:	jmp    0x89da:0xbed2aa53
  40773b:	xlat   BYTE PTR ds:[ebx]
  40773c:	fst    DWORD PTR [ebx-0x4b]
  40773f:	rol    DWORD PTR [esi+0x2c],1
  407742:	xchg   edx,eax
  407743:	int    0x94
  407745:	pushf  
  407746:	sub    DWORD PTR [ebx],0x7e
  407749:	stc    
  40774a:	hlt    
  40774b:	sub    BYTE PTR [esi-0x7e],dh
  40774e:	ds jge 0x407775
  407751:	les    edx,FWORD PTR [esi]
  407753:	test   DWORD PTR ds:0x234252df,ecx
  407759:	cld    
  40775a:	cmp    eax,DWORD PTR [ebp-0x6dcb10c8]
  407760:	repnz stos BYTE PTR es:[edi],al
  407762:	xchg   ebp,eax
  407763:	(bad)  
  407765:	cs popf 
  407767:	mov    eax,0x95b59ffd
  40776c:	cld    
  40776d:	xor    DWORD PTR [esi],ecx
  40776f:	test   al,0x3e
  407771:	jno    0x40776c
  407773:	aad    0x62
  407775:	out    0xc6,eax
  407777:	ss add dh,ah
  40777a:	jmp    0x76db3e3d
  40777f:	fidiv  WORD PTR ds:0x8a2b98a7
  407785:	sbb    eax,DWORD PTR [edx+0x18]
  407788:	push   esi
  407789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40778a:	in     eax,dx
  40778b:	ins    DWORD PTR es:[edi],dx
  40778c:	inc    ebp
  40778d:	fsubr  QWORD PTR [edx]
  40778f:	inc    edx
  407790:	cmp    DWORD PTR [eax+0x3e],ebx
  407793:	arpl   WORD PTR [edi-0x56],di
  407796:	push   ss
  407797:	lods   eax,DWORD PTR ds:[esi]
  407798:	setg   BYTE PTR [eax]
  40779b:	dec    ebp
  40779c:	lods   al,BYTE PTR ds:[esi]
  40779d:	dec    ebp
  40779e:	add    eax,0x98206cda
  4077a3:	jnp    0x407795
  4077a5:	dec    ebp
  4077a6:	xchg   ebp,edx
  4077a8:	jbe    0x4077bd
  4077aa:	add    al,0xfa
  4077ac:	mov    ah,0xe5
  4077ae:	mov    eax,ds:0xe0dc6508
  4077b3:	sbb    DWORD PTR [edx-0x7c],esi
  4077b6:	ins    DWORD PTR es:[edi],dx
  4077b7:	mov    ebx,0x63cefb99
  4077bc:	out    0x1,al
  4077be:	inc    edx
  4077bf:	dec    edx
  4077c0:	sbb    BYTE PTR [esi],bh
  4077c2:	sub    DWORD PTR [ebx],eax
  4077c4:	inc    ecx
  4077c5:	mov    DWORD PTR [edi+0x38],ecx
  4077c8:	and    bh,0xfa
  4077cb:	mov    eax,ds:0xc27b3981
  4077d0:	pop    eax
  4077d1:	jb     0x4077b9
  4077d3:	popa   
  4077d4:	sub    eax,DWORD PTR [esi]
  4077d6:	(bad)  
  4077d7:	imul   ebx,DWORD PTR [edi+0x2b64a52d],0xffffffdf
  4077de:	call   0x2568:0x79307fb9
  4077e5:	and    BYTE PTR [esi],dl
  4077e7:	frstor [edx-0x212d5197]
  4077ed:	push   ebx
  4077ee:	in     eax,dx
  4077ef:	ins    BYTE PTR es:[edi],dx
  4077f0:	popa   
  4077f1:	sub    al,0x7f
  4077f3:	cmp    bh,dh
  4077f5:	ror    BYTE PTR [ebx+0x2a],cl
  4077f8:	mov    dh,0x28
  4077fa:	test   DWORD PTR [esi],ecx
  4077fc:	out    dx,al
  4077fd:	inc    ebx
  4077fe:	cmc    
  4077ff:	mov    esi,0xa97a6be3
  407804:	jnp    0x4077a2
  407806:	xchg   DWORD PTR [esi+0x656f898],ecx
  40780c:	sub    al,0xba
  40780e:	ror    BYTE PTR [ecx-0x1629845a],cl
  407814:	scas   eax,DWORD PTR es:[edi]
  407815:	repnz sbb eax,0xda1cb02
  40781b:	xor    al,0x25
  40781d:	and    bl,BYTE PTR [ecx-0x1c]
  407820:	sub    DWORD PTR [ebp+0x6461ab76],ebx
  407826:	sub    esi,DWORD PTR [edi-0xe]
  407829:	aam    0x7
  40782b:	rcr    DWORD PTR [ebx-0x785e5f0b],1
  407831:	push   edi
  407832:	inc    esp
  407833:	test   al,0x99
  407835:	mov    ds:0x32089725,al
  40783a:	jns    0x407854
  40783c:	and    DWORD PTR [edi+0x7d54ccf5],ebx
  407842:	jne    0x40782c
  407844:	or     al,0x32
  407846:	popf   
  407847:	mov    eax,0xcaf4741c
  40784c:	jge    0x407800
  40784e:	pop    ss
  40784f:	inc    eax
  407850:	imul   esp,DWORD PTR [eax-0xe],0x78
  407854:	sbb    eax,0x85cb3dc5
  407859:	cmp    DWORD PTR [eax],esp
  40785b:	jl     0x407807
  40785d:	jmp    0x40783d
  40785f:	mov    gs,WORD PTR [ebx+0x7f]
  407862:	or     ebp,DWORD PTR [edx]
  407864:	mov    WORD PTR [edx],cs
  407866:	into   
  407867:	outs   dx,BYTE PTR ds:[esi]
  407868:	daa    
  407869:	cdq    
  40786a:	arpl   bx,di
  40786c:	jo     0x4078d3
  40786e:	sub    bh,BYTE PTR [edx-0x7b]
  407871:	push   ecx
  407872:	call   0x1b98:0xa4b0a063
  407879:	sbb    al,0x4d
  40787b:	pushf  
  40787c:	inc    ebp
  40787d:	dec    ebp
  40787e:	retf   0x73e0
  407881:	nop
  407882:	test   eax,0xbb8b26dc
  407887:	mov    edx,0x68454484
  40788c:	out    0x94,al
  40788e:	mov    dh,BYTE PTR [ebx-0x42]
  407891:	push   0xc1455f0b
  407896:	xchg   ebp,eax
  407897:	sub    dl,BYTE PTR ds:0x957a3c92
  40789d:	xchg   esi,eax
  40789e:	es aas 
  4078a0:	sub    DWORD PTR [ecx-0x5a],esi
  4078a3:	mov    gs,WORD PTR [ebx]
  4078a5:	jo     0x407835
  4078a7:	in     eax,dx
  4078a8:	aaa    
  4078a9:	(bad)  [ecx-0x52453009]
  4078af:	cmp    DWORD PTR [esi-0x7298bc1d],0xb973a9fb
  4078b9:	xchg   ebx,eax
  4078ba:	xchg   ebp,eax
  4078bb:	call   0x245e3a00
  4078c0:	adc    al,0xbb
  4078c2:	in     eax,dx
  4078c3:	dec    edx
  4078c4:	js     0x40793d
  4078c6:	mov    DWORD PTR [eax],eax
  4078c8:	in     al,dx
  4078c9:	shl    DWORD PTR [esi+ecx*4],1
  4078cc:	(bad)  
  4078cd:	aas    
  4078ce:	jns    0x4078ff
  4078d0:	sub    BYTE PTR [ebp-0x6e],al
  4078d3:	out    dx,al
  4078d4:	dec    edi
  4078d5:	jns    0x407912
  4078d7:	jg     0x4078d3
  4078d9:	sahf   
  4078da:	(bad)  
  4078db:	mov    edx,0xd1bb2f8a
  4078e0:	sbb    DWORD PTR [edi+eax*4],esp
  4078e3:	sub    DWORD PTR [edx+eiz*8+0x11],ebp
  4078e7:	iret   
  4078e8:	lock push eax
  4078ea:	stos   BYTE PTR es:[edi],al
  4078eb:	fbstp  TBYTE PTR [eax+edi*2-0x2f0df2cf]
  4078f2:	pushf  
  4078f3:	inc    edx
  4078f4:	or     al,bl
  4078f6:	aam    0x2d
  4078f8:	retf   
  4078f9:	adc    edi,DWORD PTR [edx]
  4078fb:	dec    edx
  4078fc:	push   cs
  4078fd:	or     cl,BYTE PTR [edx+0x4fbb918a]
  407903:	(bad)  
  407904:	mov    DWORD PTR [ebp+0xe],edi
  407907:	test   DWORD PTR [ecx-0x1ce71c4a],ebp
  40790d:	and    bl,bl
  40790f:	into   
  407910:	enter  0x274b,0xaa
  407914:	cmp    al,0xaf
  407916:	inc    esi
  407917:	mov    edx,0x31f4899a
  40791c:	mov    WORD PTR [edi+0x105e06ef],gs
  407922:	nop
  407923:	sub    eax,0x52260285
  407928:	and    al,0x4c
  40792a:	xor    al,0x5a
  40792c:	cmp    bl,BYTE PTR ds:0xa76fdbd7
  407932:	shl    DWORD PTR [eax+eiz*2],0xff
  407936:	je     0x40797b
  407938:	dec    edx
  407939:	xor    BYTE PTR [edx],bh
  40793b:	push   ebx
  40793c:	cwde   
  40793d:	push   eax
  40793e:	mov    ds:0xfb147712,eax
  407943:	add    BYTE PTR [ebp-0x7a],0xe9
  407947:	pop    edx
  407948:	and    al,0x5f
  40794a:	mov    edx,0x555cd6b6
  40794f:	dec    ecx
  407950:	mov    esi,0x5382ffb9
  407955:	js     0x407957
  407957:	push   esi
  407958:	pushf  
  407959:	mov    bl,0x75
  40795b:	jmp    0x9aba:0xab9eebb4
  407962:	arpl   WORD PTR [ecx-0x59],dx
  407965:	fadd   st(1),st
  407967:	cmp    DWORD PTR [esi-0x27],ebx
  40796a:	fdiv   st,st(6)
  40796c:	add    al,0x5c
  40796e:	mov    edx,0x2f542562
  407973:	push   ds
  407974:	xchg   ebp,eax
  407975:	xlat   BYTE PTR ds:[bx]
  407977:	js     0x40797b
  407979:	jge    0x4079e3
  40797b:	sub    bh,BYTE PTR [ebx]
  40797d:	in     al,dx
  40797e:	or     eax,0x680e1c30
  407983:	pop    ebx
  407984:	pop    edx
  407985:	sbb    ah,ch
  407987:	into   
  407988:	sti    
  407989:	pop    es
  40798a:	rcl    al,cl
  40798c:	sub    bl,BYTE PTR [ebx]
  40798e:	inc    edi
  40798f:	jbe    0x4079d7
  407991:	xchg   ebp,eax
  407992:	fucomi st,st(1)
  407994:	jb     0x40794a
  407996:	mov    edx,0x1d286f09
  40799b:	push   cs
  40799c:	xor    eax,0xb4e28318
  4079a1:	bound  ecx,QWORD PTR [edx]
  4079a3:	dec    edx
  4079a4:	out    dx,eax
  4079a5:	cmc    
  4079a6:	mov    ah,BYTE PTR [edi+ecx*2+0x22]
  4079aa:	retf   0x356b
  4079ad:	push   esp
  4079ae:	loop   0x4079a3
  4079b0:	add    bh,BYTE PTR [edx]
  4079b2:	inc    eax
  4079b3:	and    esi,eax
  4079b5:	hlt    
  4079b6:	ss jae 0x407988
  4079b9:	ror    ah,cl
  4079bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079bc:	jg     0x4079e8
  4079be:	mov    cl,0xfb
  4079c0:	xchg   BYTE PTR [esi+ebx*4-0x7db8a097],bl
  4079c7:	xor    ebx,eax
  4079c9:	mov    dh,0x99
  4079cb:	push   edi
  4079cc:	mov    es,WORD PTR [eax+0x630ee118]
  4079d2:	add    ch,BYTE PTR [esi+0x34]
  4079d5:	push   ebp
  4079d6:	cmp    DWORD PTR gs:[eax+0x46ffcf27],edx
  4079dd:	jle    0x40799b
  4079df:	xchg   al,dh
  4079e1:	push   esi
  4079e2:	xchg   esp,eax
  4079e3:	clc    
  4079e4:	dec    esp
  4079e5:	cwde   
  4079e6:	(bad)  
  4079e7:	shl    ebx,0x54
  4079ea:	imul   esp,esp,0x5
  4079ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ef:	cdq    
  4079f0:	dec    esp
  4079f1:	mov    esi,ecx
  4079f3:	jp     0x407999
  4079f5:	lahf   
  4079f6:	ror    DWORD PTR [ebp+0x2],1
  4079f9:	jmp    0xbfbe:0xe3713817
  407a00:	sbb    al,0x9f
  407a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a03:	mov    ds:0x510ae312,eax
  407a08:	or     DWORD PTR [ebp-0x2df7ebae],esp
  407a0e:	ins    DWORD PTR es:[edi],dx
  407a0f:	dec    edi
  407a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a11:	in     eax,0x1a
  407a13:	xchg   DWORD PTR [edi+0x4ed3948],ecx
  407a19:	dec    ecx
  407a1a:	add    al,0x15
  407a1c:	out    dx,eax
  407a1d:	stos   DWORD PTR es:[edi],eax
  407a1e:	fisttp DWORD PTR [edx]
  407a20:	icebp  
  407a21:	jo     0x407a65
  407a23:	fcom   DWORD PTR [ebx-0x79]
  407a26:	(bad)  [esi-0x7220680f]
  407a2c:	ret    
  407a2d:	scas   eax,DWORD PTR es:[edi]
  407a2e:	es arpl bp,dx
  407a31:	pop    ebp
  407a32:	dec    edx
  407a33:	jbe    0x407a7d
  407a35:	sub    esp,esi
  407a37:	gs xor WORD PTR ds:[edi],cx
  407a3c:	or     eax,0x5b53c668
  407a41:	push   0x97e22792
  407a46:	push   es
  407a47:	stos   DWORD PTR es:[edi],eax
  407a48:	test   BYTE PTR [edi],ch
  407a4a:	(bad)  
  407a4b:	mov    WORD PTR [eax-0x60d32deb],gs
  407a51:	dec    esp
  407a52:	jns    0x407a60
  407a54:	fcmovbe st,st(7)
  407a56:	test   al,0xc2
  407a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a59:	lods   eax,DWORD PTR ds:[esi]
  407a5a:	iret   
  407a5b:	inc    esp
  407a5c:	(bad)  
  407a5d:	std    
  407a5e:	rcr    BYTE PTR [ebp+0x5b67eeab],cl
  407a64:	xor    edi,DWORD PTR ds:0x7ee7639e
  407a6a:	les    esi,FWORD PTR [ebx]
  407a6c:	push   eax
  407a6d:	cmp    bh,al
  407a6f:	call   0xf142a09f
  407a74:	in     eax,0xe1
  407a76:	xor    eax,0xe7d93cfc
  407a7b:	repnz stc 
  407a7d:	inc    esp
  407a7e:	or     edi,DWORD PTR [ebx]
  407a80:	cld    
  407a81:	mov    esp,0x1b16d7bb
  407a86:	pop    es
  407a87:	or     eax,DWORD PTR [ebp-0x6d969b49]
  407a8d:	inc    esp
  407a8e:	pop    edi
  407a8f:	adc    eax,0xa9d96e48
  407a94:	lgs    esi,FWORD PTR [esi-0x1d0cb5f9]
  407a9b:	bound  eax,QWORD PTR ds:0xe6654329
  407aa1:	(bad)  
  407aa2:	das    
  407aa3:	stos   BYTE PTR es:[edi],al
  407aa4:	pop    ds
  407aa5:	xchg   ecx,eax
  407aa6:	cld    
  407aa7:	xor    DWORD PTR ds:0x9a639c72,ebx
  407aad:	cmp    al,0x1f
  407aaf:	and    BYTE PTR [esi+0x66862178],0x99
  407ab6:	sub    BYTE PTR [esi+0x67f04185],bh
  407abc:	xchg   ch,ah
  407abe:	cmp    al,0x23
  407ac0:	mov    ebp,DWORD PTR [ecx-0x78]
  407ac3:	sti    
  407ac4:	dec    esi
  407ac5:	add    ebp,DWORD PTR [ebp-0x2b]
  407ac8:	jae    0x407b2a
  407aca:	(bad)  [ecx+0x22]
  407acd:	add    bh,BYTE PTR [ebx]
  407acf:	mov    ebx,ebp
  407ad1:	or     ch,BYTE PTR [ecx+0x5f8b2142]
  407ad7:	sub    al,0x2e
  407ad9:	ror    dh,1
  407adb:	out    dx,eax
  407adc:	cs push ecx
  407ade:	dec    esi
  407adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ae0:	sbb    BYTE PTR [eax+0xf762e31],0x53
  407ae7:	and    DWORD PTR [ebx-0x1b],edx
  407aea:	push   edi
  407aeb:	lea    ecx,[ebp+0x21fdfb44]
  407af1:	mov    ds:0x7aaf89e1,eax
  407af6:	push   ebx
  407af7:	inc    edi
  407af8:	mov    dl,BYTE PTR [edx+0x3c97b1ae]
  407afe:	sub    DWORD PTR [eax+eiz*4+0x29],eax
  407b02:	sbb    DWORD PTR [eax+0x2a79a0cf],eax
  407b08:	retf   
  407b09:	mov    ecx,0x5af3552e
  407b0e:	and    al,0xee
  407b10:	jle    0x407ae6
  407b12:	dec    ebp
  407b13:	inc    esp
  407b14:	mov    ebp,0x89c11d38
  407b19:	pop    ds
  407b1a:	(bad)  
  407b1b:	mov    bl,0x90
  407b1d:	pop    ss
  407b1e:	mov    ds:0x9a66b6b6,eax
  407b24:	imul   edx,DWORD PTR [esi],0x7fa2e0c0
  407b2a:	lea    ecx,[edi+ebp*4+0xeab5eae]
  407b31:	xchg   esi,eax
  407b32:	(bad)  
  407b33:	in     eax,0x64
  407b35:	fs sub esp,edx
  407b38:	mov    dh,0x72
  407b3a:	scas   al,BYTE PTR es:[edi]
  407b3b:	jb     0x407b24
  407b3d:	sub    eax,DWORD PTR [ecx]
  407b3f:	jmp    0x9085:0xe4d70b93
  407b46:	sbb    al,0x5d
  407b48:	jmp    0x407af4
  407b4a:	cdq    
  407b4b:	iret   
  407b4c:	mov    ebx,0x557c67fe
  407b51:	lea    edx,[ebp+edi*1-0x2cb19705]
  407b58:	clc    
  407b59:	mov    ebx,DWORD PTR [eax]
  407b5b:	rcr    DWORD PTR [esi+0x3],cl
  407b5e:	xchg   ch,dh
  407b60:	in     al,0xb3
  407b62:	mov    ds:0x2c41c0b,al
  407b67:	mov    ecx,0x5d343776
  407b6c:	jne    0x407be7
  407b6e:	push   edx
  407b6f:	sbb    esi,esi
  407b71:	add    cl,BYTE PTR [ebx+0x73]
  407b74:	ret    
  407b75:	pop    DWORD PTR [edi+0x48]
  407b78:	fmul   QWORD PTR [eax+0x33e6bb08]
  407b7e:	mov    al,ds:0x64887000
  407b83:	mov    DWORD PTR [esi+0x4c1767c],esi
  407b89:	rcr    DWORD PTR [edx-0x1aed6fa4],1
  407b8f:	push   esi
  407b91:	sub    ebp,0x2643e65c
  407b97:	and    BYTE PTR [eax+0x6b8e10b9],bh
  407b9d:	cs adc al,0x72
  407ba0:	out    0x6d,eax
  407ba2:	sbb    eax,0xc8a1a462
  407ba7:	jp     0x407bb0
  407ba9:	ss sahf 
  407bab:	popa   
  407bac:	mov    ah,0x45
  407bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407baf:	icebp  
  407bb0:	add    DWORD PTR [edx+0x1d],ecx
  407bb3:	into   
  407bb4:	imul   eax,DWORD PTR [ecx+0x15199afc],0x4ef907ab
  407bbe:	pop    ebx
  407bbf:	dec    edx
  407bc0:	ror    BYTE PTR es:[ebx+0x35],cl
  407bc4:	ja     0x407bde
  407bc6:	jl     0x407c29
  407bc8:	mov    WORD PTR [ecx*8-0x6616bfbd],cs
  407bcf:	lds    esp,FWORD PTR [edi]
  407bd1:	retf   
  407bd2:	xor    esi,eax
  407bd4:	push   cs
  407bd5:	jmp    0xc064:0x442b6787
  407bdc:	sub    ebp,ebx
  407bde:	icebp  
  407bdf:	pop    es
  407be0:	pushf  
  407be1:	mov    DWORD PTR [ebp-0x502d32cf],ecx
  407be7:	cli    
  407be8:	push   0x180826c0
  407bed:	mov    al,ds:0xbb44c143
  407bf2:	pop    edx
  407bf3:	push   esp
  407bf4:	js     0x407b92
  407bf6:	ficom  WORD PTR [ebx]
  407bf8:	mov    dl,0xd4
  407bfa:	aam    0x90
  407bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bfd:	ret    
  407bfe:	cmp    BYTE PTR [ebp+ecx*8-0x66efe07c],ch
  407c05:	pop    esp
  407c06:	xlat   BYTE PTR ds:[ebx]
  407c07:	and    DWORD PTR [ecx-0x772a46e7],0x38
  407c0e:	push   ecx
  407c0f:	inc    ecx
  407c10:	mov    dl,0xee
  407c12:	fs ds push edx
  407c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c16:	add    eax,0x9c19e80
  407c1b:	outs   dx,BYTE PTR ds:[esi]
  407c1c:	mov    esp,0x2da55dce
  407c21:	popf   
  407c22:	sbb    al,0x55
  407c24:	(bad)  [esi]
  407c26:	addr16 jbe 0x407c9d
  407c29:	ret    0x56f2
  407c2c:	mov    edx,0x81d2d8c3
  407c31:	sbb    ch,BYTE PTR [ecx-0x691b0be7]
  407c37:	jge    0x407c3f
  407c39:	retf   
  407c3a:	bswap  ebp
  407c3c:	mov    ch,BYTE PTR [ecx+esi*8-0x6b1696c6]
  407c43:	call   0x9e0281d8
  407c48:	mov    dh,0xcf
  407c4a:	mov    cl,0x9c
  407c4c:	cmp    al,0x57
  407c4e:	push   ecx
  407c4f:	inc    esp
  407c50:	push   ss
  407c51:	aaa    
  407c52:	retf   
  407c53:	pusha  
  407c54:	dec    esi
  407c55:	pusha  
  407c56:	mov    al,0x8d
  407c58:	push   ds
  407c59:	or     DWORD PTR [edi],ebx
  407c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c5c:	aam    0xf3
  407c5e:	adc    DWORD PTR [eax],0x6a4a128e
  407c64:	arpl   WORD PTR [ecx+ebx*2],di
  407c67:	ins    DWORD PTR es:[edi],dx
  407c68:	add    BYTE PTR [edx-0xd],0xb3
  407c6c:	mov    edx,0xc3fffde8
  407c71:	pop    ebp
  407c72:	xchg   esp,eax
  407c73:	jge    0x407c7e
  407c75:	mov    ecx,0x3cd2673
  407c7a:	mov    ebx,0xb3b048a6
  407c7f:	lea    ecx,[eax+0x6ab4ea83]
  407c85:	jns    0x407c0d
  407c87:	std    
  407c88:	(bad)  
  407c89:	push   eax
  407c8a:	retf   0x3a61
  407c8d:	loope  0x407c30
  407c8f:	imul   BYTE PTR [esi+0x15]
  407c92:	cmp    bh,al
  407c94:	xchg   DWORD PTR [ecx+0x54],ecx
  407c97:	rcl    edi,cl
  407c99:	loope  0x407c62
  407c9b:	xor    al,0x53
  407c9d:	dec    esi
  407c9e:	aad    0xc
  407ca0:	sahf   
  407ca1:	dec    ebx
  407ca2:	imul   eax,DWORD PTR [ecx+0x3d],0x521b9448
  407ca9:	and    DWORD PTR [ebx+0x36],edi
  407cac:	in     eax,dx
  407cad:	inc    esp
  407cae:	pop    edx
  407caf:	retf   
  407cb0:	int3   
  407cb1:	mov    al,ds:0x96ed3aa3
  407cb6:	std    
  407cb7:	mov    al,0x8d
  407cb9:	push   esi
  407cba:	sub    edi,edx
  407cbc:	pop    edx
  407cbd:	xchg   edx,eax
  407cbe:	xor    DWORD PTR ds:0x773ac9d7,eax
  407cc4:	pop    edi
  407cc5:	adc    BYTE PTR [esi+0x16c5911d],ah
  407ccb:	sbb    dl,BYTE PTR [esi-0x6a]
  407cce:	or     dh,BYTE PTR ds:0x8e03fb3f
  407cd4:	nop
  407cd5:	and    eax,0xcac2b1b1
  407cda:	add    dl,al
  407cdc:	jmp    0x32db4665
  407ce1:	pusha  
  407ce2:	aad    0xfa
  407ce4:	mov    cl,0xc1
  407ce6:	pop    ecx
  407ce7:	pop    ebx
  407ce8:	xor    bl,BYTE PTR [eax-0x338776fb]
  407cee:	aam    0xe
  407cf0:	in     al,0x8f
  407cf2:	xchg   ebp,eax
  407cf3:	mov    edi,0x901ae66e
  407cf8:	mov    esp,0x1c04f964
  407cfd:	or     al,0x6
  407cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d00:	mov    ds:0xcc43cd11,al
  407d05:	mov    bl,dl
  407d07:	cmp    al,0x53
  407d09:	mov    fs:0x4c66141d,al
  407d0f:	repnz inc esp
  407d11:	scas   al,BYTE PTR es:[edi]
  407d12:	repz or al,0x6
  407d15:	aam    0x79
  407d17:	ins    DWORD PTR es:[edi],dx
  407d18:	mov    esi,0x383f11f7
  407d1d:	mov    edi,0xe6e7c6e9
  407d22:	(bad)  
  407d23:	out    0xfe,eax
  407d25:	xchg   BYTE PTR [edi],al
  407d27:	mov    cl,0x10
  407d29:	out    dx,eax
  407d2a:	dec    ebx
  407d2b:	in     al,dx
  407d2c:	(bad)  
  407d2d:	dec    ebp
  407d2e:	sub    BYTE PTR [esi+eax*8],al
  407d31:	push   cs
  407d32:	in     al,0xf8
  407d34:	loop   0x407d14
  407d36:	xchg   ecx,eax
  407d37:	pop    esp
  407d38:	jne    0x407d77
  407d3a:	ret    
  407d3b:	icebp  
  407d3c:	sub    eax,0xf9386568
  407d41:	inc    ebx
  407d42:	add    DWORD PTR [eax-0x2d172d41],ebx
  407d48:	or     BYTE PTR ss:[esi+0x4d8b1573],bl
  407d4f:	xchg   esi,eax
  407d50:	push   ecx
  407d51:	fdiv   DWORD PTR [ebx]
  407d53:	pop    ecx
  407d54:	jb     0x407d65
  407d56:	and    al,0xea
  407d58:	repz inc edi
  407d5a:	lock fcmovnb st,st(6)
  407d5d:	xchg   edi,eax
  407d5e:	dec    esi
  407d5f:	pop    ebx
  407d60:	dec    ecx
  407d61:	pushf  
  407d62:	and    BYTE PTR [ebp+0x48],0x20
  407d66:	mov    ch,0xa1
  407d68:	add    dh,bh
  407d6a:	push   ebx
  407d6b:	push   esp
  407d6c:	ficomp DWORD PTR [edi+0x188a25cf]
  407d72:	fisttp WORD PTR [edx+0x19]
  407d75:	imul   esi,ecx,0x43
  407d78:	sub    dh,ah
  407d7a:	(bad)  
  407d7b:	ins    BYTE PTR es:[edi],dx
  407d7c:	mov    BYTE PTR [ebx-0x3d],ch
  407d7f:	mov    edx,0x300527f2
  407d84:	repnz ins BYTE PTR es:[edi],dx
  407d86:	push   0xfffffffe
  407d88:	push   edx
  407d89:	jae    0x407dd3
  407d8b:	and    dl,BYTE PTR [edx]
  407d8d:	cmp    DWORD PTR [ecx-0x3cd3b5a0],esp
  407d93:	or     edi,edx
  407d95:	mov    esp,0x78239eff
  407d9a:	enter  0x32cb,0xcb
  407d9e:	fwait
  407d9f:	mov    ebp,0xb8481136
  407da4:	push   cs
  407da5:	cli    
  407da6:	mov    ebp,0xbfccea9
  407dab:	push   es
  407dac:	cmp    edi,esp
  407dae:	stc    
  407daf:	(bad)  
  407db0:	jecxz  0x407e29
  407db2:	mov    ebp,0x784a8df6
  407db7:	mov    dl,bh
  407db9:	sub    DWORD PTR [ecx+0x1198d278],ebp
  407dbf:	addr16 or eax,0x86307b17
  407dc5:	cdq    
  407dc6:	xor    ebx,DWORD PTR [edi+0x44745ff9]
  407dcc:	js     0x407d72
  407dce:	mov    edx,0x7c93bc1b
  407dd3:	xor    eax,0xab802759
  407dd8:	nop
  407dd9:	inc    esp
  407dda:	mov    ds:0xc01c643c,al
  407ddf:	lds    edx,FWORD PTR [esp+edi*2]
  407de2:	rol    BYTE PTR [edx-0x79],1
  407de5:	hlt    
  407de6:	loopne 0x407e0f
  407de8:	push   edx
  407de9:	pop    edi
  407dea:	ja     0x407e67
  407dec:	xchg   DWORD PTR [edi+0x0],ecx
  407def:	sbb    esp,esi
  407df1:	mov    BYTE PTR [ecx+0x71],bh
  407df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407df5:	xchg   BYTE PTR [ebx],ch
  407df7:	push   ecx
  407df8:	mov    ebx,ds
  407dfa:	jecxz  0x407dea
  407dfc:	sti    
  407dfd:	in     eax,dx
  407dfe:	xchg   DWORD PTR [edi+0x7c449e69],esi
  407e04:	push   edx
  407e05:	inc    edi
  407e06:	rol    DWORD PTR [edx],cl
  407e08:	jmp    0x2d76:0x734bdea1
  407e0f:	clc    
  407e10:	jecxz  0x407da6
  407e12:	xor    bh,bh
  407e14:	retf   
  407e15:	int    0x35
  407e17:	in     al,dx
  407e18:	popa   
  407e19:	lods   al,BYTE PTR ds:[esi]
  407e1a:	mov    es,eax
  407e1c:	js     0x407e78
  407e1e:	mov    bh,BYTE PTR [ecx-0xd]
  407e21:	cmp    al,BYTE PTR [edi]
  407e23:	hlt    
  407e24:	std    
  407e25:	fisttp QWORD PTR [eax]
  407e27:	inc    esp
  407e28:	retf   
  407e29:	sar    BYTE PTR [edi],1
  407e2b:	sbb    al,0x1e
  407e2d:	repnz adc edi,DWORD PTR [ecx+0x2b]
  407e31:	cmp    dl,0xfd
  407e34:	lahf   
  407e35:	pop    DWORD PTR [ebx-0x18fc5bfe]
  407e3b:	cwde   
  407e3c:	dec    esp
  407e3d:	popf   
  407e3e:	jp     0x407e46
  407e40:	sbb    ebp,DWORD PTR [edi+0x1a]
  407e43:	sbb    BYTE PTR [ebx+0x5e],al
  407e46:	pusha  
  407e47:	add    esi,DWORD PTR [esi-0x55]
  407e4a:	setl   ah
  407e4d:	sbb    eax,DWORD PTR ds:0xa8947e69
  407e53:	fld    DWORD PTR [esi-0x31f5b299]
  407e59:	dec    edx
  407e5a:	cmp    ah,BYTE PTR [esi+0x43]
  407e5d:	mov    bl,0x41
  407e5f:	in     eax,0xda
  407e61:	mov    ds:0x1052d8d2,eax
  407e66:	cld    
  407e67:	mov    ebx,0x1a79db1d
  407e6c:	sbb    al,0xd2
  407e6e:	test   DWORD PTR [esi+eiz*4-0x24],ebp
  407e72:	aaa    
  407e73:	es dec edi
  407e75:	(bad)  
  407e76:	pusha  
  407e77:	jnp    0x407e01
  407e79:	inc    eax
  407e7a:	mov    dh,0xdc
  407e7c:	in     eax,0xab
  407e7e:	stos   BYTE PTR es:[edi],al
  407e7f:	ret    
  407e80:	jg     0x407ec7
  407e82:	or     dl,dh
  407e84:	(bad)  
  407e86:	dec    ecx
  407e87:	adc    bl,BYTE PTR ds:0xaac204d9
  407e8d:	push   esp
  407e8e:	cli    
  407e8f:	jmp    0x407e33
  407e91:	pop    edi
  407e92:	inc    eax
  407e93:	sub    ah,BYTE PTR [edi]
  407e95:	(bad)  
  407e96:	out    dx,eax
  407e97:	sahf   
  407e98:	dec    ebx
  407e99:	cli    
  407e9a:	lods   al,BYTE PTR ds:[esi]
  407e9b:	es lahf 
  407e9d:	xor    edx,edi
  407e9f:	clc    
  407ea0:	pop    eax
  407ea1:	mov    al,0x47
  407ea3:	pop    ds
  407ea4:	leave  
  407ea5:	add    al,0x81
  407ea7:	push   esp
  407ea8:	daa    
  407ea9:	xchg   esp,eax
  407eaa:	pop    ebx
  407eab:	test   ah,ch
  407ead:	fld    DWORD PTR [edx]
  407eaf:	inc    eax
  407eb0:	imul   eax,DWORD PTR [esi-0x2c],0x74270370
  407eb7:	int    0x21
  407eb9:	push   esp
  407eba:	jge    0x407e68
  407ebc:	pushfw 
  407ebe:	or     BYTE PTR [edx+0x58],ah
  407ec1:	out    dx,al
  407ec2:	jno    0x407ebe
  407ec4:	push   es
  407ec5:	(bad)  
  407ec6:	in     eax,dx
  407ec7:	in     al,0x9a
  407ec9:	pop    esp
  407eca:	les    ebx,FWORD PTR [edi]
  407ecc:	jo     0x407f2a
  407ece:	out    dx,al
  407ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed0:	cmc    
  407ed1:	adc    eax,0xdff05130
  407ed6:	jnp    0x407f08
  407ed8:	inc    edi
  407ed9:	xor    eax,DWORD PTR [ebx+0x6b]
  407edc:	push   es
  407edd:	retf   0xa274
  407ee0:	sahf   
  407ee1:	jp     0x407f3c
  407ee3:	push   ebp
  407ee4:	push   esi
  407ee5:	int3   
  407ee6:	ds aas 
  407ee8:	add    BYTE PTR [ebp-0x13f5570a],ch
  407eee:	pop    edi
  407eef:	and    al,0x4c
  407ef1:	ret    
  407ef2:	xor    BYTE PTR [edi+0x1b],cl
  407ef5:	pop    esi
  407ef6:	push   ebp
  407ef7:	test   edi,eax
  407ef9:	xor    ch,dl
  407efb:	push   ss
  407efc:	retf   0xf36f
  407eff:	cmp    ebp,DWORD PTR [edx]
  407f01:	sbb    DWORD PTR [ebx+0xe71217d],ecx
  407f07:	fistp  QWORD PTR [edi-0x27]
  407f0a:	aas    
  407f0b:	xor    ecx,ecx
  407f0d:	pop    ecx
  407f0e:	arpl   cx,cx
  407f10:	add    dl,cl
  407f12:	push   esi
  407f13:	and    ch,bl
  407f15:	aas    
  407f16:	inc    ebx
  407f17:	icebp  
  407f18:	cmp    BYTE PTR [edi-0x55],0x6f
  407f1c:	sahf   
  407f1d:	bound  esp,QWORD PTR [ecx]
  407f1f:	add    esi,DWORD PTR [esi-0x769f6ddd]
  407f25:	shl    BYTE PTR [edi+0x79],cl
  407f28:	jne    0x407ef9
  407f2a:	cdq    
  407f2b:	push   eax
  407f2c:	cmp    eax,0x10ff8e0f
  407f31:	rcr    eax,cl
  407f33:	push   es
  407f34:	fisttp DWORD PTR [esi-0x2e]
  407f37:	dec    ebp
  407f38:	fisttp QWORD PTR [edi]
  407f3a:	cmp    BYTE PTR [ecx-0x204f8b86],cl
  407f40:	or     eax,0xcafbeee2
  407f45:	and    BYTE PTR [esi-0x226edca4],al
  407f4b:	push   0xffffffbe
  407f4d:	in     eax,dx
  407f4e:	mov    ch,0x8c
  407f50:	mov    cl,0x43
  407f52:	xchg   ecx,eax
  407f53:	addr16 (bad) 
  407f55:	dec    ebx
  407f56:	dec    eax
  407f57:	cs jae 0x407ee1
  407f5a:	ret    
  407f5b:	ret    
  407f5c:	sub    al,0xc0
  407f5e:	xchg   edi,eax
  407f5f:	inc    esi
  407f60:	das    
  407f61:	sbb    bl,BYTE PTR [ebp-0x2a9625d8]
  407f67:	frstor ds:0xeb1c78a1
  407f6d:	scas   al,BYTE PTR es:[edi]
  407f6e:	jns    0x407efa
  407f70:	out    0x93,al
  407f72:	jo     0x407f45
  407f74:	ins    BYTE PTR es:[edi],dx
  407f75:	adc    DWORD PTR [esi-0x37146506],edi
  407f7b:	push   ss
  407f7c:	jmp    0x63f4:0x92155b85
  407f83:	stos   DWORD PTR es:[edi],eax
  407f84:	xchg   ecx,eax
  407f85:	nop
  407f86:	push   cs
  407f87:	adc    eax,0xff3e3341
  407f8c:	(bad)  
  407f8d:	das    
  407f8e:	out    0xdb,eax
  407f90:	push   ss
  407f91:	js     0x407f7a
  407f93:	cli    
  407f94:	dec    edx
  407f95:	sbb    BYTE PTR [ecx+0x12a892a0],dl
  407f9b:	call   0xd67b3ce4
  407fa0:	adc    al,0x7e
  407fa2:	(bad)  
  407fa3:	iret   
  407fa4:	ror    DWORD PTR [eax-0x6790a10],cl
  407faa:	add    eax,0xe62ee397
  407faf:	les    edx,FWORD PTR [esi]
  407fb1:	data16 mov BYTE PTR [edi-0x6567c209],ch
  407fb8:	fisttp QWORD PTR [eax+0x50b17e54]
  407fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fbf:	jmp    0xd5c97f29
  407fc4:	lahf   
  407fc5:	cmp    BYTE PTR [ebx+0x5538d803],ah
  407fcb:	ds aas 
  407fcd:	fadd   DWORD PTR [ebx-0x28]
  407fd0:	inc    edx
  407fd1:	pop    bx
  407fd3:	test   al,0x99
  407fd5:	inc    ebp
  407fd6:	inc    esp
  407fd7:	pop    ds
  407fd8:	fistp  WORD PTR [eax+0x23]
  407fdb:	aad    0x31
  407fdd:	rcl    DWORD PTR [eax+0x2],cl
  407fe0:	stos   DWORD PTR es:[edi],eax
  407fe1:	pop    esp
  407fe2:	fild   DWORD PTR ds:[ebx]
  407fe5:	mov    eax,0x20b7f4c5
  407fea:	daa    
  407feb:	push   esi
  407fec:	sbb    BYTE PTR ds:0xa1e092ae,ah
  407ff2:	mov    dh,0xd
  407ff4:	inc    esp
  407ff5:	stc    
  407ff6:	mov    DWORD PTR [ebp+eiz*4+0x145f823d],ebx
  407ffd:	aam    0xd4
  407fff:	cli    
  408000:	test   eax,0x5b4df89d
  408005:	mov    ah,0x34
  408007:	push   ebp
  408008:	stos   DWORD PTR es:[edi],eax
  408009:	movhps QWORD PTR [ebx*2-0x3379fe81],xmm5
  408011:	wbinvd 
  408013:	add    eax,0xe5b2ffd2
  408018:	sub    al,0x1
  40801a:	stc    
  40801b:	loopne 0x407fa5
  40801d:	jmp    0x407fb5
  40801f:	sub    eax,0xfa815269
  408024:	retf   
  408025:	cmp    ch,BYTE PTR [esi]
  408027:	addr16 dec ebx
  408029:	ins    BYTE PTR es:[edi],dx
  40802a:	cmp    DWORD PTR cs:[ebx],edx
  40802d:	xchg   ecx,eax
  40802e:	mov    ds:0x5d88b1fa,al
  408033:	or     BYTE PTR [esp+edi*1-0x224297f8],ah
  40803a:	fild   WORD PTR [eax]
  40803c:	loop   0x40803c
  40803e:	scas   al,BYTE PTR es:[edi]
  40803f:	ret    
  408040:	or     esp,DWORD PTR [edx+0x56]
  408043:	outs   dx,BYTE PTR ds:[esi]
  408044:	in     al,0x8
  408046:	mov    DWORD PTR [edi+0x6d],0xee4abd85
  40804d:	stos   DWORD PTR es:[edi],eax
  40804e:	mov    ds:0xec6ce81b,al
  408053:	pop    ebp
  408054:	enter  0x6a3b,0xfb
  408058:	in     al,0x8a
  40805a:	push   esi
  40805b:	je     0x4080ce
  40805d:	out    dx,al
  40805e:	adc    BYTE PTR [ebx+0x3c],dl
  408061:	ins    DWORD PTR es:[edi],dx
  408062:	cmp    eax,0xc6b2dfab
  408067:	adc    al,0x9f
  408069:	ss mov al,0x5b
  40806c:	jae    0x408054
  40806e:	cmp    eax,0xd9d3d3ba
  408073:	icebp  
  408074:	fsub   DWORD PTR [ebx+edi*2]
  408077:	sbb    BYTE PTR [ecx-0x5d],bl
  40807a:	add    edx,DWORD PTR [ebp+0x3260db9e]
  408080:	imul   eax,DWORD PTR [eax-0x5949d806],0xf976a3d2
  40808a:	nop
  40808b:	xchg   esp,eax
  40808c:	pop    DWORD PTR [ebx+0x6f4d9b3a]
  408092:	push   0xffffffb8
  408094:	and    al,0xfe
  408097:	adc    al,0x9b
  408099:	shl    DWORD PTR [ebx+eax*1+0xeb31e60],cl
  4080a0:	es jae 0x40806a
  4080a3:	mov    eax,ds
  4080a5:	inc    edi
  4080a6:	pushf  
  4080a7:	sbb    ch,0xe1
  4080aa:	mov    dl,0x41
  4080ac:	call   0x4de015c3
  4080b1:	mov    ebp,0x4829b5b5
  4080b6:	push   ecx
  4080b7:	ja     0x40811b
  4080b9:	hlt    
  4080ba:	(bad)  
  4080bb:	pop    edx
  4080bc:	jp     0x40809d
  4080be:	xchg   ebp,eax
  4080bf:	sar    cl,1
  4080c1:	sbb    cl,BYTE PTR [edi-0x58]
  4080c4:	xor    dl,BYTE PTR [ecx]
  4080c6:	mov    edx,0x2aabba8a
  4080cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080cc:	idiv   BYTE PTR [eax-0x3c]
  4080cf:	mov    esp,0xaaabaa8a
  4080d5:	fist   DWORD PTR [ebp-0x58]
  4080d8:	jo     0x408144
  4080da:	push   0xffffffe0
  4080dc:	nop
  4080dd:	cmc    
  4080de:	ret    0x198c
  4080e1:	cmp    edx,ecx
  4080e3:	in     al,0x88
  4080e5:	test   al,0x52
  4080e7:	bound  edi,QWORD PTR [ebx-0x48]
  4080ea:	jge    0x40814d
  4080ec:	iret   
  4080ed:	ins    DWORD PTR es:[edi],dx
  4080ee:	jecxz  0x408150
  4080f0:	or     eax,0x5ca6939c
  4080f5:	cli    
  4080f6:	mov    edx,0x19b2986
  4080fb:	std    
  4080fc:	mov    al,0x98
  4080fe:	inc    esp
  4080ff:	mov    al,ds:0x88be027f
  408104:	jns    0x4080c0
  408106:	xor    DWORD PTR [eax+edi*2],0xfffffff3
  40810a:	mov    ds:0xd434ffec,al
  40810f:	fisttp QWORD PTR [edi]
  408111:	dec    eax
  408112:	cs in  eax,dx
  408114:	std    
  408115:	loop   0x408162
  408117:	jmp    0x8ec03ea1
  40811c:	xor    BYTE PTR [bp+di+0x5eb4],0xf2
  408122:	and    ebx,DWORD PTR [edx]
  408124:	addr16 inc esi
  408126:	(bad)
  408129:	mov    ds:0x14a7592,eax
  40812e:	pop    ebx
  40812f:	push   ebp
  408130:	dec    ebx
  408131:	push   esp
  408132:	test   DWORD PTR [edx+0x49],0xbc325d90
  408139:	push   esi
  40813a:	push   ecx
  40813b:	cwde   
  40813c:	mov    edi,0xffa44f7c
  408141:	stos   BYTE PTR es:[edi],al
  408142:	pusha  
  408143:	dec    ecx
  408144:	(bad)  
  408145:	push   eax
  408146:	xor    eax,0x235e136
  40814b:	rcr    BYTE PTR [eax],0x97
  40814e:	bound  edi,QWORD PTR [edi-0x425d9edd]
  408154:	mov    al,0xb9
  408156:	repz push cs
  408158:	lahf   
  408159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40815a:	int    0x7c
  40815c:	mov    eax,ds:0x11e0bc03
  408161:	adc    eax,0x59f53378
  408166:	mov    al,ds:0xe400bee0
  40816b:	jns    0x408143
  40816d:	mov    ah,ah
  40816f:	dec    edi
  408170:	call   0x3a31:0x95e307fd
  408177:	shl    DWORD PTR [eax+0x39],1
  40817a:	inc    ebp
  40817b:	(bad)  
  40817c:	cdq    
  40817d:	lahf   
  40817e:	xchg   BYTE PTR [ecx],al
  408180:	aad    0x4a
  408182:	aas    
  408183:	out    0x4c,eax
  408185:	push   DWORD PTR [eax-0x49]
  408188:	(bad)  
  408189:	fiadd  WORD PTR [esi-0x28d1e3dc]
  40818f:	and    bl,bh
  408191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408192:	adc    esi,edi
  408194:	shr    DWORD PTR cs:[ebp-0x4b8ba736],1
  40819b:	mov    cl,0x4f
  40819d:	jg     0x4081e1
  40819f:	xor    eax,0x94308542
  4081a4:	and    ch,bl
  4081a6:	rep lods eax,DWORD PTR ds:[esi]
  4081a8:	sbb    eax,0x7ec777f7
  4081ad:	fadd   st(3),st
  4081af:	in     al,0x39
  4081b1:	adc    al,BYTE PTR [ebp-0x26059d4]
  4081b7:	pop    esp
  4081b8:	mov    bl,0xb6
  4081ba:	popf   
  4081bb:	xor    eax,0x77e42bee
  4081c0:	add    BYTE PTR [edx],ah
  4081c2:	jne    0x40818b
  4081c4:	stc    
  4081c5:	add    eax,DWORD PTR [eax]
  4081c7:	and    al,0xbb
  4081c9:	rol    bh,cl
  4081cb:	loop   0x4081dd
  4081cd:	dec    ecx
  4081ce:	iret   
  4081cf:	test   BYTE PTR [esi+ecx*8],bh
  4081d2:	add    al,0xa3
  4081d4:	add    DWORD PTR [esi+0x54],ecx
  4081d7:	fidiv  DWORD PTR [eax]
  4081d9:	pop    ebx
  4081da:	and    al,0xab
  4081dc:	clc    
  4081dd:	les    edx,FWORD PTR [eax]
  4081df:	sbb    ah,BYTE PTR [ecx+0x5b315296]
  4081e5:	vmwrite ecx,eax
  4081e8:	xor    BYTE PTR [ecx-0xe],bh
  4081eb:	addr16 inc ebp
  4081ed:	sbb    al,0xb2
  4081ef:	jne    0x408174
  4081f1:	cmc    
  4081f2:	cdq    
  4081f3:	fcomi  st,st(0)
  4081f5:	jo     0x4081d0
  4081f7:	retf   
  4081f8:	add    BYTE PTR [ebx],ah
  4081fa:	mov    WORD PTR [ebx],fs
  4081fc:	sti    
  4081fd:	cmc    
  4081fe:	pop    ss
  4081ff:	dec    edi
  408200:	out    dx,eax
  408201:	push   ss
  408202:	fistp  QWORD PTR [ebp-0x421e114a]
  408208:	and    BYTE PTR [ebx-0x28],ch
  40820b:	adc    al,0xde
  40820d:	lods   eax,DWORD PTR ds:[si]
  40820f:	pop    edx
  408210:	xor    BYTE PTR [esi+eiz*1],cl
  408213:	sbb    eax,0xf814bd48
  408218:	push   edx
  408219:	jo     0x408254
  40821b:	out    0x50,eax
  40821d:	je     0x40824a
  40821f:	mov    DWORD PTR [edx+0x7f],eax
  408222:	fidivr WORD PTR [edx+0x64]
  408225:	test   DWORD PTR [edx],eax
  408227:	mov    edx,0x2a61bc9
  40822c:	mov    bl,BYTE PTR [edi+0x37]
  40822f:	mov    al,ds:0x7240d67d
  408234:	fisttp DWORD PTR [esi-0x6d]
  408237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408238:	add    eax,0x696a014a
  40823d:	mov    es,WORD PTR [edx+esi*8]
  408240:	or     edx,esp
  408242:	(bad)  
  408243:	cld    
  408244:	jle    0x4081ef
  408246:	(bad)
  40824a:	and    al,0x8f
  40824c:	les    edx,FWORD PTR [edi-0x5d140f6f]
  408252:	sar    BYTE PTR [ebp+edx*8-0x67c84f51],cl
  408259:	repz dec ecx
  40825b:	leave  
  40825c:	aas    
  40825d:	dec    esi
  40825e:	retf   
  40825f:	imul   DWORD PTR [esi]
  408261:	into   
  408262:	mov    ds:0xd7647c58,al
  408267:	xchg   DWORD PTR [ebp-0x5566e3bb],edi
  40826d:	jge    0x4081f8
  40826f:	(bad)  
  408270:	imul   ebx,DWORD PTR [eax+0x4f],0xbdb90383
  408277:	push   0xc530e554
  40827c:	push   edx
  40827d:	xor    ah,BYTE PTR [esi]
  40827f:	xchg   ebp,eax
  408280:	jl     0x4082f2
  408282:	ret    
  408283:	sti    
  408284:	dec    eax
  408285:	fs mov eax,0x59121d8d
  40828b:	enter  0x66a0,0xa0
  40828f:	imul   esi,DWORD PTR [edx],0xffffff85
  408292:	fcomp  QWORD PTR [ebx]
  408294:	cs jecxz 0x4082d0
  408297:	xlat   BYTE PTR ds:[ebx]
  408298:	inc    ebp
  408299:	dec    ecx
  40829a:	mov    esp,DWORD PTR [edi-0x67]
  40829d:	adc    eax,0xd7281832
  4082a2:	cs inc esi
  4082a4:	sbb    ebp,DWORD PTR [ebp-0x6b]
  4082a7:	ins    BYTE PTR es:[edi],dx
  4082a8:	or     BYTE PTR [eax+0x5dd0fe96],0xe3
  4082af:	xchg   edi,eax
  4082b0:	dec    eax
  4082b1:	cmp    eax,DWORD PTR [esi+ecx*2+0x2d79617f]
  4082b8:	icebp  
  4082b9:	repz push ecx
  4082bb:	sub    BYTE PTR [ebx+eiz*1-0x51],ch
  4082bf:	mov    eax,0x5c7094be
  4082c4:	cld    
  4082c5:	and    BYTE PTR [ecx-0x3b],0x4
  4082c9:	adc    ecx,DWORD PTR [eax-0x2fe55c4b]
  4082cf:	fdivr  st,st(0)
  4082d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d2:	sub    esi,DWORD PTR [esi+0x54]
  4082d5:	push   ebx
  4082d6:	ins    BYTE PTR es:[edi],dx
  4082d7:	push   ss
  4082d8:	mov    dl,0x3e
  4082da:	add    BYTE PTR [edi-0x51a931f7],dl
  4082e0:	mov    edi,eax
  4082e2:	cmp    DWORD PTR [edx+0x1],ebp
  4082e5:	mov    DWORD PTR [ebp+0x45],0x7b9f2603
  4082ec:	cmp    eax,esi
  4082ee:	das    
  4082ef:	(bad)  
  4082f0:	fisttp QWORD PTR [edx+0x26]
  4082f3:	push   0x7e
  4082f5:	add    eax,0xadaac16e
  4082fa:	jne    0x4082b5
  4082fc:	sahf   
  4082fd:	ss aad 0xeb
  408300:	xor    BYTE PTR [ecx+eiz*8-0x251cedfb],al
  408307:	pop    ecx
  408308:	icebp  
  408309:	jb     0x408319
  40830b:	xchg   edi,eax
  40830c:	and    dh,BYTE PTR [eax-0x7feb12b7]
  408312:	jb     0x40830f
  408314:	aaa    
  408315:	mov    WORD PTR [edx],fs
  408317:	or     eax,0x261020be
  40831c:	fdiv   QWORD PTR [ebp+0x6bcf761f]
  408322:	lea    edi,[eax]
  408324:	xchg   edi,eax
  408325:	aam    0x83
  408327:	lds    eax,FWORD PTR [edx-0x7a56e94d]
  40832d:	xchg   esp,eax
  40832e:	neg    DWORD PTR [edi]
  408330:	shl    BYTE PTR [ecx+0x7d5662c5],0x23
  408337:	(bad)  
  408338:	push   esp
  408339:	js     0x4083b6
  40833b:	mov    edi,0x93e6e85b
  408340:	push   0x79cc7630
  408345:	inc    ebp
  408346:	mov    ds:0x12c7ff7,eax
  40834b:	sbb    al,0x66
  40834d:	adc    ah,BYTE PTR [esi+0x49]
  408350:	(bad)  
  408351:	cld    
  408352:	aad    0xb3
  408354:	loopne 0x408373
  408356:	adc    ebx,0xb48e47a8
  40835c:	mov    ch,0xe8
  40835e:	fwait
  40835f:	mov    ah,BYTE PTR ss:[ecx-0x4d]
  408363:	push   esp
  408364:	sbb    eax,0xf6b8ca6
  408369:	jmp    0xd4af:0xba18804a
  408370:	cs sti 
  408372:	ds xchg ebp,eax
  408374:	mov    esi,0x53f5fcda
  408379:	push   ebp
  40837a:	sbb    DWORD PTR [ecx+0x5fd0e345],ecx
  408380:	mov    eax,ds:0xc5c5a8f0
  408385:	icebp  
  408386:	std    
  408387:	dec    eax
  408388:	mov    ch,al
  40838a:	sahf   
  40838b:	xor    al,0xbe
  40838d:	and    al,0x7a
  40838f:	mov    al,0xcd
  408391:	loop   0x40831d
  408393:	jbe    0x40840e
  408395:	dec    edi
  408396:	outs   dx,BYTE PTR ds:[esi]
  408397:	and    eax,0xab270cd7
  40839c:	es fcmovnb st,st(5)
  40839f:	sub    ebp,DWORD PTR [esi+0x67]
  4083a2:	in     eax,dx
  4083a3:	ret    
  4083a4:	jp     0x40835d
  4083a6:	lods   eax,DWORD PTR ds:[esi]
  4083a7:	xor    al,0xa5
  4083a9:	sub    esp,ebx
  4083ab:	pop    edi
  4083ac:	xchg   edx,eax
  4083ad:	mov    al,ds:0x6ed17fcb
  4083b2:	mov    edx,0xb4cb7cd5
  4083b7:	fcomp  DWORD PTR [ecx+0x3d]
  4083ba:	in     al,dx
  4083bb:	xchg   esi,eax
  4083bc:	test   al,0xc2
  4083be:	sub    ch,BYTE PTR [eax]
  4083c0:	mov    al,0x4
  4083c2:	int    0xd6
  4083c4:	lahf   
  4083c5:	lods   eax,DWORD PTR ds:[esi]
  4083c6:	test   BYTE PTR [edx+0x71],al
  4083c9:	jne    0x4083dc
  4083cb:	fwait
  4083cc:	enter  0xcd6a,0x42
  4083d0:	jle    0x40840d
  4083d2:	cmp    BYTE PTR [ebp+0x6917e2d0],ah
  4083d8:	cmc    
  4083d9:	stc    
  4083da:	push   0x58
  4083dc:	push   ds
  4083dd:	mov    WORD PTR [ebx+eiz*4],gs
  4083e0:	jmp    0xd5c4:0xfdec04e5
  4083e7:	fstp   QWORD PTR [eax+ebx*1-0x197e94c8]
  4083ee:	push   0x5a
  4083f0:	xchg   ebx,eax
  4083f1:	inc    ebp
  4083f2:	aas    
  4083f3:	mov    bh,0x16
  4083f5:	inc    esi
  4083f6:	inc    BYTE PTR [edi+0x7e]
  4083f9:	(bad)  
  4083fa:	loopne 0x4083a0
  4083fc:	sti    
  4083fd:	loope  0x40838e
  4083ff:	mov    esp,0xf52b98e7
  408404:	loopne 0x408444
  408406:	lock inc edi
  408408:	sbb    cl,BYTE PTR [esp+eax*2-0x8]
  40840c:	adc    eax,0x592e09c5
  408411:	ds jle 0x40840f
  408414:	fcos   
  408416:	mov    ebp,0xff2c5193
  40841b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40841d:	stos   DWORD PTR es:[edi],eax
  40841e:	js     0x40849c
  408420:	in     al,0x31
  408422:	pop    ss
  408423:	imul   esi,DWORD PTR [eax+eax*2+0x547790e8],0x20
  40842b:	ds sub eax,0x7673433f
  408431:	and    al,0xa7
  408433:	mov    DWORD PTR ds:0x3f2ef0ec,0xbaf4dd3
  40843d:	pop    eax
  40843e:	cmp    DWORD PTR [ebx-0x5],ebx
  408441:	(bad)  
  408442:	mov    ebx,0xe5e4c9bd
  408447:	pop    eax
  408448:	outs   dx,DWORD PTR ds:[esi]
  408449:	rcr    DWORD PTR [ebp+0x7bf674cb],0x2b
  408450:	adc    DWORD PTR [edx],ecx
  408452:	jle    0x40847d
  408454:	es mov cl,0xfa
  408457:	mov    ds:0x129de7c3,eax
  40845c:	adc    esi,edi
  40845e:	or     bl,BYTE PTR [edi]
  408460:	mov    dh,0x58
  408462:	mov    al,ds:0x5e8312ee
  408467:	imul   ecx,DWORD PTR [ebx-0x36],0xffffffc6
  40846b:	cmp    bh,dh
  40846d:	push   cs
  40846e:	shr    dh,1
  408470:	ss call 0x7fae:0x7d53c0af
  408478:	xor    BYTE PTR [esp+edi*4-0x3327e4c3],ch
  40847f:	jmp    ebx
  408481:	les    edx,FWORD PTR [ebx+0x2a96e5dc]
  408487:	inc    ecx
  408488:	es neg ebx
  40848b:	mov    bh,0x51
  40848d:	jle    0x4084e5
  40848f:	jno    0x40849a
  408491:	add    eax,0x63b6d0ce
  408496:	nop
  408497:	mov    BYTE PTR [eax],dh
  408499:	in     al,dx
  40849a:	pop    eax
  40849b:	lock or eax,0x12fd1968
  4084a1:	or     cl,ch
  4084a3:	add    eax,0x80006e27
  4084a8:	sbb    al,0x41
  4084aa:	inc    ebp
  4084ab:	imul   edx,ebp,0xffffffae
  4084ae:	es aaa 
  4084b0:	pop    ss
  4084b1:	or     BYTE PTR [edx-0x2b],dl
  4084b4:	out    dx,eax
  4084b5:	sbb    ch,BYTE PTR [edx+0x23]
  4084b8:	pop    ebx
  4084b9:	jnp    0x4084ff
  4084bb:	pop    esi
  4084bc:	das    
  4084bd:	dec    esp
  4084be:	xor    DWORD PTR [ebp-0x4808d6f5],ebx
  4084c4:	in     al,0x3a
  4084c6:	je     0x408523
  4084c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c9:	cli    
  4084ca:	shr    esp,cl
  4084cc:	ret    0x8f43
  4084cf:	mov    esp,0x9f3c42d5
  4084d4:	jae    0x4084de
  4084d6:	ins    BYTE PTR es:[edi],dx
  4084d7:	push   ss
  4084d8:	jns    0x40849c
  4084da:	cmp    esi,edx
  4084dc:	jg     0x40847d
  4084de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084df:	sub    al,0x2f
  4084e1:	repnz push esp
  4084e3:	push   0x45
  4084e5:	xor    ebx,DWORD PTR [esi]
  4084e7:	(bad)  
  4084e8:	mov    esi,0x3e105a3
  4084ed:	push   edi
  4084ee:	ins    BYTE PTR es:[edi],dx
  4084ef:	mov    esi,DWORD PTR [edx]
  4084f1:	loop   0x4084f7
  4084f3:	add    eax,0x827e807d
  4084f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084f9:	mov    BYTE PTR [esi-0x1c38a58a],ah
  4084ff:	add    al,0x23
  408501:	mov    bl,0x16
  408503:	stos   DWORD PTR es:[edi],eax
  408504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408505:	pop    ds
  408506:	cmp    BYTE PTR [esi+0x116e94ed],dh
  40850c:	and    edi,DWORD PTR [esi]
  40850e:	pop    ss
  40850f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408510:	fdivr  st(1),st
  408512:	fcmovnb st,st(6)
  408514:	es xchg ecx,eax
  408516:	push   esi
  408517:	mov    bl,0xa9
  408519:	xchg   ecx,eax
  40851a:	cld    
  40851b:	push   edi
  40851c:	or     eax,0x2a360044
  408521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408522:	add    al,0xf7
  408524:	pop    bx
  408526:	push   es
  408527:	aas    
  408528:	in     eax,0x29
  40852a:	xchg   esi,eax
  40852b:	arpl   WORD PTR [edi+edi*2-0x3b],cx
  40852f:	pop    ss
  408530:	(bad)  
  408531:	cmp    eax,DWORD PTR [ebx]
  408533:	or     DWORD PTR [eax-0x58],esi
  408536:	sub    BYTE PTR [ecx],ah
  408538:	sahf   
  408539:	scas   eax,DWORD PTR es:[edi]
  40853a:	arpl   si,ax
  40853c:	pop    ebp
  40853d:	and    al,BYTE PTR [ebx+0x9167131]
  408543:	ds sub eax,0x3d88e47
  408549:	retf   0x1bc8
  40854c:	sbb    DWORD PTR [edi],ebx
  40854e:	retf   0x1982
  408551:	fld    DWORD PTR [ebx]
  408553:	inc    esp
  408554:	add    eax,0x5746b04f
  408559:	loope  0x408582
  40855b:	mov    ch,0x4c
  40855d:	out    dx,eax
  40855e:	cli    
  40855f:	pop    esp
  408560:	cmp    BYTE PTR [edx+0x33],al
  408563:	inc    esp
  408564:	popf   
  408565:	xchg   ebx,eax
  408566:	inc    ebp
  408567:	xor    DWORD PTR [ebx+0xb],edx
  40856a:	jmp    0x2e2529dc
  40856f:	adc    ebx,DWORD PTR [edx-0x2e]
  408572:	bound  eax,QWORD PTR [eax]
  408574:	inc    esi
  408575:	mov    ?,WORD PTR [ecx+ebx*4+0x76012803]
  40857c:	sysexit 
  40857e:	je     0x4085b3
  408580:	in     al,0x45
  408582:	int    0xa4
  408584:	inc    esi
  408585:	loop   0x408597
  408587:	mov    gs,esp
  408589:	or     edi,DWORD PTR [edi+0x70]
  40858c:	in     eax,0x23
  40858e:	add    ebx,DWORD PTR [ebp+0x26]
  408591:	inc    ebp
  408592:	or     BYTE PTR [esi],ch
  408594:	or     ecx,DWORD PTR [eax]
  408596:	iret   
  408597:	pop    ebp
  408598:	shl    BYTE PTR [edi+ebp*2-0x29579dd7],cl
  40859f:	mov    ebp,0x3652ebfe
  4085a4:	hlt    
  4085a5:	dec    ebx
  4085a6:	js     0x4085bb
  4085a8:	rol    edx,0x4
  4085ab:	cmp    DWORD PTR [edi+0x3c3918d5],0xffffffa5
  4085b2:	outs   dx,BYTE PTR ds:[esi]
  4085b3:	fidiv  WORD PTR [eax+0x4992207a]
  4085b9:	mov    dl,0x49
  4085bb:	mov    esp,0xc3ebf917
  4085c0:	push   ds
  4085c1:	(bad)  
  4085c2:	jno    0x408588
  4085c4:	fucomi st,st(2)
  4085c6:	add    al,0xfb
  4085c8:	clc    
  4085c9:	jp     0x408564
  4085cb:	xchg   esi,eax
  4085cc:	in     eax,dx
  4085cd:	or     eax,0xfffffff2
  4085d0:	popf   
  4085d1:	dec    eax
  4085d2:	rol    edx,cl
  4085d4:	and    DWORD PTR [eax+0x42434892],0x45
  4085db:	jo     0xb4d1e103
  4085e1:	leave  
  4085e2:	nop
  4085e3:	clc    
  4085e4:	push   esp
  4085e5:	push   0x4a
  4085e7:	pop    ds
  4085e8:	scas   al,BYTE PTR es:[edi]
  4085e9:	add    eax,0x4724ecd
  4085ee:	push   0xffffff92
  4085f0:	pop    esp
  4085f1:	repz or BYTE PTR [ecx-0x12],ch
  4085f5:	or     al,0x30
  4085f7:	sbb    BYTE PTR [edx+0x37],ah
  4085fa:	mov    ah,0xcf
  4085fc:	mov    WORD PTR [ecx],cs
  4085fe:	lds    ebx,FWORD PTR [ebx]
  408600:	idiv   BYTE PTR [edi]
  408602:	ss xchg edi,eax
  408604:	mov    dh,0xa0
  408606:	(bad)  
  408607:	out    dx,al
  408608:	jmp    0xf4ff049b
  40860d:	push   es
  40860e:	out    dx,eax
  40860f:	ds add eax,0x4fa71ad
  408615:	arpl   si,si
  408617:	stos   DWORD PTR es:[edi],eax
  408618:	pop    ebx
  408619:	ja     0x408654
  40861b:	cmp    al,0x30
  40861d:	xor    BYTE PTR [edi],dh
  40861f:	xor    al,0xc4
  408621:	jne    0x4085ac
  408623:	(bad)  
  408624:	mov    esi,0xf56da241
  408629:	call   0x9fc:0xb005359f
  408630:	adc    DWORD PTR [ecx+edi*2-0x73b1a2a],0xffffff86
  408638:	dec    eax
  408639:	in     eax,dx
  40863a:	int3   
  40863b:	shr    DWORD PTR [edx+0x2749ece],1
  408641:	icebp  
  408642:	xchg   edx,eax
  408643:	mov    gs,WORD PTR [esi+eax*8-0x77]
  408647:	jno    0x40867d
  408649:	push   ds
  40864a:	xchg   esi,eax
  40864b:	add    eax,DWORD PTR [ebx+0x6c]
  40864e:	cmp    BYTE PTR [ecx-0x52cc1b15],bl
  408654:	fcomp  DWORD PTR [eax-0x6a536e43]
  40865a:	into   
  40865b:	(bad)
  40865f:	jle    0x40862c
  408661:	jo     0x408698
  408663:	pop    ebx
  408664:	repnz mov cl,0xe
  408667:	sub    cl,BYTE PTR [ecx+0x70043876]
  40866d:	mov    eax,ds:0x61455df6
  408672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408673:	int    0x83
  408675:	add    eax,DWORD PTR [esi-0x487145f]
  40867b:	scas   eax,DWORD PTR es:[edi]
  40867c:	js     0x40865f
  40867e:	mov    DWORD PTR [edi+0x53],ebp
  408681:	hlt    
  408682:	js     0x4086c2
  408684:	dec    edx
  408685:	dec    edx
  408686:	xor    edx,DWORD PTR [edi+0x7]
  408689:	in     al,dx
  40868a:	clc    
  40868b:	hlt    
  40868c:	jae    0x4086c5
  40868e:	xlat   BYTE PTR ds:[ebx]
  40868f:	sar    edx,cl
  408691:	(bad)  [edx+0x76]
  408694:	aas    
  408695:	xor    dl,bl
  408697:	rcr    BYTE PTR [ebp-0x2e],1
  40869a:	mov    esp,0x1921b0a
  40869f:	aas    
  4086a0:	adc    ebp,ebx
  4086a2:	xchg   edi,eax
  4086a3:	sub    al,0xd0
  4086a5:	jnp    0x408664
  4086a7:	mov    edx,0x65dc2302
  4086ac:	jle    0x4086bf
  4086ae:	ins    DWORD PTR es:[edi],dx
  4086af:	mov    bh,0x63
  4086b1:	fs push edx
  4086b3:	iret   
  4086b4:	sbb    dh,BYTE PTR [eax+0x1d75bdac]
  4086ba:	pusha  
  4086bb:	sub    al,0x54
  4086bd:	pop    ecx
  4086be:	fldenv ds:0xd0f4ce07
  4086c4:	fist   DWORD PTR [edx+0x10]
  4086c7:	sbb    BYTE PTR [edi+0xb],cl
  4086ca:	sbb    edx,DWORD PTR [ebp-0x7dc7c8b7]
  4086d0:	clc    
  4086d1:	cli    
  4086d2:	cmp    ah,BYTE PTR [eax+0x5]
  4086d5:	pop    edi
  4086d6:	dec    ebp
  4086d7:	shr    BYTE PTR [ebx+0x3162e2ae],cl
  4086dd:	xchg   edi,eax
  4086de:	adc    BYTE PTR [edi],0x74
  4086e1:	mul    ebp
  4086e3:	and    edx,eax
  4086e5:	push   0xc8e99e10
  4086ea:	lahf   
  4086eb:	(bad)
  4086ee:	popa   
  4086ef:	mov    ds:0x6ed51162,eax
  4086f4:	stc    
  4086f5:	fcomp  QWORD PTR [esi-0x52a084a7]
  4086fb:	xor    DWORD PTR [eax+0x3af6f877],ecx
  408701:	xchg   ebp,eax
  408702:	jbe    0x408690
  408704:	mov    esi,ecx
  408706:	ins    DWORD PTR es:[edi],dx
  408707:	sbb    al,0xcd
  408709:	inc    esp
  40870a:	repnz mov dh,0xf1
  40870d:	push   ss
  40870e:	mov    ebp,0x8ed555a3
  408713:	scas   al,BYTE PTR es:[edi]
  408714:	mov    ch,BYTE PTR [ecx]
  408716:	call   0x9c38:0x3f80db7d
  40871d:	retf   0xed47
  408720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408721:	(bad)  
  408722:	adc    BYTE PTR [edx+0x8a10862],bl
  408728:	dec    edi
  408729:	pop    esi
  40872a:	outs   dx,DWORD PTR ds:[esi]
  40872b:	nop
  40872c:	addr16 cs aam 0x56
  408730:	push   eax
  408731:	sub    eax,0x242cd3d4
  408736:	xchg   BYTE PTR [esi-0x76],ah
  408739:	call   0x46a5:0xc1c4791d
  408740:	ja     0x40872b
  408742:	jmp    0x408734
  408744:	dec    esp
  408745:	lahf   
  408746:	cli    
  408747:	ror    edx,cl
  408749:	in     eax,0xf6
  40874b:	call   0x8fa8:0x7c13f277
  408752:	pop    ebx
  408753:	out    dx,eax
  408754:	xor    BYTE PTR [ebp-0x2f9784f],0xde
  40875b:	cmc    
  40875c:	nop
  40875d:	or     BYTE PTR [ebx],dh
  40875f:	fucomp st(4)
  408761:	(bad)  
  408762:	ds push eax
  408764:	or     al,0x36
  408766:	inc    ebx
  408767:	push   0x12
  408769:	pop    ss
  40876a:	xchg   esp,eax
  40876b:	dec    ebp
  40876c:	push   ebx
  40876d:	mov    ds:0x9d522196,eax
  408772:	jmp    0xdf04:0xf6605858
  408779:	(bad)  
  40877a:	loopne 0x4087d4
  40877c:	push   ss
  40877d:	pop    DWORD PTR [edi+0x4c]
  408780:	adc    ah,BYTE PTR [ebp-0x11]
  408783:	loope  0x408710
  408785:	js     0x408778
  408787:	outs   dx,DWORD PTR ds:[esi]
  408788:	sbb    DWORD PTR ds:0xd69b4f59,edi
  40878e:	add    ebp,DWORD PTR [edx-0x4616b5a4]
  408794:	jmp    0x41ac:0xa970fc13
  40879b:	and    BYTE PTR [esp+ebp*2-0x15],al
  40879f:	inc    esi
  4087a0:	(bad)
  4087a4:	enter  0xbb76,0x83
  4087a8:	push   ebx
  4087a9:	aas    
  4087aa:	fnsave [esp+esi*1]
  4087ad:	imul   eax,DWORD PTR [ebx+0x1e],0x43166c84
  4087b4:	and    eax,DWORD PTR [edx-0x72fed2ad]
  4087ba:	xchg   edx,eax
  4087bb:	and    al,0xb1
  4087bd:	inc    ebp
  4087be:	pop    ecx
  4087bf:	mov    ah,0x57
  4087c1:	iret   
  4087c2:	or     esp,DWORD PTR [eax+0x10]
  4087c5:	jns    0x408831
  4087c7:	xor    al,0xac
  4087c9:	scas   al,BYTE PTR es:[edi]
  4087ca:	(bad)  
  4087cb:	cmp    esp,DWORD PTR [eax]
  4087cd:	outs   dx,DWORD PTR ds:[esi]
  4087ce:	add    eax,0xeeac8757
  4087d3:	aad    0xf1
  4087d5:	mov    ebp,DWORD PTR ds:0x21e644a3
  4087db:	imul   ebp,DWORD PTR [edx+0x2c0e47d0],0x0
  4087e2:	dec    eax
  4087e3:	daa    
  4087e4:	dec    ecx
  4087e5:	sub    BYTE PTR [eax+0x83cfb48],dh
  4087eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ec:	and    DWORD PTR [eax+0x74],ecx
  4087ef:	ja     0x408863
  4087f1:	push   0x1a
  4087f3:	mov    ecx,0xcb092017
  4087f8:	jne    0x408818
  4087fa:	xor    bh,al
  4087fc:	rcr    DWORD PTR gs:[ecx],0xfa
  408800:	push   esi
  408801:	lock mov ah,0xe4
  408804:	xchg   ecx,eax
  408805:	xlat   BYTE PTR ds:[ebx]
  408806:	ror    edi,1
  408808:	gs dec ebp
  40880a:	ins    DWORD PTR es:[edi],dx
  40880b:	clc    
  40880c:	lds    esp,FWORD PTR [ebp-0x6a7788da]
  408812:	and    BYTE PTR [ebp-0x75],dh
  408815:	push   edi
  408816:	(bad)  
  408817:	dec    ebp
  408818:	outs   dx,BYTE PTR ds:[esi]
  408819:	inc    esi
  40881a:	shl    ebx,cl
  40881c:	mov    DWORD PTR ds:0xe73f6c46,eax
  408822:	fs mov ecx,0x49a26f8b
  408828:	mov    dh,dl
  40882a:	cmp    eax,0x1065e722
  40882f:	ss int3 
  408831:	in     eax,dx
  408832:	sub    al,0x55
  408834:	jg     0x408861
  408836:	jnp    0x4087fd
  408838:	inc    ecx
  408839:	xchg   esp,eax
  40883a:	les    edx,FWORD PTR [eax+0x23]
  40883d:	pop    ss
  40883e:	inc    ebx
  40883f:	rcr    DWORD PTR [esp+esi*2-0x5ca2dceb],1
  408846:	pop    edi
  408847:	dec    esp
  408848:	test   al,0xdc
  40884a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40884b:	mov    ?,eax
  40884d:	ret    
  40884e:	jecxz  0x408801
  408850:	or     dh,dh
  408852:	stos   BYTE PTR es:[edi],al
  408853:	jge    0x4088c8
  408855:	adc    BYTE PTR [eax+0x3f],0xe7
  408859:	push   ss
  40885a:	mov    ss,ecx
  40885c:	jmp    0x6a65b1e7
  408861:	frstor ds:0x88f83aa0
  408867:	jo     0x408831
  408869:	out    0xb5,al
  40886b:	dec    edx
  40886c:	inc    ebp
  40886d:	call   0x29e8:0xa4495f9f
  408874:	mov    dl,0x15
  408876:	add    ecx,DWORD PTR [eax+0x2a]
  408879:	lea    ecx,[edi]
  40887b:	mov    bl,0x4b
  40887d:	rol    BYTE PTR [ebx],0xf6
  408880:	sbb    BYTE PTR [ebp+edx*8-0x35],bl
  408884:	xor    BYTE PTR [eax-0x3ef24e],ch
  40888a:	adc    BYTE PTR [edx-0x19],bh
  40888d:	ja     0x408898
  40888f:	int    0x89
  408891:	cmp    ah,ch
  408893:	and    DWORD PTR [eax-0x23b6a90b],ecx
  408899:	pusha  
  40889a:	rcl    ecx,0x9e
  40889d:	cmp    BYTE PTR [eax+0x1742e39f],dh
  4088a3:	cmp    eax,0x8af6f5ca
  4088a8:	push   ds
  4088a9:	dec    edx
  4088aa:	sbb    DWORD PTR [ebx],esp
  4088ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ad:	scas   al,BYTE PTR es:[edi]
  4088ae:	jp     0x408831
  4088b0:	clc    
  4088b1:	inc    ebx
  4088b2:	loope  0x4088f5
  4088b4:	push   cs
  4088b5:	sub    BYTE PTR [edx],0xb5
  4088b8:	push   edx
  4088b9:	sar    DWORD PTR [ebx+0x16],cl
  4088bc:	jle    0x4088cf
  4088be:	or     DWORD PTR [esi],0xffffffd6
  4088c1:	fwait
  4088c2:	out    dx,al
  4088c3:	int3   
  4088c4:	loopne 0x4088a8
  4088c6:	cld    
  4088c7:	inc    eax
  4088c8:	stos   BYTE PTR es:[edi],al
  4088c9:	idiv   DWORD PTR [esi-0xe]
  4088cc:	xor    DWORD PTR [edx+0x4d],ebp
  4088cf:	test   eax,0x10053ec2
  4088d4:	jge    0x4088c9
  4088d6:	out    dx,al
  4088d7:	stos   DWORD PTR es:[edi],eax
  4088d8:	lock mov ds:0x74a5b0f5,eax
  4088de:	push   ebx
  4088df:	fadd   DWORD PTR [ebp-0x2a]
  4088e2:	adc    DWORD PTR [edi],edx
  4088e4:	out    0x31,eax
  4088e6:	cmp    BYTE PTR [eax],dh
  4088e8:	push   ecx
  4088e9:	stos   BYTE PTR es:[edi],al
  4088ea:	lahf   
  4088eb:	and    DWORD PTR [eax+0x59a36dd9],esp
  4088f1:	dec    esi
  4088f2:	sbb    BYTE PTR [edi-0xe],dh
  4088f5:	inc    esi
  4088f6:	shl    BYTE PTR [ebp-0x9],1
  4088f9:	and    edi,edi
  4088fb:	mov    ds,WORD PTR [esi-0x29]
  4088fe:	loop   0x408925
  408900:	push   ecx
  408901:	and    eax,0x9d89a69d
  408906:	xor    eax,0x8e91a6d3
  40890b:	xor    BYTE PTR [eax-0x20],bh
  40890e:	das    
  40890f:	adc    DWORD PTR [edx-0x2d16048e],esp
  408915:	pop    edx
  408916:	(bad)  
  408917:	mov    eax,0x7c9a167d
  40891c:	add    al,0x5e
  40891e:	sahf   
  40891f:	lods   eax,DWORD PTR ds:[esi]
  408920:	test   al,0x41
  408922:	sub    ebp,DWORD PTR [esi+0x47a2eae2]
  408928:	inc    edx
  408929:	repnz ds xor al,0xbc
  40892d:	pop    ss
  40892e:	shl    DWORD PTR [ecx+ebp*4+0x4c],cl
  408932:	cli    
  408933:	cmp    BYTE PTR [ecx+0x37],al
  408936:	cdq    
  408937:	into   
  408938:	ret    
  408939:	mov    esp,0x39b0fd83
  40893e:	mov    es,WORD PTR [ebx+0x5b]
  408941:	imul   esi,DWORD PTR [esp+ecx*4+0x1],0xffffffd1
  408946:	ja     0x408963
  408948:	cdq    
  408949:	clc    
  40894a:	call   0xe0ac640b
  40894f:	sbb    al,BYTE PTR [edx]
  408951:	jle    0x4089bb
  408953:	add    esp,ebx
  408955:	mov    esp,DWORD PTR [edi]
  408957:	test   DWORD PTR [ecx-0x2e69b7bf],ecx
  40895d:	xor    BYTE PTR [ecx+0x1b],cl
  408960:	(bad)  
  408961:	clc    
  408962:	xchg   BYTE PTR [edi-0x70ec2091],bl
  408968:	dec    ecx
  408969:	test   eax,0x7c182407
  40896f:	inc    ecx
  408970:	repz repz pop ebx
  408973:	test   eax,0xe75dd6c8
  408978:	fmul   st(4),st
  40897a:	pop    ds
  40897b:	pop    esp
  40897c:	stos   DWORD PTR es:[edi],eax
  40897d:	inc    eax
  40897e:	inc    ecx
  40897f:	out    dx,al
  408980:	lock stc 
  408982:	mov    dl,0x9f
  408984:	inc    esi
  408985:	push   ss
  408986:	mov    BYTE PTR [eax+0x1e0d81cc],ah
  40898c:	push   ebp
  40898d:	mov    al,0xbf
  40898f:	mov    ds:0x70888f2f,eax
  408994:	out    0x38,al
  408996:	daa    
  408997:	xchg   edi,eax
  408998:	and    eax,0xd6706fb4
  40899d:	std    
  40899e:	mov    al,ds:0x1cbbcba2
  4089a3:	std    
  4089a4:	push   ds
  4089a5:	pop    edx
  4089a6:	fwait
  4089a7:	mov    bl,ch
  4089a9:	retf   0xc3d8
  4089ac:	gs inc esp
  4089ae:	shl    DWORD PTR [eax],1
  4089b0:	dec    ebp
  4089b1:	xchg   BYTE PTR [ebp-0x51736291],ah
  4089b7:	push   ebp
  4089b8:	or     ebp,DWORD PTR [ebx-0x79]
  4089bb:	lea    ebp,[ecx-0x5c]
  4089be:	pusha  
  4089bf:	cmp    eax,0x2eaef2b6
  4089c4:	icebp  
  4089c5:	mov    ecx,0xafa2c369
  4089ca:	inc    esi
  4089cb:	dec    ebp
  4089cc:	or     BYTE PTR [ebp-0x57],dl
  4089cf:	mov    es,edi
  4089d1:	enter  0x3d82,0x8
  4089d5:	imul   eax,DWORD PTR [eax],0xffffff97
  4089d8:	sbb    BYTE PTR [esi-0x5b327cff],al
  4089de:	call   0x226c8af9
  4089e3:	mov    es,WORD PTR [edx+0x74]
  4089e6:	out    0x13,al
  4089e8:	inc    eax
  4089e9:	nop
  4089ea:	ja     0x4089a0
  4089ec:	imul   ebp,esi,0x0
  4089ef:	imul   esi,DWORD PTR [esi+eiz*1-0x4b2c0234],0x49005cff
  4089fa:	aad    0x60
  4089fc:	sub    al,0x6d
  4089fe:	scas   al,BYTE PTR es:[edi]
  4089ff:	cld    
  408a00:	fst    DWORD PTR [esi+0x4c]
  408a03:	cmp    ebp,DWORD PTR [edx]
  408a05:	retf   
  408a06:	enter  0x67cf,0x95
  408a0a:	daa    
  408a0b:	dec    eax
  408a0c:	xchg   edi,eax
  408a0d:	pop    edi
  408a0e:	jbe    0x4089e5
  408a10:	inc    eax
  408a11:	fwait
  408a12:	mov    al,0xaf
  408a14:	ss jg  0x408a47
  408a17:	scas   eax,DWORD PTR es:[edi]
  408a18:	fstp   TBYTE PTR [ecx-0x4c0a1680]
  408a1e:	cs pop ebx
  408a20:	xchg   ebp,eax
  408a21:	push   es
  408a22:	les    edi,FWORD PTR [esp+ecx*2+0x61]
  408a26:	in     eax,dx
  408a27:	mov    dl,0x44
  408a29:	test   BYTE PTR [ecx+0xfdea941],al
  408a2f:	(bad)  
  408a30:	(bad)  
  408a31:	push   esi
  408a32:	or     ch,dl
  408a34:	mov    edi,0x35a7caef
  408a39:	lods   eax,DWORD PTR ds:[esi]
  408a3a:	dec    esp
  408a3b:	xor    edx,edi
  408a3d:	jmp    0x408a78
  408a3f:	lds    esp,FWORD PTR [ecx+0x2c]
  408a42:	or     dh,BYTE PTR [edi+0x3f721775]
  408a48:	or     al,0x57
  408a4a:	push   esp
  408a4b:	(bad)  
  408a4c:	retf   
  408a4d:	sahf   
  408a4e:	mov    WORD PTR [ecx+0x38013a1],ss
  408a54:	pop    eax
  408a55:	sub    al,0x8f
  408a57:	xchg   ebp,eax
  408a58:	out    0x58,al
  408a5a:	sub    eax,0x8cd77d94
  408a5f:	aaa    
  408a60:	jo     0x408abf
  408a62:	add    al,0xb2
  408a64:	scas   eax,DWORD PTR es:[edi]
  408a65:	test   eax,0x2117b3d1
  408a6a:	inc    esi
  408a6b:	popf   
  408a6c:	push   esp
  408a6d:	ds pop esi
  408a6f:	mov    dl,0xe
  408a71:	popa   
  408a72:	les    esi,FWORD PTR [esi+0x6b21b835]
  408a78:	clc    
  408a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a7a:	aaa    
  408a7b:	jno    0x408acf
  408a7d:	push   ss
  408a7e:	popa   
  408a7f:	cli    
  408a80:	mov    al,0x1a
  408a82:	les    ebp,FWORD PTR [edi]
  408a84:	shr    bl,1
  408a86:	sbb    al,0x76
  408a88:	stos   BYTE PTR es:[edi],al
  408a89:	popf   
  408a8a:	sbb    eax,0x6863659d
  408a8f:	test   al,0x6e
  408a91:	dec    esi
  408a92:	(bad)  
  408a93:	and    eax,0xe8cd3e7f
  408a98:	jmp    0x408a86
  408a9a:	jb     0x408add
  408a9c:	adc    bh,ch
  408a9e:	mov    ch,0x80
  408aa0:	fcom   st(7)
  408aa2:	out    dx,eax
  408aa3:	push   edx
  408aa4:	jmp    DWORD PTR [ebx-0x21]
  408aa7:	mov    eax,ds:0x5f3f16b6
  408aac:	xchg   ecx,eax
  408aad:	jp     0x408b12
  408aaf:	pop    edx
  408ab0:	out    0x7e,eax
  408ab2:	into   
  408ab3:	mov    ah,0xd2
  408ab5:	xchg   BYTE PTR [ebx-0x309b2824],bh
  408abb:	lods   eax,DWORD PTR ds:[esi]
  408abc:	imul   edi,DWORD PTR [edx+0x76],0xb51895b7
  408ac3:	test   al,0xa2
  408ac5:	(bad)  
  408ac6:	call   0x9070a66c
  408acb:	add    DWORD PTR [ebp+0x6b],0x74494cce
  408ad2:	mov    bl,0xcf
  408ad4:	sbb    BYTE PTR [esi],bh
  408ad6:	pushf  
  408ad7:	in     al,dx
  408ad8:	push   esi
  408ad9:	jmp    0x31d:0xe3d3d284
  408ae0:	mov    eax,ds:0x8b71d277
  408ae5:	cdq    
  408ae6:	mov    ah,0xe7
  408ae8:	scas   eax,DWORD PTR es:[edi]
  408ae9:	mov    ecx,0x899fa101
  408aee:	lds    ebp,FWORD PTR [edi-0x5b]
  408af1:	push   ebx
  408af2:	sti    
  408af3:	xchg   esp,eax
  408af4:	or     DWORD PTR [ebp+0x69],0xd1a45e9
  408afb:	les    eax,FWORD PTR [ecx+edi*1+0x11ffc370]
  408b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b03:	daa    
  408b04:	and    bh,BYTE PTR [eax+0x33]
  408b07:	fsubr  QWORD PTR ds:0xb69c92d7
  408b0d:	arpl   WORD PTR [edi+0x67ea1a7b],si
  408b13:	jns    0x408b57
  408b15:	pop    eax
  408b16:	stc    
  408b17:	sbb    edx,0x92fe9c88
  408b1d:	jl     0x408ae0
  408b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b20:	sub    BYTE PTR [edx-0x3088be2b],cl
  408b26:	bound  edx,QWORD PTR [ebp+0x12]
  408b29:	test   esp,ebp
  408b2b:	into   
  408b2c:	mov    esi,0x2f44e309
  408b31:	adc    edx,0x2c145d7c
  408b37:	int    0xbc
  408b39:	pop    ebx
  408b3a:	mov    eax,ds:0x51b3e192
  408b3f:	dec    esp
  408b40:	icebp  
  408b41:	push   ds
  408b42:	cmc    
  408b43:	sub    al,0x8b
  408b45:	mov    ecx,0x2e57ac7c
  408b4a:	pop    esp
  408b4b:	and    cl,cl
  408b4d:	xor    BYTE PTR [eax+0x5],cl
  408b50:	xlat   BYTE PTR ds:[ebx]
  408b51:	inc    edx
  408b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b53:	jle    0x408b19
  408b55:	out    dx,al
  408b56:	and    BYTE PTR [esi-0x1d0d3fcf],cl
  408b5c:	addr16 enter 0x1864,0x38
  408b61:	(bad)  
  408b62:	rol    DWORD PTR [esi+0x4593525c],1
  408b68:	pop    ds
  408b69:	rol    BYTE PTR [esp+esi*8-0xb2c04db],0x91
  408b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b72:	or     esp,DWORD PTR [ebx]
  408b74:	fisubr DWORD PTR [ecx+0x61]
  408b77:	es hlt 
  408b79:	gs inc ecx
  408b7b:	xor    al,0xc3
  408b7d:	push   0xbdacbe67
  408b82:	lahf   
  408b83:	pop    es
  408b84:	ja     0x408bc2
  408b86:	mov    cl,0x8c
  408b88:	sbb    cl,bh
  408b8a:	push   0x72712117
  408b8f:	push   edx
  408b90:	in     al,dx
  408b91:	in     al,dx
  408b92:	lock mov eax,0xf21f69a3
  408b98:	in     eax,0xdb
  408b9a:	lods   al,BYTE PTR ds:[esi]
  408b9b:	and    eax,0x5c3c7846
  408ba0:	stos   DWORD PTR es:[edi],eax
  408ba1:	adc    al,0xcd
  408ba3:	fdiv   DWORD PTR [eax+0x38]
  408ba6:	stc    
  408ba7:	out    0xb6,eax
  408ba9:	bound  esp,QWORD PTR [esi+0x3e]
  408bac:	fcmove st,st(2)
  408bae:	pop    ebp
  408baf:	out    dx,al
  408bb0:	or     dh,BYTE PTR [edi-0x23]
  408bb3:	xlat   BYTE PTR ds:[ebx]
  408bb4:	retf   0x8494
  408bb7:	sub    eax,0xd98419cb
  408bbc:	push   ebx
  408bbd:	jecxz  0x408bb0
  408bbf:	jo     0x408c0b
  408bc1:	xchg   esi,eax
  408bc2:	xchg   edi,eax
  408bc3:	scas   al,BYTE PTR es:[edi]
  408bc4:	xchg   DWORD PTR es:[eax],ecx
  408bc7:	mov    ebx,0x174d149d
  408bcc:	imul   ebx,DWORD PTR [edx+0x548ccf92],0xffffffe6
  408bd3:	fisubr WORD PTR [edi]
  408bd5:	into   
  408bd6:	sbb    BYTE PTR fs:[esi],cl
  408bd9:	int    0x65
  408bdb:	pusha  
  408bdc:	dec    eax
  408bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bde:	ror    BYTE PTR [edx-0x73e3ccb4],0xa0
  408be5:	iret   
  408be6:	and    BYTE PTR [ebx],dl
  408be8:	(bad)  
  408be9:	xor    al,BYTE PTR [eax+0x58c73]
  408bef:	pop    ebx
  408bf0:	adc    eax,0xde0ba7f9
  408bf5:	xchg   DWORD PTR [edx+ecx*8],eax
  408bf8:	(bad)  
  408bf9:	mov    eax,0xc8324c5b
  408bfe:	pop    ebx
  408bff:	hlt    
  408c00:	mov    ds:0x85858da2,eax
  408c05:	mov    WORD PTR [ecx],cs
  408c07:	lock outs dx,DWORD PTR ds:[esi]
  408c09:	arpl   WORD PTR [ebp-0x4d767d42],dx
  408c0f:	fwait
  408c10:	mov    dl,0xb8
  408c12:	jecxz  0x408ba9
  408c14:	out    dx,al
  408c15:	ins    BYTE PTR es:[edi],dx
  408c16:	push   esi
  408c17:	cmp    edx,DWORD PTR [ecx]
  408c19:	inc    ebx
  408c1a:	cmc    
  408c1b:	call   0x2acff4cf
  408c20:	(bad)  
  408c21:	xor    DWORD PTR [esi-0x3b2a9a43],edi
  408c27:	push   edi
  408c28:	gs (bad) 
  408c2a:	lock hlt 
  408c2c:	push   0xbb4bff34
  408c31:	ss push 0x9f525cfa
  408c37:	jns    0x408bdc
  408c39:	adc    al,0xa
  408c3b:	mov    ecx,0x7497fa92
  408c40:	fcmove st,st(4)
  408c42:	cdq    
  408c43:	rol    BYTE PTR [edx+0x62a6bf6f],cl
  408c49:	cmp    eax,0x358d0b39
  408c4e:	pop    eax
  408c4f:	lahf   
  408c50:	jg     0x408cac
  408c52:	mov    edx,0x20dedd7f
  408c57:	call   0xe3fde5be
  408c5c:	or     dl,BYTE PTR [edi-0x76]
  408c5f:	sbb    BYTE PTR [edx+0x5d],0xa4
  408c63:	xchg   ecx,eax
  408c64:	mov    edx,0x5d5df0bc
  408c69:	jle    0x408c14
  408c6b:	adc    eax,0xe58eb95c
  408c70:	je     0x408c22
  408c72:	adc    al,0x93
  408c74:	scas   al,BYTE PTR es:[edi]
  408c75:	add    al,0x1d
  408c77:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408c79:	leave  
  408c7a:	sbb    eax,0x260c1e8b
  408c7f:	mov    esi,DWORD PTR [esi]
  408c81:	int3   
  408c82:	xor    DWORD PTR [ecx-0x5d947e58],esp
  408c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c89:	mov    edx,0x58ba29e4
  408c8e:	popa   
  408c8f:	stc    
  408c90:	sbb    eax,0x2b8a7210
  408c95:	fisttp WORD PTR [eax+0x36]
  408c98:	(bad)  [esi+0x10]
  408c9b:	inc    ecx
  408c9c:	mov    bh,0xc7
  408c9e:	xchg   edi,eax
  408c9f:	add    ecx,ebp
  408ca1:	adc    DWORD PTR [eax+eiz*4+0x7],0x4a997155
  408ca9:	add    dl,BYTE PTR [esi+0x408b3763]
  408caf:	add    DWORD PTR [edi-0x4be73c42],esi
  408cb5:	sub    eax,0xedda6c1d
  408cba:	adc    BYTE PTR [edi-0xb6b4ec1],bh
  408cc0:	push   ds
  408cc1:	push   es
  408cc2:	retf   0xfbef
  408cc5:	xchg   ebx,eax
  408cc6:	frstor ds:0x5ab22f76
  408ccc:	ficomp DWORD PTR [ebx+0x3d]
  408ccf:	sbb    BYTE PTR [esi*8+0x35ee5e2e],bl
  408cd6:	fstp   st(6)
  408cd8:	fstp   TBYTE PTR [eax-0x7f]
  408cdb:	jecxz  0x408d4c
  408cdd:	imul   ebx,ebp,0x4a92bfc7
  408ce3:	cmp    DWORD PTR [ebx+edi*8+0x44],0x5c
  408ce8:	mov    dh,0xb5
  408cea:	outs   dx,BYTE PTR ds:[esi]
  408ceb:	sub    cl,ch
  408ced:	add    dh,BYTE PTR [edi+0x10bd2de5]
  408cf3:	cmp    al,0x66
  408cf5:	jbe    0x408c95
  408cf7:	aad    0x26
  408cf9:	sub    ah,BYTE PTR [edi+0x2e]
  408cfc:	mov    dh,BYTE PTR [eax-0x24755b57]
  408d02:	(bad)  
  408d03:	cmc    
  408d04:	dec    ebx
  408d05:	lahf   
  408d06:	pop    edx
  408d07:	mov    al,ds:0x3335a706
  408d0c:	mov    ebp,0xb3bb5b5f
  408d11:	jp     0x408d34
  408d13:	iret   
  408d14:	push   cs
  408d15:	and    DWORD PTR [esi],0x1d
  408d18:	stos   BYTE PTR es:[edi],al
  408d19:	mov    esp,0x7737bd77
  408d1e:	jmp    0xbeb8:0x1e54545b
  408d25:	xlat   BYTE PTR ds:[ebx]
  408d26:	(bad)
  408d2b:	in     eax,0xd6
  408d2d:	daa    
  408d2e:	push   ds
  408d2f:	ds mov esp,0x6a453f62
  408d35:	mov    cl,0xcd
  408d37:	xchg   ecx,eax
  408d38:	or     ch,BYTE PTR [edi+0x250f2539]
  408d3e:	pop    ecx
  408d3f:	dec    edi
  408d40:	mov    DWORD PTR [ecx+0x1c3e6211],edx
  408d46:	add    DWORD PTR [edx+0x4406ba2b],ecx
  408d4c:	push   ds
  408d4d:	xlat   BYTE PTR ds:[ebx]
  408d4e:	pushf  
  408d4f:	loop   0x408d48
  408d51:	sub    dh,BYTE PTR [ecx+ebx*1+0x1d87cbce]
  408d58:	jae    0x408d73
  408d5a:	icebp  
  408d5b:	clc    
  408d5c:	or     edx,DWORD PTR [eax]
  408d5e:	mov    ebp,DWORD PTR [edx+esi*2-0x571beaca]
  408d65:	push   edx
  408d66:	cmp    dl,ah
  408d68:	push   0xffffffc1
  408d6a:	mov    esi,0xb184f501
  408d6f:	mov    cl,0xdc
  408d71:	jl     0x408d42
  408d73:	mov    cl,0xf4
  408d75:	shr    DWORD PTR [edi-0xd1e5a8e],cl
  408d7b:	jl     0x408d0b
  408d7d:	fldcw  WORD PTR [edi+0x337e13e3]
  408d83:	jmp    0x408d19
  408d85:	retf   
  408d86:	(bad)  
  408d88:	hlt    
  408d89:	mov    eax,ds:0x978a52f0
  408d8e:	xchg   ebp,eax
  408d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d90:	jg     0x408dbd
  408d92:	mov    ?,WORD PTR [ecx-0x6c]
  408d95:	pop    ss
  408d96:	mov    ecx,0x6f5f7758
  408d9b:	sbb    dh,dl
  408d9d:	popa   
  408d9e:	mov    WORD PTR [edi+0x54c929af],ss
  408da4:	cwde   
  408da5:	jb     0x408df6
  408da7:	jl     0x408e01
  408da9:	cmp    ebp,ebp
  408dab:	imul   ecx,DWORD PTR [ecx-0x1cee0960],0x8b72915
  408db5:	dec    esp
  408db6:	and    DWORD PTR [edi+0x77],0xffffffc7
  408dba:	or     BYTE PTR [ecx],bh
  408dbc:	mov    ss,WORD PTR [edx-0x4a25f88]
  408dc2:	cmp    DWORD PTR [ebp-0x56],0xffffffe3
  408dc6:	call   FWORD PTR [esi]
  408dc8:	cmp    eax,0x4687da8d
  408dcd:	mov    ebx,0xd1959b69
  408dd2:	lods   al,BYTE PTR ds:[esi]
  408dd3:	stos   DWORD PTR es:[edi],eax
  408dd4:	add    al,0xb9
  408dd6:	repnz in al,dx
  408dd8:	test   al,0xa7
  408dda:	mov    ds:0xb95d7c51,al
  408ddf:	(bad)  
  408de0:	sbb    esp,DWORD PTR [ebx-0x1f9f1ef9]
  408de6:	shl    DWORD PTR [esi-0x1b6d9c7a],cl
  408dec:	jg     0x408dc5
  408dee:	mov    esp,0xe2723c9d
  408df3:	pushf  
  408df4:	adc    bl,bh
  408df6:	pop    eax
  408df7:	mov    BYTE PTR [ecx],al
  408df9:	mov    eax,ds:0x4de1e46d
  408dfe:	cwde   
  408dff:	popf   
  408e00:	or     ch,BYTE PTR [esp+ebx*2+0x23]
  408e04:	fld    DWORD PTR [eax-0x3e]
  408e07:	dec    esp
  408e08:	and    eax,0xca6bd631
  408e0d:	addr16 popa 
  408e0f:	hlt    
  408e10:	and    cl,dl
  408e12:	jp     0x408e73
  408e14:	push   0xffffff84
  408e16:	into   
  408e17:	cmp    eax,DWORD PTR [esi-0x79]
  408e1a:	add    edx,esi
  408e1c:	push   cs
  408e1d:	(bad)
  408e21:	out    0x45,al
  408e23:	add    DWORD PTR [ebx-0x70],esi
  408e26:	daa    
  408e27:	pop    ss
  408e28:	sbb    al,0x7f
  408e2a:	and    BYTE PTR [eax+edi*2+0x37],dh
  408e2e:	js     0x408db7
  408e30:	lods   eax,DWORD PTR ds:[esi]
  408e31:	mov    eax,ds:0x90699a31
  408e36:	inc    edi
  408e37:	add    BYTE PTR [ecx],al
  408e39:	lods   eax,DWORD PTR ds:[esi]
  408e3a:	sub    al,0xfc
  408e3c:	push   ss
  408e3d:	cmp    al,0x70
  408e3f:	rcr    BYTE PTR [ebp+0x270f1afe],cl
  408e45:	xchg   cl,dh
  408e47:	jb     0x408e0a
  408e49:	pop    es
  408e4a:	jecxz  0x408eab
  408e4c:	int3   
  408e4d:	xor    al,0xe7
  408e4f:	add    eax,DWORD PTR [eax+0x474c1660]
  408e55:	in     eax,0x1f
  408e57:	(bad)  
  408e58:	mov    ebx,0xa54dd6e6
  408e5d:	pop    edi
  408e5e:	pmaddwd mm6,QWORD PTR [ebp-0xb]
  408e62:	sub    al,0x7e
  408e64:	in     eax,dx
  408e65:	pop    ebx
  408e66:	out    0xbd,eax
  408e68:	push   ebp
  408e69:	(bad)  
  408e6a:	xlat   BYTE PTR ds:[ebx]
  408e6b:	aas    
  408e6c:	icebp  
  408e6d:	shl    edx,1
  408e6f:	mov    ecx,0x9a8a3de8
  408e74:	sbb    al,0xf7
  408e76:	jmp    0x7b40:0xe100c97d
  408e7d:	nop
  408e7e:	cld    
  408e7f:	sbb    DWORD PTR [ebp-0x1bc3bc11],ecx
  408e85:	sbb    DWORD PTR [ebp-0x5a279af3],esp
  408e8b:	cmp    DWORD PTR [eax],eax
  408e8d:	shl    BYTE PTR [esi],cl
  408e8f:	retf   
  408e90:	inc    ebx
  408e91:	out    0x2d,eax
  408e93:	popa   
  408e94:	sbb    al,0xad
  408e96:	(bad)  
  408e97:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408e99:	sbb    eax,0x6d7dbb52
  408e9e:	pop    esi
  408e9f:	lds    edi,FWORD PTR [ebp-0x5572f473]
  408ea5:	out    dx,al
  408ea6:	jmp    FWORD PTR [ecx+0x3b]
  408ea9:	outs   dx,DWORD PTR ds:[esi]
  408eaa:	pop    ds
  408eab:	sbb    esp,DWORD PTR [edi]
  408ead:	repnz into 
  408eaf:	jae    0x408e39
  408eb1:	jnp    0x408e7c
  408eb3:	and    eax,DWORD PTR [ebx]
  408eb5:	and    BYTE PTR [ebp+0x6f31837f],bh
  408ebb:	(bad)  
  408ebc:	(bad)  
  408ebd:	jecxz  0x408ebd
  408ebf:	ja     0x408f0e
  408ec1:	and    BYTE PTR [ebx-0x62],dl
  408ec4:	pop    ss
  408ec5:	in     eax,dx
  408ec6:	rcl    DWORD PTR [edi],0xc
  408ec9:	sahf   
  408eca:	fs out 0x35,al
  408ecd:	xlat   BYTE PTR ds:[ebx]
  408ece:	adc    al,0x19
  408ed0:	cmp    al,0x64
  408ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ed3:	and    al,0xd
  408ed5:	loop   0x408f01
  408ed7:	inc    edi
  408ed8:	add    eax,DWORD PTR [ebx+ecx*1+0x3d95fffa]
  408edf:	(bad)  
  408ee0:	xchg   ebp,eax
  408ee1:	push   esi
  408ee2:	or     al,ah
  408ee4:	push   ebx
  408ee5:	sbb    ch,bl
  408ee7:	(bad)  
  408ee8:	in     al,dx
  408ee9:	inc    ecx
  408eea:	jne    0x408efb
  408eec:	jmp    FWORD PTR [edx+0x6c8e69e3]
  408ef2:	add    al,0x9a
  408ef4:	jnp    0x408f46
  408ef6:	mov    dl,0x65
  408ef8:	sbb    DWORD PTR [edx+0x47],0xef7966df
  408eff:	test   al,0xc2
  408f01:	int3   
  408f02:	mov    ds:0x53b23403,al
  408f07:	push   edi
  408f08:	inc    ebp
  408f09:	sbb    ah,BYTE PTR [ebp+0x25]
  408f0c:	dec    ebx
  408f0d:	pusha  
  408f0e:	scas   al,BYTE PTR es:[edi]
  408f0f:	out    dx,al
  408f10:	inc    ebp
  408f11:	xchg   esi,eax
  408f12:	cmp    al,0x58
  408f14:	and    al,0xa4
  408f16:	or     al,0x46
  408f18:	xchg   DWORD PTR [ebp-0x2a],edi
  408f1b:	scas   eax,DWORD PTR es:[edi]
  408f1c:	xchg   DWORD PTR [edi],ecx
  408f1e:	stos   DWORD PTR es:[edi],eax
  408f1f:	xchg   ebx,eax
  408f20:	or     BYTE PTR ds:0x95666100,0x5f
  408f27:	stc    
  408f28:	mov    WORD PTR [ebx],ds
  408f2a:	aad    0xb6
  408f2c:	dec    edi
  408f2d:	cmp    eax,esp
  408f2f:	sub    BYTE PTR [eax],bh
  408f31:	pop    esp
  408f32:	pop    ds
  408f33:	cmp    edx,DWORD PTR [ebx]
  408f35:	shl    BYTE PTR [esi-0x5e],cl
  408f38:	out    0x56,eax
  408f3a:	in     al,dx
  408f3b:	scas   eax,DWORD PTR es:[edi]
  408f3c:	mov    BYTE PTR [edx],bl
  408f3e:	sub    BYTE PTR ds:0xdc19b866,ah
  408f44:	leave  
  408f45:	push   ebx
  408f46:	and    eax,0xffffffd3
  408f49:	xchg   BYTE PTR [ebp-0x31],bh
  408f4c:	ins    BYTE PTR es:[edi],dx
  408f4d:	aam    0x4f
  408f4f:	dec    ebx
  408f50:	cmc    
  408f51:	xchg   ebx,eax
  408f52:	and    esp,ecx
  408f54:	in     al,dx
  408f55:	xlat   BYTE PTR ds:[ebx]
  408f56:	inc    edx
  408f57:	call   0xabe4:0xa3115bd
  408f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f5f:	cld    
  408f60:	aam    0xf2
  408f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f63:	jne    0x408f54
  408f65:	dec    ecx
  408f66:	sbb    edx,edx
  408f68:	jp     0x408f22
  408f6a:	clc    
  408f6b:	or     al,0x2b
  408f6d:	sbb    al,0xed
  408f6f:	dec    esp
  408f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f71:	add    BYTE PTR [eax],0x4f
  408f74:	mov    DWORD PTR [edx-0x4e125a2b],ebp
  408f7a:	ss or  al,0xdb
  408f7d:	push   0x46873a42
  408f82:	mov    eax,ds:0x903d430f
  408f87:	sbb    eax,0xe00a67cb
  408f8c:	lds    ebx,FWORD PTR [edi-0x8d364ef]
  408f92:	(bad)  
  408f93:	mov    dh,0xfb
  408f95:	sub    eax,0x4883d256
  408f9a:	adc    esp,DWORD PTR [eax-0x35fd3774]
  408fa0:	mov    ebp,0x82bce655
  408fa5:	add    ah,0xc2
  408fa8:	enter  0x6ace,0xc5
  408fac:	mov    gs,WORD PTR [ebx]
  408fae:	es push eax
  408fb0:	ficomp DWORD PTR [edx+0x62]
  408fb3:	push   es
  408fb4:	jo     0x408fbf
  408fb6:	push   es
  408fb7:	jae    0x408f44
  408fb9:	jecxz  0x408fc8
  408fbb:	xchg   DWORD PTR [eax+0x58],ebx
  408fbe:	add    al,0x2c
  408fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc1:	dec    ebx
  408fc2:	sbb    eax,ebx
  408fc4:	pop    eax
  408fc5:	(bad)  
  408fc7:	adc    ebp,edi
  408fc9:	scas   al,BYTE PTR es:[edi]
  408fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fcb:	movzx  esi,BYTE PTR [ebp-0x3e]
  408fcf:	mov    eax,ds:0xba29313d
  408fd4:	push   ss
  408fd5:	or     DWORD PTR [edx-0x2adf0ad5],edx
  408fdb:	cwde   
  408fdc:	inc    ebp
  408fdd:	push   ebx
  408fde:	mov    dh,0x13
  408fe0:	popa   
  408fe1:	jb     0x40901c
  408fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fe4:	cld    
  408fe5:	dec    esi
  408fe6:	or     DWORD PTR [esi+0x436ab7b4],ebp
  408fec:	sbb    BYTE PTR [edx+0x75821e4c],ah
  408ff2:	iret   
  408ff3:	adc    ebp,DWORD PTR [esp+edx*1+0x55]
  408ff7:	jecxz  0x408f81
  408ff9:	and    eax,DWORD PTR [ebp-0x35]
  408ffc:	pop    ebx
  408ffd:	scas   al,BYTE PTR es:[edi]
  408ffe:	cmp    BYTE PTR [ebx],al
  409000:	inc    esi
  409001:	lahf   
  409002:	mov    bh,0x1e
  409004:	packssdw mm7,mm2
  409007:	sti    
  409008:	outs   dx,DWORD PTR ds:[esi]
  409009:	lods   eax,DWORD PTR ds:[esi]
  40900a:	and    BYTE PTR [esi+0x50e02441],0xdf
  409011:	mov    DWORD PTR [ecx+eax*4-0x237ebaa5],edi
  409018:	jae    0x408ffe
  40901a:	sub    eax,0xb6f4f4a7
  40901f:	js     0x40909e
  409021:	int3   
  409022:	clc    
  409023:	pop    edx
  409024:	sbb    al,0x68
  409026:	push   edx
  409027:	stc    
  409028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409029:	test   DWORD PTR [edx],ebp
  40902b:	jp     0x409099
  40902d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40902e:	icebp  
  40902f:	add    eax,esi
  409031:	dec    ebx
  409032:	leave  
  409033:	push   DWORD PTR [edx-0x34]
  409036:	xchg   ecx,eax
  409037:	adc    bl,al
  409039:	into   
  40903a:	dec    esp
  40903b:	jno    0x409068
  40903d:	repz sar BYTE PTR [ebp+0x6c07ea5b],cl
  409044:	js     0x4090c3
  409046:	leave  
  409047:	dec    ecx
  409048:	xchg   esp,eax
  409049:	mov    dl,0x96
  40904b:	push   eax
  40904c:	sbb    DWORD PTR [esi-0x6488d97f],0x42
  409053:	dec    ebp
  409054:	scas   eax,DWORD PTR es:[edi]
  409055:	pushf  
  409056:	and    DWORD PTR [edi+ebx*1-0x65a66054],eax
  40905d:	les    ebx,FWORD PTR [eax]
  40905f:	cwde   
  409060:	cmp    edi,DWORD PTR [esi+edi*4-0x433bee92]
  409067:	mov    ecx,0x8b3385f6
  40906c:	mov    dl,0xd9
  40906e:	pop    esp
  40906f:	ret    0x1624
  409072:	(bad)  
  409073:	shl    ah,cl
  409075:	(bad)  
  409076:	lods   eax,DWORD PTR ds:[esi]
  409077:	mov    ah,0xef
  409079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40907a:	mov    ebx,esp
  40907c:	fldcw  WORD PTR [eax]
  40907e:	int3   
  40907f:	push   cs
  409080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409081:	mov    edx,0xe747a48e
  409086:	lods   al,BYTE PTR ds:[esi]
  409087:	cmp    al,0x2d
  409089:	je     0x40902d
  40908b:	loope  0x4090d3
  40908d:	icebp  
  40908e:	test   al,0x8
  409090:	jmp    0x4090f4
  409092:	xor    al,0xb4
  409094:	out    dx,al
  409095:	push   ss
  409096:	push   ds
  409097:	jae    0x4090e4
  409099:	enter  0x740d,0xb1
  40909d:	arpl   WORD PTR cs:[edi],cx
  4090a0:	or     BYTE PTR [ebp+0xc],bh
  4090a3:	sar    DWORD PTR [ebx],cl
  4090a5:	mov    bl,0x87
  4090a7:	ins    BYTE PTR es:[edi],dx
  4090a8:	push   ds
  4090a9:	push   eax
  4090aa:	mov    bh,0xaf
  4090ac:	push   ss
  4090ad:	pop    esi
  4090ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090af:	cwde   
  4090b0:	and    DWORD PTR [ebp-0x24],esi
  4090b3:	scas   eax,DWORD PTR es:[edi]
  4090b4:	pop    esi
  4090b5:	cmp    al,0x2b
  4090b7:	bound  ebp,QWORD PTR [ebp-0x1e05a206]
  4090bd:	test   al,0x1
  4090bf:	mov    esp,0x8d655867
  4090c4:	call   0x76fb8137
  4090c9:	add    ah,BYTE PTR [ecx+0x85caef1]
  4090cf:	ds jo  0x409072
  4090d2:	daa    
  4090d3:	imul   BYTE PTR [ecx+edi*2+0x66]
  4090d7:	scas   al,BYTE PTR es:[edi]
  4090d8:	cmp    al,0x3a
  4090da:	mov    eax,0x64e286fb
  4090df:	push   ebp
  4090e0:	stos   DWORD PTR es:[edi],eax
  4090e1:	cvtdq2ps xmm6,xmm3
  4090e4:	sbb    dl,ah
  4090e6:	sub    DWORD PTR [ecx-0xd8a38ed],ebx
  4090ec:	or     DWORD PTR [esi],eax
  4090ee:	sbb    eax,esp
  4090f0:	f2xm1  
  4090f2:	add    eax,0x24c90c3
  4090f7:	xchg   ecx,eax
  4090f8:	das    
  4090f9:	xor    eax,0x5ab23aff
  4090fe:	pop    eax
  4090ff:	jle    0x409160
  409101:	xchg   esi,eax
  409102:	push   eax
  409103:	sbb    BYTE PTR [ecx-0x2d],ah
  409106:	pop    esi
  409107:	sbb    al,0x68
  409109:	sbb    dh,BYTE PTR [ebx+0x73816d77]
  40910f:	test   DWORD PTR [esi+0x77],0xc4a6943f
  409116:	jns    0x409137
  409118:	bound  eax,QWORD PTR [ebx-0x49]
  40911b:	dec    ebx
  40911c:	dec    ecx
  40911d:	jp     0x40911c
  40911f:	xor    DWORD PTR [ebx],eax
  409121:	inc    ecx
  409122:	xor    BYTE PTR [edi+edx*1+0x57b58ef5],bh
  409129:	fwait
  40912a:	mov    esi,0x6b54ae6
  40912f:	inc    eax
  409130:	mov    BYTE PTR [esi-0x48f01ec8],ch
  409136:	cwde   
  409137:	add    DWORD PTR [edx],esi
  409139:	pop    es
  40913a:	adc    eax,0x4321af46
  40913f:	mov    esi,gs
  409141:	outs   dx,DWORD PTR ds:[esi]
  409142:	aam    0x96
  409144:	rcr    BYTE PTR [ebx+eax*4],cl
  409147:	bound  ebp,QWORD PTR [ebx-0x3b9c3431]
  40914d:	dec    eax
  40914e:	pop    esp
  40914f:	jle    0x4091c9
  409151:	xor    al,0x73
  409153:	push   ss
  409154:	push   eax
  409155:	add    ebp,esp
  409157:	out    0x2,al
  409159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40915a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40915b:	mov    esi,0x4e8b9f55
  409160:	jns    0x409147
  409162:	ret    0xf0c
  409165:	jge    0x409127
  409167:	sti    
  409168:	das    
  409169:	xlat   BYTE PTR ds:[ebx]
  40916a:	into   
  40916b:	dec    eax
  40916c:	add    edi,DWORD PTR [ebx+0x16]
  40916f:	or     ah,bh
  409171:	jnp    0x4091e9
  409173:	xor    BYTE PTR [ecx+edx*1-0x24af59b9],ah
  40917a:	sbb    al,0xc0
  40917c:	ss aas 
  40917e:	jo     0x409198
  409180:	pop    ss
  409181:	pop    eax
  409182:	outs   dx,BYTE PTR ds:[esi]
  409183:	ret    0x855e
  409186:	outs   dx,BYTE PTR fs:[esi]
  409188:	xor    eax,0x78e5ad9e
  40918d:	sbb    ch,BYTE PTR [ecx+0x31]
  409190:	call   0x894:0x4b97067e
  409197:	push   edx
  409198:	aad    0x2b
  40919a:	and    al,0xb0
  40919c:	mov    WORD PTR [esi],ds
  40919e:	xchg   DWORD PTR [esi-0x7c89c44c],ebx
  4091a4:	sub    DWORD PTR [edx],0x1a
  4091a7:	mov    eax,ds:0xfbbcaa51
  4091ac:	or     BYTE PTR [edx-0x61],bh
  4091af:	or     al,BYTE PTR [ebx-0xf]
  4091b2:	mov    al,ds:0xbc9bf299
  4091b7:	ds movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091ba:	ins    BYTE PTR es:[edi],dx
  4091bb:	adc    al,0x9f
  4091bd:	call   0xe930:0xa00f85c
  4091c4:	mov    cl,0x90
  4091c6:	mov    eax,ds:0xf4ca2a14
  4091cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091cc:	jno    0x409213
  4091ce:	sub    ah,al
  4091d0:	xor    DWORD PTR [edx-0x2db441c],eax
  4091d6:	mov    eax,ds:0x8f28a0c0
  4091db:	push   ss
  4091dc:	and    edx,ecx
  4091de:	add    ah,dl
  4091e0:	in     al,0xc7
  4091e2:	loope  0x409243
  4091e4:	and    BYTE PTR [ebp-0x7e],al
  4091e7:	or     ebx,DWORD PTR [esi-0x143bfeab]
  4091ed:	sub    eax,0x754bd48f
  4091f2:	ficom  WORD PTR [eax-0x10]
  4091f5:	push   ebx
  4091f6:	mov    dl,0x8c
  4091f8:	int    0xfa
  4091fa:	mov    cl,0xba
  4091fc:	popa   
  4091fd:	pop    esp
  4091fe:	and    eax,0xce082ef5
  409203:	and    dh,0x40
  409206:	divps  xmm7,XMMWORD PTR [ebx-0x191b17a6]
  40920d:	cwde   
  40920e:	pop    ebx
  40920f:	repz mov ebp,0x4e84d0b6
  409215:	push   0x1
  409217:	cmc    
  409218:	aaa    
  409219:	fidiv  WORD PTR [ecx]
  40921b:	mov    ecx,0x58327e76
  409220:	enter  0x6e37,0x76
  409224:	in     al,dx
  409225:	lods   al,BYTE PTR ds:[esi]
  409226:	mov    edi,0x9793b10b
  40922b:	out    dx,eax
  40922c:	push   edx
  40922d:	enter  0x6509,0x35
  409231:	test   eax,0xe51cd396
  409236:	sub    DWORD PTR [ebx],edx
  409238:	ja     0x409261
  40923a:	cdq    
  40923b:	(bad)  
  40923c:	mov    edi,0xae84b9a2
  409241:	mov    esp,0x15ba1bfc
  409246:	cmp    al,0xba
  409248:	cmp    al,0xa
  40924a:	add    BYTE PTR [ebx+0x1c],ah
  40924d:	jne    0x4091f5
  40924f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409250:	js     0x409286
  409252:	out    dx,al
  409253:	rcl    DWORD PTR [edx],0x7d
  409256:	inc    eax
  409257:	xor    BYTE PTR [ebp+0xa],bl
  40925a:	jg     0x409267
  40925c:	js     0x409219
  40925e:	pop    ebp
  40925f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409260:	rcr    DWORD PTR [eax-0x220993fb],cl
  409266:	and    eax,0xd0f5084a
  40926b:	mov    ch,0xc7
  40926d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40926e:	out    0xc6,eax
  409270:	(bad)  
  409271:	ins    DWORD PTR es:[edi],dx
  409272:	xchg   ecx,eax
  409273:	jmp    0x4092ae
  409275:	jno    0x4092da
  409277:	mov    ebp,0x7783c17
  40927c:	push   esp
  40927d:	or     al,0x24
  40927f:	pushf  
  409280:	push   ecx
  409281:	push   ss
  409282:	stc    
  409283:	push   ds
  409284:	xchg   esi,eax
  409285:	nop
  409286:	cmp    DWORD PTR [ebx],edx
  409288:	mov    ah,0x89
  40928a:	div    DWORD PTR fs:[edi+0x68]
  40928e:	xor    dh,0x1b
  409291:	mov    bl,0x91
  409293:	adc    BYTE PTR [edx],ah
  409295:	jbe    0x4092fa
  409297:	daa    
  409298:	jnp    0x409227
  40929a:	lds    ebp,FWORD PTR [esi+0x4cc01c78]
  4092a0:	add    eax,0xfee79724
  4092a5:	sub    eax,0x3775307
  4092aa:	mov    bh,0x4e
  4092ac:	inc    esp
  4092ad:	pop    esi
  4092ae:	inc    esp
  4092af:	push   eax
  4092b0:	(bad)  
  4092b1:	xchg   edx,eax
  4092b2:	inc    ecx
  4092b3:	gs stos BYTE PTR es:[edi],al
  4092b5:	shl    DWORD PTR [edx+0x63],0x1
  4092b9:	jnp    0x4092a8
  4092bb:	and    BYTE PTR [ecx-0x6d0f16e7],dh
  4092c1:	push   cs
  4092c2:	clc    
  4092c3:	out    dx,eax
  4092c4:	add    al,0x16
  4092c6:	fistp  WORD PTR [edi]
  4092c8:	jle    0x29d7e15a
  4092ce:	pop    es
  4092cf:	jns    0x40934d
  4092d1:	jecxz  0x40929d
  4092d3:	inc    ecx
  4092d4:	mov    WORD PTR [ebx],ds
  4092d6:	fcom   DWORD PTR [esi]
  4092d8:	test   eax,0xf42507ce
  4092dd:	jle    0x4092b7
  4092df:	pop    ebx
  4092e0:	cmp    al,0xbe
  4092e2:	jmp    0x4092ad
  4092e4:	mov    eax,0xc655e991
  4092e9:	jns    0x4092e5
  4092eb:	mov    bl,0x60
  4092ed:	(bad)  
  4092ee:	and    al,0xd9
  4092f0:	cmp    al,0x8d
  4092f2:	test   eax,0xb73bc70b
  4092f7:	cs push ebp
  4092f9:	ins    DWORD PTR es:[edi],dx
  4092fa:	pop    ebp
  4092fb:	scas   al,BYTE PTR es:[edi]
  4092fc:	stos   DWORD PTR es:[edi],eax
  4092fd:	popf   
  4092fe:	cmp    esp,DWORD PTR [esi+0x30c8cc0c]
  409304:	cmp    BYTE PTR [edi-0x65],al
  409307:	repz mov ah,0x65
  40930a:	mov    ebx,0x8b8ec46f
  40930f:	inc    esi
  409310:	ja     0x4092d8
  409312:	or     eax,0x1a298a7f
  409317:	sub    esp,DWORD PTR [eax-0x1f30f361]
  40931d:	clc    
  40931e:	push   esp
  40931f:	aaa    
  409320:	inc    ebp
  409321:	shl    BYTE PTR [esi-0x2186684a],cl
  409327:	push   0x74eadb5b
  40932c:	add    edi,edx
  40932e:	adc    DWORD PTR [esi+0x7a],edi
  409331:	comiss xmm0,DWORD PTR [edi-0x45]
  409335:	or     eax,0xd3a1d24d
  40933a:	inc    ebx
  40933b:	inc    esi
  40933c:	sub    eax,0xdca132d8
  409341:	loop   0x4092ee
  409343:	test   ah,ch
  409345:	or     ecx,DWORD PTR [eax+0x25dd5011]
  40934b:	cmp    ebp,eax
  40934d:	pusha  
  40934e:	repz lahf 
  409350:	sub    bl,BYTE PTR [edi+eax*8-0x28d9b28e]
  409357:	lock xor dl,dl
  40935a:	and    al,0x7f
  40935c:	pop    esp
  40935d:	pop    ds
  40935e:	(bad)  
  40935f:	mov    ebx,0x85b60f92
  409364:	inc    esp
  409365:	inc    edx
  409366:	pop    ss
  409367:	call   0x4b4833e1
  40936c:	hlt    
  40936d:	push   ebp
  40936e:	fcom   DWORD PTR [ebx-0x227f60a]
  409374:	or     bl,dl
  409376:	or     al,0xd8
  409378:	ret    
  409379:	xor    eax,0x4baf326d
  40937e:	xchg   edi,eax
  40937f:	(bad)  
  409380:	dec    edi
  409381:	xchg   esp,eax
  409382:	inc    esp
  409383:	shl    al,1
  409385:	inc    eax
  409386:	jns    0x409325
  409388:	cli    
  409389:	jae    0x4093ab
  40938b:	cwde   
  40938c:	jle    0x409408
  40938e:	push   ebx
  40938f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409390:	or     BYTE PTR ds:0x5ce05dc,dh
  409396:	mov    bl,0xd8
  409398:	mov    al,cs:0x3e8c545c
  40939e:	int    0x30
  4093a0:	aas    
  4093a1:	retf   
  4093a2:	pushf  
  4093a3:	call   0xb8a38fdc
  4093a8:	and    ebp,ebx
  4093aa:	in     eax,0xf6
  4093ac:	mov    ecx,0xe6089409
  4093b1:	xchg   ebp,eax
  4093b2:	mov    al,ds:0x3d95600
  4093b7:	push   cs
  4093b8:	sti    
  4093b9:	mov    eax,ds:0x61724a6a
  4093be:	xor    eax,edx
  4093c0:	in     al,dx
  4093c1:	xchg   edi,eax
  4093c2:	xor    esi,DWORD PTR [edx]
  4093c4:	ficom  WORD PTR [edi]
  4093c6:	outs   dx,DWORD PTR ds:[esi]
  4093c7:	retf   0x188a
  4093ca:	mov    ds:0x7604c587,al
  4093cf:	loop   0x409361
  4093d1:	aam    0xdb
  4093d3:	sub    ecx,eax
  4093d5:	adc    cl,BYTE PTR [ebx+0x26afe717]
  4093db:	push   esi
  4093dc:	fimul  DWORD PTR [ebx-0x766d9a32]
  4093e2:	cmp    edi,DWORD PTR ds:0x6ea0e9fc
  4093e8:	in     al,dx
  4093e9:	push   ebp
  4093ea:	imul   esp,edi,0x84042377
  4093f0:	rcr    ecx,0x21
  4093f3:	fidiv  WORD PTR ds:0xd71dc0a1
  4093f9:	mov    WORD PTR [edi+0x32],es
  4093fc:	inc    esp
  4093fd:	xchg   DWORD PTR [ebp+0x23],edx
  409400:	sub    al,0xdf
  409402:	sbb    ebp,esi
  409404:	jo     0x4093ac
  409406:	jmp    0x40938c
  409408:	iret   
  409409:	push   edi
  40940a:	fdiv   QWORD PTR [ecx+0x65c95ad9]
  409410:	(bad)  
  409411:	mov    eax,ss:0xf30fedfa
  409417:	retf   
  409418:	adc    DWORD PTR [edi],edi
  40941a:	jl     0x409441
  40941c:	out    dx,eax
  40941d:	out    0x72,al
  40941f:	xchg   esi,eax
  409420:	lods   al,BYTE PTR ds:[esi]
  409421:	stc    
  409422:	pusha  
  409423:	stos   DWORD PTR es:[edi],eax
  409424:	pop    ecx
  409425:	mov    ch,0xf6
  409427:	push   ebx
  409428:	gs sub eax,0xe84ec232
  40942e:	dec    ebp
  40942f:	xchg   edi,eax
  409430:	inc    esi
  409431:	dec    esp
  409432:	popf   
  409433:	xor    dh,BYTE PTR [eax-0x2032b395]
  409439:	push   edi
  40943a:	(bad)  
  40943b:	dec    esp
  40943c:	push   0x54
  40943e:	jo     0x4093e9
  409440:	sub    eax,0x4e6f37a8
  409445:	sahf   
  409446:	xchg   edx,eax
  409447:	loopne 0x409448
  409449:	mov    edi,0x6a02198c
  40944e:	mov    ch,BYTE PTR [edx]
  409450:	jmp    0xdd72aac2
  409455:	jecxz  0x4093e0
  409457:	or     eax,0x76416515
  40945c:	ret    
  40945d:	mov    bh,0x7e
  40945f:	cs cmp al,0x8a
  409462:	mov    cl,0xd6
  409464:	push   es
  409465:	scas   eax,DWORD PTR es:[edi]
  409466:	daa    
  409467:	pop    esp
  409468:	rol    BYTE PTR [ecx-0x18c886b5],cl
  40946e:	inc    edx
  40946f:	push   cs
  409470:	imul   ecx,DWORD PTR [ebp+0x6fbbb751],0x47cf2de7
  40947a:	mov    al,ds:0xd3c4a998
  40947f:	leave  
  409480:	mov    ecx,0xc6cb759a
  409485:	mov    dh,0xed
  409487:	mov    ebp,0xcda0a6e3
  40948c:	and    al,0x81
  40948e:	push   ebx
  40948f:	add    dl,BYTE PTR [ecx+edi*4]
  409492:	pop    ds
  409493:	pop    edx
  409494:	ret    0xda82
  409497:	jnp    0x40941d
  409499:	cmp    edi,ecx
  40949b:	fbstp  TBYTE PTR [ebp+0x360536b6]
  4094a1:	ds (bad) 
  4094a3:	fwait
  4094a4:	or     al,0xdc
  4094a6:	add    ecx,ebp
  4094a8:	out    dx,eax
  4094a9:	call   0xd580:0xd4372497
  4094b0:	retfw  0x3113
  4094b4:	gs clc 
  4094b6:	xchg   ebp,eax
  4094b7:	and    BYTE PTR [ebp-0x207259e7],dh
  4094bd:	lods   eax,DWORD PTR ds:[esi]
  4094be:	sbb    al,0x2e
  4094c0:	(bad)  
  4094c1:	std    
  4094c2:	fisubr DWORD PTR [ebx+0x28c1b31c]
  4094c8:	mov    ebx,0xfd5fbd79
  4094cd:	pop    ecx
  4094ce:	div    esp
  4094d0:	out    0x12,al
  4094d2:	inc    DWORD PTR [ebx-0x2c]
  4094d5:	inc    ecx
  4094d6:	cwde   
  4094d7:	mov    dh,0xad
  4094d9:	dec    eax
  4094da:	imul   edx
  4094dc:	ffree  st(2)
  4094de:	xor    DWORD PTR gs:[edi+ebx*8-0x730e2596],0x9ae6aed8
  4094ea:	ret    
  4094eb:	js     0x4094f5
  4094ed:	daa    
  4094ee:	mov    ?,WORD PTR [edx+0x14]
  4094f1:	lea    ebp,gs:[ecx+0xb]
  4094f5:	ds and eax,0xf06159b9
  4094fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094fc:	mov    ebp,ebx
  4094fe:	xor    ecx,esi
  409500:	fdiv   QWORD PTR [ecx]
  409502:	xchg   edi,eax
  409503:	xchg   edi,eax
  409504:	jo     0x40948d
  409506:	cdq    
  409507:	push   ebx
  409508:	sub    BYTE PTR [edi+esi*4-0x42ad73c2],dl
  40950f:	xor    BYTE PTR es:[ecx],dh
  409512:	aad    0xea
  409514:	rcl    BYTE PTR [ebp-0x6150b596],cl
  40951a:	mov    al,ds:0xd12fa631
  40951f:	imul   edi,ebp,0x4b020570
  409525:	push   esp
  409526:	push   cs
  409527:	rcr    bl,cl
  409529:	add    eax,0x77ab852c
  40952e:	shr    DWORD PTR [esi],cl
  409530:	mov    WORD PTR [edx],fs
  409532:	mov    BYTE PTR [eax-0x6dadcae8],bl
  409538:	lods   al,BYTE PTR ds:[esi]
  409539:	mov    ecx,0x50214314
  40953e:	dec    ecx
  40953f:	into   
  409540:	mov    cs,WORD PTR [ecx+0x766168c0]
  409546:	mov    dl,0x2a
  409548:	lods   eax,DWORD PTR ds:[esi]
  409549:	push   esp
  40954a:	mov    eax,0x6d45ed8
  40954f:	call   0x7c55720d
  409554:	aad    0x55
  409556:	adc    al,0x23
  409558:	mov    bl,ch
  40955a:	dec    esp
  40955b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40955c:	rcr    DWORD PTR [esi-0x14],cl
  40955f:	pop    esi
  409560:	nop
  409561:	xor    DWORD PTR [edx-0x61d16a4d],edi
  409567:	jne    0x40950a
  409569:	jbe    0x4095b2
  40956b:	add    ch,BYTE PTR [edi-0x4b87f7da]
  409571:	jle    0x40958b
  409573:	imul   ecx,DWORD PTR [ecx],0x983d9b10
  409579:	call   0x24a96540
  40957e:	or     DWORD PTR [esi-0x5fb08532],ecx
  409584:	gs cdq 
  409586:	and    al,0x80
  409588:	test   BYTE PTR [ebx+0x28],0x31
  40958c:	or     eax,0x6de6d846
  409591:	jnp    0x4095e9
  409593:	lods   al,BYTE PTR ds:[esi]
  409594:	fstp   TBYTE PTR [esi]
  409596:	imul   esi,DWORD PTR [ecx+0x3a4e3ae5],0xffffff81
  40959d:	pop    ss
  40959e:	cs jne 0x40960e
  4095a1:	repnz cli 
  4095a3:	mov    al,ds:0x2f4a3fbd
  4095a8:	sub    al,0x3a
  4095aa:	retf   
  4095ab:	inc    eax
  4095ac:	adc    DWORD PTR [eax],ebx
  4095ae:	pop    es
  4095af:	(bad)  
  4095b0:	push   cs
  4095b1:	xchg   esp,eax
  4095b2:	push   edi
  4095b3:	fisub  DWORD PTR [edi+0x274997ec]
  4095b9:	jecxz  0x40957d
  4095bb:	outs   dx,BYTE PTR ds:[esi]
  4095bc:	sahf   
  4095bd:	(bad)  
  4095be:	pop    ecx
  4095bf:	repnz lods eax,DWORD PTR ds:[esi]
  4095c1:	xlat   BYTE PTR ds:[ebx]
  4095c2:	mov    al,0x35
  4095c4:	mov    ebp,0x654be6a8
  4095c9:	push   esp
  4095ca:	and    al,BYTE PTR [ecx]
  4095cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095cd:	sti    
  4095ce:	jo     0x40958e
  4095d0:	jg     0x409559
  4095d2:	xchg   esp,eax
  4095d3:	cwde   
  4095d4:	mov    al,0x68
  4095d7:	ja     0x4095f4
  4095d9:	ror    edi,cl
  4095db:	push   eax
  4095dc:	ret    
  4095dd:	cld    
  4095de:	mov    edi,0xb7294f9e
  4095e3:	ret    
  4095e4:	sbb    ah,cl
  4095e6:	out    0x2f,al
  4095e8:	and    cl,BYTE PTR [edi]
  4095ea:	jb     0x409640
  4095ec:	shr    eax,0x97
  4095ef:	jmp    0x4095a3
  4095f1:	cmp    BYTE PTR [esi],0x7a
  4095f4:	outs   dx,DWORD PTR ds:[esi]
  4095f5:	and    eax,0xec7602ed
  4095fa:	push   0xb6618d35
  4095ff:	xchg   edx,eax
  409600:	scas   al,BYTE PTR es:[edi]
  409601:	call   0x89d3721e
  409606:	mov    WORD PTR [ecx],ds
  409608:	int    0x19
  40960a:	sub    bl,cl
  40960c:	test   al,0xeb
  40960e:	int    0x3a
  409610:	dec    ebp
  409611:	adc    eax,0x5854d47e
  409616:	cmp    cl,BYTE PTR [ebx+ecx*2]
  409619:	test   al,0x56
  40961b:	fstp   QWORD PTR ds:0x4ed675fa
  409621:	dec    ecx
  409622:	shr    DWORD PTR [edi+eiz*2+0xe],1
  409626:	cmc    
  409627:	mul    BYTE PTR [ecx+esi*8-0x6e]
  40962b:	(bad)  
  40962c:	imul   esp,DWORD PTR ds:0xfaf0eaae,0x22
  409633:	repnz sbb al,0xdb
  409636:	addr16 hlt 
  409638:	daa    
  409639:	dec    esp
  40963a:	push   ebp
  40963b:	sbb    ch,bl
  40963d:	jo     0x409610
  40963f:	jecxz  0x409600
  409641:	repz in al,0x80
  409644:	mov    ecx,DWORD PTR [esi]
  409646:	aas    
  409647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409648:	cmp    al,BYTE PTR [esi]
  40964a:	test   BYTE PTR [ecx-0x4],ch
  40964d:	jl     0x40967a
  40964f:	sub    ch,BYTE PTR ds:0x60ef85f9
  409655:	inc    edi
  409656:	rcr    BYTE PTR [ebx+eiz*8+0x17],1
  40965a:	pop    ecx
  40965b:	cmp    DWORD PTR [ebx+0x6a631cf5],esp
  409661:	nop
  409662:	push   eax
  409663:	adc    al,0x2e
  409665:	mov    bl,0x77
  409667:	mov    ch,0x16
  409669:	lea    esi,[ecx+0x28]
  40966c:	pushf  
  40966d:	fist   DWORD PTR [edx+eiz*8-0x64]
  409671:	dec    esp
  409672:	out    dx,al
  409673:	jg     0x4096e3
  409675:	stc    
  409676:	adc    BYTE PTR [edi],0x93
  409679:	dec    esp
  40967a:	jb     0x40963d
  40967c:	popa   
  40967d:	push   ecx
  40967e:	adc    al,0xb1
  409680:	mov    ebp,0x6240e2db
  409685:	outs   dx,DWORD PTR ds:[esi]
  409686:	(bad)  
  409687:	in     al,0x58
  409689:	dec    esi
  40968a:	push   0xffffffc3
  40968c:	xor    BYTE PTR [ecx+0x17],ch
  40968f:	ds mov ebp,0xaa2e0de6
  409695:	test   eax,0x4e2b8d90
  40969a:	inc    ebp
  40969b:	test   esi,ebx
  40969d:	jecxz  0x409645
  40969f:	mov    esp,0x9097c759
  4096a4:	sahf   
  4096a5:	ret    
  4096a6:	test   DWORD PTR [edx+0x5f],edi
  4096a9:	adc    BYTE PTR [edx-0x5cadbf3e],bl
  4096af:	lea    edx,[eax+0x21]
  4096b2:	ins    BYTE PTR es:[edi],dx
  4096b3:	xchg   esi,eax
  4096b4:	pusha  
  4096b5:	dec    edx
  4096b6:	ret    
  4096b7:	adc    al,0xd9
  4096b9:	push   ebp
  4096ba:	adc    eax,0x34ab60a5
  4096bf:	mov    edx,0x51460160
  4096c4:	and    BYTE PTR [ebp+ecx*2-0x3b],0x4c
  4096c9:	mov    ch,0x66
  4096cb:	sbb    ch,bh
  4096cd:	pop    ds
  4096ce:	mov    ch,0x65
  4096d0:	push   ecx
  4096d1:	cdq    
  4096d2:	ret    
  4096d3:	clc    
  4096d4:	dec    esi
  4096d5:	pusha  
  4096d6:	ret    
  4096d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096d8:	test   al,0x21
  4096da:	and    DWORD PTR [ebp+0x49],esi
  4096dd:	mov    esp,0x2dbc30df
  4096e2:	int3   
  4096e3:	xchg   esp,eax
  4096e4:	inc    esp
  4096e5:	jmp    0x25d9:0x21aaac0f
  4096ec:	add    al,BYTE PTR [edi]
  4096ee:	cmp    esi,DWORD PTR [edx]
  4096f0:	xor    eax,0x92918599
  4096f5:	aas    
  4096f6:	lock shl DWORD PTR [ecx-0x77c47f42],1
  4096fd:	cmp    DWORD PTR [ebx+ebx*4],0xe
  409701:	lock cwde 
  409703:	shl    DWORD PTR [esp+edx*2+0x6af80755],cl
  40970a:	push   eax
  40970b:	repnz (bad) [esi]
  40970e:	add    eax,DWORD PTR [ecx+0x60400edc]
  409714:	nop
  409715:	jno    0x4096d0
  409717:	push   0x33
  409719:	mov    DWORD PTR [eax-0x1752a4bf],edx
  40971f:	xchg   edi,eax
  409721:	lock nop
  409723:	inc    ebx
  409724:	cs mov esi,0xb5bb7a03
  40972a:	imul   esi,DWORD PTR [edx-0x6a],0xfcc9b1e7
  409731:	xchg   esi,eax
  409732:	rcl    cl,0x95
  409735:	int3   
  409736:	jbe    0x40975f
  409738:	shl    DWORD PTR [edx-0x1cdf2583],0xbc
  40973f:	cdq    
  409740:	sub    al,0x5e
  409742:	inc    edi
  409743:	test   DWORD PTR [eax-0x2414b217],0x2397276b
  40974d:	pop    esp
  40974e:	dec    esp
  40974f:	mov    dl,0x7a
  409751:	mov    eax,0x826c24ba
  409756:	fcmovbe st,st(2)
  409758:	fimul  WORD PTR [esi]
  40975a:	addr16 jle 0x40977b
  40975d:	iret   
  40975e:	push   0x68
  409760:	sub    dl,bh
  409762:	adc    eax,0xe6d8732a
  409767:	loope  0x4097be
  409769:	sahf   
  40976a:	psubsw mm6,QWORD PTR [edi-0x238d7f59]
  409771:	enter  0x7ff9,0x4a
  409775:	int    0x9d
  409777:	pop    es
  409778:	je     0x409772
  40977a:	sbb    eax,DWORD PTR [esi+0x1cecca7a]
  409780:	imul   esi,DWORD PTR [edx+0x65],0x824ab63b
  409787:	repz rcr BYTE PTR ds:[eax],1
  40978b:	sub    eax,0xb6b51b8a
  409790:	mov    gs,WORD PTR [edi+esi*2]
  409793:	or     eax,0x51cd3280
  409798:	retf   0xa228
  40979b:	push   es
  40979c:	lods   al,BYTE PTR ds:[esi]
  40979d:	ins    DWORD PTR es:[edi],dx
  40979e:	adc    cl,BYTE PTR [ecx-0x59df0f41]
  4097a4:	inc    esi
  4097a5:	fisubr WORD PTR [edx]
  4097a7:	mov    edi,DWORD PTR [edi-0x5f9b2752]
  4097ad:	mov    al,0x19
  4097af:	jns    0x40975b
  4097b1:	pop    edi
  4097b2:	lea    edi,[ebx-0xf]
  4097b5:	nop
  4097b6:	fidiv  DWORD PTR [edi+0x7637577e]
  4097bc:	add    BYTE PTR [ebx],0x3f
  4097bf:	xor    esi,DWORD PTR [edi+0x4c44821]
  4097c5:	repz test eax,0x12944342
  4097cb:	cmp    BYTE PTR [edi+ebp*8],ah
  4097ce:	push   esi
  4097cf:	call   0xad57:0x10dd895b
  4097d6:	fcomp  QWORD PTR [ecx-0x37a5f7e2]
  4097dc:	cmp    ebx,DWORD PTR [edi+0x4]
  4097df:	and    al,0xec
  4097e1:	int    0x59
  4097e3:	dec    eax
  4097e4:	out    dx,eax
  4097e5:	mov    WORD PTR [edi],cs
  4097e7:	and    DWORD PTR [ebp+ebx*2+0x4e],edi
  4097eb:	call   0x2ceab3c0
  4097f0:	loope  0x409824
  4097f2:	inc    esi
  4097f3:	add    esi,DWORD PTR [edx+0xd]
  4097f6:	or     cl,BYTE PTR [esi+ebp*2-0x7]
  4097fa:	retf   0x3420
  4097fd:	xchg   ebp,eax
  4097fe:	ja     0x409807
  409800:	and    BYTE PTR [esi-0x42],bh
  409803:	adc    al,BYTE PTR [esi+ecx*8]
  409806:	lock cli 
  409808:	je     0x4097bd
  40980a:	repz xor BYTE PTR [ebx+0x5081c760],cl
  409811:	sahf   
  409812:	les    ebx,FWORD PTR [ecx+0x46]
  409815:	cmp    BYTE PTR [esi],ah
  409817:	sbb    BYTE PTR [ecx],ah
  409819:	stc    
  40981a:	test   eax,0x2919fbb6
  40981f:	xchg   edx,eax
  409820:	adc    BYTE PTR [edi+0xb4493fe],ah
  409826:	scas   eax,DWORD PTR es:[edi]
  409827:	mov    eax,0x507ca0ac
  40982c:	mov    ebx,0x141c4134
  409831:	mov    bh,BYTE PTR [esi]
  409833:	loope  0x40984f
  409835:	pop    edi
  409836:	loop   0x409838
  409838:	fild   DWORD PTR [esi+0x70]
  40983b:	mov    ch,0xcc
  40983d:	int    0xef
  40983f:	cmc    
  409840:	jbe    0x40987a
  409842:	mov    edx,0x5dc5f387
  409847:	out    dx,al
  409848:	(bad)  
  409849:	sbb    edx,DWORD PTR [esi]
  40984b:	dec    ebp
  40984d:	dec    ecx
  40984e:	lea    ecx,ds:[esi+0x30a7ebee]
  409855:	xchg   ecx,eax
  409856:	inc    ebp
  409857:	(bad)  
  409858:	jns    0x409814
  40985a:	repnz test eax,0xd2e50d3a
  409860:	inc    ecx
  409861:	pop    edi
  409862:	dec    ebx
  409863:	psraw  mm3,QWORD PTR [ebp-0x32]
  409867:	or     BYTE PTR es:[ebp+0x34063c61],0xb
  40986f:	dec    esp
  409870:	xchg   edx,eax
  409871:	test   al,0xf1
  409873:	fadd   st,st(2)
  409875:	sar    BYTE PTR [ebx+0x7e7e577c],cl
  40987b:	dec    eax
  40987c:	mov    ebx,0xe780c35a
  409881:	push   edx
  409882:	mov    al,0xce
  409884:	dec    ebp
  409885:	lods   eax,DWORD PTR ds:[esi]
  409886:	sbb    DWORD PTR [esi],esp
  409888:	jmp    0xb7ef:0x500e3c29
  40988f:	pop    gs
  409891:	adc    al,0xa2
  409893:	or     al,0x69
  409895:	push   cs
  409896:	add    BYTE PTR [eiz*8+0x679c62cd],bl
  40989d:	or     ebx,DWORD PTR [esi+0x4b]
  4098a0:	out    0x68,eax
  4098a2:	stc    
  4098a3:	shl    ebp,cl
  4098a5:	add    eax,0xb75a29ae
  4098aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098ab:	test   DWORD PTR [ebp-0xd],esi
  4098ae:	ins    DWORD PTR es:[edi],dx
  4098af:	cmp    BYTE PTR [edi],ah
  4098b1:	sahf   
  4098b2:	xor    esi,esi
  4098b4:	gs and ch,bl
  4098b7:	and    eax,ebx
  4098b9:	hlt    
  4098ba:	ret    0xb319
  4098bd:	xchg   edx,eax
  4098be:	cmp    ch,ch
  4098c0:	clc    
  4098c1:	dec    esp
  4098c2:	(bad)  
  4098c3:	jmp    0xdabb:0x1a0faf59
  4098ca:	retf   0x4402
  4098cd:	ds dec edi
  4098cf:	iret   
  4098d0:	retf   
  4098d1:	data16 loop 0x4098dc
  4098d4:	rcl    bh,cl
  4098d6:	dec    ebp
  4098d7:	stos   BYTE PTR es:[edi],al
  4098d8:	fsub   QWORD PTR [ebx+0x7a]
  4098db:	adc    BYTE PTR [ebx+0x37],0xf8
  4098df:	idiv   BYTE PTR [ecx]
  4098e1:	sub    eax,0xda761aed
  4098e6:	(bad)  
  4098e7:	and    eax,0x2916c01c
  4098ec:	jl     0x409922
  4098ee:	shr    BYTE PTR [edx-0x230afd74],cl
  4098f4:	test   al,0x57
  4098f6:	(bad)  
  4098f7:	int3   
  4098f8:	jg     0x40993f
  4098fa:	hlt    
  4098fb:	aaa    
  4098fc:	fiadd  WORD PTR [ecx-0x6761d361]
  409902:	xor    BYTE PTR [ebx-0x6322c8be],dh
  409908:	repnz pop esi
  40990a:	mov    DWORD PTR [ebx-0x1d],ecx
  40990d:	dec    ebp
  40990e:	push   esi
  40990f:	cmp    al,0x94
  409911:	gs imul edi,ecx,0x94b4b27d
  409918:	je     0x40994d
  40991a:	push   ds
  40991b:	xor    eax,0x26226352
  409920:	pop    ecx
  409921:	enter  0x17c1,0xcb
  409925:	mov    esp,0xa4364d40
  40992a:	jecxz  0x409955
  40992c:	inc    esi
  40992d:	ret    0x2c1d
  409930:	repnz test al,0x41
  409933:	xchg   ecx,eax
  409934:	xor    DWORD PTR [ecx-0x26],0x11
  409938:	xlat   BYTE PTR ds:[ebx]
  409939:	sub    DWORD PTR [ebp-0x242ea2b8],esp
  40993f:	or     al,0xb2
  409941:	pushf  
  409942:	call   0xe5d8:0x6838d2c2
  409949:	daa    
  40994a:	jbe    0x4098f9
  40994c:	imul   eax,DWORD PTR ds:[bx+si+0x3],0xffffffb8
  409952:	ins    DWORD PTR es:[edi],dx
  409953:	and    eax,0x9118da28
  409958:	clc    
  409959:	cmc    
  40995a:	mov    WORD PTR [edi+0x388f07cd],ss
  409960:	jecxz  0x4099d8
  409962:	cld    
  409963:	xchg   DWORD PTR [esi+0x5a],esi
  409966:	mov    edx,DWORD PTR [edi-0x32a8f0ae]
  40996c:	ror    BYTE PTR [ecx+0x5e],cl
  40996f:	inc    edi
  409970:	je     0x4098f2
  409972:	cs xchg esp,eax
  409974:	sbb    BYTE PTR [edx],dl
  409976:	popf   
  409977:	jl     0x40994c
  409979:	test   al,0x7c
  40997b:	sub    BYTE PTR [ecx+0x7d],ah
  40997e:	test   al,0x3
  409980:	mov    ebp,eax
  409982:	pop    edx
  409983:	loopne 0x409971
  409985:	adc    BYTE PTR [esi+eax*1-0x3e],cl
  409989:	loopne 0x409954
  40998b:	xor    DWORD PTR gs:[ebx],edx
  40998e:	nop
  40998f:	mov    eax,0x3dd96eb0
  409994:	sar    ebp,0x4c
  409997:	jmp    0x3010e9c4
  40999c:	push   ss
  40999d:	test   al,0x5d
  40999f:	outs   dx,BYTE PTR ds:[esi]
  4099a0:	xchg   ecx,eax
  4099a1:	xor    BYTE PTR [esi-0x6000538],dh
  4099a7:	jnp    0x4099b9
  4099a9:	dec    esp
  4099aa:	jp     0x409976
  4099ac:	call   0x47f6d897
  4099b1:	pop    ss
  4099b2:	icebp  
  4099b3:	fdivrp st(3),st
  4099b5:	ret    0x32b1
  4099b8:	cmp    ecx,ebx
  4099ba:	sub    BYTE PTR [eax-0x2277ab34],al
  4099c0:	enter  0x8dfc,0x4b
  4099c4:	lods   al,BYTE PTR ds:[esi]
  4099c5:	cs add al,0xf8
  4099c8:	inc    edi
  4099c9:	pop    ebp
  4099ca:	and    DWORD PTR [ebx-0x6e],eax
  4099cd:	mov    dh,0xc6
  4099cf:	inc    esi
  4099d0:	sbb    BYTE PTR [edx-0x46905357],0x76
  4099d7:	(bad)  
  4099d8:	lea    ecx,[ebx-0x60]
  4099db:	push   ebx
  4099dc:	es xor al,0xca
  4099df:	jbe    0x4099e7
  4099e1:	mov    ss,WORD PTR [eax+0x13]
  4099e4:	imul   esi,DWORD PTR [ecx-0xb],0xfffffffa
  4099e8:	or     cl,0xd0
  4099eb:	or     al,0x6f
  4099ed:	push   ebx
  4099ee:	outs   dx,BYTE PTR ds:[esi]
  4099ef:	pop    ebp
  4099f0:	and    al,0xbd
  4099f2:	retf   
  4099f3:	int3   
  4099f4:	fs jnp 0x4099c9
  4099f7:	mov    BYTE PTR [esi+ecx*1],0xce
  4099fb:	ds popa 
  4099fd:	cmp    esi,edx
  4099ff:	jns    0x4099c4
  409a01:	jmp    0xaed0:0xb9f27c2c
  409a08:	test   DWORD PTR [ecx+0x7e],ecx
  409a0b:	cli    
  409a0c:	sbb    esi,DWORD PTR [ecx]
  409a0e:	mov    dl,0x85
  409a10:	ret    
  409a11:	(bad)  
  409a12:	jle    0x409a51
  409a14:	xchg   ecx,eax
  409a15:	sbb    bh,0x2
  409a18:	rcl    BYTE PTR ds:0x93d50636,0x10
  409a1f:	xor    edx,edx
  409a21:	jb     0x409a53
  409a23:	mov    cl,0x8f
  409a25:	push   ebx
  409a26:	shl    DWORD PTR [ebp+0x6d],0x9e
  409a2a:	pop    esi
  409a2b:	cmp    al,0xb
  409a2d:	fiadd  DWORD PTR [ecx+0x302e26f]
  409a33:	enter  0x2581,0xc
  409a37:	mov    al,0x42
  409a39:	add    BYTE PTR [eax],al
  409a3b:	add    BYTE PTR [eax],al
  409a3d:	add    BYTE PTR [ebx+0x42b00c35],cl
  409a43:	add    BYTE PTR [esi-0x77],al
  409a46:	xor    eax,0x42b00c
  409a4b:	cmp    DWORD PTR ds:0x42b00c,0x29
  409a52:	jne    0x409a63
  409a58:	push   0x42e1b7
  409a5d:	call   DWORD PTR ds:0x42ed57
  409a63:	cmp    DWORD PTR ds:0x42b00c,0x1e
  409a6a:	jb     0x409a3e
  409a70:	sbb    esi,DWORD PTR ds:0x42a00c
  409a76:	mov    DWORD PTR [ebp-0x8],ecx
  409a79:	mov    ecx,DWORD PTR [ebp-0x14]
  409a7c:	xor    esi,0x35c3
  409a82:	xor    ecx,ebx
  409a84:	inc    DWORD PTR ds:0x42a000
  409a8a:	add    ecx,eax
  409a8c:	mov    DWORD PTR ds:0x429014,0x1c
  409a96:	cmp    DWORD PTR ds:0x429014,0x0
  409a9d:	je     0x409ad1
  409aa3:	cmp    DWORD PTR ds:0x429014,0x28
  409aaa:	jne    0x409ab9
  409ab0:	push   DWORD PTR [ebp-0x14]
  409ab3:	call   DWORD PTR ds:0x42ed5b
  409ab9:	mov    esi,DWORD PTR ds:0x429014
  409abf:	dec    esi
  409ac0:	mov    DWORD PTR ds:0x429014,esi
  409ac6:	jmp    0x409a96
  409acb:	xor    esi,DWORD PTR ds:0x42a01c
  409ad1:	mov    DWORD PTR [ebp-0x2c],ecx
  409ad4:	or     esi,0x1d45
  409ada:	mov    ecx,DWORD PTR [ebp-0x4]
  409add:	xor    ecx,ebx
  409adf:	add    ecx,eax
  409ae1:	mov    DWORD PTR [ebp-0x38],ecx
  409ae4:	dec    DWORD PTR ds:0x42901c
  409aea:	mov    esi,DWORD PTR [ebp-0x4]
  409aed:	xor    esi,ebx
  409aef:	add    esi,eax
  409af1:	sbb    ecx,0x1004
  409af7:	mov    ecx,DWORD PTR [ebp-0x2c]
  409afa:	sub    ecx,eax
  409afc:	lea    edx,[esi-0x3272e0]
  409b02:	xor    ecx,ebx
  409b04:	xor    DWORD PTR ds:0x42d01c,0x7c44
  409b0e:	xor    edx,ebx
  409b10:	cmp    edx,ecx
  409b12:	je     0x409e56
  409b18:	and    DWORD PTR ds:0x429004,0x0
  409b22:	jmp    0x409b34
  409b27:	mov    ecx,DWORD PTR ds:0x429004
  409b2d:	inc    ecx
  409b2e:	mov    DWORD PTR ds:0x429004,ecx
  409b34:	cmp    DWORD PTR ds:0x429004,0x18
  409b3b:	jae    0x409b89
  409b41:	cmp    DWORD PTR ds:0x429004,0xb
  409b48:	jne    0x409b5e
  409b4e:	push   0x42b000
  409b53:	push   0x88b5
  409b58:	call   DWORD PTR ds:0x42ed5f
  409b5e:	cmp    DWORD PTR ds:0x429004,0xa
  409b65:	jne    0x409b78
  409b6b:	mov    ecx,DWORD PTR ds:0x429004
  409b71:	inc    ecx
  409b72:	mov    DWORD PTR ds:0x429004,ecx
  409b78:	jmp    0x409b27
  409b7d:	mov    ecx,DWORD PTR ds:0x429000
  409b83:	or     DWORD PTR ds:0x42c00c,ecx
  409b89:	mov    ecx,DWORD PTR [ebp-0x4]
  409b8c:	xor    ecx,ebx
  409b8e:	sbb    DWORD PTR ds:0x42c010,0x429014
  409b98:	add    ecx,eax
  409b9a:	mov    DWORD PTR ds:0x42d014,0x6091
  409ba4:	cmp    esi,ecx
  409ba6:	mov    DWORD PTR ds:0x429004,0x556c
  409bb0:	jne    0x409e33
  409bb6:	push   DWORD PTR [ebp+0x8]
  409bb9:	adc    DWORD PTR ds:0x42a004,0x6cab
  409bc3:	call   0x404ffa
  409bc8:	mov    DWORD PTR ds:0x429020,0x17
  409bd2:	cmp    DWORD PTR ds:0x429020,0x0
  409bd9:	je     0x409c3a
  409bdf:	cmp    DWORD PTR ds:0x429020,0xa
  409be6:	jne    0x409c0a
  409bec:	push   0x42e126
  409bf1:	push   0x21eb
  409bf6:	push   DWORD PTR [ebp-0x24]
  409bf9:	push   DWORD PTR [ebp-0x28]
  409bfc:	push   0x2bd0
  409c01:	push   DWORD PTR [ebp-0x20]
  409c04:	call   DWORD PTR ds:0x42ed67
  409c0a:	cmp    DWORD PTR ds:0x429020,0xb
  409c11:	jne    0x409c24
  409c17:	mov    ecx,DWORD PTR ds:0x429020
  409c1d:	dec    ecx
  409c1e:	mov    DWORD PTR ds:0x429020,ecx
  409c24:	xor    ecx,ecx
  409c26:	xor    ecx,DWORD PTR ds:0x429020
  409c2c:	dec    ecx
  409c2d:	mov    DWORD PTR ds:0x429020,ecx
  409c33:	jmp    0x409bd2
  409c38:	xor    ecx,edi
  409c3a:	mov    DWORD PTR [ebp-0x20],eax
  409c3d:	mov    eax,DWORD PTR [ebp-0x4]
  409c40:	mov    ecx,DWORD PTR [ebp-0x20]
  409c43:	mov    DWORD PTR ds:0x42c004,0x1b
  409c4d:	cmp    DWORD PTR ds:0x42c004,0x0
  409c54:	je     0x409c81
  409c5a:	cmp    DWORD PTR ds:0x42c004,0x22
  409c61:	jne    0x409c6d
  409c67:	call   DWORD PTR ds:0x42ed6b
  409c6d:	xor    edi,edi
  409c6f:	add    edi,DWORD PTR ds:0x42c004
  409c75:	dec    edi
  409c76:	mov    DWORD PTR ds:0x42c004,edi
  409c7c:	jmp    0x409c4d
  409c81:	xor    eax,ebx
  409c83:	sbb    edi,0x4123
  409c89:	mov    edi,0x3272e0
  409c8e:	xor    DWORD PTR ds:0x42d00c,0x429018
  409c98:	add    eax,edi
  409c9a:	mov    DWORD PTR ds:0x42c00c,0x6160
  409ca4:	cmp    ecx,eax
  409ca6:	je     0x409ec6
  409cac:	add    DWORD PTR ds:0x42c014,0x5bfc
  409cb6:	push   DWORD PTR [ebp-0x20]
  409cb9:	push   DWORD PTR [ebp+0x8]
  409cbc:	or     DWORD PTR ds:0x42d014,0x42b000
  409cc6:	call   0x4113c7
  409ccb:	mov    DWORD PTR ds:0x42d014,0x10
  409cd5:	cmp    DWORD PTR ds:0x42d014,0x0
  409cdc:	je     0x409dd4
  409ce2:	cmp    DWORD PTR ds:0x42d014,0x19
  409ce9:	jne    0x409cff
  409cef:	push   0x429004
  409cf4:	push   0x42e185
  409cf9:	call   DWORD PTR ds:0x42ed6f
  409cff:	mov    ecx,DWORD PTR ds:0x42d014
  409d05:	dec    ecx
  409d06:	mov    DWORD PTR ds:0x42d014,ecx
  409d0c:	jmp    0x409cd5
  409d11:	and    DWORD PTR ds:0x42c018,0x0
  409d1b:	jmp    0x409d2d
  409d20:	mov    ecx,DWORD PTR ds:0x42c018
  409d26:	inc    ecx
  409d27:	mov    DWORD PTR ds:0x42c018,ecx
  409d2d:	cmp    DWORD PTR ds:0x42c018,0x19
  409d34:	jae    0x409dd4
  409d3a:	cmp    DWORD PTR ds:0x42c018,0x5
  409d41:	jne    0x409d52
  409d47:	push   0x42e118
  409d4c:	call   DWORD PTR ds:0x42ed73
  409d52:	cmp    DWORD PTR ds:0x42c018,0x4
  409d59:	jne    0x409d6c
  409d5f:	mov    ecx,DWORD PTR ds:0x42c018
  409d65:	inc    ecx
  409d66:	mov    DWORD PTR ds:0x42c018,ecx
  409d6c:	jmp    0x409d20
  409d71:	mov    DWORD PTR ds:0x429024,0x1c
  409d7b:	cmp    DWORD PTR ds:0x429024,0x0
  409d82:	je     0x409dd4
  409d88:	cmp    DWORD PTR ds:0x429024,0x2
  409d8f:	jne    0x409da0
  409d95:	push   0x18d9
  409d9a:	call   DWORD PTR ds:0x42ed77
  409da0:	cmp    DWORD PTR ds:0x429024,0x3
  409da7:	jne    0x409dba
  409dad:	mov    ecx,DWORD PTR ds:0x429024
  409db3:	dec    ecx
  409db4:	mov    DWORD PTR ds:0x429024,ecx
  409dba:	xor    ecx,ecx
  409dbc:	or     ecx,DWORD PTR ds:0x429024
  409dc2:	dec    ecx
  409dc3:	mov    DWORD PTR ds:0x429024,ecx
  409dc9:	jmp    0x409d7b
  409dce:	and    DWORD PTR ds:0x42c01c,edi
  409dd4:	mov    DWORD PTR [ebp-0x20],eax
  409dd7:	and    DWORD PTR ds:0x42a00c,ecx
  409ddd:	mov    eax,DWORD PTR [ebp-0x4]
  409de0:	mov    ecx,DWORD PTR [ebp-0x20]
  409de3:	dec    DWORD PTR ds:0x42a010
  409de9:	xor    eax,ebx
  409deb:	add    eax,edi
  409ded:	mov    DWORD PTR ds:0x42b00c,0x6616
  409df7:	cmp    ecx,eax
  409df9:	je     0x409ec6
  409dff:	mov    eax,DWORD PTR [ebp-0x20]
  409e02:	mov    eax,DWORD PTR [eax+0x18]
  409e05:	mov    DWORD PTR [ebp-0x2c],eax
  409e08:	mov    eax,DWORD PTR [ebp-0x20]
  409e0b:	mov    ecx,DWORD PTR [ebp+0x8]
  409e0e:	add    ecx,DWORD PTR [eax+0x20]
  409e11:	mov    DWORD PTR [ebp-0x34],ecx
  409e14:	mov    eax,DWORD PTR [ebp-0x20]
  409e17:	mov    ecx,DWORD PTR [ebp+0x8]
  409e1a:	add    ecx,DWORD PTR [eax+0x24]
  409e1d:	mov    DWORD PTR [ebp-0x3c],ecx
  409e20:	mov    eax,DWORD PTR [ebp-0x20]
  409e23:	mov    ecx,DWORD PTR [ebp+0x8]
  409e26:	add    ecx,DWORD PTR [eax+0x1c]
  409e29:	mov    eax,edi
  409e2b:	mov    DWORD PTR [ebp-0x20],ecx
  409e2e:	jmp    0x409e8e
  409e33:	mov    ecx,DWORD PTR [ebp-0x34]
  409e36:	mov    edx,DWORD PTR [ebp+0x8]
  409e39:	add    edx,DWORD PTR [ecx+esi*4]
  409e3c:	mov    DWORD PTR [ebp-0x30],edx
  409e3f:	mov    ecx,DWORD PTR [ebp-0x4]
  409e42:	mov    edx,DWORD PTR [ebp-0x30]
  409e45:	xor    ecx,ebx
  409e47:	add    ecx,eax
  409e49:	cmp    edx,ecx
  409e4b:	je     0x409e8e
  409e51:	jmp    0x409e7a
  409e56:	mov    ecx,DWORD PTR [ebp-0x4]
  409e59:	mov    edx,DWORD PTR [ebp-0x8]
  409e5c:	xor    ecx,ebx
  409e5e:	add    ecx,eax
  409e60:	cmp    edx,ecx
  409e62:	je     0x409ed2
  409e68:	mov    ecx,DWORD PTR [ebp-0x4]
  409e6b:	mov    edx,DWORD PTR [ebp-0x38]
  409e6e:	xor    ecx,ebx
  409e70:	add    ecx,eax
  409e72:	cmp    edx,ecx
  409e74:	je     0x409ee1
  409e7a:	lea    eax,[ebp-0x8]
  409e7d:	push   eax
  409e7e:	push   DWORD PTR [ebp-0x30]
  409e81:	push   DWORD PTR [ebp+0xc]
  409e84:	call   0x411671
  409e89:	mov    eax,0x3272e0
  409e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  409e91:	mov    edx,DWORD PTR [ebp-0x8]
  409e94:	xor    ecx,ebx
  409e96:	add    ecx,eax
  409e98:	cmp    edx,ecx
  409e9a:	je     0x409eb5
  409ea0:	mov    ecx,DWORD PTR [ebp-0x3c]
  409ea3:	movzx  ecx,WORD PTR [ecx+esi*2]
  409ea7:	mov    edx,DWORD PTR [ebp-0x20]
  409eaa:	mov    ecx,DWORD PTR [edx+ecx*4]
  409ead:	mov    DWORD PTR [ebp-0x40],ecx
  409eb0:	jmp    0x409e56
  409eb5:	mov    ecx,DWORD PTR [ebp-0x14]
  409eb8:	xor    ecx,ebx
  409eba:	lea    esi,[esi+ecx*1+0x3272e0]
  409ec1:	jmp    0x409af1
  409ec6:	mov    eax,DWORD PTR [ebp-0x4]
  409ec9:	xor    eax,ebx
  409ecb:	add    eax,edi
  409ecd:	jmp    0x40a045
  409ed2:	mov    eax,DWORD PTR [ebp-0x4]
  409ed5:	xor    eax,ebx
  409ed7:	add    eax,0x3272e0
  409edc:	jmp    0x40a045
  409ee1:	mov    ecx,DWORD PTR [ebp-0x40]
  409ee4:	add    ecx,DWORD PTR [ebp+0x8]
  409ee7:	mov    DWORD PTR [ebp-0x10],ecx
  409eea:	mov    ecx,DWORD PTR [ebp-0x24]
  409eed:	test   ecx,ecx
  409eef:	je     0x409fd0
  409ef5:	mov    DWORD PTR [ebp-0x28],0x0
  409efc:	push   0x3
  409efe:	xor    edx,edx
  409f00:	pop    edx
  409f01:	add    edx,0x8
  409f04:	push   edx
  409f05:	pop    ecx
  409f06:	push   0x6
  409f08:	dec    ecx
  409f09:	pop    ebx
  409f0a:	dec    ebx
  409f0b:	xchg   ebx,ecx
  409f0d:	sub    ebx,ecx
  409f0f:	xchg   ebx,ecx
  409f11:	dec    ecx
  409f12:	mov    eax,DWORD PTR [ebp-0x24]
  409f15:	imul   eax,ecx
  409f18:	sub    esp,eax
  409f1a:	mov    DWORD PTR [ebp-0x28],esp
  409f1d:	mov    eax,DWORD PTR [ebp-0x4]
  409f20:	mov    ecx,0x7510899
  409f25:	xor    eax,ecx
  409f27:	mov    edx,0x3272e0
  409f2c:	add    eax,edx
  409f2e:	mov    DWORD PTR [ebp+0x8],eax
  409f31:	mov    eax,DWORD PTR [ebp-0x14]
  409f34:	xor    eax,ecx
  409f36:	add    eax,edx
  409f38:	mov    edx,DWORD PTR [ebp+0x14]
  409f3b:	imul   eax,DWORD PTR [edx]
  409f3e:	mov    edx,DWORD PTR [ebp-0x4]
  409f41:	xor    edx,ecx
  409f43:	mov    ecx,DWORD PTR [ebp+0x8]
  409f46:	lea    ecx,[edx+ecx*1+0x3272e0]
  409f4d:	cmp    ecx,eax
  409f4f:	je     0x409fc6
  409f55:	mov    edi,DWORD PTR [ebp-0x14]
  409f58:	mov    eax,DWORD PTR [ebp+0x8]
  409f5b:	mov    edx,DWORD PTR [ebp+0x14]
  409f5e:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409f62:	mov    ecx,0x7510899
  409f67:	xor    edx,edx
  409f69:	xor    edi,ecx
  409f6b:	mov    esi,0x3272e0
  409f70:	add    edi,esi
  409f72:	div    edi
  409f74:	mov    edx,DWORD PTR [ebp-0x4]
  409f77:	xor    edx,ecx
  409f79:	lea    eax,[edx+eax*1+0x3272e0]
  409f80:	mov    edx,DWORD PTR [ebp+0x8]
  409f83:	mov    edi,DWORD PTR [ebp-0x28]
  409f86:	mov    DWORD PTR [edi+edx*4],eax
  409f89:	mov    eax,DWORD PTR [ebp-0x14]
  409f8c:	mov    edx,DWORD PTR [ebp+0x8]
  409f8f:	xor    eax,ecx
  409f91:	lea    eax,[eax+edx*1+0x3272e0]
  409f98:	mov    DWORD PTR [ebp+0x8],eax
  409f9b:	mov    eax,DWORD PTR [ebp-0x14]
  409f9e:	mov    edx,DWORD PTR [ebp+0x14]
  409fa1:	xor    eax,ecx
  409fa3:	add    eax,esi
  409fa5:	imul   eax,DWORD PTR [edx]
  409fa8:	mov    edx,DWORD PTR [ebp-0x4]
  409fab:	xor    edx,ecx
  409fad:	mov    ecx,DWORD PTR [ebp+0x8]
  409fb0:	lea    ecx,[edx+ecx*1+0x3272e0]
  409fb7:	cmp    ecx,eax
  409fb9:	jne    0x409f55
  409fbf:	mov    eax,esi
  409fc1:	jmp    0x409fcb
  409fc6:	mov    eax,0x3272e0
  409fcb:	mov    ebx,0x7510899
  409fd0:	mov    ecx,DWORD PTR [ebp-0x4]
  409fd3:	xor    ecx,ebx
  409fd5:	add    ecx,eax
  409fd7:	mov    DWORD PTR [ebp-0xc],ecx
  409fda:	mov    ebx,0x65655
  409fdf:	add    ebx,0x3234
  409fe5:	xchg   ebx,esi
  409fe7:	xor    ebx,ebx
  409fe9:	push   esi
  409fea:	mov    esi,ebx
  409fec:	pop    ebx
  409fed:	mov    edx,esi
  409fef:	add    ebx,0x1002
  409ff5:	lea    eax,[ebp-0x10]
  409ff8:	add    edx,eax
  409ffa:	add    edx,0x5
  409ffd:	push   edx
  409ffe:	inc    esi
  409fff:	pop    ecx
  40a000:	dec    ecx
  40a001:	xchg   ecx,eax
  40a002:	dec    eax
  40a003:	xchg   ecx,eax
  40a004:	dec    ecx
  40a005:	xchg   ecx,edx
  40a007:	dec    edx
  40a008:	push   edx
  40a009:	mov    edx,ebx
  40a00b:	pop    ebx
  40a00c:	dec    ebx
  40a00d:	call   DWORD PTR [ebx]
  40a00f:	cmp    DWORD PTR [ebp+0x10],esi
  40a012:	je     0x40a031
  40a018:	xchg   edx,eax
  40a019:	push   0xb
  40a01b:	pop    ecx
  40a01c:	push   0x4
  40a01e:	pop    ebx
  40a01f:	inc    ebx
  40a020:	xchg   ebx,ecx
  40a022:	sub    ebx,ecx
  40a024:	xchg   ebx,ecx
  40a026:	dec    ecx
  40a027:	dec    ecx
  40a028:	mov    eax,DWORD PTR [ebp-0x24]
  40a02b:	imul   eax,ecx
  40a02e:	add    esp,eax
  40a030:	xchg   edx,eax
  40a031:	push   eax
  40a032:	xor    ebx,ebx
  40a034:	mov    edx,esp
  40a036:	dec    edx
  40a037:	inc    ebx
  40a038:	add    ebx,DWORD PTR [edx+ebx*1]
  40a03b:	dec    ebx
  40a03c:	xor    edx,edx
  40a03e:	add    DWORD PTR [ebp-0xc],ebx
  40a041:	pop    ebx
  40a042:	mov    eax,DWORD PTR [ebp-0xc]
  40a045:	pop    edi
  40a046:	pop    esi
  40a047:	pop    ebx
  40a048:	leave  
  40a049:	ret    0x10
  40a04c:	push   ebp
  40a04d:	mov    ebp,esp
  40a04f:	sub    esp,0x7c
  40a052:	sbb    eax,DWORD PTR ds:0x429020
  40a058:	push   esi
  40a059:	mov    ecx,DWORD PTR ds:0x42c018
  40a05f:	adc    ecx,DWORD PTR ds:0x42c004
  40a065:	mov    DWORD PTR ds:0x42c018,ecx
  40a06b:	push   edi
  40a06c:	mov    eax,ds:0x42e42f
  40a071:	adc    ecx,esi
  40a073:	mov    DWORD PTR [ebp-0x24],eax
  40a076:	mov    eax,ds:0x42e53b
  40a07b:	mov    DWORD PTR [ebp-0x34],eax
  40a07e:	and    DWORD PTR ds:0x429008,0x0
  40a088:	jmp    0x40a09c
  40a08d:	xor    edi,edi
  40a08f:	or     edi,DWORD PTR ds:0x429008
  40a095:	inc    edi
  40a096:	mov    DWORD PTR ds:0x429008,edi
  40a09c:	cmp    DWORD PTR ds:0x429008,0x18
  40a0a3:	jae    0x40a0ce
  40a0a9:	cmp    DWORD PTR ds:0x429008,0x26
  40a0b0:	jne    0x40a0c9
  40a0b6:	push   0x42e23b
  40a0bb:	push   0x42e1b7
  40a0c0:	push   DWORD PTR [ebp-0x24]
  40a0c3:	call   DWORD PTR ds:0x42ed83
  40a0c9:	jmp    0x40a08d
  40a0ce:	and    DWORD PTR [ebp-0x30],0x0
  40a0d2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40a0d9:	mov    ecx,DWORD PTR ds:0x42c00c
  40a0df:	adc    DWORD PTR ds:0x42c010,ecx
  40a0e5:	jmp    0x40c45f
  40a0ea:	gs push 0x7b5b7b64
  40a0f0:	jne    0x40a07a
  40a0f2:	jle    0x40a0d8
  40a0f4:	(bad)  
  40a0f5:	dec    al
  40a0f7:	out    dx,eax
  40a0f8:	shl    BYTE PTR [eax+0x7a7a002c],0x15
  40a0ff:	pop    edi
  40a100:	jp     0x40a17c
  40a102:	and    BYTE PTR [esi+0x302bb681],cl
  40a108:	xchg   ebp,eax
  40a109:	push   cs
  40a10a:	lahf   
  40a10b:	mov    eax,0x8c6d626e
  40a110:	adc    BYTE PTR [eax+0x3532ae81],bl
  40a116:	jle    0x40a099
  40a118:	daa    
  40a119:	mov    gs,WORD PTR ss:[edx]
  40a11c:	inc    ebx
  40a11d:	into   
  40a11e:	mov    ds:0x73104751,eax
  40a123:	adc    eax,0xc77b09cd
  40a128:	cmp    DWORD PTR [esi+0x6b8e15fa],ebp
  40a12e:	lds    edx,FWORD PTR [esi-0x3d]
  40a131:	icebp  
  40a132:	push   edx
  40a133:	lods   al,BYTE PTR ds:[esi]
  40a134:	in     al,0x58
  40a136:	inc    ebp
  40a137:	xchg   BYTE PTR ds:0x4a0625c5,cl
  40a13d:	popa   
  40a13e:	xor    edi,edx
  40a140:	cwde   
  40a141:	fisttp QWORD PTR [ebp+0x34]
  40a144:	xor    ch,BYTE PTR [edx+esi*4+0x12]
  40a148:	mov    DWORD PTR [edx],ecx
  40a14a:	and    eax,0x6f8ee343
  40a14f:	xor    eax,0xfe3716c9
  40a154:	sbb    BYTE PTR [ebp+0x75],al
  40a157:	ss xchg edi,eax
  40a159:	adc    BYTE PTR [esi+0x12],bl
  40a15c:	push   esi
  40a15d:	sub    DWORD PTR [ecx-0x76],edi
  40a160:	or     al,0xae
  40a162:	pop    ebx
  40a163:	lgs    edx,FWORD PTR ds:0x890a5f1
  40a16a:	xor    bh,BYTE PTR [edx+ecx*2+0x5ce07645]
  40a171:	or     DWORD PTR [ebp-0x5f43cc12],edi
  40a177:	jge    0x40a139
  40a179:	dec    eax
  40a17a:	xchg   esp,eax
  40a17b:	push   bp
  40a17d:	std    
  40a17e:	or     ecx,ecx
  40a180:	clc    
  40a181:	jne    0x40a121
  40a183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a184:	pop    edi
  40a185:	icebp  
  40a186:	pop    ds
  40a187:	xor    eax,0x4571be61
  40a18c:	cld    
  40a18d:	mov    ch,0xf4
  40a18f:	fldcw  WORD PTR [ebx+0x3d]
  40a192:	and    al,0x9a
  40a194:	xor    dh,ch
  40a196:	add    BYTE PTR [eax+0x7a],ah
  40a199:	lods   al,BYTE PTR ds:[esi]
  40a19a:	push   es
  40a19b:	jmp    0x9945:0x5dd4f54f
  40a1a2:	outs   dx,BYTE PTR ds:[esi]
  40a1a3:	sub    eax,0x593e38a3
  40a1a8:	xor    cl,al
  40a1aa:	outs   dx,DWORD PTR ds:[esi]
  40a1ab:	mov    al,0x42
  40a1ad:	fnstenv [ebp-0x58]
  40a1b0:	ins    DWORD PTR es:[edi],dx
  40a1b1:	xchg   DWORD PTR [edx],esi
  40a1b3:	xchg   ecx,eax
  40a1b4:	mov    eax,ds
  40a1b6:	dec    edx
  40a1b7:	mov    eax,0xf0e5ad46
  40a1bc:	and    BYTE PTR [esi],0x36
  40a1bf:	stos   DWORD PTR es:[edi],eax
  40a1c0:	mov    esi,0x711a520e
  40a1c5:	and    cl,BYTE PTR [ecx-0x43256a09]
  40a1cb:	lahf   
  40a1cc:	cmp    eax,0x9327dc32
  40a1d1:	ret    
  40a1d2:	iret   
  40a1d3:	mov    edx,0xb9791a2e
  40a1d8:	dec    eax
  40a1d9:	mov    ah,0x97
  40a1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1dc:	popf   
  40a1dd:	pushf  
  40a1de:	sub    al,0x39
  40a1e0:	cmp    BYTE PTR [edx+0x38],dl
  40a1e3:	add    al,0xc6
  40a1e5:	mov    eax,ds:0xacb5cb99
  40a1ea:	int    0x6b
  40a1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ed:	cmp    eax,0x625ec345
  40a1f2:	sahf   
  40a1f3:	not    DWORD PTR [esp+esi*2-0x4a]
  40a1f7:	pop    edx
  40a1f8:	and    DWORD PTR [ebp+0x25],0x1ffe0881
  40a1ff:	mov    bh,0xb7
  40a201:	jns    0x40a24f
  40a203:	sti    
  40a204:	xchg   ecx,eax
  40a205:	(bad)  [esi]
  40a207:	lods   al,BYTE PTR ds:[esi]
  40a208:	pop    es
  40a209:	in     al,0x71
  40a20b:	loop   0x40a244
  40a20d:	ins    DWORD PTR es:[edi],dx
  40a20e:	rcl    DWORD PTR [edx+0x27fe512d],0xf1
  40a215:	sub    DWORD PTR [ecx],ebx
  40a217:	push   ecx
  40a218:	adc    esi,eax
  40a21a:	stos   BYTE PTR es:[edi],al
  40a21b:	xchg   esi,eax
  40a21c:	jnp    0x40a21f
  40a21e:	dec    esp
  40a21f:	push   edi
  40a220:	fnsave [esi+ebx*1+0x5270be50]
  40a227:	pusha  
  40a228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a229:	enter  0x86ca,0x8c
  40a22d:	hlt    
  40a22e:	cmp    BYTE PTR [ebx],cl
  40a230:	cwde   
  40a231:	xchg   edx,eax
  40a232:	icebp  
  40a233:	inc    edi
  40a234:	mov    al,ds:0x2cc3ba
  40a239:	je     0x40a1fa
  40a23b:	cld    
  40a23c:	push   edx
  40a23d:	stos   BYTE PTR es:[edi],al
  40a23e:	xor    BYTE PTR [ecx],cl
  40a240:	sbb    esp,ecx
  40a242:	es xchg bl,bh
  40a245:	fdivr  DWORD PTR [edi+0x30]
  40a248:	jbe    0x40a245
  40a24a:	add    BYTE PTR [ebx+0x26],0x6c
  40a24e:	add    edx,0xffffff87
  40a251:	push   edi
  40a252:	arpl   sp,bp
  40a254:	xor    DWORD PTR [ebx],0x89143a05
  40a25a:	jmp    0xc8f3ffee
  40a25f:	lea    ebx,[edi-0x74]
  40a262:	adc    ch,cl
  40a264:	mov    al,ds:0x65dc5fbb
  40a269:	test   al,0x72
  40a26b:	mov    edi,cs
  40a26d:	pop    ecx
  40a26e:	sbb    BYTE PTR [eax-0x404346e8],bh
  40a274:	imul   ecx,DWORD PTR [ecx],0xfffffffa
  40a277:	cmp    eax,0x8ef90733
  40a27c:	fbld   TBYTE PTR [eax]
  40a27e:	pop    ebx
  40a27f:	gs mov dl,0x63
  40a282:	nop
  40a283:	sbb    cl,cl
  40a285:	xor    esp,ecx
  40a287:	outs   dx,BYTE PTR ds:[esi]
  40a288:	popa   
  40a289:	dec    DWORD PTR [eax]
  40a28b:	fisubr WORD PTR ds:0xc8802d63
  40a291:	xchg   ebx,eax
  40a292:	in     al,dx
  40a293:	push   0xffffffb9
  40a295:	push   ecx
  40a296:	je     0x40a239
  40a298:	cli    
  40a299:	or     bh,BYTE PTR [edx]
  40a29b:	test   al,0x23
  40a29d:	push   eax
  40a29e:	inc    ecx
  40a29f:	jo     0x40a2d6
  40a2a1:	out    0xcc,eax
  40a2a3:	das    
  40a2a4:	or     ebp,edi
  40a2a6:	mov    eax,0xc9667883
  40a2ab:	jb     0x40a22f
  40a2ad:	pop    esi
  40a2ae:	dec    ebx
  40a2af:	jb     0x40a285
  40a2b1:	mov    esp,0x571ac7d0
  40a2b6:	jnp    0x40a30b
  40a2b8:	ret    
  40a2b9:	sub    DWORD PTR [eax],0xffffffb4
  40a2bc:	adc    esp,DWORD PTR [esi-0x7b]
  40a2bf:	sbb    esp,esi
  40a2c1:	mov    edx,0x2274f4da
  40a2c6:	clc    
  40a2c7:	sub    BYTE PTR [ecx+0x10],dh
  40a2ca:	call   0x7697:0x24dc60fb
  40a2d1:	mov    esi,0xe923c22f
  40a2d6:	popf   
  40a2d7:	adc    bh,BYTE PTR [ebp+0x2af5a87b]
  40a2dd:	call   0x43b26f3b
  40a2e2:	jne    0x40a323
  40a2e4:	test   al,0x3b
  40a2e6:	ret    0xd182
  40a2e9:	adc    eax,DWORD PTR [esi+0x2eb29041]
  40a2ef:	leave  
  40a2f0:	mov    eax,esi
  40a2f2:	popa   
  40a2f3:	cdq    
  40a2f4:	test   BYTE PTR ds:0xfb2756c3,ch
  40a2fa:	add    BYTE PTR [ebx+0x7c],dl
  40a2fd:	mov    WORD PTR [ebx],gs
  40a2ff:	dec    ebp
  40a300:	retf   
  40a301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a302:	addr16 jmp 0x78c92327
  40a308:	jl     0x40a2db
  40a30a:	stc    
  40a30b:	sub    edi,DWORD PTR [edx+ebp*2-0x259c890e]
  40a312:	shl    DWORD PTR [esi-0x75652758],1
  40a318:	jae    0x40a34a
  40a31a:	mov    cl,0xb5
  40a31c:	xchg   edx,eax
  40a31d:	xchg   DWORD PTR [ebx-0x47],ecx
  40a320:	ss call 0x47dc:0xcbe99cc0
  40a328:	js     0x40a35c
  40a32a:	sub    DWORD PTR [eax],esp
  40a32c:	ja     0x40a2b4
  40a32e:	fisttp DWORD PTR [edi+0x7045bc89]
  40a334:	data16 or al,0x37
  40a337:	jmp    0x6942:0xe6398ac
  40a33e:	xchg   edx,eax
  40a33f:	aam    0x8b
  40a341:	or     BYTE PTR [eax-0x7616ad15],ch
  40a347:	js     0x40a30d
  40a349:	in     al,0xd6
  40a34b:	addr16 (bad) 
  40a34d:	mov    BYTE PTR [ecx-0x61],al
  40a350:	sahf   
  40a351:	mov    ch,0xf1
  40a353:	xor    eax,0x368b006e
  40a358:	fld    QWORD PTR [ebp+0x6c16f798]
  40a35e:	push   esi
  40a35f:	cdq    
  40a360:	pop    ss
  40a361:	das    
  40a362:	fwait
  40a363:	(bad)  
  40a364:	jle    0x40a2fb
  40a366:	sub    DWORD PTR [ebp-0x60ecf2e0],edx
  40a36c:	leave  
  40a36d:	popf   
  40a36e:	loope  0x40a322
  40a370:	scas   eax,DWORD PTR es:[edi]
  40a371:	in     eax,dx
  40a372:	push   edi
  40a373:	adc    al,0xd0
  40a375:	pusha  
  40a376:	(bad)  
  40a377:	iret   
  40a378:	jns    0x40a378
  40a37a:	retf   
  40a37b:	adc    esi,DWORD PTR [edi+edi*4+0x7618c88f]
  40a382:	sub    eax,0xc6a71f7b
  40a387:	mov    dh,0x6d
  40a389:	xlat   BYTE PTR ds:[ebx]
  40a38a:	imul   esp,DWORD PTR [ebp+0x39387278],0xfd55104c
  40a394:	in     eax,dx
  40a395:	loope  0x40a400
  40a397:	stc    
  40a398:	ja     0x40a366
  40a39a:	leave  
  40a39b:	mov    al,ds:0x48d21238
  40a3a0:	jb     0x40a3b8
  40a3a2:	mov    edx,0x28dd672b
  40a3a7:	shr    DWORD PTR [esi-0x8],0x8a
  40a3ab:	cwde   
  40a3ac:	lahf   
  40a3ad:	push   0x14da3f9d
  40a3b2:	inc    ecx
  40a3b3:	jg     0x40a3d9
  40a3b5:	pop    eax
  40a3b6:	or     eax,DWORD PTR [edx+0x6804cf14]
  40a3bc:	pushf  
  40a3bd:	mov    DWORD PTR [esi-0x4d874ecc],0xa363466e
  40a3c7:	fst    DWORD PTR [edi]
  40a3c9:	(bad)  
  40a3ca:	lock xor BYTE PTR [edi],ah
  40a3cd:	out    0x6b,al
  40a3cf:	adc    cl,bl
  40a3d1:	sbb    bl,BYTE PTR [ebx+0x69]
  40a3d4:	lahf   
  40a3d5:	or     DWORD PTR [eax+0x7e66b479],esp
  40a3db:	pop    ds
  40a3dc:	mov    WORD PTR [edx+ecx*4],es
  40a3df:	sub    ebp,DWORD PTR [eax-0x35]
  40a3e2:	sbb    ebx,DWORD PTR [edi+0x649a9c74]
  40a3e8:	add    eax,0x441314d3
  40a3ed:	mov    ebx,0x57b49dc2
  40a3f2:	out    dx,eax
  40a3f3:	push   ecx
  40a3f4:	shl    BYTE PTR [edi+0xd5c4353],cl
  40a3fa:	mov    edi,0x6fec39fb
  40a3ff:	bound  esi,QWORD PTR [ebx]
  40a401:	or     DWORD PTR [edx-0x63],0x5e
  40a405:	nop
  40a406:	push   ecx
  40a407:	mov    al,ds:0x6e13d7a
  40a40c:	adc    ecx,0x3
  40a40f:	pop    ss
  40a410:	dec    edx
  40a411:	jmp    0x40a3ab
  40a413:	nop
  40a414:	mov    bh,BYTE PTR [esi+edx*4-0x64866ed7]
  40a41b:	call   0x4fa57b47
  40a420:	mov    ebp,edx
  40a422:	bound  edx,QWORD PTR [edx+0x6d5d1788]
  40a428:	aad    0xfd
  40a42a:	dec    esi
  40a42b:	mov    WORD PTR ds:0xeb6b1f82,ss
  40a431:	add    ch,BYTE PTR [ebx+0x4]
  40a434:	mov    al,ds:0xb182fb72
  40a439:	lods   al,BYTE PTR ds:[esi]
  40a43a:	add    dl,BYTE PTR [ebx-0x3de65350]
  40a440:	fld    DWORD PTR [ecx+0x19]
  40a443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a444:	mov    ah,0x88
  40a446:	ins    BYTE PTR es:[edi],dx
  40a447:	dec    esi
  40a448:	jmp    0x49d9:0xdff4bebf
  40a44f:	fdivp  st(0),st
  40a451:	push   edx
  40a452:	popa   
  40a453:	or     dh,bl
  40a455:	enter  0x9bfb,0x87
  40a459:	jo     0x40a45d
  40a45b:	cdq    
  40a45c:	cmp    DWORD PTR [esi],0x4b
  40a45f:	in     al,dx
  40a460:	ret    0x1269
  40a463:	out    0x5d,al
  40a465:	test   edx,0x28469d51
  40a46b:	cmc    
  40a46c:	jle    0x40a4a6
  40a46e:	stc    
  40a46f:	repz sbb BYTE PTR [ebx-0x2c],0xd1
  40a474:	sub    al,0xea
  40a476:	sub    DWORD PTR [esi-0x51941287],edx
  40a47c:	dec    eax
  40a47d:	daa    
  40a47e:	hlt    
  40a47f:	xchg   edx,eax
  40a480:	mov    ch,0xa5
  40a482:	xchg   DWORD PTR [ecx-0x12],edi
  40a485:	js     0x40a4fa
  40a487:	mov    bh,BYTE PTR ds:0xc5780c18
  40a48d:	ins    BYTE PTR es:[edi],dx
  40a48e:	cmp    al,0x69
  40a490:	sete   BYTE PTR [ebp-0x19fc7b2f]
  40a497:	ja     0x40a456
  40a499:	faddp  st(4),st
  40a49b:	mov    ebp,0x4c7fc6c5
  40a4a0:	xchg   eax,ebx
  40a4a2:	aaa    
  40a4a3:	mov    al,ds:0x3e1abdb9
  40a4a8:	xlat   BYTE PTR ds:[ebx]
  40a4a9:	cdq    
  40a4aa:	jl     0x40a51d
  40a4ac:	js     0x40a452
  40a4ae:	iret   
  40a4af:	inc    edi
  40a4b0:	jmp    0x2f14:0x3521b515
  40a4b7:	div    BYTE PTR [edx-0x58]
  40a4ba:	pop    es
  40a4bb:	push   ss
  40a4bc:	stos   BYTE PTR es:[edi],al
  40a4bd:	aas    
  40a4be:	pop    ds
  40a4bf:	inc    esi
  40a4c0:	js     0x40a4db
  40a4c2:	or     DWORD PTR [ebp+ebx*1-0x40],edx
  40a4c6:	scas   eax,DWORD PTR es:[edi]
  40a4c7:	leave  
  40a4c8:	(bad)  
  40a4ca:	push   ds
  40a4cb:	lock cli 
  40a4cd:	inc    ebp
  40a4ce:	ror    DWORD PTR [ecx+0x23e6eda7],cl
  40a4d4:	fiadd  DWORD PTR [esi]
  40a4d6:	jbe    0x40a517
  40a4d8:	int3   
  40a4d9:	xor    al,0x45
  40a4db:	lods   al,BYTE PTR ds:[esi]
  40a4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4dd:	pop    ebp
  40a4de:	mov    ebx,0x915a603c
  40a4e3:	jp     0x40a50e
  40a4e5:	mov    gs,edx
  40a4e7:	push   ecx
  40a4e8:	div    ebp
  40a4ea:	lock xor eax,0x88fa7075
  40a4f0:	test   al,0x4f
  40a4f2:	sti    
  40a4f3:	or     DWORD PTR [esi-0x47],esp
  40a4f6:	sub    ecx,edi
  40a4f8:	clc    
  40a4f9:	mov    ?,esp
  40a4fb:	ror    ecx,cl
  40a4fd:	(bad)
  40a500:	inc    WORD PTR [edi+0x7e2c47c]
  40a507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a508:	imul   ebp,DWORD PTR [ecx],0x3c
  40a50b:	jmp    0x7794d2c8
  40a510:	jbe    0x40a51f
  40a512:	or     bh,BYTE PTR [edx+0x5412093f]
  40a518:	retf   0xd2a
  40a51b:	add    ch,BYTE PTR [edi-0x6b]
  40a51e:	push   edx
  40a51f:	add    BYTE PTR [edx-0x12],dl
  40a522:	hlt    
  40a523:	xor    dh,BYTE PTR [esi]
  40a525:	mov    esi,0xdd36b3d7
  40a52a:	mov    ch,cl
  40a52c:	in     eax,0xb5
  40a52e:	or     al,0x78
  40a530:	(bad)  
  40a531:	cld    
  40a532:	ret    0x63f9
  40a535:	sub    ch,bl
  40a537:	icebp  
  40a538:	fldln2 
  40a53a:	and    ebp,ebp
  40a53c:	ret    
  40a53d:	fsub   QWORD PTR [ecx+0x2d3f057e]
  40a543:	hlt    
  40a544:	dec    ebp
  40a545:	mov    dh,0x68
  40a547:	push   ecx
  40a548:	and    BYTE PTR [eax-0x3b],ch
  40a54b:	out    dx,al
  40a54c:	daa    
  40a54d:	mov    edi,0xf5a2cb55
  40a552:	mov    ecx,0x4e5cd880
  40a557:	pusha  
  40a558:	push   ebp
  40a559:	repnz les ebx,FWORD PTR fs:[edx]
  40a55d:	lods   eax,DWORD PTR ds:[esi]
  40a55e:	je     0x40a513
  40a560:	jge    0x40a5dc
  40a562:	sub    edi,eax
  40a564:	ret    0x47fa
  40a567:	sbb    DWORD PTR ds:0x255d4dd6,esp
  40a56d:	pop    ds
  40a56e:	jno    0x40a5bc
  40a570:	add    BYTE PTR [esi-0x80],ch
  40a573:	xor    al,0xc9
  40a575:	lods   al,BYTE PTR ds:[esi]
  40a576:	pop    es
  40a577:	jns    0x40a5b6
  40a579:	inc    eax
  40a57a:	not    edi
  40a57c:	and    ch,BYTE PTR [ebx+0x68b56f42]
  40a582:	fadd   QWORD PTR [esi+edx*8+0x7b]
  40a586:	call   0x2763626f
  40a58b:	sub    eax,0x6f068cf
  40a590:	arpl   WORD PTR ds:[eax+eax*8],bx
  40a594:	adc    BYTE PTR [eax+0x70],ch
  40a597:	adc    ebp,DWORD PTR [ebx-0x6f4724da]
  40a59d:	add    bl,BYTE PTR [edx-0x3dd354a7]
  40a5a3:	mov    ebx,0x6f2c7e0d
  40a5a8:	repnz and eax,0x75ea6281
  40a5ae:	fdiv   st,st(4)
  40a5b0:	scas   al,BYTE PTR es:[edi]
  40a5b1:	mov    ah,0x13
  40a5b3:	in     al,0x2d
  40a5b5:	into   
  40a5b6:	sbb    al,0x29
  40a5b8:	mov    ds:0x616fa849,eax
  40a5bd:	push   0x5
  40a5bf:	popa   
  40a5c0:	or     eax,0xa9fbe9c3
  40a5c5:	xor    DWORD PTR [esi+0x37],edx
  40a5c8:	or     ebp,DWORD PTR [ecx+edi*2]
  40a5cb:	push   0xfffffff5
  40a5cd:	inc    esi
  40a5ce:	bound  esi,QWORD PTR [edi]
  40a5d0:	ins    DWORD PTR es:[edi],dx
  40a5d1:	cld    
  40a5d2:	cmp    DWORD PTR [ebx],eax
  40a5d4:	inc    edx
  40a5d5:	mov    cl,0xba
  40a5d7:	cmp    al,0x93
  40a5d9:	xor    ah,dl
  40a5db:	retf   
  40a5dc:	push   cs
  40a5dd:	outs   dx,DWORD PTR ds:[esi]
  40a5de:	mov    ebp,0xb4715980
  40a5e3:	sbb    edx,DWORD PTR [ebx-0x43714dce]
  40a5e9:	mov    al,ds:0xead20562
  40a5ee:	xchg   esi,eax
  40a5ef:	imul   esp,esi,0xec3b79b
  40a5f5:	pop    edi
  40a5f6:	and    ebp,DWORD PTR [esi-0x78]
  40a5f9:	push   es
  40a5fa:	jmp    0x1f7a:0x6fea007b
  40a601:	cmc    
  40a602:	lahf   
  40a603:	aaa    
  40a604:	ror    BYTE PTR [ebp+0x2b116596],1
  40a60a:	jne    0x40a63e
  40a60c:	loop   0x40a62c
  40a60e:	fmul   DWORD PTR [ebx]
  40a610:	sbb    al,0xba
  40a612:	cmp    eax,0x78ca235a
  40a617:	add    al,0x2d
  40a619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a61a:	push   ecx
  40a61b:	aam    0xf0
  40a61d:	sub    DWORD PTR [edi],edx
  40a61f:	les    ebx,FWORD PTR [edi+0x3eef9e07]
  40a625:	test   eax,0x4f2c8a36
  40a62a:	cld    
  40a62b:	jmp    ebp
  40a62d:	test   al,dl
  40a62f:	outs   dx,DWORD PTR ds:[esi]
  40a630:	push   ds
  40a631:	rcl    cl,cl
  40a633:	es icebp 
  40a635:	and    eax,0x446bd808
  40a63a:	push   ebx
  40a63b:	add    ebx,0xffffff83
  40a63e:	sbb    ebp,DWORD PTR [eax+0x46ba9c8d]
  40a644:	call   DWORD PTR [esi]
  40a646:	sti    
  40a647:	jge    0x40a6a3
  40a649:	push   edi
  40a64a:	xor    BYTE PTR [ebx+0x546f7833],0xef
  40a651:	jge    0x40a6a3
  40a653:	rol    DWORD PTR [esi],1
  40a655:	mov    dh,BYTE PTR [esi-0x75d07bfd]
  40a65b:	ins    BYTE PTR es:[edi],dx
  40a65c:	xchg   ebx,eax
  40a65d:	aaa    
  40a65e:	retf   
  40a65f:	adc    ecx,DWORD PTR [eax-0x1d]
  40a662:	adc    bh,BYTE PTR [edx]
  40a664:	into   
  40a665:	repz aas 
  40a667:	add    BYTE PTR [esi],0x9b
  40a66a:	fwait
  40a66b:	pop    ebp
  40a66c:	mov    ah,0x1
  40a66e:	mov    bl,ah
  40a670:	mov    esp,0x69836ab0
  40a675:	or     DWORD PTR [eax+0x2a9f20a5],ebp
  40a67b:	dec    esp
  40a67c:	mov    al,ds:0xdc0ba551
  40a681:	icebp  
  40a682:	cmp    ch,ah
  40a684:	frstor [eax]
  40a686:	inc    ebp
  40a687:	push   esi
  40a688:	pop    ecx
  40a689:	push   ebp
  40a68a:	ds cli 
  40a68c:	inc    ecx
  40a68d:	(bad)  
  40a68e:	cmp    eax,0x46989a1b
  40a693:	stos   BYTE PTR es:[edi],al
  40a694:	out    dx,eax
  40a695:	int    0xd0
  40a697:	and    dh,BYTE PTR [esi+0x24e4397f]
  40a69d:	mov    dl,0x84
  40a69f:	(bad)  
  40a6a1:	rcl    DWORD PTR [eax],cl
  40a6a3:	dec    ebx
  40a6a4:	popf   
  40a6a5:	add    eax,0x7afd4597
  40a6aa:	xor    al,0x62
  40a6ac:	lods   eax,DWORD PTR ds:[esi]
  40a6ad:	in     al,0xcd
  40a6af:	out    0xce,eax
  40a6b1:	shl    DWORD PTR [ebx-0x4457dfe],cl
  40a6b7:	jle    0x40a686
  40a6b9:	mov    edi,0xdc4be344
  40a6be:	lods   al,BYTE PTR ds:[esi]
  40a6bf:	or     ah,dl
  40a6c1:	icebp  
  40a6c2:	add    ebx,DWORD PTR [edi]
  40a6c4:	je     0x40a6b3
  40a6c6:	enter  0xec2e,0x3e
  40a6ca:	jge    0x40a660
  40a6cc:	fimul  DWORD PTR ds:0x35af6249
  40a6d2:	test   eax,0x8d9b51de
  40a6d7:	xchg   DWORD PTR [edx-0x4fc65df0],edx
  40a6dd:	test   eax,0x53ba7014
  40a6e2:	sbb    bl,BYTE PTR es:[ebp+0x797b8a5e]
  40a6e9:	push   ss
  40a6ea:	jbe    0x40a725
  40a6ec:	repnz xor eax,DWORD PTR [esp+eax*2+0x3878a231]
  40a6f4:	push   edi
  40a6f5:	jo     0x40a67a
  40a6f7:	sub    ch,ah
  40a6f9:	push   es
  40a6fa:	mov    esi,0xd9f07a04
  40a6ff:	jb     0x40a6ee
  40a701:	jne    0x40a729
  40a703:	cmp    DWORD PTR [eax+0x6e93c248],edx
  40a709:	lods   al,BYTE PTR ds:[esi]
  40a70a:	daa    
  40a70b:	dec    ebp
  40a70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a70d:	lods   al,BYTE PTR ds:[esi]
  40a70e:	adc    al,ch
  40a710:	sbb    bl,ah
  40a712:	add    edx,DWORD PTR [esi-0x62]
  40a715:	in     eax,0xa6
  40a717:	sbb    al,0x6e
  40a719:	retf   0x3dc
  40a71c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a71d:	push   esp
  40a71e:	fwait
  40a71f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a720:	mov    al,0x59
  40a722:	mov    ebp,edi
  40a724:	neg    ah
  40a726:	adc    DWORD PTR [esi-0x3e4126a4],0x1f
  40a72d:	mov    cl,0x25
  40a72f:	test   BYTE PTR [eax],dh
  40a731:	test   eax,0x6a139684
  40a736:	xchg   esp,eax
  40a737:	jns    0x40a773
  40a739:	in     al,0xae
  40a73b:	inc    ecx
  40a73c:	fadd   DWORD PTR [esp+eax*8+0x22b8ad87]
  40a743:	fwait
  40a744:	sbb    DWORD PTR [esi-0x3f46d0d4],edx
  40a74a:	ficom  DWORD PTR [eax+ebx*8-0x7a01e03f]
  40a751:	rol    BYTE PTR [edi],0x71
  40a754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a755:	rol    DWORD PTR [edx],cl
  40a757:	pop    ss
  40a758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a759:	mov    bh,0x82
  40a75b:	jb     0x40a782
  40a75d:	shr    DWORD PTR [edx+0x3afa53ae],0xda
  40a764:	psraw  mm3,mm4
  40a767:	jecxz  0x40a732
  40a769:	or     eax,DWORD PTR [esi+ecx*8]
  40a76c:	cmp    bl,bh
  40a76e:	lahf   
  40a76f:	jl     0x40a78a
  40a771:	int    0xb9
  40a773:	sub    dh,BYTE PTR [ecx+ecx*2-0x1b4f994d]
  40a77a:	iret   
  40a77b:	pushw  0x21c
  40a77f:	push   0xffffffe8
  40a781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a782:	xchg   eax,esi
  40a784:	out    dx,eax
  40a785:	cmp    al,dl
  40a787:	rcl    BYTE PTR [ecx],1
  40a789:	sbb    eax,0x174618e0
  40a78e:	adc    al,0x13
  40a790:	pop    eax
  40a791:	test   eax,0x85bb2630
  40a796:	adc    edi,ecx
  40a798:	adc    al,0xc1
  40a79a:	xor    eax,0x1672eb35
  40a79f:	xor    eax,0x41b32b43
  40a7a4:	fisub  WORD PTR ds:0xda64f559
  40a7aa:	ins    BYTE PTR es:[edi],dx
  40a7ab:	adc    bh,BYTE PTR [ebx]
  40a7ad:	loope  0x40a7b3
  40a7af:	xor    eax,0xed2a5b8d
  40a7b4:	fistp  QWORD PTR [ebp-0x6e46b2a]
  40a7ba:	call   0x48056b55
  40a7bf:	loope  0x40a821
  40a7c1:	push   0xac4147b1
  40a7c6:	stc    
  40a7c7:	inc    edx
  40a7c8:	fwait
  40a7c9:	and    al,0x36
  40a7cb:	pushf  
  40a7cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7cd:	xchg   edx,eax
  40a7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7cf:	call   0xba64118e
  40a7d4:	pop    esp
  40a7d5:	clc    
  40a7d6:	dec    eax
  40a7d7:	call   0x7d66be1e
  40a7dc:	cdq    
  40a7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7de:	sub    cl,BYTE PTR [esi-0x4c]
  40a7e1:	push   0xffffffc3
  40a7e3:	in     eax,0x7
  40a7e5:	(bad)
  40a7e9:	cli    
  40a7ea:	sub    bl,BYTE PTR [edx+0x4c]
  40a7ed:	cld    
  40a7ee:	cdq    
  40a7ef:	add    eax,0x64e3ff7c
  40a7f4:	sub    ecx,eax
  40a7f6:	pop    esi
  40a7f7:	popf   
  40a7f8:	cld    
  40a7f9:	push   ebx
  40a7fa:	lds    ebp,FWORD PTR [edi]
  40a7fc:	div    esp
  40a7fe:	and    ebp,DWORD PTR [edi]
  40a800:	sub    BYTE PTR [edx+0x69e16cb1],dh
  40a806:	xor    DWORD PTR [edi-0x54],edi
  40a809:	shr    DWORD PTR [ebp+0xf5e531b],1
  40a80f:	adc    edx,edi
  40a811:	jns    0x40a82b
  40a813:	push   edx
  40a814:	cwde   
  40a815:	pop    ebp
  40a816:	add    al,0x49
  40a818:	mov    ebp,DWORD PTR [edi+eiz*2-0x7e]
  40a81c:	pusha  
  40a81d:	push   0xc42218e1
  40a822:	ficomp WORD PTR [ecx-0x73b7429f]
  40a828:	stc    
  40a829:	int3   
  40a82a:	sar    DWORD PTR [ecx],cl
  40a82c:	push   ebx
  40a82d:	sub    eax,0x5bb7c716
  40a832:	mov    dl,BYTE PTR ds:0xc97badb7
  40a838:	gs push esi
  40a83a:	js     0x40a896
  40a83c:	dec    esp
  40a83d:	or     bh,dh
  40a83f:	out    dx,al
  40a840:	arpl   WORD PTR [eax-0x37],cx
  40a843:	add    al,0x25
  40a845:	xchg   edi,eax
  40a846:	ins    BYTE PTR es:[edi],dx
  40a847:	rcl    DWORD PTR [eax-0x6d6a3938],0xc9
  40a84e:	pop    ds
  40a84f:	mov    eax,0xb53a8395
  40a854:	lods   eax,DWORD PTR ds:[esi]
  40a855:	push   ebx
  40a856:	xchg   DWORD PTR [ebx-0x5a9b7558],edx
  40a85c:	ds mov cl,0x14
  40a85f:	std    
  40a860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a861:	or     DWORD PTR [ecx],0xffffffa9
  40a864:	or     DWORD PTR [edi+0x3f],0xffffffce
  40a868:	add    DWORD PTR [eax+0x39f4df6f],0xffffffc0
  40a86f:	xchg   edi,eax
  40a870:	pop    edx
  40a871:	loope  0x40a87d
  40a873:	cmp    bh,BYTE PTR [ebp+0x3b]
  40a876:	mov    ebp,0x44591178
  40a87b:	push   ecx
  40a87c:	repz sub BYTE PTR [eax+0x6d],ch
  40a880:	dec    esp
  40a881:	fyl2xp1 
  40a883:	dec    ebx
  40a884:	mov    edi,0x2b67b095
  40a889:	push   edx
  40a88a:	(bad)  
  40a88b:	nop
  40a88c:	aad    0x47
  40a88e:	add    al,0xfe
  40a890:	dec    eax
  40a891:	sub    esp,esp
  40a893:	ret    0x2666
  40a896:	or     al,0x1b
  40a898:	push   es
  40a899:	mov    ds:0x1254d107,eax
  40a89e:	mov    esi,0x2dee5ed4
  40a8a3:	jl     0x40a901
  40a8a5:	cmp    al,0xf2
  40a8a7:	in     eax,0xcd
  40a8a9:	pop    ss
  40a8aa:	test   eax,0x6f998da2
  40a8af:	mov    ecx,0x31373a79
  40a8b4:	xlat   BYTE PTR ds:[ebx]
  40a8b5:	jo     0x40a88d
  40a8b7:	test   BYTE PTR [esi+0x7e],ah
  40a8ba:	fimul  WORD PTR [ebx+0xd07a82b]
  40a8c0:	pop    es
  40a8c1:	and    eax,0x26a64c4e
  40a8c6:	cli    
  40a8c7:	inc    ebp
  40a8c8:	repz mov eax,es:0x3536cea9
  40a8cf:	sahf   
  40a8d0:	xor    eax,0xd81bd75f
  40a8d5:	mov    cl,0xb
  40a8d7:	push   cs
  40a8d8:	(bad)  
  40a8d9:	and    ecx,ecx
  40a8db:	add    al,0x1f
  40a8dd:	dec    ebp
  40a8de:	rcl    DWORD PTR [esi],cl
  40a8e0:	add    BYTE PTR [eax],dh
  40a8e2:	enter  0xb08a,0xfb
  40a8e6:	mov    ebp,0xf57c5166
  40a8eb:	out    0x54,eax
  40a8ed:	add    al,0xce
  40a8ef:	out    dx,al
  40a8f0:	jle    0x40a90b
  40a8f2:	adc    al,0x15
  40a8f4:	adc    ch,BYTE PTR [esi]
  40a8f6:	dec    eax
  40a8f7:	aaa    
  40a8f8:	pop    ss
  40a8f9:	popa   
  40a8fa:	stc    
  40a8fb:	adc    esi,ecx
  40a8fd:	inc    ebp
  40a8fe:	lea    edi,[esi-0x27]
  40a901:	(bad)  
  40a902:	pushf  
  40a903:	xor    esi,DWORD PTR [ebx]
  40a905:	xchg   DWORD PTR [ecx+ebx*4-0x1761e5c8],ebp
  40a90c:	bound  edi,QWORD PTR [ebp+edx*2+0x6c]
  40a910:	test   al,0x78
  40a912:	sbb    edx,DWORD PTR [ebx+ecx*2]
  40a915:	outs   dx,DWORD PTR ds:[esi]
  40a916:	cmp    BYTE PTR [ecx+0x22],0x63
  40a91a:	inc    eax
  40a91b:	std    
  40a91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a91d:	add    BYTE PTR [eax],ch
  40a91f:	fimul  WORD PTR ds:0x245f841
  40a925:	dec    eax
  40a926:	add    bh,al
  40a928:	add    bh,BYTE PTR [eax+0x6]
  40a92b:	add    BYTE PTR [ebx-0x514338b3],al
  40a931:	test   DWORD PTR [edi-0x15],edx
  40a934:	cdq    
  40a935:	jno    0x40a98b
  40a937:	arpl   WORD PTR [edi-0x44e61c4b],cx
  40a93d:	int    0x16
  40a93f:	retf   
  40a940:	popa   
  40a941:	in     al,dx
  40a942:	push   cs
  40a943:	pop    eax
  40a944:	fs push 0x5d
  40a947:	repz adc BYTE PTR [ecx-0x48],cl
  40a94b:	stc    
  40a94c:	retf   
  40a94d:	xchg   edi,eax
  40a94e:	push   0x4e
  40a950:	lods   eax,DWORD PTR ds:[esi]
  40a951:	dec    ebx
  40a952:	cmp    BYTE PTR [edx-0x741ea89],cl
  40a958:	jle    0x40a98e
  40a95a:	bound  ebp,QWORD PTR [edx-0x44]
  40a95d:	das    
  40a95e:	bound  ebx,QWORD PTR [eax-0x6c]
  40a961:	fcmovbe st,st(6)
  40a963:	jbe    0x40a991
  40a965:	xchg   ebp,eax
  40a966:	mov    WORD PTR [esi+0x20],?
  40a969:	and    eax,0x5210419c
  40a96e:	xchg   esp,eax
  40a96f:	in     eax,dx
  40a970:	ss cmp eax,0x504dec1e
  40a976:	(bad)
  40a979:	stos   DWORD PTR es:[edi],eax
  40a97a:	xor    cl,dl
  40a97c:	dec    edi
  40a97d:	xchg   esi,eax
  40a97e:	cld    
  40a97f:	sub    eax,0xc8223980
  40a984:	dec    BYTE PTR fs:[ecx-0x1aa73881]
  40a98b:	mov    BYTE PTR [edx-0x4c],bh
  40a98e:	push   ss
  40a98f:	and    DWORD PTR [ebx+edi*1+0x4c],eax
  40a993:	cmp    DWORD PTR [ecx-0x5fef04bd],ebx
  40a999:	les    esp,FWORD PTR [ebp+0x44]
  40a99c:	sbb    BYTE PTR [esi+esi*8-0x77a3a1a0],dl
  40a9a3:	mov    ds:0x25386e8a,eax
  40a9a8:	push   ss
  40a9a9:	fsubrp st(3),st
  40a9ab:	xor    dl,0x99
  40a9ae:	or     al,0x56
  40a9b0:	jl     0x40a98b
  40a9b2:	jg     0x40aa2a
  40a9b4:	dec    ebx
  40a9b5:	mov    eax,ds:0xde63dc2a
  40a9ba:	icebp  
  40a9bb:	outs   dx,BYTE PTR ds:[esi]
  40a9bc:	jae    0x40aa33
  40a9be:	in     al,dx
  40a9bf:	repnz (bad) 
  40a9c1:	shl    ch,1
  40a9c3:	inc    esp
  40a9c4:	push   ds
  40a9c5:	jmp    0x40a9f9
  40a9c7:	mov    DWORD PTR [esi+0x15],0xee25edec
  40a9ce:	int    0x2
  40a9d0:	popa   
  40a9d1:	and    DWORD PTR [ebp+0x5f5391be],ebx
  40a9d7:	dec    edx
  40a9d8:	out    0xdc,al
  40a9da:	lods   eax,DWORD PTR ds:[esi]
  40a9db:	pop    esp
  40a9dc:	not    DWORD PTR [edx-0x7b104b9b]
  40a9e2:	jns    0x40a989
  40a9e4:	pop    ebp
  40a9e5:	adc    dh,al
  40a9e7:	pushf  
  40a9e8:	fbld   TBYTE PTR ds:0x3079a17d
  40a9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9ef:	sbb    al,0x14
  40a9f1:	mov    edi,0x5a6128ed
  40a9f6:	push   ecx
  40a9f7:	cs inc eax
  40a9f9:	mov    bh,0x9a
  40a9fb:	cwde   
  40a9fc:	sahf   
  40a9fd:	dec    ecx
  40a9fe:	or     DWORD PTR [esi-0x17],eax
  40aa01:	int    0x98
  40aa03:	repnz imul edx,esi,0x2d650ed6
  40aa0a:	dec    esp
  40aa0b:	cdq    
  40aa0c:	sbb    al,0xd
  40aa0e:	mov    edi,ebp
  40aa10:	push   es
  40aa11:	add    al,0x3b
  40aa13:	add    dh,BYTE PTR [eax]
  40aa15:	sbb    dl,dl
  40aa17:	aaa    
  40aa18:	push   0xffffffe1
  40aa1a:	push   0x24a6411d
  40aa1f:	fsubr  QWORD PTR [ecx-0x755d01de]
  40aa25:	out    dx,al
  40aa26:	xchg   edx,eax
  40aa27:	add    BYTE PTR [edi-0x5e],bl
  40aa2a:	inc    edx
  40aa2b:	aam    0xb0
  40aa2d:	cmp    eax,0x2896b82a
  40aa32:	xchg   dh,cl
  40aa34:	ins    BYTE PTR es:[edi],dx
  40aa35:	mov    al,BYTE PTR cs:[ecx-0x9687b55]
  40aa3c:	(bad)  
  40aa3d:	(bad)  
  40aa3e:	cli    
  40aa3f:	ror    DWORD PTR [eax-0x97b2937],cl
  40aa45:	push   0x8b48881e
  40aa4a:	or     DWORD PTR [ebx-0x47],esp
  40aa4d:	add    BYTE PTR [eax],0x28
  40aa50:	rsm    
  40aa52:	sub    al,0xd0
  40aa54:	adc    BYTE PTR [ebx],ch
  40aa56:	shr    DWORD PTR [ebx+ecx*8+0x37],0x1a
  40aa5b:	dec    ebp
  40aa5c:	inc    ebp
  40aa5d:	add    ebp,eax
  40aa5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa60:	in     al,0xaf
  40aa62:	leave  
  40aa63:	or     bl,BYTE PTR [edi+0x6e]
  40aa66:	sbb    al,0x90
  40aa68:	gs cwde 
  40aa6a:	mov    ch,0xa2
  40aa6c:	add    eax,0x20bbfb8
  40aa71:	outs   dx,BYTE PTR ds:[esi]
  40aa72:	inc    esp
  40aa73:	ud0    ecx,DWORD PTR [esp+eiz*2+0x2e3ecbf6]
  40aa7b:	and    eax,0x7bd79ff8
  40aa80:	(bad)
  40aa83:	xor    al,0xf1
  40aa85:	add    edi,edi
  40aa87:	mov    al,gs:0xdee5a604
  40aa8d:	adc    cl,BYTE PTR [ebp-0x2d4245f7]
  40aa93:	pop    ebp
  40aa94:	fadd   st,st(7)
  40aa96:	sbb    eax,0xee032662
  40aa9b:	hlt    
  40aa9c:	inc    edx
  40aa9d:	popa   
  40aa9e:	xor    BYTE PTR [edx],cl
  40aaa0:	fwait
  40aaa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaa2:	nop
  40aaa3:	iret   
  40aaa4:	or     al,0xb4
  40aaa6:	(bad)  
  40aaa7:	sbb    DWORD PTR [ecx+ebp*4],eax
  40aaaa:	jmp    0x9987:0xdb29afcd
  40aab1:	call   0xd6f4:0x7a630d1a
  40aab8:	or     BYTE PTR [ecx+0x12588dd4],cl
  40aabe:	imul   esp,DWORD PTR [ebx+0x5ab1571a],0xffffffc4
  40aac5:	aas    
  40aac6:	mov    DWORD PTR [esi-0x6cdb8d34],ebp
  40aacc:	mov    bl,0x1
  40aace:	jbe    0x40aacd
  40aad0:	shl    DWORD PTR [ecx-0x47],cl
  40aad3:	adc    ah,BYTE PTR [edi]
  40aad5:	stc    
  40aad6:	jmp    0xf86b:0x1666874
  40aadd:	mov    al,0xe7
  40aadf:	inc    ebp
  40aae0:	scas   eax,DWORD PTR es:[edi]
  40aae1:	aad    0x20
  40aae3:	pusha  
  40aae4:	mov    WORD PTR [esi-0x80],?
  40aae7:	cmp    esp,esi
  40aae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaea:	and    dh,BYTE PTR [eax+0x74]
  40aaed:	mov    edi,DWORD PTR [edx]
  40aaef:	cmp    eax,DWORD PTR [esi]
  40aaf1:	or     eax,0x3157cd04
  40aaf6:	repz add al,BYTE PTR [edi-0x3b2cdfe4]
  40aafd:	call   0x93b49de7
  40ab02:	push   ebx
  40ab03:	cmp    ah,BYTE PTR [ebp-0x350d8e03]
  40ab09:	xchg   ebx,eax
  40ab0a:	or     ch,BYTE PTR [edx+0x1f]
  40ab0d:	mov    esi,0xd144fe1a
  40ab12:	or     DWORD PTR [ecx],ebp
  40ab14:	(bad)  
  40ab16:	data16 and al,0xd3
  40ab19:	lods   eax,DWORD PTR ds:[esi]
  40ab1a:	ds imul ebx,ecx,0xf2afe084
  40ab21:	xchg   DWORD PTR ds:0xb44da73a,edx
  40ab27:	retf   0x1a89
  40ab2a:	test   al,0x82
  40ab2c:	inc    esi
  40ab2d:	stc    
  40ab2e:	or     eax,0x67a4241c
  40ab33:	xchg   ebp,eax
  40ab34:	mov    BYTE PTR [edx+0x12ea0bb4],bh
  40ab3a:	mov    al,ds:0x9b84bc42
  40ab3f:	aas    
  40ab40:	pop    ebp
  40ab41:	jo     0x40aad0
  40ab43:	sub    ebp,ebx
  40ab45:	hlt    
  40ab46:	mov    dh,0x69
  40ab48:	xchg   ecx,eax
  40ab49:	jnp    0x40aada
  40ab4b:	aad    0xa0
  40ab4d:	push   esp
  40ab4e:	ret    
  40ab4f:	js     0x40ab05
  40ab51:	stos   BYTE PTR es:[edi],al
  40ab52:	jno    0x40ab1e
  40ab54:	sub    BYTE PTR [ebp+0x698432ce],dh
  40ab5a:	scas   eax,DWORD PTR es:[edi]
  40ab5b:	inc    ecx
  40ab5c:	js     0x40ab11
  40ab5e:	or     edi,DWORD PTR [ebx+esi*1-0xd]
  40ab62:	push   edx
  40ab63:	test   eax,0xb3dca968
  40ab68:	or     eax,0x9035bde5
  40ab6d:	lods   eax,DWORD PTR ds:[esi]
  40ab6e:	stos   DWORD PTR es:[edi],eax
  40ab6f:	mov    esp,0x5d44a6a7
  40ab74:	fcomp  QWORD PTR [esi]
  40ab76:	xchg   ecx,eax
  40ab77:	and    esi,DWORD PTR [ebp+eiz*4-0x7b]
  40ab7b:	or     ah,BYTE PTR [ebp-0x1684a286]
  40ab81:	jmp    0x40abc7
  40ab83:	jbe    0x40ab0a
  40ab85:	pop    eax
  40ab86:	gs pop ebx
  40ab88:	or     eax,0x8d0a95a1
  40ab8d:	fwait
  40ab8e:	sub    al,0x8c
  40ab90:	xchg   esp,eax
  40ab91:	retf   0x7b5d
  40ab94:	out    dx,eax
  40ab95:	shl    esi,0x4c
  40ab98:	enter  0xadad,0x22
  40ab9c:	xchg   edi,eax
  40ab9d:	xor    esi,DWORD PTR [edi+0x9e1fb1c]
  40aba3:	and    al,0xe8
  40aba5:	xchg   esp,eax
  40aba6:	or     cl,BYTE PTR [eax]
  40aba8:	jg     0x40abbc
  40abaa:	leave  
  40abab:	(bad)  
  40abac:	sbb    al,0xb3
  40abae:	inc    edx
  40abaf:	js     0x40abe2
  40abb1:	cmp    al,0x34
  40abb3:	out    dx,al
  40abb4:	sbb    al,0x47
  40abb6:	data16 jb 0x40abee
  40abb9:	in     al,0x6b
  40abbb:	and    edi,esi
  40abbd:	or     DWORD PTR [ebp+esi*2+0x14],ecx
  40abc1:	xchg   edi,eax
  40abc2:	test   ecx,ecx
  40abc4:	js     0x40ac34
  40abc6:	fdiv   DWORD PTR [esi]
  40abc8:	sbb    al,BYTE PTR [esi+0x21]
  40abcb:	fisubr DWORD PTR [ebx-0x42]
  40abce:	jbe    0x40aba4
  40abd0:	jl     0x40ab98
  40abd2:	(bad)  
  40abd4:	call   0xfee8:0x6eb5456d
  40abdb:	jecxz  0x40ac47
  40abdd:	stc    
  40abde:	hlt    
  40abdf:	(bad)  
  40abe0:	cmp    ebx,DWORD PTR [ebp+0x51]
  40abe3:	ror    DWORD PTR [ecx+0x16f82335],cl
  40abe9:	fcmovnu st,st(5)
  40abeb:	jno    0x40abbd
  40abed:	add    al,0xa2
  40abef:	outs   dx,DWORD PTR ds:[esi]
  40abf0:	sbb    eax,0xa6ee26eb
  40abf5:	call   0x1912:0x605ac753
  40abfc:	push   ebp
  40abfd:	retf   
  40abfe:	test   BYTE PTR [eax+eiz*1],bh
  40ac01:	fcom   st(1)
  40ac03:	or     al,0x71
  40ac05:	pop    esi
  40ac06:	jne    0x40abbb
  40ac08:	scas   al,BYTE PTR es:[edi]
  40ac09:	sub    ah,BYTE PTR [edi-0x4e5c6da3]
  40ac0f:	sub    al,0xc8
  40ac11:	test   al,0x3
  40ac13:	pop    esp
  40ac14:	push   ecx
  40ac15:	fsubr  QWORD PTR [ecx-0x24]
  40ac18:	push   ss
  40ac19:	mov    ah,0xc
  40ac1b:	mov    WORD PTR [edi-0x69f65b7e],cs
  40ac21:	jmp    0x804025f6
  40ac26:	push   cs
  40ac27:	test   al,0x31
  40ac29:	adc    eax,0x9fbdac32
  40ac2e:	jbe    0x40ac81
  40ac30:	push   ecx
  40ac31:	xchg   ecx,eax
  40ac32:	ss js  0x40ac4c
  40ac35:	cmp    BYTE PTR [edx+0x46],0xcf
  40ac39:	(bad)  
  40ac3a:	sahf   
  40ac3b:	(bad)  
  40ac3c:	dec    edi
  40ac3d:	push   ds
  40ac3e:	clc    
  40ac3f:	jge    0x40acac
  40ac41:	ftst   
  40ac43:	mov    edx,0xdc63d865
  40ac48:	sbb    eax,0x3a8fffe3
  40ac4d:	or     eax,0xb165876f
  40ac52:	xchg   BYTE PTR [ecx+eax*2+0x2239eea8],ah
  40ac59:	test   al,0x1a
  40ac5b:	or     DWORD PTR [ecx-0x8],eax
  40ac5e:	jne    0x40ac7e
  40ac60:	test   al,0x59
  40ac62:	push   0xffffffa1
  40ac64:	imul   esi,ebp,0x3d
  40ac67:	jmp    0x19dc731c
  40ac6c:	sub    BYTE PTR [ecx+edx*8-0x2fff6d3c],ah
  40ac73:	pop    edi
  40ac74:	mov    ebx,0x383efd67
  40ac79:	xor    eax,0x5a31a1d0
  40ac7e:	mov    ecx,0xd82a8f95
  40ac83:	jae    0x40ac9a
  40ac85:	adc    ch,BYTE PTR [esp+ecx*8]
  40ac88:	inc    esi
  40ac89:	pop    ecx
  40ac8a:	inc    ebx
  40ac8b:	pop    edi
  40ac8c:	iret   
  40ac8d:	stos   DWORD PTR es:[edi],eax
  40ac8e:	adc    ebx,esp
  40ac90:	(bad)
  40ac93:	xchg   esi,eax
  40ac94:	pusha  
  40ac95:	cmp    al,0x95
  40ac97:	mov    dh,0x2
  40ac99:	bound  edi,QWORD PTR [edi]
  40ac9b:	cmp    BYTE PTR [ebx+ebx*2-0x6e],ah
  40ac9f:	fisubr WORD PTR [ecx]
  40aca1:	jge    0xbbadf6e8
  40aca7:	js     0x40ace8
  40aca9:	ror    bl,1
  40acab:	sub    DWORD PTR [ebp+ebx*2+0x3e],ebp
  40acaf:	sar    edi,1
  40acb1:	push   ecx
  40acb2:	fs dec ecx
  40acb4:	mov    al,0x70
  40acb6:	mov    ?,WORD PTR [esi-0x19684c5a]
  40acbc:	(bad)  [ecx+0x71ceae14]
  40acc2:	sti    
  40acc3:	xor    eax,0x550a3889
  40acc8:	dec    edx
  40acc9:	mov    DWORD PTR [esi+0x8],ebx
  40accc:	and    bh,BYTE PTR [edx+eax*8]
  40accf:	loopne 0x40aca6
  40acd1:	push   esi
  40acd2:	mov    BYTE PTR [esi+edx*1],bl
  40acd5:	jnp    0x40ad37
  40acd7:	adc    BYTE PTR [eax-0x40],al
  40acda:	sub    DWORD PTR [edx],ebx
  40acdc:	push   ebp
  40acdd:	xchg   ebx,eax
  40acde:	pop    ebp
  40acdf:	mov    DWORD PTR [ebp-0x23aaaad7],esi
  40ace5:	test   al,0x68
  40ace7:	or     dl,BYTE PTR [esi]
  40ace9:	popf   
  40acea:	mov    cl,0x56
  40acec:	imul   edx,DWORD PTR ds:0x168be071,0x6b
  40acf3:	mov    BYTE PTR [ebx+edi*1],bl
  40acf6:	xor    BYTE PTR [edi],ah
  40acf8:	push   edx
  40acf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acfa:	xor    BYTE PTR [edx-0x57d4e390],bh
  40ad00:	mov    esi,DWORD PTR [eax+0x6d5c7695]
  40ad06:	mov    DWORD PTR ds:0x80a5b7c1,0xe0029686
  40ad10:	cdq    
  40ad11:	pop    edi
  40ad12:	push   ds
  40ad13:	xchg   DWORD PTR ds:[esi],ecx
  40ad16:	cmp    eax,0xaf8a3b2
  40ad1b:	pop    esp
  40ad1c:	iret   
  40ad1d:	lds    edx,FWORD PTR [ecx+ebp*2-0x63]
  40ad21:	inc    eax
  40ad22:	mov    ch,0x9e
  40ad24:	jg     0x40ad5f
  40ad26:	fnstenv [edx-0x1aec7746]
  40ad2c:	sub    DWORD PTR [ebp+0x4a5a9d],esp
  40ad32:	pusha  
  40ad33:	cli    
  40ad34:	push   edi
  40ad35:	ret    0xf16c
  40ad38:	mov    al,ds:0xa123705d
  40ad3d:	out    dx,al
  40ad3e:	in     eax,dx
  40ad3f:	gs ret 0x32f8
  40ad43:	dec    esi
  40ad44:	clc    
  40ad45:	mov    ds:0xd668817,eax
  40ad4a:	ja     0x40accc
  40ad4c:	call   0x645d0eb
  40ad51:	lea    edi,[eax]
  40ad53:	push   esi
  40ad54:	pop    esp
  40ad55:	mov    BYTE PTR [ecx+0x32b79ad5],ch
  40ad5b:	jb     0x40ad89
  40ad5d:	fsubp  st(5),st
  40ad5f:	mov    ebp,0xb7eb7019
  40ad64:	adc    eax,DWORD PTR [edi+0x369d3109]
  40ad6a:	mov    dh,0xc4
  40ad6c:	inc    esp
  40ad6d:	clc    
  40ad6e:	jo     0x40adee
  40ad70:	or     ebp,DWORD PTR [ebx+0x1f]
  40ad73:	lods   al,BYTE PTR ds:[esi]
  40ad74:	outs   dx,DWORD PTR ds:[esi]
  40ad75:	xchg   esp,eax
  40ad76:	leave  
  40ad77:	mov    DWORD PTR [ebx+ebp*8+0x673c3a5],esi
  40ad7e:	adc    BYTE PTR [ebp-0x6f],cl
  40ad81:	sar    dl,1
  40ad83:	dec    esi
  40ad84:	sbb    ebp,esp
  40ad86:	fisub  WORD PTR [ebx]
  40ad88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad89:	mov    ds:0xbc2d4182,al
  40ad8e:	fnstenv [esi-0x2bd01766]
  40ad94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad95:	in     al,dx
  40ad96:	aaa    
  40ad97:	jns    0x40ad85
  40ad99:	xchg   edx,eax
  40ad9a:	sub    eax,0xbd53b211
  40ad9f:	sbb    al,0x2d
  40ada1:	sub    BYTE PTR [esp+ebx*8-0x36],ch
  40ada5:	mov    ecx,0x9392e999
  40adaa:	leave  
  40adab:	rcl    DWORD PTR [edx],cl
  40adad:	pop    ds
  40adae:	add    al,0x11
  40adb0:	dec    edi
  40adb1:	test   DWORD PTR [ecx-0x37],ecx
  40adb4:	mov    dl,0xbc
  40adb6:	jns    0x40ad41
  40adb8:	xchg   cl,cl
  40adba:	loopne 0x40ae32
  40adbc:	fcom   QWORD PTR [ecx]
  40adbe:	xchg   edx,eax
  40adbf:	sub    cl,BYTE PTR [edi-0x2a]
  40adc2:	xchg   BYTE PTR [esp+eax*8+0x354b72fb],bl
  40adc9:	mov    eax,ds:0x7230b394
  40adce:	pop    ds
  40adcf:	pop    edx
  40add0:	xchg   edx,eax
  40add1:	sbb    eax,0xde3b37f6
  40add6:	jne    0x40adab
  40add8:	adc    edi,edx
  40adda:	sbb    eax,0x6875cdb3
  40addf:	fisub  DWORD PTR ds:0x376609ee
  40ade5:	xor    esi,esi
  40ade7:	bound  ebp,QWORD PTR [edi]
  40ade9:	pop    esi
  40adea:	call   DWORD PTR [edi]
  40adec:	lahf   
  40aded:	pop    es
  40adee:	jle    0x40ade4
  40adf0:	add    BYTE PTR [ecx+edx*1],al
  40adf3:	mov    bl,0x5e
  40adf5:	sbb    ebp,DWORD PTR [eax+0x5b]
  40adf8:	test   edi,edx
  40adfa:	xchg   DWORD PTR [edi+0x51],ebp
  40adfd:	push   ebx
  40adfe:	sub    cl,BYTE PTR [ebx]
  40ae00:	add    eax,0x167fb30
  40ae05:	fild   WORD PTR [esi+0x7]
  40ae08:	fcomp  st(4)
  40ae0a:	jl     0x40ad9f
  40ae0c:	fcom   QWORD PTR [esp+ebx*8-0x69]
  40ae10:	in     al,dx
  40ae11:	cmp    ecx,DWORD PTR [edx+ebx*8+0x40]
  40ae15:	or     edx,DWORD PTR [ecx]
  40ae17:	cmp    DWORD PTR [ecx],ebx
  40ae19:	mov    al,0x57
  40ae1b:	sub    esi,DWORD PTR es:[edi+ebp*2]
  40ae1f:	in     al,dx
  40ae20:	out    dx,eax
  40ae21:	inc    esp
  40ae22:	out    dx,eax
  40ae23:	scas   al,BYTE PTR es:[edi]
  40ae24:	retf   
  40ae25:	push   ebp
  40ae26:	ror    ebx,cl
  40ae28:	pusha  
  40ae29:	out    0x2f,al
  40ae2b:	pop    DWORD PTR [ebx-0x23e7ecee]
  40ae31:	mov    ecx,0x9b8572ae
  40ae36:	jg     0x40adc1
  40ae38:	jbe    0x40ae5b
  40ae3a:	sbb    ebx,edx
  40ae3c:	(bad)  
  40ae3d:	cmp    edi,esp
  40ae3f:	scas   eax,DWORD PTR es:[edi]
  40ae40:	jp     0x40ae48
  40ae42:	rcl    DWORD PTR [ecx+0x6],0x3a
  40ae46:	adc    ebp,DWORD PTR ss:[ecx+ebp*2]
  40ae4a:	sub    DWORD PTR [esi-0x14],0x3c8ce9ff
  40ae51:	jge    0x40aeca
  40ae53:	rol    BYTE PTR [ebp-0x43],0x48
  40ae57:	xor    al,0xdf
  40ae59:	jb     0x40ae5b
  40ae5b:	dec    esp
  40ae5c:	push   es
  40ae5d:	jno    0x40ae23
  40ae5f:	int3   
  40ae60:	pop    ecx
  40ae61:	imul   ebp,DWORD PTR [edi],0xffffffe8
  40ae64:	xchg   edi,eax
  40ae65:	outs   dx,BYTE PTR ds:[esi]
  40ae66:	popf   
  40ae67:	test   BYTE PTR [esi-0x6d],0xab
  40ae6b:	call   0x990fa216
  40ae70:	lock mov WORD PTR [ebx+esi*1-0x1c],ss
  40ae75:	pop    ebx
  40ae76:	xor    cl,al
  40ae78:	dec    edi
  40ae79:	lea    esi,[ecx]
  40ae7b:	mov    eax,ds:0x858d5895
  40ae80:	fst    DWORD PTR [eax]
  40ae82:	sar    BYTE PTR [ecx+0x1cd2bca4],1
  40ae88:	ror    BYTE PTR [edi-0x2e],1
  40ae8b:	jo     0x40aefb
  40ae8d:	adc    ah,BYTE PTR [edi-0x6]
  40ae90:	xchg   ebx,eax
  40ae91:	jnp    0x40ae3d
  40ae93:	xor    ebp,0xc
  40ae96:	shl    esp,1
  40ae98:	mov    esi,0xa67ff9ed
  40ae9d:	adc    BYTE PTR [ecx+ebx*1-0xd9221a1],dh
  40aea4:	sbb    al,0x4e
  40aea6:	push   edi
  40aea7:	fs sbb eax,0xa8dabb17
  40aead:	inc    edi
  40aeae:	outs   dx,DWORD PTR ds:[esi]
  40aeaf:	mov    esi,0x68bfa98c
  40aeb4:	in     eax,dx
  40aeb5:	repnz xor edx,DWORD PTR [eax-0x2a]
  40aeb9:	js     0x40aef4
  40aebb:	gs xor al,0x76
  40aebe:	pop    edi
  40aebf:	and    al,0x86
  40aec1:	dec    ebp
  40aec2:	ja     0x40ae65
  40aec4:	fcmovnbe st,st(5)
  40aec6:	push   ss
  40aec7:	aas    
  40aec8:	not    BYTE PTR [ebx]
  40aeca:	xlat   BYTE PTR ds:[ebx]
  40aecb:	mov    cl,0x14
  40aecd:	in     al,0x0
  40aecf:	mov    BYTE PTR [eax-0x1a],bh
  40aed2:	jb     0x40af28
  40aed4:	push   ss
  40aed5:	sar    bh,0xf
  40aed8:	or     eax,0x6c69a206
  40aedd:	out    dx,eax
  40aede:	add    ebx,DWORD PTR [ecx+edx*1-0x79]
  40aee2:	xor    al,0x5c
  40aee4:	mov    al,ds:0x42e94674
  40aee9:	xchg   ebp,eax
  40aeea:	push   ds
  40aeeb:	fstp   TBYTE PTR [esi]
  40aeed:	aam    0x88
  40aeef:	pop    edx
  40aef0:	sbb    BYTE PTR [ebx-0x1b],0x26
  40aef4:	push   ecx
  40aef5:	and    BYTE PTR [esi+0x12],cl
  40aef8:	pop    eax
  40aef9:	jmp    0x40af43
  40aefb:	inc    ebp
  40aefc:	les    esi,FWORD PTR [eax]
  40aefe:	mov    ecx,0x393baced
  40af03:	xchg   esp,eax
  40af04:	jle    0x40aed9
  40af06:	pushf  
  40af07:	fld    TBYTE PTR [edx-0x9]
  40af0a:	in     al,0xb2
  40af0c:	das    
  40af0d:	inc    esi
  40af0e:	sub    ecx,DWORD PTR [esi-0x240358a5]
  40af14:	rcl    DWORD PTR [edx+ecx*4],1
  40af17:	fwait
  40af18:	imul   DWORD PTR ds:0x84361241
  40af1e:	fcmovne st,st(7)
  40af20:	fist   DWORD PTR [ecx+0x39f57be]
  40af26:	test   eax,0xfc3c444
  40af2b:	sahf   
  40af2c:	and    al,0x14
  40af2e:	adc    al,0xef
  40af30:	outs   dx,DWORD PTR ds:[esi]
  40af31:	daa    
  40af32:	sub    BYTE PTR [edx-0x19],bh
  40af35:	dec    ebx
  40af36:	sahf   
  40af37:	jbe    0x40afa1
  40af39:	cwde   
  40af3a:	fist   DWORD PTR [edi+0x46167405]
  40af40:	fisub  DWORD PTR [ecx+0x44]
  40af43:	rcr    BYTE PTR [edi],0xf6
  40af46:	pusha  
  40af47:	ja     0x40afb0
  40af49:	out    0x44,eax
  40af4b:	das    
  40af4c:	adc    eax,0xf3428e70
  40af51:	mov    fs,ebx
  40af53:	rcl    BYTE PTR [esi+0x36],cl
  40af56:	cmp    eax,0x50b53659
  40af5b:	dec    ebp
  40af5c:	inc    edi
  40af5d:	and    ebp,DWORD PTR [ecx]
  40af5f:	scas   eax,DWORD PTR es:[edi]
  40af60:	push   ecx
  40af61:	cdq    
  40af62:	jecxz  0x40afcb
  40af64:	stc    
  40af65:	popa   
  40af66:	xor    eax,0x5f21e85
  40af6b:	jns    0x40af16
  40af6d:	xchg   edi,eax
  40af6e:	mov    bl,0xa2
  40af70:	test   ch,bh
  40af72:	dec    esi
  40af73:	sti    
  40af74:	cwde   
  40af75:	xchg   edx,eax
  40af76:	cmp    al,0xf9
  40af78:	icebp  
  40af79:	arpl   di,dx
  40af7b:	pop    esp
  40af7c:	mov    al,ds:0x9deeabe3
  40af81:	aas    
  40af82:	sub    dl,BYTE PTR [edi]
  40af84:	and    edi,ebx
  40af86:	pop    ds
  40af87:	push   cs
  40af88:	les    esi,FWORD PTR [edi]
  40af8a:	das    
  40af8b:	fcmovbe st,st(0)
  40af8d:	push   ss
  40af8e:	inc    edx
  40af8f:	repz xor DWORD PTR [ecx+0x20],eax
  40af93:	aam    0x2c
  40af95:	std    
  40af96:	push   edx
  40af97:	ds jmp 0x5e5c:0x763bb317
  40af9f:	sub    BYTE PTR [esi+0xa387d71],al
  40afa5:	xchg   DWORD PTR [edx],edi
  40afa7:	mov    DWORD PTR [edx],0x2985bd86
  40afad:	sub    al,0xc8
  40afaf:	xor    BYTE PTR [esi+0x18],dh
  40afb2:	clc    
  40afb3:	cmc    
  40afb4:	stos   DWORD PTR es:[edi],eax
  40afb5:	add    al,0x7a
  40afb7:	sahf   
  40afb8:	(bad)  
  40afb9:	fldcw  WORD PTR [edx+0x368d6fee]
  40afbf:	ss std 
  40afc1:	fucomp st(7)
  40afc4:	xchg   ebp,eax
  40afc5:	lahf   
  40afc6:	ficom  WORD PTR [ebp-0x72]
  40afc9:	adc    al,0x66
  40afcb:	inc    edi
  40afcc:	imul   esi,DWORD PTR [eax],0xffffff94
  40afcf:	(bad)  
  40afd1:	xchg   BYTE PTR [edi],cl
  40afd3:	xor    bh,dh
  40afd5:	and    bl,cl
  40afd7:	retf   0x2b21
  40afda:	aam    0x48
  40afdc:	cmp    edx,DWORD PTR ds:0x3d94c089
  40afe2:	jecxz  0x40afa2
  40afe4:	adc    ebx,DWORD PTR [eax]
  40afe6:	sbb    dh,BYTE PTR ds:0xef3d8ac7
  40afec:	(bad)  
  40afed:	mov    al,BYTE PTR [edx-0x2f]
  40aff0:	push   ss
  40aff1:	imul   eax,DWORD PTR [ecx+eax*8+0x54a458f],0xffffffbf
  40aff9:	enter  0xb873,0xfd
  40affd:	push   ebp
  40affe:	loope  0x40b072
  40b000:	pop    eax
  40b001:	fwait
  40b002:	sub    BYTE PTR [edx-0x3cd1f292],ch
  40b008:	mov    ds:0x4968739b,al
  40b00d:	pop    ds
  40b00e:	mov    al,bl
  40b010:	retf   
  40b011:	cmp    eax,0x571cbff1
  40b016:	loopne 0x40b01f
  40b018:	push   esi
  40b019:	jecxz  0x40afcb
  40b01b:	mov    cl,0xf6
  40b01d:	cmp    ebx,ecx
  40b01f:	sbb    ah,BYTE PTR [esi+eax*4-0x69]
  40b023:	xor    BYTE PTR [ecx+0x18],bl
  40b026:	inc    esi
  40b027:	int3   
  40b028:	jae    0x40b06d
  40b02a:	jnp    0x40b04b
  40b02c:	sub    al,ch
  40b02e:	bound  ecx,QWORD PTR [edi+0x24]
  40b031:	(bad)  
  40b032:	sbb    eax,0x391f1408
  40b037:	aam    0xe6
  40b039:	sbb    DWORD PTR [ebx],ebp
  40b03b:	std    
  40b03c:	sar    DWORD PTR [edx-0x34199da4],cl
  40b042:	xor    DWORD PTR [esi-0x2a],ebx
  40b045:	sbb    ah,al
  40b047:	adc    BYTE PTR [esi+eiz*4+0x6a],al
  40b04b:	or     DWORD PTR [bx+di+0x6e26],esi
  40b050:	shl    BYTE PTR [esi],0x7b
  40b053:	jmp    0xc711c3ea
  40b058:	xchg   ebx,eax
  40b059:	lock dec BYTE PTR [edx-0x26]
  40b05d:	pop    esi
  40b05e:	push   cs
  40b05f:	sbb    BYTE PTR [ebp+0x11],dh
  40b062:	test   al,0xa0
  40b064:	pop    ebx
  40b065:	jae    0x40aff7
  40b067:	push   0x3208e07
  40b06c:	inc    edi
  40b06d:	sbb    eax,0xd94f7981
  40b072:	ins    BYTE PTR es:[edi],dx
  40b073:	xor    eax,edi
  40b075:	sbb    eax,0x3de0c867
  40b07a:	out    dx,eax
  40b07b:	(bad)  
  40b07c:	popf   
  40b07d:	pop    edx
  40b07e:	xchg   DWORD PTR [eax],ebp
  40b080:	popa   
  40b081:	loopne 0x40b0d8
  40b083:	mov    BYTE PTR [ebx-0x5d78a0bc],0xc3
  40b08a:	inc    ebx
  40b08b:	adc    eax,0x678fa4c1
  40b090:	es mov bh,0xde
  40b093:	not    DWORD PTR [ebx]
  40b095:	xchg   BYTE PTR [ebx+0x222b7175],dl
  40b09b:	mov    ebp,DWORD PTR [edi+0x34]
  40b09e:	(bad)  
  40b09f:	lods   al,BYTE PTR ds:[esi]
  40b0a0:	pop    esi
  40b0a1:	mov    bl,0x83
  40b0a3:	xor    al,0x11
  40b0a5:	pushf  
  40b0a6:	push   edx
  40b0a7:	mov    dl,0x35
  40b0a9:	adc    dh,dl
  40b0ab:	xchg   edx,eax
  40b0ac:	es cmp eax,0x5441592f
  40b0b2:	pop    edi
  40b0b3:	dec    esp
  40b0b4:	pop    eax
  40b0b5:	mov    bh,0xbe
  40b0b7:	into   
  40b0b8:	push   ss
  40b0b9:	inc    ecx
  40b0ba:	or     BYTE PTR [ebx],dh
  40b0bc:	cs out 0x10,eax
  40b0bf:	ins    BYTE PTR es:[edi],dx
  40b0c0:	mov    edx,0x15e248e0
  40b0c5:	fldenvw [ebp+0x5efa18c0]
  40b0cd:	not    BYTE PTR [eax-0x60]
  40b0d0:	add    ecx,esi
  40b0d2:	mov    ecx,0xf1d821b8
  40b0d7:	xchg   ebp,eax
  40b0d8:	xchg   edi,eax
  40b0d9:	or     bh,bh
  40b0db:	lods   al,BYTE PTR ds:[esi]
  40b0dd:	ins    BYTE PTR es:[edi],dx
  40b0de:	mov    dh,0x18
  40b0e0:	fsin   
  40b0e2:	fcmovnbe st,st(0)
  40b0e4:	push   edi
  40b0e5:	inc    edi
  40b0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0e7:	push   edi
  40b0e8:	das    
  40b0e9:	jp     0x40b08e
  40b0eb:	cs ja  0x40b10e
  40b0ee:	sbb    esi,DWORD PTR [edi+eax*2]
  40b0f1:	mov    esi,0xba0f7abc
  40b0f6:	xchg   esp,eax
  40b0f7:	(bad)  
  40b0f8:	mov    edx,0x59374783
  40b0fd:	or     eax,0xf8073db4
  40b102:	mov    edi,DWORD PTR [ebx]
  40b104:	xchg   ebp,eax
  40b105:	push   ecx
  40b106:	sbb    al,0x7c
  40b108:	fsubr  DWORD PTR [eax+0x41]
  40b10b:	stos   DWORD PTR es:[edi],eax
  40b10c:	sbb    edi,DWORD PTR [edi]
  40b10e:	mov    al,cl
  40b110:	imul   ebx,DWORD PTR [ebp+0x3],0xbfae3373
  40b117:	fsubr  QWORD PTR [esi]
  40b119:	cmp    BYTE PTR [ecx+0xe930f2b],dl
  40b11f:	push   edx
  40b120:	pop    ebx
  40b121:	mov    ebx,DWORD PTR [edx-0x42]
  40b124:	fdiv   QWORD PTR [esi+edi*2+0x71]
  40b128:	pop    esp
  40b129:	adc    edi,DWORD PTR [eax+0xa0798e3]
  40b12f:	scas   eax,DWORD PTR es:[edi]
  40b130:	mov    eax,ds:0xb21052ce
  40b135:	popa   
  40b136:	add    al,BYTE PTR [ecx]
  40b138:	add    ebx,DWORD PTR [eax+0x38db3309]
  40b13e:	or     dh,cl
  40b140:	push   edx
  40b141:	mov    eax,ds:0x19ad274a
  40b146:	adc    BYTE PTR [edx+0x673b58f9],0x59
  40b14d:	ret    
  40b14e:	lahf   
  40b14f:	add    al,0x4b
  40b151:	pop    edx
  40b152:	xlat   BYTE PTR ds:[ebx]
  40b153:	icebp  
  40b154:	xor    bl,BYTE PTR [si]
  40b157:	iret   
  40b158:	sbb    ebp,DWORD PTR [edi+0x2]
  40b15b:	pop    edx
  40b15c:	jp     0x40b0f9
  40b15e:	enter  0x4bc2,0xff
  40b162:	rol    ecx,1
  40b164:	ret    
  40b165:	shr    ch,1
  40b167:	xor    cl,BYTE PTR [ecx-0x37b3e5d1]
  40b16d:	xchg   bl,ch
  40b16f:	mov    edx,esi
  40b171:	sar    BYTE PTR [edi-0x1f],cl
  40b174:	jne    0x40b170
  40b176:	jo     0x40b1f6
  40b178:	mov    cl,0x5c
  40b17a:	std    
  40b17b:	pop    esi
  40b17c:	jle    0x40b1ca
  40b17e:	out    0x4c,al
  40b180:	lahf   
  40b181:	addr16 hlt 
  40b183:	mov    ecx,0x3dde85f6
  40b188:	adc    eax,DWORD PTR [esi+eiz*1+0x51]
  40b18c:	aam    0x94
  40b18e:	fwait
  40b18f:	pop    esi
  40b190:	add    DWORD PTR [edx+0x419e8cfe],edx
  40b196:	and    BYTE PTR [ecx],bh
  40b198:	add    ch,bl
  40b19a:	ss inc edi
  40b19c:	in     al,dx
  40b19d:	adc    cl,BYTE PTR [esi]
  40b19f:	xor    al,0x1c
  40b1a1:	pop    ds
  40b1a2:	out    dx,al
  40b1a3:	cmp    al,0x78
  40b1a5:	adc    eax,0xe6885382
  40b1aa:	test   DWORD PTR [edi+edi*8+0x1e],ecx
  40b1ae:	xchg   BYTE PTR [edi+0xd433e0b],ah
  40b1b4:	and    dl,BYTE PTR [eax-0x30]
  40b1b7:	jbe    0x40b19c
  40b1b9:	mov    ebx,0x91787dfd
  40b1be:	shl    DWORD PTR ds:0xe2749752,0x88
  40b1c5:	(bad)  
  40b1c6:	jmp    0x53a1:0xaf609d5c
  40b1cd:	dec    esi
  40b1ce:	mov    eax,ds:0xe5747e61
  40b1d3:	(bad)  
  40b1d4:	cmp    ecx,DWORD PTR [eax+0x1a]
  40b1d7:	xor    cl,ch
  40b1d9:	dec    edi
  40b1da:	push   ecx
  40b1db:	ss loopne 0x40b203
  40b1de:	mov    ds:0x88d74b87,al
  40b1e3:	push   ecx
  40b1e4:	call   0x9e59:0x790808f6
  40b1eb:	je     0x40b1b7
  40b1ed:	fs (bad) 
  40b1ef:	in     al,dx
  40b1f0:	scas   eax,DWORD PTR es:[edi]
  40b1f1:	xchg   DWORD PTR [eax+0xc],esp
  40b1f4:	mov    BYTE PTR [edi+0x54],bh
  40b1f7:	dec    edi
  40b1f8:	addr16 std 
  40b1fa:	ror    DWORD PTR [edx],0xb2
  40b1fd:	stc    
  40b1fe:	in     eax,dx
  40b1ff:	cmp    BYTE PTR [ecx+0x79980bd],0x85
  40b206:	jno    0x40b24f
  40b208:	jb     0x40b1ab
  40b20a:	sar    ecx,0x90
  40b20d:	test   al,0x13
  40b20f:	mov    esp,0xc5ac9c5d
  40b214:	add    BYTE PTR [edx],bh
  40b216:	nop
  40b217:	ret    0x28ea
  40b21a:	addr16 cwde 
  40b21c:	dec    ecx
  40b21d:	jb     0x40b227
  40b21f:	inc    esi
  40b220:	adc    al,0xe0
  40b222:	leave  
  40b223:	pop    ss
  40b224:	mov    ?,WORD PTR [edi+0x30af9b89]
  40b22a:	pusha  
  40b22b:	popf   
  40b22c:	or     dl,ch
  40b22e:	enter  0x8b13,0x9e
  40b232:	mov    eax,0xcfa65ea5
  40b237:	and    edx,DWORD PTR [esi]
  40b239:	xchg   sp,ax
  40b23b:	xorps  xmm6,xmm7
  40b23e:	or     eax,0x6d94cbd4
  40b243:	mov    esi,0x5e69acbd
  40b248:	call   0xeb0f:0xabdd3d24
  40b24f:	into   
  40b250:	mov    dl,0x85
  40b252:	sub    dh,bh
  40b254:	sbb    al,0x73
  40b256:	inc    esp
  40b257:	and    BYTE PTR [eax+0x5],ah
  40b25a:	add    ch,BYTE PTR [edi+0xc20a6f8]
  40b260:	and    eax,0xd95ef4f
  40b265:	jns    0x40b207
  40b267:	arpl   WORD PTR [ebx-0xd],bx
  40b26a:	mov    bh,0x16
  40b26c:	icebp  
  40b26d:	pop    ds
  40b26e:	xchg   ecx,eax
  40b26f:	xchg   ebp,eax
  40b270:	in     eax,0x58
  40b272:	test   BYTE PTR [esi+0xd],ah
  40b275:	push   ds
  40b276:	xchg   ecx,eax
  40b277:	sub    DWORD PTR [ecx-0x1f],0xffffffe6
  40b27b:	or     ah,0x43
  40b27e:	(bad)
  40b281:	jbe    0x40b292
  40b283:	add    cl,BYTE PTR [edi-0x337281f4]
  40b289:	xchg   ebp,eax
  40b28a:	addr16 mov dl,0x50
  40b28d:	(bad)  
  40b28e:	rcl    BYTE PTR [ecx-0xf],1
  40b291:	popa   
  40b292:	xchg   dl,ah
  40b294:	ret    
  40b295:	dec    edx
  40b296:	add    DWORD PTR [ebx-0x67d67619],esp
  40b29c:	xor    BYTE PTR [eax],cl
  40b29e:	hlt    
  40b29f:	mov    eax,ds:0xeab142c6
  40b2a4:	rcr    bl,0x3d
  40b2a7:	out    0x62,al
  40b2a9:	pop    ecx
  40b2aa:	ds dec edx
  40b2ac:	sbb    al,0xea
  40b2af:	aad    0xe3
  40b2b1:	scas   eax,DWORD PTR es:[edi]
  40b2b2:	sbb    al,0xa8
  40b2b4:	adc    ecx,DWORD PTR [edi+0x43]
  40b2b7:	cmp    cl,BYTE PTR [ebx+0x376dcaa8]
  40b2bd:	xchg   esi,eax
  40b2be:	test   DWORD PTR [ecx],ebp
  40b2c0:	adc    eax,0xa81f1421
  40b2c5:	pushf  
  40b2c6:	mov    bh,0xe3
  40b2c8:	stos   DWORD PTR es:[edi],eax
  40b2c9:	hlt    
  40b2ca:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b2cc:	pop    esp
  40b2cd:	push   ebx
  40b2ce:	(bad)  
  40b2cf:	cwde   
  40b2d0:	and    BYTE PTR [ebx+0x50a9699f],0x96
  40b2d7:	pusha  
  40b2d8:	repz ffreep st(6)
  40b2db:	packuswb mm7,QWORD PTR [edi+0x18]
  40b2df:	loop   0x40b29a
  40b2e1:	jns    0x40b281
  40b2e3:	xchg   esp,eax
  40b2e4:	xchg   esp,eax
  40b2e5:	cmp    ch,ah
  40b2e7:	adc    DWORD PTR [bp+di],esi
  40b2ea:	xchg   esp,eax
  40b2eb:	pop    ebx
  40b2ec:	and    esi,0x3f
  40b2ef:	mov    edi,0xc92067f9
  40b2f4:	xchg   BYTE PTR [edi-0x10acf735],cl
  40b2fa:	inc    edi
  40b2fb:	rol    DWORD PTR ds:0xb9b4b136,1
  40b301:	leave  
  40b302:	mov    BYTE PTR ds:[ebx+ebx*1],cl
  40b306:	jmp    ebp
  40b308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b309:	int    0xd2
  40b30b:	fsubr  DWORD PTR [edi-0x3d906bfd]
  40b311:	fs xchg ebp,eax
  40b313:	cdq    
  40b314:	in     eax,0x65
  40b316:	popf   
  40b317:	push   eax
  40b318:	jno    0x40b399
  40b31a:	jne    0x40b2ac
  40b31c:	sbb    esp,DWORD PTR [ebx-0x29]
  40b31f:	nop
  40b320:	lock jmp 0x40b3a2
  40b323:	jle    0x40b33f
  40b325:	enter  0x1eae,0xfd
  40b329:	loop   0x40b35c
  40b32b:	loopne 0x40b38a
  40b32d:	xor    DWORD PTR [esi-0x60b07d99],edi
  40b333:	call   0x6769942e
  40b338:	dec    edi
  40b339:	dec    esp
  40b33a:	leave  
  40b33b:	daa    
  40b33c:	pop    eax
  40b33d:	xchg   esp,eax
  40b33e:	(bad)  
  40b33f:	jns    0x40b351
  40b341:	loop   0x40b3bd
  40b343:	mov    BYTE PTR [edi+0x3d9da06a],0xad
  40b34a:	xchg   ebx,eax
  40b34b:	(bad)  
  40b34c:	mov    ds:0xfe2c9af7,eax
  40b351:	xchg   esi,eax
  40b352:	add    ebx,ecx
  40b354:	ins    DWORD PTR es:[edi],dx
  40b355:	shl    BYTE PTR [ebx],0xbc
  40b358:	lds    esp,FWORD PTR [ecx+0x4b645fe]
  40b35e:	sti    
  40b35f:	sub    ah,0x2a
  40b362:	add    eax,0xb26fad8f
  40b367:	pusha  
  40b368:	pusha  
  40b369:	outs   dx,DWORD PTR ds:[esi]
  40b36a:	push   cs
  40b36b:	or     al,0x2f
  40b36d:	mov    DWORD PTR [ecx],ebp
  40b36f:	mov    eax,0x7426a27d
  40b374:	cmp    BYTE PTR [edx-0x517b434e],ch
  40b37a:	pop    ds
  40b37b:	dec    esp
  40b37c:	and    bl,BYTE PTR [edx]
  40b37e:	jne    0x40b3e5
  40b380:	cwde   
  40b381:	xchg   edx,eax
  40b382:	int    0xde
  40b384:	or     ch,BYTE PTR [ecx+edx*8+0x1b498e75]
  40b38b:	fisubr DWORD PTR [ebx-0x3457afdd]
  40b391:	cmp    edi,DWORD PTR [edx+0x77]
  40b394:	push   edi
  40b395:	xchg   ebp,eax
  40b396:	xchg   esi,eax
  40b397:	jl     0x40b40d
  40b399:	pop    edi
  40b39a:	pop    es
  40b39b:	push   edx
  40b39c:	cdq    
  40b39d:	adc    al,0x85
  40b39f:	xor    DWORD PTR [edi],edx
  40b3a1:	mov    DWORD PTR [bp+si-0x41],esi
  40b3a5:	inc    edi
  40b3a6:	retf   
  40b3a7:	mov    edi,0x15d28572
  40b3ac:	mov    edi,DWORD PTR [edx+0x51f65131]
  40b3b2:	fwait
  40b3b3:	adc    ebx,DWORD PTR [edx-0x6877a9fc]
  40b3b9:	pop    edi
  40b3ba:	or     bh,BYTE PTR [esi-0x5e7a5b5b]
  40b3c0:	mov    DWORD PTR [edx-0x57],ebp
  40b3c3:	int    0x91
  40b3c5:	jno    0x40b3cf
  40b3c7:	adc    al,0xce
  40b3c9:	pusha  
  40b3ca:	or     DWORD PTR [edi+0x22e786a9],eax
  40b3d0:	lds    edi,FWORD PTR [esi+0x440d8e01]
  40b3d6:	mov    es:0x66a8a54e,al
  40b3dc:	imul   eax,DWORD PTR [edi-0x10],0x66
  40b3e0:	jmp    0x40b3cc
  40b3e2:	mov    eax,ds:0xf7333f89
  40b3e7:	push   ecx
  40b3e8:	in     al,dx
  40b3e9:	out    dx,al
  40b3ea:	inc    eax
  40b3eb:	inc    esp
  40b3ec:	or     BYTE PTR [ebx],ah
  40b3ee:	inc    ebx
  40b3ef:	outs   dx,DWORD PTR ds:[esi]
  40b3f0:	xor    DWORD PTR [eax-0x7825045],0x5a
  40b3f7:	popa   
  40b3f8:	mov    ebx,0xedb99b0d
  40b3fd:	cld    
  40b3fe:	adc    al,0xa7
  40b400:	cmp    DWORD PTR [ebp+0x27b5a8c2],ebp
  40b406:	inc    ebp
  40b407:	ja     0x40b3c8
  40b409:	add    bh,BYTE PTR [edi-0x3da09a7]
  40b40f:	cmp    eax,0x289859f6
  40b414:	js     0x40b3fe
  40b416:	push   ss
  40b417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b418:	inc    edx
  40b419:	pop    edx
  40b41a:	aaa    
  40b41b:	push   0xdea82150
  40b420:	into   
  40b421:	mov    ah,dh
  40b423:	cmc    
  40b424:	inc    edi
  40b425:	mov    ch,0x65
  40b427:	retf   
  40b428:	test   DWORD PTR [edi],0xea029c64
  40b42e:	into   
  40b42f:	push   eax
  40b430:	ret    
  40b431:	shr    BYTE PTR [ebx],cl
  40b433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b434:	and    al,al
  40b436:	sar    al,1
  40b438:	jp     0x40b4a5
  40b43a:	aad    0x78
  40b43c:	pop    esi
  40b43d:	scas   eax,DWORD PTR es:[edi]
  40b43e:	jae    0x40b436
  40b440:	xchg   ecx,eax
  40b441:	pop    ebp
  40b442:	mov    ebp,0x6085e570
  40b447:	ret    0x6533
  40b44a:	lea    ebp,[eax-0x48970d60]
  40b450:	jp     0x40b4ad
  40b452:	cmp    dh,BYTE PTR [ecx+0xa45ea40]
  40b458:	or     DWORD PTR [ebx+0x4c881d6b],ebx
  40b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45f:	sar    BYTE PTR [esi+0x7c],1
  40b462:	mov    al,0xfb
  40b464:	cli    
  40b465:	jnp    0x40b49b
  40b467:	jg     0x40b476
  40b469:	retf   
  40b46a:	clc    
  40b46b:	pop    ecx
  40b46c:	(bad)  
  40b46d:	mov    ds:0x1030cbca,eax
  40b472:	out    0x5e,al
  40b474:	or     ecx,ebp
  40b476:	rol    BYTE PTR [ecx+0x5e91163],1
  40b47c:	xlat   BYTE PTR ds:[ebx]
  40b47d:	jno    0x40b408
  40b47f:	std    
  40b480:	mov    ah,0xfa
  40b482:	xchg   ebx,eax
  40b483:	cdq    
  40b484:	iret   
  40b485:	fbld   TBYTE PTR [eax]
  40b487:	pushf  
  40b488:	pop    ds
  40b489:	pop    ebx
  40b48a:	out    0x19,al
  40b48c:	int3   
  40b48d:	adc    eax,esi
  40b48f:	add    ebp,DWORD PTR [eax+0x4e0241de]
  40b495:	(bad)  
  40b496:	int3   
  40b497:	pop    eax
  40b498:	(bad)  
  40b499:	fstp   st(4)
  40b49b:	sub    BYTE PTR [ebp+esi*8-0x2ba8d43b],al
  40b4a2:	adc    al,ah
  40b4a4:	imul   DWORD PTR [esi+0x1d47f32c]
  40b4aa:	jmp    0x3e04:0x2df82463
  40b4b1:	mov    ebp,0x40701b52
  40b4b6:	xor    al,0xcf
  40b4b8:	xlat   BYTE PTR ds:[ebx]
  40b4b9:	aad    0xb7
  40b4bb:	push   0x97b4bd06
  40b4c0:	push   ebp
  40b4c1:	cmp    dh,0xd
  40b4c4:	ins    BYTE PTR es:[edi],dx
  40b4c5:	mov    DWORD PTR [eax+0xb],esp
  40b4c8:	dec    esp
  40b4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4ca:	pop    edi
  40b4cb:	sub    BYTE PTR [esi-0x61],ah
  40b4ce:	add    esp,ebx
  40b4d0:	ja     0x40b505
  40b4d2:	ret    0x21e3
  40b4d5:	mov    eax,0xd096c8e6
  40b4da:	jb     0x40b46e
  40b4dc:	ret    
  40b4dd:	inc    edx
  40b4de:	faddp  st(6),st
  40b4e0:	clc    
  40b4e1:	aad    0x21
  40b4e3:	loope  0x40b544
  40b4e5:	sahf   
  40b4e6:	fwait
  40b4e7:	jne    0x40b48f
  40b4e9:	xlat   BYTE PTR ds:[ebx]
  40b4ea:	jmp    0xea99f5e
  40b4ef:	test   BYTE PTR [eax+esi*2+0x4b],ah
  40b4f3:	mov    esi,0xcdd8d37
  40b4f8:	push   ds
  40b4f9:	push   edi
  40b4fa:	jp     0x40b55e
  40b4fc:	pop    ebx
  40b4fd:	add    al,0x91
  40b4ff:	push   esp
  40b500:	out    0xf2,eax
  40b502:	(bad)  
  40b503:	dec    BYTE PTR [edi+0x19]
  40b506:	scas   eax,DWORD PTR es:[edi]
  40b507:	sub    eax,0x62b41fc3
  40b50c:	sbb    DWORD PTR [ecx+0x3f],ebp
  40b50f:	daa    
  40b510:	mov    ecx,gs
  40b512:	fimul  DWORD PTR [ebx-0x358c44b2]
  40b518:	cmp    DWORD PTR [ebx],0x7c
  40b51b:	out    dx,al
  40b51c:	lods   eax,DWORD PTR ds:[esi]
  40b51d:	push   es
  40b51e:	mov    BYTE PTR [ebx],bl
  40b520:	arpl   WORD PTR [edi-0xf],bp
  40b523:	add    DWORD PTR [eax-0x31],esi
  40b526:	dec    esp
  40b527:	cmp    dh,ch
  40b529:	mov    edx,0x5bbc8e40
  40b52e:	and    eax,0x92f5c872
  40b533:	jb     0x40b503
  40b535:	loope  0x40b565
  40b537:	(bad)  
  40b538:	not    edx
  40b53a:	jb     0x40b4cb
  40b53c:	ror    BYTE PTR [edi],cl
  40b53e:	and    bh,dl
  40b540:	mov    esi,0x8da2e1e
  40b545:	jno    0x40b51c
  40b547:	popf   
  40b548:	aad    0x11
  40b54a:	fidivr DWORD PTR [ecx+0x71]
  40b54d:	das    
  40b54e:	mov    al,0x2b
  40b550:	push   ebp
  40b551:	adc    eax,DWORD PTR [ecx+ebx*2-0x1940bf59]
  40b558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b559:	(bad)  
  40b55a:	js     0x40b5d9
  40b55c:	loope  0x40b4ed
  40b55e:	mov    ?,WORD PTR [edx-0x51]
  40b561:	retf   
  40b562:	jmp    0xb89de60
  40b567:	daa    
  40b568:	icebp  
  40b569:	pop    esi
  40b56a:	inc    esp
  40b56b:	and    ecx,edx
  40b56d:	out    dx,eax
  40b56e:	sbb    DWORD PTR [ebp+0x15fed9c3],ecx
  40b574:	push   0xfdf5aee3
  40b579:	test   BYTE PTR [ebp+0x188d2cb6],dh
  40b57f:	ficomp DWORD PTR [ebx+edx*2+0x34f7efdc]
  40b586:	push   0x35aa06cf
  40b58b:	mov    al,0xd5
  40b58d:	inc    esi
  40b58e:	dec    ebp
  40b58f:	add    eax,0x48b2b856
  40b594:	mov    esp,0xf795d13d
  40b599:	imul   esp,DWORD PTR [esi],0xffffffa3
  40b59c:	jl     0x40b528
  40b59e:	push   ecx
  40b59f:	(bad)  
  40b5a0:	mov    ch,0x37
  40b5a2:	sti    
  40b5a3:	xchg   esi,eax
  40b5a4:	xchg   ebp,eax
  40b5a5:	jmp    0xd7867967
  40b5aa:	jb     0x40b594
  40b5ac:	add    eax,0x21711327
  40b5b1:	mov    esp,0x9f597106
  40b5b6:	mov    edx,0x74f15fa5
  40b5bb:	or     al,0x9d
  40b5bd:	aam    0xac
  40b5bf:	popf   
  40b5c0:	test   DWORD PTR [ebp+0x74],ebp
  40b5c3:	int    0x36
  40b5c5:	mov    eax,0xab3ae033
  40b5ca:	idiv   BYTE PTR [edi+0x2fc89ccc]
  40b5d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d1:	rcl    edi,0x60
  40b5d4:	pop    esi
  40b5d5:	sbb    eax,0x24351825
  40b5da:	aaa    
  40b5db:	xor    al,0x42
  40b5dd:	and    BYTE PTR [edx],ch
  40b5df:	cdq    
  40b5e0:	outs   dx,DWORD PTR ds:[esi]
  40b5e1:	lahf   
  40b5e2:	dec    ebp
  40b5e3:	push   edx
  40b5e4:	jg     0x40b5ff
  40b5e6:	push   edx
  40b5e7:	dec    edi
  40b5e8:	mov    edx,0xd9b4287f
  40b5ed:	ins    DWORD PTR es:[edi],dx
  40b5ee:	out    0xe7,eax
  40b5f0:	and    dl,bl
  40b5f2:	and    eax,0xaa38efd4
  40b5f7:	sbb    BYTE PTR [edx],dl
  40b5f9:	test   ch,cl
  40b5fb:	clc    
  40b5fc:	pop    ss
  40b5fd:	xchg   BYTE PTR [ebx+0x7a],dh
  40b600:	retf   
  40b601:	and    bh,ah
  40b603:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b605:	in     eax,0x18
  40b607:	and    eax,edi
  40b609:	dec    ebp
  40b60a:	mov    ebx,0x7a2fe64
  40b60f:	push   ebx
  40b610:	imul   eax,esp,0xa8814545
  40b616:	mov    al,ds:0xedd5903b
  40b61b:	ret    0x86d7
  40b61e:	dec    esp
  40b61f:	ss push ds
  40b621:	pusha  
  40b622:	and    edi,ecx
  40b624:	popa   
  40b625:	stc    
  40b626:	mov    ds:0x8f0df451,eax
  40b62b:	xor    ah,al
  40b62d:	push   edx
  40b62e:	scas   al,BYTE PTR es:[edi]
  40b62f:	mov    dl,0xa
  40b631:	inc    eax
  40b632:	jo     0x40b65c
  40b634:	mov    esp,0x3d7a61e9
  40b639:	jecxz  0x40b624
  40b63b:	dec    ecx
  40b63c:	mov    ecx,0xd7cf0565
  40b641:	mov    eax,ds:0x1c371ab1
  40b646:	push   esp
  40b647:	retf   0x26b5
  40b64a:	call   0x8fdc456d
  40b64f:	stos   BYTE PTR es:[edi],al
  40b650:	mul    DWORD PTR [ebx-0x8]
  40b653:	mov    ebx,0xe8b3ec59
  40b658:	pop    edi
  40b659:	adc    eax,0x22175701
  40b65e:	adc    DWORD PTR [edx],edi
  40b660:	mul    DWORD PTR [esi-0x56]
  40b663:	and    ebp,DWORD PTR [esi+ebx*2-0xe]
  40b667:	sti    
  40b668:	xchg   esp,eax
  40b669:	push   ebx
  40b66a:	and    esi,ecx
  40b66c:	push   es
  40b66d:	mov    esi,0x5c9856b8
  40b672:	loop   0x40b6c3
  40b674:	rcl    BYTE PTR [edi+edx*8+0x29],cl
  40b678:	call   FWORD PTR [ebp+0x5f50ec9a]
  40b67e:	xchg   ecx,eax
  40b67f:	xor    BYTE PTR [edi+ebp*2],bh
  40b682:	fxam   
  40b684:	dec    esi
  40b685:	add    al,0x5f
  40b687:	add    edx,eax
  40b689:	fsubr  QWORD PTR [edx-0x282a2ee8]
  40b68f:	cmp    BYTE PTR [eax-0x3ab66c98],bh
  40b695:	push   es
  40b696:	mov    cl,0x1
  40b698:	push   edi
  40b699:	mov    edx,0xa3333733
  40b69e:	xchg   esp,eax
  40b69f:	fld    DWORD PTR [eax-0x45c341db]
  40b6a5:	sbb    al,0xc4
  40b6a7:	js     0x40b65b
  40b6a9:	push   cs
  40b6aa:	xor    al,0x1f
  40b6ac:	test   ebp,0x944d84d6
  40b6b2:	or     ecx,ecx
  40b6b4:	mov    al,ds:0x94646a48
  40b6b9:	out    0x8b,eax
  40b6bb:	shr    DWORD PTR [esi-0x2d],cl
  40b6be:	adc    dl,BYTE PTR [edi]
  40b6c0:	jmp    0x9019:0xd061edf5
  40b6c7:	and    al,0xcb
  40b6c9:	ins    BYTE PTR es:[edi],dx
  40b6ca:	pop    esp
  40b6cb:	push   ebp
  40b6cc:	sub    BYTE PTR [esi+0x7e],bl
  40b6cf:	pop    ds
  40b6d0:	adc    DWORD PTR [ecx-0xfd1e771],edx
  40b6d6:	jmp    0x3cd9:0x66475ae5
  40b6dd:	xor    BYTE PTR ds:0x37949697,ah
  40b6e3:	xchg   edx,eax
  40b6e4:	jne    0x40b6ea
  40b6e6:	and    esi,ecx
  40b6e8:	cs xor al,0xb2
  40b6eb:	and    edx,DWORD PTR [ebx]
  40b6ed:	sbb    ch,BYTE PTR [eax]
  40b6ef:	mov    WORD PTR [ebp+0x31d94fc6],?
  40b6f5:	bound  ebx,QWORD PTR [ecx+0x7f034616]
  40b6fb:	push   edi
  40b6fc:	inc    eax
  40b6fd:	mov    DWORD PTR [edx+0x46],ecx
  40b700:	pop    ebp
  40b701:	das    
  40b702:	out    dx,al
  40b703:	daa    
  40b704:	ret    0xcaad
  40b707:	ret    0x167a
  40b70a:	lea    eax,[esi+0x7d]
  40b70d:	adc    eax,0x19d27c2a
  40b712:	fnsave [edi-0x69]
  40b715:	push   edi
  40b716:	in     eax,0x59
  40b718:	(bad)  
  40b719:	test   eax,0x26b3b3db
  40b71e:	pop    ds
  40b71f:	in     al,dx
  40b720:	jg     0x40b6bd
  40b722:	sub    al,0x72
  40b724:	dec    ebp
  40b725:	int    0x15
  40b727:	in     eax,0xbe
  40b729:	in     al,0x19
  40b72b:	and    al,0x4f
  40b72d:	inc    al
  40b72f:	push   ebp
  40b730:	(bad)  
  40b731:	xchg   edi,eax
  40b732:	lock push ecx
  40b734:	mov    ds:0xb9d76714,eax
  40b739:	pop    edi
  40b73a:	xlat   BYTE PTR ds:[ebx]
  40b73b:	ins    BYTE PTR es:[edi],dx
  40b73c:	adc    DWORD PTR [edx+0x1],ebp
  40b73f:	push   ecx
  40b740:	shl    DWORD PTR [edx+0x7b4805a4],cl
  40b746:	pop    ebx
  40b747:	mov    edi,0x93a9712c
  40b74c:	fadd   DWORD PTR [esp+esi*4+0x7c]
  40b751:	cwde   
  40b752:	push   es
  40b753:	pop    esi
  40b754:	cs dec ecx
  40b756:	jge    0x40b7c6
  40b758:	pop    eax
  40b759:	sub    bl,0x2e
  40b75c:	inc    edi
  40b75d:	test   al,0x60
  40b75f:	sub    BYTE PTR [ecx+0x4a],0x7
  40b763:	cwde   
  40b764:	sbb    DWORD PTR [ecx],0x63bb3ac1
  40b76a:	mov    ds:0x8615c0ed,al
  40b76f:	mov    ah,0xcf
  40b771:	sbb    ecx,edi
  40b773:	pusha  
  40b774:	popa   
  40b775:	in     al,0x10
  40b777:	or     edi,0x67
  40b77a:	cmp    eax,0x28d1b555
  40b77f:	inc    edx
  40b780:	add    bh,BYTE PTR ds:0x98725d59
  40b786:	and    ecx,DWORD PTR [esi-0x6c]
  40b789:	in     al,0x4e
  40b78b:	sbb    esi,DWORD PTR [ecx+esi*1+0x151b2463]
  40b792:	test   edx,ebx
  40b794:	mov    edx,0xf07417a5
  40b799:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b79b:	xor    edx,DWORD PTR [edx]
  40b79d:	xor    BYTE PTR [esi],ch
  40b79f:	daa    
  40b7a0:	jle    0x40b736
  40b7a2:	sahf   
  40b7a3:	imul   ecx,DWORD PTR [ecx],0xffffff8a
  40b7a6:	aas    
  40b7a7:	cmc    
  40b7a8:	push   esi
  40b7a9:	pop    es
  40b7aa:	pop    esi
  40b7ab:	dec    ebx
  40b7ac:	pop    ss
  40b7ad:	jb     0x40b7fb
  40b7af:	mov    eax,0x1dd3005f
  40b7b4:	dec    ebp
  40b7b5:	in     eax,0x3a
  40b7b7:	mov    bl,0x45
  40b7b9:	out    dx,eax
  40b7ba:	outs   dx,BYTE PTR ds:[esi]
  40b7bb:	pop    edx
  40b7bc:	dec    eax
  40b7bd:	fsub   DWORD PTR [ebp-0x78ffd511]
  40b7c3:	mov    edx,gs
  40b7c5:	pop    ebp
  40b7c6:	adc    al,0x47
  40b7c8:	out    dx,al
  40b7c9:	cli    
  40b7ca:	jb     0x40b7a3
  40b7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7cd:	ins    BYTE PTR es:[edi],dx
  40b7ce:	lds    ecx,FWORD PTR [ecx+edi*1+0x54]
  40b7d2:	xor    eax,DWORD PTR [eax+ecx*8]
  40b7d5:	adc    ecx,eax
  40b7d7:	int    0xde
  40b7d9:	xchg   edi,eax
  40b7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7db:	or     eax,0x8b7e763d
  40b7e0:	cmp    bl,bl
  40b7e2:	push   esi
  40b7e3:	addr16 mov ch,0x3f
  40b7e6:	imul   esi,ebx,0x26
  40b7e9:	ror    DWORD PTR [edx],1
  40b7eb:	inc    edx
  40b7ec:	xchg   ebx,eax
  40b7ed:	add    DWORD PTR [ecx+0x2e98d360],ebx
  40b7f3:	stos   DWORD PTR es:[edi],eax
  40b7f4:	sub    ebx,DWORD PTR [eax+edx*2-0x77]
  40b7f8:	push   ebx
  40b7f9:	(bad)  
  40b7fa:	pop    esp
  40b7fb:	mov    eax,0x7b4cab3d
  40b800:	adc    bl,al
  40b802:	fcmovb st,st(2)
  40b804:	cmp    eax,0x4fd37ec6
  40b809:	les    edi,FWORD PTR [eax]
  40b80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b80c:	into   
  40b80d:	inc    esi
  40b80e:	and    DWORD PTR [ecx-0x4e],ebp
  40b811:	mov    al,ds:0xd5108ad6
  40b816:	jecxz  0x40b7c2
  40b818:	outs   dx,DWORD PTR ds:[esi]
  40b819:	xor    ebp,DWORD PTR [edx+0x7d]
  40b81c:	sub    dh,ah
  40b81e:	adc    BYTE PTR [edi+ecx*4+0x68],dh
  40b822:	dec    ebx
  40b823:	fidiv  WORD PTR [eax+0x41]
  40b826:	inc    esp
  40b827:	xor    dh,al
  40b829:	cmc    
  40b82a:	lods   al,BYTE PTR ds:[esi]
  40b82b:	push   edi
  40b82c:	and    al,BYTE PTR [eax+0x7f6cc1d9]
  40b832:	dec    eax
  40b833:	fld    QWORD PTR [eax-0x30]
  40b836:	xchg   ecx,eax
  40b837:	(bad)  
  40b838:	(bad)  [ecx-0x67]
  40b83b:	sbb    eax,edx
  40b83d:	hlt    
  40b83e:	xchg   edi,eax
  40b83f:	and    BYTE PTR [eax],al
  40b841:	(bad)  [esp+esi*1]
  40b844:	xor    bl,BYTE PTR [eax+0x779ad062]
  40b84a:	cmp    BYTE PTR [esi+0x38],bh
  40b84d:	mov    ebp,DWORD PTR [edx-0x555bfa9f]
  40b853:	(bad)  
  40b854:	push   eax
  40b855:	push   esi
  40b856:	(bad)
  40b859:	pop    ebx
  40b85a:	ja     0x40b815
  40b85c:	mov    eax,ds:0xd01d0ea9
  40b861:	xor    esi,ebx
  40b863:	pop    esp
  40b864:	sar    BYTE PTR [eax+0x2ce1453e],1
  40b86a:	mov    cl,0xb3
  40b86c:	retf   0xc187
  40b86f:	push   ebp
  40b870:	add    bh,ch
  40b872:	call   0x13b172a5
  40b877:	stc    
  40b878:	ret    
  40b879:	ja     0x40b88c
  40b87b:	arpl   WORD PTR [eax],bx
  40b87d:	push   0xa45aa1a6
  40b882:	adc    ah,ch
  40b884:	and    DWORD PTR [ebp-0x4962ec7a],esp
  40b88a:	sahf   
  40b88b:	push   ds
  40b88c:	adc    ch,BYTE PTR gs:[ecx-0x6e]
  40b890:	stc    
  40b891:	retf   
  40b892:	fcomi  st,st(7)
  40b894:	sti    
  40b895:	sahf   
  40b896:	ficom  DWORD PTR [edx]
  40b898:	or     al,0x6a
  40b89a:	test   al,0x76
  40b89c:	push   ebx
  40b89d:	dec    ebx
  40b89e:	mov    dl,0x8d
  40b8a0:	mov    ch,0x6c
  40b8a2:	pop    es
  40b8a3:	outs   dx,DWORD PTR ds:[esi]
  40b8a4:	daa    
  40b8a5:	iret   
  40b8a6:	cwde   
  40b8a7:	mov    al,ds:0x980039be
  40b8ac:	fs test bh,dl
  40b8af:	mov    edx,0x3cd93dad
  40b8b4:	pop    ebp
  40b8b5:	push   ecx
  40b8b6:	push   ecx
  40b8b7:	aam    0x14
  40b8b9:	push   esi
  40b8ba:	jle    0x40b878
  40b8bc:	inc    esp
  40b8bd:	(bad)  
  40b8be:	aad    0x84
  40b8c0:	outs   dx,BYTE PTR ds:[esi]
  40b8c1:	sub    bh,BYTE PTR [edi+0x54]
  40b8c4:	adc    BYTE PTR [edi+0x4c],bl
  40b8c7:	lods   al,BYTE PTR ds:[esi]
  40b8c8:	jnp    0x40b892
  40b8ca:	xor    edi,ecx
  40b8cc:	mov    WORD PTR [eax+0xc],gs
  40b8cf:	ja     0x40b855
  40b8d1:	sti    
  40b8d2:	out    0xd4,al
  40b8d4:	fnsave [esi]
  40b8d6:	je     0x40b8de
  40b8d8:	mov    fs:0x4a880919,ax
  40b8df:	mov    dl,0x9b
  40b8e1:	push   esp
  40b8e2:	leave  
  40b8e3:	nop
  40b8e4:	push   edi
  40b8e5:	je     0x40b8e7
  40b8e7:	pop    edx
  40b8e8:	int    0x1d
  40b8ea:	in     al,0xf6
  40b8ec:	mov    al,0xc5
  40b8ee:	ret    0x8279
  40b8f1:	sbb    BYTE PTR [edi+0x4ecaa139],ah
  40b8f7:	sbb    cl,BYTE PTR [esi-0x4e]
  40b8fa:	fst    QWORD PTR [ecx-0x69c9b088]
  40b900:	sbb    eax,0xeeb2fe51
  40b905:	adc    edi,0xf
  40b908:	pusha  
  40b909:	jbe    0x40b934
  40b90b:	add    eax,0xc268a9f5
  40b910:	xchg   ecx,eax
  40b911:	jnp    0x40b942
  40b913:	popf   
  40b914:	(bad)  
  40b915:	push   esp
  40b916:	adc    al,0xe3
  40b918:	int3   
  40b919:	inc    eax
  40b91a:	and    eax,0x22d1ba65
  40b91f:	fdiv   QWORD PTR [ebx+0x48dba22a]
  40b925:	fst    QWORD PTR [eax+0x61d039f2]
  40b92b:	aas    
  40b92c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b92d:	nop
  40b92e:	lds    eax,FWORD PTR [ebp+eax*4+0x4b0b9a2f]
  40b935:	jnp    0x40b8bd
  40b937:	fwait
  40b938:	in     eax,dx
  40b939:	pop    eax
  40b93a:	test   BYTE PTR [eax+edx*2+0x1c499b2a],0x6f
  40b942:	sahf   
  40b943:	into   
  40b944:	and    DWORD PTR [ecx-0x45346e94],ebp
  40b94a:	mov    dl,0xbd
  40b94c:	div    DWORD PTR [edi-0x6e]
  40b94f:	mov    ah,0xac
  40b951:	push   ecx
  40b952:	jnp    0x40b90b
  40b954:	mov    ch,0x62
  40b956:	out    dx,eax
  40b957:	jne    0x40b900
  40b959:	and    DWORD PTR [edx-0x491586dc],ebp
  40b95f:	daa    
  40b960:	stos   BYTE PTR es:[edi],al
  40b961:	fdiv   QWORD PTR [ebx+ebx*1]
  40b964:	imul   ebx,DWORD PTR [edx-0x9],0xffffff82
  40b968:	ds out dx,eax
  40b96a:	rol    DWORD PTR [eax+0x26],1
  40b96d:	(bad)  
  40b96e:	out    dx,al
  40b96f:	sbb    eax,esp
  40b971:	scas   al,BYTE PTR es:[edi]
  40b972:	fucomip st,st(5)
  40b974:	mov    ecx,0xd7ec943c
  40b979:	pop    edi
  40b97a:	mov    ds:0x81a275d,eax
  40b97f:	sub    edx,DWORD PTR [edi-0x6b9951b3]
  40b985:	xchg   edx,eax
  40b987:	mov    BYTE PTR [esi-0xe],cl
  40b98a:	fist   DWORD PTR [ebp+eax*1+0x21a12c73]
  40b991:	lea    ebp,[edx+0x19b18c0f]
  40b997:	cmp    edi,edx
  40b999:	jns    0x40b92f
  40b99b:	sub    al,0xe1
  40b99d:	add    eax,0x892f9a07
  40b9a2:	call   0x9c4614f5
  40b9a7:	jl     0x40b9e8
  40b9a9:	sbb    DWORD PTR [ebx],ebx
  40b9ab:	out    0x9c,eax
  40b9ad:	test   al,0x4a
  40b9af:	shl    BYTE PTR [eax+edx*1+0x4f],1
  40b9b3:	and    BYTE PTR [ebx+esi*1],al
  40b9b6:	mov    cl,0x36
  40b9b8:	push   edi
  40b9b9:	ret    
  40b9ba:	mov    eax,ds:0x5ed815d2
  40b9bf:	mov    ebp,0x11c38b0c
  40b9c4:	mov    al,0xad
  40b9c6:	inc    esp
  40b9c7:	fwait
  40b9c8:	pop    esi
  40b9c9:	mov    bh,0xd0
  40b9cb:	jns    0x40ba0f
  40b9cd:	pop    esp
  40b9ce:	mov    ebp,DWORD PTR [ecx-0x494dde68]
  40b9d4:	imul   BYTE PTR [eax]
  40b9d6:	jb     0x40b9e3
  40b9d8:	add    dh,0xb6
  40b9db:	mov    al,ds:0x19a879
  40b9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e1:	pop    ecx
  40b9e2:	xor    BYTE PTR [esi+0x19861248],ah
  40b9e8:	loope  0x40b994
  40b9ea:	arpl   cx,dx
  40b9ec:	cmp    al,0x6
  40b9ee:	cmp    BYTE PTR [ebp-0x4b23d332],bl
  40b9f4:	out    dx,al
  40b9f5:	push   es
  40b9f6:	sbb    al,0xde
  40b9f8:	repz and BYTE PTR [ecx+0x30],0xa4
  40b9fd:	xor    al,0x59
  40b9ff:	retf   
  40ba00:	clc    
  40ba01:	imul   esi,DWORD PTR [eax],0x0
  40ba04:	cmp    BYTE PTR gs:[ecx+0x24],0xe7
  40ba09:	ret    0x2034
  40ba0c:	test   al,0x22
  40ba0e:	test   eax,0x90b817b3
  40ba13:	or     eax,0xbce1d4ae
  40ba18:	(bad)  [eax]
  40ba1a:	dec    esp
  40ba1b:	scas   al,BYTE PTR es:[edi]
  40ba1c:	mov    ch,BYTE PTR [edi+0x2f]
  40ba1f:	cmp    bh,bl
  40ba21:	mov    ah,0xc1
  40ba23:	dec    esp
  40ba24:	out    dx,al
  40ba25:	es xchg ebp,eax
  40ba27:	fild   QWORD PTR [esi-0x6a]
  40ba2a:	rol    ebx,cl
  40ba2c:	xor    al,0xa7
  40ba2e:	std    
  40ba2f:	aam    0xf9
  40ba31:	mov    edi,DWORD PTR [edx-0x13]
  40ba34:	popf   
  40ba35:	leave  
  40ba36:	(bad)  
  40ba37:	pop    ebx
  40ba38:	in     eax,0xb5
  40ba3a:	push   eax
  40ba3b:	mov    ah,0xf9
  40ba3d:	es int 0xa3
  40ba40:	jge    0x40ba9c
  40ba42:	shl    BYTE PTR [esi+ecx*2],cl
  40ba45:	imul   BYTE PTR [ebx+0x6136f65c]
  40ba4b:	and    eax,0x932b3ccf
  40ba50:	or     eax,0x9b806f22
  40ba55:	add    DWORD PTR [ebx-0x3cf5e508],edi
  40ba5b:	fcmovnu st,st(2)
  40ba5d:	add    BYTE PTR ds:0xb6b98e99,dl
  40ba63:	test   al,0xb8
  40ba65:	sub    al,0x73
  40ba67:	scas   eax,DWORD PTR es:[edi]
  40ba68:	sub    al,0xc8
  40ba6a:	out    dx,al
  40ba6b:	cdq    
  40ba6c:	stos   DWORD PTR es:[edi],eax
  40ba6d:	icebp  
  40ba6e:	sbb    eax,0x9130042b
  40ba73:	pop    edi
  40ba74:	call   0x8e305027
  40ba79:	test   BYTE PTR [ebx-0x27e42298],0xb4
  40ba80:	jns    0x40ba42
  40ba82:	pop    ebp
  40ba83:	inc    edx
  40ba84:	push   edi
  40ba85:	inc    ecx
  40ba86:	mov    ecx,0xf3fe602b
  40ba8b:	out    0x51,al
  40ba8d:	imul   ebx,esi,0x8875ff90
  40ba93:	xor    BYTE PTR [ebx],dh
  40ba95:	cdq    
  40ba96:	cmp    BYTE PTR [ebx],ah
  40ba98:	loop   0x40ba76
  40ba9a:	neg    bl
  40ba9c:	xchg   esp,eax
  40ba9d:	sub    dh,BYTE PTR [ebp+0x19]
  40baa0:	mov    al,ds:0x918ae22e
  40baa5:	mov    DWORD PTR [edx+0x123706a5],ebp
  40baab:	xchg   ecx,eax
  40baac:	loop   0x40bae1
  40baae:	call   0xa46a:0xd1fab044
  40bab5:	lock jl 0x40ba95
  40bab8:	daa    
  40bab9:	cmp    BYTE PTR [edi],0x47
  40babc:	mov    ds:0x69abc2e3,eax
  40bac1:	pop    ebx
  40bac2:	pop    ds
  40bac3:	sub    DWORD PTR ds:0x5c75cb3d,esi
  40bac9:	sbb    eax,DWORD PTR [edi]
  40bacb:	imul   ebx,DWORD PTR [edx+0x39c18700],0x1
  40bad2:	and    al,0x84
  40bad4:	mov    ah,al
  40bad6:	pop    edx
  40bad7:	xlat   BYTE PTR ds:[ebx]
  40bad8:	or     BYTE PTR [edi+0x8],dl
  40badb:	retf   
  40badc:	test   al,0x1e
  40bade:	dec    ebx
  40badf:	or     ah,BYTE PTR [esi-0x6ffd750]
  40bae5:	jecxz  0x40bacc
  40bae7:	mov    al,0x56
  40bae9:	inc    esp
  40baea:	dec    ebp
  40baeb:	mov    ch,0x6
  40baed:	leave  
  40baee:	xor    DWORD PTR [eiz*1-0x1a7fbfbc],esp
  40baf5:	pushf  
  40baf6:	xchg   ecx,eax
  40baf7:	jns    0x40bb78
  40baf9:	adc    DWORD PTR [eax+0x23760d1e],edx
  40baff:	loope  0x40bb12
  40bb01:	pop    ebp
  40bb02:	sbb    cl,BYTE PTR [ebx+eax*8+0x610a751f]
  40bb09:	test   edi,edi
  40bb0b:	imul   ebx,DWORD PTR gs:0x61f9bb46,0x949594cd
  40bb16:	pop    es
  40bb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb18:	or     BYTE PTR [edx],dh
  40bb1a:	sti    
  40bb1b:	into   
  40bb1c:	dec    ebp
  40bb1d:	pop    es
  40bb1e:	mov    esp,0xf7c1ef95
  40bb23:	adc    DWORD PTR [ebx-0x2a213ebc],0x934dfc5a
  40bb2d:	jl     0x40bb10
  40bb2f:	stos   BYTE PTR es:[edi],al
  40bb30:	lea    edi,[edx+0x38]
  40bb33:	mov    al,0x7b
  40bb35:	or     al,0x7
  40bb37:	cmc    
  40bb38:	ds push cs
  40bb3a:	jmp    0x40bb8a
  40bb3c:	jbe    0x40bb0b
  40bb3e:	aad    0x16
  40bb40:	cmp    esp,ecx
  40bb42:	xchg   esi,eax
  40bb43:	daa    
  40bb44:	inc    esp
  40bb45:	mov    esp,0x71314ccc
  40bb4a:	sub    al,0xc4
  40bb4c:	call   0x4b56:0x26ddbd98
  40bb53:	or     al,0x58
  40bb55:	je     0x40bb04
  40bb57:	push   ds
  40bb58:	ret    0x9478
  40bb5b:	out    dx,al
  40bb5c:	pushf  
  40bb5d:	or     ch,ah
  40bb5f:	push   ds
  40bb60:	push   ebp
  40bb61:	and    BYTE PTR [ebx],cl
  40bb63:	pop    esi
  40bb64:	jno    0x40bbc8
  40bb66:	push   cs
  40bb67:	imul   esp,DWORD PTR [ecx+edi*4],0x3af1fd2e
  40bb6e:	pop    ecx
  40bb6f:	enter  0x22f1,0x4
  40bb73:	sub    DWORD PTR [esi],eax
  40bb75:	push   ebp
  40bb76:	jnp    0x40bbb1
  40bb78:	pop    ds
  40bb79:	dec    ebx
  40bb7b:	adc    BYTE PTR [edx+0x7d],al
  40bb7e:	push   ebp
  40bb7f:	dec    ebx
  40bb80:	add    dl,BYTE PTR [ebx]
  40bb82:	xchg   edx,eax
  40bb83:	iret   
  40bb84:	push   esi
  40bb85:	rcl    edi,0x1
  40bb88:	loope  0x40bb2b
  40bb8a:	pop    ds
  40bb8b:	mov    eax,ds:0x4ef57719
  40bb90:	sar    BYTE PTR [edi+0x6330c594],0xf3
  40bb97:	mov    al,0xa6
  40bb99:	sub    BYTE PTR [edi+0x5d],ch
  40bb9c:	pop    esp
  40bb9d:	cs aam 0xd9
  40bba0:	rcl    ecx,0xed
  40bba3:	mov    ds:0x212e05d6,al
  40bba8:	inc    ecx
  40bba9:	jnp    0x40bb85
  40bbab:	repz aad 0xee
  40bbae:	jle    0x40bbc3
  40bbb0:	inc    eax
  40bbb1:	sub    BYTE PTR [ebp-0x3],0x5a
  40bbb5:	xor    edi,DWORD PTR [ecx]
  40bbb7:	cmp    bl,BYTE PTR es:[ebx+0x100601d]
  40bbbe:	mov    bl,bl
  40bbc0:	int    0x39
  40bbc2:	test   DWORD PTR [edi-0x11],0x8fee461a
  40bbc9:	pushf  
  40bbca:	mov    BYTE PTR [ebp-0x1516d693],cl
  40bbd0:	pop    edx
  40bbd1:	daa    
  40bbd2:	pop    esp
  40bbd3:	shl    bl,0xa5
  40bbd6:	jb     0x40bb64
  40bbd8:	lods   eax,DWORD PTR ds:[esi]
  40bbd9:	dec    ebp
  40bbda:	(bad)
  40bbdd:	rcr    BYTE PTR [ebp+0x72815a9],0x13
  40bbe4:	in     eax,0x80
  40bbe6:	xor    al,0xd2
  40bbe8:	dec    edx
  40bbe9:	and    esi,DWORD PTR [esi+0x60]
  40bbec:	imul   ecx,DWORD PTR [edi+ecx*8-0x564a47b7],0xe83e956a
  40bbf7:	push   ecx
  40bbf8:	push   ebx
  40bbf9:	je     0x40bc76
  40bbfb:	xchg   ebx,eax
  40bbfc:	inc    esi
  40bbfd:	les    esp,FWORD PTR [edi+0x4beac69c]
  40bc03:	pop    esi
  40bc04:	jmp    0x79fa989f
  40bc09:	pop    edx
  40bc0a:	mov    cl,0xa4
  40bc0c:	pop    eax
  40bc0d:	lock repz add al,bl
  40bc11:	dec    eax
  40bc12:	mov    dh,0x9
  40bc14:	dec    ecx
  40bc15:	pusha  
  40bc16:	inc    esp
  40bc17:	adc    BYTE PTR [eax-0x7ee2c484],0x77
  40bc1e:	fdivp  st(2),st
  40bc20:	sahf   
  40bc21:	mov    es,WORD PTR [edi+0x6b]
  40bc24:	lds    ebx,FWORD PTR [edx-0x57878fa]
  40bc2a:	mov    al,ds:0xffb0f149
  40bc2f:	inc    edi
  40bc30:	test   eax,0x8238bddd
  40bc35:	jl     0x40bbec
  40bc37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc38:	or     bl,BYTE PTR [ecx]
  40bc3a:	mov    bh,BYTE PTR [edi+0x5c]
  40bc3d:	xor    esi,DWORD PTR [esi-0x9]
  40bc40:	cdq    
  40bc41:	retf   0x3dda
  40bc44:	sbb    eax,0x964af2b2
  40bc49:	ror    BYTE PTR ds:0x8cec15fe,cl
  40bc4f:	add    ebx,ecx
  40bc51:	dec    esi
  40bc52:	mov    bh,0xef
  40bc54:	mov    DWORD PTR [ebx-0x412fd34b],ebx
  40bc5a:	mov    ebx,DWORD PTR [esi-0x53]
  40bc5d:	ins    DWORD PTR es:[edi],dx
  40bc5e:	int3   
  40bc5f:	fucomi st,st(0)
  40bc61:	mov    ecx,0xc6fe066d
  40bc66:	push   ss
  40bc67:	push   ebp
  40bc68:	mov    bl,0xae
  40bc6a:	sub    al,0x1a
  40bc6c:	data16 sbb BYTE PTR [esi],ch
  40bc6f:	outs   dx,BYTE PTR ds:[esi]
  40bc70:	hlt    
  40bc71:	mov    dl,ah
  40bc73:	inc    esi
  40bc74:	pop    ebx
  40bc75:	fwait
  40bc76:	xchg   ebp,eax
  40bc77:	(bad)  
  40bc78:	ja     0x40bc95
  40bc7a:	xlat   BYTE PTR ds:[ebx]
  40bc7b:	cwde   
  40bc7c:	inc    ecx
  40bc7d:	inc    edx
  40bc7e:	std    
  40bc7f:	icebp  
  40bc80:	or     DWORD PTR [edx+0x79],0x1695bfe2
  40bc87:	dec    DWORD PTR [edi]
  40bc89:	lahf   
  40bc8a:	aam    0xfd
  40bc8c:	and    BYTE PTR [esi],dh
  40bc8e:	fnstsw WORD PTR [ebp+0xdb37c0f]
  40bc94:	and    DWORD PTR [ecx-0x29a52379],0x8ff645ee
  40bc9e:	push   DWORD PTR [ebx+0x4ad0bea6]
  40bca4:	pop    eax
  40bca5:	push   ss
  40bca6:	or     al,0x77
  40bca8:	jmp    0x4e8b9be8
  40bcad:	scas   eax,DWORD PTR es:[edi]
  40bcae:	jmp    0xc308:0x7d938571
  40bcb5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40bcb7:	pop    eax
  40bcb8:	dec    eax
  40bcb9:	in     al,0x82
  40bcbb:	pop    ebp
  40bcbc:	add    DWORD PTR [ecx-0x11d06a80],0x6f322824
  40bcc6:	mov    esi,esi
  40bcc8:	dec    esi
  40bcc9:	fiadd  WORD PTR [edx+0x2ce275c9]
  40bccf:	push   ss
  40bcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd1:	mov    dl,0x9c
  40bcd3:	xor    ah,bl
  40bcd5:	int    0x34
  40bcd7:	cmovne eax,DWORD PTR [edx-0x2b]
  40bcdb:	dec    ebx
  40bcdc:	rcr    DWORD PTR [ebx],0x9e
  40bcdf:	and    DWORD PTR [ecx+ebp*4+0x2f17a84d],esp
  40bce6:	and    ch,BYTE PTR [esi+0x2a6783b]
  40bcec:	adc    eax,0x1761be34
  40bcf1:	fstp   DWORD PTR [ecx+ecx*4]
  40bcf4:	out    dx,al
  40bcf5:	call   0x3128b165
  40bcfa:	xlat   BYTE PTR ds:[ebx]
  40bcfb:	pop    edx
  40bcfc:	iret   
  40bcfd:	mov    esi,DWORD PTR [ebx+0x6e]
  40bd00:	adc    ecx,ecx
  40bd02:	push   ebp
  40bd03:	ds iret 
  40bd05:	inc    edi
  40bd06:	inc    eax
  40bd07:	ds (bad) 
  40bd09:	mov    ebx,0x2b5e31ee
  40bd0e:	dec    ebp
  40bd0f:	jp     0x40bd88
  40bd11:	adc    BYTE PTR [edi+0x5dc3bc9e],ah
  40bd17:	inc    edx
  40bd18:	das    
  40bd19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd1a:	aam    0x0
  40bd1c:	stc    
  40bd1d:	add    eax,0xfde576ec
  40bd22:	adc    ecx,DWORD PTR [esi]
  40bd24:	aad    0x1
  40bd26:	add    bh,BYTE PTR [ecx]
  40bd28:	in     eax,dx
  40bd29:	adc    BYTE PTR [edx-0x6b],dh
  40bd2c:	mov    esp,edi
  40bd2e:	push   ebx
  40bd2f:	dec    ebx
  40bd30:	push   ebx
  40bd31:	xor    al,0xd9
  40bd33:	gs ins DWORD PTR es:[edi],dx
  40bd35:	mov    edi,DWORD PTR [edi+0x26]
  40bd38:	sub    eax,0x44235128
  40bd3d:	pop    esi
  40bd3e:	cmp    eax,0xd3e3b65f
  40bd43:	xor    edi,DWORD PTR [esi]
  40bd45:	add    DWORD PTR [edi+eax*2-0x28d6486b],esi
  40bd4c:	addr16 mov esp,0xe2678f06
  40bd52:	add    dl,BYTE PTR [edi-0x7]
  40bd55:	add    BYTE PTR [bx+0xedd],cl
  40bd5a:	test   BYTE PTR [edx],cl
  40bd5c:	int3   
  40bd5d:	push   es
  40bd5e:	push   eax
  40bd5f:	mov    ebp,0x2da1ecab
  40bd64:	rcr    DWORD PTR [ebx-0x675f817],1
  40bd6a:	fcomip st,st(4)
  40bd6c:	test   eax,0xc7fd878a
  40bd71:	dec    edx
  40bd72:	jb     0x40bd21
  40bd74:	shl    BYTE PTR [edx],1
  40bd76:	push   0x9b7d9af2
  40bd7b:	push   edx
  40bd7c:	adc    DWORD PTR [edx+0x37],0xffffffbb
  40bd80:	mov    ecx,0xcfc95d37
  40bd85:	pop    ss
  40bd86:	js     0x40bd3c
  40bd88:	sti    
  40bd89:	sbb    eax,0x92d964f7
  40bd8e:	mov    dl,0x11
  40bd90:	adc    esi,DWORD PTR [ebp+0x2a]
  40bd93:	ret    0x8a57
  40bd96:	inc    eax
  40bd97:	jp     0x40bdd3
  40bd99:	xchg   ebx,eax
  40bd9a:	jb     0x40bd39
  40bd9c:	imul   esi,DWORD PTR [ecx+0x55],0xffffffd6
  40bda0:	sti    
  40bda1:	pushf  
  40bda2:	mov    edx,0xa87978b7
  40bda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bda8:	mov    ebp,0xe6a4dece
  40bdad:	inc    edx
  40bdae:	loop   0x40bda1
  40bdb0:	dec    edi
  40bdb1:	nop
  40bdb2:	daa    
  40bdb3:	fstp   DWORD PTR [esi-0x35]
  40bdb6:	shl    BYTE PTR [esi+0x4286656d],0x3f
  40bdbd:	push   es
  40bdbe:	arpl   WORD PTR [eax+edx*1-0x2f164f36],bp
  40bdc5:	fisub  WORD PTR [esi+0xe]
  40bdc8:	test   al,0x82
  40bdca:	aas    
  40bdcb:	shr    DWORD PTR ds:0x582c3630,cl
  40bdd1:	cmp    eax,0x78f38494
  40bdd6:	retf   
  40bdd7:	pop    ds
  40bdd8:	dec    edi
  40bdd9:	mov    BYTE PTR [ecx+ebp*4-0x151f68d7],ah
  40bde0:	data16 test al,0x89
  40bde3:	je     0x40be43
  40bde5:	test   eax,0x52de7ed9
  40bdea:	add    dl,BYTE PTR [ebx+0x1a68f48b]
  40bdf0:	dec    BYTE PTR [edi-0x495e7c60]
  40bdf6:	ins    BYTE PTR es:[edi],dx
  40bdf7:	mov    edx,0x601d8d
  40bdfc:	out    0x2f,al
  40bdfe:	xor    eax,0xb4ab324d
  40be03:	push   esp
  40be04:	pop    ebp
  40be05:	dec    ecx
  40be06:	mov    ecx,0x8ab0d72e
  40be0b:	pusha  
  40be0c:	and    al,0xd7
  40be0e:	cmp    BYTE PTR [ebx-0x7f],al
  40be11:	and    BYTE PTR [ecx-0x4fadef51],al
  40be17:	xor    DWORD PTR gs:[esi+eiz*1+0x7976ef9b],0xffffff93
  40be20:	push   0xd13aa4dc
  40be25:	mov    eax,0x2b6deccc
  40be2a:	adc    bl,BYTE PTR [eax-0x6c]
  40be2d:	inc    esp
  40be2e:	(bad)  
  40be2f:	int3   
  40be30:	pop    ss
  40be31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be32:	adc    DWORD PTR [ecx],ebp
  40be34:	fwait
  40be35:	push   0xfffffff6
  40be37:	arpl   WORD PTR [edi+0x482642b3],cx
  40be3d:	mov    ah,0x6b
  40be3f:	fwait
  40be40:	or     eax,0x887c1938
  40be45:	xchg   esp,eax
  40be46:	mov    ch,0xd0
  40be48:	dec    ecx
  40be49:	test   al,0xc5
  40be4b:	in     al,0xd8
  40be4d:	nop
  40be4e:	into   
  40be4f:	int3   
  40be50:	mov    al,0x42
  40be52:	inc    ebx
  40be53:	pop    DWORD PTR [esi-0x19494025]
  40be59:	mov    eax,ds:0xea5fd3c7
  40be5e:	dec    esp
  40be5f:	(bad)  
  40be60:	or     eax,0xdfc965e2
  40be65:	cmc    
  40be66:	repz cld 
  40be68:	adc    DWORD PTR [ecx+0x24496903],ecx
  40be6e:	js     0x40bdfc
  40be70:	mov    al,0x9c
  40be72:	jo     0x40bec7
  40be74:	leave  
  40be75:	fild   QWORD PTR [eax]
  40be77:	push   esi
  40be78:	push   ss
  40be79:	push   edi
  40be7a:	jl     0x40be09
  40be7c:	pop    edi
  40be7d:	xchg   ebp,eax
  40be7e:	inc    di
  40be80:	sbb    eax,DWORD PTR [ebx]
  40be82:	cmp    DWORD PTR [edx],ebx
  40be84:	je     0x40be93
  40be86:	icebp  
  40be87:	or     eax,0xb4130de5
  40be8c:	loopne 0x40bef8
  40be8e:	jp     0x40be69
  40be90:	jecxz  0x40be8e
  40be92:	mov    gs,WORD PTR [ecx+0x75]
  40be95:	sub    DWORD PTR [edx-0x3f],0x8ed83b4e
  40be9c:	adc    DWORD PTR [ecx+0x45cfabb3],esi
  40bea2:	popa   
  40bea3:	and    al,0xd6
  40bea5:	test   DWORD PTR [ebx-0xa],eax
  40bea8:	outs   dx,BYTE PTR ds:[esi]
  40bea9:	cmp    ah,dl
  40beab:	dec    edx
  40beac:	mov    esp,DWORD PTR [eax+edi*8]
  40beaf:	fwait
  40beb0:	or     al,0xb3
  40beb2:	xchg   DWORD PTR [edi-0x342c01b8],esi
  40beb8:	lds    ebp,FWORD PTR [ebp-0x7c806647]
  40bebe:	xchg   edx,eax
  40bebf:	cmp    dh,dh
  40bec1:	xor    BYTE PTR [edx+ecx*8-0x2bf10227],dh
  40bec8:	sub    esp,0x2ca14a32
  40bece:	mov    bh,0xc5
  40bed0:	test   eax,0x383bf4c8
  40bed5:	out    0x2d,eax
  40bed7:	lahf   
  40bed8:	lods   al,BYTE PTR ds:[esi]
  40bed9:	or     eax,0x346dcabb
  40bede:	add    dl,ch
  40bee0:	ss clc 
  40bee2:	jmp    0x234a19b8
  40bee7:	add    esp,ebp
  40bee9:	imul   ebp
  40beeb:	push   0xdaf785ea
  40bef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef1:	ss aas 
  40bef3:	fidiv  WORD PTR [ebp+0x5bc83fd7]
  40bef9:	dec    ebp
  40befa:	adc    dh,bl
  40befc:	adc    BYTE PTR [ebp+0x60],0x73
  40bf00:	ret    0x8a75
  40bf03:	fld    st(4)
  40bf05:	mov    edx,0xa608657c
  40bf0a:	retf   
  40bf0b:	jne    0x40bf4d
  40bf0d:	iret   
  40bf0e:	int    0x3e
  40bf10:	xchg   ebx,eax
  40bf11:	cwde   
  40bf12:	out    dx,eax
  40bf13:	cwde   
  40bf14:	push   esi
  40bf15:	aam    0x2e
  40bf17:	push   edx
  40bf18:	es enter 0x6819,0xc5
  40bf1d:	jo     0x40bea2
  40bf1f:	and    BYTE PTR [esi+0x4d],cl
  40bf22:	jg     0x40bf0a
  40bf24:	xchg   edx,eax
  40bf25:	jnp    0x40bf5f
  40bf27:	mov    al,ds:0x4e60adfd
  40bf2c:	retf   
  40bf2d:	add    al,0x8c
  40bf2f:	test   dh,dl
  40bf31:	gs (bad) 
  40bf33:	xor    eax,0x5edb23c5
  40bf38:	fidivr WORD PTR [ebx+esi*8]
  40bf3b:	mov    ch,0x85
  40bf3d:	push   esp
  40bf3e:	push   cs
  40bf3f:	(bad)  
  40bf40:	sar    BYTE PTR [ebx],0xaa
  40bf43:	lods   eax,DWORD PTR ds:[esi]
  40bf44:	adc    esp,edi
  40bf46:	js     0x40bf96
  40bf48:	or     al,0xa3
  40bf4a:	xchg   edi,eax
  40bf4b:	in     al,dx
  40bf4c:	mov    ebx,0xff4ee6c2
  40bf51:	mov    eax,ds:0x477eb385
  40bf56:	or     BYTE PTR [esi],al
  40bf58:	shl    BYTE PTR [edx+eiz*4-0x5076d56e],0x52
  40bf60:	mov    bh,0xf1
  40bf62:	cld    
  40bf63:	inc    eax
  40bf64:	mov    eax,0x28e00c9e
  40bf69:	jbe    0x40bf10
  40bf6b:	clc    
  40bf6c:	xchg   DWORD PTR [edx],edi
  40bf6e:	xor    eax,0xd920ca7
  40bf73:	and    ch,ah
  40bf75:	(bad)  [eax]
  40bf77:	lods   eax,DWORD PTR es:[esi]
  40bf79:	out    0x55,al
  40bf7b:	add    al,0x5
  40bf7d:	mov    al,0x97
  40bf7f:	jbe    0x40bf4b
  40bf81:	sbb    eax,0x3bd879c5
  40bf86:	out    dx,eax
  40bf87:	and    eax,0x6ed3ed1c
  40bf8c:	ja     0x40bf83
  40bf8e:	mov    dh,0x8d
  40bf90:	inc    esi
  40bf91:	xlat   BYTE PTR ds:[ebx]
  40bf92:	and    ecx,ebp
  40bf94:	data16 into 
  40bf96:	mov    ds,WORD PTR [ebx+0x3]
  40bf99:	push   0xc67cbde0
  40bf9e:	dec    ecx
  40bf9f:	idiv   BYTE PTR [ebp+0x3c0a0685]
  40bfa5:	out    0x67,eax
  40bfa7:	cmp    edi,edi
  40bfa9:	sub    eax,0xd756fee3
  40bfae:	dec    ebp
  40bfaf:	inc    eax
  40bfb0:	jns    0x40bfb3
  40bfb2:	cmp    eax,0xe466237d
  40bfb7:	xchg   esi,eax
  40bfb8:	sar    BYTE PTR [eax-0x69],cl
  40bfbb:	call   0x47ff:0x3f182acc
  40bfc2:	push   ds
  40bfc3:	fimul  WORD PTR [ecx]
  40bfc5:	and    ah,BYTE PTR [edx+esi*1+0x4e]
  40bfc9:	xchg   ecx,eax
  40bfca:	icebp  
  40bfcb:	scas   al,BYTE PTR es:[edi]
  40bfcc:	mov    edx,fs
  40bfce:	mov    ah,0x40
  40bfd0:	cmp    eax,0x25aab93f
  40bfd5:	mov    edi,0xb122fa1f
  40bfda:	adc    ch,ah
  40bfdc:	adc    eax,0x6483bd8
  40bfe1:	push   esp
  40bfe2:	adc    DWORD PTR [ebx+eax*1+0x5d],0x41fa3908
  40bfea:	lods   al,BYTE PTR ds:[esi]
  40bfeb:	adc    dl,ah
  40bfed:	jo     0x40c067
  40bfef:	mov    ch,0x7f
  40bff1:	imul   esi,ebp,0xa5be40ad
  40bff7:	lea    esi,[edx+0xb34b2cd]
  40bffd:	out    0xd6,eax
  40bfff:	jnp    0x40bfa6
  40c001:	inc    ecx
  40c002:	jne    0x40bfde
  40c004:	sub    edi,DWORD PTR cs:[eax+edx*8-0x69]
  40c009:	xchg   ecx,eax
  40c00a:	jne    0x40bff9
  40c00c:	mov    bh,0x8c
  40c00e:	jge    0x40c065
  40c010:	addr16 jmp 0x40bfb7
  40c013:	call   0x65f97a26
  40c018:	test   eax,0x6249f5d2
  40c01d:	sub    BYTE PTR [ecx+0x3e],dh
  40c020:	sub    al,0x17
  40c022:	pop    eax
  40c023:	cmc    
  40c024:	stc    
  40c025:	push   ebp
  40c026:	sbb    dl,BYTE PTR [ecx+eax*2]
  40c029:	pop    eax
  40c02a:	add    eax,0xe815f0b5
  40c02f:	loop   0x40bfb6
  40c031:	add    edx,DWORD PTR [esi]
  40c033:	imul   esp,DWORD PTR [edi],0xc20ce664
  40c039:	lock or al,BYTE PTR [ecx]
  40c03c:	leave  
  40c03d:	scas   al,BYTE PTR es:[edi]
  40c03e:	shl    bl,1
  40c040:	in     eax,0x71
  40c042:	data16 fisttp QWORD PTR [ecx-0x4f2adae4]
  40c049:	out    dx,al
  40c04a:	xchg   dl,ch
  40c04c:	mov    DWORD PTR [edx+0x12],ecx
  40c04f:	adc    ch,ah
  40c051:	jmp    0x9da74a34
  40c056:	retf   
  40c057:	sub    esp,DWORD PTR [edx+0x6d93e5d5]
  40c05d:	ds xchg edi,eax
  40c05f:	inc    esi
  40c060:	dec    edi
  40c061:	jg     0x40c0d0
  40c063:	sub    cl,BYTE PTR [eax-0x717b2c6]
  40c069:	imul   esp,DWORD PTR [edx],0xffffffe3
  40c06c:	xor    al,0xd2
  40c06e:	mov    cl,0xe4
  40c070:	or     BYTE PTR [eax+0x23],ch
  40c073:	ss jecxz 0x40c0ca
  40c076:	adc    ecx,DWORD PTR [edx]
  40c078:	loop   0x40c0f6
  40c07a:	jne    0x40c096
  40c07c:	lock xchg ebp,eax
  40c07e:	inc    edx
  40c07f:	popf   
  40c080:	les    ecx,FWORD PTR [ebp-0x409e2f5b]
  40c086:	into   
  40c087:	clc    
  40c088:	es xchg ecx,eax
  40c08a:	mov    esp,0xd7c3da57
  40c08f:	sbb    al,BYTE PTR [ecx-0x7a0a966]
  40c095:	push   ss
  40c096:	cld    
  40c097:	pop    ebp
  40c098:	leave  
  40c099:	hlt    
  40c09a:	fadd   st,st(4)
  40c09c:	push   es
  40c09d:	xor    esi,DWORD PTR [esi]
  40c09f:	lods   al,BYTE PTR ds:[esi]
  40c0a0:	enter  0xce90,0x9c
  40c0a4:	adc    al,ah
  40c0a6:	jge    0x40c075
  40c0a8:	inc    edx
  40c0a9:	ja     0x40c0f8
  40c0ab:	fldenv [edi+0x7a]
  40c0ae:	mov    al,0xf0
  40c0b0:	cmp    DWORD PTR [esi+0x784b114d],ecx
  40c0b6:	daa    
  40c0b7:	repz in eax,0xf5
  40c0ba:	stos   BYTE PTR es:[edi],al
  40c0bb:	popa   
  40c0bc:	mov    esi,cs
  40c0be:	(bad)  
  40c0bf:	jae    0x40c09b
  40c0c1:	bound  ecx,QWORD PTR [ebp+0x1b]
  40c0c4:	jnp    0x40c06b
  40c0c6:	sub    BYTE PTR [edi+0xb1a04b1],dh
  40c0cc:	cli    
  40c0cd:	add    al,0x79
  40c0cf:	inc    esi
  40c0d0:	fnstcw WORD PTR [bx+si+0x55]
  40c0d4:	xchg   ecx,eax
  40c0d5:	sbb    dh,BYTE PTR [ebx-0x872f632]
  40c0db:	xor    DWORD PTR [edi-0x75],ebp
  40c0de:	aad    0x71
  40c0e0:	call   0x1bd0:0xceeb5818
  40c0e7:	ret    
  40c0e8:	nop
  40c0e9:	imul   esp,DWORD PTR [esi-0x1fcd6846],0x4b0432d0
  40c0f3:	cmp    bh,dl
  40c0f5:	test   al,0x93
  40c0f7:	fs inc ecx
  40c0f9:	ins    DWORD PTR es:[edi],dx
  40c0fa:	dec    esi
  40c0fb:	jmp    0x7b4f:0xb9f2f534
  40c102:	push   0x51
  40c104:	pop    es
  40c105:	nop
  40c106:	je     0x40c102
  40c108:	mov    ds:0xe6fe3eca,al
  40c10d:	mov    cl,ah
  40c10f:	push   esp
  40c110:	pop    esp
  40c111:	mov    edx,0x7417f57e
  40c116:	and    DWORD PTR [eax+0x6c],esi
  40c119:	mov    eax,0xa366223c
  40c11e:	adc    al,0x4d
  40c120:	push   0xc57ee5f5
  40c125:	xchg   edi,eax
  40c126:	xchg   ecx,eax
  40c127:	add    al,0x6a
  40c129:	gs push eax
  40c12b:	mov    ds:0x6aff510b,eax
  40c130:	retf   0x38d0
  40c133:	push   cs
  40c134:	xchg   DWORD PTR [edx+eax*4+0x64b27c45],eax
  40c13b:	jb     0x40c144
  40c13d:	fidiv  DWORD PTR [ecx]
  40c13f:	int    0x44
  40c141:	lods   al,BYTE PTR ds:[esi]
  40c142:	and    al,0xba
  40c144:	add    al,0x16
  40c146:	or     BYTE PTR [ebp+0x6c],al
  40c149:	test   ch,ch
  40c14b:	add    al,0xd6
  40c14d:	pop    ebx
  40c14e:	xchg   WORD PTR [ecx-0x6f],di
  40c152:	leave  
  40c153:	mov    ebp,0x36b417d1
  40c158:	call   0xe577763b
  40c15d:	and    ecx,ebx
  40c15f:	xchg   edi,eax
  40c160:	ins    DWORD PTR es:[edi],dx
  40c161:	jle    0x40c13c
  40c163:	lods   eax,DWORD PTR ds:[esi]
  40c164:	clc    
  40c165:	jmp    0x334b6a7d
  40c16a:	and    eax,0x76dea444
  40c16f:	cmp    DWORD PTR [edx],edi
  40c171:	sub    eax,DWORD PTR [edx]
  40c173:	sub    edi,0xcf55b626
  40c179:	add    eax,ecx
  40c17b:	sbb    al,0x4c
  40c17d:	mov    bl,0x5a
  40c17f:	jmp    0x40c15c
  40c181:	fwait
  40c182:	pusha  
  40c183:	adc    dl,cl
  40c185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c186:	push   0x17710e5e
  40c18b:	pop    ebx
  40c18c:	ds inc ebx
  40c18e:	mov    ecx,0x3af2b8dd
  40c193:	push   esi
  40c194:	add    edi,ebp
  40c196:	pop    edx
  40c197:	inc    esi
  40c198:	add    ch,cl
  40c19a:	not    ebx
  40c19c:	jp     0x40c16b
  40c19e:	cwde   
  40c19f:	pop    edi
  40c1a0:	adc    al,0x93
  40c1a2:	pop    ebp
  40c1a3:	cmp    BYTE PTR [esi],0x81
  40c1a6:	inc    edi
  40c1a7:	ja     0x40c185
  40c1a9:	or     cl,BYTE PTR [ebp+edx*1+0x3749a23e]
  40c1b0:	imul   esp,DWORD PTR [ecx+0x4236a0c6],0xd329a8f4
  40c1ba:	mov    ah,0x2d
  40c1bc:	jl     0x40c21e
  40c1be:	cdq    
  40c1bf:	cmp    DWORD PTR [ebp+0x44],ecx
  40c1c2:	inc    esp
  40c1c3:	pop    ds
  40c1c4:	dec    esp
  40c1c5:	jbe    0x40c1d3
  40c1c7:	cdq    
  40c1c8:	add    eax,ecx
  40c1ca:	icebp  
  40c1cb:	stos   BYTE PTR es:[edi],al
  40c1cc:	outs   dx,BYTE PTR ds:[esi]
  40c1cd:	sbb    ah,cl
  40c1cf:	mov    bl,0xee
  40c1d1:	rcl    BYTE PTR [ecx-0x2f],0x1c
  40c1d5:	sub    eax,0x3679658e
  40c1da:	cmp    dh,dl
  40c1dc:	test   BYTE PTR [edx],cl
  40c1de:	outs   dx,BYTE PTR ds:[esi]
  40c1df:	fild   QWORD PTR [esi-0x29503ba4]
  40c1e5:	sti    
  40c1e6:	in     al,0x50
  40c1e8:	jp     0x40c268
  40c1ea:	lock add eax,0x4f712f57
  40c1f0:	stos   BYTE PTR es:[edi],al
  40c1f1:	pop    es
  40c1f2:	xchg   edi,eax
  40c1f3:	or     DWORD PTR [ebx-0x25],edx
  40c1f6:	into   
  40c1f7:	xor    al,0xcd
  40c1fa:	fidiv  DWORD PTR [edx+0x52]
  40c1fd:	(bad)  
  40c1ff:	repnz mov cl,0x4f
  40c202:	inc    DWORD PTR [edi]
  40c204:	fs or  eax,0x4a660e0
  40c20a:	ss stc 
  40c20c:	movq   QWORD PTR [esi-0x184f0d1],mm6
  40c213:	adc    eax,0x1ba14f88
  40c218:	jo     0x40c236
  40c21a:	push   ecx
  40c21b:	fisttp QWORD PTR [ecx+0x20]
  40c21e:	int3   
  40c21f:	sahf   
  40c220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c221:	jbe    0x40c297
  40c223:	xor    eax,0x7913e6eb
  40c228:	xlat   BYTE PTR ds:[ebx]
  40c229:	repz dec eax
  40c22b:	xlat   BYTE PTR ds:[ebx]
  40c22c:	leave  
  40c22d:	mov    edi,DWORD PTR [edi+0x8]
  40c230:	rcl    DWORD PTR [esi+0x566241f1],1
  40c236:	mov    ds:0x4820a40e,eax
  40c23b:	or     al,0x1f
  40c23d:	sub    ebp,0x5c2ec4a4
  40c243:	jmp    0x59:0x2c354142
  40c24a:	loopne 0x40c20d
  40c24c:	adc    bl,ah
  40c24e:	int3   
  40c24f:	ja     0x40c1ee
  40c251:	cmp    dl,ch
  40c253:	mov    ecx,0xd2174ecf
  40c258:	cwde   
  40c259:	dec    esp
  40c25a:	iret   
  40c25b:	(bad)  
  40c25c:	mov    edi,0x581107ab
  40c261:	pop    esp
  40c262:	bound  esp,QWORD PTR [ebp+0x2425ca7d]
  40c268:	outs   dx,BYTE PTR ds:[esi]
  40c269:	pop    es
  40c26a:	popa   
  40c26b:	xchg   ch,bh
  40c26d:	push   ebx
  40c26e:	int3   
  40c26f:	pop    eax
  40c270:	leave  
  40c271:	das    
  40c272:	mov    ss,WORD PTR [eax]
  40c274:	or     DWORD PTR ds:0xd066e4d6,esp
  40c27a:	shl    esi,0x12
  40c27d:	pushf  
  40c27e:	repz push 0xffffffe1
  40c281:	(bad)  
  40c282:	(bad)  
  40c283:	ins    DWORD PTR es:[edi],dx
  40c284:	fwait
  40c285:	cmp    DWORD PTR [ebx+0x6e],ebx
  40c288:	jle    0x40c2e8
  40c28a:	imul   esp,DWORD PTR [ebp-0x27],0xffffffad
  40c28e:	test   al,0x4d
  40c290:	lahf   
  40c291:	sbb    cl,bh
  40c293:	xchg   ebp,eax
  40c294:	sar    BYTE PTR [edi+0x2f],1
  40c297:	jo     0x40c2e2
  40c299:	aas    
  40c29a:	sub    BYTE PTR [edx],dl
  40c29c:	mov    ds:0x37d970ea,al
  40c2a1:	popf   
  40c2a2:	add    BYTE PTR ds:0xeaee6c64,ah
  40c2a8:	dec    edx
  40c2a9:	mov    DWORD PTR [eax-0x42],0xfc230dc6
  40c2b0:	inc    esp
  40c2b1:	dec    eax
  40c2b2:	adc    bl,ah
  40c2b4:	mov    BYTE PTR [ebx],al
  40c2b6:	ja     0x40c28e
  40c2b8:	test   DWORD PTR [eax],0xfc5323c1
  40c2be:	test   DWORD PTR [ebx-0x78],edi
  40c2c1:	(bad)  
  40c2c2:	stos   DWORD PTR es:[edi],eax
  40c2c3:	mov    DWORD PTR [edi],esi
  40c2c5:	shl    BYTE PTR [edi+edx*1],cl
  40c2c8:	mov    edx,0x454edb36
  40c2cd:	and    DWORD PTR [edx-0x4969476],0x7d8bea85
  40c2d7:	leave  
  40c2d8:	inc    ecx
  40c2d9:	imul   ebp,ebp,0x93f5f3a4
  40c2df:	push   edi
  40c2e0:	fwait
  40c2e1:	jecxz  0x40c263
  40c2e3:	int3   
  40c2e4:	addr16 jmp 0x8e816321
  40c2ea:	pop    ecx
  40c2eb:	arpl   WORD PTR [edi-0x4d8bcf09],cx
  40c2f1:	es xchg edi,eax
  40c2f3:	sub    esp,DWORD PTR [ebx+0x581257c]
  40c2f9:	cmp    al,bh
  40c2fb:	cmp    BYTE PTR [ecx],0x98
  40c2fe:	adc    BYTE PTR [edx+0x299f5d55],dh
  40c304:	scas   eax,DWORD PTR es:[edi]
  40c305:	jno    0x40c2a3
  40c307:	mov    cl,BYTE PTR [ecx]
  40c309:	xbegin 0xb83231f0
  40c30f:	test   DWORD PTR [edx-0x34b7f47b],0x3e937c90
  40c319:	mov    dl,0xd5
  40c31b:	sub    eax,0x2903cd18
  40c320:	dec    esi
  40c321:	repz call 0x8839794d
  40c327:	xor    BYTE PTR ds:0x7f899656,bl
  40c32d:	jle    0x40c2e9
  40c32f:	popa   
  40c330:	xchg   esi,eax
  40c331:	jmp    0xb158729b
  40c336:	sub    DWORD PTR [ebp+0x237d9671],edi
  40c33c:	cmp    DWORD PTR [edx+0x75f4756f],ebp
  40c342:	cmc    
  40c343:	lahf   
  40c344:	pop    ebx
  40c345:	enter  0xdb6f,0x65
  40c349:	jge    0x40c31c
  40c34b:	jbe    0x40c30b
  40c34d:	mov    ecx,0x8783aab1
  40c352:	(bad)  
  40c353:	push   ds
  40c354:	sbb    BYTE PTR [ecx],bh
  40c356:	call   edi
  40c358:	cmp    al,0x26
  40c35a:	xchg   esi,ecx
  40c35c:	mov    ah,0x63
  40c35e:	repnz xchg ebp,eax
  40c360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c361:	bnd jbe 0x40c372
  40c364:	add    BYTE PTR [esi+0x59],ah
  40c367:	hlt    
  40c368:	fwait
  40c369:	jg     0x40c38c
  40c36b:	push   0x16
  40c36d:	jnp    0x40c3a2
  40c36f:	(bad)  
  40c370:	arpl   bx,bp
  40c372:	add    ah,ch
  40c374:	sub    dl,BYTE PTR [edi]
  40c376:	and    DWORD PTR [edx-0xc],edx
  40c379:	jecxz  0x40c3e7
  40c37b:	add    al,0xe9
  40c37d:	imul   edx,DWORD PTR [ebp-0x3d2383e4],0x14
  40c384:	jns    0x40c353
  40c386:	stos   BYTE PTR es:[edi],al
  40c387:	popf   
  40c388:	push   edi
  40c389:	mov    dl,BYTE PTR [esi-0x7a]
  40c38c:	in     al,0x9c
  40c38e:	push   edx
  40c38f:	pop    ebx
  40c390:	inc    esi
  40c391:	add    ecx,ebx
  40c393:	mov    ch,0x58
  40c395:	int    0xa
  40c397:	mov    ecx,0xb814abf8
  40c39c:	and    eax,0x3021a84a
  40c3a1:	ror    ah,0xab
  40c3a4:	pop    esp
  40c3a5:	arpl   bx,si
  40c3a7:	sbb    DWORD PTR [eax+eax*2],esi
  40c3aa:	mov    ebp,gs
  40c3ac:	mov    ds:0xd702c570,al
  40c3b1:	jae    0x40c337
  40c3b3:	jns    0x40c343
  40c3b5:	lds    eax,FWORD PTR [eax]
  40c3b7:	mov    al,0xa9
  40c3b9:	aaa    
  40c3ba:	add    eax,DWORD PTR [ebx+0x70]
  40c3bd:	mul    BYTE PTR [edx+ebx*8]
  40c3c0:	mov    al,BYTE PTR [ebp-0x71]
  40c3c3:	xchg   edi,eax
  40c3c4:	push   ecx
  40c3c5:	popa   
  40c3c6:	mov    edi,0x6d95710a
  40c3cb:	jb     0x40c438
  40c3cd:	aam    0xad
  40c3cf:	mov    ch,0xe7
  40c3d1:	ret    0xabf0
  40c3d4:	shr    bh,0xdd
  40c3d7:	push   ss
  40c3d8:	jl     0x40c36a
  40c3da:	push   ebx
  40c3db:	xchg   ebp,eax
  40c3dc:	ja     0x40c3c7
  40c3de:	jae    0x40c384
  40c3e0:	push   ebp
  40c3e1:	pop    edi
  40c3e2:	or     esp,DWORD PTR [ecx]
  40c3e4:	ins    BYTE PTR es:[edi],dx
  40c3e5:	mov    al,ds:0x2f5e4943
  40c3ea:	fidiv  DWORD PTR [eax+0x46]
  40c3ed:	inc    ebx
  40c3ee:	test   ah,ch
  40c3f0:	fptan  
  40c3f2:	popa   
  40c3f3:	outs   dx,BYTE PTR ds:[esi]
  40c3f4:	cld    
  40c3f5:	xchg   ebp,eax
  40c3f6:	mov    eax,ds:0x98975392
  40c3fb:	in     eax,dx
  40c3fc:	test   al,0x74
  40c3fe:	jae    0x40c419
  40c400:	das    
  40c401:	sbb    dh,ch
  40c403:	pop    ebx
  40c404:	mov    esi,0xfa13bfeb
  40c409:	mov    edx,0xcdd4d271
  40c40e:	aas    
  40c40f:	in     al,0x45
  40c411:	scas   al,BYTE PTR es:[edi]
  40c412:	sahf   
  40c413:	and    BYTE PTR [edx-0x4ed3a1f1],0x6e
  40c41a:	inc    edi
  40c41b:	mov    WORD PTR [edi-0x2b],?
  40c41e:	leave  
  40c41f:	fisttp DWORD PTR [ebx+0x68b13470]
  40c425:	and    DWORD PTR [ecx+0x64],0xffffff96
  40c429:	mov    DWORD PTR [esi+0x5ca287cf],ebx
  40c42f:	stos   BYTE PTR es:[edi],al
  40c430:	inc    ebp
  40c431:	mov    DWORD PTR [edi-0x199b103c],edx
  40c437:	jmp    0x40c4a1
  40c439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c43a:	fnstsw WORD PTR [edx+0x3b]
  40c43d:	retf   
  40c43e:	mov    ecx,0xca9943
  40c443:	std    
  40c444:	jno    0x40c3d5
  40c446:	push   cs
  40c447:	jp     0x40c44a
  40c449:	in     eax,dx
  40c44a:	sub    al,0xc0
  40c44c:	xor    cl,al
  40c44e:	xlat   BYTE PTR ds:[ebx]
  40c44f:	fidiv  DWORD PTR [edi+0x3fac35da]
  40c455:	cmp    cl,BYTE PTR [esi-0x46]
  40c458:	sub    DWORD PTR [esi+ecx*1],esi
  40c45b:	xor    al,0x73
  40c45d:	dec    esp
  40c45e:	in     al,dx
  40c45f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  40c466:	sbb    eax,esi
  40c468:	mov    eax,DWORD PTR [ebp-0x10]
  40c46b:	or     DWORD PTR ds:0x42b014,edx
  40c471:	mov    ecx,DWORD PTR [ebp-0x10]
  40c474:	mov    esi,DWORD PTR ds:0x42a018
  40c47a:	sbb    DWORD PTR ds:0x429000,esi
  40c480:	sub    eax,ecx
  40c482:	mov    DWORD PTR [ebp-0x10],eax
  40c485:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40c48c:	mov    eax,DWORD PTR [ebp-0x18]
  40c48f:	mov    ecx,DWORD PTR [ebp-0x18]
  40c492:	mov    DWORD PTR ds:0x42a018,0x1f
  40c49c:	cmp    DWORD PTR ds:0x42a018,0x0
  40c4a3:	je     0x40c4ea
  40c4a9:	cmp    DWORD PTR ds:0x42a018,0x3
  40c4b0:	jne    0x40c4bc
  40c4b6:	call   DWORD PTR ds:0x42ed87
  40c4bc:	cmp    DWORD PTR ds:0x42a018,0x4
  40c4c3:	jne    0x40c4d8
  40c4c9:	xor    esi,esi
  40c4cb:	or     esi,DWORD PTR ds:0x42a018
  40c4d1:	dec    esi
  40c4d2:	mov    DWORD PTR ds:0x42a018,esi
  40c4d8:	mov    esi,DWORD PTR ds:0x42a018
  40c4de:	dec    esi
  40c4df:	mov    DWORD PTR ds:0x42a018,esi
  40c4e5:	jmp    0x40c49c
  40c4ea:	sub    eax,ecx
  40c4ec:	mov    esi,DWORD PTR ds:0x42b008
  40c4f2:	and    esi,DWORD PTR ds:0x42901c
  40c4f8:	mov    DWORD PTR ds:0x42b008,esi
  40c4fe:	mov    DWORD PTR [ebp-0x18],eax
  40c501:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40c508:	mov    DWORD PTR ds:0x429020,0x10
  40c512:	cmp    DWORD PTR ds:0x429020,0x0
  40c519:	je     0x40c57b
  40c51f:	cmp    DWORD PTR ds:0x429020,0x8
  40c526:	jne    0x40c53d
  40c52c:	push   DWORD PTR [ebp-0x10]
  40c52f:	push   0x42a010
  40c534:	push   DWORD PTR [ebp-0x28]
  40c537:	call   DWORD PTR ds:0x42ed8b
  40c53d:	cmp    DWORD PTR ds:0x429020,0x9
  40c544:	jne    0x40c557
  40c54a:	mov    esi,DWORD PTR ds:0x429020
  40c550:	dec    esi
  40c551:	mov    DWORD PTR ds:0x429020,esi
  40c557:	mov    esi,DWORD PTR ds:0x429020
  40c55d:	dec    esi
  40c55e:	mov    DWORD PTR ds:0x429020,esi
  40c564:	jmp    0x40c512
  40c569:	mov    esi,DWORD PTR ds:0x42901c
  40c56f:	add    esi,DWORD PTR ds:0x42d008
  40c575:	mov    DWORD PTR ds:0x42901c,esi
  40c57b:	mov    eax,DWORD PTR [ebp-0xc]
  40c57e:	mov    ecx,DWORD PTR [ebp-0xc]
  40c581:	mov    esi,DWORD PTR ds:0x42a01c
  40c587:	sub    esi,DWORD PTR ds:0x429014
  40c58d:	mov    DWORD PTR ds:0x42a01c,esi
  40c593:	sub    eax,ecx
  40c595:	add    esi,0x4f49
  40c59b:	mov    DWORD PTR [ebp-0xc],eax
  40c59e:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  40c5a5:	sub    ecx,DWORD PTR ds:0x42a00c
  40c5ab:	mov    eax,DWORD PTR [ebp-0x1c]
  40c5ae:	or     DWORD PTR ds:0x42d018,ebx
  40c5b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  40c5b7:	and    DWORD PTR ds:0x42d01c,0x0
  40c5c1:	jmp    0x40c5d5
  40c5c6:	xor    edi,edi
  40c5c8:	xor    edi,DWORD PTR ds:0x42d01c
  40c5ce:	inc    edi
  40c5cf:	mov    DWORD PTR ds:0x42d01c,edi
  40c5d5:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40c5dc:	jae    0x40c64a
  40c5e2:	cmp    DWORD PTR ds:0x42d01c,0x2d
  40c5e9:	jne    0x40c5ff
  40c5ef:	push   0x42e205
  40c5f4:	push   0x0
  40c5f6:	push   DWORD PTR [ebp-0xc]
  40c5f9:	call   DWORD PTR ds:0x42ed8f
  40c5ff:	jmp    0x40c5c6
  40c604:	and    DWORD PTR ds:0x42d018,0x0
  40c60e:	jmp    0x40c620
  40c613:	mov    edi,DWORD PTR ds:0x42d018
  40c619:	inc    edi
  40c61a:	mov    DWORD PTR ds:0x42d018,edi
  40c620:	cmp    DWORD PTR ds:0x42d018,0x14
  40c627:	jae    0x40c64a
  40c62d:	cmp    DWORD PTR ds:0x42d018,0x1c
  40c634:	jne    0x40c645
  40c63a:	push   0x6072
  40c63f:	call   DWORD PTR ds:0x42ed4f
  40c645:	jmp    0x40c613
  40c64a:	sub    eax,ecx
  40c64c:	mov    DWORD PTR [ebp-0x1c],eax
  40c64f:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  40c656:	mov    eax,DWORD PTR [ebp-0x20]
  40c659:	mov    ecx,DWORD PTR [ebp-0x20]
  40c65c:	sub    eax,ecx
  40c65e:	mov    DWORD PTR [ebp-0x20],eax
  40c661:	mov    eax,DWORD PTR [ebp-0x2c]
  40c664:	mov    ecx,DWORD PTR [ebp-0x20]
  40c667:	mov    esi,0x7510899
  40c66c:	xor    eax,esi
  40c66e:	mov    edi,0x3272e0
  40c673:	add    eax,edi
  40c675:	or     eax,ecx
  40c677:	mov    DWORD PTR [ebp-0x20],eax
  40c67a:	mov    eax,DWORD PTR [ebp-0x4]
  40c67d:	mov    ecx,DWORD PTR [ebp-0x4]
  40c680:	sub    eax,ecx
  40c682:	mov    DWORD PTR [ebp-0x4],eax
  40c685:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40c68c:	mov    eax,DWORD PTR [ebp-0xc]
  40c68f:	xor    eax,esi
  40c691:	add    eax,edi
  40c693:	push   eax
  40c694:	mov    eax,DWORD PTR [ebp-0x10]
  40c697:	xor    eax,esi
  40c699:	add    eax,edi
  40c69b:	push   eax
  40c69c:	mov    eax,DWORD PTR [ebp-0x4]
  40c69f:	xor    eax,esi
  40c6a1:	add    eax,edi
  40c6a3:	push   eax
  40c6a4:	lea    eax,[ebp-0x7c]
  40c6a7:	push   eax
  40c6a8:	push   DWORD PTR [ebp-0x2c]
  40c6ab:	push   DWORD PTR [ebp-0x28]
  40c6ae:	call   0x411548
  40c6b3:	test   eax,eax
  40c6b5:	je     0x40c6e3
  40c6bb:	lea    eax,[ebp-0x7c]
  40c6be:	push   eax
  40c6bf:	mov    eax,DWORD PTR [ebp-0x28]
  40c6c2:	xor    eax,esi
  40c6c4:	add    eax,edi
  40c6c6:	push   eax
  40c6c7:	mov    eax,DWORD PTR [ebp-0x24]
  40c6ca:	add    eax,0xaa
  40c6cf:	push   eax
  40c6d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c6d3:	mov    eax,DWORD PTR [eax+0x198]
  40c6d9:	push   DWORD PTR [eax]
  40c6db:	call   0x4050c0
  40c6e0:	mov    DWORD PTR [ebp-0x14],eax
  40c6e3:	lea    eax,[ebp+0x4]
  40c6e6:	mov    DWORD PTR [ebp-0x30],eax
  40c6e9:	mov    eax,DWORD PTR [ebp-0x14]
  40c6ec:	test   eax,eax
  40c6ee:	je     0x40c756
  40c6f4:	lea    eax,[ebp-0x8]
  40c6f7:	mov    DWORD PTR [ebp-0x38],eax
  40c6fa:	mov    eax,DWORD PTR [ebp-0x34]
  40c6fd:	mov    DWORD PTR [ebp-0x8],eax
  40c700:	mov    eax,DWORD PTR [ebp-0x8]
  40c703:	mov    ecx,DWORD PTR [ebp-0x14]
  40c706:	sub    eax,ecx
  40c708:	mov    DWORD PTR [ebp-0x8],eax
  40c70b:	mov    ecx,DWORD PTR [ebp-0x4]
  40c70e:	xor    ecx,esi
  40c710:	mov    eax,0xffcd8d20
  40c715:	sub    eax,ecx
  40c717:	add    DWORD PTR [ebp-0x8],eax
  40c71a:	mov    eax,DWORD PTR [ebp-0x8]
  40c71d:	mov    ecx,DWORD PTR [ebp-0x14]
  40c720:	mov    DWORD PTR [ecx+0x1],eax
  40c723:	mov    eax,DWORD PTR [ebp-0x14]
  40c726:	push   DWORD PTR [ebp-0x24]
  40c729:	mov    BYTE PTR [eax],0xe9
  40c72c:	mov    eax,ds:0x42e2ab
  40c731:	push   DWORD PTR [eax]
  40c733:	push   DWORD PTR ds:0x42e507
  40c739:	push   DWORD PTR ds:0x42e2b3
  40c73f:	push   DWORD PTR ds:0x42e4e7
  40c745:	push   DWORD PTR ds:0x42eaf7
  40c74b:	push   DWORD PTR [ebp-0x28]
  40c74e:	push   DWORD PTR [ebp-0x2c]
  40c751:	mov    eax,DWORD PTR [ebp-0x14]
  40c754:	call   eax
  40c756:	mov    eax,DWORD PTR [ebp-0x30]
  40c759:	mov    ecx,DWORD PTR ds:0x42e4ab
  40c75f:	add    DWORD PTR [eax],ecx
  40c761:	pop    edi
  40c762:	pop    esi
  40c763:	leave  
  40c764:	ret    
  40c765:	push   ebp
  40c766:	mov    ebp,esp
  40c768:	sub    esp,0x18
  40c76b:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  40c772:	adc    DWORD PTR ds:0x42d00c,ebx
  40c778:	lea    eax,[ebp+0x14]
  40c77b:	and    ecx,ecx
  40c77d:	mov    DWORD PTR [ebp-0x4],eax
  40c780:	movzx  edx,BYTE PTR ds:0x42a014
  40c787:	sub    edx,DWORD PTR ds:0x42c00c
  40c78d:	mov    DWORD PTR ds:0x42a014,edx
  40c793:	push   esi
  40c794:	mov    esi,0xf89c85b9
  40c799:	movzx  edx,BYTE PTR ds:0x42b010
  40c7a0:	sbb    DWORD PTR ds:0x42a000,edx
  40c7a6:	mov    DWORD PTR [ebp-0xc],esi
  40c7a9:	lea    eax,[ebp-0xc]
  40c7ac:	mov    DWORD PTR ds:0x429020,0x1e
  40c7b6:	cmp    DWORD PTR ds:0x429020,0x0
  40c7bd:	je     0x40c861
  40c7c3:	cmp    DWORD PTR ds:0x429020,0x27
  40c7ca:	jne    0x40c7e3
  40c7d0:	push   0x42e0f4
  40c7d5:	push   DWORD PTR [ebp-0x20]
  40c7d8:	push   0x1
  40c7da:	push   DWORD PTR [ebp-0x10]
  40c7dd:	call   DWORD PTR ds:0x42ed53
  40c7e3:	xor    ecx,ecx
  40c7e5:	xor    ecx,DWORD PTR ds:0x429020
  40c7eb:	dec    ecx
  40c7ec:	mov    DWORD PTR ds:0x429020,ecx
  40c7f2:	jmp    0x40c7b6
  40c7f7:	and    DWORD PTR ds:0x429004,0x0
  40c801:	jmp    0x40c813
  40c806:	mov    ecx,DWORD PTR ds:0x429004
  40c80c:	inc    ecx
  40c80d:	mov    DWORD PTR ds:0x429004,ecx
  40c813:	cmp    DWORD PTR ds:0x429004,0x19
  40c81a:	jae    0x40c861
  40c820:	cmp    DWORD PTR ds:0x429004,0xf
  40c827:	jne    0x40c838
  40c82d:	push   0x42e251
  40c832:	call   DWORD PTR ds:0x42ed57
  40c838:	cmp    DWORD PTR ds:0x429004,0xe
  40c83f:	jne    0x40c852
  40c845:	mov    ecx,DWORD PTR ds:0x429004
  40c84b:	inc    ecx
  40c84c:	mov    DWORD PTR ds:0x429004,ecx
  40c852:	jmp    0x40c806
  40c857:	xor    DWORD PTR ds:0x42d004,0x27e5
  40c861:	mov    DWORD PTR [ebp-0x14],eax
  40c864:	mov    eax,DWORD PTR [ebp-0xc]
  40c867:	mov    edx,DWORD PTR [ebp-0x14]
  40c86a:	sbb    DWORD PTR ds:0x42a004,ecx
  40c870:	mov    ecx,0x7510899
  40c875:	xor    eax,ecx
  40c877:	add    DWORD PTR ds:0x42d014,0x42901c
  40c881:	add    eax,0x3272e0
  40c886:	neg    DWORD PTR ds:0x42d008
  40c88c:	mov    DWORD PTR [edx],eax
  40c88e:	mov    eax,ds:0x42e2a7
  40c893:	and    DWORD PTR ds:0x42b01c,0x0
  40c89d:	mov    edx,DWORD PTR ds:0x42b01c
  40c8a3:	inc    edx
  40c8a4:	mov    DWORD PTR ds:0x42b01c,edx
  40c8aa:	cmp    DWORD PTR ds:0x42b01c,0x1f
  40c8b1:	jne    0x40c8c2
  40c8b7:	push   0x641d
  40c8bc:	call   DWORD PTR ds:0x42ed5b
  40c8c2:	cmp    DWORD PTR ds:0x42b01c,0x1d
  40c8c9:	jb     0x40c89d
  40c8cf:	add    DWORD PTR ds:0x429008,edi
  40c8d5:	mov    edx,DWORD PTR [ebp-0x4]
  40c8d8:	mov    eax,DWORD PTR [eax]
  40c8da:	add    eax,DWORD PTR [edx]
  40c8dc:	sbb    DWORD PTR ds:0x429004,0x2443
  40c8e6:	push   edi
  40c8e7:	mov    DWORD PTR [ebp-0x8],eax
  40c8ea:	mov    edi,DWORD PTR [ebp+0x8]
  40c8ed:	and    DWORD PTR ds:0x429014,0x0
  40c8f7:	mov    edx,DWORD PTR ds:0x429014
  40c8fd:	inc    edx
  40c8fe:	mov    DWORD PTR ds:0x429014,edx
  40c904:	cmp    DWORD PTR ds:0x429014,0x20
  40c90b:	jne    0x40c921
  40c911:	push   0x429018
  40c916:	push   0x4f77
  40c91b:	call   DWORD PTR ds:0x42ed5f
  40c921:	cmp    DWORD PTR ds:0x429014,0x1e
  40c928:	jb     0x40c8f7
  40c92e:	movzx  edx,WORD PTR ds:0x42b00c
  40c935:	add    DWORD PTR ds:0x42d004,edx
  40c93b:	mov    eax,ds:0x42e42f
  40c940:	adc    edx,0xaa6
  40c946:	mov    eax,DWORD PTR [eax+0x198]
  40c94c:	sub    edx,DWORD PTR ds:0x42a010
  40c952:	xor    edi,ecx
  40c954:	mov    edx,0x3272e0
  40c959:	sub    DWORD PTR ds:0x42c000,0x6686
  40c963:	jmp    0x40ecd7
  40c968:	fild   QWORD PTR [edi+0x45]
  40c96b:	push   ecx
  40c96c:	mov    ch,0x3b
  40c96e:	mov    bl,0xb7
  40c970:	pop    esp
  40c971:	sub    DWORD PTR [ecx-0x30],esi
  40c974:	outs   dx,DWORD PTR ds:[esi]
  40c975:	lods   al,BYTE PTR ds:[esi]
  40c976:	out    dx,al
  40c977:	add    eax,0x7a7ae5cf
  40c97c:	adc    ebx,DWORD PTR [edi+0x7a]
  40c97f:	jp     0x40c936
  40c981:	hlt    
  40c982:	mul    DWORD PTR [edx]
  40c984:	clc    
  40c985:	in     al,dx
  40c986:	add    eax,0xeb6ad000
  40c98b:	lods   eax,DWORD PTR ds:[esi]
  40c98c:	xor    eax,DWORD PTR [eax-0x26]
  40c98f:	stc    
  40c990:	fld    QWORD PTR [ebp+edi*1-0x72a0dd31]
  40c997:	imul   edi,DWORD PTR [ebx-0x602ae180],0xf
  40c99e:	xchg   ebp,eax
  40c99f:	add    DWORD PTR [edi*8+0x1c56b325],ebx
  40c9a6:	hlt    
  40c9a7:	or     bh,bl
  40c9a9:	push   ss
  40c9aa:	mov    al,0xa5
  40c9ac:	in     eax,dx
  40c9ad:	push   ebp
  40c9ae:	mov    esp,0x9ebebcb1
  40c9b3:	pop    edi
  40c9b4:	lea    ebx,[ecx-0xa8c0eee]
  40c9ba:	push   cs
  40c9bb:	xchg   DWORD PTR [ebp+0x2227548e],esp
  40c9c1:	leave  
  40c9c2:	cmp    DWORD PTR [edx-0x2a],esp
  40c9c5:	sbb    edi,DWORD PTR [ebx]
  40c9c7:	dec    esi
  40c9c8:	out    0xcf,eax
  40c9ca:	mov    al,0xf4
  40c9cc:	test   eax,0xab0fbc79
  40c9d1:	pusha  
  40c9d2:	adc    al,0x7a
  40c9d4:	outs   dx,BYTE PTR fs:[esi]
  40c9d6:	int    0xf4
  40c9d8:	sbb    DWORD PTR [esi-0xe],0x3abe15e4
  40c9df:	outs   dx,DWORD PTR fs:[esi]
  40c9e1:	add    esi,DWORD PTR [ecx-0x46]
  40c9e4:	adc    DWORD PTR [edx+0x43dc8f4],ecx
  40c9ea:	imul   esi,edx,0x24
  40c9ed:	sub    al,0xee
  40c9ef:	push   edi
  40c9f0:	dec    ebx
  40c9f1:	push   0x34
  40c9f3:	test   BYTE PTR [esi+edx*1],dl
  40c9f6:	inc    ebp
  40c9f7:	sub    al,0xc1
  40c9f9:	lods   eax,DWORD PTR ds:[esi]
  40c9fa:	inc    ebx
  40c9fb:	push   ebp
  40c9fc:	pop    DWORD PTR [ebx]
  40c9fe:	xor    BYTE PTR [ebx-0x3a],bl
  40ca01:	push   ebp
  40ca02:	push   edi
  40ca03:	js     0x40c98a
  40ca05:	xchg   edx,eax
  40ca06:	pop    ds
  40ca07:	cmp    edx,DWORD PTR ds:0x4a7a7728
  40ca0d:	sbb    eax,0x909cdf1d
  40ca12:	pop    eax
  40ca13:	int3   
  40ca14:	jmp    0x40c9c2
  40ca16:	sub    BYTE PTR [eax+0x614bf1f7],cl
  40ca1c:	pop    es
  40ca1d:	outs   dx,DWORD PTR ds:[esi]
  40ca1e:	mov    DWORD PTR [eax],edi
  40ca20:	jg     0x40c9ef
  40ca22:	jmp    0x47de:0xbae9e064
  40ca29:	iret   
  40ca2a:	popa   
  40ca2b:	jp     0x40caa7
  40ca2d:	jo     0x40ca6f
  40ca2f:	push   ebp
  40ca30:	stos   BYTE PTR es:[edi],al
  40ca31:	jne    0x40ca52
  40ca33:	popf   
  40ca34:	xor    BYTE PTR [edx],bl
  40ca36:	xor    BYTE PTR [esi+0x66],ah
  40ca39:	xlat   BYTE PTR ds:[ebx]
  40ca3a:	test   al,0x95
  40ca3c:	in     eax,0x4d
  40ca3e:	js     0x40caa9
  40ca40:	div    DWORD PTR [ebp-0xe32c3dd]
  40ca46:	jmp    0x16b3:0x22ee1cf8
  40ca4d:	sub    bh,ch
  40ca4f:	retf   0x1776
  40ca52:	inc    edi
  40ca53:	jbe    0x40ca13
  40ca55:	adc    dh,ch
  40ca57:	pushf  
  40ca58:	loop   0x40cab9
  40ca5a:	stc    
  40ca5b:	mov    WORD PTR [edx-0x635cd4d8],cs
  40ca61:	pop    eax
  40ca62:	push   ebx
  40ca63:	or     BYTE PTR [ebp-0x2d],dl
  40ca66:	pop    esp
  40ca67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca68:	and    BYTE PTR [edx],dl
  40ca6a:	fist   WORD PTR [ecx-0x11]
  40ca6d:	add    BYTE PTR es:[edx+0x8],al
  40ca71:	xchg   DWORD PTR [esi],ebp
  40ca73:	adc    dh,BYTE PTR [eax+ebx*4-0x72]
  40ca77:	je     0x40cac4
  40ca79:	fsub   QWORD PTR [edx-0x1de77714]
  40ca7f:	test   al,ah
  40ca81:	adc    BYTE PTR [ebx-0xd],bh
  40ca84:	xchg   ebp,eax
  40ca85:	dec    esi
  40ca86:	jno    0x40caec
  40ca88:	xlat   BYTE PTR ds:[ebx]
  40ca89:	xchg   ecx,eax
  40ca8a:	xchg   edi,eax
  40ca8b:	mov    WORD PTR [esp+eax*4+0x6ee7173],gs
  40ca92:	push   ebx
  40ca93:	stos   DWORD PTR es:[edi],eax
  40ca94:	inc    edi
  40ca95:	cmp    al,0xf5
  40ca97:	adc    esp,ecx
  40ca99:	jae    0x40cb0e
  40ca9b:	xchg   edi,eax
  40ca9c:	push   ss
  40ca9d:	fld    st(7)
  40ca9f:	out    dx,eax
  40caa0:	mov    dl,0xc6
  40caa2:	scas   eax,DWORD PTR es:[edi]
  40caa3:	pop    ebx
  40caa4:	stos   DWORD PTR es:[edi],eax
  40caa5:	ret    
  40caa6:	ja     0x40ca3e
  40caa8:	mov    eax,0x55a86980
  40caad:	dec    ebp
  40caae:	add    DWORD PTR [ebx*8+0x25f5eb98],0x23d73e28
  40cab9:	ja     0x40ca8c
  40cabb:	mov    ebp,0xef983835
  40cac0:	mov    dl,0x16
  40cac2:	ret    0xbf66
  40cac5:	add    dh,cl
  40cac7:	mov    ch,0xb
  40cac9:	xchg   esp,eax
  40caca:	retf   0x2e33
  40cacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cace:	dec    ecx
  40cacf:	sti    
  40cad0:	pop    edi
  40cad1:	scas   eax,DWORD PTR es:[edi]
  40cad2:	fistp  QWORD PTR [ebx]
  40cad4:	je     0x40cb50
  40cad6:	pusha  
  40cad7:	(bad)
  40cada:	inc    ecx
  40cadb:	mov    WORD PTR [esi+0x7fc9b06c],?
  40cae1:	sub    bl,BYTE PTR [ebp-0x2d3492e0]
  40cae7:	xchg   edi,eax
  40cae8:	adc    eax,0x69a77b9
  40caed:	push   0xb3a51923
  40caf2:	xor    BYTE PTR [esi],0x24
  40caf5:	test   BYTE PTR [edi],bh
  40caf7:	xchg   ebx,eax
  40caf8:	out    dx,eax
  40caf9:	scas   al,BYTE PTR es:[edi]
  40cafa:	mov    eax,ds:0x22898bc6
  40caff:	sub    BYTE PTR [eax+0x4],0x2a
  40cb03:	stos   DWORD PTR es:[edi],eax
  40cb04:	mov    ch,0x7e
  40cb06:	loopne 0x40cb4e
  40cb08:	jge    0x40cb1a
  40cb0a:	jle    0x40caaf
  40cb0c:	out    dx,al
  40cb0d:	and    ebp,DWORD PTR [ecx+ebp*4+0x57]
  40cb11:	adc    al,0x79
  40cb13:	ins    DWORD PTR es:[edi],dx
  40cb14:	loopne 0x40cb80
  40cb16:	sbb    eax,0x5bd7f6d0
  40cb1b:	loope  0x40cafd
  40cb1d:	cmc    
  40cb1e:	adc    BYTE PTR [ebp-0x21242c49],dl
  40cb24:	es pop eax
  40cb26:	mov    eax,0x30229b78
  40cb2b:	retf   0xcb06
  40cb2e:	cmp    DWORD PTR [ecx-0x59],esi
  40cb31:	shr    ebx,1
  40cb33:	xor    edi,ebp
  40cb35:	out    0x64,al
  40cb37:	fwait
  40cb38:	sti    
  40cb39:	cmp    DWORD PTR [ecx],esp
  40cb3b:	fild   DWORD PTR [ecx]
  40cb3d:	push   ebp
  40cb3e:	adc    al,0xd8
  40cb40:	clc    
  40cb41:	(bad)  
  40cb42:	fcmovne st,st(1)
  40cb44:	aam    0x4f
  40cb46:	jno    0x40cbaf
  40cb48:	inc    esp
  40cb49:	adc    BYTE PTR [edi+0x5f825fb],ah
  40cb4f:	mov    ah,0x80
  40cb51:	xchg   esi,eax
  40cb52:	ret    
  40cb53:	in     eax,dx
  40cb54:	inc    esi
  40cb55:	std    
  40cb56:	mov    edx,0x51e677cb
  40cb5b:	lods   eax,DWORD PTR ds:[esi]
  40cb5c:	(bad)  
  40cb5d:	inc    esi
  40cb5e:	mov    dl,0xf5
  40cb60:	je     0x40cb21
  40cb62:	dec    edx
  40cb63:	inc    ecx
  40cb64:	les    ecx,FWORD PTR [edi+0x47fa9b91]
  40cb6a:	mul    DWORD PTR [eax+0x75d32d1a]
  40cb70:	je     0x40cb49
  40cb72:	cmp    eax,0x6dad9660
  40cb77:	pop    esp
  40cb78:	sub    eax,0x463af291
  40cb7d:	enter  0xd024,0xb1
  40cb81:	or     edx,DWORD PTR [edi]
  40cb83:	mov    eax,ds:0x8cf20ba6
  40cb88:	cmp    al,0x21
  40cb8a:	imul   edi,DWORD PTR [ecx+0x7840428e],0x8b5cb213
  40cb94:	mov    ah,0x61
  40cb96:	jne    0x40cc16
  40cb98:	mov    ds,WORD PTR [edi-0x80]
  40cb9b:	jae    0x40cc0b
  40cb9d:	stc    
  40cb9e:	pop    ds
  40cb9f:	jp     0x5d448a2a
  40cba5:	leave  
  40cba6:	aas    
  40cba7:	mov    bl,0x92
  40cba9:	rcr    BYTE PTR [ecx],0x6e
  40cbac:	sub    al,0xec
  40cbae:	clts   
  40cbb0:	je     0x40cb3e
  40cbb2:	fstp   DWORD PTR [ecx+0x1a21a42a]
  40cbb8:	std    
  40cbb9:	iret   
  40cbba:	pop    ds
  40cbbb:	add    esi,DWORD PTR [eax-0x7b4245b5]
  40cbc1:	sub    dl,0x62
  40cbc4:	cmovge eax,DWORD PTR [ebx+esi*4-0x9782364]
  40cbcc:	imul   ecx,DWORD PTR [ecx-0x17],0x21
  40cbd0:	xor    al,0x6b
  40cbd2:	mov    ebp,0xa4411afe
  40cbd7:	mov    esp,0x42081e2a
  40cbdc:	js     0x40cc48
  40cbde:	inc    esp
  40cbdf:	push   ebx
  40cbe0:	add    eax,0x1cb9a308
  40cbe5:	xchg   edx,eax
  40cbe6:	enter  0xa20c,0xdc
  40cbea:	sbb    edi,DWORD PTR [ecx-0x3529dd2]
  40cbf0:	shl    DWORD PTR [esi],cl
  40cbf2:	(bad)  
  40cbf3:	std    
  40cbf4:	dec    eax
  40cbf5:	fimul  DWORD PTR [ebx-0x67e86895]
  40cbfb:	xor    BYTE PTR [ebx-0x27],dh
  40cbfe:	jge    0x40cc14
  40cc00:	addr16 sbb eax,0x59439bd1
  40cc06:	lods   eax,DWORD PTR ds:[esi]
  40cc07:	jp     0x40cc4f
  40cc09:	ins    BYTE PTR es:[edi],dx
  40cc0a:	dec    eax
  40cc0b:	repz and eax,0x86d9235b
  40cc11:	in     al,dx
  40cc12:	xchg   edx,eax
  40cc13:	imul   ebx,DWORD PTR [ecx-0x469f0ff3],0xb3ba0010
  40cc1d:	dec    ecx
  40cc1e:	xlat   BYTE PTR ds:[ebx]
  40cc1f:	cmp    ebp,DWORD PTR es:[ecx-0x360012d]
  40cc26:	sbb    DWORD PTR [esp+ecx*2+0x55d473b7],eax
  40cc2d:	and    eax,0x7bb3e41a
  40cc32:	pop    ds
  40cc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc34:	xlat   BYTE PTR ds:[ebx]
  40cc35:	lods   eax,DWORD PTR ds:[esi]
  40cc36:	sub    eax,0x374e614f
  40cc3b:	fwait
  40cc3c:	icebp  
  40cc3d:	aas    
  40cc3e:	xchg   ecx,eax
  40cc3f:	jbe    0x40cbf8
  40cc41:	arpl   sp,bx
  40cc43:	ja     0x40cc03
  40cc45:	(bad)  
  40cc47:	daa    
  40cc48:	and    BYTE PTR [ecx-0x126d5fe],bh
  40cc4e:	fistp  DWORD PTR [ebx-0x56d40094]
  40cc54:	xor    dl,ah
  40cc56:	lock loope 0x40cc27
  40cc59:	and    BYTE PTR [esi],bh
  40cc5b:	push   ecx
  40cc5c:	sbb    DWORD PTR [ecx],esp
  40cc5e:	ins    BYTE PTR es:[edi],dx
  40cc5f:	jne    0x40cbe7
  40cc61:	push   0xffffffd5
  40cc63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc64:	and    dl,BYTE PTR [esp+eax*1]
  40cc67:	mov    edi,0x49331586
  40cc6c:	aas    
  40cc6d:	outs   dx,BYTE PTR ds:[esi]
  40cc6e:	sub    eax,DWORD PTR [ebx-0x52]
  40cc71:	nop
  40cc72:	jle    0x40cc35
  40cc74:	push   esi
  40cc75:	add    DWORD PTR [edi*4-0x4fb16c3c],edi
  40cc7c:	push   0xd0b6c8d2
  40cc81:	xchg   ebx,eax
  40cc82:	mov    DWORD PTR [eax],esp
  40cc84:	push   cs
  40cc85:	out    dx,eax
  40cc86:	icebp  
  40cc87:	pusha  
  40cc88:	sub    al,0xf3
  40cc8a:	adc    bl,BYTE PTR [eax-0x2a4d261]
  40cc90:	dec    eax
  40cc91:	or     eax,0x7fc99dec
  40cc96:	jmp    0xfda3:0x657012b4
  40cc9d:	dec    ebx
  40cc9e:	(bad)  
  40cca0:	ss stos BYTE PTR es:[edi],al
  40cca2:	fist   DWORD PTR [esi-0x34]
  40cca5:	lea    ebx,[edx]
  40cca7:	xchg   esp,eax
  40cca8:	stos   BYTE PTR es:[edi],al
  40cca9:	add    al,dh
  40ccab:	inc    ecx
  40ccac:	std    
  40ccad:	outs   dx,BYTE PTR ds:[esi]
  40ccae:	lahf   
  40ccaf:	imul   ebp,DWORD PTR [edi+0xa],0x2e
  40ccb3:	add    al,0x11
  40ccb5:	push   esi
  40ccb6:	fdivr  QWORD PTR [edi+0x74]
  40ccb9:	push   esi
  40ccba:	xchg   ecx,eax
  40ccbb:	fcomp  QWORD PTR [edx+0x838e409]
  40ccc1:	ror    BYTE PTR [edi*4-0x3f1b9b70],0x48
  40ccc9:	in     al,dx
  40ccca:	mov    al,0xf6
  40cccc:	cmp    al,0x57
  40ccce:	jmp    0x5ba6827
  40ccd3:	test   DWORD PTR [ebx-0x39],esi
  40ccd6:	mov    esp,0xf9f86010
  40ccdb:	inc    ebx
  40ccdc:	outs   dx,DWORD PTR ds:[esi]
  40ccdd:	ds pushf 
  40ccdf:	mov    ebp,0x39b56d19
  40cce4:	(bad)  
  40cce6:	sbb    DWORD PTR [edi],eax
  40cce8:	lock loopne 0x40cd59
  40cceb:	sub    DWORD PTR [ecx+0x132b8f9c],ecx
  40ccf1:	clc    
  40ccf2:	sub    esp,DWORD PTR [eax-0x75e4e197]
  40ccf8:	xor    BYTE PTR [edi-0x646f1058],al
  40ccfe:	dec    esp
  40ccff:	dec    edx
  40cd00:	push   edx
  40cd01:	icebp  
  40cd02:	push   ss
  40cd03:	rcr    DWORD PTR [ebp-0x5bf1616b],1
  40cd09:	ret    0x79a3
  40cd0c:	repz fwait
  40cd0e:	adc    ch,BYTE PTR [ebx+eax*1-0x1a1096b4]
  40cd15:	jno    0x40cd25
  40cd17:	std    
  40cd18:	(bad)  [ecx-0x11106918]
  40cd1e:	mov    esi,0x64249abd
  40cd23:	clc    
  40cd24:	mov    BYTE PTR [esi-0x3aae6392],bh
  40cd2a:	ins    DWORD PTR es:[edi],dx
  40cd2b:	push   ecx
  40cd2c:	fcom   st(6)
  40cd2e:	mov    ds:0x7cbb3cc1,eax
  40cd33:	shr    edi,cl
  40cd35:	sbb    ch,BYTE PTR [ebx-0x4f9a6df8]
  40cd3b:	add    cl,BYTE PTR [ecx+0x788c2205]
  40cd41:	fimul  DWORD PTR [ecx+0x3434e8da]
  40cd47:	dec    esp
  40cd48:	in     eax,0x4e
  40cd4a:	imul   DWORD PTR [ecx-0x65]
  40cd4d:	loopne 0x40cd53
  40cd4f:	arpl   WORD PTR [edi+ebp*8+0x57505322],di
  40cd56:	jmp    0xc39a:0x13a5ee19
  40cd5d:	cli    
  40cd5e:	cmp    cl,BYTE PTR [edx+0x5c]
  40cd61:	shl    esp,cl
  40cd63:	push   0xc1b76bdc
  40cd68:	sub    al,0x2c
  40cd6a:	inc    ebx
  40cd6b:	push   es
  40cd6c:	mov    cl,0xab
  40cd6e:	dec    esi
  40cd6f:	sahf   
  40cd70:	push   ss
  40cd71:	mov    ds:0xe460e03c,al
  40cd76:	jno    0x40cd52
  40cd78:	cmc    
  40cd79:	lds    edi,FWORD PTR [esi]
  40cd7b:	sar    BYTE PTR [eax-0x54b5ac5],cl
  40cd81:	push   ss
  40cd82:	cs stos BYTE PTR es:[edi],al
  40cd84:	adc    bl,BYTE PTR [edi]
  40cd86:	xor    eax,0x9572fe3b
  40cd8b:	pop    edi
  40cd8c:	or     BYTE PTR [ebp-0x1c509821],bh
  40cd92:	xchg   ecx,eax
  40cd93:	or     al,0xc4
  40cd95:	fdiv   DWORD PTR [eax-0x7e25de0]
  40cd9b:	inc    edx
  40cd9c:	add    eax,0xe44a1a33
  40cda1:	push   esi
  40cda2:	(bad)  [esp+eax*8]
  40cda5:	int3   
  40cda6:	mov    cl,0xe1
  40cda8:	popf   
  40cda9:	add    al,0x89
  40cdab:	sbb    bh,BYTE PTR [esi+0x6e]
  40cdae:	add    bh,BYTE PTR [ebp-0x2f8003b6]
  40cdb4:	inc    ebx
  40cdb5:	dec    esi
  40cdb6:	or     edx,ebp
  40cdb8:	cmp    eax,DWORD PTR ss:[ecx+0x17e10bf1]
  40cdbf:	dec    ebx
  40cdc0:	xchg   edi,eax
  40cdc1:	mov    esi,0xa94b6ea0
  40cdc6:	sbb    bh,ah
  40cdc8:	add    cl,BYTE PTR [edx-0x6]
  40cdcb:	xchg   edx,eax
  40cdcc:	imul   DWORD PTR [ebp-0x3fb5add6]
  40cdd2:	or     al,0xb1
  40cdd4:	push   ecx
  40cdd5:	enter  0x1bcc,0xb6
  40cdd9:	je     0x40ce01
  40cddb:	loop   0x40ce5b
  40cddd:	dec    edx
  40cdde:	sbb    al,0xb9
  40cde0:	in     eax,dx
  40cde1:	cmp    al,0xfe
  40cde3:	mov    ch,0x13
  40cde5:	mov    edx,eax
  40cde7:	scas   al,BYTE PTR es:[edi]
  40cde8:	jns    0x40ce5e
  40cdea:	add    ebp,DWORD PTR [ecx-0x6d01cfbe]
  40cdf0:	mov    ds:0xb9ef742d,eax
  40cdf5:	mov    ebp,0x34c46628
  40cdfa:	mov    al,ds:0xfc31f784
  40cdff:	cs inc ebx
  40ce01:	push   edx
  40ce02:	jae    0x40cdef
  40ce04:	push   ss
  40ce05:	cmc    
  40ce06:	retf   
  40ce07:	sub    al,0x8e
  40ce09:	arpl   bp,bx
  40ce0b:	pop    ecx
  40ce0c:	push   es
  40ce0d:	lds    esi,FWORD PTR [eax]
  40ce0f:	jbe    0x40ce76
  40ce11:	stos   DWORD PTR es:[edi],eax
  40ce12:	jns    0x40ce2b
  40ce14:	in     eax,0x7a
  40ce16:	xchg   ebp,eax
  40ce17:	pop    esp
  40ce18:	aas    
  40ce19:	xor    esi,DWORD PTR [esi-0xd]
  40ce1c:	pop    edi
  40ce1d:	fucomp st(2)
  40ce1f:	imul   BYTE PTR ds:0x3c2e03d0
  40ce25:	push   ds
  40ce26:	push   ecx
  40ce27:	sbb    DWORD PTR [ecx+0x2574f132],ebp
  40ce2d:	int    0x97
  40ce2f:	add    al,0xb0
  40ce31:	xchg   esi,eax
  40ce32:	xlat   BYTE PTR ds:[ebx]
  40ce33:	xchg   ebx,eax
  40ce34:	ret    0x610c
  40ce37:	aas    
  40ce38:	mov    ecx,0x392925d
  40ce3d:	pop    ds
  40ce3e:	es (bad) 
  40ce40:	xchg   esi,eax
  40ce41:	xlat   BYTE PTR ds:[ebx]
  40ce42:	data16 in al,dx
  40ce44:	cmp    al,0x24
  40ce46:	jge    0x40ce9d
  40ce48:	xor    DWORD PTR [ebx],esi
  40ce4a:	fisttp WORD PTR [ebp+0x18015523]
  40ce50:	adc    eax,0x30546f64
  40ce55:	gs sub al,0x54
  40ce58:	add    al,0x19
  40ce5a:	out    dx,eax
  40ce5b:	adc    cl,BYTE PTR [edx+0x26]
  40ce5e:	aaa    
  40ce5f:	repnz inc edi
  40ce61:	or     al,0xf9
  40ce63:	repnz (bad) [esi]
  40ce66:	test   DWORD PTR [eax],0xf10db8ab
  40ce6c:	dec    esi
  40ce6d:	jbe    0x40ce9b
  40ce6f:	out    dx,eax
  40ce70:	mov    bh,bh
  40ce72:	nop
  40ce73:	scas   eax,DWORD PTR es:[edi]
  40ce74:	fs jmp 0x40ce16
  40ce77:	(bad)  
  40ce78:	dec    ecx
  40ce79:	fistp  WORD PTR [eax]
  40ce7b:	aam    0xc
  40ce7d:	inc    edi
  40ce7e:	cmp    al,0xdf
  40ce80:	ins    DWORD PTR es:[edi],dx
  40ce81:	xlat   BYTE PTR ds:[ebx]
  40ce82:	fsubr  DWORD PTR [edx+0xf]
  40ce85:	int    0xd0
  40ce87:	fisttp WORD PTR [esi-0x6c]
  40ce8a:	(bad)  
  40ce8b:	seto   BYTE PTR [ebx+0x18b7fa94]
  40ce92:	int3   
  40ce93:	pushf  
  40ce94:	shr    DWORD PTR [ebp-0x13],0x1c
  40ce98:	pop    ebp
  40ce99:	sbb    BYTE PTR [eax-0x6],dh
  40ce9c:	push   cs
  40ce9d:	sahf   
  40ce9e:	mov    WORD PTR [eax+edx*2],es
  40cea1:	mov    dl,0x6a
  40cea3:	jnp    0x40cef3
  40cea5:	retf   0xa4a7
  40cea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cea9:	loopne 0x40cec2
  40ceab:	add    eax,0xe98afef3
  40ceb1:	push   esp
  40ceb2:	and    eax,0x89b8db0c
  40ceb7:	stc    
  40ceb8:	pop    ds
  40ceb9:	outs   dx,BYTE PTR ds:[esi]
  40ceba:	jne    0x40ce5a
  40cebc:	shr    DWORD PTR [edx+ebx*4-0x72b9fb07],cl
  40cec3:	mov    esp,edi
  40cec5:	test   al,0x3b
  40cec7:	ret    0x6c94
  40ceca:	sbb    eax,0x4990f5f8
  40cecf:	imul   edi,DWORD PTR [edx-0xb],0xc4664c83
  40ced6:	pop    ebp
  40ced7:	add    ebx,DWORD PTR [edi-0xf23e794]
  40cedd:	jo     0x40cee6
  40cedf:	inc    esi
  40cee0:	lea    esp,[edi]
  40cee2:	(bad)  
  40cee3:	sbb    ebp,DWORD PTR [esp+ebp*4+0x2c133cdd]
  40ceea:	dec    esp
  40ceeb:	xchg   ecx,eax
  40ceec:	dec    ecx
  40ceed:	loop   0x40cea2
  40ceef:	int    0x9a
  40cef1:	(bad)  
  40cef2:	ret    
  40cef3:	xchg   edi,eax
  40cef4:	jg     0x40ceb3
  40cef6:	(bad)  
  40cef7:	xchg   esp,eax
  40cef8:	add    DWORD PTR [eax+0x17885480],ebp
  40cefe:	scas   eax,DWORD PTR es:[edi]
  40ceff:	outs   dx,DWORD PTR ds:[esi]
  40cf00:	jge    0x40ced1
  40cf02:	add    ah,dh
  40cf04:	(bad)
  40cf08:	jne    0x40cea2
  40cf0a:	sbb    al,BYTE PTR [edi-0x41]
  40cf0d:	fist   DWORD PTR [edx+0x18]
  40cf10:	pop    eax
  40cf11:	es cwde 
  40cf13:	or     eax,0x44e96020
  40cf18:	cmp    BYTE PTR [edi+eax*4+0x29695a51],bh
  40cf1f:	and    esp,ecx
  40cf21:	mov    ds:0x4a711787,al
  40cf26:	repz and DWORD PTR [esi+0xa518733],eax
  40cf2d:	test   BYTE PTR [edx-0x1fa59ded],ch
  40cf33:	and    edx,DWORD PTR [ecx+edx*8-0x5eeffc42]
  40cf3a:	mov    edx,0x90009900
  40cf3f:	inc    edi
  40cf40:	xchg   ebx,eax
  40cf41:	retf   
  40cf42:	push   0xffffffce
  40cf44:	pop    ebp
  40cf45:	or     dh,BYTE PTR [ebx+eiz*8]
  40cf48:	in     al,0xa6
  40cf4a:	hlt    
  40cf4b:	fdiv   st,st(0)
  40cf4d:	sbb    cl,BYTE PTR [eax+esi*2+0x28ea1f3]
  40cf54:	scas   eax,DWORD PTR es:[edi]
  40cf55:	jge    0x40cf08
  40cf57:	jecxz  0x40cf7b
  40cf59:	xchg   edx,eax
  40cf5a:	or     al,0x2f
  40cf5c:	shl    ecx,0xb2
  40cf5f:	dec    edx
  40cf60:	jl     0x40cef5
  40cf62:	sub    edx,DWORD PTR [edx+0x27aff58c]
  40cf68:	mov    ah,BYTE PTR [ebp+0x4c]
  40cf6b:	iret   
  40cf6c:	and    al,0x3b
  40cf6e:	and    eax,DWORD PTR [eax]
  40cf70:	pop    ebx
  40cf71:	push   0x73
  40cf73:	int3   
  40cf74:	shr    BYTE PTR [ebp-0x72ce7306],0x7d
  40cf7b:	sahf   
  40cf7c:	sbb    al,0x95
  40cf7e:	fadd   DWORD PTR [ebp+0x1605563]
  40cf84:	lods   eax,DWORD PTR ds:[esi]
  40cf85:	cwde   
  40cf86:	add    BYTE PTR fs:[edi],bh
  40cf89:	cli    
  40cf8a:	sub    ch,cl
  40cf8c:	push   edx
  40cf8d:	loopne 0x40cffb
  40cf8f:	stos   BYTE PTR es:[edi],al
  40cf90:	jmp    0x40cfab
  40cf92:	mov    ch,0xc7
  40cf94:	xchg   edi,eax
  40cf95:	ins    BYTE PTR es:[edi],dx
  40cf96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf97:	jb     0x40cfd0
  40cf99:	pop    esi
  40cf9a:	scas   al,BYTE PTR es:[edi]
  40cf9b:	test   eax,0x64b13895
  40cfa0:	mov    edx,0xb302829a
  40cfa5:	(bad)  
  40cfa7:	rcr    DWORD PTR [edx+0x758d7629],0x42
  40cfae:	ja     0x40cfed
  40cfb0:	cmp    dh,0xd8
  40cfb3:	cld    
  40cfb4:	xor    eax,0x382b4c79
  40cfb9:	(bad)  
  40cfbb:	and    ecx,DWORD PTR [esi]
  40cfbd:	stos   BYTE PTR es:[edi],al
  40cfbe:	inc    ecx
  40cfbf:	mov    ebx,0x699430d6
  40cfc4:	ins    BYTE PTR es:[edi],dx
  40cfc5:	outs   dx,DWORD PTR ds:[esi]
  40cfc6:	jae    0x40cf72
  40cfc8:	aad    0x4d
  40cfca:	jl     0x40cfbb
  40cfcc:	shr    BYTE PTR [ebp-0x2ebebd6c],1
  40cfd2:	jnp    0x40cf60
  40cfd4:	dec    ebp
  40cfd5:	std    
  40cfd6:	adc    al,0x18
  40cfd8:	push   edx
  40cfd9:	inc    esi
  40cfda:	sbb    eax,0x8a507aa8
  40cfdf:	cmp    ebp,DWORD PTR [ebp+0x73]
  40cfe2:	cmovae ecx,DWORD PTR [edx+0x1290c894]
  40cfe9:	sbb    bh,0x8d
  40cfec:	mov    ebx,0xf1448539
  40cff1:	and    ebp,esi
  40cff3:	sub    al,BYTE PTR [eax+0x2d]
  40cff6:	adc    ebp,DWORD PTR [edi+0x5973ab95]
  40cffc:	sbb    al,0xe2
  40cffe:	jbe    0x40cfcc
  40d000:	sbb    BYTE PTR [ecx-0x52d306c6],0xd4
  40d007:	test   DWORD PTR [edi],edx
  40d009:	retf   0xfa72
  40d00c:	out    dx,al
  40d00d:	and    BYTE PTR [esi],dl
  40d00f:	jno    0x40cffe
  40d011:	das    
  40d012:	bound  edx,QWORD PTR [ebx+0x46cb41d9]
  40d018:	pop    ecx
  40d019:	das    
  40d01a:	icebp  
  40d01b:	(bad)  
  40d01c:	jecxz  0x40d05c
  40d01e:	dec    ebx
  40d01f:	cwde   
  40d020:	test   ah,0xd2
  40d023:	and    eax,0x52396afc
  40d028:	sbb    BYTE PTR [ebp-0x4a5ab211],0x13
  40d02f:	sbb    al,0x83
  40d031:	and    eax,0x63161bfe
  40d036:	and    ebp,DWORD PTR [edx+0x3a2c6650]
  40d03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d03d:	popf   
  40d03e:	push   eax
  40d03f:	pop    ebx
  40d040:	cmp    al,0x68
  40d042:	mov    al,ds:0x37d2ac5e
  40d047:	jne    0x40cfe3
  40d049:	dec    edx
  40d04a:	stc    
  40d04b:	fld    QWORD PTR [eax-0x54]
  40d04e:	mov    ebp,DWORD PTR [ebp+0x11cf28cc]
  40d054:	daa    
  40d055:	aam    0x95
  40d057:	out    0x1b,eax
  40d059:	pop    eax
  40d05a:	dec    esi
  40d05b:	adc    cl,BYTE PTR [ecx-0x5fbd48e5]
  40d061:	sti    
  40d062:	adc    al,0xa0
  40d064:	dec    esi
  40d065:	icebp  
  40d066:	outs   dx,WORD PTR ds:[esi]
  40d068:	ret    0xd7c8
  40d06b:	mov    esp,0xdf046ef0
  40d070:	xor    BYTE PTR [eax+ecx*4],bl
  40d073:	jns    0x40d018
  40d075:	xlat   BYTE PTR ds:[ebx]
  40d076:	mov    ebp,0x43c2391
  40d07b:	pop    edx
  40d07c:	lds    edi,FWORD PTR [eax-0x48]
  40d07f:	out    dx,al
  40d080:	push   edx
  40d081:	and    dh,BYTE PTR [esi-0x5aa484ac]
  40d087:	js     0x40d027
  40d089:	mov    al,0x7a
  40d08b:	jbe    0x40d038
  40d08d:	popf   
  40d08e:	xor    esp,DWORD PTR [edi-0xf]
  40d091:	shl    DWORD PTR [edx+0x217d4842],cl
  40d097:	out    0xf3,eax
  40d099:	(bad)  
  40d09a:	aad    0xf4
  40d09c:	mov    ch,0x4c
  40d09e:	loopne 0x40d05d
  40d0a0:	ss xchg ebp,eax
  40d0a2:	mov    ebp,0xc98a1d62
  40d0a7:	int    0x1
  40d0a9:	mulps  xmm6,XMMWORD PTR ds:0x347c8969
  40d0b0:	mov    ds:0x8e8563ca,al
  40d0b5:	mov    WORD PTR [eax+edx*4+0x6a],?
  40d0b9:	ret    0x59db
  40d0bc:	adc    bh,BYTE PTR ds:0xce277c9c
  40d0c2:	inc    eax
  40d0c3:	mov    esp,0x731e5e69
  40d0c8:	jnp    0x40d130
  40d0ca:	(bad)  
  40d0cb:	mov    eax,gs:0x41f67e1
  40d0d1:	push   ds
  40d0d2:	and    edi,ebx
  40d0d4:	inc    ebp
  40d0d5:	sbb    esp,ebp
  40d0d7:	inc    esp
  40d0d8:	dec    BYTE PTR [edi]
  40d0da:	adc    BYTE PTR [esi],dl
  40d0dc:	mov    ebx,0xc9b6d385
  40d0e1:	xchg   ebp,eax
  40d0e2:	stos   DWORD PTR es:[edi],eax
  40d0e3:	mov    ebp,0x7725780b
  40d0e8:	shl    DWORD PTR [eax-0x56],cl
  40d0eb:	cli    
  40d0ec:	(bad)  
  40d0ed:	out    0xf4,al
  40d0ef:	mov    ebp,0xe85b5db
  40d0f4:	inc    esi
  40d0f5:	je     0x40d14b
  40d0f7:	sbb    DWORD PTR [edx-0x30],esp
  40d0fa:	sub    DWORD PTR [esi],ebx
  40d0fc:	inc    eax
  40d0fd:	call   0xa4ed:0x4cf6845c
  40d104:	mov    ?,WORD PTR [ebx-0x1cfe49ef]
  40d10a:	loope  0x40d154
  40d10c:	or     ah,BYTE PTR [edx]
  40d10e:	bndldx (bad),ds:0x59b9c19f
  40d115:	out    0x54,eax
  40d117:	push   ds
  40d118:	mov    al,ds:0xbc571e
  40d11d:	int    0x17
  40d11f:	jge    0x40d0f5
  40d121:	fwait
  40d122:	xor    edx,DWORD PTR [edi+0x12]
  40d125:	paddd  mm7,QWORD PTR [edi+0x46]
  40d129:	scas   eax,DWORD PTR es:[edi]
  40d12a:	aam    0x85
  40d12c:	shl    BYTE PTR [eax-0x1baa0598],cl
  40d132:	fwait
  40d133:	push   ebp
  40d134:	jmp    FWORD PTR [eax-0x3fc41ece]
  40d13a:	mov    esp,0x73703879
  40d13f:	call   0x7e959cc4
  40d144:	cmp    al,0x50
  40d146:	call   0xcb66:0x25234b74
  40d14d:	in     eax,0x52
  40d14f:	pushf  
  40d150:	adc    BYTE PTR [ecx-0x9526faf],0xbf
  40d157:	(bad)  
  40d158:	cwde   
  40d159:	sbb    ch,BYTE PTR [ecx]
  40d15b:	xchg   ecx,eax
  40d15c:	inc    edi
  40d15d:	pop    ss
  40d15e:	mov    ds:0xad9eb755,eax
  40d163:	pop    eax
  40d164:	pop    esp
  40d165:	sbb    ebx,edx
  40d167:	das    
  40d168:	in     eax,dx
  40d169:	push   cs
  40d16a:	in     eax,0xb7
  40d16c:	xor    ebp,DWORD PTR [edx]
  40d16e:	sahf   
  40d16f:	cmc    
  40d170:	push   esi
  40d171:	addr16 xor eax,0xb2595405
  40d177:	js     0x40d175
  40d179:	sub    DWORD PTR ds:[edx],ebx
  40d17c:	and    ah,ah
  40d17e:	js     0x40d187
  40d180:	fcmovne st,st(1)
  40d182:	cmp    DWORD PTR [eax-0x23993726],ecx
  40d188:	inc    edi
  40d189:	aaa    
  40d18a:	icebp  
  40d18b:	js     0x40d1fe
  40d18d:	ret    0xbff1
  40d190:	dec    esp
  40d191:	sub    al,0x7
  40d193:	popf   
  40d194:	retf   0xa350
  40d197:	mov    es,WORD PTR [edi]
  40d199:	sub    DWORD PTR [ecx+eiz*8+0xc62d8c2],edx
  40d1a0:	cmp    DWORD PTR [ebx],ecx
  40d1a2:	jp     0x40d1ae
  40d1a4:	pop    ebx
  40d1a5:	ror    bl,1
  40d1a7:	aaa    
  40d1a8:	jno    0x40d194
  40d1aa:	jmp    0x40d1b3
  40d1ac:	sub    BYTE PTR [ecx-0x1ab6bf95],ch
  40d1b2:	gs mov dl,0x9e
  40d1b5:	mov    bh,0x8d
  40d1b7:	ins    DWORD PTR es:[edi],dx
  40d1b8:	inc    ebx
  40d1b9:	je     0x40d158
  40d1bb:	mov    al,0x92
  40d1bd:	pushf  
  40d1be:	inc    eax
  40d1bf:	and    eax,eax
  40d1c1:	ss out dx,eax
  40d1c3:	push   ebp
  40d1c4:	mov    ch,0x7c
  40d1c6:	xchg   ah,ch
  40d1c8:	mov    edx,0xe9f06152
  40d1cd:	test   DWORD PTR [edi-0x65a73264],ebx
  40d1d3:	add    eax,0xfc2d379e
  40d1d8:	out    dx,al
  40d1d9:	bound  ecx,QWORD PTR [edi-0x67]
  40d1dc:	mov    BYTE PTR [edi-0x4eed962b],bl
  40d1e2:	imul   ebx,DWORD PTR [ebp+0x65e08451],0xffffffb6
  40d1e9:	cmp    al,0xa5
  40d1eb:	jnp    0x40d16f
  40d1ed:	aam    0x51
  40d1ef:	fwait
  40d1f0:	outs   dx,BYTE PTR ds:[esi]
  40d1f1:	aad    0x81
  40d1f3:	cmp    DWORD PTR [esi],0xfffffffc
  40d1f6:	sub    edx,edi
  40d1f8:	popa   
  40d1f9:	ret    
  40d1fa:	cmp    al,0xb9
  40d1fc:	cmp    DWORD PTR [esi],esi
  40d1fe:	cmp    dh,BYTE PTR [edi+0x2db54804]
  40d204:	int    0xc6
  40d206:	jle    0x40d247
  40d208:	and    bh,BYTE PTR [esi]
  40d20a:	fistp  QWORD PTR [edx-0x19]
  40d20d:	out    0x75,al
  40d20f:	dec    DWORD PTR [edi-0x62]
  40d212:	(bad)  
  40d214:	fwait
  40d215:	jae    0x40d240
  40d217:	test   dh,bl
  40d219:	gs retf 0xe2fb
  40d21d:	push   esp
  40d21e:	sub    ebp,eax
  40d220:	fndisi(8087 only) 
  40d222:	xchg   ecx,eax
  40d223:	cmp    eax,0xafa82fe6
  40d228:	jge    0x40d28e
  40d22a:	or     ecx,DWORD PTR [eax+ebx*8-0x24]
  40d22e:	or     dl,BYTE PTR [ecx-0x36]
  40d231:	ins    BYTE PTR es:[edi],dx
  40d232:	das    
  40d233:	in     eax,0x58
  40d235:	aam    0x52
  40d237:	jns    0x40d24a
  40d239:	cli    
  40d23a:	test   DWORD PTR [eax+0x70d60233],0x456df626
  40d244:	(bad)  
  40d245:	clc    
  40d246:	and    ebp,eax
  40d248:	repz out 0x68,al
  40d24b:	xchg   BYTE PTR [esi+0x7e21409c],dl
  40d251:	or     bh,ch
  40d253:	xchg   edx,eax
  40d254:	sub    BYTE PTR [ecx+0x79],0x0
  40d258:	retf   
  40d259:	push   esi
  40d25a:	cwde   
  40d25b:	jnp    0x40d24f
  40d25d:	ds jg  0x40d21f
  40d260:	repz sub DWORD PTR [edx-0x4d1d5944],ebp
  40d267:	push   ebx
  40d268:	hlt    
  40d269:	mov    BYTE PTR [ebx-0x259b43d8],bl
  40d26f:	lds    edx,FWORD PTR [edi+0x39d98bee]
  40d275:	sub    edx,esp
  40d277:	(bad)  
  40d278:	cmp    DWORD PTR [edi],edx
  40d27a:	or     bh,0x89
  40d27d:	inc    esi
  40d27e:	xchg   ah,dh
  40d280:	sbb    edi,DWORD PTR [esi]
  40d282:	clc    
  40d283:	sub    BYTE PTR [ebp-0x38e78fc8],bh
  40d289:	pop    ecx
  40d28a:	fdiv   DWORD PTR [ecx+0x1d]
  40d28d:	jmp    DWORD PTR [ebp+0x635e8b3e]
  40d293:	sar    DWORD PTR [edx-0x27],0x1b
  40d297:	pop    eax
  40d298:	adc    BYTE PTR [edx-0x1f501ae6],bl
  40d29e:	sbb    eax,0x52b137aa
  40d2a3:	xor    ebx,esp
  40d2a5:	addr16 fdivrp st(5),st
  40d2a8:	jmp    0x4c60:0x305f5d58
  40d2af:	lock sbb BYTE PTR [edi-0x44],cl
  40d2b3:	mov    edi,0xd4fce453
  40d2b8:	mov    edx,cs
  40d2ba:	pop    edi
  40d2bb:	xchg   edx,eax
  40d2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2bd:	loope  0x40d31c
  40d2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c0:	mov    ds:0x94af2580,al
  40d2c5:	xchg   edi,ecx
  40d2c7:	cmp    dh,0x17
  40d2ca:	adc    DWORD PTR [ebx-0x3515fab8],ebx
  40d2d0:	sub    DWORD PTR [eax-0x6],0x460c2ae1
  40d2d7:	bound  edi,QWORD PTR [ecx+ebp*1+0x16fec1a3]
  40d2de:	in     al,dx
  40d2df:	jp     0x40d33b
  40d2e1:	pop    eax
  40d2e2:	jo     0x40d2a0
  40d2e4:	inc    ebx
  40d2e5:	fisttp WORD PTR [ebp+0x682f84b4]
  40d2eb:	lods   eax,DWORD PTR ds:[esi]
  40d2ec:	push   esp
  40d2ed:	sti    
  40d2ee:	inc    esi
  40d2ef:	test   BYTE PTR [eax-0x439df35b],0xe0
  40d2f6:	mov    cl,0x2
  40d2f8:	outs   dx,BYTE PTR ds:[esi]
  40d2f9:	je     0x40d2fc
  40d2fb:	add    edx,ecx
  40d2fd:	cld    
  40d2fe:	xchg   DWORD PTR [esi-0x23],esi
  40d301:	shl    al,1
  40d303:	inc    ebx
  40d304:	push   eax
  40d305:	mov    cs,esi
  40d307:	pop    ss
  40d308:	aaa    
  40d309:	mul    ecx
  40d30b:	out    0x16,al
  40d30d:	iret   
  40d30e:	dec    ebp
  40d30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d310:	add    ah,ch
  40d312:	repz add eax,0xf758423e
  40d318:	pop    es
  40d319:	popf   
  40d31a:	and    bh,BYTE PTR [edi]
  40d31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d31d:	adc    al,BYTE PTR [ebp-0x10]
  40d320:	jne    0x40d2fd
  40d322:	or     al,0x91
  40d324:	scas   eax,DWORD PTR es:[edi]
  40d325:	retfw  
  40d327:	and    DWORD PTR [esi+0x17f698e],ebp
  40d32d:	push   esp
  40d32e:	bound  esp,QWORD PTR [ebp-0x4fc58724]
  40d334:	jbe    0x40d2c4
  40d336:	inc    ebx
  40d337:	in     eax,dx
  40d338:	or     DWORD PTR [eax+0x3f],edi
  40d33b:	outs   dx,BYTE PTR ds:[esi]
  40d33c:	retf   
  40d33d:	pushf  
  40d33e:	jmp    0x40d31e
  40d340:	pusha  
  40d341:	rcr    dh,cl
  40d343:	loop   0x40d33f
  40d345:	fs fsubrp st(5),st
  40d348:	idiv   DWORD PTR [bx+di-0x1ad4]
  40d34d:	mov    ebx,DWORD PTR [edx-0x75]
  40d350:	cmp    cl,BYTE PTR [esi-0x2458b94]
  40d356:	rcl    dh,cl
  40d358:	add    dh,BYTE PTR [ecx+0x1242b881]
  40d35e:	and    DWORD PTR [esp+ebp*2+0x41],eax
  40d362:	bound  edx,QWORD PTR [esi]
  40d364:	(bad)  
  40d365:	or     ebx,ebx
  40d367:	jmp    DWORD PTR [edx+edx*4-0x6818ad09]
  40d36e:	inc    ebx
  40d36f:	push   ss
  40d370:	stc    
  40d371:	scas   eax,DWORD PTR es:[edi]
  40d372:	cmp    edx,DWORD PTR [ebx]
  40d374:	pop    ss
  40d375:	sub    al,0xc3
  40d377:	(bad)  
  40d378:	ror    bh,cl
  40d37a:	pop    edi
  40d37b:	js     0x40d33b
  40d37d:	xor    edx,DWORD PTR [ebx]
  40d37f:	mov    al,0x43
  40d381:	xchg   esi,eax
  40d382:	xor    bl,BYTE PTR [edx-0x1b]
  40d385:	hlt    
  40d386:	sub    eax,DWORD PTR [ecx-0x1cfb8378]
  40d38c:	fisub  DWORD PTR [ebp-0x334f4877]
  40d392:	daa    
  40d393:	add    esi,ecx
  40d395:	dec    esp
  40d396:	cdq    
  40d397:	push   esi
  40d398:	mov    ebx,0xc6a4a002
  40d39d:	imul   esi,DWORD PTR [eax+edx*2-0x2e71b825],0xd85c94d0
  40d3a8:	push   es
  40d3a9:	icebp  
  40d3aa:	xchg   ecx,eax
  40d3ab:	xchg   ecx,eax
  40d3ac:	pop    edx
  40d3ad:	mov    esi,0xa58010cf
  40d3b2:	sub    ebx,DWORD PTR [eax]
  40d3b4:	dec    eax
  40d3b5:	int    0xca
  40d3b7:	jle    0x40d384
  40d3b9:	xor    ecx,DWORD PTR [esi]
  40d3bb:	ret    0x9301
  40d3be:	sub    dl,BYTE PTR [ebx+edx*2]
  40d3c1:	or     eax,0x882f4320
  40d3c6:	inc    edi
  40d3c7:	sub    eax,0x3fbc9be2
  40d3cc:	stc    
  40d3cd:	(bad)  
  40d3cf:	cmp    edx,DWORD PTR [ebp+0x65]
  40d3d2:	xlat   BYTE PTR ds:[ebx]
  40d3d3:	mov    al,0xce
  40d3d5:	xchg   edx,eax
  40d3d6:	rcr    BYTE PTR [ebp-0x41688ab6],0x21
  40d3dd:	push   0xffffffde
  40d3df:	(bad)  
  40d3e1:	bound  ebp,QWORD PTR [esi-0x6fd2104e]
  40d3e7:	cdq    
  40d3e8:	mov    WORD PTR [esi],ds
  40d3ea:	dec    esi
  40d3eb:	fwait
  40d3ec:	adc    cl,BYTE PTR [edx+0x4a]
  40d3ef:	cmp    bl,bl
  40d3f1:	cmc    
  40d3f2:	sub    ebx,DWORD PTR [ecx+0x4d]
  40d3f5:	fwait
  40d3f6:	adc    DWORD PTR [ebp+0x28],0xe655a34a
  40d3fd:	std    
  40d3fe:	jmp    0x4fa4c74
  40d403:	ror    BYTE PTR [edi-0x7c],1
  40d406:	sbb    BYTE PTR [ecx-0x2d],bh
  40d409:	imul   BYTE PTR [eax+0x7191f67c]
  40d40f:	or     ecx,DWORD PTR [ebx-0x3b02fe32]
  40d415:	rcl    edx,cl
  40d417:	popa   
  40d418:	shl    BYTE PTR [ecx-0x262de08a],1
  40d41e:	xor    bh,dl
  40d420:	aad    0x2f
  40d422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d423:	inc    esi
  40d424:	push   esi
  40d425:	push   edx
  40d426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d427:	mov    ebp,0x9bcb2ee8
  40d42c:	mov    ebp,0x202c26a5
  40d431:	mov    ds:0xb53d67c5,al
  40d436:	ss xchg edx,eax
  40d438:	jmp    0x40d466
  40d43a:	xchg   edx,eax
  40d43b:	mov    bh,0x2f
  40d43d:	cmp    bh,BYTE PTR [edi-0x4f8755ea]
  40d443:	sahf   
  40d444:	xchg   ebp,eax
  40d445:	cmp    DWORD PTR [ebx-0x4e5a8292],eax
  40d44b:	je     0x40d4c3
  40d44d:	pop    edi
  40d44e:	leave  
  40d44f:	fwait
  40d450:	cmp    BYTE PTR [ecx+0x0],bl
  40d453:	inc    ecx
  40d454:	and    edx,edx
  40d456:	xchg   ebx,eax
  40d457:	pop    edi
  40d458:	shr    BYTE PTR [edi*8+0x1ef63f05],cl
  40d45f:	popa   
  40d460:	test   DWORD PTR [eax+0x60f7c3fc],ecx
  40d466:	rol    BYTE PTR [eax+0x2f957ebb],0x0
  40d46d:	imul   esi,DWORD PTR [ecx-0x21],0xbd15ff3a
  40d474:	lods   eax,DWORD PTR ds:[esi]
  40d475:	jle    0x40d407
  40d477:	xchg   ebx,eax
  40d478:	sbb    eax,0xc8acb622
  40d47d:	loop   0x40d4a9
  40d47f:	inc    ecx
  40d480:	jecxz  0x40d40c
  40d482:	popf   
  40d483:	jecxz  0x40d4c0
  40d485:	js     0x40d460
  40d487:	lea    eax,[ecx]
  40d489:	fistp  WORD PTR [edi]
  40d48b:	lock or bl,bl
  40d48e:	push   ebx
  40d48f:	mov    ebx,0xa353529a
  40d494:	test   DWORD PTR [edx-0x6a],esi
  40d497:	pop    DWORD PTR [eax-0xd]
  40d49a:	mov    BYTE PTR [ebx],dl
  40d49c:	jnp    0x40d50a
  40d49e:	in     al,dx
  40d49f:	mov    ds:0x2dbe24b4,eax
  40d4a4:	xchg   edx,eax
  40d4a5:	push   0x1499e534
  40d4aa:	push   esp
  40d4ab:	sti    
  40d4ac:	dec    esp
  40d4ad:	mov    esi,0xdbb77f9b
  40d4b2:	mov    ah,0x73
  40d4b4:	mov    edi,0x3fdb7f5f
  40d4b9:	pop    ss
  40d4ba:	or     DWORD PTR [ebp+esi*8+0x75],0xfe77734
  40d4c2:	ins    DWORD PTR es:[edi],dx
  40d4c3:	xchg   edx,eax
  40d4c4:	and    ch,BYTE PTR [edx+ecx*1]
  40d4c7:	shl    ebp,1
  40d4c9:	and    DWORD PTR [esp+eiz*4],esi
  40d4cc:	adc    eax,DWORD PTR [ebx-0x4a]
  40d4cf:	data16 (bad) 
  40d4d1:	cmp    DWORD PTR [esi+0x2d],eax
  40d4d4:	cdq    
  40d4d5:	aas    
  40d4d6:	sub    BYTE PTR [ebp-0x57],ah
  40d4d9:	cld    
  40d4da:	pop    edi
  40d4db:	lds    eax,FWORD PTR [edx]
  40d4dd:	cmp    DWORD PTR [ebx+0x74],ecx
  40d4e0:	mov    WORD PTR [edi+0x7b],ds
  40d4e3:	push   edi
  40d4e4:	leave  
  40d4e5:	imul   edx,edi,0xffffffe5
  40d4e8:	and    eax,0x7b2511ff
  40d4ed:	popf   
  40d4ee:	rol    DWORD PTR [ebx],cl
  40d4f0:	pop    es
  40d4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f2:	xor    DWORD PTR ds:0x250f562,esp
  40d4f8:	adc    DWORD PTR ds:0xe6320be6,ebp
  40d4fe:	ins    DWORD PTR es:[edi],dx
  40d4ff:	daa    
  40d500:	cmp    eax,0xe8a164
  40d505:	repz fs pop esi
  40d508:	sub    eax,0x1fc31996
  40d50d:	xor    al,0x34
  40d50f:	xchg   ebp,eax
  40d510:	pop    ebx
  40d511:	dec    eax
  40d512:	into   
  40d513:	pop    ss
  40d514:	push   ecx
  40d515:	and    al,0xa2
  40d517:	cli    
  40d518:	ficom  DWORD PTR [ebx]
  40d51a:	aaa    
  40d51b:	fstp   DWORD PTR [esi]
  40d51d:	hlt    
  40d51e:	stos   BYTE PTR es:[edi],al
  40d51f:	bound  esi,QWORD PTR [eax-0x56f393c0]
  40d525:	js     0x40d4d2
  40d527:	fidiv  WORD PTR [ebp-0x3f]
  40d52a:	push   ds
  40d52b:	mov    cl,BYTE PTR [eax]
  40d52d:	out    0x58,al
  40d52f:	xchg   DWORD PTR [edi-0x5f4936b9],edx
  40d535:	mov    esi,0x4fd1f433
  40d53a:	or     eax,0x7f3fe92c
  40d53f:	push   ecx
  40d540:	jl     0x40d4d8
  40d542:	ds test al,0x87
  40d545:	ja     0x40d55e
  40d547:	xchg   DWORD PTR [ecx-0x1e73a619],eax
  40d54d:	adc    cl,bh
  40d54f:	or     dl,ch
  40d551:	push   ebx
  40d552:	dec    eax
  40d553:	stos   BYTE PTR es:[edi],al
  40d554:	cld    
  40d555:	enter  0x28b4,0xaf
  40d559:	jmp    0x40d5d6
  40d55b:	bnd ja 0x40d53e
  40d55e:	repnz add al,0x2a
  40d561:	adc    al,0xd5
  40d563:	(bad)
  40d566:	sar    DWORD PTR ds:0x1ab8f5da,1
  40d56c:	add    BYTE PTR [ebp+0x64f6f97d],ah
  40d572:	test   al,0xb2
  40d574:	xor    BYTE PTR [eax-0x5f52359a],bh
  40d57a:	mov    ds:0x837acf2d,al
  40d57f:	retf   0x46ce
  40d582:	sbb    eax,0x1d65aa59
  40d587:	jno    0x40d604
  40d589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d58a:	sbb    DWORD PTR [ebx-0x25867f1c],ebx
  40d590:	call   0xd42cc2d3
  40d595:	jmp    0x306ec448
  40d59a:	inc    eax
  40d59b:	pop    ecx
  40d59c:	stos   BYTE PTR es:[edi],al
  40d59d:	sub    DWORD PTR [edi-0x1],esp
  40d5a0:	fdiv   DWORD PTR [eax]
  40d5a2:	mov    al,0x16
  40d5a4:	int3   
  40d5a5:	dec    ebx
  40d5a6:	jae    0x40d5f9
  40d5a8:	mov    cl,0xed
  40d5aa:	out    0xb,al
  40d5ac:	push   edi
  40d5ad:	jo     0x40d5eb
  40d5af:	sub    eax,0x24be08c
  40d5b4:	adc    ch,al
  40d5b6:	jbe    0x40d60c
  40d5b8:	repnz stos BYTE PTR es:[edi],al
  40d5ba:	sbb    eax,0xe030476c
  40d5bf:	dec    ecx
  40d5c0:	xchg   BYTE PTR [edx+esi*1],ch
  40d5c3:	mov    ch,0x3a
  40d5c5:	add    ah,BYTE PTR [ebx-0xb]
  40d5c8:	in     eax,0x2f
  40d5ca:	sbb    ebp,esi
  40d5cc:	js     0x40d63d
  40d5ce:	xchg   esi,eax
  40d5cf:	(bad)  
  40d5d0:	out    0xe2,eax
  40d5d2:	jge    0x40d558
  40d5d4:	popa   
  40d5d5:	or     BYTE PTR [esi+0x7f],ch
  40d5d8:	xchg   DWORD PTR [edi+0x73],edi
  40d5db:	lods   eax,DWORD PTR ds:[esi]
  40d5dc:	and    ah,ah
  40d5de:	dec    esp
  40d5df:	test   eax,0x92a9e3f
  40d5e4:	stc    
  40d5e5:	ins    DWORD PTR es:[edi],dx
  40d5e6:	and    sp,bp
  40d5e9:	pop    ebx
  40d5ea:	rcr    BYTE PTR [eax+0x48],0x9a
  40d5ee:	cmp    bl,0x3
  40d5f1:	or     BYTE PTR [ebp-0x79fba532],dl
  40d5f7:	pop    ss
  40d5f8:	lea    edx,[ecx-0x68]
  40d5fb:	icebp  
  40d5fc:	mov    edx,0x2432704c
  40d601:	jp     0x40d5cd
  40d603:	and    dl,BYTE PTR [ebp-0x8a91bda]
  40d609:	pop    ds
  40d60a:	gs jnp 0x40d5f7
  40d60d:	iret   
  40d60e:	cmp    BYTE PTR [esi-0x3a],bh
  40d611:	mov    esp,0xd8370641
  40d616:	inc    eax
  40d617:	sbb    al,0x36
  40d619:	push   ebp
  40d61a:	mov    ebx,0xbdfcef37
  40d61f:	ror    ebx,cl
  40d621:	pop    eax
  40d622:	mov    edx,0xb5cc8b99
  40d627:	pop    edx
  40d628:	repz fldcw WORD PTR [eax]
  40d62b:	add    bl,BYTE PTR [esi]
  40d62d:	push   es
  40d62e:	cs repz xchg ebp,eax
  40d631:	fmul   QWORD PTR [ebp-0x1e]
  40d634:	xchg   esi,eax
  40d635:	test   BYTE PTR [eax],ah
  40d637:	mov    cs:0xcf06595f,al
  40d63d:	les    edi,FWORD PTR [esi]
  40d63f:	jns    0x40d677
  40d641:	mov    dh,0x14
  40d643:	dec    esi
  40d644:	sub    BYTE PTR [ecx],ch
  40d646:	retf   
  40d647:	outs   dx,BYTE PTR ds:[esi]
  40d648:	mov    esi,0x925b46f4
  40d64d:	mov    WORD PTR [edi-0x3d],gs
  40d650:	aas    
  40d651:	hlt    
  40d652:	shl    bh,cl
  40d654:	inc    ecx
  40d655:	gs push cs
  40d657:	lock es (bad) 
  40d65a:	fcomp  QWORD PTR [ebp+0xb]
  40d65d:	jp     0x40d6d0
  40d65f:	adc    BYTE PTR [ecx+0x27],cl
  40d662:	lods   eax,DWORD PTR ds:[esi]
  40d663:	add    ah,0xf1
  40d666:	pushf  
  40d667:	pop    edx
  40d668:	push   DWORD PTR [ebp-0x439c1deb]
  40d66e:	mov    ebp,0x62445a2f
  40d673:	cmp    al,0x62
  40d675:	pop    edi
  40d676:	sbb    eax,ebp
  40d678:	(bad)  
  40d679:	std    
  40d67a:	xchg   BYTE PTR [edx*2-0x7472c154],cl
  40d681:	push   ebx
  40d682:	cmp    ecx,DWORD PTR [edx-0x50]
  40d685:	imul   edx,ebx,0xe0a74a6f
  40d68b:	dec    ebp
  40d68c:	in     eax,dx
  40d68d:	pop    eax
  40d68e:	(bad)  
  40d68f:	jl     0x40d6f6
  40d691:	and    BYTE PTR [ebp-0x39ff361c],dh
  40d697:	aas    
  40d698:	xchg   esi,eax
  40d699:	imul   esi,DWORD PTR [ebp-0x26f2932b],0x1a914c67
  40d6a3:	cli    
  40d6a4:	shl    DWORD PTR [esi+eiz*2-0x517965c1],cl
  40d6ab:	jmp    0x6558656f
  40d6b0:	mov    dh,0xad
  40d6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6b3:	jno    0x40d6eb
  40d6b5:	xchg   ebx,eax
  40d6b6:	lods   eax,DWORD PTR ds:[esi]
  40d6b7:	sbb    esi,0x560bd474
  40d6bd:	mov    esp,DWORD PTR cs:[ebx+0x34]
  40d6c1:	dec    esp
  40d6c2:	clc    
  40d6c3:	imul   eax,DWORD PTR [eax],0xfc722bcd
  40d6c9:	mov    BYTE PTR [eax+0x29],bl
  40d6cc:	mov    edx,0xff849511
  40d6d1:	fsubr  DWORD PTR [esi-0x24]
  40d6d4:	test   BYTE PTR [ebx+0x7c],bl
  40d6d7:	jp     0x40d6dd
  40d6d9:	dec    ecx
  40d6da:	test   BYTE PTR [ebx+0x40],0x41
  40d6de:	retf   
  40d6df:	(bad)  
  40d6e0:	pop    esi
  40d6e1:	jl     0x40d723
  40d6e3:	sbb    bh,bl
  40d6e5:	mov    ebp,0xc635892e
  40d6ea:	sub    edx,DWORD PTR [ebx-0xa]
  40d6ed:	frstor [esi-0xc99b3b1]
  40d6f3:	les    ebp,FWORD PTR [ebx-0x7a]
  40d6f6:	jp     0x40d70d
  40d6f8:	ins    BYTE PTR es:[edi],dx
  40d6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6fa:	je     0x40d6ab
  40d6fc:	or     ecx,DWORD PTR [edi-0x2967314d]
  40d702:	push   ebp
  40d703:	xor    eax,0xb0c49efd
  40d708:	sub    al,0x11
  40d70a:	pop    ecx
  40d70b:	xor    BYTE PTR [eax+0x3b],dl
  40d70e:	fild   DWORD PTR [edx-0x15]
  40d711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d712:	add    esp,ebp
  40d714:	sahf   
  40d715:	push   edi
  40d716:	shl    ebx,1
  40d718:	jmp    0x5184995d
  40d71d:	fsub   QWORD PTR [edi]
  40d71f:	repnz sub DWORD PTR [ebp-0x25048fd5],ecx
  40d726:	adc    DWORD PTR [edi-0x5c86a305],0x9
  40d72d:	sbb    esi,esi
  40d72f:	adc    edx,DWORD PTR [ebx+0x28919d27]
  40d735:	jb     0x40d710
  40d737:	xchg   esi,eax
  40d738:	push   ds
  40d739:	sub    eax,DWORD PTR [edi+0xd]
  40d73c:	jmp    0xfdb9:0x2fcc41c3
  40d743:	nop    DWORD PTR [eax]
  40d746:	inc    esp
  40d747:	out    0x56,eax
  40d749:	(bad)  
  40d74a:	pop    ecx
  40d74b:	in     eax,0xf4
  40d74d:	imul   esp,DWORD PTR [edx-0x33],0x55
  40d751:	xor    BYTE PTR [ebx],0x5e
  40d754:	and    al,0x3
  40d756:	add    eax,0x33a6d9d
  40d75b:	mov    ebx,0xf1768dd
  40d760:	jge    0x40d7dc
  40d762:	daa    
  40d763:	andps  xmm2,XMMWORD PTR [ebx]
  40d766:	xlat   BYTE PTR ds:[ebx]
  40d767:	add    eax,0xc2127e3
  40d76c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d76d:	(bad)  [edi]
  40d76f:	retf   0xb031
  40d772:	je     0x40d78d
  40d774:	mov    esp,0xcc97838
  40d779:	or     ebx,0x2e
  40d77c:	adc    edi,DWORD PTR [esi-0x10]
  40d77f:	jno    0x40d7fb
  40d781:	sbb    DWORD PTR [ecx-0x47],ecx
  40d784:	mov    dh,0x99
  40d786:	cdq    
  40d787:	mov    ds:0x6c3924bc,eax
  40d78c:	arpl   WORD PTR [edi],bx
  40d78e:	repz mov cl,0xe5
  40d791:	outs   dx,BYTE PTR ds:[esi]
  40d792:	xchg   eax,ecx
  40d794:	sbb    DWORD PTR [esi+edi*8+0x91f9d5d],edx
  40d79b:	inc    edi
  40d79c:	(bad)  
  40d79e:	xchg   dl,cl
  40d7a0:	xor    eax,0xf759db14
  40d7a5:	and    DWORD PTR [eax+ebx*2],ebx
  40d7a8:	add    dh,al
  40d7aa:	mov    ebp,0xa2e0b575
  40d7af:	cmc    
  40d7b0:	pop    ebp
  40d7b1:	or     BYTE PTR [ebp+0xc0b8bac],al
  40d7b7:	mov    cl,0x71
  40d7b9:	fbstp  TBYTE PTR [edx-0x1b]
  40d7bc:	clc    
  40d7bd:	(bad)  
  40d7be:	push   ds
  40d7bf:	iret   
  40d7c0:	(bad)  
  40d7c1:	cmp    DWORD PTR [edx+0x2ec18a77],eax
  40d7c7:	push   ebp
  40d7c8:	cmc    
  40d7c9:	out    dx,al
  40d7ca:	pop    esp
  40d7cb:	data16 or al,0xd4
  40d7ce:	repz push ds
  40d7d0:	and    al,0x63
  40d7d2:	mov    ch,0xe
  40d7d4:	cs xchg ebx,eax
  40d7d6:	xchg   edi,eax
  40d7d7:	rol    DWORD PTR [edi-0x72],0xba
  40d7db:	iret   
  40d7dc:	or     eax,0xe9da9203
  40d7e1:	push   es
  40d7e2:	inc    ecx
  40d7e3:	adc    BYTE PTR [esi],ah
  40d7e5:	iret   
  40d7e6:	pop    ss
  40d7e7:	jg     0x40d7f6
  40d7e9:	mov    dh,0x3b
  40d7eb:	xchg   ebx,eax
  40d7ec:	add    edx,DWORD PTR [ecx-0x7e]
  40d7ef:	mov    bh,0xae
  40d7f1:	cmp    esi,DWORD PTR [esi-0x6]
  40d7f4:	xchg   ebp,eax
  40d7f5:	pushf  
  40d7f6:	xchg   ebp,eax
  40d7f7:	push   ebp
  40d7f8:	mov    ds,WORD PTR [esp+edx*8+0x36]
  40d7fc:	mov    ds:0x2e43791f,al
  40d801:	xchg   BYTE PTR [eax+eiz*8+0x77],al
  40d805:	sbb    DWORD PTR [ecx+0x49],ebx
  40d808:	fsubr  QWORD PTR [ebp-0x5fcc8674]
  40d80e:	loop   0x40d869
  40d810:	out    dx,eax
  40d811:	(bad)  
  40d812:	sbb    eax,0x82ca4d51
  40d817:	test   DWORD PTR [ebx+0x6e867f80],ebp
  40d81d:	imul   ebp,DWORD PTR [ebp+0x63fbe76e],0x28ab2be4
  40d827:	std    
  40d828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d829:	sbb    dh,cl
  40d82b:	sub    DWORD PTR [ecx+edx*1+0x45],esi
  40d82f:	pusha  
  40d830:	std    
  40d831:	add    ebx,ecx
  40d833:	or     esi,ebp
  40d835:	mov    eax,0xe6691a92
  40d83a:	jg     0x40d7de
  40d83c:	icebp  
  40d83d:	test   al,0x7f
  40d83f:	add    eax,DWORD PTR [esi-0x1d]
  40d842:	das    
  40d843:	sbb    eax,0x12748416
  40d848:	jno    0x40d829
  40d84a:	nop
  40d84b:	add    edi,DWORD PTR [edi]
  40d84d:	call   0x37e5:0xd803ae4
  40d854:	pop    eax
  40d855:	lock stos BYTE PTR es:[edi],al
  40d857:	mov    BYTE PTR [esi],bl
  40d859:	xchg   ebx,eax
  40d85a:	jmp    0xbea1:0x31ae8922
  40d861:	aas    
  40d862:	ss popf 
  40d864:	jg     0x40d871
  40d866:	in     eax,dx
  40d867:	mov    al,ds:0x59c3f3bb
  40d86c:	xor    DWORD PTR [eax],ebx
  40d86e:	and    dh,BYTE PTR [ebx+ecx*1-0x3a]
  40d872:	mov    ebx,0x31e4383c
  40d877:	mov    ebx,0x93d9ab00
  40d87c:	stos   BYTE PTR es:[edi],al
  40d87d:	jp     0x40d85a
  40d87f:	popa   
  40d880:	and    al,0x18
  40d882:	and    al,0x80
  40d884:	jns    0x40d87c
  40d886:	xchg   esp,eax
  40d887:	aam    0x81
  40d889:	and    bl,dh
  40d88b:	jbe    0x40d84a
  40d88d:	es nop
  40d88f:	mov    DWORD PTR [edi+ebx*1+0x61aae761],edi
  40d896:	jp     0x40d8d8
  40d898:	cmp    bl,BYTE PTR [ecx-0x21c43b4]
  40d89e:	or     edx,ebp
  40d8a0:	jb     0x40d919
  40d8a2:	test   dl,ch
  40d8a4:	mov    dl,0xd7
  40d8a6:	cmp    edx,esi
  40d8a8:	xchg   ebp,eax
  40d8a9:	(bad)  
  40d8aa:	(bad)  
  40d8ab:	aad    0xa7
  40d8ad:	mov    edi,0x5c492136
  40d8b2:	jae    0x40d867
  40d8b4:	add    ecx,DWORD PTR [eax-0x71]
  40d8b7:	pushf  
  40d8b8:	push   cs
  40d8b9:	sbb    BYTE PTR [esi+0x456a60e2],cl
  40d8bf:	jmp    0xc603:0x97eb1845
  40d8c6:	cmp    DWORD PTR [edx+0x3424524],esi
  40d8cc:	mov    edx,0xfaef770c
  40d8d1:	in     al,dx
  40d8d2:	mov    al,ds:0x13807c9f
  40d8d7:	loop   0x40d8af
  40d8d9:	jnp    0x40d8e0
  40d8db:	adc    al,bl
  40d8dd:	retf   0xff1b
  40d8e0:	mov    bl,BYTE PTR [ebp+0x31]
  40d8e3:	push   esp
  40d8e4:	nop
  40d8e5:	inc    edi
  40d8e6:	sbb    dl,BYTE PTR [edx]
  40d8e8:	(bad)  
  40d8e9:	addr16 mov ebp,0x697683c4
  40d8ef:	loopne 0x40d959
  40d8f1:	lock jecxz 0x40d8b2
  40d8f4:	xor    eax,0xc705c50d
  40d8f9:	push   ds
  40d8fa:	(bad)  
  40d8fb:	cmc    
  40d8fc:	inc    edi
  40d8fd:	popa   
  40d8fe:	dec    ecx
  40d8ff:	jl     0x40d969
  40d901:	fiadd  DWORD PTR ds:0xb9d2b64a
  40d907:	aam    0x50
  40d909:	and    bh,BYTE PTR [edx+esi*4]
  40d90c:	xor    BYTE PTR [ecx+0x28],0xc8
  40d910:	cmp    al,0x25
  40d912:	fimul  DWORD PTR [ebp+0x3024a44c]
  40d918:	loop   0x40d8fd
  40d91a:	shl    BYTE PTR [ebx+edx*2],1
  40d91d:	shr    ecx,cl
  40d91f:	sbb    eax,0x7c6f5d8c
  40d924:	js     0x40d8c7
  40d926:	inc    ebx
  40d927:	clc    
  40d928:	test   BYTE PTR [edx],al
  40d92a:	lds    edx,FWORD PTR [ecx+0x54]
  40d92d:	ins    DWORD PTR es:[edi],dx
  40d92e:	sar    BYTE PTR [ecx],1
  40d930:	xchg   ebp,eax
  40d931:	mov    bl,bl
  40d933:	or     al,0xd9
  40d935:	call   DWORD PTR [eax+0x70]
  40d938:	std    
  40d939:	pop    edx
  40d93a:	loop   0x40d92f
  40d93c:	enter  0x539,0x79
  40d940:	fisubr WORD PTR ds:0xdfc6e29a
  40d946:	add    DWORD PTR [edi-0x70af079],ebx
  40d94c:	add    eax,0xaf8c8aac
  40d951:	pop    esp
  40d952:	lds    esp,FWORD PTR [ebx+0x1a]
  40d955:	push   cs
  40d956:	pop    ds
  40d957:	pop    edx
  40d958:	xor    ecx,DWORD PTR [eax]
  40d95a:	mov    bh,0xb8
  40d95c:	and    dh,BYTE PTR [eax+0x11214c8f]
  40d962:	inc    ebx
  40d963:	(bad)  
  40d964:	aas    
  40d965:	inc    esi
  40d966:	retfw  
  40d968:	inc    esp
  40d969:	cdq    
  40d96a:	js     0x40d9ce
  40d96c:	jo     0x40d9a5
  40d96e:	out    dx,al
  40d96f:	hlt    
  40d970:	sahf   
  40d971:	inc    edx
  40d972:	dec    edi
  40d973:	adc    al,0x34
  40d975:	adc    DWORD PTR [ebp-0x70],esi
  40d978:	fadd   QWORD PTR [edx-0x37]
  40d97b:	xlat   BYTE PTR ds:[ebx]
  40d97c:	rol    ecx,1
  40d97e:	jne    0x40d901
  40d980:	mov    edi,ebp
  40d982:	xchg   ecx,eax
  40d983:	lock adc DWORD PTR [ebp+0x7b01f1b6],edx
  40d98a:	fcmovnu st,st(6)
  40d98c:	cmp    DWORD PTR [ecx-0x3a],esp
  40d98f:	fcmovnbe st,st(2)
  40d991:	loopne 0x40d966
  40d993:	xchg   edi,eax
  40d994:	add    al,0x3e
  40d996:	nop
  40d997:	(bad)  
  40d998:	iret   
  40d999:	mul    DWORD PTR [ebx-0x62fe0413]
  40d99f:	stos   BYTE PTR es:[edi],al
  40d9a0:	sub    DWORD PTR [esi-0x7c24d8f5],ebx
  40d9a6:	push   ss
  40d9a7:	or     edx,DWORD PTR [edx]
  40d9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9aa:	sbb    DWORD PTR [bx+0x67],esp
  40d9ae:	pop    ss
  40d9af:	out    0x77,al
  40d9b1:	nop
  40d9b2:	fdiv   st,st(5)
  40d9b4:	cld    
  40d9b5:	and    esp,DWORD PTR [ebx-0x3e943658]
  40d9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9bc:	mov    ds:0x3e471d21,al
  40d9c1:	mov    bh,0x3d
  40d9c3:	retf   
  40d9c4:	pop    edi
  40d9c5:	and    esi,DWORD PTR [ebp-0x3b]
  40d9c8:	and    edi,edi
  40d9ca:	enter  0x4e76,0xa5
  40d9ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9cf:	fiadd  DWORD PTR [edi+0x2b]
  40d9d2:	push   ecx
  40d9d3:	xchg   edx,eax
  40d9d4:	fmul   QWORD PTR [ecx+eax*1]
  40d9d7:	test   al,0xe9
  40d9d9:	jns    0x40da17
  40d9db:	or     ch,BYTE PTR [ecx+0x6881aa19]
  40d9e1:	stos   DWORD PTR es:[edi],eax
  40d9e2:	lahf   
  40d9e3:	shr    DWORD PTR [eax],cl
  40d9e5:	stc    
  40d9e6:	jmp    0xd9f399a
  40d9eb:	out    dx,al
  40d9ec:	test   edi,edi
  40d9ee:	add    BYTE PTR [eax-0x3d],dh
  40d9f1:	fs and ecx,eax
  40d9f4:	xor    eax,0xdd5a34ee
  40d9f9:	push   edi
  40d9fa:	push   eax
  40d9fb:	jmp    0x4571:0x4c9678ba
  40da02:	push   0x3d1f1f8
  40da07:	aaa    
  40da08:	sbb    eax,0x6002c94b
  40da0d:	es inc edi
  40da0f:	adc    BYTE PTR [esi-0x1f],bl
  40da12:	mov    ah,0x61
  40da14:	fadd   DWORD PTR [edx+0x6f]
  40da17:	push   ss
  40da18:	and    ebx,DWORD PTR [edx+0x58]
  40da1b:	addr16 lahf 
  40da1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da1e:	aas    
  40da1f:	inc    ebx
  40da20:	add    eax,0xb7b64e18
  40da25:	fcmovb st,st(5)
  40da27:	clc    
  40da28:	aad    0x6a
  40da2a:	mov    dl,0x4c
  40da2c:	(bad)  
  40da2d:	add    DWORD PTR [esi-0x22b26c3e],ebx
  40da33:	cld    
  40da34:	xor    bl,BYTE PTR [esi]
  40da36:	test   BYTE PTR [ebx],bl
  40da38:	and    bh,BYTE PTR [esi+0xefbeae2]
  40da3e:	fisub  DWORD PTR [esi]
  40da40:	cmp    eax,0x1eb1ba41
  40da45:	scas   eax,DWORD PTR es:[edi]
  40da46:	sti    
  40da47:	mov    ch,0xcd
  40da49:	out    dx,eax
  40da4a:	push   0x5f
  40da4c:	mov    gs,ebp
  40da4e:	xlat   BYTE PTR ds:[ebx]
  40da4f:	rcr    DWORD PTR [edx],1
  40da51:	hlt    
  40da52:	into   
  40da53:	test   ebx,0x9e64279
  40da59:	call   0x6b42dfaa
  40da5e:	mov    bh,0xb1
  40da60:	xchg   edx,eax
  40da61:	popa   
  40da62:	call   0xedcb:0xb5e5a3b8
  40da69:	pop    ebx
  40da6a:	repnz or eax,0xceadd8ed
  40da70:	fs and esi,edx
  40da73:	hlt    
  40da74:	(bad)  
  40da75:	xor    eax,0x52f15bd9
  40da7a:	sbb    eax,0x94b715ca
  40da7f:	int3   
  40da80:	test   al,0x50
  40da82:	arpl   WORD PTR [esp+ebx*1-0x15],bx
  40da86:	in     eax,dx
  40da87:	mov    BYTE PTR [eax+0x78594b9],cl
  40da8d:	xor    edx,DWORD PTR ss:[esi]
  40da90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da91:	sub    DWORD PTR [esi-0x12],esp
  40da94:	inc    esi
  40da95:	imul   eax,DWORD PTR [ebx],0x25
  40da98:	pop    ebx
  40da99:	pop    esp
  40da9a:	sbb    esp,esp
  40da9c:	fst    QWORD PTR [ecx+0x526966ba]
  40daa2:	push   edx
  40daa3:	lods   eax,DWORD PTR ds:[esi]
  40daa4:	mov    WORD PTR [ebx-0x30],ss
  40daa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daa8:	dec    eax
  40daa9:	cmp    al,0x55
  40daab:	dec    ecx
  40daac:	and    DWORD PTR [eax],ebx
  40daae:	enter  0x3776,0x8
  40dab2:	and    bl,BYTE PTR [esi+0x5f]
  40dab5:	dec    eax
  40dab6:	fdiv   DWORD PTR [esi]
  40dab8:	int    0x57
  40daba:	aam    0x90
  40dabc:	jmp    0xd215:0x9b81c06d
  40dac3:	ror    DWORD PTR [ebx-0x6a],cl
  40dac6:	jb     0x40dae2
  40dac8:	jns    0x40db29
  40daca:	mov    al,ds:0x946c9a5
  40dacf:	int3   
  40dad0:	nop
  40dad1:	and    al,0x5b
  40dad3:	xchg   DWORD PTR [edi],edx
  40dad5:	sub    eax,DWORD PTR [ecx-0x70]
  40dad8:	mov    ds:0x148f3d23,eax
  40dadd:	sti    
  40dade:	mov    cl,0xbc
  40dae0:	push   eax
  40dae1:	imul   edx,DWORD PTR [eax+0x257dbebf],0x90d7aaeb
  40daeb:	sbb    al,dl
  40daed:	jmp    0xd19a:0x69bc6646
  40daf4:	enter  0x44e7,0x2a
  40daf8:	inc    ebx
  40daf9:	nop
  40dafa:	dec    esp
  40dafb:	pop    ss
  40dafc:	ror    DWORD PTR [ebx+0x10fec628],0x63
  40db03:	jbe    0x40daf4
  40db05:	mov    al,ds:0x6d529048
  40db0a:	cmp    eax,esi
  40db0c:	mov    edx,0xfceb2f19
  40db11:	push   esi
  40db12:	or     edi,edi
  40db14:	pop    ebp
  40db15:	add    BYTE PTR [edi+eiz*8-0x7c5565f7],ch
  40db1c:	pop    ss
  40db1d:	xor    DWORD PTR [eax],esi
  40db1f:	jb     0x40daa6
  40db21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db22:	pop    ebx
  40db23:	lods   eax,DWORD PTR ds:[esi]
  40db24:	inc    esi
  40db25:	sahf   
  40db26:	retf   0x2657
  40db29:	mov    ebx,0x9b6ac11f
  40db2e:	fmul   st(2),st
  40db30:	push   es
  40db31:	adc    eax,0xffffff83
  40db34:	icebp  
  40db35:	dec    edi
  40db36:	test   eax,0x9657d236
  40db3b:	jae    0x40db43
  40db3d:	sub    eax,0x22b6b7f
  40db42:	inc    ebx
  40db43:	push   esp
  40db44:	pop    ds
  40db45:	xchg   ebx,eax
  40db46:	pusha  
  40db47:	ret    
  40db48:	push   esi
  40db49:	ret    0xa649
  40db4c:	mov    al,0x91
  40db4e:	out    0xaf,al
  40db50:	and    edx,edx
  40db52:	(bad)  
  40db53:	cmp    BYTE PTR ds:0xfac35864,al
  40db59:	bound  ebp,QWORD PTR [ecx+eax*4-0x27a8f512]
  40db60:	adc    eax,0xf41afd55
  40db65:	push   ecx
  40db66:	jl     0x40dbdf
  40db68:	xchg   BYTE PTR [ebx-0x181ebded],al
  40db6e:	jg     0x40db10
  40db70:	dec    ebp
  40db71:	aaa    
  40db72:	cmp    eax,0x6163ebbf
  40db77:	stos   BYTE PTR es:[edi],al
  40db78:	cmp    ecx,edx
  40db7a:	ret    
  40db7b:	daa    
  40db7c:	fisubr WORD PTR [ecx]
  40db7e:	ds jg  0x40dbff
  40db81:	push   0x45
  40db83:	inc    edx
  40db84:	xchg   ebx,eax
  40db85:	fdiv   DWORD PTR [ebp+0x9]
  40db88:	and    BYTE PTR [ecx-0x492fbf8e],ch
  40db8e:	prefetch (bad)
  40db8f:	or     eax,0x8efa8bc7
  40db94:	(bad)  
  40db95:	call   0x64711c2a
  40db9a:	ret    
  40db9b:	cmp    al,0xfe
  40db9d:	pop    edx
  40db9e:	aaa    
  40db9f:	cmp    ecx,esp
  40dba1:	push   es
  40dba2:	sub    al,0xd5
  40dba4:	ret    0x5c1a
  40dba7:	jecxz  0x40dbcf
  40dba9:	fsubr  DWORD PTR [edi+0x20]
  40dbac:	sbb    ebp,DWORD PTR [ecx+0x6db6a1d6]
  40dbb2:	and    esi,ecx
  40dbb4:	jge    0x40dba1
  40dbb6:	sub    dh,bl
  40dbb8:	scas   al,BYTE PTR es:[edi]
  40dbb9:	aaa    
  40dbba:	inc    esp
  40dbbb:	sbb    eax,0x1464b4b4
  40dbc0:	jbe    0x40dba2
  40dbc2:	or     BYTE PTR [esi-0x13d2e14d],cl
  40dbc8:	cli    
  40dbc9:	test   al,0x78
  40dbcb:	mov    ebp,0xaa93cae3
  40dbd0:	mov    cl,0x4a
  40dbd2:	in     eax,0x98
  40dbd4:	fcmovbe st,st(3)
  40dbd6:	xor    eax,edi
  40dbd8:	test   eax,0xf8185feb
  40dbdd:	cmp    ch,BYTE PTR [ecx+eax*4+0x70e4d3b4]
  40dbe4:	aad    0x4e
  40dbe6:	adc    al,0xaa
  40dbe8:	test   eax,0x3bfcf81f
  40dbed:	push   0x22
  40dbef:	add    BYTE PTR [esp+ecx*1-0x73],dl
  40dbf3:	fwait
  40dbf4:	(bad)  
  40dbf5:	fs std 
  40dbf7:	out    0x94,al
  40dbf9:	jle    0x40dc5f
  40dbfb:	fisub  WORD PTR [edx+0x5e47f06f]
  40dc01:	int3   
  40dc02:	call   0x8ddf726c
  40dc07:	fidiv  DWORD PTR [edi-0x29]
  40dc0a:	pushf  
  40dc0b:	jo     0x40dc07
  40dc0d:	and    ebp,eax
  40dc0f:	in     al,dx
  40dc10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc11:	aad    0x90
  40dc13:	mov    ds:0xf8baecad,eax
  40dc18:	jg     0x40dc01
  40dc1a:	or     bl,BYTE PTR [eax]
  40dc1c:	and    BYTE PTR [ecx-0x7943180c],0x92
  40dc23:	jmp    0x40dbe2
  40dc25:	dec    eax
  40dc26:	sub    ecx,DWORD PTR [esi-0x6d]
  40dc29:	xor    ch,bh
  40dc2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc2c:	into   
  40dc2d:	stc    
  40dc2e:	xchg   esp,eax
  40dc2f:	dec    ebp
  40dc30:	fwait
  40dc31:	in     al,dx
  40dc32:	in     al,dx
  40dc33:	cdq    
  40dc34:	and    al,0x61
  40dc36:	div    al
  40dc38:	js     0x40dc3d
  40dc3a:	sub    dl,ah
  40dc3c:	test   edi,esp
  40dc3e:	fstp   TBYTE PTR ds:0xabeba9e3
  40dc44:	xor    al,0x11
  40dc46:	dec    edx
  40dc47:	dec    edx
  40dc48:	out    dx,eax
  40dc49:	pop    esi
  40dc4a:	mov    ?,edi
  40dc4c:	mov    edx,0x142f5f68
  40dc51:	pop    esp
  40dc52:	fcom   QWORD PTR [edx+0x1928965c]
  40dc58:	mov    bl,0x84
  40dc5a:	gs shr eax,cl
  40dc5d:	jmp    0xfe37b0bc
  40dc62:	cmp    dh,dh
  40dc64:	ss cmc 
  40dc66:	xor    BYTE PTR [ecx+eax*1+0x20],al
  40dc6a:	rol    bl,cl
  40dc6c:	in     al,0x5
  40dc6e:	mov    ah,0x57
  40dc70:	xchg   eax,esi
  40dc72:	mov    ch,0x16
  40dc74:	xchg   esi,eax
  40dc75:	jl     0x40dcd3
  40dc77:	mov    ds:0x7b86925f,al
  40dc7c:	mov    cl,0xe5
  40dc7e:	or     DWORD PTR [edi-0x77],0xffffffb7
  40dc82:	mov    bl,0x5e
  40dc84:	ins    BYTE PTR es:[edi],dx
  40dc85:	lds    eax,FWORD PTR [ecx-0x1d]
  40dc88:	xor    BYTE PTR es:[ebx+0x65d1e294],ah
  40dc8f:	sub    al,0x83
  40dc91:	jmp    0x40dcdb
  40dc93:	and    bl,BYTE PTR [esi+edi*1-0x166c48b7]
  40dc9a:	or     eax,0x68b75b27
  40dc9f:	xchg   al,cl
  40dca1:	mov    edi,0xbf7da01c
  40dca6:	imul   ebp,eax,0x81e69d36
  40dcac:	mov    ebp,0x9b3020c
  40dcb1:	scas   al,BYTE PTR es:[edi]
  40dcb2:	popa   
  40dcb3:	data16 or BYTE PTR [edi-0x38e7cf32],bl
  40dcba:	add    BYTE PTR [esi+0x48c5ffcc],ch
  40dcc0:	cmp    DWORD PTR [ebx+0x20],0xf2861575
  40dcc7:	and    eax,0xceba54b
  40dccc:	mov    eax,0x2960c570
  40dcd1:	nop
  40dcd2:	jp     0x40dc96
  40dcd4:	aad    0x18
  40dcd6:	and    DWORD PTR [eax+0x15],esp
  40dcd9:	mov    DWORD PTR [edi-0x6e493997],ebp
  40dcdf:	inc    ebp
  40dce0:	sbb    dh,cl
  40dce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce3:	inc    ecx
  40dce4:	add    ch,BYTE PTR [edx-0x74de5ae7]
  40dcea:	dec    edi
  40dceb:	cmp    eax,0x57a03e5a
  40dcf0:	fs int3 
  40dcf2:	daa    
  40dcf3:	pop    esp
  40dcf4:	adc    DWORD PTR [eax+eax*1+0x7e],ebx
  40dcf8:	xor    eax,0xdcbc99f0
  40dcfd:	rcl    dl,1
  40dcff:	rcl    DWORD PTR [eax+0x4a],1
  40dd02:	fbstp  TBYTE PTR [eax]
  40dd04:	jmp    0x3b31:0x2a4b41b4
  40dd0b:	and    ebp,eax
  40dd0d:	inc    ebp
  40dd0e:	sub    BYTE PTR [ebx+0x10],0x90
  40dd12:	ins    BYTE PTR es:[edi],dx
  40dd13:	push   es
  40dd14:	mov    ds,esp
  40dd16:	psubsb mm6,mm6
  40dd19:	arpl   WORD PTR ds:0xf9d4497,cx
  40dd1f:	mov    ds:0x5ad80f33,eax
  40dd24:	mov    fs,WORD PTR [esi]
  40dd26:	dec    eax
  40dd27:	int3   
  40dd28:	mov    al,0xae
  40dd2a:	cmp    BYTE PTR [edi],0xb3
  40dd2d:	aam    0xad
  40dd2f:	push   esi
  40dd30:	das    
  40dd31:	shl    BYTE PTR [ecx],0x96
  40dd34:	cmc    
  40dd35:	std    
  40dd36:	adc    dx,WORD PTR [esi]
  40dd39:	jbe    0x40dd27
  40dd3b:	pop    edi
  40dd3c:	jbe    0x40dcc5
  40dd3e:	cmp    dl,BYTE PTR [ecx+0x1f34d4dd]
  40dd44:	sbb    esi,DWORD PTR [ebp-0x74]
  40dd47:	sbb    BYTE PTR [eax+0x76e12c17],ah
  40dd4d:	sub    dl,ch
  40dd4f:	aaa    
  40dd50:	not    BYTE PTR [esi-0x1]
  40dd53:	repz xchg edi,eax
  40dd55:	arpl   WORD PTR [ebp-0x67c01c95],si
  40dd5b:	mov    ebx,0xb6c7c463
  40dd60:	iret   
  40dd61:	fisttp DWORD PTR ds:0x5e966238
  40dd67:	xchg   edx,eax
  40dd68:	test   eax,ecx
  40dd6a:	dec    esi
  40dd6b:	cli    
  40dd6c:	call   0x65aba242
  40dd71:	pushf  
  40dd72:	fiadd  WORD PTR [ebx+0x5c2d0429]
  40dd78:	add    ebp,edx
  40dd7a:	sbb    al,0x34
  40dd7c:	mov    BYTE PTR [ebp+edx*8-0x13412db4],dh
  40dd83:	and    DWORD PTR [ecx-0x5c],0xd10f4fbc
  40dd8a:	icebp  
  40dd8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd8c:	pop    edi
  40dd8d:	(bad)  
  40dd8e:	scas   al,BYTE PTR es:[edi]
  40dd8f:	stc    
  40dd90:	mov    eax,ds:0x8764e0af
  40dd95:	mov    dl,0x31
  40dd97:	ret    
  40dd98:	adc    ecx,DWORD PTR [ecx-0x80]
  40dd9b:	push   edx
  40dd9c:	std    
  40dd9d:	mov    bl,BYTE PTR [eax+0x99d34e0]
  40dda3:	mov    ds:0x4b11a4f5,eax
  40dda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dda9:	sahf   
  40ddaa:	repnz lock lock sbb al,0xf1
  40ddaf:	into   
  40ddb0:	in     al,dx
  40ddb1:	dec    ecx
  40ddb2:	pop    esp
  40ddb3:	or     BYTE PTR [ebx-0x279b1286],0xa7
  40ddba:	scas   eax,DWORD PTR es:[edi]
  40ddbb:	cld    
  40ddbc:	call   0x4fd39131
  40ddc1:	lods   eax,DWORD PTR ds:[esi]
  40ddc2:	xchg   ebp,eax
  40ddc3:	mov    dh,dh
  40ddc5:	inc    esp
  40ddc6:	shl    DWORD PTR [ebp+0x7e],cl
  40ddc9:	outs   dx,DWORD PTR ds:[esi]
  40ddca:	repz out 0xeb,eax
  40ddcd:	mov    al,cl
  40ddcf:	jns    0x40de03
  40ddd1:	mov    ds:0x982b60c5,eax
  40ddd6:	aam    0xa6
  40ddd8:	adc    DWORD PTR [edx+0x3e],0xfffffff7
  40dddc:	push   cs
  40dddd:	test   BYTE PTR [ebx+esi*2],bh
  40dde0:	cs jne 0x40de1d
  40dde3:	into   
  40dde4:	out    0x6a,al
  40dde6:	(bad)  
  40dde7:	imul   ebp,DWORD PTR [esi],0x1cd91c63
  40dded:	lock jecxz 0x40dd90
  40ddf0:	bound  edx,QWORD PTR [ecx-0x47]
  40ddf3:	inc    eax
  40ddf4:	ds dec edx
  40ddf6:	xchg   edi,eax
  40ddf7:	sub    esi,DWORD PTR ds:0x6e345bca
  40ddfd:	jl     0x40dda9
  40ddff:	ins    BYTE PTR es:[edi],dx
  40de00:	xchg   esi,eax
  40de01:	mov    DWORD PTR gs:[esi-0x19],edi
  40de05:	or     esp,ebp
  40de07:	repz mov es,WORD PTR [ebx]
  40de0a:	hlt    
  40de0b:	mov    ebp,0x9c26598f
  40de10:	sub    BYTE PTR [ebp-0x5d],dh
  40de13:	or     DWORD PTR [ebp-0x34],ecx
  40de16:	aam    0x30
  40de18:	mov    dl,0x47
  40de1a:	cdq    
  40de1b:	adc    eax,0xc911ee17
  40de20:	test   BYTE PTR [ebp+0x51],dl
  40de23:	ins    BYTE PTR es:[edi],dx
  40de24:	ret    0x6928
  40de27:	sub    DWORD PTR [edi+ecx*1+0xb],ebx
  40de2b:	xor    DWORD PTR [esi+0x5d],ebp
  40de2e:	sbb    BYTE PTR [esi],al
  40de30:	xor    esp,ecx
  40de32:	push   cs
  40de33:	ror    DWORD PTR [ebx-0x67b0bd70],0x27
  40de3a:	pop    es
  40de3b:	and    esi,ecx
  40de3d:	arpl   si,cx
  40de3f:	sub    BYTE PTR [esi],cl
  40de41:	push   esp
  40de42:	pushf  
  40de43:	scas   al,BYTE PTR es:[edi]
  40de44:	add    eax,0x75af492a
  40de49:	sub    DWORD PTR [edx+eax*1+0x4cb506],ecx
  40de50:	imul   esp,DWORD PTR [edx+edx*8+0x3888151f],0xffffffd7
  40de58:	mov    ecx,0x762430f3
  40de5d:	cmp    edi,DWORD PTR [edi-0x80]
  40de60:	jnp    0x40de7d
  40de62:	pop    edx
  40de63:	xor    eax,0xe6d86ee1
  40de68:	jnp    0x40de56
  40de6a:	sti    
  40de6b:	cld    
  40de6c:	ins    BYTE PTR es:[edi],dx
  40de6d:	imul   edx,DWORD PTR [esi-0x27],0xffffffaf
  40de71:	inc    edi
  40de72:	cmp    dh,BYTE PTR ds:0xeea432b5
  40de78:	ss push ss
  40de7a:	or     al,0xfc
  40de7c:	jno    0x40de3f
  40de7e:	clc    
  40de7f:	loope  0x40de0d
  40de81:	shl    DWORD PTR [edx+ecx*8-0x44ff5ef8],1
  40de88:	xor    bl,cl
  40de8a:	retf   
  40de8b:	aas    
  40de8c:	fstp   TBYTE PTR [ebx]
  40de8e:	sub    dh,ch
  40de90:	sbb    bh,cl
  40de92:	mov    ebx,0x5a209ef6
  40de97:	xlat   BYTE PTR ds:[ebx]
  40de98:	ins    DWORD PTR es:[edi],dx
  40de99:	dec    edx
  40de9a:	mov    BYTE PTR [edx+0x46],0x3a
  40de9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de9f:	pop    es
  40dea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dea1:	mov    bh,0x18
  40dea3:	add    eax,0x4d3ad608
  40dea8:	es sti 
  40deaa:	fsub   QWORD PTR [edi]
  40deac:	outs   dx,DWORD PTR ds:[esi]
  40dead:	sbb    ah,BYTE PTR [ecx]
  40deaf:	repz or eax,0x5067373d
  40deb5:	mov    dh,0xb5
  40deb7:	out    0xe5,eax
  40deb9:	sahf   
  40deba:	push   0x4e
  40debc:	out    0x73,eax
  40debe:	cld    
  40debf:	jno    0x40dedc
  40dec1:	aad    0x20
  40dec3:	pushf  
  40dec4:	(bad)  
  40dec5:	rcl    DWORD PTR ds:0xf148476e,0x1d
  40decc:	jo     0x40df1e
  40dece:	add    al,0x70
  40ded0:	imul   eax,DWORD PTR [esi+esi*4-0x2a1138fa],0x2982c5e7
  40dedb:	dec    esp
  40dedc:	fldenv [edx]
  40dede:	adc    DWORD PTR [esi+0x4f31eba4],edi
  40dee4:	fisub  WORD PTR [ecx+edx*8-0x7e]
  40dee8:	mov    ds:0xb03ef6b5,eax
  40deed:	push   eax
  40deee:	mov    BYTE PTR [edx-0x3f],bl
  40def1:	ss push ebp
  40def3:	jge    0x40de9a
  40def5:	pop    ecx
  40def6:	aas    
  40def7:	or     al,0xb5
  40def9:	adc    al,0xa2
  40defb:	push   edx
  40defc:	lds    eax,FWORD PTR [edx+0x25a753e1]
  40df02:	inc    ebx
  40df03:	xchg   edx,eax
  40df04:	imul   edx,DWORD PTR [edx],0x74
  40df07:	pop    ecx
  40df08:	std    
  40df09:	or     dh,BYTE PTR [eax]
  40df0b:	adc    bl,ah
  40df0d:	sbb    ebx,DWORD PTR [ebx+eax*4+0x61b45025]
  40df14:	mov    ebx,0xd8bec91e
  40df19:	fldcw  WORD PTR [ebx-0x76]
  40df1c:	xor    DWORD PTR [ecx+ecx*2+0x7165b0c2],ecx
  40df23:	adc    al,0x36
  40df25:	nop
  40df26:	sbb    eax,0xf99475ee
  40df2b:	mov    WORD PTR [esi],?
  40df2d:	clc    
  40df2e:	sbb    DWORD PTR [ebp-0x7bffffdf],esp
  40df34:	loope  0x40df70
  40df36:	aad    0x1e
  40df38:	loop   0x40df96
  40df3a:	jno    0x40df5d
  40df3c:	mov    esi,0x39194ce3
  40df41:	xchg   ebx,eax
  40df42:	jnp    0x40df0b
  40df44:	mov    esi,ebp
  40df46:	outs   dx,BYTE PTR ds:[esi]
  40df47:	int3   
  40df48:	cmp    DWORD PTR [eax-0x4c],esp
  40df4b:	pushf  
  40df4c:	mov    al,0xa0
  40df4e:	scas   eax,DWORD PTR es:[edi]
  40df4f:	int    0xa2
  40df51:	pusha  
  40df52:	cwde   
  40df53:	aam    0xc7
  40df55:	mov    ecx,0x40ed6ae9
  40df5a:	xchg   edx,eax
  40df5b:	jmp    0x4310:0x98bf4437
  40df62:	call   0x446b:0xdbd8e53c
  40df69:	xchg   edi,eax
  40df6a:	adc    eax,0xfaa07147
  40df6f:	adc    edx,ebx
  40df71:	call   FWORD PTR [edx+0x77ec502c]
  40df77:	sahf   
  40df78:	test   eax,0x788cb294
  40df7d:	imul   ebp,DWORD PTR [ebp+0x7e32f2b3],0x5ff30c5e
  40df87:	daa    
  40df88:	jns    0x40df4a
  40df8a:	mov    ebx,ds
  40df8c:	push   ds
  40df8d:	fsubrp st(5),st
  40df8f:	repz repz add DWORD PTR [edi-0x5ea12088],eax
  40df97:	sar    BYTE PTR [edi+0x59],1
  40df9a:	fwait
  40df9b:	lods   eax,DWORD PTR ds:[esi]
  40df9c:	sub    eax,0x100da19
  40dfa1:	div    BYTE PTR [edx-0x2f36b2ec]
  40dfa7:	ja     0x40df7d
  40dfa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfaa:	cli    
  40dfab:	mov    eax,ds:0xd52464fb
  40dfb0:	jle    0x40dfae
  40dfb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfb3:	out    0x4a,eax
  40dfb5:	neg    edx
  40dfb7:	cs stos BYTE PTR es:[edi],al
  40dfb9:	les    ecx,FWORD PTR [edi]
  40dfbb:	jae    0x40df82
  40dfbd:	out    dx,al
  40dfbe:	pop    edx
  40dfbf:	jae    0x40dfe6
  40dfc1:	cdq    
  40dfc2:	inc    ecx
  40dfc3:	and    BYTE PTR [ebx-0x3a],0x2e
  40dfc7:	cmp    eax,edi
  40dfc9:	cld    
  40dfca:	pop    eax
  40dfcb:	(bad)  
  40dfcc:	mov    WORD PTR [edi],?
  40dfce:	(bad)  
  40dfcf:	or     eax,0xb48afdf8
  40dfd4:	in     eax,0xce
  40dfd6:	dec    ebp
  40dfd7:	inc    ebx
  40dfd8:	fwait
  40dfd9:	dec    ecx
  40dfda:	sbb    edx,DWORD PTR [edx]
  40dfdc:	or     BYTE PTR [edx-0x4ca983dd],dh
  40dfe2:	sbb    edi,DWORD PTR [edi-0x2d]
  40dfe5:	mov    cl,0x98
  40dfe7:	mov    edx,0x56a057f
  40dfec:	adc    DWORD PTR [ecx+ebp*1-0x3f9a7859],esi
  40dff3:	pop    eax
  40dff4:	jl     0x40dfb1
  40dff6:	xchg   ebp,eax
  40dff7:	je     0x40dfef
  40dff9:	fnsave ds:0x7e12e719
  40dfff:	lahf   
  40e000:	in     eax,0x5b
  40e002:	jae    0x40dfec
  40e004:	int    0xbd
  40e006:	sub    eax,0x14b3bb8c
  40e00b:	or     al,0xf6
  40e00d:	leave  
  40e00e:	scas   al,BYTE PTR es:[edi]
  40e00f:	repz cwde 
  40e011:	mov    eax,0x320eed93
  40e016:	aaa    
  40e017:	pop    edx
  40e018:	pop    eax
  40e019:	xchg   esi,esp
  40e01b:	loop   0x40e00b
  40e01d:	(bad)  
  40e01e:	push   ss
  40e01f:	push   0x5f
  40e021:	lods   al,BYTE PTR ds:[esi]
  40e022:	loope  0x40e070
  40e024:	xchg   esp,eax
  40e025:	pop    ss
  40e026:	cmp    eax,DWORD PTR [ebp+0x3a931312]
  40e02c:	jmp    0x40dfd1
  40e02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e02f:	push   0x3ebffbd7
  40e034:	lods   al,BYTE PTR ds:[esi]
  40e035:	sbb    eax,0xb5ec98eb
  40e03a:	xchg   BYTE PTR [ebp-0x1d],al
  40e03d:	out    0x85,al
  40e03f:	js     0x40e075
  40e041:	pop    esp
  40e042:	and    ecx,DWORD PTR [ebp-0x5]
  40e045:	cmp    BYTE PTR [eax],bl
  40e047:	adc    cl,BYTE PTR [edx-0x2f]
  40e04a:	pop    eax
  40e04b:	imul   ebp,DWORD PTR [edi+0x6b],0xe0be9661
  40e052:	dec    ebp
  40e053:	mov    bh,0x80
  40e055:	outs   dx,BYTE PTR ds:[esi]
  40e056:	and    al,0xbb
  40e058:	scas   al,BYTE PTR es:[edi]
  40e059:	in     al,dx
  40e05a:	adc    DWORD PTR [ebx+0x2e],edx
  40e05d:	mov    esi,0x417fe927
  40e062:	dec    ebx
  40e063:	jmp    0xb3264a76
  40e068:	sbb    ah,al
  40e06a:	jmp    0xf483d479
  40e06f:	jno    0x40e0b4
  40e071:	jno    0x40e0e0
  40e073:	jne    0x40e089
  40e075:	jle    0x40e0a8
  40e077:	nop
  40e078:	fisub  WORD PTR [edi-0x36595228]
  40e07e:	stc    
  40e07f:	mov    ds:0x25161e19,eax
  40e084:	sbb    al,0x22
  40e086:	or     BYTE PTR [esi+0x23418926],ch
  40e08c:	inc    ebx
  40e08d:	popf   
  40e08e:	dec    edi
  40e08f:	dec    ebx
  40e090:	push   ss
  40e091:	push   0x265bb2f
  40e096:	lods   eax,DWORD PTR ds:[esi]
  40e097:	lea    ebx,[ebp+0x6c]
  40e09a:	dec    ecx
  40e09b:	pop    ecx
  40e09c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e09d:	js     0x40e028
  40e09f:	fs inc esp
  40e0a1:	mov    ebx,?
  40e0a3:	pop    ds
  40e0a4:	mov    ds:0xd4f270a1,eax
  40e0a9:	jl     0x40e10b
  40e0ab:	scas   al,BYTE PTR es:[edi]
  40e0ac:	in     al,dx
  40e0ad:	(bad)  
  40e0ae:	mov    ebx,0xd666ed16
  40e0b3:	cmp    al,al
  40e0b5:	xor    ah,ch
  40e0b7:	and    ah,bh
  40e0b9:	enter  0x1174,0xe9
  40e0bd:	rcr    DWORD PTR [ebx-0x3794e7a1],0x17
  40e0c4:	sbb    eax,0x14456557
  40e0c9:	adc    al,0xb9
  40e0cb:	scas   al,BYTE PTR es:[edi]
  40e0cc:	or     al,0x93
  40e0ce:	outs   dx,BYTE PTR ds:[esi]
  40e0cf:	dec    ch
  40e0d1:	or     ebx,eax
  40e0d3:	jg     0x40e071
  40e0d5:	adc    BYTE PTR [ecx+0x70],bh
  40e0d8:	lahf   
  40e0d9:	pop    edx
  40e0da:	xchg   ecx,eax
  40e0db:	and    eax,0xbccaf172
  40e0e0:	xchg   esi,eax
  40e0e1:	mov    edi,0x8204b15e
  40e0e6:	pop    eax
  40e0e7:	retf   0x6628
  40e0ea:	daa    
  40e0eb:	stc    
  40e0ec:	dec    edx
  40e0ed:	jl     0x40e142
  40e0ef:	xchg   ebx,eax
  40e0f0:	sbb    eax,0x423f43f3
  40e0f5:	test   DWORD PTR [ebp+ebx*1+0xa],edi
  40e0f9:	pop    edx
  40e0fa:	loope  0x40e114
  40e0fc:	xor    bh,BYTE PTR [ecx+0x169be7c]
  40e102:	pop    edx
  40e103:	adc    eax,0xb01cdbc1
  40e108:	push   0xffffffad
  40e10a:	mov    edi,eax
  40e10c:	cmp    dl,BYTE PTR ds:0x78a5e597
  40e112:	sub    BYTE PTR [eax],cl
  40e114:	data16 adc bh,BYTE PTR [edx]
  40e117:	pop    es
  40e118:	mov    al,ds:0x7e74101b
  40e11d:	sub    DWORD PTR [edx+0x42],esp
  40e120:	mov    edi,0xb3ab1bdb
  40e125:	inc    esi
  40e126:	xor    ebx,eax
  40e128:	mov    edx,0x133623d5
  40e12d:	ret    0x43
  40e130:	add    al,0x29
  40e132:	xchg   BYTE PTR [esi-0x3b],dl
  40e135:	cwde   
  40e136:	mov    ebx,0x7841a605
  40e13b:	jnp    0x40e176
  40e13d:	pop    bx
  40e13f:	sub    al,0xce
  40e141:	loope  0x40e0cc
  40e143:	mov    dh,0xd8
  40e145:	or     BYTE PTR [ecx-0x3c],cl
  40e148:	inc    edx
  40e149:	clc    
  40e14a:	jmp    0x40e1b4
  40e14c:	loopne 0x40e1a7
  40e14e:	stc    
  40e14f:	jnp    0x40e1c7
  40e151:	add    al,0x29
  40e153:	outs   dx,BYTE PTR ds:[esi]
  40e154:	and    dh,BYTE PTR [edi+0x11fdb10a]
  40e15a:	add    eax,0x28938bcb
  40e15f:	call   0xd66a:0xea4678ae
  40e166:	jo     0x40e1a3
  40e168:	outs   dx,BYTE PTR ds:[esi]
  40e169:	xor    BYTE PTR [eax+0x5f],bh
  40e16c:	and    ah,BYTE PTR [ebx]
  40e16e:	es mov al,ah
  40e171:	(bad)  
  40e172:	fstp   QWORD PTR [ebp+0x3f57463c]
  40e178:	push   esp
  40e179:	bnd jl 0x40e118
  40e17c:	pushf  
  40e17d:	pop    ebx
  40e17e:	clc    
  40e17f:	aas    
  40e180:	push   ebp
  40e181:	(bad)  
  40e183:	mov    cl,0x1c
  40e185:	mov    ecx,0x856aca54
  40e18a:	ins    BYTE PTR es:[edi],dx
  40e18b:	pop    eax
  40e18c:	repz mov ah,0x2d
  40e18f:	pop    es
  40e190:	ins    BYTE PTR es:[edi],dx
  40e191:	les    eax,FWORD PTR [edx+0x2b]
  40e194:	xor    edi,edx
  40e196:	(bad)  
  40e197:	xchg   edx,eax
  40e198:	fcmovu st,st(3)
  40e19a:	dec    edx
  40e19b:	adc    BYTE PTR [esi],al
  40e19d:	lock mov ebx,0x7ed827e2
  40e1a3:	cld    
  40e1a4:	push   ebp
  40e1a5:	fldenv [esi+0x7673ff0c]
  40e1ab:	push   ebp
  40e1ad:	xlat   BYTE PTR ds:[ebx]
  40e1ae:	mov    ?,WORD PTR [edi+0x32e5f04f]
  40e1b4:	adc    eax,0x7bc05243
  40e1b9:	ror    BYTE PTR ds:0x6e4a4c55,cl
  40e1bf:	push   es
  40e1c0:	fwait
  40e1c1:	mov    bh,0x2
  40e1c3:	clc    
  40e1c4:	sub    al,0xb5
  40e1c6:	push   ss
  40e1c7:	into   
  40e1c8:	cli    
  40e1c9:	inc    edx
  40e1ca:	cmp    ecx,DWORD PTR [edi-0x2e]
  40e1cd:	pusha  
  40e1ce:	inc    edi
  40e1cf:	es mov dl,0x85
  40e1d2:	xor    al,0xaa
  40e1d4:	pop    esp
  40e1d5:	imul   esp,DWORD PTR [esi],0xdf1b7e56
  40e1db:	pop    edi
  40e1dc:	cdq    
  40e1dd:	call   0x8b82:0xd88f37aa
  40e1e4:	jl     0x40e179
  40e1e6:	inc    edx
  40e1e7:	int3   
  40e1e8:	std    
  40e1e9:	and    bh,BYTE PTR [esi-0x4b1c6bf3]
  40e1ef:	call   0xac85b7f1
  40e1f4:	adc    DWORD PTR ss:[eax-0x4136ed71],0x17
  40e1fc:	fistp  DWORD PTR [edx+0x55b59abb]
  40e202:	jge    0x40e26b
  40e204:	dec    ecx
  40e205:	push   ebx
  40e206:	in     eax,0x99
  40e208:	or     DWORD PTR [eax+0x3a],ebp
  40e20b:	mov    ebp,0x4adc14a
  40e210:	pop    edi
  40e211:	in     eax,0xd0
  40e213:	rcl    BYTE PTR [eax],0xa8
  40e216:	inc    eax
  40e217:	inc    eax
  40e218:	imul   ecx,DWORD PTR [ecx-0x67a2214b],0x8737e9f9
  40e222:	int3   
  40e223:	pop    edx
  40e224:	sahf   
  40e225:	sbb    ecx,DWORD PTR [edi-0x5d]
  40e228:	das    
  40e229:	add    eax,0x8fd591e0
  40e22e:	cwde   
  40e22f:	outs   dx,DWORD PTR ds:[esi]
  40e230:	add    al,0x52
  40e232:	push   0xd9a42e25
  40e237:	mov    cl,0xc5
  40e239:	or     DWORD PTR [esi-0x5e3962a4],eax
  40e23f:	je     0x40e1fb
  40e241:	fiadd  WORD PTR [ebp+eiz*8-0x5d7a21a7]
  40e248:	mov    WORD PTR [edi],?
  40e24a:	fiadd  DWORD PTR [ecx-0x10560944]
  40e250:	inc    ebp
  40e251:	cmp    esp,ecx
  40e253:	dec    ecx
  40e254:	ror    cl,cl
  40e256:	imul   ebp,esi,0xffffffc4
  40e259:	dec    eax
  40e25a:	inc    edi
  40e25b:	iret   
  40e25c:	xor    eax,0xacb7a737
  40e261:	aad    0xd9
  40e263:	outs   dx,DWORD PTR ds:[esi]
  40e264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e265:	mov    cl,0x8d
  40e267:	cwde   
  40e268:	shl    BYTE PTR [edx+0x0],0xe1
  40e26c:	jno    0x40e27d
  40e26e:	inc    ebx
  40e26f:	cmp    eax,0x91b4a511
  40e274:	adc    eax,0x35734b27
  40e279:	mov    eax,0x9e7c929b
  40e27e:	std    
  40e27f:	sahf   
  40e280:	js     0x40e2cb
  40e282:	jp     0x40e261
  40e284:	push   ecx
  40e285:	cmp    eax,0xef7bd328
  40e28a:	sub    BYTE PTR [eax+ebp*4-0x1056e26d],ch
  40e291:	mov    dl,0xce
  40e293:	xor    esi,edi
  40e295:	unpcklps xmm1,xmm0
  40e298:	test   al,0x9e
  40e29a:	mov    ds:0xcafef752,eax
  40e29f:	je     0x40e2ce
  40e2a1:	mov    edi,0xc03ae9a8
  40e2a6:	mov    al,0x27
  40e2a8:	js     0x40e28e
  40e2aa:	mov    ecx,0x91b4430e
  40e2af:	add    edi,DWORD PTR [ebx]
  40e2b1:	cwde   
  40e2b2:	ss aaa 
  40e2b4:	mov    cl,0x3e
  40e2b6:	sub    DWORD PTR [eax+eax*2-0x4cd7b1d7],eax
  40e2bd:	call   0x843fd571
  40e2c2:	fild   DWORD PTR [eax]
  40e2c4:	rcr    BYTE PTR [esp+ecx*4],0xc6
  40e2c8:	or     BYTE PTR [ebp+0x46],0x97
  40e2cc:	push   ds
  40e2cd:	sub    edi,esp
  40e2cf:	push   DWORD PTR [eax-0x7ab74c1d]
  40e2d5:	aad    0xe1
  40e2d7:	and    bl,al
  40e2d9:	or     al,0x44
  40e2db:	out    dx,eax
  40e2dc:	rol    DWORD PTR [ebp+0x1e9fc716],0x71
  40e2e3:	dec    eax
  40e2e4:	mov    esi,0x97e3c325
  40e2e9:	mul    DWORD PTR [edi]
  40e2eb:	push   ss
  40e2ec:	or     eax,0x136487c6
  40e2f1:	in     al,dx
  40e2f2:	pop    edx
  40e2f3:	in     al,dx
  40e2f4:	sub    eax,0x7232caf3
  40e2f9:	leave  
  40e2fa:	ins    BYTE PTR es:[edi],dx
  40e2fb:	or     ecx,eax
  40e2fd:	jae    0x40e377
  40e2ff:	ins    DWORD PTR es:[edi],dx
  40e300:	std    
  40e301:	scas   eax,DWORD PTR es:[edi]
  40e302:	ds dec edx
  40e304:	xchg   edx,eax
  40e305:	pop    ds
  40e306:	ins    DWORD PTR es:[edi],dx
  40e307:	pop    ss
  40e308:	add    DWORD PTR [esi],0x646f029f
  40e30e:	push   0xa
  40e310:	xchg   edx,eax
  40e311:	(bad)  
  40e312:	mov    bh,0x84
  40e314:	mov    ah,dl
  40e316:	fdivr  st(7),st
  40e318:	ret    
  40e319:	outs   dx,BYTE PTR ds:[esi]
  40e31a:	pop    edi
  40e31b:	in     al,0x82
  40e31d:	sub    eax,0x3066e6a8
  40e322:	mov    esi,0x276ab0bb
  40e327:	mov    eax,0xd998fce6
  40e32c:	cmp    DWORD PTR [edi+0x1a],ebp
  40e32f:	call   0x2c04:0xd557e65
  40e336:	xchg   BYTE PTR [eax],ch
  40e338:	jecxz  0x40e2c4
  40e33a:	cmc    
  40e33b:	adc    edi,DWORD PTR [ebp+0xe]
  40e33e:	jns    0x40e2e4
  40e340:	popf   
  40e341:	inc    eax
  40e342:	imul   esp,DWORD PTR [eax],0x1
  40e345:	test   eax,0x2cbafef1
  40e34a:	cdq    
  40e34b:	adc    eax,ecx
  40e34d:	push   ss
  40e34e:	xchg   ecx,eax
  40e34f:	add    bl,BYTE PTR [ecx+0x7a]
  40e352:	ffree  st(5)
  40e354:	adc    ebx,DWORD PTR [esi+0xe]
  40e357:	call   0xe0ea3f20
  40e35c:	dec    ebx
  40e35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e35e:	sub    ah,BYTE PTR [ecx+0xe]
  40e361:	rol    ah,cl
  40e363:	daa    
  40e364:	cmp    BYTE PTR [ecx+edi*4-0x70],0x84
  40e369:	push   eax
  40e36a:	and    bh,al
  40e36c:	mov    eax,0xf8f09d13
  40e371:	loopne 0x40e38b
  40e373:	(bad)  
  40e374:	fsubr  st,st(1)
  40e376:	arpl   WORD PTR [ebx-0x16666d18],ax
  40e37c:	dec    eax
  40e37d:	inc    esi
  40e37e:	mov    edi,0x9646ce90
  40e383:	pop    esp
  40e384:	push   ss
  40e385:	xchg   ebx,eax
  40e386:	shl    DWORD PTR [ebx],cl
  40e388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e389:	imul   ecx,DWORD PTR [ebp-0x7b3b380b],0xcaf952ef
  40e393:	xchg   esi,eax
  40e394:	into   
  40e395:	push   es
  40e396:	ja     0x40e334
  40e398:	pop    ss
  40e399:	stc    
  40e39a:	int3   
  40e39b:	push   esi
  40e39c:	mov    bl,0xce
  40e39e:	test   al,0xbf
  40e3a0:	ins    BYTE PTR es:[edi],dx
  40e3a1:	test   al,ah
  40e3a3:	inc    ecx
  40e3a4:	icebp  
  40e3a5:	int    0xe2
  40e3a7:	and    edi,edx
  40e3a9:	divps  xmm4,XMMWORD PTR [edx]
  40e3ac:	pop    ebx
  40e3ad:	mov    ecx,0x1bca6eb
  40e3b2:	pop    eax
  40e3b3:	or     al,0x2a
  40e3b5:	out    0xf2,al
  40e3b7:	lds    esp,FWORD PTR [edx+0x1d]
  40e3ba:	push   edi
  40e3bb:	aam    0x1a
  40e3bd:	icebp  
  40e3be:	jmp    0x40e431
  40e3c0:	sti    
  40e3c1:	fdiv   DWORD PTR [ecx+0x2229d10e]
  40e3c7:	xor    al,0xb3
  40e3c9:	or     ecx,DWORD PTR [ecx-0x6e]
  40e3cc:	(bad)  [ebx+0x6d]
  40e3cf:	jns    0x40e3a2
  40e3d1:	pusha  
  40e3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3d3:	dec    ebp
  40e3d4:	fcom   DWORD PTR [ecx+edi*1-0x71972004]
  40e3db:	bound  ecx,QWORD PTR [edx+0xffbc48]
  40e3e1:	sbb    eax,0x8abae42c
  40e3e7:	sbb    esi,ecx
  40e3e9:	sbb    cl,BYTE PTR [ebp-0x94b1336]
  40e3ef:	dec    edx
  40e3f0:	xchg   dh,bh
  40e3f2:	mov    cl,ah
  40e3f4:	call   0xb43f8e3b
  40e3f9:	sbb    eax,0x5e4f0508
  40e3fe:	addr16 xchg ecx,eax
  40e400:	or     BYTE PTR [ecx+0x21de4d9d],0xd9
  40e407:	jg     0x40e3a0
  40e409:	loop   0x40e484
  40e40b:	(bad)  
  40e40c:	jmp    0x2a71:0x5940823
  40e413:	jo     0x40e40b
  40e415:	inc    esi
  40e416:	sub    esp,eax
  40e418:	inc    ebp
  40e419:	or     ah,BYTE PTR [esp+eiz*4]
  40e41c:	push   edi
  40e41d:	out    0x6b,eax
  40e41f:	cmp    al,0xdd
  40e421:	daa    
  40e422:	cmp    al,0x60
  40e424:	mov    eax,esp
  40e426:	mov    al,ds:0xae2f6919
  40e42b:	dec    ebx
  40e42c:	je     0x40e49e
  40e42e:	xor    eax,0x98465c33
  40e433:	cld    
  40e434:	push   ebp
  40e435:	(bad)  
  40e436:	and    al,0xc6
  40e438:	aam    0x72
  40e43a:	xor    ch,BYTE PTR [ebx+0x206d70e2]
  40e440:	jnp    0x40e48f
  40e442:	mov    al,0x4c
  40e444:	daa    
  40e445:	dec    esi
  40e446:	dec    esi
  40e447:	imul   ebx,DWORD PTR [edi-0x23896d15],0xffffffdb
  40e44e:	out    dx,eax
  40e44f:	mov    ?,WORD PTR [edx-0x54]
  40e452:	lods   eax,DWORD PTR ds:[esi]
  40e453:	cmp    DWORD PTR [esi+0x44a9c802],edi
  40e459:	enter  0xb75c,0x39
  40e45d:	jp     0x40e4dd
  40e45f:	test   BYTE PTR [edi+ebp*4+0x342fe13a],cl
  40e466:	scas   al,BYTE PTR es:[edi]
  40e467:	nop
  40e468:	and    dl,dh
  40e46a:	and    eax,0x6d824ce5
  40e46f:	not    DWORD PTR [ecx-0xd]
  40e472:	aad    0xa0
  40e474:	(bad)  
  40e475:	cmp    dh,ch
  40e477:	iret   
  40e478:	adc    dh,BYTE PTR [edi-0x6f]
  40e47b:	repz loopne 0x40e4b3
  40e47e:	sub    eax,0xe585b554
  40e483:	add    BYTE PTR [ebp+0x60],bh
  40e486:	scas   al,BYTE PTR es:[edi]
  40e487:	xor    BYTE PTR [ebx],0xc
  40e48a:	ret    
  40e48b:	sbb    eax,0xcfb29bd3
  40e490:	xor    al,0xc9
  40e492:	push   ds
  40e493:	enter  0x5c40,0x86
  40e497:	bound  ecx,QWORD PTR ds:0x586f9fe3
  40e49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e49e:	jle    0x40e4aa
  40e4a0:	add    edi,DWORD PTR [edi+0x514151da]
  40e4a6:	stc    
  40e4a7:	popa   
  40e4a8:	jbe    0x40e4cb
  40e4aa:	shl    BYTE PTR [ebx],1
  40e4ac:	add    ecx,DWORD PTR [esi]
  40e4ae:	fidiv  WORD PTR [ecx-0x1096d021]
  40e4b4:	sub    al,0x82
  40e4b6:	imul   eax,DWORD PTR [edi-0x11d4050a],0x2deeeede
  40e4c0:	retf   
  40e4c1:	cmp    BYTE PTR ds:0x740b7247,cl
  40e4c7:	or     BYTE PTR [ecx+0x278e5799],al
  40e4cd:	dec    esi
  40e4ce:	imul   esp,DWORD PTR [ecx],0xfffffff8
  40e4d1:	scas   eax,DWORD PTR es:[edi]
  40e4d2:	shl    BYTE PTR [ecx-0x3f184d73],cl
  40e4d8:	mov    ah,0x22
  40e4da:	mov    al,ds:0xd5611222
  40e4df:	xor    al,0x1b
  40e4e1:	clc    
  40e4e2:	in     eax,0x37
  40e4e4:	and    eax,0x813f1fe
  40e4e9:	rcl    DWORD PTR ds:0xa8208e00,cl
  40e4ef:	imul   esp,DWORD PTR [edi+ebp*2+0x2b],0xffffffa2
  40e4f4:	(bad)  
  40e4f5:	jns    0x40e540
  40e4f7:	jmp    0x40e4e0
  40e4f9:	dec    eax
  40e4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4fb:	retf   0x31f4
  40e4fe:	call   0xf766:0xc22ddd29
  40e505:	xchg   ecx,eax
  40e506:	stc    
  40e507:	fnsave [ecx-0x31be9800]
  40e50d:	cmp    DWORD PTR [ebx-0x1c594c5f],edi
  40e513:	shl    DWORD PTR [ebp-0x63],0x38
  40e517:	add    cl,ah
  40e519:	cdq    
  40e51a:	xchg   edi,eax
  40e51b:	popa   
  40e51c:	mov    ds:0x4b4720b7,eax
  40e521:	unpcklps xmm7,XMMWORD PTR ds:0x2f73c4c6
  40e528:	mov    bh,0x25
  40e52a:	outs   dx,BYTE PTR ds:[esi]
  40e52b:	inc    ebx
  40e52c:	push   es
  40e52d:	lahf   
  40e52e:	lahf   
  40e52f:	cdq    
  40e530:	imul   ebp,DWORD PTR [eax+esi*8-0x1c1d8a7a],0xc1209d72
  40e53b:	add    eax,0x643fa339
  40e540:	leave  
  40e541:	xor    eax,0x9db21679
  40e546:	cs fcmovnbe st,st(1)
  40e549:	add    al,0xef
  40e54b:	adc    al,0x54
  40e54d:	ins    BYTE PTR es:[edi],dx
  40e54e:	jae    0x40e533
  40e550:	or     BYTE PTR [ecx+eiz*1+0x2a],ch
  40e554:	aam    0xa9
  40e556:	xor    BYTE PTR [esi],ch
  40e558:	mov    dh,BYTE PTR [eax+0x60]
  40e55b:	pop    ecx
  40e55c:	dec    eax
  40e55d:	(bad)  
  40e55e:	push   ss
  40e55f:	jg     0x40e552
  40e561:	(bad)  
  40e562:	and    eax,0x50a2e9db
  40e567:	call   0x59c89b77
  40e56c:	adc    BYTE PTR [edx*8-0x35c1fa99],dl
  40e573:	push   ebx
  40e574:	popa   
  40e575:	in     al,0x30
  40e577:	scas   al,BYTE PTR es:[edi]
  40e578:	adc    al,0x99
  40e57a:	push   0xffffffe9
  40e57c:	cmp    DWORD PTR [eax],edi
  40e57e:	rcr    ebx,1
  40e580:	push   es
  40e581:	mov    dl,0x66
  40e583:	mov    DWORD PTR [ebx-0x4858ed33],ecx
  40e589:	jbe    0x40e5ac
  40e58b:	mov    ch,0x8e
  40e58d:	cdq    
  40e58e:	xor    al,0x4b
  40e590:	mov    cl,0x21
  40e592:	fsubr  DWORD PTR [ebx+0x56]
  40e595:	sbb    al,0xaa
  40e597:	mov    edi,edx
  40e599:	cli    
  40e59a:	(bad)  
  40e59b:	jae    0x40e568
  40e59d:	outs   dx,DWORD PTR ds:[esi]
  40e59e:	in     al,0xc7
  40e5a0:	shl    BYTE PTR gs:[ebx],0x1f
  40e5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5a5:	(bad)  
  40e5a6:	imul   eax,DWORD PTR [edi+0x33],0xfffffffb
  40e5aa:	adc    al,0x74
  40e5ac:	mov    dh,0x28
  40e5ae:	pop    edx
  40e5af:	aam    0xdc
  40e5b1:	mov    ebp,0xf6ea90ee
  40e5b6:	stos   BYTE PTR es:[edi],al
  40e5b7:	test   DWORD PTR [edx+edx*8],eax
  40e5ba:	ins    DWORD PTR es:[edi],dx
  40e5bb:	push   esp
  40e5bc:	pop    eax
  40e5bd:	jp     0x40e5a4
  40e5bf:	cmp    edx,DWORD PTR [eax]
  40e5c1:	push   ebx
  40e5c2:	daa    
  40e5c3:	lock data16 lahf 
  40e5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5c7:	fistp  DWORD PTR [edi-0x2f]
  40e5ca:	sbb    DWORD PTR [esi+eax*2],ebx
  40e5cd:	fsub   st(6),st
  40e5cf:	mov    dh,0xf
  40e5d1:	jg     0x40e58c
  40e5d3:	outs   dx,BYTE PTR ds:[esi]
  40e5d4:	dec    edi
  40e5d5:	test   BYTE PTR [edi+ebp*8],ch
  40e5d8:	imul   DWORD PTR [ecx+esi*1]
  40e5db:	jo     0x40e5b8
  40e5dd:	xchg   DWORD PTR [ecx],ebp
  40e5df:	pop    es
  40e5e0:	pushf  
  40e5e1:	outs   dx,DWORD PTR ds:[esi]
  40e5e2:	sar    esi,1
  40e5e4:	out    dx,eax
  40e5e5:	mov    WORD PTR [ebx+0x6f21e561],es
  40e5eb:	arpl   WORD PTR [ebp-0x36],bx
  40e5ee:	or     cl,BYTE PTR [ebx-0x7786c59e]
  40e5f4:	jmp    0x76c2:0x9468d736
  40e5fb:	or     bh,BYTE PTR [edx-0x79efaab1]
  40e601:	idiv   BYTE PTR [edx]
  40e603:	xchg   ebp,eax
  40e604:	lahf   
  40e605:	sub    DWORD PTR es:[edi-0x27c893fa],ebx
  40e60c:	fsub   DWORD PTR [eax]
  40e60e:	xchg   ebx,eax
  40e60f:	lods   eax,DWORD PTR ds:[esi]
  40e610:	xchg   BYTE PTR [edi-0x5d54f4f0],dl
  40e616:	mov    dl,0x88
  40e618:	mov    cl,0xe7
  40e61a:	push   edx
  40e61b:	lods   al,BYTE PTR ds:[esi]
  40e61c:	mov    ecx,0x5ace5f53
  40e621:	push   0xf7d35994
  40e626:	mov    edi,0x351abaaf
  40e62b:	xchg   ebx,eax
  40e62c:	cli    
  40e62d:	dec    eax
  40e62e:	loop   0x40e61f
  40e630:	int    0x48
  40e632:	push   edi
  40e633:	pop    esp
  40e634:	pop    es
  40e635:	out    dx,al
  40e636:	pop    esi
  40e637:	das    
  40e638:	mov    esp,0xbb4f3290
  40e63d:	pop    edi
  40e63e:	or     ch,BYTE PTR [esi-0x9]
  40e641:	int3   
  40e642:	das    
  40e643:	lods   eax,DWORD PTR ds:[esi]
  40e644:	xor    eax,0x3936aae
  40e649:	jno    0x40e6ae
  40e64b:	pusha  
  40e64c:	daa    
  40e64d:	(bad)  
  40e64e:	jno    0x40e5d6
  40e650:	(bad)  
  40e651:	stos   BYTE PTR es:[edi],al
  40e652:	sub    dl,dl
  40e654:	arpl   WORD PTR [edi],di
  40e656:	data16 jecxz 0x40e673
  40e659:	outs   dx,DWORD PTR ds:[esi]
  40e65a:	xor    DWORD PTR [ebp+ebx*4+0x25df322b],0x853028e6
  40e665:	call   0xc676:0x140ebc3
  40e66c:	mov    cs,WORD PTR [ecx]
  40e66e:	cdq    
  40e66f:	sbb    BYTE PTR [edx],0xd6
  40e672:	(bad)  
  40e673:	stos   BYTE PTR es:[edi],al
  40e674:	cdq    
  40e675:	mov    al,ds:0xe6abe71d
  40e67a:	out    0xa6,eax
  40e67c:	inc    edi
  40e67d:	jb     0x40e6b4
  40e67f:	cld    
  40e680:	mov    edx,0xff60cf4f
  40e685:	out    0x98,eax
  40e687:	dec    edx
  40e688:	sbb    eax,0xdb27c889
  40e68d:	call   0xb28d:0x3986fed2
  40e694:	xchg   BYTE PTR [eax+0x5142ba8],al
  40e69a:	sbb    al,0x3d
  40e69c:	ss inc esi
  40e69e:	sti    
  40e69f:	xor    al,0xdb
  40e6a1:	inc    esp
  40e6a2:	sbb    eax,0x4ec18598
  40e6a7:	adc    BYTE PTR [esi],bh
  40e6a9:	scas   al,BYTE PTR es:[edi]
  40e6aa:	loop   0x40e6de
  40e6ac:	mov    edi,0xe3d94957
  40e6b1:	popa   
  40e6b2:	and    BYTE PTR [ecx],bh
  40e6b4:	xchg   BYTE PTR ds:0x97909dc4,bh
  40e6ba:	in     al,dx
  40e6bb:	fxch   st(5)
  40e6bd:	repnz inc esp
  40e6bf:	push   eax
  40e6c0:	adc    eax,0x5a361c72
  40e6c5:	xchg   esi,eax
  40e6c6:	jmp    0x6f7d:0xc12e7fe
  40e6cd:	je     0x40e73d
  40e6cf:	ja     0x40e745
  40e6d1:	mov    al,0x47
  40e6d3:	mov    WORD PTR [ecx+0x52],ss
  40e6d6:	xchg   esp,eax
  40e6d7:	xor    al,0x92
  40e6d9:	push   0xa2a8de73
  40e6de:	lods   eax,DWORD PTR ds:[esi]
  40e6df:	addr16 inc ecx
  40e6e1:	adc    eax,0xc0c0ec4d
  40e6e6:	loopne 0x40e690
  40e6e8:	jo     0x40e759
  40e6ea:	add    eax,0xa033d72b
  40e6ef:	sub    eax,0xa3c47625
  40e6f4:	iret   
  40e6f5:	out    dx,al
  40e6f6:	aaa    
  40e6f7:	loopne 0x40e6e2
  40e6f9:	aam    0xf5
  40e6fb:	std    
  40e6fc:	stos   DWORD PTR es:[edi],eax
  40e6fd:	js     0x40e75e
  40e6ff:	call   0xa47f028b
  40e704:	mov    esi,0x627c1eba
  40e709:	jg     0x40e704
  40e70b:	jg     0x40e76e
  40e70d:	inc    ebx
  40e70e:	pop    es
  40e70f:	inc    ebx
  40e710:	repnz pop ebp
  40e712:	jne    0x40e6bb
  40e714:	cmp    esp,DWORD PTR [ecx]
  40e716:	pop    ebx
  40e717:	jle    0x40e748
  40e719:	or     esp,DWORD PTR [ecx-0x74]
  40e71c:	push   ss
  40e71d:	(bad)  
  40e71e:	in     eax,dx
  40e71f:	sub    dl,BYTE PTR [ebp-0x654423d8]
  40e725:	out    0xa5,al
  40e727:	xor    al,0x7c
  40e729:	mov    eax,ds:0xea18f5e7
  40e72e:	es sbb al,0xcd
  40e731:	jbe    0x40e777
  40e733:	jnp    0x40e756
  40e735:	mov    DWORD PTR [ebx-0x1],eax
  40e738:	xchg   esp,eax
  40e739:	mov    ds:0xfb38940b,eax
  40e73e:	xor    ax,cx
  40e741:	out    dx,eax
  40e742:	xor    al,0x85
  40e744:	stc    
  40e745:	or     bl,BYTE PTR [edx+0x62299a68]
  40e74b:	mov    BYTE PTR [esi+0x1e],bh
  40e74e:	pop    es
  40e74f:	cli    
  40e750:	jp     0x40e76c
  40e752:	adc    esp,DWORD PTR [ecx+0x5c]
  40e755:	mov    bl,0x66
  40e757:	or     esi,DWORD PTR [eax-0x3d0886f3]
  40e75d:	inc    edi
  40e75e:	mov    al,ds:0xf56d92ba
  40e763:	mov    al,ds:0xa8ee1990
  40e768:	outs   dx,DWORD PTR ds:[esi]
  40e769:	add    al,0x2f
  40e76b:	or     eax,0xdd53af07
  40e770:	jo     0x40e715
  40e772:	jle    0x40e786
  40e774:	(bad)  
  40e775:	js     0x40e725
  40e777:	test   BYTE PTR [ebx],cl
  40e779:	test   cl,ch
  40e77b:	mov    ?,eax
  40e77d:	cmp    BYTE PTR [ecx+0x11],0xba
  40e781:	inc    eax
  40e782:	sbb    edx,DWORD PTR [eax+ebx*4]
  40e785:	mov    esp,0x7f53aa71
  40e78a:	daa    
  40e78b:	fidivr WORD PTR [edi-0x2]
  40e78e:	int    0x17
  40e790:	xchg   esp,eax
  40e791:	gs test al,0x3f
  40e794:	pushf  
  40e795:	jecxz  0x40e7d9
  40e797:	arpl   WORD PTR [ebp*8+0x1c8ece3e],ax
  40e79e:	repnz push 0xca73d516
  40e7a4:	(bad)  
  40e7a5:	fist   WORD PTR [ecx+0x55]
  40e7a8:	mov    ds:0x992b085d,al
  40e7ad:	mov    al,ds:0x98232668
  40e7b2:	and    al,0x63
  40e7b4:	bound  esi,QWORD PTR [ebp-0x22]
  40e7b7:	fidivr DWORD PTR [esi+0x4b48c235]
  40e7bd:	sbb    ch,bh
  40e7bf:	push   ebp
  40e7c0:	call   0xf360:0x6aafc41c
  40e7c7:	dec    esi
  40e7c8:	jns    0x40e75a
  40e7ca:	rcl    DWORD PTR [ebx+0x15226145],1
  40e7d0:	bound  ebx,QWORD PTR [eax-0x44]
  40e7d3:	mov    edx,0x962615e1
  40e7d8:	pop    ecx
  40e7d9:	mov    ebx,0x6ad7f3f8
  40e7de:	sbb    ebx,ebp
  40e7e0:	cmp    BYTE PTR [ebx],bh
  40e7e2:	les    edx,FWORD PTR [ecx-0x2d]
  40e7e5:	cmp    DWORD PTR [esi-0x4b2c1bf2],edi
  40e7eb:	and    dh,BYTE PTR [esi]
  40e7ed:	jp     0x40e7f7
  40e7ef:	ins    BYTE PTR es:[edi],dx
  40e7f0:	ss sub edx,ecx
  40e7f3:	aad    0x8f
  40e7f5:	cmp    BYTE PTR [ebx],bh
  40e7f7:	pusha  
  40e7f8:	std    
  40e7f9:	lods   al,BYTE PTR ds:[esi]
  40e7fa:	adc    eax,0xbfb2dc5
  40e7ff:	or     al,0xca
  40e801:	out    dx,eax
  40e802:	pop    es
  40e803:	inc    edi
  40e804:	jns    0x40e799
  40e806:	mov    esp,DWORD PTR [esi+esi*2-0x6c94070b]
  40e80d:	lods   eax,DWORD PTR ds:[esi]
  40e80e:	xchg   ecx,ecx
  40e810:	fs inc edi
  40e812:	retf   0xec56
  40e815:	push   edx
  40e816:	push   esi
  40e817:	es inc edx
  40e819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e81a:	add    cl,BYTE PTR [eax+0x380a02a1]
  40e820:	mov    dl,0xe4
  40e822:	add    DWORD PTR [edx+0x49],esi
  40e825:	xor    ah,BYTE PTR [edx]
  40e827:	in     al,0x9d
  40e829:	sub    BYTE PTR ss:0xcbf4fbbe,dl
  40e830:	arpl   WORD PTR [ecx],si
  40e832:	mov    ebp,DWORD PTR [ebp-0xa]
  40e835:	xchg   edx,eax
  40e836:	lea    eax,[eax+0x12ec678c]
  40e83c:	mov    dl,0xf3
  40e83e:	push   esi
  40e83f:	out    0x19,al
  40e841:	scas   eax,DWORD PTR es:[edi]
  40e842:	cmp    ebx,edx
  40e844:	xchg   edi,eax
  40e845:	les    esi,FWORD PTR [ebx+0x46]
  40e848:	push   es
  40e849:	sbb    DWORD PTR [esi],ebp
  40e84b:	daa    
  40e84c:	repz test ebp,edx
  40e84f:	mov    BYTE PTR [ecx+0x3cc222bd],bh
  40e855:	out    dx,al
  40e856:	adc    cl,BYTE PTR [eax+eax*2]
  40e859:	out    dx,eax
  40e85a:	sub    ecx,esi
  40e85c:	test   eax,0x5444e861
  40e861:	adc    DWORD PTR [eax+0x52],ecx
  40e864:	dec    edx
  40e865:	mov    ch,0x29
  40e867:	ins    BYTE PTR es:[edi],dx
  40e868:	in     al,dx
  40e869:	push   es
  40e86a:	and    DWORD PTR [edx],esi
  40e86c:	push   eax
  40e86d:	loop   0x40e7f6
  40e86f:	mov    dl,0xa8
  40e871:	adc    esp,edi
  40e873:	lods   al,BYTE PTR ds:[esi]
  40e874:	test   DWORD PTR [esi+0x4d],edx
  40e877:	adc    ecx,DWORD PTR [eax+0x21]
  40e87a:	shl    BYTE PTR [ebx+0x34],0x24
  40e87e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e880:	xchg   DWORD PTR [edx],esi
  40e882:	mov    bl,0x74
  40e884:	xchg   esi,eax
  40e885:	call   0x2b41:0x3ee96380
  40e88c:	sbb    edi,DWORD PTR [eax]
  40e88e:	jo     0x40e8fb
  40e890:	stc    
  40e891:	dec    ebp
  40e892:	mov    bl,0xb3
  40e894:	sub    BYTE PTR [eax-0x7f],dh
  40e897:	retf   
  40e898:	icebp  
  40e899:	sahf   
  40e89a:	arpl   WORD PTR ds:0x6738cbe3,si
  40e8a0:	jnp    0x40e8a0
  40e8a2:	dec    edx
  40e8a3:	and    al,0x69
  40e8a5:	cld    
  40e8a6:	lods   al,BYTE PTR ds:[esi]
  40e8a7:	jbe    0x40e849
  40e8a9:	das    
  40e8aa:	add    eax,0xb95d093d
  40e8af:	mov    bh,0xfb
  40e8b1:	sbb    ah,dh
  40e8b3:	mov    al,0x4e
  40e8b5:	sub    cl,dl
  40e8b7:	leave  
  40e8b8:	add    al,0xfa
  40e8ba:	sbb    al,0x3c
  40e8bc:	jp     0x40e84d
  40e8be:	mov    bl,0xa4
  40e8c0:	sub    al,0xed
  40e8c2:	xor    al,0x98
  40e8c4:	push   ebx
  40e8c5:	push   cs
  40e8c6:	mov    cl,0x46
  40e8c8:	bnd jns 0x40e86c
  40e8cb:	jp     0x40e8cc
  40e8cd:	push   edx
  40e8ce:	pop    ds
  40e8cf:	call   FWORD PTR [edi]
  40e8d1:	mov    ebp,0x819edfad
  40e8d6:	and    al,0x4e
  40e8d8:	inc    edx
  40e8d9:	pop    ebx
  40e8da:	pop    ebx
  40e8db:	nop
  40e8dc:	pop    edi
  40e8dd:	dec    esi
  40e8de:	inc    esi
  40e8df:	loopne 0x40e8e6
  40e8e1:	inc    ebx
  40e8e2:	cmp    esp,DWORD PTR [edx-0x35]
  40e8e5:	push   ebx
  40e8e6:	ins    DWORD PTR es:[di],dx
  40e8e8:	fcmovnbe st,st(7)
  40e8ea:	pop    edi
  40e8eb:	int    0x4b
  40e8ed:	in     eax,dx
  40e8ee:	push   esi
  40e8ef:	nop
  40e8f0:	fwait
  40e8f1:	mov    WORD PTR [ebx],ss
  40e8f3:	cmp    ebp,DWORD PTR [ebp+0x4d]
  40e8f6:	sub    ecx,ecx
  40e8f8:	mov    BYTE PTR [ebp-0x7c46e8ac],bl
  40e8fe:	fwait
  40e8ff:	push   eax
  40e900:	xchg   edi,eax
  40e901:	repnz push ebx
  40e903:	test   eax,0xa6b6bdd9
  40e908:	out    0x15,eax
  40e90a:	mov    DWORD PTR [ebp-0x37],edx
  40e90d:	fcom   DWORD PTR [esi]
  40e90f:	dec    ecx
  40e910:	push   es
  40e911:	push   edx
  40e912:	lds    eax,FWORD PTR [edi-0x3d]
  40e915:	fs or  ch,ah
  40e918:	into   
  40e919:	das    
  40e91a:	pop    ds
  40e91b:	fnsave [esi]
  40e91d:	lods   al,BYTE PTR ds:[esi]
  40e91e:	dec    ecx
  40e91f:	and    BYTE PTR [esi+ecx*8],al
  40e922:	pop    edi
  40e923:	xchg   ebx,eax
  40e924:	(bad)  
  40e925:	data16 mov dh,0x9b
  40e928:	xor    DWORD PTR [edx],edi
  40e92a:	or     al,0x35
  40e92c:	dec    eax
  40e92d:	out    dx,al
  40e92e:	sub    BYTE PTR [ebx+0x71],cl
  40e931:	mov    ds:0x71b010f1,eax
  40e936:	cmp    eax,0x4c04201a
  40e93b:	addr16 into 
  40e93d:	sbb    eax,0xb7a2a24f
  40e942:	adc    eax,0xe812cfb8
  40e947:	std    
  40e948:	xchg   ebx,esp
  40e94a:	fs (bad) 
  40e94c:	push   eax
  40e94d:	adc    ecx,DWORD PTR [ecx-0x7b]
  40e950:	leave  
  40e951:	fidivr WORD PTR [esi-0x1b8d7fa2]
  40e957:	lock out 0xb5,eax
  40e95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e95b:	add    esi,eax
  40e95d:	outs   dx,BYTE PTR ds:[esi]
  40e95e:	int3   
  40e95f:	cs push cs
  40e961:	mov    esi,DWORD PTR [ecx-0x57]
  40e964:	xor    DWORD PTR ds:0xe2bc9861,ebx
  40e96a:	cs jo  0x40e97e
  40e96d:	loop   0x40e8fe
  40e96f:	cdq    
  40e970:	pop    esp
  40e971:	(bad)  
  40e972:	and    al,0x24
  40e974:	test   DWORD PTR [eax+0x3de58953],esp
  40e97a:	pop    ebp
  40e97b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e97c:	(bad)  
  40e97d:	mov    ecx,0x389c3ba8
  40e982:	aam    0xeb
  40e984:	into   
  40e985:	jg     0x40e9f1
  40e987:	xlat   BYTE PTR ds:[ebx]
  40e988:	add    ecx,DWORD PTR [ecx+edi*4+0x42]
  40e98c:	addr16 push eax
  40e98e:	loopne 0x40e9f1
  40e990:	pushf  
  40e991:	jns    0x40e9fb
  40e993:	mov    edi,0x55aa4c63
  40e998:	inc    eax
  40e999:	popf   
  40e99a:	aaa    
  40e99b:	test   cl,cl
  40e99d:	adc    ebx,DWORD PTR [ebp-0x6bfc3bc7]
  40e9a3:	nop
  40e9a4:	jmp    0x8971:0x2a80e003
  40e9ab:	rol    DWORD PTR [edx-0x236d472],1
  40e9b1:	push   0xffffff89
  40e9b3:	jecxz  0x40e9fa
  40e9b5:	pop    ds
  40e9b6:	xlat   BYTE PTR ds:[ebx]
  40e9b7:	mov    ch,0x1a
  40e9b9:	pop    eax
  40e9ba:	loopne 0x40ea14
  40e9bc:	jmp    0xcaeb:0xc1dc1550
  40e9c3:	xor    BYTE PTR [esi+0x3d450e83],al
  40e9c9:	icebp  
  40e9ca:	dec    edi
  40e9cb:	mov    cl,0x9b
  40e9cd:	loop   0x40e9ca
  40e9cf:	mov    DWORD PTR [edi-0x49],0x37c52cf6
  40e9d6:	loop   0x40e9ba
  40e9d8:	push   edx
  40e9d9:	int    0x40
  40e9db:	xchg   esi,eax
  40e9dc:	push   ss
  40e9dd:	enter  0xe57e,0x93
  40e9e1:	rcl    BYTE PTR [eax-0x26],cl
  40e9e4:	xor    edx,ebx
  40e9e6:	jge    0x40ea08
  40e9e8:	mov    edi,0xb73dc7a5
  40e9ed:	inc    eax
  40e9ee:	xor    edi,esp
  40e9f0:	cmp    BYTE PTR [edi-0x771ade5b],ch
  40e9f6:	cmp    eax,0x28c36799
  40e9fb:	in     eax,dx
  40e9fc:	outs   dx,DWORD PTR ds:[esi]
  40e9fd:	inc    esp
  40e9fe:	push   ss
  40e9ff:	mov    edx,0xd22db9b7
  40ea04:	cwde   
  40ea05:	or     DWORD PTR [ecx-0x1ccd07eb],eax
  40ea0b:	retf   
  40ea0c:	mov    edx,0x8992f233
  40ea11:	mov    al,0xb4
  40ea13:	adc    esi,DWORD PTR [esp+esi*2-0x20e861d5]
  40ea1a:	popa   
  40ea1b:	cmc    
  40ea1c:	in     eax,0xe4
  40ea1e:	xor    ecx,DWORD PTR [ecx+ecx*1+0x3]
  40ea22:	jno    0x40e9bf
  40ea24:	jne    0x40ea2d
  40ea26:	and    eax,0x84164a24
  40ea2b:	das    
  40ea2c:	fld    TBYTE PTR [ebx+edi*4-0x61fa6cd0]
  40ea33:	push   esi
  40ea34:	or     DWORD PTR [edx],edx
  40ea36:	sbb    bh,0x24
  40ea39:	pop    eax
  40ea3a:	mov    WORD PTR [ebx],ss
  40ea3c:	aam    0x9
  40ea3e:	push   edi
  40ea3f:	in     eax,0x66
  40ea41:	add    DWORD PTR [eax],esp
  40ea43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea44:	mov    esi,0x8575bb9
  40ea49:	out    0x64,al
  40ea4b:	jmp    0x9cb6:0xc0c232fb
  40ea52:	pop    es
  40ea53:	icebp  
  40ea54:	or     DWORD PTR [eax+0x16],0x92942e8
  40ea5b:	push   esp
  40ea5c:	inc    eax
  40ea5d:	pop    eax
  40ea5e:	fmul   QWORD PTR ds:0xe181c961
  40ea64:	cdq    
  40ea65:	mov    ch,0x9e
  40ea67:	sbb    DWORD PTR [edi-0x6d],esp
  40ea6a:	and    cl,cl
  40ea6c:	loope  0x40ea1c
  40ea6e:	(bad)  
  40ea6f:	jecxz  0x40ea7b
  40ea71:	test   BYTE PTR [ecx+0x37],ch
  40ea74:	jb     0x40eab7
  40ea76:	inc    edx
  40ea77:	bnd je 0x40eae0
  40ea7a:	cmp    BYTE PTR [ecx+0x70],bh
  40ea7d:	data16 fbstp TBYTE PTR es:[esi-0x3d5098ad]
  40ea85:	mov    esi,0x3292487a
  40ea8a:	push   ebp
  40ea8b:	mov    edx,0x8435e36d
  40ea90:	mov    ebp,0xa7d4d7ca
  40ea95:	ins    BYTE PTR es:[edi],dx
  40ea96:	xchg   edx,eax
  40ea97:	pop    esp
  40ea98:	jp     0x40eafa
  40ea9a:	mov    ebp,0xcbab47a2
  40ea9f:	and    dl,BYTE PTR [ebp-0x53c021b6]
  40eaa5:	mov    cl,0x83
  40eaa7:	aaa    
  40eaa8:	inc    esi
  40eaa9:	into   
  40eaaa:	fdiv   DWORD PTR [esi-0x4f]
  40eaad:	push   ebp
  40eaae:	fdivr  QWORD PTR [eax]
  40eab0:	shl    BYTE PTR [edx+0x7a],cl
  40eab3:	jecxz  0x40eabd
  40eab5:	cli    
  40eab6:	retf   0x4078
  40eab9:	pop    eax
  40eaba:	jge    0x40ea73
  40eabc:	enter  0x2a3a,0x2d
  40eac0:	sub    BYTE PTR [ecx+0x4f],bl
  40eac3:	jae    0x40ea9b
  40eac5:	add    eax,0x7d692548
  40eaca:	xor    eax,0x7fdd1f95
  40eacf:	or     BYTE PTR [edx],dh
  40ead1:	adc    ch,dl
  40ead3:	adc    edx,DWORD PTR [ebx]
  40ead5:	mov    WORD PTR [edi],gs
  40ead7:	inc    ebx
  40ead8:	cmp    ah,al
  40eada:	mov    eax,ecx
  40eadc:	mov    esi,0xf12541e3
  40eae1:	pop    edi
  40eae2:	xor    eax,0xafb898fe
  40eae7:	mov    eax,ds:0xc75a4012
  40eaec:	xor    eax,0xac88cc09
  40eaf1:	rol    BYTE PTR [ecx],1
  40eaf3:	mov    WORD PTR [ebp+eax*8+0x7d95fe3d],?
  40eafa:	jb     0x40eb56
  40eafc:	adc    DWORD PTR ds:0xe58b983f,ebp
  40eb02:	mov    cl,0x96
  40eb04:	adc    BYTE PTR [ebp+0x507c35e8],dh
  40eb0a:	mov    esp,0x15049319
  40eb0f:	xlat   BYTE PTR ds:[ebx]
  40eb10:	shr    DWORD PTR [edx+0x2f19d185],0xc3
  40eb17:	xor    al,0xc
  40eb19:	push   esp
  40eb1a:	(bad)  
  40eb1b:	in     al,dx
  40eb1c:	imul   esi,DWORD PTR [ecx-0xd6b4d56],0xa21e36cc
  40eb26:	into   
  40eb27:	and    al,0xe5
  40eb29:	dec    edx
  40eb2a:	push   ecx
  40eb2b:	xchg   esp,eax
  40eb2c:	pop    ebx
  40eb2d:	push   ss
  40eb2e:	mov    edi,?
  40eb30:	xchg   edx,eax
  40eb31:	cmp    ecx,ebx
  40eb33:	stc    
  40eb34:	adc    ah,BYTE PTR [esi]
  40eb36:	mov    eax,ds:0xc3235f73
  40eb3b:	fxch   st(6)
  40eb3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb3e:	sbb    BYTE PTR [esi],dh
  40eb40:	mov    dl,BYTE PTR [ebp-0x8fc39df]
  40eb46:	or     eax,0xcb2caaf3
  40eb4b:	test   BYTE PTR [eax],bl
  40eb4d:	fiadd  DWORD PTR [eax-0x7d34908e]
  40eb53:	arpl   si,ax
  40eb55:	std    
  40eb56:	xor    esp,DWORD PTR [edx+0x76]
  40eb59:	lahf   
  40eb5a:	xchg   edi,eax
  40eb5b:	and    al,0xae
  40eb5d:	popa   
  40eb5e:	retf   0x3eb1
  40eb61:	outs   dx,BYTE PTR ds:[esi]
  40eb62:	loop   0x40eb77
  40eb64:	xor    bh,BYTE PTR [ebx-0x62]
  40eb67:	mov    DWORD PTR ds:[ecx+eiz*2],ecx
  40eb6b:	mov    ecx,0xe7622a6c
  40eb70:	sahf   
  40eb71:	aaa    
  40eb72:	sahf   
  40eb73:	jbe    0x40eb7a
  40eb75:	jp     0x40ebc6
  40eb77:	mov    al,0x80
  40eb79:	test   DWORD PTR [esp+eax*4],esp
  40eb7c:	std    
  40eb7d:	xor    al,0x66
  40eb7f:	scas   al,BYTE PTR es:[edi]
  40eb80:	dec    esp
  40eb81:	data16 xor BYTE PTR [ecx],al
  40eb84:	xchg   ebp,eax
  40eb85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb86:	pop    ecx
  40eb87:	inc    edi
  40eb88:	jl     0x40eb46
  40eb8a:	adc    ebp,DWORD PTR ds:0xdf8f98d
  40eb90:	call   0x137686c1
  40eb95:	ror    BYTE PTR [ecx+0x5e],cl
  40eb98:	ror    DWORD PTR [edi-0x4],0xcb
  40eb9c:	cmp    eax,0x136484d6
  40eba1:	jmp    0x40ec1e
  40eba3:	fisttp DWORD PTR [edi+0x6f]
  40eba6:	xchg   esp,eax
  40eba7:	dec    esi
  40eba8:	int3   
  40eba9:	loop   0x40eb49
  40ebab:	push   ecx
  40ebac:	jg     0x40ebea
  40ebae:	xchg   edi,eax
  40ebaf:	push   ds
  40ebb0:	popa   
  40ebb1:	outs   dx,BYTE PTR ds:[esi]
  40ebb2:	and    eax,0x5a8eac80
  40ebb7:	stos   DWORD PTR es:[edi],eax
  40ebb8:	loopne 0x40ebde
  40ebba:	fimul  DWORD PTR [edx-0x48]
  40ebbd:	mov    dl,0x53
  40ebbf:	pop    esi
  40ebc0:	popf   
  40ebc1:	ins    BYTE PTR es:[edi],dx
  40ebc2:	push   cs
  40ebc3:	pop    edx
  40ebc4:	test   eax,0xe1774f62
  40ebc9:	sub    al,0xcd
  40ebcb:	push   ebp
  40ebcc:	push   0x59914b2a
  40ebd1:	mov    al,0x85
  40ebd3:	push   esi
  40ebd4:	arpl   WORD PTR [ebp+edi*8-0x17c2e379],cx
  40ebdb:	sbb    ebx,ebx
  40ebdd:	mov    bh,0x13
  40ebdf:	cmp    bl,dl
  40ebe1:	pop    ecx
  40ebe2:	pushf  
  40ebe3:	inc    edx
  40ebe4:	push   0xffffffe6
  40ebe6:	es mov esi,0x8670b024
  40ebec:	sbb    al,0x69
  40ebee:	sbb    al,BYTE PTR ds:0xcdd7c7b2
  40ebf4:	jge    0x40eba9
  40ebf6:	lock add al,0x44
  40ebf9:	or     eax,0x3bc38cdf
  40ebfe:	nop
  40ebff:	pop    ds
  40ec00:	adc    DWORD PTR [eax],esi
  40ec02:	imul   edx,DWORD PTR [ebp+0xc2f1391],0xffffff9e
  40ec09:	dec    esp
  40ec0a:	(bad)  
  40ec0b:	fwait
  40ec0c:	in     al,0x50
  40ec0e:	loope  0x40ec82
  40ec10:	cmp    ebx,0x79
  40ec13:	sahf   
  40ec14:	dec    ebx
  40ec15:	(bad)  
  40ec16:	sbb    edi,DWORD PTR [ecx-0x52]
  40ec19:	js     0x40ebf4
  40ec1b:	(bad)  
  40ec1c:	jmp    0xa2a6:0xb8c93479
  40ec23:	xor    edx,DWORD PTR [edi+0x4ea4d9fc]
  40ec29:	(bad)  
  40ec2a:	jecxz  0x40ec0e
  40ec2c:	adc    BYTE PTR [ecx+0x28],0xe5
  40ec30:	shl    eax,cl
  40ec32:	js     0x40ec43
  40ec34:	mov    eax,ds:0xb7ea6d68
  40ec39:	(bad)  
  40ec3a:	leave  
  40ec3b:	jb     0x40ec39
  40ec3d:	fcmovu st,st(7)
  40ec3f:	(bad)  [ebx-0x630a0d98]
  40ec45:	arpl   WORD PTR ds:0x9a7f72cd,di
  40ec4b:	into   
  40ec4c:	jl     0x40ec30
  40ec4e:	push   0xfcb412ea
  40ec53:	or     esi,DWORD PTR [esi]
  40ec55:	lahf   
  40ec56:	mov    gs,WORD PTR [ecx-0x5e]
  40ec59:	retf   0x131d
  40ec5c:	sar    al,1
  40ec5e:	je     0x40ec97
  40ec60:	cwde   
  40ec61:	test   eax,0x49db2b04
  40ec66:	cmp    DWORD PTR [esi-0x17],esp
  40ec69:	jmp    0x40ecd1
  40ec6b:	inc    edx
  40ec6c:	or     edx,DWORD PTR [ebx]
  40ec6e:	loope  0x40ec26
  40ec70:	lock mov esp,0x18f791c2
  40ec76:	xor    edx,ebx
  40ec78:	or     eax,0x3e5c50c9
  40ec7d:	pop    eax
  40ec7e:	popf   
  40ec7f:	inc    DWORD PTR [eax+0x3f]
  40ec82:	lahf   
  40ec83:	jge    0x40ec77
  40ec85:	mov    al,ds:0x1764548d
  40ec8a:	or     DWORD PTR [edx+esi*8+0x62bb44ba],edx
  40ec91:	mov    ebp,0x3ca1e31d
  40ec96:	sub    eax,0xcd90d4fd
  40ec9b:	lods   eax,DWORD PTR ds:[esi]
  40ec9c:	mov    bl,0xef
  40ec9e:	or     al,BYTE PTR [ecx-0x6]
  40eca1:	push   0xcaf83a25
  40eca6:	sub    al,cl
  40eca8:	sub    eax,0xd2d95295
  40ecad:	add    esi,DWORD PTR [edi+0x2b]
  40ecb0:	xor    BYTE PTR [eax],ch
  40ecb2:	or     eax,0xd1dfc3d9
  40ecb7:	and    al,0x56
  40ecb9:	jg     0x40ed38
  40ecbb:	(bad)  
  40ecbc:	dec    edi
  40ecbd:	mov    ch,0x8a
  40ecbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc0:	neg    eax
  40ecc2:	mov    ds:0x1bfb057c,eax
  40ecc7:	xlat   BYTE PTR ds:[ebx]
  40ecc8:	in     al,dx
  40ecc9:	into   
  40ecca:	test   al,0xb0
  40eccc:	mov    esp,0xe531c2cc
  40ecd1:	aad    0x47
  40ecd3:	ja     0x40ec7f
  40ecd5:	mov    eax,0xc7fa037c
  40ecda:	add    eax,0x42d018
  40ecdf:	ins    BYTE PTR es:[edi],dx
  40ece0:	xor    eax,0x38390000
  40ece5:	mov    DWORD PTR ds:0x42c000,0x4c8
  40ecef:	je     0x40ed10
  40ecf5:	mov    DWORD PTR ds:0x429010,0x639a
  40ecff:	mov    eax,DWORD PTR [eax]
  40ed01:	mov    DWORD PTR ds:0x429004,0x7615
  40ed0b:	jmp    0x4113c1
  40ed10:	mov    eax,ds:0x42d008
  40ed15:	mov    eax,DWORD PTR [ebp+0x18]
  40ed18:	cmp    eax,esi
  40ed1a:	mov    DWORD PTR ds:0x429000,0x39ad
  40ed24:	jne    0x40ed48
  40ed2a:	mov    DWORD PTR ds:0x429004,0x5d12
  40ed34:	push   0xf89c85b8
  40ed39:	mov    DWORD PTR ds:0x42a008,0x6b01
  40ed43:	jmp    0x4113b0
  40ed48:	mov    esi,DWORD PTR [ebp+0x18]
  40ed4b:	mov    eax,0x4a6b
  40ed50:	mov    eax,0xf89c85bb
  40ed55:	cmp    esi,eax
  40ed57:	mov    DWORD PTR ds:0x42900c,0x4643
  40ed61:	jne    0x4113a0
  40ed67:	mov    eax,DWORD PTR [ebp+0x10]
  40ed6a:	xor    eax,ecx
  40ed6c:	mov    DWORD PTR ds:0x42a004,0x11
  40ed76:	cmp    DWORD PTR ds:0x42a004,0x0
  40ed7d:	je     0x40edd0
  40ed83:	cmp    DWORD PTR ds:0x42a004,0x20
  40ed8a:	jne    0x40edb2
  40ed90:	push   0x42e134
  40ed95:	push   0x7ef6
  40ed9a:	push   0x57ca
  40ed9f:	push   0x2ef4
  40eda4:	push   DWORD PTR [ebp-0x1c]
  40eda7:	push   0x33b6
  40edac:	call   DWORD PTR ds:0x42ed67
  40edb2:	xor    esi,esi
  40edb4:	xor    esi,DWORD PTR ds:0x42a004
  40edba:	dec    esi
  40edbb:	mov    DWORD PTR ds:0x42a004,esi
  40edc1:	jmp    0x40ed76
  40edc6:	adc    DWORD PTR ds:0x42c01c,0x56a2
  40edd0:	add    eax,edx
  40edd2:	movzx  esi,WORD PTR ds:0x42d010
  40edd9:	xor    esi,DWORD PTR ds:0x429018
  40eddf:	mov    DWORD PTR ds:0x42d010,esi
  40ede5:	mov    DWORD PTR [ebp-0x18],eax
  40ede8:	mov    eax,ds:0x42c014
  40eded:	xor    DWORD PTR ds:0x42901c,eax
  40edf3:	mov    eax,DWORD PTR [ebp+0xc]
  40edf6:	or     DWORD PTR ds:0x42a014,ecx
  40edfc:	mov    esi,DWORD PTR [ebp-0x8]
  40edff:	or     DWORD PTR ds:0x42c00c,0x42c010
  40ee09:	xor    eax,ecx
  40ee0b:	mov    DWORD PTR ds:0x42b014,0x6609
  40ee15:	add    eax,edx
  40ee17:	mov    DWORD PTR ds:0x42901c,0x1324
  40ee21:	imul   eax,DWORD PTR [esi]
  40ee24:	dec    esi
  40ee25:	mov    esi,DWORD PTR [ebp+0x8]
  40ee28:	and    DWORD PTR ds:0x42a01c,0x42d000
  40ee32:	xor    esi,ecx
  40ee34:	adc    DWORD PTR ds:0x42d01c,0x429024
  40ee3e:	add    esi,edx
  40ee40:	cmp    esi,eax
  40ee42:	mov    eax,0x6259
  40ee47:	mov    eax,DWORD PTR [ebp-0x4]
  40ee4a:	push   ebx
  40ee4b:	mov    DWORD PTR ds:0x42d014,0x783b
  40ee55:	je     0x40eecd
  40ee5b:	add    DWORD PTR ds:0x42d008,0x6ad8
  40ee65:	mov    esi,DWORD PTR [ebp-0x18]
  40ee68:	add    DWORD PTR [eax],esi
  40ee6a:	mov    DWORD PTR ds:0x429024,0x10
  40ee74:	cmp    DWORD PTR ds:0x429024,0x0
  40ee7b:	je     0x40eead
  40ee81:	cmp    DWORD PTR ds:0x429024,0x1d
  40ee88:	jne    0x40ee94
  40ee8e:	call   DWORD PTR ds:0x42ed6b
  40ee94:	xor    eax,eax
  40ee96:	add    eax,DWORD PTR ds:0x429024
  40ee9c:	dec    eax
  40ee9d:	mov    ds:0x429024,eax
  40eea2:	jmp    0x40ee74
  40eea7:	sub    eax,DWORD PTR ds:0x42a010
  40eead:	mov    eax,DWORD PTR [ebp-0x4]
  40eeb0:	neg    esi
  40eeb2:	mov    esi,DWORD PTR [ebp+0xc]
  40eeb5:	sub    DWORD PTR ds:0x42b000,0x42c004
  40eebf:	xor    esi,ecx
  40eec1:	add    esi,edx
  40eec3:	imul   esi,DWORD PTR [eax]
  40eec6:	mov    DWORD PTR [eax],esi
  40eec8:	jmp    0x40eed2
  40eecd:	mov    esi,DWORD PTR [ebp+0x14]
  40eed0:	xor    DWORD PTR [eax],esi
  40eed2:	mov    eax,DWORD PTR [ebp-0x4]
  40eed5:	mov    edi,DWORD PTR [ebp+0x10]
  40eed8:	xor    edi,ecx
  40eeda:	mov    esi,0xffcd8d20
  40eedf:	mov    ebx,esi
  40eee1:	sub    ebx,edi
  40eee3:	add    DWORD PTR [eax],ebx
  40eee5:	mov    eax,DWORD PTR [ebp-0x4]
  40eee8:	mov    edi,DWORD PTR [ebp-0x8]
  40eeeb:	add    edi,DWORD PTR [eax]
  40eeed:	mov    DWORD PTR [ebp-0x8],edi
  40eef0:	mov    eax,DWORD PTR [ebp+0xc]
  40eef3:	mov    edi,DWORD PTR [ebp+0xc]
  40eef6:	xor    edi,ecx
  40eef8:	xor    eax,ecx
  40eefa:	lea    eax,[eax+edi*1+0x64e5c0]
  40ef01:	mov    edi,DWORD PTR [ebp+0xc]
  40ef04:	xor    edi,ecx
  40ef06:	add    edi,edx
  40ef08:	imul   eax,edi
  40ef0b:	mov    edi,DWORD PTR [ebp+0xc]
  40ef0e:	xor    edi,ecx
  40ef10:	sub    edi,eax
  40ef12:	jmp    0x411286
  40ef17:	ror    DWORD PTR [ebx+ecx*8-0x5e],0xbb
  40ef1c:	xchg   ecx,eax
  40ef1d:	mov    esi,ebx
  40ef1f:	pop    ebp
  40ef20:	jmp    0x40ef7d
  40ef22:	dec    eax
  40ef23:	and    DWORD PTR [ebp-0x369fb5ad],ebx
  40ef29:	jp     0x40efa5
  40ef2b:	adc    ebx,DWORD PTR [edi+0x7a]
  40ef2e:	jp     0x40eef6
  40ef30:	xor    BYTE PTR [esi+0x35789174],bl
  40ef36:	adc    DWORD PTR ss:[ecx+0x64],ebx
  40ef3a:	cld    
  40ef3b:	inc    ebx
  40ef3c:	jg     0x40ef91
  40ef3e:	(bad)  
  40ef3f:	mov    dh,0x1d
  40ef41:	or     DWORD PTR [eax-0x683fa0ea],eax
  40ef47:	sahf   
  40ef48:	add    eax,0x277df824
  40ef4d:	jae    0x40eee7
  40ef4f:	mov    cl,0x88
  40ef51:	pop    ebp
  40ef52:	cwde   
  40ef53:	dec    ebx
  40ef54:	shl    DWORD PTR [ebp+ebx*2+0x299f2002],0x61
  40ef5c:	and    al,0xa2
  40ef5e:	mov    ebx,0x9574370e
  40ef63:	add    BYTE PTR [ebx-0x2a],dh
  40ef66:	fs or  esi,esi
  40ef69:	adc    DWORD PTR [ecx+0x10a6ee5a],0xafb6874b
  40ef73:	fidiv  DWORD PTR [esi]
  40ef75:	outs   dx,DWORD PTR ds:[esi]
  40ef76:	jns    0x40eef8
  40ef78:	pop    esi
  40ef79:	mov    al,0x67
  40ef7b:	loope  0x40ef58
  40ef7d:	jp     0x40efc9
  40ef7f:	cmp    al,0x43
  40ef81:	(bad)  
  40ef82:	pop    ebx
  40ef83:	sbb    al,0x13
  40ef85:	inc    esi
  40ef86:	nop
  40ef87:	(bad)  
  40ef88:	and    al,0x68
  40ef8a:	scas   eax,DWORD PTR es:[edi]
  40ef8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef8c:	pop    edi
  40ef8d:	outs   dx,BYTE PTR ds:[esi]
  40ef8e:	je     0x40ef7d
  40ef90:	fucomip st,st(5)
  40ef92:	adc    dl,bl
  40ef94:	push   0x14
  40ef96:	daa    
  40ef97:	adc    BYTE PTR [edx+0x45],dh
  40ef9a:	and    BYTE PTR [esi-0x77ad73ad],cl
  40efa0:	push   edx
  40efa1:	cmp    eax,0x5f8565f1
  40efa6:	aaa    
  40efa7:	stos   DWORD PTR es:[edi],eax
  40efa8:	adc    edi,DWORD PTR [esi]
  40efaa:	xor    BYTE PTR [edx+0x2889445d],dh
  40efb0:	jmp    0x1982:0xb5877ea8
  40efb7:	(bad)  
  40efb8:	or     DWORD PTR [ebx+eax*1+0x3fb9374e],esp
  40efbf:	jg     0x40efc0
  40efc1:	imul   ecx,DWORD PTR [ecx+0x3764fcfb],0x78f4de1a
  40efcb:	pop    esi
  40efcc:	nop    DWORD PTR [edi+0x12]
  40efd0:	cmp    ecx,DWORD PTR ds:0x604fd771
  40efd6:	das    
  40efd7:	inc    edx
  40efd8:	add    eax,0x4cedd2aa
  40efdd:	push   ebp
  40efde:	call   0x35b4:0xb91fd8bc
  40efe5:	mov    dl,0x74
  40efe7:	icebp  
  40efe8:	ja     0x40efa0
  40efea:	push   ds
  40efeb:	call   0xe7313566
  40eff0:	ret    
  40eff1:	jl     0x40efd3
  40eff3:	xor    dh,BYTE PTR [eax]
  40eff5:	inc    edi
  40eff6:	in     eax,0x72
  40eff8:	push   es
  40eff9:	adc    eax,0x6faaafcd
  40effe:	mov    dl,0x4e
  40f000:	mov    ecx,0x38b60ab1
  40f005:	mov    dl,0xa0
  40f007:	and    eax,ebp
  40f009:	inc    ebx
  40f00a:	push   edx
  40f00b:	dec    esp
  40f00c:	retf   0xae33
  40f00f:	xchg   ecx,eax
  40f010:	mov    eax,0xeac85c8a
  40f015:	sub    eax,0x2f9eb72a
  40f01a:	imul   eax,DWORD PTR [eax-0x325a57ef],0xa2779b8e
  40f024:	cmc    
  40f025:	std    
  40f026:	push   0x9d427945
  40f02b:	and    edx,DWORD PTR gs:[ebx]
  40f02e:	mov    al,0xd5
  40f030:	inc    ebp
  40f031:	mov    bl,ch
  40f033:	inc    ebp
  40f034:	push   edi
  40f035:	(bad)  
  40f036:	sti    
  40f037:	sbb    BYTE PTR [esi-0x4f87871e],0x92
  40f03e:	dec    esp
  40f03f:	dec    ebx
  40f040:	loop   0x40f056
  40f042:	cmp    DWORD PTR [ecx+0x26],ebx
  40f045:	leave  
  40f046:	jns    0x40eff3
  40f048:	mov    ds:0xf5c97311,eax
  40f04d:	data16 je 0x40f003
  40f050:	psrlq  mm0,QWORD PTR [edi+0x7bf1b86e]
  40f057:	pop    esp
  40f058:	scas   eax,DWORD PTR es:[edi]
  40f059:	test   al,0xe7
  40f05b:	mov    WORD PTR [ebx],es
  40f05d:	ins    BYTE PTR es:[edi],dx
  40f05e:	and    bh,BYTE PTR [ebx-0x42]
  40f061:	lock xchg ebp,eax
  40f063:	jbe    0x40f008
  40f065:	sbb    edx,DWORD PTR [esi-0x95d4c5d]
  40f06b:	xor    dl,BYTE PTR [edx+0x4a]
  40f06e:	adc    dh,BYTE PTR [eax+0x28339d94]
  40f074:	jo     0x40f049
  40f076:	fsub   QWORD PTR [edi+0x60476c1d]
  40f07c:	xor    DWORD PTR [esp+ebx*8-0x7bed4cb0],ecx
  40f083:	ror    ah,0x9f
  40f086:	jo     0x40f07a
  40f088:	and    al,0x35
  40f08a:	inc    edi
  40f08b:	jge    0x40f0fc
  40f08d:	adc    ch,BYTE PTR [ecx]
  40f08f:	pop    edi
  40f090:	icebp  
  40f091:	xchg   ebx,eax
  40f092:	mov    WORD PTR [ecx-0x260f198],?
  40f098:	fild   WORD PTR [ebx]
  40f09a:	jb     0x40f0ca
  40f09c:	xor    eax,0xd58f5f19
  40f0a1:	mov    al,0x97
  40f0a3:	in     al,0xd7
  40f0a5:	lea    edi,[edi+ebp*4+0x26]
  40f0a9:	inc    ebx
  40f0aa:	shr    BYTE PTR [eax-0x56baabd1],1
  40f0b0:	jge    0x40f0c6
  40f0b2:	out    0x3f,al
  40f0b4:	sub    dl,BYTE PTR ss:[esi+0x45]
  40f0b8:	mov    ds:0x2a72b12f,eax
  40f0bd:	xchg   esi,eax
  40f0be:	cs aaa 
  40f0c0:	push   ebx
  40f0c1:	fcomp  DWORD PTR [edi-0x79a65161]
  40f0c7:	mov    ch,BYTE PTR [ecx-0x20a09029]
  40f0cd:	pop    esi
  40f0ce:	cmp    edi,0xa5084aa6
  40f0d4:	loopne 0x40f074
  40f0d6:	jmp    0x5f7:0xd515ce8
  40f0dd:	add    DWORD PTR [esi+0x5],edx
  40f0e0:	and    ebp,DWORD PTR [eax-0x5e]
  40f0e3:	dec    esp
  40f0e4:	fistp  DWORD PTR [esi+esi*4-0xf034696]
  40f0eb:	and    esp,DWORD PTR [eax]
  40f0ed:	out    dx,al
  40f0ee:	add    DWORD PTR [edx+0x62],ecx
  40f0f1:	sar    BYTE PTR [esi],cl
  40f0f3:	or     al,0x38
  40f0f5:	push   cs
  40f0f6:	out    dx,eax
  40f0f7:	jle    0x40f11a
  40f0f9:	mov    ah,0xf8
  40f0fb:	mov    dl,0xf
  40f0fd:	adc    al,BYTE PTR [edi+0x59]
  40f100:	xor    edi,DWORD PTR [ebp+ebp*4-0x12]
  40f104:	lea    eax,[edi+0x7080ed00]
  40f10a:	imul   BYTE PTR [esi+0x5b7661bd]
  40f110:	jmp    0x40f131
  40f112:	mov    ch,bh
  40f114:	stos   BYTE PTR es:[edi],al
  40f115:	loope  0x40f11e
  40f117:	inc    eax
  40f118:	ins    BYTE PTR es:[edi],dx
  40f119:	mov    ds:0x3e6981ee,al
  40f11e:	mov    esp,0x5036c4cf
  40f123:	adc    al,0xfe
  40f125:	add    dl,ch
  40f127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f128:	adc    DWORD PTR [ecx+0x12],ebx
  40f12b:	shl    DWORD PTR [ebx+esi*8],0xe2
  40f12f:	xor    dh,ah
  40f131:	push   edx
  40f132:	jae    0x40f0da
  40f134:	cli    
  40f135:	mov    edi,0x367f8f4c
  40f13a:	push   0x9
  40f13c:	mov    ebp,0x2326e3c4
  40f141:	push   ss
  40f142:	sub    eax,edi
  40f144:	addr16 jae 0x40f0fa
  40f147:	xor    BYTE PTR [edi],al
  40f149:	sub    BYTE PTR [ebx],al
  40f14b:	iret   
  40f14c:	(bad)  
  40f14d:	bswap  ebp
  40f14f:	out    0xdd,al
  40f151:	hlt    
  40f152:	mov    esi,0xdddd07c9
  40f157:	and    DWORD PTR [esi+0x2d],edx
  40f15a:	pop    ss
  40f15b:	sar    DWORD PTR [ebp+0x39b1c7a1],cl
  40f161:	outs   dx,DWORD PTR ds:[esi]
  40f162:	xchg   bh,al
  40f164:	dec    eax
  40f165:	out    0x3,eax
  40f167:	sbb    eax,0x239a345a
  40f16c:	test   al,0xd8
  40f16e:	cmp    esi,ebp
  40f170:	xor    esp,ebp
  40f172:	fiadd  WORD PTR [edx-0x5ce59a7f]
  40f178:	mov    bl,0xa3
  40f17a:	std    
  40f17b:	stc    
  40f17c:	jecxz  0x40f13a
  40f17e:	std    
  40f17f:	xchg   ecx,eax
  40f180:	test   DWORD PTR [esi+0x44],ebx
  40f183:	popf   
  40f184:	pusha  
  40f185:	push   0xffffffcd
  40f187:	xchg   edi,eax
  40f188:	add    BYTE PTR [esi],0xe9
  40f18b:	xchg   ecx,eax
  40f18c:	mov    ?,esi
  40f18e:	fmul   DWORD PTR [edi+0x73622928]
  40f194:	outs   dx,DWORD PTR ds:[esi]
  40f195:	or     BYTE PTR [edx+0x14b6e8ef],cl
  40f19b:	lea    eax,[ecx-0x16]
  40f19e:	and    al,0x42
  40f1a0:	leave  
  40f1a1:	jl     0x40f1c5
  40f1a3:	jb     0x40f1ac
  40f1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1a6:	sti    
  40f1a7:	(bad)  
  40f1a9:	cmp    BYTE PTR [ecx-0x42],0x52
  40f1ad:	dec    esi
  40f1ae:	(bad)  
  40f1af:	adc    bh,bl
  40f1b1:	xor    DWORD PTR [eax+eax*8-0x2e278237],eax
  40f1b8:	sub    DWORD PTR [ecx-0x49],esp
  40f1bb:	pushf  
  40f1bc:	pushf  
  40f1bd:	pop    es
  40f1be:	jg     0x40f1e9
  40f1c0:	pusha  
  40f1c1:	iret   
  40f1c2:	repnz (bad) 
  40f1c4:	jle    0x40f175
  40f1c6:	loop   0x40f1c2
  40f1c8:	add    BYTE PTR [edx],cl
  40f1ca:	mov    bl,BYTE PTR [ebx+ecx*8-0x34]
  40f1ce:	fisub  DWORD PTR [ecx+0x62067bea]
  40f1d4:	and    bl,al
  40f1d6:	add    al,0xd6
  40f1d8:	neg    DWORD PTR [ebp+0x4]
  40f1db:	jecxz  0x40f239
  40f1dd:	pop    ecx
  40f1de:	sub    ecx,DWORD PTR [edx]
  40f1e0:	mov    ebx,0x92db749a
  40f1e5:	jmp    0xcf93a5a
  40f1ea:	mov    ah,0xaf
  40f1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1ed:	rcl    DWORD PTR [ecx+0x57928bc0],1
  40f1f3:	push   cs
  40f1f4:	daa    
  40f1f5:	or     eax,0xf7e73c38
  40f1fa:	shl    al,1
  40f1fc:	fadd   DWORD PTR [edx]
  40f1fe:	pop    ss
  40f1ff:	or     al,0x0
  40f201:	icebp  
  40f202:	mov    ebx,0xf95c7fb5
  40f207:	pop    esp
  40f208:	jge    0x40f18c
  40f20a:	jns    0x40f287
  40f20c:	retf   
  40f20d:	adc    ebx,DWORD PTR [ebx]
  40f20f:	retf   0x796e
  40f212:	jns    0x40f1af
  40f214:	lock test DWORD PTR [ecx*8-0x7e603a51],ebx
  40f21c:	push   es
  40f21d:	or     bl,BYTE PTR [esi]
  40f21f:	les    ecx,FWORD PTR [edx-0x21]
  40f222:	inc    BYTE PTR [ecx+0x245f3516]
  40f228:	adc    edx,ebx
  40f22a:	push   ecx
  40f22b:	jmp    DWORD PTR [ebp+0x7]
  40f22e:	pop    eax
  40f22f:	outs   dx,BYTE PTR ds:[esi]
  40f230:	or     eax,0xe2169697
  40f235:	xor    esp,DWORD PTR [eax+0x50b9b5e7]
  40f23b:	mov    cl,0xf2
  40f23d:	mov    eax,ds
  40f23f:	push   sp
  40f241:	add    al,BYTE PTR [edi+0xe]
  40f244:	sar    DWORD PTR [edx],1
  40f246:	adc    DWORD PTR [edi+0x8],ebx
  40f249:	outs   dx,DWORD PTR ds:[esi]
  40f24a:	iret   
  40f24b:	push   es
  40f24c:	(bad)  
  40f24d:	pop    esp
  40f24e:	shl    DWORD PTR [ebx],1
  40f250:	ins    BYTE PTR es:[edi],dx
  40f251:	pop    ds
  40f252:	jmp    0x61bd:0x1bd4eb20
  40f259:	push   esp
  40f25a:	adc    BYTE PTR ds:0x689b4200,dh
  40f260:	fcomp  DWORD PTR [ebp-0x80]
  40f263:	stc    
  40f264:	sub    eax,0x8256090c
  40f269:	mov    eax,ds:0xa774b30c
  40f26e:	das    
  40f26f:	cmp    eax,0x161fd83c
  40f274:	mov    gs,WORD PTR [edx]
  40f276:	adc    ebx,DWORD PTR [ebx-0x76e95539]
  40f27c:	inc    ebp
  40f27d:	cmp    DWORD PTR [edi+0x55],eax
  40f280:	xchg   ebp,eax
  40f281:	imul   ebp,DWORD PTR [esi+0x5d],0x28
  40f285:	sbb    eax,0x8f75582c
  40f28a:	xor    bl,BYTE PTR [edi]
  40f28c:	retf   
  40f28d:	mov    ecx,DWORD PTR [edi-0x48351345]
  40f293:	dec    ecx
  40f294:	inc    ecx
  40f295:	and    eax,0x6adaae7c
  40f29a:	jne    0x40f22e
  40f29c:	jmp    0x40f25b
  40f29e:	stc    
  40f29f:	xchg   esi,eax
  40f2a0:	mov    eax,0x6ee6f3ec
  40f2a5:	lahf   
  40f2a6:	inc    esi
  40f2a7:	fmul   DWORD PTR [ebp-0x5d4b1928]
  40f2ad:	enter  0x1c21,0xc6
  40f2b1:	outs   dx,BYTE PTR ds:[esi]
  40f2b2:	jmp    0x380f8b2d
  40f2b7:	add    BYTE PTR [ebx+0xa],0x20
  40f2bb:	fisubr DWORD PTR [esi]
  40f2bd:	repnz scas eax,DWORD PTR es:[edi]
  40f2bf:	mov    dl,0xd9
  40f2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c2:	lea    edi,[edi-0x43b2eb6e]
  40f2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c9:	pop    edi
  40f2ca:	das    
  40f2cb:	shl    edi,0xb9
  40f2ce:	sub    ebp,ecx
  40f2d0:	inc    esp
  40f2d1:	mov    cl,0x85
  40f2d3:	xchg   ebx,eax
  40f2d4:	test   DWORD PTR [edx-0x71135fbb],0x3fbfd9a9
  40f2de:	push   ebp
  40f2df:	popa   
  40f2e0:	sbb    eax,0xa90b576a
  40f2e5:	cli    
  40f2e6:	retf   
  40f2e7:	jne    0x40f340
  40f2e9:	pop    eax
  40f2ea:	mov    cl,dl
  40f2ec:	loope  0x40f2ca
  40f2ee:	jle    0x40f36d
  40f2f0:	cmp    eax,DWORD PTR [edi+ebp*1]
  40f2f3:	fchs   
  40f2f5:	sub    bl,BYTE PTR es:[ecx+0x7d069cad]
  40f2fc:	(bad)  
  40f2fd:	jmp    0x40f2b8
  40f2ff:	retf   0xef72
  40f302:	in     al,dx
  40f303:	mov    esp,0x288c3bbe
  40f308:	repz sahf 
  40f30a:	or     DWORD PTR [eax+0x6752394],0x5
  40f311:	pusha  
  40f312:	jmp    0x40f318
  40f314:	xchg   ebp,eax
  40f315:	mov    WORD PTR [ebx+0x57],cs
  40f318:	jecxz  0x40f379
  40f31a:	inc    esi
  40f31b:	arpl   ax,cx
  40f31d:	dec    DWORD PTR [esi-0x68798c34]
  40f323:	sub    ebp,0xffffffe0
  40f326:	icebp  
  40f327:	cs cwde 
  40f329:	dec    edx
  40f32a:	xchg   ebx,eax
  40f32b:	dec    esi
  40f32c:	jl     0x40f30c
  40f32e:	gs in  eax,dx
  40f330:	lea    edx,[ebx+0x5f]
  40f333:	adc    BYTE PTR [ebp-0x70],dl
  40f336:	and    eax,ebx
  40f338:	hlt    
  40f339:	test   DWORD PTR [eax+0x647154d3],edx
  40f33f:	stos   DWORD PTR es:[edi],eax
  40f340:	sub    ebp,edi
  40f342:	sub    dl,BYTE PTR [ebp+0x4cf8861d]
  40f348:	pop    ds
  40f349:	jl     0x40f3b8
  40f34b:	jbe    0x40f36d
  40f34d:	(bad)  
  40f34e:	imul   edx,DWORD PTR ds:0xcbe015e9,0x672f8bc0
  40f358:	or     BYTE PTR [ecx],ah
  40f35a:	xor    al,0xce
  40f35c:	mov    ch,0x8a
  40f35e:	lods   al,BYTE PTR ds:[esi]
  40f35f:	mov    dl,0xa3
  40f361:	cld    
  40f362:	mov    al,0xb7
  40f364:	mov    eax,ds:0x74091fad
  40f369:	xor    eax,0xfc6d4fb9
  40f36e:	xchg   ebx,eax
  40f36f:	jmp    0x40f361
  40f371:	jmp    FWORD PTR [ebx+0x7f]
  40f374:	inc    eax
  40f375:	call   0xf858:0x58efd2e0
  40f37c:	cmp    ah,0x9b
  40f37f:	je     0x40f372
  40f381:	and    bl,BYTE PTR [eax]
  40f383:	jmp    0x15ced019
  40f388:	xor    eax,ebx
  40f38a:	mov    ah,0xd2
  40f38c:	hlt    
  40f38d:	rcl    DWORD PTR [ebp-0x1c17d3d6],1
  40f393:	shr    DWORD PTR [esi+ecx*2+0x24],cl
  40f397:	dec    ecx
  40f398:	sar    al,cl
  40f39a:	add    bh,BYTE PTR [edx+0x41]
  40f39d:	dec    esi
  40f39e:	mov    BYTE PTR [edx],0x81
  40f3a1:	test   eax,0xe5b9e386
  40f3a6:	dec    BYTE PTR [edx]
  40f3a8:	inc    esp
  40f3a9:	inc    edx
  40f3aa:	and    dh,BYTE PTR [edi]
  40f3ac:	mov    ebx,0x8009beb3
  40f3b1:	fstp   TBYTE PTR [di+0x26a8]
  40f3b6:	lods   al,BYTE PTR ds:[esi]
  40f3b7:	(bad)  
  40f3b8:	rcr    dh,1
  40f3ba:	xchg   ebx,eax
  40f3bb:	or     eax,0xc6b5ba8b
  40f3c0:	std    
  40f3c1:	jmp    0x479cd26
  40f3c6:	sbb    edi,ebx
  40f3c8:	fs aam 0x83
  40f3cb:	mov    ch,0x67
  40f3cd:	(bad)  
  40f3ce:	push   edx
  40f3cf:	adc    BYTE PTR [ebx-0x43604275],cl
  40f3d5:	fldpi  
  40f3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3d8:	mov    ?,WORD PTR [edi]
  40f3da:	mov    es:0x3ac2d6f3,eax
  40f3e0:	push   ebx
  40f3e1:	sub    al,0x2
  40f3e3:	add    DWORD PTR [ebx],edi
  40f3e5:	test   al,0x17
  40f3e7:	ins    DWORD PTR es:[edi],dx
  40f3e8:	sub    BYTE PTR [edi-0xe],0x62
  40f3ec:	inc    esp
  40f3ed:	leave  
  40f3ee:	mov    edx,0x57fe5ce2
  40f3f3:	loopne 0x40f435
  40f3f5:	fisubr WORD PTR ds:0x9234afa3
  40f3fb:	xor    esp,DWORD PTR [edi+0x36]
  40f3fe:	push   esp
  40f3ff:	jns    0x40f3d6
  40f401:	push   esi
  40f402:	es clc 
  40f404:	mov    BYTE PTR [esi+0x6508ab50],ch
  40f40a:	aaa    
  40f40b:	jae    0x40f3f5
  40f40d:	pop    edi
  40f40e:	and    al,0x28
  40f410:	xchg   edi,eax
  40f411:	adc    DWORD PTR ds:0x15ab4fe7,edx
  40f417:	mov    eax,0xda5f4ccb
  40f41c:	sar    si,cl
  40f41f:	outs   dx,DWORD PTR ds:[esi]
  40f420:	rcl    DWORD PTR [esp+ebx*2],0x58
  40f424:	loope  0x40f45b
  40f426:	sbb    al,0x89
  40f428:	xchg   DWORD PTR [eax-0x5dcc1da5],esp
  40f42e:	(bad)  
  40f42f:	nop
  40f430:	mov    ch,0xa8
  40f432:	cwde   
  40f433:	sbb    BYTE PTR [edi+0x267e40ae],al
  40f439:	xor    al,0x9b
  40f43b:	pop    ebx
  40f43c:	jg     0x40f450
  40f43e:	pop    esp
  40f43f:	mov    WORD PTR [ecx],es
  40f441:	xchg   esi,eax
  40f442:	(bad)  
  40f443:	pop    esp
  40f444:	dec    edi
  40f445:	jns    0x40f4ab
  40f447:	loopne 0x40f414
  40f449:	push   ebp
  40f44a:	xor    al,BYTE PTR [ebx]
  40f44c:	jo     0x40f3f6
  40f44e:	inc    esi
  40f44f:	cld    
  40f450:	popa   
  40f451:	cdq    
  40f452:	mov    ebx,0x4605e2a3
  40f457:	lea    ebx,[esi-0x57fcf81a]
  40f45d:	lds    esi,FWORD PTR [eax]
  40f45f:	push   0xffffffe5
  40f461:	arpl   WORD PTR [ebp+0x22f90aff],ax
  40f467:	cmp    BYTE PTR [ecx+0x4d3a3307],bh
  40f46d:	pushf  
  40f46e:	mov    bh,0xdf
  40f470:	pop    esi
  40f471:	xchg   ebx,eax
  40f472:	sbb    BYTE PTR [ebp+0x28],ch
  40f475:	dec    edx
  40f476:	lods   al,BYTE PTR ds:[esi]
  40f477:	mov    ds:0x938aeb26,al
  40f47c:	push   0xffffffc9
  40f47e:	(bad)
  40f481:	add    ah,BYTE PTR [ecx]
  40f483:	mov    dh,0xff
  40f485:	mov    ch,0x48
  40f487:	mov    ss,WORD PTR [edx+0x1a1b52b1]
  40f48d:	ins    BYTE PTR es:[edi],dx
  40f48e:	push   es
  40f48f:	push   edi
  40f490:	dec    ebx
  40f491:	mov    ebx,0x191bd84d
  40f496:	mov    bh,0x3e
  40f498:	inc    eax
  40f499:	std    
  40f49a:	ret    
  40f49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f49c:	adc    DWORD PTR [ecx+0x708f46d5],edx
  40f4a2:	jo     0x40f44c
  40f4a4:	cmp    esp,ebp
  40f4a6:	leave  
  40f4a7:	outs   dx,DWORD PTR ds:[esi]
  40f4a8:	ds loop 0x40f489
  40f4ab:	dec    ebx
  40f4ac:	call   0x9e95:0xd5861d6d
  40f4b3:	in     eax,0xd5
  40f4b5:	out    dx,al
  40f4b6:	push   es
  40f4b7:	jl     0x40f43f
  40f4b9:	push   ds
  40f4ba:	pop    ecx
  40f4bb:	push   ebx
  40f4bc:	cdq    
  40f4bd:	cwde   
  40f4be:	pop    esi
  40f4bf:	fidiv  WORD PTR [ebx-0x769da2e7]
  40f4c5:	or     ah,BYTE PTR [eax]
  40f4c7:	mov    ah,0xe9
  40f4c9:	das    
  40f4ca:	pop    ebp
  40f4cb:	sbb    ecx,DWORD PTR [ecx-0x2fd0e85]
  40f4d1:	(bad)  
  40f4d2:	pop    edi
  40f4d3:	hlt    
  40f4d4:	sub    BYTE PTR [eax+0x28],dh
  40f4d7:	ret    0x4c61
  40f4da:	jno    0x40f539
  40f4dc:	push   0x61609403
  40f4e1:	int    0xa6
  40f4e3:	xchg   edi,eax
  40f4e4:	cs push 0xfae1f814
  40f4ea:	push   es
  40f4eb:	mov    esi,0x3018382a
  40f4f0:	xchg   esi,eax
  40f4f1:	mov    ch,0x1d
  40f4f3:	push   0x981cb525
  40f4f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4f9:	aam    0x24
  40f4fb:	into   
  40f4fc:	dec    edx
  40f4fd:	stos   BYTE PTR es:[edi],al
  40f4fe:	sbb    BYTE PTR [edx-0x28436c4a],ah
  40f504:	pop    esp
  40f505:	rol    DWORD PTR [ebx+0x8697616],cl
  40f50b:	retf   0xb5a7
  40f50e:	inc    ebp
  40f50f:	and    esi,DWORD PTR [ebx+0x3c]
  40f512:	xor    al,0xc5
  40f514:	add    ch,ch
  40f516:	adc    BYTE PTR [eax-0x7c],ah
  40f519:	push   es
  40f51a:	dec    ecx
  40f51b:	out    dx,al
  40f51c:	or     eax,0xe1739c6a
  40f521:	pop    ss
  40f522:	dec    esp
  40f523:	jmp    0x40f4bd
  40f525:	sahf   
  40f526:	mov    bh,bl
  40f528:	sbb    esi,DWORD PTR [esi-0x67ec1ccd]
  40f52e:	cmp    BYTE PTR [edx],ah
  40f530:	in     eax,dx
  40f531:	out    0x1b,al
  40f533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f534:	or     BYTE PTR [edi],dh
  40f536:	push   esi
  40f537:	xchg   edx,eax
  40f538:	and    eax,0x5e7a67b2
  40f53d:	das    
  40f53e:	cmp    al,0x3d
  40f540:	sbb    ebp,0x60dad97e
  40f546:	mov    ds:0x9478b212,al
  40f54b:	cld    
  40f54c:	and    ah,al
  40f54e:	(bad)  
  40f54f:	or     al,0x8f
  40f551:	lods   eax,DWORD PTR ds:[esi]
  40f553:	loop   0x40f563
  40f555:	cmc    
  40f556:	xor    al,0x69
  40f558:	mov    edx,0xf924b5cc
  40f55d:	arpl   WORD PTR [edi+0x32],cx
  40f560:	jmp    0x4d3a:0xee260179
  40f567:	lock jecxz 0x40f584
  40f56a:	dec    edx
  40f56b:	jg     0x40f533
  40f56d:	xor    al,0x38
  40f56f:	outs   dx,DWORD PTR ds:[esi]
  40f570:	xchg   edx,eax
  40f571:	jmp    0x40f56f
  40f573:	in     eax,0x90
  40f575:	(bad)  
  40f576:	jmp    0x40f4fa
  40f578:	jp     0x40f565
  40f57a:	cli    
  40f57b:	int    0x58
  40f57d:	or     dh,BYTE PTR [ebx-0x36]
  40f580:	stos   DWORD PTR es:[edi],eax
  40f581:	jle    0x40f5ab
  40f583:	xor    eax,DWORD PTR [ecx]
  40f585:	(bad)  
  40f586:	pop    edi
  40f587:	lods   eax,DWORD PTR ds:[esi]
  40f588:	push   cs
  40f589:	pop    ecx
  40f58a:	aam    0x9d
  40f58c:	stc    
  40f58d:	loope  0x40f557
  40f58f:	xor    al,0x48
  40f591:	xor    bh,BYTE PTR [esi-0x3fb8c05]
  40f597:	arpl   WORD PTR [ecx+0x51],bp
  40f59a:	adc    edi,DWORD PTR [ebx+0x42]
  40f59d:	pop    ebx
  40f59e:	xlat   BYTE PTR ds:[ebx]
  40f59f:	pop    esp
  40f5a0:	xchg   esp,eax
  40f5a1:	sar    BYTE PTR [ecx-0x64],0x45
  40f5a5:	(bad)  
  40f5a6:	js     0x40f5ba
  40f5a8:	adc    BYTE PTR [ebp+0x73db1008],dl
  40f5ae:	test   DWORD PTR [edi+0x7e],ebp
  40f5b1:	inc    ecx
  40f5b2:	jnp    0x40f5d1
  40f5b4:	jle    0x40f5f2
  40f5b6:	cmp    cl,BYTE PTR [ecx+eiz*4+0xcfb4b69]
  40f5bd:	ret    0xf725
  40f5c0:	std    
  40f5c1:	jmp    0x8712ba6
  40f5c6:	dec    edi
  40f5c7:	aas    
  40f5c8:	mov    eax,0x78948ecb
  40f5cd:	ja     0x40f5f1
  40f5cf:	arpl   WORD PTR [ecx],dx
  40f5d1:	jmp    eax
  40f5d3:	mov    edi,0xd0d29c37
  40f5d8:	bound  ebp,QWORD PTR [esi+0x6565241a]
  40f5de:	sub    DWORD PTR [ebp-0x5f95010c],eax
  40f5e4:	lods   al,BYTE PTR ds:[esi]
  40f5e5:	and    DWORD PTR [eax+0x4d7d0b92],edi
  40f5eb:	loope  0x40f5c4
  40f5ed:	stos   BYTE PTR es:[edi],al
  40f5ee:	push   cs
  40f5ef:	push   0xffffffbd
  40f5f1:	xchg   ah,ah
  40f5f3:	aam    0x8
  40f5f5:	xor    cl,dh
  40f5f7:	xchg   ebx,eax
  40f5f8:	sbb    esp,edx
  40f5fa:	fldenv fs:[edi+0x4cbf83a6]
  40f601:	jle    0x40f665
  40f603:	repnz fwait
  40f605:	mov    eax,0xaf9bf761
  40f60a:	ins    BYTE PTR es:[edi],dx
  40f60b:	aam    0x38
  40f60d:	jb     0x40f5c0
  40f60f:	jae    0x40f5f2
  40f611:	push   eax
  40f612:	(bad)  
  40f613:	jg     0x40f5d6
  40f615:	out    dx,eax
  40f616:	lock and esp,DWORD PTR ss:[esi]
  40f61a:	sahf   
  40f61b:	sub    eax,0x8470b3bb
  40f620:	push   esp
  40f621:	add    eax,0x1ed48186
  40f626:	xchg   edx,eax
  40f627:	fsubr  st,st(5)
  40f629:	out    dx,al
  40f62a:	mov    dh,0x6
  40f62c:	and    ebx,ebx
  40f62e:	or     BYTE PTR [ebp+0x7a],0x5
  40f632:	mov    eax,ds:0x4eba035b
  40f637:	and    cl,BYTE PTR [esp+esi*1]
  40f63a:	jb     0x40f682
  40f63c:	aad    0x6c
  40f63e:	inc    DWORD PTR [esi+eiz*4-0x39]
  40f642:	add    al,0x4
  40f644:	(bad)  
  40f645:	adc    edi,esp
  40f647:	xor    al,0x24
  40f649:	(bad)  
  40f64a:	nop
  40f64b:	xlat   BYTE PTR ds:[ebx]
  40f64c:	and    bh,0xb5
  40f64f:	lods   eax,DWORD PTR ds:[esi]
  40f650:	fstp   TBYTE PTR [esi+0x6abd0a0c]
  40f656:	icebp  
  40f657:	shr    BYTE PTR [eax-0x3f],1
  40f65a:	retf   0x7cf4
  40f65d:	or     DWORD PTR [ebp-0x32d66faf],eax
  40f663:	es mov bh,0x1e
  40f666:	xchg   ecx,eax
  40f667:	adc    BYTE PTR [ebp-0x7f0feeea],dh
  40f66d:	sub    al,0xd8
  40f66f:	push   ecx
  40f670:	mov    al,0x72
  40f672:	gs (bad) 
  40f674:	dec    esi
  40f675:	sub    al,0x81
  40f677:	fsub   QWORD PTR [ecx+0x75e9cd37]
  40f67d:	pop    eax
  40f67e:	jne    0x40f660
  40f680:	into   
  40f681:	cmp    BYTE PTR [eax+0xd],dl
  40f684:	bound  edi,QWORD PTR [eax+0x3d]
  40f687:	sbb    bh,BYTE PTR [edi]
  40f689:	out    dx,eax
  40f68a:	jns    0x40f653
  40f68c:	test   BYTE PTR ds:0xef1325e6,al
  40f692:	pusha  
  40f693:	and    BYTE PTR ds:0x71531e2b,dh
  40f699:	outs   dx,BYTE PTR gs:[esi]
  40f69b:	xor    esp,0x1b5e7b96
  40f6a1:	adc    al,0xa1
  40f6a3:	push   0x27
  40f6a5:	cmp    DWORD PTR [eax-0x258803db],esi
  40f6ab:	repz loopne 0x40f6a7
  40f6ae:	add    cl,BYTE PTR ds:0xa9536644
  40f6b4:	(bad)  
  40f6b5:	mov    ah,0xa9
  40f6b7:	sub    edx,eax
  40f6b9:	push   ecx
  40f6ba:	shl    DWORD PTR [ebp-0x1d],1
  40f6bd:	mov    BYTE PTR [ebp+0x6db87252],ch
  40f6c3:	mov    edi,0x70443377
  40f6c8:	add    esp,ecx
  40f6ca:	or     esp,DWORD PTR [ecx]
  40f6cc:	int    0xe5
  40f6ce:	and    BYTE PTR [edi+0x63],ch
  40f6d1:	xchg   ebp,eax
  40f6d2:	std    
  40f6d3:	xchg   BYTE PTR ds:0x54fa4b66,ch
  40f6d9:	mov    ebx,DWORD PTR [edx+0x63fc75f3]
  40f6df:	or     eax,0x317753c4
  40f6e4:	fistp  QWORD PTR [edx+0x1deac522]
  40f6ea:	xchg   edi,eax
  40f6eb:	popf   
  40f6ec:	mov    al,0xe4
  40f6ee:	cld    
  40f6ef:	cwde   
  40f6f0:	out    0x1,eax
  40f6f2:	mov    eax,0x1e251f78
  40f6f7:	push   edx
  40f6f8:	mov    bh,ah
  40f6fa:	add    bh,BYTE PTR [esi+0x6c]
  40f6fd:	fimul  WORD PTR [esi-0x3f]
  40f700:	dec    edx
  40f701:	add    eax,0x5033f4d6
  40f706:	mov    ecx,0x75d246cf
  40f70b:	stc    
  40f70c:	(bad)  
  40f70d:	fst    DWORD PTR [edi]
  40f70f:	sar    DWORD PTR [edi+0x4426b958],0x12
  40f716:	jae    0x40f6bc
  40f718:	in     eax,0x2e
  40f71a:	test   al,0x52
  40f71c:	jae    0x40f744
  40f71e:	popa   
  40f71f:	dec    ebx
  40f720:	add    ecx,ecx
  40f722:	and    DWORD PTR [ebx+eiz*4-0x18],esi
  40f726:	xchg   BYTE PTR [esi+ebx*2+0x16],bh
  40f72a:	jecxz  0x40f71c
  40f72c:	scas   eax,DWORD PTR es:[edi]
  40f72d:	aas    
  40f72e:	lea    esp,[edi+0x29]
  40f731:	(bad)  
  40f732:	dec    ebx
  40f733:	in     al,dx
  40f734:	jbe    0x40f6cb
  40f736:	dec    eax
  40f737:	push   cs
  40f738:	adc    al,0x1a
  40f73a:	out    dx,eax
  40f73b:	stos   BYTE PTR es:[edi],al
  40f73c:	adc    al,0x80
  40f73e:	cs fwait
  40f740:	jnp    0x40f765
  40f742:	test   DWORD PTR [esi],edx
  40f744:	dec    ecx
  40f745:	push   cs
  40f746:	lahf   
  40f747:	xchg   al,bl
  40f749:	fs out dx,al
  40f74b:	je     0x40f71f
  40f74d:	cmp    al,0x43
  40f74f:	mov    ss:0xd9e5a1b7,al
  40f755:	ss jmp 0x40f7a1
  40f758:	cmp    eax,0x4701aee9
  40f75d:	sub    cl,BYTE PTR [edi+0x36]
  40f760:	or     DWORD PTR [ebp-0x1ebd7e1f],ecx
  40f766:	ret    
  40f767:	(bad)  
  40f769:	es cdq 
  40f76b:	sbb    eax,0x85867dc3
  40f770:	fdiv   DWORD PTR [ebx-0x12]
  40f773:	popf   
  40f774:	mov    esp,ebx
  40f776:	jb     0x40f764
  40f778:	sbb    BYTE PTR [edx],0x5a
  40f77b:	inc    ecx
  40f77c:	cmp    esi,DWORD PTR [ecx-0x650ef416]
  40f782:	das    
  40f783:	and    BYTE PTR [ebp+0x76],dh
  40f786:	out    0x7a,eax
  40f788:	jecxz  0x40f74c
  40f78a:	shl    DWORD PTR [ecx-0x3a22d9f8],0xe8
  40f791:	xchg   edi,eax
  40f792:	neg    edi
  40f794:	or     al,0x2b
  40f796:	mov    bl,0x80
  40f798:	retf   0x9b89
  40f79b:	add    ah,BYTE PTR [esi+ebp*8+0x5e2dabd8]
  40f7a2:	int    0x78
  40f7a4:	cwde   
  40f7a5:	cmc    
  40f7a6:	inc    esi
  40f7a7:	jo     0x40f76f
  40f7a9:	push   eax
  40f7aa:	cmp    dh,ah
  40f7ac:	enter  0xc89,0x32
  40f7b0:	lods   al,BYTE PTR ds:[esi]
  40f7b1:	cmp    eax,0xbe8855ff
  40f7b6:	stos   BYTE PTR es:[edi],al
  40f7b7:	or     al,0xc9
  40f7b9:	and    al,0x47
  40f7bb:	jo     0x40f7c3
  40f7bd:	cmp    eax,0x84d290a1
  40f7c2:	or     BYTE PTR [ecx+0x68619327],ah
  40f7c8:	push   ds
  40f7c9:	mov    eax,0x875cc396
  40f7ce:	jbe    0x40f833
  40f7d0:	sbb    DWORD PTR [edi+0x5f2d8721],0x7c
  40f7d7:	jnp    0x40f7e4
  40f7d9:	ss imul eax,ebx,0xffffff80
  40f7dd:	pop    ebx
  40f7de:	xor    BYTE PTR [ebp+0x5f],ch
  40f7e1:	out    0x32,al
  40f7e3:	aam    0x54
  40f7e5:	sbb    BYTE PTR [ecx],bl
  40f7e7:	xchg   esi,eax
  40f7e8:	sahf   
  40f7e9:	add    DWORD PTR [eax+0x10],ecx
  40f7ec:	or     cl,dl
  40f7ee:	call   0x2601:0xc8717792
  40f7f5:	push   ebx
  40f7f6:	mov    ds:0xba059d74,eax
  40f7fb:	xchg   ebp,eax
  40f7fc:	lea    edx,[ebp-0x9]
  40f7ff:	rcr    ch,cl
  40f801:	lahf   
  40f802:	mov    edi,DWORD PTR [edx+edx*2]
  40f805:	jge    0x40f831
  40f807:	loopne 0x40f7a0
  40f809:	lahf   
  40f80a:	mov    edx,0xa2ede0a1
  40f80f:	sub    BYTE PTR [ebp+0x0],cl
  40f812:	sbb    esi,eax
  40f814:	rcr    BYTE PTR [ebx+0x40],1
  40f817:	mov    ebp,0xe1708452
  40f81c:	pop    esi
  40f81d:	gs add al,0x8b
  40f820:	or     edx,edx
  40f822:	or     ah,ah
  40f824:	js     0x40f871
  40f826:	outs   dx,DWORD PTR ds:[esi]
  40f827:	inc    eax
  40f828:	mov    ah,dh
  40f82a:	outs   dx,BYTE PTR ds:[esi]
  40f82b:	ins    BYTE PTR es:[edi],dx
  40f82c:	fldenv [ebx+ebx*2-0x6f]
  40f830:	test   al,0xb7
  40f832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f833:	stos   DWORD PTR es:[edi],eax
  40f834:	mov    al,ds:0x6d72d4da
  40f839:	dec    eax
  40f83a:	mov    es,WORD PTR [eax-0x53f86c05]
  40f840:	int3   
  40f841:	sbb    edx,ebp
  40f843:	es iret 
  40f845:	lods   eax,DWORD PTR ds:[esi]
  40f846:	jbe    0x40f8c1
  40f848:	or     ch,ah
  40f84a:	test   DWORD PTR [ebp+0x796841c1],eax
  40f850:	pop    ebx
  40f851:	xchg   edi,eax
  40f852:	imul   ebp,esp,0x59
  40f855:	xor    al,0xc6
  40f857:	in     al,0x34
  40f859:	push   0x78
  40f85b:	mov    cl,0xf8
  40f85d:	sub    ah,BYTE PTR ds:0xa2bdde5c
  40f863:	js     0x40f899
  40f865:	adc    eax,0x7d9796c5
  40f86a:	ret    
  40f86b:	mov    ebx,edx
  40f86d:	fcom   QWORD PTR [esi+0x1c]
  40f870:	inc    edi
  40f871:	push   cs
  40f872:	fistp  WORD PTR [edi]
  40f874:	push   es
  40f875:	or     BYTE PTR ds:0xa5f2b0d8,0xa9
  40f87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f87d:	pop    eax
  40f87e:	sub    DWORD PTR [edi],ecx
  40f880:	jmp    0xce48005c
  40f885:	pusha  
  40f886:	lahf   
  40f887:	(bad)  
  40f889:	je     0x40f84f
  40f88b:	jbe    0x40f893
  40f88d:	or     BYTE PTR [edx-0x68d25ed9],dh
  40f893:	rcl    dh,0x7c
  40f896:	ja     0x40f87c
  40f898:	cwde   
  40f899:	sub    al,0x7
  40f89b:	cli    
  40f89c:	out    0x10,al
  40f89e:	xor    ecx,DWORD PTR [ebx-0x4f]
  40f8a1:	(bad)  
  40f8a2:	sub    edi,DWORD PTR [ebx+0x68acc947]
  40f8a8:	pop    es
  40f8a9:	or     eax,0x3a2546d4
  40f8ae:	addr16 aad 0xf0
  40f8b1:	lods   eax,DWORD PTR ds:[esi]
  40f8b2:	inc    ecx
  40f8b3:	dec    esp
  40f8b4:	pop    ebp
  40f8b5:	sbb    eax,0x523df700
  40f8ba:	daa    
  40f8bb:	or     edi,DWORD PTR fs:[ebp-0x19]
  40f8bf:	inc    eax
  40f8c0:	or     ebx,DWORD PTR [ebx]
  40f8c2:	cli    
  40f8c3:	mov    esp,0x64082c63
  40f8c8:	test   DWORD PTR [ecx],esp
  40f8ca:	adc    eax,0xf9f2467c
  40f8cf:	mov    al,ds:0xff913744
  40f8d4:	jb     0x40f8af
  40f8d6:	mov    al,0xf4
  40f8d8:	jl     0x40f86e
  40f8da:	mov    BYTE PTR [esi+0x70ee071b],ch
  40f8e0:	cmp    eax,0xb6bef997
  40f8e5:	cmp    ecx,DWORD PTR [ebx+0x7b9c403b]
  40f8eb:	jl     0x40f8c3
  40f8ed:	xchg   edx,eax
  40f8ee:	les    edi,FWORD PTR [edx-0x44]
  40f8f1:	push   esp
  40f8f2:	or     eax,0xdbc94a07
  40f8f7:	rol    DWORD PTR [eax],1
  40f8f9:	dec    DWORD PTR [edi+ebp*8-0x2e1bc549]
  40f900:	dec    ebp
  40f901:	out    dx,al
  40f902:	mov    dl,0x90
  40f904:	(bad)  
  40f905:	dec    esp
  40f906:	lock sbb ebp,DWORD PTR [ecx]
  40f909:	jne    0x40f8de
  40f90b:	ins    BYTE PTR es:[edi],dx
  40f90c:	inc    ebx
  40f90d:	jle    0x40f899
  40f90f:	retf   0x9e5c
  40f912:	sub    cl,dh
  40f914:	fist   WORD PTR [esi]
  40f916:	sti    
  40f917:	icebp  
  40f918:	mov    esp,0xb3e2cff2
  40f91d:	lods   eax,DWORD PTR ds:[esi]
  40f91e:	pop    ebp
  40f91f:	jl     0x40f99c
  40f921:	push   ebp
  40f922:	pop    es
  40f923:	xor    eax,0x8395a1a
  40f928:	dec    esp
  40f929:	and    dh,BYTE PTR [edi+0x40]
  40f92c:	xchg   edi,eax
  40f92d:	mov    eax,ds:0x69654d63
  40f932:	inc    esp
  40f933:	push   ds
  40f934:	outs   dx,DWORD PTR ds:[esi]
  40f935:	push   0xffffffa1
  40f937:	xor    DWORD PTR [ebp+0x682b1247],ebx
  40f93d:	div    BYTE PTR [esi-0x24]
  40f940:	jmp    0x331f5921
  40f945:	mov    esi,0x150b428f
  40f94a:	dec    edi
  40f94b:	(bad)  
  40f94c:	cwde   
  40f94d:	or     al,0xda
  40f94f:	rol    esp,cl
  40f951:	rol    edi,cl
  40f953:	sub    al,0xc5
  40f955:	push   0xb75a02ff
  40f95a:	fwait
  40f95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f95c:	sub    DWORD PTR [edi+0x1bd5d2dc],ebx
  40f962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f963:	inc    esp
  40f964:	outs   dx,BYTE PTR ds:[esi]
  40f965:	pop    eax
  40f966:	ds xchg ebx,esi
  40f969:	jecxz  0x40f9a0
  40f96b:	mov    DWORD PTR [esi-0x32],ebp
  40f96e:	and    DWORD PTR [ecx],ebx
  40f970:	adc    al,0xa6
  40f972:	fisttp DWORD PTR [edx+0x7d]
  40f975:	lods   al,BYTE PTR ds:[esi]
  40f976:	sbb    bh,BYTE PTR [eax+0x2a]
  40f979:	(bad)  
  40f97a:	cmp    al,BYTE PTR [ebp+0x59]
  40f97d:	retf   
  40f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f97f:	adc    eax,0x43dd4521
  40f984:	scas   al,BYTE PTR es:[edi]
  40f985:	push   esi
  40f986:	nop
  40f987:	mov    bl,al
  40f989:	bound  edi,QWORD PTR [esi+0x4e]
  40f98c:	xor    DWORD PTR [ecx],0xffffffd8
  40f98f:	jae    0x40fa04
  40f991:	jecxz  0x40f95f
  40f993:	enter  0x1a3e,0x7c
  40f997:	jmp    0xf2c970ca
  40f99c:	pop    ss
  40f99d:	jae    0x40f9fb
  40f99f:	loopne 0x40f936
  40f9a1:	cmp    DWORD PTR [eax-0x2f12e3a7],ebx
  40f9a7:	shr    BYTE PTR [edx+0x305dd6b8],1
  40f9ad:	aad    0x44
  40f9af:	jne    0x40fa26
  40f9b1:	loope  0x40f93c
  40f9b3:	add    esp,DWORD PTR [edi+eiz*1+0x33]
  40f9b7:	gs (bad) 
  40f9b9:	ins    DWORD PTR es:[edi],dx
  40f9ba:	jnp    0x40f9a4
  40f9bc:	addr16 mov edx,0xe8c99319
  40f9c2:	int3   
  40f9c3:	push   0xf01aa621
  40f9c8:	retf   
  40f9c9:	jo     0x40f99a
  40f9cb:	or     edx,DWORD PTR [ebp+0x7b9d6251]
  40f9d1:	jns    0x40fa12
  40f9d3:	enter  0x84c6,0x98
  40f9d7:	aad    0xed
  40f9d9:	push   ds
  40f9da:	lds    esi,FWORD PTR [edi]
  40f9dc:	jge    0x40fa12
  40f9de:	leave  
  40f9df:	out    dx,eax
  40f9e0:	loop   0x40f98d
  40f9e2:	jecxz  0x40fa36
  40f9e4:	stos   DWORD PTR es:[edi],eax
  40f9e5:	xor    dl,BYTE PTR ds:0x13fb4b53
  40f9eb:	and    al,0x22
  40f9ed:	imul   ebp,DWORD PTR [edx+0x1ac845f2],0x4e
  40f9f4:	in     al,dx
  40f9f5:	push   ds
  40f9f6:	add    eax,0xd5c94600
  40f9fb:	and    al,ch
  40f9fd:	fsub   DWORD PTR [ecx+0x57]
  40fa00:	stc    
  40fa01:	ja     0x40fa79
  40fa03:	dec    edx
  40fa04:	add    ebx,DWORD PTR [edx-0x536e85d4]
  40fa0a:	push   ecx
  40fa0b:	jno    0x40f9da
  40fa0d:	ret    
  40fa0e:	push   0xffffffa5
  40fa10:	add    al,0x38
  40fa12:	loope  0x40fa7d
  40fa14:	clc    
  40fa15:	pop    edi
  40fa16:	(bad)  
  40fa17:	mov    edx,0x3ca19ffa
  40fa1c:	pop    es
  40fa1d:	ret    0xffdb
  40fa20:	fisttp DWORD PTR [ebp-0x6212580b]
  40fa26:	popf   
  40fa27:	test   al,0x34
  40fa29:	mov    ch,0x3b
  40fa2b:	in     al,dx
  40fa2c:	xchg   edi,eax
  40fa2d:	xor    DWORD PTR [ecx+0x72],esi
  40fa30:	in     eax,dx
  40fa31:	imul   ebx,DWORD PTR [ebp-0x6fdce060],0xac6243b6
  40fa3b:	fnstsw WORD PTR [ebx*2+0x58390a96]
  40fa42:	push   edi
  40fa43:	pop    edi
  40fa44:	lods   eax,DWORD PTR ds:[esi]
  40fa45:	outs   dx,BYTE PTR ds:[esi]
  40fa46:	add    edx,DWORD PTR [ebx]
  40fa48:	jno    0x40fac4
  40fa4a:	xor    DWORD PTR [edi+edx*4+0x35],ebx
  40fa4e:	adc    eax,0xb487f051
  40fa53:	push   ds
  40fa54:	xor    DWORD PTR [esi],ecx
  40fa56:	mov    dh,0xcb
  40fa58:	xchg   ebp,eax
  40fa59:	jp     0x40faaa
  40fa5b:	dec    esp
  40fa5c:	loopne 0x40f9ff
  40fa5e:	jae    0x40fa42
  40fa60:	(bad)  
  40fa61:	or     edi,DWORD PTR [edx+0x294a79ba]
  40fa67:	dec    eax
  40fa68:	mov    ebx,0x6cb255bf
  40fa6d:	ficom  WORD PTR [edi]
  40fa6f:	or     ch,cl
  40fa71:	sbb    eax,0x5658817c
  40fa76:	stos   DWORD PTR es:[edi],eax
  40fa77:	mov    ah,0xaa
  40fa79:	pop    ebp
  40fa7a:	jne    0x40faaa
  40fa7c:	xchg   esi,eax
  40fa7d:	xchg   ebp,eax
  40fa7e:	xchg   BYTE PTR [esp+esi*1-0x39],al
  40fa82:	xchg   ebx,eax
  40fa83:	xchg   edi,esp
  40fa85:	stos   BYTE PTR es:[edi],al
  40fa86:	test   DWORD PTR [edi+0x29],ebx
  40fa89:	jmp    DWORD PTR [ecx]
  40fa8b:	push   ecx
  40fa8c:	stos   DWORD PTR es:[edi],eax
  40fa8d:	stos   BYTE PTR es:[edi],al
  40fa8e:	jmp    0x557:0x45d600c4
  40fa95:	jo     0x40fab4
  40fa97:	in     eax,dx
  40fa98:	sbb    BYTE PTR [edi-0x40],0x8e
  40fa9c:	mov    esp,0x142b02d2
  40faa1:	lock xchg esp,eax
  40faa3:	shl    DWORD PTR [ecx],cl
  40faa5:	mov    ah,0x90
  40faa7:	loop   0x40fa49
  40faa9:	cmp    BYTE PTR [esi-0x349b471b],ah
  40faaf:	test   eax,0x8f454ef6
  40fab4:	rol    DWORD PTR [edx+esi*2+0x77],0xe2
  40fab9:	cmc    
  40faba:	dec    esi
  40fabb:	mov    ds,WORD PTR [eax*2-0x2e02638a]
  40fac2:	lahf   
  40fac3:	pop    es
  40fac4:	inc    edx
  40fac5:	daa    
  40fac6:	ss add eax,0x5434e421
  40facc:	sub    eax,0x3ea857ac
  40fad1:	fistp  QWORD PTR [esi+ecx*2+0x45]
  40fad5:	and    cl,al
  40fad7:	mov    ebp,0xf1964796
  40fadc:	ret    0xdbce
  40fadf:	mov    esp,0x587d9d75
  40fae4:	aas    
  40fae5:	add    eax,0x4ce0fa56
  40faea:	fnstsw WORD PTR [ebp+0x1cb2f31a]
  40faf0:	push   edi
  40faf1:	jecxz  0x40fb6d
  40faf3:	mov    WORD PTR [ecx],ss
  40faf5:	int    0x3b
  40faf7:	xor    DWORD PTR [ebp+0x6c],ebx
  40fafa:	mov    dh,0x92
  40fafc:	fs in  al,0xdd
  40faff:	sub    eax,DWORD PTR [ebp-0x56]
  40fb02:	es nop
  40fb04:	pushf  
  40fb05:	mov    es,WORD PTR ds:0x9fcef0c
  40fb0b:	xor    eax,DWORD PTR [edx]
  40fb0d:	xor    al,0x1
  40fb0f:	or     BYTE PTR [ebp+esi*2-0x4c6ad84e],ah
  40fb16:	pop    esp
  40fb17:	ins    DWORD PTR es:[edi],dx
  40fb18:	add    DWORD PTR [esi-0x25d77708],0xffffff98
  40fb1f:	xor    DWORD PTR [ecx-0xb],ebx
  40fb22:	xchg   ebp,eax
  40fb23:	mov    ebp,0x8442cb7f
  40fb28:	es mov dl,0x65
  40fb2b:	iret   
  40fb2c:	fimul  DWORD PTR [ecx]
  40fb2e:	scas   al,BYTE PTR es:[edi]
  40fb2f:	clc    
  40fb30:	cwde   
  40fb31:	dec    ecx
  40fb32:	and    DWORD PTR [esp+ebp*2-0x6d9ed473],edi
  40fb39:	dec    eax
  40fb3a:	pop    ecx
  40fb3b:	mov    ds:0x46ddfffb,al
  40fb40:	rcr    DWORD PTR [esi+0x760a19e1],0x20
  40fb47:	retf   0x8b32
  40fb4a:	xlat   BYTE PTR ds:[ebx]
  40fb4b:	push   ss
  40fb4c:	mov    edi,0xf6718696
  40fb51:	stc    
  40fb52:	test   eax,0x3715602e
  40fb57:	cmp    eax,0x972f1c9
  40fb5c:	lods   eax,DWORD PTR ds:[esi]
  40fb5d:	ins    BYTE PTR es:[edi],dx
  40fb5e:	jge    0x40fbb6
  40fb60:	or     DWORD PTR [esi-0x6f5f8f8f],eax
  40fb66:	inc    esi
  40fb67:	(bad)  [esi]
  40fb69:	ja     0x40fbc1
  40fb6b:	mov    eax,0x8b710663
  40fb70:	jg     0x40fbe2
  40fb72:	cmc    
  40fb73:	aas    
  40fb74:	jnp    0x40fbbf
  40fb76:	fndisi(8087 only) 
  40fb78:	push   eax
  40fb79:	(bad)  
  40fb7a:	gs pusha 
  40fb7c:	pop    edx
  40fb7d:	sbb    dl,bl
  40fb7f:	sub    DWORD PTR [esi],eax
  40fb81:	cld    
  40fb82:	jge    0x40fb5a
  40fb84:	inc    edx
  40fb85:	xchg   esp,eax
  40fb86:	push   edx
  40fb87:	and    ecx,edi
  40fb89:	fild   DWORD PTR [edi]
  40fb8b:	sti    
  40fb8c:	xchg   DWORD PTR [edx+ebp*8+0x78310cc6],ebx
  40fb93:	cld    
  40fb94:	in     eax,0xfe
  40fb96:	fidivr WORD PTR [edx-0x396b14e4]
  40fb9c:	stos   BYTE PTR es:[edi],al
  40fb9d:	and    eax,0xe0737f21
  40fba2:	fldenv [ecx-0xa]
  40fba5:	and    al,0x2a
  40fba7:	out    dx,al
  40fba8:	xchg   ebp,eax
  40fba9:	sbb    al,0xe3
  40fbab:	es jns 0x40fb9b
  40fbae:	xor    eax,ebx
  40fbb0:	and    esi,DWORD PTR [ebp+0x58d21746]
  40fbb6:	mov    ch,0x77
  40fbb8:	inc    esp
  40fbb9:	mov    bl,0x81
  40fbbb:	inc    edx
  40fbbc:	stos   DWORD PTR es:[edi],eax
  40fbbd:	sbb    al,0x18
  40fbbf:	in     eax,dx
  40fbc0:	jle    0x40fb4d
  40fbc2:	adc    ch,BYTE PTR [ebx]
  40fbc4:	jmp    0x40fb58
  40fbc6:	cdq    
  40fbc7:	push   eax
  40fbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc9:	mov    dh,0xbf
  40fbcb:	sub    al,0xfa
  40fbcd:	sub    BYTE PTR [eax-0x2a39da10],cl
  40fbd3:	test   eax,0xe765bfc
  40fbd8:	mov    ecx,0x3151423
  40fbdd:	jmp    0x738b:0xe4ecbab7
  40fbe4:	clc    
  40fbe5:	mov    dh,BYTE PTR [edx+0x725a4b4d]
  40fbeb:	xchg   ebp,eax
  40fbec:	and    al,0xd2
  40fbee:	frstor [esi+0x11]
  40fbf1:	fistp  QWORD PTR [eax-0x12b333b0]
  40fbf7:	and    BYTE PTR [ebp+0x4c32c6b],cl
  40fbfd:	lods   eax,DWORD PTR ds:[esi]
  40fbfe:	dec    ebx
  40fbff:	pop    ds
  40fc00:	adc    eax,DWORD PTR [eax-0x698c7d0e]
  40fc06:	inc    esp
  40fc07:	or     DWORD PTR [eax],esp
  40fc09:	push   edx
  40fc0a:	pop    ebp
  40fc0b:	daa    
  40fc0c:	xor    BYTE PTR [esi+0x7a1ade02],0xb0
  40fc13:	dec    ecx
  40fc14:	mov    bh,0xcd
  40fc16:	mov    esi,0x8318388c
  40fc1b:	retf   
  40fc1c:	fwait
  40fc1d:	sub    BYTE PTR [ecx+0x17],ah
  40fc20:	pop    bp
  40fc22:	pop    ebx
  40fc23:	popf   
  40fc24:	mov    esp,0xaafafdfb
  40fc29:	icebp  
  40fc2a:	cmp    bh,dl
  40fc2c:	inc    esp
  40fc2d:	cmp    DWORD PTR [ebx+edx*1],ecx
  40fc30:	inc    edi
  40fc31:	jb     0x40fbd1
  40fc33:	(bad)  
  40fc34:	mov    edx,0x51a87588
  40fc39:	out    0xbe,al
  40fc3b:	xchg   esi,eax
  40fc3c:	push   cs
  40fc3d:	mov    ah,0xc4
  40fc3f:	push   edi
  40fc40:	adc    eax,0xded46652
  40fc45:	imul   ebp,ebx,0xfffffffc
  40fc48:	mov    edx,0xed0b27ba
  40fc4d:	loop   0x40fcc9
  40fc4f:	enter  0x4851,0x52
  40fc53:	retf   
  40fc54:	or     eax,0x7cb60918
  40fc59:	call   0xfc56:0x640a9241
  40fc60:	sar    BYTE PTR ds:0x587f34e1,cl
  40fc66:	fistp  WORD PTR [ebp+0x26acb6f2]
  40fc6c:	(bad)  
  40fc6d:	sbb    bh,al
  40fc6f:	lods   al,BYTE PTR ds:[esi]
  40fc70:	inc    esi
  40fc71:	mov    ebp,fs
  40fc73:	push   ebp
  40fc74:	adc    bl,BYTE PTR [ebp-0x477cf2c3]
  40fc7a:	jo     0x40fc67
  40fc7c:	mov    dh,0xe8
  40fc7e:	ret    0xb94c
  40fc81:	add    eax,0xde035b8a
  40fc86:	faddp  st(0),st
  40fc88:	push   cs
  40fc89:	jecxz  0x40fc9c
  40fc8b:	ins    DWORD PTR es:[edi],dx
  40fc8c:	(bad)  
  40fc8d:	(bad)  
  40fc8e:	and    eax,0x48e522aa
  40fc93:	jns    0x40fc36
  40fc95:	and    al,0x1
  40fc97:	adc    edx,DWORD PTR [edi-0x51]
  40fc9a:	xchg   ebp,eax
  40fc9b:	jecxz  0x40fcd5
  40fc9d:	ror    BYTE PTR [ebx],cl
  40fc9f:	(bad)  
  40fca1:	xor    bh,BYTE PTR [ebx+0x29]
  40fca4:	cdq    
  40fca5:	add    esp,DWORD PTR [ebp+eax*2-0x4b]
  40fca9:	or     BYTE PTR [eax],al
  40fcab:	push   ds
  40fcac:	fucom  st(1)
  40fcae:	cmp    al,0x52
  40fcb0:	cmp    ch,dl
  40fcb2:	xor    cl,ah
  40fcb4:	add    eax,0x3df8d924
  40fcb9:	inc    ebp
  40fcba:	xor    edi,DWORD PTR [ebx+0x9]
  40fcbd:	xor    WORD PTR ds:0x3d645245,ax
  40fcc4:	out    dx,eax
  40fcc5:	cmp    al,0xcc
  40fcc7:	js     0x40fcea
  40fcc9:	fwait
  40fcca:	rcr    edi,cl
  40fccc:	call   0xeaf0ddcb
  40fcd1:	test   ecx,0x49569095
  40fcd7:	dec    esp
  40fcd8:	aam    0xe7
  40fcda:	retf   
  40fcdb:	test   esp,esi
  40fcdd:	(bad)  
  40fcde:	into   
  40fcdf:	pop    edx
  40fce0:	adc    al,0x4e
  40fce2:	out    dx,eax
  40fce3:	mov    al,ds:0x199b1f3b
  40fce8:	sub    al,0xd
  40fcea:	aam    0xb3
  40fcec:	in     eax,0x83
  40fcee:	cmp    bl,bh
  40fcf0:	mov    eax,0xeccfe2df
  40fcf5:	mov    esp,0x35cbc611
  40fcfa:	and    al,0x93
  40fcfc:	outs   dx,BYTE PTR ds:[esi]
  40fcfd:	and    cl,BYTE PTR [edi]
  40fcff:	cmp    bl,ch
  40fd01:	repz add BYTE PTR [edx],bl
  40fd04:	in     eax,dx
  40fd05:	in     al,0x44
  40fd07:	(bad)  
  40fd08:	call   0xd9b6322e
  40fd0d:	add    al,0xc2
  40fd0f:	adc    eax,0x373c1083
  40fd14:	fcom   QWORD PTR [esi+0x48]
  40fd17:	mov    BYTE PTR [ebx-0x70208e8],0xda
  40fd1e:	sub    BYTE PTR ds:0xbd56a74e,bl
  40fd24:	and    eax,0x91e6905a
  40fd29:	mov    edx,esp
  40fd2b:	jg     0x40fce0
  40fd2d:	inc    edx
  40fd2e:	mov    al,0xad
  40fd30:	(bad)  
  40fd31:	iret   
  40fd32:	add    al,0x66
  40fd34:	loopne 0x40fdb1
  40fd36:	hlt    
  40fd37:	repz add al,0xfc
  40fd3a:	pop    ebx
  40fd3b:	mov    dl,0x7c
  40fd3d:	mov    al,0x55
  40fd3f:	in     al,dx
  40fd40:	push   es
  40fd41:	jmp    0x6334:0x291b5676
  40fd48:	push   ebx
  40fd49:	fbstp  TBYTE PTR [edx-0x4f14da3]
  40fd4f:	push   edx
  40fd50:	mov    esp,0xfb45a16
  40fd55:	dec    edi
  40fd56:	push   0x3a
  40fd58:	xchg   BYTE PTR [ecx-0x40],dl
  40fd5b:	xchg   DWORD PTR [ebx],ebp
  40fd5d:	inc    edi
  40fd5e:	ja     0x40fdb2
  40fd60:	lea    edi,[ebp-0x1b]
  40fd63:	inc    ebp
  40fd64:	pop    edi
  40fd65:	inc    esi
  40fd66:	out    0xbf,eax
  40fd68:	loop   0x40fd4e
  40fd6a:	fst    QWORD PTR [edi+0x6f]
  40fd6d:	jo     0x40fcfe
  40fd6f:	xchg   esi,eax
  40fd70:	mov    WORD PTR [edi],?
  40fd72:	fisub  DWORD PTR [ebp-0x499417a7]
  40fd78:	jb     0x40fdb1
  40fd7a:	stos   DWORD PTR es:[edi],eax
  40fd7b:	(bad)  [edi+0x1026e245]
  40fd81:	(bad)  
  40fd82:	mov    ebp,0x91f738cc
  40fd87:	sbb    BYTE PTR [edx+edx*8],ah
  40fd8a:	push   eax
  40fd8b:	test   BYTE PTR [eax+0x586f34d7],bl
  40fd91:	and    DWORD PTR [esi-0x30dcdfad],ebx
  40fd97:	outs   dx,DWORD PTR ds:[esi]
  40fd98:	aam    0x33
  40fd9a:	and    al,0x5d
  40fd9c:	adc    ebp,DWORD PTR [edi]
  40fd9e:	add    eax,0x634566ea
  40fda3:	ja     0x40fd83
  40fda5:	retf   
  40fda6:	jmp    0x40fd93
  40fda8:	sahf   
  40fda9:	or     ebx,ebp
  40fdab:	sub    BYTE PTR [ecx-0x69],dh
  40fdae:	sub    BYTE PTR [ecx+0x10e4b65],0x73
  40fdb5:	mov    bh,0xf9
  40fdb7:	rcl    BYTE PTR [edx-0x2c],1
  40fdba:	icebp  
  40fdbb:	das    
  40fdbc:	inc    esp
  40fdbd:	lds    esi,FWORD PTR ds:0xedad551c
  40fdc3:	std    
  40fdc4:	rol    ecx,1
  40fdc6:	or     al,0x2d
  40fdc8:	aaa    
  40fdc9:	mov    esp,0x85aa3f57
  40fdce:	cmp    eax,0x31a2078e
  40fdd3:	inc    eax
  40fdd4:	mov    edx,0xfa6f0f58
  40fdd9:	inc    esp
  40fdda:	(bad)  
  40fddb:	mov    bl,0x74
  40fddd:	dec    BYTE PTR ds:0xfa9fec03
  40fde3:	xor    eax,0x8c95e0b0
  40fde8:	mov    DWORD PTR [esi+0x52dbeefc],esi
  40fdee:	xor    esi,DWORD PTR ds:0xc427772
  40fdf4:	cmp    eax,0x9cf7903f
  40fdf9:	jmp    0x7d06d7eb
  40fdfe:	push   cs
  40fdff:	test   al,0xd5
  40fe01:	mov    DWORD PTR [eax],0x80c10654
  40fe07:	retf   
  40fe08:	lods   eax,DWORD PTR ds:[esi]
  40fe09:	jne    0x40fe6b
  40fe0b:	adc    ah,BYTE PTR [ebx+0x5d99c2e8]
  40fe11:	inc    ebp
  40fe12:	into   
  40fe13:	adc    ebp,ebp
  40fe15:	fnsave [edi]
  40fe17:	push   ds
  40fe18:	xchg   edi,eax
  40fe19:	xchg   BYTE PTR [ebx],bl
  40fe1b:	push   ebx
  40fe1c:	pushf  
  40fe1d:	pop    ss
  40fe1e:	(bad)  
  40fe20:	and    DWORD PTR [edi+ecx*8+0x3a2513bb],0x7c1b9a14
  40fe2b:	(bad)  
  40fe2c:	and    al,0xda
  40fe2e:	dec    eax
  40fe2f:	loope  0x40fea8
  40fe31:	jl     0x40fe69
  40fe33:	sub    al,0x56
  40fe35:	outs   dx,BYTE PTR ds:[esi]
  40fe36:	not    DWORD PTR [edi+0x5ad533e6]
  40fe3c:	dec    ecx
  40fe3d:	stc    
  40fe3e:	aad    0xbf
  40fe40:	mov    ah,0x7b
  40fe42:	pop    eax
  40fe43:	iret   
  40fe44:	mov    esi,DWORD PTR ds:0x597248df
  40fe4a:	mov    esp,0xbc076cbf
  40fe4f:	iret   
  40fe50:	ss in  al,0x81
  40fe53:	xor    ebx,ecx
  40fe55:	int    0x7
  40fe57:	mov    cl,0x26
  40fe59:	es push 0xffffff89
  40fe5c:	out    0x23,al
  40fe5e:	pusha  
  40fe5f:	jnp    0x40fde6
  40fe61:	lods   eax,DWORD PTR ds:[esi]
  40fe62:	pop    edi
  40fe63:	add    eax,0x7f01b677
  40fe68:	cli    
  40fe69:	lods   eax,DWORD PTR ds:[esi]
  40fe6a:	push   0xffffff99
  40fe6c:	(bad)  
  40fe6d:	scas   al,BYTE PTR es:[edi]
  40fe6e:	add    bh,BYTE PTR [edi-0x41]
  40fe71:	xor    DWORD PTR [ecx-0x4d7ff43b],edi
  40fe77:	sub    DWORD PTR [ebp+0x21fdd88c],esi
  40fe7d:	mov    esi,0xc1ec6b00
  40fe82:	xor    DWORD PTR ds:0x301f8616,ebx
  40fe88:	enter  0xd98c,0xa1
  40fe8c:	xchg   BYTE PTR [edi+0x6c99fffa],bh
  40fe92:	mov    cs,WORD PTR [ecx-0x52]
  40fe95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe96:	stos   BYTE PTR es:[edi],al
  40fe97:	fisub  DWORD PTR [eax+edi*1]
  40fe9a:	jmp    0x67de2284
  40fe9f:	in     al,0x2d
  40fea1:	inc    esi
  40fea2:	xchg   esi,eax
  40fea3:	mov    DWORD PTR [esp+edi*1-0x28],ecx
  40fea7:	bound  ebx,QWORD PTR fs:[edx-0x57]
  40feab:	add    eax,0xb495c68b
  40feb0:	dec    edx
  40feb1:	sbb    cl,BYTE PTR [ebp+0x10028509]
  40feb7:	jns    0x40ff25
  40feb9:	sti    
  40feba:	mov    bh,0x3b
  40febc:	xchg   ebx,eax
  40febd:	push   0x4b9ed124
  40fec2:	fimul  DWORD PTR [edx+0xff7d337]
  40fec8:	push   cs
  40fec9:	xor    cl,BYTE PTR [si+0x79]
  40fecd:	fisttp DWORD PTR [ecx]
  40fecf:	or     eax,0x6e856250
  40fed4:	out    0x60,eax
  40fed6:	inc    edx
  40fed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fed8:	pop    esp
  40fed9:	mov    es,ebp
  40fedb:	sar    BYTE PTR [eax-0x4f],cl
  40fede:	js     0x40fe6e
  40fee0:	fwait
  40fee1:	push   ebx
  40fee2:	cmp    bh,bl
  40fee4:	mov    cl,0x6
  40fee6:	and    dh,BYTE PTR [edi-0x71b3b40]
  40feec:	push   eax
  40feed:	xchg   esi,eax
  40feee:	fisubr DWORD PTR [edi+esi*2-0x78]
  40fef2:	xlat   BYTE PTR ds:[ebx]
  40fef3:	js     0x40fed8
  40fef5:	xchg   ebp,eax
  40fef6:	mov    ebp,ecx
  40fef8:	mov    BYTE PTR [edx-0x78],bl
  40fefb:	push   es
  40fefc:	fldlg2 
  40fefe:	pop    es
  40feff:	cdq    
  40ff00:	inc    edi
  40ff01:	into   
  40ff02:	push   edi
  40ff03:	mov    esi,0x5810b8aa
  40ff08:	sahf   
  40ff09:	cmp    al,0x1a
  40ff0b:	jmp    0x40ff2e
  40ff0d:	imul   esi,DWORD PTR [ecx+0x145e3bff],0xb9591629
  40ff17:	cmp    eax,0x193fe200
  40ff1c:	adc    al,0x8b
  40ff1e:	pop    ebx
  40ff1f:	iret   
  40ff20:	mov    DWORD PTR [ecx],eax
  40ff22:	test   dh,dh
  40ff24:	sbb    eax,DWORD PTR [ebx+esi*2-0x5d4ed9d9]
  40ff2b:	invd   
  40ff2d:	add    al,0xb1
  40ff2f:	cmp    ch,BYTE PTR [ecx+0xa345c6f]
  40ff35:	mov    ch,0x2
  40ff37:	cmp    edi,DWORD PTR [ebp+0x48cfc84c]
  40ff3d:	jb     0x40fefc
  40ff3f:	sbb    eax,0xf2d17e74
  40ff44:	retf   
  40ff45:	mov    esi,esp
  40ff47:	popf   
  40ff48:	jmp    0x1860:0x4d66c0f5
  40ff4f:	or     eax,0x33a13ced
  40ff54:	out    dx,eax
  40ff55:	mov    dh,ch
  40ff57:	mov    ah,0xf6
  40ff59:	in     eax,dx
  40ff5a:	mov    ebx,0x34e0e519
  40ff5f:	mov    bh,0xff
  40ff61:	mov    esi,0x2ffe5f03
  40ff66:	xchg   ecx,eax
  40ff67:	pop    ss
  40ff68:	sub    al,dl
  40ff6a:	ss adc al,ch
  40ff6d:	js     0x40ff34
  40ff6f:	inc    ecx
  40ff70:	jg     0x40ffdc
  40ff72:	in     eax,0x3
  40ff74:	mov    ds:0xdf612146,al
  40ff79:	mov    dh,0x57
  40ff7b:	pop    es
  40ff7c:	mov    edi,0x9e84277a
  40ff81:	dec    esp
  40ff82:	jne    0x40ff80
  40ff84:	and    al,0x44
  40ff86:	nop    DWORD PTR [ecx-0x24]
  40ff8a:	mov    ds:0xa695c1cf,al
  40ff8f:	mov    ch,0xec
  40ff91:	loope  0x40ff6d
  40ff93:	pop    eax
  40ff94:	ins    DWORD PTR es:[edi],dx
  40ff95:	popf   
  40ff96:	and    DWORD PTR [eax+0x7ebacbaf],0x9143e335
  40ffa0:	xor    ebp,esp
  40ffa2:	cmp    ah,BYTE PTR [ebp-0x3f]
  40ffa5:	dec    esp
  40ffa6:	int3   
  40ffa7:	(bad)  
  40ffa8:	lods   al,BYTE PTR ds:[esi]
  40ffa9:	push   ss
  40ffaa:	test   al,0xa2
  40ffac:	cs adc eax,0x55ecd63f
  40ffb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffb3:	pop    edx
  40ffb4:	(bad)  
  40ffb5:	fisub  DWORD PTR [ecx]
  40ffb7:	xchg   BYTE PTR [ebx],bl
  40ffb9:	mov    DWORD PTR [edx+0xf],edi
  40ffbc:	aam    0x4e
  40ffbe:	sbb    dh,bl
  40ffc0:	pop    ds
  40ffc1:	repz pop ss
  40ffc3:	retf   
  40ffc4:	stc    
  40ffc5:	pushf  
  40ffc6:	outs   dx,DWORD PTR ds:[esi]
  40ffc7:	inc    ebp
  40ffc8:	lods   al,BYTE PTR ds:[esi]
  40ffc9:	repz repnz clc 
  40ffcc:	sub    esp,DWORD PTR [eax+0x16fa25d]
  40ffd2:	jnp    0x410050
  40ffd4:	cs popf 
  40ffd6:	mov    ecx,0x8b173f08
  40ffdb:	std    
  40ffdc:	cmp    BYTE PTR [ebx-0x5e],cl
  40ffdf:	adc    al,0xe9
  40ffe1:	into   
  40ffe2:	lea    edx,[ebx+0x3ce5f996]
  40ffe8:	pushf  
  40ffe9:	cld    
  40ffea:	cmp    DWORD PTR [edx-0x7f],0xffffffc8
  40ffee:	pop    ecx
  40ffef:	push   0x56492fd1
  40fff4:	ins    DWORD PTR es:[edi],dx
  40fff5:	xchg   esp,eax
  40fff6:	imul   eax,DWORD PTR [esi],0x46
  40fff9:	adc    eax,0x488ce8d
  40fffe:	es xchg edi,eax
  410000:	jge    0x410075
  410002:	jo     0x40ffac
  410004:	add    eax,0xbf84d840
  410009:	dec    ebx
  41000a:	add    eax,0x28c31332
  41000f:	ret    
  410010:	inc    ecx
  410011:	pop    ss
  410012:	sub    ebp,DWORD PTR [edi]
  410014:	add    al,0xf6
  410016:	stos   DWORD PTR es:[edi],eax
  410017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410018:	call   0x431e1854
  41001d:	push   esi
  41001e:	fisubr WORD PTR [esi-0x27]
  410021:	cmc    
  410022:	scas   eax,DWORD PTR es:[edi]
  410023:	push   edi
  410024:	lock dec ebp
  410026:	in     eax,dx
  410027:	sub    al,0xb8
  410029:	inc    esp
  41002a:	xor    ebp,DWORD PTR [edi+0x50]
  41002d:	cmp    dh,ah
  41002f:	dec    esi
  410030:	cmp    bl,BYTE PTR [esp+edi*1]
  410033:	das    
  410034:	js     0x40fff2
  410036:	je     0x40ffc5
  410038:	push   ss
  410039:	scas   al,BYTE PTR es:[edi]
  41003a:	je     0x41005e
  41003c:	loope  0x4100a3
  41003e:	(bad)  
  41003f:	dec    ecx
  410040:	adc    dl,bh
  410042:	lods   eax,DWORD PTR ds:[esi]
  410043:	xor    BYTE PTR [esi+0x20463cf7],bh
  410049:	cld    
  41004a:	push   ebx
  41004b:	pushf  
  41004c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41004d:	call   0x1ce414e7
  410052:	inc    esp
  410053:	mov    esi,0xec31617e
  410058:	pop    ebx
  410059:	ror    BYTE PTR [edx],cl
  41005b:	sbb    eax,0x154371c0
  410060:	lods   eax,DWORD PTR ds:[esi]
  410061:	sbb    DWORD PTR [ecx],esi
  410063:	jns    0x40fff7
  410065:	mov    al,0x54
  410067:	sub    al,0x57
  410069:	aaa    
  41006a:	push   0x5031df41
  41006f:	mov    esp,0xd5f7c29c
  410074:	and    al,0xa5
  410076:	mov    ?,WORD PTR [ebp-0x12df7899]
  41007c:	add    ebp,DWORD PTR [edx+0x1b]
  41007f:	mov    al,0xac
  410081:	mov    edi,0x1b198e9d
  410086:	or     eax,0xa4101c0e
  41008b:	and    edi,DWORD PTR [edi+0x7b9bd0be]
  410091:	push   es
  410092:	and    eax,0x2f2c427d
  410097:	dec    ebp
  410098:	dec    edx
  410099:	jmp    0x41006e
  41009b:	rcl    BYTE PTR [ebx+0x31df5510],1
  4100a1:	and    edx,DWORD PTR [edx-0x2c098951]
  4100a7:	xchg   BYTE PTR [ebx],ah
  4100a9:	in     eax,0x67
  4100ab:	add    BYTE PTR [esi],dl
  4100ad:	and    dh,BYTE PTR [ecx*2-0x1f73d4cb]
  4100b4:	neg    BYTE PTR [ebp+0x792683db]
  4100ba:	and    eax,0xfd827048
  4100bf:	push   eax
  4100c0:	jbe    0x4100eb
  4100c2:	pop    esi
  4100c3:	xor    al,0x61
  4100c5:	popa   
  4100c6:	adc    al,0xca
  4100c8:	lock jecxz 0x410069
  4100cb:	out    dx,al
  4100cc:	jge    0x4100b8
  4100ce:	xchg   esp,eax
  4100cf:	dec    ebp
  4100d0:	xchg   edx,eax
  4100d1:	aaa    
  4100d2:	mov    BYTE PTR ds:0x76f8b783,ch
  4100d8:	or     esi,DWORD PTR [ebp-0x48b89da2]
  4100de:	cld    
  4100df:	aam    0xd5
  4100e1:	clc    
  4100e2:	nop
  4100e3:	dec    edi
  4100e4:	(bad)  
  4100e6:	or     edi,DWORD PTR [ecx]
  4100e8:	adc    esi,esi
  4100ea:	ds adc al,0xaf
  4100ed:	ins    DWORD PTR es:[edi],dx
  4100ee:	add    eax,0x92e03a99
  4100f3:	inc    edx
  4100f4:	jns    0x41008a
  4100f6:	jmp    0xed22e7ca
  4100fb:	adc    DWORD PTR [eax],0xfe057ac2
  410101:	push   esp
  410102:	popa   
  410103:	mov    DWORD PTR [edx+0x22],esp
  410106:	push   ebp
  410107:	inc    edi
  410108:	test   eax,0xe02d6337
  41010d:	clc    
  41010e:	fcomip st,st(0)
  410110:	call   0x40f4:0x7e1ec38e
  410117:	mov    ch,0x7b
  410119:	dec    esi
  41011a:	pop    ebx
  41011b:	sub    eax,0x93309cb9
  410120:	iret   
  410121:	fmul   st,st(3)
  410123:	inc    esp
  410124:	outs   dx,BYTE PTR ds:[esi]
  410125:	mov    al,bh
  410127:	inc    ebp
  410128:	adc    ebx,ecx
  41012a:	in     eax,dx
  41012b:	test   BYTE PTR ds:0xe66a5e9c,0xfe
  410132:	stos   BYTE PTR es:[edi],al
  410133:	cli    
  410134:	sar    DWORD PTR [ebp+0x43],cl
  410137:	inc    esi
  410138:	dec    ebp
  410139:	test   eax,0xd721ec46
  41013e:	adc    al,0xe6
  410140:	(bad)  
  410141:	jmp    0x41016f
  410143:	(bad)  
  410144:	imul   esp,DWORD PTR [ebx+eiz*4+0xa],0x49
  410149:	dec    esp
  41014a:	ins    DWORD PTR es:[edi],dx
  41014b:	(bad)  [eax+0x4b]
  41014e:	nop
  41014f:	pop    edi
  410150:	push   cs
  410151:	les    ebx,FWORD PTR [ebp+0x55]
  410154:	and    BYTE PTR [edx],bh
  410156:	repz inc ebp
  410158:	es and eax,0x9751c53b
  41015e:	cwde   
  41015f:	data16 sti 
  410161:	ror    BYTE PTR [eax],0x7a
  410164:	(bad)  
  410165:	(bad)  
  410166:	sti    
  410167:	sbb    ebx,esi
  410169:	js     0x410151
  41016b:	adc    eax,0x1291a131
  410170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410171:	inc    eax
  410172:	jecxz  0x410173
  410174:	sar    BYTE PTR [eax+ebx*2-0xb],1
  410178:	mov    ecx,0x86650cb7
  41017d:	push   cs
  41017e:	(bad)  
  410180:	add    DWORD PTR [ebp-0x73a1c0a],0x3a17c578
  41018a:	shr    eax,1
  41018c:	out    dx,eax
  41018d:	ins    BYTE PTR es:[edi],dx
  41018e:	fstp   DWORD PTR [ebp-0x28173213]
  410194:	test   BYTE PTR [esi-0x329c1ad],al
  41019a:	sub    esp,ecx
  41019c:	push   esp
  41019d:	jmp    0x6f127a25
  4101a2:	cmp    BYTE PTR [ecx+0x70eac6a2],bl
  4101a8:	jmp    0x410175
  4101aa:	aas    
  4101ab:	call   0x59bbcf68
  4101b0:	call   0x3828:0xfe497e00
  4101b7:	xchg   ecx,eax
  4101b8:	imul   esi,ebp,0xffffffee
  4101bb:	fild   WORD PTR [esi]
  4101bd:	out    0x12,al
  4101bf:	mov    al,ds:0x8236432c
  4101c4:	(bad)  
  4101c5:	cmp    esp,esp
  4101c7:	loop   0x410158
  4101c9:	lock xchg DWORD PTR ds:0x4b985916,edi
  4101d0:	jmp    FWORD PTR [ecx]
  4101d2:	and    BYTE PTR [ecx-0x7f859d5d],cl
  4101d8:	stos   DWORD PTR es:[edi],eax
  4101d9:	ins    BYTE PTR es:[edi],dx
  4101da:	adc    eax,0x83b81b22
  4101df:	mov    esi,0x5c9eaa79
  4101e4:	gs je  0x4101f3
  4101e7:	rcl    BYTE PTR [esi+esi*8+0x58],cl
  4101eb:	cwde   
  4101ec:	cmove  edx,esp
  4101ef:	jge    0x4101e5
  4101f1:	jge    0x41026b
  4101f3:	daa    
  4101f4:	push   0xffffffb2
  4101f6:	pop    edx
  4101f7:	xor    ecx,esp
  4101f9:	in     al,0xcb
  4101fb:	ror    BYTE PTR [edi],1
  4101fd:	add    edi,esp
  4101ff:	jl     0x4101cd
  410201:	std    
  410202:	mov    esp,0x42c6a1b7
  410207:	mov    BYTE PTR [eax],0x7a
  41020a:	test   eax,0xa43efb50
  41020f:	retf   0x27d9
  410212:	mov    esi,0xffbc2519
  410217:	cmc    
  410218:	mov    cl,0x5a
  41021a:	jb     0x4101ff
  41021c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41021d:	push   0xffffffb2
  41021f:	xchg   BYTE PTR [esi],cl
  410221:	push   ebx
  410222:	jp     0x41025b
  410224:	cmp    eax,0x135827dc
  410229:	adc    eax,0x7937d2da
  41022e:	out    0x82,eax
  410230:	inc    edx
  410231:	and    BYTE PTR [ebx+eax*1-0x451243f8],dl
  410238:	xor    edx,DWORD PTR [esi+0x58290177]
  41023e:	mov    edi,0xe2a13b7b
  410243:	dec    eax
  410244:	retf   
  410245:	mov    dh,0x52
  410247:	and    DWORD PTR [eax],0xffffffdf
  41024a:	xor    cl,al
  41024c:	mov    DWORD PTR [esi+eax*1],ebp
  41024f:	data16 repz (bad) 
  410252:	sahf   
  410253:	lahf   
  410254:	or     DWORD PTR [esi-0x6bf4893a],ebx
  41025a:	rol    DWORD PTR [ebx+edx*4-0x8],1
  41025e:	mov    BYTE PTR [ebx],ch
  410260:	add    edx,0x456ad5b0
  410266:	add    ecx,DWORD PTR ds:0xba82c7a2
  41026c:	inc    ebx
  41026d:	fs xchg esp,eax
  41026f:	and    al,0x93
  410271:	push   cs
  410272:	test   BYTE PTR [ebx],cl
  410274:	cld    
  410275:	icebp  
  410276:	inc    esp
  410277:	leave  
  410278:	(bad)  [esi+0x1c]
  41027b:	xor    esp,DWORD PTR [ebx]
  41027d:	jg     0x410234
  41027f:	add    ebx,DWORD PTR [ebx-0x5a]
  410282:	out    dx,al
  410283:	mov    edx,0x4f66d809
  410288:	in     eax,0xd4
  41028a:	sub    dl,BYTE PTR [eax-0x172f4137]
  410290:	neg    DWORD PTR [edi-0x72040a63]
  410296:	push   esp
  410297:	adc    DWORD PTR [esi],eax
  410299:	js     0x41026a
  41029b:	cdq    
  41029c:	cs sbb eax,0xf48cbbdf
  4102a2:	retf   
  4102a3:	and    DWORD PTR [ebx-0x28604a9d],eax
  4102a9:	fidiv  DWORD PTR [eax+0x4be1f00d]
  4102af:	inc    ebx
  4102b0:	pop    esi
  4102b1:	test   al,0xc8
  4102b3:	add    edx,esi
  4102b5:	mov    ?,WORD PTR [edi-0x2843de65]
  4102bb:	(bad)  
  4102bd:	out    dx,eax
  4102be:	fdivr  QWORD PTR [edx+0x77828841]
  4102c4:	dec    ebp
  4102c5:	add    si,WORD PTR [esi+ebp*1-0x2]
  4102ca:	test   al,0x3b
  4102cc:	and    al,0xf4
  4102ce:	aaa    
  4102cf:	cdq    
  4102d0:	mov    BYTE PTR [ebx],al
  4102d2:	jbe    0x41033e
  4102d4:	sbb    ch,BYTE PTR [edi]
  4102d6:	push   ss
  4102d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102d8:	mov    cl,0xe2
  4102da:	mov    esp,0x8fdbe3b6
  4102df:	xchg   DWORD PTR [edx+0x6c701aee],edx
  4102e5:	arpl   dx,di
  4102e7:	adc    dh,BYTE PTR [ebx+edx*2]
  4102ea:	sbb    eax,0xab55915c
  4102ef:	mov    bh,0x70
  4102f1:	shr    DWORD PTR [ebx],cl
  4102f3:	iret   
  4102f4:	cli    
  4102f5:	inc    eax
  4102f6:	mov    BYTE PTR [esi+0x57d7a672],dh
  4102fc:	jg     0x41027f
  4102fe:	outs   dx,DWORD PTR ds:[esi]
  4102ff:	jo     0x4102d3
  410301:	push   es
  410302:	pop    eax
  410303:	fwait
  410304:	shl    DWORD PTR [edi-0x753368bc],1
  41030a:	cmp    eax,0xe69b08fb
  41030f:	fmul   st(5),st
  410311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410312:	in     eax,0xc0
  410314:	push   es
  410315:	add    DWORD PTR [edi-0x1532488d],eax
  41031b:	push   cs
  41031c:	clc    
  41031d:	sub    BYTE PTR [esp+eax*4+0x27],0x3a
  410322:	bound  ebx,QWORD PTR [edi-0xa5cb121]
  410328:	sbb    edx,0xcb3ef752
  41032e:	(bad)  
  41032f:	out    dx,al
  410330:	sub    eax,0xa41e3119
  410335:	aas    
  410336:	int3   
  410337:	fxch   st(2)
  410339:	mov    BYTE PTR [esi-0x2e],bl
  41033c:	ficom  WORD PTR [ebp-0x1c]
  41033f:	(bad)  
  410340:	jg     0x4102c4
  410342:	mov    esp,0x24afab4b
  410347:	in     al,dx
  410348:	jmp    0x4103ae
  41034a:	je     0x4102de
  41034c:	sub    edx,0xffffff9d
  41034f:	gs retf 0x1906
  410353:	xchg   edx,eax
  410354:	cli    
  410355:	in     al,0x1a
  410357:	fs mov edx,eax
  41035a:	mov    dl,cl
  41035c:	add    esi,edi
  41035e:	(bad)  
  410360:	mov    ebp,0x9f9582a8
  410365:	mov    ds:0x2eb5bfa1,eax
  41036a:	xchg   esi,eax
  41036b:	jecxz  0x4103bb
  41036d:	aad    0xc7
  41036f:	(bad)  
  410370:	mov    edx,0xb7e8d7bb
  410375:	push   eax
  410376:	adc    eax,0x9204649c
  41037b:	mov    al,0x5a
  41037d:	lea    ebx,[edi]
  41037f:	icebp  
  410380:	xchg   esi,eax
  410381:	mov    WORD PTR [edi+0x8],es
  410384:	mov    dl,0x75
  410386:	lahf   
  410387:	mov    es,WORD PTR [edx+0x6f]
  41038a:	iret   
  41038b:	mov    ebx,0xf58556f1
  410390:	loopne 0x41036f
  410392:	popf   
  410393:	xlat   BYTE PTR ds:[ebx]
  410394:	dec    esp
  410395:	std    
  410396:	add    eax,0x4a98ee64
  41039b:	lods   eax,DWORD PTR ds:[esi]
  41039c:	ret    0xecbd
  41039f:	popa   
  4103a0:	jno    0x410334
  4103a2:	sub    dh,BYTE PTR [eax+eiz*4-0x77962872]
  4103a9:	shl    BYTE PTR [ebp-0x5c],1
  4103ac:	iret   
  4103ad:	push   es
  4103ae:	out    0x2f,al
  4103b0:	mov    ecx,DWORD PTR [edx+0x6d77a0eb]
  4103b6:	sub    ebp,DWORD PTR [edx-0x522ab044]
  4103bc:	and    eax,0x48544887
  4103c1:	int    0x7f
  4103c3:	xor    DWORD PTR [ebx+0x77],ebp
  4103c6:	cmp    eax,0x43f34767
  4103cb:	adc    eax,0xdd05b7b0
  4103d0:	stc    
  4103d1:	pop    es
  4103d2:	cmc    
  4103d3:	leave  
  4103d4:	mov    ?,WORD PTR [edi+0x20]
  4103d7:	sahf   
  4103d8:	ss jbe 0x410424
  4103db:	mov    edi,DWORD PTR [edi]
  4103dd:	shl    ebp,cl
  4103df:	mov    edi,0x6647bca9
  4103e4:	xchg   ebx,eax
  4103e5:	mov    esp,0x1c3abdf0
  4103ea:	imul   ecx,DWORD PTR [ebp-0x78a6827f],0xa084452d
  4103f4:	loopne 0x410474
  4103f6:	in     al,dx
  4103f7:	into   
  4103f8:	jno    0x410403
  4103fa:	cs (bad) 
  4103fc:	jae    0x410392
  4103fe:	outs   dx,BYTE PTR ds:[esi]
  4103ff:	nop
  410400:	lock jb 0x4103af
  410403:	push   edi
  410404:	cwde   
  410405:	sub    al,0xb2
  410407:	mov    eax,ds:0x6cd30852
  41040c:	dec    esi
  41040d:	push   ss
  41040e:	fdivrp st(7),st
  410410:	adc    al,0x76
  410412:	lahf   
  410413:	scas   al,BYTE PTR es:[edi]
  410414:	or     al,0x29
  410416:	stc    
  410417:	cmp    eax,0x64da29b3
  41041c:	jno    0x410463
  41041e:	fisubr DWORD PTR [eax-0x7a4c414d]
  410424:	retf   
  410425:	outs   dx,BYTE PTR ds:[esi]
  410426:	lods   al,BYTE PTR ds:[esi]
  410427:	xchg   ebp,eax
  410428:	pop    ebp
  410429:	mov    ebp,0x225bf571
  41042e:	inc    edx
  41042f:	mov    bl,0xb8
  410431:	aam    0x29
  410433:	pop    ecx
  410434:	jns    0x410445
  410436:	loop   0x4103ef
  410438:	jbe    0x410448
  41043a:	inc    esi
  41043b:	rol    DWORD PTR [eax-0xdda508f],0x49
  410442:	add    dh,BYTE PTR [edi-0x60193a2]
  410448:	push   0x42
  41044a:	push   cs
  41044b:	sbb    ebp,DWORD PTR [ebx]
  41044d:	aad    0x5d
  41044f:	aas    
  410450:	cwde   
  410451:	jmp    0x4104a0
  410453:	xchg   edx,eax
  410454:	ins    DWORD PTR es:[edi],dx
  410455:	dec    esi
  410456:	sub    DWORD PTR [esi+0x70],ecx
  410459:	ins    BYTE PTR es:[edi],dx
  41045a:	lods   eax,DWORD PTR ds:[esi]
  41045b:	add    al,0x47
  41045d:	sti    
  41045e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41045f:	popa   
  410460:	inc    esi
  410461:	sub    ecx,0xffffffb5
  410464:	and    BYTE PTR [ebx],dl
  410466:	daa    
  410467:	jmp    0xcde8b5a3
  41046c:	fwait
  41046d:	std    
  41046e:	test   eax,0x94df637a
  410473:	and    ch,BYTE PTR [esi-0x54]
  410476:	add    eax,0xcd218fcf
  41047b:	adc    ecx,esi
  41047d:	inc    eax
  41047e:	in     al,dx
  41047f:	pusha  
  410480:	push   eax
  410481:	xor    eax,0xa6e855cd
  410486:	jns    0x4104d7
  410488:	mov    WORD PTR [ebp+0x41],?
  41048b:	and    ebx,DWORD PTR [ecx-0x7ead6fa6]
  410491:	push   ebx
  410492:	out    0x68,al
  410494:	retf   
  410495:	rcl    BYTE PTR [edi+eiz*4],1
  410498:	mov    dl,0x2b
  41049a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049b:	(bad)  
  41049c:	adc    al,0x5d
  41049e:	test   eax,0x806e9d8f
  4104a3:	icebp  
  4104a4:	adc    DWORD PTR [eax-0x20a62b52],esp
  4104aa:	adc    eax,0x580bfdcc
  4104af:	ja     0x410500
  4104b1:	push   ecx
  4104b2:	cmc    
  4104b3:	retf   0xfb51
  4104b6:	out    0xd3,al
  4104b8:	ja     0x410501
  4104ba:	sub    eax,0x5eb51d78
  4104bf:	hlt    
  4104c0:	test   al,0x12
  4104c2:	jge    0x410474
  4104c4:	fbstp  TBYTE PTR [ebp+edi*4+0x34d39a0f]
  4104cb:	loopne 0x4104b2
  4104cd:	ins    BYTE PTR es:[edi],dx
  4104ce:	jb     0x410458
  4104d0:	in     eax,0x4f
  4104d2:	xchg   ebp,eax
  4104d3:	mov    esi,0xf2c77417
  4104d8:	test   DWORD PTR [eax-0x86b3497],ecx
  4104de:	mov    cl,0xa7
  4104e0:	adc    eax,0x6b1dd0b9
  4104e5:	stos   BYTE PTR es:[edi],al
  4104e6:	es mov edx,0x913bc04e
  4104ec:	je     0x4104ed
  4104ee:	mov    ebx,0x1ec568bb
  4104f3:	out    0xcb,al
  4104f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f6:	shr    BYTE PTR [ecx-0x7c3785fa],1
  4104fc:	jbe    0x4104f6
  4104fe:	loop   0x41053a
  410500:	and    edx,ebp
  410502:	cmc    
  410503:	aad    0xdc
  410505:	jno    0x4104aa
  410507:	in     al,dx
  410508:	inc    ecx
  410509:	sbb    DWORD PTR [esi],0x77247c03
  41050f:	mov    cl,0x5e
  410511:	(bad)  
  410512:	mov    al,ds:0x67005759
  410517:	lds    ecx,FWORD PTR [ebx]
  410519:	faddp  st(0),st
  41051b:	push   esi
  41051c:	loopne 0x4104d1
  41051e:	neg    BYTE PTR [eax-0x70]
  410521:	inc    ecx
  410522:	mov    DWORD PTR [ecx],edx
  410524:	pushf  
  410525:	lahf   
  410526:	call   0xbd94:0x34406fef
  41052d:	pop    edx
  41052e:	in     eax,dx
  41052f:	or     ebx,edx
  410531:	add    DWORD PTR [ebx-0x74],edx
  410534:	repz fst QWORD PTR [eax-0x351e62e4]
  41053b:	lods   eax,DWORD PTR ds:[esi]
  41053c:	jno    0x410599
  41053e:	scas   eax,DWORD PTR es:[edi]
  41053f:	out    0x98,eax
  410541:	bound  edi,QWORD PTR [ecx+0x3639bdaa]
  410547:	aaa    
  410548:	cmp    al,0x2c
  41054a:	mov    al,ds:0x475cd295
  41054f:	push   esp
  410550:	iret   
  410551:	mov    ebx,0x70c34c77
  410556:	lahf   
  410557:	inc    ebx
  410558:	outs   dx,BYTE PTR ds:[esi]
  410559:	dec    ebx
  41055a:	je     0x41056e
  41055c:	outs   dx,BYTE PTR ds:[esi]
  41055d:	mov    eax,0x33cd235a
  410562:	sub    ecx,eax
  410564:	arpl   WORD PTR [ecx+0x69d26399],cx
  41056a:	push   ebp
  41056b:	jo     0x4105ce
  41056d:	dec    ebx
  41056e:	retf   0xf7a2
  410571:	push   ebx
  410572:	mov    ecx,DWORD PTR [ebp-0x2545b6b5]
  410578:	push   ss
  410579:	(bad)  
  41057a:	(bad)  
  41057c:	adc    ebx,ebx
  41057e:	aaa    
  41057f:	js     0x4105f7
  410581:	call   0x1edbbdb9
  410586:	test   al,0x12
  410588:	xor    bl,dl
  41058a:	dec    esi
  41058b:	scas   al,BYTE PTR es:[edi]
  41058c:	pop    edx
  41058d:	cmp    ch,BYTE PTR [ecx-0x55]
  410590:	dec    edi
  410591:	cmp    eax,0x8f8581f3
  410596:	out    0x76,al
  410598:	push   0x7ae9b12d
  41059d:	inc    ecx
  41059e:	and    eax,0xd36a88a0
  4105a3:	or     al,0xb4
  4105a5:	pop    edx
  4105a6:	pop    ebp
  4105a7:	sub    eax,0xd4bcd2b1
  4105ac:	mov    ecx,0x4a96e4c4
  4105b1:	mov    esi,0x667b5579
  4105b6:	jns    0x410633
  4105b8:	mov    dl,0x94
  4105ba:	mov    eax,0xca8f59e3
  4105bf:	test   BYTE PTR [ecx],al
  4105c1:	fsub   st(5),st
  4105c3:	jnp    0x4105ec
  4105c5:	or     al,0xe
  4105c7:	pop    es
  4105c8:	rcr    DWORD PTR [ebp-0xcdbab14],1
  4105ce:	mov    bl,BYTE PTR [edi]
  4105d0:	(bad)  
  4105d1:	(bad)  
  4105d2:	in     al,dx
  4105d3:	repnz in al,dx
  4105d5:	and    al,0x22
  4105d7:	inc    esi
  4105d8:	mov    bh,0x51
  4105da:	aaa    
  4105db:	xchg   edx,eax
  4105dc:	xor    eax,0x8afa7f7d
  4105e1:	aad    0x97
  4105e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105e4:	lahf   
  4105e5:	cs inc eax
  4105e7:	adc    ah,cl
  4105e9:	jg     0x4105e4
  4105eb:	inc    eax
  4105ec:	xchg   BYTE PTR [ecx],dl
  4105ee:	and    ah,BYTE PTR [edx-0x26dd0e31]
  4105f4:	ret    0xa819
  4105f7:	xchg   esi,eax
  4105f8:	icebp  
  4105f9:	int    0x96
  4105fb:	add    edx,DWORD PTR gs:[edi+ecx*8+0x47262db6]
  410603:	sbb    ah,BYTE PTR [edi-0x3c8ba073]
  410609:	and    BYTE PTR [edx+esi*4+0x6256996a],dh
  410610:	ds pushf 
  410612:	mov    al,ds:0x43ca421d
  410617:	popf   
  410618:	(bad)  
  410619:	repz jbe 0x4105db
  41061c:	push   edi
  41061d:	retf   0x36de
  410620:	test   DWORD PTR [edi],esp
  410622:	aaa    
  410623:	aad    0xa9
  410625:	pusha  
  410626:	ret    0x9ab5
  410629:	dec    esp
  41062a:	and    DWORD PTR [ecx],0xffffffd9
  41062d:	and    BYTE PTR [ebx+eax*4+0x5f],bl
  410631:	pop    esi
  410632:	cmp    dl,bl
  410634:	push   edi
  410635:	add    ah,BYTE PTR [ecx]
  410637:	rcr    DWORD PTR fs:0x5b5ae663,1
  41063e:	mov    ds:0xa7145668,eax
  410643:	mul    DWORD PTR [ebx]
  410645:	ret    
  410646:	cmp    edx,ebp
  410648:	dec    edi
  410649:	cdq    
  41064a:	push   ebx
  41064b:	pop    esp
  41064c:	cld    
  41064d:	sqrtps xmm4,XMMWORD PTR [edi+0x1ed875e7]
  410654:	push   esi
  410655:	jmp    0x26b8:0xd4f936ad
  41065c:	sqrtps xmm5,XMMWORD PTR [ebx-0x7e]
  410660:	push   esi
  410661:	shr    DWORD PTR [ebx-0xc],1
  410664:	mov    ds:0xbd9b7f4b,al
  410669:	adc    BYTE PTR [eax+ecx*1-0xd],al
  41066d:	sti    
  41066e:	stos   BYTE PTR es:[edi],al
  41066f:	in     al,0x41
  410671:	xchg   DWORD PTR [ebp+0x1697f491],esi
  410677:	xor    al,0xd4
  410679:	dec    ebx
  41067a:	or     eax,0x5f76a95a
  41067f:	retf   
  410680:	mov    edx,0xe59b2d11
  410685:	pop    ebp
  410686:	sub    ecx,ecx
  410688:	je     0x4106b7
  41068a:	add    ebp,esi
  41068c:	pop    ecx
  41068d:	adc    al,0xf7
  41068f:	(bad)  
  410690:	int3   
  410691:	in     eax,0xc2
  410693:	aad    0x82
  410695:	rcr    DWORD PTR [edi-0x8bacb59],0xab
  41069c:	loope  0x4106fb
  41069e:	pop    eax
  41069f:	loop   0x4106a8
  4106a1:	mov    eax,?
  4106a3:	xor    DWORD PTR [ebx+0x13979457],ebp
  4106a9:	push   esi
  4106aa:	jb     0x410633
  4106ac:	shl    ah,cl
  4106ae:	xlat   BYTE PTR ds:[ebx]
  4106af:	call   0xc84d:0x6cecac9d
  4106b6:	adc    eax,0xb34d20b5
  4106bb:	mov    cl,0x17
  4106bd:	hlt    
  4106be:	xor    al,0x55
  4106c0:	jle    0x410673
  4106c2:	sbb    DWORD PTR [esi+0x7e],edi
  4106c5:	adc    ch,ah
  4106c7:	mov    al,ds:0xae182ef0
  4106cc:	sub    BYTE PTR [edx-0x7d],al
  4106cf:	jo     0x4106b7
  4106d1:	test   bl,0x6a
  4106d4:	push   es
  4106d5:	int3   
  4106d6:	aam    0xb5
  4106d8:	fwait
  4106d9:	push   0xfffffff0
  4106db:	xchg   esp,esi
  4106dd:	iret   
  4106de:	xor    eax,0xe8ea842c
  4106e3:	lea    eax,ds:0x3d15c9c7
  4106e9:	pop    ecx
  4106ea:	mov    eax,ds:0xaeb7c540
  4106ef:	jne    0x41070b
  4106f1:	shl    DWORD PTR [eax-0x6b],0xb2
  4106f5:	gs inc edi
  4106f7:	in     eax,0xc4
  4106f9:	les    ebx,FWORD PTR [ebx-0x18]
  4106fc:	outs   dx,BYTE PTR ds:[esi]
  4106fd:	in     al,dx
  4106fe:	add    BYTE PTR [edi-0x12],bh
  410701:	out    dx,al
  410702:	retf   
  410703:	jl     0x4106f6
  410705:	inc    esp
  410706:	xor    al,0xc5
  410708:	sti    
  410709:	aad    0xf3
  41070b:	daa    
  41070c:	fwait
  41070d:	cmp    DWORD PTR [ebx+0xb],esp
  410710:	mov    bh,0xde
  410712:	jg     0x4106f9
  410714:	sti    
  410715:	fwait
  410716:	jle    0x410722
  410718:	dec    ebp
  410719:	cwde   
  41071a:	cmp    al,bh
  41071c:	jecxz  0x4106e1
  41071e:	fisttp QWORD PTR [edx+0xc612b8a]
  410724:	cli    
  410725:	pop    ss
  410726:	stos   BYTE PTR es:[edi],al
  410727:	daa    
  410728:	fidivr DWORD PTR [ebx+0x574168c]
  41072e:	xor    ecx,DWORD PTR [esi]
  410730:	add    edx,edi
  410732:	cdq    
  410733:	push   cs
  410734:	sbb    BYTE PTR [ebx-0xd],bh
  410737:	push   ebp
  410738:	inc    eax
  410739:	fisubr WORD PTR [ebx-0x46]
  41073c:	jg     0x410701
  41073e:	in     al,dx
  41073f:	jp     0x41075b
  410741:	inc    ecx
  410742:	xor    ebp,ebx
  410744:	mov    bh,0x17
  410746:	fbstp  TBYTE PTR [edi]
  410748:	idiv   eax
  41074a:	push   ebx
  41074b:	fwait
  41074c:	(bad)  
  41074d:	fcomp  st(0)
  41074f:	call   0x429c:0x3aecce85
  410756:	(bad)  
  410757:	push   0x38
  410759:	lds    ecx,FWORD PTR [ebp-0x55eb3cef]
  41075f:	push   cs
  410760:	(bad)
  410764:	sbb    ebx,DWORD PTR [edi-0x22161e80]
  41076a:	or     al,0xdc
  41076c:	fldenv [edi-0x7d]
  41076f:	mov    ecx,0xe9189d53
  410774:	sbb    bh,al
  410776:	xchg   esi,eax
  410777:	in     al,0xa9
  410779:	nop
  41077a:	std    
  41077b:	jl     0x41075f
  41077d:	pop    eax
  41077e:	mov    esi,0xc76af91c
  410783:	push   ds
  410784:	(bad)  
  410785:	int3   
  410786:	cmp    dl,ch
  410788:	int    0x78
  41078a:	add    al,0x17
  41078c:	pop    esi
  41078d:	mov    dh,bh
  41078f:	cmp    esi,DWORD PTR [ecx-0x6f]
  410792:	pusha  
  410793:	xchg   ecx,eax
  410794:	inc    DWORD PTR ds:0x3a785d3a
  41079a:	sub    eax,0xb560c37c
  41079f:	push   0x18
  4107a1:	fadd   QWORD PTR [ebp-0x5a739032]
  4107a7:	ja     0x41079e
  4107a9:	pop    edx
  4107aa:	cmp    BYTE PTR [edx-0x6c],dl
  4107ad:	shr    BYTE PTR [ecx],0xcd
  4107b0:	or     BYTE PTR [eax+0x2ab5f23c],dh
  4107b6:	xchg   esp,eax
  4107b7:	sbb    DWORD PTR [ebp-0x493711a],0xffffffb4
  4107be:	cmp    bl,BYTE PTR [esi+esi*4-0x1c]
  4107c2:	adc    BYTE PTR [ebp+0x69],0xc5
  4107c6:	jae    0x4107f9
  4107c8:	or     cl,0xb2
  4107cb:	sub    al,0x21
  4107cd:	and    BYTE PTR [edx-0x11],ah
  4107d0:	ins    DWORD PTR es:[edi],dx
  4107d1:	xor    DWORD PTR [edx+0x75],eax
  4107d4:	call   DWORD PTR [ecx-0x33]
  4107d7:	mov    ecx,0xf7e72248
  4107dc:	mov    edi,0xc3cbee85
  4107e1:	rcr    dh,1
  4107e3:	jle    0x4107ad
  4107e5:	jmp    DWORD PTR [esi+0x19546655]
  4107eb:	push   edx
  4107ec:	in     al,dx
  4107ed:	repnz xor cl,dh
  4107f0:	les    eax,FWORD PTR [ecx-0x672ee58c]
  4107f6:	xor    al,0xf8
  4107f8:	dec    BYTE PTR ds:[ecx]
  4107fb:	aad    0x4b
  4107fd:	inc    eax
  4107fe:	repz inc edi
  410800:	mov    ds:0xfede7495,eax
  410805:	cmp    DWORD PTR [ebx],0xffffffc3
  410808:	fld    DWORD PTR [edx-0x27070ee1]
  41080e:	imul   esp,eax,0x9ef3f7d1
  410814:	ins    BYTE PTR es:[edi],dx
  410815:	or     edx,0xb20244dc
  41081b:	cs inc ecx
  41081d:	aam    0x6a
  41081f:	ins    DWORD PTR es:[edi],dx
  410820:	mov    eax,ds:0xcc36213b
  410825:	ror    BYTE PTR [edx],1
  410827:	pop    esi
  410828:	jb     0x410896
  41082a:	scas   eax,DWORD PTR es:[edi]
  41082b:	sub    eax,0x3a1f06cc
  410830:	jle    0x410858
  410832:	pop    ebx
  410833:	fwait
  410834:	repnz push edi
  410836:	pop    edi
  410837:	cmp    DWORD PTR [ecx-0x51fba106],esi
  41083d:	fldenv [ebp-0x17]
  410840:	aaa    
  410841:	xor    al,0x75
  410843:	jle    0x410868
  410845:	adc    ecx,DWORD PTR [edx]
  410847:	adc    BYTE PTR [edx-0x2bc12c0e],ah
  41084d:	outs   dx,BYTE PTR ds:[esi]
  41084e:	jno    0x410889
  410850:	mov    esp,0x99344392
  410855:	(bad)  
  410856:	adc    al,0x46
  410858:	stos   DWORD PTR es:[edi],eax
  410859:	push   0xffffffbd
  41085b:	xor    DWORD PTR [eax-0x6e],ebx
  41085e:	push   edi
  41085f:	mov    cl,0x61
  410861:	loopne 0x410894
  410863:	js     0x410832
  410865:	sar    DWORD PTR [ecx+edx*2+0x6f],1
  410869:	inc    ecx
  41086a:	xchg   esp,eax
  41086b:	fsub   QWORD PTR [edx+0x2469db86]
  410871:	rcl    dl,0x40
  410874:	mov    cl,0x17
  410876:	stos   DWORD PTR es:[edi],eax
  410877:	xchg   DWORD PTR [eax-0x42],esi
  41087a:	add    al,0xe6
  41087c:	stc    
  41087d:	shr    DWORD PTR [eax+0x3e693568],cl
  410883:	neg    BYTE PTR [ecx-0x68]
  410886:	dec    ebx
  410887:	jns    0x4108b6
  410889:	or     dl,BYTE PTR [ecx]
  41088b:	lea    esp,[ecx*8+0x6cb66dd]
  410892:	fsubp  st(5),st
  410894:	pusha  
  410895:	or     ah,cl
  410897:	adc    al,0xda
  410899:	dec    edx
  41089a:	out    dx,eax
  41089b:	push   ebp
  41089c:	add    BYTE PTR [esi+0x6b],0x8d
  4108a0:	add    dh,BYTE PTR [edi+0x18]
  4108a3:	jge    0x410887
  4108a5:	pop    edx
  4108a6:	lock mov gs,WORD PTR [edi-0x18]
  4108aa:	sbb    ecx,DWORD PTR [ebx+0x2d]
  4108ad:	cmc    
  4108ae:	call   0xdd32a506
  4108b3:	inc    edx
  4108b4:	push   0xe429df75
  4108b9:	sbb    al,0x85
  4108bb:	jmp    edx
  4108bd:	or     ch,BYTE PTR [ebp+0x23]
  4108c0:	push   ebx
  4108c1:	into   
  4108c2:	(bad)  
  4108c4:	sub    DWORD PTR [eax-0x3b8fd6d7],eax
  4108ca:	repnz shl ah,0x3
  4108ce:	popf   
  4108cf:	je     0x4108c6
  4108d1:	mov    ch,BYTE PTR fs:[eax]
  4108d4:	push   edx
  4108d5:	xchg   edi,eax
  4108d6:	xchg   edi,eax
  4108d7:	outs   dx,DWORD PTR ds:[esi]
  4108d8:	sbb    BYTE PTR [eax],0x2e
  4108db:	mov    ?,ebx
  4108dd:	test   eax,0xc9a3ffa9
  4108e2:	in     eax,0x6c
  4108e4:	push   ss
  4108e5:	fwait
  4108e6:	hlt    
  4108e7:	inc    esi
  4108e8:	mov    ebp,0x701c246a
  4108ed:	(bad)  
  4108ef:	(bad)  
  4108f0:	sbb    DWORD PTR [ebp+0x23bac1ea],esi
  4108f6:	push   0xc1489f1c
  4108fb:	xor    edx,DWORD PTR [edi-0x7d]
  4108fe:	popf   
  4108ff:	adc    eax,eax
  410901:	sbb    al,0xf
  410903:	xchg   esi,eax
  410904:	and    al,0x7a
  410906:	fisub  WORD PTR [ebx+ebp*1+0x3e9b8a43]
  41090d:	fdiv   DWORD PTR [esi]
  41090f:	inc    ebp
  410910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410911:	call   0x3c47:0x45d516d
  410918:	xchg   edi,eax
  410919:	out    dx,eax
  41091a:	idiv   ecx
  41091c:	and    BYTE PTR [ecx-0x78e834cd],bh
  410922:	or     dl,0xa5
  410925:	add    ebx,DWORD PTR [edx-0x5df1ad1d]
  41092b:	in     al,dx
  41092c:	sar    DWORD PTR [ecx-0x6a],0xe5
  410930:	xor    edx,DWORD PTR fs:[edi]
  410933:	pop    es
  410934:	mov    al,ds:0x81262e8e
  410939:	jbe    0x4108cb
  41093b:	cmp    DWORD PTR [ebx-0x64],ebx
  41093e:	not    DWORD PTR [eax+0x4741bd07]
  410944:	push   esp
  410945:	repz aaa 
  410947:	adc    ebx,eax
  410949:	jmp    0x4109a6
  41094b:	retf   
  41094c:	cmp    DWORD PTR [ecx+0x10],edi
  41094f:	ins    DWORD PTR es:[edi],dx
  410950:	fiadd  DWORD PTR [esi]
  410952:	in     al,dx
  410953:	icebp  
  410954:	push   ebx
  410955:	pop    edx
  410956:	cs cli 
  410958:	ret    0xd1c5
  41095b:	enter  0x3a08,0x87
  41095f:	pop    edi
  410960:	dec    ebp
  410961:	xor    al,0x10
  410963:	addr16 jmp 0x41093a
  410966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410967:	(bad)  
  410968:	sbb    esp,edi
  41096a:	fdiv   st,st(0)
  41096c:	or     eax,edx
  41096e:	outs   dx,DWORD PTR ds:[esi]
  41096f:	xor    DWORD PTR [ebx+0x52c956],edx
  410975:	xchg   esp,eax
  410976:	push   ebx
  410977:	adc    eax,0x34ff1eec
  41097c:	or     eax,0x3903b0ee
  410981:	push   cs
  410982:	fstp   DWORD PTR [ecx]
  410984:	and    cl,BYTE PTR [ecx-0x4]
  410987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410988:	fsub   QWORD PTR [ebx]
  41098a:	rcr    BYTE PTR [edi],cl
  41098c:	sbb    bl,dl
  41098e:	in     al,0x57
  410990:	loope  0x4109c5
  410992:	pop    esp
  410993:	and    BYTE PTR [edx],dh
  410995:	pop    ds
  410996:	sti    
  410997:	(bad)  
  410999:	loope  0x410928
  41099b:	xlat   BYTE PTR ds:[ebx]
  41099c:	in     al,dx
  41099d:	loope  0x41099d
  41099f:	iret   
  4109a0:	jnp    0x4109fc
  4109a2:	pop    edx
  4109a3:	cmp    BYTE PTR [edi+edi*4],cl
  4109a6:	jbe    0x4109a9
  4109a8:	mov    ebx,DWORD PTR [esi-0x76]
  4109ab:	cwde   
  4109ac:	mov    dl,0x27
  4109ae:	shl    ebp,0xad
  4109b1:	xlat   BYTE PTR ds:[ebx]
  4109b2:	sahf   
  4109b3:	ret    
  4109b4:	dec    esi
  4109b5:	cmp    dl,BYTE PTR [esi+0x144d583b]
  4109bb:	out    0x67,al
  4109bd:	out    dx,eax
  4109be:	jns    0x4109a5
  4109c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c1:	es sar edx,cl
  4109c4:	jecxz  0x4109ad
  4109c6:	add    DWORD PTR [edx-0x4f],edx
  4109c9:	iret   
  4109ca:	retf   0x7f59
  4109cd:	cwde   
  4109ce:	jo     0x4109e1
  4109d0:	mov    ds:0xbb64b7ea,al
  4109d5:	lds    eax,FWORD PTR [ecx]
  4109d7:	(bad)
  4109dc:	push   ss
  4109dd:	xchg   edi,eax
  4109de:	mov    ds:0x7d487add,al
  4109e3:	ret    
  4109e4:	stos   DWORD PTR es:[edi],eax
  4109e5:	rcl    DWORD PTR [ebp-0x1b],cl
  4109e8:	push   ebx
  4109e9:	sbb    eax,0x8e702499
  4109ee:	or     ch,BYTE PTR [ecx]
  4109f0:	dec    eax
  4109f1:	cs lock pop es
  4109f4:	retf   0xa590
  4109f7:	mov    ebx,0xa8e8108f
  4109fc:	rcl    DWORD PTR [eax-0x3e],1
  4109ff:	pop    esp
  410a00:	xor    dh,BYTE PTR [esi]
  410a02:	and    edi,DWORD PTR [edx+esi*4]
  410a05:	pop    esp
  410a06:	enter  0xe092,0xa1
  410a0a:	inc    ebx
  410a0b:	inc    edx
  410a0c:	push   eax
  410a0d:	pop    esi
  410a0e:	mov    ds:0x97702631,al
  410a13:	push   edx
  410a14:	or     BYTE PTR [eax-0x6a],ah
  410a17:	mov    ebp,0x72dbde07
  410a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a1d:	mov    esp,0x990ae3ef
  410a22:	in     eax,dx
  410a23:	jle    0x410a84
  410a25:	lods   eax,DWORD PTR ds:[esi]
  410a26:	xor    al,0x6d
  410a28:	xchg   edi,eax
  410a29:	inc    ecx
  410a2a:	xchg   BYTE PTR [edi-0x6a1f81ac],cl
  410a30:	cdq    
  410a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a32:	jp     0x4109d2
  410a34:	cmp    al,0x8e
  410a36:	loope  0x410a1a
  410a38:	call   0x6973:0xef810dec
  410a3f:	jecxz  0x410a3e
  410a41:	lahf   
  410a42:	stos   DWORD PTR es:[edi],eax
  410a43:	push   esi
  410a44:	iret   
  410a45:	inc    esi
  410a46:	inc    edi
  410a47:	and    DWORD PTR [ebx],edx
  410a49:	mov    al,al
  410a4b:	fwait
  410a4c:	cmp    bh,dh
  410a4e:	dec    ecx
  410a4f:	inc    ebx
  410a50:	add    BYTE PTR [ecx],dl
  410a52:	mov    al,ds:0x7f5062eb
  410a57:	enter  0xa14e,0x2d
  410a5b:	adc    dh,bh
  410a5d:	je     0x4109fd
  410a5f:	lahf   
  410a60:	loope  0x410acc
  410a62:	int3   
  410a63:	dec    ebx
  410a64:	div    ah
  410a66:	outs   dx,BYTE PTR ds:[esi]
  410a67:	sub    ah,BYTE PTR [edi+0x65]
  410a6a:	sbb    al,0xfd
  410a6c:	sti    
  410a6d:	(bad)  
  410a6e:	push   0xffffffc7
  410a70:	lock cmp cl,BYTE PTR [esi]
  410a73:	loopne 0x410adf
  410a75:	stos   DWORD PTR es:[edi],eax
  410a76:	jmp    0x410a1c
  410a78:	(bad)
  410a7b:	popa   
  410a7c:	and    al,0xfd
  410a7e:	sbb    eax,0xcb46d4d9
  410a83:	enter  0x9cba,0x77
  410a87:	(bad)  [edi]
  410a89:	repnz aam 0x10
  410a8c:	dec    eax
  410a8d:	fwait
  410a8e:	inc    ebx
  410a8f:	sbb    bh,ah
  410a91:	stos   BYTE PTR es:[edi],al
  410a92:	inc    ecx
  410a93:	ret    
  410a94:	push   edi
  410a95:	ret    
  410a96:	mov    eax,ds:0x6a13d232
  410a9b:	mov    ds:0x8c11d14e,eax
  410aa0:	add    BYTE PTR [esi-0x6fd0863],cl
  410aa6:	cmc    
  410aa7:	repnz sbb DWORD PTR [edx],esp
  410aaa:	mov    dl,0x2
  410aac:	mov    al,0x1d
  410aae:	and    DWORD PTR [ebp+0x3ddc0847],edi
  410ab4:	int3   
  410ab5:	in     al,dx
  410ab6:	adc    esi,ebp
  410ab8:	push   ds
  410ab9:	or     eax,DWORD PTR [ecx+ebx*1-0x64]
  410abd:	sub    al,0x95
  410abf:	lods   eax,DWORD PTR ds:[esi]
  410ac0:	leave  
  410ac1:	lods   al,BYTE PTR ds:[esi]
  410ac2:	sbb    ch,BYTE PTR [edx+0x5c]
  410ac5:	aaa    
  410ac6:	cwde   
  410ac7:	(bad)  
  410ac8:	ror    DWORD PTR [ecx+ebx*4],0x53
  410acc:	push   edi
  410acd:	in     eax,0x42
  410acf:	pop    eax
  410ad0:	xor    dl,BYTE PTR [eax]
  410ad2:	cmp    eax,0xe898e8dd
  410ad7:	fs enter 0x8c0b,0x4d
  410adc:	ffreep st(0)
  410ade:	retf   
  410adf:	in     eax,dx
  410ae0:	dec    esi
  410ae1:	pop    eax
  410ae2:	add    dh,BYTE PTR [ecx-0x16]
  410ae5:	dec    esi
  410ae6:	(bad)  [edx-0x18832e06]
  410aec:	lock test BYTE PTR [edx+0x6178f222],bh
  410af3:	mov    dl,0xcb
  410af5:	xor    BYTE PTR [ecx+0x0],0x50
  410af9:	or     eax,0x20468db1
  410afe:	sti    
  410aff:	pusha  
  410b00:	adc    dh,ch
  410b02:	mov    dh,0xf0
  410b04:	xor    cl,dl
  410b06:	sahf   
  410b07:	push   ecx
  410b08:	scas   al,BYTE PTR es:[edi]
  410b09:	sub    DWORD PTR [eax+0x903219b],0xfffffffb
  410b10:	fs jbe 0x410afe
  410b13:	into   
  410b14:	loop   0x410b10
  410b16:	es pop ss
  410b18:	call   0xe0afac3b
  410b1d:	ds dec ebp
  410b1f:	imul   esp,DWORD PTR [ebp+0x3b],0x14
  410b23:	cmp    ebx,eax
  410b25:	lods   eax,DWORD PTR ds:[esi]
  410b26:	and    esp,DWORD PTR [esi]
  410b28:	xchg   DWORD PTR [eax+0x6a5e9c9f],ebx
  410b2e:	dec    esp
  410b2f:	cmp    cl,BYTE PTR [eax+0x52]
  410b32:	cmp    al,0x3a
  410b34:	xchg   edi,eax
  410b35:	dec    ecx
  410b36:	jge    0x410b4b
  410b38:	add    eax,0x68d6f2b5
  410b3d:	adc    eax,0xf84dcbb
  410b42:	ror    DWORD PTR [esi-0x72],0xc
  410b46:	out    0x2,al
  410b48:	stc    
  410b49:	or     DWORD PTR [edi],0x7a1bde7c
  410b4f:	fadd   st(5),st
  410b51:	push   edx
  410b52:	je     0x410bab
  410b54:	cdq    
  410b55:	lods   al,BYTE PTR ds:[esi]
  410b56:	jl     0x410b3c
  410b58:	dec    esi
  410b59:	jo     0x410afd
  410b5b:	loope  0x410b65
  410b5d:	adc    WORD PTR [esi],dx
  410b60:	cmc    
  410b61:	psllq  mm5,QWORD PTR [edi+edx*2-0x14]
  410b66:	xor    BYTE PTR [edx],ch
  410b68:	rcl    BYTE PTR [ebx],1
  410b6a:	mov    edx,0x6e8aa092
  410b6f:	xor    cl,BYTE PTR [ebx+0x5a]
  410b72:	shl    BYTE PTR [edi-0x46],cl
  410b75:	das    
  410b76:	xor    BYTE PTR [edx+0x68],dh
  410b79:	aas    
  410b7a:	and    al,0xe6
  410b7c:	xchg   ecx,eax
  410b7d:	xor    DWORD PTR [esi+0x7f],esi
  410b80:	pusha  
  410b81:	in     al,0x97
  410b83:	sub    DWORD PTR [esi+eiz*2-0x6828c1a],ebx
  410b8a:	xor    edx,DWORD PTR [ebp-0x39]
  410b8d:	inc    edi
  410b8e:	xchg   edx,eax
  410b8f:	movntq (bad),mm3
  410b90:	out    0xd8,eax
  410b92:	add    al,0xa2
  410b94:	cs std 
  410b96:	lahf   
  410b97:	add    DWORD PTR [ecx-0x58],0xed78d637
  410b9e:	xchg   esp,eax
  410b9f:	mov    ch,0x4
  410ba1:	mul    bl
  410ba3:	retf   0x7180
  410ba6:	jl     0x410b57
  410ba8:	jno    0x410bc1
  410baa:	in     al,dx
  410bab:	data16 js 0x410bd8
  410bae:	xor    BYTE PTR [edx-0x3a],cl
  410bb1:	daa    
  410bb2:	retf   0xf165
  410bb5:	fmul   DWORD PTR [esi+eiz*8]
  410bb8:	ss enter 0xf3dd,0x14
  410bbd:	(bad)  
  410bbe:	and    al,0x1b
  410bc0:	mov    ds:0xd23ec451,al
  410bc5:	or     DWORD PTR [edi-0x49],esi
  410bc8:	popf   
  410bc9:	ret    0x37c1
  410bcc:	iret   
  410bcd:	mov    edi,DWORD PTR [ecx]
  410bcf:	jecxz  0x410bee
  410bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd2:	pop    edi
  410bd3:	dec    eax
  410bd4:	not    DWORD PTR [esi+0xa7de6d]
  410bda:	sbb    ah,bh
  410bdc:	(bad)  
  410bdd:	(bad)
  410be0:	add    eax,0xd081ac87
  410be5:	(bad)  
  410be6:	test   al,0x38
  410be8:	call   0x67b06f0
  410bed:	cmp    ebx,esi
  410bef:	je     0x410c38
  410bf1:	cwde   
  410bf2:	or     al,0x20
  410bf4:	test   DWORD PTR [eax-0x6cb23b60],ebp
  410bfa:	and    BYTE PTR [eiz*4-0x1814e34e],al
  410c01:	jno    0x410bbf
  410c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c04:	sti    
  410c05:	xor    DWORD PTR [edi],esp
  410c07:	add    edi,DWORD PTR [eax-0x78]
  410c0a:	mov    ah,0x53
  410c0c:	sbb    DWORD PTR [ebx-0x76cc9d40],esp
  410c12:	xor    al,0x45
  410c14:	sub    ecx,DWORD PTR [esi-0x3c98d20c]
  410c1a:	imul   BYTE PTR [edi+0x424b3d66]
  410c20:	rcl    esi,0xd
  410c23:	arpl   WORD PTR [edx],sp
  410c25:	pop    ss
  410c26:	cmp    BYTE PTR [ecx],al
  410c28:	xchg   edx,eax
  410c29:	mov    ebp,DWORD PTR [edi+ecx*1+0x8886782]
  410c30:	or     dh,BYTE PTR [ebp-0x22]
  410c33:	retf   
  410c34:	(bad)  
  410c35:	cwde   
  410c36:	mov    dh,0x78
  410c38:	repnz or esp,ecx
  410c3b:	mov    edi,0x60240fa0
  410c40:	dec    ecx
  410c41:	lock push edx
  410c43:	aam    0xd7
  410c45:	jle    0x410c81
  410c47:	popf   
  410c48:	jno    0x410c02
  410c4a:	dec    eax
  410c4b:	jmp    0x410cb8
  410c4d:	and    eax,0xd1aa3a1e
  410c52:	aad    0x7b
  410c54:	leave  
  410c55:	fs (bad) 
  410c57:	neg    DWORD PTR [eax+0x4d889838]
  410c5d:	pushf  
  410c5e:	arpl   WORD PTR [edx],bx
  410c60:	sbb    al,0x4c
  410c62:	mov    ah,0xad
  410c64:	sahf   
  410c65:	cmp    DWORD PTR [esi-0x2d9ea1c7],ebx
  410c6b:	outs   dx,BYTE PTR ds:[esi]
  410c6c:	ror    DWORD PTR [eax+esi*4],1
  410c6f:	je     0x410c4c
  410c71:	jp     0x410c1a
  410c73:	jl     0x410c93
  410c75:	sbb    al,BYTE PTR [eax+0x5d]
  410c78:	jmp    0x410c9b
  410c7a:	imul   ecx,ecx,0x6b
  410c7d:	iret   
  410c7e:	nop
  410c7f:	dec    esi
  410c80:	cmp    ah,BYTE PTR [eax-0x3b3554df]
  410c86:	js     0x410cd7
  410c88:	iret   
  410c89:	sub    DWORD PTR [edx+0x24edf3f0],eax
  410c8f:	or     eax,0x82b63f7b
  410c94:	inc    esp
  410c95:	jge    0x410c53
  410c97:	jns    0x410ca1
  410c99:	mov    gs,WORD PTR [ecx+0x61]
  410c9c:	jo     0x410d1d
  410c9e:	mov    ds:0xfc6d7513,al
  410ca3:	sub    esi,edi
  410ca5:	pop    esi
  410ca6:	loope  0x410c77
  410ca8:	ret    0x41f1
  410cab:	mov    esp,0x6481bc6a
  410cb0:	add    cl,BYTE PTR [eax-0x74]
  410cb3:	push   esp
  410cb4:	jmp    0x8798:0x82480ee3
  410cbb:	cs mov ecx,0x841a0b1b
  410cc1:	adc    DWORD PTR [ecx],0x6838dbdc
  410cc7:	mov    dl,0x13
  410cc9:	xchg   ecx,eax
  410cca:	in     al,0x94
  410ccc:	adc    eax,0x859c70f1
  410cd1:	shl    BYTE PTR [esi+0xc],0xb6
  410cd5:	xor    cl,BYTE PTR [esi+0x31]
  410cd8:	shl    esp,1
  410cda:	outs   dx,DWORD PTR ds:[esi]
  410cdb:	jns    0x410cec
  410cdd:	jae    0x410cff
  410cdf:	and    al,0xf0
  410ce1:	push   esp
  410ce2:	or     BYTE PTR [edi-0x78],ch
  410ce5:	in     eax,0x4e
  410ce7:	push   ecx
  410ce8:	stos   BYTE PTR es:[edi],al
  410ce9:	pop    ecx
  410cea:	outs   dx,DWORD PTR ds:[esi]
  410ceb:	or     DWORD PTR [ebx-0x2fab58e5],esp
  410cf1:	cmp    al,0x7f
  410cf3:	jns    0x410c97
  410cf5:	out    0xbf,al
  410cf7:	mov    ch,0x80
  410cfa:	pop    ss
  410cfb:	add    ebp,DWORD PTR [ebp-0x7fcd3c30]
  410d01:	and    eax,0x6564cc64
  410d06:	icebp  
  410d07:	add    edi,DWORD PTR [ecx]
  410d09:	xchg   ecx,eax
  410d0a:	dec    esp
  410d0b:	loop   0x410d23
  410d0d:	xchg   edi,eax
  410d0e:	pop    edx
  410d0f:	dec    eax
  410d10:	addr16 (bad) 
  410d12:	test   DWORD PTR ss:[eax],esp
  410d15:	adc    eax,0xd5ac87e0
  410d1a:	mov    ebp,0xa3e15652
  410d1f:	fcomp  QWORD PTR [esp+edi*4]
  410d22:	mov    bh,0x18
  410d24:	add    ah,BYTE PTR [esi+0x32bdb8ed]
  410d2a:	arpl   WORD PTR [ecx-0xa3edde5],bp
  410d30:	inc    eax
  410d31:	mov    eax,0x99a5b197
  410d36:	mov    ah,0x8c
  410d38:	dec    ebp
  410d39:	pop    eax
  410d3a:	ins    DWORD PTR es:[edi],dx
  410d3b:	imul   eax,edx,0xa17af52a
  410d41:	jb     0x410d3a
  410d43:	pop    es
  410d44:	rol    edi,cl
  410d46:	or     eax,0x7a9de93a
  410d4b:	push   0x8a25c08
  410d50:	or     edx,DWORD PTR [ebx]
  410d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d53:	jecxz  0x410d9f
  410d55:	inc    edx
  410d56:	mov    bl,0x5c
  410d58:	fidivr WORD PTR [ecx]
  410d5a:	outs   dx,BYTE PTR ds:[esi]
  410d5b:	sbb    eax,0x908b94cb
  410d60:	lahf   
  410d61:	fld    TBYTE PTR [esi]
  410d63:	push   ds
  410d64:	mov    BYTE PTR [ebx-0x3468bf8a],dl
  410d6a:	out    0x5f,al
  410d6c:	addr16 sbb cl,ch
  410d6f:	push   esi
  410d70:	std    
  410d71:	lds    esp,FWORD PTR [edx+0x2bb9fc70]
  410d77:	popf   
  410d78:	test   BYTE PTR ds:0xe6b645ce,cl
  410d7e:	dec    ebx
  410d7f:	xor    al,0xe6
  410d81:	or     al,0x8f
  410d83:	loope  0x410d0a
  410d85:	lods   al,BYTE PTR ds:[esi]
  410d86:	out    0x2,eax
  410d88:	xor    edx,DWORD PTR [ebx]
  410d8a:	xchg   esp,eax
  410d8b:	test   dh,ah
  410d8d:	sub    al,0xec
  410d8f:	jno    0x410de4
  410d91:	loop   0x410db5
  410d93:	push   eax
  410d94:	stc    
  410d95:	repnz pop esi
  410d97:	mov    esi,0x87860dd6
  410d9c:	ror    BYTE PTR [edi],cl
  410d9e:	xchg   edx,eax
  410d9f:	test   eax,edx
  410da1:	add    BYTE PTR [edi+edi*4],0xb5
  410da5:	fisub  WORD PTR [ebx+edi*2]
  410da8:	mov    al,0x8a
  410daa:	(bad)  
  410dab:	not    ecx
  410dad:	push   cs
  410dae:	iret   
  410daf:	aad    0x34
  410db1:	sub    BYTE PTR [edx*8-0x6eaff32f],bl
  410db8:	jle    0x410d55
  410dba:	jmp    0x2c1d:0x1a2d9a9f
  410dc1:	nop
  410dc2:	xor    BYTE PTR [ebx],dl
  410dc4:	xor    BYTE PTR [ebx],dl
  410dc6:	or     esi,DWORD PTR [edx]
  410dc8:	xlat   BYTE PTR ds:[ebx]
  410dc9:	mov    ds:0x9e1216fc,eax
  410dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dcf:	inc    edi
  410dd0:	stc    
  410dd1:	out    dx,al
  410dd2:	lea    esi,[edi-0x3e05baa1]
  410dd8:	sete   al
  410ddb:	mov    edi,0x1e5fb200
  410de0:	fadd   DWORD PTR [eax-0x5d2e405]
  410de6:	orps   xmm1,xmm3
  410de9:	sbb    dh,BYTE PTR [edx]
  410deb:	aaa    
  410dec:	in     al,dx
  410ded:	jo     0x410dcf
  410def:	loopne 0x410e65
  410df1:	cmc    
  410df2:	out    0xfc,al
  410df4:	retf   0xf3dd
  410df7:	pop    esp
  410df8:	adc    al,0x32
  410dfa:	in     eax,dx
  410dfb:	mov    WORD PTR [ebp+0x77],fs
  410dfe:	push   0xabe24efd
  410e03:	xor    al,0x31
  410e05:	push   eax
  410e06:	leave  
  410e07:	icebp  
  410e08:	mov    bh,0xa8
  410e0a:	mov    ecx,0xe148214d
  410e0f:	cli    
  410e10:	mul    DWORD PTR [ebx]
  410e12:	(bad)  
  410e13:	cld    
  410e14:	into   
  410e15:	sti    
  410e16:	dec    ebp
  410e17:	in     al,0x69
  410e19:	loope  0x410e4a
  410e1b:	data16 sbb BYTE PTR [edx-0x6a],ch
  410e1f:	fnsave [ecx-0x43]
  410e22:	pop    ss
  410e23:	cmp    BYTE PTR [esi],0x21
  410e26:	and    esp,esp
  410e28:	cs iret 
  410e2a:	and    BYTE PTR [ebx],ah
  410e2c:	cwde   
  410e2d:	and    eax,edx
  410e2f:	call   0xcf07:0xc830dd47
  410e36:	cmp    cl,BYTE PTR [ebp+ecx*1+0x56]
  410e3a:	jo     0x410ea2
  410e3c:	inc    ebp
  410e3d:	js     0x410e7e
  410e3f:	pop    ss
  410e40:	pop    esp
  410e41:	mov    ah,0xa1
  410e43:	rol    DWORD PTR [edi],1
  410e45:	lock nop
  410e47:	mov    ebp,0x605de5fb
  410e4c:	loopne 0x410e7f
  410e4e:	jge    0x410df8
  410e50:	jl     0x410e14
  410e52:	xchg   ebx,eax
  410e53:	fstp   QWORD PTR [eax+0x622bba0b]
  410e59:	jno    0x410e22
  410e5b:	fldln2 
  410e5d:	scas   eax,DWORD PTR es:[edi]
  410e5e:	jno    0x9990
  410e63:	sbb    ebp,ebx
  410e65:	jle    0x410e53
  410e67:	lock inc esi
  410e69:	sar    BYTE PTR [edi+0x69c6ad93],0xb3
  410e70:	test   dh,ch
  410e72:	out    dx,eax
  410e73:	jg     0x410ea6
  410e75:	sbb    al,0xbe
  410e77:	push   edi
  410e78:	(bad)  
  410e79:	mov    cl,BYTE PTR [ebp+0x7091627b]
  410e7f:	sti    
  410e80:	mov    ebp,0xe61a29aa
  410e85:	sub    ecx,DWORD PTR [edi+eiz*2]
  410e88:	jb     0x410e51
  410e8a:	and    eax,0x649d4438
  410e8f:	push   cs
  410e90:	xchg   esp,eax
  410e91:	pop    ebp
  410e92:	fadd   QWORD PTR [esi]
  410e94:	into   
  410e95:	ret    0xe821
  410e98:	loope  0x410f06
  410e9a:	or     BYTE PTR [ebx],dl
  410e9c:	push   edi
  410e9d:	and    DWORD PTR [ecx],esi
  410e9f:	sbb    ebx,0x827018d5
  410ea5:	sar    esi,cl
  410ea7:	inc    ebx
  410ea8:	xor    al,0x84
  410eaa:	push   edx
  410eab:	and    dh,BYTE PTR [edx]
  410ead:	data16 aad 0x4d
  410eb0:	mov    ah,0x93
  410eb2:	or     BYTE PTR [ecx],bl
  410eb4:	(bad)
  410eb7:	fild   QWORD PTR [eax+edi*1-0x45]
  410ebb:	mov    es,ebx
  410ebd:	loope  0x410ea0
  410ebf:	hlt    
  410ec0:	(bad)  
  410ec1:	xchg   esp,eax
  410ec2:	int    0xfb
  410ec4:	dec    edx
  410ec5:	mov    esp,0xc8e97366
  410eca:	rcr    ah,0xde
  410ecd:	in     al,dx
  410ece:	shl    BYTE PTR [edi-0x74],cl
  410ed1:	les    edi,FWORD PTR [esi+0x78]
  410ed4:	mov    ds:0xab28799e,eax
  410ed9:	fidiv  WORD PTR [ecx]
  410edb:	dec    ebx
  410edc:	and    DWORD PTR [esi+ebp*8],eax
  410edf:	jecxz  0x410e91
  410ee1:	cmp    eax,DWORD PTR [esi-0x6c]
  410ee4:	cmp    dh,BYTE PTR [ebx-0x2888f7c3]
  410eea:	into   
  410eeb:	pushf  
  410eec:	jmp    0x410f01
  410eee:	loope  0x410e74
  410ef0:	add    ebx,esi
  410ef2:	cmc    
  410ef3:	call   0x404c:0xa8af0501
  410efa:	stos   DWORD PTR es:[edi],eax
  410efb:	xor    DWORD PTR [eax],0x1c
  410efe:	mov    ebx,0xd3826811
  410f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f04:	je     0x410e9e
  410f06:	xchg   edi,eax
  410f07:	pop    esi
  410f08:	cmp    DWORD PTR [edx],0x77
  410f0b:	jne    0x410eb0
  410f0d:	push   esp
  410f0e:	dec    edi
  410f0f:	mov    ebp,0xca1fc20c
  410f14:	fmul   st(0),st
  410f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f17:	aas    
  410f18:	jg     0x410f35
  410f1a:	call   0x39c8006a
  410f1f:	bound  eax,QWORD PTR [eax-0x2bd6d57a]
  410f25:	stc    
  410f26:	cmp    dh,BYTE PTR ss:[ecx+0x56]
  410f2a:	inc    ebx
  410f2b:	pop    eax
  410f2c:	mov    ebx,0xf0868e0d
  410f31:	ss dec edx
  410f33:	es push es
  410f35:	fidivr WORD PTR [edi]
  410f37:	rol    BYTE PTR [ebp+0x63b743be],1
  410f3d:	inc    esi
  410f3e:	mov    ebx,0x6ae175a2
  410f43:	out    dx,eax
  410f44:	jle    0x410f9c
  410f46:	jg     0x410f1f
  410f48:	aaa    
  410f49:	fdivr  st,st(1)
  410f4b:	loope  0x410f41
  410f4d:	adc    BYTE PTR [ebp-0x28],bh
  410f50:	jae    0x410fbe
  410f52:	xchg   edi,eax
  410f53:	bound  ecx,QWORD PTR [esi]
  410f55:	push   es
  410f56:	mov    ah,0xe7
  410f58:	lahf   
  410f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f5a:	outs   dx,BYTE PTR ds:[esi]
  410f5b:	adc    eax,0xd22462a3
  410f60:	test   al,0x91
  410f62:	fist   DWORD PTR [eax]
  410f64:	adc    eax,0x91976f16
  410f69:	xchg   ebp,eax
  410f6a:	dec    edx
  410f6b:	stos   DWORD PTR es:[edi],eax
  410f6c:	cmp    bh,BYTE PTR [edi-0x46]
  410f6f:	pop    esi
  410f70:	xor    BYTE PTR [esi-0x6a7249b0],bh
  410f76:	adc    dl,0x58
  410f79:	and    al,0xa5
  410f7b:	in     eax,0x76
  410f7d:	arpl   WORD PTR [ebx-0x29abb500],di
  410f83:	add    al,ah
  410f85:	inc    ebx
  410f86:	das    
  410f87:	mov    cl,0x55
  410f89:	outs   dx,DWORD PTR ds:[esi]
  410f8a:	loope  0x410f1b
  410f8c:	sbb    DWORD PTR [edx-0x2b2ef641],0x666805e5
  410f96:	xchg   edi,eax
  410f97:	and    dh,BYTE PTR [ecx+0x13]
  410f9a:	cmp    BYTE PTR [edi+0x5a6de527],dh
  410fa0:	push   ecx
  410fa1:	lahf   
  410fa2:	mov    dl,BYTE PTR [ecx+ecx*8]
  410fa5:	cs xor eax,0x726ef275
  410fab:	push   ss
  410fac:	repnz push ebx
  410fae:	dec    esp
  410faf:	xchg   ecx,eax
  410fb0:	ss clc 
  410fb2:	xor    DWORD PTR [edx-0x36927c59],ebx
  410fb8:	mov    bl,0x4c
  410fba:	in     eax,dx
  410fbb:	mov    cl,ah
  410fbd:	rcl    BYTE PTR [esp+edi*8],0xba
  410fc1:	pop    ds
  410fc2:	dec    ebx
  410fc3:	cli    
  410fc4:	jmp    0x411002
  410fc6:	icebp  
  410fc7:	pop    esp
  410fc8:	loopne 0x410f94
  410fca:	xor    DWORD PTR [ebx-0x3beb9e38],ebx
  410fd0:	jns    0x410fff
  410fd2:	pushf  
  410fd3:	push   ss
  410fd4:	popa   
  410fd5:	push   ebp
  410fd6:	data16 jmp 0x410f7e
  410fd9:	cwde   
  410fda:	inc    edx
  410fdb:	mov    ebp,0xe15c9eb4
  410fe0:	cmp    DWORD PTR [ebx-0x279633f0],0x66
  410fe7:	mov    esp,0x2743393a
  410fec:	push   ebp
  410fed:	scas   al,BYTE PTR es:[edi]
  410fee:	lods   al,BYTE PTR ds:[esi]
  410fef:	fs stos DWORD PTR es:[edi],eax
  410ff1:	leave  
  410ff2:	xor    eax,0x8c41a840
  410ff7:	into   
  410ff8:	push   ecx
  410ff9:	pop    edx
  410ffa:	mov    cl,0xd5
  410ffc:	cs retf 0x6f61
  411000:	and    eax,0xbabbfb53
  411005:	data16 loop 0x411020
  411008:	in     eax,dx
  411009:	jbe    0x411074
  41100b:	sbb    DWORD PTR [ebx-0x2cc72d26],edx
  411011:	cmp    bl,bl
  411013:	stc    
  411014:	data16 rcl BYTE PTR [eax],0x56
  411018:	push   ecx
  411019:	sti    
  41101a:	fsub   QWORD PTR [edi-0x768343fa]
  411020:	mov    bh,0xa9
  411022:	stos   DWORD PTR es:[edi],eax
  411023:	xor    DWORD PTR ds:0x365fdb26,edx
  411029:	retf   0x1276
  41102c:	mov    ch,0xbd
  41102e:	xchg   ecx,eax
  41102f:	push   edi
  411030:	adc    bh,al
  411032:	adc    eax,0x14c0ba44
  411037:	jl     0x41103a
  411039:	outs   dx,DWORD PTR ds:[esi]
  41103a:	sub    ch,dl
  41103c:	xor    ebx,DWORD PTR [edi]
  41103e:	outs   dx,BYTE PTR ds:[esi]
  41103f:	inc    esp
  411040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411041:	adc    al,dl
  411043:	std    
  411044:	(bad)  
  411045:	xchg   esp,eax
  411046:	ficomp WORD PTR [ebp-0x4e9372e9]
  41104c:	mov    eax,ds:0xd5a52c75
  411051:	imul   ecx,DWORD PTR [eax-0x176a1883],0x2bf6cf34
  41105b:	mov    edi,0x2b731554
  411060:	pop    edi
  411061:	cmp    eax,0x34435eb
  411066:	mov    esp,0x9401b630
  41106b:	ss jmp 0x8c88c394
  411071:	ret    0x1f9a
  411074:	outs   dx,DWORD PTR ds:[esi]
  411075:	cli    
  411076:	int3   
  411077:	cld    
  411078:	adc    BYTE PTR [eax+0x4f],ch
  41107b:	in     al,dx
  41107c:	jo     0x4110f6
  41107e:	cs adc edi,ebx
  411081:	daa    
  411082:	out    0x2d,al
  411084:	arpl   cx,cx
  411086:	add    DWORD PTR [ecx-0x55],esp
  411089:	cli    
  41108a:	cmp    al,0xf6
  41108c:	push   cs
  41108d:	pusha  
  41108e:	dec    esp
  41108f:	sbb    esp,esp
  411091:	scas   al,BYTE PTR es:[edi]
  411092:	imul   esi,ebx,0x6
  411095:	(bad)  
  411096:	pusha  
  411097:	scas   eax,DWORD PTR es:[edi]
  411098:	div    BYTE PTR [edx-0x77179829]
  41109e:	and    al,0xaf
  4110a0:	jecxz  0x4110c8
  4110a2:	daa    
  4110a3:	dec    ebx
  4110a4:	add    DWORD PTR [esi+0x7d],esi
  4110a7:	cmp    ecx,DWORD PTR [edx+eiz*4]
  4110aa:	scas   eax,DWORD PTR es:[edi]
  4110ab:	pusha  
  4110ac:	test   eax,0x8d36c9ba
  4110b1:	sar    DWORD PTR [edi],cl
  4110b3:	shl    bl,1
  4110b5:	and    al,0x89
  4110b7:	or     eax,0xfcf5e326
  4110bc:	shl    BYTE PTR [edx+0x64],cl
  4110bf:	(bad)  
  4110c1:	sub    dh,BYTE PTR [edx+ebp*1]
  4110c4:	cmp    eax,0xb89a8fd9
  4110c9:	in     al,0xc4
  4110cb:	push   ecx
  4110cc:	into   
  4110cd:	sbb    BYTE PTR [ecx+edi*2],bl
  4110d0:	test   al,0xd6
  4110d2:	adc    BYTE PTR [edi-0x196a8569],dh
  4110d8:	outs   dx,DWORD PTR ds:[esi]
  4110d9:	out    dx,al
  4110da:	mov    esp,0x2cab3596
  4110df:	adc    eax,0xb04239c0
  4110e4:	icebp  
  4110e5:	lea    eax,[ebx+0x52d3e99d]
  4110eb:	call   0xd37c:0x85eceb44
  4110f2:	cwde   
  4110f3:	mov    esi,0x6b2fb4c5
  4110f8:	mov    bl,0x64
  4110fa:	jmp    0xcd65:0x39eedeb
  411101:	pop    ds
  411102:	mov    ah,0xd9
  411104:	inc    esp
  411105:	xchg   ebx,eax
  411106:	fistp  WORD PTR [edx+0x53]
  411109:	sahf   
  41110a:	jle    0x411180
  41110c:	jmp    0x62d347f8
  411111:	out    0x4e,eax
  411113:	aaa    
  411114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411115:	call   eax
  411117:	outs   dx,DWORD PTR ds:[esi]
  411118:	or     eax,0x6e882013
  41111d:	sub    BYTE PTR [ebx-0x2f],al
  411120:	shl    BYTE PTR [ebp+0x6],cl
  411123:	and    eax,0xa89ec3ea
  411128:	fld    TBYTE PTR [edi+0x2cab0498]
  41112e:	sbb    bh,BYTE PTR [edi+eax*8+0x70d0fff6]
  411135:	icebp  
  411136:	lahf   
  411137:	pop    esi
  411138:	xchg   edi,eax
  411139:	fild   DWORD PTR [ebx+0x62e04be2]
  41113f:	mov    dh,0x53
  411141:	shl    ebx,cl
  411143:	div    DWORD PTR [edi+ebx*4-0x18]
  411147:	mov    esp,0xef32e151
  41114c:	sub    dl,bl
  41114e:	sbb    cl,bh
  411150:	mov    edi,0xca4b3bf3
  411155:	ds dec eax
  411157:	popa   
  411158:	or     ah,BYTE PTR [eax+0x1b9c41a2]
  41115e:	add    DWORD PTR [edi],0x45
  411161:	cmc    
  411162:	mov    ebp,0x615842ad
  411167:	sti    
  411168:	sub    eax,0x6c178ee5
  41116d:	aaa    
  41116e:	mov    ecx,0xfad236ee
  411173:	push   ecx
  411174:	push   edx
  411175:	data16 in al,0x80
  411178:	mul    BYTE PTR [edx]
  41117a:	pop    eax
  41117b:	jbe    0x41111c
  41117d:	xor    ebx,DWORD PTR [ecx+0x37b75097]
  411183:	in     al,0x5d
  411185:	lahf   
  411186:	dec    esp
  411187:	cld    
  411188:	lock mov ebx,0xe1dd785
  41118e:	mov    DWORD PTR [edx+0x60],ecx
  411191:	(bad)  
  411192:	lahf   
  411193:	sahf   
  411194:	cld    
  411195:	sub    DWORD PTR [ebp+0x182c28b4],edi
  41119b:	sub    esi,DWORD PTR [ebx-0x31]
  41119e:	dec    esp
  41119f:	fistp  DWORD PTR gs:[edi+0x14113030]
  4111a6:	xchg   edi,eax
  4111a7:	mov    esp,DWORD PTR [eax+0x339e6ed7]
  4111ad:	gs sbb al,0x6a
  4111b0:	adc    edi,DWORD PTR [ebp*8+0x6e41d646]
  4111b7:	fild   QWORD PTR [esi]
  4111b9:	adc    al,0x6f
  4111bb:	pandn  mm5,mm1
  4111be:	dec    ecx
  4111bf:	jl     0x4111f3
  4111c1:	jmp    0x411168
  4111c3:	xchg   ecx,eax
  4111c4:	dec    esp
  4111c5:	mov    ds:0x305b7c6e,al
  4111ca:	in     al,0x32
  4111cc:	jl     0x411224
  4111ce:	xor    ah,BYTE PTR [esi-0x2e58e8a0]
  4111d4:	call   FWORD PTR [edi-0x55]
  4111d7:	aam    0xd6
  4111d9:	sub    al,0x19
  4111db:	fild   QWORD PTR [eax-0x67cf3235]
  4111e1:	push   edx
  4111e2:	setae  BYTE PTR [ebx+0x62071784]
  4111e9:	loop   0x41122c
  4111eb:	ret    0x5047
  4111ee:	dec    edx
  4111ef:	adc    al,0x2b
  4111f1:	outs   dx,DWORD PTR ds:[esi]
  4111f2:	mov    esp,DWORD PTR gs:[esi-0xc]
  4111f6:	pop    ebp
  4111f7:	lods   al,BYTE PTR ds:[esi]
  4111f8:	das    
  4111f9:	aaa    
  4111fa:	scas   eax,DWORD PTR es:[edi]
  4111fb:	jae    0x411226
  4111fd:	lds    ebx,FWORD PTR [ecx]
  4111ff:	push   esi
  411200:	call   ebp
  411202:	sbb    dh,BYTE PTR [ebx-0x80]
  411205:	and    ebx,DWORD PTR [ecx-0x5b]
  411208:	adc    eax,0x78809b52
  41120d:	mov    esi,DWORD PTR ds:0x74b8d228
  411213:	inc    edx
  411214:	mov    ch,0x9d
  411216:	xor    ah,dh
  411218:	mov    esi,0x465f5421
  41121d:	mov    ah,0x3c
  41121f:	je     0x4111f3
  411221:	adc    eax,0x2103814e
  411226:	mov    ds:0x712280f2,al
  41122b:	inc    edx
  41122c:	arpl   WORD PTR [ebx+0x41a7d854],dx
  411232:	push   cs
  411233:	dec    edi
  411234:	or     al,0xa9
  411236:	cs push ecx
  411238:	push   eax
  411239:	add    al,0x66
  41123b:	mov    cs,WORD PTR [ebx-0x586ab4d2]
  411241:	out    0x42,eax
  411243:	mov    es,WORD PTR [eax+0x1a]
  411246:	ins    BYTE PTR es:[edi],dx
  411247:	dec    esi
  411248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411249:	inc    edi
  41124a:	jge    0x4111fc
  41124c:	sbb    BYTE PTR [ebx+eiz*4-0x65f44639],al
  411253:	dec    eax
  411254:	pop    esp
  411255:	addr16 in eax,dx
  411257:	mov    dl,0x5c
  411259:	aas    
  41125a:	and    bl,BYTE PTR [esi+0x72]
  41125d:	dec    ebx
  41125e:	test   eax,0xae34088b
  411263:	jmp    0x7707:0xdd95d340
  41126a:	lea    ebx,[ebx]
  41126c:	adc    ecx,DWORD PTR ds:0xa534fead
  411272:	push   ds
  411273:	les    ebp,FWORD PTR [ebx]
  411275:	out    dx,al
  411276:	es int 0x77
  411279:	jbe    0x411258
  41127b:	xchg   ecx,eax
  41127c:	mov    dh,0xe4
  41127e:	xchg   edi,eax
  41127f:	repnz sbb ebp,esp
  411282:	in     eax,dx
  411283:	mov    bh,0x30
  411285:	or     BYTE PTR [ebx-0x5fc03bb],0x39
  41128c:	cmp    BYTE PTR [ebx+0x7d8bfc45],cl
  411292:	adc    BYTE PTR [edi],cl
  411294:	(bad)  
  411295:	or     eax,0x33000000
  41129a:	stc    
  41129b:	mov    ebx,esi
  41129d:	sub    ebx,edi
  41129f:	add    DWORD PTR [eax],ebx
  4112a1:	jmp    0x4112ac
  4112a6:	xor    edi,ecx
  4112a8:	add    edi,edx
  4112aa:	add    DWORD PTR [eax],edi
  4112ac:	mov    eax,DWORD PTR [ebp-0x8]
  4112af:	mov    edi,DWORD PTR [ebp-0x10]
  4112b2:	mov    eax,DWORD PTR [eax]
  4112b4:	xor    edi,ecx
  4112b6:	add    edi,0x3272df
  4112bc:	not    edi
  4112be:	and    eax,edi
  4112c0:	movsx  di,BYTE PTR [eax+0x1]
  4112c5:	mov    ebx,0x3b50
  4112ca:	sub    di,bx
  4112cd:	mov    ebx,0x8a8c
  4112d2:	xor    di,bx
  4112d5:	mov    ebx,0x4f86
  4112da:	cmp    di,bx
  4112dd:	jne    0x411305
  4112e3:	movsx  di,BYTE PTR [eax]
  4112e7:	mov    ebx,0x3b50
  4112ec:	sub    di,bx
  4112ef:	mov    ebx,0x8a8c
  4112f4:	xor    di,bx
  4112f7:	mov    ebx,0x4e71
  4112fc:	cmp    di,bx
  4112ff:	je     0x411315
  411305:	mov    edi,DWORD PTR [ebp-0x10]
  411308:	xor    edi,ecx
  41130a:	mov    ebx,esi
  41130c:	sub    ebx,edi
  41130e:	add    eax,ebx
  411310:	jmp    0x4112c0
  411315:	mov    esi,DWORD PTR [ebp-0x14]
  411318:	mov    esi,DWORD PTR [esi]
  41131a:	mov    edi,DWORD PTR [eax+0x3c]
  41131d:	lea    esi,[edi+esi*8+0x78]
  411321:	mov    esi,DWORD PTR [esi+eax*1]
  411324:	mov    DWORD PTR [ebp-0x8],esi
  411327:	mov    esi,DWORD PTR [ebp+0x8]
  41132a:	xor    esi,ecx
  41132c:	add    esi,edx
  41132e:	mov    DWORD PTR [ebp-0x14],esi
  411331:	mov    esi,DWORD PTR [ebp+0x8]
  411334:	mov    edi,DWORD PTR [ebp-0x8]
  411337:	xor    esi,ecx
  411339:	add    esi,edx
  41133b:	pop    ebx
  41133c:	cmp    edi,esi
  41133e:	jne    0x41135c
  411344:	mov    eax,DWORD PTR [ebp+0xc]
  411347:	xor    eax,ecx
  411349:	mov    ecx,DWORD PTR [ebp-0x8]
  41134c:	add    eax,edx
  41134e:	imul   eax,ecx
  411351:	mov    DWORD PTR [ebp-0x8],eax
  411354:	push   DWORD PTR [ebp+0x18]
  411357:	jmp    0x4113b0
  41135c:	mov    ecx,DWORD PTR [ebp-0x8]
  41135f:	add    ecx,eax
  411361:	mov    DWORD PTR [ebp-0x14],ecx
  411364:	mov    ecx,DWORD PTR [ebp-0x14]
  411367:	mov    ecx,DWORD PTR [ecx+0xc]
  41136a:	movsx  cx,BYTE PTR [ecx+eax*1]
  41136f:	mov    edx,0x3b50
  411374:	sub    cx,dx
  411377:	mov    edx,0x8a8c
  41137c:	xor    cx,dx
  41137f:	mov    edx,0x4e77
  411384:	cmp    cx,dx
  411387:	jne    0x411354
  41138d:	mov    ecx,DWORD PTR ds:0x42e42f
  411393:	mov    ecx,DWORD PTR [ecx+0x198]
  411399:	mov    DWORD PTR [ecx],eax
  41139b:	jmp    0x4113c1
  4113a0:	mov    ecx,DWORD PTR [ebp+0x18]
  4113a3:	cmp    ecx,0xf89c85b8
  4113a9:	jne    0x4113c1
  4113af:	push   eax
  4113b0:	push   DWORD PTR [ebp+0x14]
  4113b3:	push   DWORD PTR [ebp+0x10]
  4113b6:	push   DWORD PTR [ebp+0xc]
  4113b9:	push   DWORD PTR [ebp+0x8]
  4113bc:	call   0x40c765
  4113c1:	pop    edi
  4113c2:	pop    esi
  4113c3:	leave  
  4113c4:	ret    0x14
  4113c7:	push   ebp
  4113c8:	mov    ebp,esp
  4113ca:	sub    esp,0xc
  4113cd:	push   esi
  4113ce:	mov    ecx,DWORD PTR ds:0x424be4
  4113d4:	mov    esi,DWORD PTR ds:0x424c00
  4113da:	sub    esi,ecx
  4113dc:	and    ecx,DWORD PTR [ecx+esi*1]
  4113df:	mov    esi,0xf89c85b9
  4113e4:	or     DWORD PTR ds:0x42a01c,0x3fe4
  4113ee:	mov    DWORD PTR [ebp-0x8],esi
  4113f1:	xor    ecx,ecx
  4113f3:	xor    ecx,DWORD PTR ds:0x424bec
  4113f9:	xor    edx,edx
  4113fb:	add    edx,DWORD PTR ds:0x424bf8
  411401:	sub    ecx,edx
  411403:	imul   ecx,DWORD PTR [ecx+edx*1]
  411407:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41140e:	add    edx,ecx
  411410:	push   edi
  411411:	adc    edx,DWORD PTR ds:0x42c010
  411417:	mov    eax,eax
  411419:	mov    eax,DWORD PTR [ebp-0x4]
  41141c:	xor    ecx,ecx
  41141e:	or     ecx,DWORD PTR ds:0x429004
  411424:	adc    ecx,DWORD PTR ds:0x42a008
  41142a:	mov    DWORD PTR ds:0x429004,ecx
  411430:	mov    edi,DWORD PTR [ebp-0x8]
  411433:	or     edx,ecx
  411435:	mov    ecx,0x7510899
  41143a:	xor    eax,ecx
  41143c:	and    DWORD PTR ds:0x42d004,0x0
  411446:	jmp    0x411458
  41144b:	mov    edx,DWORD PTR ds:0x42d004
  411451:	inc    edx
  411452:	mov    DWORD PTR ds:0x42d004,edx
  411458:	cmp    DWORD PTR ds:0x42d004,0x10
  41145f:	jae    0x41148d
  411465:	cmp    DWORD PTR ds:0x42d004,0x19
  41146c:	jne    0x411482
  411472:	push   0x42b014
  411477:	push   0x42e205
  41147c:	call   DWORD PTR ds:0x42ed6f
  411482:	jmp    0x41144b
  411487:	add    DWORD PTR ds:0x429010,ebx
  41148d:	xor    edi,ecx
  41148f:	add    DWORD PTR ds:0x42c010,0x42b008
  411499:	mov    edx,0x3272e0
  41149e:	add    DWORD PTR ds:0x42a00c,0x429024
  4114a8:	add    edi,edx
  4114aa:	sbb    DWORD PTR ds:0x42c00c,0x42c008
  4114b4:	add    eax,edx
  4114b6:	add    DWORD PTR ds:0x429014,0x42901c
  4114c0:	imul   eax,edi
  4114c3:	mov    DWORD PTR ds:0x429020,0x6d85
  4114cd:	mov    edi,DWORD PTR [ebp+0xc]
  4114d0:	mov    DWORD PTR ds:0x42a004,0x5a66
  4114da:	cmp    edi,eax
  4114dc:	je     0x411531
  4114e2:	mov    DWORD PTR [ebp-0xc],esi
  4114e5:	mov    eax,DWORD PTR [ebp-0xc]
  4114e8:	mov    esi,DWORD PTR [ebp+0xc]
  4114eb:	xor    eax,ecx
  4114ed:	lea    eax,[eax*8+0x1939778]
  4114f4:	mov    eax,DWORD PTR [esi+eax*1]
  4114f7:	mov    DWORD PTR [ebp+0xc],eax
  4114fa:	mov    eax,DWORD PTR [ebp-0x4]
  4114fd:	mov    esi,DWORD PTR [ebp-0x8]
  411500:	xor    eax,ecx
  411502:	xor    esi,ecx
  411504:	add    esi,edx
  411506:	add    eax,edx
  411508:	imul   eax,esi
  41150b:	mov    esi,DWORD PTR [ebp+0xc]
  41150e:	cmp    esi,eax
  411510:	je     0x411531
  411516:	mov    eax,DWORD PTR [ebp-0x4]
  411519:	xor    eax,ecx
  41151b:	mov    ecx,DWORD PTR [ebp+0xc]
  41151e:	add    eax,edx
  411520:	imul   eax,ecx
  411523:	add    eax,DWORD PTR [ebp+0x8]
  411526:	mov    DWORD PTR [ebp+0xc],eax
  411529:	mov    eax,DWORD PTR [ebp+0xc]
  41152c:	jmp    0x411542
  411531:	mov    eax,DWORD PTR [ebp-0x4]
  411534:	mov    esi,DWORD PTR [ebp-0x8]
  411537:	xor    esi,ecx
  411539:	xor    eax,ecx
  41153b:	add    esi,edx
  41153d:	add    eax,edx
  41153f:	imul   eax,esi
  411542:	pop    edi
  411543:	pop    esi
  411544:	leave  
  411545:	ret    0x8
  411548:	push   ebp
  411549:	mov    ebp,esp
  41154b:	push   ecx
  41154c:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411553:	mov    eax,DWORD PTR [ebp-0x4]
  411556:	and    edx,0x4ee2
  41155c:	mov    edx,DWORD PTR [ebp+0x10]
  41155f:	and    DWORD PTR ds:0x42c01c,0x0
  411569:	mov    ecx,DWORD PTR ds:0x42c01c
  41156f:	inc    ecx
  411570:	mov    DWORD PTR ds:0x42c01c,ecx
  411576:	cmp    DWORD PTR ds:0x42c01c,0x10
  41157d:	jne    0x41158e
  411583:	push   0x42e042
  411588:	call   DWORD PTR ds:0x42ed73
  41158e:	cmp    DWORD PTR ds:0x42c01c,0xf
  411595:	jne    0x4115a8
  41159b:	mov    ecx,DWORD PTR ds:0x42c01c
  4115a1:	inc    ecx
  4115a2:	mov    DWORD PTR ds:0x42c01c,ecx
  4115a8:	cmp    DWORD PTR ds:0x42c01c,0x1c
  4115af:	jb     0x411569
  4115b5:	mov    ecx,0x7510899
  4115ba:	adc    DWORD PTR ds:0x42a000,0x42c010
  4115c4:	xor    eax,ecx
  4115c6:	sbb    DWORD PTR ds:0x429018,0x70b
  4115d0:	add    eax,0x3272e0
  4115d5:	mov    DWORD PTR [edx],eax
  4115d7:	mov    edx,DWORD PTR ds:0x429000
  4115dd:	add    DWORD PTR ds:0x42d01c,edx
  4115e3:	mov    eax,DWORD PTR [ebp+0xc]
  4115e6:	and    DWORD PTR ds:0x42a008,0x0
  4115f0:	mov    edx,DWORD PTR ds:0x42a008
  4115f6:	inc    edx
  4115f7:	mov    DWORD PTR ds:0x42a008,edx
  4115fd:	cmp    DWORD PTR ds:0x42a008,0x6
  411604:	jne    0x411613
  41160a:	push   DWORD PTR [ebp-0x24]
  41160d:	call   DWORD PTR ds:0x42ed77
  411613:	cmp    DWORD PTR ds:0x42a008,0x5
  41161a:	jne    0x41162d
  411620:	mov    edx,DWORD PTR ds:0x42a008
  411626:	inc    edx
  411627:	mov    DWORD PTR ds:0x42a008,edx
  41162d:	cmp    DWORD PTR ds:0x42a008,0x1c
  411634:	jb     0x4115f0
  41163a:	xor    eax,ecx
  41163c:	push   esi
  41163d:	mov    esi,DWORD PTR [ebp+0x10]
  411640:	mov    edx,0x3272e0
  411645:	add    eax,edx
  411647:	mov    DWORD PTR [esi+0x4],eax
  41164a:	mov    eax,DWORD PTR [ebp+0x14]
  41164d:	mov    esi,DWORD PTR [ebp+0x10]
  411650:	mov    DWORD PTR [esi+0x8],eax
  411653:	mov    eax,DWORD PTR [ebp+0x18]
  411656:	mov    esi,DWORD PTR [ebp+0x10]
  411659:	mov    DWORD PTR [esi+0xc],eax
  41165c:	mov    eax,DWORD PTR [ebp+0x1c]
  41165f:	mov    esi,DWORD PTR [ebp+0x10]
  411662:	mov    DWORD PTR [esi+0x10],eax
  411665:	mov    eax,DWORD PTR [ebp+0x8]
  411668:	xor    eax,ecx
  41166a:	add    eax,edx
  41166c:	pop    esi
  41166d:	leave  
  41166e:	ret    0x18
  411671:	push   ebp
  411672:	mov    ebp,esp
  411674:	sub    esp,0x98
  41167a:	xor    ecx,eax
  41167c:	mov    ecx,DWORD PTR [ebp+0x8]
  41167f:	adc    DWORD PTR ds:0x42b004,0x2788
  411689:	mov    eax,0x8a8c
  41168e:	sub    DWORD PTR ds:0x42d01c,0x61b3
  411698:	xor    ax,WORD PTR [ecx+0x20]
  41169c:	mov    ecx,0x3b50
  4116a1:	xor    DWORD PTR ds:0x42c000,0x42b00c
  4116ab:	add    ax,cx
  4116ae:	movzx  ecx,BYTE PTR ds:0x42b010
  4116b5:	sub    DWORD PTR ds:0x42d008,ecx
  4116bb:	movzx  eax,ax
  4116be:	mov    DWORD PTR [ebp-0x14],eax
  4116c1:	mov    ecx,DWORD PTR ds:0x42b010
  4116c7:	add    DWORD PTR ds:0x42901c,ecx
  4116cd:	mov    BYTE PTR [ebp-0x1],0x79
  4116d1:	lea    eax,[ebp-0x1]
  4116d4:	mov    ecx,DWORD PTR ds:0x42b010
  4116da:	xor    ecx,DWORD PTR ds:0x42c000
  4116e0:	mov    DWORD PTR ds:0x42b010,ecx
  4116e6:	mov    DWORD PTR [ebp-0xc],eax
  4116e9:	and    DWORD PTR ds:0x429010,0x6b4e
  4116f3:	mov    al,BYTE PTR [ebp-0x1]
  4116f6:	sbb    DWORD PTR ds:0x42d000,edi
  4116fc:	mov    ecx,DWORD PTR [ebp-0xc]
  4116ff:	xor    al,0x73
  411701:	or     DWORD PTR ds:0x42a010,0x38
  41170b:	sub    al,0x9
  41170d:	adc    DWORD PTR ds:0x42c010,0x42a004
  411717:	mov    BYTE PTR [ecx],al
  411719:	mov    DWORD PTR ds:0x42c018,0x13
  411723:	cmp    DWORD PTR ds:0x42c018,0x0
  41172a:	je     0x4117ef
  411730:	cmp    DWORD PTR ds:0x42c018,0x22
  411737:	jne    0x411752
  41173d:	push   0x42e199
  411742:	push   0x42e23b
  411747:	push   0x544c
  41174c:	call   DWORD PTR ds:0x42ed83
  411752:	mov    eax,ds:0x42c018
  411757:	dec    eax
  411758:	mov    ds:0x42c018,eax
  41175d:	jmp    0x411723
  411762:	mov    DWORD PTR ds:0x42b004,0x11
  41176c:	cmp    DWORD PTR ds:0x42b004,0x0
  411773:	je     0x4117ef
  411779:	cmp    DWORD PTR ds:0x42b004,0x21
  411780:	jne    0x41178c
  411786:	call   DWORD PTR ds:0x42ed87
  41178c:	mov    ecx,DWORD PTR ds:0x42b004
  411792:	dec    ecx
  411793:	mov    DWORD PTR ds:0x42b004,ecx
  411799:	jmp    0x41176c
  41179e:	mov    DWORD PTR ds:0x42a004,0x1f
  4117a8:	cmp    DWORD PTR ds:0x42a004,0x0
  4117af:	je     0x4117ef
  4117b5:	cmp    DWORD PTR ds:0x42a004,0x28
  4117bc:	jne    0x4117d3
  4117c2:	push   DWORD PTR [ebp-0x14]
  4117c5:	push   0x42c008
  4117ca:	push   DWORD PTR [ebp-0x10]
  4117cd:	call   DWORD PTR ds:0x42ed8b
  4117d3:	mov    ecx,DWORD PTR ds:0x42a004
  4117d9:	dec    ecx
  4117da:	mov    DWORD PTR ds:0x42a004,ecx
  4117e0:	jmp    0x4117a8
  4117e5:	and    DWORD PTR ds:0x42c00c,0x3b9a
  4117ef:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  4117f6:	and    DWORD PTR ds:0x42a000,0x0
  411800:	jmp    0x411812
  411805:	mov    ecx,DWORD PTR ds:0x42a000
  41180b:	inc    ecx
  41180c:	mov    DWORD PTR ds:0x42a000,ecx
  411812:	cmp    DWORD PTR ds:0x42a000,0x18
  411819:	jae    0x41185e
  41181f:	cmp    DWORD PTR ds:0x42a000,0x9
  411826:	jne    0x41183f
  41182c:	push   0x42e199
  411831:	push   DWORD PTR [ebp-0x20]
  411834:	push   0x603c
  411839:	call   DWORD PTR ds:0x42ed8f
  41183f:	cmp    DWORD PTR ds:0x42a000,0x8
  411846:	jne    0x411859
  41184c:	mov    ecx,DWORD PTR ds:0x42a000
  411852:	inc    ecx
  411853:	mov    DWORD PTR ds:0x42a000,ecx
  411859:	jmp    0x411805
  41185e:	push   ebx
  41185f:	mov    ecx,DWORD PTR ds:0x42a000
  411865:	xor    DWORD PTR ds:0x42b004,ecx
  41186b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  411872:	xor    eax,eax
  411874:	xor    eax,DWORD PTR ds:0x429020
  41187a:	or     DWORD PTR ds:0x42c018,eax
  411880:	mov    ecx,DWORD PTR [ebp-0x18]
  411883:	adc    DWORD PTR ds:0x42d008,ecx
  411889:	push   esi
  41188a:	add    esi,DWORD PTR ds:0x42d000
  411890:	mov    eax,0x7510899
  411895:	add    DWORD PTR ds:0x42a01c,edi
  41189b:	xor    ecx,eax
  41189d:	mov    esi,0x3272e0
  4118a2:	mov    DWORD PTR ds:0x42b01c,0x49a5
  4118ac:	push   edi
  4118ad:	add    ecx,esi
  4118af:	jmp    0x4118c9
  4118b4:	mov    dl,BYTE PTR [ebp-0x1]
  4118b7:	mov    DWORD PTR ds:0x42d008,0x2685
  4118c1:	mov    BYTE PTR [ebp+ecx*1-0x98],dl
  4118c8:	inc    ecx
  4118c9:	cmp    ecx,0x40
  4118cc:	mov    DWORD PTR ds:0x429020,0x4a16
  4118d6:	jb     0x4118b4
  4118dc:	mov    DWORD PTR ds:0x42c008,0x3563
  4118e6:	mov    edx,DWORD PTR [ebp-0x18]
  4118e9:	add    DWORD PTR ds:0x42d014,0x7c84
  4118f3:	xor    edx,eax
  4118f5:	xor    DWORD PTR ds:0x42d00c,0x42d010
  4118ff:	add    edx,esi
  411901:	jmp    0x4119b0
  411906:	mov    DWORD PTR ds:0x42c014,0x1e
  411910:	cmp    DWORD PTR ds:0x42c014,0x0
  411917:	je     0x411953
  41191d:	cmp    DWORD PTR ds:0x42c014,0x21
  411924:	jne    0x411933
  41192a:	push   DWORD PTR [ebp-0x20]
  41192d:	call   DWORD PTR ds:0x42ed4f
  411933:	xor    edi,edi
  411935:	xor    edi,DWORD PTR ds:0x42c014
  41193b:	dec    edi
  41193c:	mov    DWORD PTR ds:0x42c014,edi
  411942:	jmp    0x411910
  411947:	mov    edi,DWORD PTR ds:0x42b008
  41194d:	sbb    DWORD PTR ds:0x42a004,edi
  411953:	mov    edi,DWORD PTR [ebp+0x8]
  411956:	sbb    DWORD PTR ds:0x42901c,0x7b78
  411960:	mov    ecx,0x8a8c
  411965:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41196a:	or     DWORD PTR ds:0x429020,0x232e
  411974:	mov    edi,0x3b50
  411979:	add    DWORD PTR ds:0x42c010,0x42b010
  411983:	add    cx,di
  411986:	movzx  ecx,cx
  411989:	mov    DWORD PTR [ebp-0xc],ecx
  41198c:	mov    ecx,DWORD PTR [ebp+0x8]
  41198f:	sub    DWORD PTR ds:0x42c000,0x42c00c
  411999:	movzx  ecx,WORD PTR [ecx+edx*4]
  41199d:	xor    ecx,0x8a8c
  4119a3:	add    ecx,edi
  4119a5:	mov    edi,DWORD PTR [ebp-0xc]
  4119a8:	mov    BYTE PTR [ebp+edi*1-0x98],cl
  4119af:	inc    edx
  4119b0:	not    ecx
  4119b2:	mov    ecx,DWORD PTR [ebp-0x14]
  4119b5:	mov    DWORD PTR ds:0x42d008,0x3da8
  4119bf:	cmp    edx,ecx
  4119c1:	mov    DWORD PTR ds:0x42b00c,0x9ea
  4119cb:	jne    0x411906
  4119d1:	mov    ecx,DWORD PTR [ebp-0x18]
  4119d4:	mov    edx,DWORD PTR [ebp+0x10]
  4119d7:	xor    ecx,eax
  4119d9:	add    ecx,esi
  4119db:	mov    DWORD PTR [edx],ecx
  4119dd:	sbb    ecx,DWORD PTR ds:0x42b01c
  4119e3:	mov    ecx,DWORD PTR [ebp-0x18]
  4119e6:	xor    ecx,eax
  4119e8:	add    ecx,esi
  4119ea:	and    DWORD PTR ds:0x429014,0x0
  4119f4:	xor    edi,edi
  4119f6:	xor    edi,DWORD PTR ds:0x429014
  4119fc:	inc    edi
  4119fd:	mov    DWORD PTR ds:0x429014,edi
  411a03:	cmp    DWORD PTR ds:0x429014,0x1b
  411a0a:	jne    0x411a22
  411a10:	push   0x42e0a2
  411a15:	push   0x0
  411a17:	push   0x1
  411a19:	push   DWORD PTR [ebp-0x10]
  411a1c:	call   DWORD PTR ds:0x42ed53
  411a22:	cmp    DWORD PTR ds:0x429014,0x18
  411a29:	jb     0x4119f4
  411a2f:	sub    edi,DWORD PTR ds:0x429024
  411a35:	mov    DWORD PTR [ebp-0xc],ecx
  411a38:	adc    DWORD PTR ds:0x429000,0x3601
  411a42:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  411a49:	mov    DWORD PTR [ebp-0x10],0xf89c85a9
  411a50:	sbb    ecx,ecx
  411a52:	mov    DWORD PTR [ebp-0x14],0xf89c95b9
  411a59:	add    ecx,ecx
  411a5b:	mov    ecx,DWORD PTR [ebp-0x10]
  411a5e:	and    DWORD PTR ds:0x42a018,0x0
  411a68:	mov    edi,DWORD PTR ds:0x42a018
  411a6e:	inc    edi
  411a6f:	mov    DWORD PTR ds:0x42a018,edi
  411a75:	cmp    DWORD PTR ds:0x42a018,0xa
  411a7c:	jne    0x411a8d
  411a82:	push   0x42e205
  411a87:	call   DWORD PTR ds:0x42ed57
  411a8d:	cmp    DWORD PTR ds:0x42a018,0x9
  411a94:	jne    0x411aa9
  411a9a:	xor    edi,edi
  411a9c:	or     edi,DWORD PTR ds:0x42a018
  411aa2:	inc    edi
  411aa3:	mov    DWORD PTR ds:0x42a018,edi
  411aa9:	cmp    DWORD PTR ds:0x42a018,0x17
  411ab0:	jb     0x411a68
  411ab6:	mov    edi,DWORD PTR ds:0x42d014
  411abc:	sbb    DWORD PTR ds:0x42c018,edi
  411ac2:	mov    DWORD PTR [ebp+0x8],ecx
  411ac5:	or     ecx,0x1035
  411acb:	mov    ecx,DWORD PTR [ebp+0x8]
  411ace:	xor    ecx,eax
  411ad0:	inc    edi
  411ad1:	add    ecx,esi
  411ad3:	mov    DWORD PTR ds:0x42900c,edx
  411ad9:	mov    ecx,0x242ebed
  411ade:	mov    edi,0xf641bea
  411ae3:	je     0x41f655
  411ae9:	mov    edx,DWORD PTR [ebp+0x8]
  411aec:	mov    ebx,DWORD PTR [ebp-0x8]
  411aef:	xor    edx,eax
  411af1:	jmp    0x413e7a
  411af6:	aas    
  411af7:	xor    esp,DWORD PTR [ecx]
  411af9:	es cmc 
  411afb:	hlt    
  411afc:	and    edi,DWORD PTR [ebx]
  411afe:	sbb    al,0xe
  411b00:	icebp  
  411b01:	in     eax,0x62
  411b03:	retf   0x7400
  411b06:	sbb    DWORD PTR [esi+0x5f067a7a],ebp
  411b0c:	jp     0x411b88
  411b0e:	clc    
  411b0f:	mov    ch,ch
  411b11:	aas    
  411b12:	inc    ebx
  411b13:	jnp    0x411b22
  411b15:	cmp    al,0x1f
  411b17:	mov    ah,0x7b
  411b19:	test   eax,0xee82c5ea
  411b1e:	jno    0x411af2
  411b20:	mov    ah,0xe
  411b22:	leave  
  411b23:	test   BYTE PTR [eax+0x58],0x3e
  411b27:	push   esi
  411b28:	cmp    DWORD PTR [ecx+0x40],esi
  411b2b:	adc    BYTE PTR [edi],bl
  411b2d:	sub    dh,BYTE PTR [ecx-0x68feca83]
  411b33:	xchg   edx,eax
  411b34:	(bad)  
  411b35:	lock jbe 0x411b7a
  411b38:	and    edi,edx
  411b3a:	stos   DWORD PTR es:[edi],eax
  411b3b:	pop    esi
  411b3c:	inc    ecx
  411b3d:	scas   al,BYTE PTR es:[edi]
  411b3e:	pop    esi
  411b3f:	(bad)  
  411b40:	push   esi
  411b41:	xchg   DWORD PTR [edx],ecx
  411b43:	out    dx,al
  411b44:	xchg   ebx,eax
  411b45:	jne    0x411b1e
  411b47:	lea    ecx,[ecx+0x5e56dc58]
  411b4d:	pop    ebx
  411b4e:	stos   BYTE PTR es:[edi],al
  411b4f:	ins    DWORD PTR es:[edi],dx
  411b50:	adc    eax,0x34ae69ca
  411b55:	data16 test al,0x1c
  411b58:	xchg   esi,eax
  411b59:	out    dx,eax
  411b5a:	cmp    eax,0x48453ac6
  411b5f:	cmp    bl,0x51
  411b62:	add    eax,0x31882db3
  411b67:	sbb    dl,BYTE PTR [edx-0x4360534]
  411b6d:	cld    
  411b6e:	shr    DWORD PTR [ebp+0x1a21265e],0x42
  411b75:	imul   esi,DWORD PTR [ecx+0x33],0xffffffc5
  411b79:	in     al,dx
  411b7a:	jb     0x411bc2
  411b7c:	loopne 0x411bb9
  411b7e:	fiadd  DWORD PTR [eax-0x7ae9914e]
  411b84:	lds    edi,FWORD PTR [edi+ebx*8]
  411b87:	lea    ecx,[ebp-0x46]
  411b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b8b:	mov    ebx,0x68ea74c3
  411b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b91:	aaa    
  411b92:	sbb    ecx,DWORD PTR [ecx]
  411b94:	xlat   BYTE PTR ds:[ebx]
  411b95:	loope  0x411b2d
  411b97:	mov    ah,0x4f
  411b99:	add    esi,DWORD PTR [edx-0x37]
  411b9c:	lock adc cl,BYTE PTR [esi]
  411b9f:	xor    edi,ecx
  411ba1:	jmp    0xa28:0x4ca5e1fe
  411ba8:	cmp    edi,DWORD PTR [ebp+0xcbb6ba2]
  411bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411baf:	cmp    al,0x11
  411bb1:	cmp    cl,0x55
  411bb4:	ja     0x411b94
  411bb6:	push   ds
  411bb7:	enter  0xdc58,0x21
  411bbb:	(bad)  
  411bbc:	pop    edx
  411bbd:	xchg   DWORD PTR [esi+0x4e],eax
  411bc0:	stc    
  411bc1:	ja     0x411bcb
  411bc3:	fnstsw WORD PTR [ecx+0x43]
  411bc6:	cmp    BYTE PTR [ebp-0x37],al
  411bc9:	jb     0x411bf5
  411bcb:	loopne 0x411b68
  411bcd:	pop    ecx
  411bce:	cmp    eax,0x83dee487
  411bd3:	mov    ch,0x2e
  411bd5:	dec    ebp
  411bd6:	(bad)  
  411bd8:	and    DWORD PTR [ebx+0x1e2c4c5c],esp
  411bde:	not    DWORD PTR [esi+0x6013e875]
  411be4:	loop   0x411c14
  411be6:	shl    BYTE PTR ds:0x7356f9f3,cl
  411bec:	lock jno 0x411bdc
  411bef:	inc    edx
  411bf0:	inc    esi
  411bf1:	mov    eax,0xce0bbe7f
  411bf6:	jbe    0x411ba8
  411bf8:	add    BYTE PTR [esi-0x4c],0xf5
  411bfc:	loope  0x411bab
  411bfe:	ds call 0xc634:0xbcce1981
  411c06:	xchg   esi,eax
  411c07:	pushf  
  411c08:	mov    esi,DWORD PTR ds:[ebx+eax*2+0x7e]
  411c0d:	jbe    0x411c5e
  411c0f:	dec    ecx
  411c10:	sub    BYTE PTR [esi],cl
  411c12:	push   ss
  411c13:	ins    DWORD PTR es:[edi],dx
  411c14:	cmp    esi,DWORD PTR [eax]
  411c16:	add    dh,BYTE PTR [ebp-0x19]
  411c19:	push   es
  411c1a:	(bad)  
  411c1b:	mov    cl,0xa2
  411c1d:	add    dh,BYTE PTR [ebp-0x16]
  411c20:	or     edi,DWORD PTR [esi+0x6a]
  411c23:	scas   eax,DWORD PTR es:[edi]
  411c24:	pop    ss
  411c25:	and    BYTE PTR [edi],bh
  411c27:	jecxz  0x411bc8
  411c29:	adc    ch,BYTE PTR [ebx-0x4a]
  411c2c:	mov    al,0xac
  411c2e:	cmp    ch,BYTE PTR [esi]
  411c30:	hlt    
  411c31:	sub    al,0xc8
  411c33:	mov    dl,0x9d
  411c35:	push   esi
  411c36:	push   0x2b
  411c38:	xor    ch,BYTE PTR [edx+0x2bbefc24]
  411c3e:	or     eax,0xb8e6494b
  411c43:	cli    
  411c44:	ret    
  411c45:	in     al,0x1a
  411c47:	data16 icebp 
  411c49:	test   al,0xb6
  411c4b:	mov    bl,0xe4
  411c4d:	shl    DWORD PTR ds:0xc755ed3c,1
  411c53:	mov    DWORD PTR [edi-0x4e],ebx
  411c56:	adc    DWORD PTR [eax+ebp*1-0x6f567ed],ebx
  411c5d:	cmp    bl,BYTE PTR [eax-0x6b]
  411c60:	jp     0x411cd7
  411c62:	out    dx,al
  411c63:	mov    ds:0xd919f81d,al
  411c68:	in     al,dx
  411c69:	mul    DWORD PTR [eax]
  411c6b:	inc    edi
  411c6c:	mov    edx,DWORD PTR [edi]
  411c6e:	add    bh,BYTE PTR [ecx]
  411c70:	scas   eax,DWORD PTR es:[edi]
  411c71:	sub    eax,0x420b4455
  411c76:	sar    BYTE PTR [ebp+0x6f09f53a],1
  411c7c:	xchg   esi,eax
  411c7d:	jns    0x411c0a
  411c7f:	mov    ah,0x73
  411c81:	push   eax
  411c82:	pop    ds
  411c83:	dec    ebp
  411c84:	fistp  DWORD PTR [edx]
  411c86:	pop    ecx
  411c87:	adc    al,0x95
  411c89:	shl    al,cl
  411c8b:	test   ecx,ebp
  411c8d:	je     0x411cd1
  411c8f:	loope  0x411c9d
  411c91:	mov    eax,0xac32b60f
  411c96:	or     DWORD PTR [ecx],eax
  411c98:	sub    DWORD PTR [ebx-0x1f],ecx
  411c9b:	xor    esi,DWORD PTR [esi+0x20a879ff]
  411ca1:	sub    ah,BYTE PTR [edx-0x280b20ea]
  411ca7:	mov    eax,0xc4e6c50f
  411cac:	not    DWORD PTR [ecx+0x39]
  411caf:	and    al,0x89
  411cb1:	in     eax,dx
  411cb2:	or     ch,BYTE PTR [ebx-0x2b4e9075]
  411cb8:	jbe    0x411c3a
  411cba:	sub    ecx,DWORD PTR [edx]
  411cbc:	or     eax,0x63d72a65
  411cc1:	sbb    ah,BYTE PTR [edi-0x10]
  411cc4:	xor    al,0x92
  411cc6:	lahf   
  411cc7:	fs cmp DWORD PTR gs:[ebx],edx
  411ccb:	dec    esi
  411ccc:	xchg   edi,eax
  411ccd:	outs   dx,DWORD PTR ds:[esi]
  411cce:	je     0x411c98
  411cd0:	mov    al,0xcd
  411cd2:	dec    ebx
  411cd3:	jmp    0x9da9:0x47f96514
  411cda:	dec    esp
  411cdb:	cs adc cl,dh
  411cde:	pop    ss
  411cdf:	xchg   DWORD PTR [ecx+eiz*1],esi
  411ce2:	jg     0x411ca5
  411ce4:	sub    BYTE PTR [ebp+0x1be00c12],cl
  411cea:	jmp    0xa1cac509
  411cef:	mov    eax,ds:0x3af32329
  411cf4:	xor    esi,DWORD PTR [edi-0x11b82ea4]
  411cfa:	mov    ecx,0x20459a83
  411cff:	jge    0x411d28
  411d01:	enter  0xb47f,0x2
  411d05:	xchg   edx,eax
  411d06:	hlt    
  411d07:	imul   ebp,DWORD PTR [ecx+0x52f4c772],0xffffff80
  411d0e:	dec    ecx
  411d0f:	push   edi
  411d10:	add    edx,DWORD PTR [eax+edx*2+0x47]
  411d14:	inc    edx
  411d15:	adc    cl,bh
  411d17:	inc    esi
  411d18:	stc    
  411d19:	jge    0x411d37
  411d1b:	or     DWORD PTR [eax-0x23],edx
  411d1e:	fxch   st(3)
  411d20:	jno    0x411d58
  411d22:	or     eax,0x1300b6aa
  411d27:	add    esp,DWORD PTR [edi-0x2e]
  411d2a:	jbe    0x411d8a
  411d2c:	cmp    al,dl
  411d2e:	mov    bh,0x86
  411d30:	add    bl,bh
  411d32:	mov    ?,esi
  411d34:	add    dl,bl
  411d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d37:	mov    ebx,0x6864db19
  411d3c:	shl    bh,cl
  411d3e:	push   ebp
  411d3f:	cmp    al,0x3c
  411d41:	pop    ebx
  411d42:	sti    
  411d43:	(bad)  
  411d44:	in     al,dx
  411d45:	fwait
  411d46:	test   eax,0x4cbba0e0
  411d4b:	mov    ds,WORD PTR [esi-0x28d58d7d]
  411d51:	pop    esi
  411d52:	icebp  
  411d53:	imul   esp,esi,0xffffff96
  411d56:	sbb    al,BYTE PTR [edx]
  411d58:	iret   
  411d59:	adc    cl,0x5d
  411d5c:	xchg   DWORD PTR [edx-0x67],ecx
  411d5f:	and    ebp,DWORD PTR [esi+0x46]
  411d62:	pop    eax
  411d63:	jp     0x411d9f
  411d65:	mov    esp,0x703a2125
  411d6a:	fdivr  DWORD PTR [ecx]
  411d6c:	xchg   ebp,eax
  411d6d:	or     eax,0x6ed60ef2
  411d72:	fidivr DWORD PTR [ebp-0x2d71f64b]
  411d78:	xchg   DWORD PTR ds:0x4b600e32,ecx
  411d7e:	cdq    
  411d7f:	fidivr WORD PTR ds:0xa8001ea6
  411d85:	mov    BYTE PTR [ebx+0xf],ah
  411d88:	dec    ebx
  411d89:	loop   0x411d26
  411d8b:	pop    DWORD PTR [esp+ebp*1]
  411d8e:	fisub  DWORD PTR [edi-0x3]
  411d91:	mov    ds,WORD PTR [ecx]
  411d93:	adc    BYTE PTR [edx-0x1e],cl
  411d96:	mov    eax,0xa2f1100c
  411d9b:	call   DWORD PTR [ecx+0x749f91f8]
  411da1:	out    dx,eax
  411da2:	dec    ebx
  411da3:	imul   ecx,DWORD PTR [eax-0x27],0x46adab4a
  411daa:	gs pusha 
  411dac:	lods   al,BYTE PTR ds:[esi]
  411dad:	pop    eax
  411dae:	or     al,0xba
  411db0:	ins    DWORD PTR es:[edi],dx
  411db1:	push   ecx
  411db2:	push   ecx
  411db3:	xchg   dl,ch
  411db5:	or     DWORD PTR [ecx+0x3151457d],ebp
  411dbb:	mov    dh,0xb1
  411dbd:	mov    ecx,0xd93326a9
  411dc2:	retf   
  411dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dc4:	or     BYTE PTR [eax+0x76279ace],bl
  411dca:	shr    dh,cl
  411dcc:	scas   al,BYTE PTR es:[edi]
  411dcd:	or     bl,BYTE PTR [edi+0xf1f2924]
  411dd3:	xor    DWORD PTR [edx],esi
  411dd5:	shl    BYTE PTR [edx+0x28345581],0x48
  411ddc:	sbb    eax,0x95bd785a
  411de1:	jle    0x411e53
  411de3:	jns    0x411e36
  411de5:	(bad)  
  411de6:	push   0xeed03f44
  411deb:	ins    DWORD PTR es:[edi],dx
  411dec:	mov    esp,0xe39dd743
  411df1:	sbb    dh,BYTE PTR [edx+0x7b473171]
  411df7:	dec    ebx
  411df8:	adc    eax,0xdfede2a8
  411dfd:	xor    esp,DWORD PTR [ebx-0x4e]
  411e00:	adc    ah,BYTE PTR [ebp-0x34]
  411e03:	lods   eax,DWORD PTR ds:[esi]
  411e04:	not    cl
  411e06:	add    al,0x9d
  411e08:	or     al,0x7a
  411e0a:	ret    
  411e0b:	in     eax,dx
  411e0c:	cmp    ch,BYTE PTR [ebx-0x38]
  411e0f:	cmc    
  411e10:	test   al,0x1f
  411e12:	outs   dx,DWORD PTR ds:[esi]
  411e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e14:	out    dx,al
  411e15:	add    eax,0xc34292c9
  411e1a:	rcr    bh,cl
  411e1c:	mov    ah,0x8a
  411e1e:	jmp    0x411e56
  411e20:	pop    ebx
  411e21:	dec    eax
  411e22:	add    esi,DWORD PTR [ecx+0x58]
  411e25:	push   esp
  411e26:	xchg   ebp,eax
  411e27:	jmp    0xba548d0a
  411e2c:	fidivr WORD PTR [eax+eax*2]
  411e2f:	mov    eax,ds:0x203be68a
  411e34:	mov    esp,0xd0f4b685
  411e39:	sar    BYTE PTR [ebx-0x230dcc91],1
  411e3f:	adc    eax,0xdda45f89
  411e44:	sbb    al,0x53
  411e46:	sti    
  411e47:	loope  0x411dfb
  411e49:	xor    edx,DWORD PTR [edx]
  411e4b:	ror    BYTE PTR [ecx],cl
  411e4d:	out    0xe2,eax
  411e4f:	scas   al,BYTE PTR es:[edi]
  411e50:	(bad)  [esi+0x41]
  411e53:	mov    al,0x3e
  411e55:	pop    eax
  411e56:	or     ch,BYTE PTR [ebx+0x49]
  411e59:	das    
  411e5a:	adc    DWORD PTR [ebx],edi
  411e5c:	out    dx,al
  411e5d:	jbe    0x411e55
  411e5f:	in     al,0xdb
  411e61:	int3   
  411e62:	adc    BYTE PTR [ecx-0x716dfe78],ah
  411e68:	clc    
  411e69:	dec    esp
  411e6a:	mov    DWORD PTR [ebp-0x38],eax
  411e6d:	add    ah,BYTE PTR [esi+esi*2-0x73]
  411e71:	mov    dh,bh
  411e73:	call   0xad06:0x7b2c050b
  411e7a:	dec    ecx
  411e7b:	clc    
  411e7c:	mov    edi,0x6c850bab
  411e81:	add    al,0x9f
  411e83:	dec    ecx
  411e84:	loopne 0x411e5b
  411e86:	cmc    
  411e87:	cli    
  411e88:	mov    al,0xa4
  411e8a:	sbb    DWORD PTR [edx+0x1e],esi
  411e8d:	aas    
  411e8e:	jl     0x411ef5
  411e90:	mov    esp,0x7623f0d5
  411e95:	loope  0x411ecb
  411e97:	je     0x411e33
  411e99:	int3   
  411e9a:	adc    bl,BYTE PTR [edi]
  411e9c:	icebp  
  411e9d:	jmp    0xf6c5:0x6421fc4f
  411ea4:	and    al,0x60
  411ea6:	push   ecx
  411ea7:	inc    edx
  411ea8:	mov    al,ds:0x370ae874
  411ead:	xor    BYTE PTR [ecx+0x65],0x4d
  411eb1:	push   edi
  411eb2:	jne    0x411ebd
  411eb4:	pop    esi
  411eb5:	ror    BYTE PTR [eax],cl
  411eb7:	popa   
  411eb8:	push   0xd3017322
  411ebd:	or     BYTE PTR [ecx-0x34],al
  411ec0:	add    dl,bl
  411ec2:	fst    QWORD PTR [edx+0x383f5d37]
  411ec8:	in     eax,dx
  411ec9:	sub    esp,DWORD PTR [ebx*4+0x507d8a1f]
  411ed0:	fld    st(6)
  411ed2:	outs   dx,BYTE PTR ds:[esi]
  411ed3:	pop    ebx
  411ed4:	pushf  
  411ed5:	cld    
  411ed6:	fisubr WORD PTR [edx+eiz*4+0x36f3df25]
  411edd:	push   0xfffffffe
  411edf:	(bad)  
  411ee0:	scas   eax,DWORD PTR es:[edi]
  411ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee2:	fnstenv [edi]
  411ee4:	dec    esi
  411ee5:	aas    
  411ee6:	scas   eax,DWORD PTR es:[edi]
  411ee7:	and    ebx,DWORD PTR [eax-0x46]
  411eea:	mov    al,0x18
  411eec:	stos   BYTE PTR es:[edi],al
  411eed:	push   ebp
  411eee:	daa    
  411eef:	cmp    BYTE PTR [edx+0x556f4fd2],ah
  411ef5:	iret   
  411ef6:	jae    0x411ec5
  411ef8:	cli    
  411ef9:	jecxz  0x411f72
  411efb:	aaa    
  411efc:	sahf   
  411efd:	addr16 mov edi,0x3436dd07
  411f03:	xor    al,0x6f
  411f05:	sbb    al,0x93
  411f07:	cmp    al,0x3e
  411f09:	push   cs
  411f0a:	mov    gs,ecx
  411f0c:	shr    BYTE PTR [edi],cl
  411f0e:	cli    
  411f0f:	imul   esi,DWORD PTR [edi-0x18824805],0xfffffffe
  411f16:	or     eax,0x605666c3
  411f1b:	sahf   
  411f1c:	mov    dl,0xbf
  411f1e:	sub    eax,0x5142660e
  411f23:	jle    0x411f96
  411f25:	(bad)  
  411f26:	hlt    
  411f27:	inc    edi
  411f28:	mov    DWORD PTR [edi],ecx
  411f2a:	repz pop ebx
  411f2c:	(bad)  
  411f2d:	jae    0x411f49
  411f2f:	adc    esp,DWORD PTR [ebx+0x16]
  411f32:	cdq    
  411f33:	shl    BYTE PTR [ebx],1
  411f35:	test   al,0x2e
  411f37:	or     DWORD PTR [edx+0x6b03a1fb],edx
  411f3d:	mov    dh,BYTE PTR [edx]
  411f3f:	cmp    edx,DWORD PTR [ebp+0x53]
  411f42:	js     0x411ee2
  411f44:	mov    DWORD PTR [ebx+0xe383c74],0x78737678
  411f4e:	div    BYTE PTR [esi-0x207196bc]
  411f54:	fs pop esp
  411f56:	jmp    0xf564:0xbe1c2bf5
  411f5d:	jns    0x411f91
  411f5f:	inc    edi
  411f60:	mov    dh,0xe6
  411f62:	push   es
  411f63:	pop    ebx
  411f64:	pushf  
  411f65:	test   al,0x33
  411f67:	or     bl,BYTE PTR [ebx-0x6f]
  411f6a:	add    dl,BYTE PTR [esi-0x59]
  411f6d:	fidiv  DWORD PTR [edx-0x44]
  411f70:	mov    ds:0xacd0d59a,eax
  411f75:	xor    ch,BYTE PTR ds:0x418e56e3
  411f7b:	xchg   ebx,eax
  411f7c:	lahf   
  411f7d:	xchg   edi,eax
  411f7e:	repnz scas eax,DWORD PTR es:[edi]
  411f80:	out    0xed,al
  411f82:	push   esi
  411f83:	jecxz  0x411f59
  411f85:	xor    al,0xb3
  411f87:	clc    
  411f88:	xchg   ebx,eax
  411f89:	or     al,0x82
  411f8b:	(bad)  
  411f8c:	loopne 0x411f9d
  411f8e:	mov    bl,0x22
  411f90:	cdq    
  411f91:	and    eax,0xb17d336c
  411f96:	mov    ?,WORD PTR [ecx+0x73]
  411f99:	(bad)  
  411f9a:	cmc    
  411f9b:	add    dh,BYTE PTR [esp+ebx*8]
  411f9e:	mov    WORD PTR [ecx],gs
  411fa0:	push   esi
  411fa1:	mov    WORD PTR [edi+0x5eb0649f],ss
  411fa7:	inc    edi
  411fa8:	adc    al,0x7
  411faa:	call   0x7dcc2fc3
  411faf:	mov    es,WORD PTR [edi-0x3c]
  411fb2:	popf   
  411fb3:	stc    
  411fb4:	out    0xbd,eax
  411fb6:	sub    bl,BYTE PTR [edi]
  411fb8:	ss push ss
  411fba:	neg    ebp
  411fbc:	push   eax
  411fbd:	dec    ebx
  411fbe:	shr    BYTE PTR [eax+0x76c66595],cl
  411fc4:	and    ch,BYTE PTR [edi-0x68636a8]
  411fca:	test   eax,0x1d3d02eb
  411fcf:	int3   
  411fd0:	sar    DWORD PTR [ebx-0x99b7368],cl
  411fd6:	test   ch,dl
  411fd8:	loopne 0x41201a
  411fda:	cwde   
  411fdb:	out    0xb8,eax
  411fdd:	nop
  411fde:	pop    ebx
  411fdf:	mov    ebp,0xc4b512f1
  411fe4:	mov    ebx,0x7d96397b
  411fe9:	xor    ebx,DWORD PTR [edi-0x3e]
  411fec:	stos   BYTE PTR es:[edi],al
  411fed:	sar    DWORD PTR [esi+0x16],1
  411ff0:	int3   
  411ff1:	in     eax,dx
  411ff2:	in     eax,0xe5
  411ff4:	add    eax,0x7d68c7e4
  411ff9:	pop    esp
  411ffa:	rol    DWORD PTR [edi-0x5c],1
  411ffd:	sub    BYTE PTR [edi+0x2a262903],ch
  412003:	daa    
  412004:	dec    eax
  412005:	mov    dh,0x27
  412007:	(bad)  
  412008:	es xchg esp,eax
  41200a:	add    edi,edi
  41200c:	cmc    
  41200d:	mov    cl,0xea
  41200f:	leave  
  412010:	jmp    0x708f:0x6bd74cd1
  412017:	or     al,0x20
  412019:	pop    ds
  41201a:	je     0x411ffe
  41201c:	gs ja  0x412033
  41201f:	sub    DWORD PTR [edx],0xffffffdf
  412022:	(bad)  
  412023:	(bad)  
  412024:	pop    ss
  412025:	xchg   esi,eax
  412026:	xchg   esi,eax
  412027:	sbb    BYTE PTR [eax],0x6d
  41202a:	lahf   
  41202b:	xor    BYTE PTR [eax],bl
  41202d:	aam    0x4d
  41202f:	cmp    al,0xd7
  412031:	mov    edi,DWORD PTR [ecx-0x2a]
  412034:	adc    DWORD PTR [esi-0x1b989ba2],0xfad69ed3
  41203e:	jbe    0x4120bb
  412040:	popa   
  412041:	cld    
  412042:	and    ecx,DWORD PTR [ebp+0x21]
  412045:	pop    edx
  412046:	adc    al,0xfc
  412048:	daa    
  412049:	jle    0x4120a8
  41204b:	add    dl,dl
  41204d:	xchg   ebp,eax
  41204e:	ficomp WORD PTR [edi-0x34]
  412051:	inc    edx
  412052:	int    0xe
  412054:	rol    dl,0x1b
  412057:	dec    ecx
  412058:	sub    eax,0x707354ca
  41205d:	mov    eax,ds:0x28e453e2
  412062:	leave  
  412063:	icebp  
  412064:	jle    0x412071
  412066:	lahf   
  412067:	imul   ebx,DWORD PTR [edx*1-0x85c1c42],0xffffffad
  41206f:	xor    eax,0x352c164d
  412074:	and    eax,0x166e0cf
  412079:	shl    DWORD PTR [edx],1
  41207b:	shr    DWORD PTR [ebx],cl
  41207d:	mov    esp,0x7d477faa
  412082:	cmp    ebx,0x1f
  412085:	in     eax,dx
  412086:	mov    dl,BYTE PTR [ebx-0x669ee676]
  41208c:	jb     0x4120b6
  41208e:	outs   dx,BYTE PTR ds:[esi]
  41208f:	int3   
  412090:	aam    0x8f
  412092:	inc    ebx
  412093:	push   es
  412094:	and    al,0x89
  412096:	outs   dx,BYTE PTR ds:[esi]
  412097:	xor    eax,DWORD PTR [edi+0x259192f6]
  41209d:	inc    ebx
  41209e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41209f:	mov    ebx,0x219b49ef
  4120a4:	mov    BYTE PTR [edx+0x5c],0x15
  4120a8:	pop    ds
  4120a9:	outs   dx,BYTE PTR gs:[esi]
  4120ab:	ins    DWORD PTR es:[edi],dx
  4120ac:	(bad)  
  4120ad:	int3   
  4120ae:	imul   esp,esp,0x1
  4120b1:	inc    bh
  4120b3:	repnz retf 0xbc9f
  4120b7:	sbb    ebx,DWORD PTR [edi+ebx*4-0x4e]
  4120bb:	or     BYTE PTR [ecx+0x10],dl
  4120be:	jae    0x41209a
  4120c0:	push   ebx
  4120c1:	test   eax,0x681ad7b4
  4120c6:	xor    eax,0x6091bbba
  4120cb:	push   edi
  4120cc:	sar    al,1
  4120ce:	std    
  4120cf:	push   ebp
  4120d0:	pop    eax
  4120d1:	clc    
  4120d2:	sbb    eax,0xe41b5f23
  4120d7:	(bad)  
  4120d8:	sub    ebp,DWORD PTR [ecx-0xc]
  4120db:	xor    cl,0x66
  4120de:	mov    ds:0xdeffdbdc,eax
  4120e3:	test   BYTE PTR [eax-0x4f],ch
  4120e6:	xchg   edx,esi
  4120e8:	add    esp,ebp
  4120ea:	test   BYTE PTR [edi],bh
  4120ec:	push   esp
  4120ed:	ret    
  4120ee:	pop    edx
  4120ef:	push   es
  4120f0:	jp     0x412119
  4120f2:	scas   eax,DWORD PTR es:[edi]
  4120f3:	mov    ebp,DWORD PTR [edx+0x32]
  4120f6:	and    eax,DWORD PTR [esi+0x6a0950da]
  4120fc:	jns    0x4120a8
  4120fe:	adc    dh,BYTE PTR [esi+0x71a03711]
  412104:	ficomp DWORD PTR [edx+0x6c]
  412107:	mov    ds,WORD PTR [ebx+0x56]
  41210a:	jno    0x41216b
  41210c:	fimul  WORD PTR [ebx-0x1e]
  41210f:	and    al,0x68
  412111:	call   0x3f58f5a6
  412116:	mov    bh,0xd8
  412118:	pop    esi
  412119:	or     DWORD PTR [esi-0x3],esi
  41211c:	and    al,0x89
  41211e:	cli    
  41211f:	(bad)  
  412120:	in     al,dx
  412121:	fcom   QWORD PTR ds:0x48e22669
  412127:	push   edi
  412128:	fidiv  DWORD PTR [ebx+0x4a330cf8]
  41212e:	cmp    al,0xd6
  412130:	dec    ecx
  412131:	jbe    0x412100
  412133:	xor    ch,BYTE PTR [esp+edx*2]
  412136:	inc    ecx
  412137:	clc    
  412138:	xor    ebx,DWORD PTR [ecx+0x6b]
  41213b:	pop    ebx
  41213c:	or     BYTE PTR [eax+0x5dc4c94f],bh
  412142:	idiv   DWORD PTR [ebx]
  412144:	inc    ebp
  412145:	push   ebx
  412146:	mov    esi,0x41b479d0
  41214b:	cmp    al,0x7
  41214d:	xchg   ecx,eax
  41214e:	push   ecx
  41214f:	xor    DWORD PTR [ecx],esp
  412151:	mov    ecx,0xb143a5c5
  412156:	das    
  412157:	adc    ebx,DWORD PTR cs:[ebx-0x4a]
  41215b:	jne    0x412107
  41215d:	push   es
  41215e:	scas   al,BYTE PTR es:[edi]
  41215f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412160:	push   esi
  412161:	in     al,dx
  412162:	das    
  412163:	stc    
  412164:	out    dx,eax
  412165:	inc    ecx
  412166:	aas    
  412167:	pushf  
  412168:	add    DWORD PTR [ecx],0x62
  41216b:	shl    BYTE PTR [edi],0x5c
  41216e:	stos   DWORD PTR es:[edi],eax
  41216f:	xchg   edi,eax
  412170:	jmp    0x62ac81f4
  412175:	jmp    0x4121a0
  412177:	jnp    0x412152
  412179:	jmp    0x4121f4
  41217b:	iret   
  41217c:	sbb    ecx,DWORD PTR [esi-0x6e9565a5]
  412182:	xor    DWORD PTR [esi-0x58f6c507],edi
  412188:	sti    
  412189:	addr16 mov bl,0x4b
  41218c:	mov    esi,DWORD PTR [edx+eax*8-0x55]
  412190:	in     al,0x35
  412192:	lods   eax,DWORD PTR ds:[esi]
  412193:	dec    eax
  412194:	push   esp
  412195:	bound  edi,QWORD PTR [edx+0x73]
  412198:	sub    DWORD PTR [esp+edx*2],esp
  41219b:	sub    eax,DWORD PTR [ecx+0x7dbd5a34]
  4121a1:	add    eax,0x97f5d3c9
  4121a6:	ja     0x412184
  4121a8:	das    
  4121a9:	pop    ds
  4121aa:	xchg   ebx,eax
  4121ab:	ins    DWORD PTR es:[edi],dx
  4121ac:	clc    
  4121ad:	es mov esi,0x53952e97
  4121b3:	pusha  
  4121b4:	push   ecx
  4121b5:	sub    eax,eax
  4121b7:	mov    edx,0xa5d0fa44
  4121bc:	iret   
  4121bd:	add    esp,esp
  4121bf:	rcl    bl,1
  4121c1:	or     esi,DWORD PTR [esi]
  4121c3:	add    bh,dl
  4121c5:	push   edi
  4121c6:	jno    0x412233
  4121c8:	jae    0x412160
  4121ca:	add    ah,al
  4121cc:	pop    eax
  4121cd:	jns    0x4121cd
  4121cf:	imul   ebx,ebx,0xffffff9a
  4121d2:	mov    al,0x2e
  4121d4:	dec    eax
  4121d5:	jbe    0x4121ab
  4121d7:	das    
  4121d8:	ds sbb al,0x91
  4121db:	arpl   WORD PTR [ebx+ebx*2],bp
  4121de:	cwde   
  4121df:	out    dx,al
  4121e0:	nop
  4121e1:	push   ds
  4121e2:	(bad)  
  4121e3:	iret   
  4121e4:	loope  0x4121c7
  4121e6:	pop    esp
  4121e7:	push   ebp
  4121e8:	sub    al,0x25
  4121ea:	call   0xbffa26e7
  4121ef:	iret   
  4121f0:	xor    edx,DWORD PTR [eax+0x31ff35dc]
  4121f6:	or     eax,0x6f04aa82
  4121fb:	dec    esi
  4121fc:	int    0x7c
  4121fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ff:	sbb    edx,edx
  412201:	push   ss
  412202:	aas    
  412203:	mov    esi,0xa3523e3c
  412208:	mov    edx,0xaf247af6
  41220d:	sbb    edi,ebp
  41220f:	ror    DWORD PTR [edx-0x15],0xa5
  412213:	push   ds
  412214:	adc    eax,0xb2154d05
  412219:	ins    DWORD PTR es:[edi],dx
  41221a:	or     dl,BYTE PTR [esi]
  41221c:	jmp    0x66e31111
  412221:	fs inc edx
  412223:	hlt    
  412224:	fwait
  412225:	jae    0x41222b
  412227:	jmp    0xebc7:0x9072c9f5
  41222e:	sub    BYTE PTR [edi-0x8],cl
  412231:	xchg   esp,eax
  412232:	jp     0x412237
  412234:	inc    ebp
  412235:	js     0x41223b
  412237:	stos   BYTE PTR es:[edi],al
  412238:	rcr    DWORD PTR [edx+ebx*2+0x46],0x7b
  41223d:	pop    es
  41223e:	adc    BYTE PTR [eax],ch
  412240:	sub    DWORD PTR [esi+0x5bfd1509],ecx
  412246:	les    ebx,FWORD PTR [edi]
  412248:	dec    edx
  412249:	jge    0x41228c
  41224b:	add    ch,BYTE PTR [eax+0x4e]
  41224e:	mov    ebp,0xdfa5e82
  412253:	ss lock jecxz 0x412284
  412257:	rcr    BYTE PTR [ecx],1
  412259:	mov    dl,0xb5
  41225b:	ret    0x4f53
  41225e:	mov    bh,0x1a
  412260:	pop    ebp
  412261:	retf   0x749c
  412264:	pop    edx
  412265:	out    dx,al
  412266:	cmp    DWORD PTR [edi-0x38c8b619],edi
  41226c:	push   ebx
  41226d:	aam    0x33
  41226f:	pop    ecx
  412270:	and    dl,BYTE PTR [ecx]
  412272:	aad    0xac
  412274:	loop   0x41228f
  412276:	iret   
  412277:	jle    0x412207
  412279:	leave  
  41227a:	and    DWORD PTR [eax],ebx
  41227c:	call   FWORD PTR [ebp-0x1b]
  41227f:	inc    ebx
  412280:	faddp  st(1),st
  412282:	jne    0x41229d
  412284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412285:	and    BYTE PTR [edx+0x585ccadc],cl
  41228b:	dec    eax
  41228c:	or     BYTE PTR [eax+0x42c5b371],bh
  412292:	sbb    DWORD PTR [edi+0x29db2445],esi
  412298:	(bad)  
  412299:	ret    
  41229a:	and    eax,0x9a009a
  41229f:	test   eax,0x31e15255
  4122a4:	jmp    0x412269
  4122a6:	jp     0x412309
  4122a8:	scas   al,BYTE PTR es:[edi]
  4122a9:	out    0xc5,al
  4122ab:	cmp    ebx,DWORD PTR [ecx-0x7d]
  4122ae:	into   
  4122af:	xchg   ebx,eax
  4122b0:	mov    ecx,0x595f2028
  4122b5:	adc    ebp,DWORD PTR ds:[eax]
  4122b8:	enter  0xdeed,0x72
  4122bc:	sbb    eax,0x434855
  4122c1:	add    dh,bl
  4122c3:	jno    0x412280
  4122c5:	jmp    0x412259
  4122c7:	and    al,0x5f
  4122c9:	rcr    BYTE PTR [edi],cl
  4122cb:	or     cl,0x59
  4122ce:	ja     0x412282
  4122d0:	mov    ds:0xc987318d,eax
  4122d5:	sbb    DWORD PTR [ebp+0x60d4aa7e],ecx
  4122db:	jmp    0xd9a3:0xabf9bb0a
  4122e2:	sahf   
  4122e3:	addr16 jbe 0x41227b
  4122e6:	dec    esp
  4122e7:	outs   dx,BYTE PTR ds:[esi]
  4122e8:	pop    esp
  4122e9:	and    DWORD PTR [esi],ebp
  4122eb:	mov    esi,0xaea11c2c
  4122f0:	dec    edi
  4122f1:	mov    DWORD PTR [edi],0x66742170
  4122f7:	enter  0x2e68,0xc
  4122fb:	push   esi
  4122fc:	nop
  4122fd:	int3   
  4122fe:	sti    
  4122ff:	mov    dl,0x5f
  412301:	je     0x41231e
  412303:	in     eax,0x83
  412305:	or     edx,DWORD PTR [edx-0x457f34d9]
  41230b:	and    ebx,DWORD PTR [esi-0x79]
  41230e:	xchg   edi,eax
  41230f:	sub    eax,0x8dbc3af5
  412314:	outs   dx,BYTE PTR ds:[esi]
  412315:	(bad)  
  412317:	mov    ds:0xc999d293,ax
  41231d:	xchg   edi,eax
  41231e:	loopne 0x41235a
  412320:	sub    eax,esi
  412322:	test   edx,ebx
  412324:	shr    BYTE PTR [edx-0x31],cl
  412327:	dec    eax
  412328:	and    eax,0x2389a617
  41232d:	sbb    al,0xa5
  41232f:	jbe    0x4122f1
  412331:	and    BYTE PTR ds:0x30fd3013,dh
  412337:	adc    edi,edx
  412339:	nop
  41233a:	xor    DWORD PTR [eax+0x5e70fef5],0x11379713
  412344:	inc    ebp
  412345:	sub    al,0x6b
  412348:	popa   
  412349:	in     al,0x98
  41234b:	mov    esi,0x285de0dd
  412350:	cmp    dl,BYTE PTR [esp+eax*1+0xc]
  412354:	jecxz  0x41234e
  412356:	push   cs
  412357:	bound  ecx,QWORD PTR [ebx]
  412359:	call   DWORD PTR [ecx]
  41235b:	inc    edi
  41235c:	std    
  41235d:	scas   eax,DWORD PTR es:[edi]
  41235e:	sbb    DWORD PTR [edx+eax*1],ebp
  412361:	lahf   
  412362:	mov    ah,0x36
  412364:	inc    edi
  412365:	cmp    al,0xc6
  412367:	mov    eax,ds:0xc6ba3058
  41236c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236d:	sub    cl,BYTE PTR [edi-0x5cde7c6e]
  412373:	ins    BYTE PTR es:[edi],dx
  412374:	xor    cl,BYTE PTR [edi+0x36]
  412377:	push   eax
  412378:	pusha  
  412379:	js     0x412316
  41237b:	mov    dh,BYTE PTR [edi-0x2a]
  41237e:	sub    BYTE PTR [edx-0x29],ah
  412381:	arpl   WORD PTR [ecx-0x14],ax
  412384:	cwde   
  412385:	mov    esi,0x106e1341
  41238a:	cld    
  41238b:	jl     0x412386
  41238d:	aad    0xa9
  41238f:	inc    esp
  412390:	fwait
  412391:	iret   
  412392:	std    
  412393:	mov    ?,esi
  412395:	gs fcomip st,st(7)
  412398:	pop    ss
  412399:	adc    eax,0x28b61372
  41239e:	push   ds
  41239f:	(bad)  
  4123a1:	scas   eax,DWORD PTR es:[edi]
  4123a2:	and    ecx,DWORD PTR [ebp-0x5aa32520]
  4123a8:	stos   DWORD PTR es:[edi],eax
  4123a9:	jbe    0x412393
  4123ab:	mov    ds:0x243d8a46,eax
  4123b0:	lock xchg edi,eax
  4123b2:	enter  0x573e,0x81
  4123b6:	in     al,0x5c
  4123b8:	ss pop ecx
  4123ba:	pop    ebp
  4123bb:	pop    ebx
  4123bc:	mov    edx,0xaab1b02c
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	xor    BYTE PTR ds:0x6e18b929,cl
  4123c8:	arpl   si,bx
  4123ca:	sub    DWORD PTR [ebx+0x2e],esi
  4123cd:	je     0x412413
  4123cf:	stos   DWORD PTR es:[edi],eax
  4123d0:	ret    0xaed8
  4123d3:	dec    edx
  4123d4:	in     eax,dx
  4123d5:	adc    ch,BYTE PTR [eax]
  4123d7:	es js  0x4123d2
  4123da:	or     eax,0x8b9985a0
  4123df:	pop    esi
  4123e0:	pop    ecx
  4123e1:	adc    eax,0x697a20f2
  4123e6:	sub    al,0xbc
  4123e8:	shl    DWORD PTR [edx+0x249af1e3],1
  4123ee:	jb     0x4123bf
  4123f0:	push   ebp
  4123f1:	pusha  
  4123f2:	leave  
  4123f3:	test   DWORD PTR [eax-0x3913af62],0x8cb5426d
  4123fd:	pop    ebx
  4123fe:	xchg   edi,eax
  4123ff:	inc    esp
  412400:	rcl    dh,1
  412402:	mov    edx,0x7f8207
  412407:	or     al,ah
  412409:	icebp  
  41240a:	retf   
  41240b:	fdiv   DWORD PTR [ecx-0x1511dae3]
  412411:	mov    ebx,0xf78c9ea4
  412416:	mov    ecx,0xea284b63
  41241b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41241c:	jo     0x412474
  41241e:	jge    0x4123bd
  412420:	call   0x7c144e63
  412425:	jp     0x4123e9
  412427:	bound  ecx,QWORD PTR [ebp+edx*1+0x76bdbc95]
  41242e:	dec    esi
  41242f:	shl    edi,cl
  412431:	inc    esp
  412432:	sbb    ch,ah
  412434:	fist   DWORD PTR [edx]
  412436:	pop    esp
  412437:	hlt    
  412438:	call   0xebc4c4ae
  41243d:	mov    ecx,0xf68c0035
  412442:	mov    dh,0x8e
  412444:	scas   al,BYTE PTR es:[edi]
  412445:	(bad)  
  412446:	addr16 xchg edi,eax
  412448:	fsubr  DWORD PTR [ecx+0x73]
  41244b:	mov    bh,0x54
  41244d:	scas   eax,DWORD PTR es:[edi]
  41244e:	ins    BYTE PTR es:[edi],dx
  41244f:	aaa    
  412450:	sbb    BYTE PTR [ecx+eax*2+0x11],bl
  412454:	inc    ecx
  412455:	pop    es
  412456:	ins    BYTE PTR es:[edi],dx
  412457:	jg     0x412485
  412459:	mov    es,ebx
  41245b:	push   es
  41245c:	pushf  
  41245d:	and    DWORD PTR [ecx+esi*2+0x644c781e],0xffffff98
  412465:	loop   0x41248e
  412467:	cli    
  412468:	addr16 push ebx
  41246a:	or     ch,BYTE PTR ds:0xf9607211
  412470:	lods   eax,DWORD PTR ds:[esi]
  412471:	repnz push esp
  412473:	outs   dx,DWORD PTR ds:[esi]
  412474:	dec    ecx
  412475:	mov    al,ds:0x44255af3
  41247a:	pop    eax
  41247b:	sub    BYTE PTR [eax-0x4eb37be0],0x92
  412482:	jecxz  0x41245d
  412484:	xor    dl,ah
  412486:	js     0x4124ca
  412488:	or     al,0x60
  41248a:	push   edi
  41248b:	out    0x4c,al
  41248d:	pop    esp
  41248e:	outs   dx,BYTE PTR ds:[esi]
  41248f:	leave  
  412490:	enter  0xd1e6,0xe9
  412494:	sub    dl,BYTE PTR [ebp-0x66f4ff60]
  41249a:	test   al,0xed
  41249c:	dec    ebp
  41249d:	mov    ah,0xd8
  41249f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a0:	sbb    edi,DWORD PTR [edi-0x27450b23]
  4124a6:	push   edx
  4124a7:	push   ecx
  4124a8:	or     eax,0xfa26cc0
  4124ad:	out    dx,eax
  4124ae:	xor    DWORD PTR [ebx],0x77
  4124b1:	dec    esi
  4124b2:	repz jge 0x4124ad
  4124b5:	ja     0x4124b8
  4124b7:	das    
  4124b8:	mov    edx,0xb121948e
  4124bd:	das    
  4124be:	sbb    al,0xfa
  4124c0:	test   al,0x7d
  4124c2:	das    
  4124c3:	aad    0xde
  4124c5:	inc    ebx
  4124c6:	sub    DWORD PTR [ebx+0x6],edx
  4124c9:	int    0x9
  4124cb:	sub    al,0xc8
  4124cd:	ja     0x412487
  4124cf:	test   al,0xcf
  4124d1:	mov    cl,0x49
  4124d3:	leave  
  4124d4:	repz mov esi,0x514c5724
  4124da:	aad    0xd5
  4124dc:	push   ss
  4124dd:	je     0x412527
  4124df:	or     BYTE PTR [ecx-0xf],cl
  4124e2:	sub    cl,BYTE PTR [edi]
  4124e4:	stos   DWORD PTR es:[edi],eax
  4124e5:	mov    eax,ds:0x841a26a
  4124ea:	in     al,0xc5
  4124ec:	je     0x412554
  4124ee:	inc    eax
  4124ef:	xor    eax,0xc5bf5a64
  4124f4:	das    
  4124f5:	jb     0x41255a
  4124f7:	adc    DWORD PTR [eax-0x29],esi
  4124fa:	int    0xf9
  4124fc:	jge    0x41248d
  4124fe:	imul   ebp,DWORD PTR [esi-0x2d],0xee101429
  412505:	sub    DWORD PTR [eax-0x3723c91a],edi
  41250b:	inc    ebp
  41250c:	jmp    0x85312bf3
  412511:	push   edx
  412512:	jmp    0x412539
  412514:	ds pop ecx
  412516:	xchg   ebx,eax
  412517:	jbe    0x412528
  412519:	outs   dx,DWORD PTR ds:[esi]
  41251a:	inc    ebx
  41251b:	jns    0x4124a7
  41251d:	stos   DWORD PTR es:[edi],eax
  41251e:	lods   al,BYTE PTR ds:[esi]
  41251f:	mov    DWORD PTR ds:[edi],eax
  412522:	push   ecx
  412523:	loop   0x4124f3
  412525:	imul   esp,DWORD PTR [edx],0x674d44ce
  41252b:	or     al,dl
  41252d:	mov    dl,0xa3
  41252f:	jo     0x412530
  412531:	pop    ds
  412532:	out    0xa3,eax
  412534:	mov    eax,ds:0x924b6141
  412539:	aam    0xb4
  41253b:	sti    
  41253c:	push   ds
  41253d:	ret    
  41253e:	ja     0x41255e
  412540:	int3   
  412541:	clc    
  412542:	jmp    0x7e91:0x8989847
  412549:	sbb    edi,edx
  41254b:	imul   edx,DWORD PTR [ebx-0x49],0x1a554858
  412552:	jmp    0x1e2ff8af
  412557:	jg     0x41256c
  412559:	cmp    al,0x12
  41255b:	call   0x7a91:0xd83860fe
  412562:	stc    
  412563:	sbb    eax,0x8f850834
  412568:	cld    
  412569:	cs mov bl,0xaa
  41256c:	inc    edi
  41256d:	ficom  WORD PTR [eax+0x5]
  412570:	jp     0x41255c
  412572:	add    DWORD PTR [esi-0x52],edi
  412575:	lahf   
  412576:	fcom   QWORD PTR [eax+0xe]
  412579:	dec    ebp
  41257a:	(bad)  
  41257c:	mov    ds:0xaa56b8c6,eax
  412581:	cmp    BYTE PTR ds:0xa7e56c7e,bh
  412587:	fst    DWORD PTR [ecx-0x7bc0f3b6]
  41258d:	dec    edi
  41258e:	aaa    
  41258f:	dec    eax
  412590:	fsub   QWORD PTR [edi+0x18525689]
  412596:	lods   eax,DWORD PTR ds:[esi]
  412597:	popa   
  412598:	mov    edi,0xc8fc4246
  41259d:	jge    0x4125fc
  41259f:	dec    edx
  4125a0:	getsec 
  4125a2:	mov    eax,0x2b74efff
  4125a7:	inc    edi
  4125a8:	push   0xcae2c8f3
  4125ad:	(bad)  
  4125ae:	mov    WORD PTR [eax],ss
  4125b0:	sub    dl,dh
  4125b2:	loope  0x41260f
  4125b4:	out    0x99,eax
  4125b6:	add    al,0x5a
  4125b8:	call   ebp
  4125ba:	loop   0x412636
  4125bc:	dec    eax
  4125bd:	shr    BYTE PTR [esi],1
  4125bf:	enter  0x1543,0x8a
  4125c3:	iret   
  4125c4:	ror    DWORD PTR [eax-0x73],cl
  4125c7:	lahf   
  4125c8:	popf   
  4125c9:	and    DWORD PTR [edx],0xffffffe5
  4125cc:	test   al,0xea
  4125ce:	mov    ecx,0x80ebaee7
  4125d3:	fisub  DWORD PTR [edx]
  4125d5:	(bad)  
  4125d6:	pop    esp
  4125d7:	and    ch,BYTE PTR [ebp+0x6196d203]
  4125dd:	xor    ebx,DWORD PTR [ebx+0x228711ba]
  4125e3:	es add al,0xb
  4125e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125e7:	adc    BYTE PTR [eax],al
  4125e9:	stc    
  4125ea:	xor    DWORD PTR [esi+0x773af258],edx
  4125f0:	and    DWORD PTR [ebp+0x64c27c90],0xffffffd5
  4125f7:	push   es
  4125f8:	xchg   ebp,eax
  4125f9:	adc    BYTE PTR [eax],ch
  4125fb:	repnz or eax,ecx
  4125fe:	mov    esp,0xd3951db1
  412603:	mov    WORD PTR [ebp+0x326d8e3d],?
  412609:	inc    ebp
  41260a:	push   ebx
  41260b:	dec    ecx
  41260c:	ror    DWORD PTR [eax+esi*2-0x2808fa00],cl
  412613:	mov    ds:0x59f5d1e8,al
  412618:	test   DWORD PTR [eax+0x15],edx
  41261b:	push   ss
  41261c:	pop    esp
  41261d:	fwait
  41261e:	out    dx,al
  41261f:	inc    ecx
  412620:	inc    eax
  412621:	call   0x14b:0x659639ca
  412628:	xor    al,BYTE PTR [eax+0x22]
  41262b:	icebp  
  41262c:	mov    ebx,0xc40e40d5
  412631:	cdq    
  412632:	test   BYTE PTR fs:[ebx],al
  412635:	jmp    FWORD PTR [ecx]
  412637:	and    DWORD PTR [ebp+ebx*4-0x39e8f2b5],edi
  41263e:	cmc    
  41263f:	xchg   esi,eax
  412640:	shl    DWORD PTR [esi],0x4e
  412643:	pop    es
  412644:	in     al,0x15
  412646:	xlat   BYTE PTR ds:[ebx]
  412647:	repz ss jmp 0x412653
  41264b:	mov    ds:0xe0fcb6b5,eax
  412650:	sub    al,ch
  412652:	stos   DWORD PTR es:[edi],eax
  412653:	xchg   eax,edx
  412655:	fmul   DWORD PTR [esi]
  412657:	icebp  
  412658:	mov    bh,0x92
  41265a:	xor    eax,0x260a39cd
  41265f:	std    
  412660:	cld    
  412661:	dec    esi
  412662:	cld    
  412663:	xchg   ebp,eax
  412664:	js     0x4125fb
  412666:	jo     0x412647
  412668:	(bad)  
  412669:	mov    fs,WORD PTR [edx+0x65]
  41266c:	mov    edi,0x94028a69
  412671:	fwait
  412672:	sub    cl,0xcd
  412675:	jmp    0xb6decbfc
  41267a:	inc    ebp
  41267b:	mov    ds:0xb3708cb4,eax
  412680:	cmp    eax,DWORD PTR [edi]
  412682:	pushf  
  412683:	mov    bh,0xaa
  412685:	sub    dl,BYTE PTR [edi+0x63]
  412688:	cmp    DWORD PTR [eax-0x409c4c91],eax
  41268e:	adc    esi,ebp
  412690:	mov    WORD PTR [ecx],ss
  412692:	sub    BYTE PTR [ebp+0x32c8d2e6],cl
  412698:	je     0x4126c8
  41269a:	adc    ebp,ebx
  41269c:	pop    esi
  41269d:	push   ebp
  41269e:	fidivr WORD PTR [esi+0x13]
  4126a1:	(bad)  
  4126a2:	mov    al,ds:0xd286455d
  4126a7:	psubd  mm5,QWORD PTR [edx-0x3b]
  4126ab:	jmp    0x412669
  4126ad:	and    esi,DWORD PTR [esi+0x45d38118]
  4126b3:	jns    0x412637
  4126b5:	ror    DWORD PTR [esi],1
  4126b7:	call   0x776c:0x4ad34cbb
  4126be:	xchg   BYTE PTR [edx-0x164e79a4],bh
  4126c4:	mov    bl,0x2
  4126c6:	mov    BYTE PTR [ecx],al
  4126c8:	nop
  4126c9:	mov    edi,0xa879af21
  4126ce:	stos   BYTE PTR es:[edi],al
  4126cf:	mov    eax,ds:0xa96874d3
  4126d4:	add    eax,0x7b1699c2
  4126d9:	jg     0x412676
  4126db:	fstp   TBYTE PTR [eax]
  4126dd:	lock adc al,0xac
  4126e0:	enter  0x5ff7,0x22
  4126e4:	or     BYTE PTR [ebx-0x78c5ea3d],bh
  4126ea:	pop    esi
  4126eb:	ss fcmovnu st,st(5)
  4126ee:	jmp    0xe55e:0x82d20302
  4126f5:	(bad)  
  4126f6:	out    0x87,al
  4126f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126f9:	repz or al,BYTE PTR [ebx]
  4126fc:	pop    edx
  4126fd:	dec    ebp
  4126fe:	jle    0x4126f9
  412700:	xchg   edx,eax
  412701:	sub    BYTE PTR [esp+edx*8-0x1c],ch
  412705:	mov    ebx,0xe38f256d
  41270a:	jmp    0x4126ee
  41270c:	mov    edx,0x69c34120
  412711:	xchg   ebx,eax
  412712:	cmp    ch,bl
  412714:	out    dx,al
  412715:	(bad)  
  412716:	mov    ds:0x867df100,al
  41271b:	shr    DWORD PTR [esi+0x58],1
  41271e:	clc    
  41271f:	dec    edi
  412720:	aad    0xab
  412722:	pop    esp
  412723:	mov    al,0xc5
  412725:	pop    esi
  412726:	mov    ah,0x40
  412728:	imul   ebp,DWORD PTR [ecx+edi*1-0x3b],0x42
  41272d:	jb     0x412750
  41272f:	sbb    DWORD PTR [edx+0x68b95b21],0xffffffff
  412736:	neg    DWORD PTR [ebp+ebx*2-0x39]
  41273a:	jns    0x412775
  41273c:	mov    esi,0xac8723a
  412741:	arpl   WORD PTR [edx+0x61],sp
  412744:	push   ebp
  412745:	clc    
  412746:	outs   dx,DWORD PTR ds:[esi]
  412747:	xchg   al,ch
  412749:	inc    esp
  41274a:	sbb    esp,DWORD PTR [edx+0x44d39d86]
  412750:	(bad)  
  412751:	mov    esi,0x2cf6a38a
  412756:	jge    0x412741
  412758:	xlat   BYTE PTR ds:[ebx]
  412759:	or     DWORD PTR [ecx+0x49],edx
  41275c:	push   0xa0e45d4f
  412761:	jle    0x412760
  412763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412764:	(bad)  
  412765:	ja     0x4127d4
  412767:	cdq    
  412768:	shl    BYTE PTR [ebx+eiz*2-0x48],0x47
  41276d:	add    esi,DWORD PTR [edx]
  41276f:	inc    esi
  412770:	dec    DWORD PTR [ecx-0xa355452]
  412776:	out    0x44,al
  412778:	ss inc ebp
  41277a:	inc    eax
  41277b:	sbb    BYTE PTR [ecx],bh
  41277d:	mov    ebx,0x8b7bb0bf
  412782:	mov    al,0x15
  412784:	popa   
  412785:	cmp    esp,DWORD PTR [eax-0x6f]
  412788:	test   BYTE PTR [ebp+0x4b241023],0x16
  41278f:	cmp    eax,0x84ecdb6e
  412794:	xor    eax,0x8f77bd76
  412799:	fcom   QWORD PTR [ebp+ebp*2+0x3e58b06c]
  4127a0:	test   BYTE PTR [edi-0x6057d094],cl
  4127a6:	fprem  
  4127a8:	push   ds
  4127a9:	js     0x412796
  4127ab:	(bad)  
  4127ad:	mov    edi,DWORD PTR [ebp+0x3cfcca11]
  4127b3:	in     al,dx
  4127b4:	scas   al,BYTE PTR es:[edi]
  4127b5:	dec    edx
  4127b6:	push   ebp
  4127b7:	jmp    0x4127c2
  4127b9:	sub    BYTE PTR [esi+esi*2+0x7c],ch
  4127bd:	xchg   BYTE PTR [edx+eiz*1+0x5b],cl
  4127c1:	rcr    BYTE PTR [esi+0x581cd6b0],cl
  4127c7:	(bad)  
  4127c8:	mov    esp,0xfa9dde55
  4127cd:	xchg   ebx,eax
  4127ce:	pop    edx
  4127cf:	cmc    
  4127d0:	fdiv   DWORD PTR [edi]
  4127d2:	int    0xac
  4127d4:	hlt    
  4127d5:	xchg   edi,eax
  4127d6:	cld    
  4127d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d8:	sub    ebx,esi
  4127da:	xchg   ebx,eax
  4127db:	adc    al,BYTE PTR [esi]
  4127dd:	mov    dh,0xd0
  4127df:	xor    DWORD PTR [edi+0x2f84578],0x7e
  4127e6:	pop    eax
  4127e7:	pop    ds
  4127e8:	mov    dh,0x99
  4127ea:	and    BYTE PTR ss:[edx-0x6cd0b5e2],dh
  4127f1:	xchg   ebp,eax
  4127f2:	pushf  
  4127f3:	popf   
  4127f4:	inc    eax
  4127f5:	sbb    dh,BYTE PTR [eax+0x1f]
  4127f8:	push   ebx
  4127f9:	iret   
  4127fa:	add    DWORD PTR [edi],edx
  4127fc:	jle    0x412780
  4127fe:	ja     0x4127c8
  412800:	lods   eax,DWORD PTR ds:[esi]
  412801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412802:	push   es
  412803:	(bad)  [esi]
  412805:	mov    edx,0x19ea3c3b
  41280a:	pusha  
  41280b:	test   DWORD PTR ds:[ebx],edx
  41280e:	and    al,0x36
  412810:	popa   
  412811:	xchg   BYTE PTR [edi+0x174e5a39],dh
  412817:	mov    BYTE PTR [eax],ch
  412819:	arpl   ax,bp
  41281b:	xchg   ebp,eax
  41281c:	mov    eax,cs:0x329b546e
  412822:	outs   dx,DWORD PTR ds:[esi]
  412823:	xchg   ecx,eax
  412824:	out    dx,eax
  412825:	mov    ecx,0xa7c5918
  41282a:	jo     0x412822
  41282c:	lods   al,BYTE PTR ds:[esi]
  41282d:	rcl    ebp,1
  41282f:	loope  0x4127fc
  412831:	xor    BYTE PTR [esi],bh
  412833:	in     al,0x81
  412835:	add    DWORD PTR [ebx],edx
  412837:	cli    
  412838:	stc    
  412839:	fsub   DWORD PTR [edi+eiz*4+0xb]
  41283d:	scas   eax,DWORD PTR es:[edi]
  41283e:	push   esi
  41283f:	mov    bl,0x6f
  412841:	cmp    eax,DWORD PTR [edi]
  412843:	shl    BYTE PTR [ebx],cl
  412845:	and    dl,BYTE PTR [esi+0x76b448e]
  41284b:	cmp    esi,DWORD PTR [ecx]
  41284d:	add    al,0x2a
  41284f:	rol    BYTE PTR [ebx-0x3b02c4ae],1
  412855:	shl    BYTE PTR [edx+0x1c9f3fb7],cl
  41285b:	and    cl,BYTE PTR [eax]
  41285d:	mov    ch,0xae
  41285f:	dec    ecx
  412860:	pop    ebx
  412861:	and    BYTE PTR [edx-0x20],bl
  412864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412865:	push   DWORD PTR [esi+0x143449b9]
  41286b:	sbb    ebx,esi
  41286d:	jg     0x4128c1
  41286f:	xor    dl,al
  412871:	add    edi,DWORD PTR [ebp+eiz*1-0x74585ad7]
  412878:	push   eax
  412879:	in     al,0x64
  41287b:	mov    ch,0xd8
  41287d:	xchg   esp,eax
  41287e:	push   ss
  41287f:	or     al,0xa
  412881:	iret   
  412882:	jmp    0x1eee:0x60019d8c
  412889:	imul   ebp,ebx,0x6b
  41288c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288d:	xchg   esp,eax
  41288e:	dec    esp
  41288f:	in     eax,0x7d
  412891:	adc    DWORD PTR [ecx],eax
  412893:	jbe    0x41283e
  412895:	push   esp
  412896:	or     dl,al
  412898:	and    esp,esi
  41289a:	dec    edi
  41289b:	out    0x5f,al
  41289d:	add    al,0xe7
  41289f:	fwait
  4128a0:	pop    esi
  4128a1:	xor    BYTE PTR [eax],dl
  4128a3:	(bad)
  4128a6:	in     al,dx
  4128a7:	sub    eax,0x91cb744
  4128ac:	pop    ds
  4128ad:	iret   
  4128ae:	jge    0x4128c8
  4128b0:	retf   0xc90f
  4128b3:	xchg   edi,eax
  4128b4:	jp     0x41292a
  4128b6:	pusha  
  4128b7:	fwait
  4128b8:	xchg   edi,esi
  4128ba:	div    DWORD PTR [eax]
  4128bc:	add    DWORD PTR [ebp+0x2e],0xffffff81
  4128c0:	add    BYTE PTR [ebp+0x3de813b7],bh
  4128c6:	lahf   
  4128c7:	cmp    BYTE PTR [ebx+edi*8+0x5424c4f1],al
  4128ce:	sbb    BYTE PTR [ebx+0x64],al
  4128d1:	push   esi
  4128d2:	xor    ecx,DWORD PTR [edx]
  4128d4:	pop    ebp
  4128d5:	and    DWORD PTR [ecx+0x3a],ecx
  4128d8:	pop    ds
  4128d9:	mov    ?,WORD PTR [esi+0x72]
  4128dc:	mov    ecx,0x75aa5f7
  4128e1:	pop    ds
  4128e2:	sub    BYTE PTR [esi-0x2217ec15],cl
  4128e8:	inc    ecx
  4128e9:	dec    ecx
  4128ea:	inc    ecx
  4128eb:	(bad)  [edx+0xe]
  4128ee:	mov    cl,0xe8
  4128f0:	pop    edx
  4128f1:	xor    al,0x5a
  4128f3:	pushf  
  4128f4:	shl    DWORD PTR [ebx-0xf90ecb5],cl
  4128fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128fb:	sbb    ebp,DWORD PTR [ebx+esi*2-0x66]
  4128ff:	push   0xd457d48b
  412904:	test   DWORD PTR [ecx+0x6f3cc6c5],edi
  41290a:	push   ecx
  41290b:	push   0x44d94ad5
  412910:	or     BYTE PTR [ebp-0x5fb04f98],dh
  412916:	neg    edx
  412918:	jb     0x41293c
  41291a:	cmc    
  41291b:	xchg   DWORD PTR [edx+0x518f9d54],edx
  412921:	sti    
  412922:	dec    edi
  412923:	leave  
  412924:	std    
  412925:	sar    edx,0x16
  412928:	leave  
  412929:	push   ebx
  41292a:	sahf   
  41292b:	loope  0x412914
  41292d:	and    BYTE PTR [edx+ecx*4-0x3b],dl
  412931:	mov    dl,0x27
  412933:	rcr    DWORD PTR [ebx],0x3e
  412936:	adc    ebx,DWORD PTR [eax]
  412938:	or     ch,BYTE PTR [esi-0x6ff80c62]
  41293e:	imul   eax,DWORD PTR [eax-0x5d],0x96bbfcf
  412945:	sbb    DWORD PTR [edi+ebx*2],esi
  412948:	or     edi,eax
  41294a:	xor    DWORD PTR [eax+0x5f6806a9],edx
  412950:	mov    ch,0x6a
  412952:	(bad)  
  412953:	add    DWORD PTR [ecx],edi
  412955:	call   0xcd92d782
  41295a:	sbb    edi,DWORD PTR [ecx+0x3d]
  41295d:	das    
  41295e:	mov    ds:0xbe16a8f3,al
  412963:	fild   DWORD PTR [edi+0x71]
  412966:	push   cs
  412967:	ret    
  412968:	das    
  412969:	cwde   
  41296a:	or     BYTE PTR [ebp-0x2f],0xbd
  41296e:	nop
  41296f:	loop   0x4129d5
  412971:	adc    al,BYTE PTR [edx-0x4d94d12e]
  412977:	jmp    0x4ce1:0xf412cacd
  41297e:	pop    ebp
  41297f:	fmul   QWORD PTR [ebx+0x1a]
  412982:	fcomp  QWORD PTR [edi]
  412984:	jp     0x412980
  412986:	cmp    edx,DWORD PTR [ebx+0x27901b27]
  41298c:	test   eax,0xed3b7db4
  412991:	adc    eax,0x35a113c4
  412996:	mov    eax,ds:0x80285e52
  41299b:	mov    al,ds:0x792b1be1
  4129a0:	mov    edi,0xa4c301c0
  4129a5:	out    dx,al
  4129a6:	(bad)  
  4129a7:	jle    0x4129eb
  4129a9:	mov    bl,0x99
  4129ab:	xchg   BYTE PTR [edi+0x5d],dl
  4129ae:	daa    
  4129af:	(bad)  
  4129b0:	dec    eax
  4129b1:	iret   
  4129b2:	inc    eax
  4129b3:	fisttp QWORD PTR [ebx+eiz*8-0x1f]
  4129b7:	xchg   ecx,eax
  4129b8:	cmp    eax,0x4b04ab38
  4129bd:	nop
  4129be:	daa    
  4129bf:	jmp    0x41295e
  4129c1:	hlt    
  4129c2:	mov    cx,0xb853
  4129c6:	xchg   edi,eax
  4129c7:	dec    esp
  4129c8:	mov    edi,DWORD PTR [ebp+eiz*4+0x5f461da7]
  4129cf:	rcl    DWORD PTR [ecx+0x3441da37],0x25
  4129d6:	mov    eax,0xbc0b3599
  4129db:	es fst st(6)
  4129de:	int3   
  4129df:	adc    al,0x89
  4129e1:	imul   edx,DWORD PTR [eax-0x17],0x5cee7b44
  4129e8:	ret    
  4129e9:	or     DWORD PTR [edx],esi
  4129eb:	stc    
  4129ec:	sahf   
  4129ed:	inc    BYTE PTR [edx-0x7977f8e1]
  4129f3:	out    dx,al
  4129f4:	lods   al,BYTE PTR ds:[esi]
  4129f5:	xor    al,0xc8
  4129f7:	popf   
  4129f8:	xchg   edi,eax
  4129f9:	(bad)  
  4129fa:	repnz lds edi,FWORD PTR [eax]
  4129fd:	in     eax,0xbd
  4129ff:	std    
  412a00:	lods   al,BYTE PTR ds:[esi]
  412a01:	inc    esi
  412a02:	xchg   ebx,eax
  412a03:	adc    dh,bl
  412a05:	push   esi
  412a06:	jmp    0x33db:0xdf2bf0c5
  412a0d:	inc    ebx
  412a0e:	stos   BYTE PTR es:[edi],al
  412a0f:	enter  0xdc21,0xf9
  412a13:	fnstsw WORD PTR [esi+0x2be05c81]
  412a19:	fndisi(8087 only) 
  412a1b:	addr16 jp 0x412a6d
  412a1e:	ret    0xb649
  412a21:	hlt    
  412a22:	and    al,0x40
  412a24:	ss loopne 0x412a63
  412a27:	sub    BYTE PTR [esp+ecx*1-0x2e860cac],bl
  412a2e:	bnd jg 0x412a37
  412a31:	jecxz  0x412a16
  412a33:	sub    DWORD PTR [edx+0x77],esp
  412a36:	ja     0x412a31
  412a38:	adc    al,0xf
  412a3a:	add    eax,0x9531b277
  412a3f:	sbb    al,0x68
  412a41:	dec    edi
  412a42:	scas   eax,DWORD PTR es:[edi]
  412a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a44:	jne    0x412a84
  412a46:	sbb    al,0x1d
  412a48:	cmp    bh,BYTE PTR [edi+0x4250b046]
  412a4e:	(bad)  
  412a4f:	out    0xba,al
  412a51:	pop    edi
  412a52:	push   eax
  412a53:	data16 (bad) 
  412a55:	mov    al,ds:0x6652c013
  412a5a:	xor    BYTE PTR [ebx-0x5a2bf802],ah
  412a60:	leave  
  412a61:	dec    eax
  412a62:	sbb    DWORD PTR [edx+esi*2-0x6f8bc410],eax
  412a69:	mul    BYTE PTR [eax+0x46]
  412a6c:	test   eax,0x8a4ac5ef
  412a71:	shl    BYTE PTR [esi-0x79],cl
  412a74:	push   esi
  412a75:	xor    DWORD PTR [ebx+edx*8+0x31],ebp
  412a79:	mov    esp,0xf4e0993e
  412a7e:	loopne 0x412a83
  412a80:	ins    DWORD PTR es:[edi],dx
  412a81:	pop    edx
  412a82:	mov    edx,0x605ef655
  412a88:	jae    0x412a46
  412a8a:	pop    edi
  412a8b:	(bad)  [edi]
  412a8d:	(bad)  
  412a8e:	push   ecx
  412a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a90:	jno    0x412ac4
  412a92:	test   DWORD PTR [esi-0x80],ecx
  412a95:	lods   eax,DWORD PTR ds:[esi]
  412a96:	jg     0x412b03
  412a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a99:	imul   edx,DWORD PTR [eax-0xa],0xffffffb8
  412a9d:	in     eax,dx
  412a9e:	mov    ds:0x95b3169f,al
  412aa3:	neg    edi
  412aa5:	imul   ecx,DWORD PTR [eax-0x51343eb3],0x44
  412aac:	(bad)  [edx+ebp*4+0x36cfd0db]
  412ab3:	add    al,BYTE PTR [eax+0x65]
  412ab6:	push   ebx
  412ab7:	setne  BYTE PTR [edx+esi*8]
  412abb:	lock inc ecx
  412abd:	loope  0x412a72
  412abf:	hlt    
  412ac0:	cmc    
  412ac1:	push   ebp
  412ac2:	pusha  
  412ac3:	sahf   
  412ac4:	packuswb mm2,QWORD PTR [ecx]
  412ac7:	mov    al,0xe5
  412ac9:	xor    al,0xa1
  412acb:	call   0xbfff9326
  412ad0:	xchg   ebp,eax
  412ad1:	mov    edx,0xdc98f390
  412ad6:	jecxz  0x412b23
  412ad8:	sbb    BYTE PTR [edx-0x13],dh
  412adb:	jl     0x412b2c
  412add:	fisttp WORD PTR [eax]
  412adf:	ret    0x79a4
  412ae2:	xor    BYTE PTR [eax+0x7d441700],ch
  412ae8:	add    al,0xc3
  412aea:	ret    0xa4e8
  412aed:	aad    0x81
  412aef:	jae    0x412ae9
  412af1:	xchg   BYTE PTR [ebx],ch
  412af3:	rep ins DWORD PTR es:[edi],dx
  412af5:	ins    BYTE PTR es:[edi],dx
  412af6:	mov    esi,DWORD PTR [esi-0x4c]
  412af9:	mov    dl,0x6b
  412afb:	dec    esp
  412afc:	or     bl,BYTE PTR [edi+edx*1-0x7d]
  412b00:	mov    ah,0x53
  412b02:	popf   
  412b03:	sbb    ebp,ebp
  412b05:	ret    
  412b06:	ja     0x412a91
  412b08:	mov    al,ch
  412b0a:	addr16 cmp dh,bh
  412b0d:	mov    esp,DWORD PTR [edi]
  412b0f:	test   eax,0x2ea8ab3b
  412b14:	les    edi,FWORD PTR [edx-0x48]
  412b17:	pop    edi
  412b18:	cli    
  412b19:	sub    eax,0x7be71a00
  412b1e:	push   eax
  412b1f:	lods   eax,DWORD PTR ds:[esi]
  412b20:	das    
  412b21:	dec    edx
  412b22:	or     BYTE PTR [edi-0x31],ch
  412b25:	or     al,0x23
  412b27:	call   0x6526:0x6a78f71a
  412b2e:	dec    edi
  412b2f:	outs   dx,DWORD PTR ds:[esi]
  412b30:	dec    esp
  412b31:	or     BYTE PTR [eax-0x203ccf2],dh
  412b37:	xlat   BYTE PTR ds:[ebx]
  412b38:	aad    0xe0
  412b3a:	fsubp  st(4),st
  412b3c:	scas   al,BYTE PTR es:[edi]
  412b3d:	aam    0x8e
  412b3f:	inc    ebx
  412b40:	out    dx,eax
  412b41:	jge    0x412ada
  412b43:	sbb    al,0x83
  412b45:	and    bl,0x68
  412b48:	std    
  412b49:	push   ss
  412b4a:	inc    ebp
  412b4b:	das    
  412b4c:	push   ebx
  412b4d:	and    ecx,eax
  412b4f:	mov    eax,0x9977fc90
  412b54:	sbb    ebx,DWORD PTR [ebx+0x205830ff]
  412b5a:	jle    0x412b07
  412b5c:	and    al,0x75
  412b5e:	je     0x412bbb
  412b60:	jl     0x412b29
  412b62:	test   al,0xb5
  412b64:	inc    ecx
  412b65:	mov    edx,0xe26d93fa
  412b6a:	fild   DWORD PTR [edx]
  412b6c:	jo     0x412bd3
  412b6e:	aam    0x11
  412b70:	rcl    eax,0x0
  412b73:	adc    edi,0xe0a7c685
  412b79:	sub    ch,BYTE PTR [eax]
  412b7b:	or     al,0xfe
  412b7d:	xchg   DWORD PTR [ebp+eax*4+0x62bfe53f],esi
  412b84:	or     BYTE PTR [eax],dl
  412b86:	call   0x8c77:0x9809fb65
  412b8d:	call   0x474b35ca
  412b92:	int3   
  412b93:	sbb    eax,DWORD PTR [ecx+esi*8]
  412b96:	inc    esp
  412b97:	test   edi,ebx
  412b99:	sbb    BYTE PTR [ecx+0x22],ah
  412b9c:	mov    cl,0x31
  412b9e:	cmp    BYTE PTR [eax-0xd],0x44
  412ba2:	mov    ch,0xdd
  412ba4:	mov    esi,0x7d79ac43
  412ba9:	mov    ch,0x39
  412bab:	cmp    al,0xfd
  412bad:	add    BYTE PTR [ebp+eiz*1+0x3432d50d],bl
  412bb4:	in     al,dx
  412bb5:	and    eax,DWORD PTR ds:0xe0900ef1
  412bbb:	pusha  
  412bbc:	jl     0x412c13
  412bbe:	inc    ebx
  412bbf:	sub    ax,0xf3eb
  412bc3:	or     ebp,edx
  412bc5:	ds pop edx
  412bc7:	mov    ah,BYTE PTR [edx]
  412bc9:	clc    
  412bca:	pop    edi
  412bcb:	mov    cl,0x99
  412bcd:	addr16 dec ebx
  412bcf:	inc    ebx
  412bd0:	sub    eax,0xbfafcfac
  412bd5:	jbe    0x412c33
  412bd7:	aas    
  412bd8:	imul   ebp,DWORD PTR [edi+0x5bc629d],0xffffff97
  412bdf:	fwait
  412be0:	xor    BYTE PTR [eax+0x13],al
  412be3:	mov    eax,ds:0x15229dce
  412be8:	scas   al,BYTE PTR es:[edi]
  412be9:	sub    BYTE PTR [ebx+esi*1],0x22
  412bed:	sbb    al,0x52
  412bef:	stos   BYTE PTR es:[edi],al
  412bf0:	inc    eax
  412bf1:	jge    0x412bd3
  412bf3:	je     0x412c29
  412bf5:	out    dx,al
  412bf6:	mov    dl,0x9c
  412bf8:	sahf   
  412bf9:	and    esi,DWORD PTR ds:0x84aa90f6
  412bff:	pop    ebx
  412c00:	outs   dx,DWORD PTR ds:[esi]
  412c01:	fisttp QWORD PTR [ebp-0x42]
  412c04:	ret    0xbd51
  412c07:	sbb    eax,0x63c33e34
  412c0c:	enter  0xf079,0xce
  412c10:	push   0x55
  412c12:	(bad)  
  412c14:	jno    0x412c92
  412c16:	xchg   esp,eax
  412c17:	push   ecx
  412c18:	mov    DWORD PTR [eax-0x4e511d2b],ebp
  412c1e:	rcr    DWORD PTR ds:0x1a53e6e4,cl
  412c24:	jmp    FWORD PTR [esp+ebx*2-0x7f]
  412c28:	lahf   
  412c29:	add    dh,BYTE PTR [ecx-0x6d]
  412c2c:	aaa    
  412c2d:	arpl   WORD PTR [esp+eax*2+0x52],ax
  412c31:	add    eax,0xe203461
  412c36:	pop    edx
  412c37:	(bad)  
  412c38:	push   0xbfcf13bf
  412c3d:	or     edx,DWORD PTR [ecx+0x64]
  412c40:	push   0xffffffe1
  412c42:	call   0xb2027884
  412c47:	push   0xc7e3447e
  412c4c:	stos   DWORD PTR es:[edi],eax
  412c4d:	xchg   esi,eax
  412c4e:	jae    0x412cc9
  412c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c51:	jb     0x412cc7
  412c53:	cmc    
  412c54:	scas   al,BYTE PTR es:[edi]
  412c55:	cmp    eax,0x50f6294
  412c5a:	or     ebp,DWORD PTR [edi-0x47]
  412c5d:	add    DWORD PTR [ebp-0x3b2beb7f],eax
  412c63:	inc    edi
  412c64:	retf   
  412c65:	xchg   esp,eax
  412c67:	pop    ebx
  412c68:	addr16 in al,dx
  412c6a:	xchg   ebx,eax
  412c6b:	mov    ebp,0xf6de60e0
  412c70:	and    eax,0x85bcb22
  412c75:	xor    BYTE PTR [edi],0x9
  412c78:	xor    bl,0x17
  412c7b:	mov    BYTE PTR [ebx+0x7941c548],al
  412c81:	xor    edx,DWORD PTR [edi+0x24]
  412c84:	add    ebx,DWORD PTR [ebx-0xb]
  412c87:	sbb    edi,DWORD PTR [edx+0x71]
  412c8a:	pop    es
  412c8b:	pop    ecx
  412c8c:	fidiv  WORD PTR [esi]
  412c8e:	push   0xed6d0c3e
  412c93:	daa    
  412c94:	les    edi,FWORD PTR ds:0xa18789a6
  412c9a:	adc    al,0x60
  412c9c:	clc    
  412c9d:	push   ecx
  412c9e:	adc    DWORD PTR [edx],ebp
  412ca0:	scas   al,BYTE PTR es:[edi]
  412ca1:	into   
  412ca2:	(bad)  
  412ca3:	std    
  412ca4:	jo     0x412c69
  412ca6:	jp     0x412cba
  412ca8:	or     al,0x86
  412caa:	push   ebp
  412cab:	xchg   ecx,eax
  412cac:	sti    
  412cad:	cmp    al,0x7c
  412caf:	imul   DWORD PTR [eax]
  412cb1:	sar    ecx,1
  412cb3:	and    dh,BYTE PTR [edi+eiz*2+0x707cedfd]
  412cba:	mov    eax,ds:0x74785d06
  412cbf:	retf   
  412cc0:	sti    
  412cc1:	push   ecx
  412cc2:	xchg   esi,eax
  412cc3:	ins    DWORD PTR es:[edi],dx
  412cc4:	jns    0x412d3d
  412cc6:	pop    esi
  412cc7:	xor    al,0x5a
  412cc9:	mov    eax,ds:0x107f1567
  412cce:	or     eax,DWORD PTR [eax-0x43659261]
  412cd4:	rcr    DWORD PTR [edi-0x5a],0xe9
  412cd8:	and    ecx,DWORD PTR [ebx]
  412cda:	push   0x32ff5129
  412cdf:	push   ebx
  412ce0:	imul   esi,DWORD PTR gs:[eax],0x843bf06a
  412ce7:	sti    
  412ce8:	test   al,0xa8
  412cea:	cli    
  412ceb:	ficomp WORD PTR [ecx-0xab43c16]
  412cf1:	call   0x762e:0x32cfe5a5
  412cf8:	fild   QWORD PTR [eax]
  412cfa:	sub    eax,0x94168240
  412cff:	push   edx
  412d00:	out    dx,al
  412d01:	pop    eax
  412d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d03:	add    al,0x23
  412d05:	mov    dl,0x1
  412d07:	inc    ebp
  412d08:	jp     0x412d4e
  412d0a:	fild   DWORD PTR [eax-0x2a]
  412d0d:	push   eax
  412d0e:	adc    DWORD PTR [ebx-0x45],0x287de6cc
  412d15:	not    ebx
  412d17:	mov    cl,0xc
  412d19:	mov    esp,0xaa189f05
  412d1e:	cwde   
  412d1f:	add    al,0xab
  412d21:	test   BYTE PTR [edi],dl
  412d23:	scas   al,BYTE PTR es:[edi]
  412d24:	push   0x3
  412d26:	add    ebx,DWORD PTR [eax+0x51ac945b]
  412d2c:	fcomi  st,st(0)
  412d2e:	mov    al,ds:0xd420d3f3
  412d33:	test   DWORD PTR [ebp+0x32],edx
  412d36:	and    bh,al
  412d38:	and    bl,BYTE PTR [eax]
  412d3a:	fiadd  WORD PTR ds:0x885f978
  412d40:	das    
  412d41:	jbe    0x412cf5
  412d43:	hlt    
  412d44:	and    eax,DWORD PTR [ebp+0x314b330b]
  412d4a:	and    DWORD PTR [edx-0x74],0x52ec37a2
  412d51:	mov    edx,0xb6545491
  412d56:	cmp    ebx,ebx
  412d58:	mov    ah,0xcf
  412d5a:	test   eax,0x2abaec92
  412d5f:	bound  edx,QWORD PTR [edx+0x73d30842]
  412d65:	cmp    esp,DWORD PTR [ebx+0x525a1c38]
  412d6b:	les    ecx,FWORD PTR [edx]
  412d6d:	add    al,0xdf
  412d6f:	mov    ebp,DWORD PTR [ecx-0x68f2d8a8]
  412d75:	ror    DWORD PTR [ebp-0x43fad299],1
  412d7b:	in     al,dx
  412d7c:	data16 std 
  412d7e:	popa   
  412d7f:	in     al,dx
  412d80:	inc    edi
  412d81:	inc    esi
  412d82:	mov    DWORD PTR [ebx-0x65438ef2],esi
  412d88:	sbb    BYTE PTR [edi],al
  412d8a:	mov    esi,0x148315e8
  412d8f:	jmp    0x412da4
  412d91:	sub    esi,DWORD PTR [ecx-0x41]
  412d94:	xor    BYTE PTR [esi+0x22],bh
  412d97:	jmp    0x412d9f
  412d99:	mov    bh,0xc4
  412d9b:	mov    esp,0x583d252d
  412da0:	ins    DWORD PTR es:[edi],dx
  412da1:	iret   
  412da2:	dec    edx
  412da3:	and    ebx,esp
  412da5:	retf   0xd99a
  412da8:	pop    ds
  412da9:	(bad)  
  412daa:	frstor [ebx]
  412dac:	std    
  412dad:	or     BYTE PTR [ebx+edx*2],cl
  412db0:	mov    al,0xa3
  412db2:	or     ebp,0x5b5634cb
  412db8:	rol    al,0xca
  412dbb:	iret   
  412dbc:	test   eax,0xd5d7591e
  412dc1:	(bad)  
  412dc2:	xchg   ecx,eax
  412dc3:	imul   eax,DWORD PTR [edx],0xffffffdc
  412dc6:	std    
  412dc7:	mov    ds:0xa21ba062,eax
  412dcc:	push   esi
  412dcd:	inc    ecx
  412dce:	aad    0xfa
  412dd0:	aam    0x20
  412dd2:	lea    esi,[edx+0xee4716c]
  412dd8:	stc    
  412dd9:	push   ebx
  412dda:	xchg   ebx,eax
  412ddb:	xchg   DWORD PTR ds:0x46d05785,edx
  412de1:	mov    ebx,0x580b0a61
  412de6:	jno    0x412e50
  412de8:	push   esp
  412de9:	imul   ebx,DWORD PTR [edi+0x59f45009],0xffffffed
  412df0:	in     eax,0xf7
  412df2:	pop    ebp
  412df3:	adc    al,0xee
  412df5:	and    eax,0xb1faf317
  412dfa:	pop    edi
  412dfb:	dec    esp
  412dfc:	add    eax,0x5dcfee93
  412e01:	add    ebp,ebx
  412e03:	xor    eax,0x28121882
  412e08:	fs push 0xf0a80802
  412e0e:	mov    cl,0xdc
  412e10:	imul   ebp,DWORD PTR [eax+0x66572c24],0xffffff87
  412e17:	jecxz  0x412e09
  412e19:	mov    edx,0x33a4b821
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	mov    ds:0x257b9425,eax
  412e24:	(bad)  
  412e26:	call   0x69cb:0x9b8b94e7
  412e2d:	test   al,0xdc
  412e2f:	int3   
  412e30:	mov    eax,DWORD PTR [esp+eax*4-0x4d3e8de6]
  412e37:	jbe    0x412dc9
  412e39:	jmp    0xab58c178
  412e3e:	inc    esp
  412e3f:	fstp   DWORD PTR [edx-0x5a1b9e94]
  412e45:	mov    esp,0xb7ce9673
  412e4a:	frndint 
  412e4c:	pushf  
  412e4d:	push   cs
  412e4e:	in     eax,0x2
  412e50:	popa   
  412e51:	mov    esp,0x9b383da4
  412e56:	and    al,0x43
  412e58:	pop    ebx
  412e59:	das    
  412e5a:	fucomi st,st(7)
  412e5c:	into   
  412e5d:	mov    edi,0x8e43be85
  412e62:	cmp    DWORD PTR [edi],esp
  412e64:	sbb    eax,0xf7aa065f
  412e69:	dec    esi
  412e6a:	mov    ds:0x67360f3d,al
  412e6f:	scas   al,BYTE PTR es:[edi]
  412e70:	mov    ecx,0xe44ca3ea
  412e75:	and    ebp,esp
  412e77:	ss loopne 0x412e79
  412e7a:	enter  0x7e1c,0xbe
  412e7e:	in     al,0x6
  412e80:	add    BYTE PTR [edi],al
  412e82:	(bad)  
  412e84:	ret    0x6ff7
  412e87:	jnp    0x412e71
  412e89:	sub    esp,DWORD PTR [ebx+eax*1]
  412e8c:	jns    0x412e2e
  412e8e:	jl     0x412f0c
  412e90:	ja     0x412ec5
  412e92:	out    dx,al
  412e93:	call   0x4bcba6c8
  412e98:	fnstcw WORD PTR [esi-0x5b]
  412e9b:	fistp  WORD PTR [edi+edi*1-0x564e7d66]
  412ea2:	pop    es
  412ea3:	and    esp,ebx
  412ea5:	pusha  
  412ea6:	shl    DWORD PTR [esi+0x2],cl
  412ea9:	shl    ch,0x22
  412eac:	ja     0x412e5e
  412eae:	arpl   WORD PTR [edi+ebp*2-0x3e],cx
  412eb2:	call   0xe553be28
  412eb7:	out    0x9f,al
  412eb9:	outs   dx,BYTE PTR ds:[esi]
  412eba:	shr    BYTE PTR [edx-0xb],cl
  412ebd:	mov    ch,0x79
  412ebf:	mov    cl,0xec
  412ec1:	or     edi,esp
  412ec3:	lea    eax,[si+0x34]
  412ec7:	add    bh,BYTE PTR [esi+0x3e020c35]
  412ecd:	je     0x412f2e
  412ecf:	mov    edx,0xf721440e
  412ed4:	dec    edi
  412ed5:	mov    eax,ds:0xf747f6f5
  412eda:	int    0xf2
  412edc:	jmp    0x6948:0x3156c445
  412ee3:	pop    ds
  412ee4:	push   ss
  412ee5:	ss call 0x9319:0xc8761b7b
  412eed:	rcl    DWORD PTR [ebx-0x61],cl
  412ef0:	mov    eax,ds:0x46691bd1
  412ef5:	cli    
  412ef6:	popf   
  412ef7:	push   edx
  412ef8:	(bad)  
  412ef9:	mov    dl,0x8e
  412efb:	pop    edi
  412efc:	xchg   edi,eax
  412efd:	xchg   ebp,eax
  412efe:	cmp    DWORD PTR [edi+0x29],esi
  412f01:	push   cs
  412f02:	and    ebp,edx
  412f04:	jns    0x412f1f
  412f06:	popf   
  412f07:	pushf  
  412f08:	hlt    
  412f09:	mov    cl,0x8a
  412f0b:	or     bl,BYTE PTR [esi+0x46]
  412f0e:	or     cl,BYTE PTR [esi]
  412f10:	(bad)  
  412f11:	jnp    0x412f3b
  412f13:	shl    DWORD PTR [edx-0x6b6f6eab],0xe
  412f1a:	lds    ecx,FWORD PTR ds:0x7c28032a
  412f20:	sub    al,0xb3
  412f22:	jg     0x412f45
  412f24:	dec    esi
  412f25:	in     al,0x3b
  412f27:	dec    ebx
  412f28:	shl    BYTE PTR [esi+0x4b],0xf3
  412f2c:	dec    ebx
  412f2d:	mov    cl,BYTE PTR [esi]
  412f2f:	popf   
  412f30:	clc    
  412f31:	loopne 0x412f01
  412f33:	ins    DWORD PTR es:[edi],dx
  412f34:	mov    ds:0x8c9dcb33,eax
  412f39:	mul    bl
  412f3b:	scas   eax,DWORD PTR es:[edi]
  412f3c:	clc    
  412f3d:	xlat   BYTE PTR ds:[ebx]
  412f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f3f:	(bad)  
  412f40:	mov    esp,0x47a18fd5
  412f45:	fdiv   QWORD PTR [esi-0x3748c0f3]
  412f4b:	xor    al,0x61
  412f4d:	lods   eax,DWORD PTR ds:[esi]
  412f4e:	ret    
  412f4f:	inc    eax
  412f50:	push   ds
  412f51:	or     DWORD PTR [eax],edx
  412f53:	xor    eax,0xa24c2b34
  412f58:	rcl    BYTE PTR [esi-0x20],0x4c
  412f5c:	add    al,0x82
  412f5e:	and    edi,esi
  412f60:	subps  xmm3,xmm3
  412f63:	mov    ds,WORD PTR [ebx+0x62]
  412f66:	(bad)  [ebp+eiz*4-0x17712e9c]
  412f6d:	pop    ebx
  412f6e:	pop    ecx
  412f6f:	jbe    0x412faf
  412f71:	pop    esi
  412f72:	push   ss
  412f73:	sub    BYTE PTR [edi-0x227a98c9],0xcb
  412f7a:	pop    es
  412f7b:	cmp    eax,0xfaa2dec9
  412f80:	test   DWORD PTR [esi+0x69205d7],esi
  412f86:	or     DWORD PTR [ecx+0x5adf2022],esi
  412f8c:	sti    
  412f8d:	adc    eax,0x1ed81b11
  412f92:	outs   dx,DWORD PTR ds:[esi]
  412f93:	jb     0x412f71
  412f95:	(bad)  [ebx+0x64fc9525]
  412f9b:	xlat   BYTE PTR ds:[ebx]
  412f9c:	sti    
  412f9d:	cwde   
  412f9e:	rol    esi,cl
  412fa0:	push   edx
  412fa1:	mov    WORD PTR ds:[edx-0x61],cs
  412fa5:	fnsave [eax+0x63feda3f]
  412fab:	outs   dx,BYTE PTR ds:[esi]
  412fac:	push   ecx
  412fad:	and    eax,0xdbc1d0e0
  412fb2:	fist   DWORD PTR [ecx]
  412fb4:	fsub   QWORD PTR [edi]
  412fb6:	xchg   edi,eax
  412fb7:	popf   
  412fb8:	xchg   ecx,eax
  412fb9:	pinsrw mm1,WORD PTR [ebp-0x52],0x27
  412fbe:	call   0x758444d1
  412fc3:	pop    ebx
  412fc4:	adc    ecx,ebp
  412fc6:	into   
  412fc7:	xor    eax,0x73e2b1fc
  412fcc:	pop    eax
  412fcd:	xchg   esi,eax
  412fce:	ss aad 0xc1
  412fd1:	jge    0x412f72
  412fd3:	imul   esi,DWORD PTR [edi-0x282ebed8],0x12
  412fda:	adc    ah,al
  412fdc:	push   esp
  412fdd:	mov    BYTE PTR [esi],ch
  412fdf:	mov    eax,ds:0xe5f69549
  412fe4:	mov    ch,0xc9
  412fe6:	xchg   esi,eax
  412fe7:	sub    bh,BYTE PTR [ebp-0x20eccec5]
  412fed:	inc    esi
  412fee:	cmp    edx,DWORD PTR [ecx+edx*8+0x377cc96e]
  412ff5:	pop    edx
  412ff6:	mov    ch,BYTE PTR [esi-0x2ac0848b]
  412ffc:	ficom  WORD PTR [eax+0x1322a334]
  413002:	xor    eax,0xb1f0755c
  413007:	pop    ebp
  413008:	and    DWORD PTR [ecx+ebx*1],esi
  41300b:	xchg   ecx,eax
  41300c:	xchg   BYTE PTR [ecx+0x298132f6],cl
  413012:	out    dx,eax
  413013:	mov    ds:0x5e34452c,eax
  413018:	dec    ebp
  413019:	sub    BYTE PTR [ebx],cl
  41301b:	or     ebp,esi
  41301d:	cmp    DWORD PTR [edx+0x28d110f4],0xffffffa7
  413024:	in     eax,0x69
  413026:	mov    ebx,0x9365946b
  41302b:	jle    0x41300f
  41302d:	mov    cl,0x3c
  41302f:	jae    0x412fd0
  413031:	mov    esp,0x84d4e5c8
  413036:	clc    
  413037:	daa    
  413038:	inc    edi
  413039:	or     BYTE PTR [ebx-0x7520b7f7],ah
  41303f:	mov    esp,0x48a96674
  413044:	cmp    DWORD PTR [ebx+0x5e],0xffffffa2
  413048:	adc    edx,ecx
  41304a:	pusha  
  41304b:	mov    ss,WORD PTR [esi+0x3b]
  41304e:	int    0x92
  413050:	pushf  
  413051:	add    dl,BYTE PTR [esi+0x1d]
  413054:	icebp  
  413055:	cmp    eax,0xf7700eb
  41305a:	pop    edx
  41305b:	mov    esp,0x41a137cb
  413060:	adc    eax,ebx
  413062:	pop    es
  413063:	fcmovnu st,st(7)
  413065:	mov    ds:0x2463c60e,al
  41306a:	imul   bh
  41306c:	xchg   DWORD PTR [esi-0x45b96116],ebx
  413072:	xchg   ebp,eax
  413073:	(bad)  
  413074:	(bad)  
  413075:	cmp    DWORD PTR [ebp+0x42c56bae],edi
  41307b:	test   DWORD PTR [ecx],edi
  41307d:	stos   BYTE PTR es:[edi],al
  41307e:	ds xchg ecx,eax
  413080:	jmp    0x28b440a0
  413085:	out    0x29,al
  413087:	jns    0x41300d
  413089:	repz and cl,BYTE PTR [esi+0x3e5b8a97]
  413090:	dec    eax
  413091:	pop    ds
  413092:	mov    dh,al
  413094:	outs   dx,BYTE PTR ds:[esi]
  413095:	sub    BYTE PTR [ebx+0x49],al
  413098:	xchg   ebp,eax
  413099:	jno    0x4130fb
  41309b:	and    eax,0x7250073c
  4130a0:	ja     0x4130df
  4130a2:	lahf   
  4130a3:	mov    edi,0x3aa35824
  4130a8:	mov    edx,0x677ec82a
  4130ad:	pop    esi
  4130ae:	mov    ebx,ebp
  4130b0:	adc    ebp,DWORD PTR [ecx+0x15]
  4130b3:	push   es
  4130b4:	arpl   WORD PTR [edi+0x5e],dx
  4130b7:	popa   
  4130b8:	sub    eax,DWORD PTR [ebx]
  4130ba:	xchg   DWORD PTR [eax-0x6],edi
  4130bd:	add    al,0x4e
  4130bf:	(bad)  
  4130c1:	shl    BYTE PTR [esi-0x41],0x2
  4130c5:	mov    es,ecx
  4130c7:	mov    bh,0xd5
  4130c9:	and    ebx,DWORD PTR [ebx]
  4130cb:	adc    ch,BYTE PTR [edx+0x44]
  4130ce:	fdivr  DWORD PTR [esi+0x35]
  4130d1:	pop    ecx
  4130d2:	rcr    DWORD PTR ds:0xa04a8992,1
  4130d8:	jbe    0x4130be
  4130da:	push   edx
  4130db:	push   ebx
  4130dc:	mov    al,ds:0xab4ab41
  4130e1:	into   
  4130e2:	retf   
  4130e3:	dec    ebx
  4130e4:	sub    bl,BYTE PTR [edi+esi*4+0x324ab753]
  4130eb:	mov    eax,0xdeb9b43a
  4130f0:	push   eax
  4130f1:	mov    dl,0xb3
  4130f3:	leave  
  4130f4:	sbb    ebp,DWORD PTR [ebx]
  4130f6:	jge    0x413150
  4130f8:	jbe    0x4130ac
  4130fa:	xor    dh,BYTE PTR [esi]
  4130fc:	add    BYTE PTR [esp+esi*2],ah
  4130ff:	hlt    
  413100:	xchg   esp,edx
  413102:	sub    eax,0x85ef5768
  413107:	fld    QWORD PTR [edi]
  413109:	in     eax,0xd3
  41310b:	inc    edi
  41310c:	pop    esp
  41310d:	das    
  41310e:	js     0x4130ae
  413110:	ficomp WORD PTR [esi-0x16]
  413113:	adc    eax,esp
  413115:	enter  0x3f5e,0x59
  413119:	mov    eax,0xb60543ed
  41311e:	add    BYTE PTR [ecx-0x63],ah
  413121:	imul   DWORD PTR [ebp+0x1e]
  413124:	call   0xaedb89e4
  413129:	or     BYTE PTR [eax-0x2e],0xc1
  41312d:	and    DWORD PTR [esp+ebp*4+0x4a],ebp
  413131:	xchg   esi,eax
  413132:	mov    bh,0x24
  413134:	xchg   BYTE PTR [eax+0x54],al
  413137:	in     al,0xc8
  413139:	or     edx,DWORD PTR [eax-0xb]
  41313c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41313d:	leave  
  41313e:	arpl   di,bx
  413140:	push   ebx
  413141:	ficomp DWORD PTR [edx+ebp*8+0x2c]
  413145:	cli    
  413146:	push   ds
  413147:	or     BYTE PTR [edi+0x77629d28],dh
  41314d:	jg     0x41318c
  41314f:	stc    
  413150:	aam    0x59
  413152:	mov    esi,0x5a3382c5
  413157:	pop    ebx
  413158:	test   DWORD PTR ds:0xe7798842,esp
  41315e:	push   0x24
  413160:	mov    esp,0xc182ee60
  413165:	dec    eax
  413166:	aaa    
  413167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413168:	mov    ebp,0xea615438
  41316d:	xchg   edi,eax
  41316e:	mov    dh,0x49
  413170:	inc    edi
  413171:	(bad)  
  413172:	xchg   ecx,eax
  413173:	in     al,dx
  413174:	pushf  
  413175:	jle    0x4131ad
  413177:	scas   eax,DWORD PTR es:[edi]
  413178:	jbe    0x4131da
  41317a:	mov    ah,0xe6
  41317c:	call   0x3a7d9052
  413181:	sbb    BYTE PTR [edx],al
  413183:	mov    cl,BYTE PTR [ebx+0x65]
  413186:	jge    0x4131c2
  413188:	mov    dh,0x52
  41318a:	or     eax,0x8aee9de4
  41318f:	and    BYTE PTR [ebp-0xe],ch
  413192:	in     eax,dx
  413193:	push   es
  413194:	rcl    DWORD PTR [edx-0x5066654f],1
  41319a:	test   DWORD PTR [eax+0x5],esi
  41319d:	xchg   esp,eax
  41319e:	cmp    BYTE PTR [esi-0x3b],al
  4131a1:	and    al,BYTE PTR [ebx+ecx*8+0x64]
  4131a5:	mov    cl,0xb0
  4131a7:	loopne 0x41316a
  4131a9:	clc    
  4131aa:	cli    
  4131ab:	dec    ebp
  4131ac:	loopne 0x4131c4
  4131ae:	icebp  
  4131af:	out    dx,al
  4131b0:	(bad)  
  4131b1:	jae    0x413155
  4131b3:	repz adc BYTE PTR gs:[eax+0x61800552],0x81
  4131bc:	sbb    al,0x7d
  4131be:	cld    
  4131bf:	mov    dl,0xf7
  4131c1:	ret    
  4131c2:	inc    ecx
  4131c3:	mov    ecx,DWORD PTR [ebp+0x1a]
  4131c6:	out    dx,eax
  4131c7:	lock push eax
  4131c9:	pop    esi
  4131ca:	inc    edx
  4131cb:	push   ebx
  4131cc:	rol    DWORD PTR [ebx],1
  4131ce:	or     al,0xdf
  4131d0:	ror    ah,0x11
  4131d3:	dec    edi
  4131d4:	lahf   
  4131d5:	popa   
  4131d6:	or     DWORD PTR [edx+0x5e8600f8],edi
  4131dc:	test   BYTE PTR [edx-0x77],ah
  4131df:	xchg   edi,eax
  4131e0:	cmp    DWORD PTR cs:[ebx+0xb],esi
  4131e4:	mov    edi,0xdd5ff897
  4131e9:	or     eax,0xd9968570
  4131ee:	xlat   BYTE PTR ds:[ebx]
  4131ef:	mov    bl,0xe5
  4131f1:	sbb    BYTE PTR [eax-0x68],dl
  4131f4:	pop    es
  4131f5:	jnp    0x413213
  4131f7:	repz inc edx
  4131f9:	inc    edx
  4131fa:	lods   al,BYTE PTR ds:[esi]
  4131fb:	adc    ebp,DWORD PTR [edx-0x46]
  4131fe:	fs push edx
  413200:	adc    BYTE PTR [esp+ecx*2-0xb],0xb5
  413205:	test   ecx,edi
  413207:	pop    es
  413208:	xor    dl,BYTE PTR [ecx+edx*4]
  41320b:	mov    ecx,0x8bfd9684
  413210:	mov    cl,0x92
  413212:	mov    edi,0x12c388ee
  413217:	push   0x65
  413219:	mov    esi,edx
  41321b:	stos   DWORD PTR es:[edi],eax
  41321c:	aas    
  41321d:	bound  esp,QWORD PTR [ebx]
  41321f:	(bad)  [ebp+0x2a46e41b]
  413225:	int    0x6f
  413227:	adc    ebx,DWORD PTR [ebx+0x3d]
  41322a:	sub    ecx,DWORD PTR [eax+0x6]
  41322d:	std    
  41322e:	jns    0x41329d
  413230:	inc    eax
  413231:	inc    ebx
  413232:	ret    0x2b61
  413235:	mov    edx,0xa6808ce9
  41323a:	add    bh,ah
  41323c:	push   edx
  41323d:	push   ss
  41323e:	cmp    bh,bh
  413240:	mov    esp,0x85a59e2f
  413245:	retf   
  413246:	cs add esi,ecx
  413249:	mov    edx,0x75b18691
  41324e:	daa    
  41324f:	mov    al,ds:0x4d6c39c9
  413254:	in     al,dx
  413255:	popa   
  413256:	sub    ah,BYTE PTR [edi-0x69de4999]
  41325c:	scas   eax,DWORD PTR es:[edi]
  41325d:	clc    
  41325e:	pushf  
  41325f:	dec    ebp
  413260:	into   
  413261:	je     0x41322b
  413263:	adc    ecx,DWORD PTR [ecx+ecx*2+0x48f3ec8d]
  41326a:	fldenv [ebx]
  41326c:	sub    eax,0x901fea12
  413271:	jne    0x41325e
  413273:	inc    esi
  413274:	sub    eax,0x7f2079b3
  413279:	(bad)  
  41327a:	fcmovnu st,st(2)
  41327c:	test   ebx,0x230f94f9
  413282:	and    BYTE PTR [edx+0x3a],0xa
  413286:	bound  esi,QWORD PTR [ecx-0x3b]
  413289:	int    0xc2
  41328b:	sti    
  41328c:	dec    ecx
  41328d:	adc    eax,DWORD PTR [edx]
  41328f:	pop    es
  413290:	stc    
  413291:	dec    edi
  413292:	cmp    al,0x61
  413294:	repnz adc al,0xb7
  413297:	sbb    al,0x9
  413299:	cmc    
  41329a:	aam    0xf4
  41329c:	(bad)  
  41329d:	scas   al,BYTE PTR es:[edi]
  41329e:	jecxz  0x413274
  4132a0:	pop    eax
  4132a1:	ret    0x510b
  4132a4:	or     cl,BYTE PTR [ebp+0x4fa6d069]
  4132aa:	into   
  4132ab:	sub    BYTE PTR [ecx+ecx*1-0x7f8a506],dl
  4132b2:	fcomip st,st(4)
  4132b4:	xchg   edi,eax
  4132b5:	test   BYTE PTR [edi+0x6c],ah
  4132b8:	sbb    eax,0x1340ab35
  4132bd:	aas    
  4132be:	mov    esp,DWORD PTR [ecx+0x4c]
  4132c1:	sbb    BYTE PTR [ebx+edi*2+0x40],ah
  4132c5:	outs   dx,BYTE PTR ds:[esi]
  4132c6:	retf   
  4132c7:	adc    DWORD PTR [edi-0x1265822a],edi
  4132cd:	test   BYTE PTR [esi-0x764c1107],0xbd
  4132d4:	cmc    
  4132d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132d6:	xchg   ebp,eax
  4132d7:	(bad)  
  4132d8:	out    0xaf,al
  4132da:	call   0xfce7:0x4e6e5dbb
  4132e1:	push   ds
  4132e2:	add    edi,ebp
  4132e4:	fimul  DWORD PTR [esi+esi*8+0x79519f83]
  4132eb:	scas   al,BYTE PTR es:[edi]
  4132ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132ed:	push   0xffffffb6
  4132ef:	imul   edx,DWORD PTR [ebx-0x2fc3293e],0xffffff9c
  4132f6:	stos   BYTE PTR es:[edi],al
  4132f7:	mov    ah,BYTE PTR [ecx+0x1e53337d]
  4132fd:	rcl    DWORD PTR [edi+0x63],1
  413300:	pop    ss
  413301:	mov    dl,cl
  413303:	imul   esp,DWORD PTR [esi-0x16],0xe119085d
  41330a:	outs   dx,BYTE PTR ds:[esi]
  41330b:	cmp    ecx,ebx
  41330d:	ret    
  41330e:	retf   
  41330f:	dec    edx
  413310:	es add ecx,ebp
  413313:	pusha  
  413314:	cmp    cl,ah
  413316:	pop    es
  413317:	aad    0x4d
  413319:	in     eax,dx
  41331a:	lahf   
  41331b:	jg     0x41336c
  41331d:	mov    ds:0xe159c9e4,eax
  413322:	xchg   esi,eax
  413323:	enter  0x8996,0xa8
  413327:	int    0x55
  413329:	push   edi
  41332a:	(bad)  
  41332b:	imul   al
  41332d:	or     ch,BYTE PTR [ebx-0x58]
  413330:	std    
  413331:	int    0x73
  413333:	jmp    0xcef5:0x6f27cbc4
  41333a:	aad    0x19
  41333c:	(bad)  
  41333d:	popf   
  41333e:	mov    esi,0x1dea45a8
  413343:	fmul   st(5),st
  413345:	(bad)  
  413347:	mov    ecx,esi
  413349:	jmp    0xd401:0x1bf483ec
  413350:	mov    dl,0xce
  413352:	mov    ds:0xbf718bac,al
  413357:	mov    ds:0x2bce5349,eax
  41335c:	add    ah,BYTE PTR [ecx+0x32fd3903]
  413362:	add    ecx,DWORD PTR [ebp-0x2]
  413365:	push   esi
  413366:	and    esi,0xa
  413369:	stos   DWORD PTR es:[edi],eax
  41336a:	jb     0x41338f
  41336c:	push   edi
  41336d:	mov    cl,0xf3
  41336f:	jnp    0x41331b
  413371:	pop    ecx
  413372:	jno    0x413327
  413374:	es or  al,0x97
  413377:	sahf   
  413378:	enter  0xb9f9,0xb4
  41337c:	outs   dx,DWORD PTR gs:[esi]
  41337e:	mov    eax,ds:0x26b080
  413383:	fxch   st(0)
  413385:	mov    ecx,0xfac1f7a5
  41338a:	xchg   edx,eax
  41338b:	pushf  
  41338c:	in     al,dx
  41338d:	rcr    edi,0x49
  413390:	mov    bl,BYTE PTR [esi]
  413392:	mov    dl,ah
  413394:	sub    eax,0x76f65d64
  413399:	aad    0x0
  41339b:	call   0xc937:0x183ce6aa
  4133a2:	jo     0x4133f7
  4133a4:	sbb    BYTE PTR [edi-0x41cdb42e],ah
  4133aa:	mov    ds:0x228afa9c,eax
  4133af:	xchg   ebx,eax
  4133b0:	arpl   WORD PTR [ebp+0x6c84a3a9],dx
  4133b6:	cmp    eax,0x7033ad23
  4133bb:	jg     0x413348
  4133bd:	mov    ecx,0xee135745
  4133c2:	mov    WORD PTR [edi+ecx*4],ds
  4133c5:	sbb    cl,BYTE PTR [edx+eiz*4+0x1a]
  4133c9:	adc    DWORD PTR [edi-0x314db2ce],ebp
  4133cf:	fs sub al,0xd8
  4133d2:	sahf   
  4133d3:	pop    ds
  4133d4:	aaa    
  4133d5:	xchg   BYTE PTR [edi],dl
  4133d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d8:	or     al,0xc2
  4133da:	sbb    DWORD PTR [ebp-0x17],edi
  4133dd:	xchg   BYTE PTR [ebp+0x77e53f23],al
  4133e3:	lods   al,BYTE PTR ds:[esi]
  4133e4:	adc    eax,0x902651b
  4133e9:	stc    
  4133ea:	lds    edi,FWORD PTR [ecx+0x7af329dc]
  4133f0:	cmp    eax,0xbc9ec0b3
  4133f5:	mov    ?,WORD PTR ds:0xf49771ec
  4133fc:	pushf  
  4133fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133fe:	pop    edi
  4133ff:	dec    ecx
  413400:	idiv   esp
  413402:	jns    0x413439
  413404:	fisttp QWORD PTR [esp+ecx*1-0x44b66906]
  41340b:	scas   eax,DWORD PTR es:[edi]
  41340c:	pop    es
  41340d:	jns    0x4133dd
  41340f:	cmc    
  413410:	test   bh,dh
  413412:	test   al,0x60
  413414:	mov    esp,0xaac4681b
  413419:	sbb    edi,eax
  41341b:	mov    ecx,0x8757c119
  413420:	stos   BYTE PTR es:[edi],al
  413421:	dec    eax
  413422:	sub    eax,0x52e4a9e2
  413427:	and    eax,eax
  413429:	gs (bad) 
  41342b:	rcl    WORD PTR [edx+0x47431fba],cl
  413432:	jb     0x41340a
  413434:	outs   dx,BYTE PTR ds:[esi]
  413435:	sbb    al,0x5a
  413437:	sbb    ebp,DWORD PTR [ecx-0x26096172]
  41343d:	xchg   edi,eax
  41343e:	sar    edx,1
  413440:	xor    al,0xe0
  413442:	js     0x4133de
  413444:	push   eax
  413445:	jne    0x4134c3
  413447:	in     al,dx
  413448:	fld    DWORD PTR [edi]
  41344a:	mov    ds:0x69026c8e,eax
  41344f:	push   edx
  413450:	jbe    0x4134a3
  413452:	or     ah,dl
  413454:	stos   BYTE PTR es:[edi],al
  413455:	stos   DWORD PTR es:[edi],eax
  413456:	xor    al,al
  413458:	dec    esp
  413459:	sbb    al,0xc6
  41345b:	scas   eax,DWORD PTR es:[edi]
  41345c:	cmp    eax,0x398147a7
  413461:	(bad)  
  413462:	addr16 (bad) 
  413464:	ror    BYTE PTR [ecx-0x1f9da12d],cl
  41346a:	mov    BYTE PTR [edx-0x7e5957b5],dl
  413470:	adc    dl,al
  413472:	cdq    
  413473:	(bad)  
  413474:	mov    al,ds:0xcbbd8747
  413479:	mov    al,ds:0x904dc147
  41347e:	pop    ds
  41347f:	sbb    DWORD PTR [ecx+0x3939c2b9],esp
  413485:	dec    ebx
  413486:	fcomi  st,st(0)
  413488:	pop    ds
  413489:	jns    0x4134fa
  41348b:	adc    BYTE PTR [ebx+0x1ee3d05],0xda
  413492:	ret    
  413493:	mov    bl,BYTE PTR [eax+0x6e]
  413496:	iret   
  413497:	ret    
  413498:	jg     0x4134f3
  41349a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349b:	neg    DWORD PTR [edi]
  41349d:	cmp    BYTE PTR [esi-0x7],ch
  4134a0:	xor    dh,dh
  4134a2:	ds dec edi
  4134a4:	xchg   BYTE PTR [ebx-0x49],al
  4134a7:	xor    eax,0x38daea76
  4134ac:	mov    gs,WORD PTR [ebx+eax*4]
  4134af:	mov    dh,0x92
  4134b1:	xchg   edi,eax
  4134b2:	pop    ss
  4134b3:	fstp   QWORD PTR ds:0x862a35d1
  4134b9:	dec    ecx
  4134ba:	cdq    
  4134bb:	aad    0x19
  4134bd:	mov    ebx,0x152d3f9d
  4134c2:	mov    bl,0x20
  4134c4:	or     BYTE PTR [ebp+0x6705879a],dh
  4134ca:	lock add dh,BYTE PTR [esi+0xb88856]
  4134d1:	in     eax,0x9d
  4134d3:	push   eax
  4134d4:	cli    
  4134d5:	xchg   ecx,eax
  4134d6:	xor    eax,0xcbf4fa79
  4134db:	(bad)  
  4134dc:	xchg   ecx,eax
  4134dd:	inc    edx
  4134de:	popf   
  4134df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e0:	scas   al,BYTE PTR es:[edi]
  4134e1:	pop    ecx
  4134e2:	dec    edi
  4134e3:	pop    edx
  4134e4:	pop    edx
  4134e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e6:	js     0x41351f
  4134e8:	dec    esi
  4134e9:	lock ins DWORD PTR es:[edi],dx
  4134eb:	popa   
  4134ec:	xor    eax,edi
  4134ee:	jae    0x413541
  4134f0:	pop    edi
  4134f1:	hlt    
  4134f2:	jp     0x4134ca
  4134f4:	mov    ecx,DWORD PTR [ebp+0x64630031]
  4134fa:	push   es
  4134fb:	in     al,0x55
  4134fd:	mov    fs,WORD PTR [eax-0xb]
  413500:	rcr    DWORD PTR [edx],0xec
  413503:	xchg   edi,eax
  413504:	and    DWORD PTR [edi+0x75c34f12],0x47833650
  41350e:	cmp    al,0xfe
  413510:	ds pop esp
  413512:	and    eax,DWORD PTR [ecx+eax*1-0x24822bca]
  413519:	xchg   ebx,eax
  41351a:	inc    ebp
  41351b:	cdq    
  41351c:	adc    DWORD PTR [ecx-0x1e],esi
  41351f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413520:	and    DWORD PTR ds:0x8ace2709,0xffffffe0
  413527:	push   es
  413528:	test   eax,0xd6803646
  41352d:	in     eax,0xa8
  41352f:	addr16 cli 
  413531:	cli    
  413532:	jp     0x413558
  413534:	cmp    cl,BYTE PTR [edi+ecx*4-0x3c]
  413538:	fild   WORD PTR [edx]
  41353a:	(bad)  
  41353b:	fistp  WORD PTR [eax+0x76]
  41353e:	int3   
  41353f:	cmc    
  413540:	in     eax,dx
  413541:	push   edx
  413542:	lock inc edx
  413544:	xchg   edi,eax
  413545:	mov    ebx,0xf786f6f2
  41354a:	(bad)  
  41354b:	mov    ecx,DWORD PTR [esi-0x53]
  41354e:	bnd jo 0x413556
  413551:	repnz ins BYTE PTR es:[edi],dx
  413553:	or     eax,0xc74d675
  413558:	cmp    DWORD PTR [ebx],ebx
  41355a:	mov    ah,0x8e
  41355c:	icebp  
  41355d:	std    
  41355e:	jl     0x4135d8
  413560:	mov    dh,0xcd
  413562:	das    
  413563:	dec    edi
  413564:	xor    esi,DWORD PTR [ecx+edx*1]
  413567:	sub    DWORD PTR [ebp-0x7b68f2c1],ebp
  41356d:	popf   
  41356e:	aad    0xa6
  413570:	in     eax,0x8c
  413572:	leave  
  413573:	push   DWORD PTR [ebp+0x721a3c12]
  413579:	add    eax,ecx
  41357b:	or     DWORD PTR [edi-0x33],edi
  41357e:	icebp  
  41357f:	sbb    ebp,ebx
  413581:	xchg   edx,eax
  413582:	(bad)  
  413583:	mov    dl,0xd8
  413585:	rol    edx,0xf9
  413588:	out    dx,al
  413589:	lock lods eax,DWORD PTR ds:[esi]
  41358b:	dec    ecx
  41358c:	test   eax,0xcbe0d815
  413591:	inc    ebp
  413592:	lods   al,BYTE PTR ds:[esi]
  413593:	jb     0x4135f5
  413595:	sahf   
  413596:	lods   al,BYTE PTR ds:[esi]
  413597:	ds push 0x4
  41359a:	lea    ecx,[esi]
  41359c:	loopne 0x4135dc
  41359e:	bound  eax,QWORD PTR [esi-0x62]
  4135a1:	dec    ebp
  4135a2:	int3   
  4135a3:	adc    edi,ebx
  4135a5:	lods   eax,DWORD PTR ds:[esi]
  4135a6:	jb     0x4135bf
  4135a8:	cwde   
  4135a9:	xchg   edx,eax
  4135aa:	jecxz  0x413595
  4135ac:	xchg   ecx,eax
  4135ad:	ss std 
  4135af:	popa   
  4135b0:	xor    al,0xfd
  4135b2:	pusha  
  4135b3:	retf   
  4135b4:	sub    esi,DWORD PTR [ecx+0x5e]
  4135b7:	push   cs
  4135b8:	rol    BYTE PTR [esi-0x2b17579c],0x7b
  4135bf:	test   DWORD PTR [edi+edi*8-0x4e],eax
  4135c3:	jbe    0x413595
  4135c5:	push   edi
  4135c6:	sbb    eax,0xeb9a0f34
  4135cb:	sub    ebx,DWORD PTR [ecx+0x52ab7811]
  4135d1:	xchg   DWORD PTR [eax+0x47bc635c],esp
  4135d7:	and    al,0xb0
  4135d9:	loopne 0x4135b2
  4135db:	loopne 0x4135b1
  4135dd:	lahf   
  4135de:	bound  ecx,QWORD PTR [eax]
  4135e0:	inc    esp
  4135e1:	inc    eax
  4135e2:	dec    esp
  4135e3:	scas   eax,DWORD PTR es:[edi]
  4135e4:	jmp    0xb4f70467
  4135e9:	sbb    eax,0xcf88bd82
  4135ee:	imul   BYTE PTR [edi+0x7176083f]
  4135f4:	imul   esp,ecx,0x5d
  4135f7:	fnsave [ecx]
  4135f9:	push   ds
  4135fa:	ins    DWORD PTR es:[edi],dx
  4135fb:	mov    eax,ds:0x61dbc77e
  413600:	out    0xde,eax
  413602:	xor    DWORD PTR [ebp+0x1b0c9ba4],esp
  413608:	fsub   st(4),st
  41360a:	or     BYTE PTR [ebp-0x6b],dl
  41360d:	retf   
  41360e:	add    BYTE PTR [ebp-0x5cfd15d1],ch
  413614:	(bad)  
  413615:	mov    al,0xdc
  413617:	sar    BYTE PTR [esp+esi*2+0x4031e319],0x5c
  41361f:	cmp    ebx,ebp
  413621:	iret   
  413622:	jmp    DWORD PTR [ebx]
  413624:	popa   
  413625:	ret    
  413626:	mov    dh,0xaf
  413628:	xchg   ecx,eax
  413629:	sub    BYTE PTR [esi+0x36777399],bh
  41362f:	cmp    ah,ch
  413631:	arpl   WORD PTR [edx+0xb2b92de],di
  413637:	fnstenv [ecx-0x4ed92573]
  41363d:	nop
  41363e:	dec    ecx
  41363f:	(bad)  
  413641:	adc    ebp,edx
  413643:	jno    0x4135ea
  413645:	add    DWORD PTR [eax-0x3da1032e],0x2a
  41364c:	fisttp DWORD PTR [ecx]
  41364f:	or     ecx,edx
  413651:	fs scas eax,DWORD PTR es:[edi]
  413653:	(bad)  
  413654:	pop    ebp
  413655:	lahf   
  413656:	cmp    al,0xa8
  413658:	adc    ebx,DWORD PTR [ebp+0x13eee431]
  41365e:	loope  0x4136bd
  413660:	mov    edx,0xec00c160
  413665:	xchg   BYTE PTR [ebx],dl
  413667:	mov    eax,0xa896e6b6
  41366c:	(bad)  
  41366d:	xor    BYTE PTR [edi+0x5d],bl
  413670:	adc    al,0x34
  413672:	jno    0x4136a0
  413674:	dec    ecx
  413675:	sub    DWORD PTR ds:0x70c6660a,eax
  41367b:	xor    BYTE PTR [edx],ch
  41367d:	(bad)  
  41367e:	pause  
  413680:	mov    bh,bh
  413682:	ror    DWORD PTR [esi],0x8
  413685:	leave  
  413686:	sahf   
  413687:	test   eax,0xe28e1a44
  41368c:	sbb    eax,0x6df89154
  413691:	stos   DWORD PTR es:[edi],eax
  413692:	jo     0x413634
  413694:	mov    ebp,0x8705fc33
  413699:	aad    0x94
  41369b:	out    0x49,eax
  41369d:	or     eax,0x167322f5
  4136a2:	push   ebp
  4136a3:	pop    eax
  4136a4:	push   eax
  4136a5:	xchg   BYTE PTR [edx],bh
  4136a7:	clc    
  4136a8:	sub    al,0xc6
  4136aa:	xchg   edx,eax
  4136ab:	sbb    al,BYTE PTR ds:0xe8ed55b3
  4136b1:	int    0xe0
  4136b3:	cwde   
  4136b4:	sar    BYTE PTR [edx+ebx*1],cl
  4136b7:	dec    ebp
  4136b8:	(bad)  
  4136b9:	cmc    
  4136ba:	jae    0x413647
  4136bc:	sub    dh,BYTE PTR [eax+0x53]
  4136bf:	fstp   QWORD PTR [ecx+0x71ddeed5]
  4136c5:	pushf  
  4136c6:	out    dx,al
  4136c7:	pop    es
  4136c8:	xchg   BYTE PTR [eax+0x7d],bl
  4136cb:	mov    edx,0x6d5528b5
  4136d0:	lods   eax,DWORD PTR ds:[esi]
  4136d1:	sbb    dh,BYTE PTR [edx+0x71]
  4136d4:	push   ebx
  4136d5:	mov    cl,ch
  4136d7:	dec    esp
  4136d8:	mov    fs,WORD PTR [ecx-0x3]
  4136db:	stc    
  4136dc:	loope  0x413666
  4136de:	adc    al,BYTE PTR [eax-0x4a]
  4136e1:	add    ch,ah
  4136e3:	ror    DWORD PTR [eax],cl
  4136e5:	mov    edi,0x9fec8530
  4136ea:	xor    al,0x7d
  4136ec:	dec    edi
  4136ed:	ja     0x41370f
  4136ef:	stos   BYTE PTR es:[edi],al
  4136f0:	xor    DWORD PTR [ecx],ebp
  4136f2:	mov    bl,0xec
  4136f4:	jns    0x41370d
  4136f6:	pop    ds
  4136f7:	mov    WORD PTR [esi+0x2b],gs
  4136fa:	shl    DWORD PTR [ecx],1
  4136fc:	add    BYTE PTR [esi],al
  4136fe:	retf   0x10cb
  413701:	dec    esi
  413702:	rol    ebx,1
  413704:	daa    
  413705:	and    esp,DWORD PTR [edi+0x34bea839]
  41370b:	imul   esp
  41370d:	bound  edx,QWORD PTR [ebp+0x72]
  413710:	add    DWORD PTR [eax],edi
  413712:	fsubr  DWORD PTR [edx-0x7c49d734]
  413718:	bound  esp,QWORD PTR [esi]
  41371a:	dec    esi
  41371b:	out    dx,eax
  41371c:	add    dl,BYTE PTR [edi+0x6]
  41371f:	jnp    0x41377d
  413721:	adc    BYTE PTR [ebx],ah
  413723:	adc    ebx,ecx
  413725:	inc    eax
  413726:	pop    ebx
  413727:	pop    ss
  413728:	add    DWORD PTR [edx-0x20518a9d],0x68
  41372f:	mov    ?,esp
  413731:	popf   
  413732:	lods   al,BYTE PTR ds:[esi]
  413733:	sub    al,BYTE PTR [ebp-0x7c7a3cb]
  413739:	ins    DWORD PTR es:[edi],dx
  41373a:	test   eax,0x56a3d66e
  41373f:	jmp    DWORD PTR [ebp+0x56]
  413742:	test   eax,edx
  413744:	xor    bh,ah
  413746:	xchg   ebx,eax
  413747:	lods   al,BYTE PTR ds:[esi]
  413748:	rcr    DWORD PTR [ebp+0x74],1
  41374b:	cmp    ecx,DWORD PTR [edx+0x40]
  41374e:	xlat   BYTE PTR ds:[ebx]
  41374f:	xor    DWORD PTR [edx+ebp*4-0x11],0x39df5379
  413757:	out    dx,al
  413758:	and    BYTE PTR [edx],0x2c
  41375b:	test   al,0xae
  41375d:	test   DWORD PTR [ebx+eiz*1],edx
  413760:	lods   al,BYTE PTR ds:[esi]
  413761:	js     0x4136f5
  413763:	jb     0x41375b
  413765:	inc    ebx
  413766:	push   es
  413767:	jmp    0x2f9c:0xa27b55f3
  41376e:	mov    ds:0xa871c57b,al
  413773:	in     al,dx
  413774:	fld    st(7)
  413776:	es retf 
  413778:	in     eax,dx
  413779:	mov    al,ds:0x7ed8c518
  41377e:	daa    
  41377f:	bound  ebx,QWORD PTR ds:0xd6e44bab
  413785:	xchg   esi,eax
  413786:	stos   BYTE PTR es:[edi],al
  413787:	push   ecx
  413788:	arpl   WORD PTR [esi],si
  41378a:	push   ds
  41378b:	fwait
  41378c:	adc    eax,0x8415ae90
  413791:	adc    eax,0x1dc214c3
  413796:	inc    edx
  413797:	sbb    ch,BYTE PTR [eax-0x77]
  41379a:	mov    BYTE PTR [ebp+0x627d8406],al
  4137a0:	mov    edi,0x85b78c66
  4137a5:	xchg   ebp,eax
  4137a6:	inc    esp
  4137a7:	push   DWORD PTR [eax+edx*4-0x1c]
  4137ab:	and    al,0xb6
  4137ad:	cmc    
  4137ae:	cmpxchg eax,ebp
  4137b1:	sbb    DWORD PTR [ebp+eiz*8+0x62],ebx
  4137b5:	shl    cl,1
  4137b7:	mov    al,ds:0x2470757
  4137bc:	sub    eax,0x9c315a8e
  4137c1:	adc    esp,0x7f325fb7
  4137c7:	dec    ebx
  4137c8:	leave  
  4137c9:	inc    edx
  4137ca:	mov    edi,0x720be948
  4137cf:	and    BYTE PTR [edi],cl
  4137d1:	push   edx
  4137d2:	mov    esp,0xdb5bba7a
  4137d7:	dec    eax
  4137d8:	jle    0x41384c
  4137da:	inc    esi
  4137db:	idiv   BYTE PTR [esi-0x81af5d2]
  4137e1:	push   eax
  4137e2:	push   esp
  4137e3:	sub    esi,esp
  4137e5:	repz aad 0x3e
  4137e8:	clc    
  4137e9:	cmp    bh,BYTE PTR [ebp-0x6a866e0c]
  4137ef:	or     BYTE PTR [edi-0x41cbe2c],ch
  4137f5:	hlt    
  4137f6:	shl    BYTE PTR [edx+0x5dc5067e],cl
  4137fc:	sub    ebp,DWORD PTR [ebx+0x6ac34ad5]
  413802:	push   ebx
  413803:	(bad)  
  413804:	js     0x4137bd
  413806:	ds push edx
  413808:	pop    esp
  413809:	rol    BYTE PTR [ebp+ebx*8-0x50],1
  41380d:	out    dx,eax
  41380e:	adc    eax,0xa05b2226
  413813:	pop    ecx
  413814:	dec    ebp
  413815:	retf   0xab13
  413818:	out    dx,al
  413819:	pop    edx
  41381a:	xchg   DWORD PTR [ebx],edx
  41381c:	cmp    esp,DWORD PTR [ecx+edi*1+0x2]
  413820:	(bad)  
  413821:	inc    ebp
  413822:	and    eax,DWORD PTR [edi-0x19a8fe54]
  413828:	repz scas al,BYTE PTR es:[edi]
  41382a:	dec    esi
  41382b:	repz adc eax,esi
  41382e:	adc    esi,DWORD PTR [eax-0x19]
  413831:	push   ds
  413832:	(bad)  
  413833:	mov    bl,0x8f
  413835:	bnd jb 0x4137c2
  413838:	xor    edi,edi
  41383a:	retf   0x6a8e
  41383d:	inc    eax
  41383e:	(bad)  [eax+0x5e]
  413841:	mov    al,0x48
  413843:	in     eax,dx
  413844:	sub    al,0xdc
  413846:	cwde   
  413847:	adc    cl,dh
  413849:	push   ds
  41384a:	loop   0x4138c8
  41384c:	jmp    0x75ba:0x25113830
  413853:	stos   BYTE PTR es:[edi],al
  413854:	out    dx,al
  413855:	inc    edx
  413856:	xchg   edi,eax
  413857:	cmp    DWORD PTR [esi-0x173570b1],esp
  41385d:	xlat   BYTE PTR ds:[ebx]
  41385e:	dec    edi
  41385f:	sbb    BYTE PTR [ebx-0x72],dl
  413862:	inc    ebx
  413863:	mov    WORD PTR [ebx*1-0x68a8bb88],fs
  41386a:	aas    
  41386b:	pop    eax
  41386c:	dec    esi
  41386d:	ror    DWORD PTR [ecx],1
  41386f:	int    0xcb
  413871:	adc    DWORD PTR [edi+0xbcb29f2],0xb0a26409
  41387b:	sahf   
  41387c:	std    
  41387d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41387e:	adc    BYTE PTR [eax],dl
  413880:	loope  0x41389f
  413882:	jg     0x41380f
  413884:	jp     0x413852
  413886:	int    0xc6
  413888:	stc    
  413889:	dec    ebx
  41388a:	sub    esi,edi
  41388c:	inc    eax
  41388d:	fcom   DWORD PTR [edi]
  41388f:	mov    esp,0x77542f8e
  413894:	add    BYTE PTR [ebp+0x70],dl
  413897:	and    eax,DWORD PTR ds:0x924fa148
  41389d:	lods   al,BYTE PTR ds:[esi]
  41389e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41389f:	or     ebp,eax
  4138a1:	sub    bl,BYTE PTR [edi-0x74]
  4138a4:	(bad)  
  4138a6:	div    DWORD PTR [esi-0x322b563b]
  4138ac:	sub    DWORD PTR [edi],eax
  4138ae:	loope  0x4138b4
  4138b0:	mov    WORD PTR cs:[si-0x68],?
  4138b5:	mov    eax,0xcc554e9
  4138ba:	scas   al,BYTE PTR es:[edi]
  4138bb:	jle    0x413855
  4138bd:	jle    0x4138aa
  4138bf:	inc    eax
  4138c0:	xor    DWORD PTR [edx-0x48fecdfe],ebx
  4138c6:	pop    esi
  4138c7:	enter  0x5e6c,0x18
  4138cb:	mov    ds:0x40a8e998,al
  4138d1:	std    
  4138d2:	pop    eax
  4138d3:	inc    edi
  4138d4:	push   edi
  4138d5:	sbb    al,0xb0
  4138d7:	sub    al,0x16
  4138d9:	xor    DWORD PTR [ecx],ebx
  4138db:	jbe    0x413882
  4138dd:	call   0xe6d5f432
  4138e2:	and    BYTE PTR [ebx-0x4184c1d4],cl
  4138e8:	stos   DWORD PTR es:[edi],eax
  4138e9:	inc    edx
  4138ea:	loop   0x413917
  4138ec:	retf   
  4138ed:	cmp    DWORD PTR [ecx+eiz*2-0x1d],0x4c
  4138f2:	not    BYTE PTR [edi+0x6d]
  4138f5:	(bad)
  4138f9:	shl    BYTE PTR [esi],0x5c
  4138fc:	mov    bh,0x81
  4138fe:	cmp    eax,0xf04d33a8
  413903:	rol    BYTE PTR [eax+0xe3a823f],1
  413909:	inc    ebp
  41390a:	push   cs
  41390b:	int    0x36
  41390d:	adc    al,0xcf
  41390f:	stc    
  413910:	add    eax,0x643f2d90
  413915:	or     BYTE PTR [edi+ebx*4+0x76],bh
  413919:	ss add al,0x2c
  41391c:	aas    
  41391d:	dec    ebx
  41391e:	pop    ebp
  41391f:	loopne 0x4138de
  413921:	cmp    esp,edi
  413923:	lea    eax,[esi]
  413925:	and    al,0xa6
  413927:	fwait
  413928:	popf   
  413929:	iret   
  41392a:	shl    ch,0x58
  41392d:	shl    DWORD PTR [edi+ecx*8+0x0],cl
  413931:	mov    dl,0x50
  413933:	jae    0x413935
  413935:	test   eax,0x9144c966
  41393a:	ror    cl,cl
  41393c:	mov    ah,0xaa
  41393e:	mov    WORD PTR [edx-0x57],fs
  413941:	pop    ecx
  413942:	push   eax
  413943:	sti    
  413944:	or     ecx,DWORD PTR [ebp-0x23cf423c]
  41394a:	icebp  
  41394b:	mov    esp,0xf4b8e828
  413950:	lds    ebx,FWORD PTR [ecx+eax*4-0x6bebf1df]
  413957:	jle    0x41390e
  413959:	xor    eax,0xc5364c23
  41395e:	loop   0x41396f
  413960:	jmp    0x6473:0x6b10eedf
  413967:	ret    0x990c
  41396a:	pop    ss
  41396b:	(bad)  
  41396c:	sbb    cl,BYTE PTR [ecx]
  41396e:	dec    ebx
  41396f:	fld    QWORD PTR [esi-0x37]
  413972:	pop    ds
  413973:	and    ecx,eax
  413975:	sbb    eax,0xbe42b78
  41397a:	(bad)  
  41397b:	jb     0x413907
  41397d:	out    dx,eax
  41397e:	adc    bl,BYTE PTR [ebp+0x5b]
  413981:	fld    st(7)
  413983:	adc    al,0xae
  413985:	or     eax,DWORD PTR [edi+ebp*2+0x49]
  413989:	ds aaa 
  41398b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41398c:	jle    0x4139d3
  41398e:	pusha  
  41398f:	ss sub ecx,edi
  413992:	or     al,0x4f
  413994:	inc    ebx
  413995:	dec    ebp
  413996:	dec    ebx
  413997:	add    cl,bl
  413999:	inc    edi
  41399a:	mov    edx,0xbc04d00b
  41399f:	cmp    al,0xe4
  4139a1:	fimul  WORD PTR [ecx+0xb9afe9f]
  4139a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139a8:	mov    ebp,0x2ac40540
  4139ad:	fmul   QWORD PTR [esi-0x54e35e2c]
  4139b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b4:	xchg   esi,eax
  4139b5:	std    
  4139b6:	scas   eax,DWORD PTR es:[edi]
  4139b7:	aad    0x2a
  4139b9:	mov    al,ds:0xf39609b5
  4139be:	mov    DWORD PTR [ebx-0x2b3f4d8c],edi
  4139c4:	enter  0xf502,0x5b
  4139c8:	pcmpeqb mm6,QWORD PTR [ebp-0x3de81fe0]
  4139cf:	stos   BYTE PTR es:[edi],al
  4139d0:	repz leave 
  4139d2:	(bad)  
  4139d3:	dec    ebx
  4139d4:	leave  
  4139d5:	cmp    eax,0x73805f21
  4139da:	pop    esp
  4139db:	out    dx,al
  4139dc:	xchg   esp,eax
  4139dd:	mov    edx,0x5bc0ea7c
  4139e2:	inc    eax
  4139e3:	into   
  4139e4:	adc    DWORD PTR [ebx-0x1d9fbe15],0xffffffec
  4139eb:	mov    edi,0x826ae207
  4139f0:	dec    esi
  4139f1:	in     al,0x82
  4139f3:	pusha  
  4139f4:	jmp    0xf206:0xf7a584cd
  4139fb:	pop    ebp
  4139fc:	fnstcw WORD PTR [edx-0x50cfcbcd]
  413a02:	fild   WORD PTR [ebp+0x6423eb51]
  413a08:	cmp    eax,DWORD PTR [ebp-0x7b155667]
  413a0e:	and    DWORD PTR [edx-0x3292c923],eax
  413a14:	pushf  
  413a15:	adc    eax,0xee174824
  413a1a:	or     ah,al
  413a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a1d:	out    dx,eax
  413a1e:	dec    ebx
  413a1f:	jecxz  0x413a7a
  413a21:	push   esi
  413a22:	pop    eax
  413a23:	mov    DWORD PTR ds:0x5a944edb,esi
  413a29:	jle    0x413a7e
  413a2b:	push   0xffffffaa
  413a2d:	push   ss
  413a2e:	dec    esp
  413a2f:	fadd   st(2),st
  413a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a32:	sbb    eax,0xbe9cf0c7
  413a37:	stos   DWORD PTR es:[edi],eax
  413a38:	retf   
  413a39:	stc    
  413a3a:	lods   al,BYTE PTR ds:[esi]
  413a3b:	pop    esi
  413a3c:	stos   BYTE PTR es:[edi],al
  413a3d:	mov    dh,0xdb
  413a3f:	inc    edx
  413a40:	test   eax,0xdf77a83b
  413a45:	shl    DWORD PTR [eax-0x34],1
  413a48:	div    DWORD PTR ds:0xdf49886e
  413a4e:	dec    ecx
  413a4f:	jno    0x413acd
  413a51:	inc    ebx
  413a52:	push   edi
  413a53:	xor    bh,BYTE PTR [ecx+0x64]
  413a56:	push   ecx
  413a57:	jne    0x4139e6
  413a59:	out    0x5a,al
  413a5b:	pusha  
  413a5c:	mov    ah,0x3e
  413a5e:	and    ah,BYTE PTR [esi]
  413a60:	ss and eax,0x693916e
  413a66:	nop
  413a67:	push   ecx
  413a68:	shl    DWORD PTR [edi-0x43],1
  413a6b:	(bad)
  413a6e:	movd   DWORD PTR [ebx+0x5d],mm5
  413a72:	(bad)
  413a75:	xchg   ebp,eax
  413a76:	jnp    0x413a8a
  413a78:	jl     0x413acf
  413a7a:	mov    cl,0x2a
  413a7c:	cwde   
  413a7d:	sbb    BYTE PTR [ecx+0x63],bl
  413a80:	and    eax,0x719cdc8a
  413a85:	pusha  
  413a86:	push   ds
  413a87:	push   edx
  413a88:	and    BYTE PTR [ebp+0x7dbd42fc],ch
  413a8e:	and    ah,al
  413a90:	imul   esp,DWORD PTR [esi],0xffffff90
  413a93:	inc    esi
  413a94:	adc    eax,ecx
  413a96:	call   0x70e7a4f8
  413a9b:	test   eax,0x3ab73397
  413aa0:	pop    ebp
  413aa1:	jns    0x413a57
  413aa3:	fild   WORD PTR [ebx]
  413aa5:	std    
  413aa6:	inc    esp
  413aa7:	jno    0x413a39
  413aa9:	mov    ebx,0x96577d5d
  413aae:	ret    0x8c92
  413ab1:	ficomp WORD PTR [eax-0x6d073528]
  413ab7:	in     eax,dx
  413ab8:	mov    al,0xc4
  413aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413abb:	pop    eax
  413abc:	or     eax,0xb9774b6b
  413ac1:	jbe    0x413a9b
  413ac3:	mov    ebp,0x25a1623c
  413ac8:	mov    ah,0xdf
  413aca:	or     BYTE PTR [ebp+0x22fea305],bh
  413ad0:	lahf   
  413ad1:	sbb    DWORD PTR [edi+0x54],0x2e
  413ad5:	jle    0x413b04
  413ad7:	mov    ebx,0x64c19d3e
  413adc:	add    BYTE PTR [edx+0x2e],ch
  413adf:	xor    al,0xa8
  413ae1:	inc    esp
  413ae2:	pop    edi
  413ae3:	sub    BYTE PTR [ebp+0x7c0176d],bh
  413ae9:	cld    
  413aea:	mov    ?,WORD PTR [eax*4-0x2925baf0]
  413af1:	mov    dl,0x5d
  413af3:	xchg   edi,eax
  413af4:	xor    BYTE PTR [edi],cl
  413af6:	jp     0x413aca
  413af8:	mov    dl,0x81
  413afa:	push   eax
  413afb:	inc    ecx
  413afc:	and    ecx,esi
  413afe:	lds    edi,FWORD PTR [edx+0x9]
  413b01:	stc    
  413b02:	outs   dx,DWORD PTR ds:[esi]
  413b03:	into   
  413b04:	cld    
  413b05:	sbb    edx,DWORD PTR [esi]
  413b07:	mov    ebp,0x3025b851
  413b0c:	inc    eax
  413b0d:	repnz add eax,0x88e0abf5
  413b13:	loope  0x413ac6
  413b15:	xchg   DWORD PTR [ebx-0xc39a7df],ebx
  413b1b:	in     eax,0x47
  413b1d:	das    
  413b1e:	push   ds
  413b1f:	icebp  
  413b20:	mov    ebx,0xd67a47ee
  413b25:	mov    bl,0x68
  413b27:	add    al,0xde
  413b29:	or     edx,esi
  413b2b:	jmp    0x413adc
  413b2d:	xchg   edx,eax
  413b2e:	cmp    ecx,DWORD PTR [edi-0x7c]
  413b31:	cwde   
  413b32:	xor    eax,0x58e931d2
  413b37:	imul   eax,DWORD PTR [esi],0x7718c97a
  413b3d:	retf   0xfa67
  413b40:	mov    ?,WORD PTR [edx+0x241d296f]
  413b46:	(bad)  
  413b47:	jmp    0x9260:0x7b4d4774
  413b4e:	mov    dl,0x51
  413b50:	lahf   
  413b51:	add    dl,ah
  413b53:	mov    ebp,0x18891411
  413b58:	pop    ss
  413b59:	inc    edi
  413b5a:	jo     0x413bb5
  413b5c:	dec    ebp
  413b5d:	add    al,BYTE PTR [edi]
  413b5f:	gs xor esp,eax
  413b62:	enter  0xd2b,0xff
  413b66:	jecxz  0x413b73
  413b68:	scas   al,BYTE PTR es:[edi]
  413b69:	xlat   BYTE PTR ds:[ebx]
  413b6a:	inc    ebp
  413b6b:	mov    al,0xb9
  413b6d:	loope  0x413bbc
  413b6f:	cmp    BYTE PTR [ecx+edx*2-0x50],bh
  413b73:	repz dec BYTE PTR ds:0x9e3845f3
  413b7a:	adc    eax,0x4ad11f4a
  413b7f:	mov    ecx,0x85c369f3
  413b84:	into   
  413b85:	stos   BYTE PTR es:[edi],al
  413b86:	daa    
  413b87:	mov    DWORD PTR [ebx],ebx
  413b89:	jno    0x413bfd
  413b8b:	jmp    0x15e6:0xf6426459
  413b92:	scas   eax,DWORD PTR es:[edi]
  413b93:	das    
  413b94:	(bad)  
  413b95:	(bad)  
  413b96:	clc    
  413b97:	stos   BYTE PTR es:[edi],al
  413b98:	out    0x23,eax
  413b9a:	test   eax,0xc503ec28
  413b9f:	jbe    0x413c01
  413ba1:	mov    ch,0x6e
  413ba3:	dec    edi
  413ba4:	mov    es,WORD PTR [edi]
  413ba6:	add    BYTE PTR [eax-0x7],cl
  413ba9:	icebp  
  413baa:	out    0x55,eax
  413bac:	sti    
  413bad:	jae    0x413bdd
  413baf:	ret    0x7899
  413bb2:	mov    ah,0x8d
  413bb4:	mov    edx,DWORD PTR [ebx-0x379e0a14]
  413bba:	mov    eax,0xb69f8c45
  413bbf:	lods   eax,DWORD PTR ds:[esi]
  413bc0:	popa   
  413bc1:	pusha  
  413bc2:	icebp  
  413bc3:	je     0x413bb7
  413bc5:	popf   
  413bc6:	mov    bh,0xe3
  413bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bc9:	push   eax
  413bca:	outs   dx,DWORD PTR ds:[esi]
  413bcb:	test   BYTE PTR [eax-0x228d1d28],dh
  413bd1:	hlt    
  413bd2:	adc    esi,DWORD PTR [ecx+0x4c]
  413bd5:	adc    eax,0x8159d0af
  413bda:	idiv   ecx
  413bdc:	inc    edi
  413bdd:	dec    eax
  413bde:	inc    ebp
  413bdf:	jo     0x413b88
  413be1:	aad    0x8e
  413be3:	mov    ds:0xca03be09,eax
  413be8:	shr    esi,cl
  413bea:	sub    ebp,DWORD PTR [edx+0x4]
  413bed:	lea    edi,[esi+0x28]
  413bf0:	lds    edi,FWORD PTR [ecx]
  413bf2:	push   ebx
  413bf3:	mov    ds:0xec6b73be,eax
  413bf8:	xchg   ebp,eax
  413bf9:	inc    ebx
  413bfa:	mov    edi,0xcf7cc919
  413bff:	inc    ebp
  413c00:	dec    ecx
  413c01:	loopne 0x413c77
  413c03:	inc    esi
  413c04:	into   
  413c05:	xor    al,0x31
  413c07:	arpl   WORD PTR [ecx+0x2531bf11],bp
  413c0d:	and    al,0xfb
  413c0f:	jecxz  0x413c0b
  413c11:	push   edx
  413c12:	mov    al,ds:0x6babe2a6
  413c17:	pop    edx
  413c18:	test   BYTE PTR [ebx],0xb
  413c1b:	das    
  413c1c:	pop    esp
  413c1d:	xchg   ebx,eax
  413c1e:	(bad)  
  413c1f:	outs   dx,DWORD PTR ds:[esi]
  413c20:	sbb    bh,BYTE PTR [edi-0x16b8f16e]
  413c26:	push   ecx
  413c27:	inc    edi
  413c28:	mov    edx,0x386c9e7f
  413c2d:	or     esi,DWORD PTR [eax-0x42]
  413c30:	or     DWORD PTR [edx],ebp
  413c32:	loope  0x413cb3
  413c34:	and    BYTE PTR [eax-0x6e7872c9],ch
  413c3a:	fs cwde 
  413c3c:	inc    esp
  413c3d:	pop    edx
  413c3e:	nop
  413c3f:	(bad)  
  413c40:	(bad)  
  413c41:	(bad)  
  413c42:	sub    BYTE PTR [edi-0x75],ah
  413c45:	int3   
  413c46:	aam    0xa5
  413c48:	sti    
  413c49:	push   ecx
  413c4a:	rcr    DWORD PTR [edi],0x2d
  413c4d:	or     eax,0xcc290998
  413c52:	imul   edx,DWORD PTR [esi-0x1e],0xb4779cd9
  413c59:	add    dh,ch
  413c5b:	(bad)  
  413c5c:	mov    gs:0xb0c306ee,eax
  413c62:	out    0xd6,eax
  413c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c65:	hlt    
  413c66:	repnz or DWORD PTR [edx-0x11],ebp
  413c6a:	xlat   BYTE PTR ds:[ebx]
  413c6b:	inc    ecx
  413c6c:	mov    ds:0xb8ad8df3,eax
  413c71:	loop   0x413c43
  413c73:	cmp    esi,ecx
  413c75:	mov    DWORD PTR [ebp+0x6a],ecx
  413c78:	mov    edi,0xce7f54f6
  413c7d:	pop    ss
  413c7e:	std    
  413c7f:	out    dx,eax
  413c80:	scas   al,BYTE PTR es:[edi]
  413c81:	fdivr  DWORD PTR [esi-0x3eedd8dd]
  413c87:	js     0x413c60
  413c89:	fcmovnbe st,st(2)
  413c8b:	ret    
  413c8c:	test   eax,0x6e72c44d
  413c91:	adc    cl,BYTE PTR [esp+ebp*4]
  413c94:	sbb    DWORD PTR [ecx+0x5db6f6e9],esi
  413c9a:	cmp    eax,DWORD PTR [eax+0x37]
  413c9d:	mov    al,ds:0x42baf07e
  413ca2:	xchg   ebp,eax
  413ca3:	not    BYTE PTR [eax-0x67]
  413ca6:	out    dx,al
  413ca7:	cmp    al,0x22
  413ca9:	pop    esp
  413caa:	arpl   WORD PTR [ebx+ebp*1],dx
  413cad:	daa    
  413cae:	call   0x2095b968
  413cb3:	mov    ds,ecx
  413cb5:	push   ebp
  413cb6:	sbb    al,0xef
  413cb8:	adc    eax,0xcc767500
  413cbd:	jecxz  0x413c6f
  413cbf:	jno    0x413cfa
  413cc1:	jmp    0xaefa967b
  413cc6:	sub    ah,BYTE PTR [esi+0x53]
  413cc9:	lock inc esi
  413ccb:	jecxz  0x413c68
  413ccd:	in     eax,dx
  413cce:	xor    DWORD PTR [edi+edx*4-0x6a],ecx
  413cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cd3:	dec    ecx
  413cd4:	imul   esi,DWORD PTR [edi-0x774814ff],0x289ed79a
  413cde:	ss aaa 
  413ce0:	jp     0x413c94
  413ce2:	mov    ebx,ebx
  413ce4:	(bad)  
  413ce5:	sub    bl,al
  413ce7:	outs   dx,DWORD PTR ds:[esi]
  413ce8:	fild   QWORD PTR [edx-0x18]
  413ceb:	mov    edx,0x3134c6f1
  413cf0:	add    ebx,ecx
  413cf2:	stos   BYTE PTR es:[edi],al
  413cf3:	jl     0x413d14
  413cf5:	jae    0x413c9a
  413cf7:	dec    edx
  413cf8:	mov    edx,0xff1831e3
  413cfd:	mov    al,ds:0x45034f66
  413d02:	lods   eax,DWORD PTR ds:[esi]
  413d03:	mov    ebx,cs
  413d05:	and    BYTE PTR [ebx+ebp*8-0x25e713df],bh
  413d0c:	mov    ?,WORD PTR [ebx+ebx*1-0x406bd9fb]
  413d13:	inc    esi
  413d14:	rol    BYTE PTR [edx+0x9],cl
  413d17:	jle    0x413d19
  413d19:	scas   al,BYTE PTR es:[edi]
  413d1a:	outs   dx,DWORD PTR ds:[esi]
  413d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d1c:	scas   al,BYTE PTR es:[edi]
  413d1d:	inc    esi
  413d1e:	fnsave [edi]
  413d20:	pause  
  413d22:	cmc    
  413d23:	inc    ecx
  413d24:	aam    0xa2
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	mov    ds:0x80b841e6,al
  413d2c:	std    
  413d2d:	mov    ah,0x5b
  413d2f:	retf   
  413d30:	jmp    0xa980a6c1
  413d35:	push   ss
  413d36:	fidivr WORD PTR [ecx+0x58f6fb64]
  413d3c:	test   al,0x15
  413d3e:	sbb    dh,BYTE PTR [esi+0x3c6c75a4]
  413d44:	stos   DWORD PTR es:[edi],eax
  413d45:	inc    ebx
  413d46:	ja     0x413d99
  413d48:	mov    DWORD PTR [edx-0x64],edi
  413d4b:	cmp    dl,BYTE PTR [ebx+0x2bcf2993]
  413d51:	xor    dh,ch
  413d53:	fimul  DWORD PTR [ecx]
  413d55:	add    eax,0x221b816a
  413d5a:	fadd   QWORD PTR [eax-0x18]
  413d5d:	mov    ch,0x9a
  413d5f:	ins    DWORD PTR es:[edi],dx
  413d60:	inc    ebx
  413d61:	cld    
  413d62:	and    esp,DWORD PTR [edi+ecx*1+0x5b]
  413d66:	into   
  413d67:	mov    ebp,gs
  413d69:	cmp    eax,0xeb3b0134
  413d6e:	(bad)  
  413d6f:	fucomip st,st(5)
  413d71:	or     eax,0x31e26a8f
  413d76:	xchg   DWORD PTR [ebp+0x53],ecx
  413d79:	daa    
  413d7a:	popa   
  413d7b:	push   ebx
  413d7c:	gs and eax,0xd94d7013
  413d82:	std    
  413d83:	pop    esp
  413d84:	imul   ecx,DWORD PTR [ebx-0x91f4093],0xfffffff4
  413d8b:	xchg   esi,eax
  413d8c:	sub    edx,DWORD PTR [ebp+0x3e6cb21c]
  413d92:	inc    eax
  413d93:	stc    
  413d94:	aam    0x6c
  413d96:	pop    eax
  413d97:	xor    bh,dh
  413d99:	inc    edx
  413d9a:	gs xchg esp,eax
  413d9c:	fnstcw WORD PTR [ecx-0xff3778d]
  413da2:	inc    eax
  413da3:	xchg   esp,eax
  413da4:	adc    BYTE PTR [ebx],0xdc
  413da7:	inc    ecx
  413da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da9:	push   cs
  413daa:	cld    
  413dab:	(bad)  [edi+esi*8+0x6afe2639]
  413db2:	(bad)  
  413db3:	clc    
  413db4:	push   ebp
  413db5:	inc    esi
  413db6:	cmp    DWORD PTR [ecx+0x23bd7e6f],esi
  413dbc:	jb     0x413d9c
  413dbe:	lea    ecx,[ecx+0x47]
  413dc1:	lods   eax,DWORD PTR ds:[esi]
  413dc2:	sbb    ecx,esp
  413dc4:	jnp    0x413e2b
  413dc6:	pop    ebp
  413dc7:	sub    eax,0x1f1ad9c0
  413dcc:	popf   
  413dcd:	mov    ebp,0xe53b6b1f
  413dd2:	(bad)  
  413dd3:	fwait
  413dd4:	inc    edx
  413dd5:	cmp    cl,BYTE PTR [esi-0x2b]
  413dd8:	(bad)  
  413dd9:	jle    0x413d97
  413ddb:	cdq    
  413ddc:	sbb    esp,ebp
  413dde:	push   0x6462aee0
  413de3:	mov    ebp,0x4bfc5333
  413de8:	and    eax,0x59f83843
  413ded:	shr    DWORD PTR es:[edx+0x2cb6080],1
  413df4:	or     esi,DWORD PTR [eax+0x49]
  413df7:	test   eax,0x2ea061fc
  413dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dfd:	sbb    DWORD PTR [eax+0x65245d32],edi
  413e03:	(bad)  
  413e05:	and    DWORD PTR [edx+edi*2],esp
  413e08:	xchg   BYTE PTR [eax],bl
  413e0a:	stos   BYTE PTR es:[edi],al
  413e0b:	mov    ecx,DWORD PTR [esi]
  413e0d:	ret    0x59cf
  413e10:	mov    dl,0xb0
  413e12:	jge    0x413df5
  413e14:	sbb    esp,ebp
  413e16:	test   DWORD PTR [edi],0xa4677d33
  413e1c:	into   
  413e1d:	dec    ecx
  413e1e:	sbb    BYTE PTR [ebx-0x65bbaebf],cl
  413e24:	mov    ch,0xf8
  413e26:	repz mov ebp,0xdcd4085b
  413e2c:	sub    ecx,DWORD PTR [edx+0x45]
  413e2f:	xchg   esp,eax
  413e30:	rol    BYTE PTR [edi],cl
  413e32:	enter  0xdd24,0x1f
  413e36:	scas   eax,DWORD PTR es:[edi]
  413e37:	repnz and al,al
  413e3a:	add    BYTE PTR [edi],al
  413e3c:	imul   ebp,ebp,0xffffffd7
  413e3f:	int    0x56
  413e41:	rol    al,0x8e
  413e44:	mov    cl,0x3e
  413e46:	popf   
  413e47:	or     DWORD PTR [esi-0x5d],esi
  413e4a:	fistp  WORD PTR cs:0xb567
  413e50:	and    DWORD PTR [esi+0x12],esp
  413e53:	xor    edi,edx
  413e55:	and    al,0x96
  413e57:	sbb    dh,BYTE PTR [ebp+0x15ba3cc8]
  413e5d:	out    dx,eax
  413e5e:	popa   
  413e5f:	pop    ss
  413e60:	jbe    0x413e79
  413e62:	in     eax,dx
  413e63:	fcom   QWORD PTR [edi]
  413e65:	rcl    DWORD PTR [edx-0x20a71ef4],cl
  413e6b:	mov    al,ds:0xc8b0021d
  413e70:	xlat   BYTE PTR ds:[ebx]
  413e71:	sub    BYTE PTR [edx*4+0x5b47f0dd],dh
  413e78:	(bad)  
  413e79:	arpl   WORD PTR [ebx],si
  413e7b:	fadd   DWORD PTR [ecx+0x4290280d]
  413e81:	add    BYTE PTR [esi+ecx*1-0x2cd50000],ah
  413e88:	sub    edx,esi
  413e8a:	adc    ebx,0x6a6a
  413e90:	xor    edx,eax
  413e92:	mov    DWORD PTR ds:0x42a008,0x12
  413e9c:	cmp    DWORD PTR ds:0x42a008,0x0
  413ea3:	je     0x413eed
  413ea9:	cmp    DWORD PTR ds:0x42a008,0x7
  413eb0:	jne    0x413ec1
  413eb6:	push   0x45cf
  413ebb:	call   DWORD PTR ds:0x42ed5b
  413ec1:	cmp    DWORD PTR ds:0x42a008,0x8
  413ec8:	jne    0x413edb
  413ece:	mov    ebx,DWORD PTR ds:0x42a008
  413ed4:	dec    ebx
  413ed5:	mov    DWORD PTR ds:0x42a008,ebx
  413edb:	mov    ebx,DWORD PTR ds:0x42a008
  413ee1:	dec    ebx
  413ee2:	mov    DWORD PTR ds:0x42a008,ebx
  413ee8:	jmp    0x413e9c
  413eed:	mov    DWORD PTR [ebp+0x8],edx
  413ef0:	and    DWORD PTR ds:0x42c01c,edx
  413ef6:	mov    edx,DWORD PTR [ebp+0x8]
  413ef9:	mov    ebx,DWORD PTR [ebp-0x58]
  413efc:	mov    DWORD PTR ds:0x42a00c,0x1eac
  413f06:	add    edx,0x5708f8
  413f0c:	and    DWORD PTR ds:0x42900c,0x77ed
  413f16:	imul   edx,ebx
  413f19:	mov    DWORD PTR [ebp-0x58],edx
  413f1c:	mov    edx,DWORD PTR [ebp+0x8]
  413f1f:	mov    ebx,DWORD PTR [ebp-0x54]
  413f22:	add    edx,0x64f8da
  413f28:	sub    DWORD PTR ds:0x42a010,0x32d9
  413f32:	or     edx,ebx
  413f34:	mov    DWORD PTR [ebp-0x54],edx
  413f37:	mov    ebx,DWORD PTR ds:0x424ce9
  413f3d:	mov    ebx,DWORD PTR [ebx]
  413f3f:	and    DWORD PTR ds:0x429000,ebx
  413f45:	mov    edx,DWORD PTR [ebp+0x8]
  413f48:	movzx  ebx,WORD PTR ds:0x42d018
  413f4f:	sub    DWORD PTR ds:0x42a008,ebx
  413f55:	mov    ebx,DWORD PTR [ebp-0x50]
  413f58:	and    DWORD PTR ds:0x42b010,0x42c010
  413f62:	add    edx,ecx
  413f64:	xor    edx,ebx
  413f66:	sbb    DWORD PTR ds:0x42c008,ecx
  413f6c:	mov    DWORD PTR [ebp-0x50],edx
  413f6f:	and    DWORD PTR ds:0x429028,edi
  413f75:	mov    edx,DWORD PTR [ebp+0x8]
  413f78:	mov    ebx,DWORD PTR [ebp-0x4c]
  413f7b:	add    DWORD PTR ds:0x42a010,0x42d01c
  413f85:	add    edx,edi
  413f87:	and    edx,ebx
  413f89:	mov    DWORD PTR [ebp-0x4c],edx
  413f8c:	mov    edx,DWORD PTR [ebp+0x8]
  413f8f:	and    DWORD PTR ds:0x42c000,0x0
  413f99:	jmp    0x413fab
  413f9e:	mov    ebx,DWORD PTR ds:0x42c000
  413fa4:	inc    ebx
  413fa5:	mov    DWORD PTR ds:0x42c000,ebx
  413fab:	cmp    DWORD PTR ds:0x42c000,0x10
  413fb2:	jae    0x413ffa
  413fb8:	cmp    DWORD PTR ds:0x42c000,0x9
  413fbf:	jne    0x413fd5
  413fc5:	push   0x42c008
  413fca:	push   0x5bd0
  413fcf:	call   DWORD PTR ds:0x42ed5f
  413fd5:	cmp    DWORD PTR ds:0x42c000,0x8
  413fdc:	jne    0x413fef
  413fe2:	mov    ebx,DWORD PTR ds:0x42c000
  413fe8:	inc    ebx
  413fe9:	mov    DWORD PTR ds:0x42c000,ebx
  413fef:	jmp    0x413f9e
  413ff4:	sub    DWORD PTR ds:0x42b004,ecx
  413ffa:	mov    ebx,DWORD PTR [ebp-0x48]
  413ffd:	lea    edx,[ebx+edx*1+0x241fc1f]
  414004:	sub    DWORD PTR ds:0x42b000,edx
  41400a:	mov    DWORD PTR [ebp-0x48],edx
  41400d:	sbb    DWORD PTR ds:0x429000,0x7854
  414017:	mov    edx,DWORD PTR [ebp+0x8]
  41401a:	inc    DWORD PTR ds:0x42d010
  414020:	mov    ebx,0xfa5e15e2
  414025:	add    DWORD PTR ds:0x42c008,0x42b018
  41402f:	sub    ebx,edx
  414031:	adc    DWORD PTR ds:0x42a000,ecx
  414037:	add    ebx,DWORD PTR [ebp-0x44]
  41403a:	sub    DWORD PTR ds:0x42c014,0x2136
  414044:	mov    DWORD PTR [ebp-0x44],ebx
  414047:	mov    edx,DWORD PTR [ebp+0x8]
  41404a:	or     DWORD PTR ds:0x429014,0x183b
  414054:	xor    edx,eax
  414056:	add    DWORD PTR ds:0x429020,0x42d004
  414060:	add    edx,esi
  414062:	mov    DWORD PTR ds:0x42d004,0x5303
  41406c:	jne    0x411ae9
  414072:	mov    DWORD PTR ds:0x42c008,0x42b5
  41407c:	jmp    0x41f655
  414081:	and    DWORD PTR ds:0x42a000,0x0
  41408b:	jmp    0x41409f
  414090:	xor    ebx,ebx
  414092:	add    ebx,DWORD PTR ds:0x42a000
  414098:	inc    ebx
  414099:	mov    DWORD PTR ds:0x42a000,ebx
  41409f:	cmp    DWORD PTR ds:0x42a000,0x14
  4140a6:	jae    0x414104
  4140ac:	cmp    DWORD PTR ds:0x42a000,0x5
  4140b3:	jne    0x4140d7
  4140b9:	push   0x42e134
  4140be:	push   0x41d9
  4140c3:	push   0x49c5
  4140c8:	push   DWORD PTR [ebp-0x14]
  4140cb:	push   DWORD PTR [ebp-0x1c]
  4140ce:	push   DWORD PTR [ebp-0xc]
  4140d1:	call   DWORD PTR ds:0x42ed67
  4140d7:	cmp    DWORD PTR ds:0x42a000,0x4
  4140de:	jne    0x4140f1
  4140e4:	mov    ebx,DWORD PTR ds:0x42a000
  4140ea:	inc    ebx
  4140eb:	mov    DWORD PTR ds:0x42a000,ebx
  4140f1:	jmp    0x414090
  4140f6:	mov    edx,DWORD PTR ds:0x424bfc
  4140fc:	mov    edx,DWORD PTR [edx]
  4140fe:	add    DWORD PTR ds:0x42a01c,edx
  414104:	mov    edx,DWORD PTR [ebp-0x14]
  414107:	and    DWORD PTR ds:0x42d008,0x0
  414111:	jmp    0x414123
  414116:	mov    ebx,DWORD PTR ds:0x42d008
  41411c:	inc    ebx
  41411d:	mov    DWORD PTR ds:0x42d008,ebx
  414123:	cmp    DWORD PTR ds:0x42d008,0x17
  41412a:	jae    0x414148
  414130:	cmp    DWORD PTR ds:0x42d008,0x27
  414137:	jne    0x414143
  41413d:	call   DWORD PTR ds:0x42ed6b
  414143:	jmp    0x414116
  414148:	mov    ebx,DWORD PTR [ebp-0x8]
  41414b:	sub    DWORD PTR ds:0x42d010,0x429028
  414155:	xor    edx,eax
  414157:	xor    ebx,eax
  414159:	sub    edx,ebx
  41415b:	sub    edx,esi
  41415d:	xor    edx,eax
  41415f:	mov    DWORD PTR [ebp-0x14],edx
  414162:	mov    edx,DWORD PTR [ebp-0x10]
  414165:	mov    DWORD PTR ds:0x42b000,0x55d1
  41416f:	jmp    0x4164f8
  414174:	pop    ecx
  414175:	loope  0x414113
  414177:	mov    dl,0x84
  414179:	jnp    0x414176
  41417b:	ror    eax,1
  41417d:	scas   eax,DWORD PTR es:[edi]
  41417e:	pop    ebx
  41417f:	cmc    
  414180:	imul   edx,DWORD PTR [ebx+ebp*8],0x7a73a5ad
  414187:	jp     0x41418f
  414189:	pop    edi
  41418a:	jp     0x414206
  41418c:	bound  edx,QWORD PTR [ebp+0x7a]
  41418f:	mov    ebx,0x94809305
  414194:	jae    0x414122
  414196:	int    0x12
  414198:	out    0xe6,eax
  41419a:	in     eax,dx
  41419b:	ds push 0x1d6a87b1
  4141a1:	(bad)  
  4141a2:	out    0xcd,al
  4141a4:	or     al,0x30
  4141a6:	push   ss
  4141a7:	adc    al,0x54
  4141a9:	dec    ebp
  4141aa:	mov    eax,ds:0xe6becae9
  4141af:	and    ah,BYTE PTR [eax]
  4141b1:	int3   
  4141b2:	push   ebx
  4141b3:	leave  
  4141b4:	fmul   DWORD PTR [edx-0x34655d26]
  4141ba:	xor    DWORD PTR [esi+esi*8+0x2a],ebx
  4141be:	ret    0x94f4
  4141c1:	dec    edx
  4141c2:	mov    eax,0x37366cdc
  4141c7:	fcmovu st,st(5)
  4141c9:	dec    ebx
  4141ca:	inc    edx
  4141cb:	sbb    bl,BYTE PTR [eax+0x30]
  4141ce:	addr16 loop 0x41417b
  4141d1:	mov    esp,0x3521c230
  4141d6:	dec    ecx
  4141d7:	and    eax,edx
  4141d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141da:	adc    DWORD PTR [ecx+0x7f],0xffffff82
  4141de:	jae    0x4141b6
  4141e0:	sub    eax,0xd1516072
  4141e5:	inc    esp
  4141e6:	lahf   
  4141e7:	retf   0x5d05
  4141ea:	jno    0x41420b
  4141ec:	adc    ebp,0x6bf9dbed
  4141f2:	(bad)  
  4141f3:	sti    
  4141f4:	pushf  
  4141f5:	leave  
  4141f6:	push   ds
  4141f7:	jae    0x41417b
  4141f9:	jno    0x414185
  4141fb:	mov    BYTE PTR [esi-0x59],0x80
  4141ff:	xor    al,0x28
  414201:	ret    
  414202:	dec    edx
  414203:	inc    ebx
  414204:	jmp    0xec61ef15
  414209:	test   DWORD PTR [eax],0x5df9bb26
  41420f:	adc    al,cl
  414211:	sti    
  414212:	xor    ch,bl
  414214:	rdpmc  
  414216:	(bad)  
  414217:	outs   dx,DWORD PTR ss:[esi]
  414219:	int3   
  41421a:	ins    BYTE PTR es:[edi],dx
  41421b:	or     BYTE PTR [edi],dh
  41421d:	call   0x611d1495
  414222:	retf   
  414223:	mov    BYTE PTR [ebp+0x1c83a35],dh
  414229:	out    dx,eax
  41422a:	daa    
  41422b:	cdq    
  41422c:	aaa    
  41422d:	jne    0x414210
  41422f:	jge    0x41426e
  414231:	ret    
  414232:	xor    al,0x86
  414234:	inc    edx
  414235:	nop
  414236:	jns    0x4141f2
  414238:	iret   
  414239:	mov    bl,0x1d
  41423b:	jmp    DWORD PTR [ebp+0x5275590a]
  414241:	push   ebp
  414242:	mov    ds:0x3a1d933e,eax
  414247:	paddusb mm0,mm5
  41424a:	neg    DWORD PTR [ebx+esi*2-0x37]
  41424e:	cli    
  41424f:	outs   dx,DWORD PTR ds:[esi]
  414250:	cmp    al,0xf7
  414252:	aam    0xc8
  414254:	imul   edx,DWORD PTR [edi],0x2b
  414257:	iret   
  414258:	mov    cl,0xc7
  41425a:	mov    ebx,0xe4398516
  41425f:	mov    al,ds:0xe4f4834d
  414264:	push   esi
  414265:	pop    esi
  414266:	add    DWORD PTR [eax],ebx
  414268:	addr16 xor al,0x27
  41426b:	fs jle 0x4142a3
  41426e:	bnd jle 0x41426f
  414271:	and    al,0xe3
  414273:	imul   esp,edx,0xfd6f1d40
  414279:	test   al,0xef
  41427b:	lock xor BYTE PTR [edx],0x7f
  41427f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414280:	add    bh,BYTE PTR [edx-0x5699df7d]
  414286:	push   0x1f
  414288:	and    eax,0x3ca93c56
  41428d:	ss add eax,0xaec08e5e
  414293:	outs   dx,DWORD PTR ds:[esi]
  414294:	test   eax,0x7ddcb2e5
  414299:	sub    DWORD PTR [esp+eax*8+0x2b5e8f3f],edi
  4142a0:	sti    
  4142a1:	add    DWORD PTR [edi-0x53],ebx
  4142a4:	into   
  4142a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142a6:	push   0xffffffcf
  4142a8:	xchg   DWORD PTR [esi+0x53],ebx
  4142ab:	xor    ecx,0xfffffff1
  4142ae:	push   cs
  4142af:	pop    esi
  4142b0:	scas   al,BYTE PTR es:[edi]
  4142b1:	or     ah,BYTE PTR [ecx-0x2da4b96a]
  4142b7:	scas   eax,DWORD PTR es:[edi]
  4142b8:	jle    0x4142cc
  4142ba:	sub    eax,edi
  4142bc:	enter  0x4bdc,0x1f
  4142c0:	and    eax,0xfde3633a
  4142c5:	or     BYTE PTR [esi+ebp*2+0x57b08dee],dh
  4142cc:	mov    edi,0x3eb4df1a
  4142d1:	push   esi
  4142d2:	popf   
  4142d3:	dec    ebp
  4142d4:	ins    DWORD PTR es:[edi],dx
  4142d5:	mov    cl,0xff
  4142d7:	dec    edi
  4142d8:	leave  
  4142d9:	scas   eax,DWORD PTR es:[edi]
  4142da:	test   al,0xd8
  4142dc:	test   eax,0x427b004b
  4142e1:	jl     0x4142ea
  4142e3:	lds    edx,FWORD PTR [eax+0x40acb2d4]
  4142e9:	dec    edi
  4142ea:	repz iret 
  4142ec:	das    
  4142ed:	or     DWORD PTR [ebx],ecx
  4142ef:	push   0x83b95e
  4142f4:	push   edi
  4142f5:	push   esp
  4142f6:	loop   0x41436d
  4142f8:	pushf  
  4142f9:	jp     0x414377
  4142fb:	sti    
  4142fc:	test   DWORD PTR [edi+0x67ba750f],esp
  414302:	sahf   
  414303:	int    0xc2
  414305:	sub    esi,DWORD PTR [ecx+0x5a]
  414308:	dec    ebx
  414309:	cmp    esi,DWORD PTR [ecx]
  41430b:	sub    ah,BYTE PTR [ecx-0x49a9184a]
  414311:	jmp    0x52759c7c
  414316:	pusha  
  414317:	hlt    
  414318:	addr16 stc 
  41431a:	sbb    al,0x8d
  41431c:	adc    eax,0x7e2cb820
  414321:	aam    0x61
  414323:	ins    DWORD PTR es:[edi],dx
  414324:	jmp    0x4fcfef9f
  414329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432a:	push   edx
  41432b:	out    dx,eax
  41432c:	out    dx,eax
  41432d:	(bad)  
  41432e:	les    ebx,FWORD PTR [ecx+eiz*1-0x34288a4]
  414335:	ret    0xe57b
  414338:	pop    ss
  414339:	jmp    0x4142cb
  41433b:	cdq    
  41433c:	leave  
  41433d:	or     al,0xf5
  41433f:	test   eax,0xec64cbf2
  414344:	mov    ecx,0x6a92754a
  414349:	inc    ecx
  41434a:	mov    al,ds:0xd91041a0
  41434f:	js     0x414336
  414351:	mov    ds:0xd74113b5,al
  414356:	rol    WORD PTR [ebx],1
  414359:	call   0xf88e8834
  41435e:	push   cs
  41435f:	(bad)  
  414360:	ret    0x79d2
  414363:	push   edi
  414364:	xor    BYTE PTR [esi+edi*1],ch
  414367:	jb     0x414329
  414369:	enter  0x2112,0x5b
  41436d:	(bad)  
  41436e:	into   
  41436f:	push   ebx
  414370:	mov    dl,0xe
  414372:	mov    edi,0xcc1eb095
  414377:	xchg   DWORD PTR [edx],ebp
  414379:	mov    eax,ds:0x4f260de2
  41437e:	js     0x4143ee
  414380:	ds sbb ah,al
  414383:	fmulp  st(2),st
  414385:	dec    esi
  414386:	xchg   BYTE PTR [ecx+0x40],dl
  414389:	push   ebp
  41438a:	je     0x4143d1
  41438c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41438d:	daa    
  41438e:	pop    edi
  41438f:	lods   al,BYTE PTR ds:[esi]
  414390:	or     al,0xd6
  414392:	adc    eax,0x48f5aebb
  414397:	cdq    
  414398:	test   al,0x3c
  41439a:	inc    edi
  41439b:	and    eax,0x1ad02424
  4143a0:	bound  esp,QWORD PTR [edx+esi*1-0x5a7172ac]
  4143a7:	mov    ebx,0xa3faf82f
  4143ac:	aad    0x88
  4143ae:	xchg   BYTE PTR [ebx+0x639de615],ah
  4143b4:	dec    esi
  4143b5:	test   al,0x46
  4143b7:	loop   0x4143b4
  4143b9:	gs ja  0x414348
  4143bc:	repnz pop esp
  4143be:	call   0x2d8b:0x443341ff
  4143c5:	push   edx
  4143c6:	scas   al,BYTE PTR es:[edi]
  4143c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c8:	adc    eax,0xc1ba51f8
  4143cd:	xchg   edx,eax
  4143ce:	dec    eax
  4143cf:	mov    fs:0xbccf9d7a,al
  4143d5:	jno    0x4143d6
  4143d7:	(bad)  [edi-0x18bd2e09]
  4143dd:	adc    dh,BYTE PTR [ecx+0x4a]
  4143e0:	sub    edi,DWORD PTR [ebx]
  4143e2:	jae    0x4143b3
  4143e4:	mov    ss,esi
  4143e6:	fsub   QWORD PTR [esi-0x4f]
  4143e9:	iret   
  4143ea:	dec    eax
  4143eb:	adc    ebp,ebp
  4143ed:	adc    eax,0x25be7520
  4143f2:	pop    ebx
  4143f3:	jae    0x4143f8
  4143f5:	xor    DWORD PTR [eax+ebp*2],0x60a0bab3
  4143fc:	inc    ecx
  4143fd:	sahf   
  4143fe:	(bad)  
  414400:	aas    
  414401:	imul   ebx,DWORD PTR [ebx-0x76061cdc],0x4f2fa815
  41440b:	jns    0x41441c
  41440d:	aas    
  41440e:	mov    WORD PTR [ecx+0x31fee143],ds
  414414:	es icebp 
  414416:	cdq    
  414417:	dec    esp
  414418:	jp     0x41444c
  41441a:	or     eax,0xbcac2bcf
  41441f:	jecxz  0x4143d9
  414421:	lock rcr BYTE PTR [esi],1
  414424:	push   ebp
  414425:	jmp    0x46f2:0xdca619ac
  41442c:	icebp  
  41442d:	pop    eax
  41442e:	sbb    al,0x7
  414430:	add    cl,BYTE PTR [ecx+eax*2+0x6eb7cb37]
  414437:	push   0x6e
  414439:	push   edi
  41443a:	jl     0x414459
  41443c:	push   edx
  41443d:	jmp    0x7b81:0x259d5828
  414444:	mov    bh,0xa6
  414446:	mov    dh,0x28
  414448:	sahf   
  414449:	cwde   
  41444a:	cmp    ebx,esi
  41444c:	je     0x4144a5
  41444e:	jmp    0xf218:0xe03baf27
  414455:	cmp    al,0xc9
  414457:	cld    
  414458:	or     eax,0x678d26ad
  41445d:	idiv   edi
  41445f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414460:	frstor [eax-0x69ad5e2]
  414466:	sti    
  414467:	into   
  414468:	pop    ebp
  414469:	inc    ebx
  41446a:	test   eax,0x7d91aa9e
  41446f:	fst    DWORD PTR [ecx-0x41]
  414472:	xchg   edi,eax
  414473:	xchg   ebx,eax
  414474:	add    al,BYTE PTR [edx-0x41586403]
  41447a:	xchg   edx,eax
  41447b:	or     BYTE PTR [eax],0x41
  41447e:	outs   dx,DWORD PTR ds:[esi]
  41447f:	mov    bh,0x35
  414481:	dec    ecx
  414482:	retf   
  414483:	add    edi,ebx
  414485:	mov    eax,ds:0xc9287768
  41448a:	in     al,0x79
  41448c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41448e:	inc    ebx
  41448f:	ins    DWORD PTR es:[edi],dx
  414490:	js     0x4144e4
  414492:	sub    al,0x41
  414494:	popf   
  414495:	mov    bh,ch
  414497:	xor    eax,0xa17164bb
  41449c:	xchg   ebp,eax
  41449d:	xor    cl,BYTE PTR [ecx]
  41449f:	xor    DWORD PTR [edx+0x4a],0x344d6069
  4144a6:	mov    esp,0x2911205b
  4144ab:	lods   eax,DWORD PTR ds:[esi]
  4144ac:	enter  0xaefa,0xe7
  4144b0:	bound  ebx,QWORD PTR [eax]
  4144b2:	mov    ah,0x1e
  4144b4:	das    
  4144b5:	ins    DWORD PTR es:[edi],dx
  4144b6:	cmp    DWORD PTR [ebx+0x1d],ecx
  4144b9:	mov    BYTE PTR [esi-0x2f],al
  4144bc:	cmp    BYTE PTR [ecx],ch
  4144be:	lahf   
  4144bf:	repz add edi,eax
  4144c2:	(bad)  
  4144c3:	xlat   BYTE PTR ds:[ebx]
  4144c4:	lea    esp,[edi-0x4b]
  4144c7:	repz daa 
  4144c9:	dec    eax
  4144ca:	xchg   BYTE PTR ds:0x964a69d,bl
  4144d0:	in     eax,0x8e
  4144d2:	std    
  4144d3:	es jecxz 0x41449e
  4144d6:	imul   DWORD PTR [ecx-0x6a95b17f]
  4144dc:	cmp    BYTE PTR [ecx],bh
  4144de:	les    ebp,FWORD PTR [edx-0x30]
  4144e1:	fild   WORD PTR [ebx]
  4144e3:	mov    ds:0x2aff4fd8,eax
  4144e8:	into   
  4144e9:	pop    ds
  4144ea:	inc    esi
  4144eb:	loope  0x414502
  4144ed:	and    cl,bl
  4144ef:	sbb    cl,BYTE PTR [eax]
  4144f1:	lds    esi,FWORD PTR [edx-0x7989ff7a]
  4144f7:	push   edx
  4144f8:	out    0x3,eax
  4144fa:	jg     0x4144f1
  4144fc:	pop    edx
  4144fd:	cli    
  4144fe:	rol    DWORD PTR [edx-0x2e7d9ffe],cl
  414504:	test   BYTE PTR [ecx],al
  414506:	adc    BYTE PTR [ebx+eiz*8+0x79],bh
  41450a:	add    ebp,ebp
  41450c:	fistp  WORD PTR [esi+ecx*4]
  41450f:	jae    0x4144b0
  414511:	aam    0xf4
  414513:	inc    edi
  414514:	pop    es
  414515:	shr    DWORD PTR [esi-0x3d1c348d],1
  41451b:	sbb    edx,ecx
  41451d:	xchg   edi,eax
  41451e:	fcom   QWORD PTR [esi+0x744bdb7f]
  414524:	sahf   
  414525:	imul   ebx,DWORD PTR [ecx-0x6ec2012],0x4baa3f43
  41452f:	and    cl,BYTE PTR [edx+0x560ae45f]
  414535:	lods   al,BYTE PTR ds:[esi]
  414536:	arpl   WORD PTR [edi-0x11310195],si
  41453c:	xchg   BYTE PTR [ecx+0x3aff8d52],al
  414542:	hlt    
  414543:	xlat   BYTE PTR ds:[ebx]
  414544:	xchg   edi,eax
  414545:	clc    
  414546:	sub    DWORD PTR [esp+eiz*2],0x39
  41454a:	cmp    al,0xff
  41454c:	sti    
  41454d:	dec    eax
  41454e:	aam    0xf2
  414550:	pop    ds
  414551:	cmp    BYTE PTR [ebx-0x32d427eb],ch
  414557:	lods   al,BYTE PTR ds:[esi]
  414558:	stos   DWORD PTR es:[edi],eax
  414559:	bnd jmp 0x414598
  41455c:	jmp    ebx
  41455e:	lahf   
  41455f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414560:	(bad)  
  414561:	ja     0x4144f3
  414563:	cmp    eax,0x663f611f
  414568:	ror    bl,cl
  41456a:	icebp  
  41456b:	out    dx,al
  41456c:	cmp    al,0xd5
  41456e:	ss sbb al,0x28
  414571:	ficom  WORD PTR [ecx+0x6e]
  414574:	(bad)  
  414575:	(bad)  [ebp+0x2a9069bf]
  41457b:	jno    0x41457e
  41457d:	aad    0x7e
  41457f:	adc    DWORD PTR [ecx],ebp
  414581:	push   esp
  414582:	outs   dx,DWORD PTR ds:[esi]
  414583:	jmp    0x4145d8
  414585:	cmp    cl,BYTE PTR [esi-0x6e]
  414588:	xchg   edx,eax
  414589:	jecxz  0x414525
  41458b:	cmc    
  41458c:	call   DWORD PTR [ebx-0x20]
  41458f:	je     0x414578
  414591:	fsubp  st(0),st
  414593:	sbb    al,BYTE PTR [edi+0x18e2be3a]
  414599:	add    al,0xda
  41459b:	adc    eax,0xf05be703
  4145a0:	xchg   DWORD PTR [esi-0x40],ebx
  4145a3:	mov    dl,BYTE PTR [edx]
  4145a5:	xor    ecx,0x14
  4145a8:	outs   dx,BYTE PTR ds:[esi]
  4145a9:	push   0x77
  4145ab:	mov    ebp,DWORD PTR [edx]
  4145ad:	adc    cl,dl
  4145af:	or     dh,ah
  4145b1:	xor    DWORD PTR [eax+0x68181938],0xc56bb57e
  4145bb:	dec    esp
  4145bc:	scas   eax,DWORD PTR es:[edi]
  4145bd:	jmp    0xf349979c
  4145c2:	cmp    eax,0x3fc9996d
  4145c7:	cld    
  4145c8:	lea    esp,[eax+edx*1]
  4145cb:	push   edx
  4145cc:	dec    edx
  4145cd:	lahf   
  4145ce:	in     al,0xbc
  4145d0:	ins    DWORD PTR es:[edi],dx
  4145d1:	pop    edi
  4145d2:	stos   BYTE PTR es:[edi],al
  4145d3:	add    ch,BYTE PTR [ecx-0x49]
  4145d6:	out    0x7,eax
  4145d8:	fnstsw WORD PTR [eax+0x42750af3]
  4145de:	pop    eax
  4145df:	lahf   
  4145e0:	xchg   DWORD PTR [eax+eax*4],ebp
  4145e3:	cwde   
  4145e4:	es jnp 0x414611
  4145e7:	dec    edx
  4145e8:	sub    al,cl
  4145ea:	outs   dx,DWORD PTR ds:[esi]
  4145eb:	test   DWORD PTR [esi-0x65],esi
  4145ee:	adc    eax,0x52d9a222
  4145f3:	pop    ss
  4145f4:	inc    esi
  4145f5:	pandn  mm6,QWORD PTR [eax-0x6c03619f]
  4145fc:	mov    ch,BYTE PTR [esi]
  4145fe:	push   0xffffffb8
  414600:	test   al,0xc7
  414602:	xor    DWORD PTR [esi+0x42e40a4d],ebp
  414608:	push   esi
  414609:	xchg   BYTE PTR [edi+edi*2],dl
  41460c:	pop    es
  41460d:	(bad)  
  41460e:	pushf  
  41460f:	jne    0x41463a
  414611:	(bad)  
  414612:	push   esi
  414613:	dec    edi
  414614:	mov    al,0xab
  414616:	sbb    BYTE PTR [ebx-0x4f],0x31
  41461a:	in     eax,0x57
  41461c:	std    
  41461d:	iret   
  41461e:	ret    
  41461f:	push   esi
  414620:	lock dec esi
  414622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414623:	pop    esi
  414624:	out    dx,eax
  414625:	hlt    
  414626:	loopne 0x414695
  414628:	(bad)  
  414629:	mov    ah,0x2d
  41462b:	adc    eax,0xb604869
  414630:	mov    edi,0x6891b4be
  414635:	loop   0x41465a
  414637:	mov    ebp,0x2fc4d02c
  41463c:	ja     0x414683
  41463e:	pop    esp
  41463f:	scas   eax,DWORD PTR es:[edi]
  414640:	loope  0x4145d7
  414642:	xchg   esp,eax
  414643:	jae    0x414654
  414645:	ins    DWORD PTR es:[edi],dx
  414646:	jnp    0x4145fa
  414648:	lea    ecx,[ebp-0x3]
  41464b:	mov    BYTE PTR [esp+ebx*4-0x25],dh
  41464f:	out    dx,eax
  414650:	test   esi,esp
  414652:	ins    BYTE PTR es:[edi],dx
  414653:	mov    BYTE PTR [ebp+0x59],bl
  414656:	dec    ecx
  414657:	dec    ebx
  414658:	mov    dl,0x8
  41465a:	int3   
  41465b:	mov    ebx,0xb75dbcb6
  414660:	jecxz  0x4146bf
  414662:	fmul   QWORD PTR [esi]
  414664:	sbb    al,0x31
  414666:	gs aad 0xc0
  414669:	and    eax,eax
  41466b:	sbb    eax,0x7eea622e
  414670:	jmp    0x414699
  414672:	cwde   
  414673:	push   ebp
  414674:	stos   BYTE PTR es:[edi],al
  414675:	jge    0x414601
  414677:	scas   eax,DWORD PTR es:[edi]
  414678:	loope  0x4146a3
  41467a:	push   esi
  41467b:	inc    edi
  41467c:	or     esi,edi
  41467e:	cld    
  41467f:	dec    eax
  414680:	(bad)  
  414681:	or     BYTE PTR [ecx+0x61],ch
  414684:	test   BYTE PTR [ecx+0x3066cf01],dh
  41468a:	inc    esi
  41468b:	and    edx,DWORD PTR [ecx-0x1c]
  41468e:	xor    eax,0x80e1300f
  414693:	xchg   ecx,eax
  414694:	jo     0x4146f9
  414696:	and    al,0x5f
  414698:	es call 0xf35dbdb
  41469e:	push   ebx
  41469f:	cwde   
  4146a0:	add    eax,0xce9b4acf
  4146a5:	(bad)  
  4146a6:	mov    ds:0xe0b464d1,al
  4146ab:	xchg   ebp,eax
  4146ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146ad:	sbb    dh,BYTE PTR [ebp-0x73]
  4146b0:	fs sbb al,0xb8
  4146b3:	mov    al,ds:0x7c3fcfbd
  4146b8:	jp     0x414721
  4146ba:	pop    edi
  4146bb:	mov    eax,0xf17a1539
  4146c0:	jle    0x414652
  4146c2:	call   0x74cfe1ee
  4146c7:	jno    0x41464c
  4146c9:	les    ecx,FWORD PTR [esi]
  4146cb:	mov    edx,0xb4f33e4a
  4146d0:	sub    BYTE PTR [edx],ch
  4146d2:	scas   eax,DWORD PTR es:[edi]
  4146d3:	scas   eax,DWORD PTR es:[edi]
  4146d4:	mov    edi,0xcc5de318
  4146d9:	outs   dx,BYTE PTR ds:[esi]
  4146da:	mov    ebp,0x6920289c
  4146df:	mov    ah,0x17
  4146e1:	adc    DWORD PTR [edx+0x3b],ebp
  4146e4:	leave  
  4146e5:	push   ecx
  4146e6:	dec    edi
  4146e7:	popf   
  4146e8:	xor    al,0x9a
  4146ea:	sbb    ebp,edi
  4146ec:	in     eax,0xd3
  4146ee:	push   eax
  4146ef:	pop    esi
  4146f0:	mul    al
  4146f2:	pushf  
  4146f3:	sub    DWORD PTR gs:[eax+0x73],edi
  4146f7:	stos   BYTE PTR es:[edi],al
  4146f8:	nop
  4146f9:	pop    edx
  4146fa:	cmc    
  4146fb:	(bad)  
  4146fc:	cmc    
  4146fd:	push   cs
  4146fe:	mov    BYTE PTR [eax+0x2831a7dd],ch
  414704:	out    0x43,eax
  414706:	jp     0x4146b4
  414708:	mov    edi,0xb1bd4ccf
  41470d:	xchg   DWORD PTR [esi],esp
  41470f:	outs   dx,DWORD PTR ds:[esi]
  414710:	adc    ah,dl
  414712:	aad    0xd4
  414714:	mov    ds:0xcad4d421,al
  414719:	test   DWORD PTR [ecx+edi*2+0x27],ecx
  41471d:	pop    es
  41471e:	int    0x4f
  414720:	nop
  414721:	pop    es
  414722:	and    eax,0xf0023f9d
  414727:	push   ebx
  414728:	sub    eax,0xb0785b74
  41472d:	scas   eax,DWORD PTR es:[edi]
  41472e:	or     eax,0x81e63819
  414733:	jo     0x4146e6
  414735:	mov    edi,0xbce10c02
  41473a:	stos   DWORD PTR es:[edi],eax
  41473b:	addr16 adc eax,0xd027bb7b
  414741:	inc    ecx
  414742:	repz pusha 
  414744:	mov    edi,0x511edfe5
  414749:	jmp    0x5438:0xdcbe91a5
  414750:	push   esi
  414751:	mov    ds:0xee00db90,eax
  414756:	or     bl,BYTE PTR [ebx]
  414758:	mov    esp,0xa876f0ad
  41475d:	cmp    BYTE PTR [esi+0xda74d1d],0xed
  414764:	push   DWORD PTR [ebp+0x27]
  414767:	pop    eax
  414768:	sub    esi,ebx
  41476a:	ins    DWORD PTR es:[edi],dx
  41476b:	mov    bl,0x8
  41476d:	dec    ecx
  41476e:	int3   
  41476f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414770:	cli    
  414771:	je     0x41475c
  414773:	xchg   ecx,eax
  414774:	es dec ecx
  414776:	pop    edx
  414777:	mov    fs,WORD PTR [edi]
  414779:	sti    
  41477a:	and    ebp,eax
  41477c:	repz shr dl,cl
  41477f:	and    ebp,eax
  414781:	clc    
  414782:	jns    0x41475b
  414784:	cmp    bl,0xfe
  414787:	sti    
  414788:	mov    eax,ds:0x9f321137
  41478d:	ret    
  41478e:	sub    BYTE PTR [edx-0x20b190b3],dh
  414794:	and    al,0xc5
  414796:	ss int3 
  414798:	mov    ds:0xf519811b,al
  41479d:	cdq    
  41479e:	and    cl,ch
  4147a0:	jnp    0x4147c1
  4147a2:	fwait
  4147a3:	sub    ecx,DWORD PTR [edi]
  4147a5:	sub    al,0x6
  4147a7:	mov    bl,0x53
  4147a9:	mov    bl,0x9f
  4147ab:	gs ins DWORD PTR es:[edi],dx
  4147ad:	adc    eax,0xbd663055
  4147b2:	xor    BYTE PTR [ebx-0x5d782265],ah
  4147b8:	aam    0xed
  4147ba:	mov    ebx,0xeae26296
  4147bf:	sti    
  4147c0:	fs add ebx,ecx
  4147c3:	jge    0x414811
  4147c5:	retf   
  4147c6:	cmp    ebx,DWORD PTR [esi-0x4b]
  4147c9:	xchg   edx,eax
  4147ca:	inc    esp
  4147cb:	mov    bl,0xd2
  4147cd:	iret   
  4147ce:	dec    edx
  4147cf:	dec    edx
  4147d0:	push   ecx
  4147d1:	add    ebx,DWORD PTR [ebx-0x7ff4cb4e]
  4147d7:	fsub   QWORD PTR [ebx]
  4147d9:	mov    ebp,0xc9478fa6
  4147de:	std    
  4147df:	lds    ecx,FWORD PTR [ebp-0x31]
  4147e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e3:	mov    eax,ds:0x1e494b09
  4147e8:	ss dec esp
  4147ea:	ret    0xfbc4
  4147ed:	stos   DWORD PTR es:[edi],eax
  4147ee:	adc    al,bh
  4147f0:	(bad)  
  4147f1:	mov    dl,BYTE PTR [ebx-0x7db5bdba]
  4147f7:	jl     0x4147be
  4147f9:	inc    edx
  4147fa:	push   esp
  4147fb:	retf   0x6ce5
  4147fe:	sbb    al,0x99
  414800:	push   edi
  414801:	sbb    edx,DWORD PTR ds:0x41eed780
  414807:	adc    al,0x8d
  414809:	add    bl,BYTE PTR [ecx]
  41480b:	outs   dx,DWORD PTR ds:[esi]
  41480c:	push   eax
  41480d:	addr16 fwait
  41480f:	mov    bh,0xb2
  414811:	daa    
  414812:	int    0xe3
  414814:	xor    bh,bh
  414816:	mov    es,ecx
  414818:	iret   
  414819:	popa   
  41481a:	mov    eax,ds:0x34097c16
  41481f:	dec    ecx
  414820:	shl    DWORD PTR [edi],0xf3
  414823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414824:	cmp    bh,ah
  414826:	(bad)  
  414827:	out    0x95,al
  414829:	out    dx,eax
  41482a:	mov    DWORD PTR [esp+ebp*2+0x389027d1],edx
  414831:	push   0x5b
  414833:	sti    
  414834:	add    DWORD PTR [ebx],0x3
  414837:	rcl    BYTE PTR [ebx],cl
  414839:	cs cld 
  41483b:	std    
  41483c:	retf   
  41483d:	sahf   
  41483e:	test   dl,dl
  414840:	in     eax,0xb0
  414842:	xchg   ecx,eax
  414843:	test   BYTE PTR [eax+0x3c5577ff],ch
  414849:	scas   eax,DWORD PTR es:[edi]
  41484a:	xor    eax,0x8b07e97b
  41484f:	pop    ds
  414850:	(bad)  [esp+edi*4-0x52]
  414854:	xor    ebx,esp
  414856:	arpl   WORD PTR [edx+edi*1+0x17],cx
  41485a:	je     0x414825
  41485c:	in     al,dx
  41485d:	sbb    DWORD PTR [edx-0x11615d8e],0xadef5160
  414867:	push   ebx
  414868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414869:	loop   0x4148a3
  41486b:	mov    ebp,0x3f7d41e8
  414870:	arpl   WORD PTR [ebp-0x666c40a3],sp
  414876:	xchg   esi,eax
  414877:	pushf  
  414878:	or     ch,BYTE PTR [ebx+0x2980fd5e]
  41487e:	push   0x79
  414880:	adc    bh,BYTE PTR [edx]
  414882:	sbb    al,0x74
  414884:	and    ecx,DWORD PTR [edi+0x2daf20d7]
  41488a:	scas   al,BYTE PTR es:[edi]
  41488b:	add    al,0xfc
  41488d:	in     eax,dx
  41488e:	test   BYTE PTR [ebx-0x697b8afd],0x36
  414895:	inc    eax
  414896:	mov    eax,DWORD PTR [eax-0x1f]
  414899:	dec    eax
  41489a:	and    eax,DWORD PTR [eax+ecx*4]
  41489d:	push   cs
  41489e:	gs loope 0x4148d4
  4148a1:	fist   DWORD PTR [ecx-0x1f]
  4148a4:	inc    esi
  4148a5:	add    bh,BYTE PTR ds:0x3eb77ae2
  4148ab:	jecxz  0x414851
  4148ad:	not    DWORD PTR [esi+0x41a1960f]
  4148b3:	shl    BYTE PTR [edi],1
  4148b5:	rcr    BYTE PTR [esi],0xec
  4148b8:	dec    esp
  4148b9:	add    al,0x98
  4148bb:	mov    cl,0x47
  4148bd:	fwait
  4148be:	cmp    BYTE PTR [ebp+0x2e],ch
  4148c1:	sbb    al,0xa6
  4148c3:	sti    
  4148c4:	js     0x414849
  4148c6:	jns    0x4148a2
  4148c8:	in     eax,dx
  4148c9:	mov    edi,0x6a53d442
  4148ce:	clc    
  4148cf:	mov    BYTE PTR [ecx+0x5e01d3d3],al
  4148d5:	pop    esi
  4148d6:	cmp    bl,al
  4148d8:	std    
  4148d9:	and    dh,BYTE PTR [ebx+0x5]
  4148dc:	aad    0x38
  4148de:	jp     0x4148e2
  4148e0:	dec    ecx
  4148e1:	aad    0xe2
  4148e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e4:	cs cdq 
  4148e6:	sub    al,0x23
  4148e8:	pushf  
  4148e9:	jno    0x4148ed
  4148eb:	inc    esp
  4148ec:	sar    DWORD PTR [ebx],0x14
  4148ef:	stos   BYTE PTR es:[edi],al
  4148f0:	mov    bl,0xdc
  4148f2:	jns    0x41487f
  4148f4:	adc    BYTE PTR [esi-0x40],0xfe
  4148f8:	mov    al,0x34
  4148fa:	push   cs
  4148fb:	xchg   ebx,esp
  4148fd:	mov    ds:0x6067d5db,eax
  414902:	adc    dl,ah
  414904:	cmp    ecx,DWORD PTR [edi]
  414906:	lahf   
  414907:	dec    ebp
  414908:	hlt    
  414909:	add    BYTE PTR [eax],dl
  41490b:	push   ss
  41490c:	fcom   DWORD PTR [eax+0x13acb24c]
  414912:	sub    DWORD PTR [eax+0x7c],esi
  414915:	and    DWORD PTR [eax-0x144d1403],esp
  41491b:	shl    DWORD PTR [ebp-0x276bfa79],1
  414921:	xlat   BYTE PTR ds:[ebx]
  414922:	das    
  414923:	xor    bh,BYTE PTR [eax]
  414925:	popa   
  414926:	xchg   ebx,eax
  414927:	pusha  
  414928:	sub    al,0xb1
  41492a:	fild   QWORD PTR [ebp-0x63976463]
  414930:	test   edx,edi
  414932:	mov    bl,0xfb
  414934:	xor    ecx,edi
  414936:	add    ah,BYTE PTR [edx]
  414938:	mov    ebx,0xc68fa0c5
  41493d:	test   al,0xb1
  41493f:	std    
  414940:	outs   dx,BYTE PTR ds:[esi]
  414941:	dec    ecx
  414942:	inc    eax
  414943:	rol    BYTE PTR ds:0x20b37d2e,cl
  414949:	mov    cl,0x30
  41494b:	and    dh,BYTE PTR [edx]
  41494d:	stc    
  41494e:	mov    ds:0xba243460,al
  414953:	jg     0x4149a1
  414955:	fwait
  414956:	ret    0x93f7
  414959:	es mov ch,0x57
  41495c:	sar    BYTE PTR [edx+0x2f25e28e],cl
  414962:	dec    edi
  414963:	push   edi
  414964:	dec    ebx
  414965:	bound  edx,QWORD PTR [ecx]
  414967:	cmp    BYTE PTR [ebx],bl
  414969:	jb     0x414974
  41496b:	pop    ds
  41496c:	fnstenv [eax+eax*8]
  41496f:	(bad)  
  414970:	ss sub ecx,edi
  414973:	pop    ss
  414974:	scas   eax,DWORD PTR es:[edi]
  414975:	xchg   edi,eax
  414976:	(bad)  
  414978:	push   ss
  414979:	mov    eax,0x7124b0d1
  41497e:	add    al,0x18
  414980:	test   eax,0x18fcb5bf
  414985:	pop    ebx
  414986:	pop    edi
  414987:	jnp    0x41490d
  414989:	sbb    DWORD PTR [ecx+ebp*1+0x67],ebp
  41498d:	adc    edi,ecx
  41498f:	jo     0x414995
  414991:	or     al,0x4d
  414993:	xchg   dl,ch
  414995:	in     al,dx
  414996:	adc    bl,BYTE PTR [ebx]
  414998:	add    bh,BYTE PTR [edi]
  41499a:	cmp    dl,BYTE PTR [ebp+edx*4+0x543b22c3]
  4149a1:	or     edi,ecx
  4149a3:	pushf  
  4149a4:	inc    ecx
  4149a5:	push   ss
  4149a6:	cld    
  4149a7:	aad    0x7
  4149a9:	jbe    0x4149ae
  4149ab:	jg     0x414a12
  4149ad:	out    0xa7,al
  4149af:	ds sahf 
  4149b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b2:	bound  edx,QWORD PTR ds:0x1c3a6b6e
  4149b8:	mov    BYTE PTR [edi+0x47224dae],ah
  4149be:	leave  
  4149bf:	pushf  
  4149c0:	mov    cs,WORD PTR [esi-0x7]
  4149c3:	pop    ecx
  4149c4:	and    esi,0xffffffd1
  4149c7:	pop    edi
  4149c8:	rcl    DWORD PTR [edx-0x5c],0x87
  4149cc:	repz jno 0x4149fb
  4149cf:	add    eax,0x1af1c5c9
  4149d4:	aad    0xdc
  4149d6:	mov    ecx,0x8aec58bb
  4149db:	fnsave [ecx-0x68]
  4149de:	popf   
  4149df:	dec    edi
  4149e0:	pop    ecx
  4149e1:	pop    edi
  4149e2:	mov    dl,0xba
  4149e4:	ret    0xe714
  4149e7:	dec    eax
  4149e8:	xchg   esi,eax
  4149e9:	cmp    DWORD PTR [ebx+0x5d],esi
  4149ec:	lods   al,BYTE PTR ds:[esi]
  4149ed:	mov    ah,BYTE PTR [esi-0x7f]
  4149f0:	mov    ds:0xfcfaf49f,al
  4149f5:	gs pop edi
  4149f7:	cmc    
  4149f8:	imul   esi,DWORD PTR [ebp+0x13e0f3b3],0x820e22fc
  414a02:	mov    ?,WORD PTR [ebx+0x3929f532]
  414a08:	push   cs
  414a09:	dec    esi
  414a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0b:	jbe    0x4149d2
  414a0d:	xchg   DWORD PTR [eax-0x61],edi
  414a10:	pop    esp
  414a11:	js     0x414a0f
  414a13:	adc    ecx,DWORD PTR [esi-0x55f3f462]
  414a19:	imul   esi,DWORD PTR [edx],0xffffffb2
  414a1c:	sbb    BYTE PTR [edx],0xb8
  414a1f:	mov    edx,0x98a509b3
  414a24:	dec    esi
  414a25:	mov    ah,ah
  414a27:	xchg   ebx,eax
  414a28:	xchg   ecx,eax
  414a29:	xchg   edx,eax
  414a2a:	in     eax,dx
  414a2b:	mov    ds,WORD PTR [ebx]
  414a2d:	loop   0x4149df
  414a2f:	lea    ebx,[ebx]
  414a31:	jne    0x4149e6
  414a33:	dec    eax
  414a34:	mov    BYTE PTR [edx],0xbc
  414a37:	(bad)
  414a3a:	jecxz  0x4149cd
  414a3c:	jns    0x414a71
  414a3e:	daa    
  414a3f:	in     al,dx
  414a40:	or     BYTE PTR [ebp+eiz*4-0x1c],al
  414a44:	add    BYTE PTR [edx-0x4c],ah
  414a47:	pop    ss
  414a48:	sbb    BYTE PTR [edi+edx*8+0x17],0xc7
  414a4d:	xchg   edi,eax
  414a4e:	(bad)  
  414a4f:	adc    al,0x7f
  414a51:	inc    eax
  414a52:	outs   dx,BYTE PTR ds:[esi]
  414a53:	ja     0x414a67
  414a55:	jecxz  0x414a82
  414a57:	jp     0x414a36
  414a59:	sub    eax,0xf793a2e7
  414a5e:	js     0x414a2d
  414a60:	iret   
  414a61:	ror    BYTE PTR [esi+0x4f],cl
  414a64:	aaa    
  414a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a66:	inc    edx
  414a67:	jecxz  0x414a58
  414a69:	push   ecx
  414a6a:	cmp    eax,0x3bfc16c7
  414a6f:	mov    esi,0xa5c3de1d
  414a74:	jbe    0x414ade
  414a76:	call   0x574c4ae9
  414a7b:	pop    edx
  414a7c:	sbb    eax,eax
  414a7e:	ja     0x414a52
  414a80:	popa   
  414a81:	mov    esp,DWORD PTR es:[ecx+0xb]
  414a85:	aam    0x4b
  414a87:	sbb    edi,DWORD PTR [ebx-0x2ab9763]
  414a8d:	test   eax,0xcec315a0
  414a92:	mov    cl,0xaa
  414a94:	outs   dx,DWORD PTR gs:[esi]
  414a96:	mov    DWORD PTR [edi-0x31],ecx
  414a99:	ret    
  414a9a:	sub    ecx,eax
  414a9c:	fsubr  DWORD PTR [ecx-0x3661d0c8]
  414aa2:	call   0x125e9652
  414aa7:	div    BYTE PTR [edi]
  414aa9:	mov    esp,0xe0b1daae
  414aae:	cdq    
  414aaf:	bound  ebx,QWORD PTR [ecx]
  414ab1:	pusha  
  414ab2:	xchg   BYTE PTR [ebx],dh
  414ab4:	test   eax,0x625e4380
  414ab9:	add    BYTE PTR [ebp-0x1fe1f2b3],ah
  414abf:	test   BYTE PTR [eax-0x36],al
  414ac2:	shl    DWORD PTR [eax+eiz*4+0x1],cl
  414ac6:	lock add esp,DWORD PTR [esi+0x75e26987]
  414acd:	outs   dx,DWORD PTR ds:[esi]
  414ace:	jge    0x414aef
  414ad0:	pop    ebx
  414ad1:	add    al,BYTE PTR [ecx+0x22]
  414ad4:	loopne 0x414a96
  414ad6:	cli    
  414ad7:	push   ds
  414ad8:	ja     0x414b47
  414ada:	cmc    
  414adb:	adc    ecx,eax
  414add:	int3   
  414ade:	test   eax,0x5ecf6d10
  414ae3:	cdq    
  414ae4:	aaa    
  414ae5:	xchg   esi,eax
  414ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ae7:	daa    
  414ae8:	repz retf 
  414aea:	shl    DWORD PTR [ebp-0x4beeb2d3],cl
  414af0:	fnstenv [ecx]
  414af2:	rol    ch,0x33
  414af5:	rol    DWORD PTR ds:0xc61f8ae4,cl
  414afb:	add    DWORD PTR [edx-0x5fa0c04d],esi
  414b01:	add    al,0x6e
  414b03:	mov    ds:0x470c1f08,eax
  414b08:	jb     0x414a99
  414b0a:	dec    eax
  414b0b:	pop    ebp
  414b0c:	imul   ebx,DWORD PTR [edx],0xffffff90
  414b0f:	mov    cl,BYTE PTR [ecx-0x4869824d]
  414b15:	mul    BYTE PTR [eax-0x44]
  414b18:	sub    eax,0xd292a228
  414b1d:	je     0x414b59
  414b1f:	outs   dx,BYTE PTR ds:[esi]
  414b20:	push   ecx
  414b21:	test   al,0x89
  414b23:	scas   al,BYTE PTR es:[edi]
  414b24:	out    0x7d,eax
  414b26:	or     eax,0xce7eb22b
  414b2b:	cmp    eax,0xb959bd4d
  414b30:	or     ebx,DWORD PTR [ecx+0x5b426c12]
  414b36:	ds add al,0xe7
  414b39:	mov    ds:0x2a7c37fa,eax
  414b3e:	jae    0x414aca
  414b40:	rcr    esp,0xd4
  414b43:	mov    al,BYTE PTR [edi-0x600d6e54]
  414b49:	inc    edx
  414b4a:	idiv   ah
  414b4c:	jb     0x414ae8
  414b4e:	pop    eax
  414b4f:	(bad)  
  414b50:	xor    dl,BYTE PTR [esi+0x2479a816]
  414b56:	mov    bh,BYTE PTR [ebp-0x3c3f93cf]
  414b5c:	xchg   DWORD PTR [edi+0x2ebfa3ed],ebp
  414b62:	mov    bh,0xd4
  414b64:	cwde   
  414b65:	cmp    al,0x85
  414b67:	lods   eax,DWORD PTR ds:[esi]
  414b68:	sbb    BYTE PTR [edi+0x6b],bl
  414b6b:	ret    
  414b6c:	adc    eax,DWORD PTR [edx]
  414b6e:	pop    ss
  414b6f:	fwait
  414b70:	cmp    ch,BYTE PTR [edi]
  414b72:	es arpl di,ax
  414b75:	sub    BYTE PTR [ebx-0x1c048250],0xfb
  414b7c:	mov    dl,0x79
  414b7e:	dec    eax
  414b7f:	inc    eax
  414b80:	push   0x23
  414b82:	xor    DWORD PTR es:[ebx+0x76e06da9],0xfc413cc2
  414b8d:	pop    esp
  414b8e:	ss jno 0x414b17
  414b91:	fs fsubp st(0),st
  414b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b95:	jne    0x414bf9
  414b97:	pop    ebp
  414b98:	adc    eax,0x1c8c7ce4
  414b9d:	add    BYTE PTR [edx+0x38],ah
  414ba0:	ds and eax,0xb3e4e8e3
  414ba6:	jmp    0x688b355f
  414bab:	xchg   DWORD PTR [edx-0x70],ecx
  414bae:	sub    DWORD PTR [esi],ebp
  414bb0:	into   
  414bb1:	mov    ebx,0xd48ce7ea
  414bb6:	sbb    eax,0xb12f5949
  414bbb:	pop    ebx
  414bbc:	pop    ds
  414bbd:	mov    eax,0x15312014
  414bc2:	jecxz  0x414b68
  414bc4:	add    dh,dh
  414bc6:	test   BYTE PTR [esi-0x1c],dh
  414bc9:	out    0xd4,al
  414bcb:	jbe    0x414bb6
  414bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bce:	stos   BYTE PTR es:[edi],al
  414bcf:	jns    0x414be3
  414bd1:	adc    al,0x9f
  414bd3:	adc    DWORD PTR [eax],ebx
  414bd5:	enter  0xe93a,0x2d
  414bd9:	sti    
  414bda:	pop    DWORD PTR [eax]
  414bdc:	rcl    BYTE PTR ds:0x7e8e0ce,cl
  414be2:	shr    bl,0xd5
  414be5:	sahf   
  414be6:	out    dx,eax
  414be7:	call   0xa1f291b
  414bec:	imul   esp,DWORD PTR [ecx-0x7],0x51
  414bf0:	out    0xf9,eax
  414bf2:	xchg   DWORD PTR [edx],edx
  414bf4:	pop    ebx
  414bf5:	sub    DWORD PTR [edi-0x3f2922c],ebx
  414bfb:	repz inc edi
  414bfd:	mov    bl,0xb7
  414bff:	xor    cl,BYTE PTR [ebx]
  414c01:	imul   ebp,DWORD PTR [edi],0x4464ce04
  414c07:	jno    0x414be9
  414c09:	xor    eax,0xdf871e0c
  414c0e:	dec    DWORD PTR [ebx-0x2a939c5]
  414c14:	idiv   BYTE PTR [ebx]
  414c16:	icebp  
  414c17:	mov    DWORD PTR [esi-0x15b94260],edi
  414c1d:	jne    0x414c0c
  414c1f:	je     0x414c54
  414c21:	mov    bh,0xc1
  414c23:	les    eax,FWORD PTR [esp+ecx*2-0x716f60d7]
  414c2a:	inc    esp
  414c2b:	ror    BYTE PTR [ecx+0x60a166ed],1
  414c31:	xor    al,0x56
  414c33:	mov    esp,0xdb845cf8
  414c38:	sbb    eax,0xd554b92a
  414c3d:	fnstenv [esi-0x4cbdba57]
  414c43:	out    0x4f,al
  414c45:	jecxz  0x414be4
  414c47:	int    0x70
  414c49:	and    al,BYTE PTR [esi]
  414c4b:	mov    bh,0xdc
  414c4d:	push   es
  414c4e:	sti    
  414c4f:	dec    ebx
  414c50:	hlt    
  414c51:	ins    DWORD PTR es:[edi],dx
  414c52:	adc    BYTE PTR [ebx-0x12670a77],cl
  414c58:	sub    BYTE PTR [ecx],0x6a
  414c5b:	lods   eax,DWORD PTR ds:[esi]
  414c5c:	mov    ch,cl
  414c5e:	mov    edx,0x87afc74a
  414c63:	sbb    eax,0xb1b607fd
  414c68:	adc    al,0xf1
  414c6a:	fcom   st(3)
  414c6c:	push   edx
  414c6d:	jne    0x414c68
  414c6f:	pop    ebx
  414c70:	ins    BYTE PTR es:[edi],dx
  414c71:	mov    DWORD PTR [edx],esp
  414c73:	ins    DWORD PTR es:[edi],dx
  414c74:	jns    0x414cef
  414c76:	mov    al,ds:0xd65e6bde
  414c7b:	imul   esp,DWORD PTR [edx+0x3f639245],0x4
  414c82:	sub    edx,DWORD PTR [ebx+0x28dc0af2]
  414c88:	xor    al,0x1a
  414c8a:	aad    0xf4
  414c8c:	or     ch,BYTE PTR [eax+0x66]
  414c8f:	outs   dx,BYTE PTR ds:[esi]
  414c90:	jo     0x414cdb
  414c92:	dec    edi
  414c93:	jl     0x414cff
  414c95:	xor    eax,0xc44bb700
  414c9a:	jecxz  0x414d02
  414c9c:	leave  
  414c9d:	inc    edx
  414c9e:	iret   
  414c9f:	mov    cs,WORD PTR [edi+eax*8]
  414ca2:	cmp    al,0x6a
  414ca4:	loop   0x414d1e
  414ca6:	and    BYTE PTR [ecx-0x20ae7066],bl
  414cac:	cmp    DWORD PTR [eax+0x16],ecx
  414caf:	ja     0x414c91
  414cb1:	adc    ch,BYTE PTR [edx+0x63d22dd6]
  414cb7:	jb     0x414d2c
  414cb9:	sbb    BYTE PTR [ecx],0xf
  414cbc:	inc    esp
  414cbd:	hlt    
  414cbe:	jo     0x414cb6
  414cc0:	jbe    0x414d18
  414cc2:	pop    edx
  414cc3:	sub    edi,DWORD PTR [ebx]
  414cc5:	es popf 
  414cc7:	das    
  414cc8:	cs test eax,0xdd10fceb
  414cce:	mov    esp,esi
  414cd0:	xchg   edi,eax
  414cd1:	gs gs mov edx,0x666d8b0e
  414cd8:	adc    ebx,edi
  414cda:	imul   ecx,DWORD PTR [eax-0x31ee6b94],0xf3c2b44c
  414ce4:	std    
  414ce5:	xchg   edi,eax
  414ce6:	loopne 0x414d0d
  414ce8:	push   es
  414ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cea:	imul   edx,DWORD PTR [ecx],0x1c8382a7
  414cf0:	sub    eax,0x6df7bde4
  414cf5:	ins    DWORD PTR es:[edi],dx
  414cf6:	jp     0x414d42
  414cf8:	jae    0x414cc3
  414cfa:	mov    edi,0x4a4a2aff
  414cff:	mov    al,0x1f
  414d01:	inc    ecx
  414d02:	enter  0x28e8,0x85
  414d06:	and    BYTE PTR [edi-0x775ceb89],dh
  414d0c:	adc    al,0x6d
  414d0e:	cld    
  414d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d10:	jmp    0x7dad:0x7d24e8d7
  414d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d18:	push   cs
  414d19:	in     eax,dx
  414d1a:	fdiv   DWORD PTR [edx+0x4e]
  414d1d:	pushf  
  414d1e:	push   ebx
  414d1f:	ret    
  414d20:	mov    eax,0xeb473eca
  414d25:	mov    BYTE PTR [edx+ebp*4+0x6089da3d],bh
  414d2c:	jmp    0xd2729e75
  414d31:	jecxz  0x414d48
  414d33:	out    dx,al
  414d34:	jne    0x414d0b
  414d36:	xchg   esp,eax
  414d37:	fwait
  414d38:	jp     0x414ce3
  414d3a:	push   0xffffffd4
  414d3c:	sti    
  414d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3e:	test   al,0x83
  414d40:	dec    BYTE PTR [esi+0x4a]
  414d43:	popa   
  414d44:	xor    ecx,esi
  414d46:	arpl   WORD PTR [esi],cx
  414d48:	fdivr  QWORD PTR [ecx-0x1a24fec1]
  414d4e:	lock bound ebx,QWORD PTR [edi]
  414d51:	ret    0x2b9
  414d54:	push   cs
  414d55:	mov    ebx,0xe7bade98
  414d5a:	sub    DWORD PTR [edx+0x4e],ecx
  414d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d5e:	(bad)  
  414d60:	imul   BYTE PTR [ebx-0x79]
  414d63:	stos   BYTE PTR es:[edi],al
  414d64:	in     al,0xef
  414d66:	ja     0x414d2a
  414d68:	bound  esp,QWORD PTR [ebx-0x32260639]
  414d6e:	je     0x414d43
  414d70:	cmp    BYTE PTR [ecx],0x36
  414d73:	xchg   esp,eax
  414d74:	cmp    dl,BYTE PTR [ebp+0x65]
  414d77:	ret    
  414d78:	adc    esp,ebx
  414d7a:	push   esi
  414d7b:	mov    bl,0x53
  414d7d:	jl     0x414d6c
  414d7f:	sub    eax,DWORD PTR [edi]
  414d81:	stos   DWORD PTR es:[edi],eax
  414d82:	call   0xbbe0:0xfa70a4c5
  414d89:	jp     0x414d97
  414d8b:	aaa    
  414d8c:	or     eax,0xa15e0111
  414d91:	cmp    al,0x24
  414d93:	(bad)  
  414d94:	mov    ebx,0x165d0fb1
  414d99:	scas   al,BYTE PTR es:[edi]
  414d9a:	cdq    
  414d9b:	sbb    al,0xb8
  414d9d:	pusha  
  414d9e:	test   esi,0xfec956aa
  414da4:	ins    DWORD PTR es:[edi],dx
  414da5:	sbb    bh,BYTE PTR [ebp-0x1b4d6f9c]
  414dab:	cmp    dl,BYTE PTR [ecx-0x7e]
  414dae:	fisttp DWORD PTR [ebx+0x4c]
  414db1:	fadd   DWORD PTR [edx+ebp*8-0x32668c13]
  414db8:	mov    eax,ds:0x1758d2a
  414dbd:	shl    ch,cl
  414dbf:	and    BYTE PTR [edi+esi*2],ah
  414dc2:	es test al,0x7b
  414dc5:	shr    edx,cl
  414dc7:	pop    esp
  414dc8:	adc    esp,DWORD PTR ds:0xea6391d9
  414dce:	iret   
  414dcf:	push   ebx
  414dd0:	mov    esp,0xe8c9094c
  414dd5:	mov    cl,0xe8
  414dd7:	pop    esp
  414dd8:	popf   
  414dd9:	inc    ebx
  414dda:	je     0x414df7
  414ddc:	or     BYTE PTR [esi-0x6495ce83],ch
  414de2:	inc    edi
  414de3:	push   esp
  414de4:	push   es
  414de5:	mov    DWORD PTR es:[ecx],ebp
  414de8:	aas    
  414de9:	js     0x414d7d
  414deb:	dec    ebx
  414dec:	aas    
  414ded:	in     al,dx
  414dee:	jbe    0x414dcd
  414df0:	mov    al,BYTE PTR [esi-0x68]
  414df3:	xor    al,0xe4
  414df5:	add    eax,0x84d595cb
  414dfa:	push   esi
  414dfb:	and    DWORD PTR [esp+eiz*4],0xb36e0396
  414e02:	(bad)  
  414e03:	mov    ah,0x57
  414e05:	jp     0x414e75
  414e07:	frstor [esp+esi*1]
  414e0a:	cs aad 0x7a
  414e0d:	mov    dh,dl
  414e0f:	enter  0xf9c2,0xe1
  414e13:	pop    ss
  414e14:	push   esp
  414e15:	fs xchg edi,esi
  414e18:	mov    eax,0xc4aedb3e
  414e1d:	and    al,0x3c
  414e1f:	out    0x4f,eax
  414e21:	mov    BYTE PTR [ebp-0x27],cl
  414e24:	push   0xfd97be49
  414e29:	or     ah,BYTE PTR [ecx+0x14f78b64]
  414e2f:	cs pusha 
  414e31:	clc    
  414e32:	iret   
  414e33:	ins    DWORD PTR es:[edi],dx
  414e34:	push   cs
  414e35:	mov    eax,ds:0x8574d60e
  414e3a:	push   0xffffffa5
  414e3c:	sbb    DWORD PTR [ebp-0x4],ecx
  414e3f:	ss push 0x42
  414e42:	sbb    edx,0xffffffd5
  414e45:	mov    ds:0x638b4760,al
  414e4a:	in     al,dx
  414e4b:	push   ds
  414e4c:	rol    BYTE PTR [eax+0x74],0x75
  414e50:	ja     0x414ec6
  414e52:	pop    ecx
  414e53:	pushf  
  414e54:	inc    ebx
  414e55:	iret   
  414e56:	daa    
  414e57:	add    DWORD PTR [edi+0x650e5284],ebx
  414e5d:	cmp    ch,BYTE PTR [eax+0x22d01ee7]
  414e63:	mov    eax,ds:0x262c8cfb
  414e68:	adc    DWORD PTR [edx-0x67fcfb11],edi
  414e6e:	fwait
  414e6f:	je     0x414e3e
  414e71:	(bad)  
  414e72:	mov    dl,0x6c
  414e74:	repz pop ds
  414e76:	mov    ?,WORD PTR [eax-0x48]
  414e79:	ins    BYTE PTR es:[edi],dx
  414e7a:	xor    al,0xdb
  414e7c:	and    dh,BYTE PTR ds:0x79eba7d3
  414e82:	xchg   ecx,eax
  414e83:	(bad)  
  414e84:	pop    eax
  414e85:	mov    eax,ds:0x97c11f01
  414e8a:	repz push esp
  414e8c:	xchg   BYTE PTR [esi+0x3b],ah
  414e8f:	cmc    
  414e90:	into   
  414e91:	cwde   
  414e92:	dec    ebp
  414e93:	sbb    eax,0xd687b7d3
  414e98:	cwde   
  414e99:	jl     0x414e28
  414e9b:	addr16 pop ss
  414e9d:	jecxz  0x414e56
  414e9f:	je     0x414ea9
  414ea1:	adc    al,0x3
  414ea3:	data16 fist DWORD PTR [edx-0x25]
  414ea7:	cmp    al,0x72
  414ea9:	mov    WORD PTR [edi-0x7bacaf26],fs
  414eaf:	stos   DWORD PTR es:[edi],eax
  414eb0:	dec    edi
  414eb1:	and    al,0xa3
  414eb3:	ss scas al,BYTE PTR es:[edi]
  414eb5:	popa   
  414eb6:	rcr    BYTE PTR [ebx-0x75eef317],1
  414ebc:	adc    DWORD PTR ds:0x575e739c,ebx
  414ec2:	pop    edi
  414ec3:	and    eax,0x85cfb77e
  414ec8:	iret   
  414ec9:	(bad)  
  414ecb:	into   
  414ecc:	xlat   BYTE PTR ds:[ebx]
  414ecd:	adc    dh,BYTE PTR [edi-0x5ff33cfb]
  414ed3:	lds    ecx,FWORD PTR ds:0x603b9bc0
  414ed9:	sub    dh,BYTE PTR [ebx-0x6c]
  414edc:	sbb    al,0xd1
  414ede:	pusha  
  414edf:	pusha  
  414ee0:	pop    esi
  414ee1:	xchg   ecx,eax
  414ee2:	cmp    al,0x1a
  414ee4:	sbb    ah,BYTE PTR [edx+0x116a62f]
  414eea:	shr    DWORD PTR [edi],0xd1
  414eed:	adc    dl,BYTE PTR [ecx+eiz*2+0x13d3f799]
  414ef4:	xor    al,0x5f
  414ef6:	cdq    
  414ef7:	dec    edi
  414ef8:	jg     0x414ece
  414efa:	xchg   ebp,eax
  414efb:	or     DWORD PTR [ebp+0x775f0dd1],ebx
  414f01:	ret    0xb9d4
  414f04:	gs ins DWORD PTR es:[edi],dx
  414f06:	add    DWORD PTR [ebx+0x5],eax
  414f09:	pop    edi
  414f0a:	dec    ebx
  414f0b:	dec    ebx
  414f0c:	push   edi
  414f0d:	mov    esp,0xcbc4bca6
  414f12:	pushf  
  414f13:	mov    al,ds:0x9288e6
  414f18:	xor    al,0x4a
  414f1a:	cmp    eax,0x66903b0c
  414f1f:	and    DWORD PTR ds:[ebx-0x5e50570f],esi
  414f26:	out    dx,eax
  414f27:	(bad)
  414f2b:	or     eax,0xca5b50a9
  414f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f31:	sub    BYTE PTR [eax+0x33],bh
  414f34:	gs jns 0x414fa5
  414f37:	push   edx
  414f38:	dec    eax
  414f39:	adc    DWORD PTR [ebx+esi*2],0x4c6fdda
  414f40:	push   ds
  414f41:	imul   ebx,DWORD PTR ds:0xcc63b1d1,0xffffffa9
  414f48:	push   esi
  414f49:	test   eax,0x1bd12377
  414f4e:	imul   ebp,DWORD PTR [edi],0xffffffde
  414f51:	mov    ?,WORD PTR [eax+0x15cbf892]
  414f57:	cmp    BYTE PTR [ebx+0x40],0x9f
  414f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f5c:	jbe    0x414ee3
  414f5e:	adc    eax,0x8049f1f6
  414f63:	mov    ebx,edx
  414f65:	sbb    BYTE PTR [ebp-0x56],dh
  414f68:	push   ebx
  414f69:	or     bh,BYTE PTR ds:0xf6973e3e
  414f6f:	jbe    0x414fb9
  414f71:	(bad)  
  414f72:	xchg   esi,eax
  414f73:	rcr    DWORD PTR [eax+0x76e3ab73],1
  414f79:	ins    DWORD PTR es:[edi],dx
  414f7a:	mov    WORD PTR [edx-0xd],ss
  414f7d:	jmp    0x414f85
  414f7f:	jbe    0x414fc5
  414f81:	xor    ebx,DWORD PTR [esi+ebp*8-0x33]
  414f85:	mov    DWORD PTR [ecx-0x52a633e4],esp
  414f8b:	stc    
  414f8c:	enter  0xcd45,0x3f
  414f90:	push   ebp
  414f91:	or     esp,edx
  414f93:	rcl    bl,1
  414f95:	ja     0x414f7e
  414f97:	cld    
  414f98:	loop   0x414f3b
  414f9a:	mov    cl,0x2a
  414f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f9d:	inc    esp
  414f9e:	dec    esi
  414f9f:	jecxz  0x414fe0
  414fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa2:	mov    edx,0x78116a46
  414fa7:	push   eax
  414fa8:	jmp    0x7ded:0xa38ea1f8
  414faf:	in     al,dx
  414fb0:	mov    esi,0xff34a068
  414fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb6:	jl     0x415005
  414fb8:	mov    edi,0xfba9fd8f
  414fbd:	sbb    ah,BYTE PTR [eax+0x30]
  414fc0:	sub    al,0x9
  414fc2:	adc    BYTE PTR [eax-0x77e03b43],cl
  414fc8:	fwait
  414fc9:	mov    ds:0x6cd127c6,eax
  414fce:	clc    
  414fcf:	push   esp
  414fd0:	scas   al,BYTE PTR es:[edi]
  414fd1:	scas   eax,DWORD PTR es:[edi]
  414fd2:	out    0x30,al
  414fd4:	mov    WORD PTR [ebx],fs
  414fd6:	mov    WORD PTR [ebx-0x75],ss
  414fd9:	xchg   esi,eax
  414fda:	rcl    DWORD PTR [ebp-0x58],cl
  414fdd:	imul   esp,DWORD PTR [ebp+0x437020e6],0x78ce2381
  414fe7:	xor    edi,esp
  414fe9:	in     al,0x44
  414feb:	xor    edi,edx
  414fed:	pushf  
  414fee:	mov    bl,0x4b
  414ff0:	pop    edi
  414ff1:	adc    al,0x82
  414ff3:	(bad)  
  414ff4:	gs repz adc eax,0xd4428e87
  414ffb:	xchg   BYTE PTR [ecx+0x47],cl
  414ffe:	push   eax
  414fff:	aam    0xaa
  415001:	clc    
  415002:	scas   eax,DWORD PTR es:[edi]
  415003:	xor    eax,0xb65a8f8f
  415008:	fld    TBYTE PTR [esi]
  41500a:	dec    BYTE PTR [esi]
  41500c:	sahf   
  41500d:	add    ah,ch
  41500f:	cmp    BYTE PTR gs:[edx+esi*1],dl
  415013:	jp     0x414fd9
  415015:	std    
  415016:	test   BYTE PTR [esi],bl
  415018:	push   edx
  415019:	or     ch,BYTE PTR [ebx-0x74]
  41501c:	shr    DWORD PTR [eax],0x27
  41501f:	test   al,bh
  415021:	or     al,0x61
  415023:	fwait
  415024:	inc    BYTE PTR [ebp+0x2d]
  415027:	scas   al,BYTE PTR es:[edi]
  415028:	jae    0x41504c
  41502a:	xchg   ebx,eax
  41502c:	sub    eax,0x85e96fa0
  415031:	and    eax,0xc133d9d
  415036:	sbb    DWORD PTR [ecx-0x7e],ebx
  415039:	retf   0x9ce1
  41503c:	sub    BYTE PTR [edx+0x68],ch
  41503f:	xchg   si,ax
  415041:	fsub   DWORD PTR [esi]
  415043:	jo     0x414fe5
  415045:	(bad)  
  415046:	push   cs
  415047:	test   DWORD PTR [edi+eiz*1],eax
  41504a:	retf   
  41504b:	mov    eax,0xe66fb490
  415050:	jb     0x415056
  415052:	fist   DWORD PTR [esi-0x1c105e28]
  415058:	outs   dx,BYTE PTR cs:[esi]
  41505a:	mov    esi,0x924d2430
  41505f:	add    ah,BYTE PTR [ebx]
  415061:	popa   
  415062:	(bad)  [esi-0x54]
  415065:	cmp    eax,0x9db2bd80
  41506a:	cmc    
  41506b:	fld    DWORD PTR [edi]
  41506d:	push   ebp
  41506e:	iret   
  41506f:	int3   
  415070:	mov    ds:0xadc3bf22,al
  415075:	or     esi,esi
  415077:	add    BYTE PTR es:[bx+si+0x4ed3],ch
  41507d:	loopne 0x415066
  41507f:	loope  0x4150ec
  415081:	mov    bl,0x78
  415083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415085:	call   0x8a4627d9
  41508a:	add    esi,DWORD PTR [edx-0x45]
  41508d:	outs   dx,BYTE PTR ds:[esi]
  41508e:	icebp  
  41508f:	(bad)  
  415090:	pop    eax
  415091:	pop    esp
  415092:	test   al,0x9b
  415094:	pop    ebx
  415095:	jmp    0xf5d1:0x2cba318f
  41509c:	(bad)  
  41509d:	sbb    DWORD PTR [ebx-0x7c868600],ebp
  4150a3:	mov    eax,ds:0x53d327a2
  4150a8:	mov    ds:0x67ba73a1,eax
  4150ad:	xchg   DWORD PTR [ecx],eax
  4150af:	xchg   ebx,eax
  4150b0:	out    0xbe,al
  4150b2:	mov    ds:0x4c3d232b,al
  4150b7:	stc    
  4150b8:	fld    DWORD PTR [esi+0x7e]
  4150bb:	shl    BYTE PTR [edi-0x52],cl
  4150be:	test   ch,al
  4150c0:	leave  
  4150c1:	sub    DWORD PTR [edx-0x3cf892f],edx
  4150c7:	sub    BYTE PTR [ebx+0x5ba8a885],0x54
  4150ce:	jnp    0x4150aa
  4150d0:	mov    ecx,0xa3e031ad
  4150d5:	call   0xb3d0:0x384a0ab
  4150dc:	mov    ch,0x62
  4150de:	inc    edx
  4150df:	mul    BYTE PTR [ebp-0x1ce649e]
  4150e5:	je     0x41513e
  4150e7:	pop    es
  4150e8:	scas   eax,DWORD PTR es:[edi]
  4150e9:	xchg   DWORD PTR [ebx+0x2502fad7],edx
  4150ef:	retf   
  4150f0:	call   0xda2:0x97ce1354
  4150f7:	loope  0x4150b5
  4150f9:	jge    0x41513e
  4150fb:	jnp    0x4150c9
  4150fd:	or     al,0xa4
  4150ff:	lds    eax,FWORD PTR [ebx]
  415101:	(bad)
  415104:	mov    dh,0xb0
  415106:	mov    dh,0x4e
  415108:	dec    edx
  415109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41510a:	repnz xchg ebp,eax
  41510c:	sti    
  41510d:	push   ss
  41510e:	jg     0x415120
  415110:	outs   dx,DWORD PTR ds:[esi]
  415111:	int    0xaa
  415113:	push   0x3bb2a6a8
  415118:	test   al,0x80
  41511a:	and    dh,0x4c
  41511d:	int3   
  41511e:	sub    al,bl
  415120:	call   0x7e8d:0xeddd180d
  415127:	mov    eax,cs
  415129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41512a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41512b:	fist   DWORD PTR ds:0x3a999466
  415131:	dec    edi
  415132:	iret   
  415133:	jmp    0x870ad7f2
  415138:	cld    
  415139:	xor    eax,0x678c2f55
  41513e:	push   edi
  41513f:	inc    ecx
  415140:	jecxz  0x415173
  415142:	pop    edx
  415143:	mov    BYTE PTR [ebp-0xec4d70d],dl
  415149:	xor    BYTE PTR [ecx],bh
  41514b:	xor    BYTE PTR [ebp+0x349b5e3a],cl
  415151:	sbb    al,0xa3
  415153:	add    BYTE PTR ds:0x6bb2626d,ah
  415159:	jmp    0x967f:0x7489fdfa
  415160:	or     eax,0x830befdc
  415165:	in     eax,0xc0
  415167:	or     BYTE PTR [ebp+0x18],cl
  41516a:	(bad)  
  41516b:	push   ecx
  41516c:	lods   al,BYTE PTR ds:[esi]
  41516d:	and    DWORD PTR [esi+eiz*2],edi
  415170:	shr    BYTE PTR [esi+0x45899b71],1
  415176:	push   es
  415177:	xchg   ebp,eax
  415178:	int    0xb9
  41517a:	xchg   esi,eax
  41517b:	rol    ebp,1
  41517d:	test   eax,0x5e76dcc3
  415182:	std    
  415183:	scas   eax,DWORD PTR es:[edi]
  415184:	scas   eax,DWORD PTR es:[edi]
  415185:	dec    ebp
  415186:	inc    esp
  415187:	in     eax,dx
  415188:	rcr    DWORD PTR [ebp-0xb8b0176],cl
  41518e:	jg     0x415174
  415190:	mov    ebx,0x491346bb
  415195:	cmp    al,0x8
  415197:	shl    DWORD PTR [ebp-0x5b],1
  41519a:	mov    ds:0xe0bbb1be,al
  41519f:	mov    dl,0xd5
  4151a1:	mov    al,0x73
  4151a3:	inc    BYTE PTR [edi+ecx*2-0x50]
  4151a7:	sbb    al,BYTE PTR [esi]
  4151a9:	mov    ebp,0x31fa3206
  4151ae:	ss mov edx,0xb3e2f4dc
  4151b4:	inc    ecx
  4151b5:	loopne 0x4151d9
  4151b7:	sub    BYTE PTR [esp+edi*2+0x6887bace],bh
  4151be:	jnp    0x415195
  4151c0:	inc    ecx
  4151c1:	mov    edx,0x70d1ba06
  4151c6:	and    ebp,DWORD PTR [esi+eax*2+0x4f]
  4151ca:	mov    dh,0x26
  4151cc:	jmp    0x33c1:0x61c7313
  4151d3:	xchg   edi,eax
  4151d4:	mov    bh,0x1c
  4151d6:	sub    esp,DWORD PTR [esi-0x70]
  4151d9:	(bad)  
  4151da:	stos   BYTE PTR es:[edi],al
  4151db:	hlt    
  4151dc:	add    DWORD PTR [eax],0x7e27bb5e
  4151e2:	out    0x7e,al
  4151e4:	and    BYTE PTR [ebp+eiz*1+0x5f],dh
  4151e8:	sti    
  4151e9:	add    BYTE PTR [ebx+0x34],dl
  4151ec:	rcr    BYTE PTR fs:[edi-0x2e],cl
  4151f0:	jae    0x415263
  4151f2:	lock mov edi,0x1176e786
  4151f8:	clc    
  4151f9:	add    eax,0x74c5614c
  4151fe:	mov    BYTE PTR [edi],ah
  415200:	cmp    eax,0x21901a79
  415205:	xor    eax,0x8f509e35
  41520a:	icebp  
  41520b:	mov    ebp,0x43c77920
  415210:	in     eax,dx
  415211:	or     al,0xe4
  415213:	cmp    BYTE PTR [edi+0x2343a94f],0x55
  41521a:	les    edx,FWORD PTR [eax+0x380825db]
  415220:	sti    
  415221:	cwde   
  415222:	xchg   ecx,eax
  415223:	mov    bh,BYTE PTR [ecx+0x40]
  415226:	fild   WORD PTR [esi+0x7b2181eb]
  41522c:	stos   DWORD PTR es:[edi],eax
  41522d:	lods   al,BYTE PTR ds:[esi]
  41522e:	imul   eax,DWORD PTR [edi-0x20],0x73
  415232:	jns    0x4152a6
  415234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415235:	mov    edx,0x928ba336
  41523b:	leave  
  41523c:	addr16 xor al,0x7
  41523f:	int3   
  415240:	jns    0x41526a
  415242:	mov    ebp,0xb8467cde
  415247:	xchg   esp,eax
  415248:	out    dx,al
  415249:	(bad)  
  41524a:	sbb    eax,0x14
  41524d:	mov    ds:0x49443188,eax
  415252:	rcl    eax,1
  415254:	sub    DWORD PTR [ebx-0x75],esi
  415257:	es jecxz 0x415286
  41525a:	pop    edx
  41525b:	xor    DWORD PTR [ebx],ebp
  41525d:	xor    DWORD PTR [eax-0x12f41e1],esp
  415263:	stc    
  415264:	aad    0x8d
  415266:	jmp    0x41522b
  415268:	mov    ds:0xe769a04a,al
  41526d:	push   ss
  41526e:	dec    edx
  41526f:	loop   0x4151fe
  415271:	sub    BYTE PTR ds:0xed078da,ch
  415277:	(bad)  
  415278:	call   FWORD PTR [ebp+0x62b01d5e]
  41527e:	add    ebp,edi
  415280:	cmp    edi,DWORD PTR [ecx]
  415282:	pop    ss
  415283:	call   0x5c150873
  415288:	xor    dl,BYTE PTR [ebx+0x20]
  41528b:	bound  eax,QWORD PTR [eax+0x17]
  41528e:	scas   eax,DWORD PTR es:[edi]
  41528f:	jg     0x4152e8
  415291:	ss push 0x3ab12333
  415297:	cld    
  415298:	sbb    eax,0xa686e181
  41529d:	mov    dh,0xdb
  41529f:	sbb    al,0x84
  4152a1:	fisubr DWORD PTR [ecx]
  4152a3:	push   0xbdcbbc32
  4152a8:	xor    al,0x3e
  4152aa:	and    BYTE PTR fs:[ebx+0x6d],al
  4152ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152af:	loopne 0x4152f8
  4152b1:	mov    bl,0xad
  4152b3:	aaa    
  4152b4:	dec    esi
  4152b5:	(bad)  
  4152b6:	jle    0x4152fc
  4152b8:	adc    eax,0x15bca2a0
  4152bd:	in     eax,dx
  4152be:	inc    edi
  4152bf:	aad    0x42
  4152c1:	fdivr  st(6),st
  4152c3:	mov    ebp,0x7d14e70a
  4152c8:	repz cmp BYTE PTR [ebx-0x70],bh
  4152cc:	xchg   esi,eax
  4152cd:	adc    al,0xa4
  4152cf:	dec    edx
  4152d0:	sbb    dh,BYTE PTR [eax-0xc]
  4152d3:	call   0xe66a:0x5b6f6583
  4152da:	jmp    0xe1ee:0xa1d453c9
  4152e1:	xchg   BYTE PTR [ebx-0x704f4020],dh
  4152e7:	mov    ah,0xe9
  4152e9:	jb     0x415297
  4152eb:	jg     0x41531e
  4152ed:	jg     0x41527d
  4152ef:	adc    esp,DWORD PTR [esi*4-0x81013d]
  4152f6:	xor    ebp,DWORD PTR [esi]
  4152f8:	sub    dl,cl
  4152fa:	jae    0x4152d1
  4152fc:	data16 mov BYTE PTR [eax-0x78aab17f],ch
  415303:	mov    ebp,DWORD PTR [edx]
  415305:	(bad)  
  415306:	repnz inc eax
  415308:	rol    DWORD PTR [edi],1
  41530a:	ss mov esp,0x5d883db7
  415310:	std    
  415311:	scas   eax,DWORD PTR es:[edi]
  415312:	jne    0x415361
  415314:	mov    DWORD PTR [esi-0x57b6029c],esp
  41531a:	aad    0xd7
  41531c:	push   ebx
  41531d:	mov    BYTE PTR [ebp+0x38],bh
  415320:	(bad)  
  415321:	std    
  415322:	fwait
  415323:	push   eax
  415324:	sub    DWORD PTR [ebx-0x13],0xffffffc2
  415328:	adc    DWORD PTR [eax+ecx*2+0x642d2c60],ecx
  41532f:	fs cli 
  415331:	lahf   
  415332:	cwde   
  415333:	call   DWORD PTR [ecx+0x78]
  415336:	push   ebx
  415337:	dec    DWORD PTR [edx]
  415339:	xor    DWORD PTR [ecx+0x2ca15ca4],ecx
  41533f:	pushf  
  415340:	test   BYTE PTR [ebx-0x7c06ee95],cl
  415346:	(bad)  
  415347:	or     ecx,ebp
  415349:	xchg   edx,eax
  41534a:	mov    al,0xec
  41534c:	loop   0x41533e
  41534e:	mov    edi,0x82fbb718
  415353:	push   DWORD PTR [edx+0x36efcb39]
  415359:	jmp    0xc6ef3bfb
  41535e:	or     ecx,edi
  415360:	shl    DWORD PTR [ecx-0x3a],cl
  415363:	fst    QWORD PTR [edi+ecx*4-0x173d0764]
  41536a:	aam    0x3
  41536c:	inc    edi
  41536d:	jmp    0x68f49524
  415372:	mov    esi,0xd64b7697
  415377:	dec    ebp
  415378:	mov    edx,0xab9bd642
  41537d:	pop    eax
  41537e:	jne    0x4153f8
  415380:	es adc al,0xe0
  415384:	sub    eax,0x8375727f
  415389:	xchg   esi,eax
  41538a:	push   ebp
  41538b:	pop    ss
  41538c:	les    ecx,FWORD PTR [ecx+0x2a4bb4fd]
  415392:	inc    esi
  415393:	out    dx,al
  415394:	sub    esi,DWORD PTR [edi+0x56650f5]
  41539a:	in     al,dx
  41539b:	and    DWORD PTR ss:[edx-0x43],0x526be29f
  4153a3:	add    ebx,DWORD PTR [edx-0x18]
  4153a6:	ret    0x3088
  4153a9:	fsub   DWORD PTR [eax+0x23]
  4153ac:	jbe    0x415422
  4153ae:	cdq    
  4153af:	push   0xb23c6836
  4153b4:	xchg   ebp,esi
  4153b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153b7:	mov    dh,0x2d
  4153b9:	(bad)  
  4153ba:	and    BYTE PTR [ecx],ah
  4153bc:	scas   al,BYTE PTR es:[edi]
  4153bd:	fist   DWORD PTR [esi]
  4153bf:	jbe    0x4153db
  4153c1:	mov    ebp,0x79a4090c
  4153c6:	(bad)  
  4153c7:	xchg   edx,eax
  4153c8:	push   cs
  4153c9:	fsub   st,st(7)
  4153cb:	sbb    BYTE PTR [ecx],bl
  4153cd:	leave  
  4153ce:	addr16 das 
  4153d0:	bound  edx,QWORD PTR [ebx-0x1476b8a8]
  4153d6:	(bad)  
  4153d7:	adc    esp,ecx
  4153d9:	sti    
  4153da:	mov    es,WORD PTR [ebp-0x6d]
  4153dd:	pop    es
  4153de:	imul   eax,eax,0xffffffcd
  4153e1:	stc    
  4153e2:	fisttp DWORD PTR [ebp+0x6]
  4153e5:	iret   
  4153e6:	push   edi
  4153e7:	loope  0x4153ec
  4153e9:	(bad)  
  4153ea:	xchg   edi,eax
  4153eb:	inc    esp
  4153ec:	test   esi,esi
  4153ee:	add    al,BYTE PTR [edi]
  4153f0:	push   ebp
  4153f1:	aas    
  4153f2:	cmp    DWORD PTR [si],esp
  4153f5:	xor    bl,BYTE PTR [edx-0x66b98367]
  4153fb:	or     eax,0x3cdecedb
  415400:	fwait
  415401:	fwait
  415402:	loopne 0x41540f
  415404:	pop    es
  415405:	bnd call 0x70cf0752
  41540b:	sbb    dh,al
  41540d:	popa   
  41540e:	dec    ecx
  41540f:	fisubr DWORD PTR [esp+edi*8]
  415412:	cmp    al,0x81
  415414:	push   ebp
  415415:	push   0xffffff92
  415417:	push   0xffffffd6
  415419:	sahf   
  41541a:	in     al,0x35
  41541c:	pop    eax
  41541d:	pop    ds
  41541e:	shl    BYTE PTR [ebx],1
  415420:	clc    
  415421:	scas   al,BYTE PTR es:[edi]
  415422:	dec    ebp
  415423:	mov    ds:0xbcbac5ee,eax
  415428:	(bad)
  41542c:	int    0x41
  41542e:	adc    bh,ah
  415430:	xchg   edx,eax
  415431:	push   ebp
  415432:	or     al,BYTE PTR [ecx]
  415434:	call   0x8569:0xa5b946aa
  41543b:	pusha  
  41543c:	inc    ecx
  41543d:	loop   0x415465
  41543f:	mov    esp,0x9f9422f0
  415444:	fs int3 
  415446:	outs   dx,DWORD PTR ds:[esi]
  415447:	inc    eax
  415448:	test   eax,0x9dd67283
  41544d:	repz daa 
  41544f:	out    0x5e,al
  415451:	test   BYTE PTR [ebp-0x6d],0x14
  415455:	jmp    0x2ba9:0x1b264f00
  41545c:	xor    eax,0xeffa7a1d
  415461:	out    0xf0,al
  415463:	inc    esp
  415464:	sub    al,0x67
  415466:	jmp    0xe728cc30
  41546b:	jg     0x4154cf
  41546d:	shr    DWORD PTR [edi+ebp*2],1
  415470:	jnp    0x415457
  415472:	loope  0x41542a
  415474:	xchg   ebp,eax
  415475:	cmp    ebx,ecx
  415477:	fsub   QWORD PTR ds:[eax+0x2]
  41547b:	fsub   DWORD PTR [esp+ebp*4-0x72f852a]
  415482:	pushf  
  415483:	lods   al,BYTE PTR ds:[esi]
  415484:	xchg   DWORD PTR [edx],ebp
  415486:	mov    ds:0x5822a55f,eax
  41548b:	je     0x415447
  41548d:	sub    eax,0xf483f338
  415492:	ins    BYTE PTR es:[edi],dx
  415493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415494:	pop    edi
  415495:	sub    cl,dh
  415497:	or     DWORD PTR [ecx],ebp
  415499:	lods   eax,DWORD PTR ds:[esi]
  41549a:	mov    al,ds:0x1f2d47e
  41549f:	lahf   
  4154a0:	shl    DWORD PTR gs:[edi],cl
  4154a3:	out    0x7b,eax
  4154a5:	fisubr WORD PTR [ecx-0x34]
  4154a8:	cli    
  4154a9:	(bad)  
  4154aa:	aaa    
  4154ab:	pop    ecx
  4154ac:	add    eax,DWORD PTR ds:0xee9e12de
  4154b2:	push   dx
  4154b4:	mov    ch,0x61
  4154b6:	xchg   ecx,eax
  4154b7:	sti    
  4154b8:	push   eax
  4154b9:	adc    esi,0x4316546
  4154bf:	adc    bh,al
  4154c1:	fdivp  st(1),st
  4154c3:	lock inc esp
  4154c5:	fwait
  4154c6:	sub    ecx,DWORD PTR [edi+0x5cfde85c]
  4154cc:	adc    BYTE PTR ds:0xf4eddc0a,dh
  4154d2:	out    0x38,eax
  4154d4:	mov    al,0x64
  4154d6:	mov    dh,0xbc
  4154d8:	xchg   edx,eax
  4154d9:	das    
  4154da:	dec    esp
  4154db:	mov    edi,0xc7e30159
  4154e0:	cmp    bl,0x3e
  4154e3:	test   DWORD PTR [ebx-0x3d923a40],edx
  4154e9:	cmp    eax,0xf66bd8cb
  4154ee:	(bad)  
  4154ef:	lock and DWORD PTR [edi+0xb6b6441],edx
  4154f6:	outs   dx,BYTE PTR ds:[esi]
  4154f7:	lods   al,BYTE PTR ds:[esi]
  4154f8:	and    ah,ch
  4154fa:	sub    dl,BYTE PTR [edx]
  4154fc:	mov    al,ds:0x2826c3c9
  415501:	pop    ebx
  415502:	cmp    ah,cl
  415504:	ins    DWORD PTR es:[edi],dx
  415505:	jns    0x4154f2
  415507:	mov    ah,0xc4
  415509:	scas   al,BYTE PTR es:[edi]
  41550a:	sbb    cl,BYTE PTR [ecx-0x10c53eb0]
  415510:	dec    esi
  415511:	fwait
  415512:	clc    
  415513:	jle    0x4154db
  415515:	and    ecx,DWORD PTR [edx]
  415517:	mov    DWORD PTR [esi+0x70dbd557],esp
  41551d:	data16 fist DWORD PTR [edx]
  415520:	test   al,0x56
  415522:	jmp    FWORD PTR [ecx+0x68]
  415525:	xchg   edx,eax
  415526:	jmp    0xb847e71a
  41552b:	mov    ebx,DWORD PTR [ecx]
  41552d:	out    dx,al
  41552e:	adc    al,0x4b
  415530:	adc    al,0xd3
  415532:	repnz adc eax,0x2327d45e
  415538:	rol    BYTE PTR [esi+0x36],cl
  41553b:	pop    ds
  41553c:	cmp    bl,BYTE PTR [ecx+0x587caa29]
  415542:	aas    
  415543:	dec    dx
  415545:	(bad)  
  415546:	in     eax,0x10
  415548:	mov    esp,0x7b5184d7
  41554d:	mov    ah,BYTE PTR [eax+0x2ebc1923]
  415553:	pop    esi
  415554:	adc    ah,dl
  415556:	jae    0x415503
  415558:	aad    0x93
  41555a:	ret    
  41555b:	xor    al,0x1d
  41555d:	pop    ebp
  41555e:	xchg   ebp,eax
  41555f:	xor    cl,bl
  415561:	(bad)  
  415563:	adc    ebp,DWORD PTR [esi-0x70956500]
  415569:	sbb    al,0xd1
  41556b:	inc    ecx
  41556c:	sbb    BYTE PTR [esi],al
  41556e:	daa    
  41556f:	mov    ds,WORD PTR [eax+0x50]
  415572:	jge    0x415579
  415574:	bound  ebp,QWORD PTR [ebp-0x19dfc5c]
  41557a:	pushf  
  41557b:	lahf   
  41557c:	push   DWORD PTR [ebx]
  41557e:	in     eax,0xac
  415580:	cmp    ah,al
  415582:	out    dx,al
  415583:	xchg   BYTE PTR ds:[ebx],bl
  415586:	int    0xe3
  415588:	test   al,0xa5
  41558a:	add    cl,BYTE PTR [edi+0x3]
  41558d:	xchg   edx,eax
  41558e:	and    ebp,ecx
  415590:	aam    0xb2
  415592:	push   ecx
  415593:	xor    al,0x38
  415595:	xor    eax,DWORD PTR [ecx]
  415597:	ss stos BYTE PTR es:[edi],al
  415599:	stos   DWORD PTR es:[edi],eax
  41559a:	cdq    
  41559b:	adc    al,0xf1
  41559d:	jp     0x4155d8
  41559f:	add    dh,al
  4155a1:	and    ecx,DWORD PTR [edi]
  4155a3:	std    
  4155a4:	sub    BYTE PTR [ecx+0x6b6d5dea],bh
  4155aa:	imul   ecx,DWORD PTR [edi-0x500fe340],0xffffffae
  4155b1:	(bad)  
  4155b2:	(bad)  [ecx+0x4f]
  4155b5:	ss scas eax,DWORD PTR es:[edi]
  4155b7:	sbb    al,0x9b
  4155b9:	mov    DWORD PTR [ebx+0x45],eax
  4155bc:	in     eax,0x97
  4155be:	cli    
  4155bf:	test   BYTE PTR [ebx-0x5e],al
  4155c2:	inc    esi
  4155c3:	xchg   BYTE PTR [esi],bl
  4155c5:	mov    bh,0xce
  4155c7:	out    dx,al
  4155c8:	inc    esp
  4155c9:	inc    esi
  4155ca:	fxch   st(2)
  4155cc:	jmp    0x7643bfd0
  4155d1:	xchg   edx,eax
  4155d2:	stc    
  4155d3:	cmc    
  4155d4:	cmp    DWORD PTR [esi],ebp
  4155d6:	adc    eax,0xd92b3bed
  4155db:	je     0x4155ee
  4155dd:	icebp  
  4155de:	adc    al,BYTE PTR [edi+0x40]
  4155e1:	pusha  
  4155e2:	(bad)  
  4155e3:	xchg   esi,eax
  4155e4:	jecxz  0x41559f
  4155e6:	call   0xdf7e:0xbd4ba35b
  4155ed:	icebp  
  4155ee:	or     DWORD PTR [ecx+0x2e93cc59],edx
  4155f4:	test   edi,esp
  4155f6:	and    BYTE PTR [esi-0x18f412a9],bh
  4155fc:	sub    DWORD PTR [ebx],ecx
  4155fe:	or     DWORD PTR [esi-0x73],esi
  415601:	popa   
  415602:	call   FWORD PTR [eax+edi*2+0x6d]
  415606:	enter  0xa7c7,0xb5
  41560a:	push   ebp
  41560b:	into   
  41560c:	mov    edx,DWORD PTR [esi]
  41560e:	imul   eax,DWORD PTR [ecx+0x79dd42dc],0x7
  415615:	mov    bh,0xb8
  415617:	pop    edx
  415618:	retf   0x1857
  41561b:	loop   0x4155af
  41561d:	and    al,dh
  41561f:	push   edi
  415620:	out    0xd4,eax
  415622:	leave  
  415623:	bound  ecx,QWORD PTR [ebx+0x617a6374]
  415629:	in     al,dx
  41562a:	add    BYTE PTR [esi+0x1967989a],bl
  415630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415631:	cld    
  415632:	sub    ecx,0x78
  415635:	cs pop es
  415637:	iret   
  415638:	in     al,0x37
  41563a:	test   eax,0x655f4f95
  41563f:	fld    QWORD PTR [edi+0x2]
  415642:	xor    al,BYTE PTR [esi-0x71]
  415645:	jmp    0x41566d
  415647:	int3   
  415648:	in     eax,dx
  415649:	std    
  41564a:	test   BYTE PTR [esi+0x20],ah
  41564d:	stos   BYTE PTR es:[edi],al
  41564e:	loopne 0x415605
  415650:	mov    bh,cl
  415652:	mov    ebp,0x11ea4420
  415657:	dec    edi
  415658:	repz xchg ebp,edi
  41565b:	mov    dl,0x44
  41565d:	cmp    al,0x17
  41565f:	pop    esi
  415660:	and    al,0xa4
  415662:	push   esi
  415663:	pop    ebp
  415664:	adc    al,0xb8
  415666:	repz xor DWORD PTR [ebp-0x5f46a577],esp
  41566d:	test   al,0x7b
  41566f:	outs   dx,DWORD PTR ds:[esi]
  415670:	add    DWORD PTR [edx+0x3a],ebp
  415673:	in     eax,dx
  415674:	mov    ecx,?
  415676:	popf   
  415677:	pop    ds
  415678:	dec    ecx
  415679:	adc    dl,BYTE PTR [ebp-0xe5c6822]
  41567f:	pop    es
  415680:	popf   
  415681:	sbb    BYTE PTR [ebx],dh
  415683:	pop    ds
  415684:	mov    dl,0xc8
  415686:	adc    al,0x4d
  415688:	imul   edx,DWORD PTR [esi+0x6a],0xbc0bac75
  41568f:	(bad)  
  415690:	fwait
  415691:	adc    esi,DWORD PTR [ecx+edi*4+0x53]
  415695:	or     bh,al
  415697:	dec    edi
  415698:	or     eax,0x13c07a41
  41569d:	in     al,dx
  41569e:	inc    edx
  41569f:	or     BYTE PTR [edi-0x38b90693],bl
  4156a5:	and    BYTE PTR [ecx+esi*1+0x25043832],0x94
  4156ad:	adc    esp,esi
  4156af:	data16 hlt 
  4156b1:	adc    BYTE PTR [esi],0x9a
  4156b4:	sbb    bh,cl
  4156b6:	mov    esi,0xb5365fd3
  4156bb:	adc    BYTE PTR [esi-0x11],bl
  4156be:	outs   dx,BYTE PTR ds:[esi]
  4156bf:	jge    0x4156a3
  4156c1:	lods   eax,DWORD PTR ds:[esi]
  4156c2:	mov    eax,ebx
  4156c4:	aam    0xb8
  4156c6:	xor    al,0x53
  4156c8:	scas   eax,DWORD PTR es:[edi]
  4156c9:	cli    
  4156ca:	fiadd  DWORD PTR [ecx-0x32acfd6b]
  4156d0:	repz sub bh,dl
  4156d3:	sete   BYTE PTR [ebp-0x3d]
  4156d7:	cmp    al,0x79
  4156da:	add    DWORD PTR [ecx-0x3ffd1a6e],0x37377e82
  4156e4:	test   BYTE PTR [ebx],ch
  4156e6:	pop    esp
  4156e7:	or     dl,BYTE PTR [ebx+esi*2-0xdf2aebc]
  4156ee:	xchg   DWORD PTR [ebx-0x31],ebx
  4156f1:	jmp    0x41572d
  4156f3:	pop    esp
  4156f4:	test   eax,0xbec6c878
  4156f9:	gs xchg edi,eax
  4156fb:	pop    ecx
  4156fc:	es jmp 0xaafb:0xbce2d835
  415704:	popa   
  415705:	dec    ebp
  415706:	xor    ah,BYTE PTR ds:0x1b167681
  41570c:	mov    al,0xe4
  41570e:	xchg   ebp,eax
  41570f:	cmp    DWORD PTR [ebx+ecx*4],0x5351b0fb
  415716:	leave  
  415717:	xor    edx,DWORD PTR [ebx]
  415719:	ret    0x4de6
  41571c:	adc    edi,DWORD PTR [ebp+0x51]
  41571f:	add    dh,BYTE PTR [ebp-0x73]
  415722:	mov    dh,0xee
  415724:	icebp  
  415725:	or     al,0x2b
  415727:	loopne 0x415787
  415729:	jbe    0x41571c
  41572b:	mov    cl,0xca
  41572d:	and    ebx,DWORD PTR [ebx-0x638aca26]
  415733:	bound  esp,QWORD PTR [ebx+0x23918128]
  415739:	pop    eax
  41573a:	or     DWORD PTR [ebx-0x37a98f39],eax
  415740:	sti    
  415741:	(bad)  
  415742:	jbe    0x415763
  415744:	xlat   BYTE PTR ds:[ebx]
  415745:	cwde   
  415746:	mov    ebx,0xa6c042ec
  41574b:	sti    
  41574c:	sar    BYTE PTR [ecx-0x51],1
  41574f:	inc    esi
  415750:	xchg   esi,eax
  415751:	neg    BYTE PTR [edi]
  415753:	mov    edi,edi
  415755:	mov    al,0x8c
  415757:	xchg   edi,eax
  415758:	inc    edx
  415759:	stos   BYTE PTR es:[edi],al
  41575a:	pop    ecx
  41575b:	fcomp  QWORD PTR [edi-0x2139f87b]
  415761:	and    al,0x86
  415763:	int3   
  415764:	ret    
  415765:	mov    bh,0x26
  415767:	jmp    0x47b05739
  41576c:	repnz push ebx
  41576e:	retf   
  41576f:	scas   eax,DWORD PTR es:[edi]
  415770:	jmp    0x415721
  415772:	xchg   BYTE PTR [ebp+ebp*1-0x6607b8b2],bh
  415779:	or     BYTE PTR [edx-0x33],bl
  41577c:	add    ebx,DWORD PTR [eax]
  41577e:	adc    al,0xb8
  415780:	mov    ds,ebp
  415782:	in     al,0xb7
  415784:	sbb    esi,DWORD PTR [eax+0x3f6fd7f2]
  41578a:	inc    esi
  41578b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41578c:	ja     0x4157d9
  41578e:	rcl    DWORD PTR [edx],0xf1
  415791:	inc    ebx
  415792:	loope  0x415746
  415794:	push   cs
  415795:	xor    BYTE PTR [esi+0x1b2e9f17],ah
  41579b:	xchg   ebx,eax
  41579c:	jg     0x4157b4
  41579e:	pop    ecx
  41579f:	shl    DWORD PTR [esi+0x55],cl
  4157a2:	rol    ebp,cl
  4157a4:	xor    ebx,DWORD PTR [edx+0x6ac99968]
  4157aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157ab:	or     ch,BYTE PTR [esi]
  4157ad:	cs mov edi,0xfe2ffff9
  4157b3:	push   ebx
  4157b4:	push   esi
  4157b5:	je     0x415812
  4157b7:	(bad)  
  4157b8:	loop   0x41580b
  4157ba:	jmp    0x415837
  4157bc:	dec    edx
  4157bd:	dec    ebp
  4157be:	in     al,0x6
  4157c0:	xchg   ebx,esi
  4157c2:	cmp    eax,DWORD PTR [edi]
  4157c4:	pop    esp
  4157c5:	outs   dx,DWORD PTR ds:[esi]
  4157c6:	and    ebx,DWORD PTR [edi-0x14]
  4157c9:	punpcklbw mm0,mm2
  4157cc:	mov    dl,BYTE PTR [esi+0x51135fe1]
  4157d2:	imul   edi,DWORD PTR ds:0x3dde5920,0xdb3e6429
  4157dc:	jb     0x415839
  4157de:	fdiv   DWORD PTR [edx+ecx*4-0x33fb1903]
  4157e5:	(bad)  
  4157e6:	sahf   
  4157e7:	mov    DWORD PTR [esi],0xb6d3ae4a
  4157ed:	neg    ch
  4157ef:	popa   
  4157f0:	jge    0x415841
  4157f2:	hlt    
  4157f3:	std    
  4157f4:	sbb    DWORD PTR [eax-0x534479f6],eax
  4157fa:	jp     0x41582d
  4157fc:	adc    DWORD PTR [ecx-0x1f0c909e],eax
  415802:	aad    0xd4
  415804:	mov    al,ds:0x1cb18492
  415809:	mov    edi,0xd7bdb025
  41580e:	sbb    BYTE PTR [eax],bl
  415810:	sbb    BYTE PTR [ebx-0x5],ah
  415813:	dec    edx
  415814:	out    dx,al
  415815:	scas   eax,DWORD PTR es:[edi]
  415816:	jb     0x415813
  415818:	das    
  415819:	addr16 jmp 0x4157ed
  41581c:	inc    ebp
  41581d:	xchg   edx,eax
  41581e:	iret   
  41581f:	cmp    DWORD PTR [ecx-0x1f],esp
  415822:	sub    BYTE PTR [esi+0x4],0x3d
  415826:	aas    
  415827:	lock mov DWORD PTR [edi-0x3fafd9ee],esi
  41582e:	pop    ecx
  41582f:	es jecxz 0x415814
  415832:	sahf   
  415833:	mov    ah,0x3
  415835:	or     al,ah
  415837:	mov    esi,0xdaa1ab5a
  41583c:	fistp  DWORD PTR [ebx-0x2d]
  41583f:	xchg   edi,eax
  415840:	mov    esi,0xa777d02c
  415845:	sbb    edi,DWORD PTR [eax]
  415847:	rcr    DWORD PTR [edi-0x39f79195],cl
  41584d:	out    0x61,eax
  41584f:	nop
  415850:	sbb    ah,BYTE PTR [eax-0x4a]
  415853:	stc    
  415854:	cmp    al,0x55
  415856:	mov    esp,0x737cb22e
  41585b:	stos   DWORD PTR es:[edi],eax
  41585c:	out    dx,eax
  41585d:	cld    
  41585e:	les    edi,FWORD PTR [ecx+0x8659a35]
  415864:	cs mov ebx,0xf25a40e7
  41586a:	imul   eax
  41586c:	mov    al,0xa5
  41586e:	push   ebx
  41586f:	mov    al,0x26
  415871:	mov    cl,0x25
  415873:	call   0x4114:0xf949408b
  41587a:	jae    0x4157fd
  41587c:	inc    ebx
  41587d:	shl    DWORD PTR [eax-0x36],cl
  415880:	in     eax,dx
  415881:	inc    eax
  415882:	and    ebx,DWORD PTR [ecx-0x31]
  415885:	(bad)  
  415887:	(bad)  
  415888:	cmp    eax,0x13f1546
  41588d:	loop   0x41585b
  41588f:	mov    eax,0xe679267
  415894:	xor    ebp,DWORD PTR [ecx+0x2d]
  415897:	fidiv  DWORD PTR [ecx]
  415899:	cwde   
  41589a:	dec    ebx
  41589b:	mov    dl,BYTE PTR [eax+0x3026feaa]
  4158a1:	fld    DWORD PTR [edx+0x3b]
  4158a4:	or     DWORD PTR [edx+ecx*8],eax
  4158a7:	or     eax,0x742c09c2
  4158ac:	gs push ebx
  4158ae:	dec    ecx
  4158af:	xor    ebx,DWORD PTR [eax]
  4158b1:	push   ds
  4158b2:	sti    
  4158b3:	jle    0x41587f
  4158b5:	ret    0xc82b
  4158b8:	fs adc al,0x2c
  4158bb:	fisub  WORD PTR [ebp+0xbfe8e84]
  4158c1:	and    BYTE PTR [edx],al
  4158c3:	ret    0xd2df
  4158c6:	sub    eax,0xc0f267b2
  4158cb:	fs ja  0x4158ad
  4158ce:	(bad)  
  4158cf:	sub    BYTE PTR [eax],cl
  4158d1:	or     al,0xe2
  4158d3:	icebp  
  4158d4:	ja     0x4158b6
  4158d6:	and    ebx,esp
  4158d8:	imul   edi,ecx,0xa4741849
  4158de:	rcl    BYTE PTR [eax-0x8],0x13
  4158e2:	jl     0x4158c7
  4158e4:	icebp  
  4158e5:	in     al,0xf6
  4158e7:	out    0x11,al
  4158e9:	sbb    BYTE PTR [edi],ah
  4158eb:	stos   DWORD PTR es:[edi],eax
  4158ec:	mov    BYTE PTR es:[edi-0x67],0x77
  4158f1:	addr16 push ds
  4158f3:	pop    es
  4158f4:	outs   dx,BYTE PTR ds:[esi]
  4158f6:	repz in al,dx
  4158f8:	cwde   
  4158f9:	or     al,0xf4
  4158fb:	ret    
  4158fc:	nop    DWORD PTR [ebx+esi*1+0x68]
  415901:	scas   eax,DWORD PTR es:[edi]
  415902:	addr16 rol al,cl
  415905:	mov    ah,0x2f
  415907:	mov    ah,0x62
  415909:	pop    edi
  41590a:	inc    edx
  41590b:	daa    
  41590c:	jge    0x4158fa
  41590e:	loope  0x41594a
  415910:	sbb    ecx,ebx
  415912:	stc    
  415913:	fmul   QWORD PTR [ebp+esi*4-0x216db331]
  41591a:	and    bh,BYTE PTR [esi-0xa5d2771]
  415920:	je     0x415947
  415922:	cs dec esi
  415924:	mov    dh,0xf0
  415926:	imul   esi,DWORD PTR [ebx],0xa4e21686
  41592c:	jmp    0x32910129
  415931:	jmp    0x27e1:0x15e5a779
  415938:	test   eax,0xfbec41c9
  41593d:	push   0x2150044e
  415942:	pop    es
  415943:	rcl    ecx,0xf
  415946:	xchg   ecx,eax
  415947:	inc    eax
  415948:	adc    al,BYTE PTR [ecx-0x510f2623]
  41594e:	push   ebp
  41594f:	dec    ebx
  415950:	js     0x415943
  415952:	push   es
  415953:	fdivr  st(7),st
  415955:	and    BYTE PTR [edi+edi*1],bh
  415958:	mov    cl,0xd
  41595a:	sub    ch,cl
  41595c:	mov    dh,0x30
  41595e:	adc    al,0x32
  415960:	push   es
  415961:	add    eax,0x9a340351
  415966:	int    0xf8
  415968:	(bad)  
  415969:	sahf   
  41596a:	je     0x415956
  41596c:	cmp    al,0xa8
  41596e:	adc    DWORD PTR [esi-0xd],ebx
  415971:	inc    edx
  415972:	push   edi
  415973:	jmp    0xc6ff:0x92af1332
  41597a:	jmp    0x93091997
  41597f:	loop   0x4159fc
  415981:	mov    ds,WORD PTR [ebp-0x12]
  415984:	int3   
  415985:	retf   
  415986:	cmp    al,0x4c
  415988:	mov    ebx,0x365fc673
  41598d:	fidivr DWORD PTR [ebx+0x6ff780d0]
  415993:	icebp  
  415994:	cs cmp dh,al
  415997:	mov    ebp,0xb3dc8762
  41599c:	inc    ecx
  41599d:	js     0x4159a7
  41599f:	inc    ecx
  4159a0:	arpl   WORD PTR [ebp-0x7f3435b0],sp
  4159a6:	cmp    ah,BYTE PTR [edi+0x74]
  4159a9:	pop    ss
  4159aa:	pop    ebp
  4159ab:	ror    BYTE PTR [ecx+0x5],0xa2
  4159af:	sub    bl,dl
  4159b1:	mov    bl,0xab
  4159b3:	aad    0x6c
  4159b5:	cli    
  4159b6:	push   ds
  4159b7:	out    dx,eax
  4159b8:	mov    bl,BYTE PTR [esi+edi*2-0x38]
  4159bc:	sar    BYTE PTR [ebp+ebx*1-0x78],0x6c
  4159c1:	test   al,0xbe
  4159c3:	push   cs
  4159c4:	es jle 0x4159df
  4159c7:	or     DWORD PTR [edx],eax
  4159c9:	mov    es,WORD PTR [esi-0x28]
  4159cc:	ja     0x4159d8
  4159ce:	jno    0x4159da
  4159d0:	dec    ebx
  4159d1:	xchg   edi,eax
  4159d2:	mov    eax,ds:0x52fcfa6d
  4159d7:	cli    
  4159d8:	aaa    
  4159d9:	dec    eax
  4159da:	push   esp
  4159db:	dec    edx
  4159dc:	xchg   ah,bl
  4159de:	mov    esp,0xd538c91a
  4159e3:	pop    esi
  4159e4:	stos   DWORD PTR es:[edi],eax
  4159e5:	jecxz  0x4159c6
  4159e7:	call   0x9d05:0x5a73dea5
  4159ee:	jno    0x415a53
  4159f0:	sbb    ecx,DWORD PTR [ebx]
  4159f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159f3:	mov    dl,BYTE PTR [ecx]
  4159f5:	mov    ch,0x93
  4159f7:	add    edx,DWORD PTR [ebx+0x76]
  4159fa:	sub    eax,0x48ec68f
  4159ff:	jg     0x415a75
  415a01:	fnclex 
  415a03:	inc    edx
  415a04:	(bad)  
  415a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a06:	push   DWORD PTR [ecx]
  415a08:	sar    DWORD PTR [ebx+ecx*4-0x26],0xd2
  415a0d:	popf   
  415a0e:	pop    ss
  415a0f:	inc    esi
  415a10:	(bad)  
  415a11:	jae    0x4159b7
  415a13:	int    0x12
  415a15:	xor    DWORD PTR [ebx-0x1af8f6a7],eax
  415a1b:	in     al,dx
  415a1c:	xlat   BYTE PTR ds:[ebx]
  415a1d:	inc    esi
  415a1e:	mov    ebp,0x4185a059
  415a23:	mov    ebp,0x68c3de9d
  415a28:	xchg   edx,eax
  415a29:	jle    0x4159e7
  415a2b:	mov    WORD PTR [esi+0x376b1ad3],?
  415a31:	mov    eax,0x850b8876
  415a36:	or     DWORD PTR [esi-0x2319be0e],0x5e
  415a3d:	mov    WORD PTR [edi-0x46c30787],cs
  415a43:	push   0x46
  415a45:	dec    dl
  415a47:	jnp    0x415a9b
  415a49:	in     al,dx
  415a4a:	inc    esp
  415a4b:	sbb    DWORD PTR [edi-0x558e432],ebp
  415a51:	retf   0xaad0
  415a54:	sub    DWORD PTR [edx+ebp*2-0x3a2a2c5f],0xffffffc8
  415a5c:	std    
  415a5d:	enter  0x8ccf,0x6e
  415a61:	not    ecx
  415a63:	and    cl,ah
  415a65:	push   0xf
  415a67:	sbb    al,BYTE PTR [ebx]
  415a69:	jecxz  0x415a0e
  415a6b:	inc    esp
  415a6c:	push   0xbad7e7b3
  415a71:	xchg   esp,eax
  415a72:	or     bl,BYTE PTR [ecx+0x64a436b3]
  415a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a79:	or     edi,ecx
  415a7b:	mov    esp,DWORD PTR [ecx-0x41d0a6b7]
  415a81:	call   0x73596d9b
  415a86:	ins    BYTE PTR es:[edi],dx
  415a87:	mov    dh,0x1c
  415a89:	(bad)  
  415a8a:	fstp   st(5)
  415a8c:	jle    0x415afa
  415a8e:	inc    ebp
  415a8f:	(bad)  
  415a91:	cmp    al,0x7c
  415a93:	pusha  
  415a94:	mov    ah,0x54
  415a96:	mov    bh,0x68
  415a98:	dec    esp
  415a99:	sti    
  415a9a:	and    eax,0x9ef141fb
  415a9f:	sti    
  415aa0:	test   al,dl
  415aa2:	sbb    DWORD PTR ds:0xbc0723c6,edx
  415aa8:	popa   
  415aa9:	xor    al,0xfa
  415aab:	aam    0x3c
  415aad:	lds    edx,FWORD PTR ds:0xbfaff223
  415ab3:	push   edx
  415ab4:	arpl   WORD PTR [eax+0x485d5bf3],si
  415aba:	loopne 0x415a5e
  415abc:	jp     0x415b24
  415abe:	adc    BYTE PTR [eax],cl
  415ac0:	fisttp QWORD PTR [eax-0x281b18ad]
  415ac6:	pop    es
  415ac7:	mov    bh,0x34
  415ac9:	xor    BYTE PTR [edx],ch
  415acb:	imul   ebp,esi,0xb1be5cd6
  415ad1:	repz add BYTE PTR [eax+eiz*1+0x42],ah
  415ad6:	inc    ebp
  415ad7:	push   ds
  415ad8:	sub    DWORD PTR [edx+ebp*4],edx
  415adb:	mov    BYTE PTR [edx-0xd25bb36],bh
  415ae1:	mov    bl,0x5c
  415ae3:	ror    cl,0xcb
  415ae6:	adc    eax,0x455046fe
  415aeb:	or     ebx,edx
  415aed:	retf   0x8e9a
  415af0:	loopne 0x415b5c
  415af2:	jecxz  0x415ab1
  415af4:	fwait
  415af5:	imul   eax,DWORD PTR [esi-0xd],0xffffff8f
  415af9:	push   ebp
  415afa:	or     ebp,ebx
  415afc:	pushf  
  415afd:	mov    eax,0xf524e988
  415b02:	dec    ebx
  415b03:	in     al,dx
  415b04:	(bad)  
  415b05:	mov    ebx,0xb3895b8f
  415b0a:	test   BYTE PTR [edx+0x57],ch
  415b0d:	and    dh,BYTE PTR [edx]
  415b0f:	addr16 jo 0x415b91
  415b12:	rcr    BYTE PTR [ebx-0x54],cl
  415b15:	aam    0xdd
  415b17:	jp     0x415b46
  415b19:	mov    ecx,0xb1acb891
  415b1e:	add    eax,DWORD PTR [edx-0x4f]
  415b21:	test   BYTE PTR [ebp+0x57],bh
  415b24:	lahf   
  415b25:	int3   
  415b26:	dec    ecx
  415b27:	lahf   
  415b28:	or     eax,0x2aa5927b
  415b2d:	cli    
  415b2e:	dec    edx
  415b2f:	ins    BYTE PTR es:[edi],dx
  415b30:	push   cs
  415b31:	jno    0x415bae
  415b33:	pushf  
  415b34:	add    DWORD PTR [edi-0x22],edi
  415b37:	pop    esi
  415b38:	popa   
  415b39:	retf   
  415b3a:	sub    al,0x90
  415b3c:	(bad)  
  415b3d:	lods   al,BYTE PTR ds:[esi]
  415b3e:	scas   eax,DWORD PTR es:[edi]
  415b3f:	jp     0x415b52
  415b41:	inc    ebp
  415b42:	add    ah,BYTE PTR [ebx-0x7c]
  415b45:	push   ecx
  415b46:	das    
  415b47:	push   es
  415b48:	or     ebp,DWORD PTR [ecx+0x59]
  415b4b:	mov    dh,0xf5
  415b4d:	fstp   QWORD PTR [ebp+0x46fe2393]
  415b53:	sbb    BYTE PTR [ecx-0x25898782],0x69
  415b5a:	adc    al,0x79
  415b5c:	or     eax,0xc11b0111
  415b61:	push   ecx
  415b62:	nop
  415b63:	and    eax,0x1dce3af8
  415b68:	inc    edx
  415b69:	ret    0x917c
  415b6c:	xor    al,0xea
  415b6e:	pop    ecx
  415b6f:	je     0x415bdb
  415b71:	pop    edi
  415b72:	pop    edi
  415b73:	push   ds
  415b74:	mov    esp,0xa6dd4844
  415b79:	mov    bl,0xcd
  415b7b:	push   ebp
  415b7c:	sub    BYTE PTR [edx+0x25],ch
  415b7f:	fcmovnbe st,st(3)
  415b81:	arpl   WORD PTR [esp+ebx*8],dx
  415b84:	adc    DWORD PTR [eax+0x5ccce496],eax
  415b8a:	fsubr  DWORD PTR fs:0x5d99ad06
  415b91:	inc    esp
  415b92:	stc    
  415b93:	out    dx,eax
  415b94:	sbb    edi,DWORD PTR ds:0x2681e065
  415b9a:	jnp    0x415bdb
  415b9c:	sub    al,0x1a
  415b9e:	fstp   TBYTE PTR [eax+esi*2]
  415ba1:	cmp    al,0xc
  415ba3:	xchg   esp,eax
  415ba4:	sub    cl,BYTE PTR [edx]
  415ba6:	test   al,0xae
  415ba8:	pop    ebp
  415ba9:	lds    esp,FWORD PTR [ebp+0x3]
  415bac:	int3   
  415bad:	xor    cl,0xf
  415bb0:	test   eax,0x6b92740c
  415bb5:	sub    BYTE PTR [edi],bl
  415bb7:	jecxz  0x415bd5
  415bb9:	mov    ebp,0x699bad30
  415bbe:	mov    ds:0x799dd969,al
  415bc3:	ret    0x4841
  415bc6:	neg    esp
  415bc8:	sahf   
  415bc9:	xor    al,0x18
  415bcb:	mov    bh,0x8d
  415bcd:	outs   dx,BYTE PTR ds:[esi]
  415bce:	(bad)  
  415bcf:	xchg   edx,eax
  415bd0:	and    eax,0x72a6b652
  415bd5:	idiv   DWORD PTR [edx+0x6de0863d]
  415bdb:	pop    ss
  415bdc:	sbb    BYTE PTR [edx+0x72ea9033],bl
  415be2:	sbb    edi,DWORD PTR [edi+0x1619a33d]
  415be8:	cmp    al,0x8b
  415bea:	mov    edi,0x96e2238d
  415bef:	mov    edi,0xf5d89183
  415bf4:	xor    BYTE PTR [edx+esi*2+0x48],al
  415bf8:	enter  0x4755,0xce
  415bfc:	mov    al,ds:0x58e9f332
  415c01:	cmp    dl,BYTE PTR [edi+0x6e457048]
  415c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c08:	mov    esi,DWORD PTR [ebp+0x8b0fd9e]
  415c0e:	sti    
  415c0f:	out    dx,eax
  415c10:	mov    dl,0xb3
  415c12:	add    eax,DWORD PTR [edi]
  415c14:	or     edi,ebx
  415c16:	js     0x415bc5
  415c18:	dec    edx
  415c19:	xchg   ebp,eax
  415c1a:	mov    cl,0xcd
  415c1c:	mov    eax,ds:0x95e41946
  415c21:	mov    bl,0x39
  415c23:	fwait
  415c24:	sub    al,0x6e
  415c26:	push   esi
  415c27:	xchg   edx,eax
  415c28:	fist   WORD PTR [edi+0x47]
  415c2b:	jns    0x415bd6
  415c2d:	xchg   ecx,eax
  415c2e:	and    ebp,DWORD PTR [edi-0x25]
  415c31:	test   eax,0xe841dcc7
  415c36:	mov    edi,0x456ed8cd
  415c3b:	out    dx,al
  415c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c3d:	jo     0x415bcd
  415c3f:	adc    eax,eax
  415c41:	test   al,0x8e
  415c43:	shl    DWORD PTR [ebp+0x3a505428],cl
  415c49:	sbb    eax,0x6b221406
  415c4e:	pop    ds
  415c4f:	addr16 jae 0x415c53
  415c52:	push   ebx
  415c53:	xchg   edx,eax
  415c54:	fstp   QWORD PTR [ebp+0xf]
  415c57:	xor    esi,DWORD PTR [esi+0x78]
  415c5a:	mov    ds:0x417064fe,eax
  415c5f:	sub    eax,0x7fbe6ab5
  415c64:	mov    ch,0x80
  415c66:	xor    al,0xcb
  415c68:	ins    BYTE PTR es:[edi],dx
  415c69:	dec    edi
  415c6a:	in     eax,dx
  415c6b:	mov    WORD PTR [edx-0x47f6f957],fs
  415c71:	pushf  
  415c72:	pop    esp
  415c73:	mov    ecx,0x7cf16249
  415c78:	and    BYTE PTR [ebx-0x380a54a6],dl
  415c7e:	iret   
  415c7f:	inc    edi
  415c80:	push   ebx
  415c81:	jge    0x415c08
  415c83:	add    dl,al
  415c85:	and    BYTE PTR ds:0xf5925ae6,dl
  415c8b:	popa   
  415c8c:	jmp    0xfd61:0xd82d5036
  415c93:	outs   dx,DWORD PTR ds:[esi]
  415c94:	adc    al,0x1b
  415c96:	mov    al,0x3c
  415c98:	mov    ds:0xfe1954ed,al
  415c9d:	xor    ah,BYTE PTR [esi+0x7a]
  415ca0:	sbb    al,0xf9
  415ca2:	dec    eax
  415ca3:	pop    ds
  415ca4:	jb     0x415c3d
  415ca6:	pop    edi
  415ca7:	in     al,dx
  415ca8:	add    dl,BYTE PTR [edx+0x66]
  415cab:	pop    ss
  415cac:	inc    eax
  415cad:	stos   BYTE PTR es:[edi],al
  415cae:	jb     0x415cb0
  415cb0:	mov    bh,0xec
  415cb2:	pop    ss
  415cb3:	pushf  
  415cb4:	ret    
  415cb5:	daa    
  415cb6:	jne    0x415ccb
  415cb8:	and    al,0x9b
  415cba:	mov    ah,0x34
  415cbc:	cmp    eax,0x7f650e56
  415cc1:	mov    esp,0x3fa8f43b
  415cc6:	cmp    eax,0xcf9f4484
  415ccb:	pop    ebp
  415ccc:	pop    esp
  415ccd:	rcr    ecx,1
  415ccf:	jg     0x415cfa
  415cd1:	mov    ch,0xe8
  415cd3:	inc    edx
  415cd4:	rcl    BYTE PTR [ebp+eiz*1-0x7f],cl
  415cd8:	rcr    DWORD PTR [edx],cl
  415cda:	cmp    ah,dl
  415cdc:	ret    
  415cdd:	and    ebp,edi
  415cdf:	pop    es
  415ce0:	sti    
  415ce1:	sbb    BYTE PTR [esp+eiz*8],dl
  415ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce5:	cwde   
  415ce6:	sbb    DWORD PTR [edx+0x61],eax
  415ce9:	inc    ebx
  415cea:	jmp    0xcedf:0xafedb36e
  415cf1:	sar    ch,cl
  415cf3:	add    ebp,DWORD PTR [esi]
  415cf5:	mov    ebx,0xa6614aee
  415cfa:	jge    0x415d20
  415cfc:	xchg   edx,eax
  415cfd:	aaa    
  415cfe:	rcl    BYTE PTR [eax+esi*1],1
  415d01:	mov    eax,ecx
  415d03:	mov    esi,0xd5caa54
  415d08:	mov    al,ds:0xb9729b58
  415d0d:	push   es
  415d0e:	fld    QWORD PTR [ecx]
  415d10:	jns    0x415d64
  415d12:	and    ah,BYTE PTR [ebx]
  415d14:	in     al,dx
  415d15:	lods   eax,DWORD PTR ds:[esi]
  415d16:	push   es
  415d17:	push   0xffffffe1
  415d19:	in     eax,0xe5
  415d1b:	test   DWORD PTR [ebp+0x5fc453af],ebp
  415d21:	fbld   TBYTE PTR [esi-0x4903f6ae]
  415d27:	lock in al,0x29
  415d2a:	cdq    
  415d2b:	adc    eax,0xe54322e5
  415d30:	jno    0x415db1
  415d32:	(bad)  
  415d33:	mov    ch,0x58
  415d35:	fst    st(6)
  415d37:	xor    ebp,DWORD PTR [eax]
  415d39:	mov    ah,0xb7
  415d3b:	std    
  415d3c:	and    cl,ch
  415d3e:	retf   
  415d3f:	test   BYTE PTR [edi+edi*2-0x6d],cl
  415d43:	(bad)  
  415d44:	push   ecx
  415d45:	test   DWORD PTR [ebp-0xc],edi
  415d48:	pop    ss
  415d49:	popf   
  415d4a:	mov    bl,BYTE PTR [ebx+0x66eb786f]
  415d50:	repnz clc 
  415d52:	in     eax,0xf1
  415d54:	xchg   ecx,eax
  415d55:	ins    BYTE PTR es:[edi],dx
  415d56:	sbb    ah,BYTE PTR [esi-0x60]
  415d59:	iret   
  415d5a:	mov    bh,0x2a
  415d5c:	dec    edx
  415d5d:	add    al,0x2d
  415d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d60:	dec    esp
  415d61:	inc    ecx
  415d62:	imul   edx,DWORD PTR [edi-0x59],0xffffff9d
  415d66:	and    DWORD PTR [ebx],ebp
  415d68:	and    BYTE PTR [ebx],bh
  415d6a:	jle    0x415dc1
  415d6c:	dec    ebp
  415d6d:	rcl    BYTE PTR cs:[edx],1
  415d70:	loopne 0x415deb
  415d72:	pushf  
  415d73:	inc    eax
  415d74:	sbb    ecx,DWORD PTR [ecx-0x74]
  415d77:	mov    ah,0x4c
  415d79:	or     BYTE PTR [ebp-0x7be7772],cl
  415d7f:	(bad)  
  415d81:	jnp    0x415dcd
  415d83:	mov    bh,0xc
  415d85:	cmp    BYTE PTR [ebx-0x6],dh
  415d88:	gs aas 
  415d8a:	sub    BYTE PTR [ecx+esi*4],ah
  415d8d:	call   0xefcb13f
  415d92:	sbb    eax,0x474a953c
  415d97:	out    dx,al
  415d98:	push   ss
  415d99:	push   ebx
  415d9a:	call   0x87ff:0xae5d9e63
  415da1:	(bad)  [ebx]
  415da3:	jmp    0xf4c4:0x3775147f
  415daa:	stos   DWORD PTR es:[edi],eax
  415dab:	push   ebp
  415dac:	mov    cl,0x56
  415dae:	rol    DWORD PTR [esi],1
  415db0:	dec    eax
  415db1:	pop    esi
  415db2:	popa   
  415db3:	pop    eax
  415db4:	arpl   di,cx
  415db6:	inc    edi
  415db7:	adc    bl,BYTE PTR [edi+0x1d]
  415dba:	and    DWORD PTR [esi+0x1edd7f8b],edi
  415dc0:	scas   al,BYTE PTR es:[edi]
  415dc1:	or     bl,ah
  415dc3:	retf   0x97a1
  415dc6:	fcom   QWORD PTR ds:0x491c9081
  415dcc:	jno    0x415e12
  415dce:	out    0x13,eax
  415dd0:	push   ebp
  415dd1:	cmp    DWORD PTR [eax],edx
  415dd3:	push   edi
  415dd4:	aas    
  415dd5:	fs nop
  415dd7:	rcl    BYTE PTR [edx-0x443738d2],0x42
  415dde:	mov    ah,0xbd
  415de0:	ds std 
  415de2:	adc    eax,0x8e5fbc3
  415de7:	xchg   ebp,eax
  415de8:	jp     0x415db6
  415dea:	mov    ch,ah
  415dec:	inc    ebp
  415ded:	out    0xb9,eax
  415def:	mov    es,WORD PTR [edi]
  415df1:	and    BYTE PTR [edi+0x1e11fccd],dh
  415df7:	xor    al,BYTE PTR [ebx-0x6c325f9a]
  415dfd:	ror    BYTE PTR [edx],cl
  415dff:	sbb    eax,0xcfc32b26
  415e04:	retf   
  415e05:	cs loope 0x415d98
  415e08:	js     0x415e0b
  415e0a:	sbb    DWORD PTR [eax-0x5498e13a],0x22
  415e11:	mov    eax,ds:0x6a902ff9
  415e16:	pop    ebp
  415e17:	mov    al,0x80
  415e19:	aaa    
  415e1a:	or     BYTE PTR [esi-0x25edf115],ah
  415e20:	cmc    
  415e21:	cld    
  415e22:	mov    ah,0x45
  415e24:	lea    eax,[ebx-0x7640c2b4]
  415e2a:	inc    esi
  415e2b:	in     al,0x9e
  415e2d:	popa   
  415e2e:	and    al,0x7f
  415e30:	dec    ebx
  415e31:	jo     0x415dfc
  415e33:	lods   al,BYTE PTR ds:[esi]
  415e34:	mov    esp,0x61577860
  415e39:	jp     0x415e8a
  415e3b:	pop    ds
  415e3c:	sti    
  415e3d:	pop    ebx
  415e3e:	inc    ebx
  415e3f:	mov    esi,0x77a068f1
  415e44:	popf   
  415e45:	xor    al,0x3
  415e47:	push   ebx
  415e48:	mov    al,ds:0x67a490fa
  415e4d:	mov    ds:0x482ad55d,eax
  415e52:	xchg   ebx,eax
  415e53:	ss jbe 0x415def
  415e56:	lods   al,BYTE PTR ds:[esi]
  415e57:	pop    ebx
  415e58:	stos   DWORD PTR es:[edi],eax
  415e59:	das    
  415e5a:	lock cli 
  415e5c:	xor    eax,DWORD PTR [ebx+0x719e4db5]
  415e62:	pushf  
  415e63:	sbb    esi,DWORD PTR [ecx+0x51]
  415e66:	lahf   
  415e67:	popa   
  415e68:	js     0x415ee5
  415e6a:	add    ah,BYTE PTR [edx]
  415e6c:	jo     0x415e7c
  415e6e:	shl    DWORD PTR [eax-0x48cd8982],0xc6
  415e75:	mov    ch,0x19
  415e77:	clc    
  415e78:	ja     0x415ec9
  415e7a:	retf   0xf869
  415e7d:	pop    ebx
  415e7e:	outs   dx,DWORD PTR ds:[esi]
  415e7f:	int    0x76
  415e81:	(bad)  
  415e83:	push   ds
  415e84:	mov    cl,0x2a
  415e86:	(bad)  
  415e87:	cld    
  415e88:	ret    0x5d90
  415e8b:	pop    ds
  415e8c:	inc    esp
  415e8d:	sub    BYTE PTR [edi],ah
  415e8f:	jo     0x415ef1
  415e91:	pop    eax
  415e92:	add    DWORD PTR [ebx-0x55c45cc4],eax
  415e98:	xor    al,0xa
  415e9a:	enter  0x87c3,0x31
  415e9e:	mov    BYTE PTR [edx+0x19cf8983],bl
  415ea4:	lahf   
  415ea5:	push   es
  415ea6:	mov    ecx,0xa1dd0fc1
  415eab:	(bad)  
  415eac:	js     0x415efd
  415eae:	mov    ch,0xfc
  415eb0:	xchg   edx,eax
  415eb1:	cmp    ebx,esp
  415eb3:	xchg   edi,eax
  415eb4:	ror    bl,cl
  415eb6:	mov    dl,al
  415eb8:	push   edx
  415eb9:	in     al,0xc8
  415ebb:	pop    esp
  415ebc:	jno    0x415ede
  415ebe:	(bad)
  415ec1:	pop    esi
  415ec2:	jns    0x415f30
  415ec4:	sub    al,0xe3
  415ec6:	int    0x6c
  415ec8:	js     0x415efc
  415eca:	pop    ebp
  415ecb:	ins    DWORD PTR es:[edi],dx
  415ecc:	fcom   DWORD PTR [edi+0x23eca410]
  415ed2:	jb     0x415ed3
  415ed4:	sub    BYTE PTR [edi-0x7c7c676e],cl
  415eda:	mov    ds:0xcfda12ac,eax
  415edf:	or     DWORD PTR [eax-0x3d09893a],0x8e08eeaf
  415ee9:	out    0xdd,eax
  415eeb:	sbb    esp,esp
  415eed:	sti    
  415eee:	stc    
  415eef:	imul   ebx,DWORD PTR ds:0x97eeab9c,0xffffff90
  415ef6:	add    BYTE PTR [edi],bl
  415ef8:	sub    ch,al
  415efa:	gs jmp 0x1787:0xd69aebb6
  415f02:	rol    esp,cl
  415f04:	xor    bh,BYTE PTR [edi-0x6a331462]
  415f0a:	dec    eax
  415f0b:	push   0x65
  415f0d:	mov    bh,BYTE PTR [edx-0x522cc001]
  415f13:	out    dx,eax
  415f14:	jo     0x415f38
  415f16:	js     0x415f68
  415f18:	inc    edx
  415f19:	mov    cl,0xe5
  415f1b:	pop    ss
  415f1c:	push   esp
  415f1d:	mov    eax,0xfd713047
  415f22:	pop    es
  415f23:	inc    ebp
  415f24:	adc    DWORD PTR ds:0x71fca5f1,edx
  415f2a:	bnd jg 0x415f52
  415f2d:	inc    esi
  415f2e:	xchg   esp,eax
  415f2f:	push   es
  415f30:	test   al,0x8c
  415f32:	and    DWORD PTR [ebx-0x6d],esi
  415f35:	and    ah,BYTE PTR [edx+edi*1+0x3f]
  415f39:	xchg   esp,eax
  415f3a:	aaa    
  415f3b:	mov    cl,0x4e
  415f3d:	jg     0x415f00
  415f3f:	xor    dh,al
  415f41:	es pop edi
  415f43:	cmp    al,dl
  415f45:	dec    eax
  415f46:	jge    0x415fb0
  415f48:	sahf   
  415f49:	aad    0xd6
  415f4b:	xor    al,0x72
  415f4d:	leave  
  415f4e:	jno    0x415f8f
  415f50:	in     eax,dx
  415f51:	pop    ebp
  415f53:	pop    ds
  415f54:	xlat   BYTE PTR ds:[ebx]
  415f55:	cmc    
  415f56:	jp     0x415f90
  415f58:	call   0x7daf9c8
  415f5d:	sub    eax,0xb52d67b5
  415f62:	in     eax,0x67
  415f64:	bound  ebp,QWORD PTR [eax+0x28c86db6]
  415f6a:	push   esi
  415f6b:	sbb    eax,DWORD PTR [edx]
  415f6d:	mov    bh,0x47
  415f6f:	and    al,0x46
  415f71:	lahf   
  415f72:	or     DWORD PTR [eax-0x13],edi
  415f75:	xchg   ebx,eax
  415f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f77:	sbb    ch,BYTE PTR [edi]
  415f79:	test   BYTE PTR [ebx+0x19],0x27
  415f7d:	mov    ebx,esi
  415f7f:	jno    0x415f7b
  415f81:	xchg   esi,eax
  415f82:	xor    ah,cl
  415f84:	inc    ebx
  415f85:	data16 mov al,BYTE PTR [esi-0x707bb884]
  415f8c:	addr16 fcomp st(4)
  415f8f:	cdq    
  415f90:	or     al,0xaa
  415f92:	inc    esp
  415f93:	or     al,0x8f
  415f95:	ror    DWORD PTR [edx],1
  415f97:	inc    esp
  415f98:	pminub mm1,QWORD PTR [edi-0x307592fb]
  415f9f:	mov    ebx,0xb68e8c00
  415fa4:	les    edi,FWORD PTR [edi+0x772b5178]
  415faa:	sbb    al,0x31
  415fac:	leave  
  415fad:	ds or  al,0x2f
  415fb0:	mov    esi,0x3f7867db
  415fb5:	pop    edi
  415fb6:	arpl   WORD PTR [esi+ebp*4-0x25bc7e64],cx
  415fbd:	mov    dh,0xa2
  415fbf:	jp     0x416040
  415fc1:	xor    bl,ah
  415fc3:	shl    BYTE PTR [ecx+eiz*4],cl
  415fc6:	xlat   BYTE PTR ds:[ebx]
  415fc7:	push   esp
  415fc8:	add    al,0xfb
  415fca:	in     al,0x19
  415fcc:	(bad)  
  415fcd:	out    0xcb,eax
  415fcf:	push   ds
  415fd0:	mov    esi,0x3fafa71
  415fd5:	sub    esp,ebx
  415fd7:	test   al,0x39
  415fd9:	push   es
  415fda:	sbb    al,0x18
  415fdc:	sahf   
  415fdd:	mov    cl,0x8e
  415fdf:	add    eax,0x16c57e44
  415fe4:	push   ebp
  415fe5:	sbb    ah,BYTE PTR [edi+0x64]
  415fe8:	js     0x415fbc
  415fea:	call   0xee:0xc7a93bc9
  415ff1:	pop    es
  415ff2:	loopne 0x415fd2
  415ff4:	or     al,0xb4
  415ff6:	adc    edx,DWORD PTR [ecx]
  415ff8:	xchg   ecx,eax
  415ff9:	pop    es
  415ffa:	(bad)  
  415ffb:	dec    ebp
  415ffc:	dec    eax
  415ffd:	sbb    BYTE PTR [ebx+edi*4],cl
  416000:	mov    eax,ds:0x49df37b4
  416005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416006:	cmp    al,0x50
  416008:	test   BYTE PTR [esi+edx*1],dl
  41600b:	push   edx
  41600c:	inc    edi
  41600d:	cli    
  41600e:	dec    edi
  41600f:	fs call 0x61e0:0x815f844e
  416017:	sub    esp,DWORD PTR [ecx-0x6624a3b3]
  41601d:	sbb    edi,eax
  41601f:	inc    ebp
  416020:	jno    0x416009
  416022:	mov    al,0x40
  416024:	or     bh,BYTE PTR [eax+0x72a4b47b]
  41602a:	jle    0x416079
  41602c:	scas   al,BYTE PTR es:[edi]
  41602d:	outs   dx,DWORD PTR ds:[esi]
  41602e:	sbb    BYTE PTR [edi-0x3a3ab151],bh
  416034:	imul   ebx,esi,0xc70ba6a4
  41603a:	test   edx,edx
  41603c:	aaa    
  41603d:	test   eax,0x6592c28a
  416042:	retf   
  416043:	mov    cl,0x24
  416045:	add    edi,DWORD PTR [edx+ecx*8+0x7c]
  416049:	scas   eax,DWORD PTR es:[edi]
  41604a:	push   eax
  41604b:	test   eax,0x21b25635
  416050:	xchg   ebp,eax
  416051:	repnz popf 
  416053:	jae    0x41604e
  416055:	pusha  
  416056:	aad    0x77
  416058:	idiv   BYTE PTR [esp+ecx*4]
  41605b:	mov    eax,0x8c01d6d0
  416060:	push   0x24
  416062:	xor    BYTE PTR [ecx+0x7],0x63
  416066:	adc    eax,0x3f55ca04
  41606b:	(bad)  
  41606c:	addr16 push ecx
  41606e:	test   DWORD PTR [edx-0x69],ebx
  416071:	xor    edi,ebp
  416073:	ror    dh,0x47
  416076:	outs   dx,BYTE PTR ds:[esi]
  416077:	adc    BYTE PTR ds:0x78537fc2,ah
  41607d:	xchg   DWORD PTR [ebx],edi
  41607f:	fldcw  WORD PTR [ecx]
  416081:	xchg   BYTE PTR [edx-0x1e],ah
  416084:	sub    eax,0x30779f16
  416089:	or     al,0xce
  41608b:	lock nop
  41608d:	jecxz  0x416038
  41608f:	sbb    al,0xd4
  416091:	sbb    BYTE PTR [ebp-0x3],al
  416094:	ss add bh,dh
  416097:	mov    edx,0xe1d78ded
  41609c:	in     eax,dx
  41609d:	jg     0x41610e
  41609f:	or     ch,bl
  4160a1:	test   al,ch
  4160a3:	nop
  4160a4:	fnop   
  4160a6:	push   edi
  4160a7:	nop
  4160a8:	pop    ebx
  4160a9:	mov    ebp,0xb69a1db4
  4160ae:	rcr    BYTE PTR [ebx-0x1777685],1
  4160b4:	xor    al,0xe5
  4160b6:	add    eax,0xa3cf5d34
  4160bb:	sbb    esi,0xe69af487
  4160c1:	leave  
  4160c2:	mov    esp,0xb4974423
  4160c7:	rcr    DWORD PTR [ebx+edi*4],1
  4160ca:	mov    WORD PTR [esi-0x7d],ds
  4160cd:	rcr    DWORD PTR [ebx-0x46],0x61
  4160d1:	push   ecx
  4160d2:	jnp    0x416122
  4160d4:	lock sub al,BYTE PTR [ecx+0x68de722d]
  4160db:	mov    ebp,0xa8cebd52
  4160e0:	jge    0x4160c1
  4160e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e3:	sahf   
  4160e4:	mov    esi,0xe4a63976
  4160e9:	aas    
  4160ea:	clc    
  4160eb:	and    ebp,DWORD PTR [ecx]
  4160ed:	rcr    BYTE PTR [edx+0x14],0x33
  4160f1:	push   0xd8f61cb9
  4160f6:	jecxz  0x416108
  4160f8:	inc    eax
  4160f9:	xor    al,0xac
  4160fb:	daa    
  4160fc:	fwait
  4160fd:	xchg   edx,eax
  4160fe:	fdivr  QWORD PTR [ecx]
  416100:	gs push ds
  416102:	push   0xffffffdf
  416104:	mov    WORD PTR [ecx],gs
  416106:	jl     0x4160c0
  416108:	nop
  416109:	push   edx
  41610a:	scas   eax,DWORD PTR es:[edi]
  41610b:	(bad)  
  41610c:	sar    BYTE PTR [edi-0x67],0x84
  416110:	mov    eax,fs
  416112:	inc    esi
  416113:	dec    ebx
  416114:	cmp    eax,0x35366b87
  416119:	test   DWORD PTR [edi+0x379b126a],ebp
  41611f:	clc    
  416120:	in     al,0x65
  416122:	adc    al,0x7c
  416124:	ss fs push ecx
  416127:	mov    esi,0xf219e4e6
  41612d:	sub    ebp,ebp
  41612f:	cmp    DWORD PTR [ecx],eax
  416131:	mov    ds:0x5ede57ea,eax
  416136:	dec    eax
  416137:	mov    al,ds:0x34cd61ef
  41613c:	sbb    al,0xf1
  41613e:	fst    QWORD PTR [esi-0x2cdaddb2]
  416144:	out    dx,eax
  416145:	stos   BYTE PTR es:[edi],al
  416146:	mov    bh,0xaa
  416148:	mov    ch,BYTE PTR [eax+0x3039b632]
  41614e:	fst    st(5)
  416150:	mov    ah,0xfc
  416152:	ror    DWORD PTR [esi-0x4ea26913],0xe0
  416159:	pop    es
  41615a:	xor    DWORD PTR ss:[ecx],edi
  41615d:	adc    al,0xf
  41615f:	add    al,0x3e
  416161:	pop    ebx
  416162:	leave  
  416163:	cmp    esp,ebx
  416165:	mov    cs,WORD PTR [ecx+ebx*1+0x6806d886]
  41616c:	mov    dl,0x62
  41616e:	jbe    0x416158
  416170:	arpl   WORD PTR [edi-0x9],si
  416173:	lock xlat BYTE PTR ds:[ebx]
  416175:	(bad)  
  416176:	(bad)  
  416177:	lock pop esp
  416179:	or     eax,edx
  41617b:	jo     0x416176
  41617d:	jle    0x4161e3
  41617f:	dec    edi
  416180:	lods   al,BYTE PTR ss:[esi]
  416182:	lock inc ecx
  416184:	lea    edx,[ecx+0x7983c47b]
  41618a:	pop    ds
  41618b:	mul    DWORD PTR [ebx-0x16b40fe8]
  416191:	or     esp,DWORD PTR [edx+0x43cbbef7]
  416197:	enter  0x87a0,0x13
  41619b:	dec    esp
  41619c:	stc    
  41619d:	popf   
  41619e:	mov    al,0xc1
  4161a0:	outs   dx,BYTE PTR ds:[esi]
  4161a1:	xchg   ecx,eax
  4161a2:	imul   ebx,DWORD PTR [ebx],0x79
  4161a5:	ficom  WORD PTR [ebx]
  4161a7:	xchg   esp,eax
  4161a8:	fdiv   QWORD PTR [ebp+eax*8+0x5e]
  4161ac:	mov    bl,BYTE PTR [edi-0x6b]
  4161af:	push   0xfffffff7
  4161b1:	pusha  
  4161b2:	adc    BYTE PTR [ecx+eiz*4+0x49],0xd1
  4161b7:	das    
  4161b8:	pop    edx
  4161b9:	mov    edi,0xe0b3c2b9
  4161be:	popf   
  4161bf:	stos   DWORD PTR es:[edi],eax
  4161c0:	lea    esp,[esi-0x75]
  4161c3:	outs   dx,BYTE PTR ds:[esi]
  4161c4:	xchg   esi,eax
  4161c5:	stos   BYTE PTR es:[edi],al
  4161c6:	adc    dl,BYTE PTR [edx]
  4161c8:	fwait
  4161c9:	sahf   
  4161ca:	(bad)  
  4161cb:	(bad)  
  4161cc:	bound  esp,QWORD PTR [esi+0x5a728203]
  4161d2:	iret   
  4161d3:	sub    cl,cl
  4161d5:	test   DWORD PTR [ecx-0x4f],ecx
  4161d8:	push   ss
  4161d9:	(bad)  
  4161db:	jno    0x4161ac
  4161dd:	fild   QWORD PTR [edi-0x2c33760c]
  4161e3:	mov    bl,0x1a
  4161e5:	pop    esp
  4161e6:	lods   al,BYTE PTR ds:[esi]
  4161e7:	fild   QWORD PTR [eax+0x68]
  4161ea:	push   ds
  4161eb:	pop    es
  4161ec:	(bad)  
  4161ed:	lods   al,BYTE PTR ds:[esi]
  4161ee:	mov    WORD PTR [ecx+eiz*8+0x11],ss
  4161f2:	push   esi
  4161f3:	or     DWORD PTR [ebp-0x2e7e3ee6],ecx
  4161f9:	mov    esp,0x687ac14f
  4161fe:	cmp    al,0x68
  416200:	test   BYTE PTR [edi+ebx*4+0x61],ah
  416204:	aaa    
  416205:	outs   dx,BYTE PTR ds:[esi]
  416206:	sbb    bl,bl
  416208:	loopne 0x41618c
  41620a:	aas    
  41620b:	outs   dx,DWORD PTR ds:[si]
  41620d:	daa    
  41620e:	sar    BYTE PTR [edi+edi*8-0x75],0xf0
  416213:	lds    ecx,FWORD PTR [esi-0x3b]
  416216:	jle    0x4161ff
  416218:	shl    BYTE PTR [edi+0x55],0xbf
  41621c:	repz cmc 
  41621e:	hlt    
  41621f:	scas   eax,DWORD PTR es:[edi]
  416220:	cmp    ah,cl
  416222:	adc    edx,ecx
  416224:	mov    ah,0x56
  416226:	pop    ss
  416227:	push   edi
  416228:	xor    DWORD PTR es:[esi+0x42],esp
  41622c:	mov    WORD PTR [ebp-0x56],ss
  41622f:	test   DWORD PTR [ebp-0xa],ebx
  416232:	cs pop ds
  416234:	fnstsw WORD PTR [ecx+0x5b17d606]
  41623a:	in     al,dx
  41623b:	pop    ecx
  41623c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41623d:	pop    eax
  41623e:	out    0x96,eax
  416240:	pop    esi
  416241:	sbb    eax,0x3e4aef7a
  416246:	push   cs
  416247:	aam    0x1f
  416249:	cdq    
  41624a:	(bad)
  41624f:	mov    WORD PTR [edx+0x6366694f],fs
  416255:	sbb    eax,DWORD PTR [edx]
  416257:	mov    ecx,0x173d5882
  41625c:	adc    esp,esp
  41625e:	pop    ebx
  41625f:	jnp    0x4162a2
  416261:	ds xchg edx,eax
  416263:	ror    DWORD PTR [eax],0x2c
  416266:	cmp    al,0xb7
  416268:	sti    
  416269:	or     dh,BYTE PTR [edx+0x42]
  41626c:	mov    ds:0xfb749cc3,eax
  416271:	dec    esi
  416272:	mov    ebp,0xd0abc122
  416277:	je     0x4162f4
  416279:	pushf  
  41627a:	mov    eax,ds:0x9ee0c4cd
  41627f:	push   esp
  416280:	gs stos BYTE PTR es:[edi],al
  416282:	int3   
  416283:	call   DWORD PTR [edx]
  416285:	inc    esi
  416286:	ret    
  416287:	xchg   BYTE PTR [esi+0x23cf19d],cl
  41628d:	xor    ebp,DWORD PTR [ebx-0x41]
  416290:	and    al,BYTE PTR [ebx+eax*8+0x513fa014]
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	imul   esp,DWORD PTR [ebp-0x3e5e3dd2],0xffffffef
  41629f:	fs test eax,0xbb514b99
  4162a5:	das    
  4162a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a7:	mov    cl,0x17
  4162a9:	sbb    BYTE PTR [eax-0x66],dh
  4162ac:	and    DWORD PTR [esi],0xffffffa3
  4162af:	pop    ebp
  4162b0:	add    al,0xb5
  4162b2:	push   esp
  4162b3:	inc    ebx
  4162b4:	sub    eax,0xb9bd52d8
  4162b9:	sbb    BYTE PTR [edx+0x2360c943],dl
  4162bf:	ficom  DWORD PTR ds:0xbe0106d6
  4162c5:	or     al,0x3b
  4162c7:	scas   eax,DWORD PTR es:[edi]
  4162c8:	and    eax,0x324d1e4a
  4162cd:	in     al,dx
  4162ce:	fnsave [eax+0x5a6e0afa]
  4162d4:	test   BYTE PTR [eax-0x42],0x91
  4162d8:	and    eax,0x7263aba6
  4162dd:	and    DWORD PTR [eax],ebp
  4162df:	aad    0xed
  4162e1:	add    dh,BYTE PTR [edx+0x1f]
  4162e4:	pop    ebp
  4162e5:	mov    eax,ds:0x6de016db
  4162ea:	or     BYTE PTR ds:0xf6dbbc90,bh
  4162f0:	retf   0x8bc
  4162f3:	jmp    0xbc36:0xdcdf70ff
  4162fa:	aam    0xb0
  4162fc:	jns    0x4162c2
  4162fe:	cld    
  4162ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416300:	rol    BYTE PTR [edx],cl
  416302:	pop    ecx
  416303:	mov    ah,0xd5
  416305:	mov    esp,0x37bebed4
  41630a:	xor    cl,BYTE PTR [esi]
  41630c:	(bad)  
  41630d:	push   ebp
  41630e:	or     bh,al
  416310:	adc    al,0x75
  416312:	mov    eax,0x5ab2e514
  416317:	or     DWORD PTR [ebx],ebx
  416319:	jl     0x4162dc
  41631b:	and    DWORD PTR [edi+ebp*2-0x20102598],esi
  416322:	mov    ss,WORD PTR [esi+eiz*4-0x19c7da81]
  416329:	das    
  41632a:	js     0x4162f3
  41632c:	xlat   BYTE PTR ds:[ebx]
  41632d:	mov    al,0xf4
  41632f:	mov    dl,0xad
  416331:	xchg   esi,eax
  416332:	cmp    eax,0x4b384360
  416337:	add    al,0x70
  416339:	test   eax,0x642e3086
  41633e:	js     0x4163b9
  416340:	xor    eax,ecx
  416342:	in     eax,0xbf
  416344:	ja     0x4162e9
  416346:	aas    
  416347:	dec    esp
  416348:	push   0x2c0384af
  41634d:	je     0x41633f
  41634f:	in     al,dx
  416350:	adc    BYTE PTR [ebx+0x3c75e47a],bh
  416356:	cli    
  416357:	xchg   bh,dh
  416359:	test   DWORD PTR [edi-0x7e],ecx
  41635c:	clc    
  41635d:	adc    BYTE PTR [ebp+ecx*2+0x6e502ff2],cl
  416364:	call   FWORD PTR [eax+0xa]
  416367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416368:	aaa    
  416369:	xchg   BYTE PTR [edx],ch
  41636b:	je     0x4163a4
  41636d:	bt     DWORD PTR [ebp+0x742473f9],ebp
  416374:	xor    eax,0x68ee0503
  416379:	lahf   
  41637a:	shr    BYTE PTR [edx],0xc4
  41637d:	xor    esp,DWORD PTR [ecx+0x48]
  416380:	sub    DWORD PTR [edi-0x3d],eax
  416383:	enter  0x6aff,0xab
  416387:	and    al,0x1b
  416389:	jnp    0x4163b2
  41638b:	bound  ecx,QWORD PTR ds:0x613c405b
  416391:	jle    0x416321
  416393:	push   edi
  416394:	scas   al,BYTE PTR es:[edi]
  416395:	adc    dh,ch
  416397:	jo     0x4163f4
  416399:	adc    edx,DWORD PTR [ebx]
  41639b:	adc    al,0x6f
  41639d:	xor    dh,BYTE PTR [esi]
  41639f:	shr    DWORD PTR [edx+0x10821fc4],cl
  4163a5:	fbstp  TBYTE PTR [eax-0x7a]
  4163a8:	bound  ebx,QWORD PTR [edi+ecx*4-0x10]
  4163ac:	mov    ebx,0x93d1a8bb
  4163b1:	scas   eax,DWORD PTR es:[edi]
  4163b2:	pop    ss
  4163b3:	outs   dx,BYTE PTR ds:[esi]
  4163b4:	xchg   ecx,eax
  4163b5:	scas   al,BYTE PTR es:[edi]
  4163b6:	sbb    ebp,DWORD PTR [edi+ecx*8]
  4163b9:	in     al,dx
  4163ba:	inc    ebp
  4163bb:	sub    eax,0x50b6cff7
  4163c0:	loope  0x4163cf
  4163c2:	mov    bl,0x23
  4163c4:	addr16 mov ebx,0xa5af8239
  4163ca:	ins    BYTE PTR es:[edi],dx
  4163cb:	dec    ebx
  4163cc:	cli    
  4163cd:	out    dx,al
  4163ce:	imul   eax,esp,0xce929716
  4163d4:	test   eax,0x5ccae5f7
  4163d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163da:	jle    0x416376
  4163dc:	push   ss
  4163dd:	fdivrp st(4),st
  4163df:	sbb    bh,BYTE PTR [edx-0x7e999f22]
  4163e5:	addr16 and eax,0x31b55edb
  4163eb:	cwde   
  4163ec:	ds cld 
  4163ee:	jno    0x416397
  4163f0:	mov    al,ds:0x71c588dd
  4163f5:	fiadd  DWORD PTR [edi]
  4163f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163f8:	dec    esp
  4163f9:	and    eax,0x8046b6bd
  4163fe:	out    0x35,al
  416400:	cmp    al,0x8e
  416402:	cdq    
  416403:	cmp    al,0xfb
  416405:	inc    ecx
  416406:	dec    edi
  416407:	jns    0x4163e4
  416409:	mov    edi,0x1ca21315
  41640e:	fld    DWORD PTR [ebp+0x5d38af6d]
  416414:	pop    edx
  416415:	dec    ebx
  416416:	push   ss
  416417:	jg     0x41645a
  416419:	lods   al,BYTE PTR ds:[esi]
  41641a:	int    0x89
  41641c:	loopne 0x41645c
  41641e:	push   ds
  41641f:	ins    DWORD PTR es:[edi],dx
  416420:	push   esp
  416421:	xchg   edx,eax
  416422:	loop   0x4163be
  416424:	daa    
  416425:	sbb    BYTE PTR [ebp+0x4782ff27],ah
  41642b:	or     ecx,ebx
  41642d:	push   edi
  41642e:	push   ecx
  41642f:	inc    eax
  416430:	dec    edx
  416431:	sti    
  416432:	push   0x1595469c
  416437:	jp     0x416483
  416439:	(bad)  
  41643b:	adc    ecx,esp
  41643d:	ret    
  41643e:	mov    al,0x94
  416440:	fucomi st,st(0)
  416442:	data16 (bad) 
  416444:	sti    
  416445:	int3   
  416446:	hlt    
  416447:	cld    
  416448:	mov    dl,BYTE PTR [edi]
  41644a:	fmul   QWORD PTR [edx-0x5df6b0e1]
  416450:	lods   al,BYTE PTR ds:[esi]
  416451:	imul   esp,DWORD PTR [eax+0x7c],0xffffffc2
  416455:	mov    al,ds:0xf22aa392
  41645a:	popa   
  41645b:	ret    
  41645c:	jge    0x416489
  41645e:	shr    DWORD PTR [eax+0x2],cl
  416461:	fcmovnu st,st(5)
  416463:	stos   DWORD PTR es:[edi],eax
  416464:	mov    DWORD PTR [edi-0x53],edi
  416467:	mov    bl,0xa4
  416469:	mov    ds:0x4bf5e069,al
  41646e:	ss mov esi,0x53a9bc6c
  416474:	jnp    0x416466
  416476:	mov    bl,0x49
  416478:	in     al,0xbd
  41647a:	jae    0x416418
  41647c:	call   0xd77c:0xe8a533f9
  416483:	push   ecx
  416484:	push   ebx
  416485:	ss (bad) 
  416487:	ins    DWORD PTR es:[edi],dx
  416488:	mov    ss,WORD PTR [ebx+ebx*8+0x4d]
  41648c:	push   0x58
  41648e:	add    DWORD PTR [bx+di+0x6e],0x60
  416493:	out    0x7d,al
  416495:	push   0x1a35a6b5
  41649a:	pop    eax
  41649b:	call   0x6d13:0xef27f08b
  4164a2:	pop    eax
  4164a3:	ss adc esi,edx
  4164a6:	inc    esp
  4164a7:	push   esp
  4164a8:	sti    
  4164a9:	push   esp
  4164aa:	mov    al,0x37
  4164ac:	mov    ecx,0x362293a4
  4164b1:	inc    esp
  4164b2:	cmp    cl,bh
  4164b4:	icebp  
  4164b5:	pop    edi
  4164b6:	ficom  WORD PTR [ecx+0x2dd86c36]
  4164bc:	repz inc esi
  4164be:	push   cs
  4164bf:	and    DWORD PTR [esi],edi
  4164c1:	xchg   ebx,eax
  4164c2:	jle    0x41645a
  4164c4:	mov    fs,WORD PTR ds:0x5171a904
  4164ca:	nop
  4164cb:	add    DWORD PTR ds:0x65712e3c,0x251a485b
  4164d5:	arpl   WORD PTR [di-0x72b9],si
  4164da:	sub    bl,BYTE PTR [eax-0x5fd83608]
  4164e0:	out    0x27,eax
  4164e2:	mov    ?,WORD PTR [ebx-0x435214f3]
  4164e8:	xlat   BYTE PTR ds:[ebx]
  4164e9:	and    BYTE PTR [edi+0x53263f26],bh
  4164ef:	cmp    eax,0x75a4a98f
  4164f4:	stos   DWORD PTR es:[edi],eax
  4164f5:	sub    eax,0x55892d7d
  4164fa:	or     cl,ch
  4164fc:	mov    ecx,0x8b000024
  416501:	push   ebp
  416502:	or     BYTE PTR [ecx+0x42d0182d],al
  416508:	add    BYTE PTR ds:0xe9000022,bl
  41650e:	test   BYTE PTR [ebx],ah
  416510:	add    BYTE PTR [eax],al
  416512:	sbb    esi,edx
  416514:	sub    al,0xc3
  416516:	jnp    0x4164a3
  416518:	mov    DWORD PTR [ebx+eiz*1-0x520e953e],edx
  41651f:	and    al,0xc2
  416521:	in     eax,dx
  416522:	xor    DWORD PTR [edi+0x79],edx
  416525:	jp     0x41652d
  416527:	pop    edi
  416528:	jp     0x4165a4
  41652a:	mov    ds:0x6366ae32,eax
  41652f:	cli    
  416530:	dec    esp
  416531:	or     BYTE PTR [ebp+esi*4+0x0],bh
  416535:	adc    DWORD PTR [eax],eax
  416537:	(bad)  
  416538:	jno    0x4164e8
  41653a:	clc    
  41653b:	mov    ebp,0xe2603a08
  416540:	jl     0x416551
  416542:	xor    DWORD PTR [ebx],ebx
  416544:	jge    0x4164cc
  416546:	(bad)  
  416547:	std    
  416548:	push   ecx
  416549:	sbb    DWORD PTR [edx+0x14],edx
  41654c:	jg     0x416547
  41654e:	das    
  41654f:	and    eax,0xb7d47f71
  416554:	pop    ecx
  416555:	mov    ch,0xef
  416557:	loope  0x416550
  416559:	add    bl,al
  41655b:	xchg   ebx,eax
  41655c:	mov    esi,0xc2c7f2db
  416561:	jle    0x4165d4
  416563:	or     bh,BYTE PTR [edi+0x59e3df76]
  416569:	test   BYTE PTR [ecx],ch
  41656b:	sub    DWORD PTR [eax],edx
  41656d:	adc    al,0xb8
  41656f:	fldenv [esi]
  416571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416572:	sbb    eax,0xce528b28
  416577:	mov    WORD PTR [eax+edx*4-0x19],gs
  41657b:	icebp  
  41657c:	scas   eax,DWORD PTR es:[edi]
  41657d:	pop    ebx
  41657e:	push   ebp
  41657f:	std    
  416580:	xchg   ebx,eax
  416581:	out    0x8a,eax
  416583:	or     eax,0xf1dc01a4
  416588:	inc    ebx
  416589:	and    eax,0xfa9513e9
  41658e:	arpl   WORD PTR [esi+0x65],cx
  416591:	and    al,0x20
  416593:	into   
  416594:	mov    cl,0xc2
  416596:	jmp    0x668ccbc7
  41659b:	div    BYTE PTR [edx+ebp*8]
  41659e:	add    esp,DWORD PTR [edi-0x76]
  4165a1:	mov    DWORD PTR es:[esi],ecx
  4165a4:	loop   0x4165fa
  4165a6:	jmp    0x3b57c8d0
  4165ab:	mov    dh,0xa5
  4165ad:	ror    eax,1
  4165af:	cmc    
  4165b0:	or     ebx,DWORD PTR [ebp-0x49]
  4165b3:	mov    dh,0x52
  4165b5:	jmp    0x416630
  4165b7:	scas   al,BYTE PTR es:[edi]
  4165b8:	(bad)  
  4165ba:	retf   0x3d31
  4165bd:	out    0x67,al
  4165bf:	xchg   cx,ax
  4165c1:	mov    al,0x51
  4165c3:	xchg   edi,eax
  4165c4:	mov    ebx,0x9a217cf
  4165c9:	xor    BYTE PTR [ebx-0x60],dl
  4165cc:	test   DWORD PTR [esi+0x1e],ebp
  4165cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d0:	lea    esi,[esi-0x7c]
  4165d3:	xchg   ebx,eax
  4165d4:	aad    0x6c
  4165d6:	cs ror edx,1
  4165d9:	dec    esp
  4165da:	cdq    
  4165db:	jno    0x416570
  4165dd:	inc    esi
  4165de:	iret   
  4165df:	cmp    BYTE PTR [eax-0x2f8f5fef],dh
  4165e5:	cs dec esi
  4165e7:	xlat   BYTE PTR ds:[ebx]
  4165e8:	lock lds edi,FWORD PTR [edx+0x18]
  4165ec:	mov    eax,ds:0xcda9c217
  4165f1:	cmp    DWORD PTR [edi-0x68af42cb],0x4049339f
  4165fb:	cmp    DWORD PTR [edx-0x9],esi
  4165fe:	loopne 0x4165b5
  416600:	jne    0x4165e6
  416602:	scas   al,BYTE PTR es:[edi]
  416603:	and    BYTE PTR [edi-0x58],cl
  416606:	shr    DWORD PTR [ecx+ebx*2-0x5d261b92],1
  41660d:	pop    ds
  41660e:	sar    DWORD PTR [eax],1
  416610:	mov    BYTE PTR [ebx+esi*1],bh
  416613:	lods   al,BYTE PTR ds:[esi]
  416614:	sub    edx,ecx
  416616:	xor    DWORD PTR [edi+eiz*8],esi
  416619:	inc    edi
  41661a:	or     BYTE PTR [esi],al
  41661c:	popf   
  41661d:	rcl    DWORD PTR ds:0xcdc881f6,cl
  416623:	mov    ebx,0xecc2dabb
  416628:	jmp    0x416636
  41662a:	push   eax
  41662b:	int    0x20
  41662d:	outs   dx,DWORD PTR ss:[esi]
  41662f:	adc    al,0x62
  416631:	mov    ebx,0x6430bd43
  416636:	xor    DWORD PTR [edi+0x5217120],edx
  41663c:	lds    ebx,FWORD PTR [esi]
  41663e:	mov    esp,DWORD PTR [ecx+0x40]
  416641:	aam    0x45
  416643:	sahf   
  416644:	pop    edx
  416645:	pop    ebp
  416646:	lods   eax,DWORD PTR ds:[esi]
  416647:	fwait
  416648:	xor    ebp,ecx
  41664a:	fdiv   DWORD PTR [edi]
  41664c:	cwde   
  41664d:	fwait
  41664e:	pop    ebp
  41664f:	push   es
  416650:	or     DWORD PTR [ecx+0x48],esp
  416653:	stc    
  416654:	adc    al,0x17
  416656:	and    al,0x2f
  416658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416659:	mov    eax,ds:0x6d0e90c1
  41665e:	lock xchg esp,eax
  416660:	adc    eax,0xdfa0995
  416665:	xchg   esp,eax
  416666:	and    al,0x8f
  416668:	sbb    BYTE PTR [esi-0x6c995ef3],0x9a
  41666f:	addr16 push es
  416671:	inc    ebp
  416673:	popf   
  416674:	loope  0x416693
  416676:	inc    ecx
  416677:	add    BYTE PTR [ecx-0x27a0fb5a],0xec
  41667e:	cld    
  41667f:	std    
  416680:	mov    ecx,0xbf9aee11
  416685:	out    0xaa,al
  416687:	imul   ecx,DWORD PTR [eax],0x7cebb303
  41668d:	dec    edi
  41668e:	jp     0x416672
  416690:	ins    BYTE PTR es:[edi],dx
  416691:	and    ebp,edx
  416693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416694:	std    
  416695:	sub    al,0x2b
  416697:	xor    eax,0x73a5c79a
  41669c:	adc    ah,BYTE PTR [eiz*1-0xeecd991]
  4166a3:	sbb    dh,BYTE PTR [eax+ebp*1-0x3fe7015]
  4166aa:	(bad)  
  4166ac:	add    eax,DWORD PTR [eax+0x10]
  4166af:	in     al,0x0
  4166b1:	mov    bh,0xda
  4166b3:	icebp  
  4166b4:	dec    esp
  4166b5:	or     ebp,DWORD PTR [esi+0x3e]
  4166b8:	add    DWORD PTR [edi],ebp
  4166ba:	ret    
  4166bb:	add    cl,BYTE PTR [edx-0x26]
  4166be:	pop    ds
  4166bf:	xor    BYTE PTR [ecx+0x6],ch
  4166c2:	add    ebp,esi
  4166c4:	jns    0x41664a
  4166c6:	jb     0x416746
  4166c8:	ror    dl,cl
  4166ca:	sahf   
  4166cb:	call   0xa1a7cb68
  4166d0:	addr16 in al,0x1d
  4166d3:	jmp    0x4166a3
  4166d5:	in     eax,0xa1
  4166d7:	and    eax,esi
  4166d9:	test   DWORD PTR [ebx+0x4a],edi
  4166dc:	(bad)  [eax-0x112b4c36]
  4166e2:	hlt    
  4166e3:	xchg   edx,eax
  4166e4:	popf   
  4166e5:	xor    al,0xa6
  4166e7:	add    DWORD PTR [ecx+eiz*1],esp
  4166ea:	jecxz  0x4166f1
  4166ec:	sahf   
  4166ed:	js     0x41668d
  4166ef:	mov    dh,0x6e
  4166f1:	mov    esi,ss
  4166f3:	mov    esi,0x6689ce53
  4166f8:	cld    
  4166f9:	cmp    bl,bh
  4166fb:	iret   
  4166fc:	lea    eax,[edx-0x6abb1143]
  416702:	fld    TBYTE PTR [ebx]
  416704:	loopne 0x41674d
  416706:	jns    0x4166d1
  416708:	add    al,0x6e
  41670a:	lods   al,BYTE PTR ds:[esi]
  41670b:	mov    eax,0x11e6883a
  416710:	pushf  
  416711:	rcl    DWORD PTR [edx+0x1d],1
  416714:	push   ecx
  416715:	and    dl,BYTE PTR [ecx]
  416717:	(bad)  
  416718:	aam    0xba
  41671a:	enter  0x26ba,0xf9
  41671e:	mov    ebx,0x5905a44d
  416723:	jle    0x416708
  416725:	jo     0x41673b
  416727:	cdq    
  416728:	ins    BYTE PTR es:[edi],dx
  416729:	rcl    DWORD PTR [esi-0x79],0x78
  41672d:	ss inc edi
  41672f:	js     0x4166b9
  416731:	xor    DWORD PTR [edx-0x29e2b8ca],0x1dfab585
  41673b:	sbb    BYTE PTR [ebp+0x17],dh
  41673e:	inc    edx
  41673f:	fdivr  QWORD PTR [edx]
  416741:	and    DWORD PTR [esi+0x11],edi
  416744:	loopne 0x416745
  416746:	lods   eax,DWORD PTR ds:[esi]
  416747:	cmp    eax,0x1e4c8098
  41674c:	ins    BYTE PTR es:[edi],dx
  41674d:	jg     0x416776
  41674f:	(bad)  
  416750:	push   cs
  416751:	jmp    0x3bbf1e27
  416756:	or     dh,bl
  416758:	pop    esp
  416759:	out    dx,eax
  41675a:	and    eax,0xfc382252
  41675f:	es dec edx
  416761:	push   ebp
  416762:	pop    es
  416763:	jmp    0x4167b9
  416765:	inc    ecx
  416766:	loop   0x4167d0
  416768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416769:	mov    bl,0xe
  41676b:	cs pop esp
  41676d:	sbb    DWORD PTR [ecx+0x2b],eax
  416770:	jmp    0x4166f9
  416772:	popf   
  416773:	cmp    al,0x48
  416775:	daa    
  416776:	inc    ecx
  416777:	ins    DWORD PTR es:[edi],dx
  416778:	into   
  416779:	jae    0x41673e
  41677b:	std    
  41677c:	and    ebp,DWORD PTR [eax]
  41677e:	xor    ebx,edi
  416780:	data16 ins BYTE PTR es:[edi],dx
  416782:	cdq    
  416783:	icebp  
  416784:	fld    DWORD PTR [edi-0x1]
  416787:	inc    ax
  416789:	sub    al,0x1f
  41678b:	and    al,0x75
  41678d:	je     0x4167f0
  41678f:	mov    edi,0xa149128a
  416794:	inc    esi
  416795:	add    esp,ebp
  416797:	adc    DWORD PTR [eax+0x6bc52bd6],esi
  41679d:	call   0xa59f:0x8c6254cc
  4167a4:	add    BYTE PTR cs:[edx+ebp*1-0x36e16460],ch
  4167ac:	mov    DWORD PTR [ecx-0x3f2738a0],esi
  4167b2:	retf   
  4167b3:	lahf   
  4167b4:	addr16 cmp al,0xd5
  4167b7:	pop    ebp
  4167b8:	pop    ds
  4167b9:	mov    cl,BYTE PTR [edi]
  4167bb:	pop    ss
  4167bc:	mov    BYTE PTR [edi+0x35dbb2d6],0xf8
  4167c3:	adc    BYTE PTR [ecx+0x1e],dl
  4167c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c7:	push   ds
  4167c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c9:	push   ds
  4167ca:	pop    ecx
  4167cb:	cmp    edx,eax
  4167cd:	dec    ebx
  4167ce:	xchg   DWORD PTR es:[ecx+0x15],ecx
  4167d2:	data16 xor BYTE PTR [edi+0x2],al
  4167d6:	test   BYTE PTR [ebx+0x346c1001],0xdc
  4167dd:	sub    BYTE PTR [ebp+0x50],0x7d
  4167e1:	cmp    BYTE PTR [esp+edi*1-0x63],ah
  4167e5:	and    esp,DWORD PTR [ecx-0x3b5e93c1]
  4167eb:	jb     0x41677b
  4167ed:	loop   0x4167dd
  4167ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f0:	jmp    0xf3a9:0x75a19275
  4167f7:	mov    ebp,0x30465311
  4167fc:	pop    es
  4167fd:	div    BYTE PTR [edx-0x52115a4c]
  416803:	mov    WORD PTR [edx],cs
  416805:	sahf   
  416806:	jnp    0x416812
  416808:	sbb    bh,ch
  41680a:	aad    0x42
  41680c:	mov    bh,0xa1
  41680e:	and    DWORD PTR [ecx],edx
  416810:	sbb    edi,DWORD PTR [esi+0x49]
  416813:	dec    ebx
  416814:	add    dh,BYTE PTR [edx]
  416816:	fbld   TBYTE PTR [ebx-0x29bb8162]
  41681c:	shr    BYTE PTR [ebx-0x5e725a6b],0x43
  416823:	jg     0x416882
  416825:	cmp    DWORD PTR [ecx-0xd],0x17
  416829:	addr16 ret 
  41682b:	mov    ah,0xb3
  41682d:	lods   eax,DWORD PTR ds:[esi]
  41682e:	sub    bh,BYTE PTR [esi]
  416830:	pop    ss
  416831:	cmp    DWORD PTR [esi+0x6e5837d6],eax
  416837:	les    esp,FWORD PTR [esi+0x70]
  41683a:	jmp    0x1867:0x17ad7279
  416841:	hlt    
  416842:	and    edi,0xddda638a
  416848:	hlt    
  416849:	jge    0x416874
  41684b:	and    al,0xed
  41684d:	shl    DWORD PTR [eax],0x70
  416850:	inc    edi
  416851:	or     eax,0x2151b0e2
  416856:	cmp    BYTE PTR [edi+0x66],cl
  416859:	jne    0x4167e0
  41685b:	xchg   edi,eax
  41685c:	cwde   
  41685d:	jecxz  0x416882
  41685f:	jb     0x4168c5
  416861:	ret    0x6763
  416864:	(bad)  
  416865:	xchg   esp,eax
  416866:	cdq    
  416867:	mov    edi,0x92ee9c6e
  41686c:	mov    al,ds:0x26a73273
  416871:	loop   0x4168d2
  416873:	aam    0x26
  416875:	lods   al,BYTE PTR ds:[esi]
  416876:	push   ecx
  416877:	inc    edi
  416878:	jg     0x4168ac
  41687a:	(bad)  [eax+0x59]
  41687d:	pop    esp
  41687e:	sbb    ecx,esi
  416880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416881:	sub    al,0xcb
  416883:	out    dx,eax
  416884:	mov    eax,ds:0x39810a29
  416889:	pusha  
  41688a:	add    al,0x9f
  41688c:	fcom   QWORD PTR [edx+0x6]
  41688f:	loop   0x4168dd
  416891:	outs   dx,BYTE PTR ds:[esi]
  416892:	outs   dx,BYTE PTR ds:[esi]
  416893:	fcmovne st,st(3)
  416895:	xchg   ecx,eax
  416896:	in     al,0xfc
  416898:	dec    ebp
  416899:	xor    BYTE PTR [ebx-0x68],bl
  41689c:	and    edx,DWORD PTR [edi+0x22d2a176]
  4168a2:	out    0xee,eax
  4168a4:	mov    ebx,0x259d927e
  4168a9:	xor    eax,0xd642ee1
  4168ae:	cmp    ebx,DWORD PTR [eax-0x54]
  4168b1:	or     eax,0xce722560
  4168b6:	sbb    ebp,DWORD PTR [ebp-0x18]
  4168b9:	or     eax,0xc08a50af
  4168be:	int    0xa
  4168c0:	jmp    0xa483:0xefc2830
  4168c7:	mov    bh,0x2d
  4168c9:	arpl   di,sp
  4168cb:	pusha  
  4168cc:	retf   0x5bc
  4168cf:	and    DWORD PTR [ebx],ecx
  4168d1:	sbb    al,0x79
  4168d3:	pop    esp
  4168d4:	fisttp WORD PTR [ebx]
  4168d6:	push   edi
  4168d7:	fstp   TBYTE PTR [edx]
  4168d9:	push   edi
  4168da:	adc    eax,0x63f69e87
  4168df:	in     al,dx
  4168e0:	mov    dh,0x35
  4168e2:	mulps  xmm4,xmm5
  4168e5:	xor    ah,BYTE PTR [ebp-0x11]
  4168e8:	or     DWORD PTR [eax+0x4258c6e],esp
  4168ee:	or     al,cl
  4168f0:	lock dec eax
  4168f2:	cli    
  4168f3:	push   ebx
  4168f4:	popf   
  4168f5:	pop    DWORD PTR [edx]
  4168f7:	fdiv   QWORD PTR [eax+0x406b7716]
  4168fd:	lods   al,BYTE PTR ds:[esi]
  4168fe:	pop    ebx
  4168ff:	adc    DWORD PTR [ebp+eiz*4-0x1b2af13f],ebp
  416906:	jl     0x416939
  416908:	not    ch
  41690a:	aad    0xd
  41690c:	xor    esp,ecx
  41690e:	adc    DWORD PTR [ebx],esp
  416910:	cld    
  416911:	or     ebx,DWORD PTR [ecx+0x5085fb40]
  416917:	(bad)  
  416919:	repnz data16 fild WORD PTR es:[ecx+0x1]
  41691f:	lea    eax,[ebp+0x57]
  416922:	jge    0x41698e
  416924:	daa    
  416925:	fiadd  DWORD PTR [bx+si]
  416928:	repnz pop esi
  41692a:	popa   
  41692b:	push   esi
  41692c:	dec    ecx
  41692d:	mov    eax,ds:0xb322cd17
  416932:	xchg   esp,eax
  416933:	push   ebp
  416934:	lahf   
  416935:	repz (bad) 
  416937:	rcl    BYTE PTR [edi+0x4c],1
  41693a:	xchg   DWORD PTR ds:0x56fdc857,edi
  416940:	sub    al,0xaf
  416942:	pop    ds
  416943:	xchg   edi,eax
  416944:	cmp    eax,0xe664b028
  416949:	cmp    BYTE PTR [edi+0x2affb5b5],ah
  41694f:	ja     0x4168f3
  416951:	fisttp WORD PTR [ecx+0x14]
  416954:	dec    eax
  416955:	cmp    ah,BYTE PTR [edx]
  416957:	in     eax,0xe
  416959:	or     eax,0x2f25cf33
  41695e:	jecxz  0x416970
  416960:	mov    eax,0x84574342
  416965:	inc    edi
  416966:	xor    eax,0x4cbb2392
  41696b:	push   ecx
  41696c:	mov    edx,0x8fc0de24
  416971:	rcl    BYTE PTR [esi+0xb583810],1
  416977:	mov    ecx,0x2d0d835
  41697c:	int3   
  41697d:	dec    ebx
  41697e:	ficomp WORD PTR [edx-0x53aa5364]
  416984:	push   ss
  416985:	mov    ds:0xe0081a92,al
  41698a:	sbb    al,0x4b
  41698c:	xchg   ecx,eax
  41698d:	and    DWORD PTR [ebx+0x7],esi
  416990:	dec    esi
  416991:	mov    bl,0xb4
  416993:	xchg   edi,eax
  416994:	daa    
  416995:	sbb    DWORD PTR [esi],esi
  416997:	xchg   edx,eax
  416998:	mov    ch,0xd4
  41699a:	pusha  
  41699b:	mov    eax,ds:0x1ea4116a
  4169a0:	xchg   DWORD PTR [edi-0x42],ecx
  4169a3:	mov    ds:0x835ee29b,al
  4169a8:	sahf   
  4169a9:	daa    
  4169aa:	sbb    eax,0xf3f685e5
  4169af:	(bad)  
  4169b0:	daa    
  4169b1:	mov    al,0x6e
  4169b3:	popw   es
  4169b5:	or     edi,DWORD PTR [edx+0x1112e47f]
  4169bb:	sbb    DWORD PTR [esi],ebp
  4169bd:	out    dx,eax
  4169be:	pop    edi
  4169bf:	xchg   ebx,eax
  4169c0:	inc    ebp
  4169c1:	xor    al,0x29
  4169c3:	pushf  
  4169c4:	cmp    eax,0x9c40f539
  4169c9:	cmp    al,al
  4169cb:	jmp    0xfaf63416
  4169d0:	in     eax,0x1f
  4169d2:	sbb    BYTE PTR [esi-0x6f],ch
  4169d5:	cmp    dl,BYTE PTR [esi-0x31]
  4169d8:	jg     0x4169f8
  4169da:	movsx  esp,WORD PTR [esi]
  4169dd:	ja     0x416a06
  4169df:	mov    esp,0x46e9e1bd
  4169e4:	or     esp,esp
  4169e6:	shl    DWORD PTR [edx+esi*4],0x96
  4169ea:	xchg   esi,eax
  4169eb:	test   eax,0xdcc7e68e
  4169f0:	ja     0x416993
  4169f2:	lock or eax,0x9631edd6
  4169f8:	(bad)
  4169fc:	mov    ds:0xcdfccd3e,eax
  416a01:	aam    0xc0
  416a03:	mov    al,ds:0x6fced670
  416a08:	std    
  416a09:	ret    0xfcbd
  416a0c:	sbb    eax,0x2f58e098
  416a11:	mov    WORD PTR [edx+0x4fa0d816],ds
  416a17:	scas   eax,DWORD PTR es:[edi]
  416a18:	stos   DWORD PTR es:[edi],eax
  416a19:	leave  
  416a1a:	sti    
  416a1b:	in     eax,0x1a
  416a1d:	jle    0x416a34
  416a1f:	sub    DWORD PTR [edx+0x6c],esi
  416a22:	cld    
  416a23:	push   ebp
  416a24:	dec    edx
  416a25:	pop    ds
  416a26:	shl    ebx,1
  416a28:	into   
  416a29:	fdiv   QWORD PTR [eax+0x67d83ae1]
  416a2f:	push   esi
  416a30:	push   0x8be02a78
  416a35:	mov    ch,BYTE PTR [ecx-0x49d0fc71]
  416a3b:	mov    bh,0xc
  416a3d:	stc    
  416a3e:	ja     0x416a71
  416a40:	push   ds
  416a41:	adc    BYTE PTR [eax-0x6010efb],ah
  416a47:	sub    bl,bh
  416a49:	aad    0xed
  416a4b:	add    WORD PTR ss:[ebx-0x5a],sp
  416a50:	xor    eax,0x4b1305b4
  416a55:	or     DWORD PTR ds:[esi-0x50],esp
  416a59:	jae    0x416a30
  416a5b:	jecxz  0x4169f5
  416a5d:	sub    esp,DWORD PTR [ebx]
  416a5f:	or     ecx,DWORD PTR [eax]
  416a61:	arpl   WORD PTR [eax],cx
  416a63:	jmp    0xb0e6a992
  416a68:	lods   al,BYTE PTR ds:[esi]
  416a69:	(bad)  
  416a6a:	sahf   
  416a6b:	pop    edi
  416a6c:	sub    al,0x3d
  416a6e:	inc    edx
  416a6f:	fwait
  416a70:	test   DWORD PTR [ecx+0x59e8c86c],ebp
  416a76:	sbb    al,0x6
  416a78:	mov    ds:0x530c82ad,al
  416a7d:	add    al,BYTE PTR [ebp-0x3f66b750]
  416a83:	adc    cl,al
  416a85:	mov    al,0xda
  416a87:	or     al,0x8d
  416a89:	and    al,0x38
  416a8b:	iret   
  416a8c:	xchg   esi,eax
  416a8d:	fwait
  416a8e:	imul   DWORD PTR [edi-0x95865c0]
  416a94:	lods   al,BYTE PTR ds:[esi]
  416a95:	pop    esi
  416a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a97:	mov    ds:0xea8e5ecf,al
  416a9c:	jbe    0x416a29
  416a9e:	pop    ebx
  416a9f:	mov    ebp,0x14eea2f4
  416aa4:	pop    edi
  416aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa6:	jecxz  0x416add
  416aa8:	rcr    bh,cl
  416aaa:	pushf  
  416aab:	mov    BYTE PTR [ecx-0x37],ch
  416aae:	fs scas eax,DWORD PTR es:[edi]
  416ab0:	add    al,BYTE PTR [esi]
  416ab2:	shr    cl,cl
  416ab4:	jmp    0x416aa3
  416ab6:	frstpm(287 only) 
  416ab8:	xchg   ebp,eax
  416ab9:	fwait
  416aba:	pop    esp
  416abb:	std    
  416abc:	add    BYTE PTR [edi-0x51],dh
  416abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac0:	lock adc ebp,DWORD PTR ds:0x559dcb3a
  416ac7:	add    esi,DWORD PTR [edi]
  416ac9:	push   ebp
  416aca:	hlt    
  416acb:	pop    esp
  416acc:	dec    ebx
  416acd:	inc    ebp
  416ace:	enter  0xdb97,0x10
  416ad2:	jmp    0x5f1b:0x5b976fe
  416ad9:	push   esi
  416ada:	stc    
  416adb:	cmp    bl,ah
  416add:	mov    BYTE PTR [edi+ebx*4+0x37d3f15d],bl
  416ae4:	dec    esi
  416ae5:	(bad)
  416ae8:	iret   
  416ae9:	push   0xf27666d5
  416aee:	(bad)  
  416aef:	js     0x416aa4
  416af1:	sub    BYTE PTR [eax+eiz*4-0x548e95ee],bh
  416af8:	aas    
  416af9:	mov    eax,ds:0x2a5ddd03
  416afe:	mov    ecx,0x15212c25
  416b03:	cmp    cl,BYTE PTR [di-0x4c]
  416b07:	popa   
  416b08:	outs   dx,DWORD PTR ds:[esi]
  416b09:	gs ins BYTE PTR es:[edi],dx
  416b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0c:	sbb    bl,BYTE PTR [eax]
  416b0e:	xor    ebp,0xa
  416b11:	push   eax
  416b12:	push   ebx
  416b13:	push   edx
  416b14:	cmp    cl,ch
  416b16:	pop    ebx
  416b17:	sbb    edx,DWORD PTR [ebp+esi*8+0x7a61749c]
  416b1e:	dec    edi
  416b1f:	push   ebp
  416b20:	adc    al,0xbd
  416b22:	xor    DWORD PTR [eax],0xffffffe6
  416b25:	cmp    eax,0xca558489
  416b2a:	stc    
  416b2b:	or     eax,0x51fe6aa5
  416b30:	adc    al,0xc7
  416b32:	push   ss
  416b33:	mov    BYTE PTR [ecx-0x3d],al
  416b36:	dec    eax
  416b37:	dec    edx
  416b38:	push   esp
  416b39:	push   0xffffff85
  416b3b:	add    ecx,DWORD PTR [ebx]
  416b3d:	gs push ebx
  416b3f:	retf   0xaa3d
  416b42:	mov    dl,0x48
  416b44:	cld    
  416b45:	add    cl,bh
  416b47:	imul   edi,DWORD PTR [ebx],0xd
  416b4a:	jae    0x416b7a
  416b4c:	sar    bh,cl
  416b4e:	mov    edi,0xf2db7804
  416b53:	jno    0x416b5c
  416b55:	push   ds
  416b56:	adc    BYTE PTR [edx],bh
  416b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b59:	loop   0x416b78
  416b5b:	inc    eax
  416b5c:	and    BYTE PTR [ebp+0x4d7ca985],cl
  416b62:	cmp    al,BYTE PTR [ebp+ebp*1+0x665cbd1d]
  416b69:	mov    ebx,DWORD PTR [eax]
  416b6b:	jecxz  0x416b59
  416b6d:	or     cl,BYTE PTR [ebx]
  416b6f:	fsubr  st,st(4)
  416b71:	push   ds
  416b72:	xor    ebx,DWORD PTR [esi-0x64596369]
  416b78:	xchg   bh,bh
  416b7a:	mov    ah,0x26
  416b7c:	push   ebx
  416b7d:	mov    edi,0x9106ea0a
  416b82:	aaa    
  416b83:	mov    edi,0xc1896230
  416b88:	sbb    ecx,DWORD PTR [edx+0x14]
  416b8b:	rol    DWORD PTR [eax],cl
  416b8d:	lods   al,BYTE PTR ds:[esi]
  416b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b8f:	and    BYTE PTR [esi],bh
  416b91:	mov    ds:0xd0c11635,eax
  416b96:	or     bh,BYTE PTR [edi-0xeea3002]
  416b9c:	mov    edx,0x9f9f15b4
  416ba1:	lods   al,BYTE PTR ds:[esi]
  416ba2:	or     ebp,ebx
  416ba4:	aas    
  416ba5:	cwde   
  416ba6:	clc    
  416ba7:	jae    0x416b89
  416ba9:	xor    ah,BYTE PTR [edi]
  416bab:	aas    
  416bac:	and    ch,BYTE PTR [edi-0x67]
  416baf:	xchg   edx,edi
  416bb1:	pop    ss
  416bb2:	test   al,0x5b
  416bb4:	test   eax,0x9fab67ae
  416bb9:	stos   BYTE PTR es:[edi],al
  416bba:	repnz adc bh,BYTE PTR [edi]
  416bbd:	or     bl,dl
  416bbf:	add    BYTE PTR [ecx+0x60],bh
  416bc2:	aaa    
  416bc3:	loopne 0x416bfa
  416bc5:	mov    eax,ds:0x38459a0d
  416bca:	(bad)  [ebx-0x29]
  416bcd:	popf   
  416bce:	out    dx,al
  416bcf:	ins    DWORD PTR es:[edi],dx
  416bd0:	push   edi
  416bd1:	mov    edx,0x36bb06e3
  416bd6:	adc    bh,BYTE PTR [edi]
  416bd8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416bda:	push   ss
  416bdb:	xchg   esp,eax
  416bdc:	sbb    cl,BYTE PTR [ecx+edx*8]
  416bdf:	pop    ecx
  416be0:	sub    dl,ah
  416be2:	push   ebp
  416be3:	(bad)  
  416be4:	xor    bh,BYTE PTR [edi+0x51405514]
  416bea:	fwait
  416beb:	stc    
  416bec:	xchg   ebp,eax
  416bed:	sbb    esi,DWORD PTR [ebp+edi*2+0x17]
  416bf1:	sub    ch,bh
  416bf3:	mov    cl,0xca
  416bf5:	test   edi,edi
  416bf7:	and    BYTE PTR [eax],dh
  416bf9:	dec    ebx
  416bfa:	dec    esi
  416bfb:	xor    ecx,DWORD PTR [ebp+0x3e]
  416bfe:	add    DWORD PTR [edx],esi
  416c00:	mov    dl,BYTE PTR [ebp-0x1c]
  416c03:	mov    ds:0xeb4f2cf6,al
  416c08:	test   al,0x23
  416c0a:	mov    DWORD PTR [ebx+0x5d],edi
  416c0d:	mov    ah,0xe0
  416c0f:	cmp    BYTE PTR [edi+0x11],bl
  416c12:	mov    bl,0xf4
  416c14:	in     eax,0xd6
  416c16:	xchg   esp,eax
  416c17:	adc    al,0x62
  416c19:	enter  0xd99f,0xb3
  416c1d:	mov    ecx,0x19edf156
  416c22:	or     al,0xc9
  416c24:	sahf   
  416c25:	js     0x416baf
  416c27:	(bad)  
  416c28:	sbb    ch,al
  416c2a:	retf   0xc8ec
  416c2d:	add    cl,cl
  416c2f:	xchg   ebx,eax
  416c30:	faddp  st(1),st
  416c32:	or     al,0xa5
  416c34:	jb     0x416c3b
  416c36:	sbb    edx,0xffffff8c
  416c39:	repnz push ss
  416c3b:	sbb    al,0x56
  416c3d:	faddp  st(3),st
  416c3f:	scas   ax,WORD PTR es:[edi]
  416c41:	inc    ebp
  416c42:	inc    ebp
  416c43:	test   DWORD PTR [edi-0xa1039fe],ebx
  416c49:	jg     0x416c38
  416c4b:	adc    esi,DWORD PTR [ebp-0x3c]
  416c4e:	push   ss
  416c4f:	lods   eax,DWORD PTR ds:[esi]
  416c50:	(bad)  
  416c51:	jp     0x416c00
  416c53:	xchg   edx,eax
  416c54:	imul   edx,DWORD PTR [ebx],0x322ec33d
  416c5a:	xchg   DWORD PTR [eax-0x69],ebx
  416c5d:	mov    ah,0xb0
  416c5f:	or     esp,ecx
  416c61:	mov    ?,WORD PTR [edi+0x19b0cd7d]
  416c67:	in     eax,0xc4
  416c69:	mov    cl,0x36
  416c6b:	jmp    0x416c8e
  416c6d:	popa   
  416c6e:	mov    al,ds:0x3b05f8b8
  416c73:	gs int3 
  416c75:	fwait
  416c76:	pop    ss
  416c77:	or     al,0x67
  416c79:	xchg   esi,eax
  416c7a:	inc    edx
  416c7b:	(bad)  
  416c7c:	je     0x416c4d
  416c7e:	mov    al,0xcb
  416c80:	test   al,0xd
  416c82:	cld    
  416c83:	mov    esp,0xa850ed2e
  416c88:	into   
  416c89:	and    al,0xcb
  416c8b:	cli    
  416c8c:	sahf   
  416c8d:	dec    ebp
  416c8e:	mov    eax,ds:0x1b668cb4
  416c93:	lahf   
  416c94:	nop
  416c95:	inc    edi
  416c96:	jle    0x416ca7
  416c98:	call   0xb656:0x12f0bd56
  416c9f:	xchg   esi,eax
  416ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca1:	dec    edx
  416ca2:	inc    ebp
  416ca3:	push   eax
  416ca4:	leave  
  416ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ca6:	dec    edx
  416ca7:	out    0x67,al
  416ca9:	and    esi,DWORD PTR [edi]
  416cab:	mov    esp,0xc105888c
  416cb0:	cmc    
  416cb1:	hlt    
  416cb2:	into   
  416cb3:	mov    ebp,0x93cfab5b
  416cb8:	fild   QWORD PTR ds:0x4e496f08
  416cbe:	pop    ss
  416cbf:	inc    esp
  416cc0:	(bad)  
  416cc1:	fimul  WORD PTR ds:0xcd5da479
  416cc7:	mov    ds:0x90a038ca,al
  416ccc:	pop    ecx
  416ccd:	jo     0x416c7a
  416ccf:	jno    0x416d1e
  416cd1:	test   ebx,ebx
  416cd3:	xor    esp,edi
  416cd5:	mov    cl,0xdc
  416cd7:	jp     0x416cc8
  416cd9:	push   0x4e6ed134
  416cde:	mov    eax,0xbd6f6cb7
  416ce3:	fld    TBYTE PTR [edx+0x6e]
  416ce6:	mov    bl,0xd
  416ce8:	test   DWORD PTR [eax-0x210803f1],eax
  416cee:	sbb    DWORD PTR [ecx+0xbe6c2a6],0x26d057f
  416cf8:	dec    esp
  416cf9:	and    BYTE PTR [edi-0x57b0d2ce],cl
  416cff:	fld    QWORD PTR [edi+0x11]
  416d02:	sbb    bl,BYTE PTR [ebp+0x47]
  416d05:	sbb    ebp,0x27
  416d08:	push   ecx
  416d09:	jecxz  0x416ce1
  416d0b:	cmp    al,0x1e
  416d0d:	sub    al,0xb6
  416d0f:	hlt    
  416d10:	jmp    0x416d2d
  416d12:	xlat   BYTE PTR ds:[ebx]
  416d13:	mov    al,0xc4
  416d15:	sahf   
  416d16:	inc    DWORD PTR [ecx]
  416d18:	push   ss
  416d19:	enter  0xd2ec,0xa1
  416d1d:	aaa    
  416d1e:	push   ss
  416d1f:	jecxz  0x416d1c
  416d21:	fs (bad) 
  416d23:	clc    
  416d24:	out    0xa2,eax
  416d26:	rcl    DWORD PTR fs:[ecx-0x33],1
  416d2a:	sub    eax,0x2ebd0d7a
  416d2f:	mov    al,0xd6
  416d31:	mov    eax,ds:0xf5c479af
  416d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d37:	ficomp DWORD PTR [edx-0x7b]
  416d3a:	push   es
  416d3b:	cdq    
  416d3c:	xor    ecx,DWORD PTR [esi]
  416d3e:	mov    eax,ds:0xce629d44
  416d43:	dec    ebp
  416d44:	adc    eax,0xf9bfe393
  416d49:	or     eax,0xac36407e
  416d4e:	add    cl,BYTE PTR [edx-0x22a8a42e]
  416d54:	inc    esp
  416d55:	retf   
  416d56:	imul   edx,DWORD PTR [edx+0x3752a430],0xffffffd1
  416d5d:	add    eax,ebx
  416d5f:	xor    DWORD PTR ds:0x2818cef3,ecx
  416d65:	sub    ch,BYTE PTR [esi-0x14]
  416d68:	pop    DWORD PTR [edx-0x5d4daf56]
  416d6e:	out    0x83,al
  416d70:	pop    ds
  416d71:	(bad)  
  416d72:	cmc    
  416d73:	cmc    
  416d74:	leave  
  416d75:	mov    al,0x72
  416d77:	and    eax,edi
  416d79:	sub    ecx,DWORD PTR [edx+0x4cf2277f]
  416d7f:	mov    DWORD PTR [esi-0x57],ecx
  416d82:	pop    ebx
  416d83:	aam    0x21
  416d85:	pop    eax
  416d86:	ffree  st(4)
  416d88:	adc    al,0x1e
  416d8a:	pop    edx
  416d8b:	fnsave [esi+0x51]
  416d8e:	out    0x54,eax
  416d90:	out    0xbb,al
  416d92:	retf   0x3153
  416d95:	fwait
  416d96:	dec    ebx
  416d97:	cld    
  416d98:	lods   eax,DWORD PTR ds:[esi]
  416d99:	mov    BYTE PTR [edi],dl
  416d9b:	fld    TBYTE PTR [eax]
  416d9d:	push   ds
  416d9e:	add    bh,cl
  416da0:	sub    ebp,DWORD PTR [ebp+esi*1+0x12]
  416da4:	xchg   ebp,eax
  416da5:	pop    esp
  416da6:	ss ins DWORD PTR es:[edi],dx
  416da8:	mov    ds:0x4b1e1b4,al
  416dad:	int    0x13
  416daf:	in     eax,0xd7
  416db1:	xlat   BYTE PTR ds:[bx]
  416db3:	cdq    
  416db4:	mov    esp,DWORD PTR [esi+edi*4-0x69]
  416db8:	rol    BYTE PTR [ebx-0x33],1
  416dbb:	jbe    0x416df0
  416dbd:	out    dx,eax
  416dbe:	ds sbb cl,BYTE PTR fs:[ebp+edi*2-0x2d259c05]
  416dc7:	mov    eax,0xff34ab65
  416dcc:	push   ss
  416dcd:	jb     0x416dda
  416dcf:	bound  eax,QWORD PTR [ebx]
  416dd1:	lahf   
  416dd2:	loop   0x416dbe
  416dd4:	push   0x7d6eab11
  416dd9:	inc    ecx
  416dda:	enter  0x7f51,0xa8
  416dde:	rol    DWORD PTR [ecx+esi*4-0x389a2873],0x5b
  416de6:	xchg   ecx,eax
  416de7:	loopne 0x416db8
  416de9:	mov    al,ds:0x6e386036
  416dee:	fwait
  416def:	mov    ch,0xff
  416df1:	and    eax,0x4da2720f
  416df6:	xchg   esi,eax
  416df7:	or     BYTE PTR [edx],0xf2
  416dfa:	mov    esp,0xdac23694
  416dff:	lock pop ss
  416e01:	push   0xfaa5350e
  416e06:	xlat   BYTE PTR ds:[ebx]
  416e07:	jl     0x416da6
  416e09:	mov    edi,0x9833f491
  416e0e:	pop    eax
  416e0f:	fild   WORD PTR [edx-0x43fd301e]
  416e15:	cmp    DWORD PTR [edx-0x16],ebp
  416e18:	and    eax,0xd7f35819
  416e1d:	imul   edx,DWORD PTR [ecx+0x7fb74177],0xffffffd8
  416e24:	sub    esi,edx
  416e26:	retf   
  416e27:	jns    0x416e66
  416e29:	call   DWORD PTR [edx]
  416e2b:	mov    ebp,0x970ce388
  416e30:	jb     0x416e01
  416e32:	ror    BYTE PTR [ecx+0x6431f9e3],1
  416e38:	add    al,0xc3
  416e3a:	pop    ebp
  416e3b:	mov    bl,0x38
  416e3d:	dec    edx
  416e3e:	jmp    0x5a1b3fbe
  416e43:	leave  
  416e44:	ins    BYTE PTR es:[edi],dx
  416e45:	cmp    eax,0x20009eb5
  416e4a:	jl     0x416e48
  416e4c:	adc    bl,BYTE PTR [ecx-0x167e1987]
  416e52:	loopne 0x416e4c
  416e54:	dec    ebp
  416e55:	adc    BYTE PTR [edx+0xd],bh
  416e58:	or     DWORD PTR [esi],edi
  416e5a:	ins    DWORD PTR es:[edi],dx
  416e5b:	je     0x416de8
  416e5d:	mov    ds:0xdb12bac5,al
  416e62:	nop
  416e63:	inc    ebp
  416e64:	in     eax,dx
  416e65:	mov    edx,0xa3b2474f
  416e6a:	xchg   DWORD PTR [edx+0x16c3b1a],eax
  416e70:	or     dh,BYTE PTR [ecx]
  416e72:	cmp    edi,DWORD PTR [eax+0x4ae7263]
  416e78:	fisttp WORD PTR [esp+ecx*8-0x11]
  416e7c:	and    bl,BYTE PTR [edi-0x49445da8]
  416e82:	mov    al,ds:0x11554c91
  416e87:	xchg   al,cl
  416e89:	push   es
  416e8a:	repz adc DWORD PTR [edx+0x679dc537],ebp
  416e91:	mov    bl,0x99
  416e93:	cmp    ebp,DWORD PTR [eax+0x16]
  416e96:	jnp    0x416e7b
  416e98:	push   ebx
  416e99:	jmp    0x416f16
  416e9b:	(bad)  
  416e9c:	stc    
  416e9d:	ja     0x416e80
  416e9f:	(bad)  
  416ea0:	in     al,dx
  416ea1:	sbb    DWORD PTR [ebx+0x5e],edx
  416ea4:	cld    
  416ea5:	xchg   esp,eax
  416ea6:	lods   eax,DWORD PTR ds:[esi]
  416ea7:	rcl    BYTE PTR [ecx-0x54],0x40
  416eab:	scas   al,BYTE PTR es:[edi]
  416eac:	push   ds
  416ead:	mov    cl,BYTE PTR [edi+edx*1-0x7f]
  416eb1:	rcr    DWORD PTR [ecx-0x26eb9979],cl
  416eb7:	je     0x416e40
  416eb9:	ja     0x416e8a
  416ebb:	scas   eax,DWORD PTR es:[edi]
  416ebc:	ret    
  416ebd:	add    bh,bh
  416ebf:	add    DWORD PTR [esi-0x11],ebx
  416ec2:	cmp    al,0x9a
  416ec4:	push   esp
  416ec6:	push   edx
  416ec7:	inc    esi
  416ec8:	lea    edx,[ebx-0x27e82a5c]
  416ece:	mov    ebx,es
  416ed0:	mov    dh,al
  416ed2:	xchg   ebp,eax
  416ed3:	not    BYTE PTR [esi-0x278ac178]
  416ed9:	xor    BYTE PTR ds:[ecx+0xc88e326],dh
  416ee0:	pop    ebp
  416ee1:	jge    0x416ea1
  416ee3:	and    ecx,ecx
  416ee5:	mov    ecx,0x37ce8515
  416eea:	mov    WORD PTR [ecx],gs
  416eec:	cli    
  416eed:	iret   
  416eee:	call   0xbdafdb51
  416ef3:	cmp    al,0x14
  416ef5:	jb     0x416efd
  416ef7:	fdivr  st(7),st
  416ef9:	jbe    0x416f01
  416efb:	(bad)  
  416efc:	imul   BYTE PTR [ecx]
  416efe:	aas    
  416eff:	add    eax,0x70953109
  416f04:	outs   dx,DWORD PTR ds:[esi]
  416f05:	fadd   QWORD PTR [esi]
  416f07:	dec    esp
  416f08:	test   eax,0x2f5c3c09
  416f0d:	mov    bh,0x91
  416f0f:	mov    eax,0x1f18b769
  416f14:	scas   al,BYTE PTR es:[edi]
  416f15:	mov    ds:0x5f18a7f0,al
  416f1a:	test   al,0x7d
  416f1c:	arpl   WORD PTR [ecx-0x78],si
  416f1f:	xor    DWORD PTR [ebp+0x48],ebp
  416f22:	mov    ecx,?
  416f24:	add    eax,0x6c1a6883
  416f29:	loope  0x416ebc
  416f2b:	pop    eax
  416f2c:	ins    BYTE PTR es:[edi],dx
  416f2d:	jmp    0x3c16e2cf
  416f32:	push   esp
  416f33:	or     ch,BYTE PTR [eax+0x9]
  416f36:	cmp    ebp,esi
  416f38:	imul   eax,edx,0x40
  416f3b:	push   ebp
  416f3c:	add    al,0xe1
  416f3e:	(bad)  
  416f3f:	(bad)  
  416f40:	addr16 out dx,al
  416f42:	or     BYTE PTR [edx-0x3c],ch
  416f45:	inc    esi
  416f46:	mov    al,0xc6
  416f48:	mov    esp,0x6c26707b
  416f4d:	popf   
  416f4e:	add    DWORD PTR ds:0x5307b84b,ebx
  416f54:	cld    
  416f55:	xchg   ecx,eax
  416f56:	add    esi,DWORD PTR [ecx]
  416f58:	pop    es
  416f59:	and    ebp,ecx
  416f5b:	add    BYTE PTR [ebp+0x194c8544],dl
  416f61:	adc    BYTE PTR [ebx+0x39903c7a],bh
  416f67:	arpl   WORD PTR [ebx],bx
  416f69:	mov    edi,DWORD PTR [edi]
  416f6b:	leave  
  416f6c:	popa   
  416f6d:	or     ebp,DWORD PTR [eax+0x459f432d]
  416f73:	push   cs
  416f74:	jl     0x416fe3
  416f76:	es mov bl,0xc7
  416f79:	xor    al,0xa3
  416f7b:	dec    ecx
  416f7c:	jle    0x416f56
  416f7e:	shl    BYTE PTR [ebx],1
  416f80:	mov    edi,0x2271be48
  416f85:	mov    ds:0xf49bfb93,eax
  416f8a:	mov    eax,0x41a0ef38
  416f8f:	add    bl,ch
  416f91:	push   edi
  416f92:	cmp    ah,BYTE PTR [ebp-0x3e]
  416f95:	div    BYTE PTR [edx-0x58]
  416f98:	or     BYTE PTR [edi],0xd7
  416f9b:	(bad)  
  416f9c:	js     0x416f36
  416f9e:	aam    0x4b
  416fa0:	or     BYTE PTR [di],0xb1
  416fa4:	inc    BYTE PTR ds:0xc5377de
  416faa:	out    dx,al
  416fab:	lock and eax,0x2be038a3
  416fb1:	jno    0x416ffb
  416fb3:	mov    ah,bl
  416fb5:	fwait
  416fb6:	(bad)  
  416fb7:	nop
  416fb8:	pop    edx
  416fb9:	sahf   
  416fba:	call   0x18b:0x7c47afb1
  416fc1:	test   DWORD PTR [eax],eax
  416fc3:	and    eax,esi
  416fc5:	nop
  416fc6:	add    eax,0x6445901d
  416fcb:	sub    ah,bl
  416fcd:	mov    cl,BYTE PTR [ecx]
  416fcf:	aas    
  416fd0:	inc    edi
  416fd1:	xchg   esi,eax
  416fd2:	push   esi
  416fd3:	fsubr  DWORD PTR [eax]
  416fd5:	leave  
  416fd6:	pop    ebx
  416fd7:	mov    BYTE PTR [eax+0x45681277],dh
  416fdd:	adc    al,0x10
  416fdf:	sub    BYTE PTR [eax-0x7c711bda],cl
  416fe5:	dec    edx
  416fe6:	(bad)  
  416fe7:	out    dx,eax
  416fe8:	pusha  
  416fe9:	sub    BYTE PTR [edx-0xd94440f],ah
  416fef:	adc    edi,DWORD PTR [eax-0x6e269ad5]
  416ff5:	jmp    0x416fad
  416ff7:	addr16 jg 0x41704b
  416ffa:	mov    DWORD PTR [edi],edi
  416ffc:	jno    0x417046
  416ffe:	adc    DWORD PTR [edi-0x35],ebp
  417001:	xor    al,0x4d
  417003:	inc    edi
  417004:	jns    0x416fd7
  417006:	jo     0x417042
  417008:	lods   al,BYTE PTR ds:[esi]
  417009:	jle    0x417081
  41700b:	(bad)  
  41700c:	neg    BYTE PTR [esi-0x147ea670]
  417012:	call   0x2fb3:0xac65de62
  417019:	dec    esp
  41701a:	es jb  0x41704d
  41701d:	test   BYTE PTR [eax],al
  41701f:	in     al,dx
  417020:	sbb    esi,esi
  417022:	xchg   DWORD PTR [ebx],eax
  417024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417025:	xor    esi,0x20bf4b37
  41702b:	push   0xffffff9d
  41702d:	shl    DWORD PTR [edx+edx*1],0x8f
  417031:	sbb    eax,0x9c5134f6
  417036:	xchg   esp,eax
  417037:	cli    
  417038:	and    eax,DWORD PTR [edi+0x7a]
  41703b:	fdiv   DWORD PTR [edx-0x3b4ee182]
  417041:	ret    0xb102
  417044:	out    dx,al
  417045:	or     dl,bl
  417047:	retf   0x8ee3
  41704a:	jg     0x417072
  41704c:	test   eax,0x6c549cab
  417051:	lods   al,BYTE PTR ds:[esi]
  417052:	push   edx
  417053:	add    dh,BYTE PTR [ecx]
  417055:	and    eax,0x4e3ced1b
  41705a:	jb     0x41702a
  41705c:	int    0x3f
  41705e:	inc    edi
  41705f:	fst    QWORD PTR [ecx+0x8]
  417063:	jmp    0x93a:0x6bfd427a
  41706a:	jbe    0x416fec
  41706c:	dec    ecx
  41706d:	nop
  41706e:	push   0x69bfe66d
  417073:	push   0xffffffa8
  417075:	push   cs
  417076:	jae    0x41709e
  417078:	push   ss
  417079:	test   BYTE PTR [edx],bl
  41707b:	xor    dl,BYTE PTR [esi]
  41707d:	push   ebp
  41707e:	xchg   edi,eax
  41707f:	leave  
  417080:	xchg   ebp,eax
  417081:	mov    DWORD PTR [esi],eax
  417083:	jge    0x4170a4
  417085:	jecxz  0x41705c
  417087:	bound  esp,QWORD PTR [ebx+edi*2-0x41c4f0ee]
  41708e:	sub    DWORD PTR [ecx],ebp
  417090:	inc    esi
  417091:	dec    ebp
  417092:	imul   eax,DWORD PTR [ecx+0x11737070],0x565c3aa3
  41709c:	inc    esi
  41709d:	aaa    
  41709e:	imul   eax,DWORD PTR [esi+eiz*2-0x125f0eb3],0x80356e54
  4170a9:	neg    BYTE PTR [edx]
  4170ab:	fsub   DWORD PTR [eax]
  4170ad:	xor    BYTE PTR [ebx],ah
  4170af:	dec    sp
  4170b1:	(bad)
  4170b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b5:	fiadd  WORD PTR [ebp-0xd4e7e86]
  4170bb:	cmp    BYTE PTR [ebx],ah
  4170bd:	adc    DWORD PTR [ecx+0x543d5a7],edi
  4170c3:	or     BYTE PTR [edx],ah
  4170c5:	sti    
  4170c6:	inc    edx
  4170c7:	idiv   esp
  4170c9:	and    al,ch
  4170cb:	xor    eax,0xa551a73c
  4170d0:	cmp    bl,BYTE PTR ds:0xd58ba56e
  4170d6:	xchg   edx,eax
  4170d7:	push   esi
  4170d8:	popf   
  4170d9:	adc    eax,0xa1d608a1
  4170de:	mov    eax,ds:0x6f76ce82
  4170e3:	adc    eax,0xc5a75be0
  4170e8:	aam    0xa9
  4170ea:	push   ss
  4170eb:	out    dx,eax
  4170ec:	or     bh,BYTE PTR [ecx-0x3a]
  4170ef:	push   0xcc8fc127
  4170f4:	jmp    0x4170b3
  4170f6:	fcomp  DWORD PTR [ecx+0x58]
  4170f9:	sahf   
  4170fa:	and    BYTE PTR [ebp-0x6fb7776f],0x6c
  417101:	out    0x2b,eax
  417103:	cwde   
  417104:	pop    ds
  417105:	daa    
  417106:	iret   
  417107:	addr16 jmp 0xabfec8de
  41710d:	dec    ebx
  41710e:	inc    ecx
  41710f:	mov    bh,0x30
  417111:	aam    0xb2
  417113:	xchg   cl,ah
  417115:	push   ecx
  417116:	cmp    BYTE PTR [esi],ch
  417118:	pop    esi
  417119:	(bad)  
  41711a:	out    dx,al
  41711b:	sbb    BYTE PTR [ecx+ecx*8+0x74],dl
  41711f:	sbb    eax,0x4e8534f9
  417124:	stos   BYTE PTR es:[edi],al
  417125:	and    al,0x12
  417127:	adc    al,0xef
  417129:	aas    
  41712a:	inc    ebx
  41712b:	sbb    eax,0xffa1566c
  417130:	push   ds
  417131:	push   edi
  417132:	add    BYTE PTR [edi],cl
  417134:	ret    
  417135:	ret    0x1648
  417138:	mov    ebx,0xc01bfb3a
  41713d:	xor    ebp,DWORD PTR [ecx]
  41713f:	mov    esi,0xb2b05979
  417144:	and    ebp,esi
  417146:	adc    DWORD PTR [ecx-0x7a8e58d6],esi
  41714c:	loop   0x41714d
  41714e:	dec    ebx
  41714f:	mov    al,ds:0xc7b17b3f
  417154:	xchg   BYTE PTR [edi+0x7a],ch
  417157:	xor    ebx,DWORD PTR ds:0x141f0d94
  41715d:	mov    ds:0x3455f412,eax
  417162:	daa    
  417163:	mov    ebx,0x3dd63a7
  417168:	mov    ebx,eax
  41716a:	daa    
  41716b:	xchg   edx,eax
  41716c:	pop    esp
  41716d:	nop
  41716e:	and    eax,0x90fb9b25
  417173:	sbb    dl,BYTE PTR [eax+0x43e167f9]
  417179:	outs   dx,DWORD PTR ds:[esi]
  41717a:	in     al,0x3c
  41717c:	jbe    0x4171bd
  41717e:	ins    DWORD PTR es:[edi],dx
  41717f:	call   0xca647ff4
  417184:	mov    bh,0x60
  417186:	fisubr WORD PTR [eax+ecx*2+0x50]
  41718a:	pushf  
  41718b:	iret   
  41718c:	pop    es
  41718d:	or     DWORD PTR [edi+esi*2],ebx
  417190:	cmp    ah,BYTE PTR [esi-0x25]
  417193:	sub    BYTE PTR [esi-0x8],0x49
  417197:	add    ebx,DWORD PTR [ebx]
  417199:	xchg   edx,eax
  41719a:	xor    DWORD PTR [esi-0x4c938bae],ebx
  4171a0:	and    DWORD PTR [edi-0x2c71d54],esi
  4171a6:	ret    
  4171a7:	xor    cl,BYTE PTR [bp+di]
  4171aa:	cmp    eax,0x780634d1
  4171af:	inc    edx
  4171b0:	sti    
  4171b1:	arpl   WORD PTR [ebx],di
  4171b3:	test   DWORD PTR [ebp-0x63],eax
  4171b6:	cmp    DWORD PTR [esi],0x31f9e8a4
  4171bc:	fcmovbe st,st(1)
  4171be:	aas    
  4171bf:	mov    edi,0x52e17351
  4171c4:	add    dh,BYTE PTR [edi-0x490e455e]
  4171ca:	xchg   ecx,eax
  4171cb:	sub    BYTE PTR [edx+0x1a],dl
  4171ce:	out    0xb6,eax
  4171d0:	xor    DWORD PTR [ebx],0xbef490c0
  4171d6:	or     edi,DWORD PTR [ebp+edx*2+0x7848e4e5]
  4171dd:	sar    DWORD PTR [eax+0x7c14fc44],cl
  4171e3:	data16 stc 
  4171e5:	xor    ah,ch
  4171e7:	mov    DWORD PTR [ebp+0x5f],ebx
  4171ea:	test   DWORD PTR ds:0x6ad61bbb,edx
  4171f0:	scas   al,BYTE PTR es:[edi]
  4171f1:	iret   
  4171f2:	inc    ecx
  4171f3:	push   esi
  4171f4:	push   cs
  4171f5:	int3   
  4171f6:	das    
  4171f7:	nop
  4171f8:	ds cmp bl,al
  4171fb:	daa    
  4171fc:	(bad)  
  4171fd:	popf   
  4171fe:	(bad)  
  4171ff:	sub    eax,0xc57db5f3
  417204:	icebp  
  417205:	sbb    BYTE PTR ds:0x7fa89030,dh
  41720b:	pop    edi
  41720c:	push   ss
  41720d:	test   al,0xc0
  41720f:	jp     0x41721d
  417211:	rcl    al,cl
  417213:	jns    0x417266
  417215:	in     eax,dx
  417216:	ja     0x417211
  417218:	pop    ss
  417219:	frstor [ebx+0x44]
  41721c:	test   DWORD PTR [edi+0xb],ebp
  41721f:	jno    0x417254
  417221:	xchg   edi,eax
  417222:	das    
  417223:	mov    eax,DWORD PTR [ebp-0x18a87b55]
  417229:	pop    esi
  41722a:	in     eax,dx
  41722b:	mov    bh,0xc
  41722d:	mov    edi,0xd0256b71
  417232:	mov    esi,0xa9e82f07
  417237:	into   
  417238:	cmp    edi,DWORD PTR [edi-0x3a]
  41723b:	lds    ebx,FWORD PTR [edx]
  41723d:	iret   
  41723e:	bound  esp,QWORD PTR [ebx+0x194415a1]
  417244:	ds (bad) 
  417246:	shr    BYTE PTR [ecx],1
  417248:	pop    ecx
  417249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41724a:	rol    DWORD PTR [ecx+ecx*1-0x34],1
  41724e:	aam    0x31
  417250:	mov    ah,0x46
  417252:	das    
  417253:	lahf   
  417254:	mov    ebx,0x46479de3
  417259:	push   esi
  41725a:	or     DWORD PTR [esi],esp
  41725c:	mov    ecx,0x3c1f21da
  417261:	mov    cl,0xcd
  417263:	mov    ecx,0xc630ce23
  417268:	repnz mov al,ds:0x899e8cf4
  41726e:	test   BYTE PTR [edx],dl
  417270:	pshufw mm6,QWORD PTR ss:[edx-0x48b442e4],0xdf
  417279:	xlat   BYTE PTR ds:[ebx]
  41727a:	pusha  
  41727b:	pop    esp
  41727c:	cwde   
  41727d:	cmp    BYTE PTR [ebx-0x5414c8ca],0xcf
  417284:	into   
  417285:	out    0xb4,al
  417287:	and    DWORD PTR ds:0x48dbc916,ecx
  41728d:	aam    0xa2
  41728f:	sub    al,0x69
  417291:	shl    BYTE PTR [ebp+0x17],1
  417294:	sbb    BYTE PTR [ecx+0x35],dh
  417297:	push   ebx
  417298:	xor    eax,0xa4b195a2
  41729d:	or     edi,ebx
  41729f:	mov    ebx,0x5aa3c9b8
  4172a4:	mov    eax,0x479bff8a
  4172a9:	push   eax
  4172aa:	sbb    BYTE PTR [esi],ch
  4172ac:	mov    dh,0xf0
  4172ae:	sti    
  4172af:	aad    0x67
  4172b1:	fcmovne st,st(5)
  4172b3:	(bad)  
  4172b4:	(bad)  
  4172b5:	retf   
  4172b6:	outs   dx,DWORD PTR ds:[esi]
  4172b7:	jmp    0xb553:0xbe688122
  4172be:	dec    edi
  4172bf:	jp     0x41725e
  4172c1:	xor    BYTE PTR [ebx+esi*4-0x69],ah
  4172c5:	pop    esp
  4172c6:	jns    0x4172c5
  4172c8:	or     BYTE PTR [esi+0x292c4ef4],cl
  4172ce:	xchg   BYTE PTR [ebp+0x567e9de4],dl
  4172d4:	loop   0x417351
  4172d6:	xor    bl,BYTE PTR [esi-0x5e]
  4172d9:	jg     0x41732e
  4172db:	cli    
  4172dc:	imul   ebp,ebp,0x168bf647
  4172e2:	ret    
  4172e3:	pop    eax
  4172e4:	xchg   edi,eax
  4172e5:	cli    
  4172e6:	xchg   esp,eax
  4172e7:	mov    ds:0xd9000a12,eax
  4172ec:	call   0x82d9:0x39597384
  4172f3:	cmp    DWORD PTR [ecx],0xffffffa9
  4172f6:	and    BYTE PTR [esi],ch
  4172f8:	jmp    0xea0680cf
  4172fd:	adc    DWORD PTR [ebx-0x2],edx
  417300:	imul   edi,DWORD PTR [ecx],0xffffffd5
  417303:	in     eax,0x9f
  417305:	mov    eax,0x875c0b8c
  41730a:	push   eax
  41730b:	xchg   ebx,eax
  41730c:	scas   al,BYTE PTR es:[edi]
  41730d:	lods   al,BYTE PTR ds:[esi]
  41730e:	lds    eax,FWORD PTR [ecx-0x15]
  417311:	adc    BYTE PTR [ebx],0xae
  417314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417315:	pop    edx
  417316:	mov    eax,0x17b0b077
  41731b:	dec    esp
  41731c:	repz push ebx
  41731e:	scas   al,BYTE PTR es:[edi]
  41731f:	(bad)  
  417320:	jmp    0xb052:0xb631730a
  417327:	xor    BYTE PTR [edi],ah
  417329:	shl    DWORD PTR [ecx+0x70558363],cl
  41732f:	jnp    0x417347
  417331:	inc    edi
  417332:	jge    0x4173a9
  417334:	call   0xb0c3a62d
  417339:	mov    ebp,0xcd33614
  41733e:	lds    ebx,FWORD PTR [eax+0x26]
  417341:	add    esp,DWORD PTR [edi]
  417343:	shr    DWORD PTR [edx-0x5],0x6f
  417347:	test   eax,0xecc9a9b9
  41734c:	dec    DWORD PTR [ecx]
  41734e:	into   
  41734f:	jae    0x417356
  417351:	dec    ecx
  417352:	int3   
  417353:	mul    ebx
  417355:	dec    esi
  417356:	mov    eax,ecx
  417358:	(bad)  
  417359:	not    ecx
  41735b:	mov    esi,0xbfe7b67f
  417360:	add    ebp,DWORD PTR [ebp+0x75]
  417363:	in     al,0x99
  417365:	xor    eax,0xf4b6e566
  41736a:	das    
  41736b:	jmp    0xc3256fa8
  417370:	jp     0x41737c
  417372:	xor    ebp,edi
  417374:	push   ds
  417375:	jl     0x4173d9
  417377:	push   cs
  417378:	(bad)  
  417379:	stc    
  41737a:	dec    edi
  41737b:	fstp   st(1)
  41737d:	push   ecx
  41737e:	aad    0x3d
  417380:	mov    edx,0xe12b55f0
  417385:	pop    ss
  417386:	mov    ecx,0x7a3046dd
  41738b:	jge    0x4173e9
  41738d:	(bad)  
  41738e:	jne    0x4173bd
  417390:	fisub  DWORD PTR [edx]
  417392:	mov    edx,0x12d49a6a
  417397:	pop    ds
  417398:	adc    ah,BYTE PTR [edi]
  41739a:	and    cl,dl
  41739c:	inc    edi
  41739d:	pop    esi
  41739e:	sahf   
  41739f:	(bad)  
  4173a0:	hlt    
  4173a1:	cmp    al,0x60
  4173a3:	cmp    ecx,DWORD PTR [ebx-0x36]
  4173a6:	loop   0x41732a
  4173a8:	jge    0x4173da
  4173aa:	xor    DWORD PTR [esi+0xe],0x3a105695
  4173b1:	mov    cl,0x8
  4173b3:	inc    edi
  4173b4:	ficom  DWORD PTR [eax+0x46]
  4173b7:	imul   ebp,esi,0xffffffee
  4173ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173bb:	push   ecx
  4173bc:	cwde   
  4173bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173be:	xchg   esp,eax
  4173bf:	and    BYTE PTR [ebp+0x72],dl
  4173c2:	pushf  
  4173c3:	and    DWORD PTR [ebp+ebx*1-0x6966f06f],esi
  4173ca:	xchg   edx,eax
  4173cb:	mov    esi,0x4de29e13
  4173d0:	les    eax,FWORD PTR ds:[ebx]
  4173d3:	dec    ebx
  4173d4:	fcmovnu st,st(1)
  4173d6:	pop    es
  4173d7:	cmp    BYTE PTR ds:0x8ae15671,dh
  4173dd:	dec    edx
  4173de:	ret    0x30c9
  4173e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e2:	sahf   
  4173e3:	mov    cl,0xf3
  4173e5:	pushf  
  4173e6:	cwde   
  4173e7:	scas   al,BYTE PTR es:[edi]
  4173e8:	nop
  4173e9:	lods   al,BYTE PTR ds:[esi]
  4173ea:	mov    WORD PTR [eax-0x6bc21cb1],cs
  4173f0:	push   ecx
  4173f1:	and    ecx,esi
  4173f3:	mov    cl,0xe7
  4173f5:	mov    bh,0xde
  4173f7:	inc    edi
  4173f8:	test   DWORD PTR [edx],eax
  4173fa:	xor    bh,BYTE PTR [ecx+0x1b2f44c7]
  417400:	xchg   DWORD PTR es:[esi-0x4c],esi
  417404:	adc    eax,0xb63c5d39
  417409:	clc    
  41740a:	mov    edi,DWORD PTR [ecx+ecx*8]
  41740d:	inc    esi
  41740e:	in     eax,0xce
  417410:	adc    eax,0x88236de
  417415:	or     edi,esp
  417417:	fucomip st,st(5)
  417419:	outs   dx,DWORD PTR ds:[esi]
  41741a:	std    
  41741b:	jp     0x417441
  41741d:	or     DWORD PTR [edx-0x5013633a],edx
  417423:	xchg   ecx,eax
  417424:	or     dl,BYTE PTR [esi+0x1a]
  417427:	lock xor BYTE PTR [edx-0x22],0xa1
  41742c:	popw   ds
  41742e:	inc    ebp
  41742f:	aad    0x23
  417431:	mov    bh,0x2b
  417433:	(bad)  
  417434:	je     0x4173cf
  417436:	fs add eax,0x6815e4f0
  41743c:	jns    0x417468
  41743e:	ss dec eax
  417440:	call   0x87dac9f5
  417445:	(bad)  
  417446:	and    ah,BYTE PTR [esi+0x4b]
  417449:	sbb    BYTE PTR [edi],dh
  41744b:	test   DWORD PTR [esi-0x40902803],ebp
  417451:	das    
  417452:	inc    esi
  417453:	clc    
  417454:	mov    ebp,0x570e3bae
  417459:	add    BYTE PTR [edx-0x45],dl
  41745c:	sub    bl,0xe1
  41745f:	idiv   DWORD PTR [eax]
  417461:	js     0x417485
  417463:	mov    DWORD PTR [edi+edi*2-0x4],esi
  417467:	cmp    al,0x11
  417469:	repz inc esi
  41746b:	(bad)  
  41746c:	xchg   esi,eax
  41746d:	xor    DWORD PTR [ebp+0xdca9e5b],ebp
  417473:	stc    
  417474:	pop    esp
  417475:	iret   
  417476:	(bad)  [esi-0x16]
  417479:	jo     0x4174d3
  41747b:	pop    esi
  41747c:	mov    DWORD PTR [edi+0x4e756dc2],ebp
  417482:	jmp    0xc8b29791
  417487:	push   0x2117913a
  41748c:	cdq    
  41748d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41748e:	mov    DWORD PTR [ecx],esp
  417490:	out    0x50,eax
  417492:	ds shl ecx,0x80
  417496:	adc    al,0x4d
  417498:	push   cs
  417499:	fcomp  QWORD PTR [edx]
  41749b:	push   ds
  41749c:	adc    BYTE PTR [eax],bh
  41749e:	mov    BYTE PTR [esi],cl
  4174a0:	lahf   
  4174a1:	xor    eax,0x7b1104c3
  4174a6:	xchg   ebx,eax
  4174a7:	pop    esi
  4174a8:	aam    0x5e
  4174aa:	arpl   WORD PTR [ebp+0x21],sp
  4174ad:	and    edi,DWORD PTR [ecx+0x4a0c519e]
  4174b3:	daa    
  4174b4:	pop    esi
  4174b5:	loope  0x417444
  4174b7:	leave  
  4174b8:	mov    ecx,0x75f6b919
  4174bd:	or     dl,BYTE PTR [esi]
  4174bf:	dec    edi
  4174c0:	xchg   edi,eax
  4174c1:	push   ss
  4174c2:	jb     0x417458
  4174c4:	inc    esi
  4174c5:	sub    ch,cl
  4174c7:	add    eax,0x9e2d8808
  4174cc:	mov    ecx,0x40275ac1
  4174d1:	outs   dx,BYTE PTR ds:[esi]
  4174d2:	nop
  4174d3:	add    al,BYTE PTR [edx+0x28]
  4174d6:	sbb    eax,eax
  4174d8:	pop    edx
  4174d9:	sbb    eax,0x1d0c015a
  4174de:	pop    edx
  4174df:	retf   0x3182
  4174e2:	(bad)  
  4174e3:	mov    ds:0xe7215460,al
  4174e8:	and    ah,cl
  4174ea:	push   ebx
  4174eb:	lea    eax,[edi+0x4e]
  4174ee:	outs   dx,BYTE PTR ds:[esi]
  4174ef:	fidiv  WORD PTR [edx+0x7457a5d8]
  4174f5:	ja     0x417532
  4174f7:	(bad)  
  4174f8:	sub    cl,BYTE PTR [esi+0x5a]
  4174fb:	dec    edx
  4174fc:	xor    al,0xdf
  4174fe:	idiv   ebp
  417500:	jl     0x41749a
  417502:	and    esi,DWORD PTR [esi-0x7c900121]
  417508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417509:	mov    eax,ds:0xb0e7c6c3
  41750e:	imul   ecx,DWORD PTR [ecx],0xb
  417511:	adc    DWORD PTR [eax+0x73],edi
  417514:	mov    edx,DWORD PTR [ebx+0x17fade70]
  41751a:	paddw  mm5,QWORD PTR [ecx]
  41751d:	cdq    
  41751e:	mov    esp,gs
  417520:	cwde   
  417521:	fmul   QWORD PTR [esi-0x23e40a29]
  417527:	mov    DWORD PTR [ebp-0x7c12162c],0x9817a1ac
  417531:	int    0x6c
  417533:	dec    ebp
  417534:	xchg   esi,eax
  417535:	mov    ebx,0x3730960f
  41753a:	push   ecx
  41753b:	cdq    
  41753c:	dec    ecx
  41753d:	cmp    cl,dh
  41753f:	xor    eax,0x2b9c872
  417544:	and    ebp,DWORD PTR [edx-0x78]
  417547:	(bad)  
  417548:	jmp    0x4175a7
  41754a:	add    esp,DWORD PTR [ebp-0x7d329760]
  417550:	test   eax,0x3f5c2e47
  417555:	mov    eax,0x28c48028
  41755a:	mov    dl,0x58
  41755c:	push   DWORD PTR [eax]
  41755e:	cli    
  41755f:	mov    ebp,0x127da9b4
  417564:	sahf   
  417565:	rcr    BYTE PTR ds:0x2d252d9f,cl
  41756b:	pop    ss
  41756c:	repz and DWORD PTR [edi-0x37],edi
  417570:	popa   
  417571:	repz data16 (bad) 
  417574:	or     BYTE PTR [edx],dl
  417576:	dec    edx
  417577:	mov    dh,0xc
  417579:	dec    ebx
  41757a:	jg     0x4175d3
  41757c:	retf   
  41757d:	call   0x23a0:0xbe8781a0
  417584:	xor    al,0xe7
  417586:	mov    dl,0x65
  417588:	out    dx,eax
  417589:	test   eax,0x849613d0
  41758e:	sub    bp,sp
  417591:	imul   eax,DWORD PTR [eax],0x1d
  417594:	pop    esi
  417595:	out    dx,al
  417596:	mov    edi,0x8e83c24c
  41759b:	push   ebx
  41759c:	and    esp,ebx
  41759e:	pop    edi
  41759f:	ins    BYTE PTR es:[edi],dx
  4175a0:	mov    ds,WORD PTR [eax+0x7890b07]
  4175a6:	pop    esi
  4175a7:	mov    edx,0x62ed2b70
  4175ac:	cld    
  4175ad:	xor    esi,DWORD PTR [esi-0x41890b91]
  4175b3:	jle    0x417559
  4175b5:	pop    esp
  4175b6:	ficom  DWORD PTR [edx-0x3807a834]
  4175bc:	sbb    eax,0x9c62b3f3
  4175c1:	lahf   
  4175c2:	mov    ebx,0xaf8991a6
  4175c7:	cmp    eax,0x29ec8930
  4175cc:	cmp    bh,dh
  4175ce:	mov    ebx,ebx
  4175d0:	(bad)  
  4175d1:	std    
  4175d2:	adc    bl,dl
  4175d4:	(bad)  
  4175d5:	stc    
  4175d6:	pop    ebp
  4175d7:	push   ebx
  4175d8:	mov    al,0x93
  4175da:	fs add al,0x6f
  4175dd:	push   esi
  4175de:	popa   
  4175df:	rol    DWORD PTR [ebx-0x46],cl
  4175e2:	push   edx
  4175e3:	out    dx,eax
  4175e4:	dec    esi
  4175e5:	cmp    esp,DWORD PTR [ebx+0x27c81a01]
  4175eb:	div    bh
  4175ed:	test   al,0xe1
  4175ef:	mov    ds:0xc341b843,al
  4175f4:	repz push 0x3
  4175f7:	add    BYTE PTR [ebx+0x3b],bh
  4175fa:	add    eax,0xb4b05257
  4175ff:	xchg   esi,eax
  417600:	fnstcw WORD PTR [edi]
  417602:	adc    BYTE PTR [edi+0x52],bl
  417605:	jmp    0x67cf:0x27cdd99d
  41760c:	adc    BYTE PTR [eax],dl
  41760e:	dec    esi
  41760f:	dec    edi
  417610:	addr16 repnz xor ecx,edx
  417614:	mov    ds:0x7c51b57d,al
  417619:	mov    cl,0x81
  41761b:	nop
  41761c:	ins    BYTE PTR es:[edi],dx
  41761d:	or     BYTE PTR [ebp+0x76],dl
  417620:	fsubr  QWORD PTR [ebp-0x3affa67f]
  417626:	bound  edx,QWORD PTR [ebx+ebp*2-0x28360d1c]
  41762d:	sbb    DWORD PTR [eax],0xbf4c6937
  417633:	cmp    esi,DWORD PTR [ecx]
  417635:	cmp    BYTE PTR [ebp+0x1fc6be73],bh
  41763b:	call   0x62f094e9
  417640:	fcom   DWORD PTR ds:0xbcd8d417
  417646:	cdq    
  417647:	bsr    eax,DWORD PTR [ebx+0x51ffdb9]
  41764e:	cld    
  41764f:	or     DWORD PTR [esi+0x4f],esi
  417652:	neg    DWORD PTR [edi+0x48bd15d8]
  417658:	xlat   BYTE PTR ds:[ebx]
  417659:	sbb    DWORD PTR [esi+0x6a],edx
  41765c:	dec    edx
  41765d:	sbb    eax,0xc3082d9a
  417662:	retf   0x2716
  417665:	test   BYTE PTR [ecx],0x39
  417668:	push   0xffffffb1
  41766a:	jl     0x417630
  41766c:	je     0x4176c4
  41766e:	mov    edx,ebx
  417670:	sub    eax,0xb8633ef7
  417675:	(bad)  [ebx+0x9]
  417678:	add    dh,0x79
  41767b:	clc    
  41767c:	pushf  
  41767d:	sbb    eax,0xa6b4d1a8
  417682:	popf   
  417683:	sub    al,0x62
  417685:	in     eax,dx
  417686:	jmp    0x5a95:0x9c169755
  41768d:	cmp    al,BYTE PTR [edx+0x15]
  417690:	das    
  417691:	mov    esp,ebx
  417693:	dec    edi
  417694:	div    BYTE PTR [esi+0x0]
  417697:	in     al,0xb2
  417699:	cld    
  41769a:	push   edi
  41769b:	xlat   BYTE PTR ds:[ebx]
  41769c:	repnz mov dh,0xa
  41769f:	mov    al,ds:0x2d7ab7f3
  4176a4:	dec    esi
  4176a5:	xchg   esi,eax
  4176a6:	sbb    BYTE PTR [ecx-0x196d23d3],ch
  4176ac:	popa   
  4176ad:	bound  eax,QWORD PTR [ebx+0x5b]
  4176b0:	ja     0x417682
  4176b2:	push   0x168af962
  4176b7:	sub    ax,0xa6ca
  4176bb:	pop    ss
  4176bc:	test   al,0x7e
  4176be:	adc    eax,0x273d7d5b
  4176c3:	fisttp WORD PTR [ebx-0x29]
  4176c6:	pop    ebp
  4176c7:	fstp   st(2)
  4176c9:	ins    DWORD PTR es:[edi],dx
  4176ca:	dec    edi
  4176cb:	stc    
  4176cc:	pop    edi
  4176cd:	fisubr DWORD PTR [ecx+0x7d166ce8]
  4176d3:	push   eax
  4176d4:	bound  esp,QWORD PTR [ecx]
  4176d6:	dec    edi
  4176d7:	outs   dx,BYTE PTR ds:[esi]
  4176d8:	pusha  
  4176d9:	cwde   
  4176da:	int    0xbf
  4176dc:	pop    edx
  4176dd:	aam    0xf5
  4176df:	pop    ss
  4176e0:	dec    eax
  4176e1:	hlt    
  4176e2:	fwait
  4176e3:	sbb    ebx,DWORD PTR [edi]
  4176e5:	xchg   ebx,eax
  4176e6:	ret    
  4176e7:	test   eax,0xf5c94387
  4176ec:	add    DWORD PTR [eax],eax
  4176ee:	pop    ss
  4176ef:	inc    ecx
  4176f0:	push   0x18
  4176f2:	add    DWORD PTR [ebx+edx*2],edi
  4176f5:	stc    
  4176f6:	inc    ebx
  4176f7:	jle    0x4176f1
  4176f9:	dec    edi
  4176fa:	into   
  4176fb:	jmp    0xc453:0xfafbef30
  417702:	jle    0x41769e
  417704:	(bad)  
  417705:	je     0x417741
  417707:	inc    edx
  417708:	mov    ebp,0x4142d2bb
  41770d:	shr    BYTE PTR [ebx-0x75],cl
  417710:	dec    edx
  417711:	xchg   edi,eax
  417712:	jecxz  0x417704
  417714:	push   esi
  417715:	and    eax,0xd60c63fe
  41771a:	stc    
  41771b:	pop    edx
  41771c:	or     DWORD PTR [ecx],esi
  41771e:	cli    
  41771f:	sahf   
  417720:	push   es
  417721:	shl    DWORD PTR [ebp-0x17],0xf9
  417725:	or     DWORD PTR ds:0xf53f5bec,0xffffff95
  41772c:	addr16 in al,dx
  41772e:	mov    BYTE PTR [ebx-0x68db03dd],cl
  417734:	fld    QWORD PTR [edx]
  417736:	cli    
  417737:	xor    al,0x3d
  417739:	in     eax,dx
  41773a:	xchg   esi,eax
  41773b:	jns    0x417716
  41773d:	nop
  41773e:	pop    ebp
  41773f:	pop    ebx
  417740:	ds mov dl,0xb2
  417743:	outs   dx,BYTE PTR ds:[esi]
  417744:	or     BYTE PTR [ebx+0x8],ch
  417747:	mov    ch,0x3e
  417749:	jl     0x41775f
  41774b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41774c:	ret    
  41774d:	mov    ds:0x4b58663e,eax
  417752:	jmp    0x4177a3
  417754:	dec    edi
  417755:	jbe    0x417777
  417757:	in     al,dx
  417758:	push   cs
  417759:	repz push cs
  41775b:	call   0xdc00:0xc79cafc9
  417762:	aas    
  417763:	test   al,0xa5
  417765:	push   edi
  417766:	mov    eax,0x1cb8d9b4
  41776b:	dec    ebx
  41776c:	pop    esi
  41776d:	sub    eax,0x64147cde
  417772:	sahf   
  417773:	popf   
  417774:	sti    
  417775:	aad    0xb5
  417777:	and    dh,BYTE PTR [ecx]
  417779:	sbb    edx,DWORD PTR [ebx]
  41777b:	mov    ds:0x21b878ef,eax
  417780:	add    al,0xf
  417782:	push   eax
  417783:	jo     0x417775
  417785:	cmp    DWORD PTR [ecx+ecx*4-0x64],0xffffffad
  41778a:	aaa    
  41778b:	sbb    dl,bh
  41778d:	inc    esp
  41778e:	or     BYTE PTR [ecx+0x71ed538e],dl
  417794:	cmp    DWORD PTR [ecx-0x4f],0x66fe1b8
  41779b:	push   esp
  41779c:	xchg   edx,eax
  41779d:	jmp    0x7b155ccc
  4177a2:	or     bl,BYTE PTR [edi]
  4177a4:	das    
  4177a5:	mov    cl,0xf4
  4177a7:	ins    DWORD PTR es:[edi],dx
  4177a8:	sub    al,0xef
  4177aa:	pop    ecx
  4177ab:	in     eax,dx
  4177ac:	stos   DWORD PTR es:[edi],eax
  4177ad:	scas   eax,DWORD PTR es:[edi]
  4177ae:	pop    es
  4177af:	(bad)  
  4177b0:	xchg   ebp,eax
  4177b1:	nop
  4177b2:	xchg   esi,eax
  4177b3:	mov    BYTE PTR [edx+0x5a],dh
  4177b6:	mov    WORD PTR [eax],cs
  4177b8:	repz mov edx,ebx
  4177bb:	(bad)
  4177bf:	adc    DWORD PTR [ebp+ebx*1-0x1d],0x30abad91
  4177c7:	jbe    0x417756
  4177c9:	add    BYTE PTR [esi-0x6836eede],cl
  4177cf:	daa    
  4177d0:	sub    eax,0xd7d4a013
  4177d5:	repz dec edx
  4177d7:	and    al,cl
  4177d9:	xchg   ebx,eax
  4177da:	pop    edi
  4177db:	pop    esi
  4177dc:	xchg   DWORD PTR [eax-0x78],esp
  4177df:	cld    
  4177e0:	arpl   WORD PTR [esi-0x10d6e920],bp
  4177e6:	or     eax,0x56706a85
  4177eb:	clc    
  4177ec:	xor    cl,ah
  4177ee:	mov    esp,0x75e516e7
  4177f3:	add    al,0x72
  4177f5:	ds xchg ebp,eax
  4177f7:	mov    dl,0x35
  4177f9:	cmp    ch,cl
  4177fb:	adc    ebp,DWORD PTR [esi+0x7d5e8cab]
  417801:	ins    DWORD PTR es:[edi],dx
  417802:	mov    eax,0xac88d172
  417807:	xor    al,0x4
  417809:	or     edi,esi
  41780b:	or     al,0x34
  41780d:	sbb    bh,ch
  41780f:	inc    edi
  417810:	mov    al,0xb1
  417812:	mul    al
  417814:	xchg   esp,eax
  417815:	sub    BYTE PTR [esi],bl
  417817:	imul   eax,DWORD PTR [edi-0xa],0x7c
  41781b:	hlt    
  41781c:	mov    al,0xfe
  41781e:	mov    edi,0x9cb570cc
  417823:	adc    al,0xc3
  417825:	(bad)  
  417826:	popf   
  417827:	mov    esi,0x55fa63f5
  41782c:	add    al,0xf6
  41782e:	pop    esi
  41782f:	inc    ebx
  417830:	jmp    0x4177d6
  417832:	dec    eax
  417833:	ja     0x41782f
  417835:	mov    DWORD PTR [ebx],eax
  417837:	and    DWORD PTR [ebx+0xb],ecx
  41783a:	dec    esi
  41783b:	lea    edi,[edx]
  41783d:	in     eax,dx
  41783e:	fist   DWORD PTR [ecx]
  417840:	je     0x4177de
  417842:	add    BYTE PTR [ecx-0x1e9e48b9],dl
  417848:	es dec ebx
  41784a:	int3   
  41784b:	iret   
  41784c:	mov    edi,0x354e4525
  417851:	or     al,BYTE PTR [edx+esi*1+0x2a]
  417855:	sahf   
  417856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417857:	cld    
  417858:	xchg   edx,eax
  417859:	mov    al,ds:0x638af0a2
  41785e:	aaa    
  41785f:	xor    DWORD PTR [esp+edi*8+0x1f07a28],0xb5675e51
  41786a:	jns    0x4178d5
  41786c:	cli    
  41786d:	xchg   ebx,eax
  41786e:	std    
  41786f:	leave  
  417870:	or     ecx,DWORD PTR ds:0xbe6fab8c
  417876:	inc    ebp
  417877:	push   es
  417878:	popa   
  417879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41787a:	into   
  41787b:	push   ebp
  41787c:	mov    ds:0xda44211,eax
  417881:	imul   ecx,DWORD PTR [ebx+0xc376939],0x52
  417888:	inc    edi
  417889:	das    
  41788a:	pop    edx
  41788b:	dec    ebp
  41788c:	inc    esi
  41788d:	popa   
  41788e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41788f:	adc    DWORD PTR ss:[edx+0x23db3cb],edx
  417896:	xor    DWORD PTR [edi+0x4],ebp
  417899:	jne    0x417829
  41789b:	add    eax,edi
  41789d:	xchg   BYTE PTR ds:0x3a6a9d63,dh
  4178a3:	push   edi
  4178a4:	pop    es
  4178a5:	leave  
  4178a6:	shl    BYTE PTR [edx],cl
  4178a8:	fs ret 
  4178aa:	rcl    DWORD PTR [ebp+0x769088d7],cl
  4178b0:	scas   al,BYTE PTR es:[edi]
  4178b1:	cld    
  4178b2:	mov    al,0x91
  4178b4:	adc    al,0x10
  4178b6:	push   es
  4178b7:	lea    esp,[esp+ecx*1-0x5a]
  4178bb:	mov    BYTE PTR [edi-0x5962d66a],ah
  4178c1:	popf   
  4178c2:	mov    edi,0x1898a1aa
  4178c7:	shr    DWORD PTR [eax+0x77],cl
  4178ca:	cdq    
  4178cb:	mov    esi,0x99555e68
  4178d0:	jmp    0xefd76749
  4178d5:	out    dx,eax
  4178d6:	add    BYTE PTR [edi+0x6],bl
  4178d9:	repnz sub ebp,ebp
  4178dc:	or     ch,dh
  4178de:	dec    ecx
  4178df:	js     0x417887
  4178e1:	mov    esp,0x88358f90
  4178e6:	out    dx,al
  4178e7:	fmul   DWORD PTR [eax]
  4178e9:	xor    eax,0x19d1d927
  4178ee:	lahf   
  4178ef:	ret    
  4178f0:	std    
  4178f1:	pop    esp
  4178f2:	lahf   
  4178f3:	pushf  
  4178f4:	loop   0x4178fd
  4178f6:	dec    ebx
  4178f7:	adc    BYTE PTR [edi-0x19],ch
  4178fa:	bnd jns 0x417924
  4178fd:	add    dl,0xee
  417900:	das    
  417901:	or     DWORD PTR [esi-0x6667157],eax
  417907:	push   es
  417908:	lahf   
  417909:	or     dh,dl
  41790b:	jge    0x417904
  41790d:	rol    ebx,0xc0
  417910:	adc    eax,0x4160c217
  417915:	jno    0x41796d
  417917:	jg     0x41789a
  417919:	xor    DWORD PTR [ebp+0x1e],ebx
  41791c:	push   es
  41791d:	(bad)  
  41791e:	adc    edi,DWORD PTR [ecx-0x1e]
  417921:	push   cs
  417922:	cmc    
  417923:	add    esp,DWORD PTR [ebx-0xd]
  417926:	jo     0x4178a8
  417928:	fistp  QWORD PTR [eax-0xed3d75e]
  41792e:	inc    ebx
  41792f:	mov    ch,ah
  417931:	push   esp
  417932:	dec    esi
  417933:	test   al,0xfa
  417935:	retf   
  417936:	mov    bl,0x5
  417938:	mov    ch,0xe8
  41793a:	sbb    eax,0xd8d8f921
  41793f:	ficomp DWORD PTR [esi]
  417941:	jo     0x3d73d813
  417947:	stos   BYTE PTR es:[edi],al
  417948:	sti    
  417949:	jg     0x4179a1
  41794b:	push   edx
  41794c:	dec    esp
  41794d:	add    al,0xe2
  41794f:	enter  0xecce,0xcc
  417953:	inc    esi
  417954:	clc    
  417955:	repz sbb dl,cl
  417958:	and    al,0x89
  41795a:	or     BYTE PTR [ecx-0x3d],cl
  41795d:	sti    
  41795e:	pop    ebp
  41795f:	arpl   WORD PTR [edx],bp
  417961:	test   al,0xb1
  417963:	add    eax,0x2fecafd1
  417968:	fcom   QWORD PTR [ebx-0x709433ab]
  41796e:	cmp    eax,ebp
  417970:	lock inc edx
  417972:	ins    DWORD PTR es:[edi],dx
  417973:	leave  
  417974:	shl    dl,1
  417976:	and    BYTE PTR [eax-0x7a],cl
  417979:	xor    DWORD PTR [esi],edi
  41797b:	loop   0x417943
  41797d:	jne    0x417903
  41797f:	sbb    eax,0x9fdd56a4
  417984:	mov    edi,esp
  417986:	pop    ebp
  417987:	mov    ebx,DWORD PTR [ebx+0x6d]
  41798a:	(bad)
  41798f:	push   edx
  417990:	mov    edx,DWORD PTR [ebp+0x3379f3ef]
  417996:	and    cl,cl
  417998:	int    0x8
  41799a:	mov    edi,0x1154226d
  41799f:	lods   al,BYTE PTR ds:[esi]
  4179a0:	jno    0x4179fd
  4179a2:	or     BYTE PTR [edi+0x5bb48176],0xb5
  4179a9:	lock jb 0x4179f4
  4179ac:	pop    ebx
  4179ad:	jmp    0x417986
  4179af:	hlt    
  4179b0:	xlat   BYTE PTR cs:[ebx]
  4179b2:	cld    
  4179b3:	add    edi,DWORD PTR [esi+0x5e3853c3]
  4179b9:	call   0x55aebf17
  4179be:	cwde   
  4179bf:	fcomp  DWORD PTR [edx-0x7]
  4179c2:	pushf  
  4179c3:	dec    esi
  4179c4:	loop   0x4179c2
  4179c6:	pop    ss
  4179c7:	xchg   ecx,eax
  4179c8:	jne    0x4179a9
  4179ca:	mov    ebx,0xa494d7ec
  4179cf:	loope  0x417a4a
  4179d1:	out    0x1,eax
  4179d3:	data16 add BYTE PTR [ebx+0x1e36bb4],cl
  4179da:	ror    DWORD PTR [edi],0xdf
  4179dd:	push   es
  4179de:	gs ja  0x417a51
  4179e1:	sti    
  4179e2:	(bad)  
  4179e3:	aam    0x5d
  4179e5:	inc    edi
  4179e6:	dec    ebx
  4179e7:	and    ecx,esi
  4179e9:	jmp    DWORD PTR [edi-0x3a]
  4179ec:	and    al,0xc9
  4179ee:	fwait
  4179ef:	push   ebp
  4179f0:	out    0x4,eax
  4179f2:	js     0x41797b
  4179f4:	dec    edi
  4179f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179f6:	loope  0x417a1b
  4179f8:	imul   edi,DWORD PTR [edx],0x60
  4179fb:	fisubr DWORD PTR [edi+0x5f162ce1]
  417a01:	and    ebp,DWORD PTR [ecx+edx*8+0x3e128606]
  417a08:	adc    al,0x20
  417a0a:	test   DWORD PTR [ecx],eax
  417a0c:	cdq    
  417a0d:	outs   dx,DWORD PTR ds:[esi]
  417a0e:	lds    edx,FWORD PTR [edi-0x73]
  417a11:	xchg   esi,eax
  417a12:	push   esi
  417a13:	js     0x417a06
  417a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a16:	or     ah,BYTE PTR ds:0xe91c43ca
  417a1c:	mov    eax,ds:0x3792eae5
  417a21:	push   ecx
  417a22:	add    dl,BYTE PTR [edi+0x3d438840]
  417a28:	sti    
  417a29:	iret   
  417a2a:	xlat   BYTE PTR ds:[ebx]
  417a2b:	vmwrite esp,DWORD PTR ds:0xaf3bcce2
  417a32:	or     cl,bh
  417a34:	ja     0x4179c1
  417a36:	fmul   QWORD PTR [ecx+0x8]
  417a39:	adc    BYTE PTR [esi+eiz*8-0x6d],0xd5
  417a3e:	and    DWORD PTR [ecx],edx
  417a40:	jge    0x417a51
  417a42:	pop    esp
  417a43:	add    al,bl
  417a45:	adc    eax,0x90df0229
  417a4a:	loope  0x417a55
  417a4c:	hlt    
  417a4d:	push   ebp
  417a4e:	pop    edx
  417a4f:	xlat   BYTE PTR ds:[ebx]
  417a50:	dec    eax
  417a51:	jle    0x417a5c
  417a53:	ins    DWORD PTR es:[edi],dx
  417a54:	jg     0x417a6c
  417a56:	fiadd  WORD PTR [ebx+0x65f2018a]
  417a5c:	jl     0x417a54
  417a5e:	add    al,0x26
  417a60:	out    dx,al
  417a61:	fstp   TBYTE PTR [edi-0x127e30de]
  417a67:	(bad)  
  417a69:	(bad)  
  417a6a:	mov    ebx,0x445ea02c
  417a6f:	repnz and al,0xd
  417a72:	es retf 
  417a74:	aam    0x44
  417a76:	(bad)  
  417a77:	sti    
  417a78:	pop    ebx
  417a79:	cmc    
  417a7a:	gs pop ds
  417a7c:	and    eax,0x98f071f
  417a81:	jl     0x417ad4
  417a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a84:	les    ebp,FWORD PTR [ebx]
  417a86:	pop    es
  417a87:	mov    ecx,0xa0a60160
  417a8c:	cmp    DWORD PTR [ecx-0x4c1b19fb],0xeeb385b2
  417a96:	(bad)  
  417a97:	mov    eax,0x61a800d6
  417a9c:	jns    0x417b1b
  417a9e:	popa   
  417a9f:	add    eax,0x7ec73e45
  417aa4:	scas   eax,DWORD PTR es:[edi]
  417aa5:	dec    ebx
  417aa6:	inc    edx
  417aa7:	jns    0x417ae2
  417aa9:	shr    BYTE PTR ds:0x2829d754,0xad
  417ab0:	xchg   edx,eax
  417ab1:	imul   edi,ebx,0x9b3e25e6
  417ab7:	push   0xbccdc32d
  417abc:	jp     0x417ae1
  417abe:	repz jne 0x417a9b
  417ac1:	dec    edi
  417ac2:	mov    eax,ds:0xfbc9ad9b
  417ac7:	mov    bl,0x3e
  417ac9:	repnz (bad) 
  417acb:	mov    dh,0x5a
  417acd:	ins    DWORD PTR es:[edi],dx
  417ace:	fisubr DWORD PTR [ecx]
  417ad0:	mov    ecx,0xf5217066
  417ad5:	ftst   
  417ad7:	leave  
  417ad8:	mov    esi,0xa7f5e28b
  417add:	add    ecx,DWORD PTR [esi]
  417adf:	push   cs
  417ae0:	hlt    
  417ae1:	xchg   edi,eax
  417ae2:	les    ecx,FWORD PTR [ebp-0x41]
  417ae5:	add    eax,0x1e14ad4c
  417aea:	cs jae 0x417af1
  417aed:	out    0x87,eax
  417aef:	pop    ebp
  417af0:	test   BYTE PTR [esp+ebx*2-0x1a],bl
  417af4:	push   ebx
  417af5:	ret    
  417af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417af7:	call   0x2c1e05eb
  417afc:	iret   
  417afd:	test   al,0x51
  417aff:	inc    esp
  417b00:	lahf   
  417b01:	jl     0x417b42
  417b03:	inc    eax
  417b04:	ins    DWORD PTR es:[edi],dx
  417b05:	out    0x46,al
  417b07:	fld    DWORD PTR [edi-0x6e]
  417b0a:	pop    esp
  417b0b:	mov    dh,0x17
  417b0d:	cmp    DWORD PTR [ebx-0x4f47837f],esi
  417b13:	xlat   BYTE PTR ds:[ebx]
  417b14:	jg     0x417af7
  417b16:	xchg   edx,eax
  417b17:	dec    DWORD PTR [ebx+0x3a]
  417b1a:	arpl   WORD PTR [eax],di
  417b1c:	mul    BYTE PTR [edi]
  417b1e:	clc    
  417b1f:	or     BYTE PTR [edx+0x3a],al
  417b22:	loope  0x417ab0
  417b24:	or     eax,0x5067da03
  417b29:	push   ecx
  417b2a:	inc    edx
  417b2b:	sub    ah,BYTE PTR [ebx+0x60]
  417b2e:	mov    cl,BYTE PTR [ebp-0x2a2cc71c]
  417b34:	sbb    al,0x9a
  417b36:	fidivr WORD PTR [ebp+0x246217b8]
  417b3c:	fsubr  QWORD PTR [eax]
  417b3e:	jmp    0x32a6ea77
  417b43:	ficom  DWORD PTR [ebp+0x55]
  417b46:	out    dx,eax
  417b47:	adc    al,0xf5
  417b49:	gs adc al,0x6d
  417b4c:	jmp    0xc514:0xd48bbb24
  417b53:	pop    ds
  417b54:	lds    edi,FWORD PTR [edx]
  417b56:	test   BYTE PTR [ecx-0xa],bl
  417b59:	adc    eax,0xc6e34cc2
  417b5e:	pop    ebx
  417b5f:	dec    esp
  417b60:	jne    0x417b55
  417b62:	out    dx,eax
  417b63:	pop    es
  417b64:	aam    0xf5
  417b66:	sbb    edi,DWORD PTR [edi+0x4e]
  417b69:	adc    bh,bh
  417b6b:	xor    ah,dl
  417b6d:	mov    ds:0x357bcd31,al
  417b72:	inc    esp
  417b73:	aas    
  417b74:	or     esp,ecx
  417b76:	lods   al,BYTE PTR ds:[esi]
  417b77:	jns    0x417b52
  417b79:	xchg   ebp,eax
  417b7a:	sbb    BYTE PTR [ebx+0x7362957a],0xe2
  417b81:	xchg   edx,eax
  417b82:	bound  ebx,QWORD PTR [esi+0x3e]
  417b85:	push   eax
  417b86:	or     al,BYTE PTR [eax+0x5c]
  417b89:	mul    BYTE PTR [esi+0x78]
  417b8c:	inc    ecx
  417b8d:	bnd ret 0x3d2
  417b91:	(bad)  
  417b92:	arpl   WORD PTR [edx-0x22],bp
  417b95:	push   ecx
  417b96:	test   BYTE PTR ds:0x230158ca,cl
  417b9c:	push   cs
  417b9d:	stos   BYTE PTR es:[edi],al
  417b9e:	rcr    DWORD PTR [edx-0x1910fa4d],1
  417ba4:	daa    
  417ba5:	lds    eax,FWORD PTR [ebx+0x6c28ce4f]
  417bab:	push   esi
  417bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bad:	add    al,0x7f
  417baf:	xchg   esp,eax
  417bb0:	les    edx,FWORD PTR [ebx+0x2]
  417bb3:	push   0x23
  417bb5:	mov    dl,0x2
  417bb7:	mov    dl,0x7a
  417bb9:	dec    edi
  417bba:	in     al,0xd7
  417bbc:	call   0x7edf0f5b
  417bc1:	jnp    0x417b82
  417bc3:	sbb    BYTE PTR ds:0xd7e93660,0x4c
  417bca:	cmp    al,0x22
  417bcc:	jno    0x417bd2
  417bce:	popa   
  417bcf:	retf   
  417bd0:	les    esp,FWORD PTR es:[ebx+0x325d8189]
  417bd7:	loopne 0x417bb1
  417bd9:	mov    ds:0xdffe76be,al
  417bde:	mov    bh,0x54
  417be0:	out    0x65,eax
  417be2:	dec    edi
  417be3:	add    al,0x7d
  417be5:	ins    BYTE PTR es:[edi],dx
  417be6:	pop    ecx
  417be7:	fisub  DWORD PTR [ecx+0x52690dc7]
  417bed:	pushf  
  417bee:	fstp   TBYTE PTR ds:0x610203a4
  417bf4:	adc    ecx,DWORD PTR cs:[esi+0x37]
  417bf8:	jmp    0x417b96
  417bfa:	cli    
  417bfb:	inc    ebx
  417bfc:	sub    eax,0xde62b0ef
  417c01:	data16 cld 
  417c03:	push   ebx
  417c04:	inc    ecx
  417c05:	pushf  
  417c06:	imul   esi,DWORD PTR [ebx-0x18],0xd3cb6fc7
  417c0d:	jle    0x417be0
  417c0f:	rcl    edx,cl
  417c11:	imul   ecx,DWORD PTR [ebx-0x4df8ba74],0xffffffb4
  417c18:	retf   
  417c19:	xor    al,0xa4
  417c1b:	data16 mov cl,0x7f
  417c1e:	xor    eax,0xf2e53166
  417c23:	je     0x417c97
  417c25:	adc    DWORD PTR [edi+0x6ac13d8c],ebp
  417c2b:	adc    BYTE PTR [edx+0x69],bl
  417c2e:	shl    BYTE PTR [ebx+0x3871904e],cl
  417c34:	jmp    0x25115894
  417c39:	(bad)  
  417c3a:	sbb    ebp,DWORD PTR ds:0xa9edc959
  417c41:	leave  
  417c42:	add    DWORD PTR [ecx],esp
  417c44:	jnp    0x417bf7
  417c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c47:	aaa    
  417c48:	push   eax
  417c49:	add    esp,esp
  417c4b:	es push edx
  417c4d:	pop    eax
  417c4e:	cs or  eax,0xace0edd9
  417c54:	js     0x417cac
  417c56:	dec    ebp
  417c57:	mov    al,ds:0xe2dd2046
  417c5c:	or     esp,DWORD PTR [esi-0x3dd3cc0b]
  417c62:	icebp  
  417c63:	xchg   edi,eax
  417c64:	mov    esi,0x20729fd9
  417c69:	dec    edx
  417c6a:	adc    ebx,DWORD PTR [ebp+edi*2-0x1ee7d68]
  417c71:	mov    bh,0x4b
  417c73:	repnz cmp al,0x1d
  417c76:	and    esi,esi
  417c78:	pop    ebp
  417c79:	mov    esi,DWORD PTR [ebx+0x22]
  417c7c:	or     DWORD PTR [ebx],eax
  417c7e:	add    BYTE PTR [esi-0x1bc15f],0xe0
  417c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c86:	xchg   ebx,eax
  417c87:	enter  0x8c1e,0x41
  417c8b:	test   DWORD PTR [esp+esi*8-0x54],edi
  417c8f:	ficom  DWORD PTR [edi+edi*4+0x957d479]
  417c96:	sub    edx,ebp
  417c98:	pop    ds
  417c99:	dec    ecx
  417c9a:	cli    
  417c9b:	retf   
  417c9c:	repnz mov bh,0x49
  417c9f:	aad    0xda
  417ca1:	mov    esi,DWORD PTR [edi]
  417ca3:	jecxz  0x417c50
  417ca5:	cmp    ebp,DWORD PTR [edx-0xa95329d]
  417cab:	lods   eax,DWORD PTR ds:[esi]
  417cac:	mov    ebx,0x82eed9f6
  417cb1:	mov    cl,0xdf
  417cb3:	test   al,0x7c
  417cb5:	fs push 0x4be9cd00
  417cbb:	mov    cl,0x37
  417cbd:	dec    edi
  417cbe:	xadd   BYTE PTR [eax],dl
  417cc1:	jbe    0x417cde
  417cc3:	icebp  
  417cc4:	jbe    0x417cef
  417cc6:	lods   al,BYTE PTR ds:[esi]
  417cc7:	dec    eax
  417cc8:	xor    al,dl
  417cca:	std    
  417ccb:	push   ss
  417ccc:	hlt    
  417ccd:	addr16 push cs
  417ccf:	cs cld 
  417cd1:	sub    al,0x7b
  417cd3:	add    eax,0xec48bf75
  417cd8:	inc    edi
  417cd9:	mov    bh,bl
  417cdb:	dec    ebx
  417cdc:	test   ebp,edi
  417cde:	pop    ss
  417cdf:	ins    BYTE PTR es:[edi],dx
  417ce0:	dec    edi
  417ce1:	imul   ebx,DWORD PTR [esi-0x63],0xffffff91
  417ce5:	fs jecxz 0x417d05
  417ce8:	aaa    
  417ce9:	rol    ch,0xce
  417cec:	pop    ds
  417ced:	adc    bh,BYTE PTR [edi+esi*1]
  417cf0:	jl     0x417d02
  417cf2:	fcomp  DWORD PTR [edx+0x1a]
  417cf5:	(bad)
  417cf9:	sbb    BYTE PTR [ebp-0x3656c45f],ch
  417cff:	popf   
  417d00:	push   0x3a5c36a1
  417d05:	adc    eax,0xf889dbf1
  417d0a:	or     cl,bh
  417d0c:	or     eax,0x1fe84509
  417d11:	imul   edx,DWORD PTR fs:[edi+0x38954446],0xbe4afcbf
  417d1c:	(bad)  
  417d1d:	jle    0x417cc1
  417d1f:	push   edx
  417d20:	fdiv   DWORD PTR [ecx-0x42df88dd]
  417d26:	scas   al,BYTE PTR es:[edi]
  417d27:	cmp    eax,0x42c98069
  417d2c:	imul   esi,DWORD PTR [edx],0x7208e13a
  417d32:	mov    edx,esi
  417d34:	push   cs
  417d35:	arpl   WORD PTR [ebx],bx
  417d37:	test   al,0xcf
  417d39:	ds scas eax,DWORD PTR es:[edi]
  417d3b:	sbb    DWORD PTR [edx+0x23],esi
  417d3e:	push   ebp
  417d3f:	jns    0x417ccd
  417d41:	push   ecx
  417d42:	push   esi
  417d43:	mov    ebx,eax
  417d45:	xchg   esi,eax
  417d46:	cmp    DWORD PTR [ebx-0x575f3214],edx
  417d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d4d:	dec    ebx
  417d4e:	xchg   ebx,eax
  417d4f:	jmp    0x6b66:0x272c3c6c
  417d56:	mov    WORD PTR [ecx+ecx*2],cs
  417d59:	xchg   esp,eax
  417d5a:	fst    DWORD PTR [ebx+eiz*1+0x1]
  417d5e:	or     BYTE PTR [edx+edx*8-0x29],dl
  417d62:	bound  eax,QWORD PTR [ebx]
  417d64:	mov    ecx,0x7e657c3c
  417d69:	or     DWORD PTR [eax+0x12],0x6
  417d6d:	sti    
  417d6e:	push   cs
  417d6f:	js     0x417d10
  417d71:	cwde   
  417d72:	ret    0x490e
  417d75:	fdivr  QWORD PTR [eax-0xf]
  417d78:	sti    
  417d79:	mov    edi,esp
  417d7b:	inc    ecx
  417d7c:	adc    ecx,DWORD PTR [ebx+0x18]
  417d7f:	in     eax,0x71
  417d81:	jo     0x417da8
  417d83:	mov    eax,ds:0x9b105657
  417d88:	pop    edx
  417d89:	dec    ecx
  417d8a:	and    cl,BYTE PTR [ebx]
  417d8c:	cmp    BYTE PTR [ebx+0x7d],ah
  417d8f:	(bad)  
  417d90:	popa   
  417d91:	pushf  
  417d92:	repnz add dh,BYTE PTR [ebp-0x65]
  417d96:	call   DWORD PTR es:[esi-0x4bd2ae04]
  417d9d:	test   BYTE PTR [edi-0x97e154b],bl
  417da3:	mov    ch,0xd
  417da5:	cmp    DWORD PTR [esi+0x1076f732],esi
  417dab:	inc    BYTE PTR [esi-0x2e]
  417dae:	in     al,0x7
  417db0:	stos   BYTE PTR es:[edi],al
  417db1:	out    0x2e,al
  417db3:	fild   QWORD PTR [ecx-0x43987bf3]
  417db9:	sbb    al,0xe0
  417dbb:	cwde   
  417dbc:	push   eax
  417dbd:	cmp    eax,0xfc666f80
  417dc2:	push   edx
  417dc3:	mov    WORD PTR [ebx-0x31b03084],fs
  417dc9:	or     al,0xce
  417dcb:	lds    ebp,FWORD PTR ds:0xc4e23c5d
  417dd1:	jmp    0x417e52
  417dd3:	cmp    dh,ch
  417dd5:	and    DWORD PTR [ebx-0x69fe8121],edi
  417ddb:	out    dx,al
  417ddc:	adc    esi,DWORD PTR [ecx]
  417dde:	ss push edx
  417de0:	and    al,dh
  417de2:	pop    edx
  417de3:	adc    DWORD PTR [esi+0x62befcfc],edx
  417de9:	pop    edi
  417dea:	adc    BYTE PTR [esi-0x79],bh
  417ded:	push   ebp
  417dee:	hlt    
  417def:	sahf   
  417df0:	iret   
  417df1:	gs pushf 
  417df3:	scas   eax,DWORD PTR es:[edi]
  417df4:	mov    esp,0xeeb28f7
  417df9:	jae    0x417d97
  417dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dfc:	repnz dec ebx
  417dfe:	ret    0x990
  417e01:	cdq    
  417e02:	out    0xca,eax
  417e04:	xchg   ebp,eax
  417e05:	push   edx
  417e06:	mov    al,ds:0xe021d9b4
  417e0b:	mov    esp,0x5ccfc754
  417e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e11:	leave  
  417e12:	sbb    BYTE PTR [eax],cl
  417e14:	xchg   edi,eax
  417e15:	cmp    DWORD PTR [eax],ecx
  417e17:	into   
  417e18:	adc    eax,0xdfd97a1
  417e1d:	mov    DWORD PTR [edi],eax
  417e1f:	ja     0x417dde
  417e21:	stc    
  417e22:	inc    esp
  417e23:	sub    al,0xd2
  417e25:	dec    esi
  417e26:	mov    bl,0xa1
  417e28:	(bad)  
  417e29:	dec    ebp
  417e2b:	inc    edi
  417e2c:	or     BYTE PTR [ebp-0x72],bl
  417e2f:	mov    ecx,0xef1891be
  417e34:	pop    ebx
  417e35:	addr16 jg 0x417e57
  417e38:	xor    eax,0xc60682c7
  417e3d:	bound  esp,QWORD PTR [ecx]
  417e3f:	push   es
  417e40:	mov    ah,0x74
  417e42:	sbb    cl,BYTE PTR [edi]
  417e44:	dec    ebx
  417e45:	js     0x417e00
  417e47:	fwait
  417e48:	and    ch,BYTE PTR [ebp+eiz*1+0x9]
  417e4c:	or     al,al
  417e4e:	cld    
  417e4f:	inc    edi
  417e50:	pop    es
  417e51:	xchg   edx,eax
  417e52:	sahf   
  417e53:	loop   0x417eb1
  417e55:	xor    eax,DWORD PTR [ebx-0x91fd73e]
  417e5b:	je     0x417e52
  417e5d:	stos   DWORD PTR es:[edi],eax
  417e5e:	jmp    0x2c4d:0xf4837600
  417e65:	jne    0x417e41
  417e67:	shl    DWORD PTR [edx],cl
  417e69:	pop    edi
  417e6a:	repnz out 0x10,eax
  417e6d:	pop    es
  417e6e:	ds pop esi
  417e70:	add    BYTE PTR [esi+0x59733e26],dl
  417e76:	push   es
  417e77:	dec    edi
  417e78:	jns    0x417eea
  417e7a:	das    
  417e7b:	sbb    eax,0x4e61af34
  417e80:	pop    eax
  417e81:	aam    0xc3
  417e83:	push   ebp
  417e84:	mov    cl,BYTE PTR [ebp+eiz*1+0x17]
  417e88:	lods   eax,DWORD PTR ds:[esi]
  417e89:	and    ecx,DWORD PTR ds:0x7ee60297
  417e8f:	mov    dl,0xa5
  417e91:	jbe    0x417ef0
  417e93:	fs ret 
  417e95:	shr    DWORD PTR [eax-0x3a],cl
  417e98:	cmp    BYTE PTR [ebp-0x632bd5ce],ah
  417e9e:	dec    ebp
  417e9f:	inc    ecx
  417ea0:	in     eax,0xf
  417ea2:	das    
  417ea3:	fbld   TBYTE PTR [ebx-0x5eb9b07f]
  417ea9:	mov    ebp,0x87c61b0a
  417eae:	sti    
  417eaf:	pop    edi
  417eb0:	test   DWORD PTR es:[ecx-0x32e75a27],ebp
  417eb7:	bnd jl 0x417f16
  417eba:	sbb    BYTE PTR [edi-0x27],al
  417ebd:	pop    ss
  417ebe:	mov    al,0x77
  417ec0:	mov    edi,0xe2411abd
  417ec5:	mov    ds:0x23c7d071,al
  417eca:	imul   BYTE PTR [eax+ebx*8-0x60]
  417ece:	pop    eax
  417ecf:	mov    esi,0xeb329e39
  417ed4:	mov    ebx,0xfa79ef64
  417ed9:	inc    edx
  417eda:	push   cs
  417edb:	or     ah,bl
  417edd:	adc    DWORD PTR [edi],ebp
  417edf:	mov    esp,0xb16f7175
  417ee4:	xchg   DWORD PTR [esi],eax
  417ee6:	retfw  
  417ee8:	mov    cs,WORD PTR [ebx-0x22]
  417eeb:	fisub  WORD PTR [ebp+0x47]
  417eee:	jg     0x417e84
  417ef0:	scas   al,BYTE PTR es:[edi]
  417ef1:	mov    WORD PTR [ebp-0x4c6f12f6],ss
  417ef7:	ret    0xfe02
  417efa:	fisttp QWORD PTR [ebx+0x75]
  417efd:	lea    ecx,[esi]
  417eff:	out    0xd2,eax
  417f01:	call   0xab6b0400
  417f06:	push   ebx
  417f07:	jae    0x417f5b
  417f09:	into   
  417f0a:	sbb    BYTE PTR [edx-0x7],0xad
  417f0e:	imul   ebp,DWORD PTR [esi],0xffffffd0
  417f11:	inc    edx
  417f12:	repnz inc ebp
  417f14:	addr16 push eax
  417f16:	or     eax,0x8ec80978
  417f1b:	daa    
  417f1c:	imul   edx,DWORD PTR [edi],0xa7f23522
  417f22:	jns    0x417f89
  417f24:	pop    ds
  417f25:	pop    eax
  417f26:	xchg   ebp,eax
  417f27:	rol    BYTE PTR [ebp+0x41563e92],1
  417f2d:	mov    ah,al
  417f2f:	dec    ebp
  417f30:	sbb    ecx,eax
  417f32:	cmp    eax,0xe18cff1b
  417f38:	inc    ebp
  417f39:	ja     0x417f9a
  417f3b:	loopne 0x417ed6
  417f3d:	gs lock mov dh,bl
  417f41:	stos   BYTE PTR es:[edi],al
  417f42:	test   ecx,esp
  417f44:	push   ds
  417f45:	cmp    eax,0x7fb428ce
  417f4a:	and    eax,0xfb8a813f
  417f4f:	int3   
  417f50:	nop
  417f51:	ds dec dx
  417f54:	in     al,0xfb
  417f56:	out    dx,eax
  417f57:	push   ss
  417f58:	xchg   esp,eax
  417f59:	dec    edx
  417f5a:	mov    bl,0xab
  417f5c:	mov    al,BYTE PTR [esi+0x76]
  417f5f:	in     eax,0x6b
  417f61:	addr16 cmp dl,ch
  417f64:	cmp    bl,ch
  417f66:	push   ebp
  417f67:	int3   
  417f68:	push   es
  417f69:	lods   eax,DWORD PTR ds:[esi]
  417f6a:	sub    DWORD PTR [edx-0x780810cd],edx
  417f70:	es pop esp
  417f72:	cmp    ecx,DWORD PTR [edi]
  417f74:	add    al,0xa3
  417f76:	jp     0x417f37
  417f78:	jno    0x417f3e
  417f7a:	daa    
  417f7b:	cmc    
  417f7c:	in     eax,dx
  417f7d:	mov    eax,0xcbb17e88
  417f82:	sar    DWORD PTR [edi],cl
  417f84:	outs   dx,DWORD PTR ds:[esi]
  417f85:	adc    eax,DWORD PTR [ebx+edi*4+0x71]
  417f89:	in     al,0x4e
  417f8b:	mov    ds:0x3b2091a8,eax
  417f90:	lahf   
  417f91:	mov    dl,BYTE PTR [edx+0x77]
  417f94:	cmp    al,0x9c
  417f96:	call   0xaea2:0x7582145
  417f9d:	ins    BYTE PTR es:[edi],dx
  417f9e:	push   ds
  417f9f:	cwde   
  417fa0:	hlt    
  417fa1:	pop    ds
  417fa2:	lods   eax,DWORD PTR ds:[esi]
  417fa3:	lea    ebx,[esp+edi*2]
  417fa6:	fidiv  WORD PTR [ebx-0x66bae623]
  417fac:	mov    cl,0xd4
  417fae:	daa    
  417faf:	ja     0x417fec
  417fb1:	js     0x417f4e
  417fb3:	ret    
  417fb4:	(bad)
  417fb7:	in     eax,dx
  417fb8:	sub    dh,BYTE PTR [esi+0x66efd1bc]
  417fbe:	outs   dx,BYTE PTR ds:[esi]
  417fbf:	sub    DWORD PTR [edx+0x4f59c317],0x7f9055e2
  417fc9:	add    al,BYTE PTR [esi-0x584bece7]
  417fcf:	pop    ebx
  417fd0:	popw   es
  417fd2:	cs pop ebp
  417fd4:	xor    ah,ah
  417fd6:	cmc    
  417fd7:	ret    
  417fd8:	cli    
  417fd9:	push   ds
  417fda:	popf   
  417fdb:	(bad)  
  417fdd:	lods   eax,DWORD PTR ds:[esi]
  417fde:	nop
  417fdf:	push   edi
  417fe0:	out    0xae,al
  417fe2:	mov    esi,0xe531d4f7
  417fe7:	enter  0x98f9,0xbf
  417feb:	inc    ecx
  417fec:	cs mov esp,0xe06af270
  417ff2:	mov    cl,0x8c
  417ff4:	jbe    0x417fda
  417ff6:	(bad)  
  417ff7:	pop    eax
  417ff8:	or     bh,ah
  417ffa:	repnz add ecx,DWORD PTR [ebx+0xc782e72]
  418001:	jmp    0x417fed
  418003:	sub    DWORD PTR [edi],ecx
  418005:	push   es
  418006:	jle    0x417fa6
  418008:	cmp    bl,BYTE PTR [eax]
  41800a:	shl    DWORD PTR [edi-0x19],1
  41800d:	pop    edx
  41800e:	inc    esi
  41800f:	fcomp  QWORD PTR [esi-0x5f15719d]
  418015:	sahf   
  418016:	adc    DWORD PTR [eax],0x3b
  418019:	pop    edi
  41801a:	jle    0x417fc2
  41801c:	or     eax,0xe3fa3357
  418021:	add    dh,BYTE PTR [eax-0x14]
  418024:	mov    BYTE PTR ss:[edi],ah
  418027:	push   0xc585521b
  41802c:	(bad)  
  41802d:	jmp    0x417fc4
  41802f:	je     0x418051
  418031:	inc    ebx
  418032:	push   es
  418033:	or     BYTE PTR [esi-0xef7d6dc],0x96
  41803a:	and    eax,0xa32ee311
  41803f:	inc    esi
  418040:	inc    esp
  418041:	xor    al,0xef
  418043:	gs sub eax,0xffffffc6
  418047:	add    BYTE PTR [edi-0x70],ah
  41804a:	adc    ch,BYTE PTR [edi-0x21dbca64]
  418050:	iret   
  418051:	jp     0x418032
  418053:	aaa    
  418054:	push   0xba56e7f7
  418059:	and    bl,BYTE PTR [edi+0x62bda81b]
  41805f:	add    al,0xad
  418061:	inc    esp
  418062:	repnz mov eax,ds:0xd5bf85c3
  418068:	call   0x994a:0x99e5229b
  41806f:	xor    DWORD PTR [eax],edi
  418071:	inc    eax
  418072:	fwait
  418073:	(bad)  
  418074:	sub    DWORD PTR [eax-0x62],ebp
  418077:	xchg   edx,eax
  418078:	loop   0x4180d1
  41807a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41807b:	loope  0x418091
  41807d:	popf   
  41807e:	dec    ebp
  41807f:	adc    BYTE PTR [edx-0x7a],dl
  418082:	pop    ss
  418083:	xor    eax,0x1e37e0fc
  418088:	pusha  
  418089:	jle    0x41802b
  41808b:	fcomp  DWORD PTR [eax]
  41808d:	push   eax
  41808e:	cwde   
  41808f:	cmp    al,0xb8
  418091:	ret    
  418092:	xlat   BYTE PTR ds:[ebx]
  418093:	addr16 or eax,0xd031fa0
  418099:	ins    BYTE PTR es:[edi],dx
  41809a:	push   eax
  41809b:	callw  0x1ef1
  41809f:	stos   DWORD PTR es:[edi],eax
  4180a0:	rcr    DWORD PTR [esi+0x25],cl
  4180a3:	mov    dl,0xcc
  4180a5:	clc    
  4180a6:	std    
  4180a7:	xchg   esp,eax
  4180a8:	xor    cl,BYTE PTR [esi]
  4180aa:	pop    esi
  4180ab:	aad    0x26
  4180ad:	lds    edi,FWORD PTR [ebx+0x15]
  4180b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180b1:	mov    eax,ds:0x7f29cf08
  4180b6:	jp     0x418133
  4180b8:	repnz leave 
  4180ba:	inc    BYTE PTR [edx]
  4180bc:	popf   
  4180bd:	int3   
  4180be:	pop    ss
  4180bf:	fdivr  DWORD PTR [edi+0x561f698c]
  4180c5:	jb     0x4180f4
  4180c7:	cwde   
  4180c8:	(bad)  
  4180c9:	and    ch,BYTE PTR [ebx]
  4180cb:	fsub   QWORD PTR [esi]
  4180cd:	es mov cl,0xce
  4180d0:	sbb    DWORD PTR [ebp+0x36],esp
  4180d3:	not    dl
  4180d5:	xlat   BYTE PTR ds:[ebx]
  4180d6:	retf   
  4180d7:	out    dx,eax
  4180d8:	out    dx,al
  4180d9:	icebp  
  4180da:	test   eax,0xff05da1d
  4180df:	repz aas 
  4180e1:	test   ch,0xc0
  4180e4:	xchg   edx,eax
  4180e5:	xchg   edi,eax
  4180e6:	add    esp,eax
  4180e8:	lods   eax,DWORD PTR ds:[esi]
  4180e9:	cmc    
  4180ea:	out    0x91,al
  4180ec:	push   ecx
  4180ed:	sbb    DWORD PTR [ecx],edi
  4180ef:	pusha  
  4180f0:	pop    ss
  4180f1:	and    ebp,esp
  4180f3:	mov    dl,BYTE PTR [ebp+eiz*1+0x723595df]
  4180fa:	or     BYTE PTR [edx-0x48169f38],bh
  418100:	adc    al,dl
  418102:	rcr    BYTE PTR [ebx+0x495042de],1
  418108:	mov    cl,0x60
  41810a:	pop    ss
  41810b:	rol    esi,1
  41810d:	and    BYTE PTR [esi-0xd],dh
  418110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418111:	sbb    BYTE PTR ds:0x9762cd3a,0x7
  418118:	in     al,dx
  418119:	popf   
  41811a:	scas   al,BYTE PTR es:[edi]
  41811b:	mov    eax,0x695c313c
  418120:	int3   
  418121:	push   edx
  418122:	int    0x28
  418124:	push   esp
  418125:	rol    DWORD PTR [eax-0x2d],1
  418128:	sbb    ecx,ebp
  41812a:	loopne 0x418100
  41812c:	xor    eax,0xace18147
  418131:	jle    0x418198
  418133:	xchg   esp,eax
  418134:	repz mov ?,WORD PTR [edx-0x18]
  418138:	retf   
  418139:	cmc    
  41813a:	cdq    
  41813b:	pop    esp
  41813c:	in     al,0xf1
  41813e:	js     0x4181b8
  418140:	jle    0x4180df
  418142:	or     al,0xd9
  418144:	jbe    0x41812e
  418146:	sbb    al,0xe
  418148:	shr    DWORD PTR [ebx],1
  41814a:	(bad)  
  41814b:	pop    edi
  41814c:	out    dx,al
  41814d:	dec    ebp
  41814e:	mov    bl,0x98
  418150:	add    cl,BYTE PTR [edx]
  418152:	imul   edi,DWORD PTR [bx-0x80],0xdf17862a
  41815a:	cdq    
  41815b:	mov    edx,0x90db261b
  418160:	lahf   
  418161:	int    0x30
  418163:	(bad)  
  418164:	aad    0xd1
  418166:	test   eax,0x60f5fb23
  41816b:	pop    edx
  41816c:	pop    edx
  41816d:	out    0xfe,eax
  41816f:	xchg   esi,eax
  418170:	in     al,0x7d
  418172:	call   0x9de2:0x374dacab
  418179:	push   ds
  41817a:	out    0x4e,eax
  41817c:	push   0x2b0c4fe0
  418181:	into   
  418182:	aad    0x9c
  418184:	inc    ebx
  418185:	mov    bl,dl
  418187:	stos   BYTE PTR es:[edi],al
  418188:	cmp    al,0x90
  41818a:	leave  
  41818b:	xchg   DWORD PTR [edx-0x5],ebp
  41818e:	push   ss
  41818f:	mov    edx,0x1f1ec4c6
  418194:	push   ss
  418195:	out    dx,al
  418196:	dec    eax
  418197:	pop    esp
  418198:	and    DWORD PTR [esi-0x7a901fd3],edx
  41819e:	and    dl,bl
  4181a0:	mov    dl,0x1d
  4181a2:	popf   
  4181a3:	sub    cl,BYTE PTR [eax-0x77]
  4181a6:	mov    ebx,0x1dc0bcd2
  4181ab:	sar    ch,0x6f
  4181ae:	dec    eax
  4181af:	jno    0x4181ba
  4181b1:	sar    bh,1
  4181b3:	fmul   QWORD PTR [ecx+eiz*1-0x4fd94843]
  4181ba:	sub    ah,BYTE PTR [ebx+0x72]
  4181bd:	dec    esi
  4181be:	shl    DWORD PTR [ebx],cl
  4181c0:	push   ss
  4181c1:	loope  0x418177
  4181c3:	inc    edx
  4181c4:	pop    eax
  4181c5:	inc    ebp
  4181c6:	rcl    BYTE PTR [edi-0x1e],1
  4181c9:	cmp    dl,BYTE PTR [ebp-0x2a]
  4181cc:	lods   al,BYTE PTR ds:[esi]
  4181cd:	cmp    al,0x43
  4181cf:	ds jl  0x41824c
  4181d2:	out    0x1d,eax
  4181d4:	ja     0x41824c
  4181d6:	enter  0xea04,0x1d
  4181da:	mov    ah,0x40
  4181dc:	add    al,0xed
  4181de:	call   0xdd53f015
  4181e3:	mul    DWORD PTR [esi]
  4181e5:	enter  0x8740,0x2e
  4181e9:	test   BYTE PTR [edi+0x13],ch
  4181ec:	fidivr WORD PTR [edx-0x25fc7d77]
  4181f2:	lds    esp,FWORD PTR [ebx]
  4181f4:	ds (bad) 
  4181f6:	fcom   DWORD PTR [esp+eiz*2-0x3276f9d0]
  4181fd:	xchg   ebx,eax
  4181fe:	ss mov esi,0x7941c872
  418204:	cli    
  418205:	push   cs
  418206:	(bad)  
  418208:	xchg   ebp,eax
  418209:	dec    esi
  41820a:	ret    
  41820b:	push   0x7
  41820d:	mov    dh,0xe1
  41820f:	mov    ebp,0x94b57be3
  418214:	std    
  418215:	xchg   ebx,eax
  418216:	xor    dl,bh
  418218:	xor    ch,BYTE PTR [edi]
  41821a:	xchg   esi,eax
  41821b:	es push ebp
  41821d:	std    
  41821e:	or     DWORD PTR [edi+0x36feaa21],ebx
  418224:	jae    0x418293
  418226:	ss mov ecx,0x6d8e1190
  41822c:	pushf  
  41822d:	xlat   BYTE PTR ds:[ebx]
  41822e:	in     eax,0xeb
  418230:	gs inc ebx
  418232:	clc    
  418233:	cmp    DWORD PTR [esi-0x63],ebp
  418236:	je     0x418231
  418238:	scas   eax,DWORD PTR es:[edi]
  418239:	xchg   DWORD PTR [esi],esi
  41823b:	adc    eax,0x3c627eae
  418240:	jb     0x4181d2
  418242:	pop    edi
  418243:	ffree  st(3)
  418245:	and    bh,BYTE PTR [esi+0x26]
  418248:	(bad)  
  418249:	std    
  41824a:	jmp    0x3fc0:0xa149e97c
  418251:	arpl   WORD PTR [esi],bx
  418253:	stos   DWORD PTR es:[edi],eax
  418254:	pop    edi
  418255:	icebp  
  418256:	ss std 
  418258:	sbb    ebx,DWORD PTR [esi]
  41825a:	fs inc esi
  41825c:	sbb    DWORD PTR [edx+0x11],0xffd5ec2c
  418263:	push   es
  418264:	dec    esp
  418265:	xor    bh,BYTE PTR [eax-0x2d]
  418268:	jecxz  0x418228
  41826a:	jmp    0x41827d
  41826c:	(bad)
  418270:	aas    
  418271:	jnp    0x4181f4
  418273:	mov    edi,0xf74dc943
  418278:	clc    
  418279:	addr16 jb 0x4182c2
  41827c:	mov    eax,0xe8cd165e
  418281:	adc    DWORD PTR [ecx],edi
  418283:	lds    eax,FWORD PTR [eax+0x5de28067]
  418289:	pop    ds
  41828a:	inc    esp
  41828b:	mov    ah,0x21
  41828d:	sbb    BYTE PTR ds:0x1a1f3256,bh
  418293:	dec    eax
  418294:	fstp   QWORD PTR [ebp+0x6dfadd3]
  41829a:	js     0x418260
  41829c:	pop    ecx
  41829d:	mov    edx,0x2fc4d8a4
  4182a2:	cmp    DWORD PTR [edi-0x7c],ebp
  4182a5:	mov    ch,BYTE PTR [eax+0x41]
  4182a8:	stos   DWORD PTR es:[edi],eax
  4182a9:	mov    eax,0x28b8f47e
  4182ae:	imul   eax,DWORD PTR [ebx+0x3edb7590],0xfc978bdc
  4182b8:	dec    eax
  4182b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182ba:	icebp  
  4182bb:	pop    ebp
  4182bc:	idiv   DWORD PTR [esi]
  4182be:	fild   QWORD PTR [ebx-0x30]
  4182c1:	lods   al,BYTE PTR ds:[esi]
  4182c2:	ja     0x4182e8
  4182c4:	push   es
  4182c5:	pushf  
  4182c6:	xchg   edx,eax
  4182c7:	pop    es
  4182c8:	in     al,0x4d
  4182ca:	xor    al,0xaf
  4182cc:	or     DWORD PTR [esi],ecx
  4182ce:	add    eax,0x24d695c6
  4182d3:	mov    edx,0xd95f4ff5
  4182d8:	lahf   
  4182d9:	mov    al,0xa6
  4182db:	sub    BYTE PTR [esi-0x1decb4d9],bh
  4182e1:	jl     0x41827a
  4182e3:	mov    al,ds:0xddbac4cf
  4182e8:	and    cl,al
  4182ea:	mov    ds:0x2ed5dfaf,al
  4182ef:	es xor al,0x26
  4182f2:	push   edi
  4182f3:	xchg   esp,eax
  4182f4:	dec    esp
  4182f5:	mov    edx,0x67bb5e95
  4182fa:	sub    eax,0x5b9e317f
  4182ff:	jl     0x4182b4
  418301:	adc    esp,DWORD PTR [esi+ecx*1]
  418304:	dec    edx
  418305:	fadd   QWORD PTR ds:0xef12b20c
  41830b:	cwde   
  41830c:	dec    ebp
  41830d:	mov    esp,0x90051024
  418312:	pop    ecx
  418313:	loop   0x4182a7
  418315:	div    ah
  418317:	mov    dl,0xcb
  418319:	inc    esi
  41831a:	or     ah,dl
  41831c:	mov    edx,0x7f21627
  418321:	ins    DWORD PTR es:[edi],dx
  418322:	adc    DWORD PTR [ecx-0x9],esp
  418325:	pop    edx
  418326:	out    dx,al
  418327:	imul   ebp,edi,0xde3ba3ac
  41832d:	cli    
  41832e:	jo     0x4182ee
  418330:	push   esp
  418331:	push   ebx
  418332:	in     eax,0x54
  418334:	inc    esi
  418335:	jmp    0x418348
  418337:	retf   
  418338:	fs out 0x48,al
  41833b:	mov    ds:0xbf391e71,eax
  418340:	cmp    ecx,DWORD PTR es:[ecx+edx*8]
  418344:	inc    edi
  418345:	push   0xffffffef
  418347:	add    esp,ebx
  418349:	rol    edx,0x2
  41834c:	mov    bl,0x1e
  41834e:	mov    ebx,0x763ddaf2
  418353:	sub    DWORD PTR [esi+0x7b],esp
  418356:	mov    eax,0x362fce38
  41835b:	xor    al,0x3b
  41835d:	ret    
  41835e:	adc    al,0x1d
  418360:	fs jno 0x4183b8
  418363:	(bad)  
  418364:	out    dx,eax
  418365:	int3   
  418366:	push   eax
  418367:	mov    ebx,0xbba7ef71
  41836c:	jg     0x4182f2
  41836e:	bound  edi,QWORD PTR [edx+0x17065c27]
  418374:	punpcklbw mm4,DWORD PTR [ebx-0x374f69aa]
  41837b:	jle    0x41834a
  41837d:	xor    BYTE PTR [edx],0x3c
  418380:	stos   BYTE PTR es:[edi],al
  418381:	in     al,0x45
  418383:	xchg   esp,eax
  418384:	mov    dl,0xe0
  418386:	push   0xa01a4361
  41838b:	test   BYTE PTR [ecx+0x6fd61d21],dh
  418391:	nop
  418392:	pop    edi
  418393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418394:	lahf   
  418395:	arpl   WORD PTR [esi-0x6],bx
  418398:	xor    al,BYTE PTR [esp+ebx*8-0x2ca7c1ed]
  41839f:	js     0x41840a
  4183a1:	retf   0x31f1
  4183a4:	xchg   BYTE PTR [edx+0x552f0052],ch
  4183aa:	fstp   DWORD PTR [edx]
  4183ac:	cs gs dec esi
  4183af:	stc    
  4183b0:	scas   eax,DWORD PTR es:[edi]
  4183b1:	ror    BYTE PTR [edx+0xe414b42],0xd4
  4183b8:	or     DWORD PTR [ebp+0x541d16ec],edx
  4183be:	cdq    
  4183bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183c0:	xor    dh,BYTE PTR [ecx+0x4482af1c]
  4183c6:	rol    DWORD PTR [edx-0x7afa3545],cl
  4183cc:	fild   WORD PTR [edi+0x40fd7768]
  4183d2:	or     DWORD PTR [eax-0x78],esp
  4183d5:	inc    edi
  4183d6:	call   0x9b15:0x681121ca
  4183dd:	sub    eax,edi
  4183df:	in     eax,0xa
  4183e1:	mov    edx,0x1e00996b
  4183e6:	inc    esp
  4183e7:	and    al,0x93
  4183e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ea:	lock xchg edx,eax
  4183ec:	dec    eax
  4183ed:	or     bh,ch
  4183ef:	adc    al,0xce
  4183f1:	push   edi
  4183f2:	dec    edi
  4183f3:	jg     0x4183ae
  4183f5:	cmp    eax,DWORD PTR [ebx+0x6133580f]
  4183fb:	jl     0x4183df
  4183fd:	ja     0x418460
  4183ff:	add    esp,DWORD PTR [ebx+0x59]
  418402:	imul   ecx,esi,0x78
  418405:	jp     0x4183ce
  418407:	fmul   DWORD PTR [ecx-0x6e]
  41840a:	addr16 inc ebp
  41840c:	in     al,dx
  41840d:	(bad)  
  41840f:	or     edx,DWORD PTR [esp+eiz*2-0x5e]
  418413:	mov    esi,0xf064d930
  418418:	mov    ?,WORD PTR [ebx+edi*1-0x4d]
  41841c:	test   ebp,ebp
  41841e:	scas   eax,DWORD PTR es:[edi]
  41841f:	dec    ebx
  418420:	scas   al,BYTE PTR es:[edi]
  418421:	aaa    
  418422:	cmp    BYTE PTR [edx+ebp*8],ch
  418425:	adc    BYTE PTR [esp+edi*8+0x75],al
  418429:	and    al,0xe
  41842b:	adc    cl,ah
  41842d:	popa   
  41842e:	xchg   edx,eax
  41842f:	xor    esp,eax
  418431:	push   esp
  418432:	daa    
  418433:	push   esi
  418434:	repz jne 0x4183f1
  418437:	xchg   DWORD PTR [ebp-0x6d],esi
  41843a:	popa   
  41843b:	cwde   
  41843c:	in     al,dx
  41843d:	xor    DWORD PTR es:[edi],edi
  418440:	cmp    ebp,esi
  418442:	out    0xbb,al
  418444:	xor    ebp,DWORD PTR [ebp+0x35]
  418447:	outs   dx,DWORD PTR ds:[esi]
  418448:	fwait
  418449:	pop    eax
  41844a:	sbb    bl,BYTE PTR [edx+0x43aa7915]
  418450:	xor    ch,dh
  418452:	adc    esi,DWORD PTR [edi+0x77]
  418455:	ds mov esp,0xb70d191a
  41845b:	(bad)  
  41845c:	sahf   
  41845d:	inc    ebx
  41845e:	cli    
  41845f:	dec    ebp
  418460:	cld    
  418461:	xor    DWORD PTR [edx],edi
  418463:	jp     0x41846d
  418465:	inc    eax
  418466:	sub    al,0xc2
  418468:	xchg   ebx,eax
  418469:	pop    ds
  41846a:	std    
  41846b:	test   BYTE PTR [ebp-0x5f45692a],cl
  418471:	add    eax,0xad121cbe
  418476:	sbb    esp,DWORD PTR [edx]
  418478:	or     esp,DWORD PTR [ecx+0x7a73d2ba]
  41847e:	mov    ds:0x85f746cf,eax
  418483:	sahf   
  418484:	xor    ebp,DWORD PTR [si]
  418487:	in     al,dx
  418488:	out    0x85,eax
  41848a:	and    eax,esp
  41848c:	sbb    eax,0x688e6888
  418491:	push   cs
  418492:	inc    esi
  418493:	sar    ebx,cl
  418495:	clc    
  418496:	sar    DWORD PTR [ecx+eax*1+0x40a9a2a7],1
  41849d:	outs   dx,DWORD PTR ds:[esi]
  41849e:	les    eax,FWORD PTR [edx-0x6e]
  4184a1:	pop    ecx
  4184a2:	fbld   TBYTE PTR [edi+0x5588dbf0]
  4184a8:	push   0xa2be00f8
  4184ad:	icebp  
  4184ae:	dec    edi
  4184af:	mov    ebp,0x75bee754
  4184b4:	mov    eax,ds:0x97242fd1
  4184b9:	mov    al,0xa1
  4184bb:	dec    esi
  4184bc:	mov    ebp,DWORD PTR [ecx]
  4184be:	and    eax,0x7418b761
  4184c3:	imul   edi,DWORD PTR [ebx+ecx*2],0x14aaa12f
  4184ca:	adc    al,0xc9
  4184cc:	rol    BYTE PTR [ebx],0xad
  4184cf:	sbb    eax,0x78e6725f
  4184d4:	int3   
  4184d5:	(bad)  
  4184d6:	in     al,dx
  4184d7:	dec    eax
  4184d8:	push   ecx
  4184d9:	icebp  
  4184da:	scas   al,BYTE PTR es:[edi]
  4184db:	adc    BYTE PTR [esi-0x4c],dh
  4184de:	jns    0x418464
  4184e0:	cs ds and al,0xdf
  4184e4:	mov    DWORD PTR [ebp+0x35],edi
  4184e7:	and    BYTE PTR [ebx+ebp*8-0x486ff004],ch
  4184ee:	test   DWORD PTR [eax-0xfb0610e],esi
  4184f4:	sti    
  4184f5:	jg     0x41853b
  4184f7:	push   esp
  4184f8:	icebp  
  4184f9:	pop    ds
  4184fa:	jne    0x4184fb
  4184fc:	shr    DWORD PTR [ebx+ecx*8-0x5d],cl
  418500:	lahf   
  418501:	(bad)  
  418502:	out    dx,al
  418503:	call   0xa404:0xf4cec4d5
  41850a:	add    BYTE PTR [eax-0x6cde15f],dl
  418510:	jno    0x418571
  418512:	mov    eax,DWORD PTR [eax-0x6]
  418515:	fdiv   QWORD PTR [ebx-0x2bc169f0]
  41851b:	mov    dl,0xcc
  41851d:	mov    al,BYTE PTR [esi-0x246a80a1]
  418523:	dec    edx
  418524:	frstor [ecx]
  418526:	push   0xffffffd6
  418528:	and    bh,cl
  41852a:	fist   DWORD PTR [ecx+0x72]
  41852d:	mov    edx,0x771888ca
  418532:	inc    ebp
  418533:	add    bl,BYTE PTR [edi]
  418535:	int    0xab
  418537:	push   ecx
  418538:	mov    dh,BYTE PTR [ebx+0x66]
  41853b:	psrlw  mm6,mm0
  41853e:	jns    0x418566
  418540:	ss cmp ah,ch
  418543:	(bad)  
  418544:	(bad)  
  418545:	sub    BYTE PTR [ecx-0x3fcff725],bl
  41854b:	adc    DWORD PTR [ebx],0x5c
  41854e:	cld    
  41854f:	mov    ds:0x995dd0fd,eax
  418554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418555:	mov    ecx,0x5d5b3941
  41855a:	jb     0x4185c8
  41855c:	mov    al,ds:0x45883008
  418561:	push   ds
  418562:	or     al,0x3d
  418564:	push   DWORD PTR [eax+0x793e2237]
  41856a:	mov    ah,0xab
  41856c:	test   DWORD PTR [esi],ecx
  41856e:	or     al,0x56
  418570:	mov    eax,0x3d41d631
  418575:	sar    DWORD PTR [esp+edx*2+0x51930b2c],0x3c
  41857d:	push   cs
  41857e:	mov    al,ds:0xf742f604
  418583:	loope  0x41851e
  418585:	and    DWORD PTR [ebx],edi
  418587:	fmul   DWORD PTR [ebp-0x7b0ea4d]
  41858d:	daa    
  41858e:	mov    ecx,0xcb5de2e9
  418593:	fucomi st,st(2)
  418595:	jnp    0x418559
  418597:	xchg   ebx,ebx
  418599:	pushf  
  41859a:	mov    esi,0x70a219a6
  41859f:	hlt    
  4185a0:	aam    0x27
  4185a2:	or     DWORD PTR [ecx-0x70],0x275c893e
  4185a9:	aad    0x49
  4185ab:	nop
  4185ac:	push   ecx
  4185ad:	js     0x41858c
  4185af:	sub    cl,BYTE PTR [ecx+0x32f0e4bf]
  4185b5:	dec    edx
  4185b6:	or     al,0xe8
  4185b8:	sahf   
  4185b9:	dec    ebx
  4185ba:	dec    ebp
  4185bb:	xchg   ecx,eax
  4185bc:	cdq    
  4185bd:	push   ecx
  4185be:	cmovo  ecx,DWORD PTR [ebx]
  4185c1:	loop   0x418568
  4185c3:	sub    DWORD PTR [edx-0x3ebbcdef],0x2a
  4185ca:	mov    ebp,0x702b1323
  4185cf:	fwait
  4185d0:	cs jecxz 0x41859a
  4185d3:	jbe    0x4185c7
  4185d5:	out    0x84,al
  4185d7:	cmp    al,0x84
  4185d9:	mov    BYTE PTR [bx-0x4d3b],bh
  4185de:	aad    0x59
  4185e0:	mov    ebx,0xb53ec81a
  4185e5:	or     ch,bl
  4185e7:	mov    ebx,0x133e16a9
  4185ec:	pop    edi
  4185ed:	adc    eax,0x6f67fe21
  4185f2:	sub    ebx,DWORD PTR [ecx+0x186b0b91]
  4185f8:	ret    
  4185f9:	in     eax,0x4a
  4185fb:	jne    0x418673
  4185fd:	pop    edi
  4185fe:	lahf   
  4185ff:	xchg   ebx,eax
  418600:	aas    
  418601:	add    ebp,DWORD PTR [edi-0x2a]
  418604:	mov    ah,0x85
  418606:	(bad)  
  418607:	dec    edi
  418608:	jns    0x4185e1
  41860a:	sub    BYTE PTR [esi-0x35],ah
  41860d:	bound  edx,QWORD PTR ds:0x956e2636
  418613:	js     0x418693
  418615:	call   0x1b0:0x2c79b730
  41861c:	xor    eax,0xa9d75d25
  418621:	popa   
  418622:	xor    DWORD PTR [eax],ebx
  418624:	cs inc ebx
  418626:	popf   
  418627:	int3   
  418628:	cvttps2pi mm6,QWORD PTR [ebx+0x2477aaae]
  41862f:	jle    0x418631
  418631:	inc    BYTE PTR [ecx]
  418633:	pusha  
  418634:	push   eax
  418635:	adc    dh,ch
  418637:	xchg   ecx,eax
  418638:	cvtdq2ps xmm3,XMMWORD PTR [ebx-0x6f]
  41863c:	gs loope 0x418667
  41863f:	pop    ebx
  418640:	sar    cl,cl
  418642:	(bad)  
  418643:	lods   eax,DWORD PTR gs:[esi]
  418645:	les    eax,FWORD PTR [edi]
  418647:	mov    ecx,0x9c0ab3ea
  41864c:	sub    DWORD PTR [ecx],eax
  41864e:	test   ecx,ebx
  418650:	es fwait
  418652:	out    dx,eax
  418653:	fdiv   st(7),st
  418655:	cmp    eax,DWORD PTR [ecx]
  418657:	retf   
  418658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418659:	repz or eax,DWORD PTR [eax]
  41865c:	push   0x9622fa4e
  418661:	cmp    bh,BYTE PTR [ecx-0x3e]
  418664:	xor    bl,BYTE PTR [esi-0x38f7f79d]
  41866a:	mov    dl,0x9f
  41866c:	or     edx,edx
  41866e:	jmp    0xcb9145dd
  418673:	in     eax,0xd1
  418675:	adc    dl,dh
  418677:	in     eax,dx
  418678:	rcl    ch,1
  41867a:	adc    DWORD PTR [eax-0x58],0xae6ab952
  418681:	aas    
  418682:	or     DWORD PTR [ecx+0x3f],eax
  418685:	sub    edx,DWORD PTR [edx-0x5ca60c55]
  41868b:	push   es
  41868c:	pop    ss
  41868d:	jmp    0xbcabf7d6
  418692:	push   esi
  418693:	dec    esp
  418694:	imul   edx,DWORD PTR [ecx+edx*1-0x19],0xb3468840
  41869c:	pop    esi
  41869d:	mov    ecx,edx
  41869f:	scas   al,BYTE PTR es:[edi]
  4186a0:	js     0x41862f
  4186a2:	or     eax,0x19ff9288
  4186a7:	adc    bh,BYTE PTR [edx-0x3d]
  4186aa:	sbb    eax,0x7ec40b7d
  4186af:	add    esp,DWORD PTR [edx]
  4186b1:	jns    0x41868b
  4186b3:	mov    ah,0xc9
  4186b5:	fwait
  4186b6:	rcl    al,1
  4186b8:	rol    BYTE PTR [edi+0x2771bcb8],0x3c
  4186bf:	sbb    eax,0x903af89d
  4186c4:	lock sub eax,0x6e16b9cf
  4186cb:	pushf  
  4186cc:	mov    esp,esi
  4186ce:	push   esi
  4186cf:	pop    di
  4186d1:	(bad)  
  4186d2:	jb     0x4186af
  4186d4:	add    DWORD PTR [ebx-0x4c],edx
  4186d7:	inc    ecx
  4186d8:	das    
  4186d9:	pop    edx
  4186da:	jb     0x418689
  4186dc:	jb     0x418742
  4186de:	dec    edx
  4186df:	mov    DWORD PTR [ebp+0x1e3d6d69],esi
  4186e5:	gs xchg ecx,eax
  4186e7:	les    esp,FWORD PTR [edx]
  4186e9:	jmp    0xb0dc:0x1c9a33ca
  4186f0:	scas   al,BYTE PTR es:[edi]
  4186f1:	pop    esp
  4186f2:	test   DWORD PTR ds:0x77a1b6bb,esi
  4186f8:	or     al,0xa0
  4186fa:	outs   dx,BYTE PTR ds:[esi]
  4186fb:	xor    eax,0xa1d98fb9
  418700:	shl    ah,cl
  418702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418703:	mov    dl,0xde
  418705:	outs   dx,BYTE PTR ds:[esi]
  418706:	arpl   WORD PTR [ebx-0xb4647d9],di
  41870c:	sub    eax,0x9be6d682
  418711:	ret    0x7723
  418714:	je     0x418729
  418716:	daa    
  418717:	ret    
  418718:	pop    edi
  418719:	(bad)  
  41871a:	test   eax,0xca3953d3
  41871f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418720:	inc    esp
  418721:	cdq    
  418722:	xor    cl,BYTE PTR [ecx]
  418724:	xor    al,0x3f
  418726:	test   DWORD PTR [edi+0x5e],esi
  418729:	sbb    eax,0x3db79095
  41872e:	add    al,0x5c
  418730:	pop    edi
  418731:	sbb    BYTE PTR [edi-0x7ceb72f9],dl
  418737:	jmp    0x41876a
  418739:	test   ebx,0xb6922f2e
  41873f:	xchg   esp,eax
  418740:	loope  0x418770
  418742:	fdivr  st(4),st
  418744:	cwde   
  418745:	jg     0x41875a
  418747:	mov    edx,0xfff3b19e
  41874c:	or     edi,esp
  41874e:	add    al,0x21
  418750:	inc    edx
  418751:	out    dx,al
  418752:	xchg   edi,eax
  418753:	fucompp 
  418755:	test   eax,0xe29b6266
  41875a:	pop    edi
  41875b:	dec    edi
  41875c:	mov    edx,0xa66929eb
  418761:	mov    ebp,0xf6dc6b5a
  418766:	(bad)  
  418767:	mov    dl,0xf9
  418769:	into   
  41876a:	repz daa 
  41876c:	or     eax,0x48538040
  418771:	mov    eax,ds:0xd2e06e6d
  418776:	jg     0x418781
  418778:	or     esi,esi
  41877a:	dec    edi
  41877b:	push   edi
  41877c:	sbb    ah,dh
  41877e:	arpl   WORD PTR [ecx+0x4f],cx
  418781:	jnp    0x4187e1
  418783:	mov    edi,0x4b40f902
  418788:	jge    0x418804
  41878a:	adc    DWORD PTR [edi+0x4edc55fa],edx
  418790:	jmp    0x41872a
  418792:	stos   BYTE PTR es:[edi],al
  418793:	ret    0xac8a
  418796:	ret    
  418797:	aas    
  418798:	mov    ?,WORD PTR [ebx+0x4c]
  41879b:	jb     0x41872b
  41879d:	jns    0x41875c
  41879f:	sbb    BYTE PTR [ebx-0x1d],0xec
  4187a3:	imul   esp,ebx,0x95dc3b2
  4187a9:	adc    DWORD PTR [ebp+0x13],ebp
  4187ac:	dec    ebp
  4187ad:	(bad)  [ebp-0x5b47fda5]
  4187b3:	je     0x4187d2
  4187b5:	xchg   ebx,eax
  4187b6:	xchg   ecx,eax
  4187b7:	pop    ebx
  4187b8:	jge    0x41874f
  4187ba:	fnstsw WORD PTR [edi+edx*2+0x2df9f77c]
  4187c1:	aad    0xac
  4187c3:	jb     0x4187ec
  4187c5:	cmp    BYTE PTR [edi],dh
  4187c7:	mov    ecx,0x3a04d35f
  4187cc:	repz push ss
  4187ce:	and    DWORD PTR [esi],edx
  4187d0:	mov    ebx,0xbe01b969
  4187d5:	das    
  4187d6:	pop    esi
  4187d7:	(bad)  
  4187d8:	mov    cl,BYTE PTR [edx-0x7975e384]
  4187de:	sub    DWORD PTR [esi],edx
  4187e0:	imul   eax,edi,0x97e6b623
  4187e6:	cwde   
  4187e7:	mov    ecx,0xba6fd9d9
  4187ec:	lock push edx
  4187ee:	ret    
  4187ef:	xchg   ebp,eax
  4187f0:	cmp    DWORD PTR [edx+ebx*2],0xffffff88
  4187f4:	fld    DWORD PTR [ecx+0x15]
  4187f7:	or     BYTE PTR [esi+0x7ce72d8a],bl
  4187fd:	ss or  bl,dl
  418800:	rol    DWORD PTR [edx-0x4f],0x92
  418804:	mov    dh,0xb6
  418806:	jns    0x418799
  418808:	shl    BYTE PTR [ecx-0x6d58a131],cl
  41880e:	pop    ds
  41880f:	mov    WORD PTR [edi-0x45f3a6cd],gs
  418815:	aad    0x3c
  418817:	(bad)  
  418819:	or     ebp,ecx
  41881b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41881c:	mov    edi,0x38f62c40
  418821:	lods   eax,DWORD PTR ds:[esi]
  418822:	fdivr  QWORD PTR [edi-0x63]
  418826:	lods   al,BYTE PTR ss:[esi]
  418828:	add    eax,0x470cc9bc
  41882d:	dec    edx
  41882e:	out    dx,al
  41882f:	xchg   edi,eax
  418830:	lds    edi,FWORD PTR [ebx+0x4df5374f]
  418836:	pop    esp
  418837:	sub    eax,0x9fa31f78
  41883c:	xchg   ecx,eax
  41883d:	xor    BYTE PTR [edi],dl
  41883f:	scas   al,BYTE PTR es:[edi]
  418840:	mov    ecx,eax
  418842:	jg     0x4187c9
  418844:	xor    ebp,esi
  418846:	xchg   ecx,eax
  418847:	adc    al,0x74
  418849:	cmp    al,0x98
  41884c:	loop   0x418889
  41884e:	push   ss
  41884f:	dec    ecx
  418850:	jmp    0xceb39282
  418855:	inc    ecx
  418856:	popf   
  418857:	je     0x418896
  418859:	push   ebx
  41885a:	mov    ds,esi
  41885c:	outs   dx,DWORD PTR ds:[esi]
  41885d:	or     eax,edi
  41885f:	shl    BYTE PTR [ecx+ebx*4-0x43],1
  418863:	call   0x3cfa:0xc01f02d2
  41886a:	jbe    0x4188d3
  41886c:	mov    edx,DWORD PTR [edx]
  41886e:	sub    BYTE PTR [edi],0x10
  418871:	test   BYTE PTR [eax],bh
  418873:	add    DWORD PTR [eax+0x29ada31c],edi
  418879:	rcr    DWORD PTR [ebx+0x3f],cl
  41887c:	mov    cl,0xea
  41887e:	aas    
  41887f:	pop    ebp
  418880:	lea    esp,[esi+0x1d]
  418883:	cmp    al,0x77
  418885:	lods   eax,DWORD PTR ds:[esi]
  418886:	pop    eax
  418887:	cmp    BYTE PTR [eax],ch
  418889:	ins    BYTE PTR es:[edi],dx
  41888a:	cmp    edx,DWORD PTR [edx+ebp*2-0x4b962658]
  418891:	fdivr  DWORD PTR [ebp-0x16]
  418894:	clc    
  418895:	cli    
  418896:	mov    ebx,DWORD PTR [ebp-0x8]
  418899:	add    DWORD PTR ds:0x42c018,0x28a0
  4188a3:	xor    edx,eax
  4188a5:	xor    ebx,eax
  4188a7:	sub    edx,ebx
  4188a9:	sub    DWORD PTR ds:0x42a008,ebx
  4188af:	sub    edx,esi
  4188b1:	mov    DWORD PTR ds:0x42c000,0x11
  4188bb:	cmp    DWORD PTR ds:0x42c000,0x0
  4188c2:	je     0x418917
  4188c8:	cmp    DWORD PTR ds:0x42c000,0x9
  4188cf:	jne    0x4188e5
  4188d5:	push   0x42a018
  4188da:	push   0x42e165
  4188df:	call   DWORD PTR ds:0x42ed6f
  4188e5:	cmp    DWORD PTR ds:0x42c000,0xa
  4188ec:	jne    0x4188ff
  4188f2:	mov    ebx,DWORD PTR ds:0x42c000
  4188f8:	dec    ebx
  4188f9:	mov    DWORD PTR ds:0x42c000,ebx
  4188ff:	mov    ebx,DWORD PTR ds:0x42c000
  418905:	dec    ebx
  418906:	mov    DWORD PTR ds:0x42c000,ebx
  41890c:	jmp    0x4188bb
  418911:	sub    ebx,DWORD PTR ds:0x429004
  418917:	xor    edx,eax
  418919:	neg    ebx
  41891b:	mov    DWORD PTR [ebp+0x8],edx
  41891e:	mov    edx,DWORD PTR [ebp+0x8]
  418921:	mov    ebx,DWORD PTR [ebp-0x58]
  418924:	add    edx,0x5708f8
  41892a:	or     DWORD PTR ds:0x42d014,0x42c014
  418934:	imul   edx,ebx
  418937:	sub    DWORD PTR ds:0x42d004,0x2934
  418941:	mov    DWORD PTR [ebp-0x58],edx
  418944:	mov    edx,DWORD PTR [ebp+0x8]
  418947:	mov    ebx,DWORD PTR [ebp-0x54]
  41894a:	adc    DWORD PTR ds:0x429010,0x42c010
  418954:	add    edx,0x64f8da
  41895a:	sbb    DWORD PTR ds:0x429028,0xbc3
  418964:	or     edx,ebx
  418966:	xor    DWORD PTR ds:0x42b008,edi
  41896c:	mov    DWORD PTR [ebp-0x54],edx
  41896f:	mov    edx,DWORD PTR [ebp+0x8]
  418972:	and    DWORD PTR ds:0x42b018,ebx
  418978:	mov    ebx,DWORD PTR [ebp-0x50]
  41897b:	or     DWORD PTR ds:0x42c014,0x42b010
  418985:	add    edx,ecx
  418987:	xor    edx,ebx
  418989:	mov    DWORD PTR [ebp-0x50],edx
  41898c:	mov    edx,DWORD PTR [ebp+0x8]
  41898f:	mov    ebx,DWORD PTR [ebp-0x4c]
  418992:	add    edx,edi
  418994:	and    edx,ebx
  418996:	mov    DWORD PTR [ebp-0x4c],edx
  418999:	mov    edx,DWORD PTR [ebp+0x8]
  41899c:	mov    ebx,DWORD PTR [ebp-0x48]
  41899f:	lea    edx,[ebx+edx*1+0x241fc1f]
  4189a6:	mov    DWORD PTR [ebp-0x48],edx
  4189a9:	mov    edx,DWORD PTR [ebp+0x8]
  4189ac:	mov    ebx,0xfa5e15e2
  4189b1:	sub    ebx,edx
  4189b3:	add    ebx,DWORD PTR [ebp-0x44]
  4189b6:	mov    DWORD PTR [ebp-0x44],ebx
  4189b9:	mov    edx,DWORD PTR [ebp+0x8]
  4189bc:	xor    edx,eax
  4189be:	add    edx,esi
  4189c0:	jne    0x416500
  4189c6:	mov    edx,DWORD PTR [ebp-0xc]
  4189c9:	mov    dl,BYTE PTR [ebp+edx*1-0x98]
  4189d0:	mov    bl,BYTE PTR [ebp-0x1]
  4189d3:	cmp    dl,bl
  4189d5:	je     0x418a95
  4189db:	mov    edx,DWORD PTR [ebp-0xc]
  4189de:	mov    dl,BYTE PTR [ebp+edx*1-0x98]
  4189e5:	mov    ebx,DWORD PTR [ebp+0xc]
  4189e8:	cmp    dl,BYTE PTR [ebx]
  4189ea:	jne    0x4219f0
  4189f0:	mov    edx,DWORD PTR [ebp-0x18]
  4189f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4189f6:	movsx  ebx,BYTE PTR [ebx]
  4189f9:	xor    edx,eax
  4189fb:	add    edx,esi
  4189fd:	cmp    ebx,edx
  4189ff:	mov    edx,DWORD PTR [ebp-0x10]
  418a02:	mov    DWORD PTR [ebp+0x8],edx
  418a05:	mov    edx,DWORD PTR [ebp+0x8]
  418a08:	je     0x423e79
  418a0e:	jmp    0x418a86
  418a13:	mov    edx,DWORD PTR [ebp+0x8]
  418a16:	mov    ebx,DWORD PTR [ebp-0x8]
  418a19:	xor    edx,eax
  418a1b:	xor    ebx,eax
  418a1d:	sub    edx,ebx
  418a1f:	sub    edx,esi
  418a21:	xor    edx,eax
  418a23:	mov    DWORD PTR [ebp+0x8],edx
  418a26:	mov    edx,DWORD PTR [ebp+0x8]
  418a29:	mov    ebx,DWORD PTR [ebp-0x58]
  418a2c:	add    edx,0x5708f8
  418a32:	imul   edx,ebx
  418a35:	mov    DWORD PTR [ebp-0x58],edx
  418a38:	mov    edx,DWORD PTR [ebp+0x8]
  418a3b:	mov    ebx,DWORD PTR [ebp-0x54]
  418a3e:	add    edx,0x64f8da
  418a44:	or     edx,ebx
  418a46:	mov    DWORD PTR [ebp-0x54],edx
  418a49:	mov    edx,DWORD PTR [ebp+0x8]
  418a4c:	mov    ebx,DWORD PTR [ebp-0x50]
  418a4f:	add    edx,ecx
  418a51:	xor    edx,ebx
  418a53:	mov    DWORD PTR [ebp-0x50],edx
  418a56:	mov    edx,DWORD PTR [ebp+0x8]
  418a59:	mov    ebx,DWORD PTR [ebp-0x4c]
  418a5c:	add    edx,edi
  418a5e:	and    edx,ebx
  418a60:	mov    DWORD PTR [ebp-0x4c],edx
  418a63:	mov    edx,DWORD PTR [ebp+0x8]
  418a66:	mov    ebx,DWORD PTR [ebp-0x48]
  418a69:	lea    edx,[ebx+edx*1+0x241fc1f]
  418a70:	mov    DWORD PTR [ebp-0x48],edx
  418a73:	mov    edx,DWORD PTR [ebp+0x8]
  418a76:	mov    ebx,0xfa5e15e2
  418a7b:	sub    ebx,edx
  418a7d:	add    ebx,DWORD PTR [ebp-0x44]
  418a80:	mov    DWORD PTR [ebp-0x44],ebx
  418a83:	mov    edx,DWORD PTR [ebp+0x8]
  418a86:	xor    edx,eax
  418a88:	add    edx,esi
  418a8a:	jne    0x418a13
  418a90:	jmp    0x41aea6
  418a95:	mov    edx,DWORD PTR [ebp-0x10]
  418a98:	mov    DWORD PTR [ebp+0x8],edx
  418a9b:	jmp    0x41ae99
  418aa0:	mov    edx,DWORD PTR [ebp+0x8]
  418aa3:	mov    ebx,DWORD PTR [ebp-0x8]
  418aa6:	xor    edx,eax
  418aa8:	xor    ebx,eax
  418aaa:	sub    edx,ebx
  418aac:	sub    edx,esi
  418aae:	xor    edx,eax
  418ab0:	jmp    0x41ae39
  418ab5:	rcr    BYTE PTR [bx+di-0x68],cl
  418ab9:	iret   
  418aba:	ja     0x418a63
  418abc:	jno    0x418a89
  418abe:	into   
  418abf:	fidiv  WORD PTR [esp+esi*4+0x53]
  418ac3:	cli    
  418ac4:	mov    ch,0xdd
  418ac6:	xor    al,0x79
  418ac8:	jp     0x418ad0
  418aca:	pop    edi
  418acb:	jp     0x418b47
  418acd:	(bad)
  418ad1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad3:	dec    ebp
  418ad4:	cld    
  418ad5:	add    eax,0x1f1b8540
  418ada:	enter  0xd387,0xdb
  418ade:	cdq    
  418adf:	popf   
  418ae0:	sub    ah,BYTE PTR [ebp-0x6e6c6edf]
  418ae6:	jl     0x418aeb
  418ae8:	or     al,0xb
  418aea:	mov    ds:0x41bbd745,al
  418aef:	xchg   edx,eax
  418af0:	jmp    0x72c0:0x7bec285f
  418af7:	retf   
  418af8:	outs   dx,BYTE PTR ds:[esi]
  418af9:	mov    ds,WORD PTR [eax+0x61]
  418afc:	pop    ebx
  418afd:	mov    al,ds:0xd664115d
  418b02:	xchg   DWORD PTR [edx-0x27b247c2],edx
  418b08:	(bad)  
  418b09:	les    esi,FWORD PTR [edi+eax*8+0x7fd7dbbb]
  418b10:	aad    0x67
  418b12:	fld    DWORD PTR [edx-0x26]
  418b15:	or     DWORD PTR [edi-0x7b],esp
  418b18:	in     al,0x2
  418b1a:	push   eax
  418b1b:	pusha  
  418b1c:	iret   
  418b1d:	pop    esi
  418b1e:	pop    esp
  418b1f:	fwait
  418b20:	add    edi,DWORD PTR [esi+0x3c]
  418b23:	lods   al,BYTE PTR ds:[esi]
  418b24:	cmp    DWORD PTR [ecx+0x6432d567],0x19df145
  418b2e:	pop    ds
  418b2f:	arpl   WORD PTR [ecx+edi*1-0x67],di
  418b33:	adc    ch,bl
  418b35:	xchg   edi,eax
  418b36:	dec    edi
  418b37:	jg     0x418b92
  418b39:	xchg   esi,eax
  418b3a:	push   es
  418b3b:	jp     0x418b13
  418b3d:	retf   
  418b3e:	pause  
  418b40:	out    dx,eax
  418b41:	pop    ecx
  418b42:	or     BYTE PTR [ebx+0x17],0xdf
  418b46:	call   0x4d3180a4
  418b4b:	ror    DWORD PTR [edi],0x4b
  418b4e:	and    DWORD PTR [edi-0x61e2e405],esi
  418b54:	mov    al,0x23
  418b56:	mov    eax,0x5f4b5bf1
  418b5b:	jno    0x418bbf
  418b5d:	or     al,0x3f
  418b5f:	mov    esp,esi
  418b61:	pop    edi
  418b62:	push   edx
  418b63:	in     al,dx
  418b64:	addr16 aaa 
  418b66:	lahf   
  418b67:	popa   
  418b68:	add    al,0x42
  418b6a:	adc    eax,0xb23bb90d
  418b6f:	add    edx,eax
  418b71:	push   es
  418b72:	sahf   
  418b73:	ja     0x418b06
  418b75:	ss push 0x7a1d2c20
  418b7b:	bound  ecx,QWORD PTR [ecx+0x5207bfe5]
  418b81:	mov    cl,0x13
  418b83:	push   edi
  418b84:	push   edi
  418b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b86:	mov    ch,bl
  418b88:	pop    ecx
  418b89:	icebp  
  418b8a:	jg     0x418b94
  418b8c:	ds enter 0x5124,0x89
  418b91:	push   ss
  418b92:	pop    es
  418b93:	scas   al,BYTE PTR es:[edi]
  418b94:	jp     0x418ba3
  418b96:	mov    edx,0x57ed5541
  418b9b:	push   cs
  418b9c:	xor    dl,0x3
  418b9f:	inc    ebx
  418ba0:	inc    edi
  418ba1:	cwde   
  418ba2:	sub    bh,dh
  418ba4:	hlt    
  418ba5:	inc    ecx
  418ba6:	xchg   ebx,eax
  418ba7:	dec    eax
  418ba8:	pusha  
  418ba9:	mov    esp,0xf4204c71
  418bae:	cmp    DWORD PTR [ebx-0x3d62e92c],ecx
  418bb4:	cli    
  418bb5:	(bad)  
  418bb6:	loope  0x418bc0
  418bb8:	gs add al,0x8e
  418bbb:	fld    QWORD PTR [ebx]
  418bbd:	adc    BYTE PTR [edi-0x5f],ah
  418bc0:	dec    esp
  418bc1:	and    dh,BYTE PTR [esi+0x7ca6c103]
  418bc7:	and    DWORD PTR [edx-0x26],edx
  418bca:	xchg   esp,eax
  418bcb:	pop    ds
  418bcc:	cmp    bl,ah
  418bce:	pop    es
  418bcf:	imul   eax,DWORD PTR [edi+0x4d7d4e8f],0xffffffe6
  418bd6:	test   eax,0x9d8bdf04
  418bdb:	retf   
  418bdc:	fstp   DWORD PTR [esp+ebx*4+0x2378144c]
  418be3:	mov    bl,0xbe
  418be5:	mov    ds:0x23a713ff,eax
  418bea:	mov    fs,WORD PTR [esi-0x5f05e6b]
  418bf0:	(bad)  
  418bf1:	repz hlt 
  418bf3:	xor    al,0xf6
  418bf5:	rol    DWORD PTR [edx+0x6293af7b],0xa0
  418bfc:	aad    0x28
  418bfe:	pusha  
  418bff:	loopne 0x418bf3
  418c01:	retf   
  418c02:	lds    ecx,FWORD PTR ds:0xc8f35ac8
  418c08:	or     BYTE PTR [ebp+0x5659a97d],0xe5
  418c0f:	(bad)  
  418c10:	rol    DWORD PTR [ebp+0x1e41feae],cl
  418c16:	adc    dl,dh
  418c18:	aas    
  418c19:	lods   eax,DWORD PTR ds:[esi]
  418c1a:	(bad)  
  418c1c:	outs   dx,DWORD PTR ds:[esi]
  418c1d:	cmp    DWORD PTR [esi-0x59],0xffffffed
  418c21:	pop    es
  418c22:	jns    0x418c53
  418c24:	jns    0x418c8b
  418c26:	dec    BYTE PTR [edi-0x2990f1f9]
  418c2c:	dec    edx
  418c2d:	add    al,0x55
  418c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c30:	jmp    0x2eedd702
  418c35:	ds jge 0x418c96
  418c38:	inc    edi
  418c39:	xor    bl,BYTE PTR [ebx+0x44]
  418c3c:	icebp  
  418c3d:	imul   ebp,DWORD PTR [edx+0x5570638c],0xf730e376
  418c47:	xor    BYTE PTR ds:0x497472ac,al
  418c4d:	cmp    al,0xad
  418c4f:	mov    BYTE PTR [edi-0x48],ch
  418c52:	dec    ecx
  418c53:	sub    al,0x89
  418c55:	lods   al,BYTE PTR ds:[esi]
  418c56:	pop    edi
  418c57:	popf   
  418c58:	imul   edx,edi,0xdcca0cc
  418c5e:	inc    esi
  418c5f:	out    0xc0,al
  418c61:	iret   
  418c62:	dec    eax
  418c63:	mov    edx,0xeaf704d1
  418c68:	xchg   BYTE PTR [eax+0x60],cl
  418c6b:	jbe    0x418c6d
  418c6d:	jp     0x418ce5
  418c6f:	adc    BYTE PTR [ebp+0x5],0x99
  418c73:	aad    0x22
  418c75:	stos   DWORD PTR es:[edi],eax
  418c76:	gs add eax,0x2d531469
  418c7c:	das    
  418c7d:	arpl   WORD PTR [esi+0x15a42dda],ax
  418c83:	jb     0x418c19
  418c85:	loope  0x418c47
  418c87:	mov    bl,0xdb
  418c89:	cdq    
  418c8a:	dec    esp
  418c8b:	pop    ebp
  418c8c:	adc    DWORD PTR [edi],esi
  418c8e:	ret    0xf81e
  418c91:	paddd  mm7,mm3
  418c94:	ret    0x4997
  418c97:	in     eax,dx
  418c98:	jecxz  0x418cb7
  418c9a:	add    eax,DWORD PTR [ebp+ecx*8+0x4e4c5fb6]
  418ca1:	sbb    DWORD PTR [ebp+0x5ab5e1c5],ebp
  418ca7:	ins    DWORD PTR es:[edi],dx
  418ca8:	outs   dx,BYTE PTR ds:[esi]
  418ca9:	mov    ch,dh
  418cab:	out    0x29,al
  418cad:	sti    
  418cae:	aad    0x24
  418cb0:	retf   
  418cb1:	jae    0x418d23
  418cb3:	xchg   ebx,eax
  418cb4:	push   eax
  418cb5:	popa   
  418cb6:	add    DWORD PTR [esi-0x59d2c56b],ebp
  418cbc:	mov    ch,0x1d
  418cbe:	sahf   
  418cbf:	ss adc esi,esi
  418cc2:	cmp    ch,0xb5
  418cc5:	jecxz  0x418c52
  418cc7:	stc    
  418cc8:	xchg   BYTE PTR [esi+0x53],dl
  418ccb:	xchg   esp,eax
  418ccc:	ja     0x418cfa
  418cce:	mov    BYTE PTR [ebp-0x1],al
  418cd1:	jno    0x418d25
  418cd3:	outs   dx,BYTE PTR ds:[esi]
  418cd4:	push   eax
  418cd5:	or     dl,BYTE PTR [edx-0x52]
  418cd8:	xchg   esi,eax
  418cd9:	or     ah,BYTE PTR [ebx+0xd]
  418cdc:	and    bl,BYTE PTR [ecx]
  418cde:	and    DWORD PTR [ebx-0x1b322a5a],eax
  418ce4:	mov    bh,0xa0
  418ce6:	sub    al,0x3
  418ce8:	jae    0x418cfb
  418cea:	add    dh,dl
  418cec:	rcl    BYTE PTR [edx+eax*2],cl
  418cef:	mov    ebp,DWORD PTR [ecx-0x4dafca37]
  418cf5:	stos   DWORD PTR es:[edi],eax
  418cf6:	push   esp
  418cf7:	inc    edx
  418cf8:	jnp    0x418cb1
  418cfa:	or     eax,0x9b9ecdab
  418cff:	jg     0x418d52
  418d01:	je     0x418d6b
  418d03:	push   ss
  418d04:	xchg   DWORD PTR [edi],eax
  418d06:	fcomp  DWORD PTR [ecx+0x3d]
  418d09:	adc    al,0xff
  418d0b:	jbe    0x418d83
  418d0d:	or     edi,DWORD PTR [edi+0x77]
  418d10:	dec    eax
  418d11:	aas    
  418d12:	xchg   ebp,eax
  418d13:	(bad)  
  418d14:	out    dx,eax
  418d15:	mov    bl,0x91
  418d17:	pop    es
  418d18:	push   edx
  418d19:	jmp    0x418cc3
  418d1b:	ins    BYTE PTR es:[edi],dx
  418d1c:	dec    ecx
  418d1d:	xor    ecx,eax
  418d1f:	push   eax
  418d20:	stc    
  418d21:	mov    ds:0x5908f32e,eax
  418d26:	push   esi
  418d27:	cmp    edx,esp
  418d29:	sar    BYTE PTR [esi],1
  418d2b:	dec    esp
  418d2c:	mov    bh,BYTE PTR [esi+0x4f]
  418d2f:	jmp    0xf8c1839c
  418d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d35:	pop    ebp
  418d36:	mov    fs,WORD PTR es:[eax+0x21d7bbbf]
  418d3d:	clc    
  418d3e:	popa   
  418d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d40:	pop    edi
  418d41:	jne    0x418d26
  418d43:	rcr    BYTE PTR [esp+eax*2],cl
  418d46:	pushf  
  418d47:	(bad)  
  418d48:	stc    
  418d49:	mov    eax,ds:0xa6c054ef
  418d4e:	xor    BYTE PTR [eax+eiz*8-0x27],ch
  418d52:	add    eax,0xe3666ca2
  418d57:	adc    esp,DWORD PTR [esp+esi*1-0x21]
  418d5b:	mov    ds:0x1b4e30ad,al
  418d60:	push   ecx
  418d61:	cli    
  418d62:	test   BYTE PTR ds:0x22cab302,dh
  418d68:	fucom  st(1)
  418d6a:	jp     0x418d99
  418d6c:	in     eax,dx
  418d6d:	pop    es
  418d6e:	ins    DWORD PTR es:[edi],dx
  418d6f:	push   ss
  418d70:	sub    al,0xf5
  418d72:	cmp    edx,edi
  418d74:	inc    edx
  418d75:	out    0x9c,eax
  418d77:	push   ecx
  418d78:	pop    es
  418d79:	sbb    al,0xec
  418d7b:	xor    DWORD PTR ds:0xef640989,ecx
  418d81:	xlat   BYTE PTR ds:[ebx]
  418d82:	mov    eax,ds:0x9bc13488
  418d87:	fadd   DWORD PTR [esi]
  418d89:	aaa    
  418d8a:	retf   0xd075
  418d8d:	xor    DWORD PTR [esi+0x60],ebx
  418d90:	pushf  
  418d91:	fcomp  QWORD PTR [esi+0x7d6d4c30]
  418d97:	cdq    
  418d98:	fs aaa 
  418d9a:	pushf  
  418d9b:	dec    ebp
  418d9c:	and    bl,BYTE PTR [edi-0xbfc2e8d]
  418da2:	mov    ds:0x24b52b4d,al
  418da7:	icebp  
  418da8:	cwde   
  418da9:	enter  0x47f3,0x89
  418dad:	inc    eax
  418dae:	mov    dl,0x78
  418db0:	(bad)  
  418db1:	pusha  
  418db2:	outs   dx,BYTE PTR ds:[esi]
  418db3:	lds    edi,FWORD PTR [ebx]
  418db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418db6:	xchg   ecx,eax
  418db7:	xchg   BYTE PTR [ecx+0x2c],ah
  418dba:	loope  0x418d9b
  418dbc:	pop    esi
  418dbd:	ret    0xb778
  418dc0:	sbb    BYTE PTR [ecx+ebx*2-0x5c],cl
  418dc4:	jb     0x418e24
  418dc6:	leave  
  418dc7:	fbstp  TBYTE PTR [edx+0x3c]
  418dca:	cs inc ebp
  418dcc:	out    0xba,al
  418dce:	daa    
  418dcf:	mov    ecx,0xc7ec5abc
  418dd4:	lods   eax,DWORD PTR ds:[esi]
  418dd5:	in     al,dx
  418dd6:	or     bh,BYTE PTR [ebx-0x650fc081]
  418ddc:	xchg   BYTE PTR [ecx*4+0x6a621e6b],al
  418de3:	or     DWORD PTR [esi+eiz*8+0xd9f447f],edi
  418dea:	aaa    
  418deb:	data16 sbb cl,BYTE PTR [edi+0x35664f18]
  418df2:	aam    0x2f
  418df4:	popa   
  418df5:	test   al,0x64
  418df7:	es xchg edx,eax
  418df9:	lock shl DWORD PTR [edi-0x29],cl
  418dfd:	stos   BYTE PTR es:[edi],al
  418dfe:	xor    bh,cl
  418e00:	and    bh,dl
  418e02:	mov    al,ds:0x73aeefc9
  418e07:	repnz rol BYTE PTR [ebx],0xda
  418e0b:	addr16 aam 0xb2
  418e0e:	outs   dx,DWORD PTR ds:[esi]
  418e0f:	pop    edi
  418e10:	shld   DWORD PTR [esi],edx,0x47
  418e14:	jne    0x418e83
  418e16:	test   edx,ebx
  418e18:	sbb    BYTE PTR [ebp+0x602a0f9a],0x24
  418e1f:	add    eax,0xc240971c
  418e24:	std    
  418e25:	(bad)  
  418e26:	lods   al,BYTE PTR ds:[esi]
  418e27:	xor    BYTE PTR [edx+0x5f],bl
  418e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e2b:	pusha  
  418e2c:	and    edx,ecx
  418e2e:	jle    0x418eac
  418e30:	lods   al,BYTE PTR ds:[esi]
  418e31:	repnz iret 
  418e33:	imul   edi,DWORD PTR [ecx-0x988307d],0xffffffec
  418e3a:	arpl   WORD PTR [ecx],di
  418e3c:	xor    al,0x47
  418e3e:	jecxz  0x418e39
  418e40:	scas   eax,DWORD PTR es:[edi]
  418e41:	fs adc eax,0x2581cf0d
  418e47:	adc    ecx,DWORD PTR ds:0x6b3d9ff
  418e4d:	test   DWORD PTR [edi],0x80bb7cad
  418e53:	test   al,0x96
  418e55:	aaa    
  418e56:	mov    edi,0xcc788170
  418e5b:	(bad)  
  418e5c:	xor    BYTE PTR [ebx],dh
  418e5e:	dec    ebp
  418e5f:	gs inc ebx
  418e61:	outs   dx,BYTE PTR ds:[esi]
  418e62:	sti    
  418e63:	push   cs
  418e64:	and    BYTE PTR [edi-0x588dd1f1],0x92
  418e6b:	jns    0x418e59
  418e6d:	and    al,BYTE PTR [edi]
  418e6f:	push   esp
  418e70:	div    edx
  418e72:	dec    eax
  418e73:	sub    BYTE PTR [esi+0x26c1683b],0xe
  418e7a:	das    
  418e7b:	mov    ebp,0xf5c99e25
  418e80:	mov    BYTE PTR [ebp+edx*2+0x2d000955],dh
  418e87:	cli    
  418e88:	test   al,0x9a
  418e8a:	mov    ebp,edi
  418e8c:	fild   DWORD PTR [esi+0x2b]
  418e8f:	dec    edx
  418e90:	das    
  418e91:	leave  
  418e92:	fnstsw WORD PTR [edi+0x34439b91]
  418e98:	(bad)  
  418e9a:	push   edx
  418e9b:	out    dx,al
  418e9c:	(bad)  
  418e9d:	jbe    0x418ef6
  418e9f:	and    eax,0xa66b11f4
  418ea4:	mov    ds:0x22b4cb23,al
  418ea9:	mov    ch,0x71
  418eab:	gs imul ecx,DWORD PTR cs:[esp+esi*8],0x289d76c6
  418eb4:	int3   
  418eb5:	daa    
  418eb6:	mov    al,0xcb
  418eb8:	retf   0x4418
  418ebb:	push   edx
  418ebc:	call   0x1674:0xf3b36594
  418ec3:	sub    DWORD PTR [edx],ebp
  418ec5:	leave  
  418ec6:	and    bl,BYTE PTR [edi+0x4ffa3410]
  418ecc:	in     eax,dx
  418ecd:	xchg   edx,ebx
  418ecf:	sbb    esp,DWORD PTR [edi+ebp*8+0x2c]
  418ed3:	daa    
  418ed4:	mov    ah,0xdd
  418ed6:	sub    eax,0x965223e5
  418edb:	mov    ebp,0x449dacb4
  418ee0:	div    DWORD PTR [ebx+esi*8-0x31]
  418ee4:	(bad)  
  418ee6:	mov    ebx,0xfe29bfb8
  418eeb:	out    dx,al
  418eec:	sub    dh,bl
  418eee:	or     DWORD PTR [edx-0x3a],eax
  418ef1:	dec    eax
  418ef2:	adc    edi,DWORD PTR ds:0xf25464b3
  418ef8:	hlt    
  418ef9:	jmp    0x418e86
  418efb:	sub    eax,0xe83e8435
  418f00:	mov    ecx,0x6f426c91
  418f05:	mov    bh,ah
  418f07:	js     0x418eb5
  418f09:	xor    BYTE PTR [ebp+0x52866b71],ch
  418f0f:	aaa    
  418f10:	mov    al,0xba
  418f12:	cmp    BYTE PTR [edi-0x6ec1ed53],dl
  418f18:	push   esp
  418f19:	lock xor BYTE PTR [eax+0x624bc061],0xc7
  418f21:	stos   BYTE PTR es:[edi],al
  418f22:	je     0x418f5d
  418f24:	outs   dx,BYTE PTR ds:[esi]
  418f25:	dec    ecx
  418f26:	icebp  
  418f27:	gs and eax,0x9a555216
  418f2d:	jb     0x418efe
  418f2f:	pop    es
  418f30:	or     DWORD PTR [edx-0x10],ecx
  418f33:	cs out dx,al
  418f35:	fld    DWORD PTR [esi+0x50649446]
  418f3b:	das    
  418f3c:	xchg   DWORD PTR [eax+0x3f],ebp
  418f3f:	xor    al,0x55
  418f41:	mov    ds:0xee477bdc,eax
  418f46:	xchg   ebx,eax
  418f47:	or     DWORD PTR [ebx+edx*1-0x7e],ebp
  418f4b:	add    DWORD PTR [ecx+edx*8-0x7e],ecx
  418f4f:	and    bh,dl
  418f51:	xor    ebp,DWORD PTR [edx-0x41]
  418f54:	xor    al,BYTE PTR [ecx]
  418f56:	push   cs
  418f57:	push   cs
  418f58:	test   DWORD PTR [eax],0xbfcc7a32
  418f5e:	adc    DWORD PTR [ebx],ecx
  418f60:	pusha  
  418f61:	dec    eax
  418f62:	fwait
  418f63:	cld    
  418f64:	mov    esi,0xd6d77fcf
  418f69:	scas   eax,DWORD PTR es:[edi]
  418f6a:	cdq    
  418f6b:	mov    eax,0x60245717
  418f70:	retf   0x2249
  418f73:	sar    DWORD PTR [ebp-0x4f4f307a],0x6c
  418f7a:	test   BYTE PTR [edx+0x5b],ch
  418f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f7e:	inc    eax
  418f7f:	inc    edx
  418f80:	pop    ds
  418f81:	cdq    
  418f82:	xchg   DWORD PTR [ebp-0x594f785d],ebp
  418f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f89:	and    eax,0x810ed719
  418f8e:	xlat   BYTE PTR ds:[ebx]
  418f8f:	scas   al,BYTE PTR es:[edi]
  418f90:	(bad)  
  418f92:	xor    al,0x8d
  418f94:	ret    0x2cf0
  418f97:	lods   eax,DWORD PTR gs:[esi]
  418f99:	nop
  418f9a:	sub    al,0x5a
  418f9c:	ret    
  418f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9e:	cld    
  418f9f:	or     al,0x70
  418fa1:	fld    QWORD PTR [esi-0x5a]
  418fa4:	out    dx,al
  418fa5:	inc    esi
  418fa6:	pusha  
  418fa7:	mov    ds:0x87ff27c,al
  418fac:	in     eax,0x81
  418fae:	nop    esi
  418fb1:	pop    esp
  418fb2:	mov    eax,0xe789558b
  418fb7:	mov    esi,0x81d08874
  418fbc:	neg    BYTE PTR [eax-0xf24b7fd]
  418fc2:	adc    al,0x92
  418fc4:	mov    WORD PTR [edi],cs
  418fc6:	pop    edx
  418fc7:	add    DWORD PTR [ebx-0x60],ebp
  418fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fcb:	inc    eax
  418fcc:	loop   0x418fff
  418fce:	cwde   
  418fcf:	pop    edi
  418fd0:	jo     0x418f5a
  418fd2:	mov    esi,0x2b0b68be
  418fd7:	sbb    BYTE PTR [ebp+0x2b],0x12
  418fdb:	dec    eax
  418fdc:	jmp    0xb34c826a
  418fe1:	scas   eax,DWORD PTR es:[edi]
  418fe2:	dec    eax
  418fe3:	sub    al,0x83
  418fe5:	in     eax,dx
  418fe6:	push   edx
  418fe7:	sbb    al,0xfb
  418fe9:	imul   ebx,DWORD PTR es:[eax+0x67],0x94a10204
  418ff1:	dec    esi
  418ff2:	mov    ah,0x8c
  418ff4:	inc    edi
  418ff5:	pop    ebp
  418ff6:	cmp    al,0xdb
  418ff8:	add    al,0x65
  418ffb:	repz shl bl,cl
  418ffe:	retf   0xc748
  419001:	xor    edx,DWORD PTR [ecx+esi*2+0x7c]
  419005:	mov    cl,0xba
  419007:	add    eax,0xc8135f1e
  41900c:	jnp    0x418ff9
  41900e:	cwde   
  41900f:	xchg   ecx,eax
  419010:	sub    edx,DWORD PTR [eax]
  419012:	out    dx,al
  419013:	pop    ebp
  419014:	fistp  DWORD PTR [ecx+esi*4+0x6d]
  419018:	sbb    ch,BYTE PTR [eax+0xec3a3fb]
  41901e:	fucomi st,st(6)
  419020:	mov    dl,0xea
  419022:	adc    eax,0x73792d95
  419027:	add    al,0xeb
  419029:	push   es
  41902a:	sar    BYTE PTR [edx*2-0x313adfb9],0xa7
  419032:	jmp    0x4cf1:0x4cd261d0
  419039:	mov    al,ds:0x186368ed
  41903e:	cs ins DWORD PTR es:[edi],dx
  419040:	sbb    eax,DWORD PTR [ecx-0x15767132]
  419046:	stos   BYTE PTR es:[edi],al
  419047:	in     eax,0x58
  419049:	inc    ebx
  41904a:	dec    esi
  41904b:	adc    BYTE PTR [esi+eax*1-0x32],0x46
  419050:	cwde   
  419051:	add    ah,dl
  419053:	retf   0x17b
  419056:	in     al,dx
  419057:	scas   eax,DWORD PTR es:[edi]
  419058:	inc    ecx
  419059:	rcr    BYTE PTR [edi-0x2722774d],0x86
  419060:	inc    edi
  419061:	test   eax,0x1928157
  419066:	sub    al,0x86
  419068:	(bad)  
  419069:	into   
  41906a:	cmp    BYTE PTR [edi-0x2d5bdcec],ah
  419070:	lahf   
  419071:	or     BYTE PTR ds:[edi+ecx*4],0x14
  419076:	jg     0x419014
  419078:	add    al,BYTE PTR [edx+0x74]
  41907b:	retf   0xcd3c
  41907e:	push   edi
  41907f:	pop    ebp
  419080:	ret    0x18e6
  419083:	or     cl,ch
  419085:	jmp    0x419100
  419087:	cmp    BYTE PTR [eax],bl
  419089:	fld    DWORD PTR [bx+di-0x42]
  41908d:	ret    
  41908e:	mov    bl,0x55
  419090:	mov    ecx,0xc9fd935d
  419095:	ret    0x1a1
  419098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419099:	or     DWORD PTR [edi+0x28],0x7fddc7e0
  4190a0:	(bad)  
  4190a1:	and    ebp,DWORD PTR [ebp-0x7c]
  4190a4:	sub    esi,DWORD PTR [esp+eiz*8+0x5d504305]
  4190ab:	jne    0x41909a
  4190ad:	mov    DWORD PTR [ebx+0x4b],ebx
  4190b0:	sub    edi,edi
  4190b2:	jl     0x4190b4
  4190b4:	ins    BYTE PTR es:[edi],dx
  4190b5:	inc    edx
  4190b6:	cmp    DWORD PTR [ecx],ebx
  4190b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b9:	loop   0x419075
  4190bb:	cmp    DWORD PTR ds:0xdc232e0e,esi
  4190c1:	clc    
  4190c2:	push   esp
  4190c3:	adc    BYTE PTR [edi+0x79e2fb22],0x72
  4190ca:	push   eax
  4190cb:	data16 jno 0x419140
  4190ce:	add    al,0x97
  4190d0:	fs icebp 
  4190d2:	popa   
  4190d3:	test   DWORD PTR [ebx+0x23377d90],0x9363fb81
  4190dd:	xor    al,0x72
  4190df:	and    eax,0x3f9e0a4a
  4190e4:	icebp  
  4190e5:	xor    eax,0xc735c59f
  4190ea:	jmp    0x49f6:0x965a1087
  4190f1:	(bad)  
  4190f2:	repnz adc bh,al
  4190f5:	aaa    
  4190f6:	mov    dh,0x83
  4190f8:	das    
  4190f9:	add    BYTE PTR [edi],al
  4190fb:	jge    0x4190cd
  4190fd:	add    cl,BYTE PTR [esi]
  4190ff:	jb     0x419086
  419101:	sbb    al,0x12
  419103:	inc    esp
  419104:	add    dh,BYTE PTR [eax-0x530774a4]
  41910a:	and    edi,0x280b9287
  419110:	lock js 0x4190d6
  419113:	sub    DWORD PTR [esi-0x68],ecx
  419116:	ins    DWORD PTR es:[edi],dx
  419117:	sbb    DWORD PTR [eax],0xffffff9b
  41911a:	data16 mul al
  41911d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41911e:	stos   BYTE PTR es:[edi],al
  41911f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419120:	iret   
  419121:	adc    eax,esi
  419123:	mov    BYTE PTR [eax+edx*8-0x23ed80f6],cl
  41912a:	cmc    
  41912b:	fist   DWORD PTR [ecx-0x3c]
  41912e:	(bad)  
  41912f:	(bad)  
  419130:	cs and al,0x4f
  419133:	mov    ebx,0x92b5343f
  419138:	ror    BYTE PTR [esi+eiz*2],cl
  41913b:	scas   al,BYTE PTR es:[edi]
  41913c:	jle    0x4190d9
  41913e:	aas    
  41913f:	mov    esp,0x65be77b2
  419144:	pop    eax
  419145:	jo     0x419193
  419147:	jnp    0x4191b4
  419149:	sub    BYTE PTR [ebx+0x2c],0xf5
  41914d:	adc    ebp,DWORD PTR [esi]
  41914f:	nop/reserved BYTE PTR [ecx-0x608a19a8]
  419156:	push   ss
  419157:	dec    edx
  419158:	ret    
  419159:	adc    ebx,DWORD PTR [ecx+0x7929dee8]
  41915f:	fldcw  WORD PTR [edi-0x21]
  419162:	sub    BYTE PTR [esi+0x31242f4d],cl
  419168:	jae    0x419114
  41916a:	(bad)
  41916d:	dec    edx
  41916e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41916f:	lock jle 0x4191eb
  419172:	call   DWORD PTR [eax-0x48]
  419175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419176:	pop    ebx
  419177:	sub    bh,BYTE PTR [ebx]
  419179:	std    
  41917a:	idiv   BYTE PTR fs:[edx-0x68]
  41917e:	push   edi
  41917f:	cmp    eax,0x292d84c4
  419184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419185:	stos   DWORD PTR es:[edi],eax
  419186:	jmp    0xc5a7d7b6
  41918b:	sub    al,0x47
  41918d:	icebp  
  41918e:	loope  0x41914b
  419190:	pop    edi
  419191:	and    BYTE PTR [ecx+0x1c],ch
  419194:	lea    ebx,[ebx+ebp*4+0x75]
  419198:	mov    ds:0x67d1989,eax
  41919d:	inc    ecx
  41919e:	test   eax,0x9012eed5
  4191a3:	xchg   ebx,eax
  4191a4:	and    bl,dl
  4191a6:	dec    edi
  4191a7:	mov    bh,0xb0
  4191a9:	and    DWORD PTR [esi-0x48],ecx
  4191ac:	jg     0x41917d
  4191ae:	std    
  4191af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b0:	adc    ebp,0x1
  4191b3:	aaa    
  4191b4:	inc    eax
  4191b5:	outs   dx,BYTE PTR ds:[esi]
  4191b6:	push   ss
  4191b7:	inc    eax
  4191b8:	mov    esi,0xe02d42a
  4191bd:	cld    
  4191be:	or     BYTE PTR ds:0xd57c9ffe,bl
  4191c4:	jle    0x4191d9
  4191c6:	push   ecx
  4191c7:	aaa    
  4191c8:	jecxz  0x419247
  4191ca:	pop    es
  4191cb:	das    
  4191cc:	jl     0x41915a
  4191ce:	fidivr DWORD PTR [esi]
  4191d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d1:	sbb    ecx,esi
  4191d3:	cmc    
  4191d4:	or     al,0xdd
  4191d6:	xchg   ebx,eax
  4191d7:	popa   
  4191d8:	push   ebp
  4191d9:	repz (bad) 
  4191dc:	aas    
  4191dd:	pop    edi
  4191de:	push   esi
  4191df:	xor    esp,ecx
  4191e1:	sar    BYTE PTR [ecx+0x69e067f2],cl
  4191e7:	scas   eax,DWORD PTR es:[edi]
  4191e8:	mov    edi,0xe4cf5730
  4191ed:	inc    ebp
  4191ee:	pop    ss
  4191ef:	aam    0x4b
  4191f1:	push   es
  4191f2:	dec    esi
  4191f3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4191f5:	iret   
  4191f6:	mov    eax,0x35a3ba54
  4191fb:	xchg   ebp,eax
  4191fc:	or     DWORD PTR [ecx-0xdaca7ec],eax
  419202:	enter  0x5c52,0x18
  419206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419207:	jmp    0x419265
  419209:	inc    ecx
  41920a:	and    esp,eax
  41920c:	mov    esi,0xff225402
  419211:	popf   
  419212:	gs leave 
  419214:	lds    ecx,FWORD PTR [esi-0x72]
  419217:	fdivr  QWORD PTR [esi]
  419219:	push   es
  41921a:	(bad)  
  41921b:	inc    esp
  41921c:	jp     0x419295
  41921e:	adc    eax,0xc8ed410b
  419223:	and    BYTE PTR [esi+0x6b],al
  419226:	jl     0x41922c
  419228:	lods   al,BYTE PTR ds:[esi]
  419229:	xor    eax,0xd9f99f97
  41922e:	jno    0x419213
  419230:	div    bh
  419232:	sub    BYTE PTR [esi],0x99
  419235:	mov    esi,DWORD PTR [edx+0x49]
  419238:	inc    esi
  419239:	fadd   DWORD PTR [ebp-0x395b6667]
  41923f:	cmc    
  419240:	rol    BYTE PTR [edx-0x271dea04],0x87
  419247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419248:	je     0x41922a
  41924a:	sbb    DWORD PTR ds:0x28c062d2,0xffffff82
  419251:	int    0x20
  419253:	adc    ah,BYTE PTR [edi]
  419255:	dec    ebx
  419256:	int3   
  419257:	call   0x26354f94
  41925c:	daa    
  41925d:	pop    ebx
  41925e:	(bad)  
  419260:	jae    0x419214
  419262:	pop    edx
  419263:	push   0x1f
  419265:	or     bl,bh
  419267:	scas   al,BYTE PTR es:[edi]
  419268:	xor    BYTE PTR [edx+0x58],ch
  41926b:	es push es
  41926d:	add    al,0x2e
  41926f:	js     0x4192a1
  419271:	jne    0x419230
  419273:	jmp    0x549f63f2
  419278:	mov    eax,0xf296eeb5
  41927d:	jbe    0x4192f3
  41927f:	bound  eax,QWORD PTR [ecx]
  419281:	dec    ecx
  419282:	stc    
  419283:	not    DWORD PTR [eax+0x16]
  419286:	push   esp
  419287:	scas   eax,DWORD PTR es:[edi]
  419288:	lods   al,BYTE PTR ds:[esi]
  419289:	test   al,0x8a
  41928b:	(bad)  
  41928c:	and    ah,BYTE PTR [ebx]
  41928e:	adc    al,0x4c
  419290:	test   eax,0x69235225
  419295:	add    BYTE PTR [ebp+0x1f],0xe7
  419299:	add    eax,0xa5d35682
  41929e:	loopne 0x4192c7
  4192a0:	repnz push edi
  4192a2:	mov    ds:0xde13d276,eax
  4192a7:	std    
  4192a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192a9:	iret   
  4192aa:	cmp    al,BYTE PTR [ebp+0x2d]
  4192ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ae:	mov    edi,0x785375cf
  4192b3:	push   ecx
  4192b4:	and    eax,0x86350444
  4192b9:	adc    ebx,ecx
  4192bb:	loop   0x41928a
  4192bd:	mov    ds:0x2aab8067,al
  4192c2:	push   edx
  4192c3:	cmp    cl,al
  4192c5:	adc    al,0xcd
  4192c7:	cmp    BYTE PTR [ebx+0x283ff0b3],ch
  4192cd:	mov    ah,0x72
  4192cf:	push   es
  4192d0:	inc    edx
  4192d1:	inc    esi
  4192d2:	push   ss
  4192d3:	dec    eax
  4192d4:	xchg   edi,eax
  4192d5:	in     eax,dx
  4192d6:	pop    eax
  4192d7:	scas   eax,DWORD PTR es:[edi]
  4192d8:	stc    
  4192d9:	jg     0x4192a7
  4192db:	shl    BYTE PTR [eax+0x5fdbd8e2],cl
  4192e1:	shl    DWORD PTR [eax+0x6a],cl
  4192e4:	idiv   edx
  4192e6:	dec    edx
  4192e7:	jae    0x419275
  4192e9:	dec    esi
  4192ea:	leave  
  4192eb:	mov    ecx,0x61d40a08
  4192f0:	xor    edx,DWORD PTR [edi+0x12]
  4192f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f4:	(bad)  
  4192f5:	xchg   ecx,eax
  4192f6:	inc    esi
  4192f7:	stc    
  4192f8:	and    edi,DWORD PTR [edi+0x926d0a9]
  4192fe:	mov    ah,0x34
  419300:	pop    eax
  419301:	xchg   ecx,eax
  419302:	cwde   
  419303:	sbb    dh,BYTE PTR [edx-0x57]
  419306:	inc    eax
  419307:	pop    ss
  419308:	cdq    
  419309:	rcl    DWORD PTR [edx+eiz*2-0x2d],cl
  41930d:	adc    al,0x1b
  41930f:	mov    ah,0x35
  419311:	pop    eax
  419312:	out    dx,al
  419313:	ja     0x41935b
  419315:	adc    al,0x6
  419317:	jle    0x41936b
  419319:	cmp    BYTE PTR [esi+eiz*4-0x1333edb4],ch
  419320:	mov    edi,ebp
  419322:	test   al,0xe1
  419324:	jl     0x41938e
  419326:	or     BYTE PTR [ebx-0x38],ah
  419329:	sti    
  41932a:	imul   edx,DWORD PTR [ebx+0x11],0x12f24a
  419331:	shl    DWORD PTR [eax+ecx*2+0x5e9cd545],1
  419338:	clc    
  419339:	cli    
  41933a:	push   0x1cf348e3
  41933f:	cs cwde 
  419341:	mov    ebx,0xa1c71568
  419346:	sub    DWORD PTR [ebx+0x774d0860],esp
  41934c:	push   esi
  41934d:	dec    ebp
  41934e:	pop    edi
  41934f:	fs aad 0xba
  419352:	fist   DWORD PTR [edx+0x3bc2d457]
  419358:	retf   0xbdb
  41935b:	mov    al,0xf0
  41935d:	ss call 0xb1ba:0x7ac152e3
  419365:	ja     0x4193c3
  419367:	out    0x77,al
  419369:	dec    esp
  41936a:	cmp    BYTE PTR [edi],0x9e
  41936d:	cmp    al,0x6d
  41936f:	(bad)  
  419370:	fld    TBYTE PTR [ecx]
  419372:	xor    BYTE PTR [eax+edi*4-0x25],bl
  419376:	daa    
  419377:	pop    ebp
  419378:	add    al,0xf1
  41937a:	loop   0x419317
  41937c:	in     eax,dx
  41937d:	sbb    DWORD PTR ds:0x77eb6a9d,ebx
  419383:	in     eax,dx
  419384:	or     cl,BYTE PTR [edi]
  419386:	mov    cl,0x5b
  419388:	jmp    0x63cc4559
  41938d:	mov    cl,BYTE PTR [eax+0x6f824181]
  419393:	mov    esp,0x9f798974
  419398:	push   esp
  419399:	xor    bl,cl
  41939b:	fnsave [ecx+0x7]
  41939e:	xlat   BYTE PTR ds:[ebx]
  41939f:	in     al,0x77
  4193a1:	bound  ebx,QWORD PTR [esi+0x3b1b7b4c]
  4193a7:	dec    ebp
  4193a8:	push   ss
  4193a9:	push   ds
  4193aa:	inc    edx
  4193ab:	ss enter 0xbbe,0x49
  4193b0:	out    0x23,eax
  4193b2:	xchg   DWORD PTR [esi+0x2],esi
  4193b5:	ffreep st(1)
  4193b7:	mov    ds:0xab3bc642,al
  4193bc:	jl     0x419345
  4193be:	jmp    0x41c41d6e
  4193c3:	sbb    BYTE PTR ds:0x4835dda8,dl
  4193c9:	push   ebp
  4193ca:	ret    
  4193cb:	mov    gs,esi
  4193cd:	pushf  
  4193ce:	xchg   ebp,eax
  4193cf:	inc    eax
  4193d0:	xor    DWORD PTR [edx-0x49],0x15
  4193d4:	push   ds
  4193d5:	push   cs
  4193d6:	adc    edi,DWORD PTR [edi]
  4193d8:	push   eax
  4193d9:	repz push es
  4193db:	int    0x13
  4193dd:	add    bh,ah
  4193df:	imul   edx,DWORD PTR [eax+0x3f6c5ddc],0x43eafbd1
  4193e9:	js     0x419425
  4193eb:	pop    ss
  4193ec:	(bad)  
  4193ed:	mov    ds:0x719cbaec,eax
  4193f2:	pop    edx
  4193f3:	xlat   BYTE PTR ds:[ebx]
  4193f4:	pop    eax
  4193f5:	mov    ebx,0xf392d801
  4193fa:	into   
  4193fb:	in     al,dx
  4193fc:	mov    ecx,0x367a36a8
  419401:	js     0x41940e
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	or     DWORD PTR cs:[edx-0x1876067e],0x72
  41940c:	dec    ecx
  41940d:	adc    ebx,0xffffffa3
  419410:	clc    
  419411:	fmul   QWORD PTR [esi+0x95d200e]
  419417:	xor    eax,0x6ce1ff16
  41941c:	in     eax,dx
  41941d:	mov    ds:0x25a107a4,al
  419422:	adc    ebx,DWORD PTR [ecx]
  419424:	out    0x23,eax
  419426:	ret    0xbded
  419429:	push   ds
  41942a:	hlt    
  41942b:	les    ebp,FWORD PTR [eax]
  41942d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41942e:	push   eax
  41942f:	fisub  WORD PTR [esi]
  419431:	xchg   edi,edi
  419433:	add    eax,0xa154bbf2
  419438:	jmp    0x854c1022
  41943d:	dec    edx
  41943e:	xchg   ch,dl
  419440:	stos   BYTE PTR es:[edi],al
  419441:	mov    ebp,0x2db39c55
  419446:	mov    dh,0x1a
  419448:	enter  0x8a2f,0x8d
  41944c:	imul   DWORD PTR [ebx]
  41944e:	or     al,0xa2
  419450:	pusha  
  419451:	iret   
  419452:	sbb    eax,0x2ce127da
  419457:	or     al,0xeb
  419459:	pop    ecx
  41945a:	or     BYTE PTR [eax+ebx*1+0x4b36802e],dh
  419461:	jno    0x419454
  419463:	jg     0x41942e
  419465:	aaa    
  419466:	popa   
  419467:	pusha  
  419468:	pop    ds
  419469:	mov    ds:0x8c22c289,al
  41946e:	out    dx,eax
  41946f:	stos   DWORD PTR es:[edi],eax
  419470:	in     al,dx
  419471:	add    al,0x3f
  419473:	and    DWORD PTR [edx-0x67],esp
  419476:	outs   dx,DWORD PTR ds:[esi]
  419477:	rcl    ah,cl
  419479:	sub    eax,0xe5cd92
  41947e:	xor    bl,BYTE PTR [esp+eax*8-0x70]
  419482:	das    
  419483:	hlt    
  419484:	mov    dl,0x43
  419486:	jmp    0xb8631d70
  41948b:	mov    ah,0xa
  41948d:	inc    eax
  41948e:	iret   
  41948f:	fcomp  QWORD PTR [eax-0x56240915]
  419495:	in     eax,dx
  419496:	sub    ebx,ebp
  419498:	fiadd  WORD PTR ds:0x1dff5288
  41949e:	sbb    al,0x2e
  4194a0:	sahf   
  4194a1:	in     al,0x7b
  4194a3:	mov    dh,0xe3
  4194a5:	jge    0x4194b8
  4194a7:	test   eax,0xd64d0081
  4194ac:	std    
  4194ad:	lds    eax,FWORD PTR ds:0x5003be39
  4194b3:	adc    al,0xe6
  4194b5:	data16 mov dl,0xdd
  4194b8:	sub    al,0x49
  4194ba:	and    BYTE PTR [edx+0x5a],0xa7
  4194be:	push   esi
  4194bf:	mov    ch,0xc3
  4194c1:	mov    edx,0x3e72f831
  4194c6:	sub    DWORD PTR [ebx+0x28e45596],0xea5b45de
  4194d0:	mov    eax,0x9b4ea971
  4194d5:	dec    esp
  4194d6:	shl    BYTE PTR [edi+ebx*2+0x1f87331e],cl
  4194dd:	jae    0x419479
  4194df:	xchg   edx,eax
  4194e0:	ins    DWORD PTR es:[edi],dx
  4194e1:	cwde   
  4194e2:	addr16 inc esi
  4194e4:	dec    edx
  4194e5:	les    edx,FWORD PTR es:[eax+eiz*4-0x4d]
  4194ea:	out    dx,al
  4194eb:	xchg   ecx,eax
  4194ec:	in     eax,0xad
  4194ee:	fsubr  DWORD PTR [edi+0x5b2bdbe7]
  4194f4:	add    DWORD PTR [ebp+ebp*8-0xf7d0008],eax
  4194fb:	retf   
  4194fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194fd:	mov    ebp,0x8e51ae00
  419502:	jg     0x419484
  419504:	sub    cl,ah
  419506:	or     eax,DWORD PTR [eax-0x54d7b3b9]
  41950c:	mov    ch,0x7c
  41950e:	mov    esi,0xe08edda8
  419513:	scas   eax,DWORD PTR es:[edi]
  419514:	jns    0x419548
  419516:	es sub esi,ebp
  419519:	fbstp  TBYTE PTR [eax]
  41951b:	adc    DWORD PTR [edi-0x4d],0xdd81226e
  419522:	mov    edi,0x9851a657
  419527:	mov    ch,0x5f
  419529:	int3   
  41952a:	and    bl,BYTE PTR [ecx+eiz*8]
  41952d:	xchg   ebp,eax
  41952e:	popf   
  41952f:	and    al,0x82
  419531:	cdq    
  419532:	mov    ds:0x855891e,al
  419537:	je     0x41959b
  419539:	shl    dl,0x84
  41953c:	sub    eax,0xeeff1180
  419541:	mov    edx,0xe174c255
  419546:	xor    al,0x3a
  419548:	or     ah,bl
  41954a:	and    BYTE PTR [edi+0x44],cl
  41954d:	sbb    ah,BYTE PTR [edi]
  41954f:	cmc    
  419550:	push   ebp
  419551:	push   ds
  419552:	xchg   edi,eax
  419553:	lods   al,BYTE PTR ds:[esi]
  419554:	scas   al,BYTE PTR es:[edi]
  419555:	imul   BYTE PTR [edx]
  419557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419558:	cmp    esp,edx
  41955a:	sub    DWORD PTR [ebp-0x36d7118],edx
  419560:	inc    esp
  419561:	cmp    al,0x8f
  419563:	mov    ebp,0x6a072c37
  419568:	fmul   QWORD PTR [ebx]
  41956a:	sub    eax,0xd3dc172d
  41956f:	int3   
  419570:	js     0x419519
  419572:	js     0x41957c
  419574:	cs jecxz 0x4195cb
  419577:	test   DWORD PTR [ecx-0x80],0xf3b13aa9
  41957e:	cmp    bh,BYTE PTR [ebx-0x697e5122]
  419584:	outs   dx,DWORD PTR ds:[esi]
  419585:	out    dx,eax
  419586:	fs repnz or eax,0xb5afe3c9
  41958d:	loope  0x4195a0
  41958f:	in     al,0x5f
  419591:	and    edx,DWORD PTR ds:0x89f0fd03
  419597:	push   esp
  419598:	test   DWORD PTR [edx],0x2046ac00
  41959e:	(bad)  
  41959f:	xor    bh,BYTE PTR [ecx+0x22c1615e]
  4195a5:	pop    es
  4195a6:	(bad)  
  4195a7:	(bad)  
  4195a8:	xchg   ecx,eax
  4195a9:	retf   
  4195aa:	bound  ebx,QWORD PTR [ecx]
  4195ac:	jecxz  0x419553
  4195ae:	out    dx,eax
  4195af:	adc    BYTE PTR [ebx-0x4ae07db7],ch
  4195b5:	push   cs
  4195b6:	or     DWORD PTR [edi],0x41d36e56
  4195bc:	inc    ebx
  4195bd:	pop    eax
  4195be:	out    dx,eax
  4195bf:	icebp  
  4195c0:	xchg   DWORD PTR [eax+0x2d1a58a9],ebx
  4195c6:	mov    edx,0xce4870f9
  4195cb:	clc    
  4195cc:	cld    
  4195cd:	or     al,0x8d
  4195cf:	cdq    
  4195d0:	mov    ?,eax
  4195d2:	pop    edi
  4195d3:	sub    BYTE PTR [ecx],bl
  4195d5:	test   edi,ebx
  4195d7:	sub    DWORD PTR [edi+0x3caea93d],ebx
  4195dd:	xchg   ebx,eax
  4195de:	or     edx,ecx
  4195e0:	mov    al,0x74
  4195e2:	dec    eax
  4195e3:	pop    ebp
  4195e4:	into   
  4195e5:	sub    bh,BYTE PTR [esi]
  4195e7:	mov    esi,0x560ef1c3
  4195ec:	fild   QWORD PTR [ebp-0xeb5ccad]
  4195f2:	mov    eax,0x209416d6
  4195f7:	jb     0x419599
  4195f9:	jmp    0x41964b
  4195fb:	sub    eax,0x735341d6
  419600:	and    eax,0x270b466a
  419605:	sub    edx,eax
  419607:	rol    DWORD PTR [edx-0x78e6be8e],cl
  41960d:	inc    esi
  41960e:	int3   
  41960f:	ret    0xdec9
  419612:	jle    0x419626
  419614:	inc    esp
  419615:	push   DWORD PTR [eax+0x1a]
  419618:	hlt    
  419619:	cmp    eax,0xc8544d21
  41961e:	out    dx,eax
  41961f:	mov    dl,0x89
  419621:	and    eax,0xd9621b66
  419626:	mov    ebx,0x916d17f7
  41962b:	fbstp  TBYTE PTR [esi-0x5be8d570]
  419631:	(bad)  
  419632:	stos   BYTE PTR es:[edi],al
  419633:	shl    esi,0xf8
  419636:	push   ss
  419637:	push   0x11
  419639:	fwait
  41963a:	cdq    
  41963b:	pop    es
  41963c:	mov    cl,0x25
  41963e:	(bad)  
  41963f:	jmp    DWORD PTR [ecx-0x669ad4b2]
  419645:	cld    
  419646:	jmp    0x9935:0x9fbc2d0b
  41964d:	dec    ecx
  41964e:	push   esi
  41964f:	sbb    al,0x7b
  419651:	mov    ebx,0x7eca8134
  419656:	jnp    0x4196d2
  419658:	mov    bh,0xcd
  41965a:	mov    ebx,ss
  41965c:	inc    ebp
  41965d:	adc    bh,BYTE PTR [esi+0x4d61cec2]
  419663:	sub    ecx,esp
  419665:	clc    
  419666:	repz loopne 0x4195f2
  419669:	call   0x7970:0xd4c82b0e
  419670:	xor    eax,0x1a9f1073
  419675:	jb     0x41964f
  419677:	fs sti 
  419679:	adc    al,0x73
  41967b:	loopne 0x4196d3
  41967d:	ds push edi
  41967f:	sub    eax,0xe509ed1b
  419684:	ss jg  0x4196e4
  419687:	mov    bh,0xb7
  419689:	ds mov al,0xa1
  41968c:	stc    
  41968d:	cmp    dh,BYTE PTR [eax]
  41968f:	lods   eax,DWORD PTR ds:[esi]
  419690:	(bad)  
  419691:	outs   dx,DWORD PTR ds:[esi]
  419692:	ja     0x419617
  419694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419695:	pop    es
  419696:	retf   
  419697:	mov    edi,0x48a2a961
  41969c:	lods   eax,DWORD PTR ds:[esi]
  41969d:	sti    
  41969e:	push   ds
  41969f:	les    eax,FWORD PTR ds:0xee49d56f
  4196a5:	push   esi
  4196a6:	adc    al,0x2a
  4196a8:	add    ebx,esp
  4196aa:	dec    ecx
  4196ab:	repz cmp eax,0xa4af9269
  4196b1:	iret   
  4196b2:	jnp    0x4196cf
  4196b4:	inc    eax
  4196b5:	dec    edx
  4196b6:	and    DWORD PTR [ebp+0x55b1bc27],esi
  4196bc:	test   eax,0x6c12909f
  4196c1:	dec    ecx
  4196c2:	xor    eax,0xf8f60bbb
  4196c7:	adc    cl,BYTE PTR [edx]
  4196c9:	sbb    esp,DWORD PTR [edi+0x11edd07d]
  4196cf:	loope  0x41973b
  4196d1:	(bad)  
  4196d3:	loopne 0x41974e
  4196d5:	outs   dx,DWORD PTR ds:[esi]
  4196d6:	pop    es
  4196d7:	mov    ah,0x22
  4196d9:	mov    WORD PTR [edi-0x29],ds
  4196dc:	mov    al,ds:0x66a37ba1
  4196e1:	xchg   esi,eax
  4196e2:	and    al,0x71
  4196e4:	push   esp
  4196e5:	test   al,0x27
  4196e7:	jae    0x4196ad
  4196e9:	jno    0x419700
  4196eb:	lahf   
  4196ec:	addr16 ja 0x41968f
  4196ef:	lock push ds
  4196f1:	sti    
  4196f2:	inc    eax
  4196f3:	fdivr  DWORD PTR [edi+0x59f1f381]
  4196f9:	je     0x419754
  4196fb:	push   edx
  4196fc:	test   al,0xb2
  4196fe:	sbb    DWORD PTR [eax+0x330d2b9b],ecx
  419704:	xor    esi,DWORD PTR [esi-0x3f]
  419707:	sub    dh,BYTE PTR [eax-0x7b]
  41970a:	sti    
  41970b:	jp     0x419719
  41970d:	cmp    al,0xa2
  41970f:	pop    edi
  419710:	fild   DWORD PTR [ebx]
  419712:	sub    eax,0x93a05355
  419717:	cmc    
  419718:	hlt    
  419719:	inc    esp
  41971a:	pop    ebp
  41971b:	repz mov al,ds:0x1fc75d36
  419721:	push   ss
  419722:	jnp    0x419751
  419724:	ror    al,1
  419726:	loop   0x419740
  419728:	cmp    BYTE PTR ds:0x82607276,0x29
  41972f:	call   0xc900:0x9382bbbe
  419736:	pop    edx
  419737:	das    
  419738:	add    eax,0xf2de5461
  41973d:	xchg   ecx,eax
  41973e:	dec    eax
  41973f:	or     bh,BYTE PTR [edx+0x77e1620]
  419745:	cwde   
  419746:	cmc    
  419747:	stos   DWORD PTR es:[edi],eax
  419748:	and    ecx,esi
  41974a:	sub    BYTE PTR [eax-0x502c092b],0xd
  419751:	retf   
  419752:	pop    ds
  419753:	inc    DWORD PTR [ebx-0x79]
  419756:	jle    0x419762
  419758:	and    esp,esi
  41975a:	addr16 cmc 
  41975c:	mov    ch,0x2d
  41975e:	dec    edi
  41975f:	or     BYTE PTR [ecx+0x3f],cl
  419762:	fst    DWORD PTR [ebx]
  419764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419765:	push   ebx
  419766:	sub    al,0xb6
  419768:	aam    0xa8
  41976a:	sub    bl,cl
  41976c:	loopne 0x419753
  41976e:	imul   ebx,DWORD PTR [eax-0x648e6ef2],0xe49dae84
  419778:	rol    BYTE PTR [edx],1
  41977a:	ins    DWORD PTR es:[edi],dx
  41977b:	or     eax,0x8eb79682
  419780:	pop    edx
  419781:	mov    ebp,0x4c99c2ea
  419786:	sbb    al,0xa2
  419788:	pop    edx
  419789:	mov    dl,0x5b
  41978b:	bound  esp,QWORD PTR [edx+edi*8+0x2889531e]
  419792:	jo     0x41972f
  419794:	inc    esi
  419795:	mov    dh,BYTE PTR [eax+0x62eceb62]
  41979b:	hlt    
  41979c:	sub    dh,al
  41979e:	lods   eax,DWORD PTR ds:[esi]
  41979f:	mov    ds:0xfe75bc9f,al
  4197a4:	nop
  4197a5:	add    dl,BYTE PTR [eax-0xc8c5c3a]
  4197ab:	test   BYTE PTR [ebx-0x63],al
  4197ae:	fwait
  4197af:	mov    ch,0xe5
  4197b1:	dec    ecx
  4197b2:	ror    BYTE PTR [edi-0x3ce9b9f3],1
  4197b8:	and    esi,DWORD PTR ds:0xc5697977
  4197be:	push   ss
  4197bf:	pop    esi
  4197c0:	mov    bh,0x23
  4197c2:	and    eax,0x67072927
  4197c7:	jecxz  0x419821
  4197c9:	sub    dh,bh
  4197cb:	jnp    0x4197a2
  4197cd:	test   dh,bl
  4197cf:	cmp    eax,0xd3396d8b
  4197d4:	sbb    al,0xdf
  4197d6:	inc    edx
  4197d7:	out    dx,al
  4197d8:	leave  
  4197d9:	push   0xffffffbb
  4197db:	cmp    ebp,DWORD PTR [ebp-0x51]
  4197de:	push   es
  4197df:	outs   dx,BYTE PTR ds:[esi]
  4197e0:	test   eax,0xc2367ad
  4197e5:	add    BYTE PTR [ebx],bl
  4197e7:	sbb    eax,DWORD PTR [edx+0x5577d25d]
  4197ed:	inc    di
  4197ef:	imul   ebx,esi,0x266b475d
  4197f5:	cmc    
  4197f6:	push   edx
  4197f7:	cmp    bh,dl
  4197f9:	push   eax
  4197fa:	aad    0x2c
  4197fc:	into   
  4197fd:	mov    ah,0x9d
  4197ff:	cmp    ebx,ebp
  419801:	xchg   ecx,eax
  419802:	xor    eax,0x38bca496
  419807:	in     al,dx
  419808:	ss hlt 
  41980a:	or     DWORD PTR [eax],ebx
  41980c:	cmc    
  41980d:	leave  
  41980e:	out    dx,eax
  41980f:	xor    ah,BYTE PTR [edi]
  419811:	stos   BYTE PTR es:[edi],al
  419812:	ss inc ecx
  419814:	out    0x85,al
  419816:	jnp    0x4197fd
  419818:	ficomp WORD PTR [edi-0x309db201]
  41981e:	xor    BYTE PTR [eax+0x5fd445be],bh
  419824:	sub    eax,0xf4a4b6ae
  419829:	scas   al,BYTE PTR es:[edi]
  41982a:	loop   0x419803
  41982c:	xchg   esi,eax
  41982d:	aas    
  41982e:	pop    es
  41982f:	les    edi,FWORD PTR [esi]
  419831:	das    
  419832:	dec    ebx
  419833:	sahf   
  419834:	outs   dx,DWORD PTR ds:[esi]
  419835:	mov    edi,0xb0408a3e
  41983a:	dec    ebp
  41983b:	pop    edi
  41983c:	mov    cl,0x97
  41983e:	das    
  41983f:	in     eax,0x8f
  419841:	sub    DWORD PTR [edi-0x4a],esi
  419844:	xor    DWORD PTR [edi],edi
  419846:	ds dec ebx
  419848:	ja     0x419890
  41984a:	mov    cl,0xca
  41984c:	pop    esi
  41984d:	ror    BYTE PTR [eax-0x7a],1
  419850:	pop    ss
  419851:	xchg   DWORD PTR [esi-0x570ddf1],esp
  419857:	fnstsw WORD PTR [ebp+0x55]
  41985a:	int3   
  41985b:	scas   al,BYTE PTR es:[edi]
  41985c:	add    eax,DWORD PTR [ecx-0x76]
  41985f:	addr16 push esi
  419861:	sub    ebx,DWORD PTR [esi+0x18337939]
  419867:	and    BYTE PTR [edx+edx*1],cl
  41986a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986b:	sub    cl,BYTE PTR [eax]
  41986d:	arpl   WORD PTR [edx-0x79],bp
  419870:	cmp    edx,ebx
  419872:	imul   edx,DWORD PTR [edx-0x193de404],0x9cee506a
  41987c:	lea    ebx,[edx+edx*4]
  41987f:	adc    DWORD PTR [ecx-0x7b],ebp
  419882:	push   es
  419883:	and    al,0xda
  419885:	and    bh,bl
  419887:	in     eax,dx
  419888:	jns    0x41989a
  41988a:	dec    esi
  41988b:	dec    esi
  41988c:	daa    
  41988d:	(bad)  
  41988e:	fmul   DWORD PTR [esi+ecx*4-0x4ca8432b]
  419895:	add    al,0x24
  419897:	outs   dx,BYTE PTR ds:[esi]
  419898:	adc    eax,0xbb96b204
  41989d:	into   
  41989e:	das    
  41989f:	sti    
  4198a0:	adc    eax,0xe1c4de01
  4198a5:	mov    al,ds:0xcfa67615
  4198aa:	and    DWORD PTR [ecx],ebp
  4198ac:	adc    edx,DWORD PTR [ebp+0x447986e3]
  4198b2:	fwait
  4198b3:	enter  0x121e,0x6c
  4198b7:	push   cs
  4198b8:	push   eax
  4198b9:	jp     0x419929
  4198bb:	loopne 0x4198c1
  4198bd:	adc    esi,DWORD PTR [edi+0xcac0897]
  4198c3:	cs adc eax,0xabe20148
  4198c9:	jns    0x41990e
  4198cb:	fdivr  QWORD PTR [eax-0x6c760ee3]
  4198d1:	cld    
  4198d2:	pop    ds
  4198d3:	lea    eax,[ebx]
  4198d5:	jmp    0xec14:0x6b1b1a5
  4198dc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4198de:	repz pop ss
  4198e0:	push   0x154c8157
  4198e5:	scas   al,BYTE PTR es:[edi]
  4198e6:	sti    
  4198e7:	add    bl,cl
  4198e9:	wrmsr  
  4198eb:	inc    ebx
  4198ec:	gs jle 0x419915
  4198ef:	repz xchg esi,eax
  4198f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198f2:	aas    
  4198f3:	jns    0x419929
  4198f5:	push   cs
  4198f6:	shr    BYTE PTR [ebp+0x47],0x9a
  4198fa:	push   0x3d
  4198fc:	test   eax,0xb4c56c09
  419901:	ds mov ch,0xec
  419904:	mov    esi,0x42fdec79
  419909:	pop    ss
  41990a:	rcl    esp,1
  41990c:	fldcw  WORD PTR [ebp-0x1f]
  41990f:	jecxz  0x419911
  419911:	or     eax,0xbef5e89f
  419916:	cmp    BYTE PTR [edx],ch
  419918:	pop    eax
  419919:	(bad)  
  41991a:	lods   al,BYTE PTR ds:[esi]
  41991b:	adc    BYTE PTR [esi],bl
  41991d:	mov    ?,WORD PTR [eax+eiz*2]
  419920:	and    eax,0x7fd8e69
  419925:	sub    BYTE PTR [edi],ah
  419927:	fldenv [ebx]
  419929:	dec    esi
  41992a:	rcl    DWORD PTR [esi-0x22],0xa3
  41992e:	into   
  41992f:	cmp    eax,0x63548efa
  419934:	mov    BYTE PTR [esi+0x7d2cdaa4],bh
  41993a:	jb     0x41991e
  41993c:	cmp    al,0xfa
  41993e:	adc    edx,ecx
  419940:	mov    edx,0x696a937
  419945:	out    0x8e,eax
  419947:	js     0x4198d0
  419949:	cld    
  41994a:	loop   0x419904
  41994c:	ins    DWORD PTR es:[edi],dx
  41994d:	ja     0x4199aa
  41994f:	retf   0x7400
  419952:	sbb    al,BYTE PTR [edx-0x48]
  419955:	out    dx,eax
  419956:	pop    esi
  419957:	data16 (bad) 
  419959:	mov    ebx,0x7ae7c11
  41995e:	mov    ch,0x95
  419960:	mov    eax,0x2599e15e
  419965:	fadd   DWORD PTR [edi+esi*4]
  419968:	dec    esi
  419969:	mov    bh,ch
  41996b:	pop    es
  41996c:	adc    al,0xc9
  41996e:	call   0xaa49:0xe2938fd
  419975:	shr    BYTE PTR [esi],0xc1
  419978:	pop    ss
  419979:	fadd   QWORD PTR [ebx-0x1f]
  41997c:	cs popf 
  41997e:	mov    bl,0x4
  419980:	rcl    esi,cl
  419982:	outs   dx,DWORD PTR ds:[esi]
  419983:	call   0xfa60d544
  419988:	xchg   ecx,eax
  419989:	or     al,0x22
  41998b:	adc    bh,al
  41998d:	xchg   edi,eax
  41998e:	loope  0x419915
  419990:	pop    edi
  419991:	push   edi
  419992:	aas    
  419993:	shl    DWORD PTR [ebp+0x8667947],cl
  419999:	stos   DWORD PTR es:[edi],eax
  41999a:	adc    al,0x28
  41999c:	mov    esp,0xfaf00959
  4199a1:	dec    esp
  4199a2:	and    BYTE PTR [ebx+eax*1-0xf695b60],ah
  4199a9:	pop    ecx
  4199aa:	out    dx,eax
  4199ab:	aam    0x6b
  4199ad:	nop
  4199ae:	rcl    esp,0x0
  4199b1:	call   0xa0f0d0d1
  4199b6:	jae    0x419a0d
  4199b8:	mov    ch,0x60
  4199ba:	icebp  
  4199bb:	(bad)  
  4199bc:	hlt    
  4199bd:	outs   dx,BYTE PTR ds:[esi]
  4199be:	adc    cl,dl
  4199c0:	mov    al,ds:0x48e6c306
  4199c5:	(bad)  
  4199c6:	jae    0x41996d
  4199c8:	and    bl,BYTE PTR ds:[eax]
  4199cb:	jo     0x419a33
  4199cd:	les    ecx,FWORD PTR [eax]
  4199cf:	sbb    esp,DWORD PTR [ebx]
  4199d1:	stos   BYTE PTR es:[edi],al
  4199d2:	cwde   
  4199d3:	int    0xc7
  4199d5:	jb     0x419a1d
  4199d7:	xchg   ebp,eax
  4199d8:	clc    
  4199d9:	add    eax,DWORD PTR [edx+0x3def4b66]
  4199df:	xchg   esp,eax
  4199e0:	and    al,0x97
  4199e2:	xor    BYTE PTR [edi],dl
  4199e4:	push   0x45
  4199e6:	(bad)  
  4199e7:	out    0xbb,al
  4199e9:	cli    
  4199ea:	imul   edi,ebx,0x49f4a0a3
  4199f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f1:	or     al,BYTE PTR [eax+ecx*1]
  4199f4:	in     eax,dx
  4199f5:	xor    eax,0x7930d9d
  4199fa:	push   esp
  4199fb:	arpl   WORD PTR [ecx+edi*2+0x54],bp
  4199ff:	mov    ebx,0x7c926605
  419a04:	(bad)  
  419a05:	pushf  
  419a06:	adc    DWORD PTR [ebp+0xcd60cdb],edi
  419a0c:	xor    DWORD PTR [ebx],ecx
  419a0e:	jecxz  0x419a5c
  419a10:	inc    edi
  419a11:	shl    DWORD PTR [edx-0x26d9f3cf],cl
  419a17:	mov    eax,ds:0x7e6abf55
  419a1c:	sub    ebp,DWORD PTR [edi+0x65]
  419a1f:	and    BYTE PTR [ecx-0x2f],dh
  419a22:	sbb    al,0x1d
  419a24:	js     0x419a4a
  419a26:	ret    0xb380
  419a29:	cli    
  419a2a:	jno    0x4199e1
  419a2c:	lea    esi,[ebx-0x1e]
  419a2f:	jmp    0x5604:0x531a9335
  419a36:	int    0x1e
  419a38:	test   eax,0xa4bd4f5d
  419a3d:	xchg   ebx,eax
  419a3e:	xchg   BYTE PTR [edi-0x54],ah
  419a41:	add    al,al
  419a43:	and    al,0x9d
  419a45:	and    dl,BYTE PTR [edi]
  419a47:	mov    esp,0x7a940fc0
  419a4c:	pop    edi
  419a4d:	sbb    eax,0x150fe2e6
  419a52:	pop    eax
  419a53:	cwde   
  419a54:	push   eax
  419a55:	and    ebx,DWORD PTR [edx+0x9cad9bb]
  419a5b:	and    DWORD PTR [esi+0x2aea9089],ecx
  419a61:	add    ebp,ebp
  419a63:	(bad)  
  419a64:	out    0x3d,al
  419a66:	jle    0x419a90
  419a68:	push   ss
  419a69:	test   eax,0xb6a2231e
  419a6e:	add    al,ch
  419a70:	jns    0x419a92
  419a72:	add    DWORD PTR ds:0xdf334917,edi
  419a78:	push   0xffffffdf
  419a7a:	int3   
  419a7b:	and    al,0xb7
  419a7d:	inc    ecx
  419a7e:	xchg   ecx,eax
  419a7f:	mov    esi,0x162c226a
  419a84:	sub    ebx,DWORD PTR [ecx+edi*4-0x3b]
  419a88:	pusha  
  419a89:	pop    ds
  419a8a:	imul   BYTE PTR [ebp+0x62f70946]
  419a90:	aad    0xc1
  419a92:	pop    edi
  419a93:	fist   WORD PTR [ebx]
  419a95:	or     edi,ecx
  419a97:	cmc    
  419a98:	loop   0x419b02
  419a9a:	xor    al,0xbc
  419a9c:	dec    ebx
  419a9d:	adc    DWORD PTR [ebx+0x5e7a5162],esi
  419aa3:	push   edi
  419aa4:	fnstcw WORD PTR [edi+0x42]
  419aa7:	xchg   esi,eax
  419aa8:	mov    ebp,0xff932757
  419aad:	push   edi
  419aae:	mov    ebp,0x8bc860fb
  419ab3:	dec    ecx
  419ab4:	mov    dl,0x19
  419ab6:	fdivr  QWORD PTR [ecx]
  419ab8:	fist   WORD PTR [esi-0x726584b4]
  419abe:	cmp    eax,0x7974930f
  419ac3:	in     eax,0x46
  419ac5:	mov    ecx,0xf30b5a10
  419aca:	sahf   
  419acb:	push   0xffffffd7
  419acd:	jge    0x419a69
  419acf:	mov    ch,0xe0
  419ad1:	mov    dl,0xad
  419ad3:	pop    esi
  419ad4:	(bad)  
  419ad5:	jmp    0x8dc3965f
  419ada:	iret   
  419adb:	push   es
  419adc:	jmp    0x48ba:0xd1ec9e05
  419ae3:	xchg   esp,eax
  419ae4:	pop    es
  419ae5:	push   0xfffffff9
  419ae7:	(bad)  
  419ae8:	in     eax,0x35
  419aea:	adc    al,0xa5
  419aec:	adc    cl,cl
  419aee:	adc    ebx,edi
  419af0:	pop    esp
  419af1:	pop    ebx
  419af2:	mov    cl,0x99
  419af4:	into   
  419af5:	sbb    eax,0x550f0ad8
  419afa:	mov    eax,ds:0x65a135a2
  419aff:	jle    0x419acb
  419b01:	and    eax,0xecf0eb1b
  419b06:	sub    DWORD PTR [ecx-0x5fca534],0xe0b246a7
  419b10:	pusha  
  419b11:	call   0x2ccb:0xdc0631e4
  419b18:	nop
  419b19:	jge    0x419b47
  419b1b:	div    BYTE PTR [ebx+0x5f]
  419b1e:	inc    esi
  419b1f:	push   esp
  419b20:	lea    esp,ds:0x433a5d4a
  419b26:	cs enter 0xc5a1,0x20
  419b2b:	mov    al,0xcf
  419b2d:	adc    al,0x13
  419b2f:	sbb    al,0x2a
  419b31:	or     DWORD PTR [eax],ebx
  419b33:	adc    edx,edi
  419b35:	xchg   ecx,eax
  419b36:	rcl    DWORD PTR [esi+0x54],cl
  419b39:	pop    esp
  419b3a:	adc    eax,0x5b761766
  419b3f:	mov    dh,0xdb
  419b41:	retf   
  419b42:	or     ebx,eax
  419b44:	pop    ds
  419b45:	in     eax,dx
  419b46:	aam    0xc2
  419b48:	fnstcw WORD PTR [eax]
  419b4a:	ja     0x419b67
  419b4c:	ss cmp ebx,ebx
  419b4f:	pushf  
  419b50:	xor    BYTE PTR [edi-0x5a],bl
  419b53:	jmp    0x419b4d
  419b55:	pop    ebp
  419b56:	loopne 0x419b24
  419b58:	pop    ss
  419b59:	jbe    0x419b8b
  419b5b:	test   BYTE PTR [ecx+0x7f2c0dcf],dh
  419b61:	xor    DWORD PTR [ebx],eax
  419b63:	aam    0x94
  419b65:	fdiv   QWORD PTR [edx-0x1c151b09]
  419b6b:	xor    DWORD PTR [edx],ebp
  419b6d:	adc    eax,0x4d43120
  419b72:	pop    eax
  419b73:	adc    eax,0x1f719ef6
  419b78:	pop    ss
  419b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b7a:	pop    ss
  419b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b7c:	jo     0x419b75
  419b7e:	or     eax,0x712c8f6
  419b83:	outs   dx,BYTE PTR ds:[esi]
  419b84:	xchg   ebx,eax
  419b85:	cmp    BYTE PTR [ecx+0x77],0x70
  419b89:	into   
  419b8a:	pop    ebp
  419b8b:	imul   esp,DWORD PTR [edi-0x401d4c46],0x1a
  419b92:	jno    0x419b6f
  419b94:	mov    cl,0x88
  419b96:	cmc    
  419b97:	int3   
  419b98:	xor    bh,BYTE PTR [esi]
  419b9a:	dec    esi
  419b9b:	mov    edx,0x44407b26
  419ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba1:	sub    dh,BYTE PTR [ecx+eiz*1]
  419ba4:	lahf   
  419ba5:	mov    edi,0x6c5d3451
  419baa:	icebp  
  419bab:	mov    bh,0xab
  419bad:	mov    ah,0x54
  419baf:	stos   DWORD PTR es:[edi],eax
  419bb0:	mov    ecx,0xa95b1389
  419bb5:	sar    DWORD PTR ds:0xb33d,0xf6
  419bbb:	in     al,0x49
  419bbd:	dec    esp
  419bbe:	xchg   ebx,eax
  419bbf:	into   
  419bc0:	and    DWORD PTR [edx-0x3774a481],eax
  419bc6:	dec    esp
  419bc7:	mov    bh,0xba
  419bc9:	mov    al,ds:0xd3be663f
  419bce:	into   
  419bcf:	jl     0x419c41
  419bd1:	xchg   BYTE PTR [ebx+0x4c],dh
  419bd4:	ins    BYTE PTR es:[edi],dx
  419bd5:	fstp   TBYTE PTR [ecx+0x37]
  419bd8:	cs xchg esi,eax
  419bda:	add    eax,0x58794a67
  419bdf:	(bad)  
  419be0:	jmp    0x362c:0x5b50ed8
  419be7:	sub    dl,BYTE PTR es:[esi+edx*1+0x64]
  419bec:	(bad)  
  419bed:	out    dx,al
  419bee:	dec    esp
  419bef:	cdq    
  419bf0:	test   ah,dl
  419bf2:	add    BYTE PTR ds:0xec1c4b86,bh
  419bf8:	daa    
  419bf9:	ret    
  419bfa:	xor    al,0x8e
  419bfc:	aaa    
  419bfd:	cmp    edx,DWORD PTR [edx]
  419bff:	pop    ebp
  419c00:	adc    eax,0x956713dd
  419c05:	mov    ch,0x83
  419c07:	aam    0x78
  419c09:	data16 mov ch,dh
  419c0c:	or     bh,ah
  419c0e:	and    al,0x22
  419c10:	push   eax
  419c11:	ins    DWORD PTR es:[edi],dx
  419c12:	and    al,0xf2
  419c14:	xchg   edx,eax
  419c15:	inc    eax
  419c16:	mov    ecx,DWORD PTR [si-0x64a1]
  419c1b:	cmp    al,bl
  419c1d:	aad    0xec
  419c1f:	jns    0x419c0f
  419c21:	pop    ss
  419c22:	jo     0x419c6c
  419c24:	add    eax,0x20f9e39
  419c29:	mov    eax,0xc8c00827
  419c2e:	ret    0xd6d0
  419c31:	out    0x2f,al
  419c33:	pop    es
  419c34:	inc    ecx
  419c35:	fisub  DWORD PTR [eax]
  419c37:	xlat   BYTE PTR ds:[ebx]
  419c38:	mov    WORD PTR [ecx+edx*8-0x5e],ds
  419c3c:	adc    dh,BYTE PTR [ebp-0x6c]
  419c3f:	adc    edi,DWORD PTR [ebp-0x7cd01fa8]
  419c45:	jne    0xaed6f8b1
  419c4b:	inc    ecx
  419c4c:	jmp    0x9e61:0x13f44fde
  419c53:	or     DWORD PTR [edx],ebp
  419c55:	cs out 0xb9,al
  419c58:	in     al,0x95
  419c5a:	xchg   esp,eax
  419c5b:	aad    0x85
  419c5d:	pusha  
  419c5e:	adc    bh,dl
  419c60:	push   edi
  419c61:	arpl   si,ax
  419c63:	and    BYTE PTR [eax+eiz*4],ch
  419c66:	xor    DWORD PTR [ecx-0x41],ebp
  419c69:	mov    edx,0x1c8d798d
  419c6e:	bnd jp 0x419c6b
  419c71:	dec    edi
  419c72:	pop    eax
  419c73:	pop    esp
  419c74:	add    ebx,DWORD PTR fs:[ebp-0x53]
  419c78:	push   ebx
  419c79:	fstp   QWORD PTR [ebx-0x57]
  419c7c:	sub    al,0x36
  419c7e:	stos   BYTE PTR es:[edi],al
  419c7f:	mov    esi,0x60801569
  419c84:	nop
  419c85:	in     eax,0x17
  419c87:	dec    esp
  419c88:	out    dx,al
  419c89:	sbb    BYTE PTR [ebp+0x3b],dl
  419c8c:	jns    0x419cf9
  419c8e:	fidiv  DWORD PTR [eax+0x72]
  419c91:	call   0x4389aa20
  419c96:	cmp    eax,0xf3e73904
  419c9b:	push   edx
  419c9c:	mov    al,0xb8
  419c9e:	add    esp,DWORD PTR [ecx+0x4e541061]
  419ca4:	mov    al,gs:0x3d8a2f6
  419caa:	or     BYTE PTR [esi-0x4e55b1ba],0xb1
  419cb1:	(bad)  
  419cb2:	popa   
  419cb3:	fdiv   DWORD PTR [edx+0x2208adb6]
  419cb9:	cmc    
  419cba:	adc    BYTE PTR [edi-0x14],dh
  419cbd:	sbb    eax,0x32f3cf3a
  419cc2:	jmp    0x6a6a:0x75f1fa7e
  419cc9:	mov    esp,0xde7c5116
  419cce:	inc    esp
  419ccf:	dec    esi
  419cd0:	imul   ebx,edi,0x38
  419cd3:	jg     0x419c97
  419cd5:	into   
  419cd6:	jmp    0x1888ce3b
  419cdb:	mov    ch,0xa2
  419cdd:	mov    esp,0x9cc4cf76
  419ce2:	test   al,0x34
  419ce4:	or     ah,BYTE PTR [edi+0x73ab0f46]
  419cea:	aad    0xe5
  419cec:	ror    bh,0xdb
  419cef:	dec    eax
  419cf0:	jle    0x419d1d
  419cf2:	xlat   BYTE PTR ds:[ebx]
  419cf3:	mov    ebp,edi
  419cf5:	icebp  
  419cf6:	cmp    esi,edx
  419cf8:	pop    ecx
  419cf9:	into   
  419cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cfb:	xor    DWORD PTR [ecx+0x6a],eax
  419cfe:	sbb    eax,0xd979ba80
  419d03:	mov    bl,0xf2
  419d05:	dec    edx
  419d06:	push   esi
  419d07:	xchg   ebx,eax
  419d08:	adc    cl,BYTE PTR [ecx]
  419d0a:	out    dx,al
  419d0b:	ffreep st(6)
  419d0d:	mov    ah,0xf1
  419d0f:	xchg   edx,eax
  419d10:	add    bl,BYTE PTR [esi]
  419d12:	cld    
  419d13:	aaa    
  419d14:	xor    ch,bl
  419d16:	sub    bh,BYTE PTR [ecx]
  419d18:	add    cl,bh
  419d1a:	mov    bh,0x5c
  419d1c:	icebp  
  419d1d:	into   
  419d1e:	push   ebx
  419d1f:	sub    BYTE PTR [esi+0x4710f55c],al
  419d25:	mov    eax,ds:0xa73b6384
  419d2a:	pop    ecx
  419d2b:	xchg   esi,eax
  419d2c:	aam    0x1f
  419d2e:	ja     0x419d4d
  419d30:	mov    eax,0xaa260c6a
  419d35:	(bad)  
  419d36:	lods   al,BYTE PTR ds:[esi]
  419d37:	jg     0x419cfc
  419d39:	aas    
  419d3a:	jmp    0x85a4:0xbbe21147
  419d41:	lea    eax,[ebp+edx*2-0x2c]
  419d45:	sahf   
  419d46:	ins    BYTE PTR es:[edi],dx
  419d47:	cmc    
  419d48:	jns    0x419d2b
  419d4a:	inc    edi
  419d4b:	pop    eax
  419d4c:	inc    ecx
  419d4d:	loope  0x419ce2
  419d4f:	mov    ecx,DWORD PTR [ebp+0x26]
  419d52:	das    
  419d53:	push   ss
  419d54:	adc    DWORD PTR [esi-0x7b],0x1a4f36bc
  419d5b:	in     eax,dx
  419d5c:	sbb    BYTE PTR [eax+0x3362dd31],0x6e
  419d63:	adc    edx,DWORD PTR [esi]
  419d65:	mov    cl,0xce
  419d67:	add    al,0xaa
  419d69:	or     eax,DWORD PTR [edi+edx*1]
  419d6c:	mov    eax,0x4e1283ad
  419d71:	xor    ebx,DWORD PTR [ecx-0x721c7220]
  419d77:	adc    eax,0x6c9cc666
  419d7c:	js     0x419d28
  419d7e:	test   DWORD PTR [ecx-0x75d3af75],eax
  419d84:	mov    cl,0x5c
  419d86:	jl     0x419d3a
  419d88:	sahf   
  419d89:	dec    edi
  419d8a:	imul   ecx,esp,0xffffff9f
  419d8d:	or     cl,BYTE PTR ds:0xb29c6c4a
  419d93:	addr16 popf 
  419d95:	mov    eax,0xc6c8ae6d
  419d9a:	push   ebp
  419d9b:	call   0x19cf:0x3562df1c
  419da2:	xchg   DWORD PTR [edi],eax
  419da4:	add    esp,DWORD PTR [ecx]
  419da6:	aam    0xd7
  419da8:	ds std 
  419daa:	fiadd  DWORD PTR [eax+0x69]
  419dad:	daa    
  419dae:	ftst   
  419db0:	cdq    
  419db1:	stc    
  419db2:	fidivr WORD PTR [eax+ecx*8-0x41ffe50]
  419db9:	lds    ecx,FWORD PTR [edx+0x63f96da7]
  419dbf:	bound  eax,QWORD PTR [edx]
  419dc1:	mov    edi,0x989bc9ed
  419dc6:	setp   ah
  419dc9:	stc    
  419dca:	xchg   DWORD PTR [edi+eax*4],eax
  419dcd:	retf   0xf225
  419dd0:	pop    ebp
  419dd1:	sbb    cl,BYTE PTR [ecx+0x48bbb8aa]
  419dd7:	mov    DWORD PTR [edi-0x6f],esi
  419dda:	not    dh
  419ddc:	int3   
  419ddd:	(bad)  
  419ddf:	adc    esi,ebp
  419de1:	inc    edi
  419de2:	in     eax,dx
  419de3:	push   ss
  419de4:	adc    ch,0x9d
  419de7:	sub    DWORD PTR [ebp+eax*2-0x44],esp
  419deb:	in     eax,dx
  419dec:	inc    esp
  419ded:	xor    ch,dh
  419def:	push   cs
  419df0:	and    bh,ch
  419df2:	pop    eax
  419df3:	lds    ecx,FWORD PTR [edx-0x4bf6cd71]
  419df9:	in     eax,0xff
  419dfb:	jno    0x419dc3
  419dfd:	icebp  
  419dfe:	pop    ebp
  419dff:	lods   eax,DWORD PTR ds:[esi]
  419e00:	xor    eax,DWORD PTR [esi-0x2f597f3d]
  419e06:	and    bl,BYTE PTR cs:[esi+0x1b5c3609]
  419e0d:	xchg   ebp,eax
  419e0e:	mov    dl,0x93
  419e10:	imul   edx,DWORD PTR [ecx],0x63
  419e13:	(bad)  
  419e14:	dec    ebp
  419e15:	sahf   
  419e16:	cmp    bl,bh
  419e18:	inc    edx
  419e19:	test   al,0x1d
  419e1b:	sub    eax,0xfd70f6d1
  419e20:	add    al,0xdd
  419e22:	rcr    BYTE PTR [esi-0x25],1
  419e25:	(bad)  
  419e27:	jecxz  0x419de1
  419e29:	repnz fld QWORD PTR [ecx+0x605cff40]
  419e30:	imul   ebp
  419e32:	or     dh,0xd0
  419e35:	jae    0x419dd1
  419e37:	in     eax,dx
  419e38:	xchg   BYTE PTR [eax+0x24],ah
  419e3b:	or     DWORD PTR [ebx+0x66],esp
  419e3e:	xchg   edi,eax
  419e3f:	xchg   ebp,eax
  419e40:	sub    eax,0x4ef0f116
  419e45:	inc    ebx
  419e46:	cmp    BYTE PTR [ebp+0x17],dl
  419e49:	ins    DWORD PTR es:[edi],dx
  419e4a:	loop   0x419e1b
  419e4c:	(bad)  
  419e4d:	fcomi  st,st(6)
  419e4f:	outs   dx,BYTE PTR ds:[esi]
  419e50:	inc    ebp
  419e51:	(bad)  
  419e52:	(bad)  
  419e53:	ds imul esi,esi,0x966c9255
  419e5a:	js     0x419dfb
  419e5c:	xor    eax,0x73750617
  419e61:	loopne 0x419e77
  419e63:	sbb    al,0x3b
  419e65:	in     al,0x5d
  419e67:	mov    cl,0xce
  419e69:	fistp  WORD PTR [ebx+0x30]
  419e6c:	pop    ds
  419e6d:	jo     0x419e2c
  419e6f:	into   
  419e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e71:	jo     0x419e9e
  419e73:	shl    bh,1
  419e75:	fwait
  419e76:	xor    cl,BYTE PTR [eax+ecx*4]
  419e79:	cwde   
  419e7a:	cmp    al,0xe1
  419e7c:	repz or DWORD PTR [edx],edi
  419e7f:	xchg   DWORD PTR [esi-0x19],ecx
  419e82:	(bad)  
  419e83:	xrelease mov DWORD PTR [edx+0x1c],edi
  419e87:	mov    esi,0xd4f36743
  419e8c:	sub    ah,al
  419e8e:	repz xor al,0xb9
  419e91:	jle    0x419ef9
  419e93:	ja     0x419e71
  419e95:	int3   
  419e96:	dec    edi
  419e97:	rol    DWORD PTR [esi],0xe1
  419e9a:	fs pushf 
  419e9c:	push   ds
  419e9d:	mov    cl,0xd5
  419e9f:	loopne 0x419ed8
  419ea1:	cld    
  419ea2:	sub    esp,DWORD PTR [ecx+0x1022eb0]
  419ea8:	cmp    edx,DWORD PTR [edi+0x4a47cae]
  419eae:	adc    eax,0x850b87f3
  419eb3:	dec    eax
  419eb4:	fabs   
  419eb6:	ficomp WORD PTR [ebp-0x55]
  419eb9:	mov    dh,BYTE PTR [ecx+ecx*2-0x3f7bd0b6]
  419ec0:	enter  0xc751,0x27
  419ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ec5:	mov    eax,ds:0x78cb68fb
  419eca:	dec    ebp
  419ecb:	fistp  WORD PTR [ebx+0x56]
  419ece:	nop
  419ecf:	sub    bl,BYTE PTR cs:[eax-0x41]
  419ed3:	xchg   ecx,eax
  419ed4:	(bad)
  419ed7:	jb     0x419f00
  419ed9:	test   BYTE PTR [edi-0x4c2b07c6],0x61
  419ee0:	mov    ds:0xb43df6e1,al
  419ee5:	jge    0x419e8a
  419ee7:	and    edi,DWORD PTR [edi-0xb8048c6]
  419eed:	enter  0xdcc4,0x2c
  419ef1:	jno    0x419ece
  419ef3:	mov    ds:0xac15f5fb,eax
  419ef8:	mov    dl,0x38
  419efa:	pop    eax
  419efb:	mov    eax,0x7e2e804d
  419f00:	shl    BYTE PTR [edx-0xc],0x9f
  419f04:	ins    DWORD PTR es:[edi],dx
  419f05:	aaa    
  419f06:	and    dh,al
  419f08:	sahf   
  419f09:	mov    ah,0x6b
  419f0b:	pop    eax
  419f0c:	shr    BYTE PTR [esi-0x3a5dfcd1],0xb4
  419f13:	popa   
  419f14:	pop    ebx
  419f15:	les    ebx,FWORD PTR [edx-0x20]
  419f18:	es xor al,0x8b
  419f1b:	xchg   BYTE PTR [ebp+0x30],al
  419f1e:	aad    0x27
  419f20:	out    dx,al
  419f21:	sub    DWORD PTR [ebx-0x5dc4f30],edx
  419f27:	mov    dl,BYTE PTR [eax+0x4f]
  419f2a:	add    DWORD PTR [esi-0x1c],edi
  419f2d:	fist   DWORD PTR [edx-0x439d0f59]
  419f33:	pop    edx
  419f34:	push   cs
  419f35:	mov    ebx,0x2dc0b5a
  419f3a:	aaa    
  419f3b:	out    0x5,al
  419f3d:	pop    ss
  419f3e:	mov    ah,0xb
  419f40:	inc    ebx
  419f41:	jnp    0x419f01
  419f43:	mov    cl,0xcf
  419f45:	fwait
  419f46:	js     0x419f7a
  419f48:	adc    BYTE PTR ds:0xa903c824,al
  419f4e:	neg    BYTE PTR [edi]
  419f50:	jmp    0x419fbd
  419f52:	push   ecx
  419f53:	inc    ebp
  419f54:	pushf  
  419f55:	xchg   esp,eax
  419f56:	adc    DWORD PTR ds:0x8c7988f8,esi
  419f5c:	inc    esi
  419f5d:	sbb    eax,0xae63a652
  419f62:	sub    BYTE PTR [edi+0x5f],dh
  419f65:	arpl   WORD PTR [esi],dx
  419f67:	dec    ebp
  419f68:	sub    DWORD PTR [ebx+0x6be7895c],ecx
  419f6e:	cs out dx,eax
  419f70:	out    dx,al
  419f71:	test   eax,0x960452d6
  419f76:	push   edx
  419f77:	aam    0x6d
  419f79:	cld    
  419f7a:	mov    edi,0xc630b367
  419f7f:	xor    ebp,DWORD PTR [ebp-0x58]
  419f82:	jmp    0xa34f:0x3618d1fa
  419f89:	inc    esp
  419f8a:	cmp    bh,BYTE PTR [esi]
  419f8c:	inc    edx
  419f8d:	imul   esp,edi,0x340e8010
  419f93:	push   0xdb5461a9
  419f98:	push   ds
  419f99:	sahf   
  419f9a:	outs   dx,BYTE PTR ds:[esi]
  419f9b:	sub    al,0x1
  419f9d:	ss push edx
  419f9f:	(bad)  
  419fa0:	mov    ss,WORD PTR [edx]
  419fa2:	adc    BYTE PTR cs:[eax],bh
  419fa5:	mov    ds:0xb13efbde,eax
  419fab:	adc    DWORD PTR es:[esi],esi
  419fae:	mov    ebx,0x9e143aac
  419fb3:	fnstsw WORD PTR ds:0x11f3083d
  419fb9:	(bad)  
  419fba:	rcr    BYTE PTR [ecx],0x33
  419fbd:	out    dx,al
  419fbe:	pop    edx
  419fbf:	sti    
  419fc0:	arpl   WORD PTR [eax-0x37e49719],bx
  419fc6:	call   0x7008:0x8c156e94
  419fcd:	pop    esi
  419fce:	sbb    BYTE PTR [ebx*1+0x1ab0e98],cl
  419fd5:	js     0x419f6f
  419fd7:	pusha  
  419fd8:	out    dx,eax
  419fd9:	xchg   ebp,eax
  419fda:	pop    es
  419fdb:	xchg   esp,eax
  419fdc:	out    dx,eax
  419fdd:	dec    ebx
  419fde:	or     DWORD PTR [ecx+0x7f753a99],0xe77a195d
  419fe8:	and    al,0xd8
  419fea:	(bad)  
  419fec:	mov    ds:0xa2518d46,eax
  419ff1:	mov    al,0x33
  419ff3:	pop    ebp
  419ff4:	scas   eax,DWORD PTR es:[edi]
  419ff5:	inc    ebp
  419ff6:	dec    eax
  419ff7:	fstp   QWORD PTR [edi+0x596feb71]
  419ffd:	call   0xf985423b
  41a002:	and    BYTE PTR [eax],dh
  41a004:	and    BYTE PTR [edx],bh
  41a006:	cwde   
  41a007:	mov    ds:0x7a21bd22,eax
  41a00c:	mov    ah,0xe2
  41a00e:	push   ecx
  41a00f:	push   esp
  41a010:	popa   
  41a011:	test   BYTE PTR [eax-0x6d],bl
  41a014:	add    al,0xb
  41a016:	js     0x419f9e
  41a018:	xchg   edi,eax
  41a019:	out    0x3d,al
  41a01b:	aad    0xbd
  41a01d:	outs   dx,DWORD PTR cs:[esi]
  41a01f:	imul   esi,esp,0x6
  41a022:	dec    ecx
  41a023:	xchg   ebx,eax
  41a024:	in     al,0xef
  41a026:	push   0xffffffea
  41a028:	lods   al,BYTE PTR ds:[esi]
  41a029:	pop    esp
  41a02a:	add    DWORD PTR ds:0x160bc4c1,eax
  41a030:	pop    ds
  41a031:	push   0x12
  41a033:	int    0x61
  41a035:	jle    0x419fcd
  41a037:	repz inc ecx
  41a039:	rdmsr  
  41a03b:	js     0x41a047
  41a03d:	rcr    dh,0x1e
  41a040:	sub    DWORD PTR [ecx],edi
  41a042:	std    
  41a043:	add    eax,0xaab4239b
  41a048:	push   ebx
  41a049:	and    ch,0x9c
  41a04c:	nop
  41a04d:	popa   
  41a04e:	frstor [ebx]
  41a050:	mov    ch,0x50
  41a052:	aas    
  41a053:	daa    
  41a054:	push   edi
  41a055:	popa   
  41a056:	cmp    al,0xb0
  41a058:	pop    ecx
  41a059:	leave  
  41a05a:	lock (bad) 
  41a05c:	pop    ecx
  41a05d:	jo     0x41a03e
  41a05f:	test   BYTE PTR [esi-0x54],al
  41a062:	xor    eax,0x85dabdf1
  41a067:	push   cs
  41a068:	in     eax,0x28
  41a06a:	and    esi,DWORD PTR [edx]
  41a06c:	ss sub edx,esi
  41a06f:	mov    ch,0xb4
  41a071:	xor    al,0x4d
  41a073:	scas   al,BYTE PTR es:[edi]
  41a074:	retf   
  41a075:	mov    DWORD PTR [esi+0x7b4a1ac5],edi
  41a07b:	dec    ebp
  41a07c:	daa    
  41a07d:	outs   dx,BYTE PTR ds:[esi]
  41a07e:	fcmovnb st,st(3)
  41a080:	add    DWORD PTR [esp+esi*4-0x1f],esp
  41a084:	sahf   
  41a085:	and    BYTE PTR [edx-0x6667c5cb],dh
  41a08b:	push   es
  41a08c:	jg     0x41a02d
  41a08e:	js     0x41a02d
  41a090:	inc    edi
  41a091:	aad    0x41
  41a093:	cld    
  41a094:	xchg   ebp,eax
  41a095:	xchg   esi,eax
  41a096:	sbb    al,0x15
  41a098:	sub    BYTE PTR [ebx],ah
  41a09a:	frstor [ecx+eax*4]
  41a09d:	clc    
  41a09e:	(bad)  [esi+edi*8]
  41a0a1:	adc    bh,BYTE PTR [ecx]
  41a0a3:	add    al,0xba
  41a0a5:	sbb    eax,0xa6fca99d
  41a0aa:	int3   
  41a0ab:	aam    0xd0
  41a0ad:	in     al,0x99
  41a0af:	outs   dx,BYTE PTR ds:[esi]
  41a0b0:	imul   BYTE PTR [ebx-0x42]
  41a0b3:	pop    es
  41a0b4:	pop    ecx
  41a0b5:	inc    ebx
  41a0b6:	popf   
  41a0b7:	ja     0x41a0cd
  41a0b9:	sub    ah,bh
  41a0bb:	push   edi
  41a0bc:	jne    0x41a074
  41a0be:	test   DWORD PTR [ecx+0x258e64d6],esi
  41a0c4:	or     DWORD PTR [ebx+0x4a],0x61caef4c
  41a0cb:	ja     0x41a081
  41a0cd:	push   es
  41a0ce:	xchg   DWORD PTR es:[ebx+eiz*2],edx
  41a0d2:	lods   eax,DWORD PTR ds:[esi]
  41a0d3:	fcomp  DWORD PTR [esp+esi*4]
  41a0d6:	adc    ebx,DWORD PTR [ebx+0x3572e85f]
  41a0dc:	jo     0x41a0b8
  41a0de:	cmc    
  41a0df:	repz test BYTE PTR [eax],al
  41a0e2:	(bad)  
  41a0e4:	fwait
  41a0e5:	imul   eax,DWORD PTR [ecx],0xda54f7c6
  41a0eb:	shl    BYTE PTR [esi],1
  41a0ed:	inc    eax
  41a0ee:	push   0xbb6a64b
  41a0f3:	add    bh,BYTE PTR [esi]
  41a0f5:	jae    0x41a160
  41a0f7:	cmp    esi,eax
  41a0f9:	test   eax,esi
  41a0fb:	pusha  
  41a0fc:	cwde   
  41a0fd:	int    0xf7
  41a0ff:	mov    WORD PTR [edx-0x3c],ds
  41a102:	mov    ds:0x8e84e24f,eax
  41a107:	pop    eax
  41a108:	ins    DWORD PTR es:[edi],dx
  41a109:	push   cs
  41a10a:	out    0x3c,eax
  41a10c:	mov    dh,0xab
  41a10e:	pop    ecx
  41a10f:	push   ecx
  41a110:	mov    edi,0xba4b51cf
  41a115:	sub    bh,0x24
  41a118:	shr    ebx,cl
  41a11a:	jae    0x41a0e1
  41a11c:	lahf   
  41a11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a11e:	pop    esi
  41a11f:	call   DWORD PTR [eax+0x1f126e0d]
  41a125:	jle    0x41a173
  41a127:	nop
  41a128:	mov    al,0x30
  41a12a:	mov    esp,0x896ef52
  41a12f:	adc    al,0x6
  41a131:	leave  
  41a132:	or     eax,0xdb6cf53f
  41a137:	test   al,0x73
  41a139:	stos   BYTE PTR es:[edi],al
  41a13a:	popf   
  41a13b:	mov    dh,BYTE PTR [ebp-0x5f939d97]
  41a141:	or     al,0xe0
  41a143:	add    edx,0x7d14f5c4
  41a149:	pop    ebp
  41a14a:	xchg   esi,eax
  41a14b:	stos   BYTE PTR es:[edi],al
  41a14c:	pop    eax
  41a14d:	enter  0x343a,0x5f
  41a151:	mov    edi,0xffb7b7a7
  41a156:	and    al,0xb8
  41a158:	pop    es
  41a159:	pop    es
  41a15a:	cwde   
  41a15b:	xchg   ecx,eax
  41a15c:	dec    ebp
  41a15d:	pop    ss
  41a15e:	(bad)  
  41a15f:	ja     0x41a14c
  41a161:	and    eax,0xc6a212c9
  41a166:	mov    al,ds:0xd3664aff
  41a16b:	lahf   
  41a16c:	cmp    dl,BYTE PTR [eax+0x7d]
  41a16f:	mov    ecx,0x96be2f1c
  41a174:	xchg   ecx,eax
  41a175:	stos   BYTE PTR es:[edi],al
  41a176:	imul   ebp,DWORD PTR [ebx+0x4a],0xd6bda46
  41a17d:	pusha  
  41a17e:	jns    0x41a1e3
  41a180:	sti    
  41a181:	inc    edi
  41a182:	xchg   edi,eax
  41a183:	repz out 0x3d,al
  41a186:	lock push edx
  41a188:	ins    DWORD PTR es:[edi],dx
  41a189:	lock fld QWORD PTR [ebx+0x2c]
  41a18d:	adc    eax,0x370911d1
  41a192:	stc    
  41a193:	daa    
  41a194:	mov    ch,0x61
  41a196:	gs xchg esi,eax
  41a198:	dec    esi
  41a199:	sub    BYTE PTR [esi+esi*2+0x2],dh
  41a19d:	mov    ecx,0x322a9d36
  41a1a2:	fidiv  DWORD PTR [eax+0xa]
  41a1a5:	xor    dh,bl
  41a1a7:	std    
  41a1a8:	int    0x8e
  41a1aa:	xchg   esi,eax
  41a1ab:	mov    dh,0xee
  41a1ad:	neg    dl
  41a1af:	push   ecx
  41a1b0:	hlt    
  41a1b1:	xor    dh,cl
  41a1b3:	adc    eax,0x63c1e483
  41a1b8:	cmp    eax,0x698b96c1
  41a1bd:	xchg   ebp,eax
  41a1be:	inc    esi
  41a1bf:	sub    al,bh
  41a1c1:	dec    esi
  41a1c2:	out    0xe5,eax
  41a1c4:	fidivr DWORD PTR [esi+0x5e]
  41a1c7:	xor    BYTE PTR [edi],0xca
  41a1ca:	push   esp
  41a1cb:	sbb    DWORD PTR [eax+0x8cc52cb],esi
  41a1d1:	xor    eax,0xd1e4f556
  41a1d6:	imul   DWORD PTR [ebp+ecx*1+0x69]
  41a1da:	stos   BYTE PTR es:[edi],al
  41a1db:	in     al,0x37
  41a1dd:	sub    al,BYTE PTR [ebx+0x2f]
  41a1e0:	dec    esi
  41a1e1:	pop    edx
  41a1e2:	ret    0x3f7b
  41a1e5:	pop    eax
  41a1e6:	into   
  41a1e7:	in     al,0x97
  41a1e9:	fcom   DWORD PTR [eax+0x6ef4e26a]
  41a1ef:	push   edx
  41a1f0:	pop    ecx
  41a1f1:	mov    esp,0x300bc3c3
  41a1f6:	mov    ah,BYTE PTR [edx-0x33]
  41a1f9:	lock jo 0x41a241
  41a1fc:	xchg   DWORD PTR [eax],eax
  41a1fe:	stos   DWORD PTR es:[edi],eax
  41a1ff:	sbb    BYTE PTR [ecx],dl
  41a201:	fs int3 
  41a203:	test   al,0xf9
  41a205:	test   DWORD PTR [eax],edx
  41a207:	jecxz  0x41a24e
  41a209:	repnz mov edx,0x68033192
  41a20f:	push   0xffda83ab
  41a214:	call   0x2090:0x9bbfeb05
  41a21b:	ins    BYTE PTR es:[edi],dx
  41a21c:	mov    bl,bh
  41a21e:	add    DWORD PTR [esi+0xc56ad0e],ebx
  41a224:	pop    ebx
  41a225:	in     eax,0xff
  41a227:	push   0x884d7418
  41a22c:	imul   BYTE PTR [edx+0x16]
  41a22f:	and    cx,0xd
  41a233:	rcl    DWORD PTR [eax+0x2e],0x4
  41a237:	add    BYTE PTR [eax-0x4f],dh
  41a23a:	mov    ebx,0x28967147
  41a23f:	push   ss
  41a240:	loope  0x41a1e9
  41a242:	retf   0x3d4
  41a245:	(bad)  
  41a247:	hlt    
  41a248:	push   edi
  41a249:	in     eax,dx
  41a24a:	repnz push es
  41a24c:	retf   0x7813
  41a24f:	mov    eax,0x98c748b2
  41a254:	pusha  
  41a255:	out    0x87,al
  41a257:	pop    eax
  41a258:	mov    ecx,0xc86fd82
  41a25d:	or     eax,0x8544fe0
  41a262:	sub    BYTE PTR [esi+0x111ab0fa],0x7a
  41a269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a26a:	loopne 0x41a221
  41a26c:	sar    DWORD PTR ds:0x3cdb50f4,1
  41a272:	out    0xe6,eax
  41a274:	pop    DWORD PTR [edi+0x5]
  41a277:	adc    BYTE PTR [edi],ch
  41a279:	lods   al,BYTE PTR ds:[esi]
  41a27a:	mov    ecx,0x6afc4547
  41a27f:	inc    ebx
  41a280:	and    eax,0x4ecb65b5
  41a285:	call   0x7feb:0xaa4ba969
  41a28c:	xchg   ebp,eax
  41a28d:	xchg   esi,eax
  41a28e:	lds    esp,FWORD PTR [eax]
  41a290:	adc    eax,0xe8377160
  41a295:	out    0x48,eax
  41a297:	mov    ecx,fs
  41a299:	or     esi,DWORD PTR [esi]
  41a29b:	mov    bl,0x3
  41a29d:	loopne 0x41a246
  41a29f:	sbb    ebp,0x134d5dd7
  41a2a5:	mov    ?,edx
  41a2a7:	add    eax,0x23f8ac74
  41a2ac:	dec    esi
  41a2ad:	popf   
  41a2ae:	gs xchg esi,eax
  41a2b0:	lods   al,BYTE PTR ds:[esi]
  41a2b1:	jns    0x41a301
  41a2b3:	popf   
  41a2b4:	pop    edi
  41a2b5:	mov    eax,ds:0xbfb5bbf2
  41a2ba:	popa   
  41a2bb:	dec    esi
  41a2bc:	push   0xaf1e6973
  41a2c1:	rcr    DWORD PTR [edx],1
  41a2c3:	push   esi
  41a2c4:	cmp    bh,BYTE PTR ds:0x56bdc952
  41a2ca:	shl    DWORD PTR [edi+edi*8-0x7f],0xe3
  41a2cf:	pop    ds
  41a2d0:	mov    cl,0xbd
  41a2d2:	pop    esp
  41a2d3:	jns    0x41a345
  41a2d5:	xchg   esp,eax
  41a2d6:	stc    
  41a2d7:	push   esi
  41a2d8:	daa    
  41a2d9:	jo     0x41a274
  41a2db:	ficomp WORD PTR [edx]
  41a2dd:	aaa    
  41a2de:	fs sub eax,0xf1b1860
  41a2e4:	jecxz  0x41a307
  41a2e6:	add    ebp,DWORD PTR [edi]
  41a2e8:	jns    0x41a354
  41a2ea:	xchg   ecx,eax
  41a2eb:	dec    esp
  41a2ec:	mov    ch,0x33
  41a2ee:	stc    
  41a2ef:	imul   edx,DWORD PTR [ebp+0x61],0xffffffce
  41a2f3:	ror    BYTE PTR [ebp-0x443dc1b3],0x89
  41a2fa:	ret    
  41a2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2fc:	aas    
  41a2fd:	push   0x2155b085
  41a302:	xor    BYTE PTR [esi+ebp*8-0x567b56b6],0x69
  41a30a:	cld    
  41a30b:	clc    
  41a30c:	fs sbb dh,dl
  41a30f:	jecxz  0x41a2c4
  41a311:	and    eax,0xa7b85405
  41a316:	fwait
  41a317:	adc    al,0xc7
  41a319:	jp     0x41a2c4
  41a31b:	pop    ds
  41a31c:	in     eax,0x79
  41a31e:	push   esi
  41a31f:	inc    eax
  41a320:	xchg   ebp,eax
  41a321:	xchg   BYTE PTR [ebx],ch
  41a323:	push   edi
  41a324:	and    esi,ebx
  41a326:	mov    edx,0x8ac76caf
  41a32b:	(bad)  
  41a32c:	xlat   BYTE PTR ds:[ebx]
  41a32d:	leave  
  41a32e:	aam    0x9f
  41a330:	in     al,0x9d
  41a332:	dec    eax
  41a333:	mov    ds:0x8ff867ad,al
  41a338:	(bad)  
  41a339:	fwait
  41a33a:	pop    ebp
  41a33b:	push   ds
  41a33c:	push   es
  41a33d:	push   ecx
  41a33e:	cmp    BYTE PTR [edx+0x3],al
  41a341:	icebp  
  41a342:	sbb    eax,0x24448e0a
  41a347:	and    bh,BYTE PTR [ebx]
  41a349:	jg     0x41a3b0
  41a34b:	fnsave [esi-0x56]
  41a34e:	pop    ebx
  41a34f:	cmp    edi,DWORD PTR [ebp-0x30]
  41a352:	pop    eax
  41a353:	jbe    0x41a3a3
  41a355:	fcmovnbe st,st(3)
  41a357:	xchg   edi,eax
  41a358:	test   DWORD PTR [edi+0x74],eax
  41a35b:	(bad)  
  41a35c:	mov    ebx,0x164f3507
  41a361:	(bad)  
  41a363:	xchg   ecx,eax
  41a364:	mov    eax,ds:0x521eaa38
  41a369:	add    BYTE PTR [eax],al
  41a36b:	mov    ebx,0xcda1dfa9
  41a370:	add    al,0xf3
  41a372:	push   edx
  41a373:	mov    ah,0x45
  41a375:	push   ds
  41a376:	imul   edi,DWORD PTR [eax-0x61ce39b0],0x4a
  41a37d:	and    BYTE PTR [edx+0x26],bl
  41a380:	fadd   QWORD PTR [esi+ecx*4]
  41a383:	outs   dx,DWORD PTR ds:[esi]
  41a384:	mov    fs,WORD PTR [ebp+0x6e16228a]
  41a38a:	das    
  41a38b:	cmp    ch,BYTE PTR [eax+0x20b2713b]
  41a391:	jl     0x41a3cb
  41a393:	stc    
  41a394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a395:	inc    esi
  41a396:	outs   dx,DWORD PTR ds:[esi]
  41a397:	and    al,0x19
  41a399:	mov    al,ds:0x536fd59f
  41a39e:	mov    ch,0x49
  41a3a0:	fist   DWORD PTR [ecx+eiz*8+0x1701cb0c]
  41a3a7:	mov    ch,0x5b
  41a3a9:	sub    al,0xec
  41a3ab:	popf   
  41a3ac:	out    dx,eax
  41a3ad:	add    ecx,DWORD PTR [ebp+0x164198b3]
  41a3b3:	sbb    ebx,DWORD PTR [edi+0x24]
  41a3b6:	jb     0x41a3b4
  41a3b8:	retf   
  41a3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ba:	jbe    0x41a3a6
  41a3bc:	stos   DWORD PTR es:[edi],eax
  41a3bd:	xor    al,BYTE PTR gs:[ecx-0xfd3c810]
  41a3c4:	scas   al,BYTE PTR es:[edi]
  41a3c5:	xchg   edi,eax
  41a3c6:	add    DWORD PTR [ebx],0x5b
  41a3c9:	cdq    
  41a3ca:	fdiv   DWORD PTR [edx+eiz*1-0x1f27a810]
  41a3d1:	or     al,0xe2
  41a3d3:	repz scas eax,DWORD PTR es:[edi]
  41a3d5:	aaa    
  41a3d6:	outs   dx,DWORD PTR ds:[esi]
  41a3d7:	(bad)  
  41a3d8:	std    
  41a3d9:	pop    ebx
  41a3da:	jo     0x41a38d
  41a3dc:	sti    
  41a3dd:	adc    eax,0xf6adec64
  41a3e2:	xchg   esi,eax
  41a3e3:	xchg   ebp,eax
  41a3e4:	jl     0x41a3e8
  41a3e6:	setno  ch
  41a3e9:	sar    DWORD PTR [eax-0x41b9ca0e],cl
  41a3ef:	xchg   BYTE PTR [edi-0x49],al
  41a3f2:	stos   BYTE PTR es:[edi],al
  41a3f3:	pop    esp
  41a3f4:	iret   
  41a3f5:	xor    cl,cl
  41a3f7:	rcr    DWORD PTR [edi-0x4a],cl
  41a3fa:	je     0x41a3c7
  41a3fc:	mov    esp,0x7a170b5b
  41a401:	clc    
  41a402:	aad    0xa2
  41a404:	xor    BYTE PTR [edx],bl
  41a406:	lods   al,BYTE PTR ds:[esi]
  41a407:	cmp    ebx,DWORD PTR [ebx+eax*2-0x1c0a57b8]
  41a40e:	out    0x39,al
  41a410:	mov    eax,0xeb9a2dcb
  41a415:	shl    al,0xb1
  41a418:	pop    edx
  41a419:	sbb    BYTE PTR [ebx],0xce
  41a41c:	mov    dh,0xdf
  41a41e:	jns    0x41a472
  41a420:	inc    eax
  41a421:	xchg   ecx,eax
  41a422:	push   edx
  41a423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a424:	iret   
  41a425:	cld    
  41a426:	push   esp
  41a427:	sbb    eax,0x4462b495
  41a42c:	in     al,0x7f
  41a42e:	mov    ds:0xb55da7ed,eax
  41a433:	sbb    ebp,DWORD PTR [ebx+0x75]
  41a436:	inc    esi
  41a437:	xor    ah,BYTE PTR [esi]
  41a439:	shl    BYTE PTR [ebp+0x38a1df6f],cl
  41a43f:	retf   
  41a440:	scas   al,BYTE PTR es:[edi]
  41a441:	int    0x1c
  41a443:	repnz and DWORD PTR [esi+0x58657221],esi
  41a44a:	sbb    eax,0x8fe47ec2
  41a44f:	imul   edi,DWORD PTR [ecx-0x1e],0x58
  41a453:	pop    esp
  41a454:	xchg   BYTE PTR [ecx-0x10363c75],al
  41a45a:	adc    BYTE PTR [esi+0x64],ch
  41a45d:	xor    esp,DWORD PTR [edx+0x66]
  41a460:	mov    ah,0xff
  41a462:	retf   
  41a463:	cmp    eax,DWORD PTR [ebp+eiz*1+0x608ed4a6]
  41a46a:	gs (bad) 
  41a46c:	(bad)  
  41a46d:	mov    bh,0x5c
  41a46f:	sbb    al,0x28
  41a471:	dec    ebp
  41a472:	cld    
  41a473:	jl     0x41a3f6
  41a475:	pop    edi
  41a476:	int3   
  41a477:	out    0x33,al
  41a479:	xchg   edi,eax
  41a47a:	imul   edx,DWORD PTR [esi+0x9],0x96737520
  41a481:	mov    bl,0xf6
  41a483:	add    eax,0xfc5eb1f6
  41a488:	aaa    
  41a489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48a:	sub    DWORD PTR [ecx-0x28],0x4bf708ee
  41a491:	clc    
  41a492:	ins    DWORD PTR es:[edi],dx
  41a493:	mov    dh,0x3d
  41a495:	popa   
  41a496:	jge    0x41a43e
  41a498:	dec    ebp
  41a499:	imul   BYTE PTR [edi+0x74]
  41a49c:	das    
  41a49d:	nop
  41a49e:	ss mov edi,ecx
  41a4a1:	xchg   edi,eax
  41a4a2:	mov    edx,0xb663d01f
  41a4a7:	sub    eax,DWORD PTR [eax-0xe4c5c19]
  41a4ad:	mov    ebp,0xd13eb410
  41a4b2:	cmp    esi,DWORD PTR [eax+0x6b]
  41a4b5:	neg    BYTE PTR [ebx-0x221eac0c]
  41a4bb:	popa   
  41a4bc:	push   eax
  41a4bd:	pusha  
  41a4be:	jge    0x41a44b
  41a4c0:	je     0x41a4ed
  41a4c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4c3:	rol    BYTE PTR [eax],1
  41a4c5:	jmp    DWORD PTR [eax+0x21f29001]
  41a4cb:	rol    ebx,0xd8
  41a4ce:	dec    esi
  41a4cf:	mov    esp,0x329e0e54
  41a4d4:	retf   
  41a4d5:	dec    ecx
  41a4d6:	sbb    DWORD PTR [edx],edi
  41a4d8:	fadd   QWORD PTR [eax]
  41a4da:	mov    al,ds:0x1aee52d4
  41a4df:	mov    ah,0xce
  41a4e1:	mov    eax,ds:0xd610427e
  41a4e6:	leave  
  41a4e7:	jmp    0x5b28e78c
  41a4ec:	hlt    
  41a4ed:	pop    ebx
  41a4ef:	mov    ds:0xeec394e7,al
  41a4f4:	jp     0x41a4ca
  41a4f6:	cmp    ecx,DWORD PTR [eax]
  41a4f8:	mov    ch,0x76
  41a4fa:	jbe    0x41a4a5
  41a4fc:	fild   QWORD PTR [ecx+0x823f4cf]
  41a502:	adc    bh,BYTE PTR [esi+0xbf9253d]
  41a508:	jle    0x41a4b7
  41a50a:	jae    0x41a57a
  41a50c:	int3   
  41a50d:	mov    eax,0xb8329b54
  41a512:	sub    BYTE PTR cs:[edi+0x7a],bl
  41a516:	retf   0xb886
  41a519:	inc    esp
  41a51a:	push   cs
  41a51b:	iret   
  41a51c:	loope  0x41a576
  41a51e:	jne    0x41a593
  41a520:	sbb    eax,0xf5591354
  41a525:	pcmpeqb mm2,QWORD PTR [edi]
  41a528:	inc    eax
  41a529:	mov    al,ds:0xf24d0beb
  41a52e:	fsub   st(7),st
  41a530:	and    esp,DWORD PTR [esi]
  41a532:	imul   edx,DWORD PTR [edx+edi*8],0xffffff8c
  41a536:	outs   dx,BYTE PTR ds:[esi]
  41a537:	and    eax,0x5ffabcbe
  41a53c:	mov    ds:0xf4279224,eax
  41a541:	sti    
  41a542:	and    eax,0x2d98a0e8
  41a547:	fdivr  DWORD PTR [ebp-0x43]
  41a54a:	test   eax,0xf0ec08ba
  41a54f:	mov    edx,0x555f93fb
  41a554:	jecxz  0x41a547
  41a556:	lock cli 
  41a558:	pop    ebp
  41a559:	mov    ah,0xa7
  41a55b:	add    ebp,DWORD PTR [ecx]
  41a55d:	fisttp WORD PTR [esi+0x2a8cdafb]
  41a563:	popa   
  41a564:	out    0x75,al
  41a566:	repnz adc al,0xe2
  41a569:	(bad)  
  41a56a:	cmp    ecx,DWORD PTR [ebx]
  41a56c:	adc    al,0x13
  41a56e:	fwait
  41a56f:	mov    ds,WORD PTR [ecx]
  41a571:	mov    dh,0xec
  41a573:	popa   
  41a574:	sbb    al,0xe3
  41a576:	nop
  41a577:	out    dx,al
  41a578:	xchg   ebx,eax
  41a579:	test   DWORD PTR [eax-0x68ac173a],edx
  41a57f:	mov    dh,0xd3
  41a581:	out    0x66,al
  41a583:	rcr    DWORD PTR [edi],1
  41a585:	jmp    0xf60b:0xc0317a81
  41a58c:	test   BYTE PTR [edi+eiz*8+0x7],ch
  41a590:	adc    ebp,DWORD PTR [edi+0x32]
  41a593:	adc    bh,BYTE PTR [esi]
  41a595:	or     BYTE PTR [esi],dh
  41a597:	out    dx,eax
  41a598:	inc    esi
  41a599:	pop    ecx
  41a59a:	je     0x41a60e
  41a59c:	mov    bl,0x10
  41a59e:	fmulp  st(3),st
  41a5a0:	test   DWORD PTR [ebp+0x3d],ebx
  41a5a3:	stos   BYTE PTR es:[edi],al
  41a5a4:	mov    eax,DWORD PTR [eax]
  41a5a6:	add    DWORD PTR [ebp+esi*2-0x67e58c13],esi
  41a5ad:	mov    esp,0xa9f8cd72
  41a5b2:	sbb    DWORD PTR [eax+edi*4-0x70],0xffffffee
  41a5b7:	mov    edx,0x2d7886f1
  41a5bc:	sub    DWORD PTR [esi],esp
  41a5be:	push   cs
  41a5bf:	push   ebx
  41a5c0:	inc    eax
  41a5c1:	clc    
  41a5c2:	jb     0x41a57a
  41a5c4:	std    
  41a5c5:	and    esp,DWORD PTR [ebx+0x6a]
  41a5c8:	popa   
  41a5c9:	sub    ebx,DWORD PTR [edx+edx*2+0x78]
  41a5cd:	repnz stos DWORD PTR es:[edi],eax
  41a5cf:	(bad)
  41a5d4:	and    al,0x3a
  41a5d6:	push   ebp
  41a5d7:	ret    
  41a5d8:	ret    0x5ff3
  41a5db:	cdq    
  41a5dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5dd:	stos   DWORD PTR es:[edi],eax
  41a5de:	in     al,dx
  41a5df:	retf   
  41a5e0:	jmp    0xaf53f042
  41a5e5:	xchg   esi,eax
  41a5e6:	stc    
  41a5e7:	jg     0x41a643
  41a5e9:	retf   0x2737
  41a5ec:	add    DWORD PTR [ecx-0x70],0xc15076de
  41a5f3:	jg     0x41a644
  41a5f5:	or     ecx,DWORD PTR [eax-0x1d]
  41a5f8:	inc    esi
  41a5f9:	out    0x5a,eax
  41a5fb:	sti    
  41a5fc:	rcr    edx,1
  41a5fe:	gs ret 
  41a600:	scas   al,BYTE PTR es:[edi]
  41a601:	xchg   ecx,eax
  41a602:	idiv   BYTE PTR [edx]
  41a604:	in     eax,dx
  41a605:	xchg   edx,eax
  41a606:	jg     0x41a5b9
  41a608:	mov    BYTE PTR [edi-0x1b],al
  41a60b:	enter  0x170e,0xfd
  41a60f:	test   al,0x94
  41a611:	test   DWORD PTR [eax+0x50],ebp
  41a614:	(bad)  
  41a615:	fild   QWORD PTR [esp+ebp*8+0x44]
  41a619:	inc    eax
  41a61a:	adc    eax,esp
  41a61c:	xor    eax,0x4512f8a4
  41a621:	outs   dx,DWORD PTR ds:[esi]
  41a622:	or     esi,DWORD PTR [esi-0x6c]
  41a625:	out    dx,eax
  41a626:	sbb    eax,0x1868d364
  41a62b:	sbb    DWORD PTR [edi+0x183de042],edi
  41a631:	pushf  
  41a632:	fwait
  41a633:	test   DWORD PTR [eax],0x9b53e8e1
  41a639:	or     eax,0xc6824baa
  41a63e:	xchg   BYTE PTR [ebx-0x6f73a238],ch
  41a644:	outs   dx,DWORD PTR ds:[esi]
  41a645:	dec    ebp
  41a646:	jo     0x41a6a8
  41a648:	jmp    0xb614:0xad409731
  41a64f:	imul   esp,DWORD PTR [ecx+0x3a],0xb5eae5e3
  41a656:	mov    ebx,0x28e5ac3f
  41a65b:	outs   dx,DWORD PTR ds:[esi]
  41a65c:	pop    eax
  41a65d:	addr16 pop ebx
  41a65f:	inc    ebx
  41a660:	or     DWORD PTR [ebx],edx
  41a662:	(bad)  
  41a663:	push   ebp
  41a664:	leave  
  41a665:	jmp    DWORD PTR [esi-0x3]
  41a668:	sub    dl,BYTE PTR [ebx+0x47]
  41a66b:	jl     0x41a6e2
  41a66d:	xor    edx,ecx
  41a66f:	or     bl,BYTE PTR [edi]
  41a671:	dec    eax
  41a672:	cs aad 0x47
  41a675:	je     0x41a68f
  41a677:	mov    bl,BYTE PTR [esi]
  41a679:	fs pop ds
  41a67b:	push   esi
  41a67c:	fidivr DWORD PTR ds:0x2f83c24d
  41a682:	push   ecx
  41a683:	(bad)  
  41a684:	dec    edx
  41a685:	inc    edi
  41a686:	inc    edi
  41a687:	dec    ebp
  41a688:	hlt    
  41a689:	xor    eax,0x411e5df3
  41a68e:	jb     0x41a6cf
  41a690:	xor    ah,BYTE PTR [edx-0x48]
  41a693:	jp     0x41a658
  41a695:	ficomp DWORD PTR [ebp-0x65]
  41a698:	shl    DWORD PTR [esi],cl
  41a69a:	popa   
  41a69b:	ins    DWORD PTR es:[edi],dx
  41a69c:	int    0x2e
  41a69e:	mov    WORD PTR [esi-0x4d7b4d8e],?
  41a6a4:	pop    es
  41a6a5:	in     al,0xe6
  41a6a7:	in     al,0x23
  41a6a9:	add    eax,0x9c6b2c5d
  41a6ae:	jae    0x41a656
  41a6b0:	leave  
  41a6b1:	dec    edi
  41a6b2:	sub    edx,edx
  41a6b4:	call   0x7b323c1
  41a6b9:	add    DWORD PTR [ecx-0x66],edx
  41a6bc:	lds    eax,FWORD PTR [ebp+0x6bdf20]
  41a6c2:	cmp    ch,BYTE PTR [ebx]
  41a6c4:	pop    ebp
  41a6c5:	cmp    ebp,esi
  41a6c7:	sub    BYTE PTR [ebx-0x79],dl
  41a6ca:	shl    DWORD PTR [edi],0xa7
  41a6cd:	pop    ss
  41a6ce:	xor    dh,cl
  41a6d0:	xchg   ecx,eax
  41a6d1:	cmp    dl,bh
  41a6d3:	aam    0x6d
  41a6d5:	imul   eax,ecx,0xe8512a8a
  41a6db:	sti    
  41a6dc:	addr16 cld 
  41a6de:	gs (bad) 
  41a6e0:	cmp    eax,0xcaa3b0a6
  41a6e5:	rol    BYTE PTR [eax-0x45],0x23
  41a6e9:	loop   0x41a6c7
  41a6eb:	inc    ebp
  41a6ec:	retf   
  41a6ed:	out    dx,al
  41a6ee:	rcr    BYTE PTR [esp+eax*4-0x6d4abb43],0x9f
  41a6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6f8:	xchg   ecx,eax
  41a6f9:	in     eax,0xbc
  41a6fb:	xchg   ebx,eax
  41a6fc:	arpl   dx,ax
  41a6fe:	xor    al,0x5e
  41a700:	fs jge 0x41a74a
  41a703:	mov    bl,0xa6
  41a705:	mov    eax,0xd116da69
  41a70a:	je     0x41a6c3
  41a70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a70d:	inc    ebx
  41a70e:	mov    ch,0xc9
  41a710:	mul    BYTE PTR [edx]
  41a712:	mov    al,0x9f
  41a714:	test   BYTE PTR [esi-0x7a441572],cl
  41a71a:	ds jl  0x41a797
  41a71d:	(bad)  
  41a71e:	or     DWORD PTR [esi],esi
  41a720:	inc    ecx
  41a721:	popf   
  41a722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a723:	je     0x41a716
  41a725:	sub    al,0xd2
  41a727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a728:	pusha  
  41a729:	stos   DWORD PTR es:[edi],eax
  41a72a:	or     BYTE PTR [ebx],al
  41a72c:	cmp    ecx,DWORD PTR [edx+0x203b6f50]
  41a732:	rcl    BYTE PTR ds:0x95ba7694,0x9b
  41a739:	mov    ds:0xa7c8c95e,eax
  41a73e:	aam    0xd3
  41a740:	xchg   ebp,eax
  41a741:	es jnp 0x41a784
  41a744:	jle    0x41a6ef
  41a746:	fnsave [esi-0x46e6394f]
  41a74c:	push   0x46dce13d
  41a751:	loopne 0x41a74c
  41a753:	jnp    0x41a738
  41a755:	les    edi,FWORD PTR [esi]
  41a757:	repnz outs dx,BYTE PTR ds:[esi]
  41a759:	ss in  eax,dx
  41a75b:	pop    edx
  41a75c:	mov    ds:0x399fe350,eax
  41a761:	jno    0x41a76b
  41a763:	mov    bl,0x82
  41a765:	inc    eax
  41a766:	int3   
  41a767:	pop    es
  41a768:	fwait
  41a769:	sbb    eax,0xb59ac234
  41a76e:	jp     0x41a7e0
  41a770:	aad    0x92
  41a772:	fbld   TBYTE PTR [eax+0x14905baa]
  41a778:	xchg   esp,eax
  41a779:	rol    BYTE PTR [eax-0x4],cl
  41a77c:	push   ss
  41a77d:	push   es
  41a77e:	and    BYTE PTR [edi],al
  41a780:	fist   DWORD PTR [edi]
  41a782:	js     0x41a773
  41a784:	adc    eax,0xbee001a7
  41a789:	jmp    0x18393962
  41a78e:	sub    BYTE PTR [eax+0x76],al
  41a791:	test   al,0x7
  41a793:	jge    0x41a742
  41a795:	add    al,0x37
  41a797:	arpl   si,sp
  41a799:	xor    ecx,DWORD PTR [esi+0x34e65257]
  41a79f:	int    0xc1
  41a7a1:	add    al,0xd2
  41a7a3:	iret   
  41a7a4:	adc    dh,dl
  41a7a6:	adc    BYTE PTR [ebp-0x8],al
  41a7a9:	and    DWORD PTR [ecx-0x4abb1e82],0xffffff9d
  41a7b0:	rcr    BYTE PTR [esp+eiz*2+0x51a51a9b],1
  41a7b7:	and    ah,BYTE PTR [edi+0x5f]
  41a7ba:	push   edx
  41a7bb:	fadd   DWORD PTR [ebp-0x1f9aad6c]
  41a7c1:	push   ds
  41a7c2:	jmp    0xcc8a:0x1c453449
  41a7c9:	pop    ss
  41a7ca:	mov    ch,0xc7
  41a7cc:	outs   dx,BYTE PTR ds:[esi]
  41a7cd:	ins    DWORD PTR es:[edi],dx
  41a7ce:	pop    ebp
  41a7cf:	adc    eax,0x5e10a01c
  41a7d4:	sbb    ebp,DWORD PTR [esi+0x36ae4c1c]
  41a7da:	add    BYTE PTR [esi],dl
  41a7dc:	or     DWORD PTR [edi-0x34],esi
  41a7df:	inc    esp
  41a7e0:	xchg   esi,ebp
  41a7e2:	rol    DWORD PTR [edi-0x53a0d9b3],0xc4
  41a7e9:	push   edx
  41a7ea:	sub    ch,cl
  41a7ec:	out    0x12,al
  41a7ee:	jmp    0xe8201a66
  41a7f3:	sbb    DWORD PTR [edi],ecx
  41a7f5:	(bad)  
  41a7f6:	scas   al,BYTE PTR es:[edi]
  41a7f7:	in     al,0x41
  41a7f9:	push   ebx
  41a7fa:	test   DWORD PTR [edx],edx
  41a7fc:	cmp    cl,ch
  41a7fe:	pop    ds
  41a7ff:	xchg   esi,eax
  41a800:	jo     0x41a881
  41a802:	cli    
  41a803:	cmc    
  41a804:	inc    esp
  41a805:	repz xchg ebx,eax
  41a807:	cmp    bh,bh
  41a809:	fcmovbe st,st(6)
  41a80b:	xlat   BYTE PTR ds:[ebx]
  41a80c:	test   al,0x6e
  41a80e:	adc    ah,BYTE PTR ds:0xa573cc18
  41a814:	adc    eax,0xed9621fe
  41a819:	mov    ds,WORD PTR [edx-0x7e964a75]
  41a81f:	add    esi,ebx
  41a821:	ins    DWORD PTR es:[edi],dx
  41a822:	and    ecx,DWORD PTR [edx+0x12]
  41a825:	into   
  41a826:	jno    0x41a7ee
  41a828:	lods   eax,DWORD PTR ds:[esi]
  41a829:	push   0xc5ad9311
  41a82e:	je     0x41a88c
  41a830:	or     eax,0xf8ac7721
  41a835:	or     ebx,esp
  41a837:	popa   
  41a838:	adc    eax,0xbd5293f3
  41a83d:	cmp    edx,DWORD PTR [esi]
  41a83f:	adc    ebx,eax
  41a841:	mov    dh,0xb
  41a843:	dec    eax
  41a844:	call   0xe6cc:0xf563ae00
  41a84b:	in     eax,0x42
  41a84d:	adc    eax,0xe7bea8cc
  41a852:	pop    ebp
  41a853:	loopne 0x41a821
  41a855:	add    al,0xc8
  41a857:	dec    edi
  41a858:	lahf   
  41a859:	outs   dx,BYTE PTR ds:[esi]
  41a85a:	jne    0x41a7e4
  41a85c:	je     0x41a886
  41a85e:	call   0x494e:0x416d71ea
  41a865:	cmp    esi,0x69
  41a868:	mov    cl,0x95
  41a86a:	pop    ebx
  41a86b:	loop   0x41a860
  41a86d:	imul   esp,DWORD PTR [ecx-0x7f00d71f],0xffffff9b
  41a874:	ins    DWORD PTR es:[edi],dx
  41a875:	call   0xb16c:0xc3014b13
  41a87c:	xchg   esi,eax
  41a87d:	repz (bad) 
  41a87f:	test   al,0x3
  41a881:	push   cs
  41a882:	mov    ds:0x18f1211b,al
  41a887:	push   esp
  41a888:	or     dl,BYTE PTR [ecx]
  41a88a:	jle    0x41a8de
  41a88c:	mov    ch,0x13
  41a88e:	call   DWORD PTR [ecx]
  41a890:	into   
  41a891:	std    
  41a892:	push   ecx
  41a893:	mov    bh,0x1c
  41a895:	add    DWORD PTR [ebp-0x69],esi
  41a898:	xchg   edi,eax
  41a899:	push   esp
  41a89a:	jecxz  0x41a82f
  41a89c:	inc    ecx
  41a89d:	sbb    al,0xd9
  41a89f:	jecxz  0x41a8d7
  41a8a1:	aam    0x83
  41a8a3:	mov    gs,WORD PTR [ebp+0x3a]
  41a8a6:	push   ds
  41a8a7:	loop   0x41a8cb
  41a8a9:	fdivr  QWORD PTR [esi+0x16]
  41a8ac:	jle    0x41a858
  41a8ae:	imul   esi,DWORD PTR [edx+0xdfa8a81],0xffffffca
  41a8b5:	ins    BYTE PTR es:[edi],dx
  41a8b6:	(bad)  
  41a8b8:	mov    dl,0x55
  41a8ba:	mov    bh,0x99
  41a8bc:	inc    esp
  41a8bd:	xor    dh,cl
  41a8bf:	xor    esi,ebx
  41a8c1:	in     al,0x11
  41a8c3:	adc    BYTE PTR [esi],0x2b
  41a8c6:	jb     0x41a93f
  41a8c8:	ficom  WORD PTR [ebp+0x746f7419]
  41a8ce:	jne    0x41a8f8
  41a8d0:	aam    0xb0
  41a8d2:	xchg   edi,eax
  41a8d3:	push   ss
  41a8d4:	imul   ebx,esi,0xffffffd0
  41a8d7:	ret    0x790b
  41a8da:	mov    esp,0x366669a
  41a8df:	and    BYTE PTR [edi],0x94
  41a8e2:	daa    
  41a8e3:	jno    0x41a8e7
  41a8e5:	cld    
  41a8e6:	in     eax,dx
  41a8e7:	mov    esp,0x735331f3
  41a8ec:	xchg   ecx,eax
  41a8ed:	and    edx,DWORD PTR [ecx]
  41a8ef:	pop    ebx
  41a8f0:	xor    eax,0x3a1f3549
  41a8f5:	jge    0x41a8f6
  41a8f7:	mov    cl,BYTE PTR [ebx-0xca53fa9]
  41a8fd:	inc    edi
  41a8fe:	jl     0x41a8b6
  41a900:	sahf   
  41a901:	cmp    ebx,DWORD PTR ds:0x5646fa3c
  41a907:	add    cl,BYTE PTR [ecx-0x75]
  41a90a:	repnz mov ch,0x56
  41a90d:	cmp    dl,BYTE PTR [esi+0x7cc973a1]
  41a913:	pop    es
  41a914:	in     al,dx
  41a915:	leave  
  41a916:	jae    0x41a972
  41a918:	sub    esi,DWORD PTR [eax+0x4c]
  41a91b:	sub    ebp,DWORD PTR [edi]
  41a91d:	stos   BYTE PTR es:[edi],al
  41a91e:	mov    DWORD PTR [esi+eax*8-0x25d4e44f],ecx
  41a925:	in     eax,dx
  41a926:	dec    ebp
  41a927:	shl    bh,1
  41a929:	pop    ds
  41a92a:	leave  
  41a92b:	xlat   BYTE PTR ds:[ebx]
  41a92c:	sub    DWORD PTR [edi+0x6e044df9],edi
  41a932:	inc    esp
  41a933:	pop    ebx
  41a934:	in     eax,dx
  41a935:	jl     0x41a992
  41a937:	xchg   ebx,eax
  41a938:	dec    eax
  41a939:	push   0x3f4c842c
  41a93e:	push   edi
  41a93f:	dec    ebx
  41a940:	and    eax,0xac69f08f
  41a945:	sbb    edx,ebp
  41a947:	inc    ebx
  41a948:	scas   al,BYTE PTR es:[edi]
  41a949:	inc    eax
  41a94a:	es iret 
  41a94c:	jne    0x41a99b
  41a94e:	aas    
  41a94f:	push   ds
  41a950:	loop   0x41a983
  41a952:	(bad)  
  41a953:	imul   eax,DWORD PTR [esi+0x45cc7786],0x47
  41a95a:	rcr    DWORD PTR [edx-0x44b67093],0x40
  41a961:	xor    bl,bh
  41a963:	jb     0x41a967
  41a965:	and    al,0xb3
  41a967:	aas    
  41a968:	sbb    DWORD PTR [ebx-0x3d0fb14c],edi
  41a96e:	call   0xb421050e
  41a973:	stos   BYTE PTR es:[edi],al
  41a974:	mov    edi,DWORD PTR [esp+ecx*1]
  41a977:	pop    esi
  41a978:	sub    edx,DWORD PTR [ebp-0x77]
  41a97b:	mov    al,0xed
  41a97d:	jae    0x41a977
  41a97f:	push   esi
  41a980:	and    BYTE PTR [edx+esi*4-0x4d24060a],dl
  41a987:	add    DWORD PTR [edi-0x5d],ebp
  41a98a:	out    dx,al
  41a98b:	mov    esp,0x69c084cb
  41a990:	outs   dx,DWORD PTR ds:[esi]
  41a991:	jl     0x41a9e0
  41a993:	ds sub al,0x85
  41a996:	add    al,0x8c
  41a998:	cmp    eax,0x6813ec72
  41a99d:	jb     0x41a998
  41a99f:	or     eax,0xde77f1b6
  41a9a4:	mov    dh,0x53
  41a9a6:	jl     0x41aa1c
  41a9a8:	sub    al,0x87
  41a9aa:	sbb    al,0xde
  41a9ac:	call   0x788ad4f3
  41a9b1:	int    0x48
  41a9b3:	sahf   
  41a9b4:	xchg   BYTE PTR [eax+edi*8-0x695d30ba],cl
  41a9bb:	mov    cl,0xbd
  41a9bd:	mov    ecx,DWORD PTR [eax]
  41a9bf:	loopne 0x41a9f1
  41a9c1:	shl    eax,0xae
  41a9c4:	mov    ecx,0x14937162
  41a9c9:	xchg   DWORD PTR es:[ebx-0x6f],eax
  41a9cd:	sbb    edi,edx
  41a9cf:	push   ebp
  41a9d0:	sub    BYTE PTR [eax+0x4f1cdab5],bl
  41a9d6:	mov    dl,0x57
  41a9d8:	dec    edi
  41a9d9:	int    0xe4
  41a9db:	sub    al,0x64
  41a9dd:	sbb    BYTE PTR [edi+0x3b],al
  41a9e0:	dec    esp
  41a9e1:	jmp    0x41a9be
  41a9e3:	cmp    eax,DWORD PTR [edi+0x90eac1f]
  41a9e9:	iret   
  41a9ea:	lds    esp,FWORD PTR [edx+0x774c0090]
  41a9f0:	dec    edx
  41a9f1:	cmp    dl,al
  41a9f3:	jmp    0x8dca:0x8371b13e
  41a9fa:	push   edx
  41a9fb:	rcl    cl,1
  41a9fd:	mov    ds:0x71ed2669,al
  41aa02:	clc    
  41aa03:	add    BYTE PTR [edx-0x32066a59],al
  41aa09:	jbe    0x41aa8a
  41aa0b:	jo     0x41aa05
  41aa0d:	or     bl,ah
  41aa0f:	jg     0x41a998
  41aa11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa12:	inc    ebp
  41aa13:	lods   eax,DWORD PTR ds:[esi]
  41aa14:	add    al,0x7
  41aa16:	sahf   
  41aa17:	mov    edx,0x526236bb
  41aa1c:	in     al,dx
  41aa1d:	xchg   esi,eax
  41aa1e:	div    BYTE PTR [edx-0x34]
  41aa21:	mov    al,ds:0x75a2933d
  41aa26:	lahf   
  41aa27:	mov    ebp,0xf9acb1ee
  41aa2c:	add    eax,0x82b486c6
  41aa31:	out    dx,eax
  41aa32:	mov    DWORD PTR [edi-0x545619a2],0xc9f4ff60
  41aa3c:	frstor [ecx+0xc]
  41aa3f:	ret    0xedea
  41aa42:	arpl   WORD PTR [esi],ax
  41aa44:	inc    ebp
  41aa45:	out    dx,eax
  41aa46:	inc    ecx
  41aa47:	mov    esp,0x5ed97325
  41aa4c:	mov    eax,ds:0xf49f493a
  41aa51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa52:	adc    al,0xdf
  41aa54:	lds    eax,FWORD PTR [esi-0x7819b8c3]
  41aa5a:	jne    0x41aa8d
  41aa5c:	xchg   ebx,eax
  41aa5d:	inc    edx
  41aa5e:	dec    ebp
  41aa5f:	inc    edx
  41aa60:	mov    dl,0x84
  41aa62:	inc    ebp
  41aa63:	dec    ebx
  41aa64:	inc    edx
  41aa65:	enter  0x3497,0xac
  41aa69:	adc    eax,0xb1a2af45
  41aa6e:	push   cs
  41aa6f:	stc    
  41aa70:	sub    al,0x7c
  41aa72:	hlt    
  41aa73:	(bad)  
  41aa74:	repz add DWORD PTR [edx-0x34cef829],esi
  41aa7b:	std    
  41aa7c:	sbb    ch,BYTE PTR [eax+0x6d]
  41aa7f:	sbb    DWORD PTR [edx],ecx
  41aa81:	adc    ch,dl
  41aa83:	jle    0x41aa82
  41aa85:	adc    esi,edx
  41aa87:	add    esp,DWORD PTR [esi-0x23]
  41aa8a:	stos   BYTE PTR es:[edi],al
  41aa8b:	inc    eax
  41aa8c:	retf   0x5260
  41aa8f:	adc    esp,DWORD PTR [eax+eax*1-0x11]
  41aa93:	xchg   BYTE PTR [edx],bh
  41aa95:	dec    ebp
  41aa96:	pop    cx
  41aa98:	repz mov edi,?
  41aa9b:	and    eax,0x41bf48f1
  41aaa0:	out    0x2d,al
  41aaa2:	lea    esi,[edx]
  41aaa4:	leave  
  41aaa5:	inc    ecx
  41aaa6:	test   eax,0xe0f96111
  41aaab:	dec    edi
  41aaac:	inc    ebp
  41aaad:	and    al,0x3a
  41aaaf:	retf   
  41aab0:	fwait
  41aab1:	push   es
  41aab2:	shr    BYTE PTR [ebp+0x58ca918d],0xb3
  41aab9:	(bad)  
  41aaba:	jo     0x41aa93
  41aabc:	pause  
  41aabe:	cmp    al,0x71
  41aac0:	ss sub al,0xec
  41aac3:	xor    al,0x1c
  41aac5:	dec    esp
  41aac6:	(bad)  
  41aac7:	sar    BYTE PTR [edi-0x34],0xbf
  41aacb:	lahf   
  41aacc:	jmp    0x41aaf1
  41aace:	inc    esi
  41aacf:	push   eax
  41aad0:	xchg   ebx,eax
  41aad1:	add    bh,BYTE PTR [ecx]
  41aad3:	imul   BYTE PTR [ecx]
  41aad5:	dec    esp
  41aad6:	dec    esp
  41aad7:	daa    
  41aad8:	dec    esi
  41aad9:	pop    edi
  41aada:	adc    BYTE PTR [edx],cl
  41aadc:	loopne 0x41ab19
  41aade:	sub    ah,BYTE PTR [ecx]
  41aae0:	pushf  
  41aae1:	retf   
  41aae2:	or     al,BYTE PTR [eax+0x34896419]
  41aae8:	cdq    
  41aae9:	or     al,0xc1
  41aaeb:	(bad)  
  41aaec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaed:	jg     0x41ab23
  41aaef:	xchg   ecx,eax
  41aaf0:	les    ebx,FWORD PTR [edi+0x1e]
  41aaf3:	push   edi
  41aaf4:	mov    ah,0xa6
  41aaf6:	int    0x16
  41aaf8:	xor    esi,DWORD PTR [edi+0x2d]
  41aafb:	inc    ecx
  41aafc:	or     eax,0x57c72b05
  41ab01:	daa    
  41ab02:	xor    dh,bh
  41ab04:	outs   dx,DWORD PTR ds:[esi]
  41ab05:	push   0xd10b3465
  41ab0a:	fadd   DWORD PTR [ecx-0x7d]
  41ab0d:	call   FWORD PTR [eax-0x800d7c1]
  41ab13:	push   edx
  41ab14:	icebp  
  41ab15:	scas   eax,DWORD PTR es:[edi]
  41ab16:	xchg   ebp,eax
  41ab17:	ins    DWORD PTR es:[edi],dx
  41ab18:	in     eax,dx
  41ab19:	jecxz  0x41aae1
  41ab1b:	rcr    DWORD PTR [edx+0x16],0xce
  41ab1f:	dec    edi
  41ab20:	add    eax,0x7f3256ba
  41ab25:	pop    ebx
  41ab26:	pop    ecx
  41ab27:	cmp    DWORD PTR [esi-0xefc7bbd],0x2bc0d332
  41ab31:	jo     0x41ab72
  41ab33:	mov    edx,0xdabfb07b
  41ab38:	dec    edi
  41ab39:	cmp    edi,DWORD PTR [edi+esi*8-0x59af9e71]
  41ab40:	in     eax,0x8e
  41ab42:	sbb    eax,0xeaf5be64
  41ab47:	int    0xbf
  41ab49:	mov    cl,0x3f
  41ab4b:	cmp    BYTE PTR [ebx],ah
  41ab4d:	iret   
  41ab4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab4f:	add    ecx,DWORD PTR ds:0x35c56dfe
  41ab55:	dec    esi
  41ab56:	aaa    
  41ab57:	inc    esi
  41ab58:	jge    0x41abab
  41ab5a:	mov    edx,0x7bde06e5
  41ab5f:	mov    esp,0x45c28fdd
  41ab64:	adc    eax,0xb79bd235
  41ab69:	pop    ss
  41ab6a:	sub    dh,BYTE PTR [esi-0x59]
  41ab6d:	mov    ah,0x88
  41ab6f:	push   edi
  41ab70:	push   0x35bded9c
  41ab75:	adc    al,0x9
  41ab77:	arpl   WORD PTR [eax],cx
  41ab79:	add    eax,0x5b22e181
  41ab7e:	pop    ecx
  41ab7f:	xor    cl,ch
  41ab81:	(bad)  [eax-0x3735cdc1]
  41ab87:	mov    esi,DWORD PTR [edi+0x3e]
  41ab8a:	hlt    
  41ab8b:	out    0x94,al
  41ab8d:	ret    0xf9ba
  41ab90:	pop    ecx
  41ab91:	(bad)  
  41ab92:	and    BYTE PTR [ebp-0x61],cl
  41ab95:	xchg   ebx,eax
  41ab96:	pop    ebp
  41ab97:	cmp    eax,0x67a1565a
  41ab9c:	sub    ah,BYTE PTR [eax-0x18]
  41ab9f:	out    dx,eax
  41aba0:	pop    ebp
  41aba1:	and    ch,BYTE PTR [ebp+0x175f5b52]
  41aba7:	(bad)  
  41aba8:	jl     0x41abfe
  41abaa:	dec    eax
  41abab:	xlat   BYTE PTR ds:[ebx]
  41abac:	sbb    bh,dh
  41abae:	popa   
  41abaf:	xchg   edx,eax
  41abb0:	cwde   
  41abb1:	sahf   
  41abb2:	adc    al,BYTE PTR [edi]
  41abb4:	dec    eax
  41abb5:	inc    eax
  41abb6:	pop    ss
  41abb7:	int3   
  41abb8:	sub    al,0xed
  41abba:	lods   al,BYTE PTR ds:[esi]
  41abbb:	pusha  
  41abbc:	popf   
  41abbd:	mov    esi,0xa6865a97
  41abc2:	daa    
  41abc3:	cmp    BYTE PTR [eax-0x29],0xd1
  41abc7:	or     DWORD PTR [ecx],esp
  41abc9:	dec    esi
  41abca:	aas    
  41abcb:	mov    bh,0x13
  41abcd:	lea    esp,[eax-0x2946bec]
  41abd3:	arpl   di,bx
  41abd5:	mov    ebp,0x5171706e
  41abda:	or     esp,DWORD PTR [eax-0xa0f8c70]
  41abe0:	mov    bh,0xbb
  41abe2:	pop    ds
  41abe3:	mov    al,0xc
  41abe5:	dec    edx
  41abe6:	dec    esi
  41abe7:	and    al,0x8a
  41abe9:	imul   BYTE PTR [edx+0x6013b4e3]
  41abef:	pop    ebx
  41abf0:	adc    bh,BYTE PTR [ecx]
  41abf2:	xchg   bh,ch
  41abf4:	mov    eax,ds:0xb5de27cd
  41abf9:	inc    ebx
  41abfa:	jns    0x41abd4
  41abfc:	inc    edx
  41abfd:	push   ebx
  41abfe:	nop
  41abff:	jno    0x41ac5f
  41ac01:	mov    esi,0x32ca6f8a
  41ac06:	sbb    eax,DWORD PTR [edx-0x2e]
  41ac09:	push   ebp
  41ac0a:	xchg   edx,eax
  41ac0b:	jno    0x41ac0d
  41ac0d:	imul   ebx,DWORD PTR [ebp+0x627fb315],0x9d898655
  41ac17:	sub    al,0x36
  41ac19:	aaa    
  41ac1a:	dec    eax
  41ac1b:	jp     0x41ac57
  41ac1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac1e:	cli    
  41ac1f:	push   ebx
  41ac20:	mov    WORD PTR [ebp-0x78293c9b],?
  41ac26:	jnp    0x41ac33
  41ac28:	xchg   ebp,eax
  41ac29:	pop    edx
  41ac2a:	and    BYTE PTR [eax],cl
  41ac2c:	push   ss
  41ac2d:	repnz pop ds
  41ac2f:	jecxz  0x41ac6c
  41ac31:	inc    edx
  41ac32:	cdq    
  41ac33:	sbb    eax,0x1e4a57e1
  41ac38:	push   ss
  41ac39:	sbb    al,0xeb
  41ac3b:	push   0x1b
  41ac3d:	mov    edx,0x1d03144e
  41ac42:	jmp    0x896b15ed
  41ac47:	lahf   
  41ac48:	push   es
  41ac49:	mov    ch,0xd6
  41ac4b:	mov    bl,0x10
  41ac4d:	and    esp,ebx
  41ac4f:	xor    BYTE PTR [esi+eax*1-0x65],bh
  41ac53:	push   ecx
  41ac54:	outs   dx,BYTE PTR ds:[esi]
  41ac55:	jmp    0xabb8:0xdf4261eb
  41ac5c:	fsubr  QWORD PTR [edx*1-0x6657d065]
  41ac63:	shl    BYTE PTR [esi+0x36],0x1c
  41ac67:	imul   eax,DWORD PTR [edx],0x7e
  41ac6a:	in     eax,dx
  41ac6b:	arpl   WORD PTR [eax],cx
  41ac6d:	js     0x41ac41
  41ac6f:	outs   dx,DWORD PTR ds:[esi]
  41ac70:	rcl    esp,0x7c
  41ac73:	jnp    0x41ac8d
  41ac75:	bound  ebx,QWORD PTR [ecx+0x29dc720d]
  41ac7b:	test   DWORD PTR [ecx],esi
  41ac7d:	mov    esp,0xc7a06680
  41ac82:	push   ebp
  41ac83:	pop    ecx
  41ac84:	ret    
  41ac85:	mov    dh,0xed
  41ac87:	push   0x5845bf80
  41ac8c:	cwde   
  41ac8d:	pop    ebp
  41ac8e:	sub    edi,DWORD PTR [edi+0x7f]
  41ac91:	dec    ecx
  41ac92:	hlt    
  41ac93:	or     edx,DWORD PTR [edx-0x2366695d]
  41ac99:	dec    edx
  41ac9a:	xor    eax,0xe0b01443
  41ac9f:	shr    BYTE PTR ss:[ecx+0x3e],0x72
  41aca4:	pop    edi
  41aca5:	test   BYTE PTR [edx-0x48],bl
  41aca8:	jl     0x41acc4
  41acaa:	rcl    DWORD PTR [edi-0x28c59461],0xe6
  41acb1:	das    
  41acb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acb3:	and    cl,BYTE PTR [edi-0x1a64e916]
  41acb9:	pushf  
  41acba:	pop    bx
  41acbc:	jmp    0xdb15:0xa689e191
  41acc3:	pop    ebx
  41acc4:	xchg   DWORD PTR [eax-0x174804a1],esi
  41acca:	(bad)  
  41accb:	int3   
  41accc:	outs   dx,DWORD PTR ds:[esi]
  41accd:	fucomip st,st(4)
  41accf:	push   0x6f823ee2
  41acd4:	(bad)  
  41acd5:	nop
  41acd6:	enter  0xb528,0x89
  41acda:	mov    ah,0x49
  41acdc:	xchg   DWORD PTR [edx],edi
  41acde:	clc    
  41acdf:	xor    DWORD PTR [bx+di-0x77],0x5f
  41ace4:	stos   BYTE PTR es:[edi],al
  41ace5:	push   edx
  41ace6:	sbb    BYTE PTR [ebx-0x58],0x63
  41acea:	jno    0x41acd4
  41acec:	pop    ss
  41aced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acee:	ins    DWORD PTR es:[edi],dx
  41acef:	in     al,dx
  41acf0:	inc    eax
  41acf1:	pusha  
  41acf2:	cs xor ebp,0xdd2119ca
  41acf9:	push   ebx
  41acfa:	or     esp,DWORD PTR [esi-0x3a201d9e]
  41ad00:	stc    
  41ad01:	in     al,dx
  41ad02:	and    DWORD PTR [ecx],esp
  41ad04:	cld    
  41ad05:	out    dx,eax
  41ad06:	pop    ebp
  41ad07:	push   esp
  41ad08:	xchg   esi,eax
  41ad09:	pop    eax
  41ad0a:	fcomp  QWORD PTR [ebx+0x75]
  41ad0d:	xchg   BYTE PTR [ebp-0x53ecb4ab],ah
  41ad13:	in     eax,dx
  41ad14:	jmp    0xf32e:0xbdb99323
  41ad1b:	cmp    al,0x7d
  41ad1d:	inc    esi
  41ad1e:	es jmp 0xbbf4:0xf03ca0e4
  41ad26:	pop    ax
  41ad28:	add    WORD PTR [edx-0x66a4f63f],bp
  41ad2f:	repnz cs out dx,al
  41ad32:	in     eax,dx
  41ad33:	adc    al,BYTE PTR [ebx+0x43]
  41ad36:	push   cs
  41ad37:	adc    ah,BYTE PTR [esi+0xeab2400]
  41ad3d:	jb     0x41acbf
  41ad3f:	int3   
  41ad40:	cld    
  41ad41:	test   ebx,ecx
  41ad43:	adc    DWORD PTR [eax-0x584310d7],0xccc241fa
  41ad4d:	test   eax,0x57217dce
  41ad52:	pop    ecx
  41ad53:	jp     0x41ad67
  41ad55:	inc    esi
  41ad56:	mov    edx,0x68acde2b
  41ad5b:	aam    0xf0
  41ad5d:	into   
  41ad5e:	call   0xf0c520f7
  41ad63:	pop    ebx
  41ad64:	sub    edx,edx
  41ad66:	ins    BYTE PTR es:[edi],dx
  41ad67:	push   ebx
  41ad68:	push   esi
  41ad69:	mov    al,ds:0x850b858b
  41ad6e:	ins    DWORD PTR es:[edi],dx
  41ad6f:	mov    dl,BYTE PTR [ecx-0x33]
  41ad72:	push   ss
  41ad73:	cmp    ebp,ecx
  41ad75:	out    dx,eax
  41ad76:	enter  0x5238,0xd7
  41ad7a:	js     0x41ad31
  41ad7c:	mov    bl,0xe3
  41ad7e:	xchg   edi,eax
  41ad7f:	out    dx,eax
  41ad80:	mov    dh,0xb
  41ad82:	xchg   BYTE PTR [eax],ah
  41ad84:	sbb    eax,0xb1c7599f
  41ad89:	push   ecx
  41ad8a:	push   ds
  41ad8b:	mov    al,0x57
  41ad8d:	adc    al,0x8e
  41ad8f:	dec    ebx
  41ad90:	std    
  41ad91:	stos   DWORD PTR es:[edi],eax
  41ad92:	jle    0x41ae08
  41ad94:	lods   eax,DWORD PTR ds:[esi]
  41ad95:	sub    DWORD PTR [ebx-0x1],edi
  41ad98:	cmc    
  41ad99:	stc    
  41ad9a:	test   eax,0xc241366d
  41ad9f:	fxch   st(3)
  41ada1:	arpl   WORD PTR [ecx+0x249dbf8b],bx
  41ada7:	mov    esi,DWORD PTR [eax+0x4a]
  41adaa:	out    dx,al
  41adab:	or     dh,BYTE PTR [esp+eax*4-0x5a]
  41adaf:	bound  esp,QWORD PTR [ebx-0x7c5975b7]
  41adb5:	pop    edi
  41adb6:	test   DWORD PTR [edx],esp
  41adb8:	call   0xf570:0xb1972655
  41adbf:	pop    eax
  41adc0:	xchg   ebp,eax
  41adc1:	cld    
  41adc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc3:	sar    edx,1
  41adc5:	cwde   
  41adc6:	jecxz  0x41adcf
  41adc8:	mov    dl,0xa6
  41adca:	bound  esi,QWORD PTR [edx-0x356d75ea]
  41add0:	(bad)  
  41add2:	push   ebx
  41add3:	stos   DWORD PTR es:[edi],eax
  41add4:	test   al,0x48
  41add6:	repz sar dh,cl
  41add9:	(bad)  
  41adda:	xor    ch,dl
  41addc:	or     DWORD PTR [ebp+0x14],ebp
  41addf:	(bad)  [edx+0x3281743e]
  41ade5:	xchg   ebp,eax
  41ade6:	rol    BYTE PTR [esi+0x50],0xa7
  41adea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adeb:	in     al,dx
  41adec:	mov    bh,0x29
  41adee:	jo     0x41ae35
  41adf0:	and    esi,DWORD PTR [edi]
  41adf2:	fmul   DWORD PTR [eax-0x6b]
  41adf5:	push   edi
  41adf6:	mov    edi,0xa433240d
  41adfb:	mov    eax,ds:0xb3750207
  41ae00:	sub    esi,DWORD PTR [ecx+0x437b3fc2]
  41ae06:	jne    0x41adff
  41ae08:	sbb    esp,DWORD PTR ds:0xa6fb7506
  41ae0e:	les    esi,FWORD PTR [ebx+0x1dc85b8e]
  41ae14:	adc    edi,DWORD PTR [edx+0x2eb82d3a]
  41ae1a:	in     al,dx
  41ae1b:	inc    edi
  41ae1c:	pop    ss
  41ae1d:	mov    esi,0x61dfe529
  41ae22:	or     al,0xcf
  41ae24:	imul   edx,DWORD PTR [eax-0x464ceed5],0xffffff93
  41ae2b:	jmp    0x49bd0e62
  41ae30:	and    esp,DWORD PTR [ecx]
  41ae32:	out    0x9b,eax
  41ae34:	mov    cl,0xb3
  41ae36:	iret   
  41ae37:	xchg   ebp,eax
  41ae38:	out    dx,eax
  41ae39:	mov    DWORD PTR [ebp+0x8],edx
  41ae3c:	mov    edx,DWORD PTR [ebp+0x8]
  41ae3f:	mov    ebx,DWORD PTR [ebp-0x58]
  41ae42:	add    edx,0x5708f8
  41ae48:	imul   edx,ebx
  41ae4b:	mov    DWORD PTR [ebp-0x58],edx
  41ae4e:	mov    edx,DWORD PTR [ebp+0x8]
  41ae51:	mov    ebx,DWORD PTR [ebp-0x54]
  41ae54:	add    edx,0x64f8da
  41ae5a:	or     edx,ebx
  41ae5c:	mov    DWORD PTR [ebp-0x54],edx
  41ae5f:	mov    edx,DWORD PTR [ebp+0x8]
  41ae62:	mov    ebx,DWORD PTR [ebp-0x50]
  41ae65:	add    edx,ecx
  41ae67:	xor    edx,ebx
  41ae69:	mov    DWORD PTR [ebp-0x50],edx
  41ae6c:	mov    edx,DWORD PTR [ebp+0x8]
  41ae6f:	mov    ebx,DWORD PTR [ebp-0x4c]
  41ae72:	add    edx,edi
  41ae74:	and    edx,ebx
  41ae76:	mov    DWORD PTR [ebp-0x4c],edx
  41ae79:	mov    edx,DWORD PTR [ebp+0x8]
  41ae7c:	mov    ebx,DWORD PTR [ebp-0x48]
  41ae7f:	lea    edx,[ebx+edx*1+0x241fc1f]
  41ae86:	mov    DWORD PTR [ebp-0x48],edx
  41ae89:	mov    edx,DWORD PTR [ebp+0x8]
  41ae8c:	mov    ebx,0xfa5e15e2
  41ae91:	sub    ebx,edx
  41ae93:	add    ebx,DWORD PTR [ebp-0x44]
  41ae96:	mov    DWORD PTR [ebp-0x44],ebx
  41ae99:	mov    edx,DWORD PTR [ebp+0x8]
  41ae9c:	xor    edx,eax
  41ae9e:	add    edx,esi
  41aea0:	jne    0x418aa0
  41aea6:	mov    edx,DWORD PTR [ebp-0x10]
  41aea9:	mov    DWORD PTR [ebp+0x8],edx
  41aeac:	jmp    0x41f633
  41aeb1:	mov    edx,DWORD PTR [ebp+0x8]
  41aeb4:	mov    ebx,DWORD PTR [ebp-0x8]
  41aeb7:	xor    edx,eax
  41aeb9:	xor    ebx,eax
  41aebb:	sub    edx,ebx
  41aebd:	sub    edx,esi
  41aebf:	xor    edx,eax
  41aec1:	mov    DWORD PTR [ebp+0x8],edx
  41aec4:	mov    edx,DWORD PTR [ebp+0x8]
  41aec7:	mov    ebx,DWORD PTR [ebp-0x58]
  41aeca:	add    edx,0x5708f8
  41aed0:	imul   edx,ebx
  41aed3:	mov    DWORD PTR [ebp-0x58],edx
  41aed6:	mov    edx,DWORD PTR [ebp+0x8]
  41aed9:	mov    ebx,DWORD PTR [ebp-0x54]
  41aedc:	add    edx,0x64f8da
  41aee2:	or     edx,ebx
  41aee4:	mov    DWORD PTR [ebp-0x54],edx
  41aee7:	mov    edx,DWORD PTR [ebp+0x8]
  41aeea:	jmp    0x41d273
  41aeef:	out    0x8c,al
  41aef1:	dec    eax
  41aef2:	mov    ch,0xf0
  41aef4:	jne    0x41aee1
  41aef6:	jae    0x41aebf
  41aef8:	or     al,0x4b
  41aefa:	cdq    
  41aefb:	dec    esp
  41aefc:	call   0x7a79:0x186998b7
  41af03:	push   es
  41af04:	pop    edi
  41af05:	jp     0x41af81
  41af07:	xchg   esp,eax
  41af08:	inc    esi
  41af09:	(bad)  
  41af0a:	sub    esi,DWORD PTR [esp+ebp*1]
  41af0d:	mov    ah,0xd6
  41af0f:	scas   eax,DWORD PTR es:[edi]
  41af10:	mov    al,ds:0xa45dbb6a
  41af15:	ret    0xde6a
  41af18:	sub    eax,0xc82ad0f
  41af1d:	xchg   edi,eax
  41af1e:	mov    al,ds:0xe73fcda1
  41af23:	and    BYTE PTR [edi+0x6065e91e],0xa4
  41af2a:	sbb    DWORD PTR ds:0xd08d3f7a,esp
  41af30:	scas   eax,DWORD PTR es:[edi]
  41af31:	cld    
  41af32:	xor    ch,bh
  41af34:	xor    ebx,ebp
  41af36:	outs   dx,BYTE PTR ds:[esi]
  41af37:	xchg   ebp,eax
  41af38:	inc    edi
  41af39:	xchg   DWORD PTR [ebx],edx
  41af3b:	pop    esi
  41af3c:	or     DWORD PTR [ebx-0x471aaa29],ebx
  41af42:	adc    eax,DWORD PTR ds:0x6d1ab914
  41af48:	mov    ebx,edx
  41af4a:	repnz outs dx,DWORD PTR ds:[esi]
  41af4c:	and    edi,DWORD PTR [eax]
  41af4e:	popa   
  41af4f:	sahf   
  41af50:	dec    ecx
  41af51:	jmp    0x38246eaa
  41af56:	cmp    al,0xa9
  41af58:	into   
  41af59:	mov    ch,0x17
  41af5b:	sbb    ecx,esi
  41af5d:	outs   dx,BYTE PTR ds:[esi]
  41af5e:	mov    esi,0x2484231a
  41af63:	xchg   ecx,eax
  41af64:	into   
  41af65:	jg     0x41afa0
  41af67:	scas   al,BYTE PTR es:[edi]
  41af68:	fsub   st,st(0)
  41af6a:	aas    
  41af6b:	pop    ebx
  41af6c:	test   BYTE PTR [esi+edi*2+0x70],ah
  41af70:	icebp  
  41af71:	js     0x41af6b
  41af73:	(bad)  
  41af74:	rcr    BYTE PTR [edx+0x53a362b2],1
  41af7a:	test   BYTE PTR [esi+0x7dded9c5],ch
  41af80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af81:	adc    DWORD PTR [esi+0x9e64764],eax
  41af87:	mov    WORD PTR [edi+0x7e],ds
  41af8a:	xchg   edi,eax
  41af8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af8c:	cmc    
  41af8d:	std    
  41af8e:	lock mov ds:0xea1b4675,al
  41af94:	pop    ds
  41af95:	xor    al,0x25
  41af97:	nop
  41af98:	push   ds
  41af99:	retf   
  41af9a:	sub    al,BYTE PTR [edx+0x3f]
  41af9d:	mov    DWORD PTR [ecx],esp
  41af9f:	sbb    edi,0xdee2e5d6
  41afa5:	jge    0x41afdc
  41afa7:	lds    eax,FWORD PTR [eax]
  41afa9:	xor    eax,0xf12dbea6
  41afae:	cmp    eax,0xfcb2de2e
  41afb3:	pop    edi
  41afb4:	sub    al,0x2f
  41afb6:	sti    
  41afb7:	ins    BYTE PTR es:[edi],dx
  41afb8:	mov    dh,0x6b
  41afba:	mov    ds:0x7baee557,eax
  41afbf:	enter  0xfdf1,0x80
  41afc3:	and    eax,0x96da2cbe
  41afc8:	xchg   esp,eax
  41afc9:	lods   al,BYTE PTR ds:[esi]
  41afca:	xchg   BYTE PTR [ebx],al
  41afcc:	xchg   esp,eax
  41afcd:	sbb    bl,BYTE PTR [edi+0x48]
  41afd0:	lods   eax,DWORD PTR ds:[esi]
  41afd1:	xlat   BYTE PTR ds:[ebx]
  41afd2:	sbb    ax,0x8e8a
  41afd6:	sbb    DWORD PTR [ebx],ebx
  41afd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd9:	shr    BYTE PTR [eax+0x64],cl
  41afdc:	and    eax,0x959bce62
  41afe1:	jmp    0xff63:0xadede0bf
  41afe8:	popf   
  41afe9:	ret    
  41afea:	xor    BYTE PTR [esi],cl
  41afec:	and    DWORD PTR [edx-0xfe97ebb],ebp
  41aff2:	fldenv ds:0xddf0b63a
  41aff8:	icebp  
  41aff9:	retf   
  41affa:	(bad)  
  41affc:	and    al,0x97
  41affe:	push   eax
  41afff:	xchg   esi,eax
  41b000:	stos   DWORD PTR es:[edi],eax
  41b001:	xlat   BYTE PTR ds:[ebx]
  41b002:	fiadd  WORD PTR ds:[edx+0x77b215da]
  41b009:	sub    BYTE PTR [ecx-0x37],dh
  41b00c:	cli    
  41b00d:	mov    al,0x83
  41b00f:	lods   al,BYTE PTR fs:[esi]
  41b011:	push   eax
  41b012:	sbb    eax,0x8403cf
  41b017:	imul   edx,edi,0x44
  41b01a:	out    0x62,al
  41b01c:	mov    cs,WORD PTR [ebx-0x51]
  41b01f:	pop    ebx
  41b020:	add    eax,0xc8058a54
  41b025:	adc    edx,DWORD PTR [edi+ecx*4]
  41b028:	xchg   edx,eax
  41b029:	inc    ebp
  41b02a:	daa    
  41b02b:	scas   eax,DWORD PTR es:[edi]
  41b02c:	sub    eax,0x366862cd
  41b031:	push   es
  41b032:	les    edi,FWORD PTR [edx]
  41b034:	jbe    0x41afe9
  41b036:	mov    eax,ds:0x696cd342
  41b03b:	mov    ds:0x72a3d903,eax
  41b040:	mov    BYTE PTR [edx-0x17],dh
  41b043:	xchg   ecx,eax
  41b044:	ins    DWORD PTR es:[edi],dx
  41b045:	push   esi
  41b047:	(bad)  
  41b048:	inc    ah
  41b04a:	and    ch,BYTE PTR [ebx+0x2145436e]
  41b050:	mov    ebp,0xe25b55f4
  41b055:	ins    DWORD PTR es:[edi],dx
  41b056:	inc    eax
  41b057:	jle    0x41b0b7
  41b059:	sbb    eax,0xce93f483
  41b05e:	or     eax,0x4ee6f3d2
  41b063:	jo     0x41b0d2
  41b065:	arpl   WORD PTR fs:[ebp+0xe34c589],sp
  41b06c:	fdivr  DWORD PTR [esi]
  41b06e:	pop    ebx
  41b06f:	icebp  
  41b070:	sub    al,0xe4
  41b072:	call   0x2911be67
  41b077:	push   eax
  41b078:	in     eax,0x8b
  41b07a:	icebp  
  41b07b:	lahf   
  41b07c:	fstp   DWORD PTR [edi]
  41b07e:	stos   BYTE PTR es:[edi],al
  41b07f:	sub    eax,0x37fb131b
  41b084:	repnz xor al,0x10
  41b087:	mov    esp,0x13c21da2
  41b08c:	mov    dh,0x50
  41b08e:	xor    esp,DWORD PTR [edx]
  41b090:	aaa    
  41b091:	dec    edx
  41b092:	inc    edi
  41b093:	inc    ebp
  41b094:	pusha  
  41b095:	dec    ebp
  41b096:	xchg   ebp,eax
  41b097:	pusha  
  41b098:	xor    edx,ecx
  41b09a:	das    
  41b09b:	xchg   edx,eax
  41b09c:	xchg   edx,eax
  41b09d:	adc    BYTE PTR [ebp+ebp*2-0x6d1ba82a],ah
  41b0a4:	test   BYTE PTR [edx*2+0x7e3c24ee],dh
  41b0ab:	and    eax,0x6a67c2b5
  41b0b0:	jg     0x41b0c9
  41b0b2:	retf   
  41b0b3:	jmp    0x3a7e:0x54d591b8
  41b0ba:	lahf   
  41b0bb:	imul   edx,DWORD PTR [edx+0x7afcf1a5],0x9d319272
  41b0c5:	outs   dx,DWORD PTR ds:[esi]
  41b0c6:	add    eax,edx
  41b0c8:	ret    0xf930
  41b0cb:	lea    eax,[ecx+0x5f]
  41b0ce:	clc    
  41b0cf:	psrlq  mm7,mm3
  41b0d2:	or     dh,BYTE PTR [eax+0x489cd06]
  41b0d8:	add    al,0xcc
  41b0da:	aam    0x6c
  41b0dc:	inc    esp
  41b0dd:	pop    ecx
  41b0de:	mov    ds:0x53db26cf,eax
  41b0e3:	dec    ebx
  41b0e4:	pcmpgtw mm3,QWORD PTR [ebp-0x62]
  41b0e8:	sahf   
  41b0e9:	jecxz  0x41b166
  41b0eb:	test   edx,ecx
  41b0ed:	cmc    
  41b0ee:	arpl   WORD PTR [ebp+0x43],cx
  41b0f1:	call   0x253811d2
  41b0f6:	test   al,0x8e
  41b0f8:	push   ecx
  41b0f9:	xlat   BYTE PTR ds:[ebx]
  41b0fa:	int3   
  41b0fb:	xor    dh,BYTE PTR [ebx]
  41b0fd:	jmp    FWORD PTR [ecx+ebx*1+0x62]
  41b101:	pop    ebp
  41b102:	or     BYTE PTR [esi],al
  41b104:	push   ecx
  41b105:	push   ds
  41b106:	stos   BYTE PTR es:[edi],al
  41b107:	ret    0xacf3
  41b10a:	pop    edi
  41b10b:	xor    esp,0xffffff9e
  41b10e:	add    DWORD PTR [edi],edx
  41b110:	adc    eax,0xc95a35da
  41b115:	inc    ecx
  41b116:	mov    eax,ds:0x5adf6f54
  41b11b:	fstp   st(4)
  41b11d:	inc    eax
  41b11e:	push   esp
  41b11f:	dec    ebx
  41b120:	std    
  41b121:	mov    ?,WORD PTR [ecx+ebp*2-0x20068e3c]
  41b128:	out    0x77,eax
  41b12a:	es push esp
  41b12c:	pop    ebx
  41b12d:	pop    esp
  41b12e:	mov    DWORD PTR [edi-0x954af72],eax
  41b134:	fnstcw WORD PTR [ebp-0x23]
  41b137:	xor    eax,0x9a00ed71
  41b13c:	xor    eax,0x6ed9029d
  41b141:	jns    0x41b148
  41b143:	imul   esi,DWORD PTR [edx-0x24],0xffffffcc
  41b147:	inc    edx
  41b148:	ficomp WORD PTR [esi+0x441dc704]
  41b14e:	ins    DWORD PTR es:[edi],dx
  41b14f:	cdq    
  41b150:	arpl   cx,sp
  41b152:	jb     0x41b145
  41b154:	mov    DWORD PTR [ebx],edx
  41b156:	pop    edx
  41b157:	or     DWORD PTR [ebx-0x7],edi
  41b15a:	mov    edi,0x1e3f7a7f
  41b15f:	mov    edi,0x233f5ae6
  41b164:	inc    eax
  41b165:	and    BYTE PTR [ecx-0x309ad3e9],ch
  41b16b:	xchg   ebx,eax
  41b16c:	xor    al,0x86
  41b16e:	sbb    ch,ah
  41b170:	out    dx,al
  41b171:	xor    ebp,edi
  41b173:	or     BYTE PTR [ecx-0x26f79d8e],0x5d
  41b17a:	ins    DWORD PTR es:[edi],dx
  41b17b:	addr16 jo 0x41b13e
  41b17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b17f:	mov    ds:0xca98ed9e,al
  41b184:	mov    ebx,0xca185d42
  41b189:	cmp    BYTE PTR [edx+0x79296b64],bl
  41b18f:	cmp    BYTE PTR [esi],dl
  41b191:	mov    bh,BYTE PTR [edx+0x6d]
  41b194:	ret    0xb6c3
  41b197:	aas    
  41b198:	imul   ebx,edi,0x543d21ac
  41b19e:	xlat   BYTE PTR ds:[ebx]
  41b19f:	lods   eax,DWORD PTR ds:[esi]
  41b1a0:	iret   
  41b1a1:	or     eax,0x71237716
  41b1a6:	jecxz  0x41b15d
  41b1a8:	addr16 test eax,0xf686fd87
  41b1ae:	repz push edx
  41b1b0:	cmp    al,0x12
  41b1b2:	mov    dl,0x8f
  41b1b4:	pusha  
  41b1b5:	mov    al,0xbc
  41b1b7:	jns    0x41b170
  41b1b9:	add    ebx,DWORD PTR [esi-0x75194e30]
  41b1bf:	xchg   DWORD PTR [ebx-0x63],esp
  41b1c2:	mov    ds:0x8d1ec172,eax
  41b1c7:	xor    ch,BYTE PTR [edi-0x7c83fc22]
  41b1cd:	sbb    ch,BYTE PTR [edx+0x63]
  41b1d0:	sbb    bl,ch
  41b1d2:	mov    edx,0x890bbb8c
  41b1d7:	and    eax,0xc0e5a66f
  41b1dc:	pop    DWORD PTR [ecx+0x4a]
  41b1df:	mov    bh,0x65
  41b1e1:	jecxz  0x41b1e9
  41b1e3:	rol    DWORD PTR [ebx+eiz*8],cl
  41b1e6:	outs   dx,DWORD PTR ds:[esi]
  41b1e7:	cmc    
  41b1e8:	or     BYTE PTR [ebp-0x58c3697e],dh
  41b1ee:	dec    esi
  41b1ef:	add    DWORD PTR [ebp+0x20b49a55],eax
  41b1f5:	lea    ax,[ecx-0x6e0c6854]
  41b1fc:	outs   dx,BYTE PTR ds:[esi]
  41b1fd:	sahf   
  41b1fe:	xor    BYTE PTR [esi-0x42],dh
  41b201:	cmp    eax,0x1558320d
  41b206:	mov    ah,0xe0
  41b208:	call   0xfe6:0xce40f90b
  41b20f:	mov    ds:0xefd2bf36,eax
  41b214:	fcomp  QWORD PTR [edi-0x63]
  41b217:	retf   
  41b218:	js     0x41b24a
  41b21a:	out    dx,al
  41b21b:	push   ds
  41b21c:	shl    eax,cl
  41b21e:	sbb    eax,0x28c943e2
  41b223:	push   es
  41b224:	mov    bh,BYTE PTR [eax+0x2e1cb3ca]
  41b22a:	cmp    eax,0xea84f970
  41b22f:	cmp    eax,0xe30c3187
  41b234:	dec    ecx
  41b235:	stc    
  41b236:	push   es
  41b237:	jo     0x41b20e
  41b239:	jb     0x41b29f
  41b23b:	and    cl,bh
  41b23d:	mul    DWORD PTR [ecx+ebp*4+0x29ebb978]
  41b244:	leave  
  41b245:	leave  
  41b246:	fnstcw WORD PTR [ecx]
  41b248:	add    al,BYTE PTR [ebx]
  41b24a:	ret    0x7548
  41b24d:	sub    edi,DWORD PTR cs:[ebx+eiz*2-0x74]
  41b252:	dec    edx
  41b253:	cwde   
  41b254:	adc    esi,DWORD PTR [ecx]
  41b256:	sub    eax,0x11bfbb07
  41b25b:	sahf   
  41b25c:	sub    edx,ebx
  41b25e:	mov    edx,0xcac6f37f
  41b263:	inc    ebx
  41b264:	ds stos BYTE PTR es:[edi],al
  41b266:	sbb    BYTE PTR [edi-0x6c],0xc1
  41b26a:	test   al,0xe1
  41b26c:	mov    esi,0x74c3b481
  41b271:	mov    edi,0x9bcd2043
  41b276:	push   DWORD PTR [esi+0x2b]
  41b279:	jns    0x41b250
  41b27b:	adc    edi,DWORD PTR [ebx]
  41b27d:	adc    DWORD PTR ds:0x27826738,edi
  41b283:	mov    ah,0x32
  41b285:	sbb    esi,DWORD PTR [ecx]
  41b287:	cmp    DWORD PTR [edx-0x39],ecx
  41b28a:	lds    esp,FWORD PTR [edi+0x50]
  41b28d:	jl     0x41b21b
  41b28f:	pop    edi
  41b290:	cmp    cl,BYTE PTR ds:0x6d690b9a
  41b296:	sbb    ebp,DWORD PTR [esi+0x6d]
  41b299:	mov    es,WORD PTR [eax+0x67d3918b]
  41b29f:	lods   al,BYTE PTR ds:[esi]
  41b2a0:	mov    ds:0x30a011fe,eax
  41b2a5:	or     eax,0xe603a972
  41b2aa:	jno    0x41b30b
  41b2ac:	or     eax,0xe8d7e8ed
  41b2b1:	bound  ecx,QWORD PTR [edi]
  41b2b3:	push   esp
  41b2b4:	dec    ecx
  41b2b5:	mov    eax,0xa92c1be7
  41b2ba:	mov    bh,0xd3
  41b2bc:	sahf   
  41b2bd:	sahf   
  41b2be:	or     esp,DWORD PTR [ebx-0x7ff09e99]
  41b2c4:	jle    0x41b289
  41b2c6:	inc    eax
  41b2c7:	mov    bh,0x2e
  41b2c9:	div    BYTE PTR [ecx+0x4affe19]
  41b2cf:	adc    DWORD PTR [ebp+0xf],ebp
  41b2d2:	mov    esi,DWORD PTR [esi]
  41b2d4:	fwait
  41b2d5:	jno    0x41b267
  41b2d7:	mov    DWORD PTR [eax],eax
  41b2d9:	pop    eax
  41b2da:	push   ecx
  41b2db:	xchg   ebp,eax
  41b2dc:	sub    cl,ah
  41b2de:	inc    esp
  41b2df:	mov    esi,0x7610dfb1
  41b2e4:	iret   
  41b2e5:	push   ebp
  41b2e6:	and    bh,BYTE PTR [ebp+ebp*8-0x17]
  41b2ea:	adc    ch,dl
  41b2ec:	ja     0x41b325
  41b2ee:	add    edx,DWORD PTR [ebx]
  41b2f0:	mov    ss,WORD PTR [edi+0x46]
  41b2f3:	or     BYTE PTR [ecx],cl
  41b2f5:	cmp    DWORD PTR [edx+ecx*8+0x65b4bbeb],esi
  41b2fc:	daa    
  41b2fd:	lods   al,BYTE PTR ds:[esi]
  41b2fe:	popf   
  41b2ff:	mov    bl,0xd2
  41b301:	hlt    
  41b302:	xchg   ebx,eax
  41b303:	inc    edi
  41b304:	scas   eax,DWORD PTR es:[edi]
  41b305:	pop    esi
  41b306:	in     al,0x7
  41b308:	and    ch,dh
  41b30a:	jo     0x41b2b4
  41b30c:	adc    ebx,DWORD PTR [edx+0x55fb4916]
  41b312:	sbb    eax,0xacfe53d8
  41b317:	xor    al,0x22
  41b319:	stos   DWORD PTR es:[edi],eax
  41b31a:	push   ss
  41b31b:	mov    ebx,0x64173539
  41b320:	shl    esp,0x2e
  41b323:	fisubr DWORD PTR [ecx+0x1a]
  41b326:	ins    DWORD PTR es:[edi],dx
  41b327:	stos   BYTE PTR es:[edi],al
  41b328:	xor    eax,0xa3666560
  41b32d:	gs pushf 
  41b32f:	loope  0x41b2c5
  41b331:	ja     0x41b32c
  41b333:	or     al,0xa4
  41b335:	shl    DWORD PTR [ebp-0x3],cl
  41b338:	repnz mov dl,0xd
  41b33b:	mov    dh,0xa3
  41b33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b33e:	out    0x66,eax
  41b340:	sub    edx,edi
  41b342:	adc    BYTE PTR [edx+0x201e4d95],dl
  41b348:	mov    esp,0x92d7cf00
  41b34d:	push   edi
  41b34e:	out    0xaa,al
  41b350:	outs   dx,BYTE PTR ds:[esi]
  41b351:	dec    edi
  41b352:	hlt    
  41b353:	jno    0x41b306
  41b355:	ja     0x41b3b6
  41b357:	mov    ah,BYTE PTR [ecx-0x43]
  41b35a:	xor    BYTE PTR [eax],0x20
  41b35d:	sub    BYTE PTR [ebx+0x13],0x71
  41b361:	addr16 and al,0x3d
  41b364:	in     al,dx
  41b365:	inc    ebp
  41b366:	inc    eax
  41b367:	stos   DWORD PTR es:[edi],eax
  41b368:	ret    0x3306
  41b36b:	and    eax,0x848a3129
  41b370:	or     DWORD PTR [edx],edi
  41b372:	les    ebx,FWORD PTR [edi+ebp*2-0x2d]
  41b376:	sub    eax,0xc2773370
  41b37b:	(bad)  
  41b37c:	retf   
  41b37d:	pop    esi
  41b37e:	in     eax,0xcf
  41b380:	das    
  41b381:	xchg   edi,eax
  41b382:	push   esi
  41b383:	or     eax,0x9f82a7d3
  41b388:	xchg   DWORD PTR [ecx-0x5d],edx
  41b38b:	or     dl,cl
  41b38d:	inc    ebp
  41b38e:	pop    esp
  41b38f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b391:	test   al,0x91
  41b393:	out    0x94,eax
  41b395:	sti    
  41b396:	xchg   BYTE PTR [eax],ch
  41b398:	push   ds
  41b399:	outs   dx,DWORD PTR ds:[esi]
  41b39a:	mov    ch,0xdc
  41b39c:	in     eax,0x7f
  41b39e:	ds retf 0xf336
  41b3a2:	cmp    DWORD PTR [eax-0x65],0xbccdc87f
  41b3a9:	ror    DWORD PTR [ebx-0x53],1
  41b3ac:	push   ebp
  41b3ad:	inc    edx
  41b3ae:	mov    eax,0xecf00a7d
  41b3b3:	retf   0x80f4
  41b3b6:	scas   eax,DWORD PTR es:[edi]
  41b3b7:	stos   DWORD PTR es:[edi],eax
  41b3b8:	loopne 0x41b40a
  41b3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3bb:	xor    bh,ch
  41b3bd:	stos   BYTE PTR es:[edi],al
  41b3be:	inc    edi
  41b3bf:	sub    al,0x32
  41b3c1:	icebp  
  41b3c2:	and    ebx,eax
  41b3c4:	xchg   DWORD PTR [ebx-0x25e4f27],ecx
  41b3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3cb:	test   eax,0xb2a53c06
  41b3d0:	popf   
  41b3d1:	outs   dx,DWORD PTR ds:[esi]
  41b3d2:	in     eax,dx
  41b3d3:	xor    eax,0x6790ba51
  41b3d8:	jle    0x41b3bd
  41b3da:	xor    cl,al
  41b3dc:	dec    esp
  41b3dd:	int    0x56
  41b3df:	test   eax,0xa3161e1
  41b3e4:	js     0x41b3fe
  41b3e6:	fisttp DWORD PTR [eax]
  41b3e8:	fnstsw WORD PTR [ebx+0x7181a0a3]
  41b3ee:	jnp    0x41b46f
  41b3f0:	ins    BYTE PTR es:[edi],dx
  41b3f1:	mov    al,ds:0x6677d13a
  41b3f6:	scas   al,BYTE PTR es:[edi]
  41b3f7:	cmp    eax,0xc67a5310
  41b3fc:	mov    bl,0xb4
  41b3fe:	mov    eax,fs:0x49dd8055
  41b404:	daa    
  41b405:	mov    BYTE PTR [esi+0x6af00ebb],dh
  41b40b:	xor    dh,al
  41b40d:	or     ch,BYTE PTR [eax]
  41b40f:	cmp    BYTE PTR [ecx],dh
  41b411:	popa   
  41b412:	sub    ebx,eax
  41b414:	adc    al,0x90
  41b416:	int    0x75
  41b418:	sahf   
  41b419:	popf   
  41b41a:	jmp    0xb9c0:0x3a5d82a6
  41b421:	sahf   
  41b422:	imul   ebp,DWORD PTR [edi+0x26],0x7c
  41b426:	push   eax
  41b427:	scas   eax,DWORD PTR es:[edi]
  41b428:	mov    eax,ds:0xd558756d
  41b42d:	(bad)  
  41b42e:	out    0x1f,al
  41b430:	outs   dx,DWORD PTR ds:[esi]
  41b431:	sahf   
  41b432:	mov    ss,ebx
  41b434:	aaa    
  41b435:	jp     0x41b43a
  41b437:	sub    DWORD PTR ds:0x978636bd,ecx
  41b43d:	jne    0x41b406
  41b43f:	pop    edx
  41b440:	mov    ecx,0xffe19b32
  41b445:	sub    al,0x2c
  41b447:	push   es
  41b448:	jae    0x41b4a5
  41b44a:	(bad)  
  41b44b:	sbb    edx,DWORD PTR [ebx-0x349a3d5b]
  41b451:	dec    ecx
  41b452:	test   eax,0xdb32329f
  41b457:	sahf   
  41b458:	pop    esp
  41b459:	dec    esp
  41b45a:	xor    DWORD PTR [eax-0x48],ebx
  41b45d:	out    0x92,eax
  41b45f:	and    al,0x1a
  41b461:	xchg   esp,eax
  41b462:	cmp    al,0x51
  41b464:	xlat   BYTE PTR ds:[ebx]
  41b465:	mov    ecx,0xde2aa59a
  41b46a:	jae    0x41b4d3
  41b46c:	ficom  WORD PTR [edx]
  41b46e:	lock outs dx,BYTE PTR ds:[esi]
  41b470:	je     0x41b47d
  41b472:	fadd   QWORD PTR [ecx+0x78157593]
  41b478:	sbb    al,0x25
  41b47a:	mov    ds:0x63fc57cc,al
  41b47f:	inc    edi
  41b480:	cld    
  41b481:	mov    edx,0x4deac6d
  41b486:	or     al,0xea
  41b488:	xchg   DWORD PTR [edx-0x1661ae8a],esi
  41b48e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b48f:	cmp    DWORD PTR [esi+0x3ace0b30],edx
  41b495:	inc    edx
  41b496:	vpmulhw ymm2,ymm6,YMMWORD PTR [ebp+0x4dafc71e]
  41b49e:	mov    esi,fs
  41b4a0:	adc    eax,esi
  41b4a2:	jmpw   0xfaea
  41b4a6:	fistp  DWORD PTR [esi-0x46]
  41b4a9:	jbe    0x41b42c
  41b4ab:	mov    ah,0xab
  41b4ad:	sbb    dl,ch
  41b4af:	sbb    DWORD PTR [edx-0x3b],ecx
  41b4b2:	xor    eax,0x5ffebd0
  41b4b7:	xor    eax,0x8c8ea5e9
  41b4bc:	(bad)  
  41b4bd:	xchg   edx,eax
  41b4be:	cdq    
  41b4bf:	inc    eax
  41b4c0:	pushf  
  41b4c1:	cs sub ah,ch
  41b4c4:	adc    eax,0x4135f8d8
  41b4c9:	shl    bh,1
  41b4cb:	daa    
  41b4cc:	(bad)  
  41b4cd:	in     eax,0x3
  41b4cf:	sbb    bh,BYTE PTR [ebp+0x11eafc12]
  41b4d5:	mov    esi,0xb1bc3e00
  41b4da:	mov    ?,WORD PTR [edi+0x6a042b28]
  41b4e0:	loopne 0x41b51e
  41b4e2:	push   cs
  41b4e3:	sub    eax,0x9c023772
  41b4e8:	cmp    ebp,DWORD PTR [ebx]
  41b4ea:	push   0x65
  41b4ec:	jb     0x41b557
  41b4ee:	sbb    esi,0xffffffef
  41b4f1:	icebp  
  41b4f2:	out    dx,al
  41b4f3:	test   eax,0xc5124d1
  41b4f8:	jmp    0x41b4f4
  41b4fa:	mov    al,ah
  41b4fc:	fist   DWORD PTR [ebx]
  41b4fe:	ret    
  41b4ff:	lods   eax,DWORD PTR ds:[esi]
  41b500:	daa    
  41b501:	pop    ss
  41b502:	retf   0x4de7
  41b505:	jbe    0x41b4cb
  41b507:	push   edi
  41b508:	out    0xd3,al
  41b50a:	push   esi
  41b50b:	and    dl,BYTE PTR [esi+0x70]
  41b50e:	pushf  
  41b50f:	adc    eax,DWORD PTR [eax+0x40]
  41b512:	dec    ecx
  41b513:	test   BYTE PTR [ecx-0x3ac7b46],0x60
  41b51a:	sbb    edi,0xffffffc0
  41b51d:	pop    ss
  41b51e:	cli    
  41b51f:	and    al,BYTE PTR [eax]
  41b521:	jmp    0x41b599
  41b523:	scas   al,BYTE PTR es:[edi]
  41b524:	inc    edx
  41b525:	xor    al,BYTE PTR [edi]
  41b527:	shr    BYTE PTR [edx],0xba
  41b52a:	(bad)  
  41b52b:	xor    ebx,eax
  41b52d:	dec    ebx
  41b52e:	push   edx
  41b52f:	arpl   WORD PTR [edx-0x5f],ax
  41b532:	push   ds
  41b533:	out    dx,al
  41b534:	xor    eax,0x96b59341
  41b539:	and    al,0xf4
  41b53b:	sbb    al,0x5a
  41b53d:	inc    esp
  41b53e:	lahf   
  41b53f:	cli    
  41b540:	dec    BYTE PTR [ecx+0x4a]
  41b543:	(bad)  
  41b544:	cmp    eax,0x6f3e7260
  41b549:	mov    ebp,0xb0ec50bb
  41b54e:	inc    esp
  41b54f:	pop    ds
  41b550:	mov    BYTE PTR [esi],0x86
  41b553:	sbb    eax,0x3f0b3844
  41b558:	xor    al,0x5d
  41b55a:	retf   
  41b55b:	sbb    bh,BYTE PTR [edi]
  41b55d:	and    BYTE PTR [edi],dl
  41b55f:	and    ecx,DWORD PTR [eax]
  41b561:	sub    ch,bl
  41b563:	mov    DWORD PTR [eax],edx
  41b565:	adc    ch,BYTE PTR [edx-0x7f]
  41b568:	sub    eax,0xeff70a92
  41b56d:	sahf   
  41b56e:	xchg   edi,eax
  41b56f:	int    0x2f
  41b571:	sbb    eax,0x97221a30
  41b576:	int3   
  41b577:	or     DWORD PTR [ebx+0x40da9871],edx
  41b57d:	mov    ?,WORD PTR ds:0x29d24c09
  41b583:	xor    ebp,DWORD PTR [ebp+0x3f]
  41b586:	in     al,dx
  41b587:	retf   0x30c1
  41b58a:	stc    
  41b58b:	outs   dx,BYTE PTR ds:[esi]
  41b58c:	retf   
  41b58d:	add    eax,0xe6c4c7f6
  41b592:	hlt    
  41b593:	mov    esi,0x9f02fca0
  41b598:	(bad)  
  41b599:	(bad)  
  41b59a:	push   edi
  41b59b:	sub    edi,DWORD PTR [eax+0x7a]
  41b59e:	jge    0x41b5bb
  41b5a0:	idiv   DWORD PTR [esi]
  41b5a2:	nop
  41b5a3:	xor    ch,BYTE PTR [ebp+edx*8-0x3]
  41b5a7:	arpl   WORD PTR [ecx+0x39],cx
  41b5aa:	sbb    al,0xe3
  41b5ac:	add    BYTE PTR [ebp-0x6d129158],dh
  41b5b2:	push   0x7bdcc7e
  41b5b7:	pop    ebx
  41b5b8:	les    ebx,FWORD PTR [ebp-0x65dd0071]
  41b5be:	inc    eax
  41b5bf:	sbb    al,al
  41b5c1:	push   edi
  41b5c2:	in     al,dx
  41b5c3:	sub    eax,0x15f3ec1
  41b5c8:	inc    ebx
  41b5c9:	stc    
  41b5ca:	mov    ecx,0x39ce4c2c
  41b5cf:	les    ebx,FWORD PTR [ecx]
  41b5d1:	jnp    0x41b563
  41b5d3:	mov    BYTE PTR ds:0xc5fd3b65,0x28
  41b5da:	sbb    BYTE PTR [edx],dl
  41b5dc:	push   esi
  41b5dd:	cmp    dl,0x2c
  41b5e0:	xor    DWORD PTR [ecx-0x20],esi
  41b5e3:	fwait
  41b5e4:	pop    ebx
  41b5e5:	dec    ebx
  41b5e6:	es aam 0x94
  41b5e9:	repz ret 
  41b5eb:	ret    
  41b5ec:	neg    BYTE PTR [ebx-0x7]
  41b5ef:	outs   dx,BYTE PTR ds:[esi]
  41b5f0:	cmp    edi,edx
  41b5f2:	add    eax,0x1c545b04
  41b5f7:	mov    WORD PTR [esi],es
  41b5f9:	jp     0x41b5f9
  41b5fb:	aam    0x2b
  41b5fd:	aaa    
  41b5fe:	jbe    0x41b5bc
  41b600:	adc    BYTE PTR [esp+ecx*2-0x7b],al
  41b604:	pop    edi
  41b605:	leave  
  41b606:	ins    BYTE PTR es:[edi],dx
  41b607:	jne    0x41b59d
  41b609:	sub    DWORD PTR ds:0xf81a8d80,edi
  41b60f:	test   DWORD PTR [ebx+0x79],eax
  41b612:	aad    0xa0
  41b614:	and    BYTE PTR [edx-0x645a96d6],cl
  41b61a:	cmp    DWORD PTR ds:0xf8797e4b,edi
  41b620:	(bad)  
  41b621:	cmp    eax,DWORD PTR [eax]
  41b623:	jg     0x41b5c3
  41b625:	loope  0x41b664
  41b627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b628:	adc    eax,0xcd8542d0
  41b62d:	(bad)  
  41b62e:	sub    al,BYTE PTR [ebx+0x5350715]
  41b634:	push   0x1c987ed2
  41b639:	mov    DWORD PTR [edi],eax
  41b63b:	push   esp
  41b63c:	repz push ebp
  41b63e:	imul   eax,DWORD PTR [edx+0x5323cf03],0x79
  41b645:	sub    bh,ch
  41b647:	retf   
  41b648:	js     0x41b6bb
  41b64a:	xor    DWORD PTR [edi+0x46279ab5],ecx
  41b650:	out    dx,al
  41b651:	aam    0x23
  41b653:	or     ch,BYTE PTR [ebp+0x63fce1e9]
  41b659:	call   0x1add50ed
  41b65e:	dec    esp
  41b65f:	imul   edi,DWORD PTR [ecx-0xf10285f],0x39
  41b666:	call   0x4fa5:0x9409d188
  41b66d:	push   esi
  41b66e:	repz clc 
  41b670:	mov    fs,WORD PTR [ecx-0x16]
  41b673:	pop    ds
  41b674:	(bad)  
  41b675:	retf   
  41b676:	and    ah,BYTE PTR [ebp-0x190a83c8]
  41b67c:	inc    esp
  41b67d:	icebp  
  41b67e:	adc    DWORD PTR [edx+0x65e39e35],ecx
  41b684:	es aam 0x60
  41b687:	mov    esi,0x86e9d8db
  41b68c:	xor    edx,0xcf6c3355
  41b692:	push   cs
  41b693:	mov    BYTE PTR [edx-0x3e],ah
  41b696:	mov    ecx,0xa64bf993
  41b69c:	jae    0x41b71c
  41b69e:	lods   al,BYTE PTR ds:[esi]
  41b69f:	push   edi
  41b6a0:	mov    ch,dl
  41b6a2:	aad    0xf8
  41b6a4:	es jle 0x41b66b
  41b6a7:	sbb    BYTE PTR ss:[ecx+0x7b],bh
  41b6ab:	mov    eax,0xb78ce410
  41b6b0:	test   bh,ah
  41b6b2:	rcr    cl,cl
  41b6b4:	jmp    0x41b6f7
  41b6b6:	or     al,0xbd
  41b6b8:	(bad)  
  41b6b9:	xchg   ebx,eax
  41b6ba:	es sbb ebp,0xffffffe3
  41b6be:	cmp    DWORD PTR [esi],0xff0fe0ce
  41b6c4:	mov    bl,0x45
  41b6c6:	cmp    DWORD PTR [eax],0xffffff9f
  41b6c9:	ds leave 
  41b6cb:	mov    bl,0x35
  41b6cd:	and    edi,DWORD PTR [ecx-0x25e04d0]
  41b6d3:	ins    BYTE PTR es:[edi],dx
  41b6d4:	dec    esi
  41b6d5:	push   0xffffffa6
  41b6d7:	ds out 0x69,al
  41b6da:	mov    bh,0xf
  41b6dc:	lahf   
  41b6dd:	fld    QWORD PTR [ecx-0x2b]
  41b6e0:	add    BYTE PTR [esi-0x2757c2d8],ch
  41b6e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6e7:	cdq    
  41b6e8:	lahf   
  41b6e9:	dec    BYTE PTR [eax-0x28]
  41b6ec:	and    al,0xe
  41b6ee:	push   0xffffff80
  41b6f0:	inc    edx
  41b6f1:	stos   DWORD PTR es:[edi],eax
  41b6f2:	(bad)  
  41b6f3:	lahf   
  41b6f4:	loope  0x41b736
  41b6f6:	cmp    eax,edi
  41b6f8:	inc    ebp
  41b6f9:	test   esi,edx
  41b6fb:	sub    DWORD PTR [edi-0x3a],0x9c5aa45c
  41b702:	fsubr  QWORD PTR [eax]
  41b704:	mov    BYTE PTR [ecx-0x77],ah
  41b707:	test   al,0x27
  41b709:	push   es
  41b70a:	adc    BYTE PTR [esi-0x50],ch
  41b70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b70e:	rcr    edi,cl
  41b710:	je     0x41b72a
  41b712:	aad    0x91
  41b714:	xor    dh,bl
  41b716:	retf   
  41b717:	cwde   
  41b718:	mov    ecx,0x9f63e5c5
  41b71d:	outs   dx,BYTE PTR ds:[esi]
  41b71e:	add    ah,dl
  41b720:	sub    BYTE PTR [eax+edx*2+0x3ce5696],0x18
  41b728:	push   0x227bfdb4
  41b72d:	mov    ch,0x45
  41b72f:	call   0x25a24d82
  41b734:	pop    edi
  41b735:	xor    ah,BYTE PTR [ecx+0x1f]
  41b738:	shr    esp,0xa1
  41b73b:	sub    edx,DWORD PTR [ebx+0x64013343]
  41b741:	push   edi
  41b742:	push   esp
  41b743:	(bad)  
  41b744:	push   ss
  41b745:	js     0x41b777
  41b747:	push   ss
  41b748:	in     eax,dx
  41b749:	adc    al,0x2c
  41b74b:	inc    edx
  41b74c:	add    WORD PTR [ecx-0x3c511b92],cx
  41b753:	ss adc al,dh
  41b756:	sub    DWORD PTR [esi],esi
  41b758:	xor    BYTE PTR [edi-0x1bb9defd],al
  41b75e:	dec    esi
  41b75f:	ret    0xf8e7
  41b762:	mov    ds:0x9dd222a3,al
  41b767:	(bad)  
  41b768:	addr16 dec ebx
  41b76a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b76c:	sbb    al,0x28
  41b76e:	in     eax,0x0
  41b770:	(bad)  
  41b771:	push   edi
  41b772:	jbe    0x41b711
  41b774:	mov    ds:0x54f4791c,al
  41b779:	sbb    eax,0x846900a7
  41b77e:	xchg   BYTE PTR [ecx-0x51],al
  41b781:	std    
  41b782:	mov    esi,0xdff8e930
  41b787:	imul   edi,DWORD PTR [edi+0x11],0x5c
  41b78b:	int    0x5c
  41b78d:	cmp    ah,BYTE PTR [ebx+edx*8-0x1916dfaa]
  41b794:	pusha  
  41b795:	add    eax,0xa8157568
  41b79a:	jae    0x41b776
  41b79c:	adc    DWORD PTR [esi-0x57],edx
  41b79f:	popf   
  41b7a0:	inc    ebp
  41b7a1:	loop   0x41b785
  41b7a3:	sahf   
  41b7a4:	xor    BYTE PTR [ebp-0x50],0x50
  41b7a8:	fdiv   st,st(7)
  41b7aa:	lods   al,BYTE PTR ds:[esi]
  41b7ab:	and    dh,al
  41b7ad:	inc    ecx
  41b7ae:	inc    edx
  41b7af:	pop    ecx
  41b7b0:	push   ds
  41b7b1:	xchg   ebp,eax
  41b7b2:	inc    ecx
  41b7b3:	mov    dl,0xd3
  41b7b5:	mov    ecx,0x238e8cbe
  41b7ba:	sub    eax,0x3878ed4b
  41b7bf:	xchg   DWORD PTR [edi-0x442e7e6a],ebx
  41b7c5:	push   esi
  41b7c6:	ror    bl,1
  41b7c8:	shl    DWORD PTR [esi-0x19],cl
  41b7cb:	adc    eax,0xe8737f56
  41b7d0:	(bad)  
  41b7d1:	out    dx,al
  41b7d2:	push   eax
  41b7d3:	ret    
  41b7d4:	pop    esi
  41b7d5:	les    ebp,FWORD PTR [eax]
  41b7d7:	sahf   
  41b7d8:	enter  0x988b,0x68
  41b7dc:	inc    edx
  41b7dd:	mov    ebp,esi
  41b7df:	into   
  41b7e0:	(bad)  
  41b7e1:	mov    ds:0x58cce1c7,al
  41b7e6:	shl    ah,cl
  41b7e8:	ds mov ebx,0xdf625056
  41b7ee:	inc    edi
  41b7ef:	or     eax,0x92621086
  41b7f4:	push   ds
  41b7f5:	jle    0x41b84f
  41b7f7:	mov    ss,WORD PTR [esi]
  41b7f9:	ja     0x41b78b
  41b7fb:	int    0xa
  41b7fd:	(bad)  
  41b7fe:	js     0x41b834
  41b800:	add    al,0x92
  41b802:	jmp    0x24ec5e9b
  41b807:	out    0xb8,al
  41b809:	jle    0x41b80c
  41b80b:	push   cs
  41b80c:	(bad)  
  41b80d:	out    0xef,eax
  41b80f:	inc    eax
  41b810:	ficom  DWORD PTR [ecx+0x6ede7980]
  41b816:	adc    DWORD PTR [edi-0x5d],ebp
  41b819:	mov    esi,0xa4b42098
  41b81e:	es test eax,0x48114643
  41b824:	fiadd  WORD PTR [ebp+0x5a]
  41b827:	jmp    0x41b807
  41b829:	xchg   edx,eax
  41b82a:	fisttp QWORD PTR [edi+esi*8+0x2b]
  41b82e:	push   0x3
  41b830:	or     cl,BYTE PTR [edx]
  41b832:	mov    cl,al
  41b834:	loope  0x41b7c1
  41b836:	and    BYTE PTR [ebp+0x4a],bl
  41b839:	jno    0x41b82a
  41b83b:	pop    esp
  41b83c:	or     eax,0x6903c850
  41b841:	sti    
  41b842:	int3   
  41b843:	loopne 0x41b8b3
  41b845:	mov    ah,0xcf
  41b847:	push   cs
  41b848:	jmp    0xe1df:0xf5e7faff
  41b84f:	shl    DWORD PTR [edx+0x79247727],0xfe
  41b856:	fistp  QWORD PTR [esi-0x1d9acd85]
  41b85c:	mov    eax,ds:0x7bab9482
  41b861:	jno    0x41b84b
  41b863:	add    al,bh
  41b865:	mov    esp,0x5f801c58
  41b86a:	stc    
  41b86b:	push   ds
  41b86c:	lock inc esp
  41b86e:	pop    ebp
  41b86f:	cmp    eax,0xfeb938ac
  41b874:	dec    edi
  41b875:	lea    ebx,[ebx+ebx*1+0x7b]
  41b879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b87a:	test   eax,0xa42f16ed
  41b87f:	in     al,0x3d
  41b881:	sbb    ch,cl
  41b883:	loopne 0x41b8e0
  41b885:	test   DWORD PTR [edx-0x4c],0x3894248b
  41b88c:	xor    ebx,ebx
  41b88e:	(bad)  
  41b890:	call   0xd84c744
  41b895:	inc    esi
  41b896:	mov    dh,0x6b
  41b898:	in     eax,0x79
  41b89a:	jbe    0x41b8ba
  41b89c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b89d:	adc    edx,esp
  41b89f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8a0:	ret    0xea2b
  41b8a3:	outs   dx,DWORD PTR ds:[esi]
  41b8a4:	jbe    0x41b89a
  41b8a6:	and    al,0x2c
  41b8a8:	push   ss
  41b8a9:	add    al,0xb7
  41b8ab:	mov    bl,0xd8
  41b8ad:	scas   eax,DWORD PTR es:[edi]
  41b8ae:	fs push ebx
  41b8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b1:	push   ss
  41b8b2:	and    eax,0xcb08b9ad
  41b8b7:	dec    esp
  41b8b8:	test   eax,0x8840d928
  41b8bd:	mov    eax,ds:0x318577f0
  41b8c2:	pop    eax
  41b8c3:	lea    edi,[edx+0x11ff145e]
  41b8c9:	and    eax,0x12408f97
  41b8ce:	loop   0x41b93e
  41b8d0:	pop    edx
  41b8d1:	enter  0x441a,0xd9
  41b8d5:	outs   dx,BYTE PTR ds:[esi]
  41b8d6:	jg     0x41b8e6
  41b8d8:	pop    ds
  41b8d9:	jle    0x41b8e1
  41b8db:	data16 cmc 
  41b8dd:	call   0xc86775c5
  41b8e2:	sti    
  41b8e3:	jne    0x41b86b
  41b8e5:	dec    edi
  41b8e6:	iret   
  41b8e7:	mov    esp,0xccfd51c4
  41b8ec:	out    0xba,eax
  41b8ee:	mov    bh,0xdb
  41b8f0:	and    DWORD PTR [ebx],edi
  41b8f2:	or     al,0x17
  41b8f4:	cmp    DWORD PTR [ecx-0x1c],esp
  41b8f7:	test   eax,0xeca2b7c5
  41b8fc:	aas    
  41b8fd:	inc    ebx
  41b8fe:	push   es
  41b8ff:	(bad)  
  41b900:	dec    esp
  41b901:	mov    eax,0x7db9322
  41b906:	mov    al,ds:0xbeaa8b60
  41b90b:	mov    ch,0xa
  41b90d:	jmp    0x4ead:0x32eb8659
  41b914:	jb     0x41b8c7
  41b916:	outs   dx,BYTE PTR ds:[esi]
  41b917:	and    DWORD PTR [esi-0x38],eax
  41b91a:	ins    BYTE PTR es:[edi],dx
  41b91b:	dec    edi
  41b91c:	aas    
  41b91d:	clc    
  41b91e:	fs adc eax,0xd24ecc4e
  41b924:	adc    eax,0x280704c7
  41b929:	mov    ah,0x4b
  41b92b:	fs sbb ah,bl
  41b92e:	data16 mov bh,0xbe
  41b931:	pop    ds
  41b932:	int3   
  41b933:	push   0xffffffdf
  41b935:	mov    ch,0x37
  41b937:	cli    
  41b938:	pop    edi
  41b939:	std    
  41b93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b93b:	gs dec ecx
  41b93d:	jle    0x41b8de
  41b93f:	jge    0x41b936
  41b941:	js     0x41b922
  41b943:	push   ecx
  41b944:	or     DWORD PTR [ebx],0x5653f054
  41b94a:	inc    ecx
  41b94b:	mov    gs,WORD PTR [ebx+0x2730eff8]
  41b951:	mov    dl,ch
  41b953:	lods   al,BYTE PTR ds:[esi]
  41b954:	xor    eax,eax
  41b956:	retf   0xc00d
  41b959:	dec    esi
  41b95a:	xlat   BYTE PTR ds:[ebx]
  41b95b:	and    BYTE PTR [edi-0x5dbd4078],cl
  41b961:	popf   
  41b962:	outs   dx,BYTE PTR ds:[esi]
  41b963:	ror    edx,1
  41b965:	out    0x6a,eax
  41b967:	pusha  
  41b968:	or     eax,0x3e3c2c54
  41b96d:	stos   BYTE PTR es:[edi],al
  41b96e:	mov    ds:0x4fdf52d4,eax
  41b973:	adc    ch,BYTE PTR [ecx+0xf117569]
  41b979:	or     BYTE PTR [ecx+edx*2+0x123cf3b],bh
  41b980:	std    
  41b981:	mov    ebp,gs
  41b983:	ins    DWORD PTR es:[edi],dx
  41b984:	sbb    dh,dh
  41b986:	dec    eax
  41b987:	adc    DWORD PTR [esi+0x46],eax
  41b98a:	idiv   DWORD PTR [ebx-0x3427a8a9]
  41b990:	or     al,0x87
  41b992:	sbb    eax,0xbc7f612a
  41b997:	fiadd  WORD PTR [edx]
  41b999:	dec    DWORD PTR [ecx+0x2f282ee3]
  41b99f:	xchg   ecx,eax
  41b9a0:	mov    edi,0x4a129a97
  41b9a5:	mov    al,0xd7
  41b9a7:	and    esi,edx
  41b9a9:	xor    BYTE PTR [ebp-0x2d510287],0xcb
  41b9b0:	imul   eax,DWORD PTR [edi-0x6406a36b],0xf3fd7824
  41b9ba:	jno    0x41b9be
  41b9bc:	inc    eax
  41b9bd:	frstor [esi+0x45]
  41b9c0:	ret    0xf045
  41b9c3:	ror    DWORD PTR [eax+edi*8+0x6ecdfefa],1
  41b9ca:	fisubr DWORD PTR [ebx+0x85c01bd]
  41b9d0:	fldcw  WORD PTR [esi]
  41b9d2:	ret    
  41b9d3:	push   0x1
  41b9d5:	fbld   TBYTE PTR ds:0x1c9f71a9
  41b9db:	lods   eax,DWORD PTR ds:[esi]
  41b9dc:	push   ebx
  41b9dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9de:	(bad)  
  41b9df:	rcr    BYTE PTR [eax],0x3f
  41b9e2:	mov    ds:0xa3b6a762,al
  41b9e7:	jle    0x41b9a4
  41b9e9:	dec    ebx
  41b9ea:	cmp    ebx,DWORD PTR [edx-0xcbb6035]
  41b9f0:	nop
  41b9f1:	xor    eax,0x92ba226d
  41b9f6:	enter  0x1784,0xab
  41b9fa:	push   edi
  41b9fb:	jns    0x41ba66
  41b9fd:	mov    al,0xe2
  41b9ff:	cli    
  41ba00:	cmp    BYTE PTR [ecx],0xac
  41ba03:	(bad)  
  41ba04:	std    
  41ba05:	sub    al,0x41
  41ba07:	(bad)  
  41ba08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba09:	adc    ecx,DWORD PTR [ebx-0x11ec103f]
  41ba0f:	xchg   esi,eax
  41ba10:	arpl   WORD PTR [edi+0x12bc70eb],sp
  41ba16:	repnz out dx,al
  41ba18:	pop    ds
  41ba19:	and    bh,BYTE PTR [edi-0x66]
  41ba1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba1d:	xlat   BYTE PTR ds:[ebx]
  41ba1e:	dec    esp
  41ba1f:	pop    ebp
  41ba20:	test   DWORD PTR [esi],edx
  41ba22:	call   0x52b67608
  41ba27:	mov    bl,0x8a
  41ba29:	ins    DWORD PTR es:[edi],dx
  41ba2a:	dec    esp
  41ba2b:	dec    edi
  41ba2c:	mov    al,ds:0xec745335
  41ba31:	cwde   
  41ba32:	cmp    BYTE PTR [edi],cl
  41ba34:	stos   BYTE PTR es:[edi],al
  41ba35:	mov    cl,0x18
  41ba37:	fisub  DWORD PTR [edx-0x40bf62f2]
  41ba3d:	jg     0x41bab0
  41ba3f:	int3   
  41ba40:	aaa    
  41ba41:	xchg   edi,eax
  41ba42:	mov    ebp,0x2a2b057
  41ba47:	fild   DWORD PTR [ebx+eax*2+0x54]
  41ba4b:	push   ebp
  41ba4c:	cwde   
  41ba4d:	les    ebx,FWORD PTR [ebp-0x5cfd33e9]
  41ba53:	sahf   
  41ba54:	jmp    0x41bacc
  41ba56:	fwait
  41ba57:	mov    bl,0xec
  41ba59:	pusha  
  41ba5a:	mov    eax,0x3165e75b
  41ba5f:	das    
  41ba60:	xor    BYTE PTR [ebx+0x7eb5bb9c],bh
  41ba66:	mov    fs,WORD PTR [esi+ebx*8+0x297cba8a]
  41ba6d:	in     al,0xa0
  41ba6f:	retf   
  41ba70:	das    
  41ba71:	lahf   
  41ba72:	jle    0x41ba10
  41ba74:	inc    esp
  41ba75:	mov    bh,0x28
  41ba77:	xor    bh,bl
  41ba79:	pop    ebx
  41ba7a:	cmp    al,0xeb
  41ba7c:	mov    edi,0x5d698790
  41ba81:	retf   0x7828
  41ba84:	push   0x156314c4
  41ba89:	mov    ah,0x31
  41ba8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba8c:	pop    eax
  41ba8d:	out    0x8,al
  41ba8f:	shl    edx,1
  41ba91:	es push ecx
  41ba93:	and    eax,0x4eaf0dfe
  41ba98:	popf   
  41ba99:	dec    BYTE PTR [ebx]
  41ba9b:	fucom  st(0)
  41ba9d:	and    bh,BYTE PTR [ebx-0x20]
  41baa0:	out    0x3c,eax
  41baa2:	faddp  st(6),st
  41baa4:	shr    BYTE PTR [edi-0x25],0x51
  41baa8:	imul   esi,eax,0x62
  41baab:	scas   al,BYTE PTR es:[edi]
  41baac:	mov    edx,0x344de2
  41bab1:	dec    edx
  41bab2:	xor    BYTE PTR [esi],0xcb
  41bab5:	xchg   edi,eax
  41bab6:	mov    WORD PTR [ebp+0x6d0b919b],?
  41babc:	rcr    DWORD PTR [esi+0x3c],0x4c
  41bac0:	sub    eax,0xab25002a
  41bac5:	adc    BYTE PTR [edx-0x305c80b6],0xcc
  41bacc:	mov    eax,0xea296315
  41bad1:	mov    ecx,0xc0ebd126
  41bad6:	dec    edx
  41bad7:	and    eax,0xd79d3a29
  41badc:	jns    0x41bb16
  41bade:	or     DWORD PTR [ebx-0x6b],0xa571990
  41bae5:	mov    WORD PTR [edx-0x65ec0219],ds
  41baeb:	xchg   ebp,eax
  41baec:	push   ebx
  41baed:	(bad)  
  41baee:	jg     0x41ba87
  41baf0:	test   eax,0xe6325ed0
  41baf5:	inc    esp
  41baf6:	sub    DWORD PTR [esi],ecx
  41baf8:	jno    0x41bb5c
  41bafa:	jp     0x41bae4
  41bafc:	and    eax,0x3e7b947f
  41bb01:	adc    al,BYTE PTR [ebx-0x16a27e75]
  41bb07:	in     eax,dx
  41bb08:	popa   
  41bb09:	lock ins BYTE PTR es:[edi],dx
  41bb0b:	jmp    0x5aeb:0x915885d2
  41bb12:	push   es
  41bb13:	or     esp,edx
  41bb15:	add    DWORD PTR [eax-0x6c71bb6],esi
  41bb1b:	(bad)  
  41bb1c:	ins    BYTE PTR es:[edi],dx
  41bb1d:	push   0x1c
  41bb1f:	out    0x7,eax
  41bb21:	je     0x41bb31
  41bb23:	stc    
  41bb24:	push   esp
  41bb25:	mov    ebp,0xe973f441
  41bb2a:	push   0x5f9f7b81
  41bb2f:	and    ah,BYTE PTR [edi+0x2ba40d7e]
  41bb35:	and    eax,0x2820818e
  41bb3a:	inc    ecx
  41bb3b:	test   DWORD PTR [edx+ecx*4-0x173c0cb2],0x7d653541
  41bb46:	mov    WORD PTR [edi],?
  41bb48:	scas   al,BYTE PTR es:[edi]
  41bb49:	rcr    BYTE PTR [ebx],cl
  41bb4b:	mov    al,ds:0x251dde88
  41bb50:	inc    ebp
  41bb51:	sub    al,0x85
  41bb53:	bound  edi,QWORD PTR [esp+eiz*4+0x64]
  41bb57:	arpl   bp,di
  41bb59:	mov    ebp,0xb78478f0
  41bb5e:	rol    BYTE PTR [edx+0x6a],0x16
  41bb62:	xchg   esi,eax
  41bb63:	scas   al,BYTE PTR es:[edi]
  41bb64:	dec    ebx
  41bb65:	jge    0x41bb3f
  41bb67:	inc    ebx
  41bb68:	int3   
  41bb69:	stos   BYTE PTR es:[edi],al
  41bb6a:	aas    
  41bb6b:	popa   
  41bb6c:	loope  0x41bbcf
  41bb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb6f:	jno    0x41bb70
  41bb71:	and    eax,0xd085c271
  41bb76:	dec    ecx
  41bb77:	push   eax
  41bb78:	jge    0x41bb9c
  41bb7a:	jns    0x41bbe1
  41bb7c:	cmp    esi,DWORD PTR [eax+0x7d]
  41bb7f:	or     ebp,DWORD PTR [ebx+0x63]
  41bb82:	xchg   dh,dh
  41bb84:	jg     0x41bb95
  41bb86:	adc    eax,0xf3b4c178
  41bb8b:	neg    DWORD PTR [eax]
  41bb8d:	outs   dx,DWORD PTR ds:[esi]
  41bb8e:	sbb    DWORD PTR [esi],ebx
  41bb90:	push   eax
  41bb91:	cmp    eax,0xdbb7470e
  41bb96:	lea    ebx,[eax+0x22257222]
  41bb9c:	ret    
  41bb9d:	pop    eax
  41bb9e:	add    BYTE PTR [ebx],bl
  41bba0:	in     al,dx
  41bba1:	adc    BYTE PTR [edi+0x534d6528],bl
  41bba7:	jmp    0x41bbd2
  41bba9:	test   DWORD PTR [ebx+0x4f],ebp
  41bbac:	push   ecx
  41bbad:	jno    0x41bba1
  41bbaf:	push   0xffffffe6
  41bbb1:	(bad)
  41bbb4:	(bad)  
  41bbb5:	addr16 jb 0x41bbc8
  41bbb8:	mov    ebp,0xaea510bc
  41bbbd:	pop    es
  41bbbe:	dec    ebx
  41bbbf:	lods   eax,DWORD PTR ds:[esi]
  41bbc0:	cmp    eax,0x460afadb
  41bbc5:	scas   al,BYTE PTR es:[edi]
  41bbc6:	(bad)  
  41bbc7:	mov    DWORD PTR [ebx+ebx*1+0x615c07d5],ebp
  41bbce:	jbe    0x41bc17
  41bbd0:	stos   DWORD PTR es:[edi],eax
  41bbd1:	push   esi
  41bbd2:	mov    DWORD PTR [ecx+0x62],edx
  41bbd5:	pop    ss
  41bbd6:	call   0x1127:0x430c9dfb
  41bbdd:	inc    edx
  41bbde:	lea    ecx,[ebx-0x1b3e57c]
  41bbe4:	xor    DWORD PTR [ebx],esi
  41bbe6:	dec    eax
  41bbe7:	dec    edi
  41bbe8:	in     eax,0x30
  41bbea:	(bad)  
  41bbec:	jl     0x41bc23
  41bbee:	test   al,0x6f
  41bbf0:	loope  0x41bb7f
  41bbf2:	jne    0x41bbda
  41bbf4:	shl    BYTE PTR ds:0x6ef73ff1,0x42
  41bbfb:	ins    BYTE PTR es:[edi],dx
  41bbfc:	dec    edi
  41bbfd:	fidiv  DWORD PTR [eax]
  41bbff:	lea    ebp,[ebx-0x5e3a1bbd]
  41bc05:	(bad)  
  41bc06:	pop    ebp
  41bc07:	mov    BYTE PTR [edx-0x327b3e24],cl
  41bc0d:	(bad)  
  41bc0e:	xchg   ebp,eax
  41bc0f:	add    al,0x7a
  41bc11:	xor    DWORD PTR [ecx],ebp
  41bc13:	push   ds
  41bc14:	setb   BYTE PTR [ebx-0x2aa901c8]
  41bc1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc1c:	xor    eax,DWORD PTR [eax]
  41bc1e:	cli    
  41bc1f:	stos   DWORD PTR es:[edi],eax
  41bc20:	mov    al,0x60
  41bc22:	cmp    esi,ebp
  41bc24:	dec    ebp
  41bc25:	mov    ebx,0xd6c3c539
  41bc2a:	mov    dh,0x57
  41bc2c:	fiadd  DWORD PTR [ebp+0x19]
  41bc2f:	xor    cl,bh
  41bc31:	push   cs
  41bc32:	pop    ebp
  41bc33:	mov    esi,0x2252116d
  41bc38:	mov    ebp,0xd42e03dc
  41bc3d:	pushf  
  41bc3e:	mov    ah,0x81
  41bc40:	jns    0x41bc0a
  41bc42:	mov    bh,ah
  41bc44:	jbe    0x41bc4d
  41bc46:	inc    eax
  41bc47:	cmp    edi,esp
  41bc49:	shl    ch,1
  41bc4b:	jmp    0x41bbfc
  41bc4d:	jl     0x41bc17
  41bc4f:	loope  0x41bc72
  41bc51:	ret    0x8f1
  41bc54:	sbb    BYTE PTR [eax+0x63],ah
  41bc57:	shr    eax,0x76
  41bc5a:	sbb    eax,0xee7b4884
  41bc5f:	lahf   
  41bc60:	sub    esp,eax
  41bc62:	push   ds
  41bc63:	jb     0x41bbef
  41bc65:	and    al,0x80
  41bc67:	out    0x36,al
  41bc69:	jle    0x41bc9e
  41bc6b:	xor    ebp,ebx
  41bc6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc6e:	repz jge 0x41bcea
  41bc71:	cld    
  41bc72:	mov    esi,0xa2b9286c
  41bc77:	fwait
  41bc78:	push   ebp
  41bc79:	push   esp
  41bc7a:	or     ebx,DWORD PTR [ebp+0x3c5f8d6]
  41bc80:	pop    ebp
  41bc81:	pop    ds
  41bc82:	mov    ah,BYTE PTR [eax+0xff53c08]
  41bc88:	jne    0x41bc2e
  41bc8a:	xor    DWORD PTR [edi+0x14],esp
  41bc8d:	mov    DWORD PTR [ecx-0x31940747],ebp
  41bc93:	enter  0x17fd,0x25
  41bc97:	dec    edx
  41bc98:	sbb    DWORD PTR [esi-0x1e22bbf4],eax
  41bc9e:	jge    0x41bc68
  41bca0:	mov    al,ds:0x8a3bcecf
  41bca5:	(bad)  
  41bca7:	aam    0x0
  41bca9:	aam    0x2c
  41bcab:	jnp    0x41bc4f
  41bcad:	mov    ds:0x90947aec,al
  41bcb2:	fld    QWORD PTR [ebx-0x1]
  41bcb5:	mov    ch,0xef
  41bcb7:	inc    esi
  41bcb8:	and    edi,eax
  41bcba:	push   edx
  41bcbb:	xchg   esi,eax
  41bcbc:	lods   al,BYTE PTR ds:[esi]
  41bcbd:	add    edx,DWORD PTR [ecx]
  41bcbf:	clc    
  41bcc0:	ss ret 
  41bcc2:	fucomip st,st(5)
  41bcc4:	lds    ebx,FWORD PTR [esi-0x63]
  41bcc7:	pop    es
  41bcc8:	mov    WORD PTR [eax+0x6bf2cd77],gs
  41bcce:	loope  0x41bd44
  41bcd0:	bound  ebp,QWORD PTR [ecx+esi*4-0x4bcce1ec]
  41bcd7:	cmp    BYTE PTR [ebx-0x9],dl
  41bcda:	mov    edi,DWORD PTR [ecx+0x4478586d]
  41bce0:	pop    esp
  41bce1:	in     al,0x1d
  41bce3:	xadd   DWORD PTR gs:[edi],esi
  41bce7:	jb     0x41bd43
  41bce9:	inc    esp
  41bcea:	es push ds
  41bcec:	xor    esi,DWORD PTR [esi]
  41bcee:	xlat   BYTE PTR ds:[ebx]
  41bcef:	mov    ?,WORD PTR [esi]
  41bcf1:	cmp    al,0xec
  41bcf3:	sbb    al,0xd4
  41bcf5:	xchg   edi,eax
  41bcf6:	mov    ds:0x8d0a9e77,al
  41bcfb:	mov    edi,0x8dcdaf56
  41bd00:	enter  0xf9db,0xea
  41bd04:	adc    edi,esp
  41bd06:	test   DWORD PTR [edx+edx*1-0x36],0xeec1568d
  41bd0e:	xor    eax,0x3bc31043
  41bd13:	sub    al,0x7
  41bd15:	pushf  
  41bd16:	push   ds
  41bd17:	mov    bl,0xbc
  41bd19:	rcr    DWORD PTR [edx-0x73174563],0x83
  41bd20:	std    
  41bd21:	xchg   esp,eax
  41bd22:	mov    ebx,0xfc0d06e0
  41bd27:	inc    edi
  41bd28:	shr    BYTE PTR [ebp-0x21],1
  41bd2b:	(bad)  
  41bd2c:	mov    ds:0xf4aebba5,al
  41bd31:	jecxz  0x41bd6e
  41bd33:	retf   
  41bd34:	push   ecx
  41bd35:	xchg   esp,eax
  41bd36:	sbb    al,0x81
  41bd38:	(bad)  
  41bd39:	pop    esp
  41bd3a:	cmp    ecx,esi
  41bd3c:	pop    ecx
  41bd3d:	inc    ecx
  41bd3e:	mov    ebp,0x9610ddb6
  41bd43:	scas   eax,DWORD PTR es:[edi]
  41bd44:	push   ebx
  41bd45:	test   BYTE PTR [ebx-0x35],ch
  41bd48:	pop    ss
  41bd49:	and    al,0xb3
  41bd4b:	cmp    ah,BYTE PTR [ebx+0x46]
  41bd4e:	aas    
  41bd4f:	jbe    0x41bd3e
  41bd51:	sbb    bl,dh
  41bd53:	mov    cl,0x8b
  41bd55:	jbe    0x41bd09
  41bd57:	add    DWORD PTR [ecx+0xe],edx
  41bd5a:	es mov esi,0x9b74f7cd
  41bd60:	mov    DWORD PTR [ebx+0x13],edx
  41bd63:	jp     0x41bd15
  41bd65:	shl    BYTE PTR [esp+edx*4],cl
  41bd68:	loop   0x41bda3
  41bd6a:	jns    0x41bd30
  41bd6c:	and    BYTE PTR [edi+0x152fc049],dl
  41bd72:	mov    edi,0x6df3b100
  41bd77:	fldcw  WORD PTR [edx-0x6e49ab4c]
  41bd7d:	outs   dx,BYTE PTR ds:[esi]
  41bd7e:	repz scas eax,DWORD PTR es:[edi]
  41bd80:	fimul  WORD PTR [edx-0x3c60b610]
  41bd86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd87:	dec    esp
  41bd88:	cld    
  41bd89:	shr    BYTE PTR [ecx],1
  41bd8b:	cmp    al,0x77
  41bd8d:	xchg   BYTE PTR [esi+0x1febfbbe],cl
  41bd93:	and    DWORD PTR [edi+0x54],esp
  41bd96:	aam    0xd5
  41bd98:	jo     0x41bd29
  41bd9a:	mov    eax,ds:0x11dce628
  41bd9f:	push   esi
  41bda0:	ret    0xbd4b
  41bda3:	addr16 mov ebx,0x25455f6d
  41bda9:	out    dx,al
  41bdaa:	(bad)  [ebx-0x3a]
  41bdad:	mov    eax,0xaa799c41
  41bdb2:	push   0x5f5f9e05
  41bdb7:	cmp    BYTE PTR [ecx-0x23],cl
  41bdba:	in     eax,0x31
  41bdbc:	dec    eax
  41bdbd:	xchg   ebp,eax
  41bdbe:	and    BYTE PTR [ebx+0x4213b19c],dl
  41bdc4:	adc    DWORD PTR [esi+eax*8-0x2e93fcc1],ebp
  41bdcb:	std    
  41bdcc:	sbb    dh,BYTE PTR [eax+0x6c04e348]
  41bdd2:	cmp    bh,BYTE PTR [ebx+ecx*8+0x2]
  41bdd6:	iret   
  41bdd7:	mov    ebx,0xa31ace91
  41bddc:	out    0x1f,eax
  41bdde:	add    bl,BYTE PTR [esp+ebx*8-0x12e6ae03]
  41bde5:	pop    ebx
  41bde6:	test   eax,0xe301daa3
  41bdeb:	in     eax,dx
  41bdec:	dec    esi
  41bded:	aaa    
  41bdee:	test   BYTE PTR [edi-0x55],dl
  41bdf1:	and    edi,ecx
  41bdf3:	into   
  41bdf4:	sub    cl,BYTE PTR [ebx+0x4b046230]
  41bdfa:	sub    DWORD PTR [eax+0x41],0x7815b520
  41be01:	xor    ah,BYTE PTR [edx-0x4d013c9d]
  41be07:	adc    DWORD PTR [eax-0xe],0xffffff9c
  41be0b:	repz shl DWORD PTR [eax+0x3],0x5b
  41be10:	gs push cs
  41be12:	add    DWORD PTR [esp+edi*1],esp
  41be15:	and    DWORD PTR [esi-0x4fca2ff2],esp
  41be1b:	cwde   
  41be1c:	data16 add dl,ch
  41be1f:	fsubr  QWORD PTR [esi]
  41be21:	adc    al,0x29
  41be23:	fucomi st,st(7)
  41be25:	xor    dh,al
  41be27:	sbb    eax,0x44458240
  41be2c:	mov    bl,0x56
  41be2e:	loope  0x41be87
  41be30:	cmp    eax,0xf218ac83
  41be35:	js     0x41be0e
  41be37:	or     eax,0xc5753a24
  41be3c:	cli    
  41be3d:	mov    dl,0x82
  41be3f:	push   ds
  41be40:	je     0x41bdda
  41be42:	sub    al,0xfc
  41be44:	mov    eax,ds:0xea1b2172
  41be49:	push   edi
  41be4a:	cli    
  41be4b:	dec    eax
  41be4c:	push   ss
  41be4d:	inc    esp
  41be4e:	mov    ds:0x35be0a43,al
  41be53:	inc    eax
  41be54:	jne    0x41be3a
  41be56:	mov    ebx,0x4dade24
  41be5b:	out    dx,eax
  41be5c:	adc    al,0xe3
  41be5e:	test   bl,dh
  41be60:	jb     0x41be88
  41be62:	addr16 jp 0x41be4e
  41be65:	push   esi
  41be66:	cmc    
  41be67:	mov    ebx,0x66adec16
  41be6c:	jne    0x41be4e
  41be6e:	repnz popa 
  41be70:	mov    eax,ds:0xe213e2ac
  41be75:	clc    
  41be76:	rcl    DWORD PTR [ecx-0x419f176c],cl
  41be7c:	aam    0x62
  41be7e:	or     ebp,esp
  41be80:	or     DWORD PTR [eax],edx
  41be82:	bound  eax,QWORD PTR [esi]
  41be84:	xchg   ebx,eax
  41be85:	xchg   ebx,eax
  41be86:	or     dl,BYTE PTR [ecx]
  41be88:	push   0x9cba58f0
  41be8d:	dec    eax
  41be8e:	and    bl,bl
  41be90:	icebp  
  41be91:	jns    0x41bed9
  41be93:	ins    DWORD PTR es:[edi],dx
  41be94:	(bad)  
  41be95:	jl     0x41bea5
  41be97:	arpl   WORD PTR [edx+0x76],cx
  41be9a:	outs   dx,DWORD PTR ds:[esi]
  41be9b:	adc    DWORD PTR [ecx-0x3a],eax
  41be9e:	inc    ebp
  41be9f:	fs js  0x41bf1e
  41bea2:	ja     0x41bebd
  41bea4:	pop    eax
  41bea5:	pop    ebp
  41bea6:	mov    al,0xda
  41bea8:	jne    0x41be97
  41beaa:	out    dx,al
  41beab:	xchg   BYTE PTR [eax-0x9],ah
  41beae:	clc    
  41beaf:	repnz inc ecx
  41beb1:	sbb    BYTE PTR [ecx+0x7e],dh
  41beb4:	dec    ebp
  41beb5:	add    al,0xe7
  41beb7:	ja     0x41be62
  41beb9:	shl    DWORD PTR [edi-0x20f8fad9],0x44
  41bec0:	pop    edi
  41bec1:	lea    edx,[eax+0x6d]
  41bec4:	jno    0x41beb6
  41bec6:	jne    0x41be50
  41bec8:	in     al,0x61
  41beca:	push   ds
  41becb:	mov    dh,0xc2
  41becd:	sbb    DWORD PTR [eax],0x2
  41bed0:	push   ss
  41bed1:	popf   
  41bed2:	mov    ch,0xf2
  41bed4:	gs hlt 
  41bed6:	jp     0x41bf46
  41bed8:	scas   al,BYTE PTR es:[edi]
  41bed9:	imul   esi,DWORD PTR [edx],0xfffffff5
  41bedc:	cs es in eax,dx
  41bedf:	push   eax
  41bee0:	and    DWORD PTR [ebx],ecx
  41bee2:	shr    dh,cl
  41bee4:	fiadd  WORD PTR [ebx+0x37]
  41bee7:	ss sbb eax,0x7db0f1df
  41beed:	std    
  41beee:	mov    ebp,0x9a30e3f5
  41bef3:	mov    bl,0x5e
  41bef5:	pop    edi
  41bef6:	jnp    0x41bf5e
  41bef8:	out    dx,al
  41bef9:	push   edi
  41befa:	xchg   ebx,eax
  41befb:	sub    BYTE PTR [edx],0x0
  41befe:	xor    ecx,ecx
  41bf00:	dec    esi
  41bf01:	push   esp
  41bf02:	les    edi,FWORD PTR [ebx]
  41bf04:	mov    ?,WORD PTR ds:0xca53b43f
  41bf0a:	mov    ecx,0xf3417f16
  41bf0f:	scas   eax,DWORD PTR es:[edi]
  41bf10:	std    
  41bf11:	(bad)  
  41bf12:	outs   dx,BYTE PTR ds:[esi]
  41bf13:	pop    ebp
  41bf14:	fidiv  DWORD PTR [ebx+0x51]
  41bf17:	shl    DWORD PTR [edx],cl
  41bf19:	adc    DWORD PTR [ebp-0x5e],ebx
  41bf1c:	sar    DWORD PTR [ebp-0x2c88f9f7],0x73
  41bf23:	inc    edx
  41bf24:	fdiv   DWORD PTR [esi-0xab67248]
  41bf2a:	jmp    0xb6b3a753
  41bf2f:	(bad)  
  41bf30:	or     al,BYTE PTR [edx]
  41bf32:	sbb    eax,0x8d221214
  41bf37:	mov    BYTE PTR [ebx+ebx*4+0x3cc0590c],al
  41bf3e:	xchg   ebp,eax
  41bf3f:	pop    ss
  41bf40:	(bad)  
  41bf41:	out    0xda,al
  41bf43:	cmp    BYTE PTR [esp+ecx*2],ch
  41bf46:	pop    ss
  41bf47:	cmp    ecx,DWORD PTR [eax-0x37561e82]
  41bf4d:	imul   esp,edx,0xffffffc3
  41bf50:	or     eax,0xe9fb4eec
  41bf55:	jne    0x41bf9a
  41bf57:	hlt    
  41bf58:	pushf  
  41bf59:	sub    BYTE PTR [eax*4-0x417329d0],ah
  41bf60:	cmp    edi,DWORD PTR [eax]
  41bf62:	inc    esi
  41bf63:	xchg   ebp,eax
  41bf64:	inc    edx
  41bf65:	jge    0x41bfae
  41bf67:	sbb    BYTE PTR [eax-0x3e],bh
  41bf6a:	push   ebp
  41bf6b:	mov    al,ds:0xa38f4632
  41bf70:	rcl    BYTE PTR [eax-0x147eb46c],0x56
  41bf77:	mov    cl,0xb1
  41bf79:	retf   
  41bf7a:	enter  0xc56c,0xdc
  41bf7e:	jle    0x41bfe6
  41bf80:	add    cl,BYTE PTR [ecx+0x42]
  41bf83:	retf   0x3dca
  41bf86:	push   cs
  41bf87:	leave  
  41bf88:	ja     0x41bfcb
  41bf8a:	inc    ebx
  41bf8b:	sbb    al,0xac
  41bf8d:	pop    cx
  41bf8f:	jg     0x41bf65
  41bf91:	mov    bl,0xec
  41bf93:	arpl   dx,bx
  41bf95:	jmp    0x41bf17
  41bf97:	inc    edi
  41bf98:	loopne 0x41c019
  41bf9a:	mov    ?,WORD PTR [esi-0x6fb96e6]
  41bfa0:	adc    eax,0x79d88992
  41bfa5:	sti    
  41bfa6:	push   esp
  41bfa7:	pop    esp
  41bfa8:	adc    BYTE PTR [ecx],bl
  41bfaa:	dec    esp
  41bfab:	sub    BYTE PTR [edi+0x70121ffa],bh
  41bfb1:	add    al,0x59
  41bfb3:	xchg   ecx,eax
  41bfb4:	icebp  
  41bfb5:	aaa    
  41bfb6:	pop    ecx
  41bfb7:	dec    ebx
  41bfb8:	adc    eax,0xc23ce7e9
  41bfbd:	into   
  41bfbe:	leave  
  41bfbf:	loopne 0x41bf41
  41bfc1:	(bad)  
  41bfc2:	cwde   
  41bfc3:	adc    DWORD PTR [edi-0x67],0xffffffc2
  41bfc7:	icebp  
  41bfc8:	dec    esp
  41bfc9:	idiv   DWORD PTR [ecx]
  41bfcb:	xchg   esp,eax
  41bfcc:	ins    BYTE PTR es:[edi],dx
  41bfcd:	adc    edx,DWORD PTR [ebp-0x6d]
  41bfd0:	sti    
  41bfd1:	cmp    BYTE PTR [ecx+0x4e3b39b8],cl
  41bfd7:	xchg   DWORD PTR [eax+edx*4-0x1619d801],eax
  41bfde:	fidivr DWORD PTR [ecx-0x25]
  41bfe1:	inc    sp
  41bfe3:	out    0x3f,al
  41bfe5:	int3   
  41bfe6:	mov    eax,0x5f9756a1
  41bfeb:	repnz adc cl,BYTE PTR [esi-0x754770f4]
  41bff2:	dec    eax
  41bff3:	cli    
  41bff4:	int    0xdb
  41bff6:	cmc    
  41bff7:	retf   
  41bff8:	sahf   
  41bff9:	stc    
  41bffa:	inc    ebx
  41bffb:	loope  0x41c038
  41bffd:	test   eax,0x5c9e8b29
  41c002:	nop
  41c003:	push   cs
  41c004:	imul   esp,DWORD PTR [eax+0x4],0x48bcab91
  41c00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c00c:	jns    0x41c05b
  41c00e:	xor    eax,0x74231516
  41c013:	xor    ah,BYTE PTR [ecx-0x42]
  41c016:	rol    DWORD PTR [eax-0x4a1f134e],cl
  41c01c:	pop    edi
  41c01d:	jp     0x41c03c
  41c01f:	or     bl,BYTE PTR [edi-0x6ba5dfd7]
  41c025:	pop    edi
  41c026:	inc    edx
  41c027:	mov    BYTE PTR [ecx+edx*8-0x4b623865],al
  41c02e:	in     eax,dx
  41c02f:	imul   edx,edi,0x1e85b154
  41c035:	fdivr  QWORD PTR [ebx+0x5b]
  41c038:	inc    eax
  41c039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03a:	mov    cl,0x83
  41c03c:	pushf  
  41c03d:	xchg   ebp,eax
  41c03e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c040:	add    ch,BYTE PTR [eax-0x3311376d]
  41c046:	shl    BYTE PTR [esp+edx*8],cl
  41c049:	loopne 0x41c070
  41c04b:	lods   eax,DWORD PTR ds:[esi]
  41c04c:	shl    BYTE PTR [eax-0x75],cl
  41c04f:	xchg   esp,eax
  41c050:	xor    BYTE PTR [eax-0x14],ah
  41c053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c054:	dec    ecx
  41c055:	pop    ecx
  41c056:	and    ebx,DWORD PTR [ecx+0x7b62bfd6]
  41c05c:	int3   
  41c05d:	jle    0x41c095
  41c05f:	mov    bh,0x4b
  41c061:	pop    ebp
  41c062:	pop    ds
  41c063:	sbb    al,0x5a
  41c065:	add    edi,eax
  41c067:	jns    0x41c0d0
  41c069:	iret   
  41c06a:	bound  ecx,QWORD PTR [esi-0x5ef7868d]
  41c070:	ins    DWORD PTR es:[edi],dx
  41c071:	jle    0x41c0d3
  41c073:	mov    eax,ds:0x73c5da37
  41c078:	mov    ss,WORD PTR [edi-0x2b]
  41c07b:	adc    al,0x30
  41c07d:	push   esi
  41c07e:	sbb    eax,0xcbe0aa3a
  41c083:	test   DWORD PTR [edx+0x42a4d7f2],ebp
  41c089:	cmp    eax,0x688d48fb
  41c08e:	sub    BYTE PTR [edx+0x2a],dh
  41c091:	jge    0x41c024
  41c093:	call   0xd0813a50
  41c098:	loopne 0x41c0a3
  41c09a:	dec    ecx
  41c09b:	cli    
  41c09c:	lea    edx,[ecx-0x12]
  41c09f:	mov    bl,0xb7
  41c0a1:	or     ebx,DWORD PTR [edx]
  41c0a3:	jnp    0x41c0da
  41c0a5:	sbb    eax,0x719f5b73
  41c0aa:	scas   al,BYTE PTR es:[edi]
  41c0ab:	ror    DWORD PTR [ebp+0x40],1
  41c0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0af:	inc    esp
  41c0b0:	pop    ebx
  41c0b1:	mov    eax,0x5448d083
  41c0b6:	movaps xmm4,xmm6
  41c0b9:	mov    ch,0x49
  41c0bb:	repnz repnz inc ebp
  41c0be:	pusha  
  41c0bf:	test   al,0xa1
  41c0c1:	xor    BYTE PTR [esi+0x4f42c19d],dh
  41c0c7:	jle    0x41c08d
  41c0c9:	pushf  
  41c0ca:	jbe    0x41c059
  41c0cc:	xor    BYTE PTR [edi+ebx*4],0xbd
  41c0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0d1:	xor    cl,BYTE PTR [esi+ebx*4]
  41c0d4:	retf   0x7e4c
  41c0d7:	shr    DWORD PTR [edi],cl
  41c0d9:	jecxz  0x41c0e1
  41c0db:	(bad)  
  41c0dc:	test   eax,0xb8d9f8cc
  41c0e1:	mov    bh,dl
  41c0e3:	test   BYTE PTR [esp+ebp*8+0x1d118836],dl
  41c0ea:	sub    bh,ch
  41c0ec:	sub    ah,BYTE PTR [eax+eax*1-0x42]
  41c0f0:	pop    esp
  41c0f1:	mov    bh,0xcf
  41c0f3:	mov    ?,WORD PTR [esi+eiz*4]
  41c0f6:	sbb    eax,DWORD PTR [esi-0x3b]
  41c0f9:	adc    eax,0x9cd9ec0d
  41c0fe:	gs cdq 
  41c100:	and    al,0x8b
  41c102:	enter  0xa145,0xdf
  41c106:	mov    WORD PTR [edx+0x2938067d],ss
  41c10c:	mov    BYTE PTR [eax-0x53385501],bl
  41c112:	or     eax,0x1660cc4d
  41c117:	mov    ebx,0x80664ba0
  41c11c:	xor    BYTE PTR [ebx],0x81
  41c11f:	mov    bh,0x90
  41c121:	(bad)
  41c124:	in     al,dx
  41c125:	push   ss
  41c126:	xor    eax,0x5dafa4e2
  41c12b:	(bad)  
  41c12c:	(bad)  
  41c12e:	ficom  DWORD PTR [ebx]
  41c130:	sub    ecx,DWORD PTR [edi]
  41c132:	fmul   DWORD PTR [eax]
  41c134:	fnstenv [edi-0x4929d93f]
  41c13a:	sbb    eax,0xb0afd260
  41c13f:	sub    esi,ebp
  41c141:	xor    al,0x66
  41c143:	mov    bh,0xde
  41c145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c146:	cs mov cl,0x88
  41c149:	xor    eax,0x4bdaaa51
  41c14e:	ja     0x41c0fb
  41c150:	mov    bh,0x4d
  41c152:	add    bh,dl
  41c154:	pop    ebx
  41c155:	jle    0x41c0e0
  41c157:	and    al,0x23
  41c159:	adc    dl,dl
  41c15b:	mov    ds:0xef5e14cd,eax
  41c160:	add    eax,0xa5dcc69
  41c165:	push   eax
  41c166:	iret   
  41c167:	mov    ecx,0xa6928920
  41c16c:	mov    esi,0xfafa0d77
  41c171:	int3   
  41c172:	push   ebx
  41c173:	jb     0x41c1a1
  41c175:	stos   DWORD PTR es:[edi],eax
  41c176:	ror    BYTE PTR [esi-0x5c],0xa1
  41c17a:	aaa    
  41c17b:	and    eax,0xa0a077c2
  41c180:	or     BYTE PTR [ebp+0x58046862],al
  41c186:	std    
  41c187:	out    dx,al
  41c188:	pop    ebx
  41c189:	inc    ebp
  41c18a:	mov    esi,0xe266b5b3
  41c18f:	or     edx,0x2a
  41c192:	shl    bl,1
  41c194:	out    dx,eax
  41c195:	xchg   DWORD PTR [ecx+0xc7caf23],ebp
  41c19b:	jbe    0x41c13d
  41c19d:	push   esi
  41c19e:	(bad)  
  41c19f:	mov    gs,WORD PTR [ebp-0x1c871d1c]
  41c1a5:	(bad)  
  41c1a6:	mov    ecx,0xc6c2f4f0
  41c1ab:	mov    BYTE PTR [edi],al
  41c1ad:	mov    dh,0xcf
  41c1af:	popf   
  41c1b0:	fcom   DWORD PTR [ebx+0x1b]
  41c1b3:	pop    edi
  41c1b4:	ror    DWORD PTR [ecx],1
  41c1b6:	(bad)  
  41c1b7:	out    dx,eax
  41c1b8:	aas    
  41c1b9:	mov    bl,0x79
  41c1bb:	or     ecx,DWORD PTR [ecx-0x3f]
  41c1be:	xchg   edx,eax
  41c1bf:	ror    bh,cl
  41c1c1:	jle    0x41c1c1
  41c1c3:	test   DWORD PTR [ebx-0x5059389d],ebx
  41c1c9:	inc    edx
  41c1ca:	dec    eax
  41c1cb:	xor    al,bl
  41c1cd:	adc    al,0x86
  41c1cf:	adc    DWORD PTR [edi],edx
  41c1d1:	adc    esp,esp
  41c1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1d4:	inc    edx
  41c1d5:	sbb    eax,0x74075921
  41c1da:	call   0x286c:0x6b2a999a
  41c1e1:	gs (bad) 
  41c1e3:	rcl    DWORD PTR [ecx+0x6077befc],cl
  41c1e9:	pop    edi
  41c1ea:	sbb    bl,dl
  41c1ec:	fdiv   st,st(2)
  41c1ee:	sub    al,BYTE PTR [edx]
  41c1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1f1:	inc    eax
  41c1f2:	bound  edx,QWORD PTR [ecx]
  41c1f4:	mul    DWORD PTR [ecx+0x445e22e9]
  41c1fa:	pusha  
  41c1fb:	rol    DWORD PTR [esi],0xdd
  41c1fe:	xchg   edi,eax
  41c1ff:	pop    es
  41c200:	cmp    eax,0x3d74869b
  41c205:	fld    TBYTE PTR [ebp-0x7c979e68]
  41c20b:	and    DWORD PTR ds:0xa114bce3,esi
  41c211:	scas   al,BYTE PTR es:[edi]
  41c212:	fld    DWORD PTR [edi-0x3e993ef3]
  41c218:	inc    edi
  41c21a:	inc    esp
  41c21b:	(bad)  
  41c21c:	scas   eax,DWORD PTR es:[edi]
  41c21d:	push   0x67
  41c21f:	daa    
  41c220:	push   ecx
  41c221:	push   ecx
  41c222:	jnp    0x41c228
  41c224:	hlt    
  41c225:	inc    edi
  41c226:	(bad)
  41c229:	xor    eax,0x826456ee
  41c22e:	popa   
  41c22f:	stos   DWORD PTR es:[edi],eax
  41c230:	shr    ah,0x72
  41c233:	sbb    DWORD PTR [eax-0x51],esi
  41c236:	xchg   edi,eax
  41c237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c238:	pop    ebp
  41c239:	mov    WORD PTR [edi-0x36],es
  41c23c:	push   0x739f27bc
  41c241:	nop
  41c242:	data16 lods al,BYTE PTR ds:[esi]
  41c244:	je     0x41c250
  41c246:	pop    esp
  41c247:	mov    edx,0x34f5012d
  41c24c:	or     DWORD PTR [edi+0x13],0x7289cf8b
  41c253:	aaa    
  41c254:	or     ch,BYTE PTR [ecx]
  41c256:	or     al,0xd4
  41c258:	cmp    bl,BYTE PTR [esi-0x3e]
  41c25b:	mov    edx,0x6d337885
  41c260:	xchg   si,ax
  41c262:	and    DWORD PTR [ebx],esi
  41c264:	cmp    esp,DWORD PTR [ebx]
  41c266:	sbb    DWORD PTR [ebx],0x5d1e5459
  41c26c:	dec    esi
  41c26d:	jb     0x41c1f5
  41c26f:	cdq    
  41c270:	pop    ecx
  41c271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c273:	jge    0x41c2d5
  41c275:	push   ds
  41c276:	inc    edx
  41c277:	pop    ss
  41c278:	mov    edi,0xd728384d
  41c27d:	sbb    ebp,esi
  41c27f:	dec    DWORD PTR [edx+ebx*1-0x44]
  41c283:	push   ds
  41c284:	inc    ebp
  41c285:	sar    DWORD PTR [edx-0x7fa6699f],0x1b
  41c28c:	mov    dl,BYTE PTR [esi+0x18]
  41c28f:	sbb    dh,BYTE PTR [eax]
  41c291:	fldenv [eax-0x682832b7]
  41c297:	(bad)  
  41c298:	cs pop edi
  41c29a:	jne    0x41c266
  41c29c:	pop    ecx
  41c29d:	inc    edi
  41c29e:	mov    al,gs:0xfea4fe55
  41c2a4:	idiv   BYTE PTR [ecx]
  41c2a6:	(bad)  
  41c2a7:	ficomp WORD PTR [edi-0x29]
  41c2aa:	xchg   edx,eax
  41c2ab:	sub    al,0xb1
  41c2ad:	pop    esi
  41c2ae:	lahf   
  41c2af:	xor    eax,0xf5d2dcfc
  41c2b4:	add    ebp,eax
  41c2b6:	mov    dl,0xd7
  41c2b8:	xchg   edx,eax
  41c2b9:	inc    ebp
  41c2ba:	ficom  WORD PTR [ecx-0x4d]
  41c2bd:	aam    0xbd
  41c2bf:	stc    
  41c2c0:	rol    BYTE PTR [eax-0x4a],1
  41c2c3:	lods   al,BYTE PTR ds:[esi]
  41c2c4:	xchg   ebp,eax
  41c2c5:	jle    0x41c338
  41c2c7:	ins    DWORD PTR es:[edi],dx
  41c2c8:	mov    ds:0x711f288d,al
  41c2cd:	rol    ah,cl
  41c2cf:	sub    DWORD PTR [esi+0x2752a857],esp
  41c2d5:	xor    eax,ebp
  41c2d7:	sub    al,0x9c
  41c2d9:	call   0x35559b3f
  41c2de:	xchg   ebx,eax
  41c2df:	scas   al,BYTE PTR es:[edi]
  41c2e0:	cmp    dl,ah
  41c2e2:	idiv   ecx
  41c2e4:	sbb    ch,BYTE PTR [edx+0x1d8437ac]
  41c2ea:	xchg   DWORD PTR [esi-0x750a7a6d],eax
  41c2f0:	scas   eax,DWORD PTR es:[edi]
  41c2f1:	mov    ds:0x60cce777,eax
  41c2f6:	in     eax,0xd2
  41c2f8:	xor    DWORD PTR [ebx],ebp
  41c2fa:	cmp    al,0xf4
  41c2fc:	ds mov dl,0xc8
  41c2ff:	mov    edx,0xa0862a85
  41c304:	or     DWORD PTR [edi-0x32b33f13],edi
  41c30a:	sub    eax,0x2c48ab8c
  41c30f:	mov    cl,0xfc
  41c311:	(bad)  [eax+0x26]
  41c314:	mov    dl,0x93
  41c316:	out    0x7,al
  41c318:	popa   
  41c319:	je     0x41c323
  41c31b:	xchg   ebx,eax
  41c31c:	xor    al,0x55
  41c31e:	adc    BYTE PTR [ebx],0x3f
  41c321:	dec    esi
  41c322:	push   esp
  41c323:	dec    eax
  41c324:	jp     0x41c348
  41c326:	pop    ds
  41c327:	imul   esp,DWORD PTR [edi-0x5e],0xfffffff9
  41c32b:	es test al,0x5a
  41c32e:	lahf   
  41c32f:	sub    DWORD PTR [edx+0x9],ebx
  41c332:	and    bl,al
  41c334:	mov    dl,0xf5
  41c336:	pushf  
  41c337:	sub    dl,cl
  41c339:	pushf  
  41c33a:	dec    esp
  41c33b:	jns    0x41c395
  41c33d:	mov    DWORD PTR [eax-0x4c],edi
  41c340:	cvtpi2ps xmm2,mm4
  41c343:	iret   
  41c344:	dec    ebx
  41c345:	xor    DWORD PTR [ecx],edx
  41c347:	sbb    ah,BYTE PTR [esi-0x14]
  41c34a:	sub    al,0x82
  41c34c:	mov    eax,0xee208c08
  41c351:	jb     0x41c344
  41c353:	scas   al,BYTE PTR es:[edi]
  41c354:	punpckldq mm6,DWORD PTR [edi-0x10]
  41c358:	pushf  
  41c359:	das    
  41c35a:	jne    0x41c30c
  41c35c:	jbe    0x41c337
  41c35e:	adc    bh,bl
  41c360:	jecxz  0x41c3af
  41c362:	enter  0x3c9c,0x24
  41c366:	mov    bh,0x7c
  41c368:	pop    edx
  41c369:	jge    0x41c34d
  41c36b:	cmp    BYTE PTR [esi-0x15b47663],dh
  41c371:	push   es
  41c372:	adc    DWORD PTR [ecx-0x4],esi
  41c375:	adc    BYTE PTR [esi+eiz*8+0x3],cl
  41c379:	imul   edi,DWORD PTR [ecx],0xffffffdf
  41c37c:	dec    ebp
  41c37d:	lea    esp,[ebp-0x26bab07d]
  41c383:	pop    ecx
  41c384:	pop    esp
  41c385:	xor    DWORD PTR [eax+0x41d992d6],ebp
  41c38b:	gs inc esp
  41c38d:	adc    BYTE PTR [ecx+ebp*1+0x6c8a96cb],bh
  41c394:	xor    bl,bh
  41c396:	sub    bh,BYTE PTR [esi-0x5d]
  41c399:	retf   
  41c39a:	mov    edi,ebp
  41c39c:	in     al,dx
  41c39d:	xchg   BYTE PTR [ebx],bh
  41c39f:	retf   0x5adb
  41c3a2:	sbb    ah,cl
  41c3a4:	idiv   DWORD PTR [ebp+0x3258a114]
  41c3aa:	fisub  DWORD PTR [eax+0x435c841b]
  41c3b0:	imul   esi,esi,0x1533ef78
  41c3b6:	cld    
  41c3b7:	sub    BYTE PTR [esi+esi*4],ah
  41c3ba:	push   esi
  41c3bb:	fisttp QWORD PTR [edx-0x1b3aaa20]
  41c3c1:	inc    edi
  41c3c2:	mov    DWORD PTR [edi+ebp*2+0x5f4969b2],0xe69eb164
  41c3cd:	mov    DWORD PTR [ebx-0x3d94c275],esi
  41c3d3:	test   DWORD PTR [edi],ebp
  41c3d5:	jge    0x41c403
  41c3d7:	sbb    DWORD PTR [edx],ebp
  41c3d9:	cmp    BYTE PTR [esi-0x7d02eedc],al
  41c3df:	or     al,0xed
  41c3e1:	lods   eax,DWORD PTR ds:[esi]
  41c3e2:	sar    BYTE PTR [esi-0x7068cfed],0x7d
  41c3e9:	sub    DWORD PTR [eax+0x3e],0x1d
  41c3ed:	sbb    BYTE PTR [esi+0x626e942d],dh
  41c3f3:	inc    edx
  41c3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f5:	or     DWORD PTR [ebx+ebx*2],edi
  41c3f8:	das    
  41c3f9:	mov    bl,0x6b
  41c3fb:	bound  edx,QWORD PTR [ecx]
  41c3fd:	test   DWORD PTR [edx+0x1a1bc834],0x207c7605
  41c407:	sbb    al,0xab
  41c409:	jge    0x41c3d9
  41c40b:	mov    eax,esi
  41c40d:	iret   
  41c40e:	jae    0x41c436
  41c410:	inc    edx
  41c411:	adc    eax,esp
  41c413:	popa   
  41c414:	jl     0x41c418
  41c416:	adc    al,BYTE PTR es:[esi-0x2258f56e]
  41c41d:	cdq    
  41c41e:	inc    esp
  41c41f:	retf   0xadb
  41c422:	dec    edi
  41c423:	jp     0x41c3f6
  41c425:	call   0x1f01:0xc4ee0293
  41c42c:	fadd   DWORD PTR [ecx+0x74799f25]
  41c432:	xchg   edi,eax
  41c433:	adc    eax,0x25e20584
  41c438:	mov    bl,0x57
  41c43a:	sar    BYTE PTR [eax+0x77],0x22
  41c43e:	ss iret 
  41c440:	jo     0x41c403
  41c442:	aad    0x14
  41c444:	or     al,0x8f
  41c446:	ret    
  41c447:	sti    
  41c448:	fadd   DWORD PTR [esi-0x66]
  41c44b:	loopne 0x41c4bf
  41c44d:	outs   dx,BYTE PTR ds:[esi]
  41c44e:	pop    ss
  41c44f:	rcl    BYTE PTR [edx],cl
  41c451:	cmp    eax,0xd6550192
  41c456:	test   BYTE PTR [ebx+0x7da8539e],0xe2
  41c45d:	cmp    al,0x5
  41c45f:	push   edi
  41c460:	fs jnp 0x41c465
  41c463:	cs pushf 
  41c465:	pop    ss
  41c466:	nop
  41c467:	hlt    
  41c468:	dec    esp
  41c469:	lea    esi,[edi+0x2e]
  41c46c:	lock or edx,DWORD PTR [eax+0x55b8c51a]
  41c473:	add    edx,DWORD PTR [ebx-0x50cb8fae]
  41c479:	xchg   cl,ch
  41c47b:	sbb    esi,DWORD PTR [edi]
  41c47d:	iret   
  41c47e:	inc    edi
  41c47f:	jnp    0x41c443
  41c481:	leave  
  41c482:	in     eax,dx
  41c483:	retf   0x7f15
  41c486:	push   edx
  41c487:	xor    esp,ebp
  41c489:	push   es
  41c48a:	sub    BYTE PTR [edi+ebp*8-0x1f],dh
  41c48e:	add    BYTE PTR [edx-0x570e5a83],cl
  41c494:	sti    
  41c495:	jns    0x41c426
  41c497:	xor    BYTE PTR [ebp+0x7b8ff022],bh
  41c49d:	int    0x59
  41c49f:	xchg   esi,eax
  41c4a0:	pop    edx
  41c4a1:	cmp    BYTE PTR [edx],dh
  41c4a3:	pop    ebx
  41c4a4:	(bad)  
  41c4a5:	ins    DWORD PTR es:[edi],dx
  41c4a6:	xchg   ebp,eax
  41c4a7:	mov    ds:0xebc5790,al
  41c4ac:	mov    ch,0xbd
  41c4ae:	push   ss
  41c4af:	ins    DWORD PTR es:[edi],dx
  41c4b0:	cmp    cl,BYTE PTR [esp+eiz*2]
  41c4b3:	push   esp
  41c4b4:	push   0xe4e10dce
  41c4b9:	sbb    eax,0xaa0c21aa
  41c4be:	dec    edi
  41c4bf:	xchg   esi,eax
  41c4c0:	call   0xa2195372
  41c4c5:	xor    ecx,0x78a775f2
  41c4cb:	retf   
  41c4cc:	push   esi
  41c4cd:	or     al,0x7c
  41c4cf:	dec    ebp
  41c4d0:	or     ah,BYTE PTR [ebx+0x439a5ef6]
  41c4d6:	adc    BYTE PTR [ebp+0x5b],al
  41c4d9:	mov    bl,0x41
  41c4db:	mov    cl,0x2e
  41c4dd:	call   0x8ba6f821
  41c4e2:	(bad)  
  41c4e4:	mov    ch,0x94
  41c4e6:	mov    esp,0xbf25911e
  41c4eb:	and    ebx,0x17b03769
  41c4f1:	and    eax,0x97cf8355
  41c4f6:	lahf   
  41c4f7:	cdq    
  41c4f8:	test   DWORD PTR [eax-0x60],ebp
  41c4fb:	(bad)
  41c4ff:	ins    BYTE PTR es:[edi],dx
  41c500:	dec    eax
  41c501:	xchg   ebp,eax
  41c502:	fwait
  41c503:	ret    0x299
  41c506:	retf   0x8a78
  41c509:	test   eax,0xe89ea6eb
  41c50e:	int    0x7
  41c510:	pop    ds
  41c511:	cmp    DWORD PTR ds:0xc71449be,edx
  41c518:	aad    0x50
  41c51a:	pop    ecx
  41c51b:	push   esp
  41c51c:	fld    DWORD PTR [ebx-0x57e3b151]
  41c522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c523:	jecxz  0x41c4bd
  41c525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c526:	pop    ecx
  41c527:	ja     0x41c4e2
  41c529:	xchg   edx,eax
  41c52a:	push   ss
  41c52b:	inc    edx
  41c52c:	push   ds
  41c52d:	jmp    0x6eb7:0x4e83cab2
  41c534:	shl    DWORD PTR [ecx-0x10],1
  41c537:	mov    eax,0x154b5796
  41c53c:	ret    
  41c53d:	mov    esi,cs
  41c53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c540:	inc    ebp
  41c541:	xchg   esi,eax
  41c542:	ja     0x41c50d
  41c544:	pop    ebp
  41c545:	mov    ebx,0x41eefd15
  41c54a:	loopne 0x41c5a0
  41c54c:	xor    eax,0xc22c32f7
  41c551:	in     eax,0xf2
  41c553:	(bad)  
  41c554:	or     BYTE PTR [edx],dh
  41c556:	popa   
  41c557:	pop    ebp
  41c558:	pushf  
  41c559:	cmp    dh,BYTE PTR [eax]
  41c55b:	inc    ebp
  41c55c:	fs xchg esi,eax
  41c55e:	rcl    BYTE PTR [esi],0x40
  41c561:	ss popa 
  41c563:	xor    DWORD PTR [edx+0x2a88ce5],edi
  41c569:	inc    eax
  41c56a:	push   edx
  41c56b:	adc    eax,0xfcabcccf
  41c570:	les    eax,FWORD PTR [edx]
  41c572:	call   0xf390cd76
  41c577:	gs sahf 
  41c579:	push   0xfffffffd
  41c57b:	jg     0x41c502
  41c57d:	mov    ?,WORD PTR [edi+0x4f]
  41c580:	jnp    0x41c5a8
  41c582:	int    0xb8
  41c584:	sub    esp,esp
  41c586:	push   esi
  41c587:	lahf   
  41c588:	adc    eax,DWORD PTR [ebx-0x2a]
  41c58b:	mov    ecx,0x52029e1c
  41c590:	sahf   
  41c591:	daa    
  41c592:	push   0x8af68707
  41c597:	dec    esi
  41c598:	xor    ah,ah
  41c59a:	add    cl,cl
  41c59c:	repnz mov ebp,0x7afd64b7
  41c5a2:	and    al,0x36
  41c5a4:	sub    BYTE PTR [edi+0x17cae41c],cl
  41c5aa:	leave  
  41c5ab:	xor    eax,0x51de16e
  41c5b0:	loop   0x41c59f
  41c5b2:	loopne 0x41c632
  41c5b4:	outs   dx,DWORD PTR ds:[esi]
  41c5b5:	fldlg2 
  41c5b7:	out    0x47,eax
  41c5b9:	sbb    ebx,DWORD PTR ds:0xaf18bbdb
  41c5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5c0:	pop    esi
  41c5c1:	jne    0x41c631
  41c5c3:	outs   dx,BYTE PTR ds:[esi]
  41c5c4:	sahf   
  41c5c5:	idiv   DWORD PTR [eax]
  41c5c7:	repz fst QWORD PTR [esi+0x39e5f497]
  41c5ce:	xchg   edi,eax
  41c5cf:	push   ebp
  41c5d0:	xor    esp,DWORD PTR [ebx-0x3d]
  41c5d3:	or     BYTE PTR [ebx-0x4a],dh
  41c5d6:	outs   dx,DWORD PTR ds:[esi]
  41c5d7:	or     BYTE PTR [ebp-0x18],bh
  41c5da:	push   cs
  41c5db:	imul   ebx,DWORD PTR [ecx-0x4a095fb8],0x38fcced9
  41c5e5:	out    dx,eax
  41c5e6:	sub    al,0xd0
  41c5e8:	lock jge 0x41c5fc
  41c5eb:	and    esi,DWORD PTR [edi]
  41c5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ee:	into   
  41c5ef:	int3   
  41c5f0:	cld    
  41c5f1:	popa   
  41c5f2:	push   edx
  41c5f3:	add    BYTE PTR [edi+ecx*1+0x55],ah
  41c5f7:	adc    eax,DWORD PTR [esi]
  41c5f9:	ja     0x41c636
  41c5fb:	inc    ebp
  41c5fc:	jp     0x41c678
  41c5fe:	inc    ebx
  41c5ff:	cmp    edi,DWORD PTR [edx]
  41c601:	xchg   edi,eax
  41c602:	stc    
  41c603:	call   0x7c2f:0x93d5f6a7
  41c60a:	inc    ebx
  41c60b:	add    ecx,edx
  41c60d:	cmp    al,BYTE PTR [edx+0x741f9465]
  41c613:	xchg   esp,eax
  41c614:	popa   
  41c615:	imul   esi,esp,0xc6fde00
  41c61b:	test   eax,0x57c76e97
  41c620:	ret    
  41c621:	(bad)  
  41c622:	addr16 fs mov ecx,edx
  41c626:	in     eax,dx
  41c627:	jnp    0x41c674
  41c629:	daa    
  41c62a:	sub    edx,0xffffffbf
  41c62d:	fucomip st,st(1)
  41c62f:	inc    BYTE PTR [ecx+0x3d]
  41c632:	mov    BYTE PTR [ecx],ch
  41c634:	shl    BYTE PTR [esi],0xdf
  41c637:	repz xchg edx,eax
  41c639:	lods   eax,DWORD PTR ds:[esi]
  41c63a:	inc    esp
  41c63b:	popa   
  41c63c:	leave  
  41c63d:	popf   
  41c63e:	(bad)  
  41c640:	ja     0x41c651
  41c642:	icebp  
  41c643:	sub    al,0xd9
  41c645:	pop    ecx
  41c646:	jbe    0x41c6a3
  41c648:	test   al,0x62
  41c64a:	rol    BYTE PTR [edi],1
  41c64c:	xor    eax,0xc9d42804
  41c651:	or     eax,0xec319256
  41c656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c657:	jno    0x41c695
  41c659:	ret    0x6c99
  41c65c:	push   ecx
  41c65d:	xor    al,0x52
  41c65f:	rol    BYTE PTR [ecx+0x5f],cl
  41c662:	lods   eax,DWORD PTR ds:[esi]
  41c663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c664:	ins    BYTE PTR es:[edi],dx
  41c665:	inc    esi
  41c666:	jmp    0x41c67d
  41c668:	dec    edi
  41c669:	jne    0x41c6b1
  41c66b:	fidivr DWORD PTR [eax]
  41c66d:	repnz repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c670:	xlat   BYTE PTR ds:[ebx]
  41c671:	mov    edi,0xe2e27146
  41c676:	pop    esp
  41c677:	mov    al,0x7d
  41c679:	mov    ?,WORD PTR [eax]
  41c67b:	aad    0xfa
  41c67d:	inc    edi
  41c67e:	into   
  41c67f:	stos   DWORD PTR es:[edi],eax
  41c680:	mov    ds:0x4d2ce091,eax
  41c685:	mov    ch,0xa1
  41c687:	cmp    al,0x69
  41c689:	mov    ah,BYTE PTR [esi]
  41c68b:	mov    ch,0xe
  41c68d:	pop    DWORD PTR [ebp-0x48]
  41c690:	sub    esp,DWORD PTR [eax+0x5359aee9]
  41c696:	xor    BYTE PTR [ebx-0x4f0acad7],dh
  41c69c:	ficom  DWORD PTR [esi-0x49]
  41c69f:	pop    eax
  41c6a0:	push   eax
  41c6a1:	cmp    eax,0xfdb40684
  41c6a6:	aas    
  41c6a7:	imul   esp,ecx,0x27161d9a
  41c6ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6ae:	mov    al,0x3f
  41c6b0:	int3   
  41c6b1:	cli    
  41c6b2:	fsubr  DWORD PTR [esi+eax*1]
  41c6b5:	fidivr DWORD PTR [eax-0x29917fdd]
  41c6bb:	js     0x41c6e3
  41c6bd:	sahf   
  41c6be:	pop    ds
  41c6bf:	pop    esp
  41c6c0:	adc    DWORD PTR [edx-0x69],esp
  41c6c3:	std    
  41c6c4:	enter  0x3e1c,0xd6
  41c6c8:	jnp    0x41c6d2
  41c6ca:	dec    edx
  41c6cb:	mov    eax,0x6d19073
  41c6d0:	sbb    al,0x44
  41c6d2:	sub    al,0x91
  41c6d4:	jmp    0x41c6c3
  41c6d6:	pop    esp
  41c6d7:	push   esi
  41c6d8:	xchg   ecx,eax
  41c6d9:	mov    ecx,0x49e6eba
  41c6de:	jmp    0xd441477
  41c6e3:	mov    WORD PTR [esp+edx*4+0x67f761b6],cs
  41c6ea:	outs   dx,BYTE PTR ds:[si]
  41c6ec:	cdq    
  41c6ed:	mov    ebx,0xe56d3983
  41c6f2:	dec    eax
  41c6f3:	lds    ecx,FWORD PTR [ecx-0x45]
  41c6f6:	repz cs inc ebx
  41c6f9:	mov    dl,0x82
  41c6fb:	fnsave [esi-0x68e52d01]
  41c701:	jecxz  0x41c686
  41c703:	cld    
  41c704:	retf   0x18ff
  41c707:	adc    eax,0x6661ea95
  41c70c:	jge    0x41c6ec
  41c70e:	add    DWORD PTR [ebx-0xe261a7b],0xffffffb9
  41c715:	les    esp,FWORD PTR [eax+0x59]
  41c718:	dec    edi
  41c719:	test   BYTE PTR [edx+ecx*4+0x85e90ab],bh
  41c720:	inc    esi
  41c721:	sub    DWORD PTR [esi-0xa40fa57],0xf87c5bc8
  41c72b:	push   ds
  41c72c:	bound  edx,QWORD PTR [ebp+0x8]
  41c72f:	jmp    0x41c75f
  41c731:	pop    ss
  41c732:	add    dl,BYTE PTR [ebx+0x42157a23]
  41c738:	jo     0x41c6ea
  41c73a:	rcl    BYTE PTR [ecx-0x3a],cl
  41c73d:	dec    DWORD PTR [eax]
  41c73f:	fcom   DWORD PTR [edx-0x28]
  41c742:	inc    edx
  41c743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c744:	inc    ecx
  41c745:	inc    ebp
  41c746:	fsubr  QWORD PTR [ebp+0x75]
  41c749:	mov    DWORD PTR [edi],ebp
  41c74b:	outs   dx,BYTE PTR ds:[esi]
  41c74c:	cwde   
  41c74d:	pop    edx
  41c74e:	scas   al,BYTE PTR es:[edi]
  41c74f:	into   
  41c750:	(bad)  
  41c751:	pop    esp
  41c752:	dec    esp
  41c753:	push   cs
  41c754:	push   esi
  41c755:	shl    BYTE PTR [edx+0xa6c47cd],1
  41c75b:	jp     0x41c792
  41c75d:	xor    ah,dl
  41c75f:	inc    eax
  41c760:	pop    es
  41c761:	cwde   
  41c762:	stos   DWORD PTR es:[edi],eax
  41c763:	in     eax,dx
  41c764:	sbb    BYTE PTR [eax-0x69],0x85
  41c768:	pop    esp
  41c769:	test   al,0xe3
  41c76b:	stos   BYTE PTR es:[edi],al
  41c76c:	or     eax,0xfb14151
  41c771:	and    BYTE PTR ds:0x8df0dcea,0x24
  41c778:	jmp    0x7733bdcb
  41c77d:	cmp    al,0x53
  41c780:	ss ret 
  41c782:	shr    ebx,1
  41c784:	int    0x63
  41c786:	jl     0x41c7b1
  41c788:	pop    edx
  41c789:	std    
  41c78a:	ins    DWORD PTR es:[edi],dx
  41c78b:	sbb    BYTE PTR [edi+eax*1],0x59
  41c78f:	addr16 mov ch,0x47
  41c792:	adc    eax,0xa698327e
  41c797:	mov    eax,ds:0xe61f05c
  41c79c:	mov    ebp,0x3d2bf502
  41c7a1:	pop    es
  41c7a2:	es jmp 0x9602:0x1e932c37
  41c7aa:	(bad)  
  41c7ab:	push   ebp
  41c7ac:	mov    edi,0x4630180
  41c7b1:	cmp    bl,dh
  41c7b3:	add    edi,0x91ee09f8
  41c7b9:	sbb    eax,0x97c3b6cb
  41c7be:	pop    edi
  41c7bf:	(bad)  
  41c7c0:	push   0x28
  41c7c2:	stc    
  41c7c3:	test   eax,0x8d21e1d0
  41c7c8:	ins    BYTE PTR es:[edi],dx
  41c7c9:	sbb    al,0x4d
  41c7cb:	outs   dx,DWORD PTR ds:[esi]
  41c7cc:	popf   
  41c7cd:	fmul   QWORD PTR [eax+0x6b]
  41c7d0:	(bad)  
  41c7d1:	or     DWORD PTR [edi-0x67605ac5],esi
  41c7d7:	in     al,dx
  41c7d8:	push   edi
  41c7d9:	jne    0x41c855
  41c7db:	in     eax,dx
  41c7dc:	adc    DWORD PTR [edx+0x67],edx
  41c7df:	shl    BYTE PTR [ebx],cl
  41c7e1:	jmp    0x2219f41d
  41c7e6:	sbb    al,0xbb
  41c7e8:	xchg   ecx,eax
  41c7e9:	cbw    
  41c7eb:	ja     0x41c7d0
  41c7ed:	cmp    ebp,ebp
  41c7ef:	adc    eax,0x4967d1fd
  41c7f4:	call   DWORD PTR [eax]
  41c7f6:	shl    eax,0x61
  41c7f9:	js     0x41c7c3
  41c7fb:	ja     0x41c82c
  41c7fd:	mov    dh,0x1a
  41c7ff:	out    dx,eax
  41c800:	ret    0x47da
  41c803:	imul   ebp,DWORD PTR [edi],0xc77b5c8
  41c809:	lahf   
  41c80a:	mov    ecx,0x931581e1
  41c80f:	mov    dh,0x75
  41c811:	or     bl,BYTE PTR [edx+0x6f]
  41c814:	lock in eax,dx
  41c816:	adc    al,0xea
  41c818:	push   es
  41c819:	mov    WORD PTR ds:0x72de53f5,gs
  41c81f:	cli    
  41c820:	rcr    bh,1
  41c822:	mov    al,ds:0xd0eb144
  41c827:	dec    eax
  41c828:	cmp    al,0xb5
  41c82a:	jge    0x41c7bd
  41c82c:	jecxz  0x41c7d9
  41c82e:	jge    0x41c808
  41c830:	sub    cl,bl
  41c832:	ins    BYTE PTR es:[edi],dx
  41c833:	(bad)  
  41c834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c835:	add    al,0x68
  41c837:	sahf   
  41c838:	push   cs
  41c839:	jo     0x41c7f3
  41c83b:	add    ah,dh
  41c83d:	pop    ebx
  41c83e:	add    eax,0x5fc198b9
  41c843:	lods   eax,DWORD PTR ds:[esi]
  41c844:	inc    edi
  41c845:	ja     0x41c8a0
  41c847:	ror    DWORD PTR [ebp-0xb],cl
  41c84a:	(bad)  
  41c84b:	sub    eax,0xa8c2e4f4
  41c850:	xchg   ecx,eax
  41c851:	jbe    0x41c839
  41c853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c854:	pop    eax
  41c855:	sub    ch,BYTE PTR [edi+0x1c69aba5]
  41c85b:	mov    BYTE PTR [eax-0x12],ch
  41c85e:	into   
  41c85f:	cwde   
  41c860:	adc    eax,0x4f391164
  41c865:	xchg   DWORD PTR [edi-0x62],ebx
  41c868:	or     ah,BYTE PTR cs:[eax+0x61]
  41c86c:	pop    ds
  41c86d:	ror    BYTE PTR [edi-0x5e],0x9b
  41c871:	out    0x27,eax
  41c873:	mov    edi,0xc069aae8
  41c878:	mov    bl,0x40
  41c87a:	and    ch,BYTE PTR [ecx-0x1]
  41c87d:	jo     0x41c845
  41c87f:	jmp    0x41c8b3
  41c881:	out    dx,al
  41c882:	ret    
  41c883:	daa    
  41c884:	fnstenv [edx+0x7c]
  41c887:	pop    edx
  41c888:	ins    DWORD PTR es:[edi],dx
  41c889:	mov    cl,0xe0
  41c88b:	push   ss
  41c88c:	or     al,BYTE PTR [ebx-0x20f3469]
  41c892:	push   ecx
  41c893:	add    al,0x59
  41c895:	mov    ah,BYTE PTR [ecx-0x4dcc46a8]
  41c89b:	inc    eax
  41c89c:	add    DWORD PTR [ecx+0x1f],0x4e
  41c8a0:	inc    esi
  41c8a1:	popf   
  41c8a2:	fs jne 0x41c8db
  41c8a5:	sbb    BYTE PTR [ecx-0x22],0x66
  41c8a9:	in     eax,0xc7
  41c8ab:	int3   
  41c8ac:	jnp    0x41c849
  41c8ae:	ja     0x41c85e
  41c8b0:	adc    eax,0x16e47418
  41c8b5:	ficom  WORD PTR [ebx-0x68]
  41c8b8:	mov    esi,0x9e174fa8
  41c8bd:	pop    eax
  41c8be:	or     ax,0xb8f3
  41c8c2:	mov    ch,0x4c
  41c8c4:	mov    dl,0xd6
  41c8c6:	push   eax
  41c8c7:	jno    0x41c852
  41c8c9:	cli    
  41c8ca:	je     0x41c902
  41c8cc:	iret   
  41c8cd:	clc    
  41c8ce:	into   
  41c8cf:	out    0xfe,eax
  41c8d1:	xor    BYTE PTR [ebp-0x130dad35],dl
  41c8d7:	adc    edi,DWORD PTR [eax-0xe]
  41c8da:	sbb    eax,0xe58ff26e
  41c8df:	cs xchg edx,eax
  41c8e1:	push   eax
  41c8e2:	xor    eax,0x1054c073
  41c8e7:	daa    
  41c8e8:	pop    eax
  41c8e9:	aas    
  41c8ea:	lods   al,BYTE PTR ds:[esi]
  41c8eb:	js     0x41c907
  41c8ed:	mov    ch,0xd8
  41c8ef:	xchg   esi,eax
  41c8f0:	and    al,0xf7
  41c8f2:	and    eax,0xf6aa76ee
  41c8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8f8:	mov    al,0xe1
  41c8fa:	ja     0x41c890
  41c8fc:	sbb    DWORD PTR [eax-0x1d6e44c3],edi
  41c902:	add    bh,ch
  41c904:	push   esi
  41c905:	or     al,0x13
  41c907:	inc    ebx
  41c908:	test   DWORD PTR [ecx-0x57],edi
  41c90b:	jns    0x41c8d2
  41c90d:	pop    ecx
  41c90e:	leave  
  41c90f:	mov    al,ds:0xabd353a6
  41c914:	inc    ebx
  41c915:	pop    edx
  41c916:	je     0x41c90c
  41c918:	push   edi
  41c919:	dec    BYTE PTR [esi-0x759d0ee0]
  41c91f:	xor    DWORD PTR [ecx-0x2a649d92],ebp
  41c925:	sbb    bh,BYTE PTR [ebp-0x6cb2a8e9]
  41c92b:	in     al,dx
  41c92c:	fimul  WORD PTR [edx+0x39]
  41c92f:	cli    
  41c930:	inc    edi
  41c931:	jae    0x41c903
  41c933:	rcr    BYTE PTR [eax],cl
  41c935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c937:	mov    al,ds:0x3b2e280d
  41c93c:	sbb    al,0x4
  41c93e:	sahf   
  41c93f:	dec    edi
  41c940:	mov    ch,0xaf
  41c942:	in     eax,0x0
  41c944:	xchg   BYTE PTR [ebp-0x6a],dh
  41c947:	mov    bh,0xe5
  41c949:	mov    WORD PTR [eax-0x1e],es
  41c94c:	retf   0x1554
  41c94f:	jmp    0xced1:0x14e89993
  41c956:	or     eax,DWORD PTR [ecx-0x5]
  41c959:	mov    ebx,0xb37d9ce3
  41c95e:	mov    ebp,0x786211bb
  41c964:	xor    eax,DWORD PTR [edi]
  41c966:	xchg   edx,eax
  41c967:	(bad)  
  41c968:	mov    al,ds:0x50f3a0c3
  41c96d:	cmp    ah,BYTE PTR [edi+0x65]
  41c970:	xor    eax,0x84d59b90
  41c975:	test   DWORD PTR [ecx],eax
  41c977:	sahf   
  41c978:	ins    DWORD PTR es:[di],dx
  41c97a:	jl     0x41c985
  41c97c:	push   ds
  41c97d:	and    DWORD PTR [edi+ebx*1+0x77],ebx
  41c981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c982:	aad    0x80
  41c984:	adc    esi,DWORD PTR [ecx+0x7c862d5e]
  41c98a:	xor    BYTE PTR [ebp-0xe39d75b],ch
  41c990:	lahf   
  41c991:	sbb    edi,esp
  41c993:	call   0x6057b12f
  41c998:	ret    0x8f96
  41c99b:	dec    ebx
  41c99c:	sub    bh,dh
  41c99e:	mov    DWORD PTR [edx+0x7e6add8b],0xc3414a73
  41c9a8:	push   0x13
  41c9aa:	sbb    BYTE PTR [ebp+0x22d52739],ch
  41c9b0:	xchg   esi,eax
  41c9b1:	add    BYTE PTR [eax+esi*1-0x58],0x70
  41c9b6:	add    BYTE PTR [ebp-0x793b4298],0xc9
  41c9bd:	jge    0x41c992
  41c9bf:	ret    
  41c9c0:	(bad)  
  41c9c2:	in     eax,0x5e
  41c9c4:	pop    esp
  41c9c5:	add    edi,0xdc12e1d4
  41c9cb:	popa   
  41c9cc:	pop    esi
  41c9cd:	sar    BYTE PTR [edi+0x5b08ad02],1
  41c9d3:	adc    BYTE PTR [eax+ecx*2],al
  41c9d6:	cs sbb edi,esi
  41c9d9:	pop    ds
  41c9da:	into   
  41c9db:	dec    ebx
  41c9dc:	in     eax,0x25
  41c9de:	pop    ebx
  41c9df:	mov    ebx,0x2a3eff41
  41c9e4:	mov    ecx,0x341d6c
  41c9e9:	xor    BYTE PTR [ebx-0x27558d79],bh
  41c9ef:	pop    esp
  41c9f0:	cmp    dh,BYTE PTR [esi-0x7fcad7aa]
  41c9f6:	pop    esi
  41c9f7:	div    ah
  41c9f9:	xchg   esp,eax
  41c9fa:	pop    esi
  41c9fb:	xor    DWORD PTR [edi+0x7ac61c37],esi
  41ca01:	and    bl,BYTE PTR [edx+0x1acce71a]
  41ca07:	sub    al,0x7f
  41ca09:	push   esp
  41ca0a:	lds    ebx,FWORD PTR [ebx]
  41ca0c:	jnp    0x41c9e1
  41ca0e:	pop    ebx
  41ca0f:	lahf   
  41ca10:	bound  esi,QWORD PTR [edx+0x32]
  41ca13:	and    eax,0xcd804d42
  41ca18:	adc    ah,cl
  41ca1a:	add    DWORD PTR [esi-0x27bf0766],0xffffff97
  41ca21:	push   ebx
  41ca22:	xchg   ecx,eax
  41ca23:	sbb    ch,BYTE PTR [ebx]
  41ca25:	pop    eax
  41ca26:	mov    edx,0xdbf773fb
  41ca2b:	dec    edx
  41ca2c:	ins    DWORD PTR es:[edi],dx
  41ca2d:	mov    ah,0xba
  41ca2f:	xchg   edi,eax
  41ca30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca31:	int3   
  41ca32:	addr16 int3 
  41ca34:	popa   
  41ca35:	hlt    
  41ca36:	mov    ds:0xbf7bdd75,al
  41ca3b:	sbb    bh,BYTE PTR ds:0xce2e8148
  41ca41:	add    edx,edx
  41ca43:	les    esp,FWORD PTR [eax-0x59]
  41ca46:	gs sbb esi,ebx
  41ca49:	mov    al,0x68
  41ca4b:	vrsqrtss xmm0,xmm0,xmm4
  41ca4f:	xchg   DWORD PTR [eax],ecx
  41ca51:	and    esp,DWORD PTR [edi-0x5d]
  41ca54:	ins    BYTE PTR es:[edi],dx
  41ca55:	loop   0x41cac7
  41ca57:	daa    
  41ca58:	out    0xa7,al
  41ca5a:	dec    edi
  41ca5b:	aaa    
  41ca5c:	js     0x41ca12
  41ca5e:	lods   eax,DWORD PTR ds:[esi]
  41ca5f:	jns    0x41caa7
  41ca61:	cmc    
  41ca62:	imul   esi,DWORD PTR [ebx],0xffffff89
  41ca65:	stos   DWORD PTR es:[edi],eax
  41ca66:	icebp  
  41ca67:	sbb    al,0x38
  41ca69:	(bad)  
  41ca6a:	pop    ebp
  41ca6b:	out    0xf8,eax
  41ca6d:	sub    al,ch
  41ca6f:	push   0x22a67fba
  41ca74:	fist   WORD PTR [edx+0x78ea3fce]
  41ca7a:	sahf   
  41ca7b:	icebp  
  41ca7c:	call   0xf6abf413
  41ca81:	je     0x41ca1c
  41ca83:	add    eax,DWORD PTR [eax-0x47]
  41ca86:	xor    bl,BYTE PTR [ebx]
  41ca88:	mov    eax,0xabfbe0b
  41ca8d:	xchg   esp,eax
  41ca8e:	rcl    ah,1
  41ca90:	mov    ah,0xca
  41ca92:	fmul   QWORD PTR [eax]
  41ca94:	and    BYTE PTR [ebp-0x7bf39432],bh
  41ca9a:	in     eax,dx
  41ca9b:	loop   0x41ca80
  41ca9d:	rcl    DWORD PTR [edi+esi*8+0x1b],1
  41caa1:	repz pop esi
  41caa3:	int3   
  41caa4:	es inc ebx
  41caa6:	pop    ebx
  41caa7:	out    dx,eax
  41caa8:	in     eax,0x8b
  41caaa:	int3   
  41caab:	(bad)  
  41caac:	leave  
  41caad:	das    
  41caae:	test   al,0x9e
  41cab0:	call   0xb6b5c7d3
  41cab5:	fdiv   st(0),st
  41cab7:	mov    ds:0xad7d5394,al
  41cabc:	stc    
  41cabd:	sub    dl,BYTE PTR [edx-0x24c0097c]
  41cac3:	bound  esp,QWORD PTR [ebx-0x2781e709]
  41cac9:	xor    eax,0xf4950184
  41cace:	push   esp
  41cacf:	js     0x41caea
  41cad1:	outs   dx,BYTE PTR ds:[esi]
  41cad2:	call   0x653ec9e5
  41cad7:	cmp    ebx,DWORD PTR [edi]
  41cad9:	mov    edi,0x821ce6a6
  41cade:	mov    al,ds:0xab59b9b2
  41cae3:	xchg   esi,eax
  41cae4:	xor    esi,ebx
  41cae6:	das    
  41cae7:	lods   al,BYTE PTR ds:[esi]
  41cae8:	shl    BYTE PTR [ebp+0x43],0x61
  41caec:	in     al,0xa4
  41caee:	test   eax,0x75358706
  41caf3:	or     BYTE PTR [ecx-0x39],ah
  41caf6:	std    
  41caf7:	inc    ebp
  41caf8:	fstp   QWORD PTR [bp+si+0x7e84]
  41cafd:	lock mov ?,WORD PTR [eax]
  41cb00:	and    DWORD PTR [edx-0x1],ebp
  41cb03:	lock loop 0x41caee
  41cb06:	mov    esp,0x1a5148ef
  41cb0b:	sbb    BYTE PTR [ebx-0x6],bl
  41cb0e:	mov    bh,0x5f
  41cb10:	mov    bl,BYTE PTR [ebx]
  41cb12:	cli    
  41cb13:	jg     0x41caa5
  41cb15:	xchg   DWORD PTR [edi+ebp*4+0x3e6c60fc],esi
  41cb1c:	(bad)  
  41cb1d:	mov    dh,0x9d
  41cb1f:	sbb    BYTE PTR [esi+0x8b92b3a],0xd3
  41cb26:	push   esp
  41cb27:	fnop   
  41cb29:	(bad)  
  41cb2a:	pop    edx
  41cb2b:	inc    ecx
  41cb2c:	(bad)  
  41cb2d:	mov    edi,0x8bd68338
  41cb32:	mov    edx,0x8e292f45
  41cb37:	jno    0x41cb65
  41cb39:	pop    ss
  41cb3a:	aas    
  41cb3b:	xchg   edx,eax
  41cb3c:	sbb    esi,DWORD PTR [ecx-0x6c]
  41cb3f:	leave  
  41cb40:	jge    0x41cb41
  41cb42:	in     al,0x9a
  41cb44:	pusha  
  41cb45:	pop    ebp
  41cb46:	add    ah,BYTE PTR [edx+0x6b20388]
  41cb4c:	sub    DWORD PTR ss:[eax],esp
  41cb4f:	pop    ecx
  41cb50:	les    ebp,FWORD PTR [ebx]
  41cb52:	ret    0xe3a4
  41cb55:	aaa    
  41cb56:	stos   BYTE PTR es:[edi],al
  41cb57:	mov    BYTE PTR [edi-0x1f],cl
  41cb5a:	or     al,0xf1
  41cb5c:	es sbb al,0x60
  41cb5f:	jg     0x41cb37
  41cb61:	cmp    BYTE PTR [ecx*2+0x24aeab1f],cl
  41cb68:	loopne 0x41cb16
  41cb6a:	or     eax,0x3eca0248
  41cb6f:	xlat   BYTE PTR ds:[ebx]
  41cb70:	sbb    edi,DWORD PTR [esp+ecx*1]
  41cb73:	push   esi
  41cb74:	pop    ds
  41cb75:	and    DWORD PTR [esp+ecx*1+0x37],ebp
  41cb79:	jmp    0xa58a1123
  41cb7e:	push   ds
  41cb7f:	mov    eax,0xe1cfa98a
  41cb84:	xor    BYTE PTR [edi],al
  41cb86:	scas   eax,DWORD PTR es:[edi]
  41cb87:	cwde   
  41cb88:	ss pushf 
  41cb8a:	mov    dh,0x43
  41cb8c:	jg     0x41cbae
  41cb8e:	jp     0x41cb38
  41cb90:	inc    ecx
  41cb91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb92:	popa   
  41cb93:	lods   eax,DWORD PTR ds:[esi]
  41cb94:	repz imul edx,DWORD PTR [edi],0xe89d6573
  41cb9b:	stos   BYTE PTR es:[edi],al
  41cb9c:	popf   
  41cb9d:	mov    dl,0x77
  41cb9f:	xchg   ebx,eax
  41cba0:	mov    ebp,ds
  41cba2:	out    0x10,al
  41cba4:	shr    eax,0x6
  41cba7:	mov    al,ds:0x172f4c92
  41cbac:	adc    al,0x42
  41cbae:	outs   dx,BYTE PTR ds:[esi]
  41cbaf:	push   edi
  41cbb0:	dec    ecx
  41cbb1:	das    
  41cbb2:	(bad)  
  41cbb3:	jp     0x41cb6d
  41cbb5:	cs dec ecx
  41cbb7:	add    edi,DWORD PTR [esi-0xadff77a]
  41cbbd:	repz stc 
  41cbbf:	xchg   ebp,eax
  41cbc0:	sbb    eax,0x1ddd754d
  41cbc5:	(bad)  
  41cbc6:	nop
  41cbc7:	in     eax,dx
  41cbc8:	daa    
  41cbc9:	mov    bl,0x4d
  41cbcb:	into   
  41cbcc:	nop
  41cbcd:	xor    DWORD PTR [ebp-0x4f],esp
  41cbd0:	out    0x47,al
  41cbd2:	(bad)  
  41cbd3:	lock mov edx,0x279705f3
  41cbd9:	je     0x41cc41
  41cbdb:	mov    ebx,0xf293292f
  41cbe0:	push   esi
  41cbe1:	popa   
  41cbe2:	jns    0x41cbba
  41cbe4:	push   ss
  41cbe5:	dec    esp
  41cbe6:	adc    eax,0x122ed84c
  41cbeb:	in     eax,0x0
  41cbed:	daa    
  41cbee:	or     al,0x2b
  41cbf0:	icebp  
  41cbf1:	(bad)  
  41cbf2:	imul   ecx,edi,0x36f3f340
  41cbf8:	(bad)  
  41cbfa:	fld    DWORD PTR [ecx]
  41cbfc:	add    al,0x68
  41cbfe:	add    BYTE PTR [ecx+edi*2-0x33],dl
  41cc02:	add    BYTE PTR [ebx+0x3247ad21],dh
  41cc08:	stos   BYTE PTR es:[edi],al
  41cc09:	add    ebp,DWORD PTR [esi-0x1d05a50e]
  41cc0f:	mov    eax,ds:0x62e31830
  41cc14:	jp     0x41cb9d
  41cc16:	loopne 0x41cc6c
  41cc18:	jo     0x41cc6f
  41cc1a:	and    edx,ebx
  41cc1c:	gs dec edi
  41cc1e:	jg     0x41cc3d
  41cc20:	xor    al,0x1c
  41cc22:	rcr    edi,cl
  41cc24:	cs je  0x41cbdc
  41cc27:	pop    ebx
  41cc28:	mov    BYTE PTR [esi],ch
  41cc2a:	jmp    0x15d08934
  41cc2f:	jno    0x41cbee
  41cc31:	xor    eax,0x4ba46d6a
  41cc36:	iret   
  41cc37:	pop    edx
  41cc38:	pop    es
  41cc39:	outs   dx,DWORD PTR ds:[esi]
  41cc3a:	or     ch,BYTE PTR [ebp-0x5a]
  41cc3d:	mov    dh,0x57
  41cc3f:	int3   
  41cc40:	inc    eax
  41cc41:	and    edi,esi
  41cc43:	scas   al,BYTE PTR es:[edi]
  41cc44:	addr16 std 
  41cc46:	or     al,0x58
  41cc48:	jnp    0x41cbca
  41cc4a:	jnp    0x41ccb5
  41cc4c:	je     0x41cbef
  41cc4e:	xchg   DWORD PTR [ebx+0x6cdc4876],edi
  41cc54:	adc    eax,0x34720756
  41cc59:	test   eax,0x4ffb60c8
  41cc5e:	xchg   ebx,eax
  41cc5f:	test   dh,0xc4
  41cc62:	rcr    DWORD PTR [esi+0x54afa879],cl
  41cc68:	add    BYTE PTR [edx],bl
  41cc6a:	mov    eax,ds:0xced7707b
  41cc6f:	fisub  WORD PTR [ebp+ebp*1+0x49]
  41cc73:	outs   dx,BYTE PTR cs:[esi]
  41cc75:	mov    ecx,0x21b0d1b8
  41cc7a:	mov    esi,0xb00e7d87
  41cc7f:	mov    al,0x80
  41cc81:	mov    dl,0xa4
  41cc83:	cmp    DWORD PTR [edx+0x78],0xffffff9c
  41cc87:	shr    edx,0x8f
  41cc8a:	ret    
  41cc8b:	dec    ebp
  41cc8c:	stos   BYTE PTR es:[edi],al
  41cc8d:	leave  
  41cc8e:	and    edx,DWORD PTR [ecx-0x4]
  41cc91:	repz test al,dh
  41cc94:	cmp    BYTE PTR [ecx+0x7244996b],bh
  41cc9a:	call   edi
  41cc9c:	cmovno esp,DWORD PTR [esp+edi*1-0x67efbf17]
  41cca4:	es stc 
  41cca6:	add    DWORD PTR [edx-0x79],ecx
  41cca9:	repz fisttp DWORD PTR [edi+0x64cbbaf7]
  41ccb0:	int3   
  41ccb1:	fs daa 
  41ccb3:	sbb    BYTE PTR [eax],0xea
  41ccb6:	sahf   
  41ccb7:	ret    0x28a1
  41ccba:	mov    cs,WORD PTR [ebp+0x4533132d]
  41ccc0:	xchg   DWORD PTR [ecx-0x358b9508],edx
  41ccc6:	add    DWORD PTR [edx-0x43],esi
  41ccc9:	jp     0x41cc5a
  41cccb:	adc    BYTE PTR [esi],ch
  41cccd:	xchg   BYTE PTR [esi],dl
  41cccf:	jmp    0xd8ba4e87
  41ccd4:	aas    
  41ccd5:	aas    
  41ccd6:	pop    ss
  41ccd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccd8:	mov    esi,0x3882b825
  41ccdd:	je     0x41cc9b
  41ccdf:	add    ecx,DWORD PTR [edi+0x40]
  41cce2:	jno    0x41cd62
  41cce4:	jmp    0x9c75:0x67f1f336
  41cceb:	cli    
  41ccec:	fnstenv ds:[eax+edi*8]
  41ccf0:	xlat   BYTE PTR ds:[ebx]
  41ccf1:	stc    
  41ccf2:	xchg   esp,eax
  41ccf3:	repz add al,0x64
  41ccf6:	cmp    BYTE PTR [ecx-0x751afb0a],0x5
  41ccfd:	adc    dh,BYTE PTR [ecx+ecx*1-0x1f208f92]
  41cd04:	sti    
  41cd05:	in     eax,0x68
  41cd07:	int    0x17
  41cd09:	loopne 0x41ccee
  41cd0b:	cmp    DWORD PTR [edx],edi
  41cd0d:	push   ss
  41cd0e:	mov    bl,0x84
  41cd10:	fs leave 
  41cd12:	in     eax,0xfe
  41cd14:	xchg   ebp,eax
  41cd15:	mov    al,es:0x18253654
  41cd1b:	(bad)  
  41cd1c:	sub    eax,0xe1b3b11a
  41cd21:	scas   al,BYTE PTR es:[edi]
  41cd22:	aad    0x6a
  41cd24:	mov    al,ds:0x4e4be2eb
  41cd29:	aaa    
  41cd2a:	pop    eax
  41cd2b:	(bad)  
  41cd2d:	mov    BYTE PTR [ebp+0x72],bh
  41cd30:	sbb    ah,dl
  41cd32:	sti    
  41cd33:	and    BYTE PTR [edx-0x11],bh
  41cd36:	repnz mov esi,?
  41cd39:	sbb    eax,0x5da6f656
  41cd3e:	xor    BYTE PTR [edx],cl
  41cd40:	ror    DWORD PTR [edi-0x2f],1
  41cd43:	inc    esp
  41cd44:	(bad)  [esi-0x11]
  41cd47:	popf   
  41cd48:	(bad)  
  41cd49:	jae    0x41cd5f
  41cd4b:	loop   0x41cd68
  41cd4d:	and    BYTE PTR [edi-0x7993c139],bl
  41cd53:	push   esi
  41cd54:	adc    al,0x3
  41cd56:	repz xchg ebp,edx
  41cd59:	scas   eax,DWORD PTR es:[edi]
  41cd5a:	pop    ss
  41cd5b:	int    0x86
  41cd5d:	cmp    esp,ebp
  41cd5f:	jae    0x41ccf6
  41cd61:	dec    ecx
  41cd62:	jbe    0x41cdd4
  41cd64:	pop    es
  41cd65:	inc    eax
  41cd66:	fcomi  st,st(1)
  41cd68:	push   0xfb8f93ae
  41cd6d:	repz add ebx,DWORD PTR [edi-0x6899867]
  41cd74:	cmp    BYTE PTR [esi+edi*8],dl
  41cd77:	adc    esp,DWORD PTR [ebx-0x4f3d22f4]
  41cd7d:	js     0x41cdba
  41cd7f:	loope  0x41cd89
  41cd81:	inc    ebp
  41cd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd83:	not    BYTE PTR [ecx]
  41cd85:	or     cl,BYTE PTR [edi]
  41cd87:	gs (bad) 
  41cd89:	std    
  41cd8a:	push   ss
  41cd8b:	rcl    DWORD PTR [edi-0x52],1
  41cd8e:	or     al,0xf3
  41cd90:	(bad)  [edx+0x1e]
  41cd93:	mov    edi,fs
  41cd95:	shl    DWORD PTR [eax],1
  41cd97:	sbb    ah,BYTE PTR [ebx]
  41cd99:	and    esp,ebx
  41cd9b:	dec    eax
  41cd9c:	mov    WORD PTR [ebx-0x70f7ec2b],?
  41cda2:	sub    DWORD PTR [eax+ecx*2+0x1c],0xfaaae976
  41cdaa:	div    ebp
  41cdac:	pop    ecx
  41cdad:	push   edi
  41cdae:	test   ch,ch
  41cdb0:	and    al,0xe4
  41cdb2:	cmc    
  41cdb3:	clc    
  41cdb4:	xor    DWORD PTR [edi+0xa4854d9],edi
  41cdba:	sub    BYTE PTR [edi+edi*2],0x1e
  41cdbe:	gs jnp 0x41cd5e
  41cdc1:	jno    0x41cde6
  41cdc3:	xlat   BYTE PTR ds:[ebx]
  41cdc4:	pop    ecx
  41cdc5:	pop    ss
  41cdc6:	gs cmc 
  41cdc8:	lods   eax,DWORD PTR ds:[esi]
  41cdc9:	lds    esp,FWORD PTR [edx]
  41cdcb:	sahf   
  41cdcc:	mov    cl,0x35
  41cdce:	dec    ecx
  41cdcf:	add    cl,BYTE PTR [eax+0x12]
  41cdd2:	out    0x5a,al
  41cdd4:	data16 add bl,dh
  41cdd7:	adc    al,0x73
  41cdd9:	retf   0xf9cd
  41cddc:	mov    DWORD PTR [ebx+ebp*2],esp
  41cddf:	pop    ecx
  41cde0:	call   0x7839e75f
  41cde5:	sub    esi,DWORD PTR [eax-0x4ac40a75]
  41cdeb:	lock mov ah,0xdd
  41cdee:	dec    ebx
  41cdef:	xchg   ecx,eax
  41cdf0:	sahf   
  41cdf1:	inc    DWORD PTR [eax+ebx*1-0x7f3cd31]
  41cdf8:	pop    edi
  41cdf9:	test   esp,0x64bc4100
  41cdff:	mov    ebx,0x50e184aa
  41ce04:	in     eax,0xe2
  41ce06:	jo     0x41cdab
  41ce08:	inc    eax
  41ce09:	ror    DWORD PTR [ebp-0x2a],0x3f
  41ce0d:	pushf  
  41ce0e:	jno    0x41ce2d
  41ce10:	mov    eax,ds:0xd8e8d96f
  41ce15:	pushf  
  41ce16:	movntq QWORD PTR [ebx+0x209c87b6],mm2
  41ce1d:	jmp    0xbe2:0xb85411f7
  41ce24:	ror    BYTE PTR [esp+edi*8-0x3e],cl
  41ce28:	xchg   DWORD PTR [esi+0x64],edx
  41ce2b:	shr    DWORD PTR [ebx+ecx*8+0xa],0xb9
  41ce30:	sbb    ecx,esi
  41ce32:	jp     0x41ce1f
  41ce34:	out    dx,al
  41ce35:	adc    edx,DWORD PTR [ebp-0x6c6e3adb]
  41ce3b:	add    al,0x56
  41ce3d:	(bad)  
  41ce3e:	aad    0x98
  41ce40:	pop    ds
  41ce41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce42:	adc    dl,bh
  41ce44:	fisub  WORD PTR [edi-0x5e11741d]
  41ce4a:	(bad)  
  41ce4b:	loop   0x41ce91
  41ce4d:	mov    edi,esp
  41ce4f:	je     0x41ce29
  41ce51:	mov    ds:0x2ac25f05,eax
  41ce56:	leave  
  41ce57:	dec    eax
  41ce58:	aam    0xfa
  41ce5a:	cmc    
  41ce5b:	shr    BYTE PTR [ecx+0x27],cl
  41ce5e:	(bad)  
  41ce5f:	push   0x40
  41ce61:	inc    ebx
  41ce62:	jns    0x41ceaa
  41ce64:	mov    cl,0xfe
  41ce66:	aad    0xd2
  41ce68:	mov    ds:0x9b6626b5,eax
  41ce6d:	fistp  DWORD PTR [esi-0x1d]
  41ce70:	cmp    ch,BYTE PTR [edi+0x7fb6f736]
  41ce76:	xor    bh,BYTE PTR [ecx]
  41ce78:	inc    esp
  41ce79:	sbb    ebx,DWORD PTR [ebp-0xa445e88]
  41ce7f:	xchg   edx,eax
  41ce80:	push   ebx
  41ce81:	clc    
  41ce82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce83:	adc    al,0x21
  41ce85:	xor    al,cl
  41ce87:	xchg   ecx,eax
  41ce88:	(bad)  
  41ce89:	push   edi
  41ce8a:	bound  ebp,QWORD PTR [edx]
  41ce8c:	or     edi,DWORD PTR [edx-0x403f9335]
  41ce92:	mov    gs,WORD PTR [eax-0x61]
  41ce95:	ss mov esi,0x6b082dd7
  41ce9b:	pop    edx
  41ce9c:	aad    0x7a
  41ce9e:	scas   eax,DWORD PTR es:[edi]
  41ce9f:	loopne 0x41cec6
  41cea1:	jo     0x41ce2b
  41cea3:	lods   al,BYTE PTR ds:[esi]
  41cea4:	into   
  41cea5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cea7:	mov    eax,ds:0x4745a544
  41ceac:	sbb    DWORD PTR [eax+edx*1-0x7fd0d0da],esi
  41ceb3:	add    esp,esp
  41ceb5:	dec    esi
  41ceb6:	mov    BYTE PTR [ebp+0x292ec615],0xbd
  41cebd:	sahf   
  41cebe:	leave  
  41cebf:	sub    al,0x98
  41cec1:	pop    edx
  41cec2:	repz or al,0x1b
  41cec5:	cdq    
  41cec6:	xlat   BYTE PTR ds:[ebx]
  41cec7:	xor    DWORD PTR [eax+0x222fd7ef],ebp
  41cecd:	xor    dh,ah
  41cecf:	stos   BYTE PTR es:[edi],al
  41ced0:	jl     0x41ce9f
  41ced2:	push   ebx
  41ced3:	cmp    BYTE PTR [edi+ecx*4-0xb],dh
  41ced7:	adc    edx,esp
  41ced9:	and    eax,0x9282b3a0
  41cede:	mov    ds:0xd0b82ad9,eax
  41cee3:	outs   dx,BYTE PTR ds:[esi]
  41cee4:	idiv   al
  41cee6:	xchg   edx,eax
  41cee7:	sar    DWORD PTR [ebp+0x56d7ef34],cl
  41ceed:	jmp    0xfaca0f5
  41cef2:	push   cs
  41cef3:	push   0x543ac254
  41cef8:	ror    DWORD PTR [ebp-0x45],1
  41cefb:	lahf   
  41cefc:	add    eax,0x140a4124
  41cf01:	test   eax,0x2369e304
  41cf06:	nop
  41cf07:	hlt    
  41cf08:	nop
  41cf09:	push   ds
  41cf0a:	cmp    BYTE PTR [ecx-0x46],al
  41cf0d:	and    eax,0x2b20bbf9
  41cf12:	or     eax,0x6dbd4935
  41cf17:	in     al,0x4b
  41cf19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf1a:	mov    ds:0x7c452c3,al
  41cf1f:	iret   
  41cf20:	cmp    BYTE PTR [edi+0x121097b0],0xbe
  41cf27:	gs cmp al,0x10
  41cf2a:	out    dx,al
  41cf2b:	(bad)  
  41cf2c:	cdq    
  41cf2d:	pop    es
  41cf2e:	cdq    
  41cf2f:	das    
  41cf30:	sbb    ah,BYTE PTR [ebx-0x29]
  41cf33:	mov    edi,DWORD PTR [edi]
  41cf35:	inc    edi
  41cf36:	ror    DWORD PTR [edx+0x38e2d29],1
  41cf3c:	out    dx,eax
  41cf3d:	inc    ebp
  41cf3e:	inc    edx
  41cf3f:	adc    esp,ecx
  41cf41:	fdivr  st,st(4)
  41cf43:	fsub   QWORD PTR [edi-0x180cb18f]
  41cf49:	(bad)  
  41cf4a:	retf   0x268f
  41cf4d:	jle    0x41cfb4
  41cf4f:	xchg   ebx,eax
  41cf50:	mov    bh,0x77
  41cf52:	ret    0xa922
  41cf55:	xor    ebx,DWORD PTR [esi+0x7f]
  41cf58:	xchg   edi,eax
  41cf59:	push   esi
  41cf5a:	xor    DWORD PTR [ecx+0x7d],ecx
  41cf5d:	cwde   
  41cf5e:	test   BYTE PTR [edx],bl
  41cf60:	inc    esp
  41cf61:	ds xor eax,0xd9b45f52
  41cf67:	xchg   ebx,eax
  41cf68:	rcl    edi,cl
  41cf6a:	retf   0xe529
  41cf6d:	pop    esi
  41cf6e:	xor    dl,ah
  41cf70:	dec    ecx
  41cf71:	lds    ebp,FWORD PTR [edx+0x5d62b77b]
  41cf77:	push   cs
  41cf78:	inc    ebp
  41cf79:	push   ecx
  41cf7a:	retf   0x13b1
  41cf7d:	idiv   esi
  41cf7f:	xchg   edx,eax
  41cf80:	sub    bh,bl
  41cf82:	xchg   DWORD PTR [eax+0x2515473d],edx
  41cf88:	call   0x14d9:0x7539781c
  41cf8f:	sbb    al,0xc8
  41cf91:	jmp    0x41cf2f
  41cf93:	push   esp
  41cf94:	sbb    dl,BYTE PTR [ecx]
  41cf96:	cmp    DWORD PTR [ebp-0x21],edx
  41cf99:	push   cs
  41cf9a:	xchg   esi,eax
  41cf9b:	ret    0xecc2
  41cf9e:	mov    es,WORD PTR ds:0x8d1eda9b
  41cfa4:	out    dx,eax
  41cfa5:	call   0xe7e531cc
  41cfaa:	mov    ch,0xc9
  41cfac:	imul   esp,DWORD PTR [eax+0x78705b91],0x13a6b306
  41cfb6:	or     BYTE PTR [edi+eiz*2+0x1b],ah
  41cfba:	xchg   esi,eax
  41cfbb:	arpl   bx,bp
  41cfbd:	scas   eax,DWORD PTR es:[edi]
  41cfbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfbf:	mov    ds:0x8e561bd9,al
  41cfc4:	icebp  
  41cfc5:	jmp    0x41cf70
  41cfc7:	xchg   esp,eax
  41cfc8:	jge    0x41cfe1
  41cfca:	xor    BYTE PTR [edx],cl
  41cfcc:	rcl    esp,1
  41cfce:	pop    ebx
  41cfcf:	test   eax,0x60ab73c9
  41cfd4:	adc    al,BYTE PTR [edi-0x75]
  41cfd7:	(bad)  
  41cfd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfd9:	mov    ch,BYTE PTR [edi]
  41cfdb:	mov    al,0xf4
  41cfdd:	fnstcw WORD PTR [eax-0x1b824ba9]
  41cfe3:	fisttp DWORD PTR [ebx-0x3e]
  41cfe6:	repnz loopne 0x41cf8c
  41cfe9:	fild   WORD PTR [ecx+0x1ba5a7d]
  41cfef:	sub    BYTE PTR [ecx+edi*4-0x7c],al
  41cff3:	mov    al,0x4f
  41cff5:	sti    
  41cff6:	sbb    ch,BYTE PTR [ebx+eiz*1+0x5a]
  41cffa:	(bad)
  41cffd:	pusha  
  41cffe:	dec    ebp
  41cfff:	xchg   esi,eax
  41d000:	(bad)
  41d004:	leave  
  41d005:	pop    esi
  41d006:	cmp    eax,0xd28e48f2
  41d00b:	add    DWORD PTR [ebx+0x3ca98ff8],eax
  41d011:	pop    ecx
  41d012:	clc    
  41d013:	mov    bl,0x88
  41d015:	enterw 0x3db4,0x87
  41d01a:	pop    ecx
  41d01b:	loopne 0x41d078
  41d01d:	rcr    DWORD PTR [esi+0x23afabe2],cl
  41d023:	sub    bh,BYTE PTR [ecx+ebx*4]
  41d026:	jl     0x41cff5
  41d028:	test   al,0x84
  41d02a:	iret   
  41d02b:	dec    ebx
  41d02c:	pop    esi
  41d02d:	lods   eax,DWORD PTR ds:[esi]
  41d02e:	pop    ebx
  41d02f:	fldenv [eax+eax*2-0x3196c93a]
  41d036:	mov    ebx,0xc9c973c4
  41d03b:	(bad)  
  41d03c:	push   esp
  41d03d:	mov    edi,eax
  41d03f:	mov    ebx,0x83b49782
  41d044:	add    BYTE PTR [ebx+0x25dafae8],al
  41d04a:	mov    esi,0xd39aa885
  41d04f:	xor    dh,BYTE PTR [eax+0x521d90d2]
  41d055:	into   
  41d056:	pushf  
  41d057:	aad    0x96
  41d059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d05a:	xchg   esp,eax
  41d05b:	sbb    dl,BYTE PTR [eax+eax*1-0x64048490]
  41d062:	mov    BYTE PTR [eax],dh
  41d064:	pop    DWORD PTR [ebx+esi*1]
  41d067:	cmp    al,0x99
  41d069:	and    eax,0x28ae094b
  41d06e:	retf   
  41d06f:	adc    bl,dh
  41d071:	mov    esi,DWORD PTR [ecx+0x340980da]
  41d077:	ret    0xd39e
  41d07a:	js     0x41d017
  41d07c:	add    esp,esp
  41d07e:	cs pop ebx
  41d080:	inc    ebp
  41d081:	add    BYTE PTR [ecx-0x262e4db6],bl
  41d087:	jp     0x41d0b3
  41d089:	jl     0x41d0db
  41d08b:	jns    0x41d0ec
  41d08d:	push   0xffffffe5
  41d08f:	add    eax,0x161ea372
  41d094:	je     0x41d01d
  41d096:	jae    0x41d113
  41d098:	nop
  41d099:	or     al,0x25
  41d09b:	push   0x46e6159c
  41d0a0:	xor    DWORD PTR [ebp+0x3ab8f689],0xffffffd4
  41d0a7:	pop    esi
  41d0a8:	lods   eax,DWORD PTR ds:[esi]
  41d0a9:	lods   eax,DWORD PTR ds:[esi]
  41d0aa:	popf   
  41d0ab:	xchg   DWORD PTR [eax-0x4530dac0],ebp
  41d0b1:	adc    BYTE PTR [edi],dh
  41d0b3:	or     DWORD PTR [esi+0x2c949397],eax
  41d0b9:	or     eax,0xa2e90af4
  41d0be:	gs aas 
  41d0c0:	jne    0x41d087
  41d0c2:	adc    al,0xb4
  41d0c4:	pusha  
  41d0c5:	mov    dl,0x59
  41d0c7:	add    ecx,DWORD PTR [eax+edi*2]
  41d0ca:	add    ch,ch
  41d0cc:	push   esp
  41d0cd:	xchg   DWORD PTR [ebx-0x7ce8aff5],eax
  41d0d3:	lahf   
  41d0d4:	cs mov ebx,0x1106bc9
  41d0da:	in     eax,dx
  41d0db:	jbe    0x41d07f
  41d0dd:	cmp    al,0xac
  41d0df:	pop    edx
  41d0e0:	cmp    eax,0xddacf873
  41d0e5:	mov    eax,ds:0xf8a7ba46
  41d0ea:	xchg   DWORD PTR [ebx-0xd542ce8],esp
  41d0f0:	fsubr  QWORD PTR [ecx+0x7c]
  41d0f3:	push   edi
  41d0f4:	stos   DWORD PTR es:[edi],eax
  41d0f5:	xchg   edx,eax
  41d0f6:	es hlt 
  41d0f8:	sahf   
  41d0f9:	ja     0x41d0a7
  41d0fb:	inc    ecx
  41d0fc:	mov    ds:0xcb53913e,al
  41d101:	cmp    BYTE PTR [esi+0x21],ch
  41d104:	fsub   QWORD PTR [eax-0x440ec82f]
  41d10a:	sar    BYTE PTR [edi-0x19be320a],1
  41d110:	jo     0x41d13a
  41d112:	mov    eax,ds:0x60aec8f1
  41d117:	out    0x1e,al
  41d119:	loopne 0x41d17c
  41d11b:	imul   ebx,esi,0xffffffb9
  41d11e:	int    0xa0
  41d120:	mov    es,WORD PTR [eax+eax*4]
  41d123:	js     0x41d0d9
  41d125:	add    BYTE PTR [ebx-0xcc9b24a],bh
  41d12b:	jmp    0x41d0fb
  41d12d:	mov    WORD PTR ds:0x83da85a3,es
  41d133:	jno    0x41d0d9
  41d135:	sar    esp,cl
  41d137:	hlt    
  41d138:	call   0x287ce866
  41d13d:	dec    edx
  41d13e:	add    eax,0x2293415c
  41d143:	ins    DWORD PTR es:[edi],dx
  41d144:	adc    eax,0xb7a1ecf7
  41d149:	dec    ecx
  41d14a:	ja     0x41d0d9
  41d14c:	jmp    0x32bcdd7a
  41d151:	rcr    DWORD PTR [ecx],0x6e
  41d154:	mov    dl,0xb2
  41d156:	sub    al,0x15
  41d158:	icebp  
  41d159:	pop    ebp
  41d15a:	shl    DWORD PTR [ecx],0xd3
  41d15d:	xchg   esi,eax
  41d15e:	and    al,BYTE PTR [esi-0x7d]
  41d161:	cmp    esp,ebx
  41d163:	lahf   
  41d164:	jae    0x41d12a
  41d166:	out    dx,al
  41d167:	fst    st(1)
  41d169:	jp     0x41d150
  41d16b:	add    bh,BYTE PTR [esp+ebp*8+0x5ef39dde]
  41d172:	mov    al,ds:0xdf8e2066
  41d177:	icebp  
  41d178:	shl    DWORD PTR [ecx+ecx*8-0x56],1
  41d17c:	hlt    
  41d17d:	inc    edx
  41d17e:	push   ebx
  41d17f:	pusha  
  41d180:	jo     0x41d1e4
  41d182:	aas    
  41d183:	adc    DWORD PTR [ecx*1+0x1d9f483a],ebp
  41d18a:	jns    0x41d1af
  41d18c:	push   ebp
  41d18d:	rcl    BYTE PTR [ecx+0x7b],0x9b
  41d191:	mov    WORD PTR [eax+0x303f1f0d],es
  41d197:	and    ch,BYTE PTR [ebp+0x3b]
  41d19a:	pop    ebx
  41d19b:	sbb    al,BYTE PTR [esi+0x4]
  41d19e:	jbe    0x41d1d1
  41d1a0:	js     0x41d160
  41d1a2:	cld    
  41d1a3:	dec    edx
  41d1a4:	lds    esi,FWORD PTR cs:[ecx+0x4bb5eb0]
  41d1ab:	in     al,0x71
  41d1ad:	jecxz  0x41d1c0
  41d1af:	jnp    0x41d1fd
  41d1b1:	push   eax
  41d1b2:	pop    ebx
  41d1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1b4:	mov    ch,cl
  41d1b6:	(bad)  
  41d1b7:	jne    0x41d1fe
  41d1b9:	dec    ebp
  41d1ba:	loope  0x41d162
  41d1bc:	scas   al,BYTE PTR es:[edi]
  41d1bd:	arpl   WORD PTR [eax+ebx*2-0x27eadf6c],di
  41d1c4:	mov    bh,0x6a
  41d1c6:	repz out dx,eax
  41d1c8:	fldl2t 
  41d1ca:	push   0xffffffd4
  41d1cc:	pop    ebx
  41d1cd:	xor    al,0x47
  41d1cf:	gs aaa 
  41d1d1:	push   edx
  41d1d2:	sub    BYTE PTR [ecx-0x3],0x73
  41d1d6:	xor    DWORD PTR ds:0xad2f774a,ecx
  41d1dc:	repz into 
  41d1de:	outs   dx,BYTE PTR ds:[esi]
  41d1df:	lods   al,BYTE PTR ds:[esi]
  41d1e0:	in     al,0xf6
  41d1e2:	push   edi
  41d1e3:	add    dh,BYTE PTR [ebx-0x7a8c384b]
  41d1e9:	mov    al,0x2a
  41d1eb:	jecxz  0x41d1ab
  41d1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ee:	mov    dl,0x79
  41d1f0:	mov    ds:0x73cf4e86,al
  41d1f5:	inc    esi
  41d1f6:	test   al,0xb
  41d1f8:	push   ss
  41d1f9:	xor    bh,dl
  41d1fb:	mov    al,0xc7
  41d1fd:	mov    al,bl
  41d1ff:	scas   eax,DWORD PTR es:[edi]
  41d200:	jno    0x41d1b4
  41d202:	adc    cl,BYTE PTR [edi+eax*8-0x6a]
  41d206:	test   BYTE PTR [ecx+0x3d4223f2],ah
  41d20c:	lds    esi,FWORD PTR [edi+0x4d]
  41d20f:	repz or BYTE PTR [edx],dl
  41d212:	push   edi
  41d213:	xchg   esi,eax
  41d214:	or     esi,ecx
  41d216:	ja     0x41d281
  41d218:	inc    ecx
  41d219:	aad    0x1c
  41d21b:	scas   eax,DWORD PTR es:[edi]
  41d21c:	mov    edx,DWORD PTR [esi-0x66]
  41d21f:	push   ecx
  41d220:	cmp    DWORD PTR [edi+0x36],ebx
  41d223:	mov    ch,0x7
  41d225:	xchg   ebx,eax
  41d226:	mov    ebx,0xb02baedc
  41d22b:	mov    esp,0xc77ac75d
  41d230:	dec    esi
  41d231:	add    al,0xa5
  41d233:	pop    es
  41d234:	(bad)  
  41d235:	in     eax,0x76
  41d237:	(bad)
  41d23a:	test   al,0x88
  41d23c:	neg    DWORD PTR [ebp+0x18124088]
  41d242:	sub    DWORD PTR [esi-0x39100a49],0xea51ed04
  41d24c:	mov    bh,0x32
  41d24e:	stos   BYTE PTR es:[edi],al
  41d24f:	scas   eax,DWORD PTR es:[edi]
  41d250:	scas   al,BYTE PTR es:[edi]
  41d251:	mov    cl,ah
  41d253:	ror    DWORD PTR [esi-0x71531254],1
  41d259:	inc    edi
  41d25a:	hlt    
  41d25b:	imul   edx,esi,0xdcfe5bcd
  41d261:	psrad  mm6,QWORD PTR [ebp+0xa]
  41d265:	cdq    
  41d266:	mov    al,0x50
  41d268:	or     BYTE PTR [ebx-0x50],dh
  41d26b:	(bad)  
  41d26d:	sub    eax,0x386f2b89
  41d272:	dec    esp
  41d273:	mov    ebx,DWORD PTR [ebp-0x50]
  41d276:	add    edx,ecx
  41d278:	xor    edx,ebx
  41d27a:	mov    DWORD PTR [ebp-0x50],edx
  41d27d:	mov    edx,DWORD PTR [ebp+0x8]
  41d280:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d283:	add    edx,edi
  41d285:	and    edx,ebx
  41d287:	mov    DWORD PTR [ebp-0x4c],edx
  41d28a:	mov    edx,DWORD PTR [ebp+0x8]
  41d28d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d290:	lea    edx,[ebx+edx*1+0x241fc1f]
  41d297:	mov    DWORD PTR [ebp-0x48],edx
  41d29a:	mov    edx,DWORD PTR [ebp+0x8]
  41d29d:	mov    ebx,0xfa5e15e2
  41d2a2:	sub    ebx,edx
  41d2a4:	jmp    0x41f62d
  41d2a9:	xchg   esp,eax
  41d2aa:	pop    ebx
  41d2ab:	and    DWORD PTR [ebx],ebx
  41d2ad:	mov    eax,ds:0x93db941b
  41d2b2:	jo     0x41d32d
  41d2b4:	push   ebp
  41d2b5:	stc    
  41d2b6:	cmc    
  41d2b7:	fmul   DWORD PTR [edx]
  41d2b9:	cmc    
  41d2ba:	std    
  41d2bb:	jns    0x41d337
  41d2bd:	push   es
  41d2be:	pop    edi
  41d2bf:	jp     0x41d33b
  41d2c1:	sub    cl,BYTE PTR [ebp+edx*2-0x7e94d33c]
  41d2c8:	push   cs
  41d2c9:	cdq    
  41d2ca:	mov    ecx,0x19f94f11
  41d2cf:	pop    ds
  41d2d0:	jne    0x41d307
  41d2d2:	jnp    0x41d2b6
  41d2d4:	sti    
  41d2d5:	ss hlt 
  41d2d7:	mov    BYTE PTR gs:[esi+0x6d],cl
  41d2db:	dec    edx
  41d2dc:	aam    0x86
  41d2de:	xchg   ebx,eax
  41d2df:	or     dl,BYTE PTR [ebx]
  41d2e1:	cmp    DWORD PTR [esi+0x49],esp
  41d2e4:	xchg   ebx,eax
  41d2e5:	scas   al,BYTE PTR es:[edi]
  41d2e6:	jmp    0x41d363
  41d2e8:	cmp    eax,0x66c1e52c
  41d2ed:	clc    
  41d2ee:	popf   
  41d2ef:	(bad)  
  41d2f0:	lahf   
  41d2f1:	bnd jae 0x41d371
  41d2f4:	and    ebx,DWORD PTR [ebp+0x46306bd7]
  41d2fa:	sbb    cl,cl
  41d2fc:	pop    edi
  41d2fd:	lea    eax,[esp+ebx*4+0x1a6c7d69]
  41d304:	or     DWORD PTR [edx-0x2d],edi
  41d307:	cmp    eax,0xedd3466d
  41d30c:	les    edx,FWORD PTR [ebx-0x36]
  41d30f:	sub    al,0x32
  41d311:	mov    ds:0x512ede4,eax
  41d316:	jns    0x41d2eb
  41d318:	sbb    DWORD PTR [edx],0x40e2f81a
  41d31e:	jp     0x41d361
  41d320:	adc    eax,0xb7240702
  41d325:	push   edx
  41d326:	sub    dh,dh
  41d328:	repnz iret 
  41d32a:	jbe    0x41d37d
  41d32c:	pop    edx
  41d32d:	jge    0x41d398
  41d32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d330:	aad    0xd4
  41d332:	arpl   WORD PTR [ebx],ax
  41d334:	sub    ebp,ebx
  41d336:	in     eax,0x60
  41d338:	inc    ecx
  41d339:	aaa    
  41d33a:	pop    ds
  41d33b:	mov    cl,0x63
  41d33d:	push   0xffffff9a
  41d33f:	mov    ah,0x88
  41d341:	mov    dh,0x82
  41d343:	jle    0x41d328
  41d345:	xor    cl,ah
  41d347:	(bad)  
  41d348:	mov    esi,0xc49b53e9
  41d34d:	ret    0xecff
  41d350:	push   eax
  41d351:	mov    ds:0x1ddc6f8c,eax
  41d356:	pop    ss
  41d357:	ds aad 0x17
  41d35a:	push   esp
  41d35b:	cmp    DWORD PTR [eax-0x25f61ea],edi
  41d361:	dec    esi
  41d362:	icebp  
  41d363:	dec    ebx
  41d364:	imul   DWORD PTR [edi+ebp*1-0x3f]
  41d368:	mov    ch,0xed
  41d36a:	xchg   BYTE PTR [ecx-0x7b],ch
  41d36d:	adc    ch,BYTE PTR [ecx-0x73]
  41d370:	push   esp
  41d371:	adc    eax,0x2b56a08a
  41d376:	arpl   WORD PTR [eax+0x1ddcbeaf],bx
  41d37c:	fwait
  41d37d:	xor    dh,BYTE PTR ds:0x56a13536
  41d383:	xor    al,0xc6
  41d385:	rcl    DWORD PTR [edi],cl
  41d387:	cli    
  41d388:	xor    DWORD PTR [esi],esi
  41d38a:	sahf   
  41d38b:	sub    dh,cl
  41d38d:	imul   DWORD PTR [ebx+0x39]
  41d390:	push   ebx
  41d391:	lods   al,BYTE PTR ds:[esi]
  41d392:	mov    bh,0x9f
  41d394:	sub    dl,BYTE PTR [ecx+0x58]
  41d397:	pusha  
  41d398:	cwde   
  41d399:	pop    edx
  41d39a:	mov    esp,0x596da664
  41d39f:	fwait
  41d3a0:	add    al,0xc9
  41d3a2:	and    cl,ah
  41d3a4:	test   al,0x1e
  41d3a6:	sub    eax,0x65b3aef7
  41d3ab:	sub    eax,0xe2555e64
  41d3b0:	stc    
  41d3b1:	outs   dx,DWORD PTR ds:[esi]
  41d3b2:	es cdq 
  41d3b4:	push   ebp
  41d3b5:	mov    al,0x68
  41d3b7:	mov    al,al
  41d3b9:	into   
  41d3ba:	inc    edx
  41d3bb:	mov    bl,0xf4
  41d3bd:	fcmovnb st,st(7)
  41d3bf:	push   edi
  41d3c0:	ins    BYTE PTR es:[edi],dx
  41d3c1:	data16 mov dl,BYTE PTR [esi-0x73254567]
  41d3c8:	or     eax,0x4d71bc7a
  41d3cd:	sub    DWORD PTR [edx+0x2eda5c25],eax
  41d3d3:	adc    edi,DWORD PTR [edi]
  41d3d5:	aas    
  41d3d6:	loop   0x41d3b7
  41d3d8:	xchg   DWORD PTR [ecx],ebp
  41d3da:	and    al,BYTE PTR [ecx-0xd8e1272]
  41d3e0:	or     al,BYTE PTR [ecx+0x66c7c0c3]
  41d3e6:	aad    0xd9
  41d3e8:	mov    al,0xb6
  41d3ea:	scas   al,BYTE PTR es:[edi]
  41d3eb:	rcr    BYTE PTR [esi],1
  41d3ed:	sbb    esi,edx
  41d3ef:	sub    eax,DWORD PTR [edi]
  41d3f1:	mov    bl,0xc0
  41d3f3:	and    DWORD PTR [ebp-0x22],eax
  41d3f6:	adc    DWORD PTR [ebx],0x97318aad
  41d3fc:	daa    
  41d3fd:	hlt    
  41d3fe:	inc    esp
  41d3ff:	jecxz  0x41d428
  41d401:	and    bh,BYTE PTR [eax-0x5ed74b6c]
  41d407:	stos   DWORD PTR es:[edi],eax
  41d408:	sahf   
  41d409:	xor    dl,al
  41d40b:	mov    ecx,0xcf53182a
  41d410:	xor    BYTE PTR [edi-0x139a372b],bh
  41d416:	repnz (bad) 
  41d418:	dec    edi
  41d419:	xchg   ecx,eax
  41d41a:	fs out dx,al
  41d41c:	dec    edi
  41d41d:	xor    dh,BYTE PTR [edi+0x46e448eb]
  41d423:	add    ebx,ebp
  41d425:	icebp  
  41d426:	repz mov ebx,0x5da41cf3
  41d42c:	test   BYTE PTR [ebx],dl
  41d42e:	jecxz  0x41d3b5
  41d430:	sahf   
  41d431:	push   0xffffffdc
  41d433:	int    0x4b
  41d435:	sbb    esi,DWORD PTR [ebp*2-0x26fe332c]
  41d43c:	shl    cx,cl
  41d43f:	into   
  41d440:	out    dx,eax
  41d441:	fcmovbe st,st(2)
  41d443:	mov    cl,0xa
  41d445:	xchg   edx,eax
  41d446:	mov    esp,0x884c083
  41d44b:	push   cs
  41d44c:	and    eax,edx
  41d44e:	push   0x7e8d3a9f
  41d453:	rcl    BYTE PTR ds:0x56f1fc6f,0xf2
  41d45a:	pop    ecx
  41d45b:	xchg   edi,eax
  41d45c:	dec    ebp
  41d45d:	pop    esi
  41d45e:	adc    BYTE PTR [edi+0x15d6b89c],dl
  41d464:	mov    edi,0x7f452d1f
  41d469:	jge    0x41d4b9
  41d46b:	adc    al,0x51
  41d46d:	sub    eax,0xb8e058d2
  41d472:	aaa    
  41d473:	jl     0x41d48c
  41d475:	xor    eax,0x6e8e14b3
  41d47a:	mov    WORD PTR [ebx-0x60834634],cs
  41d480:	pop    ecx
  41d481:	sbb    BYTE PTR ds:0x6188be90,ch
  41d487:	dec    ecx
  41d488:	inc    esp
  41d489:	mov    ecx,0x76b6593f
  41d48e:	test   al,0xe0
  41d490:	mov    eax,ds:0x87b7de81
  41d495:	loop   0x41d452
  41d497:	or     DWORD PTR gs:[ebp+0x380eec93],eax
  41d49e:	push   0xfc50f3a7
  41d4a3:	sar    DWORD PTR [esi-0x4b0b0eb2],cl
  41d4a9:	cs (bad) 
  41d4ab:	mov    eax,0x74765b2a
  41d4b0:	inc    edx
  41d4b1:	icebp  
  41d4b2:	jno    0x41d50e
  41d4b4:	fnstcw WORD PTR [esi]
  41d4b6:	lahf   
  41d4b7:	jg     0x41d51a
  41d4b9:	vandps xmm5,xmm0,XMMWORD PTR [edi+0x38]
  41d4be:	jl     0x41d4d7
  41d4c0:	mov    ch,BYTE PTR [edi]
  41d4c2:	mov    WORD PTR [ebp-0x348cb178],?
  41d4c8:	loope  0x41d4f0
  41d4ca:	sub    BYTE PTR [eax-0x4e],ah
  41d4cd:	mov    ah,0xcd
  41d4cf:	push   0xfffffff5
  41d4d1:	xlat   BYTE PTR ds:[ebx]
  41d4d2:	sub    ecx,DWORD PTR [esi-0x746984e9]
  41d4d8:	push   edi
  41d4d9:	sub    bh,BYTE PTR [ebx]
  41d4db:	cmp    al,BYTE PTR [eax+edi*1+0x14]
  41d4df:	push   esi
  41d4e0:	pop    ebx
  41d4e1:	pusha  
  41d4e2:	pusha  
  41d4e3:	pop    es
  41d4e4:	xchg   edx,eax
  41d4e5:	jg     0x41d542
  41d4e7:	out    dx,eax
  41d4e8:	out    dx,al
  41d4e9:	inc    eax
  41d4ea:	or     al,0xe4
  41d4ec:	repnz or edi,DWORD PTR [ecx]
  41d4ef:	and    esp,DWORD PTR [esi]
  41d4f1:	ret    0x3f6e
  41d4f4:	pop    eax
  41d4f5:	pop    ecx
  41d4f6:	push   edx
  41d4f7:	pop    eax
  41d4f8:	jnp    0x41d50b
  41d4fa:	fstp   DWORD PTR [ecx+eax*2]
  41d4fd:	xor    ebp,DWORD PTR ds:[edx]
  41d500:	mov    al,BYTE PTR [ebp+ebp*2-0x62]
  41d504:	xor    al,0x85
  41d506:	xor    eax,0xb8a0623
  41d50b:	and    DWORD PTR [ebx+0x6f],edi
  41d50e:	(bad)  
  41d50f:	xor    BYTE PTR [edi],al
  41d511:	jmp    0x41d49d
  41d513:	mov    bh,0xbd
  41d515:	fisub  WORD PTR [ecx+0x31]
  41d518:	add    al,0xd4
  41d51a:	mov    bl,dl
  41d51c:	jmp    0xb33:0xeb6235a2
  41d523:	jbe    0x41d540
  41d525:	(bad)  [edx+0x25]
  41d528:	mov    edi,0x4fc6279e
  41d52d:	adc    DWORD PTR [ebx+0x20c1e3df],0x7d51d6a4
  41d537:	test   al,0x70
  41d539:	data16 ja 0x41d4d7
  41d53c:	retf   
  41d53d:	mov    ch,0xc7
  41d53f:	add    DWORD PTR [eax-0x46],esp
  41d542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d543:	xchg   ebx,eax
  41d544:	xchg   esi,eax
  41d545:	es sub al,0xf6
  41d548:	inc    eax
  41d549:	push   ebx
  41d54a:	adc    esi,edi
  41d54c:	hlt    
  41d54d:	pop    ebx
  41d54e:	mov    DWORD PTR [ebp+ebp*4+0xe9c965f],ebx
  41d555:	xchg   bl,dl
  41d557:	pop    edx
  41d558:	sbb    BYTE PTR [eax-0x7c],ah
  41d55b:	adc    dl,BYTE PTR [edi-0x6]
  41d55e:	adc    ch,BYTE PTR [edx+0x51]
  41d561:	xchg   esp,eax
  41d562:	cmc    
  41d563:	mov    ecx,0x4b9b7f6d
  41d568:	mov    ebp,ebp
  41d56a:	inc    ebp
  41d56b:	xchg   ebp,eax
  41d56c:	fsubr  QWORD PTR [ebp+0x31e983f9]
  41d572:	ja     0x41d5d0
  41d574:	xchg   ebp,eax
  41d575:	(bad)  
  41d576:	inc    DWORD PTR [eax]
  41d578:	mov    esp,0x2d1b2daf
  41d57d:	loop   0x41d54a
  41d57f:	imul   edi,DWORD PTR [edx-0x48ae9191],0x65f35ff9
  41d589:	push   edx
  41d58a:	pusha  
  41d58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d58c:	imul   DWORD PTR [eax+0x77]
  41d58f:	cmp    BYTE PTR [edi],dl
  41d591:	and    ch,ah
  41d593:	cwde   
  41d594:	lock mov bh,0x65
  41d597:	xor    ah,ch
  41d599:	add    esi,eax
  41d59b:	dec    ebx
  41d59c:	inc    esp
  41d59d:	fsubr  QWORD PTR [eax+0x33]
  41d5a0:	sbb    BYTE PTR [edx+0x28596ce8],al
  41d5a6:	adc    al,0x4c
  41d5a8:	cmp    DWORD PTR [esi-0x6cd6037],ebp
  41d5ae:	xor    BYTE PTR ds:0x7e61ea13,ah
  41d5b4:	push   esp
  41d5b5:	cmp    BYTE PTR [edi-0x779f4b07],dl
  41d5bb:	aaa    
  41d5bc:	mov    fs,esp
  41d5be:	xchg   edi,eax
  41d5bf:	mov    esi,0x4a4326e9
  41d5c4:	call   0x255d:0xb93183cd
  41d5cb:	push   eax
  41d5cc:	sub    BYTE PTR [eax-0x15],cl
  41d5cf:	add    al,0xdf
  41d5d1:	and    cl,bh
  41d5d3:	int    0x4d
  41d5d5:	(bad)  
  41d5d6:	jns    0x41d600
  41d5d8:	rcr    BYTE PTR [eax-0x2cb376b5],0xbb
  41d5df:	outs   dx,BYTE PTR ds:[esi]
  41d5e0:	bound  edi,QWORD PTR [edx+edx*4+0x4e]
  41d5e4:	mov    edi,0x3c5eb571
  41d5e9:	xor    bl,BYTE PTR [edi]
  41d5eb:	into   
  41d5ec:	into   
  41d5ed:	adc    DWORD PTR [edx-0x6b00910a],0x8f224b9d
  41d5f7:	cmp    esi,DWORD PTR [ebx]
  41d5f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5fa:	push   ss
  41d5fb:	out    0xdd,eax
  41d5fd:	xchg   edi,eax
  41d5fe:	add    bl,BYTE PTR [ecx-0x28]
  41d601:	outs   dx,DWORD PTR ds:[esi]
  41d602:	out    0x78,eax
  41d604:	into   
  41d605:	iret   
  41d606:	sbb    al,0x0
  41d608:	push   DWORD PTR [ebp+0x20f00275]
  41d60e:	mov    ebp,fs
  41d610:	adc    al,0x55
  41d612:	cmp    eax,0x5327ece1
  41d617:	add    cl,BYTE PTR es:0x716259d1
  41d61e:	adc    BYTE PTR [ebx-0x4a],0xa1
  41d622:	push   esi
  41d623:	bound  eax,QWORD PTR [esi]
  41d625:	inc    ebx
  41d626:	inc    eax
  41d627:	clc    
  41d628:	cmp    DWORD PTR [ecx],ecx
  41d62a:	sbb    eax,0x695f406
  41d62f:	and    DWORD PTR [edx],eax
  41d631:	shl    BYTE PTR [ebx+ecx*1-0x22],1
  41d635:	mov    ecx,0x52fc6c94
  41d63a:	inc    ebx
  41d63b:	ins    DWORD PTR es:[edi],dx
  41d63c:	cmp    DWORD PTR [ecx-0x2a],edx
  41d63f:	pop    ds
  41d640:	jg     0x41d614
  41d642:	(bad)  
  41d643:	loop   0x41d612
  41d645:	loop   0x41d5ed
  41d647:	nop
  41d648:	fstp   DWORD PTR ds:0xf0e31b5e
  41d64e:	es adc al,0xd0
  41d651:	push   0x9f435eb6
  41d656:	xor    cl,bl
  41d658:	mov    WORD PTR [ebx],gs
  41d65a:	adc    BYTE PTR [ecx],0xcc
  41d65d:	into   
  41d65e:	push   es
  41d65f:	push   ebx
  41d660:	jo     0x41d69c
  41d662:	icebp  
  41d663:	and    BYTE PTR [esi],ch
  41d665:	in     eax,0xfb
  41d667:	jno    0x41d689
  41d669:	xor    edi,DWORD PTR ds:0xa4700ce3
  41d66f:	inc    ebp
  41d670:	sub    BYTE PTR [esi-0xb7e5b6],al
  41d676:	mov    WORD PTR [esi-0x30],gs
  41d679:	pop    ds
  41d67a:	mov    eax,ds:0x25ff96d1
  41d67f:	daa    
  41d680:	dec    esp
  41d681:	inc    DWORD PTR [edx-0x2]
  41d684:	loopne 0x41d6f5
  41d686:	mov    dl,0x67
  41d688:	sub    BYTE PTR [esi],ch
  41d68a:	bound  edi,QWORD PTR [esi+0x161f5931]
  41d690:	and    DWORD PTR [edx],ebx
  41d692:	mov    ecx,0x34fd5f8a
  41d697:	jle    0x41d670
  41d699:	cwde   
  41d69a:	fcomp  QWORD PTR [edx+edi*2+0x1857376b]
  41d6a1:	pop    eax
  41d6a2:	aam    0x2e
  41d6a4:	jle    0x41d701
  41d6a6:	call   0xf27b:0xc55f56d3
  41d6ad:	mov    BYTE PTR [edi],al
  41d6af:	cmp    eax,0x5198d08d
  41d6b4:	adc    BYTE PTR [ebx+esi*8-0x6d],ah
  41d6b8:	mov    ch,0xb9
  41d6ba:	inc    esp
  41d6bb:	in     al,dx
  41d6bc:	out    dx,al
  41d6bd:	out    0xfd,al
  41d6bf:	xchg   edx,eax
  41d6c0:	jo     0x41d686
  41d6c2:	test   edi,esi
  41d6c4:	sti    
  41d6c5:	pop    ds
  41d6c6:	inc    esp
  41d6c7:	mov    edi,0x96c81be2
  41d6cc:	pop    esi
  41d6cd:	pop    ds
  41d6ce:	loope  0x41d658
  41d6d0:	ins    DWORD PTR es:[edi],dx
  41d6d1:	mov    DWORD PTR [ecx+0x2602a519],eax
  41d6d7:	rcl    ecx,1
  41d6d9:	mov    al,0x6b
  41d6db:	pop    edi
  41d6dc:	dec    ebx
  41d6dd:	imul   esi,DWORD PTR [esp+eiz*8],0xffffffd4
  41d6e1:	callw  0xb892
  41d6e5:	mov    eax,0x80b401dc
  41d6ea:	gs or  bl,bl
  41d6ed:	adc    edx,ebp
  41d6ef:	ret    0x5eff
  41d6f2:	aad    0x30
  41d6f4:	outs   dx,BYTE PTR ds:[esi]
  41d6f5:	fdivr  DWORD PTR ds:0xe82e84f8
  41d6fb:	aad    0x30
  41d6fd:	pop    edx
  41d6fe:	add    cl,dh
  41d700:	stos   DWORD PTR es:[edi],eax
  41d701:	and    ch,BYTE PTR [ecx+0x3]
  41d704:	inc    eax
  41d705:	and    ebx,eax
  41d707:	stc    
  41d708:	lods   eax,DWORD PTR ds:[esi]
  41d709:	sbb    DWORD PTR [ebx],0xffffff85
  41d70c:	dec    esp
  41d70d:	add    al,0xe9
  41d70f:	cmp    BYTE PTR [ebx+edx*2],al
  41d712:	shr    BYTE PTR ds:0x84b03830,cl
  41d718:	fwait
  41d719:	adc    ebp,DWORD PTR [ebx+ebp*4+0xe42a3e6]
  41d720:	es into 
  41d722:	push   edx
  41d723:	mov    dl,0x77
  41d725:	hlt    
  41d726:	jmp    0x958c889f
  41d72b:	mov    eax,ds:0xe3c1f0f3
  41d730:	ins    BYTE PTR es:[edi],dx
  41d731:	xor    al,0x51
  41d733:	int    0x16
  41d735:	inc    ecx
  41d736:	adc    eax,0xfdc0d7a8
  41d73b:	mov    edi,0xb1442aa2
  41d740:	pushf  
  41d741:	(bad)  
  41d742:	mov    edx,0x54e66995
  41d747:	mov    esp,0xb2258e58
  41d74c:	or     eax,0xcbd22433
  41d751:	and    al,0x14
  41d753:	xchg   ebp,eax
  41d754:	or     bh,BYTE PTR [ebp+0x2916ea83]
  41d75a:	fs mov edi,0xf231cbaa
  41d760:	push   ss
  41d761:	data16 add dl,dl
  41d764:	xor    DWORD PTR [edx-0x72f73cf3],esp
  41d76a:	out    dx,al
  41d76b:	in     eax,dx
  41d76c:	sub    DWORD PTR [eax+0x52],ebp
  41d76f:	ret    
  41d770:	pop    ds
  41d771:	pop    esi
  41d772:	test   ebp,0xb82f7f7a
  41d778:	xchg   esp,eax
  41d779:	pop    edi
  41d77a:	jmp    0x41d745
  41d77c:	aad    0x72
  41d77e:	sar    BYTE PTR [esi],cl
  41d780:	outs   dx,DWORD PTR ds:[esi]
  41d781:	lds    esi,FWORD PTR [edi]
  41d783:	mov    dh,0x31
  41d785:	and    BYTE PTR [edi-0x26],bl
  41d788:	mul    DWORD PTR [ecx+0x3c4cce11]
  41d78e:	bound  ecx,QWORD PTR [esi]
  41d790:	jg     0x41d7af
  41d792:	xchg   ecx,eax
  41d793:	push   ds
  41d794:	loopne 0x41d7e9
  41d796:	jne    0x41d75d
  41d798:	test   DWORD PTR [eax+0x267b3f81],edi
  41d79e:	int3   
  41d79f:	in     al,0xd4
  41d7a1:	dec    ecx
  41d7a2:	retf   0x2657
  41d7a5:	imul   DWORD PTR [eax+0x26]
  41d7a8:	inc    esp
  41d7a9:	jae    0x41d80c
  41d7ab:	test   BYTE PTR [eax+edi*1],bh
  41d7ae:	sub    BYTE PTR [ecx-0xb],ch
  41d7b1:	xor    BYTE PTR [eax+eiz*1+0x1],0x23
  41d7b6:	enter  0x6870,0x8a
  41d7ba:	jg     0x41d767
  41d7bc:	sbb    al,0x3c
  41d7be:	por    mm7,QWORD PTR [esi-0x2d954c3d]
  41d7c5:	xor    ebx,DWORD PTR [edi]
  41d7c7:	cmp    eax,0x574ed3e3
  41d7cc:	pop    edi
  41d7cd:	mov    ebx,0x89a867c2
  41d7d2:	xchg   ebx,eax
  41d7d3:	aaa    
  41d7d4:	scas   eax,DWORD PTR es:[edi]
  41d7d5:	clc    
  41d7d6:	lea    ebx,[esi-0x72]
  41d7d9:	or     eax,0x6bc69363
  41d7de:	loope  0x41d7ea
  41d7e0:	js     0x41d76d
  41d7e2:	push   edx
  41d7e3:	loope  0x41d79e
  41d7e5:	push   0xffffff88
  41d7e7:	adc    dh,BYTE PTR [ecx]
  41d7e9:	adc    cl,BYTE PTR [ebp+0x5df9f5e4]
  41d7ef:	ja     0x41d7dd
  41d7f1:	hlt    
  41d7f2:	adc    al,0xad
  41d7f4:	xor    eax,0x4e03a349
  41d7f9:	mov    ah,0x21
  41d7fb:	pop    edi
  41d7fc:	div    DWORD PTR [edx+0x6785c6b9]
  41d802:	cmp    ecx,DWORD PTR [esi]
  41d804:	bound  esi,QWORD PTR [ecx+0x414a5eae]
  41d80a:	dec    esi
  41d80b:	mov    bh,0x8e
  41d80d:	add    bh,BYTE PTR [esi+0x60]
  41d810:	ins    DWORD PTR es:[edi],dx
  41d811:	fbld   TBYTE PTR [esi+0x1cb2dccc]
  41d817:	lds    eax,FWORD PTR [ecx+eiz*8]
  41d81a:	test   DWORD PTR [edi],edx
  41d81c:	jp     0x41d86e
  41d81e:	mov    DWORD PTR [ecx+0x60],edi
  41d821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d822:	enter  0x64d7,0xf2
  41d826:	push   0x15
  41d828:	xchg   edx,eax
  41d829:	shr    DWORD PTR [esi+0x43],0x27
  41d82d:	mov    ch,0xaa
  41d82f:	cmp    bh,cl
  41d831:	outs   dx,DWORD PTR ds:[esi]
  41d832:	dec    BYTE PTR [edi-0x5448b248]
  41d838:	loope  0x41d7f5
  41d83a:	mov    bh,0x7b
  41d83c:	and    al,0x65
  41d83e:	clc    
  41d83f:	jl     0x41d819
  41d841:	push   edx
  41d842:	push   ss
  41d843:	add    BYTE PTR [edx-0x4bf96f8d],ah
  41d849:	adc    ch,dl
  41d84b:	jne    0x41d83a
  41d84d:	or     DWORD PTR [edx+ecx*4+0x2f],0xd
  41d852:	mov    edx,0x9fdbaf9b
  41d857:	adc    al,0x90
  41d859:	jle    0x41d824
  41d85b:	out    0x7e,eax
  41d85d:	shr    BYTE PTR [ebx+0x77fd53a],1
  41d863:	jae    0x41d804
  41d865:	(bad)  
  41d866:	jnp    0x41d8e2
  41d868:	sahf   
  41d869:	pusha  
  41d86a:	daa    
  41d86b:	ja     0x41d834
  41d86d:	adc    al,0x88
  41d86f:	dec    esi
  41d870:	ins    DWORD PTR es:[edi],dx
  41d871:	sub    DWORD PTR [edi-0x479952f],edx
  41d877:	call   0x46de:0x7e5d8dc1
  41d87e:	inc    ebx
  41d87f:	cmp    BYTE PTR [ebp-0x47],cl
  41d882:	hlt    
  41d883:	cmp    bl,BYTE PTR [edx-0x4e308c1d]
  41d889:	cwde   
  41d88a:	push   edi
  41d88b:	imul   ebp,ebx,0x455ada1f
  41d891:	push   eax
  41d892:	pop    esi
  41d893:	fiadd  WORD PTR [esi-0x27]
  41d896:	adc    BYTE PTR [edi+0x4a],0x2b
  41d89a:	mov    ebp,0xb63d119c
  41d89f:	data16 jae 0x41d8de
  41d8a2:	and    esi,DWORD PTR [eax+0x5a]
  41d8a5:	jl     0x41d8c6
  41d8a7:	pushf  
  41d8a8:	rol    BYTE PTR [eax],0xe
  41d8ab:	and    eax,0xcc3c3cdf
  41d8b0:	outs   dx,BYTE PTR ds:[esi]
  41d8b1:	lods   al,BYTE PTR ds:[esi]
  41d8b2:	jg     0x41d83b
  41d8b4:	lds    esi,FWORD PTR [eax-0x20]
  41d8b7:	adc    al,BYTE PTR [ebp+0x39]
  41d8ba:	cli    
  41d8bb:	mov    esi,0xa77306d8
  41d8c0:	mov    edx,0x5afdc66e
  41d8c5:	icebp  
  41d8c6:	ins    BYTE PTR es:[edi],dx
  41d8c7:	jns    0x41d91f
  41d8c9:	lods   eax,DWORD PTR ds:[esi]
  41d8ca:	mov    BYTE PTR [edi],al
  41d8cc:	aaa    
  41d8cd:	mov    WORD PTR [edx-0x2fe23478],gs
  41d8d3:	xor    al,0xe5
  41d8d5:	sub    cl,BYTE PTR [ebx]
  41d8d7:	mov    dh,0x85
  41d8d9:	pop    eax
  41d8da:	cmp    al,0xce
  41d8dc:	out    dx,al
  41d8dd:	nop
  41d8de:	add    DWORD PTR [ebp-0x40],edx
  41d8e1:	jno    0x41d86c
  41d8e3:	mov    eax,DWORD PTR [ebp+0x7b]
  41d8e6:	addr16 in al,0xb
  41d8e9:	pop    esi
  41d8ea:	jg     0x41d8d8
  41d8ec:	call   0x6be0:0xdd83725e
  41d8f3:	imul   ecx,DWORD PTR [edx-0x55],0xffffffaa
  41d8f7:	sbb    dh,BYTE PTR [eax-0x4c925719]
  41d8fd:	xchg   edi,eax
  41d8fe:	ror    BYTE PTR [ecx+0x79b54126],0xae
  41d905:	adc    BYTE PTR ds:0x134a3b87,0x8a
  41d90c:	push   edi
  41d90d:	jecxz  0x41d8c9
  41d90f:	mov    WORD PTR [edi-0x247e9118],fs
  41d915:	add    DWORD PTR gs:[ebp+0x15a31e63],esi
  41d91c:	fnstcw WORD PTR [esi-0x2]
  41d91f:	aam    0xca
  41d921:	xlat   BYTE PTR ds:[ebx]
  41d922:	out    dx,eax
  41d923:	repnz or BYTE PTR [eax],cl
  41d926:	pusha  
  41d927:	(bad)
  41d92a:	or     esp,DWORD PTR [esi]
  41d92c:	jmp    0xfbdb:0x1d4ff7e7
  41d933:	lds    ebx,FWORD PTR [esi]
  41d935:	aam    0xbc
  41d937:	cmp    al,0x0
  41d939:	lods   al,BYTE PTR ds:[esi]
  41d93a:	cmp    BYTE PTR [ebx+0x30e1b],al
  41d940:	push   ebx
  41d941:	mov    dh,0x0
  41d943:	rcl    BYTE PTR cs:[ebx],0xe4
  41d947:	inc    esi
  41d948:	lods   al,BYTE PTR ds:[esi]
  41d949:	test   BYTE PTR [ebx],dl
  41d94b:	outs   dx,BYTE PTR ds:[esi]
  41d94c:	dec    eax
  41d94d:	int3   
  41d94e:	jo     0x41d910
  41d950:	jle    0x41d93b
  41d952:	jp     0x41d942
  41d954:	jo     0x41d949
  41d956:	icebp  
  41d957:	idiv   bl
  41d959:	ror    BYTE PTR [ecx],1
  41d95b:	cmp    DWORD PTR [eax-0x1c],ebx
  41d95e:	outs   dx,BYTE PTR ds:[esi]
  41d95f:	ds popf 
  41d961:	fstp   st(2)
  41d963:	stos   DWORD PTR es:[edi],eax
  41d964:	add    bh,BYTE PTR [ebx+0x24]
  41d967:	adc    bl,ah
  41d969:	cmp    eax,0x23a27c5f
  41d96e:	ret    
  41d96f:	jno    0x41d93a
  41d971:	push   eax
  41d972:	mov    ds:0x97e784fa,eax
  41d977:	jo     0x41d916
  41d979:	add    bl,BYTE PTR [ebx+0x6b54741b]
  41d97f:	sar    DWORD PTR ds:0x5ab54cab,0x10
  41d986:	xchg   ebp,eax
  41d987:	jl     0x41d9bc
  41d989:	aam    0x2a
  41d98b:	mov    esp,0xe440c5c8
  41d990:	or     DWORD PTR [edx-0x65],ebx
  41d993:	bound  ebp,QWORD PTR [edx-0x32639adf]
  41d999:	aad    0x9c
  41d99b:	jecxz  0x41d9fc
  41d99d:	test   DWORD PTR [ebx+edi*1],ebp
  41d9a0:	sbb    cl,ah
  41d9a2:	lea    edi,[edi-0x4deadb1d]
  41d9a8:	push   edx
  41d9a9:	pop    ds
  41d9aa:	ret    
  41d9ab:	mov    edx,DWORD PTR [esp+edx*1-0x17ca53e3]
  41d9b2:	sbb    al,0x19
  41d9b4:	adc    BYTE PTR [ebp+0x3020d13b],bh
  41d9ba:	stos   DWORD PTR es:[edi],eax
  41d9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9bc:	pop    es
  41d9bd:	mov    ebx,0x2d93cdb5
  41d9c2:	adc    dh,BYTE PTR ds:0x7c383a26
  41d9c8:	jns    0x41d9b1
  41d9ca:	push   ss
  41d9cb:	xchg   edx,eax
  41d9cc:	xor    BYTE PTR [edx],0xcf
  41d9cf:	imul   edi,DWORD PTR [edx],0x51
  41d9d2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41d9d4:	push   0xffffffaa
  41d9d6:	retf   0xf0b6
  41d9d9:	jno    0x41d9f0
  41d9db:	mov    bl,0x54
  41d9dd:	pushf  
  41d9de:	(bad)  
  41d9df:	mov    edx,0x7ff99b11
  41d9e4:	xor    DWORD PTR [ecx+esi*1],eax
  41d9e7:	cmp    dl,0x11
  41d9ea:	rcl    BYTE PTR [eax-0x32],1
  41d9ed:	jp     0x41d9d3
  41d9ef:	rcl    DWORD PTR [edx+eax*8+0x62bbf22],cl
  41d9f6:	stos   BYTE PTR es:[edi],al
  41d9f7:	and    DWORD PTR [edx+0x722340ab],edi
  41d9fd:	call   0x34e6c9a6
  41da02:	jo     0x41d9c8
  41da04:	out    dx,eax
  41da05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da06:	xchg   esp,eax
  41da07:	pop    ss
  41da08:	adc    esi,DWORD PTR [eax+edx*8]
  41da0b:	in     al,dx
  41da0c:	sahf   
  41da0d:	mov    ds:0x87a59e54,eax
  41da12:	pop    ds
  41da13:	bnd jae 0x41da92
  41da16:	outs   dx,BYTE PTR ds:[esi]
  41da17:	mov    dl,0xfe
  41da19:	mov    eax,fs
  41da1b:	or     al,0x97
  41da1d:	xchg   BYTE PTR [ebp-0x51c19bbe],cl
  41da23:	in     al,dx
  41da24:	in     al,0xe7
  41da26:	inc    ebp
  41da27:	sbb    eax,0xc78adb9f
  41da2c:	inc    edi
  41da2d:	sub    bh,dh
  41da2f:	repz stc 
  41da31:	addr16 sub ebp,ebp
  41da34:	push   ecx
  41da35:	sti    
  41da36:	sub    BYTE PTR [edi-0x78c37a1b],ch
  41da3c:	pop    esp
  41da3d:	jecxz  0x41da2a
  41da3f:	jmp    0x6b245d63
  41da44:	inc    edi
  41da45:	xor    esp,ecx
  41da47:	pop    edi
  41da48:	dec    ebp
  41da49:	mov    ch,0x5e
  41da4b:	xor    cl,BYTE PTR [edi-0x772cfe10]
  41da51:	and    al,0xe9
  41da53:	push   ds
  41da54:	or     esi,ebx
  41da56:	sbb    al,0xb9
  41da58:	mov    ebp,DWORD PTR [ecx-0x335ebfd6]
  41da5e:	mov    ebx,0x3c93e694
  41da63:	fsubr  QWORD PTR [edi-0x5b]
  41da66:	xor    esi,ebp
  41da68:	pop    edx
  41da69:	sbb    DWORD PTR [ebp+0x2b465c7],0xffffffa6
  41da70:	sub    ah,BYTE PTR [edi+0x3e01461f]
  41da76:	in     al,0x11
  41da78:	xchg   edx,eax
  41da79:	aas    
  41da7a:	push   ebp
  41da7b:	mov    ds:0xec8491df,eax
  41da80:	enter  0xb0a5,0x93
  41da84:	xchg   ebx,eax
  41da85:	add    dl,ch
  41da87:	add    BYTE PTR [ebp-0x2a],ah
  41da8a:	lods   eax,DWORD PTR ds:[esi]
  41da8b:	cmp    ah,dl
  41da8d:	adc    DWORD PTR [ebp*8-0x4368a34e],ebp
  41da94:	mov    edi,0x322a20c4
  41da99:	loopne 0x41da1e
  41da9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da9c:	ss imul ecx,ebp,0xffffffef
  41daa0:	pop    eax
  41daa1:	push   ebx
  41daa2:	dec    ebx
  41daa3:	mov    cl,0x27
  41daa5:	pop    es
  41daa6:	mov    DWORD PTR [ebp-0x7abfb9a5],edi
  41daac:	aad    0x65
  41daae:	push   ebx
  41daaf:	lods   eax,DWORD PTR ds:[esi]
  41dab1:	rcr    BYTE PTR [edi-0xc4a876f],1
  41dab7:	mov    ecx,0x5b5f3c49
  41dabc:	fs mov edx,0x9d6c6e48
  41dac2:	dec    edi
  41dac3:	mov    bh,0xaa
  41dac5:	cmc    
  41dac6:	mov    al,ds:0xd8cf53a7
  41dacb:	dec    ebx
  41dacc:	repnz stos BYTE PTR es:[edi],al
  41dace:	jno    0x41dab4
  41dad0:	xchg   DWORD PTR [ebx+0x41],edx
  41dad3:	test   al,0xdd
  41dad5:	add    al,0x5b
  41dad7:	aas    
  41dad8:	sar    BYTE PTR [ecx-0x2a573618],0x28
  41dadf:	cs push ecx
  41dae1:	in     eax,0x78
  41dae3:	sub    ecx,DWORD PTR [ecx]
  41dae5:	inc    esp
  41dae6:	jb     0x41dae1
  41dae8:	lods   al,BYTE PTR ds:[esi]
  41dae9:	or     edi,DWORD PTR [ecx-0x7b]
  41daec:	sbb    BYTE PTR [ebp-0x32],bh
  41daef:	add    al,0x2a
  41daf1:	lahf   
  41daf2:	pop    es
  41daf3:	(bad)  
  41daf4:	ins    BYTE PTR es:[edi],dx
  41daf5:	sti    
  41daf6:	mov    edi,0x258679c8
  41dafb:	xlat   BYTE PTR ds:[ebx]
  41dafc:	jle    0x41db18
  41dafe:	jns    0x41db6b
  41db00:	stos   DWORD PTR es:[edi],eax
  41db01:	gs aam 0x35
  41db04:	imul   esi,DWORD PTR [edi-0x71],0xffffff90
  41db08:	mov    ebp,0xcb944f2e
  41db0d:	inc    eax
  41db0e:	push   ebx
  41db0f:	mov    WORD PTR [esi+0x17],ss
  41db12:	mov    ch,0xde
  41db14:	dec    ebp
  41db15:	pushf  
  41db16:	inc    BYTE PTR [ecx+0xbd607e2]
  41db1c:	into   
  41db1d:	inc    ebp
  41db1e:	push   ebp
  41db1f:	mov    fs,WORD PTR [eax-0x1d]
  41db22:	xchg   edi,eax
  41db23:	xor    eax,0x9b353208
  41db28:	popf   
  41db29:	aad    0x41
  41db2b:	sub    dl,bl
  41db2d:	inc    ebx
  41db2e:	(bad)  
  41db2f:	cmp    al,0x8
  41db31:	sbb    DWORD PTR [edi+0x26],0xffffffab
  41db35:	inc    edi
  41db36:	cmp    BYTE PTR [ecx-0xaa153bb],0x79
  41db3d:	ins    BYTE PTR es:[edi],dx
  41db3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3f:	jmp    0x41db78
  41db41:	das    
  41db42:	cmp    al,0xdc
  41db44:	neg    BYTE PTR [ebx+ebp*4]
  41db47:	sbb    al,0x1e
  41db49:	mov    eax,ds:0x591d61ca
  41db4e:	or     al,0xf2
  41db50:	sub    edx,ebp
  41db52:	push   eax
  41db53:	addr16 shr ch,cl
  41db56:	enter  0xc3c6,0x29
  41db5a:	out    0x17,al
  41db5c:	inc    edx
  41db5d:	pop    edi
  41db5e:	imul   al
  41db60:	scas   al,BYTE PTR es:[edi]
  41db61:	inc    eax
  41db62:	lods   eax,DWORD PTR ds:[esi]
  41db63:	push   cs
  41db64:	call   0x2ac6:0xa3c33887
  41db6b:	and    DWORD PTR [esi],esi
  41db6d:	outs   dx,BYTE PTR ds:[esi]
  41db6e:	mov    eax,0xa26f342c
  41db73:	inc    ebx
  41db74:	mov    bl,0x75
  41db76:	rcl    DWORD PTR [edx+esi*8-0x66],cl
  41db7a:	mov    edi,0x8763b459
  41db7f:	adc    DWORD PTR [edx+0x601ad969],edi
  41db85:	mov    al,ds:0xcc6aa0a2
  41db8a:	test   dl,dh
  41db8c:	jns    0x41dbeb
  41db8e:	and    al,0xd8
  41db90:	pop    ds
  41db91:	mov    gs,WORD PTR ds:[edi+ebx*1]
  41db95:	or     ebp,ebx
  41db97:	inc    esp
  41db98:	imul   bl
  41db9a:	dec    edx
  41db9b:	int3   
  41db9c:	rcr    esi,1
  41db9e:	mov    eax,ecx
  41dba0:	jl     0x41dbb6
  41dba2:	sbb    eax,DWORD PTR [esi-0x74d822b7]
  41dba8:	xor    al,0xfe
  41dbaa:	mov    ecx,0x94902220
  41dbaf:	mov    al,ds:0x168534eb
  41dbb4:	fwait
  41dbb5:	inc    ebp
  41dbb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb7:	inc    esi
  41dbb8:	mov    ecx,0x14bff26a
  41dbbd:	mov    edi,ebp
  41dbbf:	xor    DWORD PTR [eax+edx*4-0x5cb70011],0x33
  41dbc7:	das    
  41dbc8:	sbb    ebx,esi
  41dbca:	sbb    eax,0x2491fe3b
  41dbcf:	in     al,dx
  41dbd0:	sub    DWORD PTR [ebp+0x3b1c98af],edi
  41dbd6:	enter  0xba17,0x47
  41dbda:	jp     0x41dbab
  41dbdc:	in     eax,0x6b
  41dbde:	test   eax,0xdbf2b816
  41dbe3:	add    BYTE PTR [ecx-0x3d],ch
  41dbe6:	inc    ecx
  41dbe7:	(bad)  
  41dbe8:	hlt    
  41dbe9:	xchg   esp,eax
  41dbea:	dec    eax
  41dbeb:	dec    ecx
  41dbec:	(bad)  
  41dbed:	xchg   ebx,eax
  41dbee:	(bad)  [esi]
  41dbf0:	and    al,0xaa
  41dbf2:	retf   
  41dbf3:	out    dx,eax
  41dbf4:	sub    ebp,DWORD PTR [edx-0x124f1f36]
  41dbfa:	sbb    ecx,DWORD PTR [ebx-0x33c25e2b]
  41dc00:	ret    
  41dc01:	retf   0xf499
  41dc04:	iret   
  41dc05:	jmp    0x6170df0e
  41dc0a:	test   BYTE PTR [eax],dh
  41dc0c:	(bad)  
  41dc0d:	mov    edx,0x21f4e03c
  41dc12:	cmp    edx,eax
  41dc14:	push   ebx
  41dc15:	push   es
  41dc16:	popf   
  41dc17:	test   BYTE PTR [edx+0x2a232604],ah
  41dc1d:	dec    edx
  41dc1e:	add    BYTE PTR [ebp+esi*4+0xf7fff92],cl
  41dc25:	shl    WORD PTR [edx],0x86
  41dc29:	jnp    0x41dc0e
  41dc2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc2c:	push   edi
  41dc2d:	xor    DWORD PTR [ebx+0x7d0ddda8],ecx
  41dc33:	cmp    al,0xc2
  41dc35:	int3   
  41dc36:	add    al,0x3d
  41dc38:	ss mov esi,0xcc8bbb6a
  41dc3e:	inc    edx
  41dc3f:	rcr    DWORD PTR [esp+eax*1],0x6a
  41dc43:	loopne 0x41dbe5
  41dc45:	daa    
  41dc46:	xlat   BYTE PTR ds:[ebx]
  41dc47:	jg     0x41dc36
  41dc49:	test   ch,bl
  41dc4b:	pop    esi
  41dc4c:	loopne 0x41dc41
  41dc4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc4f:	cmp    esp,DWORD PTR [esi-0x5ced59c8]
  41dc55:	sbb    al,0x8f
  41dc57:	addr16 push edi
  41dc59:	sahf   
  41dc5a:	or     DWORD PTR ds:0x9ec42b49,eax
  41dc60:	or     bl,0xd2
  41dc63:	aaa    
  41dc64:	lods   eax,DWORD PTR ds:[esi]
  41dc65:	lock loop 0x41dc4e
  41dc68:	leave  
  41dc69:	sub    ebx,DWORD PTR [ebx+eiz*2+0x24e2d88d]
  41dc70:	push   ebp
  41dc71:	(bad)  
  41dc72:	frstor ds:0x668750f6
  41dc78:	cmp    ch,BYTE PTR [ebp-0x3]
  41dc7b:	enter  0xc7d0,0x12
  41dc7f:	pop    ss
  41dc80:	adc    esi,DWORD PTR [eax+0x1b8080d9]
  41dc86:	(bad)  
  41dc87:	fsub   QWORD PTR [edi+eiz*8-0x76]
  41dc8b:	div    DWORD PTR [edi]
  41dc8d:	jb     0x41dc31
  41dc8f:	addr16 out 0x36,al
  41dc92:	rol    DWORD PTR [esi+0x20],cl
  41dc95:	push   edi
  41dc96:	cmp    eax,esp
  41dc98:	push   edi
  41dc99:	(bad)  
  41dc9a:	pop    edx
  41dc9b:	mov    al,dl
  41dc9d:	nop
  41dc9e:	mov    ah,0xdd
  41dca0:	or     eax,ebx
  41dca2:	cld    
  41dca3:	inc    edx
  41dca4:	push   eax
  41dca5:	dec    ebx
  41dca6:	add    BYTE PTR [ebx],0xb3
  41dca9:	lahf   
  41dcaa:	cmp    eax,0x9bb58cbe
  41dcaf:	cmc    
  41dcb0:	fild   QWORD PTR [esi-0x6be969e]
  41dcb6:	test   ch,bh
  41dcb8:	les    ebp,FWORD PTR [ebx-0x4ac82123]
  41dcbe:	dec    ebx
  41dcbf:	mov    BYTE PTR [ebx-0x2e428b2a],dl
  41dcc5:	dec    esp
  41dcc6:	and    eax,0x20c4fd36
  41dccb:	jo     0x41dcaf
  41dccd:	fnstsw WORD PTR [edx-0x10]
  41dcd0:	les    edx,FWORD PTR [ebx+eax*1]
  41dcd3:	sub    BYTE PTR [eax],ah
  41dcd5:	push   eax
  41dcd6:	mov    ebx,0x805995e
  41dcdb:	xchg   edx,eax
  41dcdc:	inc    edi
  41dcdd:	xor    ch,bh
  41dcdf:	(bad)  
  41dce0:	jmp    0xa6f5e695
  41dce5:	clc    
  41dce6:	inc    DWORD PTR [ecx-0x177323fd]
  41dcec:	arpl   WORD PTR [ebp+0x26cd6f42],di
  41dcf2:	and    DWORD PTR [esi-0x1e],edx
  41dcf5:	(bad)  
  41dcf6:	into   
  41dcf7:	inc    edi
  41dcf8:	mov    BYTE PTR [edi],al
  41dcfa:	inc    ecx
  41dcfb:	loopne 0x41dd1e
  41dcfd:	pop    edx
  41dcfe:	inc    ebx
  41dcff:	fwait
  41dd00:	aad    0x86
  41dd02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd03:	mov    bh,0x64
  41dd05:	in     eax,0x73
  41dd07:	add    DWORD PTR [ecx+esi*4],edx
  41dd0a:	mov    ecx,0x1ffca0d7
  41dd0f:	mov    ch,0x8c
  41dd11:	mov    eax,0xcd0a075b
  41dd16:	mov    esp,0xf5c0488a
  41dd1b:	adc    al,0xc6
  41dd1d:	cmp    DWORD PTR [edi-0x2f],ebx
  41dd20:	and    dh,BYTE PTR [ebx-0x80]
  41dd23:	loop   0x41dcf4
  41dd25:	cs fst st(7)
  41dd28:	mov    ebp,0x7ad1ebe0
  41dd2d:	jmp    0x4feb:0xd56c0dc4
  41dd34:	dec    edx
  41dd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd36:	xchg   esp,eax
  41dd37:	retf   
  41dd38:	xchg   BYTE PTR [edi],bh
  41dd3a:	xlat   BYTE PTR ds:[ebx]
  41dd3b:	test   ch,dl
  41dd3d:	les    ebp,FWORD PTR [eax-0x5c]
  41dd40:	sahf   
  41dd41:	repz and al,0xc4
  41dd44:	dec    esi
  41dd45:	jae    0x41dda0
  41dd47:	jae    0x41dcf2
  41dd49:	(bad)  
  41dd4b:	sub    DWORD PTR [ebp-0x187ede82],0x250e5e31
  41dd55:	dec    eax
  41dd56:	and    DWORD PTR [ebx-0x68be2dfd],ecx
  41dd5c:	pop    edi
  41dd5d:	aad    0x32
  41dd5f:	aas    
  41dd60:	in     al,0x3a
  41dd62:	loop   0x41dd22
  41dd64:	xchg   ebp,eax
  41dd65:	std    
  41dd66:	or     eax,eax
  41dd68:	sub    eax,0x6ffe8600
  41dd6d:	dec    edi
  41dd6e:	(bad)  
  41dd6f:	enter  0xd083,0xc4
  41dd73:	and    BYTE PTR [esi-0x340f2d01],dl
  41dd79:	enter  0xd165,0x23
  41dd7d:	shl    DWORD PTR [ecx+0x7f],1
  41dd80:	dec    edx
  41dd81:	stos   BYTE PTR es:[edi],al
  41dd82:	push   0xffffff89
  41dd84:	dec    esp
  41dd85:	cmp    BYTE PTR [ecx],dl
  41dd87:	in     eax,dx
  41dd88:	lods   al,BYTE PTR ds:[esi]
  41dd89:	lods   al,BYTE PTR ds:[esi]
  41dd8a:	push   eax
  41dd8b:	iret   
  41dd8c:	aaa    
  41dd8d:	int3   
  41dd8e:	(bad)  
  41dd8f:	(bad)  
  41dd90:	lahf   
  41dd91:	mov    ebp,0xa0aabdba
  41dd96:	mov    eax,0x7c19bbd3
  41dd9b:	xchg   edi,eax
  41dd9c:	sub    DWORD PTR [ebx+0x51],ecx
  41dd9f:	in     eax,dx
  41dda0:	cli    
  41dda1:	fnstsw WORD PTR [edx+ecx*8+0x7ea7000a]
  41dda8:	ror    BYTE PTR [ebx+0x18c65a18],1
  41ddae:	(bad)  
  41ddaf:	fld    QWORD PTR [esi+0x47]
  41ddb2:	fscale 
  41ddb4:	xor    ah,ah
  41ddb6:	les    esp,FWORD PTR [edi+0x6fdfc8b2]
  41ddbc:	pop    esp
  41ddbd:	push   ecx
  41ddbe:	pop    edi
  41ddbf:	adc    eax,DWORD PTR [eax]
  41ddc1:	test   al,0x1b
  41ddc3:	fld    QWORD PTR [edi-0x33]
  41ddc6:	mov    ebp,0x5ab0b8ae
  41ddcb:	and    ch,BYTE PTR [eax]
  41ddcd:	es jno 0x41dddb
  41ddd0:	add    ebp,DWORD PTR [ecx+ebp*4-0xde0b510]
  41ddd7:	jmp    0xcba9fdac
  41dddc:	mov    al,0xe3
  41ddde:	cmp    BYTE PTR [ebx+0x7effdb9f],cl
  41dde4:	cmp    edx,esp
  41dde6:	fdivr  DWORD PTR ds:0x80035e3a
  41ddec:	push   ds
  41dded:	mov    ds:0x831cda25,eax
  41ddf2:	daa    
  41ddf3:	scas   al,BYTE PTR es:[edi]
  41ddf4:	mov    DWORD PTR [ebx+0x3add6544],ebx
  41ddfa:	shl    edi,0xdc
  41ddfd:	fs push ss
  41ddff:	out    0x6a,eax
  41de01:	pop    edx
  41de02:	ret    0xdc6c
  41de05:	in     eax,dx
  41de06:	cmp    dl,BYTE PTR [ecx+esi*2+0x5f]
  41de0a:	xchg   ebp,eax
  41de0b:	sahf   
  41de0c:	cmp    esi,DWORD PTR [ebp+esi*2+0x3c]
  41de10:	push   0x6d096861
  41de15:	xor    edi,edi
  41de17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de18:	push   ecx
  41de19:	mov    ecx,0x32ebeb13
  41de1e:	lods   al,BYTE PTR ds:[esi]
  41de1f:	(bad)  
  41de20:	sub    bl,bl
  41de22:	fst    QWORD PTR [edx+ecx*1]
  41de25:	dec    edi
  41de26:	lea    eax,[ecx+esi*1-0x240e1cbc]
  41de2d:	cmp    DWORD PTR [ebx+0x45b8ff8f],edi
  41de33:	dec    ebx
  41de34:	adc    eax,0x3ba1fd0c
  41de39:	cmp    BYTE PTR [ebx-0x4e0e9a07],dl
  41de3f:	jmp    0x5262:0x2b1b2442
  41de46:	sub    esi,edi
  41de48:	out    dx,al
  41de49:	sar    DWORD PTR [edx],0xfe
  41de4c:	sahf   
  41de4d:	add    ch,BYTE PTR [edx+eiz*2-0x33]
  41de51:	jae    0x41decb
  41de53:	pop    ds
  41de54:	retf   
  41de55:	aad    0xd5
  41de57:	dec    esi
  41de58:	cmp    ebp,eax
  41de5a:	push   eax
  41de5b:	outs   dx,BYTE PTR ds:[esi]
  41de5c:	and    ebp,DWORD PTR [ebx+0x32cd0903]
  41de62:	cmp    edi,ebp
  41de64:	ror    BYTE PTR [edx+0x31a35b98],0x8d
  41de6b:	push   ebx
  41de6c:	scas   eax,DWORD PTR es:[edi]
  41de6d:	xlat   BYTE PTR ds:[ebx]
  41de6e:	jno    0x41de5a
  41de70:	mov    ebx,0x2d9b22c6
  41de75:	test   al,0x99
  41de77:	je     0x41de85
  41de79:	stc    
  41de7a:	mov    edx,0xf2d1a3fe
  41de7f:	mov    eax,0x8ec921bf
  41de84:	in     al,dx
  41de85:	lahf   
  41de86:	pop    eax
  41de87:	test   eax,0x2958f7de
  41de8c:	mov    al,ds:0x9793f190
  41de91:	or     bh,al
  41de93:	call   0xdd7c:0xd071a0d
  41de9a:	jmp    0x291e:0x7ce9d52d
  41dea1:	sub    ebp,DWORD PTR [edx+0x3f]
  41dea4:	and    al,0xf3
  41dea6:	cs out 0x91,al
  41dea9:	popf   
  41deaa:	fst    QWORD PTR [ebp+0x62b75fbe]
  41deb0:	xchg   esp,eax
  41deb1:	xor    al,0x90
  41deb3:	xchg   DWORD PTR [edi-0x65ef6ceb],ebx
  41deb9:	(bad)  
  41deba:	mov    al,0x13
  41debc:	mov    edi,0x81c24fc2
  41dec1:	push   es
  41dec2:	sar    DWORD PTR [ecx],cl
  41dec4:	push   es
  41dec5:	std    
  41dec6:	nop
  41dec7:	sti    
  41dec8:	jmp    0xae4f:0x7edad88c
  41decf:	cmp    DWORD PTR [eax+0x7e7820bc],edx
  41ded5:	adc    eax,0x40a88771
  41deda:	jge    0x41de9a
  41dedc:	and    al,0x95
  41dede:	or     BYTE PTR [esi],dl
  41dee0:	lahf   
  41dee1:	outs   dx,DWORD PTR ds:[esi]
  41dee2:	mov    ah,0xf6
  41dee4:	or     al,0xa2
  41dee6:	aaa    
  41dee7:	inc    edx
  41dee8:	cmp    cl,BYTE PTR [esi-0x49]
  41deeb:	add    DWORD PTR [edx+0x3f],ebx
  41deee:	scas   al,BYTE PTR es:[edi]
  41deef:	push   cs
  41def0:	xor    al,0xa5
  41def2:	ss popa 
  41def4:	setl   BYTE PTR [esi]
  41def7:	enter  0xb46f,0x28
  41defb:	sti    
  41defc:	cli    
  41defd:	jg     0x41df0d
  41deff:	sbb    BYTE PTR [ebp+0x532c6556],bl
  41df05:	adc    eax,0xf50dbe33
  41df0a:	adc    BYTE PTR [esi+eiz*1],al
  41df0d:	popf   
  41df0e:	sbb    al,0x63
  41df10:	ins    BYTE PTR es:[edi],dx
  41df11:	outs   dx,BYTE PTR ds:[esi]
  41df12:	pop    edx
  41df13:	jae    0x41df7e
  41df15:	add    dl,BYTE PTR [ecx+ebp*1]
  41df18:	jmp    0xfd764202
  41df1d:	call   0x83429099
  41df22:	dec    edx
  41df23:	inc    esi
  41df24:	xor    ch,BYTE PTR [ebx+0x3b0283ab]
  41df2a:	jnp    0x41df39
  41df2c:	sbb    ah,ch
  41df2e:	mov    eax,ds:0x22698171
  41df33:	jae    0x41df87
  41df35:	mov    WORD PTR [ecx+0x1a44c2d9],fs
  41df3b:	ja     0x41dfb2
  41df3d:	and    DWORD PTR [esp+ebp*8-0x56],0x6ff462ff
  41df45:	inc    ebx
  41df46:	fistp  QWORD PTR [esi]
  41df48:	and    bl,BYTE PTR [esi+0x18]
  41df4b:	xchg   edi,eax
  41df4c:	mov    al,0x71
  41df4e:	jmp    DWORD PTR [ebx]
  41df50:	fdiv   st,st(0)
  41df52:	or     DWORD PTR [esi],0x27033c54
  41df58:	mov    edx,0x31d7e2e9
  41df5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df5e:	mov    eax,0xec3071b3
  41df63:	add    DWORD PTR [eax+0x2fa84561],esi
  41df69:	jbe    0x41df94
  41df6b:	push   0xffffffd4
  41df6d:	sub    al,BYTE PTR [ebx+0x3d]
  41df70:	or     esi,DWORD PTR [edx+edx*1+0x4c]
  41df74:	(bad)  
  41df75:	ja     0x41df53
  41df77:	mov    DWORD PTR [edi-0x4b],edi
  41df7a:	(bad)  
  41df7b:	sub    bh,BYTE PTR [ebp-0x11974b02]
  41df81:	inc    esi
  41df82:	jns    0x41df3d
  41df84:	inc    eax
  41df85:	ds cmc 
  41df87:	or     cl,BYTE PTR [edx+ebx*1-0x2]
  41df8b:	cmc    
  41df8c:	bound  esp,QWORD PTR [ecx-0x50]
  41df8f:	push   0xffffff80
  41df91:	and    cl,BYTE PTR [ebx-0x31]
  41df94:	push   ebx
  41df95:	jae    0x41dfe6
  41df97:	cmp    al,0x60
  41df99:	inc    esi
  41df9a:	ja     0x41e015
  41df9c:	mov    al,0x96
  41df9e:	jno    0x41df81
  41dfa0:	scas   eax,DWORD PTR es:[edi]
  41dfa1:	mov    edi,0xb0d1bf90
  41dfa6:	inc    ebp
  41dfa7:	mov    edi,0x16e2ae22
  41dfac:	sbb    ah,BYTE PTR [esi-0x3b]
  41dfaf:	int    0x29
  41dfb1:	jmp    0x64e0d97a
  41dfb6:	hlt    
  41dfb7:	and    BYTE PTR [eax-0x3e1503bf],0x58
  41dfbe:	loop   0x41e001
  41dfc0:	in     eax,0x4d
  41dfc2:	xor    al,ah
  41dfc4:	(bad)  
  41dfc5:	jp     0x41dffa
  41dfc7:	mov    ebx,ebx
  41dfc9:	test   eax,0xfc5109b4
  41dfce:	aad    0xf0
  41dfd0:	outs   dx,BYTE PTR ds:[esi]
  41dfd1:	mov    ch,0x37
  41dfd3:	xlat   BYTE PTR ds:[ebx]
  41dfd4:	mov    ds:0xf2f9f961,al
  41dfd9:	or     BYTE PTR [edi+edx*4],0x95
  41dfdd:	out    dx,eax
  41dfde:	stc    
  41dfdf:	aaa    
  41dfe0:	push   es
  41dfe1:	adc    ebx,DWORD PTR [eax-0x7b]
  41dfe4:	stos   BYTE PTR es:[edi],al
  41dfe5:	sub    eax,0x54221a86
  41dfea:	std    
  41dfeb:	mov    al,ds:0xe948ccf5
  41dff0:	retf   
  41dff1:	add    al,0x5a
  41dff3:	lahf   
  41dff4:	adc    cl,BYTE PTR [edx+0x65]
  41dff7:	ds adc dl,al
  41dffa:	pop    ebx
  41dffb:	jg     0x41e023
  41dffd:	sar    BYTE PTR [eax-0x4b22ed56],0xf0
  41e004:	test   al,0x8c
  41e006:	jg     0x41e051
  41e008:	add    edi,DWORD PTR [edx]
  41e00a:	lea    edi,[edi-0x5d]
  41e00d:	je     0x41e07d
  41e00f:	xchg   edx,eax
  41e010:	out    dx,al
  41e011:	sahf   
  41e012:	gs jb  0x41dfca
  41e015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e016:	xor    DWORD PTR ds:0x6e9771,0xf1aa6ebf
  41e020:	jmp    0xa9f8f2c0
  41e025:	push   ebx
  41e026:	addr16 xor al,0x59
  41e029:	call   0x86bd49b8
  41e02e:	jmp    0x17df:0x956e3d3d
  41e035:	pop    ss
  41e036:	sub    bl,BYTE PTR ds:0x29d273eb
  41e03c:	aad    0xe4
  41e03e:	lds    ecx,FWORD PTR [eax+0x4045dbe7]
  41e044:	cs je  0x41e000
  41e047:	imul   ecx,ebp,0xd8deb69e
  41e04d:	xor    ecx,ebx
  41e04f:	dec    ebx
  41e050:	lahf   
  41e051:	xchg   DWORD PTR [ebx],esi
  41e053:	retf   
  41e054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e055:	sar    BYTE PTR [eax+0x3f],cl
  41e058:	and    esi,edi
  41e05a:	dec    ebp
  41e05b:	mov    dh,BYTE PTR cs:0x5558b3c4
  41e062:	icebp  
  41e063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e064:	fidivr DWORD PTR [esi]
  41e066:	push   edx
  41e067:	idiv   DWORD PTR [ebx-0x1f]
  41e06a:	dec    ebx
  41e06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06c:	push   es
  41e06d:	adc    edi,DWORD PTR [edx+edx*4+0x9]
  41e071:	cld    
  41e072:	mov    eax,ds:0x72a8e6c5
  41e077:	ror    DWORD PTR [edi],cl
  41e079:	popa   
  41e07a:	hlt    
  41e07b:	loopne 0x41e062
  41e07d:	and    ah,BYTE PTR [eax+0x3a]
  41e080:	push   ss
  41e081:	dec    esi
  41e082:	adc    eax,0xa073601d
  41e087:	adc    dh,BYTE PTR [edx-0x241b63bd]
  41e08d:	neg    DWORD PTR [ecx-0x9]
  41e090:	stc    
  41e091:	mov    dl,0xb5
  41e093:	mov    cl,0x8c
  41e095:	mov    al,0x44
  41e097:	sub    BYTE PTR ds:0x5659410e,dl
  41e09d:	hlt    
  41e09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e09f:	(bad)  
  41e0a0:	and    ecx,DWORD PTR [ebx+0x1bd3b88f]
  41e0a6:	sbb    edi,DWORD PTR [edi+0x23]
  41e0a9:	or     al,0x3b
  41e0ab:	mov    ch,0x16
  41e0ad:	add    DWORD PTR [ebx+0x33],ebp
  41e0b0:	jno    0x41e11a
  41e0b2:	repz adc BYTE PTR ds:[ebx-0xf],al
  41e0b7:	cs push esp
  41e0b9:	mov    WORD PTR [edx+0xe452937],ss
  41e0bf:	jbe    0x41e0c1
  41e0c1:	js     0x41e0d6
  41e0c3:	std    
  41e0c4:	retf   
  41e0c5:	dec    edx
  41e0c6:	scas   al,BYTE PTR es:[edi]
  41e0c7:	int3   
  41e0c8:	pop    ds
  41e0c9:	push   ss
  41e0ca:	ror    BYTE PTR [ebx-0x4def463f],1
  41e0d0:	sub    DWORD PTR [edx+0x23],0xf5a8cf16
  41e0d7:	inc    ebx
  41e0d8:	jnp    0x41e0f5
  41e0da:	jmp    0x4bd1dcf0
  41e0df:	imul   esp,DWORD PTR [ecx-0x5f2078c9],0xdc420653
  41e0e9:	push   0x58
  41e0eb:	mov    al,0x22
  41e0ed:	mov    cl,0xf0
  41e0ef:	xchg   ecx,eax
  41e0f0:	aad    0x8b
  41e0f2:	iret   
  41e0f3:	push   ds
  41e0f4:	outs   dx,DWORD PTR ds:[esi]
  41e0f5:	adc    ch,al
  41e0f7:	mov    al,0x1f
  41e0f9:	stos   DWORD PTR es:[edi],eax
  41e0fa:	test   BYTE PTR [ebx+edi*2],0x3b
  41e0fe:	test   DWORD PTR [ebp+0x175ff186],esp
  41e104:	gs gs int3 
  41e107:	out    0x81,eax
  41e109:	sbb    eax,0x4ceb2304
  41e10e:	sbb    eax,0x60406d5b
  41e113:	gs push edx
  41e115:	xchg   BYTE PTR [eax-0x60],al
  41e118:	add    al,BYTE PTR [edi]
  41e11a:	xor    cl,BYTE PTR [ebx+0x29]
  41e11d:	adc    DWORD PTR [ebx-0x74],ebp
  41e120:	lock test edx,esp
  41e123:	xchg   bh,bl
  41e125:	in     eax,0x5b
  41e127:	dec    ebp
  41e128:	cmp    dh,BYTE PTR [ecx-0x11]
  41e12b:	mov    edi,0xda4c17d2
  41e130:	aaa    
  41e131:	and    BYTE PTR [ebp-0x5f],ah
  41e134:	jp     0x41e119
  41e136:	cli    
  41e137:	mov    WORD PTR [ecx],fs
  41e139:	xchg   esi,eax
  41e13a:	and    al,0x97
  41e13c:	adc    edi,DWORD PTR [esi]
  41e13e:	xchg   esi,eax
  41e13f:	outs   dx,BYTE PTR ds:[esi]
  41e140:	xchg   esp,eax
  41e141:	out    0x41,al
  41e143:	add    ah,BYTE PTR [ebx-0x7c]
  41e146:	das    
  41e147:	jp     0x41e141
  41e149:	mov    bh,0x2f
  41e14b:	pop    ecx
  41e14c:	push   ss
  41e14d:	lods   eax,DWORD PTR ds:[esi]
  41e14e:	(bad)  
  41e14f:	out    dx,eax
  41e150:	lods   eax,DWORD PTR ds:[esi]
  41e151:	mov    dl,0xfb
  41e153:	jno    0x41e1c6
  41e155:	es gs jp 0x41e1ad
  41e159:	mov    eax,ds:0x10c4f131
  41e15e:	push   eax
  41e15f:	lds    eax,FWORD PTR [edx+0x5d8278a2]
  41e165:	xchg   edx,eax
  41e166:	cmp    al,0xcc
  41e168:	sub    DWORD PTR [ebp+0x74ea28a4],0xffffffd5
  41e16f:	mov    al,0xa2
  41e171:	int3   
  41e172:	cld    
  41e173:	test   BYTE PTR [ecx],dh
  41e175:	loope  0x41e1be
  41e177:	mov    dl,0xa3
  41e179:	jmp    0x41e138
  41e17b:	inc    edi
  41e17c:	jg     0x41e119
  41e17e:	xor    eax,DWORD PTR [ebp+0x55107e2c]
  41e184:	push   ebp
  41e185:	dec    ecx
  41e186:	mov    bl,0xf
  41e188:	addr16 push 0x3f872dce
  41e18e:	in     eax,0xa
  41e190:	mov    dl,0xe9
  41e192:	icebp  
  41e193:	aaa    
  41e194:	rcl    DWORD PTR [edi+ecx*2-0x3b],cl
  41e198:	mov    cl,0xd1
  41e19a:	arpl   WORD PTR [esp+eax*4],cx
  41e19d:	dec    ebx
  41e19e:	sbb    bl,bl
  41e1a0:	mov    ebx,0x207ba9f2
  41e1a5:	popa   
  41e1a6:	push   ecx
  41e1a7:	mov    ecx,0x2228f32d
  41e1ac:	xor    DWORD PTR [edi],edi
  41e1ae:	arpl   ax,si
  41e1b0:	aaa    
  41e1b1:	and    esi,esi
  41e1b3:	mov    al,0xb8
  41e1b5:	xor    eax,0xdcc645a9
  41e1ba:	cmp    al,0xb8
  41e1bc:	mov    DWORD PTR [ecx-0x1fcb3328],ebx
  41e1c2:	mov    eax,ds:0xd9677b5f
  41e1c7:	ficomp DWORD PTR [edx]
  41e1c9:	jecxz  0x41e1f2
  41e1cb:	sub    esi,DWORD PTR [esi-0x6a32bb13]
  41e1d1:	nop
  41e1d2:	xchg   esp,eax
  41e1d3:	xchg   esp,eax
  41e1d4:	ins    DWORD PTR es:[edi],dx
  41e1d5:	xchg   edx,eax
  41e1d6:	ss rol edx,0x59
  41e1da:	outs   dx,DWORD PTR ds:[esi]
  41e1db:	ja     0x41e1e2
  41e1dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1de:	sbb    bx,si
  41e1e1:	mov    eax,ds:0x97bac96c
  41e1e6:	pop    esi
  41e1e7:	inc    ebp
  41e1e8:	xor    BYTE PTR [esi],0xba
  41e1eb:	mov    ebp,0xc4cfa5f6
  41e1f0:	ins    BYTE PTR es:[edi],dx
  41e1f1:	(bad)  
  41e1f2:	jle    0x41e1eb
  41e1f4:	add    ch,dh
  41e1f6:	xchg   edi,eax
  41e1f8:	rol    ah,1
  41e1fa:	dec    esi
  41e1fb:	xchg   al,dl
  41e1fd:	push   esi
  41e1fe:	cmp    BYTE PTR [esp+ebx*4+0x6b],ch
  41e202:	adc    BYTE PTR [ebx+0x9],bh
  41e205:	mov    ds:0xa39cb75c,eax
  41e20a:	dec    ebp
  41e20b:	and    dl,BYTE PTR [eax+eiz*1+0x59c95d8a]
  41e212:	lods   al,BYTE PTR ds:[esi]
  41e213:	add    al,0x12
  41e215:	mov    ch,BYTE PTR [ebp+0x507bd47b]
  41e21b:	jne    0x41e25e
  41e21d:	mov    ds:0x1acd42fd,al
  41e222:	mov    ebx,0x130a631e
  41e227:	add    al,BYTE PTR [esi]
  41e229:	push   esp
  41e22a:	shl    DWORD PTR [eax-0x5d1db6ef],cl
  41e230:	lahf   
  41e231:	mov    BYTE PTR [ebp-0x57],bl
  41e234:	mov    eax,0xe0eec60e
  41e239:	jl     0x41e234
  41e23b:	xor    esp,DWORD PTR ds:0x57333059
  41e241:	xchg   ebp,eax
  41e242:	mov    dl,0x79
  41e244:	sub    eax,0xcfdc8c33
  41e249:	mov    esi,0xa7d5c290
  41e24e:	lods   eax,DWORD PTR ds:[esi]
  41e24f:	jl     0x41e24b
  41e251:	sbb    ebx,edi
  41e253:	pop    es
  41e254:	jo     0x41e22c
  41e256:	jno    0x41e203
  41e258:	mov    eax,DWORD PTR [edx-0x3f05a08]
  41e25e:	leave  
  41e25f:	push   edx
  41e260:	push   ebx
  41e261:	imul   edi,DWORD PTR [edi],0x534c1b8e
  41e267:	push   0xfffffffa
  41e269:	mov    ebx,DWORD PTR [esi+0x2659a4f8]
  41e26f:	sbb    ecx,esp
  41e271:	les    esp,FWORD PTR [esi]
  41e273:	out    0x53,al
  41e275:	shr    ecx,cl
  41e277:	or     BYTE PTR [esi],dh
  41e279:	push   esi
  41e27a:	hlt    
  41e27b:	fst    DWORD PTR [ecx*4+0x1b89b5a6]
  41e282:	adc    BYTE PTR [edx],dh
  41e284:	(bad)  
  41e285:	stc    
  41e286:	adc    eax,DWORD PTR [edx+0x3]
  41e289:	inc    esp
  41e28a:	test   eax,edx
  41e28c:	frstor [edi+eiz*1-0x5e]
  41e290:	jecxz  0x41e291
  41e292:	out    dx,al
  41e293:	addr16 sub eax,0x2861df90
  41e299:	je     0x41e26e
  41e29b:	xchg   ecx,eax
  41e29c:	in     eax,dx
  41e29d:	call   0x774418f8
  41e2a2:	test   eax,0x78612003
  41e2a7:	jae    0x41e28f
  41e2a9:	adc    BYTE PTR [edx-0x36],dh
  41e2ac:	adc    eax,0xdc9d8c21
  41e2b1:	mov    eax,0x76f6b207
  41e2b6:	call   0x404a:0xecf43685
  41e2bd:	test   DWORD PTR [esi-0x289e4cf6],edi
  41e2c3:	jecxz  0x41e274
  41e2c5:	dec    edx
  41e2c6:	(bad)  
  41e2c7:	jb     0x41e32f
  41e2c9:	add    bl,BYTE PTR [esi]
  41e2cb:	push   ebx
  41e2cc:	xchg   edx,eax
  41e2cd:	push   es
  41e2ce:	or     al,0x92
  41e2d0:	jmp    0xd0cf92ce
  41e2d5:	jbe    0x41e2ee
  41e2d7:	push   edx
  41e2d8:	ret    0x31a3
  41e2db:	outs   dx,DWORD PTR ds:[esi]
  41e2dc:	add    edx,eax
  41e2de:	dec    edx
  41e2df:	jl     0x41e2b2
  41e2e1:	rcl    DWORD PTR [edx-0x39],0x5a
  41e2e5:	shr    BYTE PTR [ecx-0x4c],0xf7
  41e2e9:	mov    cl,0xd0
  41e2eb:	inc    eax
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	ins    BYTE PTR es:[edi],dx
  41e2ee:	outs   dx,BYTE PTR ds:[esi]
  41e2ef:	and    esi,edi
  41e2f1:	mov    esp,0xbcf04f00
  41e2f6:	jmp    0x3d75256c
  41e2fb:	sbb    al,0x61
  41e2fd:	in     al,dx
  41e2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ff:	jb     0x41e297
  41e301:	clc    
  41e302:	sbb    ch,BYTE PTR [eax+eiz*4+0x50]
  41e306:	data16 ins BYTE PTR es:[edi],dx
  41e308:	mov    eax,ds:0xfef594cf
  41e30d:	adc    eax,0xeda6e19d
  41e312:	repz adc ah,BYTE PTR [ecx+0x78]
  41e316:	hlt    
  41e317:	mov    dh,0x82
  41e319:	pop    ecx
  41e31a:	lahf   
  41e31b:	ds sbb eax,0xc7ab1a8a
  41e321:	pop    ss
  41e322:	sub    edx,DWORD PTR [ebp-0x7ace9b9f]
  41e328:	clc    
  41e329:	icebp  
  41e32a:	dec    ebp
  41e32b:	loope  0x41e2ad
  41e32d:	dec    ecx
  41e32e:	cmp    al,0xaf
  41e330:	or     al,0xf4
  41e332:	(bad)  
  41e333:	call   ebp
  41e335:	or     eax,0xa3b018ba
  41e33a:	call   0xdae0695c
  41e33f:	test   al,0x72
  41e341:	pop    es
  41e342:	ss ss jle 0x41e352
  41e346:	push   edx
  41e347:	or     bl,ah
  41e349:	add    eax,DWORD PTR ds:0xe487acf0
  41e34f:	pop    ebx
  41e350:	mov    edi,es
  41e352:	xchg   BYTE PTR [ebx+0x37a69dad],ch
  41e358:	mov    bl,ah
  41e35a:	adc    BYTE PTR [edi],cl
  41e35c:	(bad)  
  41e35e:	sar    dl,0x47
  41e361:	rol    BYTE PTR [ebx+0x6713aaee],1
  41e367:	int3   
  41e368:	pop    ebx
  41e369:	mov    ch,BYTE PTR [ebp-0x3e9d3bb5]
  41e36f:	sub    ebx,DWORD PTR [esi]
  41e371:	stos   DWORD PTR es:[edi],eax
  41e372:	scas   eax,DWORD PTR es:[edi]
  41e373:	dec    esp
  41e374:	fld    DWORD PTR [ebx+esi*8-0x77]
  41e378:	fsin   
  41e37a:	fs jmp 0x41e3f1
  41e37d:	push   0x6b
  41e37f:	cs std 
  41e381:	js     0x41e321
  41e383:	sub    ch,BYTE PTR [ecx+0x721f1400]
  41e389:	xchg   ebp,eax
  41e38a:	xchg   BYTE PTR [ebp+edi*4-0x33],ch
  41e38e:	lahf   
  41e38f:	setns  BYTE PTR [edi]
  41e392:	pop    esp
  41e393:	scas   al,BYTE PTR es:[edi]
  41e394:	sar    edi,1
  41e396:	xchg   esp,eax
  41e397:	xchg   edx,eax
  41e398:	adc    eax,DWORD PTR [ecx+0x34]
  41e39b:	int    0x6a
  41e39d:	cmp    eax,0x2ff2c7b8
  41e3a3:	imul   esp,DWORD PTR [eax+0x68],0x7d882552
  41e3aa:	pop    eax
  41e3ab:	pop    ds
  41e3ac:	lods   al,BYTE PTR ds:[esi]
  41e3ad:	test   DWORD PTR [edi+0x610931ac],edx
  41e3b3:	push   cs
  41e3b4:	mov    ch,dh
  41e3b6:	je     0x41e3b3
  41e3b8:	inc    esi
  41e3b9:	jo     0x41e438
  41e3bb:	not    DWORD PTR [ebx+0x0]
  41e3be:	cmp    BYTE PTR [eax-0x78abbce],dl
  41e3c4:	cmp    DWORD PTR ss:[ebx],ecx
  41e3c7:	cmp    edx,ecx
  41e3c9:	sti    
  41e3ca:	inc    esi
  41e3cb:	fs inc esp
  41e3cd:	xchg   DWORD PTR [edx+edi*2+0x12],esp
  41e3d1:	ja     0x41e35b
  41e3d3:	outs   dx,BYTE PTR ds:[esi]
  41e3d4:	aas    
  41e3d5:	outs   dx,DWORD PTR ds:[esi]
  41e3d6:	jle    0x41e3ea
  41e3d8:	test   DWORD PTR [ecx],ebp
  41e3da:	jae    0x41e3d3
  41e3dc:	outs   dx,DWORD PTR ds:[esi]
  41e3dd:	cmp    BYTE PTR [edx],0x1b
  41e3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3e1:	cmp    eax,0x4ca22068
  41e3e6:	adc    DWORD PTR [ebx],edi
  41e3e8:	(bad)  
  41e3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3ea:	std    
  41e3eb:	push   esi
  41e3ec:	cs jne 0x41e38c
  41e3ef:	in     al,0x89
  41e3f1:	scas   eax,DWORD PTR es:[edi]
  41e3f2:	mov    dh,0x3e
  41e3f4:	aad    0x71
  41e3f6:	sub    DWORD PTR [edx-0x80efe3e],edx
  41e3fc:	cmp    dl,dh
  41e3fe:	fbstp  TBYTE PTR [esi+0x522b9d05]
  41e404:	add    ah,BYTE PTR [esi+0x6b7fc03f]
  41e40a:	pop    edx
  41e40b:	xchg   ebx,eax
  41e40c:	push   ds
  41e40d:	xor    al,0xe9
  41e40f:	xchg   esp,eax
  41e410:	out    dx,al
  41e411:	mov    al,0xbc
  41e413:	xchg   edx,eax
  41e414:	mov    al,0x8
  41e416:	mov    ah,0xc5
  41e418:	push   esi
  41e419:	or     eax,0x9a66a6ef
  41e41e:	out    dx,al
  41e41f:	sub    bl,bh
  41e421:	daa    
  41e422:	neg    BYTE PTR [esi-0x71]
  41e425:	xchg   esp,eax
  41e426:	aaa    
  41e427:	out    dx,eax
  41e428:	add    BYTE PTR gs:[ebx-0x79fa901c],bl
  41e42f:	les    esp,FWORD PTR [edi+eiz*1]
  41e432:	(bad)  
  41e434:	add    BYTE PTR [ebp+0x3e],ah
  41e437:	ja     0x41e494
  41e439:	(bad)  
  41e43a:	shl    DWORD PTR [ecx-0x65],1
  41e43d:	push   edx
  41e43e:	push   esi
  41e43f:	inc    ebx
  41e440:	fldcw  WORD PTR [ebp-0x47]
  41e443:	xor    al,0x97
  41e445:	sbb    ax,0xddc2
  41e449:	mov    ch,0x6b
  41e44b:	sub    BYTE PTR ds:0x2dcc41d9,dh
  41e451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e452:	push   ds
  41e453:	js     0x41e4c0
  41e455:	inc    edi
  41e456:	add    BYTE PTR [edi+0x5f],bh
  41e459:	mov    dl,0x8b
  41e45b:	push   esp
  41e45c:	test   eax,0xfbc6f998
  41e461:	clc    
  41e462:	jecxz  0x41e3f1
  41e464:	mov    edx,0xdd2a24ef
  41e469:	dec    ebp
  41e46a:	add    BYTE PTR [eax-0x447f43bb],ch
  41e470:	out    0x3,eax
  41e472:	add    esi,edx
  41e474:	push   edi
  41e475:	xlat   BYTE PTR ds:[ebx]
  41e476:	std    
  41e477:	das    
  41e478:	inc    ebp
  41e479:	aad    0x29
  41e47b:	pusha  
  41e47c:	and    eax,0xc5c848c1
  41e481:	lock pop esi
  41e483:	jmp    0x38cc:0x893d1d6d
  41e48a:	inc    edi
  41e48b:	retf   
  41e48c:	xchg   edx,eax
  41e48d:	xchg   ebp,eax
  41e48e:	jmp    0x31c2:0x195a7d45
  41e495:	mov    ebp,0x4c870450
  41e49a:	sub    dh,BYTE PTR [edi+0x3279f925]
  41e4a0:	jb     0x41e4fb
  41e4a2:	shr    BYTE PTR [ebx+ebp*1+0x1a],cl
  41e4a6:	cmc    
  41e4a7:	or     ah,dl
  41e4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4aa:	leave  
  41e4ab:	xchg   BYTE PTR [ebx-0x6e496182],ah
  41e4b1:	shl    ch,0xb7
  41e4b4:	sbb    BYTE PTR [ecx-0x31],ch
  41e4b7:	or     DWORD PTR [ebp+0x52],ebp
  41e4ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4bb:	pop    ecx
  41e4bc:	mov    eax,ds:0xea0e4cc
  41e4c1:	jae    0x4ab69489
  41e4c7:	xor    al,dh
  41e4c9:	cs inc ecx
  41e4cb:	and    eax,0xcab44837
  41e4d0:	adc    al,0x56
  41e4d2:	out    0xcc,al
  41e4d4:	sbb    eax,DWORD PTR [eax+eax*2+0x1d]
  41e4d8:	sbb    DWORD PTR [edx-0x66],ebx
  41e4db:	mov    dl,0xcf
  41e4dd:	sub    al,0x41
  41e4df:	ret    
  41e4e0:	pop    ecx
  41e4e1:	pusha  
  41e4e2:	cmp    eax,0x85f595a4
  41e4e7:	rol    DWORD PTR [eax],1
  41e4e9:	lds    esi,FWORD PTR [ecx+0x3be257d5]
  41e4ef:	mov    dh,0xdf
  41e4f1:	xchg   ecx,eax
  41e4f2:	add    DWORD PTR [esi+0x47],ebx
  41e4f5:	xchg   eax,edi
  41e4f7:	lods   eax,DWORD PTR ds:[esi]
  41e4f8:	ret    
  41e4f9:	mov    ah,BYTE PTR [edx]
  41e4fb:	mov    ah,0x9a
  41e4fd:	add    eax,0xcef3502c
  41e502:	adc    esi,DWORD PTR [eax-0x2bd7f80c]
  41e508:	or     esp,DWORD PTR ds:0xcc49dd4e
  41e50e:	std    
  41e50f:	cmp    eax,0xe720cdd4
  41e514:	(bad)  
  41e515:	cmc    
  41e516:	or     eax,0x1426907e
  41e51b:	inc    edx
  41e51c:	sbb    edx,DWORD PTR [ecx]
  41e51e:	mov    dh,0xf1
  41e520:	pop    edx
  41e521:	repnz sahf 
  41e523:	(bad)  
  41e525:	dec    ecx
  41e526:	dec    eax
  41e527:	cmp    eax,0xcc2649b1
  41e52c:	stc    
  41e52d:	cs add bl,bl
  41e530:	cmp    eax,0xafa01bc3
  41e535:	sub    esp,DWORD PTR [ebp+0x6a]
  41e538:	stc    
  41e539:	repz or BYTE PTR [esi],ah
  41e53c:	fidivr DWORD PTR [edx-0x79]
  41e53f:	in     eax,0x18
  41e541:	cdq    
  41e542:	test   DWORD PTR [edi+0x61],edi
  41e545:	mov    ah,0x7e
  41e547:	out    dx,eax
  41e548:	sbb    al,0x81
  41e54a:	dec    esi
  41e54b:	(bad)  
  41e54c:	sub    BYTE PTR [ecx],cl
  41e54e:	jmp    0x55544828
  41e553:	fwait
  41e554:	je     0x41e5b3
  41e556:	lods   eax,DWORD PTR ds:[esi]
  41e557:	xlat   BYTE PTR ds:[ebx]
  41e558:	jbe    0x41e545
  41e55a:	pop    ss
  41e55b:	inc    edi
  41e55c:	mov    al,ds:0xea274f90
  41e561:	mov    WORD PTR [ebx-0xa488727],fs
  41e567:	jnp    0x41e5d2
  41e569:	sti    
  41e56a:	jp     0x41e541
  41e56c:	cmp    DWORD PTR [esi],ebp
  41e56e:	mov    bl,0x19
  41e570:	out    0xab,eax
  41e572:	and    dl,bl
  41e574:	cwde   
  41e575:	jmp    0x41e5c0
  41e577:	mov    cl,0x32
  41e579:	sbb    BYTE PTR [eax-0x13],0xdb
  41e57d:	mov    ebx,0x550b577a
  41e582:	cli    
  41e583:	cmp    DWORD PTR [edi],ebp
  41e585:	adc    ebp,DWORD PTR [ecx+0x1a]
  41e588:	imul   esp,ecx,0xffffffe9
  41e58b:	jmp    0xbfbf386
  41e590:	aas    
  41e591:	xchg   eax,eax
  41e593:	lds    edx,FWORD PTR ds:0x96b4db42
  41e599:	pop    ds
  41e59a:	call   0xb64705f2
  41e59f:	sbb    al,0xf0
  41e5a1:	lea    esi,[esi+0x7a9c84b8]
  41e5a7:	bound  esi,QWORD PTR [ebx+edx*4+0x50b9b1ad]
  41e5ae:	fldenv ds:0xcf6b8768
  41e5b4:	(bad)  
  41e5b5:	frstor [edx]
  41e5b7:	inc    esi
  41e5b8:	adc    al,0x87
  41e5ba:	test   eax,0x727b45e5
  41e5bf:	and    eax,0x56b6d899
  41e5c4:	mov    edx,0x692d7d62
  41e5c9:	in     eax,dx
  41e5ca:	and    esp,0x8
  41e5cd:	add    al,ch
  41e5cf:	push   DWORD PTR [edi+0x2f92d8dc]
  41e5d5:	outs   dx,BYTE PTR ds:[esi]
  41e5d6:	in     eax,dx
  41e5d7:	adc    eax,0xf371dfa5
  41e5dc:	sti    
  41e5dd:	sbb    eax,0x434fa5f
  41e5e2:	sahf   
  41e5e3:	cmp    cl,dl
  41e5e5:	pop    ds
  41e5e6:	push   esp
  41e5e7:	(bad)  
  41e5e8:	sbb    al,0x9
  41e5ea:	mov    cl,0x45
  41e5ec:	add    ebp,edi
  41e5ee:	cmp    al,0x8
  41e5f0:	aam    0xb1
  41e5f2:	mov    esi,DWORD PTR [edx-0x53]
  41e5f5:	rcl    DWORD PTR [ebx-0x5f820ca9],0xe1
  41e5fc:	(bad)  
  41e5fd:	add    al,BYTE PTR [edi+0x49]
  41e600:	mov    ebx,0x2357006b
  41e605:	mov    al,0x93
  41e607:	int    0x29
  41e609:	ror    esi,1
  41e60b:	shl    BYTE PTR [ebx-0x27],1
  41e60e:	add    ecx,ebx
  41e610:	push   edx
  41e611:	xor    cl,ch
  41e613:	add    eax,0x8cef0b06
  41e618:	pop    esi
  41e619:	xchg   ebp,eax
  41e61a:	sub    eax,0x9863b818
  41e61f:	repz mov bh,0x1c
  41e622:	adc    ebx,DWORD PTR [ecx]
  41e624:	ja     0x41e621
  41e626:	(bad)  
  41e627:	xor    DWORD PTR [ebp+0x46],eax
  41e62a:	push   ebx
  41e62b:	hlt    
  41e62c:	lahf   
  41e62d:	or     esi,DWORD PTR [ebp-0x15359580]
  41e633:	xor    DWORD PTR [esi],edi
  41e635:	xchg   ebx,eax
  41e636:	jb     0x41e614
  41e638:	out    0x9e,eax
  41e63a:	mov    ?,eax
  41e63c:	aam    0x9f
  41e63e:	lock jl 0x41e626
  41e641:	and    BYTE PTR [esp+esi*8-0x59],dl
  41e645:	loope  0x41e608
  41e647:	sbb    esp,ebp
  41e649:	loop   0x41e69d
  41e64b:	(bad)  
  41e64c:	adc    DWORD PTR [ecx],ecx
  41e64e:	daa    
  41e64f:	and    esi,esp
  41e651:	(bad)  [ebx]
  41e653:	adc    eax,0x3b0b3fab
  41e658:	jns    0x41e64d
  41e65a:	mov    ah,0xa6
  41e65c:	in     al,0x33
  41e65e:	pop    ebx
  41e65f:	sub    ch,ah
  41e661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e662:	mov    edx,0xf46bf743
  41e667:	pop    esi
  41e668:	in     al,0x7b
  41e66a:	cld    
  41e66b:	and    ebp,DWORD PTR [edi]
  41e66d:	and    al,0xc4
  41e66f:	mov    dl,0xf
  41e671:	and    cl,dh
  41e673:	gs add eax,edx
  41e676:	mov    bh,0xdd
  41e678:	outs   dx,DWORD PTR ds:[esi]
  41e679:	inc    ebp
  41e67a:	sbb    al,dl
  41e67c:	sbb    al,0x71
  41e67e:	add    al,0xf9
  41e680:	lods   eax,DWORD PTR ds:[esi]
  41e681:	xchg   edi,eax
  41e682:	sub    eax,0x2a547722
  41e687:	or     eax,0xd1a13e07
  41e68c:	xchg   dl,ch
  41e68e:	in     al,dx
  41e68f:	mov    ds:0xdc83a864,al
  41e694:	dec    edx
  41e695:	pushf  
  41e696:	xchg   ebp,eax
  41e697:	inc    edi
  41e698:	mov    bh,0x99
  41e69a:	call   0xb518:0x7d06e0bf
  41e6a1:	sbb    dh,ch
  41e6a3:	xor    edi,DWORD PTR [ebx]
  41e6a5:	adc    edx,DWORD PTR [edx+0x66]
  41e6a8:	jae    0x41e674
  41e6aa:	add    eax,0xa020355d
  41e6af:	cli    
  41e6b0:	es dec ebx
  41e6b2:	sti    
  41e6b3:	pop    ds
  41e6b4:	dec    edx
  41e6b5:	je     0x41e6a5
  41e6b7:	(bad)  
  41e6b8:	ss sub eax,0x6b41ea7f
  41e6be:	scas   eax,DWORD PTR es:[edi]
  41e6bf:	sub    al,0x20
  41e6c1:	inc    ebp
  41e6c2:	movlhps xmm1,xmm0
  41e6c5:	xor    eax,0x406e1739
  41e6ca:	inc    ebp
  41e6cb:	into   
  41e6cc:	loop   0x41e667
  41e6ce:	fstp   TBYTE PTR [ebx+0x3534d628]
  41e6d4:	mov    eax,ds:0xb4bc8551
  41e6d9:	push   ecx
  41e6da:	cmp    eax,0x9202b1fd
  41e6df:	sub    eax,0x8aafd44a
  41e6e4:	pop    ss
  41e6e5:	mov    eax,ds:0xb1e80d82
  41e6ea:	jge    0x41e6c9
  41e6ec:	or     al,0x72
  41e6ee:	into   
  41e6ef:	shl    BYTE PTR [ebx-0x38],0x5a
  41e6f3:	sub    ebx,DWORD PTR [esi+edi*1-0x1f]
  41e6f7:	out    dx,al
  41e6f8:	xor    esi,DWORD PTR [edx-0x67]
  41e6fb:	sbb    eax,0x5500f1b7
  41e700:	aaa    
  41e701:	(bad)  
  41e702:	mov    esi,0x8efaa5ba
  41e707:	fstp   st(7)
  41e709:	ret    
  41e70a:	mov    sp,bx
  41e70d:	mov    DWORD PTR [esi+ebx*8-0x3cae224d],ebx
  41e714:	xor    ebx,DWORD PTR [ebx+0x664f0296]
  41e71a:	not    eax
  41e71c:	pop    esi
  41e71d:	xor    ebx,ebp
  41e71f:	xchg   esp,eax
  41e720:	push   es
  41e721:	pop    edx
  41e722:	add    eax,0xa2205ed6
  41e727:	test   BYTE PTR [eax+ecx*2+0x61609325],bl
  41e72e:	mov    DWORD PTR [ecx+0x6112e70a],ebp
  41e734:	ins    DWORD PTR es:[edi],dx
  41e735:	in     eax,0x6d
  41e737:	mov    ds:0x9f0a8cc,eax
  41e73c:	mov    dl,0x46
  41e73e:	jno    0x41e6dd
  41e740:	test   eax,0x31fb4b5e
  41e745:	shl    al,0xe3
  41e748:	adc    al,0xff
  41e74a:	lods   eax,DWORD PTR ds:[esi]
  41e74b:	shl    BYTE PTR [edi+0x704fa26c],1
  41e751:	jecxz  0x41e78b
  41e753:	dec    eax
  41e754:	and    dl,BYTE PTR [esi]
  41e756:	hlt    
  41e757:	std    
  41e758:	add    al,0xb0
  41e75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e75b:	pop    edx
  41e75c:	sbb    DWORD PTR [edi-0x57],edx
  41e75f:	jg     0x41e72c
  41e761:	xor    esp,edi
  41e763:	mov    eax,ds:0xbd33029b
  41e768:	pop    edx
  41e769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e76a:	push   eax
  41e76b:	sbb    bl,BYTE PTR [eax]
  41e76d:	loop   0x41e718
  41e76f:	out    0xaf,al
  41e771:	cmpxchg8b QWORD PTR [edi-0x473e5ea6]
  41e778:	sar    edi,cl
  41e77a:	sbb    eax,0x96bc41b6
  41e77f:	test   BYTE PTR [ecx],bh
  41e781:	test   BYTE PTR [eax+edx*8-0x61],ch
  41e785:	ror    BYTE PTR [ebx],1
  41e787:	sbb    ebx,DWORD PTR [ecx-0x70]
  41e78a:	jg     0x41e7df
  41e78c:	xchg   ecx,eax
  41e78d:	aam    0xf5
  41e78f:	lods   al,BYTE PTR ds:[esi]
  41e790:	aam    0x4b
  41e792:	inc    edx
  41e793:	fisttp QWORD PTR [ebx+0x34]
  41e796:	jns    0x41e7e8
  41e798:	push   0x55
  41e79a:	ja     0x41e7fc
  41e79c:	jle    0x41e75c
  41e79e:	inc    esi
  41e79f:	jo     0x41e727
  41e7a1:	pop    eax
  41e7a2:	add    cl,BYTE PTR [eax+esi*1]
  41e7a5:	xchg   ebx,eax
  41e7a6:	mov    edi,DWORD PTR [esi]
  41e7a8:	fptan  
  41e7aa:	add    dh,0x14
  41e7ad:	stc    
  41e7ae:	mov    bh,0x52
  41e7b0:	jmp    FWORD PTR [edi-0xf231d30]
  41e7b6:	rcl    BYTE PTR [eax-0x3],0xb7
  41e7ba:	bswap  ebp
  41e7bc:	frstor [esi]
  41e7be:	out    dx,eax
  41e7bf:	data16 arpl bp,bp
  41e7c2:	jns    0x41e7ff
  41e7c4:	lods   eax,DWORD PTR ds:[esi]
  41e7c5:	loop   0x41e834
  41e7c7:	je     0x41e7dc
  41e7c9:	popf   
  41e7ca:	pop    ebx
  41e7cb:	not    DWORD PTR [ebx+eiz*2-0x3afe9139]
  41e7d2:	pop    ebp
  41e7d3:	adc    dl,BYTE PTR [ecx+0x24]
  41e7d6:	lahf   
  41e7d7:	dec    ebx
  41e7d8:	xchg   esp,eax
  41e7d9:	mov    edi,0xea307080
  41e7de:	dec    esi
  41e7df:	or     edx,esi
  41e7e1:	push   edx
  41e7e2:	fwait
  41e7e3:	sub    eax,0xce49054a
  41e7e8:	imul   ecx,DWORD PTR ss:[ecx],0x44
  41e7ec:	bnd je 0x41e830
  41e7ef:	ficom  WORD PTR [edi]
  41e7f1:	cmp    ch,ch
  41e7f3:	mov    al,ds:0xfc39fb53
  41e7f8:	push   ebx
  41e7f9:	out    0xba,eax
  41e7fb:	push   esp
  41e7fc:	fnsave [ebx]
  41e7fe:	push   ds
  41e7ff:	(bad)  
  41e800:	cwde   
  41e801:	das    
  41e802:	mov    ah,0x85
  41e804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e805:	imul   esp,esp,0x42bb39d6
  41e80b:	pop    ss
  41e80c:	inc    BYTE PTR [esp+eax*8+0x50]
  41e810:	adc    DWORD PTR [ebx-0x7fb23535],ecx
  41e816:	and    BYTE PTR ds:0xa2200bf6,bl
  41e81c:	scas   al,BYTE PTR es:[edi]
  41e81d:	ror    BYTE PTR [edi+edx*1],cl
  41e820:	dec    ecx
  41e821:	in     eax,dx
  41e822:	sbb    bh,0x88
  41e825:	push   0x54
  41e827:	outs   dx,BYTE PTR ds:[esi]
  41e828:	ffree  st(5)
  41e82a:	repnz mov esi,0xcf846521
  41e830:	call   0x657c:0x47fce3d5
  41e837:	pop    ds
  41e838:	adc    BYTE PTR [ebp+0x25],ch
  41e83b:	(bad)  [ebx]
  41e83d:	and    bl,dh
  41e83f:	sti    
  41e840:	adc    ebp,DWORD PTR [ecx-0x761a4a4b]
  41e846:	ret    0xb0e
  41e849:	call   0xd546:0xaadf94f4
  41e850:	or     BYTE PTR [edx-0x5bbf413b],0xcd
  41e857:	jg     0x41e84a
  41e859:	pop    ecx
  41e85a:	out    dx,eax
  41e85b:	enter  0x492d,0xb8
  41e85f:	loope  0x41e842
  41e861:	xor    al,0x8
  41e863:	xor    bl,BYTE PTR ds:0xbd797b
  41e869:	add    BYTE PTR [edi+0x173a837f],dl
  41e86f:	inc    esp
  41e870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e871:	push   esp
  41e872:	outs   dx,DWORD PTR ds:[esi]
  41e873:	out    dx,al
  41e874:	or     esi,DWORD PTR ds:0xa16905e8
  41e87a:	add    ah,BYTE PTR [edi]
  41e87c:	jmp    0xd493:0x3c29199
  41e883:	imul   ebx
  41e885:	mov    dl,0xb
  41e887:	(bad)  
  41e888:	rol    eax,1
  41e88a:	xor    eax,0x12833451
  41e88f:	adc    al,0x56
  41e891:	(bad)  
  41e892:	mov    ch,0x8f
  41e894:	mov    DWORD PTR [ebx+0x741fb981],edx
  41e89a:	aas    
  41e89b:	jp     0x41e88d
  41e89d:	mov    esi,0xd6cb3a11
  41e8a2:	inc    edi
  41e8a3:	js     0x41e915
  41e8a5:	gs (bad) 
  41e8a7:	(bad)  
  41e8a9:	aam    0x2b
  41e8ab:	inc    eax
  41e8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8ad:	not    DWORD PTR [ecx]
  41e8af:	jb     0x41e922
  41e8b1:	outs   dx,BYTE PTR ds:[esi]
  41e8b2:	repz inc ecx
  41e8b4:	jl     0x41e901
  41e8b6:	jne    0x41e8ba
  41e8b8:	jns    0x41e8d4
  41e8ba:	push   0xbea51a07
  41e8bf:	xadd   al,al
  41e8c2:	test   DWORD PTR [ebx+ecx*8],esi
  41e8c5:	adc    DWORD PTR [ebp+0x662ea4fc],edi
  41e8cb:	mov    al,ds:0xbe87cfb1
  41e8d0:	dec    edi
  41e8d1:	push   ebp
  41e8d2:	inc    esp
  41e8d3:	(bad)
  41e8d8:	repnz inc esi
  41e8da:	nop
  41e8db:	bound  ebp,QWORD PTR [ecx]
  41e8dd:	dec    ecx
  41e8de:	pop    esi
  41e8df:	outs   dx,BYTE PTR ds:[esi]
  41e8e0:	adc    bh,BYTE PTR ds:0x8aca8a1c
  41e8e6:	sti    
  41e8e7:	dec    esp
  41e8e8:	aad    0x12
  41e8ea:	stos   DWORD PTR es:[edi],eax
  41e8eb:	sbb    DWORD PTR [edi-0x12e4c9f7],edi
  41e8f1:	stos   DWORD PTR es:[edi],eax
  41e8f2:	lods   al,BYTE PTR ds:[esi]
  41e8f3:	call   0xb6f28635
  41e8f8:	push   eax
  41e8f9:	shl    DWORD PTR [ecx-0xc4751c2],0x8b
  41e900:	xor    DWORD PTR [ebp+0xc27403c],ecx
  41e906:	push   ecx
  41e907:	pusha  
  41e908:	inc    edx
  41e909:	xchg   ebp,eax
  41e90a:	popa   
  41e90b:	xor    bl,dl
  41e90d:	call   0x9e7fc667
  41e912:	iret   
  41e913:	and    eax,0x56d0789c
  41e918:	mov    bh,0x7b
  41e91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e91b:	lds    edx,FWORD PTR [edi+0x5d]
  41e91e:	and    DWORD PTR [esp+ecx*8-0x3c],edx
  41e922:	adc    eax,DWORD PTR [ebp+0x738edf15]
  41e928:	je     0x41e907
  41e92a:	mov    eax,ds:0x95347ea0
  41e92f:	daa    
  41e930:	mov    esi,0x3a6ba6e6
  41e935:	inc    edi
  41e936:	call   0xcbf86842
  41e93b:	dec    edi
  41e93c:	aam    0xf8
  41e93e:	rol    DWORD PTR [edi+0x777d0018],0xab
  41e945:	cli    
  41e946:	pop    esp
  41e947:	mov    ?,esi
  41e949:	lock ret 0x6a41
  41e94d:	push   ecx
  41e94e:	push   eax
  41e94f:	jmp    0x41e955
  41e951:	mov    eax,DWORD PTR [eax+0x53]
  41e954:	and    eax,DWORD PTR [esi+0x2e292cd6]
  41e95a:	push   esi
  41e95b:	or     BYTE PTR [ebx-0x39],al
  41e95e:	mov    ah,0x48
  41e960:	and    bl,bl
  41e962:	out    0x33,al
  41e964:	or     BYTE PTR [eax-0x41],ah
  41e967:	xor    edi,eax
  41e969:	cmp    dl,cl
  41e96b:	mov    BYTE PTR [eax-0x55],dh
  41e96e:	cmp    cl,BYTE PTR [edi-0x3c]
  41e971:	cwde   
  41e972:	push   eax
  41e973:	mov    ch,0x23
  41e975:	mov    edi,0xe13e8e1e
  41e97a:	mov    ch,0xdd
  41e97c:	jbe    0x41e96f
  41e97e:	jne    0x41e969
  41e980:	dec    ebp
  41e981:	outs   dx,BYTE PTR ds:[esi]
  41e982:	push   ebx
  41e983:	adc    DWORD PTR ds:0xd06cb62a,ecx
  41e989:	shl    DWORD PTR [edi+0x5e],0xee
  41e98d:	out    0xf5,eax
  41e98f:	xor    BYTE PTR [esi+0x7f388311],dh
  41e995:	and    ebx,eax
  41e997:	sbb    eax,DWORD PTR ds:0xdb8ad69
  41e99d:	or     BYTE PTR [edx],bh
  41e99f:	adc    BYTE PTR [ecx+0x1b],0xe2
  41e9a3:	retf   0x742e
  41e9a6:	fs iret 
  41e9a8:	ss pop esp
  41e9aa:	in     eax,0x17
  41e9ac:	adc    DWORD PTR [eax],edx
  41e9ae:	pop    es
  41e9af:	push   edi
  41e9b0:	jbe    0x41ea23
  41e9b2:	mov    eax,0xf0414549
  41e9b7:	(bad)  
  41e9b8:	pop    ebp
  41e9b9:	test   al,0xf9
  41e9bb:	or     ebx,0xb2a31bb4
  41e9c1:	(bad)  
  41e9c2:	loop   0x41ea02
  41e9c4:	das    
  41e9c5:	cmp    edi,DWORD PTR [ebx+ebx*4]
  41e9c8:	and    eax,0xb31a5bd2
  41e9cd:	jl     0x41ea19
  41e9cf:	repz inc esi
  41e9d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9d2:	je     0x41e9de
  41e9d4:	test   bh,dl
  41e9d6:	int3   
  41e9d7:	jmp    0x42c961bf
  41e9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9dd:	xor    bl,bh
  41e9df:	(bad)  
  41e9e0:	test   ch,cl
  41e9e2:	mov    BYTE PTR [edx+0x69],cl
  41e9e5:	adc    eax,DWORD PTR [ebp+ebx*2-0x33863287]
  41e9ec:	aas    
  41e9ed:	dec    ecx
  41e9ee:	xor    al,0x2f
  41e9f0:	int    0x78
  41e9f2:	sub    BYTE PTR [esi+edi*1],bh
  41e9f5:	(bad)  
  41e9f6:	call   0x53ee661b
  41e9fb:	pusha  
  41e9fc:	in     al,0xea
  41e9fe:	push   esi
  41e9ff:	cmp    edi,DWORD PTR [eax-0x4b]
  41ea02:	ss dec esp
  41ea04:	push   eax
  41ea05:	jne    0x41e9b9
  41ea07:	outs   dx,DWORD PTR ds:[esi]
  41ea08:	and    eax,0x96148782
  41ea0d:	out    0x6d,al
  41ea0f:	push   ebx
  41ea10:	hlt    
  41ea11:	push   0x5931eb07
  41ea16:	jns    0x41ea88
  41ea18:	pop    ebp
  41ea19:	outs   dx,DWORD PTR gs:[esi]
  41ea1b:	int    0x94
  41ea1d:	jns    0x41ea7f
  41ea1f:	and    BYTE PTR [esi+0x71dddcb9],ah
  41ea25:	mov    ecx,0xc4625eaf
  41ea2a:	shl    DWORD PTR [esi-0x1a799d16],1
  41ea30:	sub    edi,ebp
  41ea32:	in     al,dx
  41ea33:	adc    dh,BYTE PTR [eax-0x14b5a76e]
  41ea39:	xchg   esp,eax
  41ea3a:	ds xor ebp,DWORD PTR cs:[edi+0xd]
  41ea3f:	fild   WORD PTR [esi]
  41ea41:	cmp    ah,BYTE PTR [edx]
  41ea43:	ret    
  41ea44:	cdq    
  41ea45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea46:	lds    eax,FWORD PTR [edx-0x3f4b65d9]
  41ea4c:	fcomp  DWORD PTR [ebx-0x4d]
  41ea4f:	push   0xd4a601b5
  41ea54:	dec    edi
  41ea55:	aaa    
  41ea56:	(bad)  
  41ea57:	imul   esp,ebp,0x49
  41ea5a:	pushf  
  41ea5b:	add    al,0xa9
  41ea5d:	rcl    al,1
  41ea5f:	add    BYTE PTR [edx],al
  41ea61:	enter  0x9b10,0xf0
  41ea65:	xor    BYTE PTR [esi],0x10
  41ea68:	push   ss
  41ea69:	pop    edi
  41ea6a:	mov    dl,0x85
  41ea6c:	xor    ah,BYTE PTR [ebx+0x4]
  41ea6f:	stos   DWORD PTR es:[edi],eax
  41ea70:	pusha  
  41ea71:	ret    
  41ea72:	pop    ss
  41ea73:	clc    
  41ea74:	cld    
  41ea75:	pop    edx
  41ea76:	sbb    eax,0x680b4698
  41ea7b:	adc    BYTE PTR [ebp+edx*2+0xd],dh
  41ea7f:	fld    TBYTE PTR ds:0x3f71aad7
  41ea85:	jg     0x41ea4f
  41ea87:	shr    BYTE PTR [eax+0x7f],cl
  41ea8a:	inc    ebp
  41ea8b:	jbe    0x41eada
  41ea8d:	popf   
  41ea8e:	sar    DWORD PTR [ebx-0x39],cl
  41ea91:	jb     0x41eadf
  41ea93:	call   0xfb52:0x290e9005
  41ea9a:	sbb    BYTE PTR [edi-0x1585c4],0x14
  41eaa1:	xchg   esi,eax
  41eaa2:	xchg   edx,eax
  41eaa3:	xchg   esp,eax
  41eaa4:	mov    bl,0x93
  41eaa6:	repz inc edx
  41eaa8:	shr    cl,cl
  41eaaa:	dec    eax
  41eaab:	popa   
  41eaac:	int3   
  41eaad:	jne    0x41eac6
  41eaaf:	lds    edx,FWORD PTR [ecx]
  41eab1:	jmp    0x3f85:0x12b098cf
  41eab8:	xchg   ebx,eax
  41eab9:	loopne 0x41ea79
  41eabb:	(bad)
  41eabe:	(bad)  
  41eabf:	pop    ebp
  41eac0:	repnz fldenv [ecx+0x3e854de4]
  41eac7:	or     BYTE PTR [edi],al
  41eac9:	rcl    DWORD PTR [esi],0x8c
  41eacc:	test   DWORD PTR [eax],esi
  41eace:	dec    ebx
  41eacf:	call   FWORD PTR [esi+0x4f72b445]
  41ead5:	adc    eax,0x38ffd857
  41eada:	nop
  41eadb:	jmp    0xe4be:0x3acc87f3
  41eae2:	aad    0x79
  41eae4:	out    0xe1,eax
  41eae6:	into   
  41eae7:	inc    ebx
  41eae8:	lds    edi,FWORD PTR [edi+0x34]
  41eaeb:	and    eax,0x939d1043
  41eaf0:	jo     0x41eac2
  41eaf2:	dec    ebp
  41eaf3:	mov    edx,0x74448010
  41eaf8:	push   0xdd76f09b
  41eafd:	jl     0x41eaa9
  41eaff:	xchg   ebx,eax
  41eb00:	(bad)  
  41eb01:	loope  0x41eabc
  41eb03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb04:	gs stos BYTE PTR es:[edi],al
  41eb06:	into   
  41eb07:	cmp    esi,DWORD PTR [edx-0x61158189]
  41eb0d:	pop    bx
  41eb0f:	or     DWORD PTR [edx+edi*1-0x652ebc7b],edx
  41eb16:	xchg   edi,eax
  41eb17:	data16 out dx,ax
  41eb1a:	push   0x6f
  41eb1c:	mov    eax,ds:0x39446271
  41eb21:	in     eax,0xa2
  41eb23:	std    
  41eb24:	in     al,dx
  41eb25:	jle    0x41ead4
  41eb27:	iret   
  41eb28:	mov    eax,esi
  41eb2a:	mov    bl,0xc4
  41eb2c:	js     0x41eb6f
  41eb2e:	test   DWORD PTR [edx+0x36],ebx
  41eb31:	xchg   edi,eax
  41eb32:	add    DWORD PTR [edx-0x75520da8],ecx
  41eb38:	sbb    esp,ecx
  41eb3a:	push   0xd8e4d620
  41eb3f:	loopne 0x41eae8
  41eb41:	adc    eax,0x3169e387
  41eb46:	sbb    eax,0xd587792b
  41eb4b:	xchg   BYTE PTR [ebp+0x7b],ah
  41eb4e:	test   eax,0x20f2e27
  41eb53:	xchg   BYTE PTR [edx-0x6e7a2a06],cl
  41eb59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb5a:	jmp    0x41ebaa
  41eb5c:	mov    DWORD PTR [eax+edx*1-0x10],edi
  41eb60:	xor    esi,DWORD PTR [ebx*2+0x9a1aa0d]
  41eb67:	mov    al,0x8d
  41eb69:	push   cs
  41eb6a:	bndstx [eax+edx*8+0x18ac1a3b],(bad)
  41eb72:	sub    eax,0x733df5f7
  41eb77:	addr16 add eax,ebp
  41eb7a:	cmc    
  41eb7b:	sbb    DWORD PTR [edi],0xffffffce
  41eb7e:	or     cl,BYTE PTR [edx+0x3abbf15d]
  41eb84:	fstp   TBYTE PTR [esi+0x21aef146]
  41eb8a:	lods   eax,DWORD PTR ds:[esi]
  41eb8b:	add    DWORD PTR ds:0xdcd06beb,edx
  41eb91:	lods   eax,DWORD PTR ds:[esi]
  41eb92:	push   cs
  41eb93:	xchg   ebx,eax
  41eb94:	loopne 0x41eb26
  41eb96:	std    
  41eb97:	stos   BYTE PTR es:[edi],al
  41eb98:	mov    dl,0x23
  41eb9a:	dec    ebp
  41eb9b:	mov    dh,cl
  41eb9d:	ins    BYTE PTR es:[edi],dx
  41eb9e:	test   DWORD PTR [edi+eax*8+0x79e5b23e],esp
  41eba5:	fadd   st,st(4)
  41eba7:	push   ecx
  41eba8:	and    ebp,ebx
  41ebaa:	stos   BYTE PTR es:[edi],al
  41ebab:	xchg   edi,eax
  41ebac:	push   0xa8cb895d
  41ebb1:	or     edi,DWORD PTR [esi-0x61fd7e4]
  41ebb7:	nop
  41ebb8:	ficomp WORD PTR [eax-0x7209426b]
  41ebbe:	xchg   ecx,eax
  41ebbf:	mov    DWORD PTR [edi-0x25],ebp
  41ebc2:	add    BYTE PTR [edi+0x2ddebe97],dh
  41ebc8:	pop    es
  41ebc9:	xor    bl,BYTE PTR [edx]
  41ebcb:	out    dx,al
  41ebcc:	sbb    eax,DWORD PTR [edx-0x20]
  41ebcf:	mov    eax,0xb415e5ef
  41ebd4:	fist   DWORD PTR [edx+0xabd5db6]
  41ebda:	jb     0x41ec0f
  41ebdc:	les    esi,FWORD PTR [edx+0x2f]
  41ebdf:	aaa    
  41ebe0:	xchg   esp,eax
  41ebe1:	mov    eax,ds:0x3e272d75
  41ebe6:	push   esp
  41ebe7:	lahf   
  41ebe8:	or     eax,0xed5753fc
  41ebed:	push   eax
  41ebee:	mov    ds:0x937593e5,al
  41ebf3:	out    dx,eax
  41ebf4:	jmp    0x492958ce
  41ebf9:	adc    eax,0xc8c89e2a
  41ebfe:	mov    esp,0x714c33ff
  41ec03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec04:	dec    ebp
  41ec05:	sub    al,0xa1
  41ec07:	shl    BYTE PTR [ecx-0x25c917a5],1
  41ec0d:	fsub   QWORD PTR [edx]
  41ec0f:	cmp    eax,0xe5ff013d
  41ec14:	fs dec edx
  41ec16:	jmp    0x41ec19
  41ec18:	sub    al,0x7e
  41ec1a:	rcr    DWORD PTR [edx],cl
  41ec1c:	not    edx
  41ec1e:	addr16 cld 
  41ec20:	sub    ch,cl
  41ec22:	fs shl bh,cl
  41ec25:	(bad)  
  41ec26:	jle    0x41ec3f
  41ec28:	mov    ebx,0x9cbc4554
  41ec2d:	out    dx,al
  41ec2e:	int3   
  41ec2f:	loopne 0x41ec6f
  41ec31:	test   eax,0xa8af2c2b
  41ec36:	mov    dh,0x13
  41ec38:	add    al,0x59
  41ec3a:	mov    ebx,DWORD PTR [ebx+0x52]
  41ec3d:	arpl   cx,bp
  41ec3f:	xchg   BYTE PTR [edi+0x52f6da7c],bh
  41ec45:	xchg   ecx,eax
  41ec46:	mov    ecx,0xa8427e0d
  41ec4b:	inc    esp
  41ec4c:	mov    eax,0x9141dd9
  41ec51:	sar    ah,1
  41ec53:	inc    esp
  41ec54:	mov    ebx,0xf77f9631
  41ec59:	cld    
  41ec5a:	add    cl,0xe9
  41ec5d:	loopne 0x41ec0b
  41ec5f:	mov    BYTE PTR [edi-0x7b],0x39
  41ec63:	mov    DWORD PTR ds:0xaab373fa,edx
  41ec69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec6a:	add    esp,DWORD PTR ds:0x47f08ddf
  41ec70:	sub    eax,0x717bde46
  41ec75:	jecxz  0x41ece5
  41ec77:	psubq  mm1,QWORD PTR [edi-0x2a312558]
  41ec7e:	outs   dx,BYTE PTR ds:[esi]
  41ec7f:	test   DWORD PTR ds:0x3d0a63d0,0x6626615c
  41ec89:	push   eax
  41ec8a:	retf   0xf00f
  41ec8d:	scas   eax,DWORD PTR es:[edi]
  41ec8e:	xor    DWORD PTR [esi+0x35e0ad74],edx
  41ec94:	or     esp,ebx
  41ec96:	fiadd  WORD PTR [esi]
  41ec98:	mov    esp,0x1dd9682c
  41ec9d:	pushf  
  41ec9e:	shr    BYTE PTR [edx],cl
  41eca0:	stc    
  41eca1:	iret   
  41eca2:	push   cs
  41eca3:	mov    esi,0xcf00fd4d
  41eca8:	popf   
  41eca9:	push   eax
  41ecaa:	scas   al,BYTE PTR es:[edi]
  41ecab:	int    0xab
  41ecad:	push   ecx
  41ecae:	push   ss
  41ecaf:	mov    ds:0xf607a6b1,eax
  41ecb4:	mov    ds:0xe2384509,eax
  41ecb9:	bnd jg 0x41ec8a
  41ecbc:	mov    ?,WORD PTR [edx+0x2d]
  41ecbf:	xor    eax,0x861f330b
  41ecc4:	(bad)  
  41ecc5:	sti    
  41ecc6:	adc    eax,0x91cb3f57
  41eccb:	push   ebp
  41eccc:	out    0xef,eax
  41ecce:	and    BYTE PTR [edi-0x72],0x22
  41ecd2:	inc    esi
  41ecd3:	and    al,0xdb
  41ecd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecd6:	fs push esp
  41ecd8:	jge    0x41ed47
  41ecda:	cli    
  41ecdb:	push   eax
  41ecdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecdd:	hlt    
  41ecde:	int    0x75
  41ece0:	loop   0x41ed5f
  41ece2:	pandn  mm5,QWORD PTR [ebx+0x16]
  41ece6:	or     DWORD PTR [ebp+0x1a72ccc4],eax
  41ecec:	jno    0x41ecb4
  41ecee:	das    
  41ecef:	cmp    al,0xb9
  41ecf1:	repz mov eax,ds:0x72ae7c06
  41ecf7:	push   edi
  41ecf8:	inc    eax
  41ecf9:	mov    ebx,0x7fb17076
  41ecfe:	cmp    DWORD PTR [ebp+0x22],edi
  41ed01:	aas    
  41ed02:	enter  0x3644,0x20
  41ed06:	retf   0x799a
  41ed09:	and    esi,DWORD PTR [eax+0x18]
  41ed0c:	arpl   WORD PTR [edi+0x73ca7399],bx
  41ed12:	out    dx,eax
  41ed13:	call   0xa5b82693
  41ed18:	arpl   WORD PTR [edx],dx
  41ed1a:	aam    0x18
  41ed1c:	arpl   WORD PTR [ebx],dx
  41ed1e:	loope  0x41ed3c
  41ed20:	xchg   ebx,eax
  41ed21:	push   0x26
  41ed23:	pusha  
  41ed24:	fs push ds
  41ed26:	stos   BYTE PTR es:[edi],al
  41ed27:	dec    esi
  41ed28:	mov    ch,0x77
  41ed2a:	sbb    eax,0xf1829627
  41ed2f:	ret    0x917
  41ed32:	jmp    0xc029:0xbcd15b43
  41ed39:	call   0x9d6879ab
  41ed3e:	ror    ecx,1
  41ed40:	cmp    BYTE PTR [ebp+edx*4-0x7b],dl
  41ed44:	adc    ah,BYTE PTR [ebp-0x75504561]
  41ed4a:	cmp    eax,0xb5abfe5f
  41ed4f:	aam    0x8d
  41ed51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed52:	dec    edi
  41ed53:	stos   BYTE PTR es:[edi],al
  41ed54:	mov    ds:0x5a671b42,eax
  41ed59:	mov    bh,0x77
  41ed5b:	cmp    al,0x92
  41ed5d:	jnp    0x41ed50
  41ed5f:	adc    dh,bl
  41ed61:	cmp    ah,ch
  41ed63:	cli    
  41ed64:	xor    edx,DWORD PTR [eax-0x75]
  41ed67:	push   esi
  41ed68:	jmp    0x6a0a4163
  41ed6d:	dec    edx
  41ed6e:	xchg   BYTE PTR [ebx+0x75],dh
  41ed71:	fsub   DWORD PTR [eax+0x77a256e3]
  41ed77:	and    bl,BYTE PTR [ecx+0x4e]
  41ed7a:	popa   
  41ed7b:	clc    
  41ed7c:	or     edi,DWORD PTR [edx+0x5f20741c]
  41ed82:	inc    edi
  41ed83:	fisttp WORD PTR [edx+0x2e]
  41ed86:	imul   ecx,DWORD PTR [ebp-0x3e98a1a3],0xe999ac4f
  41ed90:	sbb    BYTE PTR [edi+eax*2+0x2964d0a1],cl
  41ed97:	dec    eax
  41ed98:	rcr    DWORD PTR [eax],0x3d
  41ed9b:	imul   ecx,DWORD PTR [eax],0xffffffe5
  41ed9e:	pop    ecx
  41ed9f:	sub    edi,DWORD PTR [ebx-0x26]
  41eda2:	cld    
  41eda3:	xor    BYTE PTR [eax+0x2f],0x3c
  41eda7:	(bad)  
  41eda8:	sahf   
  41eda9:	mov    edx,0x5254ec20
  41edae:	jg     0x41ed7f
  41edb0:	inc    edi
  41edb1:	inc    ebx
  41edb2:	mov    ds:0xe9e266a0,al
  41edb7:	lea    ebx,[esi*1-0x21911815]
  41edbe:	inc    ebx
  41edbf:	and    ebp,0x1c
  41edc2:	scas   eax,DWORD PTR es:[edi]
  41edc3:	lods   al,BYTE PTR ds:[esi]
  41edc4:	outs   dx,BYTE PTR ds:[esi]
  41edc5:	sub    eax,0xfdf557fd
  41edca:	int3   
  41edcb:	(bad)  
  41edcc:	cmp    bl,BYTE PTR [eax-0x4c57cb16]
  41edd2:	call   0x5beb23ed
  41edd7:	jns    0x41ee22
  41edd9:	adc    DWORD PTR ds:[edx+0x44],edx
  41eddd:	mov    BYTE PTR [edx],ah
  41eddf:	jecxz  0x41edaf
  41ede1:	imul   esi,DWORD PTR [ebp-0x45],0x6c
  41ede5:	dec    esp
  41ede6:	mov    ch,0x4e
  41ede8:	repz push ss
  41edea:	xchg   eax,edi
  41edec:	cmp    DWORD PTR [ebp-0x45cc3542],esi
  41edf2:	lods   al,BYTE PTR ds:[esi]
  41edf3:	or     cl,ch
  41edf5:	add    edx,ebx
  41edf7:	xchg   ebp,eax
  41edf8:	cdq    
  41edf9:	pop    ebx
  41edfa:	out    dx,eax
  41edfb:	je     0x41ee30
  41edfd:	ins    BYTE PTR es:[edi],dx
  41edfe:	iret   
  41edff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee00:	add    bl,BYTE PTR [ecx]
  41ee02:	test   DWORD PTR [ecx+0x32],eax
  41ee05:	int3   
  41ee06:	cmp    al,0x31
  41ee08:	mov    bh,0x8c
  41ee0a:	cwde   
  41ee0b:	add    edx,DWORD PTR [eax+0x20]
  41ee0e:	push   ss
  41ee0f:	repnz mov dl,0x88
  41ee12:	xchg   ebx,eax
  41ee13:	mov    bh,0x46
  41ee15:	inc    DWORD PTR [ebx]
  41ee17:	adc    al,0x4d
  41ee19:	mov    edx,0x99c551d1
  41ee1e:	xchg   ebp,eax
  41ee1f:	out    0x86,eax
  41ee21:	fimul  DWORD PTR ss:[eax+0x32f4ad56]
  41ee28:	pop    ecx
  41ee29:	add    BYTE PTR [ecx+0x7911f0e8],bh
  41ee2f:	dec    ecx
  41ee30:	adc    dl,BYTE PTR [edi+eax*2+0x4c]
  41ee34:	loop   0x41ee2d
  41ee36:	cmp    al,BYTE PTR [eax+0x27d82f67]
  41ee3c:	add    bl,BYTE PTR ds:0x2b96152a
  41ee42:	icebp  
  41ee43:	dec    ebp
  41ee44:	out    dx,al
  41ee45:	sub    al,BYTE PTR [ebx-0x4d]
  41ee48:	adc    DWORD PTR [esi+edx*4-0x7b5fbc4c],esi
  41ee4f:	fbld   TBYTE PTR [edi-0x380962ba]
  41ee55:	mov    WORD PTR [ecx],?
  41ee57:	retf   
  41ee58:	call   0x3fe62880
  41ee5d:	jp     0x41ee34
  41ee5f:	repz cmp eax,0xebed168
  41ee65:	sbb    eax,0xffffff82
  41ee68:	cld    
  41ee69:	out    0x30,al
  41ee6b:	(bad)  
  41ee6d:	push   cs
  41ee6e:	mov    ds:0xa981bafb,eax
  41ee73:	and    al,0xbd
  41ee75:	call   0x8eed:0x503ae6cd
  41ee7c:	out    dx,al
  41ee7d:	sar    bl,1
  41ee7f:	test   eax,0xff40b6f
  41ee84:	rcr    BYTE PTR [esi],1
  41ee86:	xor    bh,ah
  41ee88:	ins    DWORD PTR es:[edi],dx
  41ee89:	cwde   
  41ee8a:	jle    0x41ee72
  41ee8c:	fild   QWORD PTR [edi]
  41ee8e:	push   ss
  41ee8f:	mov    ebx,0x712474e0
  41ee94:	sbb    BYTE PTR [ecx+0x16],cl
  41ee97:	xchg   edi,eax
  41ee98:	pop    es
  41ee99:	cmp    edx,DWORD PTR [edx+0x61]
  41ee9c:	or     eax,0xb5f445e5
  41eea1:	call   DWORD PTR gs:[esi+0x6c]
  41eea5:	shl    BYTE PTR [ecx],cl
  41eea7:	mov    dl,ch
  41eea9:	cli    
  41eeaa:	push   edx
  41eeab:	jecxz  0x41ee69
  41eead:	sub    al,0x3b
  41eeaf:	sbb    ecx,DWORD PTR fs:[ebp+0x4078916]
  41eeb6:	cwde   
  41eeb7:	mov    ecx,0xd62d358f
  41eebc:	mov    cl,0x80
  41eebe:	cli    
  41eebf:	retf   0xf9de
  41eec2:	mov    BYTE PTR [esi+0x42],bh
  41eec5:	ins    DWORD PTR es:[edi],dx
  41eec6:	test   al,0xd2
  41eec8:	sahf   
  41eec9:	jns    0x41ef25
  41eecb:	mov    edx,0xaadb5ee3
  41eed0:	fld    DWORD PTR [eax-0x138f66d2]
  41eed6:	das    
  41eed7:	xchg   esi,eax
  41eed8:	dec    esp
  41eed9:	cld    
  41eeda:	add    eax,0xfcd6d15f
  41eedf:	push   ss
  41eee0:	int3   
  41eee1:	jo     0x41ef04
  41eee3:	jae    0x41ee7d
  41eee5:	push   edi
  41eee6:	lahf   
  41eee7:	jmp    0x3e879f88
  41eeec:	dec    edx
  41eeed:	cli    
  41eeee:	repz pop eax
  41eef0:	int    0xd1
  41eef2:	mov    cl,ah
  41eef4:	jg     0x41eebf
  41eef6:	daa    
  41eef7:	into   
  41eef8:	iret   
  41eef9:	inc    esp
  41eefa:	inc    edi
  41eefb:	adc    BYTE PTR [ebx-0xa3e10c2],ah
  41ef01:	stos   BYTE PTR es:[edi],al
  41ef02:	xchg   edx,eax
  41ef03:	test   BYTE PTR [ecx+esi*4-0xb56be5b],0x8e
  41ef0b:	jbe    0x41ef85
  41ef0d:	dec    esi
  41ef0e:	data16 or bl,ch
  41ef11:	imul   eax,edx,0x3223348f
  41ef17:	test   BYTE PTR [esi-0x64],0x6a
  41ef1b:	dec    ebp
  41ef1c:	add    al,0x18
  41ef1e:	clc    
  41ef1f:	fs cs pop edi
  41ef22:	push   ecx
  41ef23:	jo     0x41ef80
  41ef25:	push   eax
  41ef26:	add    dl,BYTE PTR [edi]
  41ef28:	sbb    al,0x5d
  41ef2a:	pushf  
  41ef2b:	cs or  al,0xb2
  41ef2e:	(bad)  
  41ef2f:	in     al,0x51
  41ef31:	mov    eax,ds:0xebc632ef
  41ef36:	or     eax,0x3298c001
  41ef3b:	outs   dx,BYTE PTR ds:[esi]
  41ef3c:	imul   ebp,DWORD PTR ds:0x697b683c,0x47fd2e45
  41ef46:	add    eax,0xb7409b57
  41ef4b:	dec    eax
  41ef4c:	and    al,0xfd
  41ef4e:	xor    DWORD PTR [ecx],ebx
  41ef50:	out    0x78,al
  41ef52:	push   ds
  41ef53:	push   eax
  41ef54:	nop
  41ef55:	mov    bl,BYTE PTR [edx+edi*8+0x34f19b0b]
  41ef5c:	mov    BYTE PTR [edx],bl
  41ef5e:	xchg   esi,eax
  41ef5f:	cmp    al,BYTE PTR [esi]
  41ef61:	push   ebp
  41ef62:	repnz mov ebp,0x53cc6c82
  41ef68:	pop    ebp
  41ef69:	jae    0xeeb01311
  41ef6f:	cmovne ebp,DWORD PTR [ebx]
  41ef72:	fisub  WORD PTR [ebp-0x49af3a79]
  41ef78:	adc    eax,DWORD PTR [edi]
  41ef7a:	call   0xa728517f
  41ef7f:	pusha  
  41ef80:	jne    0x41ef47
  41ef82:	das    
  41ef83:	(bad)  
  41ef84:	or     ecx,DWORD PTR [ecx]
  41ef86:	and    ebx,DWORD PTR [edx-0x71]
  41ef89:	inc    esi
  41ef8a:	jmp    0x562ce821
  41ef8f:	mov    edx,0xc506c09a
  41ef94:	fisttp QWORD PTR [esi]
  41ef96:	sar    BYTE PTR [ebp+0x4b],cl
  41ef99:	iret   
  41ef9a:	jl     0x41ef71
  41ef9c:	cmp    BYTE PTR [eax],0x7c
  41ef9f:	mov    ch,0x2e
  41efa1:	mov    ebx,0x52d79400
  41efa6:	mov    ebp,0x630fcc4
  41efab:	das    
  41efac:	add    al,0xf1
  41efae:	inc    ebp
  41efaf:	xchg   ecx,eax
  41efb0:	enter  0xc661,0x65
  41efb4:	xor    DWORD PTR [ecx],esp
  41efb6:	cmp    BYTE PTR [eax+0xc],bl
  41efb9:	cli    
  41efba:	sub    esi,ebp
  41efbc:	retf   
  41efbd:	mov    esi,0x37bacc08
  41efc2:	jecxz  0x41f02f
  41efc4:	push   cs
  41efc5:	sbb    eax,0xd29d183
  41efca:	mov    ebx,0x4ea3fe7e
  41efcf:	out    dx,eax
  41efd0:	or     al,0x61
  41efd2:	jbe    0x41ef7f
  41efd4:	xchg   ecx,eax
  41efd5:	pushf  
  41efd6:	dec    ebp
  41efd7:	out    0xdf,eax
  41efd9:	push   ebx
  41efda:	fnsave [eax]
  41efdc:	les    edi,FWORD PTR ds:0x98e71d1e
  41efe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efe3:	sub    edx,ebp
  41efe5:	xor    al,BYTE PTR [ebx+ebx*2]
  41efe8:	dec    ebp
  41efe9:	div    DWORD PTR [esi]
  41efeb:	or     BYTE PTR [eax+0x29],ah
  41efee:	int    0x4d
  41eff0:	ficom  WORD PTR [ecx-0x449d04bc]
  41eff6:	xor    BYTE PTR [edx-0x2a15051a],cl
  41effc:	ss pop edi
  41effe:	sbb    DWORD PTR [edi+0x2e],0x73
  41f002:	shl    al,cl
  41f004:	adc    edi,edx
  41f006:	mov    edi,0x1f1a5fb9
  41f00b:	sub    DWORD PTR [ecx-0x42cd23d8],0x5548162d
  41f015:	adc    eax,0x35ffcc52
  41f01a:	out    dx,eax
  41f01b:	(bad)  
  41f01c:	jmp    0x41f01c
  41f01e:	dec    edi
  41f01f:	xchg   DWORD PTR [ecx],ebx
  41f021:	push   0xa7e7aca6
  41f026:	jg     0x41effa
  41f028:	stos   DWORD PTR es:[edi],eax
  41f029:	ror    DWORD PTR [eax],0xff
  41f02c:	push   0x73
  41f02e:	in     al,dx
  41f02f:	imul   edx,DWORD PTR [edi-0x40db3d10],0xffffffe5
  41f036:	adc    esp,edx
  41f038:	mov    ebp,DWORD PTR [edi-0x473518b4]
  41f03e:	mov    eax,0x4dde0c3f
  41f043:	or     bl,bh
  41f045:	lea    ebx,[edx+0x7c]
  41f048:	loope  0x41f05a
  41f04a:	fwait
  41f04b:	(bad)  
  41f04c:	sub    al,0x5f
  41f04e:	push   ds
  41f04f:	jo     0x41f058
  41f051:	ficom  DWORD PTR [ebp-0x49dee12]
  41f057:	popa   
  41f058:	push   edx
  41f059:	xor    al,0x76
  41f05b:	mov    eax,0x79703464
  41f060:	mov    al,dl
  41f062:	and    BYTE PTR [ebx+0x7817ef1],bl
  41f068:	imul   esi,DWORD PTR [eax+0x758b65da],0xffffffe7
  41f06f:	loopne 0x41f0b0
  41f071:	jmp    0xf6e9ab4c
  41f076:	push   esp
  41f077:	xchg   edx,eax
  41f078:	and    al,0x5
  41f07a:	xchg   DWORD PTR [ebp+0x68f12214],esi
  41f080:	sub    BYTE PTR [ebp-0x36f15b22],0x41
  41f087:	push   eax
  41f088:	mov    ah,0xeb
  41f08a:	stos   DWORD PTR es:[edi],eax
  41f08b:	(bad)
  41f08f:	or     ecx,0xb9a548ac
  41f095:	mov    al,0x5c
  41f097:	push   ebp
  41f098:	sub    eax,0x2551d86
  41f09d:	fldenv [ebx]
  41f09f:	(bad)  
  41f0a1:	sbb    BYTE PTR [edx],dh
  41f0a3:	inc    ebx
  41f0a4:	out    dx,al
  41f0a5:	lock mov esi,0x7911105f
  41f0ab:	fnstcw WORD PTR [edi]
  41f0ad:	pushf  
  41f0ae:	sbb    eax,0x1ba324f7
  41f0b3:	pop    esp
  41f0b4:	ficomp DWORD PTR [ebx-0x6c]
  41f0b7:	and    eax,0x165026c4
  41f0bc:	(bad)  [ebx]
  41f0be:	rcl    BYTE PTR [eax],cl
  41f0c0:	add    eax,0xaba2971d
  41f0c5:	adc    BYTE PTR [edi-0x1],ch
  41f0c8:	fnstsw WORD PTR [esi-0x37e076c8]
  41f0ce:	sub    DWORD PTR [ecx+0x34559f51],edx
  41f0d4:	ins    BYTE PTR es:[edi],dx
  41f0d5:	int3   
  41f0d6:	mov    eax,0x675558ed
  41f0db:	lahf   
  41f0dc:	pop    esi
  41f0dd:	mov    ds:0x65e1b2f8,al
  41f0e2:	jge    0x41f0cd
  41f0e4:	loopne 0x41f0f5
  41f0e6:	cli    
  41f0e7:	mov    BYTE PTR [eax+edi*8+0x13],ah
  41f0eb:	pop    edx
  41f0ec:	jbe    0x41f0ed
  41f0ee:	sub    cl,BYTE PTR [ecx-0x6988ee50]
  41f0f4:	inc    edi
  41f0f5:	(bad)  
  41f0f6:	jle    0x41f16d
  41f0f8:	imul   eax,ecx,0x7484b546
  41f0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ff:	fwait
  41f100:	outs   dx,DWORD PTR ds:[esi]
  41f101:	aad    0xbb
  41f103:	out    dx,al
  41f104:	stos   BYTE PTR es:[edi],al
  41f105:	aad    0x16
  41f107:	(bad)  
  41f108:	and    ch,ah
  41f10a:	das    
  41f10b:	cmp    esi,DWORD PTR [eax]
  41f10d:	ja     0x41f0bb
  41f10f:	(bad)  
  41f110:	jmp    0x98f1:0xc064748d
  41f117:	mov    bh,0x45
  41f119:	rcl    DWORD PTR [ebx+edx*4-0x17],cl
  41f11d:	dec    ebx
  41f11e:	push   edi
  41f11f:	in     eax,0x20
  41f121:	into   
  41f122:	out    dx,eax
  41f123:	xchg   esp,eax
  41f124:	inc    edx
  41f125:	sbb    cl,ah
  41f127:	mov    ch,0x30
  41f129:	mov    esi,0xd6e1ae7
  41f12e:	xor    edx,DWORD PTR [ecx+eax*4-0x376ff9f4]
  41f135:	jne    0x41f16b
  41f137:	dec    esp
  41f138:	sub    cl,BYTE PTR [eax]
  41f13a:	fdivr  QWORD PTR [edi]
  41f13c:	pop    ecx
  41f13d:	cmc    
  41f13e:	lds    ecx,FWORD PTR [ecx]
  41f140:	gs push 0x3e
  41f143:	xor    esp,DWORD PTR [ebx-0x38e00c93]
  41f149:	aad    0x98
  41f14b:	loop   0x41f174
  41f14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f14e:	pop    esp
  41f14f:	push   edx
  41f150:	ret    
  41f151:	jmp    0xa7cae929
  41f156:	outs   dx,BYTE PTR ds:[esi]
  41f157:	mov    esi,0xd922f3c2
  41f15c:	imul   ecx,ebx,0xffffff87
  41f15f:	inc    edi
  41f160:	jecxz  0x41f109
  41f162:	addr16 icebp 
  41f164:	and    BYTE PTR [ebp+0x4c],0x0
  41f168:	and    BYTE PTR [esi+0x3f],bl
  41f16b:	test   eax,0xf2f35d85
  41f170:	(bad)  
  41f172:	mov    dh,0xb7
  41f174:	ret    
  41f175:	adc    BYTE PTR [edx+ebp*4-0x1],0x26
  41f17a:	gs enter 0xb4bf,0xbd
  41f17f:	lock fnstcw WORD PTR [edx+0x2729c50d]
  41f186:	bound  eax,QWORD PTR [ecx+0x2c]
  41f189:	repz ret 0xd6d9
  41f18d:	sti    
  41f18e:	jb     0x41f146
  41f190:	jno    0x41f1d6
  41f192:	sbb    esp,DWORD PTR [ecx]
  41f194:	mov    bh,0x28
  41f196:	pop    ebx
  41f197:	retf   0x1c80
  41f19a:	(bad)
  41f19e:	in     eax,dx
  41f19f:	pushf  
  41f1a0:	and    bl,ch
  41f1a2:	push   es
  41f1a3:	xchg   edi,eax
  41f1a4:	mov    bh,0x95
  41f1a6:	pop    ecx
  41f1a7:	test   ecx,ebx
  41f1a9:	imul   esi,DWORD PTR [ebx],0x4c864b81
  41f1af:	out    0xf5,al
  41f1b1:	dec    ecx
  41f1b2:	or     bl,BYTE PTR [esi]
  41f1b4:	push   esp
  41f1b5:	sbb    eax,0x3b14b6f8
  41f1ba:	cmp    BYTE PTR [esi+ecx*4],ah
  41f1bd:	or     cl,al
  41f1bf:	aam    0x79
  41f1c1:	and    al,0x12
  41f1c3:	(bad)  
  41f1c4:	pushf  
  41f1c5:	pop    esp
  41f1c6:	repz push edi
  41f1c8:	out    0xce,eax
  41f1ca:	fimul  WORD PTR [esi]
  41f1cc:	push   eax
  41f1cd:	mov    al,ds:0x770efd89
  41f1d2:	jne    0x41f235
  41f1d4:	sub    BYTE PTR [ecx+0x5137561],bl
  41f1da:	sub    BYTE PTR [ecx-0x36],dl
  41f1dd:	out    0xd0,eax
  41f1df:	ds jbe 0x41f205
  41f1e2:	ins    DWORD PTR es:[edi],dx
  41f1e3:	ins    DWORD PTR es:[edi],dx
  41f1e4:	sbb    al,0x94
  41f1e6:	cmc    
  41f1e7:	imul   edx,DWORD PTR [esi],0xffffffea
  41f1ea:	sub    edx,DWORD PTR [ecx-0x177f9091]
  41f1f0:	inc    esp
  41f1f1:	popf   
  41f1f2:	in     eax,dx
  41f1f3:	sbb    bh,BYTE PTR [esi+0x6]
  41f1f6:	sbb    al,0x14
  41f1f8:	repnz hlt 
  41f1fa:	mov    edi,0xefe2cefc
  41f1ff:	or     ebp,ebx
  41f201:	inc    esi
  41f202:	dec    ebp
  41f203:	daa    
  41f204:	xchg   DWORD PTR [ebx+0x39],ebx
  41f207:	imul   eax,esi,0xffffffde
  41f20a:	adc    eax,0x89289a8
  41f20f:	hlt    
  41f210:	mov    al,0xac
  41f212:	retf   
  41f213:	sbb    BYTE PTR [edi-0x1b],bh
  41f216:	dec    ebx
  41f217:	xchg   edi,eax
  41f218:	ja     0x41f236
  41f21a:	add    BYTE PTR [eax],al
  41f21c:	fmul   DWORD PTR [eax+0x52606930]
  41f222:	retf   
  41f223:	sub    al,BYTE PTR [ebx+0x5]
  41f226:	or     al,0x4a
  41f228:	push   esp
  41f229:	enter  0x768,0xa5
  41f22d:	test   al,0xb6
  41f22f:	mov    ch,0x11
  41f231:	sbb    ah,BYTE PTR [esi-0x5659834]
  41f237:	fld    TBYTE PTR [edx]
  41f239:	clc    
  41f23a:	jmp    0x41f1cb
  41f23c:	shr    DWORD PTR [ecx+0x690e468e],cl
  41f242:	sahf   
  41f243:	mov    bl,0x52
  41f245:	mov    ds:0x5f877f80,eax
  41f24a:	and    BYTE PTR [ecx],ah
  41f24c:	and    BYTE PTR ds:0x71a5a7ee,0x22
  41f253:	sub    cl,BYTE PTR [ecx+0x5c015703]
  41f259:	jl     0x41f288
  41f25b:	test   BYTE PTR [edi],0x2a
  41f25e:	in     eax,0xc9
  41f260:	cmp    eax,0xf51b8224
  41f265:	jle    0x41f25e
  41f267:	sub    esp,eax
  41f269:	and    BYTE PTR [edx+0x60],0x6b
  41f26d:	repnz pop esp
  41f26f:	rol    DWORD PTR [eax+0x39],1
  41f272:	xchg   DWORD PTR [edi],esp
  41f274:	xor    al,0x4
  41f276:	xchg   ebp,eax
  41f277:	(bad)  
  41f278:	xlat   BYTE PTR ds:[ebx]
  41f279:	inc    ebp
  41f27a:	pusha  
  41f27b:	sbb    ah,BYTE PTR [esi+0x68b2e708]
  41f281:	pop    ebx
  41f282:	jecxz  0x41f26b
  41f284:	sahf   
  41f285:	and    BYTE PTR [eax-0x35e7023a],dl
  41f28b:	pop    esi
  41f28c:	je     0x41f2a4
  41f28e:	jbe    0x41f22c
  41f290:	or     esi,DWORD PTR [ebx+edi*1-0x35c65bd4]
  41f297:	sub    ah,dl
  41f299:	scas   eax,DWORD PTR es:[edi]
  41f29a:	xor    ch,BYTE PTR [ebx+edi*8+0x65]
  41f29e:	pushaw 
  41f2a0:	cmp    DWORD PTR [edx],edi
  41f2a2:	cli    
  41f2a3:	lds    edx,FWORD PTR [eax+0x5f]
  41f2a6:	xor    ah,BYTE PTR [edi]
  41f2a8:	jne    0x41f276
  41f2aa:	add    bh,ch
  41f2ac:	or     DWORD PTR [edx-0x28783f37],ebp
  41f2b2:	and    ecx,edi
  41f2b4:	xchg   edx,eax
  41f2b5:	in     eax,dx
  41f2b6:	or     al,dl
  41f2b8:	jmp    0xe4:0x4b89ff3
  41f2bf:	or     al,0x87
  41f2c1:	imul   edi,DWORD PTR [ebx+0x1f],0x26377189
  41f2c8:	les    edx,FWORD PTR [edi+0x37]
  41f2cb:	div    DWORD PTR [ecx+0x66789933]
  41f2d1:	jl     0x41f2d1
  41f2d3:	push   es
  41f2d4:	push   ss
  41f2d5:	imul   eax,ecx,0xffffffbe
  41f2d8:	inc    ebp
  41f2d9:	test   BYTE PTR [esi],ah
  41f2db:	std    
  41f2dc:	and    eax,DWORD PTR [ecx]
  41f2de:	or     DWORD PTR ds:0x872ea5c0,0xe09d4dd4
  41f2e8:	rol    DWORD PTR [edi+0x3b],cl
  41f2eb:	fs pop esp
  41f2ed:	cs jo  0x41f2b6
  41f2f0:	bound  esi,QWORD PTR [ecx-0x8]
  41f2f3:	shr    BYTE PTR [ecx+eiz*2-0x47],1
  41f2f7:	mov    esi,0x1ba8de0e
  41f2fc:	ins    DWORD PTR es:[edi],dx
  41f2fd:	pop    ebx
  41f2fe:	pop    ebx
  41f2ff:	mov    al,ds:0xf35cdfe7
  41f304:	xor    dl,BYTE PTR [esi+0x6166e84d]
  41f30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f30b:	je     0x41f30c
  41f30d:	cld    
  41f30e:	fndisi(8087 only) 
  41f310:	jl     0x41f2e6
  41f312:	ins    DWORD PTR es:[edi],dx
  41f313:	adc    al,0xf0
  41f315:	aaa    
  41f316:	std    
  41f317:	adc    al,0x38
  41f319:	push   0x13
  41f31b:	data16 cmc 
  41f31d:	stc    
  41f31e:	mov    eax,0xce0be855
  41f323:	pushf  
  41f324:	xchg   esp,eax
  41f325:	mov    esp,0x97e5da3b
  41f32a:	rcr    DWORD PTR [eax],1
  41f32c:	int    0xb1
  41f32e:	int    0xc3
  41f330:	loope  0x41f3a0
  41f332:	sete   BYTE PTR [edx-0x2398a464]
  41f339:	cmp    BYTE PTR ds:0x76ce3b1d,bl
  41f33f:	lock dec esp
  41f341:	mov    bl,BYTE PTR [ebp-0x67411dca]
  41f347:	test   al,0xf7
  41f349:	inc    ebx
  41f34a:	call   0x9db44658
  41f34f:	popa   
  41f350:	sbb    eax,0xb6f89b26
  41f355:	(bad)  
  41f356:	into   
  41f357:	daa    
  41f358:	push   es
  41f359:	jl     0x41f375
  41f35b:	jl     0x41f3d7
  41f35d:	loop   0x41f32f
  41f35f:	push   edi
  41f360:	lods   eax,DWORD PTR ds:[esi]
  41f361:	call   0x3dcc29
  41f366:	and    dh,BYTE PTR ds:0x3c9ab9d8
  41f36c:	sar    BYTE PTR [ecx+esi*1],0xd9
  41f370:	mov    ecx,gs
  41f372:	bound  eax,QWORD PTR [ebp+ebp*4-0x7d]
  41f376:	(bad)  [esp+eax*1-0x716f318e]
  41f37d:	mov    esp,0x57f908a3
  41f382:	nop
  41f383:	enter  0x1e2e,0x85
  41f387:	jne    0x41f39e
  41f389:	dec    esi
  41f38a:	push   ebp
  41f38b:	xchg   esi,eax
  41f38c:	icebp  
  41f38d:	jae    0x41f3c9
  41f38f:	add    edi,esp
  41f391:	mov    esp,0x4ea6cd1e
  41f396:	aad    0x36
  41f398:	pop    edx
  41f399:	not    BYTE PTR [ebp+0x6373dbf3]
  41f39f:	(bad)  
  41f3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a1:	lahf   
  41f3a2:	sub    edx,DWORD PTR [ebp+0x25]
  41f3a5:	fisttp DWORD PTR [edx-0x21]
  41f3a8:	lock lock inc edx
  41f3ab:	xchg   edx,eax
  41f3ac:	xchg   esp,eax
  41f3ad:	sbb    al,0xf4
  41f3af:	inc    ecx
  41f3b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3b1:	fsubr  DWORD PTR [edi+0x3e84d906]
  41f3b7:	pop    eax
  41f3b8:	or     al,0xea
  41f3ba:	mov    bh,0xa5
  41f3bc:	(bad)  
  41f3bd:	push   0x6f0d9b8
  41f3c2:	cli    
  41f3c3:	aad    0xe8
  41f3c5:	into   
  41f3c6:	stos   BYTE PTR es:[edi],al
  41f3c7:	dec    eax
  41f3c8:	imul   bh
  41f3ca:	inc    edx
  41f3cb:	adc    edi,esp
  41f3cd:	jne    0x41f44b
  41f3cf:	jg     0x41f3d1
  41f3d1:	mov    es,WORD PTR [eax+0x25decd7c]
  41f3d7:	les    edx,FWORD PTR [eax-0xd8ad512]
  41f3dd:	sbb    al,0xf1
  41f3df:	mov    edx,0xf73f2171
  41f3e4:	dec    edx
  41f3e5:	sub    cl,BYTE PTR [edi]
  41f3e7:	loop   0x41f420
  41f3e9:	dec    edi
  41f3ea:	inc    esp
  41f3eb:	pop    edx
  41f3ec:	jb     0x41f3e8
  41f3ee:	mov    dh,0xe7
  41f3f0:	retf   
  41f3f1:	ins    BYTE PTR es:[edi],dx
  41f3f2:	out    0x37,al
  41f3f4:	into   
  41f3f5:	xor    BYTE PTR [edi-0x55],bl
  41f3f8:	mov    al,0x17
  41f3fa:	and    edx,ebx
  41f3fc:	inc    ebp
  41f3fd:	ror    BYTE PTR [ecx-0x28990eaf],cl
  41f403:	mov    WORD PTR [ecx-0x78123046],ss
  41f409:	sbb    esp,edx
  41f40b:	jbe    0x41f485
  41f40d:	or     al,0x63
  41f40f:	or     edx,DWORD PTR [eax-0x43]
  41f412:	jnp    0x41f45b
  41f414:	xor    al,BYTE PTR [edx-0x18]
  41f417:	outs   dx,BYTE PTR ds:[esi]
  41f418:	xchg   BYTE PTR [eax-0x6d9eb006],ch
  41f41e:	daa    
  41f41f:	(bad)  
  41f420:	mov    eax,0xdcb83ff9
  41f425:	cmp    ah,ah
  41f427:	retf   
  41f428:	rcr    BYTE PTR [edi-0x31],1
  41f42b:	in     eax,dx
  41f42c:	xchg   DWORD PTR [ecx-0x53],esp
  41f42f:	fstp   DWORD PTR [esi-0x53]
  41f432:	fisubr DWORD PTR [edi]
  41f434:	into   
  41f435:	enter  0xd596,0x43
  41f439:	retf   
  41f43a:	ja     0x41f48e
  41f43c:	inc    ebp
  41f43d:	sbb    DWORD PTR [edx+0x4b6a9c83],edx
  41f443:	pop    eax
  41f444:	std    
  41f445:	cwde   
  41f446:	mov    DWORD PTR [esi],0x194295c5
  41f44c:	and    ch,0x3
  41f44f:	push   es
  41f450:	add    cl,BYTE PTR [edi-0x3aee7c4d]
  41f456:	lock push cs
  41f458:	aaa    
  41f459:	aas    
  41f45a:	xchg   ecx,eax
  41f45b:	add    eax,0x7ab5c15b
  41f460:	cli    
  41f461:	sub    esi,DWORD PTR [edx+edx*2+0x2c893793]
  41f468:	sbb    esi,DWORD PTR [esi+0x43e10b41]
  41f46e:	mov    dh,0x9e
  41f470:	push   cs
  41f471:	hlt    
  41f472:	xchg   ebx,eax
  41f473:	mov    gs,esi
  41f475:	mov    DWORD PTR [edi+eiz*2],edx
  41f478:	jne    0x41f4cd
  41f47a:	cdq    
  41f47b:	xchg   DWORD PTR [ebx+eax*4-0x1af8d02e],edx
  41f482:	std    
  41f483:	mov    ebx,0x25902d1c
  41f488:	sbb    eax,0x5c55beea
  41f48d:	dec    eax
  41f48e:	sub    BYTE PTR [edx-0x42621b3a],ah
  41f494:	cmp    BYTE PTR [edx-0x26],dl
  41f497:	addr16 pop es
  41f499:	and    eax,0x8bc062b4
  41f49e:	imul   eax,DWORD PTR [esi],0xb678616b
  41f4a4:	add    cl,dh
  41f4a6:	sub    eax,0xdca40088
  41f4ab:	(bad)  
  41f4ac:	fist   WORD PTR [ebx+0x4d]
  41f4af:	cmp    BYTE PTR [edx],ah
  41f4b1:	adc    ah,BYTE PTR [edx+0x17]
  41f4b4:	add    al,0x7
  41f4b6:	mov    ch,0x15
  41f4b8:	adc    eax,0x1aa240b9
  41f4bd:	xor    dh,BYTE PTR [ecx+0x17c19b5c]
  41f4c3:	ja     0x41f4a6
  41f4c5:	mov    dh,ah
  41f4c7:	mov    bl,0xd6
  41f4c9:	pop    es
  41f4ca:	sub    DWORD PTR [esi-0x50],0xc70fb79f
  41f4d1:	addr16 adc eax,0xac345b43
  41f4d7:	pop    edx
  41f4d8:	out    dx,eax
  41f4d9:	repnz mov DWORD PTR [edi-0x63b40dec],0x9a01233d
  41f4e4:	fld    TBYTE PTR [esp+esi*4+0x42]
  41f4e8:	mov    bh,0x57
  41f4ea:	inc    esp
  41f4eb:	xchg   ebx,eax
  41f4ec:	clc    
  41f4ed:	out    dx,al
  41f4ee:	sbb    ebp,ecx
  41f4f0:	fwait
  41f4f1:	dec    ebp
  41f4f2:	mov    WORD PTR [eax+edx*8-0x39c9ae35],fs
  41f4f9:	aam    0xca
  41f4fb:	push   cs
  41f4fc:	(bad)  
  41f4fd:	mov    cl,0xd5
  41f4ff:	push   eax
  41f500:	stc    
  41f501:	push   ebp
  41f502:	sub    ah,bl
  41f504:	fstp   DWORD PTR ds:[ecx-0x550d530f]
  41f50b:	ret    
  41f50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50d:	(bad)  
  41f50e:	mov    ah,0x6b
  41f510:	jae    0x41f4f4
  41f512:	jecxz  0x41f4f9
  41f514:	aaa    
  41f515:	or     BYTE PTR [ecx],ah
  41f517:	je     0x41f4c9
  41f519:	mov    es,WORD PTR [eax+ebp*8]
  41f51c:	scas   eax,DWORD PTR es:[edi]
  41f51d:	(bad)  
  41f51e:	aad    0xdc
  41f520:	test   al,0x3b
  41f522:	mov    eax,ds:0xc13272a0
  41f527:	sub    eax,0xe6050fa3
  41f52c:	sahf   
  41f52d:	in     eax,0x76
  41f52f:	or     eax,0xde5718af
  41f534:	stos   BYTE PTR es:[edi],al
  41f535:	ret    0x2912
  41f538:	sahf   
  41f539:	popf   
  41f53a:	add    dl,dh
  41f53c:	ror    DWORD PTR ss:[esi+0x70],1
  41f540:	ret    
  41f541:	pop    esp
  41f542:	ror    dl,cl
  41f544:	outs   dx,DWORD PTR ds:[esi]
  41f545:	pop    eax
  41f546:	add    ah,BYTE PTR [edi-0x2d]
  41f549:	mov    edi,0xb585757
  41f54e:	jmp    0x2636d44d
  41f553:	add    eax,0xf00ff4e9
  41f558:	lds    edi,FWORD PTR [ecx]
  41f55a:	jecxz  0x41f4e7
  41f55c:	cmp    WORD PTR [ebx-0x67ee55d8],dx
  41f563:	mov    al,ds:0xb5711580
  41f568:	inc    ecx
  41f569:	scas   al,BYTE PTR es:[edi]
  41f56a:	dec    eax
  41f56b:	jmp    0xd57c:0x92e7d4ac
  41f572:	in     al,0x40
  41f574:	xchg   ecx,eax
  41f575:	sbb    al,BYTE PTR [ecx]
  41f577:	(bad)  
  41f578:	adc    eax,0xfcab8d0a
  41f57d:	push   ebp
  41f57e:	popa   
  41f57f:	pop    DWORD PTR ss:0xad5e2bf9
  41f586:	jmp    0x1d8b70ec
  41f58b:	lock sub ebx,DWORD PTR [ecx]
  41f58e:	inc    ebp
  41f58f:	and    al,0xf5
  41f591:	stc    
  41f592:	jl     0x41f57e
  41f594:	push   0x9c00a3ed
  41f599:	ss int 0xbf
  41f59c:	es mov bl,0x25
  41f59f:	mov    bl,0xc9
  41f5a1:	mov    dl,0xf4
  41f5a3:	jle    0x41f5ac
  41f5a5:	and    ebx,DWORD PTR [esp+ebx*1]
  41f5a8:	jns    0x41f545
  41f5aa:	push   esi
  41f5ab:	lods   al,BYTE PTR ds:[esi]
  41f5ac:	retf   
  41f5ad:	xchg   ecx,eax
  41f5ae:	mov    DWORD PTR [ebx-0x11603395],edx
  41f5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b5:	out    dx,eax
  41f5b6:	xor    cl,BYTE PTR [esi]
  41f5b8:	sahf   
  41f5b9:	stos   DWORD PTR es:[edi],eax
  41f5ba:	jp     0x41f631
  41f5bc:	or     DWORD PTR [ebp-0x4722ddb8],ecx
  41f5c2:	jmp    0x6811:0x22f8bf88
  41f5c9:	and    ebp,DWORD PTR [ecx-0x55997bb4]
  41f5cf:	mov    ebx,DWORD PTR [edi]
  41f5d1:	pop    es
  41f5d2:	inc    esp
  41f5d3:	cli    
  41f5d4:	sbb    DWORD PTR [ecx+0x2ce6ec34],ecx
  41f5da:	pop    ecx
  41f5db:	mov    ds:0x5fd21f24,al
  41f5e0:	ret    
  41f5e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e2:	adc    al,0xde
  41f5e4:	pop    edi
  41f5e5:	pop    es
  41f5e6:	and    DWORD PTR [esi-0x2],esp
  41f5e9:	dec    ecx
  41f5ea:	stc    
  41f5eb:	add    ch,BYTE PTR [edx-0x6c]
  41f5ee:	adc    dl,BYTE PTR [ecx+eax*8+0x14ecd6c0]
  41f5f5:	lock in al,dx
  41f5f7:	or     eax,0xb55eeeac
  41f5fc:	and    DWORD PTR [esi+0x640fed9],0x7888e5ce
  41f606:	mov    ecx,0x2d5704f6
  41f60b:	mov    ebp,0xc045fd77
  41f610:	lea    ebx,[esi]
  41f612:	push   cs
  41f613:	and    DWORD PTR [edi+0x41d2d4b6],esi
  41f619:	div    DWORD PTR [ebp+0xf814bfc]
  41f61f:	stos   BYTE PTR es:[edi],al
  41f620:	add    al,0x63
  41f622:	or     DWORD PTR [ecx+0x7a],esp
  41f625:	xor    BYTE PTR ds:0xa230ef80,cl
  41f62b:	xchg   edi,eax
  41f62c:	les    eax,FWORD PTR [ebx]
  41f62e:	pop    ebp
  41f62f:	mov    esp,0x8bbc5d89
  41f634:	push   ebp
  41f635:	or     BYTE PTR [ebx],dh
  41f637:	rol    BYTE PTR [ebx],1
  41f639:	(bad)  
  41f63a:	jne    0x41aeb1
  41f640:	mov    edx,DWORD PTR [ebp-0x8]
  41f643:	mov    ebx,DWORD PTR [ebp-0xc]
  41f646:	xor    edx,eax
  41f648:	lea    edx,[edx+ebx*1+0x3272e0]
  41f64f:	mov    DWORD PTR [ebp-0xc],edx
  41f652:	inc    DWORD PTR [ebp+0xc]
  41f655:	mov    edx,DWORD PTR [ebp-0x14]
  41f658:	xor    edx,eax
  41f65a:	add    edx,esi
  41f65c:	jmp    0x4219e5
  41f661:	out    dx,al
  41f662:	(bad)  
  41f664:	call   0xc42ec61c
  41f669:	jmp    0x6dfd:0x8d11cc5e
  41f670:	mov    WORD PTR [ecx+0x67a79c2],es
  41f676:	pop    edi
  41f677:	jp     0x41f6f3
  41f679:	fmul   DWORD PTR ds:0x28e8bdbb
  41f67f:	pop    esi
  41f680:	jmp    0xde5d:0x60e1088b
  41f687:	mov    eax,ds:0xd2cf138d
  41f68c:	mov    esp,DWORD PTR [edx-0x52a9fb93]
  41f692:	mov    WORD PTR [edi+0x9b874b9],?
  41f698:	ins    DWORD PTR es:[edi],dx
  41f699:	and    al,BYTE PTR [edx+0x7a]
  41f69c:	push   edx
  41f69d:	sub    al,0x55
  41f69f:	adc    eax,DWORD PTR [ebx-0x8]
  41f6a2:	bts    DWORD PTR [esi-0xdfc621f],0x14
  41f6aa:	jne    0x41f646
  41f6ac:	rcr    DWORD PTR [ebp+ebx*2+0x37],cl
  41f6b0:	in     eax,0x67
  41f6b2:	or     dh,BYTE PTR [esi+ebp*4]
  41f6b5:	pop    ds
  41f6b6:	imul   BYTE PTR [ebx]
  41f6b8:	or     dh,bh
  41f6ba:	mov    dl,0xa8
  41f6bc:	or     cl,BYTE PTR [ebx-0x14]
  41f6bf:	(bad)  [eax-0x9]
  41f6c2:	icebp  
  41f6c3:	hlt    
  41f6c4:	mov    ch,0x88
  41f6c6:	adc    al,al
  41f6c8:	fild   WORD PTR [esi]
  41f6ca:	loope  0x41f701
  41f6cc:	in     eax,dx
  41f6cd:	jae    0x41f6f9
  41f6cf:	leave  
  41f6d0:	pop    ecx
  41f6d1:	fdivrp st(0),st
  41f6d3:	les    edx,FWORD PTR [esi]
  41f6d5:	sti    
  41f6d6:	ret    
  41f6d7:	test   eax,0x1c714299
  41f6dc:	xor    bl,BYTE PTR [ebx]
  41f6de:	mov    bh,0x98
  41f6e0:	fbstp  TBYTE PTR [ebx+esi*2+0x20424f99]
  41f6e7:	push   ds
  41f6e8:	sub    DWORD PTR [ebp+0x46],ebx
  41f6eb:	shr    DWORD PTR [edi+esi*2],cl
  41f6ee:	cmp    cl,BYTE PTR [eax+0x125393e8]
  41f6f4:	(bad)  
  41f6f5:	mov    al,ds:0x421888b8
  41f6fa:	ins    DWORD PTR es:[edi],dx
  41f6fb:	mov    bl,0x9e
  41f6fd:	sbb    ch,BYTE PTR [ebx*1+0x4e628b82]
  41f704:	jno    0x41f733
  41f706:	xor    BYTE PTR [ebx+0x72],ah
  41f709:	xor    eax,0x10c567cc
  41f70e:	mov    esi,0x3ddbf97c
  41f713:	xchg   edx,eax
  41f714:	in     eax,dx
  41f715:	ja     0x41f6ae
  41f717:	push   0xd38410fb
  41f71c:	(bad)  
  41f71d:	addr16 cmc 
  41f71f:	sub    BYTE PTR [esi+0x2262de75],al
  41f725:	adc    eax,0xa88b7cfb
  41f72a:	imul   ebx,eax,0xc80085e9
  41f730:	std    
  41f731:	cmp    bl,BYTE PTR [ecx*4-0x6147c996]
  41f738:	ds inc ebp
  41f73a:	or     eax,DWORD PTR [ebp-0x3b]
  41f73d:	ja     0x41f77d
  41f73f:	mov    ebx,0xae94eeef
  41f744:	sbb    esp,DWORD PTR [edx+eiz*8]
  41f747:	sub    BYTE PTR [eax-0x16],ch
  41f74a:	loopne 0x41f7a9
  41f74c:	test   esp,ecx
  41f74e:	ds mov dh,0xc7
  41f751:	lods   eax,DWORD PTR ds:[esi]
  41f752:	rol    DWORD PTR [eax],cl
  41f754:	cwde   
  41f755:	and    eax,0x21539bb0
  41f75a:	jmp    0x7fed:0xf6cd001f
  41f761:	dec    edi
  41f762:	(bad)  [edi-0x5d]
  41f765:	mov    ch,0xd6
  41f767:	xchg   al,cl
  41f769:	or     al,0x2d
  41f76b:	fsub   QWORD PTR [edx+0x3dc89337]
  41f771:	popf   
  41f772:	push   ss
  41f773:	cmp    eax,0xf4626133
  41f778:	sbb    eax,0x8dd2d768
  41f77d:	adc    dh,BYTE PTR [edx]
  41f77f:	aaa    
  41f780:	pusha  
  41f781:	repnz cmp al,0x8a
  41f784:	fsubr  QWORD PTR [edx+0x1f]
  41f787:	pushf  
  41f788:	jge    0x41f711
  41f78a:	pop    ss
  41f78b:	ret    0x620
  41f78e:	mov    al,bl
  41f790:	hlt    
  41f791:	sbb    eax,0xd68b0fe2
  41f796:	mov    eax,ds:0xf312d01d
  41f79b:	bound  esp,QWORD PTR [eax*2+0x2aa15dca]
  41f7a2:	nop
  41f7a3:	out    dx,eax
  41f7a4:	call   DWORD PTR [esi-0xc371d07]
  41f7aa:	in     eax,dx
  41f7ab:	(bad)  
  41f7ac:	nop
  41f7ad:	jge    0x41f7a2
  41f7af:	xchg   edi,eax
  41f7b0:	sub    ecx,DWORD PTR [edi]
  41f7b2:	mov    cl,0xb4
  41f7b4:	arpl   WORD PTR [edi+ebx*8],dx
  41f7b7:	lock push edx
  41f7b9:	xchg   DWORD PTR [ebx-0x655e11b],esi
  41f7bf:	scas   eax,DWORD PTR es:[edi]
  41f7c0:	leave  
  41f7c1:	push   es
  41f7c2:	sub    cl,bh
  41f7c4:	scas   eax,DWORD PTR es:[edi]
  41f7c5:	jecxz  0x41f803
  41f7c7:	sub    esp,DWORD PTR [edx]
  41f7c9:	sbb    bh,cl
  41f7cb:	jno    0x41f81a
  41f7cd:	sub    edi,DWORD PTR [ecx+edx*4-0x56080e2c]
  41f7d4:	icebp  
  41f7d5:	push   eax
  41f7d6:	adc    eax,0xbe6f2c03
  41f7db:	push   cs
  41f7dc:	enter  0x9fc1,0xa3
  41f7e0:	dec    eax
  41f7e1:	push   cs
  41f7e2:	inc    esi
  41f7e3:	dec    ebx
  41f7e4:	mov    cl,0x1d
  41f7e6:	xchg   ecx,eax
  41f7e7:	in     al,0x7f
  41f7e9:	sub    dl,bh
  41f7eb:	(bad)  
  41f7ec:	sti    
  41f7ed:	outs   dx,BYTE PTR ds:[esi]
  41f7ee:	mov    esi,0xf76885b7
  41f7f3:	mov    dh,0x66
  41f7f5:	mov    cl,0x3
  41f7f7:	inc    edx
  41f7f8:	mov    cl,0x88
  41f7fa:	lahf   
  41f7fb:	dec    edx
  41f7fc:	xchg   esp,eax
  41f7fd:	and    ebp,DWORD PTR [eax-0x1e13ae3e]
  41f803:	xlat   BYTE PTR ds:[ebx]
  41f804:	adc    BYTE PTR ds:0x64530d57,cl
  41f80a:	fs stc 
  41f80c:	fwait
  41f80d:	repz ror BYTE PTR [ebp+0x1ecf95ed],cl
  41f814:	imul   edx,DWORD PTR [ebx-0x34],0x1c41efb6
  41f81b:	cld    
  41f81c:	pop    edx
  41f81d:	stos   DWORD PTR es:[edi],eax
  41f81e:	add    al,0x9f
  41f820:	mov    esi,0x6ab5d9be
  41f825:	imul   BYTE PTR [edx+0x33]
  41f828:	ror    BYTE PTR [edi+0x26],cl
  41f82b:	fneni(8087 only) 
  41f82d:	loopne 0x41f7b9
  41f82f:	imul   ebp,DWORD PTR [ebx+0x31],0xea2fb229
  41f836:	xchg   DWORD PTR [eax-0x270a4580],ecx
  41f83c:	jbe    0x41f80d
  41f83e:	daa    
  41f83f:	aam    0x24
  41f841:	(bad)  
  41f842:	push   ebx
  41f843:	div    eax
  41f845:	sti    
  41f846:	mov    ?,WORD PTR [ecx+0x43]
  41f849:	pop    ds
  41f84a:	(bad)  
  41f84c:	push   0x2f
  41f84e:	sbb    al,0x64
  41f850:	dec    esp
  41f851:	cdq    
  41f852:	lods   al,BYTE PTR ds:[esi]
  41f853:	cmc    
  41f854:	dec    edx
  41f855:	pop    eax
  41f856:	adc    eax,0x4bec8106
  41f85b:	je     0x41f837
  41f85d:	xor    al,0xea
  41f85f:	bound  ecx,QWORD PTR [ebp-0x2e7bbb01]
  41f865:	neg    DWORD PTR [ecx+0x33]
  41f868:	mov    edx,0xc9cb3221
  41f86d:	fild   WORD PTR [esi-0x6d2a74cc]
  41f873:	and    edi,ebp
  41f875:	ja     0x41f82c
  41f877:	aas    
  41f878:	push   ss
  41f879:	(bad)  
  41f87a:	adc    BYTE PTR ds:0x99cd57ce,al
  41f880:	cmp    bh,cl
  41f882:	and    edx,DWORD PTR [esi-0x26]
  41f885:	add    eax,0x36968e94
  41f88a:	ss add eax,0x24cf67cf
  41f890:	popf   
  41f891:	outs   dx,BYTE PTR ds:[esi]
  41f892:	adc    BYTE PTR [edi+0x57],cl
  41f895:	ret    
  41f896:	popa   
  41f897:	(bad)  
  41f898:	out    0xd1,eax
  41f89a:	cmp    al,0x3f
  41f89c:	retf   0x688e
  41f89f:	sbb    al,0x4a
  41f8a1:	xor    BYTE PTR [ebx-0x46e1cd8d],ah
  41f8a7:	dec    eax
  41f8a8:	imul   edi,DWORD PTR [ecx+ecx*1],0x29
  41f8ac:	jg     0x41f8d0
  41f8ae:	jns    0x41f920
  41f8b0:	push   eax
  41f8b1:	and    ebp,DWORD PTR [ecx+0x21eead83]
  41f8b7:	jb     0x41f92b
  41f8b9:	push   0x8532043d
  41f8be:	xor    ebx,esp
  41f8c0:	pop    edi
  41f8c1:	lods   eax,DWORD PTR ds:[esi]
  41f8c2:	bswap  esp
  41f8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8c5:	push   ebx
  41f8c6:	sub    BYTE PTR [edi-0x5a],0xf7
  41f8ca:	xchg   edx,eax
  41f8cb:	jae    0x41f89e
  41f8cd:	stc    
  41f8ce:	sbb    dh,BYTE PTR [edx-0x30fa747f]
  41f8d4:	xor    ah,BYTE PTR [ebp-0x7a8c2875]
  41f8da:	mov    esi,DWORD PTR [ecx]
  41f8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8dd:	xchg   edx,eax
  41f8de:	lods   eax,DWORD PTR ds:[esi]
  41f8df:	std    
  41f8e0:	pop    esi
  41f8e1:	xor    al,0x66
  41f8e3:	ret    0xba3c
  41f8e6:	fldcw  WORD PTR [ecx+ecx*8]
  41f8e9:	jg     0x41f906
  41f8eb:	outs   dx,DWORD PTR ds:[esi]
  41f8ec:	les    edi,FWORD PTR [edi+0x42]
  41f8ef:	mov    ebx,0xf69c906c
  41f8f4:	pop    es
  41f8f5:	bnd jo 0x41f8d2
  41f8f8:	inc    edi
  41f8f9:	(bad)
  41f8fc:	aas    
  41f8fd:	std    
  41f8fe:	push   0x2140348
  41f903:	enter  0x66f9,0x68
  41f907:	jmp    0x41f889
  41f909:	ja     0x41f988
  41f90b:	int    0x6
  41f90d:	add    esi,DWORD PTR [ebx+0x7aa7b565]
  41f913:	ins    BYTE PTR es:[edi],dx
  41f914:	push   es
  41f915:	mov    ds:0x57088f60,eax
  41f91a:	jae    0x41f96b
  41f91c:	dec    ebx
  41f91d:	gs pusha 
  41f91f:	clc    
  41f920:	add    BYTE PTR [esi],0x2e
  41f923:	push   es
  41f924:	or     esi,DWORD PTR [eax]
  41f926:	(bad)  
  41f928:	sbb    DWORD PTR [ecx+0x2d0c9249],edx
  41f92e:	cmp    BYTE PTR [esi-0x4096f099],dh
  41f934:	xor    DWORD PTR [edi],eax
  41f936:	repnz sbb eax,0x1f091f98
  41f93c:	cmc    
  41f93d:	or     DWORD PTR [edi+0x1d],esp
  41f940:	(bad)  
  41f942:	fs push ebp
  41f944:	xchg   edi,eax
  41f945:	mov    dh,0x32
  41f947:	xor    eax,0xa8d17b31
  41f94c:	mov    cl,0xe4
  41f94e:	cmp    al,0xdf
  41f950:	xchg   ebx,eax
  41f951:	mov    fs,WORD PTR [edx+edi*4]
  41f954:	retf   0xafa6
  41f957:	ds mov bh,0x5c
  41f95a:	jg     0x41f8f2
  41f95c:	lds    ebp,FWORD PTR fs:[ecx]
  41f95f:	sub    BYTE PTR [edi+0x59f82d67],bh
  41f965:	sub    eax,0x6886c7c2
  41f96a:	xor    esp,DWORD PTR [esi]
  41f96c:	repz mov ebx,0xdf3c034c
  41f972:	cmp    dl,BYTE PTR [eax+0x7b]
  41f975:	fcom   DWORD PTR [edi]
  41f977:	(bad)  
  41f978:	into   
  41f979:	fwait
  41f97a:	xchg   esi,eax
  41f97b:	enter  0xcdbe,0x16
  41f97f:	push   esi
  41f980:	ret    
  41f981:	ror    BYTE PTR [esi+0x1],cl
  41f984:	mov    al,0x8d
  41f986:	retf   
  41f987:	scas   eax,DWORD PTR es:[edi]
  41f988:	jb     0x41f9e6
  41f98a:	mov    ebp,0x137e66f8
  41f98f:	pop    eax
  41f990:	fsub   QWORD PTR [ecx+ecx*8]
  41f993:	add    al,BYTE PTR [ebp-0x66350c9c]
  41f999:	push   esi
  41f99a:	mov    al,0x1d
  41f99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f99d:	loopne 0x41f9c2
  41f99f:	mov    ecx,0xb7916ec3
  41f9a4:	out    dx,al
  41f9a5:	sub    ecx,DWORD PTR ss:[ebp-0x79a61c26]
  41f9ac:	mov    ah,BYTE PTR [eax]
  41f9ae:	and    DWORD PTR [ecx-0x46c2321e],ebp
  41f9b4:	mov    bh,0x7f
  41f9b6:	lea    esp,[edx-0x4d98e2ba]
  41f9bc:	dec    ebp
  41f9bd:	popf   
  41f9be:	sub    BYTE PTR [ebx+ecx*4-0x75],cl
  41f9c2:	and    BYTE PTR [ecx],ah
  41f9c4:	dec    edx
  41f9c5:	or     eax,0x3f7d3ef4
  41f9ca:	fs int3 
  41f9cc:	sub    eax,DWORD PTR [ecx]
  41f9ce:	mov    BYTE PTR [esi+0x7f1b440b],al
  41f9d4:	in     al,0x83
  41f9d6:	dec    ecx
  41f9d7:	add    ebp,edx
  41f9d9:	repnz fidivr WORD PTR [ebx-0x3b5bb53c]
  41f9e0:	retf   
  41f9e1:	shl    BYTE PTR [edi-0xc],cl
  41f9e4:	cmp    DWORD PTR ds:0x8255094a,ebp
  41f9ea:	retf   
  41f9eb:	push   eax
  41f9ec:	lock sahf 
  41f9ee:	or     BYTE PTR [ecx-0x423dd020],ch
  41f9f4:	(bad)  
  41f9f5:	stos   DWORD PTR es:[edi],eax
  41f9f6:	fistp  DWORD PTR [ebp+0x60]
  41f9f9:	fdiv   DWORD PTR [eax+0x5137b50b]
  41f9ff:	in     al,0xdb
  41fa01:	sbb    al,BYTE PTR [edx]
  41fa03:	cld    
  41fa04:	lds    edi,FWORD PTR [ebp+0x27]
  41fa07:	retf   
  41fa08:	mul    esi
  41fa0a:	pop    esp
  41fa0b:	data16 fstp QWORD PTR [ebx+0x39]
  41fa0f:	imul   edx,DWORD PTR [edi-0x68cab4b7],0x64
  41fa16:	sbb    al,0x72
  41fa18:	jnp    0x41fa12
  41fa1a:	and    al,0x26
  41fa1c:	pop    eax
  41fa1d:	out    dx,al
  41fa1e:	out    dx,eax
  41fa1f:	push   0x45
  41fa21:	pop    ss
  41fa22:	call   0x5d0dcf7a
  41fa27:	xor    dl,dl
  41fa29:	push   0xf374db43
  41fa2e:	xor    al,bl
  41fa30:	stos   DWORD PTR es:[edi],eax
  41fa31:	sbb    eax,0x3b948fea
  41fa36:	movsx  edi,cl
  41fa39:	sbb    eax,0x27df76b6
  41fa3e:	aam    0xad
  41fa40:	pushf  
  41fa41:	cmp    dl,0x38
  41fa44:	push   0xffffffc3
  41fa46:	popa   
  41fa47:	adc    DWORD PTR [ecx],esi
  41fa49:	sub    eax,0x7824a9a7
  41fa4e:	jg     0x41f9f2
  41fa50:	jnp    0x41fa16
  41fa52:	sub    BYTE PTR [ebp-0x3004cf51],0x0
  41fa59:	bound  edx,QWORD PTR ds:0x72871ab4
  41fa5f:	cmp    DWORD PTR [ebx],0x5e05f370
  41fa65:	mov    edx,ebp
  41fa67:	fstp   QWORD PTR [edi+edi*1-0x60707e4c]
  41fa6e:	push   eax
  41fa6f:	mov    gs,WORD PTR [edx-0x32b4e57]
  41fa75:	jg     0x41fae1
  41fa77:	xchg   ebp,eax
  41fa78:	or     BYTE PTR [edi+esi*8],ah
  41fa7b:	in     al,dx
  41fa7c:	idiv   bh
  41fa7e:	aam    0xc
  41fa80:	repz mov dl,0x5d
  41fa83:	repz jbe 0x41faf6
  41fa86:	icebp  
  41fa87:	(bad)  
  41fa88:	sub    eax,0x6a28880c
  41fa8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa8e:	(bad)
  41fa92:	push   ebp
  41fa93:	pop    ebp
  41fa94:	mov    gs,WORD PTR [ecx]
  41fa96:	jmp    0x41fb13
  41fa98:	push   edx
  41fa99:	nop    DWORD PTR [ebp+0x2e]
  41fa9d:	ins    DWORD PTR es:[edi],dx
  41fa9e:	cli    
  41fa9f:	repz jmp 0x41fa95
  41faa2:	mov    cl,al
  41faa4:	pop    esp
  41faa5:	pop    edi
  41faa6:	xor    BYTE PTR [edi-0x73],bh
  41faa9:	mov    bl,0x9b
  41faab:	daa    
  41faac:	je     0x41fada
  41faae:	mov    ah,0xb1
  41fab0:	loope  0x41faae
  41fab2:	adc    DWORD PTR [ecx-0x1c],esp
  41fab5:	sbb    bl,bh
  41fab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab8:	pop    es
  41fab9:	xor    BYTE PTR [edx],0x41
  41fabc:	pop    es
  41fabd:	fstp   QWORD PTR [esi+eax*8]
  41fac0:	sti    
  41fac1:	fist   DWORD PTR [esi]
  41fac3:	shr    BYTE PTR [ecx+0x36],1
  41fac6:	mov    al,ds:0x34865ec7
  41facb:	loope  0x41fb19
  41facd:	ds xor al,0x8
  41fad0:	jb     0x41faf8
  41fad2:	js     0x41fb39
  41fad4:	dec    esp
  41fad5:	push   0xffffffa4
  41fad7:	(bad)  
  41fad8:	push   ss
  41fad9:	xchg   esi,eax
  41fada:	in     al,dx
  41fadb:	loop   0x41fb52
  41fadd:	retf   
  41fade:	cli    
  41fadf:	dec    esp
  41fae0:	lock (bad) 
  41fae2:	leave  
  41fae3:	inc    eax
  41fae4:	push   0xffffff88
  41fae6:	or     eax,0x7ca0cc42
  41faeb:	not    bh
  41faed:	sbb    eax,0xc9e5d776
  41faf2:	xchg   edx,eax
  41faf3:	xchg   bh,bh
  41faf5:	cdq    
  41faf6:	sbb    al,0x56
  41faf8:	mov    dl,0xe8
  41fafa:	scas   eax,DWORD PTR es:[edi]
  41fafb:	mov    esi,0xfddf686b
  41fb00:	jle    0x41faae
  41fb02:	dec    esp
  41fb03:	add    DWORD PTR [esi-0xe2f999f],edx
  41fb09:	xor    al,0x9a
  41fb0b:	push   es
  41fb0c:	js     0x41faa6
  41fb0e:	sbb    DWORD PTR [ebx-0x254dca77],0xfffffff2
  41fb15:	out    0x34,eax
  41fb17:	ret    
  41fb18:	dec    esi
  41fb19:	mov    dh,0x7b
  41fb1b:	call   0x89e7869
  41fb20:	add    al,0x25
  41fb22:	cdq    
  41fb23:	fwait
  41fb24:	loopne 0x41fb9e
  41fb26:	inc    ecx
  41fb27:	call   0xf3c4:0xc37d7cec
  41fb2e:	push   ebp
  41fb2f:	popf   
  41fb30:	push   edi
  41fb31:	mov    al,ds:0x1cbc7ce0
  41fb36:	or     eax,0x71652dd5
  41fb3b:	dec    BYTE PTR [edi-0x57]
  41fb3e:	sbb    al,0xce
  41fb41:	stc    
  41fb42:	pop    eax
  41fb43:	pop    esi
  41fb44:	or     ch,bh
  41fb46:	xor    BYTE PTR [esp+esi*1+0x5b],ah
  41fb4a:	ror    DWORD PTR [edi+0x4c],1
  41fb4d:	push   ebx
  41fb4e:	scas   eax,DWORD PTR es:[edi]
  41fb4f:	aaa    
  41fb50:	or     DWORD PTR [ebx+0x2],eax
  41fb53:	push   es
  41fb54:	jg     0x41fb22
  41fb56:	mov    al,ds:0x23dd2b9d
  41fb5b:	adc    al,BYTE PTR [edx-0x5c]
  41fb5e:	call   0x329b792c
  41fb63:	cmp    al,0xfe
  41fb65:	jmp    0xa6789523
  41fb6a:	(bad)  
  41fb6b:	cwde   
  41fb6c:	adc    al,0xac
  41fb6e:	mov    al,ds:0xe723237d
  41fb73:	mov    ebx,0xc85f3b83
  41fb78:	sahf   
  41fb79:	ja     0x41fb52
  41fb7b:	jne    0x41fb63
  41fb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb7f:	ins    DWORD PTR es:[edi],dx
  41fb80:	cmp    ah,BYTE PTR [esi-0x77]
  41fb83:	jo     0x41fb66
  41fb85:	jmp    0x9556:0x36b517ec
  41fb8c:	cmp    edi,DWORD PTR [ecx+edx*1+0x8e015dd]
  41fb93:	rol    DWORD PTR [edi],0x1c
  41fb96:	test   eax,0x7badbba6
  41fb9b:	popf   
  41fb9c:	cld    
  41fb9d:	pop    ss
  41fb9e:	ficom  DWORD PTR [ecx]
  41fba0:	enter  0x8853,0x5b
  41fba4:	pusha  
  41fba5:	mov    ebp,0x8f3ab775
  41fbaa:	xlat   BYTE PTR ds:[ebx]
  41fbab:	or     BYTE PTR [edi],0x4a
  41fbae:	stc    
  41fbaf:	rcl    al,1
  41fbb1:	add    eax,DWORD PTR [eax]
  41fbb3:	sub    ecx,esi
  41fbb5:	xchg   DWORD PTR [ebp-0x254a430f],edi
  41fbbb:	fs stos DWORD PTR es:[di],eax
  41fbbe:	test   DWORD PTR [esi-0x2e],0xa333150a
  41fbc5:	inc    ebx
  41fbc6:	sub    eax,0x51cc0633
  41fbcb:	hlt    
  41fbcc:	jo     0x41fba2
  41fbce:	adc    eax,0x94f5a807
  41fbd3:	adc    al,0xdf
  41fbd5:	xor    al,0x2b
  41fbd7:	sbb    dl,BYTE PTR [esi+0x528eb9e4]
  41fbdd:	add    al,bl
  41fbdf:	xor    al,cl
  41fbe1:	mov    ecx,DWORD PTR [esp+ebx*1+0x72]
  41fbe5:	je     0x41fbb1
  41fbe7:	stos   DWORD PTR es:[edi],eax
  41fbe8:	push   esp
  41fbe9:	inc    esi
  41fbea:	mov    ebx,DWORD PTR [edx+0x40e91cd3]
  41fbf0:	add    eax,0xc387bd67
  41fbf5:	ror    BYTE PTR [eax],cl
  41fbf7:	mul    DWORD PTR [esi]
  41fbf9:	mov    ah,0x70
  41fbfb:	mov    eax,ds:0xebd58928
  41fc00:	jno    0x41fbe0
  41fc02:	cdq    
  41fc03:	mov    fs,WORD PTR [ebx+0x55]
  41fc06:	jl     0x41fbc5
  41fc08:	inc    eax
  41fc09:	push   0x20
  41fc0b:	test   al,0xf2
  41fc0d:	(bad)  
  41fc0e:	mov    ds:0x857bd27e,al
  41fc13:	push   0x534d2e60
  41fc18:	inc    esi
  41fc19:	push   edi
  41fc1a:	daa    
  41fc1b:	mov    BYTE PTR [ecx-0x2295e3ee],cl
  41fc21:	add    bh,BYTE PTR [eax-0x15]
  41fc24:	sbb    dl,0xfd
  41fc27:	dec    edi
  41fc28:	xchg   ebp,eax
  41fc29:	push   edx
  41fc2a:	ret    
  41fc2b:	jecxz  0x41fc90
  41fc2d:	inc    eax
  41fc2e:	retf   
  41fc2f:	sub    bl,ah
  41fc31:	cmp    eax,0xf5a52b5b
  41fc36:	(bad)  
  41fc37:	fst    DWORD PTR [ebx-0x1b576679]
  41fc3d:	lods   eax,DWORD PTR ds:[esi]
  41fc3e:	push   edx
  41fc3f:	add    al,BYTE PTR [edx+ebx*1]
  41fc42:	and    esi,DWORD PTR [esi]
  41fc44:	mov    bl,0x79
  41fc46:	or     esi,DWORD PTR [edx+0x30c4b679]
  41fc4c:	jg     0x41fc4c
  41fc4e:	in     al,dx
  41fc4f:	inc    ecx
  41fc50:	and    eax,DWORD PTR [ebx]
  41fc52:	out    0x8,eax
  41fc54:	and    DWORD PTR [edi],0xffffffa5
  41fc57:	cld    
  41fc58:	adc    edi,ebp
  41fc5a:	pop    eax
  41fc5b:	pop    ss
  41fc5c:	jo     0x41fbe0
  41fc5e:	pop    ebx
  41fc5f:	sub    eax,0x9e24f6c1
  41fc64:	xchg   BYTE PTR [edx+0x1d],cl
  41fc67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc68:	and    DWORD PTR [esi+0x72],edi
  41fc6b:	lahf   
  41fc6c:	sub    DWORD PTR [edx],ebp
  41fc6e:	and    al,BYTE PTR ds:0x2ca01fc5
  41fc74:	and    ebx,ecx
  41fc76:	sahf   
  41fc77:	aas    
  41fc78:	aaa    
  41fc79:	ss push es
  41fc7b:	in     eax,dx
  41fc7c:	out    dx,al
  41fc7d:	mov    eax,0x2f2b8d81
  41fc82:	addr16 dec ebx
  41fc84:	xor    al,0x90
  41fc86:	das    
  41fc87:	xchg   ebp,eax
  41fc88:	mov    fs,eax
  41fc8a:	push   esp
  41fc8b:	in     eax,dx
  41fc8c:	adc    al,0x98
  41fc8e:	xchg   esp,eax
  41fc8f:	jl     0x41fc19
  41fc91:	xchg   BYTE PTR [ecx+0x35841fb],ah
  41fc97:	hlt    
  41fc98:	push   ds
  41fc99:	outs   dx,BYTE PTR ds:[esi]
  41fc9a:	sti    
  41fc9b:	retf   
  41fc9c:	jo     0x41fce0
  41fc9e:	mov    bh,0x9f
  41fca0:	push   0x7f
  41fca2:	and    eax,edx
  41fca4:	shr    WORD PTR [ebx-0x62],0xb8
  41fca9:	ficomp DWORD PTR [edx-0x68]
  41fcac:	mov    eax,0x7fe0fba2
  41fcb1:	push   0xffffffce
  41fcb3:	test   BYTE PTR [edx+0x7b2e81d4],ch
  41fcb9:	dec    ecx
  41fcba:	push   esp
  41fcbb:	jle    0x41fcb4
  41fcbd:	mov    dl,0x82
  41fcbf:	jl     0x41fcb4
  41fcc1:	mov    ecx,0xe436b837
  41fcc6:	stc    
  41fcc7:	xchg   BYTE PTR ds:0x76577037,bl
  41fccd:	xor    DWORD PTR [esi-0x1c176e52],edi
  41fcd3:	into   
  41fcd4:	in     al,0x6b
  41fcd6:	inc    edi
  41fcd7:	push   ecx
  41fcd8:	les    ebp,FWORD PTR [esi+0x3c]
  41fcdb:	pushf  
  41fcdc:	xchg   ebp,eax
  41fcdd:	mov    bl,0xa3
  41fcdf:	adc    dl,cl
  41fce1:	jmp    0x11409118
  41fce6:	gs enter 0x862,0x84
  41fceb:	and    eax,0x44dd58b2
  41fcf0:	add    ebx,ebx
  41fcf2:	ins    DWORD PTR es:[edi],dx
  41fcf3:	jne    0x41fcce
  41fcf5:	arpl   cx,ax
  41fcf7:	shr    BYTE PTR [edx],0x7e
  41fcfa:	icebp  
  41fcfb:	pop    eax
  41fcfc:	mov    bh,0x19
  41fcfe:	fimul  DWORD PTR [edi+0x4d]
  41fd01:	add    al,0x11
  41fd03:	rcr    DWORD PTR [eax+0x16],1
  41fd06:	test   eax,0x579e1eb5
  41fd0b:	fwait
  41fd0c:	dec    edi
  41fd0d:	inc    ecx
  41fd0e:	inc    edi
  41fd0f:	mov    ds:0x6947ac23,eax
  41fd14:	int    0x1
  41fd16:	fsub   DWORD PTR [ebx+esi*1]
  41fd19:	sbb    eax,0xf7d3aeef
  41fd1e:	push   eax
  41fd1f:	stos   DWORD PTR es:[edi],eax
  41fd20:	nop
  41fd21:	cdq    
  41fd22:	cmp    cl,BYTE PTR [ebx+ecx*2]
  41fd25:	test   DWORD PTR [edi+edx*1-0x8a40ab3],edx
  41fd2c:	push   es
  41fd2d:	adc    eax,0x83921954
  41fd32:	mov    eax,0xf0bbb460
  41fd37:	mov    ebx,0x2f2731ad
  41fd3c:	mov    ah,cl
  41fd3e:	icebp  
  41fd3f:	fistp  DWORD PTR [eax+0xc558f20]
  41fd45:	adc    eax,0x8afb49b3
  41fd4a:	xchg   esp,eax
  41fd4b:	loop   0x41fdcb
  41fd4d:	xlat   BYTE PTR ds:[ebx]
  41fd4e:	add    eax,0x508f6ca1
  41fd53:	xchg   esi,eax
  41fd54:	dec    edi
  41fd55:	xchg   edi,eax
  41fd56:	aam    0x1c
  41fd58:	ret    0x146f
  41fd5b:	or     BYTE PTR [edi+0x400bdd7f],al
  41fd61:	mov    ebx,DWORD PTR [ebp+eiz*4+0x2f]
  41fd65:	sub    ecx,DWORD PTR [edi+esi*1]
  41fd68:	stos   DWORD PTR es:[edi],eax
  41fd69:	mov    BYTE PTR [ebp+esi*4+0x725e61b5],dh
  41fd70:	pop    esi
  41fd71:	mov    ebx,ecx
  41fd73:	or     BYTE PTR [esi],dh
  41fd75:	add    esi,edi
  41fd77:	imul   ebx,DWORD PTR [ebx-0x5bae05d5],0xffffff82
  41fd7e:	mov    DWORD PTR [ecx],edx
  41fd80:	mov    dl,0xe4
  41fd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd83:	jge    0x41fdd8
  41fd85:	iret   
  41fd86:	inc    esp
  41fd87:	mov    edx,0x98b29859
  41fd8c:	mov    ds:0x2d3b67c7,al
  41fd91:	mov    ch,0x6a
  41fd93:	push   ss
  41fd94:	pop    ss
  41fd95:	inc    ecx
  41fd96:	test   BYTE PTR [ecx],dh
  41fd98:	mov    eax,ds:0x9a7801b8
  41fd9d:	push   ds
  41fd9e:	pop    ecx
  41fd9f:	das    
  41fda0:	fist   WORD PTR [edx-0x25]
  41fda3:	retf   
  41fda4:	mov    bh,0x52
  41fda6:	add    ebx,DWORD PTR [esi+edx*4-0x1e01f677]
  41fdad:	cs jmp 0x41fd52
  41fdb0:	leave  
  41fdb1:	jns    0x41fdca
  41fdb3:	inc    ebp
  41fdb4:	out    dx,al
  41fdb5:	loopne 0x41fd79
  41fdb7:	int3   
  41fdb8:	sub    eax,0xe9d0e6bc
  41fdbd:	call   DWORD PTR [esi-0x24]
  41fdc0:	(bad)  
  41fdc1:	retf   
  41fdc2:	ins    BYTE PTR es:[edi],dx
  41fdc3:	retf   
  41fdc4:	clc    
  41fdc5:	cmp    DWORD PTR [edx+0x4b5ffd7a],edx
  41fdcb:	mov    ch,0xc2
  41fdcd:	mov    ss,WORD PTR ds:0x5c788445
  41fdd3:	push   ebp
  41fdd4:	lahf   
  41fdd5:	pop    ds
  41fdd6:	out    0xb,al
  41fdd8:	repnz mov ah,0xa9
  41fddb:	jbe    0x41fdc1
  41fddd:	popf   
  41fdde:	mov    eax,0x8c64dc82
  41fde3:	lds    esp,FWORD PTR [ecx-0x4e]
  41fde6:	outs   dx,BYTE PTR ds:[esi]
  41fde7:	das    
  41fde8:	and    DWORD PTR [ecx+ecx*4-0x75454279],ecx
  41fdef:	sub    edx,ebp
  41fdf1:	cmp    BYTE PTR [eax-0x2e8cef46],bl
  41fdf7:	clc    
  41fdf8:	repnz (bad) 
  41fdfa:	stos   DWORD PTR es:[edi],eax
  41fdfb:	(bad)  
  41fdfc:	pusha  
  41fdfd:	pop    edi
  41fdfe:	mov    edx,0x96989b2e
  41fe03:	je     0x41fe2d
  41fe05:	push   es
  41fe06:	(bad)  
  41fe07:	xchg   esp,eax
  41fe08:	fwait
  41fe09:	xchg   edi,eax
  41fe0a:	mov    cl,0xe
  41fe0c:	cli    
  41fe0d:	arpl   WORD PTR [ebp-0x36],si
  41fe10:	stos   BYTE PTR es:[edi],al
  41fe11:	push   0xffffffd8
  41fe13:	xor    DWORD PTR [eax+0x19a40cec],ebx
  41fe19:	or     al,0xb8
  41fe1b:	in     al,dx
  41fe1c:	adc    eax,edi
  41fe1e:	das    
  41fe1f:	jo     0x41fe2e
  41fe21:	cs int 0x64
  41fe24:	push   es
  41fe25:	adc    al,0xa7
  41fe27:	ja     0x41fe32
  41fe29:	and    al,0x3f
  41fe2b:	dec    ecx
  41fe2c:	stos   BYTE PTR es:[edi],al
  41fe2d:	add    al,0x7d
  41fe2f:	sbb    dl,BYTE PTR [edx+0x63]
  41fe32:	pop    ebx
  41fe33:	jno    0x41fddb
  41fe35:	daa    
  41fe36:	inc    esi
  41fe37:	xlat   BYTE PTR ds:[ebx]
  41fe38:	inc    edi
  41fe39:	iret   
  41fe3a:	test   eax,0xae2eb31d
  41fe3f:	or     al,0x3
  41fe41:	cwde   
  41fe42:	sub    eax,0x244c11c7
  41fe47:	lock add ah,ch
  41fe4a:	add    ah,dl
  41fe4c:	sar    BYTE PTR [eax-0x2156663e],cl
  41fe52:	mov    al,ds:0x8de5e8a2
  41fe57:	sub    ecx,DWORD PTR [eax+esi*4+0x4a]
  41fe5b:	mov    ebp,0xfa811f6a
  41fe60:	popf   
  41fe61:	and    eax,0x8a2a2f9a
  41fe66:	ds jmp 0x4f9ca1aa
  41fe6c:	mov    ebp,ebp
  41fe6e:	aad    0x56
  41fe70:	cld    
  41fe71:	mov    edi,0xa3a7813d
  41fe76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe77:	dec    esi
  41fe78:	and    edi,eax
  41fe7a:	sbb    cl,BYTE PTR [edi+0x3ef2d12a]
  41fe80:	jle    0x41fe9b
  41fe82:	adc    al,0xf5
  41fe84:	pop    ebx
  41fe85:	iret   
  41fe86:	(bad)  [esi]
  41fe88:	sub    eax,0xec23da7f
  41fe8d:	rol    BYTE PTR [edi-0x7e],1
  41fe90:	in     al,dx
  41fe91:	dec    BYTE PTR [edi+edx*8+0x6e4690d5]
  41fe98:	ja     0x41fe1a
  41fe9a:	stos   BYTE PTR es:[edi],al
  41fe9b:	ret    
  41fe9c:	xchg   edx,eax
  41fe9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe9e:	mov    esi,0x6a4e374b
  41fea3:	cld    
  41fea4:	or     al,0x75
  41fea6:	add    eax,0xd4416301
  41feab:	sahf   
  41feac:	pop    ds
  41fead:	cmp    al,0x4b
  41feaf:	ret    0x78f9
  41feb2:	jb     0x41fe64
  41feb4:	inc    edi
  41feb5:	pop    es
  41feb6:	ret    
  41feb7:	clc    
  41feb8:	aad    0x33
  41feba:	xor    BYTE PTR [eax-0x13],ch
  41febd:	(bad)  
  41febe:	inc    esi
  41febf:	jl     0x41fe56
  41fec1:	xchg   edx,eax
  41fec2:	pop    esp
  41fec3:	lock aad 0x8a
  41fec6:	(bad)  
  41fec7:	mov    dh,0xce
  41fec9:	jp     0x41fedd
  41fecb:	and    ebp,DWORD PTR [ecx-0x38]
  41fece:	js     0x41ff4e
  41fed0:	mov    ds:0xe300f7e0,eax
  41fed5:	mov    al,0x2d
  41fed7:	or     BYTE PTR [ecx+0x2a],0x60
  41fedb:	scas   al,BYTE PTR es:[edi]
  41fedc:	cdq    
  41fedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fede:	nop
  41fedf:	addr16 loope 0x41fed1
  41fee2:	mov    ch,BYTE PTR [edx+0x1b]
  41fee5:	xchg   edx,eax
  41fee6:	and    BYTE PTR [eax],bl
  41fee8:	pop    eax
  41fee9:	aad    0xb3
  41feeb:	mov    edi,edi
  41feed:	or     BYTE PTR [esi-0x74380787],ch
  41fef3:	addr16 mov eax,ds:0xf18e
  41fef7:	jp     0x41ff0a
  41fef9:	sub    al,0x3
  41fefb:	pop    ss
  41fefc:	inc    edi
  41fefd:	lods   eax,DWORD PTR ds:[esi]
  41fefe:	cld    
  41feff:	xor    dh,cl
  41ff01:	add    DWORD PTR [edx-0x43],ebp
  41ff04:	jnp    0x41feef
  41ff06:	lock call 0x1ea0:0x597c8cd6
  41ff0e:	cli    
  41ff0f:	rcr    BYTE PTR [eax-0x4c68c4e2],0x82
  41ff16:	jl     0x41fecf
  41ff18:	inc    edi
  41ff19:	dec    edi
  41ff1a:	jmp    DWORD PTR [esi+0x4b]
  41ff1d:	sbb    cl,bh
  41ff1f:	in     al,dx
  41ff20:	(bad)  
  41ff21:	push   eax
  41ff22:	repnz not DWORD PTR [eax]
  41ff25:	(bad)
  41ff29:	mov    DWORD PTR [edx+0x6fb86433],edx
  41ff2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff30:	xchg   BYTE PTR [ebx+0x5d10b4b0],dl
  41ff36:	mov    dh,0x6e
  41ff38:	shr    dh,1
  41ff3a:	push   edx
  41ff3b:	call   0xcd5c:0xd414a3d4
  41ff42:	ss mov ebx,0x3199f56f
  41ff48:	lods   eax,DWORD PTR ds:[esi]
  41ff49:	das    
  41ff4a:	inc    eax
  41ff4b:	shr    BYTE PTR ds:0x807fc70c,1
  41ff51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff52:	mov    ch,0x1a
  41ff54:	(bad)  
  41ff55:	mov    ecx,0xf1202b1d
  41ff5a:	or     DWORD PTR [ebx+0x3cab674c],edi
  41ff60:	ror    BYTE PTR [esi+0x5f803ff7],0xbb
  41ff67:	dec    eax
  41ff68:	popf   
  41ff69:	cmp    eax,0x1c6eb
  41ff6e:	xchg   ecx,esi
  41ff70:	xor    eax,ebx
  41ff72:	push   0xffffff9e
  41ff74:	pop    ebp
  41ff75:	push   esi
  41ff76:	mov    edi,0xeccb8dd6
  41ff7b:	cwde   
  41ff7c:	sub    DWORD PTR [edi],esi
  41ff7e:	sti    
  41ff7f:	test   DWORD PTR [esi+0x65a506bd],edx
  41ff85:	imul   ecx,DWORD PTR [edx-0x75],0xd3c611df
  41ff8c:	jo     0x41ff2f
  41ff8e:	retf   
  41ff8f:	(bad)
  41ff94:	xchg   ebp,eax
  41ff95:	xlat   BYTE PTR ds:[ebx]
  41ff96:	inc    ebx
  41ff97:	or     edi,esp
  41ff99:	mov    ecx,0x8919035e
  41ff9e:	jno    0x41ffce
  41ffa0:	pop    es
  41ffa1:	push   esi
  41ffa2:	pop    ds
  41ffa3:	inc    ebx
  41ffa4:	inc    esi
  41ffa5:	imul   ebx,DWORD PTR [esi-0x517d627f],0xffffff81
  41ffac:	jg     0x41fff4
  41ffae:	mov    al,ds:0x1740ae65
  41ffb3:	inc    edi
  41ffb4:	lock jmp 0xc06e:0x3b6c8178
  41ffbc:	inc    eax
  41ffbd:	test   BYTE PTR ds:0x164939f1,0xa3
  41ffc4:	jle    0x41ffef
  41ffc6:	mov    bl,0x37
  41ffc8:	mov    DWORD PTR [eax-0x6e],edi
  41ffcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffcc:	xor    bl,BYTE PTR [ebx-0x7b]
  41ffcf:	(bad)
  41ffd3:	xor    cl,BYTE PTR [edx-0x3d]
  41ffd6:	ds in  eax,0x48
  41ffd9:	ins    BYTE PTR es:[edi],dx
  41ffda:	int    0x7b
  41ffdc:	gs inc esi
  41ffde:	mov    edi,0x4bd649b3
  41ffe3:	xchg   edx,eax
  41ffe4:	pushf  
  41ffe5:	(bad)  
  41ffe6:	pop    ebx
  41ffe7:	adc    edi,DWORD PTR [ebx+ebx*2]
  41ffea:	cdq    
  41ffeb:	pop    esi
  41ffec:	cmp    DWORD PTR [eax],esp
  41ffee:	int3   
  41ffef:	pop    ss
  41fff0:	mov    esi,0x3ddf5a4b
  41fff5:	ins    DWORD PTR es:[edi],dx
  41fff6:	mov    edx,0x3cf905
  41fffb:	mov    al,0xf2
  41fffd:	pop    ebp
  41fffe:	lods   al,BYTE PTR gs:[esi]
  420000:	arpl   WORD PTR [edx],sp
  420002:	or     cl,BYTE PTR [edi-0x72]
  420005:	jl     0x420076
  420007:	dec    DWORD PTR ds:0xd50c1c0d
  42000d:	fnsave [edi-0x27f8240e]
  420013:	mov    dh,0x31
  420015:	(bad)  [esi+0x7e0500c0]
  42001b:	je     0x420095
  42001d:	jp     0x420062
  42001f:	pop    ebp
  420020:	mov    bl,0x25
  420022:	jmp    0xc26bb8d4
  420027:	pop    DWORD PTR [edx]
  420029:	retf   
  42002a:	fisub  DWORD PTR [eax+0x15]
  42002d:	jne    0x41ffd7
  42002f:	cmp    cl,BYTE PTR [eax-0x2b6f7e79]
  420035:	mov    WORD PTR [edi-0xe457af8],?
  42003b:	fwait
  42003c:	addr16 push ecx
  42003e:	int    0xa2
  420040:	mov    cl,0xbb
  420042:	(bad)  
  420043:	sbb    DWORD PTR [ebx+esi*2+0x67],ecx
  420047:	into   
  420048:	push   ebx
  420049:	pop    edi
  42004a:	jno    0x41fffb
  42004c:	cmp    edx,esp
  42004e:	mov    BYTE PTR [eax],bh
  420050:	inc    esi
  420051:	lahf   
  420052:	data16 jno 0x42009e
  420055:	pop    ss
  420056:	shr    DWORD PTR [ebp+0x3b],1
  420059:	ins    DWORD PTR es:[edi],dx
  42005a:	lock push edx
  42005c:	call   0xd076:0x555a491b
  420063:	nop
  420064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420065:	es out dx,al
  420067:	call   0x1814:0xa0086285
  42006e:	repnz xchg ebx,eax
  420070:	clc    
  420071:	cmp    BYTE PTR [eax+0x77],cl
  420074:	xchg   esp,eax
  420075:	adc    eax,0x478f525f
  42007a:	pop    ebx
  42007b:	cld    
  42007c:	and    al,0x20
  42007e:	jae    0x420050
  420080:	and    BYTE PTR [ebx],al
  420082:	pop    ebx
  420083:	push   cs
  420084:	xrelease mov BYTE PTR [ecx+0x7b],dh
  420088:	pop    es
  420089:	push   ebp
  42008a:	sbb    ah,BYTE PTR [ebx+ebx*4-0x7d83c732]
  420091:	or     eax,0x92b7fdf8
  420096:	or     eax,0xf256fa17
  42009b:	jp     0x4200ce
  42009d:	cs aas 
  42009f:	ins    DWORD PTR es:[edi],dx
  4200a0:	and    ch,BYTE PTR [ebp+0x0]
  4200a3:	push   ebx
  4200a4:	mov    ebx,0x99995208
  4200a9:	mov    cl,BYTE PTR [eax]
  4200ab:	cmp    eax,0x93e7a065
  4200b0:	or     bh,bl
  4200b2:	movzx  edx,al
  4200b5:	pop    esp
  4200b7:	stos   DWORD PTR es:[edi],eax
  4200b8:	sbb    ebx,DWORD PTR [edi+0x62c41b67]
  4200be:	rcl    al,1
  4200c0:	mov    dl,0x2a
  4200c2:	sub    edi,ebx
  4200c4:	mov    cl,BYTE PTR [eax+0x6bac36f3]
  4200ca:	popa   
  4200cb:	pop    esi
  4200cc:	repnz mov dl,0xf2
  4200cf:	hlt    
  4200d0:	adc    DWORD PTR [edi-0x19754945],esi
  4200d6:	xchg   esp,eax
  4200d7:	or     al,0x46
  4200d9:	leave  
  4200da:	mov    ah,0x16
  4200dc:	lahf   
  4200dd:	ins    BYTE PTR es:[edi],dx
  4200de:	mul    DWORD PTR [edi-0x5c93d9a8]
  4200e4:	dec    edi
  4200e5:	jmp    0xa99efa1
  4200ea:	fdiv   QWORD PTR [eax+0x7f745d31]
  4200f0:	cmp    dl,BYTE PTR [ebx-0x4288e576]
  4200f6:	push   edx
  4200f7:	data16 (bad) 
  4200f9:	xchg   esi,eax
  4200fa:	adc    al,0xb3
  4200fc:	jecxz  0x420146
  4200fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200ff:	sahf   
  420100:	out    dx,al
  420101:	push   ss
  420102:	pop    es
  420103:	xchg   edx,eax
  420104:	jno    0x4200fc
  420106:	xor    ch,dh
  420108:	inc    ebx
  420109:	push   ss
  42010a:	inc    ebx
  42010b:	jle    0x4200f3
  42010d:	arpl   WORD PTR [ebp+0x745932d3],bx
  420113:	es push ss
  420115:	xchg   ebp,eax
  420116:	jecxz  0x42016f
  420118:	in     al,0x44
  42011a:	pop    ecx
  42011b:	and    eax,0x360faeba
  420120:	js     0x4200c5
  420122:	jb     0x4200fd
  420124:	push   edi
  420125:	mov    ebx,0x86026b08
  42012a:	push   ss
  42012b:	add    DWORD PTR [ecx],esp
  42012d:	lock leave 
  42012f:	arpl   WORD PTR [esi],sp
  420131:	dec    esi
  420132:	pop    edx
  420133:	cli    
  420134:	ss push ecx
  420136:	int    0x80
  420138:	aas    
  420139:	pop    ss
  42013a:	add    eax,0xf38c2d6a
  42013f:	lock jecxz 0x4201ad
  420142:	ins    BYTE PTR es:[edi],dx
  420143:	mov    esi,0x9667a3ae
  420148:	ins    BYTE PTR es:[edi],dx
  420149:	cs push ebx
  42014b:	push   ds
  42014c:	mov    BYTE PTR [edi+0x357a794a],cl
  420152:	pop    eax
  420153:	scas   eax,DWORD PTR es:[edi]
  420154:	call   0xf3058f0f
  420159:	retf   0x16d2
  42015c:	sub    ebp,DWORD PTR [edi+edx*8+0xfede016]
  420163:	xchg   esp,eax
  420164:	ror    BYTE PTR [ecx-0xa],1
  420167:	pop    ss
  420168:	xchg   BYTE PTR [edi+0x2],ah
  42016b:	cmc    
  42016c:	lock xor BYTE PTR gs:[ebx+ebp*2],bl
  420171:	dec    edi
  420172:	xchg   BYTE PTR [edi+0x77],cl
  420175:	pop    edi
  420176:	mul    al
  420178:	push   esp
  420179:	xor    bh,BYTE PTR [edi-0x54099fd4]
  42017f:	aad    0xd
  420181:	lea    esp,[ebx+0x4a156cb5]
  420187:	or     eax,0xe7b46a6d
  42018c:	mov    dl,0x2
  42018e:	hlt    
  42018f:	fst    DWORD PTR [esi+0x6e]
  420192:	stos   DWORD PTR es:[edi],eax
  420193:	loopne 0x4201c2
  420195:	cs in  al,0xe6
  420198:	add    eax,0xc680a068
  42019d:	push   edi
  42019e:	out    0xbf,eax
  4201a0:	xor    al,0xd3
  4201a2:	sbb    DWORD PTR [ebx+edx*1],ecx
  4201a5:	sbb    eax,0x8f176706
  4201aa:	pop    edi
  4201ab:	inc    esi
  4201ac:	sub    eax,0x22333f7a
  4201b1:	mov    es,WORD PTR [edx]
  4201b3:	pop    DWORD PTR [ebp-0x377a3e04]
  4201b9:	les    edi,FWORD PTR [esi+0x32]
  4201bc:	sub    edi,DWORD PTR [eax-0x1b]
  4201bf:	and    eax,0xef762f72
  4201c4:	loop   0x420245
  4201c6:	sub    DWORD PTR [ecx],eax
  4201c8:	mov    esp,0x68cb7af0
  4201cd:	enter  0x9eaf,0xee
  4201d1:	imul   edx,DWORD PTR [ecx],0xffffffd4
  4201d4:	xchg   edx,eax
  4201d5:	addr16 xchg ebp,eax
  4201d7:	fbstp  TBYTE PTR [eax]
  4201d9:	(bad)  
  4201da:	ins    DWORD PTR es:[edi],dx
  4201db:	mov    al,ds:0x5bde8862
  4201e0:	and    ebx,0xe0a7b8d1
  4201e6:	pop    ecx
  4201e7:	mov    dl,0x90
  4201e9:	loopne 0x42021e
  4201eb:	mov    DWORD PTR [ebp-0x51],ebp
  4201ee:	(bad)  
  4201ef:	or     eax,0xf42cf466
  4201f4:	test   BYTE PTR [ecx-0x53],bl
  4201f7:	jge    0x420210
  4201f9:	rcr    BYTE PTR [ebx-0x2ea3d04a],0x76
  420200:	adc    al,0x35
  420202:	and    dh,BYTE PTR [eax+0x67]
  420205:	pop    ss
  420206:	mov    esi,0xf11e0e52
  42020b:	loope  0x420283
  42020d:	stos   BYTE PTR es:[edi],al
  42020e:	es shl edi,cl
  420211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420212:	inc    esi
  420213:	pop    esi
  420214:	aad    0x25
  420216:	sub    ah,bh
  420218:	pop    ebp
  420219:	dec    ecx
  42021a:	jmp    0x420215
  42021c:	mov    ch,0x42
  42021e:	jae    0x4201cf
  420220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420221:	push   0x7862b282
  420226:	pop    ss
  420227:	sbb    ebx,DWORD PTR [esp+ecx*2-0x42b8808e]
  42022e:	and    DWORD PTR [ebx],ebx
  420230:	repnz movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  420233:	mov    bx,0xf0cc
  420237:	sub    al,0xd6
  420239:	dec    ebp
  42023a:	dec    esp
  42023b:	fs mov ecx,0xc84a03c2
  420241:	fld    QWORD PTR [ecx]
  420243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420244:	cmp    al,0x88
  420246:	add    BYTE PTR [eax+0x2f3f4145],0x91
  42024d:	mov    ah,0xaa
  42024f:	mov    ebx,0x47d0d7c2
  420254:	jne    0x42020a
  420256:	inc    esi
  420257:	nop
  420258:	sub    edi,0x0
  42025b:	dec    esi
  42025c:	sbb    BYTE PTR [edx],bl
  42025e:	call   0xc533:0x12ab7651
  420265:	jnp    0x4202a4
  420267:	pop    ebx
  420268:	dec    edx
  420269:	jnp    0x42026f
  42026b:	cmp    eax,0x59961cab
  420270:	add    al,0xc0
  420272:	push   cs
  420273:	inc    edx
  420274:	sbb    ebp,DWORD PTR [edx]
  420276:	loopne 0x4202e8
  420278:	xchg   ebp,eax
  420279:	push   0x53
  42027b:	lock mov eax,0x7241075
  420281:	and    BYTE PTR cs:[ebx+esi*8+0x3e],cl
  420286:	(bad)  
  420287:	scas   eax,DWORD PTR es:[edi]
  420288:	xchg   edx,eax
  420289:	inc    edx
  42028a:	stos   BYTE PTR es:[edi],al
  42028b:	retf   
  42028c:	mov    ch,0xd8
  42028e:	push   ebp
  42028f:	imul   ebx,DWORD PTR [edx],0xfc6bed45
  420295:	addr16 stc 
  420297:	scas   eax,DWORD PTR es:[edi]
  420298:	mov    bl,0x7f
  42029a:	mov    ebp,0x532967e3
  42029f:	arpl   WORD PTR [esi],bp
  4202a1:	xchg   edi,eax
  4202a2:	pop    ebx
  4202a3:	xor    ebx,DWORD PTR [esi-0x2b040f17]
  4202a9:	ins    DWORD PTR es:[edi],dx
  4202aa:	mov    al,0xe6
  4202ac:	loopne 0x420280
  4202ae:	into   
  4202af:	xor    al,0x7b
  4202b1:	dec    esp
  4202b2:	push   ecx
  4202b3:	fs cmc 
  4202b5:	pop    esi
  4202b6:	pop    esi
  4202b7:	aam    0xd7
  4202b9:	and    BYTE PTR [edx-0x1305a4c4],cl
  4202bf:	pop    esi
  4202c0:	xor    al,0x17
  4202c2:	sub    eax,0x96beac10
  4202c7:	jnp    0x420251
  4202c9:	inc    esi
  4202ca:	or     DWORD PTR [ebp+0x75d56486],esi
  4202d0:	mov    ch,0xd6
  4202d2:	jnp    0x4202c3
  4202d4:	fild   QWORD PTR [esi+0x7af4b4aa]
  4202da:	stos   BYTE PTR es:[edi],al
  4202db:	sbb    esi,ebp
  4202dd:	out    dx,al
  4202de:	mov    ds:0x7f904def,eax
  4202e3:	push   esp
  4202e4:	and    ch,BYTE PTR [ebx+0x2b]
  4202e7:	add    DWORD PTR [esi-0x50],ecx
  4202ea:	pop    ebx
  4202eb:	xor    DWORD PTR [ecx+0x4c53583e],ebx
  4202f1:	push   edx
  4202f2:	int3   
  4202f3:	mov    WORD PTR [ebx],?
  4202f5:	loopne 0x4202f8
  4202f7:	cdq    
  4202f8:	sar    eax,0xd
  4202fb:	scas   eax,DWORD PTR es:[edi]
  4202fc:	or     al,BYTE PTR [ecx]
  4202fe:	into   
  4202ff:	xor    al,0xd3
  420301:	fnsave [edi-0x6c2bb60c]
  420307:	dec    ebp
  420308:	int    0xe5
  42030a:	mov    edi,0xfc2f848
  42030f:	in     al,0x70
  420311:	sahf   
  420312:	sub    cl,dl
  420314:	xor    DWORD PTR [ecx],ebp
  420316:	adc    eax,0x90461efb
  42031b:	xlat   BYTE PTR ds:[ebx]
  42031c:	popa   
  42031d:	or     ebp,DWORD PTR [ecx+0x27]
  420320:	xchg   esi,eax
  420321:	mov    eax,0x9b951e72
  420326:	lods   eax,DWORD PTR ds:[esi]
  420327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420328:	lods   eax,DWORD PTR ds:[esi]
  420329:	sahf   
  42032a:	mov    bh,0xe1
  42032c:	sti    
  42032d:	push   ebx
  42032e:	lods   al,BYTE PTR ds:[esi]
  42032f:	mov    ds:0x19f7ff26,al
  420334:	xchg   ebx,eax
  420335:	fsub   DWORD PTR [edx+ecx*4]
  420338:	idiv   edi
  42033a:	scas   eax,DWORD PTR es:[edi]
  42033b:	je     0x420349
  42033d:	idiv   esi
  42033f:	dec    ebp
  420340:	lods   al,BYTE PTR ds:[esi]
  420341:	cwde   
  420342:	adc    eax,DWORD PTR [eax]
  420344:	shl    DWORD PTR [ecx+0x68],0x32
  420348:	mov    cl,0x98
  42034a:	jb     0x4202de
  42034c:	jl     0x4203ca
  42034e:	and    ecx,edi
  420350:	inc    ebx
  420351:	xor    eax,0x8de9ad63
  420356:	pop    ds
  420357:	adc    al,0xf7
  420359:	sub    edx,DWORD PTR [edx]
  42035b:	icebp  
  42035c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42035d:	neg    BYTE PTR [ecx+0xc]
  420360:	mov    ebp,0x54fdefe6
  420365:	xlat   BYTE PTR ds:[ebx]
  420366:	and    DWORD PTR ds:0xdb2b01a3,eax
  42036c:	data16 sti 
  42036e:	mov    bh,0xa4
  420370:	(bad)  
  420371:	retf   
  420372:	in     eax,0xb0
  420374:	mov    edi,0x44bfa707
  420379:	inc    esp
  42037a:	in     eax,0x3b
  42037c:	in     eax,dx
  42037d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42037e:	pop    ebp
  42037f:	mov    eax,ds:0xbcf5b407
  420384:	jmp    0x51a:0x9ca1bb5
  42038b:	dec    esp
  42038c:	dec    edx
  42038d:	mov    cl,0x28
  42038f:	in     eax,0x43
  420391:	cmp    al,0x27
  420393:	cmp    edi,ecx
  420395:	cmp    edi,DWORD PTR [eax]
  420397:	add    eax,0xa788b612
  42039c:	or     BYTE PTR [esi+0x51],al
  42039f:	daa    
  4203a0:	popa   
  4203a1:	and    DWORD PTR [edx-0x2e00ccb1],0x5aaaa951
  4203ab:	dec    ebx
  4203ac:	sub    ebx,DWORD PTR [eax+0x18]
  4203af:	cmc    
  4203b0:	shr    BYTE PTR [esi],0x6c
  4203b3:	(bad)  
  4203b5:	cli    
  4203b6:	jge    0x4203fc
  4203b8:	out    0xb2,al
  4203ba:	fistp  QWORD PTR [ecx-0x2c967e35]
  4203c0:	cmp    DWORD PTR [ebx+0x7ac48a9c],ebp
  4203c6:	dec    esi
  4203c7:	pop    edx
  4203c8:	retf   0x7373
  4203cb:	mov    al,ds:0x4c7b3ae7
  4203d0:	ss addr16 lahf 
  4203d3:	push   es
  4203d4:	and    esi,edx
  4203d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203d7:	mov    eax,0xd175f47d
  4203dc:	xchg   edi,eax
  4203dd:	ret    
  4203de:	ins    BYTE PTR es:[edi],dx
  4203df:	neg    DWORD PTR [esi+eax*8]
  4203e2:	aam    0x23
  4203e4:	pop    edi
  4203e5:	push   ecx
  4203e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e7:	pop    ebp
  4203e8:	ds mov bl,0x16
  4203eb:	imul   edx,DWORD PTR [ecx-0x17],0xe5ba4525
  4203f2:	mov    ebp,0x3253edfd
  4203f7:	cmp    bl,BYTE PTR [esi+ecx*4+0x3f]
  4203fb:	mov    esp,DWORD PTR [ebp-0x74]
  4203fe:	jmp    FWORD PTR [ecx+0x57]
  420401:	sub    eax,0x982f3434
  420406:	xchg   esi,eax
  420407:	nop
  420408:	out    dx,eax
  420409:	cmp    dh,BYTE PTR [ebx]
  42040b:	mov    ch,0x65
  42040d:	cld    
  42040e:	pop    ss
  42040f:	add    al,0x4a
  420411:	add    al,0xb8
  420413:	dec    edi
  420414:	inc    eax
  420415:	mov    dh,0x8e
  420417:	pop    ds
  420418:	jb     0x420482
  42041a:	fisubr DWORD PTR [ecx+0x62]
  42041d:	cli    
  42041e:	push   ss
  42041f:	sub    ah,0xa7
  420422:	mov    ah,0x5
  420424:	or     eax,0xb8a7773c
  420429:	xor    edx,ebx
  42042b:	add    DWORD PTR [ecx],edi
  42042d:	dec    edx
  42042e:	sub    esp,DWORD PTR [ebx]
  420430:	ret    
  420431:	pop    ebx
  420432:	add    ecx,esp
  420434:	sbb    al,0x42
  420436:	out    dx,eax
  420437:	jae    0x4203bb
  420439:	ins    DWORD PTR es:[edi],dx
  42043a:	mov    ah,0xa9
  42043c:	int3   
  42043d:	retf   0x5190
  420440:	inc    esp
  420441:	jo     0x42049f
  420443:	push   esp
  420444:	iret   
  420445:	dec    edi
  420446:	pop    ds
  420447:	mov    al,0xa0
  420449:	jle    0x4203e7
  42044b:	push   0xbf322d94
  420450:	adc    DWORD PTR [ecx+edx*4+0x68628d22],ebx
  420457:	jp     0x420418
  420459:	int    0xce
  42045b:	adc    al,bl
  42045d:	mov    eax,ds:0x4a09bef1
  420462:	dec    ebp
  420463:	push   ds
  420464:	mov    ebx,0x62d7855e
  420469:	fwait
  42046a:	imul   edi,DWORD PTR [eax*4-0x6e475d9e],0x32cd1f73
  420475:	ret    0x3034
  420478:	mul    BYTE PTR ds:0x285c1c55
  42047f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  420481:	pop    esi
  420482:	(bad)  gs:[esi]
  420485:	cld    
  420486:	sub    bl,BYTE PTR [ebp+0x755cba97]
  42048c:	jb     0x42049f
  42048e:	cmp    al,0x91
  420490:	and    DWORD PTR [ecx],ebp
  420492:	cli    
  420493:	mov    ebp,0x28ae4f5d
  420498:	fiadd  WORD PTR [edx]
  42049a:	iret   
  42049b:	cmp    DWORD PTR [eax+0x152d038f],ebp
  4204a1:	xchg   ecx,eax
  4204a2:	inc    edx
  4204a3:	jae    0x420456
  4204a5:	mov    dl,0x49
  4204a7:	jns    0x42050b
  4204a9:	xchg   DWORD PTR [esi-0x18],esi
  4204ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ad:	rcl    DWORD PTR [ebx+0xe],1
  4204b0:	xlat   BYTE PTR ds:[ebx]
  4204b1:	ins    BYTE PTR es:[edi],dx
  4204b2:	dec    esi
  4204b3:	mov    dl,0x9a
  4204b5:	stc    
  4204b6:	inc    esi
  4204b7:	stc    
  4204b8:	sub    BYTE PTR [ebp-0x66],0xc9
  4204bc:	daa    
  4204bd:	aaa    
  4204be:	(bad)  
  4204bf:	fiadd  DWORD PTR [ebx]
  4204c1:	xchg   edi,eax
  4204c2:	mov    esi,0x497dfb8
  4204c7:	fnstsw WORD PTR [esi-0x2aaa7f2a]
  4204cd:	pop    ss
  4204ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204cf:	outs   dx,DWORD PTR ds:[esi]
  4204d0:	lock aam 0xd6
  4204d3:	mov    esp,0xce96f42e
  4204d8:	jb     0x4204ff
  4204da:	xchg   ebp,eax
  4204db:	pop    ecx
  4204dc:	push   ss
  4204dd:	xor    edx,DWORD PTR [eax+0x35]
  4204e0:	aam    0x23
  4204e2:	push   es
  4204e3:	adc    ebx,eax
  4204e5:	dec    ebp
  4204e6:	leave  
  4204e7:	cli    
  4204e8:	stos   BYTE PTR es:[edi],al
  4204e9:	mov    ecx,0x2b6fec34
  4204ee:	jmp    0xc902:0xb3314d11
  4204f5:	ret    0x24e8
  4204f8:	icebp  
  4204f9:	out    0xef,eax
  4204fb:	or     ch,0x21
  4204fe:	nop
  4204ff:	xor    eax,0x4497fa22
  420504:	retf   0xc69e
  420507:	rcl    DWORD PTR [ecx-0x67],1
  42050a:	sar    esp,1
  42050c:	imul   ebx,DWORD PTR [ecx],0xffffffbc
  42050f:	(bad)  
  420510:	mov    ebx,0x10ceb84b
  420515:	outs   dx,DWORD PTR ds:[esi]
  420516:	push   0x305b4d99
  42051b:	jp     0x4204a4
  42051d:	push   esi
  42051e:	push   esp
  42051f:	xchg   ecx,eax
  420520:	stos   BYTE PTR es:[edi],al
  420521:	xor    DWORD PTR [ebp-0x24],ebx
  420524:	mov    esp,0x7c2f0e09
  420529:	scas   al,BYTE PTR es:[edi]
  42052a:	out    0x97,eax
  42052c:	xchg   ebp,eax
  42052d:	and    eax,DWORD PTR [ebx+0x398c4584]
  420533:	adc    eax,0x48e54966
  420538:	(bad)  
  420539:	or     bh,BYTE PTR [ecx+eiz*4-0x5089287a]
  420540:	je     0x4204ed
  420542:	(bad)  
  420543:	sti    
  420544:	aaa    
  420545:	mov    ds:0xe33976a2,eax
  42054a:	(bad)  [eax]
  42054c:	rcr    BYTE PTR [edx],1
  42054e:	bnd je 0x42053a
  420551:	dec    edi
  420552:	rol    DWORD PTR [ebx],cl
  420554:	cdq    
  420555:	repnz fisttp DWORD PTR [ebp+0x678e49]
  42055c:	pop    ds
  42055d:	sub    BYTE PTR [eax+0x43],bl
  420560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420561:	add    al,0x2f
  420563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420564:	ss leave 
  420566:	shl    BYTE PTR [esi+0x59],1
  420569:	mov    BYTE PTR [ebx+edx*2+0x28dc330d],dh
  420570:	and    DWORD PTR [edi],eax
  420572:	push   edi
  420573:	cld    
  420574:	jae    0x420529
  420576:	sbb    edi,esp
  420578:	push   ss
  420579:	shr    DWORD PTR [edx-0xcd050f9],0x22
  420580:	sub    eax,edx
  420582:	js     0x420586
  420584:	test   eax,0x2c69958d
  420589:	pop    eax
  42058a:	fimul  DWORD PTR [esi+0x5d]
  42058d:	in     al,0xa9
  42058f:	or     BYTE PTR [ebp-0x19],bh
  420592:	jl     0x420613
  420594:	iret   
  420595:	push   esi
  420596:	sub    al,0xbb
  420598:	jo     0x420611
  42059a:	cli    
  42059b:	xlat   BYTE PTR ds:[ebx]
  42059c:	pop    ebx
  42059d:	repnz dec ecx
  42059f:	mov    edi,0x8c7c75a9
  4205a4:	sub    ebp,0x38
  4205a7:	cmp    DWORD PTR [eax+eax*4+0x34d3d185],ecx
  4205ae:	and    eax,esi
  4205b0:	ret    
  4205b1:	es sahf 
  4205b3:	dec    BYTE PTR [edx]
  4205b5:	out    0x3d,eax
  4205b7:	scas   al,BYTE PTR es:[edi]
  4205b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205b9:	(bad)  
  4205ba:	jnp    0x42054c
  4205bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205bd:	and    DWORD PTR [ebx-0x108004b1],0xffffffef
  4205c4:	sub    BYTE PTR [esi],ch
  4205c6:	or     eax,0xdb785afd
  4205cb:	and    ebx,esi
  4205cd:	retf   0x9d7a
  4205d0:	test   bh,ah
  4205d2:	in     al,dx
  4205d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205d4:	xor    esi,DWORD PTR [ebp+0x68]
  4205d7:	or     BYTE PTR [esi-0x51],ah
  4205da:	xchg   DWORD PTR [eax],ebp
  4205dc:	fwait
  4205dd:	xor    al,BYTE PTR [ebx-0x6194fe60]
  4205e3:	inc    edx
  4205e4:	call   0x5b609f26
  4205e9:	dec    esp
  4205ea:	jnp    0x420646
  4205ec:	addr16 pop ecx
  4205ee:	aaa    
  4205ef:	push   ebx
  4205f0:	dec    edx
  4205f1:	outs   dx,BYTE PTR ds:[esi]
  4205f2:	dec    esi
  4205f3:	(bad)  
  4205f5:	pop    ebx
  4205f6:	out    dx,al
  4205f7:	xchg   edx,eax
  4205f8:	(bad)  
  4205f9:	(bad)  [esi]
  4205fb:	aam    0x8f
  4205fd:	mov    esi,0x38a9b496
  420602:	jnp    0x420609
  420604:	leave  
  420605:	or     ch,BYTE PTR [edx-0x345908a0]
  42060b:	fdivr  DWORD PTR [ecx-0xcf55c72]
  420611:	xor    BYTE PTR [ebx+0x7d],al
  420614:	jbe    0x4205c7
  420616:	(bad)
  420619:	mov    ah,0xdb
  42061b:	pop    edi
  42061c:	addr16 or eax,0x1e937e8b
  420622:	fs pop ds
  420624:	mov    ebx,0x9941e96c
  420629:	std    
  42062a:	outs   dx,BYTE PTR ds:[esi]
  42062b:	mov    dl,BYTE PTR ss:[ebp+0xd6c4685]
  420632:	icebp  
  420633:	mov    DWORD PTR [ebp-0x2e7c56ef],edx
  420639:	js     0x420640
  42063b:	mov    bh,BYTE PTR [eax-0x32]
  42063e:	mov    ecx,0xf378be33
  420643:	sti    
  420644:	xchg   edx,eax
  420645:	sub    BYTE PTR [ecx],0x90
  420648:	je     0x420619
  42064a:	sub    DWORD PTR [edx],0xbd12d544
  420650:	add    eax,0x895b9360
  420655:	in     al,dx
  420656:	add    ah,BYTE PTR [eax+0x23]
  420659:	jne    0x4206af
  42065b:	mov    cl,0xe2
  42065d:	pop    ebx
  42065e:	mov    ah,0xcb
  420660:	sbb    al,0x38
  420662:	lahf   
  420663:	fisttp DWORD PTR [edx]
  420665:	inc    ecx
  420666:	pop    edi
  420667:	pop    ebp
  420668:	hlt    
  420669:	sbb    eax,0x1990af46
  42066e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42066f:	sub    BYTE PTR [eax-0x66765464],0xbb
  420676:	pop    ecx
  420677:	hlt    
  420678:	inc    ecx
  420679:	popa   
  42067a:	mov    eax,ds:0xdc2416d9
  42067f:	mov    dh,0x13
  420681:	mov    ds:0x39e5084a,al
  420687:	sahf   
  420688:	leave  
  420689:	sti    
  42068a:	iret   
  42068b:	fimul  WORD PTR [edx]
  42068d:	(bad)  
  42068e:	or     bh,bl
  420690:	xchg   edx,eax
  420691:	shr    DWORD PTR [ebx+0x67cbc48],1
  420697:	and    ah,bh
  420699:	mov    dl,0xce
  42069b:	push   cs
  42069c:	add    al,BYTE PTR [edi+ebp*1]
  42069f:	jns    0x4206ef
  4206a1:	sbb    al,0x8c
  4206a3:	fdivr  QWORD PTR [ebx+edx*2+0x370488b1]
  4206aa:	push   edx
  4206ab:	add    eax,0xdf89508c
  4206b0:	mov    edx,0xb1c0b057
  4206b5:	arpl   WORD PTR ds:0xabdbaee7,bp
  4206bb:	fwait
  4206bc:	or     eax,0x83d97095
  4206c1:	cld    
  4206c2:	lods   al,BYTE PTR ds:[esi]
  4206c3:	aaa    
  4206c4:	es cmp eax,0x5104a3d4
  4206ca:	or     eax,0xb9fb1919
  4206d0:	push   cs
  4206d1:	push   ecx
  4206d2:	mov    ebp,0x3105e4b4
  4206d7:	sbb    BYTE PTR [ecx-0x3e],0xfb
  4206db:	and    ah,BYTE PTR [esi]
  4206dd:	xor    bl,BYTE PTR [edi+0x5f2d245b]
  4206e3:	push   cs
  4206e4:	sbb    BYTE PTR [bx+di+0x31],bh
  4206e8:	cdq    
  4206e9:	popf   
  4206ea:	or     al,0xe5
  4206ec:	xor    eax,DWORD PTR [ebx]
  4206ee:	int    0xcb
  4206f0:	call   0x5d0b05f5
  4206f5:	bound  esi,QWORD PTR [edi-0x4fe6197e]
  4206fb:	cmp    cl,bl
  4206fd:	add    al,0xee
  4206ff:	push   ss
  420700:	cs (bad) 
  420703:	jecxz  0x420769
  420705:	or     bh,BYTE PTR [edx-0x24]
  420708:	fld    DWORD PTR [esi+0x5b]
  42070b:	push   es
  42070c:	call   0xb87587e8
  420711:	inc    esi
  420712:	mov    al,BYTE PTR [eax-0x57475044]
  420718:	retf   
  420719:	sub    BYTE PTR [edx],bh
  42071b:	(bad)  
  42071c:	xor    bh,BYTE PTR [ecx-0x6ecaa872]
  420722:	pop    es
  420723:	adc    eax,0xbb87fa95
  420728:	stc    
  420729:	scas   eax,DWORD PTR es:[edi]
  42072a:	cdq    
  42072b:	add    al,0xeb
  42072d:	pushf  
  42072e:	ficomp DWORD PTR [edx]
  420730:	sub    al,0xec
  420732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420733:	loop   0x420798
  420735:	pop    ds
  420736:	cmp    eax,0x303d7bed
  42073b:	add    esp,ebp
  42073d:	xchg   ah,dh
  42073f:	cmp    al,0x27
  420741:	xchg   BYTE PTR [edi],dl
  420743:	retf   0x5ccd
  420746:	mov    al,0x7a
  420748:	adc    dl,dh
  42074a:	or     bl,dh
  42074c:	sub    al,0xf7
  42074e:	or     ebp,DWORD PTR [ecx+0x7415d1ae]
  420754:	cwde   
  420755:	sbb    BYTE PTR [esi+0x7c],ch
  420758:	cli    
  420759:	mov    eax,0xe549125b
  42075e:	lds    esi,FWORD PTR [edx-0x28]
  420761:	push   edx
  420762:	add    ebx,edi
  420764:	popf   
  420765:	xchg   edx,eax
  420766:	sub    al,0x34
  420768:	or     eax,DWORD PTR [edi+0x1e87dd0b]
  42076e:	aam    0x8
  420770:	ins    DWORD PTR es:[edi],dx
  420771:	cwde   
  420772:	mov    ebp,0xffca20d1
  420777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420778:	mov    al,0x7
  42077a:	add    dh,ch
  42077c:	loop   0x420795
  42077e:	mov    ah,0x36
  420780:	mov    eax,ds:0xd457e64b
  420785:	sub    edi,DWORD PTR [ecx]
  420787:	mov    ah,0x10
  420789:	js     0x4207b9
  42078b:	cmp    DWORD PTR [esi],ebp
  42078d:	jmp    0x7427c1db
  420792:	and    eax,0xf93cc3b7
  420797:	or     eax,0x1a6f4635
  42079c:	xchg   edi,eax
  42079d:	xor    al,0x24
  42079f:	aam    0xc0
  4207a1:	ret    
  4207a2:	xor    esi,DWORD PTR [edi+edi*2-0x6b56279]
  4207a9:	std    
  4207aa:	sbb    cl,al
  4207ac:	and    eax,0xc37f0d4a
  4207b1:	mov    eax,ds:0xc1208cf3
  4207b6:	or     eax,0x51ac729a
  4207bb:	pop    ebx
  4207bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207bd:	push   ss
  4207be:	sub    ah,BYTE PTR [ebx+edx*2-0x53a9a77]
  4207c5:	mov    ah,0x59
  4207c7:	sub    bl,al
  4207c9:	push   esi
  4207ca:	cld    
  4207cb:	sbb    ecx,DWORD PTR [edx]
  4207cd:	or     BYTE PTR [edi],bh
  4207cf:	pushf  
  4207d0:	pop    edi
  4207d1:	fistp  WORD PTR [ecx-0x34]
  4207d4:	inc    esp
  4207d5:	jnp    0x420838
  4207d7:	mov    al,0xf8
  4207d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207da:	xchg   BYTE PTR ds:0x3ae25129,al
  4207e0:	popf   
  4207e1:	and    ebp,DWORD PTR [edx]
  4207e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e4:	push   ds
  4207e5:	mov    ds:0xc24afbc1,eax
  4207ea:	pop    ecx
  4207eb:	cmp    al,0xda
  4207ed:	fsub   QWORD PTR [ebp-0xa]
  4207f0:	(bad)  
  4207f1:	jnp    0x420846
  4207f3:	lods   eax,DWORD PTR ds:[esi]
  4207f4:	inc    eax
  4207f5:	push   cs
  4207f6:	adc    esp,DWORD PTR [edx+0x77]
  4207f9:	jb     0x420797
  4207fb:	imul   esi,DWORD PTR [esi+eax*1-0x5fa90f8d],0x35
  420803:	adc    edi,DWORD PTR [ebx-0x5d]
  420806:	sti    
  420807:	pop    edi
  420808:	xor    al,0xa0
  42080a:	or     ah,BYTE PTR [ebp+0x64]
  42080d:	imul   edx,ecx,0xd1446ae2
  420813:	neg    BYTE PTR [edx+edi*2+0x6]
  420817:	cli    
  420818:	xchg   edx,eax
  420819:	(bad)  
  42081a:	fcom   DWORD PTR [ecx]
  42081c:	fidiv  WORD PTR [ebx+0x56]
  42081f:	fst    QWORD PTR [eax+0x53926228]
  420825:	retf   
  420826:	out    0xcb,eax
  420828:	mov    ebp,0xa9925327
  42082d:	pop    esi
  42082e:	test   DWORD PTR [ebx-0x61a6899c],ecx
  420834:	pop    ebx
  420835:	or     al,0x6b
  420837:	call   0xb1c9:0xbf964128
  42083e:	aam    0xda
  420840:	fidiv  DWORD PTR [eax+0x5e]
  420843:	mov    es,ebp
  420845:	mov    bh,0x1f
  420847:	outs   dx,DWORD PTR ds:[esi]
  420848:	or     cl,BYTE PTR [ecx-0x4cc0b198]
  42084e:	jp     0x420844
  420850:	lods   al,BYTE PTR ds:[esi]
  420851:	mov    ch,0xe9
  420853:	mov    edx,0xb7f32bce
  420858:	mov    edx,0x2680538c
  42085d:	fldcw  WORD PTR [esi]
  42085f:	xchg   edx,eax
  420860:	lahf   
  420861:	push   ebx
  420862:	test   al,0x8
  420864:	out    dx,al
  420865:	jge    0x4208da
  420867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420868:	out    0xfc,eax
  42086a:	push   ecx
  42086b:	mov    ebp,0x3480c182
  420870:	push   0xab15a9a9
  420875:	lods   eax,DWORD PTR ds:[esi]
  420876:	add    eax,0xb6efc35b
  42087b:	js     0x420811
  42087d:	icebp  
  42087e:	xchg   esp,eax
  42087f:	pop    esp
  420880:	jecxz  0x4208ce
  420882:	jno    0x4208cd
  420884:	pop    ebp
  420885:	jecxz  0x420884
  420887:	mov    ebp,0x758a8430
  42088c:	outs   dx,BYTE PTR ds:[esi]
  42088d:	sub    eax,0x372b5bb
  420892:	xor    al,0xc0
  420894:	fiadd  DWORD PTR [ecx-0x4c]
  420897:	and    dh,al
  420899:	mov    DWORD PTR [edx-0x6f2e6b4d],ebp
  42089f:	add    eax,0xe54058f6
  4208a4:	stc    
  4208a5:	or     al,0x95
  4208a7:	inc    edi
  4208a8:	inc    edi
  4208a9:	mov    ebx,0x6da48e5a
  4208ae:	out    dx,eax
  4208af:	dec    edi
  4208b0:	jmp    0x58305032
  4208b5:	cmp    al,0xcd
  4208b7:	sub    BYTE PTR [ecx+eax*4],cl
  4208ba:	lock stos DWORD PTR es:[edi],eax
  4208bc:	sbb    ch,BYTE PTR [ecx]
  4208be:	repz add ecx,DWORD PTR [esp+eax*1+0x7]
  4208c3:	xchg   ecx,eax
  4208c4:	fimul  DWORD PTR [esi+0x7f6da7d4]
  4208ca:	(bad)  
  4208cb:	jbe    0x42084e
  4208cd:	push   0x837dbaef
  4208d2:	and    cl,ah
  4208d4:	popa   
  4208d5:	pop    es
  4208d6:	pop    edi
  4208d7:	dec    ebp
  4208d8:	mov    esi,0xe1c73f00
  4208dd:	cwde   
  4208de:	mov    ebp,DWORD PTR [ebp+0x172db49]
  4208e4:	cmp    cl,BYTE PTR [eax]
  4208e6:	mov    WORD PTR [edx+0x63],cs
  4208e9:	cli    
  4208ea:	add    DWORD PTR [edx],ebp
  4208ec:	popf   
  4208ed:	push   esp
  4208ee:	mov    ecx,0x1c958c1a
  4208f3:	dec    edx
  4208f4:	xor    al,0x16
  4208f6:	jmp    0x29a54a4c
  4208fb:	test   eax,0x7e36ff52
  420900:	mov    al,0x62
  420902:	fs mov ecx,0xae565b3a
  420908:	xor    ebp,esi
  42090a:	popf   
  42090b:	es xor eax,0xf33a0491
  420911:	imul   edi,DWORD PTR [ebx],0xffffffb7
  420914:	fsubr  DWORD PTR [eax]
  420916:	nop
  420917:	add    ebp,DWORD PTR [ebx-0x1b]
  42091a:	mov    ds:0xb09a3be9,al
  42091f:	mul    DWORD PTR [edi]
  420921:	add    al,0x34
  420923:	sub    esp,DWORD PTR [ecx-0x5d34ddca]
  420929:	cdq    
  42092a:	cmp    DWORD PTR [esi+0x9],esi
  42092d:	mov    ah,0x3a
  42092f:	in     eax,dx
  420930:	add    eax,0x54ad0652
  420935:	and    al,BYTE PTR [ebp+0x20cb5308]
  42093b:	iret   
  42093c:	xor    edi,DWORD PTR [ecx+0x4]
  42093f:	stos   BYTE PTR es:[edi],al
  420940:	retf   
  420941:	rcl    DWORD PTR [ecx-0x43],1
  420944:	jecxz  0x42095c
  420946:	cmp    eax,0x179e63eb
  42094b:	aad    0x66
  42094d:	mov    ebp,0x79c781aa
  420952:	and    eax,0x52b407dc
  420957:	sub    BYTE PTR [eax+0x1],bl
  42095a:	mov    ebp,0x917227a2
  42095f:	push   ebp
  420960:	or     BYTE PTR [ecx+esi*8],al
  420963:	(bad)  [ecx-0x4d51729f]
  420969:	(bad)  
  42096b:	push   ebp
  42096c:	xor    eax,0x8f586d3e
  420971:	cmp    BYTE PTR [esi-0x5c787fbe],bh
  420977:	int3   
  420978:	jo     0x42092c
  42097a:	inc    eax
  42097b:	xchg   ebp,eax
  42097c:	push   eax
  42097d:	jbe    0x420976
  42097f:	(bad)  
  420980:	and    DWORD PTR [ecx+edi*4-0x4436e743],ecx
  420987:	dec    ebp
  420988:	out    dx,eax
  420989:	mov    WORD PTR [edi],es
  42098b:	dec    ecx
  42098c:	add    eax,0x94dfe8a5
  420991:	inc    esp
  420992:	push   eax
  420993:	(bad)  
  420994:	jbe    0x420a00
  420996:	sti    
  420997:	imul   esi,DWORD PTR [edi+0x63],0xffffff92
  42099b:	clc    
  42099c:	scas   al,BYTE PTR es:[edi]
  42099d:	push   es
  42099e:	mov    ecx,esp
  4209a0:	xchg   DWORD PTR [edx-0x6e51f78c],esp
  4209a6:	aam    0x94
  4209a8:	cmp    al,0x26
  4209aa:	in     eax,0x84
  4209ac:	sub    eax,0x6323231f
  4209b1:	dec    edx
  4209b2:	xor    bl,BYTE PTR [ecx+0x45]
  4209b5:	xchg   ebp,eax
  4209b6:	cmc    
  4209b7:	sub    eax,DWORD PTR [edi+0x310719c0]
  4209bd:	ins    BYTE PTR es:[edi],dx
  4209be:	mov    ah,0x46
  4209c0:	aaa    
  4209c1:	popf   
  4209c2:	int3   
  4209c3:	sub    ecx,esi
  4209c5:	xor    BYTE PTR [edi+0x57],bl
  4209c8:	(bad)  
  4209c9:	das    
  4209ca:	mov    bh,0x43
  4209cc:	pop    esi
  4209cd:	into   
  4209ce:	mov    ah,0x47
  4209d0:	mov    al,ds:0xd4e5301f
  4209d5:	xor    esi,DWORD PTR [edi-0x32]
  4209d8:	dec    esi
  4209d9:	das    
  4209da:	fwait
  4209db:	jno    0x420a23
  4209dd:	test   DWORD PTR [ebx+0x74b8a6e3],ebx
  4209e3:	mov    cl,0xa6
  4209e5:	cmp    al,0x54
  4209e7:	dec    ebp
  4209e8:	pop    ebx
  4209e9:	mov    bh,0xc9
  4209eb:	leave  
  4209ec:	jmp    0x42098a
  4209ee:	ret    
  4209ef:	leave  
  4209f0:	mov    eax,0x6f04dbd8
  4209f5:	sbb    BYTE PTR [edx+esi*2+0xa3d20eb],0x80
  4209fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209fe:	mov    al,ds:0x82ee068f
  420a03:	icebp  
  420a04:	add    eax,0x92881ada
  420a09:	(bad)
  420a0d:	jns    0x4209fd
  420a0f:	or     al,0xe0
  420a11:	call   0x82f4:0xd7eae37
  420a18:	inc    ebx
  420a19:	aaa    
  420a1a:	sbb    edx,DWORD PTR ds:0x92397b92
  420a20:	test   ebp,ecx
  420a22:	adc    dh,0x8d
  420a25:	sub    al,0x7b
  420a27:	leave  
  420a28:	loope  0x420a29
  420a2a:	mov    eax,0x5bae3284
  420a2f:	loopne 0x4209c8
  420a31:	pop    esp
  420a32:	fwait
  420a33:	mov    edi,0x34aa1825
  420a38:	mov    al,ds:0x78be6e79
  420a3d:	fwait
  420a3e:	sbb    BYTE PTR [ecx-0x1948189f],0x85
  420a45:	dec    ecx
  420a46:	push   edi
  420a47:	jno    0x420a50
  420a49:	int3   
  420a4a:	xlat   BYTE PTR ds:[ebx]
  420a4b:	jl     0x420ac8
  420a4d:	push   eax
  420a4e:	inc    edx
  420a4f:	add    al,BYTE PTR [edi+0x4062d30e]
  420a55:	cmp    DWORD PTR [eiz*2-0x39df6259],ebx
  420a5c:	mul    ch
  420a5e:	jp     0x4209fb
  420a60:	(bad)  
  420a61:	xlat   BYTE PTR ds:[ebx]
  420a62:	aad    0xad
  420a64:	sbb    al,0x78
  420a66:	inc    DWORD PTR [eax]
  420a68:	fld    DWORD PTR [ecx-0x15]
  420a6b:	inc    esi
  420a6c:	ror    esi,0xdd
  420a6f:	repz push ss
  420a71:	inc    edi
  420a72:	sahf   
  420a73:	sbb    al,0x43
  420a75:	addr16 nop
  420a77:	das    
  420a78:	les    ecx,FWORD PTR [edx]
  420a7a:	out    0x3d,eax
  420a7c:	pusha  
  420a7d:	int3   
  420a7e:	aad    0xd5
  420a80:	test   al,0x6c
  420a82:	xchg   edx,eax
  420a83:	imul   ebp,DWORD PTR [eax-0x6d],0x29dfaf9
  420a8a:	push   ds
  420a8b:	je     0x420a83
  420a8d:	sti    
  420a8e:	jl     0x420ade
  420a90:	xchg   BYTE PTR ds:0xd57e54d7,al
  420a96:	(bad)  
  420a97:	pop    ebp
  420a98:	xchg   esp,eax
  420a99:	mov    bl,0x54
  420a9b:	mov    bl,0xe2
  420a9d:	pop    ss
  420a9e:	dec    ebx
  420a9f:	scas   al,BYTE PTR es:[edi]
  420aa0:	fiadd  WORD PTR [ecx-0x4291d45e]
  420aa6:	push   esi
  420aa7:	mov    ebx,ecx
  420aa9:	pop    ebx
  420aaa:	fldcw  WORD PTR [eax+0xa62d814]
  420ab0:	les    ecx,FWORD PTR [edi]
  420ab2:	cmc    
  420ab3:	jle    0x420b26
  420ab5:	add    ch,BYTE PTR [edx]
  420ab7:	lock push esi
  420ab9:	into   
  420aba:	frstor [edx+0xaac1af3]
  420ac0:	mov    dl,0xaa
  420ac2:	pop    esi
  420ac3:	fcmovne st,st(5)
  420ac5:	mov    ds:0xfb8edb9d,eax
  420aca:	out    0x24,al
  420acc:	mov    ds:0x14f3a0f5,al
  420ad1:	sbb    al,0x9
  420ad3:	std    
  420ad4:	gs pop ds
  420ad6:	add    ebx,DWORD PTR [esp+ebx*2-0x54]
  420ada:	and    al,0xc6
  420adc:	pop    ecx
  420add:	and    al,0xfd
  420adf:	xchg   ebx,eax
  420ae0:	xlat   BYTE PTR ds:[ebx]
  420ae1:	sti    
  420ae2:	add    ch,cl
  420ae4:	or     dh,BYTE PTR [ecx]
  420ae6:	cmp    ch,BYTE PTR [ebx-0x744568b1]
  420aec:	mov    eax,0x234a125e
  420af1:	sar    BYTE PTR [ecx-0x24],cl
  420af4:	dec    eax
  420af5:	xor    ebx,esi
  420af7:	enter  0x8ab8,0x8f
  420afb:	push   edi
  420afc:	test   DWORD PTR [ecx-0x6df84fee],eax
  420b02:	imul   ebx,esi,0x2a
  420b05:	inc    esp
  420b06:	(bad)
  420b0a:	dec    esi
  420b0b:	sub    eax,DWORD PTR [eax-0x21a1ca5b]
  420b11:	mov    ds:0xa9aa4a9f,eax
  420b16:	sub    ecx,DWORD PTR [ebp+0x5b]
  420b19:	dec    edi
  420b1a:	sub    al,0x7f
  420b1c:	pop    esp
  420b1d:	or     bl,BYTE PTR [ecx+0x2122d484]
  420b23:	das    
  420b24:	mov    bh,0xa2
  420b26:	repnz mov ds:0x7bf4e78,eax
  420b2c:	jnp    0x420af4
  420b2e:	pop    edi
  420b2f:	int3   
  420b30:	or     al,0xae
  420b32:	ret    
  420b33:	mov    eax,0xafda7d1c
  420b38:	xor    dh,BYTE PTR [ebx]
  420b3a:	sub    bh,dh
  420b3c:	sub    BYTE PTR [ecx+0x59d83f10],bh
  420b42:	add    DWORD PTR [edi+0x7362792d],esp
  420b48:	ja     0x420bc5
  420b4a:	jmp    0x420aed
  420b4c:	fmul   QWORD PTR [esi]
  420b4e:	xor    esp,DWORD PTR [edi+0x5f]
  420b51:	xor    al,0x6f
  420b53:	cli    
  420b54:	mov    ebx,0x261290f
  420b59:	cmp    eax,0x54dd57b2
  420b5e:	or     BYTE PTR [eax],al
  420b60:	mov    ds,WORD PTR [ebp+0x4daef52d]
  420b66:	push   ebx
  420b67:	jae    0x420bde
  420b69:	cmp    DWORD PTR [ecx+0x3f5f7a6a],ebp
  420b6f:	pop    es
  420b70:	dec    ecx
  420b71:	jmp    0x420baa
  420b73:	std    
  420b74:	jo     0x420ba2
  420b76:	js     0x420bf1
  420b78:	xor    ah,BYTE PTR [ecx-0x61]
  420b7b:	scas   al,BYTE PTR es:[edi]
  420b7c:	mov    edx,0x68e45ede
  420b81:	aam    0xe2
  420b83:	mov    ah,0x9
  420b85:	inc    edi
  420b86:	xchg   BYTE PTR [edx],bl
  420b88:	jmp    0xdbdb:0x53cd4dc2
  420b8f:	xor    al,BYTE PTR [eax+edi*4+0x15]
  420b93:	ret    
  420b94:	jle    0x420bc0
  420b96:	pusha  
  420b97:	fs fs jp 0x420bbc
  420b9b:	hlt    
  420b9c:	mov    edi,0xad19a7ef
  420ba1:	cld    
  420ba2:	mov    bl,0xd7
  420ba4:	xchg   BYTE PTR [ebp+0x505ebd62],al
  420baa:	cmp    al,0x6b
  420bac:	cdq    
  420bad:	xor    eax,0x5ee1db1
  420bb2:	js     0x420bbc
  420bb4:	adc    esi,DWORD PTR [esi+0x74]
  420bb7:	int    0xeb
  420bb9:	mov    ah,BYTE PTR [ecx-0x36b2a9fb]
  420bbf:	or     al,0x66
  420bc1:	ins    BYTE PTR es:[edi],dx
  420bc2:	xor    bl,BYTE PTR ds:0x80cb3aad
  420bc8:	repz jnp 0x420b5f
  420bcb:	dec    ebx
  420bcc:	adc    BYTE PTR [esi],ah
  420bce:	inc    esp
  420bcf:	sbb    esi,DWORD PTR [eax+edx*2+0xc]
  420bd3:	mov    bh,0x5c
  420bd5:	jmp    0x420b8a
  420bd7:	pusha  
  420bd8:	fsub   st(7),st
  420bda:	test   DWORD PTR [ecx],ebp
  420bdc:	das    
  420bdd:	outs   dx,BYTE PTR ds:[esi]
  420bde:	mov    dh,0x8a
  420be0:	pop    ebp
  420be1:	fcmovb st,st(3)
  420be3:	cld    
  420be4:	fmulp  st(7),st
  420be6:	mov    bl,0x2c
  420be8:	daa    
  420be9:	lahf   
  420bea:	lahf   
  420beb:	cmp    ebx,DWORD PTR [eax-0x6374e709]
  420bf1:	jl     0x420b8e
  420bf3:	arpl   WORD PTR [esi-0x65],si
  420bf6:	(bad)  
  420bf7:	push   ebx
  420bf8:	jp     0x420c18
  420bfa:	xor    ah,ch
  420bfc:	cs jp  0x420bd5
  420bff:	and    BYTE PTR cs:[edi+0x25c96902],0xb6
  420c07:	sti    
  420c08:	out    dx,al
  420c09:	dec    ebp
  420c0a:	shl    BYTE PTR [edx-0x7e],0xdc
  420c0e:	(bad)  
  420c0f:	ins    DWORD PTR es:[edi],dx
  420c10:	mov    ebp,esi
  420c12:	pop    esp
  420c13:	or     BYTE PTR [ebx-0x4267e01c],ah
  420c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c1a:	mov    cl,cl
  420c1c:	jo     0x420c78
  420c1e:	arpl   WORD PTR [edi],bp
  420c20:	push   edx
  420c21:	std    
  420c22:	rol    BYTE PTR [eax],1
  420c24:	cmc    
  420c25:	call   DWORD PTR [ecx]
  420c27:	jb     0x420c78
  420c29:	xchg   edi,eax
  420c2a:	or     ecx,DWORD PTR [esi-0x4e]
  420c2d:	jmp    0xfd8f160b
  420c32:	push   es
  420c33:	add    eax,0xe42f6eba
  420c38:	sar    BYTE PTR [edi],1
  420c3a:	cmp    DWORD PTR [edx-0x3f],esi
  420c3d:	fisttp WORD PTR [eax+esi*2+0x6d968b19]
  420c44:	or     DWORD PTR [eax],0xffffffac
  420c47:	mov    ds:0xc87e47ca,eax
  420c4c:	pop    ss
  420c4d:	into   
  420c4e:	lods   eax,DWORD PTR ds:[esi]
  420c4f:	jp     0x420c87
  420c51:	rcl    DWORD PTR [edi-0x6a],1
  420c54:	sub    eax,0x9e2acc5b
  420c59:	push   esi
  420c5a:	dec    ecx
  420c5b:	adc    al,0xfb
  420c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c5e:	lods   eax,DWORD PTR ds:[esi]
  420c5f:	xchg   edx,eax
  420c60:	cmp    BYTE PTR [ecx+esi*8-0x31],al
  420c64:	mov    dh,0x0
  420c66:	pop    eax
  420c67:	and    dl,BYTE PTR [ebx-0xd0da47]
  420c6d:	jle    0x420bf1
  420c6f:	mov    esi,0xb03297b8
  420c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c75:	mov    cl,0x3b
  420c77:	adc    BYTE PTR ds:0xff4437d6,dh
  420c7d:	pop    eax
  420c7e:	and    eax,0xb1cac5d
  420c83:	sbb    BYTE PTR ds:0x8cf1aac,ch
  420c89:	push   ebp
  420c8a:	jecxz  0x420c83
  420c8c:	adc    edx,DWORD PTR [eax]
  420c8e:	fistp  DWORD PTR [eax*4+0x486e83de]
  420c95:	and    bl,0x44
  420c98:	jp     0x420cfd
  420c9a:	dec    edi
  420c9b:	inc    esp
  420c9c:	outs   dx,BYTE PTR ds:[esi]
  420c9d:	dec    edx
  420c9e:	xor    BYTE PTR [eax],dl
  420ca0:	inc    esi
  420ca1:	js     0x420c4a
  420ca3:	cmp    DWORD PTR [eax+eiz*2-0x54],eax
  420ca7:	push   ds
  420ca8:	pop    ss
  420ca9:	enter  0x29dd,0xf4
  420cad:	mov    esi,0xd04f80ab
  420cb2:	cmp    ecx,DWORD PTR [edi]
  420cb4:	xchg   edi,eax
  420cb5:	test   BYTE PTR [edx+0x401cade4],cl
  420cbb:	js     0x420cb0
  420cbd:	xor    dh,dl
  420cbf:	aam    0xa5
  420cc1:	sub    DWORD PTR [edi+0x55397f2d],esi
  420cc7:	sub    al,0xa0
  420cc9:	retf   
  420cca:	popa   
  420ccb:	mov    eax,0xc55b5f25
  420cd0:	pop    edi
  420cd1:	stc    
  420cd2:	gs in  al,0x7f
  420cd5:	cdq    
  420cd6:	and    DWORD PTR [ebx+0x3],0xffffffdf
  420cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cdb:	jge    0x420d10
  420cdd:	(bad)  
  420cde:	in     al,0x9f
  420ce0:	ja     0x420c98
  420ce2:	scas   al,BYTE PTR es:[edi]
  420ce3:	mov    ds:0x791e484,al
  420ce8:	add    BYTE PTR [esi],ah
  420cea:	mov    al,ds:0xe7315127
  420cef:	sub    DWORD PTR [edi-0x21],ecx
  420cf2:	xor    BYTE PTR [edx+0x3],bh
  420cf5:	nop
  420cf6:	daa    
  420cf7:	inc    esi
  420cf8:	mov    ?,WORD PTR [si]
  420cfb:	(bad)  
  420cfc:	std    
  420cfd:	mov    dl,dh
  420cff:	stos   DWORD PTR es:[edi],eax
  420d00:	stc    
  420d01:	pop    ebp
  420d02:	lea    edi,[eax+0x2d]
  420d05:	imul   ebp,DWORD PTR [edi-0x60582cce],0xbf76ae67
  420d0f:	mov    dh,0x15
  420d11:	ja     0x420d15
  420d13:	push   edx
  420d14:	sbb    DWORD PTR [edi],edx
  420d16:	and    al,0xdf
  420d18:	xor    DWORD PTR [ebx+0x37],esp
  420d1b:	test   eax,0xd234f707
  420d20:	adc    ecx,DWORD PTR [eax-0x6f]
  420d23:	mov    edi,0x4a12b9a5
  420d28:	dec    esi
  420d29:	lds    ebx,FWORD PTR [edx+0x64]
  420d2c:	inc    edx
  420d2d:	fs push edi
  420d2f:	sti    
  420d30:	inc    esp
  420d31:	sti    
  420d32:	ja     0x420d6a
  420d34:	mov    edx,0x14fa8358
  420d39:	pusha  
  420d3a:	rol    DWORD PTR [edi],1
  420d3c:	inc    esi
  420d3d:	mov    eax,0x7adfd8ae
  420d42:	mov    dh,0x6a
  420d44:	inc    ebp
  420d45:	fnsave [ebx]
  420d47:	mov    cl,BYTE PTR [edi+0x64a6289]
  420d4d:	jle    0x420d3f
  420d4f:	popf   
  420d50:	add    DWORD PTR [edi+eiz*8-0x3e],0x2ee5d02c
  420d58:	shl    BYTE PTR [eax+0x1810c406],0xb4
  420d5f:	pop    edx
  420d60:	sbb    al,0x8d
  420d62:	repnz sub BYTE PTR ds:[eax+0x7512c5f1],al
  420d6a:	dec    ecx
  420d6b:	test   BYTE PTR [edi-0x370f3312],ch
  420d71:	push   esp
  420d72:	push   edx
  420d73:	adc    al,0x3c
  420d75:	sub    al,0x3c
  420d77:	arpl   WORD PTR [edx],dx
  420d79:	shr    BYTE PTR [ebx+0x717a274e],cl
  420d7f:	ficomp DWORD PTR [esi-0x1d]
  420d82:	mov    dh,0xed
  420d84:	pop    ecx
  420d85:	xor    bh,BYTE PTR [ebx+eiz*4-0x4d]
  420d89:	inc    ecx
  420d8a:	lahf   
  420d8b:	sbb    DWORD PTR [esi+0x5c758334],esp
  420d91:	add    cl,dh
  420d93:	sti    
  420d94:	sahf   
  420d95:	inc    eax
  420d96:	gs jo  0x420d45
  420d99:	xlat   BYTE PTR gs:[ebx]
  420d9b:	inc    esi
  420d9c:	pop    ss
  420d9d:	sbb    al,0x33
  420d9f:	es jno 0x420dbc
  420da2:	pop    ecx
  420da3:	(bad)  
  420da4:	lahf   
  420da5:	mov    DWORD PTR [edi],edx
  420da7:	sbb    edi,DWORD PTR [esi-0x535fd51a]
  420dad:	js     0x420e10
  420daf:	inc    ebx
  420db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db1:	mov    DWORD PTR [edi+ebp*2],0xf648ea18
  420db8:	or     al,0xc9
  420dba:	xchg   DWORD PTR [ebx-0x59075132],ecx
  420dc0:	call   0xd254cf6
  420dc5:	out    0x2c,al
  420dc7:	enter  0x7009,0x87
  420dcb:	lods   al,BYTE PTR ds:[esi]
  420dcc:	push   ebp
  420dcd:	xor    edi,DWORD PTR [edx+0x7d]
  420dd0:	test   cl,dh
  420dd2:	and    BYTE PTR [edi],bh
  420dd4:	mov    eax,ds:0x1ba7650c
  420dd9:	outs   dx,BYTE PTR ds:[esi]
  420dda:	sbb    edx,DWORD PTR [ebx-0x15]
  420ddd:	call   0xfeac:0x63c837be
  420de4:	and    edx,DWORD PTR [edi-0x2f]
  420de7:	loop   0x420ddf
  420de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dea:	scas   eax,DWORD PTR es:[edi]
  420deb:	les    eax,FWORD PTR [eax+0x7a]
  420dee:	int    0x13
  420df0:	sti    
  420df1:	test   DWORD PTR [ebp+esi*8-0x651879ab],esp
  420df8:	or     edi,DWORD PTR [ebx+0x4e]
  420dfb:	pushf  
  420dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dfd:	push   ds
  420dfe:	dec    ebx
  420dff:	mov    ebp,0xb2bf15fc
  420e04:	jmp    0x158a11c2
  420e09:	cmp    al,0xd5
  420e0b:	and    eax,DWORD PTR [ecx]
  420e0d:	mov    ds:0x558103b1,eax
  420e12:	pop    esp
  420e13:	push   ss
  420e14:	add    bh,0xdc
  420e17:	xchg   edx,eax
  420e18:	mov    al,ds:0xa6278cb4
  420e1d:	retf   0x12c2
  420e20:	sbb    ecx,eax
  420e22:	call   0x6987:0x4ac0e414
  420e29:	mov    ch,0xa6
  420e2b:	scas   al,BYTE PTR es:[edi]
  420e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e2d:	mov    cs,edi
  420e2f:	adc    edx,esp
  420e31:	lds    esp,FWORD PTR [edi+0x79]
  420e34:	fist   DWORD PTR [esi-0x38945aa3]
  420e3a:	adc    eax,0xdf6da245
  420e3f:	or     eax,0x1622c346
  420e44:	or     al,0x8d
  420e46:	ins    BYTE PTR es:[edi],dx
  420e47:	sub    DWORD PTR [eax-0x77e0c23c],esi
  420e4d:	pushf  
  420e4e:	pusha  
  420e4f:	out    0xe0,eax
  420e51:	pop    ss
  420e52:	xor    al,0xdd
  420e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e55:	xlat   BYTE PTR ds:[ebx]
  420e56:	popa   
  420e57:	out    0xd9,al
  420e59:	neg    BYTE PTR [eax]
  420e5b:	scas   eax,DWORD PTR es:[edi]
  420e5c:	mov    esi,0xd87413c8
  420e61:	jns    0x420ecb
  420e63:	popa   
  420e64:	cmp    ah,BYTE PTR [edx-0x24c19bee]
  420e6a:	inc    edi
  420e6b:	add    BYTE PTR [ebx+0x546b005f],bh
  420e71:	mov    bl,0x6f
  420e73:	push   es
  420e74:	dec    edx
  420e75:	adc    esp,DWORD PTR [ecx-0x4c]
  420e78:	jg     0x420ea6
  420e7a:	adc    eax,0x22f929ea
  420e7f:	xchg   ecx,eax
  420e80:	bound  ebp,QWORD PTR [esi]
  420e82:	out    0x26,eax
  420e84:	rcr    BYTE PTR [edx+0x6de568db],cl
  420e8a:	sbb    BYTE PTR [eax],ah
  420e8c:	pop    edx
  420e8d:	mov    al,ds:0x371e3293
  420e92:	xlat   BYTE PTR ds:[ebx]
  420e93:	daa    
  420e94:	stc    
  420e95:	(bad)  
  420e96:	ss ins DWORD PTR es:[edi],dx
  420e98:	(bad)  
  420e99:	cld    
  420e9a:	and    eax,0x6118ad87
  420e9f:	mov    ds:0x94781638,eax
  420ea4:	xchg   DWORD PTR [edi+edi*4-0x3b],ebp
  420ea8:	dec    esp
  420ea9:	cmc    
  420eaa:	mov    eax,DWORD PTR [esi]
  420eac:	xor    eax,0xc57c58e5
  420eb1:	in     eax,dx
  420eb2:	aad    0x79
  420eb4:	pop    edi
  420eb5:	cmp    edi,esi
  420eb7:	inc    ecx
  420eb8:	test   al,0xc4
  420eba:	mov    dh,0x91
  420ebc:	mov    edi,0xeaac5d7b
  420ec1:	pusha  
  420ec2:	cmc    
  420ec3:	jmp    FWORD PTR [ecx]
  420ec5:	ja     0x420f17
  420ec7:	and    eax,0x60b93778
  420ecc:	clc    
  420ecd:	into   
  420ece:	pop    es
  420ecf:	ds push esi
  420ed1:	add    BYTE PTR [edi],0x88
  420ed4:	aas    
  420ed5:	les    edi,FWORD PTR ds:0xf95866e6
  420edb:	cli    
  420edc:	xchg   edi,eax
  420edd:	gs nop
  420edf:	in     eax,dx
  420ee0:	mov    al,ah
  420ee2:	outs   dx,DWORD PTR ds:[esi]
  420ee3:	xor    bl,dl
  420ee5:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee7:	mov    esi,0x2dcca3d5
  420eec:	add    bh,BYTE PTR [ecx-0x60]
  420eef:	cmp    dh,dl
  420ef1:	ror    ebx,0xbb
  420ef4:	outs   dx,DWORD PTR ds:[esi]
  420ef5:	pop    ss
  420ef6:	outs   dx,BYTE PTR ds:[esi]
  420ef7:	and    edi,DWORD PTR [eax+0x499bb93c]
  420efd:	add    eax,DWORD PTR ss:[ebx-0xb]
  420f01:	mov    edi,0xc06a3979
  420f06:	es stos BYTE PTR es:[edi],al
  420f08:	jmp    0x420f19
  420f0a:	les    edi,FWORD PTR [ebx+edx*4+0x7f124c82]
  420f11:	mov    edi,0xfb83d3b4
  420f16:	mov    DWORD PTR [esi-0x61],esi
  420f19:	sub    eax,0x10f0e5c7
  420f1e:	jns    0x420eab
  420f20:	(bad)  
  420f21:	fwait
  420f22:	lock in eax,0x17
  420f25:	adc    al,0xe3
  420f28:	imul   edx,esi,0xffffffe4
  420f2b:	pop    eax
  420f2c:	adc    BYTE PTR [ebp-0xa],dh
  420f2f:	inc    edx
  420f30:	pop    eax
  420f31:	push   ebp
  420f32:	mov    eax,0x731a53db
  420f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f38:	add    dl,0x71
  420f3b:	in     eax,0x3
  420f3d:	mov    WORD PTR [ecx],?
  420f3f:	(bad)  
  420f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f41:	ror    BYTE PTR [eax+0x76],0xca
  420f45:	mov    edi,0x4100c1e3
  420f4a:	jae    0x420ed5
  420f4c:	loopne 0x420f62
  420f4e:	cmp    DWORD PTR [ebp+0x20],edi
  420f51:	or     ch,BYTE PTR [ebp+ecx*4-0x2400a55b]
  420f58:	fwait
  420f59:	mov    ah,0xc5
  420f5b:	xchg   BYTE PTR [ecx+0x7a],bh
  420f5e:	sbb    BYTE PTR [ebx+0x95b8428],bl
  420f64:	adc    edx,edx
  420f66:	mov    bl,0xec
  420f68:	mov    ecx,DWORD PTR [ecx]
  420f6a:	dec    edi
  420f6b:	xor    al,0x13
  420f6d:	mov    ebp,0xa64405d9
  420f72:	push   eax
  420f73:	test   BYTE PTR [esi],al
  420f75:	xlat   BYTE PTR ds:[ebx]
  420f76:	fdiv   DWORD PTR [ebx-0x5ae98aec]
  420f7c:	retf   
  420f7d:	rcl    BYTE PTR [ecx-0x4bf37907],cl
  420f83:	push   esp
  420f84:	pop    ecx
  420f85:	lods   al,BYTE PTR ds:[esi]
  420f86:	pop    es
  420f87:	cmp    al,0x46
  420f89:	stc    
  420f8a:	lahf   
  420f8b:	pushf  
  420f8c:	test   al,0xfc
  420f8e:	xchg   esp,eax
  420f8f:	sbb    edi,DWORD PTR [edx+0x1200d36c]
  420f95:	rcr    ch,cl
  420f97:	lods   eax,DWORD PTR ds:[esi]
  420f98:	or     eax,0xc76b324a
  420f9d:	pop    esi
  420f9e:	pop    ds
  420f9f:	test   al,0xdb
  420fa1:	lock cmp dl,BYTE PTR [esi+0x55e56545]
  420fa8:	xor    DWORD PTR [ecx-0x4f],eax
  420fab:	(bad)  
  420fac:	xor    BYTE PTR [ecx],ch
  420fae:	imul   esp,DWORD PTR [eax+0xde13dd9],0xffffff84
  420fb5:	push   cs
  420fb6:	loopne 0x420fc7
  420fb8:	das    
  420fb9:	fnstcw WORD PTR [ebp-0x57]
  420fbc:	bound  edi,QWORD PTR [ebx+edi*8-0x22bee109]
  420fc3:	repnz sbb BYTE PTR [edx],ah
  420fc6:	mov    esi,DWORD PTR ds:0x7252610b
  420fcc:	mov    al,0x8
  420fce:	fild   QWORD PTR [ebp+eax*2-0x58f28bb2]
  420fd5:	mov    cl,0x51
  420fd7:	xor    al,dh
  420fd9:	ins    BYTE PTR es:[edi],dx
  420fda:	cdq    
  420fdb:	jle    0x420fc5
  420fdd:	mov    ds:0xdf46df9f,al
  420fe2:	rcr    DWORD PTR [ebp-0x16b2704b],0x44
  420fe9:	cmp    edi,0x17
  420fec:	mov    eax,ds:0x77323259
  420ff1:	jmp    0xe739:0x43065784
  420ff8:	adc    DWORD PTR ds:0x1c4ec1bf,ebx
  420ffe:	cmp    BYTE PTR [eax-0x49],0x8e
  421002:	xlat   BYTE PTR ds:[ebx]
  421003:	or     dl,BYTE PTR [edi+0x5a1c63a1]
  421009:	jns    0x421050
  42100b:	xchg   esp,eax
  42100c:	loop   0x421087
  42100e:	pop    eax
  42100f:	jne    0x420fef
  421011:	cmp    al,0x8e
  421013:	cmc    
  421014:	(bad)  [edx]
  421016:	cmp    edx,DWORD PTR [ecx+ebp*1-0x304ede0b]
  42101d:	dec    esp
  42101e:	mov    eax,ds:0x1b5d80b3
  421023:	or     ebp,DWORD PTR [ebx]
  421025:	jne    0x421077
  421027:	test   al,0x55
  421029:	adc    esp,DWORD PTR [esi-0x61]
  42102c:	popa   
  42102d:	or     BYTE PTR [ebp-0xdb6c4fb],bl
  421033:	cmp    dl,BYTE PTR [esi+0x532886c2]
  421039:	push   ecx
  42103a:	jnp    0x4210b3
  42103c:	add    al,bl
  42103e:	dec    ecx
  42103f:	lahf   
  421040:	pop    ss
  421041:	cmp    ah,bl
  421043:	rcl    DWORD PTR [ebx+0x36],1
  421046:	scas   al,BYTE PTR es:[edi]
  421047:	repnz rcl BYTE PTR [ebp-0x43],0x9d
  42104c:	sub    eax,0x5f37ceac
  421051:	aas    
  421052:	push   ss
  421053:	or     ch,dl
  421055:	clc    
  421056:	in     al,0x30
  421058:	pop    edx
  421059:	cmp    eax,0x67b235ff
  42105e:	push   esp
  42105f:	mov    bh,0x10
  421061:	sub    BYTE PTR [ebx],ah
  421063:	sub    BYTE PTR [esi+ebx*4],ah
  421066:	or     BYTE PTR [ebp+ebp*4-0x40],al
  42106a:	xor    edx,esi
  42106c:	adc    BYTE PTR [ecx],0xaf
  42106f:	adc    dl,bh
  421071:	cmp    ebx,DWORD PTR [eax]
  421073:	das    
  421074:	lds    edx,FWORD PTR [edx+0x64]
  421077:	dec    ecx
  421078:	stos   DWORD PTR es:[edi],eax
  421079:	mov    bh,0x80
  42107b:	sti    
  42107c:	(bad)  
  42107d:	rcr    BYTE PTR [ebp+eiz*2+0x3d],1
  421081:	fwait
  421082:	imul   esp,esi,0x62
  421085:	in     eax,0x8b
  421087:	lods   eax,DWORD PTR ds:[esi]
  421088:	jne    0x4210e1
  42108a:	xor    eax,0x145439ff
  42108f:	xor    ebp,DWORD PTR [ecx-0x1bffa54b]
  421095:	mov    ds:0xcb03e11b,eax
  42109a:	mov    eax,DWORD PTR [eax+0x4d4381b1]
  4210a0:	cmp    ch,dh
  4210a2:	or     al,0xc4
  4210a4:	mov    WORD PTR [ebx],gs
  4210a6:	or     dh,BYTE PTR [ebp-0x3aa28a32]
  4210ac:	adc    al,0x9a
  4210ae:	pusha  
  4210af:	mov    esi,0x8727bc0a
  4210b4:	imul   edx,esp,0x78a7b19f
  4210ba:	jbe    0x421086
  4210bc:	mov    dh,0x45
  4210be:	or     eax,0xd6567740
  4210c3:	test   BYTE PTR [edx+0x39a88285],0x3a
  4210ca:	popa   
  4210cb:	loop   0x4210d3
  4210cd:	jecxz  0x4210e9
  4210cf:	push   cs
  4210d0:	mov    eax,ds:0xfc1f9aad
  4210d5:	clc    
  4210d6:	lock int 0x75
  4210d9:	jge    0x42108f
  4210db:	fidivr WORD PTR [edx+0x56]
  4210de:	push   ebp
  4210df:	std    
  4210e0:	mov    cl,0x3
  4210e2:	push   0xcee47499
  4210e7:	leave  
  4210e8:	in     eax,0x53
  4210ea:	sbb    ch,BYTE PTR [ebx+0x3d]
  4210ed:	mov    ch,0xe9
  4210ef:	dec    ebp
  4210f0:	std    
  4210f1:	fdiv   QWORD PTR [esi-0x65e7767b]
  4210f7:	out    0x6c,al
  4210f9:	xchg   al,ch
  4210fb:	mov    ecx,0xfeb2eb25
  421100:	mov    DWORD PTR [ebx],ebx
  421102:	inc    esp
  421103:	mov    esp,0x28306942
  421108:	fcomp  st(3)
  42110a:	cmc    
  42110b:	in     al,dx
  42110c:	sahf   
  42110d:	add    al,0xb9
  42110f:	stc    
  421110:	mov    cl,0xb3
  421112:	and    al,BYTE PTR [ebx]
  421114:	mov    dl,0xb2
  421116:	lea    esi,[ecx+0x2d601c0f]
  42111c:	and    DWORD PTR [eax-0x46aebc8e],edx
  421122:	gs (bad) 
  421124:	stc    
  421125:	int3   
  421126:	xor    al,BYTE PTR [edi-0x57bb94fd]
  42112c:	lock push esp
  42112e:	ins    BYTE PTR es:[edi],dx
  42112f:	stos   DWORD PTR es:[edi],eax
  421130:	ret    0xbd26
  421133:	adc    cl,dh
  421135:	sbb    eax,0xce7142b6
  42113a:	pop    ss
  42113b:	push   ss
  42113c:	in     al,dx
  42113d:	fsubr  QWORD PTR [esi]
  42113f:	call   0x6816d00a
  421144:	mov    ch,0xa8
  421146:	(bad)  
  421148:	cmp    eax,0x8cb7ec19
  42114d:	cmp    BYTE PTR [esi],al
  42114f:	test   BYTE PTR [edi+0x2],dh
  421152:	enter  0xdabc,0x31
  421156:	mov    cs,edi
  421158:	inc    ecx
  421159:	sbb    ch,BYTE PTR [edi+eax*8]
  42115c:	sub    bl,BYTE PTR [edi]
  42115e:	into   
  42115f:	xor    al,0x87
  421161:	xchg   BYTE PTR [edx+0x261d8f83],al
  421167:	mov    ebp,0x13453ec1
  42116c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42116d:	out    dx,eax
  42116e:	sub    dh,bh
  421170:	popf   
  421171:	mov    WORD PTR [edx],ds
  421173:	lock and al,0xd8
  421176:	outs   dx,BYTE PTR ds:[esi]
  421177:	loopne 0x421120
  421179:	adc    BYTE PTR [ebx],bh
  42117b:	in     eax,0x1d
  42117d:	out    0xbc,al
  42117f:	or     ebp,DWORD PTR [esi+0x5e517633]
  421185:	or     DWORD PTR [edi-0x1c],esp
  421188:	jg     0x4211f6
  42118a:	je     0x4211dd
  42118c:	and    dl,cl
  42118e:	add    eax,0x1ad36d26
  421193:	leave  
  421194:	popf   
  421195:	loopne 0x4211b7
  421197:	(bad)  [eax-0x67]
  42119a:	xchg   ebx,eax
  42119b:	mul    cl
  42119d:	in     al,0xaf
  42119f:	(bad)  
  4211a0:	pushf  
  4211a1:	lea    ebp,[edi+0xb08e71a]
  4211a7:	adc    BYTE PTR [ebx],bl
  4211a9:	(bad)  
  4211aa:	repnz adc BYTE PTR [ebx+eax*2-0x1f76a9e0],dl
  4211b2:	repz iret 
  4211b4:	sbb    DWORD PTR [ebp+0x21],esp
  4211b7:	loopne 0x421160
  4211b9:	or     al,0x5b
  4211bb:	rcl    BYTE PTR [edi+edi*1+0x63254688],cl
  4211c2:	push   ebp
  4211c3:	and    al,0x32
  4211c5:	loope  0x4211de
  4211c7:	xor    ebp,ecx
  4211c9:	add    DWORD PTR [edi+0x1eceb0b],ebp
  4211cf:	mov    ch,0x6b
  4211d1:	js     0x421198
  4211d3:	ins    DWORD PTR es:[edi],dx
  4211d4:	or     eax,0xb3a1ad51
  4211d9:	out    0xc3,eax
  4211db:	jns    0x42116b
  4211dd:	sahf   
  4211de:	(bad)  
  4211df:	fidivr WORD PTR [eax+ebp*1+0x78a47556]
  4211e6:	cmp    al,0xb3
  4211e8:	cmp    al,0x68
  4211ea:	fcomip st,st(3)
  4211ec:	sbb    BYTE PTR [esi+0x68f8a8a7],0x1
  4211f3:	pop    esi
  4211f4:	xchg   ebp,ecx
  4211f6:	push   ss
  4211f7:	inc    edx
  4211f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f9:	mov    cl,0x89
  4211fb:	in     al,dx
  4211fc:	fiadd  DWORD PTR [ecx]
  4211fe:	pop    ebp
  4211ff:	aaa    
  421200:	and    BYTE PTR [ebx+0x5c],dl
  421203:	push   ebx
  421204:	lahf   
  421205:	aaa    
  421206:	lds    ebx,FWORD PTR [esi]
  421208:	inc    ebp
  421209:	loop   0x421193
  42120b:	xor    esp,DWORD PTR ss:[eax+ecx*1]
  42120f:	mov    dh,0xc1
  421211:	mov    DWORD PTR [esp+ecx*4+0x1e08ad1],edx
  421218:	mov    ah,0xae
  42121a:	xchg   esp,eax
  42121b:	stos   DWORD PTR es:[edi],eax
  42121c:	jmp    0x18685d23
  421221:	xchg   ecx,eax
  421222:	and    edi,DWORD PTR [eax-0x4eaa27ec]
  421228:	pusha  
  421229:	aaa    
  42122a:	rcl    bh,1
  42122c:	fist   DWORD PTR [ecx+0x5499a798]
  421232:	aaa    
  421233:	and    edx,0xf3b96d6e
  421239:	and    bl,bl
  42123b:	add    eax,0xe06790fd
  421240:	ds mov ch,0x75
  421243:	pop    esi
  421244:	pop    esp
  421245:	lods   eax,DWORD PTR ds:[esi]
  421246:	push   ds
  421247:	mov    bl,0x55
  421249:	or     al,0xe
  42124b:	les    esi,FWORD PTR [ebp+0x34a9ce00]
  421251:	xchg   edi,eax
  421252:	cmp    BYTE PTR [esi-0x68ba65fc],cl
  421258:	push   ss
  421259:	(bad)  
  42125a:	xor    al,0xa4
  42125c:	jmp    0x87b18909
  421261:	and    DWORD PTR [eax-0x3b],esi
  421264:	pop    edi
  421265:	pop    esp
  421266:	sti    
  421267:	xor    al,0xe8
  421269:	loope  0x421291
  42126b:	aam    0x5e
  42126d:	xor    al,0x4
  42126f:	lds    esp,FWORD PTR [ebp-0x209e7fa]
  421275:	in     al,0x29
  421277:	sub    DWORD PTR [esi+ebx*4],edi
  42127a:	and    eax,0x47d97b7e
  42127f:	jle    0x42129e
  421281:	jle    0x4212c3
  421283:	aam    0x3a
  421285:	push   ebx
  421286:	jmp    0x8872be58
  42128b:	add    dh,BYTE PTR [ebx]
  42128d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42128e:	sti    
  42128f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421290:	test   DWORD PTR [ebp+0x42],edi
  421293:	xchg   ebx,eax
  421294:	aad    0x5f
  421296:	sbb    eax,DWORD PTR [edx]
  421298:	mov    al,ds:0xbd1d69e4
  42129d:	pop    ss
  42129e:	sbb    al,0x7
  4212a0:	aad    0xf7
  4212a2:	push   esp
  4212a3:	xor    ah,ah
  4212a5:	jle    0x421301
  4212a7:	xchg   edi,eax
  4212a8:	fcomp  QWORD PTR [ebp+ecx*2-0x5]
  4212ac:	push   ds
  4212ad:	adc    al,0x75
  4212af:	or     eax,0x4da971df
  4212b4:	mov    eax,0x9d8a37c2
  4212b9:	shl    DWORD PTR [edx-0x7cedb67a],0x3c
  4212c0:	inc    ebp
  4212c1:	dec    edi
  4212c2:	test   DWORD PTR [eax+0x23],ebx
  4212c5:	and    BYTE PTR [eax],dh
  4212c7:	mov    BYTE PTR [ecx-0x43],ah
  4212ca:	rcr    BYTE PTR ds:0xc02f23e7,cl
  4212d0:	push   ebx
  4212d1:	lods   al,BYTE PTR ds:[esi]
  4212d2:	mov    ds:0xa41e1c27,eax
  4212d7:	pop    esi
  4212d8:	sbb    BYTE PTR [eax-0x1ed450af],bl
  4212de:	push   ss
  4212df:	ins    DWORD PTR es:[edi],dx
  4212e0:	leave  
  4212e1:	push   0xffffffd6
  4212e3:	inc    edx
  4212e4:	inc    esp
  4212e5:	xchg   ecx,eax
  4212e6:	mov    ?,WORD PTR [edx+0x72c82dd9]
  4212ec:	mov    ds:0xaef7283a,eax
  4212f1:	xor    bh,dh
  4212f3:	leave  
  4212f4:	add    esp,DWORD PTR [ebx+0x3c]
  4212f7:	fld    QWORD PTR [ecx+edi*8-0x428d23d1]
  4212fe:	adc    ah,BYTE PTR [ecx+0x64307020]
  421304:	jmp    0x24bcd2e3
  421309:	or     ebp,ebp
  42130b:	jge    0x4212fa
  42130d:	inc    edx
  42130e:	add    eax,ebx
  421310:	mov    bl,0x42
  421312:	push   cs
  421313:	mov    al,ah
  421315:	mov    ecx,0xe7f463f9
  42131a:	(bad)  
  42131b:	out    0x63,eax
  42131d:	fwait
  42131e:	mov    ecx,DWORD PTR [ebx+0x7f]
  421321:	mov    BYTE PTR [esi-0x14],ch
  421324:	add    al,0xb5
  421326:	or     BYTE PTR [ebx+0x684e40d8],ah
  42132c:	bound  ebp,QWORD PTR [ebp+0x6b]
  42132f:	inc    ecx
  421330:	inc    edi
  421331:	pop    ecx
  421332:	sahf   
  421333:	mov    eax,ds:0x1eb9d8e6
  421338:	ror    BYTE PTR [ecx+0x72b16339],0xa5
  42133f:	fwait
  421340:	mov    esp,0xe43fb6ea
  421345:	sbb    al,0x2c
  421347:	inc    eax
  421348:	and    BYTE PTR [edi+0x3cc7de25],bl
  42134e:	test   eax,0x4d79ea1c
  421353:	dec    eax
  421354:	rol    al,cl
  421356:	inc    edi
  421357:	xlat   BYTE PTR ds:[ebx]
  421358:	or     ebp,DWORD PTR ds:0xfc67e3b9
  42135e:	(bad)  
  42135f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421360:	int    0xcf
  421362:	add    eax,0x84ccf298
  421367:	adc    al,0x7b
  421369:	mov    dh,0xd7
  42136b:	xchg   edx,eax
  42136c:	inc    eax
  42136d:	dec    ebx
  42136e:	or     esp,esi
  421370:	jmp    eax
  421372:	(bad)  
  421373:	out    0xfd,al
  421375:	sbb    BYTE PTR [ebx-0xe],ch
  421378:	mov    ebx,0x7f52086b
  42137d:	cmp    eax,DWORD PTR [ecx]
  42137f:	mov    gs,eax
  421381:	bound  ebp,QWORD PTR [ebx]
  421383:	jecxz  0x42139d
  421385:	cmp    eax,0xa376fa3d
  42138a:	out    dx,eax
  42138b:	jmp    0x14c0:0x40023acb
  421392:	push   ss
  421393:	sub    al,BYTE PTR [eax-0x1a]
  421396:	aaa    
  421397:	xor    eax,0xba02f3a5
  42139c:	icebp  
  42139d:	aam    0x8e
  42139f:	(bad)  
  4213a0:	fistp  WORD PTR [edi-0x30]
  4213a3:	addr16 pop ecx
  4213a5:	int3   
  4213a6:	mov    dl,0x5c
  4213a8:	cs ins DWORD PTR es:[edi],dx
  4213aa:	fcmovne st,st(3)
  4213ac:	xor    bl,BYTE PTR [ecx]
  4213ae:	or     DWORD PTR [ebx],esp
  4213b0:	mov    eax,DWORD PTR [ebx+0x569c8c2b]
  4213b6:	in     eax,dx
  4213b7:	push   0x7a
  4213b9:	mov    ds:0xbe0014bc,eax
  4213be:	dec    edx
  4213bf:	ror    DWORD PTR [esi+0x48],1
  4213c2:	fs scas eax,DWORD PTR es:[edi]
  4213c4:	imul   BYTE PTR [eax+0x64ab7cdf]
  4213ca:	imul   edi,DWORD PTR [ecx-0x15ffd153],0x68
  4213d1:	dec    edx
  4213d2:	pop    es
  4213d3:	add    al,0xd3
  4213d5:	js     0x4213eb
  4213d7:	pop    ds
  4213d8:	cmp    dh,BYTE PTR [edx+0x6]
  4213db:	pop    esi
  4213dc:	inc    ebx
  4213dd:	out    0x18,eax
  4213df:	stos   BYTE PTR es:[edi],al
  4213e0:	push   eax
  4213e1:	jg     0x4213a4
  4213e3:	adc    DWORD PTR [edi+edi*1],edi
  4213e6:	cmp    BYTE PTR ds:0x877d55dc,0xe7
  4213ed:	jb     0x4213e4
  4213ef:	lock sub al,0xcc
  4213f2:	sbb    edx,eax
  4213f4:	lods   eax,DWORD PTR ds:[esi]
  4213f5:	xor    eax,DWORD PTR [edi-0x55]
  4213f8:	xchg   edx,eax
  4213f9:	(bad)  [edx+0x27]
  4213fc:	stos   BYTE PTR es:[edi],al
  4213fd:	fmul   QWORD PTR [esi+eiz*4-0x74]
  421401:	in     al,0x69
  421403:	cli    
  421404:	in     al,dx
  421405:	cmp    esi,DWORD PTR [ecx]
  421407:	jecxz  0x4213f9
  421409:	fyl2x  
  42140b:	xchg   DWORD PTR [eax],edx
  42140d:	cdq    
  42140e:	ins    DWORD PTR es:[edi],dx
  42140f:	pop    edi
  421410:	test   eax,0x6a20e538
  421415:	call   0xf2ad:0xf5019456
  42141c:	sahf   
  42141d:	outs   dx,DWORD PTR ds:[esi]
  42141e:	loop   0x42143f
  421420:	out    0x1e,eax
  421422:	sub    esi,DWORD PTR cs:[eax]
  421425:	xchg   edi,eax
  421426:	xor    bl,al
  421428:	mov    BYTE PTR [ecx+0x60a52ddd],cl
  42142e:	mov    dh,0xef
  421430:	pop    ds
  421431:	dec    esp
  421432:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421435:	fistp  QWORD PTR [ebx+0x28]
  421438:	xchg   dl,cl
  42143a:	ficomp DWORD PTR cs:[ebx+0x59]
  42143e:	repz aaa 
  421440:	cmp    ebp,edi
  421442:	pop    esi
  421443:	lea    ecx,[ebp+0x6dfd3d88]
  421449:	call   0xa959:0x9818b6fb
  421450:	sub    bh,dh
  421452:	fsub   QWORD PTR [ecx-0x17c9a272]
  421458:	inc    esp
  421459:	into   
  42145a:	les    esp,FWORD PTR [edi+0x65]
  42145d:	inc    edi
  42145e:	jecxz  0x421409
  421460:	iret   
  421461:	mov    al,0xf5
  421463:	mov    dh,0xb4
  421465:	enter  0xb1f,0xfa
  421469:	mov    eax,eax
  42146b:	int3   
  42146c:	xchg   edx,eax
  42146d:	mov    esp,0x7e69bd8f
  421472:	(bad)  
  421473:	shl    DWORD PTR [ebp+0xcdba436],1
  421479:	or     al,0xbf
  42147b:	sub    al,0x56
  42147d:	push   ecx
  42147e:	lods   eax,DWORD PTR ds:[esi]
  42147f:	cmc    
  421480:	jecxz  0x4214f3
  421482:	xor    DWORD PTR ds:0x3da02f0e,ebp
  421488:	mov    eax,0xc71b20fd
  42148d:	lds    eax,FWORD PTR [ebp-0x23b4e3a8]
  421493:	leave  
  421494:	mov    edx,0x6c3d56bd
  421499:	inc    edx
  42149a:	lods   al,BYTE PTR ds:[esi]
  42149b:	mov    al,ss:0x4002e3f6
  4214a1:	int3   
  4214a2:	sub    eax,0x6d8219fe
  4214a7:	out    dx,eax
  4214a8:	outs   dx,BYTE PTR ds:[esi]
  4214a9:	jmp    0x421513
  4214ab:	push   esi
  4214ac:	push   edi
  4214ad:	mov    bh,ah
  4214af:	xchg   DWORD PTR [ecx+0x77d82f94],ecx
  4214b5:	push   esp
  4214b6:	js     0x421483
  4214b8:	mov    ch,0x22
  4214ba:	push   esi
  4214bb:	iret   
  4214bc:	loop   0x421494
  4214be:	sub    ch,bl
  4214c0:	push   0xffffffa0
  4214c2:	bound  edx,QWORD PTR [ebp-0x2c5eb5f3]
  4214c8:	cld    
  4214c9:	icebp  
  4214ca:	dec    ebp
  4214cb:	xlat   BYTE PTR ds:[ebx]
  4214cc:	lods   eax,DWORD PTR ds:[esi]
  4214cd:	pop    eax
  4214ce:	pop    ebp
  4214cf:	cli    
  4214d0:	xchg   ebp,eax
  4214d1:	cmp    ecx,DWORD PTR [ebx-0x2f406818]
  4214d7:	mov    BYTE PTR [edx+0x6e],dh
  4214da:	in     eax,0x25
  4214dc:	cmp    eax,0x462739f6
  4214e1:	dec    esi
  4214e2:	jmp    0x6764:0x8803fe10
  4214e9:	lock mov ah,0xf3
  4214ec:	mov    cl,0x3c
  4214ee:	jo     0x421502
  4214f0:	xor    dl,ah
  4214f2:	and    eax,0x4a71daa6
  4214f7:	mov    DWORD PTR [eax+ebp*4],esi
  4214fa:	xchg   ebx,edi
  4214fc:	jbe    0x421527
  4214fe:	xor    BYTE PTR [eax],0x27
  421501:	push   esi
  421502:	bswap  ebp
  421504:	add    edi,edi
  421506:	xor    DWORD PTR [ebp-0x15],0xffffff85
  42150a:	xor    eax,0xed2d3a35
  42150f:	es in  al,0xc0
  421512:	ret    0xd0e8
  421515:	int3   
  421516:	imul   edx,DWORD PTR ds:0xab3c67a4,0x2a
  42151d:	xchg   DWORD PTR ds:0xa3b21add,ecx
  421523:	bound  edi,QWORD PTR fs:[edi+0x4a]
  421527:	scas   eax,DWORD PTR es:[edi]
  421528:	mov    cl,0xfd
  42152a:	int    0x3e
  42152c:	jnp    0x421580
  42152e:	pop    es
  42152f:	loopne 0x4214de
  421531:	fcomp  DWORD PTR [esi]
  421533:	sar    DWORD PTR [esi+0x31],0x95
  421537:	ret    0xdcbf
  42153a:	xor    ebx,esp
  42153c:	mov    BYTE PTR [eax],bh
  42153e:	dec    ebx
  42153f:	das    
  421540:	cwde   
  421541:	mov    cl,0x7c
  421543:	mov    ecx,0x542009dc
  421548:	fwait
  421549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42154a:	sub    DWORD PTR [ebp+0x0],eax
  42154d:	push   ds
  42154e:	xlat   BYTE PTR ds:[ebx]
  42154f:	or     eax,0x7989767d
  421554:	pop    ebx
  421555:	or     eax,0x85e31c32
  42155a:	cmp    bh,ah
  42155c:	adc    eax,0xad118e9d
  421561:	xor    al,0x19
  421563:	xchg   DWORD PTR [esi-0x10a7ad78],esp
  421569:	xchg   esp,eax
  42156a:	lea    ebp,[edx-0x31edc3a]
  421570:	mov    eax,DWORD PTR [eax]
  421572:	ret    
  421573:	fld    QWORD PTR [ebx+0x6ad89774]
  421579:	xchg   BYTE PTR [ebp+eiz*4+0x2f8a31f0],cl
  421580:	dec    edx
  421581:	ss jae 0x421561
  421584:	mov    ?,esp
  421586:	fist   DWORD PTR [ebx]
  421588:	mov    edx,0xff5cf778
  42158d:	dec    ebp
  42158e:	fld    QWORD PTR [eax-0x1e03bba1]
  421594:	xchg   edx,eax
  421595:	inc    ebx
  421596:	push   ebx
  421597:	pop    edi
  421598:	inc    eax
  421599:	out    0x3d,eax
  42159b:	jl     0x42154c
  42159d:	imul   edx,DWORD PTR [ecx],0xac04ea57
  4215a3:	and    DWORD PTR [ecx-0x56],edx
  4215a6:	dec    edi
  4215a7:	inc    edi
  4215a8:	sbb    bl,BYTE PTR [edx]
  4215aa:	add    DWORD PTR [eax],edx
  4215ac:	jno    0x42161f
  4215ae:	xor    bh,BYTE PTR [esi-0x1d]
  4215b1:	jbe    0x4215d7
  4215b3:	adc    eax,0xeb647a6a
  4215b8:	push   edi
  4215b9:	mov    esi,?
  4215bb:	adc    edi,edi
  4215bd:	xor    al,BYTE PTR [esi+0x6452c717]
  4215c3:	pushf  
  4215c4:	jb     0x4215fd
  4215c6:	adc    DWORD PTR [ecx],0xffffffac
  4215c9:	stos   BYTE PTR es:[edi],al
  4215ca:	daa    
  4215cb:	shr    DWORD PTR [esi],cl
  4215cd:	xor    ebp,edx
  4215cf:	cmp    al,0x8f
  4215d1:	add    eax,0xf8eeef56
  4215d6:	xchg   ebx,eax
  4215d7:	imul   BYTE PTR [eax]
  4215d9:	call   0x8dae:0x95389a33
  4215e0:	enter  0x309f,0xf2
  4215e4:	dec    esp
  4215e5:	loope  0x421572
  4215e7:	inc    eax
  4215e8:	or     DWORD PTR [edi+0x16],ebp
  4215eb:	inc    ecx
  4215ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215ed:	xchg   ecx,edx
  4215ef:	in     eax,0xaa
  4215f1:	std    
  4215f2:	(bad)  
  4215f3:	jmp    0x3821:0x392d498b
  4215fa:	or     eax,0x67379e9e
  4215ff:	es sub esi,DWORD PTR gs:[eax]
  421603:	push   esi
  421604:	xchg   esp,eax
  421605:	push   edx
  421606:	call   0x19ea:0x52dc6edb
  42160d:	mov    edx,ecx
  42160f:	aaa    
  421610:	fwait
  421611:	adc    dl,BYTE PTR [edx-0x2c]
  421614:	cld    
  421615:	cmp    eax,0xa60e1e0b
  42161a:	sar    DWORD PTR [ecx+0x1d0e3ff0],0xb3
  421621:	lds    esp,FWORD PTR [esi]
  421623:	add    eax,0xacb1e027
  421628:	jge    0x4216a8
  42162a:	adc    BYTE PTR [ebp+0x15d0e66e],al
  421630:	or     DWORD PTR [ebx],0x23bd38c0
  421636:	icebp  
  421637:	xlat   BYTE PTR ds:[ebx]
  421638:	test   bl,bh
  42163a:	ins    BYTE PTR es:[edi],dx
  42163b:	xor    cl,BYTE PTR [ecx+0x1]
  42163e:	fild   DWORD PTR [ecx+0x57]
  421641:	test   edi,esp
  421643:	int    0xf0
  421645:	and    DWORD PTR [eax],ecx
  421647:	shl    BYTE PTR [ebp+0x38],0xd1
  42164b:	xchg   edx,eax
  42164c:	pusha  
  42164d:	mov    ebx,0xa907fecf
  421652:	pop    ecx
  421653:	sub    al,BYTE PTR [ebx+eiz*1+0x9]
  421657:	cmc    
  421658:	in     eax,0xf4
  42165a:	xor    al,0x57
  42165c:	xchg   ebx,eax
  42165d:	loopne 0x4215fd
  42165f:	in     al,0xa2
  421661:	mov    ds,WORD PTR [ebx]
  421663:	cmp    cl,BYTE PTR [edx+0x4]
  421666:	retf   
  421667:	xlat   BYTE PTR ds:[ebx]
  421668:	sti    
  421669:	jb     0x4216bd
  42166b:	ins    BYTE PTR es:[edi],dx
  42166c:	and    edi,DWORD PTR [ebx-0x66d62ecf]
  421672:	jne    0x421616
  421674:	sub    BYTE PTR [ecx-0x67],0x4c
  421678:	rcl    DWORD PTR [ecx-0x642ee561],cl
  42167e:	xlat   BYTE PTR ds:[ebx]
  42167f:	iret   
  421680:	jg     0x421620
  421682:	push   esi
  421683:	and    dh,BYTE PTR [esi]
  421685:	or     DWORD PTR [ebx-0x14],0xaac023d
  42168c:	fcom   DWORD PTR [ebp+edi*2-0x80]
  421690:	xchg   edx,eax
  421691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421692:	jb     0x421644
  421694:	nop
  421695:	and    edx,edi
  421697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421698:	stc    
  421699:	mov    esi,0xc1b0d9a9
  42169e:	dec    eax
  42169f:	inc    eax
  4216a0:	fsubr  QWORD PTR [edi+0x74]
  4216a3:	ret    
  4216a4:	lahf   
  4216a5:	(bad)  
  4216a6:	dec    esi
  4216a7:	ss inc esp
  4216a9:	push   ss
  4216aa:	mov    esp,0x8080acec
  4216af:	stos   BYTE PTR es:[edi],al
  4216b0:	mov    ah,0xa0
  4216b2:	call   0x907421b5
  4216b7:	rcr    DWORD PTR [eax+0x7d],0xf7
  4216bb:	jne    0x4216ec
  4216bd:	aam    0x2d
  4216bf:	maskmovq mm1,(bad)
  4216c0:	test   DWORD PTR [ebp+ebx*2+0x56],0x82f2d8a3
  4216c8:	or     ebx,DWORD PTR [edi]
  4216ca:	push   ss
  4216cb:	xchg   ebx,eax
  4216cc:	(bad)  
  4216cd:	xchg   edi,eax
  4216ce:	call   0x2b3ea397
  4216d3:	sti    
  4216d4:	mov    dl,0x30
  4216d6:	mov    ebx,esi
  4216d8:	or     al,BYTE PTR [edi+0xbbda7e9]
  4216de:	adc    edx,DWORD PTR [esi-0x3c15d819]
  4216e4:	das    
  4216e5:	cdq    
  4216e6:	addr16 lahf 
  4216e8:	mov    bh,0xe0
  4216ea:	mov    ds:0xad8cfb3d,eax
  4216ef:	popf   
  4216f0:	fidivr DWORD PTR [esi+0x72c947a]
  4216f6:	test   BYTE PTR [esi],ch
  4216f8:	cdq    
  4216f9:	jo     0x42175c
  4216fb:	inc    esi
  4216fc:	or     esi,DWORD PTR [ebp+0x36]
  4216ff:	aaa    
  421700:	in     eax,0x9d
  421702:	mov    al,ds:0x21a2cf9f
  421707:	mov    ecx,0x2717b0af
  42170c:	xchg   ebp,eax
  42170d:	jmp    0xa845b18c
  421712:	or     dh,bh
  421714:	in     eax,dx
  421715:	popa   
  421716:	test   BYTE PTR [eax],dl
  421718:	test   DWORD PTR [edi+0x55],ebp
  42171b:	stc    
  42171c:	sbb    DWORD PTR [esi+0x219d3c1a],0x3e
  421723:	jmp    0x3842a951
  421728:	mov    cl,0xa3
  42172a:	leave  
  42172b:	mov    WORD PTR [ebp+0x55],es
  42172e:	push   cs
  42172f:	(bad)  
  421730:	cmp    eax,0x1c3055eb
  421735:	mov    edi,0xf3ce88c4
  42173a:	jae    0x421792
  42173c:	mov    al,ds:0x8a858188
  421741:	ss cdq 
  421743:	mov    ecx,0xc09a50c5
  421748:	(bad)  
  421749:	xlat   BYTE PTR ds:[ebx]
  42174a:	mov    dh,0x99
  42174c:	pusha  
  42174d:	in     al,dx
  42174e:	clc    
  42174f:	add    ch,ch
  421751:	lds    ebx,FWORD PTR [eax+0x4c]
  421754:	jae    0x4216ef
  421756:	cmc    
  421757:	mov    eax,0x19e07544
  42175c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42175d:	adc    dl,bh
  42175f:	pop    esi
  421760:	pop    eax
  421761:	mov    cl,0x7b
  421763:	pop    edx
  421764:	mov    cl,0x21
  421766:	ret    0x5a62
  421769:	pop    ebp
  42176a:	jecxz  0x421750
  42176c:	adc    edx,edi
  42176e:	into   
  42176f:	rcl    DWORD PTR [edi],cl
  421771:	test   al,0xdd
  421773:	push   edx
  421774:	lea    ecx,[eax]
  421776:	inc    ecx
  421777:	pop    ecx
  421778:	rol    BYTE PTR [ebx],cl
  42177a:	cli    
  42177b:	aad    0x4
  42177d:	cmp    ecx,DWORD PTR [ecx+0x707c087a]
  421783:	or     al,0x44
  421785:	inc    esp
  421786:	ins    BYTE PTR es:[edi],dx
  421787:	je     0x4217e1
  421789:	push   ebx
  42178a:	imul   edx,DWORD PTR [eax],0x37
  42178d:	(bad)
  421791:	arpl   WORD PTR [ebx-0x3],sp
  421794:	(bad)  
  421795:	cmp    dh,bl
  421797:	in     eax,0x28
  421799:	call   0x873c:0xf29e7a30
  4217a0:	add    esi,DWORD PTR [ecx-0x189faaad]
  4217a6:	sbb    bl,BYTE PTR [esi-0x692afea5]
  4217ac:	sub    DWORD PTR [edx],ebp
  4217ae:	ins    BYTE PTR es:[edi],dx
  4217af:	mov    al,0x7
  4217b1:	push   esp
  4217b2:	pop    esp
  4217b3:	ret    0xc155
  4217b6:	mov    ds:0x3f303789,eax
  4217bb:	push   cs
  4217bc:	cmp    edx,DWORD PTR [eax-0x3dbf28de]
  4217c2:	sqrtps xmm7,xmm6
  4217c5:	sbb    dl,cl
  4217c7:	jmp    0x4217b4
  4217c9:	fs jle 0x421759
  4217cc:	rol    BYTE PTR [ebx-0x5d584dec],cl
  4217d2:	fcmovnu st,st(2)
  4217d4:	xchg   esi,eax
  4217d5:	xchg   ebp,eax
  4217d6:	mov    bl,0xbc
  4217d8:	add    DWORD PTR [eax],edx
  4217da:	mov    WORD PTR [edx-0x59fc3b03],gs
  4217e0:	push   cs
  4217e1:	bound  ecx,QWORD PTR [ebp+0x616c5ac3]
  4217e7:	lahf   
  4217e8:	jle    0x42182c
  4217ea:	scas   al,BYTE PTR es:[edi]
  4217eb:	cli    
  4217ec:	neg    DWORD PTR [edi]
  4217ee:	pop    ecx
  4217ef:	add    edi,eax
  4217f1:	pop    ss
  4217f2:	jp     0x42179f
  4217f4:	push   0xc5273463
  4217f9:	and    BYTE PTR [edx],bl
  4217fb:	jo     0x421854
  4217fd:	push   esi
  4217fe:	and    DWORD PTR [edx],edi
  421800:	cwde   
  421801:	inc    ebp
  421802:	jb     0x421796
  421804:	and    BYTE PTR [eax-0x79ac972c],bl
  42180a:	in     al,dx
  42180b:	(bad)  
  42180c:	or     BYTE PTR [edx+0x71],dh
  42180f:	scas   al,BYTE PTR es:[edi]
  421810:	imul   esp,DWORD PTR [eax],0xffffff8d
  421813:	add    ah,BYTE PTR [ecx+0x12e2aa2]
  421819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42181a:	mov    dh,0x73
  42181c:	dec    esi
  42181d:	leave  
  42181e:	repnz es lahf 
  421821:	mov    bl,0xea
  421823:	push   0xffffffa6
  421825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421826:	sti    
  421827:	out    dx,al
  421828:	jp     0x421860
  42182a:	repz dec ecx
  42182c:	pop    ecx
  42182d:	dec    ecx
  42182e:	sar    edx,1
  421830:	cmp    ch,BYTE PTR [edx-0x1ed6fe77]
  421836:	jmp    0x421842
  421838:	xor    al,BYTE PTR [esi-0x51f04574]
  42183e:	and    ebx,edx
  421840:	cmp    DWORD PTR [esi-0x19],ecx
  421843:	jae    0x4217e7
  421845:	(bad)  
  421847:	add    esp,0xffffffdb
  42184a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42184b:	sub    eax,DWORD PTR [esi]
  42184d:	cmp    eax,0x5da4ee81
  421852:	retf   0x6fe7
  421855:	or     edx,0xb11fd679
  42185b:	js     0x4218aa
  42185d:	push   eax
  42185e:	sub    eax,0xb09482cc
  421863:	lods   al,BYTE PTR ds:[esi]
  421864:	push   es
  421865:	add    eax,0x75d45cc0
  42186a:	and    bh,BYTE PTR [esi+0x4458bdca]
  421870:	or     ecx,DWORD PTR [eax+0x77]
  421873:	es sar dl,1
  421876:	xor    esp,DWORD PTR [edx-0x63]
  421879:	xchg   edi,eax
  42187a:	cmc    
  42187b:	repz adc ebx,DWORD PTR [eax-0x3f81e331]
  421882:	sub    eax,0xc6b6b745
  421887:	outs   dx,BYTE PTR ds:[esi]
  421888:	es jno 0x421889
  42188b:	add    al,0xad
  42188d:	and    ecx,DWORD PTR [ecx-0x29340d91]
  421893:	lods   eax,DWORD PTR ds:[esi]
  421894:	push   ebx
  421895:	(bad)  
  421896:	mov    cl,0x3e
  421898:	mov    WORD PTR [ecx+ecx*4+0x29],?
  42189c:	pop    ds
  42189d:	xchg   esp,eax
  42189e:	ins    DWORD PTR es:[edi],dx
  42189f:	dec    edx
  4218a0:	dec    ecx
  4218a1:	cmp    BYTE PTR [ebp+0x2913872e],bl
  4218a7:	inc    esp
  4218a8:	aaa    
  4218a9:	repnz or al,0x7d
  4218ac:	dec    ecx
  4218ad:	jmp    0x4218d7
  4218af:	or     eax,0x94060d63
  4218b4:	outs   dx,DWORD PTR ds:[esi]
  4218b5:	stos   BYTE PTR es:[edi],al
  4218b6:	(bad)
  4218b9:	mov    DWORD PTR [ecx],esi
  4218bb:	push   ss
  4218bc:	enter  0x88b7,0xb7
  4218c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218c1:	dec    ebx
  4218c2:	mov    WORD PTR [edx-0x7afea116],?
  4218c8:	mov    ds:0x3787a2ce,al
  4218cd:	cdq    
  4218ce:	sbb    DWORD PTR [ecx+0x67],edx
  4218d1:	scas   eax,DWORD PTR es:[edi]
  4218d2:	mov    al,ds:0x4e59833e
  4218d7:	lock dec ebx
  4218d9:	sahf   
  4218da:	pop    edx
  4218db:	mov    ds:0x9be0770,al
  4218e0:	or     eax,0x6798b56d
  4218e5:	stos   DWORD PTR es:[edi],eax
  4218e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218e7:	mov    eax,ds:0xe569d48e
  4218ec:	ss xchg esi,eax
  4218ee:	mov    ds:0x58e85ced,al
  4218f3:	adc    eax,0x1f1967fd
  4218f8:	adc    dl,cl
  4218fa:	or     edx,DWORD PTR [edx]
  4218fc:	mov    eax,ds:0x5dc625bd
  421901:	lds    esi,FWORD PTR [edi+0x3e]
  421904:	pop    ds
  421905:	sub    dh,BYTE PTR [edx-0x7784bc9b]
  42190b:	xchg   ecx,eax
  42190c:	cs call 0x384b:0x67f5f1f1
  421914:	lock ins BYTE PTR es:[edi],dx
  421916:	sbb    ecx,DWORD PTR ds:0xe51a3909
  42191c:	fld    DWORD PTR [edi+esi*8+0x2234dd6d]
  421923:	push   edx
  421924:	stos   DWORD PTR es:[edi],eax
  421925:	mov    cl,0xfd
  421927:	xchg   esi,ecx
  421929:	loopne 0x4218f2
  42192b:	gs xchg esp,eax
  42192d:	mov    WORD PTR [eax],gs
  42192f:	xchg   ebx,eax
  421930:	mov    esp,0xad90e29d
  421935:	lods   eax,DWORD PTR ds:[esi]
  421936:	popf   
  421937:	sub    al,0x21
  421939:	ds sub eax,edx
  42193c:	sub    al,BYTE PTR [edi+0x15]
  42193f:	jb     0x42198b
  421941:	frstor [eax]
  421943:	xchg   esp,eax
  421944:	pop    ss
  421945:	out    0x54,eax
  421947:	cmp    DWORD PTR [eax-0x5206e9bb],eax
  42194d:	in     al,dx
  42194e:	dec    ecx
  42194f:	dec    ecx
  421950:	push   0x5e5255ea
  421955:	outs   dx,DWORD PTR ds:[esi]
  421956:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  421958:	dec    eax
  421959:	cmp    ebx,DWORD PTR [ecx+0x32]
  42195c:	pushf  
  42195d:	jmp    0xf117:0xaea06b6d
  421964:	jae    0x421909
  421966:	pop    es
  421967:	lea    esi,[ecx+0x328f75c5]
  42196d:	adc    dl,dl
  42196f:	popa   
  421970:	outs   dx,BYTE PTR ds:[esi]
  421971:	pop    ebx
  421972:	rcl    BYTE PTR [edx+0x1c],0x7f
  421976:	sub    DWORD PTR [ebx],esp
  421978:	pop    ecx
  421979:	fwait
  42197a:	inc    edx
  42197b:	sahf   
  42197c:	dec    esp
  42197d:	(bad)  
  42197e:	push   ecx
  42197f:	xchg   DWORD PTR es:[ebp-0x2a8bc724],ebp
  421986:	xor    DWORD PTR [esi+0x44],ebx
  421989:	je     0x421983
  42198b:	cmp    al,0xc6
  42198d:	scas   eax,DWORD PTR es:[edi]
  42198e:	inc    esp
  42198f:	add    DWORD PTR [ebp+edx*2+0x1c],esp
  421993:	cmp    ebp,DWORD PTR [eax+0x6e]
  421996:	jp     0x4219bd
  421998:	mov    ch,0x6c
  42199a:	fst    st(5)
  42199c:	add    cl,BYTE PTR [esi]
  42199e:	jmp    FWORD PTR ds:0x19d532b0
  4219a4:	out    dx,al
  4219a5:	daa    
  4219a6:	loope  0x4219e5
  4219a8:	add    DWORD PTR [eax-0x5d],0x8
  4219ac:	pusha  
  4219ad:	outs   dx,BYTE PTR ds:[esi]
  4219ae:	fimul  WORD PTR [eax+0x5eb59f1a]
  4219b4:	and    al,0x2b
  4219b6:	mul    BYTE PTR [edi+0x3215af83]
  4219bc:	add    cl,ch
  4219be:	or     al,0xd1
  4219c0:	jecxz  0x4219eb
  4219c2:	or     ch,BYTE PTR [esp+edi*8-0x6bef062e]
  4219c9:	dec    ecx
  4219ca:	adc    DWORD PTR [ecx+0x18721b4],ebx
  4219d0:	repz push ecx
  4219d2:	pop    eax
  4219d3:	out    0x59,al
  4219d5:	(bad)  
  4219d6:	xchg   esi,eax
  4219d7:	inc    ebp
  4219d8:	loope  0x4219d2
  4219da:	cmp    ebx,edi
  4219dc:	inc    edx
  4219dd:	aam    0xc6
  4219df:	ds push ds
  4219e1:	sub    bl,dl
  4219e3:	push   esp
  4219e4:	or     BYTE PTR [edi],cl
  4219e6:	test   DWORD PTR [esi-0x160000da],edx
  4219ec:	xchg   ebx,eax
  4219ed:	and    al,0x0
  4219ef:	add    BYTE PTR [ebx+0x5589f055],cl
  4219f5:	or     cl,ch
  4219f7:	stc    
  4219f8:	and    eax,DWORD PTR [eax]
  4219fa:	add    BYTE PTR [ebx+0x5d8b0855],cl
  421a00:	clc    
  421a01:	xor    edx,eax
  421a03:	xor    ebx,eax
  421a05:	sub    edx,ebx
  421a07:	sub    edx,esi
  421a09:	xor    edx,eax
  421a0b:	mov    DWORD PTR [ebp+0x8],edx
  421a0e:	mov    edx,DWORD PTR [ebp+0x8]
  421a11:	mov    ebx,DWORD PTR [ebp-0x58]
  421a14:	add    edx,0x5708f8
  421a1a:	jmp    0x423da3
  421a1f:	sub    BYTE PTR [edx],ch
  421a21:	addr16 jnp 0x421a8b
  421a24:	jnp    0x4219b2
  421a26:	jne    0x421a11
  421a28:	jne    0x421a13
  421a2a:	imul   edi
  421a2c:	and    al,0xc6
  421a2e:	inc    ecx
  421a2f:	sub    eax,0x67a79a6
  421a34:	pop    edi
  421a35:	jp     0x421ab1
  421a37:	dec    ebx
  421a38:	mov    WORD PTR [ecx],fs
  421a3a:	fld    QWORD PTR [eax-0x219298f]
  421a40:	cwde   
  421a41:	mov    cl,0x1d
  421a43:	add    DWORD PTR [eax],ecx
  421a45:	jmp    0x8c47:0x6f8bdfeb
  421a4c:	pop    edi
  421a4d:	mov    ah,0x5b
  421a4f:	pusha  
  421a50:	xchg   edx,eax
  421a51:	imul   esi,DWORD PTR [ebp-0x3afa4c35],0xffffff9f
  421a58:	mov    WORD PTR [eax+edx*1+0x7c],fs
  421a5c:	repz hlt 
  421a5e:	test   eax,0xef9fc714
  421a63:	rcr    BYTE PTR ds:0x9435df81,0x9c
  421a6a:	and    BYTE PTR [esi-0x68c664c5],ah
  421a70:	push   ecx
  421a71:	lock push cs
  421a73:	dec    ebp
  421a74:	inc    ecx
  421a75:	mov    dl,0x86
  421a77:	mov    ds:0x3712f7b7,eax
  421a7c:	and    DWORD PTR [ebx],0xffffff86
  421a7f:	popf   
  421a80:	and    BYTE PTR gs:[esi],bh
  421a83:	add    DWORD PTR ss:[ebx+ecx*2+0x1579a421],ecx
  421a8b:	out    dx,al
  421a8c:	sahf   
  421a8d:	(bad)  
  421a8f:	jmp    0x96c3:0x5d54b16a
  421a96:	mov    es,WORD PTR [esi+0x13]
  421a99:	xchg   edx,eax
  421a9a:	out    0x1f,al
  421a9c:	pop    ecx
  421a9d:	adc    esi,DWORD PTR [edx]
  421a9f:	push   edi
  421aa0:	push   edi
  421aa1:	sbb    esp,ebx
  421aa3:	inc    ebp
  421aa4:	imul   ebp,DWORD PTR [ebx],0x30601714
  421aaa:	push   cs
  421aab:	sti    
  421aac:	outs   dx,DWORD PTR ds:[esi]
  421aad:	xchg   edi,eax
  421aae:	mov    ss:0x13ed0614,al
  421ab4:	inc    esi
  421ab5:	out    0x3,eax
  421ab7:	test   esp,0x35f87980
  421abd:	sub    cl,bl
  421abf:	sbb    al,0xba
  421ac1:	xchg   esp,eax
  421ac2:	jb     0x421ae7
  421ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac5:	jno    0x421b27
  421ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ac8:	nop
  421ac9:	push   ecx
  421aca:	mov    ah,0xcf
  421acc:	xor    edx,DWORD PTR [edi]
  421ace:	enter  0x36fc,0xda
  421ad2:	and    DWORD PTR [edi-0x66974a3b],edx
  421ad8:	push   eax
  421ad9:	pop    ecx
  421ada:	xor    bh,ch
  421adc:	jl     0x421b5b
  421ade:	fild   DWORD PTR [ebx]
  421ae0:	pop    DWORD PTR es:[ebx]
  421ae3:	cld    
  421ae4:	jno    0x421aef
  421ae6:	mov    edx,0x6d280035
  421aeb:	fstp   DWORD PTR fs:[edx+ebx*2-0x591ae64f]
  421af3:	fs or  ebx,edi
  421af6:	test   al,0x2e
  421af8:	cli    
  421af9:	in     al,0xef
  421afb:	push   0xffffff8a
  421afd:	rol    BYTE PTR [ecx],cl
  421aff:	repz push es
  421b01:	call   0xbce6f8a0
  421b06:	mov    WORD PTR [ecx],cs
  421b08:	mov    bl,0x46
  421b0a:	add    eax,DWORD PTR [ebp-0x17]
  421b0d:	aaa    
  421b0e:	jp     0x421b7f
  421b10:	in     eax,0x44
  421b12:	sub    eax,0xeb46eb0e
  421b17:	and    al,ah
  421b19:	adc    BYTE PTR [ecx+0x37],ch
  421b1c:	(bad)  
  421b1e:	out    dx,al
  421b1f:	clc    
  421b20:	dec    ecx
  421b21:	rol    DWORD PTR ds:0xa6b0432a,0x3b
  421b28:	aas    
  421b29:	dec    esp
  421b2a:	retf   
  421b2b:	aaa    
  421b2c:	loope  0x421b17
  421b2e:	push   ebp
  421b2f:	adc    BYTE PTR [esi],dl
  421b31:	int    0x65
  421b33:	sar    bl,cl
  421b35:	inc    ebp
  421b36:	mov    al,ds:0xb4b7fa3a
  421b3b:	adc    eax,0xf98fd500
  421b40:	retf   0x2981
  421b43:	mov    ebx,DWORD PTR [edx+0x5f]
  421b46:	cmp    BYTE PTR [ebx+ecx*4],0x1f
  421b4a:	ds push eax
  421b4c:	je     0x421b37
  421b4e:	and    al,0xc
  421b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b51:	sub    ah,BYTE PTR [ebx]
  421b53:	mov    dh,0xf3
  421b55:	jns    0x421ba3
  421b57:	fist   WORD PTR [ebx+0x2a245f81]
  421b5d:	retf   0x3e6a
  421b60:	test   BYTE PTR [ecx+ebp*1],0xd
  421b64:	stos   DWORD PTR es:[edi],eax
  421b65:	xor    DWORD PTR [edi-0x56],ecx
  421b68:	mov    bh,0x65
  421b6a:	cmp    ecx,DWORD PTR [esi]
  421b6c:	or     BYTE PTR [edx+0x46],0xdb
  421b70:	fnstcw WORD PTR [ebp-0x45]
  421b73:	leave  
  421b74:	int3   
  421b75:	mov    ebx,0x2f5e6c0b
  421b7a:	cmp    bl,cl
  421b7c:	jns    0x421b66
  421b7e:	dec    esi
  421b7f:	or     edi,eax
  421b81:	or     DWORD PTR es:0x37fcaf8d,esi
  421b88:	adc    DWORD PTR [ebp-0x7e],0xffffffbc
  421b8c:	dec    esi
  421b8e:	or     ebx,DWORD PTR [ebx+0x60]
  421b91:	addr16 inc ecx
  421b93:	jle    0x421bf2
  421b95:	out    dx,eax
  421b96:	(bad)  
  421b97:	fmul   DWORD PTR [esi+0x79e93930]
  421b9d:	sub    DWORD PTR [edi+ecx*2],edx
  421ba0:	fwait
  421ba1:	jo     0x421bf1
  421ba3:	dec    esp
  421ba4:	push   eax
  421ba5:	push   ebp
  421ba6:	lds    ecx,FWORD PTR [edx-0x74]
  421ba9:	retf   0x524b
  421bac:	inc    esp
  421bad:	sar    BYTE PTR [eax+0x1d],cl
  421bb0:	mov    es,WORD PTR [esi-0x72]
  421bb3:	jb     0x421bf0
  421bb5:	test   BYTE PTR [eax-0x4774c041],0x42
  421bbc:	jmp    0xf542:0xc3c51ca5
  421bc3:	mov    ecx,0x6f8b3758
  421bc8:	dec    DWORD PTR [esp+eiz*8]
  421bcb:	cmp    eax,0x97eb670e
  421bd0:	pop    ecx
  421bd1:	popf   
  421bd2:	sahf   
  421bd3:	test   al,0x24
  421bd5:	popf   
  421bd6:	sub    eax,0xaa0f746e
  421bdb:	shl    cl,cl
  421bdd:	mov    esp,0x6dee851a
  421be2:	pop    es
  421be3:	jno    0x421bf7
  421be5:	scas   eax,DWORD PTR es:[edi]
  421be6:	stos   BYTE PTR es:[edi],al
  421be7:	fwait
  421be8:	es jne 0x421c69
  421beb:	fstp   QWORD PTR [ecx+0x37]
  421bee:	mov    ecx,eax
  421bf0:	and    al,0x61
  421bf2:	jb     0x421c30
  421bf4:	push   esp
  421bf5:	or     BYTE PTR [esi-0x697a0714],bl
  421bfb:	sub    ebx,DWORD PTR [ecx+eiz*1-0x5f]
  421bff:	fs mov esp,0x5f8aea52
  421c05:	xor    DWORD PTR [edi-0xc],ebp
  421c08:	mov    edi,0x41a07b24
  421c0d:	push   esi
  421c0e:	xor    BYTE PTR [ebx-0x1d0dcd2a],0xdd
  421c15:	mov    DWORD PTR [eax+0xde27b42],esp
  421c1b:	dec    ebp
  421c1c:	xor    al,0x2d
  421c1e:	mul    edi
  421c20:	cmp    BYTE PTR [ebx],dh
  421c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c23:	aaa    
  421c24:	jb     0x421be4
  421c26:	xchg   esi,eax
  421c27:	push   ecx
  421c28:	mov    ebx,0x6e2e774f
  421c2d:	sub    al,0x2f
  421c2f:	sub    eax,0x5cb0078b
  421c34:	or     esp,DWORD PTR [edi+ecx*1]
  421c37:	fist   DWORD PTR [edi+0x675b0b04]
  421c3e:	mov    dh,BYTE PTR [edx-0x24]
  421c41:	or     BYTE PTR [ebx],0x2f
  421c44:	or     eax,0x79e7398d
  421c49:	sbb    ebx,DWORD PTR [edi+0x4f]
  421c4c:	inc    eax
  421c4d:	mov    DWORD PTR [ebp+0x77],edx
  421c50:	mov    ecx,0x77ef7f52
  421c55:	push   eax
  421c56:	outs   dx,DWORD PTR ds:[esi]
  421c57:	hlt    
  421c58:	cwde   
  421c59:	add    ecx,DWORD PTR [ebx]
  421c5b:	adc    DWORD PTR [esp+ecx*4-0x1348be62],ebx
  421c62:	push   esi
  421c63:	dec    ecx
  421c64:	test   al,0x53
  421c66:	ss push ecx
  421c68:	xlat   BYTE PTR ds:[ebx]
  421c69:	pop    eax
  421c6a:	aad    0x4c
  421c6c:	push   ss
  421c6d:	fisttp QWORD PTR [esi+edi*8-0x2629cfc3]
  421c74:	lock and cl,0xfa
  421c78:	out    dx,eax
  421c79:	lds    edi,FWORD PTR [edi-0x54027046]
  421c7f:	in     al,0xbc
  421c81:	adc    ebp,DWORD PTR [ebp-0x35]
  421c84:	retf   0xaf45
  421c87:	mov    ds:0x2521ae40,eax
  421c8c:	cli    
  421c8d:	mov    ds:0x11b86416,al
  421c92:	(bad)  
  421c93:	out    0xb6,eax
  421c95:	out    dx,eax
  421c96:	test   DWORD PTR [ebx-0x251806df],edx
  421c9c:	xor    eax,0x8cb5cf1a
  421ca1:	scas   eax,DWORD PTR es:[edi]
  421ca2:	push   esp
  421ca3:	jp     0x421cc0
  421ca5:	add    al,0x0
  421ca7:	dec    esi
  421ca8:	adc    DWORD PTR [esi-0x3a9f796a],eax
  421cae:	inc    ebp
  421caf:	mov    dl,0xb7
  421cb1:	jecxz  0x421c74
  421cb3:	add    BYTE PTR [ecx-0x19fbabe6],cl
  421cb9:	pop    es
  421cba:	bound  ecx,QWORD PTR [edx]
  421cbc:	push   eax
  421cbd:	ins    BYTE PTR es:[edi],dx
  421cbe:	dec    ebx
  421cbf:	and    esi,DWORD PTR [ecx+0x7b]
  421cc2:	jg     0x421cea
  421cc4:	pop    esp
  421cc5:	cld    
  421cc6:	test   al,0x9
  421cc8:	pop    esp
  421cc9:	jae    0x421d01
  421ccb:	jp     0x421d4c
  421ccd:	ins    DWORD PTR es:[edi],dx
  421cce:	add    BYTE PTR [esi+0x7b905b7f],dh
  421cd4:	pop    ebx
  421cd5:	adc    BYTE PTR [ebp+0xc],0x9c
  421cd9:	push   es
  421cda:	test   DWORD PTR [edx-0x70],eax
  421cdd:	into   
  421cde:	xor    al,BYTE PTR [edi]
  421ce0:	cli    
  421ce1:	mov    bh,0xe4
  421ce3:	ins    BYTE PTR es:[edi],dx
  421ce4:	test   dh,bh
  421ce6:	jbe    0x421cc0
  421ce8:	fisttp DWORD PTR [ebx-0x2245f05]
  421cee:	mov    ch,0xb
  421cf0:	mov    al,BYTE PTR [esi]
  421cf2:	adc    ebp,DWORD PTR [edx-0xfd7ac09]
  421cf8:	div    cl
  421cfa:	cmp    ecx,DWORD PTR [edx-0x3]
  421cfd:	xor    edi,DWORD PTR [edx]
  421cff:	sbb    cl,dl
  421d01:	in     al,0xb0
  421d03:	inc    ecx
  421d04:	pop    esi
  421d05:	push   ecx
  421d06:	cwde   
  421d07:	pop    ebp
  421d08:	enter  0xffe0,0xe7
  421d0c:	mov    WORD PTR [ebx+0x4f6d1ab2],es
  421d12:	push   eax
  421d13:	dec    edx
  421d14:	inc    ebp
  421d15:	jp     0x421d21
  421d17:	xor    dh,0x54
  421d1a:	mov    ds:0x951b816c,al
  421d1f:	pushf  
  421d20:	idiv   BYTE PTR [ebp+0x5ece55e8]
  421d26:	jl     0x421d48
  421d28:	push   esp
  421d29:	push   0xe190b30a
  421d2e:	inc    ebp
  421d2f:	imul   esi,ecx,0xa427c399
  421d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d36:	xchg   ebx,eax
  421d37:	and    DWORD PTR [edx],ebp
  421d39:	push   DWORD PTR [esi+ecx*4]
  421d3c:	pop    ecx
  421d3d:	ss mov edi,0x53b0380
  421d43:	sbb    cl,dh
  421d45:	int3   
  421d46:	jecxz  0x421d42
  421d48:	push   di
  421d4a:	ins    DWORD PTR es:[edi],dx
  421d4b:	shl    eax,cl
  421d4d:	fild   DWORD PTR [eax+0x62b1abca]
  421d53:	cmp    DWORD PTR [edi-0x79769389],0xdb180189
  421d5d:	stos   BYTE PTR es:[edi],al
  421d5e:	and    bl,BYTE PTR [esi+0x5b9f99ea]
  421d64:	cmp    BYTE PTR [edx+edi*2+0x1daa0c8],dh
  421d6b:	ds mov ah,0x1a
  421d6e:	dec    esp
  421d6f:	xchg   esp,eax
  421d70:	pandn  mm2,QWORD PTR [eax+esi*8-0x51]
  421d75:	popf   
  421d76:	(bad)  
  421d77:	pushf  
  421d78:	mov    ebx,0x56a2eb77
  421d7d:	sub    al,0x7f
  421d7f:	fucom  st(1)
  421d81:	cmp    eax,DWORD PTR [edx-0x46a31590]
  421d87:	scas   al,BYTE PTR es:[edi]
  421d88:	and    BYTE PTR [ebp+0x6],bl
  421d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d8c:	iret   
  421d8d:	popf   
  421d8e:	sbb    BYTE PTR [ebx],cl
  421d90:	pop    ds
  421d91:	ret    0x4f90
  421d94:	sub    BYTE PTR [ecx-0x5f],ah
  421d97:	lods   al,BYTE PTR ds:[esi]
  421d98:	push   ebx
  421d99:	ds in  al,0xa5
  421d9c:	test   eax,0x5abf9c7f
  421da1:	jge    0x421d49
  421da3:	call   0x6cb35f11
  421da8:	(bad)  
  421da9:	in     al,dx
  421daa:	jno    0x421e20
  421dac:	add    BYTE PTR [eax+0x32],cl
  421daf:	inc    esi
  421db0:	out    0x21,al
  421db2:	fcom   QWORD PTR [ebp-0x25]
  421db5:	sub    al,0x7a
  421db7:	cmp    al,BYTE PTR [ebp-0x57]
  421dba:	cs call 0x21129014
  421dc0:	mov    bh,0x84
  421dc2:	push   0x30
  421dc4:	test   DWORD PTR [edi-0x5d703b67],0x289202fa
  421dce:	test   DWORD PTR [edi+0x6d],ebp
  421dd1:	loope  0x421de1
  421dd3:	xchg   esp,eax
  421dd4:	sahf   
  421dd5:	rol    BYTE PTR [ebx-0x2d7548be],1
  421ddb:	retf   0x7621
  421dde:	in     al,dx
  421ddf:	retf   0x98eb
  421de2:	add    al,0xd4
  421de4:	(bad)  
  421de5:	popa   
  421de6:	jae    0x421dc9
  421de8:	push   eax
  421de9:	push   0x33
  421deb:	xor    BYTE PTR [edx+edx*8+0x636f07a1],dh
  421df2:	neg    BYTE PTR [eax-0x76e01d1c]
  421df8:	nop
  421df9:	cdq    
  421dfa:	xor    ecx,DWORD PTR [ecx+0x3c72b8f]
  421e00:	xchg   ebx,eax
  421e01:	loope  0x421e29
  421e03:	mov    edx,esp
  421e05:	aad    0xea
  421e07:	dec    ecx
  421e08:	mov    ebp,0x7d4145a2
  421e0d:	aam    0x75
  421e0f:	inc    ebp
  421e10:	inc    dh
  421e12:	inc    edx
  421e13:	lock pop esi
  421e15:	fild   DWORD PTR [ebx-0xce0210f]
  421e1b:	jo     0x421da7
  421e1d:	inc    esi
  421e1e:	mov    ch,0x5a
  421e20:	or     ebp,DWORD PTR [eax]
  421e22:	cdq    
  421e23:	out    0xb4,eax
  421e25:	dec    esi
  421e26:	outs   dx,BYTE PTR ds:[esi]
  421e27:	icebp  
  421e28:	js     0x421e12
  421e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e2b:	aaa    
  421e2c:	ds pop ebx
  421e2e:	fld    DWORD PTR [ecx]
  421e30:	or     ebx,DWORD PTR [ebp-0x67c90664]
  421e36:	xor    eax,0x7444de51
  421e3b:	popa   
  421e3c:	pop    ds
  421e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e3e:	dec    edi
  421e3f:	ror    edx,0xa1
  421e42:	mov    esp,0x273abc9f
  421e47:	and    dl,bl
  421e49:	lock rcr BYTE PTR [ebp+0x1d],0x62
  421e4e:	fdivp  st(6),st
  421e50:	cmp    ah,BYTE PTR [edi-0x2]
  421e53:	cwde   
  421e54:	xor    cl,ah
  421e56:	pop    ds
  421e57:	mov    al,ds:0x47152f4a
  421e5c:	mov    WORD PTR [edx-0x799a17bc],fs
  421e62:	js     0x421eb3
  421e64:	out    0x10,eax
  421e66:	ret    0x258c
  421e69:	loope  0x421e2a
  421e6b:	jns    0x421e65
  421e6d:	xor    ebx,DWORD PTR [ebx+0x61]
  421e70:	adc    BYTE PTR [edx-0xa],ah
  421e73:	mov    edi,0xece5f31d
  421e78:	test   al,0xea
  421e7a:	out    0xc7,al
  421e7c:	in     al,dx
  421e7d:	mov    al,ds:0x36ce1573
  421e82:	popa   
  421e83:	adc    BYTE PTR [edi],dh
  421e85:	add    BYTE PTR [edx+0x1d8d9845],0xec
  421e8c:	rol    esp,0xff
  421e8f:	ins    DWORD PTR es:[edi],dx
  421e90:	jmp    0x7270ffc3
  421e95:	push   ds
  421e96:	jae    0x421e37
  421e98:	cs dec ebx
  421e9a:	push   esp
  421e9b:	dec    ebp
  421e9c:	not    ch
  421e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e9f:	jno    0x421ed7
  421ea1:	retf   
  421ea2:	cmp    dl,BYTE PTR [edx]
  421ea4:	les    edx,FWORD PTR [esi+0x6d4c2e3a]
  421eaa:	add    dh,BYTE PTR [edx]
  421eac:	imul   eax,ecx,0xd1f0acd0
  421eb2:	push   ecx
  421eb3:	dec    ebx
  421eb4:	test   DWORD PTR [ebx],edi
  421eb6:	inc    eax
  421eb7:	aaa    
  421eb8:	mov    es,ebx
  421eba:	xchg   esp,eax
  421ebb:	cmp    WORD PTR [edi+0x2c38c43b],bx
  421ec2:	test   BYTE PTR [ecx+0x4ef97c73],bl
  421ec8:	test   ecx,eax
  421eca:	ja     0x421eee
  421ecc:	cmp    esi,DWORD PTR gs:[ebx]
  421ecf:	dec    edi
  421ed0:	into   
  421ed1:	xchg   ecx,eax
  421ed2:	pop    ebx
  421ed3:	push   eax
  421ed4:	sub    esi,esi
  421ed6:	mov    dl,0x71
  421ed8:	xlat   BYTE PTR ds:[ebx]
  421ed9:	stc    
  421eda:	cwde   
  421edb:	mov    eax,0xfa6e150b
  421ee0:	jo     0x421f0a
  421ee2:	addr16 int 0x28
  421ee5:	(bad)  
  421ee6:	mov    edi,0xb803b981
  421eeb:	push   esi
  421eec:	js     0x421f65
  421eee:	leave  
  421eef:	pop    edi
  421ef0:	iret   
  421ef1:	or     ecx,DWORD PTR [edx+0x401037c3]
  421ef7:	mov    BYTE PTR [ecx+ebp*1+0x21],dl
  421efb:	push   ds
  421efc:	pop    edi
  421efd:	cld    
  421efe:	pop    esi
  421eff:	sbb    BYTE PTR [ecx-0x2e5c2b3d],bl
  421f05:	adc    eax,DWORD PTR [ebx]
  421f07:	loopne 0x421f6a
  421f09:	clc    
  421f0a:	xchg   BYTE PTR [ebx-0x4a3f6a79],ch
  421f10:	add    al,bh
  421f12:	push   esi
  421f13:	adc    BYTE PTR [ebx+ebp*1+0x20],cl
  421f17:	test   eax,0x91f5516b
  421f1c:	push   ebx
  421f1d:	adc    edi,DWORD PTR [ebx+0x3]
  421f20:	cmc    
  421f21:	add    eax,0x3ec9b8df
  421f26:	xor    ah,BYTE PTR [ebx-0x1f]
  421f29:	adc    dh,ch
  421f2b:	mov    ds:0x180039d1,al
  421f30:	fistp  WORD PTR [esp+ebp*1]
  421f33:	adc    ebx,DWORD PTR [eax-0x52602f47]
  421f39:	sbb    eax,0xd1c4ba82
  421f3e:	mov    cl,0x66
  421f40:	mov    edi,0x186e05ac
  421f45:	mov    ds:0x57cdf9cd,eax
  421f4a:	pop    ds
  421f4b:	test   DWORD PTR ds:0xc089095b,eax
  421f51:	lds    ecx,FWORD PTR ds:0x3f805cd8
  421f57:	(bad)  
  421f58:	out    0x16,al
  421f5a:	in     eax,dx
  421f5b:	mov    al,0x2b
  421f5d:	adc    BYTE PTR [ecx],ch
  421f5f:	iret   
  421f60:	dec    edx
  421f61:	ins    BYTE PTR es:[edi],dx
  421f62:	cld    
  421f63:	fiadd  WORD PTR [ebx-0x39]
  421f66:	pop    ebx
  421f67:	sti    
  421f68:	pusha  
  421f69:	rol    BYTE PTR [edx],cl
  421f6b:	imul   ecx,esp,0xffffffad
  421f6e:	test   eax,0xa6ee0f69
  421f73:	(bad)  
  421f74:	jmp    0x84e59e19
  421f79:	add    DWORD PTR [edi],edi
  421f7b:	cmp    DWORD PTR [edi],ebx
  421f7d:	push   0xcc0431d0
  421f82:	jo     0x421f0e
  421f84:	or     al,0xe3
  421f86:	push   ecx
  421f87:	pop    eax
  421f88:	cmp    ecx,DWORD PTR [eax]
  421f8a:	sbb    esi,DWORD PTR [edi-0x7c90e1e1]
  421f90:	mov    ds:0xed275939,al
  421f95:	lds    edx,FWORD PTR fs:[edx+0x603f2c45]
  421f9c:	pop    es
  421f9d:	lods   al,BYTE PTR ds:[esi]
  421f9e:	mov    esi,0xcfc0172e
  421fa3:	jp     0x421f79
  421fa5:	int    0x4d
  421fa7:	jle    0x421fa8
  421fa9:	pop    ds
  421faa:	pop    esp
  421fab:	and    al,BYTE PTR ds:0xc936cb6d
  421fb1:	aad    0xd9
  421fb3:	jb     0x421ff2
  421fb5:	in     al,dx
  421fb6:	mov    al,0xa3
  421fb8:	pop    ecx
  421fb9:	inc    edi
  421fba:	int    0x57
  421fbc:	retf   0xcf6b
  421fbf:	xchg   DWORD PTR [edi+0x6382c214],edx
  421fc5:	(bad)  
  421fc6:	fcomp  st(0)
  421fc8:	jb     0x42200a
  421fca:	xchg   edi,eax
  421fcb:	mov    cl,0x14
  421fcd:	mov    DWORD PTR cs:[esi+0x5c],ecx
  421fd1:	adc    BYTE PTR [esi+0x1bbca526],bl
  421fd7:	xor    al,0x81
  421fd9:	push   esi
  421fda:	mov    al,0xc8
  421fdc:	push   ds
  421fdd:	in     eax,0xd3
  421fdf:	outs   dx,DWORD PTR ds:[esi]
  421fe0:	jl     0x421f6e
  421fe2:	pop    edx
  421fe3:	xchg   BYTE PTR ds:0x56032ad9,dl
  421fe9:	fxch   st(1)
  421feb:	mov    al,ds:0xeba8a8b2
  421ff0:	lods   eax,DWORD PTR ds:[esi]
  421ff1:	fs pop edx
  421ff3:	in     eax,0xc2
  421ff5:	mov    ecx,0x551705ce
  421ffa:	rcl    ah,cl
  421ffc:	mov    eax,0x8c31ce0a
  422001:	jl     0x42200c
  422003:	inc    ebp
  422004:	adc    ah,BYTE PTR [ecx]
  422006:	xor    esi,DWORD PTR [ebp-0x5e52fc82]
  42200c:	mov    DWORD PTR [ebx-0x261a57a],esp
  422012:	or     BYTE PTR [ebx],ch
  422014:	mov    ebx,0x6def09dc
  422019:	dec    esi
  42201a:	aaa    
  42201b:	retf   
  42201c:	sbb    esi,ebp
  42201e:	mov    dl,0xee
  422020:	clc    
  422021:	mov    esi,0x29d8946f
  422026:	outs   dx,DWORD PTR ds:[esi]
  422027:	and    BYTE PTR [ecx+0x17feb3e2],cl
  42202d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42202e:	sar    edi,1
  422030:	stos   BYTE PTR es:[edi],al
  422031:	pushf  
  422032:	in     eax,dx
  422033:	push   eax
  422034:	adc    edx,ebx
  422036:	sahf   
  422037:	ja     0x42200f
  422039:	push   es
  42203a:	outs   dx,DWORD PTR ds:[esi]
  42203b:	fild   QWORD PTR ds:0xd1b2279e
  422041:	or     ecx,0x71
  422044:	dec    edi
  422045:	mov    ebp,0x95865d6a
  42204a:	xchg   ebx,eax
  42204b:	or     eax,0x8aa02039
  422050:	sub    BYTE PTR [edi+0x408598a7],0xf9
  422057:	lock jns 0x422058
  42205a:	inc    ecx
  42205b:	dec    ebx
  42205c:	jp     0x422064
  42205e:	fild   DWORD PTR [edx]
  422060:	mov    ebx,0x5abb620c
  422065:	jp     0x42207a
  422067:	rcr    eax,1
  422069:	and    eax,eax
  42206b:	push   cs
  42206c:	loopne 0x4220c7
  42206e:	inc    edx
  42206f:	or     DWORD PTR [esp+ebx*2-0x29bd4ea6],eax
  422076:	mov    esi,0xcdae614a
  42207b:	mov    dl,0x16
  42207d:	sub    al,0x63
  42207f:	std    
  422080:	xchg   ecx,eax
  422081:	xor    DWORD PTR [ebx+0x3c7bd1be],edi
  422087:	or     ah,BYTE PTR [esi+0x24]
  42208a:	push   esi
  42208b:	cmp    ecx,edi
  42208d:	imul   ecx,DWORD PTR [edx-0x48],0x4acf22cd
  422094:	add    dh,bl
  422096:	mov    bl,0xe0
  422098:	mov    ebx,esp
  42209a:	sub    dl,BYTE PTR [ebp+0x1ee6f22]
  4220a0:	dec    eax
  4220a1:	and    DWORD PTR [ebp+0x79],ecx
  4220a4:	adc    eax,0xcf717591
  4220a9:	cld    
  4220aa:	out    dx,eax
  4220ab:	int    0xb1
  4220ad:	mov    ch,0xda
  4220af:	pop    es
  4220b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220b1:	pop    ds
  4220b2:	jge    0x4220c7
  4220b4:	in     al,0xa0
  4220b6:	jp     0x422097
  4220b8:	sub    dl,bl
  4220ba:	mov    ebx,0xf3518443
  4220bf:	push   esp
  4220c0:	das    
  4220c1:	jle    0x4220b0
  4220c3:	repz cmp DWORD PTR [edx+0x1786235d],esi
  4220ca:	hlt    
  4220cb:	jmp    0xcc3c0e90
  4220d0:	add    al,0x98
  4220d2:	jns    0x4220fd
  4220d4:	push   esi
  4220d5:	mov    cl,BYTE PTR [si-0x2718]
  4220da:	jmp    0x42210e
  4220dc:	mov    edx,DWORD PTR [ebx-0x5a]
  4220df:	jne    0x4220ab
  4220e1:	inc    ebx
  4220e2:	repz push ds
  4220e4:	rcr    DWORD PTR [edi-0x7401baf8],1
  4220ea:	xor    BYTE PTR [eax+0x65c2ab3a],bl
  4220f0:	add    DWORD PTR [edi+0x2e],ecx
  4220f3:	push   ss
  4220f4:	mov    al,ds:0xa44b35a3
  4220f9:	or     eax,0x4fc2eda6
  4220fe:	in     eax,dx
  4220ff:	jns    0x4220ef
  422101:	mov    ebx,edi
  422103:	rol    ch,0x63
  422106:	push   ebp
  422107:	adc    dh,al
  422109:	adc    ah,BYTE PTR [ebx]
  42210b:	pop    edx
  42210c:	push   ebp
  42210d:	or     DWORD PTR [edi+0xbf2ca61],esi
  422113:	test   BYTE PTR [edx+0x6979212],bh
  422119:	inc    esi
  42211a:	(bad)  
  42211c:	xor    BYTE PTR [ebx+0x5f],bl
  42211f:	scas   eax,DWORD PTR es:[edi]
  422120:	mov    ebx,0x8b1cb93c
  422125:	nop
  422126:	xor    eax,0x3146cbd3
  42212b:	dec    WORD PTR [edx]
  42212e:	mov    dh,0xbe
  422130:	jns    0x4220b4
  422132:	ror    cl,0x9a
  422135:	(bad)  
  422136:	fild   WORD PTR [ebx]
  422138:	nop
  422139:	adc    BYTE PTR gs:[esi+0x28d9f90],0x74
  422141:	jb     0x4220fd
  422143:	jle    0x4220c6
  422145:	dec    ebp
  422146:	xor    eax,0x430c58e2
  42214b:	xchg   esp,eax
  42214c:	mov    esi,0x50fcd14b
  422151:	push   0x54dd42ed
  422156:	in     al,dx
  422157:	mov    ds:0x9a0ae61a,eax
  42215c:	xchg   BYTE PTR [esi+0x62369de6],dh
  422162:	mov    eax,?
  422164:	xor    edx,ecx
  422166:	mov    dh,0x47
  422168:	push   0x1f1aa672
  42216d:	leave  
  42216e:	push   edx
  42216f:	imul   esi,DWORD PTR [ecx+0x6c],0xa805601f
  422176:	into   
  422177:	test   eax,0x8d141615
  42217c:	out    0x4,eax
  42217e:	mov    ecx,0x246b524a
  422183:	fistp  QWORD PTR [edx+0x5cc89de9]
  422189:	ficomp DWORD PTR [esi+0x55d3b6f4]
  42218f:	int3   
  422190:	mov    ah,0x34
  422192:	arpl   WORD PTR [ecx-0x685c4d62],bp
  422198:	sub    BYTE PTR [esi+0x25],al
  42219b:	jo     0x422197
  42219d:	rcl    DWORD PTR cs:[edi+0x75],0x66
  4221a2:	or     al,ah
  4221a4:	clc    
  4221a5:	ins    DWORD PTR es:[edi],dx
  4221a6:	(bad)  
  4221a7:	and    eax,0xab91fbc9
  4221ac:	pop    ebx
  4221ad:	ret    0x7f36
  4221b0:	push   cs
  4221b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b2:	xor    ebp,DWORD PTR [ebp-0x488ae917]
  4221b8:	rdpmc  
  4221ba:	shr    ch,0xe1
  4221bd:	pop    esp
  4221be:	pop    ebx
  4221bf:	or     DWORD PTR [esi+0x7ac11109],eax
  4221c5:	or     al,0xa4
  4221c7:	add    al,0x53
  4221c9:	pop    ebp
  4221ca:	nop
  4221cb:	shl    BYTE PTR [ebx-0x78],0x49
  4221cf:	pushf  
  4221d0:	shl    BYTE PTR [eax+esi*1],1
  4221d3:	retf   
  4221d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d6:	test   DWORD PTR [eax+0x16],ebx
  4221d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221da:	mov    ah,0xa2
  4221dc:	or     esi,edi
  4221de:	jmp    0xbcb9441e
  4221e3:	clc    
  4221e4:	or     BYTE PTR [ebx+0x2d],bl
  4221e7:	mov    esi,0x36efd372
  4221ec:	cmp    al,0xf0
  4221ee:	jno    0x4221f3
  4221f0:	dec    eax
  4221f1:	xor    DWORD PTR [edx+0x13],ebx
  4221f4:	enter  0xe8e9,0xc8
  4221f8:	aam    0x37
  4221fa:	enter  0x7339,0xfa
  4221fe:	outs   dx,BYTE PTR ds:[esi]
  4221ff:	push   eax
  422200:	push   esp
  422201:	into   
  422202:	push   esp
  422203:	add    DWORD PTR [eax+0x5e],edi
  422206:	push   edi
  422207:	data16 fs (bad) 
  42220a:	add    al,0x32
  42220c:	in     al,0xdc
  42220e:	(bad)  [edx-0x45169fea]
  422214:	mov    cl,0x1f
  422216:	mov    ecx,0x1980ebaf
  42221b:	dec    DWORD PTR [esi+0x44]
  42221e:	loope  0x422237
  422220:	push   ebx
  422221:	dec    ebx
  422222:	ficomp WORD PTR [ebp+0x254d6654]
  422228:	repnz xchg ebx,eax
  42222a:	add    BYTE PTR [ebx+edi*8],al
  42222d:	in     al,dx
  42222e:	push   si
  422230:	pop    ss
  422231:	adc    dl,dh
  422233:	pop    esp
  422234:	dec    ebx
  422235:	ficomp DWORD PTR [eax]
  422237:	pop    ds
  422238:	pop    eax
  422239:	sub    dl,dl
  42223b:	out    0x77,eax
  42223d:	in     eax,dx
  42223e:	sbb    ah,BYTE PTR [edx-0x1e4c6fc6]
  422244:	and    ah,ah
  422246:	in     al,dx
  422247:	cwde   
  422248:	push   edx
  422249:	inc    esp
  42224a:	and    bh,ch
  42224c:	(bad)  
  42224d:	jmp    0x42223f
  42224f:	(bad)  
  422252:	jl     0x4222b7
  422254:	xchg   esi,eax
  422255:	jg     0x42226a
  422257:	jmp    0x9aff0ccf
  42225c:	push   ds
  42225d:	cs mov edi,0xa3b06112
  422263:	scas   al,BYTE PTR es:[edi]
  422264:	sub    DWORD PTR [ebx],0x346b3469
  42226a:	push   ebp
  42226b:	inc    eax
  42226c:	les    esi,FWORD PTR [eax+0x5750e188]
  422272:	mov    bl,BYTE PTR [ebp*4+0x2d5fbe0c]
  422279:	fs xchg ebx,esp
  42227c:	repz fild QWORD PTR [eax-0xf]
  422280:	cmp    eax,DWORD PTR [ecx+0x21ee65fb]
  422286:	into   
  422287:	int    0x2b
  422289:	mov    dh,BYTE PTR [eax-0x74]
  42228c:	iret   
  42228d:	mov    al,al
  42228f:	daa    
  422290:	(bad)  
  422291:	and    cl,ch
  422293:	and    al,0xa4
  422295:	inc    esi
  422296:	aas    
  422297:	(bad)  
  422298:	in     al,dx
  422299:	pop    ecx
  42229a:	mov    dl,0x13
  42229c:	loopne 0x422316
  42229e:	out    dx,al
  42229f:	push   0xffffff91
  4222a1:	lea    eax,[edx+0x4e02643e]
  4222a7:	aaa    
  4222a8:	es xchg ecx,eax
  4222aa:	push   0x28
  4222ac:	sbb    BYTE PTR [esi+esi*8+0x2a659d71],0x4e
  4222b4:	jnp    0x422245
  4222b6:	cmp    dh,BYTE PTR [ebx-0x1c818f21]
  4222bc:	push   edi
  4222bd:	dec    ebx
  4222be:	mov    esi,0xbb03c6ae
  4222c3:	jae    0x4222d4
  4222c5:	fadd   DWORD PTR [edx-0x41]
  4222c8:	mov    dh,0x58
  4222ca:	mov    esi,0xd178cf78
  4222cf:	ret    0xaeef
  4222d2:	out    0xb6,eax
  4222d4:	dec    eax
  4222d5:	test   BYTE PTR [edx+0x75a79862],bl
  4222db:	ja     0x42228e
  4222dd:	cmp    eax,ebx
  4222df:	cmp    eax,0x19c878c3
  4222e4:	xchg   ebp,eax
  4222e5:	and    eax,0xda1d7d41
  4222ea:	cs test edi,edx
  4222ed:	pop    ebp
  4222ee:	cdq    
  4222ef:	jl     0x4222f3
  4222f1:	aaa    
  4222f2:	jecxz  0x4222d1
  4222f4:	aam    0x58
  4222f6:	sub    BYTE PTR [ebx+0x7fc69513],ah
  4222fc:	in     al,0xf0
  4222fe:	inc    eax
  4222ff:	or     ch,BYTE PTR [edx+esi*4]
  422302:	or     eax,DWORD PTR [esi]
  422304:	seto   BYTE PTR [ebx+ebp*2-0x29221139]
  42230c:	repnz aam 0x9c
  42230f:	mov    edi,0xee1cfb1c
  422314:	addr16 leave 
  422316:	pop    ecx
  422317:	and    eax,0x84f1061e
  42231c:	ficomp WORD PTR [ecx-0x2b]
  42231f:	add    edi,ecx
  422321:	pop    esp
  422322:	xchg   ecx,eax
  422323:	dec    ebp
  422324:	jle    0x42230d
  422326:	mov    eax,0x831b0494
  42232b:	je     0x42238d
  42232d:	inc    ecx
  42232e:	mov    ah,0x57
  422330:	in     eax,0x3a
  422332:	pop    eax
  422333:	jl     0x4222ea
  422335:	jae    0x4222b9
  422337:	mov    ah,0x3f
  422339:	mul    al
  42233b:	imul   esp,DWORD PTR [edx-0x2b],0x318829df
  422342:	fnstsw WORD PTR [edi]
  422344:	aas    
  422345:	into   
  422346:	jmp    0x422380
  422348:	or     BYTE PTR [esi],cl
  42234a:	and    bl,0x65
  42234d:	inc    edi
  42234e:	pushf  
  42234f:	aas    
  422350:	jns    0x422326
  422352:	hlt    
  422353:	lods   eax,DWORD PTR ds:[esi]
  422354:	adc    dh,bh
  422356:	push   edi
  422357:	mov    ecx,0xedf93398
  42235c:	in     eax,0xba
  42235e:	imul   ecx,DWORD PTR [ebx+esi*2+0x2f2bb2e8],0x87d6c41c
  422369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236a:	daa    
  42236b:	pop    ds
  42236c:	jmp    0xdd99:0xce80646
  422373:	call   0xaf10:0x5eec76cb
  42237a:	cmp    DWORD PTR [edi+0xfaf1542],0x9519c9e4
  422384:	frstor [esi-0x41]
  422387:	addr16 cmp dl,cl
  42238a:	out    0x2b,al
  42238c:	mov    edx,0x9ef85d4d
  422391:	xchg   ecx,eax
  422392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422393:	js     0x4223d4
  422395:	pop    edi
  422396:	mov    al,ds:0x93ddf6
  42239b:	repz pop ebx
  42239d:	lods   al,BYTE PTR ds:[esi]
  42239e:	xor    eax,0xa689f31b
  4223a3:	ror    BYTE PTR [edi],0x83
  4223a6:	sub    BYTE PTR [ebp+0x55],cl
  4223a9:	jecxz  0x42238a
  4223ab:	aaa    
  4223ac:	pop    edx
  4223ad:	xor    DWORD PTR [ebx+edx*8],0x8ef055ff
  4223b4:	mul    DWORD PTR [eax-0x26e09035]
  4223ba:	or     eax,0xcc09a6fb
  4223bf:	dec    eax
  4223c0:	(bad)  
  4223c1:	imul   eax,DWORD PTR [eax],0x39
  4223c4:	or     BYTE PTR ds:0xbea32f2c,al
  4223ca:	mov    ecx,0xce93a29
  4223cf:	and    ebx,DWORD PTR [ecx+0x502ecd17]
  4223d5:	fnstcw WORD PTR [edi+0x40ce8d1]
  4223db:	jmp    0x422416
  4223dd:	add    ebp,ebp
  4223df:	push   edi
  4223e0:	ror    BYTE PTR [eax],cl
  4223e2:	js     0x422372
  4223e4:	mov    bh,BYTE PTR [ecx]
  4223e6:	dec    esi
  4223e8:	popf   
  4223e9:	sub    eax,0x6930925c
  4223ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ef:	mov    ecx,0xa61e89c9
  4223f4:	xlat   BYTE PTR ds:[ebx]
  4223f5:	call   0x5832638b
  4223fa:	(bad)  
  4223fb:	fcomp  DWORD PTR [ecx+0x74]
  4223fe:	gs repnz push ds
  422401:	(bad)  
  422403:	into   
  422404:	jae    0x4223b6
  422406:	push   0xffffffb3
  422408:	jp     0x422456
  42240a:	mov    esp,0xfbc4e1d5
  42240f:	cmp    eax,0xfd56d220
  422414:	dec    eax
  422415:	ins    BYTE PTR es:[edi],dx
  422416:	push   0x79ed8cb7
  42241b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42241d:	(bad)  
  42241e:	shl    DWORD PTR [edi-0x7a],0xd
  422422:	addr16 clc 
  422424:	push   ecx
  422425:	popf   
  422426:	and    BYTE PTR [esi-0x39],ah
  422429:	dec    edi
  42242a:	fld    DWORD PTR [edi]
  42242c:	push   ds
  42242d:	mov    dl,0x91
  42242f:	lods   al,BYTE PTR ds:[esi]
  422430:	add    BYTE PTR [ecx],cl
  422432:	out    0xe6,eax
  422434:	jp     0x4223e8
  422436:	dec    ebx
  422437:	mov    esp,0x5b5e484a
  42243c:	sbb    BYTE PTR [edx+0x501a5a20],ah
  422442:	adc    eax,0x362c6c0
  422447:	and    al,0x9a
  422449:	sar    BYTE PTR [eax-0x6307b85b],1
  42244f:	sbb    dh,ch
  422451:	sub    eax,0x72ea6ab3
  422456:	xor    DWORD PTR [ebx+0x31],esi
  422459:	sbb    ah,dh
  42245b:	dec    edx
  42245c:	in     al,0xcb
  42245e:	push   0xf1ac4be9
  422463:	not    BYTE PTR [ebx]
  422465:	das    
  422466:	inc    ebp
  422467:	das    
  422468:	mov    edi,DWORD PTR [edx+0x3a]
  42246b:	std    
  42246c:	xlat   BYTE PTR ds:[ebx]
  42246d:	add    ch,BYTE PTR [esi+0x4c]
  422470:	add    DWORD PTR [edi-0x7f],0x389ef8f0
  422477:	nop
  422478:	cmp    al,0x99
  42247a:	daa    
  42247b:	clc    
  42247c:	cmp    BYTE PTR [ebp-0x7d],ch
  42247f:	mov    eax,ds:0x2c934264
  422484:	sar    DWORD PTR [esi-0xd],cl
  422487:	xchg   edx,eax
  422488:	pop    esi
  422489:	int    0xd7
  42248b:	cmp    al,0x19
  42248d:	cld    
  42248e:	sbb    DWORD PTR [ebp+0x47],edi
  422491:	retf   0x20ee
  422494:	out    dx,eax
  422495:	xchg   ebp,eax
  422496:	into   
  422497:	dec    esp
  422498:	das    
  422499:	jns    0x4224ec
  42249b:	int3   
  42249c:	pusha  
  42249d:	mov    ebx,0x304f92ce
  4224a2:	(bad)  
  4224a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224a4:	in     eax,0x10
  4224a6:	lods   al,BYTE PTR ds:[esi]
  4224a7:	lahf   
  4224a8:	iret   
  4224a9:	push   esp
  4224aa:	dec    edx
  4224ab:	push   edx
  4224ac:	dec    DWORD PTR [esi-0x49]
  4224af:	bound  ecx,QWORD PTR [ebx+0x8]
  4224b2:	mov    eax,0x8a649b5b
  4224b7:	push   edx
  4224b8:	jne    0x42245b
  4224ba:	mov    cl,0xc5
  4224bc:	out    0xd3,eax
  4224be:	dec    eax
  4224bf:	mov    ch,0xd2
  4224c1:	adc    DWORD PTR [edi],esi
  4224c3:	and    eax,0x7437b010
  4224c8:	adc    al,0xfa
  4224ca:	jns    0x4224b6
  4224cc:	ss dec esi
  4224ce:	nop
  4224cf:	xchg   BYTE PTR [edi],dl
  4224d1:	js     0x422510
  4224d3:	jnp    0x42247e
  4224d5:	test   DWORD PTR [edi-0x30d5e0ac],edi
  4224db:	lock mov edx,DWORD PTR [eax+esi*1]
  4224df:	sahf   
  4224e0:	(bad)  
  4224e2:	xchg   BYTE PTR [ebx-0x72],cl
  4224e5:	sti    
  4224e6:	push   ebx
  4224e7:	repnz mov ds:0x8d802d94,eax
  4224ed:	push   ebp
  4224ee:	addr16 mov dl,0xdc
  4224f1:	xor    DWORD PTR [ebx+0x5c30c8dc],edi
  4224f7:	sbb    cl,BYTE PTR ss:[ebp-0x79b6a4]
  4224fe:	popf   
  4224ff:	into   
  422500:	xchg   ecx,eax
  422501:	push   ds
  422502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422503:	(bad)  
  422504:	es lahf 
  422506:	mov    eax,ds:0xf822f556
  42250b:	int    0x3
  42250d:	fsubp  st(1),st
  42250f:	loop   0x422589
  422511:	push   ss
  422512:	xchg   ebp,eax
  422513:	mov    bh,0x31
  422515:	jmp    0xf06:0xb3477f5c
  42251c:	leave  
  42251d:	lods   al,BYTE PTR ds:[esi]
  42251e:	nop
  42251f:	inc    eax
  422520:	mov    ds:0x5b57cc35,al
  422525:	mov    cs,WORD PTR [esi]
  422527:	rol    BYTE PTR [ebx-0x49],cl
  42252a:	std    
  42252b:	imul   ebx,DWORD PTR [ebx+ecx*1-0x343b04e8],0x7598547
  422536:	test   al,0x6d
  422538:	fcom   QWORD PTR [esi+eax*4]
  42253b:	inc    edx
  42253c:	test   eax,0xe0ea303f
  422541:	adc    al,0xc2
  422543:	jb     0x422547
  422545:	aad    0x38
  422547:	jae    0x4225ac
  422549:	dec    eax
  42254a:	mov    dh,BYTE PTR [eax+ecx*4-0x3b7ec1a2]
  422551:	fist   WORD PTR ds:0xc6cc9ed8
  422557:	xchg   ebx,eax
  422558:	not    BYTE PTR [eax]
  42255a:	popf   
  42255b:	fsub   DWORD PTR [esi+0x411bca4]
  422561:	fwait
  422562:	mov    dh,0x97
  422564:	sub    BYTE PTR [eax],dl
  422566:	addr16 retf 0x5c06
  42256a:	inc    esp
  42256b:	cwde   
  42256c:	out    0x28,al
  42256e:	push   edi
  42256f:	arpl   WORD PTR [eax-0x47],di
  422572:	mov    WORD PTR [eax+0x59],ds
  422575:	jl     0x4225a7
  422577:	sub    al,0x86
  422579:	callw  0x3e76
  42257d:	fild   QWORD PTR [ebx]
  42257f:	mov    dh,0x18
  422581:	jmp    0x55f00dd3
  422586:	test   BYTE PTR [edi+0x0],ah
  422589:	xchg   ebx,eax
  42258a:	fcomp  DWORD PTR [ecx]
  42258c:	mov    esi,0x6d187f7
  422591:	xchg   ebp,eax
  422592:	sbb    al,0x84
  422594:	icebp  
  422595:	jl     0x422613
  422597:	fst    QWORD PTR [ebx+0x30b83779]
  42259d:	or     BYTE PTR [ecx-0x3f],0x83
  4225a1:	dec    ebx
  4225a2:	shl    BYTE PTR [ebx+0x77ab44ec],1
  4225a8:	inc    ecx
  4225a9:	outs   dx,BYTE PTR ds:[esi]
  4225aa:	pop    ebx
  4225ab:	data16 in al,0xb8
  4225ae:	add    al,0xb2
  4225b0:	cmp    al,0xc3
  4225b2:	or     DWORD PTR [esi-0x54],0x18a9492b
  4225b9:	xchg   esi,eax
  4225ba:	data16 loop 0x422613
  4225bd:	jmp    0x6bb8ea03
  4225c2:	clc    
  4225c3:	sbb    DWORD PTR [ecx+0x4],ecx
  4225c6:	nop
  4225c7:	pop    ds
  4225c8:	mov    cl,0xdf
  4225ca:	cli    
  4225cb:	sbb    ah,bh
  4225cd:	sub    ecx,DWORD PTR [edx-0x7563781]
  4225d3:	sub    eax,ebp
  4225d5:	xchg   ebx,eax
  4225d6:	or     DWORD PTR [eax+0x63aa9cf7],edx
  4225dc:	arpl   bx,bx
  4225de:	pop    edx
  4225df:	hlt    
  4225e0:	hlt    
  4225e1:	adc    eax,0xb034bdff
  4225e6:	cmovo  eax,DWORD PTR [ebx+0x9]
  4225ea:	mov    bh,0xa
  4225ec:	pop    esi
  4225ed:	xor    edx,eax
  4225ef:	mov    dh,0x1e
  4225f1:	jns    0x42263f
  4225f3:	adc    edi,DWORD PTR [esi+ebp*4]
  4225f6:	pop    edi
  4225f7:	fdiv   QWORD PTR [ebx+eax*1]
  4225fa:	dec    ebp
  4225fb:	push   0x49
  4225fd:	mov    ds:0xc77c4ac9,ax
  422603:	test   eax,0x19f98df
  422608:	lods   al,BYTE PTR ds:[esi]
  422609:	ret    0xc548
  42260c:	cmp    esp,edi
  42260e:	cmp    ebp,edi
  422610:	dec    ecx
  422611:	mov    dl,0xa0
  422613:	cmp    BYTE PTR [esi-0x62],dh
  422616:	dec    eax
  422617:	mov    ebp,gs
  422619:	sub    al,0x2d
  42261b:	ret    0x7120
  42261e:	adc    BYTE PTR [edx-0x716f979e],ch
  422624:	aam    0xcc
  422626:	imul   esp,DWORD PTR [eax-0x595685d0],0x3c90231
  422630:	cli    
  422631:	mov    ds:0x3e5e4596,eax
  422636:	iret   
  422637:	inc    ecx
  422638:	rcr    DWORD PTR [esi],0x44
  42263b:	mov    dh,0x83
  42263d:	hlt    
  42263e:	and    eax,0x3b23fa71
  422643:	and    BYTE PTR [edx-0x7b9aac6],0x55
  42264a:	push   esi
  42264b:	(bad)  
  42264c:	pop    edi
  42264d:	cmc    
  42264e:	lods   al,BYTE PTR ds:[esi]
  42264f:	push   edx
  422650:	outs   dx,BYTE PTR ds:[esi]
  422651:	rcl    al,cl
  422653:	push   ecx
  422654:	xchg   ebx,eax
  422655:	pop    edi
  422656:	and    edi,eax
  422658:	iret   
  422659:	enter  0xbcf0,0xd3
  42265d:	or     esp,ebx
  42265f:	pop    ds
  422660:	xor    BYTE PTR [esi-0x50],cl
  422663:	stc    
  422664:	and    bh,BYTE PTR [eax-0x5a]
  422667:	test   eax,eax
  422669:	or     eax,0x48d7315b
  42266e:	xlat   BYTE PTR ds:[ebx]
  42266f:	retf   0xd3ee
  422672:	inc    ecx
  422673:	fdivr  QWORD PTR [eax+ecx*4+0x5dab5015]
  42267a:	int    0xb3
  42267c:	imul   DWORD PTR [ebx+ecx*4]
  42267f:	es popa 
  422681:	pop    ebp
  422682:	in     eax,dx
  422683:	mov    WORD PTR [ecx-0x8f38ebf],?
  422689:	outs   dx,DWORD PTR ds:[esi]
  42268a:	adc    al,0x89
  42268c:	stos   BYTE PTR es:[edi],al
  42268d:	fstp   QWORD PTR [ebx+0x3b]
  422690:	sub    BYTE PTR [ecx+0x3b],0xbc
  422694:	mov    WORD PTR [edi-0x5a765c32],fs
  42269a:	dec    ebp
  42269b:	mov    esp,0xed75594
  4226a0:	fcom   DWORD PTR [edx+0x66]
  4226a3:	rcr    DWORD PTR [esp+eax*4+0x192f2a42],cl
  4226aa:	fstp   QWORD PTR [edi]
  4226ac:	enter  0xaba8,0xd4
  4226b0:	dec    ebx
  4226b1:	sbb    al,0xef
  4226b3:	and    esp,esp
  4226b5:	jmp    0x9f8a68d3
  4226ba:	adc    DWORD PTR [ebx+esi*4],0x5f
  4226be:	cmp    al,BYTE PTR [eax]
  4226c0:	das    
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	mov    eax,0x653b3e51
  4226c7:	(bad)  
  4226c8:	cmc    
  4226c9:	push   esp
  4226ca:	push   esp
  4226cb:	push   cs
  4226cc:	fs dec esp
  4226ce:	inc    esp
  4226cf:	mov    esp,esi
  4226d1:	lods   al,BYTE PTR ds:[esi]
  4226d2:	fsub   QWORD PTR [ebx-0x3d]
  4226d5:	mov    BYTE PTR [ebp+0x655d3dbe],dl
  4226db:	jle    0x4226cf
  4226dd:	cmp    edi,DWORD PTR [ebp-0x7d]
  4226e0:	xor    al,0x5c
  4226e2:	sbb    eax,0x7e14e060
  4226e7:	bound  eax,QWORD PTR [ecx+0x6510f871]
  4226ed:	dec    edx
  4226ee:	pop    esp
  4226ef:	adc    eax,DWORD PTR [ecx-0x6]
  4226f2:	mov    WORD PTR [eax-0x5e03a5de],?
  4226f8:	or     edi,esi
  4226fa:	push   cs
  4226fb:	test   dh,0x8f
  4226fe:	pop    ebp
  4226ff:	add    cl,BYTE PTR gs:[eax]
  422702:	xchg   cl,bh
  422704:	into   
  422705:	iret   
  422706:	repz xor al,0x8a
  422709:	mov    esp,DWORD PTR [edi+0x1cad76b2]
  42270f:	daa    
  422710:	push   0xfffffffa
  422712:	sbb    eax,0x5bcc4c7b
  422717:	xchg   BYTE PTR [edx+0x1c6fcc0a],ah
  42271d:	fucomip st,st(5)
  42271f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422720:	xchg   ecx,eax
  422721:	sub    edi,ebp
  422723:	loop   0x4226ca
  422725:	shl    BYTE PTR [edx-0x5c21fd4c],cl
  42272b:	xor    BYTE PTR [edi],0xab
  42272e:	sub    esp,DWORD PTR [ecx-0x70b9c380]
  422734:	mov    ds:0x7d2c6750,eax
  422739:	int    0xd3
  42273b:	(bad)
  422740:	int    0xfb
  422742:	loop   0x4227ba
  422744:	in     al,dx
  422745:	test   edi,edx
  422747:	xchg   ebp,eax
  422748:	ds cwde 
  42274a:	aaa    
  42274b:	add    eax,0xd01febe
  422750:	cs adc al,0xaf
  422753:	or     edx,DWORD PTR ds:0xf71ec1e6
  422759:	push   ds
  42275a:	(bad)
  42275e:	das    
  42275f:	push   edx
  422760:	out    0x9c,eax
  422762:	inc    ecx
  422763:	scas   eax,DWORD PTR es:[edi]
  422764:	popf   
  422765:	jge    0x4226fa
  422767:	(bad)  
  422769:	or     ah,0x82
  42276c:	xor    BYTE PTR gs:[ecx+0x6d6c11ec],0x3b
  422774:	jmp    FWORD PTR [ebp-0x3063972f]
  42277a:	scas   eax,DWORD PTR es:[edi]
  42277b:	out    0xd2,al
  42277d:	push   ecx
  42277e:	and    BYTE PTR [eax-0x47310806],al
  422784:	xor    eax,DWORD PTR [ebp-0x34a74e99]
  42278a:	mov    esi,0x3cef81ef
  42278f:	or     DWORD PTR [eax],esp
  422791:	dec    ecx
  422792:	inc    edi
  422793:	add    eax,0x29fd3cee
  422798:	add    DWORD PTR [edi+0x171c0630],esp
  42279e:	mov    ah,0x17
  4227a0:	xchg   ebp,eax
  4227a1:	aaa    
  4227a2:	hlt    
  4227a3:	neg    esi
  4227a5:	push   ebp
  4227a6:	cwde   
  4227a7:	cmp    bl,BYTE PTR [ebp+0x432caa00]
  4227ad:	jmp    0x44ef:0xcfbdb9a2
  4227b4:	jl     0x422815
  4227b6:	fmul   DWORD PTR [edx-0xd33ac9b]
  4227bc:	mov    dh,0x23
  4227be:	lods   al,BYTE PTR ds:[esi]
  4227bf:	jno    0x4227df
  4227c1:	aad    0x4b
  4227c3:	push   cs
  4227c4:	push   ebx
  4227c5:	mov    ecx,0x766c311e
  4227ca:	jl     0x4227f3
  4227cc:	bound  ebp,QWORD PTR [esi-0x5]
  4227cf:	or     ah,0x3a
  4227d2:	ins    BYTE PTR es:[edi],dx
  4227d3:	xor    DWORD PTR [edx+0xd],edx
  4227d6:	retf   
  4227d7:	sub    al,0x9
  4227d9:	in     al,dx
  4227da:	clc    
  4227db:	cdq    
  4227dc:	cmc    
  4227dd:	test   eax,0xfc420150
  4227e2:	ja     0x422764
  4227e4:	dec    edx
  4227e5:	cmc    
  4227e6:	push   edi
  4227e7:	fscale 
  4227e9:	push   ds
  4227ea:	ret    0x983b
  4227ed:	or     al,0x25
  4227ef:	ficomp WORD PTR [ebp+0xd]
  4227f2:	mov    ch,0xf
  4227f4:	jmp    0x5905ccf9
  4227f9:	cli    
  4227fa:	stc    
  4227fb:	fdiv   st,st(0)
  4227fd:	cs in  al,dx
  4227ff:	test   BYTE PTR [esi+0x17],ah
  422802:	add    DWORD PTR [edx],esp
  422804:	out    0x51,eax
  422806:	outs   dx,DWORD PTR ds:[esi]
  422807:	gs pop ss
  422809:	mov    esp,0xff40bb60
  42280e:	sbb    BYTE PTR ds:0x4e153468,0x13
  422815:	add    DWORD PTR [edi+0x49],0xfc0db39a
  42281c:	jg     0x422881
  42281e:	scas   al,BYTE PTR es:[edi]
  42281f:	mov    ch,0x92
  422821:	in     eax,dx
  422822:	cmp    DWORD PTR [ebx-0x2],ebp
  422825:	and    BYTE PTR [ecx-0x4f1f448c],al
  42282b:	fsub   QWORD PTR [ebp+0x34]
  42282e:	mov    dl,0xd9
  422830:	imul   ebx,ebp,0xffffffec
  422833:	icebp  
  422834:	xchg   ebp,eax
  422835:	cmp    edx,DWORD PTR [ebx]
  422837:	dec    eax
  422838:	les    ebx,FWORD PTR ds:[ebp-0x2e]
  42283c:	push   esi
  42283d:	je     0x4227f6
  42283f:	pop    ds
  422840:	dec    ebx
  422841:	ss inc edi
  422843:	cmc    
  422844:	or     al,0x1e
  422846:	or     ebp,esi
  422848:	xor    ebx,0xffffffd3
  42284b:	js     0x422850
  42284d:	mov    edx,0x2de23fc3
  422852:	inc    ebp
  422853:	aad    0x6a
  422855:	(bad)  
  422856:	dec    ebp
  422857:	pop    ebx
  422858:	inc    ebx
  422859:	bound  esi,QWORD PTR [ebx-0x31]
  42285c:	sbb    cl,cl
  42285e:	loope  0x4227eb
  422860:	out    0xe1,eax
  422862:	cmp    al,0x5e
  422864:	icebp  
  422865:	pusha  
  422866:	dec    esi
  422867:	stos   DWORD PTR es:[edi],eax
  422868:	xor    edi,DWORD PTR [edx-0x21]
  42286b:	mov    al,0x57
  42286d:	(bad)  
  42286e:	dec    eax
  42286f:	je     0x4228ab
  422871:	mov    ch,0x84
  422873:	jmp    0x422857
  422875:	lea    ecx,[ebx]
  422877:	in     eax,0x37
  422879:	repz cdq 
  42287b:	pop    ss
  42287c:	jo     0x4228a8
  42287e:	adc    BYTE PTR [edi-0x14a15333],bl
  422884:	ss loopne 0x4228ce
  422887:	pusha  
  422888:	add    ch,BYTE PTR [ebx]
  42288a:	or     eax,0xa90466f
  42288f:	push   ecx
  422890:	loop   0x422863
  422892:	cmp    DWORD PTR [ecx+0x9],esi
  422895:	iret   
  422896:	xor    BYTE PTR [esi],ch
  422898:	adc    edi,DWORD PTR [ecx+0x54027339]
  42289e:	imul   esp,eax,0xffffffb3
  4228a1:	gs jo  0x42291b
  4228a4:	push   esp
  4228a5:	out    dx,eax
  4228a6:	in     al,dx
  4228a7:	or     ah,BYTE PTR [edx-0xd]
  4228aa:	pop    es
  4228ab:	push   ebp
  4228ad:	inc    edx
  4228af:	adc    eax,0x2
  4228b2:	les    ebx,FWORD PTR [eax+ebx*8+0x23]
  4228b6:	pop    es
  4228b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228b8:	es call 0x9480:0x412ad107
  4228c0:	daa    
  4228c1:	mov    al,ds:0x1c997485
  4228c6:	and    DWORD PTR [ebx+ebx*4+0x3af185b2],edi
  4228cd:	sub    edi,DWORD PTR [edi+edi*2+0x773de81d]
  4228d4:	dec    esp
  4228d5:	xor    eax,0x7fae4e1e
  4228da:	sar    BYTE PTR [edx-0x4660e70e],0xd3
  4228e1:	or     BYTE PTR [edi+0x74],dl
  4228e4:	fisubr DWORD PTR [esi+ebp*1-0x5cd97a8b]
  4228eb:	ins    DWORD PTR es:[edi],dx
  4228ec:	sub    al,0x61
  4228ee:	jns    0x422889
  4228f0:	xchg   esi,eax
  4228f1:	in     al,dx
  4228f2:	mov    es,WORD PTR [esi+0x0]
  4228f5:	scas   eax,DWORD PTR es:[edi]
  4228f6:	mov    ecx,DWORD PTR [edi]
  4228f8:	call   0x517a:0x8ba80f8b
  4228ff:	adc    ecx,DWORD PTR [ecx-0x6190bb13]
  422905:	cmp    ecx,ebp
  422907:	xor    edi,DWORD PTR [edx]
  422909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42290a:	or     edi,DWORD PTR [edx+0x4a]
  42290d:	aaa    
  42290e:	out    dx,al
  42290f:	push   ecx
  422910:	pop    es
  422911:	jmp    0xe2629b4d
  422916:	push   0x7
  422918:	out    dx,al
  422919:	iret   
  42291a:	je     0x422902
  42291c:	jo     0x422962
  42291e:	clc    
  42291f:	push   0x2f
  422921:	add    eax,0x64663987
  422926:	ret    0xed6c
  422929:	clc    
  42292a:	sub    ch,al
  42292c:	popf   
  42292d:	push   esp
  42292e:	add    al,0x56
  422930:	jp     0x4228cf
  422932:	das    
  422933:	push   ebp
  422934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422935:	stc    
  422936:	jecxz  0x4228e1
  422938:	jb     0x4229ae
  42293a:	popa   
  42293b:	loopne 0x42298c
  42293d:	xchg   edi,eax
  42293e:	je     0x42290b
  422940:	or     edi,DWORD PTR [edx+0x30]
  422943:	int3   
  422944:	push   ss
  422945:	or     dh,ch
  422947:	std    
  422948:	adc    eax,0x23e1db44
  42294d:	or     eax,0x4a26f695
  422952:	inc    edx
  422953:	test   eax,0x39b52613
  422958:	les    esp,FWORD PTR [ebp+0x2255fc06]
  42295e:	jnp    0x422983
  422960:	add    DWORD PTR [edx],edx
  422962:	sub    BYTE PTR [edi-0x1c],al
  422965:	ss lahf 
  422967:	int    0x4b
  422969:	adc    BYTE PTR [esp+ebx*4],bl
  42296c:	outs   dx,DWORD PTR ds:[esi]
  42296d:	clc    
  42296e:	push   esi
  42296f:	rol    BYTE PTR [esi+eiz*1],1
  422972:	cmp    eax,0xaa325b74
  422977:	mov    ecx,0x8598920f
  42297c:	jnp    0x422928
  42297e:	nop
  42297f:	adc    DWORD PTR [edx+esi*1+0x72],eax
  422983:	aaa    
  422984:	cmp    BYTE PTR [edx],ah
  422986:	sub    al,0x5a
  422988:	mov    edi,0xc294c68c
  42298d:	xor    al,0xb5
  42298f:	or     BYTE PTR [edi-0x20],cl
  422992:	jge    0x422919
  422994:	xchg   esi,eax
  422995:	nop
  422996:	lods   eax,DWORD PTR ds:[esi]
  422997:	out    0xa8,al
  422999:	cmp    ebp,0xf7ff5250
  42299f:	pop    ds
  4229a0:	push   esi
  4229a1:	js     0x42298f
  4229a3:	stc    
  4229a4:	dec    eax
  4229a5:	xchg   edi,eax
  4229a6:	mov    ebp,0x7c958cc2
  4229ab:	ds push cs
  4229ad:	mov    bl,0x34
  4229af:	add    al,0xd
  4229b1:	sbb    al,0x64
  4229b3:	push   ebp
  4229b4:	fcomip st,st(1)
  4229b6:	jmp    0xec57:0x5ac50ba3
  4229bd:	int3   
  4229be:	ror    DWORD PTR ds:0x3ea5018,1
  4229c4:	mov    dl,0x4c
  4229c6:	adc    eax,0xffd12386
  4229cb:	imul   eax,DWORD PTR [eax],0x4a346878
  4229d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229d2:	push   ebp
  4229d3:	(bad)  
  4229d4:	jns    0x4229f2
  4229d6:	xor    esp,DWORD PTR [eax+0x44]
  4229d9:	inc    esi
  4229da:	repnz dec esp
  4229dc:	jnp    0x422a27
  4229de:	test   BYTE PTR cs:[eax+0x1b],ah
  4229e2:	xchg   BYTE PTR [esp+ebp*8-0x94e03b2],dh
  4229e9:	inc    ebx
  4229ea:	ret    0xcf38
  4229ed:	dec    ebp
  4229ee:	xchg   ecx,eax
  4229ef:	xor    eax,DWORD PTR [eax+0x50fe4476]
  4229f5:	mov    eax,0x46019818
  4229fa:	dec    edx
  4229fb:	sbb    eax,0x7a61a527
  422a00:	adc    eax,0xa0578dce
  422a05:	and    BYTE PTR [eax-0x25],0x66
  422a09:	inc    edx
  422a0a:	movsx  ebp,dh
  422a0d:	fimul  DWORD PTR [ebp+eax*8+0x14a098fc]
  422a14:	arpl   WORD PTR [ecx],sp
  422a16:	adc    BYTE PTR [eax-0x48],ah
  422a19:	scas   al,BYTE PTR es:[edi]
  422a1a:	cs ror edx,0xdf
  422a1e:	pusha  
  422a1f:	xlat   BYTE PTR ds:[ebx]
  422a20:	test   al,dh
  422a22:	loopne 0x422a8e
  422a24:	dec    esi
  422a25:	jl     0x422a2f
  422a27:	pop    ds
  422a28:	sbb    ch,BYTE PTR [edx]
  422a2a:	fisttp DWORD PTR [esi-0x63]
  422a2d:	xor    DWORD PTR [ecx],eax
  422a2f:	pop    es
  422a30:	je     0x422a57
  422a32:	iret   
  422a33:	test   DWORD PTR [edx+esi*4-0x67],esi
  422a37:	test   esi,0x4e8c466f
  422a3d:	mov    ebp,0x4bf8ff0d
  422a42:	xor    dh,bl
  422a44:	ins    BYTE PTR es:[edi],dx
  422a45:	ffreep st(2)
  422a47:	mov    ecx,0x103a451a
  422a4c:	mov    ebp,0x6f9d740e
  422a51:	adc    al,0x7
  422a53:	add    esi,ebp
  422a55:	retf   0x1ee1
  422a58:	mov    esi,0xb6f00c86
  422a5d:	clc    
  422a5e:	mov    bh,0xef
  422a60:	in     al,0x64
  422a62:	xor    ebx,DWORD PTR [edx+ebx*2+0x38]
  422a66:	popf   
  422a67:	gs push ebx
  422a69:	mov    BYTE PTR [ebp+0x1b915fc3],al
  422a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a70:	dec    esp
  422a71:	push   ebp
  422a72:	or     bh,BYTE PTR [eax+0x13]
  422a75:	push   cs
  422a76:	add    eax,0x48f7cdc
  422a7b:	dec    edx
  422a7c:	gs jnp 0x422a59
  422a7f:	out    0x9c,eax
  422a81:	dec    eax
  422a82:	push   ds
  422a83:	test   ecx,edx
  422a85:	(bad)  
  422a86:	into   
  422a87:	and    al,0x3c
  422a89:	fwait
  422a8a:	scas   al,BYTE PTR es:[edi]
  422a8b:	cwde   
  422a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a8d:	pop    ds
  422a8e:	ins    BYTE PTR es:[edi],dx
  422a8f:	scas   al,BYTE PTR es:[edi]
  422a90:	test   eax,0xff35056
  422a95:	jecxz  0x422a6d
  422a97:	call   0x495c6f2
  422a9c:	out    0x24,eax
  422a9e:	sahf   
  422a9f:	mov    ds:0xf8bcc723,eax
  422aa4:	aad    0xa0
  422aa6:	mov    dh,0x66
  422aa8:	adc    DWORD PTR [ebx+0x23],0x4
  422aac:	jp     0x422b1b
  422aae:	mov    ebp,DWORD PTR [ebp+eiz*4-0x248f57c7]
  422ab5:	leave  
  422ab6:	sbb    ah,BYTE PTR [eax+0x18]
  422ab9:	sbb    eax,0xddd1bb3
  422abe:	sub    DWORD PTR [ebx+0x63],eax
  422ac1:	int3   
  422ac2:	in     al,dx
  422ac3:	lahf   
  422ac4:	into   
  422ac5:	mov    esi,0xd860ab36
  422aca:	dec    ecx
  422acb:	and    esp,DWORD PTR ds:0x13ce9f37
  422ad1:	mov    eax,0xcae49309
  422ad6:	push   cs
  422ad7:	jo     0x422b51
  422ad9:	xchg   DWORD PTR [ecx+0x67],esp
  422adc:	or     eax,0x164ddd46
  422ae1:	add    dh,ch
  422ae3:	jo     0x422a8c
  422ae5:	pop    ecx
  422ae6:	pop    es
  422ae7:	int3   
  422ae8:	in     eax,0x41
  422aea:	push   esi
  422aeb:	rcr    DWORD PTR [ebx+0x8],0x61
  422aef:	mov    cl,0x76
  422af1:	dec    edi
  422af2:	imul   ebp,DWORD PTR [ebx],0x2c85b169
  422af8:	xchg   esp,eax
  422af9:	cld    
  422afa:	ins    DWORD PTR es:[edi],dx
  422afb:	pop    edx
  422afc:	inc    esp
  422afd:	lea    esi,ds:0x56e6b0a4
  422b03:	push   edi
  422b04:	test   eax,0x6f363bc5
  422b09:	sub    dh,BYTE PTR [eax+0x64e80e38]
  422b0f:	ss loopne 0x422b88
  422b12:	pushf  
  422b13:	jnp    0x422b69
  422b15:	or     BYTE PTR [ebp+0x54ec24f6],0x85
  422b1c:	sbb    ebp,DWORD PTR [ebp+edx*8+0x39]
  422b20:	pop    es
  422b21:	pushf  
  422b22:	inc    esi
  422b23:	inc    ebx
  422b24:	jp     0x422b20
  422b26:	loope  0x422b94
  422b28:	fstp   TBYTE PTR [ecx-0xb7a29e8]
  422b2e:	mov    ah,BYTE PTR [eax+0xcde2abf]
  422b34:	jmp    0x645d16ef
  422b39:	in     eax,dx
  422b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b3b:	jmp    0x77b0609f
  422b40:	(bad)  
  422b41:	ins    DWORD PTR es:[edi],dx
  422b42:	jecxz  0x422b30
  422b44:	add    ebx,DWORD PTR [ebx+0x35]
  422b47:	outs   dx,BYTE PTR ds:[esi]
  422b48:	mov    ds:0x9c2bb1f,eax
  422b4d:	cmp    bl,BYTE PTR [edx-0x525afb00]
  422b53:	(bad)  
  422b54:	pop    edi
  422b55:	aaa    
  422b56:	cmp    ebx,DWORD PTR [ebp+0x3b]
  422b59:	or     eax,0x86124bc0
  422b5e:	jg     0x422b25
  422b60:	fs aas 
  422b62:	dec    ebx
  422b63:	push   cs
  422b64:	mov    al,ds:0x7b8eb8cd
  422b69:	cmp    al,BYTE PTR [esp+edx*1-0x51]
  422b6d:	lock or al,0x4d
  422b70:	enter  0x4d07,0x38
  422b74:	imul   ebx,DWORD PTR [ebx],0x90291192
  422b7a:	lahf   
  422b7b:	arpl   bp,sp
  422b7d:	fmul   QWORD PTR [esi+0x47]
  422b80:	fdivr  DWORD PTR [edx+0x56b19e2]
  422b86:	sub    DWORD PTR [edi+0x7],eax
  422b89:	inc    esp
  422b8a:	fsub   st,st(1)
  422b8c:	mov    ch,BYTE PTR [eax-0x51]
  422b8f:	xor    cl,BYTE PTR [ecx-0x2]
  422b92:	shl    BYTE PTR [ebp*2-0x618730de],0x53
  422b9a:	stos   DWORD PTR es:[edi],eax
  422b9b:	fstp   DWORD PTR [edi-0x74]
  422b9e:	or     DWORD PTR [eax-0x561c195e],esp
  422ba4:	leave  
  422ba5:	or     al,0x54
  422ba7:	out    dx,eax
  422ba8:	shl    BYTE PTR [eax],cl
  422baa:	mov    ebp,0x9168c08e
  422baf:	add    al,0xa8
  422bb1:	mov    es,WORD PTR [ebp+edi*8-0x2a017d0b]
  422bb8:	add    esp,ecx
  422bba:	stos   DWORD PTR es:[edi],eax
  422bbb:	adc    ah,BYTE PTR [eax-0x1c4ccb70]
  422bc1:	sbb    DWORD PTR [edi-0x4a],ecx
  422bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bc5:	stc    
  422bc6:	jmp    0xde3c:0x931b4531
  422bcd:	jo     0x422bd4
  422bcf:	cmc    
  422bd0:	mov    edi,0xf33fdadb
  422bd5:	add    edx,esi
  422bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bd8:	add    esi,edi
  422bda:	mov    ds:0xdfd6c3bc,eax
  422bdf:	stc    
  422be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be1:	leave  
  422be2:	loopne 0x422bb5
  422be4:	dec    edx
  422be5:	mul    dl
  422be7:	mov    edx,0xc6f58fcd
  422bec:	mov    ecx,0xe351d12e
  422bf1:	aam    0x9
  422bf3:	loop   0x422baa
  422bf5:	stos   DWORD PTR es:[edi],eax
  422bf6:	and    bh,BYTE PTR ds:0x6d8110ca
  422bfc:	mov    al,0xd5
  422bfe:	sbb    BYTE PTR [eax-0x4f52c3e7],ch
  422c04:	xchg   ecx,eax
  422c05:	inc    edi
  422c06:	clc    
  422c07:	mov    bh,BYTE PTR [ebp+0x35feee1f]
  422c0d:	jbe    0x422c8d
  422c0f:	outs   dx,BYTE PTR ds:[esi]
  422c10:	and    al,0xe0
  422c12:	ret    0xc7e8
  422c15:	mov    edi,0x600b4797
  422c1a:	in     eax,dx
  422c1b:	ins    BYTE PTR es:[edi],dx
  422c1c:	push   eax
  422c1d:	pop    es
  422c1e:	mov    bh,dh
  422c20:	fnstsw WORD PTR [edi-0x74b690d9]
  422c26:	(bad)  
  422c27:	inc    eax
  422c28:	(bad)  
  422c29:	jo     0x422c42
  422c2b:	sub    eax,0x127341dc
  422c30:	iret   
  422c31:	jge    0x422c48
  422c33:	xchg   DWORD PTR [esi-0x6b],ebp
  422c36:	jge    0x422c95
  422c38:	(bad)  
  422c3a:	cli    
  422c3b:	das    
  422c3c:	fs pop ss
  422c3e:	cmp    DWORD PTR ds:0x425f08d3,esp
  422c44:	shl    BYTE PTR [esi+0x77],0xd6
  422c48:	pop    es
  422c49:	cli    
  422c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4b:	test   DWORD PTR ds:0x9d44b6f1,esi
  422c51:	push   cs
  422c52:	sub    DWORD PTR [ebx],edx
  422c54:	fs aam 0x59
  422c57:	adc    eax,0xcde10fc3
  422c5c:	ins    DWORD PTR es:[edi],dx
  422c5d:	dec    eax
  422c5e:	adc    bl,0x67
  422c61:	push   edi
  422c62:	cmp    al,BYTE PTR [ecx]
  422c64:	mov    bl,0x73
  422c66:	jnp    0x422c26
  422c68:	adc    al,0xc6
  422c6a:	push   0x23a1e4b0
  422c6f:	ret    0xf177
  422c72:	or     ebp,DWORD PTR [ebx]
  422c74:	fwait
  422c75:	add    DWORD PTR [ebp+0x2f],ebx
  422c78:	xchg   ebx,eax
  422c79:	mov    ds:0x5a9633ff,al
  422c7e:	xchg   BYTE PTR [ebx],ch
  422c80:	cdq    
  422c81:	aaa    
  422c82:	das    
  422c83:	xor    DWORD PTR [ecx],esp
  422c85:	and    al,0xf1
  422c87:	xchg   edi,eax
  422c88:	(bad)  
  422c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c8c:	sbb    DWORD PTR [esi],edi
  422c8e:	aam    0x3d
  422c90:	gs repnz jmp 0x44c7:0xd79215c2
  422c99:	pop    ebx
  422c9a:	xchg   esp,eax
  422c9b:	mov    eax,ds:0x7f2a8d01
  422ca0:	lahf   
  422ca1:	xor    ah,BYTE PTR [bx-0x13b2]
  422ca6:	xor    edi,DWORD PTR [edi-0x41]
  422ca9:	call   0xb6d49603
  422cae:	fmul   DWORD PTR [ebx-0x6de0c9a9]
  422cb4:	icebp  
  422cb5:	fdiv   st(0),st
  422cb7:	xor    ch,BYTE PTR [ebx]
  422cb9:	cmp    ah,cl
  422cbb:	mov    dl,0x58
  422cbd:	dec    eax
  422cbe:	jle    0x422cd3
  422cc0:	lods   al,BYTE PTR ds:[esi]
  422cc1:	fwait
  422cc2:	imul   esp,DWORD PTR [esi-0x47],0x2ccc1ce0
  422cc9:	push   ebx
  422cca:	rol    bh,0x4f
  422ccd:	loopne 0x422cd0
  422ccf:	cwde   
  422cd0:	add    edi,esp
  422cd2:	fwait
  422cd3:	cli    
  422cd4:	lock dec eax
  422cd6:	das    
  422cd7:	push   0xfffffffa
  422cd9:	or     BYTE PTR [ecx-0x701544b],al
  422cdf:	loop   0x422caf
  422ce1:	jecxz  0x422d00
  422ce3:	add    eax,0x161dcca2
  422ce8:	cwde   
  422ce9:	cmp    ebp,DWORD PTR [ebx+eax*2]
  422cec:	or     al,0xa4
  422cee:	mov    al,0xa3
  422cf0:	not    DWORD PTR [ebx]
  422cf2:	mov    ds:0xfcdc1a59,eax
  422cf7:	inc    edx
  422cf8:	pop    ecx
  422cf9:	push   esp
  422cfa:	inc    ecx
  422cfb:	adc    eax,0xc4a1dba2
  422d00:	cmp    bh,bh
  422d02:	mov    ds:0xb3fb87ee,eax
  422d07:	ret    
  422d08:	ins    BYTE PTR es:[edi],dx
  422d09:	gs (bad) 
  422d0b:	outs   dx,BYTE PTR ds:[esi]
  422d0c:	fcomp  QWORD PTR [eax+edx*2]
  422d0f:	jp     0x422cf3
  422d11:	inc    ebp
  422d12:	cmp    BYTE PTR ds:0x5fbe7ebc,0x3e
  422d19:	jb     0x422cbf
  422d1b:	inc    edx
  422d1c:	add    eax,0x7e79caf8
  422d21:	jmp    0x422d81
  422d23:	push   ds
  422d24:	adc    ebp,edx
  422d26:	(bad)  
  422d28:	test   al,0xac
  422d2a:	xchg   edx,eax
  422d2b:	mov    al,0xfb
  422d2d:	pop    ebx
  422d2e:	lea    edx,[ecx-0x39]
  422d31:	inc    edi
  422d32:	out    0x53,eax
  422d34:	mov    esp,0xaa3baadd
  422d39:	imul   esp,DWORD PTR [edx+0x710834dc],0x557a2e5
  422d43:	je     0x422d7c
  422d45:	cmp    al,0x6f
  422d47:	pusha  
  422d48:	shl    DWORD PTR [eax-0x3d6d11c7],cl
  422d4e:	cmc    
  422d4f:	pop    ebx
  422d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d51:	into   
  422d52:	and    dl,BYTE PTR [edx]
  422d54:	pop    ecx
  422d55:	(bad)  
  422d56:	jge    0x422cf1
  422d58:	mov    ah,0xe6
  422d5a:	aas    
  422d5b:	test   ecx,ebx
  422d5d:	les    ecx,FWORD PTR [ebx]
  422d5f:	stc    
  422d60:	push   ecx
  422d61:	es xchg ebx,eax
  422d63:	(bad)  
  422d64:	retf   0xb822
  422d67:	dec    eax
  422d68:	(bad)  
  422d69:	xor    ecx,ebx
  422d6b:	fmul   QWORD PTR [esi+0x11]
  422d6e:	mov    bh,0x57
  422d70:	fisttp DWORD PTR [eax]
  422d72:	dec    edx
  422d73:	inc    esp
  422d74:	(bad)  
  422d75:	nop
  422d76:	call   0xf6a5:0x72eb8944
  422d7d:	arpl   WORD PTR [ecx+0x5c],dx
  422d80:	push   ecx
  422d81:	or     al,0xf6
  422d83:	mov    cs,WORD PTR [ecx+ebx*4]
  422d86:	jns    0x422d53
  422d88:	inc    ebx
  422d89:	fadd   st,st(3)
  422d8b:	adc    eax,0x4d1e586d
  422d90:	mov    al,0xa
  422d92:	cmp    eax,0x743a16aa
  422d97:	outs   dx,BYTE PTR ds:[esi]
  422d98:	pop    ebp
  422d99:	jne    0x422de5
  422d9b:	mov    es,WORD PTR [edx+0x631303c8]
  422da1:	(bad)
  422da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422da5:	dec    eax
  422da6:	xchg   DWORD PTR [eax+0xdb7187],ebx
  422dac:	fcmovb st,st(5)
  422dae:	sub    al,0x6d
  422db0:	sbb    esp,edx
  422db2:	sti    
  422db3:	leave  
  422db4:	in     eax,dx
  422db5:	xchg   BYTE PTR [ecx+ebp*2+0x1],bl
  422db9:	push   ecx
  422dba:	out    0x91,al
  422dbc:	jo     0x422d88
  422dbe:	test   DWORD PTR [edx+0x4f9e8ca3],ebp
  422dc4:	pop    ebx
  422dc5:	call   0xc87ba008
  422dca:	jbe    0x422dd2
  422dcc:	mov    edi,0x93d8cd87
  422dd1:	cmp    ebp,ecx
  422dd3:	gs pop es
  422dd5:	and    edx,DWORD PTR [ebx]
  422dd7:	xor    bl,BYTE PTR [esi+0x38]
  422dda:	inc    ecx
  422ddb:	inc    ebx
  422ddc:	pop    esp
  422ddd:	ds cbw 
  422de0:	inc    esi
  422de1:	and    al,0xc1
  422de3:	cmc    
  422de4:	jo     0xa5c596b2
  422dea:	adc    DWORD PTR ss:[ecx],ebp
  422ded:	lods   al,BYTE PTR ds:[esi]
  422dee:	add    al,0x9e
  422df0:	add    eax,0xa4bb7f1
  422df5:	pop    es
  422df6:	mov    al,BYTE PTR [ecx+0x74]
  422df9:	and    BYTE PTR [esi-0x1d2abbbf],0x5a
  422e00:	adc    esp,DWORD PTR [ecx-0xc]
  422e03:	inc    edi
  422e04:	scas   eax,DWORD PTR es:[edi]
  422e05:	jns    0x422d9a
  422e07:	cmc    
  422e08:	js     0x422e2d
  422e0a:	lahf   
  422e0b:	sub    eax,esi
  422e0d:	aam    0xa7
  422e0f:	(bad)  
  422e10:	sbb    dl,BYTE PTR [ecx+0x7d]
  422e13:	mov    edx,0xfd868992
  422e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e19:	push   esi
  422e1a:	dec    eax
  422e1b:	pop    ebx
  422e1c:	inc    edi
  422e1d:	je     0x422e46
  422e1f:	push   esi
  422e20:	repz ds jne 0x422e46
  422e24:	xchg   esp,eax
  422e25:	ds repz in al,dx
  422e28:	loope  0x422e25
  422e2a:	in     eax,0xbe
  422e2c:	les    esi,FWORD PTR [edx]
  422e2e:	and    al,0xab
  422e30:	in     al,0x49
  422e32:	xor    edx,DWORD PTR [eax-0x49]
  422e35:	adc    bl,BYTE PTR [edx-0x51]
  422e38:	in     al,0xa1
  422e3a:	nop
  422e3b:	not    BYTE PTR [eax+ebx*8-0x3c]
  422e3f:	add    ebx,edx
  422e41:	stos   DWORD PTR es:[edi],eax
  422e42:	push   ebp
  422e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e44:	retf   0xc5d5
  422e47:	pushf  
  422e48:	push   es
  422e49:	xor    al,BYTE PTR ds:0x8d076803
  422e4f:	sahf   
  422e50:	xor    al,0x85
  422e52:	cld    
  422e53:	push   ebp
  422e54:	or     eax,0x103740ff
  422e59:	fistp  DWORD PTR [eax-0x60031d55]
  422e5f:	xlat   BYTE PTR ds:[ebx]
  422e60:	pop    es
  422e61:	loopne 0x422e1a
  422e63:	jl     0x422e61
  422e65:	mov    esp,esi
  422e67:	add    BYTE PTR [ecx],bl
  422e69:	pop    ds
  422e6a:	in     al,0x60
  422e6c:	add    al,0x39
  422e6e:	loopne 0x422dfa
  422e70:	popf   
  422e71:	xchg   bl,dl
  422e73:	xchg   ebx,eax
  422e74:	fdiv   QWORD PTR [ebp-0x38201357]
  422e7a:	fcomp  QWORD PTR [esi-0x70]
  422e7d:	daa    
  422e7e:	push   DWORD PTR [edx-0x7506bf10]
  422e84:	loope  0x422e3b
  422e86:	cwde   
  422e87:	lock stos BYTE PTR es:[edi],al
  422e89:	pop    esi
  422e8a:	jmp    0x1a258b92
  422e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e90:	jmp    0xc2ac:0xc91bc408
  422e97:	iret   
  422e98:	xchg   edi,eax
  422e99:	dec    ebx
  422e9a:	and    cl,BYTE PTR [si+0x19b5]
  422e9f:	lods   eax,DWORD PTR ds:[esi]
  422ea0:	sub    al,0xfb
  422ea2:	and    cl,BYTE PTR [edx+0x4c57961a]
  422ea8:	pop    ds
  422ea9:	add    DWORD PTR [edx+0x43],edi
  422eac:	icebp  
  422ead:	pop    ds
  422eae:	loopne 0x422e46
  422eb0:	cmp    ecx,DWORD PTR [edi-0x4c]
  422eb3:	dec    edx
  422eb4:	mov    al,0x53
  422eb6:	mov    ds:0x6f3ee1c1,al
  422ebb:	sbb    DWORD PTR [ebx-0x30ae140],esp
  422ec1:	inc    esp
  422ec2:	outs   dx,BYTE PTR ds:[esi]
  422ec3:	adc    al,0x8d
  422ec5:	int3   
  422ec6:	and    DWORD PTR [ebx+eax*2],0x25af35ab
  422ecd:	sub    esp,DWORD PTR [edx]
  422ecf:	inc    esp
  422ed0:	and    BYTE PTR ss:[edi+0x68],bl
  422ed4:	lods   al,BYTE PTR ds:[esi]
  422ed5:	sbb    BYTE PTR [eax-0x6b84a588],cl
  422edb:	sahf   
  422edc:	and    ebx,ecx
  422ede:	push   ebx
  422edf:	adc    bl,BYTE PTR [esi-0x1fdae121]
  422ee5:	dec    ecx
  422ee7:	mov    BYTE PTR [ebx+0x7e],al
  422eea:	or     ebx,DWORD PTR [esi+0x3e258750]
  422ef0:	jno    0x422f1a
  422ef2:	bound  eax,QWORD PTR [ebx+0x43]
  422ef5:	fcom   QWORD PTR [ecx-0x554818e7]
  422efb:	cmc    
  422efc:	mov    esi,0x366ff658
  422f01:	cmp    eax,DWORD PTR [ebp-0x9]
  422f04:	cmc    
  422f05:	outs   dx,DWORD PTR ds:[esi]
  422f06:	jb     0x422f09
  422f08:	and    BYTE PTR [esi],ah
  422f0a:	and    eax,0x9ab83cee
  422f0f:	outs   dx,DWORD PTR ds:[esi]
  422f10:	fstp   QWORD PTR [esi]
  422f12:	out    0x28,al
  422f14:	cmp    DWORD PTR [edi+eax*8-0x1b],edi
  422f18:	jmp    0x422f36
  422f1a:	dec    ecx
  422f1b:	mov    dh,0x7e
  422f1d:	xor    al,0x96
  422f1f:	arpl   WORD PTR [eax+0x7eec046d],dx
  422f25:	idiv   BYTE PTR [ecx+0x3a]
  422f28:	cmp    esi,edx
  422f2a:	lock inc ecx
  422f2c:	neg    DWORD PTR [edx-0x6f30ff83]
  422f32:	jns    0x422f49
  422f34:	mov    ds:0xbb34bd83,al
  422f39:	repz pop eax
  422f3b:	repnz adc ebp,DWORD PTR [edi-0x79]
  422f3f:	lfs    esi,FWORD PTR [ecx+0x3976eda5]
  422f46:	inc    edx
  422f47:	iret   
  422f48:	lds    eax,FWORD PTR [esi]
  422f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f4b:	loopne 0x422f5c
  422f4d:	inc    esp
  422f4e:	and    ah,BYTE PTR [ecx+0x4c623365]
  422f54:	sbb    BYTE PTR [ecx],0x30
  422f57:	xor    al,0xad
  422f59:	hlt    
  422f5a:	je     0x422ee2
  422f5c:	mov    ah,al
  422f5e:	or     eax,0x766ba3f4
  422f63:	jecxz  0x422f67
  422f65:	pusha  
  422f66:	(bad)  
  422f67:	out    dx,eax
  422f68:	push   eax
  422f69:	scas   al,BYTE PTR es:[edi]
  422f6a:	imul   esp,DWORD PTR [esi-0x5e4ed600],0x12
  422f71:	shl    bl,0x25
  422f74:	mov    cl,0x85
  422f76:	add    bh,BYTE PTR [edi-0x78]
  422f79:	sbb    DWORD PTR [ebx],ebx
  422f7b:	jg     0x422f1a
  422f7d:	mov    edi,0xa2b09427
  422f82:	xor    eax,0x38ef41dc
  422f87:	ins    DWORD PTR es:[edi],dx
  422f88:	sub    eax,esi
  422f8a:	neg    DWORD PTR [edi+0x304c28dd]
  422f90:	nop
  422f91:	cmc    
  422f92:	jo     0x422fe6
  422f94:	sbb    BYTE PTR [esi-0xc],0x6
  422f98:	test   ah,ch
  422f9a:	jo     0x423018
  422f9c:	in     eax,0x4e
  422f9e:	imul   edi,DWORD PTR [ebp+0x6c276e09],0xfffffffc
  422fa5:	xor    al,bl
  422fa7:	adc    eax,DWORD PTR [ecx+0x71]
  422faa:	mov    ebx,0x975de2ad
  422faf:	retf   0x6672
  422fb2:	inc    edx
  422fb3:	outs   dx,BYTE PTR ds:[esi]
  422fb4:	jecxz  0x422f8d
  422fb6:	pop    ebp
  422fb7:	xor    eax,0x98e93d97
  422fbc:	pop    esi
  422fbd:	cli    
  422fbe:	stc    
  422fbf:	sub    edi,DWORD PTR [edx+0x2]
  422fc2:	xchg   ebx,eax
  422fc3:	mov    ebx,0xbdec6581
  422fc8:	and    bh,ch
  422fca:	(bad)  
  422fcc:	push   0xffffffe6
  422fce:	sahf   
  422fcf:	jb     0x422f5c
  422fd1:	pop    eax
  422fd2:	or     eax,0x6e5ca19
  422fd7:	dec    edx
  422fd8:	leave  
  422fd9:	sar    DWORD PTR [esi+ebx*1+0x7b66f23b],cl
  422fe0:	addr16 es loopne 0x423054
  422fe4:	mov    eax,0x44b8e707
  422fe9:	test   BYTE PTR ds:0x3be70ded,cl
  422fef:	sub    bl,BYTE PTR [ebx+eiz*4-0x1d669259]
  422ff6:	jmp    0xfe4d64d9
  422ffb:	xchg   edi,eax
  422ffc:	ja     0x423068
  422ffe:	jge    0x422fae
  423000:	xor    al,BYTE PTR [edi-0x5e072b8a]
  423006:	mov    bl,BYTE PTR [ebx+0x41607aa]
  42300c:	push   ebx
  42300d:	(bad)  
  42300e:	push   ds
  42300f:	or     BYTE PTR [esi],bl
  423011:	sbb    BYTE PTR [edx-0x5021e820],al
  423017:	out    0xe6,eax
  423019:	dec    eax
  42301a:	add    al,0xe0
  42301c:	scas   al,BYTE PTR es:[edi]
  42301d:	sub    DWORD PTR [ebp-0x16668661],0xa8a96ffe
  423027:	(bad)
  42302a:	dec    edi
  42302b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42302c:	mov    ds:0xc8cc89c,eax
  423031:	push   ebx
  423032:	and    edx,DWORD PTR [edi+0x1c]
  423035:	arpl   WORD PTR [ecx],di
  423037:	push   es
  423038:	add    eax,0x47d1221c
  42303d:	cmc    
  42303e:	rcr    DWORD PTR [ebp-0x7c],cl
  423041:	and    DWORD PTR [esi],esi
  423043:	jg     0x422fca
  423045:	repnz pop ebp
  423047:	jle    0x42303b
  423049:	daa    
  42304a:	cld    
  42304b:	ret    
  42304c:	or     ah,BYTE PTR [ebx]
  42304e:	retf   
  42304f:	and    DWORD PTR [ebx],ebp
  423051:	jnp    0x42303e
  423053:	dec    esp
  423054:	test   eax,0x56cb9af5
  423059:	inc    eax
  42305a:	sbb    DWORD PTR [ecx+0x6e038a96],ecx
  423060:	and    bh,BYTE PTR [eax+0x361f654c]
  423066:	(bad)  
  423067:	jns    0x423025
  423069:	pop    ebx
  42306a:	lods   al,BYTE PTR ds:[esi]
  42306b:	(bad)  
  42306c:	ins    BYTE PTR es:[edi],dx
  42306d:	mov    edi,0x45481fb1
  423072:	or     al,0xfe
  423074:	jle    0x423007
  423076:	push   edx
  423077:	sbb    dl,cl
  423079:	or     eax,0x3038a3e5
  42307e:	add    BYTE PTR [eax+edi*1],dl
  423081:	xchg   al,cl
  423083:	adc    al,0xc1
  423085:	js     0x423080
  423087:	cmp    eax,DWORD PTR [ebx+0x20]
  42308a:	or     al,0x27
  42308c:	and    al,0xb0
  42308e:	jbe    0x42307a
  423090:	fidivr DWORD PTR [ecx]
  423092:	jne    0x4230ea
  423094:	jl     0x4230c4
  423096:	push   0x19029310
  42309b:	fs into 
  42309d:	mov    ?,edx
  42309f:	(bad)  
  4230a0:	fsubp  st(5),st
  4230a2:	imul   esi,DWORD PTR [eax],0xe001018b
  4230a8:	cmp    al,0x50
  4230aa:	sbb    al,0x7c
  4230ac:	mov    edi,0x7269556d
  4230b1:	adc    al,0xe0
  4230b3:	pusha  
  4230b4:	pop    ecx
  4230b5:	pop    ss
  4230b6:	cmp    ebp,DWORD PTR [eax]
  4230b8:	sub    al,bl
  4230ba:	add    esi,0xffffff86
  4230bd:	out    dx,al
  4230be:	sub    al,al
  4230c0:	fdivr  QWORD PTR [ecx]
  4230c2:	fwait
  4230c3:	test   al,0x1a
  4230c5:	popf   
  4230c6:	ins    DWORD PTR es:[edi],dx
  4230c7:	xor    DWORD PTR [ecx],edx
  4230c9:	mov    esp,DWORD PTR [edi-0x31535ebb]
  4230cf:	cmp    al,0x28
  4230d1:	pop    ds
  4230d2:	gs push ecx
  4230d4:	or     bh,BYTE PTR [ecx+0x233297fb]
  4230da:	mov    eax,DWORD PTR [ecx]
  4230dc:	clc    
  4230dd:	mov    DWORD PTR ds:0xdf9671fd,ebp
  4230e3:	or     bl,BYTE PTR [ebp-0x6abeda0a]
  4230e9:	dec    ecx
  4230ea:	test   DWORD PTR [ebp+0x65],ebp
  4230ed:	push   esp
  4230ee:	pop    ds
  4230ef:	mov    ch,0x30
  4230f1:	loopne 0x42315b
  4230f3:	dec    DWORD PTR [edi]
  4230f5:	jno    0x42315e
  4230f7:	mov    edx,0x392c54e4
  4230fc:	loop   0x423157
  4230fe:	xor    esi,ebx
  423100:	lock test eax,0x4e733188
  423106:	mov    ecx,DWORD PTR [ebx+0x3]
  423109:	mov    dh,0x1e
  42310b:	mov    dh,ch
  42310d:	retf   0xc7b0
  423110:	push   ebp
  423111:	or     BYTE PTR [esi],ah
  423113:	sbb    eax,0xa4cad364
  423118:	jle    0x4230de
  42311a:	mov    eax,0xbc7e10db
  42311f:	mov    al,0xca
  423121:	out    0x72,eax
  423123:	cmp    esp,DWORD PTR [edx]
  423125:	(bad)  
  423126:	xchg   edx,eax
  423127:	lea    ebx,[ebx+0x8904a62]
  42312d:	sahf   
  42312e:	jae    0x4231a1
  423130:	call   0x43c1:0xe12884c3
  423137:	fnstenv [edi-0x3fd94f4f]
  42313d:	sbb    BYTE PTR [edi],0x7c
  423140:	xor    esp,DWORD PTR [edi-0x7d755265]
  423146:	and    al,0x8e
  423148:	loopne 0x42314c
  42314a:	call   0x9941:0x8d742895
  423151:	sub    esp,DWORD PTR [esi]
  423153:	sub    BYTE PTR [ebx],cl
  423155:	jnp    0x4231bb
  423157:	sbb    dh,0x20
  42315a:	and    BYTE PTR [ebx-0x65],bh
  42315d:	(bad)  
  42315e:	sahf   
  42315f:	gs dec esi
  423161:	test   al,0xde
  423163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423164:	(bad)  
  423165:	call   0x1ab70500
  42316a:	mov    ebx,0xb771ed7f
  42316f:	or     DWORD PTR [ebx],ebp
  423171:	mov    edx,0x80e36cc6
  423176:	in     al,0xc4
  423178:	in     eax,0x54
  42317a:	cmp    eax,0x949e79d8
  42317f:	stos   BYTE PTR es:[edi],al
  423180:	xor    ebp,DWORD PTR [ebp-0xd]
  423183:	push   edx
  423184:	mov    bh,bh
  423186:	aas    
  423187:	jmp    0xe777:0x895796ac
  42318e:	adc    edx,esp
  423190:	or     DWORD PTR [ecx-0x12],ebp
  423193:	lods   al,BYTE PTR ds:[esi]
  423194:	addr16 dec esi
  423196:	rep stos DWORD PTR es:[edi],eax
  423198:	or     eax,0x3d8511ac
  42319d:	cmp    BYTE PTR [ebp-0x1372a138],dl
  4231a3:	popf   
  4231a4:	enter  0x8b96,0x41
  4231a8:	push   ss
  4231a9:	push   eax
  4231aa:	out    dx,al
  4231ab:	cwde   
  4231ac:	aas    
  4231ad:	in     al,0x58
  4231af:	add    edi,DWORD PTR [ebx+0x79]
  4231b2:	dec    ebp
  4231b3:	jmp    0x296f3f2e
  4231b8:	ret    0x6ffa
  4231bb:	fs mov ah,0x1a
  4231be:	icebp  
  4231bf:	pop    eax
  4231c0:	push   esi
  4231c1:	js     0x4231ea
  4231c3:	mov    bh,0xa6
  4231c5:	stos   DWORD PTR es:[edi],eax
  4231c6:	jno    0x4231f7
  4231c8:	pop    ebx
  4231c9:	or     al,BYTE PTR [ebx]
  4231cb:	adc    eax,0x2b669d6f
  4231d0:	jns    0x42319c
  4231d2:	in     al,0x42
  4231d4:	inc    esi
  4231d5:	scas   al,BYTE PTR es:[edi]
  4231d6:	cwde   
  4231d7:	(bad)  
  4231d9:	and    al,0x3c
  4231db:	fidivr DWORD PTR [eax]
  4231dd:	packsswb mm5,QWORD PTR [eax+0x25546e29]
  4231e4:	in     al,0x53
  4231e6:	sub    al,0x0
  4231e8:	pop    esp
  4231e9:	jle    0x423254
  4231eb:	adc    esp,DWORD PTR [ebp+0x7b]
  4231ee:	mov    ecx,0x1e09460
  4231f3:	outs   dx,DWORD PTR ds:[esi]
  4231f4:	rol    BYTE PTR [eax],0x4b
  4231f7:	mov    dl,BYTE PTR [edi-0x59]
  4231fa:	add    DWORD PTR [ecx],0xe5f38a3d
  423200:	adc    BYTE PTR [eax+0x1fd5adf4],al
  423206:	mov    bh,0x54
  423208:	adc    al,0xf0
  42320a:	(bad)  
  42320c:	es pushf 
  42320e:	int    0x48
  423210:	push   es
  423211:	mov    ah,0x58
  423213:	fwait
  423214:	pop    esi
  423215:	mov    ebp,0xcf4dfb65
  42321a:	xchg   ebx,eax
  42321b:	jecxz  0x4231d3
  42321d:	push   ebx
  42321e:	mov    edx,0xb404e262
  423223:	mov    cl,0xd
  423225:	sub    al,0x66
  423227:	pop    edx
  423228:	mov    BYTE PTR [edx],dh
  42322a:	(bad)  
  42322b:	out    dx,al
  42322c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42322d:	jnp    0x4231f9
  42322f:	mov    eax,ds:0xebb54fe0
  423234:	rol    ch,0xc0
  423237:	out    0xa2,eax
  423239:	imul   edx,DWORD PTR [eax+edx*2-0x793d83cb],0x41e3e9a
  423244:	sub    ecx,edx
  423246:	mov    ds:0xb048e5a7,al
  42324b:	pop    edi
  42324c:	pop    edi
  42324d:	xlat   BYTE PTR ds:[ebx]
  42324e:	in     eax,dx
  42324f:	ffreep st(1)
  423251:	add    eax,DWORD PTR [esi-0x41]
  423254:	ror    ch,cl
  423256:	adc    edi,ecx
  423258:	mov    ebp,0xdc431c9b
  42325d:	lahf   
  42325e:	arpl   bp,si
  423260:	div    DWORD PTR [ebp+edx*8+0x3c]
  423264:	sbb    al,0x8d
  423266:	out    dx,al
  423267:	call   0x32a3:0x1747d4c
  42326e:	std    
  42326f:	inc    esi
  423270:	mov    bh,0x4
  423272:	sbb    edx,eax
  423274:	cmp    al,0x4c
  423276:	or     eax,0x910b54e0
  42327b:	out    dx,al
  42327c:	arpl   WORD PTR [esi+ebp*4],di
  42327f:	imul   esp,eax,0xbc51b51
  423285:	xor    bh,BYTE PTR [edi-0x2b]
  423288:	adc    al,0xec
  42328a:	jl     0x423257
  42328c:	fwait
  42328d:	cmp    al,0x96
  42328f:	xchg   ecx,eax
  423290:	out    dx,eax
  423291:	call   0x4bdc4844
  423296:	(bad)  
  423298:	mov    edx,0xa16b8534
  42329d:	cdq    
  42329e:	sbb    ch,ah
  4232a0:	leave  
  4232a1:	dec    edx
  4232a2:	addr16 cwde 
  4232a4:	retf   0x3113
  4232a7:	pushf  
  4232a8:	jmp    0x4b7d:0x51959d07
  4232af:	lds    eax,FWORD PTR [ecx+edx*2-0x72]
  4232b3:	and    ah,BYTE PTR [eax-0x42]
  4232b6:	sbb    al,0x61
  4232b8:	xor    eax,0xc610b619
  4232bd:	cmp    BYTE PTR [ecx],bl
  4232bf:	adc    eax,0xac95f254
  4232c4:	inc    edx
  4232c5:	into   
  4232c6:	xor    al,0x7b
  4232c8:	ins    DWORD PTR es:[edi],dx
  4232c9:	xor    eax,0x98fe52bc
  4232ce:	mov    ebx,0xbb4fd123
  4232d3:	or     ch,dh
  4232d5:	int    0x17
  4232d7:	sbb    eax,0x68479b57
  4232dc:	pop    esp
  4232dd:	loop   0x4232dc
  4232df:	pop    edi
  4232e0:	aaa    
  4232e1:	ins    DWORD PTR es:[edi],dx
  4232e2:	push   edx
  4232e3:	scas   al,BYTE PTR es:[edi]
  4232e4:	psrad  mm6,mm1
  4232e7:	xor    DWORD PTR [ecx],esi
  4232e9:	mov    edi,0x3a6580bf
  4232ee:	push   ebx
  4232ef:	mov    dh,0x5c
  4232f1:	push   edi
  4232f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232f3:	sub    esp,DWORD PTR [edi+0x70]
  4232f6:	pushf  
  4232f7:	sti    
  4232f8:	push   edx
  4232f9:	(bad)  
  4232fa:	out    dx,al
  4232fb:	or     al,0x9c
  4232fd:	les    esi,FWORD PTR [edi]
  4232ff:	mov    esp,0x651880
  423304:	popf   
  423305:	cwde   
  423306:	in     eax,0x5
  423308:	leave  
  423309:	xor    ch,BYTE PTR [ebp-0x7a962400]
  42330f:	dec    esi
  423310:	imul   ebx,DWORD PTR [ebx+0x6b061f1],0x873f0fb0
  42331a:	mov    ah,0x57
  42331c:	jp     0x4232a2
  42331e:	jbe    0x42331c
  423320:	cwde   
  423321:	icebp  
  423322:	jae    0x4232eb
  423324:	mov    DWORD PTR [eax],0x6e5c2af9
  42332a:	pop    eax
  42332b:	and    al,0x3d
  42332d:	xchg   edi,eax
  42332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42332f:	pop    es
  423330:	jne    0x4232d2
  423332:	pop    edi
  423333:	fdivr  DWORD PTR ds:[esi]
  423336:	imul   esp,DWORD PTR [ecx],0xee05aadf
  42333c:	jbe    0x42334f
  42333e:	cmp    eax,0x2a30af06
  423343:	xor    BYTE PTR [edi+ebx*4-0x1d09c9ad],bl
  42334a:	js     0x4233a3
  42334c:	jp     0x42334d
  42334e:	mov    ?,WORD PTR [edx+eax*2]
  423351:	sbb    eax,0xaf2d868b
  423356:	push   es
  423357:	bound  ebp,QWORD PTR [eax+0x36f5d4a1]
  42335d:	icebp  
  42335e:	bound  ecx,QWORD PTR [esp+edi*4-0x3a]
  423362:	xchg   ecx,eax
  423363:	(bad)  
  423364:	cld    
  423365:	bound  edx,QWORD PTR [edx+0x61dee6b5]
  42336b:	xchg   ebp,eax
  42336c:	jmp    0xce3e:0x166e62b3
  423373:	mov    esp,0x7ed0b95d
  423378:	sub    ch,cl
  42337a:	jg     0x42338e
  42337c:	push   0xffffffb9
  42337e:	sbb    esp,edi
  423380:	mov    ds:0x5952f71b,eax
  423385:	jge    0x4233d4
  423387:	push   ds
  423388:	imul   edi,esp,0x3e
  42338b:	mov    esp,0xa151cc00
  423390:	es je  0x4233e5
  423393:	enter  0xcd4b,0x2b
  423397:	lock mov edx,0x54d23d23
  42339d:	cmp    DWORD PTR [esi+0x66de6478],ecx
  4233a3:	lods   al,BYTE PTR ds:[esi]
  4233a4:	fsubr  QWORD PTR [ebp-0x39]
  4233a7:	pop    ecx
  4233a8:	loopne 0x423417
  4233aa:	pop    edx
  4233ab:	jl     0x423377
  4233ad:	add    dl,ah
  4233af:	xchg   edx,eax
  4233b0:	mov    al,0xae
  4233b2:	jg     0x423432
  4233b4:	ss out 0x58,al
  4233b7:	mov    esp,0xaa758325
  4233bc:	xchg   ecx,eax
  4233bd:	dec    ebx
  4233be:	or     al,0xd8
  4233c0:	test   cl,cl
  4233c2:	push   esi
  4233c3:	push   edx
  4233c4:	xchg   esi,eax
  4233c5:	xor    BYTE PTR [ebx],bh
  4233c7:	push   esp
  4233c8:	aad    0x71
  4233ca:	add    DWORD PTR [eax],ebp
  4233cc:	xor    DWORD PTR [ebx],ecx
  4233ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233cf:	retf   0xaa11
  4233d2:	jnp    0x4233c9
  4233d4:	cli    
  4233d5:	jns    0x4233cb
  4233d7:	dec    edi
  4233d8:	push   cs
  4233d9:	add    ah,0x5a
  4233dc:	add    DWORD PTR [ebx-0x6],eax
  4233df:	or     dh,BYTE PTR [esi+0x11]
  4233e2:	or     al,0x48
  4233e4:	mov    al,ds:0x452716b3
  4233e9:	arpl   WORD PTR [eax],ax
  4233eb:	(bad)  
  4233ec:	bswap  ebp
  4233ee:	fimul  DWORD PTR ds:0x83f47f26
  4233f4:	ds std 
  4233f6:	and    eax,0x144d6877
  4233fb:	iret   
  4233fc:	int3   
  4233fd:	xchg   ebp,eax
  4233fe:	ret    
  4233ff:	xchg   BYTE PTR [edi-0x55ad21ce],al
  423405:	das    
  423406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423407:	cmc    
  423408:	cmp    eax,0x4bf70044
  42340d:	cmp    ah,al
  42340f:	in     eax,dx
  423410:	jbe    0x423452
  423412:	repnz cdq 
  423414:	dec    ebp
  423415:	clc    
  423416:	xor    ebp,DWORD PTR [ebx]
  423418:	popf   
  423419:	pop    edi
  42341a:	xchg   ebp,eax
  42341b:	mov    ?,WORD PTR [edx+0x664ebb4]
  423421:	push   0x3bc198ba
  423426:	xchg   edx,eax
  423427:	jae    0x423468
  423429:	mov    edi,0x263c7736
  42342e:	inc    ebp
  42342f:	and    al,0x34
  423431:	sub    DWORD PTR [ebx+0x30],edx
  423434:	stc    
  423435:	or     al,0xee
  423437:	xchg   ebx,eax
  423438:	inc    ecx
  423439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42343a:	push   esi
  42343b:	clc    
  42343c:	cld    
  42343d:	mov    ah,0xa7
  42343f:	pop    es
  423440:	adc    edi,DWORD PTR ds:0x24a7a1d1
  423446:	inc    ebp
  423447:	out    dx,eax
  423448:	and    BYTE PTR [esi-0x54],ch
  42344b:	(bad)  
  42344c:	test   al,0x24
  42344e:	seta   BYTE PTR [edi+edx*8]
  423452:	push   0x6e
  423454:	xor    ah,bh
  423456:	cmp    eax,0x3618e3ae
  42345b:	aaa    
  42345c:	dec    ebp
  42345d:	add    ebp,esi
  42345f:	or     BYTE PTR [ebx+edx*8-0x1de0febf],dh
  423466:	and    edx,DWORD PTR ss:[edx+edx*8+0x0]
  42346b:	push   esi
  42346c:	mov    esi,0xf5b0feeb
  423471:	in     al,0xa2
  423473:	iret   
  423474:	add    DWORD PTR [eax],ebp
  423476:	leave  
  423477:	adc    esp,DWORD PTR [ecx+ebp*2]
  42347a:	out    dx,eax
  42347b:	inc    edi
  42347c:	sub    DWORD PTR [esi],edi
  42347e:	sub    eax,0x9dc91841
  423483:	ret    
  423484:	sti    
  423485:	mov    ch,0xdf
  423487:	hlt    
  423488:	aad    0xe4
  42348a:	cmp    eax,0xc3fe5aae
  42348f:	sbb    BYTE PTR [edi],ah
  423491:	jg     0x423428
  423493:	test   BYTE PTR [esi-0x4491e9ae],0x35
  42349a:	sti    
  42349b:	lahf   
  42349c:	push   0x5c
  42349e:	xor    al,0x9b
  4234a0:	daa    
  4234a1:	retf   0xae9
  4234a4:	in     eax,0x83
  4234a6:	lods   al,BYTE PTR ds:[esi]
  4234a7:	aam    0xf
  4234a9:	sbb    DWORD PTR ds:0x4f5c31db,0x23
  4234b0:	mov    ebp,DWORD PTR [edx]
  4234b2:	adc    BYTE PTR [ecx+ecx*8],ah
  4234b5:	(bad)
  4234b8:	inc    edx
  4234b9:	ror    DWORD PTR [ebx+edx*2-0x4cc1f87b],cl
  4234c0:	dec    eax
  4234c1:	fs mov ebp,0x3abfbfc1
  4234c7:	mov    bh,0xa9
  4234c9:	ss dec edi
  4234cb:	inc    edx
  4234cc:	jmp    0xc96f:0x1e81dfb3
  4234d3:	gs sub ah,bl
  4234d6:	lock pop ebx
  4234d8:	test   al,0xf3
  4234da:	jo     0x42350d
  4234dc:	xor    DWORD PTR [eax+0x43cb0b36],edi
  4234e2:	in     al,dx
  4234e3:	push   ds
  4234e4:	mov    esp,0x6a7a6599
  4234e9:	mov    eax,0xed75f2b9
  4234ee:	mov    ch,0xee
  4234f0:	in     al,0x11
  4234f2:	lods   al,BYTE PTR ds:[esi]
  4234f3:	mov    esp,0xc6b40a95
  4234f8:	arpl   WORD PTR [ebp-0x21f79a96],cx
  4234fe:	test   al,0x5e
  423500:	in     al,dx
  423501:	bound  edi,QWORD PTR cs:[esi+0x4d7660b8]
  423508:	(bad)  
  423509:	test   eax,0xe5274d99
  42350e:	jecxz  0x42354e
  423510:	mov    ecx,0xcdbd8999
  423515:	jne    0x4234f1
  423517:	xor    eax,0x2a790898
  42351c:	inc    edi
  42351d:	jp     0x4234a5
  42351f:	iret   
  423520:	or     ah,cl
  423522:	loope  0x423560
  423524:	leave  
  423525:	loopne 0x4234d2
  423527:	and    al,0x69
  423529:	push   eax
  42352a:	repnz mov bh,0x21
  42352d:	sbb    esi,DWORD PTR [ecx+edi*8-0x2c]
  423531:	xchg   edi,eax
  423532:	fwait
  423533:	jle    0x423519
  423535:	cld    
  423536:	mov    ds:0xddfa6da1,al
  42353b:	outs   dx,DWORD PTR ds:[esi]
  42353c:	pop    es
  42353d:	in     al,dx
  42353e:	(bad)
  423542:	pop    ecx
  423543:	xor    edi,DWORD PTR [ebx]
  423545:	and    dh,BYTE PTR [ecx]
  423547:	cli    
  423548:	bnd jl 0x4235b9
  42354b:	dec    edx
  42354c:	sub    DWORD PTR [ecx+eax*8+0x335d93b0],eax
  423553:	and    DWORD PTR [eax+0x3dd91e1e],eax
  423559:	and    edi,ecx
  42355b:	push   es
  42355c:	fnstsw WORD PTR [eax+eax*2-0x56]
  423560:	int    0x92
  423562:	mov    ch,0x7c
  423564:	popa   
  423565:	sbb    eax,0x54bad1eb
  42356a:	jns    0x42352a
  42356c:	push   0x7c62ecdf
  423571:	rol    ebx,1
  423573:	stc    
  423574:	dec    esp
  423575:	repz lds esp,FWORD PTR [edx+0x55368cf9]
  42357c:	xor    eax,0x48540599
  423581:	xchg   esp,eax
  423582:	push   ss
  423583:	ins    BYTE PTR es:[edi],dx
  423584:	imul   edx,DWORD PTR [edi+0x18],0xa38e405
  42358b:	dec    esi
  42358c:	nop
  42358d:	fiadd  WORD PTR [ebp+0x2de2d999]
  423593:	or     DWORD PTR [eax-0x4eb83b59],ebp
  423599:	jmp    0xc306:0x2cd2690b
  4235a0:	cli    
  4235a1:	add    dh,BYTE PTR [ecx+0x4d]
  4235a4:	int    0xad
  4235a6:	int    0xa4
  4235a8:	daa    
  4235a9:	test   edx,0xd0da8e39
  4235af:	das    
  4235b0:	cmp    dl,BYTE PTR [edi]
  4235b2:	pop    es
  4235b3:	fwait
  4235b4:	sub    cl,BYTE PTR [edi]
  4235b6:	adc    DWORD PTR [edx-0x25b5c1ab],ebp
  4235bc:	jb     0x42357c
  4235be:	lea    edi,[ebx]
  4235c0:	aas    
  4235c1:	hlt    
  4235c2:	pusha  
  4235c3:	jmp    0xec5049ce
  4235c8:	sub    BYTE PTR [esp+eiz*4],0x43
  4235cc:	lods   eax,DWORD PTR ds:[esi]
  4235cd:	and    al,0x3c
  4235cf:	shr    bh,1
  4235d1:	out    0xb4,eax
  4235d3:	enter  0x6e38,0x9a
  4235d7:	out    dx,al
  4235d8:	sbb    eax,0xff4a699b
  4235dd:	out    dx,al
  4235de:	stos   DWORD PTR es:[edi],eax
  4235df:	sti    
  4235e0:	popf   
  4235e1:	dec    esi
  4235e2:	inc    esp
  4235e3:	mov    al,ah
  4235e5:	push   esp
  4235e6:	sbb    al,bh
  4235e8:	and    ch,BYTE PTR [eax]
  4235ea:	bound  esp,QWORD PTR [eax+0x7c170ccc]
  4235f0:	mov    DWORD PTR [eax+0x44],eax
  4235f3:	es push ecx
  4235f5:	int    0x9b
  4235f7:	and    DWORD PTR [ebx],0xffffffc1
  4235fa:	cli    
  4235fb:	rol    al,cl
  4235fd:	in     eax,dx
  4235fe:	or     al,BYTE PTR [esi-0x3b]
  423601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423602:	xor    bh,BYTE PTR [ecx]
  423604:	out    dx,eax
  423605:	and    al,0x4a
  423607:	jmp    0x4235f5
  423609:	clc    
  42360a:	xor    BYTE PTR [ebp+0xa],0x7c
  42360e:	loop   0x423672
  423610:	jb     0x4235ca
  423612:	out    0xfc,al
  423614:	cmp    eax,0xfe866071
  423619:	ret    0x43ea
  42361c:	fst    DWORD PTR [eax]
  42361e:	ds (bad) 
  423620:	mov    esp,0x958661f9
  423625:	lahf   
  423626:	adc    eax,0x8d77bb98
  42362b:	fcomi  st,st(2)
  42362d:	in     al,dx
  42362e:	scas   eax,DWORD PTR es:[edi]
  42362f:	popa   
  423630:	mov    bh,0x60
  423632:	pop    ss
  423633:	jmp    0x8d15:0xe3dc5630
  42363a:	fimul  DWORD PTR [ebx+0x3979e33b]
  423640:	inc    eax
  423641:	ror    DWORD PTR [ebp+0x78989c06],1
  423647:	(bad)  
  423648:	out    dx,al
  423649:	mov    al,ds:0x6d836cd
  42364e:	fwait
  42364f:	aam    0x39
  423651:	imul   esi,DWORD PTR [edx-0x611ff4e3],0xffffffae
  423658:	sub    BYTE PTR [edi],0x43
  42365b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42365c:	push   0x1
  42365e:	adc    eax,ecx
  423660:	out    dx,al
  423661:	add    esp,DWORD PTR [edi+0x5f]
  423664:	shl    esp,1
  423666:	sbb    BYTE PTR [edx+0x6b6ec63],dh
  42366c:	and    ebx,DWORD PTR [ebp-0x5027e11d]
  423672:	jno    0x42362f
  423674:	repz fsubr QWORD PTR [ebp+0x71]
  423678:	ficom  DWORD PTR [eax+0x188f4bd3]
  42367e:	and    eax,0x752335f3
  423683:	mov    al,ds:0xc0dc057b
  423688:	int    0x3
  42368a:	xchg   esi,eax
  42368b:	(bad)  
  42368c:	and    eax,0xdbd25415
  423691:	rol    eax,0x63
  423694:	icebp  
  423695:	inc    esp
  423696:	xchg   esi,eax
  423697:	mov    al,ds:0xcd368ab8
  42369c:	or     dh,0xb1
  42369f:	or     edi,DWORD PTR [esp+edi*2]
  4236a2:	xor    DWORD PTR [edx-0x6928653b],ebx
  4236a8:	mov    ?,WORD PTR [ebp+eiz*1-0xb4f27d9]
  4236af:	(bad)  
  4236b0:	stos   DWORD PTR es:[edi],eax
  4236b1:	push   eax
  4236b2:	fcomp  QWORD PTR [ecx+edx*4]
  4236b5:	test   eax,0x51b5a409
  4236ba:	adc    edx,DWORD PTR [esi+0x7227fcda]
  4236c0:	into   
  4236c1:	jge    0x4236db
  4236c3:	jle    0x42368e
  4236c5:	jnp    0x423711
  4236c7:	mov    al,0xa3
  4236c9:	jno    0x4236bf
  4236cb:	rol    BYTE PTR [edi-0x14],cl
  4236ce:	pop    esp
  4236cf:	js     0x423685
  4236d1:	mov    bl,0x68
  4236d3:	push   ecx
  4236d4:	call   0xe7d5:0xa73cb0fb
  4236db:	sbb    edx,0x33
  4236de:	push   ebp
  4236df:	sahf   
  4236e0:	(bad)  
  4236e1:	in     eax,dx
  4236e2:	inc    esi
  4236e3:	push   ebx
  4236e4:	add    BYTE PTR [edx-0x2a62f775],bl
  4236ea:	aad    0x2b
  4236ec:	and    DWORD PTR [ecx+0x3d18b904],edi
  4236f2:	jge    0x423748
  4236f4:	les    ecx,FWORD PTR [ecx+0x23]
  4236f7:	sbb    dh,al
  4236f9:	mov    ebx,?
  4236fb:	sbb    DWORD PTR [eax],ecx
  4236fd:	add    al,0x18
  4236ff:	iret   
  423700:	clc    
  423701:	inc    esp
  423702:	addr16 das 
  423704:	pop    ds
  423705:	sub    al,0x6c
  423707:	jns    0x423736
  423709:	fucom  st(4)
  42370b:	in     al,0x7c
  42370d:	into   
  42370e:	jmp    0x4236fd
  423710:	test   al,0xba
  423712:	jp     0x423751
  423714:	mov    ch,0x5f
  423716:	outs   dx,DWORD PTR ds:[esi]
  423717:	cli    
  423718:	xchg   esp,eax
  423719:	jg     0x4236d9
  42371b:	jle    0x423730
  42371d:	pop    ebx
  42371e:	jae    0x423765
  423720:	outs   dx,DWORD PTR ds:[esi]
  423721:	fwait
  423722:	nop
  423723:	add    al,0x8c
  423725:	stc    
  423726:	popf   
  423727:	ret    
  423728:	mov    WORD PTR [edi+0x3b54df97],es
  42372e:	mov    BYTE PTR [edx+0x1a],bh
  423731:	(bad)
  423736:	pop    edx
  423737:	pop    ss
  423738:	sbb    BYTE PTR [edi+0x2dee5aad],0x39
  42373f:	jne    0x4237b1
  423741:	sub    eax,0xfdd87929
  423746:	xor    DWORD PTR [edx+0x2d],edx
  423749:	mov    ch,al
  42374b:	(bad)  
  42374d:	mov    gs,WORD PTR [edi-0x44cc989a]
  423753:	fmul   QWORD PTR [esi+0x3b]
  423756:	arpl   sp,ax
  423758:	and    BYTE PTR [edi+0x67],ch
  42375b:	cmp    DWORD PTR [esi-0x56b89a94],edx
  423761:	imul   ecx,DWORD PTR ds:0xddff535b,0xfffffff8
  423768:	pop    edx
  423769:	pop    esp
  42376a:	jo     0x423700
  42376c:	mov    bh,0xfa
  42376e:	and    dl,dh
  423770:	pop    ds
  423771:	pop    es
  423772:	jecxz  0x4237b8
  423774:	dec    ebp
  423775:	or     ecx,DWORD PTR [ebx]
  423777:	pop    ecx
  423778:	outs   dx,DWORD PTR ds:[esi]
  423779:	cmp    bl,ch
  42377b:	and    ecx,DWORD PTR [edx-0x62]
  42377e:	mov    cl,0xe3
  423780:	xchg   esp,eax
  423781:	xchg   BYTE PTR [edi-0x4f1e15a5],bl
  423787:	add    dl,BYTE PTR [ecx]
  423789:	push   ecx
  42378a:	sbb    al,0xef
  42378c:	mov    ch,0xf5
  42378e:	push   ecx
  42378f:	leave  
  423790:	ins    DWORD PTR es:[edi],dx
  423791:	(bad)
  423794:	xchg   edx,eax
  423795:	xchg   ebp,eax
  423796:	loopne 0x423769
  423798:	or     eax,0x1a8a5f2d
  42379d:	rol    DWORD PTR [ebx],0x63
  4237a0:	(bad)  
  4237a1:	pop    ecx
  4237a2:	cdq    
  4237a3:	js     0x4237a2
  4237a5:	push   ss
  4237a6:	test   dh,ah
  4237a8:	jbe    0x423811
  4237aa:	clc    
  4237ab:	mov    al,0x3b
  4237ad:	jg     0x4237d4
  4237af:	div    BYTE PTR [ebx]
  4237b1:	es jnp 0x423765
  4237b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237b5:	jmp    eax
  4237b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237b8:	sub    al,0x61
  4237ba:	push   ss
  4237bb:	dec    DWORD PTR [eax+0x1b]
  4237be:	pushw  ds
  4237c0:	sar    BYTE PTR [edx+0x13ca9467],0x3e
  4237c7:	jl     0x423819
  4237c9:	shl    BYTE PTR [edi],0x6f
  4237cc:	idiv   DWORD PTR [ecx]
  4237ce:	push   esp
  4237cf:	mov    BYTE PTR [eax*1-0x4beb90b1],dl
  4237d6:	mov    edx,0x58ce2c8f
  4237db:	or     BYTE PTR [ecx-0x5dbf297b],ch
  4237e1:	jno    0x4237fb
  4237e3:	xor    edx,ebx
  4237e5:	out    0x10,eax
  4237e7:	aam    0xc0
  4237e9:	push   ecx
  4237ea:	xor    al,0x22
  4237ec:	ja     0x4237d5
  4237ee:	sar    DWORD PTR ds:0xce7622b2,cl
  4237f4:	fucom  st(3)
  4237f6:	aad    0x9f
  4237f8:	mov    ch,0x9e
  4237fa:	cld    
  4237fb:	xor    edi,edi
  4237fd:	lods   al,BYTE PTR ds:[esi]
  4237fe:	es mov bl,0x1
  423801:	lds    esp,FWORD PTR [edx-0x69]
  423804:	popf   
  423805:	dec    ebp
  423806:	mov    ss,WORD PTR [ebx+0x5f]
  423809:	xlat   BYTE PTR ds:[ebx]
  42380a:	adc    eax,0x51a5d753
  42380f:	mov    ss,WORD PTR [edx+0x63]
  423812:	cmp    al,0xda
  423814:	dec    ecx
  423815:	add    DWORD PTR [edi],eax
  423817:	dec    esi
  423818:	jmp    0x21970ef7
  42381d:	inc    ecx
  42381e:	pop    ebx
  42381f:	mov    esi,0x6f233643
  423824:	popf   
  423825:	mov    esp,0x72f2efbe
  42382a:	into   
  42382b:	push   es
  42382c:	loopne 0x4238ad
  42382e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42382f:	xor    DWORD PTR [ecx+0x6e225edf],edx
  423835:	cmp    eax,0x9001bf53
  42383a:	xchg   esp,eax
  42383b:	scas   al,BYTE PTR es:[edi]
  42383c:	xchg   ecx,eax
  42383d:	adc    eax,0x23bd24c1
  423842:	or     edx,DWORD PTR [edx+0x69b65dd9]
  423848:	fs (bad) 
  42384a:	jp     0x4237e7
  42384c:	mov    edi,0x26b7183f
  423851:	ret    
  423852:	adc    al,0x19
  423854:	shr    ebx,cl
  423856:	fwait
  423857:	std    
  423858:	stos   BYTE PTR es:[edi],al
  423859:	out    dx,eax
  42385a:	or     ch,BYTE PTR [ebx+0x1b]
  42385d:	outs   dx,DWORD PTR ds:[esi]
  42385e:	mov    dl,0x1f
  423860:	adc    BYTE PTR [esi],dh
  423862:	icebp  
  423863:	fldcw  WORD PTR [edx+0x33ff3843]
  423869:	xor    eax,DWORD PTR [ebx+ebp*2]
  42386c:	test   BYTE PTR [ebp+0x1c],dh
  42386f:	sub    ebx,DWORD PTR [ecx-0x1e9fe1dd]
  423875:	test   DWORD PTR [ebp+0x68],esp
  423878:	lods   eax,DWORD PTR ds:[esi]
  423879:	sbb    esi,DWORD PTR [ecx]
  42387b:	xchg   ebx,eax
  42387c:	pop    eax
  42387d:	adc    ebx,ecx
  42387f:	outs   dx,BYTE PTR ds:[esi]
  423880:	fnsave [edi-0x1f]
  423883:	or     eax,0xc26ca71f
  423888:	xchg   edx,esp
  42388a:	xchg   edi,eax
  42388b:	mov    esi,0x47d118c0
  423890:	xchg   esp,eax
  423891:	cmp    DWORD PTR [ebx-0x53],esp
  423894:	hlt    
  423895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423896:	sbb    al,0xcf
  423898:	call   0x67e54f40
  42389d:	test   DWORD PTR [ecx],ebp
  42389f:	mov    dh,0x28
  4238a1:	dec    edx
  4238a2:	lods   al,BYTE PTR ds:[esi]
  4238a3:	cmp    DWORD PTR [ebp-0x41],ecx
  4238a6:	fld    st(4)
  4238a8:	and    eax,0xb0f0a676
  4238ad:	shl    BYTE PTR [eax-0x6781839b],0x94
  4238b4:	out    dx,eax
  4238b5:	out    dx,eax
  4238b6:	das    
  4238b7:	pop    ss
  4238b8:	arpl   WORD PTR [ecx+0xd],sp
  4238bb:	push   cs
  4238bc:	adc    DWORD PTR [edx],0x53868fa8
  4238c2:	arpl   WORD PTR [ebp-0x15377173],di
  4238c8:	inc    esi
  4238c9:	sahf   
  4238ca:	ret    
  4238cb:	out    0x76,eax
  4238cd:	test   BYTE PTR [ebp-0x53],cl
  4238d0:	sub    dh,0x1e
  4238d3:	dec    edx
  4238d4:	adc    al,0x84
  4238d6:	fwait
  4238d7:	jle    0x423911
  4238d9:	push   esp
  4238da:	sbb    BYTE PTR [ecx-0x30],ah
  4238dd:	ficom  WORD PTR [ebx-0x29]
  4238e0:	sub    ebx,DWORD PTR [eax]
  4238e2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238e4:	popf   
  4238e5:	or     DWORD PTR [ecx+0x1215718a],ebp
  4238eb:	mov    al,ds:0x3365e0b7
  4238f0:	cmp    BYTE PTR [ecx-0x44],bl
  4238f3:	outs   dx,BYTE PTR ds:[esi]
  4238f4:	retf   
  4238f5:	(bad)  
  4238f6:	lods   eax,DWORD PTR ss:[esi]
  4238f8:	outs   dx,DWORD PTR ds:[esi]
  4238f9:	mov    eax,ds:0xba1a40b4
  4238fe:	jmp    0xfd18:0x11372c1a
  423905:	test   eax,0x5e27cf4e
  42390a:	jl     0x4238e8
  42390c:	mov    esp,0xdc357687
  423911:	fldenv ds:0x5103426a
  423917:	xchg   ebp,eax
  423918:	cmp    DWORD PTR [edi+0x78],edx
  42391b:	push   ebx
  42391c:	xor    DWORD PTR [eax],ebp
  42391e:	lahf   
  42391f:	int3   
  423920:	in     eax,dx
  423921:	mov    cl,0xc9
  423923:	ss push ds
  423925:	cmp    ecx,0x4f
  423928:	retf   
  423929:	lods   al,BYTE PTR ds:[esi]
  42392a:	pop    ds
  42392b:	dec    edx
  42392c:	clc    
  42392d:	adc    eax,0x2aa5bc8c
  423932:	mov    bh,0xd2
  423934:	pop    edi
  423935:	fcmovbe st,st(7)
  423937:	ja     0x4238bd
  423939:	out    dx,al
  42393a:	fnstcw WORD PTR [eax+0x64]
  42393d:	cmp    esp,DWORD PTR [esi-0x25]
  423940:	adc    eax,0x9e52e211
  423945:	jecxz  0x4238ca
  423947:	jo     0x4238d7
  423949:	ret    
  42394a:	cmp    dh,ah
  42394c:	aam    0x7c
  42394e:	ret    
  42394f:	xchg   edi,eax
  423950:	into   
  423951:	pop    esp
  423952:	rcl    DWORD PTR [esi],1
  423954:	fwait
  423955:	cmp    ebp,edi
  423957:	and    al,0x9e
  423959:	pushf  
  42395a:	fs jno 0xdca48f1e
  423961:	inc    edi
  423962:	cld    
  423963:	(bad)
  423966:	cs fs xchg bl,dl
  42396a:	fldcw  WORD PTR [edx]
  42396c:	mov    bh,0x55
  42396e:	mov    eax,0x89d2d235
  423973:	mov    ds:0x6a99cc06,eax
  423978:	sub    BYTE PTR [eax+0x5b],bl
  42397b:	push   edi
  42397c:	ins    BYTE PTR es:[edi],dx
  42397d:	xor    eax,0x2750d090
  423982:	or     esp,DWORD PTR [ecx+0x1f1b4c6d]
  423988:	aad    0x1a
  42398a:	and    esp,DWORD PTR [esi+0x7648ad4a]
  423990:	jnp    0x4239b6
  423992:	lods   al,BYTE PTR ds:[esi]
  423993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423994:	dec    eax
  423995:	jmp    0x3d82:0xdae868d9
  42399c:	outs   dx,BYTE PTR ds:[esi]
  42399d:	cmc    
  42399e:	stc    
  42399f:	mov    esp,DWORD PTR [ecx+0x78]
  4239a2:	daa    
  4239a3:	mov    edi,0xfe805131
  4239a8:	cmp    eax,0x8a522d65
  4239ad:	adc    eax,0x2de0c611
  4239b2:	das    
  4239b3:	mov    edx,0xe496e46f
  4239b8:	adc    ecx,ecx
  4239ba:	cli    
  4239bb:	lahf   
  4239bc:	sbb    al,0xe9
  4239be:	sbb    cl,BYTE PTR [edx-0x48743921]
  4239c4:	gs retf 0xd40f
  4239c8:	sti    
  4239c9:	and    al,0xa5
  4239cb:	stc    
  4239cc:	inc    esp
  4239cd:	pop    edi
  4239ce:	jecxz  0x423a06
  4239d0:	je     0x423963
  4239d2:	and    al,0xbe
  4239d4:	dec    edi
  4239d5:	or     DWORD PTR [ebx+0x408cd2c0],esp
  4239db:	call   DWORD PTR [ebx+edi*8-0x6fcf64d8]
  4239e2:	stos   BYTE PTR es:[edi],al
  4239e3:	jecxz  0x423a18
  4239e5:	inc    ebp
  4239e6:	sahf   
  4239e7:	lds    ecx,FWORD PTR [ebp+0x2a4d76a1]
  4239ed:	shl    DWORD PTR [ecx-0x76],cl
  4239f0:	cmp    al,0x6c
  4239f2:	mov    esp,0xc0756b78
  4239f7:	and    bl,ah
  4239f9:	adc    eax,DWORD PTR [edx]
  4239fb:	(bad)  
  4239fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239fd:	adc    ah,BYTE PTR [edi+eiz*4-0x56]
  423a01:	push   ecx
  423a02:	sbb    BYTE PTR [ebx+0x60],al
  423a05:	xor    ebx,edx
  423a07:	int    0xef
  423a09:	dec    esp
  423a0a:	jmp    0x4baddd61
  423a0f:	cmp    eax,DWORD PTR [ebx]
  423a11:	test   DWORD PTR [ebx],edi
  423a13:	xchg   esp,eax
  423a14:	add    ebx,DWORD PTR [eax+ebp*8]
  423a17:	ins    BYTE PTR es:[edi],dx
  423a18:	in     eax,dx
  423a19:	dec    eax
  423a1a:	cld    
  423a1b:	pop    es
  423a1c:	leave  
  423a1d:	and    BYTE PTR [edx+0x198286f],0x56
  423a24:	jmp    0xd4e0:0x84e585e8
  423a2b:	xchg   esp,eax
  423a2c:	(bad)  
  423a2d:	pop    ds
  423a2e:	pop    ebx
  423a2f:	xchg   esi,eax
  423a30:	mov    ch,0xd1
  423a32:	dec    ecx
  423a33:	leave  
  423a34:	mov    ah,0x98
  423a36:	ficomp WORD PTR [esi+0x6c80a77c]
  423a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a3d:	outs   dx,DWORD PTR ds:[esi]
  423a3e:	sahf   
  423a3f:	sub    cl,BYTE PTR [eax]
  423a41:	int    0x37
  423a43:	rcl    BYTE PTR [ebx+0x60],0xef
  423a47:	pop    esi
  423a48:	ret    0x919
  423a4b:	add    DWORD PTR [ebp+0x22],edi
  423a4e:	fst    QWORD PTR [edi]
  423a50:	and    BYTE PTR [eax-0x1279698d],bl
  423a56:	push   eax
  423a57:	dec    edi
  423a58:	dec    BYTE PTR [eax+0x49]
  423a5b:	fsub   DWORD PTR [ebx+0x5efcc9d6]
  423a61:	hlt    
  423a62:	adc    dl,BYTE PTR [edi]
  423a64:	xor    al,0xce
  423a66:	and    al,0xd7
  423a68:	cdq    
  423a69:	jp     0x423a2f
  423a6b:	loop   0x423a12
  423a6d:	adc    eax,0x81e9185c
  423a72:	das    
  423a73:	pop    ds
  423a74:	mov    bh,0xe4
  423a76:	mov    edx,0xa8a5772e
  423a7b:	mov    bl,BYTE PTR [edi]
  423a7d:	pop    ss
  423a7e:	stc    
  423a7f:	les    esi,FWORD PTR [esi+0x3aa769bc]
  423a85:	push   ss
  423a86:	loop   0x423ad4
  423a88:	in     eax,0xae
  423a8a:	xchg   ebx,eax
  423a8b:	push   0xffffff9d
  423a8d:	(bad)  
  423a8e:	cmp    DWORD PTR [eax-0xa5724c1],ebp
  423a94:	cs sti 
  423a96:	es pop edx
  423a98:	push   eax
  423a99:	je     0x423a74
  423a9b:	pop    ds
  423a9c:	repz sub edi,DWORD PTR es:0x285fe35b
  423aa4:	xor    edx,ebp
  423aa6:	lods   eax,DWORD PTR ds:[esi]
  423aa7:	mov    ecx,esi
  423aa9:	push   cs
  423aaa:	test   al,0x21
  423aac:	loop   0x423af1
  423aae:	outs   dx,BYTE PTR ds:[esi]
  423aaf:	push   eax
  423ab0:	loopne 0x423a9d
  423ab2:	pop    eax
  423ab3:	sar    BYTE PTR [edi],cl
  423ab5:	call   0xd311:0xe08b02f
  423abc:	jnp    0x423a7a
  423abe:	ins    DWORD PTR es:[edi],dx
  423abf:	jo     0x423a4f
  423ac1:	adc    al,0x94
  423ac3:	sub    al,al
  423ac5:	adc    al,0x59
  423ac7:	out    0x6,al
  423ac9:	mov    bl,0x87
  423acb:	in     al,0x5d
  423acd:	sahf   
  423ace:	pop    ds
  423acf:	jne    0x423b03
  423ad1:	aas    
  423ad2:	xor    esp,DWORD PTR [esi-0x6ed65d31]
  423ad8:	les    edx,FWORD PTR [edx]
  423ada:	mov    BYTE PTR [ecx+0x11171a3a],0x3e
  423ae1:	pop    edi
  423ae2:	xchg   BYTE PTR [esi-0x2f],ch
  423ae5:	push   edx
  423ae6:	test   edi,0x9f406b22
  423aec:	loopne 0x423b54
  423aee:	fucomp st(1)
  423af0:	adc    DWORD PTR [eax+0x4f],ecx
  423af3:	adc    al,0x59
  423af5:	js     0x423b48
  423af7:	xchg   ebx,esp
  423af9:	ja     0x423a89
  423afb:	(bad)  
  423afc:	mov    di,0x67ec
  423b00:	loop   0x423af6
  423b02:	jecxz  0x423b48
  423b04:	push   ecx
  423b05:	mov    edx,0xee523239
  423b0a:	xor    eax,0xc09af810
  423b0f:	pop    esi
  423b10:	jno    0x423b8b
  423b12:	test   DWORD PTR [esi+ebp*8+0x43],eax
  423b16:	out    dx,eax
  423b17:	xchg   ebp,eax
  423b18:	jp     0x423b5a
  423b1a:	ret    
  423b1b:	fbstp  TBYTE PTR [ebp-0x3d]
  423b1e:	cmp    eax,0x47fee882
  423b23:	iret   
  423b24:	sbb    DWORD PTR [esi],ebx
  423b26:	sub    DWORD PTR [edx],ebp
  423b28:	jae    0x423ae1
  423b2a:	es pop esi
  423b2c:	js     0x423b6a
  423b2e:	aaa    
  423b2f:	mov    bl,BYTE PTR [ebp-0x7b3ff52b]
  423b35:	ret    
  423b36:	mov    esp,0xc07df7da
  423b3b:	fs scas al,BYTE PTR es:[edi]
  423b3d:	fs ins BYTE PTR es:[edi],dx
  423b3f:	push   0x2e
  423b41:	xchg   edi,eax
  423b42:	mov    ch,BYTE PTR ds:0xdc131530
  423b48:	or     al,0x43
  423b4a:	in     eax,dx
  423b4b:	and    DWORD PTR [ebp+0x62],eax
  423b4e:	jecxz  0x423ba1
  423b50:	and    bh,ch
  423b52:	div    BYTE PTR ds:0x6f78edec
  423b58:	enter  0xc4ef,0xa3
  423b5c:	sbb    al,0x10
  423b5e:	add    ebx,DWORD PTR [ebx+0x47b44ecf]
  423b64:	sbb    eax,0x62160afb
  423b69:	push   ds
  423b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b6b:	popf   
  423b6c:	ret    
  423b6d:	jnp    0x423b42
  423b6f:	xchg   esi,eax
  423b70:	js     0x423b3d
  423b72:	and    BYTE PTR [esi],dh
  423b74:	mov    ?,WORD PTR [eax+0x547608fa]
  423b7a:	push   esp
  423b7b:	addr16 test esp,esp
  423b7e:	xchg   esp,eax
  423b7f:	(bad)  
  423b80:	fdivrp st(5),st
  423b82:	mov    BYTE PTR [edx],0xfe
  423b85:	mov    ebp,0x142f0d44
  423b8a:	pop    eax
  423b8b:	test   al,0x21
  423b8d:	das    
  423b8e:	and    al,0x19
  423b90:	daa    
  423b91:	aam    0x34
  423b93:	xor    esi,DWORD PTR [edx]
  423b95:	pop    ebp
  423b96:	sbb    al,0xae
  423b98:	sbb    eax,0x45246ddf
  423b9d:	inc    esi
  423b9e:	cmc    
  423b9f:	lds    ecx,FWORD PTR [ecx-0x176ce265]
  423ba5:	out    dx,eax
  423ba6:	dec    edx
  423ba7:	xlat   BYTE PTR ds:[ebx]
  423ba8:	out    0xf7,al
  423baa:	xor    eax,eax
  423bac:	pop    ebx
  423bad:	mov    bh,0xdb
  423baf:	sub    dh,cl
  423bb1:	push   ss
  423bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bb3:	stc    
  423bb4:	mov    edi,ss
  423bb6:	push   es
  423bb7:	push   ebp
  423bb8:	sub    ah,BYTE PTR [ecx+0x15aebc0d]
  423bbe:	and    dh,BYTE PTR [edi+0x79]
  423bc1:	(bad)  
  423bc2:	push   esi
  423bc3:	and    ch,BYTE PTR [ebp-0x6]
  423bc6:	xchg   esi,eax
  423bc7:	aam    0xee
  423bc9:	mov    edi,0xa213bfa3
  423bce:	add    dl,BYTE PTR [ecx-0x3]
  423bd1:	mov    eax,0xe3f14519
  423bd6:	mov    ds,eax
  423bd8:	jbe    0x423bfd
  423bda:	xor    al,0x42
  423bdc:	or     eax,esp
  423bde:	push   0x54
  423be0:	jnp    0x423c5d
  423be2:	dec    eax
  423be3:	in     al,dx
  423be4:	loope  0x423c00
  423be6:	es mov al,0x79
  423be9:	into   
  423bea:	jno    0x423b6d
  423bec:	or     DWORD PTR [ebx-0x43],edi
  423bef:	mov    esi,0xa013f5f6
  423bf4:	dec    ecx
  423bf5:	idiv   DWORD PTR [eax]
  423bf7:	mov    dh,0xc
  423bf9:	test   DWORD PTR [ebx+0x1ef40090],0x66b1d38c
  423c03:	lss    ecx,FWORD PTR [edi]
  423c06:	scas   eax,DWORD PTR es:[edi]
  423c07:	pop    ecx
  423c08:	jg     0x423c65
  423c0a:	pop    ds
  423c0b:	fisttp WORD PTR [ebx+eiz*8+0x689475f3]
  423c12:	sahf   
  423c13:	xor    DWORD PTR [ebp-0x20],eax
  423c16:	js     0x423bc1
  423c18:	dec    ebx
  423c19:	std    
  423c1a:	mov    ch,0x73
  423c1c:	lds    edx,FWORD PTR [eax-0x4f]
  423c1f:	dec    eax
  423c20:	repz adc al,0xa2
  423c23:	push   0x123f3431
  423c28:	fmul   DWORD PTR [eax]
  423c2a:	les    ebx,FWORD PTR [ebp+0x62]
  423c2d:	and    BYTE PTR [esi-0x442a4f43],0x89
  423c34:	les    edi,FWORD PTR [eax]
  423c36:	jno    0x423cb4
  423c38:	mov    ?,WORD PTR [ecx+ebp*4]
  423c3b:	mov    esp,0xb41e2d8f
  423c40:	lea    esp,[ecx]
  423c42:	popf   
  423c43:	ffreep st(1)
  423c45:	jl     0x30a9404
  423c4b:	ins    BYTE PTR es:[edi],dx
  423c4c:	retf   0x2b75
  423c4f:	data16 (bad) 
  423c51:	das    
  423c52:	inc    eax
  423c53:	adc    DWORD PTR [eax],ebx
  423c55:	retf   0xa520
  423c58:	shl    DWORD PTR [ebx+0x5fcff9a0],0x78
  423c5f:	xchg   ebx,eax
  423c60:	popf   
  423c61:	cld    
  423c62:	arpl   WORD PTR [ebx],ax
  423c64:	jg     0x423c25
  423c66:	cmp    eax,0x6ff44c3d
  423c6b:	push   edx
  423c6c:	dec    esi
  423c6d:	sub    eax,0x49716b25
  423c72:	rcr    DWORD PTR [edi-0x8],0xf7
  423c76:	jmp    0x423c75
  423c78:	bound  eax,QWORD PTR [eax]
  423c7a:	sub    DWORD PTR [esp+esi*8],0x5a1ff774
  423c81:	mov    es,WORD PTR [edx+0x21]
  423c84:	or     ch,BYTE PTR [eax]
  423c86:	pop    ds
  423c87:	and    ebx,DWORD PTR [edi+0x429b1fbf]
  423c8d:	test   eax,0x2248beb
  423c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c93:	fist   WORD PTR [esi]
  423c95:	loop   0x423c29
  423c97:	cmp    BYTE PTR [ebx],bh
  423c99:	dec    ebp
  423c9a:	(bad)  
  423c9c:	and    al,0x53
  423c9e:	icebp  
  423c9f:	push   eax
  423ca0:	cld    
  423ca1:	rcr    BYTE PTR [esp+edx*1-0x30],0x57
  423ca6:	fistp  WORD PTR [edx+0x25]
  423ca9:	mov    al,ds:0x1a1981c7
  423cae:	inc    ecx
  423caf:	xor    BYTE PTR [esp+0x59101c6b],bl
  423cb6:	jp     0x423cea
  423cb8:	fist   DWORD PTR [edi-0x7]
  423cbb:	cmp    eax,0x9557a80c
  423cc0:	push   es
  423cc1:	sub    al,0xbc
  423cc3:	push   ds
  423cc4:	into   
  423cc5:	and    DWORD PTR [edi+0x76],edi
  423cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cc9:	fsubr  DWORD PTR [edx]
  423ccb:	xor    al,0x8e
  423ccd:	push   edi
  423cce:	sub    eax,0xa35d82d1
  423cd3:	fstp   TBYTE PTR ds:0x5215b0ef
  423cd9:	scas   al,BYTE PTR es:[edi]
  423cda:	inc    BYTE PTR [esi+0x3c]
  423cdd:	mov    esp,0xac178926
  423ce2:	sbb    eax,0x1fd4aa44
  423ce7:	test   ah,dh
  423ce9:	lods   eax,DWORD PTR ds:[esi]
  423cea:	sbb    BYTE PTR [ecx+0x6e396077],ah
  423cf0:	jb     0x423d6b
  423cf2:	adc    al,0x8c
  423cf4:	mov    edx,DWORD PTR [ecx]
  423cf6:	cs jmp 0xee7c:0xf0f9b62f
  423cfe:	int3   
  423cff:	pop    edi
  423d00:	scas   eax,DWORD PTR es:[edi]
  423d01:	rcl    BYTE PTR [ecx],1
  423d03:	xor    esi,DWORD PTR [ebp+0x1f]
  423d06:	iret   
  423d07:	jae    0x423d39
  423d09:	add    al,0x75
  423d0b:	inc    ebp
  423d0c:	xor    DWORD PTR [ebx+0x68],esp
  423d0f:	jl     0x423d7d
  423d11:	dec    edx
  423d12:	sbb    esp,DWORD PTR [esi]
  423d14:	icebp  
  423d15:	call   0x12b2cdb2
  423d1a:	repz pop ss
  423d1c:	ret    0x96a7
  423d1f:	pushf  
  423d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d21:	div    esi
  423d23:	ror    ebx,cl
  423d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d27:	add    al,0x6d
  423d29:	cs pushf 
  423d2b:	jb     0x423d81
  423d2d:	adc    bh,BYTE PTR [edi+0x77]
  423d30:	or     BYTE PTR [ebp+0x713cad27],cl
  423d36:	(bad)  
  423d38:	pop    ds
  423d39:	clc    
  423d3a:	sub    esi,esp
  423d3c:	pop    eax
  423d3d:	adc    edx,ebx
  423d3f:	aad    0x84
  423d41:	cmp    DWORD PTR [edi-0x4d],0xffffffc1
  423d45:	fcom   DWORD PTR [ebx-0x76058c1f]
  423d4b:	inc    edx
  423d4c:	(bad)  
  423d4d:	fisub  WORD PTR [ebx-0x44]
  423d50:	enter  0x9e20,0xfa
  423d54:	je     0x423d7c
  423d56:	inc    esp
  423d57:	adc    BYTE PTR [eax+0x74b368d7],0x29
  423d5e:	sahf   
  423d5f:	lock pop es
  423d61:	frstor [ebx-0x6d057496]
  423d67:	cmp    bl,BYTE PTR [ecx+0x62bd1ee]
  423d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d6e:	test   al,0x1a
  423d70:	pop    ebx
  423d71:	jne    0x423d9d
  423d73:	ja     0x423d2e
  423d75:	repnz daa 
  423d77:	int3   
  423d78:	loopne 0x423da0
  423d7a:	out    dx,eax
  423d7b:	inc    esi
  423d7c:	jo     0x423df1
  423d7e:	xlat   BYTE PTR ds:[ebx]
  423d7f:	sbb    eax,0xdb456e44
  423d84:	std    
  423d85:	icebp  
  423d86:	or     dl,BYTE PTR [esi-0x37]
  423d89:	xchg   esi,eax
  423d8a:	adc    al,0x70
  423d8c:	test   al,0x43
  423d8e:	dec    ebx
  423d8f:	inc    edx
  423d90:	repz or BYTE PTR [eax-0x24],ch
  423d94:	cmp    al,0x3
  423d96:	pop    ecx
  423d97:	push   ebp
  423d98:	es clc 
  423d9a:	imul   ecx,eax,0x4d803f4c
  423da0:	(bad)  
  423da1:	fmul   QWORD PTR [ecx]
  423da3:	imul   edx,ebx
  423da6:	mov    DWORD PTR [ebp-0x58],edx
  423da9:	mov    edx,DWORD PTR [ebp+0x8]
  423dac:	mov    ebx,DWORD PTR [ebp-0x54]
  423daf:	add    edx,0x64f8da
  423db5:	or     edx,ebx
  423db7:	mov    DWORD PTR [ebp-0x54],edx
  423dba:	mov    edx,DWORD PTR [ebp+0x8]
  423dbd:	mov    ebx,DWORD PTR [ebp-0x50]
  423dc0:	add    edx,ecx
  423dc2:	xor    edx,ebx
  423dc4:	mov    DWORD PTR [ebp-0x50],edx
  423dc7:	mov    edx,DWORD PTR [ebp+0x8]
  423dca:	mov    ebx,DWORD PTR [ebp-0x4c]
  423dcd:	add    edx,edi
  423dcf:	and    edx,ebx
  423dd1:	mov    DWORD PTR [ebp-0x4c],edx
  423dd4:	mov    edx,DWORD PTR [ebp+0x8]
  423dd7:	mov    ebx,DWORD PTR [ebp-0x48]
  423dda:	lea    edx,[ebx+edx*1+0x241fc1f]
  423de1:	mov    DWORD PTR [ebp-0x48],edx
  423de4:	mov    edx,DWORD PTR [ebp+0x8]
  423de7:	mov    ebx,0xfa5e15e2
  423dec:	sub    ebx,edx
  423dee:	add    ebx,DWORD PTR [ebp-0x44]
  423df1:	mov    DWORD PTR [ebp-0x44],ebx
  423df4:	mov    edx,DWORD PTR [ebp+0x8]
  423df7:	xor    edx,eax
  423df9:	add    edx,esi
  423dfb:	jne    0x4219fb
  423e01:	jmp    0x423e8f
  423e06:	mov    edx,DWORD PTR [ebp+0x8]
  423e09:	mov    ebx,DWORD PTR [ebp-0x8]
  423e0c:	xor    edx,eax
  423e0e:	xor    ebx,eax
  423e10:	sub    edx,ebx
  423e12:	sub    edx,esi
  423e14:	xor    edx,eax
  423e16:	mov    DWORD PTR [ebp+0x8],edx
  423e19:	mov    edx,DWORD PTR [ebp+0x8]
  423e1c:	mov    ebx,DWORD PTR [ebp-0x58]
  423e1f:	add    edx,0x5708f8
  423e25:	imul   edx,ebx
  423e28:	mov    DWORD PTR [ebp-0x58],edx
  423e2b:	mov    edx,DWORD PTR [ebp+0x8]
  423e2e:	mov    ebx,DWORD PTR [ebp-0x54]
  423e31:	add    edx,0x64f8da
  423e37:	or     edx,ebx
  423e39:	mov    DWORD PTR [ebp-0x54],edx
  423e3c:	mov    edx,DWORD PTR [ebp+0x8]
  423e3f:	mov    ebx,DWORD PTR [ebp-0x50]
  423e42:	add    edx,ecx
  423e44:	xor    edx,ebx
  423e46:	mov    DWORD PTR [ebp-0x50],edx
  423e49:	mov    edx,DWORD PTR [ebp+0x8]
  423e4c:	mov    ebx,DWORD PTR [ebp-0x4c]
  423e4f:	add    edx,edi
  423e51:	and    edx,ebx
  423e53:	mov    DWORD PTR [ebp-0x4c],edx
  423e56:	mov    edx,DWORD PTR [ebp+0x8]
  423e59:	mov    ebx,DWORD PTR [ebp-0x48]
  423e5c:	lea    edx,[ebx+edx*1+0x241fc1f]
  423e63:	mov    DWORD PTR [ebp-0x48],edx
  423e66:	mov    edx,DWORD PTR [ebp+0x8]
  423e69:	mov    ebx,0xfa5e15e2
  423e6e:	sub    ebx,edx
  423e70:	add    ebx,DWORD PTR [ebp-0x44]
  423e73:	mov    DWORD PTR [ebp-0x44],ebx
  423e76:	mov    edx,DWORD PTR [ebp+0x8]
  423e79:	xor    edx,eax
  423e7b:	add    edx,esi
  423e7d:	jne    0x423e06
  423e83:	mov    ecx,DWORD PTR [ebp-0x8]
  423e86:	xor    ecx,eax
  423e88:	mov    eax,DWORD PTR [ebp+0x10]
  423e8b:	add    ecx,esi
  423e8d:	mov    DWORD PTR [eax],ecx
  423e8f:	pop    edi
  423e90:	jmp    0x424bd6
  423e95:	imul   ecx,DWORD PTR [ebx-0x448b1756],0x58d8b2f
  423e9f:	scas   eax,DWORD PTR es:[edi]
  423ea0:	repnz shl DWORD PTR [eax],cl
  423ea3:	mov    ch,0x96
  423ea5:	mov    ecx,0x417a798b
  423eaa:	gs jp  0x423f27
  423ead:	xor    DWORD PTR [edx-0x38],0xad9d79d2
  423eb4:	add    cl,BYTE PTR ds:0x8a8bcef8
  423eba:	hlt    
  423ebb:	(bad)  
  423ebc:	int    0x61
  423ebe:	inc    edi
  423ebf:	push   0x56
  423ec1:	call   0x2c365cc6
  423ec6:	mov    edx,0xf37cbacf
  423ecb:	es pushf 
  423ecd:	xor    DWORD PTR [ecx],ebp
  423ecf:	cmp    bh,dl
  423ed1:	dec    ebx
  423ed2:	or     ecx,DWORD PTR [esi]
  423ed4:	inc    ebp
  423ed5:	xchg   ebx,eax
  423ed6:	sub    dl,ch
  423ed8:	inc    ecx
  423ed9:	iret   
  423eda:	fdiv   QWORD PTR [edx+0x1d]
  423edd:	dec    esp
  423ede:	mov    ebx,0xe2406274
  423ee3:	cwde   
  423ee4:	pop    eax
  423ee5:	xor    al,0x5
  423ee7:	addr16 (bad) 
  423eea:	xor    al,bl
  423eec:	mov    ecx,0xd45a7785
  423ef1:	mov    al,ds:0x2ecacaa9
  423ef6:	push   ds
  423ef7:	add    al,0x68
  423ef9:	pushf  
  423efa:	lds    edi,FWORD PTR [eax+0x6bfea3df]
  423f00:	stos   BYTE PTR es:[edi],al
  423f01:	sbb    ebx,DWORD PTR [edx-0x543f5b28]
  423f07:	sar    ecx,cl
  423f09:	xor    DWORD PTR [ebx-0x23],edi
  423f0c:	adc    edx,ebx
  423f0e:	jae    0x423e97
  423f10:	jns    0x423ef2
  423f12:	scas   al,BYTE PTR es:[edi]
  423f13:	jecxz  0x423ef0
  423f15:	cmp    ch,BYTE PTR [esp+ebx*8+0xe7c802d]
  423f1c:	mov    cr7,ebx
  423f1f:	outs   dx,DWORD PTR ds:[esi]
  423f20:	enter  0xa66a,0x5a
  423f24:	stos   BYTE PTR es:[edi],al
  423f25:	mov    esp,0xc03256ec
  423f2a:	jns    0x423ef3
  423f2c:	xchg   ecx,eax
  423f2d:	leave  
  423f2e:	inc    ebp
  423f2f:	cmp    eax,0x650cf734
  423f34:	jge    0x423f3c
  423f36:	xchg   esp,eax
  423f37:	imul   ebx,DWORD PTR [ebx],0xd2de9db4
  423f3d:	xchg   esp,eax
  423f3e:	sub    ebx,DWORD PTR [edx+esi*8]
  423f41:	and    eax,0x18d37b40
  423f46:	push   DWORD PTR [edi-0x46]
  423f49:	sub    DWORD PTR [edx+0x58],esi
  423f4c:	mov    esp,0x452d1232
  423f51:	xchg   ecx,eax
  423f52:	popf   
  423f53:	mov    ebp,0x101d2c4d
  423f58:	xor    eax,0x4977b2c0
  423f5d:	push   ecx
  423f5e:	clc    
  423f5f:	mov    bh,0x36
  423f61:	bound  ecx,QWORD PTR [ebp-0x3c7fcab6]
  423f67:	xchg   ebp,eax
  423f68:	fmul   DWORD PTR [edx+0x42]
  423f6b:	adc    al,0xd3
  423f6d:	jp     0x423faa
  423f6f:	fdiv   DWORD PTR [ecx]
  423f71:	js     0x423fb6
  423f73:	das    
  423f74:	inc    ebx
  423f75:	push   ss
  423f76:	out    0x2d,al
  423f78:	and    al,0xfb
  423f7a:	aaa    
  423f7b:	hlt    
  423f7c:	jo     0x423f2e
  423f7e:	in     al,0x91
  423f80:	mov    edx,0x7ee17393
  423f85:	and    bh,dh
  423f87:	fst    QWORD PTR [ebp+0x2a]
  423f8a:	ret    
  423f8b:	add    bh,BYTE PTR [eax+ecx*1+0x1d7e87dd]
  423f92:	jnp    0x423f9f
  423f94:	xchg   ebx,eax
  423f95:	stc    
  423f96:	xchg   ebp,eax
  423f97:	fadd   QWORD PTR [eax+0x71]
  423f9a:	pop    edi
  423f9b:	into   
  423f9c:	xor    al,0xfc
  423f9e:	scas   al,BYTE PTR es:[edi]
  423f9f:	pop    es
  423fa0:	dec    DWORD PTR [edx-0x48ad2554]
  423fa6:	aaa    
  423fa7:	xchg   edi,eax
  423fa8:	test   DWORD PTR [ecx+0x466ef716],edi
  423fae:	pushf  
  423faf:	push   es
  423fb0:	xor    esi,ebx
  423fb2:	mov    cl,0xbc
  423fb4:	mov    ds:0x397b0d40,al
  423fb9:	inc    esp
  423fba:	adc    esp,DWORD PTR [edi-0x54]
  423fbd:	retf   
  423fbe:	push   ebp
  423fbf:	pop    edi
  423fc0:	out    dx,al
  423fc1:	add    DWORD PTR [esi-0x3d],ebp
  423fc4:	(bad)  [ecx+0x17aab4fa]
  423fca:	pop    ecx
  423fcb:	pop    ss
  423fcc:	mov    esi,DWORD PTR [esi+edi*1+0x3caedd80]
  423fd3:	push   ds
  423fd4:	sbb    DWORD PTR [esi+edx*2],ecx
  423fd7:	or     DWORD PTR [edi],esp
  423fd9:	xor    DWORD PTR [eax+0xd],0xffffffdb
  423fdd:	xchg   ecx,eax
  423fde:	xor    dl,dh
  423fe0:	pop    ebp
  423fe1:	or     al,0x54
  423fe3:	repnz push ss
  423fe5:	in     al,0xef
  423fe7:	xlat   BYTE PTR ds:[ebx]
  423fe8:	int    0xa9
  423fea:	(bad)  
  423feb:	mov    ds:0x478909d5,eax
  423ff0:	cmp    dl,bh
  423ff2:	xchg   ebx,eax
  423ff3:	outs   dx,BYTE PTR ds:[esi]
  423ff4:	shr    BYTE PTR [ebp-0x437fe866],0xb
  423ffb:	xor    DWORD PTR [edi],ebp
  423ffd:	bound  ebp,QWORD PTR [eax]
  423fff:	cs or  dl,BYTE PTR ss:[ebx-0x466f58c2]
  424007:	jb     0x423ff9
  424009:	cwde   
  42400a:	dec    edi
  42400b:	ins    BYTE PTR es:[edi],dx
  42400c:	push   edi
  42400d:	(bad)  [ecx-0x62aca3fa]
  424013:	in     al,0x8b
  424015:	push   edx
  424016:	mov    ds,WORD PTR [ebp+0x52f88465]
  42401c:	stos   BYTE PTR es:[edi],al
  42401d:	jbe    0x424092
  42401f:	sti    
  424020:	lods   eax,DWORD PTR ds:[esi]
  424022:	ins    DWORD PTR es:[edi],dx
  424023:	mov    BYTE PTR [esi],cl
  424025:	and    DWORD PTR [eax-0xee5f54b],ecx
  42402b:	ret    
  42402c:	fsubp  st(0),st
  42402e:	inc    esi
  42402f:	mov    BYTE PTR [eax],0xd9
  424032:	mov    BYTE PTR [eax-0xe644acb],ah
  424038:	(bad)  
  424039:	or     al,0x8a
  42403b:	daa    
  42403c:	sti    
  42403d:	stc    
  42403e:	nop
  42403f:	mov    ss,WORD PTR [esi-0x3d7e4b8f]
  424045:	rol    DWORD PTR [ebp+0x4],0xe1
  424049:	pusha  
  42404a:	jmp    0x2d6b:0x7468ed43
  424051:	addr16 ss std 
  424054:	lods   eax,DWORD PTR ds:[esi]
  424055:	pop    esi
  424056:	adc    eax,0x5569bb5
  42405b:	push   esi
  42405c:	popa   
  42405d:	dec    edi
  42405e:	lea    edx,[edx]
  424060:	xchg   edi,eax
  424061:	ret    
  424062:	test   BYTE PTR [eax+eax*2+0x120709d4],0x45
  42406a:	jmp    0x97ec:0x5760b88f
  424071:	iret   
  424072:	and    dl,BYTE PTR [esi]
  424074:	cdq    
  424075:	mov    edx,0xcaa15a4c
  42407a:	mov    ch,0x27
  42407c:	das    
  42407d:	not    dh
  42407f:	inc    ebp
  424080:	jb     0x424095
  424082:	clc    
  424083:	std    
  424084:	mov    bh,0x9b
  424086:	sbb    eax,0x8ce4eeaa
  42408b:	push   eax
  42408c:	xchg   ebx,eax
  42408d:	popf   
  42408e:	test   eax,0x2d8f9554
  424093:	pop    edi
  424094:	jne    0x4240fd
  424096:	scas   eax,DWORD PTR es:[edi]
  424097:	in     al,0x79
  424099:	in     eax,dx
  42409a:	std    
  42409b:	mov    dl,0xa8
  42409d:	iret   
  42409e:	test   ecx,edx
  4240a0:	jecxz  0x424034
  4240a2:	push   edx
  4240a3:	mov    esi,0xd21e81d9
  4240a8:	add    ebx,0xffffffb0
  4240ab:	sub    eax,0xf32a493d
  4240b0:	jmp    0x53c4ea78
  4240b5:	sbb    edi,DWORD PTR [edx+0x13590526]
  4240bb:	ja     0x424132
  4240bd:	sbb    BYTE PTR [ebx-0x2319849a],bl
  4240c3:	mov    esp,0xe5ae7e38
  4240c8:	lahf   
  4240c9:	ds or  ch,cl
  4240cc:	in     al,dx
  4240cd:	cmp    al,0x5f
  4240cf:	push   esi
  4240d0:	lods   al,BYTE PTR ds:[esi]
  4240d1:	hlt    
  4240d2:	jecxz  0x42409c
  4240d4:	sub    edx,edi
  4240d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240d7:	out    0x47,al
  4240d9:	(bad)  
  4240da:	call   0xe2f15db4
  4240df:	fst    DWORD PTR [edi+0x15]
  4240e2:	sbb    al,0x46
  4240e4:	dec    ebp
  4240e5:	clc    
  4240e6:	add    DWORD PTR [ecx-0x17],esi
  4240e9:	adc    cl,BYTE PTR [ebx+0x84e7a2a]
  4240ef:	leave  
  4240f0:	jecxz  0x4240ec
  4240f2:	mov    ebx,0xecfd53d7
  4240f7:	inc    ebp
  4240f8:	or     dh,0x51
  4240fb:	adc    dl,BYTE PTR [edi]
  4240fd:	addr16 pop ds
  4240ff:	cmp    ebp,DWORD PTR [esi+0xe]
  424102:	mov    dl,0x91
  424104:	(bad)  
  424105:	cmp    edx,ebp
  424107:	cs dec ebp
  424109:	or     edx,esp
  42410b:	ret    0x4d45
  42410e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42410f:	mov    edi,0xb7b149e
  424114:	bound  esi,QWORD PTR [eax]
  424116:	clc    
  424117:	nop
  424118:	adc    eax,0x79fc73f5
  42411d:	fcom   st(5)
  42411f:	ss pushf 
  424121:	adc    eax,0xd91af05f
  424126:	fisttp QWORD PTR ds:0xc3b2ac18
  42412c:	xchg   BYTE PTR [ebx-0x4fa8e9d8],dl
  424132:	pop    ebx
  424133:	mov    edx,DWORD PTR [esp+edi*8]
  424136:	sub    al,0xde
  424138:	or     al,bl
  42413a:	ja     0x424177
  42413c:	fs loope 0x42414a
  42413f:	add    eax,0x9e3901fd
  424144:	pop    edi
  424145:	cmp    edi,edi
  424147:	jbe    0x424162
  424149:	lahf   
  42414a:	add    edi,edx
  42414c:	mov    ds:0xfc4c6e4e,al
  424151:	sub    eax,DWORD PTR cs:[ebx+0x2dcfd348]
  424158:	rol    DWORD PTR ss:0xef1ffee5,0x7d
  424160:	push   esp
  424161:	scas   al,BYTE PTR es:[edi]
  424162:	mov    ds:0x727c9285,al
  424167:	or     ch,al
  424169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42416a:	rcl    BYTE PTR [edx],1
  42416c:	aad    0xb6
  42416e:	pushf  
  42416f:	(bad)
  424173:	ds xchg esi,eax
  424175:	pop    ecx
  424176:	sbb    eax,0x7f9a97ce
  42417b:	xchg   ecx,eax
  42417c:	enter  0xb2e6,0x12
  424180:	hlt    
  424181:	mov    al,ds:0xf2201198
  424186:	fdivr  st,st(2)
  424188:	lock mov ch,0x7e
  42418b:	loope  0x42417e
  42418d:	sti    
  42418e:	sbb    esi,esi
  424190:	xchg   ebx,eax
  424191:	ds scas eax,DWORD PTR es:[edi]
  424193:	iret   
  424194:	jg     0x42416d
  424196:	and    eax,0x305fda76
  42419b:	pop    edx
  42419c:	xor    ecx,edi
  42419e:	push   eax
  42419f:	sahf   
  4241a0:	mov    esp,0x6e812e56
  4241a5:	stos   BYTE PTR es:[edi],al
  4241a6:	push   ebx
  4241a7:	xor    DWORD PTR [ebx+0x62a66b25],ebp
  4241ad:	pop    edx
  4241ae:	in     al,dx
  4241af:	xchg   esp,eax
  4241b0:	mov    esp,0x134a0093
  4241b5:	es test eax,0x81ced81f
  4241bb:	push   0x68
  4241bd:	jne    0x4241de
  4241bf:	je     0x424186
  4241c1:	or     eax,0x772699a4
  4241c6:	add    eax,0x56ca74a5
  4241cb:	cmp    ah,BYTE PTR [eax]
  4241cd:	addr16 dec edi
  4241cf:	inc    ecx
  4241d0:	(bad)  
  4241d1:	in     al,0x69
  4241d3:	rcr    BYTE PTR [esi-0x4a],cl
  4241d6:	mov    esi,0x8f138676
  4241db:	or     ecx,DWORD PTR [eax-0x28f5593e]
  4241e1:	std    
  4241e2:	mov    dl,0xca
  4241e4:	push   ds
  4241e5:	or     DWORD PTR ds:0x21ee9c74,0xdc098c76
  4241ef:	adc    cl,BYTE PTR [ebx+0x15b61572]
  4241f5:	jne    0x4241b8
  4241f7:	push   ecx
  4241f8:	sub    eax,0xbe0cba6e
  4241fd:	mov    fs,WORD PTR [edi*1+0x484e934]
  424204:	inc    esp
  424205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424206:	add    eax,0x871983b1
  42420b:	call   0x269861b
  424210:	fnstcw WORD PTR [ebx-0x48dd6716]
  424216:	mov    ebp,0x4b1d4a87
  42421b:	aaa    
  42421c:	xchg   esi,eax
  42421d:	outs   dx,DWORD PTR ds:[esi]
  42421e:	fucomip st,st(2)
  424220:	imul   ecx,DWORD PTR [eax],0x50
  424223:	les    ebp,FWORD PTR ds:[edx+0x7a]
  424227:	mov    DWORD PTR [ecx-0x5023b916],edx
  42422d:	ja     0x42429a
  42422f:	ficom  WORD PTR [esi+0x6b]
  424232:	mul    ebx
  424234:	rcr    DWORD PTR gs:[eiz*8+0xeb99585],cl
  42423c:	cwde   
  42423d:	mov    edx,0xb8363402
  424242:	pop    ecx
  424243:	and    al,BYTE PTR [ebx+eax*4-0x2d]
  424247:	arpl   WORD PTR [edx+0x8],di
  42424a:	xchg   edi,eax
  42424b:	mov    ebp,0xa4e1a7e8
  424250:	cmc    
  424251:	(bad)  
  424252:	fstp   DWORD PTR [ecx-0x142b4f5f]
  424258:	mov    cl,dh
  42425a:	les    esp,FWORD PTR [edi*1-0x4b6e768a]
  424261:	shr    DWORD PTR [ebx+0x70],cl
  424264:	ins    BYTE PTR es:[edi],dx
  424265:	xor    BYTE PTR [esi+0x45119df8],0x41
  42426c:	xchg   ebp,eax
  42426d:	xchg   ebp,eax
  42426e:	loope  0x424295
  424270:	popa   
  424271:	sti    
  424272:	adc    eax,0xc3ae03a9
  424277:	std    
  424278:	inc    ecx
  424279:	fbstp  TBYTE PTR [ebx+0x52]
  42427c:	pop    ecx
  42427d:	mov    cl,BYTE PTR [ecx+0x2d7bac47]
  424283:	xchg   ebx,eax
  424284:	mov    bh,0xf2
  424286:	push   edx
  424287:	loop   0x42423a
  424289:	push   eax
  42428a:	and    BYTE PTR [edi],ch
  42428c:	or     ecx,DWORD PTR [edi]
  42428e:	sub    ecx,DWORD PTR [edi]
  424290:	mov    ebx,0xa84d2a90
  424295:	test   al,0xa
  424297:	jns    0x4242e8
  424299:	(bad)  
  42429a:	(bad)  
  42429b:	xor    dl,BYTE PTR [edi+0x39b6982d]
  4242a1:	pop    esp
  4242a2:	pop    ebp
  4242a3:	ret    
  4242a4:	imul   esp,DWORD PTR [esi+0x21],0x79
  4242a8:	xchg   ebp,eax
  4242a9:	rol    eax,cl
  4242ab:	cwde   
  4242ac:	mov    cl,0x1e
  4242ae:	mov    ch,cl
  4242b0:	sub    esp,DWORD PTR [ebp-0x1]
  4242b3:	inc    ebx
  4242b4:	push   es
  4242b5:	ins    DWORD PTR es:[edi],dx
  4242b6:	push   ecx
  4242b7:	ins    BYTE PTR es:[edi],dx
  4242b8:	jl     0x424296
  4242ba:	jbe    0x42425b
  4242bc:	xor    dl,BYTE PTR [esi]
  4242be:	(bad)  
  4242c0:	add    BYTE PTR [esi-0x2cd6cffc],cl
  4242c6:	data16 mov dh,0xf
  4242c9:	lea    ecx,[esi]
  4242cb:	int    0xaf
  4242cd:	dec    esp
  4242ce:	ins    BYTE PTR es:[edi],dx
  4242cf:	shl    BYTE PTR [edi+0xe],1
  4242d2:	mov    ah,0xfa
  4242d4:	inc    ebx
  4242d5:	adc    al,0x4f
  4242d7:	and    eax,DWORD PTR [ebx]
  4242d9:	stos   BYTE PTR es:[edi],al
  4242da:	add    DWORD PTR [ecx+0x14],ebx
  4242dd:	fstp   DWORD PTR [eax]
  4242df:	mov    bl,0x36
  4242e1:	inc    esp
  4242e2:	mov    ecx,0xa5c0f719
  4242e7:	sbb    ch,BYTE PTR ds:0xd4121ea0
  4242ed:	jo     0x42427a
  4242ef:	shr    DWORD PTR [edi],cl
  4242f1:	lock fisttp QWORD PTR [eax-0x2e]
  4242f5:	mul    DWORD PTR [eax-0x78]
  4242f8:	or     esi,DWORD PTR [eax+0x14]
  4242fb:	push   ds
  4242fc:	pop    es
  4242fd:	push   cs
  4242fe:	not    DWORD PTR ds:[ebp+eiz*4+0x697744cd]
  424306:	xor    edx,DWORD PTR [eax-0x661676f7]
  42430c:	jge    0x42435b
  42430e:	adc    al,0xfc
  424310:	daa    
  424311:	xchg   DWORD PTR [esi+0x1d],eax
  424314:	stc    
  424315:	mov    esp,DWORD PTR [ebx-0x2c]
  424318:	mov    al,ds:0xd9c08bf7
  42431d:	inc    ebp
  42431e:	sbb    edi,esp
  424320:	fisttp WORD PTR [esi-0x55263cfe]
  424326:	ins    BYTE PTR es:[edi],dx
  424327:	or     ecx,DWORD PTR [eax+esi*4-0x5e]
  42432b:	call   0xefe6:0xbd04fa5c
  424332:	out    0x65,eax
  424334:	add    ecx,DWORD PTR [edx]
  424336:	or     dh,BYTE PTR [ebp-0x3c203e5a]
  42433c:	jno    0x424381
  42433e:	aas    
  42433f:	iret   
  424340:	test   DWORD PTR [edi+0x73],0xebbe56b3
  424347:	leave  
  424348:	fidivr DWORD PTR [ebx+ebp*1+0x54]
  42434c:	mov    al,ds:0xecc205a8
  424351:	jg     0x424351
  424353:	in     eax,0x1c
  424355:	inc    ecx
  424356:	or     DWORD PTR [ebx-0x7d7378cf],esp
  42435c:	test   DWORD PTR [ecx+0x20482efd],esp
  424362:	mov    ?,WORD PTR [edx+0x2f01691e]
  424368:	pop    eax
  424369:	mov    ch,0x3e
  42436b:	hlt    
  42436c:	or     esp,DWORD PTR [ecx+ebp*4-0xd]
  424370:	popf   
  424371:	xor    eax,DWORD PTR [ebp-0x747beb01]
  424377:	aam    0xc0
  424379:	mov    bh,0x15
  42437b:	rol    BYTE PTR ds:0x811a963d,1
  424381:	xlat   BYTE PTR ds:[ebx]
  424382:	iret   
  424383:	daa    
  424384:	in     al,dx
  424385:	outs   dx,BYTE PTR ds:[esi]
  424386:	nop
  424387:	scas   al,BYTE PTR es:[edi]
  424388:	ins    DWORD PTR es:[edi],dx
  424389:	push   esi
  42438a:	jl     0x4243d9
  42438c:	(bad)  
  42438d:	out    0x3d,eax
  42438f:	(bad)  
  424390:	mov    ebx,0x47e08ef1
  424395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424396:	mov    ah,0x4
  424398:	nop
  424399:	and    eax,0xc29a403e
  42439e:	test   al,0xa8
  4243a0:	popf   
  4243a1:	mov    ecx,DWORD PTR ds:0xb7a453b4
  4243a7:	pop    esp
  4243a8:	(bad)  
  4243a9:	repz cmp edx,ebp
  4243ac:	pop    edx
  4243ad:	bound  ebp,QWORD PTR [eax+0x76]
  4243b0:	aad    0x56
  4243b2:	lods   eax,DWORD PTR ds:[esi]
  4243b3:	mov    eax,ds:0xca1334ea
  4243b8:	imul   esp,esi,0xe3a06f11
  4243be:	data16 jl 0x42439a
  4243c1:	jnp    0x424434
  4243c3:	pop    ecx
  4243c4:	and    eax,DWORD PTR [edx+0x47]
  4243c7:	test   al,0xd4
  4243c9:	ret    0x99a3
  4243cc:	mov    edi,0x397e1df0
  4243d1:	xchg   ebp,eax
  4243d2:	frstor [ebp+0x29]
  4243d5:	dec    eax
  4243d6:	retf   
  4243d7:	jmp    0xab28:0xf7557998
  4243de:	jl     0x424443
  4243e0:	xlat   BYTE PTR ds:[ebx]
  4243e1:	retf   0xfe5d
  4243e4:	pop    edx
  4243e5:	xchg   ecx,eax
  4243e6:	jp     0x4243c1
  4243e8:	mov    ebp,0x611386e6
  4243ed:	ja     0x42436f
  4243ef:	adc    eax,edi
  4243f1:	aaa    
  4243f2:	sbb    esi,ecx
  4243f4:	push   ebx
  4243f5:	in     eax,dx
  4243f6:	or     BYTE PTR [edi+eiz*8-0x6c],0x18
  4243fb:	mov    bh,0x9
  4243fd:	dec    DWORD PTR [edi]
  4243ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424400:	xchg   ebp,eax
  424401:	inc    esp
  424402:	or     bh,BYTE PTR [edx]
  424404:	xchg   edi,eax
  424405:	mov    edx,0xfec2e325
  42440a:	sbb    ebp,DWORD PTR [ebp+0x24]
  42440d:	mov    dh,0x1d
  42440f:	cmp    al,0x41
  424411:	lahf   
  424412:	xchg   esi,eax
  424413:	xlat   BYTE PTR ds:[ebx]
  424414:	mov    BYTE PTR [esi],ch
  424416:	aas    
  424417:	out    0x3e,al
  424419:	add    BYTE PTR [ebp+ecx*4-0x57ba4c8c],ch
  424420:	sub    ebp,DWORD PTR [eax+0xc3048b]
  424426:	dec    ebx
  424427:	call   0xc45c31e8
  42442c:	ret    0x3f46
  42442f:	mov    bh,0x8d
  424431:	(bad)  
  424433:	sti    
  424434:	stc    
  424435:	xor    BYTE PTR [ebp+0x6c53dbf5],cl
  42443b:	test   edi,edx
  42443d:	outs   dx,BYTE PTR ds:[esi]
  42443e:	xlat   BYTE PTR ds:[ebx]
  42443f:	push   edi
  424440:	inc    esi
  424441:	stos   DWORD PTR es:[edi],eax
  424442:	arpl   WORD PTR es:[edx+0x4bf29850],cx
  424449:	mov    eax,0xd7058436
  42444e:	call   0x1a5bb80e
  424453:	mov    ecx,0x933982fb
  424458:	arpl   WORD PTR [esi],di
  42445a:	cdq    
  42445b:	add    BYTE PTR [edi],bh
  42445d:	es push eax
  42445f:	(bad)  
  424460:	std    
  424461:	imul   eax,edx,0xa4fb97db
  424467:	inc    ecx
  424469:	dec    ecx
  42446a:	push   esi
  42446b:	jge    0x424405
  42446d:	data16 out dx,al
  42446f:	mov    ch,0x62
  424471:	add    dh,BYTE PTR [ecx+0x2f]
  424474:	mov    ch,BYTE PTR [eax-0x52ec3272]
  42447a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42447b:	mov    bh,0xa5
  42447d:	mov    cl,0x86
  42447f:	or     eax,0xebdf8ed4
  424484:	inc    ebp
  424485:	jb     0x4244e3
  424487:	scas   eax,DWORD PTR es:[edi]
  424488:	test   BYTE PTR [esi+0x2f41c5b],bl
  42448e:	cmp    BYTE PTR [ebx-0x45a99668],0x4a
  424495:	mov    ah,0x35
  424497:	je     0x4244fc
  424499:	cmc    
  42449a:	adc    DWORD PTR [ecx+ebx*1],ebx
  42449d:	int3   
  42449e:	ret    0xd231
  4244a1:	inc    edi
  4244a2:	sub    eax,0xca832593
  4244a7:	into   
  4244a8:	out    0xc5,al
  4244aa:	in     eax,0xdf
  4244ac:	gs std 
  4244ae:	arpl   WORD PTR [edx+0x64],ax
  4244b1:	dec    eax
  4244b2:	mov    edx,0xb2235d20
  4244b7:	dec    edx
  4244b8:	in     eax,0xe3
  4244ba:	lea    edx,[edx+0x5f]
  4244bd:	test   BYTE PTR [edx],dl
  4244bf:	rol    DWORD PTR [esi-0x47],0xe2
  4244c3:	adc    BYTE PTR [eax-0x6c4acefc],ch
  4244c9:	pop    es
  4244ca:	test   DWORD PTR [edx-0x2b],ecx
  4244cd:	xchg   ebx,eax
  4244ce:	arpl   WORD PTR ds:[eax],bp
  4244d1:	out    dx,al
  4244d2:	pop    esp
  4244d3:	sub    dl,BYTE PTR [ecx-0x69b8b574]
  4244d9:	cmp    BYTE PTR [ebp-0x71],0x6a
  4244dd:	lods   eax,DWORD PTR ds:[esi]
  4244de:	jmp    0x6d765848
  4244e3:	je     0x42454a
  4244e5:	aas    
  4244e6:	stc    
  4244e7:	cmc    
  4244e8:	ror    BYTE PTR [ebx-0x7e902a9b],1
  4244ee:	imul   esp,DWORD PTR [eax-0x21],0xffffffe3
  4244f2:	(bad)  
  4244f3:	pop    ebx
  4244f4:	fnstenv [edx+0x41448da1]
  4244fa:	mov    BYTE PTR [si+0x66],bl
  4244fe:	sbb    ch,BYTE PTR [edx+0x7b]
  424501:	dec    edx
  424502:	add    DWORD PTR [edx-0x45e0391b],0x6a3311f8
  42450c:	inc    eax
  42450d:	out    0x8f,al
  42450f:	inc    esp
  424510:	je     0x424531
  424512:	inc    eax
  424513:	mov    ah,0x62
  424515:	ja     0x424585
  424517:	jbe    0x4244e9
  424519:	mov    bl,0x46
  42451b:	mov    dl,0xcb
  42451d:	inc    edi
  42451e:	xor    ecx,ebp
  424520:	fbstp  TBYTE PTR [edx+0x48f3edad]
  424526:	lods   eax,DWORD PTR ds:[esi]
  424527:	fidiv  DWORD PTR [eax*2-0x20ac6fe8]
  42452e:	lock pop esi
  424530:	ret    
  424531:	jae    0x42459b
  424533:	rol    BYTE PTR ds:[ebx+ebp*2],0x57
  424538:	(bad)  
  424539:	popa   
  42453a:	in     eax,dx
  42453b:	mov    ss,WORD PTR [edi-0x46]
  42453e:	loope  0x424559
  424540:	inc    edx
  424541:	push   es
  424542:	xor    dh,BYTE PTR ds:0x382d9ad2
  424548:	enter  0xeaad,0x41
  42454c:	push   es
  42454d:	gs loopne 0x424510
  424550:	clc    
  424551:	dec    eax
  424552:	dec    esi
  424553:	push   0x12428b25
  424558:	call   0xb945aef4
  42455d:	stos   BYTE PTR es:[edi],al
  42455e:	sbb    eax,0x91444c0c
  424563:	sub    BYTE PTR [ebx],0x64
  424566:	mov    dh,0x10
  424568:	in     eax,0x5d
  42456a:	jmp    0xc997011a
  42456f:	push   esi
  424570:	dec    edx
  424571:	push   esi
  424572:	out    0xd9,eax
  424574:	pop    ss
  424575:	les    ecx,FWORD PTR [edx+0x3d]
  424578:	and    DWORD PTR [esi-0x3a],edx
  42457b:	fimul  WORD PTR [ecx]
  42457d:	rcl    DWORD PTR [ecx+ebp*8],cl
  424580:	popa   
  424581:	sbb    bl,dl
  424583:	aad    0x80
  424585:	in     eax,dx
  424586:	dec    esi
  424587:	push   esp
  424588:	xchg   ebx,eax
  424589:	jecxz  0x424597
  42458b:	inc    esi
  42458c:	mov    ch,0x14
  42458e:	das    
  42458f:	fistp  QWORD PTR [ebx-0x23]
  424592:	adc    cl,BYTE PTR [edi-0x13]
  424595:	dec    edi
  424596:	out    dx,eax
  424597:	xor    DWORD PTR [ecx-0x7117405f],ebp
  42459d:	mov    esi,0x56642993
  4245a2:	sbb    eax,DWORD PTR ds:0xc3af06b1
  4245a8:	mov    esi,0x757d989
  4245ad:	retf   
  4245ae:	sahf   
  4245af:	dec    edx
  4245b0:	cwde   
  4245b1:	std    
  4245b2:	sbb    esp,DWORD PTR [eax]
  4245b4:	push   edi
  4245b5:	neg    BYTE PTR [ebx+eiz*8]
  4245b8:	mov    ds:0x49007c97,al
  4245bd:	pop    ebx
  4245be:	enter  0xfec,0xfa
  4245c2:	and    ah,BYTE PTR [ebp+edx*2+0x7e]
  4245c6:	and    al,0x57
  4245c8:	pop    ebp
  4245c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ca:	sbb    ebx,DWORD PTR [esi]
  4245cc:	(bad)  
  4245ce:	mov    edx,0x3f46cd2a
  4245d3:	stc    
  4245d4:	dec    edi
  4245d5:	lods   eax,DWORD PTR ds:[esi]
  4245d6:	sub    DWORD PTR [ebp+edi*1-0x3d5c3110],ebx
  4245dd:	aam    0x3d
  4245df:	sbb    esp,eax
  4245e1:	dec    esi
  4245e2:	lods   al,BYTE PTR ds:[esi]
  4245e3:	sbb    BYTE PTR [ebx+0x146a6fab],ah
  4245e9:	data16 and BYTE PTR [esi],cl
  4245ec:	fistp  DWORD PTR [esp+eiz*8-0x78d9c038]
  4245f3:	xlat   BYTE PTR ds:[ebx]
  4245f4:	sbb    BYTE PTR [ebx],0x2b
  4245f7:	jle    0x4245a0
  4245f9:	and    ebx,eax
  4245fb:	and    eax,0x148ef866
  424600:	pop    esi
  424601:	dec    edi
  424602:	pop    DWORD PTR [ecx-0x3a8a5260]
  424608:	jae    0x4245e3
  42460a:	xchg   edx,eax
  42460b:	mov    ecx,DWORD PTR [ecx+0x254efff4]
  424611:	ffreep st(7)
  424613:	cwde   
  424614:	sbb    cl,0x10
  424617:	and    al,0x38
  424619:	mov    dh,0xd5
  42461b:	jg     0x424699
  42461d:	ins    DWORD PTR es:[edi],dx
  42461e:	inc    eax
  42461f:	imul   edi,DWORD PTR [edi-0x2c],0x88a8d7e3
  424626:	aad    0xc7
  424628:	or     al,0x83
  42462a:	mov    eax,ds:0x6c6ecd76
  42462f:	jge    0x424629
  424631:	xor    ah,dh
  424633:	mov    ecx,0x3f5ce8ae
  424638:	adc    cl,bh
  42463a:	or     DWORD PTR [ecx+0x3c],ebx
  42463d:	mov    edi,0xbf4c1407
  424642:	mov    cl,ch
  424644:	imul   edi,DWORD PTR [edx-0x5e],0x10e0b721
  42464b:	push   esp
  42464c:	pop    ds
  42464d:	sbb    edx,DWORD PTR [ebx-0x64]
  424650:	gs pop es
  424652:	xchg   ebx,eax
  424653:	add    al,0x2f
  424655:	push   es
  424656:	cdq    
  424657:	fist   DWORD PTR ds:0x1ae2b1fe
  42465d:	mov    al,0xc8
  42465f:	sbb    BYTE PTR [ebp-0x3],al
  424662:	loop   0x42463f
  424664:	or     al,0xe8
  424666:	test   DWORD PTR [edi+0x24],esp
  424669:	fbstp  TBYTE PTR [edx+0x40]
  42466c:	xor    al,0x13
  42466e:	dec    ecx
  42466f:	daa    
  424670:	repnz call 0xbd0b:0xd768e507
  424678:	test   eax,0x56a5fd91
  42467d:	ins    DWORD PTR es:[edi],dx
  42467e:	xchg   edi,eax
  42467f:	icebp  
  424680:	mov    dl,0x3a
  424682:	jns    0x4246cd
  424684:	retf   
  424685:	adc    DWORD PTR [ebp-0xba2b156],0xffffffb9
  42468c:	mov    bh,0xa3
  42468e:	dec    ecx
  42468f:	mov    edi,?
  424691:	xor    al,0x67
  424693:	out    dx,al
  424694:	sbb    ah,ch
  424696:	leave  
  424697:	push   cs
  424698:	into   
  424699:	cwde   
  42469a:	fst    QWORD PTR [edi-0x490408f3]
  4246a0:	or     DWORD PTR [ebx],edi
  4246a2:	aas    
  4246a3:	jno    0x42469c
  4246a5:	imul   ebx,DWORD PTR [ebx+0x1bb214b5],0xffffff86
  4246ac:	xchg   al,dl
  4246ae:	and    cl,al
  4246b0:	scas   eax,DWORD PTR es:[edi]
  4246b1:	jmp    0x6446:0xfb4d638d
  4246b8:	es inc esi
  4246ba:	push   ebx
  4246bb:	and    al,0x14
  4246bd:	add    DWORD PTR [ebp-0x7a],esp
  4246c0:	xchg   esi,eax
  4246c1:	add    al,0x96
  4246c3:	sub    edi,DWORD PTR [esi-0x3a679ec9]
  4246c9:	ss int3 
  4246cb:	hlt    
  4246cc:	xchg   ecx,eax
  4246cd:	iret   
  4246ce:	cmp    DWORD PTR [edi],eax
  4246d0:	rcr    BYTE PTR [edi+0x74aabe37],0xd4
  4246d7:	shl    DWORD PTR [eax-0x21713d92],cl
  4246dd:	inc    ebx
  4246de:	fwait
  4246df:	test   dh,0xc2
  4246e2:	cmp    bl,BYTE PTR [edi+0x76e7f7e2]
  4246e8:	mov    ebx,esp
  4246ea:	in     eax,0x7c
  4246ec:	xchg   DWORD PTR [ecx],ecx
  4246ee:	jne    0x424715
  4246f0:	aad    0xb1
  4246f2:	push   0xffffffc0
  4246f4:	add    al,0xa8
  4246f6:	adc    BYTE PTR [edx+0x46926e4a],0x37
  4246fd:	xor    BYTE PTR [ebx+0x55],0xc7
  424701:	push   ebp
  424702:	mov    ch,BYTE PTR [eax]
  424704:	fs ins DWORD PTR es:[edi],dx
  424706:	jnp    0x4246d3
  424708:	jmp    0x424766
  42470a:	xor    al,0xd4
  42470c:	retf   
  42470d:	int    0xe3
  42470f:	xchg   esp,eax
  424710:	aaa    
  424711:	data16 jns 0x424746
  424714:	mov    esp,0xab9085b5
  424719:	arpl   WORD PTR [ecx],cx
  42471b:	addr16 (bad) 
  42471d:	lock pushf 
  42471f:	aas    
  424720:	int3   
  424721:	outs   dx,BYTE PTR ds:[esi]
  424722:	scas   eax,DWORD PTR es:[edi]
  424723:	xchg   esp,eax
  424724:	cwde   
  424725:	sti    
  424726:	pop    eax
  424727:	adc    dh,bl
  424729:	jg     0x42474f
  42472b:	sbb    DWORD PTR [ecx+0x29d3da55],edi
  424731:	mov    esi,0x30789251
  424736:	lds    ebx,FWORD PTR [ecx+0x33f0a185]
  42473c:	outs   dx,BYTE PTR ds:[esi]
  42473d:	mov    ebp,0x8d386bc7
  424742:	fnstsw WORD PTR [ecx+ebx*1+0x3f]
  424746:	or     DWORD PTR [edx+ebp*8+0x6255e5d6],edi
  42474d:	rcl    DWORD PTR ds:0x96da5044,cl
  424753:	mov    ecx,0xf8d03686
  424758:	(bad)  [edi+0x38f8c9fd]
  42475e:	jo     0x42475e
  424760:	icebp  
  424761:	imul   ecx,ebx,0xa547f31b
  424767:	pop    ss
  424768:	add    al,0x1
  42476a:	add    al,0x50
  42476c:	adc    al,0xc6
  42476e:	pusha  
  42476f:	cld    
  424770:	jne    0x4247ad
  424772:	bnd jae 0x42472b
  424775:	mov    dh,bh
  424777:	test   BYTE PTR [ebp+0x32c19a5],0xfe
  42477e:	push   ds
  42477f:	dec    edx
  424780:	inc    edx
  424781:	pusha  
  424782:	dec    esp
  424783:	inc    esp
  424784:	ins    DWORD PTR es:[edi],dx
  424785:	or     bl,BYTE PTR [eax]
  424787:	imul   ecx,DWORD PTR [ebx+0x45f6e229],0x561f9bc3
  424791:	xchg   ecx,eax
  424793:	das    
  424794:	aad    0x61
  424796:	test   eax,0xb9f5a6c0
  42479b:	sbb    BYTE PTR [ebx+0x18],cl
  42479e:	inc    esi
  42479f:	push   ecx
  4247a0:	mov    bh,0xa0
  4247a2:	ror    DWORD PTR [esp+esi*4+0x4e114049],cl
  4247a9:	aad    0x96
  4247ab:	int3   
  4247ac:	xchg   ch,ch
  4247ae:	(bad)  
  4247af:	(bad)
  4247b2:	inc    edi
  4247b3:	fcomi  st,st(5)
  4247b5:	mov    ds:0x11a27703,eax
  4247ba:	dec    edx
  4247bb:	xchg   ebp,eax
  4247bc:	test   al,0x46
  4247be:	rol    DWORD PTR [edi+eiz*4],cl
  4247c1:	pop    esi
  4247c2:	fstp   TBYTE PTR [esi+0x64f0f1a6]
  4247c8:	mov    ecx,0x6f38a1c9
  4247cd:	mov    ebp,0x4f566f90
  4247d2:	xor    ch,ch
  4247d4:	repz mov esp,DWORD PTR [ebp+esi*4-0x3da576c5]
  4247dc:	(bad)  
  4247dd:	dec    ebx
  4247de:	mov    ecx,0x3334775d
  4247e3:	jae    0x42482d
  4247e5:	out    dx,eax
  4247e6:	or     al,0x7
  4247e8:	leave  
  4247e9:	and    eax,0x89758364
  4247ee:	push   cs
  4247ef:	xchg   esi,eax
  4247f0:	scas   eax,DWORD PTR es:[edi]
  4247f1:	aaa    
  4247f2:	mov    bh,0x66
  4247f4:	out    dx,eax
  4247f5:	xchg   DWORD PTR [esi-0x52a8650f],edi
  4247fb:	xchg   esp,eax
  4247fc:	ins    DWORD PTR es:[edi],dx
  4247fd:	stos   DWORD PTR es:[edi],eax
  4247fe:	jo     0x42479b
  424800:	xor    BYTE PTR [eax+edi*2+0xa],0x28
  424805:	cmc    
  424806:	stos   BYTE PTR es:[edi],al
  424807:	lds    ecx,FWORD PTR [ebx+0x3dadbb91]
  42480d:	push   ss
  42480e:	inc    edi
  42480f:	(bad)  
  424810:	sbb    eax,0x2a94ed7e
  424815:	fcomp  DWORD PTR [ebp+0x262b9316]
  42481b:	cmp    DWORD PTR [edx-0x6224d75c],ebx
  424821:	push   ebx
  424822:	lahf   
  424823:	mov    ebp,0x9980fa30
  424828:	sbb    ah,BYTE PTR [ecx+0x5c6ebad5]
  42482e:	loope  0x424806
  424830:	cmp    BYTE PTR [esp+ebp*8],dl
  424833:	inc    edx
  424834:	mov    ah,0xcb
  424836:	lahf   
  424837:	js     0x424831
  424839:	add    DWORD PTR [eax+0x3db411c7],edx
  42483f:	mov    fs,WORD PTR [ecx-0x117ef24b]
  424845:	adc    edi,DWORD PTR [ecx+0x1c4071c3]
  42484b:	mov    ebp,0xee08a507
  424850:	xchg   esi,eax
  424851:	(bad)  
  424852:	inc    DWORD PTR [ebx+edx*8-0x3c]
  424856:	mov    ebp,0x216a8cf4
  42485b:	add    edx,DWORD PTR [esi-0x47]
  42485e:	aas    
  42485f:	add    BYTE PTR [esi],0xc8
  424862:	xchg   esp,eax
  424863:	mov    ah,0xa2
  424865:	int3   
  424866:	call   0xc4d0:0x4f7e4852
  42486d:	pop    ebp
  42486e:	fs jmp 0x7e4f5849
  424874:	int3   
  424875:	adc    eax,0xbffbd152
  42487a:	add    BYTE PTR [ebx],bh
  42487c:	and    al,0x68
  42487e:	adc    BYTE PTR [ebp+0x78fd0ce9],al
  424884:	sbb    dh,BYTE PTR [edx+0x59]
  424887:	int3   
  424888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424889:	imul   eax,DWORD PTR [ecx+ecx*4+0x66],0x2af8ed60
  424891:	retf   0xea2e
  424894:	pushf  
  424895:	inc    edx
  424896:	mov    ch,0xe6
  424898:	retf   
  424899:	std    
  42489a:	imul   esp,DWORD PTR [ebp+0x4f51bd17],0x73
  4248a1:	pop    ecx
  4248a2:	rol    esi,cl
  4248a4:	dec    edx
  4248a5:	mov    esp,ss
  4248a7:	arpl   WORD PTR [esi],si
  4248a9:	sti    
  4248aa:	cwde   
  4248ab:	add    cl,BYTE PTR [edi]
  4248ad:	gs call 0x8c73:0x4e40464d
  4248b5:	out    0x72,eax
  4248b7:	push   0x1f
  4248b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248ba:	stos   DWORD PTR es:[edi],eax
  4248bb:	mov    eax,0x8b789a93
  4248c0:	mov    DWORD PTR [edx+edi*2],ebx
  4248c3:	mov    ebp,DWORD PTR [ecx-0x67054e42]
  4248c9:	inc    esp
  4248ca:	cmp    ecx,DWORD PTR [esi+0xf111759]
  4248d0:	shr    ch,1
  4248d2:	ins    BYTE PTR es:[edi],dx
  4248d3:	enter  0x216c,0xcf
  4248d7:	or     eax,0x155978ca
  4248dc:	dec    ecx
  4248dd:	daa    
  4248de:	adc    al,0x3c
  4248e0:	mov    ?,esi
  4248e2:	(bad)  
  4248e3:	int    0x9d
  4248e5:	push   ebx
  4248e6:	int3   
  4248e7:	jmp    0x4248d5
  4248e9:	daa    
  4248ea:	sar    DWORD PTR [esi+0x2b],1
  4248ed:	add    BYTE PTR [ebx-0x43f619a6],dh
  4248f3:	fdiv   st,st(5)
  4248f5:	(bad)  
  4248f6:	dec    ebx
  4248f7:	mov    ebp,DWORD PTR [ecx+0x538a14b7]
  4248fd:	int    0x5c
  4248ff:	loop   0x42494e
  424901:	fsubr  st,st(5)
  424903:	jo     0x42497a
  424905:	imul   DWORD PTR [edx+0x60105afe]
  42490b:	rcl    DWORD PTR [edx],cl
  42490d:	push   eax
  42490e:	mov    ds,WORD PTR [ecx-0x53b9266f]
  424914:	cmp    BYTE PTR [esi-0x1f619cef],bl
  42491a:	sbb    BYTE PTR [edi+ebx*8+0x52],bl
  42491e:	(bad)  
  424920:	out    dx,al
  424921:	sbb    ah,dh
  424923:	ins    BYTE PTR es:[edi],dx
  424924:	jecxz  0x424976
  424926:	sbb    eax,0xb37174a5
  42492b:	pop    esi
  42492c:	xchg   ebx,eax
  42492d:	mov    edx,gs
  42492f:	fild   DWORD PTR [eax]
  424931:	test   bl,bh
  424933:	mov    dh,0x2c
  424935:	imul   ecx,esp,0x12157c78
  42493b:	aad    0x79
  42493d:	clc    
  42493e:	jno    0x42494f
  424940:	mov    esi,0xdc8054c1
  424945:	inc    edi
  424946:	pushf  
  424947:	jo     0x424913
  424949:	out    0x4b,eax
  42494b:	mov    ecx,0xbcad89c5
  424950:	inc    eax
  424951:	sbb    ebx,esi
  424953:	push   ecx
  424954:	out    dx,al
  424955:	sti    
  424956:	mov    ds,WORD PTR [ebx+0x61]
  424959:	inc    edx
  42495a:	data16 shl al,1
  42495d:	and    BYTE PTR [edx+0x63],dh
  424960:	fnsave [edx-0x114ddc1c]
  424966:	idiv   bh
  424968:	pusha  
  424969:	jl     0x4249e1
  42496b:	inc    ebx
  42496c:	dec    edi
  42496d:	pminub mm0,mm1
  424970:	push   0xf6e975a9
  424975:	data16 (bad) 
  424977:	test   al,0x2b
  424979:	sbb    ecx,DWORD PTR [ecx]
  42497b:	pop    ds
  42497c:	and    edx,edx
  42497e:	push   cs
  42497f:	and    DWORD PTR [edx+0x17],eax
  424982:	push   edi
  424983:	mov    eax,0x6fdcb90a
  424988:	rcl    ecx,cl
  42498a:	add    DWORD PTR [esi+esi*1+0x397c6944],esi
  424991:	mov    al,0x9a
  424993:	in     eax,0xe3
  424995:	ret    0xb0c9
  424998:	aad    0xf9
  42499a:	pop    ecx
  42499b:	daa    
  42499c:	mov    al,0xfe
  42499e:	in     al,0x87
  4249a0:	push   edx
  4249a1:	ins    DWORD PTR es:[edi],dx
  4249a2:	lea    esi,[edi-0x406a91e]
  4249a8:	sub    al,0x1
  4249aa:	jo     0x4249ac
  4249ac:	pushf  
  4249ad:	dec    ecx
  4249ae:	mov    esp,ecx
  4249b0:	iret   
  4249b1:	mov    eax,0x1694214f
  4249b6:	cdq    
  4249b7:	jns    0x4249dd
  4249b9:	mov    ebx,0x1906a7ce
  4249be:	push   0x76
  4249c0:	sub    eax,0x3497a835
  4249c5:	and    eax,0xa1cb4b8e
  4249ca:	add    al,0x3c
  4249cc:	test   eax,0x4c5bdeec
  4249d1:	cmp    al,0x7b
  4249d3:	jmp    0xc45d67f9
  4249d8:	js     0x42497e
  4249da:	int3   
  4249db:	sub    eax,esi
  4249dd:	xchg   ecx,eax
  4249de:	push   esp
  4249df:	scas   eax,DWORD PTR es:[edi]
  4249e0:	pop    ebx
  4249e1:	js     0x4249be
  4249e3:	gs jb  0x424a15
  4249e6:	std    
  4249e7:	add    DWORD PTR [ecx],0xffffffc9
  4249ea:	lods   eax,DWORD PTR ds:[esi]
  4249eb:	mov    dh,0xe3
  4249ed:	sahf   
  4249ee:	and    DWORD PTR [ecx+0x7df3c978],0x63
  4249f5:	out    0x2d,al
  4249f7:	or     ecx,ecx
  4249f9:	adc    DWORD PTR [ebp+0x4b0e98c5],edx
  4249ff:	in     eax,0xaa
  424a01:	lahf   
  424a02:	push   esp
  424a03:	jb     0x4249ff
  424a05:	imul   esp,DWORD PTR [esi],0xffffffee
  424a08:	fs daa 
  424a0a:	test   BYTE PTR [edi+0x6b85ccc1],al
  424a10:	add    BYTE PTR [ecx-0x5d],bl
  424a13:	lods   al,BYTE PTR ds:[esi]
  424a14:	test   DWORD PTR [ebp+0x6c],edi
  424a17:	loope  0x424a56
  424a19:	mov    DWORD PTR [eax+0x27],ebx
  424a1c:	fcmovne st,st(2)
  424a1e:	jbe    0x424a59
  424a20:	sbb    BYTE PTR [ebx+0x18],dl
  424a23:	sahf   
  424a24:	daa    
  424a25:	mov    eax,ds:0x10b1a601
  424a2a:	leave  
  424a2b:	lock ret 
  424a2d:	sbb    ah,0x6
  424a30:	add    ebp,esi
  424a32:	stc    
  424a33:	loopne 0x4249e3
  424a35:	clc    
  424a36:	pusha  
  424a37:	cmp    BYTE PTR [ebx+edi*8-0x7ef0597b],dl
  424a3e:	mov    eax,DWORD PTR [ecx]
  424a40:	mov    dl,0x75
  424a42:	lea    ebp,[esi-0x4f]
  424a45:	ret    0x98cc
  424a48:	or     al,0xc
  424a4a:	hlt    
  424a4b:	push   ebx
  424a4c:	jno    0x424aa9
  424a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a4f:	adc    al,0x1c
  424a51:	lea    edx,[edi+0x2544dd7a]
  424a57:	enter  0x5cd5,0x8b
  424a5b:	ss push ebx
  424a5d:	push   ebx
  424a5e:	fld    DWORD PTR [ecx+0x23]
  424a61:	js     0x424a69
  424a63:	enter  0xe307,0xe7
  424a67:	aam    0x6c
  424a69:	popa   
  424a6a:	popf   
  424a6b:	(bad)  
  424a6c:	mov    esp,0x29403e60
  424a71:	or     BYTE PTR [edi-0x2d],bl
  424a74:	mov    DWORD PTR [eax+0x5a99c6d8],esi
  424a7a:	cmp    BYTE PTR [esi+0x5937aa10],al
  424a80:	push   esp
  424a81:	and    al,dh
  424a83:	repnz cmp dh,cl
  424a86:	lock xor BYTE PTR ds:0xbad2a6a2,ah
  424a8d:	arpl   ax,bx
  424a8f:	stc    
  424a90:	pop    edx
  424a91:	(bad)  
  424a93:	mov    edx,0xa351cde4
  424a98:	inc    esp
  424a99:	js     0x424aba
  424a9b:	jo     0x424b14
  424a9d:	(bad)  
  424a9e:	xchg   ebp,eax
  424a9f:	cld    
  424aa0:	jne    0x424ac2
  424aa2:	mov    edx,0xbcb20292
  424aa7:	imul   esi,edx,0xffffff8d
  424aaa:	push   ds
  424aab:	lea    edi,[edx-0x30f2ce56]
  424ab1:	rcl    BYTE PTR [ebx-0x513a3059],cl
  424ab7:	ret    
  424ab8:	out    dx,al
  424ab9:	ss out 0xdc,eax
  424abc:	xchg   ebx,eax
  424abd:	cmc    
  424abe:	mov    ebx,0x4e1a3e63
  424ac3:	jnp    0x424adf
  424ac5:	mov    eax,0x5286d26d
  424aca:	test   ebp,0x6868a66f
  424ad0:	pop    ebx
  424ad1:	jns    0x424b46
  424ad3:	outs   dx,DWORD PTR ds:[esi]
  424ad4:	test   al,0x18
  424ad6:	mov    ah,0xe1
  424ad8:	xor    ecx,DWORD PTR [ebx]
  424ada:	push   ds
  424adb:	ficom  DWORD PTR [edi-0x12b66b21]
  424ae1:	jge    0x424a64
  424ae3:	js     0x424b63
  424ae5:	int    0xc0
  424ae7:	fwait
  424ae8:	aaa    
  424ae9:	push   ss
  424aea:	dec    ecx
  424aeb:	and    bh,BYTE PTR [ebx+0xb]
  424aee:	jp     0x424af4
  424af0:	ss retf 
  424af2:	fcmovnb st,st(4)
  424af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424af5:	mov    cl,0xe2
  424af7:	repnz or ch,BYTE PTR [edx+0x2d6e90fb]
  424afe:	pop    eax
  424aff:	loop   0x424a91
  424b01:	stos   BYTE PTR es:[edi],al
  424b02:	vpor   xmm6,xmm5,xmm2
  424b06:	adc    DWORD PTR [ecx+0x49],esp
  424b09:	pop    esp
  424b0a:	(bad)
  424b0d:	jle    0x424b85
  424b0f:	push   edi
  424b10:	int    0x48
  424b12:	xchg   ebp,eax
  424b13:	push   eax
  424b14:	cmp    DWORD PTR [eax],0x267a865
  424b1a:	call   0x68a4651a
  424b1f:	mov    dh,0xe6
  424b21:	fcomp  DWORD PTR [esi+0x6b]
  424b24:	fwait
  424b25:	mov    bh,0x5e
  424b27:	mul    esp
  424b29:	jle    0x424af4
  424b2b:	jb     0x424b89
  424b2d:	bound  ebp,QWORD PTR [edx-0x44]
  424b30:	jns    0x424ba2
  424b32:	pushf  
  424b33:	out    dx,al
  424b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b35:	mov    ah,0x94
  424b37:	xor    al,0x31
  424b39:	lods   eax,DWORD PTR ds:[esi]
  424b3a:	loop   0x424b2e
  424b3c:	arpl   WORD PTR [eax-0x5f],si
  424b3f:	dec    edi
  424b40:	push   es
  424b41:	jmp    0x424b3e
  424b43:	(bad)  
  424b44:	push   esi
  424b45:	push   cs
  424b46:	jmp    0x2cbc:0x21a24617
  424b4d:	cmp    dh,BYTE PTR [edi+0xc797453]
  424b53:	push   esp
  424b54:	sbb    al,0x42
  424b56:	sti    
  424b57:	loop   0x424bbd
  424b59:	xchg   edi,eax
  424b5a:	push   esp
  424b5b:	and    eax,0xf3d45eab
  424b60:	add    al,0x73
  424b62:	mov    ah,0xcb
  424b64:	lahf   
  424b65:	or     eax,0x4a2e7478
  424b6a:	retf   
  424b6b:	sub    eax,0xc7092350
  424b70:	cdq    
  424b71:	xchg   ebx,eax
  424b72:	pop    edx
  424b73:	cwde   
  424b74:	mov    ch,0xdb
  424b76:	ds pop esi
  424b78:	inc    edi
  424b79:	and    edx,esp
  424b7b:	stos   DWORD PTR es:[edi],eax
  424b7c:	sub    BYTE PTR [esi],ch
  424b7e:	jne    0x424b69
  424b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b81:	out    0x39,eax
  424b83:	push   edx
  424b84:	inc    ebx
  424b85:	(bad)  
  424b86:	leave  
  424b87:	add    ch,BYTE PTR [esi+0x42db0e43]
  424b8d:	add    dl,BYTE PTR [edx+0x0]
  424b90:	xor    edi,DWORD PTR [ecx+0x24]
  424b93:	sbb    DWORD PTR [ebx],esi
  424b95:	xchg   edx,eax
  424b96:	add    eax,0xb3b40d99
  424b9b:	push   edi
  424b9c:	pop    edx
  424b9d:	mov    edi,0x282f16d4
  424ba2:	in     al,0xfc
  424ba4:	rcl    BYTE PTR [ebx-0x1e9e9976],0x5f
  424bab:	aam    0x59
  424bad:	pop    ebx
  424bae:	stos   DWORD PTR es:[edi],eax
  424baf:	imul   ebx,DWORD PTR [esi-0xb],0x8a45d706
  424bb6:	xchg   BYTE PTR [edi-0x4326c331],al
  424bbc:	(bad)  
  424bbd:	repz imul esp,edx,0xffffffd4
  424bc1:	mov    ebx,0x38f520c0
  424bc6:	mov    bl,dl
  424bc8:	jg     0x424beb
  424bca:	sub    DWORD PTR gs:[edi-0x5],0x14457672
  424bd2:	inc    ecx
  424bd3:	jbe    0x424b76
  424bd5:	pusha  
  424bd6:	pop    esi
  424bd7:	pop    ebx
  424bd8:	leave  
  424bd9:	ret    0xc
  424bdc:	add    BYTE PTR [eax-0x5ffbffbe],ah
  424be2:	inc    edx
  424be3:	add    BYTE PTR [eax],cl
  424be5:	mov    al,ds:0xa00c0042
  424bea:	inc    edx
  424beb:	add    BYTE PTR [eax],dl
  424bed:	mov    al,ds:0xa0140042
  424bf2:	inc    edx
  424bf3:	add    BYTE PTR [eax],bl
  424bf5:	mov    al,ds:0xa01c0042
  424bfa:	inc    edx
  424bfb:	add    BYTE PTR [eax],al
  424bfd:	rol    BYTE PTR [edx+0x0],1
  424c00:	add    al,0xd0
  424c02:	inc    edx
  424c03:	add    BYTE PTR [eax],cl
  424c05:	rol    BYTE PTR [edx+0x0],1
  424c08:	or     al,0xd0
  424c0a:	inc    edx
  424c0b:	add    BYTE PTR [eax],dl
  424c0d:	rol    BYTE PTR [edx+0x0],1
  424c10:	adc    al,0xd0
  424c12:	inc    edx
  424c13:	add    BYTE PTR [eax],bl
  424c15:	rol    BYTE PTR [edx+0x0],1
  424c18:	sbb    al,0xd0
  424c1a:	inc    edx
	...
  424c23:	add    BYTE PTR [edx],bl
  424c25:	hlt    
  424c26:	xlat   BYTE PTR ds:[ebx]
  424c27:	dec    ebp
  424c28:	add    BYTE PTR [eax],al
  424c2a:	add    BYTE PTR [eax],al
  424c2c:	add    al,BYTE PTR [eax]
  424c2e:	add    BYTE PTR [eax],al
  424c30:	cmp    eax,0x20000000
  424c35:	dec    ebp
  424c36:	add    al,BYTE PTR [eax]
  424c38:	and    BYTE PTR [ecx+0x2],al
	...
  424c43:	add    BYTE PTR [edx],bl
  424c45:	hlt    
  424c46:	xlat   BYTE PTR ds:[ebx]
  424c47:	dec    ebp
  424c48:	add    BYTE PTR [eax],al
  424c4a:	add    BYTE PTR [eax],al
  424c4c:	jb     0x424c9a
  424c4e:	add    al,BYTE PTR [eax]
  424c50:	add    DWORD PTR [eax],eax
  424c52:	add    BYTE PTR [eax],al
  424c54:	add    DWORD PTR [eax],eax
  424c56:	add    BYTE PTR [eax],al
  424c58:	add    DWORD PTR [eax],eax
  424c5a:	add    BYTE PTR [eax],al
  424c5c:	push   0x6c00024c
  424c61:	dec    esp
  424c62:	add    al,BYTE PTR [eax]
  424c64:	jo     0x424cb2
  424c66:	add    al,BYTE PTR [eax]
  424c68:	xor    eax,0x7e00002a
  424c6d:	dec    esp
  424c6e:	add    al,BYTE PTR [eax]
  424c70:	add    BYTE PTR [eax],al
  424c72:	inc    esp
  424c73:	jns    0x424ce3
  424c75:	popa   
  424c76:	ins    DWORD PTR es:[edi],dx
  424c77:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  424c7e:	aas    
  424c7f:	inc    edi
  424c80:	gs je  0x424cd8
  424c83:	jae    0x424cea
  424c85:	jb     0x424cd6
  424c87:	bound  ebp,QWORD PTR [edx+0x65]
  424c8a:	arpl   WORD PTR [ebx+edx*2+0x65],si
  424c8e:	arpl   WORD PTR [ebp+0x72],si
  424c91:	imul   esi,DWORD PTR [ecx+edi*2+0x47],0x73557465
  424c99:	gs jb  0x424ceb
  424c9c:	bound  ebp,QWORD PTR [edx+0x65]
  424c9f:	arpl   WORD PTR [ebx+edx*2+0x65],si
  424ca3:	arpl   WORD PTR [ebp+0x0],si
  424ca6:	nop
  424ca7:	inc    edx
  424ca8:	add    BYTE PTR [eax+edx*4],al
  424cab:	inc    edx
  424cac:	add    BYTE PTR [eax],cl
  424cae:	nop
  424caf:	inc    edx
  424cb0:	add    BYTE PTR [eax+edx*4],cl
  424cb3:	inc    edx
  424cb4:	add    BYTE PTR [eax],dl
  424cb6:	nop
  424cb7:	inc    edx
  424cb8:	add    BYTE PTR [eax+edx*4],dl
  424cbb:	inc    edx
  424cbc:	add    BYTE PTR [eax],bl
  424cbe:	nop
  424cbf:	inc    edx
  424cc0:	add    BYTE PTR [eax+edx*4],bl
  424cc3:	inc    edx
  424cc4:	add    BYTE PTR [eax],ah
  424cc6:	nop
  424cc7:	inc    edx
  424cc8:	add    BYTE PTR [eax+edx*4],ah
  424ccb:	inc    edx
  424ccc:	add    BYTE PTR [eax],ch
  424cce:	nop
  424ccf:	inc    edx
  424cd0:	add    BYTE PTR [eax],al
  424cd2:	mov    al,0x42
  424cd4:	add    BYTE PTR [eax+esi*4],al
  424cd7:	inc    edx
  424cd8:	add    BYTE PTR [eax],cl
  424cda:	mov    al,0x42
  424cdc:	add    BYTE PTR [eax+esi*4],cl
  424cdf:	inc    edx
  424ce0:	add    BYTE PTR [eax],dl
  424ce2:	mov    al,0x42
  424ce4:	add    BYTE PTR [eax+esi*4],dl
  424ce7:	inc    edx
  424ce8:	add    BYTE PTR [eax],bl
  424cea:	mov    al,0x42
  424cec:	add    BYTE PTR [eax+esi*4],bl
  424cef:	inc    edx
  424cf0:	add    BYTE PTR [eax],al
  424cf2:	rol    BYTE PTR [edx+0x0],0x4
  424cf6:	rol    BYTE PTR [edx+0x0],0x8
  424cfa:	rol    BYTE PTR [edx+0x0],0xc
  424cfe:	rol    BYTE PTR [edx+0x0],0x10
  424d02:	rol    BYTE PTR [edx+0x0],0x14
  424d06:	rol    BYTE PTR [edx+0x0],0x18
  424d0a:	rol    BYTE PTR [edx+0x0],0x1c
  424d0e:	rol    BYTE PTR [edx+0x0],0x0
	...
  424d1e:	add    BYTE PTR [eax],al
  424d20:	push   edx
  424d21:	push   ebx
  424d22:	inc    esp
  424d23:	push   ebx
  424d24:	pop    ebx
  424d25:	lds    esp,FWORD PTR [ecx+ecx*8+0x48b9a364]
  424d2c:	mov    al,ds:0xc081bf
  424d31:	adc    edx,DWORD PTR [edi+0x6c]
  424d34:	add    DWORD PTR [eax],eax
  424d36:	add    BYTE PTR [eax],al
  424d38:	inc    ebx
  424d39:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  424d3d:	jb     0x424db1
  424d3f:	outs   dx,BYTE PTR gs:[esi]
  424d41:	je     0x424d87
  424d43:	popa   
  424d44:	je     0x424da7
  424d46:	pop    esp
  424d47:	dec    ebp
  424d48:	outs   dx,DWORD PTR ds:[esi]
  424d49:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  424d51:	ins    BYTE PTR es:[edi],dx
  424d52:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  424d59:	dec    esi
  424d5a:	gs ja  0x424d5d
  424d5d:	mov    edx,DWORD PTR [ebp-0x14]
  424d60:	sub    esp,0xe4
  424d66:	push   ebx
  424d67:	mov    eax,ebx
  424d69:	xchg   ecx,eax
  424d6a:	mov    eax,DWORD PTR [ebp+0x8]
  424d6d:	cmp    eax,0xf89c85b9
  424d72:	jne    0x425104
  424d78:	mov    eax,DWORD PTR [ebp+0xc]
  424d7b:	cmp    eax,0xf89c85b8
  424d80:	jne    0x425104
  424d86:	mov    eax,DWORD PTR [ebp+0x24]
  424d89:	mov    DWORD PTR [ebp-0x4],eax
  424d8c:	mov    BYTE PTR [ebp-0x18],0x3
  424d90:	mov    BYTE PTR [ebp-0x17],0x1e
  424d94:	mov    BYTE PTR [ebp-0x16],0x1
  424d98:	mov    BYTE PTR [ebp-0x15],0x4f
  424d9c:	mov    BYTE PTR [ebp-0x14],0x48
  424da0:	mov    BYTE PTR [ebp-0x13],0x7a
  424da4:	mov    BYTE PTR [ebp-0x20],0xd
  424da8:	mov    BYTE PTR [ebp-0x1f],0xf
  424dac:	mov    BYTE PTR [ebp-0x1e],0x1d
  424db0:	mov    BYTE PTR [ebp-0x1d],0x8
  424db4:	mov    BYTE PTR [ebp-0x1c],0x4f
  424db8:	mov    BYTE PTR [ebp-0x1b],0x48
  424dbc:	mov    BYTE PTR [ebp-0x1a],0x7a
  424dc0:	mov    BYTE PTR [ebp-0x28],0xf
  424dc4:	mov    BYTE PTR [ebp-0x27],0x2
  424dc8:	push   esi
  424dc9:	mov    BYTE PTR [ebp-0x26],0x6
  424dcd:	mov    BYTE PTR [ebp-0x25],0xf3
  424dd1:	push   edi
  424dd2:	mov    BYTE PTR [ebp-0x24],0x19
  424dd6:	mov    BYTE PTR [ebp-0x23],0xa
  424dda:	push   0x73
  424ddc:	mov    BYTE PTR [ebp-0x22],0x1
  424de0:	xor    edi,edi
  424de2:	mov    BYTE PTR [ebp-0x21],0x7a
  424de6:	xor    esi,esi
  424de8:	pop    edx
  424de9:	mov    eax,0xf7
  424dee:	lea    ecx,[ebp+esi*1-0x18]
  424df2:	movzx  ebx,BYTE PTR [ecx]
  424df5:	xor    ebx,edx
  424df7:	add    ebx,eax
  424df9:	inc    esi
  424dfa:	mov    BYTE PTR [ecx],bl
  424dfc:	cmp    esi,0x6
  424dff:	jb     0x424dee
  424e01:	xor    esi,esi
  424e03:	lea    ecx,[ebp+esi*1-0x20]
  424e07:	movzx  ebx,BYTE PTR [ecx]
  424e0a:	xor    ebx,edx
  424e0c:	add    ebx,eax
  424e0e:	inc    esi
  424e0f:	mov    BYTE PTR [ecx],bl
  424e11:	cmp    esi,0x7
  424e14:	jb     0x424e03
  424e16:	xor    esi,esi
  424e18:	lea    ecx,[ebp+esi*1-0x28]
  424e1c:	movzx  ebx,BYTE PTR [ecx]
  424e1f:	xor    ebx,edx
  424e21:	add    ebx,eax
  424e23:	push   0x8
  424e25:	mov    BYTE PTR [ecx],bl
  424e27:	inc    esi
  424e28:	pop    ecx
  424e29:	cmp    esi,ecx
  424e2b:	jb     0x424e18
  424e2d:	lea    eax,[ebp-0x2c]
  424e30:	mov    DWORD PTR [ebp-0x8],eax
  424e33:	mov    esi,DWORD PTR [ebp-0x8]
  424e36:	mov    eax,0x7113fcef
  424e3b:	mov    DWORD PTR [esi],eax
  424e3d:	mov    esi,DWORD PTR [ebp-0x2c]
  424e40:	cmp    esi,eax
  424e42:	jne    0x424e52
  424e44:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  424e4b:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  424e52:	mov    eax,DWORD PTR [ebp-0x4]
  424e55:	mov    eax,DWORD PTR [eax+0x18c]
  424e5b:	cmp    DWORD PTR [eax],edi
  424e5d:	jne    0x4250ad
  424e63:	mov    eax,DWORD PTR [ebp-0x4]
  424e66:	mov    eax,DWORD PTR [eax+0x17c]
  424e6c:	mov    DWORD PTR [eax],edi
  424e6e:	mov    eax,DWORD PTR [ebp-0x4]
  424e71:	mov    eax,DWORD PTR [eax+0x180]
  424e77:	mov    DWORD PTR [eax],edi
  424e79:	mov    edi,0x4e3c
  424e7e:	mov    eax,0x4f8f
  424e83:	mov    WORD PTR [ebp-0x78],ax
  424e87:	mov    eax,edi
  424e89:	mov    WORD PTR [ebp-0x76],ax
  424e8d:	add    eax,0x43
  424e90:	mov    WORD PTR [ebp-0x74],ax
  424e94:	lea    eax,[edi+0x3]
  424e97:	mov    WORD PTR [ebp-0x72],ax
  424e9b:	mov    eax,0x4fac
  424ea0:	mov    WORD PTR [ebp-0x70],ax
  424ea4:	lea    eax,[edi-0x4]
  424ea7:	mov    WORD PTR [ebp-0x6e],ax
  424eab:	add    eax,0x45
  424eae:	mov    WORD PTR [ebp-0x6c],ax
  424eb2:	lea    eax,[edi-0x2]
  424eb5:	mov    WORD PTR [ebp-0x6a],ax
  424eb9:	mov    eax,edi
  424ebb:	mov    WORD PTR [ebp-0x68],ax
  424ebf:	dec    eax
  424ec0:	mov    WORD PTR [ebp-0x66],ax
  424ec4:	mov    eax,0x99ff
  424ec9:	mov    WORD PTR [ebp-0x64],ax
  424ecd:	mov    eax,0x8288
  424ed2:	mov    WORD PTR [ebp-0x62],ax
  424ed6:	mov    eax,0xd78d
  424edb:	mov    WORD PTR [ebp-0x60],ax
  424edf:	add    eax,0x1c
  424ee2:	mov    WORD PTR [ebp-0x5e],ax
  424ee6:	mov    eax,0x27aa
  424eeb:	mov    WORD PTR [ebp-0x5c],ax
  424eef:	mov    eax,0x47aa
  424ef4:	mov    WORD PTR [ebp-0x5a],ax
  424ef8:	lea    eax,[edi-0x3]
  424efb:	mov    WORD PTR [ebp-0x58],ax
  424eff:	mov    DWORD PTR [ebp-0x10],0xf306020f
  424f06:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  424f0d:	lea    eax,[ebp-0x10]
  424f10:	mov    bl,BYTE PTR [eax]
  424f12:	xor    bl,dl
  424f14:	sub    bl,0x9
  424f17:	mov    BYTE PTR [eax],bl
  424f19:	inc    eax
  424f1a:	dec    ecx
  424f1b:	jne    0x424f10
  424f1d:	lea    eax,[ebp-0x10]
  424f20:	mov    DWORD PTR [ebp-0xb8],eax
  424f26:	lea    eax,[ebp-0xbc]
  424f2c:	push   eax
  424f2d:	mov    eax,DWORD PTR [ebp+0xc]
  424f30:	mov    ebx,0x7510899
  424f35:	xor    eax,ebx
  424f37:	mov    esi,0x3272e0
  424f3c:	add    eax,esi
  424f3e:	push   eax
  424f3f:	mov    eax,DWORD PTR [ebp-0x4]
  424f42:	add    eax,0x66
  424f45:	push   eax
  424f46:	mov    eax,DWORD PTR [ebp-0x4]
  424f49:	mov    eax,DWORD PTR [eax+0x198]
  424f4f:	mov    DWORD PTR [ebp-0xbc],0x1
  424f59:	push   DWORD PTR [eax]
  424f5b:	mov    eax,DWORD PTR [ebp+0x10]
  424f5e:	call   eax
  424f60:	mov    ecx,DWORD PTR [ebp+0x8]
  424f63:	xor    ecx,ebx
  424f65:	add    ecx,esi
  424f67:	mov    DWORD PTR [ebp-0x8],eax
  424f6a:	cmp    eax,ecx
  424f6c:	jne    0x424f87
  424f6e:	mov    eax,ds:0x33730bee
  424f73:	or     eax,0x22150bef
  424f78:	mov    ds:0x33730bee,eax
  424f7d:	add    eax,0x3372e90f
  424f82:	mov    ds:0x33730bee,eax
  424f87:	mov    ecx,0x4f84
  424f8c:	mov    eax,ecx
  424f8e:	mov    WORD PTR [ebp-0x40],ax
  424f92:	mov    eax,0x4e71
  424f97:	mov    edx,eax
  424f99:	mov    WORD PTR [ebp-0x3e],dx
  424f9d:	lea    edx,[ecx+0x15]
  424fa0:	mov    WORD PTR [ebp-0x3c],dx
  424fa4:	add    edx,0xfffffff8
  424fa7:	mov    WORD PTR [ebp-0x3a],dx
  424fab:	lea    edx,[ecx+0xf]
  424fae:	mov    WORD PTR [ebp-0x38],dx
  424fb2:	add    edx,0x1b
  424fb5:	mov    WORD PTR [ebp-0x36],dx
  424fb9:	lea    edx,[ecx+0x21]
  424fbc:	mov    WORD PTR [ebp-0x34],dx
  424fc0:	mov    WORD PTR [ebp-0x32],cx
  424fc4:	mov    ecx,edi
  424fc6:	mov    WORD PTR [ebp-0x30],cx
  424fca:	lea    ecx,[edx-0x1]
  424fcd:	mov    edx,ecx
  424fcf:	mov    WORD PTR [ebp-0x54],dx
  424fd3:	mov    edx,eax
  424fd5:	mov    WORD PTR [ebp-0x52],dx
  424fd9:	add    edx,0x8
  424fdc:	mov    WORD PTR [ebp-0x50],dx
  424fe0:	mov    WORD PTR [ebp-0x4e],ax
  424fe4:	add    eax,0x2
  424fe7:	mov    WORD PTR [ebp-0x4c],ax
  424feb:	lea    eax,[ecx-0x16]
  424fee:	mov    WORD PTR [ebp-0x4a],ax
  424ff2:	add    eax,0xfffffff7
  424ff5:	mov    WORD PTR [ebp-0x48],ax
  424ff9:	mov    WORD PTR [ebp-0x46],cx
  424ffd:	mov    WORD PTR [ebp-0x44],di
  425001:	mov    eax,DWORD PTR [ebp+0x8]
  425004:	movzx  ecx,WORD PTR [ebp-0x54]
  425008:	xor    eax,ebx
  42500a:	add    eax,esi
  42500c:	xor    eax,ecx
  42500e:	mov    WORD PTR [ebp-0x54],ax
  425012:	mov    eax,DWORD PTR [ebp+0x8]
  425015:	movzx  ecx,WORD PTR [ebp-0x40]
  425019:	xor    eax,ebx
  42501b:	add    eax,esi
  42501d:	xor    eax,ecx
  42501f:	mov    WORD PTR [ebp-0x40],ax
  425023:	xor    eax,eax
  425025:	mov    WORD PTR [ebp-0xd0],ax
  42502c:	mov    WORD PTR [ebp-0xe4],ax
  425033:	mov    edi,DWORD PTR [ebp+0x24]
  425036:	lea    eax,[ebp-0xd0]
  42503c:	lea    edx,[ebp-0x54]
  42503f:	mov    DWORD PTR [ebp-0xbc],0x2
  425049:	mov    DWORD PTR [ebp-0xb8],eax
  42504f:	call   0x4279b8
  425054:	mov    DWORD PTR [ebp-0xb4],eax
  42505a:	lea    eax,[ebp-0xbc]
  425060:	push   eax
  425061:	mov    eax,DWORD PTR [ebp+0xc]
  425064:	xor    eax,ebx
  425066:	add    eax,esi
  425068:	push   eax
  425069:	lea    eax,[ebp-0x78]
  42506c:	push   eax
  42506d:	push   DWORD PTR [ebp-0x8]
  425070:	mov    eax,DWORD PTR [ebp+0x10]
  425073:	call   eax
  425075:	mov    edi,DWORD PTR [ebp+0x24]
  425078:	lea    eax,[ebp-0xe4]
  42507e:	lea    edx,[ebp-0x40]
  425081:	mov    DWORD PTR [ebp-0xb8],eax
  425087:	call   0x4279b8
  42508c:	mov    DWORD PTR [ebp-0xb4],eax
  425092:	lea    eax,[ebp-0xbc]
  425098:	push   eax
  425099:	mov    eax,DWORD PTR [ebp+0xc]
  42509c:	xor    eax,ebx
  42509e:	add    eax,esi
  4250a0:	push   eax
  4250a1:	lea    eax,[ebp-0x78]
  4250a4:	push   eax
  4250a5:	push   DWORD PTR [ebp-0x8]
  4250a8:	mov    eax,DWORD PTR [ebp+0x10]
  4250ab:	call   eax
  4250ad:	mov    eax,DWORD PTR [ebp+0x14]
  4250b0:	push   DWORD PTR [ebp-0x4]
  4250b3:	push   DWORD PTR [ebp+0x20]
  4250b6:	push   DWORD PTR [ebp+0x1c]
  4250b9:	push   DWORD PTR [ebp+0x18]
  4250bc:	push   DWORD PTR [ebp+0x10]
  4250bf:	push   DWORD PTR [ebp+0x8]
  4250c2:	push   DWORD PTR [ebp+0xc]
  4250c5:	call   0x42625c
  4250ca:	add    DWORD PTR [ebp-0x4],eax
  4250cd:	mov    eax,DWORD PTR [ebp-0x4]
  4250d0:	mov    eax,DWORD PTR [ebp-0x4]
  4250d3:	mov    edi,DWORD PTR [eax+0x190]
  4250d9:	mov    eax,DWORD PTR [ebp-0x4]
  4250dc:	mov    eax,DWORD PTR [eax+0x18c]
  4250e2:	mov    esi,DWORD PTR [eax]
  4250e4:	lea    ecx,[ebp+0x4]
  4250e7:	mov    edx,DWORD PTR [ecx]
  4250e9:	cmp    edx,esi
  4250eb:	jb     0x425102
  4250ed:	mov    eax,DWORD PTR [edi]
  4250ef:	mov    edi,DWORD PTR [eax+0x3c]
  4250f2:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  4250f6:	add    edi,esi
  4250f8:	cmp    edx,edi
  4250fa:	jae    0x425102
  4250fc:	sub    eax,esi
  4250fe:	add    eax,edx
  425100:	mov    DWORD PTR [ecx],eax
  425102:	pop    edi
  425103:	pop    esi
  425104:	pop    ebx
  425105:	leave  
  425106:	ret    0x20
  425109:	push   edi
  42510a:	push   esi
  42510b:	push   ebx
  42510c:	push   ebp
  42510d:	mov    ebp,esp
  42510f:	mov    eax,DWORD PTR [ebp+0x24]
  425112:	add    DWORD PTR [ebp+0x28],eax
  425115:	push   eax
  425116:	cld    
  425117:	mov    esi,DWORD PTR [ebp+0x18]
  42511a:	add    DWORD PTR [ebp+0x1c],esi
  42511d:	push   esi
  42511e:	mov    esi,DWORD PTR [ebp+0x14]
  425121:	lods   eax,DWORD PTR ds:[esi]
  425122:	xchg   edx,eax
  425123:	push   edx
  425124:	mov    cl,BYTE PTR [esi-0x2]
  425127:	or     eax,0xffffffff
  42512a:	shl    eax,cl
  42512c:	not    eax
  42512e:	push   eax
  42512f:	mov    cl,dh
  425131:	or     eax,0xffffffff
  425134:	shl    eax,cl
  425136:	not    eax
  425138:	push   eax
  425139:	add    cl,dl
  42513b:	mov    edi,esi
  42513d:	sub    esp,0xc
  425140:	sub    eax,eax
  425142:	inc    eax
  425143:	push   eax
  425144:	push   eax
  425145:	push   eax
  425146:	push   eax
  425147:	push   eax
  425148:	push   edi
  425149:	sub    esi,esi
  42514b:	push   esi
  42514c:	or     ebx,0xffffffff
  42514f:	mov    eax,0x300
  425154:	shl    eax,cl
  425156:	lea    ecx,[eax+0x736]
  42515c:	mov    eax,0x4000400
  425161:	shr    ecx,1
  425163:	rep stos DWORD PTR es:[edi],eax
  425165:	push   0x5
  425167:	pop    ecx
  425168:	call   0x425453
  42516d:	loop   0x425168
  42516f:	lea    esi,[esi]
  425171:	lea    edi,[edi]
  425173:	mov    edi,DWORD PTR [ebp-0x4]
  425176:	mov    eax,DWORD PTR [ebp-0x10]
  425179:	sub    edi,DWORD PTR [ebp+0x24]
  42517c:	and    eax,edi
  42517e:	mov    DWORD PTR [ebp-0x18],eax
  425181:	mov    al,0x0
  425183:	call   0x42546b
  425188:	jne    0x425223
  42518e:	mov    cl,BYTE PTR [ebp-0xc]
  425191:	and    edi,DWORD PTR [ebp-0x14]
  425194:	shl    edi,cl
  425196:	sub    cl,0x8
  425199:	neg    cl
  42519b:	shr    esi,cl
  42519d:	pop    eax
  42519e:	add    edi,esi
  4251a0:	pop    esi
  4251a1:	lea    edi,[edi+edi*2]
  4251a4:	shl    edi,0x8
  4251a7:	cmp    al,0x7
  4251a9:	pop    edx
  4251aa:	lea    ecx,[esi+edi*2+0xe6c]
  4251b1:	push   ecx
  4251b2:	push   esi
  4251b3:	mov    esi,0x100
  4251b8:	push   eax
  4251b9:	mov    al,0x1
  4251bb:	jb     0x4251f1
  4251bd:	mov    edi,DWORD PTR [ebp-0x4]
  4251c0:	sub    edi,DWORD PTR [ebp-0x24]
  4251c3:	movzx  edi,BYTE PTR [edi]
  4251c6:	mov    ebp,DWORD PTR [ebp-0x34]
  4251c9:	shl    edi,1
  4251cb:	mov    ecx,esi
  4251cd:	and    esi,edi
  4251cf:	add    ecx,esi
  4251d1:	lea    ebp,[ebp+ecx*2+0x0]
  4251d5:	call   0x42548a
  4251da:	mov    ecx,eax
  4251dc:	shr    esi,0x8
  4251df:	and    ecx,0x1
  4251e2:	cmp    esi,ecx
  4251e4:	mov    esi,0x100
  4251e9:	jne    0x4251f9
  4251eb:	cmp    eax,esi
  4251ed:	jb     0x4251c6
  4251ef:	jmp    0x425205
  4251f1:	mov    ebp,DWORD PTR [ebp-0x34]
  4251f4:	call   0x42548a
  4251f9:	inc    eax
  4251fa:	inc    esi
  4251fb:	sub    eax,0x1
  4251fe:	sub    esi,0x1
  425201:	cmp    eax,esi
  425203:	jb     0x4251f1
  425205:	pop    edx
  425206:	inc    edx
  425207:	cmp    edx,0x5
  42520a:	dec    edx
  42520b:	mov    ecx,edx
  42520d:	jb     0x42521e
  42520f:	inc    edx
  425210:	cmp    edx,0xb
  425213:	dec    edx
  425214:	mov    cl,0x4
  425216:	dec    cl
  425218:	jb     0x42521e
  42521a:	mov    cl,0x7
  42521c:	dec    cl
  42521e:	sub    edx,ecx
  425220:	push   edx
  425221:	jmp    0x425272
  425223:	mov    al,0xc1
  425225:	dec    al
  425227:	call   0x42547b
  42522c:	jne    0x425242
  42522e:	pop    eax
  42522f:	pop    edi
  425230:	pop    edx
  425231:	pop    ecx
  425232:	pop    edx
  425233:	pop    ecx
  425234:	push   DWORD PTR [esp]
  425237:	push   ecx
  425238:	push   edx
  425239:	mov    edx,0x664
  42523e:	mov    cl,0x0
  425240:	jmp    0x4252b5
  425242:	mov    al,0xcd
  425244:	dec    al
  425246:	call   0x42547b
  42524b:	jne    0x42527b
  42524d:	mov    al,0xf1
  42524f:	dec    al
  425251:	call   0x42546b
  425256:	jne    0x4252ab
  425258:	pop    eax
  425259:	cmp    al,0x7
  42525b:	mov    al,0x9
  42525d:	jb     0x425261
  42525f:	mov    al,0xb
  425261:	push   eax
  425262:	mov    esi,DWORD PTR [ebp-0x4]
  425265:	sub    esi,DWORD PTR [ebp-0x24]
  425268:	cmp    esi,DWORD PTR [ebp+0x24]
  42526b:	jb     0x425442
  425271:	lods   al,BYTE PTR ds:[esi]
  425272:	mov    edi,DWORD PTR [ebp-0x4]
  425275:	stos   BYTE PTR es:[edi],al
  425276:	jmp    0x425409
  42527b:	mov    al,0xd8
  42527d:	call   0x42547b
  425282:	mov    esi,DWORD PTR [ebp-0x28]
  425285:	je     0x4252a2
  425287:	mov    al,0xe4
  425289:	call   0x42547b
  42528e:	mov    esi,DWORD PTR [ebp-0x2c]
  425291:	je     0x42529c
  425293:	mov    esi,DWORD PTR [ebp-0x30]
  425296:	mov    ecx,DWORD PTR [ebp-0x2c]
  425299:	mov    DWORD PTR [ebp-0x30],ecx
  42529c:	mov    ecx,DWORD PTR [ebp-0x28]
  42529f:	mov    DWORD PTR [ebp-0x2c],ecx
  4252a2:	mov    ecx,DWORD PTR [ebp-0x24]
  4252a5:	mov    DWORD PTR [ebp-0x28],ecx
  4252a8:	mov    DWORD PTR [ebp-0x24],esi
  4252ab:	pop    eax
  4252ac:	pop    edi
  4252ad:	pop    ecx
  4252ae:	mov    edx,0xa68
  4252b3:	mov    cl,0x8
  4252b5:	add    edx,edi
  4252b7:	push   edx
  4252b8:	push   edi
  4252b9:	cmp    al,0x7
  4252bb:	mov    al,cl
  4252bd:	jb     0x4252c1
  4252bf:	add    al,0x3
  4252c1:	push   eax
  4252c2:	mov    ebp,DWORD PTR [ebp-0x34]
  4252c5:	call   0x425488
  4252ca:	jne    0x4252e0
  4252cc:	mov    eax,DWORD PTR [ebp-0x18]
  4252cf:	mov    edi,DWORD PTR [ebp-0x34]
  4252d2:	shl    eax,0x3
  4252d5:	sub    ecx,ecx
  4252d7:	push   0x8
  4252d9:	pop    esi
  4252da:	lea    edi,[edi+eax*2+0x4]
  4252de:	jmp    0x425315
  4252e0:	mov    ebp,DWORD PTR [ebp-0x34]
  4252e3:	add    ebp,0x2
  4252e6:	call   0x425488
  4252eb:	jne    0x425305
  4252ed:	mov    eax,DWORD PTR [ebp-0x18]
  4252f0:	mov    edi,DWORD PTR [ebp-0x34]
  4252f3:	shl    eax,0x3
  4252f6:	push   0x8
  4252f8:	pop    ecx
  4252f9:	push   0x8
  4252fb:	pop    esi
  4252fc:	lea    edi,[edi+eax*2+0x104]
  425303:	jmp    0x425315
  425305:	mov    edi,0x204
  42530a:	add    edi,DWORD PTR [ebp-0x34]
  42530d:	push   0x10
  42530f:	pop    ecx
  425310:	mov    esi,0x100
  425315:	mov    DWORD PTR [ebp-0x1c],ecx
  425318:	sub    eax,eax
  42531a:	inc    eax
  42531b:	mov    ebp,edi
  42531d:	call   0x42548a
  425322:	mov    ecx,eax
  425324:	sub    ecx,esi
  425326:	jb     0x42531b
  425328:	add    DWORD PTR [ebp-0x1c],ecx
  42532b:	cmp    DWORD PTR [ebp-0x3c],0x4
  42532f:	jae    0x4253e5
  425335:	add    DWORD PTR [ebp-0x3c],0x7
  425339:	mov    ecx,DWORD PTR [ebp-0x1c]
  42533c:	cmp    ecx,0x4
  42533f:	jb     0x425344
  425341:	push   0x3
  425343:	pop    ecx
  425344:	mov    edi,DWORD PTR [ebp-0x38]
  425347:	shl    ecx,0x6
  42534a:	sub    eax,eax
  42534c:	inc    eax
  42534d:	push   0x40
  42534f:	pop    esi
  425350:	lea    edi,[edi+ecx*2+0x360]
  425357:	mov    ebp,edi
  425359:	call   0x42548a
  42535e:	mov    ecx,eax
  425360:	sub    ecx,esi
  425362:	jb     0x425357
  425364:	mov    DWORD PTR [ebp-0x18],ecx
  425367:	mov    DWORD PTR [ebp-0x24],ecx
  42536a:	cmp    ecx,0x4
  42536d:	jb     0x4253e2
  42536f:	mov    esi,ecx
  425371:	and    DWORD PTR [ebp-0x24],0x1
  425375:	shr    esi,1
  425377:	or     DWORD PTR [ebp-0x24],0x2
  42537b:	dec    esi
  42537c:	cmp    ecx,0xe
  42537f:	jae    0x42539a
  425381:	mov    eax,0x2af
  425386:	sub    eax,ecx
  425388:	mov    ecx,esi
  42538a:	shl    BYTE PTR [ebp-0x24],cl
  42538d:	add    eax,DWORD PTR [ebp-0x24]
  425390:	shl    eax,1
  425392:	add    eax,DWORD PTR [ebp-0x38]
  425395:	mov    DWORD PTR [ebp-0x34],eax
  425398:	jmp    0x4253c7
  42539a:	sub    esi,0x4
  42539d:	call   0x425447
  4253a2:	shr    ebx,1
  4253a4:	shl    DWORD PTR [ebp-0x24],1
  4253a7:	cmp    DWORD PTR [ebp-0x20],ebx
  4253aa:	jb     0x4253b2
  4253ac:	inc    DWORD PTR [ebp-0x24]
  4253af:	sub    DWORD PTR [ebp-0x20],ebx
  4253b2:	dec    esi
  4253b3:	jne    0x42539d
  4253b5:	mov    eax,0x644
  4253ba:	add    eax,DWORD PTR [ebp-0x38]
  4253bd:	mov    DWORD PTR [ebp-0x34],eax
  4253c0:	shl    DWORD PTR [ebp-0x24],0x4
  4253c4:	push   0x4
  4253c6:	pop    esi
  4253c7:	sub    edi,edi
  4253c9:	inc    edi
  4253ca:	mov    eax,edi
  4253cc:	mov    ebp,DWORD PTR [ebp-0x34]
  4253cf:	call   0x42548a
  4253d4:	test   al,0x1
  4253d6:	je     0x4253db
  4253d8:	or     DWORD PTR [ebp-0x24],edi
  4253db:	shl    edi,1
  4253dd:	dec    esi
  4253de:	jne    0x4253cc
  4253e0:	jmp    0x4253e2
  4253e2:	inc    DWORD PTR [ebp-0x24]
  4253e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253e8:	add    ecx,0x2
  4253eb:	mov    edi,DWORD PTR [ebp-0x4]
  4253ee:	mov    eax,edi
  4253f0:	sub    eax,DWORD PTR [ebp+0x24]
  4253f3:	cmp    DWORD PTR [ebp-0x24],eax
  4253f6:	ja     0x425442
  4253f8:	mov    esi,edi
  4253fa:	sub    esi,DWORD PTR [ebp-0x24]
  4253fd:	mov    edx,DWORD PTR [ebp+0x28]
  425400:	lods   al,BYTE PTR ds:[esi]
  425401:	stos   BYTE PTR es:[edi],al
  425402:	cmp    edi,edx
  425404:	jae    0x425409
  425406:	dec    ecx
  425407:	jne    0x425400
  425409:	mov    DWORD PTR [ebp-0x4],edi
  42540c:	movzx  esi,al
  42540f:	cmp    edi,DWORD PTR [ebp+0x28]
  425412:	jb     0x425173
  425418:	call   0x425447
  42541d:	sub    eax,eax
  42541f:	lea    ebp,[esp+0x3c]
  425423:	mov    edx,DWORD PTR [ebp+0x20]
  425426:	mov    esi,DWORD PTR [ebp-0x8]
  425429:	sub    esi,DWORD PTR [ebp+0x18]
  42542c:	mov    DWORD PTR [edx],esi
  42542e:	mov    edx,DWORD PTR [ebp+0x2c]
  425431:	mov    edi,DWORD PTR [ebp-0x4]
  425434:	sub    edi,DWORD PTR [ebp+0x24]
  425437:	mov    DWORD PTR [edx],edi
  425439:	leave  
  42543a:	pop    ebx
  42543b:	pop    esi
  42543c:	pop    edi
  42543d:	ret    0x1c
  425440:	pop    esi
  425441:	pop    eax
  425442:	sub    eax,eax
  425444:	inc    eax
  425445:	jmp    0x42541f
  425447:	cmp    ebx,0x1000000
  42544d:	jb     0x425450
  42544f:	ret    
  425450:	shl    ebx,0x8
  425453:	push   esi
  425454:	mov    esi,DWORD PTR [ebp-0x8]
  425457:	cmp    esi,DWORD PTR [ebp+0x1c]
  42545a:	jae    0x425440
  42545c:	mov    eax,DWORD PTR [ebp-0x20]
  42545f:	shl    eax,0x8
  425462:	lods   al,BYTE PTR ds:[esi]
  425463:	mov    DWORD PTR [ebp-0x20],eax
  425466:	mov    DWORD PTR [ebp-0x8],esi
  425469:	pop    esi
  42546a:	ret    
  42546b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42546e:	movzx  eax,al
  425471:	shl    ecx,0x4
  425474:	add    eax,DWORD PTR [ebp-0x18]
  425477:	add    eax,ecx
  425479:	jmp    0x425481
  42547b:	movzx  eax,al
  42547e:	add    eax,DWORD PTR [ebp-0x3c]
  425481:	mov    ebp,DWORD PTR [ebp-0x38]
  425484:	lea    ebp,[ebp+eax*2+0x0]
  425488:	sub    eax,eax
  42548a:	lea    ebp,[ebp+eax*2+0x0]
  42548e:	cmp    ebx,0x1000000
  425494:	jae    0x4254b2
  425496:	mov    ecx,DWORD PTR [esp+0x38]
  42549a:	shl    DWORD PTR [esp+0x20],0x8
  42549f:	cmp    ecx,DWORD PTR [esp+0x5c]
  4254a3:	jae    0x425441
  4254a5:	mov    dl,BYTE PTR [ecx]
  4254a7:	inc    DWORD PTR [esp+0x38]
  4254ab:	shl    ebx,0x8
  4254ae:	mov    BYTE PTR [esp+0x20],dl
  4254b2:	mov    ecx,ebx
  4254b4:	movzx  edx,WORD PTR [ebp+0x0]
  4254b8:	shr    ecx,0xb
  4254bb:	imul   ecx,edx
  4254be:	cmp    DWORD PTR [esp+0x20],ecx
  4254c2:	jae    0x4254db
  4254c4:	mov    ebx,ecx
  4254c6:	mov    ecx,0x800
  4254cb:	sub    ecx,edx
  4254cd:	shr    ecx,0x5
  4254d0:	add    WORD PTR [ebp+0x0],cx
  4254d4:	add    eax,eax
  4254d6:	lea    ebp,[esp+0x40]
  4254da:	ret    
  4254db:	shr    edx,0x5
  4254de:	sub    DWORD PTR [esp+0x20],ecx
  4254e2:	sub    ebx,ecx
  4254e4:	sub    WORD PTR [ebp+0x0],dx
  4254e8:	add    eax,eax
  4254ea:	add    eax,0x1
  4254ed:	lea    ebp,[esp+0x40]
  4254f1:	ret    
  4254f2:	push   ebp
  4254f3:	mov    ebp,esp
  4254f5:	sub    esp,0x104
  4254fb:	push   ebx
  4254fc:	push   esi
  4254fd:	push   edi
  4254fe:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  425505:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  42550c:	mov    eax,DWORD PTR [ebp+0x8]
  42550f:	mov    DWORD PTR [ebp+0x8],eax
  425512:	mov    ecx,DWORD PTR [ebp-0x14]
  425515:	mov    ebx,0x7510899
  42551a:	xor    ecx,ebx
  42551c:	mov    eax,0x3272e0
  425521:	add    ecx,eax
  425523:	mov    DWORD PTR [ebp-0x28],ecx
  425526:	mov    ecx,DWORD PTR [ebp-0x14]
  425529:	xor    ecx,ebx
  42552b:	add    ecx,eax
  42552d:	mov    DWORD PTR [ebp-0x40],ecx
  425530:	mov    ecx,DWORD PTR [ebp-0x14]
  425533:	xor    ecx,ebx
  425535:	add    ecx,eax
  425537:	mov    DWORD PTR [ebp-0x3c],ecx
  42553a:	mov    ecx,DWORD PTR [ebp-0x14]
  42553d:	xor    ecx,ebx
  42553f:	add    ecx,eax
  425541:	mov    DWORD PTR [ebp-0xa0],ecx
  425547:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  42554e:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  425555:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  42555c:	push   0x24
  42555e:	pop    ecx
  42555f:	mov    DWORD PTR [ebp-0x2c],ecx
  425562:	mov    DWORD PTR [ebp-0x2c],ecx
  425565:	push   0x64
  425567:	pop    ecx
  425568:	mov    DWORD PTR [ebp-0x2c],ecx
  42556b:	mov    DWORD PTR [ebp-0x2c],ecx
  42556e:	mov    DWORD PTR [ebp-0x2c],0x4c
  425575:	mov    DWORD PTR [ebp-0x2c],0x42
  42557c:	mov    ecx,DWORD PTR [ebp-0x14]
  42557f:	xor    ecx,ebx
  425581:	add    ecx,eax
  425583:	mov    DWORD PTR [ebp-0x2c],ecx
  425586:	mov    ecx,DWORD PTR [ebp-0x14]
  425589:	xor    ecx,ebx
  42558b:	add    ecx,eax
  42558d:	mov    DWORD PTR [ebp-0x2c],ecx
  425590:	mov    DWORD PTR [ebp-0x24],0x256
  425597:	mov    DWORD PTR [ebp-0x34],0x34
  42559e:	mov    DWORD PTR [ebp-0x10],0x78
  4255a5:	lea    edi,[ebp-0xe4]
  4255ab:	lea    esi,[ebp-0x104]
  4255b1:	call   0x4261cb
  4255b6:	dec    DWORD PTR [ebp-0x10]
  4255b9:	jne    0x4255a5
  4255bb:	dec    DWORD PTR [ebp-0x34]
  4255be:	jne    0x42559e
  4255c0:	dec    DWORD PTR [ebp-0x24]
  4255c3:	jne    0x425597
  4255c5:	mov    DWORD PTR [ebp-0x24],0x400c
  4255cc:	mov    eax,DWORD PTR [ebp-0x14]
  4255cf:	xor    eax,ebx
  4255d1:	mov    esi,0x3272e0
  4255d6:	add    eax,esi
  4255d8:	mov    DWORD PTR [ebp-0x8],eax
  4255db:	mov    eax,DWORD PTR [ebp-0x14]
  4255de:	and    DWORD PTR [ebp-0x94],0x0
  4255e5:	xor    eax,ebx
  4255e7:	add    eax,esi
  4255e9:	mov    DWORD PTR [ebp-0x38],eax
  4255ec:	mov    eax,fs:0x18
  4255f2:	mov    DWORD PTR [ebp-0x94],eax
  4255f8:	mov    eax,DWORD PTR [eax+0x30]
  4255fb:	mov    DWORD PTR [ebp-0x98],eax
  425601:	mov    eax,DWORD PTR [eax+0xc]
  425604:	mov    DWORD PTR [ebp-0xc0],eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	lea    ecx,[ebp-0x94]
  425613:	mov    DWORD PTR [eax+0x1a0],ecx
  425619:	mov    eax,DWORD PTR [ebp+0x8]
  42561c:	lea    ecx,[ebp-0x98]
  425622:	mov    DWORD PTR [eax+0x1a4],ecx
  425628:	mov    eax,DWORD PTR [ebp+0x8]
  42562b:	push   DWORD PTR [ebp+0x8]
  42562e:	lea    ecx,[ebp-0xc0]
  425634:	mov    DWORD PTR [eax+0x1a8],ecx
  42563a:	call   0x427989
  42563f:	mov    ecx,DWORD PTR [ebp-0x14]
  425642:	xor    ecx,ebx
  425644:	add    ecx,esi
  425646:	cmp    ecx,eax
  425648:	je     0x425925
  42564e:	mov    eax,DWORD PTR [ebp+0x8]
  425651:	mov    eax,DWORD PTR [eax+0x194]
  425657:	mov    ecx,DWORD PTR [eax]
  425659:	mov    eax,DWORD PTR [ebp+0x8]
  42565c:	mov    eax,DWORD PTR [eax+0x194]
  425662:	mov    eax,DWORD PTR [eax]
  425664:	add    eax,DWORD PTR [ecx+0x3c]
  425667:	mov    ecx,DWORD PTR [ebp+0x8]
  42566a:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425670:	lea    edx,[ebp-0xc4]
  425676:	push   edx
  425677:	mov    edx,DWORD PTR [ebp+0x8]
  42567a:	mov    edx,DWORD PTR [edx+0x18c]
  425680:	mov    edx,DWORD PTR [edx]
  425682:	add    edx,DWORD PTR [eax+0x88]
  425688:	push   0x4
  42568a:	push   DWORD PTR [eax+0x8c]
  425690:	push   edx
  425691:	call   DWORD PTR [ecx+0x1c]
  425694:	push   DWORD PTR [ebp+0x8]
  425697:	mov    edi,DWORD PTR [ebp+0x8]
  42569a:	mov    eax,DWORD PTR [ebp+0x8]
  42569d:	mov    edx,DWORD PTR [eax+0x1b8]
  4256a3:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  4256aa:	mov    DWORD PTR [ebp-0x64],0x10a051f
  4256b1:	mov    WORD PTR [ebp-0x60],0x7a39
  4256b7:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  4256c1:	mov    DWORD PTR [ebp-0x8c],0x6390819
  4256cb:	mov    DWORD PTR [ebp-0x88],0x2419020a
  4256d5:	mov    DWORD PTR [ebp-0x84],0x81d050d
  4256df:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  4256e6:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  4256ed:	mov    DWORD PTR [ebp-0x78],0x6390819
  4256f4:	mov    DWORD PTR [ebp-0x74],0x2419020a
  4256fb:	mov    DWORD PTR [ebp-0x70],0x81d050d
  425702:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  425709:	call   0x4279b8
  42570e:	push   eax
  42570f:	mov    eax,DWORD PTR [ebp+0x8]
  425712:	mov    eax,DWORD PTR [eax+0x1a8]
  425718:	push   DWORD PTR [eax]
  42571a:	call   0x42765a
  42571f:	test   eax,eax
  425721:	jne    0x425773
  425723:	mov    eax,DWORD PTR [ebp+0x8]
  425726:	mov    eax,DWORD PTR [eax+0x1d8]
  42572c:	mov    edi,DWORD PTR [ebp+0x8]
  42572f:	add    eax,0x4
  425732:	mov    DWORD PTR [ebp-0x20],eax
  425735:	mov    eax,DWORD PTR [ebp+0x8]
  425738:	mov    edx,DWORD PTR [eax+0x1b8]
  42573e:	call   0x4279b8
  425743:	push   eax
  425744:	mov    eax,DWORD PTR [ebp-0x20]
  425747:	call   DWORD PTR [eax]
  425749:	test   eax,eax
  42574b:	jne    0x425773
  42574d:	mov    eax,DWORD PTR [ebp+0x8]
  425750:	mov    eax,DWORD PTR [eax+0x1d8]
  425756:	mov    edi,DWORD PTR [ebp+0x8]
  425759:	add    eax,0x10
  42575c:	mov    DWORD PTR [ebp-0x20],eax
  42575f:	mov    eax,DWORD PTR [ebp+0x8]
  425762:	mov    edx,DWORD PTR [eax+0x1b8]
  425768:	call   0x4279b8
  42576d:	push   eax
  42576e:	mov    eax,DWORD PTR [ebp-0x20]
  425771:	call   DWORD PTR [eax]
  425773:	mov    eax,DWORD PTR [ebp-0x14]
  425776:	mov    ecx,DWORD PTR [ebp-0x24]
  425779:	xor    eax,ebx
  42577b:	add    eax,esi
  42577d:	cmp    eax,ecx
  42577f:	je     0x4258fe
  425785:	mov    eax,DWORD PTR [ebp-0x18]
  425788:	xor    eax,ebx
  42578a:	mov    ecx,0xffcd8d20
  42578f:	sub    ecx,eax
  425791:	add    ecx,DWORD PTR [ebp-0x24]
  425794:	mov    eax,DWORD PTR [ebp-0x8]
  425797:	cmp    eax,ecx
  425799:	ja     0x4258fe
  42579f:	mov    DWORD PTR [ebp-0x34],0x0
  4257a6:	push   DWORD PTR [ebp+0x8]
  4257a9:	mov    edi,DWORD PTR [ebp+0x8]
  4257ac:	mov    eax,DWORD PTR [ebp+0x8]
  4257af:	mov    edx,DWORD PTR [eax+0x1b4]
  4257b5:	call   0x4279b8
  4257ba:	push   eax
  4257bb:	mov    eax,DWORD PTR [ebp+0x8]
  4257be:	mov    eax,DWORD PTR [eax+0x1a8]
  4257c4:	push   DWORD PTR [eax]
  4257c6:	call   0x42765a
  4257cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4257ce:	mov    ecx,DWORD PTR [ecx+0x19c]
  4257d4:	mov    DWORD PTR [ecx],eax
  4257d6:	mov    eax,DWORD PTR [ebp+0x8]
  4257d9:	mov    edi,DWORD PTR [eax+0x1d8]
  4257df:	mov    esi,DWORD PTR [ebp+0x8]
  4257e2:	xor    eax,eax
  4257e4:	lea    edx,[ebp-0x7c]
  4257e7:	call   0x4279ee
  4257ec:	push   eax
  4257ed:	mov    eax,DWORD PTR [ebp+0x8]
  4257f0:	mov    eax,DWORD PTR [eax+0x19c]
  4257f6:	push   DWORD PTR [eax]
  4257f8:	call   DWORD PTR [edi+0x8]
  4257fb:	mov    DWORD PTR [ebp-0x20],eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x8]
  425801:	mov    edi,DWORD PTR [eax+0x1d8]
  425807:	mov    esi,DWORD PTR [ebp+0x8]
  42580a:	xor    eax,eax
  42580c:	lea    edx,[ebp-0x90]
  425812:	call   0x4279ee
  425817:	push   eax
  425818:	mov    eax,DWORD PTR [ebp+0x8]
  42581b:	mov    eax,DWORD PTR [eax+0x19c]
  425821:	push   DWORD PTR [eax]
  425823:	call   DWORD PTR [edi+0x8]
  425826:	and    DWORD PTR [ebp-0x1c],0x0
  42582a:	mov    eax,DWORD PTR [ebp-0x1c]
  42582d:	and    eax,0x7
  425830:	add    eax,0x31
  425833:	push   eax
  425834:	call   DWORD PTR [ebp-0x20]
  425837:	test   eax,eax
  425839:	jne    0x425840
  42583b:	and    DWORD PTR [ebp-0x10],eax
  42583e:	jmp    0x425868
  425840:	mov    eax,DWORD PTR [ebp+0x8]
  425843:	mov    edi,DWORD PTR [eax+0x1d8]
  425849:	mov    esi,DWORD PTR [ebp+0x8]
  42584c:	xor    eax,eax
  42584e:	lea    edx,[ebp-0x68]
  425851:	call   0x4279ee
  425856:	push   eax
  425857:	mov    eax,DWORD PTR [ebp+0x8]
  42585a:	mov    eax,DWORD PTR [eax+0x198]
  425860:	push   DWORD PTR [eax]
  425862:	call   DWORD PTR [edi+0x8]
  425865:	mov    DWORD PTR [ebp-0x10],eax
  425868:	inc    DWORD PTR [ebp-0x1c]
  42586b:	cmp    DWORD PTR [ebp-0x1c],0x10
  42586f:	jb     0x42582a
  425871:	mov    eax,DWORD PTR [ebp-0x18]
  425874:	mov    esi,DWORD PTR [ebp+0x8]
  425877:	xor    eax,ebx
  425879:	mov    edi,0x3272e0
  42587e:	add    eax,edi
  425880:	lea    edx,[ebp-0xe4]
  425886:	call   0x4279ee
  42588b:	push   eax
  42588c:	mov    eax,DWORD PTR [ebp-0x14]
  42588f:	mov    esi,DWORD PTR [ebp+0x8]
  425892:	xor    eax,ebx
  425894:	add    eax,edi
  425896:	lea    edx,[ebp-0x104]
  42589c:	call   0x4279ee
  4258a1:	push   eax
  4258a2:	call   DWORD PTR [ebp-0x10]
  4258a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4258a8:	xor    ecx,ebx
  4258aa:	add    ecx,edi
  4258ac:	cmp    ecx,eax
  4258ae:	jne    0x4258b7
  4258b0:	mov    DWORD PTR [ebp-0x34],0x1
  4258b7:	mov    eax,DWORD PTR [ebp-0x18]
  4258ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4258bd:	xor    eax,ebx
  4258bf:	lea    eax,[eax+ecx*1+0x3272e0]
  4258c6:	mov    DWORD PTR [ebp-0x8],eax
  4258c9:	mov    eax,DWORD PTR [ebp-0x34]
  4258cc:	test   eax,eax
  4258ce:	je     0x4258e2
  4258d0:	mov    eax,DWORD PTR [ebp-0x18]
  4258d3:	mov    ecx,DWORD PTR [ebp-0x38]
  4258d6:	xor    eax,ebx
  4258d8:	lea    eax,[eax+ecx*1+0x3272e0]
  4258df:	mov    DWORD PTR [ebp-0x38],eax
  4258e2:	mov    eax,DWORD PTR [ebp-0x18]
  4258e5:	xor    eax,ebx
  4258e7:	mov    ecx,0xffcd8d20
  4258ec:	sub    ecx,eax
  4258ee:	add    ecx,DWORD PTR [ebp-0x24]
  4258f1:	mov    eax,DWORD PTR [ebp-0x8]
  4258f4:	cmp    eax,ecx
  4258f6:	jbe    0x42579f
  4258fc:	mov    esi,edi
  4258fe:	mov    eax,DWORD PTR [ebp-0x38]
  425901:	mov    ecx,DWORD PTR [ebp-0x8]
  425904:	cmp    ecx,eax
  425906:	jne    0x425919
  425908:	push   DWORD PTR [ebp+0x8]
  42590b:	lea    eax,[ebp-0x40]
  42590e:	push   eax
  42590f:	call   0x428467
  425914:	mov    DWORD PTR [ebp-0x28],eax
  425917:	jmp    0x425925
  425919:	mov    eax,DWORD PTR [ebp-0x28]
  42591c:	mov    ecx,DWORD PTR [ebp-0x18]
  42591f:	xor    ecx,ebx
  425921:	add    ecx,esi
  425923:	xor    DWORD PTR [eax],ecx
  425925:	mov    eax,DWORD PTR [ebp-0x14]
  425928:	mov    ecx,DWORD PTR [ebp-0x28]
  42592b:	xor    eax,ebx
  42592d:	add    eax,esi
  42592f:	cmp    eax,ecx
  425931:	je     0x4260a9
  425937:	mov    eax,DWORD PTR [ebp-0x14]
  42593a:	mov    ecx,DWORD PTR [ebp-0x40]
  42593d:	xor    eax,ebx
  42593f:	add    eax,esi
  425941:	cmp    eax,ecx
  425943:	je     0x4260a9
  425949:	mov    eax,DWORD PTR [ebp-0x14]
  42594c:	xor    eax,ebx
  42594e:	add    eax,esi
  425950:	jmp    0x42596e
  425952:	mov    edi,DWORD PTR [ebp-0x28]
  425955:	mov    cl,al
  425957:	and    cl,0x1f
  42595a:	or     dl,0xff
  42595d:	sub    dl,cl
  42595f:	add    BYTE PTR [edi+eax*1],dl
  425962:	mov    ecx,DWORD PTR [ebp-0x18]
  425965:	xor    ecx,ebx
  425967:	lea    eax,[eax+ecx*1+0x3272e0]
  42596e:	mov    ecx,DWORD PTR [ebp-0x40]
  425971:	cmp    eax,ecx
  425973:	jb     0x425952
  425975:	mov    eax,DWORD PTR [ebp-0x40]
  425978:	mov    DWORD PTR [ebp-0x24],eax
  42597b:	mov    eax,DWORD PTR [ebp-0x28]
  42597e:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425985:	mov    DWORD PTR [ebp-0xbc],eax
  42598b:	mov    edi,0xf89c85b8
  425990:	mov    DWORD PTR [ebp-0x30],edi
  425993:	mov    eax,DWORD PTR [ebp-0x38]
  425996:	xor    eax,ebx
  425998:	add    eax,esi
  42599a:	mov    DWORD PTR [ebp-0xc],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x38]
  4259a0:	xor    eax,ebx
  4259a2:	add    eax,esi
  4259a4:	mov    DWORD PTR [ebp-0x8],eax
  4259a7:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  4259ae:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  4259b5:	mov    eax,DWORD PTR [ebp-0x38]
  4259b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4259bb:	xor    eax,ebx
  4259bd:	add    eax,esi
  4259bf:	cmp    ecx,eax
  4259c1:	je     0x425bc0
  4259c7:	jmp    0x425b9c
  4259cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4259cf:	mov    eax,DWORD PTR [ebp-0x24]
  4259d2:	sub    eax,ecx
  4259d4:	mov    ecx,DWORD PTR [ebp-0x48]
  4259d7:	xor    ecx,ebx
  4259d9:	add    ecx,esi
  4259db:	xor    edx,edx
  4259dd:	div    ecx
  4259df:	mov    DWORD PTR [ebp-0x8],eax
  4259e2:	mov    eax,DWORD PTR [ebp-0x54]
  4259e5:	mov    ecx,DWORD PTR [ebp-0x8]
  4259e8:	xor    eax,ebx
  4259ea:	add    eax,esi
  4259ec:	cmp    ecx,eax
  4259ee:	jbe    0x4259fa
  4259f0:	mov    eax,DWORD PTR [ebp-0x54]
  4259f3:	xor    eax,ebx
  4259f5:	add    eax,esi
  4259f7:	mov    DWORD PTR [ebp-0x8],eax
  4259fa:	mov    eax,DWORD PTR [ebp-0x48]
  4259fd:	mov    ecx,DWORD PTR [ebp-0x8]
  425a00:	xor    eax,ebx
  425a02:	add    eax,esi
  425a04:	imul   eax,ecx
  425a07:	mov    DWORD PTR [ebp-0x8],eax
  425a0a:	mov    eax,DWORD PTR [ebp-0x38]
  425a0d:	mov    ecx,DWORD PTR [ebp-0x8]
  425a10:	xor    eax,ebx
  425a12:	add    eax,esi
  425a14:	cmp    ecx,eax
  425a16:	je     0x425b8a
  425a1c:	mov    eax,DWORD PTR [ebp-0x8]
  425a1f:	mov    DWORD PTR [ebp-0x10],eax
  425a22:	mov    eax,DWORD PTR [ebp-0xc]
  425a25:	add    eax,DWORD PTR [ebp-0xbc]
  425a2b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425a32:	mov    DWORD PTR [ebp-0x34],edi
  425a35:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  425a3f:	mov    DWORD PTR [ebp-0x8],eax
  425a42:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  425a49:	mov    DWORD PTR [ebp-0x1c],edi
  425a4c:	mov    eax,DWORD PTR [ebp-0x20]
  425a4f:	xor    eax,ebx
  425a51:	add    eax,esi
  425a53:	jmp    0x425b49
  425a58:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  425a62:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  425a6c:	mov    eax,DWORD PTR [ebp-0x1c]
  425a6f:	mov    ecx,DWORD PTR [ebp-0x44]
  425a72:	xor    eax,ebx
  425a74:	add    eax,esi
  425a76:	imul   eax,ecx
  425a79:	mov    ecx,DWORD PTR [ebp-0x8]
  425a7c:	mov    al,BYTE PTR [eax+ecx*1]
  425a7f:	mov    BYTE PTR [ebp-0x2],al
  425a82:	mov    eax,DWORD PTR [ebp-0x1c]
  425a85:	mov    ecx,DWORD PTR [ebp-0x44]
  425a88:	xor    eax,ebx
  425a8a:	add    eax,esi
  425a8c:	imul   eax,ecx
  425a8f:	mov    ecx,DWORD PTR [ebp-0xa8]
  425a95:	xor    ecx,ebx
  425a97:	add    eax,ecx
  425a99:	mov    ecx,DWORD PTR [ebp-0x8]
  425a9c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425aa4:	mov    ecx,DWORD PTR [ebp-0xb0]
  425aaa:	xor    ecx,ebx
  425aac:	lea    eax,[ecx+eax*1+0x3272e0]
  425ab3:	movzx  ecx,BYTE PTR [ebp-0x2]
  425ab7:	xor    ecx,eax
  425ab9:	mov    BYTE PTR [ebp-0x2],cl
  425abc:	mov    al,BYTE PTR [ebp-0x2]
  425abf:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ac2:	mov    edx,DWORD PTR [ebp-0x44]
  425ac5:	xor    ecx,ebx
  425ac7:	add    ecx,esi
  425ac9:	imul   ecx,edx
  425acc:	mov    edx,DWORD PTR [ebp-0x8]
  425acf:	mov    BYTE PTR [ecx+edx*1],al
  425ad2:	mov    eax,DWORD PTR [ebp-0x1c]
  425ad5:	mov    ecx,DWORD PTR [ebp-0x44]
  425ad8:	xor    eax,ebx
  425ada:	add    eax,esi
  425adc:	imul   eax,ecx
  425adf:	mov    ecx,DWORD PTR [ebp-0x8]
  425ae2:	mov    al,BYTE PTR [eax+ecx*1]
  425ae5:	mov    BYTE PTR [ebp-0x2],al
  425ae8:	mov    eax,DWORD PTR [ebp-0x1c]
  425aeb:	mov    ecx,DWORD PTR [ebp-0x44]
  425aee:	xor    eax,ebx
  425af0:	add    eax,esi
  425af2:	imul   eax,ecx
  425af5:	mov    ecx,DWORD PTR [ebp-0x34]
  425af8:	xor    ecx,ebx
  425afa:	add    eax,ecx
  425afc:	mov    ecx,DWORD PTR [ebp-0x8]
  425aff:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425b07:	mov    ecx,DWORD PTR [ebp-0xb8]
  425b0d:	xor    ecx,ebx
  425b0f:	lea    eax,[ecx+eax*1+0x3272e0]
  425b16:	movzx  ecx,BYTE PTR [ebp-0x2]
  425b1a:	xor    ecx,eax
  425b1c:	mov    BYTE PTR [ebp-0x2],cl
  425b1f:	mov    al,BYTE PTR [ebp-0x2]
  425b22:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b25:	mov    edx,DWORD PTR [ebp-0x44]
  425b28:	xor    ecx,ebx
  425b2a:	add    ecx,esi
  425b2c:	imul   ecx,edx
  425b2f:	mov    edx,DWORD PTR [ebp-0x8]
  425b32:	mov    BYTE PTR [ecx+edx*1],al
  425b35:	mov    eax,DWORD PTR [ebp-0x2c]
  425b38:	mov    ecx,DWORD PTR [ebp-0x34]
  425b3b:	xor    eax,ebx
  425b3d:	xor    ecx,ebx
  425b3f:	add    eax,esi
  425b41:	add    ecx,esi
  425b43:	imul   eax,ecx
  425b46:	add    eax,DWORD PTR [ebp-0x44]
  425b49:	mov    DWORD PTR [ebp-0x44],eax
  425b4c:	mov    eax,DWORD PTR [ebp-0x44]
  425b4f:	mov    ecx,DWORD PTR [ebp-0x10]
  425b52:	cmp    ecx,eax
  425b54:	jb     0x425a58
  425b5a:	mov    eax,DWORD PTR [ebp-0x34]
  425b5d:	mov    ecx,DWORD PTR [ebp-0x10]
  425b60:	xor    eax,ebx
  425b62:	add    eax,esi
  425b64:	imul   eax,ecx
  425b67:	mov    ecx,DWORD PTR [ebp-0x20]
  425b6a:	xor    ecx,ebx
  425b6c:	add    ecx,esi
  425b6e:	or     eax,ecx
  425b70:	mov    ecx,DWORD PTR [ebp-0x30]
  425b73:	xor    ecx,ebx
  425b75:	add    eax,ecx
  425b77:	mov    ecx,DWORD PTR [ebp-0x30]
  425b7a:	xor    ecx,ebx
  425b7c:	add    eax,ecx
  425b7e:	mov    ecx,DWORD PTR [ebp-0xc]
  425b81:	lea    eax,[eax+ecx*1+0x64e5c0]
  425b88:	jmp    0x425b99
  425b8a:	mov    eax,DWORD PTR [ebp-0x30]
  425b8d:	mov    ecx,DWORD PTR [ebp-0xc]
  425b90:	xor    eax,ebx
  425b92:	lea    eax,[eax+ecx*1+0x3272e0]
  425b99:	mov    DWORD PTR [ebp-0xc],eax
  425b9c:	mov    eax,DWORD PTR [ebp-0x30]
  425b9f:	xor    eax,ebx
  425ba1:	mov    ecx,0xffcd8d20
  425ba6:	sub    ecx,eax
  425ba8:	add    ecx,DWORD PTR [ebp-0x24]
  425bab:	mov    eax,DWORD PTR [ebp-0x30]
  425bae:	mov    edx,DWORD PTR [ebp-0xc]
  425bb1:	xor    eax,ebx
  425bb3:	add    eax,esi
  425bb5:	imul   eax,edx
  425bb8:	cmp    eax,ecx
  425bba:	jbe    0x4259cc
  425bc0:	mov    eax,DWORD PTR [ebp-0x14]
  425bc3:	mov    ecx,DWORD PTR [ebp-0x40]
  425bc6:	mov    eax,DWORD PTR [ebp+0x8]
  425bc9:	mov    edx,DWORD PTR [ebp-0x4c]
  425bcc:	mov    eax,DWORD PTR [eax+0x1d8]
  425bd2:	xor    edx,ebx
  425bd4:	add    edx,esi
  425bd6:	push   edx
  425bd7:	mov    edx,DWORD PTR [ebp-0x3c]
  425bda:	xor    edx,ebx
  425bdc:	add    edx,esi
  425bde:	push   edx
  425bdf:	push   ecx
  425be0:	mov    DWORD PTR [ebp-0x2c],ecx
  425be3:	mov    ecx,DWORD PTR [ebp-0x14]
  425be6:	xor    ecx,ebx
  425be8:	add    ecx,esi
  425bea:	push   ecx
  425beb:	call   DWORD PTR [eax+0x14]
  425bee:	mov    edi,eax
  425bf0:	mov    eax,DWORD PTR [ebp-0x14]
  425bf3:	xor    eax,ebx
  425bf5:	add    eax,esi
  425bf7:	cmp    eax,edi
  425bf9:	je     0x425c54
  425bfb:	mov    eax,DWORD PTR [ebp-0x14]
  425bfe:	jmp    0x425c21
  425c00:	mov    ecx,DWORD PTR [ebp-0x28]
  425c03:	xor    eax,ebx
  425c05:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  425c0c:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  425c13:	mov    ecx,DWORD PTR [ebp-0x18]
  425c16:	xor    ecx,ebx
  425c18:	lea    eax,[ecx+eax*1+0x3272e0]
  425c1f:	xor    eax,ebx
  425c21:	mov    ecx,DWORD PTR [ebp-0x40]
  425c24:	sub    ecx,esi
  425c26:	xor    ecx,ebx
  425c28:	cmp    eax,ecx
  425c2a:	jne    0x425c00
  425c2c:	mov    eax,DWORD PTR [ebp+0x8]
  425c2f:	mov    ecx,DWORD PTR [ebp-0x50]
  425c32:	mov    eax,DWORD PTR [eax+0x1d8]
  425c38:	xor    ecx,ebx
  425c3a:	add    ecx,esi
  425c3c:	push   ecx
  425c3d:	mov    ecx,DWORD PTR [ebp-0x14]
  425c40:	xor    ecx,ebx
  425c42:	add    ecx,esi
  425c44:	push   ecx
  425c45:	push   DWORD PTR [ebp-0x28]
  425c48:	call   DWORD PTR [eax+0x18]
  425c4b:	mov    eax,DWORD PTR [ebp-0x2c]
  425c4e:	mov    DWORD PTR [ebp-0x28],edi
  425c51:	mov    DWORD PTR [ebp-0x40],eax
  425c54:	mov    edi,DWORD PTR [ebp-0x28]
  425c57:	mov    eax,DWORD PTR [ebp-0x18]
  425c5a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c5d:	xor    eax,ebx
  425c5f:	mov    DWORD PTR [ebp-0x2c],edi
  425c62:	add    eax,esi
  425c64:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  425c6b:	mov    DWORD PTR [ebp-0x58],0x27123f12
  425c72:	jmp    0x425ca6
  425c74:	xor    ecx,ebx
  425c76:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  425c7d:	xor    dl,0x73
  425c80:	sub    dl,0x9
  425c83:	mov    DWORD PTR [ebp-0x3c],ecx
  425c86:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  425c8e:	movzx  edx,dl
  425c91:	cmp    ecx,edx
  425c93:	jne    0x425cb0
  425c95:	mov    ecx,DWORD PTR [ebp-0x18]
  425c98:	mov    edx,DWORD PTR [ebp-0x3c]
  425c9b:	xor    ecx,ebx
  425c9d:	lea    ecx,[ecx+edx*1+0x3272e0]
  425ca4:	xor    ecx,ebx
  425ca6:	cmp    ecx,0xf89c85b1
  425cac:	jne    0x425c74
  425cae:	jmp    0x425cb7
  425cb0:	mov    eax,DWORD PTR [ebp-0x14]
  425cb3:	xor    eax,ebx
  425cb5:	add    eax,esi
  425cb7:	mov    ecx,DWORD PTR [ebp-0x14]
  425cba:	xor    ecx,ebx
  425cbc:	add    ecx,esi
  425cbe:	cmp    ecx,eax
  425cc0:	je     0x425e33
  425cc6:	mov    eax,DWORD PTR [edi+0x8]
  425cc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425cd0:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  425cd7:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  425cde:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425ce5:	mov    DWORD PTR [ebp-0x10],eax
  425ce8:	mov    eax,DWORD PTR [ebp+0x8]
  425ceb:	mov    ecx,DWORD PTR [ebp-0x20]
  425cee:	xor    ecx,ebx
  425cf0:	add    ecx,esi
  425cf2:	push   ecx
  425cf3:	mov    ecx,DWORD PTR [ebp-0x48]
  425cf6:	mov    eax,DWORD PTR [eax+0x1d8]
  425cfc:	xor    ecx,ebx
  425cfe:	add    ecx,esi
  425d00:	push   ecx
  425d01:	mov    ecx,DWORD PTR [ebp-0x3c]
  425d04:	xor    ecx,ebx
  425d06:	add    ecx,esi
  425d08:	push   ecx
  425d09:	mov    ecx,DWORD PTR [ebp-0xc]
  425d0c:	xor    ecx,ebx
  425d0e:	add    ecx,esi
  425d10:	push   ecx
  425d11:	call   DWORD PTR [eax+0x14]
  425d14:	mov    edi,eax
  425d16:	mov    eax,DWORD PTR [ebp+0x8]
  425d19:	mov    ecx,DWORD PTR [ebp-0x20]
  425d1c:	mov    eax,DWORD PTR [eax+0x1d8]
  425d22:	xor    ecx,ebx
  425d24:	add    ecx,esi
  425d26:	push   ecx
  425d27:	mov    ecx,DWORD PTR [ebp-0x48]
  425d2a:	xor    ecx,ebx
  425d2c:	add    ecx,esi
  425d2e:	push   ecx
  425d2f:	mov    ecx,DWORD PTR [ebp-0xc]
  425d32:	push   DWORD PTR [ebp-0x10]
  425d35:	xor    ecx,ebx
  425d37:	add    ecx,esi
  425d39:	push   ecx
  425d3a:	call   DWORD PTR [eax+0x14]
  425d3d:	mov    ecx,DWORD PTR [ebp-0xc]
  425d40:	xor    ecx,ebx
  425d42:	add    ecx,esi
  425d44:	mov    DWORD PTR [ebp-0x20],eax
  425d47:	cmp    ecx,edi
  425d49:	je     0x4260d6
  425d4f:	mov    ecx,DWORD PTR [ebp-0xc]
  425d52:	xor    ecx,ebx
  425d54:	add    ecx,esi
  425d56:	cmp    ecx,eax
  425d58:	je     0x4260d6
  425d5e:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  425d65:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  425d6c:	mov    ecx,DWORD PTR [ebp-0x3c]
  425d6f:	xor    cl,0x99
  425d72:	sub    cl,0x20
  425d75:	mov    BYTE PTR [edi],cl
  425d77:	mov    ecx,DWORD PTR [ebp-0xc]
  425d7a:	xor    cl,0x99
  425d7d:	sub    cl,0x20
  425d80:	mov    BYTE PTR [edi+0x1],cl
  425d83:	mov    ecx,DWORD PTR [ebp-0x4c]
  425d86:	xor    cl,0x99
  425d89:	sub    cl,0x20
  425d8c:	mov    BYTE PTR [edi+0x2],cl
  425d8f:	and    DWORD PTR [ebp-0xb4],0x0
  425d96:	and    DWORD PTR [ebp-0xa4],0x0
  425d9d:	lea    ecx,[ebp-0xa4]
  425da3:	push   ecx
  425da4:	push   DWORD PTR [ebp-0x10]
  425da7:	push   eax
  425da8:	lea    eax,[ebp-0xb4]
  425dae:	push   eax
  425daf:	mov    eax,DWORD PTR [ebp-0x2c]
  425db2:	push   DWORD PTR [eax+0xc]
  425db5:	mov    eax,DWORD PTR [ebp-0x28]
  425db8:	add    eax,0x10
  425dbb:	push   eax
  425dbc:	push   edi
  425dbd:	call   0x425109
  425dc2:	mov    DWORD PTR [ebp-0x3c],eax
  425dc5:	mov    eax,DWORD PTR [ebp+0x8]
  425dc8:	mov    ecx,DWORD PTR [ebp-0x50]
  425dcb:	mov    eax,DWORD PTR [eax+0x1d8]
  425dd1:	xor    ecx,ebx
  425dd3:	add    ecx,esi
  425dd5:	push   ecx
  425dd6:	mov    ecx,DWORD PTR [ebp-0xc]
  425dd9:	xor    ecx,ebx
  425ddb:	add    ecx,esi
  425ddd:	push   ecx
  425dde:	push   edi
  425ddf:	call   DWORD PTR [eax+0x18]
  425de2:	mov    eax,DWORD PTR [ebp-0x3c]
  425de5:	add    eax,0xffcd8d20
  425dea:	xor    eax,ebx
  425dec:	cmp    eax,0xf89c85b9
  425df1:	mov    eax,DWORD PTR [ebp+0x8]
  425df4:	mov    eax,DWORD PTR [eax+0x1d8]
  425dfa:	mov    ecx,DWORD PTR [ebp-0x50]
  425dfd:	jne    0x425e20
  425dff:	xor    ecx,ebx
  425e01:	add    ecx,esi
  425e03:	push   ecx
  425e04:	mov    ecx,DWORD PTR [ebp-0xc]
  425e07:	xor    ecx,ebx
  425e09:	add    ecx,esi
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0x28]
  425e0f:	call   DWORD PTR [eax+0x18]
  425e12:	mov    eax,DWORD PTR [ebp-0x20]
  425e15:	mov    DWORD PTR [ebp-0x28],eax
  425e18:	mov    eax,DWORD PTR [ebp-0x10]
  425e1b:	mov    DWORD PTR [ebp-0x40],eax
  425e1e:	jmp    0x425e33
  425e20:	xor    ecx,ebx
  425e22:	add    ecx,esi
  425e24:	push   ecx
  425e25:	mov    ecx,DWORD PTR [ebp-0xc]
  425e28:	xor    ecx,ebx
  425e2a:	add    ecx,esi
  425e2c:	push   ecx
  425e2d:	push   DWORD PTR [ebp-0x20]
  425e30:	call   DWORD PTR [eax+0x18]
  425e33:	mov    eax,DWORD PTR [ebp-0x40]
  425e36:	mov    DWORD PTR [ebp-0x38],eax
  425e39:	mov    eax,DWORD PTR [ebp-0x28]
  425e3c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  425e43:	mov    DWORD PTR [ebp-0x3c],eax
  425e46:	mov    edi,0xf89c85b8
  425e4b:	mov    DWORD PTR [ebp-0x30],edi
  425e4e:	mov    eax,DWORD PTR [ebp-0x24]
  425e51:	xor    eax,ebx
  425e53:	add    eax,esi
  425e55:	mov    DWORD PTR [ebp-0xc],eax
  425e58:	mov    eax,DWORD PTR [ebp-0x24]
  425e5b:	xor    eax,ebx
  425e5d:	add    eax,esi
  425e5f:	mov    DWORD PTR [ebp-0x10],eax
  425e62:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  425e69:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  425e70:	mov    eax,DWORD PTR [ebp-0x24]
  425e73:	mov    ecx,DWORD PTR [ebp-0x38]
  425e76:	xor    eax,ebx
  425e78:	add    eax,esi
  425e7a:	cmp    ecx,eax
  425e7c:	je     0x426072
  425e82:	jmp    0x42604e
  425e87:	mov    ecx,DWORD PTR [ebp-0xc]
  425e8a:	mov    eax,DWORD PTR [ebp-0x38]
  425e8d:	sub    eax,ecx
  425e8f:	mov    ecx,DWORD PTR [ebp-0x48]
  425e92:	xor    ecx,ebx
  425e94:	add    ecx,esi
  425e96:	xor    edx,edx
  425e98:	div    ecx
  425e9a:	mov    DWORD PTR [ebp-0x10],eax
  425e9d:	mov    eax,DWORD PTR [ebp-0x20]
  425ea0:	mov    ecx,DWORD PTR [ebp-0x10]
  425ea3:	xor    eax,ebx
  425ea5:	add    eax,esi
  425ea7:	cmp    ecx,eax
  425ea9:	jbe    0x425eb5
  425eab:	mov    eax,DWORD PTR [ebp-0x20]
  425eae:	xor    eax,ebx
  425eb0:	add    eax,esi
  425eb2:	mov    DWORD PTR [ebp-0x10],eax
  425eb5:	mov    eax,DWORD PTR [ebp-0x48]
  425eb8:	mov    ecx,DWORD PTR [ebp-0x10]
  425ebb:	xor    eax,ebx
  425ebd:	add    eax,esi
  425ebf:	imul   eax,ecx
  425ec2:	mov    DWORD PTR [ebp-0x10],eax
  425ec5:	mov    eax,DWORD PTR [ebp-0x24]
  425ec8:	mov    ecx,DWORD PTR [ebp-0x10]
  425ecb:	xor    eax,ebx
  425ecd:	add    eax,esi
  425ecf:	cmp    ecx,eax
  425ed1:	je     0x42603c
  425ed7:	mov    eax,DWORD PTR [ebp-0x10]
  425eda:	mov    DWORD PTR [ebp-0x34],eax
  425edd:	mov    eax,DWORD PTR [ebp-0xc]
  425ee0:	add    eax,DWORD PTR [ebp-0x3c]
  425ee3:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425eea:	mov    DWORD PTR [ebp-0x10],edi
  425eed:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  425ef4:	mov    DWORD PTR [ebp-0x1c],eax
  425ef7:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  425efe:	mov    DWORD PTR [ebp-0x8],edi
  425f01:	mov    eax,DWORD PTR [ebp-0x54]
  425f04:	xor    eax,ebx
  425f06:	add    eax,esi
  425f08:	jmp    0x425ffb
  425f0d:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  425f17:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  425f21:	mov    eax,DWORD PTR [ebp-0x8]
  425f24:	mov    ecx,DWORD PTR [ebp-0x18]
  425f27:	xor    eax,ebx
  425f29:	add    eax,esi
  425f2b:	imul   eax,ecx
  425f2e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f31:	mov    al,BYTE PTR [eax+ecx*1]
  425f34:	mov    BYTE PTR [ebp-0x1],al
  425f37:	mov    eax,DWORD PTR [ebp-0x8]
  425f3a:	mov    ecx,DWORD PTR [ebp-0x18]
  425f3d:	xor    eax,ebx
  425f3f:	add    eax,esi
  425f41:	imul   eax,ecx
  425f44:	mov    ecx,DWORD PTR [ebp-0x4c]
  425f47:	xor    ecx,ebx
  425f49:	add    eax,ecx
  425f4b:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f4e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425f56:	mov    ecx,DWORD PTR [ebp-0xac]
  425f5c:	xor    ecx,ebx
  425f5e:	lea    eax,[ecx+eax*1+0x3272e0]
  425f65:	movzx  ecx,BYTE PTR [ebp-0x1]
  425f69:	xor    ecx,eax
  425f6b:	mov    BYTE PTR [ebp-0x1],cl
  425f6e:	mov    al,BYTE PTR [ebp-0x1]
  425f71:	mov    ecx,DWORD PTR [ebp-0x8]
  425f74:	mov    edx,DWORD PTR [ebp-0x18]
  425f77:	xor    ecx,ebx
  425f79:	add    ecx,esi
  425f7b:	imul   ecx,edx
  425f7e:	mov    edx,DWORD PTR [ebp-0x1c]
  425f81:	mov    BYTE PTR [ecx+edx*1],al
  425f84:	mov    eax,DWORD PTR [ebp-0x8]
  425f87:	mov    ecx,DWORD PTR [ebp-0x18]
  425f8a:	xor    eax,ebx
  425f8c:	add    eax,esi
  425f8e:	imul   eax,ecx
  425f91:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f94:	mov    al,BYTE PTR [eax+ecx*1]
  425f97:	mov    BYTE PTR [ebp-0x1],al
  425f9a:	mov    eax,DWORD PTR [ebp-0x8]
  425f9d:	mov    ecx,DWORD PTR [ebp-0x18]
  425fa0:	xor    eax,ebx
  425fa2:	add    eax,esi
  425fa4:	imul   eax,ecx
  425fa7:	mov    ecx,DWORD PTR [ebp-0x10]
  425faa:	xor    ecx,ebx
  425fac:	add    eax,ecx
  425fae:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fb1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425fb9:	mov    ecx,DWORD PTR [ebp-0x9c]
  425fbf:	xor    ecx,ebx
  425fc1:	lea    eax,[ecx+eax*1+0x3272e0]
  425fc8:	movzx  ecx,BYTE PTR [ebp-0x1]
  425fcc:	xor    ecx,eax
  425fce:	mov    BYTE PTR [ebp-0x1],cl
  425fd1:	mov    al,BYTE PTR [ebp-0x1]
  425fd4:	mov    ecx,DWORD PTR [ebp-0x8]
  425fd7:	mov    edx,DWORD PTR [ebp-0x18]
  425fda:	xor    ecx,ebx
  425fdc:	add    ecx,esi
  425fde:	imul   ecx,edx
  425fe1:	mov    edx,DWORD PTR [ebp-0x1c]
  425fe4:	mov    BYTE PTR [ecx+edx*1],al
  425fe7:	mov    eax,DWORD PTR [ebp-0x2c]
  425fea:	mov    ecx,DWORD PTR [ebp-0x10]
  425fed:	xor    eax,ebx
  425fef:	xor    ecx,ebx
  425ff1:	add    eax,esi
  425ff3:	add    ecx,esi
  425ff5:	imul   eax,ecx
  425ff8:	add    eax,DWORD PTR [ebp-0x18]
  425ffb:	mov    DWORD PTR [ebp-0x18],eax
  425ffe:	mov    eax,DWORD PTR [ebp-0x18]
  426001:	mov    ecx,DWORD PTR [ebp-0x34]
  426004:	cmp    ecx,eax
  426006:	jb     0x425f0d
  42600c:	mov    eax,DWORD PTR [ebp-0x10]
  42600f:	mov    ecx,DWORD PTR [ebp-0x34]
  426012:	xor    eax,ebx
  426014:	add    eax,esi
  426016:	imul   eax,ecx
  426019:	mov    ecx,DWORD PTR [ebp-0x54]
  42601c:	xor    ecx,ebx
  42601e:	add    ecx,esi
  426020:	or     eax,ecx
  426022:	mov    ecx,DWORD PTR [ebp-0x30]
  426025:	xor    ecx,ebx
  426027:	add    eax,ecx
  426029:	mov    ecx,DWORD PTR [ebp-0x30]
  42602c:	xor    ecx,ebx
  42602e:	add    eax,ecx
  426030:	mov    ecx,DWORD PTR [ebp-0xc]
  426033:	lea    eax,[eax+ecx*1+0x64e5c0]
  42603a:	jmp    0x42604b
  42603c:	mov    eax,DWORD PTR [ebp-0x30]
  42603f:	mov    ecx,DWORD PTR [ebp-0xc]
  426042:	xor    eax,ebx
  426044:	lea    eax,[eax+ecx*1+0x3272e0]
  42604b:	mov    DWORD PTR [ebp-0xc],eax
  42604e:	mov    eax,DWORD PTR [ebp-0x30]
  426051:	xor    eax,ebx
  426053:	mov    ecx,0xffcd8d20
  426058:	sub    ecx,eax
  42605a:	add    ecx,DWORD PTR [ebp-0x38]
  42605d:	mov    eax,DWORD PTR [ebp-0x30]
  426060:	mov    edx,DWORD PTR [ebp-0xc]
  426063:	xor    eax,ebx
  426065:	add    eax,esi
  426067:	imul   eax,edx
  42606a:	cmp    eax,ecx
  42606c:	jbe    0x425e87
  426072:	push   DWORD PTR [ebp+0x8]
  426075:	mov    eax,DWORD PTR [ebp+0x8]
  426078:	push   DWORD PTR [eax+0x1cc]
  42607e:	lea    eax,[ebp-0xa0]
  426084:	push   eax
  426085:	mov    eax,DWORD PTR [ebp+0x8]
  426088:	mov    eax,DWORD PTR [eax+0x1c4]
  42608e:	push   DWORD PTR [eax]
  426090:	mov    eax,DWORD PTR [ebp+0x8]
  426093:	mov    eax,DWORD PTR [eax+0x1c0]
  426099:	push   DWORD PTR [eax]
  42609b:	push   DWORD PTR [ebp-0x40]
  42609e:	push   DWORD PTR [ebp-0x28]
  4260a1:	call   0x426b77
  4260a6:	mov    DWORD PTR [ebp-0x3c],eax
  4260a9:	mov    eax,DWORD PTR [ebp-0x14]
  4260ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4260af:	xor    eax,ebx
  4260b1:	add    eax,esi
  4260b3:	cmp    eax,ecx
  4260b5:	je     0x4260d6
  4260b7:	mov    eax,DWORD PTR [ebp+0x8]
  4260ba:	mov    ecx,DWORD PTR [ebp-0x50]
  4260bd:	mov    eax,DWORD PTR [eax+0x1d8]
  4260c3:	xor    ecx,ebx
  4260c5:	add    ecx,esi
  4260c7:	push   ecx
  4260c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4260cb:	xor    ecx,ebx
  4260cd:	add    ecx,esi
  4260cf:	push   ecx
  4260d0:	push   DWORD PTR [ebp-0x28]
  4260d3:	call   DWORD PTR [eax+0x18]
  4260d6:	pop    edi
  4260d7:	pop    esi
  4260d8:	pop    ebx
  4260d9:	leave  
  4260da:	ret    0x4
  4260dd:	push   ebp
  4260de:	mov    ebp,esp
  4260e0:	push   ecx
  4260e1:	push   ecx
  4260e2:	lea    eax,[ebp-0x8]
  4260e5:	mov    DWORD PTR [ebp-0x4],eax
  4260e8:	push   esi
  4260e9:	mov    esi,DWORD PTR [ebp-0x4]
  4260ec:	mov    eax,0xf881ba0f
  4260f1:	mov    DWORD PTR [esi],eax
  4260f3:	mov    esi,DWORD PTR [ebp-0x8]
  4260f6:	cmp    esi,eax
  4260f8:	pop    esi
  4260f9:	jne    0x426103
  4260fb:	mov    BYTE PTR [ecx+0xa],0x7a
  4260ff:	mov    BYTE PTR [edx+0x8],0x2f
  426103:	mov    BYTE PTR [edx+0xa],0x7a
  426107:	mov    BYTE PTR [ecx+0x2],0x4
  42610b:	leave  
  42610c:	ret    
  42610d:	push   ebp
  42610e:	mov    ebp,esp
  426110:	push   ecx
  426111:	push   ecx
  426112:	lea    eax,[ebp-0x8]
  426115:	mov    DWORD PTR [ebp-0x4],eax
  426118:	mov    edx,DWORD PTR [ebp-0x4]
  42611b:	mov    eax,0xf88b0be3
  426120:	mov    DWORD PTR [edx],eax
  426122:	mov    edx,DWORD PTR [ebp-0x8]
  426125:	cmp    edx,eax
  426127:	jne    0x426138
  426129:	mov    eax,DWORD PTR [ebp+0x8]
  42612c:	mov    BYTE PTR [ecx+0x9],0xe
  426130:	mov    BYTE PTR [eax+0x7],0x47
  426134:	mov    BYTE PTR [ecx+0x6],0xf
  426138:	mov    BYTE PTR [ecx+0x3],0x1e
  42613c:	leave  
  42613d:	ret    0x4
  426140:	push   ebp
  426141:	mov    ebp,esp
  426143:	push   ecx
  426144:	push   ecx
  426145:	lea    eax,[ebp-0x8]
  426148:	mov    DWORD PTR [ebp-0x4],eax
  42614b:	mov    edx,DWORD PTR [ebp-0x4]
  42614e:	mov    eax,0x7e0da0f
  426153:	mov    DWORD PTR [edx],eax
  426155:	mov    edx,DWORD PTR [ebp-0x8]
  426158:	cmp    edx,eax
  42615a:	jne    0x426160
  42615c:	mov    BYTE PTR [ecx+0x7],0x47
  426160:	mov    eax,DWORD PTR [ebp+0x8]
  426163:	mov    BYTE PTR [ecx+0x1],0x1
  426167:	mov    BYTE PTR [eax+0x9],0x2e
  42616b:	leave  
  42616c:	ret    0x4
  42616f:	push   ebp
  426170:	mov    ebp,esp
  426172:	push   ecx
  426173:	push   ecx
  426174:	lea    eax,[ebp-0x8]
  426177:	mov    DWORD PTR [ebp-0x4],eax
  42617a:	push   esi
  42617b:	mov    esi,DWORD PTR [ebp-0x4]
  42617e:	mov    eax,0x7060e3e
  426183:	mov    DWORD PTR [esi],eax
  426185:	mov    esi,DWORD PTR [ebp-0x8]
  426188:	cmp    esi,eax
  42618a:	pop    esi
  42618b:	jne    0x426197
  42618d:	mov    BYTE PTR [edx+0x4],0xb
  426191:	mov    WORD PTR [ecx+0x3],0xb1e
  426197:	mov    BYTE PTR [edx],0x3f
  42619a:	leave  
  42619b:	ret    
  42619c:	push   ebp
  42619d:	mov    ebp,esp
  42619f:	push   ecx
  4261a0:	push   ecx
  4261a1:	lea    eax,[ebp-0x8]
  4261a4:	mov    DWORD PTR [ebp-0x4],eax
  4261a7:	mov    edx,DWORD PTR [ebp-0x4]
  4261aa:	mov    eax,0xf8870b3f
  4261af:	mov    DWORD PTR [edx],eax
  4261b1:	mov    edx,DWORD PTR [ebp-0x8]
  4261b4:	cmp    edx,eax
  4261b6:	jne    0x4261c3
  4261b8:	mov    eax,DWORD PTR [ebp+0x8]
  4261bb:	mov    BYTE PTR [ecx+0x8],0xf
  4261bf:	mov    BYTE PTR [eax+0x1],0x1
  4261c3:	mov    BYTE PTR [ecx+0x5],0xf3
  4261c7:	leave  
  4261c8:	ret    0x4
  4261cb:	push   esi
  4261cc:	mov    ecx,edi
  4261ce:	call   0x42619c
  4261d3:	mov    edx,edi
  4261d5:	mov    ecx,esi
  4261d7:	mov    BYTE PTR [esi],0x1f
  4261da:	call   0x42616f
  4261df:	push   esi
  4261e0:	mov    ecx,edi
  4261e2:	mov    BYTE PTR [esi+0x5],0xf3
  4261e6:	call   0x426140
  4261eb:	push   esi
  4261ec:	mov    BYTE PTR [esi+0x6],0xf
  4261f0:	call   0x42610d
  4261f5:	mov    BYTE PTR [esi+0x2],0x4
  4261f9:	mov    edx,esi
  4261fb:	jmp    0x4260dd
  426200:	push   ebp
  426201:	mov    ebp,esp
  426203:	push   ecx
  426204:	mov    ecx,DWORD PTR [edx+0x194]
  42620a:	push   esi
  42620b:	mov    esi,DWORD PTR [ebp+0x8]
  42620e:	mov    esi,DWORD PTR [esi]
  426210:	mov    DWORD PTR [ecx],esi
  426212:	mov    ecx,DWORD PTR [edx+0x194]
  426218:	mov    ecx,DWORD PTR [ecx]
  42621a:	mov    esi,DWORD PTR [edx+0x190]
  426220:	mov    DWORD PTR [esi],ecx
  426222:	mov    eax,DWORD PTR [edx+0x194]
  426228:	mov    ecx,DWORD PTR [eax]
  42622a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42622d:	add    ecx,DWORD PTR [eax]
  42622f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  426236:	mov    eax,DWORD PTR [ebp-0x4]
  426239:	movzx  ecx,WORD PTR [ecx+0x16]
  42623d:	xor    eax,0x7510899
  426242:	add    eax,0x3272e0
  426247:	pop    esi
  426248:	test   ecx,eax
  42624a:	je     0x426258
  42624c:	mov    eax,DWORD PTR [edx+0x1c8]
  426252:	mov    DWORD PTR [eax],0xf89c85b8
  426258:	leave  
  426259:	ret    0x4
  42625c:	push   ebp
  42625d:	mov    ebp,esp
  42625f:	sub    esp,0x70
  426262:	and    DWORD PTR [ebp-0x20],0x0
  426266:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  42626d:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  426274:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  42627b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426282:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  426289:	mov    eax,DWORD PTR [ebp+0x20]
  42628c:	mov    eax,DWORD PTR [eax+0x194]
  426292:	mov    DWORD PTR [ebp-0xc],eax
  426295:	mov    eax,DWORD PTR [ebp+0x20]
  426298:	push   ebx
  426299:	push   esi
  42629a:	mov    esi,DWORD PTR [eax+0x190]
  4262a0:	mov    eax,DWORD PTR [ebp+0x20]
  4262a3:	mov    eax,DWORD PTR [eax+0x18c]
  4262a9:	mov    DWORD PTR [ebp-0x8],eax
  4262ac:	mov    eax,DWORD PTR [eax]
  4262ae:	push   edi
  4262af:	mov    DWORD PTR [ebp-0x4],esi
  4262b2:	test   eax,eax
  4262b4:	jne    0x4262c1
  4262b6:	push   DWORD PTR [ebp+0x1c]
  4262b9:	mov    edx,DWORD PTR [ebp+0x20]
  4262bc:	call   0x426200
  4262c1:	mov    eax,DWORD PTR [esi]
  4262c3:	mov    ebx,DWORD PTR [esi]
  4262c5:	add    ebx,DWORD PTR [eax+0x3c]
  4262c8:	mov    eax,DWORD PTR [ebp+0xc]
  4262cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4262ce:	mov    ecx,DWORD PTR [ecx]
  4262d0:	mov    esi,0x7510899
  4262d5:	xor    eax,esi
  4262d7:	mov    edi,0x3272e0
  4262dc:	add    eax,edi
  4262de:	cmp    eax,ecx
  4262e0:	jne    0x426518
  4262e6:	mov    eax,DWORD PTR [ebp-0xc]
  4262e9:	mov    eax,DWORD PTR [eax]
  4262eb:	mov    DWORD PTR [ebp-0x10],eax
  4262ee:	mov    eax,DWORD PTR [ebx+0x50]
  4262f1:	mov    DWORD PTR [ebp-0x68],eax
  4262f4:	mov    eax,DWORD PTR [ebp-0x18]
  4262f7:	xor    eax,esi
  4262f9:	add    eax,edi
  4262fb:	mov    DWORD PTR [ebp-0x64],eax
  4262fe:	mov    eax,DWORD PTR [ebp-0x14]
  426301:	and    DWORD PTR [ebp-0x6c],0x0
  426305:	xor    eax,esi
  426307:	add    eax,edi
  426309:	mov    DWORD PTR [ebp-0x60],eax
  42630c:	lea    eax,[ebp-0x70]
  42630f:	push   eax
  426310:	mov    eax,DWORD PTR [ebp+0x8]
  426313:	xor    eax,esi
  426315:	add    eax,edi
  426317:	push   eax
  426318:	mov    eax,DWORD PTR [ebp+0x20]
  42631b:	add    eax,0xaa
  426320:	push   eax
  426321:	mov    eax,DWORD PTR [ebp+0x20]
  426324:	mov    eax,DWORD PTR [eax+0x198]
  42632a:	mov    DWORD PTR [ebp-0x70],0x4
  426331:	push   DWORD PTR [eax]
  426333:	mov    eax,DWORD PTR [ebp+0x10]
  426336:	call   eax
  426338:	mov    ecx,DWORD PTR [ebp-0xc]
  42633b:	mov    ecx,DWORD PTR [ecx]
  42633d:	mov    edx,DWORD PTR [ebp-0x8]
  426340:	mov    DWORD PTR [ebp-0x6c],eax
  426343:	mov    DWORD PTR [ebp+0x1c],eax
  426346:	mov    DWORD PTR [edx],ecx
  426348:	mov    ecx,DWORD PTR [ebp-0x4]
  42634b:	mov    DWORD PTR [ecx],eax
  42634d:	mov    eax,DWORD PTR [ebx+0x50]
  426350:	mov    DWORD PTR [ebp-0x68],eax
  426353:	mov    eax,DWORD PTR [ebp-0x1c]
  426356:	xor    eax,esi
  426358:	add    eax,edi
  42635a:	mov    DWORD PTR [ebp-0x64],eax
  42635d:	lea    eax,[ebp-0x20]
  426360:	mov    DWORD PTR [ebp-0x60],eax
  426363:	lea    eax,[ebp-0x70]
  426366:	push   eax
  426367:	mov    eax,DWORD PTR [ebp+0x8]
  42636a:	xor    eax,esi
  42636c:	add    eax,edi
  42636e:	push   eax
  42636f:	mov    eax,DWORD PTR [ebp+0x20]
  426372:	add    eax,0xee
  426377:	push   eax
  426378:	mov    eax,DWORD PTR [ebp+0x20]
  42637b:	mov    eax,DWORD PTR [eax+0x198]
  426381:	mov    DWORD PTR [ebp-0x70],0x4
  426388:	push   DWORD PTR [eax]
  42638a:	mov    eax,DWORD PTR [ebp+0x10]
  42638d:	call   eax
  42638f:	test   eax,eax
  426391:	je     0x4263b6
  426393:	and    DWORD PTR [ebp+0xc],0x0
  426397:	cmp    DWORD PTR [ebx+0x50],0x0
  42639b:	jbe    0x4263b6
  42639d:	mov    eax,DWORD PTR [ebp+0x1c]
  4263a0:	mov    ecx,DWORD PTR [ebp-0x10]
  4263a3:	sub    ecx,eax
  4263a5:	mov    dl,BYTE PTR [ecx+eax*1]
  4263a8:	inc    DWORD PTR [ebp+0xc]
  4263ab:	mov    BYTE PTR [eax],dl
  4263ad:	mov    edx,DWORD PTR [ebp+0xc]
  4263b0:	inc    eax
  4263b1:	cmp    edx,DWORD PTR [ebx+0x50]
  4263b4:	jb     0x4263a5
  4263b6:	mov    edx,DWORD PTR [ebp+0x1c]
  4263b9:	mov    ecx,DWORD PTR [edx+0x3c]
  4263bc:	add    ecx,edx
  4263be:	mov    eax,DWORD PTR [ecx+0xa0]
  4263c4:	mov    ebx,DWORD PTR [ecx+0x28]
  4263c7:	add    eax,edx
  4263c9:	sub    edx,DWORD PTR [ebp-0x10]
  4263cc:	add    ebx,DWORD PTR [ebp+0x1c]
  4263cf:	mov    DWORD PTR [ebp+0xc],edx
  4263d2:	mov    DWORD PTR [ebp-0x2c],ecx
  4263d5:	mov    DWORD PTR [ebp-0x14],ebx
  4263d8:	mov    DWORD PTR [ebp-0x8],0x0
  4263df:	jmp    0x42645b
  4263e1:	add    edx,0xfffffff8
  4263e4:	shr    edx,1
  4263e6:	mov    DWORD PTR [ebp-0x18],edx
  4263e9:	je     0x426447
  4263eb:	lea    edx,[eax+0x8]
  4263ee:	mov    DWORD PTR [ebp-0x4],edx
  4263f1:	mov    edx,DWORD PTR [ebp-0x18]
  4263f4:	mov    DWORD PTR [ebp-0x18],edx
  4263f7:	mov    edx,DWORD PTR [ebp-0x4]
  4263fa:	movzx  edx,WORD PTR [edx]
  4263fd:	mov    DWORD PTR [ebp-0x24],edx
  426400:	and    edx,0xfff
  426406:	mov    DWORD PTR [ebp-0x28],edx
  426409:	mov    edx,DWORD PTR [ebp-0x24]
  42640c:	shr    edx,0xc
  42640f:	add    edx,0xffcd8d20
  426415:	xor    edx,esi
  426417:	cmp    edx,0xf89c85ba
  42641d:	jne    0x42643e
  42641f:	mov    edx,DWORD PTR [ebp-0x28]
  426422:	add    edx,DWORD PTR [ebp+0x1c]
  426425:	mov    ebx,DWORD PTR [eax]
  426427:	cmp    DWORD PTR [ebx+edx*1],0x0
  42642b:	je     0x42643b
  42642d:	mov    ecx,DWORD PTR [ebp+0xc]
  426430:	add    ecx,DWORD PTR [ebx+edx*1]
  426433:	mov    ebx,DWORD PTR [eax]
  426435:	mov    DWORD PTR [edx+ebx*1],ecx
  426438:	mov    ecx,DWORD PTR [ebp-0x2c]
  42643b:	mov    ebx,DWORD PTR [ebp-0x14]
  42643e:	add    DWORD PTR [ebp-0x4],0x2
  426442:	dec    DWORD PTR [ebp-0x18]
  426445:	jne    0x4263f7
  426447:	mov    edx,DWORD PTR [ebp-0xc]
  42644a:	add    DWORD PTR [ebp-0x8],edx
  42644d:	mov    edx,DWORD PTR [ebp-0x8]
  426450:	cmp    edx,DWORD PTR [ecx+0xa4]
  426456:	jae    0x426469
  426458:	add    eax,DWORD PTR [ebp-0xc]
  42645b:	mov    edx,DWORD PTR [eax+0x4]
  42645e:	mov    DWORD PTR [ebp-0xc],edx
  426461:	test   edx,edx
  426463:	jne    0x4263e1
  426469:	mov    eax,DWORD PTR [ebp-0x10]
  42646c:	mov    DWORD PTR [ebp-0x6c],eax
  42646f:	mov    DWORD PTR [ebp-0x70],0x4
  426476:	mov    eax,DWORD PTR [ecx+0x50]
  426479:	mov    DWORD PTR [ebp-0x68],eax
  42647c:	mov    eax,DWORD PTR [ebp-0x1c]
  42647f:	xor    eax,esi
  426481:	add    eax,edi
  426483:	mov    DWORD PTR [ebp-0x64],eax
  426486:	lea    eax,[ebp-0x20]
  426489:	mov    DWORD PTR [ebp-0x60],eax
  42648c:	lea    eax,[ebp-0x70]
  42648f:	push   eax
  426490:	mov    eax,DWORD PTR [ebp+0x8]
  426493:	xor    eax,esi
  426495:	add    eax,edi
  426497:	push   eax
  426498:	mov    eax,DWORD PTR [ebp+0x20]
  42649b:	add    eax,0xee
  4264a0:	push   eax
  4264a1:	mov    eax,DWORD PTR [ebp+0x20]
  4264a4:	mov    eax,DWORD PTR [eax+0x198]
  4264aa:	push   DWORD PTR [eax]
  4264ac:	mov    eax,DWORD PTR [ebp+0x10]
  4264af:	call   eax
  4264b1:	mov    eax,DWORD PTR [ebp+0x20]
  4264b4:	mov    eax,DWORD PTR [eax+0x180]
  4264ba:	add    eax,DWORD PTR [ebp+0xc]
  4264bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4264c0:	push   DWORD PTR [ebp+0x18]
  4264c3:	mov    DWORD PTR [eax],ecx
  4264c5:	push   DWORD PTR [ebp+0x14]
  4264c8:	push   DWORD PTR [ebp+0x1c]
  4264cb:	call   ebx
  4264cd:	mov    eax,DWORD PTR [ebp+0xc]
  4264d0:	add    eax,DWORD PTR [ebp+0x20]
  4264d3:	lea    ecx,[ebp+0x4]
  4264d6:	mov    DWORD PTR [ebp+0x20],eax
  4264d9:	mov    eax,DWORD PTR [ebp+0x20]
  4264dc:	mov    eax,DWORD PTR [ebp+0x20]
  4264df:	mov    edx,DWORD PTR [eax+0x190]
  4264e5:	mov    eax,DWORD PTR [ebp+0x20]
  4264e8:	mov    eax,DWORD PTR [eax+0x18c]
  4264ee:	mov    esi,DWORD PTR [eax]
  4264f0:	cmp    DWORD PTR [ecx],esi
  4264f2:	jb     0x426513
  4264f4:	mov    esi,DWORD PTR [edx]
  4264f6:	mov    edi,DWORD PTR [edx]
  4264f8:	mov    esi,DWORD PTR [esi+0x3c]
  4264fb:	lea    esi,[edi+esi*1+0x50]
  4264ff:	mov    edi,DWORD PTR [eax]
  426501:	add    edi,DWORD PTR [esi]
  426503:	cmp    DWORD PTR [ecx],edi
  426505:	jae    0x426513
  426507:	mov    esi,DWORD PTR [eax]
  426509:	mov    eax,DWORD PTR [ecx]
  42650b:	mov    edx,DWORD PTR [edx]
  42650d:	sub    eax,esi
  42650f:	add    edx,eax
  426511:	mov    DWORD PTR [ecx],edx
  426513:	mov    eax,DWORD PTR [ebp+0xc]
  426516:	jmp    0x426559
  426518:	push   DWORD PTR [ebp+0x20]
  42651b:	call   0x4254f2
  426520:	mov    eax,DWORD PTR [ebp+0x20]
  426523:	mov    eax,DWORD PTR [eax+0x1c8]
  426529:	mov    eax,DWORD PTR [eax]
  42652b:	xor    eax,esi
  42652d:	add    eax,edi
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jne    0x42654a
  426534:	mov    ecx,DWORD PTR [ebp+0x20]
  426537:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42653d:	push   DWORD PTR [ecx]
  42653f:	mov    eax,DWORD PTR [eax+0x1d8]
  426545:	call   DWORD PTR [eax+0x28]
  426548:	jmp    0x426557
  42654a:	mov    eax,DWORD PTR [eax+0x17c]
  426550:	mov    ecx,DWORD PTR [eax]
  426552:	lea    eax,[ebp+0x4]
  426555:	add    DWORD PTR [eax],ecx
  426557:	xor    eax,eax
  426559:	pop    edi
  42655a:	pop    esi
  42655b:	pop    ebx
  42655c:	leave  
  42655d:	ret    0x1c
  426560:	push   ebp
  426561:	mov    ebp,esp
  426563:	sub    esp,0x1c
  426566:	push   esi
  426567:	mov    esi,eax
  426569:	mov    eax,DWORD PTR [ecx+0x190]
  42656f:	cmp    DWORD PTR [eax],0x0
  426572:	je     0x426682
  426578:	test   edx,edx
  42657a:	je     0x426682
  426580:	test   esi,esi
  426582:	je     0x426682
  426588:	mov    eax,DWORD PTR [esi+0x88]
  42658e:	test   eax,eax
  426590:	je     0x42667d
  426596:	cmp    DWORD PTR [esi+0x8c],0x10
  42659d:	je     0x42667d
  4265a3:	cmp    DWORD PTR [esi+0x34],edx
  4265a6:	je     0x42667d
  4265ac:	mov    esi,DWORD PTR [ecx+0x18c]
  4265b2:	and    DWORD PTR [ebp-0x10],0x0
  4265b6:	mov    ecx,edx
  4265b8:	sub    ecx,DWORD PTR [esi]
  4265ba:	add    eax,edx
  4265bc:	movzx  edx,WORD PTR [eax+0xc]
  4265c0:	mov    DWORD PTR [ebp-0x1c],ecx
  4265c3:	movzx  ecx,WORD PTR [eax+0xe]
  4265c7:	add    ecx,edx
  4265c9:	je     0x42667d
  4265cf:	lea    ecx,[eax+0x14]
  4265d2:	push   ebx
  4265d3:	mov    DWORD PTR [ebp-0x18],ecx
  4265d6:	mov    esi,0x7fffffff
  4265db:	push   edi
  4265dc:	test   DWORD PTR [ecx],esi
  4265de:	je     0x42665f
  4265e0:	mov    edx,DWORD PTR [ecx]
  4265e2:	and    DWORD PTR [ebp-0xc],0x0
  4265e6:	and    edx,esi
  4265e8:	add    edx,eax
  4265ea:	movzx  edi,WORD PTR [edx+0xe]
  4265ee:	movzx  ebx,WORD PTR [edx+0xc]
  4265f2:	add    edi,ebx
  4265f4:	je     0x42665f
  4265f6:	lea    ecx,[edx+0x14]
  4265f9:	mov    DWORD PTR [ebp-0x14],ecx
  4265fc:	test   DWORD PTR [ecx],esi
  4265fe:	je     0x426641
  426600:	mov    ecx,DWORD PTR [ecx]
  426602:	and    DWORD PTR [ebp-0x8],0x0
  426606:	and    ecx,esi
  426608:	add    ecx,eax
  42660a:	movzx  edi,WORD PTR [ecx+0xe]
  42660e:	movzx  ebx,WORD PTR [ecx+0xc]
  426612:	add    edi,ebx
  426614:	je     0x426641
  426616:	lea    edi,[ecx+0x14]
  426619:	mov    DWORD PTR [ebp-0x4],edi
  42661c:	mov    edi,DWORD PTR [ebp-0x4]
  42661f:	mov    edi,DWORD PTR [edi]
  426621:	test   edi,edi
  426623:	je     0x42662b
  426625:	mov    ebx,DWORD PTR [ebp-0x1c]
  426628:	add    DWORD PTR [edi+eax*1],ebx
  42662b:	movzx  edi,WORD PTR [ecx+0xe]
  42662f:	movzx  ebx,WORD PTR [ecx+0xc]
  426633:	inc    DWORD PTR [ebp-0x8]
  426636:	add    DWORD PTR [ebp-0x4],0x8
  42663a:	add    edi,ebx
  42663c:	cmp    DWORD PTR [ebp-0x8],edi
  42663f:	jb     0x42661c
  426641:	movzx  edi,WORD PTR [edx+0xe]
  426645:	movzx  ebx,WORD PTR [edx+0xc]
  426649:	mov    ecx,DWORD PTR [ebp-0x14]
  42664c:	inc    DWORD PTR [ebp-0xc]
  42664f:	add    ecx,0x8
  426652:	add    edi,ebx
  426654:	mov    DWORD PTR [ebp-0x14],ecx
  426657:	cmp    DWORD PTR [ebp-0xc],edi
  42665a:	jb     0x4265fc
  42665c:	mov    ecx,DWORD PTR [ebp-0x18]
  42665f:	movzx  edx,WORD PTR [eax+0xe]
  426663:	movzx  edi,WORD PTR [eax+0xc]
  426667:	inc    DWORD PTR [ebp-0x10]
  42666a:	add    ecx,0x8
  42666d:	add    edx,edi
  42666f:	mov    DWORD PTR [ebp-0x18],ecx
  426672:	cmp    DWORD PTR [ebp-0x10],edx
  426675:	jb     0x4265dc
  42667b:	pop    edi
  42667c:	pop    ebx
  42667d:	xor    eax,eax
  42667f:	inc    eax
  426680:	jmp    0x426684
  426682:	xor    eax,eax
  426684:	pop    esi
  426685:	leave  
  426686:	ret    
  426687:	push   ebp
  426688:	mov    ebp,esp
  42668a:	mov    ecx,DWORD PTR [ecx+0x190]
  426690:	mov    eax,DWORD PTR [ebp+0xc]
  426693:	sub    esp,0x10
  426696:	push   ebx
  426697:	xor    ebx,ebx
  426699:	push   esi
  42669a:	push   edi
  42669b:	cmp    DWORD PTR [ecx],ebx
  42669d:	je     0x426725
  4266a3:	cmp    eax,ebx
  4266a5:	je     0x426725
  4266a7:	cmp    DWORD PTR [eax+0x78],ebx
  4266aa:	jne    0x4266b1
  4266ac:	xor    eax,eax
  4266ae:	inc    eax
  4266af:	jmp    0x426727
  4266b1:	mov    eax,DWORD PTR [eax+0x78]
  4266b4:	add    eax,DWORD PTR [ebp+0x8]
  4266b7:	mov    ecx,DWORD PTR [eax+0x1c]
  4266ba:	mov    edx,DWORD PTR [eax+0x24]
  4266bd:	mov    esi,DWORD PTR [eax+0x14]
  4266c0:	mov    edi,DWORD PTR [eax+0x18]
  4266c3:	add    ecx,DWORD PTR [ebp+0x8]
  4266c6:	add    edx,DWORD PTR [ebp+0x8]
  4266c9:	mov    DWORD PTR [ebp-0x4],esi
  4266cc:	cmp    esi,edi
  4266ce:	ja     0x4266d3
  4266d0:	mov    DWORD PTR [ebp-0x4],edi
  4266d3:	mov    DWORD PTR [ebp-0x8],ebx
  4266d6:	cmp    DWORD PTR [ebp-0x4],ebx
  4266d9:	jbe    0x4266ac
  4266db:	cmp    ebx,DWORD PTR [eax+0x14]
  4266de:	jae    0x4266e6
  4266e0:	movzx  esi,WORD PTR [edx+ebx*2]
  4266e4:	jmp    0x4266e8
  4266e6:	mov    esi,ebx
  4266e8:	lea    esi,[ecx+esi*4]
  4266eb:	mov    edi,DWORD PTR [esi]
  4266ed:	test   edi,edi
  4266ef:	je     0x42671a
  4266f1:	add    edi,DWORD PTR [ebp+0x8]
  4266f4:	mov    DWORD PTR [ebp-0x10],edi
  4266f7:	cmp    edi,eax
  4266f9:	jbe    0x42670b
  4266fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4266fe:	mov    ebx,DWORD PTR [ebx+0x7c]
  426701:	add    ebx,eax
  426703:	cmp    edi,ebx
  426705:	jae    0x42670b
  426707:	mov    esi,DWORD PTR [esi]
  426709:	jmp    0x426713
  42670b:	sub    edi,DWORD PTR [ebp+0x8]
  42670e:	mov    DWORD PTR [esi],edi
  426710:	mov    esi,DWORD PTR [ebp-0x10]
  426713:	test   esi,esi
  426715:	je     0x426725
  426717:	mov    ebx,DWORD PTR [ebp-0x8]
  42671a:	inc    ebx
  42671b:	mov    DWORD PTR [ebp-0x8],ebx
  42671e:	cmp    ebx,DWORD PTR [ebp-0x4]
  426721:	jb     0x4266db
  426723:	jmp    0x4266ac
  426725:	xor    eax,eax
  426727:	pop    edi
  426728:	pop    esi
  426729:	pop    ebx
  42672a:	leave  
  42672b:	ret    0x8
  42672e:	push   ebp
  42672f:	mov    ebp,esp
  426731:	sub    esp,0x2c
  426734:	mov    edx,0xf89c85b9
  426739:	mov    DWORD PTR [ebp-0x4],edx
  42673c:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426743:	mov    eax,DWORD PTR [ebp-0x4]
  426746:	mov    ecx,DWORD PTR [ebp-0x4]
  426749:	mov    ecx,DWORD PTR [ebp-0x4]
  42674c:	mov    ecx,DWORD PTR [ebp-0x4]
  42674f:	mov    ecx,DWORD PTR [ebp-0x4]
  426752:	mov    ecx,DWORD PTR [ebp-0x4]
  426755:	push   ebx
  426756:	mov    ebx,DWORD PTR [ebp+0x10]
  426759:	push   esi
  42675a:	mov    esi,0x7510899
  42675f:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  426766:	mov    ecx,DWORD PTR [ebp-0x4]
  426769:	mov    ebx,DWORD PTR [ebx+0x190]
  42676f:	push   edi
  426770:	mov    edi,0x3272e0
  426775:	xor    ecx,esi
  426777:	xor    eax,esi
  426779:	add    eax,edi
  42677b:	add    ecx,edi
  42677d:	mov    DWORD PTR [ebp-0x18],eax
  426780:	cmp    ecx,DWORD PTR [ebx]
  426782:	je     0x426a03
  426788:	mov    ebx,DWORD PTR [ebp-0x4]
  42678b:	mov    ecx,DWORD PTR [ebp+0xc]
  42678e:	xor    ebx,esi
  426790:	add    ebx,edi
  426792:	cmp    ebx,ecx
  426794:	je     0x426a03
  42679a:	mov    ebx,DWORD PTR [ebp-0x4]
  42679d:	mov    ecx,DWORD PTR [ecx+0x80]
  4267a3:	xor    ebx,esi
  4267a5:	add    ebx,edi
  4267a7:	cmp    ecx,ebx
  4267a9:	je     0x4269fe
  4267af:	add    ecx,DWORD PTR [ebp+0x8]
  4267b2:	mov    DWORD PTR [ebp-0x2c],ecx
  4267b5:	mov    ebx,edx
  4267b7:	xor    ebx,esi
  4267b9:	add    ebx,edi
  4267bb:	mov    DWORD PTR [ebp-0x10],ebx
  4267be:	mov    ebx,DWORD PTR [ebp-0x10]
  4267c1:	cmp    ebx,edx
  4267c3:	je     0x4267d7
  4267c5:	mov    edx,DWORD PTR [ebp-0x10]
  4267c8:	mov    ebx,DWORD PTR [ebp-0x4]
  4267cb:	imul   edx,edx,0x14
  4267ce:	xor    ebx,esi
  4267d0:	add    ebx,edi
  4267d2:	cmp    DWORD PTR [edx+ecx*1],ebx
  4267d5:	jne    0x4267ee
  4267d7:	mov    edx,DWORD PTR [ebp-0x10]
  4267da:	mov    ebx,DWORD PTR [ebp-0x4]
  4267dd:	imul   edx,edx,0x14
  4267e0:	xor    ebx,esi
  4267e2:	add    ebx,edi
  4267e4:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4267e8:	je     0x4269f0
  4267ee:	mov    eax,DWORD PTR [ebp-0x4]
  4267f1:	mov    ebx,DWORD PTR [ebp-0x4]
  4267f4:	mov    eax,DWORD PTR [ebp-0x10]
  4267f7:	imul   eax,eax,0x14
  4267fa:	add    eax,ecx
  4267fc:	mov    ecx,DWORD PTR [eax+0x10]
  4267ff:	add    ecx,DWORD PTR [ebp+0x8]
  426802:	xor    ebx,esi
  426804:	mov    DWORD PTR [ebp-0x1c],ecx
  426807:	mov    ecx,DWORD PTR [ebp-0x4]
  42680a:	mov    edx,DWORD PTR [ebp-0x4]
  42680d:	xor    ecx,esi
  42680f:	add    ecx,edi
  426811:	xor    edx,esi
  426813:	mov    DWORD PTR [ebp-0x24],ecx
  426816:	mov    ecx,DWORD PTR [eax]
  426818:	add    edx,edi
  42681a:	add    ebx,edi
  42681c:	cmp    ecx,edx
  42681e:	je     0x426826
  426820:	add    ecx,DWORD PTR [ebp+0x8]
  426823:	mov    DWORD PTR [ebp-0x24],ecx
  426826:	mov    ecx,DWORD PTR [ebp-0x4]
  426829:	xor    ecx,esi
  42682b:	add    ecx,DWORD PTR [eax+0xc]
  42682e:	mov    eax,DWORD PTR [ebp+0x8]
  426831:	lea    eax,[ecx+eax*1+0x3272e0]
  426838:	mov    DWORD PTR [ebp+0xc],eax
  42683b:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  426842:	mov    eax,DWORD PTR [ebp+0x10]
  426845:	push   DWORD PTR [ebp+0xc]
  426848:	mov    eax,DWORD PTR [eax+0x1d8]
  42684e:	call   DWORD PTR [eax]
  426850:	mov    ecx,DWORD PTR [ebp-0x4]
  426853:	xor    ecx,esi
  426855:	add    ecx,edi
  426857:	mov    DWORD PTR [ebp-0xc],eax
  42685a:	cmp    ecx,eax
  42685c:	jne    0x426870
  42685e:	mov    eax,DWORD PTR [ebp+0x10]
  426861:	push   DWORD PTR [ebp+0xc]
  426864:	mov    eax,DWORD PTR [eax+0x1d8]
  42686a:	call   DWORD PTR [eax+0xc]
  42686d:	mov    DWORD PTR [ebp-0xc],eax
  426870:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  426877:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  42687e:	mov    eax,DWORD PTR [ebp-0x4]
  426881:	xor    eax,esi
  426883:	add    eax,edi
  426885:	cmp    eax,DWORD PTR [ebp-0xc]
  426888:	jne    0x4268ad
  42688a:	mov    eax,DWORD PTR [ebp-0x8]
  42688d:	mov    ecx,DWORD PTR [ebp-0x20]
  426890:	xor    eax,esi
  426892:	xor    ecx,esi
  426894:	lea    ebx,[ebx+eax*1+0x3272e0]
  42689b:	mov    eax,DWORD PTR [ebp+0x10]
  42689e:	mov    eax,DWORD PTR [eax+0x1d8]
  4268a4:	add    ecx,edi
  4268a6:	imul   ecx,ebx
  4268a9:	push   ecx
  4268aa:	call   DWORD PTR [eax+0x24]
  4268ad:	mov    eax,DWORD PTR [ebp-0x4]
  4268b0:	xor    eax,esi
  4268b2:	add    eax,edi
  4268b4:	cmp    eax,DWORD PTR [ebp-0xc]
  4268b7:	jne    0x4268c8
  4268b9:	mov    eax,DWORD PTR [ebp-0x28]
  4268bc:	xor    eax,esi
  4268be:	add    eax,edi
  4268c0:	cmp    ebx,eax
  4268c2:	jbe    0x426842
  4268c8:	mov    eax,DWORD PTR [ebp-0x4]
  4268cb:	xor    eax,esi
  4268cd:	add    eax,edi
  4268cf:	cmp    eax,DWORD PTR [ebp-0xc]
  4268d2:	jne    0x4268eb
  4268d4:	mov    eax,DWORD PTR [ebp-0x8]
  4268d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4268da:	xor    eax,esi
  4268dc:	lea    eax,[ecx+eax*1+0x3272e0]
  4268e3:	mov    DWORD PTR [ebp-0x18],eax
  4268e6:	jmp    0x4269da
  4268eb:	mov    DWORD PTR [ebp-0x14],0x1121b01
  4268f2:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  4268f9:	mov    ebx,DWORD PTR [ebp-0x4]
  4268fc:	xor    ebx,esi
  4268fe:	add    ebx,edi
  426900:	jmp    0x4269c7
  426905:	mov    eax,DWORD PTR [ebp-0x4]
  426908:	xor    eax,esi
  42690a:	add    eax,edi
  42690c:	mov    DWORD PTR [ebp-0x14],eax
  42690f:	mov    eax,DWORD PTR [ebp-0x4]
  426912:	xor    eax,esi
  426914:	add    eax,edi
  426916:	mov    DWORD PTR [ebp+0xc],eax
  426919:	mov    ecx,DWORD PTR [ebp-0x4]
  42691c:	mov    eax,DWORD PTR [ebp-0x24]
  42691f:	xor    ecx,esi
  426921:	add    ecx,edi
  426923:	cmp    ecx,eax
  426925:	je     0x42692d
  426927:	mov    eax,DWORD PTR [eax+ebx*4]
  42692a:	mov    DWORD PTR [ebp-0x14],eax
  42692d:	mov    eax,DWORD PTR [ebp-0x1c]
  426930:	mov    eax,DWORD PTR [eax+ebx*4]
  426933:	mov    DWORD PTR [ebp+0xc],eax
  426936:	mov    eax,DWORD PTR [ebp-0x4]
  426939:	mov    ecx,DWORD PTR [ebp-0x14]
  42693c:	xor    eax,esi
  42693e:	add    eax,edi
  426940:	cmp    eax,ecx
  426942:	je     0x42696d
  426944:	mov    eax,DWORD PTR [ebp-0x4]
  426947:	mov    ecx,DWORD PTR [ebp-0x14]
  42694a:	xor    eax,esi
  42694c:	add    eax,edi
  42694e:	shr    ecx,0x1f
  426951:	cmp    eax,ecx
  426953:	je     0x42696d
  426955:	mov    ecx,DWORD PTR [ebp-0x14]
  426958:	mov    eax,DWORD PTR [ebp+0x10]
  42695b:	mov    eax,DWORD PTR [eax+0x1d8]
  426961:	movzx  ecx,cx
  426964:	push   ecx
  426965:	push   DWORD PTR [ebp-0xc]
  426968:	call   DWORD PTR [eax+0x8]
  42696b:	jmp    0x426986
  42696d:	mov    eax,DWORD PTR [ebp+0xc]
  426970:	add    eax,DWORD PTR [ebp+0x8]
  426973:	mov    ecx,DWORD PTR [ebp+0x10]
  426976:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42697c:	add    eax,0x2
  42697f:	push   eax
  426980:	push   DWORD PTR [ebp-0xc]
  426983:	call   DWORD PTR [ecx+0x8]
  426986:	mov    DWORD PTR [ebp+0xc],eax
  426989:	mov    eax,DWORD PTR [ebp-0x4]
  42698c:	mov    ecx,DWORD PTR [ebp+0xc]
  42698f:	xor    eax,esi
  426991:	add    eax,edi
  426993:	cmp    eax,ecx
  426995:	mov    eax,DWORD PTR [ebp-0x8]
  426998:	jne    0x4269ab
  42699a:	mov    ecx,DWORD PTR [ebp-0x18]
  42699d:	xor    eax,esi
  42699f:	lea    eax,[ecx+eax*1+0x3272e0]
  4269a6:	mov    DWORD PTR [ebp-0x18],eax
  4269a9:	jmp    0x4269bb
  4269ab:	mov    ecx,DWORD PTR [ebp+0xc]
  4269ae:	xor    eax,esi
  4269b0:	add    eax,edi
  4269b2:	imul   eax,ecx
  4269b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4269b8:	mov    DWORD PTR [ecx+ebx*4],eax
  4269bb:	mov    eax,DWORD PTR [ebp-0x8]
  4269be:	xor    eax,esi
  4269c0:	lea    ebx,[ebx+eax*1+0x3272e0]
  4269c7:	mov    eax,DWORD PTR [ebp-0x4]
  4269ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  4269cd:	xor    eax,esi
  4269cf:	add    eax,edi
  4269d1:	cmp    DWORD PTR [ecx+ebx*4],eax
  4269d4:	jne    0x426905
  4269da:	mov    edx,DWORD PTR [ebp-0x10]
  4269dd:	mov    eax,DWORD PTR [ebp-0x18]
  4269e0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4269e3:	sub    edx,0x3272df
  4269e9:	xor    edx,esi
  4269eb:	jmp    0x4267b5
  4269f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269f3:	xor    ecx,esi
  4269f5:	add    ecx,edi
  4269f7:	cmp    eax,ecx
  4269f9:	mov    eax,DWORD PTR [ebp-0x4]
  4269fc:	jne    0x426a06
  4269fe:	mov    eax,DWORD PTR [ebp-0x8]
  426a01:	jmp    0x426a06
  426a03:	mov    eax,DWORD PTR [ebp-0x4]
  426a06:	xor    eax,esi
  426a08:	add    eax,edi
  426a0a:	pop    edi
  426a0b:	pop    esi
  426a0c:	pop    ebx
  426a0d:	leave  
  426a0e:	ret    0xc
  426a11:	push   ebp
  426a12:	mov    ebp,esp
  426a14:	sub    esp,0x28
  426a17:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426a1e:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426a25:	mov    eax,DWORD PTR [ebp+0xc]
  426a28:	mov    DWORD PTR [ebp+0xc],eax
  426a2b:	push   esi
  426a2c:	mov    eax,eax
  426a2e:	mov    eax,DWORD PTR [ebp-0x4]
  426a31:	mov    esi,DWORD PTR [ebp+0x8]
  426a34:	mov    ecx,0x7510899
  426a39:	xor    eax,ecx
  426a3b:	mov    edx,0x3272e0
  426a40:	add    eax,edx
  426a42:	cmp    esi,eax
  426a44:	je     0x426b6b
  426a4a:	mov    eax,DWORD PTR [ebp+0x8]
  426a4d:	mov    esi,DWORD PTR [ebp+0x8]
  426a50:	add    esi,DWORD PTR [eax+0x3c]
  426a53:	push   edi
  426a54:	mov    DWORD PTR [ebp+0xc],esi
  426a57:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  426a5e:	mov    eax,DWORD PTR [ebp-0x1c]
  426a61:	mov    esi,DWORD PTR [ebp-0x4]
  426a64:	mov    edi,DWORD PTR [ebp+0xc]
  426a67:	xor    esi,ecx
  426a69:	xor    eax,ecx
  426a6b:	add    esi,edx
  426a6d:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  426a74:	je     0x426b65
  426a7a:	mov    esi,DWORD PTR [ebp+0xc]
  426a7d:	mov    eax,DWORD PTR [ebp+0x8]
  426a80:	add    eax,DWORD PTR [esi+0xa0]
  426a86:	mov    esi,DWORD PTR [ebp+0x8]
  426a89:	mov    edi,DWORD PTR [ebp+0xc]
  426a8c:	sub    esi,DWORD PTR [edi+0x34]
  426a8f:	mov    edi,DWORD PTR [ebp-0x4]
  426a92:	xor    edi,ecx
  426a94:	add    edi,edx
  426a96:	mov    DWORD PTR [ebp-0x24],esi
  426a99:	cmp    esi,edi
  426a9b:	je     0x426b65
  426aa1:	mov    esi,DWORD PTR [ebp-0x4]
  426aa4:	xor    esi,ecx
  426aa6:	add    esi,edx
  426aa8:	mov    DWORD PTR [ebp-0x8],esi
  426aab:	push   ebx
  426aac:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  426ab3:	jmp    0x426b4f
  426ab8:	mov    esi,DWORD PTR [ebp-0x4]
  426abb:	xor    esi,ecx
  426abd:	lea    edi,[ebx-0x8]
  426ac0:	add    esi,edx
  426ac2:	shr    edi,1
  426ac4:	cmp    esi,edi
  426ac6:	jae    0x426b35
  426ac8:	sub    edi,esi
  426aca:	lea    ebx,[eax+esi*2+0x8]
  426ace:	mov    DWORD PTR [ebp-0x18],edi
  426ad1:	movzx  esi,WORD PTR [ebx]
  426ad4:	and    esi,0xfff
  426ada:	mov    DWORD PTR [ebp-0x14],esi
  426add:	mov    edi,DWORD PTR [ebp-0x14]
  426ae0:	mov    esi,DWORD PTR [eax]
  426ae2:	sub    esi,edx
  426ae4:	add    edi,esi
  426ae6:	movzx  esi,WORD PTR [ebx]
  426ae9:	shr    esi,0xc
  426aec:	xor    edi,ecx
  426aee:	mov    DWORD PTR [ebp-0x20],edi
  426af1:	mov    DWORD PTR [ebp-0x14],esi
  426af4:	mov    esi,DWORD PTR [ebp-0x20]
  426af7:	mov    edi,DWORD PTR [ebp+0x8]
  426afa:	xor    esi,ecx
  426afc:	lea    esi,[esi+edi*1+0x3272e0]
  426b03:	mov    DWORD PTR [ebp-0x20],esi
  426b06:	mov    esi,DWORD PTR [ebp-0x10]
  426b09:	mov    edi,DWORD PTR [ebp-0x14]
  426b0c:	xor    esi,ecx
  426b0e:	add    esi,edx
  426b10:	cmp    edi,esi
  426b12:	jne    0x426b2a
  426b14:	mov    esi,DWORD PTR [ebp-0x10]
  426b17:	mov    edi,DWORD PTR [ebp-0x14]
  426b1a:	xor    esi,ecx
  426b1c:	add    esi,edx
  426b1e:	cmp    edi,esi
  426b20:	jne    0x426b2a
  426b22:	mov    esi,DWORD PTR [ebp-0x20]
  426b25:	mov    edi,DWORD PTR [ebp-0x24]
  426b28:	add    DWORD PTR [esi],edi
  426b2a:	add    ebx,0x2
  426b2d:	dec    DWORD PTR [ebp-0x18]
  426b30:	jne    0x426ad1
  426b32:	mov    ebx,DWORD PTR [ebp-0xc]
  426b35:	add    DWORD PTR [ebp-0x8],ebx
  426b38:	mov    esi,DWORD PTR [ebp-0x1c]
  426b3b:	mov    edi,DWORD PTR [ebp-0x8]
  426b3e:	mov    ebx,DWORD PTR [ebp+0xc]
  426b41:	xor    esi,ecx
  426b43:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  426b4a:	jae    0x426b64
  426b4c:	add    eax,DWORD PTR [ebp-0xc]
  426b4f:	mov    esi,DWORD PTR [ebp-0x4]
  426b52:	mov    ebx,DWORD PTR [eax+0x4]
  426b55:	xor    esi,ecx
  426b57:	add    esi,edx
  426b59:	mov    DWORD PTR [ebp-0xc],ebx
  426b5c:	cmp    ebx,esi
  426b5e:	jne    0x426ab8
  426b64:	pop    ebx
  426b65:	mov    eax,DWORD PTR [ebp-0x28]
  426b68:	pop    edi
  426b69:	jmp    0x426b6e
  426b6b:	mov    eax,DWORD PTR [ebp-0x4]
  426b6e:	xor    eax,ecx
  426b70:	add    eax,edx
  426b72:	pop    esi
  426b73:	leave  
  426b74:	ret    0x8
  426b77:	push   ebp
  426b78:	mov    ebp,esp
  426b7a:	sub    esp,0x54
  426b7d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426b84:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  426b8b:	mov    eax,DWORD PTR [ebp-0x4]
  426b8e:	push   ebx
  426b8f:	push   esi
  426b90:	mov    esi,0x7510899
  426b95:	xor    eax,esi
  426b97:	mov    ebx,0x3272e0
  426b9c:	add    eax,ebx
  426b9e:	mov    DWORD PTR [ebp-0x18],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,esi
  426ba6:	add    eax,ebx
  426ba8:	mov    DWORD PTR [ebp-0x20],eax
  426bab:	push   edi
  426bac:	mov    edi,DWORD PTR [ebp+0x20]
  426baf:	mov    eax,DWORD PTR [ebp-0x10]
  426bb2:	mov    ecx,DWORD PTR [ebp-0x10]
  426bb5:	xor    eax,ecx
  426bb7:	mov    DWORD PTR [ebp-0x10],eax
  426bba:	add    DWORD PTR [ebp-0x10],0xf89cb5b9
  426bc1:	mov    eax,DWORD PTR [ebp-0x8]
  426bc4:	mov    ecx,DWORD PTR [ebp-0x8]
  426bc7:	xor    eax,ecx
  426bc9:	mov    DWORD PTR [ebp-0x8],eax
  426bcc:	add    DWORD PTR [ebp-0x8],0xf89c85f9
  426bd3:	mov    eax,DWORD PTR [ebp-0xc]
  426bd6:	mov    ecx,DWORD PTR [ebp-0xc]
  426bd9:	xor    eax,ecx
  426bdb:	mov    DWORD PTR [ebp-0xc],eax
  426bde:	add    DWORD PTR [ebp-0xc],0xf89c85bd
  426be5:	mov    eax,DWORD PTR [ebp-0x14]
  426be8:	mov    ecx,DWORD PTR [ebp-0x14]
  426beb:	xor    eax,ecx
  426bed:	mov    DWORD PTR [ebp-0x14],eax
  426bf0:	add    DWORD PTR [ebp-0x14],0xf89f05b9
  426bf7:	mov    eax,0x9471
  426bfc:	mov    WORD PTR [ebp+0x20],ax
  426c00:	mov    eax,DWORD PTR [ebp+0x8]
  426c03:	test   eax,eax
  426c05:	je     0x426fea
  426c0b:	mov    eax,DWORD PTR [ebp+0xc]
  426c0e:	test   eax,eax
  426c10:	je     0x426fea
  426c16:	mov    eax,DWORD PTR [ebp+0x18]
  426c19:	test   eax,eax
  426c1b:	je     0x426fea
  426c21:	mov    ax,WORD PTR [ebp+0x20]
  426c25:	mov    ecx,0x8a8c
  426c2a:	xor    ax,cx
  426c2d:	mov    ecx,0x3b50
  426c32:	add    ax,cx
  426c35:	mov    ecx,DWORD PTR [ebp+0x8]
  426c38:	cmp    WORD PTR [ecx],ax
  426c3b:	jne    0x426fea
  426c41:	mov    eax,DWORD PTR [ebp-0x4]
  426c44:	mov    ecx,DWORD PTR [ebp+0x8]
  426c47:	mov    eax,DWORD PTR [ebp+0x8]
  426c4a:	add    eax,DWORD PTR [ecx+0x3c]
  426c4d:	mov    DWORD PTR [ebp+0xc],eax
  426c50:	mov    eax,DWORD PTR [eax+0x50]
  426c53:	test   eax,eax
  426c55:	je     0x426fea
  426c5b:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426c62:	mov    eax,DWORD PTR [ebp-0x2c]
  426c65:	xor    eax,esi
  426c67:	add    eax,ebx
  426c69:	mov    DWORD PTR [ebp-0x2c],eax
  426c6c:	mov    eax,DWORD PTR [ebp-0x4]
  426c6f:	mov    eax,DWORD PTR [edi+0x190]
  426c75:	mov    ecx,DWORD PTR [eax]
  426c77:	mov    ecx,DWORD PTR [ecx+0x3c]
  426c7a:	add    ecx,DWORD PTR [eax]
  426c7c:	mov    eax,DWORD PTR [ebp-0x4]
  426c7f:	mov    eax,DWORD PTR [edi+0x18c]
  426c85:	mov    edx,DWORD PTR [eax]
  426c87:	mov    DWORD PTR [ebp-0x1c],ecx
  426c8a:	mov    DWORD PTR [ebp+0x20],edx
  426c8d:	cmp    edx,edx
  426c8f:	jne    0x426cc4
  426c91:	mov    eax,DWORD PTR [edi+0x1d8]
  426c97:	lea    edx,[ebp-0x18]
  426c9a:	push   edx
  426c9b:	mov    edx,DWORD PTR [ebp-0x8]
  426c9e:	xor    edx,esi
  426ca0:	add    edx,ebx
  426ca2:	push   edx
  426ca3:	push   DWORD PTR [ecx+0x50]
  426ca6:	push   DWORD PTR [ebp+0x20]
  426ca9:	call   DWORD PTR [eax+0x1c]
  426cac:	mov    ecx,DWORD PTR [ebp-0x1c]
  426caf:	mov    eax,DWORD PTR [ecx+0x54]
  426cb2:	mov    ecx,DWORD PTR [ecx+0x50]
  426cb5:	sub    ecx,eax
  426cb7:	add    eax,DWORD PTR [ebp+0x20]
  426cba:	push   ecx
  426cbb:	push   eax
  426cbc:	call   0x4275fe
  426cc1:	mov    edx,DWORD PTR [ebp+0x20]
  426cc4:	mov    eax,DWORD PTR [edi+0x194]
  426cca:	mov    DWORD PTR [eax],edx
  426ccc:	mov    eax,DWORD PTR [ebp+0xc]
  426ccf:	push   DWORD PTR [eax+0x54]
  426cd2:	push   DWORD PTR [ebp+0x8]
  426cd5:	push   edx
  426cd6:	call   0x4274a5
  426cdb:	mov    ecx,DWORD PTR [ebp+0x20]
  426cde:	mov    eax,DWORD PTR [ecx+0x3c]
  426ce1:	add    eax,ecx
  426ce3:	movzx  ecx,WORD PTR [eax+0x14]
  426ce7:	lea    ecx,[ecx+eax*1+0x18]
  426ceb:	mov    DWORD PTR [ebp+0x18],ecx
  426cee:	mov    ecx,DWORD PTR [ebp-0x4]
  426cf1:	movzx  edx,WORD PTR [eax+0x6]
  426cf5:	xor    ecx,esi
  426cf7:	add    ecx,ebx
  426cf9:	mov    DWORD PTR [ebp+0xc],eax
  426cfc:	cmp    edx,ecx
  426cfe:	je     0x426dac
  426d04:	mov    ecx,DWORD PTR [ebp-0x4]
  426d07:	xor    ecx,esi
  426d09:	add    ecx,ebx
  426d0b:	mov    DWORD PTR [ebp-0x20],ecx
  426d0e:	mov    ecx,DWORD PTR [ebp-0x24]
  426d11:	movzx  edx,WORD PTR [eax+0x6]
  426d15:	xor    ecx,esi
  426d17:	sub    edx,ecx
  426d19:	sub    edx,ebx
  426d1b:	cmp    DWORD PTR [ebp-0x20],edx
  426d1e:	ja     0x426dac
  426d24:	mov    edx,DWORD PTR [ebp+0x18]
  426d27:	add    edx,0x8
  426d2a:	mov    DWORD PTR [ebp+0x18],edx
  426d2d:	jmp    0x426d32
  426d2f:	mov    edx,DWORD PTR [ebp+0x18]
  426d32:	mov    eax,DWORD PTR [eax+0x38]
  426d35:	lea    ecx,[eax-0x1]
  426d38:	mov    DWORD PTR [ebp-0x30],eax
  426d3b:	mov    eax,DWORD PTR [edx]
  426d3d:	test   ecx,eax
  426d3f:	je     0x426d48
  426d41:	not    ecx
  426d43:	and    eax,ecx
  426d45:	add    eax,DWORD PTR [ebp-0x30]
  426d48:	push   eax
  426d49:	mov    eax,DWORD PTR [edx+0x4]
  426d4c:	add    eax,DWORD PTR [ebp+0x20]
  426d4f:	push   eax
  426d50:	call   0x4275fe
  426d55:	mov    edx,DWORD PTR [ebp-0x4]
  426d58:	mov    eax,DWORD PTR [ebp+0x18]
  426d5b:	mov    ecx,DWORD PTR [eax+0x8]
  426d5e:	xor    edx,esi
  426d60:	add    edx,ebx
  426d62:	cmp    ecx,edx
  426d64:	je     0x426d7d
  426d66:	push   ecx
  426d67:	mov    ecx,DWORD PTR [ebp+0x8]
  426d6a:	add    ecx,DWORD PTR [eax+0xc]
  426d6d:	mov    eax,DWORD PTR [eax+0x4]
  426d70:	add    eax,DWORD PTR [ebp+0x20]
  426d73:	push   ecx
  426d74:	push   eax
  426d75:	call   0x4274a5
  426d7a:	mov    eax,DWORD PTR [ebp+0x18]
  426d7d:	mov    ecx,DWORD PTR [ebp-0x24]
  426d80:	mov    edx,DWORD PTR [ebp-0x20]
  426d83:	add    eax,0x28
  426d86:	xor    ecx,esi
  426d88:	lea    ecx,[edx+ecx*1+0x3272e0]
  426d8f:	mov    edx,DWORD PTR [ebp+0xc]
  426d92:	mov    DWORD PTR [ebp+0x18],eax
  426d95:	mov    eax,DWORD PTR [ebp-0x24]
  426d98:	movzx  edx,WORD PTR [edx+0x6]
  426d9c:	xor    eax,esi
  426d9e:	sub    edx,eax
  426da0:	mov    eax,DWORD PTR [ebp+0xc]
  426da3:	sub    edx,ebx
  426da5:	mov    DWORD PTR [ebp-0x20],ecx
  426da8:	cmp    ecx,edx
  426daa:	jbe    0x426d2f
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	mov    edx,DWORD PTR [edi+0x18c]
  426db5:	xor    ecx,esi
  426db7:	add    ecx,ebx
  426db9:	mov    DWORD PTR [ebp+0x18],ecx
  426dbc:	mov    ecx,DWORD PTR [ebp+0x20]
  426dbf:	cmp    ecx,DWORD PTR [edx]
  426dc1:	jne    0x426dea
  426dc3:	mov    eax,DWORD PTR [edi+0x1d8]
  426dc9:	lea    edx,[ebp-0x18]
  426dcc:	push   edx
  426dcd:	mov    edx,DWORD PTR [ebp-0xc]
  426dd0:	xor    edx,esi
  426dd2:	add    edx,ebx
  426dd4:	push   edx
  426dd5:	mov    edx,DWORD PTR [ebp-0x1c]
  426dd8:	push   DWORD PTR [edx+0x54]
  426ddb:	push   ecx
  426ddc:	call   DWORD PTR [eax+0x1c]
  426ddf:	test   eax,eax
  426de1:	je     0x426fdb
  426de7:	mov    eax,DWORD PTR [ebp+0xc]
  426dea:	mov    ecx,DWORD PTR [edi+0x1c8]
  426df0:	mov    ecx,DWORD PTR [ecx]
  426df2:	xor    ecx,esi
  426df4:	add    ecx,ebx
  426df6:	je     0x426f06
  426dfc:	and    DWORD PTR [ebp-0x28],0x0
  426e00:	mov    eax,0x4f92
  426e05:	mov    WORD PTR [ebp-0x3c],ax
  426e09:	add    eax,0x16
  426e0c:	mov    WORD PTR [ebp-0x3a],ax
  426e10:	mov    eax,0x4f98
  426e15:	mov    WORD PTR [ebp-0x38],ax
  426e19:	add    eax,0xfffffff8
  426e1c:	and    DWORD PTR [ebp+0x8],0x0
  426e20:	mov    ecx,eax
  426e22:	mov    WORD PTR [ebp-0x34],ax
  426e26:	mov    eax,0x4e3c
  426e2b:	mov    WORD PTR [ebp-0x36],cx
  426e2f:	mov    WORD PTR [ebp-0x32],ax
  426e33:	mov    eax,DWORD PTR [ebp+0x8]
  426e36:	lea    eax,[ebp+eax*2-0x3c]
  426e3a:	mov    ecx,0x8a8c
  426e3f:	xor    cx,WORD PTR [eax]
  426e42:	mov    edx,0x3b50
  426e47:	add    cx,dx
  426e4a:	inc    DWORD PTR [ebp+0x8]
  426e4d:	cmp    DWORD PTR [ebp+0x8],0x6
  426e51:	mov    WORD PTR [eax],cx
  426e54:	jb     0x426e33
  426e56:	mov    DWORD PTR [ebp-0x54],0x3c081e26
  426e5d:	mov    DWORD PTR [ebp-0x50],0x3d1e0401
  426e64:	mov    DWORD PTR [ebp-0x4c],0xf1080e04
  426e6b:	mov    DWORD PTR [ebp-0x48],0x39080b3c
  426e72:	mov    DWORD PTR [ebp-0x44],0x1d081e1e
  426e79:	mov    WORD PTR [ebp-0x40],0xf0f
  426e7f:	mov    BYTE PTR [ebp-0x3e],0x7a
  426e83:	xor    ecx,ecx
  426e85:	lea    eax,[ebp+ecx*1-0x54]
  426e89:	mov    dl,BYTE PTR [eax]
  426e8b:	xor    dl,0x73
  426e8e:	sub    dl,0x9
  426e91:	inc    ecx
  426e92:	mov    BYTE PTR [eax],dl
  426e94:	cmp    ecx,0x17
  426e97:	jb     0x426e85
  426e99:	mov    eax,DWORD PTR [edi+0x1d8]
  426e9f:	lea    ecx,[ebp-0x3c]
  426ea2:	push   ecx
  426ea3:	call   DWORD PTR [eax+0x4]
  426ea6:	mov    ecx,DWORD PTR [edi+0x1d8]
  426eac:	lea    edx,[ebp-0x54]
  426eaf:	push   edx
  426eb0:	push   eax
  426eb1:	call   DWORD PTR [ecx+0x8]
  426eb4:	lea    ecx,[ebp-0x28]
  426eb7:	push   ecx
  426eb8:	mov    ecx,DWORD PTR [edi+0x18c]
  426ebe:	push   DWORD PTR [ecx]
  426ec0:	call   eax
  426ec2:	mov    eax,DWORD PTR [ebp-0x28]
  426ec5:	test   eax,eax
  426ec7:	je     0x426f03
  426ec9:	mov    DWORD PTR [ebp+0x8],eax
  426ecc:	jmp    0x426ed8
  426ece:	mov    eax,DWORD PTR [eax]
  426ed0:	mov    DWORD PTR [ebp-0x28],eax
  426ed3:	cmp    eax,DWORD PTR [ebp+0x8]
  426ed6:	je     0x426ee5
  426ed8:	mov    edx,DWORD PTR [eax+0x18]
  426edb:	mov    ecx,DWORD PTR [edi+0x18c]
  426ee1:	cmp    edx,DWORD PTR [ecx]
  426ee3:	jne    0x426ece
  426ee5:	mov    edx,DWORD PTR [eax+0x18]
  426ee8:	mov    ecx,DWORD PTR [edi+0x18c]
  426eee:	cmp    edx,DWORD PTR [ecx]
  426ef0:	jne    0x426f03
  426ef2:	mov    edx,DWORD PTR [ebp-0x1c]
  426ef5:	mov    ecx,DWORD PTR [edi+0x190]
  426efb:	mov    edx,DWORD PTR [edx+0x28]
  426efe:	add    edx,DWORD PTR [ecx]
  426f00:	mov    DWORD PTR [eax+0x1c],edx
  426f03:	mov    eax,DWORD PTR [ebp+0xc]
  426f06:	push   edi
  426f07:	push   eax
  426f08:	push   DWORD PTR [ebp+0x20]
  426f0b:	call   0x42672e
  426f10:	test   eax,eax
  426f12:	je     0x426fdb
  426f18:	push   DWORD PTR [ebp+0xc]
  426f1b:	mov    ecx,edi
  426f1d:	push   DWORD PTR [ebp+0x20]
  426f20:	call   0x426687
  426f25:	test   eax,eax
  426f27:	je     0x426fdb
  426f2d:	mov    eax,DWORD PTR [ebp+0xc]
  426f30:	mov    edx,DWORD PTR [ebp+0x20]
  426f33:	mov    ecx,edi
  426f35:	call   0x426560
  426f3a:	test   eax,eax
  426f3c:	je     0x426fdb
  426f42:	push   edi
  426f43:	push   DWORD PTR [ebp+0x20]
  426f46:	call   0x426a11
  426f4b:	test   eax,eax
  426f4d:	je     0x426fdb
  426f53:	mov    eax,DWORD PTR [edi+0x18c]
  426f59:	mov    edx,DWORD PTR [ebp+0x20]
  426f5c:	cmp    edx,DWORD PTR [eax]
  426f5e:	jne    0x426f7a
  426f60:	mov    eax,DWORD PTR [edi+0x1d8]
  426f66:	lea    ecx,[ebp-0x18]
  426f69:	push   ecx
  426f6a:	push   DWORD PTR [ebp-0x18]
  426f6d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426f70:	push   DWORD PTR [ecx+0x54]
  426f73:	push   edx
  426f74:	call   DWORD PTR [eax+0x1c]
  426f77:	mov    edx,DWORD PTR [ebp+0x20]
  426f7a:	mov    eax,DWORD PTR [edi+0x1c8]
  426f80:	mov    eax,DWORD PTR [eax]
  426f82:	xor    eax,esi
  426f84:	add    eax,ebx
  426f86:	je     0x426fbf
  426f88:	mov    ecx,DWORD PTR [ebp+0xc]
  426f8b:	mov    eax,DWORD PTR [ecx+0x28]
  426f8e:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426f95:	mov    esi,DWORD PTR [ebp+0x8]
  426f98:	push   DWORD PTR [ebp+0x14]
  426f9b:	xor    esi,0x899
  426fa1:	push   DWORD PTR [ebp+0x10]
  426fa4:	add    esi,0x72e0
  426faa:	or     WORD PTR [ecx+0x16],si
  426fae:	add    eax,edx
  426fb0:	push   edx
  426fb1:	call   eax
  426fb3:	mov    DWORD PTR [edi+0x1d0],0xf89c85b8
  426fbd:	jmp    0x426fc9
  426fbf:	mov    eax,DWORD PTR [ebp+0xc]
  426fc2:	mov    eax,DWORD PTR [eax+0x28]
  426fc5:	add    eax,edx
  426fc7:	call   eax
  426fc9:	mov    DWORD PTR [ebp-0x20],eax
  426fcc:	mov    eax,DWORD PTR [ebp-0x20]
  426fcf:	mov    ecx,DWORD PTR [ebp+0x1c]
  426fd2:	mov    DWORD PTR [ecx],eax
  426fd4:	mov    DWORD PTR [ebp+0x18],0x1
  426fdb:	cmp    DWORD PTR [ebp+0x18],0x0
  426fdf:	jne    0x426fe5
  426fe1:	and    DWORD PTR [ebp+0x20],0x0
  426fe5:	mov    eax,DWORD PTR [ebp+0x20]
  426fe8:	jmp    0x426fec
  426fea:	xor    eax,eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    0x1c
  426ff3:	push   ebp
  426ff4:	mov    ebp,esp
  426ff6:	movzx  edx,WORD PTR [ecx+0x6]
  426ffa:	movzx  eax,WORD PTR [ecx+0x14]
  426ffe:	push   ebx
  426fff:	push   edi
  427000:	xor    edi,edi
  427002:	lea    eax,[eax+ecx*1+0x18]
  427006:	test   edx,edx
  427008:	je     0x427029
  42700a:	mov    ecx,DWORD PTR [eax+0xc]
  42700d:	lea    ebx,[ecx+esi*1]
  427010:	cmp    DWORD PTR [ebp+0x8],ebx
  427013:	jb     0x427021
  427015:	mov    ebx,DWORD PTR [eax+0x8]
  427018:	add    ebx,ecx
  42701a:	add    ebx,esi
  42701c:	cmp    DWORD PTR [ebp+0x8],ebx
  42701f:	jb     0x42702b
  427021:	add    eax,0x28
  427024:	inc    edi
  427025:	cmp    edi,edx
  427027:	jb     0x42700a
  427029:	xor    eax,eax
  42702b:	pop    edi
  42702c:	pop    ebx
  42702d:	pop    ebp
  42702e:	ret    0x4
  427031:	push   ebp
  427032:	mov    ebp,esp
  427034:	sub    esp,0x28
  427037:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42703e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  427045:	mov    DWORD PTR [ebp-0x28],0xf89c85bb
  42704c:	mov    eax,0x4f9d
  427051:	mov    WORD PTR [ebp-0xc],ax
  427055:	mov    eax,0x4e7d
  42705a:	mov    WORD PTR [ebp-0x4],ax
  42705e:	mov    eax,0x4fa6
  427063:	mov    WORD PTR [ebp-0x8],ax
  427067:	add    eax,0xffffffe0
  42706a:	mov    WORD PTR [ebp-0x8],ax
  42706e:	mov    eax,DWORD PTR [ebp+0x8]
  427071:	mov    DWORD PTR [ebp-0x14],eax
  427074:	mov    eax,DWORD PTR [ebp+0xc]
  427077:	mov    DWORD PTR [ebp-0x18],eax
  42707a:	mov    eax,DWORD PTR [ebp-0x10]
  42707d:	push   ebx
  42707e:	mov    ecx,0x7510899
  427083:	xor    eax,ecx
  427085:	push   esi
  427086:	mov    esi,DWORD PTR [ebp-0x14]
  427089:	mov    edx,0x3272e0
  42708e:	add    eax,edx
  427090:	push   edi
  427091:	cmp    esi,eax
  427093:	je     0x427291
  427099:	mov    eax,DWORD PTR [ebp-0x10]
  42709c:	mov    esi,DWORD PTR [ebp-0x18]
  42709f:	xor    eax,ecx
  4270a1:	add    eax,edx
  4270a3:	cmp    esi,eax
  4270a5:	je     0x427291
  4270ab:	mov    eax,DWORD PTR [ebp-0x10]
  4270ae:	xor    eax,ecx
  4270b0:	add    eax,edx
  4270b2:	mov    DWORD PTR [ebp-0x20],eax
  4270b5:	mov    eax,DWORD PTR [ebp-0x10]
  4270b8:	xor    eax,ecx
  4270ba:	add    eax,edx
  4270bc:	mov    DWORD PTR [ebp-0x24],eax
  4270bf:	movzx  esi,WORD PTR [ebp-0x4]
  4270c3:	movzx  edi,WORD PTR [ebp-0xc]
  4270c7:	mov    eax,0x8a8c
  4270cc:	xor    si,ax
  4270cf:	mov    ebx,0x8a8c
  4270d4:	xor    di,bx
  4270d7:	mov    eax,0x3b50
  4270dc:	add    si,ax
  4270df:	add    di,ax
  4270e2:	sub    edi,esi
  4270e4:	mov    WORD PTR [ebp-0xc],di
  4270e8:	mov    esi,DWORD PTR [ebp-0x20]
  4270eb:	mov    edi,DWORD PTR [ebp-0x14]
  4270ee:	mov    si,WORD PTR [edi+esi*2]
  4270f2:	mov    WORD PTR [ebp+0x8],si
  4270f6:	mov    esi,DWORD PTR [ebp-0x24]
  4270f9:	mov    edi,DWORD PTR [ebp-0x18]
  4270fc:	mov    si,WORD PTR [edi+esi*2]
  427100:	mov    WORD PTR [ebp+0xc],si
  427104:	mov    esi,0x72e0
  427109:	jmp    0x427216
  42710e:	mov    edi,DWORD PTR [ebp-0x10]
  427111:	mov    bx,WORD PTR [ebp+0xc]
  427115:	xor    edi,0x899
  42711b:	add    edi,esi
  42711d:	cmp    bx,di
  427120:	je     0x427240
  427126:	mov    edi,DWORD PTR [ebp-0x10]
  427129:	mov    ebx,DWORD PTR [ebp+0x10]
  42712c:	xor    edi,ecx
  42712e:	add    edi,edx
  427130:	cmp    ebx,edi
  427132:	mov    di,WORD PTR [ebp+0xc]
  427136:	mov    bx,WORD PTR [ebp+0x8]
  42713a:	je     0x4271cd
  427140:	cmp    bx,di
  427143:	je     0x4271d6
  427149:	mov    di,WORD PTR [ebp-0x4]
  42714d:	mov    ebx,0x8a8c
  427152:	xor    di,bx
  427155:	mov    bx,WORD PTR [ebp+0x8]
  427159:	add    di,ax
  42715c:	cmp    bx,di
  42715f:	jb     0x427187
  427161:	mov    di,WORD PTR [ebp-0x8]
  427165:	mov    ebx,0x8a8c
  42716a:	xor    di,bx
  42716d:	mov    bx,WORD PTR [ebp+0x8]
  427171:	add    di,ax
  427174:	cmp    bx,di
  427177:	ja     0x427187
  427179:	movzx  edi,WORD PTR [ebp+0x8]
  42717d:	movzx  ebx,WORD PTR [ebp-0xc]
  427181:	add    edi,ebx
  427183:	mov    WORD PTR [ebp+0x8],di
  427187:	mov    di,WORD PTR [ebp-0x4]
  42718b:	mov    ebx,0x8a8c
  427190:	xor    di,bx
  427193:	mov    bx,WORD PTR [ebp+0xc]
  427197:	add    di,ax
  42719a:	cmp    bx,di
  42719d:	jb     0x4271c5
  42719f:	mov    di,WORD PTR [ebp-0x8]
  4271a3:	mov    ebx,0x8a8c
  4271a8:	xor    di,bx
  4271ab:	mov    bx,WORD PTR [ebp+0xc]
  4271af:	add    di,ax
  4271b2:	cmp    bx,di
  4271b5:	ja     0x4271c5
  4271b7:	movzx  edi,WORD PTR [ebp+0xc]
  4271bb:	movzx  ebx,WORD PTR [ebp-0xc]
  4271bf:	add    edi,ebx
  4271c1:	mov    WORD PTR [ebp+0xc],di
  4271c5:	mov    di,WORD PTR [ebp+0xc]
  4271c9:	mov    bx,WORD PTR [ebp+0x8]
  4271cd:	cmp    bx,di
  4271d0:	jne    0x427291
  4271d6:	mov    edi,DWORD PTR [ebp-0x28]
  4271d9:	mov    ebx,DWORD PTR [ebp-0x14]
  4271dc:	xor    edi,ecx
  4271de:	lea    edi,[edi+ebx*1+0x3272e0]
  4271e5:	mov    DWORD PTR [ebp-0x14],edi
  4271e8:	mov    edi,DWORD PTR [ebp-0x28]
  4271eb:	mov    ebx,DWORD PTR [ebp-0x18]
  4271ee:	xor    edi,ecx
  4271f0:	lea    edi,[edi+ebx*1+0x3272e0]
  4271f7:	mov    DWORD PTR [ebp-0x18],edi
  4271fa:	mov    edi,DWORD PTR [ebp-0x20]
  4271fd:	mov    ebx,DWORD PTR [ebp-0x14]
  427200:	mov    di,WORD PTR [ebx+edi*2]
  427204:	mov    WORD PTR [ebp+0x8],di
  427208:	mov    edi,DWORD PTR [ebp-0x24]
  42720b:	mov    ebx,DWORD PTR [ebp-0x18]
  42720e:	mov    di,WORD PTR [ebx+edi*2]
  427212:	mov    WORD PTR [ebp+0xc],di
  427216:	mov    edi,DWORD PTR [ebp-0x10]
  427219:	mov    bx,WORD PTR [ebp+0x8]
  42721d:	xor    edi,0x899
  427223:	add    edi,esi
  427225:	cmp    bx,di
  427228:	jne    0x42710e
  42722e:	mov    esi,DWORD PTR [ebp-0x1c]
  427231:	xor    esi,ecx
  427233:	mov    ecx,DWORD PTR [ebp-0x10]
  427236:	add    esi,edx
  427238:	imul   esi,ecx
  42723b:	mov    DWORD PTR [ebp-0x10],esi
  42723e:	jmp    0x427252
  427240:	mov    edx,DWORD PTR [ebp-0x10]
  427243:	xor    edx,ecx
  427245:	mov    ecx,DWORD PTR [ebp-0x1c]
  427248:	lea    ecx,[edx+ecx*1+0x3272e0]
  42724f:	mov    DWORD PTR [ebp-0x1c],ecx
  427252:	mov    edx,DWORD PTR [ebp-0x20]
  427255:	mov    esi,DWORD PTR [ebp-0x14]
  427258:	mov    si,WORD PTR [esi+edx*2]
  42725c:	mov    ecx,eax
  42725e:	sub    si,cx
  427261:	mov    edx,0x8a8c
  427266:	xor    si,dx
  427269:	mov    ecx,0x4e3c
  42726e:	cmp    si,cx
  427271:	jne    0x42728c
  427273:	mov    esi,DWORD PTR [ebp-0x24]
  427276:	mov    edi,DWORD PTR [ebp-0x18]
  427279:	mov    si,WORD PTR [edi+esi*2]
  42727d:	sub    si,ax
  427280:	xor    si,dx
  427283:	cmp    si,cx
  427286:	jne    0x42728c
  427288:	xor    eax,eax
  42728a:	jmp    0x427298
  42728c:	xor    eax,eax
  42728e:	inc    eax
  42728f:	jmp    0x427298
  427291:	mov    eax,DWORD PTR [ebp-0x1c]
  427294:	xor    eax,ecx
  427296:	add    eax,edx
  427298:	pop    edi
  427299:	pop    esi
  42729a:	pop    ebx
  42729b:	leave  
  42729c:	ret    0xc
  42729f:	push   ebp
  4272a0:	mov    ebp,esp
  4272a2:	push   ecx
  4272a3:	mov    cx,WORD PTR [eax]
  4272a6:	push   esi
  4272a7:	mov    esi,0x3b50
  4272ac:	sub    cx,si
  4272af:	mov    esi,0x8a8c
  4272b4:	xor    cx,si
  4272b7:	mov    esi,0x4e3c
  4272bc:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  4272c3:	mov    edx,0xf89c85b9
  4272c8:	cmp    cx,si
  4272cb:	je     0x42732a
  4272cd:	push   ebx
  4272ce:	push   edi
  4272cf:	movzx  ecx,cx
  4272d2:	mov    edi,0xffcd8d20
  4272d7:	mov    esi,0x7510899
  4272dc:	mov    ebx,0x4f80
  4272e1:	cmp    cx,bx
  4272e4:	jne    0x4272e9
  4272e6:	mov    DWORD PTR [ebp-0x4],edx
  4272e9:	lea    edx,[edi+0x1]
  4272ec:	xor    edx,esi
  4272ee:	mov    edi,edx
  4272f0:	xor    edi,esi
  4272f2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  4272fa:	mov    ebx,0x3b50
  4272ff:	sub    cx,bx
  427302:	mov    ebx,0x8a8c
  427307:	xor    cx,bx
  42730a:	mov    ebx,0x4e3c
  42730f:	cmp    cx,bx
  427312:	jne    0x4272dc
  427314:	mov    ecx,DWORD PTR [ebp-0x4]
  427317:	pop    edi
  427318:	pop    ebx
  427319:	cmp    ecx,0xf89c8586
  42731f:	je     0x42732a
  427321:	xor    ecx,esi
  427323:	lea    eax,[eax+ecx*2+0x64e5c2]
  42732a:	pop    esi
  42732b:	leave  
  42732c:	ret    
  42732d:	push   ebp
  42732e:	mov    ebp,esp
  427330:	push   ecx
  427331:	push   esi
  427332:	push   edi
  427333:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  42733a:	mov    esi,0xf89c85b9
  42733f:	call   0x42729f
  427344:	mov    edi,eax
  427346:	mov    al,BYTE PTR [edi]
  427348:	add    al,0x9
  42734a:	xor    al,0x73
  42734c:	cmp    al,0x7a
  42734e:	je     0x4273b1
  427350:	mov    eax,edi
  427352:	mov    edx,0xffcd8d20
  427357:	mov    ecx,0x7510899
  42735c:	push   ebx
  42735d:	mov    ax,WORD PTR [eax]
  427360:	mov    ebx,0x3b50
  427365:	sub    ax,bx
  427368:	mov    ebx,0x8a8c
  42736d:	xor    ax,bx
  427370:	mov    ebx,0x4e52
  427375:	cmp    ax,bx
  427378:	jne    0x42737d
  42737a:	mov    DWORD PTR [ebp-0x4],esi
  42737d:	lea    esi,[edx+0x1]
  427380:	xor    esi,ecx
  427382:	mov    edx,esi
  427384:	xor    edx,ecx
  427386:	lea    eax,[edi+edx*2+0x64e5c0]
  42738d:	mov    bl,BYTE PTR [eax]
  42738f:	add    bl,0x9
  427392:	xor    bl,0x73
  427395:	cmp    bl,0x7a
  427398:	jne    0x42735d
  42739a:	mov    eax,DWORD PTR [ebp-0x4]
  42739d:	pop    ebx
  42739e:	cmp    eax,0xf89c8586
  4273a3:	je     0x4273b1
  4273a5:	xor    eax,ecx
  4273a7:	xor    ecx,ecx
  4273a9:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  4273b1:	mov    eax,edi
  4273b3:	pop    edi
  4273b4:	pop    esi
  4273b5:	leave  
  4273b6:	ret    
  4273b7:	push   ebp
  4273b8:	mov    ebp,esp
  4273ba:	push   ecx
  4273bb:	push   esi
  4273bc:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  4273c3:	mov    esi,0xf89c85b9
  4273c8:	call   0x42729f
  4273cd:	mov    cx,WORD PTR [eax]
  4273d0:	mov    edx,0x3b50
  4273d5:	sub    cx,dx
  4273d8:	mov    edx,0x8a8c
  4273dd:	xor    cx,dx
  4273e0:	mov    edx,0x4e3c
  4273e5:	cmp    cx,dx
  4273e8:	je     0x427441
  4273ea:	push   ebx
  4273eb:	push   edi
  4273ec:	movzx  ecx,cx
  4273ef:	mov    edx,0xffcd8d20
  4273f4:	mov    edi,0x7510899
  4273f9:	mov    ebx,0x4e52
  4273fe:	cmp    cx,bx
  427401:	jne    0x427406
  427403:	mov    DWORD PTR [ebp-0x4],esi
  427406:	lea    esi,[edx+0x1]
  427409:	xor    esi,edi
  42740b:	mov    edx,esi
  42740d:	xor    edx,edi
  42740f:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  427417:	mov    ebx,0x3b50
  42741c:	sub    cx,bx
  42741f:	mov    ebx,0x8a8c
  427424:	xor    cx,bx
  427427:	mov    ebx,0x4e3c
  42742c:	cmp    cx,bx
  42742f:	jne    0x4273f9
  427431:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  427438:	pop    edi
  427439:	pop    ebx
  42743a:	je     0x427441
  42743c:	xor    eax,eax
  42743e:	inc    eax
  42743f:	jmp    0x427443
  427441:	xor    eax,eax
  427443:	pop    esi
  427444:	leave  
  427445:	ret    
  427446:	push   ebp
  427447:	mov    ebp,esp
  427449:	push   ecx
  42744a:	mov    eax,DWORD PTR [ebp+0x8]
  42744d:	movzx  ecx,WORD PTR [eax]
  427450:	push   esi
  427451:	lea    eax,[ecx-0x3b50]
  427457:	mov    esi,0x8a8c
  42745c:	push   edi
  42745d:	xor    eax,esi
  42745f:	mov    edi,0x4e3c
  427464:	mov    DWORD PTR [ebp-0x4],edx
  427467:	cmp    ax,di
  42746a:	je     0x427497
  42746c:	mov    eax,DWORD PTR [ebp+0x8]
  42746f:	sub    eax,edx
  427471:	mov    DWORD PTR [ebp+0x8],eax
  427474:	jmp    0x427479
  427476:	mov    eax,DWORD PTR [ebp+0x8]
  427479:	mov    WORD PTR [edx],cx
  42747c:	add    edx,0x2
  42747f:	movzx  edi,WORD PTR [eax+edx*1]
  427483:	mov    ecx,edi
  427485:	add    edi,0xffffc4b0
  42748b:	xor    edi,esi
  42748d:	mov    eax,0x4e3c
  427492:	cmp    di,ax
  427495:	jne    0x427476
  427497:	xor    eax,eax
  427499:	pop    edi
  42749a:	mov    WORD PTR [edx],ax
  42749d:	mov    eax,DWORD PTR [ebp-0x4]
  4274a0:	pop    esi
  4274a1:	leave  
  4274a2:	ret    0x4
  4274a5:	push   ebp
  4274a6:	mov    ebp,esp
  4274a8:	sub    esp,0x18
  4274ab:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4274b2:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4274b9:	mov    eax,DWORD PTR [ebp-0x14]
  4274bc:	xor    eax,0x7510899
  4274c1:	add    eax,0x3272e0
  4274c6:	mov    DWORD PTR [ebp-0x8],eax
  4274c9:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  4274d0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4274d7:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  4274de:	mov    eax,DWORD PTR [ebp-0x14]
  4274e1:	xor    eax,0x7510899
  4274e6:	mov    ecx,DWORD PTR [ebp-0x8]
  4274e9:	lea    eax,[ecx+eax*1+0x3272e0]
  4274f0:	mov    ecx,DWORD PTR [ebp-0x18]
  4274f3:	xor    ecx,0x7510899
  4274f9:	add    ecx,0x3272e0
  4274ff:	mov    edx,DWORD PTR [ebp+0x10]
  427502:	imul   edx,ecx
  427505:	cmp    eax,edx
  427507:	jae    0x4275fa
  42750d:	mov    eax,DWORD PTR [ebp+0x10]
  427510:	mov    ecx,DWORD PTR [ebp-0x8]
  427513:	sub    eax,ecx
  427515:	mov    ecx,DWORD PTR [ebp-0x10]
  427518:	xor    ecx,0x7510899
  42751e:	add    ecx,0x3272e0
  427524:	cmp    eax,ecx
  427526:	jbe    0x427558
  427528:	mov    eax,DWORD PTR [ebp+0x8]
  42752b:	add    eax,DWORD PTR [ebp-0x8]
  42752e:	mov    ecx,DWORD PTR [ebp+0xc]
  427531:	add    ecx,DWORD PTR [ebp-0x8]
  427534:	mov    edx,DWORD PTR [ecx]
  427536:	mov    DWORD PTR [eax],edx
  427538:	mov    ecx,DWORD PTR [ecx+0x4]
  42753b:	mov    DWORD PTR [eax+0x4],ecx
  42753e:	mov    eax,DWORD PTR [ebp-0x10]
  427541:	xor    eax,0x7510899
  427546:	mov    ecx,DWORD PTR [ebp-0x8]
  427549:	lea    eax,[ecx+eax*1+0x3272e0]
  427550:	mov    DWORD PTR [ebp-0x8],eax
  427553:	jmp    0x4275f5
  427558:	mov    eax,DWORD PTR [ebp+0x10]
  42755b:	mov    ecx,DWORD PTR [ebp-0x8]
  42755e:	sub    eax,ecx
  427560:	mov    ecx,DWORD PTR [ebp-0xc]
  427563:	xor    ecx,0x7510899
  427569:	add    ecx,0x3272e0
  42756f:	cmp    eax,ecx
  427571:	jbe    0x42759a
  427573:	mov    eax,DWORD PTR [ebp+0x8]
  427576:	add    eax,DWORD PTR [ebp-0x8]
  427579:	mov    ecx,DWORD PTR [ebp+0xc]
  42757c:	add    ecx,DWORD PTR [ebp-0x8]
  42757f:	mov    ecx,DWORD PTR [ecx]
  427581:	mov    DWORD PTR [eax],ecx
  427583:	mov    eax,DWORD PTR [ebp-0xc]
  427586:	xor    eax,0x7510899
  42758b:	mov    ecx,DWORD PTR [ebp-0x8]
  42758e:	lea    eax,[ecx+eax*1+0x3272e0]
  427595:	mov    DWORD PTR [ebp-0x8],eax
  427598:	jmp    0x4275f5
  42759a:	mov    eax,DWORD PTR [ebp+0x10]
  42759d:	mov    ecx,DWORD PTR [ebp-0x8]
  4275a0:	sub    eax,ecx
  4275a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4275a5:	xor    ecx,0x7510899
  4275ab:	add    ecx,0x3272e0
  4275b1:	cmp    eax,ecx
  4275b3:	jbe    0x4275de
  4275b5:	mov    eax,DWORD PTR [ebp+0x8]
  4275b8:	add    eax,DWORD PTR [ebp-0x8]
  4275bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4275be:	add    ecx,DWORD PTR [ebp-0x8]
  4275c1:	mov    cx,WORD PTR [ecx]
  4275c4:	mov    WORD PTR [eax],cx
  4275c7:	mov    eax,DWORD PTR [ebp-0x4]
  4275ca:	xor    eax,0x7510899
  4275cf:	mov    ecx,DWORD PTR [ebp-0x8]
  4275d2:	lea    eax,[ecx+eax*1+0x3272e0]
  4275d9:	mov    DWORD PTR [ebp-0x8],eax
  4275dc:	jmp    0x4275f5
  4275de:	mov    eax,DWORD PTR [ebp+0x8]
  4275e1:	add    eax,DWORD PTR [ebp-0x8]
  4275e4:	mov    ecx,DWORD PTR [ebp+0xc]
  4275e7:	add    ecx,DWORD PTR [ebp-0x8]
  4275ea:	mov    cl,BYTE PTR [ecx]
  4275ec:	mov    BYTE PTR [eax],cl
  4275ee:	mov    eax,DWORD PTR [ebp-0x8]
  4275f1:	inc    eax
  4275f2:	mov    DWORD PTR [ebp-0x8],eax
  4275f5:	jmp    0x4274de
  4275fa:	leave  
  4275fb:	ret    0xc
  4275fe:	push   ebp
  4275ff:	mov    ebp,esp
  427601:	push   ecx
  427602:	push   ecx
  427603:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42760a:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  427611:	xor    eax,eax
  427613:	inc    eax
  427614:	je     0x427656
  427616:	mov    eax,DWORD PTR [ebp-0x4]
  427619:	xor    eax,0x7510899
  42761e:	add    eax,0x3272e0
  427623:	cmp    DWORD PTR [ebp+0xc],eax
  427626:	jne    0x42762a
  427628:	jmp    0x427656
  42762a:	mov    eax,DWORD PTR [ebp-0x8]
  42762d:	xor    eax,0x7510899
  427632:	add    eax,0x3272e0
  427637:	mov    ecx,DWORD PTR [ebp+0xc]
  42763a:	sub    ecx,eax
  42763c:	mov    DWORD PTR [ebp+0xc],ecx
  42763f:	mov    eax,DWORD PTR [ebp-0x4]
  427642:	xor    eax,0x7510899
  427647:	add    eax,0x3272e0
  42764c:	mov    ecx,DWORD PTR [ebp+0x8]
  42764f:	add    ecx,DWORD PTR [ebp+0xc]
  427652:	mov    BYTE PTR [ecx],al
  427654:	jmp    0x427611
  427656:	leave  
  427657:	ret    0x8
  42765a:	push   ebp
  42765b:	mov    ebp,esp
  42765d:	sub    esp,0x21c
  427663:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42766a:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  427671:	mov    eax,DWORD PTR [ebp+0x10]
  427674:	mov    eax,DWORD PTR [ebp-0x4]
  427677:	mov    ecx,DWORD PTR [ebp+0x8]
  42767a:	push   esi
  42767b:	push   edi
  42767c:	mov    edi,0x7510899
  427681:	xor    eax,edi
  427683:	mov    esi,0x3272e0
  427688:	add    eax,esi
  42768a:	cmp    eax,ecx
  42768c:	mov    eax,DWORD PTR [ebp-0x4]
  42768f:	jne    0x42769a
  427691:	xor    eax,edi
  427693:	add    eax,esi
  427695:	jmp    0x427746
  42769a:	mov    ecx,DWORD PTR [ebp+0xc]
  42769d:	xor    eax,edi
  42769f:	add    eax,esi
  4276a1:	cmp    eax,ecx
  4276a3:	jne    0x4276aa
  4276a5:	mov    eax,DWORD PTR [ebp-0x4]
  4276a8:	jmp    0x427691
  4276aa:	lea    eax,[ebp-0x21c]
  4276b0:	mov    DWORD PTR [ebp-0x8],eax
  4276b3:	mov    eax,DWORD PTR [ebp+0xc]
  4276b6:	mov    DWORD PTR [ebp-0x10],eax
  4276b9:	mov    eax,DWORD PTR [ebp-0x4]
  4276bc:	xor    eax,edi
  4276be:	add    eax,esi
  4276c0:	mov    DWORD PTR [ebp+0x10],eax
  4276c3:	mov    eax,DWORD PTR [ebp+0xc]
  4276c6:	push   ebx
  4276c7:	call   0x4273b7
  4276cc:	mov    ebx,eax
  4276ce:	mov    eax,DWORD PTR [ebp+0x8]
  4276d1:	mov    eax,DWORD PTR [eax+0x14]
  4276d4:	jmp    0x42772e
  4276d6:	mov    eax,DWORD PTR [ebp+0xc]
  4276d9:	sub    eax,0x8
  4276dc:	mov    DWORD PTR [ebp-0xc],eax
  4276df:	mov    eax,DWORD PTR [ebp-0xc]
  4276e2:	mov    eax,DWORD PTR [eax+0x28]
  4276e5:	call   0x42729f
  4276ea:	mov    DWORD PTR [ebp+0x10],eax
  4276ed:	push   DWORD PTR [ebp+0x10]
  4276f0:	mov    edx,DWORD PTR [ebp-0x8]
  4276f3:	call   0x427446
  4276f8:	mov    eax,DWORD PTR [ebp-0x4]
  4276fb:	xor    eax,edi
  4276fd:	add    eax,esi
  4276ff:	cmp    eax,ebx
  427701:	jne    0x42770b
  427703:	mov    eax,DWORD PTR [ebp-0x8]
  427706:	call   0x42732d
  42770b:	mov    eax,DWORD PTR [ebp-0x14]
  42770e:	xor    eax,edi
  427710:	add    eax,esi
  427712:	push   eax
  427713:	push   DWORD PTR [ebp-0x10]
  427716:	push   DWORD PTR [ebp-0x8]
  427719:	call   0x427031
  42771e:	mov    ecx,DWORD PTR [ebp-0x4]
  427721:	xor    ecx,edi
  427723:	add    ecx,esi
  427725:	cmp    eax,ecx
  427727:	je     0x42774c
  427729:	mov    eax,DWORD PTR [ebp+0xc]
  42772c:	mov    eax,DWORD PTR [eax]
  42772e:	mov    DWORD PTR [ebp+0xc],eax
  427731:	mov    eax,DWORD PTR [ebp+0x8]
  427734:	mov    ecx,DWORD PTR [ebp+0xc]
  427737:	add    eax,0x14
  42773a:	cmp    ecx,eax
  42773c:	jne    0x4276d6
  42773e:	mov    eax,DWORD PTR [ebp-0x4]
  427741:	xor    eax,edi
  427743:	add    eax,esi
  427745:	pop    ebx
  427746:	pop    edi
  427747:	pop    esi
  427748:	leave  
  427749:	ret    0xc
  42774c:	mov    eax,DWORD PTR [ebp-0xc]
  42774f:	mov    eax,DWORD PTR [eax+0x18]
  427752:	jmp    0x427745
  427754:	push   ebp
  427755:	mov    ebp,esp
  427757:	mov    eax,DWORD PTR [ebp+0xc]
  42775a:	sub    esp,0x10
  42775d:	cmp    DWORD PTR [ebp+0x8],0x0
  427761:	push   ebx
  427762:	push   esi
  427763:	push   edi
  427764:	je     0x427819
  42776a:	test   eax,eax
  42776c:	je     0x427819
  427772:	movzx  eax,WORD PTR [eax+0x20]
  427776:	mov    ecx,eax
  427778:	mov    DWORD PTR [ebp-0x10],eax
  42777b:	xor    edx,edx
  42777d:	and    DWORD PTR [ebp-0x8],edx
  427780:	mov    eax,0x8a8c
  427785:	xor    ecx,eax
  427787:	add    ecx,0x3b50
  42778d:	mov    DWORD PTR [ebp-0xc],ecx
  427790:	and    DWORD PTR [ebp-0x4],0x0
  427794:	xor    ecx,ecx
  427796:	push   0x78
  427798:	pop    edi
  427799:	cmp    cx,WORD PTR [ebp-0xc]
  42779d:	jae    0x427803
  42779f:	lea    esi,[edx-0x3b50]
  4277a5:	xor    esi,eax
  4277a7:	movzx  ecx,WORD PTR [ebp-0x4]
  4277ab:	mov    ebx,DWORD PTR [ebp+0xc]
  4277ae:	lea    ecx,[ebx+ecx*4]
  4277b1:	cmp    WORD PTR [ecx+0x2],si
  4277b5:	jne    0x4277ee
  4277b7:	movzx  ecx,WORD PTR [ecx]
  4277ba:	mov    edi,0x4e3c
  4277bf:	cmp    cx,di
  4277c2:	jne    0x4277d0
  4277c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4277c7:	movzx  edi,dx
  4277ca:	cmp    BYTE PTR [edi+ebx*1],0x0
  4277ce:	je     0x4277fd
  4277d0:	mov    ebx,DWORD PTR [ebp+0x8]
  4277d3:	movzx  edi,dx
  4277d6:	movsx  di,BYTE PTR [edi+ebx*1]
  4277db:	mov    ebx,0x3b50
  4277e0:	sub    di,bx
  4277e3:	xor    di,ax
  4277e6:	cmp    cx,di
  4277e9:	je     0x4277fd
  4277eb:	push   0x7a
  4277ed:	pop    edi
  4277ee:	inc    DWORD PTR [ebp-0x4]
  4277f1:	mov    cx,WORD PTR [ebp-0xc]
  4277f5:	cmp    WORD PTR [ebp-0x4],cx
  4277f9:	jb     0x4277a7
  4277fb:	jmp    0x427803
  4277fd:	inc    DWORD PTR [ebp-0x8]
  427800:	push   0x79
  427802:	pop    edi
  427803:	mov    esi,DWORD PTR [ebp+0x8]
  427806:	movzx  ecx,dx
  427809:	cmp    BYTE PTR [ecx+esi*1],0x0
  42780d:	je     0x427822
  42780f:	inc    edx
  427810:	cmp    edi,0x7a
  427813:	jne    0x427790
  427819:	xor    eax,eax
  42781b:	pop    edi
  42781c:	pop    esi
  42781d:	pop    ebx
  42781e:	leave  
  42781f:	ret    0x8
  427822:	mov    ecx,DWORD PTR [ebp-0x8]
  427825:	add    ecx,0xffffc4b0
  42782b:	xor    cx,ax
  42782e:	xor    eax,eax
  427830:	cmp    cx,WORD PTR [ebp-0x10]
  427834:	sete   al
  427837:	jmp    0x42781b
  427839:	push   ebp
  42783a:	mov    ebp,esp
  42783c:	sub    esp,0x50
  42783f:	push   edi
  427840:	mov    edi,eax
  427842:	mov    eax,DWORD PTR [edi+0x1a8]
  427848:	cmp    DWORD PTR [eax],0x0
  42784b:	jne    0x427854
  42784d:	xor    eax,eax
  42784f:	jmp    0x427984
  427854:	push   0x2c
  427856:	push   DWORD PTR [ebp+0x8]
  427859:	call   0x4275fe
  42785e:	mov    edx,DWORD PTR [edi+0x1ac]
  427864:	lea    eax,[edi+0x22]
  427867:	mov    DWORD PTR [ebp-0x4c],eax
  42786a:	lea    eax,[edi+0x44]
  42786d:	mov    DWORD PTR [ebp-0x48],eax
  427870:	lea    eax,[edi+0x66]
  427873:	mov    DWORD PTR [ebp-0x44],eax
  427876:	lea    eax,[edi+0x88]
  42787c:	mov    DWORD PTR [ebp-0x40],eax
  42787f:	lea    eax,[edi+0xaa]
  427885:	mov    DWORD PTR [ebp-0x3c],eax
  427888:	lea    eax,[edi+0xcc]
  42788e:	mov    DWORD PTR [ebp-0x38],eax
  427891:	lea    eax,[edi+0xee]
  427897:	mov    DWORD PTR [ebp-0x34],eax
  42789a:	lea    eax,[edi+0x110]
  4278a0:	mov    DWORD PTR [ebp-0x30],eax
  4278a3:	lea    eax,[edi+0x132]
  4278a9:	mov    DWORD PTR [ebp-0x2c],eax
  4278ac:	lea    eax,[edi+0x154]
  4278b2:	push   edi
  4278b3:	mov    DWORD PTR [ebp-0x50],edi
  4278b6:	mov    DWORD PTR [ebp-0x28],eax
  4278b9:	call   0x4279b8
  4278be:	push   eax
  4278bf:	mov    eax,DWORD PTR [edi+0x1a8]
  4278c5:	push   DWORD PTR [eax]
  4278c7:	call   0x42765a
  4278cc:	mov    DWORD PTR [ebp-0x10],eax
  4278cf:	test   eax,eax
  4278d1:	je     0x427984
  4278d7:	mov    ecx,DWORD PTR [eax+0x3c]
  4278da:	push   ebx
  4278db:	push   esi
  4278dc:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4278e0:	add    esi,eax
  4278e2:	mov    edi,DWORD PTR [esi+0x24]
  4278e5:	mov    ecx,DWORD PTR [esi+0x1c]
  4278e8:	mov    edx,DWORD PTR [esi+0x20]
  4278eb:	mov    ebx,DWORD PTR [esi+0x18]
  4278ee:	add    edi,eax
  4278f0:	mov    DWORD PTR [ebp-0x20],edi
  4278f3:	mov    edi,DWORD PTR [esi+0x14]
  4278f6:	add    ecx,eax
  4278f8:	add    edx,eax
  4278fa:	mov    DWORD PTR [ebp-0xc],ecx
  4278fd:	mov    DWORD PTR [ebp-0x1c],edx
  427900:	mov    DWORD PTR [ebp-0x8],edi
  427903:	cmp    edi,ebx
  427905:	ja     0x42790a
  427907:	mov    DWORD PTR [ebp-0x8],ebx
  42790a:	xor    ebx,ebx
  42790c:	mov    DWORD PTR [ebp-0x18],ebx
  42790f:	cmp    DWORD PTR [ebp-0x8],ebx
  427912:	jbe    0x427982
  427914:	jmp    0x427919
  427916:	mov    edx,DWORD PTR [ebp-0x1c]
  427919:	mov    edi,DWORD PTR [ebp-0x20]
  42791c:	movzx  edi,WORD PTR [edi+ebx*2]
  427920:	cmp    ebx,DWORD PTR [esi+0x18]
  427923:	jae    0x427982
  427925:	cmp    edi,DWORD PTR [esi+0x14]
  427928:	jae    0x427982
  42792a:	mov    ebx,DWORD PTR [edx+ebx*4]
  42792d:	mov    edx,DWORD PTR [ebp+0x8]
  427930:	mov    edi,DWORD PTR [ecx+edi*4]
  427933:	mov    DWORD PTR [ebp-0x4],edx
  427936:	lea    edx,[ebp-0x50]
  427939:	add    ebx,eax
  42793b:	add    edi,eax
  42793d:	sub    edx,DWORD PTR [ebp+0x8]
  427940:	mov    DWORD PTR [ebp-0x14],0xb
  427947:	mov    DWORD PTR [ebp-0x24],edx
  42794a:	mov    edx,DWORD PTR [ebp-0x4]
  42794d:	cmp    DWORD PTR [edx],0x0
  427950:	jne    0x42796d
  427952:	mov    eax,DWORD PTR [ebp-0x24]
  427955:	push   DWORD PTR [eax+edx*1]
  427958:	push   ebx
  427959:	call   0x427754
  42795e:	mov    ecx,DWORD PTR [ebp-0xc]
  427961:	test   eax,eax
  427963:	je     0x42796a
  427965:	mov    eax,DWORD PTR [ebp-0x4]
  427968:	mov    DWORD PTR [eax],edi
  42796a:	mov    eax,DWORD PTR [ebp-0x10]
  42796d:	add    DWORD PTR [ebp-0x4],0x4
  427971:	dec    DWORD PTR [ebp-0x14]
  427974:	jne    0x42794a
  427976:	mov    ebx,DWORD PTR [ebp-0x18]
  427979:	inc    ebx
  42797a:	mov    DWORD PTR [ebp-0x18],ebx
  42797d:	cmp    ebx,DWORD PTR [ebp-0x8]
  427980:	jb     0x427916
  427982:	pop    esi
  427983:	pop    ebx
  427984:	pop    edi
  427985:	leave  
  427986:	ret    0x4
  427989:	push   ebp
  42798a:	mov    ebp,esp
  42798c:	mov    eax,DWORD PTR [ebp+0x8]
  42798f:	push   esi
  427990:	push   DWORD PTR [eax+0x1d8]
  427996:	lea    esi,[eax+0x198]
  42799c:	mov    eax,DWORD PTR [ebp+0x8]
  42799f:	call   0x427839
  4279a4:	mov    ecx,DWORD PTR [esi]
  4279a6:	mov    DWORD PTR [ecx],eax
  4279a8:	mov    eax,DWORD PTR [esi]
  4279aa:	xor    ecx,ecx
  4279ac:	cmp    DWORD PTR [eax],ecx
  4279ae:	pop    esi
  4279af:	setne  cl
  4279b2:	mov    eax,ecx
  4279b4:	pop    ebp
  4279b5:	ret    0x4
  4279b8:	mov    ecx,DWORD PTR [edi+0x188]
  4279be:	push   ebx
  4279bf:	jmp    0x4279d4
  4279c1:	xor    eax,0x8a8c
  4279c6:	add    eax,0x3b50
  4279cb:	mov    WORD PTR [ecx],ax
  4279ce:	add    ecx,0x2
  4279d1:	add    edx,0x2
  4279d4:	movzx  eax,WORD PTR [edx]
  4279d7:	mov    ebx,0x4e3c
  4279dc:	cmp    ax,bx
  4279df:	jne    0x4279c1
  4279e1:	xor    eax,eax
  4279e3:	mov    WORD PTR [ecx],ax
  4279e6:	mov    eax,DWORD PTR [edi+0x188]
  4279ec:	pop    ebx
  4279ed:	ret    
  4279ee:	push   edi
  4279ef:	mov    edi,eax
  4279f1:	mov    eax,DWORD PTR [esi+0x188]
  4279f7:	shl    edi,0x6
  4279fa:	add    eax,edi
  4279fc:	jmp    0x427a08
  4279fe:	xor    cl,0x73
  427a01:	sub    cl,0x9
  427a04:	mov    BYTE PTR [eax],cl
  427a06:	inc    eax
  427a07:	inc    edx
  427a08:	mov    cl,BYTE PTR [edx]
  427a0a:	cmp    cl,0x7a
  427a0d:	jne    0x4279fe
  427a0f:	mov    BYTE PTR [eax],0x0
  427a12:	mov    eax,DWORD PTR [esi+0x188]
  427a18:	add    eax,edi
  427a1a:	pop    edi
  427a1b:	ret    
  427a1c:	push   ebp
  427a1d:	mov    ebp,esp
  427a1f:	sub    esp,0x38
  427a22:	push   ebx
  427a23:	mov    ebx,0xf89c85b9
  427a28:	mov    DWORD PTR [ebp-0x4],ebx
  427a2b:	lea    eax,[ebx-0x1]
  427a2e:	push   esi
  427a2f:	mov    DWORD PTR [ebp-0x24],eax
  427a32:	mov    ecx,DWORD PTR [ebp-0x4]
  427a35:	mov    edx,DWORD PTR [ebp+0x8]
  427a38:	mov    esi,0x7510899
  427a3d:	push   edi
  427a3e:	xor    ecx,esi
  427a40:	mov    edi,0x3272e0
  427a45:	add    ecx,edi
  427a47:	cmp    edx,ecx
  427a49:	je     0x427bb7
  427a4f:	mov    ecx,DWORD PTR [ebp-0x4]
  427a52:	mov    edx,DWORD PTR [ebp+0xc]
  427a55:	xor    ecx,esi
  427a57:	add    ecx,edi
  427a59:	cmp    edx,ecx
  427a5b:	je     0x427bb7
  427a61:	mov    ecx,DWORD PTR [ebp+0x10]
  427a64:	mov    DWORD PTR [ebp-0x18],ecx
  427a67:	mov    ecx,DWORD PTR [ebp+0xc]
  427a6a:	mov    DWORD PTR [ebp-0x14],ecx
  427a6d:	mov    ecx,DWORD PTR [ebp+0x8]
  427a70:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  427a77:	mov    DWORD PTR [ebp-0x20],eax
  427a7a:	mov    DWORD PTR [ebp-0x10],ebx
  427a7d:	mov    DWORD PTR [ebp+0xc],eax
  427a80:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  427a87:	mov    eax,DWORD PTR [ebp+0xc]
  427a8a:	mov    DWORD PTR [ebp-0xc],ecx
  427a8d:	xor    eax,esi
  427a8f:	mov    ecx,0xffcd8d20
  427a94:	sub    ecx,eax
  427a96:	add    ecx,DWORD PTR [ebp-0x14]
  427a99:	mov    DWORD PTR [ebp+0x8],ecx
  427a9c:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  427aa3:	jmp    0x427ba7
  427aa8:	mov    eax,DWORD PTR [ebp+0xc]
  427aab:	mov    ecx,DWORD PTR [ebp+0xc]
  427aae:	xor    eax,esi
  427ab0:	xor    ecx,esi
  427ab2:	lea    ecx,[eax+ecx*1+0x64e5c0]
  427ab9:	mov    eax,DWORD PTR [ebp+0x8]
  427abc:	xor    edx,edx
  427abe:	div    ecx
  427ac0:	mov    eax,DWORD PTR [ebp+0x10]
  427ac3:	mov    ecx,DWORD PTR [ebp+0xc]
  427ac6:	xor    eax,esi
  427ac8:	xor    ecx,esi
  427aca:	sub    eax,ecx
  427acc:	cmp    edx,eax
  427ace:	jne    0x427b63
  427ad4:	mov    eax,DWORD PTR [ebp+0x8]
  427ad7:	add    eax,DWORD PTR [ebp-0xc]
  427ada:	mov    dl,BYTE PTR [eax]
  427adc:	mov    eax,DWORD PTR [ebp-0x10]
  427adf:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae2:	xor    eax,esi
  427ae4:	xor    ecx,esi
  427ae6:	add    eax,edi
  427ae8:	add    ecx,edi
  427aea:	cmp    eax,ecx
  427aec:	jae    0x427b34
  427aee:	lea    ecx,[eax-0x3272e0]
  427af4:	mov    DWORD PTR [ebp-0x4],ecx
  427af7:	mov    ebx,DWORD PTR [ebp-0x4]
  427afa:	xor    ebx,esi
  427afc:	add    ebx,0x7f55d8fb
  427b02:	lea    ecx,[ebp+eax*4-0x38]
  427b06:	mov    DWORD PTR [ecx],ebx
  427b08:	mov    ebx,DWORD PTR [ecx]
  427b0a:	cmp    ebx,0x244ecbda
  427b10:	jbe    0x427b1a
  427b12:	add    DWORD PTR [ecx],0x405fc1d
  427b18:	jmp    0x427b20
  427b1a:	add    DWORD PTR [ecx],0xfdaf43e3
  427b20:	mov    ecx,DWORD PTR [ebp-0x8]
  427b23:	xor    ecx,esi
  427b25:	inc    eax
  427b26:	inc    DWORD PTR [ebp-0x4]
  427b29:	add    ecx,edi
  427b2b:	cmp    eax,ecx
  427b2d:	jb     0x427af7
  427b2f:	mov    ebx,0xf89c85b9
  427b34:	mov    eax,DWORD PTR [ebp-0x18]
  427b37:	test   eax,eax
  427b39:	jne    0x427b43
  427b3b:	xor    dl,0x73
  427b3e:	sub    dl,0x9
  427b41:	jmp    0x427b59
  427b43:	mov    eax,DWORD PTR [ebp-0x1c]
  427b46:	xor    al,0x99
  427b48:	mov    cl,0x20
  427b4a:	sub    cl,al
  427b4c:	add    dl,cl
  427b4e:	mov    ecx,DWORD PTR [ebp-0x20]
  427b51:	xor    cl,0x99
  427b54:	sub    cl,0x20
  427b57:	ror    dl,cl
  427b59:	xor    eax,eax
  427b5b:	mov    eax,DWORD PTR [ebp+0x8]
  427b5e:	add    eax,DWORD PTR [ebp-0xc]
  427b61:	mov    BYTE PTR [eax],dl
  427b63:	mov    eax,DWORD PTR [ebp+0x8]
  427b66:	mov    ecx,DWORD PTR [ebp-0x10]
  427b69:	sub    eax,edi
  427b6b:	xor    eax,esi
  427b6d:	cmp    eax,ecx
  427b6f:	jne    0x427b95
  427b71:	mov    eax,DWORD PTR [ebp+0x10]
  427b74:	mov    ecx,DWORD PTR [ebp+0xc]
  427b77:	xor    eax,esi
  427b79:	xor    ecx,esi
  427b7b:	sub    eax,ecx
  427b7d:	sub    eax,edi
  427b7f:	xor    eax,esi
  427b81:	mov    DWORD PTR [ebp+0x10],eax
  427b84:	mov    eax,DWORD PTR [ebp+0xc]
  427b87:	xor    eax,esi
  427b89:	mov    ecx,0xffcd8d20
  427b8e:	sub    ecx,eax
  427b90:	add    ecx,DWORD PTR [ebp-0x14]
  427b93:	jmp    0x427ba4
  427b95:	mov    eax,DWORD PTR [ebp+0xc]
  427b98:	xor    eax,esi
  427b9a:	mov    ecx,0xffcd8d20
  427b9f:	sub    ecx,eax
  427ba1:	add    ecx,DWORD PTR [ebp+0x8]
  427ba4:	mov    DWORD PTR [ebp+0x8],ecx
  427ba7:	mov    eax,DWORD PTR [ebp+0x10]
  427baa:	cmp    eax,ebx
  427bac:	jne    0x427aa8
  427bb2:	mov    eax,DWORD PTR [ebp-0x24]
  427bb5:	jmp    0x427bba
  427bb7:	mov    eax,DWORD PTR [ebp-0x4]
  427bba:	xor    eax,esi
  427bbc:	add    eax,edi
  427bbe:	pop    edi
  427bbf:	pop    esi
  427bc0:	pop    ebx
  427bc1:	leave  
  427bc2:	ret    0xc
  427bc5:	push   ebp
  427bc6:	mov    ebp,esp
  427bc8:	sub    esp,0x14
  427bcb:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427bd2:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427bd9:	mov    eax,DWORD PTR [ebx]
  427bdb:	mov    DWORD PTR [ebp-0x8],eax
  427bde:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427be5:	push   esi
  427be6:	push   edi
  427be7:	mov    DWORD PTR [ebp-0x14],0xead718d9
  427bee:	mov    edi,DWORD PTR [ebp-0x4]
  427bf1:	mov    ecx,DWORD PTR [ebp-0x10]
  427bf4:	mov    eax,0x7510899
  427bf9:	xor    edi,eax
  427bfb:	mov    edx,0x3272e0
  427c00:	xor    ecx,eax
  427c02:	add    edi,edx
  427c04:	add    ecx,edx
  427c06:	imul   edi,ecx
  427c09:	jmp    0x427c51
  427c0b:	mov    ecx,DWORD PTR [ebp-0x8]
  427c0e:	mov    esi,DWORD PTR [ebp-0x4]
  427c11:	xor    ecx,eax
  427c13:	xor    esi,eax
  427c15:	add    ecx,edx
  427c17:	add    esi,edx
  427c19:	test   esi,ecx
  427c1b:	mov    esi,DWORD PTR [ebp-0x8]
  427c1e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c21:	je     0x427c38
  427c23:	xor    ecx,eax
  427c25:	xor    esi,eax
  427c27:	add    ecx,edx
  427c29:	add    esi,edx
  427c2b:	shr    esi,cl
  427c2d:	mov    ecx,DWORD PTR [ebp-0x14]
  427c30:	xor    ecx,eax
  427c32:	add    ecx,edx
  427c34:	xor    esi,ecx
  427c36:	jmp    0x427c42
  427c38:	xor    esi,eax
  427c3a:	xor    ecx,eax
  427c3c:	add    esi,edx
  427c3e:	add    ecx,edx
  427c40:	shr    esi,cl
  427c42:	mov    DWORD PTR [ebp-0x8],esi
  427c45:	mov    ecx,DWORD PTR [ebp-0x4]
  427c48:	xor    ecx,eax
  427c4a:	lea    edi,[edi+ecx*1+0x3272e0]
  427c51:	mov    ecx,DWORD PTR [ebp-0xc]
  427c54:	mov    esi,DWORD PTR [ebp-0x4]
  427c57:	xor    esi,eax
  427c59:	xor    ecx,eax
  427c5b:	sub    ecx,esi
  427c5d:	cmp    edi,ecx
  427c5f:	jbe    0x427c0b
  427c61:	mov    eax,DWORD PTR [ebp-0x8]
  427c64:	pop    edi
  427c65:	mov    DWORD PTR [ebx],eax
  427c67:	mov    eax,DWORD PTR [ebp-0x8]
  427c6a:	pop    esi
  427c6b:	leave  
  427c6c:	ret    
  427c6d:	push   ebp
  427c6e:	mov    ebp,esp
  427c70:	sub    esp,0x420
  427c76:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  427c7d:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427c84:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  427c8b:	push   ebx
  427c8c:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  427c93:	mov    eax,DWORD PTR [ebp-0x14]
  427c96:	push   esi
  427c97:	mov    esi,0x7510899
  427c9c:	push   edi
  427c9d:	xor    eax,esi
  427c9f:	mov    edi,0x3272e0
  427ca4:	add    eax,edi
  427ca6:	mov    DWORD PTR [ebp-0x8],eax
  427ca9:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  427cb0:	mov    DWORD PTR [ebp-0x4],0xead718d9
  427cb7:	mov    DWORD PTR [ebp-0x10],0x8
  427cbe:	mov    ecx,ecx
  427cc0:	mov    eax,DWORD PTR [ebp-0xc]
  427cc3:	mov    ecx,DWORD PTR [ebp-0x14]
  427cc6:	xor    eax,esi
  427cc8:	xor    ecx,esi
  427cca:	add    eax,edi
  427ccc:	add    ecx,edi
  427cce:	imul   eax,ecx
  427cd1:	jmp    0x427d04
  427cd3:	mov    eax,DWORD PTR [ebp-0x4]
  427cd6:	sub    eax,edi
  427cd8:	xor    eax,esi
  427cda:	mov    DWORD PTR [ebp-0x8],eax
  427cdd:	lea    ebx,[ebp-0x8]
  427ce0:	call   0x427bc5
  427ce5:	mov    DWORD PTR [ebp-0x8],eax
  427ce8:	mov    eax,DWORD PTR [ebp-0x8]
  427ceb:	mov    ecx,DWORD PTR [ebp-0x4]
  427cee:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427cf5:	mov    eax,DWORD PTR [ebp-0xc]
  427cf8:	mov    ecx,DWORD PTR [ebp-0x4]
  427cfb:	xor    eax,esi
  427cfd:	lea    eax,[eax+ecx*1+0x3272e0]
  427d04:	mov    DWORD PTR [ebp-0x4],eax
  427d07:	mov    eax,DWORD PTR [ebp-0x18]
  427d0a:	mov    ecx,DWORD PTR [ebp-0xc]
  427d0d:	xor    ecx,esi
  427d0f:	xor    eax,esi
  427d11:	sub    eax,ecx
  427d13:	mov    ecx,DWORD PTR [ebp-0x4]
  427d16:	cmp    ecx,eax
  427d18:	jbe    0x427cd3
  427d1a:	mov    eax,DWORD PTR [ebp-0x1c]
  427d1d:	xor    eax,esi
  427d1f:	add    eax,edi
  427d21:	mov    DWORD PTR [ebp-0x8],eax
  427d24:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  427d2b:	mov    ebx,ebx
  427d2d:	jmp    0x427d90
  427d2f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d32:	mov    eax,DWORD PTR [ebp-0x8]
  427d35:	xor    ecx,esi
  427d37:	add    ecx,edi
  427d39:	shr    eax,cl
  427d3b:	mov    DWORD PTR [ebp-0x4],eax
  427d3e:	mov    eax,DWORD PTR [ebp+0x8]
  427d41:	mov    cl,BYTE PTR [eax]
  427d43:	mov    BYTE PTR [ebp+0xb],cl
  427d46:	mov    cl,BYTE PTR [ebp+0xb]
  427d49:	mov    edx,DWORD PTR [ebp-0x8]
  427d4c:	movzx  ecx,cl
  427d4f:	xor    ecx,edx
  427d51:	mov    DWORD PTR [ebp+0x8],ecx
  427d54:	mov    ecx,DWORD PTR [ebp-0x18]
  427d57:	mov    edx,DWORD PTR [ebp+0x8]
  427d5a:	xor    ecx,esi
  427d5c:	add    ecx,edi
  427d5e:	and    ecx,edx
  427d60:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427d67:	mov    edx,DWORD PTR [ebp-0x4]
  427d6a:	xor    ecx,edx
  427d6c:	mov    DWORD PTR [ebp-0x8],ecx
  427d6f:	mov    ecx,DWORD PTR [ebp-0xc]
  427d72:	xor    ecx,esi
  427d74:	lea    eax,[eax+ecx*1+0x3272e0]
  427d7b:	mov    DWORD PTR [ebp+0x8],eax
  427d7e:	mov    eax,DWORD PTR [ebp-0xc]
  427d81:	xor    eax,esi
  427d83:	mov    ecx,0xffcd8d20
  427d88:	sub    ecx,eax
  427d8a:	add    ecx,DWORD PTR [ebp-0x10]
  427d8d:	mov    DWORD PTR [ebp-0x10],ecx
  427d90:	mov    eax,DWORD PTR [ebp-0x14]
  427d93:	mov    ecx,DWORD PTR [ebp-0x10]
  427d96:	xor    eax,esi
  427d98:	add    eax,edi
  427d9a:	cmp    ecx,eax
  427d9c:	jne    0x427d2f
  427d9e:	mov    eax,DWORD PTR [ebp-0x1c]
  427da1:	mov    ecx,DWORD PTR [ebp-0x8]
  427da4:	xor    eax,esi
  427da6:	add    eax,edi
  427da8:	pop    edi
  427da9:	pop    esi
  427daa:	xor    eax,ecx
  427dac:	pop    ebx
  427dad:	leave  
  427dae:	ret    0x4
  427db1:	push   ebp
  427db2:	mov    ebp,esp
  427db4:	mov    eax,DWORD PTR [ebp+0x1c]
  427db7:	mov    ecx,DWORD PTR [ebp+0x8]
  427dba:	mov    edx,DWORD PTR [ebp+0x10]
  427dbd:	mov    eax,DWORD PTR [eax+0x190]
  427dc3:	mov    eax,DWORD PTR [eax]
  427dc5:	sub    esp,0x64
  427dc8:	push   ebx
  427dc9:	push   esi
  427dca:	push   edi
  427dcb:	mov    edi,0x7510899
  427dd0:	xor    ecx,edi
  427dd2:	mov    ebx,0x3272e0
  427dd7:	add    ecx,ebx
  427dd9:	cmp    ecx,edx
  427ddb:	jne    0x427dec
  427ddd:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  427de7:	jmp    0x4282e9
  427dec:	mov    ecx,DWORD PTR [ebp+0x8]
  427def:	mov    esi,DWORD PTR [ebp+0x14]
  427df2:	mov    edx,DWORD PTR [esi]
  427df4:	xor    ecx,edi
  427df6:	add    ecx,ebx
  427df8:	cmp    edx,ecx
  427dfa:	je     0x4282a4
  427e00:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e03:	mov    DWORD PTR [ebp-0x1c],eax
  427e06:	mov    DWORD PTR [ebp+0x1c],ecx
  427e09:	mov    ecx,DWORD PTR [ebp+0x18]
  427e0c:	mov    eax,DWORD PTR [esi]
  427e0e:	mov    DWORD PTR [ebp-0x20],eax
  427e11:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427e18:	mov    edx,0xf89c85b8
  427e1d:	mov    DWORD PTR [ebp-0x8],edx
  427e20:	mov    eax,DWORD PTR [ebp+0x1c]
  427e23:	mov    DWORD PTR [ebp+0x1c],eax
  427e26:	mov    eax,DWORD PTR [ebp+0x1c]
  427e29:	mov    eax,DWORD PTR [eax+0x190]
  427e2f:	mov    eax,DWORD PTR [eax]
  427e31:	mov    DWORD PTR [ebp-0x24],ecx
  427e34:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e37:	mov    ecx,DWORD PTR [ecx+0x190]
  427e3d:	mov    ecx,DWORD PTR [ecx]
  427e3f:	add    ecx,DWORD PTR [eax+0x3c]
  427e42:	mov    DWORD PTR [ebp+0x10],ecx
  427e45:	mov    eax,DWORD PTR [ebp+0x8]
  427e48:	xor    eax,edi
  427e4a:	add    eax,ebx
  427e4c:	mov    DWORD PTR [ebp-0x4],eax
  427e4f:	mov    eax,DWORD PTR [ebp+0x8]
  427e52:	xor    eax,edi
  427e54:	add    eax,ebx
  427e56:	mov    DWORD PTR [ebp+0x18],eax
  427e59:	mov    eax,DWORD PTR [ebp+0x10]
  427e5c:	mov    eax,DWORD PTR [eax+0x50]
  427e5f:	sub    eax,0xc
  427e62:	mov    DWORD PTR [ebp-0x28],eax
  427e65:	mov    eax,DWORD PTR [ebp+0x10]
  427e68:	mov    eax,DWORD PTR [eax+0x38]
  427e6b:	mov    ecx,DWORD PTR [ebp+0x10]
  427e6e:	dec    eax
  427e6f:	test   DWORD PTR [ecx+0x54],eax
  427e72:	mov    eax,DWORD PTR [ebp+0x10]
  427e75:	je     0x427e8f
  427e77:	mov    eax,DWORD PTR [eax+0x38]
  427e7a:	mov    ecx,DWORD PTR [ebp+0x10]
  427e7d:	mov    ecx,DWORD PTR [ecx+0x54]
  427e80:	dec    eax
  427e81:	not    eax
  427e83:	and    ecx,eax
  427e85:	mov    eax,DWORD PTR [ebp+0x10]
  427e88:	mov    eax,DWORD PTR [eax+0x38]
  427e8b:	add    eax,ecx
  427e8d:	jmp    0x427e92
  427e8f:	mov    eax,DWORD PTR [eax+0x54]
  427e92:	mov    DWORD PTR [ebp+0x1c],eax
  427e95:	mov    eax,DWORD PTR [ebp+0x8]
  427e98:	xor    eax,edi
  427e9a:	add    eax,ebx
  427e9c:	mov    DWORD PTR [ebp+0x18],eax
  427e9f:	mov    eax,DWORD PTR [ebp+0x8]
  427ea2:	xor    eax,edi
  427ea4:	add    eax,ebx
  427ea6:	mov    DWORD PTR [ebp+0x18],eax
  427ea9:	mov    eax,DWORD PTR [ebp+0x8]
  427eac:	mov    ecx,DWORD PTR [ebp-0x24]
  427eaf:	xor    eax,edi
  427eb1:	add    eax,ebx
  427eb3:	mov    DWORD PTR [ecx],eax
  427eb5:	mov    DWORD PTR [ebp+0x18],edx
  427eb8:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427ebf:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427ec6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427ecd:	mov    eax,DWORD PTR [ebp-0x8]
  427ed0:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ed3:	xor    eax,edi
  427ed5:	add    eax,ebx
  427ed7:	imul   eax,ecx
  427eda:	mov    ecx,DWORD PTR [ebp+0x8]
  427edd:	mov    edx,DWORD PTR [ebp-0x28]
  427ee0:	xor    ecx,edi
  427ee2:	lea    ecx,[ecx+edx*1+0x3272e0]
  427ee9:	cmp    eax,ecx
  427eeb:	jae    0x42829d
  427ef1:	mov    eax,DWORD PTR [ebp+0x8]
  427ef4:	xor    eax,edi
  427ef6:	add    eax,ebx
  427ef8:	mov    DWORD PTR [ebp+0x18],eax
  427efb:	mov    eax,DWORD PTR [ebp+0x1c]
  427efe:	add    eax,DWORD PTR [ebp-0x1c]
  427f01:	mov    DWORD PTR [ebp-0x4],eax
  427f04:	push   DWORD PTR [ebp-0x4]
  427f07:	mov    esi,DWORD PTR [ebp-0x1c]
  427f0a:	mov    ecx,DWORD PTR [ebp+0x10]
  427f0d:	call   0x426ff3
  427f12:	mov    DWORD PTR [ebp+0xc],eax
  427f15:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  427f1c:	mov    eax,DWORD PTR [ebp-0x18]
  427f1f:	xor    eax,edi
  427f21:	add    eax,ebx
  427f23:	push   eax
  427f24:	lea    eax,[ebp-0x40]
  427f27:	push   eax
  427f28:	call   0x4275fe
  427f2d:	mov    eax,DWORD PTR [ebp+0xc]
  427f30:	test   eax,eax
  427f32:	je     0x427f82
  427f34:	mov    eax,DWORD PTR [ebp-0x18]
  427f37:	xor    eax,edi
  427f39:	add    eax,ebx
  427f3b:	push   eax
  427f3c:	push   DWORD PTR [ebp+0xc]
  427f3f:	lea    eax,[ebp-0x40]
  427f42:	push   eax
  427f43:	call   0x4274a5
  427f48:	mov    eax,DWORD PTR [ebp-0x4]
  427f4b:	mov    DWORD PTR [ebp-0x18],eax
  427f4e:	mov    eax,DWORD PTR [ebp-0x18]
  427f51:	mov    ecx,DWORD PTR [ebp-0x1c]
  427f54:	sub    eax,ecx
  427f56:	mov    DWORD PTR [ebp-0x18],eax
  427f59:	mov    eax,DWORD PTR [ebp+0xc]
  427f5c:	mov    ecx,DWORD PTR [ebp+0xc]
  427f5f:	mov    eax,DWORD PTR [eax+0x10]
  427f62:	add    eax,DWORD PTR [ecx+0xc]
  427f65:	mov    ecx,DWORD PTR [ebp-0x18]
  427f68:	cmp    ecx,eax
  427f6a:	jb     0x427f82
  427f6c:	mov    eax,DWORD PTR [ebp+0xc]
  427f6f:	mov    eax,DWORD PTR [eax+0xc]
  427f72:	mov    ecx,DWORD PTR [ebp+0xc]
  427f75:	add    eax,DWORD PTR [ecx+0x8]
  427f78:	mov    ecx,DWORD PTR [ebp-0x18]
  427f7b:	sub    eax,ecx
  427f7d:	jmp    0x428270
  427f82:	push   0xc
  427f84:	push   DWORD PTR [ebp-0x4]
  427f87:	lea    eax,[ebp-0x4c]
  427f8a:	push   eax
  427f8b:	call   0x4274a5
  427f90:	mov    eax,0xf89c85b9
  427f95:	mov    DWORD PTR [ebp-0x2c],eax
  427f98:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427f9f:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  427fa6:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427fad:	lea    ecx,[ebp-0x2c]
  427fb0:	mov    DWORD PTR [ebp-0xc],ecx
  427fb3:	lea    ecx,[ebp-0x30]
  427fb6:	mov    DWORD PTR [ebp-0x10],ecx
  427fb9:	lea    ecx,[ebp-0x34]
  427fbc:	mov    DWORD PTR [ebp+0xc],ecx
  427fbf:	lea    ecx,[ebp-0x38]
  427fc2:	mov    DWORD PTR [ebp-0x14],ecx
  427fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  427fc8:	xor    ecx,edi
  427fca:	add    ecx,ebx
  427fcc:	mov    DWORD PTR [ebp-0x18],ecx
  427fcf:	jmp    0x4281cb
  427fd4:	cmp    eax,0xf89c85bb
  427fd9:	je     0x4281dd
  427fdf:	mov    ecx,DWORD PTR [ebp-0x8]
  427fe2:	xor    ecx,edi
  427fe4:	mov    esi,eax
  427fe6:	add    ecx,ebx
  427fe8:	mov    DWORD PTR [ebp+0x18],ecx
  427feb:	mov    eax,DWORD PTR [ebp-0x18]
  427fee:	xor    esi,edi
  427ff0:	lea    eax,[eax+esi*1+0x3272e0]
  427ff7:	mov    DWORD PTR [ebp-0x18],eax
  427ffa:	mov    eax,DWORD PTR [ebp-0x8]
  427ffd:	mov    ecx,DWORD PTR [ebp-0x18]
  428000:	xor    eax,edi
  428002:	add    eax,ebx
  428004:	cmp    ecx,eax
  428006:	jne    0x42801b
  428008:	mov    eax,DWORD PTR [ebp+0x8]
  42800b:	xor    eax,edi
  42800d:	add    eax,ebx
  42800f:	push   eax
  428010:	push   0xc
  428012:	lea    eax,[ebp-0x4c]
  428015:	push   eax
  428016:	call   0x427a1c
  42801b:	mov    eax,DWORD PTR [ebp-0xc]
  42801e:	mov    eax,DWORD PTR [eax]
  428020:	xor    eax,edi
  428022:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428029:	mov    ecx,DWORD PTR [ebp+0x8]
  42802c:	xor    ecx,edi
  42802e:	movzx  eax,al
  428031:	add    ecx,ebx
  428033:	cmp    eax,ecx
  428035:	je     0x4281b3
  42803b:	mov    eax,DWORD PTR [ebp-0x10]
  42803e:	mov    eax,DWORD PTR [eax]
  428040:	xor    eax,edi
  428042:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428049:	mov    ecx,DWORD PTR [ebp+0x8]
  42804c:	xor    ecx,edi
  42804e:	movzx  eax,al
  428051:	add    ecx,ebx
  428053:	cmp    eax,ecx
  428055:	je     0x4281b3
  42805b:	mov    eax,DWORD PTR [ebp+0xc]
  42805e:	mov    eax,DWORD PTR [eax]
  428060:	xor    eax,edi
  428062:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428069:	mov    ecx,DWORD PTR [ebp+0x8]
  42806c:	xor    ecx,edi
  42806e:	movzx  eax,al
  428071:	add    ecx,ebx
  428073:	cmp    eax,ecx
  428075:	je     0x4281b3
  42807b:	mov    eax,DWORD PTR [ebp-0x14]
  42807e:	mov    eax,DWORD PTR [eax]
  428080:	xor    eax,edi
  428082:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428089:	mov    ecx,DWORD PTR [ebp+0x8]
  42808c:	xor    ecx,edi
  42808e:	movzx  eax,al
  428091:	add    ecx,ebx
  428093:	cmp    eax,ecx
  428095:	je     0x4281b3
  42809b:	mov    eax,DWORD PTR [ebp-0x10]
  42809e:	mov    eax,DWORD PTR [eax]
  4280a0:	xor    eax,edi
  4280a2:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  4280a9:	mov    ecx,DWORD PTR [ebp-0xc]
  4280ac:	mov    ecx,DWORD PTR [ecx]
  4280ae:	xor    ecx,edi
  4280b0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  4280b7:	xor    al,cl
  4280b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4280bc:	mov    ecx,DWORD PTR [ecx]
  4280be:	xor    ecx,edi
  4280c0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  4280c7:	or     al,cl
  4280c9:	mov    ecx,DWORD PTR [ebp-0xc]
  4280cc:	mov    ecx,DWORD PTR [ecx]
  4280ce:	xor    ecx,edi
  4280d0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4280d7:	cmp    cl,al
  4280d9:	jne    0x4281b3
  4280df:	mov    eax,DWORD PTR [ebp+0xc]
  4280e2:	mov    eax,DWORD PTR [eax]
  4280e4:	xor    eax,edi
  4280e6:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  4280ed:	mov    ecx,DWORD PTR [ebp-0x10]
  4280f0:	mov    ecx,DWORD PTR [ecx]
  4280f2:	xor    ecx,edi
  4280f4:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  4280fb:	xor    al,cl
  4280fd:	mov    ecx,DWORD PTR [ebp-0x14]
  428100:	mov    ecx,DWORD PTR [ecx]
  428102:	xor    ecx,edi
  428104:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42810b:	or     al,cl
  42810d:	mov    ecx,DWORD PTR [ebp-0x10]
  428110:	mov    ecx,DWORD PTR [ecx]
  428112:	xor    ecx,edi
  428114:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42811b:	cmp    cl,al
  42811d:	jne    0x4281b3
  428123:	mov    eax,DWORD PTR [ebp-0x14]
  428126:	mov    eax,DWORD PTR [eax]
  428128:	xor    eax,edi
  42812a:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428131:	mov    ecx,DWORD PTR [ebp+0xc]
  428134:	mov    ecx,DWORD PTR [ecx]
  428136:	xor    ecx,edi
  428138:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42813f:	xor    al,cl
  428141:	mov    ecx,DWORD PTR [ebp-0xc]
  428144:	mov    ecx,DWORD PTR [ecx]
  428146:	xor    ecx,edi
  428148:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42814f:	or     al,cl
  428151:	mov    ecx,DWORD PTR [ebp+0xc]
  428154:	mov    ecx,DWORD PTR [ecx]
  428156:	xor    ecx,edi
  428158:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42815f:	cmp    cl,al
  428161:	jne    0x4281b3
  428163:	mov    eax,DWORD PTR [ebp-0x14]
  428166:	mov    eax,DWORD PTR [eax]
  428168:	xor    eax,edi
  42816a:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428171:	mov    ecx,DWORD PTR [ebp-0xc]
  428174:	mov    ecx,DWORD PTR [ecx]
  428176:	xor    ecx,edi
  428178:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42817f:	xor    al,cl
  428181:	mov    ecx,DWORD PTR [ebp-0x10]
  428184:	mov    ecx,DWORD PTR [ecx]
  428186:	xor    ecx,edi
  428188:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42818f:	or     al,cl
  428191:	mov    ecx,DWORD PTR [ebp-0x14]
  428194:	mov    ecx,DWORD PTR [ecx]
  428196:	xor    ecx,edi
  428198:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42819f:	cmp    cl,al
  4281a1:	jne    0x4281b3
  4281a3:	lea    eax,[ebp-0x4c]
  4281a6:	push   eax
  4281a7:	call   0x427c6d
  4281ac:	mov    ecx,DWORD PTR [ebp-0x44]
  4281af:	cmp    eax,ecx
  4281b1:	je     0x4281bd
  4281b3:	mov    eax,DWORD PTR [ebp+0x8]
  4281b6:	xor    eax,edi
  4281b8:	add    eax,ebx
  4281ba:	mov    DWORD PTR [ebp+0x18],eax
  4281bd:	mov    eax,DWORD PTR [ebp-0x8]
  4281c0:	xor    eax,edi
  4281c2:	lea    eax,[eax+esi*1+0x3272e0]
  4281c9:	xor    eax,edi
  4281cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4281ce:	mov    edx,DWORD PTR [ebp+0x18]
  4281d1:	xor    ecx,edi
  4281d3:	add    ecx,ebx
  4281d5:	cmp    edx,ecx
  4281d7:	je     0x427fd4
  4281dd:	mov    eax,DWORD PTR [ebp+0x8]
  4281e0:	mov    ecx,DWORD PTR [ebp+0x18]
  4281e3:	xor    eax,edi
  4281e5:	add    eax,ebx
  4281e7:	cmp    ecx,eax
  4281e9:	jne    0x4281fc
  4281eb:	mov    eax,DWORD PTR [ebp-0x8]
  4281ee:	mov    ecx,DWORD PTR [ebp+0x1c]
  4281f1:	xor    eax,edi
  4281f3:	lea    eax,[eax+ecx*1+0x3272e0]
  4281fa:	jmp    0x428273
  4281fc:	push   0x18
  4281fe:	push   DWORD PTR [ebp-0x4]
  428201:	lea    eax,[ebp-0x64]
  428204:	push   eax
  428205:	call   0x4274a5
  42820a:	mov    eax,DWORD PTR [ebp+0x8]
  42820d:	mov    ecx,DWORD PTR [ebp-0x18]
  428210:	xor    eax,edi
  428212:	add    eax,ebx
  428214:	cmp    eax,ecx
  428216:	je     0x42822b
  428218:	mov    eax,DWORD PTR [ebp+0x8]
  42821b:	xor    eax,edi
  42821d:	add    eax,ebx
  42821f:	push   eax
  428220:	push   0x18
  428222:	lea    eax,[ebp-0x64]
  428225:	push   eax
  428226:	call   0x427a1c
  42822b:	mov    eax,DWORD PTR [ebp-0x4]
  42822e:	add    eax,0x18
  428231:	mov    DWORD PTR [ebp+0x18],eax
  428234:	push   DWORD PTR [ebp-0x50]
  428237:	push   DWORD PTR [ebp+0x18]
  42823a:	mov    eax,DWORD PTR [ebp-0x54]
  42823d:	add    eax,DWORD PTR [ebp-0x20]
  428240:	push   eax
  428241:	call   0x4274a5
  428246:	mov    eax,DWORD PTR [ebp+0x8]
  428249:	mov    ecx,DWORD PTR [ebp-0x18]
  42824c:	xor    eax,edi
  42824e:	add    eax,ebx
  428250:	cmp    eax,ecx
  428252:	je     0x428265
  428254:	push   0x0
  428256:	push   DWORD PTR [ebp-0x50]
  428259:	mov    eax,DWORD PTR [ebp-0x54]
  42825c:	add    eax,DWORD PTR [ebp-0x20]
  42825f:	push   eax
  428260:	call   0x427a1c
  428265:	mov    eax,DWORD PTR [ebp-0x24]
  428268:	mov    ecx,DWORD PTR [ebp-0x50]
  42826b:	add    DWORD PTR [eax],ecx
  42826d:	mov    eax,DWORD PTR [ebp-0x50]
  428270:	add    eax,DWORD PTR [ebp+0x1c]
  428273:	mov    DWORD PTR [ebp+0x1c],eax
  428276:	mov    eax,DWORD PTR [ebp-0x8]
  428279:	mov    ecx,DWORD PTR [ebp+0x1c]
  42827c:	xor    eax,edi
  42827e:	add    eax,ebx
  428280:	imul   eax,ecx
  428283:	mov    ecx,DWORD PTR [ebp+0x8]
  428286:	mov    edx,DWORD PTR [ebp-0x28]
  428289:	xor    ecx,edi
  42828b:	lea    ecx,[ecx+edx*1+0x3272e0]
  428292:	cmp    eax,ecx
  428294:	jb     0x427ef1
  42829a:	mov    esi,DWORD PTR [ebp+0x14]
  42829d:	mov    eax,DWORD PTR [ebp-0x20]
  4282a0:	mov    DWORD PTR [esi],eax
  4282a2:	jmp    0x4282e9
  4282a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4282a7:	mov    edx,DWORD PTR [ebp+0xc]
  4282aa:	xor    ecx,edi
  4282ac:	xor    edx,edi
  4282ae:	add    ecx,ebx
  4282b0:	add    edx,ebx
  4282b2:	cmp    ecx,edx
  4282b4:	jne    0x4282c8
  4282b6:	mov    eax,ds:0x7f642d1e
  4282bb:	imul   eax,eax,0x9f15fcef
  4282c1:	mov    ds:0x7f642d1e,eax
  4282c6:	jmp    0x4282e9
  4282c8:	mov    ecx,DWORD PTR [ebp+0x8]
  4282cb:	xor    ecx,edi
  4282cd:	add    ecx,ebx
  4282cf:	cmp    eax,ecx
  4282d1:	je     0x4282df
  4282d3:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4282dd:	jmp    0x4282e9
  4282df:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  4282e9:	pop    edi
  4282ea:	pop    esi
  4282eb:	pop    ebx
  4282ec:	leave  
  4282ed:	ret    0x18
  4282f0:	push   ebp
  4282f1:	mov    ebp,esp
  4282f3:	and    esp,0xfffffff8
  4282f6:	mov    eax,DWORD PTR [ebp+0x20]
  4282f9:	sub    esp,0x14
  4282fc:	push   ebx
  4282fd:	mov    ebx,DWORD PTR [ebp+0x14]
  428300:	push   esi
  428301:	push   edi
  428302:	cmp    eax,0xf89c85b9
  428307:	jne    0x428313
  428309:	push   0xf89c85b8
  42830e:	jmp    0x428445
  428313:	mov    eax,DWORD PTR [ebp+0x20]
  428316:	cmp    eax,0xf89c85b8
  42831b:	jne    0x428327
  42831d:	push   0xf89c85bb
  428322:	jmp    0x428445
  428327:	mov    eax,DWORD PTR [ebp+0x20]
  42832a:	cmp    eax,0xf89c85bb
  42832f:	jne    0x42833b
  428331:	push   0xf89c85ba
  428336:	jmp    0x428445
  42833b:	mov    eax,DWORD PTR [ebp+0x20]
  42833e:	cmp    eax,0xf89c85ba
  428343:	jne    0x42834f
  428345:	push   0xf89c85bd
  42834a:	jmp    0x428445
  42834f:	mov    ecx,DWORD PTR [ebp+0x20]
  428352:	mov    eax,0xf89c85be
  428357:	cmp    ecx,eax
  428359:	jne    0x428415
  42835f:	mov    eax,DWORD PTR [ebp+0x10]
  428362:	mov    DWORD PTR [esp+0xc],eax
  428366:	mov    eax,DWORD PTR [ebp+0x18]
  428369:	mov    DWORD PTR [esp+0x14],eax
  42836d:	mov    eax,DWORD PTR [ebp+0xc]
  428370:	mov    DWORD PTR [esp+0x18],eax
  428374:	mov    eax,DWORD PTR [ebp+0x8]
  428377:	mov    DWORD PTR [esp+0x10],eax
  42837b:	mov    eax,DWORD PTR [esp+0x10]
  42837f:	mov    ecx,DWORD PTR [esp+0x14]
  428383:	mov    edi,0x7510899
  428388:	xor    eax,edi
  42838a:	mov    esi,0x3272e0
  42838f:	add    eax,esi
  428391:	mov    DWORD PTR [ecx],eax
  428393:	mov    eax,DWORD PTR [esp+0xc]
  428397:	mov    eax,DWORD PTR [eax+0x194]
  42839d:	mov    ecx,DWORD PTR [eax]
  42839f:	mov    eax,DWORD PTR [esp+0xc]
  4283a3:	mov    eax,DWORD PTR [eax+0x194]
  4283a9:	mov    eax,DWORD PTR [eax]
  4283ab:	add    eax,DWORD PTR [ecx+0x3c]
  4283ae:	mov    ecx,DWORD PTR [esp+0xc]
  4283b2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4283b8:	mov    ecx,DWORD PTR [ecx+0x14]
  4283bb:	push   0x4
  4283bd:	push   0x3000
  4283c2:	push   DWORD PTR [eax+0x50]
  4283c5:	push   0x0
  4283c7:	call   ecx
  4283c9:	mov    DWORD PTR [ebx],eax
  4283cb:	mov    eax,DWORD PTR [esp+0x10]
  4283cf:	push   DWORD PTR [esp+0xc]
  4283d3:	xor    eax,edi
  4283d5:	add    eax,esi
  4283d7:	mov    DWORD PTR [esp+0x20],eax
  4283db:	lea    eax,[esp+0x20]
  4283df:	push   eax
  4283e0:	push   ebx
  4283e1:	push   DWORD PTR [esp+0x20]
  4283e5:	push   DWORD PTR [esp+0x28]
  4283e9:	push   DWORD PTR [esp+0x24]
  4283ed:	call   0x427db1
  4283f2:	mov    eax,DWORD PTR [esp+0x10]
  4283f6:	mov    ecx,DWORD PTR [ebx]
  4283f8:	xor    eax,edi
  4283fa:	add    eax,esi
  4283fc:	cmp    ecx,eax
  4283fe:	je     0x42845c
  428400:	mov    eax,DWORD PTR [esp+0x18]
  428404:	mov    ecx,DWORD PTR [esp+0x14]
  428408:	xor    eax,edi
  42840a:	add    eax,esi
  42840c:	imul   eax,DWORD PTR [esp+0x1c]
  428411:	mov    DWORD PTR [ecx],eax
  428413:	jmp    0x42845c
  428415:	mov    ecx,DWORD PTR [ebp+0x20]
  428418:	cmp    ecx,0xf89c85bd
  42841e:	jne    0x428427
  428420:	push   0xf89c85bc
  428425:	jmp    0x428445
  428427:	mov    ecx,DWORD PTR [ebp+0x20]
  42842a:	cmp    ecx,0xf89c85bc
  428430:	jne    0x428439
  428432:	push   0xf89c85bf
  428437:	jmp    0x428445
  428439:	mov    ecx,DWORD PTR [ebp+0x20]
  42843c:	cmp    ecx,0xf89c85bf
  428442:	jne    0x42845c
  428444:	push   eax
  428445:	push   DWORD PTR [ebp+0x1c]
  428448:	push   DWORD PTR [ebp+0x18]
  42844b:	push   ebx
  42844c:	push   DWORD PTR [ebp+0x10]
  42844f:	push   DWORD PTR [ebp+0xc]
  428452:	push   DWORD PTR [ebp+0x8]
  428455:	call   0x4282f0
  42845a:	mov    DWORD PTR [ebx],eax
  42845c:	mov    eax,DWORD PTR [ebx]
  42845e:	pop    edi
  42845f:	pop    esi
  428460:	pop    ebx
  428461:	mov    esp,ebp
  428463:	pop    ebp
  428464:	ret    0x1c
  428467:	push   ebp
  428468:	mov    ebp,esp
  42846a:	sub    esp,0xc
  42846d:	mov    eax,0xf89c85b9
  428472:	mov    DWORD PTR [ebp-0x8],eax
  428475:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  42847c:	mov    ecx,DWORD PTR [ebp-0x8]
  42847f:	xor    ecx,0x7510899
  428485:	add    ecx,0x3272e0
  42848b:	mov    DWORD PTR [ebp-0x4],ecx
  42848e:	mov    ecx,DWORD PTR [ebp+0xc]
  428491:	push   eax
  428492:	mov    DWORD PTR [ebp+0xc],ecx
  428495:	push   DWORD PTR [ebp+0xc]
  428498:	lea    eax,[ebp-0x4]
  42849b:	push   DWORD PTR [ebp+0x8]
  42849e:	push   eax
  42849f:	push   DWORD PTR [ebp+0xc]
  4284a2:	push   DWORD PTR [ebp-0xc]
  4284a5:	push   DWORD PTR [ebp-0x8]
  4284a8:	call   0x4282f0
  4284ad:	mov    DWORD PTR [ebp-0x4],eax
  4284b0:	mov    eax,DWORD PTR [ebp-0x4]
  4284b3:	leave  
  4284b4:	ret    0x8
